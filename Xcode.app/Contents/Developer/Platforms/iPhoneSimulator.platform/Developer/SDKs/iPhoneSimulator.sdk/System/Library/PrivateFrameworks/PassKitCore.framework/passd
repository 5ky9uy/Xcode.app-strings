defaultCenter
mainQueue
addObserverForName:object:queue:usingBlock:
currentRunLoop
alloc
init
initWithMachServiceName:
setDelegate:
resume
initWithFieldDetector:assertionManager:
registerObserver:
_mainInitialization
_protectedDataInitialization
registerConsumer:
start
stringByAppendingPathComponent:
fileURLWithPath:
databaseExistsAtURL:
removeLastEventIdentifier
initWithDelegate:
initWithURL:delegate:
initWithArchiveFileURL:databaseManager:delegate:
initWithArchiveFileURL:
setDatabaseManager:
setUsageNotificationServer:
initWithDatabaseManager:notificationManager:assertionManager:transactionProcessor:delegate:
addDelegate:
setDataSource:
initWithPushNotificationManager:databaseManager:cardFileManager:userNotificationManager:assertionManager:
initWithPushNotificationManager:databaseManager:userNotificationManager:paymentTransactionProcessor:
initWithDatabaseManager:notificationManager:delegate:
initWithPushNotificationManager:databaseManager:cardFileManager:
passUniqueIDs
initWithArray:
verifyIntegrity
startObservingEvents
startObservingUbiquityEvents
connect
nukeTasks
updateWebServiceConfiguration
startUbiquity
startExpressFelicaTransit
_logStatsIfNecessary
updateWalletVisibility
_validContactlessPassesAvailable
setPersistentFieldDetectionEnabled:
updateWalletBadgeCount
recalculateNotificationNames
_updateDefaultPassesIfNeeded
_paymentPassesAvailable
scheduleConsistencyCheckIfNecessary
sharedInstance
registerNetworkDefaultsForAppID:
_updateQuickActions
addObserver:selector:name:object:
_validateSecureElementAccesssPolicyForExpectedViolation:withCompletion:
removeDelegate:
removeObserver:
dealloc
processIdentifier
setRemoteObjectInterface:
setExportedInterface:
initWithConnection:
setExportedObject:
clearConnectionReference
_removePassLibrary:connection:
setInvalidationHandler:
raise:format:
setInterruptionHandler:
_addPassLibrary:connection:
setSecureElement:
setCardFileManager:
setUserNotificationManager:
setWebServicesCoordinator:
setPaymentWebServicesCoordinator:
setSuppressionApplicationRegistry:
setRelevantPassProvider:
setRemoteInterfacePresenter:
setIdsManager:
_removePaymentService:connection:
_addPaymentService:connection:
setPaymentTransactionProcessor:
setPaymentWebServiceCoordinator:
setNotificationServiceCoordinator:
setFelicaStateManager:
setFieldDetector:
removeListenerEndpointsForProcessIdentifier:
_removePaymentContinuityService:connection:
_addPaymentContinuityService:connection:
passType
uniqueID
addObject:
paymentPass
secureElementIdentifiers
primaryPaymentApplicationForSecureElementIdentifiers:
dpanIdentifier
paymentApplicationWithDPANIdentifier:
state
paymentType
stringByAppendingFormat:
transactionServiceURL
messageServiceURL
stateAsString
hasLocationRelevancyInfo
requestWhenInUseAuthorizationIfNeeded
passExistsWithUniqueID:
updatePass:source:
passWithUniqueIdentifier:
_sendPassUpdated:
insertPass:source:
_sendPassAdded:
passAdded:
initWithPassDiff:
setReissueBannerOnUpdate:
insertUserNotification:
recomputeRelevantPassesWithSearchMode:
localizedDescription
stringWithFormat:
userNotificationWithIdentifier:
isActive
initWithMessage:forPassUniqueIdentifier:
setNotificationIdentifier:
hasAnyTransactionsForPassWithUniqueIdentifier:
hasAnyMessagesForPassWithUniqueIdentifier:
messagesForPassWithUniqueIdentifier:
predicateWithFormat:
filteredSetUsingPredicate:
anyObject
setMessageType:
date
setMessageDate:
setContent:
insertOrUpdatePaymentMessage:forPassUniqueIdentifier:paymentApplication:performTruncation:
prepareToDeletePassWithUniqueIdentifier:
removeUserNotificationsForPassUniqueIdentifier:
passWillBeRemoved:withDiagnosticReason:
devicePaymentApplications
countByEnumeratingWithState:objects:count:
applicationIdentifier
count
markAppletsWithIdentifiersForDeletion:completion:
removeObject:
deletePassWithUniqueIdentifier:
_clearDefaultPaymentPassesIfNeeded
_sendPassRemoved:
_applyNewCatalogOfRecord:
uniqueIDIsRevoked:
updateRevocationStatus:forUniqueID:
scheduleImmediateRevocationCheck
registerDatabaseObject:
dictionaryWithObjects:forKeys:count:
postNotificationName:object:userInfo:
numberWithUnsignedInteger:
_restoreDatabaseIntegrity
passes
_catalogOfRecord
secureElementIdentifier
indexOfObject:
objectsPassingTest:
isAuxiliary
appletDataFormat
processPaymentApplicationsUpdateFromPriorPaymentApplications:toPaymentApplications:forPassUniqueIdentifier:
_paymentServices
sendPaymentPassWithUniqueIdentifier:didReceiveTransaction:
enumerateObjectsUsingBlock:
sendPaymentPassWithUniqueIdentifier:didRemoveTransactionWithIdentifier:
sendPaymentPassWithUniqueIdentifier:didReceiveMessage:
sendPaymentPassWithUniqueIdentifier:didEnableTransactionService:
sendPaymentPassWithUniqueIdentifier:didEnableMessageService:
sendPassWithUniqueIdentifier:didReceiveValueAddedServiceTransaction:
sendPaymentPassWithUniqueIdentifier:didUpdateWithFelicaProperties:
userNotificationsForPassUniqueIdentifier:ofType:
invalidateTransitBalance
passesOfType:
deleteCardWithUniqueID:forReason:withDiagnosticReason:
deleteSharedWebServiceWithDiagnosticReason:
markAllAppletsForDeletionWithExternalAuthorization:completion:
sendRemovingPassesOfType:didUpdateWithProgress:
sendRemovingPassesOfType:didFinishWithSuccess:
_migrateOsloKeychain
migrateImageArchives
_migrateSecureElementPrimaryRegionTopic
_cleanupSecureElementIfNeeded
numberOfRealPasses
introduceMissingUniqueID
introduceExtraneousUniqueID
introduceDuplicateUniqueID
fieldProperties
remoteInterfaceOfTypeIsActive:
_sendRelevantPassesChanged
addListenerEndpoint:forHostIdentifier:processIdentifier:
takeListenerEndpointForHostIdentifier:
requestForIdentifier:
presentContinuityPaymentInterfaceWithRemotePaymentRequest:completion:
stringWithUTF8String:
isEqualToString:
lostModeIsActive
allPaymentApplications
initiateDevicePassesDownload
initiateLostModeExitAuthWithCompletion:
sharedWebServiceContext
setConfigurationDate:
updateSharedWebServiceContext:
presentContactlessInterfaceForPassWithUniqueIdentifier:fromSource:completion:
insertOrUpdatePaymentTransaction:forPassUniqueIdentifier:paymentApplication:withInsertionMode:performTruncation:
processedForLocation
processedForMerchantCleanup
processedForStations
transactionType
transitType
enRoute
class
felicaStateWithPassUniqueIdentifier:paymentApplication:
isInStation
removeUserNotificationsForPassUniqueIdentifier:ofType:
initWithPaymentTransaction:forPassUniqueIdentifier:
enqueueUserNotification:
flushNotificationQueue
allObjects
devicePrimaryInAppPaymentApplication
supportsInAppPayment
availableNetworks
setWithArray:
passesForInAppPaymentOnNetworks:
sortDescriptorWithKey:ascending:
arrayWithObjects:count:
sortedArrayUsingDescriptors:
canPresentRemoteInterfaceOfType:
configuration
constraintsWithAspectFillToSize:
setOutputScale:
frontFaceImage
resizedImageWithConstraints:
imageRef
presentSetupApplePayAlert:
willSanitizePasses
_passLibraries
effectiveCatalog
sendPassAdded:catalog:
_performLibraryAction:withPassLibraries:
sendPassUpdated:catalog:
sendPassRemoved:catalog:
sendCatalogChanged:
postNotificationName:object:
copy
array
currentRelevantPassInfo
firstObject
objectForKeyedSubscript:
_shortcutItemForPassUniqueIdentifier:
passUniqueIdentifierForMostRecentVisibleTransaction
_shortcutIconWithName:
setIcon:
setType:
setLocalizedTitle:
setUserInfo:
sharedWebService
paymentSetupSupportedInRegion
initWithType:
updateDynamicApplicationShortcutItems:forBundleIdentifier:
invalidate
pathForResource:ofType:
dataWithContentsOfFile:
initWithImageData:dataType:isTemplate:
applyCatalogOfRecord:
isEquivalentToCatalog:
_sendCatalogChanged:
computeExtraneousUniqueIDs:missingUniqueIDs:
objectWithUniqueID:
_paymentPassesAvailableToPay
_validNFCPassesAvailable
hasValidNFCPayload
settings
passExistsWithPassType:
deviceSpecificPaymentApplications
primaryPaymentApplicationForPassUniqueIdentifier:
effectiveContactlessPaymentApplicationState
sendDidUpdateDefaultPaymentPassWithUniqueIdentifier:
numberWithBool:
presentNotificationWithParameters:responseHandler:
devicePrimaryPaymentApplication
supportsExpressSuica
setDefaultExpressFelicaTransitPassIdentifier:withCredential:completion:
catalogOfRecord
intValue
initWithIdentifier:accessGroup:
objectForKey:
unarchiveObjectWithData:
isKindOfClass:
dictionary
primaryAccountIdentifier
setObject:forKey:
archivedDataWithRootObject:
resetKeychainItem
defaults
migrateToSyncable
numberWithInt:
defaultShippingAddress
contactWithCleanedUpDistrict
setDefaultShippingAddress:
defaultBillingAddressForPaymentPass:
setDefaultBillingAddress:forPaymentPass:
removeUserNotification:
removePassesOfType:withDiagnosticReason:
pairingStateWithCompletion:
primaryRegion
trustedServiceManagerPushTopic
primaryRegionTopic
length
TSMURLStringByPushTopic
setRegistrationInformation:primaryRegionTopic:
lifecycleState
allAppletsWithCompletion:
standardUserDefaults
timeIntervalSinceDate:
_timeSinceDateStoredInUserDefault:
_logStats
defaultManager
removeItemAtPath:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
passWritten:source:withDiff:
passWithUniqueIdentifierWillDisappear:forReason:withDiagnosticReason:
passWithUniqueIdentifierDidDisappear:forReason:withDiagnosticReason:
catalogOfRecordWritten:
notePassWithUniqueID:isRevoked:
nukeStuff
migrateData
introduceDatabaseIntegrityProblem
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
trueUniqueIDs
readTrueUniqueIDs:
mutateTrueUniqueIDs:
storedPasses
noteLockScreenSettingsChangedForPassWithUniqueIdentifier:
noteAutomaticallyPresentSettingsChangedForPassWithUniqueIdentifier:
noteSettingsChangedForPassWithUniqueIdentifier:newSettings:
handleDatabaseIntegrityProblem
paymentPass:didUpdatePaymentApplications:toPaymentApplications:
paymentPassWithUniqueIdentifier:didReceiveMessage:
paymentPassWithUniqueIdentifier:didReceiveTransaction:
paymentPassWithUniqueIdentifier:didRemoveTransactionWithIdentifier:
paymentPassWithUniqueIdentifier:didEnableMessageService:
paymentPassWithUniqueIdentifier:didEnableTransactionService:
passWithUniqueIdentifier:didReceiveValueAddedServiceTransaction:
paymentPassWithUniqueIdentifier:didUpdateWithFelicaProperties:
shouldRecomputeRelevantPassesWithSearchMode:
relevantPassProviderDidChangeCurrentRelevantPasses:
handleContinuityPaymentBulletinActionWithIdentifier:manager:
notificationNames
handleNotificationWithName:event:
secureElement:deletionOfAppletsDidUpdateToProgress:
secureElement:deletionOfAppletsDidFinishWithSuccess:
secureElementDidEnterRestrictedMode:
secureElementDidLeaveRestrictedMode:
secureElementPairingDidChangeForReason:
inAppPaymentService:registerPaymentListenerEndpoint:forHostIdentifier:processIdentifier:completion:
inAppPaymentService:retrievePaymentListenerEndpointForHostIdentifier:completion:
paymentTransactionUpdated:forPassUniqueIdentifier:paymentApplication:
paymentTransactionProcessorDidActivate:
paymentTransactionProcessorDidDeactivate:
didReceiveRemotePaymentRequest:
didReceivePaymentHostUpdate:forRemotePaymentRequest:
didReceivePaymentClientUpdate:forRemotePaymentRequest:
didReceivePayment:forRemotePaymentRequest:
didReceivePaymentStatus:forRemotePaymentRequest:
didReceiveCancellationForRemotePaymentRequest:
didReceiveSetupRequest:
managerDevicesDidChange:
managerAccountsDidChange:
paymentPassesForContinuityDiscovery:
defaultPaymentPassForContinuityDiscovery:
continuityDisabledByUser:
deviceAvailableForContinuityPayments:
webServiceConfigurationForContinuityPayments:
thumbnailImageForPassIdentifier:size:manager:
contactlessInterfaceDidPresentFromSource:
contactlessInterfaceDidDismissFromSource:
listener:shouldAcceptNewConnection:
.cxx_destruct
_initializationState
_installedPassesQueue
_installedPassUniqueIDs
_cardFileManager
_databaseManager
_userNotificationManager
_pushNotificationManager
_paymentContinuityServices
_secureElement
_fieldDetector
_assertionManager
_paymentTransactionProcessor
_notificationServicesCoordinator
_paymentWebServiceCoordinator
_paymentHostEndpointRegistry
_distributedNotificationManager
_webServicesCoordinator
_usageNotificationServer
_idsManager
_suppressionApplicationRegistry
_relevantPassProvider
_remoteInterfacePresenter
_felicaStateManager
archiveAtPath:
archiveContext:
archiveBackgroundContext:
initWithQueue:
_queue
setPaymentServicesDelegate:
contextWithArchive:
localTargetDevice
initWithContext:targetDevice:archiver:
dateWithTimeIntervalSinceNow:
scheduleConsistencyCheck:pluggedIn:
needsConfiguration
configurePaymentServiceWithCompletion:
context
invalidateBackgroundSession
needsRegistration
unregisterDeviceWithCompletion:
diagnosticSessionWithReason:sessionHandler:
unregisterConsumer:
pushToken
setContext:
setPushToken:
passTypeIdentifier
serialNumber
backgroundDownloadRemotePassAssets:
_queue_setupBackgroundWebServiceWithCompletion:
submitVerificationCode:verificationData:forPass:completion:
secureElementID
isCheckingConsistencyForSecureElementID:
initWithPaymentWebService:delegate:
startWithCompletion:
backgroundDownloadPassesSinceLastUpdatedTag:
merchant
identifier
hexEncoding
_processValueAddedServiceTransaction:
priorityActivityCriteriaWithStartDate:
setRequireNetworkConnectivity:
regions
allKeys
_fetchPassesIfNecessaryForPushTopic:
_registerWithPaymentWebService:completion:
initWithPaymentPass:
deprovisionForRequest:completion:
removeVerificationRequestRecordForUniqueID:
appletWithIdentifier:completion:
reloadDisplayProfileOfType:
_handleDownloadedPass:
containsObject:
backgroundDownloadWithPassTypeIdentifier:serialNumber:
recalculatePushTopics
_scheduleVerificationCheckForPass:onDate:
hasPrefix:
TSMPushTopics
queueConnectionToSeverWithPushTopic:
shouldStartConsistencyCheck
setConsistencyCheckBackoffLevel:
setRequireMainsPower:
assertionsOfType:
performConsistencyCheck
valueAddedServiceTransactionWithIdentifier:
_checkVerificationStatusForUniqueID:
organizationName
maintenanceActivityCriteriaWithStartDate:
initWithValueAddedServiceTransaction:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLByAppendingPathComponent:isDirectory:
URLByAppendingPathExtension:
dataAccessor
fileURL
removeItemAtURL:error:
copyItemAtURL:toURL:error:
initWithMerchantIdentifier:localizedPassDescription:passUniqueIdentifier:
valueAddedMerchantWasPresented:
downloadPassWithCompletion:
downloadMerchantPayloadWithCompletion:
backgroundDownloadPassesForPushTopic:sinceLastUpdatedTag:
writeCard:source:error:
registerDeviceWithCompletion:
startBackgroundURLSessionWithIdentifier:context:backgroundDelegate:completion:
pushNotificationTopics
handlePushNotificationForTopic:
applyPushNotificationToken:
receivedXPCEvent:forEventStream:
handleInsertionForPaymentPass:
handleDeletionForPassTypeIdentifier:serialNumber:
paymentWebService:didDownloadPass:
paymentWebService:didDownloadPassRemoteAssets:completion:
paymentWebService:didDownloadSerialNumbersForInstalledPasses:inRegion:
paymentWebServiceBackgroundSessionDidBecomeInvalid:
deleteCardsWithAIDs:
synchronizeWithTSM
didDownloadPaymentPass:
secureElementApplets
paymentApplications
paymentPasses
interestedInAssertionOfType:
allowAcquisitionOfAssertionOfType:
assertionManager:didAcquireAssertion:
assertionManager:didInvalidateAssertion:
performScheduledActivityWithIdentifier:activityCriteria:activityContext:
submitVerificationCode:verificationData:forPass:handler:
initiateConsistencyCheck
processValueAddedServiceTransaction:
_sharedWebService
_archiver
_sharedWebServiceQueue
initWithType:identifier:reason:
type
reason
_type
_identifier
_reason
_init
_managerForEventStream:
registerObserver:forEventStream:withReplyQueue:
registerObserver:withReplyQueue:
unregisterObserver:
initWithEventStream:
setObject:forKeyedSubscript:
eventStreamManager
registerForLaunchEvents
registerObserver:forEventStream:
unregisterObserver:forEventStream:
_streamToStreamManagerMap
_stateQueue
observer
setObserver:
replyQueue
setReplyQueue:
_observer
_replyQueue
UTF8String
objectAtIndexedSubscript:
addIndex:
removeObjectsAtIndexes:
_eventStream
_observers
pk_weakObjectsHashTableUsingPointerPersonality
_removeAllAssertionCoordinators
_removeAssertionCoordinator:
_addAssertionCoordinator:
addObjectsFromArray:
invalidateAllAssertions
assertionCoordinator:assertionExistsOfType:
assertionCoordinator:canAcquireAssertion:
assertionCoordinator:didAcquireAssertion:
assertionCoordinator:didInvalidateAssertion:
_coordinatorListener
_coordinators
_managerSerialQueue
passesAllAccess
paymentAllAccess
pointerValue
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
_sanitizePassIfNeeded:
setWithObject:
catalogChanged:withNewPasses:
_entitledForObject:forActions:
passUpdated:
passRemoved:
removingPassesOfType:didUpdateWithProgress:
removingPassesOfType:didFinishWithSuccess:
_entitlementFilteredPasses:
registrationIsSupportedInCurrentRegionWithWebService:completion:
hasRemoteDevices
remoteDevices
sendSetupRequest:appDisplayName:completion:
presentContactlessInterfaceForPassWithUniqueIdentifier:fromSource:handler:
paymentPresentation
_entitledForPassType:uniqueIdentifier:actions:
passPresentationSuppression
remoteProcessBundleIdentifier
applicationIsRegisteredWithBundleIdentifier:
registerApplicationWithBundeIdentifier:
remoteProcessIdentifier
getCatalog:passes:ofPassTypes:limitResults:
_sanitizePasses:
writeCatalogOfRecord:source:
notifyPassUsed:fromSource:
inAppPaymentPassesForNetworks:capabilities:withHandler:
_paymentPassesForNetworks:capabilities:webPayment:
hasInAppPaymentPassesForNetworks:capabilities:withHandler:
inAppPayments
inAppPaymentsPrivate
initWithSet:
acceptedForSupportedNetworkIdentifiers:merchantCapabilities:paymentMode:webPayment:webService:
remoteProcessApplicationIdentifier
applicationID
_filteredPasses:forApplicationIdentifier:
_filteredPasses:forWebDomain:
arrayWithCapacity:
passUniqueIdentifiersForFieldProperties:
passesEnabledForValuedAddedServicesWithAutomaticSelection:
associatedWebDomains
associatedApplicationIdentifiers
countPassesOfType:handler:
countPassesOfType:
isDeletingAllApplets
isWalletVisible
archiveData
dataForBundleResourceNamed:withExtension:
passWithPassTypeID:serialNumber:
setHour:
currentCalendar
dateByAddingComponents:toDate:options:
candidatePassesOfStyle:activatingBetweenStart:end:
initWithCapacity:
embeddedLocations
CLLocation
distanceFromLocation:
numberWithDouble:
hasEqualCoordinatesToLocation:
doubleValue
relevantDate
dateByAddingTimeInterval:
sortUsingComparator:
dictionaryWithCapacity:
lastObject
classForPassType:
defaultSettings
settingsForPass:
manifestHash
initWithData:warnings:orError:
passExistsWithPassTypeID:serialNumber:
_entitledForUniqueID:forActions:
fetchContentForUniqueID:withCompletion:
containedImageSet
purge
getImageSetContainerForUniqueID:ofType:displayProfile:handler:
fetchImageSetContainerForUniqueID:ofType:withDisplayProfile:completion:
updateSettings:forObjectWithUniqueIdentifier:
noteObjectSharedWithUniqueID:
initWithData:error:
passesAddSilently
_addPasses:withHandler:
localizedStringFromNumber:numberStyle:
valueWithPointer:
updatePassWithUniqueIdentifier:handler:
personalizePassWithUniqueIdentifier:contact:personalizationToken:requiredPersonalizationFields:personalizationSource:handler:
hasCandidatePasses
sanitizePaymentApplications
teamID
associatedPassTypeIdentifiers
_entitledForPassTypeID:teamID:associatedPassTypeIdentifiers:forActions:
getPassTypeID:teamID:associatedPassTypeIdentifiers:forUniqueID:
passTypeIDs
teamIDs
intersectsSet:
_writePass:error:
updateSettings:forPassWithUniqueIdentifier:
primaryPassDiff
restartUbiquity
removePassesOfType:withDiagnosticReason:handler:
shuffle:
initWithTitle:message:
deleteAndRecreateDatabase
nukeCards
removeAllUserNotifications
openPaymentUI:
requestContactlessInterfaceSuppressionWithHandler:
presentContactlessInterfaceForDefaultPassFromSource:handler:
getPassesWithUniqueIdentifiers:handler:
getPassUniqueIdentifiersForFieldProperties:handler:
updateSettings:forObjectWithUniqueID:
updateObjectWithUniqueIdentifier:handler:
getArchivedObjectWithUniqueID:handler:
getDataForBundleResourceNamed:withExtension:objectUniqueIdentifier:handler:
migrateDataWithHandler:
noteAccountChangedWithHandler:
noteAccountDeletedWithHandler:
removeAllScheduledActivities
nukeDatabaseAndExit
shuffleGroups:
issueWalletUserNotificationWithTitle:message:
sendUserEditedCatalog:
logDelayExitReasons
fetchHasCandidatePasses:
fetchCurrentRelevantPassInfo:
getRouteRelevantPassesForLocation:handler:
getDiffForPassUpdateUserNotificationWithIdentifier:handler:
enabledValueAddedServicePassesWithHandler:
isRemovingPassesOfType:handler:
isPassbookVisibleWithHandler:
inAppPaymentPassesForNetworks:withHandler:
hasInAppPaymentPassesForNetworks:withHandler:
hasWebPaymentPassesForNetworks:capabilities:withHandler:
webPaymentPassesForNetworks:capabilities:withHandler:
inAppPrivateLabelPaymentPassesForApplicationIdentifier:withHandler:
hasInAppPrivateLabelPaymentPassesForApplicationIdentifier:withHandler:
inAppPrivateLabelPaymentPassesForWebDomain:withHandler:
hasInAppPrivateLabelPaymentPassesForWebDomain:withHandler:
replacePassWithPassData:handler:
addPassesWithData:handler:
removePassWithUniqueID:diagnosticReason:handler:
getPassesAndCatalogOfPassTypes:limitResults:withHandler:
getPassesWithHandler:
getPassesOfType:handler:
getManifestHashAndSettingsForPassTypeID:serialNumber:handler:
getPassWithPassTypeID:serialNumber:handler:
getPassWithUniqueID:handler:
getContentForUniqueID:handler:
getImageSetForUniqueID:ofType:displayProfile:handler:
isPaymentPassActivationAvailableWithHandler:
submitVerificationCode:verificationData:forPassWithUniqueID:handler:
hasPassesOfType:handler:
canAddPassesOfType:handler:
defaultPaymentPassWithHandler:
canAddFelicaPassWithHandler:
expressFelicaTransitPassWithHandler:
serviceResumed
serviceSuspended
_writePass:withSettings:error:
secureElement
paymentWebServicesCoordinator
webServicesCoordinator
cardFileManager
databaseManager
userNotificationManager
relevantPassProvider
suppressionApplicationRegistry
usageNotificationServer
remoteInterfacePresenter
idsManager
delegate
_whitelist
_userNotifications
_paymentWebServicesCoordinator
_delegate
longLongValue
_copyTableClusteredValuesWithValues:
_insertValues:intoTable:withPersistentID:database:
enumerateKeysAndObjectsUsingBlock:
performTransactionWithBlock:
initWithPersistentID:inDatabase:
databasePropertyToSetClientProperty:
databaseValueForProperty:clientValue:
joinClauseForProperty:
databaseTable
_deleteRowFromTable:usingColumn:
foreignDatabaseTablesToDelete
foreignKeyColumnForTable:
initWithFormat:
statementHasRowAfterStepping:
prepareStatementForSQL:cache:usingBlock:
numberWithLongLong:
initWithString:
disambiguatedSQLForProperty:
appendString:
null
initWithObjectsAndKeys:
setValuesWithDictionary:
statementDidFinishAfterStepping:
valuesforProperties:
getObjects:
duplicateEntityAssigningNewPersistentID:
existsInDatabase
columnNamesForTable:
primaryKeyColumnNameForTable:
componentsJoinedByString:
database
foreignDatabaseTableForProperty:
foreignDatabaseColumnForProperty:
copyDatabaseDictionaryToSetClientDictionary:
databasePropertyToGetClientProperty:
associationPropertyForEntityClass:
applyPropertySetters:toObject:withProperties:values:
valueForProperty:
setValue:forProperty:
setExternalValuesWithDictionary:
valueForExternalProperty:
deleteFromDatabase
getValuesForProperties:withApplier:
initWithPropertyValues:inDatabase:
duplicateEntity
persistentID
_database
_persistentID
setNotificationServicesDelegate:
initWithDelegate:archiveName:
nukeArchive
notificationServices
passesForNotificationService:
updateNotificationService:
_updateRegistrationStatusForPass:notificationService:requestedRegistrationStatus:refreshRegistrationIfPossible:
notificationServicesForPushTopic:
getUpdatesTaskWithNotificationService:
performTask:
notificationServiceIsEnabledForAnyPasses:
pushTopic
matchesNotificationService:
serviceType
supportsDPANNotifications
supportsFPANNotifications
requestedStatus
_registrationTaskSucceeded:withAuthenticationToken:
_notificationUpdatesTaskSucceeded:withResult:
_invokeAndClearHandlerForTask:withResult:
notificationService
_performRegistrationTaskForPaymentApplication:notificationService:completionTask:
registrationStatusForNotificationServiceType:passUniqueIdentifier:
lastUpdatedDateForNotificationServiceType:passUniqueIdentifier:
timeIntervalSinceNow
lastUpdatedTagForNotificationServiceType:passUniqueIdentifier:
getSpecificUpdatesTaskWithNotificationService:dpanIdentifier:lastUpdatedTag:
pertainsToNotificationService:andDPANIdentifier:
containsTaskPassingTest:
settingEnabled:forPassWithUniqueIdentifier:
_performRegistrationForPassUniqueIdentifier:paymentApplication:notificationService:
_cancelAllTasksForPaymentApplication:notificationService:
_performDeregistrationForPassUniqueIdentifier:paymentApplication:notificationService:
_clearStoredDataForPassUniqueIdentifier:notificationService:
paymentApplicationsForNotificationService:
dataWithJSONObject:options:error:
SHA256Hash
certificates
base64EncodedStringWithOptions:
registerTaskWithNotificationService:registrationData:signature:certificates:dpanIdentifier:completionTask:
registerTaskWithNotificationService:registrationData:signature:certificates:completionTask:
signChallenge:forPaymentApplication:withCompletion:
deregisterTaskWithNotificationService:dpanIdentifier:
updateRegistrationStatus:forNotificationServiceType:passUniqueIdentifier:
updateAuthenticationToken:forNotificationService:
_recalculatePushTopics
updateLastUpdatedDate:forNotificationServiceType:passUniqueIdentifier:
updateLastUpdatedTag:forNotificationServiceType:passUniqueIdentifier:
setLastUpdatedTag:
setLastUpdatedDate:
deleteAllTransactionsFromPaymentPassWithUniqueIdentifier:
deleteAllMessagesFromPaymentPassWithUniqueIdentifier:
setAuthenticationToken:
completionTask
passWithPaymentApplication:
authenticationToken
appLaunchToken
lastUpdatedTag
notifications
passUniqueIdentifierWithPaymentApplication:
updateLastUpdatedDate:forNotificationService:
updateLastUpdatedTag:forNotificationService:
updateAppLaunchToken:forNotificationService:
PKStringForKey:
passUniqueIdentifierWithPrimaryAccountIdentifier:
paymentNetworkIdentifier
countForObject:
_processTransactionDictionary:forPassUniqueIdentifier:paymentApplication:performTruncation:
_processMessageDictionary:forPassUniqueIdentifier:paymentApplication:performTruncation:
paymentTransactionWithSource:dictionary:hasNotificationServiceData:
processPaymentTransaction:forPassUniqueIdentifier:paymentApplication:
paymentMessageWithDictionary:
setByRemovingObject:
pertainsToNotificationService:
cancelTasksPassingTest:
removeObjectForKey:
task:gotResult:
task:willRetryAfterMinimumDelay:
taskSucceeded:
taskFailed:
task:encounteredError:
task:encounteredWarnings:
taskRequestedReauthentication:
handlePushEnabledForPass:withNotificationService:
handlePushDisabledForPass:withNotificationService:
handleInsertionOfPass:withNotificationService:
handleDeletionOfPass:withNotificationService:
handleUpdateOfPass:toPass:oldNotificationService:newNotificationService:
requestUpdatesFromNotificationService:passUniqueIdenitifer:
_pushTopics
_taskManager
_taskToHandlerMap
valueForKey:
boolValue
copyWithZone:
bindToStatement:bindingIndex:
SQLForEntityClass:
SQLJoinClausesForEntityClass:
property
_property
predicateWithProperty:value:comparisonType:
objCType
value
comparisonType
_comparisonTypeFormat
predicateWithProperty:equalToValue:
predicateWithProperty:notEqualToValue:
predicateWithProperty:greaterThanOrEqualToValue:
predicateWithProperty:lessThanOrEqualToValue:
predicateWithProperty:greaterThanValue:
predicateWithProperty:lessThanValue:
predicateWithProperty:bitwiseAndValue:
predicateWithProperty:bitwiseNotAndValue:
_comparisonType
_value
bindToSelectStatement:bindingIndex:
isNegative
values
query
stringWithString:
arrayWithObjects:
copySelectSQLWithProperties:
containsPredicateWithProperty:values:
containsPredicateWithProperty:query:queryProperty:
doesNotContainPredicateWithProperty:values:
queryProperty
_negative
_query
_queryProperty
_values
matchesNull
isNotNullPredicateWithProperty:
isNullPredicateWithProperty:
_matchesNull
booleanValue
truePredicate
falsePredicate
_booleanValue
initWithObjects:
predicateMatchingAnyPredicates:
predicateWithProperty:values:comparisonType:
predicateWithProperty:equalToValues:
negatedPredicate:
predicates
objectAtIndex:
unionSet:
predicateMatchingAllPredicates:
predicateWithProperty:notEqualToValues:
_unary
_trueIfNoPredicates
_combinationOperation
_predicates
appendFormat:
predicateWithAssociatedEntityClass:
_associatedEntityClass
_associatedPredicate
predicate
limitCount
initWithLongLong:
enumeratePersistentIDsUsingBlock:
entityClass
_newSelectSQLWithProperties:columns:
setOrderingDirections:
setOrderingProperties:
enumeratePersistentIDsAndProperties:usingBlock:
_newSelectSQLWithProperties:
initWithDatabase:descriptor:
copyEntityIdentifiers
countOfEntities
createTemporaryTableWithName:properties:
deleteAllEntities
queryDescriptor
_descriptor
allocWithZone:
setEntityClass:
setLimitCount:
orderingDirections
orderingProperties
setPredicate:
returnsDistinctEntities
setReturnsDistinctEntities:
_entityClass
_limitCount
_orderingDirections
_orderingProperties
_predicate
_returnsDistinctEntities
queryWithDatabase:predicate:
arrayWithObject:
_aggregateValueForProperty:function:predicate:database:
queryWithDatabase:predicate:orderingProperties:
queryWithDatabase:predicate:orderingProperties:orderingDirections:
queryWithDatabase:predicate:orderingProperties:orderingDirections:limit:
anyInDatabase:predicate:
countInDatabase:predicate:
maxValueForProperty:predicate:database:
minValueForProperty:predicate:database:
setObjectOrNull:forKey:
setLongLong:forKey:
groupingID
expirationDate
sequenceCounter
isVoided
setBool:forKey:
hasStoredValue
userInfo
isValidJSONObject:
sharingMethod
setInteger:forKey:
sharingURL
sharingText
displayProfile
backgroundColor
string
foregroundColor
labelColor
stripColor
passStyle
tallCode
hasBackgroundImage
hasStripImage
primaryAccountNumberSuffix
sanitizedPrimaryAccountNumber
supportsDefaultCardSelection
supportsSerialNumberBasedProvisioning
requiresTransferSerialNumberBasedProvisioning
isPaymentOptionSelectable
isCobranded
_insertionDictionaryWithPass:passType:
updateWithPass:webService:transactionSevice:messageService:
initWithPass:passType:webService:transactionService:messageService:inDatabase:
_updateDictionaryWithPass:
_updateWithWebService:
_updateWithTransactionService:
_updateWithMessageService:
updateLocationsWithPass:
embeddedBeacons
updateWithBeacons:
nfcPayload
updateWithNFCPayload:
updateWithAssociatedPassTypeIdentifiers:
updateWithPaymentApplications:
updateWithAssociatedApplicationIdentifiers:
updateWithAssociatedWebDomains:
numberWithInteger:
localLocationsURL
anyInDatabase:withURL:
queryWithDatabase:passPID:locationSourcePID:
insertLocationSourceWithURL:forPass:type:inDatabase:
insertLocations:forSource:inDatabase:
deleteEntitiesForPass:inDatabase:
insertNFCPayload:forPass:inDatabase:
insertBeacons:forPass:inDatabase:
updatePaymentApplications:forPass:inDatabase:
passTransactionService
insertPassNotificationServiceWithNotificationService:inDatabase:
_updateWithPassTransactionService:
updateWithNotificationService:
passMessageService
_updateWithPassMessageService:
insertAssociatedApplicationIdentifiers:forPass:inDatabase:
insertAssociatedPassTypeIdentifiers:forPass:inDatabase:
insertAssociatedWebDomains:forPass:inDatabase:
predicateForValidStyle
_propertiesForPass
_realPassInDatabase:withProperties:values:pID:
integerValue
_realPassesInDatabase:predicate:orderedBy:
_realPass
_propertySettersForUpdateContext
_propertySettersForGroupingProfile
unsignedIntegerValue
associatedPassTypeIdentifiersInDatabase:forPass:
dateWithTimeIntervalSinceReferenceDate:
predicateForUniqueID:
predicateForPassType:
predicateForWebService:
predicateForGroup:
_predicateForSerialNumber:
predicateForNotificationService:
predicateForPaymentApplicationIdentifier:withSecureElementIdentifier:
predicateForPaymentApplicationIdentifier:withSecureElementIdentifiers:
predicateForPrimaryAccountIdentifier:
queryWithDatabase:passPID:
_propertySettersForPass
_propertySettersForDisplayProfile
setDisplayProfile:
locationsInDatabase:forPassPID:withSourceType:
setEmbeddedLocations:
beaconsInDatabase:forPassPID:
setEmbeddedBeacons:
anyInDatabase:forPassPID:
setNFCPayload:
associatedPassTypeIdentifiersInDatabase:forPassPID:
setAssociatedPassTypeIdentifiers:
paymentApplicationsInDatabase:forPassPID:
setPaymentApplications:
associatedApplicationIdentifiersInDatabase:forPassPID:
setAssociatedApplicationIdentifiers:
associatedWebDomainsInDatabase:forPassPID:
setAssociatedWebDomains:
setUniqueID:
setPassTypeIdentifier:
setTeamID:
setSerialNumber:
setSequenceCounter:
setOrganizationName:
setRelevantDate:
setExpirationDate:
setVoided:
setWebServiceURL:
JSONObjectWithData:options:error:
setManifestHash:
setShareCount:
setSharingMethod:
setSharingURL:
setSharingText:
setIngestedDate:
setModifiedDate:
setRevoked:
setHasStoredValue:
setPassType:
setPrimaryAccountIdentifier:
setPrimaryAccountNumberSuffix:
setSanitizedPrimaryAccountNumber:
setSupportsDPANNotifications:
setSupportsFPANNotifications:
setSupportsDefaultCardSelection:
setSupportsSerialNumberBasedProvisioning:
setRequiresTransferSerialNumberBasedProvisioning:
setPaymentOptionSelectable:
setCobranded:
setPassStyle:
setBackgroundColor:
setForegroundColor:
setLabelColor:
setStripColor:
setTallCode:
setHasBackgroundImage:
setHasStripImage:
setPassUniqueIdentifier:
setLastModifiedTag:
setLastModifiedDate:
setLastModifiedSource:
setPassTypeID:
setGroupingID:
setNFCEnabled:
insertPass:withPassType:webService:transactionService:messageService:inDatabase:
passesInDatabase:matchingPredicate:
enumerateUpdateContextsForQuery:withHandler:
enumerateOrganizationNamesForQuery:withHandler:
enumeratePassesAndGroupingProfilesForQuery:withHandler:
anyInDatabase:withUniqueID:
anyInDatabase:withPassType:
anyInDatabase:withWebService:
anyInDatabase:withGroup:
anyInDatabase:withPassType:serialNumber:
anyInDatabase:withWebService:serialNumber:
anyInDatabase:withNotificationService:
anyInDatabase:withApplicationIdentifier:secureElementIdentifier:
anyInDatabase:withApplicationIdentifier:secureElementIdentifiers:
anyInDatabase:withPrimaryAccountIdentifier:
queryWithDatabase:passType:
queryWithDatabase:group:
predicateForHasAnyWebService
predicateForPassTypeIdentifierHash:
predicateForAssociatedPassTypeIdentifierHash:
predicateForNFCMessageRequiresCertificate:
predicateForPaymentApplicationSecureElementIdentifiers:
predicateForPaymentApplicationSecureElementIdentifier:
predicateForPaymentApplicationState:
predicateForPaymentApplicationSupportInAppPayment:
predicateForPaymentApplicationNetworks:
predicateForStyle:
updateWithPushRegistrationStatus:date:
updateWithLastModifiedTag:
updateWithLastModifiedSource:
updateBackgroundColorWithPass:
updateTallCodeValueWithPass:
updateWithDefaultPaymentApplication:
updateWithGroup:
updateWithRevocationStatus:
pass
updateContext
groupingProfile
passFlavor
webService
transactionService
messageService
passNotificationServiceForType:
group
defaultPaymentApplication
revoked
getPushRegistrationStatus:date:
passUniqueIdentifier
setSecureElementIdentifier:
paymentApplicationIdentifier
setPaymentApplicationIdentifier:
forceTransactionGeneration
setForceTransactionGeneration:
transactionDate
setTransactionDate:
_forceTransactionGeneration
_passUniqueIdentifier
_secureElementIdentifier
_paymentApplicationIdentifier
_transactionDate
credential
setCredential:
completion
setCompletion:
_credential
_completion
mutableCopy
minusSet:
_queueFelicaStateFetchRequest:
_ingestAppletStateHistory:withTransactionDate:forceTransactionGeneration:forPaymentApplication:withPassUniqueIdentifier:skipQueuedRequestSanitization:
isBlacklisted
needsStationProcessing
_resolveStationCodesForAppletState:paymentApplication:passUniqueIdentifier:
updateFelicaTransitAppletStateWithHistory:transactionDate:forPaymentApplication:withPassUniqueIdentifier:forceTransactionGeneration:completion:
indexesOfObjectsPassingTest:
_queueExpressFelicaTransitMutationRequest:
decodeHexadecimal
greenCarOriginStationCode
greenCarDestinationStationCode
shinkansenOriginStationCode
shinkansenDestinationStationCode
shinkansenSecondaryOriginStationCode
shinkansenSecondaryDestinationStationCode
setStationCodes:
setSourceIdentifier:
_setExternalTransitLookupParameters:
initWithRequest:
_mapkit_underlyingGEOError
mapItems
_externalTransitStationCode
name
updateFelicaTransitAppletStateWithStationNames:forPaymentApplication:withPassUniqueIdentifier:
startWithCompletionHandler:
_handleSEEventFromTSMForAID:
passWithPaymentApplicationIdentifier:secureElementIdentifiers:
fetchAndCacheFelicaTransitStateForPassUniqueIdentifier:secureElementIdentifier:paymentApplicationIdentifier:
stopExpressFelicaTransit
sanitizeApplets
processTransactionEventWithHistory:transactionDate:forPaymentApplication:withPassUniqueIdentifier:
updateFelicaTransitAppletStateWithHistory:transactionDate:forPaymentApplication:withPassUniqueIdentifier:
felicaAppletStateWithPassUniqueIdentifier:paymentApplication:completion:
_notificationManager
_transactionProcessor
_accessQueue
_expressModesEnableable
_expressModesEnabled
_appletsNeedSanitization
_expressModesNeedUpdate
_outstandingExpressState
_notificationManagerQueue
_notificationNames
_processingFelicaTransitRequests
_felicaTransitRequests
_processingExpressFelicaTransitMutations
_expressFelicaTransitRequests
_lockoutStateChangedNotifyToken
_authenticationLockedOut
latitude
initWithDouble:
longitude
altitude
maxDistance
hasAltitude
relevantText
insertIndexedLocationWithLatitude:longitude:forLocation:database:
initWithLocation:source:inDatabase:
_propertySettersForLocation
_predicateForPassPID:
_predicateForPass:
_locationsInDatabase:matchingPredicate:
_predicateForLocationSourcePID:
_predicateForLocationSource:
_predicateForSourceType:
setLatitude:
setLongitude:
setMaxDistance:
setAltitude:
setName:
setRelevantText:
locationsInDatabase:forPass:
locationsInDatabase:forPassPID:
locationsInDatabase:forLocationSource:
locationsInDatabase:forLocationSourcePID:
queryWithDatabase:locationSourcePID:
initWithIdentifier:
_clearLocationSearchTimer
_clearBeaconSearchTimer
initWithEffectiveBundle:
authorizationStatusForBundle:
_startCardSearchUpdatingWithCachedProximity:refreshingProximity:searchMode:
_startCardSearchUpdatingWithCachedProximity:refreshingProximity:
requestWhenInUseAuthorization
_relevantCardExpirationTimerFired
_tearDownExitFenceTimerFired
_clearPersistedProximityInfo
removeAllObjects
_addDateRelevantAndLocationPendingCardsForStyle:locationAvailable:
_loadPersistedLocationInfoIfNecessary
_updateAndSendRelevantCards
_startLocationSearchIfNecessaryWithSearchMode:
_startBeaconSearchIfNecessary
hasLocationsForPassWithUniqueID:
setEndDate:
horizontalAccuracy
coordinate
initWithCenter:radius:identifier:
startMonitoringForRegion:
UUIDString
initWithProximityUUID:identifier:
setStartDate:
monitoredRegions
stopMonitoringForRegion:
_proxPendingPassExistsWithLocation
_isDoingLocationSearch
setDesiredAccuracy:
location
_handleNewLocation:forceAcceptance:from:
startUpdatingLocation
_beginLocationSearchTimer
_locationIsNewEnoughAndHasGoodAccuracy:
_stopLocationSearch
stopUpdatingLocation
_locationSearchTimerFired:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
_isDoingBeaconSearch
_proxPendingPassExistsWithBeacon
startRangingBeaconsInRegion:
_beginBeaconSearchTimer
_stopBeaconSearch
stopRangingBeaconsInRegion:
_beaconSearchTimerFired:
_handleNewBeacons:
hasCandidatePassesOfStyle:
unlocatedCandidatePassesOfStyle:activatingBetweenStart:end:
locatedCandidatePassesOfStyle:activatingBetweenStart:end:
locatedDatelessCandidatePassesOfStyle:
style
_groupForPass:inGroups:
addPass:forDate:
addPass:forLocation:
addPass:forBeacon:
_unscheduleEagerRecalculation
_insertPass:intoGroups:forDate:
locationsByUniqueIDInBoundingBoxOfRegion:
_findMatchingLocation:beacon:forPass:passStyleRadius:usingNearbyLocations:
_insertPass:intoGroups:forLocation:
_insertPass:intoGroups:forBeacon:
proximityUUID
_sendGroups:
_shouldScheduleEagerRecalculation
allValues
_scheduleEagerRecalculationWithPasses:fenceLocation:minRadius:beaconUUIDs:
locationsForUniqueID:
major
unsignedShortValue
minor
proximityUUIDAsString
compare:
sharedConnection
effectiveBoolValueForSetting:
sortedPasses
seedPass
iconData
titleText
bodyText
initWithIdentifier:iconData:title:body:requiresPasscode:bundleName:userInfo:
setCardItems:
setWithObjects:
handleSignificantTimeChangedEvent
timestamp
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
_relevancySerialQueue
_startedObservingEvents
_proximityManager
_authorizationStatus
_backingManager
_passbookAuthorizationStatus
_lastLocation
_roughLocation
_locationSearchStartDate
_locationSearchTimer
_locationSearchState
_locationSearchMode
_lastBeacons
_beaconSearchTimer
_beaconSearchState
_lastBacklightLevel
_dateRelevantCards
_proxPendingCards
_cardItemsController
_currentRelevantPassInfo
notificationIconImage
dataWithCGImage:
_dateText
_addPass:
_addPass:withRelevantText:
localizedString:
_seedPass
_passes
_relevantDate
_relevantText
dataWithContentsOfFile:options:error:
initForReadingWithData:
setRequiresSecureCoding:
decodeObjectOfClass:forKey:
finishDecoding
archiveRootObject:toFile:
decodeObjectOfClasses:forKey:
PKDateForKey:
PKArrayContaining:forKey:
isToday
isYesterday
isTomorrow
stringByAppendingString:
setDateStyle:
setTimeStyle:
stringFromDate:
initWithDelegate:atURL:
setRepeating:
setRepeatInterval:
setRequireScreenSleep:
_ubiquityManager
restart
_queue_passUniqueIDs
_passIfExistsWithUniqueID:
_deletePossibleInvalidCardWithUniqueID:
catalogWithContentsOfURL:nonUbiquitousCatalogURL:
_objectURLForUniqueID:
_queueContentFromObjectURL:
path
fileExistsAtPath:
_queue_imageSetContainerForUniqueID:ofType:withDisplayProfile:
_queue_writeCard:diff:
updateUbiquitousPass:
_checkRevocationStatusForPass:withCompletion:
writeToURL:nonUbiquitousCatalogURL:atomically:
updateUbiquitousCatalog:
_queue_deleteCardWithUniqueID:
removeUbiquitousPassWithUniqueID:
initWithFileURL:error:processingQueue:
setDataAccessor:
_performCacheMaintenanceActivity
_performRevocationCheckActivity
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
lastPathComponent
pathExtension
URLByResolvingSymlinksInPath
_cacheURLForUniqueID:
_recursivelyCheckRevocationStatusForPassUniqueIdentifiers:
revocationStatusWithCompletion:
_queue_cardWithUniqueID:
initWithFileURL:error:
contentWithFileURL:
createXPCContainerForImageSetWithType:displayProfile:screenScale:screenSize:suffix:fileURL:cacheURL:
isEqualToData:
moveItemAtURL:toURL:error:
diff:
updateImageSetForURL:withCacheURL:
initWithURL:options:error:
serializedRepresentation
stringByAppendingPathExtension:
existingCardUniqueIDs
existingCardWithUniqueID:
ubiquitousCardDidChange:
ubiquitousCardWithUniqueIDRemoved:
existingCatalog
localNonUbiquitousCatalogURL
ubiquitousCatalogDidChange:
serializedFileWrapperFromPassURL:
_cardsURL
initFileURLWithPath:
stringByDeletingPathExtension
initWithDomain:code:userInfo:
absoluteString
initWithPushTopic:serviceType:serviceURL:deviceIdentifier:inDatabase:
_predicateForPushTopic:
_predicateForServiceURL:
_predicateForServiceType:
_notificationServicesInDatabase:matchingPredicate:
_propertySettersForPaymentTransaction
lastUpdatedDate
lastUpdatedTagDate
setPushTopic:
setServiceType:
URLWithString:
setServiceURL:
setAppLaunchToken:
setDeviceIdentifier:
setLastUpdatedTagDate:
insertNotificationServiceWithPushTopic:serviceType:serviceURL:deviceIdentifier:inDatabase:
anyInDatabase:withPushTopic:
anyInDatabase:withServiceURL:
anyInDatabase:withPushTopic:serviceType:serviceURL:
notificationServicesInDatabase:
notificationServicesInDatabase:withPushTopic:
notificationServicesInDatabase:withPushTopic:serviceType:serviceURL:
_predicateForNotificationServicePID:
updateWithPushToken:
updateWithAuthenticationToken:
updateWithAppLaunchToken:
updateWithLastUpdatedDate:
updateWithLastUpdatedTag:
setMaxConcurrentOperationCount:
_handleUbiquityIdentityChanged:
removeObserver:name:object:
removeFilePresenter:
cancelAllOperations
_startWithToken:
aa_primaryAppleAccount
enabledDataclasses
ubiquityIdentityToken
URLForUbiquityContainerIdentifier:
isUbiquitousItemAtURL:
setUbiquitousURL:
_queue_startAlreadyUbiquitous
_queue_startNotYetUbiquitousWithDestinationURL:
startDownloadingUbiquitousItemAtURL:error:
_queue_removeFromFilePresenter
ubiquitousURL
evictUbiquitousItemAtURL:error:
initWithFilePresenter:
_urlForCardWithUniqueID:relativeToDirectoryURL:
coordinateWritingItemAtURL:options:error:byAccessor:
_urlForCatalogRelativeToDirectoryURL:
coordinateReadingItemAtURL:options:error:byAccessor:
_queue_addToFilePresenter
_queue_mergeUbiquityWithLocalStore
setUbiquitous:itemAtURL:destinationURL:error:
coordinateWritingItemAtURL:options:writingItemAtURL:options:error:byAccessor:
removeObjectsInArray:
_queue_copyPassesFromUbiquityToLocalStore:
_queue_copyPassesFromLocalStoreToUbiquity:
_queue_comparePassesAndTakeNewerVersion:
_queue_compareCatalogsAndTakeNewerVersion
_attemptCoordinatedReadWithoutChangesAtURL:withAccessor:
getResourceValue:forKey:error:
modificationDate
isNewerThanCatalog:
_queue_copyCatalogToUbiquity:
_queue_copyCatalogToLocalStore:
addFilePresenter:
_queue_addedToFilePresenter
_queue_resolveURLIfNecessary:fileCoordinator:
unresolvedConflictVersionsOfItemAtURL:
replaceItemAtURL:options:error:
setResolved:
_presentedSubitemDidChangeAtURL:
_queue_resolveURLIfNecessary:
URLByDeletingLastPathComponent
URLByDeletingPathExtension
_queue_handlePassUpdate:
_queue_handleCatalogUpdate
relinquishPresentedItemToReader:
relinquishPresentedItemToWriter:
savePresentedItemChangesWithCompletionHandler:
accommodatePresentedItemDeletionWithCompletionHandler:
presentedItemDidMoveToURL:
presentedItemDidChange
presentedItemDidGainVersion:
presentedItemDidLoseVersion:
presentedItemDidResolveConflictVersion:
accommodatePresentedSubitemDeletionAtURL:completionHandler:
presentedSubitemDidAppearAtURL:
presentedSubitemAtURL:didMoveToURL:
presentedSubitemDidChangeAtURL:
presentedSubitemAtURL:didGainVersion:
presentedSubitemAtURL:didLoseVersion:
presentedSubitemAtURL:didResolveConflictVersion:
presentedItemURL
presentedItemOperationQueue
primaryPresentedItemURL
presentedSubitemUbiquityDidChangeAtURL:
setLastPresentedItemEventIdentifier:
lastPresentedItemEventIdentifier
_operationQueue
_ubiquityState
_ubiquityStartToken
_addedToFilePresenter
_ubiquitousURL
serializedFileWrapper
initWithSerializedRepresentation:
writeToURL:options:originalContentsURL:error:
cStringUsingEncoding:
unsignedLongLongValue
numberWithUnsignedLongLong:
archive
_createDatabaseAtURL:
anyInDatabase:withPassTypeID:
_predicateForType:
_registeredPasses:
_validPassPredicate
pk_arrayByApplyingBlock:
_passesFilteredByAutomaticallyPresentPassEnabled:
settingEnabled:forObject:
_predicateForStyle:
_locatedPredicate
_candidatePassesOfStyle:activatingBetweenStart:end:furtherPredicate:
_unlocatedPredicate
_locatedCandidatePassesOfStyle:matchingFurtherPredicate:
locationsByPassUniqueIDWithBoundingBox:inDatabase:
_databaseWebService:
_registeredPass:
_paymentNetworkIdentifiersForPaymentNetworks:
_passWithApplicationIdentifier:secureElementIdentifier:
_passWithPaymentApplication:
_trimCatalog:andBuildPassPredicate:
_predicateForPassTypes:
groups
removeLastObject
uniqueIDs
_passTypeForPass:
_webServiceForPass:passType:
paymentApplicationsForPassUniqueIdentifier:
_transactionServiceForPass:
_messageServiceForPass:
_applyDemoPaymentApplicationToPass:
_applyDemoPaymentTransactionsToPass:
_applyDemoFelicaAppletStateToPass:
adjustGroupsAfterAddingPass:
handleInsertion:authToken:webService:pushEnabled:source:
settingEnabled:forDatabasePass:
_deleteNotificationServiceIfOrphaned:
adjustGroupsAfterUpdatingPass:oldGroupingProfile:
updateWithLastDeletionDate:
_deleteWebServiceIfOrphaned:
handleModification:webService:pushEnabled:source:
adjustGroupsBeforeRemovingPass:
handleDeletion:authToken:webService:pushEnabled:
passTypeID
removeSettingsForObjectWithUniqueIdentifier:
_deletePassTypeIfOrphaned:
deleteDatabase
anyInDatabase:withIdentifier:
settingsForObject:
updateSettings:forObject:
handlePushEnabled:authToken:webService:
handlePushDisabled:authToken:webService:
numberWithLong:
updateWithWebService:
lastDeletionDate
tagLastUpdateDate
webServicesInDatabase:matchingPredicate:
webServicesInDatabase:withPassType:
_predicateMatchingPassesForWebService:
lastPushDate
lastUpdateDate
frequencyScore
updateLastPushDate:
updateFrequencyScore:
updateLastUpdateDate:
_databaseNotificationService:
paymentApplicationsInDatabase:forNotificationService:
predicateForDPANIdentifier:
predicateForSecureElementIdentifiers:
paymentApplication
anyInDatabase:withPassUniqueIdentifier:secureElementIdentifier:paymentApplicationIdentifier:
paymentApplicationsInDatabase:forPassUniqueIdentifier:secureElementIdentifiers:
predicateForPassWithUniqueIdentifier:
predicateForPrimaryPaymentApplication:
paymentApplicationsInDatabase:
paymentApplicationsInDatabase:forSecureElementIdentifiers:
registrationStatus
updateWithRegistrationStatus:
primaryPaymentApplicationsInDatabase:forSecureElementIdentifiers:
anyInDatabase:withPaymentApplicationPID:
felicaTransitAppletState
setShinkansenOriginStationString:
setShinkansenDestinationStationString:
setShinkansenSecondaryOriginStationString:
setShinkansenSecondaryDestinationStationString:
setGreenCarOriginStationString:
setGreenCarDestinationStationString:
setNeedsStationProcessing:
updateWithAppletState:
initWithFelicaAppletState:paymentApplication:
processUpdateWithAppletHistory:concreteTransactions:ephemeralTransactions:
historySequenceNumber
insertFelicaTransitAppletState:forPaymentApplicationPID:inDatabase:
paymentTransactionIdentifier
paymentTransaction
setPaymentTransactionIdentifier:
paymentTransactionWithSource:
setTransactionType:
setTransitType:
appletCurrencyCode
setCurrencyCode:
setStationCodeProvider:
updateWithMerchant:
serviceIdentifier
anyInDatabase:withServiceIdentifier:forPassWithUniqueIdentifier:
updateWithPaymentMessage:
messageDate
numberOfPaymentMessagesInDatabase:forPassUniqueIdentifier:newerThanDate:
isValid
insertPaymentMessage:withPaymentPass:paymentApplication:inDatabase:
truncateEntitiesForPass:inDatabase:toCount:
paymentMessage
transactionIdentifier
hasNotificationServiceData
hasTransactionSource
closestTransactionInDatabase:fromTransactionDate:withTransactionSource:withNotificationServiceData:forTransactionIdentifier:forPassWithUniqueIdentifier:
updateWithPaymentTransaction:
numberOfPaymentTransactionsInDatabase:forPassUniqueIdentifier:withNotificationServiceData:newerThanDate:
insertPaymentTransaction:withPaymentPass:paymentApplication:inDatabase:
archiveMessagesOfType:forPass:inDatabase:
truncateEntitiesForPass:withNotificationServiceData:inDatabase:toCount:
closestPendingTransactionInDatabase:fromTransactionDate:withNotificationServiceData:forMerchantName:passWithUniqueIdentifier:
replaceWithPaymentTransaction:
insertOrUpdateValueAddedMerchant:
valueAddedMerchant
setMerchant:
updateWithValueAddedServiceTransaction:paymentTransaction:
insertValueAddedServiceTransaction:withPass:paymentTransaction:valueAddedMerchant:inDatabase:
valueAddedServiceTransaction
valueAddedServiceTransactionsInDatabase:forPassUniqueIdentifier:limit:
valueAddedServiceTransactionsInDatabase:forPaymentTransaction:
updateWithValueAddedMerchant:
insertValueAddedMerchant:inDatabase:
timesPresented
setTimesPresented:
anyInDatabase:forPassWithUniqueIdentifier:
paymentMessagesInDatabase:forPaymentPassUniqueIdentifier:
paymentTransactionsInDatabase:forPassUniqueIdentifier:withTransactionSource:withBackingData:limit:
mostRecentActiveTransactionInDatabase:
passUniqueIndentifier
createGroupsIfNecessary
setPassLibraryMachServiceName:
setDeviceName:
setRemotePass:
applySettingsToObject:
updateDevicePaymentApplicationsWithSecureElementIdentifiers:
_registerPasses:
insertPassTypeWithPassTypeID:teamID:inDatabase:
webServiceURL
anyInDatabase:withPassType:serviceURL:
insertWebServiceWithPassType:serviceURL:inDatabase:
transactionPushTopic
_deviceIdentifierForExistingServiceURL:
messagePushTopic
deviceIdentifier
setWithCapacity:
serviceURL
initWithDatabaseURL:
createSchemaInDatabase:
paymentApplicationsForSecureElementIdentifiers:
setDPANSuffix:
setSupportsInAppPayment:
setSupportsContactlessPayment:
setState:
setDPANIdentifier:
setApplicationIdentifier:
arrayWithContentsOfFile:
filteredArrayUsingPredicate:
dateWithDaysBeforeNow:
setMapsName:
setRawName:
decimalValue
decimalNumberWithDecimal:
setAmount:
setLocality:
setAdministrativeArea:
setTransactionSource:
setHasNotificationServiceData:
setStartStation:
setEndStation:
setProcessedForLocation:
setProcessedForMerchantCleanup:
setProcessedForStations:
dictionaryWithContentsOfFile:
initWithDictionary:source:
initWithURL:
hasAnyPasses
uniqueIDForPassWithPassTypeID:serialNumber:
numberOfPassesOfType:
numberOfPaymentPassesWithState:secureElementIdentifiers:
passesWithPassTypeID:
passesWithPassTypeIdentifierHash:requiresCertificate:
passesWithPassTypeIdentifierHashes:automaticSelectionOnly:requiresCertificate:
passesWithPassTypeIdentifierHash:andAssociatedPassTypeIdentifierHash:
locatedCandidatePassesOfStyle:
locatedCandidatePassesOfStyle:filteringOutPasses:
passesForWebService:
paymentPassesWithAssociatedPassTypeIdentifierHashes:automaticSelectionOnly:
updateModifiedSource:forUniqueID:
deletePaymentTransactionWithIdentifier:forPassWithUniqueIdentifier:
archiveMessageWithIdentifier:
settingEnabled:forPass:
updateSettings:forPass:
getRegistrationStatus:date:forSerialNumber:webService:
updateRegistrationStatus:date:forSerialNumber:webService:
updateLastModifiedTag:forSerialNumber:webService:
updateWebService:
lastDeletionDateForWebService:
lastUpdatedTagForWebService:
tagLastUpdateDateForWebService:
updateLastDeletionDate:forWebService:
updateLastUpdatedTag:forWebService:
webServices
webServicesForPassTypeID:
pushEnabledPassTypeIDs
hasPushEnabledPassesForWebService:
getWebService:updateContext:forPassWithUniqueID:
passUpdateContextForSerialNumber:webService:
webServiceForPass:
getLastPushDate:lastUpdateDate:frequencyScore:forPassTypeID:
updateLastPushDate:frequencyScore:forPassTypeID:
updateLastUpdateDate:forPassTypeID:
enumeratePassUpdateContextsForWebService:withHandler:
enumerateOrganizationNamesForPassTypeID:withHandler:
paymentApplicationWithPassUniqueIdentifier:secureElementIdentifier:paymentApplicationIdentifier:
defaultPaymentApplicationForPassUniqueIdentifier:
transactionServiceForPaymentApplication:
messageServiceForPaymentApplication:
notificationServiceOfType:forPassWithUniqueIdentifier:
paymentApplicationExistsWithExpressFelicaTransitSupport
updateMerchant:forTransaction:passUniqueIdentifier:
insertOrUpdateValueAddedServiceTransaction:forPassUniqueIdentifier:paymentTransaction:
valueAddedServiceTransactionsForPassWithUniqueIdentifier:limit:
valueAddedServiceTransactionsForPaymentTransaction:
valueAddedMerchantWithIdentifier:
setDefaultPaymentApplication:forPassUniqueIdentifier:
transactionsForPassWithUniqueIdentifier:withTransactionSource:withBackingData:limit:
webServicesDelegate
setWebServicesDelegate:
objectSettingsManager
setObjectSettingsManager:
paymentServicesDelegate
notificationServicesDelegate
_databaseURL
_webServicesDelegate
_objectSettingsManager
_paymentServicesDelegate
_notificationServicesDelegate
technology
merchantIdentifiers
mode
orderedSet
_unarchiveTasks
_tryToDequeueTasks
_releasePowerAssertion
_enqueueTask:
arrayByAddingObjectsFromArray:
cancel
_deactivateTask:
_activateOrScheduleEligibleTasksWithNetworkConnectivity:
coalescesWithTaskSubclass:
actionForInactiveTask:
replaceObjectAtIndex:withObject:
mergeWithNewerTask:
insertObject:atIndex:
actionForActiveTask:
_renewScheduledTask:
_dequeueTask:
_archiveTasks
setNextStartDate:
resetBackoff
setManager:
pk_arrayByRemovingObjectsInArray:
nextStartDate
_activateTask:
_createPowerAssertion
start:
writeToFile:atomically:
PKArrayForKey:
backoffComplete
nextBackoffInterval
incrementBackoff
canRequestReauthentication
setCanRequestReauthentication:
taskChangedState:
taskFailedForAuthentication:
_enqueuedTasks
_scheduledTasks
_activeTasks
_archivePath
_scheduledActivityClientIdentifier
_powerAssertionName
_powerAssertionIdentifier
_archivePending
setCreationDate:
performStart:
performCancel
numberOfBackoffLevels
backoffLevels
performReset
decodeBoolForKey:
decodeIntegerForKey:
encodeObject:forKey:
creationDate
encodeBool:forKey:
encodeInteger:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
deliverResult:
deliverResult:forSubtask:
reportStateChange
reportError:
reportError:forSubtask:
reportWarnings:
reportWarnings:forSubtask:
succeed
fail
failForAuthentication
manager
setIsValid:
_started
_canceled
_nextBackoffLevel
_nextBackoffIteration
_canRequestReauthentication
_isValid
_manager
_creationDate
_nextStartDate
_destroyConnectionManager
_startConnection:
_handleConnectionSuccessWithResponse:data:
setSuccessHandler:
_handleConnectionFailureWithError:
setFailureHandler:
request
setAllowsCellularAccess:
host
setAllowsAnyHTTPSCertificate:forHost:
setRequest:
handleResponse:data:
handleError:
_connectionManager
initWithRequest:delegate:
_sendFailure:
protectionSpace
realm
protocol
authenticationMethod
proposedCredential
sender
performDefaultHandlingForAuthenticationChallenge:
setLength:
errorWithDomain:code:userInfo:
initWithLength:
appendData:
HTTPBody
inputStreamWithData:
_sendSuccess
initWithFormat:arguments:
connection:willSendRequest:redirectResponse:
connection:didReceiveResponse:
connection:didReceiveData:
connection:needNewBodyStream:
connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:
connection:willCacheResponse:
connectionDidFinishLoading:
connection:didFailWithError:
connectionShouldUseCredentialStorage:
connection:willSendRequestForAuthenticationChallenge:
connection:canAuthenticateAgainstProtectionSpace:
connection:didReceiveAuthenticationChallenge:
connection:didCancelAuthenticationChallenge:
successHandler
failureHandler
_connection
_data
_response
_successHandler
_failureHandler
_request
openApplication:options:withResult:
alphanumericCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
defaultWorkspace
openSensitiveURL:withOptions:
initWithBytes:length:
bundleInfoValueForKey:PID:
applicationProxyForIdentifier:
localizedNameForContext:
center
radius
safelySetObject:forKey:
setInt32:forKey:
setUnsignedLongLong:forKey:
setDouble:forKey:
colorFromString:
timeIntervalSinceReferenceDate
initializeConfigurationDefaults
taskWithWebService:updateContext:source:
setUserRequested:
taskWithWebService:updateContext:contact:personalizationToken:requiredPersonalizationFields:personalizationSource:
generateNewDeviceIdentifier
_cancelAllTasksForPassTypeIdentifier:serialNumber:
_registerWithSerialNumber:authToken:webService:
unregisterTaskWithWebService:serialNumber:authToken:
_cancelAutomaticUpdateTasksForPassTypeIdentifier:serialNumber:
_cancelWhatChangedTasksForPassTypeIdentifier:
adjustStateForIncomingPushNotification:andComputeNextUpdateDate:
_scheduleUpdateForPassTypeIdentifier:afterDate:
_getSerialNumbersTask:gotResult:
_getPassTask:gotResult:
_personalizePassTask:gotResult:
source
_registrationTaskSucceeded:
_whatChangedTaskSucceeded:
reportAbandonedTask:passTypeID:
domain
code
reportError:webService:logToService:
reportWarnings:webService:logToService:
_updatePassTypeIdentifier:
registerTaskWithWebService:serialNumber:authToken:
taskWithWebService:lastUpdatedTag:tagLastUpdateDate:
gotUpdates
subtasks
reportPushWithNoSerialNumbersFromTasks:
serialNumbers
reportMissingTagWithRequestedSerialNumbers:forWebService:
reportUnmodifiedTag:withRequestedSerialNumbers:forWebService:
setServerRequested:
reportUpdateRequestForNonPushEnabledSerialNumber:forWebService:
lastModifiedTag
serverRequested
reportUnchangedPassForServerRequestedUpdateTask:
reportIgnoredIfModifiedSince:forSerialNumber:webService:
lastModified
reportMissingLastModifiedForSerialNumber:webService:
personalizationToken
encodedSignature
personalizationSource
pertainsToPassTypeIdentifier:serialNumber:
userRequested
taskWithPassTypeIdentifier:subtasks:
initialize
taskManager
initWithBundleIDs:states:
_updateSpringboardStateIfNecessary
_beginDelayingIdleExitIfPossible
_createPassbookUIServiceBoostAssertion
_preheatPassbookUIServiceIfNecessaryWithCompletion:
_endDelayingIdleExitIfPossible
_clearPassbookUIServiceBoostAssertion
_presentContactlessInterfaceForPassUniqueIdentifier:orFieldProperties:fromSource:completion:
_requestPasscodeUnlock
_activateInAppPaymentInterfaceWithPaymentRequest:forHostApplicationName:hostApplicationIdentifier:hostIdentifier:orientation:activationHandler:deactivationHandler:
_presentContinuityPaymentInterfaceWithRemotePaymentRequest:completion:
_clearPassbookUIServiceLaunchAssertion
applicationStateForApplication:
_activateContactlessInterfaceWithPassUniqueIdentifier:orFieldProperties:source:pendingHandler:activationHandler:deactivationHandler:
_activateContinuityPaymentInterfaceWithRemotePaymentRequest:activationHandler:deactivationHandler:
numberWithUnsignedChar:
error
_activateRemoteAlertWithOptions:activationHandler:deactivationHandler:assertion:
_checkSpringboardNotifyTokenIfNecessary
_createPassbookUIServiceLaunchAssertion
initWithBundleIdentifier:flags:reason:name:withHandler:
fieldDetectorDidEnterField:withProperties:
fieldDetectorDidExitField:
presentInAppPaymentInterfaceWithPaymentRequest:forHostApplicationName:hostApplicationIdentifier:hostIdentifier:orientation:completion:
passbookUIServiceDidLaunch
assertionManager
fieldDetector
_passbookUIServiceLaunchAssertion
_passbookUIServiceBoostAssertion
_applicationStateMonitor
_presenterSerialQueue
_contactlessInterfaceIsActiveConcurrentQueue
_inAppPaymentInterfaceIsActiveConcurrentQueue
_continuityInterfaceIsActiveConcurrentQueue
_contactlessInterfaceIsActive
_inAppPaymentInterfaceIsActive
_continuityInterfaceIsActive
_setupAlertIsActive
_springboardReady
_lostModeActive
_delayingIdleExit
_springboardNotifyTokenChecked
_springboardNotifyToken
_insertionDictionaryWithPassType:serviceURL:
initWithPassType:serviceURL:inDatabase:
_updateDictionaryWithWebService:
_propertySettersForWebService
_predicateForPassType:
_predicateForPassType:serviceURL:
setTeamIdentifier:
customActionRoute
actionWithLaunchURL:
customActionTitle
appearanceWithTitle:
setAppearance:
setDefaultAction:
setPublisherBulletinID:
setRecordID:
notificationType
setSectionSubtype:
setDate:
setContextValue:forKey:
allowPresentationOverPass
setAlertSuppressionContexts:
allowReinsertionAfterDismissal
supportsCoalescing
initWithNotificationIdentifier:forPassUniqueIdentifier:
coalesceWithExistingUserNotification:
bulletinRequestWithDataSource:
thumbnailImageForSizeContraints:dataSource:
insertionRequirements
setInsertionRequirements:
setAllowPresentationOverPass:
reissueBannerOnUpdate
setActive:
notificationIdentifier
setCustomActionRoute:
setCustomActionTitle:
_allowPresentationOverPass
_reissueBannerOnUpdate
_active
_insertionRequirements
_notificationIdentifier
_date
_customActionRoute
_customActionTitle
initWithTitle:message:forPassUniqueIdentifier:
safelyAddObject:
_initWithTitle:message:forPassUniqueIdentifier:hashComponents:
setTitle:
setMessage:
initWithMessage:
title
message
_title
_message
merchantIdentifier
_merchantIdentifier
UUID
hunkCount
passDiffs
passUniqueID
anyKey
getHunkForKey:oldValue:newValue:message:
setPassUniqueID:
addHunkWithKey:oldValue:newValue:message:
enumerateHunks:
removeHunkForKey:
localizedDescriptionForDiff:
actionWithLaunchURL:callblock:
_passDiffs
hasAssociatedPaymentApplication
_locationString
setSubtitle:
_amountString
displayLocation
displayName
amount
transactionStatus
currencyCode
setNumberStyle:
stringFromNumber:
pk_uppercaseStringForPreferredLocale
_paymentTransaction
decimalNumberWithMantissa:exponent:isNegative:
zero
notANumber
decimalNumberByMultiplyingBy:
passPropertiesForPass:
transitBalance
startStation
endStation
_titleString
_messageStringWithPass:
transitBalanceCurrencyCode
_transitBalance
_transitBalanceCurrencyCode
setHasEventDate:
setUUID:
setPrimaryAttachment:
defaultAction
setShouldDismissBulletin:
croppedImageWithInsets:
imageData
teamIdentifier
_passTypeIdentifier
_teamIdentifier
_serviceURL
_pushToken
_deviceIdentifier
lastModifiedDate
lastModifiedSource
_serialNumber
_authenticationToken
_lastModifiedTag
_lastModifiedDate
_lastModifiedSource
_manifestHash
_predicateForPaymentApplication:
_expressModesInDatabase:forPredicate:
_predicateForPaymentApplicationPID:
initWithExpressMode:forPaymentApplication:database:
expressModesInDatabase:forPaymentApplication:
expressModesInDatabase:forPaymentApplicationPID:
deleteEntitiesInDatabase:forPaymentApplication:
insertExpressModes:withPaymentApplication:inDatabase:
expressMode
removeFromRunLoop
setEnabledTopics:
initWithEnvironmentName:namedDelegatePort:
publicToken
mainRunLoop
scheduleInRunLoop:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
unregisterAllConsumers
_apsConnection
_registeredTopics
_consumers
initWithServiceName:onQueue:
defaultSectionInfoForType:
variantWithFormat:imageName:inBundle:
addVariant:
setSectionID:
setPushSettings:
addParentSectionInfo:displayName:icon:universalSectionID:
initWithDelegate:processingQueue:
processingQueue
dataProviderConnection
dataProviderConnectionQueue
_dataProviderCallbackQueue
_processingQueue
_dataProviderConnection
_dataProviderConnectionQueue
initWithTitle:iconImageName:iconImageBundle:
userNotificationIdentityWithTitle:imageIconName:imageIconBundle:
walletUserNotificationCenterIdentity
passUserNotificationCenterIdentity
titleForUserNotificationCenter:
iconImageDataForUserNotificationCenter:
isValidWithUserNotificationCenter:
bundleURL
bundleWithURL:
imageNamed:inBundle:
_iconImageName
_iconImageBundle
latestActiveUserNotification
notificationCenterTitle
userNotificationCenterDidUpdate:
imageHash
_cachedTitle
_cachedIconImageData
_cachedIconImageHash
_connected
parametersForSubtype:
setMessageNumberOfLines:
setUnlockActionLabel:
setPreservesUnlockActionCase:
setTopic:
setMissedBannerDescriptionFormat:
setPrioritizeAtTopOfLockScreen:
setAllowsAddingToLockScreenWhenUnlocked:
setAllowsAutomaticRemovalFromLockScreen:
variantWithFormat:imageData:
setSuppressFromSettings:
recordID
publisherDestination
sinceDate
_activeUserNotificationsSortedByDateAscending:
maximumCount
indexSetWithIndexesInRange:
objectsAtIndexes:
maxAspectRatio
constraintType
fixedWidth
minAspectRatio
constraintsWithFixedWidth:minAspectRatio:maxAspectRatio:
fixedHeight
constraintsWithFixedHeight:minAspectRatio:maxAspectRatio:
constraintsWithAspectFitToSize:
fixedDimension
constraintsWithFixedSmallDimenstion:minAspectRatio:maxAspectRatio:
constraintsWithFixedLargeDimenstion:minAspectRatio:maxAspectRatio:
thumbnailScale
_connectIfNeeded
_updateUserNotification:
_removeUserNotifications:
_addUserNotification:
addDataProvider:
removeDataProviderWithSectionID:
addBulletin:interrupt:
subarrayWithRange:
modifyBulletin:
withdrawBulletinsWithRecordID:
_disconnectIfNeeded
sortedArrayUsingComparator:
sortDescriptors
bulletinsWithRequestParameters:lastCleared:
clearedInfoForBulletins:lastClearedInfo:
clearedInfoForClearingAllBulletinsWithLastClearedInfo:
clearedInfoForClearingBulletinsFromDate:toDate:lastClearedInfo:
clearedInfoForBulletins:
sectionParameters
getDataForAttachmentUUID:recordID:withCompletionHandler:
getPNGDataForAttachmentUUID:recordID:sizeConstraints:withCompletionHandler:
getAspectRatioForAttachmentUUID:recordID:withCompletionHandler:
primaryAttachmentDataForRecordID:
attachmentPNGDataForRecordID:sizeConstraints:
attachmentAspectRatioForRecordID:
dataProviderDidLoad
defaultSubsectionInfos
displayNameForSubsectionID:
migrateSectionInfo:oldSectionInfo:
noteSectionInfoDidChange:
receiveMessageWithName:userInfo:
handleBulletinActionResponse:
handleBulletinActionResponse:withCompletion:
syncsBulletinDismissal
displayNameForFilterID:
bulletinsFilteredBy:count:lastCleared:
bulletinsFilteredBy:enabledSectionIDs:count:lastCleared:
sectionIdentifier
universalSectionIdentifier
defaultSectionInfo
sectionDisplayName
sectionIcon
sectionIconData
parentSectionIdentifier
initWithCenterIdentifier:identity:context:
numberOfActiveUserNotifications
centerIdentifier
identity
setIdentity:
_dataProviderProxy
_centerIdentifier
_identity
_context
initWithNotificationServicePID:inDatabase:
queryWithDatabase:transactionServicePID:
_archiveUserNotifications
dataWithContentsOfURL:options:error:
_notificationRequirementsAreSatisfied:
_removeScheduledActivitiesForPassUniqueIdentifier:
_badgeCount
sharedService
setBadgeValue:forBundleID:
initForWritingWithMutableData:
finishEncoding
writeToURL:atomically:
pk_objectsPassingTest:
_archiveFileURL
_walletUserNotificationCenter
_passUserNotificationCenters
_commonContext
_archiveSemaphore
_userNotificationManagerQueue
_queuedUserNotifications
dataUsingEncoding:
_insertionDictionaryWithPassTypeID:teamID:
initWithPassTypeID:teamID:inDatabase:
_passTypeIDPredicate:
_passTypeIdentifierHashPredicate:
anyInDatabase:withPassTypeIdentifierHash:
identifierHash
updateIdentifierHash
assertionExistsOfType:handler:
acquireAssertionOfType:withIdentifier:reason:handler:
invalidateAssertionOfType:withIdentifier:handler:
_assertionsByType
_coordinatorSerialQueue
_queue_updateNameCacheForConsumer:
_queue_startObservingNotification:
_queue_clearNameCacheForConsumer:
_queue_stopObservingNotification:
_registeredNameMapping
_registeredNotificationNames
_internalSerialQueue
initWithFelicaTransitAppletState:forPaymentApplicationPID:inDatabase:
_valuesDictionaryForAppletState:
isInShinkansenStation
isShinkansenTicketActive
isGreenCarTicketUsed
balance
shinkansenValidityStartDate
shinkansenValidityTerm
shinkansenOriginStationString
shinkansenDestinationStationString
shinkansenDepartureTime
shinkansenArrivalTime
shinkansenTrainName
shinkansenCarNumber
shinkansenSeatRow
shinkansenSeatNumber
shinkansenSecondaryOriginStationString
shinkansenSecondaryDestinationStationString
shinkansenSecondaryDepartureTime
shinkansenSecondaryArrivalTime
shinkansenSecondaryTrainName
shinkansenSecondaryCarNumber
shinkansenSecondarySeatRow
shinkansenSecondarySeatNumber
greenCarOriginStationString
greenCarDestinationStationString
greenCarValidityStartDate
hasGreenCarTicket
hasShinkansenTicket
setInStation:
setInShinkansenStation:
setShinkansenTicketActive:
setGreenCarTicketUsed:
setHistorySequenceNumber:
setBalance:
setBlacklisted:
setShinkansenValidityStartDate:
setShinkansenValidityTerm:
setShinkansenOriginStationCode:
setShinkansenDestinationStationCode:
setShinkansenDepartureTime:
setShinkansenArrivalTime:
setShinkansenTrainName:
setShinkansenCarNumber:
setShinkansenSeatRow:
setShinkansenSeatNumber:
setShinkansenSecondaryOriginStationCode:
setShinkansenSecondaryDestinationStationCode:
setShinkansenSecondaryDepartureTime:
setShinkansenSecondaryArrivalTime:
setShinkansenSecondaryTrainName:
setShinkansenSecondaryCarNumber:
setShinkansenSecondarySeatRow:
setShinkansenSecondarySeatNumber:
setGreenCarOriginStationCode:
setGreenCarDestinationStationCode:
setGreenCarValidityStartDate:
setHasGreenCarTicket:
setHasShinkansenTicket:
_propertySetters
deleteEntitiesForPaymentApplicationPID:inDatabase:
felicaTransitAppletStateInDatabase:withPassUniqueIdentifier:secureElementIdentifier:paymentApplicationIdentifier:
_hasValidSecureElement
paymentServicesURL
paymentServicesURLForRegion:
initWithMerchantIdentifier:domainName:
_urlRequestWithServiceURL:
paymentServicesMerchantURL
paymentServicesMerchantURLForRegion:
URLByAppendingPathComponent:
presentInAppPaymentInterfaceWithPaymentRequest:forHostIdentifier:orientation:handler:
registerPaymentListenerEndpoint:forHostIdentifier:handler:
retrievePaymentListenerEndpointForHostIdentifier:handler:
URLRequestForMerchantStatusCheck:merchantDomain:handler:
paymentServicesMerchantURL:
paymentHardwareStatusWithCompletion:
paymentWebServiceCoordinator
distantFuture
distantPast
endpointComponents
URLPathAllowedCharacterSet
queryFields
URLQueryAllowedCharacterSet
method
setHTTPMethod:
setHTTPShouldHandleCookies:
setCachePolicy:
headerFields
setValue:forHTTPHeaderField:
bodyDictionary
setHTTPBody:
initWithWebService:
reportAuthenticationFailure
reportUnexpectedResponseCode:
reportNSURLConnectionError:
reportMalformedResponseError:
_webService
_taskWithWebService:serialNumber:authToken:requestedStatus:
initWithWebService:serialNumber:authToken:requestedStatus:
dictionaryWithObject:forKey:
statusCode
isSubclassOfClass:
_matchesRegistrationTask:
_matchesPersonalizePassTask:
setRequestedStatus:
_requestedStatus
initWithWebService:lastUpdatedTag:tagLastUpdateDate:
_resultFromResponseData:
_matchesGetSerialNumbersTask:
setSerialNumbers:
setTagLastUpdateDate:
_lastUpdatedTag
_tagLastUpdateDate
_serialNumbers
initWithWebService:updateContext:source:
pk_valueForHTTPHeaderField:
setLastModified:
_matchesGetPassTask:
setPass:
_userRequested
_serverRequested
_source
_pass
_lastModified
initWithWebService:updateContext:contact:personalizationToken:requiredPersonalizationFields:personalizationSource:
contact
stringFromPersonNameComponents:
givenName
familyName
postalAddress
ISOCountryCode
suggestedCountryCode
postalCode
emailAddress
phoneNumber
digits
initWithSignatureData:
requiredPersonalizationFields
_contact
_personalizationToken
_requiredPersonalizationFields
_personalizationSource
_encodedSignature
initWithWebService:logs:
logs
_matchesLogTask:
_hasRoomForAdditionalLogs
setLogs:
taskWithWebService:error:
taskWithWebService:warnings:
_logs
setDateFormat:
inAppPINRequiredAmount
dpanSuffix
sanitizedDPAN
supportsContactlessPayment
supportsOptionalAuthentication
inAppPINRequiredCurrency
_predicateForPersistentID:
_predicateForApplicationIdentifier:secureElementIdentifier:
_predicateForApplicationIdentifier:secureElementIdentifiers:
_predicateForPassUniqueIdentifier:applicationIdentifier:secureElementIdentifier:
_paymentApplicationsInDatabase:matchingPredicate:
predicateForSecureElementIdentifier:
_paymentApplicationsInDatabase:matchingPredicate:withJoinKeys:
_propertySettersForPaymentApplication
setSupportedExpressModes:
setFelicaProperties:
updateWithPaymentApplication:
initWithPaymentApplication:pass:inDatabase:
supportedExpressModes
suspendedReason
_updateExpressModes:
setSanitizedDPAN:
setSuspendedReason:
setSupportsOptionalAuthentication:
setAppletDataFormat:
setAppletCurrencyCode:
setPaymentNetworkIdentifier:
setInAppPINRequiredAmount:
setInAppPINRequiredCurrency:
setAuxiliary:
setPaymentType:
setDisplayName:
anyInDatabase:withPersistentID:
paymentApplicationsInDatabase:forPass:
paymentApplicationsInDatabase:forSecureElementIdentifier:
_initWithPassTypeIdentifier:subtasks:
_commonInit
_addTask:
setByAddingObjectsFromArray:
_matchesTask:
_updateForTaskDeactivation:
_pendingTasks
_completedTasks
_gotUpdates
_serviceType
_pushTopic
_appLaunchToken
_lastUpdatedDate
_lastUpdatedTagDate
initWithPriorityKey:gracePeriod:startDate:
decodeInt64ForKey:
encodeInt64:forKey:
isEqualToScheduledAcivityCriteria:
xpcActivityCriteria
startDate
endDate
requireMainsPower
requireScreenSleep
requireNetworkConnectivity
isRepeating
repeatInterval
_priorityKey
_gracePeriod
_requireMainsPower
_requireScreenSleep
_requireNetworkConnectivity
_repeating
_startDate
_endDate
_repeatInterval
isEqualToScheduledActivityRegistration:
initWithActivityCriteria:activityContext:
activityCriteria
activityContext
_activityCriteria
_activityContext
initWithClientInstance:activityQueue:
clientInstance
setClientInstance:
activityQueue
setActivityQueue:
activityRegistrations
setActivityRegistrations:
_clientInstance
_activityQueue
_activityRegistrations
removeObjectsForKeys:
matchesTask:
initWithNotificationService:
setNotificationService:
_notificationService
initWithNotificationService:registrationData:signature:certificates:requestedStatus:completionTask:
signature
registrationData
initWithDictionary:
setSupportsLegacyFormats:
certificateOfType:
_authenticationTokenFromResponseData:
deregisterTaskWithNotificationService:
setRegistrationData:
setSignature:
setCertificates:
setCompletionTask:
_registrationData
_signature
_certificates
_completionTask
initWithNotificationService:registrationData:signature:certificates:dpanIdentifier:requestedStatus:completionTask:
_dpanIdentifier
setNotifications:
_notifications
dictionaryWithDictionary:
preferredLanguages
initWithData:encoding:
initWithNotificationService:dpanIdentifier:lastUpdatedTag:
content
messageType
allowDeepLink
initWithPaymentMessage:paymentPass:paymentApplication:inDatabase:
_predicateForPaymentPass:
_predicateForMessageType:
_predicateForIdentifier:
_predicateForPassWithUniqueIdentifier:
_predicateForServiceIdentifier:
_predicateForNonExpiredMessages
_paymentMessagesInDatabase:matchingPredicate:
_predicateForMessageDateNewerThanDate:
_propertySettersForPaymentMessage
setIdentifier:
setServiceIdentifier:
setAllowDeepLink:
setHasAssociatedPaymentApplication:
isArchived
paymentConfiguration
didUpdateDefaultPaymentPassWithUniqueIdentifier:
caseInsensitiveCompare:
outstandingExpressTransactionStateWithHandler:
didSucceed
merchantURL
scheme
initializeSecureElementQueuingServerConnection:withCompletion:
SEPPairingInfoWithCompletion:
availableForAutomaticPresentationUsingVASContext
availableForAutomaticPresentationUsingBeaconContext
paymentDeviceDidEnterFieldWithProperties:
paymentDeviceDidExitField
paymentPassWithUniqueIdentifier:didUpdateWithFelicaPassProperties:
paymentDeviceFieldPropertiesWithHandler:
setDefaultPaymentPassUniqueIdentifier:handler:
defaultPaymentPassUniqueIdentifier:
setSharedPaymentWebServiceContext:handler:
sharedPaymentWebServiceContextWithHandler:
transactionsAppLaunchTokenForPassWithUniqueIdentifier:handler:
messagesAppLaunchTokenForPassWithUniqueIdentifier:handler:
submitVerificationCode:verificationData:forDPANIdentifier:handler:
transactionsForPaymentPassWithUniqueIdentifier:withTransactionSource:withBackingData:limit:completion:
messagesForPaymentPassWithUniqueIdentifier:handler:
valueAddedServiceTransactionsForPassWithUniqueIdentifier:limit:handler:
valueAddedServiceTransactionsForPaymentTransaction:handler:
insertOrUpdatePaymentTransaction:forPassUniqueIdentifier:paymentApplication:handler:
insertOrUpdateValueAddedServiceTransaction:forPassUniqueIdentifier:paymentTransaction:handler:
deletePaymentTransactionWithIdentifier:forPassWithUniqueIdentifier:handler:
deleteAllTransactionsForPaymentPassWithUniqueIdentifier:handler:
deleteAllMessagesForPaymentPassWithUniqueIdentifier:handler:
archiveMessageWithIdentifier:handler:
setDefaultPaymentApplication:forPassUniqueIdentifier:handler:
defaultPaymentApplicationForPassUniqueIdentifier:handler:
initializeSecureElementIfNecessaryWithHandler:
sanitizeDefaultExpressPasses
defaultExpressFelicaTransitPassIdentifierWithHandler:
processFelicaTransitTransactionEventWithHistory:transactionDate:forPaymentApplication:withPassUniqueIdentifier:
simulateDefaultExpressTransitPassIdentifier:handler:
felicaStateWithPassUniqueIdentifier:paymentApplication:handler:
outstandingExpressTransactionState:
simulatePaymentPushWithHandler:
consistencyCheckWithHandler:
downloadAllPaymentPassesWithHandler:
scheduleSetupReminders:
scheduleAutomaticPresentationAvailableNotificationForPassWithUniqueIdentifier:handler:
passbookUIServiceDidLaunch:
notificationServiceCoordinator
paymentTransactionProcessor
felicaStateManager
_notificationServiceCoordinator
registerDefaults:
_zeroIntervalForPassTypeID:
_updatedFrequencyScoreForScore:lastPushDate:zeroInterval:
_rateLimitLevelForFrequencyScore:
reportPushRateLimitLevel:forPassTypeID:
_presentUnregistrationAlertForPassTypeID:
_nextUpdateDateWithLastUpdateDate:rateLimitLevel:
_aggdLogTaskErrorCode:passTypeID:
_aggdLogWebServiceErrorCode:passTypeID:
_userNotificationParametersForPassTypeID:
resetPushFrequencyStateForPassTypeID:
_unregisterPassesOfType:
doubleForKey:
reportUnchangedPassForPersonalizationTask:
_aggdLogTaskWarningCode:passTypeID:
_typePredicate:
_namePredicate:
_tableNamePredicate:
arrayWithArray:
anyInDatabase:withType:name:
anyInDatabase:withType:tableName:
queryWithDatabase:type:
queryWithDatabase:type:tableName:
queryWithDatabase:types:tableName:
entitesMatchingQuery:
tableName
isFileURL
fileSystemRepresentation
_resetAndReopenDatabaseWithPath:
_stepStatement:hasRow:didFinish:
_accessDatabaseUsingBlock:
executeSQL:
_statementForSQL:cache:
SQLToAddColumnWithSQL:toTableNamed:
alterTable:removeColumns:renameColumns:
tableWithSQL:
removeColumn:
columnNames
renameColumn:to:
setTableName:
creationSQL
SQLToInsertColumnNames:fromTableNamed:intoTableNamed:
SQLToDropTableNamed:
SQLToRenameTable:to:
accessDatabaseUsingBlock:
setUserVersion:
userVersion
addColumnInTable:columnSQL:
removeColumnInTable:name:
renameColumnInTable:oldName:newName:
dropTable:
renameTable:newName:
insertColumns:fromTableNamed:toTableNamed:
tableNames
typeForColumn:inTable:
_isInTransaction
_dispatchQueue
_statementCache
bytes
initWithUTF8String:
requiresCertificate
encryptionPublicKeyData
initWithNFCPayload:pass:inDatabase:
_propertySettersForNFC
setRequiresCertificate:
setEncryptionPublicKeyData:
initWithWebDomain:pass:inDatabase:
_propertySettersForAssociatedWebDomain
_associatedWebDomainsInDatabase:matchingPredicate:
setString:
associatedWebDomainsInDatabase:forPass:
terminalApplicationVersion
terminalMode
initWithValueAddedServiceTransaction:pass:paymentTransaction:valueAddedMerchant:inDatabase:
_predicateForPaymentTransaction:
_predicateForMerchantPID:
_valueAddedServiceTransactionsWithQuery:
_propertySettersForValueAddedServiceTransaction
setMerchantURL:
setDidSucceed:
setTerminalApplicationVersion:
setTerminalMode:
deleteEntitiesForPaymentTransaction:inDatabase:
initWithPassTypeIdentifier:pass:inDatabase:
_propertySettersForAssociatedPassTypeIdentifier
_associatedPassTypeIdentifiersInDatabase:matchingPredicate:
_initWithTableSQL:
_columnNamed:
SQLParsingScannerWithSQL:
scanTableSQLPreambleAndTableName:
scanTableSQLColumns:constraints:
_indexOfColumnNamed:
_columns
_tableConstraints
_tableName
qualifiers
setQualifiers:
_name
_qualifiers
scannerWithString:
setCaseSensitive:
whitespaceAndNewlineCharacterSet
setCharactersToBeSkipped:
scanString:intoString:
_scanSQLiteIdentifierIntoString:
_scanTableSQLColumn:
_scanTableSQLConstraint:
isAtEnd
scanLocation
setScanLocation:
_scanUpToTopLevelDelimiters:intoString:
_scanThroughQuoteWithDelimiter:appendToString:
_scanSQLiteIdentifierCharactersIntoString:
addCharactersInString:
scanCharactersFromSet:intoString:
characterSetWithCharactersInString:
formUnionWithCharacterSet:
scanUpToCharactersFromSet:intoString:
characterAtIndex:
characterIsMember:
_scanBalancedSubstringFromCharacter:appendToString:
stringWithCharacters:length:
scanUpToString:intoString:
rangeOfCharacterFromSet:
rangeOfCharacterFromSet:options:
substringWithRange:
uppercaseString
cancelRemotePaymentRequest:completion:
discoverRemoteDevicesWithProximity:
sendRemotePaymentRequest:completion:
sendPayment:forRemotePaymentRequest:completion:
sendPaymentHostUpdate:forRemotePaymentRequest:completion:
sendPaymentClientUpdate:forRemotePaymentRequest:completion:
sendPaymentStatus:forRemotePaymentRequest:completion:
requestInstrumentThumbnail:forRemoteDevice:size:completion:
didReceiveUpdatedPaymentDevices:
updatePaymentDevicesWithHandler:
sendRemotePaymentRequest:handler:
sendPaymentHostUpdate:forRemotePaymentRequest:handler:
sendPaymentClientUpdate:forRemotePaymentRequest:handler:
sendPayment:forRemotePaymentRequest:handler:
sendPaymentStatus:forRemotePaymentRequest:handler:
requestInstrumentThumbnail:forRemoteDevice:size:handler:
presentContinuityPaymentInterfaceWithRequestIdentifier:handler:
cancelRemotePaymentRequest:handler:
hasRemoteDevicesWithHandler:
fetchRemoteDevicesWithHandler:
sendPaymentSetupRequest:appDisplayName:handler:
_requests
initWithBeacon:pass:inDatabase:
_propertySettersForBeacon
_beaconsInDatabase:matchingPredicate:
setProximityUUIDWithString:
setMajor:
setMinor:
beaconsInDatabase:forPass:
usedPassFromSource:withTypeIdentifier:info:
usedPaymentPassWithUniqueIdentifier:transactionIdentifier:info:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
initWithValueAddedMerchant:inDatabase:
_propertySettersForValueAddedMerchant
_migrateDatabase:fromUserVersion:
_migratePassSettingsFromDatabase:
_migrateFrom8075To8076:context:
_migrateFrom8076To8300:context:
_migrateFrom8300To8301:context:
_migrateFrom8301To8302:context:
_migrateFrom8302To8303:context:
_migrateFrom8303To8304:context:
_migrateFrom8304To8305:context:
_migrateFrom8305To9000:context:
_migrateFrom9000To9001:context:
_migrateFrom9001To9002:context:
_migrateFrom9002To9003:context:
_migrateFrom9003To9004:context:
_migrateFrom9004To9005:context:
_migrateFrom9005To9006:context:
_migrateFrom9006To9007:context:
_migrateFrom9007To9008:context:
_migrateFrom9008To9009:context:
_migrateFrom9009To9010:context:
_migrateFrom9010To9011:context:
_migrateFrom9011To9012:context:
_migrateFrom9012To9013:context:
_migrateFrom9013To9014:context:
_migrateFrom9014To9015:context:
_migrateFrom9015To9016:context:
_migrateFrom9016To9017:context:
_migrateFrom9017To9018:context:
_migrateFrom9018To9200:context:
_migrateFrom9200To9300:context:
_migrateFrom9300To10000:context:
_migrateFrom10000To10001:context:
_migrateFrom10001To10002:context:
_migrateFrom10002To10003:context:
_migrateFrom10003To10004:context:
_migrateFrom10004To10005:context:
_migrateFrom10005To10006:context:
_migrateFrom10006To10007:context:
_migrateFrom10007To10008:context:
_migrateFrom10008To10009:context:
_migrateFrom10009To10010:context:
_migrateFrom10010To10011:context:
_migrateFrom10011To10012:context:
_migrateFrom10012To10013:context:
_migrateFrom10013To10014:context:
_migrateFrom10014To10015:context:
_migrateFrom10015To10016:context:
_migrateFrom10016To10200:context:
_migrateFrom10200To10300:context:
hasDatabasePopulationOperations
performDatabasePopulationOperationsWithPasses:
performPostMigrationOperations
updateSettings:forObjectWithUniqueIdentifier:defaultSettings:
addDatabasePopulationOperation:
PKBoolForKey:
initWithPaymentApplicationDictionary:auxiliaryApplication:
stringValue
isNFCEnabled
unsignedLongValue
addPostMigrationOperation:
_databasePopulationOperations
_postMigrationOperations
_insertPass:
_applyCatalog:
_removePass:fromGroup:
_removeGroup:
automaticGroupWithGroupingProfile:
updateWithAutomaticGroup:
_insertPass:groupingProfile:
_validateDefaultPaymentPassOrdering
groupID
isEqualToNumber:
setIsUbiquitous:
setGroupID:
_moveGroup:toIndex:
_groupAtOrAfterIndex:bestMatchingUniqueIDs:
_fixDuplicateGroupsAtIndex:preservingGroupPID:maximumNumberOfGroups:
_insertPass:groupingProfile:insertNewGroupAfter:
_firstGroupMatchingProfile:
_addPass:toGroup:
insertAutomaticGroup:inDatabase:
order
_predicateForGroupingID:
_predicateForDate:leeway:
_firstGroupMatchingPredicate:
automaticGroup
minDate
maxDate
arrayByAddingObject:
_groupWithPersistentID:
updateWithOrder:
addPassWithGroupingProfile:
_firstGroupMatchingGroup:
_mergeGroup:intoGroup:
ingestedDate
setMinDate:
setMaxDate:
_canAcceptDate:withLeeway:
_dateIsAcceptable:
_nfcEnabled
_passTypeID
_groupingID
_passStyle
_minDate
_maxDate
_ingestedDate
initWithApplicationIdentifier:pass:inDatabase:
_propertySettersForAssociatedApplicationIdentifier
_associatedApplicationIdentifiersInDatabase:matchingPredicate:
associatedApplicationIdentifiersInDatabase:forPass:
_updateDictionaryWithAutomaticGroup:
_propertySettersForAutomaticGroup
initWithLocationURL:type:inDatabase:
insertPassLocationSourceWithPass:locationSource:inDatabase:
locationSourcePIDPredicate:
urlPredicate:
anyInDatabase:withLocationSourcePID:
initWithObjectSettings:
settingsForObjectWithUniqueIdentifier:defaultSettings:
_requestArchiveToDisk
settingEnabled:forObjectWithUniqueIdentifier:defaultSettings:
_needsArchive
_objectSettings
_defaultSettingsForObjectClass:
setSettings:
_defaultSettingsForDatabasePass:
settingsForDatabasePass:
updateSettings:forDatabasePass:
initWithPassPID:locationSourcePID:inDatabase:
passPIDPredicate:
propertySettersForLocation
initWithLatitude:longitude:forLocation:database:
insertLocation:forUniqueID:
_locationsByUniqueID
locationDate
locality
administrativeArea
technologyType
transactionSource
locationLatitude
locationLongitude
locationAltitude
locationHorizontalAccuracy
locationVerticalAccuracy
transitModifiers
stationCodeProvider
startStationCode
endStationCode
mapsName
rawName
industryCategory
industryCode
mapsIdentifier
resultProviderIdentifier
initWithPaymentTransaction:paymentPass:paymentApplication:inDatabase:
_predicateForWithNotificationServiceData:
_predicateForWithBackingData:
_predicateForwithTransactionSource:
_predicateForTransactionIdentifier:
_closestTransactionInDatabase:withTransactionDate:withinWindow:passWithUniqueIdentifier:additionalPredicates:
_predicateForTransactionStatus:
_predicateForMerchantName:
_paymentTransactionsWithQuery:
_predicateForTransactionDateNewerThanDate:
_hasValidMerchantData
_propertySettersForMerchant
_predicateForTransactionDate:withinWindow:
setTransactionIdentifier:
setTransactionStatus:
setTechnologyType:
setLocationDate:
setLocationLatitude:
setLocationLongitude:
setLocationAltitude:
setLocationHorizontalAccuracy:
setLocationVerticalAccuracy:
setTransitModifiers:
setEnRoute:
setStartStationCode:
setEndStationCode:
setIndustryCategory:
setIndustryCode:
setPhoneNumber:
setMapsIdentifier:
setResultProviderIdentifier:
setURL:
_predicateForTransactionSource:
_paymentTranactionsInDatabase:matchingPredicate:
substringToIndex:
substringFromIndex:
v16@?0@"NSNotification"8
PKSecureElementPairingStateUnknown
PKSecureElementPairingStatePaired
PKSecureElementPairingStateUnpaired
com.apple.passd.xpcListener
v8@?0
com.apple.passd.installedPasses
UserNotifications.archive
SuppressionApplicationRegistry.archive
com.apple.passd
v12@?0B8
Unexpected interruption on passLibrary connection
Unexpected interruption on paymentService connection
Unexpected interruption on inAppPaymentService connection
.%lu
ACTIVATED_NOTIFICATION_FORMAT
SUSPENDED_NOTIFICATION_FORMAT
REMOVED_NOTIFICATION_FORMAT
messageType == %d
B24@?0@"PKPaymentApplication"8^B16
v24@?0@"PDPaymentService"8^B16
v24@?0@"PDPassLibrary"8^B16
v16@?0@"NSError"8
Transaction Processor
ingestedDate
v16@?0@"PDPassLibrary"8
LastTransaction
ORB_LAST_TRANSACTION
ORB_ADD_CARD
DefaultCard
RelevantPass
%@@%dx
v24@?0@"PKPass"8^B16
v24@?0@"PKPaymentApplication"8^B16
DEFAULT_CARD_CHANGED_TITLE_FORMAT
DEFAULT_CARD_CHANGED_MESSAGE
DEFAULT_CARD_CHANGED_SETTINGS_BUTTON
DEFAULT_CARD_CHANGED_DISMISS_BUTTON
v24@?0^{__CFUserNotification=}8Q16
PKBillingAddressKeychainKey
PKBillingAddressesKeychainKey
com.apple.PassbookUIService
Invalid SE-SEP Pairing
Passcode Disabled
v16@?0Q8
v16@?0@"NSArray"8
passes19.sqlite
NotificationServiceTasks_v4.archive
NotificationServiceTasks_v5.archive
WebServiceTasks_v3.archive
WebServiceTasks_v4.archive
WebServiceTasks_v5.archive
bulletins.archive
BulletinManager.archive
paymentservice.archive
TransactionServiceTasks_v4.archive
LockStatus.plist
v32@?0@"NSString"8Q16^B24
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
PDPaymentWebServiceCoordinator
ConsistencyCheck
VerificationCheck
VASTransactionProcessor
sharedWebServiceQueue
v20@?0i8@"NSError"12
v16@?0@"PKPaymentWebService"8
SubmitOTP
v28@?0i8@"PKPaymentPass"12@"NSError"20
Consistency Check
%@.%@
v16@?0@"PKSecureElementApplet"8
paymentpass
v20@?0B8@"PKPass"12
v20@?0B8@"NSDictionary"12
NEEDS_VERIFICATION_REMINDER_FORMAT
v28@?0i8Q12@"NSError"20
sharedWebServiceContext
T@"PKPaymentWebServiceContext",R,N
Contactless Interface Suppression
Provisioning In Progress
Assertion Type: %@, Identifier: %@, Reason: %@
type
TQ,R,N,V_type
identifier
T@"NSString",R,N,V_identifier
reason
T@"NSString",R,N,V_reason
com.apple.passd.xpcEventStreamsManager.state
com.apple.distnoted.matching
com.apple.nsurlsessiond-events
observer
T@"<PDXPCEventStreamObserver>",W,N,V_observer
replyQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_replyQueue
com.apple.passd.xpcEventStreamManager.state
com.apple.passd.xpcEventStreamManager.reply
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.passd.assertionmanager
Unexpected interruption on PDAssertionCoordinator connection
v32@?0@"<PDAssertionObserver>"8Q16^B24
v32@?0@"PDAssertionCoordinator"8Q16^B24
-[PDPassLibrary presentContactlessInterfaceForPassWithUniqueIdentifier:fromSource:handler:]
CONTACTLESS_INTERFACE_SUPRESSION_TITLE
CONTACTLESS_INTERFACE_SUPRESSION_ACCEPT
B24@?0@"PKPass"8^B16
q24@?0@"PKPass"8@"PKPass"16
v16@?0@"PKImageSetXPCContainer"8
ADD_PASSES_TITLE_SINGULAR
ADD_PASSES_TITLE
INGESTION_ADD
INGESTION_ADD_N
REVIEW_BUTTON_TITLE
INGESTION_CANCEL
Account Deleted
secureElement
T@"PKSecureElement",&,N,V_secureElement
paymentWebServicesCoordinator
T@"PDPaymentWebServiceCoordinator",&,N,V_paymentWebServicesCoordinator
webServicesCoordinator
T@"PDWebServicesCoordinator",&,N,V_webServicesCoordinator
cardFileManager
T@"PDCardFileManager",&,N,V_cardFileManager
databaseManager
T@"PDDatabaseManager",&,N,V_databaseManager
userNotificationManager
T@"PDUserNotificationManager",&,N,V_userNotificationManager
relevantPassProvider
T@"PDRelevantPassProvider",&,N,V_relevantPassProvider
suppressionApplicationRegistry
T@"PKApplicationRegistry",&,N,V_suppressionApplicationRegistry
usageNotificationServer
T@"PKUsageNotificationServer",&,N,V_usageNotificationServer
remoteInterfacePresenter
T@"PDRemoteInterfacePresenter",&,N,V_remoteInterfacePresenter
idsManager
T@"PKIDSManager",&,N,V_idsManager
delegate
T@"<PDPassLibraryDelegate>",W,N,V_delegate
willSanitizePasses
TB,R,N
ROWID
v32@?0@8@16^B24
B8@?0
+[%@ databaseTable] not implemented
SELECT 1 FROM %@ WHERE %@ = ? LIMIT 1;
v16@?0^{sqlite3_stmt=}8
SELECT 
 FROM 
 WHERE 
.ROWID = ?;
SELECT 1 FROM 
 =  ? LIMIT 1;
UPDATE 
 SET 
 = ?
 = ?;
INSERT INTO %@ (%@) SELECT 
 FROM %@ WHERE %@ = ?;
INSERT OR REPLACE INTO 
) VALUES (?
DELETE FROM %@ WHERE %@ = ?;
database
T@"SQLiteDatabase",R,N,V_database
persistentID
Tq,R,N,V_persistentID
existsInDatabase
NotificationServiceTasks
v24@?0@"PDNotificationService"8^B16
v32@?0@"NSError"8Q16^B24
B16@?0@8
pushToken
accountHash
dpanIdentifiers
v24@?0@"NSData"8@"PKSecureElementSignatureInfo"16
transactionDate
messageDate
dpanIdentifier
fpanIdentifier
v32@?0@"NSDictionary"8Q16^B24
Never Registered
Registered
Unregistered
invalidated
completion
property
T@"NSString",R,N,V_property
(%@ = ?)
(%@ != ?)
(%@ > ?)
(%@ >= ?)
(%@ < ?)
(%@ <= ?)
(%@ & ?)
(NOT %@ & ?)
comparisonType
Tq,R,N,V_comparisonType
value
T@,R,N,V_value
 NOT IN (
 IN (
negative
TB,R,N,GisNegative,V_negative
query
T@"SQLiteQuery",R,N,V_query
queryProperty
T@"NSString",R,N,V_queryProperty
values
T@"NSArray",R,N,V_values
(%@ %@)
IS NULL
IS NOT NULL
matchesNull
TB,R,N,V_matchesNull
(%d)
booleanValue
TB,R,N,V_booleanValue
 AND 
 OR 
NOT 
predicates
T@"NSArray",R,N,V_predicates
((SELECT 1 FROM %@
 WHERE %@ = %@ LIMIT 1) IS NOT NULL)
DESC
v32@?0q8Q16^B24
CREATE TEMPORARY TABLE 
 AS 
v48@?0q8@"NSArray"16^@24Q32^B40
T@"SQLiteDatabase",R
queryDescriptor
T@"SQLiteQueryDescriptor",R
countOfEntities
Tq,R
DISTINCT 
 FROM %@
 ORDER BY 
 LIMIT ?
entityClass
T#,N,V_entityClass
limitCount
Tq,N,V_limitCount
orderingDirections
T@"NSArray",C,N,V_orderingDirections
orderingProperties
T@"NSArray",C,N,V_orderingProperties
returnsDistinctEntities
TB,N,V_returnsDistinctEntities
predicate
T@"SQLitePredicate",C,N,V_predicate
%@(%@)
unique_id
serial_number
sequence_counter
authentication_token
organization_name
relevant_date
expiration_date
voided
revoked
has_stored_value
user_info
pass_flavor
primary_account_identifier
primary_account_suffix
sanitized_pan
supports_fpan_notifications
supports_dpan_notifications
supports_default_card_selection
supports_serial_number_based_provisioning
requires_a_cup_of_tea
payment_option_selectable
cobranded
template
background_color
foreground_color
label_color
strip_color
tall_code
has_background_image
has_strip_image
manifest_hash
push_registration_status
push_registration_date
last_modified_tag
ingested_date
modified_date
modified_source
share_count
sharing_method
sharing_url
sharing_text
pass_type_pid
web_service_pid
pass_type.identifier
pass_type.identifier_hash
pass_type.team_identifier
web_service.service_url
associated_pass_type_identifier.identifier_hash
nfc.message
nfc.requires_certificate
payment_application.aid
payment_application.seid
payment_application.state
payment_application.payment_network_identifier
payment_application.supports_in_app_payment
grouping_id
group_pid
pass_group.group_order
pass_transaction_service_pid
pass_message_service_pid
pass_default_payment_application_pid
pass_notification_service.notification_service_pid
pass
JOIN pass_type ON pass_type.pid = pass.pass_type_pid
LEFT OUTER JOIN web_service ON web_service.pid = pass.web_service_pid
JOIN pass_group ON pass_group.pid = pass.group_pid
JOIN payment_application ON payment_application.pass_pid = pass.pid
JOIN pass_notification_service ON pass_notification_service.pid = pass_transaction_service_pid OR pass_notification_service.pid = pass_message_service_pid
LEFT OUTER JOIN nfc ON nfc.pass_pid = pass.pid
JOIN associated_pass_type_identifier ON associated_pass_type_identifier.pass_pid = pass.pid
v24@?0@"NSArray"8^@16
v24@?0@"PKPass"8@16
v24@?0@"PKPassDisplayProfile"8@16
v24@?0@"PDPassUpdateContext"8@16
v24@?0@"PDPassGroupingProfile"8@16
com.apple.passd.felicaStateManager.session
passUniqueIdentifier
T@"NSString",C,N,V_passUniqueIdentifier
secureElementIdentifier
T@"NSString",C,N,V_secureElementIdentifier
paymentApplicationIdentifier
T@"NSString",C,N,V_paymentApplicationIdentifier
forceTransactionGeneration
TB,N,V_forceTransactionGeneration
T@"NSDate",C,N,V_transactionDate
credential
T@"NSData",C,N,V_credential
T@?,C,N,V_completion
com.apple.BiometricKit.lockoutStateChanged
locked out
available
disabling
enabling
v12@?0i8
v24@?0@"NSArray"8@"PKFelicaTransitAppletState"16
B32@?0@"PDFelicaStateFetchRequest"8Q16^B24
0000
v16@?0@"NSData"8
transit.felica.cjrc
v24@?0@"MKLocalSearchResponse"8@"NSError"16
Name
Object
UserInfo
T@"<PDFelicaStateManagerDelegate>",W,N,V_delegate
com.apple.passd.felicaStateManager
_MKLocalSearchExternalTransitLookupParameters
/System/Library/Frameworks/MapKit.framework/MapKit
MKLocalSearchRequest
MKLocalSearch
latitude
longitude
max_distance
altitude
name
relevant_text
location_source_pid
pass.local_location_source_pid
pass.pid
location_source.type
pass_location_source.pass_pid
location
JOIN location_source ON location.location_source_pid = location_source.pid LEFT JOIN pass_location_source ON pass_location_source.location_source_pid = location_source.pid JOIN pass ON pass_location_source.pass_pid = pass.pid
JOIN location_source ON location.location_source_pid = location_source.pid LEFT JOIN pass_location_source ON pass_location_source.location_source_pid = location_source.pid 
location_index
location_pid
v24@?0@"PKLocation"8@16
PDRelevantPassProvider
RelevanceExpiration
RelevantTearDownFence
com.apple.passd.relevancy
passes
RelevantCardSetup
RelevantCardSearch
passd-circular
passd-%@
opportunistic
eager
LocationSearch
CLLocationManager cache
Good enough
This will have to do
Expired Search Timer
BeaconSearch
%ld:%@
update relevant cards
nearby-pass-search
v32@?0@"CLBeacon"8Q16^B24
q24@?0@"PKBeacon"8@"PKBeacon"16
uniqueIDs
seedIndex
manifestHashes
useContactlessInterface
PassesLockScreenPlugin
_State
CLLocationManager Delegate
T@"<PDRelevantPassProviderDelegate>",W,N,V_delegate
currentRelevantPassInfo
T@"NSArray",R,N
NEARBY
LastLocation.archive
timestamp
beacons
LastBeacons.archive
TODAY_AT_TIME
YESTERDAY_AT_TIME
TOMORROW_AT_TIME
_SINGULAR
_PLURAL
PDCardFileManager
RevocationCheck
CacheMaintenance
com.apple.fsevents.matching
Card File Manager - Invalid Pass
nukeCards
cache
archive
%@/%@
REVOKED
not revoked
v16@?0B8B12
Ubiquity
Cards
CatalogOfRecord.plist
NonUbiquitousCatalogOfRecord.plist
cards-access-queue
BadLocalPasses
{Failed to create directory=%@}
push_topic
push_token
service_type
service_url
app_launch_token
device_identifier
last_updated_date
last_updated_tag
last_updated_tag_date
notification_service
v24@?0@"PDNotificationService"8@16
UbiquitousCards
ubiquityManager
UbiquityStartup
is NOT
AddUbiquitousCard
v16@?0@"NSURL"8
RemoveUbiquitousCard
UpdateUbiquitousCatalog
v24@?0@"NSURL"8@"NSURL"16
UbiquityMerge
UbiquitySubItemChange
presentedItemURL
T@"NSURL",R,C
presentedItemOperationQueue
T@"NSOperationQueue",R,&
primaryPresentedItemURL
ubiquitousURL
T@"NSURL",&,V_ubiquitousURL
T@"<PDUbiquityManagerDelegate>",N,V_delegate
BadUbiquitousPasses
merchantName
locality
administrativeArea
currencyCode
amount
daysAgoOffset
transitType
startStation
endStation
@16@?0@"NSData"8
v32@?0@"NSData"8@"NSString"16^B24
isValid == YES
v16@?0@"NSSet"8
StoreDemoTransactions.plist
primaryAccountIdentifier == %@
FelicaAppletHistory.plist
T@"SQLiteDatabase",R,&,N,V_database
objectSettingsManager
T@"PDObjectSettingsManager",&,N,V_objectSettingsManager
T@"<PDDatabaseManagerDelegate>",W,N,V_delegate
webServicesDelegate
T@"<PDDatabaseManagerWebServicesDelegate>",W,N,V_webServicesDelegate
paymentServicesDelegate
T@"<PDDatabaseManagerPaymentServicesDelegate>",W,N,V_paymentServicesDelegate
notificationServicesDelegate
T@"<PDDatabaseManagerNotificationServicesDelegate>",W,N,V_notificationServicesDelegate
PDNetworkTaskManagerActivateEligibleTasksActivityIdentifier
%@_v%lu
PDNetworkTaskManager.%@
v32@?0@"PDNetworkTask"8Q16^B24
ActiveTasks
AssertType
NetworkClientActive
AssertLevel
AssertName
TimeoutSeconds
Archive Tasks
scheduled
enqueued
PDTaskErrorDomain
PDTaskWarningDomain
nextStartDate
creationDate
canRequestReauthentication
nextBackoffLevel
nextBackoffIteration
supportsSecureCoding
TB,R
manager
T@"<PDNetworkTaskManagerProtocol>",N,V_manager
TB,N,V_canRequestReauthentication
isValid
TB,N,V_isValid
T@"NSDate",&,N,V_creationDate
T@"NSDate",&,N,V_nextStartDate
v24@?0@"NSHTTPURLResponse"8@"NSData"16
Connection received non-http URL response
Connection received response data in excess of %g megabyte limit
%@ encountered error: %@
%@ warning: %@
successHandler
T@?,C,V_successHandler
failureHandler
T@?,C,V_failureHandler
request
T@"NSURLRequest",&,N,V_request
com.apple.Passbook
shoebox://
prefs:root=PASSBOOK
&path=%@
shoebox://payment_setup
prefs:root=PASSBOOK&path=ADD_CARD
B24@?0r*8@"NSObject<OS_xpc_object>"16
PDBasicErrorDomain
Wrong type object for key %@ in %@ dictionary. Expected %@ but found %@.
The %@ dictionary is missing required key: %@
Array for key %@ in %@ dictionary must contain objects of type %@. Found object of type %@.
PDExitTimerQueue
exited?
PDWebServicesCoordinator
UpdatePassTypeIdentifier
WebServiceTasks
v24@?0@"PDWebService"8^B16
v24@?0@"PDPassUpdateContext"8^B16
UpdatePassTypeIdentifier.%@
T@"PDDatabaseManager",R,N,V_databaseManager
taskManager
T@"PDNetworkTaskManager",R,N,V_taskManager
PDRemoteInterfacePresentationPreheat
com.apple.passd.remoteinterfacepresenter
com.apple.passd.remoteinterfacepresenter.contactlessinterfaceisactive
com.apple.passd.remoteinterfacepresenter.inapppaymentinterfaceisactive
com.apple.passd.remoteinterfacepresenter.continuityinterfaceisactive
Succeeded
Failed
IN_APP_PAYMENT_ERROR_INTERFACE_ACTIVATION_FAILED
IN_APP_PAYMENT_ERROR_INTERFACE_ALREADY_ACTIVE
REMOTE_SETUP_ALERT_TITLE
REMOTE_SETUP_ALERT_BODY
REMOTE_SETUP_ALERT_BODY_NO_APP_NAME
REMOTE_SETUP_ALERT_ADD
REMOTE_SETUP_ALERT_CLOSE
contactless_interface
Contactless Interface Presentation
v32@?0@"<PDRemoteInterfacePresenterObserver>"8Q16^B24
PKPaymentRemoteAlertViewController
.%ld
Lockscreen Contactless Interface
v16@?0@"SBSAssertion"8
paymentRequest
hostIdentifier
hostLocalizedAppName
orientation
hostApplicationIdentifier
PKPaymentAuthorizationRemoteAlertViewController
remotePaymentRequest
PKContinuityPaymentRemoteAlertViewController
Lockscreen Continuity Payment Interface
v12@?0C8
com.apple.springboard.finishedstartup
Payment Interface Launch Assertion
Payment Interface Boost Assertion
assertionManager
T@"PDAssertionManager",R,N,V_assertionManager
fieldDetector
T@"PKFieldDetector",R,N,V_fieldDetector
BYSetupAssistantHasCompletedInitialRun
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
last_deletion_date
tag_last_update_date
web_service
JOIN pass_type ON pass_type.pid = web_service.pass_type_pid
v24@?0@"PDWebService"8@16
notificationIdentifier
customActionRoute
customActionTitle
date
insertionRequirements
allowPresentationOverPass
reissueBannerOnUpdate
active
title
message
merchantIdentifier
passDiffs
paymentTransaction
transitBalance
transitCurrencyCode
[%@ Notification Identifier: %@, Pass Identifier: %@, Date: %@, Active: %@]
%@%@
%@&path=%@
valid
TB,R,N,GisValid
TB,N,GisActive,V_active
TQ,N,V_insertionRequirements
TB,N,V_allowPresentationOverPass
TB,N,V_reissueBannerOnUpdate
notificationType
TQ,R,N
T@"NSString",R,N,V_passUniqueIdentifier
T@"NSString",C,N,V_notificationIdentifier
T@"NSDate",C,N,V_date
T@"NSString",C,N,V_customActionRoute
T@"NSString",C,N,V_customActionTitle
[%@ Title: %@, Message: %@]
T@"NSString",R,N,V_title
T@"NSString",R,N,V_message
VAS_PASS_ADD_UPGRADE_TITLE
VAS_PASS_ADD_UPGRADE_MESSAGE
T@"NSString",R,N,V_merchantIdentifier
v48@?0@"NSString"8@16@24@"NSString"32^B40
@16@?0@"PKDiff"8
shoebox://%@/%@
primaryPassDiff
T@"PKDiff",R,N
T@"NSArray",R,N,V_passDiffs
PAYMENT_TRANSACTION_REFUNDED
PAYMENT_TRANSACTION_DECLINED
PAYMENT_TRANSACTION_REFUND
T@"PKPaymentTransaction",R,N,V_paymentTransaction
TRANSIT_ENROUTE_TRANSACTION_NOTIFICATION_TITLE
TRANSIT_TRANSACTION_TITLE_TRANSIT
TRANSIT_TRANSACTION_NOTIFICATION_TITLE_FORMAT
TRANSIT_TRANSACTION_TITLE_PURCHASE
PURCHASE_TRANSACTION_NOTIFICATION_TITLE_FORMAT
TRANSIT_TRANSACTION_TITLE_REFUND
REFUND_TRANSACTION_NOTIFICATION_TITLE_FORMAT
DEPOSIT_TRANSACTION_NOTIFICATION_TITLE_FORMAT
GREEN_CAR_TRANSACTION_NOTIFICATION_TITLE
GREEN_CAR_TRANSACTION_AMOUNT_NOTIFICATION_FORMAT
SHINKANSEN_TRANSACTION_NOTIFICATION_TITLE
SHINKANSEN_TRANSACTION_AMOUNT_NOTIFICATION_FORMAT
TRANSIT_TRANSACTION_TITLE_CARD_READ
TRANSIT_NOTIFICATION_CURRENT_BALANCE_FORMAT
TRANSIT_TRANSACTION_STATIONS_FORMAT
TRANSIT_NOTIFICATION_NO_CHARGE
T@"NSDecimalNumber",R,N,V_transitBalance
transitBalanceCurrencyCode
T@"NSString",R,N,V_transitBalanceCurrencyCode
PDWebServiceErrorDomain
<PassTypeID: %@> <URL: %@> <Push token: %@> <Device identifier: %@>
passTypeIdentifier
teamIdentifier
serviceURL
deviceIdentifier
T@"NSString",&,N,V_passTypeIdentifier
T@"NSString",&,N,V_teamIdentifier
T@"NSURL",&,N,V_serviceURL
T@"NSString",&,N,V_pushToken
T@"NSString",&,N,V_deviceIdentifier
serialNumber
authenticationToken
manifestHash
lastModifiedTag
lastModifiedDate
lastModifiedSource
Web service error for %@ (%@): %@
T@"NSString",&,N,V_passUniqueIdentifier
T@"NSString",&,N,V_serialNumber
T@"NSString",&,N,V_authenticationToken
T@"NSString",&,N,V_lastModifiedTag
T@"NSDate",&,N,V_lastModifiedDate
Tq,N,V_lastModifiedSource
T@"NSData",&,N,V_manifestHash
payment_application_pid
com.apple.passd.aps
T@"NSString",C,N,V_pushToken
PDUserNotificationTypeUnknown
PDUserNotificationTypeWallet
PDUserNotificationTypeWalletValueAddedServiceTransaction
PDUserNotificationTypePassUpdate
PDUserNotificationTypePassPaymentTransaction
PDUserNotificationTypePassTransitTransaction
PDUserNotificationTypePassTransitRelevancy
PDUserNotificationCoalescingResultNone
PDUserNotificationCoalescingResultPartial
PDUserNotificationCoalescingResultComplete
iconImageBundleURL
iconImageName
cachedTitle
cachedIconImageHash
cachedIconImageData
userNotifications
identity
com.apple.passd.usernotificationmanager.dataproviderconnection
GenericIcon
WALLET
dataProviderConnection
T@"BBDataProviderConnection",R,N,V_dataProviderConnection
dataProviderConnectionQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_dataProviderConnectionQueue
T@"<PDUserNotificationCenterDelegate>",R,W,N,V_delegate
processingQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_processingQueue
v32@?0@"NSString"8@"PDUserNotification"16^B24
[%@ Center Identifier: %@, Identity: %@, Connected: %@
VAS_PASS_ADD_UPGRADE_LOCKSCREEN
TRANSACTION_BULLETIN_TOPIC
TRANSACTION_BULLETIN_MISSED_FORMAT
date >= %@
@16@?0@"PDUserNotification"8
passUniqueIdentifier == %@ AND notificationType == %ul
passUniqueIdentifier == %@
Success
Failure
isActive == YES
q24@?0@"PDUserNotification"8@"PDUserNotification"16
centerIdentifier
T@"NSString",R,N,V_centerIdentifier
latestActiveUserNotification
T@"PDUserNotification",R,N
numberOfActiveUserNotifications
T@"PDUserNotificationCenterIdentity",&,N,V_identity
context
T@"PDUserNotificationCenterContext",&,N,V_context
registration_status
notification_service_pid
pass_notification_service
passUserNotificationCenters
walletUserNotificationCenter
com.apple.wallet
PDWalletUserNotificationManager
com.apple.passd.usernotificationmanager
v32@?0@"NSString"8@"PDUserNotificationCenter"16^B24
Archiving User Notifications
'Passes Exist'
'No Passes Exist'
'Payment Passes Exist'
'No Payment Passes Exist'
Demo Mode Active'
'No Demo Mode Active'
B32@?0@"PKPaymentPass"8Q16^B24
identifier_hash
team_identifier
last_push_date
last_update_date
push_frequency_score
pass.template
pass_type
JOIN pass ON pass_type.pid = pass.pass_type_pid
com.apple.passd.assertioncoordinator
identifier == %@
v32@?0@"PDAssertion"8Q16^B24
v32@?0@"NSNumber"8@"NSArray"16^B24
T@"<PDAssertionCoordinatorDelegate>",W,N,V_delegate
com.apple.passd.notificationmanager
payment_transaction_identifier
payment_application.pid
pass.unique_id
JOIN payment_application ON _01.payment_application_pid = payment_application.pid 
JOIN pass ON pass.pid = payment_application.pass_pid 
v24@?0@"PKFelicaTransitAppletState"8@16
paymentTransactionIdentifier
T@"NSString",N
felicaTransitAppletState
T@"PKFelicaTransitAppletState",R,N
v20@?0B8@"NSError"12
v20@?0B8@"NSXPCListenerEndpoint"12
-[PDInAppPaymentService retrievePaymentListenerEndpointForHostIdentifier:handler:]
v20@?0B8@"NSURLRequest"12
v20@?0B8@"NSURL"12
startSession
paymentWebServiceCoordinator
T@"PDPaymentWebServiceCoordinator",&,N,V_paymentWebServiceCoordinator
T@"<PDInAppPaymentServiceDelegate>",W,N,V_delegate
webService
%@%@=%@
Could not create json data for %@: %@
application/json
Content-Type
Authentication failure
Unexpected response code %d
Connection error
Server response was malformed
T@"PDWebService",R,N,V_webService
T@"NSString",R,N
requestedStatus
POST
DELETE
devices
registrations
ApplePass %@
Authorization
%@ task (for device %@, pass type %@, serial number %@; with web service url %@)
Register
Unregister
TQ,N,V_requestedStatus
lastUpdatedTag
tagLastUpdateDate
passesUpdatedSince
Get serial #s task (for device %@, pass type %@, last updated %@; with web service url %@)
Missing response data
Top-level JSON object must be a dictionary (instead found a %@)
response
serialNumbers
lastUpdated
T@"NSString",&,N,V_lastUpdatedTag
T@"NSDate",&,N,V_tagLastUpdateDate
T@"NSArray",&,N,V_serialNumbers
source
userRequested
serverRequested
If-Modified-Since
Last-Modified
Get pass task (pass type %@, serial number %@, if-modified-since %@; with web service url %@)
Received invalid pass data
Requested pass of type %@, received pass of type %@
Requested serial number %@, received serial number %@
T@"PDPassUpdateContext",R,N,V_context
Tq,R,N,V_source
TB,N,V_userRequested
TB,N,V_serverRequested
T@"PKPass",&,N,V_pass
lastModified
T@"NSString",&,N,V_lastModified
contact
personalizationToken
requiredPersonalizationFields
personalizationSource
personalize
fullName
givenName
familyName
postalCode
ISOCountryCode
emailAddress
phoneNumber
requiredPersonalizationInfo
Personalize pass task (pass type %@, serial number %@, if-modified-since %@; with web service url %@)
Received invalid personalizaiton token signature
T@"PKContact",R,N,V_contact
T@"NSString",R,N,V_personalizationToken
TQ,R,N,V_requiredPersonalizationFields
TQ,R,N,V_personalizationSource
encodedSignature
T@"NSString",R,&,N,V_encodedSignature
logs
Log task (pass type %@, web service url %@)
T@"NSArray",&,N,V_logs
yyyy-MM-dd HH:mm:ss Z
[%@] %@. This will be treated as an error in a future release.
[%@] %@
seid
dpan_id
dpan_suffix
sanitized_dpan
state
suspended_reason
supports_contactless_payment
supports_in_app_payment
supports_A
in_app_pin_required_amount
in_app_pin_required_currency
payment_network_identifier
pass_pid
display_name
auxiliary_application
payment_type
notification_service.pid
payment_application
JOIN pass ON pass.pid = payment_application.pass_pid
JOIN pass ON pass.pid = payment_application.pass_pid JOIN pass_notification_service ON (pass_notification_service.pid = pass.pass_transaction_service_pid OR pass_notification_service.pid = pass.pass_message_service_pid)JOIN notification_service ON notification_service.pid = pass_notification_service.notification_service_pid
v24@?0@"PKPaymentApplication"8@16
'What changed?' task (%@)
pendingTasks
completedTasks
gotUpdates
T@"NSString",R,&,N,V_passTypeIdentifier
subtasks
T@"NSSet",R,&,N
TB,R,N,V_gotUpdates
Transaction
Message
Service Type: %@, Service URL: %@
serviceType
pushTopic
appLaunchToken
lastUpdatedDate
lastUpdatedTagDate
TQ,N,V_serviceType
T@"NSString",&,N,V_pushTopic
T@"NSString",&,N,V_appLaunchToken
T@"NSDate",&,N,V_lastUpdatedDate
T@"NSDate",&,N,V_lastUpdatedTagDate
priority
startDate
endDate
requireMainsPower
requireScreenSleep
requireNetworkConnectivity
repeating
repeatInterval
gracePeriod
activityCritera
activityContextData
activityRegistrations
T@"NSDate",&,N,V_startDate
T@"NSDate",&,N,V_endDate
TB,N,V_requireMainsPower
TB,N,V_requireScreenSleep
TB,N,V_requireNetworkConnectivity
TB,N,GisRepeating,V_repeating
Td,N,V_repeatInterval
activityCriteria
T@"PDScheduledActivityCriteria",R,N,V_activityCriteria
activityContext
T@"<NSCoding>",R,N,V_activityContext
clientInstance
T@"<PDScheduledActivityClient>",W,N,V_clientInstance
activityQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_activityQueue
T@"NSMutableDictionary",&,N,V_activityRegistrations
com.apple.passd.scheduledactivity
ScheduledActivities.archive
Archiving Scheduled Activities
v32@?0@"NSString"8@"PDScheduledActivityClient"16^B24
notificationService
Accept
Date
AuthenticationToken %@
T@"PDNotificationService",&,N,V_notificationService
registrationData
signature
certificates
completionTask
casdCertificate
%@ %@ Task (Device ID: %@, Service URL: %@)
Transactions
Messages
T@"NSString",&,N,V_registrationData
T@"NSString",&,N,V_signature
T@"NSDictionary",&,N,V_certificates
T@"PDNetworkConnectionTask",&,N,V_completionTask
dpan
%@ %@ Task (Device ID: %@, DPAN ID: %@, Service URL: %@)
T@"NSString",&,N,SsetDPANIdentifier:,V_dpanIdentifier
notifications
T@"NSArray",&,N,V_notifications
Accept-Language
transactions
messages
Get %@ Notifications Task (Device ID: %@, Service URL: %@)
transactionDetails
messageDetails
Get %@ Notifications Task (Device ID: %@, DPAN ID: %@, Service URL: %@)
service_identifier
content
message_date
archived
message_type
allow_deep_link
payment_message
JOIN pass ON pass.pid = payment_message.pass_pid
v24@?0@"PKPaymentMessage"8@16
-[PDPaymentService paymentDeviceFieldPropertiesWithHandler:]_block_invoke
-[PDPaymentService defaultPaymentPassUniqueIdentifier:]_block_invoke
-[PDPaymentService setDefaultPaymentPassUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService defaultExpressFelicaTransitPassIdentifierWithHandler:]
-[PDPaymentService simulateDefaultExpressTransitPassIdentifier:handler:]
-[PDPaymentService sharedPaymentWebServiceContextWithHandler:]_block_invoke
-[PDPaymentService setSharedPaymentWebServiceContext:handler:]_block_invoke
-[PDPaymentService transactionsAppLaunchTokenForPassWithUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService messagesAppLaunchTokenForPassWithUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService submitVerificationCode:verificationData:forDPANIdentifier:handler:]_block_invoke
-[PDPaymentService transactionsForPaymentPassWithUniqueIdentifier:withTransactionSource:withBackingData:limit:completion:]_block_invoke
-[PDPaymentService valueAddedServiceTransactionsForPassWithUniqueIdentifier:limit:handler:]_block_invoke
-[PDPaymentService valueAddedServiceTransactionsForPaymentTransaction:handler:]_block_invoke
-[PDPaymentService messagesForPaymentPassWithUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService deletePaymentTransactionWithIdentifier:forPassWithUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService deleteAllTransactionsForPaymentPassWithUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService deleteAllMessagesForPaymentPassWithUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService archiveMessageWithIdentifier:handler:]_block_invoke
-[PDPaymentService insertOrUpdatePaymentTransaction:forPassUniqueIdentifier:paymentApplication:handler:]_block_invoke
-[PDPaymentService processFelicaTransitTransactionEventWithHistory:transactionDate:forPaymentApplication:withPassUniqueIdentifier:]
https
http
-[PDPaymentService insertOrUpdateValueAddedServiceTransaction:forPassUniqueIdentifier:paymentTransaction:handler:]_block_invoke
-[PDPaymentService setDefaultPaymentApplication:forPassUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService defaultPaymentApplicationForPassUniqueIdentifier:handler:]_block_invoke
v28@?0B8@"NSData"12@"NSData"20
-[PDPaymentService initializeSecureElementIfNecessaryWithHandler:]_block_invoke
paymentpass.com.apple.dev1
-[PDPaymentService simulatePaymentPushWithHandler:]_block_invoke
-[PDPaymentService downloadAllPaymentPassesWithHandler:]_block_invoke
-[PDPaymentService consistencyCheckWithHandler:]_block_invoke
SETUP_REMINDER_SUICA_MESSAGE
SETUP_REMINDER_MESSAGE
-[PDPaymentService scheduleSetupReminders:]_block_invoke
AUTOMATIC_PRESENTATION_AVAILABLE_MESSAGE
AUTOMATIC_PRESENTATION_AVAILABLE_ACTION
-[PDPaymentService scheduleAutomaticPresentationAvailableNotificationForPassWithUniqueIdentifier:handler:]
-[PDPaymentService passbookUIServiceDidLaunch:]
notificationServiceCoordinator
T@"PDNotificationServiceCoordinator",&,N,V_notificationServiceCoordinator
paymentTransactionProcessor
T@"PKPaymentTransactionProcessor",&,N,V_paymentTransactionProcessor
felicaStateManager
T@"PDFelicaStateManager",&,N,V_felicaStateManager
T@"PKFieldDetector",&,N,V_fieldDetector
PDWebServicesStandardZeroInterval
PDWebServicesMinimumZeroInterval
PDWebServicesMildRateLimitThreshold
PDWebServicesModerateRateLimitThreshold
PDWebServicesSevereRateLimitThreshold
PDWebServicesPushCutoffThreshold
PDWebServicesMildRateLimitInterval
PDWebServicesModerateRateLimitInterval
PDWebServicesSevereRateLimitInterval
Update requested for unregistered serial number %@
Response to 'What changed?' request included %d serial numbers but omitted a lastUpdated tag.
Response to 'What changed?' request included %d serial numbers but the lastUpdated tag (%@) remained the same.
Device received spurious push. Request for passesUpdatedSince '%@' returned no serial numbers. (Device = %@)
Server requested update to serial number '%@', but the pass was unchanged.
Server ignored the 'if-modified-since' header (%@) and returned the full unchanged pass data for serial number '%@'.
Server returned the pass data for serial number '%@' but did not provide a 'last-modified' header.
Personalization request was issued for serial number '%@', but the pass was unchanged.
CFUserNotification
v24@?0@"NSString"8^B16
OK_BUTTON_TITLE
REENABLE_BUTTON_TITLE
CUTOFF_MESSAGE_MORE_ORGANIZATIONS
CUTOFF_MESSAGE_TWO_ORGANIZATIONS
CUTOFF_MESSAGE_ONE_ORGANIZATION
user-notification-queue
tbl_name
table
index
trigger
sqlite_master
Invalid database URL
PRAGMA cache_size=512;
com.apple.passd.SQLiteDatabase
BEGIN IMMEDIATE TRANSACTION;
COMMIT;
ROLLBACK;
PRAGMA user_version=%ld
PRAGMA user_version;
_temporary_for_table_alteration_
DROP TABLE %@
SELECT name FROM sqlite_master WHERE type='table';
PRAGMA TABLE_INFO(%@);
_PKSQLiteDispatchQueueTag
Failed to delete db handle %p!  SQLite error %i.
requires_certificate
encryption_public_key
v24@?0@"PKNFCPayload"8@16
web_domain
associated_web_domain
v24@?0@"NSMutableString"8@16
payment_transaction_pid
merchant_pid
merchant_url
successful
terminal_application_version
terminal_mode
transaction_date
value_added_service_transaction
JOIN pass ON pass.pid = value_added_service_transaction.pass_pid
v24@?0@"PKValueAddedServiceTransaction"8@16
associated_pass_type_identifier
CREATE TABLE %@ (%@)
INSERT INTO %@ SELECT %@ FROM %@
ALTER TABLE %@ ADD COLUMN %@
ALTER TABLE %@ RENAME TO %@
tableName
T@"NSString",C,N,V_tableName
%@ %@
[%@][%@]
T@"NSString",&,N,V_name
qualifiers
T@"NSString",&,N,V_qualifiers
CREATE
TABLE
"%@"
CONSTRAINT
PRIMARY
UNIQUE
CHECK
FOREIGN
v24@?0@"NSData"8@"NSError"16
proximity_uuid
major
minor
beacon
v24@?0@"PKBeacon"8@16
times_presented
value_added_merchant
v24@?0@"PKValueAddedMerchant"8@16
CREATE TABLE IF NOT EXISTS pass (pid INTEGER, unique_id TEXT NOT NULL, pass_type_pid INTEGER NOT NULL, serial_number TEXT NOT NULL, sequence_counter INTEGER, organization_name TEXT, relevant_date INTEGER, expiration_date INTEGER, voided INTEGER, user_info BLOB, template INTEGER, background_color TEXT, foreground_color TEXT, label_color TEXT, strip_color TEXT, tall_code INTEGER, has_background_image INTEGER, has_strip_image INTEGER, manifest_hash BLOB, web_service_pid INTEGER, push_registration_status INTEGER, push_registration_date INTEGER, authentication_token TEXT, last_modified_tag TEXT, ingested_date INTEGER, modified_date INTEGER, modified_source INTEGER, grouping_id TEXT, group_pid INTEGER, revoked INTEGER, share_count INTEGER, pass_transaction_service_pid INTEGER, pass_message_service_pid INTEGER, pass_flavor INTEGER, primary_account_identifier TEXT, primary_account_suffix TEXT, sanitized_pan TEXT, sharing_method INTEGER, sharing_url TEXT, sharing_text TEXT, supports_dpan_notifications INTEGER, supports_fpan_notifications INTEGER, supports_default_card_selection INTEGER, supports_serial_number_based_provisioning INTEGER, requires_a_cup_of_tea INTEGER, has_stored_value INTEGER, payment_option_selectable INTEGER, pass_default_payment_application_pid INTEGER, cobranded INTEGER, PRIMARY KEY (pid));
CREATE INDEX IF NOT EXISTS pass_flavor_index ON pass (pass_flavor);
CREATE INDEX IF NOT EXISTS pass_unique_id_index ON pass (unique_id);
CREATE TABLE IF NOT EXISTS location_source (pid INTEGER, url TEXT NOT NULL, type INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS pass_location_source (pid INTEGER, pass_pid INTEGER, location_source_pid INTEGER, PRIMARY KEY (pid));
CREATE INDEX IF NOT EXISTS pass_location_source_index ON pass_location_source (location_source_pid);
CREATE TABLE IF NOT EXISTS location (pid INTEGER, latitude REAL, longitude REAL, max_distance REAL, altitude REAL, name TEXT, relevant_text TEXT, location_source_pid INTEGER NOT NULL, PRIMARY KEY (pid));
CREATE INDEX IF NOT EXISTS location_source_index ON location (location_source_pid);
CREATE VIRTUAL TABLE location_index USING rtree(location_pid INTEGER, min_lat REAL, max_lat REAL, min_long REAL, max_long REAL);
CREATE TABLE IF NOT EXISTS beacon (pid INTEGER, proximity_uuid TEXT, major REAL, minor REAL, name TEXT, relevant_text TEXT, pass_pid INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS nfc (pid INTEGER, pass_pid INTEGER, message TEXT, requires_certificate INTEGER, encryption_public_key TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS pass_type (pid INTEGER, identifier TEXT NOT NULL, identifier_hash TEXT, team_identifier TEXT NOT NULL, last_push_date INTEGER, last_update_date INTEGER, push_frequency_score REAL, PRIMARY KEY (pid));
CREATE INDEX IF NOT EXISTS pass_type_identifier_hash_index ON pass_type (identifier_hash);
CREATE TABLE IF NOT EXISTS web_service (pid INTEGER, pass_type_pid INTEGER NOT NULL, service_url TEXT NOT NULL, push_token TEXT, device_identifier TEXT, last_updated_tag TEXT, tag_last_update_date INTEGER, last_deletion_date INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS pass_group (pid INTEGER, group_order INTEGER, pass_type_id TEXT, pass_style INTEGER, grouping_id TEXT, minimum_date INTEGER, maximum_date INTEGER, ingested_date INTEGER, nfc_enabled INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS payment_application (pid INTEGER, seid TEXT, aid TEXT, dpan_id TEXT, dpan_suffix TEXT, sanitized_dpan TEXT, fpan_id TEXT, fpan_suffix TEXT, state INTEGER, suspended_reason TEXT, supports_contactless_payment INTEGER, supports_in_app_payment INTEGER, supports_A INTEGER, a TEXT, b TEXT, payment_network_identifier INTEGER, pass_pid INTEGER, in_app_pin_required_amount INTEGER, in_app_pin_required_currency TEXT, display_name TEXT, auxiliary_application INTEGER,payment_type INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS _02 (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE, a TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS _01 (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE UNIQUE ON CONFLICT REPLACE, payment_transaction_identifier TEXT, a INTEGER, b INTEGER, aa INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, k INTEGER, y INTEGER, g BLOB, h BLOB, i INTEGER, j INTEGER, l TEXT, m INTEGER, z INTEGER, n INTEGER, ab BLOB, ac BLOB, af INTEGER, ag INTEGER, ah TEXT, ai INTEGER, aj INTEGER, ak INTEGER, o BLOB, p BLOB, q TEXT, r TEXT, ad TEXT, ae TEXT, s TEXT, t TEXT, u INTEGER, v INTEGER, w INTEGER, x INTEGER, PRIMARY KEY (pid));
CREATE INDEX IF NOT EXISTS _01_payment_application_pid_index ON _01 (payment_application_pid);
CREATE TABLE IF NOT EXISTS payment_transaction (pid INTEGER, pass_pid INTEGER NOT NULL, payment_application_pid INTEGER, identifier TEXT, service_identifier TEXT, transaction_identifier TEXT, transaction_identifier_component_1 TEXT, transaction_identifier_component_2 TEXT, currency_code TEXT, amount INTEGER, locality TEXT, administrative_area TEXT, transaction_date INTEGER  NOT NULL, location_date INTEGER, location_latitude REAL, location_longitude REAL, location_altitude REAL, location_horizontal_accuracy REAL, location_vertical_accuracy REAL, d BLOB, f TEXT, g BLOB, i TEXT, transaction_status INTEGER, transaction_type INTEGER, a INTEGER, j INTEGER, b INTEGER, c TEXT, technology_type INTEGER, transaction_source INTEGER, has_notification_service_data INTEGER, processed_for_location INTEGER, processed_for_merchant_cleanup INTEGER, processed_for_A INTEGER, merchant_name TEXT, merchant_maps_name TEXT, merchant_raw_name TEXT, merchant_industry_category TEXT, merchant_industry_code INTEGER, merchant_phone_number TEXT, merchant_maps_identifier INTEGER, merchant_result_provider_identifier INTEGER, merchant_url TEXT, merchant_location_latitude REAL, merchant_location_longitude REAL, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS payment_message (pid INTEGER, pass_pid INTEGER NOT NULL, payment_application_pid INTEGER, identifier TEXT, service_identifier TEXT, message_date INTEGER, expiration_date INTEGER, message_type INTEGER, archived INTEGER, content TEXT, allow_deep_link INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS notification_service (pid INTEGER, push_token TEXT, push_topic TEXT NOT NULL, last_updated_date INTEGER, last_updated_tag TEXT, last_updated_tag_date INTEGER, device_identifier TEXT NOT NULL, authentication_token TEXT, app_launch_token TEXT, service_type INTEGER,service_url TEXT NOT NULL, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS pass_notification_service (pid INTEGER, last_updated_date INTEGER, last_updated_tag TEXT, last_updated_tag_date INTEGER, registration_status INTEGER, notification_service_pid INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS associated_app_identifier (pass_pid INTEGER, application_id TEXT, PRIMARY KEY (pass_pid, application_id));
CREATE TABLE IF NOT EXISTS associated_pass_type_identifier (pass_pid INTEGER, identifier TEXT, identifier_hash TEXT, PRIMARY KEY (pass_pid, identifier));
CREATE TABLE IF NOT EXISTS associated_web_domain (pass_pid INTEGER, web_domain TEXT, PRIMARY KEY (pass_pid, web_domain));
CREATE TABLE IF NOT EXISTS value_added_service_transaction (pid INTEGER, pass_pid INTEGER, payment_transaction_pid INTEGER, merchant_pid INTEGER, identifier TEXT, merchant_url TEXT, successful INTEGER, terminal_application_version INTEGER, terminal_mode INTEGER, transaction_date INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS value_added_merchant (pid INTEGER, identifier TEXT, times_presented INTEGER, PRIMARY KEY (pid));
PRAGMA foreign_keys = ON;
show_in_lock_screen_setting
automatic_updates_setting
payment_transaction
location_date INTEGER
in_app_pin_required_amount INTEGER
in_app_pin_required_currency TEXT
v16@?0@"PKPass"8
merchant
raw_name TEXT
maps_name
short_name
sanitized_dpan TEXT
sanitized_pan TEXT
merchant_name TEXT
merchant_maps_name TEXT
merchant_raw_name TEXT
merchant_industry_category TEXT
merchant_industry_code INTEGER
merchant_phone_number TEXT
merchant_maps_identifier INTEGER
merchant_url TEXT
merchant_location_latitude REAL
merchant_location_longitude REAL
UPDATE payment_transaction SET merchant_name                  = (select merchant.name from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_maps_name             = (select merchant.maps_name from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_raw_name              = (select merchant.raw_name from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_industry_category     = (select merchant.industry_category from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_industry_code         = (select merchant.industry_code from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_phone_number          = (select merchant.phone_number from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_maps_identifier       = (select merchant.maps_identifier from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_url                   = (select merchant.url from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_location_latitude     = (select merchant.location_latitude from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_location_longitude    = (select merchant.location_longitude from merchant where merchant.pid = payment_transaction.merchant_pid) WHERE payment_transaction.merchant_pid != 0;
sequence_counter INTEGER
identifier_hash TEXT
supports_dpan_notifications INTEGER
supports_fpan_notifications INTEGER
supports_default_card_selection INTEGER
merchant_result_provider_identifier INTEGER
display_name TEXT
auxiliary_application INTEGER
payment_type TEXT
pass_default_payment_application_pid INTEGER
payment_option_selectable INTEGER
transaction_id
transaction_identifier
transaction_id_component_1
transaction_identifier_component_1
transaction_id_component_2
transaction_identifier_component_2
processed_for_location INTEGER
identifier TEXT
SELECT pid FROM payment_transaction
UPDATE payment_transaction SET identifier = '%@', processed_for_location = '1' WHERE pid = '%@'
temp_payment_type INTEGER
SELECT pid, payment_type FROM payment_application
UPDATE payment_application SET temp_payment_type = %ld WHERE pid = %ld
temp_payment_type
pass_group
nfc_enabled INTEGER
CREATE TABLE IF NOT EXISTS value_added_service_transaction (pid INTEGER, pass_pid INTEGER, payment_transaction_pid INTEGER, identifier TEXT, merchant_identifier TEXT, merchant_url TEXT, successful INTEGER, terminal_application_version INTEGER, terminal_mode INTEGER, transaction_date INTEGER, PRIMARY KEY (pid));
encryption_public_key TEXT
UPDATE payment_transaction SET identifier = '%@' WHERE pid = '%@'
SELECT pid FROM payment_message
UPDATE payment_message SET identifier = '%@' WHERE pid = '%@'
suspended_reason TEXT
has_stored_value INTEGER
merchant_pid INTEGER
merchant_identifier
cobranded INTEGER
supports_serial_number_based_provisioning INTEGER
SELECT pid FROM pass;
DELETE FROM payment_transaction WHERE pass_pid = %ld AND NOT (transaction_sources & %ld) ORDER BY transaction_date DESC LIMIT 100000 OFFSET %ld;
has_background_image INTEGER
has_strip_image INTEGER
SELECT pid, background_hash, strip_hash FROM pass
UPDATE pass SET has_background_image = %d, has_strip_image = %d WHERE pid = %lld
icon_hash
logo_hash
thumbnail_hash
background_hash
strip_hash
payment_assets_hash
CREATE TABLE IF NOT EXISTS pass_properties (pid INTEGER, payment_application_pid INTEGER, property_type INTEGER, perito_moreno TEXT, franz_josef INTEGER, biafo TEXT, pasterze TEXT, lambert INTEGER, jostedal INTEGER, fox INTEGER, hubbard INTEGER, mendenhall TEXT, canada INTEGER, siachen INTEGER, portage TEXT, PRIMARY KEY (pid))
pass_properties
columbia TEXT
property_identifier TEXT
order_within_group
transaction_source INTEGER
has_notification_service_data INTEGER
UPDATE payment_transaction SET has_notification_service_data = 1 WHERE (transaction_sources & 2)
UPDATE payment_transaction SET transaction_source = 1            WHERE (transaction_sources & 1)
UPDATE payment_transaction SET transaction_source = 2            WHERE (transaction_sources & 4)
transaction_sources
CREATE TABLE IF NOT EXISTS _01 (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE UNIQUE ON CONFLICT REPLACE, payment_transaction_identifier TEXT, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));
a INTEGER
b INTEGER
c TEXT
d INTEGER
e INTEGER
f TEXT
g INTEGER
h INTEGER
i TEXT
d BLOB
g BLOB
processed_for_A INTEGER
supports_A INTEGER
a TEXT
requires_a_cup_of_tea INTEGER
f INTEGER
h BLOB
i INTEGER
j INTEGER
l TEXT
m INTEGER
n INTEGER
o BLOB
p BLOB
q TEXT
r TEXT
s TEXT
t TEXT
v INTEGER
w INTEGER
b TEXT
x INTEGER
k INTEGER
u INTEGER
expired
expires_on_next_transaction
archive_on_next_transaction
aa INTEGER
y INTEGER
z INTEGER
ab BLOB
ac BLOB
af INTEGER
ag INTEGER
ah TEXT
ai INTEGER
aj INTEGER
ak INTEGER
ad TEXT
ae TEXT
iad_reporting_identifier
v32@?0@"Pass"8@"PDPassGroupingProfile"16^B24
Applying catalog of record
passTypeID
T@"NSString",C,N,V_passTypeID
groupingID
T@"NSString",C,N,V_groupingID
passStyle
Tq,N,V_passStyle
minDate
T@"NSDate",&,N,V_minDate
maxDate
T@"NSDate",&,N,V_maxDate
T@"NSDate",&,N,V_ingestedDate
nfcEnabled
TB,N,GisNFCEnabled,SsetNFCEnabled:,V_nfcEnabled
relevantDate
T@"NSDate",&,N,V_relevantDate
application_id
associated_app_identifier
com.apple.passd.prefschanged
PDDefaultPaymentPassUniqueIdentifier
PDDefaultExpressFelicaTransitPassUniqueIdentifier
PDDefaultExpressFelicaTransitPaymentApplicationIdentifier
com.apple.passd.preferences.expressFelicaTransit
%@ (%@)
PDLastRevocationCheck
PDCheckPassRevocationClient
PDCheckPassRevocationTask
PDLastLogDate
passes23.sqlite
SBSignificantTimeChangedNotification
com.apple.mobile.keybagd.first_unlock
com.apple.managedconfiguration.passcodechanged
PDWalletUserNotificationSetupApplePayReminder1
PDWalletUserNotificationSetupApplePayReminder2
PDWalletUserNotificationSecureElementAccessLost
PDWalletUserNotificationPassStateChanged
group_order
pass_type_id
pass_style
minimum_date
maximum_date
nfc_enabled
v24@?0@"PDAutomaticGroup"8@16
location_source
com.apple.passd.PDObjectSettingsManager
Saving PKObject Settings
ObjectSettingsManager.archive
pass_location_source
min_lat
max_lat
min_long
max_long
location.latitude
location.longitude
location.max_distance
location.altitude
location.name
location.relevant_text
JOIN location ON location_index.location_pid = location.pid JOIN location_source ON location.location_source_pid = location_source.pid LEFT JOIN pass_location_source ON pass_location_source.location_source_pid = location_source.pid JOIN pass ON pass_location_source.pass_pid = pass.pid
00000000000000000000000000000000
currency_code
administrative_area
transaction_status
transaction_type
technology_type
transaction_source
has_notification_service_data
location_date
location_latitude
location_longitude
location_altitude
location_horizontal_accuracy
location_vertical_accuracy
processed_for_location
processed_for_merchant_cleanup
processed_for_A
merchant_name
merchant_maps_name
merchant_raw_name
merchant_industry_category
merchant_industry_code
merchant_phone_number
merchant_maps_identifier
merchant_result_provider_identifier
merchant_location_latitude
merchant_location_longitude
JOIN pass ON pass.pid = payment_transaction.pass_pid
v24@?0@"PKPaymentTransaction"8@16
v24@?0@"PKMerchant"8@16
^@)\
MbP?
passd is starting up...
Passes directory is accessible - Initializing
Passes directory is not accessible due to file protection
Adding connection from pid: %d
PDPassLibrary (%p:%d): connection invalidated
PDPassLibrary (%p:%d): connection interrupted
PDPaymentService (%p:%d): connection invalidated
PDPaymentService (%p:%d): connection interrupted
PDInAppPaymentService (%p:%d): connection invalidated
PDInAppPaymentService (%p:%d): connection interrupted
PDContinuityPaymentService (%p:%d): connection invalidated
Old Payment Application State: %@
New Payment Application State: %@
Updating Pass: %@
Inserting Pass %@
Migrating data...
registerPaymentListenerEndpoint saved listenerEndpoint: %@
takeListenerEndpointForHostIdentifier returns listenerEndpoint: %@
Received continuity notification
Presented continuity view
Keybag Unlocked - Initializing
Processing Lost Mode Exit
Failed to un-suspend passes from Lost Mode. Asking server for latest versions. Error: %@
No Cards. Skipping Lost Mode Exit
Lost Mode Is Active
Express Transit Transaction: notification received but no pass identifier set.
Received request for payment passes
Received request for thumbnail image for pass: %@
Database integrity problem found.
Database contained extraneous (or duplicate) Unique Identifier: %@
Database was missing uniqueID: %@
Updated Default Payment Pass: %@
Migrating keychain to version 2
Migrating keychain to version 3. Inferring recents update
Migrating default shipping address
Migrating billing address for payment pass: %@
Keychain migration complete
Validating Secure Element access policies...
REMOVING ALL PAYMENT PASSES DUE TO: %{public}@!
Secure Element Pairing State: %@
Secure Element access is valid.
Ignoring Secure Element Access Policy validation as there are no payment passes available.
Ignoring Secure Element Access Policy validation due to payment demo mode.
Checking migration of primary region topic
Updating secure element primaryRegionTopic to :%@
NO PAYMENT PASSES EXIST- ORPHANED APPLETS FOUND IN PAIRED SECURE ELEMENT! MARKING APPLETS FOR DELETION!
Aggregate dictionary pass count log: %lu
Error: We don't support archiving nil contexts!
No consistency check scheduled... scheduling for %@
Configure payment session complete with error: %@
Deleting shared webservice
 (reason: '%@')
Recreating shared webservice
Error: Refusing to update webservice context with nil.
Submitting verification code (%@) for pass (%@,%@)
Verification code accepted
Verification code FAILED
Consistency check already in progress...
Processing VAS Transaction for Merchant ID: %@
Payment Web Service push topics: %@
Received push for push topic: %@
Applying push notification token: %@
New push token is different than current push token: %@
Registering with new push token
Applied token: %@
Payment pass added. Checking if SE is already personalized
SE is already perso'd for %@:%@ aid: %@, fetching passes
SE is not personalized yet.
Comparing server's expectation of installed passes with local passes
%@:%@ not found in list of passes server expects to be on device for region %@. Redownloading
Scheduling consistency check for %@
Ignoring request to schedule consistency check for %@
Handling Scheduled Activity: %@
Provisioning is in progress, rescheduling consistency check
Couldn't find VAS Transaction in our database
Scheduling verification check for %@ on %@
Couldn't copy the VAS pass to our cache
Checking verification status for %@
Posting verification reminder notification for %@
XPC wake for %@: %@
PDAssertionCoordinator (%p:%d): connection invalidated
PDAssertionCoordinator (%p:%d): connection interrupted
Assertion Acquired: %@
Assertion Invalidated: %@
Not supported in region, not opening setup
Client is not entitled for method: %s
Warning: %@ failed to determine remote application identifier for remote process with pid: %i
Notice: Didn't find a db pass with with type: %@ and serial number: %@. Falling back to default %@ settings.
passd was asked to update settings for object by an unentitled process. Refusing.
Cannot add pass: pass cannot be instantiated from data.
passd was asked to migrate data by an unentitled process. Refusing.
Unable to write pass: %{public}@
passd was asked for a pass diff by an unentitled process. Refusing.
passd was notified that account was deleted by an unentitled process. Ignoring.
passd was asked to nuke its db and exit by an unentitled process. Refusing.
%@: Unrecognized client key: %@
Entity does not currently exist in the database. Returning new %@ instance with pid: %lld.
Removing all notification service tasks
Processing Push for Topic: %@
Enabled Notification Services Push Topics: %@
%@ will retry after %g seconds
Re-Authenticating due to Request from Previous Task:%@
Restarting Registration Task for Pass: %@ Notification Service: [%@]
Received registration status update request for Pass with Unique Identifier: %@ with Notification Service: [%@] from: %@ to %@
Attempting to register Pass with Unique Identifier: %@ with Notification Service: [%@]
Signing Registration Data: %@
Signed Registration Data: %@
Failed to Generate Signed Registration Data!
Attempting to de-register Pass with Unique Identifier: %@ with Notification Service: [%@]
Clearing stored state for Pass with Unique Identifier: %@ with Notification Service: [%@]
Performing Completion Task After Successful Registration: %@
Cancelling All Tasks for Payment Application: [%@], Notification Service: [%@]
Device authentication is now %s - %s express mode
Device is in authentication lockout - disabling express mode
Processing Felica Applet State For Stations: %@
Stations Update Response: (%lu, %lu), Application: %@
An Error Occurred While Performing Stations Update (%@): %@
Felica State Manager received unknown notifyd notification: %@
Received XPC events stream handler callback for distributed notification name %@, object %@, userInfo %@
Handle SE Event From TSM for AID: %@
Relevant cards expiration timer fired.
Tear down exit fence timer fired. Clearing persisted location and recomputing relevant cards.
Scheduling Activity to to expire relevant passes at around %@
Too many beacons to fence each one separately; using region fence instead.
Monitoring circular region %@
Monitoring region with beacon UUID %@
Scheduling Activity to tear down exit fences at around %@
Unscheduling exit fences and background timers.
Stopped monitoring region %@.
Starting location search (%s)
   Cached location wasn't good enough, START SEARCHING with accuracy %f
Handling new location from '%@': %@
   Not good enough, we'll hold onto it and keep searching
   %@, stopping search
Stopping location search
Beginning location search timer with duration %g
Search timer expired. Using %@
Starting beacon search
Got beacons %@
Stopping beacon search
Beginning beacon search timer with duration %g
Beacon search timer fired; stopping beacon search.
Nearby pass locations: %@
   %@:%@ card location %@ MATCHES because %g meters away. r: %g
   %@:%@ card location %@ does NOT match because %g meters away. r: %g
   %@:%@ card closest location: %@ (%g meters away)
   %@:%@ card beacon %@ MATCHES - UUID: %@ Major: %@ Minor: %@
   %@:%@ card beacon %@ DOES NOT match - UUID: %@ Major: %@ Minor: %@
Exit fence triggered for region %{public}@.
Location manager ranging beacons failed with error: %@
Location manager failed with error: %@
exception trying to read %@. The data should be discarded. %@
Passbook is not available - sync disabled
Migrating image archive for %@...
Unable to instantiate object with unique ID %@
Content for object with unique ID %@ unavailable at %@
CardFileManager unable to load content for uniqueID %@
CardFileManager is removing invalid pass with uniqueID %@
Failed to move invalid card for unique id %{public}@
Nuking cards!
Unable to enumerate cards directory: %@
Unable to enumerate cache directory: %@
Unable to remove obsolte cache: %@
Removed obsolete cache: %@
Unable to remove cache directory: %@
Removed cache directory with no matching pass: %@
Revocation check for pass [%@] succeeded with result: %@
Certificate revoked for pass (%@)
Revocation check for pass [%@] failed
Failed to instantiate card from %@: %@
Existing pass sequence counter %lu is greater than incoming pass sequence counter %lu. Ignoring.
Error removing card: %@
card updated via ubiquity: %@
card update via ubiquity FAILED: %@
card NOT updated via ubiquity - manifest hashes are equivalent: %@
card removed via ubiquity: %@
catalog received via ubiquity
---> catalog updated
---> catalog not updated - equivalent to existing catalog
Received notification of filesystem change at watched URL.
Unable to create directory %@: %@
Home directory does not exist, failed to create intermediaries: %@
Unable to move %@ due to previous error: %@
Removing cached FSEventIdentifier
Starting ubiquity manager
Ubiquity switch: %@
Passbook switch: %@
Ubiquity is responding
%@ %@ ubiquitous
startDownloadingUbiquitousItemAtURL failed: %@
Ubiquity container does not exist or is not available (URL is nil)
Ubiquity failed to start or was stopped - performing clean up
Evicting ubiquity container
Restarting ubiquity manager
Invalid attempt to insert non-ubiquitous version of pass: %@
inserting ubiquitous version of pass: %@
Failed to recreate cards directory: %@
removing ubiquitous version of pass: %@
Failed to delete card: %@
updating ubiquitous version of catalog: %@
Ubiquity Identity changed.
Attempting coordinated read at URL %@
Coordinated read successful at URL %@
Coordinated read failed with error: %@
We need to merge because there is no cached FSEvent Identifier...
Detected FSEventDeviceUUID change, forcing event ID update
We need to do a ubiquity merge because the last FSEventStreamEventId we were told about is inconsistent with the current event ID...
We need to merge because Passbook sync was off but is now on...
Setting %@ to be ubiquitous with destination %@
Error making pre-ubiquitous URL ubiquitous: %@
Setting ubiquitous URL: %@
merging ubiquitous store and local store
local uniqueIDs: %@
ubiquitous uniqueIDs: %@
Done merging
Unable to read card ids: %@
Copying ubiquitous cards to local store:
Terminating copy of ubiquitous cards to local store.
Copying local cards to ubiquity:
Terminating copy of local cards to ubiquity.
Comparing ubiquitous cards to local cards:
%@ - card manifests are equivalent
%@ - card manifests differ
Terminating ubiquity to local comparison.
Local cards to update from ubiquity: %@
Ubiquity cards to update from local: %@
Comparing local and ubiquitous catalogs
Local: %@
Ubiquitous: %@
Taking local catalog.
Taking ubiquitous catalog.
Taking local catalog because there is no ubiquitous catalog: %@
Taking ubiquitous catalog because there is no local catalog: %@
coordinated read succeeded and ignored at: %@
coordinated read succeeded at: %@
valid card: %@
invalid card: %@
card package missing, checking for fault at: %@
card package removed: %@
faulting in card package: %@
Copying ubiquitous catalog to local store: %@
Copying local catalog to ubiquity: %@
Registering as file presenter
Unable list files in ubiquitous directory: %@
Wrote winning version for %@: %@
Failed to write winning version for %@: %@
presentedItemDidGainVersion: %@
Marking new version as resolved.
Cards were moved to %@.
Stopping ubiquity.
presentedSubitemUbiquityDidChangeAtURL: %@
presentedSubitemDidChangeAtURL: %@
Ignoring subitem change at URL: %@ %@
Presented subitem not recognized; ignoring
Presented subitem not immediately contained by %@ directory; ignoring
presentedSubitemDidAppearAtURL: %@
Ignoring subitem did appear at URL: %@
accomodatePresentedSubitemDeletionAtURL: %@
copying %@ to %@
Failed to write pass: %@
returning last event identifier: %llu
persisting event identifier: %llu
Searching for pass locations in region: %@
Bounding box: {%f, %f, %f, %f}
Deleted database
Recreated database
Error: Could not delete transaction with identifier :%@
Error: No transaction found with identifier :%@
Error: Failed to find a pass in database with unique identifier '%@'.
Inserting Applet State history sequence number: %@
Updating Applet State history sequence number: %@ -> %@
Updating Ephemeral Transaction: %@
Removing Ephemeral Transaction
Retaining Ephemeral Transaction: %@
Inserting Ephemeral Transaction: %@
Matched Transaction to Transaction with Identifier: %@
Could Not Match Transaction on Identifier: %@
Matched Transaction to Transaction with Service Identifier: %@
Could Not Match Transaction on Service Identifier: %@
Matched Transaction to Transaction with Transaction Identifier: %@
Could Not Match Transaction on Transaction Identifier: %@
Fuzzy-Matched Transaction to Transaction with Identifier: %@
Updated Existing Transaction with Identifier: %@ with Transaction: %@
Inserting New Transaction: %@
Resulting Transaction: %@
Soft-Matched Transaction to Transaction with Identifier: %@
Replacing Existing Transaction with Identifier: %@ with Transaction: %@
Removing Existing Transaction with Identifier: %@
Introducing duplicate uniqueID: %@
Introducing extraneous uniqueID: %@
Introducing missing uniqueID: %@
Missing or corrupt database. Recreating.
Unable to create database from scratch. Giving up.
Canceling Task: %@
Letting Task Continue: %@
New task [%@] coalesces with enqueued task [%@]
New task [%@] supplants enqueued task [%@]
New task [%@] merges with enqueued task [%@]
New task [%@] enqueues behind enqueued task [%@]
New task [%@] is enqueues in font of enqueued task [%@]
New task [%@] is forced to drop by enqueued task [%@]
New task [%@] does not interact with any enqueued tasks
Enqueued task [%@] coalesces with scheduled task [%@]
Enqueued task [%@] coalesces with and renews scheduled task [%@]
Enqueued task [%@] supplants scheduled task [%@]
Enqueued task [%@] merges with scheduled task [%@]
Enqueued task [%@] does not interact with any scheduled tasks, dequeueing
Enqueued task [%@] should precede scheduled task [%@], dequeueing ASAP
Enqueued task [%@] is forced to drop by scheduled task [%@]
Enqueued task [%@] remains enqueued behind scheduled task [%@]
Scheduling Activate Tasks Activity with a start date of: %@
Activating task %@
Removing invalid task: %{public}@
Deactivating task %@
No tasks remain in %@ %p
%@ %p: remaining active tasks: %@
%@ %p: Created power assertion: %@ (%d)
%@ %p: Released power assertion: %@ (%d)
Unarchiving tasks...
     --> scheduled task: %@ (%@)
     --> enqueued task: %@
Exception occurred while trying to unarchive task. The data will be discarded. %@
Cannot start a task that is already started. Ignoring.
Cannot start a task that is canceled. Ignoring.
Canceled task cannot deliver result. Ignoring.
Canceled task cannot report state change. Ignoring.
Canceled task cannot report error. Ignoring.
Canceled task cannot report warnings. Ignoring.
Canceled task cannot succeed. Ignoring.
Canceled task cannot fail. Ignoring.
Received authentication challenge:
  ---->Protection Space: <Realm: %@, Host: %@, Protocol: %@, Method: %@>
  ---->Proposed Credential: %@
  Performing default handling.
PDWakePassbookInBackground: -[BKSSystemService openApplication] returned error %@
PDWakePassbookUIServiceInBackground: -[BKSSystemService openApplication] returned error %@
Exit ASAP...
Unbalanced begin/end delaying exit. Please file a Radar on PEP Wallet.
End delaying exit: %@ (%d)
Begin delaying exit: %@ (%d)
Dumping delay exit reasons:
Springboard yielded localized app name '%@' for pid %d
getprocname yielded localized app name '%@' for pid %d
Removing all web service tasks
%@ failed for good
Get serial numbers task completed with update tag %@, serial numbers %@
Get pass task succeeded (%@/%@) but pass has been deleted, so ignoring result.
Rate limiting for %@ is in effect - deferring update until %@
In App Payment Interface Activation: %@
In App Payment Interface Deactivation: %@
Already presenting a setup alert - ignoring
Cannot Present Remote Interface: Protected Data is not Available
Cannot Present Remote Interface: Setup Assistant has not completed
Cannot Present Remote Interface: Lost Mode is Active
Cannot Present Remote Interface: Passbook is Foregrounded
Cannot Present Remote Interface: Interface is Currently Active
Cannot Present Remote Interface: Assertions Currently Active: %@
Contactless Interface Activation: %@
Contactless Interface Deactivation: %@
Continuity Payment Interface Activation: %@
Attempting Activate Contactless Payment Interface for Pass: %@ or Field Properties: %@
Biometric Assertion Acquired
Requesting Remote Alert Activation with Options: %@
SpringBoard Remote Alert Activation Result: %@
Requesting Passcode Unlock from SpringBoard
Unlock Complete
Payment Interface Launch Assertion Acquired
Payment Interface Launch Assertion Cleared
Payment Interface Boost Assertion Acquired
Payment Interface Boost Assertion Cleared
Tagging User Notification as Inactive: %@
Received request for notification thumbnail image using an unimplemented size constraint type: %zd
Attempting to coalesce User Notification: %@ with existing Notification Center: %@
Coalescing result: %@
Cannot insert User Notification: %@ in Notification Center: %@ as it is not valid.
Removing User Notifications for Pass: %@ of type: %@ from Notification Center: %@
Removing User Notifications for Pass: %@ from Notification Center: %@
Removing all User Notifications from Notification Center: %@
Connecting Notification Center: %@...
Notification Center connection to BBDataProviderConnection: %@
Disconnecting Notification Center: %@...
Adding User Notification: %@ in Notification Center: %@
Cannot add User Notification: %@ in Notification Center: %@ due to notification age.
Updating User Notification: %@ in Notification Center: %@
Removing User Notifications: %@ from Notification Center: %@
Exception trying to read %{public}@. The data will be discarded. %{public}@
Scheduling Activity to insert User Notification: %@
Inserting User Notification: %@ into Wallet User Notification Center: %@
Inserting User Notification: [%@] into Pass User Notification Center: [%@]
Could not determine User Notification Center Identifier for User Notification: [%@]
Updating badge count to %ld
Archiving User Notifications
Insertion Requirements (%@) failed for User Notification: %@
URLRequestForMerchantStatusCheck vending request with URL: %@
paymentServicesMerchantURL vending URL: %@
Generating %@ request with URL <%@>
Request contains header field <%@: %@>
Request contains body dictionary %@
%@ got response with code %ld
Failed to delete obsolete payment applications for %@
Removing Scheduled Activity: %@ for Client: %@
Removing Scheduled Activity Client: %@
Archiving Scheduled Activities
Setting XPC criteria for Scheduled Activity: %@ for Client: %@
Preserving prior, identical XPC criteria for Scheduled Activity: %@ for Client: %@
Beginning Scheduled Activity: %@ for Client: %@
Removing finished Scheduled Activity: %@ for Client: %@
Failed to set Scheduled Activity: %@ for Client: %@ to DONE
Removing invalid/expired Scheduled Activity: %@ for Client: %@
Activity Client: %@ is no longer valid and will be removed.
Connection Error for Task: %@ (%@)
%@ Response: %@
Setting default payment pass: %@
Verification code (%@) for DPAND (%@) provided by %@ (%d)
Inserting Payment Transaction via Payment Service: %@
Inserted Value Added Service Transaction: %@
Initializing Secure Element...
Too many pushes too fast for %@ -- mild rate limiting will apply.
Too many pushes too fast for %@ -- moderate rate limiting will apply.
Too many pushes too fast for %@ -- severe rate limiting will apply.
Too many pushes too fast for %@ -- topic will be unregistered.
Something went wrong - cannot generate an alert message for a pass type (%{public}@) with no organization names.
Push interval %g min; zero interval = %g min; score delta = %g; new score = %g
Frequency score %g exceeds cutoff threshold %g
Frequency score %g exceeds severe rate limit threshold %g
Frequency score %g exceeds moderate rate limit threshold %g
Frequency score %g exceeds mild rate limit threshold %g
%@: Could not open database, resetting: [%d, %@]
%@: Resetting after error: [%d, %@]
%@: Could not setup database: [%d, %@]
%@: Could not execute SQL: %@: [%d, %s]
%@: Step failed: %s: [%d, %s]
%@: Could not prepare statement: %@: [%d, %s]
SQLiteBindFoundationValueToStatement: Parameter (index %i) with value '%@' is of unsupported bind type '%@'.
Connection cleared, cancelling outstanding remote payment requests
Migrating Setttings and recreating database...
Migrating database from user_version 8075 to 8076...
Migrating database from user_version 8076 to 8300
Migrating database from user_version 8300 to 8301
Migrating database from user_version 8301 to 8302
Migrating database from user_verion 8302 to 8303
Migrating database from user_verion 8303 to 8304
Migrating database from user_verion 8304 to 8305
Migrating database from user_version 8305 to 9000
Migrating database from user_verion 9000 to 9001
Migrating database from user_version 9001 to 9002
Migrating database from user_version 9002 to 9003
Migrating database from user_version 9003 to 9004
Migrating database from user_version 9004 to 9005
Migrating database from user_version 9005 to 9006
Migrating database from user_version 9006 to 9007
Migrating database from user_version 9007 to 9008
Migrating database from user_version 9008 to 9009
Migrating database from user_version 9009 to 9010
Migrating database from user_version 9010 to 9011
Migrating database from user_version 9011 to 9012
Migrating database from user_version 9012 to 9013
Migrating database from user_version 9013 to 9014
Migrating database from user_version 9014 to 9015
Migrating database from user_version 9015 to 9016
Migrating database from user_version 9016 to 9017
Migrating database from user_version 9017 to 9018
Migrating database from user_version 9018 to 9200
Migrating database from user_version 9200 to 9300
Migrating database from user_version 9300 to 10000
Migrating database from user_version 10000 to 10001
Migrating database from user_version 10001 to 10002
Migrating database from user_version 10002 to 10003
Migrating database from user_version 10003 to 10004
Migrating database from user_version 10004 to 10005
Migrating database from user_version 10005 to 10006
Migrating database from user_version 10006 to 10007
Migrating database from user_version 10007 to 10008
Migrating database from user_version 10008 to 10009
Migrating database from user_version 10009 to 10010
Migrating database from user_version 10010 to 10011
Migrating database from user_version 10011 to 10012
Migrating database from user_version 10012 to 10013
Migrating database from user_version 10013 to 10014
Migrating database from user_version 10014 to 10015
Migrating database from user_version 10015 to 10016
Migrating database from user_version 10016 to 10200
Migrating database from user_version 10200 to 10300
Unrecognized database version %ld
Unable to migrate database from version %ld
Migrating settings: %ld for Pass with unqiue identifier: %@
Creating groups for %lu passes
Validate default pass ordering - default PID: %@
Error: Could not move nil group for pass: %{public}@ to index: %lu
Saving PKObject Settings
Error: PDObjectSettingsManager (PKObjectAdditions) Unknown default settings for object of class %@.
Error: PDObjectSettingsManager (DatabasePassAdditions) expected parameter to be of type 'Pass'.
PDServer
PDCardFileManagerDelegate
PDPassLibraryDelegate
NSObject
PDDatabaseManagerDelegate
PDRelevantPassProviderDelegate
PDFelicaStateManagerDelegate
PDUserNotificationManagerDelegate
PDDistributedNotificationConsumer
PKSecureElementObserver
PDInAppPaymentServiceDelegate
PKPaymentTransactionProcessorDelegate
PKIDSManagerDelegate
PKIDSManagerDataSource
PDRemoteInterfacePresenterObserver
NSXPCListenerDelegate
PDPaymentWebServiceArchiver
PKPaymentWebServiceArchiver
PDPaymentWebServiceCoordinator
PDPushNotificationConsumer
PDXPCEventStreamObserver
PDDatabaseManagerPaymentServicesDelegate
PKPaymentWebServiceBackgroundDelegate
PKSecureElementConsistencyCheckerDelegate
PDAssertionObserver
PDScheduledActivityClient
PDAssertion
PDXPCEventStreamsManager
PDXPCEventStreamObserverEntry
PDXPCEventStreamManager
PDAssertionManager
PDAssertionCoordinatorDelegate
PDPassLibrary
PDPassLibraryExtendedExportedInterface
PDPassLibraryInAppExportedInterface
PDPassLibraryExportedInterface
PDXPCServiceExportedInterface
SQLiteEntity
PDNotificationServiceCoordinator
PDNetworkTaskDelegate
PDDatabaseManagerNotificationServicesDelegate
SQLitePredicate
NSCopying
SQLitePropertyPredicate
SQLiteComparisonPredicate
SQLiteContainsPredicate
SQLiteNullPredicate
SQLiteBooleanPredicate
SQLiteCompoundPredicate
SQLiteHasAssociatedEntityPredicate
SQLiteQuery
SQLiteQueryDescriptor
SQLiteQueryAdditions
Pass
PDFelicaStateFetchRequest
PDExpressFelicaTransitMutationRequest
PDFelicaStateManager
Location
PDRelevantPassProvider
CLLocationManagerDelegate
PDRelevantPassGroup
PDCardFileManager
PDUbiquityManagerDelegate
NotificationService
PDUbiquityManager
NSFilePresenter
PDDatabaseManager
FieldDetect
PDNetworkTaskManager
PDNetworkTaskManagerProtocol
PDNetworkTask
NSSecureCoding
NSCoding
PDNetworkConnectionTask
PDSecureConnectionManager
NSURLConnectionDataDelegate
NSURLConnectionDelegate
PDAdditions
PDWebServicesCoordinator
PDDatabaseManagerWebServicesDelegate
PDRemoteInterfacePresenter
PKFieldDetectorObserver
WebService
PDUserNotification
PDWalletUserNotification
PDWalletValueAddedServiceTransactionUserNotification
PDPassUpdateUserNotification
PDPassPaymentTransactionUserNotification
PDPassTransitTransactionUserNotification
PDPassTransitRelevancyUserNotification
PDWebService
PDPassUpdateContext
PaymentExpressMode
PDPushNotificationManager
APSConnectionDelegate
PDUserNotificationCenterContext
PDUserNotificationCenterIdentity
PDUserNotificationCenterStaticIdentity
PDUserNotificationCenterPassIdentity
PDUserNotificationCenter
BBRemoteDataProvider
BBDataProvider
BBSectionIdentity
PassNotificationService
PDUserNotificationManager
PDUserNotificationCenterDelegate
PassType
PDAssertionCoordinator
PDAssertionCoordinatorExportedInterface
PDDistributedNotificationManager
FelicaTransitAppletState
PDInAppPaymentService
PDInAppPaymentServiceExportedInterface
PDWebServiceConnectionTask
PDRegistrationTask
PDGetSerialNumbersTask
PDGetSerialNumbersResult
PDGetPassTask
PDGetPassResult
PDPersonalizePassTask
PDPersonalizePassResult
PDLogTask
PaymentApplication
PDWhatChangedTask
PDNotificationService
PDScheduledActivityCriteria
PDScheduledActivityRegistration
PDNotificationServiceConnectionTask
PDNotificationServiceRegistrationTask
PDNotificationServiceSpecificRegistrationTask
PDNotificationServiceGetUpdatesResult
PDNotificationServiceGetUpdatesTask
PDNotificationServiceGetSpecificUpdatesTask
PaymentMessage
PDPaymentService
PDPaymentServiceExportedInterface
ErrorDetection
PDUserNotificationAgent
SQLiteMetaEntity
SQLiteDatabase
AssociatedWebDomain
ValueAddedServiceTransaction
AssociatedPassTypeIdentifier
SQLiteTable
SQLiteTableColumn
SQLiteSQLParsingAdditions
PDContinuityPaymentService
PDContinuityPaymentServiceExportedInterface
Beacon
PKUsageNotificationClientExportedInterface
ValueAddedMerchant
Schema
PDPostMigrationContext
Groups
PDAutomaticGroup
PDPassGroupingProfile
AssociatedApplicationIdentifier
Group
LocationSource
PDObjectSettingsManager
PKObjectAdditions
DatabasePassAdditions
PassLocationSource
LocationIndex
PDLocationMap
PaymentTransaction
v40@0:8@16q24@32
v40@0:8@"PKPass"16q24@"PKDiff"32
v40@0:8@16Q24@32
v40@0:8@"NSString"16Q24@"NSString"32
v24@0:8@16
v24@0:8@"PKCatalog"16
v28@0:8@16B24
v28@0:8@"NSString"16B24
v16@0:8
v32@0:8Q16@24
v32@0:8Q16@"NSString"24
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@"NSSet"16@0:8
v24@0:8@?16
v24@0:8@?<v@?@"NSSet">16
v24@0:8@?<v@?@"NSMutableSet">16
@"NSArray"16@0:8
@"PKCatalog"16@0:8
v24@0:8@"PKObject"16
v24@0:8@"NSString"16
v32@0:8@16Q24
v32@0:8@"NSString"16Q24
v40@0:8@16@24@32
v40@0:8@"PKPaymentPass"16@"NSSet"24@"NSSet"32
v32@0:8@16@24
v32@0:8@"NSString"16@"PKPaymentMessage"24
v32@0:8@"NSString"16@"PKPaymentTransaction"24
v32@0:8@"NSString"16@"NSString"24
v32@0:8@"NSString"16@"PKValueAddedServiceTransaction"24
v32@0:8@"NSString"16@"PKFelicaPassProperties"24
B24@0:8q16
v24@0:8@"PDRelevantPassProvider"16
v32@0:8@"NSString"16@"PDUserNotificationManager"24
v32@0:8@"NSString"16@"NSObject<OS_xpc_object>"24
v32@0:8@16d24
v32@0:8@"PKSecureElement"16d24
v28@0:8@"PKSecureElement"16B24
v24@0:8@"PKSecureElement"16
v24@0:8Q16
v52@0:8@16@24@32i40@?44
v52@0:8@"PDInAppPaymentService"16@"NSXPCListenerEndpoint"24@"NSString"32i40@?<v@?B>44
v40@0:8@16@24@?32
v40@0:8@"PDInAppPaymentService"16@"NSString"24@?<v@?B@"NSXPCListenerEndpoint">32
v40@0:8@"PKPaymentTransaction"16@"NSString"24@"PKPaymentApplication"32
v24@0:8@"PKPaymentTransactionProcessor"16
v24@0:8@"PKRemotePaymentRequest"16
v32@0:8@"PKPaymentHostUpdate"16@"PKRemotePaymentRequest"24
v32@0:8@"PKPaymentClientUpdate"16@"PKRemotePaymentRequest"24
v32@0:8@"PKPayment"16@"PKRemotePaymentRequest"24
v32@0:8q16@24
v32@0:8q16@"PKRemotePaymentRequest"24
v24@0:8@"PKIDSManager"16
@24@0:8@16
@"NSArray"24@0:8@"PKIDSManager"16
@"PKPaymentPass"24@0:8@"PKIDSManager"16
B24@0:8@"PKIDSManager"16
@"PKPaymentWebServiceConfiguration"24@0:8@"PKIDSManager"16
^{CGImage=}48@0:8@16{CGSize=dd}24@40
^{CGImage=}48@0:8@"NSString"16{CGSize=dd}24@"PKIDSManager"40
v24@0:8q16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@?16@24
v32@0:8Q16@?24
d24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
@"PDCardFileManager"
@"PDDatabaseManager"
@"PDUserNotificationManager"
@"PDPushNotificationManager"
@"PKSecureElement"
@"PKFieldDetector"
@"PDAssertionManager"
@"PKPaymentTransactionProcessor"
@"PDNotificationServiceCoordinator"
@"PDPaymentWebServiceCoordinator"
@"PKPaymentHostEndpointRegistry"
@"PDDistributedNotificationManager"
@"PDWebServicesCoordinator"
@"PKCatalog"
@"PKUsageNotificationServer"
@"PKIDSManager"
@"PKApplicationRegistry"
@"PDRelevantPassProvider"
@"PDRemoteInterfacePresenter"
@"PDFelicaStateManager"
v24@0:8@"PKPaymentWebServiceContext"16
v24@0:8@"PKPaymentWebServiceBackgroundContext"16
v32@0:8@"NSObject<OS_xpc_object>"16@"NSString"24
v24@0:8@"PKPaymentPass"16
v32@0:8@"PKPaymentWebService"16@"PKPaymentPass"24
v40@0:8@"PKPaymentWebService"16@"PKPaymentPass"24@?<v@?>32
v40@0:8@"PKPaymentWebService"16@"NSArray"24@"NSString"32
v24@0:8@"PKPaymentWebService"16
v24@0:8@"NSArray"16
v28@0:8@"NSDate"16B24
B24@0:8Q16
v32@0:8@"PDAssertionManager"16@"PDAssertion"24
v40@0:8@"NSString"16@"PDScheduledActivityCriteria"24@"<NSCoding>"32
@56@0:8@16@24@32@40@48
v48@0:8@16@24@32@?40
v32@0:8@16@?24
@"PKPaymentWebService"
@"PDPaymentWebServiceArchiver"
@40@0:8Q16@24@32
@"NSString"
@"NSMutableDictionary"
@"<PDXPCEventStreamObserver>"
@"NSMutableArray"
B32@0:8@16Q24
B32@0:8@"PDAssertionCoordinator"16Q24
B32@0:8@"PDAssertionCoordinator"16@"PDAssertion"24
v32@0:8@"PDAssertionCoordinator"16@"PDAssertion"24
@24@0:8Q16
@"NSHashTable"
@"NSXPCListener"
v24@0:8@?<v@?B>16
v32@0:8q16@?24
v32@0:8q16@?<v@?B>24
v40@0:8@16q24@?32
v40@0:8@"NSString"16q24@?<v@?B>32
v32@0:8@"NSArray"16@?<v@?@"NSArray">24
v32@0:8@"PKFieldProperties"16@?<v@?@"NSArray">24
v48@0:8@16q24@32@?40
v48@0:8@"NSString"16q24@"PKDisplayProfile"32@?<v@?@"PKImageSetXPCContainer">40
v40@0:8Q16@24@?32
v40@0:8Q16@"NSString"24@?<v@?>32
v32@0:8@"NSString"16@?<v@?B>24
v64@0:8@16@24@32Q40Q48@?56
v64@0:8@"NSString"16@"PKContact"24@"NSString"32Q40Q48@?<v@?B>56
v32@0:8@"NSString"16@?<v@?@"NSData">24
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSData">40
v32@0:8@16q24
v32@0:8@"PKPass"16q24
v24@0:8@?<v@?>16
v20@0:8i16
v24@0:8@?<v@?@"NSArray">16
v32@0:8@"CLLocation"16@?<v@?@"NSArray"@"NSDictionary">24
v32@0:8@"NSString"16@?<v@?@"PKDiff">24
v32@0:8Q16@?<v@?B>24
v32@0:8@"NSSet"16@?<v@?@"NSSet">24
v32@0:8@"NSSet"16@?<v@?B>24
v40@0:8@16Q24@?32
v40@0:8@"NSSet"16Q24@?<v@?B>32
v40@0:8@"NSSet"16Q24@?<v@?@"NSSet">32
v32@0:8@"NSString"16@?<v@?@"NSSet">24
v32@0:8@"NSData"16@?<v@?B>24
v32@0:8@"NSSet"16@?<v@?Q>24
v40@0:8@"NSString"16@"NSString"24@?<v@?>32
v36@0:8Q16B24@?28
v36@0:8Q16B24@?<v@?@"NSSet"@"PKCatalog">28
v32@0:8Q16@?<v@?@"NSSet">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData"Q>32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"PKPass">32
v32@0:8@"NSString"16@?<v@?@"PKPass">24
v32@0:8@"NSString"16@?<v@?@"PKContent">24
v48@0:8@"NSString"16q24@"PKDisplayProfile"32@?<v@?@"PKImageSet">40
v48@0:8@"NSString"16@"NSData"24@"NSString"32@?<v@?B@"NSError">40
v32@0:8Q16@?<v@?Q>24
v24@0:8@?<v@?@"PKPaymentPass">16
v24@0:8@?<v@?@"PKPass">16
@24@0:8@?16
v32@0:8Q16d24
v28@0:8Q16B24
@36@0:8@16Q24B32
@32@0:8@16@24
B40@0:8Q16@24Q32
B48@0:8@16@24@32Q40
B32@0:8@16^@24
B40@0:8@16Q24^@32
@"PKEntitlementWhitelist"
@"<PDPassLibraryDelegate>"
@24@0:8#16
v48@0:8@16@24@32^@40
B48@0:8@16@24q32@40
@24@0:8@"NSString"16
@"NSArray"24@0:8@"NSArray"16
B32@0:8@16@"NSString"24
B24@0:8@"NSDictionary"16
v24@0:8@"NSDictionary"16
v32@0:8@"NSArray"16@?<v@?@"NSArray"^@>24
@32@0:8@"NSString"16@24
@"NSString"24@0:8@"NSString"16
@"NSMutableDictionary"24@0:8@"NSDictionary"16
@"NSString"24@0:8#16
v48@0:8@"NSDictionary"16@24@"NSArray"32^@40
@32@0:8q16@24
@24@0:8q16
q16@0:8
@"SQLiteDatabase"
v32@0:8@16@"NSError"24
v32@0:8@16@"NSArray"24
v32@0:8@"PKPass"16@"PDNotificationService"24
v48@0:8@16@24@32@40
v48@0:8@"PKPass"16@"PKPass"24@"PDNotificationService"32@"PDNotificationService"40
@48@0:8@16@24@32@40
v44@0:8@16@24Q32B40
B44@0:8@16@24@32B40
@"NSSet"
@"PDNetworkTaskManager"
@24@0:8^{_NSZone=}16
v32@0:8^{sqlite3_stmt=}16N^i24
@40@0:8@16@24q32
@40@0:8@16@24@32
@"SQLiteQuery"
@"NSArray"
@"SQLitePredicate"
@"SQLiteQueryDescriptor"
v24@0:8#16
v20@0:8B16
q32@0:8@16@24
@56@0:8@16@24@32@40q48
@64@0:8@16@24@32@40@48@56
@20@0:8B16
@48@0:8@16@24^@32q40
v32@0:8^Q16^@24
@"NSDate"
@?16@0:8
@"NSData"
v56@0:8@16@24B32@36@44B52
@"<PDFelicaStateManagerDelegate>"
@32@0:8@16Q24
@20@0:8i16
@36@0:8@16Q24i32
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@16i24
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
v24@0:8B16B20
v32@0:8B16B20q24
v44@0:8@16B24d28@36
B36@0:8@16B24@28
v28@0:8q16B24
B56@0:8^@16^@24@32d40@48
@"CLLocationManager"
@"CLLocation"
@"NSTimer"
@"SBSCardItemsController"
@"<PDRelevantPassProviderDelegate>"
@"PKPass"
@"PKPass"24@0:8@"NSString"16
v24@0:8@"PKPass"16
@"NSURL"16@0:8
B40@0:8@16q24^@32
@40@0:8@16q24@32
@32@0:8@16^@24
@"PDUbiquityManager"
@"NSURL"
@"<PDCardFileManagerDelegate>"
@56@0:8@16Q24@32@40@48
@48@0:8@16@24Q32@40
v24@0:8@?<v@?@?<v@?>>16
v24@0:8@?<v@?@"NSError">16
v24@0:8@"NSURL"16
v24@0:8@"NSFileVersion"16
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v32@0:8@"NSURL"16@"NSURL"24
v32@0:8@"NSURL"16@"NSFileVersion"24
@"NSOperationQueue"16@0:8
v20@0:8I16
@"NSOperationQueue"
@"<PDUbiquityManagerDelegate>"
Q24@0:8Q16
Q24@0:8@16
Q32@0:8q16@24
@28@0:8@16B24
@32@0:8@16B24B28
@40@0:8q16@24@32
v44@0:8^@16^@24Q32B40
v32@0:8@16^@24
B32@0:8Q16@24
B48@0:8^Q16^@24@32@40
v48@0:8Q16@24@32@40
B40@0:8^@16^@24@32
B48@0:8^@16^@24^@32@40
B48@0:8^@16^@24^d32@40
v40@0:8@16d24@32
v28@0:8B16@20
@32@0:8Q16@24
Q32@0:8Q16@24
v40@0:8Q16Q24@32
v60@0:8@16@24@32@40B48@?52
@44@0:8@16@24@32B40
@52@0:8@16@24@32Q40B48
@32@0:8@16q24
@48@0:8@16Q24Q32q40
v32@0:8^@16^@24
@48@0:8q16@24@32@40
@"<PDDatabaseManagerDelegate>"
@"<PDDatabaseManagerWebServicesDelegate>"
@"PDObjectSettingsManager"
@"<PDDatabaseManagerPaymentServicesDelegate>"
@"<PDDatabaseManagerNotificationServicesDelegate>"
B24@0:8@?16
@"<PDNetworkTaskDelegate>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
d16@0:8
q24@0:8@16
r^{?=Qd}16@0:8
@"<PDNetworkTaskManagerProtocol>"
@"PDSecureConnectionManager"
@"NSURLRequest"40@0:8@"NSURLConnection"16@"NSURLRequest"24@"NSURLResponse"32
v32@0:8@"NSURLConnection"16@"NSURLResponse"24
v32@0:8@"NSURLConnection"16@"NSData"24
@"NSInputStream"32@0:8@"NSURLConnection"16@"NSURLRequest"24
v48@0:8@16q24q32q40
v48@0:8@"NSURLConnection"16q24q32q40
@"NSCachedURLResponse"32@0:8@"NSURLConnection"16@"NSCachedURLResponse"24
v24@0:8@"NSURLConnection"16
v32@0:8@"NSURLConnection"16@"NSError"24
B24@0:8@"NSURLConnection"16
v32@0:8@"NSURLConnection"16@"NSURLAuthenticationChallenge"24
B32@0:8@"NSURLConnection"16@"NSURLProtectionSpace"24
@"NSURLConnection"
@"NSMutableData"
@"NSHTTPURLResponse"
@"NSURLRequest"
v28@0:8i16@20
v32@0:8d16@24
v52@0:8@16@24@32B40q44
v52@0:8@"NSString"16@"NSString"24@"PDWebService"32B40q44
v44@0:8@16@24@32B40
v44@0:8@"NSString"16@"NSString"24@"PDWebService"32B40
v44@0:8@16@24B32q36
v44@0:8@"NSString"16@"PDWebService"24B32q36
v40@0:8@"NSString"16@"NSString"24@"PDWebService"32
v32@0:8@"PKFieldDetector"16@"PKFieldProperties"24
v24@0:8@"PKFieldDetector"16
v64@0:8@16@24@32@40@48@?56
v48@0:8@16@24q32@?40
v64@0:8@16@24q32@?40@?48@?56
v72@0:8@16@24@32@40@48@?56@?64
v40@0:8@16@?24@?32
v48@0:8@16@?24@?32@40
@"BKSProcessAssertion"
@"BKSApplicationStateMonitor"
@"PKPaymentTransaction"
@"NSDecimalNumber"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
@"APSConnection"
@"<PDUserNotificationCenterDelegate>"
@"BBDataProviderConnection"
@"NSBundle"
@"NSSet"32@0:8@"BBBulletinRequestParameters"16@24
@32@0:8@"NSSet"16@24
@40@0:8@"NSDate"16@"NSDate"24@32
@24@0:8@"NSSet"16
@"BBSectionParameters"16@0:8
v40@0:8@"NSUUID"16@"NSString"24@?<v@?@"NSData">32
v48@0:8@"NSUUID"16@"NSString"24@"BBThumbnailSizeConstraints"32@?<v@?@"NSData">40
v40@0:8@"NSUUID"16@"NSString"24@?<v@?f>32
@"NSData"24@0:8@"NSString"16
@"NSData"32@0:8@"NSString"16@"BBThumbnailSizeConstraints"24
f24@0:8@16
f24@0:8@"NSString"16
B32@0:8@"BBSectionInfo"16@"BBSectionInfo"24
v24@0:8@"BBSectionInfo"16
v32@0:8@"NSString"16@"NSDictionary"24
v24@0:8@"BBActionResponse"16
v32@0:8@"BBActionResponse"16@?<v@?B>24
@40@0:8Q16Q24@32
@"NSSet"40@0:8Q16Q24@32
@48@0:8Q16@24Q32@40
@"NSSet"48@0:8Q16@"NSSet"24Q32@40
@"BBSectionInfo"16@0:8
@"BBSectionIcon"16@0:8
@"NSData"16@0:8
@"BBDataProviderProxy"
@"PDUserNotificationCenterIdentity"
@"PDUserNotificationCenterContext"
v24@0:8@"PDUserNotificationCenter"16
@"PDUserNotificationCenter"
@"<PDUserNotificationManagerDelegate>"
@"NSObject<OS_dispatch_semaphore>"
v24@0:8d16
v48@0:8Q16@24@32@?40
v48@0:8Q16@"NSString"24@"NSString"32@?<v@?B>40
@"<PDAssertionCoordinatorDelegate>"
@40@0:8@16Q24@32
v48@0:8@"PKPaymentRequest"16@"NSString"24@"NSNumber"32@?<v@?B@"NSError">40
v40@0:8@"NSXPCListenerEndpoint"16@"NSString"24@?<v@?B>32
v32@0:8@"NSString"16@?<v@?B@"NSXPCListenerEndpoint">24
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSURLRequest">32
v24@0:8@?<v@?B@"NSURL">16
v24@0:8@?<v@?BQ>16
@"<PDInAppPaymentServiceDelegate>"
@"PDWebService"
@48@0:8@16@24@32Q40
@"PDPassUpdateContext"
@64@0:8@16@24@32@40Q48Q56
@"PKContact"
@"PDScheduledActivityCriteria"
@"<NSCoding>"
@"<PDScheduledActivityClient>"
@"PDNotificationService"
@64@0:8@16@24@32@40Q48@56
@"NSDictionary"
@"PDNetworkConnectionTask"
@72@0:8@16@24@32@40@48Q56@64
v40@0:8@16@24q32
v40@0:8Q16@24@32
Q40@0:8@16@24@32
v24@0:8@?<v@?@"PKFieldProperties">16
v32@0:8@"NSString"16@?<v@?>24
v24@0:8@?<v@?@"NSString">16
v32@0:8@"PKPaymentWebServiceContext"16@?<v@?>24
v24@0:8@?<v@?@"PKPaymentWebServiceContext">16
v32@0:8@"NSString"16@?<v@?@"NSString">24
v56@0:8@16Q24Q32q40@?48
v56@0:8@"NSString"16Q24Q32q40@?<v@?@"NSSet">48
v40@0:8@"NSString"16q24@?<v@?@"NSSet">32
v32@0:8@"PKPaymentTransaction"16@?<v@?@"NSSet">24
v48@0:8@"PKPaymentTransaction"16@"NSString"24@"PKPaymentApplication"32@?<v@?@"PKPaymentTransaction">40
v48@0:8@"PKValueAddedServiceTransaction"16@"NSString"24@"PKPaymentTransaction"32@?<v@?>40
v40@0:8@"PKPaymentApplication"16@"NSString"24@?<v@?@"PKPass">32
v32@0:8@"NSString"16@?<v@?@"PKPaymentApplication">24
v24@0:8@?<v@?B@"NSData"@"NSData">16
v40@0:8@"NSString"16@"NSData"24@?<v@?B@"NSString">32
v48@0:8@"PKFelicaAppletHistory"16@"NSDate"24@"PKPaymentApplication"32@"NSString"40
v40@0:8@"NSString"16@"PKPaymentApplication"24@?<v@?@"PKFelicaTransitAppletState">32
v24@0:8@?<v@?Q>16
v36@0:8@16@24B32
d40@0:8d16@24d32
q24@0:8d16
^{__CFUserNotification=}32@0:8@16@?24
B24@0:8^{sqlite3_stmt=}16
v40@0:8^{sqlite3_stmt=}16^B24^B32
v36@0:8@16B24@?28
B40@0:8@16@24@32
i24@0:8@16
^{sqlite3_stmt=}28@0:8@16B24
^{sqlite3=}
^{__CFDictionary=}
B24@0:8^@16
B32@0:8^@16^@24
B28@0:8S16@20
v32@0:8@"PKRemotePaymentRequest"16@?<v@?@"NSError">24
v40@0:8@"PKPaymentHostUpdate"16@"PKRemotePaymentRequest"24@?<v@?@"NSError">32
v40@0:8@"PKPaymentClientUpdate"16@"PKRemotePaymentRequest"24@?<v@?@"NSError">32
v40@0:8@"PKPayment"16@"PKRemotePaymentRequest"24@?<v@?@"NSError">32
v40@0:8q16@24@?32
v40@0:8q16@"PKRemotePaymentRequest"24@?<v@?@"NSError">32
v56@0:8@16@24{CGSize=dd}32@?48
v56@0:8@"PKRemotePaymentInstrument"16@"PKRemoteDevice"24{CGSize=dd}32@?<v@?@"NSData"@"NSError">48
v32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
v40@0:8@"PKRemoteDevice"16@"NSString"24@?<v@?@"NSError">32
v40@0:8q16@24@32
v40@0:8q16@"NSString"24@"NSDictionary"32
v40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
B32@0:8@16q24
v40@0:8Q16q24Q32
@32@0:8@16d24
B32@0:8@16d24
@44@0:8@16@24i32@36
@36@0:8@16i24@28
Q32@0:8@16Q24
v40@0:8Q16@24Q32
Q24@0:8#16
@40@0:8@16Q24Q32
@56@0:8{?=dddd}16@48
v48@0:8@16Q24@32q40
@64@0:8@16@24Q32Q40@48@56
@56@0:8@16@24Q32@40@48
@56@0:8@16@24Q32Q40q48
Q48@0:8@16@24Q32@40
@56@0:8@16@24d32@40@48
bplist00
DTPlatformVersion_
CFBundleIdentifierZDTCompiler_
DTPlatformBuild\DTXcodeBuild_
CFBundleVersion_
CFBundleShortVersionString_
CFBundleDisplayNameWDTXcode_
CFBundleSupportedPlatforms_
MinimumOSVersion_
CFBundleSignature_
BuildMachineOSBuild^DTPlatformNameYDTSDKNameZDTSDKBuild^UIDeviceFamily\CFBundleNameT10.3_
com.apple.passd_
"com.apple.compilers.llvm.clang.1_0PV8V109dS1.0UpassdT0830
iPhoneSimulatorT????V15A284_
iphonesimulator_
iphonesimulator10.3V14E247
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.passd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.radios.plist</string>
</array>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.accounts.appleidauthentication.defaultaccess</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.bulletinboard.dataprovider</key>
<true/>
<key>com.apple.developer.ubiquity-container-identifiers</key>
<array>
<string>com.apple.shoebox</string>
</array>
<key>com.apple.frontboard.app-badge-value-access</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.icloud.findmydeviced.access</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.ranging</key>
<true/>
<key>com.apple.locationd.spectator</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.multitasking.unlimitedassertions</key>
<true/>
<key>com.apple.nfcd.hwmanager</key>
<true/>
<key>com.apple.private.CoreAuthentication.SPI</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>SerialNumber</string>
</array>
<key>com.apple.private.applesse.allow</key>
<true/>
<key>com.apple.private.corerecents</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.applepay</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.applepay</string>
</array>
<key>com.apple.seld.tsmmanager</key>
<true/>
<key>com.apple.sharing.DeviceDiscovery</key>
<true/>
<key>com.apple.sharing.Services</key>
<array>
<string>com.apple.sharing.ApplePay</string>
</array>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.biometricUnlockSuppression</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.shortcutitems.fullaccess</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.PassbookUIService</string>
</array>
</dict>
</plist>
