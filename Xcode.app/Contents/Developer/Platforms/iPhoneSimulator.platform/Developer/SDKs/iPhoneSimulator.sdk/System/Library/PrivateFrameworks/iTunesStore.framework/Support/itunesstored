downloadsDatabase
alloc
database
initWithPersistentID:inDatabase:
arrayWithObjects:count:
initWithDatabaseEntity:properties:
readUsingTransactionBlock:
logStep:success:description:
valueForProperty:
integerValue
logScenario:step:success:forBundleID:description:
class
logTransactionWithIdentifier:step:success:description:
databaseEntityClass
copyWithZone:
databasePath
initWithFormat:
executeSQL:
createSchemaInDatabase:
createFunctionsInDatabase:
createSchemaInDatabase:withName:
performTransactionWithBlock:
release
init
stringByDeletingLastPathComponent
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileURLWithPath:
initWithDatabaseURL:
_setupDatabase:
setSetupBlock:
initWithDownloadsDatabase:
handlerManager
addHandlerObserver:
weakReferenceWithObject:
newDispatchSourceWithType:
object
_notifyProgressTickTimer
removeHandlerObserver:
dealloc
daemon
takeKeepAliveAssertion:
releaseKeepAliveAssertion:
dispatchAfter:block:
dispatchBlockAsync:
dispatchBlockSync:
modifyUsingPurchaseTransactionBlock:
modifyUsingTransactionBlock:
modifyExternalUsingTransactionBlock:
_newSessionDescription
initWithSessionDescriptor:
changeset
_modifyUsingTransaction:block:
initWithDatabase:
updateAfterSessionsChanged:
canceledAppDataRestoreIDs
count
cancelApplicationRestoresWithBundleIDs:
keepAliveWithAssertion:block:
applicationWorkspaceChanges
defaultWorkspace
applyWorkspaceChanges:
deletedHTTPCookies
HTTPCookies
sharedHTTPCookieStorage
countByEnumeratingWithState:objects:count:
deleteCookie:
setCookie:
_saveCookies
IPodLibraryItems
deviceIPodLibrary
scheduleLibraryItems:
deletedIPodLibraryDownloadIDs
removeDownloadsWithIdentifiers:canceled:
canceledIPodLibraryDownloadIDs
sharedController
cancelPurchasesForDownloadsWithIdentifiers:
appWakeRequests
sharedInstance
wakeAppUsingRequest:
downloadChangeTypes
resetEnabledRemoteNotificationTypes
mainQueue
addOperation:
restoreReason
sharedDownloadQueue
restoreAllRestorableDownloadsWithReason:
restorableDownloadIDs
restoreDownloadsWithIdentifiers:reason:
changedDownloadKinds
containsObject:
paymentQueue
removedPersistentDownloadIDs
finishDownloadsWithIdentifiers:
controller
notifyClientsOfChangeset:
policyChangedDownloadIDs
restartDownloadsWithIdentifiers:
mutableCopy
pipelineRestarts
minusOrderedSet:
unionOrderedSet:
pipelineAdditions
retain
addDownloadsWithIdentifiers:
_commitExternalChangesForChangeset:
setDatabase:
setExternalState:
setPipeline:
setPolicyManager:
downloadHandlerManagerHandlersDidChange:
downloadHandlerManager:sessionsDidChange:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
autorelease
retainCount
zone
hash
superclass
description
debugDescription
modifyAsyncUsingPurchaseTransactionBlock:
modifyAsyncUsingTransactionBlock:
modifyExternalAsyncUsingTransactionBlock:
modifyUsingUpdatesTransactionBlock:
readUpdatesUsingTransactionBlock:
_database
_dirtyProgressByID
_dirtyProgressTimer
_externalState
_pipeline
_policyManager
_progressTickTimer
maxValueForProperty:predicate:database:
doubleValue
orderKeyIncrement
importDownloads:initialOrderKey:orderKeyIncrement:
addDownloadsToPipelineWithIDs:
copy
predicateWithProperty:equalToValue:
arrayWithObjects:
predicateMatchingAllPredicates:
anyInDatabase:predicate:
persistentID
deletePersistentDownloadManagerWithID:
predicateWithProperty:equalToLongLong:
queryWithDatabase:predicate:
addObject:
enumeratePersistentIDsAndProperties:count:usingBlock:
deleteFromDatabase
longLongValue
addDownloadChangeTypes:
existsInDatabase
numberWithLongLong:
setValue:forProperty:
numberWithBool:
addDownloadKind:
addUpdatedDownloadID:
finishDownloadWithID:finalPhase:updatePipeline:
initWithObjects:
stopDownloadsWithIdentifiers:reason:
finishWithFinalPhase:
unionChangeset:
deleteScratchDirectory
isMultiUser
shouldModifyQuota:
resumeQuotas
orderedSet
orderingBucketSize
numberWithDouble:
numberWithInt:
externalPropertyValues
objectForKey:
downloadPolicy
policyManager
addDownloadPolicy:
_copyEffectiveBundleIDForDownload:
_addEffectiveClientWithBundleID:database:
setObject:forKey:
propertyValues
initWithPropertyValues:inDatabase:
_newTransactionForDownload:inDatabase:
setExternalPropertyValues:forDownloadWithID:
setAssetsUsingDownload:
copyDownloadingIPodLibraryItem
addIPodLibraryItem:
initWithTransactionIdentifier:downloadIdentifier:bundleIdentifier:
addAppPlaceholderWithHandle:
length
incompleteNotificationForInstallingDownload:bundleIdentifier:
boolValue
addRestorableDownloadID:
addDownloads:
_orderKeyAdjacentToOrderKey:comparisonType:
_moveDownloadWithID:relativeToDownloadWithID:comparisonType:
downloadKind
addStatusChangedDownloadID:
initWithObjectsAndKeys:
setChangedDownloadProperties:
addPausedAppWithHandle:
moveDownloadWithID:beforeDownloadWithID:
prioritizeDownloadWithIdentifier:
predicateWithProperty:value:comparisonType:
minValueForProperty:predicate:database:
setEntityClass:
setOrderingDirections:
setOrderingProperties:
setPredicate:
initWithDatabase:descriptor:
initWithLongLong:
enumeratePersistentIDsUsingBlock:
predicateMatchingAnyPredicates:
doesNotContainPredicateWithProperty:values:
finishDownloadsWithIdentifiers:finalPhase:
resetDownloadsMatchingPredicate:isUserInitiated:
_resetDownload:withValues:isUserIntiated:
resetDownloadsWithIdentifiers:isUserInitiated:
getValues:forProperties:count:
restartDownloadsInPipelineWithIDs:
retryDownloadsWithIdentifiers:
retryDownload
initWithInteger:
setValuesWithDictionary:
addDownloadToPipelineWithID:
addAppPlaceholderUpdateWithHandle:
isEqualToString:
_setPolicy:forDownloadWithID:
setValue:forExternalProperty:ofDownloadID:
getBytes:length:
numberWithInteger:
setLimitCount:
arrayWithObject:
initWithDownloadKind:URLBagType:
addPolicyChangedDownloadID:
deletePersistentDownloadManagerWithClientID:persistenceID:
divertDownloadID:toJobID:
finishDownloadWithID:finalPhase:
insertDownloads:afterDownloadWithID:
insertDownloads:beforeDownloadWithID:
moveDownloadWithID:afterDownloadWithID:
pauseDownloadsWithIdentifiers:
prioritizeDownloadWithID:aboveDownloadWithID:error:
prioritizeDownloadsWithKind:clientID:
reconcileSoftwareDownloads:fromITunesStore:
resetDownloadsMatchingPredicate:
resetDownloadsWithIdentifiers:
retryDownloadWithIdentifier:
unblockDownloadsWithClientIdentifiers:
updateDownloadEntityWithIdentifier:withDownload:
_initDownloadsChangeset
_appWakeRequests
_applicationWorkspaceChanges
_addApplicationWorkspaceChangeWithHandle:changeType:
_canceledAppDataRestoreIDs
_canceledIPodLibraryDownloadIDs
_deletedHTTPCookies
addObjectsFromArray:
_deletedIPodLibraryDownloadIDs
_finishedDownloadKinds
_cookies
_policyChangedDownloadIDs
removeObject:
unionSet:
changedDownloadProperties
addEntriesFromDictionary:
changedExternalDownloadProperties
setChangedExternalDownloadProperties:
finishedDownloadKinds
removedDownloadIDs
statusChangedDownloadIDs
updatedDownloadIDs
allocWithZone:
mutableCopyWithZone:
setChangeType:
setApplicationHandle:
addApplicationWorkspaceChange:
addAppWakeRequest:
addCanceledAppWithHandle:
addCanceledAppDataRestoreID:
addCanceledIPodLibraryDownloadID:
addDeletedHTTPCookies:
addDeletedIPodLibraryDownloadID:
addFailedAppWithHandle:
addFinishedAppWithHandle:
addFinishedDownloadKind:
addHTTPCookie:
addRemovedDownloadID:
addRemovedPersistentDownloadID:
addRetryAppWithHandle:
removeDownloadFromPipelineWithID:
setRestoreReason:
_changedDownloadKinds
_changedDownloadProperties
_changedExternalDownloadProperties
_downloadChangeTypes
_ipodLibraryItems
_pipelineAdditions
_pipelineRestarts
_removedDownloadIDs
_removedPersistentDownloadIDs
_restorableDownloadIDs
_restoreReason
_statusChangedDownloadIDs
_updatedDownloadIDs
lock
unlock
statusBlock
_getInitialStatus:
_cacheAccountEligibilityWithStatus:
setCarrierBundlingStatus:
carrierBundlingStatus
carrierBundleProvisioningStyle
accountStatus
copyStatusFromUserDefaults
_carrierBundleStatusIsValidForCachedStatus:
cellularOperatorName
setCellularOperatorName:
phoneNumber
setPhoneNumber:
sessionIdentifier
setSessionIdentifier:
reason
setDeepLink:
runSubOperation:returningError:
eligibilityResponse
bundlingStatus
cellularProviderName
domain
code
SMSSessionIdentifier
headerEnrichmentSessionIdentifier
accountIdentifier
defaultStore
activeAccount
uniqueIdentifier
isEqualToNumber:
updateUserDefaultsWithStatus:
setError:
setStatusBlock:
setSuccess:
accountWithUniqueIdentifier:
setEligibility:forServiceType:
addAccount:
authenticationContext
promptStyle
authenticatesIfNecessary
_loadStatusOnce:
initWithAccount:
reasonDescription
localizedAuthenticationReason
setReasonDescription:
setCanCreateNewAccount:
setPromptStyle:
copyAccountID:byAuthenticatingWithContext:returningError:
setCanSendGUIDParameter:
provider
setDataProvider:
setAuthenticationContext:
currentDevice
uniqueDeviceIdentifier
setValue:forRequestParameter:
setURLBagKey:
setRequestProperties:
dataProvider
output
setValuesUsingStatusDictionary:
authenticatedAccountDSID
requiredUniqueIdentifier
setAccountIdentifier:
setAuthenticatesIfNecessary:
setCarrierBundleProvisioningStyle:
setLocalizedAuthenticationReason:
setReason:
.cxx_destruct
_authenticatesIfNecessary
_authenticationContext
_carrierBundleProvisioningStyle
_localizedAuthenticationReason
_reason
_statusBlock
start
drain
initWithPurchaseDirectory:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
stringByAppendingPathComponent:
jetsam
makeObjectsPerformSelector:
path
_dictionary
manifestItemDictionary
_writeToFile
array
initWithManifestItemDictionary:
relativeMetadataPath
contentsOfDirectoryAtPath:error:
pathExtension
initWithContentsOfFile:
valueForMetadataKey:
setRelativeMetadataPath:
setRelativeArtworkPath:
setRelativeMediaAssetPath:
setRelativeFeedAssetPath:
hasPrefix:
substringFromIndex:
errorWithDomain:code:userInfo:
objectAtIndex:
removeObjectAtIndex:
removeAllObjects
removeItemAtPath:error:
_sharedManifestWithManifestType:
purchaseManifestItems
relativeArtworkPath
relativeMediaAssetPath
relativeFeedAssetPath
_handleMessage:connection:usingBlock:
getPathsWithMessage:connection:
addObserver:selector:forMessage:
rebuildWithMessage:connection:
removeItemWithMessage:connection:
rebuildManifest
initWithArray:
removeItemsWithAssetPaths:error:
minusSet:
allObjects
sharedManifestForDownloadKind:
ensureDirectoryExists:
fileSystemRepresentation
propertyListWithData:options:format:error:
dataWithPropertyList:format:options:error:
observeXPCServer:
addCompletedItem:
_dispatchQueue
_path
_setValue:forKey:
removeObjectForKey:
libraryPersistentIdentifier
setLibraryPersistentIdentifier:
contextWithBagType:
setValue:forHTTPHeaderField:
loadedURLBagWithContext:returningError:
valueForKey:
URLWithString:
URLByAppendingQueryParameter:value:
clientAuditTokenData
setClientAuditTokenData:
setURL:
setCachePolicy:
userAgent
authenticationPromptStyle
_familyCircleForDictionary:
_writeCacheWithFamilyCircle:accountIdentifier:
_cachedFamilyCircleWithAccountIdentifier:
_cachePath
date
timeIntervalSinceDate:
initWithCacheRepresentation:
lastObject
pathWithComponents:
setITunesIdentifier:
setFirstName:
setLastName:
setICloudAccountName:
setICloudIdentifier:
setSharingPurchases:
aa_primaryAppleAccount
aa_personID
iCloudIdentifier
stringValue
iTunesIdentifier
predicateWithBlock:
filteredArrayUsingPredicate:
firstObject
setMe:
firstName
isMe
localizedCaseInsensitiveCompare:
sortUsingComparator:
setITunesAccountNames:
setFamilyMembers:
newCacheRepresentation
writeToFile:options:error:
setAuthenticationPromptStyle:
familyCircle
fetchITunesAccountNames
setFetchITunesAccountNames:
setUserAgent:
_authenticationPromptStyle
_clientAuditTokenData
_familyCircle
_fetchITunesAccountNames
_userAgent
_initStoreDownloadQueueResponse
initWithDictionary:userIdentifier:preferredAssetFlavor:
_errorWithFailureType:customerMessage:
initWithDictionary:
setPreferredAssetFlavor:
initWithResponseDictionary:
actionsWithActionType:
intValue
initWithDictionary:userIdentifier:
initWithError:userIdentifier:
downloads
error
errorForItemIdentifier:
keybag
rangesToLoad
setShouldCancelPurchaseBatch:
setTriggeredQueueCheck:
shouldCancelPurchaseBatch
triggeredQueueCheck
userIdentifier
storeCorrelationID
setStoreCorrelationID:
clientIdentifier
setClientIdentifier:
_downloads
_error
_itemErrors
_keybag
_rangesToLoad
_shouldCancelPurchaseBatch
_triggeredQueueCheck
_userIdentifier
_storeCorrelationID
_clientIdentifier
contentLength
_setContentLength:
contentURL
_setContentURL:
downloadState
_setDownloadState:
_setError:
progress
floatValue
_setProgress:
timeRemaining
_setTimeRemaining:
payment
productIdentifier
_setContentIdentifier:
initWithString:
absoluteString
_applyChangeset:
_setTransaction:
_setVersion:
initWithXPCEncoding:
copyXPCEncoding
contentIdentifier
contentVersion
_downloadID
_setDownloadID:
transaction
_contentIdentifier
_contentLength
_contentURL
_downloadState
_progress
_timeRemaining
_transaction
_version
setDownloadID:
setDownloadState:
changesetWithDownloadID:state:
setContentLength:
setContentURL:
downloadID
setProgress:
setTimeRemaining:
localizedDescription
isUserAccepted
currentText
_checkTermsAndConditionsWithBlock:
_presentTermsAndConditions
_dismissTermsAndConditionsWithAcceptance:
_newTermsAcceptSrvOperation
setNeedsAuthentication:
setNeedsTermsAndConditionsAcceptance:
initWithResponseData:error:
_newTermsCheckSrvOperation
setDelegate:
currentVersionIdentifier
_acceptTermsAndConditionsWithBlock:
setITunesStoreRequest:
setHTTPMethod:
dataWithJSONObject:options:error:
setHTTPBody:
copyActivePowerAssertionIdentifiers
releasePowerAssertion:
beginShowingDialog
activateAlertWithDescription:options:completionBlock:
endShowingDialog
takePowerAssertion:
alertProxy:didReceiveMessage:
alertProxyDidCancel:
setUserAccepted:
_account
_alertProxy
_alertSemaphore
_conditions
_result
_userAccepted
initWithRequestProperties:
setPowerAssertionIdentifier:
URLBagKey
setRequestIdentifier:
sharedCache
URLBagForContext:
setURLBagURLBlock:
stringWithFormat:
loadURLBagWithContext:returningError:
numberWithUnsignedLongLong:
isCancelled
_loadDownloadsFromStart:toEnd:
removeObjectsInRange:
requestIdentifier
_newURLOperationWithStartIdentifier:endIdentifier:
writeToFile:atomically:
response
initWithURLResponse:
_runMachineDataOperationWithRequest:syncState:
_handleResponse:
setWaitsForPurchaseOperations:
initWithMachineDataRequest:
syncState
setMachineDataStyle:
needsAuthentication
setUseUserSpecificURLBag:
setAllowedRetryCount:
accountScope
setURLBagType:
guid
thinnedApplicationVariantIdentifier
itemIdentifierValue
newLoadAutomaticDownloadQueueOperation
operation:didAuthenticateWithDSID:
operation:shouldSetStoreFrontID:
operation:didDiscoverContentLength:
operation:didReceiveResponse:
operation:finishedWithOutput:
operation:needNewBodyStream:
operation:processData:error:
operation:willSendRequest:
operation:sanitizedStringForString:
operation:dispositionForAuthenticationChallenge:
operation:credentialForAuthenticationChallenge:
operation:failedWithError:
operation:updatedProgress:
operationFinished:
operationWillStart:
requestProperties
_shouldSendKeyBagSync
_accountIdentifier
_needsAuthentication
_requestIdentifier
_requestProperties
_mdSyncState
initWithPurchase:
affiliateIdentifier
initWithAccountIdentifier:
buyParameters
valueForDownloadProperty:
displaysOnLockScreen
ignoresForcedPasswordRestriction
isBackgroundPurchase
isPlaybackRequest
isPreauthenticated
createsDownloads
createsJobs
_setMoveToiOS
sharedConnection
isAppAnalyticsAllowed
setQueuePriority:
_setUsesPrivateCookieStore:
initWithURL:
setTimeoutInterval:
_URLBagContext
dialog
reset
_runPurchaseRequest
_runDialogOperationForDialog:
changedBuyParameters
success
shouldRetryForDelayedGoto
delayedGotoRetryCount
setBuyParameters:
setDelayedGotoRetryCount:
machineDataSyncState
shouldRetryForMachineData
machineDataRetryCount
setMachineDataRetryCount:
shouldRetryWithOriginalProductOwnerAccount
URLBagType
accountWithUniqueIdentifier:scope:
popBiometricToken
setIgnorePreexistingSecureToken:
base64EncodedStringWithOptions:
didFallbackToPassword
setDidPasswordAuthenticate:
_tokenTypeForTokenString:
setValuesWithAccount:
valueForHTTPHeaderField:
unsignedLongLongValue
setDidFallbackToPassword:
setShouldContinueTouchIDSession:
setChallenge:
setSignature:
buttons
dictionary
redirectActionParameters
setShouldRetryWithOriginalProductOwnerAccount:
_setChangedBuyParameters:fromDataProvider:
bundleForClass:
localizedStringForKey:value:table:
initWithDialogDictionary:
shouldUseTouchID2
_continueTouchIDSessionWithDialog:
kind
actionType
setDialog:
setDisplayedErrorDialog:
initWithDialog:
setDisplaysOnLockscreen:
setMachineDataSyncState:
_performMachineDataActionForURLResponse:
userInfo
bundleID
uninstallPlaceholderForApplicationHandle:
setShouldSendXTokenHeader:
setTracksPerformanceMetrics:
allowsBootstrapCellularData
setAllowsBootstrapCellularData:
setDisplaysOnLockScreen:
setPreferredITunesStoreClient:
setSignupRequestParameters:
HTTPHeaders
requestParameters
setRequestParameters:
_shouldUseClientAuthentication
_newRequestParameters
setAllowsBioAuthentication:
didPasswordAuthenticate
biometricState
isPasscodeSet
identityMap
biometricAuthenticationContext
setShouldSendFallbackHeader:
setBiometricSessionDelegate:
shouldContinueTouchIDSession
challenge
signature
setShouldProcessDialogs:
setShouldTriggerDownloads:
setShouldDecodeResponse:
bagType
redirectURL
clientIdentifierHeader
canBeResolved
urlBagKey
_addFairPlayToRequestProperties:withAccountIdentifier:
sharedWiFiManager
IPAddress
_shouldSendSBSyncData
isMoveToiOS
isAuthenticated
copyDictionaryForQueryString:unescapedValues:
requiresSerialNumber
serialNumber
isEnabledForDataclass:
creditsString
enumerateKeysAndObjectsUsingBlock:
initWithDelayedGoto:
wait
bodyDictionary
queryStringForDictionary:escapedValues:
setRedirectURL:
setShouldRetryForDelayedGoto:
setBlocksPurchaseRequests:
setHidesServerDrivenDialogs:
actionName
setShouldRetryForMachineData:
skipsConfirmationDialogs
parameter
setChangedBuyParameters:
selectedButtonIndex
setOutputBlock:
performDefaultActionForDialog:
tokenType
setSecureToken:
removeFromKeychain
_newPurchaseRequestOperation
_handleFailureForOperation:
processDialogFromDictionary:error:
_performDelayedGotoForOperation:
_setAuthTokenWithDictionary:shouldSave:
_fairPlaySubscriptionController
importSubscriptionKeyBagData:returningError:
reportAnonymousPings:
objectForKeyedSubscript:
setCachedSubscriptionEntitlements:
setRawOutput:
performanceMetrics
initWithURLResponse:bodyData:
allHeaderFields
_accountWithUniqueIdentifier:
synchronizeData
isActive
initWithBase64EncodedString:options:
registerToken:error:
setBiometricState:
clearLastRegisteredAccountIdentifier
shouldSendKeyBagSyncData
valueForKey:inBagContext:
urlForKey:inBagContext:
sender:didFallbackToPassword:
sender:shouldContinueTouchIDSession:
sender:willSendChallenge:andSignature:
originalProductOwnerAccountDSID
requestPerformanceMetrics
setAffiliateIdentifier:
setBackgroundPurchase:
setPlaybackRequest:
setClientIdentifierHeader:
setOriginalProductOwnerAccountDSID:
setUrlBagKey:
URLResponse
uniqueKey
_shouldSendKeyBagSyncData
setBagType:
displayedErrorDialog
setPreauthenticated:
rawOutput
requiresAuthentication
setRequiresAuthentication:
setRequiresSerialNumber:
setShouldSendKeyBagSyncData:
setSkipsConfirmationDialogs:
_accountID
_affiliateIdentifier
_allowsBootstrapCellularData
_applicationHandle
_bagType
_buyParameters
_clientIdentifierHeader
_createsDownloads
_createsJobs
_didAuthenticate
_displayedErrorDialog
_displaysOnLockScreen
_downloadKind
_ignoresForcedPasswordRestriction
_isBackgroundPurchase
_isPlaybackRequest
_mToken
_originalProductOwnerAccountDSID
_preauthenticated
_rawOutput
_requestPerformanceMetrics
_requiresAuthentication
_requiresSerialNumber
_responseInfo
_skipsConfirmationDialogs
_suppressDialogs
_biometricAuthenticationContext
_urlBagKey
_urlResponse
_moveToiOS
_changedBuyParameters
_delayedGotoRetryCount
_dialog
_didPasswordAuthenticate
_machineDataRetryCount
_machineDataSyncState
_redirectURL
_shouldRetryForMachineData
_shouldRetryForDelayedGoto
_shouldRetryWithOriginalProductOwnerAccount
initWithInputConnection:
addDisavowedSessionProperties:
disavowedSessionProperties
downloadPhasesToIgnore
handlerIdentifier
resetDisavowedSessionProperties
sessionsNeedPowerAssertion
sessionsShouldBlockOtherDownloads
setDownloadPhasesToIgnore:
setHandlerIdentifier:
setSessionsNeedPowerAssertion:
setSessionsShouldBlockOtherDownloads:
_disavowedSessionProperties
_downloadPhasesToIgnore
_handlerIdentifier
_sessionsNeedPowerAssertion
_sessionsShouldBlockOtherDownloads
checkInDialog:
checkOutDialog:
setActivityIdentifier:
setPollingDuration:
setPollingInterval:
setPostIdentifier:
setSourceApplicationIdentifier:
setPostCreateTime:
activityIdentifier
pollingDuration
pollingInterval
postIdentifier
sourceApplicationIdentifier
postCreateTime
_activityIdentifier
_pollingDuration
_pollingInterval
_postIdentifier
_sourceApplicationIdentifier
_postCreateTime
downloadIdentifier
assetIdentifier
downloadPhase
authenticationChallenge
initWithClientIdentifier:handlerIdentifier:
setAssetIdentifier:
setAuthenticationChallenge:
setDownloadIdentifier:
setDownloadPhase:
duetBudget
setDuetBudget:
_assetID
_authenticationChallenge
_downloadPhase
_duetBudget
assetBlockedReason
setAssetBlockedReason:
downloadHandle
setDownloadHandle:
downloadHandlerSession
setDownloadHandlerSession:
mediaAssetIdentifier
setMediaAssetIdentifier:
mediaAssetInstallPath
setMediaAssetInstallPath:
result
setResult:
_assetBlockedReason
_downloadHandle
_downloadHandlerSession
_mediaAssetInstallPath
setMaxValue:
setUnits:
fileProcessor
setCurrentValue:
snapshot
sendProgressToDelegate
processPurchasedItem:withAttributes:resultInfo:progressBlock:
initWithMediaPath:sinfs:
mediaFileExtension
mediaPath
sinfs
_mediaFileExtension
_mediaPath
_sinfs
initWithSinfs:
initWithSinfArray:
dataForSinfDataKey:
_primarySINF
_copyAccountIdentifier
_copyRentalIdentifier
shouldCheckoutWithPlay
productType
initWithSINFs:
copyValueForProperty:error:
errorBySettingFatalError:
_showErrorDialogForOutput:
rentalDuration
rentalStartTime
dateWithTimeIntervalSince1970:
dateWithTimeInterval:sinceDate:
timeIntervalSinceNow
playbackStartTime
playbackDuration
_bodyData
isBackgroundCheckout
_handleResponse:error:
_performCheckout:
_haveValidRentalInformation
defaultCenter
postNotificationName:
operationWithError:
initWithAccountIdentifier:rentalKeyIdentifier:
initWithStoreDownloadSinfs:
rentalKeyIdentifier
_run
setBackgroundCheckout:
shouldValidateRentalInfo
setShouldValidateRentalInfo:
setCheckoutWithPlay:
_backgroundCheckout
_rentalKeyIdentifier
_shouldValidateRentalInfo
_checkoutWithPlay
_databasePath
initWithDatabaseURL:readOnly:
statementHasRowAfterStepping:
prepareStatementForSQL:cache:usingBlock:
fileURLWithPath:isDirectory:
dSIDForAppleID:
_registerNotifier
batterySaverWatcherDidChangeState:
_getState
_notifyDelegate
initWithDelegate:
batterySaverEnabled
_updateStatus
delegate
_enabled
_notifyQueue
_token
_delegate
setPlaybackDuration:
setPlaybackStartTime:
setRentalDuration:
setRentalStartTime:
_playbackDuration
_playbackStartTime
_rentalDuration
_rentalStartTime
initWithUnsignedLongLong:
_isRecognizedProperty:
_copyValueForSINF:property:error:
copyValueForField:error:
newDownloadProperties
copyDatabaseDictionaryToSetClientDictionary:
cookiesForURL:
copyLockdownRepresentation
ITunesSafeGUID
queryWithDatabase:predicate:orderingProperties:
anyAssetForAssetType:
setDownloadType:
setProtectionType:
copyStoreDownloadMetadata
setItemMetadata:
setItemDownloadIdentifier:
initWithDownload:
dictionaryWithObjects:forKeys:count:
incompleteNotificationForFailedDownload:bundleIdentifier:
failDownloadsWithIdentifiers:
addPersistentDownloadsWithClientID:kind:
_shouldSuppressDialogForError:
initWithError:
addDownloadIdentifier:
setDownloadKind:
setDownloadTitle:
sharedErrorController
showDownloadError:
allAssetCookies
shouldUseAppstoredForUpdates
_applyPhase:toUpdateWithStoreItemIdentifier:changeset:
incompleteNotificationForCanceledDownload:bundleIdentifier:
newsstandFinishRequestWithAppIdentifier:issueIdentifiers:
sinfsArray
rentalID
numberWithUnsignedInt:
_resetAssetProperty:
assets
_databaseAssetForAsset:
copyStoreDownloadKeyCookie
disambiguatedSQLForProperty:
_deleteTransaction
removeExternalValuesForDownloadID:
fileExistsAtPath:
isNullPredicateWithProperty:
copyValueDictionaryWithMetadata:
databasePropertyToGetClientProperty:
databasePropertyToSetClientProperty:
databaseTable
foreignDatabaseColumnForProperty:
foreignDatabaseTableForProperty:
foreignDatabaseTablesToDelete
foreignKeyColumnForTable:
joinClauseForProperty:
memoryEntityClass
initialize
copyAdditionalMetadataForStoreDownload:
copyAssetsWithAssetType:
failWithError:
itemIdentifier
rentalInformation
resetAssetLocalPaths
resetAssetURLs
applicationDSID
downloaderDSID
externalVersionIdentifier
familyID
itemID
purchaserDSID
storeFront
deviceIdentifierForVendor
UUIDString
setHasRestoreData:
setRestoreDataSize:
setStoreFrontID:
setStoreItemID:
setStoreSoftwareVersionID:
setVendorIdentifier:
setStoreAccountID:
setStoreOriginalPurchaserAccountID:
setDownloaderIdentifier:
setExternalVersionIdentifier:
setFamilyIdentifier:
setItemIdentifier:
setPurchaserIdentifier:
setStoreFrontIdentifier:
initWithApplication:
initWithDictionaryRepresentation:
dictionaryRepresentation
restoreDownloadItem
downloaderIdentifier
familyIdentifier
purchaserIdentifier
storeFrontIdentifier
vendorIdentifier
_downloaderIdentifier
_externalVersionIdentifier
_familyIdentifier
_itemIdentifier
_purchaserIdentifier
_storeFrontIdentifier
_vendorIdentifier
automaticType
setAutomaticType:
bundleIdentifier
setBundleIdentifier:
setKind:
isLegacyClient
setLegacyClient:
requiresDownloadHandler
setRequiresDownloadHandler:
transferProgressFraction
setTransferProgressFraction:
_overallProgress
maxValue
setTransferProgress:
initWithPrepareDownloadResponse:
overallProgress
setFinishProgress:
setTransferProgressWithBytesWritten:totalBytesExpected:
transferBytesExpected
setTransferBytesExpected:
transferBytesWritten
setTransferBytesWritten:
transferResumptionOffset
setTransferResumptionOffset:
_automaticType
_downloadIdentifier
_bundleIdentifier
_kind
_legacyClient
_mediaAssetIdentifier
_requiresDownloadHandler
_transferBytesExpected
_transferBytesWritten
_transferProgressFraction
legacyClient
_transferResumptionOffset
_refreshDidFinishNotification:
addObserver:selector:name:object:
_clientDisconnectNotification:
removeObserver:name:object:
_clients
isSandboxed
_beginManagedContextSession
entityForContext:
initWithEntity:insertIntoManagedObjectContext:
setIdentifier:
setSandboxed:
objectID
initWithMicroPaymentClientID:
endManagedContextSession
refreshFromServerWithReason:accountIdentifier:
_dispatchAsync:
client
_enumerateDownloadsForIdentifiers:context:usingBlock:
setState:
numberWithFloat:
_clientForObjectID:
sendDownloadChangesets:
setLocalURL:
downloadEntityFromContext:
setEntity:
predicateWithFormat:
setPropertiesToFetch:
executeFetchRequest:error:
_clientForPayment:
addPaymentWithMessage:connection:
cancelDownloadsWithMessage:connection:
cancelRequestWithMessage:connection:
checkQueueForClientWithMessage:connection:
finishPaymentWithMessage:connection:
getTransactionsWithMessage:connection:
pauseDownloadsWithMessage:connection:
productsRequestWithMessage:connection:
registerClientWithMessage:connection:
restoreCompletedTransactionsWithMessage:connection:
resumeDownloadsWithMessage:connection:
startDownloadsWithMessage:connection:
updateDeferredPaymentWithMessage:connection:
_startFirstReadyPayment
payments
paymentEntityFromContext:
state
updatePaymentWithObjectID:purchaseResponse:
_newPaymentQueueClientWithMessage:connection:parameter:
_clientForConnection:paymentQueueClient:
addPaymentTransaction:withOptions:
_copyDownloadsIDsFromMessage:key:
cancelDownloadsWithIDs:
cancelOperationForConnection:
checkQueueForClientWithIdentifier:URLBagContext:
finishPaymentWithMessage:
refreshFromServerWithReason:
openTransactions
pauseDownloadsWithIDs:
requestProductsWithMessage:connection:
XPCClient
setOutputConnectionWithConnection:
outputConnection
sendMessage:
createMicroPaymentClientIfNecessary
restoreCompletedTransactionsWithApplicationUsername:
resumeDownloadsWithIDs:
startDownloadsWithIDs:
setFailedWithError:
sendPaymentsUpdatedWithObjectIDs:
setXPCClient:
networkType
firstReadyPaymentID
checkIntegrityWithInitializationBlock:
beginManagedContextSession
isEqualToXPCConnection:paymentQueueClient:
setPaymentQueueClient:
microPaymentClientID
initWithCapacity:
usesIdentityAttributes
identifier
bundleVersion
storeIdentifier
storeVersion
sandboxed
setClient:
deleteObject:
allValues
_setActivePaymentID:
_networkTypeChanged:
objectWithID:
insertDate
compare:
_firstReadyPaymentInContext:
_finishPaymentOperationForPaymentID:result:error:
startPaymentWithObjectID:withCompletionBlock:
notifyClientsOfExternalPropertyChanges:ofDownloadID:
startFirstReadyPayment
updateWithPurchaseResponse:
_activePaymentID
_aliveState
_changeSetCount
_observingNetworkChanges
_array
persistentStoreCoordinator
managedObjectModel
entitiesByName
transactionIdentifier
supportsDeferredPayment
managedObjectContext
requestType
isEqualToResponse:compareAllFields:
mergeValuesFromResponse:
originalTransactionIdentifier
rollback
setAddedPayments:
setChangedPayments:
setRemovedDownloadIDs:
setRemovedPayments:
setBundleVersion:
setStoreIdentifier:
setStoreVersion:
setUsesIdentityAttributes:
hidesConfirmationDialogs
setHidesConfirmationDialogs:
ignoresInAppPurchaseRestriction
setIgnoresInAppPurchaseRestriction:
receiptDirectoryPath
setReceiptDirectoryPath:
requiresAuthenticationForPayment
setRequiresAuthenticationForPayment:
mergeResponse:withOptions:
replacePayment:withPurchaseResponse:
setValuesWithClientIdentity:
didChange
addedPayments
changedPayments
removedPayments
_addedPayments
_changedPayments
_removedPayments
applicationUsername
setApplicationUsername:
partnerIdentifier
setPartnerIdentifier:
partnerTransactionIdentifier
setPartnerTransactionIdentifier:
setProductIdentifier:
quantity
setQuantity:
requestData
setRequestData:
simulatesAskToBuyInSandbox
setSimulatesAskToBuyInSandbox:
actionParams
initWithPayment:
errorData
purchaseDate
_setTransactionDate:
receiptData
_setTransactionReceipt:
_clientStateForServerState:
_setTransactionState:
_setTransactionIdentifier:
_temporaryIdentifier
_setTemporaryIdentifier:
originalPurchaseDate
_setOriginalTransaction:
copySKDownload
_setDownloads:
userDSID
setReceiptData:
setUserDSID:
setPurchaseDate:
setOriginalPurchaseDate:
setTransactionIdentifier:
setOriginalTransactionIdentifier:
_updateDownloadsFromResponse:
setAskPermissionRequestIdentifier:
setErrorData:
matchingIdentifier
awakeFromInsert
setInsertDate:
willChangeValueForKey:
setPrimitiveValue:forKey:
didChangeValueForKey:
transactionState
_serverStateForClientState:
transactionDate
transactionReceipt
setActionParams:
originalTransaction
setDownloads:
anyObject
setValuesWithAssetDictionary:
setPayment:
remoteURL
responseIsValid:
copyPaymentTransaction
isReady
setValuesWithPaymentTransaction:
isTransientFailed
setTransientFailed:
_transientFailed
clientIdentity
loadSoftwareMapReturningError:
_runPurchaseOperation
currentMap
applicationForBundleIdentifier:
supportedExtensionForBundleIdentifier:
setValuesWithSoftwareApplication:
copyUTF8StringOfLength:
bytes
appendFormat:
accountDSID
ITunesMetadataDictionary
escapedStringForString:
isBeta
appendString:
initWithClientIdentity:
setClientIdentity:
_fullBuyParameters
hasMIDBasedSINF
stringByAppendingFormat:
setShouldCreateNewSession:
setTokenType:
setUserIdentifier:
loadFromPropertyList:
appReceipt
writeReceipt:forStoreKitClient:
shouldTriggerQueueCheck
_applicationUsername
_clientIdentity
_partnerIdentifier
_partnerTransactionIdentifier
_productIdentifier
_quantity
_requestData
_response
_simulatesAskToBuyInSandbox
setMaxConcurrentOperationCount:
setName:
removeAllCachedResponses
sharedCoordinator
_accountStoreDidChangeNotification:
getStatusWithOptions:statusBlock:
contentTasteItemUpdates
setContentTasteItemUpdates:
shouldInvalidateLocalCache
setShouldInvalidateLocalCache:
expirationDate
isEqualToDate:
currentLocale
descriptionWithLocale:
_addBackgroundRefreshTask
isCachedResponse
responseRevisionID
_sendChangeNotificationWithRevisionID:
setCompletionBlock:
operations
addDependency:
updateMediaContentTasteWithRequest:completionHandler:
_accessQueue
_currentAccountUniqueID
_didChangeNotifyToken
_expirationDate
_hasValidDidChangeNotifyToken
_operationQueue
isEqualToArray:
makeObjectsPerformSelector:withObject:
canMergeWithTransaction:
mergeWithTransaction:
_transactionIdentifier
_internal
_originalTransaction
_payment
_transactionDate
_transactionReceipt
_transactionState
_ntsLoadFromPropertyList:
_dsidFromDictionary:
UTF8String
_copyPaymentsFromDictionary:
_copyAppReceiptFromDictionary:
initWithRequestType:
appendResponse:
serverPaymentCount
setServerPaymentCount:
setPayments:
setRangesToLoad:
setShouldTriggerQueueCheck:
_appReceipt
_lock
_payments
_requestType
_serverPaymentCount
_shouldTriggerQueueCheck
initWithContentsOfFile:options:error:
initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:
decimalNumberByRoundingAccordingToBehavior:
downloadContentLengths
downloadContentVersion
isDownloadable
localizedTitle
price
priceLocale
_localeIdentifier
_setContentVersion:
_setDownloadContentLengths:
_setDownloadable:
_setLocaleIdentifier:
_setLocalizedDescription:
_setLocalizedTitle:
_setPrice:
_setPriceLocale:
_setProductIdentifier:
_contentVersion
_downloadable
_downloadContentLengths
_localizedDescription
_localizedTitle
_price
_priceLocale
setIgnoresCaches:
_newMatchStatusOperationWithURLBag:
matchStatus
_matchStatus
_parseResponse:returningError:
_userDSID
_completeNotification:bundleIdentifier:
_incompleteNotification:forDownload:bundleIdentifier:
callStackSymbols
timeIntervalSinceReferenceDate
completeNotificationForCanceledBundleIdentifier:
completeNotificationForFailedBundleIdentifier:
completeNotificationForInstallingBundleIdentifier:
deleteIncompleteNotification:forBundleIdentifier:
beginThreadContextSession
endThreadContextSession
beginPrivateManagedContextSession
endPrivateManagedContextSession
save:
initWithStoreType:
initWithConfiguration:error:
signupRequestParameters
setInterruptsKeybagRefresh:
preferredITunesStoreClient
setTargetIdentifier:
initWithOpenURLRequest:
initWithAuthenticationContext:
initWithXPCConnection:
createXPCEndpoint
_disconnect
setDisconnectBlock:
_handleMessage:connection:
setMessageBlock:
initWithMessage:
XPCEndpoint
_delegateQueue
_inputConnection
_inputEndpoint
_outputConnection
setRedirectActionParameters:
urlType
setPerformsButtonAction:
runSubOperation:error:
selectedButton
_performActionsForButton:withDialog:
setAuthenticatedAccountDSID:
_runServerAuthenticationOperation:error:
_redirectActionParameters
applicationProxyForIdentifier:
isInstalled
isPlaceholder
initWithApplicationHandle:
applicationIsInstalled:
blocksAppInstallation
runWithCompletionBlock:
applicationHandle
initWithClientIdentifier:
defaultManager
allCachedManifests
version
compare:options:
sortedArrayUsingComparator:
currentManifestFileURL
URLByResolvingSymlinksInPath
cacheURL
attributesOfItemAtPath:error:
fileCreationDate
removeItemAtURL:error:
URLByStandardizingPath
assetsDirectoryURL
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
initWithClientIdentifier:completion:
_cacheManager
_completion
setOperationQueue:
initWithProductIdentifiers:
setValuesWithPaymentQueueClient:
isAppleSigned
copyProductsResponse
addOperation:forMessage:connection:replyBlock:
addOperation:forClient:withMessageBlock:
setSharedInstance:
setAdjustsMaxConcurrentOperationCount:
addKeepAliveOperationQueue:
itemName
vendorName
resetVPPStateFlags
vppStateFlags
initWithTitle:message:
buttonWithTitle:
setButtons:
setDefaultButtonIndex:
operationWithDialog:
indexOfObjectIdenticalTo:
setKeyProfile:
initWithLookupProperties:
setPersonalizationStyle:
lookupResponse
itemForKey:
productPageURL
initWithBundleIdentifier:
setResultsBlock:
_resultsBlock
_applicationForIdentity:error:
_batchSizeForIdentity:error:
_loadResponseForIdentity:batchSize:returningError:
autoupdatingCurrentLocale
localeIdentifier
componentsJoinedByString:
_copyQueryStringDictionaryForIdentity:productIdentifiers:
setExpectedIdentifiers:
loadFromDictionary:error:
productIdentifiers
sortedArrayUsingSelector:
_copyResponseForIdentity:identifiers:returningError:
products
invalidIdentifiers
copyProduct
_setInvalidIdentifiers:
_setProducts:
_productIdentifiers
_isSandboxed
_postBodyData
initWithReceiptFlags:
receiptFlags
setAccountScope:
resultBlock
setResultBlock:
storeExternalVersion
storeItemIdentifier
isRevoked
initWithClient:receiptFlags:
_client
_existingReceipt
_flags
_resultBlock
removeKeepAliveOperationQueue:
databaseIdentifier
initWithRequest:
_addUploadTaskWithRequest:configuration:URLRequest:
_failUploadWithDatabaseID:error:
taskIdentifier
cancel
_asyncModifyTasksForDatabaseIDs:usingBlock:
invalidateAndCancel
initWithURLResponse:data:
countOfBytesSent
setCountOfBytesSent:
statusCode
_cleanupForDatabaseID:
uploadSessionController:taskDidStopWithDatabaseID:
configuration
uploadSessionController:uploadDidFinishWithDatabaseID:response:
uploadDatabaseIdentifier
enumerateObjectsUsingBlock:
setUploadDatabaseIdentifier:
setCountOfBytesExpectedToSend:
_flushProgress
uploadSessionController:uploadDidBeginTransferWithDatabaseID:
sessionWithConfiguration:delegate:delegateQueue:
localAssetURL
uploadTaskWithRequest:fromFile:
resume
getTasksWithCompletionHandler:
uploadSessionController:uploadDidFailWithDatabaseID:error:
uploadSessionController:uploadProgressDidChange:
countOfBytesExpectedToSend
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
initWithDispatchQueue:
addUploadTasksWithRequests:
cancelUploadTasksWithDatabaseIdentifiers:
invalidURLSessions
numberOfTasks
pauseUploadTasksWithDatabaseIdentifiers:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
_preparationQueue
_progressFlushTimer
_sessions
_uploadDatabaseIDs
isProfileValidated
tellAppstoredToCheckClaimsEstablishingActiveAccounts:ignoringPreviousClaimAttempts:completionBlock:
setShouldAddKeysToKeyBag:
accountID
_getDownloaderIdentifier:purchaserIdentifier:forApplication:
setFamilyMemberAccountIdentifier:
keybagOptions
setShouldPromptForCredentials:
familyAccountIdentifier
downloaderAccountIdentifier
initWithKeybagRequest:clientIdentifierHeader:userAgent:
initWithKeybagRequest:client:
claimedBundleIdentifiers
_request
_claimedBundleIdentifiers
expectedIdentifiers
_expectedIdentifiers
_invalidIdentifiers
_products
removeBackgroundTaskObserver:
newEntityValuesWithMediaSocialPost:
contentItems
insertEntitiesForContentItems:
externalServiceDestinations
insertEntitiesForExternalDestinations:
attachments
insertEntitiesForAttachments:withProperties:
initWithEntity:accountIdentifier:
_enqueueNextReadyMediaSocialPostOperationWithDatabase:
_newAddUploadsMessageWithDatabase:hydratedUploadIDs:
_sessionController
_databaseIfExists
_cleanupPendingUploads:database:
_resumeUploadsWithPredicate:clientIdentifier:resetFailureCount:error:
_isConnectionEntitled:
_sendAccessDeniedErrorWithMessage:connection:
_copyPersistentIdentifiersArrayWithXPCArray:
containsPredicateWithProperty:values:
_cancelUploadsWithPredicate:clientIdentifier:error:
_handleMessage:connection:usingReplyBlock:
_orderedUploadQueryWithDatabase:predicate:
_enumerateSSVDirectUploadsWithQuery:block:
cancelUploadsWithMessage:connection:
getUploadsWithMessage:connection:
pauseUploadsWithMessage:connection:
registerObserverWithMessage:connection:
resumeUploadsWithMessage:connection:
_pauseUploadsWithPredicate:clientIdentifier:error:
_registerObserverWithMessage:connection:
_cleanupSessionController
_newSSVDirectUploadWithProgress:state:
setPersistentIdentifier:
_sendChangeUploadsMessageWithUploads:
postEntity
_errorCoordinator
addDialogForUpload:
_authenticationCoordinator
authenticateForUploadWithIdentifier:accountIdentifier:
_scheduleDelayedRetry
setProcessingWithResponse:
authenticateResponse
authenticatedAccount
containsPredicateWithProperty:query:queryProperty:
authenticateResponseType
addDialogForUploadIdentifiers:
isFinished
postIdentifiers
uploadIdentifiers
allUploadPersistentIdentifiers
_sendRemoveUploadsMessageWithUploadIdentifiers:
setValue:forKey:
updateWithPollingResponse:
_finishPostWithPostIdentifier:response:
numberOfPollRequests
isOverPollDuration
statusPollRequest
_pollingCoordinator
addPollRequest:
initFileURLWithPath:isDirectory:
fileExistsAtPath:isDirectory:
_postOperationQueue
operationCount
_orderedPostQueryWithDatabase:predicate:
isReadyToSend
postID
initWithPostEntity:
_operationDidFinishForPostIdentifier:response:
persistentIdentifier
enumerateSSVDirectUploadsUsingBlock:
bulletin
activityURL
setLaunchURL:
updateWithBulletin:
status
serviceErrorMessage
addDialogForPost:errorMessage:canRetry:
addDialogForPost:
pollDuration
resetStatusProperties
dismissAllDialogs
authenticationCoordinator:didFinishAuthenticationWithResponse:
mediaSocialErrorCoordinator:didFinishWithResult:
pollingCoordinator:didPollWithResponses:
addMediaSocialPostWithDescription:client:
_retryFailedEntities
_backgroundTaskObserver
_progressDictionary
bulletinBoard
sectionWithIdentifier:
existingBulletins
creationDate
_setTitlesForSingularBulletin:
postBulletin:
_updateExistingBulletin:usingBulletin:
updateBulletin:
recordID
removeBulletinWithRecordID:
setNumberStyle:
bundleWithIdentifier:
stringFromNumber:
mediaTypes
numberOfPosts
_localizedMessageForMediaTypes:numberOfPosts:
setMessage:
setTitle:
setMediaTypes:
setNumberOfPosts:
setLocaleIdentifier:
setLocalizedDescription:
setHosted:
setLocalizedTitle:
setContentVersion:
setPrice:
setContentSize:
isHosted
contentSize
decimalNumberWithString:
_contentSize
_hosted
initWithDownloadQueueRequest:
_runPendingCancelDownloadOperations
_newURLOperation
queueCountURLBagKey
downloadQueueRequest
numberOfAvailableDownloads
_numberOfAvailableDownloads
authorIdentifier
authorType
text
isAttributed
setDestinations:
setType:
setAccessToken:
setPageAccessToken:
setPageIdentifier:
setServiceIdentifier:
initWithDouble:
_insertUploadWithAttachment:properties:database:
enumerateChildAttachmentsUsingBlock:
newEntityValuesWithMediaSocialPostItem:
newEntityValuesWithMediaSocialExternalDestination:
hasActiivtyID
setOrderingClause:
setAlbumIdentifier:
setAssetToken:
setAssetTokenType:
setAttachmentDescription:
setCategoryName:
setExplicitContent:
setPreviewFrameTimestamp:
setUploadTime:
setUTI:
artists
setArtists:
setChildAttachment:forRelationship:
deleteAllEntities
newEntityValuesWithMediaSocialAttachment:
insertEntitiesForArtists:withProperties:
uploadedAttachments
_runForIdentity:
_newFetchOperationForIdentity:startID:endID:
paymentBatchBlock
_copyResponseForIdentity:startID:endID:returningError:
isPartialFailure
setPaymentBatchBlock:
_partialFailure
_paymentBatchBlock
applicationProxyForIdentifier:placeholder:
foundBackingBundle
installProgressForApplication:withPhase:
_bundleID
assignToPersonID
_assignToPersonWithID:withIdentifier:
assignToContactID
_assignToContactWithID:withIdentifier:
shouldMakeDefault
shouldMakeDefaultTextTone
setCurrentToneIdentifier:forAlertType:
setAdamID:
assigneeToneStyle
setAssigneeToneStyle:
assigneeIdentifier
setAssignToPersonID:
assigneeContactIdentifier
setAssignToContactID:
shouldMakeDefaultRingtone
setShouldMakeDefault:
setShouldMakeDefaultTextTone:
unifiedContactWithIdentifier:keysToFetch:error:
_assignToContact:inContactStore:withSoundIdentifier:
contactIdentifierFromPersonID:
initWithSound:vibration:ignoreMute:
setTextAlert:
setCallAlert:
updateContact:
executeSaveRequest:error:
entityFromContext:
applyUserActionWithIdentifier:
loadFromPurchase:
initWithMangedObjectContext:
ringtonesForAdamID:transactionID:
null
setTransactionID:
addRingtonesForPurchases:
finalizeRingtoneForAdamID:transactionID:ringtoneGUID:
prunePurchasedRingtones
removeRingtonesForPurchases:
removeRingtoneForAdamID:transactionID:
updateRingtonesForPurchases:withDownloads:
_context
_ownsContext
_downloadRemoteFile:toLocalPath:expectedMD5:ifModifiedSince:error:
parseJSONData:error:
loadCurrentCachedManifest
_bundledManifest
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
manifestsDirectoryURL
_uncachedAssetsForManifest:
assetFileURL:
name
assetWithName:
copyItemAtURL:toURL:error:
serverURL
scheme
URLByDeletingLastPathComponent
URLByAppendingPathComponent:
manifestFileURL:
writeToURL:options:error:
setCacheURLsOnManifestAndAssets:error:
createSymbolicLinkAtURL:withDestinationURL:error:
lastPathComponent
dataWithContentsOfURL:
_setCacheURL:
_allCachedAssetFileNames
assetFileName:
initWithManifestURL:bundledManifestURL:clientIdentifier:userAgent:scheduledInBackground:previousLastModified:completion:
_bundledManifestURL
_manifestURL
_previousLastModified
_scheduledInBackground
setArtistID:
setArtistName:
setBundleID:
setBetaExternalVersionIdentifier:
setBuyParams:
setCancelDownloadURL:
setCancelIfDuplicate:
setClientID:
setCollectionName:
databaseID
setDivertedTrackingID:
setIsDeviceBasedVPP:
setEnableExtensions:
setIsFromStore:
setIsTVTemplate:
setGenre:
setGenreID:
setIsInQueue:
setIsPurchasedRedownload:
setIsRestore:
setItemID:
setHasMessagesExtension:
setLaunchProhibited:
setMessagesArtworkURL:
setReleaseDate:
setStoreAccountName:
setStorefront:
setStoreDownloadKey:
setStoreTransactionID:
setSoftwareIconNeedsShine:
setSoftwareVersionExternalIdentifier:
setStoreCohort:
setThumbnailURL:
setVariantID:
_newAssetArrayWithDownloadAssets:
setAssets:
copyJobAsset
copyJobActivity
operationForConnection:
_cancelRequest:connection:
_disconnectRequest:connection:
operationQueue
copyInputConnection
disconnectOperationForConnection:
setClient:forOperation:
setCanSetActiveAccount:
accountName
tokenAvailabilityForAccountIdentifier:
registerAccountIdentifier:withAuthToken:
saveIdentityMap:forAccountIdentifier:
secureToken
registerAccountIdentifier:
authToken
requiresStoreAuthentication
setAuthToken:
setRequiresStoreAuthentication:
_authenticateWithAccount:error:
_registerAccount:withAuthToken:
_updateTouchIDSettingsForAccount:
_authToken
_requiresStoreAuthentication
download
transactionID
initWithTransactionIdentifier:downloadIdentifier:
mediaAsset
restoreState
keepSafeHarborDataForBundleID:
_restoreDataForBundleID:restoreState:error:
finishWithDownloadResponse:
priority
initWithBundleIdentifier:withPriority:isFailed:
_isFatalRestoreError:
sleepForTimeInterval:
addDownloadsUsingManifestWithMessage:connection:
authorizeMachineWithMessage:connection:
checkinRentalWithMessage:connection:
checkoutRentalWithMessage:connection:
demoteApplicationWithMessage:connection:
getAccountPurchaseHistoryWithMessage:connection:
getApplicationWithMessage:connection:
getApplicationCapabilitiesMessage:connection:
getAvailableItemKindsWithMessage:connection:
getFamilyCircleWithMessage:connection:
getKBSyncWithMessage:connection:
getPlayInfoWithMessage:connection:
getSoftwareLibraryItemsWithMessage:connection:
getUserApplicationsWithMessage:connection:
haveApplicationsOfTypeWithMessage:connection:
invalidateURLBagWithMessage:connection:
keybagRequestWithMessage:connection:
machineDataRequestWithMessage:connection:
personalizeOffersWithMessage:connection:
pushNotificationRequestWithMessage:connection:
redeemCodesWithMessage:connection:
setStoreFrontWithMessage:connection:
sendAskToBuyWithMessage:connection:
showDialogRequestWithMessage:connection:
showServerPromptWithMessage:connection:
softwareLibraryItemSetValuesWithMessage:connection:
addMediaSocialPostWithMessage:connection:
getMediaSocialShareExtensionVisibilityWithMessage:connection:
isRemovedSystemAppWithMessage:connection:
playableApplicationsWithMessage:connection:
hasDemotedApplicationsWithMessage:connection:
restoreRemovedSystemAppWithMessage:connection:
getRemovableSytemApplicationsWithMessage:connection:
isInstalledAppWithMessage:connection:
_newClientWithMessage:connection:
hasEntitlements
_sendUnentitledMessageToClient:
manifestResponse
postDescription
_sendMessageWithError:toClient:
initWithAuthorizationRequest:
shouldPromptForCredentials
shouldAddKeysToKeyBag
initWithCheckinRequest:
_sendUnentitledReplyForMessage:connection:
initWithPurchaseHistoryItems:authenticationContext:
purchasedItems
applicationForBundleIdentifier:applicationType:
copyCachedAvailableItemKinds
initWithBagContext:
URLBag
availableStorefrontItemKinds
auditTokenData
isCurrentUserAdmin
playInfoContext
initWithPlayInfoRequestContext:
playInfoResponse
initWithItemIdentifiers:
initWithBundleIdentifiers:
softwareLibraryItems
loadedMap
applications
haveApplicationsOfType:
invalidateURLBagForContext:
hasDemotedApplications
isInstalledApp:
isRemovedSystemApp:
items
initWithItems:
initWithPersonalizeOffersRequest:
pushNotificationParameters
initWithPushNotificationParameters:
redeemCodes
initWithRedeemCodes:
headless
setHeadless:
cameraRecognized
setCameraRecognized:
redeemResponse
setStoreFrontIdentifier:isTransient:
encodedDialog
dialogResponse
initWithPromptIdentifier:
initWithBundleIdentifier:changeset:
restoreRemovedSystemApp:
hasDemotedApplicationsWithMessage2:connection:
enumerateBundlesOfType:block:
initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:skipDownloads:
divertManagedApplicationRequest:completionBlock:
manifestFormat
shouldHideUserPrompts
URLRequest
_initWithPersistentIdentifier:
setValidDownloads:
_runForPurchaseFormatWithURLRequest:error:
_runForPublicFormatWithURLRequest:error:
manifest
validDownloads
_processValidDownloads:
invalidDownloads
_showDialogForError:
initWithPropertyList:
_showConfirmationPromptForManifest:response:
setDatabaseID:
divertManifestDownloads:
setShouldProcessProtocol:
initWithURLRequest:
setRequiresExtendedValidationCertificates:
setRequiresHTTPS:
setRequiresExternal:
_handlePublicResponseForOperation:error:
initWithStoreDownload:
initWithValidDownloads:invalidDownloads:
host
setManifestFormat:
setShouldHideUserPrompts:
setURLRequest:
_downloadIDs
_manifest
_manifestFormat
_shouldHideUserPrompts
_urlRequest
destinationURLString
stringByAppendingPathExtension:
enumerateMemoryEntitiesUsingBlock:
copyWritableMetadata
pinfsArray
purchaserAccountIdentifier
variantIdentifier
assetType
defaultProperties
artistName
artworkTemplateName
collectionName
destinationDirectoryPathForAsset:
documentTargetIdentifier
downloadPermalink
durationInMilliseconds
genreName
hasRestoreData
isDeviceBasedVPP
isPodcastDownload
isRentalDownload
isRestoreDownload
isSampleDownload
isSharedDownload
isStoreDownload
isTvTemplate
ITunesMetadataDestinationPath
libraryItemIdentifier
loadAssetsUsingSession:
newITunesMetadataDictionary
secondaryAssetForType:
storeAccountIdentifier
storeAccountName
storeCollectionIdentifier
storePublicationVersion
storeSagaIdentifier
storeTransactionIdentifier
storeXID
title
storeMetadata
setStoreMetadata:
secondaryAssets
_mediaAsset
_secondaryAssets
_storeMetadata
initWithWritingStyle:
_playActivityControllerEndpointRevisionInformationDidChangeNotification:
invalidate
_flushWithTimerReset:completionHandler:
_reloadJingleFlushTimer
acquirePendingPlayActivityEventsForEndpointIdentifierWithMessage:connection:
completePendingPlayEventsForSessionTokenWithResultWithMessage:connection:
recordPlayActivityEventsWithMessage:connection:
removePlayActivityEventsUpToRevisionWithMessage:connection:
setRevisionInformationForEndpointIdentifierWithMessage:connection:
flushPendingEventsWithMessage:connection:
defaultPlayActivityController
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
acquirePendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
_handleMessage:connection:withReplyBlock:
completePendingPlayActivityEventPersistentIDs:forSessionToken:withResult:completionHandler:
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
recordPlayActivityEvents:withCompletionHandler:
removePlayActivityEventsUpToRevision:withCompletionHandler:
initWithCString:encoding:
setCurrentRevision:revisionVersionToken:forEndpointIdentifier:withCompletionHandler:
_setJingleFlushTimerEnabled:
initWithPlayActivityController:
responseError
_jingleFlushTimer
playActivityFeedFlushTimer
setEventBlock:
getHasPendingPlayEventsForEndpointIdentifier:withCompletionHandler:
_calloutQueue
_currentJingleRevision
_currentRevision
_flushOperationQueue
_hasValidCurrentJingleRevision
_hasValidCurrentRevision
_flushingTransactionCount
_isJingleFlushTimerEnabled
_isStarted
_parsePropertyList:
applicationType
profileValidated
initWithExternalManifestDictionary:
_invalidDownloads
_validDownloads
_initializeProgress
_performBOMCopy:
destinationFilePath
_applyFileAttributesToDirectory:error:
subpathsOfDirectoryAtPath:error:
fileAttributes
initWithDomain:code:userInfo:
initWithShort:
setAttributes:ofItemAtPath:error:
_copierUpdatedFileWithPath:size:
cStringUsingEncoding:
_updateProgressWithByteCount:
sourceFilePath
resetSnapshots
sourceFileType
_newBOMCopierOptions
currentValue
_copierFinishedFileWithPath:size:
_copierStartedFileWithPath:size:
setDestinationFilePath:
setFileAttributes:
setSourceFilePath:
setSourceFileType:
_activeFileBytesCopied
_activeFilePath
_destinationFilePath
_fileAttributes
_lastSnapshotTime
_sourceFilePath
_sourceFileType
installType
storeAccountID
_appleIDForApp:
_accountIdForAppleID:
setStoreAccountAppleID:
isEligibleForRestore:
initWithDownloadItems:account:
setShouldShowTermsAndConditionsDialog:
_notifyCompletion
requestItems
serverResponse
storeItemID
bundleContainerURL
restoreDownloadItemsOperation:didReceiveResponse:
initWithBundleIdentifiers:options:
_bundleIDs
_options
_accountsCacheDB
environmentName
registerTokenForEnvironmentName:accountIdentifier:completionBlock:
_loadResponseWithAccountIdentifier:URL:error:
_copyParametersDictionary
_parameters
initWithPath:dpInfo:
initWithDPInfo:
_decryptWithSession:error:
fileHandleForUpdatingAtPath:
_initializeProgressWithFileHandle:
readDataOfLength:
decryptBytes:error:
offsetInFile
seekToFileOffset:
writeData:
synchronizeFile
closeFile
fileDescriptor
_dpInfo
_fairplayDecryptSession
firstDataForSinfDataKey:
_sinfsArrayWithDataKey:
isDRMFree
sinfForIdentifier:
_info
request
usesSoftwareMap
lastQueueCheckDate
_loadCountReturningError:
newStoreURLOperation:
_setCountWithResponse:error:
setQueueItemCount:
setLastQueueCheckDate:
queueItemCount
setRequest:
_lastQueueCheckDate
_queueItemCount
_ntsQueryParameters:
_copyApplicationIdentity:
rangeEndIdentifier
rangeStartIdentifier
setRangeEndIdentifier:
setRangeStartIdentifier:
_rangeEndIdentifier
_rangeStartIdentifier
_appendNormalQueueToResponse:error:
_shouldCheckAutoRenewQueue
_appendAutoRenewQueueToResponse:error:
setPaymentsResponse:
setQueueCountURLBagKey:
setQueuePaymentsURLBagKey:
_appendToResponse:usingOperation:error:
userDSIDs
expectedCount
setExpectedCount:
queuePaymentsURLBagKey
urlForKey:
paymentsResponse
setUserDSIDs:
_paymentsResponse
_userDSIDs
_loadResponseReturningError:
_parsePropertyList:error:
_appendRangeRequestsToResponse:error:
setResponse:
_getQueueCount:error:
_loadPaymentsWithExpectedCount:error:
_expectedCount
_queueCountURLBagKey
_queuePaymentsURLBagKey
installAsset:error:
writeBinaryPropertyList:toPath:error:
_updateRingtonesPlist
addPurchaseManifestItem
rollbackAsset:error:
_ringtoneGUID
_newRingtoneDictionary
destinationFileName
_insertPurchasedToneMetadata:fileName:
_loadStoreCoordinatorWithIntegrityCheck:error:
storeType
currentThread
threadDictionary
setPersistentStoreCoordinator:
setUndoManager:
_baseFilePath
integrityCookieFileName
createFileAtPath:contents:attributes:
databaseFileName
processInfo
arguments
modelFileName
_newLegacyManagedObjectModel
inferredMappingModelForSourceModel:destinationModel:error:
databaseFileURL
URLByAppendingPathExtension:
registeredStoreTypes
pointerValue
migrationManagerClass
initWithSourceModel:destinationModel:
migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:
moveItemAtURL:toURL:error:
_destroyPersistentStoreAtURL:withType:error:
moveItemAtPath:toPath:error:
initWithManagedObjectModel:
addPersistentStoreWithType:configuration:URL:options:error:
performLightweightMigration:
modelFileURL
initWithContentsOfURL:
loadStoreCoordinatorWithOptions:error:
resetStore:
metadataForPersistentStoreOfType:URL:error:
legacyModelVersionIdentifiers
entityVersionHashesByName
isEqualToDictionary:
_configuration
_model
_storeCoordinator
_threadContextKey
_threadCountKey
setDatabaseFileName:
setLegacyModelVersionIdentifiers:
setModelFileName:
setStoreType:
_databaseFileName
_legacyModelVersionIdentifiers
_modelFileName
_storeType
_copyKeychainStringForService:
_removeValueFromKeychainForService:
_saveString:toKeychainService:
initWithData:encoding:
dataUsingEncoding:
commitToUserDefaults
loadFromKeychain
saveToKeychain
subscriptionEntitlementsBlock
ignoreCaches
cachedSubscriptionEntitlementsExpired:
cachedTimestamp
_fetchSubscriptionEntitlements:modifiedSinceDate:
setSubscriptionEntitlementsBlock:
_parseJSONDictionary:
setIgnoreCaches:
_ignoreCaches
_subscriptionEntitlementsBlock
initWithPath:options:resumptionOffset:
supplyBytes:withCompletionBlock:
resumptionOffset
_diskUsageForPath:
finishStreamWithCompletionBlock:
suspend
suspendStreamWithCompletionBlock:
setWithCapacity:
arrayWithCapacity:
_stringWithFileSystemRepresentation:length:
stringWithFileSystemRepresentation:length:
setExtractionProgress:
extractionCompleteAtArchivePath:
extractionEnteredPassThroughMode
initWithPath:options:
consumeData:error:
diskUsage
finish:
truncate
_stringWithFileSystemRepresentation:
hasConsumedData
percentComplete
_extractor
_hasConsumedData
_percentComplete
_resumptionOffset
_responseTypeByPromptingToCreateAccount:
_setSignInResponseType:
_copyResponseByPromptingForCredentials:
signInResponseType
_setSignInResponse:
userName
password
_activeUserName
setPassword:
setSignInResponseType:
setUserName:
initWithPassword:
setSingleSignOnCredential:
_shouldUseSpringBoardPluginDialog
_copyResponseUsingSpringBoardPluginDialog:
_canUseSingleSignOn
_copyResponseUsingSingleSignOn:
_copyResponseUsingITunesDialog:
setSerializationLockIdentifiers:
textFieldValues
_newSignInDialog
_copyResponseUsingDialog:displayOnLockscreen:error:
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
username
initWithAccountType:
setAuthenticated:
setUsername:
saveAccount:withCompletionHandler:
_reasonDescriptionWithAccountName:
renewCredentialsForAccount:force:reason:completion:
releasePowerAssertionsDuringBlock:
credential
setExpectsResponse:
setOneButtonPerLine:
setGroupsTextFields:
setShouldPendInSetupIfNotAllowed:
attemptNumber
setValue:forCFUserNotificationKey:
persistsAcrossDeviceLock
setDismissOnLock:
setShouldDismissAfterUnlock:
isAccountNameEditable
_userNameTextField
_passwordTextField
setTextFields:
setKeyboardType:
setSecure:
reasonDescriptionFormat
canCreateNewAccount
effectiveBoolValueForSetting:
_newCreateAccountDialog
_enterCreateAccountFlow
isScreenLocked
setValue:
setAttemptNumber:
setReasonDescriptionFormat:
signInResponse
_attemptNumber
_reasonDescriptionFormat
deviceSupportsSingleSignOn
initWithResponseType:
singleSignOnCredential
altDSID
setAltDSID:
_altDSID
_password
_responseType
_singleSignOnCredential
_userName
initWithAttemptNumber:context:
initialPassword
shouldSuppressDialogs
_biometricAvailability
_promptForBiometricMatchWithReason:error:
matchType
_shouldPromptAfterBiometricMatch:
_promptForCredentialsWithReason:error:
biometricIdentities
tokenData
_sendAuthenticateRequest:
accountUniqueIdentifier
setAppleIDWithAltDSID:inUse:forService:
setAppleIDWithDSID:inUse:forService:
token
allowsBioAuthentication
_updateBiometricsWithAccountID:token:canPromptUser:
_updateBiometricsWithAccountID:
setStoreFrontIdentifier:accountIdentifier:isTransient:
setDetails:
setProperty:forBodyKey:
initWithMetricsEvents:
setEventTopicOverride:
replaceOccurrencesOfString:withString:options:range:
clientInfo
setClientInfo:
_invokeWillBeginProcessingAuthenticationResponseHandlerIfAppropriate
initWithURLResponse:dictionary:
_setAuthenticationResponse:
responseType
failureType
userMessage
_setCookiesForHTTPResponse:userIdentifier:
updateWithResponseDictionary:accountIdentifier:
responseDictionary
setAllowsBiometricOptIn:
rangeOfString:
substringToIndex:
accounts
freeDownloadsPasswordSetting
paidPurchasesPasswordSetting
initWithFreeDownloadsPasswordSetting:paidPurchasesPasswordSetting:
_newAccountPasswordSettingsDictionary
accountKind
shouldCreateNewSession
_newURLRequestProperties
_newAuthenticateAccountRequestParameters
_newAuthenticateSrvRequestBody
_setShouldSetCookies:
setShouldProcessAccount:
shouldIgnoreProtocol
setWillBeginProcessingDictionaryHandler:
setHTTPHeaders:
userAgentComponents
setUserAgentComponents:
_loggableClientIdentifier
initWithReason:accountName:
setMatchBlock:
setDialogType:
setDialogId:
setActionType:
setTargetId:
_authKitPromptForCredentialsWithReason:error:
okButtonLabel
promptTitle
setDefaultButtonString:
set_passwordPromptTitle:
setServiceType:
setIsUsernameEditable:
setShouldAllowAppleIDCreation:
setDSID:
_setProxyingForApp:
setShouldForceInteractiveAuth:
_setProxiedAppName:
authenticateWithContext:completion:
setUserActions:
_shouldUseHeadlessRequest
_newAuthenticateSrvURLOperation
_newAuthenticateAccountURLOperation
_handleResponseFromOperation:error:
sharedStorage
setCookiesForHTTPResponse:userIdentifier:
URLBagContext
lastRegisteredAccountIdentifier
canPerformBiometricOptIn
isBiometricStateEnabled
isIdentityMapValidForAccountIdentifier:
hasRegisteredAccountIdentifier
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:completion:
authenticationResponse
biometricToken
setWillBeginProcessingAuthenticationResponseHandler:
willBeginProcessingAuthenticationResponseHandler
_authenticationResponse
_biometricToken
_didFallbackToPassword
_setStoreFrontIdentifier
_signInResponse
_accumulatedMetricsEvents
_willBeginProcessingAuthenticationResponseHandler
_hasInvokedWillBeginProcessingAuthenticationResponseHandler
timeIntervalSince1970
postNotificationName:object:
isManagedAppleID
isExpiredForTokenType:
resetTransientData
_runAuthenticationAttempts:
_setAuthenticateResponseWithAccount:type:
resetExpirationForTokenType:
setBiometricToken:
newAccount
setFreeDownloadsPasswordSetting:
setPaidPurchasesPasswordSetting:
persistsPasswordFallback
isDemoAccount
setDemoAccount:
canSetActiveAccount
setActiveAccount:
initWithUsername:credential:
_setAuthenticateResponseWithAccount:authenticationResponse:
setAllowDuplicates:
beginSuspendingSubscriptionStatusChangeNotifications
_addAccountForAttempt:error:
_shouldRetryAfterOperationFailed:didCancel:
_showDialogForFailedOperation:error:
_setAuthenticateResponseWithFailedAttempt:didCancel:
endSuspendingSubscriptionStatusChangeNotifications
setAccountName:
setAuthenticatedAccount:
setAuthenticateResponseType:
_setAuthenticateResponse:
setResponseDictionary:
allowsRetry
_shouldRetryForError:didCancel:
_shouldRetryForServerResponse:didCancel:
shouldOfferRetryForError:
localizedFailureReason
_promptForRetryWithTitle:message:
_authenticateResponse
helper
_secondaryToken
_copyRequestBody:
_failWithError:
_setResponseForOutput:
playbackType
playerGUID
SICData
initWithPlayInfoData:error:
_setPlayInfoResponse:
_shouldPromptForPinCode
_newSourceByStartingTimeoutTimer
setTokenBlock:
keybagPath
authorizationToken
uppercaseString
deviceName
_newBodyDictionary
_newAuthenticationContext
setAuthorizationToken:
_runAuthentication:
_runAuthorizationWithAuthentication:error:
_setResponse:
_newMachineDataOperationWithResponse:
familyMemberAccountIdentifier
setKeybagPath:
_familyMemberAccountIdentifier
_keybagPath
_mdRetryCount
_shouldAddKeysToKeyBag
_shouldPromptForCredentials
_resetLastRegisterAttemptTime
_updatePushEnabledState
_loadConnectionsInContext:
_postTokensIfNecessaryInContext:
_urlBagDidLoadNotification:
_accountStoreChangedNotification:
_storeFrontChangedNotification:
_deviceNameChanged
removeFromRunLoop
_clientForIdentifier:createIfNeeded:inContext:
_addNotificationWithUserInfo:client:context:
launchApplicationWithIdentifier:options:error:
_environmentForName:createIfNeeded:inContext:
lastAccountIdentifier
setBlock:
setEnvironmentName:
_postTokenForEnvironment:
popRemoteNotificationWithMessage:connection:
registerNotificationClientWithMessage:connection:
showLocalNotificationWithMessage:connection:
unregisterNotificationClientWithMessage:connection:
notifications
initWithNotificationUserInfo:
_reloadActiveEnvironmentInContext:
_postNotificationsAvailableForClient:inContext:
_environmentNameForConnection:
setLastAccountIdentifier:
setTokenData:
_isPushEnabled
requiresClientIdentifier
_reloadPushStateInContext:
_postTokensInContext:force:
setUserInfo:
setEnabledTopics:
block
insertObject:atIndex:
_openConnectionForEnvironment:
_portNameForEnvironmentName:
initWithEnvironmentName:namedDelegatePort:
_enabledTopics
mainRunLoop
scheduleInRunLoop:
initWithEnvironmentName:tokenData:
countForFetchRequest:error:
_isValidEnvironment:
_newAPSConnectionWithEnvironment:
publicToken
_newPostTokenOperationForEnvironment:account:
_updateEnvironmentAfterTokenPost:
removeObjectIdenticalTo:
_fireRegisterBlocksAfterOperation:
_numberOfClientsInContext:
_closeEnvironment:inContext:
_reloadDaemonClientInContext:
soundFilesDirectoryPath
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
postClientNotificationWithUserInfo:
_connections
_deviceNameChangedToken
_lastRegisterAttemptTime
_notificationQueue
_pushEnabledState
_registerBlocks
_tokenOperations
_block
_environmentName
_handleTaskEvent
addObserverForBackgroundTaskWithIdentifierPrefix:withBlock:
_cellularSettingChanged
_scheduleTask
_stopBackgroundTask
_hasEntitlements:
_sendUnentitledResponseToMessage:connection:
insertWatchMetricEvent:error:
insertWatchEventWithMessage:connection:
_startBackgroundTaskAtSecondsFromNow:window:
_reportEventsOnCompletion:
initWithController:
_lastRunTime
_eventsController
_reportRunning
_taskObserver
_downloadSoundFiles:error:
cachedResponseForRequest:
_calculatedExpiration
setLocalFilePath:
resetStream
localFilePath
initWithLength:
initWithResponse:data:
storeCachedResponse:forRequest:
saveMemoryCacheToDisk
_newSoundFileURLCache
_downloadSoundFileWithURL:name:cache:error:
setDiskCapacity:
setMemoryCapacity:
initWithCacheConfiguration:
_postTokenToURL:error:
dataUsingEncoding:allowLossyConversion:
_tokenData
notificationUserInfo
_clientExistsWithIdentifier:
_URLHandlerExists
_notificationClass
_displayBadge
_playSound
alertBodyString
_displayAlert
_performNotificationAction:
_clientIdentifierForDownloadKinds:
localizedName
alertTitleString
_copyAlertTitle
_shouldUseBulletinBoardForNotification:
bulletinWithTitle:message:
setActionButtonURL:
alertOKString
setActionButtonTitle:
alertCancelString
setShouldDisplayAsTopMost:
setUnlockActionButtonIndex:
copyUserNotification
showUserNotification:withCompletionBlock:
badgeValue
setBadgeValue:forIdentifier:
requestWithURL:
setITunesStoreURL:
checkAutomaticDownloadQueue:
checkQueuesWithReason:
signalSemaphoreForPushToken:
_loadNotificationDownloadManifest
_openNotificationURL
sendChangeNotification
setWithArray:
initWithDownloadKinds:
markCachedSubscriptionEntitlementsAsExpired
setCreditsString:
soundFileName
applicationsAvailableForOpeningURL:
_notification
setEnvironmentType:
setStoreExternalVersion:
setStoreItemIdentifier:
environmentType
_bundleVersion
_environmentType
_hidesConfirmationDialogs
_ignoresInAppPurchaseRestriction
_receiptDirectoryPath
_requiresAuthenticationForPayment
_storeExternalVersion
_storeItemIdentifier
runsOnlyIfKindsAreDirty
_isFatalError:
copyAllowedAutomaticDownloadKindsInBagContext:
intersectSet:
commitAutomaticDownloadKinds:markAsDirty:
shouldSuppressServerDialogs
setShouldProcessAuthenticationDialogs:
_copyFilteredDownloadKinds
_postDownloadKinds:error:
previousDownloadKinds
downloadKinds
setPreviousDownloadKinds:
setRunsOnlyIfKindsAreDirty:
setShouldSuppressServerDialogs:
shouldFailAfterUniquePredecessorError:
_downloadKinds
_previousDownloadKinds
_runsOnlyIfKindsAreDirty
_shouldSuppressServerDialogs
_libraryItem
itemMediaPath
addLibraryItem:error:
_setInsertedItemPersistentIdentifier:
initWithIPodLibraryItem:
IPodLibraryItem
insertedItemPersistentIdentifier
_insertedItemPersistentIdentifier
_promptNeedsDisplay
setLastPromptAttemptDate:forPromptWithIdentifier:
_newStoreURLOperation:
setPromptWithIdentifier:needsDisplay:
promptNeedsDisplay:
_automaticDownloadsPromptNeedsDisplay
promptIdentifier
_promptIdentifier
_cachedSubscriptionEntitlementsDictionary
dateByAddingTimeInterval:
_setCachedSubscriptionEntitlementsDictionary:
_notifyClientsOfChangedSubscriptionEntitlements
setObject:forKeyedSubscript:
_cachedSubscriptionEntitlementsPath
dataWithContentsOfFile:
_runCheckinAckOperationWithResponseData:error:
_bodyDataWithCheckinAckResponseData:
_handleCheckinAckResponse:error:
_initCommon
initWithBytes:length:
_applicationStateChanged:
addObserverForName:object:queue:usingBlock:
beginGeneratingStateChangeNotificationsForIdentifiers:
removeObserver:
processAssertion
setInvalidationHandler:
endGeneratingStateChangeNotificationsForIdentifiers:
_applicationState
clientType
initWithPID:flags:reason:name:
valid
UUID
initWithProcessAssertion:invalidationBlock:
_invalidateBackgroundTaskAssertion:
_clientType
_applicationBackgroundModes
_isNewsstandApp
containsIndex:
addIndex:
removeIndex:
sendMessage:withReply:
_handleOutputConnectionDisconnect
userAgentWithBundleIdentifier:version:
unsignedIntValue
copyBundleInfoValueForKey:PID:
applicationStateForIdentifier:
mostElevatedApplicationStateForPID:
removeAllIndexes
invalidationBlock
initWithApplicationIdentifier:isAppleSigned:
applicationState
beginBackgroundTaskWithReason:expirationBlock:
canReceiveMessages
copyApplicationBackgroundModes
endBackgroundTaskWithIdentifier:
isNewsstandApp
loadSpringBoardStateWithCompletionBlock:
processIdentifier
sendCoalescedMessageWithIdentifier:
valueForEntitlement:
_entitlements
_legacyEntitlements
_appleSigned
_auditTokenData
_backgroundModes
_backgroundTasks
_clientVersion
_inflightMessages
_pid
_stateChangeObserver
_invalidationBlock
_processAssertion
allowedRetryCount
isITunesStoreRequest
networkServiceType
timeoutInterval
HTTPBody
HTTPMethod
initWithProperties:
newDownloadKeyCookieWithValue:URL:
setNetworkServiceType:
initWithFileAtPath:
setHTTPBodyStream:
setExpectedContentLength:
removeExternalValuesForAssetID:
copyDatabaseDictionaryWithRequestProperties:
copyURLRequestProperties
accessToken
pageAccessToken
pageIdentifier
serviceIdentifier
canAccessDownload:
supportsDownloadKind:
persistentDownloadManagerInDatabase:
_supportsDownloadKind:
initWithClientXPCDownload:
_isBackgroundApp
disableCellularNetworkTypes
unionNetworkConstraints:
persistenceIdentifier
performNewsstandMigration1InDatabase:
shouldFilterExternalDownloads
sendDownloadsRemovedWithIdentifiers:
sendDownloadsUpdatedWithIdentifiers:
sendDownloadStatesChangedWithIdentifiers:
sendDownloadStateChangedWithID:externalValues:propertyValues:
_sendCoalescableMessage:withDownloadIDs:
_copyFilteredKindsForKinds:
_copyPrivateDownloadKinds
_copyDownloadKindsFromEntitlement
_copyAllowedThirdPartyKinds
addClientEntityToDatabase:
canAccessAsset:
downloadsQueryForMessage:database:
newDownloadWithClientXPCDownload:error:
prefetchedDownloadExternalProperties
prefetchedDownloadProperties
reloadPersistenceStateInDatabase:
sendChangeset:
sendDownloadKindsUsingNetwork:
setClientOptions:
setDownloadKinds:
setPersistenceIdentifier:
setPrefetchedDownloadProperties:
setPrefetchedDownloadExternalProperties:
setShouldFilterExternalDownloads:
_isDownloadsEntitled
_persistenceIdentifier
_prefetchedDownloadExternalProperties
_prefetchedDownloadProperties
_shouldFilterExternalDownloads
_typeForDownload:
_accountAuthenticatedNotification:
_networkTypeChangedNotification:
automaticDownloadKinds
enabledDownloadKinds
_checkAutomaticDownloadQueue:
tellAppstoredToAutomaticDownloadQueue
tellAppstoredToCheckDownloadQueue
_synchronizeAutomaticDownloadKinds:
_newQueueRequestsWithReason:session:
_addOperationsForRequests:reason:
queueIdentifier
_restorableDownloadsQueryInDatabase:
initWithDownloadIdentifiers:restoreReason:
_showRestoreItemsUnavailableIfNecessary
setAutomaticDownloadKinds:account:
_newOperationByCommitingAutomaticDownloadKinds:account:
getAutomaticDownloadKindsWithMessage:connection:
reloadFromServerWithMessage:connection:
setAutomaticDownloadKindsWithMessage:connection:
synchronizeAutomaticDownloadKindsWithMessage:connection:
triggerDownloadsWithMessage:connection:
synchronizeAutomaticDownloadKinds
_newSetAutomaticDownloadKindsOperationWithDownloadKinds:account:
_validQueueIdentifiersForDaemon
_newLoadQueueOperationForQueueRequest:
_newCheckQueueOperationForQueueRequest:
predicateWithProperty:values:comparisonType:
_ignoreVideos
isSoftwareKind
cancelDownloadURL
isVideosKind
_automaticDownloadsQueryWithDatabase:accountID:
replaceDownloadsInQuery:withStoreDownloads:accountID:
removableStatus
_setLastCheckedAccountID:
purchaseIdentifier
placeholderDownloadForPurchaseIdentifier:
_downloadQueryWithQueueRequest:database:
copyEntityIdentifiers
countOfEntities
queueContentsURLBagKey
removeObjectsAtIndexes:
cancelsDuplicateDownloads
setValue:forMetadataKey:
isEqualToSet:
setReturnsDistinctEntities:
isNotNullPredicateWithProperty:
setQueueIdentifier:
_validQueueIdentifiersForPlatform
resetShouldSuppressTermsAndConditionsDialogs
showDialog:withCompletionBlock:
cancelAllRedownloads
checkQueuesWithRequest:
downloadKindsBeingChecked
disableAutomaticDownloadsWithReason:
enableAutomaticDownloadsWithReason:
setAutomaticDownloadKinds:
scheduleRestoreItemsUnavailableDialog
_retryCanceledRestoreDownloads
_retrySoftFailedRestoreDownloads
_activeRestoreIDs
_automaticDownloadsAreDisabled
_checkAutomaticDownloadQueueOnEnable
_lastCheckedAccountID
_loadAutomaticDownloadQueueOperation
_restoreOperationQueue
_restoreItemsUnavailableScheduled
_storeQueueRequests
_trackedPurchaseDownloadIDs
initWithEligibilityDictionary:
setBundlingStatus:
delayInterval
headerEnrichmentMessage
headerEnrichmentURL
needsHeaderEnrichment
needsSilentSMS
silentSMSMessage
silentSMSNumber
wantsDelayedRetry
_bundlingStatus
_delayInterval
_headerEnrichmentMessage
_headerEnrichmentSessionIdentifier
_headerEnrichmentURL
_smsSessionIdentifier
_needsHeaderEnrichment
_wantsDelayedRetry
_needsSilentSMS
_silentSMSMessage
_silentSMSNumber
setCancelsDuplicateDownloads:
setPurchaseIdentifier:
_cancelsDuplicateDownloads
_purchaseIdentifier
_queueIdentifier
_queueMigration:
_loadBagAndPerformMigration
_performMigration
performMigration
destroyInstance
performMigration:
restoreDemotedBundleIdentifiers:options:
_updateType
_loadURLBagOperation
_migrations
sharedNetworkRequestQueue
isRequestingOfflineSlot
operationType
setOperationType:
setRequestingOfflineSlot:
_newMachineDataOperationWithAccount:response:
_requestPropertiesWithAccount:syncState:fairPlaySubscriptionController:
_operationType
_requestingOfflineSlot
isFileURL
isReadableFileAtPath:
_uploadURL
_newURLRequestWithURL:
sourceApplication
allowsCellularAccess
backgroundSessionConfigurationWithIdentifier:
setAllowsCellularAccess:
setHTTPCookieAcceptPolicy:
setHTTPShouldSetCookies:
setHTTPShouldUsePipelining:
setSessionSendsLaunchEvents:
set_allowsRetryForBackgroundDataTasks:
set_sourceApplicationBundleIdentifier:
outputBlock
addITunesStoreHeadersToRequest:withAccountIdentifier:
cookieHeadersForURL:userIdentifier:
parentRelationshipType
_outputBlock
downgradeApplicationToPlaceholder:withOptions:error:
initWithData:
parse
parserDidStartDocument:
parserDidEndDocument:
parser:foundNotationDeclarationWithName:publicID:systemID:
parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:
parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:
parser:foundElementDeclarationWithName:model:
parser:foundInternalEntityDeclarationWithName:value:
parser:foundExternalEntityDeclarationWithName:publicID:systemID:
parser:didStartElement:namespaceURI:qualifiedName:attributes:
parser:didEndElement:namespaceURI:qualifiedName:
parser:didStartMappingPrefix:toURI:
parser:didEndMappingPrefix:
parser:foundCharacters:
parser:foundIgnorableWhitespace:
parser:foundProcessingInstructionWithTarget:data:
parser:foundComment:
parser:foundCDATA:
parser:resolveExternalEntityName:systemID:
parser:parseErrorOccurred:
parser:validationErrorOccurred:
initWithXMLData:
sinfData
_sinfData
_buffer
_isSinfElement
setDownloadPermalink:
setCloudIdentifier:
setCollectionArtistName:
setCollectionIndexInCollectionGroup:
setComposerName:
setDocumentTargetIdentifier:
setDownloadKey:
setDurationInMilliseconds:
setEpisodeIdentifier:
setEpisodeSortIdentifier:
setIndexInCollection:
setLongDescription:
setLongSeasonDescription:
setNumberOfCollectionsInCollectionGroup:
setNumberOfItemsInCollection:
setPageProgressionDirection:
setPodcastEpisodeGUID:
setPodcastFeedURL:
setPodcastType:
setReleaseYear:
setSeasonNumber:
setSeriesName:
setShortDescription:
setThumbnailImageURL:
setPublicationVersion:
setRedownloadActionParameters:
setThumbnailNewsstandBindingEdge:
setThumbnailNewsstandBindingType:
setViewStoreItemURL:
setKeyStyle:
setArtistIdentifier:
setCollectionIdentifier:
setComposerIdentifier:
setGenreIdentifier:
setPreOrderIdentifier:
setArtworkIsPrerendered:
setAutomaticDownload:
setCompilation:
setRental:
setSample:
setHighDefinition:
primaryAssetDictionary
_newDeltaPackageAssetsWithAssetDictionary:
_newPrimaryAssetsWithAssetDictionary:assetType:
fullSizeImageURL
_newAssetWithURL:assetType:
podcastFeedURL
transitMapDataURL
thumbnailImageCollection
imagesForKind:
_copyPinfValueWithField:
_copySinfValueWithField:
_copySinfValueFromEpubRightsDataWithField:
matchedStatus
redownloadedStatus
_epubRightsSinfData
epubRightsData
valueForFirstAvailableKey:
initWithURLRequestProperties:
_patchPackageDictionary:matchesInstallApplication:
_newAssetPropertiesWithStoreDictionary:assetType:
fileExtension
versionIdentifier
dateWithTimeIntervalSinceReferenceDate:
_installPackage:
_newInstallationOptions
packagePath
initFileURLWithPath:
installApplication:withOptions:error:
appReceiptData
writeReceipt:forBundleIdentifier:style:
artworkData
newsstandArtworkData
transitMapData
ITunesMetadata
setSourceURL:
validate:
initWithSoftwareProperties:
softwareProperties
_verifyApplication:error:
_softwareProperties
setAppReceiptData:
setArtworkData:
setInstallType:
isFromStore
setITunesMetadata:
setNewsstandArtworkData:
setPackagePath:
setSinfData:
setTransitMapData:
scratchDirectory
setScratchDirectory:
_appReceiptData
_artworkData
_installType
_isFromStore
_iTunesMetadata
_newsstandArtworkData
_packagePath
_transitMapData
_scratchDirectory
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
providerName
_sendPreflightRequest:
_sendEnrichmentRequestWithPreflightResponse:outputBlock:
_sendSilentSMSRequestWithPreflightResponse:outputBlock:
_newDefaultRequestBodyDictionary
isDeepLink
_setLoadsHTTPFailures:
setRequiresCellularDataNetwork:
initWithURL:statusCode:HTTPVersion:headerFields:
_finishEnrichmentWithSessionID:carrierResponse:URLResponse:URLError:outputBlock:
_sendSMSWithBodyText:digits:countryCode:
_finishSilentSMSWithSessionID:outputBlock:
phoneNumberWithDigits:countryCode:
sharedMessageCenter
canonicalFormat
sendSMSWithText:serviceCenter:toAddress:
_cellularProviderName
_deepLink
_eligibilityResponse
_mobileSubscriberCountryCode
_mobileSubscriberNetworkCode
_phoneNumber
applicationProxyForItemID:
initWithFinishedDownloadPredicate:
finishedDownloadPredicate
_predicate
caseInsensitiveCompare:
initWithContentsOfURL:options:error:
setUrlKnownToBeTrusted:
_setArtworkData:
initWithDownloadIdentifier:thumbnailURL:
initWithStoreDownloadIdentifier:thumbnailURL:
_isStoreDownload
_thumbnailURL
_shouldSkipInitialDialog:
_copyButtonToSkipDialog:
_copySelectedButton:returningError:
_shouldAuthenticateForButton:
performsButtonAction
_copyAccountIdentifier:returningError:
_handleSelectedButton:
_copyAuthenticationContext
authorizationIsForced
setPromptTitle:
message
setOkButtonLabel:
shouldFollowAccountButtons
performedButton
_authenticatedAccountDSID
_performsButtonAction
_performedButton
_selectedButton
finishPersistentDownloadsWithDownloadIDs:
authenticateWithMessage:connection:
claimAppsWithMessage:connection:
getMatchStatusWithMessage:connection:
keybagSyncWithMessage:connection:
installManagedAppWithMessage:connection:
installManagedAppWithMessageAndDetailedResponse:connection:
getDownloadQueueWithMessage:connection:
importDownloadToIPodLibraryWithMessage:connection:
loadURLBagWithMessage:connection:
lookupItemsWithMessage:connection:
lookupWithMessage:connection:
sdk_loadStoreFrontIdentifierWithMessage:connection:
sdk_getCloudServiceCapabilities:connection:
performMigrationWithMessage:connection:
repairAppWithMessage:connection:
requestURLWithMessage:connection:
restoreDemotedApplicationsWithMessage:connection:
serverAuthenticateWithMessage:connection:
updateMediaContentTasteWithMessage:connection:
wishlistAddItemsWithMessage:connection:
disableSubscriptionWithMessage:connection:
enableSubscriptionWithMessage:connection:
getSubscriptionStatusWithMessage:connection:
getSubscriptionEntitlements:connection:
refreshSubscriptionWithMessage:connection:
rentalInformationRequestWithMessage:connection:
_copyAuthenticationContextWithContext:client:
claimStyle
tellAppstoredToCheckFirstPartyClaimsWithCompletionBlock:
_addSubscriptionOperationWithType:message:connection:
_dequeueSubscriptionStatusOperation:
_enqueueSubscriptionStatusOperation:forClient:
queueType
downloadMetadata
purchaseResponse
purchase
downloadMetadataForItemIdentifier:
isRental
setUpdateType:
setItemArtworkData:
setResponseBlock:
installManagedAppWithMessage:connection:provideDetailedResponse:
initWithKeybagSyncRequest:
URLBagDictionary
invalidationTime
copyQueryStringParameters
dictionaryByEvaluatingConditions
_lookupProperties
personalizationStyle
initWithMigrationType:
initWithOptions:
startWithCompletionBlock:
repairApplicationWithRequest:completionBlock:
_enqueueOperationsForStoreServicesURL:
destinationFileURL
setDestinationFileURL:
sendsResponseForHTTPFailures
setSendsResponseForHTTPFailures:
shouldMescalSign
setShouldMescalSign:
divertRestoreDemotedApplications:
setAuthenticatedAccountIdentifier:
indexOfObject:
setPerformedButtonIndex:
setSelectedButtonIndex:
setString:
enumerateQueryWithBlock:
_managedQueue
_subscriptionStatusOperationAccessQueue
_currentSubsctionStatusOperation
_pendingSubscriptionStatusOperations
_enqueueOperationIfNecessaryWithAccountIdentifier:
addPostIdentifier:
addUploadIdentifier:
_newAuthenticateOperationWithAccountIdentifier:
setAuthenticateResponse:
_finishResponse:
authenticateForPostWithIdentifier:accountIdentifier:
_pendingResponses
setPostIdentifiers:
setUploadIdentifiers:
_postIdentifiers
_uploadIdentifiers
cancelAllOperations
sharedLibrary
_addLibraryItems:toMusicLibrary:itemPids:error:
_commitScheduledLibraryItems
predicateWithProperty:equalToInteger:
queryWithLibrary:predicate:
deleteAllEntitiesFromLibrary
performDatabaseTransactionWithBlock:
_removeDownloadWithIdentifier:canceled:inLibrary:
accountCacheDatabase
setAppleID:forDSID:
deleteAllOTATracks
deleteIPodPurchaseWithMessage:connection:
itemMetadata
mediaTypeForStoreDownload:
importLibraryItems:toMusicLibrary:importedItemPids:
initWithPersistentID:inLibrary:
isDownloading
_setDownloadPropertiesForTrack:usingLibraryItem:
setWithObject:
updateType
itemArtworkData
populateArtworkCacheWithArtworkData:
protectionType
populateLocationPropertiesWithPath:protectionType:
addLibraryItems:error:
anyInLibrary:predicate:
deleteFromLibrary
setValues:forProperties:count:
itemDownloadIdentifier
commitScheduledLibraryItems
removeDownloadWithIdentifier:canceled:
scheduleLibraryItem:
setAppleIdentifier:forAccountIdentifier:
_scheduledItems
_scheduledItemTimer
_shouldAuthenticateForCancelRetry
_establishPrimaryAccount
allITunesIdentifiers
_newRestoreItemsWithDownloadIDs:
storeAccountAppleID
_accountIDForAccountName:error:
setDownloadSessionProperties:
_isErrorCancelFailure:
_isErrorSoftFail:
_shouldAutomaticallyRetryAfterSoftFailError:
storeOriginalPurchaserAccountID
setUniqueIdentifier:
storeFrontID
setRequestItems:
setServerResponseWithError:
_applyResponses:withTransaction:
_preflightAccountWithID:isFamily:error:
addAccountWithAccountID:
addStoreFrontWithStoreFrontID:
countForObject:
addItemsWithKind:count:
shouldSuppressTermsAndConditionsDialogs
responses
setShouldSuppressTermsAndConditionsDialogs:
initWithDownloadItems:
_scheduleAutomaticRetry
_scheduleCancelRetry
responseDownloads
initWithItemIdentifier:
podcastEpisodeGUID
_downloadRestoreStateForError:
_updateDownloadEntity:withTransaction:storeDownload:accountID:
_copyDownloadSessionPropertiesForItem:download:
canOpenSessionWithProperties:
_softFailRestoreItem:download:withRestoreState:error:
_hardFailRestoreItem:download:transaction:error:
setAccountNameEditable:
setPersistsAcrossDeviceLock:
requiredDeviceCapabilities
checkCapabilities:withMismatches:
downloadSessionProperties
addHardFailureWithKind:error:
initWithDownloadIdentifier:
setValue:forDownloadProperty:
setValue:forAssetProperty:
isExpired
addSoftFailureWithKind:error:
_newDownloadWithStoreDownload:
restorePodcastItemsOperation:didReceiveResponse:
downloadIdentifiers
errors
_accountIDsByAppleID
_cancelRetryAlertState
_errors
_hadAutoRetrySoftFailure
_hadCancelFailure
_hadHardFailure
allKeys
_transactionID
_createAttestationDataForAccountIdentifier:error:
_generateKeychainTokensForAccountIdentifier:error:
_deleteKeychainTokensForAccountIdentifier:error:
_publicKeyDataForAccountIdentifier:error:
_signData:reason:forAccountIdentifier:error:
createAttestationDataWithMessage:connection:
deleteKeychainTokensWithMessage:connection:
getPublicKeyDataWithMessage:connection:
signDataWithMessage:connection:
createAttestationDataForAccountIdentifier_:error:
deleteKeychainTokensForAccountIdentifier_:error:
publicKeyDataForAccountIdentifier_:error:
signData_:reason:fallback:cancel:forAccountIdentifier:error:
dictionaryWithDictionary:
_copyPublicKeyDataForAccountIdentifier:error:
_isDeviceUnlocked
_queryForPrivateKeyWithLabel:prompt:
_regenerateKeychainTokensForAccountIdentifier:error:
addPurchaseManifestItemWithLibraryIdentifier:
dataContainerURL
_newURLOperationWithAsset:
localPath
moveAsset:toPath:installBehavior:error:
moveFile:toPath:installBehavior:error:
stringByDeletingPathExtension
setShouldRunWithBackgroundPriority:
sourceURLString
isExternalAsset
documentsDirectoryPathWithClientIdentifier:downloadKind:
downloadAndInstallAsset:error:
downloadAsset:error:
progressFraction
setProgressFraction:
unzipAsset:unzippedPath:error:
_download
_progressFraction
setServerResponse:
copyRestoreDictionary
_newResponseWithItems:error:
_addResponse:
_runWithOptions:error:
_showDialogsForResponse:
_plistDataWithItems:options:error:
_runWithBodyData:contentEncoding:options:error:
cloudMatchStatus
_runWithItems:options:
subarrayWithRange:
shouldShowTermsAndConditionsDialog
account
downloadItems
_downloadItems
_responses
_shouldShowTermsAndConditionsDialog
setAssetType:
setAssetURL:
setHashArrayData:
setNumberOfBytesToHash:
setSinfs:
setDPInfo:
setInitialODRSize:
setIsLocallyCacheable:
valueForExternalProperty:
setIsExternal:
setIsZipStreamable:
initWithData:error:
_attemptFireForJob:withName:
initWithIdentifier:
setBagKey:
setDefaultInterval:
setDefaultWindow:
_setLastFireDate:
_resetBackgroundTaskJobs
_userDefaultsKeyLastTimeCheck
_timerInterval
_fireTimer
initWithTimeInterval:sinceDate:
earlierDate:
_userDefaultsKeyWiFiOverride
_timerIntervalWithBagKey:userDefaultsKey:
_userDefaultsKeyCellularOverride
_readTimeIntervalFromUserDefaultsKey:
stringByAppendingString:
subscriptionRenewTimer
_addJobWithDate:window:allowsCellular:
_nextFireDateWithInterval:
_userDefaultsKeyWindowOverride
_windowWithUserDefaultsKey:
bagKey
cellularBagKey
setCellularBagKey:
defaultInterval
defaultWindow
eventBlock
preconditionsBlock
setPreconditionsBlock:
_bagKey
_cellularBagKey
_defaultInterval
_defaultWindow
_eventBlock
_identifier
_started
_preconditionsBlock
cancelApplicationRestoreWithBundleID:error:
restoreDataExistsForApplicationWithBundleID:size:
isFailed
_isFailed
_semaphore
_priority
sharedManager
registerUserSwitchStakeHolder:
_stopObservingODRProgress:
changeType
cancelOnDemandResourceDownloadsForApplicationHandle:
markFailedPlaceholderForApplicationHandle:
pauseOnDemandResourceDownloadsForApplicationHandle:
finishInstallOfApplicationHandle:
installPlaceholderForApplicationHandle:
_incrementPendingInstallsForDownloadIdentifier:
_decrementPendingInstallsForDownloadIdentifier:
_fireWaitBlocksIfNecessaryForDownloadWithIdentifier:
_removeApplicationDownloadProgressForApplicationHandle:
_removeODRProgressForApplicationHandle:
_removeOperationsForDownloadIdentifier:
_addOperationAtBeginning:
_performNextOperation
resumeSync
_isInstallingForDownloadIdentifier:
isRemovedSystemApp
dictionaryWithContentsOfFile:
enumerateMemoryEntitiesWithProperties:usingBlock:
initWithApplicationHandle:isPlaceholderRestore:
restoreSystemApplication:
suspendQuotasWithCompletionHandler:
_copyCombinedApplicationProgress:andODRProgress:forApplicationHandle:
initWithApplicationDownloadProgress:
_addProgressOperation:
_fireWaitBlocksForSyncTermination
terminateSyncWithCompletionHandler:
_addOnDemandOperationWithApplicationHandle:action:
_removeODRDownloadsForApplicationHandle:
_fireODRWaitBlocksForApplicationHandle:
_isRunningODRDownloadsForApplicationHandle:
_applicationHandleForODRProgress:
_cleanupODR
_updatePlaceholderWithODRProgressForApplicationHandle:
bundleURL
bundleExecutable
taskWithName:reason:
begin
uninstallApplication:withOptions:
waitForInstallOfDownloadIdentifier:completionBlock:
setAction:
_odrXPCConnection
remoteObjectProxy
setOndemandd:
_removeOperationsForDownloadIdentifier:operationClass:
indexOfObjectWithOptions:passingTest:
completedUnitCount
totalUnitCount
fractionCompleted
setCompletedUnitCount:
setTotalUnitCount:
addObserver:forKeyPath:options:context:
initWithMachServiceName:options:
applicationDownloadInitiatedForBundleID:adamID:externalVersionID:bundleVersionID:buildID:isBeta:manifestData:manifestURL:isMachineVPP:reason:variant:replyBlock:
pauseDownloadsForApplicationWithAdamID:replyBlock:
resumeDownloadsForApplicationWithAdamID:replyBlock:
cancelDownloadsForApplicationWithAdamID:replyBlock:
applicationDownloadInitiatedForBundleID:adamID:externalVersionID:bundleVersionID:buildID:isBeta:manifestData:replyBlock:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
setRemoteObjectInterface:
_observeODRProgress:forApplicationHandle:
removeObserver:forKeyPath:context:
willSwitchUser
beginExternalInstallationForDownloadIdentifier:
endExternalInstallationForDownloadIdentifier:
isDownloadingOrInstallingForItemIdentifier:
replayIncompleteOperations
resetProgressForApplicationHandle:
restorePlaceholderForApplicationHandle:
suspendQuotas
updatePlaceholderWithApplicationProgress:
waitForSyncBubbleToTerminateWithCompletionBlock:
downloadOnDemandResourceForApplicationHandle:
onDemandResourceDownloadsCancelledForApplicationHandle:withError:
onDemandResourceDownloadsCompletedForApplicationHandle:withError:
onDemandResourceDownloadsStartedForApplicationHandle:
resumeOnDemandResourceDownloadsForApplicationHandle:
shouldResumeOnDemandResourceDownloadsForApplicationHandle:
waitForOnDemandResourceDownloadsForApplicationHandle:completionBlock:
observeValueForKeyPath:ofObject:change:context:
sinfPathForBundleID:
_appProgress
_callbackQueue
_odrDownloads
_odrProgress
_odrWaitBlocks
_operations
_pendingInstalls
_placeholderIconOperationQueue
_syncWaitBlocks
_waitBlocks
accessDatabaseUsingBlock:
_migrateToCurrentUserVersionUsingDatabase:
setUserVersion:
setDownloadSizeLimit:
setNetworkTypes:
setPolicyRule:
setPowerStates:
unionPolicyRule:
archivedDataWithRootObject:
setRentalKeyIdentifier:
_rentalInformation
cacheRoot
podcastType
numberWithUnsignedInteger:
initWithURL:options:
loadValuesAsynchronouslyForKeys:completionHandler:
tracksWithMediaType:
_copyChapterVideoTracksForAsset:
importChaptersByParsingAsset:
duration
trackReferences
trackWithTrackID:
mediaType
additionalEntityProperties
chapters
downloadType
durationInSeconds
hasItemArtwork
loadPropertiesFromMediaPath:
setAdditionalEntityProperties:
setChapters:
setDurationInSeconds:
setItemMediaPath:
setValue:forAdditionalEntityProperty:
_additionalEntityProperties
_assetType
_chapters
_downloadType
_durationInSeconds
_libraryPersistentIdentifier
_metadata
_protectionType
setDialogButton:
dialogButton
_dialogButton
_setArtistName:
_setItemKind:
_setReleaseDateString:
_setStoreAccountIdentifier:
_setTitle:
_setReleaseDate:
_setStoreItemIdentifier:
_setStorePreorderIdentifier:
_setImageCollection:
itemKind
releaseDate
releaseDateString
ITunesStoreIdentifier
preOrderIdentifier
itemTitle
imageCollection
newValueDictionaryWithItem:
allProperties
newClientPreorderWithPersistentID:allValues:
setValuesWithItem:
type
initWithItemDictionary:
preorderItems
_items
numberOfPreordersInQueue
_numberOfPreorders
_sendChangeNotificationForKinds:
_copyPreorderAccountIdentifiers
_handleCheckQueueFinish:
sharedPreorderQueue
checkPreorderQueue
itemKinds
getObjects:range:
cancelPreordersWithMessage:connection:
checkQueueWithMessage:connection:
getPreordersWithMessage:connection:
registerManagerWithMessage:connection:
setItemKinds:
_preorderQueryWithAccountID:database:
_handleLoadQueueFinish:
_clientForConnection:
intersectsSet:
addPreordersWithItems:accountID:
removePreordersWithPreorderIdentifiers:
setPerformSinfMirartionCheckBeforeFailing:
_refreshReceiptForApplication:withOptions:error:
missingRequiredSINF
_wasInstalledByConfigurator:
_preformMigrationCheckForApp:
_optionsForApplication:
enumerateApplicationsOfType:usingBlock:
receiptExpirationDate
addExpiring:expirationDate:
addRefreshed:
performSinfMirartionCheckBeforeFailing
addRevoked:
setReceiptFlags:
_postBodyDataWithApplication:options:error:
_handleResponse:forApp:options:
resultingError
setResultingError:
_checkExpirationNotificationDate:
_operationResult
paymentWithProduct:
paymentWithProductIdentifier:
raise:format:
_requestParameters
fileProtectionType
dictionaryWithObjectsAndKeys:
unsignedIntegerValue
SINFData
DPInfoData
mediaLibraryProtectionType
processingTypes
SINFs
_newURLOperationWithItemID:accountID:
_cancelPreorderWithOperation:error:
_newPluralErrorDialogWithPostCount:uploadCount:
_newPluralErrorDialogWithPostCount:
_newSingleErrorDialogWithPost:
_showDialog:
_newErrorDialogWithServerMessageWithPost:erroMessage:canRetry:
_newPluralErrorDialogWithUploadCount:
_newSingleErrorDialogWithUpload:
cancelUserNotification:
setButtonsWithTitles:
localizedShortName
_newPluralErrorDialogWithCount:formatString:
newlineCharacterSet
componentsSeparatedByCharactersInSet:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
updateUserNotification:withDialog:
_sendDidFinishWithResponseFlags:
_postIDs
_temporaryPostIDs
_temporaryUploadIDs
_uploadIDs
supportsItemKind:
_itemKinds
albumIdentifier
assetURL
attachmentDescription
categoryName
subtitle
deletesAssetWhenFinished
isExplicitContent
previewFrameTimestamp
newEntityValuesWithMediaSocialArtist:
initWithUnsignedInteger:
assetToken
assetTokenType
deleteAssetFile
setSubtitle:
_setUploadKind:
_openFile
_hashAndWriteData:error:
_checkHashForByteCount:
_truncateToSize:
initWithPath:MD5Hashes:numberOfBytesToHash:
_bytesWritten
_hashes
_md5Context
_numberOfBytesToHash
_verifiedBytes
representsDownloadWithIdentifier:
_cancelErrorsPassingTest:
canCoalesceWithError:
addDownloadIdentifiers:
updateUserNotification:withUserNotification:
_scheduleErrorDisplay:
isValidError
cancelUserNotifications:
performActionForResponseFlags:
_setNotification:
_displayScheduledErrors
cancelDialogsWithDownloadIdentifier:
_scheduledErrors
_scheduledErrorTimer
removeDownloadIdentifier:
downloadTitle
_downloadIdentifiers
_downloadTitle
initWithDictionary:options:
_isInstallError:
_notificationTitle
_notificationBody
constrainedSizeLimit
canDownloadInITunes
supportsDeviceCapability:
_specificStringWithLocalizedKeyBase:
_genericStringWithLocalizedKeyBase:
setCanDownloadInITunes:
setConstrainedSizeLimit:
_canDownloadInITunes
_sizeLimit
completionBlock
optionFlags
initWithDictionary:options:completionBlock:
_showPreparedNotification:
showUserNotification:withOptions:completionBlock:
updateWithDictionary:options:
updateUserNotification:withDictionary:options:
userNotification
isCanceled
show
prepareUserNotificationWithDialog:
showPreparedNotification:withCompletionBlock:
_finishUserNotification:withResponseFlags:
_userNotifications
_completionBlock
_isCanceled
_notificationDictionary
_notificationOptions
_runLoopSource
_userNotification
restoreDataSize
_downloadSessionProperties
_hasRestoreData
_restoreDataSize
initWithDownloadHandle:bundleIdentifier:
clientID
setItemName:
isRedownload
setIsRedownload:
_isRedownload
_artistName
_clientID
_itemID
_itemName
_setOutputItemsWithMapping:
purchaseHistoryItems
_inputItems
_outputItems
overrideProgress
setOverrideProgress:
_overrideProgress
initWithFilePath:hashes:bytesToHash:
filePath
hashes
numberOfBytesToHash
_bytesToHash
_filePath
displaysOnLockscreen
setPerformDefaultActions:
setTextFieldValues:
_dialogResponse
_displaysOnLockscreen
setSoonestExpirationDate:
setSoonestExpiring:
expiring
refreshed
revoked
soonestExpiring
soonestExpirationDate
_expiring
_refreshed
_revoked
_soonestExpiring
_soonestExpirationDate
_keyboardType
tokenBlock
unlockScreenType
_tokenBlock
supportedAppExtensionTypes
applicationForPluginBundleIdentifier:extensionType:
_authContext
_enabledDownloadKinds
_getData:forContentTasteItemUpdates:includedContentTasteItemUpdates:
copyURLRequest
_cachedMediaContentSyncURLResponseForAccount:
data
storagePolicy
initWithResponse:data:userInfo:storagePolicy:
_storeCachedMediaContentSyncURLResponse:forAccount:
isNSNumber__
_revisionIDForURLResponse:
_ETagValueWithResponse:
_responseWithResponseData:expirationDate:revisionID:isCachedResponse:
playlistGlobalID
storeAdamID
tasteType
item
contentTasteItems
setItem:
setContentTasteItems:
_saveAdamIdLikedStatesToLibrary:
_savePlaylistGlobalIdLikedStatesToLibrary:
checkoutReaderConnection
deviceMediaLibrary
defaultRenderer
valueForDatabaseProperty:
componentsSeparatedByString:
removeObjectsInArray:
statementWithPrefix:inParameterCount:
executeQuery:withParameters:
int64ForColumnIndex:
enumerateRowsWithBlock:
newWithPersistentID:inLibrary:
_setLikedState:forEntity:
setValue:forDatabaseProperty:
addStoreItemIDs:andAddTracksToCloudLibrary:withCompletion:
checkInDatabaseConnection:
stringForColumnIndex:
addNonLibraryOwnedPlaylistWithGlobalID:completion:
_mediaContentTasteCacheDirectoryPath
_mediaContentTasteSyncURLResponseCacheFilePathForAccount:
initForReadingWithData:
decodeObjectOfClasses:forKey:
finishDecoding
initForWritingWithMutableData:
encodeObject:forKey:
finishEncoding
_iTunesStore_valueForHTTPHeader:
setAdamId:
setExternalId:
setPreference:
contentType
setPreferenceType:
updateDate
setCreatedOffsetMillis:
setPreferences:
preferences
adamId
setStoreAdamID:
preferenceType
setContentType:
hasExternalId
externalId
setPlaylistGlobalID:
preference
setTasteType:
setExpirationDate:
setResponseRevisionID:
setCachedResponse:
main
_contentTasteItemUpdates
_shouldInvalidateLocalCache
initWithLocaleIdentifier:
invalidProductIdentifiers
initWithManifestPath:
sharedBookContainerPath
addManifestEntries:
manifestEntriesWithProperty:equalToValue:limitCount:
_entries
purchasedBookManifest
sharedPurchasedBookManifest
syncedBookManifest
addManifestEntry:
bookPathPermalink:
bookPathForAdamID:withPublicationVersion:
manifestPath
removeManifestEntryWithStoreItemID:
removeManifestEntryWithDownloadPermalink:
_invalidateAfterExternalChange
_manifestPath
initWithKeyOptions:valueOptions:capacity:
_prepareDownloadsMatchingPredicate:ignoreDownloadHandlers:filtersExistingTasks:
_reloadKeepAliveAssertion
_downloadIsForLegacyClientWithIdentifier:
setPriority:
cancelWithITunesStoreReason:error:
sessionProperties
sessionID
pauseSessionWithID:
cancelSessionWithID:
stopWithFinishResult:
member:
sessionState
_startProgressTimer
_disavowDownloadHandlerSession:withTaskState:
_failDownloadWithIdentifier:error:transaction:
setInitialDownloadPhase:
_processDownloadWithTaskState:databaseSession:setupBlock:
_releaseDownloadHandlerSession:withTaskState:
ITunesStoreDataConsumer
countOfBytesReceived
countOfBytesExpectedToReceive
signalDownloadCompletion
setITunesStoreDataConsumer:
ITunesStoreCancelReason
_processDownloadFailureWithTaskState:cancelReason:
ITunesStoreCancelError
canAttemptRecoveryWithError:
_attemptRecoveryForDownloadWithTaskState:databaseSession:
_scheduleReconnect
_logDownloadEvent:forTaskWithState:session:
_downloadSessionPropertiesWithPhase:taskState:databaseSession:
_performDefaultHandlingForAuthenticationChallenge:completionHandler:
initWithSessionProperties:
_authenticationChallengeQueue
setOverrideDownloadSizeLimit:forDownloadIdentifier:
_setDownloadPhase:forDownloadIdentifier:databaseTransaction:
removeOverrideDownloadSizeLimitForDownloadIdentifier:
_downloadOnDemandResourcesForDownloadIdentifier:databaseTransaction:
initWithDownloadIdentifier:databaseSession:
_finishRecoveryWithOperation:response:
estimatedTimeRemaining
externalValuesForDownloadID:
notifyClientsOfExternalPropertyChanges:forDownloadID:downloadKind:
_applicationHandleForDownloadIdentifier:databaseTransaction:
beginSessionWithID:
_hasAutomaticUpdateTasks
postBulletinForInstalledUpdates
URLSessionIdentifier
sessionConfiguration
getAllTasksWithCompletionHandler:
sessionTaskWithSession:
ignoresDownloadHandler
openSessionWithProperties:
mediaAssetSize
isPerDeviceVPP
downloadRestoreState
backgroundOperations
setWaitForDownload:
newEventDictionaryWithDownloadIdentifier:assetIdentifier:
eventDispatcher
postEventWithName:userInfo:
protectionSpace
authenticationMethod
serverTrust
credentialForTrust:
initWithAuthenticationChallenge:
initWithAuthenticationChallege:
initWithUser:password:persistence:
setIgnoresDownloadHandler:
initWithDownloadPipeline:response:
isDiscretionary
enumerateOperationsWithDownloadQuery:session:usingBlock:
_queueFinishDownloadWithtaskState:databaseSession:setupBlock:
_finishDownloadWithOperation:response:
setHandlerReleasedDownloadPhase:
reconnectWithURLSessionTasks
notifyClientsOfPropertyChanges:forDownloadID:downloadKind:
_commitProgressTimer
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:_willRetryBackgroundDataTask:withError:
_applicationBundleIdentifierForDownloadIdentifier:databaseTransaction:
_performDownloadOperation:
_pauseOnDemandResourcesForDownloadIdentifier:databaseTransaction:
_resumeOnDemandResourcesForDownloadIdentifier:databaseTransaction:
_backgroundOperationQueue
_dirtyTaskStates
_downloadHandlerSessions
_holdingKeepAliveAssertion
_preparationDownloadIDs
_preparationOperationQueue
_processingOperationQueue
_progressTimer
_reconnectTimer
_taskStates
_urlSessions
_downloadOperationsByTask
_discretionaryDownloadOperationQueue
_nonDiscretionaryDownloadOperationQueue
waitForDownload
_downloadTaskWaitSemaphore
_waitForSignal
_waitForDownload
initWithServiceName:
addObservedNotificationNames:
postNotificationName:message:
unregisterObserverWithMessage:connection:
_addObserverWithPortName:notificationName:
_removeObserverWithPortName:notificationName:
addObservedNotificationName:
_saveRegisteredPortNames
removeObservedNotificationName:
observedNotificationNames
_observers
_connection
_notificationNames
keyPath
initWithObject:keyPath:block:
observeObject:keyPath:options:usingBlock:
_keyPath
_object
_cancelPollTimer
_setLastOccurrenceCheckTime:
shouldKeepDaemonAlive
_reloadPollTimer
_willRemoveEvent:
_lastOccurrenceCheckTime
pollInterval
hasOccurred
performAction
_fireEventsAfterPollTimer
sharedEventMonitor
monitorEvent:
removeEvent:
_events
_lastPollTime
_pollTimer
setPollInterval:
setShouldKeepDaemonAlive:
_pollInterval
_shouldKeepDaemonAlive
testBlock
setTestBlock:
_testBlock
_addUniqueValue:withDefaultsKey:aggregateKey:
_addFailureWithKind:downloadKind:error:
_addScalarValue:forKey:
addDataRestoreFailureWithKind:error:
addInstallFailureWithKind:error:
addSuccessfulRestoreWithKind:
addTransferFailureWithKind:error:
_addClient:
connectEventMonitorWithMessage:connection:
_eventMonitors
refreshAllMIDBasedSinfs
_initStoreKitClient
setSupportsDeferredPayment:
_isPaymentRestricted
_showPaymentsRestrictedAlert
_sendPaymentsAdded:
_copyDownloadsForDownloadIDs:properties:context:
_reloadClientProperties
initWithKey:ascending:
setSortDescriptors:
_sendDownloadChangesets:
_refreshFromServerWithReason:accountIdentifier:
_sendPaymentsRemoved:
_sendRestoreCompletedWithError:
_finishRestoreOperation:
_mergeBatchResponse:forRestoreOperation:
_sendPaymentsUpdated:
propertiesForDownloadEntities
initWithMicroPaymentDownload:clientID:
_sendBuyRequestForPayment:withCompletionBlock:
_sendFinishRequestForPayment:withCompletionBlock:
_cancelDownloadsForDownloadIDs:
_sendMergeResults:
_cancelDownloadsForPayments:
clientState
_setClientState:
effectiveRestrictedBoolValueForSetting:
_copyAccountIDsForRefreshReason:
_finishLoadQueueOperation:
_completeBuyRequest:forPaymentID:withBlock:
_completeFinishRequest:forPaymentID:withBlock:
_sendMessage:forPayments:
initWithXPCClient:
removePaymentWithObjectID:
_databaseClientObjectID
_externalQueue
_lastRefreshReason
_loadQueueOperation
_restoreOperation
_state
_transientFailedIDs
location
_performLocationLookup:
_performJSSignLookupWithURLBag:error:
_performPlatformLookup:
setLocale:
setDateFormat:
stringFromDate:
expirationInterval
dateWithTimeIntervalSinceNow:
userAgentWithClientName:version:
copyRequestParameters
initWithBagDictionary:
unpersonalizedLookupURLString
initWithPlatformContext:
keyProfile
setStoreFrontSuffix:
_setUserAgent:
setItemIdentifiers:
_setCaller:
_setLookupResponse:
initWithBaseURL:location:
valueForRequestParameter:
setPointOfInterestIdentifier:
setPointOfInterestProviderIdentifier:
setPointOfInterestProviderURL:
_newStoreURLOperationWithBagKey:
_newLookupResponseWithResultsFromOperation:
_setAccountID:
setRequiredUniqueIdentifier:
lookupProperties
_personalizationStyle
_properties
setExternalValuesWithDictionary:
initWithClientXPCAsset:
addNetworkType:
_setDatabasePropertiesWithExternalMetadata:error:
_setAssetsWithExternalAssets:error:
_setThumbnailImageWithExternalAssets:error:
_setAssetsWithExternalThinnedAssets:error:
setSizeLimitsWithStoreConstraintDictionary:
initWithNetworkConstraints:
policyRules
setCellularDataStates:
setPolicyRules:
sizeLimitForNetworkType:
initWithExternalManifestDictionary:validateVariants:
_copyValidAssetsWithExternalAssets:validateVariants:
compatibleProductType
assetForAssetIdentifier:
removeAssetsWithAssetType:
setDownloadPolicy:
_assets
_downloadPolicy
_bookManifest
_installMediaAsset:assetInstalledPath:fileName:drmPath:error:
_addPurchaseManifestItem:
_removeDuplicateEntry:
_newManifestEntry:
_newManifestEntry:withFileName:
_existingManifestEntry
_syncedBooksPath
sharedBookContainerCachesPath
copyright
pageProgressionDirection
sortArtistName
sortCollectionName
sortTitle
_isSharedDownload
_bookPath
initWithRequestStyle:
gratisIdentifiers
setBundleIdentifiers:
_newDefaultRequestProperties
redirectedClaimURL
_newRetryRequestPropertiesWithURL:
suppressesErrorDialogs
setShouldSuppressDialogs:
authenticationReasonDescription
propertyListBodyData
initWithRequestBody:
setAuthenticationReasonDescription:
setSuppressesErrorDialogs:
_authenticationReasonDescription
_defaultRequestProperties
_requestBody
_suppressesErrorDialogs
_createScratchDirectory
_extraMetaDataFromBOM:error:
_verifyBundleIdentfiier:bundleVersion:packagePath:
_removeScratchDirectory:
stringWithString:
bundleFileType
hasSuffix:
sourceURL
setBundleFileType:
_sourceURL
_bundleFileType
_fetchAppProxyForBundleID:error:
_canRescueInstallTypeForBundleID:proxy:error:
_attemptRescueForBundleID:error:
_isRestoreRunning
setPollDuration:
setStatus:
setServiceErrorMessage:
_isUnrecoverable:statusCode:
setActivityURL:
_unrecoverableErrors
setValuesWithResponseDictionary:
setStatusCode:
serviceErrorLabel
setServiceErrorLabel:
_activityURL
_pollDuration
_status
_statusCode
_serviceErrorLabel
_serviceErrorMessage
setHandler:
setOptions:
setViewControllerName:
setTimeoutTimer:
_applicationStateMonitor
applicationStateForApplication:
_setApplicationState:forClientID:
updateInterestedBundleIDs:
_setApplicationStatesWithDictionary:
bundleInfoValueForKey:PID:
sharedService
openApplication:options:withResult:
containerPath
setBadgeValue:
appIdentifier
shouldLaunchApp
launchOptions
_getProcessID:forApplicationIdentifier:
processAssertionIdentifier
processAssertionInterval
processAssertionReason
viewControllerName
options
cancelTimeoutTimer
_dequeueAlertWithMessage:connection:
dequeueAlertWithMessage:connection:
registerPluginConnectionWithMessage:connection:
testBadgingWithMessage:connection:
testLockscreenAccountSheetWithMessage:connection:
testPluginAlertWithMessage:connection:
restartApplicationWithMessage:connection:
terminateApplication:forReason:andReport:withDescription:
_registerPluginConnectionWithMessage:
sendPluginMessage:
dialogDictionary
_requestPluginConnectionWithCompletionBlock:
applicationInfoForApplication:completion:
_getApplicationInfoForIdentifier:key:
_disconnectPluginConnection:
_fireDeferredPluginBlocksWithConnection:
_timeoutPluginConnection
postNotificationName:object:userInfo:
beginGeneratingStateChangeNotificationsWithCompletionBlock:
endGeneratingStateChangeNotifications
frontmostClientIdentifier
removeDefaultPNGSnapshotsForIdentifier:
suspendFrontApplication
sendPluginMessage:withReplyBlock:
_enabledRemoteNotificationTypes
_observeAllIdentifiersCount
_observedApplicationIdentifiers
_pendingAlerts
_pluginConnection
_pluginConnectionTimeout
_pluginDeferredBlocks
_springBoardQueue
_stateCache
timeoutTimer
_timeoutTimer
_viewControllerName
notificationPayloadWithAccountPairs:
setAppIdentifier:
setShouldLaunchApp:
setLaunchOptions:
setProcessAssertionIdentifier:
setProcessAssertionInterval:
setProcessAssertionReason:
familyContentRemovalRequestWithAppIdentifier:accountPairs:
_appIdentifier
_launchOptions
_processAssertionIdentifier
_processAssertionInterval
_processAssertionReason
_shouldLaunchApp
stopObserving
_sendDownloadKindsUsingNetwork:
cancelAllDownloadsWithMessage:connection:
finishDownloadsWithMessage:connection:
getActiveDownloadsWithMessage:connection:
getDownloadAssetPropertiesWithMessage:connection:
getDownloadAssetsWithMessage:connection:
getDownloadKindsUsingNetworkWithMessage:connection:
getDownloadPropertiesWithMessage:connection:
getDownloadsWithMessage:connection:
getEntityExistsWithMessage:connection:
insertDownloadsWithMessage:connection:
moveDownloadWithMessage:connection:
notifyClientsOfExternalPropertyChanges:connection:
notifyClientsOfExternalStateChanges:connection:
prioritizeDownloadWithMessage:connection:
reevaluateBackgroundDownloadsWithMessage:connection:
registerClientDownloadManager:connection:
removePersistenceIDWithMessage:connection:
restartDownloadsWithMessage:connection:
retryRestoreDownloadsWithMessage:connection:
setAssetPropertiesWithMessage:connection:
setDownloadHandlerWithMessage:connection:
setDownloadPropertiesWithMessage:connection:
setDownloadsWithMessage:connection:
getCellularNetworkAllowed:connection:
setCellularNetworkAllowed:connection:
finishSessionWithMessage:connection:
getSessionPropertiesWithMessage:connection:
connectDownloadHandlerWithMessage:connection:
resetDisavowedSessionsWithMessage:connection:
setClientDownloadHandlerWithMessage:connection:
setSessionProgressWithMessage:connection:
setHandlerPropertiesWithMessage:connection:
setSessionPropertiesWithMessage:connection:
setSessionStatusDescriptionWithMessage:connection:
pipeline
garbageCollectionTimerIsExpired
startObserving
applicationIdentifier
_downloadPersistentIDsFromBundleIDs:
_pauseDownloads:isForced:client:
orderedSetWithArray:
_resumeDownloads:client:
_cancelDownloads:client:
_retryRestoreIfNecessaryForTransaction:
_rescueStuckPlaceholderWithBundleID:
activeDownloadIdentifiers
copyXPCEncodedValuesForClientProperties:
valueForExternalProperty:ofAssetID:
valueForExternalProperty:ofDownloadID:
_filterAndTranslateProperties:usingBlock:
divertExternalDownloads:forClientIdentifier:
_prioritizeDownload:aboveDownload:client:error:
_restartDownloads:client:
initWithObject:
addDownloadHandler:
_handleSessionMessage:connection:usingBlock:
cancelAuthenticationSessionWithID:
continueAuthenticationSessionWithID:
unarchiveObjectWithData:
useCredential:forAuthenticationSessionWithID:
performDefaultForAuthenticationSessionWithID:
rejectSpaceForAuthenticationSessionWithID:
disavowDownloadSessionWithID:error:
failDownloadSessionWithID:error:
finishDownloadSessionWithID:
releaseDownloadSessionWithID:
sessionForSessionID:
_handleSessionMessage:connection:usingReplyBlock:
resetDisavowedSessionsForHandlerWithID:
setGlobalDownloadHandlerID:forClientID:
modifyDownloadHandlerWithID:usingBlock:
setSessionProperties:forSessionWithID:
_managerClientForConnection:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
beginUsingNetworkForDownloadKind:
endUsingNetworkForDownloadKind:
_managerClients
_networkKinds
_rescuingBundleIdentifiers
_thumbnailOperationQueue
_thumbnailRequestsByDownloadID
_workspaceDownloadObserver
_initTransactionLog
_warmUpSharedURLCache
_networkUsageStateChangeNotification:
_operationCountChanged:
_reloadOperationKeepAliveTransaction
setObject:
_expireCachedObjectForKey:
setExpirationTimer:
_releaseKeepAliveAssertion:
_setGlobalState
_initBackgroundTaskAgent
_observeNotifications
mainServer
_getShowingDialogWithMessage:connection:
_registerAnissettNotifier
carrierBundleStatusForService:
getEligibilityForService:completionBlock:
initializeWithLog:
sharedURLCache
isUsingNetwork
setClientType:
_setTakesTaskCompletionAssertions:
setLogFileBaseName:
setLogDirectoryPath:
copyProtocolConditionalContext
setDefaultConditionalContext:
setDefaultStore:
isAuthenticationActive
resetAuthenticationState
_reloadWiFiManager
sharedCFURLCache
addBackgroundTaskWithRequest:
cachedObjectForKey:
cacheObject:withKey:expirationInterval:
cancelBackgroundTaskWithIdentifier:
hasBackgroundTaskWithIdentifier:
removeCachedObjectForKey:
_handleWakeWithName:job:
_updateMIDSINFs
_aliveForOperationQueues
_backgroundTaskObservers
_bagTimers
_batterySaverWatcher
_cachedObjects
_dialogCount
_jetsamSource
_keepAliveAssertions
_keepAliveOperationQueues
_notifyToken
_satisfiedWakeRequests
installState
setInstallState:
installPhaseFinishedForProgress:
_isPlaceholderRestore
networkAvailableRequest
pluggedInRequest
wifiAvailableRequest
initWithBackgroundTaskAgentJob:
copyBackgroundTaskAgentJob
setValue:forBackgroundTaskAgentKey:
valueForBackgroundTaskAgentKey:
_job
_newManifestWithStoreDownloadQueueResponse:accountID:accountName:
initWithManifestType:
addActivity:
copyJobManifestWithAccountID:accountName:
enumerateActivitiesWithAccountID:accountName:usingBlock:
setDefaultButton:
_setMatchWithType:
_fireMatchBlock
_endAlertWithButtonIndex:
setMatchType:
initWithReason:
matchBlock
_cancelDialog
_presentDialog
_reloadDisplayedDialog
_match
_matchBlock
setBiometricIdentities:
_biometricIdentities
_matchType
externalState
downloadPolicyForID:
overrideDownloadSizeLimitForDownloadIdentifier:
downloadSizeLimitForPolicyWithID:
downloadForStoreDownload:
placeholderDownloadCanceledForPurchaseIdentifier:
placeholderDownloadForPurchase:
initWithObjects:count:
_mediaAssetsForDownloadIdentifier:session:
_initWithDownload:mediaAssets:policy:
_bestMediaAsset
_shouldFailForFinishedDownload
_shouldCancelAsDuplicate
_shouldCancelAutomaticDownload
setIsPerDeviceVPP:
setDownloadRestoreState:
_loadSizeIfNecessaryForAsset:
setMediaAssetSize:
setDestinationPath:
_newURLRequestWithAsset:
_newAVAssetDownloadSessionOptionsWithAsset:URLRequest:
setAVAssetDownloadSessionOptions:
_newDataConsumerWithAsset:destinationPath:
_isDTServiceHubIssuedRequest:
setDataConsumer:
dataConsumer
_shouldFailForDiskSpaceWithAsset:dataConsumer:
setDiscretionary:
_requiresPoweredPluggedIn
setRequiresPowerPluggedIn:
_transferProgressFractionWithAsset:
setBytesPerSecondLimit:
setTimeoutIntervalForRequest:
setLoadingPriority:
_duetTicketWithBundleIdentifier:
setClientSecondaryIdentifier:
_URLSessionTaskPriorityForDownload:
setTaskPriority:
cellularDataStates
isCellularAllowed
userDefaultStates
currentBoolValue
downloadSizeLimit
networkConstraintsForDownloadKind:
characterSetWithCharactersInString:
rangeOfCharacterFromSet:
expectedContentLength
predicateWithProperty:equalToInt64:
predicateMatchingPredicates:
enumeratePersistentIDsAndProperties:usingBlock:
applicationForItemIdentifier:
_downloadKeyCookieWithAsset:
value
_sendsStoreHeadersForAsset:
setNeedsURLBag:
_assetSizeFromURLResponse:
_newAVContentInfoDictionary
allHTTPHeaderFields
_usesStreamingZipDataConsumerForAsset:
_allowsCellularAccessForAsset:
_setRequiresShortConnectionTimeout:
powerStates
_itemIsInMediaLibrary
_itemIsInSoftwareLibrary
isAppInstallationAllowed
isAutomaticAppDownloadsAllowed
requestFreeSpace:atPath:withOptions:completionBlock:
_assetNeedsDecryption:
_URLSessionTaskPriorityForDownloadPriority:
_ignoresDownloadHandler
_mediaAssets
_policy
_AVBackgroundSessionConfigurationWithIdentifier:
setRequestCachePolicy:
set_requiresPowerPluggedIn:
set_sourceApplicationSecondaryIdentifier:
dataTaskWithRequest:
set_priority:
set_loadingPriority:
AVAssetDownloadSessionOptions
setBackgroundOperations:
clientSecondaryIdentifier
requiresPowerPluggedIn
taskPriority
bytesPerSecondLimit
timeoutIntervalForRequest
loadingPriority
destinationPath
_AVAssetDownloadSessionOptions
_backgroundOperations
_clientSecondaryIdentifier
_dataConsumer
_destinationPath
_discretionary
_mediaAssetSize
_requiresPowerPluggedIn
_taskPriority
_bytesPerSecondLimit
_timeoutIntervalForRequest
_loadingPriority
_URLRequest
_isPerDeviceVPP
_downloadRestoreState
manifestURL
setManifestURL:
bundledManifestURL
setBundledManifestURL:
scheduledInBackground
setScheduledInBackground:
completion
setCompletion:
_scheduleUpdateAssetsOperationWithManifestURL:bundledManifestURL:clientIdentifier:userAgent:scheduledInBackground:completion:
_bagDidLoadNotification:
refreshCache:connection:
clearCache:connection:
_bundledManifestURLForClientIdentifier:
_deferredScheduleValuesByClientID
_lastModifiedHeaderValueByClientID
applicationProxyForBundleURL:
_handleInvalidReceipt:forConnection:
getApplicationReceiptPathWithMessage:connection:
handleInvalidReceipt:connection:
refreshAllReceipts:connection:
refreshAppReceipt:connection:
connectionHasEntitlement:
_performBackgroundReceiptRevocationCheckWithCompletionBlock:
_addOperation:
_performBackgroundReceiptRevocationCheck:completionBlock:
_checkIntervalWithDefault:bagKey:defaultsKey:
_setLastReceiptRevocationCheckDate:
appStoreSection
_setCheckInterval:forDefaultsKey:
repairApplicationSinfsForBundlesIfNecessary:
_automaticRevocationCheckInterval
_automaticRevocationCheckIntervalCellular
_addRevocationCheckJobWithDate:identifier:allowsCellular:
_nextCheckDateWithInterval:
_postNotificationForRevoked:
_postNotificationForExpiring:
_performBackgroundCheckForJob:jobName:
_performBackgroundReceiptRevocationCheckIfNeeded
_setReceiptRevocationCheckInterval:
_setReceiptRevocationCheckIntervalCellular:
initWithGlobalConfiguration:
setGlobalConfiguration:
getInternalSettingsWithMessage:connection:
insertEventWithMessage:connection:
reportEventsWithMessage:connection:
setInternalSettingsWithMessage:connection:
insertEventSummaries:error:
_reportEvents
_cancelBackoffRetryTimer
_scheduleBackoffRetry
_cancelBackoffRetry
setFinishBlock:
_backoffRetryCount
_backoffRetryTimer
_eventController
stringByReplacingCharactersInRange:withString:
_url
subtarget
setRedirectedClaimURL:
_redirectedClaimURL
uploadTime
_assetToken
_assetTokenType
_uploadTime
_requestURL
responseBlock
initWithStatusPollRequests:
statusPollRequests
_responseBlock
_statusPollRequests
setBoolValue:forSetting:
MCSetBoolRestriction:value:
applyRestrictionDictionary:clientType:clientUUID:localizedClientDescription:localizedWarningMessage:outRestrictionChanged:outEffectiveSettingsChanged:outError:
_sharedContainerPath
_sharedAssetStagingPath:
pathComponents
arrayByAddingObjectsFromArray:
_moveSharedAssetFromPath:toPath:error:
_sharedContainerPath:
_isSharedMDMDownload
_isSharedODRDownload
policyData
copyBackgroundTaskAgentJobs
setPolicyData:
_cachedPolicy
_initializePolicy
_addPolicy:
downloadSizeLimitForPolicyWithID:networkType:
_sizeLimitForPolicy:networkType:
networkTypes
_isPolicyRuleNetworkTypeAllowed:networkType:
_isPolicyRuleCellularDataAllowed:networkType:
_isPolicyRuleSatisfied:forPolicy:networkType:
_policies
_sizeLimitOverrides
initWithPolicyIdentifiers:
changesetType
setChangesetType:
downloadPropertiesForStoppedDownloads
setDownloadPropertiesForStoppedDownloads:
setNetworkType:
policyIdentifiers
setPolicyIdentifiers:
_changesetType
_downloadProperties
_networkType
_policyIDs
weakObjectsHashTable
_endDisconnectedSessionsForClientID:
_notifyObserversOfHandlersChange
_clientForSession:
disconnectDownloadSessionWithID:
_sendMessage:forSessionID:replyBlock:
_endSessionWithID:state:
_clientForProperties:
_popDownloadSessionForSessionID:
setSessionState:
_notifyObserversOfSessionChange:
setActiveHandlerIdentifier:
setBlocksOtherDownloads:
setNeedsPowerAssertion:
_globalHandlerIDForClientID:
_disconnectSessionsForHandlerID:
_notifyObserversOfSessionChanges:
setSessionPropertyValues:
setURLCredential:
activeHandlerIdentifier
beginBackgroundTaskForSessionWithID:reason:expirationBlock:
closeUnstartedSessionWithID:
endBackgroundTaskForSessionWithID:identifier:
retrySessionWithID:
_clientsByHandlerID
_disconnectedSessionsByClientID
_globalHandlersByClientID
_observersQueue
_sessionsByID
_stepOperations
handlerReleasedDownloadPhase
initialDownloadPhase
_downloadSessionPropertiesWithDownloadPhase:
_sendProgressToDelegate:
_finishResult:
_needsDRMOperationForDownloadKind:
_handlerReleasedDownloadPhase
_initialDownloadPhase
_stopResult
initWithBundleIDs:
setAccountID:
setSuppressErrorDialogs:
setPurchaseID:
setHttpHeaders:
sendRequestWithCompletionBlock:
_newManifestWithType:
isRestore
addActivity:withIdentifier:
_newInstallManifestRequestWithManifest:
_divertDownloadsFromManifest:usingResults:
skipDownloads
hideApplicationBadgeForPendingUpdates
reloadForSettingsFromServerWithCompletionBlock:
initWithBundleID:accountIdentifier:claimStyle:
_tellAppstoredToCheckClaimsForAccountID:claimStyle:clientAuditTokenData:establishActiveAccounts:ignoresPreviousClaimAttempts:completionBlock:
_tellAppstoredToCheckDownloadQueueWithReason:
initWithManifest:
sendRequestCompletionBlock:
initWithClaimStyle:
setEstablishesActiveAccount:
setIgnoresPreviousClaimAttempts:
divertSoftwareClaimPurchase:
divertSoftwarePurchase:withDownloadQueueResponse:withClientIdenfier:withDivertedDownloadID:
divertStoreQueueRequestWithItems:
hideAppstoredPendingUpdatesBadge
reloadAppstoredUpdatesWithCompletionBlock:
tellAppstoredToCheckFirstPartyClaimsWithAuditTokenData:completionBlock:
setCanBePaused:
setValue:forSessionProperty:
valueForSessionProperty:
blocksOtherDownloads
canBePaused
needsPowerAssertion
setPercentComplete:
setStatusDescription:
statusDescription
URLCredential
_activeHandlerIdentifier
_propertyValues
_sessionID
_sessionProperties
_urlCredential
unreportedEventsSinceTimestamp:
financeDictionaryRepresentation
userDsid
markAsFailed:
markAsCompleted:
discardUnreportableEvents
_insertTimestamp
_controller
_openSession
_setState:
downloadSessionState
_setURLCredential:
_copyValueForEntity:property:dictionary:
_setValue:forEntity:property:dictionary:
_setValues:forEntity:dictionary:
externalValuesForAssetID:
setBytesDownloaded:forAssetID:ofDownloadID:
setBytesUploaded:forAssetID:ofDownloadID:
setExternalValuesWithDictionary:forAssetID:
setExternalValuesWithDictionary:forDownloadID:
setValue:forExternalProperty:ofAssetID:
_externalAssetValues
_externalDownloadValues
setExternalPropertyValues:forAssetWithID:
_changeset
_completedUnitCount
_totalUnitCount
_newBodyDataWithBodyPlist:error:
_newRequestPropertiesWithBodyData:
removeCookiesWithProperties:
_deleteKeychainTokensForAccountIdentifier:
allowsBiometricOptIn
getIdentityMapCountWithMessage:connection:
getStateWithMessage:connection:
isIdentityMapValidWithMessage:connection:
resetWithMessage:connection:
saveIdentityMapWithMessage:connection:
setEnabledWithMessage:connection:
setAllowedWithMessage:connection:
obliterateBiometricsForAccountIdentifier:
waitUntilFinished
systemUptime
deleteTouchIDTokenForAccountIdentifier:
_bootDate
_cachedBiometricIdentitiesForAccountID:
_newUserDefaultsKeyWithAccountID:
_accessSemaphorePoolUsingBlock:
_bodyDictionary
_delay
_pushToken
copyExpirationTimer
_expirationTimer
localURL
setHashChunkSize:
setRemoteURL:
setVersion:
downloadKey
hashArrayData
hashChunkSize
numberWithLong:
_requestBodyDictionary
setPassThroughErrors:
attachmentType
childAttachmentForRelationship:
_attachmentDictionaryWithAttachment:
_targetDictionaryWithContentItem:
_externalServiceDictionaryWithDestination:
initWithPostDescription:
setPostID:
_attachments
_authorID
_authorType
_contentItems
_createTime
_externalServiceDestinations
_isAttributed
_text
_postID
shortVersionString
bundleProxyForIdentifier:
_loadFromItemIdentifiers
_loadFromBundleIdentifiers
_newSoftwareLibraryItemWithApplication:
setPlaceholder:
_setValue:forProperty:
_newSoftwareLibraryItemWithContainerPath:
setBeta:
setProfileValidated:
isLaunchProhibited
_initWithITunesMetadata:
bundleIdentifiers
itemIdentifiers
_itemIDs
_softwareLibraryItems
_bulletinInfoForDate:createIfNecessary:
addReadTitle:
addUnreadTitle:
newBulletin
setRecordID:
hasUnreadTitles
addReadTitle:withInstallTime:
addUnreadTitle:withInstallTime:
updateNotificationCenter
_bulletinsByDate
_readTitles
_unreadTitles
_newURLOperationForItem:error:
_addResponseForItem:operation:
setResponseError:
initWithItem:
primaryAssetURL
setResponseDownloads:
setError:forItemIdentifier:
setDatabaseIdentifier:
setLocalAssetURL:
setParentRelationshipType:
setParentUploadIdentifier:
setSourceApplication:
parentUploadIdentifier
_databaseIdentifier
_localAssetURL
_parentRelationshipType
_parentUploadIdentifier
_sourceApplication
_uti
_requestItems
_serverResponse
_responseDownloads
_responseError
_countOfBytesExpectedToSend
_countOfBytesSent
_uploadDatabaseIdentifier
_runHeadless
_runNonHeadless
_canPerformExtendedTouchIDActions
setFailedCodes:
setRedeemedCodes:
_fetchRedeemCodeMetadataWithError:
_newURLRequestPropertiesForCode:
_processDictionary:dialog:error:
_newURLRequestPropertiesForServiceActionButton:
_installedExternalVersionForRedeemCodeMetadata:
canPerformExtendedTouchIDActionsForAccountIdentifier:
initWithRedeemCodeDictionary:
_didUserCancelWithError:
operation:selectedButton:
_biometricStore
_cameraRecognized
_headless
_installedExternalVersionByiTunesIdentifier
_redeemCodes
_redeemMetadataByCode
_redeemResponse
setCredential:
verifyCredentialsForAccount:withHandler:
_credential
_username
addPreferences:
clearPreferences
preferencesCount
preferencesAtIndex:
readFrom:
writeTo:
mergeFrom:
_preferences
setValue:forDomain:key:
getValueForDomain:key:usingBlock:
defaultKeyValueStore
_getValuesWithMessage:connection:
getValuesWithMessage:connection:
removeAllValuesWithMessage:connection:
removeValuesWithMessage:connection:
setValuesWithMessage:connection:
_removeAllValuesWithMessage:connection:
_removeValuesWithMessage:connection:
_setValuesWithMessage:connection:
copyDataForDomain:key:
readUsingSessionBlock:
removeAllValuesWithCompletionBlock:
removeAllValuesForDomain:completionBlock:
initWithUTF8String:
setData:forDomain:key:
reloadAccounts
valueForDomain:key:
_handleMessage:connection:withBlock:
_keyValueStore
_storeIdentifier
_storeVersion
_sandboxed
_usesIdentityAttributes
_performSinfMirartionCheckBeforeFailing
_disableAutomaticDownloadKinds
_disableBookkeeper
_sendLogoutRequest
_sbsyncData
_garbageCollectWorkingDirectory
_garbageCollectPersistentManagers
_garbageCollectSoftwareDownloads
allCookiesForUserIdentifier:
setTopic:
setApplicationIdentifier:
insertEvents:withCompletionHandler:
flushUnreportedEventsWithCompletionHandler:
eventTopicOverride
appBundleId
setAppBundleId:
_metricsController
_eventTopicOverride
_appBundleId
removableSystemApplicationsWithCompletionBlock:
setSoftwareLibraryItems:
failureTypes
setResponseType:
addSession:
connectHandlerWithMessage:connection:
resolveSessionWithMessage:connection:
errorHandlerManager
_connectHandlerWithMessage:connection:
_resolveSessionWithMessage:connection:
popAllSessions
setFailureTypes:
popSessionWithIdentifier:
openSession:withCompletionBlock:
_completionBlocks
_completionQueue
_failureTypes
setSessionProperties:
artistIdentifier
redownloadActionParameters
genre
genreIdentifier
hasMessagesExtension
launchProhibited
messagesArtworkURL
artworkIsPrerendered
thumbnailImageURL
setIAdAttribution:
_newDateFormatter
dateFromString:
setIAdConversionDate:
setIAdImpressionDate:
setRatingLabel:
setRatingRank:
setLenient:
timeZoneForSecondsFromGMT:
setTimeZone:
processDictionary:error:
setErrorHandlerResponseType:
_presentDialog:
willBeginProcessingDictionaryHandler
_willBeginProcessingDictionaryHandler
_refreshDownload:error:
_URLBagKeyForDownload:
consumer
objectForData:response:error:
_newIdentityForPayment:
_newRequestWithIdentity:transactionID:
_updateDownload:withDictionary:
setIgnoresForcedPasswordRestriction:
_newPurchaseForDownload:
_applyResultsOfOperation:toDownload:error:
initWithFreeDownloadsPasswordSetting:paidPurchasesPasswordSetting:requestProperties:
setShouldSendSecureToken:
_requestDictionary
_serverValueForAccountPasswordSettingValue:defaultValue:
_accountPasswordSettingValueForServerValue:
_freeDownloadsPasswordSetting
_paidPurchasesPasswordSetting
_authenticateBeganNotification:
_authenticateEndedNotification:
_synchronizeData
_dispatchSync:
_accounts
_activeAccount
_activeLockerAccount
_addAccount:asActiveAccount:asActiveLockerAccount:
_postAccountStoreDidChange
_setCreditsString:forAccountWithUniqueIdentifier:
_signOutAccount:
signOutAllAccountsWithCompletionBlock:
_setActiveAccount:
_setActiveLockerAccount:
_claimUserApps
_sendAccountsReplyForMessage:connection:
addAccountWithMessage:connection:
getAccountAuthenticatedWithMessage:connection:
getAccountsWithMessage:connection:
getAuthenticationActiveWithMessage:connection:
resetAccountWithMessage:connection:
setAccountCreditsWithMessage:connection:
signOutAccountsWithMessage:connection:
updateAccountPasswordSettings:connection:
copyAccountDictionaryForDomain:
setLockdownDictionary:
setAccountSource:
copyAccounts
isActiveLockerAccount
mergeValuesFromAccount:
setValuesWithDictionary:forDomain:
iTunesValueForKey:usedDomain:
_obliterateBiometricsForAccountID:
setActive:
_commitAccount:toKeyValueStoreInDomain:
removeAccountFromDomain:
setActiveLockerAccount:
resetStoreFrontForSignOut
removeAccount:withCompletionHandler:
deleteAllData
existsForAccountIdentifier:
deleteBackingStore
removeUserDefaultsForAccountIdentifier:
_copyActiveAccountIdentifier:
accountWithUniqueIdentifier:reloadIfNecessary:
activeLockerAccount
setAccountCredits:forAccountWithUniqueIdentifier:
signOutAccount:
signOutAllAccounts
_accountChangeNotification
_hasDemotedApplications
setCancelsPurchaseBatch:
sendResponse:forPurchases:
sendResponses:
setPurchase:
ackConnection
finishesPurchases
sendError:forPurchases:
sendResponse:
setFinishesPurchases:
_finishesPurchases
_purchases
_uniqueIdentifier
_addPurchases:forClient:
_beginPurchaseBatch:forClient:
_newEncodedPurchaseEntityPropertiesWithResponse:
_clientForUniqueIdentifier:
_newResponsesToPurchasesForClient:inDatabase:
_enqueueNextPurchase
_cancelEncodedPurchases:forClient:
_connectClient:withOutputConnection:
newPurchaseWithDatabaseEncoding:
_finishEncodedPurchaseIdentifiers:forClient:
_moveEncodedPurchaseIDs:afterPurchaseID:forClient:
addPurchasesWithMessage:connection:
cancelPurchasesWithMessage:connection:
connectClientWithMessage:connection:
getPurchasesWithMessage:connection:
finishPurchasesWithMessage:connection:
insertPurchasesWithMessage:connection:
movePurchasesWithMessage:connection:
_newPurchasesFromEncodedArray:client:
_markInFlightCanceledPurchaseIdentifier:
_filterPurchases:withTransaction:block:
insertPurchases:afterPurchaseWithIdentifier:forClient:
setDownloadIdentifiers:
_authenticateForPurchases:client:
_newPurchaseIdentifiersFromEncodedArray:
movePurchasesWithIdentifiers:afterPurchaseWithIdentifier:
initWithDatabaseEncoding:
setURLResponse:
addPurchases:forClient:
batchIdentifier
initWithPurchases:
_finishAuthenticationRequestForBatchIdentifier:client:withAccountID:error:
setAuthenticationBlock:
_authenticationOperationQueue
expectedDownloadFileSize
_cancelPurchasesForLackOfDiskSpace:client:
cancelPurchaseWithIdentifier:applyingProperties:
_showNotEnoughDiskSpaceDialogForPurchases:
setBatchIdentifier:
deletePurchaseWithIdentifier:
_garbageCollectInflightPurchases
buyParametersValueForKey:
_finishPurchaseRequestForClientUniqueID:withResponse:
setPurchaseBlock:
_purchaseOperationQueue
existingDownloadForPurchase:
_cancelPurchasesWithBatchIdentifier:client:response:
databaseEncoding
cancelsPurchaseBatch
setUpdateState:forUpdateWithPurchaseIdentifier:
decodedResponse
replacePurchase:withDownloadQueueResponse:withClientIdentifier:
_checkStoreDownloadQueuesForPurchase:response:
_showPurchasesFailedDialogWithFirstTitle:count:
_clientForMessage:connection:
newPurchaseWithXPCEncoding:
setDefaultUserAgent:
addPurchases:
beginPurchaseBatch:
_addEncodedPurchases:forClient:
_insertEncodedPurchases:afterPurchaseID:forClient:
_placeholderAppPathForBundleIdentifier:
_authenticatingBatchIdentifiers
_didGarbageCollect
_inflightCanceledIdentifiers
_purchasingIdentifiers
_decryptSession
userVersion
_clientIdentifierForPurchases:
_userAgentForPurchases:
authenticationBlock
_authenticationBlock
_isDeviceCapableForPurchase
_incompatibleErrorWithPurchase:
_showDialogForPurchase:error:
_performSetup
_newPurchaseOperationWithPurchase:
isGratisSoftwareClaim
_updateAccount:withPurchaseResponse:
_performTeardownWithResult:queueResponse:
enabledServiceType
purchaseBlock
setDecodedResponse:
startTime
setRequestStartTime:
receivedResponseInterval
setResponseStartTime:
finishInterval
setResponseEndTime:
newDefaultInstance
_installedSoftwareApplicationForPurchase:
usesLocalRedownloadParametersIfPossible
_personalizedRedownloadParametersForPurchase:
_localRedownloadParametersForPurchase:
contentRating
rank
_placeholderVendorIdentifier
_familyPurchaserAccountIdentifierForApplication:
offers
offerType
placeholderDownloadIdentifier
setNewCustomer:
_appUpdateDownloadParametersForPurchase:
_applicationOwnerAccountDSID
_purchase
_purchaseBlock
_urlBagType
_maxOrderIdentifier
_insertPurchases:forClient:orderIdentifier:orderSpacing:
_cancelDownloadForPurchaseIdentifier:
_getInsertOrderID:nextOrderID:afterPurchaseID:
orderedSetWithObjects:
_divertStoreQueueRequestWithItems:
_divertSoftwarePurchase:withDownloadQueueResponse:withClientIdenfier:
networkConstraints
filteredAssetTypes
downloadProperties
_nextBatchIdentifier
_addEntityForPurchase:managerIdentifier:orderIdentifier:
_addPlaceholderDownloadForPurchase:clientIdentifier:
resetPurchasedAutoUpdateForStoreItemID:
replacePurchase:withDownloadQueueResponse:
shouldDecodeResponse
_newStoreURLOperationWithProperties:
KBSyncType
_importKeybagFromDictionary:
_metricsPageEventWithResponse:performance:
setMetricsPageEvent:
setPageURL:
setServerApplicationInstance:
setServerTiming:
shouldProcessProtocol
shouldSendSecureToken
_addKBSyncDataToRequestProperties:forAccountID:
_shouldSendMachineDataHeadersForProperties:
machineDataStyle
shouldSetCookies
rangeOfString:options:
_destinationFileURL
_sendsResponseForHTTPFailures
_shouldMescalSign
_wifiClient
_wifiClientTypeForManagerType:
_wifiInterfaceName
_decodedResponse
setHasAdamId:
hasAdamId
setHasCreatedOffsetMillis:
hasCreatedOffsetMillis
setHasPreferenceType:
hasPreferenceType
createdOffsetMillis
_adamId
_createdOffsetMillis
_externalId
_preference
_preferenceType
_has
_isDaemonOwned
_installExternalDownload:
_installDaemonOwnedDownload:
_updateRentalsPlist
_newIPodLibraryItem
_recordLastODRAction:
_actionCancelBundleIdentifier:error:
_actionPauseBundleIdentifier:error:
_actionResumeBundleIdentifier:error:
_actionStartDownload:bundleIdentifier:error:
isBetaApp
_appDownloadReasonForDownload:proxy:
progressWithTotalUnitCount:
becomeCurrentWithPendingUnitCount:
resignCurrent
_asset
action
ondemandd
_action
_ondemandd
_finishOperationWithError:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
removeFlushedPlayActivityEventsWithCompletionHandler:
initWithURLBagDictionary:
storeFrontSuffix
setCurrentStoreFrontID:
propertyListObjectWithPlayActivityEvent:
newRequestWithURL:
defaultOverrideHTTPHeaderFields
isNSDictionary__
playActivityController
_playActivityController
_addBackgroundTaskJob
_handleBackgroundTaskEvent:
_finishRequests:withResponses:
_btaObserver
_nextScheduledPoll
_requests
hidesServerDrivenDialogs
protocolVersion
initWithAccountIdentifier:provisioningData:
setProtocolVersion:
_finishProvisioningWithResponse:sessionID:error:
_newFinishProvisioningOperationWithData:
_hidesServerDrivenDialogs
_inputData
_protocolVersion
_makePlaceholderDirectoryForApplication:error:
_newITunesMetadataWithApplicationHandle:
_placeholdersContainerDirectoryPath
_newInfoPlistWithApplicationHandler:
_downloadSecondaryAssets:
_monitorForTerminationOfBundleID:
_newSoftwarePropertiesWithDownload:
invalidateCurrentMap
initWithBulletinDictionary:
copyBulletinDictionary
_mediaTypes
_numberOfPosts
initWithAccountIdentifier:syncData:
_newSyncOperationWithClientData:machineIDData:
_syncState
waitsForPurchaseOperations
_provisionWithRequest:error:
_syncMachineWithRequest:error:
_eraseProvisioning
blocksPurchaseRequests
actionData
_shouldRetryAfterError:
machineDataRequest
_blocksPurchaseRequests
setSubscriptionStatus:
setSupportsMusicCatalogPlayback:
setSupportsAddToCloudMusicLibrary:
supportsMusicCatalogPlayback
setCanSubscribeToMusicCatalog:
_newResponseWithSubscriptionStatus:
_changeNotificationSuspensionAccessQueue
initWithUserDefaultsRepresentation:
_sendChangeNotification
resetAccountBasedProperties
copyUserDefaultsRepresentation
setAccountStatus:
acceptedStoreTermsVersion
setAcceptedStoreTermsVersion:
latestStoreTermsVersion
setLatestStoreTermsVersion:
initWithServiceName:onQueue:
initWithSectionIdentifier:dispatchQueue:
addDataProvider:
setDataProviderProxy:
_appStoreSection
_sectionsByIdentifier
_sectionsLock
_sectionIdentifierBlacklist
_bulletins
_saveUserDefaults
newBulletinRequest
destinations
addBulletin:forDestinations:
withdrawBulletinsWithRecordID:
indexOfObjectPassingTest:
replaceObjectAtIndex:withObject:
modifyBulletin:
publisherDestination
sinceDate
maximumCount
laterDate:
setWithSet:
defaultSectionInfoForType:
setPushSettings:
setMessageNumberOfLines:
setUsesVariableLayout:
sortDescriptorWithKey:ascending:
_userDefaultsKey
sortDescriptors
bulletinsWithRequestParameters:lastCleared:
clearedInfoForBulletins:lastClearedInfo:
clearedInfoForClearingAllBulletinsWithLastClearedInfo:
clearedInfoForClearingBulletinsFromDate:toDate:lastClearedInfo:
clearedInfoForBulletins:
sectionParameters
getDataForAttachmentUUID:recordID:withCompletionHandler:
getPNGDataForAttachmentUUID:recordID:sizeConstraints:withCompletionHandler:
getAspectRatioForAttachmentUUID:recordID:withCompletionHandler:
primaryAttachmentDataForRecordID:
attachmentPNGDataForRecordID:sizeConstraints:
attachmentAspectRatioForRecordID:
dataProviderDidLoad
defaultSubsectionInfos
displayNameForSubsectionID:
migrateSectionInfo:oldSectionInfo:
noteSectionInfoDidChange:
receiveMessageWithName:userInfo:
handleBulletinActionResponse:
handleBulletinActionResponse:withCompletion:
syncsBulletinDismissal
displayNameForFilterID:
bulletinsFilteredBy:count:lastCleared:
bulletinsFilteredBy:enabledSectionIDs:count:lastCleared:
sectionIdentifier
universalSectionIdentifier
defaultSectionInfo
sectionDisplayName
sectionIcon
sectionIconData
parentSectionIdentifier
removeAllBulletins
_bulletinClass
_proxy
_sectionID
_initSKXPCConnection
_reloadEventHandler
disconnectBlock
messageBlock
sendSynchronousMessage:withReply:
_disconnectBlock
_messageBlock
hideAppstoredPendingUpdatesBadgeWithMessage:connection:
reloadAppstoredUpdatesWithMessage:connection:
clearExpiredHistoryWithMessage:connection:
hidePendingUpdatesBadgeWithMessage:connection:
migrateWithMessage:connection:
modifyStoreWithMessage:connection:
reloadWithMessage:connection:
removeAllUpdatesBulletinsWithMessage:connection:
showPendingUpdatesBadgeWithMessage:connection:
hidePendingUpdatesBadge
noteUpdatesStateChanged
reloadWithCompletionBlock:
shouldPerformAutomaticUpdates
showPendingUpdatesBadge
stop
verifyPendingUpdates
_objectAddress
setDate:
appearanceWithTitle:
actionWithAppearance:
setSupplementaryActions:forLayout:
actionWithLaunchURL:
setDefaultAction:
actionButtonTitle
actionButtonURL
launchURL
_actionButtonTitle
_actionButtonURL
_date
_destinations
_launchURL
_message
_recordID
_title
uninstallApplication:withOptions:error:usingBlock:
addObserver:
appState
isValid
pluginKitProxyForIdentifier:
containingBundle
bundleType
_writeReceipt:withContainerDirectory:style:
plugInKitPlugins
URLByAppendingPathComponent:isDirectory:
writeToURL:atomically:
unreportedEventURLsSince:
_runForReportingURL:error:
_shouldBackoffAfterError:
deleteReportedEvents
deleteEventsInsertedBefore:
finishBlock
newReportingSessionForURL:since:
anyUnreportedEvents
_destroyOutputFile:
initToFileAtPath:append:
open
writeEventsToStream:
close
streamContentLength
sessionCanaryIdentifier
_shouldClearEventsDespiteError:
markEventsAsReported
sharedDefaultSession
signData:completionBlock:
_signatureWithData:error:
_directory
_finishBlock
_importPropertiesFromLibraryItem:fromAccount:usingLibrary:
sharedLibraryDatabasePath
initWithLibraryPath:trackData:playlistData:
sharedMediaLibraryService
performImport:fromSource:withProgressBlock:completionHandler:
dictionaryWithCapacity:
collectionIndexInCollectionGroup
indexInCollection
episodeSortIdentifier
seriesName
collectionArtistName
composerName
showComposer
numberOfCollectionsInCollectionGroup
numberOfItemsInCollection
releaseYear
isCompilation
_absoluteTimeValueForDateValue:
shortDescription
longDescription
longSeasonDescription
workName
movementName
movementNumber
movementCount
composerIdentifier
collectionIdentifier
cloudIdentifier
_stringValueForURLValue:
viewStoreItemURL
launchExtrasUrl
isHighDefinition
seasonNumber
episodeIdentifier
networkName
_currentTrackMovieInfoFromMetadata:
_extendedContentRatingStringForLibraryItem:
_storeArtworkTokenFromLibraryItem:metadata:
_currentTrackChapterDataForTrackPid:libraryItem:usingLibrary:
videoDetailsDictionary
flattenedChapterDataWithImportChapters:library:trackPersistentID:
ratingLabel
ratingSystem
stringForRatingSystem:
ratingDescription
_decryptAsset:
_unprotectMediaAsset:
_checkoutRentalKeys:
_changeType
_applicationProgress
v16@?0@"DownloadsSession"8
Update
Install
Restore
Unknown
ATTACH DATABASE "%@" AS software_updates_db;
PRAGMA journal_mode=WAL;
software_updates_db
B8@?0
v8@?0
v16@?0@"SSSQLiteDatabase"8
%@: Reloading for %ld download policy change(s)
%@: Restarting %ld download(s) by request
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
com.apple.itunesstored.DownloadsDatabase
v40@?0q8r^@16Q24^B32
%@: Cannot divert download %lld to job %lld because the download does not exist
%@: Finishing download: %lld with phase: %@
[%@]: Not installing placeholder because appstored will handle it
%@: Prioritizing download: %lld
v32@?0q8Q16^B24
%@: Prioritizing downloads of kind: %@ for client: %@
%@: Reconciling %lu software downloads
%@: Cancel %lu downloads during software reconciliation
%@: Finished reconciling downloads with IDs: %@
%@: Reset download: %lld
%@: Reset automatic download: %lld
applicationWorkspaceChanges
T@"NSArray",R,C,N,V_applicationWorkspaceChanges
appWakeRequests
T@"NSArray",R,C,N,V_appWakeRequests
canceledAppDataRestoreIDs
T@"NSSet",R,C,N,V_canceledAppDataRestoreIDs
canceledIPodLibraryDownloadIDs
T@"NSSet",R,C,N,V_canceledIPodLibraryDownloadIDs
changedDownloadKinds
T@"NSSet",R,C,N,V_changedDownloadKinds
deletedHTTPCookies
T@"NSArray",R,C,N,V_deletedHTTPCookies
deletedIPodLibraryDownloadIDs
T@"NSSet",R,C,N,V_deletedIPodLibraryDownloadIDs
downloadChangeTypes
Tq,R,N,V_downloadChangeTypes
finishedDownloadKinds
T@"NSSet",R,C,N,V_finishedDownloadKinds
HTTPCookies
T@"NSArray",R,C,N,V_cookies
IPodLibraryItems
T@"NSArray",R,C,N,V_ipodLibraryItems
policyChangedDownloadIDs
T@"NSOrderedSet",R,C,N,V_policyChangedDownloadIDs
pipelineAdditions
T@"NSOrderedSet",R,C,N,V_pipelineAdditions
pipelineRestarts
T@"NSOrderedSet",R,C,N,V_pipelineRestarts
removedDownloadIDs
T@"NSOrderedSet",R,C,N,V_removedDownloadIDs
removedPersistentDownloadIDs
T@"NSOrderedSet",R,C,N,V_removedPersistentDownloadIDs
restorableDownloadIDs
T@"NSOrderedSet",R,C,N,V_restorableDownloadIDs
restoreReason
T@"NSString",C,N,V_restoreReason
statusChangedDownloadIDs
T@"NSSet",R,C,N,V_statusChangedDownloadIDs
updatedDownloadIDs
T@"NSSet",R,C,N,V_updatedDownloadIDs
changedDownloadProperties
T@"NSDictionary",C,N,V_changedDownloadProperties
changedExternalDownloadProperties
T@"NSDictionary",C,N,V_changedExternalDownloadProperties
cellular-data
guid
getSubscriptionStatusSrv
failureType
authenticatesIfNecessary
authenticationContext
T@"SSAuthenticationContext",C
carrierBundleProvisioningStyle
localizedAuthenticationReason
T@"NSString",C
reason
statusBlock
T@?,C
Daemon: Exiting
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iTunesStore_Sim/iTunesStore-1442.182/Daemon/PurchaseManifest.m
<Unknown File>
Must have directory path
com.apple.itunesstored.PurchaseManifest
StorePurchasesInfo.plist
%@: Rebuilding manifest for path: %@
plist
%@: Adding file to purchase manifest: %@
%@: Path: %@ not valid for manifest: %@
%@: Removing item from purchase manifest: %@
%@: Missing %lu paths from manifest
%@: Deleting %lu secondary files for %lu removed manifest items
%@: Deleted secondary file: %@
%@: Could not delete secondary file: %@: %@
PurchaseManifest
%@: Path does not exist: %@
%@: Path returned empty plist: %@
%@: Wrote dictionary (success: %d)
path
T@"NSString",R
purchaseManifestItems
T@"NSArray",R
manifestItemDictionary
T@"NSDictionary",R,N,V_dictionary
libraryPersistentIdentifier
T@"NSNumber",C,N
relativeArtworkPath
T@"NSString",C,N
relativeFeedAssetPath
relativeMediaAssetPath
relativeMetadataPath
assetOrdering
relativeArtworkAssetPath
relativeTrackPropertiesPath
trackPersistentID
%@: Couldn't load bag to get family-info url
family-info
fetchAccountNames
true
%@: Using cached family after error: %@
account
circle
timestamp
com.apple.itunesstored
JFamilyCircle.plist
family
members
ITunesPreferredDsid
ICloudDsid
firstName
lastName
accountName
sharingPurchases
iTunesAccountNames
B24@?0@"SSFamilyMember"8@"NSDictionary"16
q24@?0@8@16
authenticationPromptStyle
Tq,N,V_authenticationPromptStyle
clientAuditTokenData
T@"NSData",&,N,V_clientAuditTokenData
fetchITunesAccountNames
TB,N,V_fetchITunesAccountNames
userAgent
T@"NSString",C,N,V_userAgent
familyCircle
T@"SSFamilyCircle",R,N,V_familyCircle
com.apple.itunesstored.StoreDownloadQueueResponse
downloads
T@"NSOrderedSet",R
storeCorrelationID
T@"NSString",V_storeCorrelationID
error
T@"NSError",&
keybag
T@"NSData",R
rangesToLoad
shouldCancelPurchaseBatch
triggeredQueueCheck
userIdentifier
T@"NSNumber",R
clientIdentifier
T@"NSString",V_clientIdentifier
page-type
template-name
preorder-success
more
customerMessage
failed-items
item-id
dsPersonId
items
songList
cancel-purchase-batch
_downloadID
T@"NSNumber",C,N,G_downloadID,S_setDownloadID:,V_downloadID
downloadState
Tq,R,N,V_downloadState
contentLength
Tq,R,N,V_contentLength
contentIdentifier
T@"NSString",R,N,V_contentIdentifier
contentURL
T@"NSURL",R,N,V_contentURL
contentVersion
T@"NSString",R,N,V_version
T@"NSError",R,N,V_error
progress
Tf,R,N,V_progress
timeRemaining
Td,R,N,V_timeRemaining
transaction
T@"SKPaymentTransaction",R,N,V_transaction
T@"NSNumber",C,N,V_contentLength
T@"NSURL",C,N,V_contentURL
downloadID
T@"NSNumber",C,N,V_downloadID
T@"NSNumber",C,N,V_downloadState
T@"NSError",C,N,V_error
T@"NSNumber",C,N,V_progress
T@"NSNumber",C,N,V_timeRemaining
%@: Operation started
%@: Terminating with no account
%@: Failed to retrieve conditions: %@
%@: Terms and conditions are valid.
%@: Terms and conditions are empty.
%@: Terms and conditions are being copied.
v24@?0@"SSTermsAndConditions"8@"NSError"16
%@: Ending alert with acceptance: %@
%@: Server-side acceptance of [%lld] failed with error: %@
v20@?0B8@"NSError"12
terms-check
POST
accepted
%@: Disabling %lu power assertions before user interaction
ServiceTermsPageViewController
terms
%@: Could not display terms sheet
v16@?0@"SpringBoardAlertProxy"8
userAccepted
TB,R,N,GisUserAccepted
com.apple.itunesstored.download-queue
@"NSURL"16@?0@"SSURLBagContext"8
%@.%@
%@: Could not load URL bag: %@
%@: Finished loading download queue (%@, %@, %@)
%@: Importing keybag from response: %@
%@: Loading download queue (%@, %@, %@) with reason: %ld
unknown
%@: Writing download queue response to /tmp/downloadQueue-%@_%@_%@.plist
/tmp/downloadQueue-%@_%@_%@.plist
%llu
requestProperties
T@"SSURLRequestProperties",R
accountIdentifier
T@"NSNumber",&
needsAuthentication
requestIdentifier
hasBeenAuthedForBuy
backgroundUpdateProduct
buyProduct
p2-in-app-buy
paidRedownloadProduct
redownloadProduct
updateProduct
p2-client-authentication
caller
is-background
createsDownloads
createsJobs
creditDisplay
playback
serialNumber
newsEntitlements
set-auth-token
dsid
token
duAnonymousPings
originatingBundleID
product
com.apple.itunesstored.purchase
MCProfileConnection
%@: Retry purchase operation after dialog
%@: Retry after delayed goto
%@: Retry purchase operation after changed buy parameters
%@: Retry purchase with MD sync state
%@: Retry purchase operation after machine data action
com.apple.itunesstored.PurchaseOperation
tidContinue
%@: Changing buy parameters after auth dialog: %@
GENERIC_PURCHASE_ERROR
%@: Purchase failed with code %@: %@
%@: Purchase failed with retry dialog: %@
%@: Purchase: %@ failed with dialog and error: %@
[%@]: Keeping placeholder following touchID request for bundleID: %@
[%@]: removing failed placeholder for bundleID: %@
requirePasswordImmediately
%@: Forcing authentication for restriction
disableTouchID
application/x-apple-plist
Content-Type
X-Apple-Client-Address
isUpdateAll
generateBuyParams
icloud-backup-enabled
v32@?0@"NSString"8@"NSString"16^B24
%@: Performing machine-data action: %@
%@: Skipping confirmation dialog with buy parameters: %@
%@: Prompting user with buy confirmation
v24@?0@"SSVDialogResponse"8@"NSError"16
%@: User confirmed buy confirmation: %@
%@: User attempted Ask to Buy: %@
%@: User declined buy confirmation: %@
%@: Reset in-app token after buy confirm cancel: %@
%@: Issuing purchase request: %@
x-apple-jingle-correlation-key
%@: storeCorrelationID: %@
%@: Token registration failed due to missing DSID. Setting the bio state back to default
subDownload
sbDownload
%@: Using client auth for purchase bag key: %@
%@: Using server auth for purchase bag key: %@
displayedErrorDialog
TB,V_displayedErrorDialog
rawOutput
T@"NSDictionary",&,V_rawOutput
affiliateIdentifier
allowsBootstrapCellularData
TB,V_allowsBootstrapCellularData
bagType
Tq,V_bagType
buyParameters
T@"NSString",&,V_buyParameters
T@"NSData",&,V_clientAuditTokenData
clientIdentifierHeader
originalProductOwnerAccountDSID
T@"NSNumber",C
backgroundPurchase
TB,GisBackgroundPurchase
playbackRequest
TB,GisPlaybackRequest
moveToiOS
TB,R,GisMoveToiOS,V_moveToiOS
preauthenticated
TB,GisPreauthenticated,V_preauthenticated
requiresAuthentication
TB,V_requiresAuthentication
requiresSerialNumber
TB,V_requiresSerialNumber
shouldSendKeyBagSyncData
TB,V_shouldSendKeyBagSyncData
skipsConfirmationDialogs
TB,V_skipsConfirmationDialogs
T@"NSString",C,N,V_storeCorrelationID
urlBagKey
requestPerformanceMetrics
T@"ISURLRequestPerformance",R
URLResponse
T@"SSURLConnectionResponse",R
changedBuyParameters
T@"NSString",&,N,V_changedBuyParameters
dialog
T@"ISDialog",&,N,V_dialog
didPasswordAuthenticate
TB,N,V_didPasswordAuthenticate
delayedGotoRetryCount
Tq,N,V_delayedGotoRetryCount
machineDataRetryCount
Tq,N,V_machineDataRetryCount
machineDataSyncState
T@"NSString",C,N,V_machineDataSyncState
redirectURL
T@"NSURL",C,N,V_redirectURL
shouldRetryForDelayedGoto
TB,N,V_shouldRetryForDelayedGoto
shouldRetryForMachineData
TB,N,V_shouldRetryForMachineData
shouldRetryWithOriginalProductOwnerAccount
TB,N,V_shouldRetryWithOriginalProductOwnerAccount
%@: Blocks: %d, Ignores: (%@)
handlerIdentifier
disavowedSessionProperties
T@"NSSet",R
downloadPhasesToIgnore
T@"NSSet",C
sessionsNeedPowerAssertion
sessionsShouldBlockOtherDownloads
activityIdentifier
T@"NSString",C,N,V_activityIdentifier
T@"NSNumber",C,N,V_accountIdentifier
pollingDuration
Td,N,V_pollingDuration
pollingInterval
Td,N,V_pollingInterval
postIdentifier
Tq,N,V_postIdentifier
sourceApplicationIdentifier
T@"NSString",C,N,V_sourceApplicationIdentifier
postCreateTime
Td,N,V_postCreateTime
%@: [A: %lld, D: %lld, H: %lld, P: %@]
T@"NSString",R,C,N,V_clientIdentifier
Tq,R,N,V_handlerIdentifier
assetIdentifier
Tq,N,V_assetID
downloadIdentifier
Tq,N,V_downloadID
downloadPhase
T@"NSString",C,N,V_downloadPhase
duetBudget
T@"NSNumber",C,N,V_duetBudget
authenticationChallenge
T@"NSURLAuthenticationChallenge",&,N,V_authenticationChallenge
downloadHandle
T@"DownloadHandle",&,N,V_downloadHandle
mediaAssetIdentifier
assetBlockedReason
Tq,N,V_assetBlockedReason
downloadHandlerSession
T@"DownloadHandlerSession",C,N,V_downloadHandlerSession
mediaAssetInstallPath
T@"NSString",C,N,V_mediaAssetInstallPath
result
Tq,N,V_result
%@: Processing file: %@
v12@?0f8
%@: Failed with error: %@
mediaPath
sinfs
T@,R
mediaFileExtension
AVFileProcessor
AVFileProcessorAttribute_ChunkMD5Array
AVFileProcessorAttribute_FileMD5
AVFileProcessorAttribute_MD5ChunkSize
AVFileProcessorAttribute_NewFileExtension
AVFileProcessorAttribute_RentalPeriod
AVFileProcessorAttribute_RentalPlaybackPeriod
AVFileProcessorAttribute_RentalPlaybackStartDate
AVFileProcessorAttribute_RentalStartDate
AVFileProcessorAttribute_Sinfs
com.apple.itunesstored.RentalAdded
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iTunesStore_Sim/iTunesStore-1442.182/Daemon/CheckoutRentalKeysOperation.m
Must have sinfs
Must have account and rental key identifier
%@: Invalid primary sinf
%@: Could not get rental bag
%@: Could not get rental bag request
%@: Could not get DSID
%@: Could not get rental identifier
%@: Could not generate checkout request body
%@: Writing rental checkout body to /tmp/rentalBody.plist
/tmp/rentalBody.plist
%@: Received failure type: %@
%@: Succeeding because no rental bag data
%@: Could not process rental bag keys
%@: Writing rental checkout response to /tmp/rentalResponse.plist
/tmp/rentalResponse.plist
%@: Rental period ends in %.2f seconds at %@
%@: Playback not started, duration is %lu
%@: Rental playback period ends in %.2f seconds at %@
%@: Checking out rental keys
%@: Performing checkout attempt #%ld of %d
%@: Giving up after checkout failure
%@: Verified rental information
%@: Giving up after repeated failure
rentalKeyIdentifier
backgroundCheckout
TB,GisBackgroundCheckout,V_backgroundCheckout
shouldValidateRentalInfo
TB,N,V_shouldValidateRentalInfo
checkoutWithPlay
TB,N,GshouldCheckoutWithPlay,V_checkoutWithPlay
play
download-done
hw.model
device-diversity
rbsync
rental-bag
rental-id
rental-bag-response
rental-checkout
SELECT dsid FROM account WHERE apple_id = '%@'
v16@?0^{sqlite3_stmt=}8
Library
MusicLibrary
AccountCache.sqlitedb
delegate
T@"<BatterySaverWatcherDelegate>",R,W,V_delegate
FairPlayErrorDomain
playbackDuration
TI,N,V_playbackDuration
playbackStartTime
TI,N,V_playbackStartTime
rentalDuration
TI,N,V_rentalDuration
rentalStartTime
TI,N,V_rentalStartTime
SinfPropertyAccountIdentifier
SinfPropertyFairPlayKeyIdentifier
SinfPropertyRentalInformation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iTunesStore_Sim/iTunesStore-1442.182/Daemon/FairPlayUtility.m
Must have at least one sinf
%lld
iTunesMetadata.plist
%llx
download
B16@?0@"DownloadsExternalTransaction"8
auto_update_state
blocked_reason
can_cancel
can_pause
can_prioritize
audit_token_data
phase
did_restore_data
bundle_id
download_error
has_restore_data
is_restricted
is_server_finished
last_odr_action
restore_data_size
restore_state
store_queue_refresh_count
download_id
asset
client_id
client
download_state
effective_client_id
application_id
LEFT OUTER JOIN download_state ON download.pid = download_state.download_id
LEFT OUTER JOIN client ON download.client_id = client.client_id
LEFT OUTER JOIN application_id ON download.effective_client_id = application_id.effective_client_id
allAssetCookies
T@"NSArray",R,N
downloadKind
T@"NSString",R,N
itemIdentifier
TQ,R,N
ITunesSafeGUID
Media
Podcasts
Books
Purchases
airplay_content_type
artist_name
artwork_is_prerendered
artwork_template_name
is_automatic
download_state.auto_update_state
auto_update_time
beta_external_version_identifier
download_state.blocked_reason
bundle_version
download_state.can_cancel
cancel_url
download_state.can_pause
download_state.can_prioritize
client.audit_token_data
collection_artist_name
collection_group_count
collection_item_count
collection_name
composer_name
download_state.did_restore_data
diverted_job_id
download_state.phase
download_permalink
document_target_id
duet_transfer_type
duration_in_ms
application_id.bundle_id
enable_extensions
download_state.download_error
episode_id
episode_sort_id
genre_name
handler_id
has_messages_extension
download_state.has_restore_data
hls_playlist_url
index_in_collection
index_in_collection_group
is_compilation
is_diverted
is_explicit
is_hd
is_store_queued
is_private
is_purchase
is_redownload
is_rental
is_restore
download_state.is_restricted
is_sample
download_state.is_server_finished
is_device_based_vpp
is_from_store
is_shared
is_tv_template
kind
download_state.last_odr_action
launch_prohibited
library_id
loading_priority
long_description
long_season_description
messages_artwork_url
network_name
order_key
order_seed
override_audit_token_data
page_progression_direction
podcast_episode_guid
podcast_feed_url
podcast_type
policy_id
preferred_asset_flavor
priority
purchase_id
rate_limit
ref_app
ref_url
release_date
release_year
rental_id
download_state.restore_data_size
download_state.restore_state
season_number
series_name
short_description
cancel_if_duplicate
cancel_on_failure
software_type
store_account_name
store_account_id
store_artist_id
store_collection_id
store_cohort
store_composer_id
store_download_key
store_front_id
store_genre_id
store_item_id
store_match_status
store_preorder_id
store_publication_version
store_purchase_date
download_state.store_queue_refresh_count
store_redownload_parameters
store_redownload_status
store_saga_id
store_software_version_id
store_transaction_id
store_url
store_xid
suppress_error_dialogs
thumbnail_newsstand_binding_edge
thumbnail_newsstand_binding_type
thumbnail_url
timeout_interval
title
transaction_id
variant_id
(download.auto_update_time IS NOT NULL)
IFNULL(download_state.auto_update_state, 0)
IFNULL(download_state.blocked_reason, 0)
IFNULL(download_state.can_pause, 1)
IFNULL(download_state.can_cancel, 1)
IFNULL(download_state.can_prioritize, 1)
IFNULL(application_id.bundle_id, download.client_id)
IFNULL(download_state.phase, "SSDownloadPhaseWaiting")
IFNULL(download_state.has_restore_data, -1)
IFNULL(download_state.is_restricted, 0)
IFNULL(download_state.is_server_finished, 0)
IFNULL(download_state.restore_data_size, 0)
IFNULL(download_state.restore_state, 0)
IFNULL(download.store_item_id, 0)
Downloads
accountId
downloaderId
softwareVersionExternalIdentifier
familyId
itemId
purchaserId
dictionaryRepresentation
T@"NSDictionary",R,C,N
restoreDownloadItem
T@"RestoreDownloadItem",R,N
externalVersionIdentifier
T@"NSNumber",C,N,V_externalVersionIdentifier
T@"NSNumber",C,N,V_itemIdentifier
storeFrontIdentifier
T@"NSNumber",C,N,V_storeFrontIdentifier
vendorIdentifier
T@"NSString",C,N,V_vendorIdentifier
T@"NSString",C,N,V_accountIdentifier
downloaderIdentifier
T@"NSNumber",C,N,V_downloaderIdentifier
familyIdentifier
T@"NSNumber",C,N,V_familyIdentifier
purchaserIdentifier
T@"NSNumber",C,N,V_purchaserIdentifier
Tq,N,V_downloadIdentifier
Tq,N,V_mediaAssetIdentifier
automaticType
Tq,N,V_automaticType
bundleIdentifier
T@"NSString",&,N,V_bundleIdentifier
T@"NSString",&,N,V_kind
legacyClient
TB,N,GisLegacyClient,VlegacyClient
requiresDownloadHandler
TB,N,V_requiresDownloadHandler
transferBytesExpected
Tq,N,V_transferBytesExpected
transferBytesWritten
Tq,N,V_transferBytesWritten
transferProgressFraction
Td,N,V_transferProgressFraction
transferResumptionOffset
TQ,N,V_transferResumptionOffset
overallProgress
T@"SSOperationProgress",R,N
com.apple.itunestored.MicroPaymentQueue
%@: Checking queue for client: %@
%@: Failing %lu downloads
v24@?0@"NSNumber"8@"MicroPaymentDownload"16
%@: Finishing %lu downloads
%@: Deleting %lu downloads and checking %lu downloads after migrating properties
B16@?0@"DownloadsTransaction"8
downloadID=%lld
payment
offer-name
productIdentifier=%@
state
%@: Updating payment after unexpected purchase response: %@
state=%@ AND askPermissionRequestIdentifier=%@
%@: Could not update deferred payment: %@, error: %@
%@: Fail payment after request deny: %@
%@: Invalid status for requestID: %@
%@: Refresh %ld queues after payment approval
%@: Client disconnected: %@
%@: Could not load clients: %@
%@: Merging duplicate client %@ into client %@
%@: Found %lu existing clients
B24@?0Q8@"NSObject<OS_xpc_object>"16
downloadID=%@
%@: Starting payment: %@
array
T@"NSArray",R,V_array
MicroPaymentQueueAlive
MicroPaymentQueueCleanupClients
com.apple.itunesstored.MicroPaymentQueue
%@: Merged existing payment with response payment
%@: Merged in new payment from response
%@: Could not find payment to merge with existing payment
identifier
T@"NSString",&,D,N
lastQueueCheckDate
T@"NSDate",&,D,N
payments
T@"NSMutableSet",&,D,N
sandboxed
T@"NSNumber",&,D,N
bundleVersion
storeIdentifier
storeVersion
usesIdentityAttributes
hidesConfirmationDialogs
ignoresInAppPurchaseRestriction
receiptDirectoryPath
requiresAuthenticationForPayment
didChange
TB,R,N
addedPayments
T@"NSArray",C,N,V_addedPayments
changedPayments
T@"NSArray",C,N,V_changedPayments
T@"NSOrderedSet",C,N,V_removedDownloadIDs
removedPayments
T@"NSArray",C,N,V_removedPayments
MicroPaymentClient
transaction-id
transactionIdentifier
ready
TB,R,N,GisReady
transientFailed
TB,N,GisTransientFailed,V_transientFailed
matchingIdentifier
actionParams
applicationUsername
askPermissionRequestIdentifier
T@"MicroPaymentClient",&,D,N
T@"NSSet",&,D,N
errorData
T@"NSData",&,D,N
insertDate
originalPurchaseDate
originalTransactionIdentifier
partnerIdentifier
partnerTransactionIdentifier
productIdentifier
purchaseDate
quantity
receiptData
requestData
simulatesAskToBuyInSandbox
supportsDeferredPayment
userDSID
MicroPayment
receipt-data
request-data
purchase-date
original-purchase-date
original-transaction-id
assetList
appDsid
partnerId
partnerTransactionId
offerName
storeCohort
%@: Could not find application for identifier: %@
?=&+
&%@=%@
&beta=true
&requiresAskToBuy=true
%@: Could not generate buy parameters
%@: Could not parse response
T@"NSData",&
clientIdentity
T@"StoreKitClientIdentity",&
T@"NSData",C
response
T@"MicroPaymentQueueResponse",R
com.apple.itunesstored.MediaContentTasteUpdateController.accessQueue
com.apple.itunesstored.MediaContentTasteUpdateController.operationQueue
[%@]Kick off content taste refresh operation, invalidate local cache: %d
[%@]updating expiration time from %@ to %@.
[%@]Account store changed.
com.apple.itunesstored.media-content-taste-update
MediaContentTasteAccountUniqueID
_transactionIdentifier
T@"NSError",R,N
originalTransaction
T@"SKPaymentTransaction",R,N
T@"SKPayment",R,N
transactionDate
T@"NSDate",R,N
transactionReceipt
T@"NSData",R,N
transactionState
Tq,R,N
[%@] Deciding to append receipt: [Current: %ld bytes] [New: %ld bytes]
requestType
Tq,R
appReceipt
T@"NSArray",C
serverPaymentCount
shouldTriggerQueueCheck
app-list
[start----abcdefghijklmnopqrstuvwxyz----done]
data
_localeIdentifier
T@"NSString",C,N,G_localeIdentifier,S_setLocaleIdentifier:
localizedDescription
localizedTitle
price
T@"NSDecimalNumber",R,N
priceLocale
T@"NSLocale",R,N
downloadable
TB,R,N,GisDownloadable
downloadContentLengths
downloadContentVersion
%@: Loading match status for account: %@
isMatchServiceEnabled
cloud-welcome
isMatchSubscriber
%@: Could not load match status: %@
%@: Loaded match status: %ld for account: %@
getMatchStatusSrv
matchStatus
%@: Finishing payment: %@
%@: Failed with non-dictionary response
%@: Failed with failureType: %@
T@"StoreKitClientIdentity",C
transactionId
p2-in-app-transaction-done
application_workspace_state
[%@] Ignoring complete notification for %@ because appstored is enabled
[%@] Ignoring incomplete notification for %lld because appstored is enabled: %@
[%@] Requesting [%@] Notification: [%@]
expected_phase
retry_count
time_updated
Could not save modal context: %p: %@
-- %ld, %@, %@, %@
http://?action=account
&dsid=%@
&continuation=%@
com.apple.itunesstored.SpringBoardAlertProxy.delegate
com.apple.itunesstored.SpringBoardAlertProxy
v24@?0@"NSObject<OS_xpc_object>"8@"NSObject<OS_xpc_object>"16
T@"<SpringBoardAlertProxyDelegate>",W
XPCEndpoint
T@"NSObject<OS_xpc_object>",R,V_inputEndpoint
%@: Server-driven authentication failed with error: %@
redirectActionParameters
T@"NSString",C,V_redirectActionParameters
applicationHandle
T@"ApplicationHandle",R,N,V_applicationHandle
blocksAppInstallation
[%@] error fetching attributes of manifest file at path %@ %@
[%@] keeping current manfiest %@
[%@] manifest file is too recent to be removed %@
[%@] manifest file at url is too new to remove %@ %@
[%@] error removing manifest file at url %@ %@
[%@] successfuly removed manifest file at url %@
[%@] error fetching asset file urls from asset directory %@ %@
[%@] error fetching attributes of asset file at path %@ %@
[%@] keeping asset file at url %@
[%@] asset file at url is too new to remove %@ %@
[%@] error removing asset file at url %@ %@
[%@] successfuly removed asset file at url %@
v16@?0@"NSObject<OS_xpc_object>"8
StoreKit invalid receipt
RECEIPT_REVOKED_TITLE_%@
RECEIPT_REVOKED_FALLBACK_TITLE
RECEIPT_REVOKED_MESSAGE_%@
RECEIPT_REVOKED_FALLBACK_MESSAGE
RECEIPT_CANCEL_BUTTON
RECEIPT_OK_BUTTON
itms-appss://?action=software
T@"NSString",&,N
%@: No app for ID: %@
%@: Products load failed/cancelled: %@
%@: Loaded products for %lu identifiers
%@: Couldn't load bag to get batch size
%@: Loading products for %lu identifiers with batch size %ld
productIdentifiers
p2-product-offers-batch-limit
appAdamId
icuLocale
offerNames
sfId
appExtVrsId
p2-product-offers
sandboxReceipt
receipt
[%@]: Updating receipt for: %@
bundle-id
version-id
want-expired
want-revoked
want-vpp
revoked
adam-id
software-version-external-identifier
resultBlock
com.apple.DirectUploadSessionController
%@: Adding %ld upload requests
%@: Preparation failed for upload: %@, error: %@
v32@?0@"NSURLSessionConfiguration"8@"NSURLRequest"16@"NSError"24
%@: Canceling task: %lu, to cancel upload: %@
v24@?0@"NSURLSessionTask"8@"NSNumber"16
%@: Canceling task: %lu, to pause upload: %@
%@: Fail upload: %@, after HTTP error: %@
%@: Task did stop for upload: %@
%@: Upload: %@ failed in session: %@ with error: %@
%@: Upload: %@ finished in session: %@
v32@?0@"DirectUploadProgress"8Q16^B24
%@: Starting task: %lu, for upload: %@, session: %@
v32@?0@"NSArray"8@"NSArray"16@"NSArray"24
%@: Upload %lld did update progress: %.2f
T@"<DirectUploadSessionDelegate>",W,N,V_delegate
numberOfTasks
com.apple.itunesstored.upload.stop-reason
com.apple.itunesstored.upload.id
com.apple.itunesstored.upload.response
com.apple.itunesstored.upload.error
%@: Attempting claim before authorization for contentID: %@
v28@?0B8@"NSArray"12@"NSError"20
%@: Could not claim apps: %@
%@: Running authorize operation for account ID: %@, family account ID: %@
claimedBundleIdentifiers
T@"NSArray",R,V_claimedBundleIdentifiers
expectedIdentifiers
T@"NSArray",C,N,V_expectedIdentifiers
invalidIdentifiers
T@"NSArray",R,N,V_invalidIdentifiers
products
T@"NSArray",R,N,V_products
available-subproducts
DirectUploadController
com.apple.itunesstored.DirectUploadController
v32@?0@"DirectUploadEntity"8Q16^B24
%@: Inserted media social post: %lld, with %ld uploads
v24@?0@"SSVDirectUpload"8^B16
%@: Failure count is now: %ld for upload: %lld
%@: Resuming uploads after authentication
%@: Canceling uploads after canceled authentication
%@: Deleting post after error dialog: %@
%@: Deleting upload after error dialog: %@
%@: Retry post after error dialog: %@
%@: Retrying %ld uploads after error dialog
%@: Disconnect client: %@
%@: No reply to send XPC access denied message
%@: Deleting upload: %@, for client: %@
%@: Deleting post: %lld, for client: %@
%@: Removing pending upload with pid: %lld.
%@: Keeping pending upload with pid: %lld.
%@: %lu pending upload(s) removed.
%@: Adding poll request pid: %lld.
v16@?0@"MediaSocialPostResponse"8
%@: Post failed due to polling timeout, removing from database: %lld
%@: Post succeeded, removing from database: %lld
%@: Failed to process post: %lld is now due to unrecoverable error: %@
%@: Failed to process post: %lld is now due to a recoverable error: %@
%@: Failure count for post: %lld is now: %ld, after error: %@
%@: Pausing upload: %lld, for client: %@
com.apple.itunesstored.DirectUploadController.post
%@: Invalid register message, no endpoint
%@: Registered observer client: %@
%@: Reset upload: %lld, for client: %@
%@: Reset upload: %lld
%@: Retrying failed media social post: %lld
com.apple.Music
q24@?0@"Bulletin"8@"Bulletin"16
com.apple.storeservices
BANNER_MESSAGE_MULTI_TYPE_%@
MediaSocial
BANNER_MESSAGE_SONG_ONE
BANNER_MESSAGE_SONGS_PLURAL_%@
BANNER_MESSAGE_IMAGE_ONE
BANNER_MESSAGE_IMAGES_PLURAL_%@
BANNER_MESSAGE_SOUND_BITE_ONE
BANNER_MESSAGE_SOUND_BITES_PLURAL_%@
BANNER_MESSAGE_VIDEO_ONE
BANNER_MESSAGE_VIDEOS_PLURAL_%@
BANNER_TITLE
%@: Received invalid product dictionary
contentSize
Tq,N,V_contentSize
T@"NSString",C,N,V_contentVersion
hosted
TB,N,GisHosted,V_hosted
localeIdentifier
T@"NSString",C,N,V_localeIdentifier
T@"NSString",C,N,V_localizedDescription
T@"NSString",C,N,V_localizedTitle
T@"NSNumber",C,N,V_price
T@"NSString",C,N,V_productIdentifier
icu-locale
is-hosted
version
STDQ
size
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iTunesStore_Sim/iTunesStore-1442.182/Daemon/CheckDownloadQueueOperation.m
Must have a request
%@: Running request: %@
%@: Request %@ failed: %@
%@: Found %ld downloads for request: %@
downloadQueueRequest
T@"StoreDownloadQueueRequest",R
numberOfAvailableDownloads
download-queue-item-count
v40@?0@"SSVMediaSocialPostAttachment"8@"NSString"16Q24^B32
v32@?0@"SSVMediaSocialPostAttachment"8Q16^B24
v32@?0@"SSVMediaSocialPostItem"8Q16^B24
v32@?0@"SSVMediaSocialPostExternalDestination"8Q16^B24
(%@.%@ != 0) ASC
post
bulletin
T@"MediaSocialBulletin",R,N
contentItems
externalServiceDestinations
readyToSend
TB,R,N,GisReadyToSend
statusPollRequest
T@"MediaSocialStatusPollRequest",R,C,N
uploadedAttachments
account_id
activity_id
author_id
author_type
creation_time
failure_count
is_attributed
is_failed
poll_count
poll_interval
poll_duration
message
source_app
bvrs
p2-in-app-regrant-purchase-history
%@: Could not load software map: %@
%@: Could not find app for identifier: %@
%@: Fetching range [%@, %@]
%@: Range [%@, %@] failed with error: %@
[%@] Deciding to write receipt: %d bytes -- %@
paymentBatchBlock
partialFailure
TB,R,GisPartialFailure
[ApplicationWorkspace]: No placeholder with progress to cancel, skipping uninstall: %@
[ApplicationWorkspace]: Cancelled progress for %@ progress: %@
[ApplicationWorkspace]: Could not find progress to cancel for %@ progress: %@
RingtonePurchase
TLToneManager
CNContactStore
CNContactCallAlertKey
CNContactTextAlertKey
CNActivityAlert
CNSaveRequest
%@: Assigning tone (%@) to contact (%@).
%@: Failed to assign tone to contact. %@
adamID
assigneeToneStyle
assignToContactID
assignToPersonID
shouldMakeDefault
shouldMakeDefaultTextTone
transactionID
itunes:%@
transactionID != %@
adamID = %llu AND transactionID = %@
UpdateAssetsOperationErrorDomain
%@: Error downloading manifest from URL %@: %@
%@: Error parsing manifest from URL %@: %@
%@: Manifest at URL has no version %@: %@
%@: Version of Manifest at URL is older than cached version. URL %@ fetched manifest version %@ cached manifest version %@
%@: Version of Manifest at URL is older than bundled version. URL %@ fetched manifest version %@ bundled manifest version %@
%@: Error creating assets directory %@: %@
%@: Error creating manifests directory %@: %@
%@: Error copying bundled asset %@. manifest URL %@ manifest version %@ bundled asset version %@ bundled asset file URL %@ asset version %@ asset file URL %@: %@
%@: Error retriving asset %@. manifest URL %@ manifest version %@ asset URL %@ asset version %@ asset file URL %@: %@
%@: Error writing manifest to file URL %@: %@
%@: Invalid asset on manifest %@ %@:  %@
%@: Error creating symbolic link for current manifest %@ -> %@:  %@
[%@]: Unable to load bundled manifest data at url %@
[%@]: Error parsing bundled manifest %@: %@
[%@]: Unknown error parsing bundled manifest %@
[%@]: Bundled manifest at path has a no version %@
ASDJobActivity
com.apple.itunesstored.%@.%p
%@: Cancel operation: %@
%@: Disconnect operation: %@
operationQueue
T@"ISOperationQueue",&
com.apple.itunesstored.RequestQueue.client
PROMPT_REASON_GENERIC
Mesa
PROMPT_REASON_NEW_FINGERS_FORMAT_%@
PROMPT_REASON_NEW_FINGERS_ANONYMOUS
%@: Authenticating to opt-in to biometrics
%@: UpdateTouchIDSettings request completed with status: %@
%@: UpdateTouchIDSettings request failed with status: %@, error: %@
v24@?0q8@"NSError"16
%@: Biometrics enabled and cached for DSID: %@
authToken
T@"NSData",C,N
requiresStoreAuthentication
%@: Restoring mid based download: %lld bundleIdentifier: %@
Restored safe harbor data
%@: Restoring MID hard failed with state: %ld download: %lld bundleIdentifier: %@
%@: Restoring data done with state: %ld download: %lld bundleIdentifier: %@
%@: Restoring data (attempt %ld) for software download: %lld / %@
%@: Restoring data with priority = %ld
%@: Skipping data restore after fatal error: %lld / %@
%@: Giving up after %d attempts for download: %lld / %@
%@: Cancelled after %ld attempts for download: %lld / %@
%@: Waiting a bit before retrying after error: %lld / %@
%@: Cannot load manifest for unentitled client: %@
%@: Cannot authorize for unentitled client: %@
%@: Cannot checkin rental for unentitled client: %@
%@: Cannot get purchase history for unentitled client: %@
%@: Could get family circle for unentitled client
%@: Cannot get play info for unentitled client: %@
%@: Cannot get software library for unentitled client
%@: Cannot invalidate URL bag for unentitled client: %@
%@: Could discover if there are demoted applications for unentitled client
%@: Cannot check if application is installed for unentitled client: %@
%@: Cannot check if application is hidden for unentitled client: %@
%@: Cannot check if applications are playable for unentitled client: %@
%@: Cannot request keybag for unentitled client: %@
%@: Cannot lookup for unentitled client: %@
%@: Cannot personalize for unentitled client: %@
%@: Rejecting push notification request from unentitled client: %@
%@: Cannot redeem codes for unentitled client: %@
%@: Could not do ATB for unentitled client
%@: Could not set storefront for unentitled client
%@: Cannot show dialog for unentitled client: %@
%@: Cannot show prompt for unentitled client
%@: Cannot set software properties for unentitled client
%@: Cannot unhide application for unentitled client
v24@?0@"LSBundleProxy"8^B16
[%@]: Attempting to update %ld MID apps
[%@]: MID refresh update requesting sinf update for bundleID: %@
[%@]: Managed application MID update refresh complete for bundleID: %@ result: %d
v36@?0B8@"NSDictionary"12q20@"NSError"28
[%@]: MID update triggered migration of %ld apps
%@: Invalid url request
%@: Running for manifest format: %ld
%@: Finished with %lu valid downloads, %lu invalid downloads
%@: Could not parse manifest data
%@: User cancelled manifest confirmation
%@: Processing %lu downloads from an external manifest request
%@: Added download: %@ / %@
%@: Request failed with error: %@
[ERROR]: Cannot load non-https manifest URL: %@
external
CONFIRM_MANIFEST_DOWNLOADS_%@_%ld
CONFIRM_MANIFEST_DOWNLOAD_SPECIFIC_%@_%@
CONFIRM_MANIFEST_DOWNLOAD_GENERIC_%@
CONFIRM_MANIFEST_CANCEL
CONFIRM_MANIFEST_INSTALL
Could not load download manifest with underlying error: %@
DOWNLOAD_MANIFEST_SSL_ERROR_%@
DOWNLOAD_MANIFEST_ERROR_FORMAT_%@
manifestFormat
shouldHideUserPrompts
URLRequest
T@"NSURLRequest",C
manifest
T@"ExternalDownloadManifest",R
manifestResponse
T@"SSDownloadManifestResponse",R
v32@?0@"SSMemoryEntity"8Q16^B24
DownloaderID
FamilyID
PurchaserID
sourceApp
ITunesMetadataDestinationPath
storeMetadata
T@"StoreDownload",&,N,V_storeMetadata
mediaAsset
T@"FinishDownloadAssetMemoryEntity",R,N,V_mediaAsset
secondaryAssets
T@"NSArray",R,N,V_secondaryAssets
artistName
artworkTemplateName
collectionName
deviceBasedVPP
TB,R,N,GisDeviceBasedVPP
documentTargetIdentifier
downloadPermalink
durationInMilliseconds
T@"NSNumber",R,N
genreName
hasRestoreData
libraryItemIdentifier
T@,R,N
podcastDownload
TB,R,N,GisPodcastDownload
rentalDownload
TB,R,N,GisRentalDownload
restoreDownload
TB,R,N,GisRestoreDownload
restoreState
sampleDownload
TB,R,N,GisSampleDownload
storeAccountIdentifier
storeAccountName
storeCollectionIdentifier
sharedDownload
TB,R,N,GisSharedDownload
storeDownload
TB,R,N,GisStoreDownload
storeItemIdentifier
storePublicationVersion
storeSagaIdentifier
storeTransactionIdentifier
storeXID
tvTemplate
TB,R,N,GisTvTemplate
com.apple.itunesstored.DaemonPlayActivityController.flush
com.apple.itunesstored.DaemonPlayActivityController.accessQueue
com.apple.itunesstored.DaemonPlayActivityController.calloutQueue
com.apple.itunesstored.DaemonPlayActivityController.flushOperationQueue
v32@?0@"NSArray"8Q16@"NSError"24
v20@?0B8@?<v@?@"NSObject<OS_xpc_object>">12
v16@?0@"NSError"8
%@: Rejecting message from unentitled client
[DaemonPlayActivityController] Reloading Jingle flush timer with started: %@ flushing transaction count: %td
[DaemonPlayActivityController] Has pending play events for Jingle: %@
[DaemonPlayActivityController] Setting Jingle flush timer enabled: %@
User
%@: Skipping download and install of: %@
invalidDownloads
validDownloads
metadata
bundle-identifier
%@: Fixing file permissions for %@
%@: Could not get sub-paths of %@: %@
%@: Could not stat %@: %s
%@: Could not set file attributes for file: %@, error: %@
extractCPIO
extractPKZip
%@: Extracting %s to %s
%@: BOMCopier failed with error: %d
destinationFilePath
T@"NSString",&,V_destinationFilePath
fileAttributes
T@"NSDictionary",C,V_fileAttributes
sourceFilePath
T@"NSString",&,V_sourceFilePath
sourceFileType
Ti,V_sourceFileType
%@: Fatal error: %s
%@: Fatal file error: %d: %s
%@: File conflict error: %s
%@: File error: %d: %s
%@: Checking eligibility for %ld demoted apps
%@: Fallback appleID from is %@
%@: Fallback accountID is %@
%@: Could not restore ineligible app: %@, error: %@
%@: Found %ld eligible restore item(s) for %ld account(s)
%@: Running operation for %ld items, account: %@
%@: Restore for account: %@, failed with error: %@
v32@?0@"NSNumber"8@"NSArray"16^B24
v32@?0@"StoreDownload"8Q16^B24
bundleID
%@: Received zero downloads with error: %@, for apps: %@
%@: No download for app: %@, error: %@
%@: Added download: %lld for app: %@
appleId
com.apple.itunes.DemotedApplicationsRestoredNotification
%@: Can't perform request with no accountID
push-notification-types
remove-push-notification-type-url
add-push-notification-type-url
%@: Unknown request type: %ld
%@: Can't perform request with no URL
%@: Waiting for token register for environment: %@, URL: %@
%@: Performing push notification request: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iTunesStore_Sim/iTunesStore-1442.182/Daemon/FairPlayDecryptFileOperation.m
Must have a path and DPInfo
%@: Could not begin decrypt
%@: Running decrypt %@
%@: Decrypt failed [%@]
%@: Failed with reason: %@
DRMFree
TB,R,GisDRMFree
T@"NSArray",R,V_sinfs
pinfsArray
T@"SinfsArray",R
sinfsArray
dpInfo
pinf
sinf
sinf2
%@: Could not load software map
p2-in-app-download-queue-check-interval
%@: Throttling queue check for client: %@
%@: Running %@ request: %@
%@: Server claims %@ items for %@
queueItemCount
Tq,V_queueItemCount
T@"NSDate",&,V_lastQueueCheckDate
request
T@"MicroPaymentQueueRequest",C,V_request
URLBagKey
T@"NSString",&,V_urlBagKey
%@: (%@, user: %@, range: [%@,%@])
URLBagType
usesSoftwareMap
TB,R
rangeEndIdentifier
rangeStartIdentifier
p2-in-app-check-download-queue
p2-in-app-pending-transactions
p2-in-app-check-recurring-download-queue
p2-in-app-recurring-transactions
%@: Fetched %lu total payments
paymentsResponse
T@"MicroPaymentQueueResponse",&,V_paymentsResponse
T@"NSDate",C
Tq,V_reason
userDSIDs
T@"NSArray",C,V_userDSIDs
%@: Received invalid response
%@: Fetched %lu payments for %@
T@"MicroPaymentQueueResponse",&,V_response
expectedCount
Tq,V_expectedCount
queueCountURLBagKey
T@"NSString",&,V_queueCountURLBagKey
queuePaymentsURLBagKey
T@"NSString",&,V_queuePaymentsURLBagKey
kTonePurchasedKey
kTonePIDKey
kToneGUIDKey
kToneAlbumKey
kToneArtistKey
kToneGenreKey
kToneTitleKey
kToneDurationKey
kToneMediaKindKey
%@: Could not update ringtones plist
%@: Updated ringtones plist for "%@"
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iTunesStore_Sim/iTunesStore-1442.182/Daemon/PersistentStore.m
Must provide a configuration
itunesstored.store-context.%d
itunesstored.store-count.%d
%@: Checking integrity with cookie: %@
%@: Found integrity cookie, reloading store coordinator
%@: Could not load old model for migration
%@: Could not create inferred mapping model: %@
migrated
%@: Performing lightweight migration for %@
%@: Could not migrate: %@
%@: Could not move migrated store: %@
%@: Destroy persistent store: %@
%@: Moving %@ to %@
%@: Could not load model
%@: Could not create directory for file: %@
%@: Loading persistent store: %@
%@: Detected incompatible model, attempting migration
%@: Could not add persistent store: %@
%@: Loading model: %@
%@: Could not load model: %@
integrity_check
NSStoreModelVersionHashes
configuration
T@"PersistentStoreConfiguration",R
databaseFileURL
T@"NSURL",R
modelFileURL
itunesstored_private.sqlitedb
itunesstored_private
itunesstored_private.2.0
itunesstored_private.momd
itunesstored2.sqlitedb
itunesstored
itunesstored.2.0
itunesstored.3.0
itunesstored.4.0
itunesstored.5
itunesstored.6
itunesstored.7
itunesstored.7.1
itunesstored.8
itunesstored.8.1
itunesstored.momd
cookie
databaseFileName
T@"NSString",&,N,V_databaseFileName
integrityCookieFileName
legacyModelVersionIdentifiers
T@"NSArray",C,N,V_legacyModelVersionIdentifiers
modelFileName
T@"NSString",&,N,V_modelFileName
storeType
Ti,N,V_storeType
DemoAppleID
DemoDSPersonID
com.apple.itunesstored.token
com.apple.itunesstored.keychain
%@: Fetching subscription entitlements from the server.
fsEntitlementsSrv
status
errorNumber
errorMessage
entitlements
T@"NSString",C,V_clientIdentifier
ignoreCaches
TB,V_ignoreCaches
subscriptionEntitlementsBlock
T@?,C,V_subscriptionEntitlementsBlock
SZExtractor
v20@?0@"NSError"8B16
SZExtractorErrorDomain
v24@?0Q8@"NSError"16
%@: Can't calculate usage if no path given
%@: Failed to open directory %@: %s
%@: getattrlistbulk on entry %llu in %@ returned error %s
%@: Got error %s while processing entry %llu in %@
%@: Failed to get name for directory item %llu in %@; not counting its children
%@: Failed to create path to child directory by appending "%s" to %@
%@: Skipping empty directory at %@/%s
%@: Skipping hardlinked file at %@/%s
%@: Had blank field, trying again
Password
%@: Using password from user default
%@: User canceled sign-in dialog
%@: Prompt for credentials using CFUserNotification
%@: Creating new account for appleID: %@ [Type: %@]
%@: Could not create new account: %@
%@: Created new account for appleID: %@
%@: Credential prompt rejected
%@: Credential prompt failed: %ld
%@: Credentials renewed successfully
%@: User renewed credentials: [Password empty: %d] [Account Name: %@]
%@: Prompt for credentials using SpringBoard plugin
USE_EXISTING_ACCOUNT
CANCEL
CREATE_NEW_ACCOUNT
SIGN_IN
SIGN_IN_WITH_REASON
ENTER_PASSWORD
PASSWORD
MCFeatureAccountModificationAllowed
%@: Deny account creation while restricted
%@: Prompting user for no account
%@: User chose to use existing account
%@: User chose to create new account
%@: User canceled no account prompt
USERNAME
T@"SSAuthenticationContext",R
attemptNumber
reasonDescriptionFormat
signInResponse
T@"SignInResponse",R
signInResponseType
Tq,N,V_responseType
altDSID
T@"NSString",C,N,V_altDSID
password
T@"NSString",C,N,V_password
singleSignOnCredential
T@"ACAccountCredential",&,N,V_singleSignOnCredential
userName
T@"NSString",C,N,V_userName
com.apple.itunesstored.lock.signin
authenticateAccount
accountKind
attempt
createSession
passwordSettings
authenticateSrv
metricsAuthenticationAttempts
%@: Authenticating with context: %@
%@: Using initial password for first attempt
%@: Skipping suppressed auth dialog
%@: Prompting for bio auth
DeviceClassNumber
PROMPT_REASON_INVALID_REBOOT_IPAD
PROMPT_REASON_INVALID_REBOOT_IPOD
PROMPT_REASON_INVALID_REBOOT_IPHONE
PROMPT_REASON_INVALID_FINGER
%@: Setting storefront: %@ after authenticate response for account: %@
mtTopic
buyParams
****
%@: Skipping bio auth, not enabled
%@: Skipping bio auth, token unavailable: %ld
%@: Received responseType: %ld, failureType: %@ / %@
CANNOT_LOGIN_TITLE
%@: Writing authentication response to /tmp/authenticate.plist
/tmp/authenticate.plist
m-allowed
%@: Prompting for biometic match for client: %@
v24@?0@"DaemonBiometricMatch"8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
%@: Sending credentials to server
%@: Auto-enable TouchID after repeat account sign-in
%@: Biometrics state was not enabled
%@: SEP has no DSID registered. Setting the bio state back to default
%@: Last registered account ID doesn't match active account. Setting the bio state back to default
%@: Auto-enable mesa after repeat account sign-in
%@: Prompt for bio opt-in
authenticationResponse
T@"SSAuthenticationResponse",R
biometricToken
didFallbackToPassword
TB,R,V_didFallbackToPassword
willBeginProcessingAuthenticationResponseHandler
BYSetupAssistantNeedsToRun
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
authenticate
targetId
responseTime
invalidCredentials
maxNumberOfAttemptsReached
badServerResponse
serverDialog
%@: Server dialog authentication request with account: %@ isManaged: %d
%@: Client authentication request for account: %@ for client: %@ isManaged: %d
%@: Token is expired (type: %ld)
%@: Skipping auth, but no account
%@: Already authenticated, skipping operation for account: %@
%@: Triggering claim after active user authentication
com.apple.itunesstored.auth.%@
%@: Authenticated using biometrics for account: %@
%@: Identifier %@ does not match what was requested (%@)
%@: Could not create account from response
%@: Authenticated account: %@
%@: No Credential for authenticated account: %@
AUTH_FAILED
RETRY
%@: Running authenticate attempt %ld
%@: Authentication failed, won't retry
%@: Server presented dialog, won't retry
%@: Prompting for retry after error
%@: Prompting for retry after invalid credentials
authenticateResponse
T@"SSAuthenticateResponse",R
%@: Could not generate request body: %@
%@: Fetching play info
%@: Could not get key identifier: %@
%@: Could not get DSID: %@
%@: Received failure status code: %@
playInfoContext
T@"SSPlayInfoRequestContext",R
playInfoResponse
T@"SSPlayInfoResponse",R
get-play-info
content-id
rental-ids
key-ids
subPlayType
player-guid
play-info
PASSCODE_TITLE
v32@?0q8@"NSData"16@"NSError"24
PASSCODE_INCORRECT
%@: Timeout bio opt-in
BIO_OPT_IN_EXPLANATION
BIO_OPT_IN_NOT_NOW
BIO_OPT_IN_OK
refetch
%@: Importing %lu keybag bytes
%@: Failing authorization: could not get kbsync
X-FM-Dsid
%@: Missing account for authorize
%@: Needs authentication for account: %@ token error: %@
%@: Failing silent request needing authentication for account: %@
%@: Performing authentication for authorization for account
%@: Authorizing with token: %@, authentication: %d
%@: Could not encode plist: %@
familyMemberAccountIdentifier
authorizationToken
T@,C
keybagPath
shouldAddKeysToKeyBag
shouldPromptForCredentials
authorizeMachine
com.apple.itunesstore.PushNotificationController
push-notifications
environment
com.apple.itunesstored.PushNotificationController
com.apple.itunesstored.PushNotificationController.notify
%@: Starting with enabled state: %ld
UserAssignedDeviceName
v24@?0^{__CFString=}8^{__CFDictionary=}16
APNS_Sounds
%@: Could not post client notification, no client: %@
%@: Posting notification to client: %@
%@: Could not launch client application: %@
v16@?0@"XPCClient"8
%@: Register client: %@
%@: Received unregister for unknown client: %@
%@: Unregister client: %@
%@: Environment token changed: %@
%@: Received push notification: %@: %@
%@: Ignoring push notification while disabled
%@: Ignoring push notification for inactive account: %@
%@: Ignoring push notification for unregistered client: %@
%@: The device's name changed. Sending the new name to the server.
clientIdentifier=%@
%@: Could not fetch clients: %@
%@: Deleting environment: %@
%@: Destroying connection for %@
environmentName = %@
%@: Could not fetch environments: %@
%@: Firing %ld register blocks
%@: Reloading APS connections
%@: Could not fetch environment entities: %@
%@: Reloading APS connections for %lu environments
%@: Creating connection for environment: %@
com.apple.itunesstored.aps
com.apple.itunesstored.aps.dev
client=%@
%@: Client has %ld pending notifications: %@
(tokenData != nil) AND (lastAccountIdentifier != %@)
%@: Could not fetch environments to post: %@
%@: Posting %lu environment tokens
%@: Environment is now %@
environmentName != %@
%@: Adding APS client for itunesstored
%@: Removing APS client for itunesstored
%@: Push enabledness changed: %ld
%@: Posted token for %@ for account %@
block
T@?,C,N,V_block
environmentName
T@"NSString",C,N,V_environmentName
PushNotificationClient
T@"NSString",C,D,N
notifications
T@"NSArray",C,D,N
com.apple.itunesstored.WatchMetricsController
com.apple.itunesstored.watch-metrics-publish
v24@?0@"NSString"8@"NSObject<OS_xpc_object>"16
[%@] Setting task observer: %@
[%@] Insert Watch Metrics Event received through XPC: requested by [%@]
adamId
[%@] Ignoring request to run report - already running
AllowAutoDownloadOnCellular
LastWatchMetricsTime
[%@] Not scheduling because report is running
[%@] Connection refused because entitlements are missing
PushNotification
T@"PushNotificationClient",&,D,N
userInfo
T@"NSData",C,D,N
%@: Sound file expires in %.2f seconds
%@: Downloading sound file %@ to %@
%@: Cache sound file expiring in %.2f seconds
%@: Loading %lu sound files
%@: Removing %lu dead sound files
com.apple.itunesstored.APNS_Sounds_Cache
sound-files
name
PushNotificationEnvironment
lastAccountIdentifier
tokenData
%@: Environment name mismatch, skipping token POST
%@: No URL for %@
%@: No token to push
%@: Posting APS token for %@
register-success
device-name-data
serial-number
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iTunesStore_Sim/iTunesStore-1442.182/Daemon/PushNotificationDisplayOperation.m
Must provide user info
%@: Ignoring notification: no matching client: %@
%@: Ignoring notification: no handler for URL: %@
%@: Ignoring notification: invalid client ID
%@: Display notification with enabled types: %@ => %ld
com.apple.AppStore
com.apple.iBooks
com.apple.MobileStore
ITUNES_STORE
v16@?0Q8
com.apple.itunesstored.PlaybackLeaseDidEnd
%@: Finish delayed goto for identifier: %@
v28@?0@"SSVSubscriptionStatus"8B16@"NSError"20
%@: Set account credits: "%@", for account: %@
notificationUserInfo
T@"NSDictionary",R
requiresClientIdentifier
BBNotificationBehaviorBeginGeneratingActiveOverrideTypeChangeNotifications
BBNotificationBehaviorEndGeneratingActiveOverrideTypeChangeNotifications
BBNotificationBehaviorCurrentlyActiveOverrideTypes
default
AudioServicesCreateSystemSoundIDWithPath
AudioServicesPlayAlertSound
AudioServicesPlaySystemSound
TB,N,V_allowsBootstrapCellularData
T@"NSString",C,N,V_bundleIdentifier
T@"NSString",C,N,V_bundleVersion
environmentType
Tq,N,V_environmentType
TB,N,V_hidesConfirmationDialogs
TB,N,V_ignoresInAppPurchaseRestriction
T@"NSString",C,N,V_receiptDirectoryPath
TB,N,V_requiresAuthenticationForPayment
storeExternalVersion
T@"NSNumber",C,N,V_storeExternalVersion
T@"NSNumber",C,N,V_storeItemIdentifier
automatic-downloads2
automatic-downloads
discovery-prompt
configurations
media-types
download-time-limit
downloads-url
register-media-types
enabled-media-types
DirtyAutoDownloadKinds
%@: Skipping since kinds are no longer dirty
SetAutomaticDownloadKindsOperation
%@: Filtered download kinds: %@ => %@
%@: Setting automatic download kinds: %@
%@: Received invalid status: %@
%@: Rolling back automatic download kinds after fatal error: %@
downloadKinds
previousDownloadKinds
runsOnlyIfKindsAreDirty
shouldSuppressServerDialogs
%@: Adding media item to iPod library: %@
IPodLibraryItem
T@"IPodLibraryItem",R
insertedItemPersistentIdentifier
%@: Prompt does not need display: %@
%@: No operation for prompt identifier: %@
%@: Showing prompt for prompt identifier: %@
promptIdentifier
fsEntitlementsRefreshIntervalInSeconds
%@: Cached subscription entitlements have expired.
%@: Returning cached subscription entitlements.
%@: Marking the cached subscription entitlements as expired.
%@: Caching subscription entitlements.
%@: Clearing cached subscription entitlements.
%@: Failed to read the subscription entitlements from disk. %@
SubscriptionEntitlements_v2.plist
%@: Unable to determine the path of the cached subscription entitlements.
%@: Failed to write the subscription entitlements to disk. %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iTunesStore_Sim/iTunesStore-1442.182/Daemon/CheckinRentalOperation.m
%@: Could not generate checkin request body
%@: Could not generate checkin ack request body
%@: Checking in rental
%@: Acking rental checkin
checkin-ack-sar
checkin-sar
rental-checkin
rental-ack-checkin
XPCClientApplicationStateDidChangeNotification
XPCClientDisconnectNotification
newsstand-content
com.apple.lowtide
com.apple.springboard
com.apple.itunesstored.XPCClient
v16@?0@"NSNotification"8
com.apple.itunesstored.xpcclient
%@: Began background task (%d, %@): %@
%@: Ending background task: %@
com.apple.itunesstored.XPCClient.block
%@: %@
%@: Application state for %@ changed to "%@"
UIBackgroundModes
UINewsstandApp
_applicationState
TI,R,N
_clientType
appleSigned
TB,R,GisAppleSigned
applicationState
TI,R
auditTokenData
canReceiveMessages
clientType
hasEntitlements
newsstandApp
TB,R,GisNewsstandApp
processIdentifier
Ti,R
outputConnection
T@"SSXPCConnection",R
invalidationBlock
T@?,R,N
processAssertion
T@"BKSProcessAssertion",R,N
downloadKey
[%@] Using HTTPBodyDataFilePath: %@
[%@] HTTPBodyDataFilePath is present but does not exist on disk: %@
asset_order
avfoundation_blocked
bytes_total
destination_url
download_token
dpinfo_data
etag
uncompressed_size
file_protection
hash_array
hash_type
body_data
body_data_file_path
http_headers
http_method
initial_odr_size
is_discretionary
is_downloaded
is_drm_free
is_external
is_local_cache_server
is_zip_streamable
local_path
service_type
bytes_to_hash
path_extension
processing_types
protection_type
request_parameters
server_guid
sinfs_data
store_flavor
asset_type
url_session_task_id
video_dimensions
IFNULL(asset.blocked_reason, 0)
IFNULL(asset.local_path, ITSDGetAssetPath(asset.download_id, asset.ROWID))
external_target
facebook
twitter
access_token
page_access_token
page_id
post_id
com.apple.appstored
%@: Client '%@' cannot access kind: %@
%@: Could not create import download for client download
%@: Performing newsstand migration for client: %@
PrivateDownloadKinds
%@: Client "%@" not entitled for download kinds: %@
persistenceIdentifier
prefetchedDownloadExternalProperties
prefetchedDownloadProperties
shouldFilterExternalDownloads
trnsaction
active
committed
failed
aborted
type
com.apple.itunesstore.StoreDownloadQueue
StoreAutomaticDownloadConstraintsChangedNotification
account-change
trigger-download
trigger-check-push
other
cancel-retry
com.apple.tv
com.apple.videos
com.apple.itunesstored.StoreDownloadQueue
[%@]: Ignoring automatic download queue check: no account
[%@]: Ignoring automatic download queue check: disabled
[%@]: No enabled automatic download kinds - syncing with the server
[%@]: Synchronize automatic kinds back with:  [%@]
%@: Committing automatic download kinds: %@
%@: disabling automatic download for reason: %@
%@: enabling automatic download for reason: %@
%@: Skipping software download restore for downloadID: %@ since appstored will pick it up
%@: Checking download queues at client request
union
minus
%@: Checking download queues for trigger-downloads
%@: Resending dirty automatic download kinds
%@: Loading %lu queues with reason: %@
%@: Checking %lu queues with reason: %@
[%@]: Checking automatic download queue
[%@]: Skipping software download: %@
[%@]: Skipping video download: %@
B16@?0@"PurchaseDownloadsTransaction"8
MCFeatureTVAllowed
%@: Remove placeholder after queue check: %lld
%@: Deleting all %lu downloads for request: %@
%@: Fetching queue contents: count changed
%@: Skipping load contents: count has not changed
%@: Retrying all canceled restore downloads
%@: Retrying all soft-failed restore downloads
RESTORE_ITEMS_NOT_AVAILABLE_TITLE
RESTORE_ITEMS_NOT_AVAILABLE_BODY
downloadKindsBeingChecked
automaticDownloadKinds
T@"NSSet",C,N
enabledDownloadKinds
T@"NSSet",R,N
AutomaticDownloadKinds
DidShowHardRestoreFailureDialog
fuseCarrierBundleStatus
checkBack
startFuseHeaderEnrichment
startFuseManualSms
hasFuseCarrierBundleSubscription
fuseHeaderEnrichmentMessage
fuseHeaderEnrichmentSessionId
fuseHeaderEnrichmentUrl
fuseSilentSMSMessage
fuseSilentSMSNumber
fuseSmsSessionId
waitTime
bundlingStatus
Tq,N,V_bundlingStatus
SMSSessionIdentifier
T@"NSString",R,N,V_smsSessionIdentifier
delayInterval
Td,R,N,V_delayInterval
wantsDelayedRetry
TB,R,N,V_wantsDelayedRetry
headerEnrichmentMessage
T@"NSString",R,N,V_headerEnrichmentMessage
headerEnrichmentSessionIdentifier
T@"NSString",R,N,V_headerEnrichmentSessionIdentifier
headerEnrichmentURL
T@"NSURL",R,N,V_headerEnrichmentURL
needsHeaderEnrichment
TB,R,N,V_needsHeaderEnrichment
needsSilentSMS
TB,R,N,V_needsSilentSMS
silentSMSMessage
T@"NSString",R,N,V_silentSMSMessage
silentSMSNumber
T@"NSString",R,N,V_silentSMSNumber
%@: %@ / %@
pendingApps
pendingBooks
pendingSongs
checkAppQueue
checkBookQueue
check-download-queue
T@"NSNumber",&,N,V_accountIdentifier
cancelsDuplicateDownloads
TB,N,V_cancelsDuplicateDownloads
purchaseIdentifier
Tq,N,V_purchaseIdentifier
queueIdentifier
T@"NSString",C,N,V_queueIdentifier
queueContentsURLBagKey
T@"NSString",C,N,V_reason
v32@?0@8@16^B24
apps
books
media
com.apple.itunesstored.UpdateMigrator
[%@]: Migrating iTunes data.
[%@]: Upgrade Migration
[%@]: Restore From Backup Migration
[%@]: Migrate from Different Device Migration
[%@]: Queued demoted app restore for bundleIDs: %@
[%@]: Network Changed
[%@]: Loading Bag Prior to migration
[%@]: Unable to load bag, but attempting migration anyway: %@
[%@]: Running checks after adding first migration.
[%@]: Wating for network to migrate store data.
[%@]: Waiting for checks to complete.
[%@]: Restoring all demoted applications
[%@]: Restoring demoted applications with bundle identifiers: %@
operationType
requestingOfflineSlot
TB,GisRequestingOfflineSlot
T@"SSVSubscriptionResponse",R,C
%@: File not readable for upload: %lld, URL: %@
%@: Missing account for upload: %lld
%@: Preparing upload: %lld with request URL: %@
.cell
RP.AudioCoverArt
X-Apple-Upload-Validation-RuleSets
com.apple.coreaudio-format
audio/x-caf
X-Original-Filename
directUploaderRichPostAudio
directUploaderRichPostImage
directUploaderRichPostVideo
ISDirectUploadURL
%@: Using base URL from user defaults: %@
upload/rich-post-audio
upload/rich-post-image
upload/rich-post-video
outputBlock
%@: No app for bundleID: %@
%@: Demote app with metadata: %@
%@: Demotion failed for app: %@, with error: %@
fairplay:sData
sinfData
T@"NSData",R,N,V_sinfData
matched-status
redownloaded-status
%@: %llu / %@
[%@]: Enumerating delta packages for: %@
[%@]: Found delta package for: %@
[%@]: Delta had no assets for: %@
local-server-info
[%@]: Found version match for %@: %@ -> %@
[%@]: Found variant match for %@: %@ -> %@
assets
matchedStatus
redownloadedStatus
purchaserAccountIdentifier
downloaderAccountIdentifier
familyAccountIdentifier
[ApplicationWorkspace]: Installing software package with bundleID: %@: bundleVersion: %@ path: %@
Software
Installed software package
[ApplicationWorkspace]: Failed to install application: %@; %@; %@
Error
%@: Succeeded in installing application: %@ -- %@
%@: No receipt data For: %@
%@: Failed to write receipt for %@
%@: Could not create writable metadata
%@: Could not serialize metadata: %@
CFBundleIdentifier
softwareProperties
T@"SoftwareProperties",R
appReceiptData
T@"NSData",C,N,V_appReceiptData
artworkData
T@"NSData",C,N,V_artworkData
installType
T@"NSNumber",C,N,V_installType
ITunesMetadata
T@"NSDictionary",C,N,V_iTunesMetadata
isFromStore
TB,N,V_isFromStore
newsstandArtworkData
T@"NSData",C,N,V_newsstandArtworkData
packagePath
T@"NSString",C,N,V_packagePath
scratchDirectory
T@"NSString",C,N,V_scratchDirectory
T@"NSData",C,N,V_sinfData
transitMapData
T@"NSData",C,N,V_transitMapData
v24@?0@"CarrierBundlingEligibilityResponse"8@"NSError"16
fuseHeaderEnrichmentResponse
application/json
responseMessage
sessionId
deepLink
responseCode
error-domain
error-code
error-title
error-message
error-underlying
carrier
InternationalMobileEquipmentIdentity
IMEI
ValidateMobile
SOAPAction
InternalBuild
ISHeaderEnrichmentAllowsWiFi
text/xml; charset=utf-8
%@: Sending header enrichment request
HTTP/1.1
%@: Performing delayed retry: still need header enrichment
fuseHeaderEnrichment
%@: Loaded bag successfully, but no enrichment URL found. Assuming carrier bundle status not eligible.
phoneNumber
%@: Running preflight operation
%@: Silent SMS succeeded
%@: Silent SMS failed
TB,GisDeepLink
cellularProviderName
eligibilityResponse
T@"CarrierBundlingEligibilityResponse",R
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
%@: Finishing %ld downloads
finishedDownloadPredicate
T@"SSSQLitePredicate",R
songDownloadDone
songId
download-id
finished_download
finish_url
thumbnail
%@: Using cached thumbnail for download: %lld
%@: Loading thumbnail from URL: %@
file
%@: Could not load artwork file: %@: %@
%@: User picked non-actionable button
%@: Could not authenticate: %@
%@: Appending server-driven title: %@
%@: Appending server-driven reason: %@
%@: Appending server-driven buy button label: %@
%@: Performing default action instead of redirecting
%@: Skipping explanation because of password default
%@: Skipping explanation as strings are empty
%@: Skipping explanation because of consolidated auth dialogs
%@: Skipping dialog because we are authenticated and not forced
T@"ISDialog",R,V_dialog
T@"SSAuthenticationContext",C,V_authenticationContext
performsButtonAction
TB,V_performsButtonAction
authenticatedAccountDSID
T@"NSNumber",R,V_authenticatedAccountDSID
performedButton
T@"ISDialogButton",R,V_performedButton
T@"NSURL",R,V_redirectURL
selectedButton
T@"ISDialogButton",R,V_selectedButton
%@: Finishing persistent download: %@
%@: Pruned orphaned persistent download [%lld, %@, %@]
%@: Pruned orphaned download: %@
persistent_manager
manager_id
persistent_download
persistent_manager_kind
filters_external_downloads
migration_version
persistence_id
wake_up_on_finish
download_kind
action
download-manifest
redeem-codes
code
adkit-product-url
addItemsToWishlistBaseUrl
NetworkRequestQueueSubscriptionStatusAccessQueue
%@: Cannot authenticate for unentitled client: %@
%@: Accepting authentication request for client: %@
%@: Cannot get match status for unentitled client: %@
%@: Deny unentitled client: %@
%@: Cannot install items for unentitled client: %@
pendingRentals
count
%@: Cannot import item for unentitled client: %@
%@: Cannot load cloud service capabilities for unauthorized client
v24@?0@"SSVCloudServiceCapabilitiesResponse"8@"NSError"16
v24@?0@"SSVSubscriptionEntitlements"8@"NSError"16
%@: Sending managed application request from client: %@ for itemID: %@
%@: appstored responded to managed application request for itemID: %@ result: %d changeType: %ld
[%@] Managed application request requires an itemIdentifier
%@: Cannot kbsync for unentitled client: %@
%@: Cannot load URL bag for unentitled client
%@: Cannot lookup items for unentitled client: %@
%@: Cannot perform migration for unentitled client: %@
[%@]: Scheduling AppStore Migrator
ASDMigrationRequestOptions
ASDMigrationRequest
[%@]: AppStore Migrator scheduled: %@
%@: Cannot repair items for unentitled client: %@
[%@]: Repair request account DSID: %@ and bundleID %@
[%@]: Repair complete for bundleID: %@ result: %d changedBundleIdentifiers: [%@]
%@: Cannot load URL for unentitled client: %@
%@: Cannot demote unentitled client: %@
%@: Cannot load storefront identifier for unauthorized client
v24@?0@"SSVMediaContentTasteUpdateResponse"8@"NSError"16
%@: Cannot add wishlist items for unentitled client: %@
%@: Cannot change subscription for unentitled client: %@
v24@?0@"NSString"8@"NSString"16
%@: Loading %lu download manifests from URL
%@: Redeeming %lu codes from URL
%@: Received unknown action: %@
ERROR: SubscriptionStatusOperation dequeued: %@ where currentSubscriptiontStatusOperation = %@
com.apple.itunesstored.MediaSocialAuthenticationCoordinator
MEDIA_SOCIAL_ENTER_PASSWORD_FORMAT_%@
MEDIA_SOCIAL_ENTER_PASSWORD_NO_ACCOUNT
T@"<MediaSocialAuthenticationDelegate>",W,N,V_delegate
finished
TB,R,N,GisFinished
T@"SSAuthenticateResponse",&,N,V_authenticateResponse
postIdentifiers
T@"NSOrderedSet",C,N,V_postIdentifiers
uploadIdentifiers
T@"NSOrderedSet",C,N,V_uploadIdentifiers
com.apple.itunesstored.IPodLibrary
%@: Deleting all OTA tracks
B16@?0@"ML3DatabaseConnection"8
%@: Scheduling %lu iPod library items
%@: importing item with existing library pid %lld
%@: skipping import of item with existing library pid %lld
%@: import %s
succeeded
%@: post process item %d. pid=%lld
%@: existingPath=%@, existingFamilyAccoundID=%@
%@: Skipping existing track with location data: %lld: "%@"
%@: Skipping existing track, no location data: %lld
%@: Defering populating artwork for %lld
inserted track id %lld
%@: Setting location data for track: %lld
%@: Adding %lu scheduled iPod library items
%@: Deleting download from iPod library: %lld
%@: Removing download properties from iPod library: %lld
com.apple.itunesstored.RetryCanceledRestoreDownloads
com.apple.itunesstored.RetryFailedRestoreDownloads
com.apple.itunesstored.RetrySoftFailedRestoreDownloads
%@: Skipping authentication after cancel retry was cancelled
%@: Prompting user for restore cancel retry
%@: User cancelled cancel retry
%@: User cancelled auth during cancel retry
%@: Attempting restore for %lu download(s)
%@: Falling back to primary account to restore download: %lld
%@: Keeping per device item for download: %lld bundleID: %@
%@: Hard fail %lu invalid restore items
%@: Soft fail %lu invalid restore items
%@: Cancel %lu invalid restore items
%@: Failing %lu restore items after account preflight failure: %@
%@: Attempting restore for %lu accounts
%@: Attempting podcast restore
%@: Restore transient failed for download %lld with itemID: %@
%@: Restore failed for download: %lld with itemID: %@
%@: Attempting to resolve unknown Apple ID: %@
%@: Resolved AppleID: %@ to AppleID: %@ and DSID: %@
%@: Could not resolve AppleID: %@: %@
%@: Hard fail incompatible app download: %lld itemID: %@
%@: Restore cancel retry failed for download: %lld with itemID: %@
%@: Attempt to establish primary account
%@: Podcast not found on server for download: %lld with itemID: %@
%@: Restore hard failed for download: %lld with itemID: %@ error: %@
%@: Restore hard failed with app data for download: %lld with itemID: %@ error: %@
Restore hard failed
%@: Cannot restore without an AppleID for account: %@
%@: Preflight account: %@
RESTORE_CANCEL_RETRY_TITLE
RESTORE_CANCEL_RETRY_BODY
RESTORE_CANCEL_RETRY_DELETE_BUTTON
RESTORE_CANCEL_RETRY_DOWNLOAD_BUTTON
%@: Updating download %lld with restore data for item: [%llu, "%@", "%@"]
downloadIdentifiers
errors
RestoreSuppressTermsAndConditions
(DH: T:%lld / D:%lld)
Tq,R,N,V_downloadID
Tq,R,N,V_transactionID
com.apple.itunesstored.DaemonBiometricKeychain
CryptoTokenKit
%@: Create attestation data failed for DSID:%@, error: %@
%@: Create attestation data failed for DSID: %@
%@: Create attestation data timed out for DSID: %@
%@: Public key data copy timed out for DSID: %@
%@: Sign data timed out for DSID: %@
%@: Request for attestation data from TouchID1 client
v20@?0B8@"NSObject<OS_xpc_object>"12
%@: Request for public key from TouchID1 client
%@: Request for signature from TouchID1 client
%@: Query dictionary failed with no label
Caches
Documents
Containers
%@: Downloading asset: %lld for download: %lld
%@: Installing asset: %lld for download: %lld
%@: Failed to download and install asset: %lld for download: %lld
%@: Downloading asset: %lld with type: %@ for download: %lld
%@-%ld
DownloadInstaller: File delete failed: %@
DownloadInstaller: File rename failed after too many tries: %@
DownloadInstaller: File move failed: %@
%@: Rolling file back to %@
%@: File rollback failed: %@
DownloadInstaller: Could not serialize plist: %@
DownloadInstaller: Wrote plist to: %@
DownloadInstaller: Could not write plist: %@
T@"FinishDownloadMemoryEntity",R,N,V_download
progressFraction
%@: Restoring %lu items for account: (%@ / %@)
%@: Can't restore using account with no account name
%@: Cannot restore: no URL
%@: Invalid URL: %@
Content-Encoding
gzip
%@: No body data for %lu items: %@
%@: Received failure response: %@
%@: Received %lu downloads for %lu restore items
%@: Adding extra allowed kinds: %@
%@: Filtering disallowed kind: "%@" for item: %@
%@: Filtering disallowed match status: %@ for item: %@
%@: Restoring %ld items with kind %@ with chunk size %ld
%@: Making chunk request for %lu items with kind: %@
%@: Cancel %lu remaining restore items: %@
%@: Skipping terms and conditions failure
T@"SSAccount",R
downloadItems
T@"<RestoreDownloadItemsOperationDelegate>",D
shouldShowTermsAndConditionsDialog
responses
device-name
p2-content-restore
allowed-kinds
ExtraRestoreKinds
allowed-match-status
max-item-count
ASDJobAsset
getAddCreditPassUrl
%@: Loading pass for account ID: %@
PKPass
%@: Failed to load pass for account ID: %@, error: %@
%@: Loaded account ID: %@, pass: %@
com.apple.itunesstored.play-activity-feed-flush
com.apple.itunesstored.subscription-poll
subscription-status-refresh-interval-in-seconds
%@: Firing timer for start: %@
:CellularOverride
:LastCheckTime
:WiFiOverride
:WindowOverride
eventBlock
T@?,C,N,V_eventBlock
preconditionsBlock
T@?,C,N,V_preconditionsBlock
bagKey
T@"NSString",C,N,V_bagKey
cellularBagKey
T@"NSString",C,N,V_cellularBagKey
defaultInterval
Td,N,V_defaultInterval
defaultWindow
Td,N,V_defaultWindow
%@: Cancel application restore: %@
%@: Could not cancel application restore for bundle ID: %@ error: %@
%@: Could not cancel application restore with bundle ID: %@ because it is a MID based restore to save for later.
Tq,R,V_priority
TB,R,GisFailed
com.apple.itunesstored.ApplicationWorkspace.callback
com.apple.itunesstored.ApplicationWorkspace
com.apple.itunesstored.ApplicationWorkspace.background
[ApplicationWorkspace]: Registered user switch stakeholder.
v32@?0@"ApplicationHandle"8@"NSProgress"16^B24
[ApplicationWorkspace]: Resuming sync bubble.
[ApplicationWorkspace]: Checking if we are installing item with itemIdentifier: %@
[ApplicationWorkspace]: Persistent state installing item with itemIdentifier: %@ phase: %@
[ApplicationWorkspace]: Workspace is installing item with itemIdentifier: %@
[ApplicationWorkspace]: We are currently installing %@
[%@]: Installing intial placeholder for bundleID: %@
DeviceBasedVPP
[%@] Replaying Incomplete Operations before [%@]
[ApplicationWorkspace]: Retrying incomplete due to download fail: [%@] [%@] [%@]
[ApplicationWorkspace]: Retrying incomplete installing: [%@] [%@] [%@]
[ApplicationWorkspace]: Retrying incomplete download canceled: [%@] [%@] [%@]
[ApplicationWorkspace]:Unexpected incomplete operation type: [%@] [%@] [%@]
[ApplicationWorkspace]: Cannot retry incomplete operation again: [%@] [%@] [%@]
[%@]: Seeing if we can resume quotas
[%@]: Still downloading item with itemIdentifier: %lld phase: %@
[%@]: Resuming quotas
[%@]: Not resuming quotas due to %i current downloads
[%@]: Suspending quotas
[%@]: Error suspending quotas: %@
[ApplicationWorkspace]: Waiting for pending placeholder installs of download: %lld
[ApplicationWorkspace]: ODR download cancelled unexpectedly %@
[ApplicationWorkspace]: ODR download completed unexpectedly %@
[ApplicationWorkspace]: ODR downloads already started for %@
[ApplicationWorkspace]: Waiting for pending ODR downloads for %@
SC_Info
[ApplicationWorkspace]: About to switch with %lu current install(s)
terminate multiuser mode
user is going to change
[ApplicationWorkspace]: Successfully canceled downloadID: %lld bundleID: %@ phase: %@
[ApplicationWorkspace]: Successfully removed placeholder for : %lld bundleID: %@
[ApplicationWorkspace]: Failed to uninstall placeholder for downloadID: %lld bundleID: %@
[ApplicationWorkspace]: Failed to cancel downloadID: %lld phase: %@ bundleID: %@
[ApplicationWorkspace]: Waiting for downloadID: %lld to finish installing
[ApplicationWorkspace]: Timed out waiting for downloadID %lld to finish installing
[ApplicationWorkspace]: Application with downloadID: %lld to finish installing
[ApplicationWorkspace]: Switch complete with %ld install(s) successful
B32@?0@"ApplicationWorkspaceOperation"8Q16^B24
fractionCompleted
com.apple.ondemandd.itunesstored
v28@?0B8@"NSProgress"12@"NSError"20
[%@] Decrementing pending installs for %lld but none found
ITSDGetAssetPath
v16@?0^{sqlite3=}8
SELECT name FROM sqlite_master WHERE name='download';
PRAGMA legacy_file_format = 0;
CREATE INDEX IF NOT EXISTS asset_download_id ON asset (download_id);
CREATE INDEX IF NOT EXISTS download_priority_order_key ON download (priority DESC, order_key ASC);
CREATE INDEX IF NOT EXISTS download_is_restore ON download (is_restore);
CREATE INDEX IF NOT EXISTS download_kind ON download (kind);
CREATE INDEX IF NOT EXISTS preorder_preorder_id ON preorder (store_preorder_id);
downloads.28.sqlitedb
PRAGMA user_version;
No database migration function for %d => %d
Database migration failed for version: %d
CREATE TABLE IF NOT EXISTS application_id (effective_client_id INTEGER, bundle_id TEXT NOT NULL, UNIQUE (bundle_id))
CREATE TABLE IF NOT EXISTS asset (pid INTEGER, download_id INTEGER, asset_order INTEGER DEFAULT 0, asset_type TEXT, bytes_total INTEGER, url TEXT, local_path TEXT, destination_url TEXT, path_extension TEXT, retry_count INTEGER, http_method TEXT, initial_odr_size INTEGER, is_discretionary INTEGER DEFAULT 0, is_downloaded INTEGER DEFAULT 0, is_drm_free INTEGER DEFAULT 0, is_external INTEGER DEFAULT 0, is_local_cache_server INTEGER DEFAULT 0, is_zip_streamable INTEGER DEFAULT 0, processing_types INTEGER DEFAULT 0, video_dimensions TEXT, timeout_interval REAL, store_flavor TEXT, download_token INTEGER DEFAULT 0, blocked_reason INTEGER DEFAULT 0, avfoundation_blocked INTEGER DEFAULT 0, service_type INTEGER DEFAULT 0, protection_type INTEGER DEFAULT 0,store_download_key TEXT, etag TEXT, bytes_to_hash INTEGER, hash_type INTEGER DEFAULT 0, server_guid TEXT, file_protection TEXT, variant_id TEXT, hash_array BLOB, http_headers BLOB, request_parameters BLOB, body_data BLOB, body_data_file_path TEXT,sinfs_data BLOB, dpinfo_data BLOB, uncompressed_size INTEGER DEFAULT 0, url_session_task_id INTEGER DEFAULT -1, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS download (pid INTEGER, airplay_content_type TEXT, artist_name TEXT, artwork_is_prerendered INTEGER DEFAULT 0, artwork_template_name TEXT, auto_update_time INTEGER, beta_external_version_identifier INTEGER DEFAULT 0, bundle_id TEXT, bundle_version TEXT, cancel_if_duplicate INTEGER DEFAULT 0, cancel_on_failure INTEGER DEFAULT 0, cancel_url TEXT, client_id TEXT, collection_artist_name TEXT, collection_group_count INTEGER, collection_item_count INTEGER, collection_name TEXT, composer_name TEXT, diverted_job_id INTEGER, document_target_id TEXT, download_permalink TEXT, duet_transfer_type INTEGER DEFAULT 0, duration_in_ms INTEGER DEFAULT 0, effective_client_id INTEGER DEFAULT 0, enable_extensions INTEGER DEFAULT 0, episode_id TEXT, episode_sort_id INTEGER, handler_id INTEGER DEFAULT 0, has_messages_extension INTEGER DEFAULT 0, hls_playlist_url TEXT, genre_name TEXT, index_in_collection INTEGER DEFAULT 0, index_in_collection_group INTEGER, is_automatic INTEGER DEFAULT 0, is_compilation INTEGER DEFAULT 0, is_device_based_vpp INTEGER DEFAULT 0, is_diverted INTEGER DEFAULT 0, is_explicit INTEGER DEFAULT 0, is_from_store INTEGER DEFAULT 0, is_hd INTEGER DEFAULT 0, is_private INTEGER DEFAULT 0, is_purchase INTEGER DEFAULT 0, is_redownload INTEGER DEFAULT 0, is_restore INTEGER DEFAULT 0, is_rental INTEGER DEFAULT 0, is_sample INTEGER DEFAULT 0, is_shared INTEGER DEFAULT 0, is_store_queued INTEGER DEFAULT 0, is_tv_template INTEGER DEFAULT 0, kind TEXT, launch_prohibited INTEGER DEFAULT 0, library_id TEXT, loading_priority REAL, long_description TEXT, long_season_description TEXT, messages_artwork_url TEXT, network_name TEXT, order_key DOUBLE DEFAULT 0, order_seed INTEGER DEFAULT 0, override_audit_token_data BLOB, page_progression_direction TEXT, podcast_episode_guid TEXT, podcast_feed_url TEXT, podcast_type TEXT, policy_id INTEGER DEFAULT 0, priority INTEGER DEFAULT 0, preferred_asset_flavor TEXT, purchase_id INTEGER DEFAULT 0, rate_limit INTEGER, reason INTEGER DEFAULT 0,ref_app TEXT, ref_url TEXT, release_date INTEGER, release_year INTEGER, rental_id INTEGER, season_number INTEGER, series_name TEXT, software_type TEXT, short_description TEXT, suppress_error_dialogs INTEGER NOT NULL DEFAULT 0, store_account_id INTEGER, store_account_name TEXT, store_artist_id INTEGER, store_cohort TEXT, store_collection_id INTEGER, store_composer_id INTEGER, store_download_key TEXT, store_front_id TEXT, store_genre_id INTEGER, store_item_id INTEGER, store_match_status INTEGER NOT NULL DEFAULT 0, store_publication_version INTEGER DEFAULT 0, store_preorder_id INTEGER, store_purchase_date INTEGER, store_redownload_parameters TEXT, store_redownload_status INTEGER NOT NULL DEFAULT 0, store_saga_id INTEGER, store_software_version_id INTEGER, store_transaction_id TEXT, store_url TEXT, store_xid TEXT, thumbnail_newsstand_binding_edge TEXT, thumbnail_newsstand_binding_type TEXT, thumbnail_url TEXT, timeout_interval REAL, timestamp INTEGER DEFAULT (strftime('%s', 'now')), title TEXT, transaction_id INTEGER DEFAULT 0, variant_id TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS download_policy (pid INTEGER, policy_data BLOB, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS download_state (pid INTEGER, download_id INTEGER, phase TEXT, is_restricted INTEGER DEFAULT 0, restore_state INTEGER DEFAULT 0, blocked_reason INTEGER NOT NULL DEFAULT 0, can_pause INTEGER DEFAULT 1, can_cancel INTEGER DEFAULT 1, can_prioritize INTEGER DEFAULT 1, is_server_finished INTEGER DEFAULT 0, has_restore_data INTEGER DEFAULT -1, last_odr_action INTEGER DEFAULT 0, restore_data_size INTEGER DEFAULT 0, store_queue_refresh_count INTEGER DEFAULT 0, did_restore_data INTEGER DEFAULT 0, auto_update_state INTEGER NOT NULL DEFAULT 0, download_error BLOB, restore_error BLOB, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS finished_download (pid INTEGER, finish_url TEXT, store_account_id INTEGER NOT NULL, store_item_id INTEGER, store_transaction_id TEXT, PRIMARY KEY(pid));
CREATE TABLE IF NOT EXISTS persistent_download (download_id INTEGER, manager_id INTEGER, PRIMARY KEY (download_id, manager_id));
CREATE TABLE IF NOT EXISTS persistent_manager (pid INTEGER, client_id TEXT, filters_external_downloads INTEGER DEFAULT 0, migration_version INTEGER DEFAULT 0, wake_up_on_finish INTEGER DEFAULT 0, persistence_id TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS persistent_manager_kind (pid INTEGER, manager_id INTEGER, download_kind TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS preorder (pid INTEGER, artist_name TEXT, kind TEXT, release_date INTEGER, release_date_string TEXT, store_account_id INTEGER, store_item_id INTEGER, store_preorder_id INTEGER, title TEXT, image_collection_data BLOB, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS canceled_preorder (pid INTEGER, store_account_id INTEGER NOT NULL DEFAULT 0, store_item_id INTEGER NOT NULL DEFAULT 0, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS client (pid INTEGER, audit_token_data BLOB, client_type INTEGER DEFAULT 0, client_id TEXT NOT NULL, PRIMARY KEY (pid), UNIQUE (client_id));
CREATE TABLE IF NOT EXISTS purchase (pid INTEGER, batch_id INTEGER DEFAULT 0, client_id INTEGER DEFAULT 0, order_id DOUBLE DEFAULT 0, state INTEGER DEFAULT 0, encoded_data BLOB, encoded_error BLOB, encoded_response BLOB, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS purchase_manager (pid INTEGER, client_id_header TEXT, manager_id TEXT, process_id TEXT, url_bag_type TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS application_workspace_state (pid INTEGER, bundle_id TEXT NOT NULL, download_id INTEGER, expected_phase TEXT NOT NULL DEFAULT 0, retry_count INTEGER NOT NULL DEFAULT 0, time_updated INTEGER NOT NULL DEFAULT 0, transaction_id INTEGER, PRIMARY KEY (pid), UNIQUE (bundle_id));
CREATE INDEX IF NOT EXISTS application_workspace_state_bundle_id ON application_workspace_state (bundle_id);
CREATE TABLE IF NOT EXISTS trnsaction (pid INTEGER, bundle_id TEXT, type INTEGER DEFAULT 0, PRIMARY KEY (pid));
INSERT INTO application_id (effective_client_id, bundle_id) VALUES (%ld, "%@")
ALTER TABLE download ADD COLUMN store_account_name TEXT;
ALTER TABLE download ADD COLUMN suppress_error_dialogs SchemaUserVersionEGER NOT NULL DEFAULT 0;
ALTER TABLE download_state ADD COLUMN blocked_reason INTEGER NOT NULL DEFAULT 0;
ALTER TABLE download ADD COLUMN store_match_status INTEGER NOT NULL DEFAULT 0;
ALTER TABLE download ADD COLUMN store_redownload_status INTEGER NOT NULL DEFAULT 0;
ALTER TABLE download ADD COLUMN is_store_queued INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN store_redownload_parameters TEXT;
ALTER TABLE download ADD COLUMN thumbnail_newsstand_binding_edge TEXT;
ALTER TABLE download ADD COLUMN thumbnail_newsstand_binding_type TEXT;
ALTER TABLE download ADD COLUMN is_cellular_restricted INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN requires_device_plugged_in INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN cancel_on_failure INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN size_limit_4G INTEGER;
ALTER TABLE download ADD COLUMN size_limit_5G INTEGER;
ALTER TABLE download ADD COLUMN size_limit_6G INTEGER;
ALTER TABLE download ADD COLUMN size_limit_7G INTEGER;
ALTER TABLE download ADD COLUMN size_limit_8G INTEGER;
ALTER TABLE download ADD COLUMN size_limit_9G INTEGER;
ALTER TABLE persistent_manager ADD COLUMN migration_version INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN download_token INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN policy_id INTEGER DEFAULT 0;
size_limit_2G
size_limit_3G
size_limit_4G
size_limit_5G
size_limit_6G
size_limit_7G
size_limit_8G
size_limit_9G
size_limit_WiFi
requires_device_plugged_in
ALTER TABLE download ADD COLUMN preferred_asset_flavor TEXT;
ALTER TABLE download ADD COLUMN cancel_if_duplicate INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN sinfs_data BLOB;
ALTER TABLE asset ADD COLUMN etag TEXT;
ALTER TABLE asset ADD COLUMN blocked_reason INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN store_download_key TEXT;
ALTER TABLE download_state ADD COLUMN is_server_finished INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN service_type INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN is_hash_verified INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN store_url TEXT;
ALTER TABLE download_state ADD COLUMN has_restore_data INTEGER DEFAULT -1;
ALTER TABLE download_state ADD COLUMN restore_data_size INTEGER DEFAULT 0;
ALTER TABLE download_state ADD COLUMN store_queue_refresh_count INTEGER DEFAULT 0;
ALTER TABLE download_state ADD COLUMN did_restore_data INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN is_explicit INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN page_progression_direction TEXT;
ALTER TABLE asset ADD COLUMN asset_order INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN is_local_cache_server INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN server_guid TEXT;
ALTER TABLE download ADD COLUMN purchase_id INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN auto_update_time INTEGER;
ALTER TABLE download_state ADD COLUMN auto_update_state INTEGER NOT NULL DEFAULT 0;
ALTER TABLE download ADD COLUMN is_hd INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN is_zip_streamable INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN uncompressed_size INTEGER DEFAULT 0;
ALTER TABLE client ADD COLUMN audit_token_data BLOB;
ALTER TABLE asset ADD COLUMN body_data_file_path TEXT;
ALTER TABLE download_state ADD COLUMN can_cancel INTEGER DEFAULT 1;
ALTER TABLE download_state ADD COLUMN can_prioritize INTEGER DEFAULT 1;
ALTER TABLE download ADD COLUMN override_audit_token_data BLOB;
ALTER TABLE download ADD COLUMN effective_client_id INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN order_seed INTEGER DEFAULT 0;
UPDATE download SET priority=1 WHERE priority>1;
UPDATE download SET priority=-1 WHERE priority<0;
UPDATE download SET priority=-2 WHERE is_restore=1;
ALTER TABLE asset ADD COLUMN is_downloaded INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN duet_transfer_type INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN airplay_content_type TEXT;
ALTER TABLE asset ADD COLUMN hash_type INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN url_session_task_id INTEGER DEFAULT -1;
ALTER TABLE asset ADD COLUMN processing_types INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN dpinfo_data BLOB;
ALTER TABLE asset ADD COLUMN file_protection TEXT;
ALTER TABLE asset ADD COLUMN is_discretionary INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN avfoundation_blocked INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN store_cohort TEXT;
ALTER TABLE download ADD COLUMN ref_app TEXT;
ALTER TABLE download ADD COLUMN ref_url TEXT;
ALTER TABLE download ADD COLUMN reason INTEGER DEFAULT 0;
UPDATE application_id SET effective_client_id=%ld WHERE bundle_id="com.apple.Music";
ALTER TABLE asset ADD COLUMN protection_type INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN variant_id TEXT;
ALTER TABLE download ADD COLUMN loading_priority REAL;
ALTER TABLE download ADD COLUMN rate_limit INTEGER;
ALTER TABLE download ADD COLUMN timeout_interval REAL;
ALTER TABLE download ADD COLUMN variant_id TEXT;
ALTER TABLE download ADD COLUMN beta_external_version_identifier INTEGER DEFAULT 0;
ALTER TABLE download_state ADD COLUMN last_odr_action INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN initial_odr_size INTEGER;
ALTER TABLE download ADD COLUMN is_tv_template INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN is_device_based_vpp INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN is_shared INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN transaction_id INTEGER DEFAULT 0;
ALTER TABLE application_workspace_state ADD COLUMN transaction_id INTEGER;
ALTER TABLE download ADD COLUMN store_publication_version INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN download_permalink TEXT;
ALTER TABLE download ADD COLUMN is_diverted INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN diverted_job_id INTEGER;
ALTER TABLE download ADD COLUMN rental_id INTEGER;
ALTER TABLE download ADD COLUMN hls_playlist_url TEXT;
ALTER TABLE download ADD COLUMN has_messages_extension INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN launch_prohibited INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN messages_artwork_url TEXT;
ALTER TABLE download ADD COLUMN enable_extensions INTEGER DEFAULT 0;
ALTER TABLE download RENAME TO _download;
INSERT INTO download (pid, airplay_content_type, artist_name, artwork_is_prerendered, artwork_template_name, auto_update_time, beta_external_version_identifier, bundle_id, bundle_version, cancel_if_duplicate, cancel_on_failure, cancel_url, client_id, collection_artist_name, collection_group_count, collection_item_count, collection_name, composer_name, diverted_job_id, document_target_id, download_permalink, duet_transfer_type, duration_in_ms, effective_client_id, enable_extensions, episode_id, episode_sort_id, handler_id, has_messages_extension, hls_playlist_url, genre_name, index_in_collection, index_in_collection_group, is_automatic, is_compilation, is_device_based_vpp, is_diverted, is_explicit, is_from_store, is_hd, is_private, is_purchase, is_redownload, is_restore, is_rental, is_sample, is_shared, is_store_queued, is_tv_template, kind, launch_prohibited, library_id, loading_priority, long_description, long_season_description, messages_artwork_url, network_name, order_key, order_seed, override_audit_token_data, page_progression_direction, podcast_episode_guid, podcast_feed_url, podcast_type, policy_id, priority, preferred_asset_flavor, purchase_id, rate_limit, reason, ref_app, ref_url, release_date, release_year, rental_id, season_number, series_name, software_type, short_description, suppress_error_dialogs, store_account_id, store_account_name, store_artist_id, store_cohort, store_collection_id, store_composer_id, store_download_key, store_front_id, store_genre_id, store_item_id, store_match_status, store_publication_version, store_preorder_id, store_purchase_date, store_redownload_parameters, store_redownload_status, store_saga_id, store_software_version_id, store_transaction_id, store_url, store_xid, thumbnail_newsstand_binding_edge, thumbnail_newsstand_binding_type, thumbnail_url, timeout_interval, title, transaction_id, variant_id) SELECT pid, airplay_content_type, artist_name, artwork_is_prerendered, artwork_template_name, auto_update_time, beta_external_version_identifier, bundle_id, bundle_version, cancel_if_duplicate, cancel_on_failure, cancel_url, client_id, collection_artist_name, collection_group_count, collection_item_count, collection_name, composer_name, diverted_job_id, document_target_id, download_permalink, duet_transfer_type, duration_in_ms, effective_client_id, enable_extensions, episode_id, episode_sort_id, handler_id, has_messages_extension, hls_playlist_url, genre_name, index_in_collection, index_in_collection_group, is_automatic, is_compilation, is_device_based_vpp, is_diverted, is_explicit, is_from_store, is_hd, is_private, is_purchase, is_redownload, is_restore, is_rental, is_sample, is_shared, is_store_queued, is_tv_template, kind, launch_prohibited, library_id, loading_priority, long_description, long_season_description, messages_artwork_url, network_name, order_key, order_seed, override_audit_token_data, page_progression_direction, podcast_episode_guid, podcast_feed_url, podcast_type, policy_id, priority, preferred_asset_flavor, purchase_id, rate_limit, reason, ref_app, ref_url, release_date, release_year, rental_id, season_number, series_name, software_type, short_description, suppress_error_dialogs, store_account_id, store_account_name, store_artist_id, store_cohort, store_collection_id, store_composer_id, store_download_key, store_front_id, store_genre_id, store_item_id, store_match_status, store_publication_version, store_preorder_id, store_purchase_date, store_redownload_parameters, store_redownload_status, store_saga_id, store_software_version_id, store_transaction_id, store_url, store_xid, thumbnail_newsstand_binding_edge, thumbnail_newsstand_binding_type, thumbnail_url, timeout_interval, title, transaction_id, variant_id FROM _download;
DROP TABLE _download;
T@"NSNumber",C,N,V_rentalKeyIdentifier
rentalInformation
T@"NSDictionary",R,C,N,V_rentalInformation
%@: Running install for download: %lld using operation: %@
v16@?0@"FinishDownloadResponse"8
%@: No installer for download: %lld
com.apple.itunesstored.IPodLibraryItem
duration
tracks
assetType
chapters
downloading
TB,R,GisDownloading
durationInSeconds
downloadType
itemDownloadIdentifier
hasItemArtwork
itemArtworkData
itemMediaPath
protectionType
itemMetadata
T@"StoreDownload",C
updateType
additionalEntityProperties
T@"NSDictionary",C
CMTimeGetSeconds
dialogButton
T@"ISDialogButton",&,V_dialogButton
SKErrorDomain
preorder
canceled_preorder
image_collection_data
release_date_string
content_item
item_id
%@: Loading preorder queue
%@: Could not load preorder queue: %@
%@: Loaded %lu preorder items
preorderItems
p2-pre-order-queue
%@: Checking preorder queue
%@: Could not check preorder queue: %@
%@: Found %@ preorders in the queue
numberOfPreordersInQueue
pre-order-queue-count
p2-check-pre-order-queue
com.apple.itunesstored.StorePreorderQueue
%@: Adding new preorder: %lld
%@: Checking preorder queue for %lu accounts
%@: Deny preorder cancel for unentitled client: %@
%@: Cancel %ld preorders
v24@?0@"PreorderQueueClient"8@"NSObject<OS_xpc_object>"16
%@: Checking queue for %@
v16@?0@"PreorderQueueClient"8
%@: Deny get preorders from unentitled client: %@
%@: Ignore register from unentitled client: %@
%@: Registered client: %@ with kinds: %@
%@: Client disconnect: %@
%@: Deleting all preorders for account: %@
%@: Updating existing preorder: %@
%@: Pruning disappeared preorder: %@
[%@]: Receipt refresh migrating VPP app with bundleID: %@.
v16@?0@"ISSoftwareApplication"8
[%@]: Receipt expiration in %ld days [%@] [%@ v %@]
[%@]: Receipt expiration in %ld days [%@] -- [Silent] --  [%@ v %@]
[%@]: Unexpected status code: %@
[%@]: No new receipt for %@
[%@]: Failed to re-write the receipt for app: [%@] [%ld bytes]
[%@]: Attempted VPP migration of server revoked app with bundleIdentifier: %@ with result: %d
[%@]: Rewrote a Revoked receipt for app: [%@] [%@] [%ld bytes]
[%@]: Rewrote the receipt for app: [%@] [%ld bytes]
[%@]: Attempted VPP migration of revoked app with bundleIdentifier: %@ with result: %d
[%@]: Managed application refresh for bundleID: %@ result: %d
[%@]: Managed application refresh for bundleID: %@ result: %d error: %@
[%@]: Receipt refresh failed for: %@, error: %@
sideLoadedDeviceBasedVPP
receipt-max-lookup-count
receipt-expiration-warning-threshold
T@"NSString",R,C,N
requestParameters
T@"NSData",R,C,N
The request data must be less than %d bytes
T@"NSDictionary",C,D,N
Tq,D,N
TB,D,N
destinationFileName
T@"NSDictionary",R,N
destinationURLString
DPInfoData
TB,R,N,GisDRMFree
externalAsset
TB,R,N,GisExternalAsset
fileProtectionType
localPath
mediaLibraryProtectionType
pathExtension
processingTypes
SINFData
sourceURLString
variantIdentifier
SINFs
com.apple.itunesstored.CancelPreordersOperation
%@: Invalid response type: %@
%@: Cancel failed with failureType: %@
p2-cancel-pre-order
MEDIA_SOCIAL_ERROR_BUTTON_TRY_LATER
MEDIA_SOCIAL_ERROR_BUTTON_DELETE
MEDIA_SOCIAL_ERROR_MESSAGE_FORMAT_PLURAL_%@
MEDIA_SOCIAL_COMBINED_ERROR_%@_POST_%@_UPLOAD
MEDIA_SOCIAL_COMBINED_ERROR_%@_POST_%@_UPLOADS
MEDIA_SOCIAL_COMBINED_ERROR_%@_POSTS_%@_UPLOAD
MEDIA_SOCIAL_COMBINED_ERROR_%@_POSTS_%@_UPLOADS
UPLOAD_ERROR_MESSAGE_FORMAT_PLURAL_%@
MEDIA_SOCIAL_ERROR_MESSAGE_FORMAT_%@
UPLOAD_ERROR_MESSAGE_FORMAT_%@
UPLOAD_ERROR_MESSAGE_AUDIO
UPLOAD_ERROR_MESSAGE_IMAGE
UPLOAD_ERROR_MESSAGE_SOUND_BITE
UPLOAD_ERROR_MESSAGE_VIDEO
MEDIA_SOCIAL_ERROR_BUTTON_OK
MEDIA_SOCIAL_ERROR_MESSAGE_FORMAT_%@_DUE_TO_ERROR_%@
T@"<MediaSocialErrorDelegate>",W,N,V_delegate
T@"NSArray",R,C,N
itemKinds
%@: Could not delete asset file: %@, URL: %@
v32@?0@"SSVMediaSocialPostArtist"8Q16^B24
upload
artists
postEntity
T@"MediaSocialPostEntity",R,N
album_id
asset_token
asset_token_type
asset_url
category_name
error_code
error_domain
error_message
owns_asset
parent_relationship_type
parent_upload_id
preview_frame_time
subtitle
upload_time
%@: Invalid chunk index: %ld, for bytes written: %lld, bytes to hash: %ld
%@: Hash mismatch for chunk: (%lld:%lld), %@ should be %@
com.apple.itunesstored.DownloadErrorController
B16@?0@"DownloadError"8
_notification
T@,&,N,G_notification,S_setNotification:,V_notification
T@"NSOrderedSet",R,N
T@"NSString",C,N,V_downloadKind
downloadTitle
T@"NSString",C,N,V_downloadTitle
validError
TB,R,N,GisValidError
DOWNLOAD_FAILED_TITLE_GENERIC_PLURAL
DOWNLOAD_FAILED_TITLE_GENERIC
DOWNLOAD_FATAL_MESSAGE_%@
DOWNLOAD_FATAL_MESSAGE_ONE_%@
DOWNLOAD_FATAL_MESSAGE_PLURAL_%@_%ld
DOWNLOAD_FAILED_DONE
DOWNLOAD_FAILED_RETRY
%@: Retry downloads from error alert
INSTALL_FAILED_BODY_FORMAT_%@
INSTALL_FAILED_BODY_FORMAT_ONE_%@
INSTALL_FAILED_BODY_FORMAT_PLURAL_%@_%ld
DOWNLOAD_FAILED_BODY_FORMAT_%@
DOWNLOAD_FAILED_BODY_FORMAT_ONE_%@
DOWNLOAD_FAILED_BODY_FORMAT_PLURAL_%@_%ld
DOWNLOAD_FAILED_BODY_GENERIC
DOWNLOAD_FAILED_BODY_GENERIC_PLURAL_%@
DOWNLOAD_FAILED_TITLE_AUDIOBOOK_PLURAL
DOWNLOAD_FAILED_TITLE_AUDIOBOOK
DOWNLOAD_FAILED_TITLE_MOVIE_PLURAL
DOWNLOAD_FAILED_TITLE_MOVIE
DOWNLOAD_FAILED_TITLE_SONG_PLURAL
DOWNLOAD_FAILED_TITLE_SONG
DOWNLOAD_FAILED_TITLE_MUSIC_VIDEO_PLURAL
DOWNLOAD_FAILED_TITLE_MUSIC_VIDEO
DOWNLOAD_FAILED_TITLE_PODCAST_PLURAL
DOWNLOAD_FAILED_TITLE_PODCAST
DOWNLOAD_FAILED_TITLE_RINGTONE_PLURAL
DOWNLOAD_FAILED_TITLE_RINGTONE
DOWNLOAD_FAILED_TITLE_APPLICATION_PLURAL
DOWNLOAD_FAILED_TITLE_APPLICATION
DOWNLOAD_FAILED_TITLE_TV_PLURAL
DOWNLOAD_FAILED_TITLE_TV
DOWNLOAD_FAILED_TITLE_TONE_PLURAL
DOWNLOAD_FAILED_TITLE_TONE
NOT_ENOUGH_SPACE_TITLE
NOT_ENOUGH_SPACE_SETTINGS
NOT_ENOUGH_SPACE_SPECIFIC_%@
NOT_ENOUGH_SPACE_SPECIFIC_PLUS_ONE_%@
NOT_ENOUGH_SPACE_SPECIFIC_PLURAL_%@_%ld
NOT_ENOUGH_SPACE_SINGULAR
NOT_ENOUGH_SPACE_PLURAL
prefs:root=General&path=USAGE
_PLURAL
_PLUS_ONE_%@
_PLURAL_%@_%d
TOO_BIG_FOR_NETWORK_SPECIFIC
TOO_BIG_FOR_NETWORK_SPECIFIC_NO_ITUNES
TOO_BIG_FOR_NETWORK_SPECIFIC_NO_WIFI
TOO_BIG_FOR_NETWORK_BODY
TOO_BIG_FOR_NETWORK_BODY_NO_ITUNES
TOO_BIG_FOR_NETWORK_BODY_NO_WIFI
ITEM_TOO_BIG_FOR_NETWORK_BODY
ITEM_TOO_BIG_FOR_NETWORK_BODY_NO_ITUNES
ITEM_TOO_BIG_FOR_NETWORK_BODY_NO_WIFI
TOO_BIG_FOR_NETWORK_TITLE
TOO_BIG_FOR_NETWORK_TITLE_PLURAL
ITEM_TOO_BIG_FOR_NETWORK_TITLE
ITEM_TOO_BIG_FOR_NETWORK_TITLE_PLURAL
canDownloadInITunes
TB,N,V_canDownloadInITunes
constrainedSizeLimit
Tq,N,V_sizeLimit
com.apple.itunesstored.UserNotificationCenter
completionBlock
T@?,C,N,V_completionBlock
canceled
TB,R,N,GisCanceled,V_isCanceled
userNotification
T^{__CFUserNotification=},R,N
client_type
Tq,R,N,V_downloadIdentifier
downloadSessionProperties
T@"DownloadSessionProperties",C,N,V_downloadSessionProperties
T@"NSString",C,N,V_clientIdentifier
Tq,N,V_handlerIdentifier
TB,N,V_hasRestoreData
restoreDataSize
Tq,N,V_restoreDataSize
T@"NSError",&,N,V_error
(AH: T:%lld / D:%lld / B:%@)
T@"NSString",C,N,V_artistName
T@"NSString",R,N,V_bundleID
clientID
T@"NSString",C,N,V_clientID
itemID
T@"NSNumber",C,N,V_itemID
itemName
T@"NSString",C,N,V_itemName
isRedownload
TB,N,V_isRedownload
%@: Checking purchase history for %lu items
%@: Found %lu purchased items
purchaseHistoryItems
purchasedItems
ownsCheck
bundle-owns-check
bids
diskUsage
hasConsumedData
overrideProgress
TB,N,V_overrideProgress
percentComplete
Td,R,N
resumptionOffset
%@: Checking %lu hashes with chunk size: %lld for file: %@
%@: Could not open asset to check hashes: %@
%@: Could not malloc data buffer to check hashes
%@: Read failed during hash check: %@
%@: Got md5: %@ when expecting md5: %@
filePath
hashes
numberOfBytesToHash
T@"ISDialog",R
displaysOnLockscreen
dialogResponse
T@"SSVDialogResponse",R,C
resultingError
soonestExpiring
T@"ISSoftwareApplication",&,N,V_soonestExpiring
soonestExpirationDate
T@"NSDate",&,N,V_soonestExpirationDate
expiring
T@"NSSet",R,N,V_expiring
refreshed
T@"NSSet",R,N,V_refreshed
T@"NSSet",R,N,V_revoked
PASSCODE_CANCEL
PASSCODE_OK
tokenBlock
com.apple.message-payload-provider
v32@?0@"NSString"8Q16^B24
%@: Fetching enabled kinds
%@: Could not fetch kinds: %@
%@: Found enabled kinds: %@
enabled-media-kinds
_MediaContentTasteUpdateResponseTimeIntervalSinceReferenceDate
preference-service-scheduled-sync-period-in-minutes
preference-service-sync-url
[%@] Refresh interval in the bag (%lf), setting syncInterval to %lf
If-None-Match
If-Match
application/x-protobuf
B16@?0@"SSVMediaContentTasteItem"8
SSVMediaContentTasteItemTasteTypeToMPMediaEntityLikedState
[%@] Operation was created without an active account, sending error.
[%@] Returning response: %@, error: %@
[%@] Entity with persistenID: %lld, liked_state: %lld for property: %@ is imported and has the correct liked state
[%@] Entity with persistenID: %lld is imported and liked state updated from: %lld to: %lld for property: %@
[%@] Entity with persistenID: %lld is imported and liked state could not be updated from: %lld to: %lld for property: %@
[%@] Updating liked state for entity with persistenID: %lld of type %@ is not supported
MPMediaLibrary
[%@] processing %lu storeAdamId updates
NonMediaItemStoreAdamIds
longLongValue
[%@] Removing [Count:(%lu), items:(%@)] non media items from import list
subscription_store_item_id
SELECT item_pid, liked_state, store_item_id, subscription_store_item_id, store_saga_id, is_subscription FROM item_store JOIN item_stats USING (item_pid) WHERE 
[%@] processing tracks with pendingItemCount: %lu, currentBatchCount: %lu for property: %@
[%@] Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld for property: %@ will be imported to include subscription data source
[%@] Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld for property: %@ has a storeSagaID: %lld and will not be updated
[%@] Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld, liked_state: %lld for property: %@ is imported and has the correct liked state
[%@] Track with storeItemID: %lld will be imported
v32@?0@"ML3DatabaseRow"8@"NSError"16^B24
[%@] Updated liked state to: %lld for track with persistenID:%lld
[%@] Error updating liked state to: %lld for track with persistenID:%lld
v32@?0@"NSNumber"8@"NSNumber"16^B24
[%@] processing albums with pendingItemCount: %lu, currentBatchCount: %lu
SELECT album_pid, liked_state, store_playlist_id, item_store.item_pid, item_store.store_saga_id, item_store.is_subscription FROM album JOIN item_store ON (album.representative_item_pid == item_store.ROWID) WHERE item_store.store_playlist_id
[%@] Album with albumStoreID: %lld, persistenID: %lld will be imported to include subscription data source
[%@] Album with storeItemId: %lld, albumPid: %lld, has storeSagaID: %lld and will not be updated
[%@] Album with storeItemId: %lld, albumPid: %lld, liked_state: %lld is imported and has the correct liked state
[%@] Album with storeItemID: %lld will be imported
[%@] Updated liked_state to:%lld for album with albumPid:%lld
[%@] Error updating liked_state to:%lld for album with albumPid:%lld
[%@] updated tracks:(%lu), updated albums:(%lu), new items to import[Count:(%lu), items:(%@)]
[%@] Error importing %lu tracks to the library. %@
[%@] Imported %lu mediaItems for %lu storeAdamIds
[%@] Not updating liked_state for track with persistentID: %lld, storeAdamID: %lld as it has a valid storeSagaID: %lld
[%@] StoreAdamIds (%@) are marked as non-importable and will not be retried
[%@] Error updating StoreAdamIds (%@) as non-importable
v24@?0@"NSArray"8@"NSError"16
[%@] Finished updating media taste for tracks/albums in %f seconds
[%@] processing %lu playlist updates
[%@] processing playlists with pendingplayListCount: %lu, currentBatchCount: %lu
SELECT container_pid, liked_state, cloud_global_id FROM container WHERE cloud_global_id
[%@] Container with PlaylistGlobalId: %@, persistentID: %lld, liked_state: %lld is imported and has the correct liked state
[%@] Ending loop with pendingplayListCount: %lu
[%@] Updated liked_state to:%lld for playlist with playlistID:%lld
[%@] Error updating liked_state to:%lld for playlist with playlistID:%lld
[%@] Playlist Import [Count:(%lu) - Ids:(%@)]
[%@] Error adding tasty playlist %@ to the library. %@
v24@?0@"MPMediaPlaylist"8@"NSError"16
[%@] Finished updating media taste for global playlists in %f seconds
MediaContentTaste
SyncResponse-%llu
[MediaContentTasteUpdateOperation] Exception thrown while decoding archive: %@
[MediaContentTasteUpdateOperation] Exception thrown while encoding archive: %@
ETag
contentTasteItemUpdates
T@"NSArray",C,V_contentTasteItemUpdates
T@"SSVMediaContentTasteUpdateResponse",R,V_response
shouldInvalidateLocalCache
TB,V_shouldInvalidateLocalCache
invalidProductIdentifiers
^v16@?0@"NSObject<OS_xpc_object>"8
B24@?0r*8@"NSObject<OS_xpc_object>"16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iTunesStore_Sim/iTunesStore-1442.182/Daemon/EBookManifest.m
Empty path
com.apple.itunesstored.EBookManifest
Purchases.plist
Shared.plist
Books.plist
%@: Removed manifest itemID entry at index: %ld
%@: Removed manifest permalink entry at index: %ld
%@: Could not serialize data: %@
%@: Could not write data: %@
%@: Invalidating after external change: %@
%@: Could not read data: %@
%@: Could not unserialize data: %@
manifestPath
Album
Artist
artwork-template-name
Copyright
DSID
AppleID
Flavor
Genre
Path
Human Readable Publication Version
isExplicit
isSample
iTunesU Permlink
Languages
PageProgression
Page Progression Direction
Persistent ID
PlaylistID
Publication Version
Release Date
Sort Album
Sort Artist
Sort Name
Storefront ID
Name
usesSharedAsset
com.apple.books.plist.changed
com.apple.itunesstored.DownloadPipeline
com.apple.itunesstored.DownloadPipeline.background
com.apple.itunesstored.DownloadPipeline.prepare
com.apple.itunesstored.DownloadPipeline.processing
com.apple.itunesstored.DownloadPipeline.discretionaryDownloads
com.apple.itunesstored.DownloadPipeline.nonDiscretionaryDownloads
[Download]: Adding download(s): %@
%@: Ignoring request to reprioritize download %@ for legacy client.
[Download]: Reprioritizing to high task: %lu for download: %@
%@: Not reprioritizing task for legacy client: %lu for download: %@
%@: Reprioritizing to default task: %lu to restart download: %@
[Download]: Reprioritized download: %@
%@: Cancel task: %lu to restart download: %@
%@: Stop preparation operation for download: %@
%@: Stop session: %lld for download: %@
%@: Stop task: %lu for download: %@
%@: Cancel operation: %@ for download: %@
[Download]: Fail download: %lld after session error: %@
v16@?0@"FinishDownloadOperation"8
[Download]: Consumer failed for task: %lu for download: %lld with error: %@
%@: Did not receive partial content response for task: %lu
%@: Restart task: %lu after 408 response
%@: Truncate and restart task: %lu after 416 response
%@: Cancel download task: %lu for invalid HTTP status code: %ld
X-Apple-JADownloadQueue-Token
Retry-After
[Download] URLSession task complete. task=%@
[Download] Received task did finish with no task state: %lu, error: %@
Task completed
[Download]: Restarting download: %lld after task cancel: %lu
[Download]: Download task did finish: %lu for download: %lld
[Download]: Download task failed: %lu for download: %lld with error: %@
[Download]: task: %lu, for download: %lld, after local cache failure
[Download]: Falling back to file download: %lld, after error: %@
v24@?0q8@"NSURLCredential"16
[Download]: Cancel local-cache download: %lld, for error: %@
[Download]: Retry scheduled for task: %lu, download: %lld, error: %@
[Download]: Reset data consumer for task: %lu, with resumption offset: %llu
bytes=%llu-
Range
%@: Providing resumption offset: %llu for task: %lu
%@: Removed resumption offset for task: %lu
v24@?0@"ExpiredDownloadRecoveryOperation"8@"ExpiredDownloadRecoveryResponse"16
com.apple.itunesstored.DownloadPipeline.auth
%@: Set download progress: %lld [%.2f, %.2f sec]
[Download] Fail download: %lld after disavow from required handler
Finished download
[Download]: Ignoring finish result after download removed: %lld
[Download]: Fail download: %lld after error: %@
[Download]: Cancel failed download: %lld after error: %@
[Download]: Saved safe harbor data for download: %lld with bundleIdentifier: %@
[Download]: Cancel failed download due to verfication error: %lld after error: %@
[Download]: Removing placeholder for %@
[Download]: Download operation complete for download: %lld
%@: Starting handler: %lld for download: %lld
[Download]: Finshing prepare with 0 download ID
Prepared download
[Download]: Created Scratch directory: %@ for download: %lld bundleIdentifier: %@
[Download]: Created Scratch directory: %@ for download: %lld
[Download]: Cancelling existing tasks in session: %@
v16@?0@"NSArray"8
[Download]: Timeout while waiting to cancel existing tasks in session: %@
[Download]: Updated per device download: %lld restore state to: %@
[Download]: Processing download after "finish only" response: %lld
[Download]: Cancel download after failed prepare: %lld
[Download]: Queue download: %lld to discover assets later.
[Download]: Fail download after failed prepare: %lld
[Download]: Starting handler: %lld for download: %lld
[Download]: Starting task: %lu with priority: %ld for download: %lld bundleIdentifier: %@ in session: %@
[Download]: Starting task: %lu with priority: %ld for download: %lld in session: %@
[Download]: download task complete task=%@
[Download]: Fail download %lld after recovery attempt
[Download]: Cancel download %lld after recovery attempt
v24@?0@"PrepareDownloadOperation"8@"PrepareDownloadResponse"16
v24@?0@"PrepareDownloadOperation"8^B16
v24@?0@"FinishDownloadOperation"8@"FinishDownloadResponse"16
User Stopped
Unrecoverable Error
Download Error
[Download]: Download Failed for download: %lld reason: %@
%@: Reconnect with nsurlsessiond
[Download]: Setting phase with download ID of 0
[Download]: waiting for task completion
[Download]: download task complete!
T@"PrepareDownloadResponse",&,V_response
waitForDownload
TB,V_waitForDownload
com.apple.itunesstored.DistributedNotificationCenter
%@: Register observer: %@ / %@
%@: Unregister observer: %@ / %@
observedNotificationNames
DistributedNotificationObservers
com.apple.itunesstored.KeyValueObserver
T@?,R,N,V_block
keyPath
T@"NSString",R,N,V_keyPath
object
T@,R,N,V_object
com.apple.itunesstored.EventMonitor
%@: Scheduling poll in %.2f seconds
_lastOccurrenceCheckTime
Td,N,G_lastOccurrenceCheckTime,S_setLastOccurrenceCheckTime:,V_lastOccurrenceCheckTime
hasOccurred
pollInterval
Tq,N,V_pollInterval
shouldKeepDaemonAlive
TB,N,V_shouldKeepDaemonAlive
testBlock
T@?,C,N,V_testBlock
EventMonitor
RestoreAccountIDs
accountCount
dataError
hardError
installError
RestoreItemKinds
%@.itemCount.total
%@.itemCount.%@
softError
RestoreStoreFrontIDs
storeFrontCount
%@.successCount.%@
transferError
%@.%@.%@.%@.%ld
%@.%@.%@.total
com.apple.itunesstored.restore
com.apple.itunesstored.EventDispatcher
%@: Posting event: %@
%@: Cannot register unentitled event monitor: %@
%@: Registered event monitor: %@
com.apple.itunesstored.ManagedApplicationController
com.apple.itunesstored.ManagedApplicationController.background
[%@]: Staring MID refresh request
[%@]: Skipped refresh MID request do to currently running request
StoreKitClientPaymentOptionSupportsDeferredPayment
StoreKitClientRefreshDidFinishNotification
com.apple.itunesstored.StoreKitClient.%p
com.apple.itunesstored.StoreKitClient.external.%p
%@: Adding payment: [%ld, %@] for client: %@
%@: Not allowed to make payment: %@
%@: Cancel %lu downloads for client: %@
%@: Adding client to DB: %d / %@ / %@
%@: Pause %lu downloads for client: %@
%@: Ignoring repeat restore request: %@
%@: Not allowed to restore transactions: %@
v16@?0@"MicroPaymentQueueResponse"8
%@: Restoring completed transactions for client: %@
%@: Resume %lu downloads for client: %@
%@: Starting %lu downloads for client: %@
%@: Adding %lu new downloads for client: %@
%@: Buying payment: %@
%@: Finishing unknown payment: %@
%@: Finishing for state: %ld, payment: %@
%@: Finishing purchased payment: %@
%@: Received finish for payment that is finishing or finished: %@
%@: Canceling %lu downloads
%@: Buy failed with error: %@ for payment: %@
%@: Buy finished for payment: %@
%@: Deleting payment after finish: %@
%@: Flagging payment as transient failed: %@
(downloadID=%@) AND (payment.client=%@)
%@: Refresh failed with error: %@: %@
%@: Refresh finished: %@
%@: Restore completed transactions finished for client: %@
%@: Restore completed transactions failed for client: %@ with error: %@
StoreDemoMode
com.apple.demo-settings
%@: Received restore batch response for client: %@
%@: Client checked in mid-refresh: %@
%@: Tried to refresh from server, but either had no payments or no usable DSIDs
%@: Refreshing from server (%ld; %@; %@)
MICRO_PAYMENTS_RESTRICTED_BODY
MICRO_PAYMENTS_RESTRICTED_TITLE
microPaymentClientID
T@"NSManagedObjectID",R
XPCClient
T@"XPCClient",&
clientState
TB,R,GisSandboxed
firstReadyPaymentID
openTransactions
com.apple.itunesstored.StoreKitClient
MCFeatureInAppPurchasesAllowed
com.apple.itunesstored.StoreKitClient.completion
en_US_POSIX
yyyy-MM-dd HH:mm:ss ZZZ
X-Request-TimeStamp
AppStore
storefront-header-suffix
v24@?0@"SSLookupResponse"8@"NSError"16
%@: Performing location lookup
%@: Performing platform lookup
%@: Authenticating to personalize response
%@: Authentication failed: %@
%@: Authenticated for account: %@
%@: Performing personalization lookup
lookupProperties
T@"SSLookupProperties",R
personalizationStyle
lookupResponse
T@"SSLookupResponse",R
nearby-apps
storeplatform-lookup-url
v24@?0q8^B16
T@"NSArray",C,N,V_assets
downloadPolicy
T@"SSDownloadPolicy",C,N,V_downloadPolicy
thinned-assets
software
vpn-plugin
bundle-version
has-messages-extension
launch-prohibited
display-image
needs-shine
UINewsstandBindingEdge
UINewsstandBindingType
messages-display-image
com.apple.itunesstored.cancelError
com.apple.itunesstored.cancelReason
com.apple.itunesstored.dataConsumer
systemgroup.com.apple.media.shared.books
META-INF
sinf.xml
%@: We have a normal download: %lld
iTunesArtwork
%@: Writing EPR data for download: %lld to path: %@
%@: Error EPR data for download: %lld to path: %@ error: %@
Using system group container path is %s
Staging
Error getting system group container: %llu
Using system group container path is: %s
%@: Updating purchase manifest at shared path: %@
%@: Updating shared manifest at path: %@
%@: Updating purchase manifest: %@
%@: Moved file URL: %@ to downloads directory: %@
%@: Could not install non-existant file: %@
%@: Saving Book to : %@
%@: Book already at destination: %@
%@: Moving file: %@ to path: %@
%@: Installed file: %@
epub
ibooks
%@: Failing install after unzip failure for file: %@, error: %@
full-size-image
software-package
vpn-plugin-package
newsstand-image
transit-data
asset-pack-manifest
%@ [url = %@, variantID = %@]
variantIds
md5s
md5-size
%@: Running claim with body: %@
up-to-date-claim
authenticationReasonDescription
T@"NSData",&,N
suppressesErrorDialogs
%@: Validation failure. sourceURL required for bundleIdentifier: %@
%@: Download was incomplete for bundlerIdenfier: %@ path: %@
%@: Invalid scratch directory for bundlerIdenfier: %@ path: %@
%@: Failed to extract Info.plist for bundleIdentifier: %@
%@: Invalid archive for bundlerIdenfier: %@ path: %@
%@: Invalid path for bundlerIdenfier: %@ path: %@
%@: Scratch directory for %@ result: %d
Payload
.app
%@: appName: %@
%@: App payloadDirectory: %@
Info.plist
%@: Info.plist path: %@
%@: Warning: bundleVersion: %@ does not match expected bundleVersion: %@
%@: Failed bundleIdentifier: %@ does not match expected bundleIdentifier: %@
%@: Unable to load application meta data to verify bundleIdentifier: %@
%@: Unable to locate application meta data to verify bundleIdentifier: %@
bundleFileType
Ti,N,V_bundleFileType
sourceURL
T@"NSString",C,N,V_sourceURL
Failed to open %s : %s
Failed to read %lu bytes (got %ld) from start of %s : %s
File starts with 0x%02hhx%02hhx%02hhx%02hhx; expected 0x%02hhx%02hhx%02hhx%02hhx
com.apple.streamingzip.incomplete_extraction
Got unknown error from getxattr when checking for %s on %s : %s
scratch
.app/Info.plist
%@: Preparing to rescue application with bundleID: %@
%@: Attempting rescue restore for bundleID: %@
%@: Rescue restore attempt for bundleID: %@ failed due to error: %@
%@: iTunes sync in progress for bundleID: %@
%@: Restore in progress for bundleID: %@
%@: Application does not need rescue, bundleID: %@ is already installed!
%@: Cannot find application with bundleID: %@
T@?,C,N
artist
artist_id
order_index
upload_id
activityId
pollDuration
pending
processing
published
success
serviceErrorLabel
serviceErrorMessage
FacebookError
FacebookAuthError
InvalidArgument
MissingParameter
NotAuthorized
ResourceAlreadyExists
TwitterAuthError
TwitterError
activityURL
T@"NSURL",C,N,V_activityURL
Td,N,V_pollDuration
T@"NSString",C,N,V_status
T@"NSString",C,N,V_serviceErrorLabel
T@"NSString",C,N,V_serviceErrorMessage
statusCode
Tq,N,V_statusCode
SpringBoardUtilityApplicationStateChangeNotification
com.apple.itunesstore.SpringBoardUtility
com.apple.itunesstore.SpringBoardUtility.springboard
com.apple.itunesstore.notifications
%@: Activating alert: %@
com.apple.ios.StoreKitUIService
v32@?0@"NSString"8@"NSNumber"16^B24
Snapshots
%@: Removing snapshots at path: %@
%@: Invalid value type for badge (%@, %@)
AppWakeup
%@: Could not launch: %@: %@
%@: No pid for display ID: %@
%@: Taking process assertion: %@ for: %.2f seconds with reason: %@
%@: Could not take process assertion: %@
%@: Releasing power assertion: %@
[%@]: SSClient requested to set badge of %@ to '%@'
ServiceTouchIDAlertViewController
account@example.com
Touch ID
Use Password
Cancel
v16@?0@"SSXPCConnection"8
v16@?0@"NSDictionary"8
%@: Plugin connection disappeared: %@
%@: Registered plugin connection: %@
%@: Requesting plugin connection
com.apple.itunesstored.sbplugin.requestconnection
%@: Plugin timeout with connection: %@
frontmostClientIdentifier
screenLocked
TB,R,GisScreenLocked
options
T@"NSDictionary",C,N,V_options
viewControllerName
T@"NSString",C,N,V_viewControllerName
timeoutTimer
T@"NSObject<OS_dispatch_source>",&,N,V_timeoutTimer
UIApplicationLaunchOptionsDeletedFamilyContentKey
com.apple.itunesstored.deletefamilycontent
UIApplicationLaunchOptionsNewsstandDownloadsKey
com.apple.itunesstored.finishdownload
appIdentifier
T@"NSString",C,N,V_appIdentifier
launchOptions
T@"NSDictionary",C,N,V_launchOptions
shouldLaunchApp
TB,N,V_shouldLaunchApp
processAssertionIdentifier
T@"NSString",C,N,V_processAssertionIdentifier
processAssertionInterval
Td,N,V_processAssertionInterval
processAssertionReason
T@"NSString",C,N,V_processAssertionReason
ProcessAssertionReasonBackgroundDownload
ProcessAssertionReasonTaskCompletion
com.apple.itunesstored.DownloadController
com.apple.itunesstored.DownloadController.external
com.apple.itunesstored.SSDownloadManager.downloadCompleted.%@
SSDownloadQueue
%@: Unable to rescue VPP Applicaton with bundleID: %@
%@: Reset %ld downloads after prioritize
[Download]: User triggered prioritization but placeholder has no corresponding download.
%@: Canceling all %lu downloads for %@
v24@?0@"DownloadManagerClient"8@"NSObject<OS_xpc_object>"16
%@: Finishing %lu downloads for client: %@
v24@?0@"NSIndexSet"8@"NSArray"16
v24@?0q8r^@16
%@: Skipping diverted software downloadID: %lli for client: %@
%@: Adding diverted software downloadID: %lli for client: %@
%@: Inserting %lu downloads for %@
%@: Sending %lu downloads for %@ to appstored
%@: Download insert failed: %ld, %@
%@: Updated download with final phase: %@ downloadID: %@
%@: Updated download with phase: %@ downloadID: %@
v16@?0@"DownloadManagerClient"8
%@: No endpoint for client manager: %@
%@: No client identifier for client manager
%@: Could not create connection for endpoint: %@
%@: Registered client: %@, %@, %@
%@: Setting handler: %lld for download: %lld client: %@
%@: Failed to apply download handler: %@
%@: Replacing %lu downloads with %zu downloads for client: %@
%@: Retry %lu downloads for client: %@
%@: No endpoint for asset handler: %lld
%@: Could not create connection for endpoint: %lld
%@: Finish session %lld with type %lld
%@: Changing handler properties: %lld, %@
v16@?0@"DownloadHandlerClient"8
%@: Canceling download %@ for client: %@
%@: Cancel requested for a non-cancellable download %@ for client: %@
%@: Pausing %ld downloads for %@, forced: %d
[%@]: Ignoring pausing of software downloadID: %@
%@: Can't pause download: %lld
%@: Can't pause phase: %@
[%@]: Unable to prioritize software downloadID: %@
[Download]: Attempting rescue restore for bundle ID: %@
%@: Rescue for %@, success: %d, error: %@
%@: Ignoring rescue for %@, operation already queued.
%@: Resuming %lld downloads for %@
[%@]: Unable to resume software downloadID: %@
%@: Restarting %lld downloads for %@
[%@]: Unable to restart software downloadID: %@
%@: Retrying all failed restore downloads
com.apple.itunesstored.Daemon
%@: Starting...
%@: Starting XPC server
%@: Started
%@: battery saver mode started
battery saver mode started
%@: battery saver mode ended
battery saver mode ended
v24@?0@"NSNumber"8@"NSError"16
com.apple.appinstallation
com.apple.language.changed
Removing default png snapshots after storefront change
Logs
[%@]: Requesting MID SINFs update
com.apple.itunesstored.launch
Daemon: Rebooting after language change
[ApplicationWorkspace]: Restoring placeholder for %@
[ApplicationWorkspace]: Updating placeholder for %@
[ApplicationWorkspace]: Placeholder %@ for %@ success: %d
restored
updated
[ApplicationWorkspace]: Placeholder not installed for %@ because application not installed
T@"NSString",C,N,V_requestIdentifier
com.apple.itunesstored.lock.createaccount
T@"SSAuthenticationContext",R,V_authenticationContext
responseType
Tq,R,V_responseType
[%@]: Adding download with bundleID: %@
[%@]: Skipping store download %@ due to lack of bundleID
[%@]: Skipped over unexpected download kind %@
ASDJobManifest
BIO_PROMPT_TITLE
BIO_USE_PASSWORD
BIO_CANCEL
%@: Could not present TouchID alert
matchBlock
matchType
Tq,N,V_matchType
biometricIdentities
T@"NSArray",C,N,V_biometricIdentities
T@"NSData",C,N,V_tokenData
database
T@"SSSQLiteDatabase",R,N,V_database
pipeline
T@"DownloadPipeline",R,N,V_pipeline
policyManager
T@"DownloadPolicyManager",R,N,V_policyManager
activeDownloadIdentifiers
T@"SSSQLiteDatabase",&,N,V_database
externalState
T@"ExternalDownloadState",&,N,V_externalState
T@"DownloadPipeline",&,N,V_pipeline
T@"DownloadPolicyManager",&,N,V_policyManager
com.apple.MobileAsset
%@: Preparing download: %lld
%@: Flagging download %lld asset: %lld as not downloaded
%@: Download %lld asset: %lld is already downloaded
%@: Ignoring software download: %lld
%@: Skip prepare for finished download: %lld
%@: Cancel download that exists in library: %lld
%@: Cancel invalid automatic download: %lld
%@: Flagging as "finish only" for hard-failed restore download: %lld
%@: Keeping no asset download safe harbor data with finish only for download: %lld bundleID: %@
%@: Updated download: %lld bundleID: %@ to only restore data
%@: Skip prepare for download with no media asset: %lld
%@: Flagging download %lld as "finish only", already have asset: %lld
%@: Skipping prepare for file URL download: %lld
%@: Keeping safe harbor data with finish only for atc download: %lld bundleID: %@
%@: Asking data consumer to override progress value
%@: Fail download without enough disk space: %lld
localhost
Content-Range
%@: Using media asset: %lld, for download: %lld, is local cache: %d, URL: %@
%@: No local cache URL for asset: %lld, error: %@
%@: Replacing URL for asset: %lld, with local cache URL: %@
v32@?0^{__CFURL=}8^{__CFDictionary=}16^{__CFError=}24
bytes=0-1
HEAD
%@=%@
%@: Running %@ operation to get size for asset: %lld
%@: Found size: %lld for asset: %lld
%@: Failed to find size for asset: %lld
%@: Server does not support ranged requests for: %lld
purchaseHistory
match
movie
music
musicvideo
tvshow
SZExtractorOptionsHashType
SZExtractorHashTypeMD5
SZExtractorHashTypeSHA1
SZExtractorOptionsHashesArray
SZExtractorOptionsHashedChunkSize
MCFeatureITunesAllowed
MCFeatureBookstoreAllowed
%@: Determined asset size to be %llu bytes
%@: Discovered %llu bytes already transfered
%@: Accounted for %llu bytes of initial ODR
%@: Not enough disk space for %lld/%lld, only %llu is available: %@
v28@?0C8Q12^{__CFError=}20
ignoresDownloadHandler
com.apple.itunesstored.
discretionary.
powered.
wifi.
timeout_%f.
AVAssetDownloadSessionOptions
T@"NSDictionary",C,N,V_AVAssetDownloadSessionOptions
clientSecondaryIdentifier
T@"NSString",C,N,V_clientSecondaryIdentifier
dataConsumer
T@"DownloadDataConsumer",&,N,V_dataConsumer
discretionary
TB,N,GisDiscretionary,V_discretionary
destinationPath
T@"NSString",C,N,V_destinationPath
requiresPowerPluggedIn
TB,N,V_requiresPowerPluggedIn
taskPriority
Tq,N,V_taskPriority
bytesPerSecondLimit
Tq,N,V_bytesPerSecondLimit
timeoutIntervalForRequest
Td,N,V_timeoutIntervalForRequest
loadingPriority
T@"NSNumber",C,N,V_loadingPriority
T@"NSURLRequest",C,N,V_URLRequest
T@"NSString",C,N,V_kind
backgroundOperations
T@"NSArray",C,N,V_backgroundOperations
TB,N,V_ignoresDownloadHandler
TB,N,GisLegacyClient,V_legacyClient
mediaAssetSize
Tq,N,V_mediaAssetSize
URLSessionIdentifier
downloadRestoreState
T@"NSNumber",C,N,V_downloadRestoreState
isPerDeviceVPP
TB,N,V_isPerDeviceVPP
itml-app-urls
manifestURL
T@"NSURL",&,N,V_manifestURL
bundledManifestURL
T@"NSURL",&,N,V_bundledManifestURL
T@"NSString",&,N,V_clientIdentifier
T@"NSString",&,N,V_userAgent
scheduledInBackground
TB,N,V_scheduledInBackground
completion
T@?,C,N,V_completion
com.apple.itunesstored.UpdatableAssetController
com.apple.itunesstored.updatable-assets-refresh
[%@ _scheduleUpdateAssetsOperationWithManifestURL] manifestURL: %@, bundledManifestURL:%@, clientIdentifier: %@, userAgent: %@, scheduledInBackground: %@
[%@ _scheduleUpdateAssetsOperationWithManifestURL] network type is none, so deferring
[%@ _scheduleUpdateAssetsOperationWithManifestURL] defer background task until we have wifi, so deferring
v24@?0@"NSError"8@"NSString"16
[%@ _scheduleUpdateAssetsOperationWithManifestURL] error performing asset garbage collection for client: %@ %@
[%@] Bag did load: [kUpdatableAssetManifestBagKey: %@]
MusicUISupport
manifest.json
[%@ _networkTypeChangedNotification]
com.apple.itunesstored.UpdatableAssetController.updateAssets
com.apple.itunesstored.AppReceiptController
[%@] Responding to Notification repair -- bundleIdentifier: [%@]
[%@]: managed application request for bundleIdentifier:  %@ was sucessful.
StoreKit
[%@] Responding to XPC -- SSXPCMessageRefreshAllAppReceipts
[%@] No reply for xpc connection
[%@] Responding to XPC -- SKXPCMessageRefreshReceipt [%@]
com.apple.itunesstore.AppReceiptController.self
[%@] Bag does not contain [%@] -- Using Preferences [%@] == Value: [%@]
[%@] Responding to XPC -- SKXPCMessageHandleInvalidReceipt [%@]
REVOKED_MESSAGE_SINGLE_%@
REVOKED_MESSAGE_SINGLE_ANON
REVOKED_MESSAGE_PLURAL_%@_%ld
REVOKED_MESSAGE_PAIR_%@_%@
REVOKED_MESSAGE_PAIR_ANON_%@
REVOKED_MESSAGE_PLURAL_ANON_%ld
REVOKED_TITLE_PLURAL
REVOKED_TITLE_SINGLE
itms-appss://?action=lookup&ids=%@
[%@] No app with a revoked receipts
[%@] %d apps, expiring in %0.2f days
EXPIRING_MESSAGE_SINGLE_%@_%ld
EXPIRING_MESSAGE_SINGLE_ANON_%ld
EXPIRING_MESSAGE_PAIR_%@_%ld
EXPIRING_MESSAGE_PLURAL_%@_%ld_%ld
EXPIRING_MESSAGE_PLURAL_ANON_%ld_%ld
EXPIRING_TITLE_PLURAL
EXPIRING_TITLE_SINGLE
[%@] No app with an expiring receipt
[%@] Setting Receipt Revocation check interval to %@:%.2f
revocation-background-refresh-frequency
ISReceiptRevocationBackgroundCheckInterval
ISReceiptRevocationCheckIntervalCellularOverride
revocation-background-refresh-frequency-cellular
ISReceiptRevocationBackgroundCheckIntervalCellular
com.apple.itunesstored.ReceiptRevocation
ISLastReceiptRevocationBackgroundCheck
com.apple.itunesstored.MetricsController
disabled
sendDisabled
[%@] Insert Events received through XPC: %d requested by [%@]
[%@] Ignore report event for request during backoff for client: %@
[%@] Report Events requested by [%@]
com.apple.itunesstored.MetricsController.report
[%@] ignoring request to report events, since there already are %@ operations queued
v12@?0B8
[%@] Giving up after %ld retries
[%@] Scheduling backoff retry in %ld minutes
https
T@"NSURL",R,N,V_url
account.upToDateClaim
%@: Redirecting claim to URL: %@
redirectedClaimURL
T@"NSURL",C,V_redirectedClaimURL
assetToken
T@"NSString",C,N,V_assetToken
assetTokenType
T@"NSString",C,N,V_assetTokenType
uploadTime
Td,N,V_uploadTime
activities
%@: Polling status for activity: %@
activityStatus
statusPollRequests
T@"NSArray",R,C
responseBlock
download_policy
policy_data
ExplicitOffAndPreferencesEnabled
ExplicitOffAndPreferencesDisabled
ExplicitPreferenceManagerDefaultsKeyExplicitOff
ExplicitPreferenceManagerDefaultsKeyExplicitPreferencesDisabled
systemgroup.com.apple.ondemandresources
systemgroup.com.apple.media.books.managed
Updates
%@: Warning: Reverting to default behavior due to the shared documentsPath: %@ not matching the shared container path: %@
%@: Using document path: %@ with container relative path: %@
%@: Unzip document for download: %lld, at path: %@
%@: Error: file exists at document path: %@
%@: Created document path: %@ error: %@
%@: Moved staged download: %lld from source: %@ to document path: %@ result: %d
%@: Installed document for download: %lld at path: %@
[%@] Staging path set to: %@
[%@] Error: Unable to get staging path for relative path: %@
policyData
T@"SSDownloadPolicy",R,N
%@: Adding download policy %@ with size limit %lld
%@: Initialized with %lu download policies
downloadsDatabase
T@"DownloadsDatabase",R,W,N,V_database
policyIdentifiers
T@"NSSet",C,N,V_policyIDs
changesetType
Ti,N,V_changesetType
downloadPropertiesForStoppedDownloads
T@"NSDictionary",C,N,V_downloadProperties
networkType
Tq,N,V_networkType
com.apple.itunesstored.DownloadHandlerManager
com.apple.itunesstored.DownloadHandlerManager.observers
%@: Adding download handler: %@, %@
%@: Begin session with ID: %lld
%@: Client handler returned NO for open session: %lld
%@: Cancel authentication session with ID: %lld
%@: Cancel session with ID: %lld
%@: Continue authentication session with ID: %lld
%@: Disavow session with ID: %lld error: %@
%@: Disconnect session with ID: %lld
v32@?0@8@"DownloadHandlerClient"16^B24
%@: Fail session with ID: %lld error: %@
%@: Finish session with ID: %lld
%@: Pause session with ID: %lld
%@: Perform default authentication for session with ID: %lld
%@: Reject space for authentication session with ID: %lld
%@: Release session with ID: %lld
%@: Reset %ld disavowed properties for client: %@
%@: Retry session with ID: %lld
%@: Removing download handler for client: %@
%@: Using download handler %lld for client: %@
%@: Use credential: %@ for session with ID: %lld
%@: Disconnecting %lu sessions for client: %@ after 20 seconds
%@: Timing out sessions for client: %@
%@: Send session message: %lld to client: %@
%@: Running download phase: %@ for download: %lld
v32@?0@"FinishDownloadStepOperation"8Q16^B24
[ApplicationWorkspace] Install complete for download: %lld result: %@
Failed
Asset Blocked
Download Removed
Failed Permanently
Success
Using Handler
Failed Installation Verfication
Finish download result keeping safe harbor data
Restore Data Hard Fail
Restore Data
[ApplicationWorkspace] Installing download: %lld with step(s): %@
handlerReleasedDownloadPhase
initialDownloadPhase
[%@]: Diverting demoted application restore to appstored: %@
ASDRestoreDemotedApplicationsRequestOptions
ASDRestoreDemotedApplicationsRequest
[%@]: Error restoring demoted applications: %@
[%@]: Diverting claims for bundleIDs: [%@] to appstored
ASDClaimApplicationsRequestOptions
ASDClaimApplicationsRequest
[%@]: appstored replied to claim request with result: %d claimedBundleIdentifiers: [%@] error: %@
[%@]: Adding restore software download with bundleID: %@
[%@]: Adding external software download with bundleID: %@
[%@]: Skipping software download due to lack of bundleID with downloadID: %lld
[%@]: Sending restore manifest to appstored: %@
[%@]: Daemon replied to restore items request with job(s): %@ error: %@
[%@]: Sending external manifest to appstored: %@
[%@]: Daemon replied to external items request with job(s): %@ error: %@
ASDManagedApplicationRequestOptions
[%@]: Diverting managed application request with itemID: %@ externalVersionID: %@ to appstored
ASDManagedApplicationRequest
[%@]: divertManifestDownloads with %lu manifest downloads
[%@]: Added manifest download with bundleID: %@
[%@]: Skipping manifest download: %@ due to lack of bundleID
[%@]: Sending external software downloads with manifest: %@
[%@]: Daemon replied to manifest items request with jobs: %@ error: %@
[%@]: Did not find any valid manifest downloads to send to appstored
[%@]: divertSoftwarePurchase response for client: %@ with correlationID: %@ had an error: %@
v16@?0@"ASDJobActivity"8
[%@]: Diverting purchase from: %@ to appstored response
[%@]: App store daemon replied with jobs: %@ error: %@
[%@]: Non-download purchase complete.
[%@]: Could not divert purchases - too many jobs, or unexpected error: %@ divertedDownloadID: %llu
[%@]: Could not divert purchases - There were no job activites in the store purchase response
[%@]: Diverting store queue request with %lu items
[%@]: Daemon replied to download queue request with job(s): %@ error: %@
[%@]: Hiding appstored pending updates badge
ASDSoftwareUpdatesStore
[%@]: Checking for appstored updates
ASDRepairApplicationRequestOptions
[%@]: Diverting repair application request with bundleID: %@ accountDSID: %@ repairType: %ld to appstored
ASDRepairApplicationRequest
ASDInstallManifestRequestOptions
ASDInstallManifestRequest
[%@]: Telling appstored to check the automatic download queue
ASDCheckQueueRequestOptions
ASDCheckQueueRequest
[%@]: appstored replied to download queue request with result: %d error: %@
[%@]: tellAppstoredToCheckClaimsForAccountID for accountID: %@ claimStyle: %ld
sessionProperties
T@"DownloadSessionProperties",R,N,V_sessionProperties
sessionID
Tq,R,N,V_sessionID
activeHandlerIdentifier
Tq,N,V_activeHandlerIdentifier
blocksOtherDownloads
TB,N
canBePaused
needsPowerAssertion
Tf,N
sessionState
Tq,N
statusDescription
URLCredential
T@"NSURLCredential",C,N,V_urlCredential
blocks
pausable
needspowerassert
percent
watch-metrics-api-endpoint
[%@] Running report
v32@?0@"SSWatchMetricsEvent"8Q16^B24
[%@] Not running report
controller
T@"SSWatchMetricsEventsController",R,N,V_controller
%@: No session for properties: %@
%@: Launched download handler: %@
T@"DownloadSessionProperties",R
downloadSessionState
T@"NSURLCredential",R
[%@]: Failed Placeholder for %@
changeset
T@"DownloadsChangeset",R,C,N,V_changeset
T@"ApplicationHandle",C,N,V_applicationHandle
completedUnitCount
Tq,N,V_completedUnitCount
totalUnitCount
Tq,N,V_totalUnitCount
BiometricAllowsOptIn
BiometricState
BiometricAccountID
mt-tid-%@
BiometricStateEnabled
%@: Reset biometrics for client: %@
%@: Set biometrics allowed: %d for client: %@
%@: Disable biometrics for client: %@
%@: Enable biometrics for client: %@
com.apple.purplebuddy
%@: Reset keychain tokens failed while disabling biometric state for DSID: %@, error: %@
BioID:%@
allowsBiometricOptIn
biometricState
canPerformBiometricOptIn
lastRegisteredAccountIdentifier
hasRegisteredAccountIdentifier
isBiometricStateEnabled
DelayedGoto
body
delay
apnsToken
v16@?0@"NSMutableDictionary"8
%@: Waiting up to %.2f seconds for push: %@
%@: Waiting for %.2f seconds
com.apple.itunesstored.DelayedGotoSemaphore
bodyDictionary
T@"NSDictionary",R,N,V_bodyDictionary
T@,&,N,V_object
chunks
chunkSize
file-size
MicroPaymentDownload
hashArrayData
hashChunkSize
remoteURL
localURL
T@"MicroPayment",&,D,N
%@: Moved download: %lld to path: %@
%@: Attemping claim before in-app activity: %@
T@"StoreKitClientIdentity",R,C
%@: Canceling unrecoverable download after 403 response: %lld
%@: Skipping recovery after too many attempts: %lld
%@: Refreshing download: %lld using operation: %@
%@: Reset download after 403 recovery: %lld
%@: Recovery failed for download: %lld with error: %@
%@: Could not encode message: %@
createSocialPost
%@: No URL to create social post
%@: Sending post with identifier: %lld
%@: Post failed with error: %@
albumId
contentToken
contentTokenType
AssetToken
category
Explicit
parentalAdvisoryType
artistAdamId
allArtistAdamIds
Song
audioType
Audio
Image
SoundBite
%.0f
previewFrameTimeCode
Video
VideoClip
videoType
coverArtToken
coverArtTokenType
uploadTimestamp
accessToken
pageId
pageToken
facebook_page
facebook_wall
client_post_id
shareText
owner
content
createTime
isAttributed
target
shareTo
postID
Tq,N,V_postID
com.apple
v32@?0@"ISSoftwareApplication"8Q16^B24
bundleIdentifiers
itemIdentifiers
softwareLibraryItems
%@: Changing %lu keys for %@ at %@
v32@?0@"NSString"8@16^B24
%@: Could not serialize property list: %@
%@: Could not write property list: %@
v32@?0@"NSNumber"8@"SoftwareUpdateBulletinInfo"16^B24
UPDATE_NOTIFICATION_ONE_%@
UPDATE_NOTIFICATION_TWO_%@_%@
UPDATE_NOTIFICATION_PLURAL_%@_%ld
UPDATE_NOTIFICATION_TITLE
itms-appss://?action=updates
%@: Unread: %@, Read: %@
hasUnreadTitles
%@: Restoring %lu podcasts
%@: Failing podcast restore, no bag key: %@
T@"<RestorePodcastItemsOperationDelegate>",D
p2-podcast-restore
epguid
databaseIdentifier
Tq,N,V_databaseIdentifier
localAssetURL
T@"NSURL",C,N,V_localAssetURL
T@"NSString",C,N,V_uti
parentRelationshipType
T@"NSString",C,N,V_parentRelationshipType
parentUploadIdentifier
Tq,N,V_parentUploadIdentifier
sourceApplication
T@"NSString",C,N,V_sourceApplication
requestItems
T@"NSArray",C,N,V_requestItems
serverResponse
T@"StoreDownloadQueueResponse",&,N,V_serverResponse
responseDownloads
T@"NSArray",C,N,V_responseDownloads
responseError
T@"NSError",&,N,V_responseError
uploadDatabaseIdentifier
Tq,N,V_uploadDatabaseIdentifier
countOfBytesExpectedToSend
Tq,N,V_countOfBytesExpectedToSend
countOfBytesSent
Tq,N,V_countOfBytesSent
%@: Enabling all download kinds
%@: Redeeming %lu codes headless
%@: Canceled redeem batch
%@: Redeemed %lu codes with %lu failures
%@: Fetch redeem code metadata failed with error: %@
%@: Redeeming %lu codes
hideError
response-content-type
cameraRecognizedCode
installed-version
redeemCodeSrv
dialogData
LAErrorDomain
%@: Fetching metadata for %lu codes
%@: Canceled redeem metadata batch
%@: Found metadata for %lu codes
redeemCodes
headless
TB,V_headless
cameraRecognized
TB,V_cameraRecognized
redeemResponse
T@"SSRedeemCodesResponse",R
certId
p2-headless-redemption
userPresentableErrorMessage
%@: Verifying AppleID: %@
%@: Verification succeeded
%@: Verification failed with error: %@
v24@?0@"ACAccount"8@"NSError"16
credential
T@"ACAccountCredential",R
username
%@ %@
preferences
T@"NSMutableArray",&,N,V_preferences
com.apple.itunesstored.KeyValueStore
v16@?0@8
v16@?0@"SSKeyValueStoreSession"8
B16@?0@"SSKeyValueStoreTransaction"8
%@: Reloading accounts after KVS change
%@: [bid: %@, bv: %@, sid: %@, sv: %@, sbox: %d
T@"NSNumber",C,N,V_storeIdentifier
T@"NSNumber",C,N,V_storeVersion
TB,N,GisSandboxed,V_sandboxed
TB,N,V_usesIdentityAttributes
renew-vpp-receipt
app-receipt-create
receiptFlags
TQ,N,V_flags
TB,N,V_needsAuthentication
performSinfMirartionCheckBeforeFailing
TB,N,V_performSinfMirartionCheckBeforeFailing
bookkeeperDomain:com.apple.upp
put-parameters
mzbookkeeper
notification-type
sbsync
logout
[%@]: Garbage collecting %lu persistent managers
[%@]: Garbage collecting software downloads
[%@]: Removing expired software download: %lld
[%@]: Garbage collecting download scratch directory
[%@]: Queuing directory: %lld phase: %@
[%@]: Queuing stale directory: %lld phase: %@ last modification: %f
[%@]: Keeping directory: %lld phase: %@ last modification: %f
[%@]: Keeping directory: %lld phase: %@
[%@]: Garbage collecting %lu scratch directories
[%@]: Removed: %@
DownloadsScratchGarbageCollectionTime
%@ no events to report
%@ could not load URL bag
%@ could not get metrics dict from url bag
xp_its_main
xp_ci
clientId
%@ failed to insert events: %@
%@ failed to flush events: %@
eventTopicOverride
T@"NSString",C,N,V_eventTopicOverride
appBundleId
T@"NSString",C,N,V_appBundleId
T@"NSArray",C,V_softwareLibraryItems
com.apple.itunesstored.ErrorHandlerManager.%p
com.apple.itunesstored.ErrorHandlerManager.completion.%p
%@: Opening session: %@ for client: %@
%@: Client disconnected: %@ with %lu sessions
%@: Cannot connect unentitled error handler
%@: Ignoring error handler re-connect
%@: Invalid enpoint for error handler
%@: Invalid failure types for error handler
%@: Conflicted failure types for error handler
%@: Started client: %@ with failure types: %@
%@: Resolving session: %lld for client: %@
com.apple.itunesstored.ErrorHandlerManager
failureTypes
sessionIdentifier
T@"NSDictionary",C,N,V_sessionProperties
label
rank
yyyy-MM-dd'T'HH:mm:ss'Z'
T@"NSURL",C,N,V_url
%@: Redirect from error handler: %@
%@: Error handler resolved with type: %ld
v16@?0@"ErrorHandlerResponse"8
willBeginProcessingDictionaryHandler
T@?,C,N,V_willBeginProcessingDictionaryHandler
endId
startId
%@: Refreshing download: %lld / %@
%@: Unexpected download count: %lu when refreshing download: %lld
%@: Refreshed download: %lld, changed download key from: "%@" to: "%@"
tokenType
localizedMessage
T@"NSString",R,C,N,V_assetToken
T@"NSString",R,C,N,V_assetTokenType
T@"NSError",R,C,N,V_error
%@: Could not get download: %lld, error: %@
%@: Refreshed download: %lld
%@: No transaction ID for download: %lld
%@: No identity for download: %lld
%@: Could not refresh download: %lld, error: %@
%@: Unexpected count: %lu when refreshing download: %lld
%@: Could not refresh download: %lld, incorrect count: %lu
%@: Reloaded download: %lld, with download key: %@
%@: Reloading iTunes Match download: %lld / %@
always
sometimes
never
update-password-settings
jingleDocType
settings
free
paid
freeDownloadsPasswordSetting
paidPurchasesPasswordSetting
com.apple.mobile.lockdown.iTunesAccountChanged
com.apple.itunesstored.AccountStore
%@: Triggering claim after active user changed
%@: Successfully removed ACAccount for account: %@ 
%@: Error removing ACAccount: %@ %@ %@
%@: Unable to find ACAccount for username: %@
com.apple.itunesstored.RadioDeleteModel
com.apple.mobileipod
RadioExplicitTracksEnabled
com.apple.MediaPlayer.RadioExplicitTracksEnabledDidChange
RadioModel
authenticationActive
TB,R,GisAuthenticationActive
AuthenticationActive
here in init
hasDemotedApplications
TB,R,V_hasDemotedApplications
finishesPurchases
uniqueIdentifier
com.apple.itunesstored.PurchaseController
%@: Canceling purchases for %ld downloads
v24@?0@"PurchaseManagerClient"8@"NSObject<OS_xpc_object>"16
%@: Cancel %zu purchases for client: %@
%@: Connected purchase manager: %@
%@: Finishing: %zu purchases for client: %@
%@: Inserting %lu purchases for client: %@
%@: Reset %ld existing downloads for purchases
v24@?0@"NSArray"8@"NSDictionary"16
%@: Skipping %ld existing purchases from client: %@
%@: Canceled inflight purchase: %@
[%@]: Adding %lu purchases from client: %@
com.apple.itunesstored.PurchaseController.auth
%@: Requesting %llu bytes for %lu purchases
%@: Space is available for all purchases
%@: Only %llu bytes available: %@
%@: Failing purchases due to lack of space: %@
%@: Proceeding with purchases that fit in remaining space: %@
%@: Checking queue(s) after purchase trigger-download with kind: %@
v16@?0@"DaemonPurchaseResponse"8
%@: Canceling purchase batch after authentication failure
book
%@: Canceling purchase batch after purchase failure
%@: Not queuing downloads for purchase because placeholder download was canceled
%@: Sending non-download purchase response to appstored
%@: Pruned %ld orphaned purchases
com.apple.iTunesStore
com.apple.itunesstored.PurchaseController.purchase
SPECIFIC_PURCHASE_ERROR_TITLE
SPECIFIC_PURCHASE_ERROR_BODY_%@
SPECIFIC_PURCHASE_ERROR_BODY_PLUS_ONE_%@
SPECIFIC_PURCHASE_ERROR_BODY_PLURAL_%@_%ld
com.apple.itunesstored.fairplay.decryptfile.%@
[%@] No DPInfo provided
%@: Decrypt failed
CREATE TABLE IF NOT EXISTS artist (pid INTEGER,upload_id INTEGER NOT NULL,artist_id TEXT,order_index INTEGER DEFAULT 0,name TEXT,PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS content_item (pid INTEGER,post_id INTEGER NOT NULL,item_id TEXT,type TEXT,PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS external_target (pid INTEGER,access_token TEXT,page_access_token TEXT,page_id TEXT,post_id INTEGER NOT NULL,service_type INTEGER NOT NULL,PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS post (pid INTEGER,account_id INTEGER NOT NULL,activity_id TEXT,author_id TEXT,author_type TEXT,creation_time DOUBLE,failure_count INTEGER DEFAULT 0,is_attributed INTEGER DEFAULT 0,is_failed INTEGER DEFAULT 0,message TEXT,poll_count INTEGER DEFAULT 0,poll_interval DOUBLE DEFAULT 0,poll_duration DOUBLE DEFAULT 10800,source_app TEXT,PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS upload (pid INTEGER,album_id TEXT,asset_token TEXT,asset_token_type TEXT,asset_url TEXT NOT NULL,category_name TEXT,creation_time DOUBLE,description TEXT,error_code INTEGER,error_domain TEXT,error_message TEXT,failure_count INTEGER DEFAULT 0,is_explicit INTEGER DEFAULT 0,kind TEXT,owns_asset INTEGER DEFAULT 0,parent_relationship_type TEXT,parent_upload_id INTEGER DEFAULT 0,preview_frame_time DOUBLE DEFAULT 0,post_id INTEGER,source_app TEXT,state INTEGER DEFAULT 0,subtitle TEXT,thumbnail_url TEXT,title TEXT,upload_time DOUBLE,uti TEXT NOT NULL,PRIMARY KEY (pid));
uploads.sqlitedb
ALTER TABLE post ADD COLUMN author_type TEXT;
ALTER TABLE upload ADD COLUMN failure_count INTEGER DEFAULT 0;
ALTER TABLE upload ADD COLUMN asset_token_type TEXT;
ALTER TABLE upload ADD COLUMN owns_asset INTEGER DEFAULT 0;
ALTER TABLE upload ADD COLUMN parent_relationship_type TEXT;
ALTER TABLE upload ADD COLUMN parent_upload_id INTEGER DEFAULT 0;
ALTER TABLE upload ADD COLUMN preview_frame_time DOUBLE DEFAULT 0;
ALTER TABLE upload ADD COLUMN upload_time DOUBLE;
ALTER TABLE post ADD COLUMN is_failed INTEGER DEFAULT 0;
ALTER TABLE upload ADD COLUMN album_id TEXT;
ALTER TABLE artist ADD COLUMN order_index INTEGER DEFAULT 0;
ALTER TABLE post ADD COLUMN is_attributed INTEGER DEFAULT 0;
ALTER TABLE post ADD COLUMN activity_id TEXT;
ALTER TABLE post ADD COLUMN poll_count INTEGER DEFAULT 0;
ALTER TABLE post ADD COLUMN poll_interval DOUBLE DEFAULT 0;
ALTER TABLE post ADD COLUMN poll_duration DOUBLE DEFAULT 10800;
%@: Authenticating for purchase batch
authenticationBlock
newCustomer
%@: Capabilities mismatch for purchase: %@
jingleAction
inAppBuy
CapabilitiesMatch
%@&ownerDsid=%@
B16@?0@"SSAppPurchaseHistoryTransaction"8
ownerDsid
%@: Using local buy parameters for purchase: %@
&installedSoftwareRating=%ld
%@: Creating a placeholder to get the vendorID: %@
%@: Placeholder operation complete with vendorID: %@ for bundleID: %@
&vid=%@
&ownerDsid=%llu
%@: Adding account for purchase: %@ / %@
offer
redownload
p2-order-pre-order
purchase
T@"SSPurchase",R
purchaseBlock
%@: Skipping queue update to in flight download: %llu with downloadPhase: %@
%@: Resetting existing download: %llu phase: %@ with store queue download
%@: Restart existing download: %llu phase: %@ with store queue download with result: %d
%@: Insert new store queue download: %@
%@: Inserted new store queue download with downloadID: %llu
%@: Pruning incompatible app download: %@
v32@?0@8Q16^B24
%@: Pruning %lu removed downloads
%@: Sending purchase over to appstored
%@: Using custom policy for purchase: %@
%@: Using custom network constraints for purchase: %@
%@: Replacing purchase %lld with %lu downloads, filtering asset types: %@
v32@?0@"DownloadAsset"8Q16^B24
%@: Updating existing download: %lld
%@: Updating placeholder download: %lld
%@: Adding new download from purchase
%@: Remove placeholder for purchase: %lld
Purchase
Updated downloads for purchase
%@: Diverting store queue request with %lu items
v32@?0@"SSPurchase"8Q16^B24
X-Apple-Application-Instance
Apple-Timing-App
giftBuySrv
destinationFileURL
T@"NSURL",C
sendsResponseForHTTPFailures
shouldMescalSign
com.apple.itunesstored.WiFiManager
IPAddress
decodedResponse
T@"StoreDownloadQueueResponse",&,N,V_decodedResponse
preference
adam_id
external_id
created_offset_millis
preference_type
Ti,N,V_preference
hasAdamId
Tq,N,V_adamId
hasExternalId
externalId
T@"NSString",&,N,V_externalId
hasCreatedOffsetMillis
createdOffsetMillis
Tq,N,V_createdOffsetMillis
hasPreferenceType
preferenceType
Ti,N,V_preferenceType
%@: Could not install media download: %lld, error: %@
%@: Missing library ID for download: %lld
Rentals
Kind
iTunes_Control
iTunes
Rentals.plist
%@: Updated rental plist for "%@"
batch_id
encoded_data
encoded_error
encoded_response
order_id
purchase_manager
client_id_header
process_id
url_bag_type
%@: Running ODR Resource Operation
%@: Cancel ODR for %@
ODR operation cancelled
%@: Pause ODR for %@
%@: Resume ODR for %@
%@: Starting ODR for %@
%@: Skipping ODR, required parameters missing for %@
%@: Making ODR daemon call
ODR operation completed
Tq,N,V_action
ondemandd
T@"<ODRiTunesStoreDaemonProtocol>",&,N,V_ondemandd
play-activity-feed-post-frequency
PlayActivityFeedFlushOperationErrorDomain
play-activity-feed-request-post-url
/BuildRoot/Library/Caches/com.apple.xbs/Sources/iTunesStore_Sim/iTunesStore-1442.182/Daemon/PlayActivityFeedFlushOperation.m
Invalid parameter not satisfying: %@
playActivityController != nil
com.apple.itunesstored.PlayActivityFeedFlushOperation.accessQueue
[PlayActivityFeedFlushOperation] Flushing play activity feed to URL: %@
[PlayActivityFeedFlushOperation] Flushing %td events...
[PlayActivityFeedFlushOperation] Completing pending play events failed with error: %@ for session token: %llu flushResult: %zd
[PlayActivityFeedFlushOperation] Removing flushed play events failed with error: %@
v28@?0@"NSArray"8Q16B24
[PlayActivityFeedFlushOperation] Sending events for store account IDs: %@
PlayActivityFeedFlushLogRequestBody
X-Guid
[PlayActivityFeedFlushOperation] Sending request for account ID %@ with request body: %@
[PlayActivityFeedFlushOperation] Sending request for account ID: %@
v32@?0@"NSNumber"8Q16^B24
[PlayActivityFeedFlushOperation] Finishing operation with error: %@
playActivityController
T@"SSVPlayActivityController",R,N,V_playActivityController
T@"NSError",R,N,V_responseError
com.apple.itunesstored.MediaSocialStatusPollingCoordinator
%@: Request %@ exceeded poll for now: %f timeout time: %f
T@"<MediaSocialStatusPollingDelegate>",W,N,V_delegate
numberOfPollRequests
clientData
dsId
md-finish-provisioning
amd-finish-provisioning
hidesServerDrivenDialogs
protocolVersion
LSApplicationLaunchProhibited
[%@]: Installing placeholder for bundleID: %@
[%@]: Generated iTunesMetadata.plist for placeholder for bundleID: %@ metadata: %@
[%@]: Placeholder creation failed for bundleID: %@ data: %@
[%@]: Installed placeholder for bundleID: %@ sourceApp: %@ result: %d
Placeholder installed
%lld.app
is-purchased-redownload
[%@]: Generated Info.plist for placeholder: %@
AppPlaceholders
%@: Requesting termination of sync bubble for download: %lld bundleID: %@
%@: Continuing after bubble termination complete for download: %lld bundleID: %@
%@: Application termination denied: %lld / %@
%@: Could not find app for automatic update: %lld / %@
%@: Missing sinf data for store download: %lld / %@
%@: Installing placeholder for auto-update: %@
%@: Installing download: %lld / %@
%@: Loading missing receipt for app: %@
%@: Adding bundle ID to KVS: %@
PackagePatchFailed
ApplicationVerificationFailed
AppBlacklisted
%@: Fail permanently for blacklisted app: %@
BundleiTunesMetadataVersionMismatch
[ApplicationWorkspace]: Fail permanently for bundle version mismatch: %lld
InstallSoftwareDownloadOperation: Retry download after termination allowed: %lld / %@
image
song
soundbite
video
pnum
mediaTypes
T@"NSArray",C,N,V_mediaTypes
numberOfPosts
Tq,N,V_numberOfPosts
machineId
md-sync-machine
amd-sync-machine
syncState
%@: Unrecognized machine-data action: %@
machineDataRequest
T@"SSMachineDataRequest",R
blocksPurchaseRequests
Music
FuseSubscriptionStatus
FuseSubscriptionStatusDate
subscriptionStatus
com.apple.itunesstored.SSVSubscriptionStatusCoordinator.changeNotificationSuspensionAccessQueue
com.apple.itunesstored.bulletinboard
com.apple.itunesstored.bulletinboard.sectionsLock
BBDataProviderConnection
appStoreSection
T@"BulletinBoardSection",R
BulletinBoardSections
com.apple.itunesstored.BulletinBoardSection:%@
B32@?0@"Bulletin"8Q16^B24
BBSectionInfo
BBSectionParameters
date
Bulletins.
com.apple.news
existingBulletins
com.apple.itunesstored.xpc
com.apple.StoreKit.SKXPCConnection
disconnectBlock
messageBlock
[%@]: clearExpiredHistoryWithMessage - Called from client: %@ 
[%@]: hidePendingUpdatesBadgeWithMessage - Called from client: %@ 
[%@]: migrateWithMessage - Called from client: %@ 
[%@]: modifyStoreWithMessage - Called from client: %@ 
[%@]: Skipping most of server registration for server %@ since we are using appstored software updates
[%@]: Update check complete with result: %d error: %@
[%@]: reloadWithMessage - Called from client: %@ 
[%@]: removeAllUpdatesBulletinsWithMessage - Called from client: %@ 
[%@]: showPendingUpdatesBadgeWithMessage - Called from client: %@ 
actiontitle
actionurl
BBBulletinRequest
BBAction
BBAppearance
actionButtonTitle
T@"NSString",C,N,V_actionButtonTitle
actionButtonURL
T@"NSURL",C,N,V_actionButtonURL
destinations
TQ,N,V_destinations
launchURL
T@"NSURL",C,N,V_launchURL
creationDate
T@"NSDate",R,N,V_date
T@"NSString",C,N,V_message
recordID
T@"NSString",C,N,V_recordID
T@"NSString",C,N,V_title
[%@]: No placeholder, skipping uninstall for: %@
[%@]: Uninstalling parallel placeholder with bundleID: %@
[%@]: Uninstalled parallel placeholder with bundleID: %@ result: %d error: %@
[%@]: Skipping uninstall of parallel placeholder with bundleID: %@ that with a non store install type
Uninstalled placeholder
T@"NSObject<LSApplicationWorkspaceObserverProtocol>",N
[%@] No receipt data for: %@
[%@] No LSApplicationProxy for: %@
[%@] No LSPlugInKitProxy for: %@
AppReceipt
Wrote app receipt
Wrote StoreKit client app receipt
mobile
[%@] Could not create receipt URL: %@
[%@] Wrote receipt to path: %@
AnalyticsReportingOperation
[%@] Submitting events to URL: %@
%@: Received backoff response for URL: %@
[%@] Exception Caught at outer-loop: %@
[%@] Deleted Reported Events. [Success: %d]
[%@] Deleted Out-Of-Date Events. [Max Age: %lld] [Success: %d]
com.apple.itunesstored.AnalyticsReportingOperation
DisableMetricsFileCleanup
[%@]: Output stream exception: %@
[%@] Reporting analytics events to %@
application/json; charset=utf-8
X-Apple-Canary-Id
Content-Length
[%@] Success reporting analytics events. [Marked As Reported: %d]
[%@] Error Reporting Events: %@
[%@] Exception Caught: %@
v24@?0@"NSData"8@"NSError"16
finishBlock
track_items
store import complete. success=%d, err=%@
v28@?0B8@"NSError"12@"NSData"20
store_collection_id=%llu
store_item_id=%llu
%@|%@|%ld|%@
%@: Checking out rental keys for download: %lld
%@: Decrypting asset for download: %lld at path: %@
%@: Unprotect asset for download: %lld at path: %@
%@: Download unprotect failed: %lld, deleted file: %@
changeType
Tq,N,V_changeType
Transaction
NSCopying
DownloadsDatabase
DownloadHandlerObserver
NSObject
DownloadsTransaction
DownloadsChangeset
SubscriptionStatusOperation
PurchaseManifest
PurchaseManifestItem
FamilyCircleOperation
StoreDownloadQueueResponse
SKDownload
SKDownloadChangeset
AcceptTermsAndConditionsOperation
SpringBoardAlertProxyDelegate
LoadDownloadQueueOperation
ISStoreURLOperationDelegate
ISURLOperationDelegate
ISOperationDelegate
PurchaseOperation
ISBiometricSessionDelegate
PurchaseResponseInfo
DownloadHandlerClient
DialogManager
MediaSocialStatusPollRequest
DownloadSessionProperties
FinishDownloadResponse
MediaDRMOperation
CheckoutRentalKeysOperation
AccountCacheDBClient
BatterySaverWatcher
ISFairPlayRentalInfo
SinfsArray
DownloadEntity
DemotedApplication
PipelineDownloadTaskState
MicroPaymentQueue
ArrayHash
MicroPaymentClient
MicroPaymentClientMergeResults
MicroPayment
BuyMicroPaymentOperation
MediaContentTasteUpdateController
SKPaymentTransaction
SKPaymentTransactionInternal
MicroPaymentQueueResponse
SKProduct
SKProductInternal
LoadMatchStatusOperation
FinishMicroPaymentOperation
ApplicationWorkspaceState
CoreDataAdditions
CreateAccountOperation
SpringBoardAlertProxy
PurchaseProtocolDataProvider
ApplicationWorkspaceOperation
GarbageCollectAssetsOperation
StoreKitRequestQueue
ISSingleton
AppReceiptHandleInvalidOperation
LoadMicroPaymentProductsOperation
ReceiptRefreshOperation
DirectUploadSessionController
NSURLSessionTaskDelegate
NSURLSessionDelegate
KeybagRequestOperation
MicroPaymentProductsResponse
DirectUploadController
DirectUploadSessionDelegate
MediaSocialAuthenticationDelegate
MediaSocialErrorDelegate
MediaSocialStatusPollingDelegate
MediaSocialBulletinCoordinator
MicroPaymentProduct
CheckDownloadQueueOperation
MediaSocialPostEntity
LoadCompletedMicroPaymentsOperation
ApplicationWorkspaceClearProgressOperation
RingtonePurchase
RingtonePurchaseStore
UpdateAssetsOperation
ASDAdditions
RequestQueue
DaemonBiometricOptInOperation
RestoreDownloadDataOperation
StoreServicesRequestQueue
UpdateAllMIDBasedSINFsOperation
LoadExternalDownloadManifestOperation
FinishDownloadMemoryEntity
DaemonPlayActivityController
ExternalDownloadManifest
ExtractFileOperation
RestoreDemotedApplicationsOperation
RestoreDownloadItemsOperationDelegate
PushNotificationRequestOperation
FairPlayDecryptFileOperation
DownloadDRM
DownloadSinf
LoadMicroPaymentQueueCountOperation
MicroPaymentQueueRequest
LoadMicroPaymentQueuesOperation
LoadMicroPaymentQueuePaymentsOperation
LoadMicroPaymentQueueOperation
InstallToneOperation
PersistentStore
PersistentStoreConfiguration
Daemon
SubscriptionEntitlementsOperation
StreamingZipDownloadDataConsumer
SZExtractorDelegate
SignInPromptOperation
SignInResponse
AuthenticateAttemptOperation
AKAppleIDAuthenticationDelegate
AuthenticateOperation
GetPlayInfoOperation
DaemonBiometricRegisterAccountOperation
AuthorizeMachineOperation
PushNotificationController
APSConnectionDelegate
PushNotificationRegisterBlock
PushNotificationClient
WatchMetricsController
PushNotification
PushNotificationSoundsSyncOperation
PushNotificationEnvironment
PostPushNotificationTokenOperation
PushNotificationDisplayOperation
SKPaymentQueueClient
SetAutomaticDownloadKindsOperation
AutomaticDownloadAdditions
AddItemToIPodLibraryOperation
ShowServerPromptOperation
CheckinRentalOperation
XPCClient
XPCClientBackgroundTask
DownloadAssetEntity
MediaSocialExternalTargetEntity
DownloadManagerClient
TransactionEntity
StoreDownloadQueue
CarrierBundlingEligibilityResponse
StoreDownloadQueueRequest
UpdateMigrator
UpdateMigratorOperation
UpdateMigratorPromotionOperation
UpdateMigratorAutoUpdateOperation
SubscriptionOperation
PrepareDirectUploadOperation
DemoteApplicationOperation
EpubRightsDataParser
NSXMLParserDelegate
StoreDownload
InstallSoftwareOperation
SoftwareProperties
CarrierBundlingEligibilityOperation
FinishDownloadsOperation
FinishedDownloadEntity
DownloadArtworkCacheOperation
ServerAuthenticationOperation
PersistentDownloadManagerEntity
PersistentDownloadEntity
PersistentDownloadManagerKindEntity
NetworkRequestQueue
MediaSocialAuthenticationCoordinator
MediaSocialAuthenticationResponse
IPodLibrary
RestoreDownloadsOperation
RestorePodcastItemsOperationDelegate
DownloadHandle
DaemonBiometricKeychain
FinishDownloadStepOperation
RestoreDownloadItemsOperation
LoadPassbookPassOperation
URLBagTimer
DownloadApplicationIdentifierEntity
RestoreBackupOperation
ODRiTunesStoreDaemonProtocol
ApplicationWorkspace
UMUserSwitchStakeholder
DownloadDatabaseSchema
LoadRentalInformationOperation
InstallDownloadOperation
ClearAssetCacheOperation
IPodLibraryItem
RedeemCodesProtocolDataProvider
PreorderEntity
CanceledPreorderEntity
MediaSocialContentItemEntity
LoadPreorderQueueOperation
CheckPreorderQueueOperation
StorePreorderQueue
AppReceiptRefreshOperation
SKPayment
NSMutableCopying
SKMutablePayment
SKPaymentInternal
FinishDownloadAssetMemoryEntity
CancelPreordersOperation
MediaSocialErrorCoordinator
PreorderQueueClient
DirectUploadEntity
FilesystemDownloadDataConsumer
DownloadErrorController
DownloadError
DownloadFatalError
DownloadGenericError
DownloadDiskSpaceError
DownloadIncompatibleAppError
DownloadNetworkConstraintError
UserNotificationCenter
UserNotification
DownloadClientEntity
RestoreDownloadItem
ApplicationHandle
PurchaseHistoryOperation
DownloadDataConsumer
CheckHashesOperation
DaemonDialogOperation
AppReceiptOperationResult
DevicePasscodePromptOperation
AppExtensionSupport
GetAutomaticDownloadKindsOperation
MediaContentTasteUpdateOperation
SKProductsResponse
SKProductsResponseInternal
EBookManifest
DownloadPipeline
NSURLSessionDataDelegate
PerformDownloadOperation
DistributedNotificationCenter
DistributedNotificationObserver
KeyValueObserver
KeyValueObserverItem
EventMonitor
EventMonitorEvent
EventMonitorBlockEvent
RestoreStatistics
EventDispatcher
ManagedApplicationController
StoreKitClient
LookupRequestOperation
Download
InstallEBookDownloadOperation
DownloadAsset
GratisClaimOperation
BundleValidator
RescueAbandonedPlaceholderOperation
DirectUploadArtistEntity
MediaSocialPostResponse
SpringBoardUtility
SpringBoardPendingAlert
AppWakeRequest
DownloadController
LSApplicationWorkspaceObserverProtocol
BatterySaverWatcherDelegate
ApplicationWorkspaceFinishOperation
BackgroundTaskRequest
CreateAccountPromptOperation
DaemonBiometricMatchOperation
DaemonBiometricMatch
DownloadsSession
DownloadsSessionDescriptor
PrepareDownloadOperation
PrepareDownloadResponse
UpdatableAssetControllerDeferredScheduleValues
UpdatableAssetController
AppReceiptController
MetricsController
AskPermissionActionOperation
GratisClaimProtocolDataProvider
MediaSocialPostAttachment
MediaSocialStatusPollOperation
DownloadPolicyEntity
ExplicitPreferenceManager
InstallDocumentDownloadOperation
DownloadPolicy
DownloadPolicyManager
DownloadPolicyChangeset
DownloadHandlerManager
FinishDownloadOperation
AppstoredHelper
DownloadHandlerSession
WatchAnalyticsReportingOperation
DownloadHandlerAuthenticationOperation
ExternalDownloadState
ApplicationWorkspaceFailedPlaceholderOperation
DownloadsExternalTransaction
ApplicationDownloadProgress
KeybagSyncOperation
DaemonBiometricStore
DelayedGotoSemaphore
DaemonCachedObject
MicroPaymentDownload
InstallMicroPaymentDownloadOperation
ClaimStoreKitClientOperation
ExpiredDownloadRecoveryOperation
ExpiredDownloadRecoveryResponse
MediaSocialPostOperation
SoftwareLibraryLookupOperation
SoftwareLibraryUpdateOperation
SoftwareUpdateNotifier
SoftwareUpdateBulletinInfo
RestorePodcastItemsOperation
DirectUploadRequest
RestoreDownloadItemsResponse
RestorePodcastItemsResponse
DirectUploadProgress
EnableAllAutomaticDownloadKindsOperation
RedeemCodesOperation
ISDialogOperationDelegate
VerifyAppleAccountOperation
DaemonPBFusePreferences
KeyValueStore
StoreKitClientIdentity
AppReceiptRefreshOperationOptions
LogoutOperation
DownloadsDatabaseGarbageCollectionOperation
AnalyticsRecordingOperation
RemoveableSoftwareLookupOperation
ErrorHandlerManager
ErrorHandlerClient
ErrorHandlerSession
ErrorHandlerResponse
DaemonProtocolDataProvider
RefreshStoreQueueDownloadOperation
DirectUploadResponse
RefreshMicroPaymentDownloadOperation
RefreshITunesMatchDownloadOperation
UpdateAccountPasswordSettingsOperation
DaemonAccountStore
CheckForDemotedApplicationsOperation
PurchaseManagerClient
PurchaseController
FairPlayDecryptSession
DirectUploadDatabaseSchema
PurchaseAuthenticateOperation
PurchaseManagerOperation
PurchaseDownloadsTransaction
URLConnectionRequestOperation
WiFiManager
DaemonPurchaseResponse
DaemonPBFuseItemPreference
InstallMediaDownloadOperation
PurchaseEntity
PurchaseManagerEntity
ApplicationWorkspaceOnDemandResourceOperation
PlayActivityFeedFlushOperation
PurchaseManager
MediaSocialStatusPollingCoordinator
MachineDataProvisioningOperation
ApplicationWorkspaceInstallPlaceholderOperation
InstallSoftwareDownloadOperation
MediaSocialBulletin
MachineDataSyncOperation
MachineDataActionOperation
CloudServiceCapabilitiesOperation
BulletinBoard
BulletinBoardSection
BBRemoteDataProvider
BBDataProvider
BBSectionIdentity
SKXPCConnection
SoftwareUpdatesStore
SKWeakReference
Bulletin
ApplicationWorkspaceUninstallOperation
WorkspaceDownloadObserverClient
WorkspaceDownloadObserver
AppReceipt
AnalyticsReportingOperation
IPodLibraryML3TrackImporter
DownloadDRMOperation
ApplicationWorkspaceChange
ApplicationWorkspaceProgressOperation
v44@0:8q16Q24B32@36
#16@0:8
@24@0:8^{_NSZone=}16
v36@0:8Q16B24@28
v24@0:8@16
@16@0:8
v24@0:8@"DownloadHandlerManager"16
v32@0:8@16@24
v32@0:8@"DownloadHandlerManager"16@"NSArray"24
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v16@0:8
v32@0:8Q16@?24
v24@0:8@?16
@24@0:8@?16
@24@0:8^{dispatch_source_type_s=}16
@32@0:8@16@?24
@"SSSQLiteDatabase"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_source>"
@"ExternalDownloadState"
@"DownloadPipeline"
@"DownloadPolicyManager"
I16@0:8
d16@0:8
@24@0:8@16
B32@0:8@16@24
B24@0:8q16
v32@0:8q16q24
B32@0:8q16@24
B36@0:8q16@24B32
@40@0:8@16d24d32
@32@0:8@16q24
B32@0:8q16q24
B40@0:8q16q24^@32
v28@0:8@16B24
B28@0:8@16B24
v40@0:8@16@24q32
@32@0:8@16@24
B40@0:8q16q24q32
d32@0:8d16q24
B36@0:8@16r^@24B32
v32@0:8@16q24
v24@0:8q16
q16@0:8
@"NSMutableArray"
@"NSMutableSet"
@"NSDictionary"
@"NSMutableOrderedSet"
@"NSString"
v20@0:8B16
@?16@0:8
@24@0:8^@16
@"SSAuthenticationContext"
v40@0:8@16@24@?32
@24@0:8q16
@32@0:8@16^@24
@"NSObject<OS_dispatch_queue>"
@"NSData"
@"SSFamilyCircle"
@40@0:8@16@24@32
@"NSError"
@"NSArray"
@"NSNumber"
v20@0:8f16
v24@0:8d16
f16@0:8
@"NSURL"
@"SKPaymentTransaction"
v32@0:8@"SpringBoardAlertProxy"16@"NSObject<OS_xpc_object>"24
v24@0:8@"SpringBoardAlertProxy"16
@"SSAccount"
@"SpringBoardAlertProxy"
@"NSObject<OS_dispatch_semaphore>"
@"SSTermsAndConditions"
v32@0:8@"ISStoreURLOperation"16@"NSNumber"24
B32@0:8@"ISStoreURLOperation"16@"NSString"24
v32@0:8@"ISURLOperation"16@"NSNumber"24
v32@0:8@"ISURLOperation"16@"NSURLResponse"24
v32@0:8@"ISURLOperation"16@24
@"NSInputStream"32@0:8@"ISURLOperation"16@"NSURLRequest"24
B40@0:8@16@24^@32
B40@0:8@"ISURLOperation"16@"NSMutableData"24^@32
v32@0:8@"ISURLOperation"16@"NSMutableURLRequest"24
@"NSString"32@0:8@"ISURLOperation"16@"NSString"24
q32@0:8@16@24
q32@0:8@"ISURLOperation"16@"NSURLAuthenticationChallenge"24
@"NSURLCredential"32@0:8@"ISURLOperation"16@"NSURLAuthenticationChallenge"24
v32@0:8@"ISOperation"16@"NSError"24
v32@0:8@"ISOperation"16@"SSOperationProgress"24
v24@0:8@"ISOperation"16
B32@0:8@16^@24
@"SSURLRequestProperties"
v40@0:8@16@24@32
v40@0:8@16@"NSString"24@"NSString"32
v32@0:8@16Q24
@"ApplicationHandle"
@"SSVFairPlaySubscriptionController"
@"ISURLRequestPerformance"
@"PurchaseResponseInfo"
@"ISBiometricAuthenticationContext"
@"SSURLConnectionResponse"
@"ISDialog"
@"NSSet"
@"NSURLAuthenticationChallenge"
@"DownloadHandle"
@"DownloadHandlerSession"
B24@0:8^@16
@"<BatterySaverWatcherDelegate>"
v20@0:8I16
@32@0:8q16^@24
@40@0:8@16@24^@32
v40@0:8@16q24@32
v24@0:8Q16
@"SSOperationProgress"
@32@0:8@16r*24
v36@0:8@16B24@28
@40@0:8@16@24r*32
@"NSManagedObjectID"
@"NSOrderedSet"
q24@0:8q16
@"StoreKitClientIdentity"
@"MicroPaymentQueueResponse"
v32@0:8@16@?24
@"NSDate"
@"NSOperationQueue"
@"SKPayment"
@"NSLock"
@"NSDecimalNumber"
@"NSLocale"
B40@0:8@16q24@32
@"<SpringBoardAlertProxyDelegate>"
@"SSXPCConnection"
@"NSObject<OS_xpc_object>"
@"SSUpdatableAssetCacheManager"
v48@0:8@16@24@32@?40
q32@0:8@16^@24
B40@0:8@16q24^@32
@"<SKProductsResponse>"
@32@0:8@16Q24
@"<SKPaymentQueueClient>"
@"SSPurchaseReceipt"
v56@0:8@16@24@32@40@?48
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@16@24q32q40q48
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
@"<DirectUploadSessionDelegate>"
@"ISOperationQueue"
v40@0:8^@16^@24@32
@"SSKeybagRequest"
v32@0:8@"DirectUploadSessionController"16q24
v40@0:8@"DirectUploadSessionController"16q24@"NSError"32
v40@0:8@"DirectUploadSessionController"16q24@"DirectUploadResponse"32
v32@0:8@"DirectUploadSessionController"16@"NSArray"24
v32@0:8@"MediaSocialAuthenticationCoordinator"16@"MediaSocialAuthenticationResponse"24
v32@0:8@"MediaSocialErrorCoordinator"16q24
v32@0:8@"MediaSocialStatusPollingCoordinator"16@"NSArray"24
v32@0:8q16@24
B44@0:8@16@24B32^@36
@"MediaSocialAuthenticationCoordinator"
@"MediaSocialErrorCoordinator"
@"MediaSocialStatusPollingCoordinator"
@"DirectUploadSessionController"
@"StoreDownloadQueueRequest"
@48@0:8@16@24@32^@40
v28@0:8i16@20
v40@0:8Q16@24@32
v32@0:8Q16@24
@32@0:8Q16@24
@"NSManagedObjectContext"
@68@0:8@16@24@32@40B48@52@?60
@56@0:8@16@24@32@40^@48
@"ExternalDownloadManifest"
@"NSURLRequest"
@"FinishDownloadAssetMemoryEntity"
@"StoreDownload"
@24@0:8Q16
v28@0:8B16@?20
@"URLBagTimer"
v32@0:8r*16q24
i16@0:8
v20@0:8i16
v32@0:8@"RestoreDownloadItemsOperation"16@"RestoreDownloadItemsResponse"24
@"AccountCacheDBClient"
@"SSVPushNotificationParameters"
@"FairPlayDecryptSession"
@"MicroPaymentQueueRequest"
B32@0:8^q16^@24
B32@0:8q16^@24
B28@0:8B16^@20
@"PersistentStoreConfiguration"
@"NSManagedObjectModel"
@"NSPersistentStoreCoordinator"
@20@0:8i16
@24@0:8^{__CFString=}16
v24@0:8^{__CFString=}16
v32@0:8@16^{__CFString=}24
@32@0:8^@16@24
v24@0:8@"NSString"16
Q24@0:8@16
@24@0:8r*16
@32@0:8r*16Q24
@"SZExtractor"
@36@0:8@16B24^@28
q24@0:8^@16
@"SignInResponse"
@"ACAccountCredential"
B48@0:8@16@24@32@40
B48@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40
v56@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40@?<v@?B>48
@32@0:8q16@24
v36@0:8@16@24B32
@"SSAuthenticationResponse"
B32@0:8@16^B24
@"SSAuthenticateResponse"
@"AppstoredHelper"
@"SSPlayInfoRequestContext"
@"SSPlayInfoResponse"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@16@24@32@40
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
@36@0:8@16B24@28
q24@0:8@16
^{MGNotificationTokenStruct=}
v32@0:8d16d24
@"SSWatchMetricsEventsController"
B48@0:8@16@24@32^@40
@"SSRemoteNotification"
@"IPodLibraryItem"
@24@0:8^B16
@28@0:8@16B24
@28@0:8I16@?20
@"NSMutableIndexSet"
@"BKSProcessAssertion"
v40@0:8q16@24@32
@"LoadDownloadQueueOperation"
B24@0:8Q16
@"ISLoadURLBagOperation"
@"SSVSubscriptionResponse"
@"DirectUploadRequest"
v24@0:8@"NSXMLParser"16
v48@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40
v56@0:8@16@24@32@40@48
v56@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48
v40@0:8@"NSXMLParser"16@"NSString"24@"NSString"32
v56@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40@"NSDictionary"48
v32@0:8@"NSXMLParser"16@"NSString"24
v32@0:8@"NSXMLParser"16@"NSData"24
@"NSData"40@0:8@"NSXMLParser"16@"NSString"24@"NSString"32
v32@0:8@"NSXMLParser"16@"NSError"24
@"NSMutableString"
B40@0:8@16Q24^@32
@"SoftwareProperties"
B40@0:8@16@24@32
@"CarrierBundlingEligibilityResponse"
@"SSSQLitePredicate"
B32@0:8^@16^@24
@"ISDialogButton"
@"SubscriptionStatusOperation"
@"<MediaSocialAuthenticationDelegate>"
v28@0:8q16B24
B48@0:8@16@24^q32^@40
B36@0:8q16B24@28
v32@0:8@"RestorePodcastItemsOperation"16@"RestorePodcastItemsResponse"24
B40@0:8^@16@24^@32
B36@0:8@16B24^@28
@48@0:8@16@24q32@40
@32@0:8q16q24
@64@0:8@16@24@32@40@48^@56
B48@0:8@16N^@24q32^@40
B40@0:8@16^@24^@32
@"FinishDownloadMemoryEntity"
v36@0:8@16d24B32
@24@0:8d16
d24@0:8@16
d32@0:8@16@24
B32@0:8@16^Q24
@36@0:8@16q24B32
v104@0:8@16@24@32@40@48B56@60@68B76Q80@88@?96
v104@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48B56@"NSData"60@"NSURL"68B76Q80@"NSString"88@?<v@?@"NSError">96
v32@0:8@"NSString"16@?<v@?@"NSError">24
v76@0:8@16@24@32@40@48B56@60@?68
v76@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48B56@"NSData"60@?<v@?@"NSError">68
v32@0:8q16@?24
v48@0:8@16@24@32^v40
v32@0:8q16#24
@"NSXPCConnection"
@"NSCountedSet"
I24@0:8@16
@32@0:8q16r^@24
@"AppReceiptOperationResult"
@"AppReceiptRefreshOperationOptions"
B36@0:8@16@24B32
@36@0:8@16@24B32
@"<MediaSocialErrorDelegate>"
@40@0:8@16@24q32
{CC_MD5state_st="A"I"B"I"C"I"D"I"Nl"I"Nh"I"data"[16I]"num"i}
@40@0:8^{__CFDictionary=}16Q24@?32
v40@0:8@16^{__CFDictionary=}24Q32
v32@0:8^{__CFUserNotification=}16Q24
v32@0:8^{__CFDictionary=}16Q24
^{__CFUserNotification=}16@0:8
^{__CFDictionary=}
^{__CFRunLoopSource=}
^{__CFUserNotification=}
@"DownloadSessionProperties"
@40@0:8q16q24@32
@"SSVDialogResponse"
@"ISSoftwareApplication"
v40@0:8^@16@24^@32
@44@0:8@16@24Q32B40
@"SSVMediaContentTasteUpdateResponse"
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v32@0:8@16B24B28
@"DownloadsDatabase"
@"NSMapTable"
@"PrepareDownloadResponse"
@48@0:8@16@24Q32@?40
@40@0:8@16@24@?32
v40@0:8@16^{__CFString=}24@32
@"XPCClient"
@"LoadMicroPaymentQueuesOperation"
@"LoadCompletedMicroPaymentsOperation"
@"SSLookupProperties"
@"SSLookupResponse"
@"SSDownloadPolicy"
B56@0:8@16^@24^@32^@40^@48
@28@0:8B16@20
@"SSVGratisRequestBody"
B32@0:8@16q24
@28@0:8@16i24
I20@0:8i16
B32@0:8^i16@24
v28@0:8I16@20
@"BKSApplicationStateMonitor"
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
B36@0:8@16B24@28
@"WorkspaceDownloadObserver"
v24@0:8@"BatterySaverWatcher"16
v40@0:8@16@24d32
v32@0:8r*16@24
@"BatterySaverWatcher"
v32@0:8@16r*24
@"SSDialog"
@"DaemonBiometricMatch"
@"SSMemoryEntity"
@"DownloadDataConsumer"
v60@0:8@16@24@32@40B48@?52
d40@0:8d16@24^{__CFString=}32
v32@0:8d16^{__CFString=}24
@"SSMetricsEventController"
q32@0:8q16q24
B40@0:8@16@24q32
q32@0:8@16q24
@36@0:8q16I24@?28
v40@0:8q16q24@?32
@"NSHashTable"
v48@0:8@16@24@32q40
v32@0:8B16B20@?24
v56@0:8@16q24@32B40B44@?48
@"NSURLCredential"
v40@0:8q16q24q32
@40@0:8q16@24@32
v48@0:8@16q24@32@40
@"DownloadsChangeset"
v32@0:8@16d24
@28@0:8d16B24
@"StoreDownloadQueueResponse"
v32@0:8@"ISDialogOperation"16@"ISDialogButton"24
@"ISBiometricStore"
@"SSRedeemCodesResponse"
@"SSKeyValueStore"
@"SSMetricsController"
@"SSMutableURLRequestProperties"
@32@0:8@16B24B28
B40@0:8q16@24@32
v48@0:8q16@24@32@40
@"SSMutableAuthenticationContext"
v28@0:8B16@20
@"SSPurchase"
@40@0:8@16q24d32
v40@0:8^d16^d24q32
B48@0:8@16@24d32d40
^v16@0:8
q20@0:8i16
{?="adamId"b1"createdOffsetMillis"b1"preferenceType"b1}
Q32@0:8@16@24
@"<ODRiTunesStoreDaemonProtocol>"
@"SSVPlayActivityController"
@"<MediaSocialStatusPollingDelegate>"
B36@0:8@16I24^@28
@"SSMachineDataRequest"
@"BulletinBoardSection"
@"BBDataProviderConnection"
@"NSArray"16@0:8
@"NSSet"32@0:8@"BBBulletinRequestParameters"16@24
@32@0:8@"NSSet"16@24
@40@0:8@"NSDate"16@"NSDate"24@32
@24@0:8@"NSSet"16
@"BBSectionParameters"16@0:8
v40@0:8@"NSUUID"16@"NSString"24@?<v@?@"NSData">32
v48@0:8@"NSUUID"16@"NSString"24@"BBThumbnailSizeConstraints"32@?<v@?@"NSData">40
v40@0:8@"NSUUID"16@"NSString"24@?<v@?f>32
@"NSData"24@0:8@"NSString"16
@"NSData"32@0:8@"NSString"16@"BBThumbnailSizeConstraints"24
f24@0:8@16
f24@0:8@"NSString"16
@"NSString"24@0:8@"NSString"16
B32@0:8@"BBSectionInfo"16@"BBSectionInfo"24
v24@0:8@"BBSectionInfo"16
v32@0:8@"NSString"16@"NSDictionary"24
v24@0:8@"BBActionResponse"16
v32@0:8@"BBActionResponse"16@?<v@?B>24
@40@0:8Q16Q24@32
@"NSSet"40@0:8Q16Q24@32
@48@0:8Q16@24Q32@40
@"NSSet"48@0:8Q16@"NSSet"24Q32@40
@"BBSectionInfo"16@0:8
@"BBSectionIcon"16@0:8
@"NSData"16@0:8
^{__CFString=}16@0:8
@"BBDataProviderProxy"
@"NSObject<LSApplicationWorkspaceObserverProtocol>"
@"ApplicationDownloadProgress"
333333
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>itunesstored</string>
<key>CFBundleIdentifier</key>
<string>com.apple.itunesstored</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>409835401</string>
<key>application-identifier</key>
<string>com.apple.itunesstored</string>
<key>aps-connection-initiate</key>
<true/>
<key>backupd-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>data-allowed-write</string>
<string>spi</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.AutoWake.xml</string>
</array>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.appstored.private</key>
<true/>
<key>com.apple.appstored.xpc.updates</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.bulletinboard.dataprovider</key>
<true/>
<key>com.apple.bulletinboard.utilities</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.coretelephony.Identity.get</key>
<true/>
<key>com.apple.developer.pass-type-identifiers</key>
<array>
<string>*.pass.com.apple.itunes.storecredit</string>
</array>
<key>com.apple.frontboard.app-badge-value-access</key>
<true/>
<key>com.apple.itunesstored.metrics</key>
<true/>
<key>com.apple.keybagd.UserManager.suspendquota</key>
<true/>
<key>com.apple.keystore.auth-token</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.lsapplicationproxy.deviceidentifierforvendor</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.mobile.deleted.AllowFreeSpace</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.bubblepop</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.xpc</key>
<true/>
<key>com.apple.multitasking.newsstandassertions</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.networkd.set_source_application</key>
<true/>
<key>com.apple.odr.itunesstored</key>
<true/>
<key>com.apple.passes.add-silently</key>
<true/>
<key>com.apple.private.MobileContainerManager.stageSharedContent</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>InstallForLaunchServices</string>
<string>UninstallForLaunchServices</string>
<string>CheckCapabilitiesMatch</string>
<string>Install</string>
<string>Lookup</string>
<string>UpdateSinfForLaunchServices</string>
</array>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.perform-media-downloads</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.remotenotification.preferences</key>
<true/>
<key>com.apple.security.attestation.access</key>
<true/>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.media.books.managed</string>
<string>systemgroup.com.apple.media.shared.books</string>
<string>systemgroup.com.apple.ondemandresources</string>
</array>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.launchapplications</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.openurlswhenlocked</key>
<true/>
<key>com.apple.telephony.cupolicy-rw-access</key>
<true/>
<key>com.apple.usernotification.notificationregistrarproxy</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>fairplay-client</key>
<string>1445028844</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
</dict>
</plist>
