%@ %@
storeIdentifier
calendarIdentifier
attributes
isDefaultTaskCalendar
isDefaultEventCalendar
oldCalendarIdentifier
hasStoreIdentifier
TB,R,N
T@"NEKPBStoreID",&,N,V_storeIdentifier
hasCalendarIdentifier
T@"NSString",&,N,V_calendarIdentifier
hasAttributes
T@"NEKPBCalendarAttributes",&,N,V_attributes
hasIsDefaultTaskCalendar
TB,N
TB,N,V_isDefaultTaskCalendar
hasIsDefaultEventCalendar
TB,N,V_isDefaultEventCalendar
hasOldCalendarIdentifier
T@"NSString",&,N,V_oldCalendarIdentifier
persistentID
isLocalStore
hasPersistentID
T@"NSString",&,N,V_persistentID
hasIsLocalStore
TB,N,V_isLocalStore
NEKDatabaseChangedExternallyNotification
NEKTriggerFullSyncTestingNotification
NEKTriggerIncrementalSyncNotification
entityType
Ti,N,V_entityType
selfAttendeeEmail
T@"NSString",C,N,V_selfAttendeeEmail
selfAttendeeUUID
T@"NSString",C,N,V_selfAttendeeUUID
selfOrganizerEmail
T@"NSString",C,N,V_selfOrganizerEmail
selfOrganizerUUID
T@"NSString",C,N,V_selfOrganizerUUID
attendeeStatus
Ti,N,V_attendeeStatus
invitationStatus
Ti,N,V_invitationStatus
identifier
T@"NSString",C,N,V_identifier
calInvitationChangePropertyFlags
TI,N,V_calInvitationChangePropertyFlags
externalID
T@"NSString",C,N,V_externalID
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NEKSyncBundle/Models/NEKICSWrapper.m
+[NEKICSWrapper wrapperForCalendarItem:needsInvite:eventStore:]
Entity with identifier %{public}@ is detached, master identifier is %@
Entity with identifier %{public}@ is detached, but can't get master
Entity with identifier %{public}@ is master for a recurring series
Handling detached event with identifier %{public}@
Adding ICS to wrapper to send: %{public}@
+[NEKICSWrapper setAllPropertiesForItem:identifier:wrapper:needsInvite:eventStore:calendar:]
self attendee email = %{public}@, uuid = %{public}@ for event with identifier %{public}@
organizer is self: email = %{public}@, uuid = %{public}@ for event with identifier %{public}@
invitationChangedPropertyFlags = 0x%08x
saving externalID %{public}@ in metadata for event with identifier %{public}@
No externalID for event with identifier %{public}@
+[NEKICSWrapper setMinimalPropertiesForItem:identifier:wrapper:needsInvite:eventStore:calendar:]
self attendee status is 0x%08x for event with identifier %{public}@
Setting task with identifier %{public}@ as completed, completion date is %{public}@
+[NEKICSWrapper setPropertiesForWrapper:withCalendarItems:needsInvite:sendAllProperties:eventStore:calendar:originalEvent:]
Can't create canonical unique identifier for event %{public}@. Identifier returned by CalCalendarItemCopyUniqueIdentifier is %{public}@
<%@ %p; identifier=%@; calendarIdentifier=%@; oldCalendarIdentifier=%@; title='%@'>
<%@ %p; identifier=%@; calendarIdentifier=%@; oldCalendarIdentifier=%@>
<%@ %p, calendarIdentifier = %@; oldCalendarIdentifier = %@; count = %@>
TQ,R
T#,R
debugDescription
objectIdentifier
T@"NSString",R,N
sequencer
changeType
Tq,R,N
properties
T@"NSMutableDictionary",&,N,V_properties
calendarItemCount
Tq,N,V_calendarItemCount
syncId
T@"NSString",C,N,V_syncId
zICSData
T@"NSData",&,N,V_zICSData
ICSData
T@"NSData",&,N
T@"NEKCalendarID",&,N,V_calendarIdentifier
oldIdentifier
T@"NSString",&,N,V_oldIdentifier
nuevoIdentifier
T@"NSString",&,N,V_nuevoIdentifier
title
T@"NSString",R,N,V_title
taskCompleted
TB,N,GisTaskCompleted,V_taskCompleted
taskCompletionDate
Td,N,V_taskCompletionDate
%@/RID=%llu
NSString *uniqueIdentifierForDetachedEvent(CalEventRef, CalEventRef)
Created canonical unique identifier %{public}@ for event %{public}@ with value from CalCalendarItemCopyUniqueIdentifier %{public}@
Can't create canonical unique identifier for event %{public}@. Original event has no unique identifier %{public}@
metadataKeys
metadataValues
syncID
hasICSData
iCSData
T@"NSData",&,N,V_iCSData
T@"NEKPBCalendarIdentifier",&,N,V_calendarIdentifier
hasCalendarItemCount
TI,N,V_calendarItemCount
T@"NSMutableArray",&,N,V_metadataKeys
T@"NSMutableArray",&,N,V_metadataValues
hasSyncID
T@"NSString",&,N,V_syncID
hasTaskCompletionDate
hasOldIdentifier
hasNuevoIdentifier
<%@ %p, calendarIdentifier = %@>
T@"NEKStoreID",R,N,V_storeIdentifier
T@"NEKCalendarAttributes",R,N,V_attributes
/tmp/pleasePassAPath
NDTSQFile
%04d%02d%02d-%02d%02d%02d
NDTSQBootstrapLoop
Attempt to create database failed.
:memory:
mobile
NDTSQOpenDatabase
Cannot open database for writing
pragma journal_mode=wal
_SQ_Versions
SQLExecuteError
Error in executing SQL
i8@?0
v8@?0
NDTSQExecuteSql
Error parsing or executing SQL in executeSql:
NDTSQParse
Error parsing or executing SQL in parseSql:andExecute:
SQLParseError
Error parsing or executing SQL in parseMultipleSql:andExecute:
BEGIN
SQLTransactionError
Error executing begin.
COMMIT
Error executing commit.
ROLLBACK
Error executing rollback.
T^{sqlite3=},N,V_db
pathTemplate
T@"NSString",&,N,V_pathTemplate
path
delegate
T@"<NDTSQFileDelegate>",W,N,V_delegate
B24@?0@8@"NSDictionary"16
TinyStore
tinyStore.plist
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NEKSyncBundle/Models/NEKTinyStore.m
__26-[NEKTinyStore _savePlist]_block_invoke
Error serializing out plist: %{public}@
Error writing out plist
__26-[NEKTinyStore _loadPlist]_block_invoke
dataWithContentsOfFile gave us nothing
propertyListWithData gave us nothing. Error: %{public}@
isComplete
calendarName
reminderTitle
externalIdentifier
hasIsComplete
TB,N,V_isComplete
hasCalendarName
T@"NSString",&,N,V_calendarName
hasReminderTitle
T@"NSString",&,N,V_reminderTitle
hasExternalIdentifier
T@"NSString",&,N,V_externalIdentifier
name
defaultAlarmOffset
type
isEnabled
isFacebook
usesSelfAttendee
constraintsDescriptionPath
externalModificationTag
creatorBundleID
creatorCodeSigningIdentity
accountPersistentID
supportsSharedCalendars
allowsTasks
allowsEvents
allowsCalendarAddDeleteModify
onlyCreatorCanModify
snoozeAlarmRequiresDetach
supportsAlarmAcknowledgedDate
hasName
T@"NSString",&,N,V_name
hasDefaultAlarmOffset
TI,N,V_defaultAlarmOffset
hasType
TI,N,V_type
hasIsEnabled
TB,N,V_isEnabled
hasIsFacebook
TB,N,V_isFacebook
hasUsesSelfAttendee
TB,N,V_usesSelfAttendee
hasConstraintsDescriptionPath
T@"NSString",&,N,V_constraintsDescriptionPath
hasExternalID
T@"NSString",&,N,V_externalID
hasExternalModificationTag
T@"NSString",&,N,V_externalModificationTag
hasCreatorBundleID
T@"NSString",&,N,V_creatorBundleID
hasCreatorCodeSigningIdentity
T@"NSString",&,N,V_creatorCodeSigningIdentity
hasAccountPersistentID
T@"NSString",&,N,V_accountPersistentID
hasSupportsSharedCalendars
TB,N,V_supportsSharedCalendars
hasAllowsTasks
TB,N,V_allowsTasks
hasAllowsEvents
TB,N,V_allowsEvents
hasAllowsCalendarAddDeleteModify
TB,N,V_allowsCalendarAddDeleteModify
hasOnlyCreatorCanModify
TB,N,V_onlyCreatorCanModify
hasSnoozeAlarmRequiresDetach
TB,N,V_snoozeAlarmRequiresDetach
hasSupportsAlarmAcknowledgedDate
TB,N,V_supportsAlarmAcknowledgedDate
hasSyncId
T@"NSString",&,N,V_syncId
select value from %@ where key = ?
insert or replace into %@ (key, value) values (?, ?)
create table if not exists %@ (key text unique, value text)
NDTSQKeyValueStore:%@
i16@?0@"NDTSQStatement"8
T@"NSString",R,N,V_identifier
rowID
Tq,N,V_rowID
entityRowID
Tq,N,V_entityRowID
UUID
T@"NSString",C,N,V_UUID
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NEKSyncBundle/Models/_NEKRecordMapImpl.m
-[_NEKRecordMapSqliteImpl initWithIdentifier:]
Sqlite create failed, path: %s, error: (%d)
SELECT rowId, entityType, entityRowID, UUID FROM record WHERE entityType = ? AND entityRowID = ?;
-[_NEKRecordMapSqliteImpl prepareStatements]
SQL not understood: %s
UPDATE record SET UUID=? where rowId=?;
INSERT INTO record(entityType, entityRowID, UUID) VALUES(?, ?, ?);
DELETE FROM record WHERE entityType = ? AND entityRowID = ?
%@.db
CREATE TABLE IF NOT EXISTS record(rowid INTEGER PRIMARY KEY ASC, entityType INT, entityRowID INT, UUID TEXT);
CREATE UNIQUE INDEX IF NOT EXISTS entityIndex ON record (entityType, entityRowID); 
-[_NEKRecordMapSqliteImpl setIdentifier:forRecordID:]
setIdentifier:%{public}@ forRecordID: %{public}@
-[_NEKRecordMapSqliteImpl deleteIdentifierForRecordID:]
deleteIdentifierForRecordID:%{public}@
-[_NEKRecordMapSqliteImpl _beginTransaction]
--mark--
-[_NEKRecordMapSqliteImpl commit:]
EventKitSync
-[_NEKRecordMapSqliteImpl reset]
-[_NEKRecordMapSqliteImpl removeAllRecords]
NEKRecordMap removeAllRecords
DELETE FROM record
SELECT COUNT(*) FROM record
/System/Library/LaunchDaemons/com.apple.SpringBoard.plist
eventIdentifier
eventTitle
eventStart
calendarTitle
span
hasEventIdentifier
T@"NSString",&,N,V_eventIdentifier
hasEventTitle
T@"NSString",&,N,V_eventTitle
hasEventStart
Td,N,V_eventStart
hasCalendarTitle
T@"NSString",&,N,V_calendarTitle
T@"NSString",&,N,V_storeIdentifier
hasSpan
TI,N,V_span
stores
T@"NSArray",&,N,V_stores
calendars
T@"NSArray",&,N,V_calendars
tasks
T@"NSArray",&,N,V_tasks
events
T@"NSArray",&,N,V_events
com.apple.eventkitsync.nekeventstore
com.apple.eventkitsync.dbidleblocks
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NEKSyncBundle/Models/NEKEventStore.m
-[NEKEventStore _endUpdates]
Unbalanced calls to begin/endUpdates
idleBlock
-[NEKEventStore _saveDatabaseIfNeeded]
Error saving CalDatabase: %{public}@
Database changes saved
-[NEKEventStore allItemsWithEventFilter:taskWindow:]
%{public}@
B16@?0^v8
v32@?0@8Q16^B24
-[NEKEventStore _serializeSyncSet:]
Marking default task calendar in wrapper to calendar with name %{public}@, identifier %{public}@
Marking default event calendar in wrapper to calendar with name %{public}@, identifier %{public}@
-[NEKEventStore shouldSendEntity:]
Entity with summary "%{public}@" and identifier %{public}@ is a phantom master.  Ignoring.
Entity with summary "%{public}@" and identifier %{public}@ is detached, master identifier is %{public}@
Entity with summary "%{public}@" and identifier %{public}@ is detached, but can't get master, so using the actual detached event
No calendar for event with summary "%{public}@" and identifier %{public}@, event won't be tracked for sending duplicates, but we'll soldier on and likely fail somewhere later down the line.
Entity with summary "%{public}@" and identifier %{public}@ already in set for calendar with identifier %{public}@, not sending again
Entity with summary "%{public}@" and identifier %{public}@ not in set for calendar with identifier %{public}@, adding
Selecting reminder "%{public}@"
Completion: %{public}@
__29-[NEKEventStore updateStore:]_block_invoke
Create or update store: %{public}@
Received store wrapper that I'm not sure how to process: %{public}@
__32-[NEKEventStore updateCalendar:]_block_invoke
Create or update calendar: %{public}@
-[NEKEventStore handleNewEntity:withWrapper:]
%{public}s: Ignoring sidecar data for phantom master with identifier: [%{public}@]
-[NEKEventStore handleUpdatedItemFromGizmo:type:withWrapper:identifier:]
Handling updated event from gizmo with summary "%{public}@" and identifier %{public}@
Set self attendee status to 0x%08x for event with identifier %{public}@
Set invitation status to none for event with identifier %{public}@
No need to set attendee status, synced value is the same as existing value: 0x%08x for event with identifier %{public}@
Handling updated task from gizmo with summary "%{public}@" and identifier %{public}@
Task with identifier %{public}@ is completed, completion date is %{public}@
/RID=
-[NEKEventStore updateEvent:identifier:eventStore:occurrenceDate:participationStatus:masterIdentifier:isMaster:]
Saved event with identifier %{public}@, externalID is %{public}@
Failed to save event with identifier %{public}@. Error =  %{public}@
Participant status did not change. No need to save event with identifier %{public}@, externalID is %{public}@
-[NEKEventStore updateMasterEvent:masterIdentifier:calendarIdentifier:masterParticipationStatus:detachedEvents:]
Handling updated master event from gizmo with participationStatus %d, summary "%{public}@", and identifier %{public}@
Can't get row id for master with identifier %{public}@ to set attendee status for recurring series
Checking for calendar match for event %{public}@ with identifier %{public}@
Checking for match on calendar, we want %{public}@, calendarIdentifier is %{public}@
Handling master event from gizmo with participation status %d, summary "%{public}@", and identifier %{public}@
Couldn't get master event for recurring event sequence with identifier %{public}@, but we'll check for detached events in case those are still around
%@%@%llu
Using existing detached event
Grabbing recurrence to use for detached event
Handling updated detached event from gizmo with participation status %d, summary "%{public}@", and identifier %{public}@.
Failed to get/create event with identifier %{public}@ to set attendee status %d, skipping event
Failed to commit after saving recurring event series with master identifier %{public}@. Error =  %{public}@
-[NEKEventStore handleCalendarEventWithUniqueIdentifierFromGizmo:calendar:wrapper:detachedEventMap:]
No calendar item with identifier %{public}@ in calendar with identifier %{public}@
-[NEKEventStore handleCalendarTaskWithUniqueIdentifierFromGizmo:calendar:wrapper:]
-[NEKEventStore performUpdateWithICSWrapper:]
Received ICS wrapper: %{public}@
Calendar %{public}@ does not exist, aborting
Processing update from the watch, main identifier is %{public}@
v16@?0@"NSString"8
No calendar item found for main event in recurring series with identifier %{public}@ in calendar with identifier %{public}@
Processing add/update from companion, or a new record from the watch
Item ID remapping complete: %{public}@ => %{public}@
Got an update/add for calendar item, old calendar id = %{public}@, current calendar id = %{public}@
Calendars don't match, so deleting from old calendar: old calendar id = %{public}@, current calendar id = %{public}@
Calendars match, so event didn't move: old calendar id = %{public}@, current calendar id = %{public}@
Got an update/add for event "%{public}@", no old calendar id was sent, so this is from an old record map and falling back to old code to check and delete from any old calendar. The current calendar id = %{public}@
We have a recurring event with summary "%{public}@" and identifier %{public}@, checking to see if any detached events need attention
Handling detached event with summary "%{public}@" and identifier %{public}@
-[NEKEventStore _deleteDetachedCalendarItemsFromOldCalendar:deletedEvents:]
We have a recurring event with summary "%{public}@" and identifier %{public}@, deleting all detached events too, since they have also moved calendars
Deleting detached event from old calendar since it has moved. Event summary "%{public}@", identifier %{public}@
-[NEKEventStore _deleteCalendarItemsInICSWrapperFromOldCalendar:]
No calendar for calendar identifier %{public}@
__65-[NEKEventStore _deleteCalendarItemsInICSWrapperFromOldCalendar:]_block_invoke
Skipping deletion for event with identifier %{public}@ in calendar with identifier %{public}@, we already detected and deleted it as part of a recurring master's detached events
-[NEKEventStore applySidePropertiesToEntity:withWrapper:]
setting CalInvitationChangedPropertyFlags to 0x%08x for event with identifier %{public}@
setting externalID %{public}@ for event with identifier %{public}@
No externalID in metadata for event with identifier %{public}@
-[NEKEventStore updateSelfAttendeeForCalendarItem:identifier:withWrapper:]
Self attendee email is %{public}@, and uuid is %{public}@ for event with identifier %{public}@
Found self attendee for event with identifier %{public}@, email = %{public}@, address = %{public}@
No self attendee email in wrapper for event with identifier %{public}@
Determined user is organizer for event with identifier %{public}@, email = %{public}@, address = %{public}@
-[NEKEventStore updateInvitationStatusForCalendarItem:identifier:withWrapper:]
Setting invitation status %{public}@ for event with identifier %{public}@
No invitation status in wrapper for event with identifier %{public}@
v20@?0^{CalRecordID=}8i16
__46-[NEKEventStore calendarWrappersForChangeSet:]_block_invoke
CalendarID remap detected: %{public}@ => %{public}@
-[NEKEventStore calendarWrappersForChangeSet:]
__41-[NEKEventStore ICSWrappersForChangeSet:]_block_invoke
CalendarItem remap detected: %{public}@ => %{public}@
Decided not to send %{public}@
__41-[NEKEventStore ICSWrappersForChangeSet:]_block_invoke.563
Skipping record id %{public}d, no entity found for CalRecordIDRef
-[NEKEventStore deletionWrappersForChangeSet:]
Deletion wrapper: %@
Could not create deletion wrapper for recordID: %{public}@
%@%@%@
-[NEKEventStore _updateRowMappingForEntity:]
Entity with summary "%{public}@" and identifier %{public}@ is detached, but has no master. Skipping adding to table
-[NEKEventStore _commitPendingRecordMapChanges]
Error commiting record map: %{public}@
-[NEKEventStore _deleteStoreWithIdentifier:]
No store exists for %{public}@
-[NEKEventStore _deleteCalendarWithIdentifier:]
No calendar exists for %{public}@
-[NEKEventStore _deleteAndLogEvent:identifier:]
Deleting event with identifier %{public}@, recordID %{public}@
-[NEKEventStore _deleteEventWithIdentifier:calendarIdentifier:]
Deleting event with identifier %{public}@, from calendar with identifier %{public}@
Deleting event with identifier %{public}@, from any calendar, old mapping didn't send calendar to delete from so falling back to old code
No event exists for %{public}@
-[NEKEventStore _deleteReminderWithIdentifier:calendarIdentifier:]
No reminder exists for %@
-[NEKEventStore _updateCalendar:withCalendarWrapper:]
Updating calendar with title %{public}@, identifier %{public}@
-[NEKEventStore _createCalendarForWrapper:]
Store not found with storeID: %@
Created calendar with title %{public}@, identifier %{public}@
Asked to set a nonexistent calendar as the default. Ignoring. Calendar identifier = %{public}@, store identifier = %{public}@
recordMap
T@"NEKRecordMap",R,N,V_recordMap
shouldTrackChanges
TB,N,V_shouldTrackChanges
changeObserver
T@"NEKChangeObserver",&,N,V_changeObserver
com.apple.eventkitsync.recievedpairedsyncstart
com.apple.eventkitsync.recievedreunionsyncstart
com.apple.pairedsync.eventkitsync
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NEKSyncBundle/Models/NEKSyncCoordinator.m
-[NEKSyncCoordinator init]
NEKSyncCoordinator initialized %@
-[NEKSyncCoordinator syncCoordinator:beginSyncSession:]
-[NEKSyncCoordinator syncCoordinator:didInvalidateSyncSession:]
None
LimitPush
-[NEKSyncCoordinator syncCoordinatorDidChangeSyncRestriction:]
Restriction is now %{public}s
syncCoordinator
T@"PSYSyncCoordinator",&,N,V_syncCoordinator
hasDeferredChanges
TB,N,V_hasDeferredChanges
session
T@"PSYServiceSyncSession",&,N,V_session
depth
file
line
function
Some XPC transactions are still open: %@
XPC transaction underflow detected: %@ @ %@(%@:%d)
%@ : {depth : %@, %@ (%@:%@)}
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
com.apple.mobilecal
InviteeDeclineAlerts-rebroadcast
ShowDeclinedEvents-rebroadcast
LastDeselectedCalendarSyncHashes
kCalTimeZonePrefChangedDistributedNotification
TimeZoneCityArray
overlayCalendarID
CalEventDeclineEventPrefChangedRebroadcast
CalEventShowInviteeDeclinesPrefChangedRebroadcast
CalEventDeclineEventPrefChanged
CalEventShowInviteeDeclinesPrefChanged
v32@?0@"NSString"8@"NSSet"16^B24
com.apple.private.alloy.eventkitmutation
setRemCom
v16@?0@"NDTMessage"8
setParStt
setAlmSno
deleEvent
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NEKSyncBundle/Models/NEKRPCEndpoint.m
-[NEKRPCEndpoint _recvSetParticipantStatusEndpoint:]
Incoming message missing required body.
Local store ID %@, remote store ID %@
itemIdentifier: %@, event: <%p>
Failure to save event: %{public}@
-[NEKRPCEndpoint _recvSetReminderCompletedEndpoint:]
Cannot finder reminder '%{public}@:%{public}@'
Failure to save reminder: %{public}@
Reminder saved successfully.
-[NEKRPCEndpoint _recvDeleteEventEndpoint:]
v24@?0@"EKEvent"8^B16
Failure to delete event %@: %{public}@
I have %d candidate events so I'm not sure what to delete.
-[NEKRPCEndpoint _recvSetAlarmSnoozeEndpoint:]
Snooze Reminder: time:%.1f calendar: '%{public}@' reminder: '%{public}@' externalId: %@
No reminder alarm found
Snooze Event: time:%.1f calendar: '%{public}@' itemIdentifier: %@ event: <%p> local store ID: %@, remote store ID: %@
Event saved successfully.
No event alarm found
v16@?0@"NSArray"8
EKReminder *findReminderInStore(EKEventStore *__strong, NSString *__strong, NSString *__strong, NSString *__strong)
Found reminder %{public}@:%{public}@
Cannot find reminder %{public}@:%{public}@
isDefaultLocalCalendar
hasIdentifier
T@"NSString",&,N,V_identifier
hasIsDefaultLocalCalendar
TB,N,V_isDefaultLocalCalendar
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NEKSyncBundle/Models/NEKDeletionWrapper.m
+[NEKDeletionWrapper deletionWrapperForRecordID:eventStore:]
Called with nil recordID or nil event store
<%@ %p; type=%@; identifier=%@; calendarIdentifier=%@>
Calendar
Event
Reminder
Store
snoozeAmount
alarmIdentifier
itemIdentifier
hasSnoozeAmount
Td,N,V_snoozeAmount
hasAlarmIdentifier
T@"NSString",&,N,V_alarmIdentifier
hasItemIdentifier
T@"NSString",&,N,V_itemIdentifier
com.apple.EventKitSync
WatchSync
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/eventkitsyncd/NEKDaemon.m
-[NEKDaemon init]
Pre prefs observer init
Post prefs observer init
com.apple.eventkitsyncd.daemon
com.apple.eventkitsyncd.notifications
-[NEKDaemon startSyncControllerIfNeeded]
NEKSyncController NOT started.
com.apple.notifyd.matching
__38-[NEKDaemon _registerForNotifications]_block_invoke
Beginning XPC transaction for com.apple.notifyd.matching notification named %{public}@
Launched from IDS
EventKitSyncTesting
Triggering full sync for testing notification %{public}@
Class C locked, full sync request ignored
SignificantTimeChangeNotification
SignificantTimeChange incremental sync
SignificantTimeChange ignored
Ending XPC transaction for com.apple.notifyd.matching notification named %{public}@
v16@?0@"NSObject<OS_xpc_object>"8
-[NEKDaemon _registerForNotifications]
Registered for notifications.
com.apple.eventkitsync.retry
__36-[NEKDaemon _registerForXpcActivity]_block_invoke
XPC Activity State: %d
Failed to set done
-[NEKDaemon _registerForXpcActivity]
Registered for XPC activities. All the fun ones, anyway.
-[NEKDaemon didReceiveStartSyncCommand:]
Received full sync command from NEKSyncCoordinator.
Prefs synced. Starting sync controller.
-[NEKDaemon didReceiveReunionSyncCommand:]
Received reunion sync command.
Logs/CrashReporter/DiagnosticLogs/EventKitSync
eks-log-
.sqlitedb
eks-log-%t.sqlitedb
internal_enableSqlLogging
internal_enableOsLogging
InternalBuild
Oji6HRoPi7rH7HPdWVakuw
[VOID]
[%08lx]
Obfuscate
windowStart
windowEnd
testWindowStart
testWindowEnd
enableInfiniteWindow
NEKSyncWindow
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NEKSyncBundle/Models/NEKSyncWindow.m
-[NEKSyncWindow _loadLastSyncWindow]
Asked for incremental sync window when there was no previous sync window data
spanStart
Td,N,V_spanStart
spanEnd
Td,N,V_spanEnd
taskCutoff
Td,N,V_taskCutoff
T@"NSString",C,N,V_name
T@"NSNumber",&,N,V_defaultAlarmOffset
Ti,N,V_type
T@"NSString",C,N,V_constraintsDescriptionPath
T@"NSString",C,N,V_externalModificationTag
T@"NSString",C,N,V_creatorBundleID
T@"NSString",C,N,V_creatorCodeSigningIdentity
T@"NSString",C,N,V_accountPersistentID
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NEKSyncBundle/Models/NEKStoreAttributes.m
BOOL NEKConfigureStoreInDatabaseWithAttributes(CalStoreRef, CalDatabaseRef, NEKStoreAttributes *__strong)
Starting configuration of store with persistent ID: [%{public}@].
B24@?0@"NSString"8@"NSString"16
B24@?0@"NSNumber"8@"NSNumber"16
@"NSString"12@?0B8
Store's 'name' has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'defaultAlarmOffset' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'type' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'enabled' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's '%@' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'usesSelfAttendee' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'constraintsDescriptionPath' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'externalID' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'externalModificationTag' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'creatorBundleID' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'creatorCodeSigningIdentity' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'accountPersistentID' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'supportsSharedCalendars' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'allowsTasks' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'allowsEvents' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'allowsCalendarAddDeleteModify' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'onlyCreatorCanModify' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'snoozeAlarmRequiresDetach' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'supportsAlarmAcknowledgedDate' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Completed configuration of store with persistent ID: [%{public}@].
RecordMap
com.apple.eventkitsync.recordmap
Default local calendar
UUID: %@
<%@ %p; %@>
supportsSecureCoding
TB,R
TB,R,N,V_isDefaultLocalCalendar
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NEKSyncBundle/Models/NEKProgressLiar.m
__24-[NEKProgressLiar start]_block_invoke
Lying about progress: %f%%
__50-[NEKProgressLiar doneForRealNotifyingPairedSync:]_block_invoke
Count: %f, elapsed: %f, computed rate: %f r/s
count
Td,N,V_count
isReadonly
isHidden
isImmutable
isInbox
isNotificationsCollection
isSharingInvitation
isSubscribed
isHolidayCalendar
isFamilyCalendar
isIgnoringEventAlerts
isIgnoringSharedCalendarNotifications
isSchedulingProhibited
isDefaultCalendarForStore
digest
symbolicColorName
colorString
displayOrder
sharingStatus
sharedOwnerName
sharedOwnerAddress
sharingInvitationResponse
publishedURLString
canBePublished
canBeShared
isPublished
externalIdentificationTag
syncToken
externalRepresentation
supportedEntityTypes
hasBeenAlerted
notes
subCalAccountID
pushKey
selfIdentityDisplayName
selfIdentityEmail
selfIdentityAddressString
selfIdentityFirstName
selfIdentityLastName
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityAddressString
ownerIdentityFirstName
ownerIdentityLastName
hasUUID
uUID
T@"NSString",&,N,V_uUID
hasTitle
T@"NSString",&,N,V_title
hasIsReadonly
TB,N,V_isReadonly
hasIsHidden
TB,N,V_isHidden
hasIsImmutable
TB,N,V_isImmutable
hasIsInbox
TB,N,V_isInbox
hasIsNotificationsCollection
TB,N,V_isNotificationsCollection
hasIsSharingInvitation
TB,N,V_isSharingInvitation
hasIsSubscribed
TB,N,V_isSubscribed
hasIsHolidayCalendar
TB,N,V_isHolidayCalendar
hasIsFamilyCalendar
TB,N,V_isFamilyCalendar
hasIsIgnoringEventAlerts
TB,N,V_isIgnoringEventAlerts
hasIsIgnoringSharedCalendarNotifications
TB,N,V_isIgnoringSharedCalendarNotifications
hasIsSchedulingProhibited
TB,N,V_isSchedulingProhibited
hasIsDefaultCalendarForStore
TB,N,V_isDefaultCalendarForStore
T@"NSString",&,N,V_type
hasDigest
T@"NSData",&,N,V_digest
hasSymbolicColorName
T@"NSString",&,N,V_symbolicColorName
hasColorString
T@"NSString",&,N,V_colorString
hasDisplayOrder
Ti,N,V_displayOrder
hasSharingStatus
TQ,N,V_sharingStatus
hasSharedOwnerName
T@"NSString",&,N,V_sharedOwnerName
hasSharedOwnerAddress
T@"NSString",&,N,V_sharedOwnerAddress
hasSharingInvitationResponse
TQ,N,V_sharingInvitationResponse
hasPublishedURLString
T@"NSString",&,N,V_publishedURLString
hasCanBePublished
TB,N,V_canBePublished
hasCanBeShared
TB,N,V_canBeShared
hasIsPublished
TB,N,V_isPublished
hasExternalIdentificationTag
T@"NSString",&,N,V_externalIdentificationTag
hasSyncToken
T@"NSString",&,N,V_syncToken
hasExternalRepresentation
T@"NSData",&,N,V_externalRepresentation
hasSupportedEntityTypes
TQ,N,V_supportedEntityTypes
hasInvitationStatus
TQ,N,V_invitationStatus
hasHasBeenAlerted
TB,N,V_hasBeenAlerted
hasNotes
T@"NSString",&,N,V_notes
hasSubCalAccountID
T@"NSString",&,N,V_subCalAccountID
hasPushKey
T@"NSString",&,N,V_pushKey
hasSelfIdentityDisplayName
T@"NSString",&,N,V_selfIdentityDisplayName
hasSelfIdentityEmail
T@"NSString",&,N,V_selfIdentityEmail
hasSelfIdentityAddressString
T@"NSString",&,N,V_selfIdentityAddressString
hasSelfIdentityFirstName
T@"NSString",&,N,V_selfIdentityFirstName
hasSelfIdentityLastName
T@"NSString",&,N,V_selfIdentityLastName
hasOwnerIdentityDisplayName
T@"NSString",&,N,V_ownerIdentityDisplayName
hasOwnerIdentityEmail
T@"NSString",&,N,V_ownerIdentityEmail
hasOwnerIdentityAddressString
T@"NSString",&,N,V_ownerIdentityAddressString
hasOwnerIdentityFirstName
T@"NSString",&,N,V_ownerIdentityFirstName
hasOwnerIdentityLastName
T@"NSString",&,N,V_ownerIdentityLastName
<%@ %p; persistentID=%@; type=%@>
T@"NEKStoreAttributes",R,N,V_attributes
CalDAV
Exchange
Local
MobileMe
Native
Other
Subscribed
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NEKSyncBundle/Models/NEKDatabaseFileManager.m
+[NEKDatabaseFileManager syncStateDBPathFor:]
Returning suggested db path: %@
v16@?0@"NSNotification"8
__43-[NEKDatabaseFileManager _blockUntilPaired]_block_invoke.50
Pairing complete
SQLBindError
Index out of bounds
SQLFetchError
Column out of bounds
parsed
T^{sqlite3_stmt=},N,V_parsed
com.apple.eventkitsync.seenmap
SeenMap.db
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NEKSyncBundle/Models/NEKSeenMap.m
__23-[NEKSeenMap _createDb]_block_invoke
drop table if exists seen
create table if not exists seendata (uuid TEXT, start_date REAL, end_date REAL, location TEXT, primary key (uuid))
__32-[NEKSeenMap _prepareStatements]_block_invoke_2
Sqlite statement prepare failed for "%{public}s"
B24@?0^^{sqlite3_stmt}8*16
insert or replace into seendata values ( ?, ?, ?, ?);
select start_date, end_date, location from seendata where uuid = ?;
delete from seendata where uuid = ?;
delete from seendata where end_date < ?;
1.2.8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NEKSyncBundle/Categories/NSData+EventKitSync.m
-[NSData(EventKitSync) NEKSqueeze]
Compressed ICS %d->%d (%%%f)
-[NSData(EventKitSync) NEKFluff]
Aborting ICS decompression: %{public}s
status
hasStatus
TI,N,V_status
com.apple.eventkitsync.retrysync
ResetSync
DeltaSync
NightlySync
NEKSyncController
DeltaEstRate
FullEstRate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NEKSyncBundle/Models/NEKSyncController.m
__26-[NEKSyncController start]_block_invoke
Starting NEKSyncController
com.apple.private.alloy.eventkitsync
Failed to resume SYService: %{public}@
-[NEKSyncController setNeedsFullSync]
Enqueueing a full sync
-[NEKSyncController setNeedsReunionSync]
Enqueueing a delta/reunion sync
FaultCount
RetryMustBeReset
-[NEKSyncController _retrySync:]
Retrying a failed sync (%d) (delta)
Retrying a failed sync (%d) (reset)
-[NEKSyncController createOrUpdateSYObject:]
object is not of recognized class: %{public}@
-[NEKSyncController deleteSYObject:]
Companion received
-[NEKSyncController service:willPreferSession:overSession:]
sending
receiving
-[NEKSyncController service:startSession:error:]
startSession %{public}@ session: %{public}@
Session already in progress.
Delta sync fired but there are no change sets in the queue. Aborting.
Delta sync fired but it really wants to be a reset sync.
Change set was empty, not starting a sync session.
Session timeout: %f
No session created so declaring completion to PSYSync
internal_probabilityOfSyncFailure
-[NEKSyncController scheduleRetry]
Scheduling retry sync in %f seconds
-[NEKSyncController service:sessionEnded:error:]
Session is nil
service.currentSession is nil, clearing user session.
Current session [%{public}@] != ending session [%{public}@]. Error: %{public}@ Dropping notificaiton on floor.
sessionEnded %{public}@ session: %{public}@
Send complete with error: %{public}@
Sync failed.
 (FAKE)
There was a sync error%{public}@.
UserCancelled error, retry should already be scheduled.
LostCollisionTest error, retry should already be scheduled.
Computed rate: %f
New estimated rates: full %f, delta %f
Recv complete with error: %{public}@
__42-[NEKSyncController serviceDidPairDevice:]_block_invoke
Resuming SYService on device-paired returned (possibly benign) error: %{public}@
-[NEKSyncController changeObserverDidObserveChanges:]
Poking CS for delta sync
Delta sync requested but we have faults. Ignoring request.
-[NEKSyncController changeObserverDidObserveNightlySync:]
Poking CS for nightly sync
Nightly sync requested but we have faults. Ignoring request.
-[NEKSyncController changeObserverDidObserveResetSync:]
Poking CS for full sync
T@"<NEKSyncControllerDelegate>",W,N,V_delegate
isDoingFullSync
TB,R,N,V_isDoingFullSync
eventStore
T@"NEKEventStore",R,N,V_eventStore
v32@?0@"NSString"8@"NEKPBICSWrapperMetadata"16^B24
v32@?0@"NSString"8Q16^B24
v20@?0@"NSArray"8i16
<%@ %p; empty changeset>
<%@ %p; %@ inserts; %@ updates; %@ deletes>
changeNumber
Tq,N,V_changeNumber
completion
T@?,C,N,V_completion
truncated
TB,N,V_truncated
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NEKSyncBundle/Models/NEKCalendarAttributes.m
-[NEKCalendarAttributes didCalendarChange:]
Checking to see if calendar with title %{public}@ identifier %{public}@ and syncToken %{public}@ and externalModificationTag %{public}@ and externalIdentificationTag %{public}@ has changed. New syncToken and externalModificationTag and externalIdentificationTag are %{public}@ and %{public}@ and %{public}@
publishedURL
selfIdentityAddress
ownerIdentityAddress
No changes for calendar with title %{public}@, identifier %{public}@
T@"NSString",C,N,V_title
isHolidyCalendar
TB,N,V_isHolidyCalendar
T@"NSString",C,N,V_type
T@"NSData",C,N,V_digest
T@"NSString",C,N,V_symbolicColorName
T@"NSString",C,N,V_colorString
Ti,N,V_sharingStatus
T@"NSString",C,N,V_sharedOwnerName
T@"NSString",C,N,V_sharedOwnerAddress
Ti,N,V_sharingInvitationResponse
T@"NSURL",C,N,V_publishedURL
T@"NSString",C,N,V_externalIdentificationTag
T@"NSString",C,N,V_syncToken
T@"NSData",C,N,V_externalRepresentation
Ti,N,V_supportedEntityTypes
T@"NSString",C,N,V_notes
T@"NSString",C,N,V_subCalAccountID
T@"NSString",C,N,V_pushKey
T@"NSString",C,N,V_selfIdentityDisplayName
T@"NSString",C,N,V_selfIdentityEmail
T@"NSURL",C,N,V_selfIdentityAddress
T@"NSString",C,N,V_selfIdentityFirstName
T@"NSString",C,N,V_selfIdentityLastName
T@"NSString",C,N,V_ownerIdentityDisplayName
T@"NSString",C,N,V_ownerIdentityEmail
T@"NSURL",C,N,V_ownerIdentityAddress
T@"NSString",C,N,V_ownerIdentityFirstName
T@"NSString",C,N,V_ownerIdentityLastName
BOOL _calendarPropertyIsEqualToAttributeProperty(__strong id<NSObject>, __strong id<NSObject>, NSString *__strong)
_calendarPropertyIsEqualToAttributeProperty: Calendar and attributes property %{public}@ is the same: %{public}@
_calendarPropertyIsEqualToAttributeProperty: Calendar and attributes property %{public}@ are different: (calendar) %{public}@ != (attributes) %{public}@
encoding
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NEKSyncBundle/Models/NEKSyncSession.m
-[NEKSyncSession init]
-[NEKSyncSession syncSession:enqueueChanges:error:]
Enqueued last change.
-[NEKSyncSession syncSession:applyChanges:completion:]
Applying changes
Calling sync session completion.
changeArray
T@"NEKChangeArray",&,N,V_changeArray
progressLiar
T@"NEKProgressLiar",&,N,V_progressLiar
changeCount
Tq,N,V_changeCount
start
Td,N,V_start
syncKind
T@"NSString",&,N,V_syncKind
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NEKSyncBundle/Models/proto/NEKProtobufSerializer.m
-[NEKProtobufSerializer dataFromChange:]
dataWithSYChange: serializing object of class: %@ S_PKT_NUM:%u
-[NEKProtobufSerializer changeFromData:ofType:]
SYChangeWithData - unrecognized type: %{public}@
SYChangeWithData: returning object of type: %{public}@ R_PKT_NUM:%u
Could not create wrapper object
changeObserver.keyqueue
com.apple.eventkitsync.changeobserver.%@
com.apple.eventkitsync.changeobserver.sequencenumber
taskCalendarId
eventCalendarId
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NEKSyncBundle/Models/NEKChangeObserver.m
-[NEKChangeObserver databaseDidChange]
Ignoring delta sync request as sync coordinator says it is not time.
-[NEKChangeObserver notifyForDatabaseUpdatesIfNeeded]
Sync attempt deferred as dataaccess is busy.
Sync attempt ignored as there are no pending changes.
__33-[NEKChangeObserver fetchChanges]_block_invoke
Reverting database for external change.
Pulled -1 from lastSequenceNumber.
Saw sequence number failure already. Still waiting for corrective sync to complete.
Previous sequence number: %d, current sequence number: %d
Change log numbers went backward, forcing full sync
Change log truncated
Changed default task calendar
Changed default event calendar
Updates is NULL. This shouldn't happen.
ChangeSet is empty.
Inserts:
Updates:
Deletes:
-[NEKChangeObserver fetchChanges]
Timeout out waiting for database to respond.
-[NEKChangeObserver fetchEverything]
-[NEKChangeObserver fetchNightly]
-[NEKChangeObserver moveChangeNumber:]
It's kinda weird but I'm rolling the changelog sequence number back.
-[NEKChangeObserver setLastSequenceNumber:]
Setting anchor sequence number: %d
__34-[NEKChangeObserver syncBeginning]_block_invoke
SYNCING IS NOW VERBOTEN! VERBOTEN!
__36-[NEKChangeObserver syncTimerFired:]_block_invoke
SYNCING IS NOW fine. Just fine.
T@"<NEKChangeObserverDelegate>",W,N,V_delegate
weakDatabaseController
T@"NEKEventStore",W,N,V_weakDatabaseController
void _defaultCalendarChanged(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
Default Calendar Changed
void logArray(CFArrayRef)
%@, %@, %@, %@
%@, %@
%@, %@, %@
--empty--
invitationChangedPropertyFlagDate
invitationChangedPropertyFlagTime
invitationChangedPropertyFlagTitle
invitationChangedPropertyFlagLocation
invitationChangedPropertyFlagAttendeeComment
invitationChangedPropertyFlagAttendeeStatus
hasSelfAttendeeEmail
T@"NSString",&,N,V_selfAttendeeEmail
hasEntityType
TQ,N,V_entityType
hasInvitationChangedPropertyFlagDate
TB,N,V_invitationChangedPropertyFlagDate
hasInvitationChangedPropertyFlagTime
TB,N,V_invitationChangedPropertyFlagTime
hasInvitationChangedPropertyFlagTitle
TB,N,V_invitationChangedPropertyFlagTitle
hasInvitationChangedPropertyFlagLocation
TB,N,V_invitationChangedPropertyFlagLocation
hasInvitationChangedPropertyFlagAttendeeComment
TB,N,V_invitationChangedPropertyFlagAttendeeComment
hasInvitationChangedPropertyFlagAttendeeStatus
TB,N,V_invitationChangedPropertyFlagAttendeeStatus
hasSelfAttendeeUUID
T@"NSString",&,N,V_selfAttendeeUUID
hasSelfOrganizerEmail
T@"NSString",&,N,V_selfOrganizerEmail
hasSelfOrganizerUUID
T@"NSString",&,N,V_selfOrganizerUUID
hasAttendeeStatus
TQ,N,V_attendeeStatus
SQLErrString
SQLErrMessage
SQLErrCode
T@"NDTSQFile",&,N,V_db
packetNumber
storeWrapper
calendarWrapper
ICSWrapper
deletionWrapper
setReminderComplete
setParticipantStatus
setAlarmSnooze
deleteEvent
hasPacketNumber
TI,N,V_packetNumber
hasStoreWrapper
T@"NEKPBStoreWrapper",&,N,V_storeWrapper
hasCalendarWrapper
T@"NEKPBCalendarWrapper",&,N,V_calendarWrapper
hasICSWrapper
iCSWrapper
T@"NEKPBICSWrapper",&,N,V_iCSWrapper
hasDeletionWrapper
T@"NEKPBDeletionWrapper",&,N,V_deletionWrapper
hasSetReminderComplete
T@"NEKPBSetReminderComplete",&,N,V_setReminderComplete
hasSetParticipantStatus
T@"NEKPBSetParticipantStatus",&,N,V_setParticipantStatus
hasSetAlarmSnooze
T@"NEKPBSetAlarmSnooze",&,N,V_setAlarmSnooze
hasDeleteEvent
T@"NEKPBDeleteEvent",&,N,V_deleteEvent
basename
T@"NSString",&,N,V_basename
index
TQ,N,V_index
INSERT INTO log_messages VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
DELETE FROM log_messages WHERE rowid < ?
([^%]?)%\{(:?public|private)\}
PRAGMA user_version=1;
CREATE TABLE IF NOT EXISTS log_messages (walltime REAL, machtime REAL, pid INT, tid INT, subsystem INT, category INT, level INT, file INT, line INT, function INT, message TEXT)
CREATE TABLE IF NOT EXISTS subsystems (subsystem TEXT UNIQUE)
CREATE TABLE IF NOT EXISTS categories (category TEXT UNIQUE)
CREATE TABLE IF NOT EXISTS filenames (filename TEXT UNIQUE)
CREATE TABLE IF NOT EXISTS functions (function TEXT UNIQUE)
CREATE VIEW IF NOT EXISTS log_messages_ex AS SELECT  L.rowid rowid,           datetime(walltime, 'unixepoch', 'localtime') localtime,           L.walltime unixepoch,           L.machtime machtime,           L.pid pid,           SB.subsystem subsystem,           CA.category category,           L.level level,           F.filename file,           L.line line,           PF.function function,           L.message message       FROM log_messages L               JOIN subsystems SB ON L.subsystem = SB.rowid               JOIN categories CA ON L.category = CA.rowid               JOIN filenames F ON L.file = F.rowid               JOIN functions PF ON L.function = PF.rowid;
INSERT OR IGNORE INTO categories (category) VALUES (?)
SELECT rowid FROM categories WHERE category = ?
i16@?0@"NSArray"8
INSERT OR IGNORE INTO subsystems (subsystem) VALUES (?)
SELECT rowid FROM subsystems WHERE subsystem = ?
NDTSQLogging
INSERT OR IGNORE INTO filenames (filename) VALUES (?)
SELECT rowid FROM filenames WHERE filename = ?
INSERT OR IGNORE INTO functions (function) VALUES (?)
SELECT rowid FROM functions WHERE function = ?
level
TI,N
TI,N,V_level
trimProbabilityDenominator
TI,N,V_trimProbabilityDenominator
trimAmount
TQ,N,V_trimAmount
T@"NEKPBStoreAttributes",&,N,V_attributes
Local store
persistentID: %@
msgType
data
T@"NSData",&,N,V_data
T@"NSString",&,N,V_path
T@"NSString",&,N,V_msgType
responseIdentifier
T@"NSString",&,N,V_responseIdentifier
NDTMessaging
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-186/NanoDaemonToolkit/NanoDaemonToolkit/NDTMessaging.m
-[NDTMessaging _rawSendData:type:responseIdentifier:error:]
_rawSendData has id %@
_rawSendData has an error: %{public}@
-[NDTMessaging _rawSendFile:type:responseIdentifier:error:]
_rawSendFile has id %@
_rawSendFile has an error: %{public}@
__55-[NDTMessaging sendMessage:responseHandler:completion:]_block_invoke
No identifier returned. Error: %{public}@
-[NDTMessaging service:account:incomingData:fromID:context:]
Incoming reply message but no handler registered.
Can't find a handler for this message
-[NDTMessaging service:account:incomingResourceAtURL:metadata:fromID:context:]
-[NDTMessaging service:account:identifier:didSendWithSuccess:error:]
didSend:%c identifier: %@, error: %{public}@
hash
superclass
description
T@"NSString",R,C
idsOptions
T@"NSDictionary",&,N,V_idsOptions
/tmp/verifier_data.XXXXXX
%s/%@
isEffectivelyEmpty
TB,N,V_isEffectivelyEmpty
isTruncated
TB,N,V_isTruncated
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
numberWithBool:
alloc
init
setStoreIdentifier:
setCalendarIdentifier:
setAttributes:
setOldCalendarIdentifier:
class
allocWithZone:
copyWithZone:
isMemberOfClass:
isEqual:
hash
mergeFrom:
hasStoreIdentifier
hasCalendarIdentifier
hasAttributes
setIsDefaultTaskCalendar:
setHasIsDefaultTaskCalendar:
hasIsDefaultTaskCalendar
setIsDefaultEventCalendar:
setHasIsDefaultEventCalendar:
hasIsDefaultEventCalendar
hasOldCalendarIdentifier
readFrom:
writeTo:
copyTo:
.cxx_destruct
storeIdentifier
calendarIdentifier
attributes
isDefaultTaskCalendar
isDefaultEventCalendar
oldCalendarIdentifier
_attributes
_calendarIdentifier
_oldCalendarIdentifier
_storeIdentifier
_isDefaultEventCalendar
_isDefaultTaskCalendar
_has
setPersistentID:
hasPersistentID
setIsLocalStore:
setHasIsLocalStore:
hasIsLocalStore
persistentID
isLocalStore
_persistentID
_isLocalStore
entityType
setEntityType:
selfAttendeeEmail
setSelfAttendeeEmail:
selfAttendeeUUID
setSelfAttendeeUUID:
selfOrganizerEmail
setSelfOrganizerEmail:
selfOrganizerUUID
setSelfOrganizerUUID:
attendeeStatus
setAttendeeStatus:
invitationStatus
setInvitationStatus:
identifier
setIdentifier:
calInvitationChangePropertyFlags
setCalInvitationChangePropertyFlags:
externalID
setExternalID:
_entityType
_attendeeStatus
_invitationStatus
_calInvitationChangePropertyFlags
_selfAttendeeEmail
_selfAttendeeUUID
_selfOrganizerEmail
_selfOrganizerUUID
_identifier
_externalID
properties
allValues
UUID
UUIDString
NEKFluff
NEKSqueeze
objectIdentifier
objectForKey:
propertiesForCalendarItemIdentifier:
numberWithUnsignedInt:
keyEnumerator
countByEnumeratingWithState:objects:count:
arrayWithCapacity:
wrapperForCalendarItem:needsInvite:eventStore:
addObject:
level
logLevel:file:line:function:machTime:format:
initWithCalendar:
setCalendarItemCount:
setPropertiesForWrapper:withCalendarItems:needsInvite:sendAllProperties:eventStore:calendar:originalEvent:
initWithData:encoding:
setZICSData:
setSyncId:
setAttendeeStatus:forIdentifier:
setSelfAttendeeEmail:forIdentifier:
absoluteString
setSelfAttendeeUUID:forIdentifier:
setSelfOrganizerEmail:forIdentifier:
setSelfOrganizerUUID:forIdentifier:
setCalInvitationChangePropertyFlags:forIdentifier:
containsObject:
setInvitationStatus:forIdentifier:
setExternalID:forIdentifier:
calendarIdentifierInRowMappingForEventOrTask:
hasRowMappingForEntity:
setTaskCompleted:
setTaskCompletionDate:
setAllPropertiesForItem:identifier:wrapper:needsInvite:eventStore:calendar:
setMinimalPropertiesForItem:identifier:wrapper:needsInvite:eventStore:calendar:
title
numberWithInteger:
wrappersForCalendarItems:database:needsInvite:eventStore:
sequencer
changeType
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
syncId
ICSWrapperMetadata
ICSData
setICSData:
setMetadata:forCalendarItemIdentifier:
selfAttendeeEmailForIdentifier:
selfAttendeeUUIDForIdentifier:
selfOrganizerEmailForIdentifier:
selfOrganizerUUIDForIdentifier:
invitationStatusForIdentifier:
attendeeStatusForIdentifier:
calInvitationChangedPropertyFlagsForIdentifier:
externalIDForIdentifier:
enumerateCalendarItemIdentifiersUsingBlock:
entityTypeForCalendarItemWithIdentifier:
zICSData
oldIdentifier
setOldIdentifier:
nuevoIdentifier
setNuevoIdentifier:
calendarItemCount
isTaskCompleted
taskCompletionDate
setProperties:
_syncId
_properties
_taskCompleted
_zICSData
_oldIdentifier
_nuevoIdentifier
_calendarItemCount
_title
_taskCompletionDate
removeAllObjects
count
objectAtIndex:
initWithCapacity:
numberWithDouble:
addMetadataKeys:
addMetadataValues:
metadataKeysCount
clearMetadataKeys
metadataKeysAtIndex:
metadataValuesCount
clearMetadataValues
metadataValuesAtIndex:
setSyncID:
metadataKeysType
metadataValuesType
hasICSData
setHasCalendarItemCount:
hasCalendarItemCount
hasSyncID
setHasTaskCompletionDate:
hasTaskCompletionDate
hasOldIdentifier
hasNuevoIdentifier
iCSData
metadataKeys
setMetadataKeys:
metadataValues
setMetadataValues:
syncID
_iCSData
_metadataKeys
_metadataValues
_syncID
initWithStore:
copy
initWithCalendarRef:useAttributes:
initWithCalendarRef:
initWithStoreIdentifier:attributes:calendarIdentifier:
initWithPath:
path
initWithOptions:capacity:
_bootstrap
date
initWithCalendarIdentifier:
components:fromDate:
year
month
hour
minute
second
stringByReplacingOccurrencesOfString:withString:
setCountLimit:
_recreatePath
_createParentDirectory
_openDatabase
_prepDatabase
_addSchemas
_makeErrorDictionary
exceptionWithName:reason:userInfo:
delegate
newFileName:
_newPath
defaultManager
stringByDeletingLastPathComponent
length
numberWithInt:
dictionaryWithObjects:forKeys:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
domain
isEqualToString:
code
UTF8String
executeSql:
initWithName:
addSchema:
setDb:
member:
createTables
instanceName
currentVersion
_instanceVersion:
migrateFrom:
_setInstance:version:
stringWithUTF8String:
setParsed:
resetBindCursor
parsed
getIntegerForKey:default:
setInteger:forKey:
cache:willEvictObject:
initWithURL:
parseSql:andRun:
parseMultipleSql:andRun:
begin
commit
rollback
setPath:
setDelegate:
pathTemplate
setPathTemplate:
_readSource
_readFd
_bootstrapDepth
_statementCache
_instanceVersions
_memberSchemas
_path
_delegate
_pathTemplate
predicateWithBlock:
targetableDevice
systemBuildVersion
compare:options:range:
syncStateDBPathFor:
_loadPlist
setValue:forKey:
_savePlist
objectForKeyedSubscript:
integerValue
doubleValue
dataWithPropertyList:format:options:error:
writeToFile:atomically:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
instance
setStringValue:forKey:
getStringValueForKey:default:
setIntegerValue:forKey:
getIntegerValueForKey:default:
setDoubleValue:forKey:
getDoubleValueForKey:default:
_queue
_plistContents
setCalendarName:
setReminderTitle:
setExternalIdentifier:
setIsComplete:
setHasIsComplete:
hasIsComplete
hasCalendarName
hasReminderTitle
hasExternalIdentifier
isComplete
calendarName
reminderTitle
externalIdentifier
_calendarName
_externalIdentifier
_reminderTitle
_isComplete
setName:
setConstraintsDescriptionPath:
setExternalModificationTag:
setCreatorBundleID:
setCreatorCodeSigningIdentity:
setAccountPersistentID:
hasName
setDefaultAlarmOffset:
setHasDefaultAlarmOffset:
hasDefaultAlarmOffset
setType:
setHasType:
hasType
setIsEnabled:
setHasIsEnabled:
hasIsEnabled
setIsFacebook:
setHasIsFacebook:
hasIsFacebook
setUsesSelfAttendee:
setHasUsesSelfAttendee:
hasUsesSelfAttendee
hasConstraintsDescriptionPath
hasExternalID
hasExternalModificationTag
hasCreatorBundleID
hasCreatorCodeSigningIdentity
hasAccountPersistentID
setSupportsSharedCalendars:
setHasSupportsSharedCalendars:
hasSupportsSharedCalendars
setAllowsTasks:
setHasAllowsTasks:
hasAllowsTasks
setAllowsEvents:
setHasAllowsEvents:
hasAllowsEvents
setAllowsCalendarAddDeleteModify:
setHasAllowsCalendarAddDeleteModify:
hasAllowsCalendarAddDeleteModify
setOnlyCreatorCanModify:
setHasOnlyCreatorCanModify:
hasOnlyCreatorCanModify
setSnoozeAlarmRequiresDetach:
setHasSnoozeAlarmRequiresDetach:
hasSnoozeAlarmRequiresDetach
setSupportsAlarmAcknowledgedDate:
setHasSupportsAlarmAcknowledgedDate:
hasSupportsAlarmAcknowledgedDate
name
defaultAlarmOffset
type
isEnabled
isFacebook
usesSelfAttendee
constraintsDescriptionPath
externalModificationTag
creatorBundleID
creatorCodeSigningIdentity
accountPersistentID
supportsSharedCalendars
allowsTasks
allowsEvents
allowsCalendarAddDeleteModify
onlyCreatorCanModify
snoozeAlarmRequiresDetach
supportsAlarmAcknowledgedDate
_accountPersistentID
_constraintsDescriptionPath
_creatorBundleID
_creatorCodeSigningIdentity
_defaultAlarmOffset
_externalModificationTag
_name
_type
_allowsCalendarAddDeleteModify
_allowsEvents
_allowsTasks
_isEnabled
_isFacebook
_onlyCreatorCanModify
_snoozeAlarmRequiresDetach
_supportsAlarmAcknowledgedDate
_supportsSharedCalendars
_usesSelfAttendee
hasSyncId
bindString:
step
fetchInteger
bindInteger:
fetchDouble
bindDouble:
fetchString
fetchBlob
bindBlob:
getDoubleForKey:default:
setDouble:forKey:
getStringForKey:default:
setString:forKey:
getDataForKey:default:
setData:forKey:
_insert
_select
_baseName
initWithIdentifier:
identifierForRecordID:
setIdentifier:forRecordID:
deleteIdentifierForRecordID:
commit:
reset
removeAllRecords
rowID
setRowID:
entityRowID
setEntityRowID:
setUUID:
_rowID
_entityRowID
_UUID
databasePath
insertTableIfNeeded
prepareStatements
_beginTransaction
dealloc
recordForRecordID:
stringWithCString:encoding:
errorWithDomain:code:userInfo:
_selectRecord
_updateRecord
_insertRecord
_deleteRecord
fileExistsAtPath:
setEventIdentifier:
setEventTitle:
setCalendarTitle:
hasEventIdentifier
hasEventTitle
setEventStart:
setHasEventStart:
hasEventStart
hasCalendarTitle
setSpan:
setHasSpan:
hasSpan
eventIdentifier
eventTitle
eventStart
calendarTitle
span
_eventStart
_calendarTitle
_eventIdentifier
_eventTitle
_span
stores
setStores:
calendars
setCalendars:
tasks
setTasks:
events
setEvents:
_stores
_calendars
_tasks
_events
initWithDatabase:recordMapIdentifier:
defaultRecordMap
initWithDatabase:queue:
setWeakDatabaseController:
_setPersistsSequenceNumber:
setChangeObserver:
_beginUpdates:
_endUpdates
performBlockWhenDatabaseNotInUse:
_commitChanges
_saveDatabaseIfNeeded
recordMap
_commitPendingRecordMapChanges
removeDeletableStores
removeDeletableCalendars
filteredArrayUsingPredicate:
deleteStore:
deleteCalendar:
removeAllRecordsInCalendar:
deleteEvent:
deleteTask:
shouldSendEntity:
_hasRowMappingForEntity:
eventInWindow:
enumerateObjectsUsingBlock:
allObjects
_serializeSyncSet:
array
_updateRowMappingForEntity:
_getDefaultTaskCalendar:defaultEventCalendar:
initWithArray:
setCompletion:
_updateStore:withStoreWrapper:
_createStoreForWrapper:
_updateCalendar:withCalendarWrapper:
_createCalendarForWrapper:
performUpdateWithICSWrapper:
_deleteStoreWithIdentifier:
_deleteCalendarWithIdentifier:
_deleteEventWithIdentifier:calendarIdentifier:
_deleteReminderWithIdentifier:calendarIdentifier:
applySidePropertiesToEntity:withWrapper:
_didCreateEntity:
participationStatus
setParticipationStatus:
saveEvent:span:commit:error:
dictionaryWithCapacity:
calendarItemsWithExternalIdentifier:
calendarItemExternalIdentifier
calendar
dateWithTimeIntervalSinceReferenceDate:
updateEvent:identifier:eventStore:occurrenceDate:participationStatus:masterIdentifier:isMaster:
persistentObject
detachedItems
originalStartDate
longLongValue
timeIntervalSinceReferenceDate
initWithPersistentObject:occurrenceDate:
eventForUID:occurrenceDate:
intValue
componentsSeparatedByString:
objectAtIndexedSubscript:
handleUpdatedItemFromGizmo:type:withWrapper:identifier:
detacheesForIdentifierCreatingIfNeeded:detachedEventMap:
handleCalendarTaskWithUniqueIdentifierFromGizmo:calendar:wrapper:
handleCalendarEventWithUniqueIdentifierFromGizmo:calendar:wrapper:detachedEventMap:
updateMasterEvent:masterIdentifier:calendarIdentifier:masterParticipationStatus:detachedEvents:
_deleteCalendarItemsInICSWrapperFromOldCalendar:
_deleteCalendarItemsMovedToCalendar:inICSWrapper:
handleNewEntity:withWrapper:
_removeIdentifierForDeletedEntity:
_deleteDetachedCalendarItemsFromOldCalendar:deletedEvents:
updateSelfAttendeeForCalendarItem:identifier:withWrapper:
updateInvitationStatusForCalendarItem:identifier:withWrapper:
truncated
isEmpty
storeWrappersForChangeSet:
addObjectsFromArray:
calendarWrappersForChangeSet:
deletionWrappersForChangeSet:
ICSWrappersForChangeSet:
completion
setIsEffectivelyEmpty:
setIsTruncated:
wrapperForCalEntity:
enumerateChanges:forEntitiesOfType:withBlock:
_compoundIdentifierForEntity:
wrapperForCalendar:useAttributes:
startMappingEntities
initForFullSync:
eventInFuture:
endMappingEntities
deletes
deletionWrapperForRecordID:eventStore:
wrapperForStore:
wrapperForCalendar:
wrapperForCalendarItem:
_identifierInRowMapping:
isIdentifierPresent:forRecordID:
sweep
_deleteAndLogEvent:identifier:
didCalendarChange:
_checkAndSetDefaultCalendar:calendarWrapper:
supportedEntityTypes
changeObserver
_sendChangesIfAvailable
initWithDatabase:
setShouldTrackChanges:
beginUpdates:
endUpdates
removeAllItems
allItemsWithEventFilter:taskWindow:
purgeRecordMap
updateStore:
updateCalendar:
updateICS:
deleteItemWithIdentifier:
deleteItem:
wrappersForChangeSet:
identifierInRowMappingForEventOrTask:
identifierInRowMappingForRecordIDRef:
calendarIdentifierInRowMappingForRecordIDRef:
removeIdentifiersForDeletedRecordIDs:
commitRecordMap
sweepSeenMap
_ICSLogTestForWrapper:
_flushQueue
shouldTrackChanges
_database
_updateCount
_databaseNeedsSave
_createdEntities
_idleBlockQueue
_seenMap
_syncedEntityUniqueIdentifiers
_shouldTrackChanges
_changeObserver
_recordMap
syncCoordinatorWithServiceName:
syncCoordinator
syncRestriction
setHasDeferredChanges:
setSession:
session
syncSessionType
defaultCenter
receivedStartSyncNotificationString
postNotificationName:object:
receivedReunionSyncNotificationString
sharedInstance
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
syncCoordinatorDidReceiveStartSyncCommand:
okToPerformDeltaSync
setSyncCoordinator:
hasDeferredChanges
_hasDeferredChanges
_session
_syncCoordinator
writeCrashReport:
setObject:forKeyedSubscript:
removeObjectForKey:
initWithFormat:
enumerateKeysAndObjectsUsingBlock:
componentsJoinedByString:
beginTransactionWithName:file:line:andFunction:
endTransactionWithName:file:line:andFunction:
logOpenTransactions
_table
initWithDomain:
setWithObject:
setWithObjects:
_broadcastBool:forKey:
rebroadcastShowDeclinedChangeNotification
rebroadcastAlertInviteeDeclinesChangeNotification
setBool:forKey:
synchronize
synchronizeNanoDomain:keys:
boolForKey:keyExistsAndHasValidFormat:
alertInviteeDeclines
showDeclinedEvents
applyRebroadcastShowDeclinedEvents
applyRebroadcastAlertInviteeDeclines
synchronizeUserDefaultsDomain:keys:
rebroadcastAllObservedNotifications
handleDarwinNotificationOfName:
_npsManager
_domainAccessor
_keysToDirectMirrorCompanionToGizmo
writeStackshot:
initWithIDSServiceName:
_recvSetReminderCompletedEndpoint:
registerMessageType:handler:
_recvSetParticipantStatusEndpoint:
_recvSetAlarmSnoozeEndpoint:
_recvDeleteEventEndpoint:
setCloudFallback:
resume
data
initWithData:
hasSetParticipantStatus
setParticipantStatus
eventStoreIdentifier
itemIdentifier
eventWithIdentifier:
status
eventStore
saveEvent:span:error:
hasSetReminderComplete
setReminderComplete
completionDate
setCompleted:
saveReminder:error:
hasDeleteEvent
deleteEvent
dateWithTimeIntervalSince1970:
dateByAddingTimeInterval:
predicateForEventsWithStartDate:endDate:calendars:
startDate
timeIntervalSince1970
enumerateEventsMatchingPredicate:usingBlock:
removeEvent:span:error:
alarms
snoozeAlarm:withTimeIntervalFromNow:
hasSetAlarmSnooze
setAlarmSnooze
snoozeAmount
alarmIdentifier
_calendarItem:snoozeAlarmID:withTimeIntervalFromNow:
hasItemIdentifier
sendSetParticipantStatus:span:storeId:eventId:
sendDeleteEventId:title:start:inCalendarId:title:inSource:span:
sendSetCompleted:calendarName:title:externalIdentifier:
sendSetReminderAlarmSnooze:calendarName:title:externalIdentifier:alarmIdentifier:
sendSetEventAlarmSnooze:calendarName:storeId:eventId:alarmIdentifier:
_store
_messaging
calendarsForEntityType:
predicateForRemindersInCalendars:
fetchRemindersMatchingPredicate:completion:
startDateComponents
setStartDateComponents:
hasIdentifier
setIsDefaultLocalCalendar:
setHasIsDefaultLocalCalendar:
hasIsDefaultLocalCalendar
isDefaultLocalCalendar
_isDefaultLocalCalendar
initWithIdentifier:calendarIdentifier:type:
setAlarmIdentifier:
setItemIdentifier:
setSnoozeAmount:
setHasSnoozeAmount:
hasSnoozeAmount
hasAlarmIdentifier
_snoozeAmount
_alarmIdentifier
_itemIdentifier
facilityWithSubsystem:category:
_enableDisableLogging
ndtSqSchema
setLevel:
_newFileName
userInfo
_blockUntilUnlock
_registerForNotifications
_registerForXpcActivity
startSyncControllerIfNeeded
sharedController
start
mainRunLoop
didReceiveStartSyncCommand:
addObserver:selector:name:object:
didReceiveReunionSyncCommand:
startSyncControllerIfNeededAndPossible
_databaseChangedExternally
_triggerFullSync
shouldSyncBasedOnTime:
_triggerIncrementalSync
scheduleRetry
setNeedsFullSync
setNeedsReunionSync
stringByAppendingPathComponent:
contentsOfDirectoryAtPath:error:
hasPrefix:
hasSuffix:
_notificationQueue
_daemonQueue
_preferencesObserver
_unlocked
_logDbFile
os_log_facility
sq_log_facility
initWithSubsystem:category:
setTrimAmount:
setTrimProbabilityDenominator:
setObfuscate:
isInternalDevice
_setWindowToNow
_loadLastSyncWindow
_getTestWindowStart
_getTestWindowEnd
_getEnableInfiniteWindow
distantPast
distantFuture
_computeGregorians
setTaskCutoff:
_getWindowStart
_getWindowEnd
spanStart
spanEnd
taskCutoff
setSpanStart:
setSpanEnd:
_spanStartGr
_spanEndGr
_spanStart
_spanEnd
_taskCutoff
impl
initWithIdentifier:isDefaultLocalCalendar:
decodeBoolForKey:
decodeObjectOfClass:forKey:
encodeBool:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
reportProgress:
doneForRealNotifyingPairedSync:
syncDidComplete
initWithCount:rate:session:
setCount:
pause
_timeToLie
_isPaused
_calledDidComplete
_complete
_deltaComplete
_start
_secPerRec
_count
numberWithUnsignedLongLong:
setTitle:
setDigest:
setSymbolicColorName:
setColorString:
setSharedOwnerName:
setSharedOwnerAddress:
setPublishedURLString:
setExternalIdentificationTag:
setSyncToken:
setExternalRepresentation:
setNotes:
setSubCalAccountID:
setPushKey:
setSelfIdentityDisplayName:
setSelfIdentityEmail:
setSelfIdentityAddressString:
setSelfIdentityFirstName:
setSelfIdentityLastName:
setOwnerIdentityDisplayName:
setOwnerIdentityEmail:
setOwnerIdentityAddressString:
setOwnerIdentityFirstName:
setOwnerIdentityLastName:
hasUUID
hasTitle
setIsReadonly:
setHasIsReadonly:
hasIsReadonly
setIsHidden:
setHasIsHidden:
hasIsHidden
setIsImmutable:
setHasIsImmutable:
hasIsImmutable
setIsInbox:
setHasIsInbox:
hasIsInbox
setIsNotificationsCollection:
setHasIsNotificationsCollection:
hasIsNotificationsCollection
setIsSharingInvitation:
setHasIsSharingInvitation:
hasIsSharingInvitation
setIsSubscribed:
setHasIsSubscribed:
hasIsSubscribed
setIsHolidayCalendar:
setHasIsHolidayCalendar:
hasIsHolidayCalendar
setIsFamilyCalendar:
setHasIsFamilyCalendar:
hasIsFamilyCalendar
setIsIgnoringEventAlerts:
setHasIsIgnoringEventAlerts:
hasIsIgnoringEventAlerts
setIsIgnoringSharedCalendarNotifications:
setHasIsIgnoringSharedCalendarNotifications:
hasIsIgnoringSharedCalendarNotifications
setIsSchedulingProhibited:
setHasIsSchedulingProhibited:
hasIsSchedulingProhibited
setIsDefaultCalendarForStore:
setHasIsDefaultCalendarForStore:
hasIsDefaultCalendarForStore
hasDigest
hasSymbolicColorName
hasColorString
setDisplayOrder:
setHasDisplayOrder:
hasDisplayOrder
setSharingStatus:
setHasSharingStatus:
hasSharingStatus
hasSharedOwnerName
hasSharedOwnerAddress
setSharingInvitationResponse:
setHasSharingInvitationResponse:
hasSharingInvitationResponse
hasPublishedURLString
setCanBePublished:
setHasCanBePublished:
hasCanBePublished
setCanBeShared:
setHasCanBeShared:
hasCanBeShared
setIsPublished:
setHasIsPublished:
hasIsPublished
hasExternalIdentificationTag
hasSyncToken
hasExternalRepresentation
setSupportedEntityTypes:
setHasSupportedEntityTypes:
hasSupportedEntityTypes
setHasInvitationStatus:
hasInvitationStatus
setHasBeenAlerted:
setHasHasBeenAlerted:
hasHasBeenAlerted
hasNotes
hasSubCalAccountID
hasPushKey
hasSelfIdentityDisplayName
hasSelfIdentityEmail
hasSelfIdentityAddressString
hasSelfIdentityFirstName
hasSelfIdentityLastName
hasOwnerIdentityDisplayName
hasOwnerIdentityEmail
hasOwnerIdentityAddressString
hasOwnerIdentityFirstName
hasOwnerIdentityLastName
uUID
isReadonly
isHidden
isImmutable
isInbox
isNotificationsCollection
isSharingInvitation
isSubscribed
isHolidayCalendar
isFamilyCalendar
isIgnoringEventAlerts
isIgnoringSharedCalendarNotifications
isSchedulingProhibited
isDefaultCalendarForStore
digest
symbolicColorName
colorString
displayOrder
sharingStatus
sharedOwnerName
sharedOwnerAddress
sharingInvitationResponse
publishedURLString
canBePublished
canBeShared
isPublished
externalIdentificationTag
syncToken
externalRepresentation
hasBeenAlerted
notes
subCalAccountID
pushKey
selfIdentityDisplayName
selfIdentityEmail
selfIdentityAddressString
selfIdentityFirstName
selfIdentityLastName
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityAddressString
ownerIdentityFirstName
ownerIdentityLastName
_sharingInvitationResponse
_sharingStatus
_supportedEntityTypes
_colorString
_digest
_displayOrder
_externalIdentificationTag
_externalRepresentation
_notes
_ownerIdentityAddressString
_ownerIdentityDisplayName
_ownerIdentityEmail
_ownerIdentityFirstName
_ownerIdentityLastName
_publishedURLString
_pushKey
_selfIdentityAddressString
_selfIdentityDisplayName
_selfIdentityEmail
_selfIdentityFirstName
_selfIdentityLastName
_sharedOwnerAddress
_sharedOwnerName
_subCalAccountID
_symbolicColorName
_syncToken
_uUID
_canBePublished
_canBeShared
_hasBeenAlerted
_isDefaultCalendarForStore
_isFamilyCalendar
_isHidden
_isHolidayCalendar
_isIgnoringEventAlerts
_isIgnoringSharedCalendarNotifications
_isImmutable
_isInbox
_isNotificationsCollection
_isPublished
_isReadonly
_isSchedulingProhibited
_isSharingInvitation
_isSubscribed
initWithAttributes:
_sharedInstance
_blockUntilPaired
pairingID
currentQueue
addObserverForName:object:queue:usingBlock:
isPaired
removeObserver:
bytes
resetFetchCursor
dataWithBytes:length:
bindUint64:
fetchUint64
bindPosition
fetchPosition
columnCount
bindCount
_parsed
_createDb
_prepareStatements
_dbFilename
_executeSql:
shouldShowInvite:withUUID:
didShowInvite:withUUID:
deleteInviteByUUID:
_dbQueue
_dbConn
_update
_fetch
_delete
_sweep
appendBytes:length:
setStatus:
setHasStatus:
hasStatus
_status
_unregisterForNotifications
_retrySync:
removeObserver:name:object:
initWithService:priority:asMasterStore:options:
setEngineType:
setDelegate:queue:
resume:
setNeedsResetSync
isResetSync
setHasChangesAvailable
isSending
_retrySession:
progressLiar
valueForKey:
fetchEverything
setChangeArray:
firstObject
setSyncKind:
removeObjectAtIndex:
fetchChanges
fetchNightly
changeArray
isTruncated
isEffectivelyEmpty
setProgressLiar:
setChangeCount:
setStart:
changeCount
setFullSessionTimeout:
fullSessionTimeout
setPerMessageTimeout:
arrayWithObjects:count:
setSessionMetadata:
setOptions:
setSerializer:
setCanRestart:
setCanRollback:
_nextDelay:
currentSession
_shouldFakeFailure
syncKind
changeObserverDidObserveChanges:
changeObserverDidObserveNightlySync:
changeObserverDidObserveResetSync:
service:startSession:error:
service:sessionEnded:error:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:encounteredError:context:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
service:didSwitchFromPairingID:toPairingID:
serviceDidPairDevice:
serviceDidUnpairDevice:
createOrUpdateSYObject:
deleteSYObject:
isDoingFullSync
_syncService
_eventStore
_observer
_syncSession
_completion
_syncKindQueue
_deltaRateEstimate
_fullRateEstimate
_rpcEndpoint
_preemptedSessionProgressLiar
_isDoingFullSync
isHolidyCalendar
publishedURL
selfIdentityAddress
ownerIdentityAddress
initWithPersistentID:isLocalStore:
setIsHolidyCalendar:
URLWithString:
setPublishedURL:
setSelfIdentityAddress:
setOwnerIdentityAddress:
unsignedIntegerValue
setInvitationChangedPropertyFlagDate:
setInvitationChangedPropertyFlagTime:
setInvitationChangedPropertyFlagTitle:
setInvitationChangedPropertyFlagLocation:
setInvitationChangedPropertyFlagAttendeeComment:
setInvitationChangedPropertyFlagAttendeeStatus:
invitationChangedPropertyFlagDate
hasInvitationChangedPropertyFlagDate
invitationChangedPropertyFlagTime
hasInvitationChangedPropertyFlagTime
invitationChangedPropertyFlagTitle
hasInvitationChangedPropertyFlagTitle
invitationChangedPropertyFlagLocation
hasInvitationChangedPropertyFlagLocation
invitationChangedPropertyFlagAttendeeComment
hasInvitationChangedPropertyFlagAttendeeComment
invitationChangedPropertyFlagAttendeeStatus
hasInvitationChangedPropertyFlagAttendeeStatus
numberWithLong:
initWithInserts:updates:deletes:database:changeNumber:
inserts
updates
setInserts:
setUpdates:
setDeletes:
changedRecordIDsForEntitiesOfType:changeType:
changeNumber
setChangeNumber:
setTruncated:
_inserts
_updates
_deletes
_truncated
_changeNumber
_isHolidyCalendar
_publishedURL
_selfIdentityAddress
_ownerIdentityAddress
arrayWithArray:
syncSession:enqueueChanges:error:
syncSession:applyChanges:completion:
syncSession:didEndWithError:
syncSession:resetDataStoreWithError:
resetDataStoreForSyncSession:completion:
syncSession:rollbackChangesWithError:
syncSession:restartChanges:
_isFirst
_changeQueue
_changeArray
_progressLiar
_changeCount
_syncKind
setPacketNumber:
packetNumber
setStoreWrapper:
setCalendarWrapper:
setICSWrapper:
setDeletionWrapper:
storeWrapper
calendarWrapper
iCSWrapper
deletionWrapper
dataFromChange:
changeFromData:ofType:
dataWithSYObject:
SYObjectWithData:
encodeSYChangeForBackwardCompatibility:protocolVersion:
decodeChangeData:fromProtocolVersion:ofType:
_clientName
_registerForPersistentChangeTracking
beginObservingChanges
stopObservingChanges
weakDatabaseController
databaseDidChange
_triggerNightlySync
invalidateSyncTimer
databaseController
notifyForDatabaseUpdatesIfNeeded
isWaitingOnSync
notifyForDatabaseUpdates
lastSequenceNumber
previousDefaultTaskCalendar
previousDefaultEventCalendar
changeSetForInsertedObjectIDs:updatedObjectIDs:deletedObjectIDs:changeNumber:
setLastSequenceNumber:
setPreviousDefaultTaskCalendar:
setPreviousDefaultEventCalendar:
moveChangeNumber:
_sequenceKey
_taskCalendarKey
_eventCalendarKey
setSyncTimeout:
invalidate
isValid
dateWithTimeIntervalSinceNow:
setFireDate:
syncTimerFired:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
syncBeginning
syncFinished
_databaseHasPendingChanges
_keyQueue
_persistsSequenceNumber
_sawSeqnoFailure
_lastSequenceNumber
_syncTimer
_syncState
_weakDatabaseController
hasSelfAttendeeEmail
setHasEntityType:
hasEntityType
setHasInvitationChangedPropertyFlagDate:
setHasInvitationChangedPropertyFlagTime:
setHasInvitationChangedPropertyFlagTitle:
setHasInvitationChangedPropertyFlagLocation:
setHasInvitationChangedPropertyFlagAttendeeComment:
setHasInvitationChangedPropertyFlagAttendeeStatus:
hasSelfAttendeeUUID
hasSelfOrganizerEmail
hasSelfOrganizerUUID
setHasAttendeeStatus:
hasAttendeeStatus
_invitationChangedPropertyFlagAttendeeComment
_invitationChangedPropertyFlagAttendeeStatus
_invitationChangedPropertyFlagDate
_invitationChangedPropertyFlagLocation
_invitationChangedPropertyFlagTime
_invitationChangedPropertyFlagTitle
lastInsertedRowId
setSetReminderComplete:
setSetParticipantStatus:
setSetAlarmSnooze:
setDeleteEvent:
setHasPacketNumber:
hasPacketNumber
hasStoreWrapper
hasCalendarWrapper
hasICSWrapper
hasDeletionWrapper
_calendarWrapper
_deleteEvent
_deletionWrapper
_iCSWrapper
_packetNumber
_setAlarmSnooze
_setParticipantStatus
_setReminderComplete
_storeWrapper
basename
setBasename:
index
setIndex:
_basename
_index
regularExpressionWithPattern:options:error:
_resetCaches
stringByReplacingMatchesInString:options:range:withTemplate:
lastPathComponent
trimProbabilityDenominator
trimAmount
_trim
_subsystem
_category
_filenames
_functions
_formats
_debraceRe
_categoryIndex
_subsystemIndex
_rowCount
_level
_trimProbabilityDenominator
_trimAmount
initWithFile:
setData:
msgType
setMsgType:
responseIdentifier
setResponseIdentifier:
_data
_msgType
_responseIdentifier
initWithIDSServiceName:logging:
initWithService:
addDelegate:queue:
dataUsingEncoding:
appendData:
getBytes:range:
subdataWithRange:
idsOptions
mutableCopy
_makeWireMessageType:content:
sendData:toDestinations:priority:options:identifier:error:
fileURLWithPath:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
_rawSendData:type:responseIdentifier:error:
_rawSendFile:type:responseIdentifier:error:
_makeMessageFromWireData:
incomingResponseIdentifier
outgoingResponseIdentifier
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
setPriority:
sendMessage:responseHandler:completion:
reply:to:completion:
setIdsOptions:
_outstanding
_handlers
_service
_priority
_logFacility
_suspended
_cloudFallback
_idsOptions
fileSystemRepresentation
initWithObjects:count:
_array
_isEffectivelyEmpty
_isTruncated
NEKPBCalendarWrapper
NSCopying
NEKPBStoreID
NEKICSWrapperMetadata
NEKICSWrapper
SYChange
NSObject
SYObject
NEKPBICSWrapper
NEKCalendarWrapper
NDTSQException
NDTSQFile
NSCacheDelegate
NEKTinyStore
NEKPBSetReminderComplete
NEKPBStoreAttributes
NEKPBDeletionWrapper
NDTSQKeyValueStore
_NEKRecordMapImpl
_NEKRecordMapSqliteRecord
_NEKRecordMapSqliteImpl
NEKPBDeleteEvent
_NEKSyncSet
NEKEventStore
NEKSyncCoordinator
PSYSyncCoordinatorDelegate
_NDTXpcTransactionManager
NEKPreferencesObserver
NDTCrashSynthesizer
NEKRPCEndpoint
NEKPBCalendarIdentifier
NEKDeletionWrapper
NEKPBSetAlarmSnooze
NEKDaemon
NDTSQFileDelegate
NDTLogFacility
NDTLog
NEKSyncWindow
NEKStoreAttributes
NEKRecordMap
NEKCalendarID
NSSecureCoding
NSCoding
NEKProgressLiar
NEKPBCalendarAttributes
NEKStoreWrapper
NEKDatabaseFileManager
NDTSQStatement
NEKSeenMap
EventKitSync
NEKPBSetParticipantStatus
NEKSyncController
NEKChangeObserverDelegate
SYServiceDelegate
NEKChangeSet
NEKCalendarAttributes
NEKSyncSession
SYSessionDelegate
NEKProtobufSerializer
SYChangeSerializer
NEKChangeObserver
NEKPBICSWrapperMetadata
NDTSQSchema
NEKPBProtoBuffMessage
_SQFileSpec
NDTSQLogging
NDTLogging
NEKPBStoreWrapper
NEKStoreID
NDTMessage
NDTMessaging
IDSServiceDelegate
NEKChangeArray
@24@0:8^{_NSZone=}16
B16@0:8
v20@0:8B16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
v16@0:8
@"NEKPBCalendarAttributes"
@"NSString"
@"NEKPBStoreID"
{?="isDefaultEventCalendar"b1"isDefaultTaskCalendar"b1}
{?="isLocalStore"b1}
i16@0:8
v20@0:8i16
I16@0:8
v20@0:8I16
@48@0:8^{__CFArray=}16^{CalDatabase={__CFRuntimeBase=Q[4C]I}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}B@}24@32@40
@40@0:8^v16@24@32
v64@0:8^v16@24@32@40@48^v56
v68@0:8@16^{__CFArray=}24@32B40@44^v52^v60
@"NSString"16@0:8
q16@0:8
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@24@0:8@16
v32@0:8@16@24
v28@0:8i16@20
i24@0:8@16
v28@0:8I16@20
I24@0:8@16
v24@0:8@?16
v24@0:8q16
d16@0:8
v24@0:8d16
@"NSMutableDictionary"
@"NSData"
@"NEKCalendarID"
@24@0:8Q16
@"NEKPBCalendarIdentifier"
@"NSMutableArray"
{?="taskCompletionDate"b1"calendarItemCount"b1}
@28@0:8^v16B24
@24@0:8^v16
@40@0:8@16@24@32
@"NEKStoreID"
@"NEKCalendarAttributes"
v32@0:8@"NSCache"16@24
v32@0:8@16@?24
q24@0:8@16
v32@0:8@16q24
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"NSCache"
@"NDTSQKeyValueStore"
@"NSHashTable"
^{sqlite3=}
@"<NDTSQFileDelegate>"
@32@0:8@16@24
v32@0:8q16@24
q32@0:8@16q24
v32@0:8d16@24
d32@0:8@16d24
{?="isComplete"b1}
{?="defaultAlarmOffset"b1"type"b1"allowsCalendarAddDeleteModify"b1"allowsEvents"b1"allowsTasks"b1"isEnabled"b1"isFacebook"b1"isLocalStore"b1"onlyCreatorCanModify"b1"snoozeAlarmRequiresDetach"b1"supportsAlarmAcknowledgedDate"b1"supportsSharedCalendars"b1"usesSelfAttendee"b1}
{?="type"b1}
@24@0:8^{CalRecordID=}16
v32@0:8@16^{CalRecordID=}24
v24@0:8^{CalRecordID=}16
B24@0:8^@16
^{sqlite3_stmt=}
{?="eventStart"b1"span"b1}
@"NSArray"
@24@0:8^{CalDatabase={__CFRuntimeBase=Q[4C]I}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}B@}16
@32@0:8^{CalDatabase={__CFRuntimeBase=Q[4C]I}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}B@}16@24
v24@0:8^v16
@28@0:8i16@20
v32@0:8r^^v16r^^v24
B24@0:8^v16
v32@0:8^v16@24
v44@0:8^v16i24@28@36
B68@0:8@16@24@32@40q48@56B64
B56@0:8^v16@24@32q40@48
v48@0:8@16^v24@32@40
v40@0:8@16^v24@32
v40@0:8^v16@24@32
v24@0:8^{__CFArray=}16
B32@0:8^v16@24
^{CalDatabase={__CFRuntimeBase=Q[4C]I}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}B@}
@"NEKSeenMap"
@"NEKChangeObserver"
@"NEKRecordMap"
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
@"PSYServiceSyncSession"
@"PSYSyncCoordinator"
v44@0:8@16@24i32@36
v28@0:8B16@20
@"NPSManager"
@"NPSDomainAccessor"
@"NSDictionary"
v48@0:8q16q24@32@40
v72@0:8@16@24d32@40@48@56q64
v44@0:8B16@20@28@36
v56@0:8d16@24@32@40@48
B40@0:8@16@24d32
@"NEKEventStore"
@"NDTMessaging"
{?="isDefaultLocalCalendar"b1}
@32@0:8^{CalRecordID=}16@24
@36@0:8@16@24i32
{?="snoozeAmount"b1}
@"NSString"24@0:8@"NDTSQFile"16
@"NEKPreferencesObserver"
@"NSObject<OS_dispatch_semaphore>"
@"NDTSQFile"
@"NSObject<OS_os_log>"
@"<NDTLogging>"
@20@0:8B16
B24@0:8d16
{?="year"i"month"c"day"c"hour"c"minute"c"second"d}
^{__CFTimeZone=}
@"NSNumber"
B32@0:8@16^{CalRecordID=}24
@"_NEKRecordMapImpl"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@28@0:8@16B24
@40@0:8Q16d24@32
v24@0:8Q16
{?="invitationStatus"b1"sharingInvitationResponse"b1"sharingStatus"b1"supportedEntityTypes"b1"displayOrder"b1"canBePublished"b1"canBeShared"b1"hasBeenAlerted"b1"isDefaultCalendarForStore"b1"isFamilyCalendar"b1"isHidden"b1"isHolidayCalendar"b1"isIgnoringEventAlerts"b1"isIgnoringSharedCalendarNotifications"b1"isImmutable"b1"isInbox"b1"isNotificationsCollection"b1"isPublished"b1"isReadonly"b1"isSchedulingProhibited"b1"isSharingInvitation"b1"isSubscribed"b1}
@"NEKStoreAttributes"
i24@0:8q16
i24@0:8Q16
i24@0:8d16
v24@0:8^{sqlite3_stmt=}16
^{sqlite3_stmt=}16@0:8
{?="span"b1"status"b1}
v24@0:8@"NEKChangeObserver"16
B40@0:8@16@24^@32
B40@0:8@"SYService"16@"SYSession"24^@32
v40@0:8@16@24@32
v40@0:8@"SYService"16@"SYSession"24@"NSError"32
v40@0:8@16@24@?32
v40@0:8@"SYService"16@"NSData"24@?<v@?B@"NSError">32
v48@0:8@16@24@32@?40
v48@0:8@"SYService"16@"NSInputStream"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8@"SYService"16@"NSError"24@"NSDictionary"32
@"SYSession"40@0:8@"SYService"16@"SYSession"24@"SYSession"32
v40@0:8@"SYService"16@"NSUUID"24@"NSUUID"32
v24@0:8@"SYService"16
d24@0:8q16
@"SYService"
@"NEKSyncSession"
@"NEKRPCEndpoint"
@"NEKProgressLiar"
@"<NEKSyncControllerDelegate>"
@56@0:8^{__CFArray=}16^{__CFArray=}24^{__CFArray=}32^{CalDatabase={__CFRuntimeBase=Q[4C]I}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}B@}40q48
^{__CFArray=}16@0:8
^{__CFArray=}24@0:8i16i20
v32@0:8i16i20@?24
@?16@0:8
^{__CFArray=}
@"NSURL"
q40@0:8@16@?24^@32
q40@0:8@"SYSession"16@?<B@?@"<SYChange>">24^@32
v40@0:8@"SYSession"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"SYSession"16@"NSError"24
B32@0:8@16^@24
B32@0:8@"SYSession"16^@24
v32@0:8@"SYSession"16@?<v@?B@"NSError">24
@"NEKChangeArray"
@"NSData"24@0:8@"<SYChange>"16
@32@0:8@16q24
@"<SYChange>"32@0:8@"NSData"16q24
@"NSData"24@0:8@"<SYObject>"16
@"<SYObject>"24@0:8@"NSData"16
@"NSData"32@0:8@"<SYChange>"16q24
@40@0:8@16q24q32
@"<SYChange>"40@0:8@"NSData"16q24q32
^{__CFString=}16@0:8
@48@0:8^{__CFArray=}16^{__CFArray=}24^{__CFArray=}32q40
@"NSTimer"
@"<NEKChangeObserverDelegate>"
{?="attendeeStatus"b1"entityType"b1"invitationStatus"b1"invitationChangedPropertyFlagAttendeeComment"b1"invitationChangedPropertyFlagAttendeeStatus"b1"invitationChangedPropertyFlagDate"b1"invitationChangedPropertyFlagLocation"b1"invitationChangedPropertyFlagTime"b1"invitationChangedPropertyFlagTitle"b1}
@"NEKPBCalendarWrapper"
@"NEKPBDeleteEvent"
@"NEKPBDeletionWrapper"
@"NEKPBICSWrapper"
@"NEKPBSetAlarmSnooze"
@"NEKPBSetParticipantStatus"
@"NEKPBSetReminderComplete"
@"NEKPBStoreWrapper"
{?="packetNumber"b1}
v56@0:8i16*20i28r*32d40r^{__CFString=}48
@"NSRegularExpression"
@"NEKPBStoreAttributes"
v56@0:8@16@24@32@40@48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@16@24@32@40@48@56
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@16@24@32B40@44
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@16@24@32B40@44@52
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v48@0:8@16@24@32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@48@0:8@16@24@32^@40
v40@0:8@16@?24@?32
@"IDSService"
@"NDTLogFacility"
@32@0:8r^@16Q24
@333333
Y@333333
Entity with identifier %{public}@ is detached, master identifier is %@
Entity with identifier %{public}@ is detached, but can't get master
Entity with identifier %{public}@ is master for a recurring series
Handling detached event with identifier %{public}@
Adding ICS to wrapper to send: %{public}@
self attendee email = %{public}@, uuid = %{public}@ for event with identifier %{public}@
organizer is self: email = %{public}@, uuid = %{public}@ for event with identifier %{public}@
invitationChangedPropertyFlags = 0x%08x
saving externalID %{public}@ in metadata for event with identifier %{public}@
No externalID for event with identifier %{public}@
self attendee status is 0x%08x for event with identifier %{public}@
Setting task with identifier %{public}@ as completed, completion date is %{public}@
Can't create canonical unique identifier for event %{public}@. Identifier returned by CalCalendarItemCopyUniqueIdentifier is %{public}@
Created canonical unique identifier %{public}@ for event %{public}@ with value from CalCalendarItemCopyUniqueIdentifier %{public}@
Can't create canonical unique identifier for event %{public}@. Original event has no unique identifier %{public}@
Error serializing out plist: %{public}@
Error writing out plist
dataWithContentsOfFile gave us nothing
propertyListWithData gave us nothing. Error: %{public}@
Sqlite create failed, path: %s, error: (%d)
SQL not understood: %s
setIdentifier:%{public}@ forRecordID: %{public}@
deleteIdentifierForRecordID:%{public}@
--mark--
NEKRecordMap removeAllRecords
Unbalanced calls to begin/endUpdates
Error saving CalDatabase: %{public}@
Database changes saved
Marking default task calendar in wrapper to calendar with name %{public}@, identifier %{public}@
Marking default event calendar in wrapper to calendar with name %{public}@, identifier %{public}@
Entity with summary "%{public}@" and identifier %{public}@ is a phantom master.  Ignoring.
Entity with summary "%{public}@" and identifier %{public}@ is detached, master identifier is %{public}@
Entity with summary "%{public}@" and identifier %{public}@ is detached, but can't get master, so using the actual detached event
No calendar for event with summary "%{public}@" and identifier %{public}@, event won't be tracked for sending duplicates, but we'll soldier on and likely fail somewhere later down the line.
Entity with summary "%{public}@" and identifier %{public}@ already in set for calendar with identifier %{public}@, not sending again
Entity with summary "%{public}@" and identifier %{public}@ not in set for calendar with identifier %{public}@, adding
Selecting reminder "%{public}@"
Completion: %{public}@
Create or update store: %{public}@
Received store wrapper that I'm not sure how to process: %{public}@
Create or update calendar: %{public}@
%{public}s: Ignoring sidecar data for phantom master with identifier: [%{public}@]
Handling updated event from gizmo with summary "%{public}@" and identifier %{public}@
Set self attendee status to 0x%08x for event with identifier %{public}@
Set invitation status to none for event with identifier %{public}@
No need to set attendee status, synced value is the same as existing value: 0x%08x for event with identifier %{public}@
Handling updated task from gizmo with summary "%{public}@" and identifier %{public}@
Task with identifier %{public}@ is completed, completion date is %{public}@
Saved event with identifier %{public}@, externalID is %{public}@
Failed to save event with identifier %{public}@. Error =  %{public}@
Participant status did not change. No need to save event with identifier %{public}@, externalID is %{public}@
Handling updated master event from gizmo with participationStatus %d, summary "%{public}@", and identifier %{public}@
Can't get row id for master with identifier %{public}@ to set attendee status for recurring series
Checking for calendar match for event %{public}@ with identifier %{public}@
Checking for match on calendar, we want %{public}@, calendarIdentifier is %{public}@
Handling master event from gizmo with participation status %d, summary "%{public}@", and identifier %{public}@
Couldn't get master event for recurring event sequence with identifier %{public}@, but we'll check for detached events in case those are still around
Using existing detached event
Grabbing recurrence to use for detached event
Handling updated detached event from gizmo with participation status %d, summary "%{public}@", and identifier %{public}@.
Failed to get/create event with identifier %{public}@ to set attendee status %d, skipping event
Failed to commit after saving recurring event series with master identifier %{public}@. Error =  %{public}@
No calendar item with identifier %{public}@ in calendar with identifier %{public}@
Received ICS wrapper: %{public}@
Calendar %{public}@ does not exist, aborting
UpdateWithICSWrapper
Processing update from the watch, main identifier is %{public}@
No calendar item found for main event in recurring series with identifier %{public}@ in calendar with identifier %{public}@
Processing add/update from companion, or a new record from the watch
Item ID remapping complete: %{public}@ => %{public}@
Got an update/add for calendar item, old calendar id = %{public}@, current calendar id = %{public}@
Calendars don't match, so deleting from old calendar: old calendar id = %{public}@, current calendar id = %{public}@
Calendars match, so event didn't move: old calendar id = %{public}@, current calendar id = %{public}@
Got an update/add for event "%{public}@", no old calendar id was sent, so this is from an old record map and falling back to old code to check and delete from any old calendar. The current calendar id = %{public}@
We have a recurring event with summary "%{public}@" and identifier %{public}@, checking to see if any detached events need attention
Handling detached event with summary "%{public}@" and identifier %{public}@
We have a recurring event with summary "%{public}@" and identifier %{public}@, deleting all detached events too, since they have also moved calendars
Deleting detached event from old calendar since it has moved. Event summary "%{public}@", identifier %{public}@
No calendar for calendar identifier %{public}@
Skipping deletion for event with identifier %{public}@ in calendar with identifier %{public}@, we already detected and deleted it as part of a recurring master's detached events
setting CalInvitationChangedPropertyFlags to 0x%08x for event with identifier %{public}@
setting externalID %{public}@ for event with identifier %{public}@
No externalID in metadata for event with identifier %{public}@
Self attendee email is %{public}@, and uuid is %{public}@ for event with identifier %{public}@
Found self attendee for event with identifier %{public}@, email = %{public}@, address = %{public}@
No self attendee email in wrapper for event with identifier %{public}@
Determined user is organizer for event with identifier %{public}@, email = %{public}@, address = %{public}@
Setting invitation status %{public}@ for event with identifier %{public}@
No invitation status in wrapper for event with identifier %{public}@
CalendarID remap detected: %{public}@ => %{public}@
CalendarItem remap detected: %{public}@ => %{public}@
Decided not to send %{public}@
Skipping record id %{public}d, no entity found for CalRecordIDRef
Deletion wrapper: %@
Could not create deletion wrapper for recordID: %{public}@
Entity with summary "%{public}@" and identifier %{public}@ is detached, but has no master. Skipping adding to table
Error commiting record map: %{public}@
No store exists for %{public}@
No calendar exists for %{public}@
Deleting event with identifier %{public}@, recordID %{public}@
Deleting event with identifier %{public}@, from calendar with identifier %{public}@
Deleting event with identifier %{public}@, from any calendar, old mapping didn't send calendar to delete from so falling back to old code
No event exists for %{public}@
No reminder exists for %@
Updating calendar with title %{public}@, identifier %{public}@
Store not found with storeID: %@
Created calendar with title %{public}@, identifier %{public}@
Asked to set a nonexistent calendar as the default. Ignoring. Calendar identifier = %{public}@, store identifier = %{public}@
NEKSyncCoordinator initialized %@
Restriction is now %{public}s
Incoming message missing required body.
Local store ID %@, remote store ID %@
itemIdentifier: %@, event: <%p>
Failure to save event: %{public}@
Cannot finder reminder '%{public}@:%{public}@'
Failure to save reminder: %{public}@
Reminder saved successfully.
Failure to delete event %@: %{public}@
I have %d candidate events so I'm not sure what to delete.
Snooze Reminder: time:%.1f calendar: '%{public}@' reminder: '%{public}@' externalId: %@
No reminder alarm found
Snooze Event: time:%.1f calendar: '%{public}@' itemIdentifier: %@ event: <%p> local store ID: %@, remote store ID: %@
Event saved successfully.
No event alarm found
Found reminder %{public}@:%{public}@
Cannot find reminder %{public}@:%{public}@
Called with nil recordID or nil event store
Daemon start
Failure to initialize SQL log: %@, userInfo: %@
Pre prefs observer init
Post prefs observer init
NEKSyncController NOT started.
Handling XPC event
Beginning XPC transaction for com.apple.notifyd.matching notification named %{public}@
Launched from IDS
Triggering full sync for testing notification %{public}@
Class C locked, full sync request ignored
SignificantTimeChange incremental sync
SignificantTimeChange ignored
Ending XPC transaction for com.apple.notifyd.matching notification named %{public}@
Registered for notifications.
XPC Activity State: %d
Failed to set done
Registered for XPC activities. All the fun ones, anyway.
Received full sync command from NEKSyncCoordinator.
Prefs synced. Starting sync controller.
Received reunion sync command.
Asked for incremental sync window when there was no previous sync window data
Starting configuration of store with persistent ID: [%{public}@].
Store's 'name' has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'defaultAlarmOffset' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'type' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'enabled' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's '%@' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'usesSelfAttendee' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'constraintsDescriptionPath' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'externalID' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'externalModificationTag' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'creatorBundleID' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'creatorCodeSigningIdentity' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'accountPersistentID' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'supportsSharedCalendars' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'allowsTasks' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'allowsEvents' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'allowsCalendarAddDeleteModify' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'onlyCreatorCanModify' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'snoozeAlarmRequiresDetach' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Store's 'supportsAlarmAcknowledgedDate' property has changed from [%@] to [%@].  Store's persistent ID: [%{public}@]
Completed configuration of store with persistent ID: [%{public}@].
Lying about progress: %f%%
Count: %f, elapsed: %f, computed rate: %f r/s
Returning suggested db path: %@
Pairing complete
Sqlite statement prepare failed for "%{public}s"
Compressed ICS %d->%d (%%%f)
Aborting ICS decompression: %{public}s
Starting NEKSyncController
Failed to resume SYService: %{public}@
Enqueueing a full sync
Enqueueing a delta/reunion sync
Remove all items
Retrying a failed sync (%d) (delta)
Retrying a failed sync (%d) (reset)
%{public}@
object is not of recognized class: %{public}@
Companion received
Session setup
startSession %{public}@ session: %{public}@
Delta sync fired but there are no change sets in the queue. Aborting.
Delta sync fired but it really wants to be a reset sync.
Change set was empty, not starting a sync session.
Session timeout: %f
No session created so declaring completion to PSYSync
Scheduling retry sync in %f seconds
Session is nil
service.currentSession is nil, clearing user session.
Current session [%{public}@] != ending session [%{public}@]. Error: %{public}@ Dropping notificaiton on floor.
Session cleanup
sessionEnded %{public}@ session: %{public}@
Send complete with error: %{public}@
Sync failed.
There was a sync error%{public}@.
UserCancelled error, retry should already be scheduled.
LostCollisionTest error, retry should already be scheduled.
Computed rate: %f
New estimated rates: full %f, delta %f
Recv complete with error: %{public}@
Resuming SYService on device-paired returned (possibly benign) error: %{public}@
Poking CS for delta sync
Delta sync requested but we have faults. Ignoring request.
Poking CS for nightly sync
Nightly sync requested but we have faults. Ignoring request.
Poking CS for full sync
Checking to see if calendar with title %{public}@ identifier %{public}@ and syncToken %{public}@ and externalModificationTag %{public}@ and externalIdentificationTag %{public}@ has changed. New syncToken and externalModificationTag and externalIdentificationTag are %{public}@ and %{public}@ and %{public}@
No changes for calendar with title %{public}@, identifier %{public}@
_calendarPropertyIsEqualToAttributeProperty: Calendar and attributes property %{public}@ is the same: %{public}@
_calendarPropertyIsEqualToAttributeProperty: Calendar and attributes property %{public}@ are different: (calendar) %{public}@ != (attributes) %{public}@
syncSessionEnqueue
Enqueued last change.
Applying changes
syncSessionApplyChanges
Calling sync session completion.
dataWithSYChange: serializing object of class: %@ S_PKT_NUM:%u
SYChangeWithData - unrecognized type: %{public}@
SYChangeWithData: returning object of type: %{public}@ R_PKT_NUM:%u
Could not create wrapper object
Ignoring delta sync request as sync coordinator says it is not time.
Sync attempt deferred as dataaccess is busy.
Sync attempt ignored as there are no pending changes.
Reverting database for external change.
Pulled -1 from lastSequenceNumber.
Saw sequence number failure already. Still waiting for corrective sync to complete.
Previous sequence number: %d, current sequence number: %d
Change log numbers went backward, forcing full sync
Change log truncated
Changed default task calendar
Changed default event calendar
Updates is NULL. This shouldn't happen.
ChangeSet is empty.
Inserts:
Updates:
Deletes:
Timeout out waiting for database to respond.
It's kinda weird but I'm rolling the changelog sequence number back.
Setting anchor sequence number: %d
SYNCING IS NOW VERBOTEN! VERBOTEN!
SYNCING IS NOW fine. Just fine.
Default Calendar Changed
%@, %@, %@, %@
%@, %@
%@, %@, %@
--empty--
_rawSendData has id %@
_rawSendData has an error: %{public}@
_rawSendFile has id %@
_rawSendFile has an error: %{public}@
No identifier returned. Error: %{public}@
Incoming reply message but no handler registered.
Can't find a handler for this message
didSend:%c identifier: %@, error: %{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string></string>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.eventkitmutation</string>
<string>com.apple.private.alloy.eventkitsync</string>
</array>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceReminders</string>
</array>
</dict>
</plist>
