layoutMarginsDidChange
layoutMarginsObserver
layoutMarginsDidChangeInTonePickerTableView:
respondsToSelector:
separatorObserver
separatorColorDidChangeInTonePickerTableView:
setSeparatorColor:
_handleSeparatorColorDidChange
layoutSubviews
.cxx_destruct
setLayoutMarginsObserver:
setSeparatorObserver:
_layoutMarginsObserver
_separatorObserver
init
_reloadStateForBasicBehavior
sharedToneManager
_setToneManager:
currentToneIdentifierForAlertType:
copy
_setSelectedClassicAlertToneIndex:
_setSelectedClassicRingtoneIndex:
_indexPathForNone
_setSelectedToneIndexPath:
_resetSelectedVibrationIdentifierForcingUpdatingVibrationName:
_reloadTones
_unregisterForUserGeneratedVibrationsDidChangeNotification
dealloc
currentToneIdentifierForAlertType:topic:
length
topic
_selectedToneIndexPath
tk_section
tk_row
tk_indexPathForRow:inSection:
_invalidatePickerItemCaches
_didReloadTones
_indexPathForIgnoreMuteGroup
_cachedPickerItemForSection:
_cachedPickerRowItemAtIndex:inSectionForItem:
class
isKindOfClass:
delegate
tonePickerController:didUpdateIgnoreMute:forTonePickerItem:atIndexPath:
_isNoneGroupAtIndexPath:
_isDefaultGroupAtIndexPath:
_indexPathForDefaultGroup
setSelectedToneIdentifier:
isEqualToString:
count
isNoneAtTop
_showsMedia
_indexPathForToneStoreGroup
_indexPathForVibrationGroup
_indexPathForMediaGroup
_mediaItemsCount
_indexPathForFirstToneGroup
objectAtIndex:
alloc
_setText:
_setFooterText:
_setNumberOfChildren:
_setSection:
_setSectionHeader:
_setRegularToneSectionIndex:
_setParentTonePickerController:
_cachePickerRowItem:forSection:
section
_isDividerAtIndexPath:
_setRow:
_isToneStoreGroupAtIndexPath:
_isIgnoreMuteGroupAtIndexPath:
defaultToneIdentifier
stringWithUTF8String:
lastPathComponent
callStackSymbols
nameForToneIdentifier:
noneString
_isMediaGroupAtIndexPath:
tonePickerController:titleOfMediaItemAtIndex:
_isVibrationGroupAtIndexPath:
_nameOfSelectedVibrationIdentifier
_identifierOfToneAtIndexPath:
_classicAlertToneIdentifiers
_selectedClassicAlertToneIndex
selectedToneIdentifier
_classicRingtoneIdentifiers
_selectedClassicRingtoneIndex
_annotatedNameForToneIdentifier:
showsNothingSelected
isEqual:
_setShowsCheckmark:
_setItemKind:
_setShowsDisclosureIndicator:
_setNeedsRoomForCheckmark:
_setDetailText:
_setTextCentered:
_cachePickerRowItem:atIndex:inSectionForItem:
itemKind
_cachedToneClassicsPickerItemForIndex:headerKind:
_setClassicToneIndex:
_cacheToneClassicsPickerItem:forIndex:headerKind:
tk_ensureHasItemsOrNullUpToIndex:
replaceObjectAtIndex:withObject:
countByEnumeratingWithState:objects:count:
_isMediaAtTop
_indexPathForToneWithIdentifier:
indexOfObject:
_indexOfMediaItemWithIdentifier:
_identifierOfMediaItemAtIndex:
pickerItemForSection:
childItemAtIndex:
_topLevelSelectedTonePickerItem
_identifierOfSelectedClassicAlertTone
_identifierOfSelectedClassicRingtone
_setSelectedToneIdentifier:currentlyReloadingTones:
_aliasForToneIdentifier:
toneWithIdentifierIsValid:
_didSelectToneWithIdentifier:
_identifierAtIndexPath:isMediaItem:
_didSelectToneClassicsPickerItem:
setShowsNothingSelected:
_goToStore
stopPlayingWithFadeOut:
tonePickerController:didSelectMediaItemAtIndex:selectionDidChange:
tonePickerControllerRequestsPresentingMediaItemPicker:
tonePickerControllerRequestsPresentingVibrationPicker:
tonePickerController:requestsPresentingToneClassicsPickerForItem:
_didUpdateCheckedStatus:ofPickerItemForRowAtIndexPath:
_didUpdateDetailText:ofPickerItemForRowAtIndexPath:
_resetSelectedClassicRingtoneIndex
_resetSelectedClassicAlertToneIndex
_updateDetailTextOfVibrationItem
_didSelectMediaItemWithIdentifier:
_playToneWithIdentifier:
_togglePlayForToneWithIdentifier:
classicToneIndex
_didUpdateCheckedStatus:ofToneClassicsPickerItem:
_setBehavesAsRingtonePicker:
setShowsNone:
_reloadTonesForExternalChange:
_reloadMediaItems
_behavesAsRingtonePicker
_iTunesRingtoneDirectory
_addRingtonesInDirectory:toArray:fileExtension:
_deviceITunesRingtoneDirectory
_iTunesToneWithIdentifier:
isPrivate
duration
isProtected
isRingtone
isPurchased
addObject:
_loadRingtonesFromPlist
objectForKey:
addObjectsFromArray:
_setClassicRingtoneIdentifiers:
_sortToneIdentifiersArray:
_loadAlertTonesFromPlist
_setClassicAlertToneIdentifiers:
insertObject:atIndex:
alertType
bundleForClass:
pathForResource:ofType:
dictionaryWithContentsOfFile:
mutableCopy
boolValue
removeObjectAtIndex:
setObject:forKey:
_alertTonesPlistName
_loadTonesFromPlistNamed:
_ringtonesPlistName
defaultManager
contentsOfDirectoryAtPath:error:
stringByAppendingPathComponent:
_filePathHasSupportedExtensionForRingtone:
_toneIdentifierForFileAtPath:isValid:
localizedCaseInsensitiveCompare:
sortUsingComparator:
defaultCenter
removeObserver:name:object:
_toneManagerContentsChanged:
addObserver:selector:name:object:
sharedCapabilitiesManager
isRingtoneStoreAvailable
isAlertToneStoreAvailable
tonePickerControllerRequestsPresentingToneStore:
tonePickerController:willBeginPlaybackOfToneWithIdentifier:
initWithType:
setTopic:
setToneIdentifier:
setShouldRepeat:
setForPreview:
alertWithConfiguration:
_didFinishPlayingAlert:
playWithCompletionHandler:
stopWithOptions:
tonePickerControllerDidStopPlaying:withFadeOutDuration:
tonePickerControllerShouldShowMedia:
isMediaAtTop
numberOfMediaItemsInTonePickerController:
tonePickerController:identifierOfMediaItemAtIndex:
tonePickerController:indexOfMediaItemWithIdentifier:
tonePickerController:selectedMediaItemWithIdentifier:
tonePickerControllerRequestsMediaItemsRefresh:
_registerForUserGeneratedVibrationsDidChangeNotification
_setSelectedVibrationIdentifier:explicitlySet:
_setSelectedVibrationIdentifier:forceUpdatingVibrationName:explicitlySet:
sharedVibrationManager
_currentVibrationIdentifierForAlertType:topic:
_sanitizeVibrationIdentifier:forAlertType:topic:correspondingToneIdentifier:didFallbackToCurrentVibrationIdentifier:
_sanitizedSelectedVibrationIdentifierAllowingNilForDefault:
nameOfVibrationWithIdentifier:
stringWithFormat:
tonePickerControllerDidReloadTones:
tonePickerController:selectedToneWithIdentifier:
tonePickerController:didUpdateCheckedStatus:ofTonePickerItem:
tonePickerController:didUpdateDetailText:ofTonePickerItem:
initWithAlertType:
setDefaultToneIdentifier:
setShowsToneStore:
setShowsIgnoreMute:
setIgnoreMute:
setShowsDefault:
setNoneAtTop:
setNoneString:
numberOfSections
_pickerRowItemAtIndex:inSectionForItem:
_toneClassicsPickerItemAtIndex:belowTonePickerItem:
_shouldCachePickerItems
_setShouldCachePickerItems:
indexPathForSelectedTone
selectedTonePickerItem
_selectedIdentifier:
didSelectTonePickerItem:
_toneManager
canShowStore
finishedWithPicker
setMediaAtTop:
setShowsVibrations:
setSelectedVibrationIdentifier:
setDelegate:
showsDefault
showsNone
showsToneStore
showsVibrations
selectedVibrationIdentifier
showsIgnoreMute
ignoreMute
_toneTypes
_defaultToneIdentifierWasExplicitlySet
_selectedToneWasExplicitlySetToDefaultTone
_selectedVibrationIdentifierWasExplicitlySet
_showsNoneWasExplicitlySet
_hasLoadedTonesOnce
_cachedPickerSectionItems
_cachedPickerRowItems
_cachedClassicRingtonePickerItems
_cachedClassicAlertTonePickerItems
_toneGroupLists
_toneGroupNames
_playingAlert
_showsDefault
_showsNone
_noneAtTop
_showsNothingSelected
_showsToneStore
_mediaAtTop
_showsVibrations
_showsIgnoreMute
_ignoreMute
__behavesAsRingtonePicker
_delegate
_alertType
_topic
_defaultToneIdentifier
_noneString
_selectedVibrationIdentifier
__classicRingtoneIdentifiers
__classicAlertToneIdentifiers
__selectedClassicRingtoneIndex
__selectedClassicAlertToneIndex
__selectedToneIndexPath
initWithFrame:
clearColor
setBackgroundColor:
addSubview:
text
setText:
sizeToFit
setNeedsLayout
font
setFont:
textColor
setTextColor:
shadowColor
setShadowColor:
shadowOffset
setShadowOffset:
labelPaddingInsets
frame
bounds
setFrame:
labelText
setLabelText:
labelFont
setLabelFont:
labelTextColor
setLabelTextColor:
labelShadowColor
setLabelShadowColor:
labelShadowOffset
setLabelShadowOffset:
setLabelPaddingInsets:
sizeThatFits:
_label
_labelPaddingInsets
setSectionLocation:animated:
backgroundView
setSectionLocation:
selectedBackgroundView
firstItem
secondItem
tk_firstCommonAncestorWithView:
constraints
containsObject:
removeConstraint:
superview
tk_removeFromContainer
currentThread
threadDictionary
removeObjectForKey:
invalidate
isPaused
timestamp
_displayDidRefresh:
displayLinkWithTarget:selector:
currentRunLoop
addToRunLoop:forMode:
setPaused:
addObserverForFrameInterval:handler:
UUID
initWithBlock:frameInterval:
_prepareUpdatedObserversForModification
_didAddFirstObserver
_didRemoveLastObserver
addEntriesFromDictionary:
_displayLink
_isWarmUpModeEnabled
_setDisplayLink:
_releaseCurrentDisplayLinkManager
displayDidRefresh:
enumerateKeysAndObjectsUsingBlock:
removeAllObjects
currentDisplayLinkManager
addObserverWithHandler:
removeObserverWithToken:
beginRequiringWarmUpMode
endRequiringWarmUpMode
_activeObservers
_updatedObservers
_hasUpdatedObservers
_isHandlingDisplayRefresh
_warmUpModeRequirementsCount
hash
initWithBlock:
_block
_frameInterval
_displayDidRefreshCount
mainScreen
setScreen:
_didReceiveMemoryWarning:
_cachedStyleObjectForPropertyWithSelector:
_bundle
imageNamed:inBundle:
_setCachedStyleObject:forPropertyWithSelector:
_cachedResizableImageForPropertyWithSelector:capInsets:size:opaque:withDrawingBlock:
resizableImageWithCapInsets:
whiteColor
systemFontOfSize:
blackColor
colorWithAlphaComponent:
defaultAnimationDuration
screen
scale
vibrationRecorderProgressViewResizableDotImage
size
colorWithWhite:alpha:
bezierPathWithOvalInRect:
fill
vibrationRecorderBarsBackgroundColor
vibrationRecorderInstructionsLabelFont
vibrationRecorderInstructionsLabelTextColor
vibrationRecorderInstructionsLabelBackgroundColor
vibrationRecorderInstructionsLabelPositionOffset
vibrationRecorderInstructionsLabelEdgeInsets
vibrationRecorderInstructionsLabelFadeAnimationDuration
vibrationRecorderControlsToolbarVerticalOffset
vibrationRecorderControlsToolbarAdditionalHeight
vibrationRecorderControlsToolbarItemsHorizontalOffsetFromEdge
vibrationRecorderProgressToolbarVerticalOffset
vibrationRecorderProgressToolbarAdditionalHeight
vibrationRecorderProgressViewHorizontalOffsetFromEdge
vibrationRecorderProgressViewHeight
vibrationRecorderProgressViewTrackColor
vibrationRecorderProgressViewDotHorizontalInset
vibrationRecorderProgressViewAccessibilityAdditionalHeight
vibrationRecorderRippleViewBackgroundColor
vibrationRecorderRippleRingLineWidth
vibrationRecorderRippleInitialRadius
vibrationRecorderRippleFinalRadius
vibrationRecorderRippleFingerStillSpeed
vibrationRecorderRippleFingerMovingSpeed
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
superclass
description
debugDescription
_cachedImageWithName:forPropertyWithSelector:
_cachedImageForPropertyWithSelector:size:opaque:withDrawingBlock:
_cachedStyleProperties
_screen
initWithNibName:bundle:
setTitle:
navigationItem
_cancelButtonTapped:
initWithBarButtonSystemItem:target:action:
_saveButtonTapped:
initWithTitle:style:target:action:
setLeftBarButtonItem:
setRightBarButtonItem:
_cleanUpVibrationNameAlertController
applicationWillSuspend
vibrationRecorderView:buttonTappedWithIdentifier:
initWithVibrationPatternMaximumDuration:
setView:
viewDidLoad
topLayoutGuide
setTopLayoutGuide:
viewDidAppear:
becomeFirstResponder
resignFirstResponder
_finishedWithRecorder
viewWillDisappear:
setEnabled:
viewWillAppear:
viewDidDisappear:
dismissViewControllerAnimated:completion:
parentVibrationRecorderViewController
vibrationRecorderViewControllerWasDismissedWithoutSavingRecordedVibrationPattern:
alertControllerWithTitle:message:preferredStyle:
configureVibrationNameTextField:
addTextFieldWithConfigurationHandler:
textFields
firstObject
_vibrationNameTextFieldContentsDidChange:
_cancelButtonInAlertTapped:
actionWithTitle:style:handler:
addAction:
_saveButtonInAlertTapped:
_updateStateSaveButtonInAlert
presentViewController:animated:completion:
propertyListRepresentation
vibrationRecorderViewController:didFinishRecordingVibrationPattern:name:
vibrationNameTextField:shouldChangeCharactersInRange:replacementString:
simpleVibrationPatternWithVibrationDuration:pauseDuration:
_stopVibrating
turnOnWithVibrationPattern:
turnOff
timeIntervalSinceReferenceDate
appendVibrationComponentWithDuration:isPause:
startAnimatingProgress
_storeVibrationComponentOfTypePause:
_indefiniteVibrationPattern
_startVibratingWithVibrationPattern:
enterReplayModeWithVibrationPattern:
_accessibilityDidEnterReplayMode
enterRecordingMode
_accessibilityDidEnterRecordingMode
vibrationComponentDidEndForVibrationRecorderView:
_eraseCurrentVibrationComponentDidStartTimeStamp
exitRecordingModeWithPlayButtonEnabled:
_accessibilityDidExitRecordingMode
exitReplayMode
_accessibilityDidExitReplayMode
contextObject
setContextObject:
stopAnimatingProgress
_accessibilityMakeAnnouncementWithStringForLocalizationIdentifier:
vibrationComponentDidStartForVibrationRecorderView:
vibrationRecorderViewDidFinishReplayingVibration:
vibrationRecorderViewDidEnterRecordingMode:
vibrationRecorderView:didExitRecordingModeWithContextObject:
vibrationRecorderViewDidReachVibrationRecordingMaximumDuration:
textFieldShouldBeginEditing:
textFieldDidBeginEditing:
textFieldShouldEndEditing:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textField:shouldChangeCharactersInRange:replacementString:
textFieldShouldClear:
textFieldShouldReturn:
initWithVibratorController:
loadView
supportedInterfaceOrientations
setParentVibrationRecorderViewController:
_mode
_vibrationRecorderView
_recordedVibrationPattern
_currentVibrationComponentDidStartTimeStamp
_isWaitingForEndOfCurrentVibrationComponent
_cancelButton
_saveButton
_vibrationNameAlertController
_vibrationNameAlertSaveAction
_vibrationNameAlertTextField
_vibratorController
_parentVibrationRecorderViewController
initWithStyle:
kitImageNamed:
imageWithRenderingMode:
showsMedia
defaultMediaLibrary
endGeneratingLibraryChangeNotifications
tonePickerTableViewControllerWillBeDeallocated:
_handleSwitchControlValueChanged:
removeTarget:action:forControlEvents:
_setDismissalDelegate:
_setAdditionalDelegate:
setTonePickerTableViewControllerHelper:
_configureNavigationBarIfNeeded
navigationController
navigationBar
items
lastObject
setRightBarButtonItem:animated:
isOn
isViewLoaded
tableView
_updateStyleOfTableView:forStyleProvider:
reloadData
tonePickerUsesOpaqueBackground
setBackgroundView:
tonePickerTableViewSeparatorStyle
setSeparatorStyle:
tonePickerCustomTableSeparatorBackdropOverlayBlendMode
_setSeparatorBackdropOverlayBlendMode:
tonePickerCustomTableSeparatorColor
loadViewForTonePickerTableViewController:
_updateMinimumTextIndentation
_reloadData
view
window
indexPathForSelectedRow
deselectRowAtIndexPath:animated:
viewDidLayoutSubviews
indexPathsForVisibleRows
scrollToRowAtIndexPath:atScrollPosition:animated:
sectionHeader
regularToneSectionIndex
wantsCustomTonePickerHeaderView
tonePickerHeaderTextShouldBeUppercase
currentLocale
uppercaseStringWithLocale:
tonePickerHeaderTextFont
tonePickerHeaderTextColor
tonePickerHeaderTextShadowColor
tonePickerHeaderTextShadowOffset
tonePickerHeaderTextPaddingInsets
layoutMargins
_minimumTextIndentationForTableView:withCheckmarkImage:
setMinimumTextIndentation:
URLWithString:
sharedApplication
openURL:options:completionHandler:
tonePickerViewController:selectedToneWithIdentifier:
tonePickerCellTextColor
textLabel
_resetScrollingPosition
initWithCapacity:
unsignedLongLongValue
numberWithUnsignedLongLong:
_handleMediaLibraryDidChangeNotification
beginGeneratingLibraryChangeNotifications
setSelectedMediaIdentifier:
selectedIdentifier:
_mediaItemForIdentifier:
_addMediaIdentifierToList:
indexPathForRow:inSection:
isEqualToNumber:
removeObjectsInArray:
predicateWithValue:forProperty:
setWithObjects:
initWithFilterPredicates:
tonePickerViewController:selectedMediaItemWithIdentifier:
applicationMusicPlayer
playbackState
_playMediaItemWithIdentifier:
arrayWithObject:
collectionWithItems:
_musicPlayer
setQueueWithItemCollection:
setRepeatMode:
play
pauseWithFadeoutDuration:
stop
valueForProperty:
cellForRowAtIndexPath:
setAccessoryType:
initWithFrame:style:
setAutoresizingMask:
setTableView:
isEditing
setEditing:
showsDisclosureIndicator
dequeueReusableCellWithIdentifier:
_separatorBackdropOverlayBlendMode
setContentBackdropOverlayBlendMode:
separatorColor
setContentBackgroundColor:
setSelectionStyle:
setUserInteractionEnabled:
tonePickerCellBackgroundColor
initWithStyle:reuseIdentifier:
setEditingAccessoryType:
tonePickerCellTextFont
tonePickerCellHighlightedTextColor
setHighlightedTextColor:
newBackgroundViewForSelectedTonePickerCell:
setSelectedBackgroundView:
newAccessoryDisclosureIndicatorViewForTonePickerCell
setAccessoryView:
setEditingAccessoryView:
_configureTextColorOfLabelInCell:checked:
addTarget:action:forControlEvents:
isTextCentered
setTextAlignment:
detailTextLabel
detailText
showsCheckmark
updateCell:withCheckedStatus:forPickerRowItem:
accessoryView
setOn:
_shouldShowCheckmarkOnTrailingEdge
setLayoutManager:
needsRoomForCheckmark
tableView:updateCell:withSeparatorForPickerRowItem:
parentItem
numberOfChildren
_setShouldHaveFullLengthBottomSeparator:
setSeparatorInset:
imageView
setImage:
_pickerRowItemForIndexPath:
updateDividerContentColorToMatchSeparatorColorInTableView:
tableView:cellForPickerRowItem:
tableView:didSelectRowAtIndexPath:forPickerRowItem:
rowHeight
_customHeaderViewForHeaderInSection:
tableView:viewForHeaderInSection:
footerText
tableView:willDisplayCell:forPickerRowItem:
didReloadTones
didUpdateCheckedStatus:ofToneClassicsPickerItem:
updateCell:withDetailText:
didUpdateDetailText:ofToneClassicsPickerItem:
_togglePlayMediaItemWithIdentifier:
initWithMediaTypes:
setAllowsPickingMultipleItems:
setModalPresentationStyle:
_stopMediaItemPlaybackWithFadeOutDuration:
tonePickerViewController:didChangeIgnoreMute:
initWithClassicTonesHeaderItem:
backgroundColor
_sectionContentInset
_setSectionContentInset:
_setClipUnderlapWhileTransitioning:
pushViewController:animated:
setCorrespondingToneIdentifier:
tonePickerViewController:willPresentVibrationPickerViewController:
tonePickerViewController:didDismissVibrationPickerViewController:
tonePickerController:requestsPresentingAlertWithTitle:message:
tonePickerTableViewWillDisappear:
vibrationPickerViewController:selectedVibrationWithIdentifier:
vibrationPickerViewControllerWasDismissed:
mediaPicker:didPickMediaItems:
mediaPickerDidCancel:
setShowsStoreButtonInNavigationBar:
setStyleProvider:
setShowsMedia:
selectedMediaIdentifier
addMediaItems:
removeMediaItems:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:numberOfRowsInSection:
tableView:didSelectRowAtIndexPath:
tableView:heightForRowAtIndexPath:
tableView:titleForHeaderInSection:
tableView:heightForHeaderInSection:
tableView:titleForFooterInSection:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:shouldHighlightRowAtIndexPath:
showsStoreButtonInNavigationBar
styleProvider
_tonePickerController
_checkmarkImage
_tableViewCellLayoutManagerForIndentedRows
_tableViewCellLayoutManagerForUnindentedRows
_showsToneStoreWasSetExplicitly
_needsScrollPositionReset
_storeBarButtonItem
_toneSectionHeaderViews
_mediaPickerController
_mediaItems
_toneClassicsTableViewController
_vibrationPickerViewController
_isHandlingSwitchControlValueChanged
_switchControlsBeingObserved
_showsStoreButtonInNavigationBar
_styleProvider
tonePickerTableViewControllerHelper
_classicTonesHeaderItem
_tonePickerTableViewControllerHelper
_parentTonePickerController
_appendDescriptionOfAttributesToString:
_appendDescriptionOfAttributeNamed:withStringValue:toString:
parentSectionItem
_needsRoomForCheckmark
_itemKind
__parentTonePickerController
_numberOfChildren
accountIdentifier
setAccountIdentifier:
_dividerViewFrame
contentView
_setDrawsAsBackdropOverlayWithBlendMode:
convertRect:toView:
contentBackgroundColor
contentBackdropOverlayBlendMode
_dividerView
_contentBackdropOverlayBlendMode
hasUserGeneratedVibrationsCapability
currentVibrationIdentifierForAlertType:
setDefaultVibrationIdentifier:
_updateVisibilityOfSynchronizedGroup
_sectionForDefaultGroup
_updateSectionVisibilityFlagToValue:usingBlock:sectionIndexGetter:
_sanitizedDefaultVibrationIdentifier
_indexPathForVibrationWithIdentifier:
arrayWithObjects:count:
reloadRowsAtIndexPaths:withRowAnimation:
currentVibrationIdentifierForAlertType:topic:
arrayWithObjects:
raise:format:
_sectionForUserGeneratedGroup
canEnterEditingMode
_sectionForNoneGroup
noneVibrationName
_updateCheckedStateOfAllVisibleCells
_updateEditButtonItem
_sortedUserGeneratedVibrationIdentifiers
vibrationPickerUsesOpaqueBackground
vibrationPickerTableViewSeparatorStyle
vibrationPickerCustomTableSeparatorBackdropOverlayBlendMode
vibrationPickerCustomTableSeparatorColor
showsEditButtonInNavigationBar
_updateEditButtonItemWithAnimation:
setAllowsSelectionDuringEditing:
_selectedVibrationIndexPath
presentedViewController
_dismissalDelegate
allKeys
sortedArrayUsingSelector:
allUserSelectableSystemVibrationIdentifiers
_sortedArrayWithVibrationIdentifiers:allowsDuplicateVibrationNames:
allUserGeneratedVibrationIdentifiers
showsUserGenerated
willChangeValueForKey:
didChangeValueForKey:
setEditing:animated:
_sectionForSynchronizedGroup
_sectionForSystemGroup
_sortedVibrationIdentifiers
vibrationWithIdentifierIsValid:
_additionalDelegate
parentViewController
_navigationItem
editButtonItem
indexPathForCell:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
decimalDigitCharacterSet
invertedSet
hasPrefix:
stringByReplacingCharactersInRange:withString:
rangeOfCharacterFromSet:
integerValue
localizedStringWithFormat:
stringByAppendingString:
indexSetWithIndex:
reloadSections:withRowAnimation:
insertSections:withRowAnimation:
deleteSections:withRowAnimation:
performWithoutAnimation:
_cellAccessoriesDescriptorForRowAtIndexPath:
setChecked:
_areSynchronizedVibrationsAllowedForAlertType:
_sanitizedCorrespondingToneIdentifier
_synchronizedVibrationIdentifierForToneIdentifier:
_localizationIdentifierForHeaderInSection:
wantsCustomVibrationPickerHeaderView
vibrationPickerHeaderTextShouldBeUppercase
vibrationPickerHeaderTextFont
vibrationPickerHeaderTextColor
vibrationPickerHeaderTextShadowColor
vibrationPickerHeaderTextShadowOffset
vibrationPickerHeaderTextPaddingInsets
_showsOnlyEditableSections
initWithReuseIdentifier:
vibrationPickerCellTextFont
setRegularTextFont:
vibrationPickerCellTextColor
setRegularTextColor:
vibrationPickerCellHighlightedTextColor
vibrationPickerCellBackgroundColor
newBackgroundViewForSelectedVibrationPickerCell:
newAccessoryDisclosureIndicatorViewForVibrationPickerCell
setEditable:
setPlaceholderText:
_updateSelectionStyleForCell:indexPath:
_identifierOfVibrationAtIndexPath:
deleteUserGeneratedVibrationPatternWithIdentifier:error:
_handleError:
beginUpdates
deleteRowsAtIndexPaths:withRowAnimation:
endUpdates
_processCurrentVibrationSelection
visibleCells
makeTextFieldResignFirstResponderIfNeeded
setVibrationRecorderViewControllerDelegate:
_sanitizeVibrationIdentifierForPlayback:
_startVibratingWithVibrationIdentifier:
vibratorState
_adjustedNameForVibrationWithDesiredName:vibrationIdentifier:
addUserGeneratedVibrationPattern:name:error:
insertRowsAtIndexPaths:withRowAnimation:
patternForVibrationWithIdentifier:
setName:forUserGeneratedVibrationWithIdentifier:error:
moveRowAtIndexPath:toIndexPath:
viewControllers
setHidesBackButton:animated:
addIndex:
vibrationPickerTableViewCell:endedEditingWithText:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
setShowsUserGenerated:
setShowsEditButtonInNavigationBar:
_handleUserGeneratedVibrationsDidChangeNotification
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
_presentVibrationRecorderViewController
defaultVibrationIdentifier
correspondingToneIdentifier
allowsDeletingDefaultVibration
setAllowsDeletingDefaultVibration:
_showsUserGenerated
_showsEditButtonAtRightSideOfCurrentNavigationController
_allowsDeletingDefaultVibration
_canEnterEditingMode
_viewHasAppearedAtLeastOnce
_isCallingParentViewController
_swipeToDeleteMode
_skipNextUserGeneratedVibrationsDidChangeNotification
_defaultVibrationIdentifierWasExplicitlySet
_showsSynchronized
_synchronizedVibrationIdentifier
_vibrationManager
_vibrationShouldStopTimer
_indexPathOfCellBeingDeleted
_sectionHeaderViews
_showsEditButtonInNavigationBar
_defaultVibrationIdentifier
_correspondingToneIdentifier
__additionalDelegate
__dismissalDelegate
_makeRemovableTextFieldEditable:
_isDisplayingRemovableTextField
placeholder
setPlaceholder:
highlightedTextColor
accessoryType
regularTextColor
isFirstResponder
indentationLevel
indentationWidth
descender
_layoutRemovableTextField
didTransitionToState:
isEditable
willTransitionToState:
areAnimationsEnabled
setAnimationsEnabled:
removeFromSuperview
placeholderText
regularTextFont
isChecked
_removableTextField
_editable
_regularTextColor
_text
_footerText
initWithRootViewController:
vibrationRecorderViewControllerDelegate
_vibrationRecorderContentViewController
setTranslatesAutoresizingMaskIntoConstraints:
intrinsicContentSize
tk_constrainLayoutAttribute:asEqualToValueOfView:withOffset:
tk_constrainLayoutAttribute:asEqualToValueOfView:
tk_addedConstraintForLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:
tk_constrainLayoutAttribute:asEqualToConstant:
initWithMaximumTimeInterval:styleProvider:
initWithVibrationPatternMaximumDuration:styleProvider:
setAccessibilityHint:
insertSubview:belowSubview:
tk_addedConstraintForLayoutAttribute:asEqualToValueOfView:
tk_constrainLayoutAttribute:asEqualToLayoutAttribute:ofView:
setFingerStillSpeed:
setFingerMovingSpeed:
setFirstRippleInitialRadius:
setFadeOutRadius:
setLineBreakMode:
setNumberOfLines:
setIsAccessibilityElement:
tk_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:
tk_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:
_enterWaitingModeWithAnimation:enablePlayButton:
tk_addedConstraintForLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:
_titleForControlsToolbarButtonWithIdentifier:
_handleLeftButtonTapped:
_handleRightButtonTapped:
setWidth:
setItems:animated:
_setLeftButtonIdentifier:enabled:rightButtonIdentifier:enabled:animated:
setAlpha:
animateWithDuration:delay:options:animations:completion:
_exitWaitingModeWithAnimation:
clearAllVibrationComponents
setRoundedCornersCompensationDelayMode:
setCurrentTimeInterval:
vibrationComponentDidEnd
exitRecordingMode
_updateProgress:
currentVibrationComponentShouldEnd
didMoveToWindow
setConstant:
vibrationComponentDidStart
vibrationRecorderTouchSurfaceDidEnterRecordingMode:
vibrationComponentDidStartForVibrationRecorderTouchSurface:
vibrationComponentDidEndForVibrationRecorderTouchSurface:
vibrationRecorderTouchSurface:didExitRecordingModeWithContextObject:
vibrationRecorderTouchSurfaceDidFinishReplayingVibration:
_instructionsLabel
_controlsToolbar
_progressView
_touchSurface
_controlsToolbarTopConstraint
_progressToolbarBottomConstraint
_touchSurfaceTopConstraint
_isReplayModeEnabled
_leftButtonIdentifier
_rightButtonIdentifier
_vibrationPatternMaximumDuration
_currentVibrationProgressDidStartTimestamp
_currentVibrationComponentDidStartTimestamp
_isAnimatingProgress
_displayLinkManagerObserverToken
_topLayoutGuide
tintColor
tk_addedConstraintForLayoutAttribute:asEqualToValueOfView:withMultiplier:
_cappedValueForTimeInterval:
roundedCornersCompensationDelayMode
_dotInsets
_dotSize
_frameForDotAtTimeInterval:duration:
_updateHorizontalConstraintsOfDotForCurrentVibrationComponent:withFrame:
setDuration:
_resizableDotImage
initWithImage:
setTimeInterval:
setPreviousPauseTimeInterval:
setPreviousPauseDuration:
setAccessibilityFrameAdditionalHeight:
tk_addedConstraintForLayoutAttribute:asEqualToLayoutAttribute:ofView:withMultiplier:
didMoveToSuperview
_updateProgressViewBackgroundColor
descriptionForDuration:
accessibilityValue
accessibilityFrame
isAccessibilityElement
accessibilityLabel
currentTimeInterval
_maximumTimeInterval
_currentVibrationComponentDidBeginTimeInterval
_previousPauseDidBeginTimeInterval
_progressViewWidthConstraint
_dotForCurrentVibrationComponent
_dotForCurrentVibrationComponentLeftConstraint
_dotForCurrentVibrationComponentRightConstraint
_dots
_roundedCornersCompensationDelayMode
_currentTimeInterval
setFillColor:
reset
timeIntervalSinceCreation
configureWithTimeIntervalSinceCreation:normalizedRingLocation:ringSpeed:
normalizedRingLocation
ringSpeed
_creationTimestamp
_ringSpeed
_normalizedRingLocation
null
_appendDescriptionOfAttributeNamed:withIntegerValue:toString:
_row
timeInterval
previousPauseTimeInterval
previousPauseDuration
accessibilityFrameAdditionalHeight
accessibilityTraits
_timeInterval
_duration
_previousPauseTimeInterval
_previousPauseDuration
_accessibilityFrameAdditionalHeight
initWithFormat:
appendString:
appendFormat:
_appendDescriptionOfAttributeNamed:withBoolValue:toString:
_section
semanticContentAttribute
userInterfaceLayoutDirectionForSemanticContentAttribute:
minimumTextIndentation
textRectForCell:
_adjustedTextFrameWithOriginalTextFrame:forCell:
textRectForCell:rowWidth:
_minimumTextIndentation
initWithStyleProvider:
setOpaque:
setAccessibilityTraits:
_stopAnimation
_updateRingEnlargementAnimation
_currentSpeed
_enqueueRingLayerWithTimeIntervalSinceCreation:normalizedLocation:speed:
tk_lastEnqueuedObject
_reusableTouchContextObject
configureWithTimeIntervalSinceCreation:location:
tk_enqueueObject:
tk_nextDequeuedObject
tk_dequeueObject
_enqueueReusableTouchContextObject:
location
fingerStillSpeed
fingerMovingSpeed
_refresh:
firstRippleInitialRadius
fadeOutRadius
_reusableRingLayer
numberWithUnsignedInteger:
layer
addSublayer:
setBeginTime:
setValue:forKey:
addAnimation:forKey:
_enqueueReusableRingLayer:
CGColor
setStrokeColor:
setLineWidth:
setKeyPath:
CGPath
setFromValue:
setToValue:
numberWithDouble:
setAnimations:
begin
setPosition:
commit
valueForKey:
removeObject:
removeFromSuperlayer
_startAnimation
anyObject
locationInView:
_touchBeganAtLocation:
_touchMovedToLocation:
_touchEndedAtLocation:
touchesEnded:withEvent:
animationDidStart:
animationDidStop:finished:
_isTouchDown
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesCancelled:withEvent:
_currentTouchLocation
_currentTouchStartTime
_numberOfRipplesForCurrentTouch
_isTrackingTouch
_recentTouchesContextQueue
_reusableTouchContexts
_currentSpeedCoefficient
_needsCurrentSpeedRefresh
_isAnimating
_ringLayersQueue
_reusableRingLayers
_ringLayersByIdentifiers
_lastRingLayerIdentifier
_ringEnlargementAnimation
_fingerStillSpeed
_fingerMovingSpeed
_firstRippleInitialRadius
_fadeOutRadius
_classicToneIndex
_location
setMultipleTouchEnabled:
setClipsToBounds:
setAccessibilityLabel:
_recordTouchLocation:touchPhase:
didStopRecording
recordNormalizedTouchLocation:touchPhase:
_updateTouchLocationForReplayMode:
getNormalizedTouchLocation:touchPhase:forTimeInterval:
_isRecordingModeEnabled
_recordedDataWrapper
_shouldIgnoreCurrentTouch
_vibrationPatternToReplay
_replayModeWasEnteredStartTime
_textCentered
_showsCheckmark
_showsDisclosureIndicator
_detailText
_updateMaximumFramesPerSecondRate:
_prepareRecordedDataBufferForStoringEnoughElementsForRecordingDuration:
_recordFinalDataWithNormalizedTouchLocation:touchPhase:timeIntervalSinceBeginningOfPattern:
_vibrationPatternDidStartTimestamp
_maximumFramesPerSecondRate
_recordedData
_recordedDataElementsCount
_recordedDataCursor
_warmUpModeDidStartTimestamp
_displayLinkHasRefreshedAtLeastOnce
setAutocapitalizationType:
setReturnKeyType:
setEnablesReturnKeyAutomatically:
sendActionsForControlEvents:
initWithLabel:appendUUIDToLabel:
_turnOffIfAppropriate
performSynchronousBlock:
_previewVibrationSystemSoundID
numberWithUnsignedInt:
initWithObjectsAndKeys:
_vibrationDidCompleteWithPlayRequestIdentifier:
_accessQueue
_activePlayRequestIdentifier
_pendingStopRequestIdentifiers
removeLastObject
nextResponder
tk_firstViewControllerInResponderChain
_sectionHeader
_regularToneSectionIndex
tk_addedConstraintForLayoutAttribute:asEqualToConstant:
tk_addedConstraintForLayoutAttribute:asEqualToValueOfView:withOffset:
tk_addedConstraintForLayoutAttribute:asEqualToLayoutAttribute:ofView:
tk_constrainLayoutAttribute:asEqualToLayoutAttribute:ofView:withMultiplier:
tk_addedConstraintForLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:
tk_addedConstraintFotLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
addConstraint:
owningView
_tl_depth
hasAmbiguousLayout
subviews
_tk_recursiveAutolayoutTraceAtLevel:anyDescendantHasAmbiguousLayout:
tk_constrainLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:
tk_constrainLayoutAttribute:asEqualToValueOfView:withMultiplier:
tk_constrainLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:
_tk_autolayoutTrace
TKTonePickerTableView
TKTonePickerController
TKLabelContainerView
TKPickerTableViewCell
TKExtensions
TKDisplayLinkManager
TKDisplayLinkManagerObserver
TKStyleProvider
TKVibrationRecorderStyleProvider
NSObject
TKVibrationRecorderContentViewController
TKVibrationRecorderViewDelegate
UITextFieldDelegate
TKTonePickerViewController
TKTonePickerControllerDelegate
TKTonePickerControllerDelegateInternal
TKTonePickerTableViewControllerHelper
TKTonePickerTableViewLayoutMarginsObserver
TKTonePickerTableViewSeparatorObserver
TKVibrationPickerViewControllerDelegate
TKVibrationPickerViewControllerDismissalDelegate
MPMediaPickerControllerDelegate
TKToneClassicsTableViewController
TKTonePickerItem
TKPickerContainerItem
Deprecated
TKPickerDividerTableViewCell
TKSectionAwareTableView
TKVibrationPickerViewController
TKVibrationPickerTableViewCellDelegate
TKVibrationRecorderViewControllerDelegate
UINavigationControllerDelegate
TKVibrationPickerTableViewCell
TKPickerSectionItem
TKVibrationRecorderViewController
TKVibrationRecorderView
TKVibrationRecorderTouchSurfaceDelegate
TKVibrationRecorderProgressView
TKVibrationRecorderRippleRingLayer
TKPickerRowItem
TKVibrationRecorderProgressDotImageView
TKPickerItem
TKTonePickerTableViewCellLayoutManager
TKVibrationRecorderRippleView
CAAnimationDelegate
TKToneClassicsPickerItem
TKVibrationRecorderRippleTouchContext
TKVibrationRecorderTouchSurface
TKPickerSelectableItem
TKVibrationRecorderTouchSurfaceRecordedDataWrapper
TKVibrationInterfaceUtilities
TKVibratorController
TKQueue
TKTonePickerSectionItem
TKPickerDividerItem
TKConstraintBasedLayout
v16@0:8
v24@0:8@16
@16@0:8
@"<TKTonePickerTableViewLayoutMarginsObserver>"
@"<TKTonePickerTableViewSeparatorObserver>"
@24@0:8q16
v20@0:8B16
q16@0:8
@32@0:8q16@24
B16@0:8
v32@0:8@16q24
v40@0:8@16q24@32
@32@0:8q16Q24
v40@0:8@16q24Q32
B24@0:8@16
@24@0:8@16
@32@0:8@16^B24
v28@0:8@16B24
@24@0:8^B16
v40@0:8@16@24@32
Q16@0:8
@24@0:8Q16
Q24@0:8@16
v32@0:8@16B24B28
@20@0:8B16
v28@0:8B16@20
v32@0:8@16@24
v24@0:8Q16
@"TLToneManager"
@"NSMutableArray"
@"TLAlert"
@"<TKTonePickerControllerDelegate>"
@"NSString"
@"NSArray"
@"NSIndexPath"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{UIOffset=dd}16@0:8
v32@0:8{UIOffset=dd}16
v48@0:8{UIEdgeInsets=dddd}16
{CGSize=dd}32@0:8{CGSize=dd}16
{UIEdgeInsets=dddd}16@0:8
@"UILabel"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v24@0:8i16B20
d16@0:8
@24@0:8@?16
@32@0:8Q16@?24
@"CADisplayLink"
@"NSMutableDictionary"
@32@0:8@?16Q24
@"UIColor"16@0:8
@"UIScreen"16@0:8
v24@0:8@"UIScreen"16
@"UIFont"16@0:8
@"UIImage"16@0:8
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v32@0:8@16:24
@32@0:8@16:24
@52@0:8:16{CGSize=dd}24B40@?44
@84@0:8:16{UIEdgeInsets=dddd}24{CGSize=dd}56B72@?76
@"NSBundle"
@"UIScreen"
v24@0:8@"TKVibrationRecorderView"16
v28@0:8@16i24
v28@0:8@"TKVibrationRecorderView"16i24
B24@0:8@"TKVibrationRecorderView"16
v32@0:8@"TKVibrationRecorderView"16@24
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@16{_NSRange=QQ}24@40
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
@"TKVibrationRecorderView"
@"TLVibrationPattern"
@"UIBarButtonItem"
@"UIAlertController"
@"UIAlertAction"
@"UITextField"
@"TKVibratorController"
@"NSDictionary"
@"<TKVibrationRecorderViewControllerDelegate>"
@"TKVibrationRecorderViewController"
v24@0:8@"TKTonePickerController"16
v36@0:8@16B24@28
v36@0:8@"TKTonePickerController"16B24@"TKTonePickerItem"28
v40@0:8@"TKTonePickerController"16@"NSString"24@"TKTonePickerItem"32
v32@0:8@"TKTonePickerController"16@"NSString"24
v32@0:8@"TKTonePickerController"16@"NSNumber"24
B24@0:8@"TKTonePickerController"16
Q24@0:8@"TKTonePickerController"16
@32@0:8@16Q24
@"NSNumber"32@0:8@"TKTonePickerController"16Q24
@"NSString"32@0:8@"TKTonePickerController"16Q24
Q32@0:8@16@24
Q32@0:8@"TKTonePickerController"16@"NSNumber"24
v36@0:8@16Q24B32
v36@0:8@"TKTonePickerController"16Q24B32
v32@0:8@16d24
v32@0:8@"TKTonePickerController"16d24
v32@0:8@"TKTonePickerController"16@"TKTonePickerItem"24
v44@0:8@16B24@28@36
v44@0:8@"TKTonePickerController"16B24@"TKTonePickerItem"28@"NSIndexPath"36
v40@0:8@"TKTonePickerController"16@"NSString"24@"NSString"32
v24@0:8@"UITableViewController<TKTonePickerTableViewLayoutMarginsObserver><TKTonePickerTableViewSeparatorObserver>"16
@32@0:8@16@24
@"UITableViewCell"32@0:8@"UITableView"16@"TKPickerRowItem"24
v40@0:8@"UITableView"16@"UITableViewCell"24@"TKPickerRowItem"32
@"TKTonePickerItem"16@0:8
v36@0:8@"UITableViewCell"16B24@"TKPickerRowItem"28
v32@0:8@"UITableViewCell"16@"NSString"24
v24@0:8@"UITableView"16
v40@0:8@"UITableView"16@"NSIndexPath"24@"TKPickerRowItem"32
v24@0:8@"TKTonePickerTableView"16
v32@0:8@"TKVibrationPickerViewController"16@"NSString"24
v24@0:8@"TKVibrationPickerViewController"16
v32@0:8@"MPMediaPickerController"16@"MPMediaItemCollection"24
v24@0:8@"MPMediaPickerController"16
d32@0:8@16@24
v24@0:8d16
q24@0:8@16
q32@0:8@16q24
@32@0:8@16q24
d32@0:8@16q24
B32@0:8@16@24
@"TKTonePickerController"
@"UIImage"
@"TKTonePickerTableViewCellLayoutManager"
@"MPMediaPickerController"
@"MPMusicPlayerController"
@"TKToneClassicsTableViewController"
@"TKVibrationPickerViewController"
@"<TKTonePickerViewControllerDelegate>"
@"<TKTonePickerStyleProvider>"
@"TKTonePickerItem"
@"<TKTonePickerTableViewControllerHelper>"
@"TKPickerItem"24@0:8q16
v24@0:8q16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"UIView"
@32@0:8q16q24
v32@0:8@"TKVibrationPickerTableViewCell"16@"NSString"24
v40@0:8@"TKVibrationRecorderViewController"16@"NSDictionary"24@"NSString"32
v24@0:8@"TKVibrationRecorderViewController"16
v36@0:8@16@24B32
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@48@0:8@16q24@32@40
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
{?=BB}24@0:8@16
@28@0:8@16B24
v36@0:8B16@?20@?28
q32@0:8@16@24
v24@0:8B16B20
@"TLVibrationManager"
@"NSTimer"
@"<TKVibrationPickerViewControllerDelegate>"
@"<TKVibrationPickerStyleProvider>"
@"<TKVibrationPickerViewControllerDismissalDelegate>"
@"<TKVibrationPickerTableViewCellDelegate>"
@"UIColor"
@"TKVibrationRecorderContentViewController"
B24@0:8@"TKVibrationRecorderTouchSurface"16
v24@0:8@"TKVibrationRecorderTouchSurface"16
v32@0:8@"TKVibrationRecorderTouchSurface"16@24
@24@0:8d16
@20@0:8i16
v36@0:8i16B20i24B28B32
@"<TKVibrationRecorderStyleProvider>"
@"UIToolbar"
@"TKVibrationRecorderProgressView"
@"TKVibrationRecorderTouchSurface"
@"NSLayoutConstraint"
@"<NSCopying>"
@"<TKVibrationRecorderViewDelegate>"
@"<UILayoutSupport>"
@32@0:8d16@24
{CGSize=dd}16@0:8
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8d16d24
d24@0:8d16
i16@0:8
v20@0:8i16
@"TKVibrationRecorderProgressDotImageView"
v48@0:8d16{CGPoint=dd}24d40
{CGPoint=dd}16@0:8
{CGPoint="x"d"y"d}
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16d24
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
v32@0:8{CGPoint=dd}16
@"CAAnimation"
v40@0:8d16{CGPoint=dd}24
v36@0:8{CGPoint=dd}16i32
@"TKVibrationRecorderTouchSurfaceRecordedDataWrapper"
@"<TKVibrationRecorderTouchSurfaceDelegate>"
v44@0:8{CGPoint=dd}16i32d36
B40@0:8^{CGPoint=dd}16^i24d32
I16@0:8
@"TLAccessQueue"
@"NSUUID"
@"NSMutableSet"
v32@0:8q16d24
v32@0:8q16@24
v40@0:8q16@24d32
v40@0:8q16q24@32
v48@0:8q16q24@32d40
@32@0:8q16d24
@40@0:8q16@24d32
@40@0:8q16q24@32
@48@0:8q16q24@32d40
v64@0:8q16q24@32q40d48d56
@64@0:8q16q24@32q40d48d56
@32@0:8q16^B24
layoutMarginsObserver
T@"<TKTonePickerTableViewLayoutMarginsObserver>",W,N,V_layoutMarginsObserver
separatorObserver
T@"<TKTonePickerTableViewSeparatorObserver>",W,N,V_separatorObserver
modern
classic
sort
<classic_ringtone_identifier>
<classic_alert_tone_identifier>
RINGTONE_PICKER_IGNORE_MUTING_FOOTER_TEXT
RINGTONE_PICKER_GROUP_TITLE_DEFAULT
RINGTONE_PICKER_GROUP_TITLE_MEDIA
RINGTONE_PICKER_RINGTONES_STORE
RINGTONE_PICKER_IGNORE_MUTING_TITLE
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibraryUI_Sim/ToneLibrary-365.0.3/Kit/Tones/TKTonePickerController.m
-[TKTonePickerController _pickerRowItemAtIndex:inSectionForItem:]
RINGTONE_PICKER_NONE
RINGTONE_PICKER_CHOOSE_MEDIA
VIBRATION_PICKER_TITLE
CLASSIC_TONES_NAME
RINGTONE_PICKER_GROUP_TITLE_RINGTONES
RINGTONE_PICKER_GROUP_TITLE_TONES
TKAlertTones
TKAlarmWakeUpRingtones
TKRingtones
plist
q24@?0@8@16
-[TKTonePickerController _playToneWithIdentifier:]
v8@?0
v24@?0q8@"NSError"16
VIBRATION_PICKER_DEFAULT
%@ (%@)
RINGTONE_PICKER_DEFAULT
showsToneStore
TB,N,V_showsToneStore
mediaAtTop
TB,N,GisMediaAtTop,V_mediaAtTop
showsVibrations
TB,N,V_showsVibrations
selectedVibrationIdentifier
T@"NSString",C,N,V_selectedVibrationIdentifier
showsIgnoreMute
TB,N,V_showsIgnoreMute
ignoreMute
TB,N,V_ignoreMute
canShowStore
TB,R,N
_classicRingtoneIdentifiers
T@"NSArray",&,N,S_setClassicRingtoneIdentifiers:,V__classicRingtoneIdentifiers
_classicAlertToneIdentifiers
T@"NSArray",&,N,S_setClassicAlertToneIdentifiers:,V__classicAlertToneIdentifiers
_selectedClassicRingtoneIndex
TQ,N,S_setSelectedClassicRingtoneIndex:,V__selectedClassicRingtoneIndex
_selectedClassicAlertToneIndex
TQ,N,S_setSelectedClassicAlertToneIndex:,V__selectedClassicAlertToneIndex
_topLevelSelectedTonePickerItem
T@"TKTonePickerItem",R,N
_selectedToneIndexPath
T@"NSIndexPath",&,N,S_setSelectedToneIndexPath:,V__selectedToneIndexPath
_indexPathForToneStoreGroup
T@"NSIndexPath",R,N
_indexPathForDefaultGroup
_indexPathForFirstToneGroup
_indexPathForMediaGroup
_indexPathForNone
_indexPathForVibrationGroup
indexPathForSelectedTone
_shouldCachePickerItems
TB,N,S_setShouldCachePickerItems:
_behavesAsRingtonePicker
TB,N,S_setBehavesAsRingtonePicker:,V__behavesAsRingtonePicker
_alertTonesPlistName
T@"NSString",R,N
_ringtonesPlistName
_toneManager
T@"TLToneManager",&,N,S_setToneManager:
delegate
T@"<TKTonePickerControllerDelegate>",W,N,V_delegate
alertType
Tq,R,N,V_alertType
topic
T@"NSString",C,N,V_topic
defaultToneIdentifier
T@"NSString",C,N,V_defaultToneIdentifier
showsDefault
TB,N,V_showsDefault
showsNone
TB,N,V_showsNone
noneAtTop
TB,N,GisNoneAtTop,V_noneAtTop
noneString
T@"NSString",C,N,V_noneString
showsNothingSelected
TB,N,V_showsNothingSelected
selectedTonePickerItem
selectedToneIdentifier
T@"NSString",C,N
labelText
labelFont
T@"UIFont",&,N
labelTextColor
T@"UIColor",&,N
labelShadowColor
labelShadowOffset
T{UIOffset=dd},N
labelPaddingInsets
T{UIEdgeInsets=dddd},N,V_labelPaddingInsets
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibraryUI_Sim/ToneLibrary-365.0.3/Kit/Shared/iOS/DisplayLink/TKDisplayLinkManager.m
-[TKDisplayLinkManager beginRequiringWarmUpMode]
-[TKDisplayLinkManager endRequiringWarmUpMode]
v32@?0@"NSUUID"8@"TKDisplayLinkManagerObserver"16^B24
paused
TB,R,N,GisPaused
duration
Td,R,N
timestamp
v16@?0^{CGContext=}8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
vibrationRecorderBarsBackgroundColor
T@"UIColor",R,N
screen
T@"UIScreen",&,N
vibrationRecorderInstructionsLabelFont
T@"UIFont",R,N
vibrationRecorderInstructionsLabelTextColor
vibrationRecorderInstructionsLabelBackgroundColor
vibrationRecorderInstructionsLabelPositionOffset
T{UIOffset=dd},R,N
vibrationRecorderInstructionsLabelEdgeInsets
T{UIEdgeInsets=dddd},R,N
vibrationRecorderInstructionsLabelFadeAnimationDuration
vibrationRecorderControlsToolbarVerticalOffset
vibrationRecorderControlsToolbarAdditionalHeight
vibrationRecorderControlsToolbarItemsHorizontalOffsetFromEdge
vibrationRecorderProgressToolbarVerticalOffset
vibrationRecorderProgressToolbarAdditionalHeight
vibrationRecorderProgressViewHorizontalOffsetFromEdge
vibrationRecorderProgressViewHeight
vibrationRecorderProgressViewTrackColor
vibrationRecorderProgressViewDotHorizontalInset
vibrationRecorderProgressViewResizableDotImage
T@"UIImage",R,N
vibrationRecorderProgressViewAccessibilityAdditionalHeight
vibrationRecorderRippleViewBackgroundColor
vibrationRecorderRippleRingLineWidth
vibrationRecorderRippleInitialRadius
vibrationRecorderRippleFinalRadius
vibrationRecorderRippleFingerStillSpeed
vibrationRecorderRippleFingerMovingSpeed
defaultAnimationDuration
T@"UIScreen",&,N,V_screen
VIBRATION_RECORDER_TITLE
SAVE
VIBRATION_RECORDER_ENTER_VIBRATION_NAME
v16@?0@"UITextField"8
CANCEL
v16@?0@"UIAlertAction"8
VIBRATION_RECORDER_DID_ENTER_RECORDING_MODE_ANNOUNCEMENT
VIBRATION_RECORDER_DID_EXIT_RECORDING_MODE_ANNOUNCEMENT
VIBRATION_RECORDER_DID_ENTER_REPLAY_MODE_ANNOUNCEMENT
VIBRATION_RECORDER_DID_EXIT_REPLAY_MODE_ANNOUNCEMENT
T@"<TKVibrationRecorderViewControllerDelegate>",W,N,V_delegate
parentVibrationRecorderViewController
T@"TKVibrationRecorderViewController",W,N,V_parentVibrationRecorderViewController
UIPreferencesBlueCheck
RINGTONE_PICKER_STORE_BUTTON_TITLE
TKTonePickerSectionHeaderDefault
TKTonePickerSectionHeaderMedia
TKTonePickerSectionHeaderRegularToneGroup
itms://?action=ringtones
_TKTonePickerCellReuseIdentifier
_TKTonePickerCellWithDisclosureIndicatorReuseIdentifier
_TKTonePickerCellWithSwitchReuseIdentifier
_TKTonePickerDividerCellReuseIdentifier
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibraryUI_Sim/ToneLibrary-365.0.3/Kit/Tones/iOS/TKTonePickerViewController.m
-[TKTonePickerViewController updateCell:withCheckedStatus:forPickerRowItem:]
Tq,R,N
TB,N
TB,N,GisNoneAtTop
showsStoreButtonInNavigationBar
TB,N,V_showsStoreButtonInNavigationBar
T@"<TKTonePickerViewControllerDelegate>",W,N,V_delegate
showsMedia
TB,N,V_showsMedia
TB,N,GisMediaAtTop
selectedMediaIdentifier
T@"NSNumber",C,N
styleProvider
T@"<TKTonePickerStyleProvider>",&,N,V_styleProvider
tonePickerMediaItemList
tonePickerTableViewControllerHelper
T@"<TKTonePickerTableViewControllerHelper>",W,N,V_tonePickerTableViewControllerHelper
classic ringtones header
classic alert tones header
ignore mute
itemKind
numberOfChildren
_parentTonePickerController
T@"TKTonePickerController",W,N,S_setParentTonePickerController:,V__parentTonePickerController
Tq,N,S_setNumberOfChildren:,V_numberOfChildren
TQ,N,S_setItemKind:,V_itemKind
needsRoomForCheckmark
TB,N,S_setNeedsRoomForCheckmark:,V_needsRoomForCheckmark
parentSectionItem
T@"TKTonePickerSectionItem",R,N
accountIdentifier
contentBackgroundColor
contentBackdropOverlayBlendMode
Tq,N,V_contentBackdropOverlayBlendMode
tk_section
tk_row
_TLVibrationPickerViewTableCellDefaultIdentifier
_TLVibrationPickerViewTableCellWithDisclosureIndicatorIdentifier
q8@?0
Hiding the user generated section of the vibration picker while in editing mode is invalid.
VIBRATION_UNTITLED_NAME
i24@?0r^v8r^v16
 %ld
VIBRATION_PICKER_GROUP_TITLE_DEFAULT
VIBRATION_PICKER_GROUP_TITLE_STANDARD
VIBRATION_PICKER_GROUP_TITLE_USER_GENERATED
VIBRATION_PICKER_CREATE_NEW_USER_GENERATED_PATTERN
VIBRATION_NAME_TEXT_FIELD_PLACEHOLDER
_additionalDelegate
T@"<TKVibrationPickerViewControllerDelegate>",W,N,S_setAdditionalDelegate:,V__additionalDelegate
_dismissalDelegate
T@"<TKVibrationPickerViewControllerDismissalDelegate>",W,N,S_setDismissalDelegate:,V__dismissalDelegate
T@"<TKVibrationPickerViewControllerDelegate>",W,N,V_delegate
defaultVibrationIdentifier
T@"NSString",C,N,V_defaultVibrationIdentifier
correspondingToneIdentifier
T@"NSString",C,N,V_correspondingToneIdentifier
showsUserGenerated
TB,N,V_showsUserGenerated
T@"NSString",&,N,V_selectedVibrationIdentifier
allowsDeletingDefaultVibration
TB,N,V_allowsDeletingDefaultVibration
showsEditButtonInNavigationBar
TB,N,V_showsEditButtonInNavigationBar
canEnterEditingMode
T@"<TKVibrationPickerStyleProvider>",&,N,V_styleProvider
T@"<TKVibrationPickerTableViewCellDelegate>",W,N,V_delegate
T@"NSString",&,N
placeholderText
regularTextFont
regularTextColor
T@"UIColor",&,N,V_regularTextColor
highlightedTextColor
editable
TB,N,GisEditable,V_editable
checked
TB,N,GisChecked
text
footerText
T@"NSString",C,N,S_setText:,V_text
T@"NSString",C,N,S_setFooterText:,V_footerText
vibrationRecorderViewControllerDelegate
T@"<TKVibrationRecorderViewControllerDelegate>",W,N
VIBRATION_RECORDER_INSTRUCTIONS_LINE
VIBRATION_RECORDER_RECORD_BUTTON_NAME
VIBRATION_RECORDER_STOP_BUTTON_NAME
VIBRATION_RECORDER_PLAY_BUTTON_NAME
v12@?0B8
VIBRATION_RECORDER_TOUCH_SURFACE_INSTRUCTIONS_HIDDEN_HINT
v16@?0@"TKDisplayLinkManager"8
T@"<TKVibrationRecorderViewDelegate>",W,N,V_delegate
topLayoutGuide
T@"<UILayoutSupport>",&,N,V_topLayoutGuide
@"NSLayoutConstraint"24@?0q8d16
VIBRATION_RECORDER_PROGRESS_DESCRIPTION
VIBRATION_RECORDER_PROGRESS_VALUE_FORMAT
currentTimeInterval
Td,N,V_currentTimeInterval
roundedCornersCompensationDelayMode
Ti,N,V_roundedCornersCompensationDelayMode
normalizedRingLocation
T{CGPoint=dd},R,N,V_normalizedRingLocation
ringSpeed
Td,R,N,V_ringSpeed
Tq,N,S_setRow:,V_row
VIBRATION_RECORDER_PROGRESS_DOT_DESCRIPTION
VIBRATION_RECORDER_PROGRESS_DOT_VALUE_FORMAT
VIBRATION_RECORDER_PROGRESS_DOT_PREVIOUS_PAUSE_FORMAT
%@ %@
timeInterval
Td,N,V_timeInterval
Td,N,V_duration
previousPauseTimeInterval
Td,N,V_previousPauseTimeInterval
previousPauseDuration
Td,N,V_previousPauseDuration
accessibilityFrameAdditionalHeight
Td,N,V_accessibilityFrameAdditionalHeight
<%@: %p
section
; %@ = %ld
; %@ = %@
; %@ = "%@"
Tq,N,S_setSection:,V_section
minimumTextIndentation
Td,N,V_minimumTextIndentation
ring layer identifier
ring enlargement animation
path
opacity
_touchDown
TB,R,N,G_isTouchDown
fingerStillSpeed
Td,N,V_fingerStillSpeed
fingerMovingSpeed
Td,N,V_fingerMovingSpeed
firstRippleInitialRadius
Td,N,V_firstRippleInitialRadius
fadeOutRadius
Td,N,V_fadeOutRadius
classicToneIndex
Tq,N,S_setClassicToneIndex:,V_classicToneIndex
parentItem
location
T{CGPoint=dd},R,N,V_location
VIBRATION_RECORDER_TOUCH_SURFACE
T@"<TKVibrationRecorderTouchSurfaceDelegate>",W,N,V_delegate
textCentered
detailText
showsCheckmark
showsDisclosureIndicator
TB,N,GisTextCentered,S_setTextCentered:,V_textCentered
T@"NSString",C,N,S_setDetailText:,V_detailText
TB,N,S_setShowsCheckmark:,V_showsCheckmark
TB,N,S_setShowsDisclosureIndicator:,V_showsDisclosureIndicator
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibraryUI_Sim/ToneLibrary-365.0.3/Kit/Vibrations/Recorder/Touch-Surface/TKVibrationRecorderTouchSurfaceRecordedDataWrapper.m
-[TKVibrationRecorderTouchSurfaceRecordedDataWrapper recordNormalizedTouchLocation:touchPhase:]
%.1f
SECONDS_PLURAL_FORMAT
SECONDS_SINGULAR_FORMAT
TKVibratorController
vibratorState
TQ,R,N
empty
default
media
regularToneGroup
sectionHeader
regularToneSectionIndex
TQ,N,S_setSectionHeader:,V_sectionHeader
TQ,N,S_setRegularToneSectionIndex:,V_regularToneSectionIndex
|   
<%@: %p>%@
 - AMBIGUOUS LAYOUT
AMBIGUOUS LAYOUT IN SUBTREE
No views in subtree have an ambiguous layout. Good job!
333333
<333333
*** Assertion failure in %{private}s, %{private}@:%{private}lu.
%{private}@
*** Assertion failure.
We expect to have a default tone identifier.
Unexpectedly has updated target actions even though not handling display refresh.
Unexpected.
Couldn't not handle recording touch location in warm up mode with index %{public}lu.
