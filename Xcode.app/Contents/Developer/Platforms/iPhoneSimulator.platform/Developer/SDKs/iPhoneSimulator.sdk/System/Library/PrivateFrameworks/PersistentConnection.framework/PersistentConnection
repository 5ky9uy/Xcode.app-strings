dealloc
queue
setQueue:
_queue
alloc
init
lock
weakToStrongObjectsMapTable
retain
_createCTConnection
sharedInstanceForIdentifier:
addDelegate:queue:
_updateWWANInterfaceUpStateLocked
sharedInstance
addDelegate:
unlock
removeDelegate:
release
setObject:forKey:
removeObjectForKey:
initWithObjects:
_ctConnectionAttempt
performSelector:withObject:afterDelay:inModes:
mainRunLoop
_mainThreadCTConnectionAttempt
cancelPerformSelector:target:argument:
cancelPreviousPerformRequestsWithTarget:selector:object:
_updateWWANInterfaceAssertionsLocked
_updateWWANInterfaceUpState
interfaceManagerInternetReachabilityChanged:
_scheduleCalloutsForSelector:
_clearInCallWWANOverrideTimerLocked
loggingEnabledForLevel:
logAtLevel:delegate:format:
invalidate
isInterfaceUsable
_wantsWWANInterfaceAssertion
isInternetReachable
interfaceManagerWWANInterfaceStatusChanged:
_isWWANInHomeCountryLocked
interfaceManagerInHomeCountryStatusChanged:
linkQualityString
stringWithFormat:
isPoorLinkQuality
countByEnumeratingWithState:objects:count:
objectForKey:
respondsToSelector:
performSelector:withObject:
isInterfaceHistoricallyUsable
autorelease
_isInternetReachableLocked
isWoWSupported
_adjustWakeOnWiFi
_adjustWiFiAutoAssociationLocked
_adjustWiFiAutoAssociation
initWithTimeInterval:serviceIdentifier:target:selector:userInfo:
setDisableSystemWaking:
scheduleInRunLoop:
_wantsWakeOnWiFiEnabled
_adjustWakeOnWiFiLocked
doesWWANInterfaceExist
isWWANInterfaceActivationPermitted
isInCall
_isWiFiUsable
bindCFStream:toWWANInterface:
mutableCopy
_initWithRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:
urlConnectionBoundToWWANInterface:withRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:
interfaceLinkQualityChanged:previousLinkQuality:
interfaceReachabilityChanged:
interfaceRadioHotnessChanged:
isEqual:
class
self
performSelector:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retainCount
zone
hash
superclass
description
debugDescription
handleMachMessage:
_inCallWWANOverrideTimerFired
_updateCTIsWWANInHomeCountry:isWWANInterfaceDataActive:
currentLinkQualityString
_wwanIsPoorLinkQuality
_wifiIsPoorLinkQuality
isWWANBetterThanWiFi
isWWANInterfaceUp
WWANInterfaceName
isPowerStateDetectionSupported
isWWANInterfaceInProlongedHighPowerState
isWWANInHomeCountry
isInternetReachableViaWiFi
isWakeOnWiFiSupported
areAllNetworkInterfacesDisabled
cutWiFiManagerDeviceAttached:
_updateWWANInterfaceAssertions
enableWiFiAutoAssociation:forDelegate:
enableWakeOnWiFi:forDelegate:
_allowBindingToWWAN
bindCFStreamToWWANInterface:
urlConnectionBoundToWWANInterfaceWithRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:
_lock
_delegatesAndQueues
_WiFiAutoAssociationDelegates
_WiFiAutoAssociationDisableTimer
_wakeOnWiFiDelegates
_wakeOnWiFiDisableTimer
_ctServerConnection
_interfaceAssertion
_WWANContextIdentifier
_WWANInterfaceName
_isWWANInterfaceUp
_inCallWWANOverrideTimer
_isWWANInterfaceDataActive
_ctIsWWANInHomeCountry
_hasWWANStatusIndicator
_isPowerStateDetectionSupported
_isWWANInterfaceInProlongedHighPowerState
_isWWANInterfaceActivationPermitted
_lastActivationTime
_wwanRSSI
_isInCall
_isWakeOnWiFiSupported
_isWakeOnWiFiEnabled
_shouldOverrideOnCallBehavior
_loadDefaults
copy
doubleValue
boolValue
_resetAlgorithmToInterval:stage:
_resetAlgorithmToInterval:
minimumKeepAliveInterval
setMinimumKeepAliveInterval:
currentKeepAliveInterval
_setCurrentKeepAliveInterval:
maximumKeepAliveInterval
setMaximumKeepAliveInterval:
numberWithDouble:
numberWithBool:
initWithObjectsAndKeys:
_stringForStage:
_stringForAction:
_processInitialGrowthAction:
_processRefinedGrowthAction:
_processSteadyStateAction:
_processBackoffAction:
processNextAction:
timeIntervalSinceNow
_steadyStateTimeout
initWithTimeIntervalSinceNow:
_loadDefaultValue:forKey:
initWithCacheInfo:loggingIdentifier:algorithmName:
useIntervalIfImprovement:
countOfGrowthActions
cacheInfo
loggingIdentifier
_currentKeepAliveInterval
_minimumKeepAliveInterval
_maximumKeepAliveInterval
_lastKeepAliveInterval
_growthStage
_highWatermark
_initialGrowthStageHighWatermark
_initialGrowthStageLastAttempt
_leaveSteadyStateDate
_loggingIdentifier
_algorithmName
_countOfGrowthActions
timeIntervalSinceReferenceDate
_initWithAbsoluteTime:serviceIdentifier:guidancePriority:target:selector:userInfo:triggerOnGMTChange:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_updateTimers
setUserVisible:
scheduleInRunLoop:inMode:
_fireTimerFired
initWithAbsoluteTime:serviceIdentifier:target:selector:userInfo:triggerOnGMTChange:
_backgroundUpdateQueue
_updateTime:forGuidancePriority:
scheduleInQueue:
firingIsImminent
lastSystemWakeDate
isExternalPowerConnected
_nextForcedAlignmentAbsoluteTime
dateWithTimeIntervalSinceReferenceDate:
_earlyFireTime
updateFireTime:triggerOnGMTChange:
hostUniqueIdentifier
currentMachTimeInterval
unsignedIntegerValue
enumerateKeysAndObjectsUsingBlock:
_currentGuidanceTime
numberWithUnsignedInteger:
cutPowerMonitorBatteryConnectedStateDidChange:
cutPowerMonitorSystemHasPoweredOn:
initWithFireDate:serviceIdentifier:target:selector:userInfo:
initWithTimeInterval:serviceIdentifier:guidancePriority:target:selector:userInfo:
setMinimumEarlyFireProportion:
isUserVisible
fireTime
startTime
isValid
userInfo
interfaceManagerWWANInterfaceChangedPowerState:
minimumEarlyFireProportion
disableSystemWaking
_fireTime
_startTime
_guidancePriority
_minimumEarlyFireProportion
_triggerOnGMTChange
_disableSystemWaking
_userVisible
_serviceIdentifier
_target
_selector
_userInfo
_simpleTimer
currentRunLoop
_getCachedWWANKeepAliveInterval
growthAlgorithmClass
weakRefWithObject:
object
_setTimerGuidance:
cStringUsingEncoding:
_preferencesChanged
_loadPreferencesGeneratingEvent:
_initWithConnectionClass:interfaceIdentifier:guidancePriority:delegate:delegateQueue:serviceIdentifier:
initWithConnectionClass:interfaceIdentifier:guidancePriority:delegate:serviceIdentifier:
_clearTimers
currentStyle
_stringForStyle:
integerValue
_adjustInterfaceAssertions
_calloutWithEvent:context:
pollingInterval
resumeManagerWithAction:
resumeManagerWithAction:forceGrow:
_validateActionForCurrentStyle:
_resolveStateWithAction:
_currentGrowthAlgorithm
_setupTimerForPushWithKeepAliveInterval:
_saveWWANKeepAliveInterval
_setupTimerForPollForAdjustment:
_setupKeepAliveForReconnect
logKeepAliveInterval:forServiceIdentifier:
exceptionWithName:reason:userInfo:
stopManager
_isPushConnected
isBadLinkQuality
_intervalTimerFired
dateByAddingTimeInterval:
attributeFromRepresentation:error:
_takePowerAssertionWithTimeout:
_hasBudgetRemaining
_releasePowerAssertion
startManager
_delayTimerFired
arrayWithObject:
performSelector:target:argument:order:modes:
getCFRunLoop
_clearTimersReleasingPowerAssertion:
dictionaryWithObjectsAndKeys:
intValue
connectionManager:handleEvent:
connectionManager:handleEvent:context:
_stringForEvent:
numberWithInt:
_callDelegateWithEventAndContext:
_adjustPollTimerIfNecessary
linkQuality
isBadLinkQuality:
setMaxConcurrentOperationCount:
date
_keepAliveCachePath
stringByAppendingPathExtension:
initWithPath:
intervalCacheDictionaries
dataWithPropertyList:format:options:error:
writeToFile:atomically:
blockOperationWithBlock:
addOperation:
initWithContentsOfFile:
dictionary
_isCachedKeepAliveIntervalStillValid:date:
objectAtIndex:
stringByAppendingPathComponent:
logAtLevel:format:arguments:
logAtLevel:delegate:format:arguments:
initWithConnectionClass:delegate:delegateQueue:serviceIdentifier:
initWithConnectionClass:delegate:serviceIdentifier:
setDelegate:
delegate
setDuetIdentifier:
duetIdentifier
setOnlyAllowedStyle:
stopAndResetManager
isRunning
setKeepAliveGracePeriod:
setPollingIntervalOverride:
cancelPollingIntervalOverride
shouldClientScheduleReconnectDueToFailure
setEnableNonCellularConnections:
disableEarlyFire
setDisableEarlyFire:
log:
logAtLevel:format:
keepAliveGracePeriod
_connectionClass
_delegate
_duetIdentifier
_prefsStyle
_onlyAllowedStyle
_onlyAllowedStyleSet
_interfaceIdentifier
_delegateRunLoop
_delegateQueue
_wwanGrowthAlgorithm
_wifiGrowthAlgorithm
_lastScheduledGrowthAlgorithm
_intervalTimer
_reconnectWakeTimer
_delayTimer
_powerAssertionID
_onTimeKeepAliveTime
_lastResumeTime
_lastStopTime
_lastReachableTime
_lastReconnectTime
_lastScheduledIntervalTime
_timerGuidance
_keepAliveGracePeriod
_reconnectIteration
_timerGuidanceToken
_pushIsConnectedToken
_prefsChangedToken
_defaultPollingInterval
_pollingIntervalOverride
_pollingIntervalOverrideSet
_hasStarted
_isRunning
_inCallback
_isInReconnectMode
_reconnectWithKeepAliveDelay
_forceManualWhenRoaming
_enableNonCellularConnections
_isReachable
_disableEarlyFire
processInfo
processName
_fileNameForIdentifier:
_facilityForIdentifier:
logFileDirectory
_formatBlock
rangeOfString:
stringByReplacingOccurrencesOfString:withString:
initWithFormat:arguments:
initWithFormat:
_configureLogFacilityIfNeeded:
stringByAppendingString:
_appendString:toFileNamed:
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
attributesOfItemAtPath:error:
fileSize
contentsOfDirectoryAtPath:error:
stringByDeletingPathExtension
isEqualToString:
pathExtension
stringByAppendingFormat:
removeItemAtPath:error:
moveItemAtPath:toPath:error:
fileSystemRepresentation
initWithFileDescriptor:closeOnDealloc:
seekToEndOfFile
dataUsingEncoding:
writeData:
closeFile
addObject:
initialize
getMainBundleId
_printLoggingConfig
enableConsoleLoggingForLevel:
enableFileLogging:
enableLoggingForCustomHandler:
UTF8String
initWithCString:encoding:
dictionaryWithContentsOfFile:
defaultManager
hasSuffix:
regularExpressionWithPattern:options:error:
length
numberOfMatchesInString:options:range:
handleFailureInFunction:file:lineNumber:description:
initWithName:
hasPrefix:
substringFromIndex:
containsObject:
initForScheduledWake:wakeDate:acceptableDelay:userVisible:serviceIdentifier:uniqueIdentifier:
scheduleWake:wakeDate:acceptableDelay:userVisible:serviceIdentifier:uniqueIdentifier:
main
_scheduleOrCancel
_wakeDate
_acceptableDelay
_unqiueIdentifier
processNamePidAndStringIdentifier:
_processNamePrefix
canBeConvertedToEncoding:
dataUsingEncoding:allowLossyConversion:
initWithData:encoding:
substringToIndex:
rangeOfString:options:
processNameAndPidIdentifier
pidFromMatchingIdentifer:
raise:format:
_lockBlocking:
tryLock
_path
timeIntervalSince1970
arrayWithObjects:
_createLinkQualityMonitorOnIvarQueue
_createReachabilityMonitorOnIvarQueue
_unscheduleLinkQualityMonitorOnIvarQueue
_unscheduleReachabilityMonitorOnIvarQueue
insertObject:atIndex:
_flushStaleTransitionsOnIvarQueue
count
arrayWithCapacity:
isWiFiCaptive
_isInterfaceUsableOnIvarQueue
_isInterfaceHistoricallyUsableOnIvarQueue
stringForLinkQuality:
isPoorLinkQuality:
_reachabilityCallbackOnIvarQueue:
_callDelegateOnIvarQueueWithBlock:
_updateOffTransitionsForLinkQualityChangeOnIvarQueue
_processLinkQualityUpdateOnIvarQueueWithUpdatedLinkQuality:
_dynamicStoreCallbackOnIvarQueue:
_dynamicStoreCallback:
setTrackedTimeInterval:
setThresholdOffTransitionCount:
setTrackUsability:
isRadioHot
interfaceIdentifier
currentRAT
isLTEWithCDRX
wwanInterfaceName
initWithInterfaceName:interfaceIdentifier:delegateQueue:
_createReachabilityMonitor
_reachabilityCallback:
_createLinkQualityMonitor
_ivarQueue
_interfaceName
_delegateReference
_reachability
_isInternetReachable
_dynamicStore
_linkQualitySource
_lqKey
_linkQuality
_trackUsability
_thresholdOffTransitionCount
_trackedTimeInterval
_offTransitions
drain
initWithCapacity:
_addMonitorWithInterfaceName:
_forwardConfigurationOnIvarQueue
_linkQualityOnIvarQueue
initWithDelegateQueue:
_monitorDelegateQueue
_demoOverrideInterface
_previousLinkQuality
_interfaceMonitors
_setupWWANMonitor
_adjustInterfaceNameForWWANContextID:
_isInHighPowerState
_interfaceMonitor
_currentRAT
_powerlogCDRXToken
_wwanContextID
_ctServerQueue
initWithInterfaceIdentifier:
initWithKeyOptions:valueOptions:capacity:
_internal
_delegateMap
_scheduleTimer
_preventSleepFired
initWithQueue:target:selector:fireTime:
start
_setPowerMonitoringEnabled:
_setSignificantTimeChangeMonitoringEnabled:
distantFuture
setFireDate:
distantPast
isEqualToDate:
_significantTimeChange
dateWithTimeIntervalSince1970:
_getTimerRunLoop
_getTimerMode
_performBlockOnQueue:
_powerNotificationSleepIsNotImminent
_powerNotificationSleepIsImminent
_lastUpdateTime
_earlyFireDelta
_scheduledWakeDate
_preventSleepTimer
_fireTimer
_sleepIsImminent
_timeChangeSource
_timerRunLoop
_timerMode
_significantTimeChangeToken
removeObject:
_callTarget
_cleanupTimer
dateWithTimeIntervalSinceNow:
callStackSymbols
fireDate
_timerSource
_fireDate
_isValid
PCDelegateInfo
PCPersistentInterfaceManager
PCInterfaceMonitorDelegate
NSObject
PCMultiStageGrowthAlgorithm
PCGrowthAlgorithm
PCLoggingDelegate
PCPersistentTimer
CUTPowerMonitorDelegate
PCConnectionManager
PCLogging
PCSystemWakeManager
PCScheduleSystemWakeOperation
PCCancelAllProcessWakesOperation
PCPersistentIdentifiers
PCDistributedLock
NSLocking
PCInterfaceUsabilityMonitor
PCInterfaceUsabilityMonitorProtocol
PCInterfaceMonitorProtocol
PCNonCellularUsabilityMonitor
PCInterfaceUsabilityMonitorDelegate
PCWWANUsabilityMonitor
PCInterfaceMonitor
PCSimpleTimer
PCDispatchTimer
v16@0:8
@16@0:8
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
v28@0:8@16i24
v28@0:8@"PCInterfaceMonitor"16i24
v24@0:8@"PCInterfaceMonitor"16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v32@0:8@16@24
v24@0:8^v16
v24@0:8B16B20
v24@0:8:16
v28@0:8B16@20
v28@0:8^{__CFReadStream=}16B24
v24@0:8^{__CFReadStream=}16
@60@0:8B16@20@28B36q40B48@52
@56@0:8@16@24B32q36B44@48
@"NSRecursiveLock"
@"NSMapTable"
^{__CFSet=}
@"PCSimpleTimer"
@"NSString"
@"NSTimer"
v32@0:8^d16^{__CFString=}24
@40@0:8@16@24@32
@40@0:8@"NSDictionary"16@"NSString"24@"NSString"32
B24@0:8d16
v20@0:8i16
d16@0:8
v24@0:8d16
@"NSDictionary"16@0:8
v28@0:8d16i24
@20@0:8i16
@"NSDate"
v32@0:8d16Q24
v24@0:8@"CUTPowerMonitor"16
@56@0:8@16@24@32:40@48
@56@0:8d16@24@32:40@48
@64@0:8d16@24Q32@40:48@56
@68@0:8d16@24Q32@40:48@56B64
v20@0:8B16
B32@0:8d16@24
@60@0:8i16q20Q28@36@44@52
@44@0:8i16@20@28@36
@52@0:8i16q20Q28@36@44
@36@0:8i16@20@28
i16@0:8
v24@0:8i16B20
v28@0:8i16@20
v36@0:8i16@20[1{__va_list_tag=II^v^v}]28
@"<PCConnectionManagerDelegate>"
@"NSRunLoop"
@"<PCGrowthAlgorithm>"
@"PCPersistentTimer"
@24@0:8@16
B20@0:8i16
v36@0:8i16@20@28
@?16@0:8
v44@0:8i16@20@28[1{__va_list_tag=II^v^v}]36
v32@0:8d16@24
v24@0:8@?16
v56@0:8B16@20d28B36@40^v48
@56@0:8B16@20d28B36@40^v48
i24@0:8@16
B20@0:8B16
v24@0:8Q16
@"<PCInterfaceUsabilityMonitorDelegate>"16@0:8
v24@0:8@"<PCInterfaceUsabilityMonitorDelegate>"16
q16@0:8
^{__CFString=}16@0:8
@40@0:8@16q24@32
v20@0:8I16
@"CUTWeakReference"
^{__CFRunLoopSource=}
^{__CFString=}
@"NSMutableArray"
v28@0:8@"NSObject<PCInterfaceUsabilityMonitorProtocol>"16i24
v24@0:8@"NSObject<PCInterfaceUsabilityMonitorProtocol>"16
@"PCInterfaceUsabilityMonitor"
@24@0:8q16
@"<PCInterfaceUsabilityMonitorProtocol>"
@60@0:8d16@24@32:40@48B56
v28@0:8d16B24
@"PCDispatchTimer"
@48@0:8@16@24:32Q40
@"NSObject<OS_dispatch_source>"
v8@?0
%@: Interface manager: Clearing _inCallWWANOverrideTimer: %@
%@ _updateWWANInterfaceUpState wasUp %@ isUp %@ wantsInterfaceAssertion %@ avoidWWANOnCall %@
Interface manager: isWWANInHomeCountry status changed to %s
true
false
wwan is %@; wifi is %@
cutWiFiManagerDeviceAttached called: %@
Interface manager: clearing packet context %ld assertion
interfacemanager-wifiautoassoc
interfacemanager-wow
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
isPowerStateDetectionSupported
TB,R
isWWANInterfaceInProlongedHighPowerState
isInCall
isWWANInterfaceActivationPermitted
areAllNetworkInterfacesDisabled
isWWANInterfaceUp
isWWANInHomeCountry
isWWANBetterThanWiFi
doesWWANInterfaceExist
WWANInterfaceName
T@"NSString",R
isInternetReachableViaWiFi
isWakeOnWiFiSupported
isInternetReachable
currentLinkQualityString
T@"NSString",R,&,N
inInitialGrowth
Using cached keep alive interval of %g seconds inInitialGrowth? %@ from [%@]
%@: setting current interval to %g seconds
%@: useIntervalIfImprovement %f   lastKeepAliveInterval: %f  currentKeepAliveInterval: %f
%@: resetAlgorithmToInterval: %g state: %@
%@: received action %@ while in stage %@
%@: leaving the initial growth stage for refined growth
%@: leaving the steady state and trying to grow again
%@: using double the current interval for the steady state timer interval since we are significantly below the high watermark of %g seconds
%@: set the steady state expiration date to %@
%@: surpassed where the previous initial growth stopped at %g; reverting to initial growth.
%@: using a steady state timeout of %g for current interval %g
PCDefaultMinimumKeepAliveInterval
PCDefaultMaximumKeepAliveInterval
PCDefaultInitialKeepAliveInterval
PCInitialGrowthIncrement
PCRefinedGrowthIncrement
PCIncrementRandomVariance
PCBackoffMultiple
PCHighWatermarkThreshold
%@: %0.2f
%@{keep alive interval = %g, state = %@, next recalibration date = %@}
PCActionGrowPushKeepAliveInterval
PCActionShrinkPushKeepAliveInterval
PCActionMaintainPushKeepAliveInterval
PCActionResetPushKeepAliveInterval
InitialGrowth
RefinedGrowth
SteadyState
Backoff
loggingIdentifier
T@"NSString",R,N
currentKeepAliveInterval
Td,R,N
minimumKeepAliveInterval
Td,N
maximumKeepAliveInterval
countOfGrowthActions
TQ,R,N
cacheInfo
T@"NSDictionary",R,C,N
T@"NSString",R,N,V_loggingIdentifier
Td,R,N,V_currentKeepAliveInterval
Td,N,V_minimumKeepAliveInterval
Td,N,V_maximumKeepAliveInterval
TQ,R,N,V_countOfGrowthActions
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PersistentConnection_Sim/PersistentConnection-314/PCPersistentTimer.m
<Unknown File>
%@ target and selector are required
%@ run loop mode cannot be nil
Cannot schedule invalidated %@
%@ created %@
Cannot schedule on NULL queue %@
Invalidating timer %@
%@ calculating _earlyFireDate. powerStateDetectionSupported = %@ = (detectionSupported(%@) && (wwanIsUp(%@) || ! internetReachable(%@)))
Last system wake date (%@) was longer than half of the timer duration, so setting minimum fire date to fire date.
%@ Device is plugged in, overriding earlyFireProportion to be 1.0
%@ device is not plugged in.
Forcing timer alignment to fire date [%@]
%@ Calculated minimum fire date [%@] (%g%%) with fire date [%@], start date [%@], minimum early fire proportion %g, power state detection supported: %s, in high power state: %s
PersistentTimer %@ has fired
PCPersistentTimer-sharedBackgroundUpdateQueue
%@{fireDate = %@, early fire proportion = %g, disable system waking = %s, target = %@, selector = %@}
v32@?0@"NSNumber"8@"NSNumber"16^B24
PCPersistentTimer - updating timer guidance to %@
PCPersistentTimerGuidanceNotification
minimumEarlyFireProportion
Td,N,V_minimumEarlyFireProportion
disableSystemWaking
TB,N,V_disableSystemWaking
userVisible
TB,N,GisUserVisible
fireTime
startTime
T@"NSString",R,N,V_serviceIdentifier
keepAliveInterval
cacheDate
PCIntervalCacheChangedNotification
PCTimerFireEarlyToCoalesce
PCEvent
PCEventContext
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PersistentConnection_Sim/PersistentConnection-314/PCConnectionManager.m
delegate must not be nil
serviceIdentifer must not be nil
Creating PCManager %@ with identifier %@ and interfaceIdentifier %ld
PCPushIsConnectedToken
WWAN growth algorithm
WiFi growth algorithm
PCConnectionManager-noteQueue
v12@?0i8
%@ Changing duetIdentifier from %@ to %@
%@ Loading forceManualWhenRoaming: accountSetting %@  globalSetting %@
Loaded preferences. Style is %@ and default poll interval is %g minutes.
Forcing manual when roaming.
%@ set. Setting maximum keep alive interval to %g seconds for demo mode.
PCForcedMinimumHBI
Carrier bundle override for minimum HBI set. Setting minimum keep alive interval to %g seconds.
%@ set. Setting minimum keep alive interval to %g seconds for demo mode.
Resuming push keep alive timer in normal mode with action %@
Last timer interruption was %s: [%@]. Expected fire time was [%@].
early
on time
%@: lastKeepAliveWasEarly - Examining sameAlgorithm %@ timeKeepAliveWasScheduled %f, onTimeKeepAliveTime: %f, lastStopTime %f
%@: This grow action is early but we're past the interval our previous growth was based on. Regrowing based on this interval %f.
%@ Last keep alive was early {forceGrow: %s, action: %@}
Resuming poll keep alive timer in normal mode with action %@
Resuming manual keep alive timer in normal mode with action %@
Resuming keep alive in reconnect mode with action %@
Choosing not to resume keep alive in reconnect mode since all interfaces are disabled. Action %@
Invalid action type: %i
Action %@ not appropriate for push style.
Action %@ not appropriate for %@. PrefsStyle=%@. _forceManualWhenRoaming = %@  onlyAllowedStyleSet=%@ onlyAllowedStyle=%@
PCConnectionManager was stopped by client
%@ returning an adjusted keepAliveInterval to avoid signaling: %f
Setting minimum keep alive interval to %g
Setting maximum keep alive interval to %g
Setting keep alive grace period to %g
Push is connected? %@  networkIsHistoricallyUsable? %@  isBadLQ? %@ -- choosing pollInterval = MAX(%g, %g)
Setting polling interval override to %g
Cacnceling polling interval override
Advising client to not enter reconnect mode since the network just became reachable at %@
Advising client to enter reconnect mode in response to a connection failure since currently in reconnect mode
Advising client to %s in response to a connection failure after elapsed time from start %g seconds
enter reconnect mode
issue a shrink
%@: enableNonCellularConnections changed to %@
timers already exist
%@ - early fire has been manually disabled for this timer!
Trying to push no persistent interface exists and the poll interval is 'manual', so disabling waking to conserve power
%@ _adjustPollTimerIfNecessary  rightStyle %@  isRunning %@  isInReconnectMode %@   intervalTimer %@  firingIsImminent %@ - should Adjust? %@
%@ scheduling next poll - isAdjustment %@. PushDate %@ is not valid - timeIntervalSinceNow %f. Last scheduled fire date %@. TimeDiff = %f, pollingInterval %f
%@ using nextPollInterval = %f.
%@ scheduling the next poll to align with the next push keepAlive date (%@). isAdjustment %@  isLastTimeIntervalValid? %@, lastResumeTime %@ (%f), lastScheduledIntervalTime (%@) %f, timeDiff %f. Should fire immediately? %@
%@ nextPollDate timeIntervalSinceNow %f  pollingInterval %f  earliestAllowableFire %@
%@ nextPollDate whittled down by a polling interval to %@, %f
All network interfaces are disabled, so not scheduling any wakes in polling mode
All network interfaces are disabled, so not scheduling any wakes in reconnect mode
Experienced recent dropped connection. Using 30 minute wake interval
Network interfaces reporting BAD LQM. Altering timer interval to 5 minutes
Creating reconnect timers for iteration %i with keep alive interval %.4g and wake interval %.4g
%@ _intervalTimer = %@
%@ _reconnectWakeTimer = %@
CDSession
CoreDuet
%@ got error %@ from duet when trying to reanimate attribute %@.
%@ got error %@ from duet when performing admission check.
delay timer already exists
%@ (%@) does not have budget to perform callout, bailing and starting next timer interval.
Timer fired. Delay is 0 so scheduling notification immediately. isWWANInterfaceUp %@, isWoWSupported %@
Timer fired. Delaying notification %g seconds. Last system wake: %@
Returned from callout
Calling out with reason %@ to delegate %@
Persistent interface link quality changed, firing interval timer: %@
Persistent interface went up while in reconnect mode. Firing reconnect timer.
%@ interfaceManagerInternetReachabilityChanged: %@ isRunning %@ delayTimer %@ wasReachable %@ isReachable %@ currentStyleIsPush? %@
Network went reachable while in reconnect mode. Firing reconnect timer.
lock
Unable to write cache dictionary: %@
com.apple.persistentconnection.intervalcache.plist
push
poll
manual
PCActionSchedulePoll
PCActionScheduleConnectionRetry
PCActionScheduleConnectionRetryWithKeepAliveDelay
unknown action
PCEventPushKeepAlive
PCEventPoll
PCEventRetryConnection
PCEventPersistentInterfaceWentUp
PCEventPersistentInterfaceWentDown
PCEventConnectionStyleChanged
unknown event
delegate
T@"<PCConnectionManagerDelegate>",N
duetIdentifier
T@"NSString",C,N
isRunning
TB,R,N
disableEarlyFire
TB,N
keepAliveGracePeriod
Td,N,V_keepAliveGracePeriod
pollingInterval
com.apple.carrier
%@-timers
__PC_%@
PCLoggingQueue
PersistentConnection logging config: logToFile %@  logToFileOverridden %@  logToConsoleLevel %d  logToConsoleLevelOverridden %@  customHandlers %@
^{__CFString=}76@?0i8^{__CFDate=}12^{__CFString=}20^{__CFString=}28r*36r*44Q52^v60^{__CFString=}68
%@ %@[%i] %@: %@
%@ %@[%i]: %@
"%@", %@, %i
.csv
InternalBuild
Logs/PersistentConnection
Logs/CrashReporter/PersistentConnection
Library
Unable to write logging to file '%@': %@
Unable to open logging file '%@': %s
PCLoggingSettingsDidChangeNotification
systemgroup.com.apple.sharedpclogging
/Library/Managed Preferences/mobile/%@.plist
PCWriteLogs
PCLogLevel
com.apple.apsd
PCLogging cleanup - Error reading %@: %@
-latest.log
-APSClient.log
-APSClient\.log\.[0-9]+(\.zip)?$
_\d{4}_\d{2}_\d{2}_\d{2}_\d{2}_\d{2}.\d{4}\.log(\.gz)?$
PCLogging cleanup - Removing %@
Error removing %@: %@
CPLoggingIsFacilityDefined
/System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
void loadSymbols()_block_invoke
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PersistentConnection_Sim/PersistentConnection-314/PCLogging.m
Failed to load symbol CPLoggingIsFacilityDefined
CPLoggingAddCustomLogFile
Failed to load symbol CPLoggingAddCustomLogFile
_CPLog
Failed to load symbol _CPLog
kCPLoggingCustomLogNameKey
Failed to load symbol kCPLoggingCustomLogNameKey
kCPLoggingCustomLogDirectoryKey
Failed to load symbol kCPLoggingCustomLogDirectoryKey
kCPLoggingCustomCreateLogFormatBlock
Failed to load symbol kCPLoggingCustomCreateLogFormatBlock
kCPLoggingCustomMaxLogFileSizeKey
Failed to load symbol kCPLoggingCustomMaxLogFileSizeKey
kCPLoggingCustomMaxLogFileCountKey
Failed to load symbol kCPLoggingCustomMaxLogFileCountKey
kCPLoggingCustomWantsCompressedFilesKey
Failed to load symbol kCPLoggingCustomWantsCompressedFilesKey
kCPLoggingCustomMaxLogFileLevelKey
Failed to load symbol kCPLoggingCustomMaxLogFileLevelKey
mobile
PCPreferencesDidChangeNotification
PCPreferencesDidChangeNotificationInternal
MobileMeOTASyncAccount
com.apple.persistentconnection
PCEnablePush
PCDefaultPollInterval
PCForceDemoMaxHBI
PCWiFiInterface
PCForceMinHBI
PCConnectionStyle _PCSettingsGetStyle(PCConnectionClassType, CFStringRef)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PersistentConnection_Sim/PersistentConnection-314/PCSettings.m
%s requires a non-NULL serviceIdentifier
PC-Prefs-Queue
com.apple.persistentconnection-nosettings
com.apple.persistentconnection-mcc
com.apple.persistentconnection.settings.lock
PCStyle
PCServiceIdentifier-
PCForceManualWhenRoaming
Request to schedule wake %d date %@ leeway %g service identifier %@ unique identifier %@
kern.boottime
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PersistentConnection_Sim/PersistentConnection-314/PCPersistentIdentifiers.m
sysctlbyname() for "kern.boottime" failed: %s
com.apple.persistentconnection[%@,
%i,%@]
.%@.lock
%@ at path '%@' is being deallocated while locked
%@ at path '%@' is already locked
Unable to take %@ at path '%@': %s
%@ at path '%@' is not locked
(null)
%Y-%m-%d %X %z
(localtime_r failed)
PCSharedSerialQueue
PCDYLDLoaderQueue
void *_PCDLHandleForLibrary(NSString *)_block_invoke_2
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PersistentConnection_Sim/PersistentConnection-314/PCUtilities.m
Unable to open framework '%@'
framework
dylib
/System/Library/Frameworks
/System/Library/PrivateFrameworks
/usr/lib
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PersistentConnection_Sim/PersistentConnection-314/PCInterfaceUsabilityMonitor.m
Must specify an interface identifier for PCInterfaceUsabilityMonitor
PCInterfaceUsabilityMonitor-ivarqueue
%@: _flushStaleTransitionsOnIvarQueue: old: %@ new: %@
%@ [%@](%@): isInterfaceUsable? %@ reachable %@ linkQuality %d isNetworkCaptive? %@
%@ [%@](%@): isInterfaceHistoricallyUsable? %@ trackUsability %@ offTransitions %@
%@ - _unscheduleReachaiblityMonitorOnIvarQueue
%@ _createReachabilityMonitorOnIvarQueue
PCReachabilityQueue
%@ _reachabilityCallback %u
%@ InterfaceUsabilityMonitor [%@]: internet reachability changed to %s, via WWAN only %s (flags: %u)
v16@?0@"<PCInterfaceUsabilityMonitorDelegate>"8
%@ - _unscheduleLinkQualityMonitorOnIvarQueue
unknown
poor
good
%@ Interface Manager: %@(%@) LinkQuality changed from %@ to %@ (%d)
%@ _dynamicStoreCallbackOnIvarQueue - processing changedKey %@ linkQualityInfo %@. My own key %@.
%@ _dynamicStoreCallback with changedKeys %@
Cannot create link quality monitor with nil interfaceName %ld!
%@ _createLinkQualityMonitorOnIvarQueue
Interface manager: SCDynamicStoreCreate failed
Interface manager: SCDynamicStoreCreateRunLoopSource failed
%@ Interface manager: creating monitor for interface: %@ LinkQuality key: %@
interfaceIdentifier
Tq,R,N
linkQuality
Ti,R,N
isInterfaceUsable
isInterfaceHistoricallyUsable
linkQualityString
isPoorLinkQuality
isBadLinkQuality
isRadioHot
currentRAT
T^{__CFString=},R,N
isLTEWithCDRX
wwanInterfaceName
T@"<PCInterfaceUsabilityMonitorDelegate>",N
NonCellular
WWAN
PCNonCellularUsabilityMonitor-ivarqueue
PCNonCellularUsabilityMonitor-monitordelegatequeue
%@ NonCellularUsabilityMonitor is in demo override mode! Using interface name %@
%@ NonCellularUsabilityMonitor - LQ changed from %d to %d
PCWWANUsabilityMonitor-ivarqueue
PCWWANUsabilityMonitor-monitordelegatequeue
com.apple.powerlog.BasebandHasCDRXCapability
kPCWWANPowerlogCDRXNotification - state = %llu
%@ _adjustInterfaceNameForWWANContextID contextID %ld  interfaceName %@
T^{__CFString=},R,N,V_currentRAT
PCInterfaceMonitor-NonCellular
PCInterfaceMonitor-WWAN
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PersistentConnection_Sim/PersistentConnection-314/PCSimpleTimer.m
%@ updateFireTime from %@ + %g to %@ + %g, trigger from %@ to %@
Cannot schedule on runloop when already scheduled on queue %@
Cannot schedule on queue when already scheduled on runloop %@
Started simple timer %@ with fire date [%@]
PCSimpleTimer-timerQ
%@ created preventSleepTimer %@ and fireTimer %@ on queue %@
Invalidating simple timer %@
Not canceling system wake for [%@], which is in the past
Canceling system wake for simpletimer [%@]
Suspended timer for imminent system sleep
Firing simple timer that was scheduled to fire at [%@] since time has moved backwards by at least %g seconds
%@ Existing wake at %@ re-scheduling to %@ with leeway of %g
%@ Canceling system wake for simpletimer [%@]
SimpleTimer %@ has fired
PCSimpleTimer-SignificantTimeChangeQueue
SignificantTimeChangeNotification
%@{fireDate = %@, disable system waking = %s, target = %@, selector = %@}
kern.waketime
PCSimpleTimer - enabling power monitoring
PCSimpleTimer-IOPowerManagement
Enabling power monitoring for %@ - %lu timers
PCSimpleTimer-powermonitoringq
System is waking: kIOMessageSystemWillPowerOn
System will not sleep: kIOMessageSystemWillNotSleep
System woke: kIOMessageSystemHasPoweredOn
System can sleep query received: kIOMessageCanSystemSleep
System will sleep: kIOMessageSystemWillSleep
Disabling power monitoring for %@ - %lu timers
PCSimpleTimer - no timers left, disabling power monitoring
%@ initialized with target %@ selector %s timerSource %@
%@ in call back event handler
%@ dealloced
%@ performing call back
%@ performed call back on target %@ selector %s
%@ start with target %@ selector %s firetime %llu timerSource %@
%@ setFireDate %@ and start with target %@ selector %s fireTime %llu deltaNanosec %@ timerSource %@
%@ tried to setFireDate %@ but the timer is not valid
%@ is invalidated 
Callstack %@
isValid
fireDate
T@"NSDate",&,N
