ffffff
?333333
@(#)PROGRAM:ControlCenterUIKit  PROJECT:ControlCenter-1
_buttonWithSelectedColor:text:type:
alloc
initWithFrame:selectedColor:text:type:
sizeToFit
setClipsToBounds:
initWithFrame:
copy
_isCircleButton
_isRectButton
_isCapsuleButton
bounds
setAutoresizingMask:
setUserInteractionEnabled:
insertSubview:atIndex:
_isTextButton
init
setText:
whiteColor
setTextColor:
addSubview:
setAlpha:
_updateEffects
_updateBackgroundForStateChange
setAdjustsImageWhenDisabled:
setAdjustsImageWhenHighlighted:
_pressAction
addTarget:action:forControlEvents:
defaultCenter
_updateForReduceTransparencyChange
addObserver:selector:name:object:
_updateForDarkerSystemColorsChange:
removeObserver:name:object:
setDelegate:
dealloc
_shouldAnimatePropertyWithKey:
isEqualToString:
naturalHeight
_calculateRectForGlyph:rectForLabel:ignoringBounds:
_currentState
_glyphImageForState:
invalidateIntrinsicContentSize
delegate
isInternal
size
contentRectForBounds:
imageEdgeInsets
sizeThatFits:
userInterfaceLayoutDirection
_updateNaturalHeight
ccuiAccessibilityDarkColorVariant
intrinsicContentSize
frame
setFrame:
_updateGlyphAndTextForStateChange
setBounds:
ccuiPunchOutMaskedContainer
setNeedsLayout
font
setFont:
numberOfLines
setNumberOfLines:
text
_removeAllAnimations:
_updateForStateChange
selectedGlyphImage
glyphImage
setNaturalHeight:
_drawingAsSelected
isShowingMenu
isSelected
isHighlighted
isEnabled
effectWithControlState:inContext:
setImage:
layer
setFilters:
effectConfig
contentConfig
configureLayerView:
_effectiveSelectedColor
CGColor
setContentsMultiplyColor:
contentsMultiplyColor
performWithoutAnimation:
addAlongsideAnimations:completion:
cornerRadius
_setCornerRadius:
_setContinuousCornerRadius:
roundCorners
setMaskedCorners:
colorWithRed:green:blue:alpha:
setBackgroundColor:
button:didChangeState:
respondsToSelector:
animatesStateChanges
animateWithDuration:animations:
stringWithFormat:
systemAppPersistenteCache
ccuiAlphaOnlyImageForMaskImage
imageForKey:generatingIfNecessaryWithBlock:
flipsForRightToLeftLayoutDirection
imageFlippedForRightToLeftLayoutDirection
setGlyphImage:
setSelectedGlyphImage:
buttonTapped:
setEnabled:
didMoveToSuperview
convertRect:fromView:
initWithFrame:style:radius:roundedCorners:
setAllowsGroupBlending:
superview
sendSubviewToBack:
smallCircularButtonWithSelectedColor:
circularButtonWithSelectedColor:
roundRectButton
roundRectButtonWithText:
roundRectButtonWithText:selectedGlyphColor:
capsuleButtonWithText:
_controlStateStringFromState:
_setButtonType:
_isRectTextButton
layoutSubviews
setRoundCorners:
setShowingMenu:
setImage:forState:
setBackgroundImage:forState:
setGlyphImage:selectedGlyphImage:name:
ccuiPunchOutMaskForView:
.cxx_destruct
setAnimatesStateChanges:
_buttonType
_selectedColor
_glyphImageView
_label
_alteredStateGlyphImageView
_alteredStateLabel
_backgroundFlatColorView
_animatesStateChanges
_showingMenu
_delegate
_roundCorners
_glyphImage
_selectedGlyphImage
_naturalHeight
currentDevice
userInterfaceIdiom
mainScreen
_referenceBounds
builder
appendRect:
appendInteger:
appendCGFloat:
hash
class
builderWithObject:ofExpectedClass:
appendCGRect:counterpart:
style
appendInteger:counterpart:
appendCGFloat:counterpart:
roundedCorners
isEqual
description
textualRepresentation
isEqual:
_style
_cornerRadius
_roundedCorners
_frame
setOpaque:
clearColor
systemFontOfSize:weight:
setHighlighted:
setStyle:
scale
imageNamed:inBundle:
resizableImageWithCapInsets:
_trackImage
capInsets
_setTrackImage:
_knobImage
setThumbImage:forState:
locationInView:
trackRectForBounds:
value
thumbRectForBounds:trackRect:value:
beginTrackingWithTouch:withEvent:
setAdjusting:
endTrackingWithTouch:withEvent:
cancelTrackingWithEvent:
setMinimumTrackImage:forState:
setMaximumTrackImage:forState:
setMinimumValueImage:cacheKey:
length
ccuiSuitableCacheKeyForBitmapData
setMinimumValueImage:
setMaximumValueImage:cacheKey:
setMaximumValueImage:
minimumValueImage
leftValueImageOriginForBounds:andSize:
rightValueImageOriginForBounds:andSize:
maximumValueImage
window
screen
_edgeInsetsForSliderKnob
minimumValueImageRectForBounds:
maximumValueImageRectForBounds:
bringSubviewToFront:
_configureHighlightedValueImagesLikeRegularValueImages
_minTrackView
_maxTrackView
_minValueView
_maxValueView
_resizableTrackImage
ccuiSupportsDelayedTouchesByContainingScrollViewForGesture:
isAdjusting
_minValueHighlightedImageView
_maxValueHighlightedImageView
_adjusting
_glyphOrTextOnPlatterOrBackgroundEffect
vibrantStylingWithStyle:
visualEffect
_primaryHighlightedTextOnPlatterEffect
_grayEffect
_primaryRegularTextOnPlatterEffect
_secondaryHighlightedTextOnPlatterEffect
_secondaryRegularTextOnPlatterEffect
_blackEffect
_whiteEffect
initWithPrivateStyle:
blackColor
grayColor
layerWithTintColor:filterType:
numberWithBool:
dictionaryWithObjects:forKeys:count:
layerWithVibrantColor:tintColor:filterType:filterAttributes:
configWithContentConfig:
effectWithStyle:
copyWithZone:
materialViewWithStyleOptions:
setGroupName:
isUILocked
getFGSceneIdentifiers
count
materialBackgroundView
setColorInfusionView:
prototypeSettings
platterWallpaperAlpha
_setColorInfusionViewAlpha:
registerSystemAgent:
baseMaterialBlurView
bundleForClass:
defaultFormat
_setWantsAlphaMask:
initWithSize:format:
drawInRect:
imageWithActions:
CGImage
ccuiSHA1Hash
bytes
string
appendFormat:
systemRedColor
systemDarkRedColor
systemGreenColor
systemDarkGreenColor
systemBlueColor
systemDarkBlueColor
systemOrangeColor
systemDarkOrangeColor
systemTealColor
systemDarkTealColor
systemPinkColor
systemDarkPinkColor
getHue:saturation:brightness:alpha:
initWithHue:saturation:brightness:alpha:
compositingFilter
.Normal
.Highlighted
.Disabled
%s NOT ALLOWED.
-[CCUIControlCenterButton setImage:forState:]
-[CCUIControlCenterButton setBackgroundImage:forState:]
v8@?0
v12@?0B8
CCUIAlphaOnlyGlyph-%@-%f-%f
CCUISelectedAlphaOnlyGlyph-%@-%f-%f
@"UIImage"16@?0^Q8
glyphImage
T@"UIImage",&,N,V_glyphImage
selectedGlyphImage
T@"UIImage",&,N,V_selectedGlyphImage
naturalHeight
Td,N,V_naturalHeight
delegate
T@"<CCUIControlCenterButtonDelegate>",W,N,V_delegate
animatesStateChanges
TB,N,V_animatesStateChanges
internal
TB,R,N,GisInternal
roundCorners
TQ,N,V_roundCorners
showingMenu
TB,N,GisShowingMenu,V_showingMenu
font
T@"UIFont",&,D,N
numberOfLines
Tq,D,N
text
T@"NSString",&,D,N
{CGRect={CGPoint=dd}{CGSize=dd}}8@?0
q8@?0
d8@?0
%@-%@
%.2fx%.2f@%.2fx%.2f-%.2f-%ld-%lu
frame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_frame
style
Tq,R,N,V_style
cornerRadius
Td,R,N,V_cornerRadius
roundedCorners
TQ,R,N,V_roundedCorners
TQ,N,V_style
ControlCenterSliderTrack
ControlCenterSliderThumb
adjusting
TB,N,GisAdjusting,V_adjusting
CCUIControlCenterBaseMaterialBlur
inputReversed
v16@?0@"UIGraphicsImageRendererContext"8
%02x
CCUIControlCenterButton
CCUIPunchOutMask
ControlCenterPunchOutMasking
CCUIControlCenterLabel
CCUIControlCenterSlider
ControlCenterTouchCanceling
CCUIControlCenterVisualEffect
CCUIControlCenterMaterialView
ControlCenterAdditions
@24@0:8@16
@16@0:8
@32@0:8@16@24
@40@0:8@16@24Q32
@72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56Q64
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v16@0:8
B24@0:8@16
@24@0:8q16
{CGSize=dd}16@0:8
v24@0:8d16
B16@0:8
v36@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGRect={CGPoint=dd}{CGSize=dd}}24B32
v24@0:8Q16
{CGSize=dd}32@0:8{CGSize=dd}16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8@16
q16@0:8
v24@0:8q16
v20@0:8B16
v32@0:8@16Q24
v40@0:8@16@24@32
d16@0:8
Q16@0:8
@"UIColor"
@"UIImageView"
@"UILabel"
@"UIView"
@"<CCUIControlCenterButtonDelegate>"
@"UIImage"
@72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48d56Q64
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
{UIEdgeInsets=dddd}16@0:8
B32@0:8@16@24
v32@0:8@16@24
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
d64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGSize=dd}48
{CGRect={CGPoint=dd}{CGSize=dd}}84@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48f80
@32@0:8Q16q24
@24@0:8^{_NSZone=}16
