dictionary
setObject:forKey:
identifier
UUIDString
_itemClassKeychainAttributes
vehicleName
certificateSerialNumber
pairingStatus
dataWithBytes:length:
_identifyingKeychainAttributesForVehicle:
_addKeychainAttributesForVehicle:toDictionary:
_allKeychainAttributesForVehicle:
mutableCopy
class
_keychainAttributesMatchingQuery:
_updateKeychainAttributesForVehicle:
_creationKeychainAttributesForVehicle:
bluetoothAddress
carplayWiFiUUID
accessoryProtocols
allObjects
objectForKey:
setVehicleName:
setBluetoothAddress:
setCarplayWiFiUUID:
setWithArray:
setAccessoryProtocols:
_preferencesAttributesForVehicle:
_allPreferencesPairings
removeObjectForKey:
defaultCenter
postNotificationName:object:
init
handleAvailabilityDidChange:
addObserver:selector:name:object:
removeObserver:
dealloc
saveVehicle:withMergePolicy:
isVehicleStoreAvailable
allStoredVehicles
countByEnumeratingWithState:objects:count:
isEqualToData:
mergeAttributesFromVehicle:
_addPreferencesPairingForVehicle:
_addKeychainPairingForVehicle:
postPairingsDidChangeNotification
_removePreferencesPairingForVehicle:
_removeKeychainPairingForVehicle:
_keychainItemAttributesForAllVehicles
length
isEqualToString:
indexOfObjectPassingTest:
objectAtIndexedSubscript:
getBytes:length:
removeObject:
alloc
initWithUUIDString:
initWithIdentifier:certificateSerial:
setPairingStatus:
_applyPreferencesAttributes:toVehicle:
addObject:
enumerateKeysAndObjectsUsingBlock:
count
saveVehicle:
removeVehicle:
_updateUnlockedSinceBoot
registerForAvailabilityEvent
handleAvailabilityEvent
notifydEventName
valueForEntitlement:
boolValue
processIdentifier
fetchAppBlacklistWithReply:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
setExportedInterface:
setExportedObject:
resume
initWithAssetType:
setQueriesLocalAssetInformationOnly:
runQueryAndReturnError:
state
predicateWithBlock:
filteredArrayUsingPredicate:
attributes
compare:
sortedArrayUsingComparator:
firstObject
localURL
URLByAppendingPathComponent:
arrayWithContentsOfURL:
isKindOfClass:
errorWithDomain:code:userInfo:
beginDownloadWithOptions:
listener:shouldAcceptNewConnection:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
handleAssetUpdatedNotification
setAccessoryManager:
accessoryManager
setVehicleAccessoryDelegate:
setVehicleStore:
setPreferencesManager:
preferencesManager
setPreferencesDelegate:
setBluetoothManager:
setWifiManager:
array
setOutstandingApprovalAlerts:
setOutstandingPairingAlerts:
setOutstandingEnableWiFiAlerts:
setAssertionManager:
handleVehicleStoreAvailabiltyDidChange:
saveVehicle:reply:
removeVehicle:reply:
fetchAllVehiclesWithReply:
hasVehiclesWithReply:
handleDidConnectBluetoothAddress:reply:
handleDidDisconnectBluetoothAddress:reply:
isBluetoothInCarWithReply:
saveWiFiCredentialsForAccessoryConnectionIdentifier:credentials:reply:
allowsConnectionsForWiFiUUID:reply:
allowsConnectionsForCertificateSerial:reply:
isPairedWithCertificateSerial:reply:
handleCarPlayRestrictionChangedWithReply:
isCarPlayAllowedWithReply:
vehicleStore
wifiManager
removeNetworkCredentialsForCarPlayUUID:
bluetoothManager
unpairWithBluetoothAddress:
_isRestricted:
vehicleForBluetoothAddress:
_isVehicleActionable:
hasCredentialsForCarPlayUUID:
postInCarNotificationForVehicle:
power
_presentReconnectionEnableWiFiAlertForVehicle:
_dismissReconnectionEnableWiFiAlertForVehicle:
pairedVehiclesConnectedOnBluetooth
anyObject
vehicleAccessoryForiAPConnectionIdentifier:
objectsPassingTest:
UUID
saveNetworkCredentials:forCarPlayUUID:
isBluetoothConnected
containsObject:
isPaired
_handleCarPlayAllowedDidChange
isCarPlayAllowed
setWithObject:
handleCarPlayAttachedAccessories:
updateVehicle:usingAccessory:
enumerateVehiclesForAccessories:usingBlock:
_dismissApprovalAlertForVehicleAccessory:
_dismissPairingAlertForVehicleAccessory:
cachedCarPlayAllowedChangeValue
numberWithBool:
setCachedCarPlayAllowedChangeValue:
handleCarPlayAttached
_dismissApprovalAlerts
_dismissPairingAlerts
monitoringService
handleUpdatedVehicle:enabled:completion:
requestWiFiCredentialsIfNecessaryForVehicles:
dictionaryWithObjects:forKeys:count:
setInCar:carPlayUUID:
setWithCapacity:
_certificateSerialNumbersWithKnownPairing
connectedVehicleAccessories
updateIncompletePairingsMatchingAccessories:
sendDeviceIdentifierForVehicleAccesory:pairingStatus:
_unknownPairingAccessoriesFromAccessories:
_presentApprovalAlertForVehicleAccessory:
setCertificateSerialNumber:
vehicleMatchingAccessory:inVehicles:
isEqualToSet:
connectedBluetoothAddresses
supportsWirelessCarPlay
requestWiFiCredentials
connectWithBluetoothAddress:
sendDeviceTransportIdentifiers
initWithVehicleAccessory:
supportsUSBCarPlay
supportsWiredBluetoothPairing
_presentWiredBluetoothPairingAlertForVehicleAccessory:vehicle:
outstandingApprovalAlerts
vehicleAccessory
vehicleForVehicleAccessory:
presentAlertWithCompletion:
dismissAlert
outstandingPairingAlerts
_beginWiredPairingWithVehicleAccessory:vehicle:
addressStringForData:
beginWiredBluetoothPairing:
initWithVehicle:
outstandingEnableWiFiAlerts
setPower:
vehicle
accessoryManager:didConnectVehicleAccessory:
accessoryManager:didUpdateVehicleAccessory:
accessoryManager:didDisconnectVehicleAccessory:
handleCarPlayAllowedDidChange
postOutOfCarNotificationForVehicle:
_dismissReconnectionEnableWiFiAlerts
.cxx_destruct
setMonitoringService:
assertionManager
_monitoringService
_accessoryManager
_vehicleStore
_preferencesManager
_bluetoothManager
_wifiManager
_assertionManager
_outstandingApprovalAlerts
_outstandingPairingAlerts
_outstandingEnableWiFiAlerts
_cachedCarPlayAllowedChangeValue
setObject:forKeyedSubscript:
alertTitle
alertMessage
alertAcceptButtonTitle
alertDeclineButtonTitle
lockscreenMessage
bundlePath
stringByAppendingPathComponent:
alertAcceptedAnalyticsKey
alertDeclinedAnalyticsKey
_alertContents
_setAlert:
requiresUnlockedDevice
_isDeviceUnlocked
_recordAnalyticsForResponse:
_alert
setVehicleAccessory:
_vehicleAccessory
stringWithFormat:
shouldEnableWiFi
setShouldEnableWiFi:
_shouldEnableWiFi
shouldEnableBluetooth
sharedInstance
powered
setShouldEnableBluetooth:
setPowered:
_shouldEnableBluetooth
setVehicle:
_vehicle
setConnections:
setConnectionsQueue:
startMonitoringCertificateSerial:reply:
stopMonitoringCertificateSerial:reply:
willEnableCertificateSerial:reply:
willDisableCertificateSerial:reply:
setRemoteObjectInterface:
connectionsQueue
userInfoDictionaryForConnection:
decrementTransactionCountForUserInfo:
integerValue
endTransaction
connections
setInterruptionHandler:
setInvalidationHandler:
userInfo
setUserInfo:
numberWithInteger:
currentConnection
incrementTransactionCountForUserInfo:
beginTransaction
copy
connection:isMonitoringSerial:
remoteObjectProxyWithErrorHandler:
_connections
_connectionsQueue
handleInCarNotification
setState:
observeAirplayScreen
updateState
stopEvaluationTimer
unobserveAirplayScreen
setProcessTransaction:
evaluationTimer
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setEvaluationTimer:
invalidate
closeProcessTransaction
startEvaluationTimer
openProcessTransaction
transitionToConnecting
currentCarPlayExternalDevice
transportType
transitionToConnected
transitionToIdle
displays
name
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
airplayScreenChanged
observeValueForKeyPath:ofObject:change:context:
processTransaction
_state
_evaluationTimer
_processTransaction
initWithMachServiceName:
setDelegate:
stringWithUTF8String:
mainRunLoop
connectedDevices
address
connectingDevices
pairedDevices
_deviceForBluetoothAddress:
setDevicePairingEnabled:
unpair
connect
_power
com.apple.carplay.pairings
carplay-pairing
name
bluetoothAddress
carplayWiFiUUID
carPlayProtocols
pairings
B32@?0@"NSDictionary"8Q16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
v8@?0
CRVehicleStoreAvailabilityDidChangeNotification
com.apple.MobileAsset.CarPlayAppBlacklist
CarPlayAppBlacklist.plist
com.apple.private.carkit.app
com.apple.carkit.app.blacklist-changed
B24@?0@"ASAsset"8@"NSDictionary"16
q24@?0@"ASAsset"8@"ASAsset"16
com.apple.carkit.app
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
com.apple.private.carkit
v24@?0@"NSSet"8@"NSError"16
com.apple.carkit
B24@?0@"CRVehicle"8^B16
v24@?0@"CRVehicle"8@"CRVehicleAccessory"16
com.apple.carplay.allowed-changed
CARPLAY_UUID
com.apple.carplay.in-car
com.apple.carplay.out-of-car
B24@?0@"CRVehicleAccessory"8^B16
@"CRVehicle"24@?0@"CRVehicle"8@"CRVehicle"16
v16@?0Q8
v20@?0B8@"NSData"12
accessoryManager
T@"CRVehicleAccessoryManager",&,N,V_accessoryManager
vehicleStore
T@"CRVehicleStore",&,N,V_vehicleStore
preferencesManager
T@"CRCarPlayPreferences",&,N,V_preferencesManager
bluetoothManager
T@"CRBluetoothManager",&,N,V_bluetoothManager
wifiManager
T@"CRWiFiCarManager",&,N,V_wifiManager
assertionManager
T@"CRWirelessSessionAssertionManager",&,N,V_assertionManager
outstandingApprovalAlerts
T@"NSMutableArray",&,N,V_outstandingApprovalAlerts
outstandingPairingAlerts
T@"NSMutableArray",&,N,V_outstandingPairingAlerts
outstandingEnableWiFiAlerts
T@"NSMutableArray",&,N,V_outstandingEnableWiFiAlerts
cachedCarPlayAllowedChangeValue
T@"NSNumber",N,V_cachedCarPlayAllowedChangeValue
monitoringService
T@"CRCarKitMonitoringServiceAgent",W,N,V_monitoringService
CARPLAY_LOCKSCREEN_TITLE
CarPlayNotificationIcon.png
CARPLAY_LOCKSCREEN_MESSAGE_IPHONE
vehicleAccessory
T@"CRVehicleAccessory",&,N,V_vehicleAccessory
REMEMBER_CARPLAY_ALERT_TITLE
REMEMBER_CARPLAY_ALERT_TITLE_GENERIC
REMEMBER_CARPLAY_ALERT_MESSAGE_IPHONE
REMEMBER_CARPLAY_ALERT_ACCEPT
REMEMBER_CARPLAY_ALERT_CANCEL
USE_CARPLAY_ALERT_TITLE
USE_CARPLAY_ALERT_TITLE_GENERIC
USE_CARPLAY_ALERT_MESSAGE_WIRELESS_IPHONE
USE_CARPLAY_ALERT_ACCEPT_WIFI_ON
USE_CARPLAY_ALERT_ACCEPT
USE_CARPLAY_ALERT_CANCEL
shouldEnableWiFi
TB,N,V_shouldEnableWiFi
PAIRING_CARPLAY_ALERT_TITLE
PAIRING_CARPLAY_ALERT_TITLE_GENERIC
PAIRING_CARPLAY_ALERT_MESSAGE_IPHONE
PAIRING_CARPLAY_ALERT_ACCEPT_BLUETOOTH_ON
PAIRING_CARPLAY_ALERT_ACCEPT
PAIRING_CARPLAY_ALERT_DECLINE
shouldEnableBluetooth
TB,N,V_shouldEnableBluetooth
RECONNECT_OFF_ALERT_TITLE_WIFI
RECONNECT_OFF_ALERT_ACCEPT_WIFI
RECONNECT_OFF_ALERT_CANCEL
vehicle
T@"CRVehicle",&,N,V_vehicle
com.apple.carkitd.monitoring_transactions
transactionCount
certificateSerial
v16@?0@"NSError"8
connections
T@"NSMutableSet",&,N,V_connections
connectionsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionsQueue
availableModes
Wireless
com.apple.carkit.active-session.process
state
TQ,N,V_state
evaluationTimer
T@"NSTimer",&,N,V_evaluationTimer
processTransaction
T@"NSObject<OS_os_transaction>",&,N,V_processTransaction
com.apple.language.changed
com.apple.carkit.service
com.apple.carkit.monitoring.service
com.apple.carkit.app.service
com.apple.notifyd.matching
com.apple.carkit.carplay-attached
com.apple.MobileAsset.CarPlayAppBlacklist.new-asset-installed
v16@?0@"NSObject<OS_xpc_object>"8
power
TB,N,V_power
Found a queried keychain item: %@
No vehicle found for keychain query: %@ error: %i
Found queried keychain items: %@
No vehicles found for keychain query: %@ error: %i
Updated a keychain item: %@
Failed to update a keychain item: %@  error: %i
Created a keychain item: %@
Failed to create a keychain item: %@ error: %i
Deleted keychain items matching: %@
Failed to delete keychain items matching: %@ error: %i
Failed to save vehicle preferences: %@ %@
Failed to remove vehicle preferences: %@ %@
posting pairings changed
Failed to reconstruct vehicle with %@ (%@)
Failed to create vehicle identifier: %@
No matching keychain item for %@ (%@)
waiting for first unlock
completed first unlock
Process %i does not have the %@ entitlement
Handling blacklist asset updated
Failed to find app blacklist file
No installed app blacklist asset, starting download
Failed to find app blacklist asset
Failed to query for CarPlayAppBlacklist asset: %@
Fetched app blacklist: %@
isBluetoothInCar %i
received WiFi credentials for connectionID %lu
Failed to find a connected accessory with connection ID: %lu
Ignoring WiFi credentials for vehicle %@
Failed to update vehicle %@
Failed to save WiFi credentials for vehicle %@
saved WiFi credentials for %@
not posting in-car notification, WiFi credentials were not received while Bluetooth connected
CarPlay restriction changed
Sending iAP in-car wifi notification %@
Sending iAP out-of-car wifi notification %@
Handling CarPlay attach
CarPlay is not available
First accessory attach for %@, adding certificateSerial
Merging incomplete pairing %@ into pairing %@
BT connected vehicles: %@
Saved vehicle %@
Failed to save vehicle %@
Failed to remove WiFi credentials for vehicle %@
requestWiFiCredentialsIfNecessaryForVehicles %@
attempting Bluetooth connection to %@
no WiFi credentials request necessary for %@
sendDeviceIdentifierForVehicleAccesory %@ pairingStatus %lu
approval alert cancelled
approval alert accepted
approval alert declined
Wired BT pairing alert declined
Wired BT pairing alert cancelled
Wired BT pairing alert accepted
starting wired Bluetooth pairing with %@
wired pairing address: %@
vehicle did not have a Bluetooth address after pairing: %@
failed to complete Bluetooth pairing with %@
presenting alert to ask to turn on Wi-Fi
Enable Wi-Fi alert declined
Enable Wi-Fi alert cancelled
Enable Wi-Fi alert accepted, turning on Wi-Fi
clearing transaction count: %li
start monitoring for %@
incremented transaction count: %li
stop monitoring for %@
decremented transaction count: %li
going to tell clients that %@ has enabled state %i
policy monitor sending vehicle update to process %d
failed to connect to monitoring client service %@
assertion manager starting re-evaluation timer
assertion manager now idle
assertion manager now connecting
assertion manager now connected
assertion manager updating state
observing CADisplay
stopped observing CADisplay
updated CADisplay
opening 'com.apple.carkit.active-session' transaction %@
closing 'com.apple.carkit.active-session' transaction
carkitd launching
Handling %@ notification
system language changed, exiting
BTDeviceGetAddressString(%@) failed with error %d.
connected addresses: %@
unpaired device: %@
failed to find the device (%@) to unpair
CRVehicleStore
CRVehicleStoreAvailability
CRCarPlayAppService
CRCarPlayAppServiceAgent
NSXPCListenerDelegate
NSObject
CRCarKitService
CRCarKitServiceAgent
CRVehicleAccessoryManagerDelegate
CRCarPlayPreferencesDelegate
CRAlert
CRVehicleAccessoryAlert
CROutstandingWiredVehicleApprovalAlert
CROutstandingWirelessVehicleApprovalAlert
CROutstandingVehiclePairingAlert
CRReconnectionEnableWiFiAlert
CRCarKitMonitoringServerService
CRCarKitMonitoringClientService
CRCarKitMonitoringServiceAgent
CRWirelessSessionAssertionManager
CRBluetoothManager
CRWiFiCarManager
@16@0:8
@24@0:8@16
v32@0:8@16@24
B24@0:8@16
v16@0:8
@32@0:8@16@?24
v24@0:8@16
B16@0:8
v24@0:8@?16
v24@0:8@?<v@?@"NSSet"@"NSError">16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"CRVehicle"16@?<v@?@"CRVehicle"@"NSError">24
v32@0:8@"CRVehicle"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSString"16@?<v@?B@"NSString"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSString"@"NSError">16
v40@0:8Q16@24@?32
v40@0:8Q16@"NSDictionary"24@?<v@?B@"NSString"@"NSError">32
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v24@0:8@?<v@?>16
v32@0:8@"CRVehicleAccessoryManager"16@"CRVehicleAccessory"24
B24@0:8^@16
@32@0:8@16@24
B32@0:8@16Q24
@"CRCarKitMonitoringServiceAgent"
@"CRVehicleAccessoryManager"
@"CRVehicleStore"
@"CRCarPlayPreferences"
@"CRBluetoothManager"
@"CRWiFiCarManager"
@"CRWirelessSessionAssertionManager"
@"NSMutableArray"
@"NSNumber"
v24@0:8^{__CFUserNotification=}16
v24@0:8Q16
B24@0:8@?16
^{__CFUserNotification=}
@"CRVehicleAccessory"
v20@0:8B16
@"CRVehicle"
v32@0:8@"NSData"16@?<v@?>24
v36@0:8@16B24@?28
@"NSMutableSet"
@"NSObject<OS_dispatch_queue>"
v48@0:8@16@24@32^v40
@"NSTimer"
@"NSObject<OS_os_transaction>"
v28@0:8B16@20
@(#)PROGRAM:carkitd  PROJECT:CarKit-1
bplist00
 !#$%&'(&+
\CFBundleName_
CFBundleAllowMixedLocalizationsWDTXcodeYDTSDKNameZDTSDKBuild_
CFBundleDevelopmentRegion_
CFBundleVersion_
BuildMachineOSBuild^DTPlatformName_
CFBundlePackageType_
CFBundleShortVersionString_
CFBundleSupportedPlatforms_
CFBundleInfoDictionaryVersion_
CFBundleExecutableZDTCompiler_
MinimumOSVersion_
CFBundleIdentifier^UIDeviceFamily_
DTPlatformVersion\DTXcodeBuild_
DTPlatformBuildWcarkitd
T0800_
iphonesimulator10.2PRenQ1V15A284_
iphonesimulatorTBNDLS1.0
iPhoneSimulatorS6.0Wcarkitd_
"com.apple.compilers.llvm.clang.1_0T10.2_
com.apple.internal.carkitd
V8R174l
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.internal.carkitd</string>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.CarPlayAppBlacklist</string>
</array>
<key>com.apple.private.externalaccessory.showallaccessories</key>
<true/>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.carplay.pairings</string>
</array>
</dict>
</plist>
