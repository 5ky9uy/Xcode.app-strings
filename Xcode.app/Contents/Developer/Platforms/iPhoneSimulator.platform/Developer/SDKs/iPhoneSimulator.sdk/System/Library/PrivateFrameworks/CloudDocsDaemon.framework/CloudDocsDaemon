%-
% -
%"-
%$-
%&-
%(-
%*-
%,-
%.-
%0-
%2-
%4-
%6-
%8-
%:-
%<-
%>-
%@-
%B-
%D-
%F-
%H-
%J-
%L-
%N-
%P-
%R-
%T-
%V-
%X-
%Z-
%\-
%^-
%`-
%b-
%d-
%f-
%h-
%j-
%l-
%n-
%p-
%r-
%t-
%v-
%x-
%z-
%|-
%~-
%.
% .
%".
%$.
%&.
%(.
%*.
%,.
%..
%0.
%2.
%4.
%6.
%8.
%:.
%<.
%>.
%@.
%B.
%D.
%F.
%H.
%J.
%L.
%N.
%P.
%R.
%T.
%V.
%X.
%Z.
%\.
%^.
%`.
%b.
%d.
%f.
%h.
%j.
%l.
%n.
%p.
%r.
%t.
%v.
%x.
%z.
%|.
%~.
%/
% /
%"/
%$/
%&/
%(/
%*/
%,/
%./
%0/
%2/
%4/
%6/
%8/
%:/
%</
%>/
%@/
%B/
%D/
%F/
%H/
%J/
%L/
%N/
%P/
%R/
%T/
%V/
%X/
%Z/
%\/
%^/
%`/
%b/
%d/
%f/
%h/
%j/
%l/
%n/
%p/
%r/
%t/
%v/
%x/
%z/
%|/
%~/
alloc
init
setSession:
dbRowID
setObject:forKeyedSubscript:
isSharedZone
asSharedZone
mangledID
zoneName
objectForKeyedSubscript:
associateWithServerZone:
asSharedClientZone
mangledZoneID
addOfflineServerZone:
addOfflineClientZone:
addOfflineAppLibrary:
stringWithFormat:
brc_SHA1WithSalt:
stringByAppendingPathComponent:
bookmarkDataWithItemResolutionString:serverZoneName:ownerName:accountID:salted:
description
dictionaryRepresentation
dictionary
numberWithBool:
setObject:forKey:
setEtag:
setEtagBeforeCrossZoneMove:
class
allocWithZone:
copyWithZone:
isMemberOfClass:
isEqual:
hash
setKnownToServer:
setHasKnownToServer:
hasKnownToServer
setWasCached:
setHasWasCached:
hasWasCached
hasEtag
hasEtagBeforeCrossZoneMove
readFrom:
writeTo:
copyTo:
mergeFrom:
.cxx_destruct
knownToServer
wasCached
etag
etagBeforeCrossZoneMove
_etag
_etagBeforeCrossZoneMove
_knownToServer
_wasCached
_has
deviceID
absolutePath
performOnOpenFileDescriptor:error:
br_errorWithPOSIXCode:
defaultManager
mountPath
attributesOfFileSystemForPath:error:
setUpForRelPath:session:error:
fsTypeName
freeSize
totalSize
isCaseSensitive
isIgnoringOwnership
hasRenameExcl
hasRenameSwap
hasCloning
_stfs
_isCaseSensitive
_isIgnoringOwnership
_hasRenameExcl
_hasRenameSwap
_hasCloning
_deviceID
encodeInt32:forKey:
encodeObject:forKey:
encodeInt64:forKey:
decodeInt32ForKey:
decodeObjectOfClass:forKey:
decodeInt64ForKey:
initWithCapacity:
path
stringByAbbreviatingWithTildeInPath
debugItemIDString
appendFormat:
appendString:
clientDB
initWithURL:allowAppLibraryRoot:session:db:
stringByDeletingLastPathComponent
lastPathComponent
br_isSideFaultName
isFileReferenceURL
initWithURL:allowAppLibraryRoot:session:
resolveParentAndKeepOpenMustExist:errcode:
relpath
type
resolvedOpenRelpathForPath:mustExist:errcode:
exists
isUnixDir
close
appLibrary
asPrivateAppLibrary
fetchRootItemInDB:
itemID
asSharedAppLibrary
sharedEnclosureUUID
rootItemIDWithEnclosureUUID:
clientZone
fileID
directoryOrRootItemIDByFileID:db:
pathWithChildAtPath:
roots
initWithAbsolutePath:session:roots:
resolveAndKeepOpenMustExist:error:
diffAgainstServerItem:
parentItemID
isPrivateAppLibrary
fetchRootItemInDB:withEnclosureUUID:
sharedItemID
itemByItemID:db:
filename
isEqualToString:
asPrivateClientZone
itemByParentID:andName:db:
isFault
isReserved
serverItemByItemID:db:
refreshByPathDiffs
_fetchPathMatch
refreshFromPathMustExist:
isDocument
documentID
itemByDocumentID:db:
itemByFileID:db:
refreshByIDDiffs
_fetchIDMatch
_fetchRelPath
_fetchFaultedPathMatch
asDocument
faultByParentID:andDisplayName:db:
br_sideFaultName
refreshFaultedDiffs
documentItemByItemID:
reservedItemByParentID:andDisplayName:db:
_fetchReservedPathMatch
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithURL:session:
resolveAndKeepOpenWithError:
closePaths
byPathMatch
byPathLocalItem
byPathRelpath
byPathServerItem
byPathDiffs
clearByPathItem
byIDMatch
byIDLocalItem
byIDServerItem
byIDDiffs
clearByIDItem
faultedMatch
faultedRelpath
faultedServerItem
faultedLocalItem
faultedDiffs
clearFaultedItem
pathType
bySharedEnclosureDocItem
reservedMatch
reservedLocalItem
reservedServerItem
clearReservedItem
parentRelpath
parentPath
_session
_hasFetched
__relpath
_allowAppLibraryRoot
_url
_parentRelpath
_parentItemID
_filename
_parentPath
_byIDLocalItem
_byIDServerItem
_byIDDiffs
_byPathLocalItem
_byPathServerItem
_byPathDiffs
_faultedLocalItem
_faultedServerItem
_faultedRelpath
_faultedDiffs
_reservedLocalItem
_reservedServerItem
initWithLabel:dbCorruptionHandler:
_setErrorHandlerWithDBCorruptionHandler:
_setLockedHandler
setLabel:
defaultsForAppLibraryName:
dbTraced
setTraced:
setCrashIfUsedAfterClose:
code
UTF8String
dbBecameCorrupted:completion:
setSqliteErrorHandler:
currentOperationDuration
setLockedHandler:
openAtURL:withFlags:error:
setupPragmas
lastError
brc_close
profilingHook
changes
setProfilingHook:
initWithFormat:
executeRaw:
isInTransaction
flush
forceBatchStart
serialQueue
length
fetch:args:
execute:args:
sqliteErrorHandler
_shouldFlushWithChangeCount:
useBatchingWithPolicyHandler:
close:
fetchObjectOfClass:sql:
integerValue
dbAutovacuumRatio
dbAutovacuumBatchSize
autovacuumableSpaceInBytes
sizeInBytes
needsAutovacuum
incrementalVacuum:
manager
connectedToPowerSource
autovacuumIfNeeded
profilingEnabled
setProfilingEnabled:
attachDBAtPath:as:error:
flushToMakeEditsVisibleToIPCReaders
fetchWithSlowStatementRadar:sql:
executeWithSlowStatementRadar:sql:
executeWithErrorHandler:sql:
disableProfilingForQueriesInBlock:
usePacedBatchingWithInterval:changeCount:
_batchingPacer
_changeCount
_flushInterval
_flushImmediately
string
rawInjection:length:
fetch:
next
stringAtIndex:
initWithUUIDBytes:
raise:format:
setName:
date
session
operationFailureThrottle
nsurlsessiondEnabled
setQualityOfService:
initWithName:syncContext:group:
dealloc
qualityOfService
isCancelled
highlightedString:type:context:
isExecuting
isFinished
stringFromOperationUUID:context:
name
subclassableDescriptionWithContext:
stateWithContext:
stringFromDueDate:now:allowsPast:context:
usesBackgroundSession
timeIntervalSinceDate:
stringFromInterval:context:
stringFromError:context:
dependencies
count
countByEnumeratingWithState:objects:count:
descriptionWithContext:
willChangeValueForKey:
didChangeValueForKey:
errorWithDomain:code:userInfo:
finishWithResult:error:
_finishIfCancelled
mainBlock
main
setExecuting:
setupIfNeeded
removeDependency:
operationThrottle
incrementRetryCount:
_main
br_suggestedRetryTimeInterval
throttleHashFormat:
nsecsToNextRetry:now:increment:
distantFuture
_executeWithPreviousError:
dateWithTimeIntervalSinceNow:
callbackQueue
addOperation:
createActivity
finishIfCancelled
_scheduleExecutionWithPreviousError:
cancel
brc_isRetriable
setFinished:
brc_isBlacklistError
shouldRetryForError:
_completedWithResult:error:
addDependency:
queuePriority
setQueuePriority:
operationID
UUIDString
addOperation:allowsCellularAccess:
addSubOperation:overrideContext:allowsCellularAccess:
initWithName:syncContext:
isConcurrent
error
schedule
start
completedWithResult:error:
addSubOperation:
setOperationThrottle:
setOperationFailureThrottle:
setMainBlock:
finishBlock
setFinishBlock:
logSections
startDate
syncContext
_syncContext
_operationUUID
_internalQueue
_executionTransaction
_startDate
_finishDate
_lastTryDate
_nextTryDate
_lastError
_throttleHash
_retryTimer
_group
_Activity
_finished
_callbackQueue
_operationThrottle
_operationFailureThrottle
_mainBlock
_finishBlock
_logSections
invalidate
remoteObjectProxyWithErrorHandler:
setRemoteOperationProxy:userInfo:
setRemoteClientProxy:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
descriptionAdditionalStringWithContext:
remoteClientProxy
ignoreMissingRemoteClientProxy
setIgnoreMissingRemoteClientProxy:
_startedFinish
_ignoreMissingRemoteClientProxy
_remoteClientProxy
serverDB
ownerName
userKeyForName:db:
createUserKeyForName:
groupInTransaction:
initWithSubscriptionID:
arrayWithObjects:count:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
brc_cloudKitErrorForSubscriptionID:
brc_containsCloudKitInternalErrorCode:
setModifySubscriptionsCompletionBlock:
nextSyncRequestChangeToken
initWithPreviousServerChangeToken:
setFetchAllChanges:
queue
setCallbackQueue:
sharedDBSyncDownBatchRecordsCount
setResultsLimit:
array
addObject:
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
getOrCreateSharedAppLibraryAndZones:ownerName:
scheduleSyncDown
updateWithServerChangeToken:clientRequestID:syncDownStatus:
numberWithInt:
_performAfterAddingOwnerKeysForZoneIDs:block:
setFetchDatabaseChangesCompletionBlock:
_performFetchChangedZones
_performAfterRegisteringForPushes:
initWithSyncContext:changeState:group:
_changeState
isFinderAlias
modificationTime
numberWithLong:
isSymLink
appLibraryID
faultDisplayName
fileObjectID
isFile
size
numberWithLongLong:
birthTime
initWithRelPath:error:
allObjects
componentsJoinedByString:
initWithFileID:
isBRAlias
orig
isAlmostDead
parentID
logicalName
isInDocumentScope
isInDataScope
isInTrashScope
folderID
isFSRoot
parentFileID
unsignedLongLongValue
isPrivateZone
root
br_pathWithFileSystemRepresentation:
asSharedDocument
enclosurePathRelativeToRoot
finderTags
initWithData:
tagsCount
tags
setAttribute:forKey:
birthtime
uploadStatus
currentVersion
isHiddenExt
physicalName
desiredVersion
wantsContent
mtime
isFinderBookmark
liveConflictLoserEtags
isDead
fsDownloader
isDownloadingItem:
fsUploader
isUploadingItem:
downloadStatus
downloadError
brc_wrappedError
uploadError
isDownloadRequested
isSharedAppLibrary
sharingOptions
ownerKey
userIdentityForKey:
nameComponentsAcceptUnknownUser:
br_formattedName
lastEditorRowID
isEqualToNumber:
isDirectory
syncUpError
isLost
isZoneRoot
asBRAlias
initWithAliasItem:itemDiffs:
initWithLocalItem:itemDiffs:
longLongValue
volume
targetItemID
targetClientZone
itemByItemID:
targetAppLibraryID
_addAliasDecoration:
copy
objectForKey:
removeObjectForKey:
isEqualToItemID:
isEqualToFileObjectID:
merge:
mutableCopy
unionSet:
fileURLWithPath:
URLByAppendingPathComponent:
brc_issueSandboxExtensionOfClass:error:
notificationGatheredFromItem:
notificationWithAliasItem:targetItemNotification:
subclassDescription
oldParentFileObjectID
parentFileObjectID
classForCoder
setNumberAttribute:forKey:
notificationByStrippingSharingInfoIfNeeded
canMerge:
generateLogicalExtension:physicalExtension:
oldParentFileID
parentIDs
setParentIDs:
appLibraryIDsWithReverseAliases
setAppLibraryIDsWithReverseAliases:
oldAppLibraryID
aliasSourceAppLibraryID
unsaltedBookmarkData
setUnsaltedBookmarkData:
_isInDocumentScope
_isInDataScope
_isInTrashScope
_itemID
_parentID
_oldParentFileID
_parentIDs
_appLibraryIDsWithReverseAliases
_appLibrary
_oldAppLibraryID
_aliasSourceAppLibraryID
_unsaltedBookmarkData
removeAllObjects
objectAtIndex:
addTags:
clearTags
tagsAtIndex:
tagsType
setTags:
_tags
_publish
_unpublish
isIndeterminate
isPaused
fractionCompleted
completedUnitCount
totalUnitCount
brc_publish
brc_unpublish
brc_dumpDescription
setCompletedUnitCount:
enumerateKeysAndObjectsUsingBlock:
_progressForDocument:group:sizeInfo:
globalProgress
addProgress:forDocument:inGroup:
initWithParent:userInfo:
initWithItem:
coordinatedWriteURL
initWithGroup:parentFileIDs:session:
setTotalUnitCount:
setKind:
setUserInfoObject:forKey:
URLByDeletingLastPathComponent
URLByAppendingPathComponent:isDirectory:
setCancellable:
getPromisedItemResourceValue:forKey:error:
bundleForClass:
setLocalizedDescription:
taskTracker
itemByRowID:
evictInTask:options:error:
setCancellationHandler:
reverseAliasEnumerator
addAliasItem:
zoneID
byFileSystemID
resolveMustExist:error:
userInfo
getResourceValue:forKey:error:
isCancellable
cancellationHandler
downloadProgressForDocument:sizeInfo:
uploadProgressForDocument:sizeInfo:
isPublished
parentFileIDs
_progressByAliasContainerID
_published
_parentFileIDs
setWithCapacity:
setWithArray:
addObjectsFromArray:
daemon
containerMetadata
cloudSyncTCCDisabledForContainerMeta:
setIsCloudSyncTCCDisabled:
enumeratePrivateAppLibraries:
identifier
bundleIdentifiers
containsObject:
canFetchAllContainersByID
fetchAllContainersByIDWithError:
fetchContainerForURL:
_disabledBundleIDs
_knownBundleIDs
options
_options
newConnectionWithLabel:readonly:error:
useSerialQueue
closeAndResetLocalState
setStatementCacheMaxCount:
setupDatabase
newConnection:
statementCacheMaxCountForServerTruth
statementCacheMaxCountForClientTruth
dbProfiled
fileSystemRepresentation
_setupConnection:databaseName:flags:error:
setSynchronousMode:
registerFunction:nArgs:handler:
containsIndex:
newFromSqliteValue:
initWithData:encoding:
dataAtIndex:
notificationManager
queueUpdateForItemAtRowID:
_setupConnection:databaseName:readonly:error:
br_errorFromErrno
removeItemAtURL:error:
plist
execute:
setNeedsSave:
lastInsertedRowID
setDbRowID:
numberAtIndex:
zoneRowID
archivedObjectOfClasses:atIndex:
initWithName:ownerName:dbRowID:zoneRowID:db:plist:session:initialCreation:createdRootOnDisk:createdCZMMoved:rootFileID:
_createAppLibrary:
newSharedAppLibraryFromPQLResultSet:error:
enumerateObjects:
newPrivateAppLibraryFromPQLResultSet:error:
_createClientZone:ownerName:
initWithZoneName:ownerName:dbRowID:db:plist:session:initialCreation:
newSharedClientZoneFromPQLResultSet:error:
initWithZoneName:ownerName:dbRowID:plist:session:
newSharedServerZoneFromPQLResultSet:error:
fetchObject:sql:
newPrivateClientZoneFromPQLResultSet:error:
initWithZoneName:dbRowID:plist:session:
newPrivateServerZoneFromPQLResultSet:error:
newLocalItemFromPQLResultSet:db:error:
deviceKeyForName:db:
userIdentityForKey:db:
nameComponents
owner
userIdentity
userRecordID
recordName
userIdentityForName:db:
initWithCKUserIdentity:
_setUserIdentity:forName:
_privateClientZonesEnumerator:
state
clearStateBits:
setStateBits:
saveClientZoneToDB:
_sharedClientZonesEnumerator:
userVersion
unsignedIntAtIndex:
br_errorWithPOSIXCode:description:
nameWithString:
_registerLastBootIfNeeded:table:
unsignedLongLongAtIndex:
_stepBackupDetector:newState:error:
_clearNeedsUpgradeErrorsIfNeeded:brVersion:
initWithObjects:
initWithDictionary:
needsSave
enumerateServerZones:
saveAppLibraryToDB:
enumerateAppLibraries:
stageRegistry
willFlushAllStagedFileIDs
spotlightIndexer
garbageCollectSupersededRanks
setPreFlushHook:
flushUpdates
flushAppliedTombstones
enumerateClientZones:
maxNotifRankWasFlushed
setPostFlushHook:
autoRollbackHandler
domain
restart
setAutoRollbackHandler:
dbBatchDelay
dbBatchSize
archivedObjectOfClass:atIndex:
saveToDB:
loadCachedServerConfigFromDB:
performWithFlags:action:
unsignedIntValue
dbHandle
setUserVersion:
_checkIntegrity:serverTruth:error:
validateDatabase:serverTruth:error:
_startWatcher
_openClientTruthConnectionWithError:
_openServerTruthConnectionWithError:
enableDatabaseProfilingForDB:
stopDBWatcher
highlightedString:type:
writeLineWithFormat:
isSyncBlockedBecauseAppNotInstalled
isSyncBlockedBecauseOSNeedsUpgrade
_dumpClientZoneBlockedState:toContext:
pushIndentation
serverZone
dumpStatusToContext:error:
popIndentation
appLibraries
_sharedServerZoneByName:ownerName:db:
_privateServerZoneByName:db:
liveDaemon
dumpActivityToContext:error:
dumpTablesToContext:error:
disableDatabaseProfilingForDB:
fileDescriptor
setDateStyle:
setTimeStyle:
initWithFile:db:
setLiveDaemon:
setOnlyActiveStuff:
clientZonesMatchingSearchString:error:
_dumpClientZoneStatus:toContext:error:
_sharedServerZonesEnumerator:
_privateServerZonesEnumerator:
_sharedAppLibrariesEnumerator:
associateWithClientZone:
_privateAppLibrariesEnumerator:
containerScheduler
stringFromDate:
accountID
br_realpath
startupDate
timeIntervalSinceNow
intAtIndex:
dateWithTimeIntervalSince1970:
longValue
longAtIndex:
objectOfClass:atIndex:
dumpToContext:
_dumpClientZone:toContext:error:
dumpSession:toContext:db:error:
dumpXPCClientsToContext:
dumpMiscOperationsToContext:
fileProviderForSyncedFolderType:
enumerateSupportedFolderTypes:
versionsProvider
cloudDocsAppsMonitor
setDumpTrackedPendingDownloads:
backupToURL:progress:
databaseID
clientState
serverState
readOnlyDB
_setupBackupDetector:error:
preventDatabaseFromBeingReused
saveServerZoneToDB:
createServerZone:
deleteServerZone:
_enumerateAppLibraryRowIDs:usingBlock:
_reserveRowIDForLibrary:owner:
_deleteAppLibrary:
_createPrivateAppLibrary:
_createSharedAppLibrary:
_deleteClientZone:
_createPrivateClientZone:
_createSharedClientZone:ownerName:
_privateClientZoneByName:db:
stagedItemsEnumerator
bouncedItemsEnumerator
itemsNeedingIndexingEnumeratorWithMinNotifRank:maxNotifRank:
pendingDownloadItemWithDocumentID:
createDeviceKeyForNameInServerDB:
learnOwnerIdentityForShare:forceUpdate:
userNameForKey:db:
openDBWithError:
closeDBs
dumpStatusToFileHandle:zoneName:error:
initializeOfflineDatabase:
dumpDatabaseToFileHandle:zoneName:error:
dumpFileCoordinationInfoToFileHandle:error:
backupDatabaseToURL:error:
sessionForDumpingDatabasesAtURL:
isCloudDocsZone
zoneHealthState
enumerateObjectsOfClass:
sharesMigrationKey
initiateMigrationQueryForContainerIDs:key:
ckInfo
nameWithPrefix:suffix:
setWithObjects:
dictionaryWithObjects:forKeys:count:
initWithBytesNoCopy:length:freeWhenDone:
initForReadingWithData:
setRequiresSecureCoding:
decodeObjectOfClasses:forKey:
initForWritingWithMutableData:
finishEncoding
bytes
keyEnumerator
unsignedLongAtIndex:
numberWithUnsignedLongLong:
migrateStageToVersion2_0WithSession:
containersRepositoryURL
br_isPOSIXErrorCode:
minAutomaticallyEvictableFilesize
unsignedIntegerValue
numberWithUnsignedLong:
migrateItemIDsToVersion5WithDB:serverTruth:
boolValue
migrateItemIDsToVersion8WithDB:serverTruth:
_key
reset
scheduleNextEvent
addPerformer:
migrationThrottleParams
perform
initWithName:throttleParameters:queue:handler:
resume
addReachabilityObserver:
removeReachabilityObserver:
removePerformer:
networkReachabilityChanged:
networkReachabilityFlagsChanged:
initWithAccountID:
resumeAndAutoClose
_close
_accountID
_queue
_throttler
accountHandler
setMigrationStatus:forDSID:shouldUpdateAccount:completion:
br_appleAccountWithPersonID:
initWithAccount:
status
isNetworkReachable
performRequestWithHandler:
sharedConnection
addObserver:
removeObserver:
allApplicationIdentifiers
isCloudSyncAllowed:
appSupportDirPath
accountIDPath
stringWithContentsOfFile:encoding:error:
dirPathForSyncedFolderType:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToFile:atomically:encoding:error:
initWithEnvironmentName:namedDelegatePort:queue:
setEnabledTopics:ignoredTopics:opportunisticTopics:
shutdown
dbAccountID
mobileDocsAccountID
primaryiCloudAccount
isEnabledForDataclass:
br_dsid
br_isEnabledForCloudDocs
_cleanupPushAndActivitiesStatesWhenNoSessionExists
setDBAccountID:
reloadSyncedFolderPoliciesDisableiCloudDesktop:
initWithAccountID:salt:
destroyLocalDataWaitingForFilesToBeUnlinked:completionBlock:
_loadCurrentOnDiskAccountSessionWithError:
isInSyncBubble
sharedManager
updateVisibilityForCurrentAccount
fsReader
applyScheduler
fsEventsMonitors
makeObjectsPerformSelector:
isInInitialState
logoutTimeout
destroyLocalDataWithPristingContainerIDs:
valueForKey:
__itemAtURL:didDisconnectWithPurposeID:
jetsamCloudDocsApps
suspend
writingIntentWithURL:options:
__destroySessionWithIntents:
coordinateAccessWithIntents:queue:byAccessor:
reloadSyncedFolderPolicies
ubiquityTokenSalt
setLoggedOutError:
openWithError:
reason
br_errorWithDomain:code:description:
_destroyCurrentSessionSynchronously
delegate
accountHandler:willChangeSessionFrom:
_createCurrentAccountSessionWithID:error:
_migrateAccountIfNecessaryForAccountID:
accountHandler:didChangeSessionTo:
br_primaryAppleAccount
destroyLocalData
_handleAccountWillChange
destroyCurrentAccountSynchronously
_handleAccountDidChange
_updateAccountToAccountID:
br_isCloudDocsMigrated
br_setCloudDocsMigrated:
saveVerifiedAccount:withCompletionHandler:
br_isCloudDocsMigrationComplete
br_setCloudDocsMigrationComplete:
setSyncPolicy:forSyncedFolderType:
brc_libnotifyPerUserNotificationName
numberWithUnsignedInteger:
numberWithInteger:
icloudDriveAccountID
primaryiCloudAccountID
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
startAndLoadCurrentAccountSynchronously
destroyCurrentSessionSynchronously
createCurrentAccountSessionWithID:error:
markMigrationCompletedForDSID:
syncPolicyforSyncedFolderType:
setDelegate:
pushQueue
_currentAccountID
_migrationStatusSetterQueue
_hasSetMigrationComplete
_syncPolicyByFolderType
_delegate
_pushQueue
setCookieStorage:
asFinderBookmark
_aliasTargetMangledID
appLibraryByMangledID:
targetAppLibrary
containerIDFromSharedMangledID:
_aliasTargetShareItemIDWithLibraryRowID:
_aliasTargetItemID
_updateAliasTarget:
changedAtRelativePath:scanPackage:
_addTargetAppLibraryForAliasItem:
mode
xattrSignature
trashPutBackPath
trashPutBackParentID
generationID
processingStamp
stagedFileIDForDB
stagedGenerationID
bouncedName
itemScope
_insertInDB:dbRowID:
_updateInDB:diffs:
markNeedsUploadOrSyncingUpWithAliasTarget:
isKnownByServer
_markNeedsSyncingUp
initWithFileID:clientZone:roots:
initWithTarget:owningAppLibrary:path:session:
resolveWithError:
markLostClearGenerationID:backoffMode:
writeUnderParent:name:error:
updateFromFSAtPath:
aliasItemID
resolveClashOfAlias:atPath:withAlias:atPath:
saveToDB
learnItemID:ownerKey:path:markLost:
learnTarget:
rewriteAliasOnDiskWithTarget:
saveToDBForServerEdit:keepAliases:
performOnOpenParentFileDescriptor:error:
markDead
markNeedsUploadOrSyncingUp
_removeAliasAndMarkDead
targetDocument
startDownloadInTask:options:error:
_deleteFromDB:keepAliases:
_removedAliasItemForTargetAppLibrary:
updateXattrInfoFromPath:error:
updateOnDiskWithAliasTarget:forServerEdit:
targetMovedToTrashOrDeleted
targetMovedToThisAppLibrary
setMinimumOSName:
hasMinimumOSName
minimumOSName
_minimumOSName
brc_containsCloudKitErrorCode:
fetchCurrentUserRecordOperation
setDesiredKeys:
allKeys
firstObject
setFetchRecordsCompletionBlock:
initWithSyncContext:
zoneHealthSyncContext
getOrCreatePrivateAppLibraryAndZonesIfNecessary:
objectEnumerator
intValue
recordID
initWithRecord:
privateClientZoneByID:
initWithCKInfo:state:
syncedDownZoneHealthState:
zoneHealthWasReset
completedZoneHealthSyncDownWithServerChangeToken:requestID:moreComing:error:
brc_zoneHealthZoneID
zoneHealthSyncDownBatchRecordsCount
setPreviousServerChangeToken:
initWithRecordZoneIDs:optionsByRecordZoneID:
setSourceApplicationBundleIdentifier:
recordType
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
brc_isCloudKitErrorImplyingZoneNeedsCreation
completedWithServerChangeToken:requestID:moreComing:error:
setRecordZoneFetchCompletionBlock:
setFetchRecordZoneChangesCompletionBlock:
initWithSession:changeToken:
_changeToken
_recordsByID
_deletedRecordIds
stringByReplacingOccurrencesOfString:withString:
_aliasTargetContainerIDAndOwnerForItemType:aliasTarget:
_aliasTargetContainerIDAndOwner
_aliasTargetMangledIDForAliasTarget:
initWithUUIDString:
initWithSharedUUIDString:libraryRowID:
itemIDString
shareableExtensions
br_pathExtension
lowercaseString
stringFromItemID:context:
brc_hexadecimalString
deleteCharactersInRange:
descriptionWithContext:origName:
longLongAtIndex:
boolAtIndex:
decodeBoolForKey:
encodeBool:forKey:
checkStateWithItemID:logToFile:
initWithStatInfo:
br_displayFilenameWithExtensionHidden:
iWorkShareable
initFromResultSet:pos:
check:logToFile:
diffAgainst:
isExecutable
isWritable
displayName
setCkInfo:
setState:
setType:
setMode:
setBirthtime:
setParentID:
setHiddenExt:
setXattrSignature:
lazyXattr
setLazyXattr:
setFinderTags:
setLogicalName:
setTrashPutBackPath:
setTrashPutBackParentID:
_ckInfo
_state
_type
_mode
_birthtime
_filenameOrAliasTarget
_hiddenExt
_xattrSignature
_lazyXattr
_finderTags
_trashPutBackPath
_trashPutBackParentID
_hasLastEditorDeviceRowID
_hasLastEditorRowID
lastEditorDeviceRowID
lastEditorUserIdentityWithDB:
stringFromByteCount:context:
brc_signatureIsPendingPlaceHolder
isPackage
brc_signatureIsPackage
initWithVersion:
replaceOccurrencesOfString:withString:options:range:
originalPOSIXName
minFileSizeForThumbnailTransfer
canMostRecentClientsGenerateThumbnailsForUTI:
setLastEditorDeviceRowID:
setLastEditorRowID:
lastEditorDeviceDisplayNameWithDB:
lastEditorDisplayNameWithDB:
displayNameWithoutExtension:
hasThumbnail
isEtagEqual:
additionNameForItemID:zoneID:
isSmallAndMostRecentClientsGenerateThumbnails
setMtime:
setOriginalPOSIXName:
setSize:
thumbnailSize
setThumbnailSize:
thumbnailSignature
setThumbnailSignature:
contentSignature
setContentSignature:
conflictLoserEtags
setConflictLoserEtags:
lastEditorDeviceOrUserRowID
setLastEditorDeviceOrUserRowID:
lastEditorDeviceName
setLastEditorDeviceName:
quarantineInfo
setQuarantineInfo:
_mtime
_originalPOSIXName
_size
_thumbnailSize
_thumbnailSignature
_contentSignature
_quarantineInfo
_conflictLoserEtags
_lastEditorDeviceOrUserRowID
_lastEditorDeviceName
isValidSignature:
brc_hexadecimalStringWithBytes:length:
updateWithBytes:length:
dataByFinishingSignature
brc_signatureIsValid
brc_signature
brc_pendingPlaceholderForPackage:
initWithBytes:length:
setPath:
setSymlinkContent:
setSignature:
typeAsString:
StringAsType:
hasPath
setHasMtime:
hasMtime
setIsWritable:
setHasIsWritable:
hasIsWritable
setIsExecutable:
setHasIsExecutable:
hasIsExecutable
hasSymlinkContent
hasQuarantineInfo
hasSignature
setXattrIndex:
setHasXattrIndex:
hasXattrIndex
symlinkContent
signature
xattrIndex
_xattrIndex
_path
_signature
_symlinkContent
_isExecutable
_isWritable
loadFromClientStateInSession:
weakObjectsHashTable
registerQueryWithAliases:isRecursive:
unregisterQueryWithAliases:isRecursive:
initWithXPCReceiver:client:manager:
initWithReceiver:manager:
processProgressUpdates:
addNotification:asDead:
processUpdates:
triggerNotificationIfNeeded
_queueAdditionalUpdates
_dispatchUpdatesToPipes
invalidateIfWatchingAppLibraryIDs:
removeObject:
invalidateReceiverIfWatchingAppLibraryIDs:
initWithAccountSession:
hasActiveAliasWatchers
registerAppLibraries:forFlags:
unregisterAppLibraries:forFlags:
getPipeWithXPCReceiver:client:reply:
pipeWithReceiver:
queueProgressUpdates:
queueUpdate:
invalidatePipesWatchingAppLibraryIDs:
pipeDelegateInvalidated:
invalidatePipeReceiversWatchingAppLibraryIDs:completionBlock:
_pipes
_cacheQueue
_notifs
_transferCache
_client
_activeAliasQueries
_additionalUpdatesItemRowID
_isCancelled
br_isAbsolutePath
isResolved
br_pathRelativeToPath:
_initWithPath:relativeToRoot:
isInPackage
isPackageRoot
isRoot
initWithDocID:
initWithRelativePath:
isFileWithFinderInfoAliasBit
br_isInPackage
br_pathOfPackageRoot
br_pathRelativeToPackageRoot
pathOfPackageRoot
resolvePathAdditionalMetadata:appLibrary:clientZone:
setClientZone:
setAppLibrary:
pathRelativeToRoot
maxRelativePathDepth
br_isExcludedWithMaximumDepth:
_shouldKeepBasePathOpenWithoutOpenedFD
_resolveRootWhenExists:
_fixupRelativePath
_resolvePathTypeAndContainer
initWithRelpath:
br_fileSystemRepresentation
pathComponents
reverseObjectEnumerator
lastObject
removeLastObject
_shouldKeepBasePathOpen
_resolveBasePath
_resolveWhenExists
_resolveWhenDoesntExist
br_isPackageRoot
pathRelativeToPackageRoot
_resolveSymlinkRelativeTo:path:
compare:options:
shouldFixupBundleBitOnPackages
extensionsSkippingBundleBitFixup
_resolveAndKeepOpenMustExist:error:
br_pathWithDeviceID:fileID:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
nextObject
isEqualToRelativePath:
maxXattrBlobSize
loadXattrsFromFD:withMaximumSize:error:
appLibraryIDAndOwner
decodeBytesForKey:returnedLength:
decodeIntegerForKey:
encodeBytes:length:
encodeInteger:forKey:
locateByFileID:clientZone:roots:
initWithRootPath:session:
initWithPath:appLibrary:clientZone:
logicalURLWithLogicalName:
isBundle
sharedOwnerName
isExcluded
hardlinkCount
fsGenerationID
isHiddenExtension
isHiddenFile
isBusy
fileType
hasFinderTags
refreshPathTypeAndContainer
flock:
openDirectoryForScanWithError:
nextChild
openDirectoryForRecursiveScan
nextDescendant
closeDirectoryScan
bookmark
xattrs
parentHash
setItemScope:
setSharedItemID:
setSharedOwnerName:
_roots
_absolutePath
_relativePath
_basePath
_bookmark
_generationID
_clientZone
_sharedItemID
_sharedOwnerName
_finderInfo
_fileID
_nlink
_parentFileID
_documentID
_fsGenerationID
_flags
_itemScope
_isExcluded
_isInPackage
_isBundle
_isPackageRoot
_readFault
_hasFinderTags
_isBusy
_hasFinderInfoAliasBit
_isBRAlias
_qtnResolved
_xattrsResolved
_openRefCount
_mutex
_dir
_descendantsEnumerator
_xattrs
stringWithUTF8String:
strongToStrongObjectsMapTable
_moveDown:index:
_moveUp:index:
_moveUpOrDown:index:
_shrink
initWithComparator:
check
removeFirstObject
firstObjectWeightChanged
objectWeightChanged:
_array
_comparator
_mutation
_objects
_count
dataWithBytes:length:
initWithTag:
checksummingOutputStreamWithTag:
hasSpaceAvailable
open
write:maxLength:
_ctx
_sig
_isOpen
_accountChangeHandler
stringFromErrorString:context:
descriptionForCKAccountStatus:dumpContext:
accountStatusWithCompletionHandler:
defaultCenter
_accountDidChange
addObserver:selector:name:object:
removeObserver:name:object:
initWithCKContainer:
_source
_ckContainer
_lastAccountStatus
_resumed
defaultSyncContext
attributeForName:
receiveUpdates:logicalExtensions:physicalExtensions:reply:
receiveProgressUpdates:reply:
initWithSession:url:
evictionCompletionBlock
setEvictionCompletionBlock:
_section
_tracker
_pipe
_isFinished
_evictionCompletionBlock
stringFromThrottleState:context:
hasWorkGroup
closed
stringByAppendingString:
defaultScheduler
initWithScheduler:
setTargetQueue:
setBottomQueue:
setEventHandler:
signal
onlyActiveStuff
stringWithString:
stringFromDueStamp:now:allowsPast:context:
_describe:zone:now:context:
nsecsToNextRetry:retryCount:now:
nsecsBeforeForgettingCounter
_updateStamps:throttle:now:
signalWithDeadline:
setHasActiveWork:
setHasWork:
contextIdentifier
setHasWorkGroup:
_initWithSession:name:tableName:
_canRetryThrottleID:zone:
isZoneIdle:
descriptionForThrottleID:zone:now:context:
descriptionForZone:now:context:
_computeStamps:throttleID:zone:throttle:hasBeenTried:
updateThrottleID:zone:state:
_deleteThrottleID:
resetBackoffForThrottleID:zone:
deleteThrottlesForZone:
deleteExpiredThrottles
moveAppLibraryTransfers:toAppLibrary:
scheduleDidFinishWithTimestamp:nextScheduleTimestamp:
hasActiveWork
hasWork
_schedulerSource
_schedulerQueue
_name
_tableName
_hasActiveWork
_hasWork
_hasWorkGroup
nextNotifRank
logName
itemsEnumeratorChildOf:rankMin:rankMax:count:
itemsEnumeratorWithRankMin:rankMax:namePrefix:shouldIncludeFolders:shouldIncludeOnlyFolders:shouldIncludeDocumentsScope:shouldIncludeDataScope:shouldIncludeExternalScope:shouldIncludeTrashScope:count:
notifsRank
rowNumber
done
gatherWithBatchSize:completion:
addDequeueCallback:
initWithNotificationPipe:appLibraries:reply:
gatheredChildrenItemID
setGatheredChildrenItemID:
_gatherReply
_gatheringAppLibraries
_gatheringRankCur
_gatheringRankMax
_gatheringNamePrefix
_gatheredChildrenItemID
notificationPipe:willObserveAppLibrary:
hasPrivateSharingInterfaceEntitlement
_initWithManager:
connection
watchedAncestorItemID
watchedAncestorFileObjectID
watchedAncestorFilenameToItem
br_isEqualToStringForHFS:isCaseSensitive:
setWatchedAncestorFilenameToItem:
setWatchedAncestorFileObjectID:
setOldWatchedAncestorItemID:
setWatchedAncestorItemID:
oldWatchedAncestorItemID
includesDataScope
isDocuments
diffs
intersectSet:
privateAppLibraryByID:
aliasByUnsaltedBookmarkData:
_addIntraContainerUpdatesFromInterContainerUpdate:toArray:
_isInterestingUpdate:
_gatherIfNeededAndFlushAsync
allValues
_flushProgressUpdates
isFolderOrAliasID
_processProgressUpdates:
notifBatchSize
processDequeueCallbacks
dequeue:block:
notifOverflowLimit
notifGatherUpTo
__flush
notificationPipe:didObserveAppLibrary:
initWithArray:
watchItemAtURL:lookup:options:reply:
intersectsSet:
_stopWatchingItems
watchScopes:trustedAppLibraryIDs:gatheringDone:
watchItemInProcessAtURL:options:reply:
_receiver
_boostReply
_oldWatchedAncestorItemID
_watchedAncestorItemID
_watchedAncestorFileObjectID
_watchedAncestorFilenameToItem
_gatherer
_hasUpdatesInFlight
_volumeIsCaseSensitive
_pendingProgressUpdatesByID
_hasProgressUpdatesInFlight
_watchItemOptions
_watchKind
_watchNamePrefix
_watchForBundleID
_externalAppLibraries
_watchedAppLibraries
_watchedAppLibraryIDs
_watchedAppLibrariesFlags
_manager
watchScopes:appLibraryIDs:gatheringDone:
entitledAppLibraryIDs
watchItemAtURL:options:reply:
watchItemsNamesPrefixedBy:inScopes:appLibraryIDs:gatheringDone:
watchScopes:gatheringDone:
boostPriority:
brc_booleanValueForKey:
_removeSubscriber:
_displayDialogWithType:dict:options:userReplyBlock:
_logWrapUserReplyBlock:
_hideCurrentDialog
_updateDialogWithType:dict:userReplyBlock:
_localizationKey:forDocumentKindOfApplication:
share
brc_documentName
hasSuffix:
substringToIndex:
ckContainer
localizedStringFromPersonNameComponents:style:options:
ownerIdentity
brc_applicationName
brc_errorInvalidParameter:value:
_localizationKey:forOSAndDocumentKindOfApplication:
publicPermission
_displayDialogWithType:dict:userReplyBlock:
fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:
moveToFront
showJoinDialogForShareMetadata:session:reply:
showErrorSignInToiCloudForShareMetadata:reply:
showErrorTurnOniCloudDriveForShareMetadata:reply:
showErrorInstallNativeAppForShareMetadata:reply:
showErrorNativeAppDisabledByProfileForShareMetadata:reply:
showErrorReasonUnknownForShareURL:reply:
showErrorDeviceOfflineForShareURL:reply:
showErrorServerNotReachableForShareURL:reply:
showErrorItemUnavailableOrAccessRestrictedForShareURL:reply:
showErrorParticipantLimitReachedForShareURL:reply:
showErroriCloudDriveAppNotVisibleForShareURL:reply:
_updateDialogWithType:dict:
_cfUserNotification
_displaySource
_nextDisplayBeginTime
_progressSubscriber
_dialogInfo
_computeSignature:
bookmarkDataWithContentsOfURL:error:
_validateSignatureWithFd:
unlinkAliasAtPath:
resourceValuesForKeys:fromBookmarkData:
hasPrefix:
substringFromIndex:
parseBookmarkData:inAccountSession:docID:itemID:mangledID:unsaltedBookmarkData:error:
rangeOfString:
itemByDocumentID:
bookmarkData
bookmarkDataWithRelativePath:
br_preCacheBookmarkData:versionEtag:
bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:
_resolveTargetWithError:
_resolveDataWithError:
writeBookmarkData:toURL:options:error:
UUID
createName
containsItemID
targetServerZone
target
_bookmarkData
_target
_targetServerZone
_targetRelpath
_targetResolved
_dataResolved
_containsItemID
handleExitSignal:
_initSignals
serviceListener
anonymousListener
stringWithContentsOfURL:encoding:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
writeToURL:atomically:encoding:error:
setResourceValue:forKey:error:
minimumDiskSpaceRequiredToBeFunctional
_loadAccountIfNeeded
setUpSandbox
mainBundle
bundleIdentifier
initWithMachServiceName:
_haveRequiredKernelFeatures
checkEnoughDiskSpaceToBeFunctional
stringFromByteCount:showActualByteCount:suffix:context:
localeDidChange
loadAccount
_setupCacheDelete
fileUnlinker
_startXPCListeners
_startupAndLoadAccount
_resumeAccount
_finishStartup
setMaxConcurrentOperationCount:
objectAtIndexedSubscript:
cancelAllCoordinationProviders
fileURLWithPath:isDirectory:
initWithURL:
initWithVolume:
resumeFileProviderForSyncedFolderType:
suspendFileProviderForSyncedFolderType:
initWithConnection:
setExportedInterface:
waitOnAccountResumedQueue
auditToken
initWithAuditToken:
setPrivilegesDescriptor:
applicationIdentifier
removeAlliCloudDriveAppInstallationNotifications
setExportedObject:
dieOnInvalidate
setInterruptionHandler:
setInvalidationHandler:
endpoint
validateItemsLoggingToFile:db:
validateStructureLoggingToFile:db:
exitWithCode:
listener:shouldAcceptNewConnection:
setIsInSyncBubble:
loggedOutError
waitForConfiguration
setUpAnonymousListener
_shouldCacheDeleteForVolume:
registerShareAcceptOperation:forURL:
setDirPath:forSyncedFolderType:
fileProviderForURL:
selfCheck:
suspendIPCAcceptation
resumeIPCAcceptation
logsDirPath
setLogsDirPath:
setAppSupportDirPath:
cacheDirPath
setCacheDirPath:
containerClass
setContainerClass:
disableAccountChangesHandling
setDisableAccountChangesHandling:
disableAppsChangesHandling
setDisableAppsChangesHandling:
forceIsGreedyState
setForceIsGreedyState:
doesNotHaveEnoughDiskSpaceToBeFunctional
setDoesNotHaveEnoughDiskSpaceToBeFunctional:
_sigIntSrc
_sigQuitSrc
_sigTermSrc
_xpcListener
_tokenListener
_unitTestMode
_hasNotEnoughDiskSpaceToBeFunctional
_accountHandler
_xpcListenersReadyQueue
_accountReadyQueue
_accountResumedQueue
_startupQueue
_serverAvailabilityNotifyToken
_accountLoaderQueue
_fileProviders
_dirPaths
_versionsProvider
_shareAcceptOperationsByURL
_shareAcceptQueue
_disableAccountChangesHandling
_disableAppsChangesHandling
_logsDirPath
_appSupportDirPath
_cacheDirPath
_containerClass
_loggedOutError
_ubiquityTokenSalt
_forceIsGreedyState
_startupDate
br_isCocoaErrorCode:
data
sqliteBind:index:
metadataSyncContext
applyThrottle
cloudDocsClientZone
rootItemID
_rescheduleThrottle:forZone:state:
shouldFixupTargetCZMAliases
brc_stringByBackslashEscapingCharactersInString:
serverZoneByRowID:
serverItemByItemID:
newLocalItemWithServerZone:dbRowID:
_fixupCZMAliasTargetWithAlias:target:
writerApplyBatchSize
_scheduleOne:
_handleWatchingFaults
defaultAppLibrary
fsWriter
isRejected
rank
isCoordinationPendingForItem:
_retriedThrottleID:zone:kind:
applyChangesForServerItem:localItem:throttleID:zone:activity:hasFinished:
groupInBatch:
_showiCloudDriveAppInstallationNotificationIfNeeded
isSyncBlocked
hasCompletedInitialSyncDownOnce
minusSet:
signalFaultingWatchersWithError:
writerMaxConcurrentIOs
totalCount
_writeCoordinationCount
itemIDByRowID:
serverRankByItemID:
lastInsertedRank
changeState
lastSyncDownDate
didSyncDownRequestID:maxApplyRank:caughtUpWithServer:syncDownDate:
rescheduleSuspendedThrottlesForZone:state:
updateThrottleID:zone:state:kind:
createThrottleID:zone:itemID:state:kind:
didCreateMissingParentID:zone:
didReparentOrKillItemID:parentItemID:zone:
didCompleteCrossZoneMigrationForAppLibrary:
didMarkSyncIdleForServerRank:zone:
rescheduleMissingTargetAliasesWithTarget:
repopulateThrottlesForZone:
monitorFaultingForContainer:
startWriteCoordinationInAppLibrary:
endWriteCoordinationInAppLibrary:rowID:
didSyncDownZone:requestID:upToRank:caughtUpWithServer:
_coordinatedWriters
_clientZonesWatchingFaults
_applyCountReachedMax
evaluateWithObject:
throttleHashWithItemID:
_validateThrottleParams:
initWithName:andParameters:
predicateWithFormat:
matchesItem:nsecsToRetry:now:
predicate
setPredicate:
_predicate
isDesktopAppLibrary
isDocumentsAppLibrary
isCloudDocsAppLibrary
fsEventsMonitor
fsEventsMonitorForAppLibraryID:
initFileURLWithPath:isDirectory:
sharedMangledIDWithContainerID:ownerName:
privateMangledContainerID:
updateWithPlist:
scheduleDeepScan
syncContextIfExists
foregroundClients
removeForegroundClient:
addForegroundClient:
addAppLibrary:
numberWithUnsignedInt:
cancelFileCoordinators
forgetWatchedLockedFileIDsForAppLibrary:
unscheduleAppLibraryForLostScan:
syncedFolderType
cancelFileProvidersForPath:
_baseRootItemInDB:
fetchRootItemWithoutEnclosuresInDB:
_initAsLibraryRootWithAppLibraryRowID:enclosureUUID:
fetchRootItemWithoutEnclosures
_activateState:origState:
isiCloudDesktopAppLibrary
scheduleAppLibraryForLostScan:
scheduleSyncUp
hasOptimizeStorageEnabled
shouldEvictUploadedItems
shouldAppLibraryBeGreedy
sizeOfActiveDownloads
availableDiskSpace
minimumDiskSpaceRequiredToBeGreedy
hasUbiquityClientsConnected
isGreedy
isForeground
_unwrappedDescriptionWithContext:
formatInjection:
forRead
startReadCoordinationInAppLibrary:
freeFileCoordinationSlotsAfterDelayForRead:
endReadCoordinationInAppLibrary:
initWithSession:forRead:doneHandler:
setIsUpdateForReconnecting:
readerIOsCancelDelay
writerIOsCancelDelay
cancelAfterDelay:
isBatchSuspended
unsignedLongValue
readerMarkChildrenLostBatchSize
hasActiveRecursiveQueries
isNonDesktopAppLibraryRoot
isRootItemIDWithSQLiteValue:
integerAtIndex:
markChildrenLostForItemID:fileID:startingFromRow:hasMoreWork:
continueMarkingChildrenLost
needsSyncUp
asDirectory
hasDeadChildren
hasInitialFaultsLive
hasInitialFaultsEverLive
accessTimeDeltaForUrgency:
documentEvictableSizeUsageWithAccessTimeDelta:
timeIntervalSince1970
_resolvetargetAppLibraries
_removeAlltargetAppLibraries
hasFetchedInitialApps
shouldSyncContainerID:
syncContextForAppLibrary:createIfNeeded:
didReceiveHandoffRequest
_aliasAppLibraryTargetSQLPrefix
_targetAppLibrariesEnumerator
_addTargetAppLibrary:
isStillTargetingAppLibrary:
itemIDByRowID:db:
itemByRowID:db:
errorWithSqliteCode:andMessage:
setLastError:
object:
hasActiveQueries
hasActiveAliasQueries
cancelFileProviders
cancelDeepScan
rootItemIDWithoutEnclosures
addClientUsingUbiquity:
removeClientUsingUbiquity:
activate
cancelWriteCoordinatorForItem:
coordinatorForItem:forRead:
deepScanStamp
allocateLostStampAddingBackoff:
markChildrenLostForItemID:fileID:
didFindLostItem:oldAppLibrary:
didCreateDocumentScopedItem
didCreateDataScopedItem
hasDocumentsOrDirectory
hasUbiquitousDocuments
hasLocalChanges
documentSizeUsage
documentEvictableSizeUsage
documentCount
recomputeShouldEvictState
liveAliasesEnumeratorTargetingThisAppLibrary
tracker
maxLostStamp
setMaxLostStamp:
setZoneRowID:
setFileID:
setGenerationID:
setDeepScanStamp:
_activeQueries
_activeRecursiveQueries
_maxLostStamp
_deepScanStamp
_pendingFileCoordinators
_XPCClientsUsingUbiquity
_mangledID
_targetAppLibraries
_targetAppLibraryQueue
_foregroundClients
_needsSave
_dbRowID
_zoneRowID
_appLibraryID
_appLibraryIDAndOwner
_ownerName
containerForContainerID:
_updateIsInCloudDocsZone
stringByAppendingFormat:
notifyClient:whenFaultingIsDone:
rootItemForAppLibraryRootItemID:session:
setIsInInitialState:
postContainerListUpdateNotification
zoneDidChangeMovedToCloudDocsState
wasMovedToCloudDocs
_isInCloudDocsZone
setIsInCloudDocsZone:
didChangeSyncStatusForContainerMetadataForContainer:
documentsPath
brc_errorNoDocumentAtURL:underlyingPOSIXError:
anyReverseAliasInAppLibrary:
fseventAtPath:flags:
postContainerStatusChangeNotificationWithID:key:value:
privateClientZone
containerMetadataFilledWithTCCInfo
shouldSaveContainerMetadataServerside
fetchRootItem
setContainerMetadataEtag:
setContainerMetadataNeedsSyncUp:
scheduleContainerMetadataSyncUp
createAliasWithTarget:parentPath:forceReparent:error:
setIsOverQuota:
containerMetadataEtag
containerMetadataNeedsSyncUp
_containerMetadataNeedsSyncUp
_containerMetadata
_containerMetadataEtag
incrementRetry
initWithThrottleHash:
retryCount
latestRetry
throttleHash
_scheduled
_retryCount
_latestRetry
doubleValue
retryBackoff:
isBlocking
_initialRetryCount
_finalRetryCount
_maximumElementCount
_minimumNsecsBetweenRetries
_maximumNsecsBetweenRetries
_nsecsBeforeForgettingCounter
_cleanupStaleCounters:
throttleHashBytes:length:
_retryCounters
_retryHeap
appLibraryByRowID:
initWithSyncContext:kind:now:retryQueueKick:
nextDocumentItem
stageID
_now
_retryQueueKick
initWithName:
setCoalescingLeeway:
stagedFileID
willScheduleDocumentForDownload:
transferID
kind
_fetchStamps:now:throttle:throttleID:kind:etag:
uuidAtIndex:
downloadStream
progressForTransferID:operationID:
diskReclaimer
accessTimestampForDocument:
downloadThrottle
forceSchedulingPendingInteractiveTransfers
setTrackChanges:
_appLibraryForDownload:kind:operationID:
cleanupStagedDownloadWithID:forItemID:
requiresTwoPhase
learnStagedInfoFromDownloadStageID:error:
setDownloadError:
handleZoneLevelErrorIfNeeded:
brc_isOutOfSpaceError
brc_isCloudKitCancellationError
_bumpThrottleForDownload:throttle:
brc_isCloudKitAssetFileModified
progress
downloadWillRetryProgressMaxCount
setProgressPublished:
updateDownloadThrottleForDocument:toState:
brc_isCloudKitUnknownItemError
handleUnknownItemError
record
_sanitizeRecord:
diskSpaceRequiredToReturnToGreedyState
cancelTransferID:operationID:
popDownloadedBlockForItemID:
_cancelThrottles:state:
_finishDownloadCleanup:
addAliasItem:toTransferWithID:operationID:
_hasLosersToDelete:serverItem:
shouldHaveThumbnail
shouldTransferThumbnail
coordinatedReadURL
lookupForItem:
thumbnailChangedForItem:relpath:url:error:
noteCloudDocsDownloadedFileAtURL:completionHandler:
createURLForDownloadWithStageID:name:
setItemClass:
initWithPBItem:forLocalItem:
saveToDBWithSession:
cancelAndCleanupItemDownload:kind:
latestVersion
createThrottleForItem:state:kind:etag:userInitiated:
shouldScheduleLosersEvictionForItem:
permanentStorageForItemAtURL:allocateIfNone:error:
removeAllAdditionsForNamespaces:completionHandler:
setLiveConflictLoserEtags:
isSubsetOfSet:
resolvedConflictLoserEtags
cancelAndCleanupItemDownload:kind:etag:
rescheduleThrottlesPendingWinnerForItem:
setWithSet:
enumeratorForAdditionsInNameSpace:withOptions:withoutOptions:ordering:
brc_parseMangledContainerID:itemID:etag:session:
_br_markResolvedWithError:
scheduleLosersDownloadForItem:serverItem:purgeStaleEntries:applySchedulerState:
associateThumbnailImagesDictionary:serializedQuickLookMetadata:withDocumentAtURL:error:
__itemAtURL:didChangeWithPurposeID:
learnThumbnailSignatureFromLiveVersion:
itemsCount
_finishedDownload:kind:operationID:error:
setPerDownloadCompletionBlock:
initWithDocument:stageID:etag:
addDownload:
_willDownload:operationID:
addBatchOperation:
allSyncContexts
inFlightSize
minimumDiskSpaceRequiredToDownload
minimumDiskSpaceRequiredToDownloadUserInitiated
hasPendingReaderForDocumentID:
requestPurgeSpace
initWithDocument:stageID:
setProgress:
_postponeLoserForWinner:etag:
initWithSyncContext:forNonLocalVersion:
addIndex:
initWithDocument:stageID:etag:isLoser:
storage
gsError
unsignedIntegerAtIndex:
_sendThumbnailsBatch:sizeHint:maxRecordsCount:
_sendContentsBatch:sizeHint:maxRecordsCount:
_sendLosersBatch:sizeHint:maxRecordsCount:
_transferStreamOfSyncContext:didBecomeReadyWithMaxRecordsCount:sizeHint:priority:
rescheduleThrottlesPendingInitialSyncInZone:
rescheduleThrottlesForPendingDiskSpaceWithAvailableSpace:
cancelAndCleanupItemDownloads:
addAliasItem:toDownloadingItem:
updateContentDownloadForMetaOnlyChange:fromEtag:toEtag:
hasAdditionsToApplyForItem:serverItem:
makeContentLive:
scheduleContentDownloadForItem:serverItem:userInitiated:
evictLosersOnItem:atURL:applySchedulerState:
applyLosersToItem:serverItem:atURL:applySchedulerState:addedLosers:removedLosers:
hasThumbnailToApplyForItem:
scheduleThumbnailDownloadForItem:serverItem:applySchedulerState:
applyThumbnailToItem:serverItem:atURL:applySchedulerState:
transferStreamOfSyncContext:didBecomeReadyWithMaxRecordsCount:sizeHint:priority:completionBlock:
downloadsDeadlineScheduler
_initialKickDone
_activeDownloadsSize
_lastDownloadRefresh
_willRetryOperationProgress
_downloadsDeadlineScheduler
compare:
stringFromItemAsString:context:
timeIntervalSinceReferenceDate
initWithFd:forceColor:
initWithFormat:arguments:
componentsSeparatedByString:
startStringForFgColor:bgColor:attr:
stringForReset
initWithDumper:
indentationBaseString
setIndentationBaseString:
dumpTrackedPendingDownloads
_indentation
_dumper
_liveDaemon
_onlyActiveStuff
_dumpTrackedPendingDownloads
_indentationBaseString
stringWithCapacity:
resetQueue
clearSyncStateBits:
_cancelAllOperationsForReset
waitUntilFinished
sharedAppLibraryResetThrottle
appLibraryResetThrottle
_reset:
_finishedReset:
_performWhileResettingClientTruths:completionBlock:
_performAfterResetServerAndClientTruthsAndUnlinkData:
_performAfterResetServerAndClientTruthsAndUnlinkDataAndPurgeTheZone:
aliasDeletionBatchSize
markNeedsDeleteForRescheduleOfItem:
appLibraryAliasRemovalThrottle
_removeTargetedAliasesWithCompletionBlock:
performWithFlags:action:whenFlushed:
resetServerTruth
documentsNotIdleEnumerator
didDeleteDocument:
clearProblemReport
setUnderlyingQueue:
setPurposeIdentifier:
appLibraryIDs
retainAccess
renameAndUnlinkInBackgroundItemAt:path:
_mkdirAppLibraryIfNeeded:
__itemAtURL:didDisappearWithPurposeID:
releaseAccess:
deleteAllContentsOnServerWithCompletionBlock:
syncContextForZone:
uploadStream
operations
_removeAllShareAcceptanceBlocks
createAppLibraryOnDisk:createdRoot:createdDocuments:rootFileID:
createSharedAppLibraryOnDiskWithMangledID:createdRoot:rootFileID:
_t_flushIdleBlocks
destroySharedClientZone:
dropIndexForClientZone:
syncState
willInitialSyncDownForClientZone:
scheduleResetServerAndClientTruthsForReason:
cancelReset
scheduleReset:
forceMoveToCloudDocs
scheduleMoveToCloudDocs
defaultPrivateAppLibrary
shouldAutoMigrateToCloudDocs
serverZoneIsCreated
scheduleZoneMovesToCloudDocs:
fileURLWithPathComponents:
writeToURL:atomically:
setResourceValues:error:
renameAndUnlinkInBackgroundItemAtPath:
stringByAppendingPathExtension:
lostStamp
updateFromFSAtPath:itemID:parentID:isPackageFault:
setFilename:
initWithLocalStatInfo:
setFilename:forceRename:
brc_representableHFSFileNameWithSuffix:addedExtension:makeDotFile:
_finderTagsFromRelativePath:
_modeFromRelativePath:isPackageFault:
br_getTagNames:error:
_updateMetadataFromFSAtPath:itemID:parentID:isPackageFault:
_markLiveFromStageAsType:
initWithFSGenerationID:
initWithRelativePath:itemID:parentID:
initAsShareAcceptFaultWithName:
_setParentID:
_setItemScope:
_setCKInfo:
_markClearedFromStage
_moveItemAsideWithUUIDString
_generatedBouncedFilename:
_migrateBouncedNameToLocalName
_migrateBouncedNameToName
_clearBouncedName
diffAgainstLocalInfo:
updateLocationAndMetaFromFSAtPath:itemID:parentID:isPackageFault:
_markReserved
_markAlmostDead
updateAsAppLibraryRoot:
_markDead
_markFound
_markLostAddingBackoffWithMode:appLibrary:
_markStagedWithFileID:generationID:documentID:
_updateStatMeta:
_markLiveFromStageAsFault:
_clearFileID
_clearGenerationID
_processingStamp
_stagedGenerationID
_stagedFileID
_physicalName
_bouncedName
isKnownByServerOrInFlight
checkIsInDocumentsScopeWithParent:
documentsItemIDWithAppLibraryRowID:
itemID:isStrictChildOfItemID:
parentItemOnFS
maxSyncPathDepth
_refreshAppLibraryFromParent
null
br_stringByDeletingPathBounceNo:
_initWithRelativePath:parentID:
_initWithLocalItem:
_initFromPQLResultSet:session:db:error:
_parentItem
_updateAppLibraryPristineStates
needsInsert
isOnDisk
needsOSUpgradeToSyncUp
_isInterestingUpdateForNotifs
_ascendItemHierarchyWithBlock:
insertObject:atIndex:
appLibraryRowID
setOfAppLibraryIDsWithReverseAliases
_setOfParentIDs
_sendNotificationIfNeededWithDiffs:regather:
osNameRequiredToSync
osNameNeededToSyncUp
isIdleOrRejected
syncUpState
diffAgainstOriginalItem
markLostWithoutBackoff
_isInterestingUpdateForNotifsWithDiffs:
allocateNotifRank
allocateItemRowID
forgetWatchedLockedFileID:
docID:isNoLongerIndexableForNotifRank:itemIsLive:
diffAgainstLocalItem:
loadXattrsFromFD:structuralBlob:contentBlob:withMaximumSize:error:
initWithString:libraryRowID:
updateFromFSAtPath:parentID:
_checkZoneUpdateFromFSAtPath:parentID:
_updateAppLibraryFromFSAtPath:
needsReading
isEqualToFSGenerationID:
_contentXattrsHaveChangedAtRelativeAPath:
updateStructuralCKInfoFromServerItem:
updateVersionMetadataFromServerItem:preventVersionDiffs:
isReadAndUploaded
markItemForgottenByServer
scheduleSyncDownFirst
moveAsideLocally
markNeedsReading
_markLostWhenReplacedByItem:backoffMode:
clearFromStage
isDeadOrMissingInServerTruth
moveFromStageToGraveyard:forItemID:
brc_errorItemNotFound:
brc_errorCompatibilityIssue
newItemWithPath:parentID:
extension
validateLoggingToFile:
isLive
setSharingOptions:
asFSRoot
asSymlink
isFromInitialScan
isInDocumentOrTrashScope
serverPathMatchItemID
isShareAcceptationFault
isSharedByMe
hasShareIDAndIsOwnedByMe
physicalNameNeedsRename
inheritOSUpgradeNeededFromItem:
markNeedsOSUpgradeToSyncUpWithName:
digestDescription
_initWithServerItem:dbRowID:
initFromPQLResultSet:error:
initFromPQLResultSet:session:db:error:
parentItemInZone
fetchParentFileIDs
markForceNotify
updateLocationAndMetaFromFSAtPath:parentID:
markForceNeedsSyncUp
prepareForSyncUp
markLatestSyncRequestFailed
markLatestSyncRequestRejected
markLatestRequestAcknowledged
markFound
markLostWhenReplacedByItem:
markReserved
markNeedsDeleteWhenAlreadyDeadInServerTruth
markRemovedFromFilesystemForServerEdit:
markRenamedUsingServerItem:toRelpath:
markStagedWithFileID:generationID:
markStagedWithFileID:generationID:documentID:
updateStatMetadataFromServerItem:
updateItemMetadataFromServerItem:
markLiveFromStageWithAppLibrary:
markMetadataLive
beginBounceWithName:
beginBounceAndSaveToDBWithName:
markBounceFinished
markBounceFailed
needsUpload
localDiffs
inFlightDiffs
_serverZone
_ownerKey
_syncUpState
_orig
_localDiffs
_inFlightDiffs
_minimumSupportedOSRowID
_notifsRank
_sharingOptions
_knownByServer
_serverPathMatchID
_resolvedPath
_forceDelete
_forceDeletedAlready
_forceNotif
initWithFD:sizeLimit:error:
xattrNamesCount
xattrNamesBegin
structuralXattrNamesCount
structuralXattrNamesBegin
contentXattrNamesCount
contentXattrNamesBegin
value
applyToFileDescriptor:error:
shortDescription
removeXattrsOnFD:includingContentRelated:error:
initWithBytes:length:encoding:
setValue:
writeData:forTag:
initWithName:targetQueue:
syncUpThrottle
minWait
updateForTime:
availableBudgetWithDefaults:
syncUpMinimalBudget
nextDateWithBudgetWithDefaults:
setComputeNextAdmissibleDateForScheduling:
_newSyncDeadlineSource
_syncScheduleForContainersMetadata
_syncScheduleForSharedDatabase
_syncScheduleForZoneHealth
_scheduleCrossZoneMovePCSPrep
_updatePushTopicsRegistration
needsContainerMetadataSyncDown
needsSharedDBSyncDown
zoneHealthNeedsSyncUp
enumeratePrivateClientZones:
needsSyncDown
forcedSyncXPCActivity
schedulePeriodicSyncIfNecessary
syncDeadlineSource
_unscheduleClientZone:
setServerConfigurationURL:whenLoaded:
_scheduleUpdatePushTopicsRegistration
periodicSyncTimeInterval
serverChangeToken
changeToken
initWithContainerScheduler:metadataChangeToken:zoneHealthChangeToken:
scheduleSyncDownForSharedDatabaseImmediately:
serverConfigurationURL
URLWithString:
isFileURL
saveServerConfigToDB:
userDefaultsChanged
syncContextDidBecomeForeground:
syncContextDidBecomeBackground:
markAccountMigrationComplete
setNeedsContainerMetadataSyncDown:
sharedDbSyncDownCoalesceNanoseconds
setNeedsSharedDBSyncDown:
setNeedsSyncDown:
setNeedsPCSMigration:
initWithSession:state:
initWithSession:
syncClientZoneThrottle
syncClientZoneErrorThrottle
brc_containerResetErrorForSharedZone:resetReason:
setServerChangeToken:
shouldPerformAnotherBatch
shouldFetchAnotherBatch
sharedSyncContext
sharedDatabaseChangeState
isPowerOK
hasEnoughSpaceForDevice:
defaultTimeDeltaForEviction
totalEvictableSizeWithAccessTimeDelta:
uppercaseString
quotaAvailableForOwner:
debugDescriptionWithDefaults:
isDefaultOwnerOutOfQuota
PCSMigrationComplete
fetchAccountWaitOperationWithAccountReady:
syncedDownZoneHealthRequestID:
updateWithServerChangeToken:requestID:
shouldPerformPCSMigration
object
isShared
forceRefetchAppList
accountWaitOperation
serverPreferredPushEnvironmentWithCompletionHandler:
topic
publicToken
scheduleSyncDownForContainerMetadata
scheduleSyncDownForZoneHealth
sharedAppLibraryByMangledID:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
didChangeSyncStatusForZoneHealthForContainer:
didInitialSyncDownForClientZone:
closeContainers
setup
redoZonePCSPreperation
refreshPushRegistrationAfterAppsListChanged
initialSyncDownGroup
syncGroup
syncUpBudget
syncScheduler
zoneHealthSyncPersistedState
_containerMetadataSyncSource
_sharedDatabaseSyncSource
_zoneHealthSyncSource
_pushSource
_environmentName
_pushToken
_pushConnection
_containerMetadataPersistedState
_containerMetadataSyncState
_containerMetadataSyncOperation
_sharedDBSyncState
_sharedDatabaseSyncOperation
_zoneHealthPersistedState
_zoneHealthSyncState
_zoneHealthSyncOperation
_periodicSyncOperation
_lastPeriodicSyncDate
_migrateZonePCSOperation
_migrateZonePCSSource
_initialSyncDownGroup
_syncGroup
_syncUpBudget
_syncScheduler
contentsRecordID
initWithRecordIDs:
initWithDocumentItem:
setRecordID:
_recordID
brc_fakeRecordWithErrorMarkerFor20716676
_clearSignatures:isPackage:
initWithLocalVersion:
aggregatePackageSizeForPackageID:session:
updateLocationAndMetaFromFSAtPath:updateFilename:
archivedDataWithRootObject:
isPackageObj
sizeObj
diffAgainstLocalVersion:
initForPackage:
initWithServerVersion:
isMissingUploadsWithDiffs:
uploadedAssets
setUploadedAssets:
setUploadError:
_uploadedAssets
_uploadError
wantsThumbnail
userInitiated
initWithDesiredVersion:
unarchiveObjectWithData:
setOptions:
initWithServerVersion:serverName:
isStillValidForEtag:
serverName
_downloadError
_serverName
initWithAliasUUID:
nonEvictableExtensions
nonAutoEvictableExtensions
autoEvictableUTIs
nonAutoEvictableUTIs
isDocumentAutomaticallyEvictableWithExtension:
isEvictable
hasLocalContent
isDocumentAutomaticallyEvictableWithName:
nonEvictablePathComponents
isDocumentScopePublic
isCloudSyncTCCDisabled
isOwnedByMe
maximumDocumentAgeToBeGreedy
blacklistedThumbnailExtensions
queryItemStatus
unsaltedBookmarkDataWithRelativePath:
reverseAliasEnumeratorWithUnsaltedBookmarkData:session:
anyReverseAliasWithUnsaltedBookmarkData:inAppLibrary:
_updateLiveConflictLoserFromFSAtPath:
reverseAliasEnumeratorWithRelativePath:
cancelAndCleanupItemUpload:
makeSideFaultInStageGatherFileID:generationID:documentID:properties:inAppLibrary:forCreation:error:
stageFaultForCreation:name:size:isPackage:
setVersionToStage:diffsWithServerItem:options:needsSave:
contentsRecordIDInZoneID:
reportProblemWithType:recordName:
isEqualToData:
updateContentsCKInfoAndDeviceIDFromServerItem:
didFlushStagedFileID:
stageFaultForCreation:serverItem:
isEqualToGenerationID:orSignature:
packageChangedAtRelativePath:
removeLiveConflictLoserEtag:
addResolvedConflictLoserEtag:
clearVersionSignatures:isPackage:
markForceUpload
uploadItem:
createThrottleID:zone:state:
conflictLoserState
liveThumbnailSignature
shouldAutomaticallyDownloadThumbnail
documentWasCreated:
_updateReadThrottleIfNeededForRowID:forCreation:
_updateRecursivePropertiesInDB:dbRowID:diffs:
document:didCompleteDownloadWithError:
_nukePackageItemsFromDB:
_updateUploadThrottleIfNeededWithDiffs:
isAutomaticallyEvictable
shouldIndexDocument:
document:updatedIndexability:
didUpdateMtimeOnDocument:
recentDocumentsService
recentDocumentsListUpdated
documentUpdateEvictability:
didUpdateDocument:
_needsSyncBubbleRecomputeForError:origError:
recomputeAllItemsDidUploadState
brc_isEverRetriable
documentWasDeleted:
popOnDiskBlockForItemID:
brc_errorNotInCloud:
hasFilePresenterForURL:
filePresenterIdentifierForURL:
setVersionToStage:options:needsSave:
_shouldIndexAtURL:forItem:
spotlightIndexerMaxHierarchyDepth
anyReverseAliasInAppLibrary:toRelativePath:
isSharedDocument
isVisibleIniCloudDrive
shouldBeGreedy
clearDesiredVersion
forceiWorkConflictEtag:
forceVersionConflictByClearkingCKInfo
forceiWorkSharingInfoResend
appDidResolveConflictLoserWithEtag:
markUploadedWithRecord:
markOverQuotaWithError:
setLiveThumbnailSignature:
_currentVersion
_desiredVersion
_liveConflictLoserEtags
_resolvedConflictLoserEtags
_shouldAutomaticallyDownloadThumbnail
_liveThumbnailSignature
applyMetadataOnFileID:liveFD:
renameAndUnlinkInBackgroundItemAtRelpath:
derivedAliasItemIDWithOwnerName:
coordinatedURLAppLibrary
initAsShareAcceptationFaultWithFilename:itemID:appLibrary:
markLiveFromStageAsShareAcceptationFault
stageShareAcceptationFaultWithName:
deleteShareAcceptationFault
getPrivateAppLibraryAliasURL:aliasContainer:
setTracker:
setQueue:
setStartTracingCode:
setEndTracingCode:
initWithTracker:queue:startCode:endCode:
sections
setSections:
startTracingCode
endTracingCode
_startTracingCode
_endTracingCode
_sections
_willRequestCoordinationWithContext:url1:url2:
_didObtainCoordination:context:url1:url2:handler:fcHandler:error:
__coordinateReadingItemAtURL:options:purposeID:byAccessor:
__coordinateWritingItemAtURL:options:purposeID:byAccessor:
__coordinateWritingItemAtURL:options:writingItemAtURL:options:purposeID:byAccessor:
__itemAtURL:didReconnectWithPurposeID:
__itemAtURL:didMoveToURL:purposeID:
itemDidChangeAtPath:logicalFilename:
itemDidAppearAtPath:logicalFilename:
itemDidDisappearAtPath:logicalFilename:
itemAtPath:didBounceToName:
itemAtPath:logicalFilename:didMoveToPath:logicalFilename:hasContentUpdate:
scheduleReadOfItemAtURL:queue:taskTracker:accessor:
scheduleDeleteOfItemAtURL:queue:taskTracker:accessor:
scheduleUpdateOfItemAtURL:queue:taskTracker:accessor:
scheduleRenameOfItemAtURL:toItemAtURL:contentUpdate:queue:taskTracker:accessor:
isUpdateForReconnecting
_startStamp
_url1
_url2
_timer
_doneHandler
_cancelled
_isUpdateForReconnecting
_forRead
brc_containerMetadataPropertiesData
brc_containerMetadataIconPaths
updateMetadataWithRecordData:iconPaths:
recordChangeTag
_updateContainerMetadataFromRecord:stripIcons:
brc_containerMetadataZoneID
initWithSession:zoneID:
setOptimisticSubscribe:
setCreateZoneAndSubscribeCompletionBlock:
maxRecordCountInFetchRecordsOperation
arrayByAddingObject:
setShouldFetchAssetContents:
lastModifiedUserRecordID
modificationDate
validateContainerID:
getOrCreatePrivateAppLibraryAndZonesIfNecessary:appLibraryExists:
propertyListWithData:options:format:error:
isDocumentScopePublicWithProperties:containerID:
brc_containerMetadataIconNames
hasIconWithName:
brc_cloudKitErrorForZone:
setLastSyncDate:
arrayWithObjects:
setRecordIDsToVersionETags:
setPerRecordCompletionBlock:
brc_isResetError
recomputeAppSyncBlockState
_completedWithServerChangeToken:
performAfterFetchingAssetContents:
performAfterFetchingRecordChanges:
performAfterCreatingZoneIfNeeded:
_recordIDsForDesiredAssets
_desiredKeysForDesiredAssets
_recordIDsToVersionETagsForDesiredAssets
_containerIDsUpdated
_shouldFetchAnotherBatch
secondaryRecordID
progressPublished
doneSize
setDoneSize:
setRecord:
secondaryRecord
setSecondaryRecord:
initWithDocument:stageID:transferSize:
throttleID
_throttleID
_totalSize
_stageID
_progressPublished
_record
_doneSize
_progress
uploadsDeadlineScheduler
addTransfer:
perUploadCompletionBlock
_uploadRecordsByID:
createCloudKitZoneWithCompletion:
initWithRecordsToSave:recordIDsToDelete:
setShouldOnlySaveAssetContent:
setSavePolicy:
setAtomic:
setProgress:forRecordID:
setPerRecordProgressBlock:
serverZoneByName:ownerName:
shouldRecreateServerZoneAfterError:
finishedTransferForRecord:recordID:error:
setModifyRecordsCompletionBlock:
setPerUploadCompletionBlock:
initWithSyncContext:clientZone:
addItem:stageID:record:transferSize:
sendTransferCompletionCallBack:error:
mainWithTransfers:
actionPrettyName
_perUploadCompletionBlock
syncContextForZone:metadata:
initWithZoneName:ownerName:
clientRequestID
lastSyncDownStatus
pendingChangeToken
setLastSyncDownDate:
setLastSyncDownStatus:
setChangeToken:
setPendingChangeToken:
setClientRequestID:
fileURL
dataWithContentsOfURL:
stringValue
br_representableHFSFileNameWithBase:suffix:extension:makeDotFile:
localizedDescription
br_nameIsRepresentableOnHFS
deserializeFilename:basename:bounceno:extension:userInfo:error:
br_representableDirectoryExtension
br_emptyFilenameAlternativeName
_saveItemID:stat:record:origName:base:no:ext:
brc_itemIDWithSession:error:
deserializeStatInfo:itemID:session:error:
_saveItemID:stat:record:error:
deserializeVersion:fakeStatInfo:clientZone:error:
deserializeiWorkSharingOptions:error:
brc_isForcedPackageExtension
brc_addForcedPackageExtension:
_saveItemID:version:record:iWorkSharingOptions:
deserializeSymlinkTarget:error:
brc_itemIDWithSession:
deserializeAliasInfo:serverZone:error:
currentUserParticipant
brc_shareItemIDWithLibraryRowID:
brc_shareOwnerItemID
deserializeSharingOptions:error:
_saveEditedDirOrDocStructureRecord:error:
_saveEditedAliasRecord:error:
_saveEditedSymlinkRecord:error:
_saveEditedFinderBookmarkRecord:error:
_saveEditedDocumentContentRecord:error:
_saveEditedShareRecord:error:
_saveEditedRecord:error:
_reportCantSaveProblem:record:
_markItemDeadForRecordID:
_markShareIDDead:
nextRank
charAtIndex:
_structurePrefixForType:
setNextRank:
forgetPendingChangeToken
privateServerZoneByID:
pendingFetchDeletedRecordsCount
pendingFetchRecordsCount
saveInconsistentEditedRecords:deletedRecordIDs:deletedShareRecordIDs:
pendingFetchRecordsEnumerator
_saveEditedStructureRecords:ignoringRecordIDs:
_enumeratePendingFetchDeletedNormalRecordIDs
_saveDeletedRecordIDs:ignoringRecordIDs:
_saveEditedContentRecords:ignoringRecordIDs:
_enumeratePendingFetchDeletedShareRecordIDs
_saveEditedShareRecords:deletedShareRecordIDs:ignoringRecordIDs:
allocateRanks
postNotificationName:object:userInfo:
distantPast
activated
_collectTombstoneForRank:
enumerateIndexesUsingBlock:
didGCTombstoneRanks:
forgetChangeTokens
forgetClientRequestID
resetServerTruthAndDestroyZone:
_crossZoneMoveDocumentsToZone:
performBlock:whileRemovingPrivateClientZone:
initFromPQLResultSet:session:error:
initFromPQLResultSet:serverZone:error:
asPrivateZone
metadataSyncContextIfExists
hasXattrWithSignature:
storeXattr:
xattrForSignature:
handleBrokenStructure
didSyncDownRequestID:serverChangeToken:editedRecords:deletedRecordIDs:deletedShareRecordIDs:movedZoneNames:syncStatus:
collectTombstoneRanks:
deleteAllContentsOperation
itemsEnumeratorWithDB:
_zoneName
_metadataSyncContext
initWithRecordName:zoneID:
directoryReferenceInZoneID:action:
initWithRecordID:action:
_directoryRecordName
directoryStructureRecordIDInZoneID:
documentStructureRecordIDInZoneID:
validatingDirectoryReferenceInZoneID:
pcsChainParentReferenceInZoneID:
pcsChainDocumentStructureReferenceInZoneID:
structureRecordIDForItemType:appLibrary:aliasTargetZone:
initWithRecordType:recordID:
baseContentsRecord
structureRecordID
baseStructureRecord
serializeStatInfo:diffs:stageID:deadInServerTruth:pcsChaining:
_serializeStructuralPluginHints:
pluginFields
setPluginFields:
structureRecordBeingDeadInServerTruth:stageID:pcsChained:
brc_SHA256
targetReference
serializeSystemFields:
brc_isAppLibraryRootRecordID
brc_isAppLibraryDocumentsRecordID
initAsDocumentsWithAppLibraryRowID:
_itemIDWithLibraryRowID:session:
brc_appLibraryRootZoneName
brc_appLibraryDocumentsZoneName
brc_isZoneRootRecordID
brc_itemIDOfTargetWithLibraryRowID:session:
brc_itemType
_deserializeValue:forKey:expectClass:allowNil:errorDescription:
getOrReserveLibraryRowIDForLibrary:ownerName:
creationDate
modifiedByDevice
permission
setCKInfoFieldsInRecord:
serializeFilename:forCreation:setExtension:
br_stringByDeletingPathBounceNo:andPathExtension:
dataUsingEncoding:
zoneRootItemID
serializeFilename:forCreation:
createURLForUploadWithStageID:name:
writeToURL:options:error:
initWithFileURL:
symlinkTarget
initShareIDWithDocumentItem:
setShare:
serializeVersion:diffs:deadInServerTruth:
brc_sharedDocumentDisplayName
containerID
brc_sharedDocumentExtension
iWorkShareableExtensions
baseToken
brc_currentUserOwnsLastEditorDevice
JSONObjectWithData:options:error:
numberWithUnsignedShort:
brc_isInterestingRecordForSyncDown
brc_oplockMergeEtag
brc_updateDroppedReason
brc_safeToGetURL
brc_lastEditorDeviceName
rootDirectoryRecordForZoneID:
rootAppLibraryRecordForAppLibraryID:zoneID:
desiredKeysWithMask:
copyDataRepresentation
iconURLs
brc_containerMetadataRecordWithContainer:
_brc_isOwner
participants
initWithRecordType:
brc_isfakeRecordWithErrorMarkerFor20716676
brc_stringByDeletingPathExtension
brc_mangledNameFromURLFragment:
fragment
brc_updateWithLogicalName:
base64EncodedStringWithOptions:
deletedRecordIDs
recordIDsToDeleteToEtags
pluginFieldsForRecordDeletesByID
syncUpStructureDeleteCost
createdAppLibraryNames
recordsToSave
prepareDeletionSyncUpWithOperation:defaults:
prepareEditSyncUpWithOperation:defaults:
prepareAppLibraryRootSyncUpWithOperation:
fakeSync
syncUpInitialItemCost
syncUpStructureEditCost
syncUpStructureCreateCost
syncUpDocumentDeleteCost
syncUpDataDeleteCost
packageWithPackage:error:
packagesInFlight
conflictLosersToResolveByRecordID
recordsNeedingUpdatedSharingProtectionInfo
recordsNeedingNewSharingProtectionInfo
iworkUnsharedShareIDs
iworkRenamedShareIDsToNames
syncUpDocumentEditCost
syncUpDataEditCost
syncUpDocumentCreateCost
syncUpDataCreateCost
isSyncBlockedOrBrokenStructure
clearSyncUpError
initWithClientZone:
batchSize
itemNeedingPCSChaining
retryAfter
nextSyncUpRequestID
initWithZone:
prepareWithMaxCost:retryAfter:
removeDB
_performPCSChainOperationIfNecessaryWithCompletion:
setRecordsToSave:
setRecordIDsToDelete:
setRecordIDsToDeleteToEtags:
setPluginFieldsForRecordDeletesByID:
setConflictLosersToResolveByRecordID:
setupOperationForTestsIfNeeded:recordsToSave:
setClientChangeTokenData:
associateSyncUpStageID:withOperation:
brc_isCloudKitErrorRequiringAssetReupload
brc_isCloudKitErrorUnsupportedOSForItemAndGetMinimumSupported:
brc_isCloudKitOutOfQuota
ownerDidReceiveOutOfQuotaError:
scheduleQuotaFetchIfNeededForOwner:
setShouldFetchAssetContent:
brc_checkErrorsFromCloudKit:
setPublicPermission:
removeParticipant:
_performModifyRecordsOrPCSChainOperationWithCompletion:
performShareUpdate:
_scheduleShareUpdateAndModifyRecordsAndZoneCreationOperation
_performShareUpdateAndModifyRecordsWithCompletion:
setMutableEncryptedPublicSharingKey:
setBaseToken:
setRoutingKey:
initShareIDWithRecordID:serverZone:
publicSharingIdentity
routingKey
encryptedPublicSharingKey
_setSharingFieldsOnContentRecord:withProtectionData:baseToken:routingKey:
getNewWebSharingIdentity:
_performUpdateSharingProtectionDataIfNecessary:
syncUpOperationForZone:maxCost:retryAfter:
setPackagesInFlight:
setDeletedRecordIDs:
setIworkUnsharedShareIDs:
setIworkRenamedShareIDsToNames:
setRecordsNeedingNewSharingProtectionInfo:
setRecordsNeedingUpdatedSharingProtectionInfo:
setItemNeedingPCSChaining:
setStageID:
syncUpCompletionBlock
setSyncUpCompletionBlock:
cost
setServerZone:
_requestID
_cost
_recordsToSave
_packagesInFlight
_createdAppLibraryNames
_deletedRecordIDs
_iworkUnsharedShareIDs
_iworkRenamedShareIDsToNames
_recordsNeedingNewSharingProtectionInfo
_recordsNeedingUpdatedSharingProtectionInfo
_recordIDsToDeleteToEtags
_pluginFieldsForRecordDeletesByID
_itemNeedingPCSChaining
_conflictLosersToResolveByRecordID
_syncUpCompletionBlock
itemCount
initWithShareURL:client:session:
_stepNameAtIndex:withPrefix:
_openShareURLInWebBrowser:withReason:
localClientZone
_runningShareIDs
userNotificationClass
_isiWorkShare
_isURLWellFormed
_isAppInstalled
_isUserSignedInToiCloudDrive
_isAccountRestricted
_fetchShareMetadata
_showSharingJoinDialog
_parseShareMetadata
_waitForSharedItemToSyncDownOnOwner
_waitForFaultToBeOnDiskOnOwner
_createSideFaultOnDisk
_checkIfShouldWaitUntilDownloadCompletion
_openSharedSideFaultFile
_acceptShareURL
_waitForSharedItemToSyncDownOnRecipient
_waitForFaultToBeOnDiskOnRecipient
_prepareToDownloadSharedDocument
_openSharedDownloadedDocumentIfStillNeeded
_endAcceptationFlow
_isDocumentSharingSupported
_performNextStep
methodForSelector:
_performNextStepInQueue
indexOfObject:
_jumpToSelectorInQueue:
participantType
participantStatus
brc_applicationContainerID
defaultWorkspace
openApplicationWithBundleID:
_isOwner
initWithShareMetadata:syncContext:
addAcceptOperation:forItemID:
host
brc_applicationBundleID
bundleProxyForIdentifier:
bundleURL
_openAppStoreForShareURL:
brc_errorNoSuitableClientApp
entitlements
_openiCloudSettings
brc_errorLoggedOut
_showGenericErrorAndFinish:
brc_errorDriveDisabledOrAppLibraryDisabled
br_isManagedAppleID
initWithShareURLs:
setPerShareMetadataBlock:
setFetchShareMetadataCompletionBlock:
_isOwnerOrShareAlreadyAccepted
brc_errorOperationCancelled
getOrCreateSharedAppLibraryAndZones:ownerName:needsActivate:
_createAcceptShareOperation
brc_iWorkPathExtension
_openiWorkAppPreemptively
performBlock:whenSyncDownCompletesLookingForItemID:
performBlock:whenItemWithIDIsOnDisk:
_createAliasInAppLibrary:target:
_captureOpenInfoFromDocument:
byPath
moveFromStage:toPath:fileName:error:
_jumpToSelector:
documentProxyForURL:sourceIsManaged:
applicationsAvailableForOpeningDocument:
supportsOpenInPlace
operationToOpenResource:usingApplication:userInfo:
setCompletionBlock:
visibilityForCurrentAccount
initWithURL:resolvingAgainstBaseURL:
setScheme:
openSensitiveURL:withOptions:error:
brc_errorAcceptAlreadyInProgressForURL:
setAcceptShareCompletionBlock:
openSensitiveURL:withOptions:
componentsWithURL:resolvingAgainstBaseURL:
query
setQuery:
setFragment:
openURL:withOptions:
initWithShareMetadata:client:session:
moveDialogToFront
_userNotification
_acceptationFlow
_stepIndex
_shareURL
_shareID
_shareMetadata
_share
_localAppLibrary
_aliasAppLibrary
_shareDocumentURL
_aliasURL
_documentName
_shareDocumentFileProviderString
_xpcClient
_acceptShareOpBlockingSyncDown
aa_primaryAppleAccount
aa_appleAccountWithPersonID:
aa_personID
propertiesForDataclass:
setProperties:forDataclass:
br_isEnabledForiCloudDesktop
aa_isUsingCloudDocs
aa_firstName
aa_lastName
aa_displayName
aa_isManagedAppleID
aa_isPrimaryAccount
br_isiCloudAccount
br_isPrimaryAccount
accountType
aa_setUsesCloudDocs:
aa_setCloudDocsMigrationComplete:
aa_isCloudDocsMigrationComplete
br_setEnabledForiCloudDesktop:
br_isEnabledForDesktopSync
br_isEnabledForUbiquity
br_firstName
br_lastName
br_displayName
br_isPrimaryiCloudAccount
sharedClientZoneByMangledID:
newItemIDFromEnclosureUUID:libraryRowID:
privateAppLibraryByMangledID:
hasRootForSyncedFolderType:
rootForSyncedFolderType:
_resolvePathInMobileDocsRoot:appLibrary:clientZone:
brc_isCloudKitErrorRequiringSkipThrottling
brc_syncOperationErrorKind
decodeDoubleForKey:
decodeIntForKey:
encodeDouble:forKey:
encodeInt:forKey:
inactivityKickbackDelay
inactivityKickbackRatio
ratioOnSuccess
updateAfterSchedulingTaskWithMinimumDelay:
ratioOnQuotaErrorClear
br_isCloudDocsErrorCode:
ratioOnFailure
maxWait
initWithContainerID:isSyncDown:
updateAfterSchedulingTask
updateForClearingOutOfQuota
updateForError:
clear
delay
nextTry
setContainerID:
lastErrorKind
_isSyncDown
_lastErrorKind
_delay
_nextTry
_containerID
encodeBytes:length:forKey:
lastDay
syncUpDailyBudget
_timeToLoseAmount:count:
lastHour
syncUpHourlyBudget
lastMinute
syncUpMinutelyBudget
consume:
_values
syncDownThrottle
maxRecordCountInModifyRecordsOperation
modifyRecordsCountMultiplicativeDecrease
modifyRecordsCountAdditiveIncreaseFraction
setDefaultAppLibrary:
_startSync
setSyncStateBits:
brc_isCloudKitErrorUnsupportedOSForZoneAndGetMinimumSupported:
brc_isCloudKitErrorZoneMigrated
brc_isCloudKitErrorNeedsPCSPrep
isDocumentsItemIDWithSQLiteValue:
itemCountPendingUploadOrSyncUpAndReturnError:
sizeOfItemsNeedingSyncUpOrUploadAndReturnError:
clientZone:didFinishUploadingAllItemsWithError:
disconnectNSMDQListenerAsync
didUpdateClientZone:
_t_isIdle
xattrForSignature:db:
_createCloudKitZoneWithCompletion:
initWithServerZone:
completionBlock
removeSyncDownDependency:
migrationQueryKeyForContainerID:continuationCursor:
initWithServerZone:migrationKey:continuationCursor:
hasHighPriorityWatchers
_syncUpOfRecords:createdAppLibraryNames:didFinishWithError:
makeNextFlushFullSync
_t_syncDownBlocked
syncDownImmediately
_markRequestIDAcked
_increaseSyncUpBatchSizeAfterSuccess
_decreaseSyncUpBatchSizeAfterError
brc_isCloudKitErrorRequiringAssetRescan
brc_isCloudKitErrorSafeToSyncUpWithoutSyncDown
_markLatestSyncRequestFailed
finishedSyncingUpItem:withOutOfQuotaError:
learnCKInfosFromSavedRecords:
syncThrottles
postiCloudDriveAppInstallationNotification
setVisibilityForCurrentAccount:
onlyTreatCaughtUpAsConsistent
serverAliasByUnsaltedBookmarkData:
_fixupMissingCrossMovedItems
itemsWithInFlightDiffsEnumerator
serverItemByParentID:andName:
markMovedToCloudDocsZone
removeAppLibrary:
_hasAllItemsDidUploadHandlers
_allItemsDidUploadWithError:
removeIndexes:
initWithIndex:
_dumpItemsToContext:error:
anyObject
serverRankByItemID:db:
serverItemByRowID:db:
documentItemByItemID:db:
existsByItemID:db:
_removeOnDiskBlockToPerformForItemID:
_removeDownloadedBlockToPerformForItemID:
_prepareForForegroundSyncDown
_dumpRecursivePropertiesOfItemByRowID:context:depth:
descriptionForItem:context:
thumbnailsOperationsByID
dumpMigrationQueriesForContainerID:
_t_osNamesByItemIDBlockedForSyncUp
_t_syncBlockedUntilOSName
setValue:forKey:
setAdditionalRequestHTTPHeaders:
isApplicationInstalledForContainerID:
syncUpBatchSize
registerAllItemsDidUploadTracker:
unregisterAllItemsDidUploadTracker:
hasDefaultAppLibrary
itemByFileID:
faultsEnumerator
didClearOutOfQuota
addSyncDownDependency:
resetSyncBudgetAndThrottle
notifyClient:afterNextSyncDown:
notifyClient:whenIdle:
syncDownOperation:didFinishWithError:status:
handleRootRecordDeletion
didApplyTombstoneForRank:
_resetItemsTable
serverItemByRowID:
directoryOrRootItemIDByFileID:
existsByItemID:
performBlock:whenItemWithIDIsDownloaded:
removeItemOnDiskBlock:
removeItemIsDownloadedBlock:
removeSyncDownForItemIDBlock:
_appendToString:descriptionOfFieldNamed:inResultSet:pos:containsSize:context:
_t_addItemID:blockedForSyncUpUntilOSName:
_t_removeItemIDSyncUpBlocking:
_t_removeAllItemIDsSyncUpBlocking
_t_markBlockedUntilOSName:
_t_pauseSyncDown
_t_resumeSyncDown
currentRequestID
lastAttemptedSyncDownDate
setLastAttemptedSyncDownDate:
_zoneID
_activated
_isInitialCreation
_appLibraries
_defaultAppLibrary
_readerThrottle
_createZoneOperation
_createZoneQueue
_zoneCreationCompletionBlocks
_syncUpRetryAfter
_syncState
_syncUpOperation
_lastSyncUpError
_syncDownOperation
_syncDeadlineSourceResumer
_lastSyncDownError
_syncUpThrottle
_syncDownThrottle
_syncDeadlineSource
_appliedTombstoneRanks
_lastInsertedRank
_lastSyncDownDate
_lastAttemptedSyncDownDate
_resetTimer
_syncDownBlockToPerformForBookmarkData
_shouldShowiCloudDriveAppInstallationNotification
_onDiskBlockToPerformForItemID
_downloadedBlockToPerformForItemID
_syncDownBlockToPerformForItemID
_nextSyncDownBarriers
_currentSyncDownBarriers
_nextIdleHandlers
_syncDownDependencies
_allItemsDidUploadTrackers
_syncUpBatchSizeMultiplier
_taskTracker
_syncThrottles
_osNameRequiredToSync
loadFromClientStateInSession:options:
assertQueue
assertionQueue
setAssertionQueue:
_assertionQueue
_value
brc_SHA256WithSalt:
packageWithError:
anchorAtURL:error:
beginTransaction
addItem:
endTransaction
initWithRegistry:stageID:name:
addItem:error:
closeAndReturn
_registry
_package
initWithShareMetadatas:
setPerShareCompletionBlock:
setAcceptSharesCompletionBlock:
acceptShareCompletionBlock
_acceptShareCompletionBlock
addProblemWithType:recordName:
setPendingRequestID:
setNeedsSyncUp:
pendingRequestID
serverItemByParentID:andName:db:
existsByParentID:andName:db:
privateServerZone
deleteAllContentsOperationLastError
_checkResultSetIsEmpty:logToFile:reason:result:
prepareProblemReportForSyncWithRequestID:
itemByParentID:andName:
reservedItemByParentID:andDisplayName:
faultByParentID:andDisplayName:
existsByParentID:andName:
performBlock:whenSyncDownCompletesLookingForAliasWithBookmarkData:
removeSyncDownForAliasData:
_syncBarriers
_zoneHealthState
_problemReport
_faultsLiveBarriers
mobileDocumentsURL
localizedAdditionalDescription
sumOfCompletedUnitCountDelta
sumOfTotalUnitCountDelta
setSumOfCompletedUnitCountDelta:
setSumOfTotalUnitCountDelta:
versionSizes
updateUnitCount
updateLocalizedDescriptionWithOptions:
copyProgressInfoToProgress:options:
verifyFutureProgressIsNotFinished
childProgresses
previousUnitCounts
_versionSizes
_childProgresses
_previousUnitCounts
outOfQuotaDocIDs
setLocalizedAdditionalDescription:
allUploadsPendingQuota
_outOfQuotaDocIDs
previousCompletedUnitCount
setPreviousCompletedUnitCount:
previousTotalUnitCount
setPreviousTotalUnitCount:
resumeUnitCounts
_resumeUnitCounts
_updateGlobalProgress
_destroyDownloadWithReason:
_destroyUploadWithReason:
shortValue
_stopObservingProgress:
observeValueForKeyPath:ofObject:change:context:
intervalToWaitBeforeShowingAdditionalDescription
_updateAppLibraryID:
_cancelDownloadForDocumentID:destroyIfLast:willRetryTransfer:
_createDownloadMetadataWithCompletedUnitCount:totalUnitCount:
_updateDocument:
_deleteDocument:reason:
_cancelUploadForDocumentID:inState:willRetryTransfer:
numberWithChar:
_startObservingProgress:
_cancelUploadForDocumentID:inState:willRetryTransfer:pendingQuota:
_keyPathsToObserve
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
_createNewGlobalProgressInGroup:completedUnitCount:totalUnitCount:
_destroyProgressInGroup:reason:
minimalSizeToShowAdditionalDescription
_resumeProgressForAnotherOperationIfNeeded
valueForKeyPath:
_createNewIndeterminateGlobalProgress
_cancelUploadForDocumentID:inState:
_createUploadMetadataWithCompletedUnitCount:totalUnitCount:
_cancelDownloadForDocumentID:
willResumeDocumentUpload:
clearOutOfQuotaState
stopPublishingProgress
updateUploadThrottleForDocument:toState:
_lazyInitDone
_updatePacer
_operationTimer
_operationTimerSuspendCount
_showExtendedInfo
_networkReachable
_globalProgress
_appLibrariesNotLive
_uploads
_downloads
nextItemRowID
setNextNotifRank:
nextPackageItemRank
allocatePackageItemRank
setNextPackageItemRank:
_nextItemRowID
_nextNotifRank
_nextPackageItemRank
initWithServerItem:
appLibraryForRootItem
_t_pcsChainState
originalName
_zone
_needsInsert
_symlinkTarget
_originalName
_rank
_latestVersion
_fetchByFileID:
_fetchByDocumentID:
_byPathWithLastPathComponent:
_fetchByPath
globalItemByFileID:
globalItemByDocumentID:
lookupForRelativePath:
setByFileID:
setByDocumentID:
byFileID
byFileIDGlobally
byDocumentID
byDocumentIDGlobally
serverByPath
byPathWithLastPathComponent:
relpathOfItem
relpathOfFSEvent
_pathOfItem
_relpathOfFSEvent
_matchByFileID
_matchByDocumentID
_matchByPath
_serverItem
_serverByPath
_packageItem
_matchByFileIDGlobally
_matchByDocumentIDGlobally
_fetched
syncedRootURLs
initWithRootObject:
getCString:maxLength:encoding:
initWithUUID:
initWithUUIDObject:
privateUnmangledContainerID:
parseMangledItemID:mangledContainerID:etag:session:
itemUUIDString
initWithItemID:
_appLibraryRowID
_kind
_uuid
classOfNextMessage
setClassOfNextMessage:
initWithStream:
nextMessage
version
streamError
inputStreamWithURL:
initWithInputStream:
initWithDeviceID:fileID:
inputStreamWithFileAtPath:
streamStatus
itemClass
initWithAsset:
_stream
_reader
_error
outputStreamWithURL:append:
initWithOutputStream:
setVersion:
writeMessage:
_handleStreamError
_applyQuarantineMetadataWithManifestItem:fd:
_computedFileModeForPackageItem:
stageInPackageFileUmask
_packageItem:matchesMode:
_applyFileMetadataWithManifestItem:packageRootFD:
copyPackageFileWithPackageFd:toStageFd:relpath:
stageInPackageDirectoryUmask
_applyDirectoryMetadataWithManifestItem:packageRootFD:
itemAtIndex:
_stageExistingPackageItem:withLiveFd:stageFd:
dataWithContentsOfURL:options:error:
setXattrs:
setItem:
addLocalItem:
initWithZone:stageID:url:
stagePackageWithReader:package:xattrsPackage:stageItemURL:livefd:recordName:
_writer
br_qtnFlags
initWithPattern:options:error:
rangeOfFirstMatchInString:options:range:
enumerateSharedClientZones:
sortUsingComparator:
_clientZonesMatchingSearchString:
brc_errorClientZoneNotFound:
brc_errorAppLibraryNotFound:
arrayWithCapacity:
singleClientZoneMatchingSearchString:error:
maxRecordCountInQuerySharedRecordsOperation
initWithCursor:
initWithQuery:
setZoneID:
setRecordFetchedBlock:
setQueryCompletionBlock:
initWithRecordType:predicate:
_performQuery:recordFetchedBlock:completion:
_performAfterFetchShares:
_performAfterQueryingForShareIDs:
_saveQueryRecords:
migrationQueryForContainerID:key:didCompleteWithContinuationCursor:
allMigrationKeysOrdered
_migrationKey
_continuationCursor
_recordsWithShareID
_sharedIDsToFetch
_shares
isOverQuota
currentStatus
lastServerUpdate
brc_errorPermissionError:
setWantsPublicSharingKey:
_performAfterCopyingPublicSharingKeyWithRecordID:completion:
brc_cloudKitErrorForRecordID:
setPublicSharingIdentity:
_performAfterGettingPublicSharingKeyForRecord:completion:
mutableEncryptedPublicSharingKey
_performAfterFetchingiWorkRoutingTokenIfNecessary:completion:
_performAfterFetchingiWorkSharingIdentityOnItem:wantRoutingKey:completion:
_performAfterFetchingSharingIdentityOnItem:completion:
_performAfterPreparingSharingIdentityIfNecessaryWhenWantRoutingKey:completion:
initWithName:zone:share:
_updateDBAndSyncDownIfNeededWithShare:
performAfterPreparingSharingIdentityIfNecessary:
_sharingIdentityPreparedRecord
isKnownToServer
initWithShare:zone:
shareID
initWithUserIdentityLookupInfos:
setShareParticipantFetchedBlock:
setFetchShareParticipantsCompletionBlock:
initWithUserIdentities:session:
_userIdentities
_shareParticipants
initWithRecordIDsToGrantAccess:recordIDsToRevokeAccess:
setRecordAccessGrantedBlock:
setRecordAccessCompletionBlock:
initWithItem:allowAccess:
_document
_allowAccess
_accessToken
_referenceIdentifier
initWithShareIDs:
setBaseTokensByShareID:
setShareParticipantKeyFetchedBlock:
setShareParticipantKeyCompletionBlock:
_fetchBaseTokenWithCompletion:
_contentRecordID
_participantKey
_iworkShareable
brc_errorMethodNotImplemented:
_performPCSChainBatch
ckContainerID
CKAssignToContainerWithID:
_completedWithURL:error:
initWithShare:zone:appName:
_appName
initWithRootRecord:shareID:
shortToken
_schedule
defaults
uploadBatchCount
_scheduleOneBatchWithQoS:
_setReachedCap:
_evaluateCap
setDidProgressBlock:
availableDiskSpaceDidChange
_addBatchOperation:
transferQueueTransferBudget
cancelTransferID:
addAliasItem:toTransferWithID:
progressForTransferID:
initWithSyncContext:name:scheduler:
startSchedulingMultipleItemsInteractively
endSchedulingMultipleItemsInteractively
streamDidBecomeReadyToTransferRecords
setStreamDidBecomeReadyToTransferRecords:
maxCountOfBatchesInFlight
setMaxCountOfBatchesInFlight:
_nextFire
_inFlightOpByID
_schedulingSource
_transferQueue
_inFlightSize
_transferBatchRequestWaiter
_isWaitingForTransferBatch
_hasReachedCap
_multipleItemsInteractiveSchedulingCount
_streamDidBecomeReadyToTransferRecords
_maxCountOfBatchesInFlight
setShareID:
brc_errorDocumentIsNotSharedAtURL:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
addXattrs:
xattrsCount
clearXattrs
xattrsAtIndex:
xattrsType
readTargetFromRelativePathAndSyncUp:
_registerSubscriptionForZoneID:isOptimisticSubscribe:
_createZoneWithZoneID:
initWithZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
setModifyRecordZonesCompletionBlock:
initWithZoneID:subscriptionID:
optimisticSubscribe
subscriptionOnly
setSubscriptionOnly:
createZoneAndSubscribeCompletionBlock
createdZone
_optimisticSubscribe
_subscriptionOnly
_createZoneAndSubscribeCompletionBlock
_createdZone
setMarkZonesAsUserPurged:
initWithLatestGCStartTime:
timeSinceLatestGCStartTime
_latestGCStartTime
_performInStageDirectory:block:
_fileIDMightHaveBeenUnlocked:
_openStageDirectory:
nonLocalFaultURLForAdditionName:
applyMetadataOnFileDescriptor:liveFileDescriptor:clientZone:statInfo:version:
_watchLockedRelpath:
_pathInStage:index:generationID:
_flockToMakeLiveAtPath:error:
stageDirectoryUmask
stageFileUmask
brc_fileURLWithFileDescriptor:
br_setTagNames:error:
cleanupStagedSyncUpWithID:
destroyAnchorAndPackageAnchoredAtURL:
_graveyardAt:path:forItemID:
minFileSizeForGraveyard
garbageCollectSpace:
purgeGraveyardSpace:withUrgency:
_purgeSpaceUnderQueue:withUrgency:
graveyardAgeDeltaInLowUrgency
graveyardAgeDeltaInMedUrgency
clientPackageDatabaseDirectory
anchorExistsForArchiverInfo:
gcPackagesInDirectory:dbInUseBlock:
garbageCollectPackages
enumeratePrivateServerZones:
_updatePersistedStateWithLatestGCStartTime:
removeLowDiskObserver:forDevice:
addLowDiskObserver:forDevice:
stageGCXPCActivity
lowDiskStatusChangedForDevice:hasEnoughSpace:
makeDirectoryInStageGatherFileID:generationID:error:
makeSymlinkWithTarget:inStageGatherFileID:generationID:error:
makeNonLocalVersionSideFaultWithAdditionName:appLibrary:statInfo:version:error:
makeItemLive:fromStage:bySwappingWith:fileName:error:
cleanupStagedUploadWithID:
associateDownloadStageID:withOperation:
rememberStagedDownloadWithID:gatherFileID:generationID:documentID:appLibrary:error:
moveOldVersionFromPath:error:
moveToGraveyardFromPath:forItemID:error:
existsInStage:generationID:
existsInOldVersionStage:generationID:
transferDocumentID:fromOldVersionStage:toStage:
purgeSpace:withUrgency:
purgableSpace
disarmLockedTestTimer
_stageDirectoryPath
_stageDirectoryFileID
_unflushedStagedFileIDs
_appLibrariesWithUnflushedFileIDs
_activeUploadStageIDs
_activeDownloadStageIDs
_watchedLockedFileIDs
_lockedTestTimer
_flushingQueue
_persistedState
_lowDiskSpace
dataWithPropertyList:format:options:error:
initWithURL:name:
brc_parseAdditionFilename:mangledContainerID:itemID:etag:session:
privateClientZoneByMangledID:
additionWithName:inNameSpace:error:
prettyNameForFilePresenterID:
addReaderID:completionHandler:
cancelReaderID:
_fileReactorID
_physicalURLForURL:
_provideItemAtURL:toReaderWithID:completionHandler:
_cancelProvidingItemAtURL:toReaderWithID:
_operationsByName
arrayWithContentsOfFile:
blacklistedPackageExtensions
brc_isBlacklistedPackageExtension
brc_loadForcedPackageExtensions
packageExtensionPlistWriteInterval
writeToFile:atomically:
fileExistsAtPath:isDirectory:
removeItemAtPath:error:
dictionaryWithContentsOfFile:
pathWithComponents:
spotlightUniqueIdentifier
spotlightDomainIdentifier
notifRank
setNotifRank:
setDatabaseID:
_notifRank
_databaseID
orderedSet
_searchableItemForDocument:
initWithItemContentType:
setAttributeSet:
setDisplayName:
setContentModificationDate:
setDocumentIdentifier:
setParentFileIdentifier:
setFileIdentifier:
_authorDisplayNamesForDocument:
setAuthorNames:
numberWithDouble:
setFileSize:
setKeywords:
setExpirationDate:
setDomainIdentifier:
setUniqueIdentifier:
_searchableItemsForDocuments:
beginIndexBatch
indexSearchableItems:completionHandler:
deleteSearchableItemsWithIdentifiers:completionHandler:
endIndexBatchWithClientState:completionHandler:
initWithIndex:queue:loggedInUserDisplayName:
addIndexOfDocument:
addDeletionOfDocID:
prepareAndSendIndexBatchForIndexToken:completion:
_toIndexDocuments
_deletedDocumentsIDs
_index
_loggedInUserDisplayName
initWithName:protectionClass:
deleteAllSearchableItemsWithCompletionHandler:
spotlightIndexerPacerInterval
_scheduleIndexing
setIndexDelegate:
spotlightIndexerFailureThrottleParams
_signalIndexing
_deleteAllRanks
_readyForIndexingWithAckedRank:
_scheduleThrottledTask:taskName:
_failedIndexing
_saveStateForNotifRank:
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
spotlightIndexerBatchSize
_deletedDocIdResultSetWithMinNotifRank:maxNotifRank:
_handleResetForRowID:notifRank:
indexingArbiter
_deleteAllItemsAndReindexResumingIndexing:completion:
fetchLastClientStateWithCompletionHandler:
_indexNextBatch
dropAllContainersIndexForSession:completionHandler:
searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:
searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
searchableIndexDidThrottle:
searchableIndexDidFinishThrottle:
setIndexingArbiter:
_failureThrottle
_failureTimer
_pacer
_readyForIndexing
_minNotifRank
_flushedNotifRank
_clientState
_indexingArbiter
pendingGroup
fetchOperationForTransfers:traceCode:
moveItemAtURL:toURL:error:
_stageWithSession:error:
perDownloadCompletionBlock
transferredObjectsPrettyName
_perDownloadCompletionBlock
_prepareSecondStageWithSession:manifest:package:error:
_stageWithSession:manifest:package:xattrsPackage:error:
liveItemIsPackage
liveDocumentID
desiredIndices
liveFileID
_liveFileID
_liveDocumentID
_liveItemIsPackage
_isFinderBookmark
_requiresTwoPhase
_desiredIndices
setDesiredPackageFileIndices:
_stageContentWithSession:error:
associateThumbnailImagesDictionary:serializedQuickLookMetadata:withImmutableDocument:atURL:error:
prepareAdditionCreationWithItemAtURL:byMoving:creationInfo:error:
_stageWithSession:creationInfo:error:
isLoser
_secondaryRecordID
_secondaryRecord
_sharedZone
_isLoser
_storage
_gsError
createAdditionStagedAtURL:creationInfo:completionHandler:
_readers
initWithZoneRootItemID:session:
_initWithServerItem:dbRowID:appLibrary:
_throttle
_deleteAllContentsOperation
_deleteAllContentsOperationLastError
thumbnailTransferQueueWidth
transferQueueMinBatchSize
quotaFetchPacerDelay
_scheduleQuotaFetchForDefaultOwner
_globalQuotaStateUpdateForDefaultOwner
_scheduleRetries
removeObjectAtIndex:
_resumeGlobalProgressForZones:queue:
uploadMaxInPkgFileSize
uploadMaxFileSize
largestPackageItemSizeInDocumentID:session:
brc_errorDocumentWithFilename:size:isTooLargeToUpload:
scheduleQuotaStateUpdateForOwner:
_thumbnailOperationForThrottleID:
_cancelThrottleID:
uploadThrottle
_buildItemTooLargeErrorIfNeeded:syncContext:
readerScanBatchSize
hasItemsOverQuotaForOwner:
setIsDefaultOwnerOutOfQuota:
_computeRecordForThrottleID:item:
_thumbnailOperationsMax
packageItemsForItem:order:
initWithDeviceID:fileID:generationID:
setPackageIndex:
updateWithPkgItem:
pathInPackage
_updatePackageRecord:item:stageID:error:
thumbnailImagesDictionary
copyItemAtURL:toURL:error:
serializedQuickLookMetadataDictionary
_handleFileModifiedError:forItem:
_documentItemForThrottleID:stageID:
_updateRecord:item:thumbnailOperation:stageID:
initWithDocumentAtURL:
_updateThrottleID:setStageID:operationID:
_updateRecord:throttleID:thumbnailOperation:stageID:
_doneFetchingThumbnailForThrottleID:
_startFetchThumbnail:throttleID:
updateSignaturesForFilesInItem:fromCKPackage:error:
_duplicatePackage:stageID:stageName:error:
_finishPackageUploadWithRecord:item:stageID:error:
_bumpThrottleID:zone:throttle:
_documentItemForThrottleID:operationID:
_finishedUploadingItem:record:throttleID:stageID:error:
_minBatchSize
_willTryThrottleID:zone:throttle:operationID:
_rescheduleThrottlesOutOfQuotaForDefaultOwnerWithAvailableSize:
_setQuotaAvailableForDefaultOwner:
setFetchUserQuotaCompletionBlock:
addAliasItem:toUploadingItem:
boostDocID:item:
removeBoostedDocID:
hasItemsOverQuotaInZone:
_thumbnailsOperations
_boostedDocIDs
_stampForDocID
_retryQueueSource
_thumbnailQueue
_quotaPacer
_globalQuotaStateUpdatePacer
_prepareReachedMax
_isDefaultOwnerOutOfQuota
_uploadsDeadlineScheduler
setHasGenerationID:
hasGenerationID
setHasSize:
hasSize
hasXattrs
item
_item
shouldPreparePCSMigration
blacklistPCSPrep
fetchAllRecordZonesOperation
_createCloudDocsZone:
setFetchRecordZonesCompletionBlock:
initWithSourceZoneIDs:targetZone:
setAggregateZonePCSCompletionBlock:
_fetchZonesNeedingMigration:
_interestingZoneIDs
initWithServiceName:
setRemoteObjectInterface:
wait
_setupSharedPackageExtensionsPlist
packageExtensions
attributesOfItemAtPath:error:
filePosixPermissions
appLibraryScanThrottleParams
appLibraryResetThrottleParams
sharedAppLibraryResetThrottleParams
appLibraryAliasRemovalThrottleParams
lostItemThrottleParams
operationFailureThrottleParams
syncClientZoneThrottleParams
syncClientZoneErrorThrottleParams
_createAccountSupportPathIfNeeded:protectParent:
invalidateCachedURLProperties
_setupThrottles
createRootForSyncedFolderType:
setRoot:forSyncedFolderType:
createFSEventsMonitorForSyncedFolderType:
setFSEventsMonitor:forSyncedFolderType:
_enumerateAccountHandlerSupportedFolderTypes:
spotlightIndexingEnabled
_createAppLibraryRootsIfNeededWithError:
createAppLibrariesIfNeededWithError:
diskSpaceCheckInterval
availableDiskSpaceUsingCache:schedulingPendingDiskItemsIfNeeded:
_createAppLibraryRootIfNeededAtPath:error:
fixupItemsAtStartup
privateCloudDatabase
operationQueue
sessionZombiesEnabled
closeXPCClientsSync
_unloadClientZones
turnObjectIntoZombie:
excludedFilenamesWorthPreserving
excludedExtensionsWorthPreserving
br_isExternalDocumentReference
br_isExcludedButPreservedAtLogOutWithFilenames:extensions:
br_isDocumentTooLargeForUpload:maxUploadDocumentSize:
_recursivelyPrepareFolderForLogOutAtURL:pruneEmptyFolders:pruneEmptyTopLevelFolder:maxDepth:
destroyLocalDataWaitingForFilesToBeUnlinked:pristineContainerIDs:completionBlock:
forcePurgeWithCompletionBlock:
arrayByAddingObjectsFromArray:
serverZoneByID:
scanContainerDocumentsIfNeeded:
__registerServerZone:clientZone:appLibrary:isShared:
validateSharedMangledID:
_shouldPrivateAppLibraryBeCZMMoved:
__getOrCreateServerZone:ownerName:
__getOrCreateClientZone:ownerName:withServerZone:
__getOrCreateAppLibrary:ownerName:rowID:createOnDisk:alreadyExists:withClientZone:createCZMMoved:
_getOrCreateAppLibraryAndZonesIfNecessary:ownerName:creationFlags:
hasFSEventsMonitorForSyncedFolderType:
enumerateFileTypesWithFilterBlock:enumerationBlock:
applySyncPolicy:forSyncedFolderType:isInitialCreation:error:
versionNumberForBundleIdentifier:
initWithXPCObject:
updateMetadataWithExtractorProperties:iconPaths:bundleID:
setBoolResult:error:
extractMetadataForContainerID:bundleID:minimumBundleVersion:reply:
result
enumerateObjectsUsingBlock:
standardUserDefaults
setOptimizeStorageEnabled:
synchronize
enumerateSharedAppLibraries:
enableSyncforSyncedFolderType:isInitialCreation:error:
disableSyncforSyncedFolderType:isInitialCreation:error:
_loadClientZonesFromDisk
fsEventsMonitorForSyncedFolderType:
openWithRoot:resetStreamIfNeeded:volume:error:
removeRootForSyncedFolderType:
removeFSEventsMonitorForSyncedFolderType:
initWithAccountSession:name:
setDB:
cloudDocsAppsListDidChange:
registerClient:
unregisterClient:
addMiscOperation:
resetThrottles
serverZoneByMangledID:
clientZoneByMangledID:
privateServerZoneByMangledID:
sharedServerZoneByMangledID:
availableDiskSpaceUsingCache:
accountSize
startDownloadsForGreediness
_setRootPathXattrValue:forRootPath:error:
_getRootPathXattrValue:forRootPath:error:
syncedFolderTypeForURL:
removeDesktopSymlink:andDocumentsSymlink:
_recreateSymlinkIfNecessaryForDocumentsPath:folderName:destinationPath:
recreateDesktopSymlinksIfNecessary
shouldPathBeDesktopSymlink:
userNotification
coreDuetSession
appLibraryScanThrottle
lostItemThrottle
_syncContexts
_defaultScheduler
_dbURL
_dbWatcher
_dbWatcherQueue
_dbCorruptionQueue
_cloudDocsFD
_dbProfilingHook
_miscOperations
_clientDB
_serverDB
_readOnlyDB
_serverState
_zonesLock
_libraryRowIDsByMangledID
_appLibrariesByRowID
_serverZonesByZoneRowID
_sharedServerZonesByMangledID
_sharedClientZonesByMangledID
_privateServerZonesByID
_privateClientZonesByID
_xpcClients
_lastDiskSpaceCheckTime
_availableDiskSpace
_totalDiskSpace
_isGreedy
_zonesCreationLock
_reschedulePendingDiskItemsPacer
_updateDiskSpacePacer
_accountIsReady
_accountWaitOperation
_isDBOpened
_rootsByFolderType
_fsEventsMonitors
_shortcutService
_containerScheduler
_applyScheduler
_volume
_fsReader
_fsUploader
_fsDownloader
_fsWriter
_notificationManager
_stageRegistry
_diskReclaimer
_coreDuetSession
_spotlightIndexer
_appLibraryScanThrottle
_appLibraryResetThrottle
_sharedAppLibraryResetThrottle
_appLibraryAliasRemovalThrottle
_lostItemThrottle
_syncClientZoneThrottle
_syncClientZoneErrorThrottle
_resetQueue
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
_addTransfer:
_finishedTransfer:error:
_cancelTransferID:
_setProgress:forTransfer:
sendBatchProgressedCallback
_finishedTransferForRecord:recordID:error:
setTotalSize:
didProgressBlock
_entriesByRecordID
_entriesBySecondaryRecordID
_entriesByTransferID
_itemsCount
_didProgressBlock
_pendingGroup
startFgColor:bgColor:attr:
write:
startFgColor:attr:
startBgColor:attr:
startFgColor:
startBgColor:
startAttributes:
changeFgColor:
changeBgColor:
changeAttributes:
_bookmarkDataWithItemResolutionString:serverZone:salted:
itemResolutionString
bookmarkDataWithItemResolutionString:serverZone:
itemResolutionStringWithRelativePath:
unsaltedBookmarkDataWithItemResolutionString:serverZone:
brc_errorAccountMismatch
setWithObject:
initWithProblem:
zoneHealthReportedRecordNamesCount
setByAddingObjectsFromSet:
initWithType:recordName:
mergeWithProblem:
effectedRecordNames
_effectedRecordNames
initWithProblemReport:
_priorityForProblemType:
_effectiveProblemType
_zoneStateForProblemType:
_addProblem:
effectiveProblemMessage
_problems
_needsSyncUp
_pendingRequestID
initWithServerZoneHealthState:
stringWithCString:encoding:
ignoredQuarantineMask
initWithLength:
mutableBytes
xattrNamesListBegin
xattrNamesListEnd
xattrNamesEnd
structuralXattrNamesEnd
contentXattrNamesEnd
getXattrValue:error:
clearCache
_xattrNamesList
_xattrNamesData
_xattrCount
_contentXattrCount
_sizeLimit
_cacheSize
_cachedXattrs
_purge
_cachePurgeSource
_unlinkRootPath
_scheduleAsync
_done
treeEnumeratorBatchSize
_iterate:
_iterateWithoutParent:
firstIndex
removeIndex:
__iterate:
_visitNewParent:
initWithSession:tracker:
initWithSession:group:
enumerateBelow:appLibrary:handler:
completionHandler
setCompletionHandler:
_handler
_rowID
_seen
_toVisit
_strongSelf
_completionHandler
initWithSession:appLibraries:
_zonesStillUploading
_hiddenZoneWithError
_perContainerIDError
stringByRemovingPercentEncoding
capitalizedString
additionURLForName:storagePrefix:inConflictNamespace:
label
group
cancelled
markPathMatchLostIfLocationDoesntMatch:
handleReservedPathMatchesIfNeeded
matchLookupItemsWithDisk
readerMaxConcurrentIOs
_readCoordinationCount
readerThrottle
_createOrRetryThrottleID:zone:state:throttle:hasBeenTried:
_retriedThrottleID:zone:state:
_scheduleCoordinatedReadForItem:path:
readUnderCoordinationAtURL:
updateSnapshotAtPath:error:
readUnderCoordinationWithLookup:
lookupAndReadItemUnderCoordinationAtURL:
bouncePath:toPreservePathMatch:
fseventAtPath:flags:unresolvedLastPathComponent:
fseventAtPath:flags:options:unresolvedLastPathComponent:
fseventOnRoot:flags:
fseventOnSharedRoot:flags:
fseventOnContainer:flags:
fseventInsideSharedEnclosure:flags:
_cancelScan
updateLookupAfterHandlingPathMatchWithFSRoot:relpath:
fseventOnSymlink:flags:lookup:
fseventOnAlias:flags:lookup:
fseventOnDocument:flags:options:lookup:unresolvedLastPathComponent:
fseventOnDirectory:flags:lookup:
needsLookupReloadAfterHandlingCrossZoneMoveWithItem:relpath:
itemForCreatedDocumentsDirectory:appLibrary:path:
_fseventOnDocument:flags:options:item:lookup:unresolvedLastPathComponent:
readerPackageProcessingDelay
_delayThrottleID:zone:by:
_attemptSchedulingCoordinatedReadForItem:path:
fseventOnDocument:flags:options:lookup:
resolveEnclosureWithPath:cleanupFaults:
lookupForServerItem:cleanupFaults:
_fseventOnDocument:flags:options:item:lookup:
lostScanDeepScanFirstThreshold
_backoffBeforeProcessingLostItemWithStamp:appLibrary:
_fetchNextLostItemID:parentID:appLibraryRowID:tooManyScans:stamp:
_processDeadItem:
fileSystemIDMayStillExist
_resolveDocumentID:zone:
_processLostItem:resolvedToPath:
fseventOnDocument:flags:lookup:
_scanDirectory:atPath:lookup:
_didResolvedDocumentID:fileID:zone:
markChildrenLost
_scanDone:atPath:lookup:
_slowScanDirectoryAtPath:
_startScanOfRelpath:
_continueScan
_finishCurrentRelpathScan
caseInsensitiveCompare:
_nextLostItemIDWithBackoff:appLibrary:now:
_startScanOfAppLibrary:
_processLostItem:
_lostScanSchedule
fseventOnURL:dbFlags:
lostScanGroup
_coordinatedReaders
_readerCountReachedMax
_currentScan
_scanContinuationSource
_lostSet
_lostScanQueue
_lostScanSource
_lostScanDelay
_lostScanDelaySection
_lostScanGroup
readerLostItemBackoff
setSerializedNameComponents:
hasSerializedNameComponents
serializedNameComponents
_serializedNameComponents
_init
applicationProxyForIdentifier:
isRemovedSystemApp
restoreSystemApplication:
uninstallApplication:withOptions:
_unsafe_visibilityForDSID:
numberWithUnsignedChar:
_unsafe_visibilityForCurrentAccount
_unsafe_setDefaultVisibility:forDSID:
_installiCloudDriveApp
_uninstalliCloudDriveApp
isiCloudDriveAppInstalled
_setDefaultVisibility:forDSID:
_descriptionForDSID:
brc_attributesValues:container:lookup:
pointerValue
valueWithPointer:
_brc_isCloudKitErrorCode:
_brc_isCloudKitInternalErrorCode:
_brc_cloudKitInternalWithErrorCode:
br_cloudKitErrorForIdentifier:
_brc_isCloudKitPluginErrorCode:
_brc_cloudKitPluginErrorPayload
_brc_isCloudKitInternalErrorSafeToSyncUpWithoutSyncDown
_brc_isCloudKitZoneNotFoundError
_brc_isCloudKitZoneUserDeletedError
brc_strippedError
brc_errorWithDomain:code:underlyingError:
brc_description
brc_isCloudKitErrorZoneUndergoingMigration
brc_daemonAccessDisabledError
initialize
lastSyncDate
setDateFormat:
_needsContainerMetadataSyncDown
_needsSharedDBSyncDown
_serverChangeToken
_lastSyncDate
initWithZoneHealthState:
allocateNextRequestID
requestID
_needsSyncDown
_totalCount
setUserInfo:
processIdentifier
isUsingUbiquity
makeObjectsPerformSelector:withObject:
_stopMonitoringProcess
bundleID
_isAutomationEntitled
process:didBecomeForeground:
addProcessMonitor:forProcessID:
_startMonitoringProcessIfNeeded
removeProcessMonitor:
brc_errorDaemonShouldBeLoggedOut
_hasPrivateIPCEntitlementForSelector:error:
_isAppLibraryProxyEntitled
isSandboxed
cloudEnabledStatus
_hasAccessToAppLibraryID:error:
_canCreateAppLibraryWithID:error:
_isAppLibraryProxyWithError:
brc_errorPathOutsideAnyCloudDocsAppLibraryAtURL:
accessLogicalOrPhysicalURL:accessKind:dbAccessKind:asynchronously:handler:
_entitlementBooleanValueForKey:
cloudEnabledStatusForSession:
_entitlementValueForKey:ofClass:
valueForEntitlement:
defaultAppLibraryID
isProxyEntitled
isAutomationEntitled
isSharingPrivateInterfaceEntitled
checkResourceIsReachableAndReturnError:
_auditURL:
fileExistsAtPath:
canAccessPath:accessKind:
br_mightBeBRAlias
allowReadOnlyDBInIPC
canAccessLogicalOrPhysicalURL:accessKind:
br_containerID
brc_errorDocumentAtURL:isNotExternalToAppLibrary:
_createBookmarkWithTarget:targetPath:parentPath:aliasName:error:
br_isInSyncedLocation
_startDownloadItemsAtURLs:pos:options:error:reply:
_setupPrivateAppLibrary:error:
canAccessPhysicalURL:
issueContainerExtensionForURL:error:
initWithNonSandboxedAppWithAppLibraryIDs:bundleID:auditToken:
shareAcceptOperationForItemID:
_auditedURLFromPath:
_addExternalDocumentReferenceTo:underParent:forceReparent:reply:
_setupAppLibraryAndZoneWithID:andSendReply:
setupNonSandboxedAccessForUbiquityContainers:forBundleID:
_sharingOperationDocumentFromLookup:url:error:
_startSharingOperationAfterAcceptation:client:item:
clientPriviledgesDescriptor
setClientPriviledgesDescriptor:
setIsUsingUbiquity:
_clientPriviledgesDescriptor
_dieOnInvalidate
_isForeground
_invalidated
_clientPid
_isUsingUbiquity
_connection
currentAccountCopyTokenWithBundleID:version:reply:
prepareFileProvidersWithReply:
initWithPid:
brc_errorNoAppLibraryForBundle:
senderWithLookup:client:XPCReceiver:error:
setIncludeCachedVersions:
physicalURL
localizedName
documentsURL
applicationProxyForIdentifier:placeholder:
defaultOnDiskAccessTimeDefaultForEviction
performOptimizeStorageWithTimeDelta:onDiskAccessTimeDelta:error:
containerIDsForApplicationIdentifier:
dictionaryWithCapacity:
brc_errorUnknownKey:
_loggedInUserPropertyValuesForKeys:error:
t_setMobileDocumentsURL:
forceSyncContainerID:reply:
containsString:
signalAfterCurrentFSEvent:
_unregisterPrematurely
getBookmarkDataForURL:andAllowAccessByBundleID:reply:
brc_addPartialError:forURL:toError:
currentCalendar
components:fromDate:toDate:options:
rangeOfUnit:inUnit:forDate:
startOfDayForDate:
currentLocale
dateFormatFromTemplate:options:locale:
setFileNamesByAssetFieldNames:
publishURLTimeout
setRequestedTTL:
setURLOptions:
downloadURL
downloadURLExpiration
setPublishAssetCompletionBlock:
setAssetPublishedBlock:
initWithDocumentItem:forPublish:readonly:
isSharingProxyEntitled
brc_errorDocumentIsNoLongerSharedAtURL:
values
initWithSyncContext:ckContainerID:
canFetchUserQuota
brc_shareZoneName
isCurrentUser
destroyiWorkShares
br_physicalURL
br_logicalURL
copyShareIDsBatchSize
subarrayWithRange:
_presentAcceptDialogsWithURL:metadata:reply:
presentAcceptDialogsForShareMetadata:reply:
trashURL
br_cloudDocsContainer
br_movePromisedItemAtURL:toURL:error:
br_representableHFSFileNameWithNumber:addedExtension:makeDotFile:
boostFilePresenterForURL:
_crossZoneMoveOperationForReset:
_retryCZMigrationWithRetryCount:syncContext:reply:
excludedFilenamesWorthWarningAtLogout
overwriteDocumentAccessTime:atime:
updateCloudEnabledStatus
br_externalDocumentPropertiesWithError:
br_URLByResolvingInProcessExternalDocumentReferenceWithProperties:
setupInstanceWithDict:reply:
resetBudgets:reply:
dumpDatabaseTo:containerID:reply:
dumpCoordinationInfoTo:reply:
performSelfCheck:reply:
printStatus:containerID:reply:
gatherInformationForPath:reply:
simulateHealthIssueWithContainer:status:brokenStructure:reply:
healthStatusStringForContainer:reply:
forceSyncWithBarrierContainerID:reply:
waitUntilIdle:reply:
iWorkForceSyncContainerID:ownedByMe:reply:
computePurgableSpaceWithUrgency:reply:
purgeAmount:withUrgency:reply:
reclaimAmount:withUrgency:reply:
dropSpotlightIndexWithReply:
readerThrottleBackoffForDocumentAtPath:containerID:reply:
joinShareAtURL:reply:
waitForFileSystemChangeProcessingWithReply:
createContainerWithID:ownerName:reply:
getContainersByID:
getContainerForURL:reply:
checkinAskClientIfUsingUbiquity:
presyncContainerWithID:reply:
getContainerURLForID:reply:
getContainerURLForID:forPid:reply:
updateContainerMetadataForID:
deleteAllContentsOfContainerID:onClient:onServer:reply:
registerInitialSyncBarrierForID:reply:
startDownloadItemsAtURLs:options:reply:
evictItemAtURL:options:reply:
thumbnailChangedForItemAtURL:reply:
getNotificationInfoAtURL:reply:
getAttributeValues:forItemAtURL:reply:
getItemUpdateSenderWithReceiver:reply:
getNonLocalVersionSenderWithReceiver:documentURL:includeCachedVersions:reply:
getTotalApplicationDocumentUsageWithReply:
getApplicationDocumentUsageInfoForBundleID:withReply:
hasOptimizeStorageWithReply:
setStorageOpimizationEnabled:reply:
getEvictableSpaceWithReply:
evictOldDocumentsWithReply:
iCloudDesktopSettingsChangedWithAttributes:reply:
didReceiveHandoffRequestForBundleID:reply:
getLoggedInUserPropertyValuesForKeys:reply:
addExternalDocumentReferenceTo:forPid:inContainer:underParent:reply:
bundleDidAccessExternalDocument:
resolveConflictWithName:atURL:reply:
currentAccountCreateWithID:reply:
currentAccountLogoutWithReply:
getContainersNeedingUpload:
setMigrationStatus:forDSID:shouldUpdateAccount:reply:
getMigrationStatusForPrimaryiCloudAccount:
jetsamCloudDocsAppsWithReply:
getBookmarkDataForURL:reply:
resolveBookmarkDataToURL:reply:
getBackReferencingContainerIDsForURLs:reply:
getBackReferencingURLForURL:reply:
getPublishedURLForItemAtURL:forStreaming:requestedTTL:reply:
forceConflictForURL:bookmarkData:forcedEtag:reply:
getApplicationStatus:
getApplicationStatusWithPID:reply:
getApplicationStatusWithAuditToken:reply:
getLastSyncDateWithReply:
getLocalizedLastSyncWithReply:
getContainerStatusWithID:reply:
getContainerLastServerUpdateWithID:reply:
getIsContainerWithIDOverQuota:reply:
setiWorkPublishingInfoAtURL:publish:readonly:reply:
getiWorkPublishingInfoAtURL:reply:
getiWorkPublishingBadgingStatusAtURL:reply:
getiWorkNeedsShareMigrateAtURL:reply:
startOperation:toCopySharingInfoAtURL:reply:
startOperation:toCopySharingWebAuthTokenForContainerID:reply:
startOperation:toCopySharingAccessToken:reply:
startOperation:toCopyAvailableQuotaWithReply:
startOperation:toUploadAllFilesInContainer:reply:
startOperation:toPrepFolderForSharingAt:reply:
startOperation:toEvictItemAtURL:reply:
copyCurrentUserIdentifierWithReply:
copyCurrentUserNameAndEmailWithReply:
createSharingInfoForURL:reply:
startOperation:toSaveSharingInfo:reply:
startOperation:toUnshareShare:forceDelete:reply:
startOperation:toLookupShareParticipants:reply:
startOperation:toModifyRecordAccessAtURL:allowAccess:reply:
startOperation:toCopyParticipantTokenAtURL:reply:
startOperation:toCopyShortTokenAtURL:reply:
startOperation:toCopyEtagAtURL:reply:
copyBulkShareIDsAtURLs:reply:
startOperation:toCopyShareURLForShare:appName:reply:
presentAcceptDialogsForShareURL:reply:
removeItemFromDisk:reply:
trashItemAtURL:reply:
boostFilePresenterAtURL:reply:
overwriteAccessTimeForItemAtURL:atime:reply:
currentSyncedRootURLsWithReply:
updatePrivilegesDescriptor
setiCloudDriveAppDefaultVisibility:forDSID:reply:
iCloudDriveAppStatusDescriptionForDSID:reply:
postiCloudDriveAppInstallationNotificaionWithReply:
moveBRSecurityBookmarkAtURL:toURL:reply:
_t_blockSyncUpOfItemWithID:containerID:withPendingUpgradeToOSName:reply:
_t_blockSyncForContainerID:withPendingUpgradeToOSName:reply:
_t_clearAllBlockedItemsForContainerID:reply:
_t_pauseSyncDownOfContainer:reply:
_t_resumeSyncDownOfContainer:reply:
_t_setFSEventProcessingState:reply:
_t_migrateAllZonesToClouddocsWithReset:onlyPrepare:reply:
lookupExcludedFilenamesForLogoutWithReply:
lookupExcludedExtensionsForLogoutWithReply:
handleCloudKitShareMetadata:completionHandler:
willAcceptShareAtURL:
_t_getPCSChainStateAtURL:reply:
localizedStringForKey:value:table:
currentServerChangeToken
initWithRecordZoneIDs:
setAllowsCellularAccess:
scheduleSyncDownIfNeededForZoneID:zoneIfAny:
allowsCellularAccess
scheduler
metadataChangeToken
zoneHealthChangeToken
_scheduler
_metadataChangeToken
_zoneHealthChangeToken
_reportRecords:requestID:
packageItemWithDocumentID:relativePath:session:
packageItemsForDocumentID:order:session:
isSqliteErrorCode:
initWithRelativePath:markDirty:
_deleteSnapshotAtPath:error:
_rescanDirectoryInPackage:error:
packageItemForRelpath:
changedAtRelpath:
setDirty:session:
assetRank
packageDocumentID
_isDirty
_assetRank
_packageID
_pathInPackage
completeWithError:
documentIDsEnumerator
initWithKey:completionHandler:
addCompletionHandler:
completionHandlerFor:
_documentIDs
pipe
setPipe:
docID
setDocID:
_observedAppLibraries
_docID
_identifier
initWithHandler:updateAccessTime:
handler
updateAccessTime
_updateAccessTime
setString:
__itemAtURL:didChangeUbiquityWithPurposeID:
addOperationWithBlock:
brc_errorNotOnDisk:
_waitForDownloadOfDocument:key:requireCurrent:readingOptions:completionHandler:
_keyForURL:andID:
_processIdentifierForID:
_waitForDownloadOfDirectory:key:requireCurrent:readingOptions:completionHandler:
didAccessDocument:
_provideRecursively
_readingOptions
__provideItemAtURL:toReaderWithID:session:recursively:readingOptions:completionHandler:
_keyForURL:
_cancelCallBackForDocID:key:
_unregisterPresenterForKey:
_pathForKey:
_triggerImmediateReadOfDocumentAtPath:
_spaceRequiredForReaders
_registerPresenterForItemAtURL:key:name:session:
_filePresenterByKey
_keysPendingImmediateReads
_readersURLAndIDToDocID
_downloadTrackersByDocID
_recursiveReadsByURLAndID
_addSource:deadline:
_deadline
_latch
_suspendCount
_isSleepingRequiredForDeadline:now:
coalescingLeeway
computeNextAdmissibleDateForScheduling
_minHeap
_leeway
_lastSchedule
_isResumed
_computeNextAdmissibleDateForScheduling
readerThrottleParams
applyThrottleParams
downloadThrottleParams
uploadThrottleParams
uploadBatchRecordsCount
downloadBatchCount
downloadBatchRecordsCount
initWithContainerIdentifier:environment:
initWithContainerID:
sharedCloudDatabase
containerCellularSettings
isCellularEnabledForContainerID:
_database
setContainer:
_notifyFrameworkContainersMonitorWithState:
cancelAllOperations
waitUntilAllOperationsAreFinished
_notifyContainerBeingNowForeground
notifyDuetFromAccessByBundleID:
_armForegroundGraceTimerForClientDescription:
foregroundGracePeriod
_sourceAppIdentifierForZone:
_contextIdentifierForZone:metadata:
_contextIdentifierForAppLibrary:
initWithSession:contextIdentifier:sourceAppIdentifier:isShared:
waitForAllOperations
forceContainerForegroundForDuration:
_contextIdentifier
_sourceAppIdentifier
_isShared
_notifyTokenForFramework
_lastForegroundClientDescription
_dateWhenLastForegroundClientLeft
_timerForGraceForegroundPeriod
_timerForForcedForegroundPeriod
_foregroundStateQueue
_foregroundState
_applyThrottle
_downloadThrottle
_uploadThrottle
_uploadStream
_downloadStream
_syncContextForContextIdentifier:sourceAppIdentifier:isShared:createIfNeeded:
syncContextForZone:metadata:createIfNeeded:
syncContextForZone:createIfNeeded:
initShareIDWithItemID:zoneID:
initShareIDWithRecordID:zoneID:session:
hasPendingLostChildren
_markChildrenLostForDeadParent
hasLostChildren
_markLostDirectoryAsAlmostDead
_retryPostponedIfNeededForDiffs:
hasLiveChildren
transformIntoFSRootWithAppLibrary:zone:
transformBackAsDirectoryInAppLibrary:
doubleForKey:inParams:defaults:
setupWithParams:defaults:
initWithParams:defaults:
setMinWait:
setMaxWait:
setRatioOnSuccess:
setRatioOnFailure:
setRatioOnQuotaErrorClear:
setInactivityKickbackDelay:
setInactivityKickbackRatio:
initAsGlobalWithServerConfiguration:
_prepopulateGlobalUserDefaults
addObserverForName:object:queue:usingBlock:
initWithServerConfiguration:globalUserDefaults:clientZoneIdentifier:
_loadServerConfigurationDictionary
configurationUpdateXPCActivity
_setServerConfigurationURL:whenLoaded:
_parsePlistWithURL:
originalRequest
currentRequest
backgroundSessionConfigurationWithIdentifier:
setHTTPCookieStorage:
setURLCredentialStorage:
setURLCache:
setDiscretionary:
sessionWithConfiguration:delegate:delegateQueue:
downloadTaskWithURL:
_reset
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
defaultsForAppLibraryIdentifier:
_loadCachedServerConfigurationDictionaryFromDB:
_saveServerConfigurationDictionaryToDB:
_serverConfigurationURL
_serverConfigurationDict
_userDefaultsCache
_configurationPlistDidUpdateBlock
_downloadQueue
_urlSession
_userDefaultsManager
_serverDefaultForKey:
dictionaryForKey:
objectForKey:inheritFromGlobal:validateWithBlock:
numberWithFloat:
floatValue
floatForKey:inheritFromGlobal:min:max:byDefault:
boolForKey:inheritFromGlobal:byDefault:
dictionaryWithDictionary:
unsignedLongLongForKey:min:max:byDefault:
boolForKey:byDefault:
unsignedIntForKey:min:max:byDefault:
floatForKey:min:max:byDefault:
_extensionSetForKey:startingWithExtensions:
_UTISetFor:startingWithExtensions:
intForKey:min:max:byDefault:
_umaskForKey:
xpcActivityDictionaryForKey:byDefault:
doubleForKey:min:max:byDefault:
_defaultSyncUpDailyBudget
_defaultSyncUpHourlyBudget
_defaultSyncUpMinutelyBudget
defaultExcludedFilenamesWorthWarningAtLogout
defaultExcludedFilenamesWorthPreserving
defaultExcludedExtensionsWorthPreserving
defaultsForMetadataContainer
shouldFetchAllChanges
maxRecordCountInClientZoneModifyRecordsOperation
availableQuotaComfortSize
appsFetchPacerDelay
skipServerSideThrottling
maxTotalFilesCount
maxNumberOfFilesInAFolder
systemReachabilityLatency
systemPowerLatency
systemLowDiskLatency
fseventsLatency
fseventsResetBackoff
transferQueueMinConcurrentOperations
transferQueueMaxConcurrentOperations
cacheDeletePushXPCActivity
forceForegroundGracePeriod
forceBatchFailureWhenReceivingAssetTokenExpiration
accessTimeDeltaInLowUrgency
accessTimeDeltaInMedUrgency
accessTimeDeltaInHighUrgency
accessTimeDeltaInVeryHighUrgency
onDiskAccessTimeDeltaInLowUrgency
onDiskAccessTimeDeltaInMedUrgency
onDiskAccessTimeDeltaInHighUrgency
onDiskAccessTimeDeltaInVeryHighUrgency
purgePacerInterval
dbReclaimableSpaceThreshold
cacheDeleteRecomputeInterval
relativeDiskSpaceRequiredToReturnToGreedyState
maximumAccountSizeToBeAlwaysGreedy
activeDownloadSizeRefreshInterval
shouldDisplayUploadNotification
shortcutServicePacerInterval
maxRecentDocumentCount
documentAccessHighPriorityInterval
pcsChainingMaxPathDepth
pcsChainingBatchSize
_globalUserDefault
_serverContainerConfigurationDict
_cache
_clientZoneIdentifier
characterAtIndex:
initWithServerItem:cleanupFaults:
_fetchParent
computeLogicalPath:physicalPath:isDirectory:
_fetchByEnclosure
_fetchByDocumentID
_fetchByFileID
_resolveEnclosureWithEnclosureFd:serverZone:expectedDocumentID:expectedFileName:cleanupFaults:
_matchByEnclosure
_fileSystemIDMayStillExist
_cleanupFaults
dictionaryWithContentsOfURL:
destroyClientPackageWithDatabaseBasePath:UUID:
databaseBasePath
absoluteString
setArchiverInfo:error:
mainQueue
primaryAccount
useCellularForDataclass:
_isCellularEnabledForDocumentsAndData
applicationIdentifiersForContainerID:
_isCellularEnabledForBundleID:
unsignedCharValue
initWithRecordIDsToWebShare:recordIDsToUnshare:
_updateItemAfterShareCompleted
setWebShareRecordsCompletionBlock:
setRecordSharedBlock:
setRecordUnsharedBlock:
setRecordIDsToShareReadWrite:
_recordIDs
_forPublish
_readonly
_sharingInfo
startWithParentOperation:
addRecord:
recordsByID
removeRecordByID:
recordZoneChangesStatusByZoneID
waitUntilRecordsAreFetched
removeAllRecords
fetchAllChanges
setRecordZoneChangeTokensUpdatedBlock:
stop
_performAfterFetchingRecordChanges:
_startSyncDown
_startCreateZoneAndSubscriptionAndSyncDown
_editedAndDeletedRecordsCount
_version
setNameComponents:
setGivenName:
unknownPersonNameComponents
setupPagerForFd:
_startInCString:fgColor:bgColor:attr:
cursorGotoLineStart
puts:len:
_putsAndCrop:len:
puts:
execPagerOnFileFd:
startPager
eraseEndOfLine
eraseStartOfLine
eraseLine
eraseScreenDown
eraseScreenUp
cursorSave
cursorRestore
cursorUp:
cursorDown:
cursorRight:
cursorLeft:
startNewLine
endLine
remainingSpace
put:
isatty
useColor
supportsEscapeSequences
_termWidth
_usedTermWidth
_curAttrs
_curFg
_curBg
_isatty
_useColor
_supportsEscapeSequences
enumerateBundlesOfType:usingBlock:
addAppListObserver:
_refetchApps
_start
_cloudDocsAppLibrariesByAppID
_appIDsByAppLibraryID
_observers
_refetchPacer
_fetchInstalledAppsQueue
_hasFetchedInitialApps
generationIDString
signatureWithFileDescriptor:error:
initWithSignature:length:
_isPathMatchIdle:
_generateGentleBounceForPathMatch:dirfd:lastBounceNo:
bouncePathMatch:toApplyServerItem:clientZone:
_clearNamespace:
_pathMatchInNamespace:
_canUpdatePathMatch:hasAdditionsToApply:
didApplyChangesAtPath:filename:li:si:
_bounceBouncesHiddenByFault:
tryToDeleteItemInNamespace:
_moveMissingItemAsideInNamespace:
_removeDirectory:atPath:error:
nameSpace
__itemAtURL:didGainVersionWithClientID:name:purposeID:
__itemAtURL:didLoseVersionWithClientID:name:purposeID:
tryToUpdateItemInNamespace:withDstLookup:
_applyChangesForServerAlias:localAlias:throttleID:zone:diffs:
_stageCreationOfDirectory:
_stageCreationOfSymlink:
writeUnderCoordinationFromURL:toURL:canDelete:
_writeUnderCoordinationFromURL:toURL:canDelete:
hasNeverSyncedDown
containerIDIsPendingMigration:
removeAllShareAcceptationSidefaults
fixupStagedItemAtStartup
_serialQueue
containerWithIdentifier:
setFetchWebAuthTokenCompletionBlock:
setCkContainerID:
_ckContainerID
globalItemByDocumentID:db:
globalItemByFileID:db:
_scheduleXattrFetch
stopWithError:
_recordsWithXattrsToFetch
_recordsBeingFetchedGroup
_operationGroup
_xattrFetchingSource
_isDoneFetchingRecords
_addFileProvider:
_removeFileProvider:
_providedItemAtURL:didLosePresenterWithID:
_providedItemAtURL:didGainPresenterWithID:
_provideItemAtURL:completionHandler:
_writerWithID:didFinishWritingForURL:
_providedItemAtURL:withPresenterWithID:didMoveToURL:
_providedItemsURL
_providedItemsOperationQueue
_presentersIDsByKey
_privQueue
_requestPurgeSpace
computePurgeableSpaceForAllUrgencies
_dbSizeInBytes:
_doFullVacuum:
_dbAutovacuumableSpaceInBytes:
_doIncrementalVacuum:amount:
isInBatch
_fullVacuumIfPossible:
_asyncAutovacuumIfNeeds:
_enumerateItemsForEvictSyncWithBlock:withUrgency:
_vacuumDB:amount:withUrgency:
_evictableTimestampForDocument:accessTime:modifyAccessTime:
onDiskAccessTimeDeltaForUrgency:
_enumerateItemsForEvictSyncWithBlock:withTimeDelta:onDiskAccessTimeDelta:
urgencyForCacheDeleteUrgency:
computePurgableSpaceWithUrgency:
periodicReclaimSpace
documentWasAccessedRecently:
_isClosed
_purgePacer
shareAcceptationSidefaultEnumerator
sharedZone
_shareAcceptationByItemID
latestEventID
streamUUID
rootID
initWithLatestEventID:streamUUID:rootID:
setLatestEventID:
setStreamUUID:
setRootID:
_streamUUID
_latestEventID
_rootID
_updatePersistedStateWithState:
fseventAtPath:withFlags:andID:eventIndex:eventCount:initialScan:
setUpRoot:resetStreamIfNeeded:volume:error:
setUpStreamSynchronously:error:
didProcessEventID:
_cancel
stopWatcher
volumeIsCaseSensitive
openWithRoot:volume:error:
flushStream
_resetCount
_devicePath
_rootPathRelativeToDevice
_rootVnodeWatcher
_streamQueue
_historicalEventSource
_rendezVous
_semaphore
_drainEvents
_root
_dict
_initReachability
_initPowerManager
_initLowDiskManager
_initLowMemory
_initProcessObservers
_initAppListObservers
_initXPCFSEvents
_invalidateReachability
_invalidatePowerManager
_invalidateLowDiskManager
_invalidateLowMemory
_invalidateProcessObservers
_invalidateAppListObservers
_resetReachability
_resetPowerManager
_resetLowDiskManager
_setNetworkReachableWithCoalescing:
_setReachabilityFlags:
sharedReachabilityMonitor
_setNetworkReachable:
_setPowerLevelWithCoalescing:
_setPowerLevel:
powerLevelChanged:
_processLowDiskNotification:
_didReceiveMemoryWarning
didReceiveMemoryWarning
initWithBundleIDs:states:
bundleInfoValueForKey:PID:
updateInterestedBundleIDs:
setHandler:
applicationInfoForPID:completion:
weakToStrongObjectsMapTable
_invalidateProcessMonitorObject:
_createMonitoringObjectForProcessID:observer:
reachabilityMonitor:didChangeReachabilityStatusTo:
reachabilityMonitor:didChangeReachabilityFlagsTo:
reachabilityFlags
addPowerObserver:
removePowerObserver:
addLowMemoryObserver:
removeLowMemoryObserver:
removeAppListObserver:
_notificationQueue
_reachabilityObservers
_reachabilityMonitor
_reachabilityFlags
_isNetworkReachable
_isNetworkReachableTimer
_powerObservers
_powerNotifyToken
_powerLevelOK
_powerLevelOKTimer
_connectedToPowerSource
_connectedToPowerSourceCheckedDate
_lowDiskSet
_lowDiskDict
_lowDiskSource
_lowDiskTimer
_lowMemoryObservers
_memoryNotificationEventSource
_processObservers
_appListObservers
initWithServerSyncState:
_lastSyncDownStatus
_pendingChangeToken
_clientRequestID
initWithState:
setSharedDatabaseChangeState:
_pendingMigrations
_nextRank
_sharedDatabaseChangeState
_finishSetupWithClientContainerIDs:
_isNonSandboxedForAuditToken:
hasAuditToken
hasPid
_computeCloudEnabledStatusWithoutLogOutStatus
isAllowedToAccessAnyCloudService
isNonAppSandboxed
_debugIdentifier
_cloudEnabledStatusWithoutLogOutStatus
_canGetApplicationInfo
_isNonAppSandboxed
_isAllowedToAccessAnyCloudService
_isProxyEntitled
_isSharingProxyEntitled
_isSharingPrivateInterfaceEntitled
_hasAuditToken
_applicationIdentifier
_appLibraryIDs
_defaultAppLibraryID
_auditToken
brc_errorDocumentIsNotShared
recordIDNeedingFetch
setRecordIDNeedingFetch:
_recordIDNeedingFetch
_blackListDescendantStack:parentItem:andAddToSet:descendantBlock:
_blackListDescendantStack:parentItem:andAddToSet:
_blackListDescendantStackAndItemIfThrottledOrNeedsOSUpgrade:now:
isBlackListed:
handleItemForOSUpgrade:parentItemID:
_nextLiveItem
_nextTombstone
_documentsOrAliasesNeedingSyncUpEnumerator
_liveOrNewDirectoriesNeedingSyncUpEnumerator
_tombstoneLeavesNeedingSyncUpEnumerator
_batchSize
_maxDepth
_whitelist
_itemIDsLostOrThrottled
_itemIDsNeedingOSUpgrade
_tombstonesEmbargo
_returned
_enumerator
_stack
_stage
_retryAfter
initWithPkgItem:
_containerMetadataRecordsToSaveWithBatchSize:
performAfterSavingRecords:
_shouldPerformAnotherBatch
initWithDocumentID:URL:aliasURL:
aliasURL
_updateShortcuts
_recentDocumentDescriptors
_shortcutItemForRecentItemDescriptor:
_searchShortcutItem
updateDynamicApplicationShortcutItems:forBundleIdentifier:
_bestIconVariantForDeviceMainScreen
iconDataForVariant:
setLocalizedTitle:
_previewImageDataForDocumentAtURL:dataType:
initWithImageData:dataType:isTemplate:
setIcon:
dictionaryWithObjectsAndKeys:
initWithType:
_shortcutServiceQueue
initWithDocument:serverItem:relpath:logicalURL:client:XPCReceiver:error:
storagePrefixForFileDescriptor:error:
newThumbnailForVersionWithEtag:
hasThumbnailOnImmutableDocumentAtURL:
newCachedVersionAtURL:size:etag:hasThumbnail:displayName:lastEditorDeviceName:lastEditorNameComponents:modificationDate:
newFaultVersionAtURL:faultURL:faultExtension:etag:hasThumbnail:displayName:lastEditorDeviceName:lastEditorNameComponents:modificationDate:
_fetchThumbnailOperationForVersionRecord:physicalURL:
setFetchRecordVersionsProgressBlock:
versionsDone
setFetchRecordVersionsCompletionBlock:
blockOperationWithBlock:
_depsTrackingOperation
_fetchVersionsOperationWithDepsOp:
logicalURL
includeCachedVersions
_currentEtag
_storagePathPrefix
_reply
_includeCachedVersions
_logicalURL
_physicalURL
listNonLocalVersionsWithReply:
OfflineInitialization
BRCBookmarkAdditions
BRFieldCKInfo
NSCopying
BRCVolume
BRCURLToItemLookup
NSSecureCoding
NSCoding
BRCPQLConnection
_BRCOperation
_BRCFrameworkOperation
BRCancellable
NSObject
BRCSharedDatabaseSyncOperation
BRCOperationSubclass
BRCNotificationAdditions
BRCNotification
BRFieldFinderTags
BRCAdditions
BRCProgress
BRCDaemonContainerHelper
BRContainerHelper
BRCDatabaseNeedsReset
BRCDatabaseFromTheFutureException
BRiWorkSharingInfo
BRCDatabaseManager
BRCPQLDBCorruptionHandler
BRCAccountOnlinePerformer
BRCReachabilityDelegate
BRCAccountMigrator
BRCAccountMigrationChecker
BRCAccountHandler
MCProfileConnectionObserver
BRCFinderBookmarkItem
BRCAliasItem
BRCExtensionErrorPayload
BRCSharingFetchUserRecordIDOperation
BRCZoneHealthCheckOperation
BRCStatInfo
BRCVersion
BRCSignatureAdditions
BRFieldPkgItem
BRCNotificationManager
BRCModule
BRCLifeCycle
BRCRelativePath
BRCMinHeap
NSFastEnumeration
BRCChecksummingOutputStream
BRCAccountWaitOperation
BRCEvictItemOperation
BRItemNotificationReceiving
BRCThrottle
BRCFSSchedulerBase
BRCDataOrDocsScopeGatherer
BRCNotificationPipe
IPCs
BRItemNotificationSending
BRCUserNotification
BRCUserNotifier
BRCBookmark
BRCDaemon
NSXPCListenerDelegate
BRCAccountHandlerDelegate
BRCProtocolBufferAdditions
PQLValuable
PQLBindable
BRCApplyScheduler
BRCSuspendable
BRCSyncThrottle
BRCALRowID
BRCAppLibrary
BRCForegroundClient
BRCPrivateAppLibrary
BRCSharedAppLibrary
BRCRetryCounter
BRCThrottleBase
BRCFSDownloaderBatchEnumerator
BRCFSDownloader
BRCDumpContext
BRCZoneReset
BRCZoneMigration
BRCLocalStatInfo
BRCLocalItem
BRCSyncThrottleItemProtocol
BRCItem
BRCStageAdditions
BRCContainerScheduler
APSConnectionDelegate
BRCClientZoneDelegate
BRCAppLibraryDelegate
BRCFetchiWorkSharingInfoOperation
BRCLocalVersion
BRCDesiredVersion
BRCDocumentItem
BRCPrivateDocumentItem
BRCSharedDocumentItem
BRCFileCoordinatorContext
BRCFileCoordinator
BRCContainerMetadataSyncDownAdditions
BRCContainerMetadataSyncDownOperation
BRCUpload
BRCTransfer
BRCUploadBatchOperation
BRCZoneRowID
BRCServerZone
BRCZone
CKConversions
BRCItemAdditions
BRCSerializationAdditions
BRCContainerMetadataAdditions
BRCZoneHealthAdditions
BRCWorkAround
BRCSharingAdditions
BRCSyncUpAdditions
BRCSyncUpOperation
BRCSharingAcceptFlowOperation
BRAdditions
PathResolution
BRCSyncOperationThrottle
BRCSyncBudgetThrottle
BRCClientZone
BRCPersistedState
BRFieldXattr
BRCCryptographicAdditions
BRCLazyPackage
BRCAcceptShareOperation
BRCPrivateClientZone
_BRCTransferInfo
_BRCUploadInfo
_BRCDownloadInfo
BRCGlobalProgress
BRCClientRanksPersistedState
BRCServerItem
BRCPathToItemLookup
BRCDaemonSyncedRootURLCache
BRSyncedRootURLCache
BRCItemID
BRCAddition
BRCPackageManifestReader
BRCPackageManifestWriter
BRCPackageChecksummer
BRCContainerFindByName
BRCMigrationQueryOperation
Daemon
BRCSharingModifyShareOperation
BRCSharingSaveShareOperation
BRCSharingDestroyShareOperation
BRCSharingRemoveAllShareParticipantsOperation
BRCSharingLookupParticipantsOperation
BRCSharingModifyAccessOperation
BRCSharingCopyParticipantTokenOperation
BRCSharingPrepareFolderForSharingOperation
BRCSharingCopyShareURLOperation
BRCSharingCopyShortTokenOperation
BRCTransferStream
BRCSharingCopyAccessTokenOperation
BRFieldXattrBlob
BRCSymlinkItem
BRCCreateZoneAndSubscribeOperation
BRCZonePurgeOperation
BRCStagePersistedState
BRCStageRegistry
BRCLowDiskDelegate
BRCVersionsFileProvider
BRCPackageAdditions
BRCSpotlightAdditions
BRCSpotlightIndexToken
BRCSpotlightIndexBatch
BRCSpotlightIndexer
CSSearchableIndexDelegate
BRCDownload
Downloads
BRCDownloadThumbnail
BRCDownloadThumbnailsBatchOperation
BRCDownloadContent
BRCDownloadContentsBatchOperation
BRCDownloadVersion
BRCDownloadVersionsBatchOperation
BRCZoneRootItem
BRCFSRootItem
BRCThrottler
BRCPrivateServerZone
BRCSharedServerZone
BRCFSUploader
BRFieldPkgLocalItem
BRCCrossZoneMoveExtension
BRCMigrateZonePCSOperation
BRCAccountSession
BRCCloudDocsAppsObserver
BRCIndexingArbiter
BRBundleServiceProtocol
BRCTransferBatchOperation
BRCDumper
BRCProblem
BRCProblemReport
BRCServerZoneHealthState
BRCQuarantine
BRCLazyXattrsCollection
BRCFileUnlinker
BRCTreeEnumerator
BRCUploadAllFilesTrackerOperation
BRCAllItemsDidUploadTracker
BRCShareURL
brc_task_tracker
BRCFSReader
BRCFSEventsDelegate
BRCUncancellableBlockOperation
BRFieldUserIdentity
BRCiCloudDriveAppVisibilityManager
BRCUbiquitousAttributes
BRCContainerMetadataSyncPersistedState
BRCZoneHealthSyncPersistedState
BRCCountedSet
BRCXPCClient
BRCProcessMonitorDelegate
BRCNotificationPipeDelegate
BRCXPCTokenClient
BRTokenProtocol
BRFileCoordinationProvider
BRCXPCRegularIPCsClient
BRProtocol
CKXPCShareDaemon
BRCPeriodicSyncOperation
BRCZoneHealthReportOperation
BRCPackageItem
BRCRecursiveProviderTracker
BRCRemoteFilePresenter
BRCTrackingDescriptor
BRCCloudFileProvider
BRCDeadlineSource
BRCDeadlineScheduler
BRCSyncContext
BRCFetchQuotaOperation
BRCShareIDAdditions
BRCDirectoryItem
BRCSyncOperationThrottleParams
BRCUserDefaultsManager
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
BRCUserDefaults
BRCItemToPathLookup
BRCSharingAcceptFlowOperationNoPrompt
BRCContainerCellularSettings
BRCiWorkPublishingOperation
BRCSyncDownOperation
BRFieldPkgHeader
BRCTermDumper
BRCCloudDocsAppsMonitor
BRCAppListMonitorDelegate
BRCGenerationID
Bouncing
BRCFSWriter
BRCSharingCopyWebAuthTokenOperation
ItemFetching
BRCFetchRecordSubResourcesOperation
BRCFileProvider
NSFileProvider
BRCDiskSpaceReclaimer
BRCSharedClientZone
BRCFSEventsPersistedState
BRCFSEventsMonitor
BRCClientState
BRCUserNotificationNoPrompt
BRCSystemResourcesManager
BRReachabilityObserver
BRCServerChangeState
BRCServerPersistedState
BRCClientPrivilegesDescriptor
BRCSharingCopyShareOperation
BRCSyncUpEnumerator
BRCPkgItemAdditions
BRCContainerMetadataSyncUpAdditions
BRCContainerMetadataSyncUpOperation
BRCRecentDocumentDescriptor
BRCApplicationShortcutService
BRCRecentDocumentsNotificationDelegate
BRCNonLocalVersionsSender
BRNonLocalVersionSending
v24@0:8@16
@52@0:8@16@24@32@40B48
@24@0:8^{_NSZone=}16
v20@0:8B16
B16@0:8
@16@0:8
B24@0:8@16
Q16@0:8
v16@0:8
@"NSString"
{?="knownToServer"b1"wasCached"b1}
B40@0:8@16@24^@32
i16@0:8
{statfs="f_bsize"I"f_iosize"i"f_blocks"Q"f_bfree"Q"f_bavail"Q"f_files"Q"f_ffree"Q"f_fsid"{fsid="val"[2i]}"f_owner"I"f_type"I"f_flags"I"f_fssubtype"I"f_fstypename"[16c]"f_mntonname"[1024c]"f_mntfromname"[1024c]"f_reserved"[8I]}
v24@0:8@"NSCoder"16
@24@0:8@16
@24@0:8@"NSCoder"16
@36@0:8@16B24@28
@44@0:8@16B24@28@36
@32@0:8@16@24
B24@0:8^@16
B28@0:8B16^i20
{?=@@@@Q}16@0:8
S16@0:8
@"BRCAccountSession"
(?=""{?="parentItemID"b1"relpath"b1"pathMatch"b1"faultedMatch"b1"byIDMatch"b1"reservedMatch"b1}"value"I)
@"BRCRelativePath"
@"BRCPQLConnection"
@"NSURL"
@"BRCItemID"
@"BRCLocalItem"
@"BRCServerItem"
@"BRCDocumentItem"
B36@0:8@16i24^@28
v24@0:8@?16
B32@0:8@16@24
B32@0:8@?16@24
B20@0:8i16
v28@0:8d16i24
q16@0:8
@"br_pacer"
@40@0:8@16@24@32
v32@0:8@16@24
v40@0:8@16@24@32
@?16@0:8
@"BRCSyncContext"
[16C]
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_os_transaction>"
@"NSDate"
@"NSError"
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_group>"
@"NSObject<OS_os_activity>"
@"BRCThrottle"
@"_BRCLogSection"
Vv16@0:8
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
^{_NSZone=}16@0:8
@"NSString"16@0:8
@"NSObject<BROperationClient>"
B24@0:8@"NSError"16
v32@0:8@16@?24
@"BRCServerChangeState"
@32@0:8@16^@24
@32@0:8@16Q24
@"NSSet"
@"NSMutableSet"
@"BRCAppLibrary"
@24@0:8Q16
@"NSMutableArray"
@36@0:8@16c24@28
v24@0:8q16
@36@0:8c16@20@28
@"NSMutableDictionary"
@"NSArray"
@24@0:8^@16
@"NSDictionary"24@0:8^@16
@"BRContainer"24@0:8@"NSURL"16
c16@0:8
B44@0:8@16@24B32^@36
B44@0:8@16@24i32^@36
@36@0:8@16B24^@28
B32@0:8^{backup_detector=QQQ}16^@24
B56@0:8{backup_detector=QQQ}16^{backup_detector=QQQ}40^@48
^{PQLResultSet=#}24@0:8@16
^{PQLResultSet=#}16@0:8
^{PQLResultSet=#}32@0:8Q16Q24
@20@0:8I16
v28@0:8@16B24
v32@0:8@16^{NSObject=#}24
B36@0:8@16B24^@28
B32@0:8@16^@24
v32@0:8@"PQLConnection"16@?<v@?>24
v20@0:8I16
@"BRCThrottler"
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v40@0:8c16@20B28@?32
q24@0:8Q16
v32@0:8q16Q24
@"<BRCAccountHandlerDelegate>"
B28@0:8@16B24
B32@0:8@16Q24
B40@0:8@16Q24^@32
v44@0:8@16Q24B32@36
@"CKServerChangeToken"
@28@0:8c16@20
@28@0:8@16i24
B32@0:8@16^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}24
Q24@0:8@16
v20@0:8c16
@"BRFieldCKInfo"
@"NSData"
@20@0:8B16
@"NSNumber"
@20@0:8i16
i24@0:8@16
v20@0:8i16
{?="mtime"b1"xattrIndex"b1"isExecutable"b1"isWritable"b1}
@24@0:8@"BRCAccountSession"16
v32@0:8@16Q24
v40@0:8@16@24@?32
v24@0:8Q16
@"BRCClientRanksPersistedState"
@"NSHashTable"
@"BRNotificationQueue"
@"BRCXPCClient"
i40@0:8Q16@24@32
@40@0:8Q16@24@32
C16@0:8
I16@0:8
B20@0:8B16
i28@0:8i16@20
B32@0:8@?16^i24
B24@0:8^i16
v20@0:8S16
v20@0:8C16
@"BRCBookmark"
@"BRCGenerationID"
@"BRCClientZone"
[32C]
{timespec="tv_sec"q"tv_nsec"q}
{_opaque_pthread_rwlock_t="__sig"q"__opaque"[192c]}
^{?=iqq*iqqi{_opaque_pthread_mutex_t=q[56c]}^{_telldir}}
@"NSDirectoryEnumerator"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@24@0:8@?16
@"NSMapTable"
@20@0:8C16
q32@0:8r*16Q24
{CC_SHA1state_st="h0"I"h1"I"h2"I"h3"I"h4"I"Nl"I"Nh"I"data"[16I]"num"i}
[21C]
@32@0:8q16@24
@"CKContainer"
v48@0:8@16@24@32@?40
v48@0:8@"NSArray"16@"NSDictionary"24@"NSDictionary"32@?<v@?>40
v32@0:8@"NSArray"16@?<v@?>24
@"brc_task_tracker"
@"BRCNotificationPipe"
@28@0:8i16@20
B32@0:8q16@24
@48@0:8q16@24q32@40
v48@0:8@16@24q32@40
@40@0:8@16q24@32
q40@0:8^{throttle_stamps=Iiqqq}16@24q32
v52@0:8^{throttle_stamps=Iiqqq}16q24@32@40B48
v36@0:8q16@24i32
v32@0:8q16@24
v32@0:8q16q24
@"BRCDeadlineSource"
@"PQLNameInjection"
@40@0:8@16@24@?32
v32@0:8q16@?24
v36@0:8S16@20@?28
v44@0:8@16@24S32@?36
v36@0:8@16S24@?28
@"<BRItemNotificationReceiving>"
@"BRFileObjectID"
@"BRCDataOrDocsScopeGatherer"
@"BRCNotificationManager"
@"<BRCNotificationPipeDelegate>"
v44@0:8@16S24@28@?36
v28@0:8S16@?20
v24@0:8@?<v@?>16
v36@0:8S16@"NSArray"20@?<v@?i>28
v28@0:8S16@?<v@?i>20
v44@0:8@"NSString"16S24@"NSArray"28@?<v@?i>36
v36@0:8@"NSURL"16S24@?<v@?i>28
v40@0:8@"CKShareMetadata"16@"BRCAccountSession"24@?<v@?B@"NSError">32
v32@0:8@"CKShareMetadata"16@?<v@?BB@"NSError">24
v32@0:8@"CKShareMetadata"16@?<v@?B@"NSError">24
v32@0:8@"NSURL"16@?<v@?>24
v32@0:8@"NSURL"16@?<v@?B>24
v40@0:8Q16@24@?32
@?24@0:8@?16
v48@0:8Q16@24@32@?40
v32@0:8Q16@24
^{__CFUserNotification=}
^{__CFRunLoopSource=}
v24@0:8[32C]16
i20@0:8i16
@48@0:8@16@24@32@40
@40@0:8@16@24^@32
@"BRCServerZone"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@"BRCAccountHandler"16@"BRCAccountSession"24
B24@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16
v24@0:8#16
@"NSXPCListener"
@"BRCAccountHandler"
@"BRCVersionsFileProvider"
@"NSOperationQueue"
v28@0:8^{sqlite3_stmt=}16i24
@24@0:8^{Mem=}16
v40@0:8q16@24i32I36
v48@0:8q16@24@32i40I44
v36@0:8q16@24I32
v28@0:8@16i24
v32@0:8@16q24
v44@0:8@16Q24q32B40
@"BRCCountedSet"
B40@0:8@16^Q24Q32
@"NSPredicate"
v24@0:8B16B20
@92@0:8@16@24@32@40@48@56@64B72B76B80@84
I24@0:8I16I20
B20@0:8I16
^{PQLResultSet=#}72@0:8Q16Q24@32B40B44B48B52B56B60Q64
^{PQLResultSet=#}48@0:8@16Q24Q32Q40
@28@0:8@16B24
Q20@0:8B16
B48@0:8@16@24Q32^B40
q24@0:8@16
Q24@0:8d16
@32@0:8Q16@24
@"<BRCAppLibraryDelegate>"
@"BRCALRowID"
@"BRCZoneRowID"
@44@0:8@16@24B32^@36
@"BRContainer"
@24@0:8q16
q20@0:8I16
q40@0:8q16^I24q32
q32@0:8^v16Q24
q36@0:8q16q24B32
@"BRCMinHeap"
@44@0:8@16i24q28^q36
@"PQLResultSet"
v60@0:8^{throttle_stamps=Iiqqq}16q24@32q40i48@52
v44@0:8@16i24i28@32B40
@36@0:8@16i24@28
v44@0:8@16i24@28@36
v36@0:8@16i24@28
v36@0:8@16@24B32
v40@0:8@16@24^i32
v44@0:8@16@24B32^i36
B64@0:8@16@24@32^i40@48@56
B48@0:8@16@24@32^i40
v40@0:8@16q24Q32
v48@0:8@16Q24Q32q40
v56@0:8@16Q24Q32q40@?48
@"BRCDeadlineScheduler"
@32@0:8[16C]16@24
@44@0:8@16@24B32@36
@44@0:8Q16Q24B32@36
@32@0:8d16@24
@44@0:8q16B24@28@36
@32@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@24
@32@0:8@16q24
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@0:8
@"BRCDumper"
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}
@"PQLConnection"
v32@0:8@?16@?24
c28@0:8@16B24
v44@0:8@16@24@32B40
v28@0:8C16@20
v36@0:8@16I24@28
@"BRCItemID"16@0:8
@"BRCStatInfo"16@0:8
@"NSNumber"16@0:8
@"BRCAccountSession"16@0:8
@"BRCServerZone"16@0:8
@"BRCClientZone"16@0:8
@48@0:8@16@24@32^@40
B24@0:8Q16
v28@0:8Q16B24
B24@0:8B16B20
v28@0:8@16C24
v24@0:8B16C20
v28@0:8Q16I24
v32@0:8Q16I24I28
@"BRCLocalStatInfo"
B28@0:8i16^@20
@36@0:8i16Q20^@28
B52@0:8i16^@20^@28Q36^@44
B32@0:8i16B20^@24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@16@24@32@40
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v24@0:8@"BRCClientZone"16
v24@0:8@"BRCAppLibrary"16
@"APSConnection"
@"BRCContainerMetadataSyncPersistedState"
^{_BRCOperation=#@ii@[16C]}
@"BRCZoneHealthSyncPersistedState"
@"BRCMigrateZonePCSOperation"
@"BRCSyncBudgetThrottle"
@"CKRecordID"
@"CKRecord"
(?="value"I""{?="isFault"b1"startDownload"b1"wantsThumbnail"b1"userInitiated"b1})
^{PQLResultSet=#}32@0:8@16@24
v40@0:8B16@20@28B36
v28@0:8B16@20
i36@0:8@16I24^B28
i44@0:8@16Q24I32^B36
v40@0:8@16Q24Q32
@"BRCLocalVersion"
@"BRCDesiredVersion"
B32@0:8^@16^@24
@40@0:8@16@24i32i36
v52@0:8@16@24@32@40B48
@36@0:8@16B24@?28
v24@0:8d16
v72@0:8@16@24@32@40@?48@?56@64
v60@0:8@16@24B32@36@44@?52
@"CKRecordID"16@0:8
@"BRCProgress"16@0:8
@"CKRecord"16@0:8
v24@0:8@"CKRecord"16
@40@0:8@16@24Q32
@"BRCProgress"
v48@0:8@16@24@32Q40
B32@0:8@"BRCDumpContext"16^@24
B32@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@24
B32@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@"PQLConnection"24
@"BRCZoneRowID"16@0:8
v24@0:8@"BRCZoneRowID"16
@"BRCPQLConnection"16@0:8
@"NSMutableDictionary"16@0:8
B72@0:8@16@24@32@40@48@56@64
B48@0:8@16@24@32^@40
B48@0:8@16@24@32Q40
B40@0:8@16@24@32
@20@0:8c16
Q72@0:8Q16@24@32@40@48@56q64
@32@0:8B16@20B28
B52@0:8^@16@24#32B40^@44
B64@0:8^@16^@24^@32^@40@48^@56
B40@0:8^@16@24^@32
B32@0:8^Q16^@24
B48@0:8^@16@24@32^@40
B48@0:8^@16^@24@32^@40
v32@0:8@16B24B28
v48@0:8@16Q24@32B40B44
v36@0:8@16Q24B32
@20@0:8S16
f32@0:8@16@24
f16@0:8
@36@0:8@16f24^Q28
B28@0:8f16^Q20
B24@0:8@?16
v24@0:8:16
@"<BRCUserNotifier>"
@"CKShareMetadata"
@"CKShare"
@"BRCPrivateAppLibrary"
@"BRCAcceptShareOperation"
@36@0:8@16B24^i28
v40@0:8@16^@24^@32
i40@0:8@16^@24^@32
d16@0:8
v20@0:8f16
d24@0:8f16i20
d24@0:8@16
f24@0:8@16
[8f]
@68@0:8@16@24@32@40@48@56B64
v24@0:8r*16
@28@0:8I16@20
v40@0:8@16@24q32
v44@0:8Q16q24B32@36
q32@0:8@16@24
@?24@0:8@16
v32@0:8@?16@24
v60@0:8@16@24@32^i40B48@52
v36@0:8Q16@24i32
@"<BRCClientZoneDelegate>"
@"BRCThrottleBase"
@"BRCCreateZoneAndSubscribeOperation"
@"BRCSyncUpOperation"
@"BRCSyncDownOperation"
@"BRCSyncOperationThrottle"
@"NSMutableIndexSet"
@32@0:8r*16Q24
@"BRCStageRegistry"
@"CKPackage"
v28@0:8i16@20
v48@0:8@16^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}24@32^B40
@"BRCServerZoneHealthState"
@"BRCProblemReport"
v28@0:8@16c24
v48@0:8@16@24@32^v40
v36@0:8@16@24c32
v40@0:8@16q24q32
v28@0:8@16I24
v32@0:8@16I24B28
v36@0:8@16I24B28B32
@"_BRCUploadInfo"
@"_BRCDownloadInfo"
@"BRCStatInfo"
@"BRCVersion"
@"BRCPackageItem"
{?="byFileID"b1"byDocumentID"b1"byPath"b1"parentID"b1"serverItem"b1"serverByPath"b1"packageItem"b1}
@"NSArray"16@0:8
B24@0:8^{Mem=}16
@48@0:8@16^@24^@32@40
r*16@0:8
@24@0:8r*16
@24@0:8^{RootItemObject=CI}16
@24@0:8^{UUIDItemObject=CI[16C]}16
@28@0:8i16Q20
@"NSInputStream"
@"PBMessageStreamReader"
B28@0:8@16S24
S24@0:8@16
B32@0:8@16i24i28
B60@0:8@16@24@32@40i48@52
@"PBMessageStreamWriter"
@"NSOutputStream"
@"BRCChecksummingOutputStream"
v40@0:8@16@?24@?32
@"CKQueryCursor"
v36@0:8@16B24@?28
v28@0:8B16@?20
d32@0:8@16@24
@"CKRecordZoneID"
@"CKRecordZone"
@"BRCPrivateServerZone"
v24@0:8i16B20
i20@0:8C16
i28@0:8C16@?20
B40@0:8^Q16^I24^@32
B48@0:8@16^Q24^I32^@40
@56@0:8@16@24@32@40^@48
B68@0:8^Q16^I24^I32@40@48B56^@60
B32@0:8i16i20@24
@40@0:8Q16^C24^I32
B56@0:8@16Q24@32@40^@48
B48@0:8Q16@24@32^@40
v48@0:8i16i20@24@32@40
B64@0:8@16^Q24^I32^I40@48^@56
B36@0:8i16@20@28
B32@0:8Q16@24
B32@0:8Q16^I24
B36@0:8I16Q20Q28
q28@0:8q16i24
q24@0:8q16
[6@"NSString"]
[6Q]
@"BRCStagePersistedState"
@"NSMutableOrderedSet"
@"CSSearchableIndex"
v32@0:8@"CSSearchableIndex"16@?<v@?>24
v40@0:8@"CSSearchableIndex"16@"NSArray"24@?<v@?>32
v24@0:8@"CSSearchableIndex"16
v36@0:8Q16Q24B32
v32@0:8@?16r*24
@32@0:8Q16Q24
@"<BRCIndexingArbiter>"
B56@0:8@16@24@32@40^@48
@"NSIndexSet"
@44@0:8@16@24@32B40
@40@0:8@16^@24^@32
@"GSPermanentStorage"
@40@0:8@16Q24@32
@48@0:8@16@24@32@?40
@"BRCZonePurgeOperation"
@56@0:8@16@24@32@40@48
v40@0:8q16@24@32
v48@0:8q16@24@32@40
v48@0:8@16q24@32@40
v56@0:8@16@24q32@40@48
@"BRFieldPkgItem"
{?="size"b1"generationID"b1}
v24@0:8@"NSDictionary"16
B24@0:8@"BRCDocumentItem"16
@24@0:8^B16
B40@0:8@16B24B28Q32
v36@0:8B16@20@?28
@64@0:8@16@24@32B40^B44@52B60
@40@0:8@16@24^I32
@32@0:8@16^B24
@40@0:8@16@24^B32
B48@0:8@16^B24^B32^Q40
B40@0:8@16^B24^Q32
Q24@0:8B16B20
B44@0:8q16Q24B32^@36
B36@0:8Q16B24^@28
@"BRCClientState"
@"BRCServerPersistedState"
{brc_mutex="pthread"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
@"BRCGlobalProgress"
@"BRCAccountWaitOperation"
@"BRCApplicationShortcutService"
@"BRCContainerScheduler"
@"BRCApplyScheduler"
@"BRCVolume"
@"BRCFSReader"
@"BRCFSUploader"
@"BRCFSDownloader"
@"BRCFSWriter"
@"BRCUserNotification"
@"BRCDiskSpaceReclaimer"
@"CDSession"
@"BRCSpotlightIndexer"
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">40
v32@0:8d16@24
v28@0:8i16i20i24
@28@0:8i16i20i24
v24@0:8i16i20
@36@0:8@16@24B32
B72@0:8@16@24^@32^@40^@48^@56^@64
r^*16@0:8
@36@0:8i16q20^@28
@"NSMutableData"
B28@0:8i16@20
v32@0:8@"BRCClientZone"16@"NSError"24
B48@0:8^@16^@24^@32@40
B56@0:8@16^@24^@32^@40@48
v24@0:8^{?=@@@@Q}16
v44@0:8@16I24Q28@36
v44@0:8@"BRCRelativePath"16I24Q28@"NSString"36
v36@0:8@"BRCRelativePath"16I24@"NSString"28
v28@0:8@"BRCRelativePath"16I24
v40@0:8q16@24d32
v48@0:8q16@24i32@36B44
v52@0:8@16I24Q28@36@44
v60@0:8@16I24Q28@36@44@52
Q32@0:8Q16@24
B56@0:8^@16^@24^@32^B40^q48
@40@0:8^q16^@24q32
v28@0:8I16@20
v36@0:8I16Q20@28
Q28@0:8B16r^*20
B24@0:8q16
v32@0:8@"BRCNotificationPipe"16@"BRCAppLibrary"24
B32@0:8:16^@24
@32@0:8@16#24
B32@0:8r*16q24
B32@0:8@16q24
v52@0:8@16q24q32B40@?44
v44@0:8@16@24B32@?36
v56@0:8@16Q24Q32@40@?48
v40@0:8^{_BRCFrameworkOperation=#@ii@[16C]}16@24@32
@"BRCClientPrivilegesDescriptor"
{?="val"[8I]}
@"NSCountedSet"
@"NSXPCConnection"
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData"@"NSError">32
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v32@0:8@"NSSet"16@?<v@?@"NSError">24
v40@0:8@"NSFileHandle"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"NSFileHandle"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v44@0:8@"NSString"16@"NSString"24B32@?<v@?@"NSError">36
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSError">28
v28@0:8i16@?20
v28@0:8i16@?<v@?q>20
v36@0:8q16i24@?28
v36@0:8q16i24@?<v@?q>28
v40@0:8@"NSString"16@"NSString"24@?<v@?d@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"NSURL"@"NSURL"@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"NSURL"16@?<v@?@"BRContainer"@"NSError">24
Vv20@0:8B16
v32@0:8@"NSString"16@?<v@?@"NSURL"@"NSData"@"NSString"@"NSError">24
v36@0:8@16i24@?28
v36@0:8@"NSString"16i24@?<v@?@"NSURL"@"NSData"@"NSString"@"NSError">28
Vv24@0:8@16
Vv24@0:8@"NSString"16
v40@0:8@16B24B28@?32
v40@0:8@"NSString"16B24B28@?<v@?@"NSError">32
v40@0:8@16Q24@?32
v40@0:8@"NSArray"16Q24@?<v@?@"NSError">32
v40@0:8@"NSURL"16Q24@?<v@?@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"BRQueryItem"@"NSError">24
v40@0:8@"NSArray"16@"NSURL"24@?<v@?@"NSMutableDictionary"@"NSError">32
v32@0:8@"<BRItemNotificationReceiving>"16@?<v@?@"<BRItemNotificationSending>"@"NSDictionary"@"NSError">24
v44@0:8@"<BRNonLocalVersionReceiving>"16@"NSURL"24B32@?<v@?@"<BRNonLocalVersionSending>"@"NSURL"@"NSError">36
v24@0:8@?<v@?B@"NSError">16
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?Q@"NSError">16
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
v52@0:8@16i24@28@36@?44
v52@0:8@"NSURL"16i24@"NSString"28@"NSURL"36@?<v@?@"NSURL"@"NSURL"@"NSData"@"NSURL"@"NSData"@"NSError">44
Vv24@0:8@"NSFileHandle"16
v40@0:8@"NSString"16@"NSURL"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSSet"@"NSError">16
v40@0:8c16@"NSString"20B28@?<v@?@"NSError">32
v24@0:8@?<v@?c@"NSError">16
v32@0:8@"NSURL"16@?<v@?@"NSString"@"NSString"@"NSError">24
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"NSString"@"NSString"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSURL"@"NSData"@"NSURL"@"NSData"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSURL"@"BRContainer"@"NSError">24
v44@0:8@16B24Q28@?36
v44@0:8@"NSURL"16B24Q28@?<v@?@"NSURL"@"NSDate"@"NSError">36
v48@0:8@"NSURL"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v28@0:8i16@?<v@?c@"NSError">20
v56@0:8{?=[8I]}16@?48
v56@0:8{?=[8I]}16@?<v@?c@"NSError">48
v24@0:8@?<v@?@"NSDate"@"NSError">16
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"NSString"16@?<v@?I@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSDate"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8@"NSURL"16B24B28@?<v@?@"NSError">32
v32@0:8@"NSURL"16@?<v@?BB@"NSString"@"NSError">24
v32@0:8@"NSURL"16@?<v@?i@"NSError">24
v32@0:8@"NSURL"16@?<v@?B@"NSError">24
v40@0:8@"NSObject<BROperationClient>"16@"NSURL"24@?<v@?@"CKShare"@"NSError">32
v40@0:8@"NSObject<BROperationClient>"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v40@0:8@"NSObject<BROperationClient>"16@"NSURL"24@?<v@?@"NSData"@"NSString"@"NSError">32
v32@0:8@"NSObject<BROperationClient>"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8@"NSObject<BROperationClient>"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSObject<BROperationClient>"16@"NSURL"24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSPersonNameComponents"@"NSString"@"NSError">16
v32@0:8@"NSURL"16@?<v@?@"CKShare"@"NSError">24
v40@0:8@"NSObject<BROperationClient>"16@"CKShare"24@?<v@?@"CKShare"@"NSError">32
v44@0:8@"NSObject<BROperationClient>"16@"CKShare"24B32@?<v@?@"NSError">36
v40@0:8@"NSObject<BROperationClient>"16@"NSArray"24@?<v@?@"NSArray"@"NSError">32
v44@0:8@"NSObject<BROperationClient>"16@"NSURL"24B32@?<v@?@"NSData"@"NSString"@"NSError">36
v40@0:8@"NSObject<BROperationClient>"16@"NSURL"24@?<v@?@"NSString"@"NSError">32
v48@0:8@"NSObject<BROperationClient>"16@"CKShare"24@"NSString"32@?<v@?@"CKShare"@"NSURL"@"NSError">40
v32@0:8@"CKShareMetadata"16@?<v@?@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSURL"@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v40@0:8@"NSNumber"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSURL"16@"NSURL"24@?<v@?@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v32@0:8B16B20@?24
v32@0:8B16B20@?<v@?@"NSError">24
Vv24@0:8@"NSURL"16
v36@0:8i16@20@?28
@36@0:8I16@20@28
q28@0:8I16@20
^{PQLResultSet=#}36@0:8I16Q20@28
^{PQLResultSet=#}32@0:8@16Q24
B28@0:8B16@20
@32@0:8@16@?24
@28@0:8@?16B24
v52@0:8@16@24B32Q36@?44
v60@0:8@16@24@32B40Q44@?52
B32@0:8q16q24
@"BRCTransferStream"
@40@0:8@16@24B32B36
@32@0:8@16B24B28
d40@0:8@16@24@32
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@16@24q32q40q48
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@16@24q32q40
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
v56@0:8@16@24@32@40@?48
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
@"NSDictionary"
@"NSURLSession"
i36@0:8@16i24i28i32
I36@0:8@16I24I28I32
Q48@0:8@16Q24Q32Q40
f40@0:8@16B24f28f32f36
f36@0:8@16f24f28f32
d48@0:8@16d24d32d40
B32@0:8@16B24B28
@"BRCUserDefaults"
@44@0:8i16@20I28@32B40
B40@0:8^@16^@24^B32
{?="byFileID"b1"byDocumentID"b1"byEnclosure"b1"byPath"b1"parent"b1}
@24@0:8i16B20
Q36@0:8[256c]16i24i28i32
v32@0:8r*16Q24
@32@0:8r^v16Q24
@36@0:8r^{?=@@@@Q}16i24^Q28
B40@0:8r^{?=@@@@Q}16@24@32
B24@0:8r^{?=@@@@Q}16
{?=@@@@Q}20@0:8C16
B28@0:8r^{?=@@@@Q}16B24
B20@0:8C16
v56@0:8@16@24q32@40Q48
v64@0:8@16@24q32@40@48^B56
v24@0:8^{_BRCOperation=#@ii@[16C]}16
v40@0:8@"NSURL"16@24@?<v@?@"NSError">32
v32@0:8@"NSURL"16@24
@"NSURL"24@0:8@"NSURL"16
v32@0:8@16@"NSURL"24
v40@0:8@"NSURL"16@24@"NSURL"32
@"NSURL"16@0:8
@"NSOperationQueue"16@0:8
d20@0:8i16
q20@0:8i16
q32@0:8@16q24
q36@0:8@16q24i32
q40@0:8@16Q24^Q32
v40@0:8@?16d24d32
v28@0:8@?16i24
B40@0:8d16d24^@32
@40@0:8Q16@24Q32
@"NSUUID"
B44@0:8@16B24@28^@36
B28@0:8B16^@20
v48@0:8@16I24Q28I36I40B44
@"BRCFSEventsPersistedState"
^{__FSEventStream=}
@"NSObject<OS_dispatch_semaphore>"
@"<BRCFSEventsDelegate>"
v28@0:8@"BRReachabilityMonitor"16B24
v28@0:8@"BRReachabilityMonitor"16I24
@"BRReachabilityMonitor"
B40@0:8@16Q24q32
v32@0:8Q16Q24
B48@0:8{?=[8I]}16
@48@0:8{?=[8I]}16
@64@0:8@16@24{?=[8I]}32
{?=[8I]}16@0:8
c24@0:8@16
^{PQLResultSet=#}
@32@0:8@16^q24
@"SBSApplicationShortcutService"
@72@0:8@16@24@32@40@48@56^@64
@"<BRNonLocalVersionReceiving>"
^{NSObject=#}
%@:%@/%@
%@/%@
%@ %@
knownToServer
wasCached
etag
etagBeforeCrossZoneMove
hasKnownToServer
TB,N
TB,N,V_knownToServer
hasWasCached
TB,N,V_wasCached
hasEtag
TB,R,N
T@"NSString",&,N,V_etag
hasEtagBeforeCrossZoneMove
T@"NSString",&,N,V_etagBeforeCrossZoneMove
apfs
%@'s device ID is 0!
i12@?0i8
-[BRCVolume setUpForRelPath:session:error:]
(passed to caller)
(ignored by caller)
<%@:%p>, device:'%s' mounted-on:'%s' fstype:%s(%@) case-sensitive:%s
deviceID
Ti,R,N,V_deviceID
isCaseSensitive
TB,R,N,V_isCaseSensitive
isIgnoringOwnership
TB,R,N,V_isIgnoringOwnership
hasRenameSwap
TB,R,N,V_hasRenameSwap
hasRenameExcl
TB,R,N,V_hasRenameExcl
hasCloning
TB,R,N,V_hasCloning
mountPath
T@"NSString",R,N
fsTypeName
freeSize
T@"NSNumber",R,N
totalSize
RDONLY
SYNCHRONOUS
NOEXEC
NOSUID
NODEV
UNION
ASYNC
CPROTECT
EXPORTED
QUARANTINE
LOCAL
QUOTA
ROOTFS
DOVOLFS
DONTBROWSE
IGNORE_OWNERSHIP
AUTOMOUNTED
JOURNALED
NOUSERXATTR
DEFWRITE
MULTILABEL
NOATIME
fetched
_relpath
parentRelpath
parentItemID
filename
byIDLocalItem
byIDServerItem
byIDDiffs
byPathLocalItem
byPathServerItem
byPathDiffs
faultedLocalItem
faultedServerItem
faultedRelpath
faultedDiffs
reservedLocalItem
reservedServerItem
%@: %@
 parent (i:%@ n:'%@') %@
unfetched
 byID:
  localItem:  %@
  serverItem: %@
  relpath:    %@
  diffs:      %@
 byID: unfetched
 byPath:
  localItem:  %@
  serverItem: %@
  relpath:    %@
  diffs:      %@
 byPath: unfetched
 fault:
  localItem:  %@
  serverItem: %@
  relpath:    %@
  diffs:      %@
 fault: unfetched
 reserved:
  localItem:  %@
  serverItem: %@
 reserved: unfetched
session
!_parentRelpath.exists || _parentRelpath.isUnixDir
_parentRelpath.appLibrary
lookups should not be used on parent paths of type: %s
can't resolve byPath on shared app library outsize of enclosure
_allowAppLibraryRoot
Can't resolve path match of shared item outside of enclosure
unexpected error when resolving a path; error %d (%s)
__relpath.type == BRCRelativePathTypeSharedEnclosure
supportsSecureCoding
TB,R
T@"BRCPQLConnection",R,N,V_db
T@"NSURL",R,N,V_url
byIDMatch
T{?=@@@@Q},R,N
T@"BRCLocalItem",R,N,V_byIDLocalItem
T@"BRCServerItem",R,N,V_byIDServerItem
relpath
T@"BRCRelativePath",R,N
TQ,R,N,V_byIDDiffs
byPathMatch
T@"BRCLocalItem",R,N,V_byPathLocalItem
T@"BRCServerItem",R,N,V_byPathServerItem
byPathRelpath
TQ,R,N,V_byPathDiffs
faultedMatch
T@"BRCDocumentItem",R,N,V_faultedLocalItem
T@"BRCServerItem",R,N,V_faultedServerItem
T@"BRCRelativePath",R,N,V_faultedRelpath
TQ,R,N,V_faultedDiffs
reservedMatch
T@"BRCLocalItem",R,N,V_reservedLocalItem
T@"BRCServerItem",R,N,V_reservedServerItem
T@"BRCRelativePath",R,N,V_parentRelpath
T@"BRCItemID",R,N,V_parentItemID
T@"NSString",R,N,V_filename
parentPath
T@"NSString",R,N,V_parentPath
pathType
TS,R,N
bySharedEnclosureDocItem
T@"BRCDocumentItem",R,N
Got really unexpected error: %@
Sqlite database became corrupted, abort...
-[BRCPQLConnection _setErrorHandlerWithDBCorruptionHandler:]_block_invoke_2
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-486.21/daemon/foundation/BRCPQLConnection.m
v8@?0
v32@?0@"PQLConnection"8@"PQLStatement"16@"NSError"24
%@ locked for more than 1 minute, aborting...
-[BRCPQLConnection _setLockedHandler]_block_invoke
%@ has been locked for %f seconds: %@
 (for statement %@)
B32@?0@"BRCPQLConnection"8@"PQLStatement"16@"NSError"24
Significantly too slow SQL statement ( vm steps: %u  max:%lu ): %s
v32@?0@"PQLConnection"8^{sqlite3_stmt=}16Q24
ATTACH "%@" AS %@
-[BRCPQLConnection attachDBAtPath:as:error:]
setting profiling hook is not supported on %s
you need to provide a radar
block
com.apple.bird.db.batching
_batchingPacer
B20@?0@"PQLConnection"8i16
pragma page_count
pragma page_size
profilingEnabled
lockedHandler
T@?,C,D,N
explain query plan %@
plan:
    %@
UNIMPLEMENTED
!_executionTransaction
cancelled
executing
finished
idle
 duration:%@
 (bypassing system scheduling)
 next-try:%@
 next-try:%@ ago
 last-error:%@
 last-try:%@
    %@,
self.finished
isFinished
isExecuting
com.apple.bird.operation
self->_syncContext
failed
completed
with error: 
context
_syncContext
TB,N,GisExecuting
TB,N,GisFinished,V_finished
operationID
T@"NSUUID",R,N
startDate
T@"NSDate",R,N,V_startDate
syncContext
T@"BRCSyncContext",R,N,V_syncContext
error
T@"NSError",R,N,V_lastError
logSections
T@"_BRCLogSection",R,N,V_logSections
callbackQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_callbackQueue
operationThrottle
T@"BRCThrottle",N,V_operationThrottle
operationFailureThrottle
T@"BRCThrottle",N,V_operationFailureThrottle
usesBackgroundSession
mainBlock
T@?,C,N,V_mainBlock
finishBlock
T@?,C,N,V_finishBlock
remote:%p
v16@?0@"NSError"8
_remoteClientProxy || _ignoreMissingRemoteClientProxy
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
remoteClientProxy
T@"NSObject<BROperationClient>",&,N,V_remoteClientProxy
ignoreMissingRemoteClientProxy
TB,N,V_ignoreMissingRemoteClientProxy
create-log-section
sharedZoneSubscription
com.apple.sharedb
sync/sharedb
B16@?0@"PQLConnection"8
success
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v16@?0@"CKRecordZoneID"8
there should be a container
v28@?0@"CKServerChangeToken"8B16@"NSError"20
 i:%@
 parent-id:%@
 sc:data
 sc:docs
 sc:trash
 pino:%lld
 old-pino:%lld
 alias-container:%@
 unsalted-bookmark-data:%@
 reverse-alias-containers:{%@}
 old-ct:%@
!item.isBRAlias
!item.isReserved
got a document without a document fileObjectID:%@ %@
[_fileObjectID folderID]
finderTags.tagsCount > 0
huh? shared container but no share on item %@ in zone %@ (%lu)
ownerIdentity
!item.isZoneRoot
appLibrary
T@"BRCAppLibrary",R,N,V_appLibrary
aliasSourceAppLibraryID
T@"NSString",R,N,V_aliasSourceAppLibraryID
itemID
T@"BRCItemID",R,N,V_itemID
parentID
T@"BRCItemID",R,N,V_parentID
oldParentFileID
TQ,R,N,V_oldParentFileID
oldParentFileObjectID
T@"BRFileObjectID",R,N
oldAppLibraryID
T@"NSString",R,N,V_oldAppLibraryID
parentFileObjectID
parentIDs
T@"NSSet",&,N,V_parentIDs
appLibraryIDsWithReverseAliases
T@"NSMutableSet",&,N,V_appLibraryIDsWithReverseAliases
unsaltedBookmarkData
T@"NSString",&,N,V_unsaltedBookmarkData
T@"NSURL",R,D,N
isInDocumentScope
TB,R,N,V_isInDocumentScope
isInDataScope
TB,R,N,V_isInDataScope
isInTrashScope
TB,R,N,V_isInTrashScope
tags
T@"NSMutableArray",&,N,V_tags
BRCSizeInfoCompletedUnitCountKey
BRCSizeInfoTotalUnitCountKey
indeterminate
paused
s:%@ 
%@f:%.4f uc:%lld/%lld
v32@?0@8@"NSProgress"16^B24
UPLOAD_PROGRESS_LOCALIZED_TITLE
Localizable
DOWNLOAD_PROGRESS_LOCALIZED_TITLE
parentFileIDs
T@"NSArray",R,N,V_parentFileIDs
isPublished
TB,R,N,V_published
B16@?0@"BRCPrivateAppLibrary"8
options
Tc,R,N,V_options
readonly-interactive-db
can't open interactive DB: %@
db-corrupting-handler-queue
serverTruth
clientTruth
client.db
can't open the client db we've just created; error %d (%s)
-[BRCAccountSession(BRCDatabaseManager) _startWatcher]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-486.21/daemon/BRCDatabaseManager.m
someone ripped the database from under our feet
-[BRCAccountSession(BRCDatabaseManager) _startWatcher]_block_invoke
checker.db
fetch_and_inc64
v28@?0^{sqlite3_context=}8i16^^{Mem}20
inc_and_fetch64
fetch_and_dec64
dec_and_fetch64
call_block
argc >= 1
indexset_contains
!set || [set isKindOfClass:[NSIndexSet class]]
migration_is_parented_or_equal_to_old_doc_id
is_parented_or_equal_to(Container, parent_id, parentId_or_Set)
root
documents
SELECT item_parent_id FROM client_items WHERE zone_rowid = %@ AND item_id = %@
we have a cycle
trigger_notification
checker
%@.db
control-odd
control-even
-[BRCAccountSession(BRCDatabaseManager) _setupBackupDetector:error:]
-[BRCAccountSession(BRCDatabaseManager) _stepBackupDetector:newState:error:]
sct.dbRowID
UPDATE server_zones SET zone_plist = %@ WHERE rowid = %@
saving the container state should always work
lcz.dbRowID
UPDATE client_zones SET zone_plist = %@ WHERE rowid = %@
saving the zone state should always work
INSERT OR IGNORE INTO server_zones (zone_owner, zone_name, zone_plist) VALUES (%@, %@, %@)
sct.dbRowID is %@ lastInsertedRow is %lld
SELECT rowid from server_zones WHERE zone_owner = %@ and zone_name = %@
rowID
got a new rowid for already existing zone (sct.dbRowID=%@ rowID=%@)
Failed to update plist for zone %@: %@
DELETE FROM server_zones WHERE rowid = %@
SELECT container_id, owner, rowid FROM rowid_reservations
INSERT INTO rowid_reservations (container_id, owner) VALUES (%@, %@)
couldn't allocate a rowid
lib.zoneRowID
UPDATE app_libraries SET app_library_plist = %@, zone_rowid = %@ WHERE rowid = %@
saving the app library state should always work
lib.dbRowID
INSERT OR REPLACE INTO app_libraries (rowid, app_library_name, app_library_owner, app_library_plist, zone_rowid)  VALUES (%@, %@, %@, %@, %@)
DELETE FROM app_libraries WHERE rowid = %@
SELECT rowid, app_library_name, app_library_owner, app_library_plist, zone_rowid FROM app_libraries WHERE app_library_owner != %@
@24@?0@"PQLResultSet"8^@16
SELECT rowid, app_library_name, app_library_owner, app_library_plist, zone_rowid FROM app_libraries WHERE app_library_owner = %@
INSERT OR REPLACE INTO client_zones (rowid, zone_owner, zone_name, zone_plist) VALUES (%@, %@, %@, %@)
DELETE FROM client_zones where rowid = %@
plist
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner != %@
plist != nil
SELECT rowid, zone_owner, zone_name, zone_plist FROM server_zones WHERE zone_owner != %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM server_zones WHERE zone_owner = %@ AND zone_name = %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner = %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner = %@ AND zone_name = %@ AND zone_plist IS NOT NULL
zoneName
SELECT rowid, zone_owner, zone_name, zone_plist FROM server_zones WHERE zone_owner = %@
<rdar://problem/23820733>
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE (item_staged_file_id BETWEEN -9223372036854775808 AND 9223372036854775807)   AND item_staged_file_id != item_file_id
<rdar://problem/25121861>
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE (item_bouncedname >= '')
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items AS li INNER JOIN client_document_access AS da ON (li.rowid = da.item_rowid)        AND li.item_state in (-1, 0)        AND li.item_scope = 2        AND li.item_notifs_rank >= %lld        AND li.item_notifs_rank <= %lld        AND da.indexable != 0   ORDER BY li.item_notifs_rank ASC
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_doc_id = %u AND desired_version != NULL   AND +item_state IN (0, -1)   AND +item_type IN (1, 2, 6, 7)
SELECT key FROM devices WHERE name = %@
INSERT INTO devices (name) VALUES (%@)
can't insert device name: '%s'
SELECT user_plist FROM users WHERE user_key = %@
SELECT user_plist FROM users WHERE user_name = %@
userFormattedName != nil
userIdentity
UPDATE users SET user_plist = %@ WHERE user_name = %@
can't insert user identity for name '%@': %@
unable to update user identity
participant %@ with no user identity
nameless identity: %@ (user %@)
SELECT user_key FROM users WHERE user_name = %@
SELECT user_name FROM users WHERE user_key = %@
userName shouldn't be nil
INSERT INTO users (user_name) VALUES (%@)
can't insert user name: '%@': %@
SELECT br FROM backup_detector
UPDATE client_items SET item_min_supported_os_rowid = NULL
SELECT os, br, bird_schema, db_schema FROM %@ ORDER BY rowid DESC LIMIT 1
INSERT INTO %@ (date,os,br,bird_schema,db_schema) VALUES (%lu,%@,%@,%u,%@)
SELECT count(*) FROM server_state
missing entry in the server_state table
-[BRCAccountSession(BRCDatabaseManager) _checkIntegrity:serverTruth:error:]
server_boot_history
SELECT old, new, counter, os, br FROM backup_detector
UPDATE backup_detector set old = %llu, new = %llu, counter = %llu, br = %@
SELECT count(*) FROM client_state
missing entry in the client_state table
boot_history
UPDATE backup_detector SET os = %@
SELECT * FROM client_state
there should always be one row in client_state {%@}
-[BRCAccountSession(BRCDatabaseManager) _openClientTruthConnectionWithError:]
SELECT uuid FROM backup_detector
_databaseID
sself
B16@?0@"BRCServerZone"8
B16@?0@"BRCAppLibrary"8
UPDATE client_state SET v = %@
unable to flush client state, crash to maintain consistency
-[BRCAccountSession(BRCDatabaseManager) _openClientTruthConnectionWithError:]_block_invoke
v16@?0@"PQLConnection"8
B16@?0@"BRCClientZone"8
PRAGMA recursive_triggers = true
SELECT state FROM server_state
-[BRCAccountSession(BRCDatabaseManager) _openServerTruthConnectionWithError:]_block_invoke
there should always be one row in server_state: %@
server.db
db is stale even after recreating
-[BRCAccountSession(BRCDatabaseManager) validateDatabase:serverTruth:error:]
we should be able to attach the server db {%@}
SELECT bird_schema FROM server_boot_history ORDER BY rowid DESC LIMIT 1
SELECT bird_schema FROM boot_history ORDER BY rowid DESC LIMIT 1
-[BRCAccountSession(BRCDatabaseManager) validateDatabase:serverTruth:error:]_block_invoke
server
client
db_version == schema_upgrades[i].version
db_version == DB_VERSION_CURRENT
_serverDB.serialQueue
_clientDB.serialQueue
readOnlyDB.serialQueue
>>> BROKEN STRUCTURE
>>> SYNC DISABLED (app not installed)
>>> NEEDS UPGRADE
- %@
-----------------------------------------------------
    + app library: %@
SELECT count(*) FROM boot_history
%u containers matching '%s'
-[BRCAccountSession(BRCDatabaseManager) dumpStatusToFileHandle:zoneName:error:]_block_invoke
initializer
dumper
-[BRCAccountSession(BRCDatabaseManager) dumpDatabaseToFileHandle:zoneName:error:]
dump taken at %@ [account=%@] [home=%@]
dump taken at %@
boot_history (startup %.1fs ago)
server_truth
SELECT date,os,br,bird_schema,db_schema FROM server_boot_history ORDER BY rowid DESC LIMIT 10
  [%s] OS:%s CloudDocs:%s BirdSchema:%u DBSchema:%u
client_truth
SELECT date,os,br,bird_schema,db_schema FROM boot_history ORDER BY rowid DESC LIMIT 10
backup_detector
SELECT old,new,counter,os,br FROM backup_detector
  [%u|%u|%u] OS:%s CloudDocs:%s DBSchema:%ld
SELECT * FROM server_state
server_state
-----------------------------------------------------
client_state
-----------------------------------------------------
devices:
SELECT key, name FROM devices
    o "%s" (%ld)
users:
SELECT user_key, user_name, user_plist FROM users
    o "%s" %s (%ld)
%u containers matching '%s'
-----------------------------------------------------
B16@?0Q8
-[BRCAccountSession(BRCDatabaseManager) dumpFileCoordinationInfoToFileHandle:error:]
backup
clientState
T@"BRCClientState",R,N
serverState
T@"BRCServerPersistedState",R,N
databaseID
clientDB
T@"BRCPQLConnection",R,N
readOnlyDB
serverDB
internal-db-%d.%03d
old-db-%d.%03d
DatabaseFromTheFuture
database has a major version from the future: %d (want at most %d)
UPDATE client_items SET item_scope = 2 WHERE zone_rowid = %@ AND item_scope = 0 AND item_state != -2
UPDATE client_items SET item_scope = 2 WHERE zone_rowid = %@ AND item_scope = 0 AND migration_is_parented_or_equal_to_old_doc_id(%p, item_parent_id) AND item_state != -2
UPDATE client_items SET item_scope = 1 WHERE zone_rowid = %@ AND item_scope = 0 AND NOT migration_is_parented_or_equal_to_old_doc_id(%p, item_parent_id) AND item_state != -2
UPDATE server_items SET item_filename = call_block(%@, item_filename) WHERE item_filename != call_block(%@, item_filename)
UPDATE server_items SET item_origname = call_block(%@, item_origname) WHERE item_origname IS NOT NULL AND item_origname != call_block(%@, item_origname)
UPDATE server_items SET version_name = call_block(%@, version_name) WHERE version_name IS NOT NULL AND version_name != call_block(%@, version_name)
UPDATE client_items SET item_filename = call_block(%@, item_filename) WHERE item_filename != call_block(%@, item_filename)
UPDATE client_items SET version_name = call_block(%@, version_name) WHERE version_name IS NOT NULL AND version_name != call_block(%@, version_name)
UPDATE client_items SET item_localname = call_block(%@, item_localname) WHERE item_localname IS NOT NULL AND item_localname != call_block(%@, item_localname)
UPDATE client_items SET item_bouncedname = call_block(%@, item_bouncedname) WHERE item_bouncedname IS NOT NULL AND item_bouncedname != call_block(%@, item_bouncedname)
UPDATE client_document_access     SET evictable = call_block(%@, access_time, (SELECT version_mtime FROM client_items AS ci WHERE ci.rowid = item_rowid))  WHERE evictable > 0
SELECT zone_name FROM server_zones
UPDATE server_state SET state = %@
migration should work: %@
UPDATE client_uploads SET throttle_state = 1 WHERE throttle_id in (SELECT throttle_id FROM client_items, client_uploads WHERE client_items.rowid = client_uploads.throttle_id AND item_localsyncupstate = 3)
INSERT INTO client_uploads (throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, item_id, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_error, upload_priority, upload_request_stamp, app_library_rowid) SELECT client_items.rowid, zone_rowid, 1, 0, 0, 0, 0, item_id, "_prepare", version_size + version_thumb_size, NULL, NULL, NULL, NULL, -1, 0, app_library_rowid FROM client_items WHERE item_type IN (1, 6) AND item_localsyncupstate = 3 AND rowid NOT IN (SELECT throttle_id from client_uploads)
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_id in ( SELECT throttle_id FROM client_items, client_downloads WHERE client_items.rowid = client_downloads.throttle_id AND item_type IN (1, 2, 6, 7) AND desired_version is not NULL AND call_block(%@, desired_version))
INSERT INTO client_downloads (throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, item_id, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, unit_count_completed, app_library_rowid) SELECT client_items.rowid, client_items.zone_rowid, 1, 0, 0, 0, 0, item_id, call_block(%@, app_library_owner, app_library_name), call_block(%@, desired_version), NULL, NULL, NULL, 0, call_block(%@, desired_version), -1, 0, NULL, 0, app_library_rowid FROM client_items, app_libraries, client_zones WHERE client_items.app_library_rowid = app_libraries.rowid AND app_libraries.zone_rowid = client_zones.rowid AND item_type IN (1, 2, 6, 7) AND desired_version is not NULL AND client_items.rowid NOT IN (SELECT throttle_id from client_downloads) AND call_block(%@, desired_version)
appLibraryOwner
syncContextIdentifier
CREATE TABLE devices ( key integer primary key, name text unique not null)
CREATE TABLE server_boot_history ( date integer primary key, os text not null, br text not null, bird_schema integer not null, db_schema integer not null)
CREATE TABLE server_containers( container_id text primary key, container_schema_version integer not null, container_plist blob)
CREATE TABLE server_state (state, config_plist)
INSERT INTO server_state values (NULL, NULL)
CREATE TABLE backup_detector( old integer, new integer, counter integer, os text not null, br text not null)
INSERT INTO backup_detector (old, new, counter, os, br) VALUES (%llu, %llu, %llu, %@, %@)
CREATE TABLE boot_history ( date integer primary key, os text not null, br text not null, bird_schema integer not null, db_schema integer not null)
CREATE TABLE client_containers( container_id text primary key, container_schema_version integer not null, container_plist blob)
CREATE TABLE client_state (v)
INSERT INTO client_state values (NULL)
SELECT container_id, container_plist FROM client_containers
items
unapplied_table
server_items
UPDATE %@ SET item_live_conflict_loser_etags = call_block(%@, item_live_conflict_loser_etags) WHERE item_live_conflict_loser_etags IS NOT NULL
INSERT OR IGNORE INTO %@ (throttle_id) SELECT item_rank FROM %@ WHERE version_conflict_loser_etags IS NOT NULL AND item_rank IS NOT NULL
CREATE TABLE server_zones ( rowid integer PRIMARY KEY, zone_owner text not null, zone_name text not null, zone_plist blob, UNIQUE (zone_owner, zone_name))
CREATE TABLE server_xattr_blobs ( zone_rowid integer not null, signature blob not null, data blob not null, PRIMARY KEY(zone_rowid, signature))
CREATE TABLE server_pending_fetches ( zone_rowid integer not null, record_id blob not null, record blob, PRIMARY KEY (zone_rowid, record_id))
INSERT INTO server_zones (rowid, zone_owner, zone_name, zone_plist) SELECT NULL, %@, container_id, container_plist FROM server_containers
DROP TABLE server_containers
SELECT rowid, zone_name FROM server_zones
server_xattrs
INSERT INTO server_xattr_blobs SELECT %@, signature, data FROM %@
DROP TABLE %@
pending_fetches
CREATE TABLE client_zones ( rowid integer PRIMARY KEY, zone_owner text not null, zone_name text not null, zone_plist blob, UNIQUE (zone_owner, zone_name))
CREATE TABLE client_reader_throttle ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0)
CREATE INDEX "client_reader_throttle/zone_rowid" ON client_reader_throttle (zone_rowid)
CREATE INDEX "client_reader_throttle/next_retry_stamp_active_state" ON client_reader_throttle (throttle_state, next_retry_stamp ASC, throttle_id ASC) WHERE throttle_state = 1
CREATE INDEX "client_reader_throttle/zone_rowid__throttle_state" ON client_reader_throttle (throttle_state, zone_rowid)
CREATE INDEX "client_reader_throttle/expire_stamp_inactive_state" ON client_reader_throttle (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE TABLE client_unapplied_table ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, item_id blob not null, apply_kind integer not null)
CREATE INDEX "client_unapplied_table/zone_rowid" ON client_unapplied_table (zone_rowid)
CREATE INDEX "client_unapplied_table/next_retry_stamp_active_state" ON client_unapplied_table (throttle_state, next_retry_stamp ASC, throttle_id ASC) WHERE throttle_state = 1
CREATE INDEX "client_unapplied_table/zone_rowid__kind__throttle_state" ON client_unapplied_table (throttle_state, zone_rowid, apply_kind)
CREATE INDEX "client_unapplied_table/expire_stamp_inactive_state" ON client_unapplied_table (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE TABLE client_document_access ( zone_rowid text not null , item_rowid integer not null , evictable integer not null , access_time integer not null default 0, PRIMARY KEY (zone_rowid, item_rowid))
CREATE INDEX "client_document_access/access_item" ON client_document_access (access_time)
CREATE INDEX "client_document_access/evictable" ON client_document_access (evictable)
DROP TABLE IF EXISTS document_access
INSERT INTO client_zones (rowid, zone_owner, zone_name, zone_plist)    SELECT call_block(%@, container_id), %@, container_id, container_plist      FROM client_containers
DROP TABLE client_containers
SELECT rowid, zone_name FROM client_zones
desired_additions
UPDATE %@   SET item_state = -1, item_processing_stamp = 1 WHERE item_type = 3   AND item_localsyncupstate = 3
reader_throttle
 CREATE TABLE server_items ( zone_rowid integer not null, item_id blob not null, item_rank integer, item_sharing_options integer not null default 0, item_sharing_etag blob default null, item_stat_ckinfo blob, item_state integer not null, item_type integer not null, item_mode integer not null, item_creator_id integer not null, item_birthtime integer not null, item_parent_id blob not null, item_filename text not null, item_origname text, item_hidden_ext integer not null, item_finder_tags blob, item_xattr_signature blob, version_ckinfo blob, version_mtime integer, version_name text, version_size integer, version_thumb_size integer, version_thumb_signature blob, version_content_signature blob, version_xattr_signature blob, version_device integer, version_conflict_loser_etags blob, version_quarantine_info blob, PRIMARY KEY (zone_rowid, item_id), UNIQUE (item_rank))
CREATE INDEX "server_items/path_index" ON server_items (zone_rowid, item_parent_id, item_filename)
CREATE INDEX "server_items/alias_map" ON server_items (item_type, item_filename, zone_rowid, item_rank) WHERE item_type = 3
CREATE INDEX "server_items/item_rank" ON server_items (zone_rowid, item_rank)
CREATE INDEX "server_items/item_parent_id__item_state" ON server_items (zone_rowid, item_parent_id, item_state)
CREATE INDEX "server_items/item_xattr_signature" ON server_items (zone_rowid, item_xattr_signature)
CREATE INDEX "server_items/version_xattr_signature" ON server_items (zone_rowid, version_xattr_signature)
CREATE TABLE server_owners ( owner_key integer primary key, owner_name text not null, owner_plist blob, UNIQUE (owner_name))
DROP TABLE IF EXISTS %@
INSERT INTO server_items (zone_rowid, item_sharing_options, item_id, item_rank, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_origname, item_hidden_ext, item_finder_tags, item_xattr_signature, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info) SELECT %@, call_block(%@, item_iwork_sharing_info), item_id, item_rank, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_origname, item_hidden_ext, item_finder_tags, item_xattr_signature, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info FROM %@
DROP VIEW IF EXISTS %@
server_items_view
 CREATE TABLE client_items ( rowid integer primary key, zone_rowid integer not null, item_id blob not null, item_sharing_options integer not null default 0, item_localsyncupstate integer, item_in_flight_diffs integer, item_local_diffs integer not null, item_notifs_rank integer not null, item_transfer_priority integer, item_processing_stamp integer, item_doc_id integer, item_file_id integer, item_generation, item_localname text, item_bouncedname text, item_staged_file_id integer, item_staged_generation integer, item_stat_ckinfo blob, item_state integer not null, item_type integer not null, item_mode integer not null, item_creator_id integer not null, item_birthtime integer not null, item_parent_id blob not null, item_filename text, item_hidden_ext integer not null, item_finder_tags blob, item_xattr_signature blob, item_live_conflict_loser_etags blob, version_ckinfo blob, version_mtime integer, version_name text, version_size integer, version_thumb_size integer, version_thumb_signature blob, version_content_signature blob, version_xattr_signature blob, version_device integer, version_conflict_loser_etags blob, version_quarantine_info blob, version_uploaded_assets blob, version_upload_error blob, desired_version blob, UNIQUE (zone_rowid, item_id), UNIQUE (zone_rowid, item_doc_id), UNIQUE (zone_rowid, item_file_id), UNIQUE (item_staged_file_id), UNIQUE (zone_rowid, item_parent_id, item_localname))
CREATE INDEX "client_items/item_parent_id__item_state" ON client_items (zone_rowid, item_parent_id, item_state)
CREATE INDEX "client_items/item_path" ON client_items (zone_rowid, item_parent_id, item_filename)
CREATE INDEX "client_items/alias_map" ON client_items (item_type, item_filename, zone_rowid) WHERE item_type = 3
CREATE INDEX "client_items/item_in_flight_diffs" ON client_items (zone_rowid, item_in_flight_diffs)
CREATE INDEX "client_items/item_bouncedname" ON client_items (item_bouncedname) WHERE item_bouncedname IS NOT NULL
CREATE INDEX "client_items/lost_scan_index" ON client_items (item_state, zone_rowid, item_processing_stamp) WHERE item_state = -1
CREATE INDEX "client_items/zombie_scan_index" ON client_items (item_state, zone_rowid, item_processing_stamp) WHERE item_state = -3
CREATE INDEX "client_items/item_notifs_rank" ON client_items (zone_rowid, item_notifs_rank)
CREATE INDEX "client_items/download_index" ON client_items (zone_rowid, item_staged_file_id, desired_version)
CREATE INDEX "client_items/eviction_index" ON client_items (item_localsyncupstate, zone_rowid, version_size) WHERE item_localsyncupstate = 0
CREATE INDEX "client_items/sync_up_enumerator_1" ON client_items (item_localsyncupstate, zone_rowid, item_type) WHERE item_localsyncupstate = 4
CREATE INDEX "client_items/sync_up_enumerator_2" ON client_items (item_localsyncupstate, zone_rowid, item_state) WHERE item_localsyncupstate = 4
 CREATE TABLE client_pkg_items ( item_doc_id integer not null, rel_path text not null, zone_rowid integer not null, item_type integer not null, asset_rank integer not null, is_dirty integer, quarantine_info blob, file_id integer not null, signature_or_link blob, generation, size integer, mode integer, mtime integer, PRIMARY KEY (item_doc_id, rel_path ASC))
CREATE UNIQUE INDEX "client_pkg_items/asset_rank" ON client_pkg_items (item_doc_id, asset_rank)
CREATE INDEX "client_pkg_items/size" ON client_pkg_items (item_doc_id, size)
CREATE INDEX "client_pkg_items/is_dirty" ON client_pkg_items (item_doc_id, is_dirty)
CREATE INDEX "client_pkg_items/zone_rowid" ON client_pkg_items (zone_rowid)
CREATE TABLE client_uploads ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, item_id blob not null, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, UNIQUE(transfer_stage))
CREATE INDEX "client_uploads/gc_index" ON client_uploads (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE INDEX IF NOT EXISTS "client_uploads/scheduling_by_size" ON client_uploads (throttle_state, transfer_queue, transfer_operation, transfer_size ASC)  WHERE throttle_state = 1
CREATE INDEX IF NOT EXISTS "client_uploads/scheduling_by_stamp" ON client_uploads (throttle_state, transfer_queue, transfer_operation, next_retry_stamp ASC)  WHERE throttle_state = 1
CREATE INDEX "client_uploads/transfer_operation" ON client_uploads (transfer_operation) WHERE transfer_operation IS NOT NULL
CREATE INDEX "client_uploads/zone_rowid__throttle_state" ON client_uploads (throttle_state, zone_rowid)
CREATE INDEX "client_uploads/reset_index" ON client_uploads (zone_rowid, throttle_state)
CREATE INDEX "client_uploads/out_of_quota_index" ON client_uploads (throttle_state, zone_rowid, transfer_size)  WHERE throttle_state = 32
pkg_items
INSERT INTO client_items (rowid, zone_rowid, version_upload_error, item_sharing_options, item_id, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, item_transfer_priority, item_processing_stamp, item_doc_id, item_file_id, item_generation, item_localname, item_bouncedname, item_staged_file_id, item_staged_generation, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_live_conflict_loser_etags, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, desired_version) SELECT rowid, %@, NULL, call_block(%@, item_iwork_sharing_info), item_id, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, item_transfer_priority, item_processing_stamp, item_doc_id, item_file_id, item_generation, item_localname, item_bouncedname, item_staged_file_id, item_staged_generation, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_live_conflict_loser_etags, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, desired_version FROM %@
items_view
INSERT INTO client_pkg_items (zone_rowid, item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime) SELECT %@, item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime FROM %@
DELETE FROM client_reader_throttle
INSERT INTO client_reader_throttle (zone_rowid, throttle_id, throttle_state) SELECT zone_rowid, rowid, 1 FROM client_items WHERE item_localsyncupstate = 2
INSERT INTO client_uploads (zone_rowid, throttle_id, throttle_state, item_id, transfer_queue, transfer_size) SELECT zone_rowid, rowid, 1, item_id, '_prepare', version_size + version_thumb_size  FROM client_items WHERE item_localsyncupstate = 1
DROP TABLE IF EXISTS server_alias_map
DELETE FROM client_unapplied_table
DROP TABLE IF EXISTS alias_map
INSERT INTO client_unapplied_table (zone_rowid, throttle_id, throttle_state, item_id, apply_kind) SELECT zone_rowid, -rowid, 1, item_id, %u FROM client_items WHERE item_localsyncupstate = 1
INSERT INTO client_unapplied_table (zone_rowid, throttle_id, throttle_state, item_id, apply_kind) SELECT zone_rowid, item_rank, 1, item_id, %u FROM server_items
DROP TABLE IF EXISTS client_desired_additions
CREATE TABLE client_downloads ( throttle_id integer not null, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, item_id blob not null, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, download_kind integer not null, download_etag blob not null, download_priority integer not null, download_request_stamp integer not null, download_error blob, UNIQUE(transfer_stage), UNIQUE(throttle_id, download_kind, download_etag))
CREATE INDEX "client_downloads/scheduling_by_priority" ON client_downloads (throttle_state, transfer_queue, transfer_operation, download_priority DESC, download_request_stamp DESC) WHERE throttle_state = 1
CREATE INDEX "client_downloads/scheduling_by_priority_and_kind" ON client_downloads (throttle_state, transfer_queue, transfer_operation, download_kind, download_priority DESC, download_request_stamp DESC) WHERE throttle_state = 1
CREATE INDEX "client_downloads/scheduling_by_stamp" ON client_downloads (throttle_state, transfer_queue, transfer_operation, next_retry_stamp ASC)  WHERE throttle_state = 1
CREATE INDEX "client_downloads/gc_index" ON client_downloads (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE INDEX "client_downloads/transfer_operation" ON client_downloads (transfer_operation) WHERE transfer_operation IS NOT NULL
CREATE INDEX "client_downloads/zone_rowid__throttle_state" ON client_downloads (throttle_state, zone_rowid)
CREATE INDEX "client_downloads/reset_index" ON client_downloads (zone_rowid, throttle_state)
ALTER TABLE client_uploads ADD COLUMN upload_error blob
CREATE INDEX "client_downloads/low_disk_index" ON client_downloads (throttle_state, throttle_id, download_kind)  WHERE throttle_state = 43
DROP INDEX "client_document_access/access_item"
CREATE INDEX "server_items/version_size" ON server_items (version_size)
CREATE TABLE spotlight_ranks ( doc_id integer not null, notif_rank integer not null, PRIMARY KEY (doc_id, notif_rank ASC))
ALTER TABLE backup_detector ADD COLUMN uuid blob
UPDATE backup_detector SET uuid = %@
CREATE INDEX "client_pkg_items/item_doc_id" ON client_pkg_items (item_doc_id, zone_rowid)
CREATE INDEX "client_items/doc_sync_state" ON client_items (zone_rowid, item_localsyncupstate, item_type)WHERE item_type = 1  AND item_localsyncupstate IN (2, 3, 4)
DROP INDEX "client_items/item_notifs_rank"
CREATE INDEX "client_items/item_notifs_rank" ON client_items (item_notifs_rank, zone_rowid)
CREATE INDEX "client_items/spotlight_index" ON client_items (item_type, item_state, item_doc_id, item_notifs_rank) WHERE item_type in (1, 2)
CREATE INDEX "spotlight_ranks/notif_rank" ON spotlight_ranks (notif_rank)
ALTER TABLE client_items ADD COLUMN item_scope integer NOT NULL DEFAULT 0
CREATE INDEX item_scope_index ON client_items(zone_rowid, item_notifs_rank, item_scope, item_state)
CREATE INDEX pending_download_docs ON client_items(item_doc_id, desired_version) WHERE desired_version != NULL
ALTER TABLE server_items ADD COLUMN item_depth integer NOT NULL DEFAULT 0
CREATE INDEX "server_items/item_rank_depth" ON server_items (zone_rowid, item_rank, item_depth)
ALTER TABLE client_items ADD COLUMN item_min_supported_os_rowid integer DEFAULT NULL
CREATE TABLE os_names ( name text unique )
UPDATE client_document_access SET evictable = (SELECT version_mtime FROM client_items as ci WHERE ci.rowid = item_rowid) WHERE access_time = 0 AND evictable = 0 AND (SELECT version_size FROM client_items as ci WHERE ci.rowid = item_rowid) > %lld AND (SELECT item_type FROM client_items as ci WHERE ci.rowid = item_rowid) = 1
 CREATE TABLE app_libraries ( rowid integer PRIMARY KEY, app_library_plist blob )
SELECT rowid, zone_plist FROM client_zones
state
fileID
generationID
maxLostStamp
deepScanStamp
requestID
lastApplyRank
appliedTombstoneRanks
syncUpThrottle
syncUpBudget
syncDownThrottle
INSERT INTO app_libraries (rowid, app_library_plist) VALUES (%@, %@)
ALTER TABLE client_items ADD COLUMN app_library_rowid
UPDATE client_items SET app_library_rowid = zone_rowid
CREATE UNIQUE INDEX "client_items/item_doc_id" ON client_items (item_doc_id)
CREATE UNIQUE INDEX "client_items/item_file_id_unique" ON client_items (item_file_id, item_state)WHERE item_state != -3
CREATE INDEX "client_items/item_id" ON client_items(item_id)
CREATE INDEX "client_items/item_file_id" ON client_items (item_file_id)
DROP INDEX "client_items/item_parent_id__item_state"
CREATE INDEX "client_items/item_parent_id__item_state" ON client_items (item_parent_id, item_state)
DROP INDEX "client_items/item_path"
CREATE INDEX "client_items/item_path" ON client_items (item_parent_id, item_filename)
CREATE INDEX "client_items/item_parent_id__item_localname" ON client_items (item_parent_id, item_localname)
 CREATE TABLE client_pkg_items_tmp ( item_doc_id integer not null, rel_path text not null, item_type integer not null, asset_rank integer not null, is_dirty integer, quarantine_info blob, file_id integer not null, signature_or_link blob, generation, size integer, mode integer, mtime integer, PRIMARY KEY (item_doc_id, rel_path ASC))
INSERT INTO client_pkg_items_tmp (item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime) SELECT item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime FROM client_pkg_items
DROP TABLE client_pkg_items
ALTER TABLE client_pkg_items_tmp RENAME TO client_pkg_items
DROP INDEX item_scope_index
CREATE INDEX "client_items/item_scope_index" ON client_items(zone_rowid, item_notifs_rank, item_scope, item_state)
DROP INDEX pending_download_docs
CREATE INDEX "client_items/pending_download_docs" ON client_items(item_doc_id, desired_version) WHERE desired_version != NULL
DROP INDEX "client_items/doc_sync_state"
CREATE INDEX "server_items/item_id" ON server_items(item_id)
CREATE TABLE users ( user_key integer primary key, user_name text not null, user_plist blob, UNIQUE (user_name))
INSERT INTO users(user_key, user_name, user_plist) SELECT owner_key, owner_name, owner_plist FROM server_owners
DROP TABLE server_owners
ALTER TABLE client_downloads ADD COLUMN unit_count_completed INTEGER DEFAULT 0
ALTER TABLE client_document_access RENAME TO client_document_access_tmp
CREATE TABLE client_document_access ( item_rowid integer primary key, evictable integer not null , access_time integer not null default 0)
INSERT INTO client_document_access(item_rowid, evictable, access_time) SELECT item_rowid, evictable, access_time FROM client_document_access_tmp
DROP TABLE client_document_access_tmp
ALTER TABLE server_items ADD COLUMN item_trash_put_back_parent_id DEFAULT NULL
ALTER TABLE server_items ADD COLUMN item_trash_put_back_path DEFAULT NULL
ALTER TABLE client_items ADD COLUMN item_trash_put_back_parent_id DEFAULT NULL
ALTER TABLE client_items ADD COLUMN item_trash_put_back_path DEFAULT NULL
DROP INDEX "server_items/path_index"
CREATE INDEX "server_items/path_index" ON server_items (item_parent_id, item_filename)
ALTER TABLE client_uploads ADD COLUMN upload_priority integer DEFAULT 0
ALTER TABLE client_uploads ADD COLUMN upload_request_stamp integer DEFAULT 0
CREATE INDEX "client_pkg_items/asset_rank" ON client_pkg_items (item_doc_id, asset_rank)
DROP INDEX "client_items/lost_scan_index"
DROP INDEX "client_items/zombie_scan_index"
CREATE INDEX "client_items/lost_scan_index" ON client_items (item_state, app_library_rowid, item_processing_stamp) WHERE item_state = -1
CREATE INDEX "client_items/zombie_scan_index" ON client_items (item_state, app_library_rowid, item_processing_stamp) WHERE item_state = -3
CREATE INDEX "client_items/doc_sync_state" ON client_items (zone_rowid, item_localsyncupstate, item_type)WHERE item_type = 1
ALTER TABLE client_items ADD COLUMN item_thumb_greedy integer default 0
ALTER TABLE client_items ADD COLUMN item_thumb_live_signature blob default null
CREATE INDEX "client_document_access/evictable/item_rowid" ON client_document_access (item_rowid)
ALTER TABLE app_libraries ADD COLUMN app_library_name text default null
ALTER TABLE app_libraries ADD COLUMN app_library_owner text default null
ALTER TABLE app_libraries ADD COLUMN zone_rowid integer default 0
UPDATE app_libraries SET app_library_name = (SELECT zone_name FROM client_zones WHERE app_libraries.rowid = client_zones.rowid),     app_library_owner = (SELECT zone_owner FROM client_zones WHERE app_libraries.rowid = client_zones.rowid),     zone_rowid = rowid
CREATE TABLE rowid_reservations ( rowid integer PRIMARY KEY, container_id text not null, owner text, UNIQUE (container_id, owner))
SELECT zone_name, zone_owner, rowid FROM server_zones WHERE zone_plist IS NULL
INSERT INTO rowid_reservations  (container_id, owner, rowid)  VALUES (%@, %@, %@)
DELETE FROM server_zones WHERE zone_plist IS NULL
INSERT INTO rowid_reservations  (rowid, container_id, owner) VALUES (%@, %@, %@)
CREATE INDEX "client_items/item_parent_id__item_state" ON client_items (app_library_rowid, item_parent_id, item_state)
ALTER TABLE rowid_reservations RENAME TO rowid_reservations_old
INSERT INTO rowid_reservations  ( rowid, container_id, owner ) SELECT rowid, container_id, owner FROM rowid_reservations_old
DROP TABLE rowid_reservations_old
CREATE UNIQUE INDEX "server_zones/zone_name__zone_owner" ON server_zones (zone_name, zone_owner)
CREATE UNIQUE INDEX "client_zones/zone_name__zone_owner" ON client_zones (zone_name, zone_owner)
SELECT rowid FROM rowid_reservations WHERE owner = %@
SELECT COUNT(*) FROM app_libraries GROUP BY app_library_name, app_library_owner
ALTER TABLE app_libraries RENAME TO app_libraries_old
CREATE TABLE app_libraries ( rowid integer PRIMARY KEY , app_library_plist blob , app_library_name text default null , app_library_owner text default null , zone_rowid integer default 0 , UNIQUE (app_library_name, app_library_owner))
INSERT INTO app_libraries        (rowid, app_library_plist, app_library_name, app_library_name, app_library_owner, zone_rowid) SELECT rowid, app_library_plist, app_library_name, app_library_name, app_library_owner, zone_rowid FROM app_libraries_old
DROP TABLE app_libraries_old
CREATE TABLE aggregates ( key TEXT NOT NULL, value INTEGER NOT NULL DEFAULT 0 )
INSERT INTO aggregates (key, value) SELECT 'version_size_sum', COALESCE(SUM(version_size), 0) FROM server_items
CREATE TRIGGER insert_version_sum_size AFTER INSERT ON server_items  BEGIN  UPDATE aggregates SET value = (value + COALESCE(new.version_size, 0)) WHERE key = 'version_size_sum';   END
CREATE TRIGGER update_version_sum_size UPDATE OF version_size ON server_items  BEGIN  UPDATE aggregates SET value = (value - COALESCE(old.version_size, 0) + COALESCE(new.version_size, 0)) WHERE key = 'version_size_sum';   END
CREATE TRIGGER delete_version_sum_size BEFORE DELETE ON server_items  BEGIN  UPDATE aggregates SET value = (value - COALESCE(old.version_size, 0)) WHERE key = 'version_size_sum';   END
CREATE TABLE client_pkg_sizes (item_doc_id integer not null primary key, aggregate_size integer not null default 0, largest_file_size integer not null default 0)
INSERT INTO client_pkg_sizes SELECT item_doc_id, COALESCE(SUM(size), 0), COALESCE(MAX(size), 0) FROM client_pkg_items GROUP BY item_doc_id
CREATE TRIGGER "client_pkg_items/increase_pkg_size" AFTER INSERT ON client_pkg_items BEGIN INSERT OR IGNORE INTO client_pkg_sizes VALUES (new.item_doc_id, 0, 0); UPDATE client_pkg_sizes SET aggregate_size = aggregate_size + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_doc_id = new.item_doc_id; END
CREATE TRIGGER "client_pkg_items/update_pkg_size" UPDATE OF size ON client_pkg_items BEGIN UPDATE client_pkg_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_doc_id = new.item_doc_id; END
CREATE TRIGGER "client_pkg_items/reduce_pkg_size"  BEFORE DELETE ON client_pkg_items BEGIN UPDATE client_pkg_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) WHERE item_doc_id = old.item_doc_id; END
DROP INDEX "client_pkg_items/size"
CREATE TABLE share_metadata_cache( item_rowid integer primary key, share_path text unique not null, share_metadata blob non null)
ALTER TABLE app_libraries ADD COLUMN auto_client_item_count INTEGER DEFAULT 0
ALTER TABLE app_libraries ADD COLUMN auto_document_count INTEGER DEFAULT 0
ALTER TABLE app_libraries ADD COLUMN auto_document_with_local_changes_count INTEGER DEFAULT 0
ALTER TABLE app_libraries ADD COLUMN auto_aggregate_size INTEGER DEFAULT 0
CREATE TRIGGER "client_items/insert_item" AFTER INSERT ON client_items BEGIN  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type != 4 AND new.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size + COALESCE(new.version_size, 0), auto_document_count = auto_document_count + 1      WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_localsyncupstate >= 2; END
CREATE TRIGGER "client_items/delete_item" BEFORE delete ON client_items BEGIN  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type != 4 AND old.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size - COALESCE(old.version_size, 0), auto_document_count = auto_document_count - 1      WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_localsyncupstate >= 2; END
CREATE TRIGGER "client_items/update_size" UPDATE OF version_size, item_type, item_state ON client_items BEGIN  UPDATE app_libraries SET    auto_aggregate_size = auto_aggregate_size - COALESCE(old.version_size,0)  * (old.item_type = 1 AND old.item_state != 1) + COALESCE(new.version_size,0) * (new.item_type = 1 AND new.item_state != 1),    auto_document_count = auto_document_count - (old.item_type = 1 AND old.item_state != 1) + (new.item_type = 1 AND new.item_state != 1)      WHERE rowid = new.app_library_rowid; END
CREATE TRIGGER "client_items/update_changes_count" UPDATE OF item_type,item_localsyncupstate ON client_items BEGIN  UPDATE app_libraries set auto_document_with_local_changes_count = auto_document_with_local_changes_count - (old.item_type = 1 AND old.item_localsyncupstate >= 2) + (new.item_type = 1 AND new.item_localsyncupstate >= 2) where rowid = new.app_library_rowid; END
ALTER TABLE server_items ADD COLUMN pcs_state INTEGER NOT NULL DEFAULT 0
DROP TABLE share_metadata_cache
CREATE TABLE share_metadata_cache( item_rowid integer primary key, share_path text unique not null, record_id blob non null)
ALTER TABLE "client_uploads" ADD COLUMN app_library_rowid INTEGER
UPDATE "client_uploads" SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_items.rowid = client_uploads.throttle_id) 
ALTER TABLE "client_downloads" ADD COLUMN app_library_rowid INTEGER 
UPDATE "client_downloads" SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_items.rowid = client_downloads.throttle_id ) 
SELECT 1 FROM client_uploads WHERE app_library_rowid == NULL LIMIT 1
incomplete migration for client_uploads
SELECT 1 FROM client_downloads WHERE app_library_rowid == NULL LIMIT 1
incomplete migration for client_downloads
DROP TABLE IF EXISTS share_metadata_cache
CREATE INDEX "client_items/item_parent_id_rowid" ON client_items(zone_rowid, item_parent_id, rowid)
CREATE TABLE mark_children_lost_progress(zone_rowid INTEGER NOT NULL, item_parent_id BLOB NOT NULL, last_updated_row_id INTEGER NOT NULL, UNIQUE(zone_rowid, item_parent_id))
ALTER TABLE client_pkg_items ADD COLUMN xattrs BLOB
DROP INDEX IF EXISTS "client_items/lost_scan_index"
DROP INDEX IF EXISTS "client_items/zombie_scan_index"
DROP INDEX IF EXISTS "client_items/lostzombie_scan_index"
CREATE INDEX "client_items/lostzombie_scan_index" ON client_items (item_processing_stamp) WHERE item_state IN (-1,-3)
ALTER TABLE server_pending_fetches ADD COLUMN deleted_record_type INTEGER NOT NULL DEFAULT 0
SELECT 1 FROM client_items WHERE zone_rowid NOT IN (SELECT rowid from client_zones)
SELECT 1 FROM server_items WHERE zone_rowid NOT IN (SELECT rowid from server_zones)
DROP TABLE IF EXISTS sqlite_stat1
DROP TABLE IF EXISTS sqlite_stat2
DROP TABLE IF EXISTS sqlite_stat3
DROP TABLE IF EXISTS sqlite_stat4
ALTER TABLE mark_children_lost_progress ADD COLUMN item_parent_file_id integer
UPDATE server_items SET item_parent_id = call_block(%@, item_parent_id, item_id) WHERE (SELECT 1 FROM server_zones WHERE server_items.zone_rowid = server_zones.rowid AND server_zones.zone_owner != %@)
UPDATE client_items SET item_parent_id = call_block(%@, item_parent_id, item_id) WHERE (SELECT 1 FROM client_zones WHERE client_items.zone_rowid = client_zones.rowid AND client_zones.zone_owner != %@)
ALTER TABLE client_document_access ADD COLUMN modify_access_time integer NOT NULL DEFAULT 0
UPDATE client_document_access SET modify_access_time = MAX(access_time, IFNULL((SELECT version_mtime FROM client_items AS ci WHERE ci.rowid = item_rowid), 0))
CREATE INDEX "client_document_access/modify_access_item" ON client_document_access(modify_access_time)
INSERT OR IGNORE INTO client_document_access (item_rowid, evictable, access_time, modify_access_time) SELECT rowid, 0, 0, version_mtime FROM client_items WHERE item_type IN (1, 2, 8)
DROP INDEX IF EXISTS "server_pending_fetches/record_index"
CREATE INDEX "server_pending_fetches/record_is_null" ON server_pending_fetches (zone_rowid) WHERE record IS NULL
CREATE INDEX "server_pending_fetches/record_is_not_null" ON server_pending_fetches (zone_rowid) WHERE (record >= '')
ALTER TABLE client_document_access ADD COLUMN indexable integer NOT NULL DEFAULT 0
UPDATE client_document_access SET indexable = 1 WHERE (SELECT item_scope FROM client_items AS ci WHERE ci.rowid = item_rowid) = 2
CREATE INDEX "client_document_access/indexable" ON client_document_access(indexable) WHERE indexable != 0
CREATE TRIGGER "client_items/update_app_library" AFTER UPDATE OF app_library_rowid ON client_items WHEN new.app_library_rowid <> old.app_library_rowid BEGIN  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type != 4 AND old.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size - COALESCE(old.version_size, 0), auto_document_count = auto_document_count - 1      WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_localsyncupstate >= 2;  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type != 4 AND new.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size + COALESCE(new.version_size, 0), auto_document_count = auto_document_count + 1      WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_localsyncupstate >= 2; END
UPDATE app_libraries SET auto_client_item_count=(SELECT COUNT(*) FROM client_items WHERE app_library_rowid = app_libraries.rowid AND item_type != 4 AND item_type != 3), auto_document_count=(SELECT COUNT(*) FROM client_items WHERE app_library_rowid = app_libraries.rowid AND item_type = 1 AND item_state != 1), auto_aggregate_size=(SELECT COALESCE(SUM(version_size), 0) FROM client_items WHERE app_libraries.rowid = app_library_rowid AND item_type = 1 AND item_state != 1), auto_document_with_local_changes_count=(SELECT COUNT(*) FROM client_items WHERE app_library_rowid = app_libraries.rowid AND item_type = 1 AND item_localsyncupstate >= 2)
com.apple.bird.account-migrator
com.apple.bird.account-migrator.throttle
implemented by subclass
v32@?0@"AARequest"8@"AAResponse"16@"NSError"24
v12@?0c8
com.apple.bird.handle-account-changes
com.apple.brc.push
com.apple.bird.migration-setter
account.1
com.apple.bird.disabled-events
com.apple.bird.push
com.apple.bird.sync
com.apple.bird.configuration-server-update
disk account ID doesn't match system account ID
com.apple.Preferences
session-watchdog
com.apple.bird
path
Disabled - iCloud Drive database is from the future
#%lu FAIL %s
#%lu fd = %d
SqliteSQL
Still unable to open account after attempted reset: %@ (underlying: %@, sql: %@)
open result: %@
-[BRCAccountHandler _loadCurrentOnDiskAccountSessionWithError:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-486.21/daemon/notifs/BRCAccountHandler.m
_session == nil
[BRCAccountHandler dbAccountID] == nil || [[BRCAccountHandler dbAccountID] isEqualToString:accountID]
[_currentAccountID isEqualToString:_session.accountID]
the main account (%s) doesn't match the one we have (%s)
v20@?0B8@"NSError"12
folderType >= BRCSyncedFolderTypeMin && folderType <= BRCSyncedFolderTypeMax
syncPolicy
syncPolicy == BRCSyncedFolderPolicyEnabled || syncPolicy == BRCSyncedFolderPolicyDisabled
delegate
T@"<BRCAccountHandlerDelegate>",W,N,V_delegate
T@"BRCAccountSession",R,N,V_session
pushQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_pushQueue
v16@?0@"NSObject<OS_xpc_object>"8
_st.type == BRC_ITEM_TYPE_FINDER_BOOKMARK || _st.type == BRC_ITEM_TYPE_FINDER_BOOKMARK_FAULT
_st.type == BRC_ITEM_TYPE_ALIAS
INSERT INTO client_items ( rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope) VALUES ( %lld, %@, %@, %@, %ld, %d, %@, %lld, %lld, %@, %@, %@, %d, %d, %d, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %u, %@, %d)
UPDATE client_items SET  item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_localsyncupstate = %d, item_in_flight_diffs = %@, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_doc_id = %@, item_file_id = %@, item_generation = %@, item_localname = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_scope = %d  WHERE rowid = %llu
asBRAlias
T@"BRCAliasItem",R,N
asDirectory
T@"BRCDirectoryItem",R,D,N
asDocument
T@"BRCDocumentItem",R,D,N
targetAppLibrary
T@"BRCAppLibrary",R,N
targetAppLibraryID
targetClientZone
T@"BRCClientZone",R,N
targetItemID
T@"BRCItemID",R,N
minimumOSName
hasMinimumOSName
T@"NSString",&,N,V_minimumOSName
sharing.fetch-user-record-id
no record and no error
unreachable: no record and no error
v24@?0@"NSDictionary"8@"NSError"16
zone-health-check
state is of unexpected class %@
update time is of unexpected class %@
![self->_deletedRecordIds containsObject:record.recordID]
self->_recordsByID[record.recordID] == nil
v16@?0@"CKRecord"8
![self->_deletedRecordIds containsObject:recordID]
self->_recordsByID[recordID] == nil
v24@?0@"CKRecordID"8@"NSString"16
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
fault
share-accept-fault
alias
fs-root
symlink
finder-bookmark
bookmark-fault
live
dead
lost
reserved
lost(z)
rejected
needs-read
needs-upload
needs-sync-up
share-id
web-shared-ro
web-shared-rw
public-share-ro
public-share-rw
private-share-ro
private-share-rw
read-only-record
type == BRC_ITEM_TYPE_ALIAS
_type == BRC_ITEM_TYPE_ALIAS
p:%@ 
n:"%@" 
(o:"%@") 
etag:%@ 
bt:%lld 
m:%s 
hidden-ext 
ea:%@ 
has-finder-tags 
trash-put-back{%@, %@} 
ckInfo
type
mode
birthtime
finderTags
hiddenExt
xattrSig
putBackPath
putBackParentID
item %s has invalid state: %d
item %s has invalid type: %d
item %s has invalid mode: 0%0x
item %s has an invalid parent id
Stat shouldn't be nil
T@"BRFieldCKInfo",&,N,V_ckInfo
T@"BRCItemID",&,N,V_parentID
Tc,N,V_state
Tc,N,V_type
Tc,N,V_mode
logicalName
T@"NSString",&,N,V_filenameOrAliasTarget
Tq,N,V_birthtime
TB,N,GisHiddenExt,V_hiddenExt
T@"NSData",&,N,V_finderTags
xattrSignature
T@"NSData",&,N,V_xattrSignature
_aliasTargetContainerIDAndOwner
_aliasTargetMangledID
lazyXattr
T@"NSData",&,N,V_lazyXattr
iWorkShareable
trashPutBackPath
T@"NSString",&,N,V_trashPutBackPath
trashPutBackParentID
T@"BRCItemID",&,N,V_trashPutBackParentID
![self _hasLastEditorRowID]
lastEditorDeviceRowID && lastEditorDeviceRowID.longLongValue > 0
!_lastEditorDeviceOrUserRowID || ![self _hasLastEditorDeviceRowID]
lastEditorRowIDLongLongValue > 0
SELECT name FROM devices WHERE key = %lld
prev-etag:%@ 
mt:%lld 
sz:%@ 
tsz:%@ 
<pkg-pending>
<file-pending>
sig:%@ 
<pending>
tsig:%@ 
losers:{%@} 
device:%@ 
last-editor:%@ 
quarantined 
_contentSignature
mtime
name
size
thumbnailSize
thumbnail
content
deviceKey
deviceName
conflictLoserEtags
quarantineInfo
_%@_%@.%@
_%@_%@
Tq,N,V_mtime
originalPOSIXName
T@"NSString",&,N,V_originalPOSIXName
Tq,N,V_size
Tq,N,V_thumbnailSize
T@"NSData",&,N,V_quarantineInfo
contentSignature
T@"NSData",&,N,V_contentSignature
thumbnailSignature
T@"NSData",&,N,V_thumbnailSignature
T@"NSSet",&,N,V_conflictLoserEtags
lastEditorDeviceOrUserRowID
T@"NSNumber",&,N,V_lastEditorDeviceOrUserRowID
lastEditorDeviceRowID
T@"NSNumber",&,N
lastEditorDeviceName
T@"NSString",&,N,V_lastEditorDeviceName
lastEditorRowID
isPackage
hasThumbnail
brc_signatureIsPackage
brc_signatureIsValid
brc_signatureIsPendingPlaceHolder
brc_hexadecimalString
brc_signature
T@"NSData",R,N
synced-all
synced-st-all
synced-ct-all
item-id
item-shared
item-owner
st-all
st-ckinfo
st-state
st-mode
st-birthtime
st-parent-id
st-filename
st-hidden-ext
st-xattr
st-finder-tags
st-trash-put-back
ct-all
ct-ckinfo
ct-mtime
ct-name
ct-size
ct-sig
ct-xattr
ct-thumb
ct-losers
ct-quarantine
fs-all
fs-state
fs-document-id
fs-file-id
fs-generation
fs-localname
fs-scope
fs-stage
lct-all
lct-ul-assets
lct-ul-error
l-all
l-min-os
l-sync-up-state
l-dl-version
l-app-library
m-forced-conflict
m-cross-zone-moved
m-initial-scan
m-needs-sharing-info
isWritable
isExecutable
symlinkContent
signature
xattrIndex
Ti,N,V_type
hasPath
T@"NSString",&,N,V_path
hasMtime
hasIsWritable
TB,N,V_isWritable
hasIsExecutable
TB,N,V_isExecutable
hasSymlinkContent
T@"NSString",&,N,V_symlinkContent
hasQuarantineInfo
hasSignature
T@"NSData",&,N,V_signature
hasXattrIndex
Tq,N,V_xattrIndex
DIRECTORY
FILE
SYMLINK
TOMBSTONE
(unknown: %i)
com.apple.brc.notififcation-mgr
reply
item.fileObjectID
isCancelled
hasActiveAliasWatchers
TB,R,N,V_isCancelled
priv-app-lib
priv-top-item
priv-item
shared-root
shared-app-lib
shared-enclosure
shared-top-item
shared-item
path.br_isAbsolutePath
root.isResolved
_session
clientZone
fileID != 0ULL
self.exists
self.isUnixDir
self.isInPackage
-resolveAndKeepOpen must be balanced with -close
_openRefCount == 0
[self isResolved]
self.isResolved
_type != BRCRelativePathTypeUnknown
!_basePath || _basePath.isResolved
self.isRoot || _basePath.isResolved
_absolutePath.br_isAbsolutePath
!_relativePath.br_isAbsolutePath
self.isFault
_fd >= 0
com.apple.icloud.itemName
self.isSymLink
self.isFile
_fd < 0
_basePath
!_relativePath
!_basePath
a root should always be openable
#pc#d#b#-#l#s#w
brok
UF_COMPRESSED
com.apple.metadata:_kMDItemUserTags
com.apple.clouddocs.security
_basePath == nil || _basePath->_fd >= 0
_basePath->_fd >= 0
errno > 0
_fileID
pkpass
_documentID > 0
com.apple.FinderInfo
!self.isResolved || self.exists
_parentFileID > 0
_dir == NULL
_dir != NULL
_descendantsEnumerator == nil
_descendantsEnumerator != nil
self.isBRAlias
path:'%@' parentFileID:%llu
 fileID:%llu
 size:%llu
 mtime:%lu
 mode:%c%c%c%c%c%c%c%c%c%c
 br-alias
 finder-alias
 documentID:%u
 generationID:%u fd:%d refs:%u
 appLibrary:%@
path:'%@' unresolved
path:'%@/%@' unresolved
absolute
relative
base
parentFileID
documentID
finderInfo
birth
T@"BRCClientZone",&,N,V_clientZone
T@"BRCAppLibrary",&,N,V_appLibrary
TS,N,V_type
itemScope
TC,N,V_itemScope
sharedItemID
T@"BRCItemID",&,N,V_sharedItemID
sharedOwnerName
T@"NSString",&,N,V_sharedOwnerName
isDocument
isBundle
isFault
isFile
isPackageRoot
isInPackage
isRoot
isUnixDir
exists
isHiddenExtension
isHiddenFile
isBusy
isSymLink
isExcluded
hasFinderTags
isFinderAlias
isBRAlias
fileType
TI,R,N
TQ,R,N
hardlinkCount
fileObjectID
Ti,R,N
Tq,R,N
birthTime
modificationTime
fsGenerationID
T@"BRCGenerationID",R,N
sharedEnclosureUUID
absolutePath
pathRelativeToRoot
pathRelativeToPackageRoot
T@"NSURL",R,N
serverZone
T@"BRCServerZone",R,N
faultDisplayName
bookmark
T@"BRCBookmark",R,N
T@"NSData",R,N,V_quarantineInfo
xattrs
T@"NSData",R,N,V_xattrs
parentHash
value >= 0
Can't init mutex
Can't destroy mutex
Dead lock
Invalid mutex
Can't unlock mutex
Mutex should already be locked
mutex error: %s
Don't call %@.
-[BRCMinHeap init]
<BRCMinHeap %p objects:%@ array:[
%p:%@, 
_getIndex(self, o) == nil
_array[index] == o
count
TQ,R,N,V_count
!_isOpen
account-waiter
unavailable
no account
restricted
available
unhandled account status
unknown account status
v24@?0q8@"NSError"16
evict-item-operation
evict-item
BRCEvictItemOperation needs recursive properties!
evictionCompletionBlock
T@?,C,V_evictionCompletionBlock
inactive
active
pending-lost
pending-flush
pending-parent
pending-scan
pending-download
pending-target
pending-child
pending-coordination
pending-migration
pending-flock
pending-sync-dn
pending-sync-up
pending-quota
toolarge
pending-sync-down
pending-winner
pending-disk
com.apple.bird.scheduler.
throttleID
SELECT next_retry_stamp > %llu FROM %@ WHERE zone_rowid = %@ AND throttle_id = %lld
SELECT 1 FROM %@ WHERE zone_rowid = %@ LIMIT 1
SELECT zone_rowid, throttle_id, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp FROM %@ WHERE zone_rowid = %@ AND throttle_id = %lld
%@ attempts:%d
 last:%@
 next:%@
 cleanup:%@
SELECT throttle_state, COUNT(*) FROM %@ WHERE zone_rowid = %@ GROUP BY throttle_state
 %@:%lld
 idle
throttle
SELECT retry_count, last_try_stamp, next_retry_stamp, expire_stamp, throttle_state FROM %@ WHERE throttle_id = %lld
UPDATE %@   SET throttle_state = call_block(%@, next_retry_stamp) WHERE zone_rowid = %@ AND throttle_id = %lld
DELETE FROM %@ WHERE throttle_id = %lld
UPDATE client_unapplied_table   SET retry_count = 0, next_retry_stamp = 0 WHERE zone_rowid = %@ AND throttle_id = %lld
DELETE FROM %@ WHERE zone_rowid = %@
DELETE FROM %@ WHERE throttle_state = 0 AND expire_stamp <= %lld
UPDATE %@ SET app_library_rowid = %@,transfer_queue = %@ WHERE app_library_rowid = %@ AND transfer_queue = %@
UPDATE %@ SET app_library_rowid = %@ WHERE app_library_rowid = %@
with active work
SELECT 1 FROM %@ WHERE throttle_state > 0 LIMIT 1
you have to override this
self.isCancelled
hasWork
TB,N,V_hasWork
hasActiveWork
TB,N,V_hasActiveWork
hasWorkGroup
T@"NSObject<OS_dispatch_group>",&,V_hasWorkGroup
closed
watchItem
watchChildren
watchDescendants
withInitialGather
item
docs
data
dirs
faults
extern
trash
dirs-only
v12@?0i8
!item.isDead && !item.isReserved
gatheredChildrenItemID
T@"BRCItemID",&,N,V_gatheredChildrenItemID
_receiver == nil
com.apple.brc.pipe
<%@ %p
 gathering
 {%@}
 {descendants of 
 {children of 
 {item at 
[fid:%@]
[fid:%@ n:%@]
 (%@%@)}
|withAliases
 {NSMDQ
 data
 docs
 dirs-only
 dirs
 faults
 ext
 trash
 queued:%ld>
_watchKind & WATCH_ITEM
v32@?0@"NSNumber"8@"BRProgressUpdate"16^B24
v16@?0@"NSArray"8
v12@?0B8
oldWatchedAncestorItemID
T@"BRCItemID",&,V_oldWatchedAncestorItemID
watchedAncestorItemID
T@"BRCItemID",&,V_watchedAncestorItemID
watchedAncestorFileObjectID
T@"BRFileObjectID",&,V_watchedAncestorFileObjectID
watchedAncestorFilenameToItem
T@"NSString",&,V_watchedAncestorFilenameToItem
manager
T@"BRCNotificationManager",R,N,V_manager
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"<BRCNotificationPipeDelegate>",W,N,V_delegate
-[BRCNotificationPipe(IPCs) watchItemAtURL:options:reply:]
v32@?0@"BRCAppLibrary"8@"BRCURLToItemLookup"16@"NSError"24
-[BRCNotificationPipe(IPCs) watchItemsNamesPrefixedBy:inScopes:appLibraryIDs:gatheringDone:]
-[BRCNotificationPipe(IPCs) watchScopes:appLibraryIDs:gatheringDone:]
-[BRCNotificationPipe(IPCs) watchScopes:gatheringDone:]
-[BRCNotificationPipe(IPCs) boostPriority:]
-[BRCNotificationPipe(IPCs) invalidate]
WaitingTimeBeforeDisplay
MinimalDisplayTime
default
alternate
other
cancel
v16@?0Q8
self->_source == NULL
v32@?0@8@16^B24
_DEFAULT
keynote
_KEYNOTE
numbers
_NUMBERS
pages
_PAGES
_IOS
shareMetadata
SHARING_JOIN_HEADER
SHARING_JOIN_HEADER_NO_DOCUMENT_NAME
SHARING_JOIN_MESSAGE_PRIVATE
SHARING_JOIN_MESSAGE_PUBLIC
SHARING_JOIN_ALT_BUTTON
SHARING_JOIN_DEFAULT_BUTTON
v32@?0@"NSPersonNameComponents"8@"NSString"16@"NSError"24
SHARING_ICLOUD_SETUP_HEADER_IOS
SHARING_ICLOUD_SETUP_MESSAGE_IOS
SHARING_ICLOUD_SETUP_ALT_BUTTON_IOS
PREVIEW_BUTTON
SHARING_ICLOUD_SETUP_DEFAULT_BUTTON_IOS
SHARING_ICLOUD_DRIVE_SETUP_HEADER_IOS
SHARING_ICLOUD_DRIVE_SETUP_MESSAGE_IOS
SHARING_ICLOUD_DRIVE_SETUP_ALT_BUTTON_IOS
SHARING_ICLOUD_DRIVE_SETUP_DEFAULT_BUTTON_IOS
SHARING_APP_NOT_INSTALLED_HEADER_IOS
SHARING_APP_NOT_INSTALLED_MESSAGE_IOS
SHARING_APP_NOT_INSTALLED_ALT_BUTTON_IOS
SHARING_APP_NOT_INSTALLED_DEFAULT_BUTTON_IOS
SHARING_PROFILE_DISABLED_HEADER_IOS
SHARING_PROFILE_DISABLED_MESSAGE_IOS
SHARING_PROFILE_DISABLED_DEFAULT_BUTTON_IOS
SHARING_GENERIC_ERROR_HEADER
SHARING_GENERIC_ERROR_MESSAGE
SHARING_GENERIC_ERROR_DEFAULT_BUTTON
SHARING_DEVICE_OFFLINE_ERROR_HEADER
SHARING_DEVICE_OFFLINE_ERROR_MESSAGE
SHARING_DEVICE_OFFLINE_ERROR_DEFAULT_BUTTON
SHARING_ICLOUD_NOT_REACHABLE_HEADER
SHARING_ICLOUD_NOT_REACHABLE_MESSAGE
SHARING_ICLOUD_NOT_REACHABLE_DEFAULT_BUTTON
SHARING_NO_LONGER_SHARED_HEADER
SHARING_NO_LONGER_SHARED_MESSAGE
SHARING_NO_LONGER_SHARED_BUTTON
SHARING_PARTICIPANT_LIMIT_REACHED_HEADER
SHARING_PARTICIPANT_LIMIT_REACHED_MESSAGE
SHARING_PARTICIPANT_LIMIT_REACHED_ALT_BUTTON
SHARING_FALLBACK_SUCCESS_HEADER
SHARING_FALLBACK_SUCCESS_DEFAULT_BUTTON
_targetResolved
not in a container
path.isBRAlias
somebody doesn't understand what bookmarks are for!
docs.icloud.com:
props[NSURLDocumentIdentifierKey] && [docID isEqualToNumber:props[NSURLDocumentIdentifierKey]]
-[BRCBookmark _resolveTargetWithError:]
_dataResolved
-[BRCBookmark writeUnderParent:name:error:]
.%@.alias
containsItemID
targetServerZone
target
T@"BRCLocalItem",R,N
sync bubble setting is not supported
Logged out - iCloud Drive is not configured
com.apple.bird.xpc-listener-ready
com.apple.bird.account-startup-queue
com.apple.bird.account-resume-queue
com.apple.bird.startup-queue
account-loader
%@.txt
can't load salt, bad bug ahead
com.apple.language.changed
qos_class_self() == QOS_CLASS_DEFAULT
share-accept
v24@?0@8@"NSError"16
share accept operations
 %@: %@
v32@?0@"NSURL"8@"BRCSharingAcceptFlowOperation"16^B24
dirPath
index < _fileProviders.count
com.apple.iCloudDriveApp
our connection was invalidated
-[BRCDaemon listener:shouldAcceptNewConnection:]_block_invoke_3
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-486.21/daemon/BRCDaemon.m
NOT 
disableAccountChangesHandling
TB,N,V_disableAccountChangesHandling
disableAppsChangesHandling
TB,N,V_disableAppsChangesHandling
forceIsGreedyState
TQ,N,V_forceIsGreedyState
logsDirPath
T@"NSString",&,N,V_logsDirPath
appSupportDirPath
T@"NSString",&,N,V_appSupportDirPath
cacheDirPath
T@"NSString",&,N,V_cacheDirPath
accountHandler
T@"BRCAccountHandler",R,N,V_accountHandler
T@"BRCAccountSession",&,N,V_session
loggedOutError
T@"NSError",&,N,V_loggedOutError
endpoint
T@"NSXPCListenerEndpoint",R,N
ubiquityTokenSalt
T@"NSString",R,N,V_ubiquityTokenSalt
startupDate
T@"NSDate",R,N,V_startupDate
isInSyncBubble
doesNotHaveEnoughDiskSpaceToBeFunctional
TB,N,V_hasNotEnoughDiskSpaceToBeFunctional
containerClass
T#,&,N,V_containerClass
versionsProvider
T@"BRCVersionsFileProvider",R,N,V_versionsProvider
UnknownHost
can't create directory at
%s '%s'; error %d (%s)
%s '%s'; error: %s
rejection
creation
update
Apply Changes
client_unapplied_table
SELECT throttle_state, COUNT(*) FROM client_unapplied_table WHERE zone_rowid = %@ AND throttle_id > 0   AND throttle_id IN (SELECT item_rank FROM server_items) GROUP BY throttle_state
SELECT COUNT(*) FROM client_unapplied_table WHERE zone_rowid = %@ AND throttle_id > 0   AND throttle_id NOT IN (SELECT item_rank FROM server_items)
 expired:%@
 has-faulting-barriers
UPDATE client_unapplied_table   SET throttle_state = call_block(%@, next_retry_stamp, apply_kind), apply_kind = %u WHERE zone_rowid = %@ AND throttle_id = %lld
INSERT OR REPLACE INTO client_unapplied_table (zone_rowid, throttle_id, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, item_id, apply_kind) VALUES (%@, %lld, %u, %u, %lld, %lld, %lld, %@, %u)
stamps.state != BRCThrottleStateInvalid
UPDATE client_unapplied_table SET   throttle_state = 1, retry_count = %u, last_try_stamp = %llu, next_retry_stamp = %llu, expire_stamp = %llu, apply_kind = %u WHERE zone_rowid = %@ AND throttle_id = %llu
UPDATE client_unapplied_table    SET throttle_state = 1  WHERE zone_rowid = %@     AND throttle_state = %u    AND throttle_id IN (SELECT item_rank FROM server_items                        WHERE zone_rowid = %@ AND item_parent_id = %@)
WITH RECURSIVE  reschedulable_items (item_rank, item_id) AS (    SELECT si.item_rank, si.item_id      FROM server_items AS si     WHERE si.zone_rowid = %@ AND NOT EXISTS (        SELECT 1 FROM client_items         WHERE zone_rowid = %@ AND item_parent_id = si.item_id           AND (si.item_type = 0                OR                si.item_type = 4 )           AND item_state IN (0, -1)    )  ) UPDATE client_unapplied_table    SET throttle_state = 1  WHERE zone_rowid = %@     AND throttle_state = %u    AND throttle_id IN (SELECT item_rank FROM reschedulable_items WHERE item_id = %@)
state >= BRCThrottleStateSuspendedBase
UPDATE client_unapplied_table SET throttle_state = 1 WHERE throttle_state = %u AND zone_rowid = %@ AND throttle_id = %llu
UPDATE client_unapplied_table SET throttle_state = 1 WHERE throttle_state = %u AND zone_rowid = %@
SELECT item_rank, zone_rowid, item_id, item_filename FROM server_items WHERE item_filename LIKE %@ ESCAPE '\' AND item_type = 3
!shouldFixup || !serverZone.isSharedZone || ![serverZone.zoneName isEqualToString:BRUbiquitousDefaultContainerID]
SELECT item_rank, zone_rowid FROM server_items WHERE item_filename = %@ AND item_type = 3
INSERT OR REPLACE INTO client_unapplied_table(zone_rowid, throttle_id, throttle_state, item_id, apply_kind) SELECT %@, -rowid, 1, item_id, %u FROM client_items WHERE zone_rowid = %@ AND item_localsyncupstate = 1
INSERT OR REPLACE INTO client_unapplied_table(zone_rowid, throttle_id, throttle_state, item_id, apply_kind) SELECT %@, item_rank, 1, item_id, %u FROM server_items WHERE zone_rowid = %@
  SELECT next_retry_stamp, throttle_id, zone_rowid, item_id, apply_kind     FROM client_unapplied_table    WHERE throttle_state = 1      AND next_retry_stamp >= 0 ORDER BY next_retry_stamp, throttle_id    LIMIT %d
appLibrary && zone
si == nil
SELECT 1 FROM client_unapplied_table WHERE zone_rowid = %@ AND throttle_state = 1 AND apply_kind = %d LIMIT 1
sync is blocked for client zone: %@
UPDATE client_unapplied_table   SET throttle_state = 1 WHERE throttle_state = 26   AND throttle_id = %llu
no writer for zone %@
DELETE FROM client_unapplied_table WHERE throttle_id > 0   AND throttle_id NOT IN (SELECT item_rank FROM server_items)
<rdar://problem/23822933>
INSERT OR IGNORE INTO client_unapplied_table (zone_rowid, throttle_id, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, item_id, apply_kind) SELECT %@, item_rank, 1, 0, 0, 0, 0, item_id, %u  FROM server_items WHERE zone_rowid = %@ AND item_rank >= %lld AND item_rank < %lld
failed to insert into client_unapplied_commands
predicate
T@"NSPredicate",&,N,V_predicate
is not private app library
is not shared app library
Must be implemented in subclass
-[BRCAppLibrary init]
unexpected parameter
target-app-library-queue
%@:%@
rootItem.isDirectory
state == BRCAppLibraryStateNotActivated || !(state & BRCAppLibraryStateNotActivated)
_session.fsReader
foreground
background
%@%@[%@] %@ {s:%@} ino:%@ gen:%@
 ago
 deep-scan:%@%@
 max-lost:%@%@
<%@>
item_type != 3
item_scope = 2 AND %@
item_scope = 1 AND %@
(%@) OR (%@)
(   item_scope = 2 OR item_scope = 1) AND item_type = 3
item_scope = 3
AND item_type IN (1, 2, 8, 5, 6, 7)
AND item_type = 0
asking for no scopes?
%@%%
%% %@%%
AND (item_filename LIKE %@ ESCAPE '\' OR item_filename LIKE %@ ESCAPE '\')
docsOrDataScopeInjection || externalScopeInjection
AND ((%@) OR (%@) OR (%@))
<rdar://problem/23814124>
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy    FROM client_items   WHERE item_notifs_rank >= %lld     AND item_notifs_rank < %lld     AND +app_library_rowid = %@     AND item_state IN (0, -1)     %@      %@      %@ ORDER BY item_notifs_rank   LIMIT %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy    FROM client_items   WHERE item_parent_id = %@      AND item_notifs_rank >= %lld      AND item_notifs_rank < %lld      AND item_state IN (0, -1)     AND zone_rowid = %@ ORDER BY item_notifs_rank   LIMIT %lld
v16@?0@"BRCFileCoordinator"8
_db.isBatchSuspended
call_block(%p, item_parent_id)
item_parent_id = %@
UPDATE client_items  SET item_state = call_block(%p,   item_type, IFNULL(item_localname, item_filename), item_file_id,   item_generation, version_mtime, item_xattr_signature,   item_mode, rowid, item_localsyncupstate, item_min_supported_os_rowid, app_library_rowid),   item_processing_stamp = inc_and_fetch64(%p), app_library_rowid = %@ WHERE zone_rowid = %@ AND %@ AND rowid > %lu AND item_state = 0 AND item_type != 4 ORDER BY rowid LIMIT %lu
bad sql statement
not 
INSERT OR REPLACE INTO mark_children_lost_progress(zone_rowid, item_parent_id, item_parent_file_id, last_updated_row_id) VALUES ( %@, %@, %@, %lu)
DELETE FROM mark_children_lost_progress WHERE zone_rowid = %@ AND item_parent_id = %@ AND last_updated_row_id = %lu
SELECT item_parent_id, item_parent_file_id, last_updated_row_id FROM mark_children_lost_progress WHERE zone_rowid = %@ LIMIT 2
oldAppLibrary.state & BRCAppLibraryStateNeedsLost
SELECT auto_client_item_count > 0 FROM app_libraries  WHERE rowid = %@
SELECT 1 FROM client_items  WHERE item_type != %d AND item_type != %d AND item_state in (0, -1)    AND app_library_rowid = %@ LIMIT 1
SELECT auto_document_with_local_changes_count > 0 FROM app_libraries WHERE rowid = %@
SELECT auto_aggregate_size FROM app_libraries WHERE rowid = %@
SELECT SUM(version_size)       FROM client_items AS li LEFT JOIN client_document_access AS da ON (da.item_rowid = li.rowid)     WHERE item_localsyncupstate = 0       AND item_type = 1       AND item_state != 1       AND version_size >= %llu        AND da.evictable <= %llu       AND da.evictable > 0       AND li.version_mtime <= %llu       AND li.zone_rowid = %@
SELECT auto_document_count FROM app_libraries WHERE rowid = %@
now evicting uploaded items
no longer evicting uploaded items
evicting uploaded items
not evicting uploaded items
<rdar://problem/23820729>
SELECT item_type, item_filename             FROM client_items            WHERE app_library_rowid = %@              AND item_type = 3              AND item_state = 0
%@/%%
            SELECT 1             FROM client_items            WHERE app_library_rowid = %@              AND item_filename LIKE %@ ESCAPE '\'            LIMIT 1
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy          FROM client_items         WHERE item_type = 3           AND item_state = 0           AND item_filename LIKE %@ ESCAPE '\'
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_filename = %@ AND item_type = 3 AND app_library_rowid = %@
item not found
identifier
T@"NSNumber",&,N,V_fileID
T@"NSNumber",&,N,V_generationID
T@"NSNumber",&,N,V_deepScanStamp
T@"BRCClientZone",W,N,V_clientZone
T@"<BRCAppLibraryDelegate>",&,N,V_delegate
tracker
T@"brc_task_tracker",R,N,V_tracker
logName
appLibraryIDAndOwner
T@"NSString",R,N,V_appLibraryIDAndOwner
appLibraryID
T@"NSString",R,N,V_appLibraryID
ownerName
T@"NSString",R,N,V_ownerName
mangledID
T@"NSString",R,N,V_mangledID
fsEventsMonitor
T@"BRCFSEventsMonitor",R,N
dbRowID
T@"BRCALRowID",&,N,V_dbRowID
zoneRowID
T@"BRCZoneRowID",&,N,V_zoneRowID
isPrivateAppLibrary
isSharedAppLibrary
isCloudDocsAppLibrary
asPrivateAppLibrary
T@"BRCPrivateAppLibrary",R,N
asSharedAppLibrary
T@"BRCSharedAppLibrary",R,N
needsSave
TB,N,V_needsSave
syncedFolderType
syncContextIfExists
T@"BRCSyncContext",R,N
T@"NSMutableDictionary",R,N
TI,R,N,V_state
isForeground
shouldEvictUploadedItems
hasActiveQueries
hasActiveRecursiveQueries
hasActiveAliasQueries
Tq,N,V_maxLostStamp
isGreedy
!brc_isSharedZoneOwner(ownerName)
 bundles:{%@}
nil dbRowID for %@
metadataChangetag
metadataNeedsSyncUp
parentPath.appLibrary == self
containerMetadata
T@"BRContainer",R,N,V_containerMetadata
containerMetadataEtag
T@"NSString",&,N,V_containerMetadataEtag
containerMetadataNeedsSyncUp
TB,N,V_containerMetadataNeedsSyncUp
documentsPath
enclosureUUID
T@"BRCSharedClientZone",R,D,N
needs-lost
initial-scan
no-documents
no-data
root-created
scan-on-caught-up
root-moved-to-clouddocs
needs-cross-move-fixup
evict-uploaded-items
retryCount
TI,R,N,V_retryCount
latestRetry
Tq,R,N,V_latestRetry
throttleHash
Tq,R,N,V_throttleHash
_initialRetryCount <= _finalRetryCount
_minimumNsecsBetweenRetries <= _maximumNsecsBetweenRetries
_minimumNsecsBetweenRetries > 0
_maximumNsecsBetweenRetries > 0
_nsecsBeforeForgettingCounter >= _maximumNsecsBetweenRetries
T@"NSString",R,N,V_name
nsecsBeforeForgettingCounter
Tq,R,N,V_nsecsBeforeForgettingCounter
q24@?0@"BRCRetryCounter"8@"BRCRetryCounter"16
NULL
unhandled format specifier
  SELECT throttle_id, next_retry_stamp, app_library_rowid,           download_etag, transfer_stage,           unit_count_completed     FROM client_downloads    WHERE throttle_state = 1      AND transfer_queue = %@      AND transfer_operation IS NULL      AND download_kind = %d ORDER BY download_priority DESC, download_request_stamp DESC
UPDATE client_downloads    SET transfer_queue = '_retry'  WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
Downloader
client_downloads
com.apple.bird.downloader
com.apple.bird.download-tracker
SELECT app_library_rowid, throttle_id   FROM client_downloads  WHERE throttle_state =1    AND download_kind = %d
SELECT retry_count, last_try_stamp, next_retry_stamp, expire_stamp, throttle_state FROM client_downloads WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
UPDATE client_downloads SET  item_id = %@, transfer_stage = %@, transfer_operation = %@ WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
UPDATE client_downloads SET  retry_count = %u, last_try_stamp = %lld, next_retry_stamp = %lld, expire_stamp = %lld WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
SELECT zone_rowid, throttle_id, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, download_kind, download_etag, transfer_operation, transfer_queue, download_error, app_library_rowid FROM client_downloads WHERE throttle_id = %lld ORDER BY download_kind, download_etag
[%@(%d) %s:%@
_retry
 pending-retry
 download:done/cancelled
 downloading:%.1f%%
 op:%@
[%ld %@]
INSERT INTO client_downloads (zone_rowid, throttle_id, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, item_id, app_library_rowid, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error) VALUES (%@, %lld, %u, %u, %lld, %lld, %lld, %@, %@, %@, %lld, %@, %@, %@, %u, %@, %ld, %lld, %@)
UPDATE client_downloads SET  throttle_state = %d, retry_count = %u, last_try_stamp = %lld, next_retry_stamp = %lld, expire_stamp = %lld, app_library_rowid = %@, transfer_queue = %@, item_id = %@, download_priority = %ld, download_request_stamp = %lld WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
SELECT transfer_size FROM client_downloads WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
SELECT app_library_rowid FROM client_downloads WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@   AND transfer_operation = %@
done
UPDATE client_downloads SET  transfer_operation = call_block(%@, next_retry_stamp), download_error = %@, unit_count_completed = %lld WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
UPDATE client_downloads SET  throttle_state = %d, transfer_record = NULL, transfer_stage = call_block(%@, transfer_stage), transfer_operation = NULL, download_error = %@ WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
UPDATE client_downloads SET  throttle_state = %d, transfer_queue = %@, transfer_record = %@, transfer_stage = %@, transfer_operation = NULL, download_error = NULL WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
_done
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_state = %u AND app_library_rowid = %@
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_state = %u AND throttle_id = %lld
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_state = 43   AND call_block(%@, transfer_size, app_library_rowid)
UPDATE client_downloads SET  throttle_state = %d, transfer_queue = %@, transfer_record = NULL, transfer_stage = NULL, transfer_operation = NULL, unit_count_completed = 0 WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, item_id, app_library_rowid, throttle_state, transfer_size FROM client_downloads WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, item_id, app_library_rowid, throttle_state, transfer_size FROM client_downloads WHERE throttle_id = %lld AND download_kind = %u
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, item_id, app_library_rowid, throttle_state, transfer_size FROM client_downloads WHERE throttle_id = %lld
SELECT transfer_operation    FROM client_downloads  WHERE throttle_id = %lld AND throttle_state == 1
UPDATE client_downloads SET download_etag = %@ WHERE throttle_id = %lld AND download_etag = %@ AND download_kind = %d
SELECT SUM(transfer_size) FROM client_downloads WHERE throttle_state = 1
SELECT transfer_operation IS NOT NULL FROM client_downloads WHERE throttle_id = %llu AND download_kind = %u AND download_etag = %@
SELECT 1 FROM client_downloads WHERE throttle_id = %llu AND download_kind != %u AND transfer_queue = %@ LIMIT 1
DELETE FROM client_pkg_items WHERE item_doc_id = %@
SELECT transfer_stage FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %d AND download_etag = %@    AND transfer_queue = '_done'
We should have a stageID for this item: %s
brpackage-extended
SELECT 1 FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %d  LIMIT 1
SELECT transfer_queue, download_etag, throttle_state   FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %d
We thought we finished downloading loser etag %@ for %@ but it wasn't found, so rescheduling
addedLosers
removedLosers
v32@?0@"NSString"8@"GSAddition"16^B24
SELECT 1 FROM client_downloads WHERE throttle_id = %llu AND download_kind = %u AND transfer_queue = %@ LIMIT 1
SELECT transfer_queue, download_etag, throttle_state FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %u
SELECT throttle_state, transfer_queue, transfer_stage, transfer_record   FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
UPDATE client_downloads SET transfer_operation = NULL WHERE (transfer_operation >= '')
SELECT app_library_rowid, transfer_queue   FROM client_downloads  WHERE throttle_state = 1 GROUP BY app_library_rowid, transfer_queue
_prepare
UPDATE client_downloads   SET transfer_queue = call_block(%@, throttle_id, app_library_rowid, next_retry_stamp)  WHERE throttle_state = 1   AND transfer_queue = '_retry'   AND transfer_operation IS NULL   AND next_retry_stamp <= %lld
  SELECT MIN(next_retry_stamp)     FROM client_downloads    WHERE throttle_state = 1      AND transfer_queue = '_retry'      AND transfer_operation IS NULL
thumbnail-%lld-%@
v24@?0@"BRCDownloadThumbnail"8@"NSError"16
UPDATE client_downloads SET  throttle_state = %d WHERE throttle_id = %llu AND download_kind = %u AND download_etag = %@
content-%lld-%@
v24@?0@"BRCDownloadContent"8@"NSError"16
item download %@ etag changed from %@
UPDATE client_downloads    SET throttle_state = %u  WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
loser-%lld-%@
v24@?0@"BRCDownloadVersion"8@"NSError"16
  SELECT throttle_id, next_retry_stamp, download_kind, download_etag     FROM client_downloads    WHERE throttle_state = 1      AND transfer_queue = %@      AND transfer_operation IS NULL      AND download_priority >= %ld ORDER BY download_priority DESC, download_request_stamp DESC
UPDATE client_downloads    SET transfer_queue = '_retry'  WHERE throttle_id = %ld AND download_kind = %u AND download_etag = %@
SELECT version_ckinfo FROM client_items WHERE rowid = %ld
SELECT MIN(next_retry_stamp) FROM client_downloads   WHERE throttle_state = 1     AND transfer_queue = %@      AND transfer_operation IS NULL 
downloadsDeadlineScheduler
T@"BRCDeadlineScheduler",R,N,V_downloadsDeadlineScheduler
version
(%s)
never
%@ ago
ready
%llu.%llu%@
-%lld bytes
%lld bytes
-%lld KB
%lld KB
-%.1f MB
%.1f MB
-%.2f GB
%.2f GB
-%lld GB
%lld GB
 (%lld)
    
_indentation > 0
T@"PQLConnection",R,N,V_db
T^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq},R,N,V_fp
indentationBaseString
T@"NSString",&,N,V_indentationBaseString
liveDaemon
TB,N,V_liveDaemon
onlyActiveStuff
TB,N,V_onlyActiveStuff
dumpTrackedPendingDownloads
TB,N,V_dumpTrackedPendingDownloads
<unknown>
0x%llx
unknown color
%@~%d
!self->_resetTimer
not implemented
live doc with no fileid: %@
self->_resetTimer == nil
DELETE FROM client_items WHERE zone_rowid = %@
<rdar://problem/23829401>A
DELETE FROM client_pkg_items WHERE NOT EXISTS (SELECT * FROM client_items WHERE client_items.item_doc_id = client_pkg_items.item_doc_id)
<rdar://problem//26848061>
DELETE FROM client_document_access WHERE item_rowid in (SELECT rowid FROM client_items WHERE zone_rowid = %@)
still-wants-data-unlinked
com.apple.decmpfs
.icloud-drive.do-not-delete
com.apple.ubd.prsid
.CloudDocs
.ubd
.do-not-delete
com~apple~Keynote/Documents/Recovered Data
com~apple~Keynote/Documents/Recovered Data.folder
com~apple~Numbers/Documents/Recovered Data
com~apple~Numbers/Documents/Recovered Data.folder
com~apple~Pages/Documents/Recovered Data
com~apple~Pages/Documents/Recovered Data.folder
Application Support/Ubiquity
Caches/com.apple.ubd
Logs/CrashReporter/DiagnosticLogs/Ubiquity
created
found
unknown item type
_itemScope != BRC_ITEM_SCOPE_UNKNOWN || _state == BRC_ITEM_STATE_RESERVED || _state == BRC_ITEM_STATE_TOMBSTONE
[s isKindOfClass:[NSMutableString class]]
 lost-stamp:%@ ago
 doc:%@
 ino:%@
 gen:%@
 s_ino:%@
 s_gen:%u
 pn:"%@"
 bn:"%@"
 sc:%@
unknown
nobody should scan an item from a fault
stagedFileID
stagedGenerationID
physicalName
schedStamp
bouncedName
scope
![_bouncedName isEqualToString:name]
got a fault name
can't move aside a root item!
_state == BRC_ITEM_STATE_TOMBSTONE
_type != BRC_ITEM_TYPE_ALIAS
path.isExecutable || !path.isUnixDir
path.isDocument
!path.isDocument
_documentID.unsignedLongLongValue == path.documentID
BRCItemTypeIsFault(_type)
path.isDocument || path.isFinderAlias
_type == BRC_ITEM_TYPE_FINDER_BOOKMARK_FAULT
_type == BRC_ITEM_TYPE_DOC_FAULT
_state == BRC_ITEM_STATE_LOST || _state == BRC_ITEM_STATE_LOST_ZOMBIE
_type == BRC_ITEM_TYPE_DIRECTORY || _type == BRC_ITEM_TYPE_FS_ROOT
_state == BRC_ITEM_STATE_LOST
Unexpected state %@ for item %@
lostStamp
unknown type
_stagedFileID
_stagedGenerationID
(_state == BRC_ITEM_STATE_RESERVED && !_fileID && !_generationID) || ((_state == BRC_ITEM_STATE_LIVE || _state == BRC_ITEM_STATE_LOST || _state == BRC_ITEM_STATE_LOST_ZOMBIE) && _fileID && _generationID)
_type != BRC_ITEM_TYPE_DIRECTORY && _type != BRC_ITEM_TYPE_FS_ROOT
[_physicalName br_isSideFaultName]
![_physicalName br_isSideFaultName]
T@"NSNumber",R,N,V_documentID
T@"NSNumber",R,N,V_fileID
T@"BRCGenerationID",R,N,V_generationID
T@"NSNumber",R,N,V_stagedFileID
stagedFileIDForDB
TI,R,N,V_stagedGenerationID
T@"NSString",R,N,V_physicalName
T@"NSString",R,N,V_bouncedName
processingStamp
T@"NSNumber",R,N,V_processingStamp
-asBRAlias called on a non alias
-asDirectory called on a non directory
-asDocument called on a non document
-asSharedDocument called on a non document
-asFSRoot called on a non root
-asSymlink called on a non symlink
-asFinderBookmark called on a non symlink
asked to refresh the app library of a root item
hierarchy too deep to compute the app library root of %@
_appLibrary
SELECT 1 FROM server_items WHERE item_id = %@ AND zone_rowid = %@ LIMIT 1
SELECT 1 FROM server_items WHERE item_id = %@ AND item_state = 0 AND zone_rowid = %@ LIMIT 1
SELECT item_id FROM server_items WHERE item_id != %@ AND item_parent_id = %@ AND item_filename = %@ AND +zone_rowid = %@
parentItem->_minimumSupportedOSRowID
!_minimumSupportedOSRowID
SELECT name FROM os_names WHERE rowid = %@
INSERT OR IGNORE INTO os_names (name) VALUES (%@)
can't add the OS NAME
SELECT rowid FROM os_names WHERE name = %@
r:%lld 
i:%@ 
i:%@:%@ 
al:%@ 
o:%@ 
ld{%@} 
in-flight{%@} 
up:%@
 %@:%@
needs-os-upgrade
 st{%@
 pino:%@
 sharing-options:{%@}
<%@:%p {ID : %@; name : %@}>
"%@" id:%@
creating an item from a non supported path 0x%x
rowid
syncUpState
owner
sharingOptions
inFlightDiffs
minimumSupportedOS
localDiffs
notifsRank
zoneID
Local items must be initialized with initFromPQLResultSet:container:error:
self.isReserved
item %s is idle with in flight diffs
item without parentID under parent %@
orphan detected %@ under parent %@ in %@
item parented to a document: %@ parented to %@
!self.itemID.isNonDesktopAppLibraryRoot
!self.isFSRoot
self.isReserved || _appLibrary
DELETE FROM client_items WHERE rowid = %lld
 WITH RECURSIVE item_parents (item_id, item_file_id) AS (     SELECT item_parent_id, item_file_id FROM client_items      WHERE item_id = %@ AND zone_rowid = %@  UNION ALL     SELECT li.item_parent_id, li.item_file_id FROM client_items AS li  INNER JOIN item_parents AS p USING (item_id)      WHERE zone_rowid = %@      LIMIT %u ) SELECT item_file_id, item_id FROM item_parents
Circular parenting chain
B24@?0@"BRCItemID"8@"NSNumber"16
NEEDS_OS_UPGRADE_ERROR
NEEDS_OS_UPGRADE_ERROR_NO_OS_NAME_IOS
Deleted from DB
Inserted into DB
Saved into DB
saving items should really always work: %@
com.apple.trash.put-back.path#PS
com.apple.trash.put-back.icloud-parent-id#PS
You can't cross move %@ to %@
path.appLibrary == _appLibrary
we should always have a corresponding server item for already sync-ed up items
self.isReadAndUploaded || self.isKnownByServerOrInFlight
self.isDead && self.isDeadOrMissingInServerTruth
_st.state == BRC_ITEM_STATE_TOMBSTONE || _st.state == BRC_ITEM_STATE_LOST || _st.state == BRC_ITEM_STATE_LOST_ZOMBIE
_st.stagedFileID
serverItem
can't mark live from stage
!self.isKnownByServer
self.needsInsert
invalid sync up state
-[BRCLocalItem evictInTask:options:error:]
(options & BRCDownloadDiscretionary) == 0 || (options & BRCDownloadUserInitiated) == 0
-[BRCLocalItem startDownloadInTask:options:error:]
extension
isDead
isLive
isDirectory
isFSRoot
isZoneRoot
isFinderBookmark
T@"BRCStatInfo",R,N
ownerKey
T@"BRCAccountSession",R,N
TQ,N
T@"BRCDirectoryItem",R,N
asSharedDocument
T@"BRCSharedDocumentItem",R,N
asFSRoot
T@"BRCFSRootItem",R,N
asSymlink
T@"BRCSymlinkItem",R,N
asFinderBookmark
T@"BRCFinderBookmarkItem",R,N
isShareAcceptationFault
digestDescription
orig
T@"BRCLocalItem",R,N,V_orig
TQ,R,N,V_dbRowID
needsInsert
isLost
isOnDisk
isAlmostDead
isFromInitialScan
isInDocumentOrTrashScope
isReserved
isKnownByServer
isKnownByServerOrInFlight
isDeadOrMissingInServerTruth
isReadAndUploaded
isIdleOrRejected
isRejected
needsReading
needsUpload
needsSyncUp
isSharedByMe
hasShareIDAndIsOwnedByMe
serverPathMatchItemID
setOfAppLibraryIDsWithReverseAliases
T@"NSMutableSet",R,N
T@"BRCLocalStatInfo",R,N,V_st
TI,R,N,V_syncUpState
uploadStatus
T@"NSNumber",R,N,V_inFlightDiffs
TQ,R,N,V_localDiffs
TQ,R,N,V_notifsRank
physicalNameNeedsRename
needsOSUpgradeToSyncUp
syncUpError
T@"NSError",R,N
T@"NSString",R,N,V_path
T@"NSNumber",R,N,V_ownerKey
T@"BRCServerZone",R,N,V_serverZone
T@"BRCClientZone",R,N,V_clientZone
TQ,N,V_sharingOptions
contents
only-thumbnail
-[BRFieldXattrBlob(BRCStageAdditions) applyToFileDescriptor:error:]
, ...
%s%@...
%s%@
brc_pack_xattrs
com.apple.brc.sync
q16@?0q8
B16@?0@"BRCPrivateClientZone"8
periodicSyncDate
we shouldn't be asked to sync up the shared DB
online
healthy
offline
low disk
 available
 evictable
%@ (%@)
no environment
no token
system
+ network: %@
+ disk:    %@
+ power:   %@
+ optimize storage: %s
enabled
disabled
scheduler
+ push environment:      %@
+ push token:            %@
+ global sync up budget: %@
+ periodic sync:         %@
+ available quota:       %@%@
 [pending-quota]
+ container-metadata:    %@ %@
+ sharedb:               %@ %@
+ zone-health:           %@ %@
+ pcs-migration:         %@
complete
unfinished
+ account: %@
not ready
_migrateZonePCSOperation == nil
ckContainer
v24@?0@"NSString"8@"NSError"16
_pushConnection
com.apple.icloud-container.
%@%@
zoid
com.apple.bird.push-persistence
unknown 
initialSyncDownGroup
T@"NSObject<OS_dispatch_group>",R,N,V_initialSyncDownGroup
syncGroup
T@"NSObject<OS_dispatch_group>",R,N,V_syncGroup
T@"BRCSyncBudgetThrottle",R,N,V_syncUpBudget
syncScheduler
T@"BRCDeadlineScheduler",R,N,V_syncScheduler
zoneHealthSyncPersistedState
T@"BRCZoneHealthSyncPersistedState",R,N,V_zoneHealthPersistedState
invalid push topic '%s' (expected prefix '%s')
invalid push payload[%@] %@
invalid push ZoneIdentifier at payload[%@] %@
invalid push DatabaseScope at payload[%@] %@
private
public
shared
invalid push ZoneOwnerID at payload[%@] %@
sharing/iWork-publishing-fetch
No error and invalid number of records %lu
unreachable: No error and invalid number of records %lu
recordID
T@"CKRecordID",&,N,V_recordID
 ul-error:%@
 uploaded-assets
can't unarchive CKRecord: %@
uploadedAssets
path.isPackageRoot
T@"CKRecord",&,N,V_uploadedAssets
uploadError
T@"NSError",&,N,V_uploadError
wants-fault
start-dl
wants-thumb
user
fault 
contents 
thumbnail 
user-qos 
 error:%@
downError
serverName
flags
sqlite3_value_type(value) == SQLITE_NULL
downloadError
T@"NSError",&,N,V_downloadError
T@"NSString",R,N,V_serverName
TI,N
wantsContent
wantsThumbnail
userInitiated
self.isFinderBookmark || BRCItemTypeIsDocument(_st.type)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_filename = %@ AND item_type = 3 AND item_state != 1
SELECT app_library_rowid FROM client_items WHERE item_filename = %@ AND item_type = 3
 ct{%@}
downloading{
 (%@)
}:%@
faulting
 thumb{
greedy 
sig:%@
 live-losers:{%@}
 resolved-losers:{%@}
item.isDocument
document without a version:
    %@
   this typically indicates either of two problems:
    - either we failed processing the last sync down and we
      saved the structure record but not the contents record,
    - or the server forgot to send us a contents record.
%@ isn't a dictionary!
currentVersion
desiredVersion
liveConflictLoserEtags
resolvedConflictLoserEtags
liveThumbnailSignature
shouldAutomaticallyDownloadThumbnail
!info || info.isDocument
item %s is a live document without a version
No version on server item
options & BRCSetVersionToStageWantsContent
serverItem.isDocument
self.isDocument
serverItem.latestVersion
We think this is a meta only update but it isn't (%llu)!
_st.documentID
!self.isFault
trying to force upload of a fault
state isn't needs-upload
record
no version on uploaded document %@
CK disagrees on the item size: %lld != %lld
(fileAsset && !pkgSignature) || (!fileAsset && pkgSignature)
_currentVersion
_currentVersion.contentSignature.brc_signatureIsPendingPlaceHolder
_currentVersion.thumbnailSignature.brc_signatureIsPendingPlaceHolder
_currentVersion.uploadedAssets == nil
Something asked to upload/sync-up an item without a fileID
self.needsUpload
INSERT INTO client_items ( rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy) VALUES ( %lld, %@, %@, %@, %ld, %d, %@, %lld, %lld, %@, %@, %@, %d, %d, %d, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %u, %@, %d, %@, %@, %lld, %lld, %lld, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %d)
_orig.st.documentID
UPDATE client_items SET item_state = %d, item_processing_stamp = %@ WHERE rowid = %llu
UPDATE client_items SET  item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_localsyncupstate = %d, item_in_flight_diffs = %@, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_doc_id = %@, item_file_id = %@, item_generation = %@, item_localname = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_scope = %d, version_name = %@, version_ckinfo = %@, version_mtime = %lld, version_size = %lld, version_thumb_size = %lld, version_thumb_signature = %@, version_content_signature = %@, version_xattr_signature = %@, version_device = %@, version_conflict_loser_etags = %@, version_quarantine_info = %@, version_uploaded_assets = %@, version_upload_error = %@, desired_version = %@, item_live_conflict_loser_etags = %@, item_thumb_live_signature = %@, item_thumb_greedy = %d  WHERE rowid = %llu
SELECT zone_rowid, item_rank FROM server_items WHERE item_filename = %@ AND item_type = 3
-[BRCDocumentItem evictInTask:options:error:]
Item is not on disk
item %@ have an empty file id!
file is flocked
appLibrary && documentsFolderPath
%@ is marked as Document Scope Public, but we walked up to the root before hitting                                 the documents folder
T@"BRCAliasItem",R,D,N
hasLocalContent
isEvictable
isAutomaticallyEvictable
isVisibleIniCloudDrive
isDownloadRequested
shouldBeGreedy
shouldHaveThumbnail
shouldTransferThumbnail
isSharedDocument
queryItemStatus
downloadStatus
T@"BRCLocalVersion",R,N,V_currentVersion
T@"BRCDesiredVersion",R,N,V_desiredVersion
T@"NSSet",&,N,V_liveConflictLoserEtags
T@"NSSet",R,N,V_resolvedConflictLoserEtags
conflictLoserState
T@"NSDictionary",R,N
TB,R,N,V_shouldAutomaticallyDownloadThumbnail
T@"NSData",&,N,V_liveThumbnailSignature
only share acceptation fault can be deleted; %@
do not use the parent file id on shared docs
self.clientZone.isSharedZone
enclosurePathRelativeToRoot
T@"brc_task_tracker",&,N,V_tracker
sections
T@"_BRCLogSection",&,N,V_sections
startTracingCode
Ti,N,V_startTracingCode
endTracingCode
Ti,N,V_endTracingCode
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
from
' to '
read
v32@?0@"NSURL"8@"NSError"16@?<v@?>24
delete
rename
v40@?0@"NSURL"8@"NSURL"16@"NSError"24@?<v@?>32
 and content update
isUpdateForReconnecting
TB,N,V_isUpdateForReconnecting
forRead
TB,R,N,V_forRead
sync-down/container-metadata
infoPlist
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
shouldFetchAnotherBatch
TB,R,N,V_shouldFetchAnotherBatch
<upload[%lld] %@>
T@"CKRecordID",R,N
secondaryRecordID
stageID
transferID
progress
T@"BRCProgress",R,N
progressPublished
doneSize
T@"CKRecord",&,N
secondaryRecord
Tq,R,N,V_throttleID
T@"NSString",R,N,V_stageID
TQ,R,N,V_totalSize
T@"BRCProgress",R,N,V_progress
TB,N,V_progressPublished
TQ,N,V_doneSize
T@"CKRecord",&,N,V_record
upload
v24@?0@"CKRecord"8d16
v24@?0@"CKRecord"8@"NSError"16
modifyError
uploading
perUploadCompletionBlock
T@?,C,V_perUploadCompletionBlock
This is not a private zone
This is not a shared zone
<%@:%@[%@] %@>
clientRequestID
lastSyncStatus
lastSyncDownDate
changeToken
pendingChangeToken
SELECT 1 FROM server_xattr_blobs WHERE zone_rowid = %@ AND signature = %@
INSERT OR IGNORE INTO server_xattr_blobs (zone_rowid, signature, data) VALUES (%@, %@, %@)
SELECT data FROM server_xattr_blobs WHERE zone_rowid = %@ AND signature = %@
SELECT item_id FROM server_items  WHERE item_id != %@ AND item_parent_id = %@ AND item_filename = %@ AND +zone_rowid = %@
UPDATE OR IGNORE server_items SET  item_rank = NULL, item_filename = %@, item_origname = IFNULL(item_origname, item_filename) WHERE zone_rowid = %@ AND item_id = %@
got a SQL Error: %@
UPDATE server_items SET   item_rank = NULL, item_origname = %@, pcs_state = %d, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@ WHERE item_id = %@ AND zone_rowid = %@
INSERT INTO server_items ( item_id, item_creator_id, item_sharing_options, item_rank, item_origname, pcs_state, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, zone_rowid) VALUES ( %@, %@, %ld, NULL, %@, %d, %@, %d, %d, %d, %lld, %@, %@, %d, %@, %@, %@, %@, %@)
_db.changes == 1
can't deserialize filename: %@ of %@
a package name
unrepresentable
.pkg
a side fault
an excluded
!(st.logicalName.br_isSideFaultName || [st.logicalName br_isExcludedWithMaximumDepth:1])
no record to update: %@
-[BRCServerZone _saveItemID:stat:record:error:]
UPDATE server_items    SET item_rank = NULL, item_sharing_options = (%lu | (item_sharing_options & %lu)), version_name = %@, version_ckinfo = %@, version_mtime = %lld, version_size = %lld, version_thumb_size = %lld, version_thumb_signature = %@, version_content_signature = %@, version_xattr_signature = %@, version_device = %@, version_conflict_loser_etags = %@, version_quarantine_info = %@  WHERE item_id = %@ AND zone_rowid = %@
document without a structure:
    i:%@ %@
   this typically indicates either of two problems:
    - either we failed processing the last sync down and we
       failed inserting the structure record,
    - or the server forgot to send us a structure record.
-[BRCServerZone _saveEditedDirOrDocStructureRecord:error:]
-[BRCServerZone _saveEditedDocumentContentRecord:error:]
can't deserialize extension: %@ of %@
-[BRCServerZone _saveEditedSymlinkRecord:error:]
UPDATE server_items    SET version_name = %@  WHERE item_id = %@ AND zone_rowid = %@
-[BRCServerZone _saveEditedAliasRecord:error:]
INSERT OR REPLACE INTO server_items ( zone_rowid, pcs_state, item_id, item_creator_id, item_sharing_options, item_rank, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id) VALUES ( %@, %d, %@, %@, %ld, NULL, %@, %d, %d, %d, %lld, %@, %@, %d, %@, %@, %@, %@)
share.currentUserParticipant.type != CKShareParticipantTypeOwner
share.currentUserParticipant.type == CKShareParticipantTypeOwner
UPDATE server_items    SET item_rank = NULL, item_sharing_options = (%lu | (item_sharing_options & %lu))   WHERE item_id = %@ AND zone_rowid = %@
structure record which isn't a directory or document
unreachable: structure record which isn't a directory or document
-[BRCServerZone _saveEditedRecord:error:]
UPDATE server_items   SET item_sharing_options = (item_sharing_options & %ld) WHERE zone_rowid = %@ AND item_id = %@
Couldn't decode itemID from recordID %@
UPDATE server_items SET item_state = 1, item_filename = %@, item_rank = NULL WHERE zone_rowid = %@ AND item_id = %@
INSERT OR REPLACE INTO server_pending_fetches(zone_rowid, record_id, record, deleted_record_type) VALUES (%@, %@, %@, %d)
UPDATE server_pending_fetches SET record = NULL, deleted_record_type = 2 WHERE zone_rowid = %@ AND record_id = %@
SELECT COUNT(*) FROM server_pending_fetches WHERE zone_rowid = %@ AND (record >= '')
SELECT COUNT(*) FROM server_pending_fetches WHERE zone_rowid = %@ AND record IS NULL
SELECT record FROM server_pending_fetches WHERE zone_rowid = %@ AND (record >= '')
SELECT record_id FROM server_pending_fetches WHERE zone_rowid = %@ AND record IS NULL AND deleted_record_type = 0
SELECT record_id FROM server_pending_fetches WHERE zone_rowid = %@ AND record IS NULL AND deleted_record_type = 1
unknown item type %d
SELECT rowid, item_id, item_parent_id, item_state, item_type   FROM server_items  WHERE zone_rowid = %@ AND item_rank IS NULL
SELECT 1 FROM server_items WHERE zone_rowid = %@ AND item_parent_id = %@ AND item_state = 0 LIMIT 1
SELECT COUNT(*) FROM server_items WHERE zone_rowid = %@ AND item_parent_id = %@ AND item_state = 0
Server killed %s but it still has %d live children
WITH RECURSIVE item_parents (item_id, item_state, item_type, depth) AS (     SELECT item_id, item_state, item_type, 0       FROM server_items      WHERE zone_rowid = %@ AND item_id = %@  UNION ALL     SELECT p.item_parent_id, c.item_state, c.item_type, c.depth + 1       FROM server_items AS p INNER JOIN item_parents AS c USING (item_id)      WHERE p.zone_rowid = %@      LIMIT %u) SELECT item_state, depth, item_type FROM item_parents WHERE call_block(%@, item_type, item_id)
Server sent item %s which isn't a descendant of 'root'
Server sent item %@ which is parented to a non-directory %@
Server sent live item %s parented to dead item %s
UPDATE server_items SET item_depth = %lld WHERE rowid = %lld
SELECT rowid   FROM server_items  WHERE zone_rowid = %@ AND item_rank IS NULL ORDER BY item_depth ASC
UPDATE server_items SET item_rank = %lld WHERE rowid = %lld
DELETE FROM server_pending_fetches WHERE zone_rowid = %@
Can't create app library and zones for zone named: %s
inconsistent 
requestID >= self->_changeState.clientRequestID
[record.recordType isEqualToString:kBRRecordTypeContent] || [record.recordType isEqualToString:kBRRecordTypeStructure]
pending-
<rdar://problem/23825896>
DELETE FROM server_xattr_blobs WHERE zone_rowid = %@   AND signature NOT IN (SELECT item_xattr_signature FROM server_items WHERE zone_rowid = %@ AND item_xattr_signature IS NOT NULL)   AND signature NOT IN (SELECT version_xattr_signature FROM server_items WHERE zone_rowid = %@ AND version_xattr_signature IS NOT NULL)
SELECT item_id FROM server_items WHERE zone_rowid = %@ AND item_rank = %lld
UPDATE server_items SET item_parent_id = %@ WHERE zone_rowid = %@ AND item_parent_id = %@
DELETE FROM server_items WHERE zone_rowid = %@ AND item_id = %@
v24@?0Q8^B16
DELETE FROM server_items WHERE zone_rowid = %@
DELETE FROM server_xattr_blobs WHERE zone_rowid = %@
attempted delete all content on an unsupported zone type: %@
!privateAppLibrary.wasMovedToCloudDocs
clientZone.appLibraries.count == 1
Unable to cross zone migrate.  Blowing away our state and starting from scratch.
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info FROM server_items WHERE zone_rowid = %@
Needs Apply Changes:
-------------------
Under %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, rowid      FROM server_items    WHERE zone_rowid = %@ AND item_parent_id = %@ ORDER BY item_filename
ERROR: item ID %@ seen twice
> apply{%@}
B36@?0@"BRCItemID"8i16@"NSString"20^@28
SELECT item_parent_id     FROM server_items    WHERE zone_rowid = %@      AND call_block(%p, item_parent_id) ORDER BY item_filename
server items (%@)
============
%*sERROR: item ID %@ seen twice
%*s%@
%*s> apply{%@}
B28@?0@"BRCItemID"8i16^@20
----------------------%@[%@]----------------------
SELECT COUNT(*) FROM server_items WHERE zone_rowid = %@
ORPHANED ITEMS:
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info FROM server_items WHERE zone_rowid = %@ AND call_block(%@, rowid)
argc == 1
SELECT signature FROM server_xattr_blobs WHERE zone_rowid = %@
server xattrs
-------------
you must override this
T@"BRCZoneRowID",&,N
isSharedZone
isPrivateZone
changeState
T@"BRCServerChangeState",R,V_changeState
T@"NSString",R,N,V_zoneName
T@"CKRecordZoneID",R,N
metadataSyncContext
metadataSyncContextIfExists
isCloudDocsZone
T@"BRCZoneRowID",&,N,V_dbRowID
moved
structure
encryptedBasename
basehash
bounceNo
parent
executable
writable
fileContent
pkgManifest
pkgContent
pkgSignature
pkgXattrs
thumb1024
thumbQLMetadata
xattr
restorePath
restoreParent
targetPath
bookmarkContent
lastEditorName
ftags
quarantine
ignorePkgExtension
updateTime
zoneState
zoneDetails
message
records
alias/
shareAlias/
symlink/
finderBookmark/
directory/
documentStructure/
documentContent/
directory/appData_
directory/appDocuments_
br_initialItem
br_pathMatchID
br_pathMatchEtag
invalid type
structureRecordID
baseStructureRecord
T@"CKRecord",R,N
self.brc_isAppLibraryRootRecordID
self.brc_isAppLibraryDocumentsRecordID
libraryRowID
attempt to extract an itemID from '%s'
brc_itemIDWithSession: are not supposed to trigger an error: %@
-[CKRecordID(BRCItemAdditions) brc_itemIDWithSession:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-486.21/daemon/items/CKRecord+BRCItemAdditions.m
Found appLibrary %@ with invalid dbRowID for zoneID %@
Can't find appLibrary corresponding to zoneID %@
attempt to extract an itemType from '%s'
missing key '%@' in %@ record %@
invalid value for key '%@' in %@ record %@: %@ %@
encryptedBasename's data was not of class NSData
empty basename and no bounceno
-[CKRecord(BRCSerializationAdditions) deserializeAliasInfo:serverZone:error:]
Aliases parent ref zoneID %@ must be equal to aliases zoneID %@!
Records zoneID %@ must be equal to parents zoneID %@
No alias target
invalid record type for record %@: %@
recordType
The server should have set a birthtime on %s
-[CKRecord(BRCSerializationAdditions) deserializeStatInfo:itemID:session:error:]
%@ parent ref zoneID %@ must be equal to record's zoneID %@!
The server should have set an mtime for %s
%@ record %@ is both a file and a package
asset+pkg
%@ record %@ is neither a file nor a package
pkg+signature
-[CKRecord(BRCSerializationAdditions) deserializeVersion:fakeStatInfo:clientZone:error:]
The record name is not a content in the shared zone
invalid filename
_Documents
%@-%@
version != nil
br_oplockMergeEtag
br_updateDropped
self.brc_currentUserOwnsLastEditorDevice
device
invalid lastEditorDeviceName on %@: %@
rootAppLibraryRecordForAppLibraryID: should not be called with appLibraryName set to nil
_Data
AppContainer
dataRepresentation != nil
invalid key %@ and obj %@
brc_containerMetadataPropertiesData
BRCFakeRecordWithErrorMarkerFor20716676
DOCUMENT_DEFAULT_NAME
nil-token
nil-cursor
br_etagInPreviousZone
(dead in server truth)
record[kBRRecordKeyPackageContent]
record[kBRRecordKeyPackageManifest]
record[kBRRecordKeyPackageSignature]
record[kBRRecordKeyFileContent] || record[kBRRecordKeyFinderBookmarkContent]
_currentVersion.ckInfo.etag
Can't prepare sync for a zone that is blocked
sync-up-%@
items.count == 0
sync-up/
self.serverZone.isPrivateZone
B16@?0@"NSError"8
v24@?0@"_BRCOperation"8@"NSError"16
[contentRecord.recordType isEqualToString:kBRRecordTypeContent]
protectionData
share.publicSharingIdentity
!fetchedRecord
Failed to get new web sharing identity: %@
v24@?0@"CKEncryptedData"8@"NSError"16
Timed out while waiting for new web-sharing identity
unreachable: Timed out while waiting for new web-sharing identity
[firstItemID isEqual:secondItemID]
invalid sharing records count
T@"BRCServerZone",&,N,V_serverZone
packagesInFlight
T@"NSMutableArray",&,N,V_packagesInFlight
recordsToSave
T@"NSMutableArray",&,N,V_recordsToSave
deletedRecordIDs
T@"NSMutableArray",&,N,V_deletedRecordIDs
iworkUnsharedShareIDs
T@"NSMutableArray",&,N,V_iworkUnsharedShareIDs
iworkRenamedShareIDsToNames
T@"NSMutableDictionary",&,N,V_iworkRenamedShareIDsToNames
recordsNeedingNewSharingProtectionInfo
T@"NSMutableArray",&,N,V_recordsNeedingNewSharingProtectionInfo
recordsNeedingUpdatedSharingProtectionInfo
T@"NSMutableArray",&,N,V_recordsNeedingUpdatedSharingProtectionInfo
itemNeedingPCSChaining
T@"BRCLocalItem",&,N,V_itemNeedingPCSChaining
recordIDsToDeleteToEtags
T@"NSMutableDictionary",&,N,V_recordIDsToDeleteToEtags
pluginFieldsForRecordDeletesByID
T@"NSMutableDictionary",&,N,V_pluginFieldsForRecordDeletesByID
conflictLosersToResolveByRecordID
T@"NSMutableDictionary",&,N,V_conflictLosersToResolveByRecordID
T@"NSString",&,N,V_stageID
cost
Tf,R,N,V_cost
createdAppLibraryNames
T@"NSMutableArray",R,N,V_createdAppLibraryNames
syncUpCompletionBlock
T@?,C,N,V_syncUpCompletionBlock
Unable to open iwork package %@
Uploaded an iWork package of size 0 (itemID: %@)
notSignedIn
driveDisabled
appMissing
notFound
profileDisabled
redirectReason
:nooverride
icloud.com
sharing/accept-flow
accept-flow-next-step
com.apple.clouddocs.accept-shared-url
step:
%@.%ld
can't perform next step because operation is finished; %@
method != nil
can't fast forward to download step (currentIndex: %lu, downloadIndex: %lu, stepCount: %lu)
can't fast forward to download step from current possition (currentIndex: %lu)
self->_shareURL
_shareMetadata
_shareURL
_sharedItemID
localClientZone
[localClientZone isKindOfClass:[BRCSharedClientZone class]]
www.
_shareURL.host
!(goToAppStore && openWebPreview)
v24@?0B8B12@"NSError"16
target app %@ is missing entitlement %@
!(goToSettings && openWebPreview)
shareURL
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
No operation error and no share metadata
unreachable: No operation error and no share metadata
%@ wasn't found after syncing down on the owner
not a document
unreachable: not a document
item is in an unknown state: %@:
document doesn't exists anymore
unreachable: document doesn't exists anymore
_shareDocumentURL
Can't get bookmark string at %@
iclouddriveapp
Don't know how to open shared item at %@
_acceptShareOpBlockingSyncDown == nil
acceptShareOp
No operation error and no share id
unreachable: No operation error and no share id
v24@?0@"CKShareMetadata"8@"NSError"16
self.localClientZone
!li.isReserved
prefs:root=CASTLE&path=CKDATABASESERVICE
itms-apps://?bundleIdentifier=%@
https
&%@=%@
%@=%@
isInDocsFolder
<%@ delay:%.1fs id:%@
 next-try in %.1fs>
 expired>
delay
Td,R,N,V_delay
nextTry
Td,R,N,V_nextTry
lastErrorKind
Ti,R,N,V_lastErrorKind
containerID
T@"NSString",&,N,V_containerID
invalid length: %ld
<%@ {  m:%.1f  h:%.1f  d:%.1f  }>
no budget left for %.1fs {
budget available {
  %d:%02d:%02ds ago
  m:%.1f%% (%.1f)
  h:%.1f%% (%.1f)
  d:%.1f%% (%.1f)
lastMinute
Tf,R,N
lastHour
lastDay
-[BRCClientZone init]
zone-tracker
client-zone/zone-creation
osNameRequiredToSync
_syncUpBudget && _syncUpThrottle && _syncDownThrottle
!_activated
Creating
Loading
_delegate
_defaultAppLibrary
crash-recovery
_activated
SELECT COUNT(*) FROM client_items WHERE item_localsyncupstate IN(2, 3, 4) AND zone_rowid = %@  AND call_block(%p, version_upload_error, item_id)
SELECT SUM(version_size) FROM client_items WHERE item_localsyncupstate IN (3, 2)   AND zone_rowid = %@   AND call_block(%p, version_upload_error)
<%@%@[%@] %@ {client:%@ server:%@ sync:%@ %@ rid:%llu}>
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE zone_rowid = %@ AND item_doc_id = %u   AND +item_state IN (0, -1)   AND +item_type IN (1, 2, 8, 6, 7)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items  WHERE zone_rowid = %@     AND item_file_id = %lld    AND +item_state != -2
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE zone_rowid = %@ AND (item_in_flight_diffs BETWEEN -9223372036854775808 AND 9223372036854775807)
<rdar://problem/25986458> Significantly too slow SQL
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE zone_rowid = %@    AND item_type IN (1, 6)    AND (item_localsyncupstate = 2 OR         item_localsyncupstate = 3 OR         item_localsyncupstate = 4)   AND item_scope = 2
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE zone_rowid = %@    AND item_type = 2 
_syncDownOperation == nil
_syncUpOperation == nil
We are alreadying syncing but we tried to sync again
v32@?0@"BRCClientZone"8@"NSArray"16@"NSError"24
Forcing cancel on sync op
SELECT item_stat_ckinfo IS NULL FROM client_items  WHERE zone_rowid = %@ AND item_id = %@    AND item_type IN (1, 2, 8, 5, 6, 7)
UPDATE client_items SET item_stat_ckinfo = %@ WHERE zone_rowid = %@ AND item_id = %@
UPDATE client_items SET version_ckinfo = %@, version_device = %@ WHERE zone_rowid = %@ AND item_id = %@
UPDATE client_items SET version_ckinfo = %@ WHERE zone_rowid = %@ AND item_id = %@
(successful)
v32@?0@"CKRecordID"8@"NSError"16^B24
defaultSyncThrottle
v32@?0@"BRCItemID"8@?<v@?B>16^B24
v32@?0@"NSString"8@?<v@?@"BRCItemID">16^B24
<rdar://problem/26073809> _fixupMissingCrossMovedItems causes slow SQL assertions
UPDATE client_items SET item_localsyncupstate = 1 WHERE zone_rowid = %@   AND item_localsyncupstate = 0   AND (item_local_diffs & 0x2000000000000000) != 0   AND NOT EXISTS (SELECT * FROM server_items WHERE server_items.item_id = client_items.item_id AND zone_rowid = %@)
_requestID == 0 || requestID <= _requestID
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE zone_rowid = %@ AND item_type = 3 AND item_state IN (0, -1)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE zone_rowid = %@ AND item_type in (1, 2, 6, 7)
UPDATE client_uploads SET zone_rowid = %@ WHERE throttle_id = %lld
UPDATE client_downloads SET zone_rowid = %@ WHERE throttle_id = %lld
UPDATE client_reader_throttle SET zone_rowid = %@ WHERE throttle_id = %lld
!document.needsReading || db.changes > 0
can't prepare cross move items! %@
DELETE FROM client_unapplied_table WHERE zone_rowid = %@
DELETE FROM client_uploads WHERE zone_rowid = %@
db.changes == 0
DELETE FROM client_downloads WHERE zone_rowid = %@
DELETE FROM client_reader_throttle WHERE zone_rowid = %@
DELETE FROM client_items WHERE zone_rowid = %@ AND item_type = 3
UPDATE client_items SET zone_rowid = %@,   item_stat_ckinfo = call_block(%p, item_stat_ckinfo),   version_ckinfo   = call_block(%p, version_ckinfo),   item_local_diffs = (item_local_diffs | %lld)  WHERE zone_rowid = %@
DELETE FROM client_zones WHERE rowid = %@
can't cross move items! %@
self._hasAllItemsDidUploadHandlers
Client Truth Unclean Items:
--------------------------
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy     FROM client_items    WHERE item_parent_id = %@ ORDER BY item_filename
zone:%@ 
 reader{%@}
 upload{%@}
 rejected{%@}
 downloader{%@}
SELECT item_parent_id     FROM client_items    WHERE zone_rowid = %@      AND call_block(%p, item_parent_id) ORDER BY item_filename
client items
scheduling sync contexts
========================
+ %@
-[BRCClientZone dumpTablesToContext:error:]
implement this in subclass
SELECT item_rank FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info FROM server_items WHERE rowid = %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_id = %@ AND zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE rowid = %lld AND zone_rowid = %@
SELECT item_id FROM client_items  WHERE item_file_id = %lld    AND (+item_type = 0        OR +item_type = 4        )    AND zone_rowid = %@
SELECT 1 FROM client_items WHERE item_id = %@ AND zone_rowid = %@ LIMIT 1
must implement in subclass
v16@?0@"BRCLocalItem"8
%@{needs:(count:%lld, size:%@) done:(count:%lld, size:%@)} 
%@{needs:%lld done:%lld} 
%*s%@%@
 reclaimer{%@}
%*s>%@
i:root f:%@ genID:%@
SELECT COUNT(*) FROM client_items WHERE zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE zone_rowid = %@ AND NOT indexset_contains(%p, rowid)
pending activity %@
(greedy)
================
+ downloads:%@
%@: %@
+ uploads:  %@
[r:%@]: %@
v32@?0@"NSNumber"8@"NSOperation"16^B24
sync bubble waiting
+ reader:   %@
+ apply:    %@
because of item 
for budget 
 [sync-up throttled %@(next-try:in %.01fs)]
 [sync-up waiting to be scheduled]
 [sync-up waiting for sync down]
 [sync-down throttled (next-try:in %.01fs)]
 [sync-down waiting to be scheduled]
 [scheduling: %@]
+ sync:     %@
  up-budget: %@
  up-error:  %@
  dn-error   %@
  operation: %@
+ migration: %@
+ metadata:  %s etag:%@ %@
X-APPLE-BR-FAULT-INJECTION
brtest
record,%@,NeedsOSUpgrade,%@
zone,,NeedsOSUpgrade,%@
X-Apple-Perf
lastAttemptedSyncDownDate
T@"NSDate",&,N,V_lastAttemptedSyncDownDate
defaultAppLibrary
T@"BRCAppLibrary",&,N,V_defaultAppLibrary
T@"NSString",R,N,V_zoneID
T@"<BRCClientZoneDelegate>",&,N,V_delegate
appLibraries
T@"NSSet",R,N,V_appLibraries
appLibraryIDs
T@"NSSet",R,N
taskTracker
T@"brc_task_tracker",R,N,V_taskTracker
hasDefaultAppLibrary
T@"NSString",R,N,V_osNameRequiredToSync
activated
TB,R,N,V_activated
currentRequestID
TQ,R,N,V_requestID
syncState
TI,R
syncThrottles
T@"NSArray",R,N,V_syncThrottles
syncDeadlineSource
T@"BRCDeadlineSource",R,N,V_syncDeadlineSource
hasHighPriorityWatchers
lastInsertedRank
Tq,R,N,V_lastInsertedRank
syncUpBatchSize
_t_osNamesByItemIDBlockedForSyncUp
T@"NSMutableDictionary",R,N,V_t_osNamesByItemIDBlockedForSyncUp
_t_syncBlockedUntilOSName
T@"NSString",R,N,V_t_syncBlockedUntilOSName
_t_syncDownBlocked
TB,R,N,V_t_syncDownBlocked
needs-sync
is-resetting
initial-faults-live|ever-live
initial-faults-live
initial-faults-ever-live
has-broken-structure
blocked-app-uninstalled
needs-upgrade
wants-data-unlinked
Implement %@ in a subclass.
+[BRCPersistedState loadFromClientStateInSession:options:]
assertionQueue
T@"NSObject<OS_dispatch_queue>",W,N,V_assertionQueue
value
-[BRFieldXattr writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-486.21/daemon/items/BRFieldXattr.m
nil != self->_name
nil != self->_value
T@"NSString",&,N,V_name
T@"NSData",&,N,V_value
0123456789abcdef
share/accept
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
acceptShareCompletionBlock
T@?,C,N,V_acceptShareCompletionBlock
_serverZone
[serverZone isKindOfClass:[BRCPrivateServerZone class]]
problemReport
zoneHealthState
zone became healthy
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info FROM server_items WHERE item_parent_id = %@ AND item_filename = %@ AND +zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE (item_parent_id = %@ AND item_filename = %@ AND item_state != -2 AND +zone_rowid = %@        AND +item_localname IS NULL)   OR  (item_parent_id = %@ AND item_localname = %@ AND item_state != -2 AND +zone_rowid = %@)
there should never be more than one match for that query (parentID: %s, name: %s)
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info FROM server_items WHERE item_filename = %@ AND item_type = 3 AND zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_parent_id = %@   AND item_filename = %@   AND +item_state = -2   AND +zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_parent_id = %@   AND item_filename = %@   AND +item_state != -2   AND +item_type IN (2, 7, 8)   AND +zone_rowid = %@
SELECT 1 FROM client_items WHERE item_parent_id = %@ AND item_filename = %@ AND +zone_rowid = %@ LIMIT 1
WITH RECURSIVE item_parents (item_id) AS (     SELECT item_parent_id FROM client_items      WHERE zone_rowid = %@ AND item_id = %@  UNION ALL     SELECT li.item_parent_id FROM client_items AS li INNER JOIN item_parents AS p USING (item_id)      WHERE zone_rowid = %@      LIMIT %u) SELECT item_id FROM item_parents WHERE call_block(%p, item_id) OR item_id = %@ LIMIT 1
reset needed for %@ because the hierarchy is deeper than %u under %@ when looking for %@
hierarchy-too-deep
block and %s must be non nil to register action
+ delete-content: %@
     (last-error: %@)
+ barriers:  %ld
itemID %s %s
SQL error: %s
client truth structure validation (%s)
=================================
DROP TABLE IF EXISTS items_checks
CREATE TABLE items_checks (item_id blob PRIMARY KEY, depth integer not null)
CREATE INDEX items_checks__depth__idx ON items_checks (depth)
INSERT INTO items_checks (item_id, depth) VALUES (%@, 0)
INSERT INTO items_checks    SELECT c.item_id, %lld      FROM items_checks AS p INNER JOIN client_items AS c ON (p.item_id = c.item_parent_id)     WHERE zone_rowid = %@ AND p.depth = %lld
SELECT item_id FROM client_items WHERE zone_rowid = %@   AND item_id NOT IN(SELECT item_id FROM items_checks)
is an orphan or part of a cycle
SELECT c.item_id      FROM client_items AS c INNER JOIN client_items AS p ON (c.item_parent_id = p.item_id)     WHERE c.item_state != 1 AND p.item_state = 1       AND c.zone_rowid = %@ AND p.zone_rowid = %@
is a live item parented to a tombstone
SELECT c.item_id      FROM client_items AS c INNER JOIN client_items AS p ON (c.item_parent_id = p.item_id)     WHERE p.item_type IN (1, 2, 8, 5, 6, 7)       AND c.zone_rowid = %@ AND p.zone_rowid = %@
is parented to a document
SELECT o.item_id       FROM client_items AS o  WHERE zone_rowid = %@ AND EXISTS ( SELECT 1 FROM client_items AS n WHERE  (  (    n.item_parent_id = o.item_parent_id      AND item_filename = IFNULL(o.item_localname, o.item_filename)      AND +item_localname IS NULL)  OR (    n.item_parent_id = o.item_parent_id      AND item_localname = IFNULL(o.item_localname, o.item_filename))  )  AND +n.item_id != o.item_id  AND n.zone_rowid = %@)
local items checks (%s)
===================
TB,R,D,N
isDocumentScopePublic
privateServerZone
T@"BRCPrivateServerZone",R,N
T@"BRCAppLibrary",R,D,N
defaultPrivateAppLibrary
zoneRootItemID
zoneHealthNeedsSyncUp
T@"BRCServerZoneHealthState",R,N,V_zoneHealthState
_BRCDocumentIDKey
_BRCProgressGroupKey
GLOBAL_PROGRESS_UPLOADING_CAPITALIZE_DESCRIPTION
GLOBAL_PROGRESS_UPLOADS_WAITING_DESCRIPTION
GLOBAL_PROGRESS_DOWNLOADING_CAPITALIZE_DESCRIPTION
GLOBAL_PROGRESS_ADDITIONAL_DESCRIPTION
 d:'%@%@'
<%@:%p c:%@ p:%lld(%+lld)/%lld(%+lld) [%.3f%%]%@>
self.progress.completedUnitCount >= 0
total unit count should always be greater or equal to completed unit count; %@
a finished progress should have at least one transfer tracked; %@
future progress state isn't valid (unitCount: %lld)
sumOfCompletedUnitCountDelta
Tq,N,VsumOfCompletedUnitCountDelta
sumOfTotalUnitCountDelta
Tq,N,VsumOfTotalUnitCountDelta
versionSizes
T@"NSMutableDictionary",R,N,V_versionSizes
childProgresses
T@"NSMutableDictionary",R,N,V_childProgresses
previousUnitCounts
T@"NSMutableDictionary",R,N,V_previousUnitCounts
 ooq:%lu>
outOfQuotaDocIDs
T@"NSMutableSet",R,N,V_outOfQuotaDocIDs
allUploadsPendingQuota
previousCompletedUnitCount
Tq,N,VpreviousCompletedUnitCount
previousTotalUnitCount
Tq,N,VpreviousTotalUnitCount
resumeUnitCounts
T@"NSMutableDictionary",R,N,V_resumeUnitCounts
com.apple.bird.global-progress
com.apple.bird.global-progress.pacer
download
negative delta update for doc %@; %lld -> %lld
item.desiredVersion
group == BRCProgressUploadGroup || group == BRCProgressDownloadGroup
[self->_downloads.versionSizes[documentID] longLongValue] == progress.totalUnitCount
global progress {%@ d:'%@%@'}
global progress {none}
upload %@
upload {none}
upload version sizes (%lu): %@
upload progresses (%lu): {
%@ = %@;
v32@?0@"NSNumber"8@"NSProgress"16^B24
upload progresses (0): {}
upload pending quota (%lu): {%@}
upload pending quota (0): {}
download %@
download {none}
download version sizes (%lu): %@
download progresses (%lu): {
download progresses (0): {}
download resume unit count (%lu): %@
app libraries not live (%lu): {%@}
completedUnitCount
progressGroup
_globalProgress == nil
completedUnitCount >= 0
(!group && totalUnitCount >= 0) || totalUnitCount > 0
!group || BRCProgressGroupPrettyPrint(group.intValue)
initial sync-down
_operationTimer
Invalid suspend count (_operationTimerSuspendCount: %u)
_uploads == nil
totalUnitCount >= completedUnitCount
_downloads == nil
_globalProgress.indeterminate
versionSize
none
transferInfo.sumOfCompletedUnitCountDelta == 0
transferInfo.sumOfTotalUnitCountDelta == 0
_uploads.versionSizes.count == 0
_uploads.childProgresses.count == 0
_uploads.previousUnitCounts.count == 0
_uploads.outOfQuotaDocIDs.count == 0
_downloads.versionSizes.count == 0
_downloads.childProgresses.count == 0
_downloads.previousUnitCounts.count == 0
_downloads.resumeUnitCounts.count == 0
@sum.longLongValue
[self->_uploads.versionSizes[documentID] longLongValue] == versionSize
syncUpSize > 0
T@"BRCAccountSession",R,W,N,V_session
fromSize <= toSize
versionSize <= progressSize
delta >= 0
taking-over
session-destroyed
reparent
nextNotifRank >= _nextNotifRank
nextPackageItemRank >= _nextPackageItemRank
clientRanks
nextNotifRank:%llu nextPackageItemRank:%llu
nextItemRowID
nextNotifRank
nextPackageItemRank
!_serverZone.isSharedZone || (_sharingOptions & BRCSharingItemHasShareID) == BRCSharingItemHasShareID || _st.state == BRC_ITEM_STATE_TOMBSTONE
item %s is a directory with a version
rk:%lld 
st{%@}
 target:%@
self.isFSRoot
can't find the appLibrary of %@
unsupporter server item type: %d
unknown item type: %d
rank
Tq,R,N,V_rank
originalName
T@"NSString",R,N,V_originalName
T@"BRCStatInfo",R,N,V_st
latestVersion
T@"BRCVersion",R,N,V_latestVersion
symlinkTarget
T@"NSString",R,N,V_symlinkTarget
!_fetched.byFileID
matchByFileID.st.fileID.unsignedLongLongValue == _pathOfItem.fileID
!_fetched.byDocumentID
matchByDocumentID.isDocument
matchByDocumentID.st.documentID.unsignedLongLongValue == _pathOfItem.documentID
lookups should not be used on paths of type: %s
  itemPath:          %@
  rootPath:          %@
  parentID:          %@
  matchByPath:       %@
  matchByFileID:     %@
  matchByDocumentID: %@
  packageItem:       %@
  serverItem:        %@
relpathOfItem
T@"BRCRelativePath",R,N,V_pathOfItem
relpathOfFSEvent
T@"BRCRelativePath",R,N,V_relpathOfFSEvent
byPath
byFileID
T@"BRCLocalItem",&,N
byFileIDGlobally
T@"BRCLocalItem",R,&
byDocumentID
T@"BRCDocumentItem",&,N
byDocumentIDGlobally
T@"BRCDocumentItem",R,&
serverByPath
T@"BRCServerItem",R,N
syncedRootURLs
T@"NSArray",R,N
self.isNonDesktopAppLibraryRoot || self.isDocuments
we should not have alias uuid types anymores
unknown itemID type
(%@)
[%llu]
invalid library rowid
Failed to parse Alias UUID
invalid UUID: %s
invalid enclosure uuid - %@
can't initialize library root with invalid library rowid %@
-[BRCItemID _initAsLibraryRootWithAppLibraryRowID:enclosureUUID:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-486.21/daemon/items/BRCItemID.m
can't initialize document with invalid library rowid %@
-[BRCItemID initAsDocumentsWithAppLibraryRowID:]
object->item_code == BRCItemIDCodeDocuments || object->item_code == BRCItemIDCodeZoneRoot
object->item_code == BRCItemIDCodeSharedUUID || object->item_code == BRCItemIDCodeSharedZoneRoot
invalid BRCItemID (%@)
unmigrated? invalid BRCItemID (%@) - %d
bytes
uuid_object
root_object
decoding an unknown kind of itemid
encoding an item id with an unknown kind
rio.app_lib_rowid
uio.app_lib_rowid
unknown itemID kind
unparsable mangled itemID: %s
client_items
server_zones
client_zones
SELECT rowid FROM %@ WHERE zone_owner != %@
UPDATE %@ SET item_id = call_block(%@, item_id), item_parent_id = %@ WHERE zone_rowid = %@
len == sizeof(uuid_t)
Invalid Shared ItemID
UPDATE %@ SET item_id = call_block(%@, item_id, zone_rowid) WHERE item_type = 3
argc == 2
UPDATE %@ SET item_parent_id = call_block(%@, zone_rowid) WHERE item_parent_id = "root"
UPDATE %@ SET item_parent_id = call_block(%@, zone_rowid) WHERE item_parent_id = "documents"
UPDATE %@ SET item_id = call_block(%@, zone_rowid) WHERE item_id = "documents"
UPDATE client_unapplied_table SET item_id = call_block(%@, zone_rowid) WHERE item_id = "documents"
UPDATE %@ SET item_id = call_block(%@, item_id) WHERE item_type = 3
len == sizeof(UUIDItemObject)
Invalid Alias ItemID
isNonDesktopAppLibraryRoot
isDocuments
itemIDString
debugItemIDString
UTF8String
Tr*,R,N
appLibraryRowID
T@"BRCALRowID",R,N
unkown-token-version:%d (%@)
current
<%@,%@>
beginning
unkown-token-size:%lu (%@)
-[BRCPackageManifestReader init]
_reader
itemClass
T#,N
Invalid args in %@
we should have downloaded this file if there is nothing live
No reader to stage package at %s
unreachable: No reader to stage package at %s
Package has been corrupted on the serverAsking for asset index out of bounds %lu vs %lu in package: %@
unreachable: Package has been corrupted on the serverAsking for asset index out of bounds %lu vs %lu in package: %@
relpath should always exist
Package has been corrupted in the cloudAsking for asset index out of bounds %lu vs %lu in package: %@
unreachable: Package has been corrupted in the cloudAsking for asset index out of bounds %lu vs %lu in package: %@
We didn't fetch the corresponding pkg item from the server, but we were also not given a path to hardlink it from! (item: %s)
invalid item type: %d
xattr index is out of bounds %ld of total %ld
unreachable: xattr index is out of bounds %ld of total %ld
Can't find xattr at index %ld
unreachable: Can't find xattr at index %ld
Can't load xattr
unknown error
T@"NSError",R,N,V_error
version: 1
@"NSString"16@?0@"NSString"8
B16@?0@"BRCSharedClientZone"8
q24@?0@8@16
-[BRCAccountSession(BRCContainerFindByName) clientZonesMatchingSearchString:error:]
-[BRCAccountSession(BRCContainerFindByName) singleClientZoneMatchingSearchString:error:]
Too many containers matching '%@': {%@}
shares-v1
migration-query
v24@?0@"CKQueryCursor"8@"NSError"16
%K != NULL
unable to parse itemID from %@ in query %@
record %@ has no etag in query %@
v24@?0@"CKOperation"8@"CKRecord"16
v24@?0^{_BRCOperation=#@ii@[16C]}8@"NSError"16
unknown migration %s
migration key
BROKEN STRUCTURE
unreachable: BROKEN STRUCTURE
-[BRContainer isOverQuota] shouldn't be called by the daemon.
-[BRContainer currentStatus] shouldn't be called by the daemon.
-[BRContainer lastServerUpdate] shouldn't be called by the daemon.
_itemID
Couldn't get public sharing key
contentsRecord
no records and no error
unreachable: no records and no error
no error and no sharing key
unreachable: no error and no sharing key
no public sharing identity. avoiding breaking iwork shares
unreachable: no public sharing identity. avoiding breaking iwork shares
no routing key on share identity prepared record
unreachable: no routing key on share identity prepared record
[self->_share.publicSharingIdentity isEqualToData:self->_sharingIdentityPreparedRecord.encryptedPublicSharingKey]
sharing identity isn't encrypted data
unreachable: sharing identity isn't encrypted data
base token isn't a string
unreachable: base token isn't a string
no base token or sharing identity and no error
unreachable: no base token or sharing identity and no error
sharing/save-share
no share record
unreachable: no share record
couldn't get contents record
unreachable: couldn't get contents record
 and %@
got an unexpected number of shares saved
unreachable: got an unexpected number of shares saved
[save[1].recordType isEqualToString:kBRRecordTypeContent]
[save[0].recordType isEqualToString:CKRecordTypeShare]
sharing/destroy-share
got an unexpected number of shares deleted
unreachable: got an unexpected number of shares deleted
sharing/remove-all-participants
got an unexpected number of shares unshared
unreachable: got an unexpected number of shares unshared
sharing/lookup-participants
v16@?0@"CKShareParticipant"8
Unexpected number of share participants: expected %lu got %lu
Unexpected number of share participants
sharing/modifyAccess
v40@?0@"CKRecordID"8@"NSData"16@"NSString"24@"NSError"32
no dict and no error
unreachable: no dict and no error
granting
revoking
Granted
Revoked
accessToken
referenceIdentifier
sharing/copyParticipantToken
No base token so the share token we would return would be invalid for iwork
unreachable: No base token so the share token we would return would be invalid for iwork
v32@?0@"CKRecordID"8@"NSString"16@"NSError"24
no error and no key
unreachable: no error and no key
sharing/prepare-folder-pcs
pcs-chaining
sharing/copy-shareURL
share
Couldn't get a share URL
unreachable: Couldn't get a share URL
Couldn't get a share URL for %@
unreachable: Couldn't get a share URL for %@
sharing/copy-shortToken
No short token found on record
unreachable: No short token found on record
_multipleItemsInteractiveSchedulingCount >= 0
oldestBatchOperation
operation
_isWaitingForTransferBatch
this operation should have been cancelled
streamDidBecomeReadyToTransferRecords
T@?,C,N,V_streamDidBecomeReadyToTransferRecords
maxCountOfBatchesInFlight
TQ,N,V_maxCountOfBatchesInFlight
operations
T@"NSArray",R
inFlightSize
TQ,R,N,V_inFlightSize
sharing/access-token
encrypted access token %@ is of unexpected type
unreachable: encrypted access token %@ is of unexpected type
reference identifier %@ is of unexpected type
unreachable: reference identifier %@ is of unexpected type
token
ref_id
shareID
T@"CKRecordID",&,N,V_shareID
T@"NSMutableArray",&,N,V_xattrs
 target:'%@'
!info || info.isSymLink
INSERT INTO client_items ( rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name) VALUES ( %lld, %@, %@, %@, %ld, %d, %@, %lld, %lld, %@, %@, %@, %d, %d, %d, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %u, %@, %d, %@)
UPDATE client_items SET item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_localsyncupstate = %d, item_in_flight_diffs = %@, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_doc_id = %@, item_file_id = %@, item_generation = %@, item_localname = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_scope = %d, version_name = %@  WHERE rowid = %llu
T@"BRCFSRootItem",R,D,N
create-subscribe-zone/
!_optimisticSubscribe
savedZones.count == 1
!self->_syncContext.isShared
subscription/
subscriptionOnly
TB,N,V_subscriptionOnly
optimisticSubscribe
TB,N,V_optimisticSubscribe
createZoneAndSubscribeCompletionBlock
T@?,C,N,V_createZoneAndSubscribeCompletionBlock
createdZone
T@"CKRecordZone",R,N,V_createdZone
sync/zone-purge
stage
gc:%ld
com.apple.brc.stage
_persistedState == nil
_deviceID != 0
com.apple.brc.stage.backup-exclusion-queue
fvrgdu
_stageDirectoryFileID[dirIndex] != 0
_persistedState
fileID != 0
-[BRCStageRegistry makeDirectoryInStageGatherFileID:generationID:error:]
-[BRCStageRegistry makeSymlinkWithTarget:inStageGatherFileID:generationID:error:]
-[BRCStageRegistry makeNonLocalVersionSideFaultWithAdditionName:appLibrary:statInfo:version:error:]_block_invoke
-[BRCStageRegistry makeSideFaultInStageGatherFileID:generationID:documentID:properties:inAppLibrary:forCreation:error:]
-[BRCStageRegistry _flockToMakeLiveAtPath:error:]
-[BRCStageRegistry makeItemLive:fromStage:bySwappingWith:fileName:error:]
-[BRCStageRegistry moveFromStage:toPath:fileName:error:]
Failed to load structure xattrs from the database for signature: %s
Failed to load version xattrs from the database for signature: %s
/%@/%@
ckpackage
-[BRCStageRegistry rememberStagedDownloadWithID:gatherFileID:generationID:documentID:appLibrary:error:]
-[BRCStageRegistry moveOldVersionFromPath:error:]
-[BRCStageRegistry moveToGraveyardFromPath:forItemID:error:]
com.apple.bird.graveyard.size#N
i24@?0r*8^{stat=iSSQIIi{timespec=qq}{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}16
B24@?0@"NSString"8@"NSArray"16
SELECT 1 FROM client_uploads WHERE transfer_stage = %@
SELECT 1 FROM client_items WHERE item_staged_file_id = %lld
SELECT 1 FROM client_downloads WHERE transfer_stage = %@
B16@?0@"BRCPrivateServerZone"8
com.apple.bird.stage.gc
minDelta >= 0
maxDelta > minDelta
DocumentID was still 0 after marking tracked
_makeSideFault
container
.DocumentRevisions-V100/AllUIDs
.DocumentRevisions-V100/PerUID
versions
coordinated readers
  + %@
com.apple.bird.versions
What's this path???
dl-version-%@
pkg_extensions.plist
pkg-extension-writer
CFBundleTypeExtensions
CFBundleDocumentTypes
SharedPackageExtensions.app
Info.plist
com.apple.clouddocs-items
%llu
notifRank
dbID:%@ rank:%llu
TQ,N,V_notifRank
T@"NSString",N,V_databaseID
<%@: %p, %lu indexed, %lu deleted>
ownerDisplayName
DELETE FROM spotlight_ranks WHERE 1
index
spotlight-indexer
spotlight-indexer.failure-throttle-params
INSERT INTO spotlight_ranks (doc_id, notif_rank) VALUES (%lld, %lld)
SELECT 1 FROM client_items    WHERE item_type in (1, 2, 8)      AND item_state in (0, -1)      AND item_doc_id = %lld
DELETE FROM spotlight_ranks WHERE notif_rank < %lld
spotlight indexing
task
taskName
!_failureTimer
SELECT doc_id, notif_rank FROM spotlight_ranks    WHERE notif_rank >= %lld      AND notif_rank <= %lld ORDER BY notif_rank ASC
-br_displayName returned nil for account: %@
[error.domain isEqualToString:CSIndexErrorDomain]
fetch client state
v24@?0@"NSData"8@"NSError"16
%@ called with bad state: BRCSpotlightClientStateIsFetchingClientState
unknown client state
We don't expect to ever be asked to re-index specific items
indexingArbiter
T@"<BRCIndexingArbiter>",W,N,V_indexingArbiter
kind
T@"CKRecordID",R,N,V_recordID
T@"NSString",R,N,V_etag
v24@?0@"CKRecordID"8d16
<dl-thumbnail[%lld] %@_%@>
thumbnail is not a CKAsset: %@
unreachable: thumbnail is not a CKAsset: %@
-[BRCDownloadThumbnail _stageWithSession:error:]
dl-thumbnail
thumbnails
downloading
perDownloadCompletionBlock
T@?,C,V_perDownloadCompletionBlock
brpackage-dlspec
<dl-content[%lld] %@_%@>
Package inside %@ is corrupted in the cloud
Asking for asset index out of bounds %lu vs %lu in package: %@
unreachable: Package inside %@ is corrupted in the cloud
Asking for asset index out of bounds %lu vs %lu in package: %@
-[BRCDownloadContent _prepareSecondStageWithSession:manifest:package:error:]
SELECT 1 FROM client_pkg_items WHERE item_doc_id = %u AND rel_path = %@ AND signature_or_link = %@
false
-[BRCDownloadContent _stageWithSession:manifest:package:xattrsPackage:error:]
file content is not a CKAsset: %@
unreachable: file content is not a CKAsset: %@
-[BRCDownloadContent _stageWithSession:error:]
finder bookmark without content: %@
unreachable: finder bookmark without content: %@
pkg content is not a CKPackage: %@
unreachable: pkg content is not a CKPackage: %@
package manifest is not a CKAsset: %@
unreachable: package manifest is not a CKAsset: %@
xattrs package is not a CKAsset: %@
unreachable: xattrs package is not a CKAsset: %@
unknown type for downloaded object %@
unreachable: unknown type for downloaded object %@
liveItemIsPackage
TB,R,N,V_liveItemIsPackage
liveDocumentID
TI,R,N,V_liveDocumentID
liveFileID
TQ,R,N,V_liveFileID
desiredIndices
T@"NSIndexSet",R,N,V_desiredIndices
requiresTwoPhase
TB,R,N,V_requiresTwoPhase
T@"BRCProgress",&,D,N
dl-content
!item.isFinderBookmark
<dl-version[%lld] %@_%@>
There should be a file content property in %@
unreachable: There should be a file content property in %@
-[BRCDownloadVersion _stageContentWithSession:error:]
no fileURL for %@ in %@
unreachable: no fileURL for %@ in %@
vRecord
![vRecord.recordID.zoneID.ownerName isEqualToString:CKCurrentUserDefaultName] || _secondaryRecord
[vRecord.etag isEqualToString:_etag]
storage
T@"GSPermanentStorage",R,N,V_storage
T@"BRCProgress",&,N
gsError
T@"NSError",R,N,V_gsError
isLoser
TB,R,N,V_isLoser
dl-version
v24@?0@"GSAddition"8@"NSError"16
previous documents versions
itemID.isNonDesktopAppLibraryRoot
can't save a zone root item
self.appLibrary.fileID
asking the parent item of a root item
asking the structural bit of a zone root is not supported
server truth structure validation (%s)
=================================
INSERT INTO items_checks    SELECT c.item_id, %lld      FROM items_checks AS p INNER JOIN server_items AS c ON (p.item_id = c.item_parent_id)     WHERE zone_rowid = %@ AND p.depth = %lld
SELECT item_id FROM server_items WHERE zone_rowid = %@ AND item_id NOT IN(SELECT item_id FROM items_checks)
SELECT c.item_id      FROM server_items AS c INNER JOIN server_items AS p ON (c.zone_rowid = p.zone_rowid AND c.item_parent_id = p.item_id)     WHERE c.zone_rowid = %@ AND c.item_state = 0       AND p.item_state = 1
SELECT c.item_id      FROM server_items AS c INNER JOIN server_items AS p ON (c.zone_rowid = p.zone_rowid AND c.item_parent_id = p.item_id)     WHERE c.zone_rowid = %@       AND p.item_type != (1, 2, 8, 5, 6, 7, 3)
SELECT c.item_id      FROM server_items AS c INNER JOIN server_items AS p ON (c.zone_rowid = p.zone_rowid AND c.item_parent_id = p.item_id)     WHERE c.zone_rowid = %@ AND c.item_rank >= p.item_rank       AND p.item_state = 1
is an item with a greater rank than a dead parent
server items checks (%s)
===================
deleteAllContentsOperation
T@"BRCZonePurgeOperation",R,N
deleteAllContentsOperationLastError
T@"BRCPrivateClientZone",R,N
T@"BRCSharedClientZone",R,N
Uploader
client_uploads
com.apple.bird.thumbnails
com.apple.bird.quota
com.apple.bird.quota.update-state
com.apple.bird.uploader
qos_class_self() == QOS_CLASS_UTILITY
UPDATE client_uploads SET transfer_stage = %@, transfer_operation = %@ WHERE throttle_id = %lld
SELECT zone_rowid FROM client_uploads WHERE throttle_id = %lld AND transfer_stage = %@
SELECT zone_rowid FROM client_uploads WHERE throttle_id = %lld AND transfer_operation = %@
SELECT transfer_operation IS NOT NULL FROM client_uploads WHERE throttle_id = %llu
SELECT throttle_state, transfer_operation, transfer_queue, upload_error, app_library_rowid  FROM client_uploads WHERE throttle_id = %lld
 in-quicklook
 needs-thumbnail
 upload:done/cancelled
 uploading:%.1f%%
UPDATE client_uploads SET   throttle_state = 1, transfer_operation = %@ WHERE throttle_id = %llu
UPDATE client_uploads SET   throttle_state = 1, retry_count = %u, last_try_stamp = %llu, next_retry_stamp = %llu, expire_stamp = %llu WHERE throttle_id = %llu
UPDATE client_uploads SET  throttle_state = %d, transfer_queue = '_prepare', transfer_record = NULL, transfer_stage = NULL, transfer_operation = NULL WHERE throttle_id = %@
SELECT throttle_id, transfer_queue, transfer_operation, transfer_stage, item_id, app_library_rowid, throttle_state   FROM client_uploads  WHERE throttle_id = %lld AND throttle_state != %d
SELECT throttle_id, transfer_queue, transfer_operation, transfer_stage, item_id, app_library_rowid, throttle_state   FROM client_uploads  WHERE zone_rowid = %@ AND throttle_state > %d
SELECT transfer_operation    FROM client_uploads  WHERE throttle_id = %lld AND throttle_state == 1
SELECT throttle_id, transfer_queue, transfer_operation, transfer_stage, item_id, app_library_rowid, throttle_state   FROM client_uploads  WHERE throttle_id = %lld
UPDATE client_uploads SET  throttle_state = call_block(%@, next_retry_stamp, app_library_rowid, transfer_queue = %@) WHERE throttle_id = %lld
UPDATE client_uploads    SET throttle_state = %d, transfer_operation = NULL  WHERE throttle_id = %lld
INSERT INTO client_uploads (zone_rowid, throttle_id, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, item_id, app_library_rowid, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_priority, upload_request_stamp ) VALUES (%@, %lld, %u, %u, %lld, %lld, %lld, %@, %@, %@, %lld, %@, %@, %@, %lld, %lld)
can't insert upload throttle for %@: %@
UPDATE client_uploads    SET upload_priority = %lld, upload_request_stamp = %lld  WHERE throttle_id = %lld
UPDATE client_uploads SET throttle_state = 1 WHERE throttle_state = %u AND zone_rowid = %@
UPDATE client_uploads SET transfer_queue = call_block(%@, throttle_id, app_library_rowid, next_retry_stamp)     WHERE throttle_state = 1      AND transfer_queue = '_retry'      AND transfer_operation IS NULL      AND next_retry_stamp <= %lld
  SELECT MIN(next_retry_stamp)     FROM client_uploads    WHERE throttle_state = 1      AND transfer_queue = '_retry'      AND transfer_operation IS NULL
UPDATE client_uploads SET transfer_operation = NULL WHERE (transfer_operation >= '')
SELECT app_library_rowid, transfer_queue   FROM client_uploads  WHERE throttle_state = 1 GROUP BY app_library_rowid, transfer_queue
  SELECT next_retry_stamp, throttle_id, app_library_rowid     FROM client_uploads    WHERE throttle_state = 1      AND transfer_queue = '_prepare'      AND transfer_operation IS NULL      AND next_retry_stamp >= 0 ORDER BY next_retry_stamp    LIMIT %u
no app library for row ID %@
upload scheduler is exact we should have an item
brpackage
ckpackage-xattrs
%@-%lu
can't upload an item without a fileID
unreachable: can't upload an item without a fileID
UPDATE client_uploads SET  transfer_queue = call_block(%@, next_retry_stamp, %@), transfer_record = %@, transfer_operation = NULL, transfer_stage = %@, transfer_size = %lld WHERE throttle_id = %lld
upload-%lld-%@
pbitem.type != BRFieldPkgItemType_FILE || pbitem.hasSignature
UPDATE client_uploads SET  transfer_operation = call_block(%@, next_retry_stamp), upload_error = %@ WHERE throttle_id = %lld
![item isReadAndUploaded]
  SELECT throttle_id, app_library_rowid, transfer_size, transfer_record, next_retry_stamp, transfer_stage     FROM client_uploads    WHERE throttle_state = 1      AND transfer_queue = %@      AND transfer_operation IS NULL ORDER BY upload_priority DESC, upload_request_stamp DESC, transfer_size ASC
UPDATE client_uploads    SET transfer_queue = '_retry'  WHERE throttle_id = %ld
%@ should be a document
%@ should be needs-upload
v24@?0@"BRCUpload"8@"NSError"16
SELECT MIN(next_retry_stamp) FROM client_uploads   WHERE throttle_state = 1     AND transfer_queue = %@      AND transfer_operation IS NULL 
_session.clientDB.changes == 1
SELECT 1 FROM client_uploads  WHERE throttle_state = 32    AND zone_rowid IN (SELECT rowid FROM client_zones WHERE zone_owner = %@ AND zone_plist IS NOT NULL)  LIMIT 1
SELECT 1 FROM client_uploads WHERE throttle_state = 32 AND zone_rowid = %@ LIMIT 1
availableQuota
SELECT throttle_id, transfer_size   FROM client_uploads  WHERE throttle_state = 32    AND transfer_size < %lld
v24@?0Q8@"NSError"16
uploadsDeadlineScheduler
T@"BRCDeadlineScheduler",R,N,V_uploadsDeadlineScheduler
thumbnailsOperationsByID
T@"NSDictionary",R,N,V_thumbnailsOperations
isDefaultOwnerOutOfQuota
TB,N,V_isDefaultOwnerOutOfQuota
-[BRFieldPkgLocalItem writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-486.21/daemon/items/BRFieldPkgLocalItem.m
self->_item != nil
T@"BRFieldPkgItem",&,N,V_item
Tq,N,V_fileID
hasGenerationID
TI,N,V_generationID
hasSize
hasXattrs
T@"NSData",&,N,V_xattrs
hasCompletedPCSMigration
migrate-pcs
v32@?0@"CKRecordZoneID"8@"CKRecordZone"16^B24
not needed
v24@?0@"CKRecordZone"8@"NSError"16
v32@?0@"NSArray"8@"CKRecordZone"16@"NSError"24
![BRCDaemon daemon].isInSyncBubble
com.apple.CloudDocsDaemon.container-metadata-extractor
com.apple.bird.watcher-queue
session wasn't properly closed
db connections weren't properly closed and nillified
session{account:%@}
![_xpcClients containsObject:client]
[_xpcClients containsObject:client]
there are still XPC clients around: %@
com.apple.bird.main-scheduler
com.apple.bird.reset
com.apple.bird.pending-disk-scheduler
com.apple.bird.disk-space-observer
_accountWaitOperation.operationFailureThrottle
zone.delegate == nil
[self hasRootForSyncedFolderType:folderType]
hasDB
.localized
com.apple.clouddocs.app-uploaded
com.apple.bird.destroy-account-data
appLibrary.wasMovedToCloudDocs ? clientZone.isCloudDocsZone : [clientZone.zoneName isEqualToString:appLibraryID]
v32@?0@"NSString"8@"NSString"16@"BRCALRowID"24
serverZone.clientZone
sharedClientZone.state & BRCClientZoneStateIsResetting
sharedClientZone.state & BRCClientZoneStateWantsDataUnlinked
can't find app library for %lld
serverZone.dbRowID
[clientZone.dbRowID isEqualToNumber:serverZone.dbRowID]
no-root
No db rowID on an app library or server zone
No mangledID on a server zone
no zone name on a server zone
shared 
creationFlags != BRCALCreatedNeedsActivate
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
v24@?0@"NSString"8^B16
v32@?0@"NSString"8@"NSSet"16^B24
SELECT value FROM aggregates WHERE key = 'version_size_sum'
enabling
disabling
download-all-tracker
_isGreedy
Mobile Docs
Bad folder type
Cannot disable sync for BRCSyncedFolderTypeDefault
%ld xpc clients:
%ld misc operations:
_fsEventsMonitors
![self hasRootForSyncedFolderType:folderType]
can't open root %s; error %d (%s)
_rootsByFolderType
appSupportDirPath was accessed after being closed
cacheDirPath was accessed after being closed
applyScheduler was accessed after being closed
containerScheduler was accessed after being closed
fsReader was accessed after being closed
fsWriter was accessed after being closed
notificationManager was accessed after being closed
stageRegistry was accessed after being closed
accountID
T@"NSString",R,N,V_accountID
globalProgress
T@"BRCGlobalProgress",R,N,V_globalProgress
defaultScheduler
T@"BRCDeadlineScheduler",R,N,V_defaultScheduler
applyScheduler
T@"BRCApplyScheduler",R,N,V_applyScheduler
containerScheduler
T@"BRCContainerScheduler",R,N,V_containerScheduler
fsReader
T@"BRCFSReader",R,N,V_fsReader
fsUploader
T@"BRCFSUploader",R,N,V_fsUploader
fsDownloader
T@"BRCFSDownloader",R,N,V_fsDownloader
fsWriter
T@"BRCFSWriter",R,N,V_fsWriter
volume
T@"BRCVolume",R,N,V_volume
notificationManager
T@"BRCNotificationManager",R,N,V_notificationManager
stageRegistry
T@"BRCStageRegistry",R,N,V_stageRegistry
diskReclaimer
T@"BRCDiskSpaceReclaimer",R,N,V_diskReclaimer
userNotification
T@"BRCUserNotification",R,N,V_userNotification
coreDuetSession
T@"CDSession",R,N,V_coreDuetSession
spotlightIndexer
T@"BRCSpotlightIndexer",R,N,V_spotlightIndexer
availableDiskSpace
accountWaitOperation
T@"BRCAccountWaitOperation",R,N
hasOptimizeStorageEnabled
appLibraryScanThrottle
T@"BRCThrottle",R,N,V_appLibraryScanThrottle
appLibraryResetThrottle
T@"BRCThrottle",R,N,V_appLibraryResetThrottle
sharedAppLibraryResetThrottle
T@"BRCThrottle",R,N,V_sharedAppLibraryResetThrottle
appLibraryAliasRemovalThrottle
T@"BRCThrottle",R,N,V_appLibraryAliasRemovalThrottle
lostItemThrottle
T@"BRCThrottle",R,N,V_lostItemThrottle
T@"BRCThrottle",R,N,V_operationFailureThrottle
syncClientZoneThrottle
T@"BRCThrottle",R,N,V_syncClientZoneThrottle
syncClientZoneErrorThrottle
T@"BRCThrottle",R,N,V_syncClientZoneErrorThrottle
resetQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_resetQueue
Bad folder type %u
dictionary
getting nil entry for folderType: %lu, dictionary: %@
setting nil entry for folderType: %lu, dictionary: %@
!dictionary[@(folderType)]
dictionary[@(folderType)]
transfer-queue
should be subclassed
records-left:%ld progress:%.1f%% size:%@
implement in subclass
transferring
 (cancelled)
entries.count == 0 || error
Missing transfer error for record %@
unreachable: Missing transfer error for record %@
didProgressBlock
T@?,C,V_didProgressBlock
TQ,V_totalSize
TQ,V_doneSize
itemsCount
pendingGroup
T@"NSObject<OS_dispatch_group>",R,N,V_pendingGroup
bookmarkData
docID:
+[BRCDocumentItem(BRCBookmarkAdditions) parseBookmarkData:inAccountSession:docID:itemID:mangledID:unsaltedBookmarkData:error:]
BRGetFileNameFromServerInfoBlob
recordNames
_type == problem->_type
Ti,R,N,V_type
effectedRecordNames
T@"NSSet",R,N,V_effectedRecordNames
partial
broken
problems
pendingRequestID
needsSync
unknown problem type %d
dead parent
missing root
live children
missing content
cant save (missing structure?)
cant save (missing parent)
simulated (broken)
simulated (partial)
item parented to a document
package with corrupt indices
share without root record
unknown effective problem type
problem{msg:%@,needs-sync:%@,zone-state:%@,pending-request:%@, records:%@}
Ti,R,N,V_state
effectiveProblemMessage
T@"NSNumber",&,N,V_pendingRequestID
TB,N,V_needsSyncUp
ckinfo
zone-health{etag:%@,state:%@}
T@"BRFieldCKInfo",R,N,V_ckInfo
i20@?0i8@"NSString"12
errno != 0
/.vol/%u/%u
BRCSetFakeQuarantineInfo
Corrupt quarantine: %s
br_qtnFlags
BRCGetXattrValue
-[BRCLazyXattrsCollection initWithFD:sizeLimit:error:]
-[BRCLazyXattrsCollection getXattrValue:error:]
(mode&S_IFMT) != 0 && !S_ISDIR(mode)
file-write-data
file-read-data
com.apple.quarantine
com.apple.private.bird.fake-qtn
B16@?0r*8
com.apple.LaunchServices.OpenWith
com.apple.ResourceFork
com.apple.metadata:_kMDItemFinderLabel
com.apple.cs.CodeSignature
com.apple.cs.CodeDirectory
com.apple.cs.CodeRequirements
i24@?0r^v8r^v16
unlink
com.apple.bird.file-unlinker
self->_handler
SELECT rowid, item_type FROM client_items WHERE rowid > %lld   AND item_parent_id = %@  AND app_library_rowid = %@  AND NOT indexset_contains(%p, rowid) ORDER BY rowid    LIMIT %ld
SELECT rowid FROM client_items WHERE rowid > %lld AND item_type IN (1, 2, 8) AND app_library_rowid = %@ORDER BY rowid    LIMIT %ld
completionHandler
T@?,C,N,V_completionHandler
upload-tracker
%@ - zones still uploading: %@
iclouddrive
com.apple.Pages
com.apple.Keynote
com.apple.Numbers
task_tracker
UPDATE client_reader_throttle    SET next_retry_stamp = MAX(next_retry_stamp, %lld)  WHERE zone_rowid = %@ AND throttle_id = %lld
INSERT OR REPLACE INTO client_reader_throttle (zone_rowid, throttle_id, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp) VALUES (%@, %lld, %u, %u, %lld, %lld, %lld)
v16@?0@"NSURL"8
  SELECT next_retry_stamp, throttle_id, zone_rowid     FROM client_reader_throttle    WHERE throttle_state = 1      AND next_retry_stamp >= 0 ORDER BY next_retry_stamp, throttle_id    LIMIT %u
%s isn't needs reading, and is in the reader queue
[_coordinatedReaders containsObject:appLibrary]
something is wrong, we got a coordinated inside a package
-updateLocationAndMetaFromFSAtPath should always work on documents
_session.clientDB.isBatchSuspended
after bouncing to a unique path, we still have match!
what the hell is that path type?? %s (%x)
root should exist
B16@?0@"BRCSharedAppLibrary"8
fsevent.no-shared-namespace
fsevent.no-root
lookupByFileID != item
![[appLibrary appLibraryID] isEqualToString:BRUbiquitousDefaultContainerID]
reset needed for %@ because an item was turned into a fault on disk:
item %@
relpath %@
item-turned-fault
app_library_rowid != %@
app_library_rowid NOT IN (%@
, %@
SELECT item_id, item_parent_id, app_library_rowid, item_processing_stamp FROM client_items WHERE item_state IN (-1,-3)  AND %@ ORDER BY item_processing_stamp LIMIT 1
nil app library for rowID %@
App library %@ is not marked as needs lost, but its item %@ is!
![self->_lostSet containsObject:appLibrary]
App library %@ is in needs-lost state, but missing from the lost set!
 because too many deep scans
WITH RECURSIVE item_parents (item_id, item_state, item_processing_stamp, item_type) AS (     SELECT item_parent_id, item_state, item_processing_stamp, item_type FROM client_items      WHERE item_id = %@ AND +app_library_rowid = %@  UNION ALL     SELECT li.item_parent_id, li.item_state, li.item_processing_stamp, li.item_type FROM client_items AS li INNER JOIN item_parents AS p USING (item_id)      WHERE +app_library_rowid = %@      LIMIT %u) SELECT item_id, item_state, item_processing_stamp, item_type FROM item_parents
Lost item should have a lostStamp
UPDATE client_items SET item_processing_stamp=%lld WHERE item_id = %@ AND +app_library_rowid = %@
shallowestItemID
backoff < BRC_TIMESTAMP_FAR_FUTURE
%@: maxLostStamp(%lld) must be greater than the shallowestLostStamp(%lld)!
We should always be able to resolve under the root
_currentScan == nil
relpath.exists
errno == ENOSYS || errno == EINTR || errno == EBUSY
!_currentScan
relpath.isUnixDir
item.isDirectory
the relpath is already open, so -resolveAndKeepOpen should work
the relpath is already open, so -openDirectoryForScan should work
Can't scan a path with no container: %@
_currentScan.isUnixDir
_currentScan.exists
appLibrary.deepScanStamp
we should always be able to resolve under the root, since it's kept open; error %d (%s)
   path: %@
app libraries differ in db row id %@ vs %@
different-libraries
start-scan
_currentScan
!_lostScanDelay
wrong applibrary for fsroot %@ vs %@
wrong applibrary for fsroot
we got an fsroot %@ that's not a root of its applibrary %@ - %@
fsroot doesn't match app library root
we just got the itemID from the db, we should be able to get the item as well
-[BRCFSReader thumbnailChangedForItem:relpath:url:error:]
Reader
client_reader_throttle
com.apple.brc.lost-scan
com.apple.brc.fs.reader
SELECT distinct zone_rowid FROM mark_children_lost_progress
Reader dealloced with containers still in the lost heap
lostScanGroup
T@"NSObject<OS_dispatch_group>",R,N,V_lostScanGroup
serialQueue
T@"NSObject<OS_dispatch_queue>",R,N
serializedNameComponents
hasSerializedNameComponents
T@"NSData",&,N,V_serializedNameComponents
icloud-drive.show-icloud-drive-app.
icloud-drive-app-visibility-manager
call %@ instead.
proxy != nil
 not
-[BRCiCloudDriveAppVisibilityManager _unsafe_visibilityForDSID:]
-[BRCiCloudDriveAppVisibilityManager _unsafe_setDefaultVisibility:forDSID:]
-[BRCiCloudDriveAppVisibilityManager setVisibilityForCurrentAccount:]_block_invoke
installed
uninstalled
default visibility for DSID %@: %@
is iCloud Drive App installed on SpringBoard: %s
Server
ServerTruth|ClientTruth
ServerTruth|ClientTruth|UnlinkData
ServerTruth|ClientTruth|UnlinkData|PurgeZone
CloudDocsServerExtension
BRErrorNeedsReset
CKErrorInternalContainerReset
CKErrorChangeTokenExpired
CKErrorSharedZoneNotFound
CKErrorZoneNotFound
CKErrorUserDeletedZone
there should be a recordID
really unexpected error: %@
Sync is restricted for this client
<%@:%p(%@:%ld) - %@>
containerMetadataSync
yyyy-MM-dd HH:mm:ss
%@:%@ %@:%@
serverChangeToken
lastSyncDate
isContainerMetadataSyncIdle
isSharedDBSyncIdle
T@"CKServerChangeToken",&,N,V_serverChangeToken
T@"NSDate",&,V_lastSyncDate
needsContainerMetadataSyncDown
TB,N,V_needsContainerMetadataSyncDown
needsSharedDBSyncDown
TB,N,V_needsSharedDBSyncDown
zoneHealthSync
zoneHealthSyncIdle
_requestID == 0
zone-health-state{last-sync:%@, needs-syncdown:%@, requestID:%lld, changeToken:%@}
T@"NSDate",R,V_lastSyncDownDate
T@"CKServerChangeToken",R,N,V_changeToken
needsSyncDown
TB,N,V_needsSyncDown
disabled-logged-out
disabled-entitlement
disabled-MDM
disabled TCC
user-interactive
user-initiated
utility
unspecified
session != nil
XPC Client task tracker
 (Logged out)
 o %@
there should be a client
%@ entitlement required
%s privilege required
Not entitled to access container
Not entitled to create container
Not a container proxy
Not entitled to access: %@
file-read-metadata
No permission to %s at "%@"
write
can't %s app library for %@
create
load
-[BRCXPCClient _setupPrivateAppLibrary:error:]_block_invoke
-[BRCXPCClient _startDownloadItemsAtURLs:pos:options:error:reply:]
clientPriviledgesDescriptor
T@"BRCClientPrivilegesDescriptor",&,N,V_clientPriviledgesDescriptor
isUsingUbiquity
TB,N,V_isUsingUbiquity
defaultAppLibraryID
entitledAppLibraryIDs
bundleID
hasPrivateSharingInterfaceEntitlement
connection
T@"NSXPCConnection",R,W,N,V_connection
dieOnInvalidate
TB,R,N,V_dieOnInvalidate
<token-getter>
-[BRCXPCTokenClient prepareFileProvidersWithReply:]
-[BRCXPCTokenClient currentAccountCopyTokenWithBundleID:version:reply:]
should have an account session
(null)
-[BRCXPCRegularIPCsClient checkinAskClientIfUsingUbiquity:]
-[BRCXPCRegularIPCsClient getContainerURLForID:reply:]
-[BRCXPCRegularIPCsClient presyncContainerWithID:reply:]
v40@?0@"NSURL"8@"NSData"16@"NSString"24@"NSError"32
-[BRCXPCRegularIPCsClient getContainerURLForID:forPid:reply:]
-[BRCXPCRegularIPCsClient updateContainerMetadataForID:]
%@ is not owning %@ and updating its metadata
-[BRCXPCRegularIPCsClient deleteAllContentsOfContainerID:onClient:onServer:reply:]
ipc-%@
-[BRCXPCRegularIPCsClient registerInitialSyncBarrierForID:reply:]
-[BRCXPCRegularIPCsClient getNotificationInfoAtURL:reply:]
we should always have a fileObjectID
-[BRCXPCRegularIPCsClient getAttributeValues:forItemAtURL:reply:]
-[BRCXPCRegularIPCsClient startDownloadItemsAtURLs:options:reply:]
-[BRCXPCRegularIPCsClient evictItemAtURL:options:reply:]
-[BRCXPCRegularIPCsClient thumbnailChangedForItemAtURL:reply:]
-[BRCXPCRegularIPCsClient getItemUpdateSenderWithReceiver:reply:]
v16@?0@"BRCNotificationPipe"8
-[BRCXPCRegularIPCsClient getNonLocalVersionSenderWithReceiver:documentURL:includeCachedVersions:reply:]
-[BRCXPCRegularIPCsClient getTotalApplicationDocumentUsageWithReply:]
Total Size
Evictable Size
Document Count
Applications
Localized Name
Documents URL
Icons
-[BRCXPCRegularIPCsClient getApplicationDocumentUsageInfoForBundleID:withReply:]
-[BRCXPCRegularIPCsClient hasOptimizeStorageWithReply:]
-[BRCXPCRegularIPCsClient setStorageOpimizationEnabled:reply:]
-[BRCXPCRegularIPCsClient getEvictableSpaceWithReply:]
-[BRCXPCRegularIPCsClient evictOldDocumentsWithReply:]
-[BRCXPCRegularIPCsClient addExternalDocumentReferenceTo:forPid:inContainer:underParent:reply:]
pid/containerID/parentURL
pid or containerID or parentURL must be set
parentURL
-[BRCXPCRegularIPCsClient bundleDidAccessExternalDocument:]
-[BRCXPCRegularIPCsClient getContainersByID:]
-[BRCXPCRegularIPCsClient getContainerForURL:reply:]
-[BRCXPCRegularIPCsClient resolveConflictWithName:atURL:reply:]
-[BRCXPCRegularIPCsClient didReceiveHandoffRequestForBundleID:reply:]
account
-[BRCXPCRegularIPCsClient getLoggedInUserPropertyValuesForKeys:reply:]
isSharingPrivateInterfaceEntitled
-[BRCXPCRegularIPCsClient setupInstanceWithDict:reply:]
testID
-[BRCXPCRegularIPCsClient resetBudgets:reply:]
global
-[BRCXPCRegularIPCsClient performSelfCheck:reply:]
self check failed: broken invariant
-[BRCXPCRegularIPCsClient printStatus:containerID:reply:]
-[BRCXPCRegularIPCsClient dumpDatabaseTo:containerID:reply:]
-[BRCXPCRegularIPCsClient dumpCoordinationInfoTo:reply:]
-[BRCXPCRegularIPCsClient gatherInformationForPath:reply:]
local item
server item
local path match
server path match
-[BRCXPCRegularIPCsClient simulateHealthIssueWithContainer:status:brokenStructure:reply:]
 with broken structure
clientInfo
newStatus
-[BRCXPCRegularIPCsClient healthStatusStringForContainer:reply:]
-[BRCXPCRegularIPCsClient forceSyncWithBarrierContainerID:reply:]
-[BRCXPCRegularIPCsClient waitUntilIdle:reply:]
Timed out while waiting for %@ to be idle.
-[BRCXPCRegularIPCsClient forceSyncContainerID:reply:]
-[BRCXPCRegularIPCsClient iWorkForceSyncContainerID:ownedByMe:reply:]
-[BRCXPCRegularIPCsClient waitForFileSystemChangeProcessingWithReply:]
-[BRCXPCRegularIPCsClient createContainerWithID:ownerName:reply:]
-[BRCXPCRegularIPCsClient computePurgableSpaceWithUrgency:reply:]
-[BRCXPCRegularIPCsClient purgeAmount:withUrgency:reply:]
-[BRCXPCRegularIPCsClient reclaimAmount:withUrgency:reply:]
-[BRCXPCRegularIPCsClient readerThrottleBackoffForDocumentAtPath:containerID:reply:]
isAutomationEntitled
SELECT throttle_state, next_retry_stamp FROM client_reader_throttle WHERE zone_rowid = %@ AND throttle_id = %lld
-[BRCXPCRegularIPCsClient currentAccountCreateWithID:reply:]
asked to login to a non migrated account
-[BRCXPCRegularIPCsClient currentAccountLogoutWithReply:]
Failed to destroy account
-[BRCXPCRegularIPCsClient jetsamCloudDocsAppsWithReply:]
-[BRCXPCRegularIPCsClient getContainersNeedingUpload:]
-[BRCXPCRegularIPCsClient setMigrationStatus:forDSID:shouldUpdateAccount:reply:]
-[BRCXPCRegularIPCsClient getMigrationStatusForPrimaryiCloudAccount:]
-[BRCXPCRegularIPCsClient getBookmarkDataForURL:andAllowAccessByBundleID:reply:]
-[BRCXPCRegularIPCsClient resolveBookmarkDataToURL:reply:]
does not have
-[BRCXPCRegularIPCsClient resolveBookmarkDataToURL:reply:]_block_invoke
Not Entitled
-[BRCXPCRegularIPCsClient getBackReferencingContainerIDsForURLs:reply:]
v32@?0@"NSURL"8@"NSError"16^B24
partialError
-[BRCXPCRegularIPCsClient getBackReferencingURLForURL:reply:]
-[BRCXPCRegularIPCsClient getApplicationStatus:]
-[BRCXPCRegularIPCsClient getApplicationStatusWithPID:reply:]
-[BRCXPCRegularIPCsClient getApplicationStatusWithAuditToken:reply:]
-[BRCXPCRegularIPCsClient getLastSyncDateWithReply:]
-[BRCXPCRegularIPCsClient getLocalizedLastSyncWithReply:]
CLOUD_DRIVE_LAST_UPDATED_JUST_NOW
CLOUD_DRIVE_LAST_UPDATED_N_MINUTES_AGO
CLOUD_DRIVE_LAST_UPDATED_AT_TIME_FORMAT
CLOUD_DRIVE_LAST_UPDATED_YESTERDAY
EEEE
CLOUD_DRIVE_LAST_UPDATED_WEEKDAY_FORMAT
CLOUD_DRIVE_LAST_UPDATED_ON_DATE_FORMAT
-[BRCXPCRegularIPCsClient getContainerStatusWithID:reply:]
-[BRCXPCRegularIPCsClient getContainerLastServerUpdateWithID:reply:]
-[BRCXPCRegularIPCsClient getIsContainerWithIDOverQuota:reply:]
Publish failed but no error was set
v32@?0@"NSURL"8@"NSDate"16@"NSError"24
-[BRCXPCRegularIPCsClient getPublishedURLForItemAtURL:forStreaming:requestedTTL:reply:]
No item found at path
v40@?0@"CKRecordID"8@"NSString"16@"CKAsset"24@"NSError"32
-[BRCXPCRegularIPCsClient forceConflictForURL:bookmarkData:forcedEtag:reply:]
Item isn't local at path
No item is stale at path
-[BRCXPCRegularIPCsClient setiWorkPublishingInfoAtURL:publish:readonly:reply:]
path isn't iWork Shareable
-[BRCXPCRegularIPCsClient getiWorkPublishingInfoAtURL:reply:]
base token of unexpected class
unreachable: base token of unexpected class
sharing key of unexpected class
unreachable: sharing key of unexpected class
only got sharing key or base token, didn't get both
unreachable: only got sharing key or base token, didn't get both
-[BRCXPCRegularIPCsClient getiWorkPublishingBadgingStatusAtURL:reply:]
-[BRCXPCRegularIPCsClient getiWorkNeedsShareMigrateAtURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopySharingInfoAtURL:reply:]
isSharingProxyEntitled
result == nil || [result isKindOfClass:[CKShare class]]
v24@?0@"CKShare"8@"NSError"16
-[BRCXPCRegularIPCsClient startOperation:toCopySharingWebAuthTokenForContainerID:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopySharingAccessToken:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopyAvailableQuotaWithReply:]
canFetchUserQuota
v24@?0@"NSNumber"8@"NSError"16
-[BRCXPCRegularIPCsClient startOperation:toEvictItemAtURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toUploadAllFilesInContainer:reply:]
-[BRCXPCRegularIPCsClient copyCurrentUserIdentifierWithReply:]
v24@?0@"CKRecordID"8@"NSError"16
-[BRCXPCRegularIPCsClient copyCurrentUserNameAndEmailWithReply:]
-[BRCXPCRegularIPCsClient createSharingInfoForURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toSaveSharingInfo:reply:]
-[BRCXPCRegularIPCsClient startOperation:toUnshareShare:forceDelete:reply:]
-[BRCXPCRegularIPCsClient startOperation:toLookupShareParticipants:reply:]
-[BRCXPCRegularIPCsClient startOperation:toModifyRecordAccessAtURL:allowAccess:reply:]
allow
disallow
-[BRCXPCRegularIPCsClient startOperation:toCopyParticipantTokenAtURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopyShortTokenAtURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopyEtagAtURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toPrepFolderForSharingAt:reply:]
-[BRCXPCRegularIPCsClient joinShareAtURL:reply:]
result
v24@?0@"NSURL"8@"NSError"16
-[BRCXPCRegularIPCsClient copyBulkShareIDsAtURLs:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopyShareURLForShare:appName:reply:]
-[BRCXPCRegularIPCsClient _presentAcceptDialogsWithURL:metadata:reply:]
-[BRCXPCRegularIPCsClient handleCloudKitShareMetadata:completionHandler:]
-[BRCXPCRegularIPCsClient removeItemFromDisk:reply:]
-[BRCXPCRegularIPCsClient trashItemAtURL:reply:]
-[BRCXPCRegularIPCsClient boostFilePresenterAtURL:reply:]
-[BRCXPCRegularIPCsClient _t_blockSyncUpOfItemWithID:containerID:withPendingUpgradeToOSName:reply:]
-[BRCXPCRegularIPCsClient _t_blockSyncForContainerID:withPendingUpgradeToOSName:reply:]
-[BRCXPCRegularIPCsClient _t_clearAllBlockedItemsForContainerID:reply:]
-[BRCXPCRegularIPCsClient _t_pauseSyncDownOfContainer:reply:]
-[BRCXPCRegularIPCsClient _t_resumeSyncDownOfContainer:reply:]
-[BRCXPCRegularIPCsClient _t_setFSEventProcessingState:reply:]
-[BRCXPCRegularIPCsClient _t_getPCSChainStateAtURL:reply:]
zone,,CrossZoneMigration,
reset
forceStart
-[BRCXPCRegularIPCsClient _t_migrateAllZonesToClouddocsWithReset:onlyPrepare:reply:]
 reset
-[BRCXPCRegularIPCsClient lookupExcludedFilenamesForLogoutWithReply:]
-[BRCXPCRegularIPCsClient lookupExcludedExtensionsForLogoutWithReply:]
-[BRCXPCRegularIPCsClient overwriteAccessTimeForItemAtURL:atime:reply:]
No local item
Couldn't modify access time
-[BRCXPCRegularIPCsClient currentSyncedRootURLsWithReply:]
-[BRCXPCRegularIPCsClient setiCloudDriveAppDefaultVisibility:forDSID:reply:]
-[BRCXPCRegularIPCsClient iCloudDriveAppStatusDescriptionForDSID:reply:]
-[BRCXPCRegularIPCsClient postiCloudDriveAppInstallationNotificaionWithReply:]
-[BRCXPCRegularIPCsClient moveBRSecurityBookmarkAtURL:toURL:reply:]
Can't use iCloud Drive.
The disk is full.
Free some space on your disk?
sync-down/periodic-sync
No error found
unreachable: No error found
useful
useless
T@"BRCContainerScheduler",R,N,V_scheduler
metadataChangeToken
T@"CKServerChangeToken",R,N,V_metadataChangeToken
zoneHealthChangeToken
T@"CKServerChangeToken",R,N,V_zoneHealthChangeToken
zone-health-report
report.state != BRCZoneHealthStateHealthy
no BRCPackageItem should be a Tombstone
pkg:%lld%s p:'%@' rank:%lld ino:%lld
 (dirty)
 dir
 file gen:%@ size:%llu mtime:%llu mode:%s
 sig:%@
 link to:'%@'
 quarantined
 xattrs:%@
SELECT item_doc_id, rel_path, item_type, asset_rank, file_id, is_dirty, quarantine_info, xattrs, signature_or_link, generation, size, mode, mtime FROM client_pkg_items WHERE item_doc_id = %u AND rel_path = %@
SELECT largest_file_size FROM client_pkg_sizes WHERE item_doc_id = %u
SELECT item_doc_id, rel_path, item_type, asset_rank, file_id, is_dirty, quarantine_info, xattrs, signature_or_link, generation, size, mode, mtime FROM client_pkg_items WHERE item_doc_id = %u ORDER BY asset_rank
SELECT item_doc_id, rel_path, item_type, asset_rank, file_id, is_dirty, quarantine_info, xattrs, signature_or_link, generation, size, mode, mtime FROM client_pkg_items WHERE item_doc_id = %u ORDER BY rel_path
SELECT aggregate_size FROM client_pkg_sizes WHERE item_doc_id = %u
SELECT asset_rank, generation  FROM client_pkg_items WHERE item_doc_id = %@ AND item_type = %d
wrong number of items in package
cpi.signature
UPDATE client_pkg_items SET signature_or_link = %@ WHERE item_doc_id = %@ AND asset_rank = %ld
updating asset signature should work
INSERT INTO client_pkg_items (item_doc_id, rel_path, item_type, asset_rank, file_id, is_dirty, quarantine_info, xattrs, signature_or_link, generation, size, mode, mtime) VALUES (%llu, %@, %u, %llu, %llu, %@, %@, %@, %@, %@, %llu, %u, %llu)
B24@?0@"BRCPQLConnection"8@?<v@?@"PQLConnection"@"PQLStatement"@"NSError">16
INSERT INTO client_pkg_items (item_doc_id, rel_path, item_type, asset_rank, file_id, is_dirty, quarantine_info, xattrs) VALUES (%llu, %@, %u, %llu, %llu, %@, %@, %@)
INSERT INTO client_pkg_items (item_doc_id, rel_path, item_type, asset_rank, file_id, is_dirty, quarantine_info, xattrs, signature_or_link) VALUES (%llu, %@, %u, %llu, %llu, %@, %@, %@, %@)
should never attempt to save tombstones to db
doInsert != nil
DELETE FROM client_pkg_items WHERE item_doc_id = %llu AND rel_path = %@
saving package items should really always work
UPDATE client_pkg_items SET is_dirty = %d WHERE item_doc_id = %llu AND rel_path = %@
DELETE FROM client_pkg_sizes WHERE item_doc_id = %u
DELETE FROM client_pkg_items WHERE item_doc_id = %u
+[BRCPackageItem _deleteSnapshotAtPath:error:]
relpath.isPackageRoot || relpath.isInPackage
relpath.isDocument
relpath.isInPackage || relpath.isPackageRoot
file
directory
SELECT item_doc_id, rel_path, item_type, asset_rank, file_id, is_dirty, quarantine_info, xattrs, signature_or_link, generation, size, mode, mtime  FROM client_pkg_items  ORDER BY item_doc_id, rel_path
client_pkg_items
+[BRCPackageItem dumpSession:toContext:db:error:]
packageDocumentID
TQ,R,N,V_packageID
TQ,R,N,V_fileID
pathInPackage
T@"NSString",R,N,V_pathInPackage
assetRank
Tq,R,N,V_assetRank
Tq,R,N,V_mtime
Tq,R,N,V_size
Tc,R,N,V_mode
relpathInPackage.isInPackage
SELECT file_id FROM client_pkg_items WHERE item_doc_id = %u AND rel_path = %@ AND is_dirty IS NULL
<%@  %@  pending:%ld items  callback %s>
pending
fired
-[BRCRecursiveProviderTracker init]
documentIDsEnumerator
T@"NSEnumerator",R,N
T@"NSString",R,N,V_key
group
T@"NSObject<OS_dispatch_group>",R,N,V_group
 %@ [presenter]
_observedAppLibraries.count == 0
pipe
T@"BRCNotificationPipe",&,N,V_pipe
docID
T@"NSNumber",&,N,V_docID
T@"NSString",R,N,V_identifier
handler
T@?,R,C,N,V_handler
updateAccessTime
TB,R,N,V_updateAccessTime
cloud
recursive coordinated readers
Tracked pending document downloads
Huh? %@ doesn't have a document id...
v24@?0@"BRCTreeEnumerator"8@"BRCLocalItem"16
com.apple.preferences.icloud.remoteservice
![_readersURLAndIDToDocID objectForKey:key]
recursive 
clientDB.serialQueue should not be nil for a valid session
clientDB.serialQueue could not be nil for a vliad session
v32@?0@"NSString"8@"BRCTrackingDescriptor"16^B24
v32@?0@"NSNumber"8^{NSMutableDictionary=#}16^B24
incorrect presenter refcount
clientDB.serialQueue should never be nil
ready in %.3fs
suspendCount >= 0
q24@?0@"BRCDeadlineSource"8@"BRCDeadlineSource"16
%@ was deallocated without being closed
coalescingLeeway
Tq,N,V_leeway
computeNextAdmissibleDateForScheduling
T@?,C,N,V_computeNextAdmissibleDateForScheduling
needs-sync-down
in-sync-up
in-sync-down
last-sync-was-up
has-synced-down
prefer-sync-down
BRCSyncContextDidBecomeBackground
BRCSyncContextDidBecomeForeground
<%@: %@ %p>
%@-metadata
uploader
v32@?0Q8q16@?<v@?>24
downloader
com.apple.bird.foreground.state
database
Exception %@ was raised while trying to enqueue %@
_isCancelled
+ foreground clients:
   o %@ [container]
   o %@
   o %@ [grace period] disconnected %.1fs ago
   o forced foreground
   o always foreground
self->_foregroundState == BRCContainerForegroundStateForcedForeground
unknown bundle ID
Handoff request
there should be no timer created
contextIdentifier
T@"NSString",R,N,V_contextIdentifier
defaults
T@"BRCUserDefaults",R,N
isShared
TB,R,N,V_isShared
T@"CKContainer",R,N
ckContainerID
T@"CKContainerID",R,N
uploadStream
T@"BRCTransferStream",R,N,V_uploadStream
downloadStream
T@"BRCTransferStream",R,N,V_downloadStream
readerThrottle
T@"BRCThrottleBase",R,N,V_readerThrottle
applyThrottle
T@"BRCThrottleBase",R,N,V_applyThrottle
uploadThrottle
T@"BRCThrottleBase",R,N,V_uploadThrottle
downloadThrottle
T@"BRCThrottleBase",R,N,V_downloadThrottle
zone.isCloudDocsZone
fetch-quota
itemID %@ has no share name
_st.type == BRC_ITEM_TYPE_DIRECTORY || _st.type == BRC_ITEM_TYPE_FS_ROOT
SELECT 1 FROM client_items WHERE item_parent_id = %@ AND item_state = 1 AND zone_rowid = %@ LIMIT 1
SELECT 1 FROM client_items WHERE item_parent_id = %@    AND item_state IN (0, -1)   AND zone_rowid = %@ LIMIT 1
SELECT 1 FROM client_items WHERE item_parent_id = %@    AND item_state IN (-1, -3)   AND zone_rowid = %@ LIMIT 1
SELECT 1 FROM mark_children_lost_progress WHERE zone_rowid = %@ AND item_parent_id = %@ LIMIT 1
self.isLost
UPDATE client_items   SET item_parent_id = %@ WHERE item_parent_id = %@   AND zone_rowid = %@
DELETE FROM client_items WHERE item_parent_id = %@   AND zone_rowid = %@   AND item_state = -2
SELECT si.rowid FROM server_items AS si INNER JOIN client_unapplied_table AS ap ON si.item_rank = ap.throttle_id WHERE si.item_parent_id = %@   AND si.zone_rowid = %@   AND si.item_type = 3   AND ap.throttle_state = 24
UPDATE client_items SET item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_localsyncupstate = %d, item_in_flight_diffs = %@, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_doc_id = %@, item_file_id = %@, item_generation = %@, item_localname = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_scope = %d  WHERE rowid = %llu
DELETE FROM client_items WHERE item_parent_id = %@ AND zone_rowid = %@ AND item_state = -2
UPDATE client_items SET item_parent_id = call_block(%@, item_state, zone_rowid),     item_localname = call_block(%@) WHERE item_parent_id = %@   AND zone_rowid = %@
sqlite3_value_int(argv[0]) == BRC_ITEM_STATE_TOMBSTONE
zone
appLibrary.fileID
a task tracker is required to download a directory
log.level
account.debug.zombie.enable
nsurlsessiond
account.fake-migration
fsevents.latency
fsevents.reset-backoff
fsreader.container.throttle
fsreader.lost.throttle
fsreader.lost.backoff
fsreader.scan.batch-size
fsreader.coordination.count
fsreader.coordination.delay
fsreader.coordination.throttle
fswriter.apply.throttle
fswriter.apply.batch-size
fswriter.coordination.count
fswriter.coordination.delay
operation.failure.throttle
container.reset.throttle
shared-container.reset.throttle
container.reset.alias-removal.throttle
sync.container.throttle
sync.container.error.throttle
transfer.download.throttle
transfer.upload.throttle
stage.gc.xpc
cachedelete-push.xpc
system.reachability
system.power
system.lowdisk
transfer.batch-size.min
transfer.width.max
transfer.width.min
transfer.budget
start-after
give-up-after
wait-at-least
wait-at-most
forget-after
max-elemnt-count
platforms
sync-throttles
success-ratio
quota-clear-ratio
error-ratio
kickback-delay
kickback-ratio
interval
grace
repeat
priority
battery
screen.sleep
container.greedy
url.publish-timeout
server-config-url
defaults.clouddocs.
minWait
Td,N,VminWait
maxWait
Td,N,VmaxWait
ratioOnSuccess
Td,N,VratioOnSuccess
ratioOnQuotaErrorClear
Td,N,VratioOnQuotaErrorClear
ratioOnFailure
Td,N,VratioOnFailure
inactivityKickbackDelay
Td,N,VinactivityKickbackDelay
inactivityKickbackRatio
Td,N,VinactivityKickbackRatio
!_userDefaultsCache[kBRCGlobalUserDefaultsKey]
com.apple.bird.defaults-manager
com.apple.bird.defaults-manager-callback
v16@?0@"NSNotification"8
![clientZoneIdentifier isEqualToString:kBRCGlobalUserDefaultsKey]
clientZoneIdentifier && _userDefaultsCache[kBRCGlobalUserDefaultsKey]
 (URL %@)
 (original URL: %@, current URL %@)
fetch-configuration
SELECT config_plist FROM server_state WHERE config_plist IS NOT NULL
UPDATE server_state SET config_plist = %@
container-metadata
no version for key: %@
q24@?0@"NSString"8@"NSString"16
perVersionDict
min < max
min <= def
def <= max
@16@?0@8
fs.xattr-max-size
sync.down.fetch-all-changes
sync.down.batchsize
sync.up.batchsize
sync.up.batchsize.decrease.factor
sync.up.batchsize.increase
sync.appcontainers.batchsize
sync.down.sharequerysize
fs.maxdepth
sync.maxdepth
container.local.treeEnumerator
fs.pkg.extensions
_ulstyle
_ultheme
appex
bentotemplate
card
cpimage
cplink
cptext
cpweb
dayone
dsym
emberbackup
embermdbackup
embersnap
epub
fcarch
goodnotes
iwork-tmp
logarchive
lrdata
lslibrary
mindnode
mindproj
mproject
neunote
playgroundbook
pzdoc
qvlibrary
qvnote
qvnotebook
scene
scriv
soundhoundbookmark
soundhoundhistory
storyboardc
studydeck
ulproject
ulysses
whink
xcodeproj
xcworkspace
fs.pkg.blacklist.extensions
folder
fs.shareable.extensions
fs.bundle-bit.should-fixup.ios
fs.bundle-bit.fixup.backlist.ios
fs.non-auto-evictable.extensions.ios
fs.non-evictable.extensions.ios
fs.non-evictable.path-components.ios
fs.non-auto-evictable.utis.ios
fs.auto-evictable.utis.ios
doc.thumbnail-blacklist.extensions
emlx
ichat
stage.umask.file
stage.umask.directory
stage.umask.package.directory
stage.umask.package.file
configuration.automatic.xpc
sync.automatic.xpc
quota.available.comfort-size
sync.quota.fetch-delay
apps-fetch-delay
sync.down.throttle
sync.up.throttle
sync.up.budget.minimal
sync.up.budget.daily.default
sync.up.budget.daily
sync.up.budget.hourly.default
sync.up.budget.hourly
sync.up.budget.minutely.default
sync.up.budget.minutely
sync.up.cost.initial-item
sync.up.cost.structure.create
sync.up.cost.structure.edit
sync.up.cost.structure.delete
sync.up.cost.data.create
sync.up.cost.data.edit
sync.up.cost.data.delete
sync.up.cost.document.create
sync.up.cost.document.edit
sync.up.cost.document.delete
sync.down.shared.coalesce.nanoseconds
db.trace
db.profile
db.batch-size
db.batch-delay
db.allow-read-only-in-ipc
db.autovacuum-batch-size
db.autovacuum-ratio
server.throttling.disable
max-file-count
max-file-count.per-folder
upload.max-file-size
upload.max-in-pkg-file-size
upload.batch.records.count
upload.batch.count
download.batch.records.count
download.batch.count
download.will-retry-progress.max-count
zone-health.sync-down.batch.count
shared-db.sync-down.batch.count
fsreader.scan.package-delay
https://configuration.apple.com/configurations/internetservices/cloudkit/clouddocs/clouddocs-1.0.plist
min-file-size-graveyard
min-evictable-size.auto.ios
logout-timeout
foreground-grace-period
force-foreground-grace-period
force-batch-failure-when-token-expires
disk-space-reclaimer.max-access-time.low-urgency
disk-space-reclaimer.max-access-time.med-urgency
disk-space-reclaimer.max-access-time.high-urgency
disk-space-reclaimer.max-access-time.very-high-urgency
disk-space-reclaimer.eviction.default-access-time
disk-space-reclaimer.max-ondisk-access-time.low-urgency
disk-space-reclaimer.max-ondisk-access-time.med-urgency
disk-space-reclaimer.max-ondisk-access-time.high-urgency
disk-space-reclaimer.max-ondisk-access-time.very-high-urgency
disk-space-reclaimer.eviction.default-ondisk-access-time
disk-space-reclaimer.max-graveyard-time.low-urgency
disk-space-reclaimer.max-graveyard-time.med-urgency
disk-reclaimer.purge-pacer-interval
disk-reclaimer.db-reclaimable-space-threshold
disk-reclaimer.cache-delete-recompute-interval
maximum-document-age-to-be-greedy
statement-cache-max-count-server-truth
statement-cache-max-count-client-truth
copy-share-ids-batch-size
alias-deletion-batch-size
disk-space.minimum-required-to-download.ios
disk-space.minimum-required-to-download-user-initiated
disk-space.minimum-required-to-be-greedy.ios
disk-space.required-to-return-to-greedy-state.ios
disk-space.required-to-return-to-greedy-state.relative.ios
account-size.maximum-to-be-always-greedy
disk-space.minimum-required-to-be-functional
disk-space.check-interval
disk-space.active-download-refresh-interval
user-notification.upload
spotlight-indexer.enabled
spotlight-indexer.pacer-interval
spotlight-indexer.batch-size
spotlight-indexer.max-depth
shortcut-service.pacer-interval
shortcut-service.max-recent-document-count
migration.failure-throttle-params
global-progress.additional.wait-trigger
global-progress.additional.size-trigger
document-access.high-priority-download-interval
pkg-extension-plist.write-interval
doc.min-size-for-thumbnail
doc.thumbnail-transfer-queue-width.ios
notif.overflow-limit
notif.gather-up-to
notif.batch-size
periodic-sync-time-interval
zone-health.reported-record-names-count
sync.only-treat-caught-up-as-consistent
zone-pcs-migration.blacklist-pcs-prep
_defaultZone
zone-pcs-migration.should-prepare
pcs-chaining.max-path-depth
pcs-chaining.batch-size
sharing.destroy-iwork-shares
fsreader.lost.marklost.batchSize
fsreader.lost.deep-first-threshold
excluded-filenames-worth-warning-at-logout
excluded-filenames-worth-preservering
excluded-extensions-worth-preservering
ignored-quarantine-mask
should-auto-migrate
com.apple.icloud.applecorporate
should-fixup-czm-aliases
maxXattrBlobSize
shouldFetchAllChanges
maxRecordCountInFetchRecordsOperation
maxRecordCountInModifyRecordsOperation
modifyRecordsCountMultiplicativeDecrease
modifyRecordsCountAdditiveIncreaseFraction
maxRecordCountInClientZoneModifyRecordsOperation
maxRecordCountInQuerySharedRecordsOperation
maxRelativePathDepth
maxSyncPathDepth
treeEnumeratorBatchSize
packageExtensions
blacklistedPackageExtensions
shareableExtensions
nonEvictableExtensions
nonAutoEvictableExtensions
nonAutoEvictableUTIs
nonEvictablePathComponents
autoEvictableUTIs
stageFileUmask
stageDirectoryUmask
stageInPackageDirectoryUmask
stageInPackageFileUmask
configurationUpdateXPCActivity
T@"NSObject<OS_xpc_object>",R,N
forcedSyncXPCActivity
appLibraryScanThrottleParams
lostItemThrottleParams
applyThrottleParams
downloadThrottleParams
uploadThrottleParams
quotaFetchPacerDelay
Td,R,N
appsFetchPacerDelay
availableQuotaComfortSize
T@"BRCSyncOperationThrottleParams",R,N
syncClientZoneThrottleParams
syncClientZoneErrorThrottleParams
syncUpMinimalBudget
syncUpDailyBudget
syncUpHourlyBudget
syncUpMinutelyBudget
syncUpInitialItemCost
syncUpStructureCreateCost
syncUpStructureEditCost
syncUpStructureDeleteCost
syncUpDataCreateCost
syncUpDataEditCost
syncUpDataDeleteCost
syncUpDocumentCreateCost
syncUpDocumentEditCost
syncUpDocumentDeleteCost
sharedDbSyncDownCoalesceNanoseconds
operationFailureThrottleParams
appLibraryResetThrottleParams
sharedAppLibraryResetThrottleParams
appLibraryAliasRemovalThrottleParams
dbTraced
dbProfiled
dbBatchSize
dbBatchDelay
allowReadOnlyDBInIPC
dbAutovacuumBatchSize
dbAutovacuumRatio
skipServerSideThrottling
shouldAppLibraryBeGreedy
maxTotalFilesCount
maxNumberOfFilesInAFolder
uploadMaxFileSize
uploadMaxInPkgFileSize
uploadBatchRecordsCount
uploadBatchCount
downloadBatchRecordsCount
downloadBatchCount
downloadWillRetryProgressMaxCount
zoneHealthSyncDownBatchRecordsCount
sharedDBSyncDownBatchRecordsCount
systemReachabilityLatency
systemPowerLatency
systemLowDiskLatency
writerIOsCancelDelay
readerIOsCancelDelay
readerMaxConcurrentIOs
writerMaxConcurrentIOs
readerThrottleParams
writerApplyBatchSize
readerScanBatchSize
readerPackageProcessingDelay
readerLostItemBackoff
fseventsLatency
fseventsResetBackoff
transferQueueMinBatchSize
transferQueueMinConcurrentOperations
transferQueueMaxConcurrentOperations
transferQueueTransferBudget
sessionZombiesEnabled
nsurlsessiondEnabled
stageGCXPCActivity
cacheDeletePushXPCActivity
serverConfigurationURL
publishURLTimeout
minFileSizeForGraveyard
minAutomaticallyEvictableFilesize
logoutTimeout
foregroundGracePeriod
forceForegroundGracePeriod
forceBatchFailureWhenReceivingAssetTokenExpiration
shouldFixupBundleBitOnPackages
extensionsSkippingBundleBitFixup
accessTimeDeltaInLowUrgency
accessTimeDeltaInMedUrgency
accessTimeDeltaInHighUrgency
accessTimeDeltaInVeryHighUrgency
defaultTimeDeltaForEviction
onDiskAccessTimeDeltaInLowUrgency
onDiskAccessTimeDeltaInMedUrgency
onDiskAccessTimeDeltaInHighUrgency
onDiskAccessTimeDeltaInVeryHighUrgency
defaultOnDiskAccessTimeDefaultForEviction
graveyardAgeDeltaInLowUrgency
graveyardAgeDeltaInMedUrgency
cacheDeleteRecomputeInterval
purgePacerInterval
dbReclaimableSpaceThreshold
maximumDocumentAgeToBeGreedy
statementCacheMaxCountForServerTruth
statementCacheMaxCountForClientTruth
copyShareIDsBatchSize
aliasDeletionBatchSize
minimumDiskSpaceRequiredToBeFunctional
minimumDiskSpaceRequiredToDownload
minimumDiskSpaceRequiredToDownloadUserInitiated
minimumDiskSpaceRequiredToBeGreedy
diskSpaceRequiredToReturnToGreedyState
relativeDiskSpaceRequiredToReturnToGreedyState
diskSpaceCheckInterval
activeDownloadSizeRefreshInterval
maximumAccountSizeToBeAlwaysGreedy
shouldDisplayUploadNotification
spotlightIndexingEnabled
spotlightIndexerPacerInterval
spotlightIndexerBatchSize
spotlightIndexerMaxHierarchyDepth
spotlightIndexerFailureThrottleParams
shortcutServicePacerInterval
maxRecentDocumentCount
migrationThrottleParams
intervalToWaitBeforeShowingAdditionalDescription
minimalSizeToShowAdditionalDescription
documentAccessHighPriorityInterval
packageExtensionPlistWriteInterval
minFileSizeForThumbnailTransfer
thumbnailTransferQueueWidth
blacklistedThumbnailExtensions
notifOverflowLimit
notifGatherUpTo
notifBatchSize
periodicSyncTimeInterval
zoneHealthReportedRecordNamesCount
onlyTreatCaughtUpAsConsistent
blacklistPCSPrep
shouldPreparePCSMigration
pcsChainingMaxPathDepth
pcsChainingBatchSize
destroyiWorkShares
readerMarkChildrenLostBatchSize
lostScanDeepScanFirstThreshold
excludedFilenamesWorthWarningAtLogout
excludedFilenamesWorthPreserving
excludedExtensionsWorthPreserving
ignoredQuarantineMask
shouldAutoMigrateToCloudDocs
shouldFixupTargetCZMAliases
defaultValues[key] != nil
_item
there should be a logical path for %@
asked the parent of a root item
failed resolving child; error %d (%s)
com.apple.clouddocs.enclosure-docid
path.type == BRCRelativePathTypeSharedTopLevelItem
  localItem:         %@
  serverItem:        %@
  parentFileID:      %@
  parentPath:        %@
  matchByPath:       %@
  matchByFileID:     %@
  matchByDocumentID: %@
  container:         %@
byFileSystemID
fileSystemIDMayStillExist
coordinatedWriteURL
coordinatedReadURL
coordinatedURLAppLibrary
databaseBasePath
uuid
com.apple.bird.cellular-settings
coretelephony-connection
sharing/iWork-publishing
item.st.iWorkShareable
No sharing info and no error
unreachable: No sharing info and no error
self->_forPublish
!self->_forPublish
sync-down/
 losers:%@
got a nil record
got a nil recordID
record.etag != nil
![zoneName isEqualToString:BRUbiquitousDefaultContainerID]
![deletedRecordIDs containsObject:recordID]
subResourcesFetchOp.recordsByID[recordID] == nil
broken structure in op %@ (records: %ld edited, %ld deleted)  change token %@
unreachable: broken structure in op %@ (records: %ld edited, %ld deleted)  change token %@
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
subResourcesFetchOp.recordsByID.count == 0
Ti,N,V_version
UNKNOWN_USER_GIVEN_NAME
nameComponents
T@"NSPersonNameComponents",&,N
TERM
ansi
color
LESS
LESS=FRSX
LESSCHARSET
LESSCHARSET=utf-8
less
execvp
%zd;
isatty
TB,R,N,V_isatty
supportsEscapeSequences
TB,R,N,V_supportsEscapeSequences
useColor
TB,R,N,V_useColor
[%d%c
com.apple.TextInput
com.apple.kbd
com.apple.shoebox
com.apple.passd
v16@?0@"LSBundleProxy"8
com.apple.bird.apps-monitor
com.apple.bird.apps-monitor.fetch-apps
com.apple.bird.apps-monitor.callback
apps-refetch-pacer
apps monitor
app library IDs by App ID
=======================
app IDs by app library IDs
<undef>
T@"NSData",R,N,V_signature
generationIDString
.icloud
giving up bouncing %@
unknown namespace
never move a reserved item aside
dir.isDirectory
dirpath.exists
!dirpath.isDocument
the dirpath is already open, so -openDirectoryForScan should work
-[BRCURLToItemLookup(BRCFSWriter) _removeDirectory:atPath:error:]
Stage tampering
Stage tampering - generationID %u != %u
li.isDocument && !li.isReserved
we shouldn't have asked coordination in the first place
reset needed for %@ because REJECTED directory %@ has content
rejected-dir-has-content
(desiredVersion.wantsContent || desiredVersion.wantsThumbnail) && !desiredVersion.isFault
parentItem
updated
existing
li || si
client zone %@ forgot to sync up!
 parent = %@
Failed to resolve the enclosure path - %s
reset needed for %@ because directory %@ has a package name
dir-has-pkg-name
revived
There server shouldn't rename a fs-root
fs-root renamed
dir-renamed-to-pkg-name
crash recovery
eviction
making live
!li.isDead
v28@?0@"NSURL"8@"NSURL"16B24
, renaming
, deleting
 from 
 at 
   to 
srcLookup
requestID <= currentRequestID || currentRequestID == 0
db && db.serialQueue
com.apple.brc.fs.writer
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
disk
faulted
sharing/copy-web-auth-token
T@"NSString",&,N,V_ckContainerID
SELECT item_id FROM client_items   WHERE rowid = %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_doc_id = %u   AND +item_state IN (0, -1)   AND +item_type IN (1, 2, 8, 6, 7)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE rowid = %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items  WHERE item_file_id = %lld    AND +item_state != -2
record-fetcher
!_isDoneFetchingRecords
_recordsWithXattrsToFetch.count == 0
_recordsWithXattrsToFetch.count
Unable to save xattrs in the database: %@
recordsByID
T@"NSDictionary",R,N,V_recordsByID
com.apple.bird.fileprovider.
file-provider
file presenters for %@
  + %@ -> %@
%@::%@
Invalid components count. It should either be an absolute path or prefixed with file provider id
presentersIDs == nil
presentersIDs.count == 1
[presentersIDs containsObject:filePresenterID]
_providedItemsURL
T@"NSURL",R,C
_providedItemsOperationQueue
T@"NSOperationQueue",R
_fileReactorID
%@[%d]
com.apple.bird.cache-delete
com.apple.bird.purge-pacer
purgeableSpaceDate
purgeableSpace
vacuum
vacuumResult == NO
com.apple.bird.eviction
B16@?0@"BRCDocumentItem"8
INSERT INTO client_document_access (item_rowid, evictable, modify_access_time, indexable) VALUES (%llu, %lld, %lld, %d)
DELETE FROM client_document_access WHERE item_rowid = %llu
UPDATE client_document_access SET evictable = MAX(access_time, %lld) WHERE item_rowid = %llu
UPDATE client_document_access SET evictable = 0 WHERE item_rowid = %llu
UPDATE client_document_access SET access_time = %lld, evictable = %lld, modify_access_time = %llu WHERE item_rowid = %llu
UPDATE OR IGNORE client_downloads SET download_priority = %ld, download_request_stamp = %lld WHERE throttle_id = %lld AND zone_rowid = %@
UPDATE client_document_access SET access_time = %lld, evictable = %lld, modify_access_time = %lld WHERE item_rowid = %llu
UPDATE client_document_access SET modify_access_time = MAX(access_time, %lld)  WHERE item_rowid = %llu
UPDATE client_document_access SET indexable = %d WHERE item_rowid = %llu
SELECT access_time > %lld FROM client_document_access WHERE item_rowid = %llu
SELECT access_time FROM client_document_access WHERE item_rowid = %llu
Couldn't fetch from the db
B20@?0@"PQLResultSet"8B16
   SELECT dt.throttle_id, dt.zone_rowid      FROM client_downloads AS dt     WHERE dt.download_kind = %d       AND dt.throttle_state = 43
   SELECT da.item_rowid, ci.zone_rowid      FROM client_document_access AS da, client_items as ci     WHERE da.item_rowid = ci.rowid        AND evictable > 0 AND evictable < %lld       AND NOT EXISTS(SELECT 1 FROM client_downloads AS dt                       WHERE dt.throttle_id = da.item_rowid                         AND dt.download_kind = %d                         AND dt.throttle_state = 43)  ORDER BY evictable ASC
SELECT access_time, evictable FROM client_document_access WHERE item_rowid = %llu
 access:%@ ago
evictable:%s%@
timed out waiting for eviction
-[BRCDiskSpaceReclaimer performOptimizeStorageWithTimeDelta:onDiskAccessTimeDelta:error:]
[serverZone isKindOfClass:[BRCSharedServerZone class]]
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_type = 8 AND zone_rowid = %@
there is already a share acceptation running for that itemID; %@
item.isShareAcceptationFault
mangledZoneID
sharedZone
T@"BRCSharedServerZone",R,N
streamUUID
event
streamUUID:%@ event:%llu root:%llu
T@"NSUUID",&,N,V_streamUUID
latestEventID
TQ,N,V_latestEventID
rootID
TQ,N,V_rootID
MustScanSubDirs
UserDropped
KernelDropped
EventIdsWrapped
HistoryDone
RootChanged
Mount
Unmount
ItemCreated
ItemRemoved
ItemInodeMetaMod
ItemRenamed
ItemModified
ItemFinderInfoMod
ItemChangeOwner
ItemXattrMod
ItemIsFile
ItemIsDir
ItemIsSymlink
ItemIsHardlink
ItemIsLastHardlink
OwnEvent
-[BRCFSEventsMonitor setUpRoot:resetStreamIfNeeded:volume:error:]
the root %s was deleted by an external process
-[BRCFSEventsMonitor setUpRoot:resetStreamIfNeeded:volume:error:]_block_invoke_2
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-486.21/daemon/fs/BRCFSEventsMonitor.m
-[BRCFSEventsMonitor setUpStreamSynchronously:error:]
rendez-vous.%@.nosync
 (initial scan)
com.apple.brc.fs.events
<%@: %p root:%@ suspendCount:%d>
T@"<BRCFSEventsDelegate>",W,V_delegate
T@"PQLConnection",&,N,SsetDB:,V_db
T@"BRCRelativePath",R,N,V_root
volumeIsCaseSensitive
fsevents
client-state
<%@ %p, %@>
com.apple.brc.system-resources
com.apple.system.powermanagement.SystemLoadAdvisory
good
v32@?0@"NSNumber"8@"NSHashTable"16^B24
deviceID != 0
_memoryNotificationEventSource == NULL
v16@?0@"NSDictionary"8
com.apple.distnoted.matching
isNetworkReachable
reachabilityFlags
isPowerOK
great
yyyy-MM-dd/HH:mm:ss
last-sync:%@
last-sync:never
, requestID:%llu
, inconsistent
, consistent
, caught-up
, status:%d(?)
, pending-token:%@
, token:%@
lsdDate
lsdStatus
pendingToken
nextRank
T@"NSDate",&,V_lastSyncDownDate
lastSyncDownStatus
Tq,N,V_lastSyncDownStatus
T@"CKServerChangeToken",&,N,V_changeToken
T@"CKServerChangeToken",&,N,V_pendingChangeToken
TQ,N,V_clientRequestID
nextSyncRequestChangeToken
T@"CKServerChangeToken",R,N
hasNeverSyncedDown
last-sync:%@ nextRank:%lld shared-db{%@}
shareDatabase
migrationQuery
unable to update the server_state
-[BRCServerPersistedState saveToDB:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-486.21/daemon/BRCServerPersistedState.m
unknown migration completed for container %s
%s%@:%@
T@"NSDate",&,N,V_lastSyncDownDate
Tq,N,V_nextRank
sharedDatabaseChangeState
T@"BRCServerChangeState",&,V_sharedDatabaseChangeState
item %@ was edited in stage (generationID = %lu)
self.hasPid
_hasAuditToken
Client
[%d]
applicationIdentifier
T@"NSString",R,N,V_applicationIdentifier
isNonAppSandboxed
TB,R,N,V_isNonAppSandboxed
isAllowedToAccessAnyCloudService
TB,R,N,V_isAllowedToAccessAnyCloudService
isProxyEntitled
TB,R,N,V_isProxyEntitled
TB,R,N,V_isSharingProxyEntitled
TB,R,N,V_isSharingPrivateInterfaceEntitled
TB,R,N,V_isAutomationEntitled
T@"NSSet",R,N,V_appLibraryIDs
T@"NSString",R,N,V_defaultAppLibraryID
hasAuditToken
TB,R,N,V_hasAuditToken
auditToken
T{?=[8I]},R,N,V_auditToken
sharing/copy-share
recordIDNeedingFetch
T@"CKRecordID",&,N,V_recordIDNeedingFetch
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items  WHERE item_localsyncupstate = 4    AND item_in_flight_diffs IS NULL    AND item_state = 0    AND item_type IN (1, 2, 8, 5, 6, 7, 3)    AND zone_rowid = %@    AND item_min_supported_os_rowid IS NULL
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items  WHERE item_localsyncupstate = 4    AND item_in_flight_diffs IS NULL    AND (item_type = 0        OR item_type = 4        )    AND (item_stat_ckinfo IS NULL OR item_state != 1)    AND zone_rowid = %@    AND item_min_supported_os_rowid IS NULL
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid , item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items AS pi  WHERE item_localsyncupstate = 4    AND item_in_flight_diffs IS NULL    AND item_state = 1    AND NOT EXISTS(SELECT 1 FROM client_items AS ci                     WHERE pi.item_id = ci.item_parent_id                      AND ci.zone_rowid = pi.zone_rowid                      AND ci.item_state != -2)    AND zone_rowid = %@    AND item_min_supported_os_rowid IS NULL
v16@?0@"BRCItemID"8
reset needed for %@ because of orphan %@
orphan.live
SELECT COUNT(*) FROM client_items  WHERE item_parent_id = %@     AND item_localsyncupstate = 4    AND NOT indexset_contains(%p, rowid)    AND zone_rowid = %@    AND item_state != -2
item.isDead
orphan.tombstone
batchSize
TI,R,N,V_batchSize
retryAfter
TQ,R,N,V_retryAfter
T@"BRCLocalItem",R,N,V_itemNeedingPCSChaining
sync-up/container-metadata
shouldPerformAnotherBatch
TB,R,N,V_shouldPerformAnotherBatch
aliasURL
T@"NSURL",R,N,V_aliasURL
shortcut-service-queue
shortcut-service.thumbnail
application-shortcut-service-pacer
SELECT item_rowid FROM client_document_access   WHERE indexable != 0   ORDER BY modify_access_time DESC
unknown main screen scale: %lu
descriptor
SEARCH_SHORTCUT_TITLE
SEARCH_SHORTCUT_SUBTITLE
main-screen-scale
eQd5mlz0BN0amTp/2ccMoA
+[BRCNonLocalVersionsSender senderWithLookup:client:XPCReceiver:error:]
non-local-versions for %@
CK sent us no results and no error
CK sent a bogus ETag: %s != %s
CK couldn't fetch the thumbnail and set no error
com.apple.clouddocs.version
v36@?0@"CKRecordID"8B16@"NSArray"20@"NSError"28
logicalURL
T@"NSURL",R,N,V_logicalURL
physicalURL
T@"NSURL",R,N,V_physicalURL
includeCachedVersions
TB,N,V_includeCachedVersions
-[BRCNonLocalVersionsSender(IPCs) listNonLocalVersionsWithReply:]
dflwx
MbP?
?333333
 A(knN
@(#)PROGRAM:CloudDocsDaemon  PROJECT:CloudDocs-486.21
(\c~@
[CRIT] UNREACHABLE: %@'s device ID is 0!
[NOTICE] on device: %@
[ERROR] %s: %s error: %@
[CRIT] Assertion failed: url
[CRIT] Assertion failed: session
[ERROR] can't extract logical name from fault name; %@
[DEBUG] can't extract filename from %@
[ERROR] can't extract filename from %@
[CRIT] Assertion failed: !_parentRelpath.exists || _parentRelpath.isUnixDir
[CRIT] Assertion failed: _parentRelpath.appLibrary
[CRIT] API MISUSE: lookups should not be used on parent paths of type: %s
[DEBUG] can't create the relpath to a non-existing fault
[DEBUG] can't resolve %@: ; error %d (%s)
[CRIT] UNREACHABLE: can't resolve byPath on shared app library outsize of enclosure
[CRIT] Assertion failed: _allowAppLibraryRoot
[CRIT] UNREACHABLE: Can't resolve path match of shared item outside of enclosure
[DEBUG] can't fetch the faulted path match with a non-existing fault
[CRIT] UNREACHABLE: unexpected error when resolving a path; error %d (%s)
[CRIT] Assertion failed: __relpath.type == BRCRelativePathTypeSharedEnclosure
[DEBUG] can't fetch the reserved path-match with a non-existing fault
[ERROR] Sqlite request %@ failed on %@ with error [%@]
[ERROR] Sqlite failed on %@ with error [%@]
[CRIT] UNREACHABLE: Got really unexpected error: %@
[ERROR] %@
[WARNING] %@
[WARNING] Possible slow statement on %@:
  binds:    %d
  changes:  %lld
  vm steps: %d (max: %lu)
  sql:      %s
  %@
[WARNING] Possible slow statement on %@:
  binds:    %d
  columns:  %d
  rows:     %ld
  vm steps: %d (max: %lu)
  sql:      %s
  %@
[CRIT] UNREACHABLE: Significantly too slow SQL statement ( vm steps: %u  max:%lu ): %s
[CRIT] UNREACHABLE: setting profiling hook is not supported on %s
[CRIT] API MISUSE: you need to provide a radar
[CRIT] Assertion failed: block
[CRIT] Assertion failed: _batchingPacer
[ERROR] error closing connection %@: %@
[DEBUG] 
%llx creating operation %@
BRCOperation/? (subclass activity missing)
[DEBUG] 
%llx dealloc
[CRIT] Assertion failed: !_executionTransaction
[CRIT] Assertion failed: self.finished
[DEBUG] throttle backoff: %03fs for hash:0x016%llx
[DEBUG] server provided backoff: %.03fs
[CRIT] %@ has been blacklisted and won't be attempted again
[DEBUG] attempting execution again in %.03fs
[DEBUG] 
%llx retrying %@
[CRIT] Assertion failed: self->_syncContext
[DEBUG] scheduling %@
[DEBUG] 
%llx starting %@
[DEBUG] 
%llx cancelling %@
[DEBUG] 
%llx finishing %@
[DEBUG] 
%llx %@%@ %@%@%@
[WARNING] We are blacklisted! Not notifying about finishing %@
[DEBUG] (%@) Queuing %@
[CRIT] Assertion failed: context
[CRIT] Assertion failed: _syncContext
[CRIT] Assertion failed: _remoteClientProxy || _ignoreMissingRemoteClientProxy
[INFO] 
%llx 
[DEBUG] 
%llx 
[DEBUG] 
%llx dispatching to %s
[DEBUG] 
%llx continuing on %s
sync/sharedb
[DEBUG] inserted new ownerKey %@ for %@
[DEBUG] 
%llx Handling result of creating %@ (operationID=%@): %@
[DEBUG] %@ zone %@ changed
[ERROR] %@ failed: %@
[DEBUG] 
%llx %@ done: %u zones were changed and %u deleted
[DEBUG] scheduling sync for %@
[CRIT] UNREACHABLE: there should be a container
[DEBUG] updating shared-database from %@ with token:%@ caught-up:%s
[DEBUG] 
%llx Sync: fetching changed zones in the shared-database
[CRIT] Assertion failed: !item.isBRAlias
[CRIT] Assertion failed: !item.isReserved
[CRIT] UNREACHABLE: got a document without a document fileObjectID:%@ %@
[CRIT] Assertion failed: [_fileObjectID folderID]
[CRIT] Assertion failed: finderTags.tagsCount > 0
[CRIT] UNREACHABLE: huh? shared container but no share on item %@ in zone %@ (%lu)
[CRIT] Assertion failed: ownerIdentity
[CRIT] Assertion failed: !item.isZoneRoot
[DEBUG] %@: can't resolve the alias on disk for %@, marking it dead
[DEBUG] 
%llx generating sandbox extensions for %@
[DEBUG] issued sandbox extension for %@
[DEBUG] published progress for %@
[DEBUG] unpublished progress for %@
[WARNING] failed getting download progress for %@
[WARNING] failed getting upload progress for %@
[DEBUG] 
%llx User requested to cancel download for %@
[DEBUG] Added progress %@ for %@
[ERROR] can't resolve %@; error %d (%s)
[ERROR] can't get URL for %@
[DEBUG] can't get the filename of %@: %@
[ERROR] no metadata for %@
[DEBUG] %@ is disabled by TCC
[CRIT] UNREACHABLE: can't open interactive DB: %@
[WARNING] Corrupting handling is already in-flight
[CRIT] Assertion failed: argc >= 1
[CRIT] Assertion failed: !set || [set isKindOfClass:[NSIndexSet class]]
[CRIT] API MISUSE: is_parented_or_equal_to(Container, parent_id, parentId_or_Set)
[CRIT] UNREACHABLE: we have a cycle
[DEBUG] 
%llx recursive update of %lld
[DEBUG] database backup detector initialized {old:%llu; new:%llu; c:%llu}
[WARNING] backup detected: ino %llu instead of %llu at '%s'
[DEBUG] failed stating '%s'; error %d (%s)
[DEBUG] mismatch on new control file '%s': %llu != %llu
[DEBUG] database backup detector updated {old:%llu -> %llu; new:%llu -> %llu; c:%llu -> %llu}
[WARNING] can't remove %@: %@
[CRIT] Assertion failed: sct.dbRowID
[CRIT] UNREACHABLE: saving the container state should always work
[CRIT] Assertion failed: lcz.dbRowID
[CRIT] UNREACHABLE: saving the zone state should always work
[ERROR] Failed to create server zone %@:  %@
[CRIT] UNREACHABLE: sct.dbRowID is %@ lastInsertedRow is %lld
[ERROR] trying to create server zone that already exists
[CRIT] Assertion failed: rowID
[CRIT] UNREACHABLE: got a new rowid for already existing zone (sct.dbRowID=%@ rowID=%@)
[CRIT] UNREACHABLE: Failed to update plist for zone %@: %@
[CRIT] UNREACHABLE: couldn't allocate a rowid
[CRIT] Assertion failed: lib.zoneRowID
[CRIT] UNREACHABLE: saving the app library state should always work
[CRIT] Assertion failed: lib.dbRowID
[CRIT] Assertion failed: plist
[CRIT] Assertion failed: plist != nil
[CRIT] Assertion failed: zoneName
[DEBUG] this is the first time we hear of a device named '%@'
[CRIT] UNREACHABLE: can't insert device name: '%s'
[CRIT] Assertion failed: userFormattedName != nil
[DEBUG] learning name '%@' for user %@
[CRIT] Assertion failed: userIdentity
[CRIT] UNREACHABLE: can't insert user identity for name '%@': %@
[CRIT] UNREACHABLE: unable to update user identity
[CRIT] UNREACHABLE: participant %@ with no user identity
[DEBUG] user %@ has identity %@
[CRIT] UNREACHABLE: nameless identity: %@ (user %@)
[CRIT] UNREACHABLE: userName shouldn't be nil
[CRIT] UNREACHABLE: can't insert user name: '%@': %@
[DEBUG] this is the first time we hear of a user named '%@'
[DEBUG] clearing needs-upgrade errors
[NOTICE] CloudDocs was upgraded from [%@ on %@] to [%@ on %@]
[CRIT] Assertion failed: _databaseID
[DEBUG] loaded client-state %@
[CRIT] Assertion failed: sself
[DEBUG] 
%llx db pre-flush: flushing client-state %@
[DEBUG] Saved zone state for %@
[DEBUG] Saved app library state for %@
[DEBUG] 
%llx db post flush
[CRIT] disk is full, restarting: %@
[ERROR] unable to truncate database: %d; %s
[ERROR] can't unlink '%@'; error %d (%s)
[ERROR] can't reopen db after truncate: %@
[NOTICE] fixuping database from version %d to %d
[ERROR] can't fixup from version %d to %d: %@
[WARNING] your database comes from a compatible future (db at version %d, current is %d)
[DEBUG] no database migration required, version is current (db at version %d)
[NOTICE] migrating %s database from version %d to %d
[ERROR] can't migrate from version %d to %d: %@
[CRIT] Assertion failed: db_version == schema_upgrades[i].version
[CRIT] Assertion failed: db_version == DB_VERSION_CURRENT
[CRIT] Assertion failed: _serverDB.serialQueue
[CRIT] Assertion failed: _clientDB.serialQueue
[CRIT] Assertion failed: readOnlyDB.serialQueue
[DEBUG] 
%llx dumping database
[DEBUG] dumping container %@
[DEBUG] dumping client zone %@
[ERROR] failed unlinking '%s'; error %d (%s)
[ERROR] failed opening '%s'; error %d (%s)
[ERROR] failed stating '%s'; error %d (%s)
[ERROR] failed closing '%s'
[CRIT] Internal users only version %d.%03d has seen an ulterior change and needs to be reset
[CRIT] database is stale, can't be migrated (db at version %d, migration range [%d,%d])
[CRIT] database has a major version from the future: %d (want at most %d)
[CRIT] UNREACHABLE: migration should work: %@
[DEBUG] initiating reset for %@
[CRIT] Assertion failed: appLibraryOwner
[CRIT] Assertion failed: syncContextIdentifier
[DEBUG] Not need to remove %@ as it was not created yet
[WARNING] can't suppress %@: %@
[ERROR] invalid owner in rowid_reservations, resetting
[ERROR] found duplicate app library, resetting
[CRIT] UNREACHABLE: incomplete migration for client_uploads
[CRIT] UNREACHABLE: incomplete migration for client_downloads
[CRIT] Corrupt DB state: some items belong to non-existing zones!
[ERROR] parentID of unexpected length %d
[ERROR] itemID of unexpected length %d
[ERROR] type mismatch with parent %d or item %d
[DEBUG] performer already registered for %@
[CRIT] UNREACHABLE: implemented by subclass
[DEBUG] 
%llx performing migration for %@
[DEBUG] migration completed
[DEBUG] 
%llx Setting migration state. response: %@, error: %@
[DEBUG] status: %@
[DEBUG] 
%llx getting account migration status for %@
[DEBUG] migration status: %d
[DEBUG] 
%llx Request for CloudKit migration status done. response: %@, error: %@
[DEBUG] migration state: %@
[DEBUG] received a managed restriction changed notification - %@
[DEBUG] jetsaming %@
[ERROR] can't delete account file; error %d (%s)
[ERROR] can't write account ID: %@
[DEBUG] 
%llx disabling pushes, be sure to listen to activities and the like
[WARNING] setting the migration prefs because account is migrated
[WARNING] setting the migration on the account because account is migrated - and waiting for ACAccountNotification plugin
[WARNING] migration is not accepted, not loading the account for %@
[DEBUG] 
%llx loaded system account ID: %@ (db ID: %@, disk ID: %@)
[DEBUG] 
%llx deleting account on disk
[DEBUG] 
%llx setting disk account %@
[CRIT] UNREACHABLE: disk account ID doesn't match system account ID
[DEBUG] 
%llx Loading current on-disk account: %@
[NOTICE] using account %@
[DEBUG] 
%llx jetsaming clients
[DEBUG] removing '%@'
[ERROR] can't remove account; error %d (%s)
[CRIT] timed out waiting for %u seconds for account session to close!
[DEBUG] 
%llx destroying current session
[ERROR] can't acquire coordinated disconnect: %@
[DEBUG] acquired coordinated disconnect at '%@'
[ERROR] Your database is from the future, disabling iCloud Drive (%@)
[ERROR] Failed to open account session: %@
[DEBUG] Local session state has beeen resetted, try opening the session for the second time
[DEBUG] 
%llx creating account session for %@
[CRIT] Assertion failed: _session == nil
[WARNING] we are already logged in %@
[CRIT] Assertion failed: [BRCAccountHandler dbAccountID] == nil || [[BRCAccountHandler dbAccountID] isEqualToString:accountID]
[DEBUG] 
%llx destroying account for %@
[NOTICE] stop using account %@
[CRIT] Assertion failed: [_currentAccountID isEqualToString:_session.accountID]
[DEBUG] 
%llx creating account for %@
[NOTICE] now using account %@
[ERROR] can't create account session: %@
[WARNING] Asking account status for %@
[WARNING] Triggering migration for %@
[DEBUG] primary account is: %@
[DEBUG] iCloud Drive is disabled for %@
[DEBUG] Account is not migrated to iCloud Drive %@
[ERROR] can't remove account belonging to account %@; error %d (%s)
[DEBUG] Account hasn't really changed, do nothing
[DEBUG] Cleaning up session on disk belonging to account %@
[DEBUG] Cleaning up previous session belonging to account %@, to make room for new account %@
[WARNING] we seem to have logged out while migrating account (%s)
[CRIT] UNREACHABLE: the main account (%s) doesn't match the one we have (%s)
[ERROR] can't set the migrated bit on %@: %@
[DEBUG] saved the migration bit
[DEBUG] account property is already set
[DEBUG] migration already completed
[NOTICE] setting migration complete on %@
[DEBUG] saved the bit
[CRIT] Assertion failed: folderType >= BRCSyncedFolderTypeMin && folderType <= BRCSyncedFolderTypeMax
[CRIT] Assertion failed: syncPolicy
[CRIT] Assertion failed: syncPolicy == BRCSyncedFolderPolicyEnabled || syncPolicy == BRCSyncedFolderPolicyDisabled
[CRIT] Assertion failed: _st.type == BRC_ITEM_TYPE_FINDER_BOOKMARK || _st.type == BRC_ITEM_TYPE_FINDER_BOOKMARK_FAULT
[CRIT] Assertion failed: _st.type == BRC_ITEM_TYPE_ALIAS
[DEBUG] 
%llx learning target %@ for %@
[DEBUG] 
%llx diffing item %@
against %@
[DEBUG] item isn't an alias anymore
[DEBUG] item matches disk
[DEBUG] 
%llx rewriting alias on disk: %@
[DEBUG] Grabbing the bookmark data fails with: %@
Marking the target lost: %@
[WARNING] can't write bookmark %@
[WARNING] can't resolve parent %@; error %d (%s)
[WARNING] can't resolve %@; error %d (%s)
[DEBUG] 
%llx Updating alias %@ in %@ with new target: %@
[DEBUG] Kept the path of the newest alias for oldest item, updating fileID and mark lost
[DEBUG] clash path doesn't seem to exist anymore, mark the item lost
[DEBUG] 
%llx Deleting alias %@ in %@ because target is dead
[DEBUG] 
%llx Deleting alias %@ in %@ because target moved to this app library
sharing.fetch-user-record-id
[CRIT] UNREACHABLE: no record and no error
[CRIT] UNREACHABLE: state is of unexpected class %@
[CRIT] UNREACHABLE: update time is of unexpected class %@
[DEBUG] We don't have a container for %@
[DEBUG] 
%llx starting a fetch-record-changes operation for health zone
[DEBUG] 
%llx got a changed record %@ in operation %@
[CRIT] Assertion failed: ![self->_deletedRecordIds containsObject:record.recordID]
[CRIT] Assertion failed: self->_recordsByID[record.recordID] == nil
[DEBUG] ignoring zone details record %@ in operation %@
[WARNING] ignoring record of unexpected type %@ in operation %@
[DEBUG] 
%llx recordID was deleted %@ in operation %@
[CRIT] Assertion failed: ![self->_deletedRecordIds containsObject:recordID]
[CRIT] Assertion failed: self->_recordsByID[recordID] == nil
[DEBUG] 
%llx finished sync down of zone-health %@ with requestID %llu changeToken %@
[DEBUG] No zone-health zone %@: %@
[ERROR] Failed syncing down zone-health op %@: %@
[DEBUG] 
%llx sync down of zone-healt-check was cancelled?
[CRIT] Assertion failed: type == BRC_ITEM_TYPE_ALIAS
[CRIT] Assertion failed: _type == BRC_ITEM_TYPE_ALIAS
[CRIT] UNREACHABLE: Stat shouldn't be nil
[CRIT] Assertion failed: ![self _hasLastEditorRowID]
[CRIT] Assertion failed: lastEditorDeviceRowID && lastEditorDeviceRowID.longLongValue > 0
[CRIT] Assertion failed: !_lastEditorDeviceOrUserRowID || ![self _hasLastEditorDeviceRowID]
[CRIT] Assertion failed: lastEditorRowIDLongLongValue > 0
[CRIT] Assertion failed: _contentSignature
[DEBUG] Not being greedy because current version size is 0
[DEBUG] Not being greedy because document is bigger %@ than minimum size (%@) to generate a thumbnail
[DEBUG] Being greedy because the document is small %@ and QL can generate a thumbnail for %@
[DEBUG] Not being greedy even though the document is small %@: QL can
t generate a thumbnail for %@
[ERROR] invalid signature in %@
[CRIT] Assertion failed: reply
[CRIT] Assertion failed: item.fileObjectID
[DEBUG] 
%llx collecting %lu additional folder updates
[DEBUG] 
%llx invalidating pipes watching %@
[DEBUG] 
%llx invalidating NSMDQs watching %@
[CRIT] Assertion failed: path.br_isAbsolutePath
[CRIT] Assertion failed: root.isResolved
[CRIT] Assertion failed: _session
[CRIT] Assertion failed: clientZone
[CRIT] Assertion failed: fileID != 0ULL
[CRIT] Assertion failed: self.exists
[CRIT] Assertion failed: self.isUnixDir
[CRIT] Assertion failed: self.isInPackage
[DEBUG] closing fd:%d
[CRIT] API MISUSE: -resolveAndKeepOpen must be balanced with -close
[CRIT] Assertion failed: _openRefCount == 0
[CRIT] Assertion failed: [self isResolved]
[CRIT] Assertion failed: self.isResolved
[CRIT] Assertion failed: _type != BRCRelativePathTypeUnknown
[CRIT] Assertion failed: !_basePath || _basePath.isResolved
[CRIT] Assertion failed: self.isRoot || _basePath.isResolved
[CRIT] Assertion failed: _absolutePath.br_isAbsolutePath
[CRIT] Assertion failed: !_relativePath.br_isAbsolutePath
[CRIT] Assertion failed: self.isFault
[CRIT] Assertion failed: _fd >= 0
[CRIT] Assertion failed: self.isSymLink
[CRIT] Assertion failed: self.isFile
[CRIT] Assertion failed: _fd < 0
[CRIT] Assertion failed: _basePath
[ERROR] no base path
[DEBUG] can't resolve base path %@; error %d (%s)
[DEBUG] can't open base path %@; error %d (%s)
[DEBUG] base path %@ is not a directory
[DEBUG] new base for '%@' - %@
[DEBUG] can't resolve package root %@; error %d (%s)
[DEBUG] can't open package root %@; error %d (%s)
[DEBUG] package root %@ is not a directory
[WARNING] Couldn't resolve zone for %@
[CRIT] Assertion failed: !_relativePath
[CRIT] Assertion failed: !_basePath
[DEBUG] can't open %@'; error %d (%s)
[CRIT] UNREACHABLE: a root should always be openable
[DEBUG] resolved-path:'%@' outside of requested roots:'%@'
[NOTICE] resolved-path:'%@' outside of base path:'%@'
[ERROR] fgetattrlist(%d) at '%@' failed; error %d (%s)
[DEBUG] Inappropriate file type %c%c%c%c%c%c%c%c%c%c for %@
[DEBUG] Busy file at '%@' fileID:%llu docID:%u gen:%u bt:%llu
[ERROR] failed to unlink legacy ubiquity %s fault at '%s'; error %d (%s)
[NOTICE] cleaned up legacy ubiquity %s fault at '%s'
[NOTICE] root-dev:%d != dev:%d %@
[DEBUG] Inappropriate location or an alias at '%s'
[DEBUG] Directory is marked as alias, ignoring '%s'
[WARNING] Can't read xattr at '%s'; error %d (%s)
[CRIT] Assertion failed: _basePath == nil || _basePath->_fd >= 0
[DEBUG] getattrlistat(%d, %s) failed with %s(%d)
[DEBUG] getattrlist(%s) failed with %s(%d)
[DEBUG] parent %@ is not a directory
[CRIT] Assertion failed: _basePath->_fd >= 0
[DEBUG] openat(%d, '%@') failed; error %d (%s)
[ERROR] openat(%d, '%@') failed; error %d (%s)
[DEBUG] open('%@') failed; error %d (%s)
[ERROR] open('%@') failed; error %d (%s)
[CRIT] Assertion failed: _fileID
[DEBUG] openbyid_np(%lld) failed: the file was unlinked
[DEBUG] openbyid_np(%lld) failed: the file still exists, but we don't have access to it
[ERROR] openbyid_np(%lld) failed; error %d (%s)
[CRIT] Assertion failed: errno > 0
[ERROR] fcntl(%lld, F_GETPATH) failed; error %d (%s)
[DEBUG] resolved '%@' to %@
[DEBUG] resolved-path:'%@' symlink doesn't resolve; error %d (%s)
[DEBUG] resolved-path:'%@' is excluded
[ERROR] failed allocating documentID for %@; error %d (%s)
[CRIT] Assertion failed: _documentID > 0
[ERROR] Exclude document for which we couldn't allocate a documentID for %@
[DEBUG] package without the bundle bit at %@
[WARNING] failed fixing up bundle bit at %@ - %s
[DEBUG] fixed up bundle bit at %@
[CRIT] Assertion failed: !self.isResolved || self.exists
[CRIT] Assertion failed: _parentFileID > 0
[ERROR] the root is closed!
  root: %@
  self: %@
[DEBUG] openat(%d, '%@') failed, base:%@; error %d (%s)
[DEBUG] empty parentPath for abs:%@ rel:%@ base:%@
[DEBUG] open('%@') succeeded, fd:%d
[CRIT] Assertion failed: _dir == NULL
[DEBUG] failed opening %@; error %d (%s)
[CRIT] Assertion failed: _dir != NULL
[ERROR] failed closing directory %@; error %d (%s)
[CRIT] Assertion failed: _descendantsEnumerator == nil
[DEBUG] failed opening %@
[CRIT] Assertion failed: _descendantsEnumerator != nil
[CRIT] Assertion failed: self.isBRAlias
[WARNING] Failed to resolve xattrs for %@: %@
[CRIT] Assertion failed: value >= 0
[CRIT] UNREACHABLE: mutex error: %s
[CRIT] Assertion failed: _getIndex(self, o) == nil
[CRIT] Assertion failed: _array[index] == o
[CRIT] Assertion failed: !_isOpen
account-waiter
[DEBUG] 
%llx handling account change
[DEBUG] 
%llx waiting for account status
[DEBUG] 
%llx got status %ld
[ERROR] Error when asking CloudKit about the account status: %@
[DEBUG] No account loaded yet, let's wait for the account notification from CloudKit
[DEBUG] Account is restricted let's wait for a notification from CloudKit
[CRIT] UNREACHABLE: unknown account status
[DEBUG] Account is now available
[CRIT] UNREACHABLE: BRCEvictItemOperation needs recursive properties!
[DEBUG] 
%llx no more items to evict under %@
[DEBUG] 
%llx %@: scheduling
[DEBUG] cancelled
[CRIT] Assertion failed: throttleID
[CRIT] Assertion failed: throttle
[DEBUG] %@[%lld]: backing off %.3fs (count: %d)
[DEBUG] %@[%lld]: Deleted throttle
[DEBUG] Apply Changes[%lld]: resetting backoff for throttle
[DEBUG] %@: Cleaned up %lld throttles
[DEBUG] %@: Cleaned up %lld expired throttles
[DEBUG] %@: moved %lld throttles from %@ to %@
[DEBUG] %@: nothing schedulable, going to sleep %s
[DEBUG] %@: going to sleep for %.3fs
[CRIT] UNREACHABLE: you have to override this
[DEBUG] %@: resuming!
[DEBUG] %@: suspending!
[CRIT] Assertion failed: self.isCancelled
[DEBUG] %@: initializing
[DEBUG] matching prefix: %@
[DEBUG] %@: gathering up to %lld
[DEBUG] 
%llx Looking for item with ranks [%lld-%lld] in %@ (count %ld kind %@)
[CRIT] Assertion failed: !item.isDead && !item.isReserved
[DEBUG] %@: queued gathered notification %@
[DEBUG] %@: gather phase ends
[ERROR] %@: EINTR: client gather phase was invalidated
[CRIT] Assertion failed: _receiver == nil
[DEBUG] stripped sharing info for %@
[DEBUG] 
%llx %@ got error %@
[DEBUG] Ancestor isn't resolved yet, discarding %@
[DEBUG] Learning path-match for %@ (was %@)
[DEBUG] Learning itemID for our ancestor: %@
[DEBUG] Learning new fileObjectID for %@: %@ (was %@)
[DEBUG] Update is in the trash, discarding %@
[DEBUG] Queueing INSIDE (in the scope) notification: %@
[DEBUG] Queueing INSIDE (fileObjectID match) notification: %@
[DEBUG] Queueing INSIDE (parentObjectID match) notification: %@
[DEBUG] Queueing OUTSIDE (oldParentFileObjectID match) notification: %@
[DEBUG] Update is "Documents", discarding: %@
[DEBUG] Update is a directory, discarding %@
[DEBUG] Update is a fault, discarding %@
[DEBUG] Queueing OUTSIDE (moved out library scope) notification: %@
[DEBUG] Queueing INSIDE (below a Documents/ folder) notification: %@
[DEBUG] Queueing INSIDE (not below a Documents/ folder) notification: %@
[DEBUG] Queueing INSIDE (below a .Trash/ folder) notification: %@
[CRIT] Assertion failed: _watchKind & WATCH_ITEM
[DEBUG] Queueing INSIDE (itemID match) notification: %@
[DEBUG] Queueing OUTSIDE (reparented) notification: %@
[DEBUG] Queueing OUTSIDE (dead item) notification: %@
[DEBUG] Didn't match anything, discarding: %@
[DEBUG] 
%llx %@: processing updates %@
[DEBUG] dropping all updates
[DEBUG] dropping %ld updates
[DEBUG] 
%llx %@: received progress acknowledgement
[DEBUG] %@: sending %ld notifications:
[DEBUG]   %@
[DEBUG] 
%llx %@: received notification acknowledgement
[DEBUG] %@: client is really backlogged, invalidating
[DEBUG] 
%llx %@: starting watching ubiquitous scope (docs:%d data:%d ext:%d dirs:%d faults:%d trash:%d) for %@
[ERROR] %@: EALREADY: watch already set up to kind %d
[WARNING] %@: client didn't specify Document or Data Scope
[ERROR] %@: unable to find container %@
[ERROR] %@: Unable to resolve scopes
[ERROR] %@: Invalid watched app library (%@) for lookup: %@
[DEBUG] %@: started watching children of %@ (fsid:%@ id:%@ filename:%@)
[WARNING] Path %@ is not an existing container: %@
[INFO] 
%llx %@ (%@) %s %@
[DEBUG] 
%llx watching '%@'
[WARNING] Failed watching %@ - %@
[INFO] %@: reply(%d)
[INFO] 
%llx %@ (%@) %s 
[DEBUG] %@: watching items prefixed by "%@"
[ERROR] %@: can't watch %@: %@
[ERROR] %@: can't watch app containers: %@
[DEBUG] 
%llx invalidating %@
[DEBUG] 
%llx updating dialog...
[DEBUG] 
%llx sending user reply
[ERROR] can't create user notification: %d
[CRIT] Assertion failed: self->_source == NULL
[WARNING] ignore user notification udate: no KVO observer registered
[ERROR] can't update user notification: %d
[DEBUG] User picked %s response
[ERROR] No completion block for notification %@
[CRIT] Assertion failed: _targetResolved
[CRIT] UNREACHABLE: not in a container
[CRIT] Assertion failed: path.isBRAlias
[ERROR] Not a bookmark at %@
[ERROR] Unable to get bookmark data on bookmark at %@: %@
[ERROR] Invalid signature for bookmark at %@
[CRIT] UNREACHABLE: somebody doesn't understand what bookmarks are for!
[CRIT] Assertion failed: props[NSURLDocumentIdentifierKey] && [docID isEqualToNumber:props[NSURLDocumentIdentifierKey]]
[ERROR] bookmark is lacking path or document-id: %@
[ERROR] the path isn't within iCloud: %@
[ERROR] the path isn't within a container: %@
[WARNING] no target container %@ for bookmark
[WARNING] no target itemID for %@ in container %@
[WARNING] no target docID for %@ in container %@
[ERROR] the bookmark doesn't resolve: %@
[CRIT] Assertion failed: _dataResolved
[DEBUG] wrote %@ at %@
[ERROR] Unable to unlink bookmark at %@; error %d (%s); error %d (%s)
[DEBUG] Unlinked bookmark at %@
[CRIT] UNREACHABLE: sync bubble setting is not supported
[ERROR] failed loading salt: %@
[CRIT] UNREACHABLE: can't load salt, bad bug ahead
[DEBUG] generating new salt
[ERROR] failed creating salt directory '%@': %@
[ERROR] failed writing salt data to '%@': %@
[ERROR] failed excluding salt data at '%@' from backups: %@
[WARNING] unable to stat volume %@
[DEBUG] device id mismatch %d vs %d
[NOTICE] starting bird
[DEBUG] 
%llx Starting up, welcome, bundle:%@, pid:%d, uid:%d, os:%@, version:%@, home:"%@", in sync bubble:%@
[DEBUG] using Cloud Database class: %@
[WARNING] iCloud Drive is not supported on this OS
[ERROR] iCloud Drive is unable to startup because it requires %@ worth of disk space to be functional
[DEBUG] resuming
[DEBUG] 
%llx sending token change notification
[CRIT] Assertion failed: qos_class_self() == QOS_CLASS_DEFAULT
[NOTICE] Language changed, exiting
[CRIT] Assertion failed: dirPath
[CRIT] Assertion failed: index < _fileProviders.count
[DEBUG] 
%llx handling account session changes from %@
[DEBUG] 
%llx handling account session changes to %@
[DEBUG] sending apps account change notification
[DEBUG] 
%llx received new XPC connection: %@
[WARNING] Denying xpc connection because the daemon is in the sync bubble
[DEBUG] welcome %@!
[DEBUG] 
%llx Client %@ connection was invalidated
[ERROR] error creating connection labeled '%@': %@
[DEBUG] sending server availability: %savailable (%@)
[DEBUG] sending server availability: %x (%@)
[NOTICE] starting exit sequence because of received signal (%s)
[NOTICE] exiting with code %d...
[DEBUG] Apply Changes[%lld]: %@ %s -> %s
[CRIT] Assertion failed: stamps.state != BRCThrottleStateInvalid
[DEBUG] Apply Changes: retrying %lld suspended throttles (missing parent found: %@)
[DEBUG] Apply Changes: retrying %lld suspended throttles (child %@ of %@ killed or reparented)
[DEBUG] Apply Changes: retrying %lld suspended throttles (appLibrary completed migration: %@)
[CRIT] Assertion failed: state >= BRCThrottleStateSuspendedBase
[DEBUG] Apply Changes: retrying suspended throttle %lld
[DEBUG] Apply Changes: retrying %lld suspended throttles
[WARNING] Target zone was moved to clouddocs.  Fixing up alias %@ pointing to %@
[ERROR] Failed resolving the bookmark target - %@
[ERROR] failed writing alias bookmark data - %@
[WARNING] Strange, the alias %@ is already local.  Allowing it anyway
[CRIT] Assertion failed: !shouldFixup || !serverZone.isSharedZone || ![serverZone.zoneName isEqualToString:BRUbiquitousDefaultContainerID]
[DEBUG] Apply Changes: repopulating throttles for zone:%@
apply-changes-batch
apply-changes
[CRIT] Assertion failed: appLibrary && zone
[INFO] 
%llx Apply Changes[%llu]: attempting to apply %s
  server item: %@
  local item:  %@
[CRIT] Assertion failed: si == nil
[DEBUG] 
%llx deleting throttle without local and server item
[DEBUG] 
%llx deleting rejected throttle with a non-rejected local item
[DEBUG] 
%llx deleting useless throttle %lld vs %lld
[DEBUG] Apply Changes[%lld]: Suspending throttle until the coordination callback
[DEBUG] Signalled faulting-barrier waiters for %@
[DEBUG] Apply Changes: reached maximum allowed number of coordinations (%ld)
[DEBUG] Apply Changes[%lld]: Rescheduling because coordination completed
[DEBUG] Apply Changes[%lld]: Skipping rescheduling because throttle was not suspended for coordination
[CRIT] UNREACHABLE: no writer for zone %@
[DEBUG] Apply Changes: below half maximum allowed number of coordinations (%ld)
[DEBUG] Apply Changes: Cleaned up %lld stale throttles
[DEBUG] 
%llx did sync down requestID:%llu, applying server truth on %@
[CRIT] UNREACHABLE: failed to insert into client_unapplied_commands
[DEBUG] Apply Changes [%lld .. %lld]: in %@, %llu ranks inserted
[DEBUG] Apply Changes [] in %@, 0 ranks inserted
[ERROR] Throttle %@ isn't a dictionary
[ERROR] Platforms %@ isn't an array
[DEBUG] throttle dict %@ isn't for our platform %@
[CRIT] UNREACHABLE: is not private app library
[CRIT] UNREACHABLE: is not shared app library
[DEBUG] container state now needs flush: %@
[CRIT] UNREACHABLE: Must be implemented in subclass
[CRIT] Assertion failed: dbRowID
[CRIT] Assertion failed: zoneRowID
[CRIT] API MISUSE: unexpected parameter
[DEBUG] closing app library: %@%@
[DEBUG] cancelling file coordination requests %@
[DEBUG] First ubiquity client using container, schedule each item for download (client: %@, container: %@).
[CRIT] Assertion failed: rootItem.isDirectory
[DEBUG] %@ forces %@ to be greedy
[DEBUG] %@ no longer forces %@ to be greedy
[DEBUG] Last ubiquity client exited, no longer greedy (container: %@)
[CRIT] Assertion failed: state == BRCAppLibraryStateNotActivated || !(state & BRCAppLibraryStateNotActivated)
[DEBUG] %@ state changed, was %@
[CRIT] Assertion failed: _session.fsReader
[CRIT] UNREACHABLE: asking for no scopes?
[CRIT] Assertion failed: docsOrDataScopeInjection || externalScopeInjection
[DEBUG] There's already a pending coordinated I/O for %@, not really scheduling it
[DEBUG] Releasing coordinated I/O slot for r:%@ for %@
[DEBUG] Allocated pending coordinated I/O for %@
[CRIT] Assertion failed: _db.isBatchSuspended
[DEBUG] marked lost %u children of %@ in %@,  continuation is %@needed
[CRIT] UNREACHABLE: bad sql statement
[WARNING] Not scheduling deep scan on an app library in a resetting zone
[DEBUG] Container needs deep-scan: %@
[DEBUG] 
%llx updating %@ from %@
[DEBUG] app library root file id changed from %@ to %@ for %@
[DEBUG] Done scanning container: %@, fileID:%@ generationID:%@
[CRIT] Assertion failed: oldAppLibrary.state & BRCAppLibraryStateNeedsLost
[DEBUG] Lost directory with dead children found, kick syncUp
[CRIT] Assertion failed: client
[DEBUG] app library %@ became foreground
[DEBUG] app library %@ moved to background
[DEBUG] 
%llx recomputing evicted state for %@
[DEBUG] updating evict status: %s
[DEBUG] evict status remains: %s
[DEBUG] resolving target app libraries for app library %@
[DEBUG] resolved target app libraries %@ for app library %@
[DEBUG] removing all target app libraries from %@
[DEBUG] attempting to add target app library %@ to %@
[DEBUG] added target app library %@ to %@
[DEBUG] %@ is already a target app library of %@
[DEBUG] attempting to remove target app library %@ from %@
[DEBUG] not removing target app library %@ from %@
[DEBUG] %@ is not a target app library of %@ anymore
[DEBUG] not removing target app library %@ from %@, because it's still targeting it
[CRIT] Assertion failed: unsaltedBookmarkData
[CRIT] Assertion failed: !brc_isSharedZoneOwner(ownerName)
[CRIT] UNREACHABLE: nil dbRowID for %@
[DEBUG] container-metadata needs sync up for %@
[CRIT] Assertion failed: parentPath.appLibrary == self
[DEBUG] There used to be an alias in that container, but we lost it, let's recreate one
[DEBUG] Found an existing alias at %@
[DEBUG] alias successfully renamed at %@
[DEBUG] creating bookmark with target %@ (%@)
[ERROR] unable to create bookmark for %@: %@
[CRIT] Assertion failed: enclosureUUID
[CRIT] Assertion failed: _initialRetryCount <= _finalRetryCount
[CRIT] Assertion failed: _minimumNsecsBetweenRetries <= _maximumNsecsBetweenRetries
[CRIT] Assertion failed: _minimumNsecsBetweenRetries > 0
[CRIT] Assertion failed: _maximumNsecsBetweenRetries > 0
[CRIT] Assertion failed: _nsecsBeforeForgettingCounter >= _maximumNsecsBetweenRetries
[DEBUG] We haven't finished the previous throttle
[DEBUG] Forgetting retry counter
[DEBUG] gave up on %@/%llx (retry-count:%u)
[DEBUG] backing off %@/%llx for %llu milliseconds (retry-count:%u)
[CRIT] API MISUSE: unhandled format specifier
[ERROR] unhandled format specifier %%%c
[DEBUG] Downloader[%lld-%s-%@]: created throttle with state %s
[DEBUG] Downloader[%lld-%s-%@]: %@ %s -> %s (%llu -> %llu)
[WARNING] No appLibraryEntry for Downloader[%@-%s-%@] with transfer_operation %@
[DEBUG] 
%llx Downloader[%@-%s-%@]: download %@
[DEBUG] Got an out of space error
[DEBUG] Rescheduling %@ (%@) for retriable error: %@
[ERROR] Got non recoverable error when downloading %@: %@
[DEBUG] The error is for an unknown item, check if the zone hasn't been wiped
[DEBUG] Apply Changes[%lld]: %@ state is %s
[DEBUG] Downloader: scheduling %lld suspended throttles
[DEBUG] Downloader: not enough space to download anything (%@ < %@)
[DEBUG] Downloader: scheduled %lld pending-disk throttles, which will still leave %@ of free disk space
[DEBUG] Downloader[%@-%s-%@]: Cancelling download for %@
[DEBUG] Downloader[%@-%s-%@]: Cleaning up download stage: %@
[DEBUG] adding alias item %@ to currently transfering %@
[DEBUG] Refreshed active download size %llu -> %llu
[DEBUG] no pre-existing thumbnail at '%@'
[ERROR] failed asking QL to generate a thumbnail at '%@': %@
[WARNING] li %@ disappeared while waiting for thumbnail generation
[DEBUG] removed %lld items in pkg:%@
[CRIT] UNREACHABLE: We should have a stageID for this item: %s
[ERROR] can't get permanent storage of %@: %@
[WARNING] Failed to remove additions : %@
[DEBUG] removed additions from %@
[DEBUG] resolved losers needing deletion: {%@}
{%@}
[DEBUG] losers needing deletion: {%@}-{%@}
[DEBUG] 
%llx scheduling download of losers %@ for item %@
[DEBUG] 
%llx download etag: %@
[CRIT] UNREACHABLE: We thought we finished downloading loser etag %@ for %@ but it wasn't found, so rescheduling
[DEBUG] we're done downloading %@
[DEBUG] rescheduling winner
[DEBUG] suspending apply for download
[DEBUG] not interested in this download
[CRIT] Assertion failed: addedLosers
[CRIT] Assertion failed: removedLosers
[DEBUG] 
%llx discovering conflict losers which are live at %@
[ERROR] invalid addition name for %@
[WARNING] invalid itemID %@ (for %@ in %@)
[WARNING] ETag %@ is no longer a loser
[DEBUG] live losers: %@
[ERROR] can't remove conflict loser for %@: %@
[DEBUG] 
%llx scheduling thumbnail download for %@
local: %@
server: %@
[DEBUG] no thumbnail, cancelling thumbnail download
[DEBUG] existing throttle thumbnail with etag:%@
[DEBUG] cancelling thumbnail throttle with etag:%@
[DEBUG] existing thumbnail for %@_%@ has state %s
[DEBUG] thumbnail for %@_%@ associated, notifying file coordinator
[ERROR] Failed to save thumbnail from %@: %@
[DEBUG] thumbnail for %@_%@ still pending download
[DEBUG] thumbnail for %@_%@ has state %s
[DEBUG] Rescheduled %lld in-flight transfers because we have restarted
[DEBUG] Kicking downloads for %@
[DEBUG] Downloader[%lld]: job has been put back in queue %@
[NOTICE] downloading %ld thumbnails in %@
[DEBUG] trying to send an eviction request
[DEBUG] Downloader[%lld-%s-%@]: not enough available disk space (%llu available, %llu needed, %llu minimum)
[DEBUG] Downloader[%lld-%s-%@]: enough disk space to download (%llu available, %llu needed, %llu minimum)
[CRIT] UNREACHABLE: item download %@ etag changed from %@
[WARNING] Completed unit count is greater than version size; ignoring value
[DEBUG] Re-use progress %@ for %@
[NOTICE] downloading %ld documents in %@
[DEBUG] Downloader[%lld-%s-%@]: postpone because loser is more recent than live item
[ERROR] backing off: can't resolve storage for %@: %@
[NOTICE] downloading %ld previous documents versions in %@
[CRIT] Assertion failed: _indentation > 0
[CRIT] UNREACHABLE: unknown color
[DEBUG] 
%llx scheduling reset %s of %@
[DEBUG] 
%llx reset %s of %@
[DEBUG] zone is already resetting (zone:%@,appLibrary:%@) but adding (%@,%@) for the next reset
[DEBUG] flushing reset state (%@) for container %@
[DEBUG] waiting for %u cancelled operations to finish
[DEBUG] Cancel file providers
[WARNING] giving up on resetting %@
[DEBUG] waiting %.3f secs to reset %@
[CRIT] Assertion failed: !self->_resetTimer
[NOTICE] resetting %@: %s
[CRIT] UNREACHABLE: not implemented
[DEBUG] scheduling unlink of %@
[CRIT] UNREACHABLE: live doc with no fileid: %@
[DEBUG] deleted %lu aliases for reschedule for container reset (batch size %llu)
[WARNING] failed to unlink dev:%d fileID:%llu: %s
[CRIT] Assertion failed: self->_resetTimer == nil
[DEBUG] deleting from server truth for %@
[DEBUG] notify the global progress to stop tracking documents with inflight diffs
[DEBUG] deleting from client truth for %@
[ERROR] failed pruning client_items: %@
[ERROR] failed pruning client_pkg_items: %@
[ERROR] failed pruning client_document_access: %@
[DEBUG] requesting coordinated deletion at '%@'
[WARNING] Ignoring delete of app library with no URL %@
[DEBUG] 
%llx requesting coordinated deletions
[DEBUG] 
%llx acquired coordinated disconnects
[ERROR] Failed acquiring coordinated deletions - %@
[DEBUG] disconnecting %@ on disk
[DEBUG] 
%llx disconnected NSMDQ listeners for %@
[DEBUG] cancelling sync up operation %@
[DEBUG] cancelling sync down operation %@
[DEBUG] 
%llx finishing reset %s of %@
[DEBUG] finished reset %s of %@ but we still need to delete data
[DEBUG] finished reset %s of %@
[ERROR] Unable to create directory "%@": %@
[ERROR] Unable to set mtime & hidden on "%@": %@
[DEBUG] 
%llx migrating legacy ubiquity root
[ERROR] can't open root '%@'; error %d (%s)
[ERROR] can't lstat '%@'; error %d (%s)
[NOTICE] found our root at '%@' deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[CRIT] We own both the root and had an old one renamed away
We have purged the old one, and will now reset
[NOTICE] migrating root from accountString %@ to %@
[NOTICE] tagging root with accountString %@
[DEBUG] 
%llx deleting root folder
[ERROR] failed renaming root back from '%@' to '%@'; error %d (%s)
[NOTICE] moved '%@' back to '%@'
[DEBUG] root has a .ubd folder: deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[DEBUG] root has accountString %@
[DEBUG] 
%llx deleting ubd's support files
[ERROR] can't open (%d, '%@'); error %d (%s)
[ERROR] can't fstat (%d, '%@'); error %d (%s)
[ERROR] not a directory at (%d, '%@') deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] mkdirat(%d, '%@'); error %d (%s)
[ERROR] can't open (%d, '%@') after mkdir; error %d (%s)
[ERROR] not a directory at (%d, '%@') after mkdir deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] unexpected uid != %u at (%d, '%@')deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] unexpected permissions at (%d, '%@') deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] failed chmod at (%d, '%@') deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x; error %d (%s)
[ERROR] can't fstat (%d, '%@') after mkdir; error %d (%s)
[DEBUG] %s dir at (%d, '%@') deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[CRIT] UNREACHABLE: unknown item type
[CRIT] Assertion failed: _itemScope != BRC_ITEM_SCOPE_UNKNOWN || _state == BRC_ITEM_STATE_RESERVED || _state == BRC_ITEM_STATE_TOMBSTONE
[CRIT] Assertion failed: [s isKindOfClass:[NSMutableString class]]
[CRIT] UNREACHABLE: nobody should scan an item from a fault
[CRIT] Assertion failed: ![_bouncedName isEqualToString:name]
[CRIT] UNREACHABLE: got a fault name
[CRIT] UNREACHABLE: can't move aside a root item!
[CRIT] Assertion failed: _state == BRC_ITEM_STATE_TOMBSTONE
[CRIT] Assertion failed: _type != BRC_ITEM_TYPE_ALIAS
[DEBUG] dropping tags
[ERROR] failed to fetch tags: %@
[DEBUG] read tags: [%@]
[CRIT] Assertion failed: path.isExecutable || !path.isUnixDir
[CRIT] Assertion failed: path.isDocument
[CRIT] Assertion failed: !path.isDocument
[CRIT] Assertion failed: _documentID.unsignedLongLongValue == path.documentID
[CRIT] Assertion failed: BRCItemTypeIsFault(_type)
[DEBUG] Fault was renamed from %@ to %@
[CRIT] Assertion failed: path.isDocument || path.isFinderAlias
[CRIT] Assertion failed: _type == BRC_ITEM_TYPE_FINDER_BOOKMARK_FAULT
[DEBUG] %@ was a fault, is now a finder bookmark
[CRIT] Assertion failed: _type == BRC_ITEM_TYPE_DOC_FAULT
[DEBUG] %@ was a fault, is now a document
[CRIT] Assertion failed: _state == BRC_ITEM_STATE_LOST || _state == BRC_ITEM_STATE_LOST_ZOMBIE
[CRIT] Assertion failed: _type == BRC_ITEM_TYPE_DIRECTORY || _type == BRC_ITEM_TYPE_FS_ROOT
[CRIT] Assertion failed: _state == BRC_ITEM_STATE_LOST
[CRIT] UNREACHABLE: Unexpected state %@ for item %@
[CRIT] Assertion failed: lostStamp
[CRIT] UNREACHABLE: unknown type
[CRIT] Assertion failed: _stagedFileID
[CRIT] Assertion failed: _stagedGenerationID
[CRIT] Assertion failed: (_state == BRC_ITEM_STATE_RESERVED && !_fileID && !_generationID) || ((_state == BRC_ITEM_STATE_LIVE || _state == BRC_ITEM_STATE_LOST || _state == BRC_ITEM_STATE_LOST_ZOMBIE) && _fileID && _generationID)
[CRIT] Assertion failed: _type != BRC_ITEM_TYPE_DIRECTORY && _type != BRC_ITEM_TYPE_FS_ROOT
[CRIT] Assertion failed: [_physicalName br_isSideFaultName]
[CRIT] Assertion failed: ![_physicalName br_isSideFaultName]
[CRIT] UNREACHABLE: -asBRAlias called on a non alias
[CRIT] UNREACHABLE: -asDirectory called on a non directory
[CRIT] UNREACHABLE: -asDocument called on a non document
[CRIT] UNREACHABLE: -asSharedDocument called on a non document
[CRIT] UNREACHABLE: -asFSRoot called on a non root
[CRIT] UNREACHABLE: -asSymlink called on a non symlink
[CRIT] UNREACHABLE: -asFinderBookmark called on a non symlink
[CRIT] UNREACHABLE: asked to refresh the app library of a root item
[CRIT] UNREACHABLE: hierarchy too deep to compute the app library root of %@
[CRIT] Assertion failed: _appLibrary
[DEBUG] Needs rename because local name %@ differs from real name %@
[CRIT] Assertion failed: parentItem->_minimumSupportedOSRowID
[CRIT] Assertion failed: !_minimumSupportedOSRowID
[DEBUG] %@: inheriting %@ minimum supported OS
[DEBUG] %@ needs %@ to sync-up
[CRIT] UNREACHABLE: can't add the OS NAME
[CRIT] UNREACHABLE: creating an item from a non supported path 0x%x
[ERROR] Unable to pursue update from FS due to error (%@).
[CRIT] UNREACHABLE: Local items must be initialized with initFromPQLResultSet:container:error:
[CRIT] Assertion failed: self.isReserved
[CRIT] UNREACHABLE: item without parentID under parent %@
[CRIT] UNREACHABLE: orphan detected %@ under parent %@ in %@
[CRIT] UNREACHABLE: item parented to a document: %@ parented to %@
[CRIT] Assertion failed: !self.itemID.isNonDesktopAppLibraryRoot
[CRIT] Assertion failed: !self.isFSRoot
[CRIT] Assertion failed: self.isReserved || _appLibrary
[CRIT] UNREACHABLE: Circular parenting chain
[ERROR] Encountered circular parenting chain
[DEBUG] Queueing notification %@
[DEBUG] 
%llx Saving item %@
[DEBUG] Item is already force-deleted, skipping save
[DEBUG] Force deletion has been asked, comply
[DEBUG] Deleting tombstone because it's synced up
[DEBUG] Deleting tombstone because it's no known to server
[DEBUG] Telling new app library about lost state
[DEBUG] item with a minimum supported OS just changed, checking if we need to reattempt upload
[DEBUG] item went out of lost state
[DEBUG] this item changed significantly
[DEBUG] %s. changedFields:%@ sendNotif:%s serverUpdate:%s
[ERROR] failed to save item %@ to DB: %@
[CRIT] UNREACHABLE: saving items should really always work: %@
[DEBUG] learned itemID %@ for %@
[ERROR] unable to load the xattrs: %@
[CRIT] Assertion failed: st
[DEBUG] structural xattr signature: %@
[CRIT] Assertion failed: cv
[DEBUG] content xattr signature: %@
[CRIT] UNREACHABLE: You can't cross move %@ to %@
[CRIT] Assertion failed: path.appLibrary == _appLibrary
[DEBUG] updated item from FS: %@
diffs:(%@)
[ERROR] Unable to refresh xattrs from FS due to error (%@).
[DEBUG] updated item location: %@
diffs:(%@)
[DEBUG] Item is marked needs-reading, so it must have changed
[DEBUG] unknown fileID/generationID on %@
[DEBUG] path not on disk at %@
[DEBUG] fileID (%llu) doesn't match (%llu)
[DEBUG] genID (%@) doesn't match (%@)
[DEBUG] xatts signatures don't match between %@ and %@
[CRIT] UNREACHABLE: we should always have a corresponding server item for already sync-ed up items
[DEBUG] Learning structural ETag, because item has no real structural change
[DEBUG] Learning content ETag, because item has no real content change
[WARNING] Rejected item %@ has meaningful local diffs.  Forcing re-sync of all fields
[CRIT] Assertion failed: self.isReadAndUploaded || self.isKnownByServerOrInFlight
[DEBUG] Rejected item %@ has meaningful local diffs.  Forcing sync on all
[DEBUG] item marked lost: %@
backoff mode:%d diffs:(%@)
[DEBUG] reserved %@
[CRIT] Assertion failed: self.isDead && self.isDeadOrMissingInServerTruth
[CRIT] Assertion failed: _st.state == BRC_ITEM_STATE_TOMBSTONE || _st.state == BRC_ITEM_STATE_LOST || _st.state == BRC_ITEM_STATE_LOST_ZOMBIE
[CRIT] Assertion failed: _st.stagedFileID
[DEBUG] updating etag:%@ from server item: %@
[CRIT] Assertion failed: serverItem
[CRIT] Assertion failed: ckInfo
[CRIT] UNREACHABLE: can't mark live from stage
[CRIT] Assertion failed: !self.isKnownByServer
[CRIT] Assertion failed: self.needsInsert
[CRIT] UNREACHABLE: invalid sync up state
[DEBUG] 
%llx request to evict client item %@:%@ with options %@
[WARNING] ignoring eviction request for %@ because item is dead
[WARNING] ignoring eviction request for %@ because app library is used by a ubiquity client
[DEBUG] 
%llx request to download client item %@:%@ with options %@
[CRIT] Assertion failed: (options & BRCDownloadDiscretionary) == 0 || (options & BRCDownloadUserInitiated) == 0
[WARNING] ignoring download request for %@ because item is dead
[DEBUG] added xattr %s (%lld bytes)
[WARNING] skipping xattr %s
[WARNING] skipping xattr %s (size:%zd) because we don't have enough space anymore
[DEBUG] serialized xattr %s (blob size:%ld)
[WARNING] removing xattr %s failed; error %d (%s)
[DEBUG] removed xattr %s
[DEBUG] Sync: no global budget anymore: %@
[DEBUG] 
%llx closing %@
[DEBUG] 
%llx shutting down periodic metadata sync
[DEBUG] waiting for %@ to finish
[DEBUG] 
%llx loading containers
[DEBUG] 
%llx Considering containers needing forced sync down
[ERROR] periodic sync failed %@
[DEBUG] Sync: resuming sync
[DEBUG] 
%llx just synced down the default container
[DEBUG] marking container-metadata needs-sync-down
[DEBUG] scheduling sync for sharedb in %llus
[DEBUG] scheduling sync for zone-health
[DEBUG] scheduling sync for zone-pcs
[DEBUG] marking zone-health needs-sync-up
[DEBUG] marking container-metadata needs-sync-up
[DEBUG] 
%llx scheduling container-metadata sync
[DEBUG] already syncing container-metadata
[DEBUG] syncing down
[DEBUG] syncing up
[DEBUG] done syncing container-metadata
[DEBUG] 
%llx resetting container-metadata: %s
[DEBUG] 
%llx scheduling shared-db sync
[DEBUG] already syncing shared-db
[CRIT] UNREACHABLE: we shouldn't be asked to sync up the shared DB
[DEBUG] done syncing shared-db
[DEBUG] 
%llx scheduling zone-health sync
[DEBUG] already syncing zone-health
[DEBUG] done syncing zone-health
[WARNING] Resetting zone health
[DEBUG] Completed zone health sync token:%@ requestID:%lld morecoming:%s error:%@
[DEBUG] 
%llx starting cross zone move migration PCS prep
[CRIT] Assertion failed: _migrateZonePCSOperation == nil
[WARNING] Container became foreground that we didn't think was installed, forcing an apps list refresh
[DEBUG] scheduling push topics registration
[DEBUG] 
%llx updating push topics
[CRIT] Assertion failed: ckContainer
[NOTICE] Setting push environment to %@
[ERROR] Unable to get a push environment from cloudd, default to %@ : %@
[CRIT] Assertion failed: _pushConnection
[DEBUG] Not registering for pushes on container %@ because sync is disabled due to no corresponding app being installed
[DEBUG] foreground topics: %@
[DEBUG] received %@ push token %@ for %@:%@
[DEBUG] received public push token %@
[ERROR] unable to parse push for topic:'%@' payload:%@
[DEBUG] 
%llx received a push in the %@ database for topic:'%@' payload:%@ token:%@
[NOTICE] received a push for the container-metadata zone
[NOTICE] received a push for the zone-health zone
[NOTICE] received a push for %sapp library %@ %@
[DEBUG] 
%llx scheduling sync down for %@ because of a push
[CRIT] UNREACHABLE: invalid push topic '%s' (expected prefix '%s')
[CRIT] UNREACHABLE: invalid push payload[%@] %@
[CRIT] UNREACHABLE: invalid push ZoneIdentifier at payload[%@] %@
[CRIT] UNREACHABLE: invalid push DatabaseScope at payload[%@] %@
[CRIT] UNREACHABLE: invalid push ZoneOwnerID at payload[%@] %@
sharing/iWork-publishing-fetch
[CRIT] UNREACHABLE: No error and invalid number of records %lu
[CRIT] UNREACHABLE: can't unarchive CKRecord: %@
[DEBUG] we're a document missing a content signature
[DEBUG] we're a document missing a thumbnail signature
[DEBUG] we're a document with an xattr change
[CRIT] Assertion failed: path.isPackageRoot
[CRIT] Assertion failed: sqlite3_value_type(value) == SQLITE_NULL
[CRIT] Assertion failed: self.isFinderBookmark || BRCItemTypeIsDocument(_st.type)
[DEBUG] Container is not greedy, not being greedy for the file
[DEBUG] Document UTI is not evictable, force greediness
[DEBUG] Don't be greedy because the app library is not greedy
[DEBUG] Not being greedy because we don't have enough space; needed:%@; available:%@
[DEBUG] Not being greedy because document is too old (mtime: %lld; max age: %lld days)
[CRIT] Assertion failed: item.isDocument
[CRIT] UNREACHABLE: document without a version:
    %@
   this typically indicates either of two problems:
    - either we failed processing the last sync down and we
      saved the structure record but not the contents record,
    - or the server forgot to send us a contents record.
[CRIT] UNREACHABLE: %@ isn't a dictionary!
[CRIT] Assertion failed: !info || info.isDocument
[DEBUG] Clearing signatures: %@
[ERROR] name is nil
[ERROR] Unable to stage fault: %@
[CRIT] Assertion failed: options
[ERROR] No version to stage for %@
[CRIT] UNREACHABLE: No version on server item
[CRIT] Assertion failed: options & BRCSetVersionToStageWantsContent
[DEBUG] Version to make live has only metadata changes with current version: %@
[DEBUG] Proceeding with apply changes for metadata only update
[DEBUG] Version to make live has only metadata changes with previous one to make live: %@
[DEBUG] Proceeding with apply changes for staged version to make live
[DEBUG] Proceeding with apply changes since reserved items don't need to flush
[DEBUG] Learn sharing and owner from server record for diffs: %@
[DEBUG] Apply Changes[%lld]: state:%s options:%@ (thumbnail:%s losers:%s)
[DEBUG] clearing desired version
[CRIT] Assertion failed: serverItem.isDocument
[CRIT] Assertion failed: self.isDocument
[CRIT] Assertion failed: serverItem.latestVersion
[ERROR] latest version:%@
current version:%@
[CRIT] UNREACHABLE: We think this is a meta only update but it isn't (%llu)!
[DEBUG] 
%llx leaning itemID %@ for %@
[DEBUG] %@ is not a fault anymore, clearing the version
[DEBUG] item isn't a document anymore anymore
[DEBUG] size changed from %llu to %llu at %@
[DEBUG] mtime changed from %llu to %llu
[DEBUG] generationID (%@) doesn't match (%@)
[CRIT] Assertion failed: _st.documentID
[DEBUG] forcing iwork conflict etag on %@ to be %@
[DEBUG] removing conflict loser with etag %@
[DEBUG] there is no conflict loser with etag %@
[CRIT] Assertion failed: !self.isFault
[DEBUG] 
%llx marking needs-read: %@
[CRIT] UNREACHABLE: trying to force upload of a fault
[DEBUG] 
%llx marking uploaded %@
[CRIT] API MISUSE: state isn't needs-upload
[CRIT] Assertion failed: record
[CRIT] UNREACHABLE: no version on uploaded document %@
[CRIT] UNREACHABLE: CK disagrees on the item size: %lld != %lld
[DEBUG] marking uploaded %@, signature:%@
[CRIT] Assertion failed: (fileAsset && !pkgSignature) || (!fileAsset && pkgSignature)
[CRIT] Assertion failed: signature
[CRIT] Assertion failed: _currentVersion
[CRIT] Assertion failed: _currentVersion.contentSignature.brc_signatureIsPendingPlaceHolder
[CRIT] Assertion failed: _currentVersion.thumbnailSignature.brc_signatureIsPendingPlaceHolder
[CRIT] Assertion failed: _currentVersion.uploadedAssets == nil
[DEBUG] item is now uploaded: %@
[CRIT] UNREACHABLE: Something asked to upload/sync-up an item without a fileID
[CRIT] Assertion failed: self.needsUpload
[DEBUG] 
%llx reading live conflict losers from %@
[CRIT] Assertion failed: _orig.st.documentID
[DEBUG] Apply Changes[%lld]: Rescheduling reverse-alias in %@
[DEBUG] 
%llx evicting client item %@
in %@
[DEBUG] nothing to do: already a fault
[DEBUG] nothing to do: eviction is already scheduled
[DEBUG] items not on disk are not evictable!
[DEBUG] %@ isn't evictable because has ubiquity clients connected
[CRIT] UNREACHABLE: item %@ have an empty file id!
[DEBUG] not evictable because it's locked
[DEBUG] not evicted because the item has a file presenter: %@
[DEBUG] evicting server item %@
in %@
[DEBUG] nothing to do because this document is already live and has no desired version
[DEBUG] nothing to do because download is already scheduled and there is no error
[DEBUG] clearing download error %@ since a download was explicitely requested
[ERROR] failed to determine if %@ is hidden for %@: %@
[DEBUG] %@ is hidden for %@. Excluding from index
[ERROR] item %@ is missing a doc id
[CRIT] Assertion failed: appLibrary && documentsFolderPath
[ERROR] failed resolving documents folder path %@ for %@, although it's marked in Document Scope; error %d (%s)
[ERROR] Failed iterating up the parent path of %@ for %@: %s
[ERROR] Failed resolving %@ for %@: %s
[DEBUG] %@ is able to be indexed
[CRIT] UNREACHABLE: %@ is marked as Document Scope Public, but we walked up to the root before hitting                                 the documents folder
[CRIT] UNREACHABLE: only share acceptation fault can be deleted; %@
[CRIT] UNREACHABLE: do not use the parent file id on shared docs
[CRIT] Assertion failed: self.clientZone.isSharedZone
[DEBUG] 
%llx Got coordinated %@
[ERROR] Coordinated %@ request at '%@' canceled after %0.06f seconds
[ERROR] Coordinated %@ request failed at '%@' in %0.06f seconds: %@
[ERROR] Coordinated %@ request failed at '%@' in %0.06f seconds
[DEBUG] Obtained coordinated %@ %@ '%@%@%@' in %0.06f seconds
[DEBUG] Releasing coordinated %@ %@ '%@%@%@' after %0.06f seconds
[DEBUG] Canceling coordinated %@ because task tracker is cancelled
coord-read
[DEBUG] 
%llx Requesting coordinated read at '%@'
coord-delete
[DEBUG] 
%llx Requesting coordinated delete at '%@'
coord-write
[DEBUG] 
%llx Requesting coordinated write at '%@'
coord-rename
[DEBUG] 
%llx Requesting rename from '%@' to '%@'
[DEBUG] hinting file coordinator of a change
    at '%@'
[DEBUG] hinting file coordinator of a reconnect
    at '%@'
[DEBUG] hinting file coordinator of a bounce
    from '%@'
      to '%@'
[DEBUG] hinting file coordinator of a move%s
    from '%@'
      to '%@'
[DEBUG] Fixing up case of %@ to %@
[WARNING] no data in record %@
sync-down/container-metadata
[DEBUG] got record changes for %@ last modified by %@ on %@
[ERROR] failed parsing plist for container %@: %@
[DEBUG] containerID %@ had no properties plist
[DEBUG] we'll download icon %@ for container %@
[DEBUG] updating container metadata %@ at etag:%@ (no asset downloaded)
[DEBUG] container-metadata receieved server change token %@, caught-up:%s client change token %@ error:%@
[DEBUG] remembering server change token %@
[DEBUG] adding sub-operation to fetch record changes: %@
[DEBUG] got asset contents for %@
[DEBUG] updating container metadata %@ at etag:%@ (after asset download)
[ERROR] unknown container %@
[NOTICE] fetched %lu containers metadata from the cloud
[DEBUG] adding sub-operation to fetch asset contents: %@
[DEBUG] 
%llx Sync: syncing down container metadata
upload
[ERROR] No per upload completion block for %@, error %@
[DEBUG] Publishing upload progress for %@
[DEBUG] ignoring zone not found error for %@ - we'll create at the end of the operation
[CRIT] Assertion failed: modifyError
[DEBUG] zone was recreated, reuploading records
[CRIT] UNREACHABLE: This is not a private zone
[CRIT] UNREACHABLE: This is not a shared zone
[ERROR] Reading asset %@ yields a different signature: %@
[ERROR] can't save %@: missing ownerKey for ownerName "%@"
[CRIT] UNREACHABLE: got a SQL Error: %@
[WARNING] Bounced itemID %@ from "%@" to "%@" because it clashes with %@
[DEBUG] Not bouncing %@ to %@ because that's not a unique filename
[CRIT] Assertion failed: _db.changes == 1
[DEBUG] changing extension to "%@" because "%@" is a package extension
[WARNING] changing filename to "%@" because "%@" is %s (item ID: %@, last editor: %@)
[ERROR] changing filename to "%@" because "%@" is %s name
[CRIT] Assertion failed: !(st.logicalName.br_isSideFaultName || [st.logicalName br_isExcludedWithMaximumDepth:1])
[CRIT] UNREACHABLE: can't deserialize filename: %@ of %@
[ERROR] Failed to update record (%@): %@
[ERROR] failed saving document %@: %@
[CRIT] UNREACHABLE: document without a structure:
    i:%@ %@
   this typically indicates either of two problems:
    - either we failed processing the last sync down and we
       failed inserting the structure record,
    - or the server forgot to send us a structure record.
[DEBUG] saving consistent structure record to db %@
[ERROR] can't deserialize %@: %@
[DEBUG] saving consistent document record to db %@
[CRIT] UNREACHABLE: can't deserialize extension: %@ of %@
[CRIT] Assertion failed: extension
[DEBUG] saving consistent symlink structure record to db %@
[ERROR] failed saving symlink %@: %@
[DEBUG] saving consistent finder bookmark structure record to db %@
[DEBUG] saving consistent alias record to db %@
[ERROR] failed saving alias %@: %@
[CRIT] Assertion failed: share.currentUserParticipant.type != CKShareParticipantTypeOwner
[CRIT] Assertion failed: share.currentUserParticipant.type == CKShareParticipantTypeOwner
[WARNING] ignoring unknown itemID on share
[ERROR] share without root record:
    i:%@
   this typically indicates either of two problems:
    - either we failed processing the last sync down and we
       failed inserting the shared record,
    - or the server forgot to send it to us.
[CRIT] UNREACHABLE: structure record which isn't a directory or document
[WARNING] Consistent state but unknown record type (recordType: %@).
[ERROR] failed saving tombstone share %@: %@
[WARNING] deleted shareID %@ was for already dead item
[CRIT] UNREACHABLE: Couldn't decode itemID from recordID %@
[ERROR] failed saving tombstone %@: %@
[DEBUG] Not inserting tombstone entry for %@ because we don't have a server item already.  Let's go through rejected code path for perf.
[ERROR] Failed saving inconsistent record %@ : %@
[DEBUG] saving inconsistent record %@
[ERROR] Failed saving inconsistent record delete %@ : %@
[DEBUG] saving inconsistent record delete %@
[ERROR] Failed saving inconsistent shared record delete %@ : %@
[DEBUG] saving inconsistent shared record delete %@
[CRIT] UNREACHABLE: unknown item type %d
[CRIT] UNREACHABLE: Server killed %s but it still has %d live children
[CRIT] UNREACHABLE: Server sent item %s which isn't a descendant of 'root'
[CRIT] UNREACHABLE: Server sent item %@ which is parented to a non-directory %@
[CRIT] UNREACHABLE: Server sent live item %s parented to dead item %s
[DEBUG] %@: Allocated ranks [%lld, %lld[
[NOTICE] Deleted %lld pending fetches due to the broken structure error
[ERROR] Allocating ranks failed, mark the container as BROKEN STRUCTURE
server-zone/did-sync-down
[CRIT] UNREACHABLE: Can't create app library and zones for zone named: %s
[DEBUG] 
%llx saving %ssync-down batch (edits:%ld deletions:%ld)
[NOTICE] received %lu edited items and %lu deleted items from the cloud for %@%@
[NOTICE] received %lu deleted items from the cloud for %@%@
[NOTICE] received %lu edited items from the cloud for %@%@
[CRIT] Assertion failed: requestID >= self->_changeState.clientRequestID
[DEBUG] there are on-disk pending batches (edits:%ld deletions:%ld) waiting to be moved to server truth
[CRIT] Assertion failed: [record.recordType isEqualToString:kBRRecordTypeContent] || [record.recordType isEqualToString:kBRRecordTypeStructure]
[ERROR] Failed to save pending content records
[ERROR] Failed to save consistient content record changes
[ERROR] something went wrong while saving to the db: %@
[DEBUG] updating %@
with requestID:%llu %stoken:%@ consistent:%s caught-up:%s
[DEBUG] Dropped %ld unused xattr blobs
[DEBUG] Removing applied tombstone: %@
[DEBUG] 
%llx Starting to GC %ld server tombstones in %@
[ERROR] failed purging zone %@ - %@
[ERROR] failed pruning server_pending_fetches: %@
[ERROR] failed pruning server_xattr_blobs: %@
[DEBUG] Finishing destroying server truth
[DEBUG] Finished resetting server truth
[CRIT] UNREACHABLE: attempted delete all content on an unsupported zone type: %@
[CRIT] Assertion failed: !privateAppLibrary.wasMovedToCloudDocs
[CRIT] Assertion failed: clientZone.appLibraries.count == 1
[CRIT] UNREACHABLE: Unable to cross zone migrate.  Blowing away our state and starting from scratch.
[CRIT] Assertion failed: argc == 1
[CRIT] UNREACHABLE: you must override this
[CRIT] UNREACHABLE: invalid type
[DEBUG] path match info for %@ is %@
[WARNING] we have no etag for %@
path matching: %@
[WARNING] we have no reference for %@
path matching: %@
[CRIT] Assertion failed: self.brc_isAppLibraryRootRecordID
[CRIT] Assertion failed: self.brc_isAppLibraryDocumentsRecordID
[CRIT] Assertion failed: libraryRowID
[CRIT] Assertion failed: appLibrary
[CRIT] UNREACHABLE: attempt to extract an itemID from '%s'
[CRIT] UNREACHABLE: attempt to extract an itemType from '%s'
[WARNING] The server sent a bounceNo <= 1: %@
[CRIT] UNREACHABLE: empty basename and no bounceno
[CRIT] UNREACHABLE: Aliases parent ref zoneID %@ must be equal to aliases zoneID %@!
[CRIT] UNREACHABLE: No alias target
[CRIT] UNREACHABLE: The server should have set a birthtime on %s
[CRIT] UNREACHABLE: %@ parent ref zoneID %@ must be equal to record's zoneID %@!
[CRIT] UNREACHABLE: The server should have set an mtime for %s
[WARNING] %@ record %@ has a size inconsistency, %llu != %llu
[ERROR] failed deserializing version in %@: %@
[ERROR] %@ record %@ doesn't have a lastEditorDeviceName
[WARNING] Server gave us an unrepresentable filename: "%@" using "%@"
[CRIT] UNREACHABLE: The record name is not a content in the shared zone
[ERROR] couldn't set basename to '%@'
[CRIT] UNREACHABLE: invalid filename
[ERROR] Couldn't serialize xattr blob for %@: %@
[DEBUG] On Sync-up of %@ using old etag due to iWork conflict
[CRIT] Assertion failed: version != nil
[CRIT] Assertion failed: self.brc_currentUserOwnsLastEditorDevice
[CRIT] UNREACHABLE: invalid lastEditorDeviceName on %@: %@
[CRIT] UNREACHABLE: rootAppLibraryRecordForAppLibraryID: should not be called with appLibraryName set to nil
[CRIT] Assertion failed: dataRepresentation != nil
[CRIT] UNREACHABLE: invalid key %@ and obj %@
[WARNING] share has no CKShareTypeKey, using extension from CKShareTitleKey (%@)
[WARNING] can't find document name for share %@ and can't extract it from URL; using '%@' as default
[WARNING] item should really have an etag
[DEBUG] Syncing up directory record %@%s
[DEBUG] Syncing up alias record %@%s
[WARNING] Not syncing deletion of ETag-less version: %@
[DEBUG] We need to update sharing info for this reset item
[DEBUG] shared document is read-only, do not sync its version
[ERROR] re-uploading uploaded record: %@
[DEBUG] ItemID changed while uploading (%@ -> %@), starting over
[CRIT] Assertion failed: record[kBRRecordKeyPackageContent]
[CRIT] Assertion failed: record[kBRRecordKeyPackageManifest]
[CRIT] Assertion failed: record[kBRRecordKeyPackageSignature]
[DEBUG] Package changed while uploading, starting over: %@
[DEBUG] Xattrs package changed while uploading, starting over: %@
[CRIT] Assertion failed: record[kBRRecordKeyFileContent] || record[kBRRecordKeyFinderBookmarkContent]
[DEBUG] forcing upload of %@
(dead in server truth)
[DEBUG] Syncing up version record %@
[DEBUG] for %@%s
[DEBUG] Syncing up document structure record %@
[DEBUG] Syncing up finder alias record %@
[DEBUG] Syncing up symlink record %@%s
[CRIT] Assertion failed: _currentVersion.ckInfo.etag
[CRIT] UNREACHABLE: Can't prepare sync for a zone that is blocked
[DEBUG] %@ is not pristine and needs sync
[DEBUG] Avoid syncing up a pristine zone
[DEBUG] 
%llx Sync: syncing up clientZone %@. batch size - %u
[DEBUG] Because this is our first time syncing up, adding %@
[DEBUG] Deleting dead record already dead in the server truth %@
[DEBUG] Deleting %@ record for %@
[CRIT] Assertion failed: items.count == 0
[DEBUG] no record needs syncing at the moment.
[DEBUG] preparing to send in requestID:%lld: %lu records, delete %lu recordIDs, unshare %lu iwork shares, rename %lu iwork shares, about %lu items
[NOTICE] sending %lu items to the cloud for %@
sync-up
[DEBUG] 
%llx sync-up error for record %@: %@
[CRIT] Assertion failed: self.serverZone.isPrivateZone
[DEBUG] Fetching share IDs shared by us for renames: %@ and unshare: %@
[WARNING] got an error while fetching the records and shares %@, but ignoring it
[DEBUG] Saving shares %@ shared by us for unshare and rename
[DEBUG] No shares need saving
[ERROR] send metadata error: %@
[CRIT] Assertion failed: [contentRecord.recordType isEqualToString:kBRRecordTypeContent]
[CRIT] Assertion failed: protectionData
[DEBUG] updated content record %@ with protectionData %@ baseToken %@ routingKey %@
[CRIT] Assertion failed: share.publicSharingIdentity
[CRIT] Assertion failed: !fetchedRecord
[DEBUG] record %@ still needs web sharing protection data
[CRIT] UNREACHABLE: Failed to get new web sharing identity: %@
[CRIT] UNREACHABLE: Timed out while waiting for new web-sharing identity
[CRIT] Assertion failed: [firstItemID isEqual:secondItemID]
[CRIT] Assertion failed: error
[ERROR] Failed getting web sharing identity for %@ - %@
[DEBUG] got web sharing identity for %@
[CRIT] UNREACHABLE: invalid sharing records count
[DEBUG] Sync: sending requestID:%lld for container %@
[DEBUG] item %@ needs to be re-uploaded
[DEBUG] item %@ doesn't need to be reuploaded
[CRIT] UNREACHABLE: Unable to open iwork package %@
[CRIT] UNREACHABLE: Uploaded an iWork package of size 0 (itemID: %@)
sharing/accept-flow
[NOTICE] share acceptation %@ failed with error %@
[DEBUG] use fallback flow with reason %@
[DEBUG] delete share acceptation fault because operation failed
[NOTICE] share acceptation %@ succeed and document is now live on disk at %@
[NOTICE] User clicked on share link %@
[DEBUG] Accept flow completed successfully.
[CRIT] UNREACHABLE: can't perform next step because operation is finished; %@
[DEBUG] 
%llx running %@ in %@
[CRIT] Assertion failed: method != nil
[CRIT] Assertion failed: self->_shareURL
[ERROR] failing share acceptation with %@
[DEBUG] network is unreachable, replacing error with generic network error
[CRIT] Assertion failed: _shareMetadata
[CRIT] Assertion failed: _shareURL
[DEBUG] share document URL is %@ for %@
[ERROR] can't create alias to shared item; %@
[DEBUG] created alias to shared item in %@
[CRIT] Assertion failed: _sharedItemID
[CRIT] Assertion failed: localClientZone
[CRIT] Assertion failed: [localClientZone isKindOfClass:[BRCSharedClientZone class]]
[DEBUG] 
%llx checking if document sharing is supported
[DEBUG] 
%llx checking the URL %@
[DEBUG] 
%llx Check if app is installed
[DEBUG] Application proxy: %@
[CRIT] Assertion failed: !(goToAppStore && openWebPreview)
[DEBUG] Application proxy missing %@ entitlement
[DEBUG] %@ is installed
[DEBUG] 
%llx Check if a user is signed in to iCloud and iCloud Drive is turned on
[WARNING] Can't accept share without a user signed in to iCloud
[CRIT] Assertion failed: !(goToSettings && openWebPreview)
[ERROR] Can't retrieve application app library ID for %@
[WARNING] Can't accept share without iCloud Drive turned on (accountDSID: %@, isEnabledForCloudDocs: %@, isAppLibraryDisabled: %@, isAccountMigrated: %@)
[DEBUG] User is eligible to accept the share
[DEBUG] 
%llx Check if app is profile disabled
[WARNING] managed AppleID can't access to public share
[WARNING] %@ is disabled by profile
[DEBUG] 
%llx Fetch share metadata for %@
[CRIT] UNREACHABLE: No operation error and no share metadata
[WARNING] Failed to fetch share metadata - %@
[DEBUG] 
%llx Show sharing join dialog
[DEBUG] Owner or share already accepted, skipping to next step
[NOTICE] User has refused to open shared document at %@
[NOTICE] User has accepted to open shared document at %@
[DEBUG] 
%llx Parsing share metadata %@
[DEBUG] local client zone is %@ (zoneName: %@)
[DEBUG] shared item is identified by %@ (documentName: %@)
[DEBUG] alias app library is %@
[DEBUG] 
%llx Wait for shared item to sync down
[CRIT] UNREACHABLE: %@ wasn't found after syncing down on the owner
[DEBUG] 
%llx Wait for fault to be on disk
[WARNING] %@ wasn't able to be found as a fault.  We must have reset or be broken structure or it was deleted locally.
[DEBUG] 
%llx Preparing side fault
[DEBUG] found share item %@
[DEBUG] creating alias in %@ for existing item
[CRIT] UNREACHABLE: not a document
[CRIT] UNREACHABLE: item is in an unknown state: %@:
[CRIT] UNREACHABLE: document doesn't exists anymore
[DEBUG] created shared document-to-be in db: %@
[ERROR] can't make the file live: %@
[DEBUG] created shared document-to-be on disk: %@
[DEBUG] created alias in %@
[DEBUG] item is on disk, jump to prepare to open shared document
[CRIT] Assertion failed: _shareDocumentURL
[ERROR] can't get bookmark string at %@
[DEBUG] Got bookmark string %@ for URL %@
[DEBUG] use %@ to open document
[WARNING] failed to get private app library for ID %@
[DEBUG] no default app found, use iCloudDrive app to quicklook document
[DEBUG] 
%llx doing open operation on %@ with %@
[DEBUG] 
%llx completed open operation
[ERROR] don't know how to open shared item at %@
[DEBUG] 
%llx Accepting share URL
[CRIT] Assertion failed: _acceptShareOpBlockingSyncDown == nil
[DEBUG] 
%llx creating share accept operation
[CRIT] Assertion failed: acceptShareOp
[DEBUG] 
%llx received share access completion
[WARNING] failed to accept share - %@
[CRIT] UNREACHABLE: No operation error and no share id
[WARNING] we are already accepting share %@
[DEBUG] accept operation completed with success
[ERROR] %@ wasn't found after syncing down
[CRIT] Assertion failed: self.localClientZone
[DEBUG] 
%llx prepare to open shared document
[ERROR] Invalid kind of item; %@
[WARNING] Could not compute the coordinated read URL of the item %@.  It must have been deleted locally
[CRIT] Assertion failed: !li.isReserved
[DEBUG] 
%llx Open shared document if still needed at %@
[CRIT] Assertion failed: shareURL
[ERROR] nil app bundle ID for share URL: %@
[CRIT] Assertion failed: redirectReason
[DEBUG] Opening in web browser (reason: %@) %@
[ERROR] Can't open "%@" using default web browser
[CRIT] Assertion failed: pathRelativeToRoot
[CRIT] Assertion failed: isInDocsFolder
[DEBUG] server provided backoff %.03fs (delay %.03fs)
[DEBUG] sync backoff %.03fs
[CRIT] UNREACHABLE: invalid length: %ld
[CRIT] Assertion failed: _syncUpBudget && _syncUpThrottle && _syncDownThrottle
[DEBUG] associating %@ with %@
[CRIT] Assertion failed: !_activated
[DEBUG] 
%llx %s container %@
[CRIT] Assertion failed: _delegate
[CRIT] Assertion failed: _defaultAppLibrary
[DEBUG] Activation done
[DEBUG] 
%llx deactivating %@
[CRIT] Assertion failed: _activated
[WARNING] Container needs reset - %lu
[WARNING] Server zone has been moved to cloud docs
[WARNING] Server tells us we need to redo PCS prep
[DEBUG] Not considering %@ for sync bubble tasks because sync is blocked
[DEBUG] 
%llx disconnecting listener so that they gather again
[DEBUG] Sync: updated sync-up throttle: %@
[DEBUG] Ignoring sync state change because sync is disabled for this container
[DEBUG] sync state changed: %@, was %@
[DEBUG] Asking for sync up but we never synced down, do that first
[DEBUG] %@ sync state changed, was %@
[DEBUG] 
%llx scheduling zone creation operation for %@
[DEBUG] 
%llx finished zone creation with error: %@
[DEBUG] added %@ as a sync-down dependency of %@
[DEBUG] removed %@ as a sync-down dependency of %@
[INFO] 
%llx %@: starting sync down
[DEBUG] we're not activated anymore, not syncing-down immediately
[DEBUG] adding sync down dependency: %@
[DEBUG] Sync: updated sync-down throttle: %@
[CRIT] Assertion failed: _syncDownOperation == nil
[CRIT] Assertion failed: _syncUpOperation == nil
[DEBUG] Sync: %@ is already in sync, odd
[CRIT] UNREACHABLE: We are alreadying syncing but we tried to sync again
[DEBUG] 
%llx Sync: considering sync operation for %@
[DEBUG] Sync-up has no global budget for more than 10s: %.1fs (%@)
[DEBUG] Sync-up has no budget for more than 10s: %.1fs (%@)
[DEBUG] Sync-up is throttled for more than 10s: %.1fs (%@)
[DEBUG] Sync-up retry-after is over 10s: %.1fs
[DEBUG] sync-down is throttled for more than 10s: %.1fs (%@)
[DEBUG] Sync: trying to start sync up
[DEBUG] Sync: starting sync up with cost:%.1f
[DEBUG] Sync: nothing to sync up
[DEBUG] Sync: items to sync-up are throttled for another %.1fs
[DEBUG] Executing cancelled op %@ so operations waiting on it can proceed
[CRIT] UNREACHABLE: Forcing cancel on sync op
[WARNING] Sync is blocked for testing
[DEBUG] No sync required anymore at that time
[DEBUG] Not ready to sync yet, sleeping for %.3fs
[DEBUG] Not learning anything about %@ because the update was dropped: %@
[DEBUG] Not learning anything about %@ because the server merged ETag %@ to produce %@
[DEBUG] Learn structural ETag for %@: %@
[DEBUG] Learn content ETag and Last Editor for %@: %@, %@
[DEBUG] Learn content ETag for %@: %@
[DEBUG] 
%llx Sync: completed sync up for %@, cost:%.1f, itemCount:%llu %@
[DEBUG] decreasing sync-up batch size since server says we exceeded limits
[DEBUG] Sync: requestID:%llu cancelled
[DEBUG] Sync: requestID:%llu failed sending: %@
[ERROR] Sync: requestID:%llu failed sending: %@
[DEBUG] Sync: requestID:%llu succeeded
[DEBUG] Sync: updated sync-up throttle: %@
      and container state: %@
[DEBUG] 
%llx checking if we need to show the iCloud Drive App installation notification
[DEBUG] still no documents in the container, not showing installation notification
[DEBUG] Queueing sync barrier sync down for %@
[DEBUG] Client zone is already idle
[DEBUG] Enqueue handler block because client is busy
[DEBUG] Not resuming sync token because %p is still in flight
[NOTICE] signaling sync down waiters
[DEBUG] Sync: updated sync-down throttle: %@
      and container state: %@
[WARNING] marked %lld items rejected after cross zone move
[CRIT] Assertion failed: _requestID == 0 || requestID <= _requestID
[DEBUG] Server Zone has caught up, so we can now re-scan to scrub for turds on %@
[WARNING] not enumerating in-flight items until we are caught up.
[DEBUG] item acknowledged in requestID:%llu
    local:  %@
    server: %@
    diffs:  %@  learnStructuralEtag:%s  learnContentsEtag:%s
[DEBUG] 
%llx Resolving server-side folded path-match for: %@
[DEBUG] Found a path-match in the server truth: %@
[DEBUG] killing local reserved item for the path-match: %@
[DEBUG] path-match is new, learn new item ID %@ instead of %@
[DEBUG] path-match is known and is an unmodified fault on the file-system: %@
[DEBUG] path-match is known and is a fault on the file-system that moved, but still treating it as if it were there: %@
[DEBUG] path-match is known but live on the file-system: %@
[DEBUG] we couldn't find a suitable path-match, mark the item as rejected
[DEBUG] Sync: requestID:%llu acknowledged
[DEBUG] Sync: just a new sync down without new sync up since requestID:%llu
[WARNING] Marking latest sync request failed because the requestIDs differ %llu vs %llu for %@
[DEBUG] 
%llx cross zone move documents from %@ to %@
[DEBUG] cleaning up %@
[CRIT] Assertion failed: !document.needsReading || db.changes > 0
[CRIT] UNREACHABLE: can't prepare cross move items! %@
[CRIT] Assertion failed: db.changes == 0
[CRIT] UNREACHABLE: can't cross move items! %@
[NOTICE] cross zone moved %lld items from %@ to %@!
[ERROR] can't save cross zone move state: %@
[ERROR] can't save cross zone move state for appLibrary %@: %@
[ERROR] can't save destination zone: %@
[CRIT] Assertion failed: self._hasAllItemsDidUploadHandlers
[WARNING] calling the upload handler because sync is failing: %@
[DEBUG] Completed upload for all items for %@
[DEBUG] Still need to sync up %@ more items for sync bubble for %@
[DEBUG] can't signal faulting watchers; %@
[DEBUG] Tombstones with ranks are gone: %@
[DEBUG] Signaling that tombstones can be collected in %@
[CRIT] UNREACHABLE: implement this in subclass
[CRIT] UNREACHABLE: must implement in subclass
[WARNING] calling and removing all share acceptance blocks
[DEBUG] 
%llx waiting for item %@ to be on disk
[WARNING] %@ and %@ must be non nil to register action
[DEBUG] 
%llx done waiting for item to be on disk
[WARNING] %@ is resetting or broken structure.  Not waiting on faulting of %@
[WARNING] %@ is dead, not waiting on faulting.
[DEBUG] Waiting for %@ to be available
[DEBUG] network is unreachable, don't wait
[DEBUG] Lost item %@ is available
[DEBUG] Could not locate lost item %@
[DEBUG] Item %@ already available
[DEBUG] 
%llx waiting for item %@ to be downloaded
[DEBUG] 
%llx done waiting for item to be downloaded
[WARNING] %@ is resetting, broken structure.  Not waiting on donwload of %@
[DEBUG] Waiting for %@ to be downloaded
[DEBUG] Item %@ already downloaded
[WARNING] Cancelling sync down operation that uses a background session
[WARNING] Cancelling sync up operation because we need to sync down now
[DEBUG] 
%llx waiting sync down to complete for item %@
[DEBUG] 
%llx done waiting for sync down to complete
[WARNING] %@ is resetting or broken structure.  Not waiting on sync down of %@
[DEBUG] Waiting for sync down for %@ in %@
[DEBUG] 
%llx Cancelling all share acceptance callbacks due to unreachable network
[DEBUG] Injecting NeedsOSUpgrade fault for record %@
[ERROR] Failed to create package: %@
[WARNING] Failed to anchor package %@ at %@: %@
[CRIT] Assertion failed: _serverZone
[CRIT] Assertion failed: [serverZone isKindOfClass:[BRCPrivateServerZone class]]
[DEBUG] 
%llx %s private container %@
[WARNING] problem report for %@ wasn't acked
[DEBUG] problem report for %@ completed
[DEBUG] zone-health changed for %@ previous %@ new %@
[WARNING] We had a problem and the zone is healthy again, resetting the zone
[WARNING] Server told us the zone is healthy again, but we didn't have a problem
[DEBUG] 
%llx recomputing app sync block state for %@
[DEBUG] updating sync state to be %s for %@
[DEBUG] sync remaining %s for %@
[DEBUG] Queueing faults live barrier for %@
[CRIT] UNREACHABLE: there should never be more than one match for that query (parentID: %s, name: %s)
[CRIT] UNREACHABLE: reset needed for %@ because the hierarchy is deeper than %u under %@ when looking for %@
[CRIT] UNREACHABLE: block and %s must be non nil to register action
[DEBUG] Waiting for sync down for alias to %@ in %@
[DEBUG] 
%llx Resolving alias clash between %@ and %@
[DEBUG] silently deleting newer item %@
[DEBUG] oldest alias still resolves at %@
[DEBUG] deleting newest alias at %@
[DEBUG] oldest alias doesn't resolve, moving to newest path at %@
[CRIT] Assertion failed: self.progress.completedUnitCount >= 0
[CRIT] UNREACHABLE: total unit count should always be greater or equal to completed unit count; %@
[CRIT] UNREACHABLE: a finished progress should have at least one transfer tracked; %@
[CRIT] UNREACHABLE: future progress state isn't valid (unitCount: %lld)
[WARNING] Progress: observing a progress that doesn't have a doc ID
[WARNING] Progress: observing a progress that doesn't have a progress group
[DEBUG] Progress: ignore delta update because %@ for doc %@ isn't tracked anymore
[CRIT] UNREACHABLE: negative delta update for doc %@; %lld -> %lld
[DEBUG] Progress: ignore delta update ([%lld -> %lld] < %@) for doc %@ because it was counted as part of the resume operation
[DEBUG] Progress: ignore delta update ([%lld -> %lld] == %@) for doc %@ because it was counted as part of the resume operation
[DEBUG] Progress: %s finished for doc %@
[CRIT] Assertion failed: item.desiredVersion
[DEBUG] Progress: ignore download for doc %@ because its version size is equal to zero
[DEBUG] Progress: update details for download of doc %@ because it was edited
[DEBUG] Progress: start tracking download for doc %@ because document is pending-download (versionSize: %lld)
[DEBUG] Progress: doc %@ was reparented outside the visible scope of iCloud Drive, force deletion
[DEBUG] Progress: doc %@ is now dead, force deletion
[CRIT] Assertion failed: item
[DEBUG] Progress: stop publishing global progress
[CRIT] Assertion failed: progress
[CRIT] Assertion failed: group == BRCProgressUploadGroup || group == BRCProgressDownloadGroup
[WARNING] Progress: attempt to add an upload progress for doc %@ without a version size
[WARNING] Progress: attempt to add an upload progress more than once for doc %@
[DEBUG] Progress: start tracking upload progress for doc %@ (progressSize: %lld)
[WARNING] Progress: attempt to add a download progress for doc %@ without a version size
[WARNING] Progress: attempt to add a download progress more than once for doc %@
[CRIT] Assertion failed: [self->_downloads.versionSizes[documentID] longLongValue] == progress.totalUnitCount
[WARNING] Progress: progress for doc %@ has a negative value of completed unit count (completedSize: %lld (-%@), progressSize: %lld)
[DEBUG] Progress: resume tracking download progress for doc %@ (completedSize: %lld (-%@), progressSize: %lld)
[DEBUG] Progress: start tracking download progress for doc %@ (progressSize: %lld)
[DEBUG] Progress: stop tracking upload for doc %@ because transfer failed (toState: %s)
[WARNING] Progress: upload failed for doc %@ without being tracked (syncUpState: %d, toState: %s)
[DEBUG] Progress: stop tracking download progress for doc %@ because transfer failed (toState: %s)
[CRIT] Assertion failed: documentID
[CRIT] Assertion failed: progressGroup
[CRIT] Assertion failed: _globalProgress == nil
[CRIT] Assertion failed: completedUnitCount >= 0
[CRIT] Assertion failed: (!group && totalUnitCount >= 0) || totalUnitCount > 0
[CRIT] Assertion failed: !group || BRCProgressGroupPrettyPrint(group.intValue)
[DEBUG] Progress: new global progress to track %s
[DEBUG] Progress: defer publish while waiting first sync-down of default zone
[CRIT] Assertion failed: _operationTimer
[CRIT] UNREACHABLE: Invalid suspend count (_operationTimerSuspendCount: %u)
[CRIT] Assertion failed: _uploads == nil
[CRIT] Assertion failed: totalUnitCount >= completedUnitCount
[DEBUG] Progress: take over current progress because uploads have priority
[CRIT] Assertion failed: _downloads == nil
[DEBUG] Progress: take over on current progress because downloads have priority
[CRIT] Assertion failed: _globalProgress.indeterminate
[WARNING] Progress: can't proceed to upload cancelation without doc ID
[CRIT] Assertion failed: versionSize
[DEBUG] Progress: cancelling upload for doc %@ (syncUpState: %d, willRetry: %d, pendingQuota:%d, hasProgress: %d)
[WARNING] Progress: forcing pending quota to NO for doc %@ because transfer isn't retryable
[DEBUG] Progress: upload progress for doc %@ has no previous completed unit count
[WARNING] Progress: can't proceed to download cancelation without doc ID
[DEBUG] Progress: cancelling download for doc %@ (destroyIfLast: %d, willRetry: %d, hasProgress: %d)
[DEBUG] Progress: keep %@ unit counts completed for doc %@
[WARNING] Progress: download progress for doc %@ has no previous completed unit count
[DEBUG] Progress: did finish global progress (group: %s, reason: %s, userVisible: %d)
[CRIT] Assertion failed: transferInfo.sumOfCompletedUnitCountDelta == 0
[CRIT] Assertion failed: transferInfo.sumOfTotalUnitCountDelta == 0
[CRIT] Assertion failed: _uploads.versionSizes.count == 0
[CRIT] Assertion failed: _uploads.childProgresses.count == 0
[CRIT] Assertion failed: _uploads.previousUnitCounts.count == 0
[CRIT] Assertion failed: _uploads.outOfQuotaDocIDs.count == 0
[CRIT] Assertion failed: _downloads.versionSizes.count == 0
[CRIT] Assertion failed: _downloads.childProgresses.count == 0
[CRIT] Assertion failed: _downloads.previousUnitCounts.count == 0
[CRIT] Assertion failed: _downloads.resumeUnitCounts.count == 0
[DEBUG] Progress: resume download progress (%lu item downloading)
[DEBUG] Progress: resume indeterminate progress (%lu app libraries waiting initial faults)
[DEBUG] Progress: %@ waits to have its initial faults live
[DEBUG] Progress: start tracking initial faults live
[DEBUG] Progress: %@ has its initial faults live
[DEBUG] Progress: stop tracking initial faults live because all visible app libraries have their faults live
[DEBUG] Progress: publish ongoing progress because default zone has completed its first sync-down
[WARNING] Progress: ignore upload for doc %@ because its version size is equal to zero.
[DEBUG] Progress: stop tracking upload for doc %@ because document is in needs-read
[WARNING] Progress: doc %@ shouldn't be uploading before its status is set to needs-upload
[DEBUG] Progress: cancelling upload for doc %@ because its needs to be uploaded again
[CRIT] Assertion failed: [self->_uploads.versionSizes[documentID] longLongValue] == versionSize
[DEBUG] Progress: start tracking upload for doc %@ because document is needs-upload (versionSize: %lld, transferSize: %lld)
[DEBUG] Progress: resume upload for doc %@ because document is needs-sync-up but not tracked yet (versionSize: %lld, transferSize: %lld)
[DEBUG] Progress: cancelling upload for doc %@ because its wasn't uploaded
[CRIT] Assertion failed: syncUpSize > 0
[DEBUG] Progress: stop tracking upload for doc %@ because document is idle (syncUpSize: %lld)
[DEBUG] Progress: stop tracking download progress of doc %@ (reason: %s)
[DEBUG] Progress: stop tracking upload progress of doc %@ (reason: %s)
[CRIT] Assertion failed: fromSize <= toSize
[CRIT] Assertion failed: versionSize <= progressSize
[CRIT] Assertion failed: delta >= 0
[CRIT] Assertion failed: nextNotifRank >= _nextNotifRank
[CRIT] Assertion failed: nextPackageItemRank >= _nextPackageItemRank
[CRIT] Assertion failed: !_serverZone.isSharedZone || (_sharingOptions & BRCSharingItemHasShareID) == BRCSharingItemHasShareID || _st.state == BRC_ITEM_STATE_TOMBSTONE
[CRIT] Assertion failed: self.isFSRoot
[CRIT] UNREACHABLE: can't find the appLibrary of %@
[CRIT] UNREACHABLE: unsupporter server item type: %d
[CRIT] UNREACHABLE: unknown item type: %d
[CRIT] Assertion failed: !_fetched.byFileID
[CRIT] Assertion failed: matchByFileID.st.fileID.unsignedLongLongValue == _pathOfItem.fileID
[CRIT] Assertion failed: !_fetched.byDocumentID
[CRIT] Assertion failed: matchByDocumentID.isDocument
[CRIT] Assertion failed: matchByDocumentID.st.documentID.unsignedLongLongValue == _pathOfItem.documentID
[CRIT] API MISUSE: lookups should not be used on paths of type: %s
[DEBUG] looked up %@ by fileID:%llu
[CRIT] Assertion failed: self.isNonDesktopAppLibraryRoot || self.isDocuments
[CRIT] UNREACHABLE: we should not have alias uuid types anymores
[CRIT] UNREACHABLE: unknown itemID type
[CRIT] UNREACHABLE: invalid library rowid
[CRIT] UNREACHABLE: Failed to parse Alias UUID
[CRIT] UNREACHABLE: invalid UUID: %s
[CRIT] UNREACHABLE: invalid enclosure uuid - %@
[CRIT] %@
[CRIT] Assertion failed: object->item_code == BRCItemIDCodeDocuments || object->item_code == BRCItemIDCodeZoneRoot
[CRIT] Assertion failed: object->item_code == BRCItemIDCodeSharedUUID || object->item_code == BRCItemIDCodeSharedZoneRoot
[CRIT] UNREACHABLE: invalid BRCItemID (%@)
[CRIT] UNREACHABLE: unmigrated? invalid BRCItemID (%@) - %d
[CRIT] UNREACHABLE: decoding an unknown kind of itemid
[CRIT] UNREACHABLE: encoding an item id with an unknown kind
[CRIT] Assertion failed: rio.app_lib_rowid
[CRIT] Assertion failed: uio.app_lib_rowid
[CRIT] UNREACHABLE: unknown itemID kind
[CRIT] UNREACHABLE: unparsable mangled itemID: %s
[CRIT] Assertion failed: len == sizeof(uuid_t)
[CRIT] UNREACHABLE: Invalid Shared ItemID
[CRIT] Assertion failed: argc == 2
[CRIT] Assertion failed: len == sizeof(UUIDItemObject)
[CRIT] UNREACHABLE: Invalid Alias ItemID
[ERROR] unable to read package header %@ with version %d - %@
[CRIT] Assertion failed: _reader
[ERROR] Input stream encountered an error %@
[DEBUG] Adding %@ to the manifest
[ERROR] Failed setting quarantine info for item %@: %@
[ERROR] Failed to open pkg item at %@; error %d (%s)
[CRIT] UNREACHABLE: Invalid args in %@
[ERROR] openat failed to apply metadata for manifest item %@; error %d (%s)
[ERROR] fsetattrlist failed for pkg item %@; error %d (%s)
[CRIT] UNREACHABLE: we should have downloaded this file if there is nothing live
[ERROR] Failed to open live pkg item at %s; error %d (%s)
[ERROR] Failed to stat live pkg item at %s; error %d (%s)
[ERROR] clonefileat(%d, %@, %d, %@); error %d (%s)
[DEBUG] cloned at %@ for package staged in %@
[ERROR] linkat(%d, %@, %d, %@); error %d (%s)
[DEBUG] hardlinked at %@ for package staged in %@
[DEBUG] copied at %@ for package staged in %@
[CRIT] UNREACHABLE: No reader to stage package at %s
[CRIT] UNREACHABLE: Package has been corrupted on the serverAsking for asset index out of bounds %lu vs %lu in package: %@
[CRIT] UNREACHABLE: relpath should always exist
[DEBUG] %@ already exists in stage for package %@
[ERROR] Failed to mkdir %@ for package %@
[ERROR] Failed to create symlink %@ -> %@ for package %@
[CRIT] UNREACHABLE: Package has been corrupted in the cloudAsking for asset index out of bounds %lu vs %lu in package: %@
[ERROR] renameat(-1, %@, %d, %@); error %d (%s)
[DEBUG] staged from %@ to %@ in %@
[CRIT] UNREACHABLE: We didn't fetch the corresponding pkg item from the server, but we were also not given a path to hardlink it from! (item: %s)
[CRIT] UNREACHABLE: invalid item type: %d
[CRIT] UNREACHABLE: xattr index is out of bounds %ld of total %ld
[CRIT] UNREACHABLE: Can't find xattr at index %ld
[ERROR] Failed to read xattrs blob: %@
[ERROR] Failed to apply xattrs to file descriptor: %@
[DEBUG] Successfully applied xattrs %@ to package item %@
[ERROR] unable to stat %@ for package %@; error %d (%s)
[ERROR] Unable to add item to manifest: %@
[DEBUG] Finished staging package for %@. Item count:%lu.  Asset index:%lu
[DEBUG] containers matching '%@': %@
[DEBUG] %s: %s error: %@
[DEBUG] 
%llx query for %@ starting with batchSize:%u
[DEBUG] created query %@ from cursor:%@
[DEBUG] created query %@ from query:%@
[DEBUG] 
%llx handling result of %@: %@
[ERROR] record %@ is not a content record, shouldn't be part of query %@
[ERROR] record %@ is not shared, shouldn't be part of query %@
[CRIT] UNREACHABLE: unable to parse itemID from %@ in query %@
[CRIT] UNREACHABLE: record %@ has no etag in query %@
[DEBUG] fetched shared record %@ with etag:%@ in query %@
[DEBUG] 
%llx fetching shares on %@
[DEBUG] 
%llx migration-query '%@' %@ for %@ starting from cursor:%@
[DEBUG] skipping migration '%@' because there is no server zone yet: %@
[CRIT] UNREACHABLE: unknown migration %s
[DEBUG] 
%llx migration-query '%@' %@ completed
[DEBUG] share-query progressed from cursor:%@ to cursor:%@
[CRIT] UNREACHABLE: BROKEN STRUCTURE
[CRIT] UNREACHABLE: -[BRContainer isOverQuota] shouldn't be called by the daemon.
[CRIT] UNREACHABLE: -[BRContainer currentStatus] shouldn't be called by the daemon.
[CRIT] UNREACHABLE: -[BRContainer lastServerUpdate] shouldn't be called by the daemon.
[CRIT] Assertion failed: _itemID
BRCSharingModifyShareOperation/? (subclass activity missing)
[WARNING] Couldn't find item %@ in zone %@
[DEBUG] requesting sharing identity on %@
[CRIT] Assertion failed: contentsRecord
[CRIT] UNREACHABLE: no records and no error
[CRIT] UNREACHABLE: no error and no sharing key
[DEBUG] Got sharing identity for share - %@
[ERROR] Fetching sharing identity failed - %@
[CRIT] UNREACHABLE: no public sharing identity. avoiding breaking iwork shares
[DEBUG] Yanking the routing key from the server for %@
[CRIT] UNREACHABLE: no routing key on share identity prepared record
[CRIT] Assertion failed: [self->_share.publicSharingIdentity isEqualToData:self->_sharingIdentityPreparedRecord.encryptedPublicSharingKey]
[DEBUG] Requesting iwork sharing identity on %@
[CRIT] UNREACHABLE: sharing identity isn't encrypted data
[CRIT] UNREACHABLE: base token isn't a string
[CRIT] UNREACHABLE: no base token or sharing identity and no error
[DEBUG] Got iWork sharing identify for share - %@
[ERROR] Fetching iWork sharing identity failed - %@
sharing/save-share
[CRIT] UNREACHABLE: no share record
[ERROR] Failed with baseTokenError=%@
[ERROR] Couldn't get contents record for %@, %@
[CRIT] UNREACHABLE: couldn't get contents record
[DEBUG] Saving %@%@ for share op %@
[CRIT] UNREACHABLE: got an unexpected number of shares saved
[ERROR] failed saving share %@: %@
[DEBUG] finished saving share %@
[CRIT] Assertion failed: [save[1].recordType isEqualToString:kBRRecordTypeContent]
[CRIT] Assertion failed: [save[0].recordType isEqualToString:CKRecordTypeShare]
[DEBUG] Saved share %@
sharing/destroy-share
[CRIT] UNREACHABLE: got an unexpected number of shares deleted
[ERROR] failed to destroy share %@: %@ in %@
[DEBUG] destroyed share %@ in %@
sharing/remove-all-participants
[CRIT] UNREACHABLE: got an unexpected number of shares unshared
[ERROR] failed to unshare share %@: %@ in %@
[DEBUG] unshared share %@ in %@
sharing/lookup-participants
[ERROR] failed share participant lookup for %@ - %@
[CRIT] UNREACHABLE: Unexpected number of share participants: expected %lu got %lu
[DEBUG] fetched share participants: %@
sharing/modifyAccess
[CRIT] UNREACHABLE: no dict and no error
[ERROR] Failed %@ access to %@ - %@
[DEBUG] %@ access to %@
sharing/copyParticipantToken
[CRIT] UNREACHABLE: No base token so the share token we would return would be invalid for iwork
[CRIT] UNREACHABLE: no error and no key
sharing/prepareFolderPCS
sharing/copy-shareURL
[DEBUG] Finished copying URL %@ for share %@ error %@
[CRIT] UNREACHABLE: Couldn't get a share URL
[DEBUG] Share: %@
[DEBUG] Prepared record: %@
[CRIT] UNREACHABLE: Couldn't get a share URL for %@
sharing/copy-shortToken
[CRIT] UNREACHABLE: No short token found on record
[CRIT] Assertion failed: _multipleItemsInteractiveSchedulingCount >= 0
[DEBUG] 
%llx force scheduling interactive transfers
[DEBUG] cancelling oldest batch (%@)
[CRIT] Assertion failed: oldestBatchOperation
[DEBUG] waiting for the next scheduling to finish
[DEBUG] Force scheduling a new high priority batch
[CRIT] Assertion failed: operation
[DEBUG] adding operation %@ to the transfer stream
[CRIT] Assertion failed: _isWaitingForTransferBatch
[DEBUG] 
%llx cancelling entry %@ in %@
[CRIT] UNREACHABLE: this operation should have been cancelled
sharing/access-token
[CRIT] UNREACHABLE: encrypted access token %@ is of unexpected type
[CRIT] UNREACHABLE: reference identifier %@ is of unexpected type
[CRIT] Assertion failed: !info || info.isSymLink
[DEBUG] updating symlink target to %@
[DEBUG] no change
create-zone
[DEBUG] 
%llx Sync: create cloudkit zone for %@
[CRIT] Assertion failed: !_optimisticSubscribe
[CRIT] Assertion failed: savedZones.count == 1
[CRIT] Assertion failed: !self->_syncContext.isShared
[DEBUG] optimistic subscribe failed with Zone Not Found, try to create the zone first
sync/zone-purge
[DEBUG] deleted %@ on server
[DEBUG] deleted shared zones associated to %@ on server
[ERROR] latest GC started %lld seconds in the future
[CRIT] Assertion failed: _persistedState == nil
[CRIT] Assertion failed: _deviceID != 0
[ERROR] Unable to exclude '%@' from backups: %@
[CRIT] Assertion failed: _stageDirectoryFileID[dirIndex] != 0
[CRIT] Assertion failed: _persistedState
[CRIT] Assertion failed: fileID != 0
[DEBUG] 
%llx kicking apply changes: %ld unflushed staged file IDs
[DEBUG] 
%llx file %llu might have been unlocked
[ERROR] could not open locked file, not watching it; error %d (%s)
[DEBUG] forgetting locked file %@
[ERROR] fstat(%d) '%@' failed; error %d (%s)
[WARNING] '%@' is not a directory deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] unlink('%@') failed deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x; error %d (%s)
[WARNING] '%@' is not on the same volume as the root deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] mkdir('%@') withIntermediateDirectories failed: %@
[ERROR] mkdir('%@') failed; error %d (%s)
[ERROR] fstat('%@') failed; error %d (%s)
[ERROR] mkdirat(%d, '%@') failed; error %d (%s)
[ERROR] symlinkat('%@', %d, '%@') failed; error %d (%s)
[ERROR] BRCOpenAt(%d, %@, O_RDONLY) failed; error %d (%s)
[ERROR] BRCOpenAt(%d, %@, O_CREAT|O_RDWR|O_EXCL); error %d (%s)
[ERROR] fcopyfile(%d, %d, NULL, COPYFILE_DATA); error %d (%s)
[ERROR] BRCRenameAt(%d, %@, %d, %@, 0); error %d (%s)
[DEBUG] can't open by fileID:%llu; error %d (%s)
[WARNING] Abort making live: unable to flock %@; error %d (%s)
[DEBUG] renameat(-1, '%@', %d, '%@', RENAME_SWAP) failed for fileID=%llu, ; error %d (%s)
[DEBUG] swapped '%@' and '%@' fileID=%llu
[DEBUG] renameat(-1, '%@', %d, '%@') failed for fileID=%llu, ; error %d (%s)
[DEBUG] renamed from '%@' to '%@' in parentFileID:%llu
[ERROR] fsetattrlist failed; error %d (%s)
[ERROR] Unable to remove xattrs: %@
[CRIT] UNREACHABLE: Failed to load structure xattrs from the database for signature: %s
[ERROR] Unable to set structural xattrs for signature %@: %@
[CRIT] UNREACHABLE: Failed to load version xattrs from the database for signature: %s
[ERROR] Unable to set finder Tags for %@: %@
[DEBUG] deleting (%d, '%@') asynchronously
[DEBUG] renameat(%d, '%@', %d, '%@') failed; error %d (%s)
[ERROR] failed removing documentID for %@; error %d (%s)
[DEBUG] moved (%d, '%@') to the graveyard at '%@' for %@
[WARNING] Abort making live: path doesn't exist %@
[CRIT] Assertion failed: relpath
[DEBUG] moved from %@
to '%@' in old version stage
[DEBUG] Failing the move to graveyard because the item is busy
[DEBUG] moved from %@
to '%@' in graveyard
[DEBUG] fileID:0 doesn't exist in stage (metadata-only update)
[DEBUG] fileID:%llu is in the graveyard under parentFileID:%llu
[DEBUG] can't open src to transfer documentID:%u from fileID:%llu to fileID:%llu; error %d (%s)
[DEBUG] src parentFileID:%llu not in graveyard, can't transfer documentID:%u from fileID:%llu to fileID:%llu; error %d (%s)
[DEBUG] documentID mismatch on fileID:%llu (expected:%u actual:%u) not transferring to fileID:%llu
[DEBUG] can't open dst to transfer documentID:%u from fileID:%llu to fileID:%llu; error %d (%s)
[ERROR] failed transferring documentID:%u from fileID:%llu to fileID:%llu; error %d (%s)
[DEBUG] transferred documentID:%u from fileID:%llu to fileID:%llu
[DEBUG] running GC because we are in low disk space
[ERROR] fts_open(%@) failed; error %d (%s)
[ERROR] fts_read() failed for path %s; error %d (%s)
[DEBUG] starting garbage collection at %ld
[DEBUG] removing staged file for upload: %@
[DEBUG] removing staged file with id %llu
[DEBUG] removing staged file for download: %@ device:%d ino:%lld
[DEBUG] removing deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[DEBUG] latest GC:%ld; previous GC:%ld
[DEBUG] closing
[CRIT] Assertion failed: minDelta >= 0
[CRIT] Assertion failed: maxDelta > minDelta
[DEBUG] running GC at startup after %lld seconds; %@
[DEBUG] skipping GC at startup after %lld seconds; %@
[DEBUG] running GC in XPC activity after %lld seconds; %@
[DEBUG] skipping GC in XPC activity after %lld seconds; %@
[ERROR] fgetattrlist(%d) failed; error %d (%s)
[ERROR] failed allocating documentID for fileID:%llu; error %d (%s)
[CRIT] UNREACHABLE: DocumentID was still 0 after marking tracked
[ERROR] Unable to apply %s; error %d (%s)
[ERROR] Unable to remove %s; error %d (%s)
[DEBUG] 
%llx physical URL request for '%@'
[CRIT] UNREACHABLE: What's this path???
[DEBUG] Not in the %@ namespace, not for us
[DEBUG] can't parse version path '%@', probably not an iCloud version, allow it
[ERROR] Logged out: can't compute physical URL for '%@'
[ERROR] can't find container for path '%@'
[ERROR] can't find live item for path '%@'
[DEBUG] Version already local, we're good!
[DEBUG] 
%llx coordinated read request for '%@' (%@)
[ERROR] Logged out: can't grant coordination to reader %@
at path '%@'
[DEBUG] Found a download operation already pending, piggy back on it
[ERROR] can't find app library for mangled ID '%@', path '%@'
[ERROR] failed downloading version to path '%@': %@
[DEBUG] migration completed already
[DEBUG] No extensions to migrate
[DEBUG] Migrating %lu extensions
[CRIT] Assertion failed: ownerName
[CRIT] Assertion failed: ownerDisplayName
[DEBUG] Preparing to send batch with client notif rank %lld
[DEBUG] Preparation done.  Sending the batch
[WARNING] dropping Spotlight index
[ERROR] failed deleting ranks from spotlight_ranks: %@
[DEBUG] deleted ranks from spotlight_ranks successfully
[CRIT] Assertion failed: index
[ERROR] failed dropping Spotlight index: %@
[DEBUG] dropped Spotlight index successfully
[DEBUG] Learning index acked rank %llu (flushed rank %llu)
[DEBUG] Finished indexing for now
[CRIT] Assertion failed: task
[CRIT] Assertion failed: taskName
[WARNING] Giving up on %s due to too many failures
[CRIT] Assertion failed: !_failureTimer
[DEBUG] waiting %.3f secs to retry %s
[ERROR] Failed saving state %@
[WARNING] Dropping spotlight index for %@ due to a reset
[ERROR] Failed to delete searchable items for mangledID %@: %@
[ERROR] Couldn't find container for row %lld.  Continuing anyways
[ERROR] Failed indexing batch: %@
[ERROR] failed dropping Spotlight index - %@
[CRIT] UNREACHABLE: -br_displayName returned nil for account: %@
[DEBUG] 
%llx indexing in spotlight...
[DEBUG] fetching client state
[DEBUG] 
%llx received spotlight client state %@, error: %@
[CRIT] Assertion failed: [error.domain isEqualToString:CSIndexErrorDomain]
[ERROR] failed fetching client state with xpc error, retrying.
[ERROR] failed fetching client state, Starting index from scratch
[WARNING] Account ID doesn't match fetched value: dropping Spotlight index
[CRIT] UNREACHABLE: %@ called with bad state: BRCSpotlightClientStateIsFetchingClientState
[CRIT] UNREACHABLE: unknown client state
[DEBUG] Canceling spotlight indexer.
[WARNING] dropping Spotlight index to reindex all items
[WARNING] dropping Spotlight index to reindex %lu items
[CRIT] UNREACHABLE: We don't expect to ever be asked to re-index specific items
[DEBUG] Publishing download progress for %@
[CRIT] UNREACHABLE: thumbnail is not a CKAsset: %@
dl-thumbnail
[DEBUG] 
%llx computing desired packages indices
[CRIT] UNREACHABLE: Package inside %@ is corrupted in the cloud
Asking for asset index out of bounds %lu vs %lu in package: %@
[CRIT] Assertion failed: false
[DEBUG] Desired indices are: %@ (itemCount: %ld)
[CRIT] UNREACHABLE: file content is not a CKAsset: %@
[CRIT] UNREACHABLE: finder bookmark without content: %@
[CRIT] UNREACHABLE: pkg content is not a CKPackage: %@
[CRIT] UNREACHABLE: package manifest is not a CKAsset: %@
[CRIT] UNREACHABLE: xattrs package is not a CKAsset: %@
[CRIT] UNREACHABLE: unknown type for downloaded object %@
dl-content
[CRIT] Assertion failed: !item.isFinderBookmark
[CRIT] UNREACHABLE: There should be a file content property in %@
[CRIT] UNREACHABLE: no fileURL for %@ in %@
[DEBUG] 
%llx Downloader[%lld] staging %@
[CRIT] Assertion failed: vRecord
[CRIT] Assertion failed: ![vRecord.recordID.zoneID.ownerName isEqualToString:CKCurrentUserDefaultName] || _secondaryRecord
[CRIT] Assertion failed: [vRecord.etag isEqualToString:_etag]
[ERROR] Can't deserialize %@
[DEBUG] received version %@ %@
[ERROR] Can't open %@ to set metadata; error %d (%s)
[ERROR] Failed to attach thumbnail to version
dl-version
[ERROR] Unable to stage item in Genstore: %@
[DEBUG] Created addition staged at URL: %@, creation info: %@
[CRIT] Assertion failed: itemID.isNonDesktopAppLibraryRoot
[CRIT] API MISUSE: can't save a zone root item
[CRIT] Assertion failed: self.appLibrary.fileID
[CRIT] UNREACHABLE: asking the parent item of a root item
[CRIT] UNREACHABLE: asking the structural bit of a zone root is not supported
[DEBUG] Next event will fire in %fs
[DEBUG] 
%llx Uploader: scheduling retries
[CRIT] Assertion failed: qos_class_self() == QOS_CLASS_UTILITY
[DEBUG] Uploader[%lld]: upload stage set to: %@
[DEBUG] Uploader[%@]: Cancelling upload of %@
[DEBUG] Uploader[%@]: cancelled thumbnail upload: %@
[DEBUG] Uploader[%@]: Cleaning up upload stage: %@
[DEBUG] Uploader[%lld]: state set to %s
[CRIT] UNREACHABLE: can't insert upload throttle for %@: %@
[DEBUG] Uploader[%lld]: created throttle for %@ (%s)
[DEBUG] Uploader: scheduling %lld suspended throttles
[DEBUG] Uploader[%lld]: job has been put back in queue %@
[DEBUG] Uploader: next job to retry in %.3fs
[DEBUG] Uploader: no more jobs to retry
[DEBUG] Kicking uploads for %@
[CRIT] UNREACHABLE: no app library for row ID %@
[CRIT] UNREACHABLE: upload scheduler is exact we should have an item
[DEBUG] Uploader: reached maximum allowed number of thumbnails retrieval (%ld)
[DEBUG] Uploader: below maximum allowed number of thumbnails retrieval (%ld)
[DEBUG] Uploader[%lld]: generating manifest for %@
[DEBUG] Uploader[%lld]: adding package item with deviceID 0x%lx fileID %lu
[WARNING] Failed to write xattrs to url %@: %@
[DEBUG] Uploader[%lld]: adding xattr package item with URL %@ for %@
[WARNING] Failed to add xattrs to xattrs package: %@
[ERROR] failed to create manifest at %@: %@
[CRIT] UNREACHABLE: can't upload an item without a fileID
[DEBUG] Adding CKAssert with deviceID 0x%lx fileID %lu to the record for item %@
[ERROR] Unable to copy thumbnail at '%@' to upload stage: %@
[ERROR] Unable to get thumbnail size at '%@' to upload stage: %@
[DEBUG] generated thumbnail: %@
[ERROR] Couldn't write xattr of size %lu to url: %@; error: %@
[DEBUG] Creation of record for %@ failed: %@
[DEBUG] Uploader[%lld]: assets only record generated: %@
[DEBUG] 
%llx Uploader[%lld]: Done generating thumbnail, building record for %@
[DEBUG] 
%llx Uploader[%lld]: Preparing record for upload of %@
[DEBUG] Uploader[%lld]: generating thumbnail (shouldTransferThumbnail:yes) %@
[DEBUG] Uploader[%lld]: skipping thumbnail (inDocumentScope:%s shouldHaveThumbnail:%s shouldTransferThumbnail:no)
[WARNING] can't duplicate the package %@: %@
[WARNING] can't anchor the package %@ at %@: %@
[CRIT] Assertion failed: pbitem.type != BRFieldPkgItemType_FILE || pbitem.hasSignature
[DEBUG] Handling file modified error: %@
[DEBUG] 
%llx Uploader[%lld]: done with %@ (%@)
[DEBUG] Error is retriable, putting item back in the queue
[ERROR] non recoverable error while uploading %@: %@
[DEBUG] increasing throttle back off for %lld
[CRIT] Assertion failed: ![item isReadAndUploaded]
[CRIT] UNREACHABLE: %@ should be a document
[CRIT] UNREACHABLE: %@ should be needs-upload
[DEBUG] Uploader[%lld]: throttle for %@ doesn't exist anymore
[NOTICE] uploading %ld documents in %@
[DEBUG] 
%llx Uploader[%lld]: %@ failed to sync up because it's out of quota: %@
[CRIT] Assertion failed: _session.clientDB.changes == 1
[DEBUG] 
%llx re-uploading failed items with size less than %@
[DEBUG] 
%llx quota changed from %@ to %@
[DEBUG] updated %@ quota: %lld
[WARNING] can't update quota: %@
[ERROR] Failed fetching zones to prep PCS for %@ - %@
[DEBUG] Prepping PCS for %@ -> %@
[DEBUG] PCS migration %@ for %@
[ERROR] Failed migrating PCS for %@ - %@
[CRIT] Assertion failed: ![BRCDaemon daemon].isInSyncBubble
[CRIT] UNREACHABLE: session wasn't properly closed
[CRIT] UNREACHABLE: db connections weren't properly closed and nillified
[CRIT] Assertion failed: ![_xpcClients containsObject:client]
[CRIT] Assertion failed: [_xpcClients containsObject:client]
[DEBUG] 
%llx closing XPC connections
[DEBUG] invalidating XPC clients: %@
[CRIT] UNREACHABLE: there are still XPC clients around: %@
[DEBUG] 
%llx creating '%@'
[CRIT] can't create directory at '%@': %@
[CRIT] can't retrieve attributes of item at '%s': %@
[CRIT] created directory doesn't have read/write access for owner (permission: %c%c%c%c%c%c%c%c%c%c)
[DEBUG] permissions checked
[ERROR] Unable to open file at path '%@'; error %d (%s)
[DEBUG] flocking '%@'
[ERROR] Unable to lock file at path '%@'; error %d (%s)
[DEBUG] 
%llx excluding %@ from backup
[CRIT] Assertion failed: defaultAppLibrary
[DEBUG] 
%llx rescheduling pending disk throttles
[DEBUG] 
%llx recomputing disk space
[ERROR] failed to create root:'%@': %@
[DEBUG] 
%llx resuming account session
[CRIT] Assertion failed: _accountWaitOperation.operationFailureThrottle
[DEBUG] 
%llx closing account session
[DEBUG] 
%llx cancelling fs-events monitor of type: %lu
[DEBUG] cancelling misc operation: %@
[DEBUG] 
%llx cancelling _defaultScheduler...
[DEBUG] 
%llx cancelling _fsWriter...
[DEBUG] 
%llx cancelling _fsReader...
[DEBUG] 
%llx cancelling _fsUploader...
[DEBUG] 
%llx cancelling _fsDownloader...
[DEBUG] 
%llx cancelling _applyScheduler...
[DEBUG] 
%llx cancelling _notificationManager...
[DEBUG] 
%llx cancelling _spotlightIndexer...
[DEBUG] 
%llx cancelling _shortcutService...
[DEBUG] waiting for misc operation: %@
[DEBUG] 
%llx closing _defaultScheduler...
[DEBUG] 
%llx closing _fsWriter...
[DEBUG] 
%llx closing _fsReader...
[DEBUG] 
%llx closing _fsUploader...
[DEBUG] 
%llx closing _fsDownloader...
[DEBUG] 
%llx closing _applyScheduler...
[DEBUG] 
%llx closing _notificationManager...
[DEBUG] 
%llx closing _spotlightIndexer...
[DEBUG] 
%llx closing _shortcutService...
[DEBUG] 
%llx cancelling and closing our containers and sync context...
[DEBUG] preventing creation of new sync context...
[DEBUG] 
%llx cancelling %@...
[DEBUG] 
%llx closing %@...
[CRIT] Assertion failed: zone.delegate == nil
[CRIT] Assertion failed: [self hasRootForSyncedFolderType:folderType]
[DEBUG] 
%llx closing _stageRegistry...
[DEBUG] 
%llx closing _diskReclaimer...
[DEBUG] 
%llx closing dbManager...
[DEBUG] 
%llx closing _containerScheduler...
[DEBUG] 
%llx resetting local state for %@
[CRIT] Assertion failed: hasDB
[DEBUG] unlinking %@
[DEBUG] unlinking br security bookmark %@
[DEBUG] keeping preserved item %@
[DEBUG] keeping item too large to upload %@
[DEBUG] unlinking excluded item %@
[DEBUG] unlinking .localized file %@
[DEBUG] unlinking uploaded .app file %@
[DEBUG] 
%llx destroying local account data for %@
[DEBUG] done deleting local files
[DEBUG] did reset TCC access
[DEBUG] done deleting local account data
[DEBUG] 
%llx loading app libraries
[DEBUG] 
%llx loading server zones
[DEBUG] 
%llx loading shared server zones
[DEBUG] loaded server zone: %@
[DEBUG] 
%llx loading client zones
[DEBUG] loaded client zone: %@
[WARNING] ignoring client zone because it's missing a server zone
[DEBUG] 
%llx loading shared client zones
[DEBUG] loaded shared client zone: %@
[WARNING] ignoring shared client zone because it's missing a server zone
[DEBUG] loaded app library: %@
[DEBUG] ignoring app library because it's missing a client zone
[CRIT] Assertion failed: appLibrary.wasMovedToCloudDocs ? clientZone.isCloudDocsZone : [clientZone.zoneName isEqualToString:appLibraryID]
[DEBUG] 
%llx loading shared app libraries
[DEBUG] loaded shared app library: %@
[DEBUG] 
%llx registering and activating zones
[WARNING] dropping %@ because it's missing its client zone or app library
[DEBUG] activating %@
[CRIT] Assertion failed: serverZone
[CRIT] Assertion failed: serverZone.clientZone
[DEBUG] Deactivating private client zone %@
[CRIT] Assertion failed: sharedClientZone.state & BRCClientZoneStateIsResetting
[CRIT] Assertion failed: sharedClientZone.state & BRCClientZoneStateWantsDataUnlinked
[DEBUG] Destroying shared client zone %@
[DEBUG] deleting shared zone and library for %@ from local db
[DEBUG] deleting shared container %@ from server db
[CRIT] UNREACHABLE: can't find app library for %lld
[DEBUG] server zone already exists
[DEBUG] Created server zone: %@
[CRIT] Assertion failed: serverZone.dbRowID
[DEBUG] client zone already exists
[DEBUG] Created client zone: %@
[CRIT] Assertion failed: [clientZone.dbRowID isEqualToNumber:serverZone.dbRowID]
[CRIT] reset needed for %@ because we had to recreate its root
[DEBUG] app library already exists
[CRIT] UNREACHABLE: No db rowID on an app library or server zone
[CRIT] UNREACHABLE: No mangledID on a server zone
[CRIT] UNREACHABLE: no zone name on a server zone
[DEBUG] 
%llx Creating %sapp library and zones: %@ if needed
[ERROR] invalid containerID: %@
[DEBUG] returning early server zone: %@
client zone: %@
app library: %@
[ERROR] couldn't create app library
 appID: %@
serverZone: %@
clientZone: %@
[DEBUG] returning app library %@
server zone:%@
, client zone: %@
[CRIT] Assertion failed: creationFlags != BRCALCreatedNeedsActivate
[DEBUG] reserved rowid %@ for %@
[DEBUG] ignoring failure to enable synced folder type
[ERROR] failed creating container %@ under root %@
[ERROR] failed creating shared container under root %@
[DEBUG] 
%llx CloudDocs apps list did change
[DEBUG] detected %@ of free space, scheduling pending-disk downloads
[DEBUG] 
%llx %s storage optimization
[CRIT] Assertion failed: _isGreedy
[DEBUG] 
%llx starting to download documents for which we should be greedy
[DEBUG] 
%llx enabling sync for %@
[CRIT] UNREACHABLE: Bad folder type
[ERROR] Unable to add an FSEvents Monitor on '%@'
[DEBUG] seting xattr value %@ on path: %@
[ERROR] failed setting xattr value %@ for key %@ on path: %@
[DEBUG] 
%llx disabling sync for %@
[CRIT] UNREACHABLE: Cannot disable sync for BRCSyncedFolderTypeDefault
[CRIT] Assertion failed: _fsEventsMonitors
[CRIT] Assertion failed: ![self hasRootForSyncedFolderType:folderType]
[CRIT] UNREACHABLE: can't open root %s; error %d (%s)
[ERROR] can't open Documents or Desktop %s; error %d (%s)
[CRIT] Assertion failed: _rootsByFolderType
[WARNING] Can't open symlink in the stage
[WARNING] Can't set the hidden finderinfo bit on the staged symlink - %s
[WARNING] Can't resolve the dest path - %s
[WARNING] Can't make the symlink live from stage - %@
[DEBUG] Made symlink live for %@
[WARNING] Can't make symlink in stage - %@
[CRIT] UNREACHABLE: appSupportDirPath was accessed after being closed
[CRIT] UNREACHABLE: cacheDirPath was accessed after being closed
[CRIT] UNREACHABLE: applyScheduler was accessed after being closed
[CRIT] UNREACHABLE: containerScheduler was accessed after being closed
[CRIT] UNREACHABLE: fsReader was accessed after being closed
[CRIT] UNREACHABLE: fsWriter was accessed after being closed
[CRIT] UNREACHABLE: notificationManager was accessed after being closed
[CRIT] UNREACHABLE: stageRegistry was accessed after being closed
[CRIT] UNREACHABLE: Bad folder type %u
[CRIT] Assertion failed: dictionary
[CRIT] UNREACHABLE: getting nil entry for folderType: %lu, dictionary: %@
[CRIT] UNREACHABLE: setting nil entry for folderType: %lu, dictionary: %@
[CRIT] Assertion failed: !dictionary[@(folderType)]
[CRIT] Assertion failed: dictionary[@(folderType)]
BRCTransferBatchOperation/? (subclass activity missing)
[CRIT] API MISUSE: should be subclassed
[DEBUG] cancelling %@
[DEBUG] 
%llx operation is now empty, cancelling %@
[DEBUG] %@(%@) %@ progress %.1f%%
[DEBUG] %@(%@) done with %@: %@
[CRIT] API MISUSE: implement in subclass
[WARNING] failed %@ %ld %@ (%@) in %@: %@
[NOTICE] finished %@%@ %ld %@ (%@) in %@
[CRIT] Assertion failed: entries.count == 0 || error
[CRIT] UNREACHABLE: Missing transfer error for record %@
[DEBUG] 
%llx waiting for callback...
[DEBUG] 
%llx callbacks finished
[ERROR] checksum from bookmark %@ is not equal to expected checksum %@
[CRIT] Assertion failed: _type == problem->_type
[CRIT] UNREACHABLE: unknown problem type %d
[CRIT] UNREACHABLE: unknown effective problem type
[DEBUG] unlinkat(%d, '%@', %d) failed: %s
[ERROR] unlinkat(%d, '%@', %d) failed after trying to fix permissions; error %d (%s)
[DEBUG] mkdirat(%d, '%@', 0%3o) failed: %s
[ERROR] mkdirat(%d, '%@', 0%3o) failed after trying to fix permissions; error %d (%s)
[DEBUG] symlinkat(%d, '%@', '%@') failed: %s
[ERROR] symlinkat(%d, '%@', '%@') failed after trying to fix permissions; error %d (%s)
[CRIT] Assertion failed: errno != 0
[DEBUG] unlinked unexpected file at '%@'
[ERROR] fchmodat(%d, '%@') failed; error %d (%s)
[DEBUG] created '%@'
[DEBUG] renameatx_np(%d, '%@', %d, '%@', %u) failed: %s
[ERROR] renameat(%d, '%@', %d, '%@', %u) failed after trying to fix permissions; error %d (%s)
[ERROR] Failed opening op for %d; error %d (%s)
[ERROR] can't set xattr %s to %s at '%@'; error %d (%s)
[ERROR] can't open '%@'; error %d (%s)
[ERROR] can't read the size of xattr %@ at '%@'; error %d (%s)
[ERROR] empty xattr %@ at '%@'
[ERROR] can't read %lu-byte xattr %@ at '%@'; error %d (%s)
[ERROR] invalid xattr %@ at '%@': %s
[ERROR] failed openat with EACCES and fstatat(%d, '%s'); error %d (%s)
[ERROR] failed openat(%d, '%s') with EACCES, but the item is readable: deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] failed openat with EACCES and fchmodat(%d, '%s', %c%c%c%c%c%c%c%c%c%c) deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x; error %d (%s)
[DEBUG] failed openat(%d, '%s') with EACCES: added %c%c%c%c%c%c%c%c%c%c to deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] failed fchmodat(%d, '%s', %c%c%c%c%c%c%c%c%c%c) deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x; error %d (%s)
[DEBUG] openat(%d, '%s'): added %c%c%c%c%c%c%c%c%c%c to deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[CRIT] Assertion failed: fileID
[DEBUG] Failed opening parent op for '%@', hope for the best; error %d (%s)
[CRIT] UNREACHABLE: Corrupt quarantine: %s
[DEBUG] Quarantine info differs in flags 0x%x vs 0x%x
[WARNING] Extended attribute %s size %ld is greater than size limit %ld
[ERROR] Xattr name list exceed size limit %ld
[WARNING] Do not attempt to get xattr size cache is full
[CRIT] Assertion failed: (mode&S_IFMT) != 0 && !S_ISDIR(mode)
[DEBUG] Failed opening parent op for %d '%@'; error %d (%s)
[DEBUG] Failed opening op for %d '%@'
[ERROR] Couldn't stat; error %d (%s)
[ERROR] Failed to remove flags; error %d (%s)
[ERROR] Failed stripping acls; error %d (%s)
[ERROR] Failed setting permissions; error %d (%s)
[ERROR] Failed to restore permissions; error %d (%s)
[ERROR] Failed to restore acl; error %d (%s)
[ERROR] Failed to restore flags; error %d (%s)
[ERROR] Failed opening %s; error %d (%s)
[ERROR] Unable to strip UF_IMMUTABLE and UF_APPEND to %s; error %d (%s)
[ERROR] Failed setting permissions of %s; error %d (%s)
[ERROR] Couldn't stat %s; error %d (%s)
[ERROR] Failed stripping acls of %s; error %d (%s)
[DEBUG] 
%llx deleting temporary files moved to the cache at '%@'
[DEBUG] did not remove '%@'; error %d (%s)
[ERROR] failed removing '%@'; error %d (%s)
[DEBUG] removed '%@/*'
[ERROR] lstat('%@') failed; error %d (%s)
[ERROR] renameat(%d, '%@', -1, '%@' deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x failed; error %d (%s)
[DEBUG] renamed '%@' to '%@' deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[DEBUG] failed removing documentID for %@ (%s)
[DEBUG] done iterating
[DEBUG] Starting enumerating under %@
[DEBUG] Starting full enumeration of the container
[DEBUG] cancelling enumeration because container deactivated
[CRIT] Assertion failed: self->_handler
[DEBUG] visiting a new parent: %@
[DEBUG] continue iterating under parent %@, for _rowID > %ld
[DEBUG] got rows %@
[DEBUG] %@: finished uploading all items in %@: %@
[CRIT] Assertion failed: task_tracker
[DEBUG] task tracker (%s) has been cancelled, calling cancellation block <%p>
[DEBUG] The item path doesn't exist
[DEBUG] Item document ID doesn't match: %@ != %u
[DEBUG] Item file ID doesn't match: %@ != %lld
[ERROR] Reserved item with no server item, let's clean it up
[DEBUG] 
%llx detected a path-match at apply-changes time with %@
matching %@
[DEBUG] There is an unscanned path-match with this reserved item, forcing scan of parent %@ and backing off
[DEBUG] 
%llx match lookup with disk %@
[DEBUG] Considering the live item
[DEBUG] Considering the faulted item
[DEBUG] attempting to schedule a coordinated read on item: %@
[CRIT] UNREACHABLE: %s isn't needs reading, and is in the reader queue
[DEBUG] %@ is lost and isn't pending-lost in the reader queue
[DEBUG] Reader: %@: marking unresolvable item as lost: %@
[DEBUG] Reader: reached maximum allowed number of coordinations (%ld)
[CRIT] Assertion failed: [_coordinatedReaders containsObject:appLibrary]
[DEBUG] Reader: below half maximum allowed number of coordinations (%ld)
[DEBUG] there is nothing to read at %@
[WARNING] Fault is marked needs-read, odd, let fix it up
[DEBUG] item is missing, let's mark it lost
[CRIT] UNREACHABLE: something is wrong, we got a coordinated inside a package
[DEBUG] ignoring coordinated read without any corresponding items
[DEBUG] ignoring coordinated read without a live item
[DEBUG] alias/directory <-> document conflict:
  path: %@
  item: %@
[DEBUG] 
%llx reading %@ at %@
[DEBUG] item has unscanned changes on disk, reading the file
[DEBUG] nothing to read
[CRIT] UNREACHABLE: -updateLocationAndMetaFromFSAtPath should always work on documents
[DEBUG] item is busy on disk, we must give up reading the file for now
[ERROR] could not update package at %@: %@
[CRIT] Assertion failed: _session.clientDB.isBatchSuspended
[WARNING] can't resolve parent of '%@'
[DEBUG] 
%llx acquired coordination for (reading)
  at '%@'
[WARNING] This is a cross app library move from %@ to %@ and the server hasn't initiated migration yet
[DEBUG] We need to bounce a document clashing with our FS root
[DEBUG] We need to bounce a directory clashing with our FS root
[WARNING] we need to bounce path at %@ because there is a FS root clashing
[CRIT] UNREACHABLE: after bouncing to a unique path, we still have match!
[DEBUG] can't bounce %@ to avoid clash with fs-root %@; error %d (%s)
[DEBUG] Ignoring FSEvent in unknown container
[DEBUG] Ignoring FSEvent in container pending needs-scan: %@
[WARNING] Cancelling scan of %@ because it was removed while we were scanning
[DEBUG] ignoring fsevent on %@ until the parent arrives
fsevent
[DEBUG] can't update lookup for fs-root match on %@, ignoring fsevent
[CRIT] UNREACHABLE: what the hell is that path type?? %s (%x)
[CRIT] UNREACHABLE: root should exist
[CRIT] reset of all shared containers needed, because the shared namespace is gone
[CRIT] reset needed for %@ because it was deleted on disk %@
[DEBUG] Marking container %@ as needs-scan
[DEBUG] Symlink %@ changed fileID at %@; error %d (%s)
[DEBUG] byPath:%@ moved elsewhere
[DEBUG] Ignoring fsevent on desktop symlink path %@
[DEBUG] creating new symlink %@ at %@
[CRIT] Assertion failed: lookupByFileID != item
[DEBUG] Ignoring non-alias lookup-by-itemID %@
[DEBUG] using byItemID:%@ byPath:%@ byFileID:%@ aliasItemID:%@
[DEBUG] Alias %@ changed fileID at %@; error %d (%s)
[DEBUG] deleting the alias because it can't be resolved
[DEBUG] deleting the alias on-disk because it can't be resolved and isn't in our database
[DEBUG] creating new alias %@ at %@
[DEBUG] marking alias lost because its target exists on disk but we haven't scanned it yet
[DEBUG] Reviving %@ because it is dead
[DEBUG] Found the Documents folder
[DEBUG] directory %@ changed fileID at %@; error %d (%s)
[DEBUG] directory %@ moved elsewhere
[DEBUG] we got a path-match with a server item: %@
[DEBUG] creating new directory %@ at %@
[WARNING] Scanning an extensionless directory with a kBundle bit set as a directory at '%@'
[WARNING] Scanning directory with a kBundle bit set as a directory at '%@'
[DEBUG] Dropping fsevent on a directory with kBundle bit set at '%@'
[CRIT] Assertion failed: ![[appLibrary appLibraryID] isEqualToString:BRUbiquitousDefaultContainerID]
[CRIT] Assertion failed: relpathOfItem
[WARNING] We shouldn't go through that path, but learn the new state of the item anyway
[DEBUG] Someone replaced a fault with content, clearing ETag for the version
[WARNING] Someone changed the filename of a fault, we don't support that, delete the fault, and schedule it being recreated
[WARNING] Removing fault for reserved item to refault %@
[CRIT] UNREACHABLE: reset needed for %@ because an item was turned into a fault on disk:
item %@
relpath %@
[DEBUG] [hardlink] this is an event about the path we knew for this item, go on
[DEBUG] [hardlink] we got an event at %@
but it's still live where we track it, redirect the event to %@
[DEBUG] [hardlink] unable to find this hardlink at its previous path, go on
[WARNING] unlinking side-fault because we don't know its documentID at %@
[DEBUG] we got a path-match with a server item during initial scan: %@
[DEBUG] creating new document %@ at %@
[WARNING] Ignoring read on edited fault at %@ for %@
[DEBUG] inserting a zero-byte file, let's mark it lost
[DEBUG] scheduling unthrottled package item read
[DEBUG] Delaying reading item by %.03fs because it's a package
[WARNING] Invalid shared path '%@': unparseable itemID
[WARNING] Invalid shared path '%@': unparseable ownerName
[WARNING] Invalid shared path '%@': enclosure isn't a directory
[WARNING] Invalid shared path '%@': path isn't a document
[WARNING] Invalid shared path '%@': type is %s
[WARNING] Deleting invalid shared path '%@'
[WARNING] Delete unknown item (shared prior to a reset?) at '%@'
[DEBUG] Ignore fsevent at %@ (shared zone that hasn't caught up with sync down)
[WARNING] Delete unresolvable enclosure at '%@'
[DEBUG] Create item for fsevent at enclosure without a server item
[DEBUG] Ignore delete fsevent for path not matching any item '%@'
[DEBUG] can't relocate a reserved item
[DEBUG] Marking item as dead because we couldn't relocate it and it was lost: %@
[DEBUG] Item %@ found again at path '%@'
[DEBUG] Returning early for fsevent on non top level item
[CRIT] Assertion failed: !li
[DEBUG] Returning early for fsevent on relpath which doesn't exist
[DEBUG] creating new shared document %@ at %@
[ERROR] can't open %@: %@
[CRIT] UNREACHABLE: nil app library for rowID %@
[CRIT] UNREACHABLE: App library %@ is not marked as needs lost, but its item %@ is!
[CRIT] Assertion failed: ![self->_lostSet containsObject:appLibrary]
[CRIT] UNREACHABLE: App library %@ is in needs-lost state, but missing from the lost set!
[DEBUG] Done with all normal lost scanning for now%@
[CRIT] UNREACHABLE: Lost item should have a lostStamp
[DEBUG] Updating lost stamp for item %@
[CRIT] Assertion failed: shallowestItemID
[CRIT] Assertion failed: backoff < BRC_TIMESTAMP_FAR_FUTURE
[CRIT] UNREACHABLE: %@: maxLostStamp(%lld) must be greater than the shallowestLostStamp(%lld)!
[DEBUG] shallowestLostStamp %lld > max lost stamp %lld for %@
[CRIT] UNREACHABLE: We should always be able to resolve under the root
[CRIT] Assertion failed: _currentScan == nil
[CRIT] Assertion failed: relpath.exists
[DEBUG] located lost item %@ at %@ under parent %@
[DEBUG] can't update lookup for fs-root match on %@, can't lost scan
[DEBUG] located lost item %@ at %@ under unknown parent
[DEBUG] GSLibraryResolveDocumentId(%u); error %d (%s)
[ERROR] GSLibraryResolveDocumentId(%u); error %d (%s)
[CRIT] Assertion failed: errno == ENOSYS || errno == EINTR || errno == EBUSY
[DEBUG] 
%llx resolved documentID:%u to fileID:%llu exists:%s
[DEBUG] located documentID:%u at fileID:%llu but can't find item
[DEBUG] located %@ at fileID:%llu but item isn't lost
[DEBUG] resolved %@ to a stale fileID (%lld), retrying later
[DEBUG] resolved %@ to an inaccessible fileID (%lld); error %d (%s)
[DEBUG] relocated %@ to %@ which isn't a document
[DEBUG] relocated %@ to %@ which just changed documentID
[DEBUG] relocated %@ to %@
[DEBUG] couldn't locate %@ per documentID: it's gone
[DEBUG] lost item %@ can't be located, it's gone
[CRIT] Assertion failed: !_currentScan
[CRIT] Assertion failed: relpath.isUnixDir
[CRIT] Assertion failed: item.isDirectory
[DEBUG] %@ hasn't changed at %@
[ERROR] failed opening %@; error %d (%s)
[CRIT] UNREACHABLE: the relpath is already open, so -resolveAndKeepOpen should work
[ERROR] failed opening %@ for scanning; error %d (%s)
[CRIT] UNREACHABLE: the relpath is already open, so -openDirectoryForScan should work
[CRIT] UNREACHABLE: Can't scan a path with no container: %@
[DEBUG] 
%llx scanning in %@: %@
[CRIT] Assertion failed: _currentScan.isUnixDir
[CRIT] Assertion failed: _currentScan.exists
[DEBUG] can't resolve child %@ of %@; error %d (%s)
[DEBUG] We've scanned enough.  Delaying just a bit.
[DEBUG] finishing scan of %@
[CRIT] Assertion failed: appLibrary.deepScanStamp
[DEBUG] marking %@ lost, because the app library needs deep scan
[CRIT] UNREACHABLE: we should always be able to resolve under the root, since it's kept open; error %d (%s)
   path: %@
[ERROR] Not slow scanning an app library %@ which differs only in case from %@
[CRIT] UNREACHABLE: app libraries differ in db row id %@ vs %@
[DEBUG] beginning scan of %@
[CRIT] Assertion failed: _currentScan
[DEBUG] cancelling scan of %@
[DEBUG] 
%llx cancelling lost scan delay
[DEBUG] 
%llx scheduling lost scan (batch size: %lu)
[DEBUG] next lost item for %@ is %@
[DEBUG] 
%llx processing lost item: %@ in %@ (backoff %.3fs)
[CRIT] Assertion failed: !_lostScanDelay
[DEBUG] 
%llx delaying until backoff
[DEBUG] 
%llx scheduling lost scan after backoff
[DEBUG] lost scanning %@
[CRIT] UNREACHABLE: wrong applibrary for fsroot %@ vs %@
[CRIT] UNREACHABLE: we got an fsroot %@ that's not a root of its applibrary %@ - %@
[CRIT] UNREACHABLE: we just got the itemID from the db, we should be able to get the item as well
[DEBUG] Scanned %lu lost items in %e seconds
[DEBUG] Lost Scan: no lost items anymore in %@
[DEBUG] Lost Scan: done scanning lost items in %@
[DEBUG] Lost Scan: starting to scan lost items in %@
[DEBUG] Lost Scan: lost items in %@
[DEBUG] %@: signaling lost scan
[DEBUG] Not clearing the thumbnail signature, because we're still waiting for thumbnail download
[DEBUG] Not clearing the thumbnail signature, because this is a thumbnail we can regenerate
[DEBUG] Not clearing thumbnail signature when we don't have the most up-to-date version %@ vs %@
[DEBUG] continuing scanning
[DEBUG] 
%llx resetting the %@
[DEBUG] resuming reader
[CRIT] UNREACHABLE: Reader dealloced with containers still in the lost heap
[CRIT] Assertion failed: proxy != nil
[DEBUG] iCloud Drive App is%s installed
[DEBUG] installing iCloud Drive App
[ERROR] failed to install iCloud Drive App
[DEBUG] uninstalling iCloud Drive App
[ERROR] failed to uninstall iCloud Drive App
[WARNING] can't answer to %s() without a dsid
[DEBUG] getting iCloud Drive App visibility for dsid %@: is %svisible (default exists: %s)
[WARNING] can't set visibility to %@ in %s() without a dsid
[ERROR] failed to synchronize user defaults for %@
[DEBUG] setting iCloud Drive App visibility to %@ for dsid: %@
[DEBUG] current visibility default (%@) is equal to the one being set, no change is needed
[DEBUG] updating visibility of iCloud Drive App for dsid: %@
[DEBUG] dsid is nil, uninstalling iCloud Drive App
[DEBUG] visibility of iCloud Drive App changing to %s
[DEBUG] visibility of iCloud Drive App did not change: %s
[DEBUG] unsupported attribute: %@
[DEBUG] No value for attribute: %@
[DEBUG] returning %@
[DEBUG] Server container was reset, we need to reset ourselves
[DEBUG] Server change token expired, we need to reset ourselves
[DEBUG] Server container was reset, zone not found, we need to reset ourselves
[DEBUG] Server container was reset, user deleted zone, we need to reset ourselves
[DEBUG] unknown error domain: %@, we should retry
[CRIT] UNREACHABLE: there should be a recordID
[DEBUG] we should sync-down again after %@
[CRIT] UNREACHABLE: really unexpected error: %@
[DEBUG] Cloudd crashed, our sync up could have been received by the server
[CRIT] Assertion failed: _requestID == 0
[CRIT] Assertion failed: session != nil
[DEBUG] 
%llx invalidating connection with %@
[DEBUG] %@: is now foreground
[DEBUG] %@: is now background
[DEBUG] starting monitoring %@
[DEBUG] %@ is now monitoring %@
[DEBUG] %@ is no longer monitoring %@
[DEBUG] stop monitoring %@
[CRIT] UNREACHABLE: there should be a client
[DEBUG] 
%llx loading account now that we have enough disk space to work
[NOTICE] iCloud Drive has now enough disk space to work and is starting...
[DEBUG] Notifying clients of account change because we could have denied xpc during low disk space
[WARNING] Returning error because iCloud Drive doesn't have enough disk space to be functional
[DEBUG] turns out we're logged in, upgrading %@
[DEBUG] granting access to non-sandboxed app %@
[ERROR] invalid entitlement for %@
[ERROR] %@ is missing privilege
[DEBUG] granting access to %@ for non-sandboxed app %@
[ERROR] %@ is talking to us without container proxy right
[ERROR] %@: is trying to call %@, but has no access
[ERROR] Client %@ gave us a non-existing fault URL path %@
[DEBUG] %@: file doesn't exist at path: %s
[DEBUG] %@: denied access to %s
[DEBUG] looking for container containing aliases to %@, found: %@
[DEBUG] 
%llx creating a bookmark at %@
[DEBUG] app library of %@ is invalid: %@
[DEBUG] considering item %@ at %@
[DEBUG] considering faulted item %@ at %@
[DEBUG] considering unscanned path %@
[DEBUG] can't create alias: %@
[CRIT] Assertion failed: target
[INFO] %@: reply(%@, %@, %@, %@, %@, %@)
[DEBUG] 
%llx downloading '%@'
     container: %@
     lookup: %@
[DEBUG] %@ is on disk but we can't lookup in our db, we must not have scanned it yet
[INFO] %@: reply(%@)
[INFO] %@: reply(%@, %@, %@, %@)
[DEBUG] %@: unsandboxed app is now using %@ as %@
[DEBUG] add dependency %@ for operation %@
[DEBUG] %@: %@
[INFO] %@: reply(%@, %@)
[CRIT] UNREACHABLE: should have an account session
[DEBUG] %@
[DEBUG] %@ can't access %@: %@
[CRIT] UNREACHABLE: %@ is not owning %@ and updating its metadata
[ERROR] nonexistant container %@
[DEBUG] 
%llx IPC-initiated reset for %@
[CRIT] %s reset for %@
[CRIT] UNREACHABLE: we should always have a fileObjectID
[INFO] 
%llx %@ (%@) %s downloading %u URL%s
[INFO] %@: reply(%@, %@, %@)
[DEBUG] receiver: %@
[ERROR] can't setup container %@: %@
[DEBUG] %@: reply(%@, %@)
[DEBUG] 
%llx getting usage for %@
[WARNING] unable to find bundleID %@
[INFO] %@: reply(%d, %@)
[INFO] %@: reply(%lu, %@)
[INFO] %@: reply(%llu, %@)
[DEBUG] 
%llx adding external docs for url:%@ pid:%d parentURL:%@
[DEBUG] denying access: %@
[DEBUG] handle: %@
[WARNING] failed resolving conflict at %@ because no document was found
[DEBUG] Trying to resolve conflict at url=%@ name=%@ itemid=%@ item=%@
[ERROR] key: %@ is not of class NSString
[INFO] %@: reply(success=%d, %@)
[DEBUG] gathering information at '%@'
[INFO] 
%llx %@ (%@) %s simulating health issue
[NOTICE] simulating health issue on %@: %@%@
[INFO] 
%llx %@ (%@) %s getting health status on %@
[DEBUG] 
%llx waiting for next sync down for %@ -> %@
[DEBUG] 
%llx finished sync down for %@
[DEBUG] received an error while syncing container: %@
[DEBUG] 
%llx finished scheduling sync for %@
[DEBUG] received an error while trigger sync for container: %@
[DEBUG] 
%llx finished all sync down tasks for %@
[DEBUG] 
%llx waiting for %@ to be idle
[DEBUG] 
%llx container is now idle
[DEBUG] 
%llx %@: force syncing containers matching '%@'
[NOTICE] %@: force syncing shared database
[NOTICE] %@: force syncing %@
[NOTICE] %@: force syncing container metadata
[NOTICE] %@: forcing syncing zone health
[DEBUG] 
%llx %@: iWork force syncing containers matching '%@' ownedByMe:%d
[INFO] %@: reply()
[DEBUG] 
%llx %@ asks us to wait for the fsevents to be processed
[DEBUG] wait for fsevents
[DEBUG] wait for the lost scan
[DEBUG] 
%llx waiting for the lost scan
[DEBUG] 
%llx lost scan is done, notifying client %@
[INFO] %@: reply(%f, %@)
[DEBUG] accountID: %@
[CRIT] UNREACHABLE: asked to login to a non migrated account
[ERROR] can't create account: %@
[DEBUG] checking status for %@
[DEBUG] no local item for %@
  path:   %@
  lookup: %@
[DEBUG] data: %@
[INFO] %@: reply(%@, %@, %@, %@, %@)
[DEBUG] looking for docID:%@ itemID:%@ mangledID:%@ unsaltedBookmarkData:%@
[DEBUG] %@ has access to %@
[DEBUG] %@ %s access to %@
[DEBUG] 
%llx looking for reverse aliases of %@
[DEBUG] 
%llx testing access to %@
[DEBUG] granting access to %@, because %@ has access to %@
[WARNING] %s denied for %@: not entitled
[CRIT] Assertion failed: partialError
[DEBUG] container: %@ lookup: %@ error: %@
[DEBUG] being asked the URL of a shared-enclosure, returning the parent path of the alias: %@
[DEBUG] no local item for %@
[INFO] %@: reply(%d, %d, %@, %@)
[CRIT] UNREACHABLE: base token of unexpected class
[CRIT] UNREACHABLE: sharing key of unexpected class
[CRIT] UNREACHABLE: only got sharing key or base token, didn't get both
[CRIT] Assertion failed: result == nil || [result isKindOfClass:[CKShare class]]
[DEBUG] Share %@ has %lu participants
[INFO] %@: reply(%@, %@,%@)
[DEBUG] Creating share for URL %@
[DEBUG] Saving share %@
[DEBUG] Destroying share info for share %@
[DEBUG] Copying share participants for identities %@
[DEBUG] Modifying record access to %s at %@
[DEBUG] Copying share token at %s
[DEBUG] Copying short token at %s
[DEBUG] Copying etag at %s
[DEBUG] Bulk copying shareIDs at urls %@
[DEBUG] copying url for share %@ for app %@
[ERROR] An accept operation is already running for %@
[ERROR] can't handle share %@: %@
[DEBUG] 
%llx handling share at %@
[WARNING] can't accept the share: %@
[DEBUG] faking FS event after deletion at %@
[DEBUG] 
%llx trash item at %@ in %@ to %@
[WARNING] can't create %@: %@
[WARNING] cross zone PCS operation %@ failed with %@
[WARNING] cross zone move op completed AFTER retry - %@ with %@
[DEBUG] Completed aggregating PCS
[DEBUG] cross zone move%@ op completed - %@ with %@
[WARNING] cross zone move%@ op %@ completed AFTER retry - %@
[WARNING] can't unlink original item at %@
[WARNING] can't find relpath for %@; error %d (%s)
sync-down/periodic-sync
[DEBUG] 
%llx scheduling sync down for %@
[DEBUG] container-metadata appears to be out of sync in the periodic check, forcing sync
[DEBUG] zone health appears to be out of sync in the periodic check, forcing sync
[DEBUG] Not considering %@ for periodic sync because it is blocked from sync
[DEBUG] %@ appears to be out of sync in the periodic check, forcing sync
[DEBUG] 
%llx completed fetching changed zone
zones: %@
[CRIT] UNREACHABLE: No error found
[ERROR] can't fetch all changed zones: %@
[WARNING] There was a partial failure error when fetching all the zone, syncing down the failed zones: %@
error:%@
[NOTICE] scheduled a %s periodic sync
[DEBUG] Running operation to fetch %@: %@
[DEBUG] We need to create the zone health zone on %@ - %@
[ERROR] Failed reporting zone health on %@ - %@
[DEBUG] finished reporting zone health: %@, op: %@
[WARNING] not updating zone health state because we think we are less broken than the server does
[CRIT] Assertion failed: report.state != BRCZoneHealthStateHealthy
[DEBUG] No zone health errors to report
[CRIT] UNREACHABLE: no BRCPackageItem should be a Tombstone
[DEBUG] aggregate size is %@ for documentID:%u
[CRIT] UNREACHABLE: wrong number of items in package
[DEBUG] Learning signature for rank %ld, signature:%@, asset %@
[CRIT] Assertion failed: cpi.signature
[DEBUG] Failing updates of signatures for item %@ because pkg item with rank %lu changed
[CRIT] UNREACHABLE: updating asset signature should work
[NOTICE] Ignoring tombstone pkg item %@
[CRIT] UNREACHABLE: should never attempt to save tombstones to db
[CRIT] Assertion failed: doInsert != nil
[NOTICE] Overriding an already declared item %@
[DEBUG] saved item %@ to DB
[CRIT] UNREACHABLE: saving package items should really always work
[DEBUG] Updating dirty status to %@ for %@
[ERROR] Could not delete package size aggregate entry for document %u: %@
[DEBUG] removed %lld items in pkg:%u
[CRIT] Assertion failed: relpath.isPackageRoot || relpath.isInPackage
[DEBUG] updating package snapshot at %@
[DEBUG] ignoring excluded package item at %@
[ERROR] can't snapshot package item at %@: %s
[CRIT] Assertion failed: relpath.isDocument
[DEBUG] 
%llx diffing package documentID:%u at %@
[CRIT] Assertion failed: relpath.isInPackage || relpath.isPackageRoot
[DEBUG] no package item for documentID:%u at '%@' already gone from disk
[DEBUG] no package item for documentID:%u at '%@', will be scanned
[DEBUG] unable to reopen path for documentID:%u at '%@'
[DEBUG] %@ doesn't match path %@
[DEBUG] %@ matches path %@
[DEBUG] can't read package item at %@: %s - not matching %@
[DEBUG] %s at '%@' in package with documentID:%u is missing in snapshot
    %@
[DEBUG] %s at '%@' in package with documentID:%u is missing in snapshot and on disk
    %@
[DEBUG] %s at '%@' in package with documentID:%u doesn't match
    %@
    %@
[DEBUG] package snapshot matches
[CRIT] Assertion failed: relpathInPackage.isInPackage
[DEBUG] %@ completed
[CRIT] Assertion failed: _observedAppLibraries.count == 0
[DEBUG] 
%llx posting -didChangeUbiquity for %@
[DEBUG] posting -didChangeUbiquity for '%@'
[DEBUG] 
%llx getting physical url for %@
[DEBUG] no account
[ERROR] Someone tries to coordinate at the side fault URL '%@', odd, but allow it
[WARNING] unable to resolve lookup %@: %@
[DEBUG] %@ is already current
[DEBUG] %@ is already downloaded
[DEBUG] network is not reachable, returning an error
[DEBUG] started download of %@
[CRIT] Overriding already existing callback for docID %@ key %@
[DEBUG] We don't have enough space on disk to download %@.  Let's try to free some
[CRIT] Key %@ already in use, appending handler to the tracker
[DEBUG] Item '%@' isn't on disk yet, failing the coordination
[CRIT] UNREACHABLE: Huh? %@ doesn't have a document id...
[DEBUG] can't resolve the parent, granting the read %@: %@
[DEBUG] %@ is not a document, granting the read
[CRIT] Assertion failed: ![_readersURLAndIDToDocID objectForKey:key]
[DEBUG] can't find the item in our db, granting the read
[DEBUG] 
%llx %scoordinated read request for '%@' (%@)
[DEBUG] url exists, granting the read
[CRIT] UNREACHABLE: clientDB.serialQueue should not be nil for a valid session
[CRIT] UNREACHABLE: clientDB.serialQueue could not be nil for a vliad session
[DEBUG] document: %@ did complete download with error: %@
[DEBUG] Granting coordinated read for %@ error: %@
[ERROR] can't resolve item: %@
[DEBUG] FC tries to cancel an untracked thing: %s
[DEBUG] 
%llx cancel coordinated read request for '%@' (%@)
[DEBUG] 
%llx cancel all coordinated reads
[DEBUG] cancel coordinated read for %@
[DEBUG] 
%llx cancel coordinated reads for %@
[DEBUG] 
%llx send network offline to all coordinated readers
[DEBUG] sending network offline for %@
[CRIT] UNREACHABLE: incorrect presenter refcount
[DEBUG] not registering anything since we're logged out
[DEBUG] invalidating the file presenter
[CRIT] UNREACHABLE: clientDB.serialQueue should never be nil
[DEBUG] no file presenter to invalidate, because we were logged out when it was registered
[CRIT] Assertion failed: suspendCount >= 0
[CRIT] UNREACHABLE: %@ was deallocated without being closed
[DEBUG] 
%llx Uploader: preparing next batch for %@ (max-count:%ld size:%@ priority:%ld)
[DEBUG] 
%llx Downloader: preparing next batch for %@ (max-count:%ld size:%@ priority:%ld)
[DEBUG] cellular access is %s
[CRIT] Assertion failed: database
[DEBUG] scheduling %@ on %@
[CRIT] UNREACHABLE: Exception %@ was raised while trying to enqueue %@
[CRIT] Assertion failed: _isCancelled
[DEBUG] beginning forced foreground for %@ for %.1fs
[DEBUG] forced foreground grace period over for %@
[CRIT] Assertion failed: self->_foregroundState == BRCContainerForegroundStateForcedForeground
[CRIT] UNREACHABLE: there should be no timer created
[DEBUG] beginning foreground grace period for %@ for %.1fs
[DEBUG] grace period over for %@ %@
[CRIT] Assertion failed: zone.isCloudDocsZone
[DEBUG] fetched quota %llu - %@
[CRIT] UNREACHABLE: itemID %@ has no share name
[CRIT] Assertion failed: _st.type == BRC_ITEM_TYPE_DIRECTORY || _st.type == BRC_ITEM_TYPE_FS_ROOT
[DEBUG] item isn't a directory anymore
[CRIT] Assertion failed: self.isLost
[DEBUG] Inserting tombstone for alias %@ which is pending target
[CRIT] Assertion failed: sqlite3_value_int(argv[0]) == BRC_ITEM_STATE_TOMBSTONE
[CRIT] Assertion failed: zone
[CRIT] Assertion failed: appLibrary.fileID
[CRIT] UNREACHABLE: a task tracker is required to download a directory
[DEBUG] trying to reparent to %@, which is a descendent of myself (%@)
[ERROR] Invalid user defaults: %@, using %@
[CRIT] Assertion failed: !_userDefaultsCache[kBRCGlobalUserDefaultsKey]
[DEBUG] 
%llx defaults changed
[CRIT] Assertion failed: ![clientZoneIdentifier isEqualToString:kBRCGlobalUserDefaultsKey]
[CRIT] Assertion failed: clientZoneIdentifier && _userDefaultsCache[kBRCGlobalUserDefaultsKey]
[DEBUG] 
%llx config: initial load
[DEBUG] config: not updating the configuration, waiting for next activity callback
[DEBUG] 
%llx config: it's activity time
[DEBUG] 
%llx config: download task finished %@, plist %@
[ERROR] config: session %@ become invalid: %@
[ERROR] config: can't download task %@%@: %@
[DEBUG] config: download finished for %@
[ERROR] failed parsing plist at %@: %@
[DEBUG] Server configuration changed to etag %@
[DEBUG] config: Loaded server configuration from %@
[DEBUG] 
%llx config: asynchronously loading %@
[NOTICE] loading iCloud Drive configuration from disk
[NOTICE] downloading iCloud Drive configuration
[DEBUG] scheduling config download %@
[DEBUG] Loaded cached server configuration %@
[ERROR] Can't save the config plist
[CRIT] UNREACHABLE: no version for key: %@
[CRIT] Assertion failed: perVersionDict
[DEBUG] server default for %@: %@
[DEBUG] user default for %@: %@
[CRIT] Assertion failed: min < max
[CRIT] Assertion failed: min <= def
[CRIT] Assertion failed: def <= max
[ERROR] invalid user default for %@: %@ range:[%d,%d]; using default:%d
[ERROR] invalid user default for %@: %@ range:[%lld,%lld]; using default:%lld
[ERROR] invalid user default for %@: %@ range:[%f,%f]; using default:%f
[ERROR] invalid user default for %@: %@; using default:%s
[ERROR] invalid user default for %@.%@: %@; using default:%@
[CRIT] Assertion failed: defaultValues[key] != nil
[ERROR] invalid user default %@; using:%@
[CRIT] Assertion failed: _item
[CRIT] UNREACHABLE: there should be a logical path for %@
[CRIT] UNREACHABLE: asked the parent of a root item
[DEBUG] fileID==0 on item whose itemID is the parentID of %@
[ERROR] no parentID on %@
[DEBUG] sanitized server filename to %@ for %@
[ERROR] parent %@ exists, but failed resolving child %@; error %d (%s)
[CRIT] UNREACHABLE: failed resolving child; error %d (%s)
[DEBUG] Learning new docid for item %@ at path %@
[CRIT] Assertion failed: path.type == BRCRelativePathTypeSharedTopLevelItem
[DEBUG] Destroying anchor %@
[DEBUG] Destroying anchor %@, databaseBasePath: %@, UUID: %@
[DEBUG] Anchoring %@ at %@
[ERROR] Unable to serialize property list - %@
[DEBUG] 
%llx account properties changed
[DEBUG] forcing refresh of cellular switch
[DEBUG] 
%llx checking if cellular is enabled for D&D
[DEBUG] cellular is %@ for D&D
[CRIT] Assertion failed: item.st.iWorkShareable
sharing/iWork-publishing
[CRIT] UNREACHABLE: No sharing info and no error
[ERROR] Failed sharing %@ - %@
[DEBUG] %@ was shared
[CRIT] Assertion failed: self->_forPublish
[ERROR] Failed unsharing %@ - %@
[DEBUG] %@ was unshared
[CRIT] Assertion failed: !self->_forPublish
sync-down
[INFO] 
%llx starting fetch record changes operation for %@ from token %@
[INFO] 
%llx got a record in operation %@
[INFO] record changed:%@ etag:%@ modified:%@ user:%@ device:%@%@
[DEBUG] record: %@
[CRIT] UNREACHABLE: got a nil record
[CRIT] UNREACHABLE: got a nil recordID
[CRIT] Assertion failed: record.etag != nil
[WARNING] got a record we're not interested in: '%@'
[DEBUG] found app library record named: %@
[DEBUG] found app documents record named: %@
[CRIT] Assertion failed: ![zoneName isEqualToString:BRUbiquitousDefaultContainerID]
[DEBUG] ignoring root record named: %@
[DEBUG] ignoring app library record named: %@
[CRIT] Assertion failed: ![deletedRecordIDs containsObject:recordID]
[DEBUG] 
%llx got a deletion in operation %@
[INFO] record was deleted: %@
[CRIT] Assertion failed: subResourcesFetchOp.recordsByID[recordID] == nil
[DEBUG] 
%llx received updated server change token %@ client change token %@ in operation %@ status %ld
[CRIT] UNREACHABLE: broken structure in op %@ (records: %ld edited, %ld deleted)  change token %@
[DEBUG] 
%llx fetch changes completion for zone in operation %@
[DEBUG] 
%llx fetch changes completed for operation %@
[CRIT] Assertion failed: subResourcesFetchOp.recordsByID.count == 0
[ERROR] sync-down failed for %@: %@
[DEBUG] success
[DEBUG] can't register pushes: %@
[DEBUG] ignoring zone not found error, because we're syncing down for the first time
[ERROR] can't create zone or register pushes: %@
[DEBUG] 
%llx Sync: fetching record changes for %@
[DEBUG] 
%llx refetching installed apps list
[DEBUG] 
%llx start monitoring cloud apps
[DEBUG] 
%llx asked appIDs for %@
[DEBUG] 
%llx asked containerIDs for %@
[DEBUG] 
%llx asked appIDs
[DEBUG] Checksumming R/W mmaped file at %@
[WARNING] Checksumming failed at %@: %@
[DEBUG] Generated bounce name: %@ for %@ in %d
[ERROR] openat(%d, %@); error %d (%s)
[DEBUG] Cannot rename to %@ because it is unprocessed yet
[DEBUG] Very weird, we have missing fsevents on multiple levels of the hierarchy, lets rescan everything
[DEBUG] Marking parent item %@ as lost and clearing the generation ID so we are sure to scan it
[DEBUG] missing item outside of the scope.  Faking fsevent
[DEBUG] Apply Changes[%lld]: postponing rank (clashes with an unprocessed item)
[DEBUG] Cannot rename to %@ because it's a non idle fault
[DEBUG] We have a logical-level path match locally with %@
[ERROR] Failed delete of clashing fault %@; error %d (%s)
[ERROR] Failed rename for bouncing %@; error %d (%s)
[DEBUG] Successfully bounced item %@
[CRIT] UNREACHABLE: giving up bouncing %@
[DEBUG] Successfully bounced path %@
[ERROR] can't bounce %@; error %d (%s)
[CRIT] API MISUSE: unknown namespace
[CRIT] API MISUSE: never move a reserved item aside
[DEBUG] moving aside missing item %@
[CRIT] Assertion failed: dir.isDirectory
[CRIT] Assertion failed: dirpath.exists
[CRIT] Assertion failed: !dirpath.isDocument
[CRIT] UNREACHABLE: the dirpath is already open, so -openDirectoryForScan should work
[DEBUG] excluded child %d: %@
under directory: %@
[DEBUG] child disappeared: %@
under directory:   %@
[ERROR] can't resolve child: %@
under directory:     %@
for directory item:  %@
; error %d (%s)
[DEBUG] can't delete directory %@
at %@
because of child %@
[DEBUG] removing empty directory  %@
[DEBUG] rmdirat(%d, '%@') failed; error %d (%s)
[DEBUG] removing %@ and its %d excluded children
[DEBUG] Item isn't idle
[DEBUG] Item staged fileID hasn't been flushed yet
[ERROR] Item is no longer staged
[CRIT] UNREACHABLE: Stage tampering
[ERROR] Item is edited in stage
[CRIT] UNREACHABLE: Stage tampering - generationID %u != %u
[WARNING] we probably shouldn't have asked coordination in the first place (reserved:%s document:%s additions:%s)
[CRIT] Assertion failed: li.isDocument && !li.isReserved
[ERROR] Item has no desired version set: %@
[CRIT] UNREACHABLE: we shouldn't have asked coordination in the first place
[DEBUG] staged version is stale:
staged: %@
server: %@
diffs:  %@
[DEBUG] server item is dead, nothing to do for namespace '%s'
[DEBUG] nothing to do for namespace '%s'
[DEBUG] 
%llx Trying to update pending-update item
local  item: %@
server item: %@
path       : %@
diffs      : %@
[DEBUG] Item is pending-rename to %@
[DEBUG] Learning that server bounced the item in the same way we did
[DEBUG] Cannot update pending-rename item because we don't hold coordination at the destination
[DEBUG] can't update path match in namespace '%s'
[WARNING] the staged fileID isn't yet flushed
[WARNING] nothing to do at that path, will need a new coordination
[ERROR] Failed to move %@ to graveyard: %@
[ERROR] Failed to unstage %@ [%@] to %@: %@
[DEBUG] renamed from %@ (%@)
        to %@ (%@)
[DEBUG] updated %@
[ERROR] failed renaming to %@ (name:'%@'); error %d (%s)
[DEBUG] renamed from %@ (name:'%@')
        to %@ (name:'%@')
[ERROR] Unable to set the enclosure xattr on %@: com.apple.clouddocs.enclosure-docid; error %d (%s)
[DEBUG] Item updated successfully: %@
[DEBUG] 
%llx rewriting all aliases pointing to %@
[DEBUG] 
%llx Trying to delete pending-delete item
local  item: %@
server item: %@
path       : %@
[ERROR] failed removing fault at '%@'; error %d (%s)
[WARNING] failed moving to graveyard with error %@: %@
[CRIT] UNREACHABLE: reset needed for %@ because REJECTED directory %@ has content
[WARNING] failed removing dir at '%@': %@
[DEBUG] deleted %@
[DEBUG] 
%llx did apply changes for %@
[DEBUG] item is applied? %s
[WARNING] there is a download error, marking item applied and waiting for subsequent updates
[CRIT] Assertion failed: (desiredVersion.wantsContent || desiredVersion.wantsThumbnail) && !desiredVersion.isFault
[DEBUG] thumbnail is not applied
[DEBUG] losers are not applied
[DEBUG] forcing sending update notification because we updated an addition
[DEBUG] Apply Changes[%lld]: %@ state becomes %s
[DEBUG] we still have unapplied changes:
  client item: %@
  server item: %@
  diffs: %@
[DEBUG] Found loser (sending didGainVersion %@)
[DEBUG] Removed loser (sending didLoseVersion %@)
[ERROR] Unable to stage directory: %@
[ERROR] Unable to stage symlink: %@
[WARNING] Retry later, the alias is lost
[DEBUG] unable to relocate %@:; error %d (%s)
[DEBUG] unable to rename because alias has local unprocessed rename
[DEBUG] Accepting Structural Etag update for %@
[DEBUG] Remove rank for alias with no real changes: %@
[CRIT] Assertion failed: parentItem
[DEBUG] unable to relocate parent of %@:; error %d (%s)
[DEBUG] Reparented alias from %@ to %@
[DEBUG] unable to rename alias; error %d (%s)
[DEBUG] syncing down shared database because %@ points to an unknown container
[DEBUG] Target %@ doesn't exist in %scontainer %@, postponing rank: %lld
[DEBUG] Failed to make the bookmark live: %@
[DEBUG] Item %s successfully: %@
[DEBUG] unable to delete alias; error %d (%s)
[DEBUG] Item deleted successfully: %@
[DEBUG] 
%llx Apply Changes[%lld]: %s item: %@
[CRIT] Assertion failed: li || si
[DEBUG] Forcing deletion of item dead in both client and server truth %@
[DEBUG] Suspending rank for item with conflicts: %@%s
[WARNING] Learning sharing options on reset local item %@ from %@
[CRIT] UNREACHABLE: client zone %@ forgot to sync up!
[DEBUG] Dead item doesn't need any action
[DEBUG] Apply Changes[%lld]: postponing rank (missing parent)%@
[CRIT] UNREACHABLE: Failed to resolve the enclosure path - %s
[DEBUG] Apply Changes[%lld]: enclosure resolves and is missing an item, forcing fsevent
[DEBUG] Apply Changes[%lld]: postponing rank (ongoing cross-zone migration)
[DEBUG] Remove rank for item with no real changes: %@
[DEBUG] Found clashing reserved item, probably pending rename, delete it
[DEBUG] Found a freshly scanned item from an initial scan that path matches: %@
[DEBUG] Remove rank since freshly scanned means conflict: %@
[WARNING] No alias pointing to new item shared container, forcing sync down on private container
[DEBUG] Created reservation for %@ item: %@
[CRIT] UNREACHABLE: There server shouldn't rename a fs-root
[DEBUG] dropping update to FS root
[CRIT] UNREACHABLE: reset needed for %@ because directory %@ has a package name
[CRIT] Assertion failed: dv
[DEBUG] Retrying item since we can't resolve its destination path: %@
[DEBUG] the fs root was remotely deleted, we need to recreate it and reupload it
[DEBUG] Apply Changes[%lld]: postponing rank (live child)
[CRIT] Assertion failed: !li.isDead
[DEBUG] Retrying item since we can't resolve its live path: %@
[DEBUG] ignoring dst url because it is the same as the item url
[WARNING] Retrying item because we are trying to rename it into itself: %@ '%@' vs '%@'
[DEBUG] found item needing %s:
  client item: %@
  server item: %@
  src path   : %@
  dst path   : %@
  diffs      : %@
[DEBUG] found item needing %s:
  client item: %@
  server item: %@
  path       : %@
  diffs      : %@
[DEBUG] Ignoring destination part of coordination: failed resolving %@
[DEBUG] Ignoring source part of coordination: failed resolving %@
[DEBUG] Ignoring coordination: failed resolving %@
[DEBUG] Ignoring destination part of coordination: URLs don't point to the same container: %@ != %@
[DEBUG] 
%llx acquired coordination for (writing%@%@)%@%@%@%@
source lookup: %@
destination lookup: %@
[CRIT] Assertion failed: srcLookup
[DEBUG] we just freed %@ when applying changes: scheduling download throttles
[DEBUG] 
%llx fixing up items
[DEBUG] Will acknowledge the last sync down again for %@ (server:%lld, client:%lld)
[CRIT] Assertion failed: requestID <= currentRequestID || currentRequestID == 0
[DEBUG] 
%llx Acknowledge the last sync down again for %@
[DEBUG] 
%llx Fixing up bounced and staged items
[DEBUG] fixing up %@ by marking bounce finished
[DEBUG] fixing up %@ by marking bounce failed
[CRIT] Assertion failed: db && db.serialQueue
sharing/copy-web-auth-token
[ERROR] failed fetching webauth token for %@: %@
[DEBUG] 
%llx scheduling xattr fetch
fetch-record-subresources
[CRIT] Assertion failed: !_isDoneFetchingRecords
[DEBUG] we need to fetch the xattr
[DEBUG] finished record fetcher
[CRIT] Assertion failed: _recordsWithXattrsToFetch.count == 0
[CRIT] Assertion failed: _recordsWithXattrsToFetch.count
[DEBUG] 
%llx fetching %lu xattrs
[DEBUG] 
%llx running the xattr fetch operation
[DEBUG] 
%llx fetched the xattrs for %@
[ERROR] failed to fetch xattr assets for %@: %@
[DEBUG] failed to fetch xattr assets for %@: %@
[ERROR] Failed to store xattr for signature: %@
[DEBUG] Saved xattr for signature: %@
[CRIT] UNREACHABLE: Unable to save xattrs in the database: %@
[DEBUG] resuming %@
[DEBUG] suspending %@
[CRIT] UNREACHABLE: Invalid components count. It should either be an absolute path or prefixed with file provider id
[ERROR] this method is deprecated
[DEBUG] 
%llx new presenter of '%@': %@ (%@)
[CRIT] Assertion failed: presentersIDs == nil
[DEBUG] not doing anything since we're logged out
[DEBUG] 
%llx removed presenter of '%@': %@ (%@)
[CRIT] Assertion failed: presentersIDs.count == 1
[CRIT] Assertion failed: [presentersIDs containsObject:filePresenterID]
[DEBUG] '%@' moved to '%@', by %@
[DEBUG] returning purgeable space from cache: %@
[WARNING] could not retrieve cached purgeable space
[DEBUG] recomputing purgeable space for all urgencies
[DEBUG] reclaimable size from db is %@
[DEBUG] reclaimable size from stage is %@
[DEBUG] not account for local document because optimize storage is set to off
[DEBUG] computed purgable space by urgency: %@
[DEBUG] Purgeable space is %@ for urgency %d
[WARNING] Need at least %@ of free space to do full vacuum of %@ but have only %@. Falling back to autovacuum
[ERROR] Can not vacuum %@ while in transaction
[DEBUG] Flushing batched changes of %@ before vacuum
[CRIT] Assertion failed: vacuumResult == NO
[INFO] Vacuuming %@ took %f seconds reclaimed %@ (size reduction %.2f percent)
[INFO] Incremental vacuuming %@ took %f seconds reclaimed %@ (size reduction %.2f percent)
[DEBUG] no need to evict, amount requested is %@
[DEBUG] evicted %@ from stage
[WARNING] Can't evict %@: %@
[ERROR] Timed out waiting for eviction!
[DEBUG] not evicting document because optimize storage is off
[DEBUG] evicted %@ from stage and containers
[DEBUG] Purged %@ when asked to purge %@ for urgency %d
[DEBUG] Periodicly reclaimed %@
[CRIT] UNREACHABLE: Couldn't fetch from the db
[DEBUG] 
%llx considering eviction for %@
[DEBUG] %@ isn't automatically evictable because has a pending read
[DEBUG] %@ isn't automatically evictable because has a registered file presenters
[DEBUG] not requesting space because we already have enough (available:%@ > required:%@)
[NOTICE] evicting for storage optimization
[CRIT] Assertion failed: [serverZone isKindOfClass:[BRCSharedServerZone class]]
[CRIT] UNREACHABLE: there is already a share acceptation running for that itemID; %@
[CRIT] Assertion failed: item.isShareAcceptationFault
[CRIT] Assertion failed: volume
[NOTICE] root:'%@' is on device: %@
[WARNING] root %@ changed ino from %llu to %llu
[DEBUG] opened root %@
[DEBUG] starting fsevents on device:%u uuid:%@ latency:%f
[DEBUG] resuming fsevents on device:%u uuid:%@ latency:%f from id:%llu
[DEBUG] device:%u changed uuid from %@ to %@ - falling back to full scan latency:%f
[ERROR] FSEventStreamCreateRelativeToDevice failed; error %d (%s)
[DEBUG] 
%llx initial full scan of root:'%@' current-id:%llu
[DEBUG] 
%llx Start monitoring root at %@
[DEBUG] setting rendez-vous:{%@} current:{%@}
[ERROR] failed creating '%@'; error %d (%s)
[ERROR] failed deleting '%@'; error %d (%s)
[ERROR] failed generating fsevent for rendez-voud; error %d (%s)
[DEBUG] signaling rendez-vous:{%@} current:{%@}
[WARNING] fsevent:%u/%u path:'%@' flags:%@ id:%llu%s fsevents id wrapped
[WARNING] fsevent:%u/%u path:'%@' flags:%@ id:%llu%s dropped fsevents
[NOTICE] fsevent:%u/%u path:'%@' flags:%@ id:%llu%s done processing history
[DEBUG] fsevent:%u/%u path:'%@' flags:%@ id:%llu%s ignored (own event)
[DEBUG] fsevent:%u/%u path:'%@' flags:%@ id:%llu%s ignored; error %d (%s)
[NOTICE] fsevent:%u/%u path:'%@' flags:%@ id:%llu%s root needs deep-scan
[ERROR] can't stat root at '%@' after fsevent; error %d (%s)
[CRIT] the root changed fileID
  from %@
    to deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] ubd is still running
[INFO] 
%llx fsevent:%u/%u path:'%@' flags:%@ id:%llu%s %@
[DEBUG] 
%llx closing the %@
[DEBUG] resetting the %@
[DEBUG] 
%llx reset: drained all fsevents from the old stream
[DEBUG] creating the new stream
[DEBUG] suspending - suspendCount:%d->%d
[DEBUG] resuming - suspendCount:%d->%d
[ERROR] failed starting fsevent stream; error %d (%s)
[DEBUG] draining %lu fsevents
[DEBUG] [%@] has been initialized
[DEBUG] [%@] has been invalidated
[DEBUG] [%@] has been reset
[NOTICE] Network really becomes %sreachable
[DEBUG] reachability flags: %x
[NOTICE] Power level really becomes %s
[DEBUG] disk %@ has %senough space now
[CRIT] Assertion failed: deviceID != 0
[CRIT] Assertion failed: _memoryNotificationEventSource == NULL
[DEBUG] Memory warning received
[DEBUG] not monitoring %d because BKS doesn't know its bundleID
[DEBUG] 
%llx received a notif for %@ from BKS: %@
[DEBUG] Power level is now %s
[ERROR] fsctl(dev=%d) failed; error %d (%s)
[DEBUG] pending migrations: %@
[DEBUG] pending migration for %@: %@ from cursor:%@
[DEBUG] no pending migration for %@
[CRIT] UNREACHABLE: unknown migration completed for container %s
[ERROR] can't open %lld to set metadata for %lld; error %d (%s)
[ERROR] can't open live path %lld to set metadata; error %d (%s)
[DEBUG] 
%llx fixing up staged item %@
[DEBUG] staged file ID is in the graveyard, start over
[DEBUG] item is no longer in stage %@
[DEBUG] 
%llx live file ID was swapped and is now in the stage, moving to the graveyard
[WARNING] We have a conflicting item %@ which needs to get bounced away
[CRIT] UNREACHABLE: item %@ was edited in stage (generationID = %lu)
[DEBUG] reserved item is still staged for creation
[DEBUG] item is still staged for update
[DEBUG] item is still staged but already moved to graveyard, making it reserved
[DEBUG] client entitlements: %@
[CRIT] Assertion failed: self.hasPid
[CRIT] Assertion failed: _hasAuditToken
[DEBUG] %@ is restricted from sync (TCC)
[DEBUG] %@ is restricted from sync (MC)
sharing/copy-share
[WARNING] No sharing identity on %@
[WARNING] No base token on %@
[DEBUG] Sync: blacklist %@ because it needs a newer OS to sync up
[DEBUG] Sync: blacklist %@ and all dependents because %llu nsecs to retry
[DEBUG] marking needs-upgrade %@ and its descendants
[WARNING] max depth %u reached at %@
[DEBUG] Sync: blacklist %@ because it's lost
[DEBUG] Sync: blacklist %@ because it's an unresolved path-match with %@
[DEBUG] Sync: blacklist %@ because we have a lost item at the same path in the server truth - %@
[CRIT] UNREACHABLE: reset needed for %@ because of orphan %@
[CRIT] Assertion failed: n
[DEBUG] Embargoing item %@: it has %@ unsynced children
[DEBUG] Item %@ is embargoed: %@ unsynced children
[DEBUG] Item %@ is un-embargoed
[DEBUG] Embargoed item %@ has now %@ unreturned dead children left
[DEBUG] item %@ isn't embargoed
[CRIT] Assertion failed: item.isDead
[DEBUG] blacklisting %@ and its descendants
[DEBUG] Sync: enumerating documents needing sync up
[DEBUG] Sync: enumerating live or new directories
[DEBUG] Sync: enumerating tombstones
[DEBUG] preparing to sync up %@
sync-up/container-metadata
[DEBUG] no records to save
[DEBUG] preparing to send %lu records
[DEBUG] completed sync up for %lu records: %@
[NOTICE] saved %lu containers metadata in the cloud
[DEBUG] adding sub-operation to save the records: %@
[DEBUG] 
%llx Sync: syncing up container metadata
[DEBUG] 
%llx updating shortcuts
[DEBUG] updating shortcut service with shortcut items: %@
[WARNING] Item %@ is not a document!
[ERROR] couldn't get document identifier for document: %@
[ERROR] couldn't get url for document: %@
[CRIT] UNREACHABLE: unknown main screen scale: %lu
[DEBUG] recent documents list updated, updating shortcuts: %s
[DEBUG] can't read thumbnail data for %@: %@
[ERROR] failed to retrieve image data for document at url %@: %@
[DEBUG] generated preview image data for document at %@
[CRIT] Assertion failed: descriptor
non-local-versions
[DEBUG] 
%llx Fetching thumbnail for non-local version %@ etag %@
[DEBUG] 
%llx Received non local thumbnail record: %@ result: %@
[CRIT] UNREACHABLE: CK sent us no results and no error
[CRIT] UNREACHABLE: CK sent a bogus ETag: %s != %s
[CRIT] UNREACHABLE: CK couldn't fetch the thumbnail and set no error
[DEBUG] Successfully added thumbnail to version at %@
[ERROR] Failed to attach thumbnail to version: %@
[DEBUG] 
%llx Got %lu versions for %@ (recordID:%@ %@)
[DEBUG] Considering etag %@ %@
[DEBUG] Skipping current version
[ERROR] Unable to deserialize record: %@
[DEBUG] The version is already cached locally, skip it
[ERROR] Version is lacking a name
[ERROR] Unable to create fault for '%@': %@
[WARNING] User has no formatted name
[DEBUG] sending %@ at '%@'
[DEBUG] Thumbnail is already present, not downloading twice
[DEBUG] completed fetching non-local versions of %@
[DEBUG] 
%llx Getting versions for %@
[DEBUG] scheduling operation %@
