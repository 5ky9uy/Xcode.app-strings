General
v8@?0
com.apple.carkit
com.apple.carkit.service
v16@?0@"NSError"8
serviceConnection
T@"NSXPCConnection",&,N,V_serviceConnection
service
T@"<CRCarKitService>",&,N,V_service
outstandingSemaphores
T@"NSMutableArray",&,N,V_outstandingSemaphores
com.apple.carkit.app
com.apple.carkit.app.service
v24@?0@"NSSet"8@"NSError"16
blacklistedBundleIDs
T@"NSSet",&,N,V_blacklistedBundleIDs
blacklistAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_blacklistAccessQueue
CRPairedVehiclesDidChangeNotification
v24@?0@"CRVehicle"8@"NSError"16
v24@?0@"<CRCarKitService>"8@"NSObject<OS_dispatch_semaphore>"16
v20@?0B8@"NSError"12
B24@?0@"CRVehicle"8@"NSDictionary"16
serviceClient
T@"CRCarKitServiceClient",&,N,V_serviceClient
CRVehicleInformationInteractionRestrictionsChangedNotification
CRVehicleInformationVehicleAmbientBrightnessChangedNotification
com.apple.Maps.LightLevelChangeNotification
v12@?0i8
externalDevice
T@"AVExternalDevice",&,N,V_externalDevice
mapsFallbackAmbientBrightness
TQ,N,V_mapsFallbackAmbientBrightness
driverPosition
TQ,R,N
interactionRestrictions
vehicleAmbientBrightness
UIScreenDidConnectNotification
/System/Library/Frameworks/UIKit.framework/UIKit
UIScreenDidDisconnectNotification
AVExternalDeviceLimitedUIChangedNotification
/System/Library/Frameworks/AVFoundation.framework/AVFoundation
AVExternalDeviceNightModeChangedNotification
AVExternalDevice
Unable to find class %s
AVExternalDeviceLimitedUIElementSoftKeyboard
AVExternalDeviceLimitedUIElementNonMusicLists
AVExternalDeviceLimitedUIElementMusicLists
identifier
vehicleName
certificateSerialNumber
pairingStatus
bluetoothAddress
carplayWiFiUUID
carplayProtocols
unknown
declined
accepted
%@ (identifier: %@, pairing: %@, %@: %@, %@: %@, %@: %@)
<unnamed>
supportsSecureCoding
TB,R
T@"NSUUID",&,N,V_identifier
T@"NSData",&,N,V_certificateSerialNumber
T@"NSString",&,N,V_vehicleName
TQ,N,V_pairingStatus
T@"NSString",&,N,V_bluetoothAddress
T@"NSString",&,N,V_carplayWiFiUUID
accessoryProtocols
T@"NSSet",&,N,V_accessoryProtocols
isPaired
TB,R,N
com.apple.carplay
CRLogging
CRSettingsDebugUI
com.apple.carplay.CRLoggingChanged
com.apple.airplay
carWiFi
StarkCapability
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
cachedCarPlayAllowed
TB,N,V_cachedCarPlayAllowed
preferencesDelegate
T@"<CRCarPlayPreferencesDelegate>",W,N,V_preferencesDelegate
Localizable
wapi
WIFI
WLAN
Logs/CrashReporter/DiagnosticLogs/CarPlay
yyyy-MM-dd-HH-mm-ss
%@%@
CarPlay-
DeviceScreenshot.png
CarPlayScreenshot.png
ComponentName
PEP CarPlay (New Bugs)
ComponentVersion
ComponentID
597444
Platform
CarPlay
Reproducibility
I Didn't Try
Title
[CarPlay]
As you file this bug, please include your vehicle's (or head unit's) make/model/year in the description.
Error: AirPlay Diagnostic logs failed to attach, so a sysdiagnose will be generated and attached.
AirPlayDiagnostics.tar.gz
Screenshot
Attachments
AutoDiagnostics
phone
Description
Started gathering logs at %@
tap-to-radar://new?
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
AFLanguageCodeDidChangeNotification
AFPreferencesDidChangeNotification
AFPreferences
AFConnection
UIImagePNGRepresentation
%@=%@
widthPixels
heightPixels
imageData
prerendered
[%@ bytes: %lu, width: %f, height: %f, prerendered: %@]
pixelSize
T{CGSize=dd},R,N,V_pixelSize
T@"NSData",R,C,N,V_imageData
TB,R,N,GisPrerendered,V_prerendered
softKeyboard
softPhoneKeypad
nonMusicLists
musicLists
japanMaps
Unknown
Ethernet
WiFi
Keyboard
Phone Keypad
Non-Music Lists
Music Lists
Japan Maps
@16@?0^{__CFString=}8
[%@ name: %@, modelName: %@, transport: %@, right hand drive: %@, limitableUserInterfaces: (%@), manufacturerIcons: %@, manufacturerIconLabel: %@, manufacturerIconVisible: %@]
endpointIdentifier
T@"NSString",R,C,N,V_endpointIdentifier
name
T@"NSString",R,C,N,V_name
modelName
T@"NSString",R,C,N,V_modelName
transportType
TQ,R,N,V_transportType
rightHandDrive
TB,R,N,V_rightHandDrive
limitableUserInterfaces
TQ,R,N,V_limitableUserInterfaces
manufacturerIcons
T@"NSArray",R,C,N,V_manufacturerIcons
manufacturerIconLabel
T@"NSString",R,C,N,V_manufacturerIconLabel
manufacturerIconVisible
TB,R,N,V_manufacturerIconVisible
com.apple.carkit.monitoring.service
vehicleCertificateSerial
T@"NSData",&,N,V_vehicleCertificateSerial
monitoring
TB,N,GisMonitoring,V_monitoring
delegate
T@"<CRVehiclePolicyMonitoring>",W,N,V_delegate
SBStarkCapable
SBStarkLaunchModes
Siri
GeoSupported
com.apple.developer.playable-content
com.apple.developer.carplay-messaging
com.apple.developer.carplay-calling
com.apple.developer.carplay-protocols
__bundleId
__supportsCarFullScreen
bundleIdentifier
T@"NSString",C,N,V_bundleIdentifier
systemApp
TB,N,GisSystemApp,V_systemApp
requiresGeoSupport
TB,N,V_requiresGeoSupport
launchUsingSiri
TB,N,V_launchUsingSiri
supportsPlayableContent
TB,N,V_supportsPlayableContent
supportsMessaging
TB,N,V_supportsMessaging
supportsCalling
TB,N,V_supportsCalling
autoMakerProtocols
T@"NSSet",&,N,V_autoMakerProtocols
carPlaySupported
TB,N,GisCarPlaySupported,V_carPlaySupported
canDisplayOnCarScreen
TB,N,V_canDisplayOnCarScreen
siriActivationOptions
T@"NSDictionary",C,N,V_siriActivationOptions
launchUsingMusicUIService
TB,N,V_launchUsingMusicUIService
badgesAppIcon
TB,N,V_badgesAppIcon
showsNotifications
TB,N,V_showsNotifications
handlesCarIntents
TB,N,V_handlesCarIntents
com.apple.carkit.app.policy-changed
com.apple.carkit.app.blacklist-changed
v24@?0@"NSArray"8@"NSError"16
blacklist
T@"CRCarPlayAppBlacklist",&,N,V_blacklist
_simulatedAccessoryProtocols
T@"NSSet",&,N,V__simulatedAccessoryProtocols
geoSupported
TB,N,GisGeoSupported,V_geoSupported
LSApplicationProxy
/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
kAssistantDirectActionEventKey
%@ (protocols: %@, bluetoothAddress: %@)
v20@?0C8@"NSData"12
BluetoothAddress
UniqueDeviceID
T@"NSArray",&,N,V_accessoryProtocols
connectionID
T@"NSNumber",&,N,V_connectionID
supportsUSBCarPlay
TB,N,V_supportsUSBCarPlay
supportsWirelessCarPlay
TB,N,V_supportsWirelessCarPlay
supportsWiredBluetoothPairing
TB,N,V_supportsWiredBluetoothPairing
accessory
T@"EAAccessory",W,N,V_accessory
00:00:00:00:00:00
vehiclesBySerialNumber
T@"NSMutableDictionary",&,N,V_vehiclesBySerialNumber
vehicleAccessoryDelegate
T@"<CRVehicleAccessoryManagerDelegate>",W,N,V_vehicleAccessoryDelegate
com.apple.CarPlay.VehicleCount
com.apple.CarPlay.WiredAccepted
com.apple.CarPlay.WiredDeclined
com.apple.CarPlay.WirelessAccepted
com.apple.CarPlay.WirelessDeclined
com.apple.CarPlay.WiredToWirelessAccepted
com.apple.CarPlay.WiredToWirelessDeclined
com.apple.CarPlay.ReconnectionEnableWiFiAccepted
com.apple.CarPlay.ReconnectionEnableWiFiDeclined
com.apple.CarPlay.ReconnectionSuccessCount
com.apple.CarPlay.ReconnectionFailureCount
shouldSuggestCarPlayTips
ADClientSetValueForScalarKey
/System/Library/PrivateFrameworks/AggregateDictionary.framework/AggregateDictionary
ADClientAddValueForScalarKey
CARSessionNightModeChangedNotification
CARSessionLimitUserInterfacesChangedNotification
CARSessionElectronicTollCollectionStateChangedNotification
CARSessionScreenBecameAvailableNotification
CARSessionScreenBecameUnavailableNotification
CARSessionOwnsTurnByTurnNavigationChangedNotification
CARSessionPerformanceReportPostedNotification
CARSessionAuthenticationSucceededNotification
CARSessionServerConnectionDiedNotification
%@ configuration: %@, night mode: %@, limit UI: %@, ETC available: %@ 
unset
authenticated
TB,R,N,GisAuthenticated,V_authenticated
configuration
T@"CARSessionConfiguration",R,N,V_configuration
nightMode
T@"NSNumber",R,C,N
limitUserInterfaces
electronicTollCollectionAvailable
com.apple.CarKit.CARSessionStatus
com.apple.carplay.in-car
session
T@"CARSession",&,N,V_session
sessionUpdatesQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionUpdatesQueue
connectingTimer
T@"NSObject<OS_dispatch_source>",&,N,V_connectingTimer
timeoutInterval
TQ,N,V_timeoutInterval
currentSession
T@"CARSession",R,N
sessionObserver
T@"<CARSessionObserving>",W,N,V_sessionObserver
init
array
setOutstandingSemaphores:
saveVehicle:reply:
removeVehicle:reply:
fetchAllVehiclesWithReply:
hasVehiclesWithReply:
handleDidConnectBluetoothAddress:reply:
handleDidDisconnectBluetoothAddress:reply:
isBluetoothInCarWithReply:
saveWiFiCredentialsForAccessoryConnectionIdentifier:credentials:reply:
allowsConnectionsForWiFiUUID:reply:
allowsConnectionsForCertificateSerial:reply:
isPairedWithCertificateSerial:reply:
handleCarPlayRestrictionChangedWithReply:
isCarPlayAllowedWithReply:
interfaceWithProtocol:
class
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
alloc
initWithMachServiceName:options:
setRemoteObjectInterface:
resume
setServiceConnection:
_releaseAllServiceSemaphores
remoteObjectProxyWithErrorHandler:
setService:
outstandingSemaphores
addObject:
removeObject:
countByEnumeratingWithState:objects:count:
removeAllObjects
_serviceSemaphore
service
_blockOnServiceSemaphore:
performServiceCallBlock:
.cxx_destruct
serviceConnection
_serviceConnection
_service
_outstandingSemaphores
setBlacklistAccessQueue:
_fetchBlacklist
blacklistAccessQueue
fetchAppBlacklistWithReply:
synchronousRemoteObjectProxyWithErrorHandler:
setBlacklistedBundleIDs:
invalidate
blacklistedBundleIDs
containsObject:
containsBundleIdentifier:
_blacklistedBundleIDs
_blacklistAccessQueue
setServiceClient:
serviceClient
allObjects
allVehicles
isPaired
predicateWithBlock:
filteredArrayUsingPredicate:
bluetoothAddress
isEqualToString:
carplayWiFiUUID
vehicleName
certificateSerialNumber
isEqualToData:
saveVehicle:
removeVehicle:
pairedVehicles
vehicleForBluetoothAddress:
vehicleNameForWiFiUUID:
vehicleForCertificateSerial:
_serviceClient
defaultCenter
_screenDidUpdate:
addObserver:selector:name:object:
_handleLimitedUIChanged:
_handleNightModeChanged:
currentCarPlayExternalDevice
setExternalDevice:
_fetchMapsFallbackAmbientBrightnessWithToken:
removeObserver:
dealloc
setMapsFallbackAmbientBrightness:
externalDevice
nightModeSupported
postNotificationName:object:
rightHandDrive
limitedUI
limitedUIElements
nightMode
mapsFallbackAmbientBrightness
driverPosition
interactionRestrictions
vehicleAmbientBrightness
_mapsAmbientBrightnessNotifyToken
_externalDevice
_mapsFallbackAmbientBrightness
initWithIdentifier:certificateSerial:
UUID
setIdentifier:
setCertificateSerialNumber:
setPairingStatus:
containsValueForKey:
decodeObjectOfClass:forKey:
setVehicleName:
integerValue
setBluetoothAddress:
setCarplayWiFiUUID:
decodeObjectOfClasses:forKey:
setAccessoryProtocols:
identifier
encodeObject:forKey:
pairingStatus
numberWithInteger:
accessoryProtocols
setWithArray:
isKindOfClass:
isEqual:
hash
UUIDString
_pairingDebugDescription
stringWithFormat:
length
supportsSecureCoding
vehicleForVehicleAccessory:
encodeWithCoder:
initWithCoder:
description
mergeAttributesFromVehicle:
displayName
_identifier
_vehicleName
_accessoryProtocols
_certificateSerialNumber
_pairingStatus
_bluetoothAddress
_carplayWiFiUUID
sharedConnection
addObserver:
handleAssistantLanguageChanged:
handleAssistantPreferencesChanged:
_isCarPlayAllowed
setCachedCarPlayAllowed:
cachedCarPlayAllowed
preferencesDelegate
handleCarPlayAllowedDidChange
respondsToSelector:
_updateCarPlayAllowed
isCarPlayCapable
isVehicleUIAllowed
sharedPreferences
assistantIsEnabled
currentLanguageCode
assistantIsSupportedForLanguageCode:error:
isCurrentLocaleNativelySupported
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
isCarPlayAllowed
isWirelessCarPlayEnabled
setPreferencesDelegate:
_cachedCarPlayAllowed
_preferencesDelegate
connectedVehicleAccessories
bundleForClass:
localizedStringForKey:value:table:
stringByReplacingOccurrencesOfString:withString:
boolValue
defaultManager
URLsForDirectory:inDomains:
firstObject
URLByAppendingPathComponent:
setDateFormat:
date
stringFromDate:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
writeToURL:atomically:
dictionaryWithObjects:forKeys:count:
mutableCopy
arrayWithObjects:count:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
relativePath
lastPathComponent
arrayByAddingObject:
count
componentsJoinedByString:
setObject:forKeyedSubscript:
stringByAppendingString:
URLWithString:
setWithCapacity:
objectForKey:
URLHostAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
floatValue
imageData
pixelSize
isPrerendered
initWithPropertySupplier:
_prerendered
_imageData
_pixelSize
_limitableUserInterfacesFromLimitedUIValues:
name
modelName
transportType
_descriptionForTransportType:
limitableUserInterfaces
_descriptionForLimitableUserInterfaces:
manufacturerIcons
manufacturerIconLabel
manufacturerIconVisible
endpointIdentifier
_rightHandDrive
_manufacturerIconVisible
_name
_modelName
_transportType
_limitableUserInterfaces
_manufacturerIcons
_manufacturerIconLabel
_endpointIdentifier
setVehicleCertificateSerial:
monitoringConnection
setMonitoring:
stopMonitoring
startMonitoringCertificateSerial:reply:
stopMonitoringCertificateSerial:reply:
willEnableCertificateSerial:reply:
willDisableCertificateSerial:reply:
setExportedInterface:
setExportedObject:
isMonitoring
startMonitoring
setInterruptionHandler:
vehicleCertificateSerial
delegate
willEnableVehicleTrackedByMonitor:
willDisableVehicleTrackedByMonitor:
initWithVehicleCertificateSerial:
setDelegate:
_monitoring
_vehicleCertificateSerial
_delegate
setWithObject:
numberForKey:
setBundleIdentifier:
setSystemApp:
setLaunchUsingSiri:
setRequiresGeoSupport:
setSupportsPlayableContent:
setSupportsMessaging:
setSupportsCalling:
arrayForKey:
setAutoMakerProtocols:
bundleIdentifier
requiredInfoKeys
objectsForInfoDictionaryKeys:
requiredEntitlementKeys
entitlementValuesForKeys:
declarationForBundleIdentifier:info:entitlements:
_initWithKeys:forDictionary:
declarationForAppProxy:
declarationForBundleIdentifier:entitlements:infoPlist:
isSystemApp
requiresGeoSupport
launchUsingSiri
supportsPlayableContent
supportsMessaging
supportsCalling
autoMakerProtocols
_systemApp
_requiresGeoSupport
_launchUsingSiri
_supportsPlayableContent
_supportsMessaging
_supportsCalling
_bundleIdentifier
_autoMakerProtocols
setCarPlaySupported:
setCanDisplayOnCarScreen:
setSiriActivationOptions:
setLaunchUsingMusicUIService:
setBadgesAppIcon:
setShowsNotifications:
setHandlesCarIntents:
isCarPlaySupported
canDisplayOnCarScreen
siriActivationOptions
launchUsingMusicUIService
badgesAppIcon
showsNotifications
handlesCarIntents
_carPlaySupported
_canDisplayOnCarScreen
_launchUsingMusicUIService
_badgesAppIcon
_showsNotifications
_handlesCarIntents
_siriActivationOptions
setBlacklist:
waitForSessionInitialization
_simulatedAccessoryProtocols
intersectsSet:
applicationProxyForIdentifier:
bundleURL
path
_intents_extensionMatchingAttributesForIntents:
setObject:forKey:
extensionsWithMatchingAttributes:completion:
blacklist
isGeoSupported
_appWithDeclaration:supportsAllIntents:
_connectedProtocolsIntersectsAppProtocols:
_carIntentIdentifiers
_appWithDeclaration:supportsAnyIntents:
numberWithBool:
_plugIn
containingUrl
applicationProxyForBundleURL:
_sessionStatus
effectivePolicyForAppDeclaration:
fetchApplicationBundleIdentifiersForCarIntents:
setGeoSupported:
set_simulatedAccessoryProtocols:
_geoSupported
_blacklist
__simulatedAccessoryProtocols
postNotificationName:object:userInfo:
accessory
getVehicleInfoData
beginOOBBTPairingWithCompletionBlock:
requestIAPAccessoryWiFiCredentials
sendDeviceIdentifierNotification:usbIdentifier:
isBluetoothConnected
_updateName
beginWiredBluetoothPairing:
requestWiFiCredentials
sendDeviceTransportIdentifiers
supportsUSBCarPlay
setSupportsUSBCarPlay:
supportsWirelessCarPlay
setSupportsWirelessCarPlay:
supportsWiredBluetoothPairing
setSupportsWiredBluetoothPairing:
connectionID
setConnectionID:
setAccessory:
_supportsUSBCarPlay
_supportsWirelessCarPlay
_supportsWiredBluetoothPairing
_connectionID
_accessory
macAddress
_isValidAccessoryMacAddress:
supportsCarPlay
dictionary
setVehiclesBySerialNumber:
_primeConnectedVehicleAccessories
sharedAccessoryManager
registerForLocalNotifications
handleAccessoryConnect:
handleAccessoryDisconnect:
handleAccessoryInformationUpdate:
unregisterForLocalNotifications
connectedAccessories
_vehicleForAccessory:
_isVehicleAccessory:
_certificateSerialNumberForAccessory:
vehiclesBySerialNumber
_updateVehicle:usingAccessory:
unsignedIntegerValue
numberWithUnsignedInteger:
protocolStrings
supportsOOBBTPairing
userInfo
vehicleAccessoryDelegate
accessoryManager:didConnectVehicleAccessory:
allValues
accessoryManager:didDisconnectVehicleAccessory:
accessoryManager:didUpdateVehicleAccessory:
vehicleAccessoryForCertificateSerial:
vehicleAccessoryForiAPConnectionIdentifier:
setVehicleAccessoryDelegate:
_vehicleAccessoryDelegate
_vehiclesBySerialNumber
shouldSuggestCarPlayTips
data
requestCarUIForURL:
null
configuration
limitUserInterfaces
electronicTollCollectionAvailable
initWithFigEndpoint:
MFiCertificateSerialNumber
requestCarUI
ownsScreen
ownsTurnByTurnNavigation
recognizingSpeech
borrowScreenForClient:reason:
takeScreenForClient:reason:
takeScreenForConnection
requestTurnByTurnNavigationOwnership
isAuthenticated
_authenticated
_configuration
_handleInCarNotification
setSession:
setSessionUpdatesQueue:
setTimeoutInterval:
sessionUpdatesQueue
_handleConnectingTimeout
setConnectingTimer:
_handleAuthenticationSucceeded:
_updateSession
session
_notifyStartedConnectionAttemptOnTransport:
_startConnectingTimer
connectingTimer
timeoutInterval
_stopConnectingTimer
_notifyCancelledConnectionAttemptOnTransport:
sessionObserver
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
currentSession
_notifyDidConnectSession:
_notifyDidDisconnectSession:
setSessionObserver:
_sessionObserver
_session
_sessionUpdatesQueue
_connectingTimer
_timeoutInterval
v32@0:8@16@?24
v32@0:8@"CRVehicle"16@?<v@?@"CRVehicle"@"NSError">24
v32@0:8@"CRVehicle"16@?<v@?B@"NSError">24
v24@0:8@?16
v24@0:8@?<v@?@"NSSet"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSString"16@?<v@?B@"NSString"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSString"@"NSError">16
v40@0:8Q16@24@?32
v40@0:8Q16@"NSDictionary"24@?<v@?B@"NSString"@"NSError">32
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v24@0:8@?<v@?>16
@16@0:8
v24@0:8@16
v16@0:8
@"NSXPCConnection"
@"<CRCarKitService>"
@"NSMutableArray"
B24@0:8@16
@"NSSet"
@"NSObject<OS_dispatch_queue>"
@24@0:8@16
@"CRCarKitServiceClient"
v20@0:8i16
v24@0:8Q16
Q16@0:8
@"AVExternalDevice"
B16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16@24
@"NSUUID"
@"NSString"
@"NSData"
v32@0:8@16@24
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v20@0:8B16
@"<CRCarPlayPreferencesDelegate>"
@24@0:8@?16
{CGSize=dd}16@0:8
{CGSize="width"d"height"d}
@24@0:8Q16
Q24@0:8@16
@"NSArray"
v32@0:8@"NSData"16@?<v@?>24
@"<CRVehiclePolicyMonitoring>"
@40@0:8@16@24@32
@"NSDictionary"
B32@0:8@16@24
@"CARSessionStatus"
@"CRCarPlayAppBlacklist"
@"NSNumber"
@"EAAccessory"
@"<CRVehicleAccessoryManagerDelegate>"
@"NSMutableDictionary"
@"CARSessionConfiguration"
@"<CARSessionObserving>"
@"CARSession"
@"NSObject<OS_dispatch_source>"
CRCarKitService
CRCarKitServiceClient
CRCarPlayAppService
CRCarPlayAppBlacklist
CRPairedVehicleManager
CRVehicleInformation
CRVehicle
NSSecureCoding
NSCoding
CRCarPlayPreferences
MCProfileConnectionObserver
NSObject
CARManufacturerIcon
CARSessionConfiguration
CRCarKitMonitoringServerService
CRCarKitMonitoringClientService
CRVehiclePolicyMonitor
CRCarPlayAppDeclaration
CRCarPlayAppPolicy
CRCarPlayAppPolicyEvaluator
CRVehicleAccessory
CRVehicleAccessoryManager
CRUsageInformation
CARSession
CARSessionStatus
CarKit Service Error: %@
Timed out waiting on the CarKit service
CarPlay app service error: %@
CarPlay app blacklisted bundle IDs: %@
CarPlay app fetch error: %@
app %@ is CarPlay blacklisted
device is CarPlay capable
device is not CarPlay capable
CarPlay disabled by restrictions
Siri allows CarPlay
Siri does not allow CarPlay
Error creating CarPlay logging folder: %@
failed to connect to monitoring service %@
started monitoring
stopped monitoring
client received willEnableCertificateSerial
not monitoring this serial, ignoring
client received willDisableCertificateSerial
failed to lookup intent extension for %@: %@
app %@ has entitlement but doesn't support intent %@
Failed to lookup app %@
app %@ has entitlement but doesn't support intents %@
car intents applications: %@
Vehicle did not have display name, falling back to "%@"
beginOOBBTPairingWithCompletionBlock %i %@
requesting WiFi credentials
sending device transport identifiers BT: %@ USB: %@
Accessory %@ does not support CarPlay
Accessory %@ does not have a certificate serial number
starting session connecting timeout
attempting connection on transport %{public}@
cancelled connection attempt on transport %{public}@
connected session %p
disconnected session %p
@(#)PROGRAM:CarKit  PROJECT:CarKit-1
