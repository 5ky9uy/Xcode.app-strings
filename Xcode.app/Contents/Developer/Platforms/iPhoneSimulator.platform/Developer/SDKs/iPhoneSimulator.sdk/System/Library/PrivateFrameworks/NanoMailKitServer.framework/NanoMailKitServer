?______
?}}}}}}
?QQQQQQ
?\\\\\\
?ZZZZZZ
?ZZZZZZ
?qqqqqq
?555555
?UUUUUU
?333333
?======
?::::::
?zzzzzz
?rrrrrr
?VVVVVV
?[[[[[[
?PPPPPP
?888888
?UUUUUU
?WWWWWW
?vvvvvv
?\\\\\\
?SSSSSS
?<<<<<<
?QQQQQQ
?777777
?yyyyyy
?PPPPPP
com.apple.NanoMail.MessageReceivedDelay.%@.%@.%lu.%@
com.apple.NanoMail.MessageReceivedDelay.%@.Grouped
com.apple.NanoMail.MessageUpdatedDelay.%@.%lu.%@
com.apple.NanoMail.MessageUpdatedDelay.Grouped
com.apple.NanoMail.MessageDeletedDelay.%@.%lu.%@
com.apple.NanoMail.MessageDeletedDelay.Grouped
com.apple.NanoMail.ContentReceivedDelay.%@.%lu.%@
com.apple.NanoMail.ContentReceivedDelay.Grouped
com.apple.NanoMail.ContentReceivedSizeKB.%@.%lu.%@
com.apple.NanoMail.ContentReceivedSizeKB.Grouped
com.apple.NanoMail.UsingMainAlternative
com.apple.NanoMail.UsingTextAlternative
com.apple.NanoMail.UsingNoAlternatives
com.apple.NanoMail.FullSyncRequested.FromWatch.Corruption
com.apple.NanoMail.FullSyncRequested.FromWatch.Migration
com.apple.NanoMail.FullSyncRequested.FromWatch.IDSFailure
com.apple.NanoMail.FullSyncRequested.FromWatch.VersionMatch
com.apple.NanoMail.FullSyncRequested.FromPhone.VersionMatch
com.apple.NanoMail.HaltSyncRequested.FromWatch.LackOfUsage
com.apple.NanoMail.HaltSyncRequested.FromPhone.LackOfConnectivity
com.apple.NanoMail.ImageAttachmentReceivedDelay.%@.%@.%lu.%@
com.apple.NanoMail.ImageAttachmentReceivedDelay.Grouped
com.apple.NanoMail.ImageAttachmentReceivedSizeKBDiv10.%@.%@.%lu.%@
com.apple.NanoMail.ImageAttachmentReceivedSizeKBDiv10.Grouped
com.apple.NanoMail.NotificationRendered.RealContent
com.apple.NanoMail.NotificationRendered.ForwardedMessageAndContent
com.apple.NanoMail.NotificationRendered.ForwardedContent.NotDownloadedByCompanion
com.apple.NanoMail.NotificationRendered.ForwardedContent.NotSynced
com.apple.NanoMail.NotificationRendered.MailboxNotSynced
com.apple.NanoMail.FullSyncDelay.%lu.%@
com.apple.NanoMail.FullSyncDelay.Grouped
com.apple.NanoMail.MoreMessagesReceivedDelay.%@.%lu.%@
com.apple.NanoMail.MoreMessagesReceivedDelay.Grouped
com.apple.NanoMail.MoreMessagesForConversationReceivedDelay.%@.%lu.%@
com.apple.NanoMail.MoreMessagesForConversationReceivedDelay.Grouped
com.apple.NanoMail.MailboxTypeSynced.Unknown
com.apple.NanoMail.MailboxTypeSynced.None
com.apple.NanoMail.MailboxTypeSynced.AllInboxes
com.apple.NanoMail.MailboxTypeSynced.VIP
com.apple.NanoMail.MailboxTypeSynced.Flagged
com.apple.NanoMail.MailboxTypeSynced.Unread
com.apple.NanoMail.MailboxTypeSynced.ToOrCC
com.apple.NanoMail.MailboxTypeSynced.ImportantThreads
com.apple.NanoMail.MailboxTypeSynced.Today
com.apple.NanoMail.MailboxTypeSynced.AccountSpecificInbox
com.apple.NanoMail.MailboxTypeSynced.AccountSpecificCustom
0OrUnder
5_10
10_15
15_20
20_30
30Plus
Notification
RegularMessage
BuildVersion
unknown
v8@?0
%@.%@
%@ %@
fullSyncVersion
conversationId
beforeDateReceived
hasFullSyncVersion
TB,N
TI,N,V_fullSyncVersion
hasConversationId
TB,R,N
T@"NSString",&,N,V_conversationId
hasBeforeDateReceived
T@"NSData",&,N,V_beforeDateReceived
accountId
hasAccountId
T@"NSString",&,N,V_accountId
messageId
updatedStatus
statusVersion
hasMessageId
T@"NSString",&,N,V_messageId
hasUpdatedStatus
TI,N,V_updatedStatus
hasStatusVersion
TI,N,V_statusVersion
com.apple.NanoMail.resendingQueue
endpointQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_endpointQueue
resendingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_resendingQueue
datesForIDSIdentifiersScheduledToBeResent
T@"NSMutableDictionary",&,N,V_datesForIDSIdentifiersScheduledToBeResent
lastResendIntervalKeyedByIDSIdentifier
T@"NSMutableDictionary",&,N,V_lastResendIntervalKeyedByIDSIdentifier
VFS-nanomaild-Protected
ATTACH DATABASE "file:%@?" AS %@
PRAGMA %@.journal_mode = WAL;
DETACH DATABASE %@
protectedDatabasePath
T@"NSString",&,N,V_protectedDatabasePath
protectedDatabaseName
T@"NSString",&,N,V_protectedDatabaseName
protectedDatabaseAttached
TB,R,N,V_protectedDatabaseAttached
delegate
T@"<NNMKAccountsSyncServiceServerDelegate>",W,N,V_delegate
subject
body
composedMessageId
sendingType
referenceMessageId
includeAttachments
T@"NSMutableArray",&,N,V_tos
T@"NSMutableArray",&,N,V_ccs
hasSubject
T@"NSString",&,N,V_subject
hasBody
T@"NSString",&,N,V_body
hasComposedMessageId
T@"NSString",&,N,V_composedMessageId
hasSendingType
TI,N,V_sendingType
hasReferenceMessageId
T@"NSString",&,N,V_referenceMessageId
hasIncludeAttachments
TB,N,V_includeAttachments
screenWidth
Td,N,V_screenWidth
screenScale
Td,N,V_screenScale
Sync
com.apple.NanoMail
aliceblue
antiquewhite
aqua
aquamarine
azure
beige
bisque
black
blanchedalmond
blue
blueviolet
brown
burlywood
cadetblue
chartreuse
chocolate
coral
cornflowerblue
cornsilk
crimson
cyan
darkblue
darkcyan
darkgoldenrod
darkgray
darkgreen
darkkhaki
darkmagenta
darkolivegreen
darkorange
darkorchid
darkred
darksalmon
darkseagreen
darkslateblue
darkslategray
darkturquoise
darkviolet
deeppink
deepskyblue
dimgray
dodgerblue
firebrick
floralwhite
forestgreen
fuchsia
gainsboro
ghostwhite
gold
goldenrod
gray
green
greenyellow
grey
honeydew
hotpink
indianred
indigo
ivory
khaki
lavender
lavenderblush
lawngreen
lemonchiffon
lightblue
lightcoral
lightcyan
lightgoldenrodyellow
lightgreen
lightgrey
lightpink
lightsalmon
lightseagreen
lightskyblue
lightslategray
lightsteelblue
lightyellow
lime
limegreen
linen
magenta
maroon
mediumaquamarine
mediumblue
mediumorchid
mediumpurple
mediumseagreen
mediumslateblue
mediumspringgreen
mediumturquoise
mediumvioletred
midnightblue
mintcream
mistyrose
moccasin
navajowhite
navy
oldlace
olive
olivedrab
orange
orangered
orchid
palegoldenrod
palegreen
paleturquoise
palevioletred
papayawhip
peachpuff
peru
pink
plum
powderblue
purple
rosybrown
royalblue
saddlebrown
salmon
sandybrown
seagreen
seashell
sienna
silver
skyblue
slateblue
slategray
snow
springgreen
steelblue
teal
thistle
tomato
turquoise
violet
wheat
white
whitesmoke
yellow
yellowgreen
%C%C%C%C%C%C
com.apple.private.alloy.mail.sync.messages
%lu-%@-%@
%lu-%d-%@
T@"<NNMKFetchesSyncServiceClientDelegate>",W,N,V_delegate
%@%ld.
cid:
data:
;base64,
width
height
style
table
data:image/
blockquote
type
class
v40@?0Q8@"NSString"16@"NSString"24^B32
gmail_quote
head
strike
font
color
bgColor
text-align
direction
(^|;)\s*(%@\s*:\s*)(.+?)(;|$)
left
center
right
justify
initial
<img
<div
<span
<font
?/}&
http:
https:
mailto:
ftp:
lock
T@"NSLock",&,N,V_lock
parsedAttributedString
T@"NSMutableAttributedString",&,N,V_parsedAttributedString
encoding
TQ,N,V_encoding
maxLength
TQ,N,V_maxLength
maxImageWidth
Td,N,V_maxImageWidth
partiallyParsed
T^B,N,V_partiallyParsed
imageAtachmentsDataKeyedByContentId
T@"NSMutableDictionary",&,N,V_imageAtachmentsDataKeyedByContentId
parsingSAXHandler
T{_xmlSAXHandler=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?I^v^?^?^?},N,V_parsingSAXHandler
parserContext
T^{_xmlParserCtxt=^{_xmlSAXHandler}^v^{_xmlDoc}ii**ii^{_xmlParserInput}ii^^{_xmlParserInput}^{_xmlNode}ii^^{_xmlNode}i{_xmlParserNodeInfoSeq=QQ^{_xmlParserNodeInfo}}iiiiii{_xmlValidCtxt=^v^?^?^{_xmlNode}ii^^{_xmlNode}I^{_xmlDoc}i^{_xmlValidState}ii^{_xmlValidState}^{_xmlAutomata}^{_xmlAutomataState}}ii**ii^*qqiii***^iii^ii^{_xmlParserInput}iiii^vii^vii^{_xmlDict}^*ii***iii^*^i^^v^{_xmlHashTable}^{_xmlHashTable}iiii^{_xmlNode}i^{_xmlAttr}{_xmlError=ii*i*i***ii^v^v}iQQ^{_xmlParserNodeInfo}ii^{_xmlParserNodeInfo}iQ},N,V_parserContext
charactersBuffer
T@"NSMutableData",&,N,V_charactersBuffer
stringAttributesStack
T@"NSMutableArray",&,N,V_stringAttributesStack
isQuoteElementStack
T@"NSMutableArray",&,N,V_isQuoteElementStack
currentQuoteLevel
TQ,N,V_currentQuoteLevel
listStack
T@"NSMutableArray",&,N,V_listStack
currentListLevel
TQ,N,V_currentListLevel
isLastCharAddedLineBreak
TB,N,V_isLastCharAddedLineBreak
containsBlacklistedElements
TB,N,V_containsBlacklistedElements
cancelled
TB,N,V_cancelled
ignoringElementSubtree
T@"NSString",&,N,V_ignoringElementSubtree
dateSynced
mainAlternativeValid
text
preview
partiallyLoaded
attachment
notificationMessage
hasDateSynced
T@"NSData",&,N,V_dateSynced
hasMainAlternativeValid
TB,N,V_mainAlternativeValid
hasText
T@"NSData",&,N,V_text
hasPreview
T@"NSData",&,N,V_preview
hasPartiallyLoaded
TB,N,V_partiallyLoaded
attachments
T@"NSMutableArray",&,N,V_attachments
hasNotificationMessage
T@"NNMKProtoMessage",&,N,V_notificationMessage
T@"<NNMKMessageContentSyncServiceServerDelegate>",W,N,V_delegate
removedMessageId
removedMessageIds
T@"NSMutableArray",&,N,V_removedMessageIds
com.apple.private.alloy.mail.fetches
UITrigger
Subject
From
com.apple.mobilemail.bulletin-subsection.VIP
com.apple.mobilemail.bulletin-subsection.ThreadNotify
com.apple.mobilemail.nanoFlags
com.apple.mobilemail.messageIdHash
MessageWillBeSynced
ResendIdentifier
initialMessage
dateForRequestingMoreMessages
syncedMailboxType
syncedMailboxAccountId
syncedMailboxURL
syncedMailboxCustomName
initialMessages
T@"NSMutableArray",&,N,V_initialMessages
hasDateForRequestingMoreMessages
T@"NSData",&,N,V_dateForRequestingMoreMessages
hasSyncedMailboxType
TI,N,V_syncedMailboxType
hasSyncedMailboxAccountId
T@"NSString",&,N,V_syncedMailboxAccountId
hasSyncedMailboxURL
T@"NSString",&,N,V_syncedMailboxURL
hasSyncedMailboxCustomName
T@"NSString",&,N,V_syncedMailboxCustomName
kFullMessagesSyncVersionKey
kIsMessagesSyncActiveKey
kIsMessagesSyncSuspendedByUsage
kIsMessagesSyncSuspendedByConnectivity
kDateReceivedCapForAddingKey
kOrganizeByThreadKey
kSyncedMailboxTypeKey
kSyncedMailboxAccountIdKey
kSyncedMailboxURLKey
kSyncedMailboxCustomNameKey
kDeviceScreenWidthKey
kDeviceScreenScaleKey
kProtectedContentChannelSupportedKey
kDisconnectedSinceKey
DatabaseVersionKey
CONTROL
DeviceSyncRegistryTables
v20@?0^{sqlite3_stmt=}8i16
SYNCED_MESSAGE
ATTACHMENT_NOT_SYNCED
IDS_IDENTIFIER_NOT_YET_ACKD
IDS_IDENTIFIER_OBJECT
SYNCED_ACCOUNT
SELECT 1 FROM SYNCED_MESSAGE WHERE ID = ?
ID = ?
v16@?0^{sqlite3_stmt=}8
INSERT OR REPLACE INTO SYNCED_MESSAGE (ID, STATUS, STATUS_VERSION, DATE_RECEIVED, USED_PROTECTED_CHANNEL, USED_NOTIFICATION_PRIORITY, CONTENT_SYNCED, CONTENT_SYNCED_NOTIFICATION_PRIORITY, CONTENT_SYNCED_BECAUSE_USER_REQUESTED, CONTENT_REQUESTED_BY_USER, CONVERSATION_ID, RESEND_REQUESTED, RESEND_INTERVAL, CONTENT_RESEND_INTERVAL) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DELETE FROM ATTACHMENT_NOT_SYNCED WHERE MESSAGE_ID = ?
INSERT INTO ATTACHMENT_NOT_SYNCED (MESSAGE_ID, CONTENT_ID) VALUES (?, ?)
DELETE FROM SYNCED_MESSAGE WHERE ID = ?
CONVERSATION_ID = ?
RESEND_REQUESTED = ?
CONTENT_REQUESTED_BY_USER = ?
((CONTENT_SYNCED = ?) OR ((SELECT COUNT(1) FROM ATTACHMENT_NOT_SYNCED WHERE MESSAGE_ID = ID) > 0)) AND (CONTENT_REQUESTED_BY_USER = ?)
SELECT MIN(DATE_RECEIVED) FROM SYNCED_MESSAGE
SELECT COUNT(ID) FROM SYNCED_MESSAGE
DELETE FROM SYNCED_MESSAGE WHERE DATE_RECEIVED <= ?
DATE_RECEIVED >= ?
ID IS NOT NULL
INSERT OR REPLACE INTO SYNCED_ACCOUNT (ID, DISPLAY_NAME, SHOULD_ARCHIVE, EMAIL_ADDRESSES, RESEND_REQUESTED, RESEND_INTERVAL) VALUES (?, ?, ?, ?, ?, ?)
DELETE FROM SYNCED_ACCOUNT WHERE ID = ?
SELECT ID FROM SYNCED_ACCOUNT WHERE RESEND_REQUESTED = ?
INSERT OR REPLACE INTO COMPOSED_MESSAGE (ID, PROGRESS) VALUES (?, ?)
SELECT PROGRESS FROM COMPOSED_MESSAGE WHERE ID = ?
SELECT ID FROM COMPOSED_MESSAGE
DELETE FROM COMPOSED_MESSAGE
DELETE FROM COMPOSED_MESSAGE WHERE ID = ?
INSERT INTO IDS_IDENTIFIER_NOT_YET_ACKD (IDS_IDENTIFIER, TYPE, DATE_TO_RESEND, RESEND_INTERVAL) VALUES (?, ?, NULL, ?)
INSERT INTO IDS_IDENTIFIER_OBJECT (IDS_IDENTIFIER, OBJECT_ID) VALUES (?, ?)
SELECT O.OBJECT_ID, I.TYPE, I.RESEND_INTERVAL FROM IDS_IDENTIFIER_NOT_YET_ACKD I INNER JOIN IDS_IDENTIFIER_OBJECT O ON O.IDS_IDENTIFIER == I.IDS_IDENTIFIER WHERE I.IDS_IDENTIFIER = ?
SELECT TYPE FROM IDS_IDENTIFIER_NOT_YET_ACKD WHERE IDS_IDENTIFIER = ?
DELETE FROM IDS_IDENTIFIER_NOT_YET_ACKD WHERE IDS_IDENTIFIER = ?
DELETE FROM IDS_IDENTIFIER_OBJECT WHERE IDS_IDENTIFIER = ?
UPDATE IDS_IDENTIFIER_NOT_YET_ACKD SET RESEND_INTERVAL = ?, DATE_TO_RESEND = ?, ERROR_CODE = ? WHERE IDS_IDENTIFIER = ?
UPDATE IDS_IDENTIFIER_NOT_YET_ACKD SET DATE_TO_RESEND = ?, RESEND_INTERVAL = ?, ERROR_CODE = ? WHERE ERROR_CODE = ?
SELECT IDS_IDENTIFIER, DATE_TO_RESEND FROM IDS_IDENTIFIER_NOT_YET_ACKD WHERE DATE_TO_RESEND IS NOT NULL
DELETE FROM IDS_IDENTIFIER_OBJECT WHERE OBJECT_ID = ? AND (SELECT TYPE FROM IDS_IDENTIFIER_NOT_YET_ACKD I WHERE I.IDS_IDENTIFIER = IDS_IDENTIFIER LIMIT 1) = ?
SELECT KEY, VALUE FROM CONTROL
INSERT OR REPLACE INTO CONTROL (KEY, VALUE) VALUES (?, ?)
DELETE FROM CONTROL WHERE KEY = ?
DELETE FROM %@
SELECT ID, STATUS, STATUS_VERSION, DATE_RECEIVED, USED_PROTECTED_CHANNEL, USED_NOTIFICATION_PRIORITY, CONTENT_SYNCED, CONTENT_SYNCED_NOTIFICATION_PRIORITY, CONTENT_SYNCED_BECAUSE_USER_REQUESTED, CONTENT_REQUESTED_BY_USER, (SELECT group_concat(T.CONTENT_ID, "
") FROM ATTACHMENT_NOT_SYNCED T WHERE T.MESSAGE_ID == ID GROUP BY T.MESSAGE_ID) AS ATTACHMENTS_NOT_SYNCED, CONVERSATION_ID, RESEND_REQUESTED, RESEND_INTERVAL, CONTENT_RESEND_INTERVAL FROM SYNCED_MESSAGE WHERE %@ ORDER BY DATE_RECEIVED DESC
SELECT ID FROM SYNCED_MESSAGE WHERE %@ ORDER BY DATE_RECEIVED DESC
 LIMIT %lu
WHERE %@
SELECT ID, DISPLAY_NAME, SHOULD_ARCHIVE, EMAIL_ADDRESSES, RESEND_REQUESTED, RESEND_INTERVAL FROM SYNCED_ACCOUNT %@
database
T@"NNMKSQLiteConnection",&,N,V_database
fullMessagesSyncVersion
TQ,N,V_fullMessagesSyncVersion
path
T@"NSString",R,N,V_path
isMessagesSyncActive
TB,N,V_isMessagesSyncActive
isMessagesSyncSuspendedByUsage
TB,N,V_isMessagesSyncSuspendedByUsage
isMessagesSyncSuspendedByConnectivity
TB,N,V_isMessagesSyncSuspendedByConnectivity
dateReceivedCapForAdding
T@"NSDate",&,N,V_dateReceivedCapForAdding
syncedMailbox
T@"NNMKSyncedMailbox",&,N,V_syncedMailbox
organizeByThread
TB,N,V_organizeByThread
deviceScreenWidth
Td,N,V_deviceScreenWidth
deviceScreenScale
Td,N,V_deviceScreenScale
protectedContentChannelSupported
TB,N,V_protectedContentChannelSupported
disconnectedSince
T@"NSDate",&,N,V_disconnectedSince
status
TQ,N,V_status
TQ,N,V_statusVersion
dateReceived
T@"NSDate",&,N,V_dateReceived
usedProtectedChannelForMessageSync
TB,N,V_usedProtectedChannelForMessageSync
usedNotificationPriorityForMessageSync
TB,N,V_usedNotificationPriorityForMessageSync
contentSyncedUsingNotificationPriority
TB,N,V_contentSyncedUsingNotificationPriority
contentSyncedBecauseUserRequested
TB,N,V_contentSyncedBecauseUserRequested
contentSynced
TB,N,V_contentSynced
contentRequestedByUser
TB,N,V_contentRequestedByUser
attachmentsContentIdsNotYetSynced
T@"NSMutableSet",&,N,V_attachmentsContentIdsNotYetSynced
resendRequested
TB,N,V_resendRequested
resendInterval
TQ,N,V_resendInterval
contentResendInterval
TQ,N,V_contentResendInterval
displayName
T@"NSString",&,N,V_displayName
shouldArchive
TB,N,V_shouldArchive
emailAddresses
T@"NSArray",&,N,V_emailAddresses
TQ,N,V_type
T@"NSURL",&,N,V_url
customName
T@"NSString",&,N,V_customName
T@"<NNMKMessagesSyncServiceClientDelegate>",W,N,V_delegate
kNSCodingKeyAccountId
kNSCodingKeyDisplayName
kNSCodingKeyShouldArchive
kNSCodingKeyEmailAddresses
Account Id: %@
Display Name: %@
Should Archive: %d
Email Addresses: %@
supportsSecureCoding
TB,R
highPriority
hasHighPriority
TB,N,V_highPriority
contentId
imageData
hasContentId
T@"NSString",&,N,V_contentId
hasImageData
T@"NSData",&,N,V_imageData
addedMessage
addedMessages
T@"NSMutableArray",&,N,V_addedMessages
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
serviceQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serviceQueue
idsService
T@"IDSService",&,N,V_idsService
idsServiceName
T@"NSString",&,N,V_idsServiceName
connectivityState
TQ,N,V_connectivityState
repeatPreventionRecords
T@"NSMutableDictionary",&,N,V_repeatPreventionRecords
repeatPreventionCleanupTimer
T@"NSObject<OS_dispatch_source>",&,N,V_repeatPreventionCleanupTimer
T@"<NNMKMessagesSyncServiceServerDelegate>",W,N,V_delegate
com.apple.private.alloy.mail.sync.protected
T@"<NNMKFetchesSyncServiceServerDelegate>",W,N,V_delegate
com.apple.nanomail.dbQueue
begin exclusive transaction
commit transaction
rollback transaction
select [sql] from %@sqlite_master where [type] = 'table' and lower(name) = ?
file:%@
v16@?0^i8
PRAGMA page_size = 4096;
PRAGMA auto_vacuum = 1;
PRAGMA cache_size = 100;
PRAGMA journal_mode = WAL;
T^{sqlite3=},N,V_db
dbQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_dbQueue
isInTransaction
TB,N,V_isInTransaction
cachedPreparedStatementsKeyedBySQLPattern
T@"NSMutableDictionary",&,N,V_cachedPreparedStatementsKeyedBySQLPattern
deletionState
hasDeletionState
TI,N,V_deletionState
messageStatusUpdate
messageStatusUpdates
T@"NSMutableArray",&,N,V_messageStatusUpdates
1.2.8
NNMKQuote
NNMKList
NNMKAlign
NNMKWritingDirection
NNMKInlineImage
NNMKInlineAttachment
NNMKColor
NNMKBold
NNMKItalic
NNMKBodyBg
NNMKCollapsableURL
size
kNSCodingKeyMessageId
kNSCodingKeyMainAlternativeValid
kNSCodingKeyTextData
kNSCodingKeyAttachments
kNSCodingKeyPartiallyLoaded
kNSCodingKeyContentId
kNSCodingKeyFileName
kNSCodingKeyFileSize
kNSCodingKeyType
kNSCodingKeyRenderOnClient
kNSCodingKeyImageSize
Message Id: %@
Text Data Length: %lu
Attachments: %@
textData
T@"NSData",&,N,V_textData
T@"NSArray",&,N,V_attachments
ContentID: %@, File Name: %@, File Size: %ld, Type: %d
fileName
T@"NSString",&,N,V_fileName
fileSize
TQ,N,V_fileSize
, Render On Client: %d, Size: %@
renderOnClient
TB,N,V_renderOnClient
imageSize
T{CGSize=dd},N,V_imageSize
T@"<NNMKAccountsSyncServiceClientDelegate>",W,N,V_delegate
com.apple.private.alloy.mail.sync.accounts
email
hasDisplayName
hasShouldArchive
emails
T@"NSMutableArray",&,N,V_emails
from
dateSent
messageIdHeader
remoteId
notificationMessageId
hasStatus
TI,N,V_status
hasFrom
T@"NSString",&,N,V_from
hasDateSent
T@"NSData",&,N,V_dateSent
hasDateReceived
T@"NSData",&,N,V_dateReceived
hasMessageIdHeader
T@"NSString",&,N,V_messageIdHeader
bccs
T@"NSMutableArray",&,N,V_bccs
hasRemoteId
T@"NSString",&,N,V_remoteId
hasNotificationMessageId
T@"NSString",&,N,V_notificationMessageId
messageDeletion
messageDeletions
T@"NSMutableArray",&,N,V_messageDeletions
T@"<NNMKMessageContentSyncServiceClientDelegate>",W,N,V_delegate
wantsBatchedResponse
currentMessageIdsAndStatus
currentDateForRequestingMoreMessages
willTrimDatabaseAfterResults
hasWantsBatchedResponse
TB,N,V_wantsBatchedResponse
hasCurrentMessageIdsAndStatus
T@"NSData",&,N,V_currentMessageIdsAndStatus
hasCurrentDateForRequestingMoreMessages
T@"NSData",&,N,V_currentDateForRequestingMoreMessages
hasWillTrimDatabaseAfterResults
TB,N,V_willTrimDatabaseAfterResults
progress
hasProgress
Ti,N,V_progress
messageAddition
messageUpdate
shouldTrimDatabase
messageAdditions
T@"NSMutableArray",&,N,V_messageAdditions
messageUpdates
T@"NSMutableArray",&,N,V_messageUpdates
hasShouldTrimDatabase
TB,N,V_shouldTrimDatabase
kNSCodingKeyComposedMessageId
kNSCodingKeySendingType
kNSCodingKeyTo
kNSCodingKeyCC
kNSCodingKeySubject
kNSCodingKeyBody
kNSCodingKeyReferenceMessageId
kNSCodingKeyIncludeAttachments
Composed Message Id: %@
Sending Type: %lu
To: %@
CC: %@
Subject: %@
Body: %@
Reference Message Id: %@
Include Attachments: %d
TQ,N,V_sendingType
T@"NSArray",&,N,V_to
T@"NSArray",&,N,V_cc
kNSCodingKeyDateReceived
kNSCodingKeyPreview
kNSCodingKeyStatus
kNSCodingKeyConversationId
kNSCodingKeyFrom
kNSCodingKeyBCC
kNSCodingKeyDateSent
kNSCodingKeyMessageIdHeader
kNSCodingKeyNotificationMessageId
x-apple-mail-message-id
%@:%@
x-apple-mail-message-id:\d{4}?&\w{8}-\w{4}-\w{4}-\w{4}-\w{12}
Message Id: %@
Conversation Id: %@
From: %@
Subject: %@
Date Received: %@
Status: %lu
T@"NSString",&,N
TQ,N
T@"NSArray",&,N,V_bcc
T@"NSDate",&,N,V_dateSent
T@"NSString",&,N,V_preview
com.apple.NanoMailKit.SQLJournal
%.15lu
directoryPath
T@"NSString",&,N,V_directoryPath
currentFileData
T@"NSMutableData",&,N,V_currentFileData
journalQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_journalQueue
filesCount
TQ,N,V_filesCount
initialAccount
initialAccounts
T@"NSMutableArray",&,N,V_initialAccounts
com.apple.private.alloy.mail.sync.content
messagesAreNew
hasMessagesAreNew
TB,N,V_messagesAreNew
com.apple.private.alloy.mail.sync.protected.content
InitialSync
Message
MessageContent
Account
SendingProgress
NanoMail/registry.sqlite
kPairedDeviceRegistryPathKey
com.apple.nanomail.providerQueue
com.apple.mobilemail
v32@?0@"NSString"8@"NSString"16@?<v@?>24
com.apple.pairedsync.mail
PairedDeviceRegistry returned no devices.
0AEBD96A-0D13-42E0-9D9B-3D4BFAB8B7DB
v12@?0B8
%@|%@
IDS failed sending messages.
com.apple.NanoMail.InitialSyncError
providerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_providerQueue
notificationsPingSubscriber
T@"BLTPingSubscriber",&,N,V_notificationsPingSubscriber
initialSyncCoordinator
T@"PSYSyncCoordinator",&,N,V_initialSyncCoordinator
pairedDeviceRegistry
T@"NNMKDeviceSyncRegistry",&,N,V_pairedDeviceRegistry
fullSyncRecoveredInThisSession
TB,N,V_fullSyncRecoveredInThisSession
messagesSyncService
T@"NNMKMessagesSyncServiceServer",&,N,V_messagesSyncService
contentSyncService
T@"NNMKMessageContentSyncServiceServer",&,N,V_contentSyncService
accountsSyncService
T@"NNMKAccountsSyncServiceServer",&,N,V_accountsSyncService
fetchesSyncService
T@"NNMKFetchesSyncServiceServer",&,N,V_fetchesSyncService
protectedSyncService
T@"NNMKProtectedSyncServiceServer",&,N,V_protectedSyncService
protectedContentSyncService
T@"NNMKProtectedContentSyncServiceServer",&,N,V_protectedContentSyncService
messageIdsToIgnoreStatusUpdates
T@"NSMutableSet",&,N,V_messageIdsToIgnoreStatusUpdates
initialSyncResendInterval
TQ,N,V_initialSyncResendInterval
trackingInitialSync
TB,N,V_trackingInitialSync
initialSyncProgress
Td,N,V_initialSyncProgress
initialSyncMessagesCount
TQ,N,V_initialSyncMessagesCount
initialSyncMessageIdsToSyncContent
T@"NSMutableSet",&,N,V_initialSyncMessageIdsToSyncContent
initialSyncMessageIdsOfContentToAck
T@"NSMutableSet",&,N,V_initialSyncMessageIdsOfContentToAck
fetchTimeoutTimer
T@"NSObject<OS_dispatch_source>",&,N,V_fetchTimeoutTimer
waitingForBatchedMessagesForFetchResponse
TB,N,V_waitingForBatchedMessagesForFetchResponse
messagesToBeSentInBatch
T@"NSMutableDictionary",&,N,V_messagesToBeSentInBatch
latestFetchRequest
T@"NNMKProtoFetchRequest",&,N,V_latestFetchRequest
notificationPayloadAcks
T@"NSMutableDictionary",&,N,V_notificationPayloadAcks
retryCountForRequestingMissingHeadersInBatchedResponse
TQ,N,V_retryCountForRequestingMissingHeadersInBatchedResponse
lastRetryDate
T@"NSDate",&,N,V_lastRetryDate
T@"<NNMKSyncProviderDelegate>",W,N,V_delegate
messagesSyncActive
TQ,R,N
T@"NSString",R,N
T@"NSURL",R,N
pairedDeviceInfo
T@"NNMKPairedDeviceInfo",R,N
imageWidth
imageHeight
hasFileName
hasFileSize
TI,N,V_fileSize
hasType
TI,N,V_type
hasRenderOnClient
hasImageWidth
Tf,N,V_imageWidth
hasImageHeight
Tf,N,V_imageHeight
NanoMailLinesOfPreview
NanoMailFlagStyle
NanoMailAskBeforeDeleting
NanoMailOrganizeByThread
_reportingEnabled
_delayInMSFromDateSynced:
_buildVersion
stringWithFormat:
_postRawValue:key:
_postGroupedDelayInMS:key:
_postGroupedSizeInBytes:key:
_addScalarValue1ToKey:
date
timeIntervalSinceReferenceDate
timeIntervalSinceNow
_postGroupedValue:key:
reportMessageReceivedWithId:willGenerateNotification:fullSyncVersion:dateSynced:
reportMessageUpdateReceivedForMessageWithId:fullSyncVersion:dateSynced:
reportMessageDeletionReceivedForMessageWithId:fullSyncVersion:dateSynced:
reportContentReceivedForMessageWithId:sizeInBytes:fullSyncVersion:dateSynced:
reportImageAttachmentReceivedForMessageWithId:contentId:sizeInBytes:fullSyncVersion:dateSynced:
reportContentDisplayedForMessageWithId:hasMainAlternative:hasTextAlternative:
reportFullSyncReceivedFullSyncVersion:syncedMailboxType:dateSynced:
reportMoreMessagesReceivedConversationSpecific:fullSyncVersion:dateSynced:
reportRenderedNotificationUsingLocalContent:mailboxSynced:messageSynced:contentDownloaded:
reportFullSyncRequestedFromWatch:corruptionDetected:migrationRelated:idsFailureRelated:fullSyncVersionMatchRelated:
reportHaltSyncRequestedFromWatch:
description
dictionaryRepresentation
dictionary
numberWithUnsignedInt:
setObject:forKey:
setConversationId:
setBeforeDateReceived:
class
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
setFullSyncVersion:
setHasFullSyncVersion:
hasFullSyncVersion
hasConversationId
hasBeforeDateReceived
readFrom:
writeTo:
copyTo:
mergeFrom:
.cxx_destruct
fullSyncVersion
conversationId
beforeDateReceived
_beforeDateReceived
_conversationId
_fullSyncVersion
_has
setAccountId:
hasAccountId
accountId
_accountId
setMessageId:
hasMessageId
setUpdatedStatus:
setHasUpdatedStatus:
hasUpdatedStatus
setStatusVersion:
setHasStatusVersion:
hasStatusVersion
messageId
updatedStatus
statusVersion
_messageId
_statusVersion
_updatedStatus
mutableCopy
allKeys
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
enqueueIDSIdentifierForResend:atDate:silent:
setObject:forKeyedSubscript:
compare:
resendIDSIdentifier:
removeObjectForKey:
initWithQueue:
enqueueIDSIdentifiersForResend:
resendReadyIDSIdentifiers
newResendIntervalForPreviousResendInterval:errorCode:
dequeueIDSIdentifierForResend:
datesForIDSIdentifiersScheduledToBeResent
endpointQueue
setEndpointQueue:
resendingQueue
setResendingQueue:
setDatesForIDSIdentifiersScheduledToBeResent:
lastResendIntervalKeyedByIDSIdentifier
setLastResendIntervalKeyedByIDSIdentifier:
_endpointQueue
_resendingQueue
_datesForIDSIdentifiersScheduledToBeResent
_lastResendIntervalKeyedByIDSIdentifier
stringByAppendingPathComponent:
initWithPath:protectData:errorCode:
executeSQL:
lastErrorMessage
UTF8String
initWithUnprotectedDatabaseFileName:protectedDatabaseFileName:inDirectory:protectedDatabaseName:errorCode:
attachProtectedDatabase
dettachProtectedDatabase
_vfsModuleName
protectedDatabaseAttached
protectedDatabasePath
setProtectedDatabasePath:
protectedDatabaseName
setProtectedDatabaseName:
_protectedDatabaseAttached
_protectedDatabasePath
_protectedDatabaseName
initWithIDSServiceName:queue:
data
sendProtobufData:type:priority:shortTimeout:allowCloudDelivery:
accountsSyncServiceServer:didSendProtobufSuccessfullyWithIDSIdentifier:
accountsSyncServiceServer:didFailSendingProtobufWithIDSIdentifier:errorCode:
addOrUpdateAccount:
deleteAccount:
sendInitialAccountsSync:
successfullySentProtobufWithIDSIdentifier:
failedSendingProtobufWithIDSIdentifier:errorCode:
readProtobufData:type:
delegate
setDelegate:
_delegate
removeAllObjects
alloc
addObject:
count
objectAtIndex:
numberWithBool:
addTo:
addCc:
tosCount
clearTos
toAtIndex:
ccsCount
clearCcs
ccAtIndex:
setSubject:
setBody:
setComposedMessageId:
setReferenceMessageId:
hasSubject
hasBody
hasComposedMessageId
setSendingType:
setHasSendingType:
hasSendingType
hasReferenceMessageId
setIncludeAttachments:
setHasIncludeAttachments:
hasIncludeAttachments
setTos:
setCcs:
subject
body
composedMessageId
sendingType
referenceMessageId
includeAttachments
_body
_ccs
_composedMessageId
_referenceMessageId
_sendingType
_subject
_tos
_includeAttachments
setScreenWidth:
setScreenScale:
pairedDeviceInfoWithScreenWidth:screenScale:
screenWidth
screenScale
_screenWidth
_screenScale
colorWithWebColorName:
colorWithWebRgb:
colorWithWebHexTriplet:
colorWithRed:green:blue:alpha:
dictionaryWithObjects:forKeys:count:
lowercaseString
hasPrefix:
rangeOfString:
substringWithRange:
componentsSeparatedByString:
arrayWithCapacity:
objectAtIndexedSubscript:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
hasSuffix:
length
substringToIndex:
integerValue
numberWithDouble:
floatValue
numberWithFloat:
colorWithHue:saturation:brightness:alpha:
substringFromIndex:
characterAtIndex:
scannerWithString:
scanHexInt:
colorWithWebColor:
sendProtobufData:type:priority:repeatPreventionId:shortTimeout:allowCloudDelivery:
highPriority
fetchesSyncServiceClient:didSendProtobufSuccessfullyWithIDSIdentifier:
fetchesSyncServiceClient:didFailSendingProtobufWithIDSIdentifier:errorCode:
initWithData:
fetchesSyncServiceClient:didRequestPrepareForFullSync:
fetchesSyncServiceClient:didWarnErrorDownloadingContentForMessage:
fetchesSyncServiceClient:didNotifyOldMessagesAvailable:
fetchesSyncServiceClient:didNotifyFetchRequestCompleted:
fetchesSyncServiceClient:didReportComposedMessageSendingProgress:
requestFetch:
requestMoreMessages:
requestMoreMessagesForConversation:
requestContent:highPriority:
requestFullSync:
requestHaltSync:
notifyInitialSyncFinished:
_parseHTMLBody:encoding:maxLength:maxImageWidth:partiallyParsed:imageAttachmentsLoaded:urlsForValidation:urlsFound:
initWithString:attributes:
valueWithCGSize:
_scaleAndPrepareImageForClient:maxWidth:screenScale:
string
whitespaceAndNewlineCharacterSet
characterIsMember:
attributedSubstringFromRange:
lock
dataUsingEncoding:
bytes
_validateURLsAndHTMLTagsInParsedString:urlsFound:
_addDataDetectionAttributes:
unlock
cancelled
_flushCharactersIfNeeded
stringWithUTF8String:
ignoringElementSubtree
_isElementIgnorable:
setIgnoringElementSubtree:
_isElementBlacklisted:attributes:
setContainsBlacklistedElements:
setCancelled:
_isElementQuoteElement:attributes:
currentQuoteLevel
setCurrentQuoteLevel:
numberWithUnsignedInteger:
_requireNewLine
_isElementList:ordered:
currentListLevel
setCurrentListLevel:
listStack
numberWithInt:
_isElementListItem:
lastObject
stringByPaddingToLength:withString:startingAtIndex:
_appendString:
numberWithInteger:
setObject:atIndexedSubscript:
_isElementImage:
_valueForAttributeNamed:inAttributes:
UUID
UUIDString
initWithBase64EncodedString:options:
imageAtachmentsDataKeyedByContentId
maxImageWidth
_scaledDownSize:maxWidth:
_appendImageWithContentId:imageSize:
_isElementDisplayedInBlock:
_isElementLineBreak:
_appendLineBreak
_stringAttributeForElement:attributes:stringAttributeKey:stringAttributeValue:
dictionaryWithObject:forKey:
_stringAttributesForStyleAttribute:
addEntriesFromDictionary:
_pushStringAttributes:
isQuoteElementStack
isEqualToString:
isLastCharAddedLineBreak
removeLastObject
boolValue
_popStringAttributes
_appendCharacters:length:
parserContext
_isErrorBlacklisted:
compare:options:
_enumerateAttributes:withBlock:
null
_isElementBody:
_stringAttributeValueForCSSStyleName:inStyleAttribute:
_textAlignmentFromString:
_writingDirectionFromString:
regularExpressionWithPattern:options:error:
matchesInString:options:range:
rangeAtIndex:
_topStringAttributes
appendBytes:length:
initWithData:encoding:
appendAttributedString:
imageAttachmentAttributedStringWithContentId:imageSize:mergingAttributes:
parsedAttributedString
resultFromCoreResult:
addAttribute:value:range:
dd_replaceResultAttributesWithSimpleLinksForTypes:context:
size
drawInRect:
rangeOfCharacterFromSet:options:range:
punctuationCharacterSet
removeCharactersInString:
addCharactersInString:
containsObject:
attachmentAttributedStringWithContentId:mergingAttributes:
adjustedImage:maxWidth:screenScale:
trimAttributedString:
parseHTMLBody:encoding:maxLength:maxImageWidth:partiallyParsed:imageAttachmentsLoaded:urlsFound:
parseHTMLBody:encoding:maxLength:maxImageWidth:partiallyParsed:imageAttachmentsLoaded:urlsForValidation:
setLock:
setParsedAttributedString:
encoding
setEncoding:
maxLength
setMaxLength:
setMaxImageWidth:
partiallyParsed
setPartiallyParsed:
setImageAtachmentsDataKeyedByContentId:
parsingSAXHandler
setParsingSAXHandler:
setParserContext:
charactersBuffer
setCharactersBuffer:
stringAttributesStack
setStringAttributesStack:
setIsQuoteElementStack:
setListStack:
setIsLastCharAddedLineBreak:
containsBlacklistedElements
_isLastCharAddedLineBreak
_containsBlacklistedElements
_cancelled
_lock
_parsedAttributedString
_encoding
_maxLength
_maxImageWidth
_partiallyParsed
_imageAtachmentsDataKeyedByContentId
_parserContext
_charactersBuffer
_stringAttributesStack
_isQuoteElementStack
_currentQuoteLevel
_listStack
_currentListLevel
_ignoringElementSubtree
_parsingSAXHandler
initWithCapacity:
addAttachment:
setDateSynced:
setText:
setPreview:
attachmentsCount
clearAttachments
attachmentAtIndex:
setNotificationMessage:
hasDateSynced
setMainAlternativeValid:
setHasMainAlternativeValid:
hasMainAlternativeValid
hasText
hasPreview
setPartiallyLoaded:
setHasPartiallyLoaded:
hasPartiallyLoaded
hasNotificationMessage
dateSynced
mainAlternativeValid
text
preview
partiallyLoaded
attachments
setAttachments:
notificationMessage
_attachments
_dateSynced
_notificationMessage
_preview
_text
_mainAlternativeValid
_partiallyLoaded
messageContentSyncServiceServer:didSendProtobufSuccessfullyWithIDSIdentifier:
messageContentSyncServiceServer:didFailSendingProtobufWithIDSIdentifier:errorCode:
syncMessageContent:notificationPriority:userRequested:
syncImageAttachment:notificationPriority:userRequested:
notifyInitialContentSyncCompleted:
addRemovedMessageId:
removedMessageIdsCount
clearRemovedMessageIds
removedMessageIdAtIndex:
removedMessageIds
setRemovedMessageIds:
_removedMessageIds
addInitialMessage:
initialMessagesCount
clearInitialMessages
initialMessageAtIndex:
setDateForRequestingMoreMessages:
setSyncedMailboxAccountId:
setSyncedMailboxURL:
setSyncedMailboxCustomName:
hasDateForRequestingMoreMessages
setSyncedMailboxType:
setHasSyncedMailboxType:
hasSyncedMailboxType
hasSyncedMailboxAccountId
hasSyncedMailboxURL
hasSyncedMailboxCustomName
initialMessages
setInitialMessages:
dateForRequestingMoreMessages
syncedMailboxType
syncedMailboxAccountId
syncedMailboxURL
syncedMailboxCustomName
_dateForRequestingMoreMessages
_initialMessages
_syncedMailboxAccountId
_syncedMailboxCustomName
_syncedMailboxType
_syncedMailboxURL
errorCodeMeansCorruptedDatabase:
standardUserDefaults
integerForKey:
defaultManager
fileExistsAtPath:isDirectory:
_loadAllControlValues
removeItemAtPath:error:
tableExists:inDatabase:
bundleForClass:
pathForResource:ofType:
stringWithContentsOfFile:encoding:error:
setInteger:forKey:
cleanUpForNewFullMessagesSync
bindBool:intoStatement:paramIndex:
_setControlValueForKey:withBlockForBinding:
bindDate:intoStatement:paramIndex:
_removeControlValueForKey:
type
bindUnsignedInteger:intoStatement:paramIndex:
bindString:intoStatement:paramIndex:
absoluteString
customName
_insureTransactionFor:
bindDouble:intoStatement:paramIndex:
isInTransaction
beginTransaction
commitTransaction
_deleteAllObjectsFromTable:
setDeviceScreenScale:
setDeviceScreenWidth:
setProtectedContentChannelSupported:
setDisconnectedSince:
preparedStatementForPattern:
stepPreparedStatement:
isResponseOkFromPreparedStatementExecution:
closeExecutedPreparedStatement:
_selectSyncedMessagesWhere:blockForBinding:
firstObject
status
dateReceived
usedProtectedChannelForMessageSync
usedNotificationPriorityForMessageSync
contentSynced
contentSyncedUsingNotificationPriority
contentSyncedBecauseUserRequested
contentRequestedByUser
resendRequested
resendInterval
contentResendInterval
attachmentsContentIdsNotYetSynced
_selectSyncedMessagesIdsWhere:count:blockForBinding:
dateFromStatement:columnIndex:
unsignedIntegerFromStatement:columnIndex:
setDateReceivedCapForAdding:
dictionaryWithCapacity:
_selectSyncedAccountsWhere:blockForBinding:
displayName
shouldArchive
emailAddresses
componentsJoinedByString:
array
stringFromStatement:columnIndex:
bindInteger:intoStatement:paramIndex:
integerFromStatement:columnIndex:
boolFromStatement:columnIndex:
doubleFromStatement:columnIndex:
setType:
URLWithString:
setUrl:
setCustomName:
setStatus:
setDateReceived:
setUsedProtectedChannelForMessageSync:
setUsedNotificationPriorityForMessageSync:
setContentSynced:
setContentSyncedUsingNotificationPriority:
setContentSyncedBecauseUserRequested:
setContentRequestedByUser:
_ungroupGroupedValue:
setAttachmentsContentIdsNotYetSynced:
setResendRequested:
setResendInterval:
setContentResendInterval:
stringByAppendingFormat:
setDisplayName:
setShouldArchive:
setEmailAddresses:
setWithArray:
initWithPath:
setIsMessagesSyncActive:
setIsMessagesSyncSuspendedByUsage:
setIsMessagesSyncSuspendedByConnectivity:
setSyncedMailbox:
setOrganizeByThread:
beginUpdates
endUpdates
cleanUpForNewFullAccountsSync
containsSyncedMessageForMessageWithId:
syncedMessageForMessageWithId:
addOrUpdateSyncedMessage:
removeSyncedMessageForMessageWithId:
syncedMessagesForConversationWithId:
syncedMessageIdsResendRequested
syncedMessageIdsContentRequestedByUser
firstSyncedMessageIdsContentNotSyncedOrRequestedByUser:
oldestDateReceived
syncedMessagesCount
removeSyncedMessagesBeforeDateReceived:adjustDateReceivedCapForAdding:
syncedMessagesKeyedByMessageIdAfterDateReceived:
allSyncedAccountsKeyedByAccountId
syncedAccountForAccountWithId:
addOrUpdateSyncedAccount:
removeSyncedAccountForAccountWithId:
syncedAccountIdsResendRequested
setProgress:forComposedMessageWithId:
progressForComposedMessageWithId:
pendingComposedMessageIds
removePendingComposedMessages
removeProgressForComposedMessageWithId:
addObjectIds:type:resendInterval:forIDSIdentifierNotYetAckd:
objectIdsForIDSIdentifierNotYetAckd:type:resendInterval:
typeForIDSIdentifierNotYetAckd:
markIDSIdentifierAsAckd:
rescheduleIDSIdentifier:resendInterval:withDateToResend:errorCode:
prepareIDSIdentifiersForResendForErrorCode:
deleteObjectId:fromIDSIdentifiersNotYetAckdOfType:
path
fullMessagesSyncVersion
setFullMessagesSyncVersion:
isMessagesSyncActive
isMessagesSyncSuspendedByUsage
isMessagesSyncSuspendedByConnectivity
dateReceivedCapForAdding
syncedMailbox
organizeByThread
deviceScreenWidth
deviceScreenScale
protectedContentChannelSupported
disconnectedSince
database
setDatabase:
_isMessagesSyncActive
_isMessagesSyncSuspendedByUsage
_isMessagesSyncSuspendedByConnectivity
_organizeByThread
_protectedContentChannelSupported
_path
_fullMessagesSyncVersion
_dateReceivedCapForAdding
_syncedMailbox
_deviceScreenWidth
_deviceScreenScale
_disconnectedSince
_database
initWithMessage:
_usedProtectedChannelForMessageSync
_usedNotificationPriorityForMessageSync
_contentSyncedUsingNotificationPriority
_contentSyncedBecauseUserRequested
_contentSynced
_contentRequestedByUser
_resendRequested
_status
_dateReceived
_attachmentsContentIdsNotYetSynced
_resendInterval
_contentResendInterval
copy
initWithAccount:
_shouldArchive
_displayName
_emailAddresses
_type
_url
_customName
messagesSyncServiceClient:didSendProtobufSuccessfullyWithIDSIdentifier:
messagesSyncServiceClient:didFailSendingProtobufWithIDSIdentifier:errorCode:
messagesSyncServiceClientConnectivityDidChange:
messagesSyncServiceClient:didUpdateMessagesStatus:
messagesSyncServiceClient:didDeleteMessages:
messagesSyncServiceClient:didAddMessages:
messagesSyncServiceClient:didSendInitialMessagesSync:
messagesSyncServiceClient:didFetchMoreMessages:
messagesSyncServiceClient:didFetchMoreMessagesForConversation:
messagesSyncServiceClient:didSendBatchedFetchResult:
updateMessagesStatus:
deleteMessages:
warnMessagesFilteredOut:
requestCompactMessages:
sendMessage:
connectivityChanged
decodeObjectOfClass:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
setHighPriority:
setHasHighPriority:
hasHighPriority
_highPriority
setContentId:
setImageData:
hasContentId
hasImageData
contentId
imageData
_contentId
_imageData
addAddedMessage:
addedMessagesCount
clearAddedMessages
addedMessageAtIndex:
addedMessages
setAddedMessages:
_addedMessages
timeIntervalSince1970
dateWithTimeIntervalSince1970:
dataWithLength:
mutableBytes
bindData:intoStatement:paramIndex:
dataFromStatement:columnIndex:
initWithService:
addDelegate:queue:
_connectivityState
_removeExpiredRepeatPreventionRecords
removeDelegate:
defaultCenter
removeObserver:
dealloc
_sendProtobufData:type:priority:shortTimeout:allowCloudDelivery:
_willIdRepeat:
_storeRepeatPreventionId:priority:
initWithProtobufData:type:isResponse:
setWithObject:
sendProtobuf:toDestinations:priority:options:identifier:error:
code
spaceBecameAvailable
_handleConnectivityChange
dateWithTimeIntervalSinceNow:
devices
isDefaultPairedDevice
isConnected
isNearby
isCloudConnected
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
resetRepeatPreventionHistory
connectivityState
setConnectivityState:
serviceQueue
setServiceQueue:
idsService
setIdsService:
idsServiceName
setIdsServiceName:
repeatPreventionRecords
setRepeatPreventionRecords:
repeatPreventionCleanupTimer
setRepeatPreventionCleanupTimer:
_serviceQueue
_idsService
_idsServiceName
_repeatPreventionRecords
_repeatPreventionCleanupTimer
messagesSyncServiceServer:didSendProtobufSuccessfullyWithIDSIdentifier:
messagesSyncServiceServer:didFailSendingProtobufWithIDSIdentifier:errorCode:
messagesSyncServiceServer:didUpdateMessagesStatus:
messagesSyncServiceServer:didDeleteMessages:
messagesSyncServiceServer:didWarnMessagesFilteredOut:
messagesSyncServiceServer:didRequestCompactMessages:
messagesSyncServiceServer:didRequestSendMessage:
messagesSyncServiceServerSpaceBecameAvailable:
messagesSyncServiceServerConnectivityChanged:
updateMessagesStatus:notificationPriority:
deleteMessages:notificationPriority:
addMessages:notificationPriority:
sendInitialMessagesSync:
sendMoreMessages:
sendMoreMessagesForConversation:
sendBatchedFetchResult:
stringValue
fetchesSyncServiceServer:didSendProtobufSuccessfullyWithIDSIdentifier:
fetchesSyncServiceServer:didFailSendingProtobufWithIDSIdentifier:errorCode:
fetchesSyncServiceServer:didRequestFetch:
fetchesSyncServiceServer:didRequestMoreMessages:
fetchesSyncServiceServer:didRequestMoreMessagesForConversation:
fetchesSyncServiceServer:didRequestContent:
fetchesSyncServiceServer:didRequestFullSync:
fetchesSyncServiceServer:didRequestHaltSync:
fetchesSyncServiceServer:didNotifyInitialSyncFinished:
requestPrepareForFullSync:
warnErrorDownloadingContentForMessage:notificationPriority:userRequested:
notifyOldMessagesAvailable:
notifyFetchRequestCompleted:
reportComposedMessageSendingProgress:
_openDatabaseWithPath:protectData:errorCode:
_closeDatabase
preparedStatementForPattern:cacheStatement:
_preparedStatementForPattern:cacheStatement:
_stepPreparedStatement:
_executeSQL:
_lastErrorCode
_lastErrorMessage
stringByAppendingString:
stringByDeletingLastPathComponent
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_runRetryingIfNeeded:
objectEnumerator
nextObject
pointerValue
objectForKey:
valueWithPointer:
rollbackTransaction
lastErrorCode
setDb:
setIsInTransaction:
dbQueue
setDbQueue:
cachedPreparedStatementsKeyedBySQLPattern
setCachedPreparedStatementsKeyedBySQLPattern:
_isInTransaction
_dbQueue
_cachedPreparedStatementsKeyedBySQLPattern
setDeletionState:
setHasDeletionState:
hasDeletionState
deletionState
_deletionState
addMessageStatusUpdate:
messageStatusUpdatesCount
clearMessageStatusUpdates
messageStatusUpdateAtIndex:
messageStatusUpdates
setMessageStatusUpdates:
_messageStatusUpdates
initWithLength:
increaseLengthBy:
setLength:
dataWithData:
compressedData
decompressedData
classesForUnarchivingTextData
textData
setTextData:
_textData
decodeIntegerForKey:
encodeInteger:forKey:
fileName
setFileName:
fileSize
setFileSize:
_fileName
_fileSize
CGSizeValue
appendFormat:
renderOnClient
setRenderOnClient:
imageSize
setImageSize:
_renderOnClient
_imageSize
accountsSyncServiceClient:didAddOrUpdateAccount:
accountsSyncServiceClient:didDeleteAccount:
accountsSyncServiceClient:didSyncInitialAccounts:
addEmail:
emailsCount
clearEmails
emailAtIndex:
hasDisplayName
setHasShouldArchive:
hasShouldArchive
emails
setEmails:
_emails
addBcc:
setFrom:
setDateSent:
setMessageIdHeader:
bccsCount
clearBccs
bccAtIndex:
setRemoteId:
setNotificationMessageId:
setHasStatus:
hasStatus
hasFrom
hasDateSent
hasDateReceived
hasMessageIdHeader
hasRemoteId
hasNotificationMessageId
from
dateSent
messageIdHeader
bccs
setBccs:
remoteId
notificationMessageId
_bccs
_dateSent
_from
_messageIdHeader
_notificationMessageId
_remoteId
addMessageDeletion:
messageDeletionsCount
clearMessageDeletions
messageDeletionAtIndex:
messageDeletions
setMessageDeletions:
_messageDeletions
messageContentSyncServiceClient:didSyncMessageContent:
messageContentSyncServiceClient:didSyncImageAttachment:
messageContentSyncServiceClient:didNotifyInitialContentSyncCompleted:
setCurrentMessageIdsAndStatus:
setCurrentDateForRequestingMoreMessages:
setWantsBatchedResponse:
setHasWantsBatchedResponse:
hasWantsBatchedResponse
hasCurrentMessageIdsAndStatus
hasCurrentDateForRequestingMoreMessages
setWillTrimDatabaseAfterResults:
setHasWillTrimDatabaseAfterResults:
hasWillTrimDatabaseAfterResults
wantsBatchedResponse
currentMessageIdsAndStatus
currentDateForRequestingMoreMessages
willTrimDatabaseAfterResults
_currentDateForRequestingMoreMessages
_currentMessageIdsAndStatus
_wantsBatchedResponse
_willTrimDatabaseAfterResults
initForReadingWithData:
setRequiresSecureCoding:
finishDecoding
unarchiveObjectOfClass:withData:
unarchiveObjectOfClasses:withData:
setProgress:
setHasProgress:
hasProgress
progress
_progress
addMessageAddition:
addMessageUpdate:
messageAdditionsCount
clearMessageAdditions
messageAdditionAtIndex:
messageUpdatesCount
clearMessageUpdates
messageUpdateAtIndex:
setShouldTrimDatabase:
setHasShouldTrimDatabase:
hasShouldTrimDatabase
messageAdditions
setMessageAdditions:
messageUpdates
setMessageUpdates:
shouldTrimDatabase
_messageAdditions
_messageUpdates
_shouldTrimDatabase
unsignedIntegerValue
setTo:
setCc:
copyWithNewId
checkState:
scheme
_isOldMessageIdFormat:
resourceSpecifier
firstMatchInString:options:range:
messageHasMultipleRecipients:
isMessageURL:
URLForMessageId:
messageIdForURL:
addState:
removeState:
setBcc:
_bcc
_currentFilesCount
appendData:
_flush
flushIfNeeded
_sortedJournalFiles
dataWithContentsOfFile:
getBytes:range:
subdataWithRange:
longLongValue
_nextFilePath
writeToFile:options:error:
contentsOfDirectoryAtPath:error:
localizedCaseInsensitiveCompare:
sortedArrayUsingSelector:
appendSQLStatement:
mergeUsingBlock:
directoryPath
setDirectoryPath:
currentFileData
setCurrentFileData:
journalQueue
setJournalQueue:
filesCount
setFilesCount:
_directoryPath
_currentFileData
_journalQueue
_filesCount
addInitialAccount:
initialAccountsCount
clearInitialAccounts
initialAccountAtIndex:
initialAccounts
setInitialAccounts:
_initialAccounts
setMessagesAreNew:
setHasMessagesAreNew:
hasMessagesAreNew
messagesAreNew
_messagesAreNew
_handleNotificationPayloadAck:forMessageId:
subscribeToSectionID:withPingAckHandler:
syncCoordinatorWithServiceName:
stringForKey:
_handleDidUnpairNotification:
addObserver:selector:name:object:
_handlePairedDeviceChangedNotification:
_verifyPairingForcingSync:
_executePendingResendsAndContentRequests
_failPendingComposedMessages
_isConnectedToWatch
_checkConnectivityBasedSuspensionTimer:
removeObserver:name:object:
_cancelFetchTimeout
_filterOutMessagesReceived:byAlreadySynced:bySyncedMailboxType:
archivedDataWithRootObject:
_messageProtobufForMessage:
_notifyClientNotifyInitialContentSyncCompleted
syncDidCompleteSending
_incrementInitialSyncProgressBy:
_requestDelegateForContentForMessageIds:highPriority:
isEqualToDate:
_checkBatchFetchedMessages
arrayWithObjects:count:
_addMessages:messagesAreNew:
_currentSyncedMailboxAddsDeletesMessagesByStatusUpdates
_isMessageStatusOkForCurrentSyncedMailbox:
_isMessageOkForCurrentSyncedMailbox:
deleteMessagesWithIds:
_requestDelegateToStopDownloadingMessageElementsForMessageWithId:
removeObject:
_markConversationWithId:forNotify:
addMessages:
setImageWidth:
setImageHeight:
_messageHasContentCompletelySynced:
_handleMessageCompletelySynced:
setWithCapacity:
isEqualToSet:
_triggerFullMessagesSync
_isDateReceivedOkForCurrentSyncedMailbox:
_syncedMailboxForGetters
sharedInstance
getDevices
_storeDeviceSpecificSettingsFromPairedDevice:
_resendObjectIds:type:resendInterval:idsIdentifier:
_handleDidFailSendingProtobufWithIDSIdentifier:errorCode:
_handleDidSendProtobufSuccessfullyWithIDSIdentifier:
_verifyDatabaseOkForFullSyncVersion:
_notifyDelegateThatMessagesStatusWereUpdated:
_requestDelegateToSendComposedMessage:
_rescheduleFetchTimeout
_requestDelegateForFetchForConversationId:
_requestDelegateForMoreMessages
_requestDelegateForMoreMessagesBeforeDateReceived:forConversationWithId:
_requestDelegateForContentForMessageWithId:highPriority:
_fastForwardToFullSyncVersion:
_triggerFullMessagesAndAccountsSync
_clearForFullSyncWithAccountsSync:
syncDidComplete
_handleInitialSyncCompleted
syncSessionType
sessionIdentifier
_handleDidPairWithNewDevice
_reportInitialSyncErrorWithMessage:
valueForProperty:
synchronize
reportProgress:
_handleDidUnpair
_requestDelegateToStopDownloadingAllMessageElements
pairingStorePath
syncRestriction
_requestDelegateForFirstMessages
initWithUUIDString:
supportsCapability:
_filterOutMessagesReceivedByDateReceived:
_willPresentNotificationForMessage:
_bbSubsectionIdsForMessage:
getWillNanoPresentNotificationForSectionID:subsectionIDs:completion:
_triggerFullMessagesSyncWithAccountsSync:
_requestDelegateForAccounts
currentCalendar
components:fromDate:
dateFromComponents:
_requestDelegateForResendingMessagesWithIds:
_requestDelegateForResendingAccountWithId:
dateWithTimeInterval:sinceDate:
_requestDelegateForMessagesToSendAsFetchResponseForMessageIds:
_scheduleIdsIdentifierForResend:currentResendInterval:newResendInterval:errorCode:
_resendInitialSyncWithIDSIdentifier:newResendInterval:
_resendPendingMessagesWithIds:forIDSIdentifier:newResendInterval:
_resendPendingMessageContentWithId:sentBecauseUserRequested:idsIdentifier:newResendInterval:
_resendPendingAccountWithIds:forIDSIdentifier:newResendInterval:
_resendSendingProgressForComposedMessageWithId:forIDSIdentifier:newResendInterval:
syncProvider:didUpdateMessagesStatus:
syncProviderDidRequestAccounts:
syncProvider:didRequestMessagesBeforeDate:count:
syncProvider:didRequestMessagesBeforeDate:count:forConversationWithId:
syncProvider:didRequestFirstMessages:
syncProvider:didRequestContentForMessageWithId:highPriority:
syncProvider:didRequestStopDownloadingMessageElementsForMessageWithId:
syncProviderDidRequestStopDownloadingAllMessageElements:
syncProviderDidRequestFetch:forConversationId:
syncProvider:didRequestSendComposedMessage:
syncProvider:didRequestResendMessagesWithIds:
syncProvider:didRequestResendAccountWithId:
syncProvider:didRequestMessagesToSendAsFetchResponseForMessageIds:
errorWithDomain:code:userInfo:
syncDidFailWithError:
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
syncCoordinatorDidReceiveStartSyncCommand:
initWithDelegate:
replyWithFirstMessages:includesProtectedMessages:syncedMailboxType:syncedMailboxAccountId:syncedMailboxURL:syncedMailboxCustomName:organizeByThread:
replyWithMoreMessages:forDateReceivedBefore:includesProtectedMessages:
replyWithMoreMessages:forConversationWithId:includesProtectedMessages:
replyWithMessagesToSendAsFetchResponse:includesProtectedMessages:
replyWithAccounts:
replyWithMessagesToResend:includesProtectedMessages:
replyWithAccountToResend:
replyWithMessageSendingProgress:forComposedMessageId:
markConversationIdForNotify:messages:includesProtectedMessages:
markConversationIdForNotNotify:
addMessageContent:forMessage:loadedProtected:
reportMessageContentDownloadFailureForMessageId:
addImageAttachment:forMessageId:contentId:loadedProtected:
reportWillDownloadFirstMessages
addUpdateOrDeleteAccounts:
notifySyncedMailboxChanged
notifyOrganizeByThreadChanged
notifyFetchCompleted
bulletinFlagsForMessageStatus:dateReceived:messageWillBeAddedToSyncProvider:
messagesSyncActive
pairedDeviceInfo
providerQueue
setProviderQueue:
notificationsPingSubscriber
setNotificationsPingSubscriber:
initialSyncCoordinator
setInitialSyncCoordinator:
pairedDeviceRegistry
setPairedDeviceRegistry:
fullSyncRecoveredInThisSession
setFullSyncRecoveredInThisSession:
messagesSyncService
setMessagesSyncService:
contentSyncService
setContentSyncService:
accountsSyncService
setAccountsSyncService:
fetchesSyncService
setFetchesSyncService:
protectedSyncService
setProtectedSyncService:
protectedContentSyncService
setProtectedContentSyncService:
messageIdsToIgnoreStatusUpdates
setMessageIdsToIgnoreStatusUpdates:
initialSyncResendInterval
setInitialSyncResendInterval:
trackingInitialSync
setTrackingInitialSync:
initialSyncProgress
setInitialSyncProgress:
initialSyncMessagesCount
setInitialSyncMessagesCount:
initialSyncMessageIdsToSyncContent
setInitialSyncMessageIdsToSyncContent:
initialSyncMessageIdsOfContentToAck
setInitialSyncMessageIdsOfContentToAck:
fetchTimeoutTimer
setFetchTimeoutTimer:
waitingForBatchedMessagesForFetchResponse
setWaitingForBatchedMessagesForFetchResponse:
messagesToBeSentInBatch
setMessagesToBeSentInBatch:
latestFetchRequest
setLatestFetchRequest:
notificationPayloadAcks
setNotificationPayloadAcks:
retryCountForRequestingMissingHeadersInBatchedResponse
setRetryCountForRequestingMissingHeadersInBatchedResponse:
lastRetryDate
setLastRetryDate:
_fullSyncRecoveredInThisSession
_trackingInitialSync
_waitingForBatchedMessagesForFetchResponse
_providerQueue
_notificationsPingSubscriber
_initialSyncCoordinator
_pairedDeviceRegistry
_messagesSyncService
_contentSyncService
_accountsSyncService
_fetchesSyncService
_protectedSyncService
_protectedContentSyncService
_messageIdsToIgnoreStatusUpdates
_initialSyncResendInterval
_initialSyncProgress
_initialSyncMessagesCount
_initialSyncMessageIdsToSyncContent
_initialSyncMessageIdsOfContentToAck
_fetchTimeoutTimer
_messagesToBeSentInBatch
_latestFetchRequest
_notificationPayloadAcks
_retryCountForRequestingMissingHeadersInBatchedResponse
_lastRetryDate
hasFileName
setHasFileSize:
hasFileSize
setHasType:
hasType
setHasRenderOnClient:
hasRenderOnClient
setHasImageWidth:
hasImageWidth
setHasImageHeight:
hasImageHeight
imageWidth
imageHeight
_imageHeight
_imageWidth
NNMKAggregateReporter
NNMKProtoMoreMessagesForConversationRequest
NSCopying
NNMKProtoAccountDeletion
NNMKProtoMessageStatusUpdate
NNMKSyncEndpoint
NNMKProtectedSQLiteConnection
NNMKAccountsSyncServiceServer
NNMKProtoSendMessageRequest
NNMKPairedDeviceInfo
NNMKWebColors
NNMKFetchesSyncServiceClient
NNMKHTMLParser
NNMKProtoMessageContentSync
NNMKMessageContentSyncServiceServer
NNMKProtoMessagesFilteredOutWarning
NNMKProtoInitialMessagesSync
NNMKProtoInitialSyncFinishedNotification
NNMKDeviceSyncRegistry
NNMKSyncedMessage
NNMKSyncedAccount
NNMKSyncedMailbox
NNMKProtoMoreMessagesRequest
NNMKMessagesSyncServiceClient
NNMKProtoErrorDownloadingContentForMessageWarning
NNMKAccount
NSSecureCoding
NSCoding
NNMKProtoContentRequest
NNMKProtoImageAttachmentSync
NNMKProtectedContentSyncServiceClient
NNMKProtoMoreMessages
NNMKSQLiteUtils
NNMKProtoPrepareForFullSyncRequest
NNMKSyncServiceEndpoint
IDSServiceDelegate
NSObject
NNMKMessagesSyncServiceServer
NNMKProtoMoreMessagesForConversation
NNMKFetchesSyncServiceServer
NNMKProtoFullSyncRequest
NNMKSQLiteConnection
NNMKProtoMessageDeletion
NNMKProtoMessageStatusUpdates
NNMKCompression
NNMKMessageContent
NNMKAttachment
NNMKImageAttachment
NNMKAccountsSyncServiceClient
NNMKProtoCompactMessagesRequest
NNMKProtoAccountAdditionOrUpdate
NNMKProtoMessage
NNMKProtoMessageDeletions
NNMKProtoHaltSyncRequest
NNMKMessageContentSyncServiceClient
NNMKProtectedSyncServiceClient
NNMKProtoFetchRequestCompletedNotification
NNMKProtoFetchRequest
NNMKProtoInitialContentSyncCompletedNotification
NNMKUnarchivingUtils
NNMKProtoComposedMessageSendingProgressReport
NNMKProtoBatchedFetchResult
NNMKComposedMessage
NNMKMessage
NNMKMailboxItem
NNMKSQLJournal
NNMKProtoOldMessagesAvailableNotification
NNMKProtoInitialAccountsSync
NNMKProtectedContentSyncServiceServer
NNMKProtoMessageAdditions
NNMKProtectedSyncServiceServer
NNMKSyncProvider
NNMKMessagesSyncServiceServerDelegate
NNMKMessageContentSyncServiceServerDelegate
NNMKAccountsSyncServiceServerDelegate
NNMKFetchesSyncServiceServerDelegate
PSYSyncCoordinatorDelegate
NNMKProtoAttachmentMetadata
v44@0:8@16B24Q28@36
v40@0:8@16Q24@32
v48@0:8@16Q24Q32@40
v56@0:8@16@24Q32Q40@48
v32@0:8@16B24B28
v40@0:8Q16Q24@32
v36@0:8B16Q20@28
v32@0:8B16B20B24B28
v36@0:8B16B20B24B28B32
v20@0:8B16
B16@0:8
@16@0:8
q24@0:8@16
v32@0:8q16@24
v24@0:8@16
v28@0:8f16@20
@24@0:8^{_NSZone=}16
v20@0:8I16
B24@0:8@16
Q16@0:8
v16@0:8
I16@0:8
@"NSData"
@"NSString"
{?="fullSyncVersion"b1}
{?="statusVersion"b1"updatedStatus"b1}
@24@0:8@16
v36@0:8@16@24B32
Q32@0:8Q16q24
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@56@0:8@16@24@32@40^i48
i16@0:8
v32@0:8@16q24
v32@0:8@16Q24
@"<NNMKAccountsSyncServiceServerDelegate>"
@24@0:8Q16
@"NSMutableArray"
{?="sendingType"b1"includeAttachments"b1}
@32@0:8d16d24
d16@0:8
v24@0:8d16
v28@0:8@16B24
@"<NNMKFetchesSyncServiceClientDelegate>"
@32@0:8@16@24
@48@0:8@16{CGSize=dd}24@40
@40@0:8@16d24d32
{CGSize=dd}40@0:8{CGSize=dd}16d32
@72@0:8@16Q24Q32d40^B48^@56^@64
@72@0:8@16Q24Q32d40^B48^@56@64
@80@0:8@16Q24Q32d40^B48^@56@64^@72
B32@0:8@16r^*24
B24@0:8^{_xmlError=ii*i*i***ii^v^v}16
B32@0:8@16^B24
v48@0:8@16r^*24^@32^@40
Q24@0:8@16
@32@0:8@16r^*24
v32@0:8r^*16@?24
v28@0:8r*16i24
v40@0:8@16{CGSize=dd}24
B32@0:8@16^@24
v24@0:8Q16
^B16@0:8
v24@0:8^B16
{_xmlSAXHandler=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?I^v^?^?^?}16@0:8
v272@0:8{_xmlSAXHandler=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?I^v^?^?^?}16
^{_xmlParserCtxt=^{_xmlSAXHandler}^v^{_xmlDoc}ii**ii^{_xmlParserInput}ii^^{_xmlParserInput}^{_xmlNode}ii^^{_xmlNode}i{_xmlParserNodeInfoSeq=QQ^{_xmlParserNodeInfo}}iiiiii{_xmlValidCtxt=^v^?^?^{_xmlNode}ii^^{_xmlNode}I^{_xmlDoc}i^{_xmlValidState}ii^{_xmlValidState}^{_xmlAutomata}^{_xmlAutomataState}}ii**ii^*qqiii***^iii^ii^{_xmlParserInput}iiii^vii^vii^{_xmlDict}^*ii***iii^*^i^^v^{_xmlHashTable}^{_xmlHashTable}iiii^{_xmlNode}i^{_xmlAttr}{_xmlError=ii*i*i***ii^v^v}iQQ^{_xmlParserNodeInfo}ii^{_xmlParserNodeInfo}iQ}16@0:8
v24@0:8^{_xmlParserCtxt=^{_xmlSAXHandler}^v^{_xmlDoc}ii**ii^{_xmlParserInput}ii^^{_xmlParserInput}^{_xmlNode}ii^^{_xmlNode}i{_xmlParserNodeInfoSeq=QQ^{_xmlParserNodeInfo}}iiiiii{_xmlValidCtxt=^v^?^?^{_xmlNode}ii^^{_xmlNode}I^{_xmlDoc}i^{_xmlValidState}ii^{_xmlValidState}^{_xmlAutomata}^{_xmlAutomataState}}ii**ii^*qqiii***^iii^ii^{_xmlParserInput}iiii^vii^vii^{_xmlDict}^*ii***iii^*^i^^v^{_xmlHashTable}^{_xmlHashTable}iiii^{_xmlNode}i^{_xmlAttr}{_xmlError=ii*i*i***ii^v^v}iQQ^{_xmlParserNodeInfo}ii^{_xmlParserNodeInfo}iQ}16
@"NSLock"
@"NSMutableAttributedString"
^{_xmlParserCtxt=^{_xmlSAXHandler}^v^{_xmlDoc}ii**ii^{_xmlParserInput}ii^^{_xmlParserInput}^{_xmlNode}ii^^{_xmlNode}i{_xmlParserNodeInfoSeq=QQ^{_xmlParserNodeInfo}}iiiiii{_xmlValidCtxt=^v^?^?^{_xmlNode}ii^^{_xmlNode}I^{_xmlDoc}i^{_xmlValidState}ii^{_xmlValidState}^{_xmlAutomata}^{_xmlAutomataState}}ii**ii^*qqiii***^iii^ii^{_xmlParserInput}iiii^vii^vii^{_xmlDict}^*ii***iii^*^i^^v^{_xmlHashTable}^{_xmlHashTable}iiii^{_xmlNode}i^{_xmlAttr}{_xmlError=ii*i*i***ii^v^v}iQQ^{_xmlParserNodeInfo}ii^{_xmlParserNodeInfo}iQ}
@"NSMutableData"
{_xmlSAXHandler="internalSubset"^?"isStandalone"^?"hasInternalSubset"^?"hasExternalSubset"^?"resolveEntity"^?"getEntity"^?"entityDecl"^?"notationDecl"^?"attributeDecl"^?"elementDecl"^?"unparsedEntityDecl"^?"setDocumentLocator"^?"startDocument"^?"endDocument"^?"startElement"^?"endElement"^?"reference"^?"characters"^?"ignorableWhitespace"^?"processingInstruction"^?"comment"^?"warning"^?"error"^?"fatalError"^?"getParameterEntity"^?"cdataBlock"^?"externalSubset"^?"initialized"I"_private"^v"startElementNs"^?"endElementNs"^?"serror"^?}
@"NNMKProtoMessage"
{?="fullSyncVersion"b1"mainAlternativeValid"b1"partiallyLoaded"b1}
@32@0:8@16B24B28
@"<NNMKMessageContentSyncServiceServerDelegate>"
{?="fullSyncVersion"b1"syncedMailboxType"b1}
v48@0:8@16@24Q32@40
@40@0:8@16^@24^Q32
v48@0:8@16Q24@32q40
v24@0:8q16
v32@0:8@16@24
v32@0:8@16@?24
@32@0:8@16@?24
@40@0:8@16Q24@?32
v24@0:8@?16
@"NSDate"
@"NNMKSyncedMailbox"
@"NNMKSQLiteConnection"
@"NSMutableSet"
@"NSArray"
@"NSURL"
@"<NNMKMessagesSyncServiceClientDelegate>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{?="fullSyncVersion"b1"highPriority"b1}
v24@0:8^{sqlite3_stmt=}16
B20@0:8i16
v36@0:8@16^{sqlite3_stmt=}24i32
v36@0:8q16^{sqlite3_stmt=}24i32
v36@0:8Q16^{sqlite3_stmt=}24i32
v36@0:8d16^{sqlite3_stmt=}24i32
v32@0:8B16^{sqlite3_stmt=}20i28
@28@0:8^{sqlite3_stmt=}16i24
Q28@0:8^{sqlite3_stmt=}16i24
d28@0:8^{sqlite3_stmt=}16i24
B28@0:8^{sqlite3_stmt=}16i24
v56@0:8@16@24@32@40@48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@16@24@32@40@48@56
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@16@24@32B40@44
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@16@24@32B40@44@52
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v48@0:8@16@24@32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v24@0:8@"IDSService"16
v40@0:8@16@24@?32
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@48@0:8@16Q24Q32B40B44
@56@0:8@16Q24Q32@40B48B52
@"IDSService"
@"NSObject<OS_dispatch_source>"
@28@0:8@16B24
@"<NNMKMessagesSyncServiceServerDelegate>"
@"<NNMKFetchesSyncServiceServerDelegate>"
@36@0:8@16B24^i28
^{sqlite3_stmt=}24@0:8@16
^{sqlite3_stmt=}28@0:8@16B24
i24@0:8^{sqlite3_stmt=}16
i24@0:8@16
B32@0:8@16@24
B36@0:8@16B24^i28
i24@0:8@?16
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3=}
{?="deletionState"b1}
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
@"<NNMKAccountsSyncServiceClientDelegate>"
{?="shouldArchive"b1}
{?="status"b1}
@"<NNMKMessageContentSyncServiceClientDelegate>"
{?="fullSyncVersion"b1"wantsBatchedResponse"b1"willTrimDatabaseAfterResults"b1}
@32@0:8#16@24
v20@0:8i16
{?="progress"b1}
{?="fullSyncVersion"b1"shouldTrimDatabase"b1}
B24@0:8Q16
v24@0:8@"NSString"16
{?="fullSyncVersion"b1"messagesAreNew"b1}
v40@0:8@16@24q32
v40@0:8@"NNMKMessagesSyncServiceServer"16@"NSString"24q32
v32@0:8@"NNMKMessagesSyncServiceServer"16@"NSString"24
v24@0:8@"NNMKMessagesSyncServiceServer"16
v32@0:8@"NNMKMessagesSyncServiceServer"16@"NNMKProtoMessageStatusUpdates"24
v32@0:8@"NNMKMessagesSyncServiceServer"16@"NNMKProtoMessageDeletions"24
v32@0:8@"NNMKMessagesSyncServiceServer"16@"NNMKProtoMessagesFilteredOutWarning"24
v32@0:8@"NNMKMessagesSyncServiceServer"16@"NNMKProtoCompactMessagesRequest"24
v32@0:8@"NNMKMessagesSyncServiceServer"16@"NNMKProtoSendMessageRequest"24
v40@0:8@"NNMKMessageContentSyncServiceServer"16@"NSString"24q32
v32@0:8@"NNMKMessageContentSyncServiceServer"16@"NSString"24
v40@0:8@"NNMKAccountsSyncServiceServer"16@"NSString"24q32
v32@0:8@"NNMKAccountsSyncServiceServer"16@"NSString"24
v40@0:8@"NNMKFetchesSyncServiceServer"16@"NSString"24q32
v32@0:8@"NNMKFetchesSyncServiceServer"16@"NSString"24
v32@0:8@"NNMKFetchesSyncServiceServer"16@"NNMKProtoFetchRequest"24
v32@0:8@"NNMKFetchesSyncServiceServer"16@"NNMKProtoMoreMessagesRequest"24
v32@0:8@"NNMKFetchesSyncServiceServer"16@"NNMKProtoMoreMessagesForConversationRequest"24
v32@0:8@"NNMKFetchesSyncServiceServer"16@"NNMKProtoContentRequest"24
v32@0:8@"NNMKFetchesSyncServiceServer"16@"NNMKProtoFullSyncRequest"24
v32@0:8@"NNMKFetchesSyncServiceServer"16@"NNMKProtoHaltSyncRequest"24
v32@0:8@"NNMKFetchesSyncServiceServer"16@"NNMKProtoInitialSyncFinishedNotification"24
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
v64@0:8@16B24Q28@36@44@52B60
v44@0:8@16@24@32B40
@36@0:8Q16@24B32
v32@0:8@?16@24
v48@0:8@16Q24Q32q40
v40@0:8@16@24Q32
v44@0:8@16B24@28Q36
@"<NNMKSyncProviderDelegate>"
@"BLTPingSubscriber"
@"PSYSyncCoordinator"
@"NNMKDeviceSyncRegistry"
@"NNMKMessagesSyncServiceServer"
@"NNMKMessageContentSyncServiceServer"
@"NNMKAccountsSyncServiceServer"
@"NNMKFetchesSyncServiceServer"
@"NNMKProtectedSyncServiceServer"
@"NNMKProtectedContentSyncServiceServer"
@"NNMKProtoFetchRequest"
v20@0:8f16
f16@0:8
{?="fileSize"b1"imageHeight"b1"imageWidth"b1"type"b1"renderOnClient"b1}
Protected database attached.
Error attaching protected database. Path: %{public}@, Error Code: %d, Error Message: %{public}@
Protected database detached.
Error detaching protected database (Error Code: %d, Error Message: %{public}@).
Database corrupted. Recreating...
Database from a previous version (%lu) already existed (Correct version should be %lu). Recreating...
After recreating the database, it got corrupted. We'll try to recreate it next time MobileMail restarts...
Error creating database. (%{public}@)
Trying to start a transaction, but a transaction has already been started.
Trying to commit a transaction, but a transaction has not been started.
Error checking if synced message exists (%{public}@).
Error adding synced message (%{public}@).
Error deleting attachments not synced (%{public}@).
Error adding attachment not synced (%{public}@).
Error deleting synced message (%{public}@).
Error getting oldest date received (%{public}@).
Error getting synced messages count (%{public}@).
Error deleting synced messages (%{public}@).
Error selecting last date received (%{public}@).
Error adding synced account (%{public}@).
Error deleting synced account (%{public}@).
Error selecting account ids for resend (%{public}@).
Error adding/updating composed message (%{public}@).
Error selecting progress for composed message (%{public}@).
Error selecting composed message ids for resend (%{public}@).
Error deleting all composed messages (%{public}@).
Error deleting composed message (%{public}@).
Error adding Object for IDS Identifier (%{public}@).
Error retrieving Object Ids for IDS identifier (%{public}@).
Error retrieving Type for IDS identifier (%{public}@).
Error marking IDS Identifier as Ack'd (IDS Identifier: %{public}@ - Error: %{public}@).
Error deleting objects for IDS Identifier (IDS Identifier: %{public}@ - Error: %{public}@).
Error rescheduling Object for IDS Identifier (IDS Identifier: %{public}@ - Error: %{public}@).
Error preparing IDS Identifiers for Resend (Error: %{public}@).
Error selecting IDS Identifiers scheduled to be resent (%{public}@).
Error deleting Object Id from IDS Identifiers (Object Id: %{public}@ - Error: %{public}@).
Error loading control values (%{public}@).
Error setting control value for key %{public}@ (%{public}@).
Error deleting control value for key %{public}@ (%{public}@).
Error deleting all values from table %{public}@ (%{public}@).
Error selecting synced messages where %{public}@ (%{public}@).
Error selecting synced message ids where %{public}@ (%{public}@).
Error selecting synced accounts where %{public}@ (%{public}@).
Error creating database directory. (Path: %{public}@, Error: %{public}@, Parent Exists: %d)
Database opened (%{public}@).
Error opening database. Check sandbox permissions. Closing... (Path: %{public}@, Error Code: %d, Error Message: %{public}@).
Error opening database (Path: %{public}@, Error Code: %d, Error Message: %{public}@). Closing...
Database closed.
Error closing database. (Path: %{public}@, Error Code: %d, Error Message: %{public}@). Closing...
Error closing database. File no longer exists. (Path: %{public}@).
Database pointer was already NULL before closing.
Error preparing statement - db doesn't seem to be open (pattern: %{public}@).
Error preparing statement for pattern: %{public}@. (%{public}@)
Error executing SQL - db doesn't seem to be open.
Error retrieving last error code - db doesn't seem to be open.
Error retrieving last error message - db doesn't seem to be open.
Database busy/locked for running statement or Low memory condition. Will re-try...
Tried to execute database operation multiple times and received NOMEM. Crashing intentionally so we the process can restart and memory can be freed up...
Error reading journal file - invalid length. (Path: %{public}@).
Error deleting journal file. (Path: %{public}@).
Error reading journal file from file system. (Path: %{public}@).
Error flushing journal file. (Path: %{public}@ - Error: %{public}@).
Provider Created...
Reply from delegate for didRequestFirstMessages: but we were actually expecting another response.
MobileMail took too long to download the content for all the messages for the initial sync. We're ignoring the next content downloads for the sake of reporting to PairedSync. Notifying client that we're done sending content...
Full sync messages sent (%lu messages - IDS identifier: %{public}@).
Reply from delegate for didRequestMessagesAfterDate: but we were actually expecting another response.
Reply from delegate for didRequestMessagesAfterDate: added %lu messages.
Reply from delegate for 'messages for conversationid' but we were actually expecting another response.
Reply from delegate for 'messages for conversationid': added %lu messages.
Reply from delegate for 'messages to send as fetched response' but we were actually expecting another response.
Reply from delegate loaded full messages for %lu message IDs. Checking if we can now send batch back to Watch...
Reply from delegate for didRequestAccounts: added %lu accounts.
Message being RESENT (Id: %{public}@ - Date Received: %{public}@ - Status: %lu).
Messages RESENT (Count: %lu - IDS Identifier: %{public}@ - Resend Interval: %lu).
Unexpected reply from delegate for 'account to resend' (Id: %{public}@).
Account RESENT (Id: %{public}@).
Sending progress for composed message (Id: %{public}@ - Progress: %li - IDS Identifier: %{public}@)...
Message Status UPDATED but updates are being ignored for it (Id: %{public}@ - Date Received: %{public}@ - Status: %lu).
Message Status UPDATED (Id: %{public}@ - Date Received: %{public}@ - Status: %lu).
Removing message that does not belong to current mailbox due to status change. (Id: %{public}@ - Date Received: %{public}@ - Status: %lu).
Received UPDATE for message, but it still hadn't been synced or it is about to be removed on the client. Will try to re-add message if not too old. (Id: %{public}@ - Date Received: %{public}@ - Status: %lu).
Message DELETED (Id: %{public}@).
Conversation marked for notify (Id: %{public}@).
Conversation marked for stop notifying (Id: %{public}@).
Notifying BulletinDistributor Ping Subscriber that we synced content for notification. (Message Id: %{public}@)
Message Content ADDED (Id: %{public}@ - Notification Priority: %d - User Requested: %d - Data Length: %lu - Compressed Data Length: %lu - IDS Identifier: %{public}@).
Message Content ADDED but not synced (Message Id: %{public}@ Message Had Been Synced: %d, Already Synced With Current Priority: %d).
Reported failure downloading content for message (Id: %{public}@).
Received image to send = nil. MobileMail probably failed downloading it. Ignoring so we can re-try later upon user request (Message Id: %{public}@ - Content Id: %{public}@).
Image Attachment ADDED (Message Id: %{public}@, Content Id: %{public}@, Bytes: %lu, Image Size: %{public}@ - IDS Identifier: %{public}@).
Image Attachment ADDED but not synced (Message Id: %{public}@, Content Id: %{public}@, Message Had Been Synced: %d, Attachment Not Yet Synced: %d).
MobileMail will download headers for the messages that are part of the initial sync. We're ignoring the download for the sake of reporting to PairedSync. Notifying client that we're done sending everything...
Account ADDED (Id: %{public}@ - Display Name: %{public}@ - Should Archive: %d - Email addresses: %{public}@).
Account UPDATED (Id: %{public}@ - Display Name: %{public}@ - Should Archive: %d - Email addresses: %{public}@).
Account DELETED (Id: %{public}@).
Synced mailbox changed.
Organize by thread changed.
Fetch Manual Completed.
Initial sync sent successfully by IDS (IDS Identifier: %{public}@).
Messages sent successfully by IDS (IDS Identifier: %{public}@).
IDS Reported Space Became Available.
Connectivity changed (Connected: %d - Connectivity type: %lu)
Message Status UPDATED from Client (Id: %{public}@ - Status: %lu).
Message Status UPDATED from Client but version is outdated (Id: %{public}@ - Status: %lu - Local Status: %lu - Client Version: %lu - Local Version: %lu).
Message Status UPDATED from Client but we don't have it in our records. Updating anyway... (Id: %{public}@ - Status: %lu).
Message DELETED from Client (Id: %{public}@ - Deletion State: %lu).
Message DELETED from Client but we don't have it in our records. Deleting anyway... (Id: %{public}@ - Deletion State: %lu).
Composed Message SENT from Client with too many NULL fields. Ignoring...
Composed Message SENT from Client (Composed Message Id: %{public}@, Send Type: %lu - Message Id: %{public}@).
Messages filtered out. (Count: %lu).
Content sent successfully by IDS (IDS Identifier: %{public}@).
Accounts sent successfully by IDS (IDS Identifier: %{public}@).
Fetch Requested (Conversation Id: %{public}@ - Wants batched response: %d)
Ending suspensions, as we've received a Fetch request.
Fetch Requested wants batched response. When fetch completes (or times out), we'll decide what to send back.
Fetch More Messages Requested (Before Date Received: %{public}@)
Fetch More Messages Requested (Conversation Id: %{public}@)
Message Content Requested (Id: %{public}@, High Priority: %d).
Message Content Requested but not processed, as it has been requested multiple times (Id: %{public}@, High Priority: %d).
Full sync requested (Version in Client: %lu). Triggering...
Full sync requested, but we haven't detected any pairing yet. Ignoring the full sync request and waiting... (Version in Client: %lu)
Halt sync requested (Version in Client: %lu). Triggering...
Halt sync requested, but we haven't detected any pairing yet. Ignoring the halt sync request and waiting... (Version in Client: %lu)
Initial sync finished notification received. However, we're no longer waiting for it. Ignoring... (Tracking: %d - Current full sync version: %lu)
Initial sync finished. Reporting to PairedSync...
PSYSyncCoordinator requested full sync (Type: %{public}@, Session ID: %{public}@), but we're already paired. Responding with success...
PSYSyncCoordinator requested full sync (Type: %{public}@, Session ID: %{public}@). Triggering full sync...
PSYSyncCoordinator requested to invalidate full sync (Session ID: %{public}@). We'll verify if everything seems alright...
New Pairing Detected. Will trigger initial sync.
PairedSync asked us to do a full sync, but PairedDeviceRegistry returned no devices. Replying to PairedSync with an error.
No device registry path found. Unpairing...
Verifying pairing (forceSyncIfPaired: %d)...
Pairing verification determined we're paired with a new device. Will start syncing with new device...
Please file a radar. Pairing verification determined we're paired and PairedSync already ran. However, PairedSync never told Mail to start syncing. Will force syncing...
Pairing verification determined we're paired and we should force syncing, even though PairedSync hasn't told Mail to start yet. Will force syncing...
Pairing verification determined we're paired. However, we're waiting for PairedSync to tell us to start syncing. Waiting...
Pairing verification determined we're no longer paired. Will unpair...
Initial sync had been triggered but messages didn't sync yet. Trying to request first messages again now...
Unpairing detected. Triggering verification to insure we don't stop sync'ing if we still have another device we're talking to...
NanoRegistry notified us that the paired device changed. Handling as unpaired...
Message received but Message Sync isn't active. Discarding...
Received message that has a fullSyncVersion so distant from the local one that we're triggering a full sync. (Local: %lu - Client: %lu).
Message discarded because fullSyncVersion is different (Local: %lu - Client: %lu).
Client has a full sync version higher than what the server has (Version in Client: %lu - Local: %lu). Triggering full sync...
Receiving an old batch of messages from MobileMail. Ignoring so we don't create a gap between the current messages we have and the old batch. (Count: %lu, Newest message received date: %{public}@
New received messages changed date cap (New date: %{public}@).
Message ADDED (Id: %{public}@ - Date Received: %{public}@ - Status: %lu - Message ID %{public}@).
Messages sent with URGENT priority. (Count: %lu - IDS Identifier: %{public}@).
Messages sent with DEFAULT priority. (Count: %lu - IDS Identifier: %{public}@).
Old messages are available for fetching. Sending notification to client...
BulletinDistributor Ping Subscriber did NOT respond within 5 seconds. Assuming we WILL generate a notification.
BulletinDistributor Ping Subscriber did respond. Will generate notifications: %d
BulletinDistributor Ping Subscriber asked us to notify them back when we added content for a message, but we already sync'ed the content through the high priority channel for this message. Notifying back... (Message Id: %{public}@)
BulletinDistributor Ping Subscriber asked us to notify them back when we added content for a message, but they had told us that message was NOT going to generate a notification. Bumping message to Notification priority and potentially re-requesting content... (Message Id: %{public}@)
BulletinDistributor Ping Subscriber asked us to notify them back when we added content for a message. We already have the message. Waiting for the content... (Message Id: %{public}@)
BulletinDistributor Ping Subscriber asked us to notify them back when we added content for a message. Waiting... (Message Id: %{public}@)
BulletinDistributor Ping Subscriber asked us to notify them back when we added content for a message, but the recordID was nil. Notifying back...
BulletinDistributor Ping Subscriber asked us to notify them back when we added content for a message, but the ack handler was NULL. Ignoring... (Message Id: %{public}@)
Fast forwarding Full Sync Version (To: %lu - Current: %lu).
Requested to Fast Forward Full Sync Version, but we're not yet paired. Ignoring... (Full Sync Version requested: %lu).
Full message sync triggered (Full sync version: %lu - Will sync accounts: %d).
Notifying client that all content has been sync'ed (IDS Identifier: %{public}@)...
Failing composed message, as we restarted before even adding the message to the Outbox queue. (Composed Message Id: %{public}@ - IDS Identifier: %{public}@).
Is now connected.
Sync was suspending due to lack of connectivity. We're connected now, so resuming...
Is now disconnected. Initiating timer to suspend sync.
Suspending sync due to lack of connectivity...
Too many new messages to send as a Batch Response to Watch. We're triggering a full sync, as it'll send less messages...
Sending batched response back.
Tried to send fetch response, but there are %lu messages that we don't have full headers for. Asking MobileMail for these headers...
Exceed attempts to request headers for messages missing it. We're triggering a full sync, so watch gets in sync with companion.
Error sending IDS Messages (IDS Identifier: %{public}@ - Object Type: %{public}@ - Resend Interval: %lu - Error code: %li).
IDS Message Sent Successfully (IDS Identifier: %{public}@).
Error re-sending content, as object IDs were corrupt (IDS Identifier: %{public}@).
Requested to resend message but a resend has already been requested. Ignoring. (Id: %{public}@ - Last IDS Identifier: %{public}@ - New Resend Interval: %lu)...
Resending Message (Id: %{public}@ - Last IDS Identifier: %{public}@ - New Resend Interval: %lu)...
Message is older than %.0f seconds. Downgrading to Default Priority (Id: %{public}@).
Resending Message Deletion (Id: %{public}@ - Last IDS Identifier: %{public}@ - New Resend Interval: %lu)...
Resending content for message (Id: %{public}@ - IDS Identifier: %{public}@ - User Requested: %d)...
Not resending content for message, as it's not for a notification and the user didn't request it (Id: %{public}@ - IDS Identifier: %{public}@).
Resending account (Id: %{public}@ - IDS Identifier: %{public}@)...
Resending progress for composed message (Id: %{public}@ - IDS Identifier: %{public}@)...
Requesting content for message: %{public}@.
Initial sync progress reported (%.2f).
