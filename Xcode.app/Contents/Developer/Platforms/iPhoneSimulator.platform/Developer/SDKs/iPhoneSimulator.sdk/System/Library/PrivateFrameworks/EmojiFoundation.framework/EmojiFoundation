EmojiKeyboard
KeywordMatch
Adornment
Learning
EMFDefaultsKey
EMFViewedInCategoryKey
EMFPreviouslyUsedCategoryKey
EMFRecentsKey
EMFUsageHistoryKey
EMFSkinToneBaseKeyPreferences
EMFRecentSequenceNumberKey
com.apple.EmojiPreferences
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
recentEmojis
T@"NSArray",&,N,V_recentEmojis
previouslyUsedCategory
T@"NSString",&,N,V_previouslyUsedCategory
maximumRecentsCount
TQ,N,V_maximumRecentsCount
v8@?0
machName
T@"NSString",&,N,V_machName
isValid
TB,N,V_isValid
com.apple.TextInput.emoji
dispatchQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_dispatchQueue
preferences
T@"EMFEmojiPreferences",&,N,V_preferences
com.apple.TextInput.emoji-client
EMFEmojiCategoryRecents
EMFEmojiCategoryPeople
EMFEmojiCategoryNature
EMFEmojiCategoryFoodAndDrink
EMFEmojiCategoryActivity
EMFEmojiCategoryTravelAndPlaces
EMFEmojiCategoryObjects
EMFEmojiCategorySymbols
EMFEmojiCategoryFlags
EMFEmojiCategoryPrepopulated
Frequently Used
People
Nature
Food & Drink
Activity
Travel & Places
Objects
Symbols
Flags
 Category
 Category Fallback
Recents Description
Skin Tone Emoji Help
identifier
T@"NSString",R,N,V_identifier
localizedName
T@"NSString",R,N
shortLocalizedName
emojiString
localeIdentifier
supportsSecureCoding
TB,R
T@"NSString",&,N,V_localeIdentifier
string
T@"NSString",R,C,N
emojiTokenRef
Tr^{__EmojiTokenWrapper=},R,N,V_emojiTokenRef
localeData
T@"EMFEmojiLocaleData",R,N
supportsSkinToneVariants
TB,R,N
skinTone
Ti,R,N
presentationStyle
isCommon
v40@?0^{__EmojiTokenWrapper=}8{?=qq}16^B32
v40@?0^{__CFArray=}8{?=qq}16^B32
T@"NSString",R,C,N,V_localeIdentifier
emojiLocaleDataRef
Tr^{__EmojiLocaleDataWrapper=},R,N,V_localeDataRef
emojiTokens
T@"NSArray",R,C,N
init
class
defaultsDomain
dictionary
writeEmojiDefaults
_readPreferencesFromDefaults
objectForKey:
integerValue
loadDefaultsIfNecessary
removeAllObjects
removeObjectForKey:
readEmojiDefaults
count
numberWithInteger:
arrayWithObjects:count:
dictionaryWithCapacity:
setObject:forKey:
arrayWithCapacity:
string
addObject:
maximumRecentsCount
removeObjectsInRange:
mutableCopy
countByEnumeratingWithState:objects:count:
scoreForSequence:
didUseEmoji:usageMode:
scoreForEmojiString:
indexOfObject:
removeObjectAtIndex:
lastObject
removeLastObject
objectAtIndex:
insertObject:atIndex:
recentEmojis
isEqualIgnoringModifiers:
unsignedIntegerValue
didUseEmoji:
didViewEmojiIndex:forCategory:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
resetEmojiDefaults
migrateInRecentEmoji:usages:
migrateInPreviouslyUsedCategory:
migrateInPreviouslyUsedCategoryIndexes:
recentVariantEmojiForEmoji:
previouslyUsedIndexInCategory:
.cxx_destruct
setMaximumRecentsCount:
setRecentEmojis:
previouslyUsedCategory
setPreviouslyUsedCategory:
_defaults
_isDefaultDirty
_usageHistory
_recents
_skinToneBaseKeyPreferences
_categoryIndexes
_currentSequence
_differentialPrivacyQueue
_maximumRecentsCount
_recentEmojis
_previouslyUsedCategory
interfaceWithProtocol:
createConnectionIfNecessary
invalidate
dealloc
alloc
initWithMachServiceName:options:
serviceInterface
setRemoteObjectInterface:
_setQueue:
setIsValid:
setInterruptionHandler:
setInvalidationHandler:
resume
remoteObjectProxy
selector
invokeWithTarget:
forwardInvocation:
initWithMachName:
machName
setMachName:
isValid
_connection
_isValid
_machName
initWithCapacity:
initWithMachServiceName:
setDelegate:
preferences
setExportedObject:
setExportedInterface:
dispatchQueue
sharedServiceWithMachName:
listener:shouldAcceptNewConnection:
setPreferences:
_listener
_dispatchQueue
_preferences
initWithIdentifier:
currentLocale
localeIdentifier
localizedNameForLocale:
shortLocalizedNameForLocale:
identifier
_baseLocalizationKeyForIdentifier:
stringByAppendingString:
bundleForClass:
localizedStringForKey:value:table:
localizedRecentsDescriptionForLocale:
localizedSkinToneEmojiDescriptionForLocale:
stringWithCharacters:length:
_stringWithUnichar:
stringWithFormat:
_emojiSetForIdentifier:setCount:
array
emojiStringsForEmojiChar:
emojiTokenWithString:localeData:
categoryIdentifierList
categoryWithIdentifier:
localizedRecentsDescription
localizedSkinToneEmojiDescription
localizedName
shortLocalizedName
emojiTokensForLocaleData:
_identifier
initWithCEMEmojiToken:
emojiTokenWithCEMEmojiToken:
emojiLocaleDataRef
setLocaleIdentifier:
localeData
copy
allocWithZone:
decodeObjectOfClass:forKey:
encodeObject:forKey:
emojiLocaleDataWithCEMEmojiLocaleData:
emojiTokenRef
emojiTokensForCEMEmojiTokens:
supportsSecureCoding
emojiTokenWithLongCharacter:localeData:
copyWithZone:
encodeWithCoder:
initWithCoder:
supportsSkinToneVariants
skinTone
copyWithSkinToneVariant:
presentationStyle
supportsPresentationStyle:
copyWithPresentationStyle:
copyWithoutModifiers
isCommon
relatedEmojiTokens:
nameForType:
_emojiTokenRef
_localeIdentifier
_emojiCharacterSet
rangeOfCharacterFromSet:
_isSingleEmoji
_containsEmoji
_enumerateEmojiTokensInRange:block:
initWithCEMEmojiLocaleData:
initWithLocaleIdentifier:
cfCompareFlagsFromNSOptions:
emojiLocaleDataWithLocaleIdentifier:
emojiTokens
enumerateSearchResultsInText:range:options:searchType:usingBlock:
emojiTokensForText:phoneticReading:options:searchType:includePrefixMatches:
emojiTokensForOptions:presentationStyle:
_localeDataRef
EMFEmojiPreferences
EMFEmojiPreferenceActions
NSObject
EMFEmojiPreferencesClient
EMFEmojiPreferencesService
NSXPCListenerDelegate
EMFEmojiCategory
EMFEmojiToken
NSCopying
NSSecureCoding
NSCoding
EMFEmojiExtras
EMFEmojiLocaleData
@16@0:8
v24@0:8@16
v24@0:8@"EMFEmojiToken"16
v32@0:8@16@24
v32@0:8@"EMFEmojiToken"16@"NSString"24
v32@0:8q16@24
v32@0:8q16@"NSString"24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v16@0:8
d24@0:8q16
d24@0:8@16
@24@0:8@16
Q24@0:8@16
v24@0:8Q16
@"NSMutableDictionary"
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
@"NSArray"
@"NSString"
v20@0:8B16
@"NSXPCConnection"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"EMFEmojiPreferences"
^{?=II}32@0:8@16^Q24
@20@0:8I16
@24@0:8{?=II}16
@24@0:8^{__EmojiTokenWrapper=}16
@24@0:8^{__CFArray=}16
@32@0:8@16@24
@28@0:8I16@20
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
i16@0:8
@20@0:8i16
B20@0:8i16
@24@0:8Q16
^{__EmojiTokenWrapper=}16@0:8
^{__EmojiTokenWrapper=}
v40@0:8{_NSRange=QQ}16@?32
@24@0:8^{__EmojiLocaleDataWrapper=}16
Q24@0:8Q16
v60@0:8@16{_NSRange=QQ}24Q40i48@?52
@48@0:8@16@24Q32i40B44
@28@0:8Q16i24
^{__EmojiLocaleDataWrapper=}16@0:8
^{__EmojiLocaleDataWrapper=}
