init
copy
initWithName:isPeriodic:period:handler:
initWithName:delay:handler:
.cxx_destruct
periodSeconds
name
handler
queue
executionCriteria
_periodSeconds
_name
_handler
_queue
_executionCriteria
mutableCopy
setObject:forKey:
UTF8String
removeObjectForKey:
sharedInstance
registerTask:
unregisterTask:
allTasks
setAllTasks:
_allTasks
alloc
setName:
setSwVersion:
hasPrefix:
initWithString:
decimalDigitCharacterSet
invertedSet
setCharactersToBeSkipped:
scanInt:
setNeedsUpdate:
setIncompatible:
swVersion
ksDeviceWithName:swVersion:
ksDeviceWithName:swVersion:needsUpgrade:incompatible:
swVersionIsPostCloudKitSwitch
incompatible
needsUpdate
_incompatible
_needsUpdate
_swVersion
aa_primaryAppleAccount
defaultCenter
accountStoreDidChange:
addObserver:selector:name:object:
removeObserver:
dealloc
queryMigrationState
userDefaultsSuiteName
initWithSuiteName:
boolForKey:
objectForKey:
timeIntervalSinceNow
account
initWithAccount:
dictionary
needUpgradeDeviceNames
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
enumerateKeysAndObjectsUsingBlock:
allValues
fetchSoftwareVersionsFromICloudWithCompletionBlock:
performRequestWithHandler:
responseDictionary
aggdPrefix
stringWithFormat:
numberWithBool:
addValue:forScalarKey:
postNotificationName:object:
setBool:forKey:
date
fetchCloudKitDevicesWithCompletionBlock:
iCloudDeviceListMonitor
canMigrateToCloudKit
accountStore
setAccountStore:
setAccount:
_accountStore
_account
initWithDirectoryPath:forceMigration:forceCloudKitSync:
stringByAppendingPathComponent:
fileURLWithPath:isDirectory:
initWithBaseURL:
setLegacyStore:
legacyStore
setTextReplacementStore:
setDelegate:
initWithDirectoryPath:
shouldMigrateToCloudKit
deviceDidMigrate
pushAllLocalRecordsOnceIfNeeded
notifyTextReplacementDidChange
checkForMigration
accountDidChange:
ckStore
userIdentity
hash
integerForKey:
isRunningOnInternalBuild
isEqualToString:
object
integerValue
resetMigrationState
setDidMigrateForCurrentAccount:
setDeviceDidMigrateOnCloud:
setDidCheckMigrationOnCloud:
pushMigrationStatusToCloud:
pushAllLocalData
requestSyncWithCompletionBlock:
isAccountAvailable
pendingMigration
setPendingMigration:
didCheckMigrationOnCloud
migrateLocallyCheckCompatibility:
queryMigrationStatusOnCloudWithCallback:
deviceDidMigrateOnCloud
textReplacementStore
textReplacementServer
runMigration
fetchConfigurationPlist
prepareForMigration
_migrateEntriesSinceDate:repeatCount:
delegate
migrationDidStart
timeIntervalSinceReferenceDate
predicateWithFormat:
numberWithDouble:
count
numberWithUnsignedInteger:
addEntries:removeEntries:withCompletionHandler:
respondToMigrationCompletion
queryTextReplacementsWithPredicate:callback:
removeObserver:name:object:
didCompleteMigration
class
isKindOfClass:
minimumUptimeRemaining
textReplacementStoreWithTestDirectory:withDelegate:forceMigration:forceCloudKitSync:
removeAllEntries
textReplacementEntries
queryTextReplacementsWithCallback:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
description
debugDescription
pullMigrationSettings
migrateLegacyStore
forwardingTargetForSelector:
setCkStore:
directoryPath
setDirectoryPath:
didMigrateForCurrentAccount
_migrationQueue
_didMigrateForCurrentAccount
_pendingMigration
_deviceDidMigrateOnCloud
_didCheckMigrationOnCloud
_ckStore
_legacyStore
_textReplacementStore
_directoryPath
_delegate
length
_fastCharacterContents
getCharacters:range:
_characterSetWithPattern:
_contentsExclusivelyInCharacterSet:
_nonIdeographicCharacterSet
_nonHiraganaKatakanaOrBopomofoSet
_containsCJKSymbolsAndPunctuation
_containsIdeographicCharacters
_containsEmoji
_containsHiraganaKatakanaOrBopomofo
enumerateSubstringsInRange:options:usingBlock:
wordCount
initWithRecordZoneName:
containerWithIdentifier:
mainBundle
bundleIdentifier
executablePath
lastPathComponent
setSourceApplicationBundleIdentifier:
privateCloudDatabase
publicCloudDatabase
initWithZoneName:
defaultRecordZone
recordZone
zoneID
zoneName
accountStatusDidChange:
setup
cloudKitContainer
recordName
fetchUserRecordIDWithCompletionHandler:
setupSubscription
setupRecordZoneWithCompletionHandler:
queryAccountStatusWithCompletionHandler:
recordZoneKey
subscriptionKey
numberWithInteger:
_checkAccountStatusWithCompletionHandler:withRetryCount:
domain
code
userInfo
doubleValue
accountStatusWithCompletionHandler:
cloudKitDatabase
localizedDescription
saveRecordZone:completionHandler:
initForReadingWithData:
initWithCoder:
reason
initWithRecordName:zoneID:
initWithRecordType:recordID:
initWithZoneID:subscriptionID:
setShouldBadge:
setNotificationInfo:
arrayWithObject:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
setModifySubscriptionsCompletionBlock:
addOperation:
updateRecords:deleteRecordIDs:withPriority:completionHandler:retryCount:
initWithRecordsToSave:recordIDsToDelete:
setSavePolicy:
setQualityOfService:
array
arrayWithObjects:count:
dictionaryWithValuesForKeys:
addObject:
recordID
setPerRecordCompletionBlock:
numberWithLong:
resolveConflicts:
updateRecords:deleteRecordIDs:withPriority:completionHandler:
setModifyRecordsCompletionBlock:
initWithCapacity:
timeIntervalSinceDate:
allKeys
fetchRecordsWithPriority:changeToken:completionHandler:retryCount:
unarchiveObjectWithData:
setPreviousServerChangeToken:
dictionaryWithObjects:forKeys:count:
initWithRecordZoneIDs:optionsByRecordZoneID:
_submitFetchRecordsOperation:withPriority:changeToken:completionHandler:retryCount:
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
archivedDataWithRootObject:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
initWithRecordName:
initWithRecordIDs:
setFetchRecordsCompletionBlock:
publicDatabase
recordWithName:type:cloudData:attributes:
recordWithName:type:attributes:
recordIDForName:
fetchRecordsWithPriority:changeToken:completionHandler:
fetchPublicRecordsWithNames:completionHandler:
didStoreLocalChangesForChangeToken:
setCloudKitContainer:
setCloudKitDatabase:
setPublicDatabase:
setRecordZone:
setRecordZoneKey:
setSubscriptionKey:
_ckWorkQueue
_dataQueue
_cloudKitContainer
_cloudKitDatabase
_publicDatabase
_recordZone
_recordZoneKey
_subscriptionKey
deviceStateMonitor
isDataAvailableForClassC
isContentProtectionAvailable
setIsContentProtectionAvailable:
_isContentProtectionAvailable
keyboardDirectory
defaultManager
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createFileAtPath:contents:attributes:
enumeratorAtPath:
nextObject
hasSuffix:
machServiceNameTextReplacement
userDictionaryWordKeyPairsFilePathLegacy
keyboardServicesDirectory
createFileIfDoesNotExist:
unitTestDirectoryPath
findAllDbsInDirectory:
importSampleShortcutsIfNecessary
cloudKitManager
coreDataStore
didMakeInitialPull
pullRemoteDataWithCompletionHandler:
sampleShortcut
setDidRequestFirstPullForAccount:
didRequestFirstPullForAccount
queryCloudIfFirstPullOrAccountChanged
setNeedsSaveToCloud:
timestamp
setTimestamp:
markDeletesForTextReplacementEntries:
recordTextReplacementEntries:
deleteTextReplacementsWithPredicate:
saveCKFetchToken:
queryEntriesWithPredicate:limit:
andPredicateWithSubpredicates:
ckMigrationStatusOnCloud
pushLocalChangesWithCompletionHandler:
queryUpdatedLocalEntries
queryDeletedEntries
initWithArray:sliceSize:
nextSlice
containsObject:
localEntriesFromCloudEntries:
deleteTextReplacementsFromLocalStoreWithNames:excludeSavesToCloud:
getCKFetchToken
cloudEntriesFromLocalEntries:
cloudRecordIDsForLocalEntries:
cloudData
cloudID
attributesDict
recordType
localEntryFromCloudEntry:
boolValue
setCkMigrationStatusOnCloud:
isMigrationCompleted
removeAllEntriesWithCompletionHandler:
setCoreDataStore:
setCloudKitManager:
_syncQueue
_ckMigrationStatusOnCloud
_didRequestFirstPullForAccount
_coreDataStore
_cloudKitManager
serviceConnection
isEquivalentTo:
validateTextReplacement:
setPriorValue:
errorWithCode:forEntry:
addEntries:removeEntries:withReply:
requestSyncWithReply:
cancelPendingUpdatesWithReply:
queryTextReplacementEntriesWithReply:
queryTextReplacementsWithPredicate:reply:
valueToInsert
textReplaceEntryFromTIDictionaryValue:
valueToDelete
transactionFromTextReplacementEntry:forDelete:
cancelPendingUpdates
modifyEntry:toEntry:withCompletionHandler:
performTransaction:completionHandler:
phraseShortcuts
_connection
cleanup
managedObjectContext
hasChanges
save:
reset
performBlockAndWait:
persistentStoreCoordinator
initWithConcurrencyType:
setPersistentStoreCoordinator:
setMergePolicy:
bundleForClass:
URLForResource:withExtension:
initWithContentsOfURL:
managedObjectModel
initWithManagedObjectModel:
persistentStores
dictionaryWithObjectsAndKeys:
addPersistentStoreWithType:configuration:URL:options:error:
destroyPersistentStoreAtURL:withType:options:error:
contentsOfDirectoryAtPath:error:
removeItemAtPath:error:
fetchAndMergeTextReplacementEntry:context:
fetchTextReplacementEntry:context:
insertNewObjectForEntityForName:inManagedObjectContext:
shortcut
containsString:
phrase
uniqueID
setUniqueName:
setPhrase:
setShortcut:
setWasDeleted:
firstObject
uniqueName
objectAtIndexedSubscript:
wasDeleted
needsSaveToCloud
setRemoteRecordInfo:
performWithOptions:andBlock:
queryManagedObjectsWithPredicate:limit:
entityForName:inManagedObjectContext:
setEntity:
setIncludesSubentities:
setIncludesPendingChanges:
setIncludesPropertyValues:
setPredicate:
initWithFetchRequest:
setResultType:
executeRequest:error:
result
setFetchOffset:
setFetchLimit:
setReturnsObjectsAsFaults:
sortDescriptorWithKey:ascending:
setSortDescriptors:
executeFetchRequest:error:
localCloudEntryFromMocObject:
setFetchBatchSize:
remoteRecordInfo
setCloudData:
setCloudID:
getSyncStateEntry
setFetchChangeToken:
setDidPullOnce:
fetchChangeToken
didPullOnce
fetchTextReplacementWithUniqueName:context:
textReplacementEntriesWithLimit:
setManagedObjectContext:
setManagedObjectModel:
_queueMOC
_queuePSC
_managedObjectContext
_managedObjectModel
_persistentStoreCoordinator
interfaceWithProtocol:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
initWithMachServiceName:options:
setRemoteObjectInterface:
resume
invalidate
remoteObjectProxy
synchronousRemoteObjectProxyWithErrorHandler:
addObjectsFromArray:
_serviceConnection
allocWithZone:
copyWithZone:
decodeObjectOfClass:forKey:
encodeObject:forKey:
illegalCharacterSet
stringByTrimmingCharactersInSet:
controlCharacterSet
whitespaceAndNewlineCharacterSet
UUID
UUIDString
dataUsingEncoding:
initWithData:
data
initWithData:encoding:
initForWritingWithMutableData:
encodeSystemFieldsWithCoder:
finishEncoding
dataWithData:
supportsSecureCoding
encodeWithCoder:
uniqueRecordNameVer0
uniqueRecordName
priorValue
_needsSaveToCloud
_wasDeleted
_phrase
_shortcut
_timestamp
_priorValue
_cloudData
_cloudID
entity
attributesByName
willAccessValueForKey:
valueForKey:
didAccessValueForKey:
willChangeValueForKey:
setValue:forKey:
didChangeValueForKey:
_copyAttributeValuesFromObject:
workQueue
managedObjectModelURL
setMinimumUptimeDidExpire:
setPersistentStoreDidLoadTime:
persistentStoreCoordinatorStoresWillChange:
persistentStoreCoordinatorStoresDidChange:
persistentStoreDidImportUbiquitousContentChanges:
basePersistentStoreURL
persistentStoreDidLoadTime
endMinimumUptime
_setDelegate:
loadPersistentStoreIfNecessary
importLegacyEntries
migrateTellurideData
migrateSundanceData
persistentStore
baseURL
runMaintenanceIncludeLocalVariations:
requestMinimumUptime
minimumUptimeDidExpire
pendingSampleShortcutImport
stringForKey:
currentStoreIndentity
setPendingSampleShortcutImport:
detectAndCleanDuplicatesWithContext:
performMaintenanceIfNecessary
mergeEntriesFromAllStoresIncludeLocalVariations:
mergeEntriesForUbiquityIdentityChangeIfNecessary
errorWithCode:failedAdds:failedDeletes:
insertEntryWithValue:
_deleteTransaction:
save
multipleAddErrors:removeErrors:
removeEntriesWithPredicate:
compare:
sortDescriptorWithKey:ascending:selector:
entriesMatchingPredicate:sortDescriptors:
deleteObject:
entriesUsingSortDescriptors:
textReplacementEntriesFromManagedObjects:
dateWithTimeIntervalSince1970:
entities
lastObject
rollback
entityDescription
initWithEntityName:
importedSinceMaintenance
setImportedSinceMaintenance:
fetchRequestWithEntityName:
propertiesByName
setPropertiesToFetch:
setPropertiesToGroupBy:
_shouldMergeShortcut:phrase:intoContext:
_mergeShortcut:phrase:fromContext:
initWithEntity:insertIntoManagedObjectContext:
mergeShortcutsFromContext:
ubiquityStoreURLForStoreURL:ubiquityIdentityToken:ubiquityName:
path
fileExistsAtPath:
migrateEntriesFromStoreAtURL:error:
pathComponents
indexOfObject:
objectAtIndex:
subarrayWithRange:
pathWithComponents:
fileURLWithPath:
retirePersistentStoreAtURL:
didMergeEntriesForOtherLocalPeers:
ubiquityIdentityToken
storeURLForMergeAfterUbiquityIdentityChangeFromToken:toToken:withLastKnownToken:shouldDeleteFirst:
mergeEntriesForUbiquityIdentityChangeFromURL:firstDelete:
didMergeEntriesForNewUbiquityIdentity:
needsMaintenance
didMaintenance
loadMaintenancePreferencesIfNecessary
forceMaintenance
lastMaintenanceDate
setLastMaintenanceDate:
distantPast
setForceMaintenance:
expressionWithFormat:
setExpression:
setExpressionResultType:
_deleteDuplicatesOfShortcut:phrase:count:withContext:
objectWithID:
arrayWithObjects:
arrayWithCapacity:
stringByAppendingString:
arrayWithContentsOfFile:
legacyImportFilePaths
legacyImportWordKeyPairsFromFiles:
legacyStorePath
suspendedForAccountChange
setSuspendedForAccountChange:
absoluteString
context:shouldHandleInaccessibleFault:forObjectID:andTrigger:
entriesMatchingPredicate:
setPersistentStore:
setBaseURL:
_uptimeTransaction
_suspendedForAccountChange
_forceMaintenance
_pendingSampleShortcutImport
_minimumUptimeDidExpire
_persistentStore
_workQueue
_lastMaintenanceDate
_importedSinceMaintenance
_baseURL
_persistentStoreDidLoadTime
initWithDatabaseDirectoryPath:
initWithMachServiceName:
initWithOwner:
isSetupAssistantRunning
registerForPushNotifications
scheduleSyncTask
requestPeriodicSync
textReplacementManager
_performCleanup
setTextReplacementManager:
addEntries:removeEntries:forClient:withCompletionHandler:
generation
extractAggdMetricsForTextReplacement:
unconsumed
errorWithDomain:code:userInfo:
_cancelPendingUpdateForClient:
cancel
textReplacementEntriesForClient:
hasReadAccess
effectiveUserIdentifier
isBlackListed:
initWithOwner:forConnection:
setExportedInterface:
setExportedObject:
setInvalidationHandler:
notificationFromRemoteNotificationDictionary:
topic
listener:shouldAcceptNewConnection:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
start
shutdown
buddySetupDidFinish
pushConnection
setPushConnection:
listener
setListener:
setupAssistanceRunning
setSetupAssistanceRunning:
_daemonClient
_setupAssistanceRunning
_textReplacementManager
_pushConnection
_listener
valueForEntitlement:
setGeneration:
_owner
_hasReadAccess
_generation
addValue:forDistributionKey:
setValue:forScalarKey:
clearScalarKey:
setValueToInsert:
setValueToDelete:
whitespaceCharacterSet
rangeOfCharacterFromSet:
errorStringForCode:
logPhraseWordCount:
bundleWithIdentifier:
appleLanguagesPreference
localizations
preferredLocalizationsFromArray:forPreferences:
pathForResource:ofType:inDirectory:forLocalization:
dictionaryWithContentsOfFile:
URLWithString:
propertyListWithData:options:format:error:
valueWithEntry:
matchesEntry:
shortcutForSorting
_valueToDelete
_valueToInsert
exceptionWithName:reason:userInfo:
raise
initWithArray:offset:count:
_array
_offset
_count
remaining
consumed
_sliceSize
com.apple._KSTasks.defaultQueue
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
executionCriteria
T@"NSObject<OS_xpc_object>",R,N,V_executionCriteria
periodSeconds
TQ,R,N,V_periodSeconds
name
T@"NSString",R,C,N,V_name
handler
T@?,R,N,V_handler
v8@?0
__33-[_KSTaskScheduler registerTask:]_block_invoke
__33-[_KSTaskScheduler registerTask:]_block_invoke_2
v16@?0@"NSObject<OS_xpc_object>"8
allTasks
T@"NSMutableDictionary",&,N,V_allTasks
_KSTRCloudKitMigratable
_KSCKMigrationPreviousCheckDate
_KSCloudKitDevicesMigrationStateDidChange
T@"NSString",C,N,V_name
swVersion
T@"NSString",C,N,V_swVersion
incompatible
TB,N,V_incompatible
needsUpdate
TB,N,V_needsUpdate
devices
v32@?0@"NSString"8@"NSString"16^B24
__70-[_KSiCloudDeviceListMonitor fetchCloudKitDevicesWithCompletionBlock:]_block_invoke_2
v16@?0@"NSDictionary"8
CloudKit device list request failed, error: %@
v32@?0@"AARequest"8@"AAResponse"16@"NSError"24
>>> icloud response dictionary: %@
%@.didMigrate
%@.waitingMigration
__49-[_KSiCloudDeviceListMonitor queryMigrationState]_block_invoke_2
v16@?0@"NSArray"8
accountStore
T@"ACAccountStore",&,N,V_accountStore
account
T@"ACAccount",&,N,V_account
KSCloudKitMigrationDidComplete
KSDidPullLegacyEntriesFromPeers
KSFirstMigrationCheckDate
KSDidPushAllLocalRecordsOnce-2
KSDidPushMigrationStatusOnce-2
KSForceCloudKitMigrationAndSync
KSForceCloudKitStore
com.apple.keyboard.textReplacement.Migratable.InBatch.didMigrate
seedMigrationPercent
internalMigrationPercent
whitelistedMigrationAccounts
legacyStoreTest.db
com.apple.keyboardServices.textReplacementManager.migrationQueue
-[_KSTextReplacementManager initWithDirectoryPath:forceMigration:forceCloudKitSync:]
-[_KSTextReplacementManager shouldMigrateToCloudKit]
v12@?0B8
!!!ERROR Sending darwin notification failed.
>>> sending out shortcut changes notif
__46-[_KSTextReplacementManager checkForMigration]_block_invoke
-[_KSTextReplacementManager migrateLocallyCheckCompatibility:]
__62-[_KSTextReplacementManager migrateLocallyCheckCompatibility:]_block_invoke
com.apple.KeyboardServices.MigrationTask
v32@?0@8@16^B24
TRUEPREDICATE
timestamp > %@
__66-[_KSTextReplacementManager _migrateEntriesSinceDate:repeatCount:]_block_invoke_2
v16@?0@"NSError"8
v20@?0@"NSArray"8B16
-[_KSTextReplacementManager respondToMigrationCompletion]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
ckStore
T@"_KSTextReplacementCKStore",&,N,V_ckStore
legacyStore
T@"_KSTextReplacementLegacyStore",&,N,V_legacyStore
textReplacementStore
T@"NSObject<_KSTextReplacementStoreProtocol>",&,N,V_textReplacementStore
directoryPath
T@"NSString",C,N,V_directoryPath
didMigrateForCurrentAccount
TB,N,V_didMigrateForCurrentAccount
pendingMigration
TB,N,V_pendingMigration
deviceDidMigrateOnCloud
TB,N,V_deviceDidMigrateOnCloud
didCheckMigrationOnCloud
TB,N,V_didCheckMigrationOnCloud
delegate
T@"<_KSMigrationDelegate>",W,N,V_delegate
[^[ [ [:East_Asian_Width=Wide:][:East_Asian_Width=Fullwidth:] ] & [:Punctuation:] ]]
[:^Ideographic:]
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
KSCKPreviousChangeToken
com.apple.textinput.KeyboardServices
KSCloudKitAccountDidChange
KSCKSubscriptionProd
KSCKDidSetupRecordZoneProd
timestamp
%@-%@
com.apple.keyboardservices._ksCloudKitManager.cloudKitWorkQueue
v24@?0@"CKRecordID"8@"NSError"16
__62-[_KSCloudKitManager queryAccountStatusWithCompletionHandler:]_block_invoke
__62-[_KSCloudKitManager queryAccountStatusWithCompletionHandler:]_block_invoke_3
v16@?0q8
-[_KSCloudKitManager isAccountAvailable]
__78-[_KSCloudKitManager _checkAccountStatusWithCompletionHandler:withRetryCount:]_block_invoke
v24@?0q8@"NSError"16
-[_KSCloudKitManager setupRecordZoneWithCompletionHandler:]
__59-[_KSCloudKitManager setupRecordZoneWithCompletionHandler:]_block_invoke_2
v24@?0@"CKRecordZone"8@"NSError"16
-[_KSCloudKitManager recordWithName:type:cloudData:attributes:]
-[_KSCloudKitManager recordWithName:type:attributes:]
-[_KSCloudKitManager recordIDForName:]
-[_KSCloudKitManager setupSubscription]
KSTextReplacementSubscription
Error, failed to create subscription: %@, with error: %@
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
__94-[_KSCloudKitManager updateRecords:deleteRecordIDs:withPriority:completionHandler:retryCount:]_block_invoke
v24@?0@"CKRecord"8@"NSError"16
__94-[_KSCloudKitManager updateRecords:deleteRecordIDs:withPriority:completionHandler:retryCount:]_block_invoke.286
-[_KSCloudKitManager fetchRecordsWithPriority:changeToken:completionHandler:retryCount:]
v16@?0@"CKRecord"8
v24@?0@"CKRecordID"8@"NSString"16
__105-[_KSCloudKitManager _submitFetchRecordsOperation:withPriority:changeToken:completionHandler:retryCount:]_block_invoke.363
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
__105-[_KSCloudKitManager _submitFetchRecordsOperation:withPriority:changeToken:completionHandler:retryCount:]_block_invoke.376
__105-[_KSCloudKitManager _submitFetchRecordsOperation:withPriority:changeToken:completionHandler:retryCount:]_block_invoke.400
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
__68-[_KSCloudKitManager fetchPublicRecordsWithNames:completionHandler:]_block_invoke
v24@?0@"NSDictionary"8@"NSError"16
cloudKitContainer
T@"CKContainer",&,N,V_cloudKitContainer
cloudKitDatabase
T@"CKDatabase",&,N,V_cloudKitDatabase
publicDatabase
T@"CKDatabase",&,N,V_publicDatabase
recordZone
T@"CKRecordZone",&,N,V_recordZone
recordZoneKey
T@"NSString",&,N,V_recordZoneKey
subscriptionKey
T@"NSString",&,N,V_subscriptionKey
KSDeviceProtectionClassDidChange
isContentProtectionAvailable
TB,N,V_isContentProtectionAvailable
com.apple.TextInput.shortcuts
/Library/Keyboard
UserDictionaryWordKeyPairs.plist
/Library/KeyboardServices
Could not create folder: %@, error: %@
com.apple.textInput.keyboardServices.textReplacement
/tmp/
UserDictionary.db
CloudUserDictionary.sqlite
CPSharedResourcesDirectory
Failed to softlink function CPSharedResourcesDirectory
/System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
Failed to open framework /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
TextReplacements
TextReplacementEntry
TextReplacementMigration
kDidMigrateToUUIDRecordName
KSDidMigrateToCloudKitOnCloud
KSSampleShortcutWasImported_CK
_KSTRCKStoreDidReceiveChangesNotification
com.apple.keyboardServices.ckStore.syncWork
com.apple.keyboardServices.ckStore.dataQueue
-[_KSTextReplacementCKStore initWithDirectoryPath:]
__66-[_KSTextReplacementCKStore queryCloudIfFirstPullOrAccountChanged]_block_invoke_2
__46-[_KSTextReplacementCKStore accountDidChange:]_block_invoke
__45-[_KSTextReplacementCKStore pushAllLocalData]_block_invoke
wasDeleted == FALSE
didMigrate
migrationStatus
!!!ERROR, failed to write migration status to cloud: %@
v24@?0@"NSArray"8@"NSError"16
__60-[_KSTextReplacementCKStore requestSyncWithCompletionBlock:]_block_invoke
-[_KSTextReplacementCKStore pushLocalChangesWithCompletionHandler:]
__65-[_KSTextReplacementCKStore pullRemoteDataWithCompletionHandler:]_block_invoke_2
__65-[_KSTextReplacementCKStore pullRemoteDataWithCompletionHandler:]_block_invoke_3
v36@?0@"NSArray"8@"NSArray"16@"NSData"24B32
needsSaveToCloud == TRUE AND wasDeleted == FALSE
wasDeleted == TRUE
-[_KSTextReplacementCKStore cloudEntriesFromLocalEntries:]
-[_KSTextReplacementCKStore cloudRecordIDsForLocalEntries:]
-[_KSTextReplacementCKStore localEntriesFromCloudEntries:]
coreDataStore
T@"_KSTextReplacementCoreDataStore",&,N,V_coreDataStore
cloudKitManager
T@"_KSCloudKitManager",&,N,V_cloudKitManager
ckMigrationStatusOnCloud
TB,N,V_ckMigrationStatusOnCloud
didRequestFirstPullForAccount
TB,N,V_didRequestFirstPullForAccount
-[_KSTextReplacementClientStore modifyEntry:toEntry:withCompletionHandler:]
Failed the update store: %@
v20@?0B8@"NSError"12
Failed to cancel operation with error: %@
_KSTextReplacementModel
TRCloudKitSyncState
com.apple.keyboardServices.cdStore.queueMOC
com.apple.keyboardServices.cdStore.queuePSC
TextReplacements.db
__61-[_KSTextReplacementCoreDataStore persistentStoreCoordinator]_block_invoke
__64-[_KSTextReplacementCoreDataStore recordTextReplacementEntries:]_block_invoke
__77-[_KSTextReplacementCoreDataStore fetchAndMergeTextReplacementEntry:context:]_block_invoke
-[_KSTextReplacementCoreDataStore fetchTextReplacementEntry:context:]
shortcut == %@ AND phrase == %@ 
uniqueName == %@
NOT (needsSaveToCloud == TRUE AND wasDeleted == FALSE)
__101-[_KSTextReplacementCoreDataStore deleteTextReplacementsFromLocalStoreWithNames:excludeSavesToCloud:]_block_invoke
__71-[_KSTextReplacementCoreDataStore deleteTextReplacementsWithPredicate:]_block_invoke
Caught Exception: %@
__74-[_KSTextReplacementCoreDataStore queryManagedObjectsWithPredicate:limit:]_block_invoke
__52-[_KSTextReplacementCoreDataStore saveCKFetchToken:]_block_invoke
__52-[_KSTextReplacementCoreDataStore getSyncStateEntry]_block_invoke
T@"NSString",&,N,V_directoryPath
managedObjectContext
T@"NSManagedObjectContext",&,N,V_managedObjectContext
managedObjectModel
T@"NSManagedObjectModel",&,N,V_managedObjectModel
persistentStoreCoordinator
T@"NSPersistentStoreCoordinator",&,N,V_persistentStoreCoordinator
KSTextReplacementDidChangeNotification
_KSTextReplacementUpdateDidFailErrorsKey
_KSTextReplacementDeleteDidFailErrorsKey
_KSTextReplacementEntryDidFailErrorKey
_KSTextReplacementUpdateDidFailEntriesKey
_KSTextReplacementDeleteDidFailEntriesKey
_KSTRShouldCleanupResources
KSTextReplacementErrorDomain
phrase
T@"NSString",&,D,N
shortcut
T@"NSDate",&,D,N
remoteRecordInfo
T@"NSData",&,D,N
needsSaveToCloud
TB,D,N
wasDeleted
uniqueName
fetchChangeToken
didPullOnce
priorValue
cloudID
%@%@
shortcutE
phraseE
shortcut=%@, phrase=%@
supportsSecureCoding
TB,R
cloudData
T@"NSData",&,N,V_cloudData
TB,V_needsSaveToCloud
TB,V_wasDeleted
T@"NSString",C,N,V_cloudID
T@"NSString",C,N,V_phrase
T@"NSString",C,N,V_shortcut
T@"NSDate",C,N,V_timestamp
T@"_KSTextReplacementEntry",&,N,V_priorValue
_KSTRLegacyStoreDidImportChangesNotification
_KSTRLegacyStoreDidImportUbiquitousChanges
TIBuddySetupFinishedNotification_Private
com.apple.Preferences
UserDictionaryLocalPeerIdentityCurrent
UserDictionaryUbiquityIdentityTokenCurrent
UserDictionaryUbiquityIdentityTokenLastKnown
UserDictionaryLastMaintenanceDate
UserDictionaryImportedSinceMaintenance
kDidInsertSampleShortcutForPeer
T@"NSString",C,N
T@"NSDate",&,N
T@"NSString",C,D,N
UserDictionary
com.apple.keyboardServices.legacyStore.workQueue
com.apple.TextInput
Dictionaries
-[_KSTextReplacementLegacyStore loadPersistentStoreIfNecessary]
-[_KSTextReplacementLegacyStore requestMinimumUptime]
com.apple.keyboardservices.legacyStore.coredataUptime
-[_KSTextReplacementLegacyStore endMinimumUptime]
-[_KSTextReplacementLegacyStore importSampleShortcutsIfNecessary]
__65-[_KSTextReplacementLegacyStore importSampleShortcutsIfNecessary]_block_invoke
__80-[_KSTextReplacementLegacyStore addEntries:removeEntries:withCompletionHandler:]_block_invoke
__60-[_KSTextReplacementLegacyStore removeEntriesWithPredicate:]_block_invoke
phrase == %@ AND shortcut == %@
UserDictionaryEntry
Error writing to user dictionary: %@
Persistent store imported ubiquitous content changes
Merging shortcuts from sourceContext
Error fetching shortcuts from sourceContext
Error saving after shortcut migration: %@
Completed merge (inserted %ld shortcuts)
shortcut == %@ && phrase == %@
Error while fetching shortcut - %@
Should merge shortcut: "%@" -> "%@"? %@
Merge shortcut: "%@" -> "%@"
Error fetching shortcut - %@
Unable to migrate shortcut
Attempting shortcut merge (%@)
Could not open store at %@: %@
Looks like we tried to open a destroyed container with read-only permission at: %@
Trying again with write permission...
Still could not open store at %@: %@
Shortcut merge %@ (%@)
success
-[_KSTextReplacementLegacyStore retirePersistentStoreAtURL:]
Ubiquity container became available. Merging local shortcuts into Ubiquity container.
Ubiquity container became available, but different from last known container. Discarding local shortcuts.
Ubiquity container became unavailable. Cloning shortcuts from Ubiquity container into local store.
-[_KSTextReplacementLegacyStore mergeEntriesForUbiquityIdentityChangeFromURL:firstDelete:]
Merge successful.
Failed merge after Ubiquity account change.
CoreDataUbiquitySupport
-[_KSTextReplacementLegacyStore mergeEntriesFromAllStoresIncludeLocalVariations:]
Saving observed local peer identity to %@
Saving observed Ubiquity identity tokens to %@
Detect and clean shortcut duplicates.
count:(shortcut)
count
Deduplication completed (number of duplicated shortcuts = %ld)
Found duplicate shortcut: "%@" -> "%@" (count=%ld)
Error while fetching duplicates - %@
Error while deleting duplicates - %@
Error userInfo - %@
zh-Pinyin
zh-Zhuyin
latin
SerializedUserWords-
%s: %@
-[_KSTextReplacementLegacyStore importLegacyEntries]
UserDictionary.sqlite
Couldn't read legacy data at %@
Performing migration from word-key pairs file at %@
Couldn't remove legacy store at %@: %@
Added shortcut %@ for phrase %@
Couldn't remove legacy word-key pairs file at %@: %@
Couldn't save words imported from legacy store: %@
Performing migration from legacy store at %@
Removing legacy store at %@
-[_KSTextReplacementLegacyStore persistentStoreCoordinatorStoresWillChange:]
__76-[_KSTextReplacementLegacyStore persistentStoreCoordinatorStoresWillChange:]_block_invoke
-[_KSTextReplacementLegacyStore persistentStoreCoordinatorStoresDidChange:]
__75-[_KSTextReplacementLegacyStore persistentStoreCoordinatorStoresDidChange:]_block_invoke
Inaccessible fault encountered
persistentStore
T@"NSPersistentStore",&,N,V_persistentStore
workQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_workQueue
suspendedForAccountChange
TB,N,V_suspendedForAccountChange
forceMaintenance
TB,N,V_forceMaintenance
lastMaintenanceDate
T@"NSDate",&,N,V_lastMaintenanceDate
importedSinceMaintenance
Tq,N,V_importedSinceMaintenance
pendingSampleShortcutImport
TB,N,V_pendingSampleShortcutImport
baseURL
T@"NSURL",&,N,V_baseURL
minimumUptimeDidExpire
TB,N,V_minimumUptimeDidExpire
persistentStoreDidLoadTime
T@"NSDate",&,N,V_persistentStoreDidLoadTime
com.apple.keyboardservices.textreplacement.allow
com.apple.keyboard
_KSTIBuddySetupDidFinishNotification_Private
com.apple.keyboardServices.textReplacementServer.storeWorkQueue
com.apple.KeyboardServices.TextReplacementCKSyncTask
__47-[_KSTextReplacementServer requestPeriodicSync]_block_invoke
-[_KSTextReplacementServer textReplacementManager]
__35-[_KSTextReplacementServer cleanup]_block_invoke
-[_KSTextReplacementServer _performCleanup]
-[_KSTextReplacementServer start]
__85-[_KSTextReplacementServer addEntries:removeEntries:forClient:withCompletionHandler:]_block_invoke
__44-[_KSTextReplacementServer removeAllEntries]_block_invoke_2
-[_KSTextReplacementServer runMigration]
>>> APS Push received: %@ %@
>>> PUSH notif received, completed pulling TR entries
-[_KSTextReplacementServer buddySetupDidFinish]
pushConnection
T@"APSConnection",&,N,V_pushConnection
listener
T@"NSXPCListener",&,N,V_listener
textReplacementManager
T@"_KSTextReplacementManager",&,N,V_textReplacementManager
setupAssistanceRunning
TB,N,V_setupAssistanceRunning
%s: cancelled with counter %lld
-[_KSTRClient cancel]
NSDetailError
Cancellation Failed, did not find pid
-[_KSTRClient queryTextReplacementEntriesWithReply:]
-[_KSTRClient queryTextReplacementsWithPredicate:reply:]
generation
Tq,N,V_generation
hasReadAccess
TB,R,N,V_hasReadAccess
com.apple.keyboard.textReplacement
_KSTextReplacementErrorCoreDataFailure
_KSTextReplacementErrorXPCFailure
_KSTextReplacementErrorExpansionIsEmpty
_KSTextReplacementErrorExpansionIsAllWhitespace
_KSTextReplacementErrorExpansionLength
_KSTextReplacementErrorShortcutHasWhitespace
_KSTextReplacementErrorShortcutLength
_KSTextReplacementErrorShortcutContainsCJKVCharacters
_KSTextReplacementErrorShortcutContainsEmojiCharacters
_KSTextReplacementErrorShortcutContainsCJKPunctuation
_KSTextReplacementErrorCJKVShortcutLength
_KSTextReplacementErrorOperationCancelled
_KSTextReplacementErrorMultipleErrors
_KSTextReplacementErrorExpansionSimilarToShortcut
_KSTextReplacementErrorNone
+[_KSTextReplacementHelper validateTextReplacement:]
%@.phraseOnly
three
four
five
sixToTen
elevenToFifteen
sixteenToInf
%@.countWords.%@
AppleLanguages
target
AppleLanguages preference: %@
Couldn't read AppleLanguages preference.
Preferred localization: %@
TIUserDictionarySampleShortcuts
plist
>>> Loading sample shortcut from %@
_LOCALIZABLE_
https://configuration.apple.com/configurations/internetservices/cloudkit/textinput/textinput-1.0.plist
{%@ => %@}
T@"NSDate",&,N,V_timestamp
valueToDelete
valueToInsert
<%@: valueToDelete = %@, valueToInsert = %@>
T@"_KSTIUserDictionaryEntryValue",&,N,V_valueToDelete
T@"_KSTIUserDictionaryEntryValue",&,N,V_valueToInsert
Attempt to index beyond end of array. Count of items is %lu, index is %lu
remaining
TQ,R,N
_KSSystemTask
_KSTaskScheduler
_KSDeviceInfo
_KSiCloudDeviceListMonitor
_KSTextReplacementManager
_KSTextReplacementStoreProtocol
NSObject
KSExtras
WordCount
_KSCloudKitManager
_KSDeviceStateMonitor
_KSUtilities
_KSTextReplacementCKStore
_KSTextReplacementClientStore
_KSTextReplacementCancellation
_KSTextReplacementCoreDataStore
_KSTextReplacementServiceProtocol
_KSTextReplacementServerConnection
_KSTextReplacementManagedObject
_KSCKSyncStateManagedObject
_KSTextReplacementEntry
NSSecureCoding
NSCoding
NSCopying
TIUserDictionaryWordServer
_KSTIUserDictionaryEntry
_KSTextReplacementLegacyStore
NSManagedObjectContextFaultingDelegate
_KSTextReplacementServer
NSXPCListenerDelegate
APSConnectionDelegate
_KSTRClient
_KSAggdLogger
_KSTextReplacementHelper
_KSTIUserDictionaryEntryValue
_KSTIUserDictionaryTransaction
ArraySlice
ArraySlicer
@16@0:8
@44@0:8@16B24Q28@?36
@40@0:8@16Q24@?32
v16@0:8
Q16@0:8
@?16@0:8
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_xpc_object>"
v24@0:8@16
@"NSMutableDictionary"
@32@0:8@16@24
@40@0:8@16@24B32B36
B16@0:8
v20@0:8B16
v24@0:8@?16
@"ACAccountStore"
@"ACAccount"
v40@0:8@16@24@?32
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"NSError">32
@"NSArray"16@0:8
v24@0:8@?<v@?@"NSArray"B>16
v32@0:8@16@?24
v32@0:8@"NSPredicate"16@?<v@?@"NSArray"B>24
v24@0:8@?<v@?B>16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@32@0:8@16B24B28
@24@0:8@16
v32@0:8@16Q24
d16@0:8
@"_KSTextReplacementCKStore"
@"_KSTextReplacementLegacyStore"
@"NSObject<_KSTextReplacementStoreProtocol>"
@"<_KSMigrationDelegate>"
B24@0:8^{USet=}16
^{USet=}24@0:8@16
^{USet=}16@0:8
q16@0:8
v32@0:8@?16Q24
@48@0:8@16@24@32@40
@40@0:8@16@24@32
v48@0:8@16@24Q32@?40
v56@0:8@16@24Q32@?40Q48
v40@0:8Q16@24@?32
v48@0:8Q16@24@?32Q40
v56@0:8@16Q24@32@?40Q48
@"CKContainer"
@"CKDatabase"
@"CKRecordZone"
@"_KSTextReplacementCoreDataStore"
@"_KSCloudKitManager"
@"_KSTextReplacementServerConnection"
v32@0:8@16@24
v28@0:8@16B24
@24@0:8Q16
@32@0:8@16Q24
@"NSManagedObjectContext"
@"NSManagedObjectModel"
@"NSPersistentStoreCoordinator"
v40@0:8@"NSArray"16@"NSArray"24@?<v@?B@"NSError">32
v24@0:8@?<v@?B@"NSError">16
@"NSXPCConnection"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@"NSDate"
@"_KSTextReplacementEntry"
@"NSData"
v24@0:8@"NSString"16
@"NSDate"16@0:8
v24@0:8@"NSDate"16
q48@0:8@16@24@32@40
q48@0:8@"NSManagedObjectContext"16@"NSManagedObject"24@"NSManagedObjectID"32@"NSPropertyDescription"40
B40@0:8@16@24@32
B32@0:8@16^@24
@48@0:8@16@24@32^B40
B28@0:8@16B24
B20@0:8B16
v48@0:8@16@24q32@40
v24@0:8q16
@"NSObject<OS_os_transaction>"
@"NSPersistentStore"
@"NSURL"
B20@0:8I16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@16@24@32@40
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@16@24@32
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v48@0:8@16@24@32@?40
@"_KSTRClient"
@"_KSTextReplacementManager"
@"APSConnection"
@"NSXPCListener"
@"_KSTextReplacementServer"
v32@0:8q16@24
@24@0:8q16
@28@0:8@16B24
q24@0:8@16
@32@0:8q16@24
@40@0:8q16@24@32
@"_KSTIUserDictionaryEntryValue"
@40@0:8@16Q24Q32
@"NSArray"
%s  Running activity %@, extended=%d
%s  Done running activity %@, extended=%d
%s  Checking-in activity %@
%s  >>> devices that need to upgraded: %@
%s  >>> The device migration state is: %@
%s  >>> using cloudkit store
%s  >>> using legacy store
%s  Should allow migration to cloudkit: %@
%s  User is not logged in, not migrating
%s  >>> can migrate device: %@
%s  scheduling migration
%s  >>> Number of entries received for migration from LegacyStore is: %@
%s  >>> switching to CK Store
%s  >>> checking account status
%s  >>> account is set up
%s  >>> no account, user must have logged out
%s  Account status: %@
%s  Error in getting account status: %@
%s  >>> creating record zone
%s  !!!ERROR: Could not save Record Zone %@: %@
%s  ERROR creating record: %@; %@
%s  >>> ERROR creating record: %@; %@
%s  >>> ERROR creating recordID: %@; %@
%s  already subsribed for zone change
%s  Creating subscription
%s  >>> Could not save recordName=%@; error=%@
%s  >>> modify operation errorCode: %@ description: %@
%s  >>> partial failure : %@
%s  >>> ERROR reaching the network
%s  >>> Record zone not found
%s  !!!ERROR failed to unarachive change token
%s  server change token updated: %@
%s  >>> ERROR for fetch records operation: %@
%s  CloudKit said our change token has expired!
%s  Could not fetch record changes: %@
%s  Completed fetching # records : %@, deleted records: %@
%s  Couldn't create recordID
%s  Couldn't create coredata store for ClouKit sync
%s  Not cloudkit server store available
%s  >>> Finished pulling remote entries for the first fetch
%s  >>> User has logged out of the account, removing local entries
%s  marked all local entries to be saved to cloud
%s  User is not logged in, not syncing
%s  no entries to push
%s  entries to Push: %@, deleted IDs: %@
%s  Pulling remote data
%s  >>> storing pulled records locally; added entries: %@, deleted: %@
%s  morecoming from cloudkit, pulling again
%s  >>> no CKRecord for TextreplacementEntry: %@
%s  >>> ERROR couldn't create recordID for entry: %@, cloudID: %@
%s  cloud migration status: %@
%s  not modifying entry as old and new are the same
%s  ERROR! Could not access coredata store, %@
%s  >>> !!!ERROR: failed to save records with error: %@
%s  not saving as it's most likely pulling a local change that was pushed up earlier
%s  not saving as the entry is older than or same as existing record, entryTime
%s  >>> entry is nil, returning
%s  ERROR! Failed to delete: %@
%s  >>> deleted %@ records
%s  Querying records failed with error : %@, exception %@
%s  error saving change token: %@
%s  couldn't load persistent store at url: %@, error: %@
%s  loaded persistent store at url: %@
%s  persistentstore loaded, requesting minimum uptime
%s  Ending minimum uptime
%s  importing sample shortcut
%s  already imported sample shortcut
%s  >>> finished importing sample shortcut
%s  Replying with error = %i
%s  Failed to save to coredata store
%s  ERROR!!! Failed to remove entrtries with error: %@
%s  Retiring store at %@
%s  Could not retire store at %@: %@
%s  file to merge does not exist: %@
%s  merged entries from db: %@, error: %@
%s  >>> persistentStoreCoordinatorStoresWillChange
%s  Suspending user dictionary due to impending account change.
%s  >>> persistentStoreCoordinatorStoresDidChange
%s  >>> current legacy store: %@
%s  Resuming user dictionary after account change.
%s  completed periodic sync task
%s  >>> Setup Assistance is running, not loading text replacements
%s  not cleanin up, waiting remaining minimum uptime: %@
%s  Cleaning up all resources
%s  TextReplacementServer accepting request now
%s  >>> Not removing entry: %@, as the replacement entry is not valid
%s  >>> the modified entry's unique ID should not be the same as prior, changing
%s  >>> adding entries: %@, removing entries %@
%s  >>> completed remove all TR entries
%s  running migration of legacy store
%s  >>> buddysetup did finish
%s  Client does not have read access
%s  >>> ERROR: invalid TR entry, error: %@
u2A@(#)PROGRAM:KeyboardServices  PROJECT:KeyboardServices-1
