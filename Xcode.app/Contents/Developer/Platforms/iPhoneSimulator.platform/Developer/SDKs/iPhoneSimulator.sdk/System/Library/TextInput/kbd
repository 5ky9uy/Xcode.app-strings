alloc
init
mainQueue
defaultManager
keyboardUserDirectory
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringWithFormat:
sharedAssetManager
sharedKeyboardInputManagerServer
sharedRemoteDataServer
sharedTypingAssertion
sharedInstance
sharedLexiconServer
sharedServiceWithMachName:
sharedAccessibilityServer
addOperationWithBlock:
stringWithUTF8String:
isEqualToString:
defaultCenter
postNotificationName:object:
mainRunLoop
release
sharedController
removeActivityObserver:
removeObserver:
setDelegate:
invalidate
dealloc
initWithMachServiceName:
_setQueue:
resume
appleKeyboardsInternalSettingsChanged:
addObserver:selector:name:object:
addActivityObserver:
reduceCacheToSize:
sharedLoader
resourceInputModes
dropResourcesExcludingInputModes:flushCache:
processIdentifier
setExportedObject:
serverInterface
setExportedInterface:
restResetTouches
setInvalidationHandler:
toState
prepareForInactivity
listener:shouldAcceptNewConnection:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
autorelease
retainCount
zone
hash
superclass
description
debugDescription
keyboardActivityDidTransition:
handleMemoryPressureLevel:excessMemoryInBytes:
_listener
valueForEntitlement:
boolValue
requestLabelForProactiveCandidateWithSlotID:completionHandler:
interfaceWithProtocol:
dispatchQueue
_dispatchQueue
allRenderers
countByEnumeratingWithState:objects:count:
accessibilityLabelForSlotID:
_xpcConnection
setBundleID:
requestLexiconFromBundlePath:completionHandler:
requestLexiconForRecentInputIdentifier:completionHandler:
requestRemovalOfLexiconForRecentInputIdentifier:
addEntryString:forRecentInputIdentifier:
bundleWithPath:
bundleIdentifier
infoDictionary
objectForKey:
mutableCopy
count
exchangeObjectAtIndex:withObjectAtIndex:
lexiconWithEntries:
validateBundlePath:
sharedTIContactManager
flatten
allTokensForString:
entryWithDocumentText:userInput:
addObject:
enumerateObjectsUsingBlock:
enumerateContactsUsingBlock:
objectAtIndex:
finishRequestWithEntries:completion:
getPhraseShortcutPairs:
getOnce:
identifierIsSystemIdentifier:
recentsFilePathForIdentifier:
recentInputAtPath:
removeItemAtPath:error:
currentConnection
auditToken
checkEntitlementForAddEntryStringWithAuditToken:
storeInput:forSystemIdentifier:atPath:
bundleID
_bundleID
searchResult
firstObject
dateSent
recipient
body
fromMe
setSearchResult:
_searchResult
cancel
cond
lock
isValid
search
unlock
arrayWithObjects:count:
setValid:
broadcast
searchAccounts:
accountValuesForKeys:completionBlock:
addObjectsFromArray:
searchMailWithSenderAddresses:
initWithCapacity:
initWithType:qualifier:expression:
currentCalendar
date
dateByAddingUnit:value:toDate:options:
initWithCriteria:allRequired:
searchCriterionForSenderAddresses:
findMessageData:matchingCriterion:options:delegate:
setSearch:
initializeSearchIfNecessary
outgoingMessages
wait
copy
setOutgoingMessages:
arrayByAddingObjectsFromArray:
search:didFindResults:
search:didFinishWithError:
nextOutgoingMessageBatch
_valid
_search
_cond
_outgoingMessages
UTF8String
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
resolveAssistantFrameworkClasses
requestMeCardWithCompletionHandler:
requestMeContactWithCompletionHandler:
presentDialogForType:withCompletionHandler:
dismissDialogWithCompletionHandler:
removeAllDynamicDictionariesWithCompletionHandler:
string:isExemptFromTextCheckerWithCompletionHandler:
requestTextCheckerLocalDictionaryWithCompletionHandler:
appendWordToTextCheckerLocalDictionary:
performTrainingForClient:withCompletionHandler:
shouldAcceptRequestForMeCardWithAuditToken:
dataWithContacts:error:
localizedStringForKey:
numberWithBool:
dictionaryWithObjects:forKeys:count:
removeAllDynamicDictionaries
clearDynamicResourcesAtPath:
sharedLearningAgent
handleRemovalOfLearnedModels
resetResponseKit
setAssertsObservers:
_looksLikeNumberInput
textCheckerExemptions
stringIsExemptFromChecker:
stringByAppendingPathComponent:
localDictionaryPath
dataWithContentsOfFile:
fileSystemRepresentation
bundleForClass:
localizations
preferredLanguages
preferredLocalizationsFromArray:forPreferences:
objectAtIndexedSubscript:
pathForResource:ofType:inDirectory:forLocalization:
dictionaryWithContentsOfFile:
localizedStringForKey:value:table:
sharedTrainer
_textCheckerExemptions
handleFailureInFunction:file:lineNumber:description:
sharedPreferences
setDictationIsEnabled:
defaultWorkspace
URLWithString:
openSensitiveURL:withOptions:error:
%{public}@
%s Couldn't create keyboard user directory: %@
__main_block_invoke
v8@?0
com.apple.notifyd.matching
AppleKeyboardsPreferencesChangedNotification
com.apple.purplebuddy.setupdone
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.TextInput
AppleKeyboardsInternalSettingsChangedNotification
%s Keyboard internal settings changed. Releasing input managers.
-[TIKeyboardInputManagerServer appleKeyboardsInternalSettingsChanged:]
%s Reduce cache to size=%lu
-[TIKeyboardInputManagerServer reduceCacheToSize:]
%s Establishing connection with PID %d
-[TIKeyboardInputManagerServer listener:shouldAcceptNewConnection:]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
com.apple.TextInput.accessibility
com.apple.accessibility.api
%s process %d tried to connect to the kbd accessibility server, but it was not entitled!
-[TIAccessibilityServer listener:shouldAcceptNewConnection:]
%s Allowing connection from pid %d to kbd accessibility server
dispatchQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_dispatchQueue
com.apple.TextInput.lexicon-server
CFBundlePackageType
XPC!
NSExtension
NSExtensionPointIdentifier
com.apple.keyboard-service
v32@?0@"NSString"8Q16^B24
v24@?0@"TIContact"8^B16
v16@?0@"NSArray"8
v16@?0@"TIContactCollection"8
bundleID
T@"NSString",C,N,V_bundleID
dateSent
T@"NSDate",R,C,N
recipient
T@"NSString",R,C,N
body
fromMe
TB,R,N
searchResult
T@"NSDictionary",&,N,V_searchResult
%@: Account query failed with error: %@
v24@?0@"NSArray"8@"NSError"16
%@: Mail search failed with error: %@
search
T@"MSSearch",&,N,V_search
cond
T@"NSCondition",R,N,V_cond
valid
TB,N,GisValid,V_valid
outgoingMessages
T@"NSArray",C,N,V_outgoingMessages
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
/BuildRoot/Library/Caches/com.apple.xbs/Sources/TextInput_Bundles_Sim/TextInput-1912.3/kbd/TIRemoteDataServer.m
<Unknown File>
Could not load AssistantServices.framework
AFPreferences
com.apple.TextInput.remote-data-server
com.apple.TextInput.rdt
-[TIRemoteDataServer listener:shouldAcceptNewConnection:]
%s Rejecting request for me card from PID %d
-[TIRemoteDataHandle requestMeCardWithCompletionHandler:]
v16@?0@"CNContact"8
-[TIRemoteDataHandle requestMeContactWithCompletionHandler:]
Required completion handler is missing
DICTATION_OPT_IN_TITLE
EXTENSION_OPT_IN_TITLE
DICTATION_OPT_IN_MESSAGE
EXTENSION_OPT_IN_MESSAGE
DICTATION_OPT_IN_ENABLE
EXTENSION_OPT_IN_ADD
DICTATION_OPT_IN_ABOUT
DICTATION_OPT_IN_NOT_NOW
SBUserNotificationAllowMenuButtonDismissal
SBUserNotificationForcesModalAlertAppearance
SBUserNotificationDisplayActionButtonOnLockScreen
DismissOnLock
%s Received request to delete all learned keyboard dictionaries.
-[TIRemoteDataHandle removeAllDynamicDictionariesWithCompletionHandler:]
%s Responding with isExempt = %s for string %@
-[TIRemoteDataHandle string:isExemptFromTextCheckerWithCompletionHandler:]
LocalDictionary
%s Reading UITextChecker local dictionary
-[TIRemoteDataHandle requestTextCheckerLocalDictionaryWithCompletionHandler:]
%s Appending %@ to UITextChecker local dictionary
-[TIRemoteDataHandle appendWordToTextCheckerLocalDictionary:]
AssistantSettings
strings
textCheckerExemptions
T@"TITextCheckerExemptions",R,N,V_textCheckerExemptions
Unexpected notification response received
void _HandleUserNotificationCallBack(CFUserNotificationRef, CFOptionFlags)
<Unknown Function>
LSApplicationWorkspace
prefs:root=General&path=Keyboard/KEYBOARDS/AddNewKeyboard
Unable to launch Keyboard Settings (error: %@)
void _DismissUserNotification()
TIKeyboardInputManagerServer
NSXPCListenerDelegate
NSObject
TIKeyboardActivityObserving
TIAccessibilityInterface
TIAccessibilityServer
TIAccessibilityHandler
TILexiconRequestHandler
TILexiconServer
TILexiconDataHandler
TIMailOutgoingMessage
TILinguisticDataSourceMessage
TIMailDataSource
MSSearchDelegate
TILinguisticDataSource
TIRemoteDataProtocol
TIAddressBookMeCard
TIAssistantSettings
TIKeyboardInputManagerDynamicDictionarySupport
TITextCheckerSupport
TIResponseKitTrainer
TIRemoteDataServer
TIRemoteDataHandle
@16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"TIKeyboardActivityContext"16
v32@0:8Q16Q24
v16@0:8
v24@0:8Q16
@"NSXPCListener"
v28@0:8I16@?20
v28@0:8I16@?<v@?@"NSString">20
@"NSObject<OS_dispatch_queue>"
v32@0:8@16@?24
v32@0:8@"NSString"16@?<v@?@"TILexicon">24
v32@0:8@"NSString"16@?<v@?@"TIRecentInputs">24
v24@0:8@"NSString"16
v32@0:8@16@24
v32@0:8@"NSString"16@"NSString"24
B48@0:8{?=[8I]}16
@"NSString"
@"NSDate"16@0:8
@"NSDictionary"
@24@0:8@16
B32@0:8@"MSSearch"16@"NSArray"24
v32@0:8@"MSSearch"16@"NSError"24
@"NSArray"16@0:8
v20@0:8B16
@"MSSearch"
@"NSCondition"
@"NSArray"
v24@0:8@?16
v24@0:8@?<v@?@"NSData">16
v24@0:8@?<v@?@"CNContact">16
v32@0:8q16@?24
v32@0:8q16@?<v@?q>24
v24@0:8@?<v@?>16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSString"16@?<v@?B>24
v32@0:8@"NSString"16@?<v@?@"NSError">24
@"TITextCheckerExemptions"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
    <dict>
        <key>CFBundleIdentifier</key>
        <string>com.apple.kbd</string>
    </dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.kbd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.MobileAsset.LinguisticData</key>
<true/>
<key>com.apple.MobileAsset.TextInput.SpellChecker</key>
<true/>
<key>com.apple.Pasteboard.originating-bundle-id-query</key>
<true/>
<key>com.apple.assistant.settings</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.people</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.TextInput</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
<string>CloudDocuments</string>
</array>
<key>com.apple.developer.ubiquity-container-identifiers</key>
<array>
<string>com.apple.TextInput</string>
</array>
<key>com.apple.developer.ubiquity-kvstore-identifier</key>
<string>com.apple.TextInput</string>
<key>com.apple.duet.appPrediction.inspection</key>
<true/>
<key>com.apple.duet.expertcenter.consumer</key>
<true/>
<key>com.apple.mobilemail.mailservices</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.calendar.allow-suggestions</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.dprivacyd.allow</key>
<true/>
<key>com.apple.private.suggestions</key>
<true/>
<key>com.apple.private.suggestions.contacts</key>
<true/>
<key>com.apple.private.suggestions.events</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceUbiquity</string>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceCalendar</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.cloudd</string>
<string>com.apple.apsd</string>
<string>com.apple.suggestd.contacts</string>
<string>com.apple.suggestd.events</string>
<string>com.apple.pasteboard.pasted</string>
</array>
<key>com.apple.springboard.launchapplications</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.setTypingActive</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.TextInput</string>
</array>
<key>platform-application</key>
<true/>
<key>vm-pressure-level</key>
<true/>
</dict>
</plist>
