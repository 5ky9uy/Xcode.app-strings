@(#)PROGRAM:iCloudQuotaDaemon  PROJECT:iCloudQuota-1
alloc
initWithCurrentConditions
init
class
isDeviceStorageAlmostFull
setDeviceStorageAlmostFull:
isPhotosCloudEnabled
setPhotosCloudEnabled:
isPhotosOptimizeEnabled
setPhotosOptimizeEnabled:
photosLibrarySize
setPhotosLibrarySize:
isSimulatedDeviceStorageAlmostFull
isKindOfClass:
objectForKey:
longLongValue
useHysteresisForDeviceStorageAlmostFull
setUseHysteresisForDeviceStorageAlmostFull:
sharedDaemonOfferManager
simulatedPhotosLibrarySize
date
timeIntervalSinceNow
numberWithDouble:
getPhotosLibrarySizeWithCompletion:
getPhotosLibraryUploadSizeWithCompletion:
sharedPhotoLibrary
getPhotoCount:videoCount:
numberWithUnsignedLong:
sharedInstance
stringWithFormat:
objectForKeyedSubscript:
getLibrarySizes:
setSimulatedDeviceStorageAlmostFull:
persistedObject
_cachedQuotaAvailable
retrievalDate
compare:
currentConditions
hasPhotosCloudEverBeenEnabled
photosLibraryUploadSize
photosVideosCount
isDeviceStorageNearLowButNotLow
isCachedCloudQuotaAlmostFullOrFull
copyWithZone:
.cxx_destruct
_deviceStorageAlmostFull
_photosCloudEnabled
_photosOptimizeEnabled
_photosLibrarySize
setServerDict:
linkForButtonIndex
numberWithInteger:
setObject:forKey:
removeObjectForKey:
setDefaultButtonIndex:
setLink:forButtonIndex:
count
objectAtIndexedSubscript:
setLink:forButtonIndex:defaultButton:
setTitle:
setMessage:
_setLinks:defaultIndex:
initWithServerDictionary:
linkForButtonIndex:
serverDict
title
message
lockScreenTitle
setLockScreenTitle:
lockScreenMessage
setLockScreenMessage:
disableLockScreenAlert
setDisableLockScreenAlert:
defaultButtonIndex
setLinkForButtonIndex:
_serverDict
_disableLockScreenAlert
_title
_message
_lockScreenTitle
_lockScreenMessage
_defaultButtonIndex
_linkForButtonIndex
initWithCapacity:
countByEnumeratingWithState:objects:count:
addObject:
copy
boolValue
isEqualToString:
numberWithInt:
dictionaryWithObjects:forKeys:count:
arrayWithObjects:count:
numberWithLong:
daemonOfferStubsDictionarySample
defaultSessionConfiguration
initWithIdentifier:
set_appleIDContext:
sessionWithConfiguration:
daemonBuddyOfferDictionaryForAccount:completion:
isValidForAccount:
isExpired
notificationID
_persistenceDictionary
length
_postDaemonOfferChangedDueToPushDarwinNotification
_postFollowupForDaemonOffer:completion:
_fetchDaemonOfferForAccount:stub:notificationID:completion:
_reconsiderOffersForAccount:isForBuddy:choiceHandler:completion:
_processPushNotificationDictionary:completion:
aa_primaryAppleAccount
identifier
dismissAlertsWithNotificationID:
clearPersistedObject
respondsToSelector:
expirationDate
_fetchDaemonOfferStubsForAccount:completion:
lowercaseString
ckBackupDeviceID
stringValue
aa_personID
isEqual:
_sanitizedNotificationDictionary:account:
_addSampleAlert
shouldShowForDaemonOffer:
_showDaemonAlertForOffer:notificationDictionary:store:account:completion:
_respondWithTeardownAcknowledgementForNotificationDictionary:store:account:completion:
propertiesForDataclass:
URLWithString:
aa_addBasicAuthorizationHeaderWithAccount:preferUsingPassword:
ak_addClientInfoHeader
systemTimeZone
abbreviation
setValue:forHTTPHeaderField:
ak_addCountryHeader
setHTTPMethod:
dataWithJSONObject:options:error:
setHTTPBody:
offerId
conditionsWhenChosen
_useFetchOffersDataDirectly
serverDictionary
URLForAccount:quotaKey:
requestWithURL:cachePolicy:timeoutInterval:
mutableCopy
_addEntriesToPostDictionary:forStub:
daemonOfferSource
_attemptSetRequest:toPostWithJSONDict:
_addCommonHeadersToRequest:account:
allHTTPHeaderFields
HTTPBody
initWithData:encoding:
JSONObjectWithData:options:error:
dataTaskWithRequest:completionHandler:
resume
isBuddyOffer
_initWithAccount:serverDictionary:
setNotificationID:
persistWithCompletion:
_placeholderOfferForAccount:isForBuddy:error:
_fetchDictionaryForAccount:quotaKey:stub:notificationID:completion:
_processedServerDictionary:
_initWithAccount:error:
arrayWithCapacity:
dismissAlert
level
alertSpecification
initWithDaemonOffer:
showAlertWithCompletion:
aa_altDSID
clearFollowupsWithCompletion:
_teardownCachedOffer
_teardownCachedBuddyOffer
initWithDictionary:
chooseBuddyStub
chooseStub
_daemonOfferStubsDictionaryForAccount:completion:
_postOfferType:isForBuddy:
chooseBuddyStubForOfferType:
chooseStubForOfferType:
_teardownCachedOffers
numberWithLongLong:
daemonOfferDictionaryForAccount:options:completion:
processPushNotificationDictionary:completion:
teardownOffersForAccount:completion:
reconsiderOffersWithCompletion:
_pushNotificationDictionary
postOfferType:
postBuddyOfferType:
forcePostFollowup
teardownCachedOffer
teardownCachedBuddyOffer
teardownCachedOffers
isBuddyOfferEnabled
setBuddyOfferEnabled:
setSimulatedPhotosLibrarySize:
_sharedURLSession
containerWithIdentifier:
fetchCurrentDeviceIDWithCompletionHandler:
criteria
setConditionsWhenChosen:
_conditionsWhenChosen
integerValue
serverStubs
_chooseStubFromServerStubs:conditions:
buddyStubs
_initServerStubsFromServerDictionary
setServerDictionary:
sortedArrayWithOptions:usingComparator:
_isValidServerStubs:key:
sortedServerStubs:
enumerateObjectsUsingBlock:
isSatisfiedByConditions:
persistenceKey
chooseStubForConditions:
chooseBuddyStubForConditions:
_serverStubs
_buddyStubs
_chooseStubFromServerStubs:offerType:
defaultWorkspace
openSensitiveURL:withOptions:
linkWithText:options:action:parameters:
initWithText:options:action:parameters:
initWithText:action:parameters:
debugDescription
text
options
action
parameters
performActionWithOptions:
performAction:parameters:options:
linkWithText:action:parameters:
performAction
_text
_options
_action
_parameters
_initSubclassFromServerDictionary
_mutablePersistenceDictionary
internalAlertSpecification
setInternalAlertSpecification:
internalFollowupSpecification
setInternalFollowupSpecification:
_notificationID
_internalAlertSpecification
_internalFollowupSpecification
containsString:
setWithArray:
componentsSeparatedByString:
hasPrefix:
stringFromByteCount:countStyle:
currentLocale
setLocale:
setNumberStyle:
setUsesGroupingSeparator:
setMaximumFractionDigits:
stringFromNumber:
substitutionForPlaceholderKey:
setObject:forKeyedSubscript:
placeholderExistsInString:
defaultPlaceholderKeys
placeholderKeysInString:fromKeys:
substitutionsForPlaceholderKeys:
stringWithPlaceholderFormat:substitutions:
appendString:
substringFromIndex:
followupSpecification
alertSpecificationForAlertKey:
stringWithPlaceholderFormat:
alertSpecificationDictionarySampleForLevel:
setForAccountGroup:
errorWithDomain:code:userInfo:
alertSpecificationSampleForLevel:
_mutablePlaceholderPersistanceDictionary
setLinks:
setNoteTitle:
setNoteMessage:
setNoteActivateLink:
setNoteDismissLink:
clearFollowupWithController:completion:
postFollowupWithController:
postFollowupWithController:completion:
links
noteTitle
noteMessage
noteActivateLink
noteDismissLink
noteClearLink
setNoteClearLink:
isForAccountGroup
_forAccountGroup
_links
_noteTitle
_noteMessage
_noteActivateLink
_noteDismissLink
_noteClearLink
_placeholderPersistenceDictionary
persistenceDomain
callbackInterval
dateByAddingTimeInterval:
accountAltDSID
doubleValue
dateWithTimeIntervalSinceReferenceDate:
defaultCallbackInterval
setRetrievalDate:
_callbackIntervalFromServerObject:
setCallbackInterval:
setAccountAltDSID:
setFailedToFetchFromServer:
domain
code
localizedDescription
setFailureDetails:
numberWithBool:
_placeholderObject
clearPersistedObjectWithCompletion:
persistObject
failedToFetchFromServer
failureDetails
_failedToFetchFromServer
_retrievalDate
_callbackInterval
_accountAltDSID
_serverDictionary
_failureDetails
uppercaseString
rangeOfString:options:range:
substringWithRange:
firstObject
addObjectsFromArray:
setName:
dealloc
lock
daemonOffer
unlock
dictionary
showOnlyInSpringboard
handleActionsBeforeCallingCompletionHandler
_handleLink:
setShowOnlyInSpringboard:
setHandleActionsBeforeCallingCompletionHandler:
_alertLock
_alertState
_cfAlert
_alertSema
_alertQueue
_showOnlyInSpringboard
_handleActionsBeforeCallingCompletionHandler
_daemonOffer
enumerateKeysAndObjectsUsingBlock:
allKeys
Unable to get user volume status: %{public}s
Device storage nearLowButNotLow:%{public}@; desired:%{public}@
unable to get disk usage from MobileGestalt
disk usage dict: %@
user volume is eating into the reserve -- too low for offers
Device storage adjusting for hysteresis (between nearLow and desired)
Device storage total data available: %llu
Volume status should have had desired flag set -- compensating
photosLibrarySize took %@ seconds
photosLibraryUploadSize took %@ seconds
photosVideosCount took %@ seconds
Checking user volume status flags 0x%lx
no alertInfo provided
alertInfo: expected NSDictionary, got %@
teardown offers related to primary account %@ due to user logout
teardown for non-primary account %@ - ignoring
using cached offer stubs - expires %@
_processPushNotificationDictionary: %@
push notification with bad event %@
ignoring push (CKHardwareID:%@ does not match local CKHardwareID:%@)
push targeted to this device only
push notification with bad dsid of class %@
dsid mismatch: ignoring
handling push event %@
push notification with bad notificationId %@
push event (alert)
showing alert
skipping alert
fetch error %@
push event (dismiss)
push event (teardown)
push notification with unexpected event %@ (ignored)
missing quota key %@ for account %@
invalid URL string %@ for quota key %@ account %@
Could not convert message body to JSON. Error: %@
Body: %@
request: stub missing offerId
request: missing conditions when stub was chosen; using live conditions
_fetchDictionaryForAccount:%@ quotaKey:%@ stub:%@ notificationID:%@
fetchOffer(s) with postDict %@
request: %@ headers: %@ body: %@ body (as string): %@
sending request for latest offer
error parsing fetched offer: %@
WARNING: both stub and notificationID are nil -- attempting blind refresh
adding missing buddyOffer flag after refresh offer details
Finished persisting %{public}@offer; expires on %@
error %{public}@ occurred fetching %{public}@offer -- persisting placeholder
Finished persisting placeholder %{public}@offer; expires on %@
fetched local sample offer
Finished persisting local offer stubs; expires on %@
Unable to get local offer stubs; dropping through to server stubs
fetched offers:
Finished persisting offer stubs; expires on %@
error %{public}@ occurred fetching offer stubs -- persisting placeholder
Finished persisting placeholder stubs; expires on %@
Unexpected server dictionary of class %{public}@
Unexpected buddy offer of class %{public}@
showing alert for daemonOffer %@
Skipping alert from daemon offer level %@ alertSpecification %@
Showing alert from daemon with offer level %@ alertSpecification %@
Daemon alert completed with action %@ parameters %@
no buttonId, skipping teardown ack
posting push received darwin notification
_respondWithTeardownAcknowledgementForNotificationDictionary:%@ store:%@ account:%@
teardown ack - unable to send; account:%@ dict:%@
teardown ack - failed to create request to URL %@
teardown ack request: %@ headers: %@ body: %@ body (as string): %@
Unable to get offer stubs; error: %@
Error: Unable to create offer stubs from dict %@
Persisting placeholder & clearing any existing followups
No stub matched for %@ -- persisting placeholder
Unexpected error %@
Error: Unexpected nil daemonOffer
Error: Requested buddy offer but got non-buddy offer!
Error: Requested offer but got buddy offer!
%@ request completed; %@
data: %@
response: %@
error: %@
Error fetching CloudKit backup container device id: %{public}@
_ICQActionFromString - illegal action %@
%{public}@ is missing
invalid %{public}@ of class %@
invalid %{public}@[%ld] of class %@
choose stub: none present
checking criteria for offer type %{public}@ type %{public}@ criteria
%{public}@
choose stub: none with matching criteria found
choose offer type (%@):
skipping server offer type %@ (%@) because it doesn't match requested %@
choose offer type (%@): none found
choose offer type: none present
attempt to open URL %@ of class %@
link - presenting purchase flow in Settings
link - presenting manage storage in Settings
link - offer rejected
link - opening URL %@
ICQLink: performAction: %@ not handled since it requires context
ICQLink: performAction: %@ not handled
Error: buddy offer object of incorrect class -- will persist at the wrong key
expected inlineAlertInfo to be NSArray<NSDictionary *> but found %@
no substitution for placeholder %@%@
substituting for placeholder %{public}@ = %@
missing substitution for substring "%{public}@"
no followupInfo provided
followupInfo: expected NSDictionary, got %@
_ICQOfferTypeForString - illegal offer type %@
_ICQOfferTypeForServerString - illegal server offer type %@
bad retrieval date %@
bad callbackInterval %@
persisted offer missing server dict
bad server dict %@
persisted offer(s) bad %@: %@
expected NSString from key %@ but got %@
expected NSDictionary from key %@ but got %@
unexpected server action %@
link overrides action in text:%@ action:%@ params:%@ link:%@
link: expected dict: invalid server message parameter:%@
Invalid link: %@
links: expected array: invalid server message parameters:%@
format is "%@"; button may not contain more than one "%%@"
expected message; bad plist object:%@
attempt to create alert with nil daemonOffer
attempt to create alert for invalid daemonOffer %@
alert already shown; skipping
alert not shown: no alert specification
showing alert for daemonOffer
dismissing alert for daemonOffer %@
alert not showing; skipping dismiss
waiting for alert %@ to dismiss
finished waiting for alert %@ to dismiss
remember alert for notification %@
dismissing old alert for notification %@
forget alert for notification %@
Could not find alert for notification %@, dismissing unlabeled alert
dismissing alert for notification %@
Could not find alert for notification %@
dismissing all alerts
%{public}@%{public}@
event details: nil
event details: unexpected class %@
offerType: %{public}@
type: %{public}@
notificationInfo: present %@
notificationInfo: missing
iTunesAccountExists: %d
iTunesAccountExists: unexpected class %@
callbackInterval: %g
callbackInterval: unexpected class %@
showAlert: %d
showAlert: unexpected class %@
alertInfo: present
alertInfo: missing
showBanner: %d
showBanner: unexpected class %@
appBannerInfo: present
appBannerInfo: missing
appContextInfo: present
appContextInfo: missing
followUpInfo: present
followUpInfo: missing
container: %@
criteria: missing, substituting empty criteria (always succeeds)
criteria: expected NSDictionary, got %@
criterion: %@: %@ not convertible to long long
criterion: photos library size unknown
criterion: %{public}@: %lld %{public}@ %lld
unexpected criterion key %@
criterion: %{public}@ matches %{public}@
criterion: %{public}@ doesn't match %{public}@
criterion: expected bool value, got %@
DiskUsage
v24@?0@"NSNumber"8@"NSError"16
v16@?0@"NSDictionary"8
isDeviceStorageAlmostFull
TB,R,N
isPhotosCloudEnabled
hasPhotosCloudEverBeenEnabled
isPhotosOptimizeEnabled
photosLibrarySize
T@"NSNumber",R,N
photosLibraryUploadSize
photosVideosCount
simulatedDeviceStorageAlmostFull
TB,N,GisSimulatedDeviceStorageAlmostFull
useHysteresisForDeviceStorageAlmostFull
TB,N
isDeviceStorageNearLowButNotLow
isCachedCloudQuotaAlmostFullOrFull
deviceStorageAlmostFull
TB,N,GisDeviceStorageAlmostFull,V_deviceStorageAlmostFull
photosCloudEnabled
TB,N,GisPhotosCloudEnabled,V_photosCloudEnabled
photosOptimizeEnabled
TB,N,GisPhotosOptimizeEnabled,V_photosOptimizeEnabled
T@"NSNumber",C,N,V_photosLibrarySize
/private/var
PLIsCPLDataclassEnabled
/System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
PLCPLHasBeenEnabledForCurrentAccount
PLCloudPhotoLibraryKeepOriginalsIsEnabled
PLPhotoLibrary
Unable to find class %s
PLGatekeeperClient
/System/Library/PrivateFrameworks/AssetsLibraryServices.framework/AssetsLibraryServices
alertInfo
title
mesg
actions
Actions
linkForButtonIndex
T@"NSMutableDictionary",&,V_linkForButtonIndex
serverDict
T@"NSDictionary",&,N
T@"NSString",&,N,V_title
message
T@"NSString",&,N,V_message
lockScreenTitle
T@"NSString",&,N,V_lockScreenTitle
lockScreenMessage
T@"NSString",&,N,V_lockScreenMessage
disableLockScreenAlert
TB,N,V_disableLockScreenAlert
defaultButtonIndex
Tq,N,V_defaultButtonIndex
btnDefault
BtnDefault
btnAction
BtnAction
CHANGE_STORAGE_PLAN
MANAGE_STORAGE
deviceOffers
needsUpgrade
offerType
EnableICPL
followUpEnabled
hasUIFlow
appBannerInfo
appId
com.apple.mobileslideshow
format
iPhone storage is almost full. Free up space by using iCloud Photo Library. %@
params
display
Learn More >
action
ENABLE_ICPL
actParams
offerId
RW5hYmxlSUNQTA==
sbAlertEnabled
offerInfo
actionInfo
actionBtn
btnTitle
Use iCloud Photo Library
btnId
enableICPLAction
More Space, for More Photos
icloudApps
backBtn
Cancel
cancelEnableICPLAction
CANCEL_AND_CLOSE_ACTION
header
Free up space and take more photos by using iCloud Photo Library.
Your photos and videos will be safely stored in iCloud, and only smaller versions will be kept on your iPhone.
footer
Uploads to and downloads from iCloud Photo Library will require an Internet connection.
successInfo
Done
exitCloseAction
EXIT_AND_CLOSE_ACTION
iCloud Photo Library has been turned on
Your photos and videos will start uploading when you're connected to Wi-Fi
failureInfo
Try Later
errorCloseAction
Unble to enable iCloud Photo Library
We were not able to enable iCloud Photo Library
priority
followUpInfo
lockMessage
iPhone Storage Almost Full
settingsTitle
Free up space and take more photos by using iCloud Photo Library. Your photos and videos will be safely stored in iCloud, and only smaller versions will be kept on your iPhone.
lockTitle
Use iCloud Photo Libary
dlUpgrade
Not Now
DISMISS_AND_CLOSE_ACTION
dlCancel
criteria
iCPLEnabled
minPhotoLibraryInBytes
maxPhotoLibraryInBytes
Get more storage, and keep all your photos safely stored in iCloud
With 50 GB of iCloud storage and iCloud Photo Library, you can keep all your photos and videos safely stored in iCloud and free up space on your iPhone too.
UPGRADE_ENABLE_ICPL
planDetails
productType
Software
pricingParameters
STDQ
salableAdamId
916860110
prsId
price
planSize
appleId
sj_ic3_15@icloud.com
pricePerYear
$0.99 per month.
totalStorage
UpgradeEnableICPL
iPhone storage is almost full. Get more storage, and keep all your photos safely stored in iCloud. %@
VXBncmFkZUVuYWJsZUlDUEw=
Buy 50 GB for $0.99/mo.
buyEnableICPLAction
cancelCloseAction
You will be charged $0.99 right now and each month. You can cancel at any time. Contact Apple within 15 days for a refund. Partial refunds are available where required.
You now have 50GB of total iCloud storage
3068
iCloud Photo Library Will Be Updated
warnCloseAction
More Space Will be available for More Photos
You can start taking more photos shortly by using iCloud Photo Library
Unable to upgrade and enable iCloud Photo Library
Unable to free up space to take more photos
OptimizeICPL
iPhone storage is almost full. Free up space by using original photos in iCloud only. %@
Optimize Now >
SHOW_INLINE_ALERT
alertKey
optimizeICPL
T3B0aW1pemVJQ1BM
inlineAlertInfo
Optimize iPhone Storage
Free up space by keeping your original photos in iCloud, and smaller versions on you iPhone
Optimize
ENABLE_OPTIMIZE_ICPL
optimize
cancel
Free up space by keeping your original photos in iCloud only
Free up space on your iPhone by keeping your original photos and videos in iCloud only
buddyOffers
YnVkZHlVcGdyYWRlV2l0aElDUEw=
With 50 GB of iCloud storage, you can keep all your photos and videos safely in iCloud Photo Library and free up space on your iPhone.
< Back
backCloseAction
buddyBuyEnableICPLAction
notNowBtn
Continue
iCloud Photo Library is on
iCloud Photo Library Will Be Enabled
You will have 50 GB of total iCloud storage
Unable to enable iCloud Photo Library
Failed to enable iCloud Photo Library
YnVkZHlVcGdyYWRlRHJpdmU=
Your iPhone has been backing up in iCloud each night but your iCloud storage is now almost full.
With 50 GB of iCloud storage, all your important things like photos, videos, documents and apps can keep backing up automatically.
Keep your iPhone backed up
com.apple.iCloudDriveApp
buyId
iCloud Storage Upgraded
You now have 50 GB of total iCloud storage
iCloud Storage Will Be Upgraded
Unable to upgrade iCloud Storage
Failed to upgrade iCloud Storage
UpgradeStorage
quotaInfo
totalQuota
totalAvailable
totalUsed
callbackInterval
ICQDaemonOfferChangedDueToPushDarwinNotification
bundleIdentifier
event
hardwareId
CKHardwareID
dsId
altDSID
notificationId
debugAlert
alert
dismiss
teardown
com.apple.cloud.quota
_ICQPushInternal
_ICQSimulatedDeviceStorageAlmostFull
_ICQUseHysteresisForDeviceStorageAlmostFull
com.apple.Dataclass.Quota
_ICQSimulatedPhotosLibrarySize
_ICQUseFetchOffersDataDirectly
_ICQBuddyOfferEnable
_ICQOfferSource
server-sample
local-sample
quotaFetchOffersURL
quotaRefreshOfferDetailsURL
quotaAckEventURL
ICQFetchOfferURLSession
v8@?0
com.apple.purplebuddy
v24@?0@"ICQDaemonOffer"8@"NSError"16
v24@?0@"ICQDaemonOfferStubs"8@"NSError"16
X-MMe-Timezone
UniqueDeviceID
X-Mme-Device-Id
POST
application/json
Content-Type
true
false
optimizeEnabled
unable to get URL for account:%@ quotaKey:%@
quota_alert
ck_hw_id
dsid
X-Apple-All-Device-Offers
X-Apple-InvoiceEvent-Simulate
AlmostFull
X-Apple-QuotaEvent-Simulate
useWlanTerm
unable to convert post dict to JSON
fetch offer
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
buddy 
v24@?0@"NSDictionary"8@"NSError"16
buttonId
v24@?0q8@"NSDictionary"16
teardown ack
v16@?0@"ICQDaemonOffer"8
malformed daemon offer stubs
buddy offer
offer
@"ICQDaemonOfferStub"16@?0@"ICQDaemonOfferStubs"8
ckBackupDeviceID
T@"NSString",R,N
buddyOfferEnabled
TB,N,GisBuddyOfferEnabled
simulatedPhotosLibrarySize
T@"NSNumber",&,N
wapi
got response
no response
com.apple.backup.ios
v24@?0@"NSString"8@"NSError"16
CKContainer
/System/Library/PrivateFrameworks/CloudKit.framework/CloudKit
buddyOffer
TB,R,N,GisBuddyOffer
T@"ICQDaemonOfferCriteria",R,N
conditionsWhenChosen
T@"ICQDaemonOfferConditions",C,N,V_conditionsWhenChosen
serverDictionary
T@"NSDictionary",R,N
URLQueryParameters
ServerLinkId
ICQActionNone
ICQActionDismiss
ICQActionRejectOffer
ICQActionPresentPurchaseFlow
ICQActionPresentManageStorage
ICQActionPurchaseBuy
ICQActionPurchaseComplete
ICQActionOpenURL
ICQActionCancel
ICQActionShowInlineAlert
ICQActionOpenPaymentUpdate
ICQActionCloudUpgrade
ICQActionPhotosOptimize
ICQActionPhotosCloudEnable
ICQActionPhotosCloudUpgradeEnable
_ICQCachedOfferStubsInternal
q24@?0@8@16
v32@?0@8Q16^B24
type
serverStubs
T@"NSArray",R,N,V_serverStubs
buddyStubs
T@"NSArray",R,N,V_buddyStubs
prefs:root=CASTLE&path=STORAGE_AND_BACKUP/STORAGE_UPGRADE
prefs:root=CASTLE&path=STORAGE_AND_BACKUP/MANAGE_STORAGE
%@: "%@" options:%@ action:%@ parameters:%@
prefs:root=APPLE_ACCOUNT&path=PAYMENT_AND_SHIPPING/PRIMARY_PAYMENT
text
T@"NSString",R,C,N,V_text
options
Tq,R,N,V_options
Tq,R,N,V_action
parameters
T@"NSDictionary",R,C,N,V_parameters
_ICQCachedOfferInternal
internalAlertSpecification
T@"_ICQAlertSpecification",&,N,V_internalAlertSpecification
internalFollowupSpecification
T@"_ICQFollowupSpecification",&,N,V_internalFollowupSpecification
level
Tq,R,N
notificationID
T@"NSString",&,N,V_notificationID
PhotoLibrarySize
PhotoLibraryUploadSize
PhotosVideosCount
%@%@
alertSpecification
T@"_ICQAlertSpecification",R,N
followupSpecification
T@"_ICQFollowupSpecification",R,N
followupInfo
com.apple.icloud.quota
Add iCloud Storage
You are using 4.6 GB of your 5 GB iCloud storage. Add more storage to keep using iCloud Photo Library, iCloud Mail, and Backup.
Manage Storage
iCloud Storage is Full
iCloud Photo Library, iCloud Mail, and Backup are no longer updating. Add more storage to keep using iCloud.
[ENG: LOCAL SAMPLE UI]
btnActParams
buyQueryParam
&autoSelectPlan=true&minReqdSize=1000000
upgrade
Upgrade Storage
DISMISS_ALERT
cancelled
alertAckAction
dataClass
Quota
SAMPLE ALERT: Upgrade your storage to keep using iCloud Mail, iCloud Drive, and Backup.
iCloud Storage is Almost Full
_ICQCachedBuddyOfferInternal
isBuddyOffer
lockMesg
links
T@"NSArray",&,N,V_links
noteTitle
T@"NSString",&,N,V_noteTitle
noteMessage
T@"NSString",&,N,V_noteMessage
noteActivateLink
T@"ICQLink",&,N,V_noteActivateLink
noteDismissLink
T@"ICQLink",&,N,V_noteDismissLink
noteClearLink
T@"ICQLink",&,N,V_noteClearLink
forAccountGroup
TB,N,GisForAccountGroup,V_forAccountGroup
ICQOfferTypeUnknown
ICQOfferTypeCloudStorageUpgrade
ICQOfferTypePhotosOptimizeEnable
ICQOfferTypePhotosCloudEnable
ICQOfferTypePhotosCloudUpgradeEnable
ICQOfferTypeUpdateBillingInfo
ICQOfferTypeBuddyCloudStorageUpgrade
ICQOfferTypeBuddyPhotosCloudUpgradeEnable
Invoice
buddyUpgradeDrive
buddyUpgradeWithICPL
retrievalDate
failedToFetchFromServer
failureDetails
ErrorDomain
ErrorCode
ErrorDescription
None
persistenceDomain
persistenceKey
defaultCallbackInterval
Td,R,N
_mutablePlaceholderPersistanceDictionary
T@"NSMutableDictionary",R,N
T@"NSDate",&,N,V_retrievalDate
Td,N,V_callbackInterval
expirationDate
T@"NSDate",R,N
expired
TB,R,N,GisExpired
accountAltDSID
T@"NSString",&,N,V_accountAltDSID
T@"NSDictionary",&,N,V_serverDictionary
TB,N,V_failedToFetchFromServer
T@"NSDictionary",&,N,V_failureDetails
_mutablePersistenceDictionary
_cachedQuotaAvailable
_persistenceDictionary
_placeholderPersistenceDictionary
FALSE
TRUE
OPEN_EXT_LINK
UPGRADE_ICLOUD_STORAGE
OPEN_PAYMENT_UPDATE
DISP_STORAGE_UPGRADE
buyQueryParams
linkURL
link
BtnTitle
BtnActParams
BtnId
com.apple.mobilemail
com.apple.cloud.mail
com.apple.cloud.docs
com.apple.cloud.photos
com.apple.__mobilebackup__
com.apple.cloud.backup
com.apple.icloud.quota.ICQ-Adopt
__WILDCARD__
ICQDaemonAlertLock
ICQDaemonAlertQueue
com.apple.springboard
daemonOffer
T@"ICQDaemonOffer",R,N,V_daemonOffer
showOnlyInSpringboard
TB,N,V_showOnlyInSpringboard
handleActionsBeforeCallingCompletionHandler
TB,N,V_handleActionsBeforeCallingCompletionHandler
v32@?0@8@16^B24
com.apple.iCloudQuota
core
missing
notificationInfo
iTunesAccountExists
showAlert
showBanner
appContextInfo
container
appContextInfo: appId:%@ offerInfo: 
app-independent offerInfo: 
planDetails: 
quotaInfo: 
Insufficient
Full
Device
Billing
fail
ICQDaemonOfferConditions
NSCopying
_ICQAlertSpecification
ICQDebugging
ICQDaemonOfferManager
ICQDaemonOfferStub
ICQDaemonOfferStubs
ICQTestingStubs
ICQLink
ICQDaemonOffer
Internal
Debugging
ICQDaemonBuddyOffer
_ICQFollowupSpecification
ICQDaemonPersisted
Convenience
ICQDaemonAlert
ICQDaemonOfferCriteria
@16@0:8
B16@0:8
v24@0:8@?16
v20@0:8B16
@24@0:8^{_NSZone=}16
v16@0:8
v24@0:8@16
@"NSNumber"
@24@0:8@16
@24@0:8q16
v32@0:8@16q24
v36@0:8@16q24B32
v32@0:8@16Q24
q16@0:8
v24@0:8q16
@"NSDictionary"
@"NSString"
@"NSMutableDictionary"
v40@0:8@16@24@?32
v32@0:8@16@?24
Q16@0:8
@32@0:8@16@24
v32@0:8@16@24
B32@0:8@16@24
v56@0:8@16@24@32@40@?48
v48@0:8@16@24@32@?40
@36@0:8@16B24@28
v44@0:8@16B24@?28@?36
v28@0:8@16B24
@"NSURLSession"
@"ICQDaemonOfferConditions"
@"NSArray"
@32@0:8@16q24
@40@0:8@16q24@32
@48@0:8@16q24q32@40
B40@0:8q16@24q32
B24@0:8q16
@"_ICQAlertSpecification"
@"_ICQFollowupSpecification"
B24@0:8@16
@"ICQLink"
d16@0:8
d24@0:8@16
v24@0:8d16
@"NSDate"
B24@0:8@?16
@"NSLock"
^{__CFUserNotification=}
@"NSObject<OS_dispatch_semaphore>"
@"NSObject<OS_dispatch_queue>"
@"ICQDaemonOffer"
