service starting...
com.apple.managedconfiguration.teslad
awaiting connections...
service stopping.
v8@?0
rejecting connection because it came too soon since the last one
com.apple.managedconfiguration.teslad-access
rejecting connection because it is not entitled to use this service!
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Accepted new connection.
idling
idleTimer
T@"NSTimer",&,N,V_idleTimer
lastConnectionTimestamp
TQ,V_lastConnectionTimestamp
machTimeScaleFactor
Td,V_machTimeScaleFactor
name
department
address
phone
magic
email
is-supervised
config
allow-pairing
is-mandatory
is-mdm-removable
await-device-configured
anchor-certs
supervising-host-cert
supervision-host-certs
skip-buddy-items
is-multi-user
 (%@)
ConfigClient/1.0%@
CLOUD_CONFIG_INTERNAL_ERROR
CLOUD_CONFIG_ABSINTHE_ERROR_P_OSSTATUS
CLOUD_CONFIG_BAD_FORMAT_ERROR
CLOUD_CONFIG_MAX_RETRIES_EXCEEDED
CLOUD_CONFIG_INVALID_DEVICE_ERROR
CLOUD_CONFIG_SERVER_DOWN_ERROR
CLOUD_CONFIG_SERVER_BUSY_ERROR
CLOUD_CONFIG_DAEMON_BUSY_ERROR
CLOUD_CONFIG_SERVER_TRUST_ERROR
MCCloudConfigCertificateURL
https://iprofiles.apple.com/resource/certificate.cer
MCCloudConfigSessionURL
https://iprofiles.apple.com/session
MCCloudConfigProfileURL
https://iprofiles.apple.com/profile
action
RequestProfileConfiguration
Initial
Fetching certificate
Fetching configuration
Fetching session info
Waiting to retry certificate fetch
Waiting to retry session info fetch
Waiting to retry configuration fetch
Initialize session
Establish session
Done
Failed
Invalid state
Cloud configuration field %@.%@ failed validation!
MCCloudConfigProfileData
Loading cloud configuration from defaults...
Starting HTTP request to URL: %@ Headers: %@
Transitioning states %@ ==> %@
Failed to initialize Absinthe, err = %d
POST
User-Agent
X-Profile-Protocol-Version
Sending failure response back to client
Configuration: %@
Unable to decode Tesla response!
error-code
No Tesla configuration for this device: %@
Validating cloud configuration
Cloud configuration is bad
Sending configuration data back to client
Retry-After
MCCloudConfigAcceptAnyHTTPSCertificate
Received response %d for request to %@
Got %d response in state %@
Tesla server busy; wait time is about %.0f seconds
connection failed in state %@, error: %@
remoteProcessConnection
T@"NSXPCConnection",&,N,V_remoteProcessConnection
completionBlock
T@?,C,N,V_completionBlock
userAgentString
T@"NSString",R,N
certificateURL
T@"NSURL",R
sessionURL
profileURL
state
Ti,N,V_state
certFetchCount
Tq,N,V_certFetchCount
sessionKeyFetchCount
Tq,N,V_sessionKeyFetchCount
configFetchCount
Tq,N,V_configFetchCount
context
T^v,N,V_context
timeoutTimer
T@"NSTimer",&,N,V_timeoutTimer
urlConnection
T@"NSURLConnection",&,N,V_urlConnection
httpResponseCode
Tq,N,V_httpResponseCode
expectedLength
Tq,N,V_expectedLength
retryAfterInterval
Td,N,V_retryAfterInterval
fatalError
T@"NSError",&,N,V_fatalError
certificate
T@"NSMutableData",&,N,V_certificate
sessionRequestInfo
T@"NSData",&,N,V_sessionRequestInfo
sessionInfo
T@"NSMutableData",&,N,V_sessionInfo
configurationData
T@"NSMutableData",&,N,V_configurationData
error
T@"NSError",&,N,V_error
; %@
dstKey
T@"NSString",&,N,V_dstKey
srcKey
T@"NSString",&,N,V_srcKey
srcGroupKey
T@"NSString",&,N,V_srcGroupKey
required
TB,N,V_required
requiresNegation
TB,V_requiresNegation
https
/var/root/absinthe_stub.plist
Unable to read Absinthe stub configuration file
WARNING: ABSINTHE STUB IN USE; NOT FOR PRODUCTION USE!
expectedCertificate
expectedSessionInfo
[%@]
deviceID
sessionInfoRequest
stubInfo
T@"NSDictionary",&,N,V_stubInfo
readyToSign
TB,N,V_readyToSign
sessionRequest
T@"NSData",R,N
T@"NSData",&,N,V_certificate
session
T@"NSData",&,N,V_session
alloc
initWithMachServiceName:
sharedGatekeeper
setDelegate:
resume
invalidate
init
resetIdleTimer
setLastConnectionTimestamp:
setMachTimeScaleFactor:
lastConnectionTimestamp
machTimeScaleFactor
valueForEntitlement:
class
isKindOfClass:
boolValue
fetchConfigurationWithCompletionBlock:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
interfaceWithProtocol:
setExportedInterface:
initWithXPCConnection:
setExportedObject:
idleTimer
dateWithTimeIntervalSinceNow:
idleTimerDidFire:
initWithFireDate:interval:target:selector:userInfo:repeats:
setIdleTimer:
mainRunLoop
addTimer:forMode:
listener:shouldAcceptNewConnection:
.cxx_destruct
_idleTimer
_lastConnectionTimestamp
_machTimeScaleFactor
ruleForDstKey:srcKey:group:isRequired:
ruleForDstKey:srcKey:group:isRequired:requiresNegation:
arrayWithObjects:count:
setRemoteProcessConnection:
setState:
context
setContext:
timeoutTimer
setTimeoutTimer:
urlConnection
cancel
setUrlConnection:
dealloc
length
stringWithFormat:
MCErrorWithDomain:code:descriptionArray:errorType:
errorWithDomain:code:userInfo:
numberWithInteger:
MCErrorWithDomain:code:descriptionArray:underlyingError:errorType:
standardUserDefaults
stringForKey:
URLWithString:
dictionaryWithObjects:forKeys:count:
dictionary
cloudValidationRules
countByEnumeratingWithState:objects:count:
applyRuleToCloudConfiguration:withResultDictionary:
srcGroupKey
srcKey
state
setCompletionBlock:
dataUsingEncoding:
mutableCopy
setConfigurationData:
enterState:
daemonBusyError
setFatalError:
setHttpResponseCode:
setExpectedLength:
retryIntervalForState:
setRetryAfterInterval:
currentRequest
allHTTPHeaderFields
start
internalError
setError:
certFetchCount
setCertFetchCount:
maxRetriesExceededError
sessionKeyFetchCount
setSessionKeyFetchCount:
configFetchCount
setConfigFetchCount:
descriptionForState:
startCertificateFetch
initializeAbsinthe
startSessionKeyFetch
establishAbsintheSession
startConfigurationFetch
sendConfigurationInfoToRemote
retryAfterInterval
startRetryTimerWithInterval:
sendFailureNoticeToRemote
certificate
bytes
dataWithBytes:length:
base64EncodedStringWithOptions:
setSessionRequestInfo:
absintheErrorWithOSStatus:
sessionInfo
initWithData:encoding:
initWithBase64EncodedString:options:
retrySessionKeyFetchIfAllowedAfterDelay:orFailWithError:
data
setCertificate:
certificateURL
requestWithURL:cachePolicy:timeoutInterval:
initWithRequest:delegate:startImmediately:
startURLRequest
setSessionInfo:
sessionURL
setHTTPMethod:
sessionRequestInfo
setHTTPBody:
userAgentString
setValue:forHTTPHeaderField:
profileRequestDictionary
dataWithJSONObject:options:error:
profileURL
initWithURL:cachePolicy:timeoutInterval:
error
completionBlock
configurationData
JSONObjectWithData:options:error:
badFormatError
objectForKeyedSubscript:
convertCloudConfigDictionary:toManagedConfiguration:
statusCode
expectedContentLength
httpResponseCode
allHeaderFields
integerValue
protectionSpace
authenticationMethod
isEqualToString:
serverTrust
objectForKey:
boolForKey:
sender
performDefaultHandlingForAuthenticationChallenge:
serverTrustError
cancelAuthenticationChallenge:
appendData:
teslaServiceDownError
invalidDeviceError
teslaServiceBusyError
retryConfigurationFetchIfAllowedAfterDelay:orFailWithError:
fatalError
retryCertificateFetchIfAllowedAfterDelay:orFailWithError:
timeoutTimerDidFire:
connection:willSendRequest:redirectResponse:
connection:didReceiveResponse:
connection:didReceiveData:
connection:needNewBodyStream:
connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:
connection:willCacheResponse:
connectionDidFinishLoading:
connection:didFailWithError:
connectionShouldUseCredentialStorage:
connection:willSendRequestForAuthenticationChallenge:
connection:canAuthenticateAgainstProtectionSpace:
connection:didReceiveAuthenticationChallenge:
connection:didCancelAuthenticationChallenge:
remoteProcessConnection
expectedLength
_state
_remoteProcessConnection
_completionBlock
_certFetchCount
_sessionKeyFetchCount
_configFetchCount
_context
_timeoutTimer
_urlConnection
_httpResponseCode
_expectedLength
_retryAfterInterval
_fatalError
_certificate
_sessionRequestInfo
_sessionInfo
_configurationData
_error
appendFormat:
initWithDestinationKey:sourceKey:group:isRequired:
setDstKey:
setSrcKey:
setSrcGroupKey:
setRequired:
decodeCertificateFromBase64String:
dstKey
required
_required
_srcKey
_srcGroupKey
_dstKey
setObject:forKeyedSubscript:
array
addObject:
setRequiresNegation:
requiresNegation
numberWithBool:
_requiresNegation
scheme
dictionaryWithContentsOfFile:
setStubInfo:
stubInfo
setSession:
setReadyToSign:
session
dataWithCapacity:
installCertificate:
establishSessionWithSessionInfoData:
signData:
sessionRequest
readyToSign
_readyToSign
_stubInfo
_session
getBytes:length:
v24@0:8@?16
v24@0:8@?<v@?B@"NSDictionary"@"NSError">16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@16
v16@0:8
v24@0:8Q16
d16@0:8
v24@0:8d16
@"NSTimer"
@40@0:8@16@24@32
@"NSURLRequest"40@0:8@"NSURLConnection"16@"NSURLRequest"24@"NSURLResponse"32
v32@0:8@16@24
v32@0:8@"NSURLConnection"16@"NSURLResponse"24
v32@0:8@"NSURLConnection"16@"NSData"24
@32@0:8@16@24
@"NSInputStream"32@0:8@"NSURLConnection"16@"NSURLRequest"24
v48@0:8@16q24q32q40
v48@0:8@"NSURLConnection"16q24q32q40
@"NSCachedURLResponse"32@0:8@"NSURLConnection"16@"NSCachedURLResponse"24
v24@0:8@"NSURLConnection"16
v32@0:8@"NSURLConnection"16@"NSError"24
B24@0:8@"NSURLConnection"16
v32@0:8@"NSURLConnection"16@"NSURLAuthenticationChallenge"24
B32@0:8@"NSURLConnection"16@"NSURLProtectionSpace"24
@24@0:8@16
@20@0:8i16
B32@0:8@16^@24
v28@0:8B16@20
v20@0:8i16
d20@0:8i16
@?16@0:8
i16@0:8
q16@0:8
v24@0:8q16
^v16@0:8
v24@0:8^v16
@"NSXPCConnection"
@"NSURLConnection"
@"NSError"
@"NSMutableData"
@"NSData"
@44@0:8@16@24@32B40
v20@0:8B16
@"NSString"
@48@0:8@16@24@32B40B44
@"NSDictionary"
MCTeslaConfigurationFetchInterface
NSObject
MCTeslaGatekeeper
NSXPCListenerDelegate
MCTeslaConfigurationFetcher
NSURLConnectionDataDelegate
NSURLConnectionDelegate
MCTeslaValidationRule
MCTeslaStringValidationRule
MCTeslaCertificateArrayValidationRule
MCTeslaCertificateValidationRule
MCTeslaBooleanValidationRule
MCTeslaHTTPSURLValidationRule
MCTeslaStringArrayValidationRule
AbsintheStub
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>${EXECUTABLE_NAME}</string>
<key>CFBundleIdentifier</key>
<string>com.apple.managedconfiguration.cloudconfigd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundlePackageType</key>
<string>com.apple.product-type.tool</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>NSMainNibFile</key>
<string>MainWindow</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>311791806</string>
<key>application-identifier</key>
<string></string>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/ActivationPrivateKey</string>
<string>NULL/DevicePrivateKey</string>
<string>NULL/DeviceCertificate</string>
<string>NULL/DeviceName</string>
</array>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
</array>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
</array>
</dict>
</plist>
