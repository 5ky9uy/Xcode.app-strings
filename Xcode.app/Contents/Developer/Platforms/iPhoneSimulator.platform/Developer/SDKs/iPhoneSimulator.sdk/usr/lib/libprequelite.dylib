SqliteExtendedCode
SqliteSQL
SqliteErrorDomain
T@"NSData",R,N
<PQLName %s>
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
NULL
<PQLRaw %s>
<PQLFormat %s>
cannot compile statement [%@] around [...%.10s...]
Prequelite
default
This result set has more than one column
locked handler called %@; %@ (for statement %@)
locked handler called %@; %@
 > %@
B32@?0@"PQLConnection"8@"PQLStatement"16@"NSError"24
Sqlite rollbacked transaction [%@] because of unrecoverable error [%@], aborting.
v32@?0@"PQLConnection"8@"PQLStatement"16@"NSError"24
<%@:%p %@%s{batch:%d:%d txn:%d
 auto-commit:%d}>
 %d prepared statements
, %d busy:
    %s
-[PQLConnection _resetState]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Prequelite_Sim/Prequelite-70/Prequelite/PQLConnection.m
_db == nil
_suspendCaching == 0
_batchingTimer == nil
_batchingPolicyHandler == nil
_flushNotifications == nil
_savePointLevel == 0
_skipBatchStop == 0
!_batchStarted
com.apple.sqlite.%@
v8@?0
<Unknown File>
Invalid parameter not satisfying: %@
count > 0 || delay > 0
-[PQLConnection _batchStartIfNeeded:]
_useBatching && !_batchStarted
com.apple.prequelite.batch
Connection has been used after close (or before open)
connection is closed
-[PQLConnection _batchStopIfNeeded]
_useBatching && _batchStarted && !_savePointLevel && !_skipBatchStop
PRAGMA cache_size
-[PQLConnection _fireFlushNotifications]
!_batchStarted && !_savePointLevel && _useQueue
PRAGMA auto_vacuum
incremental
full
PRAGMA incremental_vacuum(%lld)
-[PQLConnection _vacuumIfNeeded]
!_batchStarted && !_savePointLevel && _vacuumTracker >= 0
PRAGMA page_count
PRAGMA freelist_count
main
-flush is invalid when in a savepoint
commit
savepoint savepoint_0
savepoint savepoint_1
savepoint savepoint_2
savepoint savepoint_3
savepoint savepoint_4
rollback to savepoint savepoint_0
rollback to savepoint savepoint_1
rollback to savepoint savepoint_2
rollback to savepoint savepoint_3
rollback to savepoint savepoint_4
release savepoint savepoint_0
release savepoint savepoint_1
release savepoint savepoint_2
release savepoint savepoint_3
release savepoint savepoint_4
completion handler passed and no serial Queue in use
flush notification makes no sense without batching or savepoints
PerformSuspendBatch makes no sense if batching isn't in use
com.apple.prequelite.transaction
savepoint savepoint_%d
rollback to savepoint savepoint_%d
release savepoint savepoint_%d
-[PQLConnection _performWithFlags:action:whenFlushed:]
B16@?0@"PQLConnection"8
PerformOnSerialQueue asked with no serial Queue in use
-openAtURL called twice
PRAGMA page_size
PRAGMA journal_mode
PRAGMA auto_vacuum = incremental
PRAGMA page_size = 4096
PRAGMA journal_mode = WAL
cannot set journal_mode to WAL
PRAGMA wal_autocheckpoint = 4000
cannot set wal_autocheckpoint to 4000
backup was interupted
invalid transactionType passed: %ld
PRAGMA synchronous
PRAGMA synchronous = 0
PRAGMA synchronous = 1
PRAGMA synchronous = 2
invalid synchronousMode passed: %ld
this isn't an update, you should use -select instead
PRAGMA user_version
PRAGMA user_version = %ld
pragma freelist_count
pragma page_size
label
T@"NSString",C,N,V_label
traced
TB,N,GisTraced,V_traced
crashIfUsedAfterClose
TB,N,V_crashIfUsedAfterClose
T@"NSURL",R,C,N,V_url
dbHandle
T^{sqlite3=},R,N,V_db
isInBatch
TB,R,N
isInTransaction
lastError
T@"NSError",&,N,V_lastError
lastInsertedRowID
Tq,R,N
changes
statementCacheMaxCount
TQ,N
serialQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
currentOperationDuration
Td,R,N
synchronousMode
batchTransactionType
Ti,N,V_batchTransactionType
lockedHandler
T@?,C,N,V_lockedHandler
autoRollbackHandler
T@?,C,N,V_autoRollbackHandler
sqliteErrorHandler
T@?,C,N,V_sqliteErrorHandler
preFlushHook
T@?,C,N,V_preFlushHook
postFlushHook
T@?,C,N,V_postFlushHook
profilingHook
T@?,C,N,V_profilingHook
isBatchSuspended
begin transaction immediate
begin transaction deferred
begin transaction exclusive
no result found
<%@:%p {stmt: %@; row: %ld; closed:%s}>
-%s was called twice
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Prequelite_Sim/Prequelite-70/Prequelite/PQLResultSet.m
[aClass instancesRespondToSelector:initializer]
%@ conforms neither to PQLValuable or PQLResultSetInitializer
error
T@"NSError",R,N,V_error
rowNumber
TQ,R,N,V_rowNumber
columns
TQ,R,N,V_columns
T@"PQLConnection",R,N,V_db
stmt
T^{sqlite3_stmt=},R,N
defaultUnarchivingAllowedClasses
T@"NSSet",&,N,V_defaultUnarchivingAllowedClasses
requiresSecureCoding
TB,N,V_requiresSecureCoding
@24@?0@"PQLResultSet"8^@16
<%@:%p {%s}>
INVALIDATED
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Prequelite_Sim/Prequelite-70/Prequelite/PQLStatement.m
cannot bind a closed statement
cannot bind a statement in use
isTraced
errorForDB:SQL:
stringWithUTF8String:
dictionaryWithCapacity:
setObject:forKeyedSubscript:
numberWithInteger:
errorWithDomain:code:userInfo:
numberWithInt:
dictionaryWithObjects:forKeys:count:
userInfo
objectForKeyedSubscript:
unsignedIntegerValue
code
domain
isEqualToString:
extendedSqliteCode
sqliteStatement
isSqliteErrorCode:
errorForDB:
errorForDB:stmt:
errorWithSqliteCode:andMessage:
dealloc
init
bytes
length
initWithBytes:length:
initWithData:
_length
_bytes
UTF8String
alloc
appendBytes:length:
mutableBytes
initWithString:
stringByAppendingPathComponent:
nameWithString:
class
_appendString:toInjection:
stringWithFormat:
nameWithPrefix:suffix:
bindWithStatement:startingAtIndex:
bindValuesToKeepAlive
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
nameByAddingSuffix:
initWithUTF8String:length:
initialize
rawInjection:length:
initWithFormat:arguments:
initWithCapacity:
numberWithUnsignedInt:
addObject:
numberWithLongLong:
numberWithDouble:
initWithBytes:length:encoding:
initWithUTF8String:
appendData:
copy
null
raise:format:
countByEnumeratingWithState:objects:count:
sqliteBind:index:
formatInjection:
.cxx_destruct
_binds
objCType
doubleValue
longLongValue
newFromSqliteValue:
timeIntervalSince1970
dateWithTimeIntervalSince1970:
dataWithBytes:length:
absoluteString
getUUIDBytes:
initWithUUIDBytes:
columns
archivedObjectOfClass:atIndex:
initFromPQLResultSet:error:
initForWritingWithMutableData:
setRequiresSecureCoding:
encodeObject:forKey:
finishEncoding
initWithOptions:capacity:
appendFormat:
setLockedHandler:
setAutoRollbackHandler:
appendString:
_description:
_clearStatementCache
removeObject:
removeAllObjects
close:
_resetState
_createCacheIfNeeded
_clearCleanupCacheQueueIfNeeded
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
useSerialQueue
_execute:mustSucceed:bindings:
flush
fetchObjectOfClass:sql:
intValue
lowercaseString
_vacuumMode
_incrementalVacuum:
synchronousMode
setSynchronousMode:
_fullSync
_vacuumIfNeeded
forceBatchStart
count
removeObjectsInRange:
_performWithFlags:action:whenFlushed:
fileSystemRepresentation
setTraced:
openAtURL:withFlags:error:
integerValue
execute:
isEqualToNumber:
openAtURL:sharedCache:error:
lastError
destroyDatabaseWithError:
initWithFormat:arguments:db:cache:
_newStatementForFormat:arguments:
unbindForDB:returnedRows:
initWithStatement:usingDatabase:
onlyObjectOfClass:initializer:
error
fetchObjectOfClass:initializer:sql:args:
onlyObject:
initWithFormat:
executeRaw:
currentOperationDuration
statementCacheMaxCount
setStatementCacheMaxCount:
useBatchingWithDelay:changeCount:
useBatchingWithPolicyHandler:
_batchStartIfNeeded:
_batchStopIfNeeded
_fireFlushNotifications
makeNextFlushFullSync
isBatchSuspended
groupInBatch:
groupInTransaction:
performWithFlags:action:whenFlushed:
performWithFlags:action:
setupPragmas
registerFunction:nArgs:handler:
backupToURL:progress:
isInBatch
isInTransaction
lastInsertedRowID
setBatchTransactionType:
changes
execute:args:
fetch:
fetch:args:
fetchObjectOfClass:initializer:sql:
fetchObjectOfClass:sql:args:
fetchObject:sql:args:
fetchObject:sql:
userVersion
setUserVersion:
autovacuumableSpaceInBytes
incrementalVacuum:
label
setLabel:
lockedHandler
autoRollbackHandler
sqliteErrorHandler
setSqliteErrorHandler:
preFlushHook
setPreFlushHook:
postFlushHook
setPostFlushHook:
profilingHook
setProfilingHook:
dbHandle
serialQueue
setLastError:
isTraced
crashIfUsedAfterClose
setCrashIfUsedAfterClose:
batchTransactionType
_currentStmtStart
_batchStarted
_suspendCaching
_savePointLevel
_skipBatchStop
_vacuumTracker
_flushNotifications
_batchingPolicyHandler
_batchingTimer
_batchingPeriod
_batchingChangesLimit
_batchingChangesCount
_cacheSize
_useBatching
_useQueue
_needsFullSync
_preparedStatements
_stmtCacheSource
_stmtCacheCleanupQueue
_traced
_crashIfUsedAfterClose
_batchTransactionType
_label
_url
_lockedHandler
_autoRollbackHandler
_sqliteErrorHandler
_preFlushHook
_postFlushHook
_profilingHook
_serialQueue
_lastError
close
nextObject
_next:
isNullAtIndex:
dataWithBytesNoCopy:length:freeWhenDone:
dataAtIndex:
initWithBytesNoCopy:length:freeWhenDone:
propertyListWithData:options:format:error:
initForReadingWithData:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultUnarchivingAllowedClasses
decodeObjectForKey:
objectAtIndex:
enumerateObjectsOfClass:
instancesRespondToSelector:
stmt
onlyObjectOfClass:
objectOfClass:
objectOfClass:initializer:
object:
next
columnNameAtIndex:
sqliteValueAtIndex:
objectOfClass:atIndex:
boolAtIndex:
charAtIndex:
unsignedCharAtIndex:
shortAtIndex:
unsignedShortAtIndex:
intAtIndex:
unsignedIntAtIndex:
longAtIndex:
unsignedLongAtIndex:
longLongAtIndex:
unsignedLongLongAtIndex:
integerAtIndex:
unsignedIntegerAtIndex:
floatAtIndex:
doubleAtIndex:
UTF8StringAtIndex:
numberAtIndex:
dateAtIndex:
stringAtIndex:
dataAtIndex:noCopy:
uuidAtIndex:
plistAtIndex:
archivedObjectOfClasses:atIndex:
objectAtIndexedSubscript:
enumerateObjectsOfClass:initializer:
enumerateObjects:
requiresSecureCoding
setDefaultUnarchivingAllowedClasses:
rowNumber
_stmt
_objectsClass
_objectsClassInitializer
_hasValuable
_objectsConstructor
_lastEnumeratedObject
_inTransaction
_requiresSecureCoding
_defaultUnarchivingAllowedClasses
_error
_rowNumber
_columns
initWithObjects:
_prepare:withDB:
translate:hasInjections:arguments:
initWithStatement:forDB:
bindArguments:db:
invalidate
keepBindAlive:
_next
_aliveBinds
_specUnion
_inUse
_isTraced
_specLength
encodeWithCoder:
initWithCoder:
PQLAdditions
PQLNameInjectionBase
PQLNameInjection
PQLInjecting
NSObject
PQLRawInjection
PQLFormatInjection
PQLBindable
PQLValuable
PQLResultSetInitializer
PQLConnection
PQLResultSet
PQLEnumeration
NSFastEnumeration
PQLStatement
NSCoding
q16@0:8
@16@0:8
B24@0:8q16
@24@0:8^{sqlite3=}16
@32@0:8^{sqlite3=}16^{sqlite3_stmt=}24
@32@0:8^{sqlite3=}16@24
@28@0:8i16@20
Q16@0:8
r^v16@0:8
v16@0:8
@32@0:8r^v16Q24
@24@0:8@16
@32@0:8@16@24
i28@0:8^{sqlite3_stmt=}16i24
@"NSData"16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@32@0:8r*16Q24
@32@0:8@16[1{__va_list_tag=II^v^v}]24
@"NSMutableArray"
v28@0:8^{sqlite3_stmt=}16i24
@24@0:8^{Mem=}16
@32@0:8@16^@24
@32@0:8@"PQLResultSet"16^@24
@20@0:8B16
d16@0:8
v24@0:8Q16
v28@0:8d16i24
v24@0:8@?16
v20@0:8i16
i16@0:8
B24@0:8Q16
B36@0:8I16@?20@?28
B24@0:8@?16
B28@0:8I16@?20
v20@0:8B16
B36@0:8@16i24^@28
B36@0:8@16B24^@28
B24@0:8^@16
B36@0:8@16i24@?28
B32@0:8@16@?24
B36@0:8@16B24[1{__va_list_tag=II^v^v}]28
B32@0:8@16[1{__va_list_tag=II^v^v}]24
@48@0:8#16:24@32[1{__va_list_tag=II^v^v}]40
@40@0:8#16:24@32
@40@0:8#16@24[1{__va_list_tag=II^v^v}]32
@32@0:8#16@24
@40@0:8@?16@24[1{__va_list_tag=II^v^v}]32
@32@0:8@?16@24
v24@0:8@16
@?16@0:8
^{sqlite3=}16@0:8
^{sqlite3=}
@"NSObject<OS_os_transaction>"
@"NSObject<OS_dispatch_source>"
^{cache_s=}
@"NSString"
@"NSURL"
@"NSObject<OS_dispatch_queue>"
@"NSError"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
^{sqlite3_stmt=}16@0:8
B20@0:8B16
@32@0:8#16:24
@24@0:8#16
@24@0:8@?16
@20@0:8i16
^{Mem=}20@0:8i16
@28@0:8#16i24
B20@0:8i16
c20@0:8i16
C20@0:8i16
s20@0:8i16
S20@0:8i16
i20@0:8i16
I20@0:8i16
q20@0:8i16
Q20@0:8i16
f20@0:8i16
d20@0:8i16
r*20@0:8i16
@24@0:8i16B20
@28@0:8@16i24
@24@0:8Q16
^{PQLResultSet=#@#:B@?@BB@@QQ@}32@0:8#16:24
^{PQLResultSet=#@#:B@?@BB@@QQ@}24@0:8#16
^{PQLResultSet=#@#:B@?@BB@@QQ@}24@0:8@?16
@"PQLStatement"
@"NSSet"
@"PQLConnection"
@40@0:8@16^B24[1{__va_list_tag=II^v^v}]32
B32@0:8r*16@24
@48@0:8@16[1{__va_list_tag=II^v^v}]24@32^{cache_s=}40
v32@0:8[1{__va_list_tag=II^v^v}]16@24
v32@0:8@16Q24
^{sqlite3_stmt=}
(?="inlined"[8C]"ptr"^C)
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@(#)PROGRAM:libprequelite  PROJECT:Prequelite-70
Unable to create preprared cache for statements
Starting database batch on %@
Flushing database batch for timer on %@
unable to get cache_size, use default 500
Flushing database batch to reduce page cache pressure on %@
Flushing database batch for change count on %@
Flushing database batch (policy handler) on %@
warning: Incremental vacuum failed
AutoVacuum: evaluating mode for %@
AutoVacuum: non incremental mode detected for %@
AutoVacuum: Incremental mode detected for %@
AutoVacuum: unable to get page_count for %@
AutoVacuum: unable to get freelist_count for %@
AutoVacuum: used:%lld free:%lld load:%lld%% for %@
AutoVacuum: freed %lld pages for %@
Raising synchronous mode from %d to 2 (Full)
Flushed %@
opened %@
closed %@
sqlite3_close(%@) failed: %@
sqlite3_close(%@) fails: [%s] isn't finalized
starting backup from %@ to %@
finished backup from %@ to %@, rc: %d
SQLite: %s
SQLite[%d]: %s
warning: SQLite[%d]: %s
uncaching: %@
connection:%@ sql:'%s'
found cached statement without injections
sql:  %@
stmt: %@
translated statement with%s injections
sql:   %@
trans: %s
found cached statement with injections
sql:  %@
stmt: %@
cached statement with%s injections
sql:  %@
stmt: %@
