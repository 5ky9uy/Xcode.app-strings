DaemonAdditions
DAAgent
CalendarSupport
DADAccessManager
DADaemonPowerAssertionManager
DADAgentManager
DADClient
DADClientCalendarAvailabilityResponseDelegate
DAEventsCalendarAvailabilityResponseConsumer
NSObject
DADClientAccountTimers
DADMain
UMUserSwitchStakeholder
DATransactionMonitorDelegate
DADClientContactsSearchDelegate
DASearchQueryConsumer
DAFolderSyncRequest
DARefreshManager
DATokenRegistrationRequest
NSURLConnectionDelegate
DARefreshWrapper
DATokenRegistrationDelegate
DADClientSettingsDelegate
DASettingsResponseDelegate
DADClientCalendarDirectorySearchResponseDelegate
DAEventsCalendarDirectorySearchResponseConsumer
DADClientAttachmentDownloadDelegate
DAEventsAttachmentDownloadConsumer
DADStatusReportAggregator
DACoreDAVAgent
DABabysittable
DADClientDelegate
DADClientShareResponseDelegate
DAEventsCalendarSharingResponseConsumer
deviceWillSleep
deviceDidWake
init
setAccount:
account
trustHandler
stateString
name
isEqualToString:
userInfo
objectForKeyedSubscript:
boolValue
syncWhenReachable
networkReachableBlock
setSyncWhenReachable:
setNetworkReachableBlock:
sharedNetworkObserver
_reachabilityChanged:
addNetworkReachableObserver:selector:
removeNetworkReachableObserver:
setIsMonitoring:
shutdown
initWithAccount:
observeReachabilityWithBlock:
stopObservingReachability
startMonitoring
requestAgentStopMonitoringWithCompletionBlock:
refreshFolderListRequireChangedFolders:isUserRequested:
syncFolderIDs:forDataclasses:isUserRequested:
processMeetingRequestDatas:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:callback:
getDAAccount
.cxx_destruct
isMonitoring
lastRetryTimeout
setLastRetryTimeout:
isWaitingForPassword
setIsWaitingForPassword:
_isMonitoring
_syncWhenReachable
_isWaitingForPassword
_account
_lastRetryTimeout
_networkReachableBlock
sharedInstance
backingAccountInfo
agentClassForACAccount:
agentClass
class
isKindOfClass:
intValue
preferredEventDaysToSync
preferredToDoDaysToSync
addObserverForPreferredDaysToSyncChangeNotifications
removeObserverForPreferredDaysToSyncChangeNotifications
preferredDaysToSyncDidChange
UTF8String
setMainConnection:
mainConnection
isDisabled
stringWithUTF8String:
clients
count
countByEnumeratingWithState:objects:count:
clientBundleID
rawConnection
reconnectWithConnection:
persistentClientCleanup
alloc
initWithConnection:clientID:
addObject:
exceptionWithName:reason:userInfo:
raise
setClients:
_setupServerConnection
_init
dealloc
removeObject:
initWithClientID:
beginMonitoringPersistentFolders:forAccount:
sharedManager
removeClient:
addPersistentClientWithAccountID:clientID:watchedIDs:
_mainConnection
_clients
_retainAssertionForContext:
_releaseAssertionForContext:
accountID
allObjects
currentRunLoop
currentMode
dictionaryWithObjects:forKeys:count:
notificationWithName:object:userInfo:
defaultQueue
arrayWithObjects:count:
enqueueNotification:postingStyle:coalesceMask:forModes:
objectAtIndexedSubscript:
stringByAppendingPathComponent:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
initWithAccountType:
bundleForClass:
localizedStringForKey:value:table:
setAccountDescription:
setAuthenticationType:
setSupportsAuthentication:
setWithObjects:
mutableCopy
setEnabledDataclasses:
setVisible:
identifier
saveVerifiedAccount:withCompletionHandler:
_phoneVersion
setMailAccountLoadOptions:
reloadAccounts
_ensureHolidaySubscribedCalendarExists
array
_leafAccountTypes
daemonAppropriateAccountClassForACAccount:
initWithBackingAccountInfo:
sharedKeychain
removePersistentCredentials
accountDescription
enableDaemon
enableActiveSync
disableActiveSync
_accountInfoPath
initWithContentsOfFile:
containsObject:
cleanUpFilesForAccountWithId:
respondsToSelector:
sharedConnection
applyRestrictionDictionary:clientType:clientUUID:localizedClientDescription:localizedWarningMessage:outRestrictionChanged:outEffectiveSettingsChanged:outError:
removeOrphanedClientRestrictions
persistentUUID
writeToFile:atomically:
_deviceDidWake
_deviceWillSleep
sharedInstanceForAccountType:creatingClass:
calOpenDBAsGenericClient
calDB
_removeSubscribedCalendarsForAccountWithID:inStore:
calCloseDBAndSave:
abOpenDBAsGenericClient
abDB
abSaveDB
abCloseDBAndSave:
policyManager
currentPolicyKey
requestPolicyUpdate
monitorFoldersWithIDs:
stopMonitoringFoldersWithIDs:
suspendMonitoringFoldersWithIDs:
resumeMonitoringFoldersWithIDs:
setWithArray:
setFolderIdsForPersistentPushAdded:deleted:clientID:
clearFolderIdsForPersistentPushWithClientID:
isInHoldingPattern
orphanCheckEnabled
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
isEnabledForDataclass:
_clearOrphanedSubscribedCalendars:eventAccountIds:toDoAccountIds:
hasPrefix:
length
substringFromIndex:
changeTrackingID
completelyIgnoreNotes
enableChangeLogging:
allAccounts
copy
accountType
accountIdentifier
deleteAccount:
save:
DAExtendedDescription
databaseIsCorrupt:
_loadAndStartMonitoringAgents
loadAgents
clearOrphanedStores
activeAgents
keychainAccessibilityType
password
pushPreferenceDidChange
sharedDBWatcher
didReceiveDarwinNotification:
establishAllApsConnections
_systemMayNowBeReady
agentHasStoppedMonitoring:
saveAndReleaseAgents
defaultCenter
postNotificationName:object:
_stopMonitoringAndSaveAgents
enabledForAnyDADataclasses:
isSubscribedCalendarAccount
parentAccountIdentifier
initWithCapacity:
onBehalfOfBundleIdentifier
accountTypeIdentifier
resetCertWarnings
initWithArray:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:
removeFolderIDFromPingBlacklist:
removeFolderIDFromPingHistoryBlacklist:
addFolderIDToPingBlacklist:
stringByAppendingString:
sharedGateKeeper
sharedPowerAssertionManager
initWithString:
initWithIdentifier:description:
loadDaemonBundleForACAccountType:
handleWebcalURL:
processDAFolderChange:withCompletionBlock:
sharedBabysitter
statusReport
waiterID
accountWithIDShouldContinue:
setSyncingAllowed:
protocolVersion
setProtocolVersion:
resetStatusReport
arrayWithCapacity:
dictionaryRepresentation
initWithObjects:
intersectsSet:
enabledDataclasses
_hasDataclassWeCareAbout:
agentWithAccountID:
accountWithAccountID:
accountWithAccountID:andClassName:
_simulateNotificationOnWatchedFolders:
_configFileForAgent:
dadRemoveStoresForAccountWithID:
currentPolicyKeyForAccount:
requestPolicyUpdateForAccount:
startMonitoringAccountID:folderIDs:
stopMonitoringAccountID:folderIDs:
suspendMonitoringAccountID:folderIDs:
resumeMonitoringAccountID:folderIDs:
addPersistMonitoringAccountID:folderIDs:clientID:
removePersistMonitoringAccountID:folderIDs:clientID:
clearPersistMonitoringAccountID:clientID:
_resetMonitoringRequestsAndLoadAgents
registerForBuddy
enableMonitoringAgents
disableMonitoringAgents
numDisableMonitoringRequests
updateFolderListForAccountID:andDataclasses:requireChangedFolders:isUserRequested:
updateContentsOfFolders:forAccountID:andDataclasses:isUserRequested:
updateContentsOfAllFoldersForAccountID:andDataclasses:isUserRequested:
activeAccountBundleIDs
hasEASAccountConfigured
processMeetingRequestDatas:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:callback:
resetCertWarningsForAccountWithId:andDataclasses:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:forAccountID:
reportFolderItemsSyncSuccess:forFolderWithID:withItemsCount:andAccountWithID:
handleURLString:
processFolderChange:forAccountWithID:completionBlock:
getStatusReportDictsWithCompletionBlock:
addPendingAccountSetup
removePendingAccountSetup
hasPendingAccountSetup
hasActiveAccounts
disableDaemon
cleanupLaunchdSemaphore
upgradeAccountsInSimulator
setActiveAgents:
subCalHandlers
setSubCalHandlers:
_activeAgents
_agentsAwaitingShutdown
_disableMonitoringRequests
_watchedIDs
_pmNotifier
_pmPort
_pmRunLoopSource
_startAgentsWhenSystemReadyBlock
_pendingAccountSetupCount
_subCalHandlers
fileSystemRepresentation
setConn:
conn
_clientDiedWithReason:
_dispatchMessage:
setWatchedIDs:
setBusyIDs:
setUpdatedIDs:
setAccountTimers:
setActionDelegatesById:
_foldersUpdated:
addObserver:selector:name:object:
_asPolicyKeyChanged:
_requestClientStatusDump:
_agentsStopped:
requestPriority:forClient:dataclasses:
disable
busyIDs
removeObjectForKey:
watchedIDs
actionDelegatesById
allValues
removeObserver:
accountTimers
killAllTimers
unregisterForInterrogation
sharedMain
allKeys
countForObject:
_removeBusyFolderIDs:forAccountWithID:
_removeWatchedFolderIDs:forAccountWithID:
numOutstandingAgentDisables
setNumOutstandingAgentDisables:
addToOperationsQueueDisabledCheckAndGoBlock:wrappedBlock:
noteBlockedClientCallChange:
setNumOutstandingBlockingClientCalls:
setNumOutstandingRefreshPriorityClientCalls:
numOutstandingBlockingClientCalls
numOutstandingRefreshPriorityClientCalls
transactionId
setObject:forKeyedSubscript:
addObjectsFromArray:
watchedFolderCount
numberWithLong:
_createReplyToRequest:withProperties:
updatedIDs
intersectSet:
minusSet:
setObject:forKey:
numberWithInteger:
_clientName
timersForAccountWithID:
clientBehaviorForFolderIds:
setLastFolderContentRequestDate:forFolderWithId:
deferredTimerInterval
_requestFolderContentsUpdateForFolders:accountId:dataclasses:isUserRequested:
setDeferredFolderContentsSource:
clientBehaviorForFolderContents
date
setLastAllFolderContentsRequestDate:
_requestAllFolderContentsUpdateForAccountId:dataclasses:isUserRequested:
setDeferredAllFolderContentsSource:
clientBehaviorForFolderList
setLastFolderListRequestDate:
allowFolderWipe
setLastFolderWipeRequestDate:
_requestFolderListUpdateForAccountId:dataclasses:requireChangedFolders:isUserRequested:
setDeferredFolderListSource:
initWithAccountID:queryDictionary:client:
delegateID
beginQuery
userRequestsCancel
unsignedIntegerValue
numberWithUnsignedInt:
initWithObjectsAndKeys:
archivedDataWithRootObject:
initForReadingWithData:
setRequiresSecureCoding:
decodeObjectOfClass:forKey:
errorWithDomain:code:userInfo:
noteRefreshClientCallChange:
registerForInterrogation
initWithAccountID:attachmentUUID:client:
beginDownload
initWithAccountID:client:response:calendarID:
respondToShareRequest
_cacheTimeZoneInfo
asDeviceID
initWithAccountID:requestDictionary:forUpdate:client:
beginSettingsRequest
isOofSupported
numberWithBool:
initWithAccountID:client:startDate:endDate:ignoredEventID:addresses:
performRequest
initWithAccountID:client:terms:recordTypes:resultLimit:
host
port
emailAddresses
object
code
unionSet:
sharedService
openApplication:options:withResult:
removeAllObjects
noteAdditionalReportDicts:
persistent
_beginMonitoringFolders:
_stopMonitoringFolders:
_resumeMonitoringFolders:
_suspendMonitoringFolders:
_startMonitoringAgents:
_stopMonitoringAgents:
_getCurrentPolicyKey:
_requestPolicyUpdate:
_requestFolderContentsUpdate:
_requestAllFolderContentsUpdate:
_requestFolderListUpdate:
_openServerContactsSearch:
_cancelServerContactsSearch:
_processMeetingRequests:
_resetCertWarnings:
_setFolderIdsThatExternalClientsCareAbout:
_reportFolderItemsSyncResult:
_handleURL:
_processFolderChange:
_removeStoresForAccountWithID:
_getStatusReports:
_registerForInterrogation:
_resetThrottleTimers:
_beginDownloadingAttachmentEvent:eventDict:
_cancelDownloadingAttachmentEvent:eventDict:
_respondToSharedCalendarEvent:eventDict:
_fillOutEASTimeZoneInfo:
_getActiveSyncDeviceIdentifier:
_openServerOofSettingsRequest:
_checkIsOofSettingsSupported:
_requestCalendarAvailability:eventDict:
_cancelCalendarAvailabilityRequest:eventDict:
_performCalendarDirectorySearch:eventDict:
_cancelCalendarDirectorySearch:eventDict:
_getAccountExternalIdentification:eventDict:
clientsToInterrogate
delegateWithIDIsGoingAway:
applyClientStatusReportToAggregator:
setClientBundleID:
clientName
setClientName:
_persistent
_numOutstandingAgentDisables
_numOutstandingBlockingClientCalls
_numOutstandingRefreshPriorityClientCalls
_clientBundleID
_conn
_busyIDs
_updatedIDs
_accountTimers
_actionDelegatesById
initWithAccountID:client:
finished
setFinished:
domain
cancelCalendarAvailabilityRequestWithID:
client
requestCalendarAvailabilityForStartDate:endDate:ignoredEventID:addresses:consumer:
finishWithError:
calendarAvailabilityRequestReturnedResults:
calendarAvailabilityRequestFinishedWithError:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
_startDate
_endDate
_ignoredEventID
_addresses
_requestID
_queue
refreshThrottleTime
folderIdToLastFolderContentsRequestDate
timeIntervalSinceDate:
lastAllFolderContentsRequestDate
lastFolderListRequestDate
lastFolderWipeRequestDate
deferredAllFolderContentsSource
deferredFolderListSource
deferredFolderContentsSource
setFolderIdToLastFolderContentsRequestDate:
_lastAllFolderContentsRequestDate
_lastFolderListRequestDate
_lastFolderWipeRequestDate
_deferredAllFolderContentsSource
_deferredFolderListSource
_deferredFolderContentsSource
_folderIdToLastFolderContentsRequestDate
sharedTransactionMonitor
transactionCount
setPersistAPSAfterShutdown:
shutdownDAD
_shutdownDaemonIfNoAccountsExistInTimeInterval:
userSwitchTasks
bundleID
_setRunLoopStopped:
_shutdownDaemonCheckingForAccounts:
invalidate
dateWithTimeIntervalSinceNow:
delayedShutdownTimerFired:
initWithFireDate:interval:target:selector:userInfo:repeats:
mainRunLoop
addTimer:forMode:
_forceShutdownTimerFired:
taskWithName:reason:forBundleID:
begin
setUserSwitchTasks:
setTransactionMonitorDelegate:
_forceShutdownDaemonOnLogoutInTimeInterval:
addSignalHandler
registerUserSwitchStakeHolder:
addLanguageChangeHandler
_shutdownNotification:
removeObserver:name:object:
enableLoggingForCustomHandler:
isAppleInternalInstall
CFNetworkLogging
willSwitchUser
didFinishAllXPCTransactions
shutdownDaemonIfNoAccountsExist
waitForSystemAvailability
setRunLoopStoppedRef:
_configureAggdLogging
_delayedShutdownTimer
_forceShutdownTimer
_runLoopStoppedRef
_userSwitchTasks
initWithDictionaryRepresentation:consumer:
setQuery:
setConsumerCancelled:
query
performSearchQuery:
setQueryResultData:
setConsumer:
consumerCancelled
cancelSearchQuery:
queryResultData
searchQuery:returnedResults:
searchQuery:finishedWithError:
searchQuery:returnedTotalCount:
_query
_queryResultData
setFolder:
setHasRemoteChanges:
setIsInitialUberSync:
setIsResyncAfterConnectionFailed:
setIsResyncAfterServerError:
folder
hasRemoteChanges
isInitialUberSync
isResyncAfterConnectionFailed
actions
stringWithFormat:
initWithFolder:hasRemoteChanges:isInitialUberSync:
setActions:
isResyncAfterServerError
containsPostponedActions
setContainsPostponedActions:
_hasRemoteChanges
_isInitialUberSync
_isResyncAfterConnectionFailed
_isResyncAfterServerError
_containsPostponedActions
_folder
_actions
_tearDownAllApsConnections
setDelegate:
string
appendString:
appendFormat:
removeFromRunLoop
_apsEnvStringForDAEnvString:
_portNameForEnvironmentName:
initWithEnvironmentName:namedDelegatePort:
scheduleInRunLoop:
APSEnv
setEnabledTopics:
da_dataWithHexString:
delegate
pushState
pushRegistrationTime
timeIntervalSinceNow
performTokenRegistrationRequestsWithToken:onBehalfOf:
_connectionForEnv:
_registerAPSTopicsForDelegates:withConnection:
_registerAPSTopics
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
scheduleIdentifier
_currentTruePCStyleForDelegate:
setPushState:
startFetchActivityForPush
_enabledTopicsForWrapper:
setPushRegistrationTime:
startFetchActivityForSystemPCStyle
_suspendedTopicsForWrapper:
curStyle
_resumeTopicsForSuspendedDelegate:
isSetToSystemFetchInterval
_suspendTopicsForDelegate:
setCurStyle:
setWithObject:
watchedCollections
refreshCollections:withReason:
_refreshWrapperForDelegate:
_unregisterTopicLocked:forDelegate:inEnvironment:
stopCollectionsRefresh
connection:didReceivePublicToken:
_wrapperIsSuspended:
_fakeTokenReceive
performSelector:withObject:afterDelay:
_unregisterWrapper:forTopic:inTopicDictionary:
_tearDownAPS
retryCollections:after:reason:
_overriddenPCStyleForWrapper:
_pushRegistrationForDelegateFailed:
connection:didReceiveMessageForTopic:userInfo:
_performBlockOnRefreshManagerThread:
registerDelegate:
unregisterDelegate:
registerTopic:forDelegate:inEnvironment:
unregisterTopic:forDelegate:inEnvironment:
delegateDidCompleteRefresh:
retryRefreshForDelegate:withCollections:after:originalRefreshReason:
pushTokenForEnvironment:
persistAPSAfterShutdown
enabledTopicWrappersByEnv
setEnabledTopicWrappersByEnv:
suspendedTopicWrappersByEnv
setSuspendedTopicWrappersByEnv:
wrappers
setWrappers:
connection
setConnection:
apsConnections
setApsConnections:
tokenRegistrationTimer
setTokenRegistrationTimer:
pcQueue
setPcQueue:
_persistAPSAfterShutdown
_enabledTopicWrappersByEnv
_suspendedTopicWrappersByEnv
_wrappers
_connection
_apsConnections
_tokenRegistrationTimer
_pcQueue
setWrapper:
setToken:
setPushKey:
setOnBehalfOfBundleIdentifier:
initWithToken:pushKey:wrapper:onBehalfOf:
cancel
setRequest:
hsa2Session
currentRequest
handleResponse:forRequest:shouldRetry:
setShouldRetry:
statusCode
wrapper
cancelFetchActivity
allHeaderFields
bytes
initWithBytes:length:encoding:
authenticationMethod
protectionSpace
sender
performDefaultHandlingForAuthenticationChallenge:
previousFailureCount
rejectProtectionSpaceAndContinueWithChallenge:
proposedCredential
useCredential:forAuthenticationChallenge:
connection:canAuthenticateAgainstProtectionSpace:
connection:didReceiveAuthenticationChallenge:
cancelAuthenticationChallenge:
username
credentialWithUser:password:persistence:
handleTrustChallenge:forAccount:
continueWithoutCredentialForAuthenticationChallenge:
shouldRetry
tokenRegistrationRequest:finishedWithError:shouldRetry:
serverTokenRegistrationURL
token
da_lowercaseHexStringWithoutSpaces
absoluteString
stringByAddingPercentEscapes
pushKey
URLWithString:
requestWithURL:cachePolicy:timeoutInterval:
request
setHTTPMethod:
setValue:forHTTPHeaderField:
getAppleIDSession
setHsa2Session:
appleIDHeadersForRequest:
enumerateKeysAndObjectsUsingBlock:
_initWithRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:
requestWithToken:pushKey:wrapper:onBehalfOf:
connection:didFailWithError:
connectionShouldUseCredentialStorage:
connection:willSendRequestForAuthenticationChallenge:
connection:didCancelAuthenticationChallenge:
connection:didReceiveResponse:
connection:didReceiveData:
connectionDidFinishLoading:
sendRegistrationRequestForAccount:
retryRegistrationRequest
_shouldRetry
_delegate
_wrapper
_onBehalfOfBundleIdentifier
_token
_pushKey
_request
_hsa2Session
setTokenRegistrations:
_dailyRefreshActivityFired
cancelRetryActivity
cancelDailyRefreshActivity
cancelAllTokenRegistrations
fetchActivityIdentifier
fetchInterval
fetchActivityCriteriaWithInterval:
XPCActivityIntervalFromSystemSetting
setFetchInterval:
startFetchActivityWithInterval:
_stringForStyle:
tokenRegistrations
startDailyRefreshActivity
refreshCollections
refreshReason
setRefreshReason:
setRefreshCollections:
_retryActivityFired
_pushState
_curStyle
_refreshReason
_pushRegistrationTime
_tokenRegistrations
_refreshCollections
_fetchInterval
setIsUpdate:
initWithDictionary:
setRequestParams:
isUpdate
requestParams
updateOofSettingsWithParams:consumer:
retrieveOofSettingsForConsumer:
isHotmailAccount
protocol
supportsSettingsCommand
oofGetResult
convertToDAOofParams
setResponseParams:
responseParams
settingsRequestFinishedWithResults:status:error:
_isUpdate
_requestParams
_responseParams
cancelCalendarDirectorySearchWithID:
performCalendarDirectorySearchForTerms:recordTypes:resultLimit:consumer:
displayName
setDisplayName:
firstName
lastName
emailAddress
setPreferredAddress:
_convertSearchQueryResults:
calendarDirectorySearchReturnedResults:
calendarDirectorySearchFinishedWithError:exceededResultLimit:
_terms
_recordTypes
_resultLimit
_searchID
_exceededResultLimit
setAttachmentUUID:
beginDownloadingAttachmentWithUUID:consumer:
setDownloadID:
attachmentUUID
numberWithLongLong:
cancelDownloadingInstance:error:
downloadProgressDownloadedByteCount:totalByteCount:
downloadFinishedError:
downloadID
_attachmentUUID
_downloadID
_coalesceAndReport
initWithDictionaryRepresentation:
mergeStatusReport:
initWithStatusReports:numOutstandingReports:timeout:completionBlock:
_numOutstandingReports
_completionBlock
_persistentUUIDToStatusReport
_finished
optionsTimeoutTimer
setOptionsTimeoutTimer:
_cancelOptionsTimer
finishCoreDAVTaskWithError:
taskManager
activeModalTask
principalURL
defaultDAVProbeTimeout
optionsProbe
setOptionsProbe:
registerAccount:forOperationWithName:
initWithURL:
setAccountInfoProvider:
error
unregisterAccount:forOperationWithName:
setCompletionBlock:
_serverProbeTimedOut
submitQueuedCoreDAVTask:
_probeAndSyncWithBlock:
_optionsProbe
_optionsTimeoutTimer
setAccountID:
setClient:
da_newGUID
setDelegateID:
_consumerCancelled
_delegateID
_client
_accountID
setResponse:
setCalendarID:
respondToShareRequestForCalendar:withResponse:consumer:
setShareID:
shareID
cancelShareResponseInstance:error:
calendarID
shareResponseFinishedWithError:
response
_response
_calendarID
_shareID
v16@0:8
@24@0:8@16
@16@0:8
v24@0:8@16
v24@0:8@?16
v24@0:8B16B20
v36@0:8@16q24B32
v56@0:8@16@24@32@40@?48
B16@0:8
v20@0:8B16
d16@0:8
v24@0:8d16
@?16@0:8
@"DAAccount"
#16@0:8
i16@0:8
v40@0:8@16@24@32
@"NSObject<OS_xpc_object>"
@"NSMutableArray"
@32@0:8@16@24
B32@0:8@16^v24
B24@0:8@16
B32@0:8@16@24
B40@0:8@16@24@32
B40@0:8^v16@24@32
B40@0:8@16q24B32B36
B44@0:8@16@24q32B40
B36@0:8@16q24B32
v64@0:8@16@24@32@40@48@?56
B32@0:8@16q24
B48@0:8@16@24@32@40
v44@0:8B16@20Q28@36
B40@0:8@16@24@?32
@"NSMutableDictionary"
^{IONotificationPort=}
^{__CFRunLoopSource=}
v32@0:8@16@24
Q16@0:8
v20@0:8i16
v44@0:8@16@24q32B40
v40@0:8@16q24B32B36
@"NSString"
v24@0:8@"NSDictionary"16
v24@0:8@"NSError"16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@64@0:8@16@24@32@40@48@56
@"NSDate"
@"NSArray"
@"NSObject<OS_dispatch_queue>"
q24@0:8@16
q16@0:8
@"NSObject<OS_dispatch_source>"
v32@0:8@?16@?24
v24@0:8^B16
@"NSTimer"
v32@0:8@"DASearchQuery"16@"NSArray"24
v32@0:8@"DASearchQuery"16@"NSError"24
v32@0:8@"DASearchQuery"16@"NSNumber"24
@40@0:8@16@24@32
@"DASearchQuery"
@"NSData"
@32@0:8@16B24B28
@"DAFolder"
i24@0:8@16
v44@0:8@16@24d32i40
@"NSMutableSet"
@"APSConnection"
@48@0:8@16@24@32@40
v32@0:8@"NSURLConnection"16@"NSError"24
B24@0:8@"NSURLConnection"16
v32@0:8@"NSURLConnection"16@"NSURLAuthenticationChallenge"24
B32@0:8@"NSURLConnection"16@"NSURLProtectionSpace"24
@"<DATokenRegistrationDelegate>"
@"DARefreshWrapper"
@"NSMutableURLRequest"
@"NSURLConnection"
@"AKAppleIDSession"
v36@0:8@16@24B32
v36@0:8@"DATokenRegistrationRequest"16@"NSError"24B32
@20@0:8i16
r*16@0:8
@24@0:8q16
v24@0:8q16
v28@0:8@16i24
v36@0:8@16d24i32
@"<DARefreshManagerDelegate>"
v40@0:8@16q24@32
v40@0:8@"ASSettingsTaskResponse"16q24@"NSError"32
@44@0:8@16@24B32@36
@"DAOofParams"
v28@0:8@16B24
v28@0:8@"NSError"16B24
@56@0:8@16@24@32@40Q48
@"NSSet"
v32@0:8q16q24
@44@0:8@16i24d28@?36
@"CoreDAVOptionsTask"
@"DADClient"
@48@0:8@16@24q32@40
Reachability changed notification %@
account
T@"DAAccount",&,N,V_account
lastRetryTimeout
Td,N,V_lastRetryTimeout
syncWhenReachable
TB,N,V_syncWhenReachable
networkReachableBlock
T@?,C,N,V_networkReachableBlock
isWaitingForPassword
TB,N,V_isWaitingForPassword
isMonitoring
TB,N,V_isMonitoring
trustHandler
T@"DATrustHandler",R,N
Couldn't checkin with our port. Aborting.
If running from the command line make sure you don't already have %@ registered with launchd.
DADAccessManager is Disabled. Cancelling Connection
com.apple.dataaccess.dataaccessd.PersistentPush
DADAccessManager event %@ clientName %@ is Entitled
DADAccessManager event %@ clientName %@ is NOT Entitled
DADAccessManager Received connection event %@ for clientName %@
DADAccessManager number of Current Clients %d and they are %@
Could not get client ID through xpc_connection_copy_entitlement_value(), the client name is: %@
Found an existing DADClient with the same bundle id and with NULL xpc connection, using this DADClient and reconnecting. The client ID is: 1%@
Found an existing DADClient with the same bundle id and non-NULL xpc connection. Clean it up then reuse this DADClient and reconnect. The client ID is: %@
Found an existing DADClient with the same bundle id with same xpc connection. The client ID is: %@
DADAccessManager Adding New Client for %@ for clientName %@
DADAccessManager No New Clients For Event %@ clientName %@
v16@?0@"NSObject<OS_xpc_object>"8
Should never call -init on DADAccessManager.  Use +sharedManager instead.
DADAccessManager Initializing
DADAccessManager REMOVING client %@ from Current Clients %@
Found an existing DADClient with the same bundle id, not changing the folder list. The client ID is: %@
Add DADClient for client %s
mainConnection
T@"NSObject<OS_xpc_object>",&,N,V_mainConnection
clients
T@"NSMutableArray",&,N,V_clients
DADAgentsStoppedNotification
com.apple.purplebuddy.setupdone
com.apple.dataaccessd
Registered for wake notification
IONotificationPortGetRunLoopSource returned NULL, can't register for wake notification
IORegisterForSystemPower returned MACH_PORT_NULL, can't register for wake notification
DataAccess
AccountInformation.plist
DAAgentClass
No holiday subscribed calendar account exists. Creating a new one
HOLIDAY_CALENDAR_DESCRIPTION
Error saving account %@: %@
v20@?0B8@"NSError"12
iPhone Version %@
v8@?0
Not creating an agent for account info %@, it refused to init itself
Loading up agent for account "%@" (%@)
Enable active sync
Disable active sync
Identifier
com.apple.eas.account
Error when cleaning up client restrictions for persistentUUID %@.  Error %@
Tearing down connection cache
Tore down connection cache
Handling power change call with messageType %d
Removing subscribed calendar for deleted account with id %@
Removing stores for account with id %@
ACCOUNTDCOERROR Removing calendar store for deleted account with id %@
ACCOUNTDCOERROR Removing ABAccount for deleted account id %@
problem handling policy update request: no known account with ID %@
Did not start monitoring folder ids %@, because the agent said "nope"
Did not start monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not stop monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not suspend monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not resume monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not add persistent monitoring folder ids %@, because the agent said "nope"
Did not add persistent monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not remove persistent monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not clear persistent monitoring folders, because I have no agent containing account id %@.  Agents: %@
Removing subscribed calendar, as it's account id %@ isn't one of the account ids I know about: %@ | %@
DA is NOT removing orphan accounts, because we're in a holding pattern.
DA is NOT removing orphan accounts, because some joker told us not to in behavior options
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccessTools_Sim/DataAccess-1571.2.4/DataAccess/DADAgentManager.m
<Unknown File>
When clearing orphaned stores, we have an account with no accountID.  That's bad.  account: %@
ACCOUNTDCOERROR Removing calendar store, as its account id %@ isn't one of the account ids I know about: %@ | %@
Removing Calendar change tracking client, as its change tracking identifier "%@" isn't one of the account ids I know about: %@ | %@
ACCOUNTDCOERROR Removing ABAccount, as its account id %@ isn't one of the account ids that I know about %@ %@
ACCOUNTDCOERROR Removing contact store, as it's account id %@ isn't one of the account ids I know about: %@
ACCOUNTDCOERROR Removing contact search store, as it's account id %@ isn't one of the account ids I know about: %@
Removing AB change tracking client, as its change tracking identifier "%@" doesn't belong to one of the account ids I know about: %@
Ignoring Notes orphan check.  You asked for it.
ACCOUNTDCOERROR Removing notes store, as it's account id %@ isn't one of the account ids I know about: %@
Failed to save: %@
Notes database was corrupted! Non-fatal at this point, but just barely
Removing Bookmark sync data, this may be a no-op if you have none
DAAgentManager: Device is Unlocked %d and PastBuddy is %d
DAAgentManager: NO startAgentWhenSystemReadyBlock defined. This will not load any agents
DAAgentManager: System Ready Calling Load Agents Block
DAAgentManager: System Not Yet Ready. We are Not Loading Agents
DAAgentManager: Resetting _disableMonitoringRequests to 0 and Loading Agents
Loading our agents
Removing CFURLCache entries
com.apple.notifyd.matching
PCPreferencesDidChangeNotification
XPC: Received PCPreferencesDidChangeNotification due to user change
Agents loaded and monitoring.  They are %@
DAAgentManager: System Not Yet Ready. We will Register for BuddyFinished and KeyBagLock status Notification
REGISTER FOR BUDDY
EXITING REGISTER FOR BUDDY
Agent %@ has stopped monitoring
Stopping our agents (which are %@)
v16@?0@"DAAgent"8
Still waiting for %d agents to shut down.  Spinning a run loop. Outstanding agents are %@
Run Loop finished.  Active Agent count is now %d.
Agents stopped and saved
DADAgentManager asked to enableMonitoringAgents. Current _disableMonitoringRequests = %d
DADAgentManager _disableMonitoringRequests reached 0. Start Loading Agents..
-[DADAgentManager enableMonitoringAgents]
_disableMonitoringRequests >= 0
DADAgentManager asked to disableMonitoringAgents current _disableMonitoringRequests = %d
DADAgentManager _disableMonitoringRequests reached 1. Stop Loading Agents..
-[DADAgentManager disableMonitoringAgents]
_disableMonitoringRequests > 0
Found an EAS Account %@
=======
Somebody isn't maintaining their account setup correctly
unable to signal launchd to start dataaccessd: errno %d
unable to signal launchd to stop dataaccessd: errno %d
unable to cleanup launchd semaphore: errno %d
unable to signal launchd to keep dataaccessd alive: errno %d
unable to cleanup launchd semaphore so that dataaccessd can be pressured exit: errno %d
activeAgents
T@"NSMutableArray",&,N,V_activeAgents
subCalHandlers
T@"NSMutableArray",&,N,V_subCalHandlers
DAAgentManager: System Ready Check Fired with Name %@
Library/Preferences/com.apple.dataaccess.launchd
Library/Preferences/com.apple.dataaccess.activesync
DADRequestClientStatusDumpNotification
Creating a new DADClient for Connection %p and ClientID %@
ClientDied Not Dispatching XPC Event %@ for DADClient %@
Dispatching XPC Event %@ for DADClient %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccessTools_Sim/DataAccess-1571.2.4/DataAccess/DADClient.m
DADClient already has a connection. Client bundle ID is: %@
Destroying DADClient %p for Connection %p and ClientID %@
(unknown)
Had outstanding agent disables count %d.  Going to reenable them
DAPERF DADClient Bumped priority, someone's waiting
DAPERF DADClient Dropping priority back to refresh
DAPERF DADClient Dropping priority, no one's waiting
DAPERF DADClient Bumping priority to refresh
B24@?0r*8@"NSObject<OS_xpc_object>"16
%s in %s:%d
-[DADClient _beginMonitoringFolders:]
Received begin monitoring folders request with persistent flag: %@
DATransaction starting, ID: %@
Malformed request from client in %s: %@
Malformed request from client in %s: bad accountID
Sending pending folder updates to client. Updated folders: %@
Remote client disconnected and reconnected while begin monitoring folders.
v12@?0B8
B8@?0
-[DADClient _stopMonitoringFolders:]
-[DADClient _resumeMonitoringFolders:]
Remote client disconnected and reconnected while resuming monitoring folders.
-[DADClient _suspendMonitoringFolders:]
Buddy needs to Run. Resetting Outstanding Agents and Registering for Buddy for Client %@
Told to start monitoring agents. Outstanding agent disables is %d
You enabled agent monitoring without disabling it.  That better be due to a dad crasher.  Client %@
Process %@ told us to stop monitoring agents. Outstanding agent disables is %d
_requestFolderContentsUpdateForFolders for account %@, dataclass 0x%x isUserRequested %d
Block: request folder contents update (accounts %@, folders %@): error updating folder contents
Deferring request to update folders %@
Not forwarding request to update folders, as we already did that recently, and have a deferred request queued
-[DADClient _requestFolderContentsUpdate:]
_requestAllFolderContentsUpdateForAccountId %@, dataclasses 0x%x, isUserRequested: %d
__85-[DADClient _requestAllFolderContentsUpdateForAccountId:dataclasses:isUserRequested:]_block_invoke
[DADAgentManager sharedManager] number of Current Agents %d and they are %@
Block: request all folder contents update (accounts %@): error updating folder contents
Block: DADClient %@ with XPC Connection %@ is In Bad State
Deferring request to update all folders
Not forwarding request to update all folders, as we already did that recently, and have a deferred request queued
-[DADClient _requestAllFolderContentsUpdate:]
_requestFolderListUpdateForAccountId %@, dataclass 0x%x, isUserRequested %d
Block: request folder list update (accounts %@): error updating folder contents
Deferring request to update folder list
Not forwarding request to update folder list, as we already did that recently, and have a deferred request queued
-[DADClient _requestFolderListUpdate:]
Account ID is NULL when opening a contacts search. BailWhale
Query Dictionary Representation is NULL when opening a contacts search. BailWhale
-[DADClient _processMeetingRequests:]
%@: error processing meeting 
_resetCertWarningsForAccountWithId %@ dataclasses %x
error resetting cert warnings account ID %@ dataclasses 0x%x
v40@?0@"NSString"8@"NSString"16q24@"NSError"32
root
Swallowing decoder exception of %@, treating as null data
No status reports available
v16@?0@"NSArray"8
_resetThrottleTimersForAccountWithId %@
Account ID is NULL when starting attachment download.
Attachment UUID is NULL when starting attachment download.
_beginDownloadingAttachment UUID: %@, accountID: %@
Attachment UUID is NULL when cancelling attachment download.
_cancelDownloadingAttachmentEvent downloadID: %@
Received a cancel for download %@, but that download doesn't exist any more
Account ID is NULL when starting calendar share response.
Attachment UUID is NULL when starting calendar share response.
Response type is NULL when starting calendar share response.
_respondToSharedCalendar UUID: %@, response: %d, accountID: %@
Daemon asked to create tz info cache
ASTimeZone
ASUtilsLazyClass
Account ID is NULL when opening a settings request. BailWhale
'accountID' is nil when starting calendar availability request.
'startDate' is nil when starting calendar availability request.
'endDate' is nil when starting calendar availability request.
Starting calendar availability request with accountID: [%@], startDate: [%@], endDate: [%@], ignoredEventID: [%@], addresses: [%@]
'accountID' is nil when starting calendar directory search.
Starting calendar directory search with accountID: [%@] recordTypes: [%@] resultLimit: [%lu] terms: [%@]
-[DADClient _asPolicyKeyChanged:]
Launching %@
Failed to launch %@: %@
v16@?0@"NSError"8
com.apple.dataaccess.statusreportaggregator
-[DADClient applyClientStatusReportToAggregator:]
Client of DADClient died, cleaning up.
LOOK AT ME!!!! Got an unknown error, the client messed with our connection in a way we weren't expecting.  If you're seeing this, get ready for some pain
Received xpc message %@
unknown request sent to client.
request: %@
conn
T@"NSObject<OS_xpc_object>",&,N,V_conn
watchedIDs
T@"NSMutableDictionary",&,N,V_watchedIDs
busyIDs
T@"NSMutableDictionary",&,N,V_busyIDs
updatedIDs
T@"NSMutableDictionary",&,N,V_updatedIDs
numOutstandingAgentDisables
Ti,N,V_numOutstandingAgentDisables
numOutstandingBlockingClientCalls
Ti,N,V_numOutstandingBlockingClientCalls
numOutstandingRefreshPriorityClientCalls
Ti,N,V_numOutstandingRefreshPriorityClientCalls
accountTimers
T@"NSMutableDictionary",&,N,V_accountTimers
actionDelegatesById
T@"NSMutableDictionary",&,N,V_actionDelegatesById
clientName
T@"NSString",&,N,V_clientName
clientBundleID
T@"NSString",&,N,V_clientBundleID
persistent
TB,R,N,V_persistent
[%@] finished with error %@
[%@] finished, but could not find an account with the ID %@
Could not get an account with the ID [%@]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
folderIdToLastFolderContentsRequestDate
T@"NSMutableDictionary",&,N,V_folderIdToLastFolderContentsRequestDate
lastAllFolderContentsRequestDate
T@"NSDate",&,N,V_lastAllFolderContentsRequestDate
lastFolderListRequestDate
T@"NSDate",&,N,V_lastFolderListRequestDate
lastFolderWipeRequestDate
T@"NSDate",&,N,V_lastFolderWipeRequestDate
deferredAllFolderContentsSource
T@"NSObject<OS_dispatch_source>",W,N,V_deferredAllFolderContentsSource
deferredFolderListSource
T@"NSObject<OS_dispatch_source>",W,N,V_deferredFolderListSource
deferredFolderContentsSource
T@"NSObject<OS_dispatch_source>",W,N,V_deferredFolderContentsSource
Signal USR1 (30) received.  Exit if xpc transaction count is 0.
The xpc transaction count is %d. Do nothing.
QUIT received.  Shutting down.
HUP received.  HUP is currently unused.  Ignoring.
USR2 received.  Dumping our state.
Initiating DA Shutdown...
Pending account setup, rescheduling shutdown timer
dataaccessd's agents are disabled, rescheduling shutdown timer
DA is exiting: no more accounts
Cleaning up launchd semaphore
UserManagementFramework: Ending Switch Task For %@
No more DA accounts, will shutdown in %d seconds if none are created
Add Force Logout Timer in %d seconds
No Active Agents to sync.
EAS Accounts Found. Forcing Logout without manual sync
UserManagement. Switch Tasks already pending. NOOP
UserManagementFramework: Creating Switch Tasks For Pending Transcation Count %d
DA-Blocking Task
LogoutReceived
UserManagementFramework: No Pending Transcation Count. Exiting without blocking logout.
All Transactions Finished. Initiating DA Shutdown
com.apple.language.changed
com.apple.purplebuddy.LanguageResetReady
com.apple.crash_mover
v12@?0i8
com.apple.MobileSync.BackupAgent.WillStart
com.apple.dataaccessd.dadOperation
com.apple.dataaccessd.dadHighAvailability
%@| %@
v28@?0i8@"NSString"12@"NSString"20
Device is a %@AppleInternal install
Enabling CFNetwork diagnostics
CFNETWORK_DIAGNOSTICS
userSwitchTasks
T@"NSArray",&,N,V_userSwitchTasks
Received notificaion "%@" indicating a language change.  Going to exit to pick up new locale support
Could not get an account with the ID %@
DADClientContactsSearchDelegate finished with status %d. Finishing DASearchQuery %p
DADServerContactsSearchTask finished, but could not find an account with the ID %@
query
T@"DASearchQuery",&,N,V_query
queryResultData
T@"NSData",&,N,V_queryResultData
<%@: %p> { Folder %@, hasRemoteChanges: %d, isInitialUberSync %d isResyncAfterConnectionFailed %d actions %@ }
folder
T@"DAFolder",&,N,V_folder
hasRemoteChanges
TB,N,V_hasRemoteChanges
isInitialUberSync
TB,N,V_isInitialUberSync
actions
T@"NSArray",&,N,V_actions
isResyncAfterConnectionFailed
TB,N,V_isResyncAfterConnectionFailed
isResyncAfterServerError
TB,N,V_isResyncAfterServerError
containsPostponedActions
TB,N,V_containsPostponedActions
com.apple.dataaccessd.darefresh.pcqueue
DARefreshManager enabled wrappers:
Topic "%@" {
DARefreshManager suspended wrappers:
DARefreshManager wrappers:
production
development
demo
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccessTools_Sim/DataAccess-1571.2.4/DataAccess/DARefreshManager.m
Couldn't come up with an env string for DAEnvString %@
com.apple.dataaccess.dataaccessd.aps
com.apple.dataaccess.dataaccessd.aps.dev
com.apple.dataaccess.dataaccessd.aps.demo
Forcing APS environment to %@
Setting our enabled APS topics to %@
1051051051051051051051051051051051051051051051051051051051051050
Wrapper %@ is in state %d and its last push registration time was %@ (%f)
No public token. We won't be re-registering our tokens with the server
Timer fired. Re-registering everything with APS
Push registration failed for delegate %@. Falling back to poll.
Resuming XPC Activties for polling
Suspending topic "%@" for delegate %@
Resuming XPC Fetch Activities for polling
Resuming topic "%@" for delegate %@
Account %@ : Resuming Push Delegate's PC style changed from %d to %d
Account %@ : Suspending push and resuming XPC Activity for polling
Our push setting was not changed from current value: %d. Doing nothing and hoping for the best.
Received token %@ from APS. Registering all delegates with their servers
Received a message from APS for topic %@ with user info %@.
Received an APS push for %@ but we don't have any enabled delegates registered for that topic.
Enabled waiters: 
Waiter %@: %@
Suspended waiters: 
Registering delegate %@ for PC notifications
Begin Unregistering delegate %@ for all PC and APS notifications
Unregistering delegate %@ for all PC and APS notifications
Shutdown: Wrapper %@ Leaving push topics regiestered. delegate %@ for all PC and APS notifications
Delegate %@ was unregistered, but it was never registered
Delegate %@ tried to register for a nil topic.
Registering delegate %@ for topic %@ in environment %@
Delegate is not set to push, so putting it on the suspended queue
Removing refresh manager delegate for account %@ from topic %@
Delegate %@ tried to unregister for the topic %@, but that delegate is not registered with the refresh manager
No more delegates for any topic. Tearing down APS
Setting ourself enabled for these APS topics: %@
Resuming account %@ for polling
Delegate %@ finished a refresh but it is not registered with the refresh manager
Delegate %@ told us to retry a refresh later but it is not registered with the refresh manager
enabledTopicWrappersByEnv
T@"NSMutableDictionary",&,N,V_enabledTopicWrappersByEnv
suspendedTopicWrappersByEnv
T@"NSMutableDictionary",&,N,V_suspendedTopicWrappersByEnv
wrappers
T@"NSMutableSet",&,N,V_wrappers
connection
T@"APSConnection",&,N,V_connection
apsConnections
T@"NSMutableDictionary",&,N,V_apsConnections
tokenRegistrationTimer
T@"NSTimer",&,N,V_tokenRegistrationTimer
pcQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pcQueue
persistAPSAfterShutdown
TB,N,V_persistAPSAfterShutdown
The server accepted our push token request (status %d)
The server returned a status of %d to our token registration request. Falling back to PC. Server response headers are %@
The server returned a response of "%@"
Can authenticate against protection space %@? %@
%s for auth mechanism %@
Cancelling authentication because it's already failed
Received an authentication challenge for account %@ method %@
Responding to authentication challenge with username %@ and password
Token registration - Continuing without credential for challenge
Token registration - Waiting for runloop callback to decide what to do
Retry token registration
The token registration connection failed to load for account ID %@: %@
Token registration connection finished for account %@
Can't send a token registration for %@ because it doesn't implement serverTokenRegistrationURL.
%@?token=%@&key=%@
POST
User-Agent
Registering token %@ with the server at %@
v32@?0@8@16^B24
wrapper
T@"DARefreshWrapper",W,N,V_wrapper
onBehalfOfBundleIdentifier
T@"NSString",&,N,V_onBehalfOfBundleIdentifier
token
T@"NSData",W,N,V_token
pushKey
T@"NSString",W,N,V_pushKey
hsa2Session
T@"AKAppleIDSession",&,N,V_hsa2Session
delegate
T@"<DATokenRegistrationDelegate>",W,N,V_delegate
request
T@"NSMutableURLRequest",&,N,V_request
T@"NSURLConnection",&,N,V_connection
shouldRetry
TB,N,V_shouldRetry
Starting daily refresh xpc activity.
%@: Stopping XPC Activities for Refreshing Collections
%@: Cancelling pending Token Registration request
Push
Poll
Manual
UNKNOWN!
com.apple.dataaccess.%@
XPC: Registering Fetch Activity For Account %@ AccountID %s, Interval %d
XPC: Performing Fetch Activity For Account %@ AccountID %s, Interval %d
XPC: Manual Sync Fetch Activity For Account %@ AccountID %s, Interval %d
XPC: Starting a Temp Sync Fetch Activity before Transitioning to Push For Account %@ AccountID %s, Interval %d
XPC: Cancelling Fetch Activity For Account %@ AccountID: %s
<DARefreshWrapper 
 for delegate %@
: Push state %d, style %@
, last registration: %@
, %ld outstanding token registrations
Performing token registration request for %@ with watched collections %@
Retry activity  fired for delegate %@
Daily refresh activity fired for delegate %@
Setting a timer to refresh the collections %@ for delegate %@ after %f seconds
tokenRegistrations
T@"NSMutableSet",&,N,V_tokenRegistrations
refreshReason
Ti,N,V_refreshReason
refreshCollections
T@"NSMutableSet",&,N,V_refreshCollections
fetchInterval
Tq,N,V_fetchInterval
T@"<DARefreshManagerDelegate>",W,N,V_delegate
pushState
Ti,N,V_pushState
pushRegistrationTime
T@"NSDate",&,N,V_pushRegistrationTime
curStyle
Ti,N,V_curStyle
com.apple.dataaccess.dataaccessd.retry
com.apple.dataaccess.dataaccessd.dailyrefresh
DADClientSettingsDelegate initialized.
DADClientSettingsDelegate dealloced.
Account %@ supports oof %@
Account %@ is a hotmail account
Account %@ is not ASAccount class
DADClientSettingsDelegate finished with status %d.
isUpdate
TB,N,V_isUpdate
requestParams
T@"DAOofParams",&,N,V_requestParams
responseParams
T@"DAOofParams",&,N,V_responseParams
%@ %@
DADAttachmentDownloadDelegate finished with error %@
DADAttachmentDownloadDelegate finished, but could not find an account with the ID %@
attachmentUUID
T@"NSString",&,N,V_attachmentUUID
downloadID
T@,&,N,V_downloadID
The options task timer fired, but the task manager is modal. We'll wait until it drops modal before tearing down this task.
We weren't able to reach the server at %@ within %lf seconds. Bailing out of this refresh early.
Ignoring probe request for "%@" as we already have one outstanding
%@Probe
The babysitter has put this account in timeout, so giving up on this probe sync. %@
Probing the host at %@ to see if we have a good enough network connection. We'll wait up to %lf seconds.
Account "%@" couldn't reach the server at %@: %@
We were able to reach the server at %@. Continuing with the refresh
optionsProbe
T@"CoreDAVOptionsTask",&,N,V_optionsProbe
optionsTimeoutTimer
T@"NSTimer",&,N,V_optionsTimeoutTimer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccessTools_Sim/DataAccess-1571.2.4/DataAccess/DADClientDelegate.m
finishWithError: should be implemented in the subclass
client
T@"DADClient",W,N,V_client
accountID
T@"NSString",&,N,V_accountID
finished
TB,N,V_finished
consumerCancelled
TB,N,V_consumerCancelled
delegateID
T@"NSString",&,N,V_delegateID
MobileCalDAVAccount
DADClientShareResponseDelegate finished with error %@
DADClientShareResponseDelegate finished, but could not find an account with the ID %@
response
Tq,N,V_response
calendarID
T@"NSString",&,N,V_calendarID
shareID
T@"NSString",&,N,V_shareID
