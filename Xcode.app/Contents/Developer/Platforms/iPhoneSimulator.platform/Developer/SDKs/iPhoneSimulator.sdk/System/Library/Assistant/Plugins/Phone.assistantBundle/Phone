com.apple.assistant
/System/Library/VoiceServices/PlugIns/VoiceDial.vsplugin
Exceptions-%@
plist
DigitDialExceptions
Phone
PHAssistantCall
-[PHAssistantCall _validate]: Call is an emergency call, passing validation
-[PHAssistantCall _validate]: No -callRecipient specified, failed validation
No recipient was specified
-[PHAssistantCall _validate]: No -destinationID found, failed validation
No destination ID was specified
-[PHAssistantCall _validate]: Call was FaceTime Video, but FaceTime Video is blocked, failed validation
-[PHAssistantCall _validate]: Call was FaceTime Audio, but FaceTime Audio is blocked or unsupported, failed validation
-[PHAssistantCall _validate]: Call was FaceTime Video, but FaceTime Video is not available, failed validation
-[PHAssistantCall _validate]: Call was FaceTime Audio, but FaceTime Audio is not available, failed validation
-[PHAssistantCall _validate]: Call was telephony, but device doesn't support telephony calls, failed validation
-[PHAssistantCall _validate]: FaceTime video not supported in CarPlay
FaceTime video not supported in CarPlay
-[PHAssistantCall _validate]: Airplane mode is on, failed validation
-[PHAssistantCall _validate]: No cellular service, failed validation
-[PHAssistantCall _validate]: Destination ID %@ is an exception for country %@, passing validation
-[PHAssistantCall _validate]: Destination ID %@ is NOT VALID for country %@ according to PNIsValidPhoneNumberForCountry, failing validation
-[PHAssistantCall _validate]: device has no country code, failing validation
Device has no country code
Siri punch out URL is handling an emergency call request, with destination ID %@
The destinationID is whitelisted as an emergency number, so the punch out URL will contain the destinationID: %@
The destinationID is NOT whitelisted, so we will not include the destinationID in the URL but dial a generic emergency number
Siri punch out URL created dial request %@
-[PHAssistantCall _performAppPunchOutWithURL:withServiceHelper:completion:]: appPunchOutURL: %@
-[PHAssistantCall _performAppPunchOutWithURL:withServiceHelper:completion:]: appPunchOut: %@
Failed to perform app punch-out with URL: %@
Unable to open url
v24@?0@"SABaseCommand"8@"NSError"16
Unable to call recipient
-[PHAssistantCall _performAppPunchOutWithURL:withServiceHelper:completion:]: appPunchOutResult: %@
v16@?0@"AceObject"8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
com.apple.calls.mobilephone
Default
v8@?0
B16@?0@"VMVoicemail"8
PHSearchRequest
Initial search to voicemail database returned %lull voicemails.
Requested call types: %@ with search parameters: {outgoing: %@, missed: %@, startDate: %@}
date > %@ AND callType IN %@ AND callStatus IN %@
date > %@ AND callType IN %@ AND callStatus == %@
date > %@ AND callType IN %@
Initial search to recents database returned %lull calls.
System/Library/Assistant/Plugins/AddressBook.assistantBundle/AddressBook
ABAssistantManager
/Applications/MobilePhone.app
UNKNOWN_CALLER
General
recordID
v32@?0@"SAPerson"8Q16^B24
B24@?0@"VMVoicemail"8@"NSDictionary"16
B24@?0@"CHRecentCall"8@"NSDictionary"16
v32@?0@"VMVoicemail"8Q16^B24
v32@?0@"CHRecentCall"8Q16^B24
After filtering, results contains %lull objects.
voicemailManager
T@"VMVoicemailManager",&,N,V_voicemailManager
recentsManager
T@"CHManager",&,N,V_recentsManager
SAPersonAttribute_PHAssistantBundleAdditions
PHAssistantGetRecordRefWithAssistantURLAndInternalUUID fetching ABRecordRef for URL %@ and internal UUID %@
Found record in address book with internal UUID %@
Found record in address book with assistant ID %@
No record in address book with assistant ID %@ or internal UUID %@
** TUCAssertion failure: %@
Address book couldn't be created
ABRecordRef PHAssistantGetRecordRefWithAssistantURLAndInternalUUID(NSURL *__strong, NSString *__strong)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobilePhone_Sim/MobilePhone-2236.2.12/Assistant/SAPersonAttribute_PHAssistantBundleAdditions.m
<Unknown File>
Looking for destinationID and recordID for typeData %@
** TUAssertion failure: %@
SAPersonAttribute had label %@ but nil -object value
SAPersonAttribute had label %@, SAPerson %@, but nil identifier
Found recordID %@ for record %@
Considering AB card's item with label %@
Found destinationID %@ for record %@
Didn't find label %@ in AB card
Unable to copy multi-value for unified record %@
-[SAPersonAttribute destinationID] data is SAEmail
-[SAPersonAttribute destinationID] explicit destinationID was encoded in the SAEmail: %@
-[SAPersonAttribute destinationID] data is SAPhone %@
-[SAPersonAttribute destinationID] explicit destinationID was encoded in the SAPhone: %@
DestinationID
RecordID
-[SAPersonAttribute destinationID]
-[SAPersonAttribute destinationID]: found cached destination ID: %@
-[SAPersonAttribute recordID]
-[SAPersonAttribute recordID]: found cached recordID: %@
destinationID
T@"NSString",R
T@"NSNumber",R
initWithDictionary:
_addFaceTimeAvailabilityListener
_removeFaceTimeAvailabilityListener
dealloc
callRecipient
object
faceTime
faceTimeAudio
destinationID
length
rangeOfString:
sharedInstance
addListenerID:forService:
removeListenerID:forService:
availabilityForListenerID:forService:
displays
countByEnumeratingWithState:objects:count:
bundleWithPath:
_shouldApplyInternationalAssist
alloc
initWithFormat:
_voiceDialBundle
pathForResource:ofType:inDirectory:
initWithContentsOfFile:
emergencyCall
boolValue
commandFailedWithReason:
faceTimeAvailable
commandFailedWithErrorCode:
callingAvailable
_faceTimeVideoIsAvailable
_faceTimeAudioIsAvailable
supportsTelephonyCalls
_isCarPlayActive
canAttemptTelephonyCallsWithoutCellularConnection
init
airplaneMode
supportsPrimaryCalling
_countryCode
_copyExceptionsForCountryCode:
containsObject:
emergencyProvider
initWithProvider:
setPerformDialAssist:
setDestinationID:
setDialType:
recordID
intValue
faceTimeProvider
telephonyProvider
setVideo:
setCallIdentifier:
handsFreeCall
setOriginatingUIType:
speakerphoneCall
setAudioSourceIdentifier:
appPunchOut
refId
setRefId:
setPunchOutUri:
callStarted
setPhoneLogId:
handleCommand:completion:
_validate
_appPunchOutURL
dictionary
_performAppPunchOutWithURL:withServiceHelper:completion:
performWithCompletion:
performWithCompletion:serviceHelper:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
_isEmailAddress
.cxx_destruct
voicemailManager
isOnline
isDeleted
isTrashed
isBlocked
voicemailsPassingTest:
isDataAvailable
count
array
numberWithUnsignedInt:
addObject:
arrayWithObjects:count:
addObjectsFromArray:
outgoing
missed
start
distantPast
recentsManager
predicateWithFormat:
recentCallsWithPredicate:
labelForRawAddress:
_appearsToBePhoneNumber
phone
setLabel:
setNumber:
_appearsToBeEmail
email
setEmailAddress:
isEqualToString:
abAddressBookRef
addressBookRecordForRawAddress:
loadFrameworkAtPath:andStoreHandle:bundle:
classNamed:
newSAPersonFromABPerson:
person
setEmails:
setPhones:
localizedStringForKey:value:table:
setFullName:
voiceMail
date
setCallTime:
duration
numberWithUnsignedInteger:
setLength:
personAttribute
recordIDStringFromVoicemail:
unsignedIntValue
personFromAddressBookRecord:
setObject:
fullName
setDisplayText:
sender
personFromRawAddress:
setData:
typedDataForRawAddress:
setTypedData:
setContact:
dataURL
setIdentifier:
isRead
numberWithBool:
setIsNew:
callHistory
callStatus
callerId
addressBookRecordId
setOutgoing:
setMissed:
callerIdIsBlocked
setBlocked:
callType
setFaceTime:
setFaceTimeAudio:
callbackDestinationID
senderDestinationID
numberWithInt:
stringValue
contacts
arrayWithCapacity:
identifier
queryParameters
objectForKey:
enumerateObjectsUsingBlock:
contactsRecordIDs
compare:
isNew
predicateWithBlock:
read
voicemailFilterPredicate
voicemails
evaluateWithObject:
phoneVoiceMailFromVMVoicemail:
last
recentCallsFilterPredicate
recentCalls
phoneCallHistoryFromRecentCall:
searchCompleted
setPhoneSearchResults:
_perform
setVoicemailManager:
setRecentsManager:
_voicemailManager
_recentsManager
sharedAddressBook
absoluteString
stringWithFormat:
stringWithUTF8String:
currentHandler
handleFailureInFunction:file:lineNumber:description:
typedData
label
handleFailureInMethod:object:file:lineNumber:description:
internalGUID
stringWithString:
emailAddress
number
loadDestinationID:recordID:
-[PHAssistantCall _validate]: Call is an emergency call, passing validation
-[PHAssistantCall _validate]: No -callRecipient specified, failed validation
-[PHAssistantCall _validate]: No -destinationID found, failed validation
-[PHAssistantCall _validate]: Call was FaceTime Video, but FaceTime Video is blocked, failed validation
-[PHAssistantCall _validate]: Call was FaceTime Audio, but FaceTime Audio is blocked or unsupported, failed validation
-[PHAssistantCall _validate]: Call was FaceTime Video, but FaceTime Video is not available, failed validation
-[PHAssistantCall _validate]: Call was FaceTime Audio, but FaceTime Audio is not available, failed validation
-[PHAssistantCall _validate]: Call was telephony, but device doesn't support telephony calls, failed validation
-[PHAssistantCall _validate]: FaceTime video not supported in CarPlay
-[PHAssistantCall _validate]: Airplane mode is on, failed validation
-[PHAssistantCall _validate]: No cellular service, failed validation
-[PHAssistantCall _validate]: Destination ID %@ is an exception for country %@, passing validation
-[PHAssistantCall _validate]: Destination ID %@ is NOT VALID for country %@ according to PNIsValidPhoneNumberForCountry, failing validation
-[PHAssistantCall _validate]: device has no country code, failing validation
Siri punch out URL is handling an emergency call request, with destination ID %@
The destinationID is whitelisted as an emergency number, so the punch out URL will contain the destinationID: %@
The destinationID is NOT whitelisted, so we will not include the destinationID in the URL but dial a generic emergency number
Siri punch out URL created dial request %@
-[PHAssistantCall _performAppPunchOutWithURL:withServiceHelper:completion:]: appPunchOutURL: %@
-[PHAssistantCall _performAppPunchOutWithURL:withServiceHelper:completion:]: appPunchOut: %@
Failed to perform app punch-out with URL: %@
-[PHAssistantCall _performAppPunchOutWithURL:withServiceHelper:completion:]: appPunchOutResult: %@
Initial search to voicemail database returned %lull voicemails.
Requested call types: %@ with search parameters: {outgoing: %@, missed: %@, startDate: %@}
Initial search to recents database returned %lull calls.
After filtering, results contains %lull objects.
PHAssistantGetRecordRefWithAssistantURLAndInternalUUID fetching ABRecordRef for URL %@ and internal UUID %@
Found record in address book with internal UUID %@
Found record in address book with assistant ID %@
No record in address book with assistant ID %@ or internal UUID %@
Looking for destinationID and recordID for typeData %@
Found recordID %@ for record %@
Considering AB card's item with label %@
Found destinationID %@ for record %@
Didn't find label %@ in AB card
[WARN] Unable to copy multi-value for unified record %@
-[SAPersonAttribute destinationID] data is SAEmail
-[SAPersonAttribute destinationID] explicit destinationID was encoded in the SAEmail: %@
-[SAPersonAttribute destinationID] data is SAPhone %@
-[SAPersonAttribute destinationID] explicit destinationID was encoded in the SAPhone: %@
-[SAPersonAttribute destinationID]
-[SAPersonAttribute destinationID]: found cached destination ID: %@
-[SAPersonAttribute recordID]
-[SAPersonAttribute recordID]: found cached recordID: %@
PHAssistantCall
AFServiceCommand
NSObject
PHSearchRequest
PHAssistantBundleAdditions
v24@0:8@?16
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@?16@24
v32@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24
@24@0:8@16
@24@0:8@"NSDictionary"16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v16@0:8
v40@0:8@16@24@?32
@"NSBundle"
^v24@0:8@16
@24@0:8^v16
v24@0:8@16
@"VMVoicemailManager"
@"CHManager"
v32@0:8^@16^@24
