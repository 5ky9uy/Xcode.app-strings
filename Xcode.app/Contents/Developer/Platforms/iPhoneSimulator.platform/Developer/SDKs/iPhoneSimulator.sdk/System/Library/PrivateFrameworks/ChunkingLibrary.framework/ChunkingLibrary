CSsql_do
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ChunkingLibrary_Sim/ChunkingLibrary-173/ChunkStore/ChunkStore.c
SQL DB not open: '%s'
SQL error: '%s', (%d) %s
CSsql_get64
%s SQL DB not open: '%s'
sqlite3_prepare_v2 failed: %d %s
sqlite3_step failed: %d %s
CSsql_get64_safe
out64 parameter is NULL!
CSopenDB
sqlite3_open_v2 failed, dbname:"%s": %d %s
sqlite3_open_v2 failed, dbname:"%s": %s
PRAGMA locking_mode = EXCLUSIVE;
failed to set locking_mode on db (%s)
PRAGMA page_size = 4096;
failed to set page_size pragma on db (%s)
PRAGMA journal_mode = WAL;
failed to set journal mode (%s)
PRAGMA wal_autocheckpoint = 2000;
failed to set wal_autocheckpoint (%s)
PRAGMA temp_store = MEMORY
BEGIN EXCLUSIVE
CREATE TABLE IF NOT EXISTS CSDatabaseVersion (version INTEGER)
SELECT version FROM CSDatabaseVersion
changing db version: %llu/%llu
UPDATE CSDatabaseVersion SET version = %lld
UPDATE CSDatabaseVersion SET version failed: %s
SELECT version FROM CSDatabaseVersion failed: %d %s
INSERT INTO CSDatabaseVersion (version) VALUES (%llu)
SELECT version FROM CSDatabaseVersion failed: %s
ver=%llu/%llu
CREATE TABLE IF NOT EXISTS CSRegisteredFileTable (crt_rowid INTEGER PRIMARY KEY,crt_id
BLOB,crt_iid BIGINT)
CREATE INDEX IF NOT EXISTS CSRegisteredFileTable_crt_id_inx ON CSRegisteredFileTable(crt_id)
CREATE UNIQUE INDEX IF NOT EXISTS CSRegisteredFileTable_crt_iid_inx ON CSRegisteredFileTable(crt_iid)
CREATE TABLE IF NOT EXISTS CSChunkTable (ct_rowid INTEGER PRIMARY KEY,cid BLOB,ct_iid BIGINT,ft_rowid BIGINT,offset BIGINT,dataLen INTEGER,refCount INTEGER,timeStamp BIGINT,location INTEGER,key BLOB)
CREATE INDEX IF NOT EXISTS CSChunkTable_cid_inx ON CSChunkTable(cid)
CREATE INDEX IF NOT EXISTS CSChunkTable_iid_inx ON CSChunkTable(ct_iid)
CREATE INDEX IF NOT EXISTS CSChunkTable_ftrowid_inx ON CSChunkTable(ft_rowid)
DROP INDEX IF EXISTS CSChunkTable_refCount_inx
DROP INDEX IF EXISTS CSChunkTable_loc_inx
DROP INDEX IF EXISTS CSChunkTable_iidloc_inx
DROP INDEX IF EXISTS CSChunkTable_rowidloc_inx
DROP INDEX IF EXISTS CSChunkTable_rowidrefcnt_inx
DROP INDEX IF EXISTS CSChunkTable_cidloc_inx
CREATE TABLE IF NOT EXISTS CSStorageFileTable (ft_rowid INTEGER PRIMARY KEY,ft_inode BIGINT,ft_space INTEGER,ft_pspace INTEGER,vt_rowid BIGINT)
DROP INDEX IF EXISTS CSStorageFileTable_ft_rowid_inx
DROP INDEX IF EXISTS CSStorageFileTable_ft_inode_inx
DROP TABLE IF EXISTS CSStorageVolumeTable
DELETE FROM CSDatabaseVersion
INSERT OR REPLACE INTO CSDatabaseVersion (version) VALUES (%lld)
CREATE INDEX IF NOT EXISTS CSStorageFileTable_ft_rowid_inx ON CSStorageFileTable(ft_rowid)
CREATE INDEX IF NOT EXISTS CSStorageFileTable_ft_inode_inx ON CSStorageFileTable(ft_inode)
CREATE INDEX IF NOT EXISTS CSStorageFileTable_ft_space_inx ON CSStorageFileTable(ft_space)
CREATE INDEX IF NOT EXISTS CSStorageFileTable_ft_pspace_inx ON CSStorageFileTable(ft_pspace)
CREATE INDEX IF NOT EXISTS CSStorageFileTable_vt_rowid_inx ON CSStorageFileTable(vt_rowid)
CREATE TABLE IF NOT EXISTS CSStorageChunkListTable (clt_rowid INTEGER PRIMARY KEY AUTOINCREMENT,clt_inode BIGINT,clt_count BIGINT,clt_chunkRowIDs BLOB)
CREATE INDEX IF NOT EXISTS CSStorageChunkListTable_clt_rowid_inx ON CSStorageChunkListTable(clt_rowid)
CREATE INDEX IF NOT EXISTS CSStorageChunkListTable_clt_inode_inx ON CSStorageChunkListTable(clt_inode)
CREATE TABLE IF NOT EXISTS CSStoragePendingChunksTable (pct_rowid INTEGER PRIMARY KEY,pct_inode BIGINT,pct_count BIGINT,pct_chunkRowIDs BLOB)
CREATE INDEX IF NOT EXISTS CSStoragePendingChunksTable_pct_inode_inx ON CSStoragePendingChunksTable(pct_inode)
CREATE TABLE IF NOT EXISTS CSStoragePendingFileChunklistTable (pft_rowid INTEGER PRIMARY KEY,pft_token BIGINT,pft_inode BIGINT)
CREATE INDEX IF NOT EXISTS CSStoragePendingFileChunklistTable_pft_token_inx ON CSStoragePendingFileChunklistTable(pft_token)
CREATE INDEX IF NOT EXISTS CSStoragePendingFileChunklistTable_pft_inode_inx ON CSStoragePendingFileChunklistTable(pft_inode)
COMMIT
sqlite3 error: %d %s
rc:%d
CScloseDB
sqlite3_close failed: %s
CSReadChunkData
%s unable to open storage file %lld,%lld:%s
CKCopyEmptyChunkIDs
%s CSCopyChunkInfo failed
CKCopyDataForChunkID
%s failed short read of StoredChunk for token: %llu
%s failed to get StoredChunk for token: %llu
_StoreChunk
fstat failed: (%d) %s
lseek failed: (%d) %s
Writing to SF rowID:%llu at o:0x%llx
write of %ld bytes on fd %d failed : %s
CSCopyData failed, copied %d bytes
orig_sz (%lld) + used_sz (%u) is too big: %u < %llu 
write failed for rowID:%llu: %d (%s)
write failed: %d != %d
unable to open storage file: %s
ftruncate failed for rowId:%lld: %d (%s)
_CSSupplyDataForEmptyChunk
chunk already has data!
_CSStoreChunks failed!
CKRegisterChunksForFileWithHint
NOT registering chunks for dataless file fd:%d, itemID:%lld
get_path_for_fd failed for fd:%d: %d (%s)
com.apple.ChunkingLibrary.CustomFixedChunk
registerChunksForItem
"%s", hint:"%s", itemID:%lld, encrypt:%u, scheme:0x%x, fixedChunkSize:0x%x, %u
Invalid custom fixed chunk size:0x%x for itemID:%lld
Invalid file signature scheme:0x%x for itemID:%lld
SELECT ct_rowid FROM CSChunkTable WHERE ct_iid = %lld
failed to get file sig for itemID:%lld
open failed on itemID:%lld, path:"%s", error:"%@"
stat failed on itemID:%lld, path:"%s", ino:%llu, error:"%@"
Found cached file signature for itemID:%lld
rc:%u, itemID:%lld, size:%llu, chunkCount:%llu, ac:%u
CKRegisterFile
can't register file %lld because the chunkstore is readonly
CKRelocateTemporaryChunk
Invalid chunk rowID, itemID:%lld, o:0x%llx, sz:0x%x
Invalid chunk relocation ('%c'/'%c') for itemID:%lld, o:0x%llx, sz:0x%x, rowID:%llu
CSChunkFile
open failed for "%s": %s
CSChunkFD
_CSInsertEmptyChunk
failed to create entry for chunk:
fsopen
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ChunkingLibrary_Sim/ChunkingLibrary-173/ChunkStore/CSutils.h
fsopen(%d,%llu,0x%0llx): unimplemented; returning -1
_CSFlushChunkBatch
_CSStoreChunks failed, batchIndex:%u, batchCount:%u
com.apple.decmpfs
CSRegisterChunksForFileCallback
addRegisteredChunk failed, itemID:%lld, offset:0x%llx, size:0x%x
chunkFdForStorage
stat failed on path:"%s", error:"%@"
stat failed on itemID:%lld, path:"%s", ino:%llu, error:%@
CKChunkCryptorCreate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ChunkingLibrary_Sim/ChunkingLibrary-173/ChunkStore/CSchunk.c
expected key size 16; got %u
CCCryptorCreate() => %d
CKChunkCryptorUpdate
crypting:CCCryptorUpdate() => %d
crypting: size in %u != size out %lu
CKChunkCryptorRelease
CCCryptorRelease() => %d
com.apple.cscache
getChunkListCacheBlob
Invalid chunk list cache for "%s", size:%u, type:%u
Different type chunk list cache found for "%s", size:%u, type:%u expected %u
chunkItem
"%s", hint:"%s", scheme:0x%x, size:%llu, fileID:0x%016llx(%llu), itemID:%lld
Chunking "%s"
Not chunking "%s" - no chunking profile!
Done chunking "%s", rc:%d, chunkCount:%llu, itemID:%lld
CSchunklist_for_file
open failed on "%s": %s
CKCopyChunkCache
srcPath:"%s", dstPath:"%s"
open failed on "%s": %d (%s)
Invalid chunk list cache for "%s", type:%u, mtime:%llu/%llu, ino:%llu/%llu, generation:%u/%u, sz:%llu/%llu
Copied chunk list cache from "%s" to "%s" (%llu/%llu)
Invalid file signature cache for "%s", type:%u, mtime:%llu/%llu, ino:%llu/%llu, generation:%u/%u, sz:%llu/%llu
Copied file signature cache from "%s" to "%s" (%llu/%llu)
CKFixupChunkCacheAfterExchangeData
Fixed up chunk list cache for "%s" (%llu)
Fixed up file signature cache for "%s" (%llu)
fstat failed for fd:%d, path:"%s": (%d) %s
openFdUncached
make_fd_uncached failed for fd:%d, path:"%s", ino:%llu: %d (%s)
get path failed for fd:%d: %d (%s)
readlink failed for fd:%d, path:"%s": (%d) %s
pread failed on fd:%d, path:"%s", offset:0x%llx: (%d) %s
CS_DISABLE_CL_CACHE
getChunkListCache
generation:%u, mtime:%llu, ino:%llu, sz:%llu, fileSignatureSize:%u, chunkInfoSize:%u, chunkInfoCount:%u
Invalid chunk cache for "%s", type:%u, mtime:%llu/%llu, ino:%llu/%llu, generation:%u/%u, sz:%llu/%llu, chunkInfoCount:%u
Invalid file signature size for "%s", %u/%u
Invalid file signature scheme for "%s": 0x%x
Invalid chunk info size/count for "%s", %u/%u/%u
Invalid chunk signature/key scheme for "%s": 0x%x/0x%x
Found chunk list cache "%s" for "%s", blobSize:%u, chunkInfoCount:%u, sz:%llu, ino:%llu, mtime:%llu, generation:%u
chunkUsingChunkCache
Using cache "%s" for "%s", ino:%llu, (0x%x/%u/%u)
Signature scheme mismatch: 0x%x/0x%x
Key scheme mismatch: 0x%x/0x%x
File signature mismatch: 0x%x/0x%x
Reading chunk, o:0x%llx, size:0x%x
Failed to read chunk bytes: %u != %u
callback failed for chunk %u: %d
Found %u chunks for "%s", ino:%llu
CSchunklist_streamedbuild
Skipping zero length section %u.
CSchunklist_streamRead failed
CSfixed_chunk_stream failed
under-read for rabin chunking; only read %lld bytes and not at EOF
At EOF and zero bytes left. We should be done by now. Chunk profile inconsistent?
CSrabin_chunk_stream failed
section %u done (%u, eo:0x%llx, %u)
not all sections chunked before eof reached
Begin stats for "%s"
End stats for "%s"
CHUNK_BUFFER_LENGTH
chunkerFileReadBufferSize
Unable to use env value %s for CHUNK_BUFFER_LENGTH. Parsed %lld and the minimum is %d. Using default value %lu
CSchunklist_streamReadFile
overflow; buffer length: %lu producer location %lu
underflow; producer location %lld
Odd. No bytes read but not the eof
CSchunklist_add_stream
CKChunkSignatureGeneratorFinish failed
Ignoring attempt to add 0 length chunk
"%s": %llu, %llu, o:0x%llx, sz:0x%x(%u), s:%s
"%s": %llu, %lld, o:0x%llx, sz:0x%x(%u), s:%s
"%s": %s, %lld, o:0x%llx, sz:0x%x(%u), s:%s
CSrabin_chunk_stream
File offset is already great than sectionEnd. Shouldn't we be in a different section?
CSchunklist_add
Unknown chunk scheme:0x%x
  === segment end marker ===
Ignoring attempt to add a chunk with invalid length %d.
encrypting
doEncrypt failed
"%s": %llu, %lld, o:0x%llx, sz:0x%x(%u), s:%s, (%u, %s)
"%s": %s, %llu, o:0x%llx, sz:0x%x(%u), s:%s
CK_CHUNK_COUNT
%llu
CK_STORED_CHUNK_COUNT
CK_STORED_SIZE
CK_HARD_BREAK_COUNT
CK_CHUNK_TMIN
CK_CHUNK_TMAX
setChunkListCache
stat failed for "%s", ino:%llu
"%s" changed, mtime:%llu/%llu, sz:%llu/%llu, generation:%u/%u
Invalid chunk array, chunkArray:%p, chunkCount:%llu
Storing cache "%s" for "%s", scheme:0x%x, ino:%llu, chunkCount:%llu, mtime:%llu, generation:%u, registering:%u
fileSignatureSize:%u, chunkInfoSize:%u, chunkInfoCount:%u
Invalid size/count: 0x%x/0x%x/0x%x
Stored chunk list cache for "%s", chunkCount:%llu, blobSize:%u, sz:%llu, ino:%llu, mtime:%llu, generation:%u
Removed chunk list cache for "%s", sz:%llu ino:%llu, mtime:%llu, generation:%u
CKChunkStoreCreate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ChunkingLibrary_Sim/ChunkingLibrary-173/ChunkStore/CSChunkStore.c
ERROR: NULL location parameter
CFURLGetFileSystemRepresentation(%s) error: %s
CKChunkStoreGetLocation
bufLen is too small: %lu
ChunkStorage
ChunkStoreNoCopy
CKChunkStoreRelocateDB
copyfile_state_alloc failed
copyfile_state_set failed
copyfile failed: %s
_CSBeginTransactionSqlRc
NESTED TRANSACTION!
BEGIN TRANSACTION
Unable to begin transaction: %d (%s)
END TRANSACTION
_CSEndTransactionSqlRc
Unable to commit transaction: %d (%s)
TRANSACTION COUNT ALREADY ZERO!
ROLLBACK TRANSACTION
_CSRollbackTransactionSqlRc
Unable to rollback transaction: %d (%s)
*** WARNING: _sqlite3_step called without chunkstore_lock in function %s : %d
/tmp/cs_log.log
__sqlite3_step
pthread_mutex_trylock error: %d:%s res: %d in function %s : %d
*** WARNING: _sqlite3_reset called without chunkstore_lock in function %s : %d
__sqlite3_reset
*** WARNING: _sqlite3_clear_bindings called without chunkstore_lock in function %s : %d
__sqlite3_clear_bindings
*** WARNING: _sqlite3_finalize called without chunkstore_lock in function %s : %d
__sqlite3_finalize
_CSPrepareStatement
sqlite3_prepare_v2 returned: %d %s for query "%s"
_CSCreateStorageFile
CKChunkStoreGetLocation failed
failed to add SF entry to database!
unable to create storage directory
unable to create storage path
file %s already exists (size: %lld), trying again.
open(%s) failed: %s
fstat failed: %s
UPDATE CSStorageFileTable SET ft_inode = %lld WHERE ft_rowid = %lld
failed to set inode for file: %s: %d %s
UPDATE CSStorageFileTable SET ft_space = %d WHERE ft_rowid = %lld
failed to set space for file: %s: %d %s
UPDATE CSStorageFileTable SET ft_pspace = %d WHERE ft_rowid = %lld
failed to set purgeable space for file: %s: %d %s
Created a new SF, ino:%llu, rowID:%llu
_CSUpdateStorageFileInfo
Updating SF space for ftRowId:%llu curspace:%llu, space:%llu
UPDATE CSStorageFileTable SET ft_space = ? WHERE ft_rowid = ?
sqlite3_bind_int returned: %d %s
sqlite3_bind_int64 returned: %d %s
sqlite3_step returned: %d %s
_CSCloseStorageFile
close failed for SF rowID:%llu
_CSGetStorageFile
Found cached SF %u at rowID:%llu, space:%llu, needSize:%llu
SELECT ft_rowid, ft_space FROM CSStorageFileTable WHERE ft_space >= ?
NULL stmt
Checking free space for SF at rowID:%llu, %llu/%llu
Found a candidate SF at rowID:%llu
open(%s) failed: %s
fstat(%s) failed: %s
The size on disk is different from the size in db for "%s": usedSpace:%llu, size:%llu - truncating
ftruncate failed for "%s": %s
_CSCreateStoragePath failed for rowID: %lld
_CSCompactStorage
spaceNeeded:%llu
removeUnreferencedChunks freed %llu bytes, totalFreeSpace:%llu, spaceNeeded:%llu, rc:%d
copyReferencedChunks freed %llu bytes, totalFreeSpace:%llu, spaceNeeded:%llu, rc:%d
freeSpace:%llu
_CSStoreChunks
_CSInsertChunk failed, i:%llu, count:%llu
INSERT INTO CSStoragePendingChunksTable (pct_inode, pct_count, pct_chunkRowIDs) VALUES (?, ?, ?)
_CSRecordPendingChunks
sqlite3_step returned: %d (%s)
SELECT pft_inode FROM CSStoragePendingFileChunklistTable WHERE pft_token = ?
_CSCommitChunkedFile
DELETE FROM CSStoragePendingFileChunklistTable WHERE pft_token = %llu
_CSRemoveStoredFile
_CSChunkRefsForToken failed
Invalid signature size, sigSize:%u
_CSChunkSignatureForToken failed for chunk token %lld
_CSReleaseChunkForSignature failed for chunk token %lld
DELETE FROM CSStorageChunkListTable WHERE clt_rowid = %llu
CSsql_do returned: %d (%s)
token:%llu, result:%d, sqlRc:%d
SELECT cid, dataLen FROM CSChunkTable WHERE ct_rowid = ? AND location = 115
_CSChunkSizeForToken
sqlite3_step returned: %d %s, for registerStorageChunkList
_CSImportChunklist
read failed on fd:%d: %d (%s)
read failed on fd:%d: %d != %d
sizeof_Chunk:%u, count:%llu
Invalid chunk list header: %d/%llu
_CSTokenForChunkSignature failed for signature (%llu/%llu):
SELECT clt_count, clt_chunkRowIDs FROM CSStorageChunkListTable WHERE clt_rowid = ?
_CSExportChunklist
sqlite3_step returned: %d (%s), for listToken:%llu
sigSize:%u, sizeof_Chunk:%u, count:%llu
chunk length is zero, %llu/%llu
_CSChunkSignatureForToken failed
_CSChunkRefsForToken
sqlite3_step returned: %d %s, for listToken:%llu
_CSChunkSizeForToken failed for file token %llu, chunk token:%llu (count:%llu)
SELECT ct_rowid FROM CSChunkTable WHERE cid = ? AND location = ?
_CSTokenForChunkSignature
sqlite3_step returned: %d %s, for signature:
SELECT cid FROM CSChunkTable WHERE ct_rowid = ?
_CSChunkSignatureForToken
no signature for token %llu
DELETE FROM CSChunkTable WHERE ct_rowid = ?
_CSRemoveChunk
INSERT INTO CSChunkTable (cid, ft_rowid, offset, dataLen, refCount, timestamp, location) VALUES (?, ?, ?, ?, ?, ?, ?)
_CSAddChunk
null sqlite3_stmt
SELECT * FROM CSChunkTable WHERE ct_rowid = ?
_CSChunkForToken
not a stored chunk
SELECT refCount, dataLen, ft_rowid FROM CSChunkTable WHERE ct_rowid = ?
_CSRetainChunkForRowID
sqlite3_bind_int64 failed for row id %lld: %d %s
setFT_pSpace failed for ftRowId:%llu, rowId:%llu
Attempted to retain row ID %llu that did not exist
Failed to get row ID %llu from database (%d)
UPDATE CSChunkTable SET refCount = ? WHERE ct_rowid = ?
sqlite3_bind_int64 failed for refCount %lld: %d %s
sqlite3_bind_int64 failed for rowId %lld: %d %s
SELECT refCount, dataLen, ft_rowid, ct_rowid FROM CSChunkTable WHERE cid = ? AND location = 115
_CSReleaseChunkForSignature
refCount already zero for:
null sqlite3_stmt (stmt)
UPDATE CSChunkTable SET refCount = 0 WHERE ct_rowid = %lld
CSsql_do returned: %d %s
SELECT ft_pspace FROM CSStorageFileTable WHERE ft_rowid = %lld
UPDATE CSStorageFileTable SET ft_pspace = %lld WHERE ft_rowid = %lld
unable to update purgable space for SF rowID:%llu
null sqlite3_stmt (sel_stmt)
_CSFileTableFileId
stat failed for path: %s : %s
SELECT ft_inode FROM CSStorageFileTable WHERE ft_rowid = ?
INSERT INTO CSStorageFileTable (ft_inode, vt_rowID) VALUES (?, ?)
_CSAddStorageFileToDb
DELETE FROM CSStorageFileTable WHERE ft_rowid = ?
_CSRemoveStorageFileFromDb
INSERT INTO CSStorageVolumeTable (vol_uuid, vol_cr_date, vol_cr_nsec) VALUES (?, ?, ?)
_CSAddVolume
_CSExportChunks
sqlite3_step returned: %d %s, for listToken: %llu
_CSChunkForToken failed for token %llu for file token %llu
unable to open SF 0x%08x for file token %llu
read of %ld bytes on fd %d failed : %s
copyChunk failed for srcfd %d and offset %llu for file token %llu, bytes_copied: %lld, asked to copy %ld bytes
_CSImportChunks
read failed on fd: %d, amount read %ld does not equal amount requested %ld : %s
didn't find chunks begin signature
unable to get signature size for scheme 0x%x
_CSInsertChunk failed
_CSRegisterChunkList
_CSRegisterChunk failed
INSERT INTO CSChunkTable (cid, ct_iid, offset, dataLen, location, key) VALUES (?, ?, ?, ?, ?, ?)
_CSRegisterChunk
sqlite3_step returned: %d %s, for chunk:
SELECT * FROM CSChunkTable WHERE cid = ?
_CSGetRegisteredChunk
sqlite3_step returned: %d %s, for signature:
_CSGetRegisteredChunks
registerItem
Registering itemID:%lld
INSERT INTO CSRegisteredFileTable (crt_id, crt_iid) VALUES (?, ?)
unregisterItem
Unregistering itemID:%lld
DELETE FROM CSRegisteredFileTable WHERE crt_iid = ?
sqlite3_step returned: %d %s, for itemID:%lld
SELECT ct_rowid, cid, offset, dataLen, location, key FROM CSChunkTable WHERE ct_iid = ? ORDER BY offset
_CSCopyChunkListForItemID
SELECT crt_iid FROM CSRegisteredFileTable WHERE crt_id = ?
_CSGetItemIdsForFileSignature
SELECT crt_id FROM CSRegisteredFileTable WHERE crt_iid = ?
_CSGetSignatureForItemID
sqlite3_column_blob returned bad data for itemID:%lld, blobSize:%d, expectedSize:%u
signature size is 0, itemID:%lld
_CSUnregisterChunksForItem
Unregistering chunks for itemID:%lld
DELETE FROM CSChunkTable WHERE ct_iid = ? AND location = 114
DELETE FROM CSChunkTable WHERE location = ?
_CSUnregisterAllTemporaryChunks
DELETE FROM CSChunkTable WHERE location = ? AND ct_iid = ?
_CSUnregisterTemporaryChunks
sqlite3_step returned: %d %s for itemID:%lld
UPDATE CSChunkTable SET location = ? WHERE rowid = ? AND location = ? AND ct_iid = ? AND cid = ? AND offset = ? AND dataLen = ?
_CSRelocateRegisteredChunk
Couldn't update chunk ('%c'/'%c') for itemID:%lld, o:0x%llx, sz:0x%x, rowID:%llu
UPDATE CSChunkTable INDEXED BY CSChunkTable_cid_inx SET location = ? WHERE location = ? AND ct_iid = ? AND cid = ? AND offset = ? AND dataLen = ?
Moved registered chunk ('%c'/%c') for itemID:%lld, o:0x%llx, sz:0x%x, rowID:%llu
DELETE FROM CSChunkTable INDEXED BY CSChunkTable_cid_inx WHERE location = ? AND ct_iid = ? AND cid = ? AND offset = ? AND dataLen = ?
_CSUnregisterChunk
sqlite3_step returned: %d %s, for signature
DELETE FROM CSChunkTable WHERE location = 114 AND ct_iid = %llu;
UPDATE CSChunkTable SET location = 114 WHERE ct_iid = ?
_CSConvertTemporaryChunks
_CSKeyForRegisteredChunk
key param is NULL, failing.
SELECT key FROM CSChunkTable WHERE cid = ?
Bad size for key...
sqlite3_column_blob returned NULL.
sqlite3_step returned: %d %s, for signature: 
_CSUnregisterAllChunksForItem
Unregistering all chunks for itemID:%lld
DELETE FROM CSChunkTable WHERE ct_iid = %lld
SELECT count(*) FROM CSRegisteredFileTable
_CSRegisteredItemCount
SELECT crt_iid FROM CSRegisteredFileTable WHERE crt_iid > ? ORDER BY crt_iid ASC LIMIT ?
_CSGetRegisteredItems
_CSChunkStoreCreate
read only location and no tmp path makes ChunkStore unhappy!
CK_CHUNKSTORE_VERBOSE
CS_LOG_PATH
CHUNK_STORE_UNIT_TESTS
CS_LOG_VERBOSE
CS_LOG_STDOUT
logging to stdout
log debug enabled
stat failed for %s: %s
%s/%s
unable to create directory: %s : %d:%s
path:%s
struct __CSChunkStore
unable to create chunk store object for %s
%s/chunk_store_XXXXXX
safe_snprintf truncated %s
mkdtemp failed to create %s : %s
unable open chunk store database for %s
_CSChunkStoreCSChunkStoreFinalize
CSChunkStoreOpenDB
CKChunkStoreRelocateDB failed to copy database to temp location!
%s/%s/%s
ChunkStoreDatabase
unable to rename old chunk store at %s: %s
unable to create directory %s : %s
%s_old_%u
CSRename
can't rename "%s", too many old files (%u)
renaming "%s" to "%s"
unable to rename "%s": %d (%s)
_CSFinalizeDBStmts
finalizing "%s"
sqlite3_finalize returned %d: %s
SELECT pft_rowid, pft_token FROM CSStoragePendingFileChunklistTable
SELECT pft_rowid, pft_token FROM CSStoragePendingFileChunklistTable where pft_inode = ?
_CSCheckPendingFileChunklistTable
sqlite3_bind_int64 for inode: %lld returned: %d (%s)
sqlite3_step returned: %d (%s), listToken: %llu
DELETE FROM CSStoragePendingFileChunklistTable WHERE pft_rowid = %lld
_CSFileIsChunked
stat failed for "%s"
CKChunkStoreGetLocation failed
open (%lld,%lld) failed: %s
_CSReleaseOrphanedChunks
Unable to release chunk at token %lld (%llu)
_CSMakeParentDirFromRowID
failed to get chunk store location!
%s/%s/%d/%d/%d/
path exceeds %d characters!
failed to create directory: %s, %s
_CSCreateStoragePath
failed to get chunk store location!
%s/%s/%d/%d/%d/%d
outPath too small
SELECT ft_space FROM CSStorageFileTable WHERE ft_rowid = %lld
SELECT ft_rowid FROM CSStorageFileTable WHERE ft_pspace > 0 ORDER BY ft_pspace DESC
removeUnreferencedChunks
removeUnreferencedChunksAtEof
ftRowId:%llu, spaceNeeded:%llu
SELECT ct_rowid, dataLen, offset, refCount FROM CSChunkTable WHERE ft_rowid = ? AND location = 115 ORDER BY offset DESC
ctRowId:%llu, refCount:%llu, offset:0x%llx, size:0x%x
Invalid chunk, ftRowId:%llu, ctRowId:%llu, chunkOffset:0x%llx, truncateOffset:0x%llx
chunkCount:%u, truncateOffset:0x%llx, freeSpace:%llu
sqlite3_step error: %d, %s
ftRowId:%llu, totalFreeSpace:%llu, rc:%d
truncateStorageFile
ftRowId:%llu, offset:0x%llx, spaceDelta:%llu
fstat failed for "%s": %s
Invalid file size/offset for "%s": fileSize:0x%llx, offset:0x%llx
Invalid free space for "%s": diffSize:%llu, spaceDelta:%llu
DELETE FROM CSChunkTable WHERE ft_rowid = %lld
DELETE FROM CSStorageFileTable WHERE ft_rowid = %lld
CSsql_do error: %d, %s
unlink failed for ftRowId:%llu, path:"%s": %s
Updating free space for ftRowId:%llu, spaceDelta:%llu, space:%llu
failed to set the free space for ftRowId:%llu, path:"%s", space:0x%llx
Updating free pspace for ftRowId:%llu, pspaceDelta:%llu, pspace:%llu
failed to set the free pspace for ftRowId:%llu, path:"%s", pspace:0x%llx
ftruncate failed for ftRowId:%llu, path:"%s", offset:0x%llx: %s
ftRowId:%llu, rc:%d
UPDATE CSStorageFileTable SET ft_space = %lld WHERE ft_rowid = %lld
copyReferencedChunks
_CSCompactStorageFile
open failed for "%s", rowid=%lld: %s
"%s" does not exist, rowID:%llu
SELECT ct_rowid, dataLen, offset FROM CSChunkTable WHERE ft_rowid = ? AND refCount > 0 AND location = 115 ORDER BY refCount DESC
Bad chunk in "%s", ctRowId:%llu, chunkOffset:0x%llx, chunkSize:0x%x
chunk value(s) are invalid. offset:0x%llx, size:0x%x
Bad chunk offset/size in "%s", ctRowId:%llu, chunkOffset:0x%llx, chunkSize:0x%x
chunk value(s) are invalid. offset:%lld, size:0x%x
Bad chunk offset/size, ctRowId:%llu, dstOffset:0x%llx, chunkSize:0x%x
pread(%d, 0x%x, 0x%llx) failed: %s, read %lld bytes, file is 0x%llx(%lld) bytes long
Read size doesn't match request
DELETE FROM CSChunkTable WHERE ct_rowid = %lld
_CSCreateStorageFile failed, rc:%d
pwrite(%d, sz:0x%x, o:0x%llx) failed: %d, %s
pwrite(%d, sz:0x%x, o:0x%llx) failed: wrote %lld bytes
Nothing was moved from SF rowID:%lld
UPDATE CSStorageFileTable SET ft_space = %lld, ft_pspace = 0 WHERE ft_rowid = %lld
UPDATE CSChunkTable SET offset = ?, ft_rowid = ? WHERE ct_rowid = ?
Removing SF "%s"
unlink failed for "%s": %s
sqlite3_step error: %d (%s)
CSsql_do error: %d (%s)
fileSize:%llu, totalMoved:%llu
There was a problem compacting SF ftRowId:%lld, rc:%d
ChunkStoreDirty
_CSSetDirtyState
unlink failed "%s": %d (%s)
_CSInsertChunk
o:0x%llx, sz:0x%x, (0x%x/%u/%llu)
zero length chunk for file "%s"
Retaining chunk: o:0x%llx, sz:0x%x
Storing chunk: o:0x%llx, sz:0x%x
chunk value(s) invalid. o:0x%llx, sz:0x%x
Bad chunk value(s): o:0x%llx, sz:0x%x
sqlite3_step failed: %d %s
SELECT * FROM CSStoragePendingChunksTable
SELECT * FROM CSStoragePendingChunksTable WHERE pct_inode = ?
_CSRemovePendingBatchesForInode
sqlite3_bind_int64 for inode:%lld returned: %d (%s)
Removing pending batch for inode:%llu, rowId:%llu, count:0x%llu
DELETE FROM CSStoragePendingChunksTable WHERE pct_rowid = %lld
INSERT INTO CSStorageChunkListTable (clt_count, clt_chunkRowIDs, clt_inode) VALUES (?, ?, ?)
_CSRegisterStorageChunkListUnsafe
DELETE FROM CSStoragePendingChunksTable WHERE pct_inode = %llu
INSERT INTO CSStoragePendingFileChunklistTable (pft_token, pft_inode) VALUES (%llu, %llu)
CSCopyData
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ChunkingLibrary_Sim/ChunkingLibrary-173/ChunkStore/CSutils.c
read failed (read %ld bytes of requested %lld bytes) for fd:%d : %d (%s)
write failed for fd:%d, %d (%s)
write failed for fd:%d, %lld != %lld
0123456789abcdef
%02x
printNbytes
printSignature
signature:%s, key:%s
signature:%s
printChunk
%soffset: %llu, length: %u, signature: %s
printChunkReference
ChunkReference at %p:
ChunkReference token %llu:
ChunkReference length %u:
printStoredChunk
StoredChunk at %p:
StoredChunk 
StoredChunk volume info: 
StoredChunk device: %d
StoredChunk inode: %lld
StoredChunk stgPath: 0x%08x
StoredChunk token: %lld
StoredChunk offset: %lld
StoredChunk length: %d
StoredChunk location: %c
StoredChunk data: 
printSourceChunk
fd:%d, slot_sz:%u
itemID:%lld
offset:0x%llx, size:0x%x(%u), sequence:%llu, stored:%u, retain:%u
printRegisteredChunk
RegisteredChunk: itemID:%lld, offset:0x%llx, size:0x%x(%u), location:%c
en_US
ck_copy_cfnumber_from_cftype_using_description
Option %@ had CFStringRef "%@" but couldn't parse as a number.
Unable to recognized type id '%@' for boolean decoding for key '%@'.
CKChunkCoderFinish
Chunk signatures differ
Chunk keys differ
com.apple.XattrObjectSalt
CKFileSignatureGeneratorUpdate
already updating data fork
com.apple.DataObjectSalt
com.apple.cscachefs
getFileSignatureCacheBlob
Invalid file signature cache for "%s", size:%u, type:%u
CS_DISABLE_FS_CACHE
getFileSignatureCache
Invalid file signature cache for "%s", ino:%llu, sz:%llu, type:%u, scheme:0x%x, generation:%u
Found cached file signature for "%s", blobSize:%u, sz:%llu, ino:%llu, time:%llu, generation:%u
setFileSignatureCache
"%s"changed, ino:%llu, mtime:%llu/%llu, sz:%llu/%llu, generation:%u/%u
Stored file signature cache for "%s", blobSize:%u, sz:%llu, ino:%llu, mtim:%llu, generation:%u
Removed file signature cache for "%s", blobSize:%u, sz:%llu, ino:%llu, mtime:%llu, generation:%u
wgcChanged
CKCalculateItemSignatureWithFlags
NULL read context
Invalid file signature scheme:0x%x
NULL signature buffer
open failed on path:"%@", error:"%@"
stat failed on path:"%@", ino:%llu, error:"%@"
read failed on path:"%@", ino:%llu, offset:0x%llx, size:%u, error:"%@"
CKFileSignatureGeneratorUpdate failed
ino:%llu changed
error:"%@", path:"%@", ino:%llu, sz:%llu, o:%llu
path:"%@", flags:0x%llx, ino:%llu, sz:%llu, o:%llu, ck:%s
CKCalculateFileSignatureWithFlags
CKCalculateItemSignatureWithFlags failed, fd:%d, path:"%s", errno:%d (%s)
CKValidateSignature
signature size is 0
CKChunkSignatureSize
Unknown chunk signature scheme: 0x%x
CKFileSignatureSize
Unknown file signature scheme: 0x%x
CKChunkEncryptionKeySize
Unknown key scheme: 0x%x
CK_TIME_CHUNKING
CK_SIZE_STATS
CK_CHUNKSTORE_VERBOSE_FOR_TEST_TOOL
CK_NO_RESULTS
readOpCtx
read failed on itemID:%lld, path:"%s", ino:%llu, offset:0x%llx, size:%u, error:"%@"
getOpCtxSectionLengthAtIndex
sectionIndex %u out of range (numSections = %u)
section %u/0x%llx is before section %u/0x%llx
getMaxXattrSize
fpathconf failed on "%s": %s
getFileWriteGeneration
fgetattrlist(ATTR_CMN_GEN_COUNT) failed on "%s", fd:%d: %d (%s)
getCacheBlob
Invalid cache size for "%s", blobName:%s, size:%u
Invalid cache hash for "%s", blobName:%s
file-write-xattr
CKGetCacheBlobFd
fgetxattr failed on "%s", fd:%d, xattrName:%s: %d (%s)
fgetxattr failed on "%s", fd:%d, xattrName:%s
fgetxattr failled on "%s", fd:%d, xattrName:%s
CKSetCacheBlobFd
fremovexattr failed on "%s", xattrName:%s: %d (%s)
fsetxattr failed for "%s", fd:%d, xattrName:%s: %d (%s)
 Summary for item %lld (%s):
profiler created %d sections
%32s
Throughput
Elapsed Time
%10s %13.7f %7s
chunking
seconds
%12.4f MB/sec
%10s %13.7f %-10s
hashing
file read
file write
DB access
Chunked%s
, hashed, encrypted and hashed again
 and hashed
%s %llu bytes into %lld chunks, stored %lld chunks (%lld bytes) in %6.4f seconds (%8.4f MB/sec )
Average chunk size: %llu.%llu
Average chunk size: 0 (0 chunks)
For Apple Internal Use Only; Not for Disclosure/Distribution Outside of Apple.
%s%s
%16llx [%02d/%02d/%02d %02d:%02d:%02d.%03d]
%s %s %d.%s %s:%d 
[EMERG]
[ALERT]
[CRIT] 
[ERROR]
[warn] 
[note] 
[info] 
[debug]
[?]    
Parameter validation failed!
Failed to encrypt the IV
Encryption failed!
Decryption failed!
Error occurred while encrypting block during chaining mode. status = %d
kCKItemChunkLength
CK_CHUNK_DEFAULT
createChunkProfile
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ChunkingLibrary_Sim/ChunkingLibrary-173/ChunkStore/CSprofile.c
Using Rabin chunking on "%s" (CK_CHUNK_DEFAULT)
CK_FIXED_CHUNK
Using fixed size chunking on "%s" (CK_FIXED_CHUNK)
fixed size chunking requested with %llu bytes per chunk
suffix_index_for_type_hint(typeHint:"%s", "%s") returned type:%d
profile_type_for_content("%s") returned type:%d
type:%d, typeHint:"%s"
extension_from_uti
uti:%@, tag:%@
canonize_extension
class:%@, tag:%@
ftyp
moov
mdat
is_qt_header
qt sz:0x%x, has_type:%d, "%c%c%c%c"
qt  
M4V 
M4A 
create_default_profile
"%s" is a big file (%lld bytes!), using fixed chunker
"%s" is just right to be Rabin chunked (%lld bytes)
create_default_fixed_profile
requestedFixedChunkSize/%llu exceeds MAX_FIXED_LENGTH_CHUNK_SIZE/%llu
requestedFixedChunkSize/%llu below MIN_FIXED_LENGTH_CHUNK_SIZE/%llu
requestedFixedChunkSize/%llu not large enough to accomodate file size %llu
fixedChunkSize set to %llu bytes
returning %u sections for "%s"
print_sections
section[%u/%u]: [%s] sz:%lld(0x%llx) [0x%llx-0x%llx), ap:0x%llx, cc:%u
create_custom_fixed_profile
create_default_rabin_profile
create_zip_profile
too many records, num_recs:0x%x, max_recs:0x%x
failed to read zip-dir-rec at %u/%u
bogus looking zip-dir-rec at %u (0x%08x != 0x%08x)
bogus field_len 0x%x at 0x%llx, expected_len: 0x%x
failed to read zip64-extra-field at 0x%llx
bogus looking zip_foffset/zip_size on zip-dir-rec at %u (foffset:0x%llx size:0x%llx dataSize:0x%llx)
first entry must begin at location zero!
failed to read the zip-local-header at %u/0x%llx
zip-local-header %u @ 0x%llx looks corrupt (0x%08x != 0x%08x)
entries %u and %u overlap
%u >= %u, last_rabin:%d, last_rabin_base:0x%llx
locate_central_dir
failed to read zip-end-of-central-dir at 0x%llx
zip-end-of-central-dir, offset:0x%x, size:0x%x, recs:%u/%u
failed to read zip64-end-of-central-dir-locator at 0x%llx
zip64-end-of-central-dir-locator, zip64-end-of-central-dir-offset:0x%llx
failed to read zip64-end-of-central-dir at 0x%llx
zip64-end-of-central-dir, central-dir-offset:0x%llx, central-dir-size:0x%llx, num-central-dir-recs:%llu/%llu
didn't find the zip-central-dir-end for "%s"
didn't find the zip64-central-dir-end for "%s"
locate_zip64_extra_field
failed to read extra-field-hdr at 0x%llx
create_mp3_profile
ID3v2 tag present at 0x%llx, v2_tag_size:0x%x
ID3v2 tag larger than the file, v2_tag_size:0x%x, dataSize:0x%llx
ID3v1 tag %s at 0x%llx
present
missing
dflt
aiff
cpbitmap
jpeg
pict
sfark
sitx
tbz2
tiff
numbers
pages
dflt
aiff
aside
cpbitmap
epub
jpeg
pict
sfark
sitx
sqlite-wal
tbz2
tiff
waveform
numbers
pages
QuickLook/Preview.pdf
@(#)PROGRAM:ChunkingLibrary  PROJECT:ChunkingLibrary-173
