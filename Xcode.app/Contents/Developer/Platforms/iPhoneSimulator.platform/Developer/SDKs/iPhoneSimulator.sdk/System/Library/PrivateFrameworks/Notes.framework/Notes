init
array
setMutableSearchStrings:
mutableSearchStrings
addObjectsFromArray:
copy
addStrings:
searchStrings
.cxx_destruct
searchIndexableIdentifier
setSearchIndexableIdentifier:
_searchIndexableIdentifier
_mutableSearchStrings
currentCalendar
components:fromDate:
dateFromComponents:
date
isEqualToDate:
alloc
setDay:
dateByAddingComponents:toDate:options:
isToday
isYesterday
setTimeStyle:
setDateStyle:
setDoesRelativeDateFormatting:
stringFromDate:
distantFuture
isEqual:
dateByAddingUnit:value:toDate:options:
compare:
currentLocale
dateFormatFromTemplate:options:locale:
setDateFormat:
shortFormattedDate
briefFormattedDate
isEarlierThanDate:
isLaterThanDate:
length
URLWithString:
managedObjectIDForURIRepresentation:
ic_managedObjectIDForURIString:
dataUsingEncoding:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
ic_substringToIndex:
characterSetWithCharactersInString:
ic_stringByReplacingCharactersInSet:withString:
mutableCopy
formUnionWithCharacterSet:
lineRangeForRange:
getParagraphStart:end:contentsEnd:forRange:
getLineStart:end:contentsEnd:forRange:
rangeOfComposedCharacterSequenceAtIndex:
substringFromIndex:
substringToIndex:
rangeOfComposedCharacterSequencesForRange:
substringWithRange:
newlineCharacterSet
rangeOfCharacterFromSet:
replaceCharactersInRange:withString:
rangeOfCharacterFromSet:options:range:
ic_trimmedString
ic_sanitizedFilenameString
numberOfLines
enumerateParagraphsInRange:usingBlock:
enumerateContentLineRangesInRange:usingBlock:
ic_substringFromIndex:
ic_substringWithRange:
ic_stringByReplacingNewlineCharactersWithWhiteSpace
paragraphRangeForRange:contentEnd:
content
plainTextFromHTML:
plainTextFromHTML:limit:preserveNewlines:
contentAsPlainText
contentAsPlainTextPreservingNewlines
standardUserDefaults
objectForKey:
boolValue
userInfo
intValue
code
domain
sortDescriptorsForCurrentType
UUID
UUIDString
numberWithBool:
class
fileProtectionOption
dictionaryWithObjects:forKeys:count:
newlyAddedAccount
accountUtilities
localAccountDisplayName
setName:
setAccountIdentifier:
newlyAddedStore
setExternalIdentifier:
setAccount:
setDefaultStore:
managedObjectContext
entityForName:inManagedObjectContext:
setEntity:
predicateWithFormat:
setPredicate:
executeFetchRequest:error:
count
countByEnumeratingWithState:objects:count:
forceDeleteAccount:
_createLocalAccount:andStore:
lastObject
defaultStore
deleteObject:
insertNewObjectForEntityForName:inManagedObjectContext:
setPropertyKey:
persistentStoreCoordinator
urlForPersistentStore
persistentStoreForURL:
metadata
setObject:forKey:
setMetadata:
setUpUniqueObjects
lock
setUpLocalAccountAndStore
setUpLastIndexTid
saveSilently:
unlock
pathForPersistentStore
managedObjectModel
initWithManagedObjectModel:
fileURLWithPath:
storeOptions
destroyPersistentStoreAtURL:withType:options:error:
pathForIndex
defaultManager
fileExistsAtPath:
removeItemAtPath:error:
removeSqliteAndIdxFiles
removeConflictingSqliteAndIdxFiles
handleMigration
concurrencyType
performBlockAndWait:
shouldObserveDarwinNotifications
defaultCenter
managedObjectContextWillSaveNotification:
addObserver:selector:name:object:
removeObserver:
sharedAccountUtilities
initWithAccountUtilities:inMigrator:
initWithAccountUtilities:inMigrator:isMainContext:usePrivateQueue:
initWithName:
setUpCoreDataStack
tearDownCoreDataStack
dealloc
visibleNotesPredicate
newFRCForCollection:delegate:performFetch:
newFetchRequestForNotes
predicateForNotes
arrayWithObjects:
andPredicateWithSubpredicates:
initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:
setDelegate:
performFetch:
fetchRequestWithEntityName:
defaultNotesSortDescriptors
setSortDescriptors:
deleteCacheWithName:
sortUsingDescriptors:
initWithEntityName:
setReturnsObjectsAsFaults:
generateGUID
newlyAddedNoteWithGUID:
setBody:
nextIndex
setIntegerId:
setGuid:
existingObjectWithID:error:
objectID
isInserted
store
storeForObjectID:
account
shouldMarkNotesAsDeleted
deleteNoteRegardlessOfConstraints:
markForDeletion
reset
save:
hasChanges
databaseIsCorrupt:
allVisibleNotesMatchingPredicate:
countOfVisibleNotesMatchingPredicate:
allVisibleNotesInCollection:sorted:
allVisibleNotesMatchingPredicate:sorted:
allVisibleNotesMatchingPredicate:sorted:context:
allVisibleNotesMatchingPredicate:sorted:context:fetchLimit:
setFetchLimit:
countForFetchRequest:error:
isMarkedForDeletion
body
allNotesMatchingPredicate:
countOfNotesMatchingPredicate:
liveNotesNeedingBodiesPredicate
accountForAccountId:
isEqualToString:
storeForExternalId:
initWithKey:ascending:
arrayWithObject:
forceSetUpUniqueObjects
allAccountsAsFaults:prefechedRelationshipKeyPaths:
setRelationshipKeyPathsForPrefetching:
defaultStoreSyncIdWithDesiredSyncId:
didChooseToMigrate
allAccounts
localStore
localAccount
initWithFetchRequest:
setResultType:
executeRequest:error:
result
attachmentDirectoryURLForAttachmentObjectID:error:
removeItemAtURL:error:
allNotesInCollection:
countOfStores
countOfNotesInCollection:
refreshObject:mergeChanges:
_notePropertyObjectForKey:
setPropertyValue:
propertyValue
dateWithTimeIntervalSinceReferenceDate:
setCreationDate:
setModificationDate:
setTitle:
setAuthor:
setContainsCJK:
setStore:
setContent:
setIsPlainText:
numberWithUnsignedInt:
numberWithInt:
setPropertyValue:forKey:
isKindOfClass:
name
invalidate
setPersistentStoreCoordinator:
expressionForKeyPath:
expressionForFunction:arguments:
setExpression:
setExpressionResultType:
setPropertiesToFetch:
valueForKey:
unsignedIntValue
setValue:forKey:
getNextIdObject
stringByAppendingPathComponent:
sharedNoteResurrectionMergePolicy
setMergePolicy:
isMainContext
initWithConcurrencyType:
usePrivateQueue
setUndoManager:
setStalenessInterval:
_setDelegate:
searchIndexerDataSource
initWithContentsOfURL:
bundleForClass:
pathForResource:ofType:
migrateNotesStoreAtURL:storeType:managedObjectModel:options:error:
addPersistentStoreWithType:configuration:URL:options:error:
objectForKeyedSubscript:
sharedIndexer
addDataSource:
processInfo
processName
isObservingChanges
startObservingChanges
isMainThread
dictionaryWithObject:forKey:
postNotificationName:object:userInfo:
setNoteIntegerIds:
setNoteServerIds:
setNoteServerIntIds:
setChangeType:
trackChanges:
deletedObjects
updatedObjects
insertedObjects
entity
addObject:
committedValuesForKeys:
minusSet:
unionSet:
noteChangeWithType:store:
noteIntegerIds
integerId
serverId
noteServerIds
serverIntId
noteServerIntIds
numberWithLongLong:
null
containsObject:
shouldLogIndexing
setTestsNotesRootPath:
clearTestsNotesRootPath
allVisibleNotesMatchingPredicate:context:
newManagedObjectContext
initForMainContext
initForMigrator
initWithPrivateQueue
initWithAccountUtilities:
newFRCForCollection:delegate:
clearCaches
sortNotes:
batchFaultNotes:
newlyAddedNote
newlyAddedAttachment
collectionForObjectID:
deleteNote:
deleteChanges:
enableChangeLogging:
saveOutsideApp:
allVisibleNotes
countOfVisibleNotes
allVisibleNotesInCollection:
countOfVisibleNotesInCollection:
visibleNoteForObjectID:
visibleNotesForIntegerIds:
mostRecentlyModifiedNoteInCollection:
allNotes
countOfNotes
noteForObjectID:
notesForIntegerIds:
allNotesWithoutBodiesInCollection:
collectionForInfo:
allStores
faultedInStoresForAccounts:
defaultStoreForNewNote
deleteAccount:
deleteStore:
shouldDisableLocalStore
hasMultipleEnabledStores
propertyValueForKey:
setHasPriorityInSaveConflicts:
receiveDarwinNotificationWithChangeLogging:
resetNotificationCount
cleanUpLocks
context:shouldHandleInaccessibleFault:forObjectID:andTrigger:
setAccountUtilities:
setIsMainContext:
setUsePrivateQueue:
_managedObjectContext
_localStore
_localAccount
_accountUtilities
_nextIdContext
_nextIdLock
_nextId
_objectCreationLock
_notificationCount
_logChanges
_indexInBatches
_hasPriorityInSaveConflicts
_inMigrator
_notePropertyObjectsRealized
_isMainContext
_usePrivateQueue
isMemberOfClass:
conformsToProtocol:
release
allSearchableItems
dataSources
searchIndexerWillBeginReindexing
main
error
searchIndexerDidFinishReindexingWithError:
shouldDeleteAllItemsBeforeIndexing
searchableItemsToIndexFromDataSource:
searchableItemIdentifiersToDeleteFromDataSource:
arrayWithObjects:count:
supportsVisibilityTestingType:
predicateForSearchableNotes
predicateForSearchableAttachments
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
respondsToSelector:
retain
autorelease
retainCount
zone
hash
superclass
description
debugDescription
noteVisibilityTestingForSearchingAccount
collectionInfo
basicAccountIdentifier
notesForServerIntIds:ascending:limit:
notesForServerIntIdsInRange:ascending:limit:
sequenceNumber
dictionaryWithCapacity:
accountIdentifier
externalIdentifier
notesForServerIds:
notesForGUIDs:
notesForServerIntIds:
notesForServerIntIdsInRange:
maximumServerIntId
minimumSequenceNumberForServerIntIds:
initWithTransactionInfoDictionary:
transactionInfoDictionary
stringWithFormat:
transactionIDForName:
invalidTransactionID
longLongValue
completionTransactionID
copyWithZone:
mutableCopyWithZone:
initWithPropertyListObjectRepresentation:version:
propertyListObjectRepresentation
valid
guaranteesCompletionOfTransactionInfo:
setTransactionInfoDictionary:
_transactionInfoDictionary
mutableTransactionInfoDictionary
setObject:forKeyedSubscript:
setTransactionID:forName:
setIndexingQueue:
indexingQueue
setOperationQueue:
operationQueue
setUnderlyingQueue:
setMaxConcurrentOperationCount:
dictionary
setDataSourcesByIdentifier:
processChanges
initWithTarget:selector:delay:waitToFireUntilRequestsStop:forceMainThread:
setChangeProcessingDelayer:
setObservingChanges:
setRetryTimers:
setRetryOnErrors:
initWithName:bundleIdentifier:
dataSourceDidChange:
removeObserver:name:object:
stopObservingChanges
object
dataSourcesByIdentifier
dataSourceIdentifier
changeProcessingDelayer
requestFire
needsReindexing
searchableIndex
initWithSearchableIndex:dataSources:
retryOnErrors
retrySelector:
clearRetryForSelector:
setCompletionBlock:
addOperation:
allValues
removeObjectForKey:
reindexAllSearchableItemsInIndex:completionHandler:
cancelAllOperations
finishRemainingOperationsWithCompletionHandler:
isScheduledToFire
fireImmediately
retryTimers
isScheduled
fire
enumerateKeysAndObjectsUsingBlock:
waitUntilAllOperationsAreFinished
deleteAllSearchableItemsWithCompletionHandler:
reindexSearchableItemsWithIdentifiers:inIndex:completionHandler:
reindexAllSearchableItemsInIndex
initWithSearchableIndex:dataSources:identifiersToIndex:
attributeSet
ic_dataSourceIdentifier
dataSourceWithIdentifier:
objectForSearchableItem:context:
initWithInitialInterval:maxInterval:target:selector:userInfo:
nextTimeInterval
scheduleToFire
searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:
searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
searchableIndexDidThrottle:
searchableIndexDidFinishThrottle:
removeDataSource:
reindexAllSearchableItemsWithCompletionHandler:
cancelIndexingOperationsWithCompletionHandler:
reindexSearchableItemsWithIdentifiers:completionHandler:
objectsForSearchableItems:inContexts:
setSearchableIndex:
_retryOnErrors
_observingChanges
_indexingQueue
_operationQueue
_dataSourcesByIdentifier
_searchableIndex
_changeProcessingDelayer
_retryTimers
setDispatchGroup:
dispatchGroup
currentRunLoop
dateWithTimeIntervalSinceNow:
runMode:beforeDate:
enter
leave
waitUntilFinishedWithRunLoopProcessingTime:
_dispatchGroup
localizedStringFromPersonNameComponents:style:options:
givenName
ic_addNonNilObject:
familyName
ic_localizedNameWithDefaultFormattingStyle
ic_componentsForSearchHighlighting
encodeObject:forKey:
decodeObjectForKey:
initWithImmutableData:
encodeWithCoder:
initWithCoder:
supportedArchivedClassNames
setOwner:
setSearchQueryable:
newQueryWithSearchTerms:
setQuery:
owner
searchQueryable
query
cancelled
delegate
findNextMatchingIdentifiersForQuery:isDone:
searchAsyncQueryable:asyncQuery:didFindNextMatchingIdentifiers:removingFoundIdentifiers:
setCancelled:
cancelQuery:
initWithTerms:searchQueryable:delegate:owner:
execute
cancel
_cancelled
_searchQueryable
_owner
_delegate
_query
evaluateWithObject:
didChooseToMigrateAccountsForContext:forAccountPassingTest:
initWithString:
scheme
path
host
didChooseToMigrateNote:context:
searchableContentKeyPaths
isPasswordProtected
title
trimmedTitle
noteAsPlainTextWithoutTitle
contentInfoText
dateForCurrentSortType
isSharedViaICloud
visibilityTestingType
identifier
objectIdentifier
searchIndexableTitleUsingContentTextIfNecessary:
modificationDate
searchResultsSection
searchResultCanBeDeletedFromNoteContext
isHiddenFromSearch
searchIndexStringsOutHasAdditionalStrings:
shouldUpdateIndexForChangedValues:
authorsExcludingCurrentUser
searchableItemIdentifier
searchDomainIdentifier
searchableItemAttributeSet
generateSearchIndexStringsOperation
ignoreInSearchIndexer
releaseMemoryForIndexing
guid
searchIndexableObjectIdentifierForManagedObjectID:
noteTitleFromSearchIndexableTitle:contentText:suffix:
objectWithID:
stringByRemovingTitle:fromString:
snippetForContent:
bundleWithIdentifier:
localizedStringForKey:value:table:
attachments
localizedStringWithFormat:
currentNoteListSortType
creationDate
initWithItemContentType:
setContentDescription:
setContentCreationDate:
setContentModificationDate:
setTextContent:
searchIndexableObjectWithIdentifier:includeDeleted:inNoteContext:
stringWithCharacters:length:
snippetAndTitleTrimCharacterSet
rangeOfString:
bundleProxyForIdentifier:
dataContainerURL
isReadOnlyPersistentStore
containerURLForSecurityApplicationGroupIdentifier:
groupContainerURLs
checkResourceIsReachableAndReturnError:
attributesForGroupContainerDirectory
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
initWithSuiteName:
setIsReadOnlyPersistentStore:
applicationDataContainerURL
applicationDocumentsURL
sharedUserDefaults
queryStringForSearchString:
setQueryString:
isCancelled
setSemaphore:
queryString
initWithQueryString:options:
setSearchQuery:
predicate
initWithPredicate:options:
searchQuery
start
semaphore
setResults:
setError:
orPredicateWithSubpredicates:
replaceOccurrencesOfString:withString:options:range:
predicateForSearchString:
searchQuery:didReturnItems:
searchQuery:statusChanged:
searchQuery:didFailWithError:
initWithSearchString:
initWithQueryString:
initWithPredicate:
results
_results
_error
_queryString
_predicate
_semaphore
_searchQuery
setObjectIDsToProcess:
setObjectIDsBeingProcessed:
setObjectIDsToIgnore:
setObjectIDsByIdentifier:
setIdentifiersByObjectID:
setProcessingQueue:
setNeedsReindexing:
setReindexing:
ic_managedObjectIDURI
uniqueIdentifier
objectForSearchableItemIdentifier:context:
objectIDsToIgnore
saveObjectIDsToIgnore
setUniqueIdentifier:
setDomainIdentifier:
setExpirationDate:
setIc_dataSourceIdentifier:
URIRepresentation
absoluteString
setIc_managedObjectIDURI:
setAttributeSet:
removeObject:
searchableItemForObject:
contextWillSave:
resetContextObservers
processingQueue
loadObjectIDsToIgnore
loadState
objectIDsToProcess
postNotificationName:object:
targetSearchIndexable
isTemporaryID
obtainPermanentIDsForObjects:error:
objectIDsByIdentifier
addEntriesFromDictionary:
identifiersByObjectID
saveState
isDeleted
objectIDsFromSearchableItems:
objectIDsBeingProcessed
removeAllObjects
isReindexing
stateDefaultsKey
stringByAppendingString:
objectIDsToIgnoreDefaultsKey
allObjects
synchronize
searchableItemsWithIdentifiers:
searchableItemsNeedingIndexing
searchableItemIdentifiersToBeDeleted
searchIndexerWillIndexSearchableItems:
searchIndexerDidFinishIndexingItems:error:
searchIndexerWillDeleteSearchableItemsWithIdentifiers:
searchIndexerDidFinishDeletingSearchableItemsWithIdentifiers:error:
searchableItemsForObjects:
_needsReindexing
_reindexing
_processingQueue
_objectIDsToProcess
_objectIDsBeingProcessed
_objectIDsToIgnore
_objectIDsByIdentifier
_identifiersByObjectID
searchableItemsForNotesMatchingPredicate:
firstObject
changedValues
initWithOrderedSet:
initWithObject:
initWithAssignedOrderedSet:
initForAnyContextWithObjectIdentifier:managedObjectContext:
initWithContextIdentifier:objectIdentifier:managedObjectContext:
orderedSet
identifiers
contextIdentifier
objectAtIndex:
initWithSearchIndexableIdentifier:
initForAnyContextWithObjectIdentifiers:
searchIndexableIdentifierAtIndex:
objectIdentifiers
_identifiers
mutableIdentifiers
removeObjectAtIndex:
minusOrderedSet:
unionOrderedSet:
addSearchIndexableIdentifier:
removeSearchIndexableIdentifier:
removeSearchIndexableIdentifierAtIndex:
minusIdentifiers:
unionIdentifiers:
integerValue
numberWithInteger:
sortDescriptorWithKey:ascending:
localizedStandardCompare:
sortDescriptorWithKey:ascending:selector:
sortDescriptorsForType:
sortDescriptorsForICSearchResultsForType:
sortTypeForTag:
setCurrentNoteListSortType:
sortDescriptorsForICSearchResultsForCurrentType
descriptionForNoteListSortType:
setCurrentNoteListSortTypeByTag:
isMenuItemCurrentSortTypeForTag:
tagForSortType:
setTarget:
setSelector:
setDelay:
setWaitToFireUntilRequestsStop:
setForceMainThread:
forceMainThread
internalRequestFire
waitToFireUntilRequestsStop
timer
delay
target
selector
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setTimer:
mainRunLoop
addTimer:forMode:
internalFireImmediately
internalCancelFireRequests
methodForSelector:
internalIsScheduledToFire
isValid
fireDate
initWithTarget:selector:delay:waitToFireUntilRequestsStop:
cancelPreviousFireRequests
_waitToFireUntilRequestsStop
_forceMainThread
_target
_selector
_delay
_timer
initWithMergeType:
objectSnapshot
cachedSnapshot
resolveConflicts:error:
sourceObject
newVersionNumber
snapshotFromRecord:
_forceInsertionForObject:
localStoreForNote:
accountExists:
legacyAccountForLegacyAccountType:context:
didChooseToMigrateLegacyAccountType:
sharedInstance
didChooseToMigratePrimaryICloudAccount
boolForKey:
legacyAccountForPrimaryICloudAccountWithContext:
legacyAccountForLocalAccountWithContext:
accountType
primaryICloudACAccount
childAccountsWithAccountTypeIdentifier:
accountForAccountIdentifier:context:
didChooseToMigrateAccount:context:
isLegacyLocalAccount:
stores
willSave
accountWithIdentifier:
displayAccount
setDidChooseToMigrate:
setType:
type
setConstraints:
setConstraintsPath:
constraintsPath
initWithContentsOfFile:
constraints
errorWithDomain:code:userInfo:
didTurnIntoFault
setAccountType:
preventMovingNotesToOtherAccounts
setPathToConstraintsPlist:
pathToConstraintsPlist
validateDefaultStore:error:
_constraints
_preventMovingNotesToOtherAccounts
currentThread
setCreationThread:
UTF8String
setDispatchQueue:
cancelPreviousPerformRequestsWithTarget:
currentIsCreationThread
creationThread
isExecuting
performBlock:
performSelector:onThread:withObject:waitUntilDone:
dispatchQueue
performBlockAndWaitUntilDone:block:
assertIsValidCallingThread
useDispatchQueueOnly
performBlockAndWaitUntilFinishedWithRunLoopProcessingTime:block:
_creationThread
_dispatchQueue
reachabilityWithAddress:
reachabilityForInternetConnection
stopNotifier
localWiFiStatusForFlags:
networkStatusForFlags:
reachabilityWithHostName:
sharedReachabilityForInternetConnection
reachabilityForLocalWiFi
startNotifier
connectionRequired
currentReachabilityStatus
_alwaysReturnLocalWiFiStatus
_reachabilityRef
bytes
string
appendFormat:
initForAnyContext
contextIdentifierString
forAnyContext
identifierForAnyContext
initWithContextIdentifierString:isMainContext:
isCompatibleWithContextIdentifier:
_forAnyContext
_contextIdentifierString
setIdentifiersToIndex:
identifiersToIndex
_identifiersToIndex
initForReadingWithData:
setRequiresSecureCoding:
setClass:forClassName:
setWithObjects:
decodeObjectOfClasses:forKey:
finishDecoding
unarchiveObjectWithExternalRepresentation:
contentID
destinationContext
preferredFilename
filename
mimeType
regularFileContents
persistAttachmentData:error:
associateSourceInstance:withDestinationInstance:forEntityMapping:
sourceInstancesForEntityMappingNamed:destinationInstances:
destinationInstancesForEntityMappingNamed:sourceInstances:
endEntityMapping:manager:error:
valueForKeyPath:
archivedDataWithRootObject:
setValue:forKeyPath:
createDestinationInstancesForSourceInstance:entityMapping:manager:error:
createRelationshipsForDestinationInstance:entityMapping:manager:error:
hasContextIdentifier:
specificIdentifierForContextIdentifier:
_contextIdentifier
_objectIdentifier
entityVersionHashesByName
metadataForPersistentStoreOfType:URL:error:
areStoreMetadata:matchingEntityVersionsInModel:
mappings
insertObject:atIndex:
canMigrateStoreMetadata:
sourceModelForStoreMetadata:
destinationModel
mappingModelForStoreMetadata:
migrateNotesStoreAtURL:storeType:options:sourceModel:destinationModel:mappingModel:error:
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:
initWithSourceModel:destinationModel:
migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:
moveItemAtURL:toURL:error:
appendString:
stringByAppendingPathExtension:
inferredMappingFromSourceModelNames:toDestinationModelName:
customMappingFromSourceModelName:toDestinationModelName:
modelForModelName:
setSourceModels:
setDestinationModel:
descriptionStringFromSourceStoreNames:destinationStoreName:
setDescriptionString:
sourceModels
modelByMergingModels:forStoreMetadata:
inferredMappingModelForSourceModel:destinationModel:error:
mappingModelFromBundles:forSourceModel:destinationModel:
descriptionString
_destinationModel
_sourceModels
_descriptionString
_type
initForObservingAccountStoreChanges:
accountStoreDidChange:
accountStore
aa_primaryAppleAccount
setPrimaryICloudACAccountValid:
isEnabledForDataclass:
setCurrentICloudAccountState:
isPrimaryICloudACAccountValid
updateICloudACAccountFromStore
aa_appleAccounts
internalInvalidatePrimaryICloudACAccount
currentICloudAccountState
allICloudACAccounts
primaryICloudAccountEnabled
invalidatePrimaryICloudACAccount
setAccountStore:
_primaryICloudACAccountValid
_primaryICloudACAccount
_accountStore
_currentICloudAccountState
accountIdentifiersEnabledToSyncDataclass:
updateAccountInfos
_accountStoreDidChange:
localNotesExist
localizedTitleForLocalSourceOfDataclass:usedAtBeginningOfSentence:
backgroundDispatchGroup
updateAccountInfosLock
tryLock
freshContext
accountDescription
startKeepingAccountInfosUpToDate
accountsEnabledForNotes
accountIDsEnabledForNotes
setBackgroundDispatchGroup:
setUpdateAccountInfosLock:
_accountIDsEnabledForNotes
_noteContext
_backgroundDispatchGroup
_updateAccountInfosLock
defaultTitleForEmptyNote
willChangeValueForKey:
setPrimitiveValue:forKey:
didChangeValueForKey:
isPlainText
setContentType:
contentType
setDeletedFlag:
deletedFlag
numberWithUnsignedLongLong:
setExternalFlags:
externalFlags
unsignedLongLongValue
setExternalServerIntId:
externalServerIntId
externalRepresentation
setExternalRepresentation:
externalContentRef
setExternalContentRef:
setExternalSequenceNumber:
externalSequenceNumber
isBeingMarkedForDeletion
noteId
setFlags:
flags
setServerIntId:
hasValidServerIntId
containsAttachments
setSequenceNumber:
belongsToCollection:
modificationDateForNoteBeingEdited
caseInsensitiveCompare:
textInputMode
primaryLanguage
existingManagedObjectWithIdentifier:managedObjectContext:
isInternetReachable
range:liesWithinRange:assert:
setInitialTimeInterval:
setMaxTimeInterval:
setUserInfo:
setBackoffCount:
initialTimeInterval
backoffCount
maxTimeInterval
fire:
_userInfo
_initialTimeInterval
_backoffCount
_maxTimeInterval
initWithIdentifier:objectIdentifier:modificationDate:title:contentText:authors:
contentTextUsingBlockingOperationIfNeededFromSearchIndexable:
attributeSetFromSearchIndexable:contentText:
contentTextFromSearchStrings:
componentsJoinedByString:
isFinished
stringByAppendingFormat:
attributeSetFromSearchIndexable:
attributeSetWithoutPerformingAdditionalOperationsFromSearchIndexable:
attachmentDirectoryPathForAttachmentObjectID:error:
numberWithUnsignedInteger:
unsignedIntegerValue
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
initWithBytes:length:
writeToFile:options:error:
attachmentDataFileURLWithError:
dataWithContentsOfURL:options:error:
prepareForDeletion
migrateFileForAttachment:toCurrentAttachmentPathWithError:
applyFileAttributesForAttachment:error:
fileExistsAtPath:isDirectory:
stringByDeletingLastPathComponent
moveItemAtPath:toPath:error:
attributesOfItemAtPath:error:
setAttributes:ofItemAtPath:error:
migrateAttachmentRelatedFilesInContext:error:
attachmentDataWithError:
setDataSources:
deleteAllItems
deleteItems
indexItems
weakToStrongObjectsMapTable
deleteSearchableItemsWithIdentifiers:completionHandler:
indexSearchableItems:completionHandler:
_dataSources
allVisibleNotesForAccountWithObjectID:
callStackSymbols
nonEmptyNoteExistsForLegacyAccountWithObjectID:
countOfVisibleNotesForAccountWithObjectID:
allVisibleNoteObjectIDsForAccountWithObjectID:
newLegacyContext
cachedHash
setCachedHash:
_object
_cachedHash
exceptionWithName:reason:userInfo:
initWithName:cachePath:
fileSystemRepresentation
_name
_cachePath
_fullPath
opened
close
index
sharedOptions
setUrl:
creationOptions
setIndex:
setTid:
removeDocumentForIdentifier:
createWithURL:
openWithURL:transactionId:
addDocumentWithIdentifier:content:transactionId:
removeDocumentsForIdentifiers:
_tid
_index
_url
setDisplayName:
contentText
coreSpotlightAttributeSet
setRelatedUniqueIdentifier:
coreSpotlightAttributeSetForUserActivity
authors
_identifier
_modificationDate
_title
_contentText
_authors
indexOfObjectPassingTest:
objectPassingTest:
indexesOfObjectsPassingTest:
objectsAtIndexes:
objectsPassingTest:
arrayWithCapacity:
containsObjectPassingTest:
objectsOfClass:
arrayByGroupingIntoArraysWithMaxCount:
username
emailAddress
folders
defaultFolder
supportsAttachments
initWithKeyName:searchable:searchableByDefault:unique:multiValued:
ic_managedObjectIDCustomKey
setValue:forCustomKey:
valueForCustomKey:
attributeForKey:
ic_dataSourceIdentifierCustomKey
ICGenerateSearchIndexStringsOperation
NoteBodyObject
NoteContext
NotesLocalization
NoteChangeObject
ICReindexAllItemsOperation
NoteVisibilityTestingImplementation
ICNoteVisibilityTesting
NSObject
NoteVisibilityTesting
NoteCollectionObject
NoteStoreObject
ICSearchIndexTransactionInfo
NSCopying
NSMutableCopying
ICPropertyListSerializable
ICSearchIndexMutableTransactionInfo
ICSearchIndexer
CSSearchableIndexDelegate
ICDispatchGroup
ArchivingSupport
ICSearchAsyncQueryAdaptor
ICSearchIndexableNote
ICSearchIndexable
SearchIndexableNote
ICNoteSnippetUtilities
ICAppUtilities
ICSearchQueryOperation
MDSearchQueryDelegate
ICSearchIndexableTarget
ICBaseSearchIndexerDataSource
ICSearchIndexerDataSource
ICLegacyMobileSearchIndexerDataSource
MNFNoteProperty
ICSearchIndexableIdentifiers
ICSearchIndexableMutableIdentifiers
ICNoteListSortUtilities
ICSelectorDelayer
NoteResurrectionMergePolicy
ICLegacyAccountUtilities
Private
NoteAccountObject
ICThreadBlockDispatcher
ICReachability
ICDataExtensions
ICSearchIndexableNoteContextIdentifier
ICIndexItemsByIdentifiersOperation
NSFastEnumeration
ExternalSequenceNumberToAttachmentNoteBodyToAttachmentMigrationPolicy
ICSearchIndexableIdentifier
ICLegacyNoteSearchUtilities
NotesMigrationManager
NotesMigrationMapping
SearchIndexable
ICAccountUtilities
AccountUtilities
NoteObject
NoteObjectAdditions
ICUtilities
ICIndexChangedItemsOperation
ICBackoffTimer
ICSpotlightUtilities
NoteAttachmentObject
ICIndexItemsOperation
ICSettingsUtilities
ICLegacyContext
ICWeakObject
ICExclusiveLock
NSLocking
ICContentIndexSearchIndexFile
ICSearchIndexFile
ICSearchQueryable
ICSpotlightAttributeSet
ICLegacyAccount
@16@0:8
v24@0:8@16
v16@0:8
@"ICSearchIndexableIdentifier"
@"NSMutableArray"
B16@0:8
B24@0:8@16
@24@0:8@16
Q16@0:8
v40@0:8{_NSRange=QQ}16@?32
@24@0:8Q16
@32@0:8{_NSRange=QQ}16
@32@0:8@16@24
{_NSRange=QQ}40@0:8{_NSRange=QQ}16^Q32
@36@0:8@16B24@28
@44@0:8@16B24@28Q36
v32@0:8^@16^@24
@28@0:8@16B24
@36@0:8@16B24B28B32
@36@0:8@16@24B32
v20@0:8B16
B24@0:8^@16
Q24@0:8@16
@28@0:8B16@20
v32@0:8@16@24
@28@0:8i16@20
q48@0:8@16@24@32@40
@"NSManagedObjectContext"
@"NoteStoreObject"
@"NoteAccountObject"
@"AccountUtilities"
@"CPExclusiveLock"
@"NSNumber"
@"NSMutableDictionary"
B24@0:8q16
@"NSPredicate"16@0:8
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@36@0:8@16B24Q28
@44@0:8{_NSRange=QQ}16B32Q36
I16@0:8
@24@0:8^{_NSZone=}16
@32@0:8@16q24
@"NSDictionary"
v32@0:8@16@?24
v32@0:8@"CSSearchableIndex"16@?<v@?>24
v40@0:8@16@24@?32
v40@0:8@"CSSearchableIndex"16@"NSArray"24@?<v@?>32
v24@0:8@"CSSearchableIndex"16
v24@0:8@?16
v24@0:8:16
@"NSObject<OS_dispatch_queue>"
@"NSOperationQueue"
@"CSSearchableIndex"
@"ICSelectorDelayer"
v24@0:8d16
@"NSObject<OS_dispatch_group>"
@48@0:8@16@24@32@40
@"<ICSearchQueryable>"
@"<ICSearchAsyncQueryable>"
@"<ICSearchAsyncQueryDelegate>"
@"NSArray"16@0:8
@"NSDate"16@0:8
@"NSManagedObjectContext"16@0:8
@"NSManagedObjectID"16@0:8
q16@0:8
@"NSString"24@0:8@"NSString"16
@24@0:8^B16
@"NSArray"24@0:8^B16
B24@0:8@"NSDictionary"16
@"CSSearchableItemAttributeSet"16@0:8
@"ICGenerateSearchIndexStringsOperation"16@0:8
B32@0:8@16^{NoteContext=#@@@@@@@@QBBBB@}24
v32@0:8@"MDSearchQuery"16@"NSArray"24
v32@0:8@16Q24
v32@0:8@"MDSearchQuery"16Q24
v32@0:8@"MDSearchQuery"16@"NSError"24
@"NSArray"
@"NSError"
@"NSString"
@"NSPredicate"
@"NSObject<OS_dispatch_semaphore>"
@"MDSearchQuery"
@"<ICSearchIndexable>"16@0:8
@"NSPersistentStoreCoordinator"16@0:8
@"NSArray"24@0:8@"NSArray"16
@"<ICSearchIndexable>"32@0:8@"CSSearchableItem"16@"NSManagedObjectContext"24
@"<ICSearchIndexable>"32@0:8@"NSString"16@"NSManagedObjectContext"24
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSError"24
v24@0:8@"NSError"16
@"NSMutableSet"
@"NSOrderedSet"
v24@0:8Q16
v24@0:8q16
@24@0:8q16
q24@0:8q16
@48@0:8@16:24d32B40B44
@44@0:8@16:24d32B40
:16@0:8
d16@0:8
@"NSTimer"
B32@0:8@16^@24
B32@0:8^{NoteContext=#@@@@@@@@QBBBB@}16@?24
B32@0:8^{NoteAccountObject=#@@}16^{NoteContext=#@@@@@@@@QBBBB@}24
^{NoteAccountObject=#@@}32@0:8q16^{NoteContext=#@@@@@@@@QBBBB@}24
B24@0:8^{NoteAccountObject=#@@}16
^{NoteAccountObject=#@@}32@0:8@16^{NoteContext=#@@@@@@@@QBBBB@}24
^{NoteAccountObject=#@@}24@0:8^{NoteContext=#@@@@@@@@QBBBB@}16
v20@0:8i16
i16@0:8
B32@0:8^@16^@24
v28@0:8B16@?20
v32@0:8d16@?24
@"NSThread"
@24@0:8r^{sockaddr_in=CCS{in_addr=I}[8c]}16
q20@0:8I16
^{__SCNetworkReachability=}
@40@0:8@16@24@32
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
B48@0:8@16@24@32^@40
B40@0:8@16@24^@32
@"ICSearchIndexableNoteContextIdentifier"
B32@0:8@16@24
B56@0:8@16@24@32@40^@48
B72@0:8@16@24@32@40@48@56^@64
@"NSManagedObjectModel"
@20@0:8B16
@"ACAccount"
@"ACAccountStore"
@"NoteContext"
@"NSLock"
{_NSRange=QQ}52@0:8{_NSRange=QQ}16{_NSRange=QQ}32B48
@56@0:8d16d24@32:40@48
@32@0:8@16^@24
@24@0:8^@16
B24@0:8@"NSManagedObjectID"16
@"NSArray"24@0:8@"NSManagedObjectID"16
Q24@0:8@"NSManagedObjectID"16
v24@0:8@?<v@?>16
@"NSManagedObject"32@0:8@"NSManagedObjectID"16^@24
@"<ICLegacyContext>"16@0:8
B24@0:8@"NSURL"16
B32@0:8@"NSURL"16^@24
v40@0:8@16@24^@32
v40@0:8@"NSString"16@"NSString"24^@32
@24@0:8@"NSString"16
@32@0:8@16^B24
@"NSArray"32@0:8@16^B24
^{__CXIndex=}16@0:8
v24@0:8^{__CXIndex=}16
v20@0:8I16
^{__CXIndex=}
@"NSURL"
@64@0:8@16@24@32@40@48@56
@"NSDate"
@24@0:8@?16
B24@0:8@?16
@24@0:8#16
@"NSSet"16@0:8
@"<ICLegacyFolder>"16@0:8
mutableSearchStrings
T@"NSMutableArray",&,N,V_mutableSearchStrings
searchIndexableIdentifier
T@"ICSearchIndexableIdentifier",C,N,V_searchIndexableIdentifier
v8@?0
cccc
isToday
TB,R,N
isYesterday
shortFormattedDate
T@"NSString",R,N
briefFormattedDate
com.apple.notes
///\?%*|"<>:
ic_trimmedString
ic_sanitizedFilenameString
content
T@"NSString",&,D,N
contentAsPlainText
owner
T@"NoteObject",&,D,N
externalRepresentation
T@"NSData",&,D,N
externalContentRef
NoteContextWillSaveNotification
NoteContextChangedElsewhereNotification
NoteContextLogsChanges
NoteContextUpdatedIndexNotification
NoteContextDarwinNotificationWithoutLoggedChanges
NoteContextDarwinNotificationWithLoggedChanges
local://local/account
local://local/store
LastTransactionID
LocalAccountAndStoreAlreadySetUp
LastIndexTidAlreadySetUp
ShouldLogIndexing
LOCAL_NOTES_STORE
Account
accountIdentifier == %@
Error getting local account: %@, %@
Error: found %lu local accounts, deleting all but one
Property
propertyKey == %@
Error fetching last transaction ID: %@, %@
Problem with duplicates: found %lu transaction IDs.  Will delete all but one.
Error: Couldn't save newly created unique objects: %@, %@
All references to managed objects should be tossed, since the Core Data stack was blown away.
Can't remove sqlite and idx files: %@
com.apple.notes.autoincrement.lock
com.apple.notes.objectcreation.lock
((deletedFlag == %@) AND (body.content != nil) AND (isBookkeepingEntry == %@))
((body.content = nil) AND (isBookkeepingEntry == %@))
Error: Problem performing fetch for NotesListController: %@, %@
Note
self IN %@
Can't batch fault objects: %@, with error: %@
NoteBody
NoteAttachment
(integerId IN %@)
Error getting notes with integer IDs: %@, %@
Store
name
Error getting list of all stores: %@, %@
Found no stores in [NoteContext allStores].  Will attempt to recover.
%K IN %@
account
Error fetching stores: %@
Found no stores in [NoteContext countOfStores].  Will attempt to recover.
Error getting list of all accounts: %@, %@
Found no accounts in [NoteContext allAccounts].  Will attempt to recover.
Error getting account for account identifier %@: %@, %@
com.apple.mobilenotes
DefaultNotesAccount
Error getting default account: %@, %@
Serious error: should have exactly one default notes account but have %lu instead.  Recovering.
note.store.account == %@
Error getting file directory URL for attachment: %@
Error removing attachment file: %@
Failed to get attachment folder URL for object ID: %@
Error batch deleting notes whil deleting account: %@
Error fetching property: %@, %@
DeviceSyncAnchorKey
ComputerSyncAnchorKey
Error: Saving failed after migration: %@, %@
Error: Failed to delete earlier notes.db: %@, %@
ERROR: Our notes.db file had mismatched note bodies, so we need to get rid of it.
Error: Failed to delete earlier notes.db after encountering mismatched note bodies: %@, %@
NextId
Error: Couldn't fetch next ID: %@, %@
integerId
max:
maxId
Error: Unresolved error while getting max integer ID in existence: %@, %@
counter
Error: Couldn't save next ID: %@, %@
notes.sqlite
notes.idx
Failed to create managed object context for legacy notes
Failed to load MobileNotes schema at %@
NotesModel
momd
Unexpected error while importing %@, %@
Creating new database...
Created new database successfully.
Second Error while creating new database %@, %@
dataaccessd
NoteChange
store
accountUtilities
T@"AccountUtilities",&,N,V_accountUtilities
isMainContext
TB,N,V_isMainContext
usePrivateQueue
TB,N,V_usePrivateQueue
managedObjectContext
T@"NSManagedObjectContext",R,&,N
<No protocol supplied>
NoteNote
MarkNotesDeleted
ICMigrationStateWillChangeNotification
ICMigrationStateDidChangeNotification
ICMigrationStateChangeUserInitiated
ICLocalAccountDidChooseToMigrateNotification
ICLocalAccountDidChooseToMigrateKey
DidMigrateLocalAccount
DidChooseToMigrateLocalAccount
T@"NoteStoreObject",&,D,N
changeType
T@"NSNumber",&,D,N
noteIntegerIds
T@"NSMutableSet",&,D,N
noteServerIds
noteServerIntIds
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
NoteCollectionType
NoteCollectionPrimaryIdentifier
NoteCollectionSecondaryIdentifier
(store == %@) AND (serverId IN %@)
(store == %@) AND (integerId IN %@)
(store == %@) AND (guid IN %@)
(store == %@) AND (externalServerIntId IN %@)
externalServerIntId
(store == %@) AND (externalServerIntId >= %d) AND (externalServerIntId < %d)
Unresolved error while getting max server int id in store %@.
Error: %@, %@
externalSequenceNumber
Unresolved error while getting min sequence number in store %@.
Error: %@, %@
store == %@
externalIdentifier
T@"NoteAccountObject",&,D,N
changes
T@"NSSet",&,D,N
syncAnchor
_transactionInfoDictionary
transactionInfoDictionary
T@"NSDictionary",C,N,V_transactionInfoDictionary
valid
count
TQ,R,N
Notes
com.apple.notes.indexer
Indexer
v32@?0@"NSString"8@"ICBackoffTimer"16^B24
v16@?0@"NSError"8
indexingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_indexingQueue
operationQueue
T@"NSOperationQueue",&,N,V_operationQueue
dataSourcesByIdentifier
T@"NSDictionary",C,N,V_dataSourcesByIdentifier
searchableIndex
T@"CSSearchableIndex",&,N,V_searchableIndex
changeProcessingDelayer
T@"ICSelectorDelayer",&,N,V_changeProcessingDelayer
observingChanges
TB,N,GisObservingChanges,V_observingChanges
retryTimers
T@"NSMutableDictionary",&,N,V_retryTimers
retryOnErrors
TB,N,V_retryOnErrors
dataSources
T@"NSArray",R,N
dispatchGroup
T@"NSObject<OS_dispatch_group>",&,N,V_dispatchGroup
MessageFileWrapper
path
filename
preferredFilename
data
attributes
linkDestination
T@"<ICSearchAsyncQueryable>",W,N,V_owner
searchQueryable
T@"<ICSearchQueryable>",W,N,V_searchQueryable
delegate
T@"<ICSearchAsyncQueryDelegate>",W,N,V_delegate
query
T@,&,N,V_query
cancelled
TB,V_cancelled
B16@?0^{NoteAccountObject=#@@}8
x-coredata
title
modificationDate
com.apple.NotesShared
NOTE_LIST_ATTACHMENTS_%lu
Localizable
com.apple.notes.spotlightrecord
group.com.apple.notes
com.apple.mobilenotes.SharingExtension
com.apple.Notes.SharingExtension
NotStarted
Starting
Gathering
Completed
Cancelled
Failed
%K contains[cdwt] %@
(**="%@*"cwdt)
queryString
T@"NSString",C,N,V_queryString
predicate
T@"NSPredicate",C,N,V_predicate
semaphore
T@"NSObject<OS_dispatch_semaphore>",&,N,V_semaphore
searchQuery
T@"MDSearchQuery",&,N,V_searchQuery
results
T@"NSArray",&,N,V_results
error
T@"NSError",&,N,V_error
NeedsReindexing
ObjectIDsByIdentifier
com.apple.notes.index.data-source
Unknown
v32@?0@"NSString"8@"NSManagedObjectID"16^B24
v32@?0@"NSManagedObjectID"8@"NSString"16^B24
v32@?0@"NSString"8@"NSString"16^B24
NotesIndexerState-%@
-ObjectIDsToIgnore
processingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_processingQueue
objectIDsToProcess
T@"NSMutableSet",&,N,V_objectIDsToProcess
objectIDsBeingProcessed
T@"NSMutableSet",&,N,V_objectIDsBeingProcessed
objectIDsToIgnore
T@"NSMutableSet",&,N,V_objectIDsToIgnore
objectIDsByIdentifier
T@"NSMutableDictionary",&,N,V_objectIDsByIdentifier
identifiersByObjectID
T@"NSMutableDictionary",&,N,V_identifiersByObjectID
needsReindexing
TB,V_needsReindexing
reindexing
TB,GisReindexing,V_reindexing
Legacy
guid IN %@
guid == %@
didChooseToMigrate
propertyKey
propertyValue
T@,&,D,N
orderedSet
(identifiers %@)
contextIdentifierPropertyListObjectRepresentation
objectIdentifier
identifiers
T@"NSOrderedSet",R,N,V_identifiers
kICSettingsNoteListSortTypeKey
kICNoteListSortTypeDidChangeNotification
creationDate
object.creationDate
object.title
object.modificationDate
SORT_BY_DATE_EDITED_TITLE
Date Edited
SORT_BY_DATE_CREATED_TITLE
Date Created
SORT_BY_TITLE_TITLE
Title
target
T@,W,N,V_target
selector
T:,N,V_selector
waitToFireUntilRequestsStop
TB,N,V_waitToFireUntilRequestsStop
forceMainThread
TB,N,V_forceMainThread
timer
T@"NSTimer",&,V_timer
delay
Td,V_delay
MFRestrictMessageTransfersToOtherAccounts
type
constraintsPath
(store IN %@)
(account == %@) AND (externalIdentifier == %@)
Error getting store for external identifier %@: %@, %@
Tried to use default store not from within account's stores.
reason
constraints
T@"NSDictionary",&,N,V_constraints
accountIdentifier
stores
defaultStore
accountType
Ti,N
pathToConstraintsPlist
T@"NSString",&,N
TB,D,N
preventMovingNotesToOtherAccounts
com.apple.notes.threaddispatch
creationThread
T@"NSThread",W,V_creationThread
dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
kNetworkReachabilityChangedNotification
%c%c
contextIdentifierString
(context id %@ isMainContext %ld)
T@"NSString",R,N,V_contextIdentifierString
TB,R,N,V_isMainContext
forAnyContext
TB,R,N,V_forAnyContext
identifiersToIndex
T@"NSArray",C,N,V_identifiersToIndex
contentID
mimeType
NoteToNote
Can't find destination note for attachment with CID: %@
note
v16@?0@"NSString"8
note.body.externalRepresentation
Can't read archive for attachment: %@
contextIdentifier
context %@ object %@
T@"ICSearchIndexableNoteContextIdentifier",R,C,N,V_contextIdentifier
T@"NSString",R,C,N,V_objectIdentifier
T@"NSManagedObjectContext",R,W,N,V_managedObjectContext
NotesErrorDomain
FailureReason
ICSearchIndexerDataSourceDidChangeNotification
No mapping claim to be able to migrate storeMetadata: %@
No mapping model specified
Error removing tmp directory: %@
tmpDB.sqlite
 -> 
Attachments
DidChooseToMigrate
ExternalSequenceNumber
NotesModelServerIntId
64bitServerIntId
DeletedNoteFlag
OptionalBodyContent
BookkeepingFlag
RequiredBookkeepingFlag
TemporaryIDs
Unexpected error building mapping model for store metadata: %@, error: %@
<%@: %p ; %@>
sourceModels
T@"NSArray",C,V_sourceModels
descriptionString
T@"NSString",C,V_descriptionString
destinationModel
T@"NSManagedObjectModel",&,V_destinationModel
Tq,V_type
notesIsUsingCloudKit
notesDidFinishMigrationToCloudKit
notesDidMigrateToCloudKitOnMac
ICAccountUtilitiesStoreDidChangeNotification
ICAccountUtilitiesPrimaryICloudAccountEnabledKey
ICAccountUtilitiesPrimaryICloudAccountDidChooseToMigrateKey
sharedInstance
accountStore
T@"ACAccountStore",&,N,V_accountStore
currentICloudAccountState
T@"NSDictionary",C,N,V_currentICloudAccountState
primaryICloudACAccountValid
TB,N,GisPrimaryICloudACAccountValid,V_primaryICloudACAccountValid
primaryICloudACAccount
T@"ACAccount",R,V_primaryICloudACAccount
primaryICloudAccountEnabled
didChooseToMigratePrimaryICloudAccount
DeviceLocalAccount
NotesAccountUtilitiesDidUpdateAccounts
/System/Library/PrivateFrameworks/AccountsUI.framework/AccountsUI
ACUILocalization
Failed to save after updating accounts infos: %@
backgroundDispatchGroup
T@"NSObject<OS_dispatch_group>",&,N,V_backgroundDispatchGroup
updateAccountInfosLock
T@"NSLock",&,V_updateAccountInfosLock
externalFlags
deletedFlag
The body object is of an unexpected type - %@ %@
NEW_NOTE
New Note
summary
author
T@"NSDate",&,D,N
contentType
containsCJK
body
T@"NoteBodyObject",&,D,N
attachments
isPlainText
TB,N
noteId
T@"NSURL",R,N
isMarkedForDeletion
isBeingMarkedForDeletion
isBookkeepingEntry
serverId
hasValidServerIntId
serverIntId
Tq,N
guid
T@"NSString",R,&,D,N
flags
TQ,N
T@"NSData",&,N
sequenceNumber
fi-FI
pt_PT
default
word
none
sentence
dictation
DebugModeEnabled
/Library/Notes/
initialTimeInterval
Td,N,V_initialTimeInterval
userInfo
T@,&,N,V_userInfo
backoffCount
TQ,N,V_backoffCount
maxTimeInterval
Td,N,V_maxTimeInterval
Spotlight
attachmentFile
Can't remove attachment data at path: %@, error: %@
Can't remove attachment folder at path: %@, error: %@
T@"NSArray",C,N,V_dataSources
kICDataMigratorDeleteLocalAccountGuardKey
ReindexOnLaunch
noteCollectionObject
%@(%@)
cachedHash
TQ,N,V_cachedHash
object
T@,R,W,N,V_object
NoteStoreHasMismatchedNoteBodies
NoteAddedNotification
NoteRemovedNotification
NoteChangedNotification
NoteStoreChangedExternallyNotification
creation_date
contains_cjk
modification_date
content_type
ORDER BY modification_date DESC
SELECT COUNT(*) FROM Note;
SELECT rowid FROM note_bodies WHERE note_id = ?;
main
note_bodies
Couldn't find the note body for a note
__LoadContent
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileNotesFramework_Sim/MobileNotes-1140.72/MobileNotes/NoteStore.m
SQLITE_OK == err
INSERT OR REPLACE INTO note_bodies VALUES (?, ?);
SELECT 1 FROM Note WHERE ROWID = ?;
CREATE TABLE note_bodies (note_id INTEGER, data, UNIQUE(note_id))
CREATE TRIGGER delete_note_bodies AFTER DELETE ON Note
BEGIN
DELETE FROM note_bodies WHERE note_id = OLD.ROWID;
END;
DELETE FROM note_bodies WHERE 0 = (SELECT COUNT(ROWID) FROM Note WHERE Note.ROWID = note_id LIMIT 1);
alter table Note rename to Note_old;
insert into Note (ROWID, creation_date, title, summary, contains_cjk, modification_date, author, content_type) select ROWID, creation_date, title, summary, 0, creation_date, NULL, 0 from Note_old;
drop table Note_old;
insert into Note (ROWID, creation_date, title, summary, contains_cjk, modification_date, author, content_type) select ROWID, creation_date, title, summary, contains_cjk, creation_date, NULL, 0 from Note_old
notes.db
NoteStoreChangedExternallyDarwinNotification
ExternalIdentifierProperty
You must pass a name cachePath into initWithName:
ContentIndex
T@"NSString",R,C,N
index
T^{__CXIndex=},N,V_index
TI,N,V_tid
T@"NSURL",C,N,V_url
identifier
T@"NSString",R,C,N,V_identifier
T@"NSDate",R,C,N,V_modificationDate
T@"NSString",R,C,N,V_title
contentText
T@"NSString",R,C,N,V_contentText
authors
T@"NSArray",R,C,N,V_authors
B32@?0@8Q16^B24
ManagedObjectID
DataSourceIdentifier
ic_managedObjectIDURI
T@"NSString",C,N
ic_dataSourceIdentifier
Trying to create managed object ID from nil URI string
Trying to create managed object ID from zero-length URI string
Could not create object ID from string %@ in coordinator %@
Saving legacy context
Unexpected object type in checked dynamic cast %@ expects %@
Protocol is nil
Unexpected object type in checked protocol cast %@ expects %s
invalid nil value for '%s'
transaction info count mismatch %@, %@
mutableTransactionInfoDictionary is nil
name is nil
Trying to listen for changes, but we are already
Starting to listen to changes in the search indexer
Trying to stop listening for changes, but we're not listening
Stopping listening to changes in the search indexer
Processing changes with indexing operation %@
Trying to add a second data source with the same identifier. Doing nothing.
Adding indexer data source: %@
Removing indexer data source: %@
Cancelling indexing operations
Finished cancelling indexing operations
Finishing remaining indexing operations
Index processing was scheduled, firing now
Retry timer %@ was scheduled. Firing now.
Finished remaining indexing operations
Deleting all searchable items
Error deleting all searchable items: %@
Finished deleting all searchable items
Received delegate call to reindex all items %@
Received delegate call to reindex %d items %@
Reindexing all searchable items in searchable index: %@
Finished reindexing all searchable items in index: %@
Adding indexing operation %@ with identifiers: %@
Finished indexing operation %@
Trying to retry %@, but it's already scheduled to be retried
Scheduling selector %@ to retry in %.0fs
Clearing retry timer for selector: %@
owner is nil
searchQueryable is nil
query is nil
Invalid scheme %@
Invalid coredata identifier for URL %@
Failed to get note object for id %@, it might have been deleted
NSFileManager failed to return our group container, falling back to bundle proxy
Failed to get group container URL
Group container URL is not reachable. URL=%@
Error creating group container: %@
Group container URL: %@
%@ was cancelled before it started
%@ starting
%@ finished
%@ returned %d items
%@ query status changed to %@
%@ search query failed with error: %@
%@ cancelling search query
Error fetching object with ID %@: %@
Falling back to identifier for searchable item %@
Could not find object for searchable item %@
Trying to get object for a searchable item that is not indexable: %@
Could not get object ID for searchable item %@
Creating searchable item for %@: %@
Skipping creation of searchable item for %@ without identifier
Skipping creation of searchable item without object ID %@ (%@) 
Skipping creation of ignored searchable item %@ (%@) 
Skipping creation of searchable item with no attribute set %@ (%@) 
Trying to start observing changes, but we already are %@
Starting to observe changes %@
We have object IDs to process after starting to observe changes %@
Trying to stop observing changes, but we already aren't observing %@
Stopping observing changes %@
Error obtaining permanent ID for %@: %@
Found search indexable without an identifier: %@
About to delete item from index: %@
About to delete an identifier from the index, but we don't know its object ID: %@
No object ID for searchable item: %@
Saving indexing state for %@: objectIDs=%lu needsReindexing=%d
Loaded indexing state for %@: objectIDs=%lu needsReindexing=%d
Loaded %ld object IDs to ignore for %@
Error fetching legacy note for searchable item identifier %@: %@
A legacy account's migration state changed, so let's re-index everything.
Unexpected Note List Sort Type
Unexpected sort type for sort descriptors
Unexpected tag for sort type
Unexpected sort type for tag.
Invalid account type %ld
Must be called from creation thread %@ but current thread is %@
Thread is not executing anymore %@
Invalid contextIdentifierString %@ forAnyContext %ld
Invalid contextIdentifier %@ for %@
Legacy note has empty identifier
Failed to get objectID from identifier %@ url %@
Asked for existing object for a nil identifier
range %@ doesn't lie within range %@
Generating search string for %@
exception when generating search index strings %@
%@ cancelled before it started
%@ error while deleting items, returning early
%@ cancelled while deleting items
%@ deleting all items before indexing
%@ error deleting all searchable items from index: %@
%@ deleted all searchable items from index
%@ gathering deleted items from data source %@
%@ data source %@ has %d item(s) to delete
%@ deleting %d item(s)
%@ error deleting searchable items: %@
%@ finished deleting searchable items
%@ gathering items to index from data source %@
%@ data source %@ has %d item(s) to index
%@ indexing %d item(s)
%@ error indexing searchable items: %@
%@ finished indexing searchable items
Error fetching visible note object IDs for account %@: %@
Collection is nil fetching note IDs for account %@
Trying to call performBlock on a legacy context with confinement concurrency type: %@
Trying to call performBlockAndWait on a legacy context with confinement concurrency type: %@
Index file was not closed before deallocation %@
Index file not opened for adding document %s
Index file not opened for removing document %s
Index file not opened creating new queries
identifier is nil
No apple account found for note account %@
