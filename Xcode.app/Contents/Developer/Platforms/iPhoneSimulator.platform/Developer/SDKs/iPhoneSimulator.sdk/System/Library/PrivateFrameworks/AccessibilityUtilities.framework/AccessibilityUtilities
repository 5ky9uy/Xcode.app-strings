?333333
MbP?
?;;;;;;
com.apple.springboard
com.apple.camera
com.apple.backboardd
assistivetouchd
com.apple.accessibility.AccessibilityUIServer
com.apple.mobilesafari
com.apple.purplebuddy
com.apple.PreBoard
com.apple.quicklook.quicklookd
com.apple.MobileSMS
com.apple.iBooks
com.apple.SiriViewService
com.apple.mobilemail
com.apple.MailCompositionService
com.apple.preferences
com.apple.PineBoard
com.apple.nanobuddy
com.apple.Carousel
v8@?0
UIApplication
sharedApplication
applicationState
AXInPreBoardScenarioUpdatedNotification
AXSessionIsLoginSessionUpdatedNotification
user named '%s'
user with identifier '%lu'
System/Library/AccessibilityBundles
AppleInternal/Library/AccessibilityBundles
System/Library/PrivateFrameworks/Accessibility.framework/Frameworks
ProductVersion
v32@?0@"NSString"8Q16^B24
apple-internal-install
GetJob
SetupDone
/System/Library/PrivateFrameworks/Accessibility.framework/Frameworks/AccessibilityDebuggerTarget.framework
Error: Unable to load AccessibilityDebuggerTarget framework: %@ 
Principal class :%@. does not respond to expected 'target' class method
com.apple.AccessibilityUtilities
Unable to check if task %@ has entitlement %@: %@
mobile
dataPointer
T@,N,V_dataPointer
*** AX Storage Error: Attempting to access a value with a nil key. Self:%{public}@.
Backtrace:
%{public}@.
AXProperties
*** AX Storage Error: Attempting to store a value with a nil key. Value:%p.
Self:%{public}@.
Backtrace:
%{public}@.
eventType
initialFingerCount
currentFingerCount
swipe
systemGesturePossible
paths
handIdentity
handIndex
handPosition
handEventMask
{CGPoint=dd}
  Hand Info
    Type:                    %@
    Initial Finger Count:    %i
    Current Finger Count:    %i
    Swipe:                   %i
    System Gesture Possible: %i
    Hand Paths:
 - eventType %@, initialFingerCount %i, currentFingerCount %i, swipe %i, systemGesturePossible %i , 
paths %@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
supportsSecureCoding
TB,R
TC,N,V_swipe
TI,N,V_eventType
TS,N,V_initialFingerCount
TS,N,V_currentFingerCount
T@"NSArray",&,N,V_paths
TC,N,V_systemGesturePossible
TI,N,V_handIdentity
TI,N,V_handIndex
T{CGPoint=dd},N,V_handPosition
TI,N,V_handEventMask
length
TQ,R,N
com.apple.MobileAsset.MacinTalkVoiceAssets
com.apple.MobileAsset.VoiceServices.CustomVoice
com.apple.MobileAsset.VoiceServices.CombinedVocalizerVoices
FormatVersion
VoiceVersion
VoiceId
q24@?0@"ASAsset"8@"ASAsset"16
 (%@)
%@-%@
ASAssetQuery error fetching results (for %{public}@) %{public}@ - %{public}@ (remote: %d)
Alex
Victoria
(%K == %@)
Name
|%@:%lu %s|
%@%@
%{public}@
%{public}s
%{private}@
{redacted}
%{private}s
Accessibility
axprintln
_AXLogThresholdQueue
repeatCount
time
(repeated %@ times(s)): %@
AXIPCErrorDomain
AXHearingAidMode
payload
Trying to serialize an AXIPC payload that does not support secure coding: %@
%@. Client port: %ld. Key: %d. Payload: %@
Ti,N,V_key
T@"NSDictionary",C,N,V_payload
clientPort
TI,N,V_clientPort
auditToken
T{?=[8I]},N,V_auditToken
senderBundleId
T@"NSString",R,N
AXValidation Error
See syslog
_installSafeCategoryOnClassNamed
AXError: %@
**************_____________**************AXError: %@
Argument type is different for method: -[%@ %@]. Actual: '%s', Stated: '%s'
Argument count is different for method: -[%@ %@]. Actual: %u, Stated: %u
Reference block is NULL.
block has no signature.
reference block has no signature.
block literal has no descriptor.
reference block literal has no descriptor.
@"%s"
@"%@"
Signature mismatch for block: '%s'; reference signature: '%s'
Value for key %@ on object <%@: %p> is not an %@; class: %@; value: %@
expected type encodings
", "%s
expected type encoding
Value for key %@ on object <%@: %p> doesn't encapsulate the right type; value: %@; actual type encoding: "%s"; %s: "%s".
UIAccessibility Error. Could not safe access iVar: %{public}@ on class: %{public}@
{_NSRange=QQ}
UIAccessibility Error (%{public}@): Undefined key: %{public}@, for class %{public}@ [%{public}@]
%{public}@
Caught exception '%@' while performing safe block; reason: '%@'. Stacktrace: %@.
Error: %{public}@
eQd5mlz0BN0amTp/2ccMoA
%@.%@
v24@?0@"NSString"8@?<v@?@"NSString">16
v16@?0@"NSString"8
Q16@?0@"NSString"8
AXCArray
AXCArrayArchivingKeyElementSize
AXCArrayArchivingKeyInitialCapacity
AXCArrayArchivingKeyArray
AXCArrayArchivingKeyCursor
target
T@,&,N,V_target
actionSelector
T:,N,V_actionSelector
displayDidRefreshCount
TQ,N,V_displayDidRefreshCount
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXDisplayLinkManager.m
-[AXDisplayLinkManager beginRequiringWarmUpMode]
Unexpectedly has updated target actions even though not handling display refresh.
-[AXDisplayLinkManager endRequiringWarmUpMode]
displayLink
T@"CADisplayLink",&,N
storedDisplayLink
T@"CADisplayLink",&,N,V_storedDisplayLink
activeTargetActions
T@"NSMutableSet",&,N,V_activeTargetActions
updatedTargetActions
T@"NSMutableSet",&,N,V_updatedTargetActions
hasUpdatedTargetActions
TB,N,V_hasUpdatedTargetActions
handlingDisplayRefresh
TB,N,GisHandlingDisplayRefresh,V_handlingDisplayRefresh
warmUpModeRequirementsCount
TQ,N,V_warmUpModeRequirementsCount
warmUpModeEnabled
TB,R,N,GisWarmUpModeEnabled
paused
TB,R,N,GisPaused
duration
Td,R,N
timestamp
AXAuditIssueTypeKey
AXAuditIssueElementKey
TimerAccessQueue
AXTimer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXAccessQueueTimer.m
__73-[AXAccessQueueTimer _afterDelay:processBlock:shouldTreatAsWritingBlock:]_block_invoke_2
Timer unexpectedly deallocated early or what??
__73-[AXAccessQueueTimer _afterDelay:processBlock:shouldTreatAsWritingBlock:]_block_invoke.80
__73-[AXAccessQueueTimer _afterDelay:processBlock:shouldTreatAsWritingBlock:]_block_invoke
%@: Attempted to schedule new block for execution %.2f seconds from now%@%@ onto a timer that already has a pending block; ignoring new block. Please consider whether you should call -cancel before scheduling this block.
 on access queue: 
-[AXAccessQueueTimer _didFinishProcessingBlock]
Can't wrap up processing of %@ unless running within a writing block of %@.
Can't schedule timer %@ synchronously; scheduling it asynchronously instead. To avoid this, break on -[%@ %s], find the call site initiating a reading block onto %@, and change that to a writing block.
-[AXAccessQueueTimer _reallyCancel]
Can't actually cancel %@ unless running within a writing block of %@.
Can't cancel timer %@ synchronously; cancelling it asynchronously instead. To avoid this, break on -[%@ %s], find the call site initiating a reading block onto %@, and change that to a writing block.
idle
pending
processing
cancelling
<%@: %p%@%@%@; state = %@; active = %@%@>
; label = "
; automaticallyCancelPendingBlockUponSchedulingNewBlock = YES
active
TB,R,N,GisActive
TB,R,N,GisPending
TB,N,GisActive,V_active
state
Ti,N,V_state
accessQueue
T@"AXAccessQueue",&,N,V_accessQueue
accessQueueIsExternal
TB,N,V_accessQueueIsExternal
dispatchTimer
T@"NSObject<OS_dispatch_source>",&,N,V_dispatchTimer
label
T@"NSString",C,V_label
automaticallyCancelPendingBlockUponSchedulingNewBlock
TB,N,V_automaticallyCancelPendingBlockUponSchedulingNewBlock
GuidedAccessEventTap
GuidedAccessHIDEventTap
EventTap: %d - %@
handler
T@?,C,N,Vhandler
identifier
T@"NSString",C,N,Videntifier
priority
Ti,N,Vpriority
type
Ti,N,V_type
systemClient
T^{__IOHIDEventSystemClient=},&,N,V_systemClient
matchingServiceHandler
T@?,C,N,V_matchingServiceHandler
AXEventTapManager <%p>. Taps:
%@. Priority:%d
v32@?0@"AXEventTapPair"8Q16^B24
B32@?0@8Q16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXEventTapManager.m
-[AXEventTapManager sendHIDSystemEvent:repostCreatorHIDEvent:senderID:]
we tried to make a HID event and send it but it wasn't there: %@
AXEventTapManager
q24@?0@"AXEventTapPair"8@"AXEventTapPair"16
-[AXEventTapManager _setEventTapPriority:priority:]
Where's my system client?
DeviceUsagePage
DeviceUsage
v32@?0^v8^v16^{__IOHIDServiceClient=}24
-[AXEventTapManager _removeHIDEventTapFilter:]
Pair had a system client, but was not the right type!
-[AXEventTapManager _runMatchingServiceHandler:]
Should not have asked to run the matching service handler for an event tap that did not have one.
installationGSCallback
T@?,C,N,V_installationGSCallback
installationHIDCallback
T@?,C,N,V_installationHIDCallback
installationEventRepPost
T@?,C,N,V_installationEventRepPost
B32@?0@"AXIDCRemoteController"8Q16^B24
v32@?0@"AXIDCRemoteController"8Q16^B24
v32@?0@8Q16^B24
v12@?0B8
securityDelegate
T@"<AXIDCManagerSecurityDelegate>",N
serviceType
T@"NSString",&,N,V_serviceType
slaveController
T@"AXIDCSlaveController",&,N,V_slaveController
browser
T@"NSNetServiceBrowser",&,N,V_browser
remoteControllers
T@"NSMutableArray",&,N,V_remoteControllers
delegate
T@"<AXIDCControllerBrowserDelegateProtocol>",N,V_delegate
T@"<AXIDCManagerSecurityDelegate>",N,V_securityDelegate
Tq,N,V_state
T@?,C,N,V_handler
Tq,N,V_type
T@"NSString",C,N,V_identifier
AXSpringBoardActionKeyActiveInterfaceOrientation
AXSpringBoardActionKeyActiveInterfaceOrientationUpdateDuration
AXSpringBoardUserChangedAudioRouteNotification
SpringBoardServerAccessQueue
result
alert reply result was not a number
No handler exists to handle alert reply
Validating SB reply messages
com.apple.private.kernel.jetsam
client died, trying again
visible
locked
Another alert is showing already!
alertType
data
show
register
cancelEnabled
cancel
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXSpringBoardServer.m
-[AXSpringBoardServer removeReachabilityHandler:]
Tried to remove reachability handler with no identifier.
record
error : %@
v24@?0@"AXIPCMessage"8@"NSError"16
orientation
string
-[AXSpringBoardServer _getPasscodeStatusImmediate:]
Should only be called from springboard
v16@?0B8B12
passcode
screenLocked
bundleId
-[AXSpringBoardServer clearSideAppState]
Not available as a remote service
-[AXSpringBoardServer isSiriTalkingOrListening]
Not Implemented locally
talking
gesture
query
v16@?0@8
excludeSiri
Could not find if magnifier is visible: %@
enabled
-[AXSpringBoardServer isMagnifierVisible]
-[AXSpringBoardServer applicationWithIdentifier:]
-[AXSpringBoardServer focusedAppProcess]
-[AXSpringBoardServer runningAppProcesses]
currentAlertHandler
T@?,C,N,V_currentAlertHandler
actionHandlers
T@"NSMutableArray",&,N,V_actionHandlers
reachabilityHandlers
T@"NSMutableDictionary",&,N,V_reachabilityHandlers
_AXSpringBoardServerInstance
springBoardServerInstanceIfExists
AXSpringBoardServerHelper
com.apple.accessibility.AXAssistiveTouchServer
com.apple.accessibility.AXBackBoardServer
com.apple.accessibility.AXSpringBoardServer
com.apple.accessibility.AXSBHearingAidServer
com.apple.accessibility.AXVoiceOverServer
AXSBServerDidShowTripleClick
AXSBUserAuthenticationStateDidChangeNotification
com.apple.accessibility.speech.asset.updater
com.apple.InCallService
AXGuidedAccessActiveStatusDidChangeBroadcastNotification
com.apple.zoomtouch.showalertbuddy
com.apple.accessibility.AXSytemReplyServer
AXServer Assertion Type
AXServer Assertion Holder ID
AXAssistiveTouchPayloadKeyDictionaryElementIndex
AXAssistiveTouchPayloadKeyDictionaryElementIndexes
AXAssistiveTouchPayloadKeyDictionaryElements
AXAssistiveTouchPayloadKeyDictionaryElementValue
AXGuidedAccessPayloadKeyRequestingAppIsSelfLockedToGAX
AXGuidedAccessPayloadKeyRequestingAppSetGAXEnabled
com.apple.accessibility.voiceover.vibration.exercise
com.apple.accessibility.voiceover.swipe.exercise
com.apple.accessibility.statusbarchanged
UIAXZoomAdjustmentChange
UsagePage
Keycode
KeyState
AXContainerManagerMessageKeyData
AXContainerManagerMessageKeyPath
AXContainerManagerMessageKeyError
LoginSessionNote.plist
AXLoginSessionNoteVoiceOverWasEnabledKey
AXLoginSessionNoteZoomWasEnabledKey
speakTypingCharacters
speakTypingWords
speakTypingPrediction
typingLanguage
AXRedirectedEventDetector
recentEvents
T@"NSMutableArray",&,N,V_recentEvents
flushEventsTimer
T@"AXDispatchTimer",&,N,V_flushEventsTimer
T@"NSString",R,N,V_type
T@"NSString",R,N,V_identifier
acquire
TB,R,N,V_acquire
retries
TQ,N,V_retries
com.apple.accessibility.AXServer.assertion
%@-%d-%d
couldn't get async result for message %@: %@
Asked to send nil message asynchronously
AX SpringBoardServer: Error: %{public}@
serverIdentifier
T@"NSString",C,N,V_serverIdentifier
assertionWorkBacklog
T@"NSMutableArray",&,N,V_assertionWorkBacklog
assertionRetryTimer
T@"AXDispatchTimer",&,N,V_assertionRetryTimer
assertionWorkQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_assertionWorkQueue
client
T@"AXIPCClient",&,N,V_client
server
T@"AXIPCServer",&,N,V_server
shouldRegisterClientCallbackSourceOnMainRunloop
TB,N,V_shouldRegisterClientCallbackSourceOnMainRunloop
AXAssistiveTouchIconLocationTopLeft
AXAssistiveTouchIconLocationTopMiddle
AXAssistiveTouchIconLocationTopRight
AXAssistiveTouchIconLocationMidLeft
AXAssistiveTouchIconLocationMidMiddle
AXAssistiveTouchIconLocationMidRight
AXAssistiveTouchIconLocationBottomLeft
AXAssistiveTouchIconLocationBottomMiddle
AXAssistiveTouchIconLocationBottomRight
AXAssistiveTouchIconTypeNotificationCenter
AXAssistiveTouchIconTypeCustom
AXAssistiveTouchIconTypeDevice
AXAssistiveTouchIconTypeSiri
AXAssistiveTouchIconTypeHome
AXAssistiveTouchIconTypeControlCenter
AXAssistiveTouchIconTypeLockScreen
AXAssistiveTouchIconTypeRotateScreen
AXAssistiveTouchIconTypeVolumeUp
AXAssistiveTouchIconTypeVolumeDown
AXAssistiveTouchIconTypeMute
AXAssistiveTouchIconTypeGestures
AXAssistiveTouchIconTypeTripleClick
AXAssistiveTouchIconTypeShake
AXAssistiveTouchIconTypeMultitasking
AXAssistiveTouchIconTypeScreenshot
AXAssistiveTouchIconTypeOrientation
AXAssistiveTouchIconTypeVoiceControl
AXAssistiveTouchIconTypePinch
AXAssistiveTouchIconTypeDoubleTap
AXAssistiveTouchIconTypeSysdiagnose
AXAssistiveTouchIconTypeSOS
AXAssistiveTouchIconTypeForceTap
__empty2__%@
__empty3__%@
__empty4__%@
__empty5__%@
__empty6__%@
__empty7__%@
__empty8__%@
assistant
voice-control
ringer-switch
CustomGesture-%@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXAssistiveTouchSettings.m
CGPoint _AXAssitiveTouchPositionForDefault8(NSString *)
We should not have been asked this location: %@
CGPoint _AXAssitiveTouchPositionForDefault6(NSString *)
CGPoint _AXAssitiveTouchPositionForDefault4(NSString *)
CGPoint _AXAssitiveTouchPositionForDefault1(NSString *)
SOSManager
initSOSManager
classSOSManager
/System/Library/PrivateFrameworks/SOS.framework/SOS
SOSLibrary
frameworkLibrary
AXInternalInPreBoardModeUpdatedNotification
AXInternalSessionIsLoginSessionChangedNotification
AXBackboardServerShouldToggleGuidedAccessNotification
AXSystemZoomStateKeyAppActivationAnimationStartDelay
AXSystemZoomStateKeyAppDeactivationAnimationStartDelay
AXSystemZoomStateKeyAppSwitcherRevealAnimationStartDelay
AXSystemZoomStateKeyReachabilityScaleFactor
AXSystemZoomStateKeyZoomLevel
AXSystemZoomStateKeyZoomFrame
T@"NSString",&,N,Videntifier
Error registering Zoom attributes change handler: %@
adjustment
inPreboardMode
AXBackBoardServerInstance
backBoardServerInstanceIfExists
%@ did not conform to %s! This is a bad bug! Things will go wrong when AXBackBoard asks itself stuff!
sesionIsLoginSession
namedTaps
afterNamedTap
systemEvent
displayPoint
contextId
fromContextId
toContextId
frame
could not convert frame %@ from context %lu to context %lu: %@
%@ did not conform to %s like it should! Bailing from %s!
-[AXBackBoardServer convertFrame:fromContextId:]
preference
value
notification
rect
Couldn't get zoom initial focus rect: %@
isSpringBoardFrontmost
isSyncingRestoringResettingOrUpdating
isAppSwitcherVisible
command
error
Could not ask backboard server about GAX Availability: %{public}@
availability
Could not ask backboard server to set Guided Access enabled by requesting app: %{public}@
Could not ask backboard server if GAX is self locked to app. %{public}@
Could not ask if GAX self lock is active and unmanaged: %{public}@
invertColorsEnabled
TB,D,N
TB,N
sessionIsLoginSession
T@"NSMutableData",&,N,V_data
Disable System Gestures
Disable Speak This! Gesture
Disable Notification Center gesture
Disable Control Center gesture
Disable Dashboard gestures
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXAssertion.m
-[AXAssertion _notifyServerAssertionWasAcquired]
Handing of assertion type:(%@) was not implemented
-[AXAssertion _notifyServerAssertionWasRelinquished]
AXAssertion:<%p> Type:%@ ClientID:%@
assertionType
T@"NSString",&,N,V_assertionType
T@"NSString",&,N,V_identifier
_AXAssertionServer:<%p> Heald Assertions:
  %@
v32@?0@"NSString"8@"NSArray"16^B24
Trying to add assertion holder ID:(%@) with type:(%@), but that ID is already in the holders list: (%@). Something is out of wack
Trying to remove assertion holder ID:(%@) with type:(%@), but that ID is not in the holders list: (%@). Something is out of wack
healdAssertionMap
T@"NSMutableDictionary",&,N,V_healdAssertionMap
assertionWasAcquiredHandler
T@?,C,N,V_assertionWasAcquiredHandler
assertionWasReleasedHandler
T@?,C,N,V_assertionWasReleasedHandler
[-()\s]
port
TI,N,V_port
T@?,R,N,V_handler
T@,R,N,V_target
selector
T:,R,N,V_selector
async
TB,R,N,V_async
%@. Serivce Name:%@. Running:%@ Server Port:%d. Clients:%@. Entitlements:%@. RunLoopSource:%p. SecurityTokens:%@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXIPCServer.m
-[AXIPCServer setServiceRunLoopSource:]
Why are you setting this? it's too late!
A message was received that could not be understood: %@
AXIPCMessageHandlerException
AX: %{public}@
@"AXIPCMessage"16@?0@"AXIPCMessage"8
Cannot start server. It is already running.
Cannot start server. Service name was empty
Cannot stop server. It is not running.
v32@?0@8@16^B24
B24@?0@8^B16
We don't have a record of this client being registered. Strange that we got an invalidation.
Cleaned up cached validation entitlement for %{public}@ = %{public}@
Client disconnected %{public}@
could not set custom queue size to %u: 0x%08x
Starting server (%{public}@) on thread (%{public}@:name:%{public}@:main:%{public}@)
Could not start server thread. could not register purple port. self:%{public}@
Could not start server thread. server runloop source was NULL. self:%{public}@
Could not start server thread. client invalidation source was NULL. self:%{public}@
Could not start server thread. could not get client invalidation port. self:%{public}@
Clients only need to register once!
Error trying to listen for client invalidation
v16@?0@"NSData"8
Server could not handle received message.  inData could not be unarchived to a message object
Not privileged to communicate
v16@?0@"AXIPCMessage"8
Warning: no handler was for message key: (%d). Falling back to default handler
ERROR: %{public}@
PID:%@
running
TB,N,GisRunning,V_running
serviceName
T@"NSString",&,N,V_serviceName
handlers
T@"NSMutableDictionary",&,N,V_handlers
defaultHandler
T@?,C,N
perPidService
TB,N,V_perPidService
machPort
TI,R,N,V_serverPort
clientInvalidationCallback
Did not find server for server port %d
reply to message failed: %{public}s
Reply port was invalid, name: 0x%x
async reply to message failed: %{public}s
Could not find server for this client invalidation handler! %{public}@ local: %d, remote: %d
UIWindow
Unable to find class %s
/System/Library/Frameworks/UIKit.framework/UIKit
AXIPCErrorKeyMachError
postConnectionBlock
T@?,C,N,V_postConnectionBlock
timeoutTimer
T@"AXAccessQueueTimer",&,N,V_timeoutTimer
didTimeout
TB,N,V_didTimeout
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXIPCClient.m
-[AXIPCOutstandingAsyncRequest initWithReplyPort:handlerQueue:handler:]
Must give a valid mach port.
reply send-once right was destroyed, so this async request (%@) will never receive a reply.
replyQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_replyQueue
replyPort
TI,R,N,V_replyPort
replyHandler
T@?,R,N,V_replyHandler
replyMachPortSource
T^{__CFRunLoopSource=},R,N,V_replyMachPortSource
connection
AXIPCClient:<%p> Service:%@ ID:%@ connected:%@
Why are you setting the client identifier twice? Old: %{public}@, New: %{public}@
AX Asked for client callback port but we had not yet registered
Client (%{public}@) registering with server on thread (%{public}@:name:%{public}@:main:%{public}@). UsesMainThreadRunloop:%{public}@
Could not create a server source for the client to register with the server
Could not register with server: %{public}@
Could not register with server with client identifier: %{public}@
Couldn't register as connection did not exist
Could not register with server for %@. %d tries remaining: %@
Exhausted registration attempts for %@: %@
client could not connect to new service: %{public}@ %{public}@
Could not find server for service: %@
Connected to server: %{public}@ %d
Could not make mach port
Client could not connect. It is already connected
Client could not connect. Was initialized with an empty service name.
Client could not disconnect. It is already disconnected
Could not verify connection. server port was nil
Could not verify connection. client is not connected
Could not send simple message (%@). server port is NULL [%@]
Could not send simple message (%@). Port:%d. Error:%d (0x%x). 
B24@?0I8I12@"NSData"16
Reply data could not be converted into a message
Could not send message (%@). Port:%d. Error:%d (0x%x). Timeout:%f(%d). 
-[AXIPCClient sendMessage:withError:]
Should not have a reply in the failure case
Could not allocate reply port: %d
Could not send message (%@). Port:%d. Error:%@.  %@
-[AXIPCClient sendAsyncMessage:replyOnQueue:replyHandler:]
If we did not succeed sending the message we should have an error here.
-[AXIPCClient _attemptToEstablishConnection]
%s has to run in a writing block of the connection queue.
A connection to the server could not be made after %{public}@s. Calling timeout blocks
MACH_MSG_SUCCESS
MACH_MSG_MASK
MACH_MSG_IPC_SPACE
MACH_MSG_VM_SPACE
MACH_MSG_IPC_KERNEL
MACH_MSG_VM_KERNEL
MACH_SEND_IN_PROGRESS
MACH_SEND_INVALID_DATA
MACH_SEND_INVALID_DEST
MACH_SEND_TIMED_OUT
MACH_SEND_INTERRUPTED
MACH_SEND_MSG_TOO_SMALL
MACH_SEND_INVALID_REPLY
MACH_SEND_INVALID_RIGHT
MACH_SEND_INVALID_NOTIFY
MACH_SEND_INVALID_MEMORY
MACH_SEND_NO_BUFFER
MACH_SEND_TOO_LARGE
MACH_SEND_INVALID_TYPE
MACH_SEND_INVALID_HEADER
MACH_SEND_INVALID_TRAILER
MACH_SEND_INVALID_RT_OOL_SIZE
MACH_RCV_IN_PROGRESS
MACH_RCV_TIMED_OUT
MACH_RCV_INTERRUPTED
MACH_RCV_PORT_CHANGED
MACH_RCV_INVALID_NOTIFY
MACH_RCV_INVALID_DATA
MACH_RCV_PORT_DIED
MACH_RCV_IN_SET
MACH_RCV_HEADER_ERROR
MACH_RCV_BODY_ERROR
MACH_RCV_INVALID_TYPE
MACH_RCV_SCATTER_SMALL
MACH_RCV_INVALID_TRAILER
MACH_RCV_IN_PROGRESS_TIMED
Unknown mach error :%d (0x%x)
connected
TB,N,GisConnected,V_connected
T@"NSString",C,N,V_serviceName
serverPort
T^{__CFMachPort=},N,V_serverPort
postConnectionTasks
T@"NSMutableArray",&,N,V_postConnectionTasks
connectionQueue
T@"AXAccessQueue",&,N,V_connectionQueue
usesPerPidLookup
TB,N,V_usesPerPidLookup
Ti,N,V_pid
serviceMachPort
TI,R,N
portDeathHandler
T@?,C,N,V_portDeathHandler
portDeathAccessQueue
T@"AXAccessQueue",&,N,V_portDeathAccessQueue
timeout
Tf,N,V_timeout
clientIdentifier
T@"NSString",C,N,V_clientIdentifier
clientCallbackPort
TI,R,N,VclientCallbackPort
clientCallbackSource
T^{__CFRunLoopSource=},R,N,VclientCallbackSource
shouldRegisterCallbackSourceOnMainRunloop
TB,N,VshouldRegisterCallbackSourceOnMainRunloop
Client went invalid
Couldn't find target class name for safe category class %@
Couldn't find target class named %@ for safe category class %@
Failed to cast object <%@: %p> as safe category %@ %@
Failed to cast object <%@: %p> as class %@ %@
Failed to cast object <%@: %p> as protocol %@ %@
<MSHRunLoopSource %p> {port = %x, callback = %p}
%d: badly generated MIG reply for port %x
GuidedAccess
GAXTimeRestrictions
GAXIntegrity
GAXAppLaunching
AXValidations
UnitTesting
EventTap
UserInterfaceService
VOTHandwriting
BBServer
SBServer
AppCompareGeometry
SpeechAssetDownloader
Zoom
VOTSpeech
AVSpeechSynthesis
AXOrator
ElementTraversal
BaseHitTest
ScrollToVisible
VisibleFrame
OpaqueElements
VOTiCloud
VOTAudio
BrailleGestures
VisualAlerts
VOTVNotifications
VOTVFocus
VOTKeyboard
VOTVExplorer
VOTElement
AudioRouting
LocCaptionPanel
SpeakSelection
SpeakTyping
ContextKit
SCElementNav
Pronunciations
SCPauseResume
SwitchControl
BrailleHardware
SwitchControlHardware
AccessibilityBundleLoading
AssistiveTouch
UIAutomation
VoiceOverIAP
VoiceOverLifeCycle
Magnifier
MagnifierBright
VoiceOver
AXNotifications
AXVectorKit
AXCharacterVoices
AXAggregateLogging
MagicTapToggle
BrokenHomeButton
argument
size_bytes_format
size_kilobytes_format
size_megabytes_format
size_gigabytes_format
magnification.factor.format
AXBinaryMonitorQueue
%@.bundle
.bundle
%@.framework
.dylib
%@.dylib
not adding handler, block was null
not adding handler, binary name was nil
.framework
bundle
framework
dylib
bundleHandlerMap
T@"NSMutableDictionary",&,N,V_bundleHandlerMap
frameworkHandlerMap
T@"NSMutableDictionary",&,N,V_frameworkHandlerMap
dylibHandlerMap
T@"NSMutableDictionary",&,N,V_dylibHandlerMap
binaryMonitorQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_binaryMonitorQueue
AXDateFormatter
seconds.format.integer
seconds.format.float
minutes.format
hours.format
days.format
AX_SUB_SECOND_ABBREVIATION
Incoming date is nil
com.apple.accessibility.unmanaged.asam.uuid
Siri Semantic Context
ADTarget
%@ (generic symbols)
(DELAYED) 
(Build as DEBUG) 
validating and Installing AX Safe Categories on 
validating 
****************** Finished %@. Success! *****************
********************************************************************
* AX: Failed %@. %lu errors:
********************************************************************
Class Not Present: %@
%@: %@ is not a kind of %@
%@: Ivar: %@ Not Present on Class: %@
NSInteger
NSUInteger
BOOL
CGFloat
%@: %@ : Ivar is not the right type: %@ [OLD: %@ CURRENT: %s]
%@: %@ %@ method not present: %@
Class
Instance
Method does not exist
Unable to determine return type.
Incorrect return type: expected:%@ actual:%@
Incorrect argument count: expected:%@ actual:%@
Actual arg not found at position:%@ expected:%@
Incorrect argument at position:%@
 expected:%@
 actual:%@
%@: %@ method: (%@) on class: %@.
%@: %@ Property not present: %@
%@: Class:%@ Does not conform to Protocol:%@
%@: %@ Protocol does not conform to protocol: %@
%@: %@ Protocol %@ %@ method not present: %@
required
optional
instance
class
%@: %@ Protocol property not present: %@
AX Safe Category class not found: %@
%@ is not an accessibility class!
shouldLogToConsole
TB,N,V_shouldLogToConsole
shouldCrashOnError
TB,N,V_shouldCrashOnError
shouldReportToServer
TB,N,V_shouldReportToServer
numberOfValidationErrors
TQ,N,V_numberOfValidationErrors
consoleErrorMessages
T@"NSMutableArray",&,N,V_consoleErrorMessages
validationReportingServices
T@"<AXValidationReportingServices>",&,N,V_validationReportingServices
forceDoNotReport
TB,N,V_forceDoNotReport
validationTargetName
T@"NSString",C,N,V_validationTargetName
overrideProcessName
T@"NSString",C,N,V_overrideProcessName
debugBuild
TB,N,GisDebugBuild,V_debugBuild
%@ [%d | %@] {%@}
T@"NSDictionary",&,N,V_payload
T@"NSError",&,N,V_error
UUID
T@"NSString",&,N,V_UUID
sendCompletion
T@?,C,N,V_sendCompletion
pathIndex
pathIdentity
pathProximity
pathPressure
pathMajorRadius
pathMajorRadiusTolerance
pathLocation
pathWindowContextID
pathWindow
pathTwist
pathMinorRadius
pathQuality
pathDensity
pathEventMask
orbValue
transducerType
altitude
azimuth
barrelPressure
willUpdateMask
didUpdateMask
      Path Index:        %i
      Identity:          %i
      Proximity:         %i
      Pressure:          %f
      Major Radius:      %f
      Location:          x: %f y: %f
      Window Context ID: %u
      Window:            %p
 - pathIndex %i, pathIdentity %i, pathProximity %i, pathPressure %f, pathMajorRadius %f, pathLocation.x %f, pathLocation.y %f, pathWindowContextID %u, pathWindow %p
T^v,N,V_pathWindow
TC,N,V_pathIndex
TC,N,V_pathIdentity
T{CGPoint=dd},N,V_pathLocation
TI,N,V_pathWindowContextID
TC,N,V_pathProximity
Tf,N,V_pathPressure
Tf,N,V_pathMajorRadius
Tf,N,V_pathMinorRadius
Tf,N,V_pathMajorRadiusTolerance
Tf,N,V_pathTwist
Tf,N,V_pathQuality
Tf,N,V_pathDensity
TI,N,V_pathEventMask
Tf,N,V_orbValue
TI,N,V_transducerType
Tf,N,V_altitude
Tf,N,V_azimuth
Tf,N,V_barrelPressure
TI,N,V_willUpdateMask
TI,N,V_didUpdateMask
firstPath
T@"AXEventPathInfoRepresentation",R,N
%@ [%f %f %f]
TI,N,V_type
Tf,N,V_x
Tf,N,V_y
Tf,N,V_z
AXTrampoline:<%p>. caller:%@ target:%@
No method signature to act on. Ignoring this invocation
An IMP could not be found for the invocation with selector:%@. caller:%@ target:%@
A methodSignature could not be found for selector:%@, on caller:%@. You probably should not be trampolining this method
caller
T@,N,V_caller
targetClass
T#,N,V_targetClass
warnAboutUnknownSelectors
TB,N,V_warnAboutUnknownSelectors
v16@?0r^{CGPathElement=i^{CGPoint}}8
v44@?0i8^{CGPoint=dd}12Q20Q28^B36
MoveToPoint
AddLineToPoint
AddQuadCurveToPoint
AddCurveToPoint
CloseSubpath
Unhandled path element type
%f, %f
elementTypes
singlePoints
doublePoints
triplePoints
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/CGPath+AXExtensions.m
-[AXPathWrapper initWithCoder:]
Out of bounds access to <AXCArrayRef: %p>; number of elements in the array: %lu; index: %ld
path
T^{CGPath=},N,V_path
*** Assertion failure in %s, %@:%lu.
Wired Headphones
Error: %@
route: %{public}@, ports: %{public}@
q24@?0@8@16
portUID
channelNumber
compare: %{public}@[%{public}@] - result %{public}@
saved channels %{public}@: 
returnedChannels channels %{public}@
saving channels: %{public}@ %{public}@
portType
T@"NSString",&,VportType
portName
T@"NSString",&,VportName
T@"NSString",&,VUID
ttsChannels
T@"NSArray",&,V_ttsChannels
inputs
T@"NSArray",&,Vinputs
outputs
T@"NSArray",&,Voutputs
ChannelLayout_Left
ChannelLayout_Right
ChannelLayout_Center
ChannelLayout_LeftCenter
ChannelLayout_RightCenter
ChannelLayout_RearLeft
ChannelLayout_RearRight
%d - Unknown channel name - file a bug
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXOrator.m
void AXAssertMainThreadCallback()
We should have been called back on the main thread!
processEmoticons
useMonarchStyleSpeechRate
AXOratorErrorDomain
Start speaking called while in audio interruption.  Setting flags instead.
Pause speaking called while in audio interruption.  Setting flags instead.
Resume speaking called while in audio interruption.  Setting flags instead.
Unable to continue speaking from synthesizer.
QuickSpeak.bundle
quickspeak.sample.message
QuickSpeak
Tried to speak next item while in audio interruption.  Saving it for later.
Our substring range was greater than speaking content! (%lu,%lu) %@
Speaking %{public}@...
faster
slower
Respeaking utterance.  Last spoken substring range was %{private}@
Last utterance language tag is %{private}@
-[AXOrator _respeakUtteranceIfNeeded]
We said we enqueued the last speech sequence item, but there were no speech sequence items
The last utterance is already on the queue, so we need to remove it first.
Paused, so leaving the last utterance on the queue
Did not need to respeak utterance.
Finished all content, so picking the last token. %ld
We tried to skip a unit in the currently spoken text, but hadn't tried to speak a substring yet.  This is possible but probably requires extremely fast timing.  If not, something may be wrong
Last spoken substring range was %{private}@.
Skipped to boundary.
Next speech sequence item was %{private}@.
%{public}@...
Fast forwarding...
Rewind...
Speaking content ranges were %{private}@.
-[AXOrator _skipByUnit:boundary:]
We shouldn't even have been able to set the speaking content to something that would have no tokens, as we check length in startSpeaking
Current token index was %ld.
Could not find token for currently speaking range %@, token ranges %@
Succeeded at %{public}@.
fast forwarding
rewinding
Failed to %{public}@.
fast forward
rewind
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
Did begin interruption.
Error when pausing due to interruption: %{public}@
Did end interruption.
Error starting speaking after interruption: %{public}@
Error when resuming after interruption: %{public}@
Tried to set audio session %{public}@ during an audio interruption.
inactive
Setting audio session active: %i
Error trying to set the audio session %{public}@: %{public}@
Error setting audio session category for AXOrator: %{public}@
-[AXOrator speechSynthesizer:willSpeakRangeOfSpeechString:utterance:]
Synthesizer will speak range %{private}@ of %{private}@, but we did not track the last utterance range.  It could be that we tried to stop speaking before getting this callback.
Somehow the synthesizer was able to speak range %@ that was outside of what we had last tracked to be the entire utterance's range (%@).
Spoke range %{private}@.
Finished speaking for utterance %{private}@, but last utterance was %{private}@
Audio interruption notification: %{public}@
Got unknown audio interruption type %i
Media services were lost.  Treating as an interruption.
Media services were reset.  Treating as the end of an interruption.
voiceIdentifier
T@"NSString",&,N,V_voiceIdentifier
selectedContent
T@"AXLanguageTaggedContent",&,N,V_selectedContent
speakingContent
T@"AXLanguageTaggedContent",&,N,V_speakingContent
speakingContentTokenRanges
T@"NSArray",&,N,V_speakingContentTokenRanges
numberOfTokensToSkip
TQ,N,V_numberOfTokensToSkip
speechSynthesizer
T@"AVSpeechSynthesizer",&,N,V_speechSynthesizer
speechSequenceItems
T@"NSMutableArray",&,N,V_speechSequenceItems
lastUtteranceLanguageCode
T@"NSString",&,N,V_lastUtteranceLanguageCode
lastUtteranceSubstringRange
T{_NSRange=QQ},N,V_lastUtteranceSubstringRange
lastSpokenSubstringRange
T{_NSRange=QQ},N,V_lastSpokenSubstringRange
lastUtterance
T@"AVSpeechUtterance",&,N,V_lastUtterance
lastUtteranceLanguageTag
T@"AXLanguageTag",&,N,V_lastUtteranceLanguageTag
shouldSpeakNextItemOnResume
TB,N,V_shouldSpeakNextItemOnResume
isAudioSessionActive
TB,N,V_isAudioSessionActive
pendingAudioSessionActive
TB,N,V_pendingAudioSessionActive
isInAudioInterruption
TB,N,V_isInAudioInterruption
audioInterruptionStartedTime
Td,N,V_audioInterruptionStartedTime
wasSpeakingBeforeAudioInterruption
TB,N,V_wasSpeakingBeforeAudioInterruption
didRequestStartSpeakingDuringAudioInterruption
TB,N,V_didRequestStartSpeakingDuringAudioInterruption
didRequestPauseSpeakingDuringAudioInterruption
TB,N,V_didRequestPauseSpeakingDuringAudioInterruption
didRequestResumeSpeakingDuringAudioInterruption
TB,N,V_didRequestResumeSpeakingDuringAudioInterruption
requestedLanguageCodeDuringAudioInterruption
T@"NSString",C,N,V_requestedLanguageCodeDuringAudioInterruption
T@"<AXOratorDelegate>",N,V_delegate
content
T@"NSString",C,N
speakingContext
Tq,N,V_speakingContext
spellOutContent
TB,N,V_spellOutContent
AXApp<%p>: PID:%@ BundleID:%@ Primary:%@ FullScrModal:%@
bundleID
layoutRole
bundleIdentifier
T@"NSString",&,N,V_bundleIdentifier
Tq,N,V_layoutRole
isLayoutPrimary
TB,R,N
isLayoutFullscreenModal
Domain:%@ Code:%@ Reason:%@
home button press
lock button press
volume button press
ringer switch state change
motion
shake
touch
orientation change
unknown event
null event
HAND: loc:(%.1f, %.1f) windowLoc:(%.1f, %.1f) window:%p 
initFingers:%d curFingers:%d
PATH: id:%d loc:(%.1f, %.1f) windowContextID:%lu, window:%p
DeviceClassNumber
main-screen-class
device-name-localized
ipad
arm64
screen-dimensions
main-screen-scale
%@_%@
IPAD
IPOD
IPHONE
GeneralAccessibility
-iOS
-tvOS
CURSOR_COLOR_BLUE
CURSOR_COLOR_WHITE
CURSOR_COLOR_BLACK
CURSOR_COLOR_GREEN
CURSOR_COLOR_YELLOW
CURSOR_COLOR_RED
CURSOR_COLOR_ORANGE
did not recognize cursor color: %@
search.rotor.typing.mode
search.rotor.textselection
search.rotor.character
search.rotor.word
search.rotor.line
search.rotor.header
search.rotor.link
search.rotor.formelement
search.rotor.visitedlink
search.rotor.nonvisitedlink
search.rotor.image
search.rotor.statictext
search.rotor.zoom
search.rotor.table
search.rotor.list
search.rotor.landmark
search.rotor.button
search.rotor.textfield
search.rotor.searchfield
search.rotor.same
search.rotor.allitems
search.rotor.hints
search.rotor.rate
search.rotor.punctuation
search.rotor.sounds
search.rotor.volume
search.rotor.audio.ducking
search.rotor.handwriting
search.rotor.braille.gesture
search.rotor.container
search.rotor.vertical.navigation
search.rotor.navigation.direction
search.rotor.languages
/System/Library/CoreServices/VoiceOverTouch.app
VOTLocalizedStrings
%@.settings
%@.visual
%@%08x
%@%04x
plist
VOTPunctuationVerbosenessLevels
Missing a localized version for the following Unicode Character (UnicodeHex.%x)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXLocalization.m
UTF32Char AXUnicodeCodePointForCharacterString(NSString *)
Unicode only supports up to 32 bits per code point AFAIK
UnicodeHex.
VOTOutputPunctuation
VOTOutputTextProcessing
UnicodeHex.Math.
langMap
 AltLangs:
AXLang <%p>. LangID:%@%@ western:%@ ambiguous:%@
Dialects:
Preferred Dialect:%@
western
TB,N,GisWestern,V_western
TB,N,GisRTL,V_rtl
ambiguous
TB,N,GisAmbiguous,V_ambiguous
generalLanguageID
T@"NSString",C,N,V_generalLanguageID
alternateLanguageIDs
T@"NSArray",&,N,V_alternateLanguageIDs
dialects
T@"NSArray",&,N,V_dialects
associatedAmbiguousLanguages
T@"NSArray",&,N,V_associatedAmbiguousLanguages
defaultDialect
T@"AXDialectMap",R,N
userLocaleDialect
T@"AXDialectMap",R,N,VuserLocaleDialect
userPreferredDialect
T@"AXDialectMap",N,V_userPreferredDialect
SwitchRegistrar will begin filtering events
SwitchRegistrar will end filtering events
v24@?0@"AXSwitch"8^B16
SWITCH_NAME_PREFIX
PrimaryUsagePage
PrimaryUsage
Could not create event system client
Could not open HID manager: %d
aSwitch
T@"AXSwitch",&,N,V_aSwitch
device
T^{__IOHIDDevice=},&,N,V_device
eventSystemClient
T^{__IOHIDEventSystemClient=},&,N,V_eventSystemClient
manager
T^{__IOHIDManager=},&,N,V_manager
T@"<AXSwitchRegistrarDelegate>",N,V_delegate
addLongPressSwitch
TB,N,V_addLongPressSwitch
Matched MFi device: %@
Could not open MFi device: %d
CenterTap
RightToLeftSwipe
LeftToRightSwipe
HoldAtPoint
Gesture
Exit
Select
TurnPages
TapPoint
HoldPoint
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXSwitchRecipe.m
+[AXSwitchRecipeMapping recipeMappingWithDictionaryRepresentation:]
Should always have encoded both x and y for hold point, but had %@, %@
Every switch recipe mapping must have an associated switch original action (in case we can't find a switch with a matching UUID.)
-[AXSwitchRecipeMapping dictionaryRepresentation]
Every switch recipe mapping must have an action.
Every switch recipe gesture mapping must have a gesture dictionary.
Every swipe recipe long press point mapping must have a point to press.
Action: %@
Gesture: %@
Switch UUID: %@
Switch Original Action: %@
action
T@"NSString",C,N,V_action
longPressAction
T@"NSString",C,N,V_longPressAction
T@"AXReplayableGesture",&,N,V_gesture
longPressGesture
T@"AXReplayableGesture",&,N,V_longPressGesture
holdPoint
T{CGPoint=dd},N,V_holdPoint
TB,N,GisOptional,V_optional
switchUUID
T@"NSUUID",C,N,V_switchUUID
switchOriginalAction
Tq,N,V_switchOriginalAction
-[AXSwitchRecipe dictionaryRepresentation]
Every switch recipe needs a UUID so it can be referenced.
Name: %@
UUID: %@
Mappings: %@
Timeout: %@
uuid
T@"NSUUID",&,N,V_uuid
name
mappings
T@"NSArray",&,N,V_mappings
Td,N,V_timeout
unlocalizedName
T@"NSString",&,N,V_unlocalizedName
shouldContinueScanning
menuIconIdentifier
T@"NSString",C,N,V_menuIconIdentifier
Action
LongPressAction
LongPressGesture
HoldPointX
HoldPointY
Optional
SwitchUUID
SwitchOriginalAction
UnlocalizedName
Mappings
Timeout
MenuIconIdentifier
Hant-
Hans-
%@AXDialect <%p>. Voice:%@. LocaleID:%@ LangID:%@ Name:%@ LocName:%@
T@"AXLangMap",N,V_langMap
locale
T@"NSLocale",&,N,V_locale
voiceName
T@"NSString",C,N,V_voiceName
speakableCharacters
T@"NSCharacterSet",&,N,V_speakableCharacters
specificLanguageID
T@"NSString",C,N,V_specificLanguageID
langManager
T@"AXLanguageManager",R,N
secondaryLanguageRange
T@"NSCharacterSet",&,N,V_secondaryLanguageRange
languageNameInCurrentLocale
languageNameInNativeLocale
languageNameAndLocaleInCurrentLocale
localeNameInCurrentLocale
languageNameAndLocaleInNativeLocale
regionID
collation
NSString *_icuDisplayName(const ULocaleDisplayNames *, NSString *, NSString *)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXDialectMap.m
<Unknown File>
Unsupported key type %@
%@ (%@)
System/Library/PreferenceBundles/AccessibilitySettings.bundle
RegionNamesNonLocalized
~!@#*$%&+|=(){}[]<>,./?;:'_-"\
DNTTerms
\pause=350\ 
0123456789
AXLanguageManager:<%p>. %lu lang maps
    USER-PREF %@
    %@
system Lang dialect: %@
system current locale dialect: %@
Dialect for system language was nil!
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXLanguageManager.m
-[AXLanguageManager dialectForLanguageID:]
LanguageID was nil!
B32@?0@"AXDialectMap"8Q16^B24
en-US
UIKeyboardInputModeController
sharedInputModeController
enabledInputModeIdentifiers
SynthesizerLanguageMap
languageMaps
languageID
ambiguousWithLanguages
isAmbiguous
isWestern
isRTL
localeLanguageMaps
localeID
speakableCharacterRanges
supplementaryCharacterRanges
langMaps
T@"NSArray",&,N,V_langMaps
userLocale
T@"NSLocale",C,N,V_userLocale
commonCharacters
T@"NSCharacterSet",&,N,V_commonCharacters
dialectForSystemLanguage
T@"AXDialectMap",N
dialectForCurrentLocale
systemLanguageID
dialectForUserLocale
AccessibilityLanguages
Languages
AXLanguageToLocale
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXLanguageTaggedContent.m
-[AXLanguageTag contentSubstring]
The range of the tagged chunk is greater than the content. Something went awry %@
%@ - %@
range
T{_NSRange=QQ},N,V_range
T@"NSString",N,V_content
unambiguousDialects
T@"NSMutableOrderedSet",&,N,V_unambiguousDialects
ambiguousDialects
T@"NSMutableOrderedSet",&,N,V_ambiguousDialects
preferredAmbiguousDialect
preferredUnambiguousDialect
contentSubstring
dialect
wasPredicted
TB,N,V_wasPredicted
AXTaggedContent:<%p>. tags:
-[AXLanguageTaggedContent _addTag]
Why was current dialects nil?
linguisticTagger
T@"NSLinguisticTagger",&,N,V_linguisticTagger
tagged
TB,N,GisTagged,V_tagged
tags
T@"NSMutableArray",&,N,V_tags
unpredictedAmbiguousLangMaps
T@"NSMutableOrderedSet",&,N,V_unpredictedAmbiguousLangMaps
currentDialects
T@"NSArray",&,N,V_currentDialects
splitContentOnNewlines
TB,N,V_splitContentOnNewlines
userPreferredLangID
T@"NSString",C,N,V_userPreferredLangID
sqlite
%s: error adding persistent store '%@'
-[AXWordDescriptionManager persistentStoreCoordinator]
momd
%s: failed to find managed object model in bundle
-[AXWordDescriptionManager managedObjectModel]
managedObjectContext
T@"NSManagedObjectContext",R,N,V_managedObjectContext
persistentStoreCoordinator
T@"NSPersistentStoreCoordinator",R,N,V_persistentStoreCoordinator
managedObjectModel
T@"NSManagedObjectModel",R,N,V_managedObjectModel
languageDialectCode
T@"NSString",&,N,VlanguageDialectCode
AXWordDescriptionsData_
[:Hani:]
[[:Hiragana:][:Katakana:][:Katakana_Or_Hiragana:][:Hani:]]
Entry
character == %@
exemplar
[[:Hiragana:][:Katakana_Or_Hiragana:]]
[[:Katakana:][:Katakana_Or_Hiragana:]]
[a-zA-Z]
zh-Hans
simplifiedExemplar
zh-Hant
traditionalExemplar
components
Null
Touched
Moved
Chord Changed
Lifted
Canceled
In Range
In Range Lift
Update to previous event
Just an empty hand event
block
T@?,C,N,V_block
TB,N,GisCancelled,Vcancel
finished
TB,N,GisFinished,Vfinished
TB,N,GisActive,Vactive
task
T@"AXThreadTimerTask",&,N,V_task
cancelled
TB,R,N,GisCancelled
keyCode
usagePage
keyDown
unmodifiedInput
modifiedInput
shiftModifiedInput
modifierState
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXEventKeyInfoRepresentation.m
-[AXEventKeyInfoRepresentation _hardwareKeyboardLayout]
You need to have UIKit linked to translate keycodes
currentInputMode
hardwareLayout
keyCode:%hu usagePage:%u down:%u modState:%u unmodIn:%@ modIn:%@ shftIn:%@
-[AXEventKeyInfoRepresentation translateKeycode]
Why was our KB ref nil?
TS,N,V_keyCode
TI,N,V_usagePage
TB,N,V_keyDown
T@"NSString",&,N,V_unmodifiedInput
T@"NSString",&,N,V_modifiedInput
T@"NSString",&,N,V_shiftModifiedInput
TI,N,V_modifierState
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXEventRepresentation.m
-[AXEventRepresentation pathIndexMask]
Can't get path index masks from non-digitizer events!
+[AXEventRepresentation _digitizerRepresentation:hidStreamIdentifier:]
This hand event has a null hand info.. problems will ensue: %@
touch: %ld initial %ld inRange: %d
Could not create AX Event from HID Event:
Stream ID:%@
subtype
location
windowLocation
window
flags
isRedirectEvent
handInfo
keyInfo
gameInfo
accelerometerInfo
clientId
taskPort
HIDTime
HIDAttributeData
additionalFlags
HIDSenderId
isBuiltIn
isDisplayIntegrated
generationCount
isGeneratedEvent
scrollAmount
%@<%p>
  Type:             %u
  Subtype:          %d
  Location:         x:%f y:%f
  Window Location:  x:%f y:%f
  Window:           %p
  Flags:            %d
  PID:              %d
  Time:             %llu
  HIDTime:          %llu
  Data:             %@
  Task Port:        %d
  client ID:        %@
  context ID:       %u
%@. type:%u subtype:%d loc:[x:%f y:%f] windowLoc:[x:%f y:%f] window:%p flags:%d pid:%d time:%llu HIDTime:%llu taskPort:%d client:%@ ctxtID:%u sender:%@ data:[%lu bytes]
AXData: %@
Hand Info: %@
Key Info: %@
ZoomWindow
Automation
Unknown (ID:0x%04llx)
-[AXEventRepresentation _applyAccessibilityDataToRealEvent:]
Unexpectedly received accessibility event. Should have received real event
Real event already has accessibility data applied. It is an error to apply new data
No data found on ax event
T^v,N,V_window
T@"NSData",&,N,V_data
creatorHIDEvent
T^{__IOHIDEvent=},&,N,V_creatorHIDEvent
Ti,N,V_subtype
T{CGPoint=dd},N,V_location
T{CGPoint=dd},N,V_windowLocation
TQ,N,V_time
Ti,N,V_flags
senderID
TQ,N,V_senderID
T@"AXEventHandInfoRepresentation",&,N,V_handInfo
T@"AXEventKeyInfoRepresentation",&,N,V_keyInfo
T@"AXEventAccelerometerInfoRepresentation",&,N,V_accelerometerInfo
gameControllerInfo
T@"AXEventGameControllerInfoRepresentation",&,N,V_gameControllerInfo
T@"NSString",&,N,V_clientId
TI,N,V_taskPort
TQ,N,V_HIDTime
T@"NSData",&,N,V_HIDAttributeData
Tq,N,V_scrollAmount
TQ,N,V_additionalFlags
TI,N,V_contextId
TB,N,V_isBuiltIn
TB,N,V_isDisplayIntegrated
Tq,N,V_generationCount
TB,N,V_isGeneratedEvent
useOriginalHIDTime
TB,N,V_useOriginalHIDTime
isUpdate
willBeUpdated
fingerCount
isTouchDown
isMove
isChordChange
isLift
isInRange
isInRangeLift
isCancel
redirectEvent
TB,N,GisRedirectEvent,V_redirectEvent
accessibilityData
T@"AXEventData",&,N,V_accessibilityData
guidedAccessUsageCount
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXSettings.m
__38-[AXSettings _domainForPreferenceKey:]_block_invoke
Can not locate domain associated with %@ preference key in PreferenceKeyToDomainMap
__40-[AXSettings _preferenceKeyForSelector:]_block_invoke
Can not locate preference key associated with %@ selector in SelectorToPreferenceKeyMap
-[AXSettings _domainNameForDomain:]
No domain name for domain: %d
-[AXSettings _valueForPreferenceKey:]
Can not get value without domain name for preference key: %@
v32@?0@"NSArray"8Q16^B24
B32@?0@"NSArray"8Q16^B24
-[AXSettings preferenceHasExistingValue:]
Could not find preference key for %@
-[AXSettings clearExistingValueForPreference:]
__NONE__
SwitchControlDefaultRecipes
B32@?0@"NSDictionary"8Q16^B24
Zoomed
ZoomLevel
AVSpeechSynthesisVoice
AXSettings: Exception was thrown during secure decoding of allAvailableVoices. Falling back to regular decoding.
Exception: %@
Voices: %@
-[AXSettings setVoiceOverKeyboardModifierChoice:]
We tried to set something invalid
RotorItem
Enabled
v32@?0@"NSDictionary"8Q16^B24
en_US
en_CA
sharedInstance
T@"AXSettings",R,N
registeredNotifications
T@"NSMutableSet",&,N,V_registeredNotifications
synchronizeDomains
T@"NSMutableDictionary",&,N,V_synchronizeDomains
updateBlocks
T@"NSMutableDictionary",&,N,V_updateBlocks
assistiveTouchAlwaysShowMenuEnabled
assistiveTouchOpenMenuSwaggleEnabled
assistiveTouchSpeed
Td,N
assistiveTouchMainScreenCustomization
T@"NSDictionary",&,N
assistiveTouchOrbAction
T@"NSString",&,N
assistiveTouchCustomGestures
T@"NSArray",&,N
assistiveTouchRecentGestures
assistiveTouchSavedGestures
assistiveTouchScanningMode
Tq,N
assistiveTouchPreferredPointPicker
assistiveTouchGroupElementsEnabled
assistiveTouchScannerCompactMenuEnabled
assistiveTouchScannerMenuLabelsEnabled
assistiveTouchStepInterval
assistiveTouchInputCoalescingDuration
assistiveTouchInputCoalescingEnabled
assistiveTouchInputHoldDuration
assistiveTouchInputHoldEnabled
assistiveTouchLongPressDuration
assistiveTouchLongPressEnabled
assistiveTouchDelayAfterInput
assistiveTouchDelayAfterInputEnabled
assistiveTouchAxisSweepSpeed
assistiveTouchActionRepeatInterval
assistiveTouchActionRepeatEnabled
assistiveTouchScanCycles
assistiveTouchScanTimeout
assistiveTouchScanTimeoutEnabled
assistiveTouchScannerSoundEnabled
assistiveTouchScannerCursorHighVisibilityEnabled
assistiveTouchScannerSpeechIsInterruptedByScanning
assistiveTouchScannerPointPickerDefaultsToRescan
assistiveTouchCursorColor
assistiveTouchHeadMovementSensitivity
assistiveTouchSwitchUsageConfirmed
assistiveTouchSwitches
T@"NSSet",&,N
assistiveTouchScannerSpeechEnabled
assistiveTouchScannerSpeechRate
assistiveTouchScannerAddedTripleClickAutomatically
switchControlRecipes
switchControlLaunchRecipeUUID
T@"NSUUID",&,N
switchControlTopLevelMenuItems
switchControlHasEmptyTopLevelMenu
switchControlShouldUseShortFirstPage
switchControlGesturesMenuItems
switchControlDeviceMenuItems
switchControlSettingsMenuItems
switchControlTapBehavior
switchControlAutoTapTimeout
switchControlShouldAlwaysActivateKeyboardKeys
switchControlScanAfterTapLocation
switchControlScanningStyle
switchControlDwellTime
switchControlIsEnabledAsSlave
zoomPreferencesWereInitialized
zoomWindowFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N
zoomScale
zoomPanOffset
T{CGPoint=dd},N
zoomSlugNormalizedPosition
zoomCurrentLensEffect
zoomCurrentLensMode
zoomInStandby
zoomShouldFollowFocus
zoomShouldShowSlug
zoomPeekZoomEnabled
zoomPeekZoomEverEnabled
zoomAlwaysUseWindowedZoomForTyping
zoomPreferredCurrentLensMode
zoomPreferredMaximumZoomScale
zoomPreferredLensModes
T@"NSOrderedSet",&,N
zoomIdleSlugOpacity
zoomShouldAllowFullscreenAutopanning
zoomDebugDisableZoomLensScaleTransform
zoomDebugShowExternalFocusRect
guidedAccessAXFeaturesEnabled
guidedAccessAllowsUnlockWithTouchID
guidedAccessShouldSpeakForTimeRestrictionEvents
guidedAccessToneIdentifierForTimeRestrictionEvents
guidedAccessDefaultToneIdentifierForTimeRestrictionEvents
gaxInternalSettingsUserAppProfile
gaxInternalSettingsUserGlobalProfile
gaxInternalSettingsSavedAccessibilityFeatures
gaxInternalSettingsSavedAccessibilityTripleClickOptions
gaxInternalSettingsUserConfiguredAppIDs
gaxInternalSettingsActiveAppOrientation
T@"NSNumber",C,N
gaxInternalSettingsActiveAppID
gaxInternalSettingsTimeRestrictionHasExpired
gaxInternalSettingsIsActiveAppSelfLocked
gaxInternalSettingsSystemDidRestartDueToLowBattery
gaxInternalSettingsDeviceID
gaxInternalSettingsProductBuildVersion
gaxInternalSettingsLastActivationDate
T@"NSDate",&,N
gaxInternalSettingsLastPasscodeSetDate
stickyKeysEnabled
stickyKeysShiftToggleEnabled
stickyKeysBeepEnabled
magnifierEnabled
magnifierShouldAdjustFiltersForAmbientLight
magnifierZoomLevel
magnifierFilterSetIdentifier
TQ,N
magnifierFilterInverted
magnifierContrast
magnifierBrightness
assistiveTouchCameraSwitchPreviewEnabled
assistiveTouchHeadlessModeEnabled
internalLoggingColorTheme
validateSecondPartyApps
includeBacktraceInLogs
writeAXLogsToFile
TB,N,V_writeAXLogsToFile
ignoreAXAsserts
ignoreAXServerEntitlements
logAXNotificationPosting
voiceOverHearingAidRoutingEnabled
skipHearingAidMFiAuth
enableHearingAidReporter
guidedAccessDisallowDirectInactiveToActiveTransition
guidedAccessOverrideTimeRestrictionDuration
T@"NSNumber",&,N
enableVoiceOverCaptions
speakCorrectionsEnabled
alexLocalAssetURL
T@"NSURL",&,N
speakIncomingNotifications
currentVoices
extantVoices
quickSpeakSpeakingRate
Tf,N
quickSpeakHighlightText
quickSpeakUnderlineSentence
quickSpeakVolume
quickSpeakSentenceHighlightOption
quickSpeakHighlightOption
quickSpeakNubbitNormalizedPosition
voiceOverLargeCursorEnabled
voiceOverHelpMode
voiceOverNavigateImagesOption
voiceOverPhoneticsFeedback
voiceOverHardwareTypingFeedback
voiceOverSoftwareTypingFeedback
voiceOverBrailleGesturesTypingFeedback
voiceOverKeyboardModifierChoice
voiceOverBrailleAlertDisplayDuration
voiceOverHandwritingEnabled
voiceOverBrailleGesturesEnabled
voiceOverHintsEnabled
voiceOverAudioDuckingEnabled
voiceOverPitchChangeEnabled
voiceOverSoundEffectsEnabled
voiceOverVerbosityEmojiSuffixEnabled
voiceOverSpeakingRateInRotorEnabled
voiceOverSpeakNotificationsEnabled
voiceOverRotorItems
T@"NSArray",C,N
voiceOverBrailleTableIdentifier
voiceOverAlwaysUseNemethCodeForMathEnabled
voiceOverShowSoftwareKeyboardWithBraille
voiceOverActivationWorkaround
voiceOverShouldOutputToHearingAid
voiceOverHandwritingWasNativeAutocorrectEnabled
customPronunciationSubstitutions
voiceOverTouchBraillePanningAutoTurnsReadingContent
voiceOverTouchSingleLetterQuickNavEnabled
voiceOverTouchBrailleDisplayInputMode
voiceOverTouchBrailleGesturesInputMode
voiceOverTouchBrailleDisplayOutputMode
voiceOverTouchBrailleGesturesShouldUseLockedConfiguration
voiceOverTouchBrailleGesturesLockedOrientation
Ti,N
voiceOverTouchBrailleGesturesLockedTypingMode
voiceOverTouchBrailleGesturesDidPlayCalibrationHint
voiceOverTouchBrailleShouldReverseDots
voiceOverBrailleGradeTwoAutoTranslateEnabled
voiceOverDoubleTapInterval
voiceOverNavigationDirectionMode
voiceOverTapticTimeMode
voiceOverTapticTimeEncoding
letterFeedbackEnabled
phoneticFeedbackEnabled
characterFeedbackDelayDuration
quickTypeWordFeedbackEnabled
wordFeedbackEnabled
pairedHearingAids
independentHearingAidSettings
allowHearingAidControlOnLockScreen
shouldStreamToLeftAid
shouldStreamToRightAid
touchAccommodationsEnabled
touchAccommodationsAreConfigured
touchAccommodationsUsageConfirmed
touchAccommodationsTripleClickConfirmed
touchAccommodationsHoldDurationEnabled
touchAccommodationsHoldDuration
touchAccommodationsIgnoreRepeatEnabled
touchAccommodationsIgnoreRepeatDuration
touchAccommodationsTapActivationMethod
touchAccommodationsTapActivationTimeout
gizmoApplicationAccessibilityEnabled
voiceOverSpeakSecondsEncoding
reduceWhitePointLevel
Tf,N,V_reduceWhitePointLevel
shouldFlashForAlertInSilentMode
localizationQACaptionMode
localizationQACaptionShowFilePath
localizationQACaptionShowUSString
localizationQACaptionShowLocalizedString
brokenHomeButtonCount
voiceOverBSIUsageCount
magnifierUsageCount
guidedAccessTimeLimitsUsageCount
assistiveTouchUsageCount
T@"NSDictionary",C,N
tapticTimeUsageCount
characterVoicesUsageCount
hearingAidControlPanelCount
hearingAidHandOffCount
switchControlPlatformSwitchedCount
lastMagnifierResetCount
lastAssistiveTouchTimeResetCount
lastCharacterVoiceTimeResetCount
lastPlatformSwitchTimeResetCount
Td,N,V_lastPlatformSwitchTimeResetCount
lastGuidedAccessTimeLimitResetCount
Td,N,V_lastGuidedAccessTimeLimitResetCount
lastGuidedAccessTimeResetCount
Td,N,V_lastGuidedAccessTimeResetCount
lastTapticTimeResetCount
lastBrailleScreenInputTimeResetCount
lastHearingAidControlPanelTimeResetCount
Td,N,V_lastHearingAidControlPanelTimeResetCount
lastHearingAidHandoffTimeResetCount
Td,N,V_lastHearingAidHandoffTimeResetCount
accessibilityEnabled
applicationAccessibilityEnabled
tripleClickOptions
T@"NSArray",&
assistiveTouchEnabled
assistiveTouchHardwareEnabled
assistiveTouchUIEnabled
assistiveTouchAlwaysShowMenu
switchControlEnabled
inspectorEnabled
automationEnabled
automationLocalizedStringLookupInfoEnabled
automationPreferredLocalization
T@"NSString",R
automationFauxCollectionViewCellsEnabled
automationHitpointWarpingEnabled
siriSemanticContextEnabled
voiceOverEnabled
voiceOverSpeakingRate
voiceOverVolume
voiceOverUsageConfirmed
voiceOverEnabledThroughAccessory
voiceOverScreenCurtainEnabled
voiceOverUIEnabled
voiceOverLanguageRotorItems
voiceOverLangaugeRotorItemsExist
voiceOverTypingMode
voiceOverBrailleBluetoothDisplay
T@"NSDictionary",C
voiceOverTouchBrailleTableIdentifier
T@"NSString",C
voiceOverBrailleVirtualStatusAlignment
voiceOverBrailleMasterStatusCellIndex
voiceOverBrailleContractionMode
voiceOverBrailleEightDotMode
zoomEnabled
zoomToggledByPreferenceSwitch
zoomToggledByVoiceOver
zoomSmoothScalingEnabled
enhanceTextLegibilityEnabled
enhanceTextTrackingEnabled
enhanceBackgroundContrastEnabled
reduceMotionEnabled
increaseButtonLegibilityEnabled
buttonShapesEnabled
reduceWhitePointEnabled
highContrastFocusIndicatorsEnabled
AssistiveTouchAlwaysShowMenu
AssistiveTouchOpenMenuSwaggle
AssistiveTouchSpeed
AssistiveTouchCustomGestures
AssistiveTouchRecentGestures
AssistiveTouchSavedGestures
AssistiveTouchScanningModePreference
AssistiveTouchPreferredPointPickerPreference
AssistiveTouchAutoScanningEnabled
AssistiveTouchScanShouldGroupElements
AssistiveTouchScanShouldUseCompactMenu
AssistiveTouchScannerMenuLabelsEnabled
AssistiveTouchStepInterval
AssistiveTouchScanCyclesPreference
AssistiveTouchScannerSelectTimeout
AssistiveTouchScannerSelectTimeoutEnabled
AssistiveTouchScannerScanTimeout
AssistiveTouchScannerSoundEnabled
AssistiveTouchScannerSpeechEnabled
AssistiveTouchScannerSpeechRatePreference
AssistiveTouchSwitchesPreference
AssistiveTouchCursorHighVisibilityPreference
AssistiveTouchSpeechInterruptedByScanningPreference
AssistiveTouchInputCoalescingDurationPreference
AssistiveTouchInputCoalescingEnabledPreference
AssistiveTouchInputHoldDurationPreference
AssistiveTouchLongPressDurationPreference
AssistiveTouchInputHoldEnabledPreference
AssistiveTouchLongPressDurationEnabledPreference
AssistiveTouchDelayAfterInputPreference
AssistiveTouchDelayAfterInputEnabledPreference
AssistiveTouchAxisSweepSpeed
AssistiveTouchActionRepeatIntervalPreference
AssistiveTouchActionRepeatEnabledPreference
AssistiveTouchPointPickerDefaultsToRescanPreference
AssistiveTouchScannerScanTimeoutEnabled
AssistiveTouchCursorColorPreference
AssistiveTouchHeadMovementSensitivityPreference
AXSAssistiveTouchSwitchUsageConfirmedPreference
AssistiveTouchAutoAddedTCItem
AXSAssistiveTouchMainScreenCustomizationPreference
AXSAssistiveTouchOrbPreference
AssistiveTouchCameraSwitchPreviewEnabledPreference
AssistiveTouchHeadlessModeEnabledPreference
SCRecipes
SCLaunchRecipeUUID
SCTopLevelMenuItems
SCShouldUseShortFirstPage
SCGesturesMenuItems
SCDeviceMenuItems
SCSettingsMenuItems
SCScanningStyle
SCDwellTime
SCTapBehaviorPreference
SCShouldAlwaysActivateKeyboardKeys
SCIsEnabledAsSlave
SCScanAfterTapLocation
ZoomPreferencesWereInitialized
ZoomWindowFrame
ZoomScale
ZoomPanOffset
ZoomSlugPosition
ZoomCurrentLensEffect
ZoomCurrentLensMode
ZoomShouldFollowFocus
ZoomShouldShowSlug
ZoomAlwaysUseWindowZoomForTyping
ZoomPreferredLensMode
ZoomPreferredMaximumZoomScale
ZoomPreferredLensModes
ZoomIdleSlugOpacity
ZoomShouldAllowFullscreenAutopanning
ZoomDebugDisableZoomLensScaleTransform
ZoomDebugShowExternalFocusRectPreference
ZoomInStandby
ZoomPeekZoomEnabled
ZoomPeekZoomEverEnabled
GuidedAccessUsageCount
kAXSGuidedAccessAXFeaturesEnabled
GuidedAccessAllowsUnlockWithTouchID
GuidedAccessToneIdentifierForTimeRestrictionEvent
GuidedAccessSpeakForTimeRestrictionEvent
GAXInternalSettingUserAppProfile
GAXInternalSettingUserGlobalProfile
GAXGlobalProfileSavedAXFeatures
GAXGlobalProfileSavedAXTripleClickOptions
GAXGlobalProfileUserConfiguredAppIds
GAXGlobalProfileActiveAppOrientation
GAXGlobalProfileActiveAppID
AXGAXInternalSettingIsActiveAppSelfLocked
GAXInternalSettingTimeRestrictionHasExpired
GAXGlobalProfileSystemDidRestartDueToLowBattery
GAXGlobalProfileDeviceID
GAXGlobalProfileProductBuildVersion
GAXGlobalProfileLastActivationDate
GAXGlobalProfileLastPasscodeSetDate
InternalLoggingColorThemePreference
ValidateSecondPartyApps
IncludeBacktraceInLogs
IgnoreAXAsserts
IgnoreAXServerEntitlements
LogAXNotificationPosting
SpeakCorrectionsEnabled
SpeakIncomingNotifications
LetterFeedbackEnabled
PhoneticFeedbackEnabled
CharacterFeedbackDelayPreference
QuickTypeWordFeedback
WordFeedbackEnabled
InternalEnableVOHearingAidRouting
InternalSkipHearingAidMFiAuth
InternalEnableHearingAidReporter
AXSInternalGuidedAccessDisallowDirectInactiveToActiveTransition
AXSInternalGuidedAccessOverrideTimeRestrictionDuration
AXSAudioHardwareChannelLayoutsPreference
QuickSpeakRate
QuickSpeakLanguageSpeakingRate
QuickSpeakHighlightText
QuickSpeakHighlightChoice
QuickSpeakUnderlineSentence
QuickSpeakVolume
SpeechVoiceIdentifierForLanguage
QuickSpeakNubbitNormalizedPosition
QuickSpeakSentenceHighlight
VoiceOverHandwritingWasNativeAutocorrectEnabled
com.apple.voiceovertouch.cursors.style
VoiceOverTouchHelpModePreference
NavigateImagesPreference
VoiceOverTouchPhoneticsEnabledPreference
VoiceOverTouchTypingHardwareFeedback
VoiceOverTouchTypingFeedback
VoiceOverTouchTypingBrailleGesturesFeedback
VoiceOverTouchHintsEnabled
VoiceOverTouchPitchChangePreference
VoiceOverUseSoundEffects
VoiceOverSoundEffectsEnabledPreference
SpeakingRateInRotorEnabled
SpeakNotificationInLockScreen
VoiceOverTouchRotorItemsPreference
com.apple.voiceovertouch.default.dialect
VoiceOverLanguageSpeakingRate
VOActivationWorkaround
VoiceOverShowSWKeyboardWithBraille
VoiceOverShowGrade2AutoTranslate
VoiceOverOutputToHearingAid
AXSVoiceOverTouchBraillePanningAutoTurnsReadingContent
AXSVoiceOverTouchSingleLetterQuickNavPreference
VoiceOverTouchAudioDuckingEnabled
AXSVoiceOverTouchBrailleDisplayInputMode
AXSVoiceOverTouchBrailleGesturesInputMode
AXSVoiceOverTouchBrailleDisplayOutputMode
VoiceOverCaptionPanelEnabled
VoiceOverBrailleGesturesShouldUseLockedConfiguration
VoiceOverBrailleGesturesLockedOrientation
VoiceOverBrailleGesturesLockedTypingMode
VoiceOverBrailleGesturesDidPlayCalibrationHint
VoiceOverDoubleTapInterval
VoiceOverBrailleDisplayAlertDuration
AXSVoiceOverKeyboardModifierChoicePreference
AXSVoiceOverTouchShouldReverseDots
VoiceOverNavigationDirectionMode
VoiceOverTapticTimeMode
VoiceOverTapticTimeEncoding
HearingAidControlAvailableOnLockScreen
HearingAidStreamToLeft
HearingAidStreamToRight
PairedHearingUUIDsPreference
HearingAidEarIndependencePreference
GizmoApplicationAccessibilityEnabled
GizmoAutoSpeakComplicationsPreference
VoiceOverSpeakSecondsEncoding
AXSAlexLocalAssetURL
AllAvailableVoicesPreference
LEDFlashOnRingerSwitchSilent
LocCaptionShowFilePath
LocCaptionShowUSString
LocCaptionShowLocalizedString
AXSExtantVoicesPreference
CustomPronunciationSubstitutions
TouchAccommodationsEnabledPreference
TouchAccommodationsUsageConfirmedPreference
AXSTouchAccommodationsTripleClickConfirmedPreference
TouchAccommodationsHoldDurationEnabledPreference
TouchAccommodationsHoldDurationPreference
TouchAccommodationsIgnoreRepeatEnabledPreference
TouchAccommodationsIgnoreRepeatDurationPreference
TouchAccommodationsTapActivationMethodPreference
TouchAccommodationsTapActivationTimeOutPreference
StickyKeysEnabled
StickyKeysShiftToggleEnabled
StickyKeysBeepEnabled
MagnifierEnabled
MagnifierShouldAdjustFiltersForAmbientLight
MagnifierLiveZoomLevel
MagnifierFilterSetIdentifier
MagnifierFilterInverted
MagnifierContrast
MagnifierBrightness
AssistiveTouchScannerPrefersCompactForLanguagePreference
AssistiveTouchScannerAlternativeVoiceForLanguagePreference
AXSAssistiveTouchDefaultDialectPreference
QuickSpeakPrefersCompactForLanguage
QuickSpeakAlternativeVoiceForLanguage
VoiceOverTouchPitchCompactVoice
AXSVoiceOverAlternativeVoicesPreference
AXSVoiceOverCompactVoicePreference
com.apple.AssistiveTouch
com.apple.Accessibility.GuidedAccess
com.apple.VoiceOverTouch
com.apple.ZoomTouch
com.apple.SpeakSelection
com.apple.HearingAids
com.apple.Accessibility.TouchAccommodations
com.apple.Accessibility.SwitchControl
com.apple.Accessibility.Magnifier
com.apple.Accessibility.Collection
_AXNotification_
AXSAssistiveTouchScannerMenuIncludeHomeItem
AXSAssistiveTouchScannerMenuIncludeGesturesItem
AXSAssistiveTouchScannerMenuIncludeScrollItem
AXSAssistiveTouchScannerMenuIncludeDeviceItem
AXSAssistiveTouchScannerMenuIncludeSettingsItem
TLToneManager
initTLToneManager
classTLToneManager
/System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary
ToneLibraryLibrary
TLToneIdentifierNone
initTLToneIdentifierNone
constant
SpeechRate
Volume
Location
Handwriting
BrailleGesture
Hints
AudioDucking
TextSelection
Character
Word
Line
Header
Link
FormElement
TableStart
ListStart
VisitedLink
NonVisitedLink
Same
Image
StaticText
Landmarks
Button
TextField
SearchField
Containers
VerticalNavigation
Punctuation
Sounds
TypingMode
NavigationDirection
Language
IncrementDecrement
ElementSpecificActions
Scroll
Home
SideApp
Gestures
Edit
Escape
RefineSelection
NavigationMode
Device
Settings
Recipes
ItemMenu
LockItemMenu
Multitasking
NotificationCenter
ControlCenter
LockScreen
RotateScreen
Mute
VolumeUpDown
SpotlightSearch
SiriVoiceControl
TripleClick
Shake
Screenshot
IncreaseDecreaseZoom
SpeakScreen
InterDevice
Sysdiagnose
Flick
Pinch
TapAndHold
Drag
HoldAndDrag
DoubleTap
Freehand
Fingers
Saved
ForceTouch
SpeedUpDown
MoveMenu
SpeechOnOff
SoundOnOff
GroupsOnOff
ATVRemoteMenu
Type
None
InvertColors
BlackAndWhite
BlackAndWhiteInverted
HueAdjust
LowLight
Window
WindowAnchored
Fullscreen
%@.%@.TimerQueue
TB,N,GisPending,V_pending
TB,N,GisCancelled,V_cancelled
dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
processBlock
T@?,C,N,V_processBlock
cancelBlock
T@?,C,N,V_cancelBlock
T@"NSString",&,N,V_label
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/NSArray+AXExtensions.m
__48-[NSArray(AXExtensions) axMapObjectsUsingBlock:]_block_invoke
Result was nil in mapping block!
NSArray
jj:mm
slow_%d
fast_%d
morse_%d
localeOverride
T@"NSLocale",&,N,V_localeOverride
dateOverride
T@"NSDate",&,N,V_dateOverride
queueCallback
T@?,C,N,V_queueCallback
%@ [delay: %f]
sound
T@"NSString",&,N,V_sound
delay
Td,N,V_delay
%@, Alternative Voice Identifier: %@
siri.male
siri.female
male
%@_%@_%@
voiceClassesMap
T@"NSDictionary",&,N,V_voiceClassesMap
voiceNameMap
T@"NSMutableDictionary",&,N,V_voiceNameMap
supportedSiriLanguages
T@"NSSet",R,N
compact
premium
AXAlternativeVoices was unable to retrieve custom voice assets. This could possibly be caused by someone requesting voices they are not entitled to. Error: %@
AXGeneric
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXLoggingSubsystem.m
+[AXLoggingSubsystem willLog]
Should not be relying on this anymore. Logging is always enabled.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXReplayableGesture.m
-[AXReplayableGesture pointForFingerIdentifier:atEventIndex:]
Should not have asked for the point for a finger identifier (%@) that did not exist at this event index (%lu)
 - device relative: %i, data: %@
-[AXMutableReplayableGesture addPointsByFingerIdentifier:forces:atTime:]
Pass in empty dictionaries, not nil, to signify that no fingers are touched down.
isLeftToRightSwipe
TB,N,V_isLeftToRightSwipe
isLandscape
TB,N,V_isLandscape
Time
Forces
AllEvents
Version
ArePointsDeviceRelative
IsLeftToRightSwipe
Timed out asking kbd about slot %lu
indexes
values
v32@?0@"NSNumber"8Q16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AXIndexMap.m
-[AXIndexMap encodeWithCoder:]
nil value for an index returned from _createIndexesWithSize, this should never happen
AXIndexMap:
%lu (0x%lx) -> %@
timer
T@"NSTimer",&,N,V_timer
lastProgressTime
Td,N,V_lastProgressTime
threshold
Td,N,V_threshold
progressInterval
Td,N,V_progressInterval
updateVisualsSequenceDidBeginHandler
T@?,C,N,V_updateVisualsSequenceDidBeginHandler
updateVisualsSequenceDidFinishHandler
T@?,C,N,V_updateVisualsSequenceDidFinishHandler
updateVisualsSequenceInProgressHandler
T@?,C,N,V_updateVisualsSequenceInProgressHandler
UNTITLED_RECIPE
RECIPE_CREATED_FROM_HOLD_POINT
RECIPE_CREATED_FROM_POINT
EXIT_RECIPE
SELECT_ITEM_AUTOSCANNING
CUSTOM_GESTURE
CENTER_TAP
RIGHT_TO_LEFT_SWIPE
LEFT_TO_RIGHT_SWIPE
HOLD_POINT
com.apple.accessibility.system.app.server.ready
AXSystemAppServerDiedNotification
AXSpringBoardServer
directionPadUp
directionPadDown
directionPadLeft
directionPadRight
faceButtonA
faceButtonB
faceButtonX
faceButtonY
shoulderButtonL1
shoulderButtonL2
shoulderButtonR1
shoulderButtonR2
leftJoystickX
leftJoystickY
rightJoystickX
rightJoystickY
 Game Info:
   D-pad Up: %.2f
   D-pad Down: %.2f
   D-pad Left: %.2f
   D-pad Right: %.2f
   Left Stick X: %.2f
   Left Stick Y: %.2f
   Right Stick X: %.2f
   Right Stick Y: %.2f
   A: %.2f
   B: %.2f
   X: %.2f
   Y: %.2f
   L1: %.2f
   L2: %.2f
   R1: %.2f
   R2: %.2f
Td,N,V_directionPadUp
Td,N,V_directionPadDown
Td,N,V_directionPadLeft
Td,N,V_directionPadRight
Td,N,V_faceButtonA
Td,N,V_faceButtonB
Td,N,V_faceButtonX
Td,N,V_faceButtonY
Td,N,V_shoulderButtonR1
Td,N,V_shoulderButtonR2
Td,N,V_shoulderButtonL1
Td,N,V_shoulderButtonL2
Td,N,V_leftJoystickX
Td,N,V_leftJoystickY
Td,N,V_rightJoystickX
Td,N,V_rightJoystickY
rightJoystickActive
leftJoystickActive
*** UIAccessibility validation error: %{public}@
*** UIAccessibility validation error: see log output above.
Expected length:(%@) to be size of AXEventDataStorage: (%@)
Unknown
AXEventData. Sender:%@
eventSenderIdentifier
Tq,R,N
wasPostedByAccessibility
dataBytes
T*,R,N
dataLength
[1;30m
[31m
[1;31m
[32m
[1;32m
[33m
[1;33m
[34m
[1;34m
[35m
[1;35m
[36m
[1;36m
[37m
[30m
%s%@%s
AXLogColorizer:<%p>. active:%@ managed:%@ preferDarkColors:%@
managedBySettings
TB,N,GisManagedBySettings,V_managedBySettings
colorTheme
T{AXLogColorTheme=qqqq},N,V_colorTheme
preferDarkColors
TB,N,V_preferDarkColors
AXReplayer
Exhausted retry attempts for block: %@
replayBlock
T@?,C,N,V_replayBlock
completionBlock
T@?,C,N,V_completionBlock
interval
Td,N,V_interval
maxAttempts
Tq,N,V_maxAttempts
attemptsRemaining
Tq,N,V_attemptsRemaining
TB,N,V_async
queue
T@"NSObject<OS_dispatch_queue>",N,V_queue
didSucceed
TB,N,V_didSucceed
underlyingError
T@"NSError",&,N,V_underlyingError
underlyingResult
T@,&,N,V_underlyingResult
T@"NSString",&,N,V_name
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXReplayer.m
-[AXReplayer replayWithName:attempts:interval:async:queue:replayBlock:completion:]
must provide a replayBlock
-[AXIDCSlaveController initialize]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXIDCSlaveController.m
[addr length] == sizeof(struct sockaddr_in)
local
AXIDCMessageErrorDomain
searchCompletion
T@?,C,N,V_searchCompletion
searchTimeout
Td,N,V_searchTimeout
NotSupported
Use initWithHIDTapIdentifier:HIDEventTapPriority:systemEventTapIdentifier:systemEventTapPriority:
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXEventProcessor.m
-[AXEventProcessor initWithHIDTapIdentifier:HIDEventTapPriority:systemEventTapIdentifier:systemEventTapPriority:]
Cannot install an event tap for system events if not running in the sytem process.
%@-HIDEventReceive
-[AXEventProcessor beginHandlingHIDEventsForReason:]
AXEventProcessor was not initialized to handle HID events
This reason already exists among reasons for tapping HID events. Unbalanced. %@
This reason does not exist among reasons for tapping HID events. Unbalanced. %@
-[AXEventProcessor beginHandlingSystemEventsForReason:]
AXEventProcessor was not initialized to handle system events
This reason already exists among reasons for tapping system events. Unbalanced. Could be trouble, but might be ok. %@
This reason does not exist among reasons for tapping system events. Unbalanced. %@
B16@?0@"AXEventRepresentation"8
HIDEventTapIdentifier
T@"NSString",&,N,V_HIDEventTapIdentifier
HIDEventTapPriority
Ti,N,V_HIDEventTapPriority
HIDEventReceiveThread
T@"NSThread",&,N,V_HIDEventReceiveThread
handlingHIDEvents
TB,N,GisHandlingHIDEvents,V_handlingHIDEvents
hidActualEventTapEnabledReasons
T@"NSMutableArray",&,N,V_hidActualEventTapEnabledReasons
systemEventTapIdentifier
T@"NSString",&,N,V_systemEventTapIdentifier
systemEventTapPriority
Ti,N,V_systemEventTapPriority
handlingSystemEvents
TB,N,GisHandlingSystemEvents,V_handlingSystemEvents
systemActualEventTapEnabledReasons
T@"NSMutableArray",&,N,V_systemActualEventTapEnabledReasons
shouldNotifyUserEventOccurred
TB,N,V_shouldNotifyUserEventOccurred
HIDEventHandler
T@?,C,N,V_HIDEventHandler
HIDEventFilterMask
TQ,N,V_HIDEventFilterMask
hidEventTapEnabledReasons
T@"NSArray",R,N
systemEventHandler
T@?,C,N,V_systemEventHandler
ignoreAllSystemEvents
TB,N,V_ignoreAllSystemEvents
systemEventTapEnabledReasons
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/NSObject+AXCollectionsExtensions.m
-[NSObject(AXCollectionsExtensions) _ax_appendPrettyDescriptionToString:indentationString:visitedCollections:]
accumulatorString <%@: %p> was supposed to be a mutable string
indentationString <%@: %p> was supposed to be a mutable string
visitedCollections <%@: %p> was supposed to be a mutable set
<%@: %p>
    
AXVoiceOverDidEnableGesturedTextInputNotification
AXVoiceOverDidDisableGesturedTextInputNotification
AXVoiceOverHandwritingAttributePreferredCharacterSet
AXVoiceOverHandwritingAttributeAllowedCharacterSets
AXVoiceOverHandwritingAttributeCanDeleteCharacter
AXVoiceOverHandwritingAttributeShouldEchoCharacter
AXVoiceOverHandwritingAttributeAcceptsRawInput
AXVoiceOverHandwritingAttributeShouldPlayKeyboardSecureClickSound
AXVoiceOverHandwritingAttributeAcceptsContractedBraille
AXVoiceOverHandwritingAttributeLanguage
AXCharacterVoiceIdentifierMickey
AXCharacterVoiceIdentifierMinnie
 [%lu] - |%s| 
v32@?0@"NSData"8Q16^B24
%@ [%d] %@ - %@
inputBuffer
T@"NSMutableData",&,N,V_inputBuffer
currentMessageInFlight
T@"AXIDCMessage",&,N,V_currentMessageInFlight
service
T@"NSNetService",&,N,V_service
outputDataQueue
T@"NSMutableArray",&,N,V_outputDataQueue
inputStream
T@"NSInputStream",&,N,V_inputStream
outputStream
T@"NSOutputStream",&,N,V_outputStream
outputBuffer
T@"NSMutableData",&,N,V_outputBuffer
T@"<AXIDCRemoteControllerDelegate>",N,V_delegate
GlobalBackgroundQueue
%@-%@-%@
%@.%@.%@
Main access queue
<%@: %p; label = "%@">
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.28.16/Source/AccessibilityUtilities/AXAccessQueue.m
-[AXAccessQueue _accessQueueContextInCurrentExecutionThread]
%s makes no sense with the main access queue.
-[AXAccessQueue _performBlock:withDispatchFunction:synchronously:accessQueueContext:]
Trying to synchronously execute a writing block from within a reading block. This is illegal.
threadLocalStorageKey
T@"NSString",C,N,V_threadLocalStorageKey
concurrentQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_concurrentQueue
specialBehaviors
TQ,N,V_specialBehaviors
behavesAsMainQueue
behavesWithoutErrorReporting
T@"NSString",R,C,N
SCREEN_SWITCH_NAME
[%@ (%p)]
Action: %@ 
Name: %@ 
Source: %@ 
Long Press action: %@ 
Type: %@ 
Key code: %hu
Button Number: %d
Head Switch: %d
Product Name: %@
Manufacturer: %@
UUID: %@
Remote device identifier: %@
Remote device name: %@
Remote switch identifier: %@
Tq,N,V_action
Tq,N,V_longPressAction
T@"NSString",C,N,V_name
source
T@"NSString",&,N,V_source
T@"NSString",&,N,V_type
productName
T@"NSString",C,N,V_productName
manufacturerName
T@"NSString",C,N,V_manufacturerName
hasLongPressAction
supportsLongPress
buttonNumber
Tq,N,V_buttonNumber
headSwitch
Tq,N,V_headSwitch
remoteSwitchIdentifier
T@"NSString",C,N,V_remoteSwitchIdentifier
remoteDeviceName
T@"NSString",C,N,V_remoteDeviceName
remoteDeviceIdentifier
T@"NSString",C,N,V_remoteDeviceIdentifier
SwitchActionKey
SwitchLongPressAction
SwitchNameKey
SwitchSourceKey
SwitchTypeKey
SwitchKeyCodeKey
SwitchButtonNumberKey
SwitchHeadSwitch
SwithProductName
SwithManufacturerName
SwitchRemoteSwitchIdentifier
SwitchRemoteDeviceName
SwitchRemoteDeviceIdentifier
SwitchSourceCamera
SwitchSourceKeyboard
SwitchSourceMFI
SwitchSourceScreen
SwitchSourceATVRemote
SwitchSourceRemote
SwitchTypeOptional
SwitchTypeRequired
activate
menu
select
step next
step previous
stop
app switcher
home
notification center
siri
volume down
volume up
3d touch
ATV Select
ATV Menu
ATV Home
ATV Play/Pause
ATV Up
ATV Down
ATV Left
ATV Right
unknown
SWITCH_ACTION_ACTIVATE_LABEL
SWITCH_ACTION_MENU_LABEL
SWITCH_ACTION_RUN_LABEL
SWITCH_ACTION_SELECT_LABEL
SWITCH_ACTION_STEP_NEXT_LABEL
SWITCH_ACTION_STEP_PREVIOUS_LABEL
SWITCH_ACTION_STOP_LABEL
SWITCH_ACTION_APP_SWITCHER_LABEL
SWITCH_ACTION_HOME_LABEL
SWITCH_ACTION_NOTIFICATION_CENTER_LABEL
SWITCH_ACTION_SIRI_LABEL
SWITCH_ACTION_VOLUME_DOWN_LABEL
CUSTOMIZE_MENU_ForceTouch
SWITCH_ACTION_VOLUME_UP_LABEL
Could not return action string for unknown action
B24@?0@"AXSwitch"8^B16
ProductID
VendorID
AXPhonetics/
%@@phonetics
AXPhonemes/
%@@phonemes
%@.plist
_ESC_
default
phDictionaries
T@"NSMutableDictionary",&,N,V_phDictionaries
AXResourceLoader
Bundle was nil. Tried ID:%@ and Path:%@
com.apple.QuickSpeak
AXSpringBoardServerInstance.framework
AXDictionaryElementKeyHint
AXDictionaryElementKeyIndex
AXDictionaryElementKeyIsKeyboardKey
AXDictionaryElementKeyLabel
AXDictionaryElementKeyLanguage
AXDictionaryElementKeyTraits
AXDictionaryElementKeyTraitsDescription
AXDictionaryElementKeyValue
isEqualToString:
safeValueForKey:
integerValue
server
inPreboardMode
sessionIsLoginSession
processInfo
processName
copy
mainBundle
bundleIdentifier
stringWithFormat:
stringByAppendingPathComponent:
retain
autorelease
hasPrefix:
preferredLanguages
objectAtIndex:
characterDirectionForLanguage:
enumerateObjectsUsingBlock:
count
UTF8String
countByEnumeratingWithState:objects:count:
bundleWithPath:
isLoaded
loadAndReturnError:
principalClass
target
respondsToSelector:
performSelector:
bundleWithIdentifier:
alloc
init
setDataPointer:
wrapperWithDataPointer:
dataPointer
_dataPointer
identifier
callStackSymbols
objectForKey:
class
isKindOfClass:
_accessibilityValueForKey:
boolValue
unsignedIntegerValue
dictionary
removeObjectForKey:
setObject:forKeyedSubscript:
_accessibilitySetValue:forKey:storageMode:
numberWithBool:
_accessibilitySetRetainedValue:forKey:
initWithInteger:
release
initWithUnsignedInteger:
_accessibilityBoolValueForKey:
_accessibilityIntegerValueForKey:
_accessibilityUnsignedIntegerValueForKey:
_accessibilitySetBoolValue:forKey:
_accessibilitySetIntegerValue:forKey:
_accessibilitySetUnsignedIntegerValue:forKey:
_accessibilityRemoveValueForKey:
_accessibilitySetAssignedValue:forKey:
setEventType:
setInitialFingerCount:
setCurrentFingerCount:
setSwipe:
setSystemGesturePossible:
initWithCapacity:
representationWithPathInfo:
addObject:
setPaths:
paths
eventType
initialFingerCount
currentFingerCount
swipe
systemGesturePossible
writeToPathInfo:
initWithArray:copyItems:
handIdentity
setHandIdentity:
handPosition
setHandPosition:
handIndex
setHandIndex:
handEventMask
setHandEventMask:
decodeInt32ForKey:
setWithObjects:
decodeObjectOfClasses:forKey:
decodeObjectOfClass:forKey:
getValue:
dealloc
encodeInt32:forKey:
encodeObject:forKey:
valueWithBytes:objCType:
appendString:
accessibilityEventRepresentationTabularDescription
appendFormat:
description
stringByAppendingFormat:
supportsSecureCoding
representationWithHandInfo:
isEqual:
self
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retainCount
zone
hash
superclass
debugDescription
encodeWithCoder:
initWithCoder:
copyWithZone:
length
writeToHandInfo:
_systemGesturePossible
_swipe
_initialFingerCount
_currentFingerCount
_eventType
_handIdentity
_handIndex
_handEventMask
_paths
_handPosition
attributes
compare:options:
sortedArrayUsingComparator:
voiceWithIdentifier:
sharedInstance
extantVoices
isSiriVoiceIdentifier:
nameForVoiceIdentifier:
language
dialectForLanguageID:
localeNameInCurrentLocale
name
initWithAssetType:
setPredicate:
setQueriesLocalAssetInformationOnly:
runQueryAndReturnError:
predicate
numberWithUnsignedInt:
localURL
setObject:forKey:
firstObject
predicateWithFormat:
currentLocale
defaultColorizer
errorString:
warningString:
debugString:
infoString:
initWithUTF8String:
lastPathComponent
initWithFormat:
stringByReplacingOccurrencesOfString:withString:
initWithFormat:arguments:
objectForKeyedSubscript:
redString:
greenString:
yellowString:
blueString:
cyanString:
magentaString:
initWithTargetSerialQueue:
includeBacktraceInLogs
registerUpdateBlock:forRetrieveSelector:withListener:
cancel
removeAllObjects
afterDelay:processBlock:
timeIntervalSinceReferenceDate
numberWithInt:
numberWithDouble:
doubleValue
numberWithUnsignedInteger:
initWithBytes:length:encoding:
fileURLWithPath:
path
initWithPath:
initWithKey:payload:
setKey:
setPayload:
initForReadingWithData:
setRequiresSecureCoding:
payload
auditToken
clientPort
archivedMessageFromData:
initWithKey:
initWithKey:payload:keyDebugInfo:
senderBundleId
setClientPort:
setAuditToken:
_key
_clientPort
_payload
_auditToken
raise:format:
rangeOfString:
isActive
isSubclassOfClass:
safeCategoryTargetClassName
replaceOccurrencesOfString:withString:options:range:
_safeValidatedValueForKey:expectedClass:possibleExpectedTypeEncodings:
sendExceptionForSafeValueKey:onTarget:overrideProcessName:
objCType
_safeValidatedValueForKey:expectedClass:expectedTypeEncoding:
sendExceptionForSafeIVarKey:onTarget:overrideProcessName:
intValue
unsignedIntValue
floatValue
safeDoubleForKey:
rangeValue
__axValueForKey:
_accessibilityPerformSafeValueKeyBlock:withKey:onClass:
valueForKey:
valueForKeyPath:
safeIvarForKey:
safeBoolForKey:
safeIntForKey:
safeUnsignedIntForKey:
safeIntegerForKey:
safeUnsignedIntegerForKey:
safeFloatForKey:
safeTimeIntervalForKey:
safeRangeForKey:
safeCGFloatForKey:
safeValueForKeyPath:
safeIntegerForIvarKey:onClass:
handleFailoversForClassNamed:
reason
sendExceptionForSafeBlock:overrideProcessName:
isMainThread
containsValueForKey:
decodeBytesForKey:returnedLength:
encodeBytes:length:forKey:
encodeInt64:forKey:
setTarget:
setActionSelector:
actionSelector
displayDidRefreshCount
setDisplayDidRefreshCount:
initWithTarget:actionSelector:
displayDidRefresh:
_target
_actionSelector
_displayDidRefreshCount
currentThread
threadDictionary
setActiveTargetActions:
setUpdatedTargetActions:
setDisplayLink:
storedDisplayLink
isPaused
duration
timestamp
_displayDidRefresh:
displayLinkWithTarget:selector:
currentRunLoop
addToRunLoop:forMode:
setPaused:
setStoredDisplayLink:
invalidate
isHandlingDisplayRefresh
_prepareUpdatedTargetActionsForModification
activeTargetActions
_didAddFirstTargetAction
removeObject:
_didRemoveLastTargetAction
updatedTargetActions
hasUpdatedTargetActions
setHasUpdatedTargetActions:
displayLink
isWarmUpModeEnabled
_releaseCurrentDisplayLinkManager
warmUpModeRequirementsCount
setWarmUpModeRequirementsCount:
setHandlingDisplayRefresh:
currentDisplayLinkManager
addTarget:selector:
removeTarget:selector:
beginRequiringWarmUpMode
endRequiringWarmUpMode
_hasUpdatedTargetActions
_handlingDisplayRefresh
_storedDisplayLink
_activeTargetActions
_updatedTargetActions
_warmUpModeRequirementsCount
null
dictionaryWithObjectsAndKeys:
dictionaryWithAXAuditIssue:element:
mainAccessQueue
initWithTargetAccessQueue:
setState:
initWithParentClass:description:appendUUIDToLabel:
setAccessQueue:
setAccessQueueIsExternal:
accessQueue
_reallyCancel
performSynchronousWritingBlock:
setLabel:
state
canOnlyReadInCurrentExecutionThread
performAsynchronousWritingBlock:
afterDelay:processWritingBlock:
_afterDelay:processBlock:shouldTreatAsWritingBlock:
automaticallyCancelPendingBlockUponSchedulingNewBlock
setActive:
_didFinishProcessingBlock
performAsynchronousReadingBlock:
setDispatchTimer:
accessQueueIsExternal
_warnAboutAsynchronousScheduling
_performEnqueuedWritingBlock:asynchronousExecutionWarningHandler:
canWriteInCurrentExecutionThread
_warnAboutAsynchronousCancelling
dispatchTimer
label
timerTargettingMainAccessQueue
isPending
afterDelay:processReadingBlock:
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
_automaticallyCancelPendingBlockUponSchedulingNewBlock
_active
_accessQueueIsExternal
_state
_label
_accessQueue
_dispatchTimer
handler
matchingServiceHandler
setIdentifier:
priority
setHandler:
setPriority:
type
setType:
systemClient
setSystemClient:
setMatchingServiceHandler:
_type
_systemClient
_matchingServiceHandler
setInstallationGSCallback:
setInstallationHIDCallback:
setInstallationEventRepPost:
lock
_enumerateEventTapPairsUsingBlock:
unlock
insertObject:atIndex:
containsObject:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
_reorderEventTaps
_setGSEventTapCallback:
_setHIDEventTapCallback:
sendHIDSystemEvent:repostCreatorHIDEvent:senderID:
creatorHIDEvent
newHIDEventRef
_copyCurrentEventTapPairs
newEventRecord
taskPort
representationWithHIDEvent:hidStreamIdentifier:clientID:taskPort:
representationWithEventRecord:
sortUsingComparator:
_setEventTapPriority:priority:
_installHIDFilter:skipDeviceMatching:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:
_installSystemEventTap:
array
stringWithUTF8String:
dictionaryWithObjects:forKeys:count:
objectAtIndexedSubscript:
installEventTap:identifier:type:skipDeviceMatching:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:
_installEventTap:identifier:type:skipDeviceMatching:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:matchingServiceHandler:
_installEventTap:skipDeviceMatching:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:
_removeHIDEventTapFilter:
_runMatchingServiceHandler:
sharedManager
sendHIDSystemEvent:senderID:
sendEvent:afterTap:useGSEvent:namedTaps:options:
_processHIDEvent:taskPort:bundleId:
_processGSEvent:
setEventTapPriority:priority:
_passivelyPeakAtHIDEventWithTarget:tapPair:sender:event:axEventRep:didHandle:
installEventTap:identifier:type:
installKeyboardEventTap:identifier:matchingServiceHandler:
removeEventTap:
runMatchingServiceHandlerForEventTap:
installationGSCallback
installationHIDCallback
installationEventRepPost
_eventTaps
_addedEventTapPairs
_removedEventTapIdentifiers
_isEnumeratingEventTaps
_shouldReorderEventTaps
_installationGSCallback
_installationHIDCallback
_eventTapLock
_ioSystemPostBackClient
_installationEventRepPost
representationWithHIDEvent:hidStreamIdentifier:
initWithServiceType:remoteClass:andSlaveClass:
validateClass:isKindOfClass:
setDelegate:
scheduleInRunLoop:forMode:
setBrowser:
initWithServiceType:
setSlaveController:
setServiceType:
setRemoteControllers:
remoteControllers
arrayWithArray:
slaveController
isConnected
isConnecting
objectsAtIndexes:
closeConnectionWithError:
sendObject:toController:withSendCompletion:
sendObject:withSendCompletion:
shouldBecomeMaster
setVisible:
browser
stop
serviceType
searchForServicesOfType:inDomain:
delegate
availableRemoteControllersDidChange
clearControllers
resolveMasterWithCompletion:
service
indexOfObjectPassingTest:
remoteControllerForHostname:
initWithService:
openConnectionIfNecessary
removeObjectAtIndex:
controller:didReceiveData:
controller:didFinishSendingData:
isSlave
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
controllerDidFinishConnecting:
controller:didCloseConnectionWithError:
securityDelegate
setSecurityDelegate:
availableControllers
availableRemoteControllers
sendObject:toAllControllersExcept:withCompletion:
becomeMaster
transitionToSlaveWithCompletion:
_slaveClass
_remoteClass
_delegate
_securityDelegate
_slaveController
_serviceType
_browser
_remoteControllers
_handler
_identifier
setShouldRegisterClientCallbackSourceOnMainRunloop:
setActionHandlers:
setReachabilityHandlers:
setCurrentAlertHandler:
currentAlertHandler
reachabilityHandlers
actionHandlers
_didConnectToServer
_handleReplyResult:
setHandlerWithTarget:selector:forKey:
_handleActionResult:
_handleReachabilityResult:
_shouldValidateEntitlements
addPossibleRequiredEntitlement:forMessageWithKey:
_willClearServer
removeAllHandlersForTarget:
_wasDisconnectedFromClient
defaultCenter
postNotificationName:object:
_didConnectToClient
sendSimpleMessage:
_connectIfNecessary
client
sendMessage:withError:
sendSimpleMessageWithResult:
sendSimpleMessageWithObjectResult:
performSynchronousReadingBlock:
cleanupAlertHandler
showAlert:withHandler:withData:
_connectServerIfNecessary
dictionaryWithObject:forKey:
registerSpringBoardActionHandler:withIdentifierCallback:
UUID
UUIDString
setCancelGestureActivation:cancelEnabled:
registerReachabilityHandler:withIdentifierCallback:
sendAsyncMessage:replyOnQueue:replyHandler:
sendAsynchronousMessage:replyOnQueue:handler:
sendMessage:
_axSpringBoardServerInstanceDelegate
_axSpringBoardServerInstance
isScreenLockedWithServerInstance:
isPasscodeRequiredOnLockWithServerInstance:
_shouldDispatchLocally
_getPasscodeStatusImmediate:
isSystemSleepingWithServerInstance:
isSyncingRestoringResettingOrUpdatingWithServerInstance:
areSystemGesturesDisabledNativelyWithServerInstance:
areSystemGesturesDisabledByAccessibilityWithServerInstance:
installedAppsWithServerInstance:
wakeUpDeviceIfNecessaryWithServerInstance:
unlockDeviceWithServerInstance:
isMediaPlayingForApp:
isMediaPlayingWithServerInstance:forBundleId:
_messageForMediaPlayingQueryForBundleID:
sendAsynchronousMessage:replyOnQueue:boolResultHandler:
pauseMediaForApp:
serverInstance:pauseMedia:forBundleId:
resumeMediaForApp:
hasActiveCallWithServerInstance:
hasActiveOrPendingCallWithServerInstance:
hasActiveOrPendingCallOrFaceTimeWithServerInstance:
isMakingEmergencyCallWithServerInstance:
isNotificationCenterVisibleWithServerInstance:
isNotificationVisibleWithServerInstance:
toggleNotificationCenterWithServerInstance:
isNotificationCenterVisible
toggleNotificationCenter
isControlCenterVisibleWithServerInstance:
serverInstance:showNotificationCenter:
serverInstance:showControlCenter:
isAppSwitcherVisibleWithServerInstance:
openAppSwitcherWithServerInstance:
dismissAppSwitcherWithServerInstance:
simulateEdgePressHaptics:
revealSpotlightWithServerInstance:
isSideSwitcherVisibleWithServerInstance:
clearSideAppStateWithServerInstance:
openSiriWithServerInstance:
dismissSiriWithServerInstance:
isSiriVisibleWithServerInstance:
setSiriIsTalking:withServerInstance:
openVoiceControlWithServerInstance:
isVoiceControlRunningWithServerInstance:
isSpeakThisTemporarilyDisabledWithServerInstance:
allowedMedusaGesturesWithServerInstance:
serverInstance:performMedusaGesture:
serverInstance:springBoardSystemInfoQuery:
sendAsynchronousMessage:replyOnQueue:objectResultHandler:
isSystemAppShowingAnAlertWithServerInstance:
focusedAppPIDWithServerInstance:
purpleBuddyPIDWithServerInstance:
runningAppPIDsWithServerInstance:
_isSystemAppFrontmostExcludingSiri:
_isSystemAppFrontmostExcludingSiri:completion:
isSystemAppFrontmostExcludingSiri:withServerInstance:
isPurpleBuddyAppFrontmostWithServerInstance:
isSettingsAppFrontmostWithServerInstance:
isMultiTaskingActive
focusedAppsWithServerInstance:
unarchiveObjectWithData:
acquireAssertionWithType:identifier:clientPort:
acquireAssertionWithType:identifier:
relinquishAssertionWithType:identifier:clientPort:
relinquishAssertionWithType:identifier:
forceLoadGAXBundleWithServerInstance:
sendSimpleMessage:withError:
launchMagnifierAppWithServerInstance:
isMagnifierVisibleWithServerInstance:
sendAsyncMessage:withReplyHandler:
userEventOccurredWithServerInstance:
setLockScreenDimTimerEnabled:withServerInstance:
serverInstance:appWithIdentifier:
focusedAppProcessWithServerInstance:
runningAppProcessesWithServerInstance:
pid:
activeInterfaceOrientation
activeInterfaceOrientation:
openSiri
dismissSiri
isSiriVisible
isAppSwitcherVisible
isControlCenterVisible
isSideSwitcherVisible
isScreenSaverVisible
isNotificationVisible
isNowPlayingUIVisible
isSoftwareUpdateUIVisible
isSiriTalkingOrListening
isReceivingAirPlay
isMediaPlaying
wakeUpDeviceIfNecessary
_serviceName
takeScreenshot
openAssistiveTouchCustomGestureCreation
openSCATCustomGestureCreation
setVolume:
setHearingAidControlVisible:
startHearingAidServer
topEventPidOverride
isOrientationLocked
setOrientationLocked:
resetDimTimer
isSideSwitchUsedForOrientation
isRingerMuted
reachabilityOffset
volumeLevel
hideAlert
showAlert:withHandler:
setShowSpeechPlaybackControls:
removeActionHandler:
cancelReachabilityDetection
toggleIncomingCall
setReachabilityActive:
removeReachabilityHandler:
isInspectorMinimized
isPointInsideAccessibilityInspector:
activeApplicationOrientation
copyStringToPasteboard:
activateSOSMode
isScreenLockedWithPasscode:
screenLockStatus:
isSystemSleeping
isSyncingRestoringResettingOrUpdating
areSystemGesturesDisabledNatively
areSystemGesturesDisabledByAccessibility
installedApps
unlockDevice
isMediaPlayingForApp:completionHandler:
pauseMedia
resumeMedia
hasActiveCall
hasActiveOrPendingCall
hasActiveOrPendingCallOrFaceTime
isMakingEmergencyCall
showNotificationCenter
hideNotificationCenter
showNotificationCenter:
showControlCenter:
openAppSwitcher
dismissAppSwitcher
simulateEdgePressHaptics
revealSpotlight
clearSideAppState
setSiriIsTalking:
openVoiceControl
isVoiceControlRunning
isSpeakThisTemporarilyDisabled
allowedMedusaGestures
performMedusaGesture:
systemAppInfoWithQuery:completion:
isSystemAppShowingAnAlert
focusedAppPID
purpleBuddyPID
purpleBuddyPID:
runningAppPIDs
isSystemAppFrontmost
isSystemAppFrontmost:
isSystemAppFrontmostExludingSiri
isPurpleBuddyAppFrontmost
isSettingsAppFrontmost
focusedApps
loadGAXBundleForUnmanagedASAM
launchMagnifierApp
isMagnifierVisibleWithCompletion:
userEventOccurred
setLockScreenDimTimerEnabled:
isMagnifierVisible
applicationWithIdentifier:
focusedAppProcess
runningAppProcesses
_currentAlertHandler
_actionHandlers
_reachabilityHandlers
_axSpringBoardServerInstanceIfExists
initialize
setRecentEvents:
setFlushEventsTimer:
recentEvents
flushEventsTimer
afterDelay:processBlock:cancelBlock:
clientId
HIDTime
_elapsedTimeFrom:to:
addEvent:
isRedirectedEvent:
_queue
_recentEvents
_flushEventsTimer
setFlushEventsTimerDelay:
outputValueChangeForNewValue:oldValue:selectedTextRange:oldSelectedTextRange:shouldEchoDeletion:isSingleInsert:feedbackType:lastKeyboardKeyPress:
outputValueChangeForNewValue:oldValue:isFirstResponderValid:selectedTextRange:oldSelectedTextRange:shouldEchoDeletion:optionalValueChangeType:derivedValueChangeType:didHitBorder:isBreakSpaceCharacter:isSingleInsert:selectionDeleted:feedbackType:textOperationOccurred:lastKeyboardKeyPress:isSingleCharacterInsertOrDelete:singleInsertDeleteAttString:singleInsertDeleteString:isSingleCharacterUpdate:wordRangeToFindMisspelled:pasteOperationSucceeded:
string
isAXAttributedString
attributesAtIndex:effectiveRange:
phoneNumberWithoutFormattingCharacters:
handleValueChangeForPhoneDeletionWithOldString:newString:
findLocationOfDifferenceInOldString:withNewString:
substringWithRange:
characterAtIndex:
wordBreakCharacterSet
characterIsMember:
whitespaceCharacterSet
allocWithZone:
initWithCharacters:length:
attribute:atIndex:effectiveRange:
mutableCopy
axAttributedStringWithString:
setAttributes:
substringToIndex:
substringFromIndex:
outputValueChangeForNewValue:oldValue:selectedTextRange:shouldEchoDeletion:isSingleInsert:feedbackType:lastKeyboardKeyPress:
initWithType:identifier:isAcquisition:
acquire
retries
setRetries:
_acquire
_retries
setAssertionWorkQueue:
setServer:
setPortDeathHandler:
setClient:
setServerIdentifier:
setAssertionWorkBacklog:
setAssertionRetryTimer:
sendSimpleMessage:enqueueError:
ax_nonRedundantDescription
assertionWorkBacklog
userInfo
assertionRetryTimer
_processAssertionBacklog
assertionWorkQueue
_initializeAssertionBookkeeping
initWithServiceName:
shouldRegisterClientCallbackSourceOnMainRunloop
setShouldRegisterCallbackSourceOnMainRunloop:
setTimeout:
connectWithError:
serverIdentifier
setClientIdentifier:
stopServerWithError:
clientCallbackPort
clientCallbackSource
initWithPort:serviceRunLoopSource:
startServerWithError:
_shouldRegisterClientCallbackSourceOnMainRunloop
_server
_client
_serverIdentifier
_assertionWorkBacklog
_assertionRetryTimer
_assertionWorkQueue
arrayWithObjects:count:
sharedPreferences
assistantIsEnabled
deviceSupportsSOS
assistiveTouchCustomGestures
_handleEventListener:
_handleZoomAttributesListener:
registerSiriViewServicePID:
registerAccessibilityUIServicePID:
setInPreboardMode:
_inPreBoardMode
_sessionIsLoginSession
supportsBlueLightReduction
disableBrightnessFilters
brightnessFiltersEnabled
blueLightStatusEnabled
restoreCachedBrightnessFilters
adaptationEnabled
supportsAdaptation
forceLoadGAXBundle
backBoardServerInstanceIfExists
backboardServiceInstance
setSessionIsLoginSession:
registerAssistiveTouchPID:
convertFrame:fromContextId:displayId:
convertFrame:toContextId:displayId:
contextIdHosterForContextId:
contextIdForDisplayPoint:
postEvent:systemEvent:afterNamedTap:namedTaps:
enableEventTap:forApplication:
setDisableSystemGestureRecognitionInEvents:
registerEventListener:
setAssistiveTouchPid:
setAccessibilityUIPid:
accessibilityUIPid
setSiriViewServicePid:
setVoiceOverItemChooserVisible:
zoomListenerRegistered
setCapsLockLightOn:
_springboardParametersForGuidedAccessAvailability
arrayWithCapacity:
registerGestureConflictWithZoom:
zoomAttributesChanged:
registerZoomAttributesChangeHandler:
adjustSystemZoom:
accessibilityUIServicePID
invertColorsEnabled
setInvertColorsEnabled:
postEvent:afterNamedTap:includeTaps:
postEvent:systemEvent:
contextIdForPosition:
contextIdHostingContextId:
convertFrame:fromContextId:toContextId:
convertFrame:toContextId:
convertFrame:fromContextId:
setHearingAidControlIsVisible:
setSwitchControlRendersDeviceUnusable:
setAccessibilityPreferenceAsMobile:value:notification:
setZoomInitialFocusRect:fromContext:
zoomInitialFocusRectWithQueryingContext:
tripleClickHomeButtonPress
homeClickSwallowedForGuidedAccess
isGuidedAccessActive
isGuidedAccessInWorkspace
performGuidedAccessAutomationCommand:error:
guidedAccessAvailability
requestGuidedAccessSession:appID:completion:
isGuidedAccessSelfLockedToApp:
isGuidedAccessUnmanagedSelfLocked
toggleGuidedAccess
guidedAccessIgnoredRegions
jetsamThirdPartyApps
supportsAccessibilityDisplayFilters
_overrideGestureRecognition
_eventListeners
_zoomAttributeListeners
data
appendBytes:length:
appendData:
dataWithData:
getBytes:length:
initWithHeader:
setData:
missingLength
subdataWithRange:
dataPayload
JSONObjectWithData:options:error:
packetDataWithPayload:
headerFromData:
packetWithHeader:
objectPayload
_totalLength
_data
initWithType:identifier:
setAssertionType:
_notifyServerAssertionWasAcquired
_notifyServerAssertionWasRelinquished
initWithArray:
assertionType
_hasValidAssertionType
assertionWithType:identifier:
_assertionType
setHealdAssertionMap:
setAssertionWasAcquiredHandler:
setAssertionWasReleasedHandler:
healdAssertionMap
enumerateKeysAndObjectsUsingBlock:
assertionWasAcquiredHandler
assertionWasReleasedHandler
addHeldAssertionOfType:byClient:
removeHeldAssertionOfType:byClient:
_assertionWasAcquiredHandler
_assertionWasReleasedHandler
_healdAssertionMap
stringByReplacingOccurrencesOfString:withString:options:range:
port
setPort:
_port
initWithHandler:
initWithTarget:selector:async:
selector
async
_async
_selector
setServiceName:
setHandlers:
setPerPidService:
initWithServiceName:perPidService:
isRunning
setDefaultHandler:
serviceName
exceptionWithName:reason:userInfo:
_startServerThread
_handleErrorWithMessage:outError:
setRunning:
initWithInt:
handlers
removeHandlerForKey:
setHandlerWithTarget:selector:async:forKey:
_registerContext:forKey:
_addPossibleRequiredEntitlementsToMessageWithKey:first:vothers:
_applyCustomQueueSize
objectsPassingTest:
anyObject
perPidService
_clientWithPort:auditToken:hasAnyEntitlementRequiredForMessage:
_handleClientRegistration:
archivedDataWithRootObject:
defaultHandler
errorWithDescription:
setServiceRunLoopSource:
clientInvalidationCallback
setClientInvalidationCallback:
setHandler:forKey:
setHandlerWithTarget:selector:forKey:possibleRequiredEntitlements:
setHandlerWithTarget:selector:async:forKey:possibleRequiredEntitlements:
removePossibleRequiredEntitlement:forMessageWithKey:
setQueueSize:
_handleClientInvalidation:
_handleIncomingMessage:securityToken:auditToken:clientPort:completion:
_clientIdentificationForAuditToken:
machPort
_defaultHandler
_serverRunLoopSource
_clientInvalidationSource
_serverPort
_clientInvalidationPort
_validSecurityTokens
_connectedClients
_clientInvalidationHandler
_entitlements
_assignedServerPort
_customQueueSize
_running
_perPidService
_handlers
dataWithBytes:length:
bytes
_synchronizeDrawingAcrossProcessesOverPort:
setPostConnectionBlock:
setTimeoutTimer:
timeoutTimer
setDidTimeout:
_performTask
postConnectionBlock
didTimeout
initWithConnectBlock:timeout:accessQueue:
performTask
_didTimeout
_postConnectionBlock
_timeoutTimer
replyPort
registerOutstandingRequest:
replyMachPortSource
unregisterByPort:
replyQueue
replyHandler
_responseReceived:
lookupByPort:
initWithReplyPort:handlerQueue:handler:
registerAndListenForResponse
rawResponseReceived:
sendOnceRightDestroyed
initialSendAborted
_replyPort
_replyQueue
_replyHandler
_replyMachPortSource
weakObjectsPointerArray
allObjects
addPointer:
setPostConnectionTasks:
setConnectionQueue:
_commonInit
compact
setPortDeathAccessQueue:
clientIdentifier
_registerWithServer
shouldRegisterCallbackSourceOnMainRunloop
_sendRegistrationMessageWithRetries:
verifyConnectionExists
ax_errorWithDomain:description:
usesPerPidLookup
setConnected:
_handleErrorWithMessage:machError:outError:
_verifyConnectionWithError:
sendSimpleMessage:synchronizationPort:error:
_prepareToSendMessage:withError:prepSuccessHandler:
_createRegistrationWithReplyMachPort:forAsyncReplyOnQueue:responseHandler:
portDeathAccessQueue
portDeathHandler
connectionQueue
postConnectionTasks
_attemptToEstablishConnection
domain
code
errorWithDomain:code:userInfo:
allClients
initWithPort:
serviceMachPort
disconnectWithError:
_serverDied
establishConnectionWithTimeout:completion:
_descriptionForMachError:
serverPort
setServerPort:
timeout
setUsesPerPidLookup:
setPid:
_serverPortLock
_assignedServerMachPort
_portDeathHandler
_timeout
_clientIdentifier
_clientSource
_connectionAttempts
_outstandingAsyncRequests
_connected
_usesPerPidLookup
_pid
_postConnectionTasks
_connectionQueue
_portDeathAccessQueue
_accessibilityIsSpeakThisTemporarilyDisabled
_accessibilitySetSpeakThisTemporarilyDisabled:
lastSpokenPhrases
lastSoundsPlayed
currentRotorName
lastScreenChange
currentFocusedElement
triggerCommand:
triggerCommand:withArgument:
isBrailleInputUIShowing
stringFromNumber:
setLocale:
setNumberStyle:
_setUsesCharacterDirection:
setMinimumFractionDigits:
setMaximumFractionDigits:
numberWithInteger:
numberWithFloat:
setBundleHandlerMap:
setFrameworkHandlerMap:
setDylibHandlerMap:
setBinaryMonitorQueue:
_addHandler:withName:toMap:
pathExtension
hasSuffix:
binaryMonitorQueue
_handleLoadedImagePath:
pathComponents
_loadImageIsFramework:
_frameworkNameForImage:
frameworkHandlerMap
_loadImageIsBundle:
_bundleNameForImage:
bundleHandlerMap
_loadImageIsDylib:
_dylibNameForImage:
dylibHandlerMap
addHandler:forBundleID:
addHandler:forBundleName:
addHandler:forFramework:
addHandler:forDylib:
_bundleHandlerMap
_frameworkHandlerMap
_dylibHandlerMap
_binaryMonitorQueue
setDateFormat:
dateFromString:
autoupdatingCurrentLocale
dateFormatFromTemplate:options:locale:
stringFromDate:
setTimeZone:
setZeroFormattingBehavior:
setUnitsStyle:
setAllowedUnits:
stringFromTimeInterval:
containsString:
componentsSeparatedByString:
reverseObjectEnumerator
componentsJoinedByString:
localizedStringWithFormat:
setSecond:
second
setNanosecond:
stringFromDateComponents:
autoupdatingCurrentCalendar
date
components:fromDate:toDate:options:
hour
month
year
localizedStringFromDateComponents:unitsStyle:
setByAddingObjectsFromSet:
secureUnarchiveData:withExpectedClass:otherAllowedClasses:
activeRestrictionIdentifiers
setValidationReportingServices:
setOverrideProcessName:
setValidationTargetName:
setConsoleErrorMessages:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
setNumberOfValidationErrors:
setForceDoNotReport:
setDebugBuild:
setShouldLogToConsole:
setShouldCrashOnError:
setShouldReportToServer:
validationTargetName
numberOfValidationErrors
overrideProcessName
sendValidationSuccessForProcessName:
_printConsoleReport:isDelayed:
installSafeCategories:afterDelay:validationTargetName:overrideProcessName:forceDoNotReport:
isDebugBuild
stringWithString:
consoleErrorMessages
client:validateClass:
sendValidateExceptionForClass:errorMessage:overrideProcessName:
client:validateClass:isKindOfClass:
sendValidateExceptionForClass:isKindOfClass:errorMessage:overrideProcessName:
client:validateClass:hasInstanceVariable:
sendValidateExceptionForClass:hasInstanceVariable:errorMessage:overrideProcessName:
client:validateClass:hasInstanceVariable:withType:
sendValidateExceptionForClass:hasInstanceMethod:errorMessage:overrideProcessName:
sendValidateExceptionForClass:hasClassMethod:errorMessage:overrideProcessName:
_client:validateClass:hasClassMethod:withFullSignature:argList:
_client:validateClass:hasMethod:methodType:returnType:arguments:
client:validateClass:hasInstanceMethod:withFullSignature:argList:
client:validateClass:hasInstanceMethod:
_client:validateClass:hasMethod:methodType:
client:validateClass:hasClassMethod:
client:validateClass:hasProperty:
client:validateClass:hasProperty:withType:
sendValidateExceptionForClass:hasProperty:errorMessage:overrideProcessName:
client:validateClass:conformsToProtocol:
sendValidateExceptionForClass:conformsToProtocol:errorMessage:overrideProcessName:
client:validateProtocol:conformsToProtocol:
sendValidateExceptionForProtocol:conformsToProtocol:errorMessage:overrideProcessName:
client:validateProtocol:hasMethod:isInstanceMethod:isRequired:
sendValidateExceptionForProtocol:hasMethod:errorMessage:overrideProcessName:
client:validateProtocol:hasOptionalInstanceMethod:
client:validateProtocol:hasRequiredInstanceMethod:
client:validateProtocol:hasProperty:
sendValidateExceptionForProtocol:hasProperty:errorMessage:overrideProcessName:
installSafeCategory:canInteractWithTargetClass:
_installSafeCategoryValidationMethod
axTrampolineForClass:
_accessibilityPerformValidations:
_initializeSafeCategoryFromValidationManager
sendExceptionForInstallingSafeCategory:onTarget:overrideProcessName:
validationReportingServices
sendGenericReport:withTag:overrideProcessName:
sendFailedAssertionWithErrorMessage:overrideProcessName:
sendFailedTestCase:withTag:overrideProcessName:
performValidations:withPreValidationHandler:postValidationHandler:
installSafeCategories:afterDelay:validationTargetName:overrideProcessName:
validateClass:
validateClass:hasInstanceVariable:
validateClass:hasInstanceVariable:withType:
validateClass:hasClassMethod:withFullSignature:
client:validateClass:hasClassMethod:withFullSignature:
client:validateClass:hasInstanceMethod:withFullSignature:
validateClass:hasInstanceMethod:withFullSignature:
validateClass:hasInstanceMethod:
validateClass:hasClassMethod:
validateClass:hasProperty:
validateClass:hasProperty:withType:
validateClass:conformsToProtocol:
validateProtocol:conformsToProtocol:
validateProtocol:hasMethod:isInstanceMethod:isRequired:
validateProtocol:hasOptionalInstanceMethod:
validateProtocol:hasRequiredInstanceMethod:
validateProtocol:hasOptionalClassMethod:
client:validateProtocol:hasOptionalClassMethod:
validateProtocol:hasRequiredClassMethod:
client:validateProtocol:hasRequiredClassMethod:
validateProtocol:hasProperty:
installSafeCategory:
shouldLogToConsole
shouldCrashOnError
shouldReportToServer
forceDoNotReport
_shouldLogToConsole
_shouldCrashOnError
_shouldReportToServer
_forceDoNotReport
_debugBuild
_numberOfValidationErrors
_validationTargetName
_overrideProcessName
_consoleErrorMessages
_validationReportingServices
initWithPayload:
setError:
error
messageWithPayload:
_error
setSendCompletion:
setUUID:
dataWithJSONObject:options:error:
messageWithPayload:andSendCompletion:
transportPayload
sendCompletion
_UUID
_sendCompletion
setPathIndex:
setPathIdentity:
setPathProximity:
setPathPressure:
setPathMajorRadius:
setPathLocation:
setPathWindowContextID:
setPathWindow:
pathIndex
pathIdentity
pathProximity
pathPressure
pathMajorRadius
pathLocation
pathWindowContextID
pathWindow
pathMajorRadiusTolerance
setPathMajorRadiusTolerance:
pathTwist
setPathTwist:
pathMinorRadius
setPathMinorRadius:
pathQuality
setPathQuality:
pathDensity
setPathDensity:
pathEventMask
setPathEventMask:
orbValue
setOrbValue:
transducerType
setTransducerType:
altitude
setAltitude:
azimuth
setAzimuth:
barrelPressure
setBarrelPressure:
willUpdateMask
setWillUpdateMask:
didUpdateMask
setDidUpdateMask:
decodeFloatForKey:
decodeInt64ForKey:
decodeIntegerForKey:
encodeFloat:forKey:
encodeInteger:forKey:
_pathIndex
_pathIdentity
_pathProximity
_pathWindowContextID
_pathPressure
_pathMajorRadius
_pathMinorRadius
_pathMajorRadiusTolerance
_pathTwist
_pathQuality
_pathDensity
_pathEventMask
_orbValue
_transducerType
_altitude
_azimuth
_barrelPressure
_willUpdateMask
_didUpdateMask
_pathWindow
_pathLocation
firstPath
setX:
setY:
setZ:
initWithCaller:targetClass:
methodDoesNotExistSentinal
methodSignatureForSelector:
setCaller:
setTargetClass:
caller
targetClass
methodSignature
methodNotFoundSentinal
warnAboutUnknownSelectors
_findIMPForSelector:
invokeUsingIMP:
callerIsClass
trampolineWithCaller:targetClass:
forwardInvocation:
setWarnAboutUnknownSelectors:
_warnAboutUnknownSelectors
_caller
_targetClass
axSuperTrampoline
setPath:
currentSharedInstance
_path
ignoreAXAsserts
outputs
portType
owningPortUID
category
setCategory:withOptions:error:
enableMultiroute
channels
disableMultiroute
channelWithChannel:
defaultPort
channelsForPort:
currentRoute
compare:
_audioHardwareChannelLayout
_savedIdForRouteDescription:
channelNumber
_handleSurroundSoundDefaults:returnedChannels:port:source:
channelLabel
_setAudioHardwareChannelLayout:
channelsAreAirplay:route:
channelsAreWiredHeadphones:
setDefaultPortChannels:
defaultPortChannels
setDefaultPort:
savedChannelsForOutput:forSource:
setSavedChannels:forOutput:forSource:
setPortName:
setPortType:
setUID:
setTtsChannels:
ttsChannels
portName
_ttsChannels
setOutputs:
setInputs:
inputs
setUseMonarchStyleSpeechRate:
useMonarchStyleSpeechRate
setProcessEmoticons:
processEmoticons
setLastUtteranceSubstringRange:
setLastSpokenSubstringRange:
setSpeakingContext:
_handleAudioInterruption:
addObserver:selector:name:object:
_handleMediaServicesWereLost:
_handleMediaServicesWereReset:
_respeakUtteranceIfNeeded
quickSpeakSpeakingRate
removeObserver:name:object:
setVoiceIdentifier:
selectedContent
content
setSelectedContent:
stringByReplacingFatWidthCharactersWithBasicCharacters:
initWithContent:
tagContent
_canSpeakTaggedContent:
startSpeakingWithPreferredLanguage:delayBeforeStart:error:
isInAudioInterruption
audioInterruptionStartedTime
setDidRequestStartSpeakingDuringAudioInterruption:
setDidRequestPauseSpeakingDuringAudioInterruption:
setDidRequestResumeSpeakingDuringAudioInterruption:
setRequestedLanguageCodeDuringAudioInterruption:
setIsInAudioInterruption:
primaryUnambiguousDialect
primaryAmbiguousDialect
specificLanguageID
speechSynthesizer
setSpeechSynthesizer:
setShouldHandleAudioInterruptions:
_updateAudioSessionCategory
setUserPreferredLangID:
_startSpeakingSequence
speakingContent
wasSpeakingBeforeAudioInterruption
isSpeaking
pauseSpeakingAtBoundary:
_successWithCode:error:
lastUtterance
_clearAllContentState
setLastUtterance:
stopSpeakingAtBoundary:
resumeSpeakingAfterDelay:error:
shouldSpeakNextItemOnResume
setShouldSpeakNextItemOnResume:
_speakNextItemInSequence
continueSpeaking
_changeSpeakingSpeed:
_skipByUnit:boundary:
dialectForSystemLanguage
speechUtteranceWithString:
speechVoiceIdentifierForLanguage:source:exists:
setVoice:
voice
voiceWithLanguage:
quickSpeakSpeakingRateForLanguage:
systemLanguageID
setRate:
speakUtterance:
setSpeakingContent:
setSpeakingContentTokenRanges:
tags
setSpeechSequenceItems:
_updateSequenceForSpellOutBehavior
spellOutContent
speechSequenceItems
range
rangeOfComposedCharacterSequenceAtIndex:
setRange:
oratorDidFinishSpeaking:
userPreferredLangID
dialect
wasPredicted
langMap
isAmbiguous
isWestern
canBeSpokenByLanguage:
_setAudioSessionActive:
setLastUtteranceLanguageCode:
setLastUtteranceLanguageTag:
lastUtteranceLanguageCode
setQuickSpeakSpeakingRate:forLanguage:
setQuickSpeakSpeakingRate:
lastSpokenSubstringRange
lastUtteranceLanguageTag
lastUtteranceSubstringRange
contentSubstring
speakingContentTokenRanges
enumerateObjectsWithOptions:usingBlock:
numberOfTokensToSkip
_speechSequenceItemsStartingAtContentLocation:
_tokenizeContentIfNeeded
_currentTokenIndex:
_speakNextTokenFromCurrentTokenIndex:forward:boundary:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
valueWithRange:
enumerateSubstringsInRange:options:usingBlock:
setNumberOfTokensToSkip:
setWasSpeakingBeforeAudioInterruption:
ambiguousLangMaps
unambiguousLangMaps
pauseSpeaking:
setAudioInterruptionStartedTime:
didRequestStartSpeakingDuringAudioInterruption
requestedLanguageCodeDuringAudioInterruption
startSpeakingWithPreferredLanguage:error:
didRequestPauseSpeakingDuringAudioInterruption
didRequestResumeSpeakingDuringAudioInterruption
resumeSpeaking:
isAudioSessionActive
pendingAudioSessionActive
setPendingAudioSessionActive:
setActive:withOptions:error:
setIsAudioSessionActive:
speakingContext
oratorDidPauseSpeaking:
oratorDidResumeSpeaking:
oratorDidStartSpeaking:
oratorDidCancelSpeaking:
orator:willSpeakRange:ofContent:
_didBeginInterruption
_didEndInterruption
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:didCancelSpeechUtterance:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
setContent:
stopSpeaking:
speechRate
speakFaster
speakSlower
fastForwardWithBoundary:
rewindWithBoundary:
speakStatusWithLanguage:rate:
contentIsSpeakable
canResumeWithContent:
clearSelectedContent
setSpellOutContent:
voiceIdentifier
_statusUtterance
_contentIsSpeakable
_audioSessionTimer
_spellOutContent
_shouldSpeakNextItemOnResume
_isAudioSessionActive
_pendingAudioSessionActive
_isInAudioInterruption
_wasSpeakingBeforeAudioInterruption
_didRequestStartSpeakingDuringAudioInterruption
_didRequestPauseSpeakingDuringAudioInterruption
_didRequestResumeSpeakingDuringAudioInterruption
_speakingContext
_selectedContent
_voiceIdentifier
_speakingContent
_speakingContentTokenRanges
_numberOfTokensToSkip
_speechSynthesizer
_speechSequenceItems
_lastUtteranceLanguageCode
_lastUtterance
_lastUtteranceLanguageTag
_audioInterruptionStartedTime
_requestedLanguageCodeDuringAudioInterruption
_lastSpokenSubstringRange
_lastUtteranceSubstringRange
setBundleIdentifier:
setLayoutRole:
isLayoutPrimary
isLayoutFullscreenModal
layoutRole
decodeObjectForKey:
appWithPID:bundleID:
_bundleIdentifier
_layoutRole
_ax_errorWithDomain:code:description:arguments:
initWithObjectsAndKeys:
localizedDescription
ax_errorWithDomain:code:description:
handInfo
lastObject
removeLastObject
ax_enqueueObject:
ax_dequeueObject
ax_lastEnqueuedObject
ax_nextDequeuedObject
initWithDouble:
localizedStringForKey:value:table:
stringByAppendingString:
pathForResource:ofType:
dictionaryWithContentsOfFile:
allKeys
setObject:forIndex:
setWestern:
setAmbiguous:
setRtl:
setGeneralLanguageID:
setAlternateLanguageIDs:
setDialects:
setAssociatedAmbiguousLanguages:
generalLanguageID
dialects
setValue:forKey:
locale
localeIdentifier
setUserPreferredDialect:
basicDescription
alternateLanguageIDs
userPreferredDialect
userLocale
userLocaleDialect
initWithLanguageID:isWestern:isAmbiguous:isRTL:dialects:alternateLanguageIDs:associatedAmbiguousLanguages:
defaultDialect
dialectWithLocaleIdentifier:
associatedAmbiguousLanguages
isRTL
_western
_ambiguous
_rtl
_dialects
_generalLanguageID
_userPreferredDialect
_alternateLanguageIDs
_associatedAmbiguousLanguages
switchWithAction:name:source:type:
setASwitch:
_filterEvents:
assistiveTouchSwitches
isSwitchWithName:
_isSwitchWithSource:keyCode:buttonNumber:ATVRemoteButtonUsage:
source
keyCode
buttonNumber
switchRegistrarShouldFilterEvents:
switchRegistrarShouldProcessKeyboardKeyEvent:
addLongPressSwitch
_isKeyboardSwitchWithKeyCode:longPress:
switchRegistrarKeyboardKeyAlreadyInUseForSwitch:
aSwitch
setKeyCode:
setSource:
switchRegistrar:didUpdateSwitch:
_isATVRemoteButtonSwitchWithUsage:longPress:
switchRegistrarMFIButtonAlreadyInUseForSwitch:
setButtonNumber:
switchRegistrarShouldProcessMFIButtonEvent:
_isMFISwitchWithButtonNumber:longPress:
device
eventSystemClient
manager
_keyboardMatching
setEventSystemClient:
_mfiMatching
setManager:
setDevice:
beginFilteringEvents
endFilteringEvents
firstAvailableName
_handleApplicationDidBecomeActive:
_handleApplicationWillResignActive:
_handleKeyboardKeyDownEvent:
_handleATVRemoteButtonDownEvent:
_handleMFIButtonDownValue:
_atvRemoteMatching
setAddLongPressSwitch:
_addLongPressSwitch
_aSwitch
_device
_eventSystemClient
_manager
setAction:
setLongPressAction:
setGesture:
setLongPressGesture:
setHoldPoint:
setOptional:
initWithUUIDString:
setSwitchUUID:
setSwitchOriginalAction:
dictionaryWithCapacity:
action
longPressAction
gesture
holdPoint
longPressGesture
switchUUID
isOptional
switchOriginalAction
recipeMappingWithDictionaryRepresentation:
dictionaryRepresentation
_optional
_action
_longPressAction
_gesture
_longPressGesture
_switchUUID
_switchOriginalAction
_holdPoint
setName:
setUnlocalizedName:
setUuid:
setMappings:
setMenuIconIdentifier:
unlocalizedName
uuid
mappings
menuIconIdentifier
recipeWithDictionaryRepresentation:
shouldContinueScanning
_name
_uuid
_mappings
_unlocalizedName
_menuIconIdentifier
setVoiceName:
setSpeakableCharacters:
setSecondaryLanguageRange:
setSpecificLanguageID:
setLangMap:
voiceName
languageNameAndLocaleInCurrentLocale
languageNameAndLocaleInNativeLocale
langManager
displayNameForKey:value:
capitalizedStringWithLocale:
componentsFromLocaleIdentifier:
nonlocalizedNameForLanguage:
secondaryLanguageRange
speakableCharacters
longCharacterIsMember:
isCharacterCommon:
canSpeakCharacter:
initWithLocale:voiceName:specificLanguageID:speakableCharacters:secondaryLanguageRange:
regionID
languageNameInCurrentLocale
languageNameInNativeLocale
isDialectSecondaryForCharacter:
canSpeakLongCharacter:
canSpeakString:
_langMap
_voiceName
_locale
_specificLanguageID
_speakableCharacters
_secondaryLanguageRange
currentHandler
handleFailureInFunction:file:lineNumber:description:
dataWithLength:
mutableBytes
stringWithCharacters:length:
sharedIntlUtility
languageList
characterSetWithCharactersInString:
bundleForClass:
arrayWithContentsOfFile:
addObjectsFromArray:
stringByReplacingEmojiCharactersWithEmojiDescriptions:stringForPauses:language:rangeReplacements:appendEmojiSuffix:
characterSetWithRange:
rangeOfCharacterFromSet:
setUserLocale:
_handleUserLocaleDidChange:
formUnionWithCharacterSet:
punctuationCharacterSet
controlCharacterSet
setCommonCharacters:
_loadLangMaps
setLangMaps:
removeObserver:
setDialectForSystemLanguage:
setDialectForCurrentLocale:
langMaps
dialectForCurrentLocale
updateCachedDialects
dialectsThatCanSpeakCharacter:
_preferredLanguageIDsFromUserSelectedKeyboards
commonCharacters
rangeOfCharacterFromSet:options:range:
setLanguageDialectCode:
descriptionForWord:
addCharactersInRange:
initWithLocaleIdentifier:
characterSetForRanges:
commonPunctuationCharacters
doNotTranslateWords
stringByReplacingEmojiCharactersWithEmojiDescriptions:
nameForAlternativeVoiceIdentifier:
dialectForAlternativeVoiceIdentifier:
dialectForUserLocale
dialectThatCanSpeakCharacter:
ambiguousDialectsFromUserKeyboardPreferences
isStringComposedByCommonCharacters:
descriptionOfWord:forLanguage:
_dialectForSystemLanguage
_dialectForCurrentLocale
_langMaps
_commonCharacters
_userLocale
lowercaseString
initWithContentsOfFile:
uppercaseString
setWasPredicted:
addAmbiguousDialect:
addUnambiguousDialect:
ambiguousDialects
unambiguousDialects
preferredUnambiguousDialect
preferredAmbiguousDialect
setUnambiguousDialects:
setAmbiguousDialects:
canBeSpokenByDialect:
mutableCopyWithZone:
tagWithDialects:range:content:predictedByTagger:
hasAmbigiousDialects
addAmbiguousDialects:
_wasPredicted
_content
_unambiguousDialects
_ambiguousDialects
_range
initWithTagSchemes:options:
setLinguisticTagger:
setString:
setTags:
setUnpredictedAmbiguousLangMaps:
setCurrentDialects:
linguisticTagger
isTagged
setTagged:
_manuallyProcessContentWithRange:
_addTag
enumerateTagsInRange:scheme:options:usingBlock:
significantAmbiguousLangMapsForUserKeyboards
orderedSet
newlineCharacterSet
splitContentOnNewlines
currentDialects
enumerateUnpredictedTags:
enumeratePredictedTags:
langMapIsSignificant:
significantAmbiguousLangMaps
hasOnlyWesternLangMaps
hasOnlyNonWesternLangMaps
updateTagsForLocalePrefChange
unpredictedAmbiguousLangMaps
setSplitContentOnNewlines:
_currentDialects
_currentChunk
_predictedByTagger
_tagged
_splitContentOnNewlines
_tags
_linguisticTagger
_unpredictedAmbiguousLangMaps
_userPreferredLangID
persistentStoreCoordinator
initWithConcurrencyType:
setPersistentStoreCoordinator:
languageDialectCode
managedObjectModel
languageCode
URLForResource:withExtension:
initWithManagedObjectModel:
addPersistentStoreWithType:configuration:URL:options:error:
initWithContentsOfURL:
managedObjectContext
_managedObjectContext
_persistentStoreCoordinator
_managedObjectModel
_fastCharacterContents
getCharacters:range:
_characterSetWithPattern:
_ideographSet
_contentsExclusivelyInCharacterSet:
_japaneseLetterSet
_isOnlyIdeographs
_isJapanesePhrase
initWithEntityName:
executeFetchRequest:error:
descriptionForCharacter:language:
componentDescriptionForCharacter:
isCancelled
setFinished:
performSelector:withObject:afterDelay:
setBlock:
runAfterDelay:
block
setCancel:
isFinished
finished
active
_block
task
setTask:
_runAfterDelay:
performSelector:onThread:withObject:waitUntilDone:
initWithThread:
_thread
_cancelBlock
_task
setUsagePage:
decodeBoolForKey:
setKeyDown:
setUnmodifiedInput:
setModifiedInput:
setShiftModifiedInput:
setModifierState:
unmodifiedInput
shiftModifiedInput
modifierState
modifiedInput
usagePage
keyDown
encodeBool:forKey:
_hardwareKeyboardLayout
translateStringToKeycode
translateKeycode
_keyDown
_keyCode
_usagePage
_modifierState
_unmodifiedInput
_modifiedInput
_shiftModifiedInput
setSubtype:
setTime:
setLocation:
setWindowLocation:
setHandInfo:
setIsGeneratedEvent:
setIsDisplayIntegrated:
setSenderID:
setContextId:
contextId
generationCount
setKeyInfo:
setFlags:
setScrollAmount:
setGameControllerInfo:
setDirectionPadUp:
setDirectionPadDown:
setDirectionPadLeft:
setDirectionPadRight:
setFaceButtonA:
setFaceButtonB:
setFaceButtonX:
setFaceButtonY:
setShoulderButtonL1:
setShoulderButtonL2:
setShoulderButtonR1:
setShoulderButtonR2:
setLeftJoystickX:
setLeftJoystickY:
setRightJoystickX:
setRightJoystickY:
representationWithType:subtype:time:location:windowLocation:handInfo:
_digitizerRepresentation:hidStreamIdentifier:
_keyboardButtonEvent:
_wheelEvent:
_gameControllerEvent:
setClientId:
setTaskPort:
setHIDAttributeData:
setIsBuiltIn:
setGenerationCount:
setHIDTime:
setCreatorHIDEvent:
_accessibilityDataFromRealEvent:
setAccessibilityData:
setWindow:
setAccelerometerInfo:
_newHandHIDEventRef
_newButtonHIDEventRef
_newKeyboardHIDEventRef
_newAccelerometerHIDEventRef
isBuiltIn
_applyAccessibilityDataToRealEvent:
accelerometerInfo
senderID
keyInfo
isDownEvent
flags
useOriginalHIDTime
isGeneratedEvent
isDisplayIntegrated
subtype
location
windowLocation
time
window
HIDAttributeData
additionalFlags
setAdditionalFlags:
scrollAmount
isRedirectEvent
setRedirectEvent:
gameControllerInfo
_senderNameForID
_HIDEventIsAccessibilityEvent:
accessibilityData
_accessibilityEventFromRealEvent:
dataBytes
dataLength
representationWithData:
cancelEventForPathIndexMask:
representationWithLocation:windowLocation:handInfo:
accelerometerRepresentation:
keyRepresentationWithType:
buttonRepresentationWithType:
touchRepresentationWithHandType:location:
pathIndexMask
resetInitialTouchCountValueForHidStreamIdentifier:
isUpdate
willBeUpdated
dataRepresentation
_contextIDFromHIDEvent:
normalizedEventRepresentation:scale:
fakeTouchScaleEventRepresentation:
modifyPoints:
neuterUpdates
denormalizedEventRepresentation:descale:
newGSEventRef
firstPathContextId
fingerCount
isTouchDown
isMove
isChordChange
isLift
isInRange
isInRangeLift
isCancel
applyAccessibilityDataToCreatorHIDEvent
setUseOriginalHIDTime:
_isBuiltIn
_isDisplayIntegrated
_isGeneratedEvent
_useOriginalHIDTime
_redirectEvent
_subtype
_flags
_taskPort
_contextId
_time
_senderID
_handInfo
_keyInfo
_accelerometerInfo
_gameControllerInfo
_clientId
_HIDTime
_HIDAttributeData
_scrollAmount
_additionalFlags
_generationCount
_creatorHIDEvent
_accessibilityData
_window
_location
_windowLocation
assistiveTouchAlwaysShowMenuEnabled
assistiveTouchOpenMenuSwaggleEnabled
assistiveTouchSpeed
assistiveTouchRecentGestures
assistiveTouchSavedGestures
assistiveTouchScanningMode
assistiveTouchPreferredPointPicker
assistiveTouchAutoScanningEnabled
assistiveTouchGroupElementsEnabled
assistiveTouchScannerCompactMenuEnabled
assistiveTouchScannerMenuLabelsEnabled
assistiveTouchStepInterval
assistiveTouchScanCycles
assistiveTouchScanTimeout
assistiveTouchScannerSoundEnabled
assistiveTouchScannerSpeechEnabled
assistiveTouchScannerSpeechRate
assistiveTouchScannerCursorHighVisibilityEnabled
assistiveTouchScannerSpeechIsInterruptedByScanning
assistiveTouchInputCoalescingDuration
assistiveTouchInputCoalescingEnabled
assistiveTouchInputHoldDuration
assistiveTouchLongPressDuration
assistiveTouchInputHoldEnabled
assistiveTouchLongPressEnabled
assistiveTouchDelayAfterInput
assistiveTouchDelayAfterInputEnabled
assistiveTouchAxisSweepSpeed
assistiveTouchActionRepeatInterval
assistiveTouchActionRepeatEnabled
assistiveTouchScannerPointPickerDefaultsToRescan
assistiveTouchScanTimeoutEnabled
assistiveTouchCursorColor
assistiveTouchHeadMovementSensitivity
assistiveTouchSwitchUsageConfirmed
assistiveTouchCameraSwitchPreviewEnabled
assistiveTouchHeadlessModeEnabled
assistiveTouchScannerAddedTripleClickAutomatically
assistiveTouchMainScreenCustomization
assistiveTouchOrbAction
switchControlRecipes
switchControlLaunchRecipeUUID
switchControlTopLevelMenuItems
switchControlShouldUseShortFirstPage
switchControlGesturesMenuItems
switchControlDeviceMenuItems
switchControlSettingsMenuItems
switchControlScanningStyle
switchControlDwellTime
switchControlTapBehavior
switchControlAutoTapTimeout
switchControlShouldAlwaysActivateKeyboardKeys
switchControlIsEnabledAsSlave
switchControlScanAfterTapLocation
zoomPreferencesWereInitialized
zoomWindowFrame
zoomScale
zoomPanOffset
zoomSlugNormalizedPosition
zoomCurrentLensEffect
zoomCurrentLensMode
zoomPeekZoomEnabled
zoomPeekZoomEverEnabled
zoomShouldFollowFocus
zoomShouldShowSlug
zoomAlwaysUseWindowedZoomForTyping
zoomPreferredCurrentLensMode
zoomPreferredMaximumZoomScale
zoomPreferredLensModes
zoomIdleSlugOpacity
zoomShouldAllowFullscreenAutopanning
zoomInStandby
zoomDebugDisableZoomLensScaleTransform
zoomDebugShowExternalFocusRect
guidedAccessUsageCount
guidedAccessAXFeaturesEnabled
guidedAccessAllowsUnlockWithTouchID
guidedAccessToneIdentifierForTimeRestrictionEvents
guidedAccessShouldSpeakForTimeRestrictionEvents
gaxInternalSettingsUserAppProfile
gaxInternalSettingsUserGlobalProfile
gaxInternalSettingsSavedAccessibilityFeatures
gaxInternalSettingsSavedAccessibilityTripleClickOptions
gaxInternalSettingsUserConfiguredAppIDs
gaxInternalSettingsActiveAppOrientation
gaxInternalSettingsActiveAppID
gaxInternalSettingsIsActiveAppSelfLocked
gaxInternalSettingsTimeRestrictionHasExpired
gaxInternalSettingsSystemDidRestartDueToLowBattery
gaxInternalSettingsDeviceID
gaxInternalSettingsProductBuildVersion
gaxInternalSettingsLastActivationDate
gaxInternalSettingsLastPasscodeSetDate
internalLoggingColorTheme
validateSecondPartyApps
ignoreAXServerEntitlements
logAXNotificationPosting
voiceOverHearingAidRoutingEnabled
skipHearingAidMFiAuth
enableHearingAidReporter
guidedAccessDisallowDirectInactiveToActiveTransition
guidedAccessOverrideTimeRestrictionDuration
speakCorrectionsEnabled
speakIncomingNotifications
quickSpeakHighlightText
quickSpeakHighlightOption
quickSpeakUnderlineSentence
quickSpeakVolume
quickSpeakSentenceHighlightOption
speechVoiceIdentifierForLanguage
quickSpeakNubbitNormalizedPosition
letterFeedbackEnabled
phoneticFeedbackEnabled
quickTypeWordFeedbackEnabled
wordFeedbackEnabled
characterFeedbackDelayDuration
voiceOverLargeCursorEnabled
voiceOverHelpMode
voiceOverNavigateImagesOption
voiceOverPhoneticsFeedback
voiceOverHardwareTypingFeedback
voiceOverSoftwareTypingFeedback
voiceOverBrailleGesturesTypingFeedback
voiceOverCompactVoiceEnabled
voiceOverHintsEnabled
voiceOverPitchChangeEnabled
voiceOverSoundEffectsEnabled
voiceOverVerbosityEmojiSuffixEnabled
voiceOverSpeakingRateInRotorEnabled
voiceOverSpeakNotificationsEnabled
voiceOverRotorItems
voiceOverBrailleTableIdentifier
voiceOverAlwaysUseNemethCodeForMathEnabled
voiceOverDefaultDialect
voiceOverHandwritingWasNativeAutocorrectEnabled
voiceOverSpeakingRateForLanguage:
voiceOverActivationWorkaround
voiceOverShowSoftwareKeyboardWithBraille
voiceOverBrailleGradeTwoAutoTranslateEnabled
voiceOverShouldOutputToHearingAid
customPronunciationSubstitutions
voiceOverAlternativeVoiceIdentifier:
voiceOverPrefersCompact:
voiceOverTouchBraillePanningAutoTurnsReadingContent
voiceOverAudioDuckingEnabled
voiceOverTouchBrailleDisplayInputMode
voiceOverTouchBrailleGesturesInputMode
voiceOverTouchBrailleDisplayOutputMode
enableVoiceOverCaptions
voiceOverTouchBrailleGesturesShouldUseLockedConfiguration
voiceOverTouchBrailleGesturesLockedOrientation
voiceOverTouchBrailleGesturesLockedTypingMode
voiceOverTouchBrailleGesturesDidPlayCalibrationHint
voiceOverDoubleTapInterval
voiceOverBrailleAlertDisplayDuration
voiceOverNavigationDirectionMode
voiceOverKeyboardModifierChoice
voiceOverTouchBrailleShouldReverseDots
voiceOverTapticTimeMode
voiceOverTapticTimeEncoding
voiceOverSpeakSecondsEncoding
allowHearingAidControlOnLockScreen
shouldStreamToLeftAid
shouldStreamToRightAid
pairedHearingAids
independentHearingAidSettings
shouldFlashForAlertInSilentMode
localizationQACaptionShowFilePath
localizationQACaptionShowUSString
localizationQACaptionShowLocalizedString
alexLocalAssetURL
currentVoices
touchAccommodationsEnabled
touchAccommodationsUsageConfirmed
touchAccommodationsTripleClickConfirmed
touchAccommodationsHoldDurationEnabled
touchAccommodationsHoldDuration
touchAccommodationsIgnoreRepeatEnabled
touchAccommodationsIgnoreRepeatDuration
touchAccommodationsTapActivationMethod
touchAccommodationsTapActivationTimeout
stickyKeysEnabled
stickyKeysShiftToggleEnabled
stickyKeysBeepEnabled
magnifierEnabled
magnifierShouldAdjustFiltersForAmbientLight
magnifierZoomLevel
magnifierFilterSetIdentifier
magnifierFilterInverted
magnifierContrast
magnifierBrightness
_domainNameForDomain:
standardUserDefaults
initWithSuiteName:
_setValue:forPreferenceKey:
_switchFromRootUserIfNecessary:
_domainForPreferenceKey:
_notificationForPreferenceKey:
_valueForPreferenceKey:
_synchronizeIfNecessary:domain:
_registerForNotification:
_migratePreferenceIfNecessary:
_userDefaultsStoreForDomain:
removeObserver:forKeyPath:
updateBlocks
_handleVoiceUnarchivedCache:
registeredNotifications
addObserver:forKeyPath:options:context:
_handlePreferenceChanged:
numberWithUnsignedLongLong:
_preferenceKeyForSelector:
initWithListenerAddress:
addSelectorKey:
setWithObject:
setAssistiveTouchMainScreenCustomization:
setSwitchControlRecipes:
_switchControlMigratePreMonarchIncludedMenuItemsForNewTypes:
_switchControlHasEmptyTopLevelMenuItems:
_switchControlMenuItemsForPreferenceKey:allTypes:
arrayByAddingObject:
initWithBytes:length:
orderedSetWithArray:
sharedToneManager
toneWithIdentifierIsValid:
guidedAccessDefaultToneIdentifierForTimeRestrictionEvents
setWithArray:
_setVoiceArray:forKey:
_retrieveVoices:
currentLanguageCode
availableVoices
isDefault
allValues
_removeSpeakingRatePreferenceForLanguage:
_voiceOverRotorItemEnabled:
setWithCapacity:
_localeChange:
replaceObjectAtIndex:withObject:
setVoiceOverRotorItems:
setZoomShouldShowSlug:
setZoomScale:
setZoomInStandby:
_anyUserPreferredLangaugeIsRTL
touchAccommodationsAreConfigured
_updateTouchAccommodationsTripleClickSetting
gizmoGetWatchFaceAutoSpeakPreferences
observeValueForKeyPath:ofObject:change:context:
preferenceHasExistingValue:
clearExistingValueForPreference:
setAssistiveTouchAlwaysShowMenuEnabled:
setAssistiveTouchOpenMenuSwaggleEnabled:
setAssistiveTouchSpeed:
setAssistiveTouchCustomGestures:
setAssistiveTouchRecentGestures:
setAssistiveTouchSavedGestures:
setAssistiveTouchPreferredPointPicker:
setAssistiveTouchScannerSpeechIsInterruptedByScanning:
setAssistiveTouchScannerCursorHighVisibilityEnabled:
setAssistiveTouchScanningMode:
setAssistiveTouchScannerPointPickerDefaultsToRescan:
setAssistiveTouchGroupElementsEnabled:
setAssistiveTouchScannerCompactMenuEnabled:
setAssistiveTouchScannerMenuLabelsEnabled:
setAssistiveTouchAxisSweepSpeed:
setAssistiveTouchActionRepeatInterval:
setAssistiveTouchActionRepeatEnabled:
setAssistiveTouchDelayAfterInput:
setAssistiveTouchDelayAfterInputEnabled:
setAssistiveTouchInputHoldDuration:
setAssistiveTouchInputHoldEnabled:
setAssistiveTouchLongPressDuration:
setAssistiveTouchLongPressEnabled:
setAssistiveTouchInputCoalescingDuration:
setAssistiveTouchInputCoalescingEnabled:
setAssistiveTouchStepInterval:
setAssistiveTouchScanTimeoutEnabled:
setAssistiveTouchScanTimeout:
setAssistiveTouchScanCycles:
setAssistiveTouchScannerSoundEnabled:
setAssistiveTouchScannerSpeechEnabled:
setAssistiveTouchScannerSpeechRate:
setAssistiveTouchSwitches:
setAssistiveTouchCursorColor:
setAssistiveTouchHeadMovementSensitivity:
setAssistiveTouchSwitchUsageConfirmed:
setAssistiveTouchScannerAddedTripleClickAutomatically:
setAssistiveTouchScannerPrefersCompact:forLanguage:
assistiveTouchScannerPrefersCompact:
setAssistiveTouchOrbAction:
assistiveTouchCustomizationEnabled
setSwitchControlLaunchRecipeUUID:
setSwitchControlTopLevelMenuItems:
switchControlHasEmptyTopLevelMenu
setSwitchControlShouldUseShortFirstPage:
setSwitchControlGesturesMenuItems:
setSwitchControlDeviceMenuItems:
setSwitchControlSettingsMenuItems:
setSwitchControlScanningStyle:
setSwitchControlDwellTime:
setSwitchControlTapBehavior:
setSwitchControlAutoTapTimeout:
setSwitchControlShouldAlwaysActivateKeyboardKeys:
setSwitchControlIsEnabledAsSlave:
setSwitchControlScanAfterTapLocation:
_switchControlClearMenuItemPreferences
_switchControlClearMenuItemMigrationTracking
setZoomPreferencesWereInitialized:
setZoomWindowFrame:
setZoomPanOffset:
setZoomSlugNormalizedPosition:
setZoomCurrentLensEffect:
setZoomCurrentLensMode:
setZoomShouldFollowFocus:
setZoomPeekZoomEnabled:
setZoomPeekZoomEverEnabled:
setZoomAlwaysUseWindowedZoomForTyping:
setZoomPreferredCurrentLensMode:
setZoomPreferredMaximumZoomScale:
setZoomPreferredLensModes:
setZoomIdleSlugOpacity:
setZoomShouldAllowFullscreenAutopanning:
zoomUserHadLegacyZoomEnabled:wasZoomedIn:withScale:
setZoomDebugDisableZoomLensScaleTransform:
setZoomDebugShowExternalFocusRect:
setGuidedAccessAXFeaturesEnabled:
setGuidedAccessAllowsUnlockWithTouchID:
setGuidedAccessToneIdentifierForTimeRestrictionEvents:
setGuidedAccessShouldSpeakForTimeRestrictionEvents:
setGaxInternalSettingsUserAppProfile:
setGaxInternalSettingsUserGlobalProfile:
setGaxInternalSettingsSavedAccessibilityFeatures:
setGaxInternalSettingsSavedAccessibilityTripleClickOptions:
setGaxInternalSettingsUserConfiguredAppIDs:
setGaxInternalSettingsActiveAppOrientation:
setGaxInternalSettingsActiveAppID:
setGaxInternalSettingsTimeRestrictionHasExpired:
setGaxInternalSettingsIsActiveAppSelfLocked:
setGaxInternalSettingsSystemDidRestartDueToLowBattery:
setGaxInternalSettingsDeviceID:
setGaxInternalSettingsProductBuildVersion:
setGaxInternalSettingsLastActivationDate:
setGaxInternalSettingsLastPasscodeSetDate:
setAssistiveTouchCameraSwitchPreviewEnabled:
setAssistiveTouchHeadlessModeEnabled:
setValidateSecondPartyApps:
setIncludeBacktraceInLogs:
setIgnoreAXAsserts:
setIgnoreAXServerEntitlements:
setLogAXNotificationPosting:
setInternalLoggingColorTheme:
setEnableVoiceOverCaptions:
setTestingExtantVoices:
setExtantVoices:
setCurrentVoices:
setVoiceOverKeyboardModifierChoice:
setVoiceOverHearingAidRoutingEnabled:
setSkipHearingAidMFiAuth:
setEnableHearingAidReporter:
setGuidedAccessDisallowDirectInactiveToActiveTransition:
setGuidedAccessOverrideTimeRestrictionDuration:
setSpeakCorrectionsEnabled:
setSpeakIncomingNotifications:
setLetterFeedbackEnabled:
setPhoneticFeedbackEnabled:
setCharacterFeedbackDelayDuration:
setQuickTypeWordFeedbackEnabled:
setWordFeedbackEnabled:
setQuickSpeakVolume:
setQuickSpeakHighlightText:
setQuickSpeakUnderlineSentence:
setQuickSpeakSentenceHighlightOption:
setQuickSpeakHighlightOption:
setSpeechVoiceIdentifier:forLanguage:source:
selectedSpeechVoiceIdentifiers
_clearWhitetailMigrationSettings
_voiceOverDefaultDialect
_switchControlScannerDefaultDialect
_switchControlPrefersCompact
_switchControlAltVoices
_voiceOverAlternativeVoiceIdentifiers
_voiceOverPrefersCompactByLanguage
_quickSpeakPrefersCompact
_quickSpeakAltVoices
_quickSpeakSpeakingRateLanguages
setQuickSpeakNubbitNormalizedPosition:
setCustomPronunciationSubstitutions:
setVoiceOverTouchBraillePanningAutoTurnsReadingContent:
setVoiceOverTouchBrailleDisplayInputMode:
setVoiceOverTouchBrailleDisplayOutputMode:
setVoiceOverTouchBrailleGesturesInputMode:
setVoiceOverTouchSingleLetterQuickNavEnabled:
voiceOverTouchSingleLetterQuickNavEnabled
setVoiceOverLargeCursorEnabled:
setVoiceOverHelpMode:
setVoiceOverNavigateImagesOption:
setVoiceOverPhoneticsFeedback:
setVoiceOverHardwareTypingFeedback:
setVoiceOverSoftwareTypingFeedback:
setVoiceOverBrailleGesturesTypingFeedback:
setVoiceOverActivationWorkaround:
voiceOverHandwritingEnabled
voiceOverBrailleGesturesEnabled
setVoiceOverHintsEnabled:
setVoiceOverAudioDuckingEnabled:
setVoiceOverPitchChangeEnabled:
setVoiceOverSoundEffectsEnabled:
setVoiceOverVerbosityEmojiSuffixEnabled:
setVoiceOverSpeakingRateInRotorEnabled:
setVoiceOverSpeakNotificationsEnabled:
setVoiceOverBrailleTableIdentifier:
setVoiceOverAlwaysUseNemethCodeForMathEnabled:
setVoiceOverHandwritingWasNativeAutocorrectEnabled:
setVoiceOverBrailleGradeTwoAutoTranslateEnabled:
setVoiceOverShowSoftwareKeyboardWithBraille:
addRotorOptionsForLoginSession
configureZoomForLoginSession
clearVoicePrefersCompactSettings
setVoiceOverAlternativeVoiceIdentifier:forLanguage:
_voiceOverTouchSpeakingRateLanguages
setVoiceOverSpeakingRate:forLanguage:
setVoiceOverShouldOutputToHearingAid:
setVoiceOverTouchBrailleGesturesShouldUseLockedConfiguration:
setVoiceOverTouchBrailleGesturesLockedOrientation:
setVoiceOverTouchBrailleGesturesLockedTypingMode:
setVoiceOverTouchBrailleGesturesDidPlayCalibrationHint:
setVoiceOverBrailleAlertDisplayDuration:
setVoiceOverDoubleTapInterval:
setVoiceOverNavigationDirectionMode:
setVoiceOverTapticTimeMode:
setVoiceOverTapticTimeEncoding:
setVoiceOverTouchBrailleShouldReverseDots:
setPairedHearingAids:
setIndependentHearingAidSettings:
setAllowHearingAidControlOnLockScreen:
setShouldStreamToLeftAid:
setShouldStreamToRightAid:
setTouchAccommodationsEnabled:
setTouchAccommodationsTripleClickConfirmed:
setTouchAccommodationsUsageConfirmed:
setTouchAccommodationsHoldDurationEnabled:
setTouchAccommodationsHoldDuration:
setTouchAccommodationsIgnoreRepeatEnabled:
setTouchAccommodationsIgnoreRepeatDuration:
setTouchAccommodationsTapActivationMethod:
setTouchAccommodationsTapActivationTimeout:
setStickyKeysEnabled:
setStickyKeysShiftToggleEnabled:
setStickyKeysBeepEnabled:
setMagnifierEnabled:
setMagnifierShouldAdjustFiltersForAmbientLight:
setMagnifierZoomLevel:
setMagnifierFilterSetIdentifier:
setMagnifierFilterInverted:
setMagnifierContrast:
setMagnifierBrightness:
gizmoApplicationAccessibilityEnabled
setGizmoApplicationAccessibilityEnabled:
gizmoSetAutoSpeakEnabledForComplication:slot:face:toggle:
gizmoGetAutoSpeakEnabledForComplication:slot:face:
setVoiceOverSpeakSecondsEncoding:
setAlexLocalAssetURL:
setLocalizationQACaptionShowFilePath:
setLocalizationQACaptionShowUSString:
setLocalizationQACaptionShowLocalizedString:
localizationQACaptionMode
setLocalizationQACaptionMode:
setShouldFlashForAlertInSilentMode:
lastMagnifierResetCount
setLastMagnifierResetCount:
lastHearingAidHandoffTimeResetCount
setlastHearingAidHandoffTimeResetCount:
lastHearingAidControlPanelTimeResetCount
setlastHearingAidControlPanelTimeResetCount:
lastBrailleScreenInputTimeResetCount
setLastBrailleScreenInputTimeResetCount:
lastTapticTimeResetCount
setLastTapticTimeResetCount:
lastGuidedAccessTimeResetCount
setlastGuidedAccessTimeResetCount:
lastGuidedAccessTimeLimitResetCount
setlastGuidedAccessTimeLimitResetCount:
lastPlatformSwitchTimeResetCount
setlastPlatformSwitchTimeResetCount:
lastCharacterVoiceTimeResetCount
setLastCharacterVoiceTimeResetCount:
lastAssistiveTouchTimeResetCount
setLastAssistiveTouchTimeResetCount:
assistiveTouchUsageCount
setAssistiveTouchUsageCount:
magnifierUsageCount
setMagnifierUsageCount:
tapticTimeUsageCount
setTapticTimeUsageCount:
switchControlPlatformSwitchedCount
setSwitchControlPlatformSwitchedCount:
hearingAidHandOffCount
setHearingAidHandOffCount:
hearingAidControlPanelCount
setHearingAidControlPanelCount:
characterVoicesUsageCount
setCharacterVoicesUsageCount:
guidedAccessTimeLimitsUsageCount
setGuidedAccessTimeLimitsUsageCount:
brokenHomeButtonCount
setBrokenHomeButtonCount:
voiceOverBSIUsageCount
setVoiceOverBSIUsageCount:
setGuidedAccessUsageCount:
writeAXLogsToFile
setWriteAXLogsToFile:
reduceWhitePointLevel
setReduceWhitePointLevel:
setLastPlatformSwitchTimeResetCount:
setLastGuidedAccessTimeLimitResetCount:
setLastGuidedAccessTimeResetCount:
setLastHearingAidControlPanelTimeResetCount:
setLastHearingAidHandoffTimeResetCount:
setRegisteredNotifications:
synchronizeDomains
setSynchronizeDomains:
setUpdateBlocks:
_synchronizeDomainsLock
_migratedSwitchControlMenuItemsPreferenceKeys
_unarchivedVoiceCache
_writeAXLogsToFile
_reduceWhitePointLevel
_lastPlatformSwitchTimeResetCount
_lastGuidedAccessTimeLimitResetCount
_lastGuidedAccessTimeResetCount
_lastHearingAidControlPanelTimeResetCount
_lastHearingAidHandoffTimeResetCount
_registeredNotifications
_synchronizeDomains
_updateBlocks
accessibilityEnabled
applicationAccessibilityEnabled
setApplicationAccessibilityEnabled:
tripleClickOptions
setTripleClickOptions:
assistiveTouchEnabled
setAssistiveTouchEnabled:
assistiveTouchHardwareEnabled
setAssistiveTouchHardwareEnabled:
assistiveTouchUIEnabled
setAssistiveTouchUIEnabled:
assistiveTouchAlwaysShowMenu
setAssistiveTouchAlwaysShowMenu:
switchControlEnabled
setSwitchControlEnabled:
inspectorEnabled
setInspectorEnabled:
automationEnabled
setAutomationEnabled:
automationLocalizedStringLookupInfoEnabled
setAutomationLocalizedStringLookupInfoEnabled:
automationPreferredLocalization
automationFauxCollectionViewCellsEnabled
setAutomationFauxCollectionViewCellsEnabled:
automationHitpointWarpingEnabled
setAutomationHitpointWarpingEnabled:
siriSemanticContextEnabled
setSiriSemanticContextEnabled:
voiceOverEnabled
setVoiceOverEnabled:
voiceOverSpeakingRate
setVoiceOverSpeakingRate:
voiceOverVolume
setVoiceOverVolume:
voiceOverUsageConfirmed
setVoiceOverUsageConfirmed:
voiceOverEnabledThroughAccessory
setVoiceOverEnabledThroughAccessory:
voiceOverScreenCurtainEnabled
setVoiceOverScreenCurtainEnabled:
voiceOverUIEnabled
setVoiceOverUIEnabled:
voiceOverLanguageRotorItems
setVoiceOverLanguageRotorItems:
voiceOverLangaugeRotorItemsExist
voiceOverTypingMode
setVoiceOverTypingMode:
voiceOverBrailleBluetoothDisplay
setVoiceOverBrailleBluetoothDisplay:
voiceOverTouchBrailleTableIdentifier
setVoiceOverTouchBrailleTableIdentifier:
voiceOverBrailleVirtualStatusAlignment
setVoiceOverBrailleVirtualStatusAlignment:
voiceOverBrailleMasterStatusCellIndex
setVoiceOverBrailleMasterStatusCellIndex:
voiceOverBrailleContractionMode
setVoiceOverBrailleContractionMode:
voiceOverBrailleEightDotMode
setVoiceOverBrailleEightDotMode:
zoomEnabled
setZoomEnabled:
zoomToggledByPreferenceSwitch
setZoomToggledByPreferenceSwitch:
zoomToggledByVoiceOver
setZoomToggledByVoiceOver:
zoomSmoothScalingEnabled
setZoomSmoothScalingEnabled:
enhanceTextLegibilityEnabled
setEnhanceTextLegibilityEnabled:
enhanceTextTrackingEnabled
setEnhanceTextTrackingEnabled:
enhanceBackgroundContrastEnabled
setEnhanceBackgroundContrastEnabled:
reduceMotionEnabled
setReduceMotionEnabled:
increaseButtonLegibilityEnabled
setIncreaseButtonLegibilityEnabled:
buttonShapesEnabled
setButtonShapesEnabled:
reduceWhitePointEnabled
setReduceWhitePointEnabled:
highContrastFocusIndicatorsEnabled
setHighContrastFocusIndicatorsEnabled:
rangeOfString:options:
axContainsString:options:
axContainsString:
sortDescriptorWithKey:ascending:selector:
sortUsingDescriptors:
setDispatchQueue:
setProcessBlock:
setCancelBlock:
setCancelled:
setPending:
dispatchQueue
cancelBlock
processBlock
_pending
_cancelled
_dispatchQueue
_processBlock
axSafelyAddObject:
axUniqueArrayWithPredicate:
axIsEqualToOrderedArray:withPredicate:
axMapObjectsUsingBlock:
axFilterObjectsUsingBlock:
axSafeObjectAtIndex:
axArrayWithPossiblyNilArrays:
axArrayByIgnoringNilElementsWithCount:
axSafelyAddObjectsFromArray:
_updateIs24HourTime
_localeDidChange:
setQueueCallback:
setDateOverride:
localeOverride
_is24HourTime
currentCalendar
dateOverride
components:fromDate:
_dateComponentsForClockTime
_numberOfTapsForHourNumber:
minute
_clearQueue
_numberOfTapHoursForClockTime
_enqueueHours:encoding:
_numberOfTapMinutesForClockTime
_enqueueMinutes:encoding:
_handleTestingQueueCallback
_dequeueSound
_convertSoundToStringName:
setSound:
setDelay:
queueCallback
_atomToLegacyVibePattern:
setLocaleOverride:
outputHoursAndMinutes:
outputHours:
outputMinutes:
_enqueuedSounds
_enqueuedSoundDelays
_ssIDHapticFast
_ssIDHapticSlow
_ssIDHapticMorse
_soundToPatterns
_is24Hour
_localeOverride
_dateOverride
_queueCallback
sound
delay
_sound
_delay
supportsSiri
supportsAlex
setVoiceClassesMap:
setVoiceNameMap:
isAlexAvailableForLanguage:
_siriSupportsLanguage:
supportedSiriLanguages
_siriIdentifierFromBaseIdentifier:language:quality:
voiceNameMap
voiceClassesMap
_siriBaseIdentifierFromIdentifier:
setLanguage:
setQuality:
setInUnitTestMode:
inUnitTestMode
isAlternativeVoiceIdentifier:forLanguage:
isAlternativeVoice:
alternativeVoiceIdentifiersForLangauge:
voiceForVoiceIdentifier:forLanguage:
_voiceClassesMap
_voiceNameMap
nameWithoutQuality
quality
subarrayWithRange:
intersectSet:
initializeSubsytem
_errorWithMessage:underlyingError:
subsystems
wrapError:description:
shouldIncludeBacktraceInLogs
shouldIncludeFileLineAndFunctionInLogs
shouldProcessMessageForLogs
threshold
defaultLogLevel
willLog
willLogInfo
willLogDebug
addPointsByFingerIdentifier:forces:atTime:
tapGestureForInterfaceOrientedPoint:
numberOfEvents
fingerIdentifiersAtEventIndex:
timeAtEventIndex:
pointForFingerIdentifier:atEventIndex:
forceForFingerIdentifier:atEventIndex:
arePointsDeviceRelative
updateForLandscape:
_allEvents
_arePointsDeviceRelative
addPointsFromReplayableGesture:
isLeftToRightSwipe
initForLeftToRightSwipe:
setIsLeftToRightSwipe:
isLandscape
setIsLandscape:
_isLeftToRightSwipe
_isLandscape
coalescedAttributes
attributeValueForKey:
unsignedLongValue
requestLabelForProactiveCandidateWithSlotID:completionHandler:
replaceString:
removeAttributes:
_createIndexesWithSize:
objectForIndex:
_initWithIndexMap:
_initAndDeepCopyIndexMap:
numberWithUnsignedLong:
addIndex:
initWithObjects:andIndexes:count:
deepCopyWithZone:
removeObjectForIndex:
indexes
addObjectsFromIndexMap:
_map
setUpdateVisualsSequenceDidBeginHandler:
setUpdateVisualsSequenceDidFinishHandler:
setUpdateVisualsSequenceInProgressHandler:
timer
setTimer:
updateVisualsSequenceDidBeginHandler
_timerDidFire:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
updateVisualsSequenceInProgressHandler
updateVisualsSequenceDidFinishHandler
notifyUpdateElementVisualsEventDidOccur
setThreshold:
progressInterval
setProgressInterval:
lastProgressTime
setLastProgressTime:
_threshold
_progressInterval
_updateVisualsSequenceDidBeginHandler
_updateVisualsSequenceDidFinishHandler
_updateVisualsSequenceInProgressHandler
_timer
_lastProgressTime
supportsLongPress
_switchWithAction:excludedUUIDs:needsToSupportLongPress:
_hasSwitchWithUUID:
_switchWithAnyActionExcludingUUIDs:needsToSupportLongPress:
updateRecipe:
_updateWithoutSavingExistingRecipe:allRecipes:
_assignDefaultTitleIfNeededToRecipe:
_createAndSaveRecipeForInterfaceOrientedPoint:forHold:
saveRecipe:
validateAndUpdateRecipeIfNeeded:
isNewRecipe:
createAndSaveRecipeForInterfaceOrientedPoint:
createAndSaveRecipeForInterfaceOrientedHoldPoint:
switchForUUID:
decodeDoubleForKey:
directionPadUp
directionPadDown
directionPadLeft
directionPadRight
faceButtonA
faceButtonB
faceButtonX
faceButtonY
shoulderButtonL1
shoulderButtonL2
shoulderButtonR1
shoulderButtonR2
leftJoystickX
leftJoystickY
rightJoystickX
rightJoystickY
encodeDouble:forKey:
rightJoystickActive
leftJoystickActive
_directionPadUp
_directionPadDown
_directionPadLeft
_directionPadRight
_faceButtonA
_faceButtonB
_faceButtonX
_faceButtonY
_shoulderButtonR1
_shoulderButtonR2
_shoulderButtonL1
_shoulderButtonL2
_leftJoystickX
_leftJoystickY
_rightJoystickX
_rightJoystickY
numberWithLong:
eventSenderIdentifier
dataWithSender:
wasPostedByAccessibility
_storage
_initAndManageWithSettings:
ansiColorSeqForAXLogColor:
coloredString:withColor:
setManagedBySettings:
_updateSettingsFromUserPrefs
defaultLightColorsTheme
setColorTheme:
setPreferDarkColors:
defaultDarkColorsTheme
isManagedBySettings
preferDarkColors
colorTheme
colorizeStringIfEnabled:withColor:
whiteOrBlackString:
greyString:
_managedBySettings
_preferDarkColors
_colorTheme
setReplayBlock:
setCompletionBlock:
setAttemptsRemaining:
setMaxAttempts:
setInterval:
setAsync:
setQueue:
queue
setUnderlyingError:
setUnderlyingResult:
_dispatchAsynchronously
_dispatchSynchronously
replayBlock
interval
sleepForTimeInterval:
underlyingError
_genericFailError
completionBlock
underlyingResult
replayBlock:name:attempts:interval:async:queue:completion:
dispatch
maxAttempts
attemptsRemaining
didSucceed
setDidSucceed:
_didSucceed
_replayBlock
_completionBlock
_interval
_maxAttempts
_attemptsRemaining
_underlyingError
_underlyingResult
replayer
replayWithName:attempts:interval:async:queue:replayBlock:completion:
setSearchTimeout:
setSearchCompletion:
initWithDomain:type:name:port:
setService:
publish
searchTimeout
shouldAcceptConnection
acceptConnection:
searchCompletion
resetConnection
receivedData:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
isVisible
_resolveTimer
_ipv4socket
_ipv6socket
_isVisible
_searchTimeout
_searchCompletion
initWithHIDTapIdentifier:HIDEventTapPriority:systemEventTapIdentifier:systemEventTapPriority:
setHIDEventTapIdentifier:
setHIDEventTapPriority:
setHIDEventFilterMask:
setSystemEventTapIdentifier:
setSystemEventTapPriority:
setHidActualEventTapEnabledReasons:
setSystemActualEventTapEnabledReasons:
_runHIDEventReceiveThread
initWithTarget:selector:object:
start
setHIDEventHandler:
setSystemEventHandler:
setHIDEventReceiveThread:
hidActualEventTapEnabledReasons
HIDEventTapIdentifier
isHandlingHIDEvents
setHandlingHIDEvents:
_installHIDEventFilter
_uninstallHIDEventFilter
HIDEventTapPriority
systemActualEventTapEnabledReasons
systemEventTapIdentifier
isHandlingSystemEvents
setHandlingSystemEvents:
_installSystemEventFilter
_uninstallSystemEventFilter
systemEventTapPriority
addPort:forMode:
distantFuture
runMode:beforeDate:
HIDEventFilterMask
shouldNotifyUserEventOccurred
backgroundAccessQueue
HIDEventHandler
systemEventHandler
hidEventTapEnabledReasons
beginHandlingHIDEventsForReason:
endHandlingHIDEventsForReason:
raiseHIDEventTapPriorityToMaximum
restoreHIDEventTapPriorityToDefault
systemEventTapEnabledReasons
beginHandlingSystemEventsForReason:
endHandlingSystemEventsForReason:
raiseSystemEventTapPriorityToMaximum
restoreSystemEventTapPriorityToDefault
setShouldNotifyUserEventOccurred:
HIDEventReceiveThread
ignoreAllSystemEvents
setIgnoreAllSystemEvents:
_shouldRunHIDReceiveThreadRunloop
_shouldNotifyUserEventOccurred
_handlingHIDEvents
_ignoreAllSystemEvents
_handlingSystemEvents
_HIDEventTapPriority
_systemEventTapPriority
_HIDEventTapIdentifier
_HIDEventReceiveThread
_HIDEventHandler
_HIDEventFilterMask
_systemEventTapIdentifier
_systemEventHandler
_hidActualEventTapEnabledReasons
_systemActualEventTapEnabledReasons
ax_prettyDescription
valueWithNonretainedObject:
_ax_appendPrettyDescriptionToString:indentationString:visitedCollections:
deleteCharactersInRange:
initWithString:
setOutputDataQueue:
setInputBuffer:
setOutputBuffer:
inputStream
removeFromRunLoop:forMode:
close
setInputStream:
outputStream
setOutputStream:
setCurrentMessageInFlight:
addresses
setupStream:
resolveWithTimeout:
securityTrustChainForStream:
setProperty:forKey:
setSecuritySettingsForStream:
open
streamStatus
outputDataQueue
finishedSending:
nextMessageInQueue
enqueueData:
didCommunicate
currentMessageInFlight
outputBuffer
sendDataChunk
outputStreamReady
hasSpaceAvailable
write:maxLength:
replaceBytesInRange:withBytes:length:
messageWasAcked:
getInputStream:outputStream:
isValidJSONObject:
clearMessageQueue
shouldTrustStream:
read:maxLength:
initWithData:encoding:
streamError
stream:handleEvent:
sendObject:
inputBuffer
_currentPacket
_service
_outputDataQueue
_inputStream
_outputStream
_inputBuffer
_currentMessageInFlight
_outputBuffer
_initWithLabel:appendUUIDToLabel:specialBehaviors:
initWithLabel:appendUUIDToLabel:
setSpecialBehaviors:
setThreadLocalStorageKey:
setConcurrentQueue:
behavesAsMainQueue
concurrentQueue
specialBehaviors
_performBlock:withDispatchFunction:synchronously:accessQueueContext:
_accessQueueContextInCurrentExecutionThread
behavesWithoutErrorReporting
threadLocalStorageKey
canReadInCurrentExecutionThread
_threadLocalStorageKey
_concurrentQueue
_specialBehaviors
numberWithUnsignedShort:
headSwitch
productName
manufacturerName
remoteSwitchIdentifier
remoteDeviceName
remoteDeviceIdentifier
unsignedShortValue
initWithAction:name:source:type:
hasLongPressAction
setProductName:
setManufacturerName:
setHeadSwitch:
setRemoteSwitchIdentifier:
setRemoteDeviceName:
setRemoteDeviceIdentifier:
_source
_productName
_manufacturerName
_buttonNumber
_headSwitch
_remoteSwitchIdentifier
_remoteDeviceName
_remoteDeviceIdentifier
_listenerAddress
_selectorKeys
_linguisticStringForCharacter:language:linguisticType:andVoiceIdentifier:
setIPASpeechPhonemes:
phonemeStringForCharacter:forLanguage:andVoiceIdentifier:
phoneticStringForCharacter:forLanguage:andVoiceIdentifier:
phDictionaries
setPhDictionaries:
_phDictionaries
_path:bundleID:forRescource:
loadImageWithIdentifier:orPath:principalClass:error:
pathWithComponents:
loadResource:principalClass:error:
AXWrapperPointer
AXSideTableStorage
AXEventHandInfoRepresentation
AXEventRepresentationDescription
NSObject
NSSecureCoding
NSCoding
NSCopying
AXIPCMessage
__UIAccessibilityValidateBlockSignatureSentinel
UIAccessibilitySafeCategory_Private
UIAccessibilitySafeCategory
AXDisplayLinkManagerTargetAction
AXDisplayLinkManager
AXDictionaryExtensions
AXAccessQueueTimer
AXEventTapPair
AXEventTapManager
AXIDCManager
NSNetServiceBrowserDelegate
AXIDCRemoteControllerDelegate
AXSpringBoardActionHandlerHolder
AXSpringBoardServer
AXSystemAppServer
AXSpringBoardServer_Private
AXRedirectedEventDetector
UnitTesting
AXFirstResponderValueChangeManager
AXAssertionWorkItem
AXServer
AXEventListenerContainer
AXBackBoardServerInstance
AXBackBoardServerInstanceDelegate
AXBackBoardServer
AXIDCPacket
AXAssertion
_AXAssertionServer
AXValueChangeUtilities
AXUserEventTimer
AXIPCServerClientRegistration
AXIPCServerMessageHandlerContext
AXIPCServer
AXPostConnectionTask
AXIPCOutstandingAsyncRequest
AXIPCClient
AXSubsystemGuidedAccess
AXSubsystemGAXTimeRestrictions
AXSubsystemGAXIntegrity
AXSubsystemGAXAppLaunching
AXSubsystemAXValidations
AXSubsystemUnitTesting
AXSubsystemEventTap
AXSubsystemUserInterfaceService
AXSubsystemVOTHandwriting
AXSubsystemBBServer
AXSubsystemSBServer
AXSubsystemIPC
AXSubsystemAppCompareGeometry
AXSubsystemSpeechAssetDownloader
AXSubsystemZoom
AXSubsystemVOTSpeech
AXSubsystemAVSpeechSynthesis
AXSubsystemAXOrator
AXSubsystemElementTraversal
AXSubsystemBaseHitTest
AXSubsystemScrollToVisible
AXSubsystemVisibleFrame
AXSubsystemOpaqueElements
AXSubsystemVOTiCloud
AXSubsystemVOTAudio
AXSubsystemBrailleGestures
AXSubsystemVisualAlerts
AXSubsystemVOTVNotifications
AXSubsystemVOTVFocus
AXSubsystemVOTKeyboard
AXSubsystemVOTVExplorer
AXSubsystemVOTElement
AXSubsystemAudioRouting
AXSubsystemLocCaptionPanel
AXSubsystemSpeakSelection
AXSubsystemSpeakTyping
AXSubsystemContextKit
AXSubsystemSCElementNav
AXSubsystemPronunciations
AXSubsystemSCPauseResume
AXSubsystemSwitchControl
AXSubsystemBrailleHardware
AXSubsystemSwitchControlHardware
AXSubsystemAccessibilityBundleLoading
AXSubsystemAssistiveTouch
AXSubsystemUIAutomation
AXSubsystemVoiceOverIAP
AXSubsystemVoiceOverLifeCycle
AXSubsystemMagnifier
AXSubsystemMagnifierBright
AXSubsystemVoiceOver
AXSubsystemAXNotifications
AXSubsystemAXVectorKit
AXSubsystemAXCharacterVoices
AXSubsystemAXAggregateLogging
AXSubsystemMagicTapToggle
AXSubsystemBrokenHomeButton
AXAssertionHelpers
AXVoiceOverServer
AXBinaryMonitor
AXExtensions
AXMobileConfigurationInterface
AXValidationManager
AXSimpleMessage
AXIDCMessage
AXEventPathInfoRepresentation
AXEventPathInfoRepresentationExtension
AXEventAccelerometerInfoRepresentation
AXTrampoline
AXTrmpoline
AXPathWrapper
AXAudioHardwareManager
AXTestingOutputPort
AXTestingRouteDescription
Private
AXOrator
AVSpeechSynthesizerDelegate
AXAppRepresentation
AXQueue
AXLangMap
AXSwitchRegistrar
AXSwitchRecipeMapping
AXSwitchRecipe
AXDialectMap
AXLanguageManager
AXLanguageTag
AXLanguageTaggedContent
AXWordDescriptionManager
AXPriv
AXWordDescriptionManager_ja
AXWordDescriptionManager_zh
AXThreadTimerTask
AXThreadTimer
AXEventKeyInfoRepresentation
AXEventRepresentation
AXSettings
AccessibilitySupportFacade
AXUtilsExtensions
AXDispatchTimer
AXTapticTimeManager
AXTapticSoundTestingContainer
AXAlternativeSpeech
AXAlternativeSpeechSynthesisVoice
AXAlternativeVoices
AVAlexSpeechSynthesisVoice
AVSiriMaleSpeechSynthesisVoice
AVSiriFemaleSpeechSynthesisVoice
AXLoggingSubsystem
AXReplayableGesture
AXMutableReplayableGesture
AXCenterTapReplayableGesture
AXPageTurningReplayableGesture
AXIndexMap
AXUpdateElementVisualsCoalescer
AXEventGameControllerInfoRepresentation
AXEventData
AXLogColorizer
_AXReplayInstance
AXReplayer
AXIDCSlaveController
NSNetServiceDelegate
AXEventProcessor
NSFastEnumeration
AXCollectionsExtensions
AXIDCRemoteController
NSStreamDelegate
AXAccessQueue
AXSwitch
AXSettingsObjectDestructionHelper
AXCharacterSoundMap
AXResourceLoader
@24@0:8@16
@16@0:8
v24@0:8@16
B24@0:8@16
q24@0:8@16
Q24@0:8@16
v36@0:8@16@24i32
v32@0:8@16@24
v28@0:8B16@20
v32@0:8q16@24
v32@0:8Q16@24
B16@0:8
@24@0:8^{?=iSSffffffCCC[0{?=CCCff{CGPoint=dd}I^v}]}16
@"NSString"16@0:8
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
v24@0:8^{?=iSSffffffCCC[0{?=CCCff{CGPoint=dd}I^v}]}16
v16@0:8
I16@0:8
v20@0:8I16
S16@0:8
v20@0:8S16
C16@0:8
v20@0:8C16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
@"NSArray"
{CGPoint="x"d"y"d}
@20@0:8i16
@28@0:8i16@20
@36@0:8i16@20@28
i16@0:8
v20@0:8i16
{?=[8I]}16@0:8
v48@0:8{?=[8I]}16
@"NSDictionary"
{?="val"[8I]}
@40@0:8@16#24r*32
^v24@0:8@16
i24@0:8@16
I24@0:8@16
f24@0:8@16
d24@0:8@16
{_NSRange=QQ}24@0:8@16
q32@0:8@16#24
v40@0:8@?16@24#32
@32@0:8@16:24
:16@0:8
v24@0:8:16
v24@0:8Q16
d16@0:8
v32@0:8@16:24
v20@0:8B16
@"CADisplayLink"
@"NSMutableSet"
@32@0:8q16@24
v32@0:8d16@?24
v32@0:8d16@?<v@?>24
v32@0:8@?16:24
v36@0:8d16@?24B32
@"NSString"
@"AXAccessQueue"
@"NSObject<OS_dispatch_source>"
@?16@0:8
v24@0:8@?16
^{__IOHIDEventSystemClient=}16@0:8
v24@0:8^{__IOHIDEventSystemClient=}16
^{__IOHIDEventSystemClient=}
v24@0:8^v16
v32@0:8@16Q24
v36@0:8@16B24Q28
v52@0:8@16@24B32@36Q44
B36@0:8^{__IOHIDEvent=}16I24@28
B24@0:8^{?=ii{CGPoint=dd}{CGPoint=dd}IQ^viiI[0C]}16
v28@0:8@16i24
v60@0:8^v16@24^v32^{__IOHIDEvent=}40@48B56
v44@0:8@16B24B28B32B36B40
@36@0:8@?16@24i32
@56@0:8@?16@24i32B36B40B44B48B52
@64@0:8@?16@24i32B36B40B44B48B52@?56
@40@0:8@?16@24@?32
@"NSMutableArray"
@"NSRecursiveLock"
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@16@24B32
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
v32@0:8@"AXIDCRemoteController"16@"AXIDCMessage"24
v24@0:8@"AXIDCRemoteController"16
v32@0:8@"AXIDCRemoteController"16@"NSError"24
@"<AXIDCManagerSecurityDelegate>"16@0:8
v24@0:8@"<AXIDCManagerSecurityDelegate>"16
#32@0:8#16#24
@40@0:8@16#24#32
v40@0:8@16@24@?32
q16@0:8
v24@0:8q16
@"<AXIDCControllerBrowserDelegateProtocol>"
@"<AXIDCManagerSecurityDelegate>"
@"AXIDCSlaveController"
@"NSNetServiceBrowser"
v24@0:8@?<v@?i>16
v24@0:8@?<v@?q>16
@"<AXSystemAppServer>"16@0:8
v24@0:8d16
v32@0:8q16@?24
v40@0:8q16@?24@32
v32@0:8@?16@?24
v28@0:8Q16B24
B24@0:8^B16
v32@0:8@16@?24
B20@0:8B16
B24@0:8Q16
v32@0:8Q16@?24
v28@0:8B16@?20
@"NSMutableDictionary"
d32@0:8Q16Q24
@"NSObject<OS_dispatch_queue>"
@"AXDispatchTimer"
@72@0:8@16@24{_NSRange=QQ}32B48B52Q56d64
@88@0:8@16@24{_NSRange=QQ}32{_NSRange=QQ}48B64B68Q72d80
@184@0:8@16@24B32{_NSRange=QQ}36{_NSRange=QQ}52B68Q72^Q80^B88^B96B104B108Q112^B120d128^B136^@144^@152^B160^{_NSRange=QQ}168^B176
@36@0:8@16@24B32
B32@0:8@16^@24
@"AXIPCServer"
@"AXIPCClient"
@"<AXBackBoardServerInstanceDelegate>"16@0:8
@"<AXBackBoardServerInstance>"16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16I48I52
I20@0:8I16
I32@0:8{CGPoint=dd}16
v44@0:8@16B24@28@36
v44@0:8@"AXEventRepresentation"16B24@"NSString"28@"NSArray"36
v24@0:8B16i20
v40@0:8@16@24@32
v28@0:8@16B24
{CGRect={CGPoint=dd}{CGSize=dd}}52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16I48
v52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16I48
{CGRect={CGPoint=dd}{CGSize=dd}}20@0:8I16
@32@0:8@16^@24
v36@0:8B16@20@?28
{?=si}24@0:8@16
@24@0:8{?=si}16
@"NSMutableData"
@32@0:8@16@24
q32@0:8@16@24
@24@0:8@?16
@36@0:8@16:24B32
@28@0:8@16B24
@28@0:8I16^{__CFRunLoopSource=}20
v24@0:8^{__CFRunLoopSource=}16
B24@0:8^@16
v28@0:8@?16i24
v36@0:8i16@20[1{__va_list_tag=II^v^v}]28
v36@0:8@16:24i32
v40@0:8@16:24B32i36
v44@0:8@16:24i32@36
v48@0:8@16:24B32i36@40
B60@0:8I16{?=[8I]}20@52
v76@0:8@16{?=[2I]}24{?=[8I]}32I64@?68
@48@0:8{?=[8I]}16
^{__CFRunLoopSource=}
@40@0:8@?16d24@32
@"AXAccessQueueTimer"
@20@0:8I16
@36@0:8I16@20@?28
^{__CFRunLoopSource=}16@0:8
B40@0:8@16^@24@?32
B36@0:8@16I24^@28
B32@0:8@16@?24
B40@0:8@16@24@?32
B36@0:8@16i24^@28
^{__CFMachPort=}16@0:8
v24@0:8^{__CFMachPort=}16
f16@0:8
v20@0:8f16
^{__CFMachPort=}
@"NSLock"
B20@0:8i16
B28@0:8i16@20
v32@0:8@?16@24
v40@0:8@?16@24^@32
@40@0:8@16#24@32
v40@0:8@?16@?24@?32
v48@0:8@?16@?24@?32@?40
v48@0:8@?16d24@32@40
v52@0:8@?16d24@32@40B48
v24@0:8B16B20
B32@0:8@16@24
B40@0:8@16@24@32
B40@0:8@16@24r*32
B48@0:8@16@24@32r*40
B44@0:8@16@24@32i40
B60@0:8@16@24@32i40@44@52
B56@0:8@16@24@32r*40[1{__va_list_tag=II^v^v}]48
B40@0:8@16@24B32B36
B48@0:8@16@24@32B40B44
B28@0:8@16B24
v48@0:8@16@24@32@40
@"<AXValidationReportingServices>"
@"NSError"
@32@0:8@16@?24
@24@0:8^{?=CCCff{CGPoint=dd}I^v}16
v24@0:8^{?=CCCff{CGPoint=dd}I^v}16
^v16@0:8
@32@0:8@16#24
^?24@0:8:16
v24@0:8#16
@24@0:8#16
v24@0:8^{CGPath=}16
^{CGPath=}16@0:8
^{CGPath=}
@32@0:8@16q24
v48@0:8@16@24@32q40
v40@0:8@16@24q32
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@16{_NSRange=QQ}24@40
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
B40@0:8@16d24^@32
B32@0:8d16^@24
@24@0:8Q16
q20@0:8B16
v36@0:8q16B24Q28
B28@0:8B16Q20
B32@0:8q16^@24
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"AVSpeechUtterance"
@"<AXOratorDelegate>"
@"AXLanguageTaggedContent"
@"AVSpeechSynthesizer"
@"AXLanguageTag"
{_NSRange="location"Q"length"Q}
@40@0:8@16q24@32
@48@0:8@16q24@32[1{__va_list_tag=II^v^v}]40
@60@0:8@16B24B28B32@36@44@52
@"AXDialectMap"
B24@0:8S16B20
B24@0:8I16B20
B28@0:8q16B24
B40@0:8^{NSString=#}16S24I28q32
v24@0:8^{__IOHIDEvent=}16
v24@0:8^{__IOHIDValue=}16
^{__IOHIDDevice=}16@0:8
v24@0:8^{__IOHIDDevice=}16
^{__IOHIDManager=}16@0:8
v24@0:8^{__IOHIDManager=}16
@"<AXSwitchRegistrarDelegate>"
@"AXSwitch"
^{__IOHIDDevice=}
^{__IOHIDManager=}
@"AXReplayableGesture"
@"NSUUID"
@56@0:8@16@24@32@40@48
B20@0:8S16
B20@0:8I16
@"AXLangMap"
@"NSLocale"
@"NSCharacterSet"
@20@0:8S16
@52@0:8@16{_NSRange=QQ}24@40B48
@"NSMutableOrderedSet"
@"NSLinguisticTagger"
@"NSManagedObjectContext"
@"NSPersistentStoreCoordinator"
@"NSManagedObjectModel"
^{USet=}24@0:8@16
^{USet=}16@0:8
v40@0:8d16@?24@?32
@"NSThread"
@"AXThreadTimerTask"
@72@0:8I16i20Q24{CGPoint=dd}32{CGPoint=dd}48@64
@32@0:8^{__IOHIDEvent=}16@24
@24@0:8^{__IOHIDEvent=}16
@56@0:8{CGPoint=dd}16{CGPoint=dd}32@48
@44@0:8^{__IOHIDEvent=}16@24@32I40
@24@0:8^{?=ii{CGPoint=dd}{CGPoint=dd}IQ^viiI[0C]}16
@36@0:8I16{CGPoint=dd}20
I24@0:8^{__IOHIDEvent=}16
^{__IOHIDEvent=}16@0:8
@24@0:8B16B20
@20@0:8B16
^{?=ii{CGPoint=dd}{CGPoint=dd}IQ^viiI[0C]}16@0:8
^{__GSEvent=}16@0:8
B24@0:8^{__IOHIDEvent=}16
^{__IOHIDEvent=}24@0:8^{__IOHIDEvent=}16
@"AXEventHandInfoRepresentation"
@"AXEventKeyInfoRepresentation"
@"AXEventAccelerometerInfoRepresentation"
@"AXEventGameControllerInfoRepresentation"
@"NSData"
^{__IOHIDEvent=}
@"AXEventData"
^{__CFString=}20@0:8i16
B24@0:8@?16
v48@0:8@16@24@32^v40
v40@0:8@?16:24@32
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v40@0:8^B16^B24^d32
@40@0:8@16q24^B32
v28@0:8f16@20
v44@0:8@16@24@32B40
B32@0:8@16q24
q24@0:8q16
v32@0:8Q16q24
[24I]
[10I]
@"NSDate"
@40@0:8@16@24q32
@32@0:8{CGPoint=dd}16
d24@0:8Q16
{CGPoint=dd}32@0:8@16Q24
d32@0:8@16Q24
v40@0:8@16@24d32
@40@0:8^@16^Q24Q32
^Q24@0:8^Q16
^{__CFDictionary=}
@"NSTimer"
@36@0:8q16@24B32
@36@0:8{CGPoint=dd}16B32
@24@0:8q16
@32@0:8*16q24
*16@0:8
{_AXEventDataStorage="eventSenderIdentifier"q}
{AXLogColorTheme=qqqq}16@0:8
*24@0:8q16
v48@0:8{AXLogColorTheme=qqqq}16
{AXLogColorTheme="errorColor"q"warningColor"q"infoColor"q"debugColor"q}
@68@0:8@?16@24q32d40B48@52@?60
v68@0:8@16q24d32B40@44@?52@?60
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
^{__CFSocket=}
@40@0:8@16i24@28i36
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
v32@0:8@"NSStream"16Q24
@"AXIDCPacket"
@"<AXIDCRemoteControllerDelegate>"
@"NSNetService"
@"NSInputStream"
@"NSOutputStream"
@"AXIDCMessage"
@36@0:8@16B24Q28
@36@0:8#16@24B32
v44@0:8@?16^?24B32Q36
@48@0:8q16@24^{NSString=#}32^{NSString=#}40
^{NSString=#}16@0:8
v24@0:8^{NSString=#}16
^{NSString=#}
@24@0:8^v16
@40@0:8@16@24@32
@48@0:8@16@24q32@40
@48@0:8@16@24^@32^@40
@40@0:8Q16^@24^@32
v40@0:8^@16^@24Q32
%{public}@
