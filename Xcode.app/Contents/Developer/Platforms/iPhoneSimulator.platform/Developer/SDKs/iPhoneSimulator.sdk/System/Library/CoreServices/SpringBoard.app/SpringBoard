MbP?
@ffffff
ffffff
?333333
?333333
?333333
?fff?
@es-8R
[@VVVVVV
?UUUUUU
?333333
?333333
@UUB
333333
ffffff
?333333
GaJ@
?433333
>333333
@333333
?ffffff
nr??
D@333333
ffffff6
?433333
8UUUUUU
_e>h
333333
?333333
@UUUUUU
?333333
L>;h
ffffff
MbP?
?tttttt
?333333
?333333
?333333
_@UUUUU
ffffff
?333333
?ffffff
7@UUUUUU
@@ffffff
6@ffffff
333333
?ffffff
=@)\
?ffffff
ffffff
?ffffff
initWithFrame:
bounds
_effectiveTopAngle
_effectiveBottomAngle
setFrame:
clearColor
setBackgroundColor:
bezierPath
moveToPoint:
addLineToPoint:
closePath
yellowColor
setFill
fill
initWithStyle:recognizer:forPoint:withMaxVerticalOffset:inView:pointingRight:
drawRect:
_style
_pointingRight
initWithTarget:action:
sharedInstance
rootSettings
lockScreenSettings
horizontalScrollFailureRecognizerSettings
addKeyObserverIfPrototyping:
_loadFromSettings:
alloc
init
setCancelsTouchesInView:
setDelaysTouchesBegan:
reset
_setDebugViewsVisible:
dealloc
delegate
viewForSystemGestureRecognizer:
setState:
removeAllObjects
_safeRelativeView
count
allowMultiTouch
state
_touchesFromEvent:
unionSet:
_recognizeForMultiTouchIfNecessary:
_averagePointFromTouches
_computeEffectiveAngleFromMin:max:
_isLocationOutOfBounds:
minusSet:
view
window
screen
locationInView:
convertPoint:fromCoordinateSpace:
coordinateSpace
touchesForGestureRecognizer:
enabled
setEnabled:
viewDebugArea
setViewDebugArea:
maxAllowableVerticalOffset
setMaxAllowableVerticalOffset:
topAngle
setMaxAllowedTopAngle:
setMinAllowedTopAngle:
bottomAngle
setMaxAllowedBottomAngle:
setMinAllowedBottomAngle:
countByEnumeratingWithState:objects:count:
phase
_locationOfTouch:inView:
_maxAllowableVerticalOffsetForPoint:
deviceClass
currentDevice
userInterfaceIdiom
mainScreen
_isOutOfBoundsVertically:
_isOutOfBounds:forAngle:
removeFromSuperview
arrayWithObjects:count:
setUserInteractionEnabled:
addSubview:
setAlpha:
settings:changedValueForKey:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEnded:withEvent:
touchesCancelled:withEvent:
_activeTouchCountForEvent:
canBePreventedByGestureRecognizer:
.cxx_destruct
setAllowMultiTouch:
maxAllowedTopAngle
minAllowedTopAngle
maxAllowedBottomAngle
minAllowedBottomAngle
isRunningAsSystemGesture
setRunningAsSystemGesture:
triggeredEvent
_startingLocation
_maxAllowableVerticalOffset
_maxAllowedTopAngle
_minAllowedTopAngle
_minAllowedBottomAngle
_maxAllowedBottomAngle
_touches
_tracking
_allowMultiTouch
_viewDebugArea
_runningAsSystemGesture
_debugViews
_triggeredEvent
array
addObject:
force
stringWithFormat:
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
fontWithDescriptor:size:
initWithReuseIdentifier:
setBackdropGroupName:
setWantsPlusDLayer:
setClipsSubviews:
layer
setCornerRadius:
setContentMode:
contentView
colorWithRed:green:blue:alpha:
setColor:
initWithCoder:
mainBundle
localizedStringForKey:value:table:
graphicsQuality
initWithTitle:graphicsQuality:
buttonAction:
addTarget:action:forControlEvents:
_removeClearButton
_addClearButton
setNeedsLayout
contentBounds
frame
_shouldReverseLayoutDirection
preferredFontForTextStyle:
_scaledValueForValue:
setState:animated:
titleFontForLayoutMode:
setFont:
layoutSubviews
initialGraphicsQuality
setGraphicsQuality:
image
size
sizeToFit
resetAnimated:
_clearButtonFrame
_titleBaseline
font
ascender
_leading
clearButtonState
layoutMode
setLayoutMode:
setBackgroundView:
setHasClearButton:
titleLabel
iconImageView
clearButtonVisibleAction
setClearButtonVisibleAction:
clearButtonFinalAction
setClearButtonFinalAction:
_titleLabel
_iconImageView
_clearButton
_showingClear
_layoutMode
_clearButtonVisibleAction
_clearButtonFinalAction
invalidateCache
invalidateCachedLayoutData
tableViewFrame
viewHeightWithReferenceSize:layoutMode:generateBlock:
reusableViewClass
heightForReusableViewForNotificationCenterTableViewController:layoutMode:sectionLocation:
clearPossibleAction
setClearPossibleAction:
clearAction
setClearAction:
_layoutCache
_clearPossibleAction
_clearFinalAction
setDelegate:
bioUnlock
isMainPageVisible
hasContentAboveDashBoard
screenOff
significantUserInteractionOccurred
menuButtonDown
menuButtonUp
fingerOn
fingerOff
mesaUnlockTriggerFired:
initWithDashBoardViewController:baseTrigger:
_dbvc
_baseTrigger
weakObjectsHashTable
reachabilitySupported
localDefaults
accessibilityDefaults
allowReachability
defaultCenter
_handleReachabilityActivated
addObserver:selector:name:object:
_handleReachabilityDeactivated
_handleSignificantTimeChanged
removeObject:
setAllowReachability:
deactivateReachabilityModeForObserver:
_updateReachabilityModeActive:withRequestingObserver:
_notifyObserversReachabilityModeActive:excludingObserver:
_setKeepAliveTimer
reachabilitySettings
reachabilityInteractiveKeepAlive
_pingKeepAliveWithDuration:interactedBeforePing:initialKeepAliveTime:
reachabilityDefaultKeepAlive
handleReachabilityModeActivated
handleReachabilityModeDeactivated
lockScreenViewController
isVisible
hasVisibleAlert
isPluginRunning
activeInterfaceOrientation
_toggleReachabilityModeWithRequestingObserver:
addObserver:
removeObserver:
reachabilityEnabled
toggleReachability
setReachabilityEnabled:
setReachabilityTemporarilyDisabled:forReason:
reachabilityModeActive
_observers
_reachabilityModeActive
_reachabilityExtensionGenerationCount
_reachabilityModeEnabled
_temporaryDisabledReasons
preferredLanguages
sessionCache
isInSetupMode
sharedInstanceIfExists
hasUIEverBeenLocked
isUILocked
isEqualToArray:
languageChanged
bootDefaults
objectForKey:
initWithString:
lastSystemBuildVersion
lastRestoreIdentifier
firstObject
pathComponents
arrayByAddingObjectsFromArray:
pathWithComponents:
stringWithContentsOfFile:encoding:error:
domain
isEqualToString:
code
defaultManager
stringRepresentation
setLastSystemBuildVersion:
UUID
UUIDString
length
stringWithUTF8String:
currentHandler
handleFailureInFunction:file:lineNumber:description:
lastPathComponent
stringByAppendingPathComponent:
writeToFile:atomically:encoding:error:
fileURLWithPath:isDirectory:
numberWithBool:
setResourceValue:forKey:error:
moveItemAtPath:toPath:error:
setLastRestoreIdentifier:
initWithObjects:
objectAtIndex:
contentsOfDirectoryAtPath:error:
hasPrefix:
removeItemAtPath:error:
compareBuildVersionString:withPrecision:
pathProviderForCurrentContainer
pathProviderForSystemContainerForCurrentProcess
cachesPath
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getResourceValue:forKey:error:
boolValue
pathExtension
removeItemAtURL:error:
systemAppPersistenteCache
wallpaperCache
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
containsObject:
migrateSettings
compareBuildVersion:withPrecision:
deleteAllSystemSnapshots
_setClearSystemAppSnapshotsWhenLoaded:
_setClearAllLegacySnapshotsWhenLoaded:
softwareUpdateDefaults
clearDeveloperInstallBrickAlerts
migrateAndRemoveOldDefaults
viewController
bannerView
bannerContext
item
pullDownNotification
allowsShowNotificationsSystemGestureFromBanner
prepareLayoutForPresentationFromBanner
setSuppressesNotificationUpdates:
contentFrame
revealRectForBulletin:
setBusy:forReason:
_updateWithDisplacement:velocity:
newDynamicAnimationForShow:targetValue:withInitialValue:velocity:extraPull:
bannerController
dismissBannerWithAnimation:reason:forceEvenIfBusy:
setShowsBackground:
backdropView
transitionToPrivateStyle:
transitionComplete
setContentViewAlpha:
setClippingInsets:
updateTransitionWithTouchLocation:velocity:
endTransitionWithVelocity:wasCancelled:completion:
runWithValueApplier:completion:
scale
beginPresentationWithTouchLocation:presentationBegunHandler:
backdrop
superview
bringSubviewToFront:
setTransform:
setHidden:
transitionIncrementallyToPrivateStyle:weighting:
colorForElement:
defaultColorForElement:
getWhite:alpha:
colorWithWhite:alpha:
setColor:forElement:
animateWithDuration:animations:completion:
handleGestureType:state:location:displacement:velocity:
_canPullDown
_didPreparePullDown
_rootSize
_pullDownSize
_pullDownTargetRect
_bannerHeight
_bannerHidden
_shouldObscure
_queue_updatePrimaryAppleAccountAndNotify:
_accountStoreDidChange:
accountStore
aa_primaryAppleAccount
setPrimaryAppleAccount:
postNotificationName:object:
_updatePrimaryAppleAccount
primaryAppleAccount
_queue
_accountStore
_primaryAppleAccount
imageNamed:
capInsets
_alphaOnlyImageForMaskImage:
imageForKey:generatingIfNecessaryWithBlock:
_shadowCapInsets
resizableImageWithCapInsets:
initWithImage:
blackColor
CGColor
setContentsMultiplyColor:
setClipsToBounds:
clipsToBounds
cornerRadius
convertRect:fromView:
defaultFormat
_setWantsAlphaMask:
initWithSize:format:
drawInRect:
imageWithActions:
setShouldClip:
shouldClip
setClippingCornerRadius:
clippingCornerRadius
setClippingFrame:
clippingFrame
_clippingView
_shadowImageViewTop
_shadowImageViewBottom
_shadowImageViewLeft
_shadowImageViewRight
_shadowImageClippingViewTop
_shadowImageClippingViewBottom
_shadowImageClippingViewLeft
_shadowImageClippingViewRight
initWithNibName:bundle:
isolateViewController:
viewDidLoad
viewWillAppear:
_updateLegibility
viewDidDisappear:
pluginAnimateAppearanceTransition:withCompletion:
synchronizeDrawingWithIsolatedContent
performCustomTransitionToVisible:withAnimationSettings:completion:
aggregateAppearance:
dashBoardAppearance
unionAppearance:
aggregateBehavior:
dashBoardBehavior
unionBehavior:
appearance
presentationStyle
setScrollingStrategy:
setIdleTimerDuration:
setIdleTimerMode:
setIdleWarnMode:
regions
role
controller
updateForPresentation:
defaultSettings
setLegibilitySettings:
suggestedInsetsForPreferredContentFrame:
setSuggestedContentInsets:
copy
plugin
name
pluginAnimatesAppearanceTransition:
isCapabilityRestricted:
notificationBehavior
builderWithObject:
appendObject:withName:
build
rebuildAppearance
rebuildBehavior
handleEvent:
isConsumable
handleDashBoardEvent:
type
activeAppearance
legibilitySettings
pluginAppearanceDidChange:
initWithLockScreenPlugin:
displayLayoutElementIdentifier
presentationTransition
presentationPriority
presentationType
dashBoardIdentifier
appearanceIdentifier
_plugin
setSlideToUnlockDarkShadowStrength:
setSlideToUnlockLightShadowStrength:
setAppIconGrabberDarkShadowStrength:
setAppIconGrabberLightShadowStrength:
setTimeDarkShadowStrength:
setTimeLightShadowStrength:
setDateDarkShadowStrength:
setDateLightShadowStrength:
setStatusTextDarkShadowStrength:
setStatusTextLightShadowStrength:
setIconLabelDarkShadowStrength:
setIconLabelLightShadowStrength:
setFolderTitleDarkShadowStrength:
setFolderTitleLightShadowStrength:
setTimerDialDarkShadowStrength:
setTimerDialLightShadowStrength:
setTimerTextDarkShadowStrength:
setTimerTextLightShadowStrength:
setLogoutButtonGlyphDarkShadowStrength:
setLogoutButtonGlyphLightShadowStrength:
setLogoutButtonTextDarkShadowStrength:
setLogoutButtonTextLightShadowStrength:
setUserPictureDarkShadowStrength:
setUserPictureLightShadowStrength:
rowWithTitle:valueKeyPath:
minValue:maxValue:
sectionWithRows:title:
moduleWithTitle:contents:
slideToUnlockLightShadowStrength
slideToUnlockDarkShadowStrength
appIconGrabberLightShadowStrength
appIconGrabberDarkShadowStrength
timeLightShadowStrength
timeDarkShadowStrength
dateLightShadowStrength
dateDarkShadowStrength
statusTextLightShadowStrength
statusTextDarkShadowStrength
iconLabelLightShadowStrength
iconLabelDarkShadowStrength
folderTitleLightShadowStrength
folderTitleDarkShadowStrength
timerTextLightShadowStrength
timerTextDarkShadowStrength
timerDialLightShadowStrength
timerDialDarkShadowStrength
logoutButtonGlyphLightShadowStrength
logoutButtonGlyphDarkShadowStrength
logoutButtonTextLightShadowStrength
logoutButtonTextDarkShadowStrength
userPictureLightShadowStrength
userPictureDarkShadowStrength
settingsControllerModule
setDefaultValues
slideToUnlockStrengthForStyle:
appIconGrabberStrengthForStyle:
timeStrengthForStyle:
dateStrengthForStyle:
statusTextStrengthForStyle:
iconLabelStrengthForStyle:
folderTitleStrengthForStyle:
timerTextStrengthForStyle:
timerDialStrengthForStyle:
logoutButtonGlyphStrengthForStyle:
logoutButtonTextStrengthForStyle:
userPictureStrengthForStyle:
_slideToUnlockDarkShadowStrength
_slideToUnlockLightShadowStrength
_appIconGrabberDarkShadowStrength
_appIconGrabberLightShadowStrength
_timeDarkShadowStrength
_timeLightShadowStrength
_dateDarkShadowStrength
_dateLightShadowStrength
_statusTextDarkShadowStrength
_statusTextLightShadowStrength
_iconLabelDarkShadowStrength
_iconLabelLightShadowStrength
_folderTitleDarkShadowStrength
_folderTitleLightShadowStrength
_timerTextDarkShadowStrength
_timerTextLightShadowStrength
_timerDialDarkShadowStrength
_timerDialLightShadowStrength
_logoutButtonGlyphDarkShadowStrength
_logoutButtonGlyphLightShadowStrength
_logoutButtonTextDarkShadowStrength
_logoutButtonTextLightShadowStrength
_userPictureDarkShadowStrength
_userPictureLightShadowStrength
sharedApplicationLibrary
setApplicationInfoClass:
setAllowConcurrentLoading:
initWithConfiguration:
mainDisplay
existingOverlayForDisplay:
interfaceOrientation
_referenceBounds
initializeSystemServices
initWithRemoteAlertControllerClass:
sceneWithIdentifier:
handleFailureInMethod:object:file:lineNumber:description:
settings
startSynchronize
setUseDebugDescription:
appendBodySectionWithName:multilinePrefix:block:
beginIgnoringInteractionEvents
initWithStatusBarHidden:atLevel:reason:
setLockOverrideEnabled:forReason:
_handleShutDownAndReboot
isShowingOverheatUI
logThermalEvent:
waitForUninstallsToComplete
sharedManager
saveSynchronously
isFileURL
_isDim
_keyboardOrCaseLatchWantsToAttemptUnlock:
resetIdleTimerAndUndimForSource:
_shouldSwallowHIDEvent:
handleKeyHIDEvent:
setDay:
_defaultExpirationComponents
initWithServiceName:onQueue:
walletNotificationSource
setWalletNotificationSource:
configureVoiceControl
externalDefaults
dataRecoveryRequired
performDataRecovery
wasBootedDark
initWithIdentifier:
hashTableWithOptions:
waitForSynchronizeToCompleteWithTimeout:
initForSystemApplication
_setSpringBoardPresenter:
powerDefaults
hideACPower
setDisableIdleSleep:
setHideACPower:
sessionType
initWithKeyBag:
initWithAssertionManager:policy:keybag:model:
initWithThermalController:authenticationController:
restoreDefaultWallpaperForAllVariantsAndNotify:
performMigrationWithFailureHandler:
start
beginCoalescentBlock
monitorForPurpleServerTermination
homeScreenRotationStyleWantsUIKitRotation
setWantsOrientationEvents:logMessage:
updateOrientationDetectionSettings
restoreStateFromPrefs
_updateRingerState:withVisuals:updatePreferenceRegister:
lastSavedRingerMutedState
isRingerMuted
setRingerMuted:
sharedUserAgent
setLockScreenDisableAssertionClass:
setAuthenticationPolicy:
startUserNotificationCenter
restrictionController
beginPostingChanges
noteBacklightControllerUndimming:
noteBacklightLevelChanged
noteBacklightFadeFinished
startListeningForThermalEvents
localeChanged
setDefaultWindowLevel:
setForceAlertsToPend:forReason:
isAuthenticated
setAuthenticated:
hasPasscodeSet
setHasPasscodeSet:
isInLostMode
setInLostMode:
isBlocked
setBlocked:
updateInSetupMode
setRequiresSetup:
setShouldNeverLock:
user
setCurrentUser:
setBootDefaults:
setForSimulator:
initWithInitialRestartState:
noteInterfaceOrientationChanged:force:logMessage:
playConnectedToPowerSoundIfNecessary
_noteStartupTransitionWillBegin
addTransactionWillBeginBlock:
_noteStartupTransitionDidBegin
addTransactionDidBeginBlock:
eventWithName:handler:
executeOrAppendEvent:
destination
_handleDeviceOrientationChangedEvent:
setComingFromUserPowerDown:
startAllowingIdleTimer
invalidate
setBacklightFactor:source:
_performBlockAfterCATransactionCommits:
addTransactionDidCompleteBlock:
initializeAndRunStartupTransition:
lockdownState
_lockdownActivationChanged:
setTimeCloaked:
_initializeDeferredItems
_startBulletinBoardServer
startupTransition
_performDeferredLaunchWork
isRunningInStoreDemoMode
_registerForAVSystemControllerNotifications
_iapServerConnectionDiedNotification:
_batterySaverModeChanged:
_nowPlayingAppDidChangeNotification:
_proximityChanged:
_significantTimeDidChange:
autoLockPrefsChanged
showCarrierDebuggingAlertIfNeeded
performSelector:withObject:afterDelay:
initialize
sharedConnection
_updateHomeScreenPresenceNotification:
_shouldHandleVolumeAndPowerButtonPriorities
_initializeVolumeAndPowerButtonPriorities
_updateVolumeAndPowerButtonPrioritiesForNotification:
_initializeAndStartObservingDefaultsIfNecessary
initWithScreenshotGestureRecognizer:
initWithScreenshotGestureRecognizer:homeHardwareButton:
initWithScreenshotGestureRecognizer:homeHardwareButton:lockHardwareButton:
initWithDataSource:
bannerDestination
setBannerDestination:
notificationCenterDestination
setNotificationCenterDestination:
initWithPressName:
initWithLockOutProvider:
initWithSharedModalAlertItemPresenter:
setLockScreenModalAlertItemPresenter:
setUnlockedAlertItemPresenter:
endCoalescentBlock
statusBar
setSuppressesHiddenSideEffects:
forceUpdateLocalStatusBarData
startObserving
sharedTelephonyManager
registerForAlerts
sharedVolumeControl
frontDisplayDidChange:
_autoLaunchAppsIfNecessaryAfterBoot
mainManager
pluginBundlesForType:
addObjectsFromArray:
loadPlugin
identifier
principalClass
systemControllerRouteChanged:
resetIdleTimer
isAppSwitcherShowing
isShowingHomescreen
securityDefaults
dontLockEver
observeDefault:onQueue:withBlock:
hardwareDefaults
screenIsOn
sharedAVSystemController
attributeForKey:
_computeVolumeButtonsHavePrecedenceWithHandler:
_mainQueue_applyVolumeAndPowerButtonPriorities:
removeObserver:name:object:
intValue
applicationWithPid:
_recordingStateChanged:
_mediaServerConnectionDied:
_unregisterForAVSystemControllerNotifications
userInfo
isSystemApplication
supportsAudioBackgroundMode
initWithStatusBarStyleOverrides:forPID:exclusive:showsWhenForeground:
displayName
setStatusString:
_removeRecordingStatusBarStyleOverrideAssertion
acquireWithHandler:invalidationHandler:
mainDisplaySceneManager
policyAggregator
allowsCapability:
lockState
cancelEventsWithName:
isShowingSpotlightOrTodayView
dismissAnimated:
dismissTodayViewSearchForHardwareKeyboard:
dismissAssistantViewIfNecessary:
pendingOrActiveAlert
cancelIfNotActivated
notificationDispatcher
_dismissPresentedBannerAnimated:
presentSpotlightFromSource:fromBreadcrumb:animated:
presentAnimated:presentationType:completion:
globalDefaults
languages
bundleIdentifier
cancelLockScreenIdleTimer
_settingLanguageStringForNewLanguage
initWithTitle:body:
activateAlertItem:
isPendingExit
initWithRequester:reason:
setWantsPersistentSnapshot:
restartWithTransitionRequest:
setSource:
setIntent:
setName:
unlockWithRequest:completion:
setCenter:
setBounds:
prepareToResetInMode:
setReason:
beginReset
userDefaultsDidChange:
noteIconStateChangedExternally
applicationWithBundleIdentifier:
setupMidnightTimer
setUpDaylightSavingsTimer
significantTimeChange
_significantTimeChangeNotificationReceived
cancelPreviousPerformRequestsWithTarget:selector:object:
updateBatteryState:
allowsCapability:explanation:
_logReliabilityInfoForEvent:
isAssistantVisible
isAssistantRunningHidden
pluginHandledButtonDownEventFromSource:
pluginHandledButtonUpEventFromSource:
pluginWantsActivationEvent:eventSource:interval:
activatePluginForEvent:eventSource:context:
handleSlideshowHardwareButton
_startSeekWithDirection:
numberWithInt:
endSeek:
changeTrack:
currentScreenController
handleACHomeUp
emulateHomeButtonEventsIfNeeded:
_volumeChanged:
togglePlayPause
play
pause
_toggleSearch
toggleMute
toggleRepeat
toggleShuffle
setPlaybackSpeed:
likeTrack
banTrack
addTrackToWishList
sharedBrightnessController
handleBrightnessEvent:
_smartCoverDidOpen:
_smartCoverDidClose:
headsetAvailabilityChanged
_setDeferredHeadsetButtonDownEvent:
_headsetButtonDown:
_headsetButtonUp:
_ringerChanged:
_hidEvent
_modifiedInput
_unmodifiedInput
_isKeyDown
_modifierFlags
launchCurrentSelectedApplication
userInterfaceLayoutDirection
next
previous
_handleKeyUIEvent:
stringByAppendingString:
__handleHIDEvent:
_handleHIDEvent:
userSessionController
isLoginSession
keyCommands
arrayWithArray:
_handleGotoHomeScreenShortcut:
keyCommandWithInput:modifierFlags:action:discoverabilityTitle:
_handleScreenShotShortcut:
activateWithKeyCommand:
hasOpenFolder
popExpandedIconWithTransitionRequest:animated:completion:
dismissSpotlightOrTodayViewAnimated:
isInScreenOffMode
screenshotManager
saveScreenshots
mainDisplayManager
windowForSystemGestures
sessionConfiguration
focusWindow
isGrabberVisible
_keyWindowForScreen:
windowLevel
cancelBrightnessEvent
cancelVolumeEvent
beginSeek:
orderFront
orderOutWithCompletion:
shutdownForReason:
dismissPowerDownAlertWithCompletionHandler:
_iapExtendedModeReset
performSelectorOnMainThread:withObject:waitUntilDone:
URLWithString:
openURL:
callCount
resetLockScreenIdleTimer
handleHeadsetButtonDownWithClickCount:
disconnectCallAndActivateHeld
endFaceTime
handleHeadsetButtonUp
_performDelayedHeadsetClickTimeout
dictionaryWithObject:forKey:
postNotificationName:object:userInfo:
handleHeadsetButtonPressed:
inFaceTime
faceTimeInvitationExists
inCall
activeCallExists
heldCallExists
swapCalls
handleHeadsetButtonUpNotInCall
preventIdleSleepForNumberOfSeconds:
isApplicationIdentifierRestricted:
currentLocale
setLocale:
_localeChanged
isPrototypingEnabled
activeTestRecipe
showOrHide
isUserLocked
lock
unlock
activateWithLocked:
activate:
numberWithInteger:
_statusBar:styleForRequestedStyle:overrides:
statusBar:styleForRequestedStyle:overrides:
isStatusBarHidden
styleOverrides
absoluteString
substringToIndex:
deactivateAlertItemsOfClass:
isValid
showUIPrompt
service
initWithURL:completion:
hasFaceTimeCapability
canStartFaceTime
applicationOpenURL:withApplication:publicURLsOnly:animating:needsPermission:activationSettings:withResult:
br_cloudDocsContainer
path
documentProxyForName:type:MIMEType:
defaultWorkspace
applicationsAvailableForOpeningDocument:
bundleIdentifiers
predicateWithFormat:
filteredArrayUsingPredicate:
objectAtIndexedSubscript:
showAlertForUnhandledURL:error:
initWithURL:applications:completion:
flagForActivationSetting:
_LSFailedToOpenURL:withBundle:
_requestPermissionToOpenURL:completion:
readingIntentWithURL:options:
initWithURL:fileCoordinator:
mainQueue
timer
localizedFailureReason
handleDocumentsAndDataURL:completion:
coordinateAccessWithIntents:queue:byAccessor:
scheduleToShowWithTimeInterval:
_applicationOpenURL:withApplication:publicURLsOnly:animating:activationSettings:withResult:
shouldShowAlertForUnhandledURL:error:
_relockUIIfNecessaryAfterTelephonyURLFailed
isInAirplaneMode
canAttemptTelephonyCallsInAirplaneMode
initWithLaunchAlertType:dataAlert:usesCellNetwork:bundleID:
setWasDeviceLocked:
isUIUnlocking
isWebcalURL
handleURL:
isAccountURL
_shouldHandleTestURL:
handleTestURL:
boolForActivationSetting:
activationSettings
applyActivationSettings:
_openURLCore:display:animating:activationSettings:withResult:
clearStateSettings
clearActivationSettings
clearProcessSettings
pluginHandledPasscodeUnlockWithCompletion:
shouldLaunchSuspendedAlways
setFlag:forActivationSetting:
setObject:forActivationSetting:
dictionaryWithObjectsAndKeys:
entityForApplication:actions:
createRequestForApplicationActivation:options:
applicationContext
setResultBlock:
executeTransitionRequest:
dictionaryWithObjects:forKeys:count:
lockUIFromSource:withOptions:
insertObject:atIndex:
_reportVolumeEventToLogger:
_sendBanditsVolumeIncreased
_sendBanditsVolumeDecreased
handleVolumeDownButtonPressed
handleVolumeUpButtonPressed
handleVolumeEvent:
noteVolumeOrLockPressedOverLockedAlerts
volume
numberWithFloat:
_reportAggdLoggingForVolumeChangedEvent:
pressCollector
currentTimeStamp
registerPressDownWithTimeStamp:
registerPressUpWithTimeStamp:
autoupdatingCurrentCalendar
date
dateByAddingComponents:toDate:options:
components:fromDate:
setHour:
setMinute:
setSecond:
dateFromComponents:
timeIntervalSinceDate:
dateWithTimeIntervalSinceNow:
_adjustSignificantTimersAfterSleep
_midnightPassed
initWithFireDate:interval:target:selector:userInfo:repeats:
currentRunLoop
addTimer:forMode:
_postSpringBoardSignificantTimeChangedNotificationWithLogMessage:
compare:
systemTimeZone
nextDaylightSavingTimeTransition
formatDateAsLongYMDHMSZWithDate:
laterDate:
_daylightSavingsTimeChanged
daylightSavingsTimer
setDaylightSavingsTimer:
fireDate
timeIntervalSinceReferenceDate
_adjustMidnightTimerAfterSleep
_adjustDaylightSavingsTimerAfterSleep
isButtonDown
setPersistentAnimationsEnabled:
isInEmergencyCallbackMode
currentActiveInCallAlert
activeFaceTimeCallExists
faceTimeAudioCallCount
telephonyCallCount
setupApplication
entityForApplication:
mainWorkspace
setEventLabel:
isFadeOutAnimationInProgress
isFadeInAnimationInProgress
fadeOutForSource:completion:
setBacklightFactorToZeroForProx
restoreBacklightFactorForProx
_caseLatchWantsToAttemptLock
initWithReason:
relinquish
allowLockAndUnlockWithCase
unlockUIFromSource:withOptions:
allowCaseLatchLockAndUnlock
_enqueueWorkspaceEvent:withName:ifSatisfiesCondition:cancelingEventsWithNames:
hasSeenACaseLatchCoverOnce
setHasSeenACaseLatchCoverOnce:
noteCaseHardwarePresent
isRestoring
isResetting
shouldPlayLockSound
soundWithFeedbackEventType:
playSoundWithDefaultEnvironment:
isPowerDownAlertFrontmost
handleStatusBarTapWithEvent:
isEffectivelyLocked
effectiveLockedOrientation
_setStatusBarOrientation:
_setStatusBarOrientation:animated:
orientation
setOrientation:animated:
noteInterfaceOrientationChanged:duration:updateMirroredDisplays:force:logMessage:
activeInterfaceOrientationWillChangeToOrientation:
noteActiveInterfaceOrientationWillChangeToOrientation:
sharedHUDController
reorientHUDIfNeeded:
updateMirroredDisplayOrientationWithLogMessage:
resetIdleTimerAndUndim
activeInterfaceOrientationDidChangeToOrientation:willAnimateWithDuration:fromOrientation:
settingsWithDuration:
noteActiveInterfaceOrientationDidChangeToOrientation:willAnimateWithSettings:fromOrientation:
alert
lastObject
_removeTransientActiveInterfaceOrientationOverrideForReason:
initWithOrientation:andReason:
reason
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
layoutController
_overrideInterfaceOrientationMechanics
updateNativeOrientationAndMirroredDisplays:logMessage:
interfaceOrientationForCurrentDeviceOrientation
_updateNativeOrientationWithOrientation:updateMirroredDisplays:animated:logMessage:
noteInterfaceOrientationChanged:duration:updateMirroredDisplays:logMessage:
_postActiveInterfaceOrientationChangedNotificationAnimated:
initWithObjectsAndKeys:
homeScreenRotationStyle
_layoutOrientation
activeInterfaceOrientationWithoutConsideringAlerts
userLockOrientation
_currentNonFlatDeviceOrientation
supportsPortraitUpsideDownOrientation
windowRotationDuration
removeAlwaysHiddenCategory:
addAlwaysHiddenCategory:
updateProximitySettings
externalForegroundApplicationScenes
uiClientSettings
proximityDetectionModes
clientProcess
enumerateObjectsUsingBlock:
proximityEventsEnabled
setExpectsFaceContact:inLandscape:
isShowingSheets
applicationForTopSheet
hostedApp
mainScene
isHostingAnApp
uiSettings
deviceOrientationEventsEnabled
orientationChangedEventsEnabled
setAmbiguousActivationMargin:forApp:
hasFinishedLaunching
isMainDisplay
layoutState
elementWithRole:
noteInterfaceOrientationChanged:duration:logMessage:
dismissAllSheets
noteSubstantialTransitionOccured
incrementModalAlertCount
decrementModalAlertCount
isKeybagRefetchTransactionActive
_frontMostAppOrientation
isMainThread
failMultitaskingGesturesForReason:
initWithCapacity:
indexOfObject:
initWithArray:
allObjects
arrayByExcludingObjectsInArray:
nowPlayingProcessPID
isPlaying
setNowPlayingProcessPID:
setNowPlayingInfo:
isOnAC
setNumberStyle:
stringFromNumber:
rangeOfString:
runningApplications
areSystemGesturesDisabledForAccessibility
setSystemGesturesDisabledForAccessibility:
setShowsActivityIndicatorOnHomeScreen:
handleVolumeIncrease
handleVolumeDecrease
setAllowIconRotation:forReason:
updateNativeOrientationWithLogMessage:
isBatterySaverModeActive
setBatterySaverModeActive:
shouldFixMainThreadPriority
systemIdleSleepInterval
_newApplicationLibrary
startupInterfaceOrientation
preFrontBoardInitializationHook
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
powerDownRequested:
powerDownCanceled:
restartManagerWillShutdown:
restartManagerWillReboot:
restartManager:willRestartWithTransitionRequest:
restartManagerExitImminent:
modalAlertPresentationCoordinator:didChangeShowingSystemModalAlert:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
setWindow:
widgetController
handleSignal:
applicationIsAliveForSystemWatchdog:
application:canOpenURL:
isDeterminingBootTransition
launchedForUserTransition
requestDeviceUnlock
_rotateView:toOrientation:
wipeDeviceNowWithReason:
runFieldTestScript
batteryStatusDidChange:
iapIsInExtendedMode
lockScreenCameraSupported
canShowLockScreenCameraGrabber
setAppDisabledNowPlayingHUD:bundleIdentifier:
_handleCommandTab:
_handleShiftCommandTab:
_windowForSystemAppButtonEventsForScreen:
_keyboardAvailabilityChanged
shouldNeverLock
showPowerDownAlert
_imagesMounted
isBundleIdentifierRestrictionDisabled:
handleDoubleHeightStatusBarTap:
isSpringBoardStatusBarHidden
currentHomescreenStatusBarStyle
currentHomescreenStatusBarStyleWithoutConsideringAlerts
applicationOpenURL:
setMenuButtonInterceptApp:forever:
menuButtonInterceptApp
menuButtonInterceptAppEnabledForever
setWantsVolumeButtonEvents:
setAppRegisteredForVolumeEvents:isActive:
appsRegisteredForVolumeEvents
setAppRegisteredForLockButtonEvents:isActive:
appsRegisteredForLockButtonEvents
_handlePhysicalButtonEvent:
lockAfterCallDidEndForLockPress:
smartCoverIsClosed
caseIsEnabledAndLatched
_application:statusBarTouchesEnded:
didReceiveMemoryWarning
_setStatusBarOrientation:logMessage:
_setStatusBarOrientation:animated:logMessage:
_setDeviceOrientation:animated:logMessage:
noteInterfaceOrientationChanged:logMessage:
noteAlertView:willChangeInterfaceOrientation:duration:
addActiveOrientationObserver:
removeActiveOrientationObserver:
pushTransientActiveInterfaceOrientation:forReason:
popTransientActiveInterfaceOrientationForReason:
orientationAggregator
_statusBarOrientationFollowsWindow:
wantsOrientationEvents
updateNativeOrientationAnimated:logMessage:
updateNativeOrientationWithOrientation:logMessage:
_overrideDefaultInterfaceOrientationWithOrientation:
_removeDefaultInterfaceOrientatationOverride
homeScreenSupportsRotation
setSystemVolumeHUDEnabled:forAudioCategory:
setProximityEventsEnabled:
expectsFaceContact
expectsFaceContactInLandscape
setExpectsFaceContact:
_setAmbiguousControlCenterActivationMargin:
noteSceneLayoutDidUpdateOnDisplay:
willDisplayMiniAlert
willDismissMiniAlert
didDismissMiniAlert
didDismissActionSheet
canShowAlerts
isLocked
alertInterfaceOrientation
launchMusicPlayerSuspended
launchApplicationWithIdentifier:suspended:
setTypingActive:
isMusicPlayerInNowPlayingView
nowRecordingApp
addNowLocatingApp:
removeNowLocatingApp:
nowLocatingAppDidEnterForeground:
leastRecentlyForegroundLocatingApp
isNowPlayingAppPlaying
setNowPlayingInfo:forProcessWithPID:
setSuspensionAnimationDelay:
_setReachabilitySupported:
_deactivateReachability
formattedDecimalStringForNumber:
formattedPercentStringForNumber:
_accessibilityFrontMostApplication
_accessibilityTopDisplay
_accessibilityRunningApplications
_accessibilityShouldAllowAppLaunch
_accessibilityShouldAllowIconLaunch
_accessibilitySystemGesturesDisabledByAccessibility
_accessibilitySetSystemGesturesDisabledByAccessibility:
_accessibilityActivationAnimationStartDelay
_accessibilityActivationAnimationWillBegin
_accessibilityDeactivationAnimationStartDelay
_accessibilityDeactivationAnimationWillBegin
_setStatusBarShowsProgress:
underMemoryPressure
noteKeybagRefetchTransactionIsActive:
_hasVolumeBandits
addVolumePressBandit:
removeVolumePressBandit:
addDisableActiveInterfaceOrientationChangeAssertion:
removeDisableActiveInterfaceOrientationChangeAssertion:
hasDisableActiveInterfaceOrientationChangeAssertions
bulletinBoardConnection
bulletinBoardQueue
nowLocatingApps
setNowLocatingApps:
restartManager
modalAlertPresentationCoordinator
isTypingActive
homeHardwareButton
lockHardwareButton
lockOutController
authenticationController
accountStoreController
powerDownController
setPowerDownController:
combinationHardwareButton
volumeIncrementSequenceObserver
volumeDecrementSequenceObserver
_uiController
_headsetButtonDownTime
_headsetDownEvent
_headsetClickCount
_ringerSwitchState
_headsetButtonClickCount
_menuButtonClickCount
_screenWasDimOnMenuDown
_screenshotWasTaken
_dontLockOnNextLockUp
_headsetDownDelayedActionPerformed
_isSeekingInMedia
_ignoringCurrentLockButtonPress
_mediaSeekDirection
_springBoardRequestsAccelerometerEvents
_activeInterfaceOrientation
_lastRequestedStatusBarStyleOverrides
_activeInterfaceOrientationObservers
_activeInterfaceOrientationOverrideStack
_wantsOrientationEvents
_notifyDontAnimateREOToken
_notifyDontAllowMediaHUDToken
_expectsFaceContact
_expectsFaceContactInLandscape
_proximityEventsEnabled
_smartCoverClosed
_keybagRefetchTransactionIsActive
_menuButtonDown
_restrictionDisabledApplications
_nowRecordingApp
_menuButtonInterceptApp
_menuButtonInterceptAppEnabledForever
_disableNowPlayingHUDAssertionBundleIds
_appsRegisteredForVolumeEvents
_appsRegisteredForLockButtonEvents
_lastLockButtonEventRecipient
_decimalFormatter
_percentFormatter
_midnightTimer
_midnightFireDate
_backgroundMIGServerThread
_iconGenerationMIGServerThread
_memoryPressureSource
_memoryPressureStatus
_blocksAwaitingAvailableMemory
_bulletinBoardConnection
_bulletinBoardQueue
_cardItemsController
_notificationDispatcher
_shouldDelaySleepForHeadsetClick
_volumePressBandits
_didPlayLockSound
_volumeAndLockButtonPrecedence
_userSessionController
_lockOutController
_authenticationController
_disableActiveOrientationChangeAssertions
_hasFinishedLaunching
_hideStatusBarAssertion
_showStatusBarAssertion
_recordingStatusBarStyleOverrideAssertion
_atHomescreen
_volumePowerQueue
_logFile
_bluetoothBatteryMonitor
_screenshotManager
_synchronizeCloudCriticalDataOperation
_restartManager
_pendingDeviceOrientationChangeEventDuringStartupTransition
_systemModalAlertPresenter
_modalAlertPresentationCoordinator
_orientationAggregator
_inUserTransition
_determiningBootTransition
_dontLockEver
_volumeUpAggdStartTime
_volumeDownAggdStartTime
_typingActive
_batterySaverModeActive
_nowPlayingProcessPID
_nowLocatingApps
_widgetController
_homeHardwareButton
_lockHardwareButton
_accountStoreController
_powerDownController
_daylightSavingsTimer
_combinationHardwareButton
_volumeIncrementSequenceObserver
_volumeDecrementSequenceObserver
fileExistsAtPath:
setNextVoiceRecognitionAudioInputPaths:
setNextAssistantRecognitionStrings:
_orientation
_reason
wasDeviceLocked
dismissOnLock
reappearsAfterLock
_wasDeviceLocked
standardUserDefaults
miscellaneousDefaults
setBacklightLevel:
soundDefaults
setCalendarAlarmPath:
setKeyboardPlaysSounds:
phoneDefaults
setHideMyPhoneNumber:
synchronizeDefaults
showStackshotUIFeedback
mainScreenFlasher
flashColor:withCompletion:
_legibilityPrototypeSettings
removeKeyObserver:
removeObserver:forVariant:
_hideNotificationCenterTabControl
_hideControlCenterGrabber
initWithScreen:debugName:
constrainFrameToScreen:
setOpaque:
setWindowLevel:
makeKeyAndVisible
rootViewController
setAutoresizingMask:
addChildViewController:
didMoveToParentViewController:
insertSubview:atIndex:
appSwitcherSettings
noteStatusBarHeightChanged:
_awayControllerActivated:
_backgroundContrastDidChange:
externalChargingAccessoriesChanged
connectedDevicesDidChangeNotificationName
_addRemoveSwitcherGesture
_handleScrunchGesture:
sb_setStylusTouchesAllowed:
addGestureRecognizer:withType:
_handleSwitcherSlideUpGesture:
_handleSwitchAppGesture:
setWithArray:
setGesturesPreventedByStylus:
_deviceLockStateChanged:
beginMonitoring
addObserver:forVariant:
warmupIfNecessary
homeButtonType
addProgressObserver:
hasOrbCapability
orbGestureSettings
useOrbGesture
_handleSwitcherForcePressGesture:
setMinimumNumberOfTouches:
setMaximumNumberOfTouches:
removeGestureRecognizer:
_legibilitySettings
style
primaryColor
initWithStyle:legacy:legibilityStyle:foregroundColor:
configureFakeSpringBoardStatusBarWithStyleRequest:
removeFakeSpringBoardStatusBar
statusBarWindow
isFakeStatusBarStyleEffectivelyDoubleHeight:
setShowsOnlyCenterItems:
removeAllGestureRecognizers
setLocalDataOverrides:
setStyleDelegate:
setTintColor:
setGestureRecognizers:
setOrientation:
styleRequest
setStyleRequest:
duration
delay
curve
animationFactory
transition
setFakeSpringBoardStatusBarVisible:
_animateWithDuration:delay:options:factory:animations:completion:
_fakeSpringBoardStatusBar
endStyleRequest
setStyleRequest:animationParameters:
isApplicationIcon
launchFromLocation:context:
application
applicationSignatureState
clearHighlightedIcon
hasAlerts
alertItemForPreventingLaunchOfApp:
model
applicationIconForBundleIdentifier:
initWithIcon:
hasUniversalProvisioningProfile
hasFreeDeveloperProvisioningProfile
stopRestoringIconList
leafIdentifier
activateApplication:
_setHidden:
iconToReveal
popToCurrentRootIconList
restoreContentUpdatingStatusBar:
isLockedOut
isMakingEmergencyCall
setWasTornDownWhenBeganRequiring:
layoutIfNeeded
_closeOpenFolderIfNecessary
makeKeyWindow
updateNumberOfRowsWithDuration:
updateStatusBarLegibility
_switchToHomeScreenWallpaperAnimated:
restoreContentAndUnscatterIconsAnimated:withCompletion:
restoreContentAndUnscatterIconsAnimated:afterDelay:withCompletion:
restoreContent
unscatterAnimated:afterDelay:withCompletion:
firstResponder
resignFirstResponder
subviews
makeObjectsPerformSelector:
_isIconListAndBarTornDown
wasTornDownWhenBeganRequiring
tearDownIconListAndBar
removeAllIconAnimations
variant
unlockToPhoneWallpaperOutSettings
BSAnimationSettings
factoryWithSettings:
unlockToPhoneWallpaperInSettings
setVariant:withOutAnimationFactory:inAnimationFactory:completion:
isShowingModalAlert
canDeactivateAlertForMenuClickOrSystemGesture
isRunning
anyObject
behavesLikePhone
isEndingCallForLockButtonPress
handleMenuButtonTap
_dismissSheetsAndDetermineAlertStateForMenuClickOrSystemGesture
deactivateAlertForMenuClickOrSystemGestureWithAnimation:
isRotating
hasEventWithName:
dismissSwitcherNoninteractively
_handleButtonEventToSuspendDisplays:displayWasSuspendedOut:
isScrolling
handleHomeButtonTap
toggleSwitcherNoninteractivelyWithSource:
grabbedIcon
hasAnyLockState
_resumeEventsIfNecessary
endIgnoringInteractionEvents
handleVolumeButtonDownEvent
display
isShowingMediaControls
hideVolumeHUDIfVisible
increaseVolume
decreaseVolume
context
overlay
isDark
_possiblyWakeForPowerStatusChangeWithUnlockSource:
connectedDevices
isInternal
isPowerSource
deactivateAlertItem:
doubleValue
executeOrPrependEvent:
homeScreenViewController
forceIconInterfaceOrientation:duration:
disableAnimationForNextIconRotation
isGestureWithTypeAllowed:
boolForStateSetting:
_scrunchGestureBegan
systemGestureStateChanged:
createRequestWithOptions:
initWithTransitionRequest:
setGestureRecognizer:
setTransactionProvider:
entity
setEntity:forLayoutRole:
modifyApplicationContext:
sequenceNumber
executeTransitionRequest:withValidator:
hasAnimatingFolder
_ignoringEvents
handleSwitcherSlideUpGesture:
_isPeekingOrShowing
dismissalAnimationStyle
handleSwitcherForcePressGesture:
percentComplete
sideAppState
_switchAppList
containsBundleID:
cumulativePercentage
_switchAppGestureBegan:
setSwitchAppList:
_switchAppSystemGestureShouldBegin:
requestTransitionWithOptions:builder:validator:
_isIgnoringSwitchAppListClearRequests
resetList
setActivatingEntity:
requestTransitionWithBuilder:
setActivatingApplication:
applicationBundleIDBeforeBundleID:
_programmaticSwitchAppToApp:reverseAnimation:
applicationBundleIDAfterBundleID:
_scrunchSystemGestureShouldBegin:
_appSwitcherSystemGestureShouldBegin:
_appSwitcherForcePressSystemGestureShouldBegin:
sb_description
_currentFolderLegibilitySettings
setStyle:
initWithSettings:atLevel:reason:
modifySettingsWithBlock:
legibilitySettingsForVariant:
sharedInstanceForStyle:
_currentFolderController
wallpaperWillChangeForVariant:
wallpaperDidChangeForVariant:
wallpaperLegibilitySettingsDidChange:forVariant:
wallpaperGeometryDidChangeForVariant:
matchFailedWithMorphs:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
transactionWillBegin:
transactionDidBegin:
transactionDidFinishWork:
transactionDidComplete:
interactionProgressDidUpdate:
interactionProgress:didEnd:
window:willAnimateFromContentFrame:toContentFrame:
window:shouldAutorotateToInterfaceOrientation:
rotatingContentViewForWindow:
rotatingSnapshotViewForWindow:
rotatingHeaderViewForWindow:
rotatingFooterViewForWindow:
window:willRotateToInterfaceOrientation:duration:
window:didAnimateFirstHalfOfRotationToInterfaceOrientation:
window:didRotateFromInterfaceOrientation:
shouldWindowUseOnePartInterfaceRotationAnimation:
getRotationContentSettings:forWindow:
window:willAnimateRotationToInterfaceOrientation:duration:
window:willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:
window:willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:
promptUnlockForAppActivation:withCompletion:
configureFakeSpringBoardStatusBarWithDefaultStyleRequestForStyle:
fakeStatusBarStyleRequestForStyle:
animateFakeStatusBarWithParameters:transition:
launchIcon:fromLocation:context:
activateApplication:fromIcon:location:
_hideKeyboard
restoreContentAndUnscatterIconsAnimated:
beginRequiringContentForReason:
endRequiringContentForReason:
isHandlingHomeButtonPress
dismissAppSwitcherForHomeButtonPress
handleHomeButtonSinglePressUp
handleHomeButtonDoublePressDown
_allowSwitcherGesture
_ignoreEvents
requestApplicationEventsEnabledIfNecessary
batteryCapacity
batteryCapacityAsPercentage
isBatteryCharging
isFullyCharged
isConnectedToExternalChargingSource
isConnectedToChargeIncapablePowerSource
ACPowerChanged
setIsConnectedToUnsupportedChargingAccessory:
isConnectedToUnsupportedChargingAccessory
supportsDetailedBatteryCapacity
isHeadsetDocked
isHeadsetBatteryCharging
headsetBatteryCapacity
clearSwitchAppList
_beginIgnoringSwitchAppListClearRequests
_endIgnoringSwitchAppListClearRequests
_accessibilityWillBeginAppSwitcherRevealAnimation
_activateApplicationFromAccessibility:
programmaticSwitchAppGestureMoveToLeft
programmaticSwitchAppGestureMoveToRight
_window
_iconsView
_contentView
_statusBarAssertion
_homeButtonForceProgress
_lastVolumeDownToControl
_isBatteryCharging
_isFullyCharged
_isOnAC
_isConnectedToExternalChargingAccessory
_isConnectedToUnsupportedChargingAccessory
_isConnectedToChargeIncapablePowerSource
_volumeHandler
_batteryCapacity
_supportsDetailedBatteryCapacity
_disableAppSwitchForcePressDueToHomeButtonForce
_batteryLoggingStartCapacity
_unsupportedChargerAlert
_switcherSettings
_scrunchSystemGestureRecognizer
_scrunchAppsTransaction
_switcherSlideUpGestureRecognizer
_switcherForcePressRecognizer
_switchAppTransaction
_switchAppSystemGestureRecognizer
_ignoreSwitchAppListClearRequests
_handlingHomePress
_contentRequiringReasons
_wasTornDownWhenBeganRequiring
iconIdentifier
initWithLeafIdentifier:applicationBundleID:
_appInfo
iconMasqueradeIdentifier
addIconDataSource:
initWithApplication:
icon:imageWithFormat:
activeDataSource
getCachedIconImage:
shouldCacheImageForFormat:
__loadIconImageForDataSource:format:
_preheatBitmapData
__loadUnmaskedIconImageForFormat:bundleIdentifier:
memoryMappedIconImageForIconImage:
applicationBundleID
_blockForGeneratingIconImageInBackgroundWithFormat:bundleIdentifier:complete:
applicationProxyForIdentifier:
_iconVariantForUIApplicationIconFormat:scale:
iconDataForVariant:withOptions:
initWithCGImage:scale:orientation:
tags
setBadge:
folderNames
fallbackFolderName
folderTitleOptions
bundleURL
initWithURL:
infoDictionary
bs_safeObjectForKey:ofType:
_localizedUninstallStringForKey:
displayNameForLocation:
uninstallAlertTitle
uninstallAlertConfirmTitle
uninstallAlertCancelTitle
userTouchBegan
preHeatForUserLaunchIfNecessary
_noteActiveDataSourceDidChangeAndReloadIcon:
copyWithZone:
asynchronouslyRequestIconImageForFormat:completionHandler:
generateIconImage:
getUnmaskedIconImage:
automationID
folderFallbackTitle
uninstallAlertTitleNotAllowed
uninstallAlertBody
uninstallAlertBodyNotAllowed
uninstallAlertBodyForAppWithDocumentsOrDataInCloud
masqueradeIdentifier
_application
_cachedSquareHomeScreenContentsImage
_masqueradeIdentifier
_uninstallStringsLocalizationBlock
addService:
removeService:
registerService:
unregisterService:
registeredServicesSnapshot
_services
initWithRepresentedObject:
icon
infoWithRepresentedObject:
settingsIcon
settingsDisplayName
reusableViewIdentifier
populateReusableView:
representedObject
setIcon:
setSettingsIcon:
setDisplayName:
setSettingsDisplayName:
_representedObject
_icon
_settingsIcon
_displayName
_settingsDisplayName
_isLayoutValidWithReferenceSize:layoutMode:
_cachedViewHeight
_referenceSize
isPairedVehicle
policyForApp:
isCarPlaySupported
alertManager
scheme
lowercaseString
host
URLOverrideForURL:
applicationsAvailableForHandlingURLScheme:
applicationIdentifier
_applicationForIdentifier:
isWebSafeTelephoneURL
isBasebandLogURL
isLaunchableDuringSetup
placeholderForDisplayID:
isAnyTerminationAssertionHeld
isUninstalled
suspendingUnsupported
activeAlert
requestWithScreenController:
_impersonatesApplicationWithBundleID
_setAlertImpersonator:forWorkspaceType:
entityForAlert:
setAlertToActivate:
setTransitionIsAlertActivation:
modifyAlertContext:
setAlertToDeactivate:
setCurrentTransaction:
eventQueue
setEventLabelWithFormat:
setWaitsForSceneUpdates:
initWithKeyOptions:valueOptions:capacity:
starkScreenIsAttached
setActivationHandler:deactivationHandler:
acquireLockForReason:
prepareForActivationWithContext:completion:
matchesInCallUIService
setBeingPresentedObscured:
noteActivatedInCallAlert:
setPasscodeVisible:animated:
maybeLockUIAfterCallEnded
matchesRemoteAlertService:options:
allAlerts
setWithObject:
setObject:forKey:
removeObjectForKey:
requestRemoteViewService:options:completion:
_instanceIfExists
setFlag:forDeactivationSetting:
matchesAnyInCallService
userRequestedHomeButtonDismissal
hasStackedAlerts
alertContext
deactivate:
_workspaceApplicationForApplication:
_selectTransactionForAppActivationRequest:
currentRemoteAlerts
containsAlert:
currentTransaction
childTransactions
hasEventWithPrefix:
alertManagerIsActivatingLockAlert
alertWindow
_isLockAlert
setProcess:
autoDimTime
autoLockTime
sceneManagerForDisplay:
isOccluded
objectsPassingTest:
isComplete
isInterruptible
interruptWithReason:
activeScreenController
canDisplayOnCarScreen
sentinelWithQueue:signalCount:completion:
isSystemApplicationProcess
signal
killForReason:andReport:withDescription:completion:
applicationProcessesForBundleIdentifier:
execute
allApplicationProcesses
_updateFrontMostApplicationEventPort
musicApplication
handleDoubleHeightStatusBarTap
elementWithIdentifier:
layoutRole
reactivateAlertFromStatusBarTap
isInternalInstall
setRecordingAudio:
setNowPlayingWithAudio:
isRecordingAudio
isConnectedToExternalAccessory
setSystemIdleSleepDisabled:forReason:
_statusBarStyleOverridesToCancel
_statusBarStyleOverridesToCancelWithoutConsideringAlerts
_registerHandler:forExtensionPoint:
_unregisterHandler:forExtensionPoint:
foregroundAppPidsWhenDisplaySecureModeWasEnabled
_sharedInstanceWithNilCheckPolicy:
initWithDisplay:eventQueue:
setBackground:
_executeTransitionRequest:options:validator:
initWithOptions:capacity:
master:slaveTransactionsForTransitionRequest:
mutableCopy
transactionForTransitionRequest:
addSlave:
removeSlave:
_slaveTransactionsForTransitionRequest:
_display
_eventQueue
_slaves
_currentTransaction
_resume
initWithScreen:delegate:
initWithAlertManager:
initWithDisplayType:name:
_updateMedusaEnablementAndNotify:
_memoryPressureRelieved:
_memoryPressureWarn:
_deviceWillEnableDisplaySecureMode:
_deviceWillDisableDisplaySecureMode:
_suspend
_initializeAndObserveDefaults
_addStateCaptureHandlers
stateDescription
initWithDisplay:
setAnimationDisabled:
executingEvent
transitionIsAlertActivation
_selectTransactionForAlertActivationRequest:
_selectTransactionForAppActivationRequest:canDeactivateAlerts:
descriptionForObject:
transitionRequest
compactDescriptionBuilder
_transactionForTransitionRequest:canDeactivateAlerts:
endTransition
setTransitionReason:
isMainWorkspaceTransitionRequest
source
beginTransition
begin
queue
initWithProvider:queue:
workspaceDefaults
playSoundOnDeviceWake
disableIdleSleep
succinctDescription
_preflightTransitionRequest:
declineWithReason:
_determineSourceForTransitionRequest:
isBackground
canPerformAdditionalTransition:
entityForLayoutRole:
currentTransitionAnimator
isPrimarySwitcherEntity
childViewController
currentOperation
eventLabel
prepareToPerformAdditionalTransition:
cancelAdditionalTransition:
allowsTransitionRequest:
alertToActivate
applications
setApplication:
sendActivationResultErrorCode:reason:
markUserLaunchInitiationTime
preHeatDataLinkIfNecessary
numberWithDouble:
performAdditionalTransition:
_executeAlertTransitionRequest:
handleTransitionRequest:
_executeApplicationTransitionRequest:
_disableReachabilityImmediately:
objectForActivationSetting:
sceneIdentifierForDisplay:
setOffersMigration:
checkForUnmigratediPhotoContentWithCompletion:
_shouldDismissSwitcherOnActivation
workspaceEntity
setAlertManager:
_setCurrentTransactionForRequest:fallbackProvider:
animationDisabled
boolForProcessSetting:
isPresentingBannerInLongLook
setCompletionBlock:
addSlaveTransaction:
transactionProvider
alertToDeactivate
_workspaceApplicationForBundleIdentifier:
_selectTransactionForReturningToTheLockScreenFromApp:forceToBuddy:withResult:
_selectTransactionForReturningToTheLockScreenWithRequest:fromApp:
initWithTransitionRequest:toLockScreenController:
newTransactionWithMainDisplayTransitionRequest:starkScreenController:alert:
previousApplicationForLayoutRole:
applicationForLayoutRole:
actualTopDisplay
newTransactionWithMainDisplayTransitionRequest:starkScreenController:underLock:
addChildTransaction:
_selectTransactionForAppActivationUnderMainScreenLockRequest:
activatingApplication
initWithTransitionRequest:lockScreenController:
_selectTransactionForAppActivationUnderMainScreenLock:withResult:
setStarkScreenController:
transitionContextForLayoutContext:failedEntities:
setApplicationContext:
fbsDisplay
initWithTransitionRequest:exitedApp:
boolForDeactivationSetting:
isMedusaEnabled
isMultitaskingAllowed
isMedusaDevice
initWithEventQueue:reason:
_finishInitialization
executeOrInsertEvent:atPosition:
starkScreenManagerDidChangeCurrentController:
isShowingSystemModalAlert
isAssistantViewVisible:
setSystemAppControlsFocusOnMainDisplay:
propertiesWithClientID:pid:displayUUID:contextID:
deferEventsForClientWithProperties:toClientWithProperties:withPriority:
_webClipIdentifierFromWebAppIdentifier:
bookmarkIconForWebClipIdentifier:
matchedWebApplication
setupDefaults
inSetupModeForActivationChange
_launchNextPendedAutoLaunchApp
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
removeObjectAtIndex:
_invalidateRelaunchTimer
_scheduleRelaunchTimerIfNecessary
initWithType:displayIdentifier:
remove:
setInSetupModeForActivationChange:
_handleSetupExited:
exitReason
terminationReason
failedTest:withResults:
deactivateAlertsAfterLaunch
didExitWithContext:
setFlag:forProcessSetting:
clearDeactivationSettings
noteStartingPhoneCallWhileUILocked
isMobilePhone
isFaceTime
stringByAddingPercentEscapesUsingEncoding:
initWithContentsOfURL:error:
statusBarStyleOverridesToCancel
setObject:forKeyedSubscript:
objectForKeyedSubscript:
isBackgrounded
willActivate
_noteSceneUpdateDidActivateApp:withSceneIdentifier:
isIgnoringOcclusions
willDeactivateForEventsOnly:
didDeactivateForEventsOnly:
removeFirstObject
isSpringBoard
willActivateForScene:transactionID:
didActivateForScene:transactionID:
isApplicationProcess
updateProcessState:
visibility
processWillLaunch:
processDidLaunch:
_handleBuddyLaunchFinished
_applicationProcessExited:withContext:
shouldAutoRelaunchAfterExit
_hasAnyAlertImpersonator
_selectTransactionForAppExited:
_selectTransactionForAppRelaunch:
executeOrPrependEvents:
executeOrInsertEvents:atPosition:
isBeingDebugged
setBeingDebugged:
isIconVisible:
isTrusted
options
dictionary
addEntriesFromDictionary:
isAppleApplication
setShowUIPrompt:
bs_safeNumberForKey:
bs_safeDictionaryForKey:
handle
_handleOpenURLRequest:application:options:activationSettings:origin:withResult:
_handleOpenApplicationRequest:options:origin:withResult:
bs_safeStringForKey:
bs_safeURLForKey:
shouldFakeAdoption
supportsFetchBackgroundMode
_validateRequestToOpenApplication:options:origin:error:
_canImplicitlyUnlockAtLockScreenWhileAuthenticatedFromOrigin:givenOrigin:trustedRequest:outReason:
_attemptUnlockToApplication:showPasscode:origin:completion:
scrollToIconListContainingIcon:animate:
integerValue
_supportsClassicMode:
_classicMode
initForBundleID:
action
initWithSessionIdentifier:
_handlerForExtensionPoint:
launchExtensionWithBundleID:options:completion:
_commonActivationSettingsForRequestWithOptions:isTrustedRequest:clientProcess:
setObject:forProcessSetting:
_mainScene
sendActions:
supportsLayoutRole:
auditToken
setAuditToken:
medusaSettings
enablePinningSideApps
hasViewServicesEntitlement
unsignedIntValue
applicationInfoForApplication:completion:
bs_performSynchronously:timeout:
dataActivationApplication
isEqualToIgnoringCase:
hasEntitlement:
realToken
_isApplicationRunningAsViewService:
processForPID:
isExtensionProcess
extensionInfo
typeIdentifier
hostProcess
sb_type
systemApplicationProcess
extensionIdentifier
isWidgetExtensionVisible:
isNotificationContentExtensionVisible:
mostElevatedApplicationStateForPID:
applicationInfo
handleActions:origin:withResult:
mode
setModeNew:
setOptions:
_exitIsImminent
initWithScreen:
initWithScreen:rootViewController:debugName:scene:
shouldPendAlertItemsWhileActive
_reasonForPendingAlerts
moveActiveUnlockedAlertsToPendingWithAnimation:
statusBarOrientation
undimsDisplay
managesOwnStatusBarAtActivation
updateTimeEnabled
wantsCustomBackgroundStyle
alertManager:topAlert:requestsWallpaperStyleChangeWithAnimationFactory:
customBackgroundStyle
wantsCustomBackgroundStyleForAllWallpaperVariants
setWallpaperStyle:forPriority:forVariant:withAnimationFactory:
removeWallpaperStyleForPriority:forVariant:withAnimationFactory:
shouldWatchdog:
isFailed
_descriptionProem
clearsCompletionAsynchronously
starkScreenController:didChangeStateFromState:toState:
carPlayDefaults
setCarPlayEndApplicationIdentifier:
addObserverForName:object:queue:usingBlock:
carPlayStartApplicationIdentifier
isNowPlayingApplication
setCarPlayStartApplicationIdentifier:
initWithTransitionRequest:starkScreenController:
carPlayEndApplicationIdentifier
_exitReachabilityModeWithCompletion:
isReachabilitySupported
sb_hostWrapperForUseInWindow:hostRequester:
contextHostView
initWithWallpaperVariant:
level
handleCancelReachabilityRecognizer:
setNumberOfTapsRequired:
setNumberOfTouchesRequired:
addGestureRecognizer:
handleRevealNotificationCenterGesture:
setDirection:
requireGestureRecognizerToFail:
beginRequiringWithReason:
yOffsetFactor
animateWithFactory:actions:completion:
allowsShowNotificationsGesture
presentAnimated:
stopHosting
endRequiringWithReason:
_noteDidWakeFromSleep
sceneFrameForAlerts:
sceneLevelForAlerts
alertManager:shouldDeactivateDismissedAlert:
alertManager:newAlertWindowForScene:
alertManager:defaultShouldAutorotateForAlert:
alertManager:defaultInterfaceOrientationForPresentationOfAlert:
alertManager:defaultSupportedInterfaceOrientationsForAlert:
alertManager:willActivateAlert:overAlerts:
alertManager:didActivateAlert:overAlerts:
alertManager:willDeactivateAlert:top:
alertManager:didDeactivateAlert:top:
alertManager:didChangeTopAlertFromAlert:toAlert:
alertManager:topAlertDidChangeOrientationEventsEnabled:
alertManager:didCreateAlertWindow:
alertManager:willTearDownAlertWindow:
alertManager:didTearDownAlertWindow:
alertManager:didRemoveAlert:fromWindow:
starkScreenManagerWillChangeCurrentController:
systemService:canActivateApplication:withResult:
systemService:handleOpenApplicationRequest:withCompletion:
systemService:handleOpenApplicationRequest:options:origin:withResult:
systemService:handleOpenURLRequest:application:options:origin:withResult:
systemService:isPasscodeLockedOrBlockedWithResult:
systemService:handleActions:origin:withResult:
systemServicePrepareForShutdown:withOptions:
systemServicePrepareForExit:andRelaunch:
systemService:dataReset:completion:
systemServicePrepareForShutdown:andReboot:
processManager:didAddProcess:
processManager:didRemoveProcess:
applicationProcessWillLaunch:
applicationProcessDidLaunch:
applicationProcessDidExit:withContext:
applicationProcessDebuggingStateDidChange:
processDidExit:
process:stateDidChangeFromState:toState:
watchdogStarted:
watchdogFired:
watchdogCancelled:
sceneManager:didCreateScene:withClient:
sceneManager:willUpdateScene:withSettings:transitionContext:
sceneManager:willCommitUpdateForScene:transactionID:
sceneManager:didCommitUpdateForScene:transactionID:success:
sceneManager:willDestroyScene:
sceneManager:didDestroyScene:
sceneManager:didCommitUpdateForScene:transactionID:
powerMonitorSystemSleepRequested:
powerMonitorSystemSleepRequestAborted:
powerMonitorSystemWillSleep:
powerMonitorSystemWillWakeFromSleep:
powerMonitorSystemDidWakeFromSleep:
transactionForTransitionRequestDeactivatingAlerts:
isSpringBoardActive
wantsIdleTimerDisabled
_selectTransactionForReturningToTheLockScreenWithResult:
_medusaPrefMayHaveChanged
updateInterruptedByCallSettingsFrom:to:
sceneManager
_initialized
_sceneManager
_alertManager
_suspensionLock
_alertManagerIsDeactivatingAlert
_alertManagerIsActivatingLockAlert
_medusaEnabled
_screenTimeTrackingController
_orientationAggdLogger
_displayLayoutTransition
_currentTransactionLock
_transactionWatchdog
_relaunchTimer
_applicationsToRelaunch
_reachabilityWindow
_reachabilityHostWrapper
_reachabilityEffectWindow
_extensionHandlersByType
_foregroundAppPidsWhenDisplaySecureModeWasEnabled
_appActivationFlagsForSceneUpdates
_activeSuspendedWorkspaceTransitions
failWithReason:
initWithGestureRecognizer:
setInteractionContext:
idleTimerDisabled
iconColumnsOrRows
initWithModel:orientation:viewMap:
defaultHeight
setAutoresizesSubviews:
_shouldAnimatePropertyWithKey:
visibleIcons
iconColumnsForInterfaceOrientation:
iconColumnsForCurrentOrientation
iconRowsForInterfaceOrientation:
iconRowsForCurrentOrientation
bottomIconInset
sideIconInset
iconAtPoint:index:proposedOrder:grabbedIcon:
isFull
rowAtPoint:
iconsInRowForSpacingCalculation
horizontalIconPadding
defaultIconSize
iconsInColumnForSpacingCalculation
verticalIconPadding
originForIconAtCoordinate:
_additionalHorizontalInsetToCenterIcons
_additionalVerticalInsetToCenterIcons
columnAtPoint:
iconLocation
topIconInset
_imageKeyForBundleIdentifier:inLayout:
_iconImageCache
imageForKey:
setImage:forKey:withPersistenceOptions:
initWithName:options:
iconImageForBundleIdentifier:inLayout:
setIconImage:forBundleIdentifier:inLayout:
sb_isGrayscale
isObject:equalToOther:
isObject:kindOfClass:andEqualToObject:withBlocks:
boolHash:
unsignedIntegerHash:
doubleHash:
objectHash:
integerHash:
hashWithBlocks:
appendSize:withName:
appendBool:withName:
appendInteger:withName:
appendFloat:withName:
initWithParameters:
mutableCopyWithZone:
colorspaceIsGrayscale
_noteNeedsHashRecalculation
text
maxSize
canEllipsize
canTighten
containsEmoji
canUseMemoryPool
textColor
accessibilityIncreaseContrastEnabled
focusHighlightColor
textInsets
fontLanguageInsets
_font
_text
_containsEmoji
_canEllipsize
_canTighten
_recalculateHash
_canUseMemoryPool
_accessibilityIncreaseContrastEnabled
_scale
_maxSize
_textColor
_focusHighlightColor
_textInsets
_fontLanguageInsets
_iconLocation
_hash
ancestorThatIsASubviewOfView:
miscellaneousSystemAnimationSettings
_prototypeSettingsChanged
containerView
currentMode
destinationMode
completeTransition:
isAnimated
setCurrentMode:
isInteractive
_animateInteractiveTransition:
transitionWasRestarted
_prepareToAnimate
shouldMoveIntoSearch
transitionDuration:
factoryWithDuration:
_animateIntoSearch:
_cleanupAfterAnimating:
initiallyInteractive
_cancelInteractiveTransition:withCompletionSpeed:completionCurve:
shouldMoveIntoSearchOnCancel
_finishInteractiveTransition:withCompletionSpeed:completionCurve:
completeIncrementalTransition
_setCurrentMode:force:
settingsForPrivateStyle:
setGrayscaleTintAlpha:
setGrayscaleTintLevel:
setColorTintAlpha:
setSaturationDeltaFactor:
spotlightNoninteractiveAnimationDuration
setDestinationMode:
transitionStyle
setTransitionStyle:
updateTransition:withPercentComplete:
finishInteractiveTransition:withCompletionSpeed:completionCurve:
cancelTransition:withCompletionSpeed:completionCurve:
animateTransition:
transitionAnimationFactory:
transitionAnimationOptions:
interruptibleAnimatorForTransition:
animationEnded:
supportsRestarting
_shouldUseBlurForStyle
_shouldUseDarkTintForStyle
_searchBackdropLowQualityStyleForStyle
_shouldAllowFullMotion
_backdropViewSettingsForStyle
_settings
_transitionDuration
_layoutView
_outgoingView
_incomingView
_otherView
_searchView
_otherWrapperView
_backdropView
_initialMode
_transitionContext
_percentComplete
_transitionToken
_destinationMode
_transitionStyle
_connectedDevicesDidChange
_isAlwaysVisible
_containsExternalBattery
_setHasContent:
_setVisibleIfNecessary:
bs_containsObjectPassingTest:
setHasContent:forWidgetWithBundleIdentifier:
_isVisible
_makeVisible
notificationCenterDefaults
isBatteryWidgetAlwaysAvailable
_snapshotManifest
setContentTypeMask:
deleteSnapshotsUsingPredicateBuilder:
containerPath
isInternalApplication
predicate
mainSceneID
snapshotsForGroupID:matchingPredicate:
subpathsOfDirectoryAtPath:error:
filename
bs_mapNoNulls:
stringByAppendingPathExtension:
fileExistsAtPath:isDirectory:
deleteSnapshotsForGroupID:predicateBuilder:
_saveSnapshotForScene:context:completion:
sceneID
createSnapshotForSceneSnapshot:withName:
setExpirationDate:
beginImageAccessUntilExpiration
isClassic
defaultLaunchingSizeForScreen:
setReferenceSize:
statusBarSettings
isHidden
effectiveStatusBarStyleWithStyle:
setStatusBarSettings:
initWithSceneSnapshot:scaleFactor:
_noteSnapshotDidUpdate
generateImageForSnapshot:dataProvider:writeToFile:didGenerateImage:didSaveImage:
isProtectedDataAvailable
_protectedDataDidBecomeAvailable:
setInterfaceOrientationMask:
setFullScreen:
variantWithIdentifier:
imageWithContentsOfFile:
isImageOpaque
imageScale
setScale:
setSceneID:
createVariantForSnapshot:withIdentifier:
scaleForDownscaledSnapshotGeneration
initWithImage:context:scaleFactor:
beginSnapshotAccessTransaction:completion:
normalizeSnapshotName:
setImageScale:
contextHostManager
contextWithFBSContext:
isTranslucent
createSnapshotWithContext:
referenceBounds
classicAppZoomedInOrRequiresHiDPI
setContentFrame:
hasCachedImage
deleteSnapshots:
timeIntervalSinceNow
createDownscaledSnapshotFromFullSizeSnapshotForMainScene
serial
serviceClass:
_isMainSceneID:
_noteSnapshotDidUpdate:
classicAppScaled
classicAppPhoneAppRunningOnPad
usesLegacyStatusBar
flushSnapshotsForAllScenes
flushSnapshotsForAllScenesIncludingAllLegacyImages
flushSnapshotsForSceneID:
saveSnapshotForScene:context:completion:
saveSuspendSnapshotForSceneSnapshot:
deleteAllSnapshots
deleteSnapshotForContext:
_snapshotCreationDeletionQueueForSceneID:
snapshotFrameForClassicInsideBounds:forOrientation:scaleFactor:
snapshotSizeAdjustedForLegacyStatusBarBasedOnSize:interfaceOrientation:contentFrame:
viewIfLoaded
setPageViewController:
isDisappeared
contentViewControllers
dismissContentViewController:animated:
handleAction:fromSender:
viewClass
isAvailableForConfiguration
requiredCapabilities
updateLegibilityForSettings:
dashBoardViewController
setDashBoardViewController:
isTransitioning
setTransitioning:
authenticated
updateBehaviorForController:
updateAppearanceForController:
updateAppearanceForController:withAnimationSettings:completion:
activeBehavior
externalPresentation
presenter
setPresenter:
presentationAltitude
backgroundStyle
components
backgroundColor
scrollingStrategy
restrictedCapabilities
proximityDetectionMode
idleTimerDuration
idleTimerMode
idleWarnMode
presentationCoordinateSpace
presentationRegions
wouldHandleButtonEvent:
participantState
canHostAnApp
hostedAppWillRotateToInterfaceOrientation:
pageView
willTransitionToVisible:
updateTransitionToVisible:progress:mode:
didTransitionToVisible:
_dashBoardViewController
_transitioning
_authenticated
setHitTestsAsOpaque:
_orderSubviews
resizingPolicyForPageView:
contentViewSizeForPageView:
_centerForSubviewLayout
_scaleTransform
_overlayTransform
performWithoutAnimation:
setView:animated:
prepareToBecomeVisibleIfNecessary
respondToBecomingInvisibleIfNecessary
_updateCornerRadius
_updateShadow
alpha
convertRect:toView:
setView:
viewPresenting:withInteraction:andInitialProgress:forTransitionRequest:
viewDismissing:withInteraction:andInitialProgress:forTransitionRequest:
updateTransitionProgress:
interactionDidEnd:
transitionDidEnd:forPresentation:
shouldSimplifyForOptions:
_setupShadowImage
auxiliaryView
contentViewTransformForPageView:
shadowOutset
setBlocksTouches:
setOverlay:
setShadowStyle:
setShadowAlpha:
setOverlayAlpha:
overlayAlpha
setContentAlpha:
contentAlpha
setDarkeningAlpha:
darkeningAlpha
setShouldClipShadow:
shouldClipShadow
setShadowClippingFrame:
shadowClippingFrame
_viewFrame
displayItem
setDisplayItem:
shadowStyle
shadowAlpha
_hitTestBlocker
_view
_overlayView
_displayItem
_contentDarkeningView
_shadowStyle
_shadowAlpha
_cornerRadius
_shadowView
_delegate
interactionProgress
_updateInteractionPercentComplete:
updateInteractiveTransition:
cancelInteractiveTransition
finishInteractiveTransition
removeProgressObserver:
cancelTransition
updateTransition:
startInteractiveTransition:
completionSpeed
completionCurve
wantsInteractiveStart
initWithInteractionProgress:maxHintProgress:
maxHintProgress
_hintInterval
_interactionProgress
alertItemWithShowInLockScreen:forcesModal:superModal:
setTitle:
setReappearsAfterLock:
title
currentTestName
setCurrentTestName:
scrollTestActiveSubtest
setScrollTestActiveSubtest:
_currentTestName
_scrollTestActiveSubtest
setIdleTimerDisabled:forReason:
startedTest:
startedSubTest:forTest:
finishedSubTest:forTest:
finishedTest:
searchGesture:changedPercentComplete:
searchGesture:startedShowing:
searchGesture:completedShowing:
searchGesture:resetAnimated:
dismissWithClickedButtonIndex:animated:
didPresentAlertView:
rootFolder
indexPathForNodeIdentifier:
iconAtIndexPath:
_simulateLockButtonPress
attemptUnlockWithPasscode:
_turnScreenOnOnDashBoardWithCompletion:
_runAppOpen:withCompletion:
_appIconsToPutInFolderForTest
_runTest:afterMovingIconsIntoFolder:withFolderOpen:
_runFolderOpenTest
_runScrollFolderTest:
_runFolderCloseTest
runHomeScreenRotationTest:
runFolderRotationTest:
runBulletinBoardRotationTest:
_runNotificationCenterBringupTest
_runNotificationCenterDismissTest
_runNotificationCenterScrollTestWithOptions:
_runControlCenterBringupTest
_runControlCenterScrollAmongstPagesTest
_runControlCenterBringupOverSafariTest
_runControlCenterBringupOnLockScreenTest
_runControlCenterShowAirDropSheetTest
_runControlCenterShowOrbActionsTest
_runControlCenterDismissOrbActionsTest
_runControlCenterDismissTest
_runPresentLongLookTest
_runReParkLongLookTest
_runClearLongLookTest
_runPresentBannerTest
_runHomeScreenSwipeLeftToTodayView
_runHomeScreenSwipeRightFromTodayView
_runHomeScreenSwipeLeftToSpotlight
_runHomeScreenIconPullToSpotlight
_runHomeScreenIconPullToSpotlightDismiss
_runTodayViewFocusSearchFieldToSpotlight
_runTodayViewPullDownToSpotlight
_runLockScreenTodayViewFocusSearchFieldToSpotlight
_runLockScreenTodayViewPullDownToSpotlight
_runLockScreenSwipeLeftToTodayView
_runLockScreenSwipeLeftToSpotlight
_runNotificationCenterFocusSearchFieldToSpotlightOverHomeScreen
_runNotificationCenterPartialPullDownToSpotlightOverHomeScreen
_runNotificationCenterFocusSearchFieldToSpotlightOverLockScreen
_runNotificationCenterPartialPullDownToSpotlightOverLockScreen
_runNotificationCenterFocusSearchFieldToSpotlightOverSafari
_runNotificationCenterPartialPullDownToSpotlightOverSafari
_runSpotlightLeftOfHomeRotation
_runSpotlightPulldownRotation
_runSpotlightTodayViewRotation
_runSearchTest:
_runSiriBringUpImmediateBeepTest:
_runSiriBringUpTest:testOptions:
floatValue
_runScrollIconListTestEditing:
startLaunchTestNamed:options:
startResumeTestNamed:options:
_runNotificationCenterWidgetLaunchTestNamed:options:
_runAppSwitcherBringupTest:
_runAppSwitcherDismissTest:
_runScrollAppSwitcherTest:overApp:
_runScrollAppSwitcherLandscapeTest:overApp:
_runDisplayAlertTest:
_runDashBoardScrollToLeftPageTestWithBlur:
_runDashBoardScrollToRightPageTestWithBlur:
_runDashBoardScrollFromLeftToRightPageTestWithBlur:
_runDashBoardRotateCameraPage
_runDashBoardRotateMainPage
_runDashBoardRotateTodayViewPage
_runAppIconForceTouchTest:withOptions:
_runDashBoardDismissWhileAuthenticatedTest
_runDashBoardDismissFromPasscodeViewAfterAuthenticationTest
_runDashBoardDismissFromTodayViewWhileAuthenticatedTest
_runDashBoardEnterSpotlightLaunchNullAppDismissUnlockToHomeTest
_runDashBoardPresentDismissPasscode
_runTodayViewScrollWidgetsTestWithOptions:
_runDashboardTodayViewScrollWidgetsTestWithOptions:
_runLockScreenScrollNotificationsTestWithOptions:
_runTodayViewEditTest
_searchViewController
_bringUPSpotlight:
exitSpotlight:
runTest:options:unlockSpringBoard:enterSpotlight:exitSpotlight:
runTest:options:
object
representsAlertOfClass:
scrollToIconListAtIndex:animate:
startLaunchTestNamed:options:withCompletionBlock:
indexPathForIcon:
folderContainingIndexPath:relativeIndexPath:
pushExpandedIcon:withTransitionRequest:animated:completion:
setCurrentPageIndexToListDirectlyContainingIcon:animated:
_retryLaunchTestWithOptions:
_shouldPendAlertsForTest:
_handleApplicationExit:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
componentsSeparatedByString:
startCHUDRecording:
stopCHUDRecording
isRunningTest
rotateIfNeeded:
finishedTest:extraResults:withTeardownBlock:
closeFolderAnimated:withCompletion:
runHomeScreenRotationIterationWithRemainingIterations:completionHandler:
installCACommitCompletionBlock:
sharedApplication
rotateIfNeeded:completion:
_runFolderTestWithName:actions:
setIsEditing:
_performAfterDelay:block:
_setupKeyboardAnimationSubTestsForTestName:
installNotificationObserverForNotificationName:forOneNotification:usingBlock:
_presentTodayViewSpotlightWithCompletion:
revealAnimated:
_rootFolderController
searchableTodayViewController
_exitSpotlightForReason:animated:completion:
_enterSpotlightAnimated:completion:
_forwardableIsolatedController
_resetAfterAnimatedScroll
_scrollToEnterSpotlight
_dashBoardControllerForTesting
dashBoardView
_todayControllerForTestingIfExists
scrollToPageAtIndex:animated:withCompletion:
_changeSpotlightVisible:animationBegan:completion:
_changeSpotlightVisible:completion:
_runLockScreenSwipeLeftIsShowingSpotlight:
_setCurrentMode:
_notificationListContainerViewController
listViewController
collectionView
insertNotificationRequest:forCoalescedNotification:
_publishFakeNotificationsWithCount:requestDestination:notificationScrollView:publishBlock:completion:
_doCommonSpotlightTestForNotificationCenter:forSearchFieldFocusWithTeardown:
_publishFakeNCNotificationsWithCount:completion:
_presentNotificationCenterForSpotlightTestWithCompletion:
dismissAnimated:completion:
_activatePartialPulldownSpotlightForTest:completion:
_returnToHomeScreenWithCompletion:
_activateSafariWithCompletion:
setSpotlightVisible:animated:completion:
presentAnimated:completion:
finishedTest:waitForCommit:extraResults:withTeardownBlock:
_basicRotationTestForCurrentConfigurationWithTeardown:
performSearchWithQuery:
failedTest:withFailure:
_startScrollAppSwitcherTest:overApp:runColdTest:
_applicationToUseForScrollTesting
activateSwitcherNoninteractivelyWithSource:
_continueRunningScrollAppSwitcherTest:runColdTest:
_contentViewController
_updateScrollViewContentOffsetToCenterIndex:animated:completion:
failedTest:
_applicationToUseForOpenAndCloseTesting
notificationCenterWithSearchViewController
notificationListViewController
_performScrollTest:iterations:delta:
clearAll
_runTestWithVariableFinish:options:completion:
_todayViewController
majorScrollView
_runScrollTestWithScrollView:options:completion:
_runWidgetsScrollTestWithOptions:completion:
dismissViewControllerAnimated:completion:
presentEditViewWithCompletion:
removeLastObject
componentsJoinedByString:
_widgetDiscoveryController
_widgetViewControllerWithBundleID:containingBundleID:didConnect:canTearDown:
presentViewController:animated:completion:
mainPageViewController
contentViewController
notificationListScrollView
postNotificationRequest:forCoalescedNotification:
isRunningTest:
_publishFakeLockScreenNotificationsWithCount:completion:
_bringUpControlCenter
numberOfActivePages
scrollToPage:animated:withCompletion:
_controlCenterViewController
_dismissAirDropWithCompletion:
_presentAirDropWithCompletion:
_dismissButtonActionPlatterWithCompletion:
_presentButtonActionPlatterWithCompletion:
_runLongLookPresentationTestWithBeginBlock:completion:
_runBannerTestWithBlock:
_runLongLookDismissAndReParkTestWithBeginBlock:completion:
_runLongLookDismissAndClearTestWithBeginBlock:completion:
_runBannerPresentationTestWithBeginBlock:completion:
supportedAndEnabled
shouldEnterAssistant
bs_boolForKey:
dismissAssistantViewIfNecessary:withAnimation:completion:
_runDashBoardScrollTestFromPageIndex:toPageWithIndex:subTestName:backSubTestName:withBlur:
pageViewControllerAtIndex:
setUseFakeBlur:
_runDashBoardRotationTestOnPageAtIndex:
_runDashBoardRotationTestOnPageAtIndex:showSpotlight:
_rotateFromPortrait:toLandscape:andFromLandscape:andBackToPortrait:
_resetForceRotate
_forceRotateToOrientation:withCompletion:
_rotationCompletion:
lock:
_returnToHomescreenWithCompletion:
_launchFullscreenApplication:withLaunchResult:transactionCompletion:
isShowingSpotlight
_runDashBoardDismissTestFromPageIndex:showPasscodeView:
_workspaceTransactionCompleted:
_attemptUnlockWithPasscode:finishUIUnlock:
_simulateHomeButtonPress
isPasscodeLockVisible
setPasscodeLockVisible:animated:
setPasscodeLockVisible:animated:completion:
initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:
addButtonWithTitle:
show
_simulateHomeButtonPressWithCompletion:
buttonActions
performButtonDownPreActions
performButtonDownActions
performButtonUpPreActions
performSinglePressAction
performAfterMenuButtonUpIsHandledUsingBlock:
performInitialButtonDownActions
performSinglePressUpActions
performFinalButtonUpActions
setTransitionCompletion:
todayViewController
alertItemsOfClass:
alertController
message
appendFormat:
notificationRequestWithSectionId:notificationId:requestDestination:
setValue:forKey:
finishedTest:extraResults:waitForNotification:withTeardownBlock:
keyWindow
_unscatterWillBegin:
_cleanUpLaunchTestState
endLaunchTest
_runSearch:onCompletion:
_runScrollSearchResultsTest:
assistant:viewWillAppear:
assistant:viewDidAppear:
initWithWorkspace:display:
setRequest:
descriptionWithMultilinePrefix:
setAlertContext:
initWithFormat:arguments:
finalize
_sendResult:
workspace
appendObject:withName:skipIfNil:
_nameForDisplayType
activeMultilinePrefix
compactDescriptionBuilderWithMultilinePrefix:
succinctDescriptionBuilder
descriptionBuilderWithMultilinePrefix:
layoutStateForTransitionContext:
originalLayoutStateForTransitionContext:
transitionContext:referenceFrameForEntity:
isFinalized
uniqueID
transitionCompletion
interactionContext
_workspace
_uniqueID
_eventLabel
_appLayoutController
_transitionCompletion
_finalized
_interfaceOrientation
_applicationContext
_alertContext
_auditToken
_interactionContext
initWithEntitlement:
setRemovabilityDelegate:
process
authenticateClient:withResult:
isUninstallSupported
isUninstallAllowed
_authenticateClient:forBundleIdentifier:withCompletionHandler:
setUninstallAllowed:
applicationServer:client:fetchRemovabilityForBundleIdentifier:withCompletion:
applicationServer:client:setRemovalAllowed:forBundleIdentifier:
_serviceClientAuthenticator
initWithScreen:rootViewController:layoutStrategy:debugName:scene:
_initWithScreen:layoutStrategy:debugName:rootViewController:scene:
setAlertWindowViewControllerDelegate:
callStackSymbols
setRootViewController:
stackedAlertCount
allowsEventOnlySuspension
stackedViewForAlert:
alertDisplayViewWithSize:
setDisplay:
strongToStrongObjectsMapTable
alertWindow:canAnimateInAlert:
setShouldAnimateIn:
addAlertController:
layoutForInterfaceOrientation:
noteAlertWindow:didDisplayAlert:
removeAlertController:
addView:toBeObscuredByAlert:
stackedAlertsIncludingActiveAlert:
supportedInterfaceOrientations
_setRotatableViewOrientation:duration:
defaultShouldAutorotateForAlertWindow:
defaultInterfaceOrientationForPresentationOfAlertWindow:
defaultSupportedInterfaceOrientationsForAlertWindow:
sb_autorotates
_isSecure
defaultShouldAutorotateForAlertWindowViewController:
defaultInterfaceOrientationForPresentationOfAlertWindowViewController:
defaultSupportedInterfaceOrientationsForAlertWindowViewController:
_initWithFrame:debugName:attached:
isOpaque
displayAlert:
deactivateAlert:
hasActiveAlertsOrDisplays
stackedDisplayCount
noteInterfaceOrientationChangingTo:animated:withActivatingAlert:
alertWindowDelegate
setAlertWindowDelegate:
_alertWindowController
_alertWindowDelegate
_alertToDisplayMap
sendResetPlaybackTimeoutCommand
handleLockButtonPressed
screenIsDim
reverseFadeOutIfNeeded
shouldLockUIAfterEndingCall
_playLockSound
isFadeInAnimationInProgressForSource:
setInScreenOffMode:
triggerSOSWithCompletion:
performSOSGestureBeganActions
performSOSGestureEndedActions
performLongPressActions
performSOSActionsWithCompletion:
_fadeOutInProgressFromLockButtonWhileUnlocked
_undidFadeOutFromLockButton
_useDashBoard
_sosGestureIsActive
_isButtonDown
setBackgroundStyle:
sendSubviewToBack:
combinedTintColor
colorWithAlphaComponent:
setCustomBackgroundColor:
setShowsEmergencyCallButton:
alphaComponent
setBackgroundAlpha:
initWithBackdropView:
setBackgroundLegibilitySettingsProvider:
initWithFrame:includeBlur:passcodeViewGenerator:
setBlurEnabled:
passcodeView
_passcodeView
_backgroundView
processInfo
systemUptime
_resetTimersIfNecessary
_handlePressUpWithTimeStamp:
_handlePressDownWithTimeStamp:
setDurationUp:
_end
maxPressUpDuration
maxPressDownDuration
_fireEndTimerWithDelay:isButtonDown:
initWithDurationDown:durationUp:
cancel
scheduledTimerWithFireInterval:queue:handler:
pressCollector:didCollectSequence:
_reset
endCurrentSequence
setMaxPressDownDuration:
setMaxPressUpDuration:
_hardEndTimer
_currentSequence
_currentTuple
_lastHandledDownEvent
_lastHandledUpEvent
_maxPressDownDuration
_maxPressUpDuration
alertViewIsReadyToDismiss:
setNeedsDisplay
dismiss
alertDisplayWillBecomeVisible
alertDisplayBecameVisible
isReadyToBeRemovedFromView
shouldAnimateIn
isAnimatingOut
willRotateToInterfaceOrientation:duration:
willAnimateRotationToInterfaceOrientation:duration:
didRotateFromInterfaceOrientation:
shouldAddClippingViewDuringRotation
setAlert:
alertWindowViewControllerResizedFromContentFrame:toContentFrame:
_alert
_shouldAnimateIn
initWithFromPlugin:toPlugin:viewController:
beginAppearanceTransition:animated:
willMoveToParentViewController:
_removeFromView
auxiliaryDeactivationAnimationBlock
setAuxiliaryDeactivationAnimationBlock:
_addToView
auxiliaryActivationAnimationBlock
setAuxiliaryActivationAnimationBlock:
endAppearanceTransition
removeFromParentViewController
_removeViewFromHierarchy:
removeOverlay:transitionIfNecessary:animated:completion:
lockScreenView
configureForPlugin:
pluginViewHidden
addOverlay:transitionIfNecessary:animated:completion:
transitionFromPlugin:toPlugin:viewController:
fromPlugin
toPlugin
_fromPlugin
_toPlugin
_viewController
_removeFromImpersonatedAppIfNecessary
isViewLoaded
_acquireStatusBarAssertionIfActive
viewDidAppear:
viewWillDisappear:
_releaseStatusBarAssertion
parentViewController
setWallpaperTunnelActive:
defaultShouldAutorotateForAlert:
defaultInterfaceOrientationForPresentationOfAlert:
defaultSupportedInterfaceOrientationsForAlert:
_displayLayoutElementIdentifier
effectiveViewController
alertWillDismiss:
alertIsReadyToBeDeactivated:
applyDeactivationSettings:
applyStateSettings:
flagForDeactivationSetting:
setObject:forDeactivationSetting:
objectForDeactivationSetting:
setFlag:forStateSetting:
flagForStateSetting:
setObject:forStateSetting:
objectForStateSetting:
flagForProcessSetting:
objectForProcessSetting:
applyProcessSettings:
hasTranslucentBackground
pushTunnelToWallpaperForAlert:
popTunnelToWallpaperForAlert:
setBackgroundStyle:withAnimationFactory:force:
alert:requestsBackgroundStyleChangeWithAnimationFactory:
bs_beginAppearanceTransition:animated:
bs_endAppearanceTransition:
_screen
FBSDisplay
initWithDisplayType:identifier:elementClass:
setLevel:
setFillsDisplayBounds:
setLayoutRole:
activateWithBuilder:
_isActiveAlert
statusBarStyle
showsSpringBoardStatusBar
_acquireStatusBarAssertionForStyle:hidden:legibilitySettings:
deactivate
alertDidDeactivate:
alertDidChangeOrientationEventsEnabled:
alert:didChangeFaceContactExpectation:
getStyleOverrides
defaultStyleForRequestedStyle:styleOverrides:
effectiveStatusBarStyle
alertBannerSuppressionChanged:
preferredWhitePointAdaptivityStyle
alertIsReadyToBeRemovedFromView:
_removeAlertImpersonator:
alertDidChangeOccluding:
test
starkStatusBarStyle
statusBarStyleRequest
effectiveStatusBarStyleRequest
suppressesBanners
suppressesNotificationCenter
suppressesControlCenter
activate
copyDisplaySettings
copyActivationSettings
copyDeactivationSettings
copyStateSettings
copyProcessSettings
_setTargetScreen:
wantsFullScreenLayout
loadView
shouldAutorotate
preferredInterfaceOrientationForPresentation
clearDisplay
dismissAlert
isWallpaperTunnelActive
setBackgroundStyle:withAnimationFactory:
removeBackgroundStyleWithAnimationFactory:
allowsStackingOfAlert:
willStackWithAlert:
didStackWithAlert:
wantsTimeInStatusBar
finalAlpha
displayWillAppear
displayWillDisappear
displayDidDisappear
setOrientationChangedEventsEnabled:
longPressDurationForHomeButton
didFinishAnimatingIn
didFinishAnimatingOut
willBeginDeactivationForTransitionToApps:animated:
currentlyAnimatingDeactivation
animateDeactivation
handleMenuButtonDoubleTap
handleMenuButtonHeld
handleAutoLock
setSuppressesBanners:
suppressesSiri
activatedForSiri
whitePointAdaptivityStyle
alertDelegate
setAlertDelegate:
removeFromView
_isOccluding
_setOccluding:
_deactivateLayoutElement
_requestedDismissal
_setRequestedDismissal:
_alertDelegate
_dictionary
_isWallpaperTunnelActive
_backgroundStyleIsSet
_backgroundStyle
_isForcingBackgroundStyleUpdate
_suppressesBanners
_occluding
_activationSettings
_deactivationSettings
_stateSettings
_processSettings
_orientationChangedEventsEnabled
_targetScreen
_displayLayoutElement
storeForApplication:
_updateApplicationWakeTimers
_updateRecentlyUpdatedTimer
minimumBrightnessLevel
supportedTypes
setWhitePointAdaptivityStyle:
_sceneIdentifierForDisplayType:
refreshLaunchImagesInSnapshotManifestIfNeeded
_dropPeriodicWakeProcessAssertion
_dropTransientProcessAssertion
applicationShortcutWidgetBundleIdentifier
staticApplicationShortcutItems
dynamicApplicationShortcutItemsVersion
applicationShortcutItemsForBundleIdentifier:withVersion:
setApplicationShortcutItems:forBundleIdentifier:withVersion:
initWithScene:
initWithApplicationInfo:
sandboxPath
bundleContainerURL
lastModifiedDate
_purgeRemoteApplication
bundleVersion
isEnabled
isExitsOnSuspend
alwaysLaunchesSuspended
intersectsSet:
networkUsageTypes
dataUsage
_setDataUsage:
behavesAsCaller
isCloudKitEnabled
isCloudDocsEnabled
nowPlayingApplication
isGameCenterEnabled
wasGameCenterEverEnabled
requiresPasscodeIfLaunchedBeforeFirstUnlock
urlScheme
wantsLaunchWithoutPNG
carrierDefaults
shouldHideAllVoicemailUI
iconClass
isSubclassOfClass:
carDisplayName
ratingRank
itemID
preferenceDomain
initWithSuiteName:
processState
taskState
setProcessState:
_didSuspend
_setNewlyInstalled:
_setRecentlyUpdated:
isForeground
executionContext
environment
_sendDidLaunchNotification:
_effectiveFailedLaunchCount
_effectiveNonUserKillExitCount
_noteNonUserKillExit
sideAppIdentifier
initialState
setSideAppState:
_noteFailedLaunch
setDefaultValue:forKey:bundleIdentifier:
dataContainerPath
setSystemVolumeHUDEnabled:forCategory:
setAlertSuppressionContextsBySectionIdentifier:
isSameExecutableAsApplication:
setUsesBackgroundNetwork:
_recalculateVoIPBehaviorForTerminationWithContext:
_unregisterRemoteViewsAndSheets
_invalidateStatusBarStyleOverridesAssertions
setApplicationNextWakeDate:
_setActivationState:
setDefaultBackgroundColorWhileHosting:
_resetDataUsage
activationState
_activationStateToString
isActivating
currentInterfaceOrientation
dataConnectionType
isPowered
showLaunchAlertForType:
_show32BitDeprecationAlertIfNecessary
supportsLegacyVOIPBackgroundMode
_setAutoLaunchForVoIP:
carSceneID
safeObjectForKey:ofType:
_isNewlyInstalled
_noteIconDataSourceDidChange
_isRecentlyUpdated
_lockStateDidChange:
supportsBackgroundMode:
notificationDefaults
legacyAlarmList
_shouldAutoLaunchForVoIP
_shouldAutoRelaunchForEA
restoreState
_shouldAutoLaunchOnBootOrInstall:
setForcedStatusBarForegroundTransparent:
_synchronizeDrawing
setAnimationSettings:
_synchronizedDrawingFence
setAnimationFence:
updateSettingsWithTransitionBlock:
classicAppZoomedIn
defaultValueForKey:bundleIdentifier:urlScheme:ofType:
defaultStatusBarStyle
includesStatusBarInClassicJail
isStatusBarLegacy
sharedTelephonyManagerCreatingIfNecessary:
isNowRecordingApplication
ignoredStatusBarStyleOverrides
statusBarStyleRequestWithStyle:
statusBarHiddenForInterfaceOrientation:onDisplay:
defaultStatusBarHiddenForOrientation:
statusBarHiddenForOrientation:
activationInterfaceOrientationForCurrentOrientation
setStatusBarStyleOverridesToSuppress:
updateSettingsWithBlock:
mainSceneWantsFullscreen
_isMonarchLinked
_mainSceneSupportedInterfaceOrientations
activationInterfaceOrientationForOrientation:
_currentClassicModeShouldAllowLandscapeLaunching
_mainSceneSupportsInterfaceOrientation:
defaults
_launchingInterfaceOrientationForOrientation:
_usesSplashBoard
setRequiredOSVersion:
referenceSize
_calculateSupportedTypesLazilyIfNecessary
_disablesClassicMode
_shouldBypassClassicForSplashBoard
_supportsApplicationType:
_pad_classicModeFromSplashBoard
_phone_on_pad_classicModeFromSplashBoard
_phone_classicModeFromSplashBoard
_classicModeFromSplashBoard
_classicModeFromSupportedTypes
_classicModeFromStateOverrides
_defaultClassicMode
_supportedTypeForClassicModeNone
_classicAppScaledPhoneOnPad
requiresHiDPI
_classicAppScaledPadOnPad
_classicAppScaledOnPhone
classicAppRequiresHiDPI
statusBarHidden
wantsFullScreen
_isAlreadyKnownToBeClassic
isMonarchLinked
applicationNextWakeDate
wakeTimerFired
initWithFireDate:serviceIdentifier:target:selector:userInfo:
scheduleInRunLoop:
_resumeForPeriodicWakeWithReason:
remoteApplication
systemAppSupportsLocalNotifications
badgeHasBeenSetLocally
badgeNumberOrString
disablesScreenJail
isCarDisplay
_baseSceneIdentifier
_nameForDisplayType:
isMedusaCapable
_defaultPNGNameFromSuspensionSettingsWithExpiration:
setStatusBarStyle:
setStatusBarHidden:
setDefaultStatusBarStyle:
setDefaultStatusBarHidden:
setDefaultPNGName:
setDefaultPNGExpirationTime:
_mainSceneCompabilityMode
setCompatibilityMode:
setInterfaceOrientation:
setProximityDetectionModes:
dismissSheetsForApplication:
unregisterRemoteViewsForApplication:
dataContainerURL
numberWithUnsignedInt:
_stringForApplicationState:
_stringForActivationState:
setHasBeenFrontmost:
voipClass
supportsRemoteNotificationBackgroundMode
signerIdentity
signatureState
isProvisioningProfileValidated
externalAccessoryProtocols
uninstallCapability
effectiveBoolValueForSetting:
initWithBundleIdentifier:
bs_dateByAddingDays:
isAfterDate:
_update32BitDeprecationAlertTiming
_shouldShow32BitDeprecationAlert
initWithApplication:dismissalHandler:
setAssociatedWithDisplay:
terminationAssertionsForBundleID:
terminationAssertionsForBundleID:withReason:
_transientResumeForType:
stringByAppendingFormat:
_resumeDurationForTransientType:
_transientIdentifier
initWithBundleIdentifier:flags:reason:name:withHandler:
setFlags:
_transientSuspendForTimerFired:
setFireDate:
prefersSavedSnapshots
disablesClassicMode
usesSplashBoard
launchImageFile
launchInterfaceFileName
statusBarStyleOverrides
setRepresentation
invalidateStatusBarStyleOverridesAssertions:
_suspendForPeriodicWakeTimerFired:
_setActivationSettings:
_setDeactivationSettings:
_setStateSettings:
domainsToPreheat
UTF8String
backgroundStyleForRequestedBackgroundStyle:
wallpaperStyle
showsProgress
disallowsNotificationCenter
isControlCenterAllowedInApps
disallowsControlCenter
placeholdersByDisplayID
carPlayDeclaration
pathForResource:ofType:
initWithContentsOfFile:
_defaultDisplayState
keysOfEntriesPassingTest:
removeObjectsForKeys:
isCacheCleaningTerminationAssertionHeld
_applicationIconImageForBundleIdentifier:format:scale:
isBeta
uninstallApplication:
device
interactionAffordances
layoutJustification
screenSupportsFocus
screenBounds
screenScale
traitCollection
isACBackSupported
isAmbientBrightnessNighttime
isConnectedWirelessly
isGeoSupported
isKnownVehicle
isOEMIconVisible
layoutId
launchUsingSiri
preparePluginForActivationEvent:eventSource:afterInterval:
siriActivationOptions
launchUsingMusicUIService
isAirPlayDisplay
isRestrictedAirPlayDisplay
isiPodOnlyDisplay
isMusicOnlyDisplay
applicationState
appStateKeysToPrefetch
activationStateIsTransitory:
shouldHaveContextsForActivationState:
windowContextHostManager:overrideRequester:
windowContextHostManager:shouldEnableContextHostingForRequester:priority:
sceneHostManager:overrideRequester:
sceneHostManager:shouldEnableHostingForRequester:priority:
iconPriority:
icon:defaultImageWithFormat:
iconDisplayName:forLocation:
iconCanEllipsizeLabel:
iconCanTightenLabel:
iconProgressState:
iconProgressPercent:
iconProgressIsPaused:
iconBadgeNumberOrString:
iconFormattedAccessoryString:
iconAccessoryType:
iconIsRecentlyUpdated:
iconIsBeta:
iconSupportsUninstall:
iconCompleteUninstall:
iconAllowsLaunch:
icon:launchFromLocation:context:
dynamicApplicationShortcutItems
setDynamicApplicationShortcutItems:
_dataStore
applicationIconDidChange
bundleContainerPath
modificationDate
purgeAllCaches
hasHiddenTag
shouldSuppressAlertForSuppressionContexts:sectionIdentifier:
hasShownDataPlanAlertSinceLock
setHasShownDataPlanAlertSinceLock:
_doingBackgroundNetworking
_setDoingBackgroundNetworking:
setUsesEdgeNetwork:
setUsesWiFiNetwork:
shouldSuppressUserNotificationPermissionAlert
isSetup
isWebApplication
hasGameCenterData
shouldLaunchPNGless
shouldLaunchWithLiveContentASAP
_additionalDisplayQualification
_pathIfFileExistsAtPath:
_hasActivatedOnce
_defaults
hasStartedLaunching
didCreateScene:
willAnimateActivation
didAnimateActivation
willAnimateDeactivation:
didAnimateDeactivation
willAnimateActivationOnStarkScreenController:
didAnimateActivationOnStarkScreenController:
willAnimateDeactivationOnStarkScreenController:
didAnimateDeactivationOnStarkScreenController:
markNewlyInstalled
markRecentlyUpdated
shouldAutoLaunchOnBootOrInstall
autoLaunchIfNecessaryOnBootOrInstall:
isStatusBarForceHidden
setStatusBarForceHidden:forReason:animationSettings:
statusBarEffectiveStyleRequestWithStyle:
statusBarEffectiveStyleRequestWithStyleOverrides:
statusBarHiddenForCurrentOrientation
setForceSuppressStatusBarOverrides:
overrideDefaultInterfaceOrientation:
removeDefaultInterfaceOrientationOverride
_recalculateApplicationSupportedTypes
classicAppFullScreen
classicDefaultStatusBarHidden
spdResumeForTrafficRequested
noteDidOpenURL:
requiresRLNDataProvider
noteBadgeSetLocally
lastBadgeClearTime
disablesJailForDisplay:
carScene
_isCarSceneID:
mainSceneInitialClientSettingsWithSettings:
setApplicationState:
hasBeenFrontmost
supportsBackgroundAppRefresh
provisioningProfileValidated
prepareForUninstallation
resetLaunchAlertForType:
_terminationAssertionAdded:
_terminationAssertionRemoved:
resumeToQuit
resumeForContentAvailable
_prefersSavedSnapshots
_applicationRestorationCheckState
_setApplicationRestorationCheckState:
defaultLaunchImageFile
takeStatusBarStyleOverridesAssertion:
releaseStatusBarStyleOverridesAssertion:
statusBarStyleOverridesAssertionsByStyleOverride
_bumpActivationCountBy:
setBackgroundStyleForRequestedBackgroundStyle:
setShowsProgress:
showSystemVolumeHUDForCategory:
watchdogExtension
_alertImpersonatorForWorkspaceType:
canAccessDisplay:
setReachabilitySupported:
xpcEventPort
setXpcEventPort:
statusBarStyleOverridesToSuppress
setRestoring:
defaultClassicModeOverride
setDefaultClassicModeOverride:
setMainSceneID:
_remoteApplication
_lazy_defaults
_activationContextStack
_pendedClearingActivationSettings
_process
_xpcEventPort
_threadUnsafe_processState
_lastExitContext
_failedLaunchWindowStartDate
_nonUserKillExitWindowStartDate
_activationToken
_hasBeenFrontmost
_isBeingDebugged
_isAnimatingActivation
_isAnimatingDeactivation
_activationCount
_failedLaunchCount
_failedLaunchCountForVoIPBehaviors
_nonUserKillExitCount
_activationState
_isMutatingActivationState
_applicationState
_periodicWakeProcessAssertion
_periodicWakeSuspendTimer
_applicationWakeTimer
_nextApplicationWakeDate
_transientProcessAssertion
_transientSuspendTimer
_transientAssertionType
_alertImpersonatorsByWorkspaceType
_uninstalled
_hasBadgeValue
_lastBadgeClearTime
_dataFlags
_dataFlagsIsSet
_hasShownDataPlanAlertSinceLock
_calculatedSupportedTypes
_supportedTypes
_defaultClassicModeOverride
_currentClassicMode
_alertSuppressionContextsBySectionIdentifier
_statusBarForcedHiddenReasons
_statusBarStyleOverridesAssertions
_statusBarStyleOverridesToSuppress
_statusBarStyleOverridesAssertionsByStyleOverride
_suppressVolumeHudCategories
_modalAlertPresenter
_launchAlerts
_applicationDataStore
_lastDeprecationPresentationDate
_minimumBrightnessLevel
_showsProgressCount
_isRestoringApplicationFromHiding
_mainSceneID
_whitePointAdaptivityStyle
_bundleIdentifier
_appSnapshotSequenceID
_needsMainScreenSnapshotsDownscaled
hitTest:withEvent:
defaultTelephonyCenter
callEventHandler:
handleCallControlFailure:
SBTelephonyDaemonRestartHandler
updateSpringBoard
telephonyAudioChangeHandler
stringByResolvingSymlinksInPath
_postDataConnectionTypeChanged
TTYSoftwareEnabled
registerUpdateBlock:forRetrieveSelector:withListener:
TTYHardwareEnabled
brickedDevice
setNetworkRegistrationEnabled:
_updateState
updateCalls
removeFormattedPhoneNumberFromGlobalPreferences
playSoundOnBasebandReset
_updateDataConnectionType
sharedSystemPathMonitor
addObserver:forKeyPath:options:context:
_postStartupNotification
callStackReturnAddresses
arrayWithObject:
performSelector:withObject:afterDelay:inModes:
_serverConnection
queue_setFastDormancySuspended:withConnection:
_performQueryInBackground:withMainQueueResultHandler:
updateCallForwardingIndicator
setIdleModeText:
isEmergencyCallActive
displayedCallFromCalls:
status
callDuration
SIMStatus
needsUserIdentificationModule
setCallForwardingIndicator:
registrationStatus
_resetModemConnectionType
allApplications
mobilePhone
_stopFakeService
_cachedCTRegistrationDisplayStatus
_setRegistrationStatus:
_updateRegistrationNow
updateAirplaneMode
setIncomingCall:
setActiveCall:
setHeldCall:
setOutgoingCall:
currentCallCount
currentCalls
notificationWithName:object:
activeCall
heldCall
setOperatorName:
_fetchOperatorNameWithCompletion:
updateLocale
homeCountryCode
_updateLastKnownNetworkCountryCode
resourceSpecifier
initWithDouble:
initWithFloat:
outgoingCall
incomingCall
destinationID
faceTimeURLWithDestinationID:addressBookUID:audioOnly:
initWithFormat:
callWithStatus:
isConferenced
_fastPickedRouteForCall
displayedCall
audioCategory
hasCellularTelephony
routeForCategory:
_callCountForService:
disconnectCall:
resumeCall:
disconnectAllCalls
disconnectCurrentCallAndActivateHeld
_serverConnectionDidError:
data
writeToFile:options:error:
_setSuppressesCellDataIndicator:
_lteConnectionShows4G
isPrimaryInterface
isAssociated
currentNetworkName
_setIsUsingWiFiConnection:
_setSuppressesCellIndicators:
setAirplaneMode:
refresh
airplaneMode
isUsingVPNConnection
setPendInSetupIfNotAllowed:
_setCurrentActivationAlertItem:
initWithFailureCount:
isEmergencyCall
_setIsInEmergencyCallbackMode:
_cancelFakeCellServiceTimer
_setCellRegistrationStatus:
_stopFakeCellService
_cancelFakeServiceTimer
_reallySetOperatorName:
_cachedCTRegistrationCellStatus
_startFakeServiceIfNecessary
cellularRadioCapabilityIsActive
registeredWithoutCellular
airplaneModeChanged
_avSystemControllerDidError:
containsCellularRadio
hasCellularData
emergencyCallSupported
inCallDuration
callForwardingIndicator
_phoneApp
setLimitTransmitPowerPerBandEnabled:
setFastDormancySuspended:
_updateNetworkLocale
lastKnownNetworkCountryCode
updateDisplaySettings:forOutgoingCallURL:outURL:
incomingCallExists
outgoingCallExists
multipleCallsExist
inCallUsingSpeakerOrReceiver
callWouldUseReceiver:
shouldHangUpOnLock
disconnectIncomingCall
isLoggingCallAudio
_setIsLoggingCallAudio:
dumpBasebandState:
MALoggingEnabled
isNetworkRegistrationEnabled
_suppressesCellDataIndicator
_updateModemDataConnectionTypeWithCTInfo:
setIsInAirplaneMode:
isUsingSlowDataConnection
isTTYEnabled
observeValueForKeyPath:ofObject:change:context:
copyMobileEquipmentInfo
copyTelephonyCapabilities
_provisioningUpdateWithStatus:
postponementStatusChanged
_setCachedCTRegistrationCellStatus:displayStatus:forcedHome:
_pretendingToSearch
_carrierBundleChanged
_setSignalStrength:andBars:
signalStrength
signalStrengthBars
_operatorBundleChanged
operatorName
cellRegistrationStatus
_setSIMStatus:
registrationCauseCode
isNetworkTethering
numberOfNetworkTetheredDevices
_setIsNetworkTethering:withNumberOfDevices:
_containsCellularRadio
_hasCellularTelephony
_hasCellularData
_cachedCTRegistrationIsForcedHome
_cellRegistrationStatus
_registrationStatus
_fakeServiceTimer
_fakeCellServiceTimer
_signalStrengthHasBeenSet
_signalStrength
_signalStrengthBars
_operatorName
_lastKnownNetworkCountryCode
_usingWifi
_usingVPN
_callForwardingIndicator
_wirelessModemDynamicStoreQueue
_queue_wirelessModemDynamicStore
_queue_wirelessModemDynamicStoreSharingKey
_isNetworkTethering
_numberOfNetworkTetheredDevices
_hasShownWaitingAlert
_activationAlertItem
_numActivationFailures
_inEmergencyCallbackMode
_loggingCallAudio
_radioPrefs
_needsUserIdentificationModule
_simStatus
_suppressesCellIndicators
_modemDataConnectionType
_modemDataConnectionTypeIsKnown
_fallingBackToCellular
_cellularFallbackWatcher
_queue_fastDormancySuspendAssertion
_systemPathMonitor
_incomingCall
_activeCall
_heldCall
_outgoingCall
dataWithContentsOfFile:
propertyListWithData:options:format:error:
isShowingSheetsForApplication:
dataPlanActivationPromptCount
initWithAccountURL:newAccount:promptToDisable:
setDataPlanActivationPromptCount:
carrierName
initWithCarrierName:newAccount:
initWithAccountURL:carrierName:newAccount:
initWithAccountURL:expirationDate:
initWithAccountURL:usage:
bundleWithPath:
transformAnalyzer
setPinchingWeight:
setRotationWeight:
setTranslationWeight:
initWithPoints:pointCount:
recognizesHorizontalPanning
recognizesVerticalPanning
hasSignificantMotionToBegin
dominantComponent
_directionallyAcceptMotion
log:
translation
_convertPortraitPoint:toOrientation:
_arcCenter
_arcSize
smoothedInfo
defaultTemplates
incrementalGestureMotionForCandidate:withTransformAnalyzerInfo:
setRecognizesHorizontalPanning:
setRecognizesVerticalPanning:
_recognizesHorizontalPanning
_recognizesVerticalPanning
kitImageNamed:
_chromeStatusBarImageForInterfaceOrientation:
_initWithFrame:
setEdgeAntialiasingMask:
_addBlackBackground
imageForInterfaceOrientation:
setMagnificationFilter:
CGImage
setImage:
setAllowsDisplayCompositing:
sbs_hasAlpha
_initWithView:screen:needsBlackBackground:
initWithContextHostView:screen:
IOSurface
addContentView:
setContentOrientation:
setAllowsGroupOpacity:
initWithContainingBounds:contentFrame:statusBarFrame:snapshot:snapshotOrientation:doubleHeightStatusBar:preventSplit:needsZoomFilter:asyncDecodeImage:forJail:
initWithImage:screen:opaque:
initWithView:containingContextHostSnapshot:screen:
surface
_hasImage
_surface
initWithClippingFrame:fullscreenZoomView:
_fullscreenZoomViewToClip
_notifyView
whiteColor
setTextColor:
setTextAlignment:
initWithFrame:textContainer:
setEditable:
setSelectable:
sizeThatFits:
flashScrollIndicators
_textView
setText:
alertStringAvailable:
setAllowsResponse:
defaultSizeForStyle:
displayString:
startAnimating
allowsResponse
defaultInterButtonSpacing
defaultSideMarginForSingleButton
defaultBottomMargin
_centerTextView:inRect:
initWithTitle:icon:color:frame:
setTitleColor:forState:
_cancelClicked
_okayClicked
_replyClicked
_setupResponseBar
_replyView
defaultSizeForOrientation:
initWithSize:
setBarStyle:
setBackgroundImage:forBarMetrics:
setTranslucent:
initWithTitle:
initWithTitle:style:target:action:
setLeftBarButtonItem:
setRightBarButtonItem:
pushNavigationItem:animated:
statusBarHeight
defaultFrameForInterfaceOrientation:
systemFontOfSize:
setBorderStyle:
setInsertionPointColor:
setUndoEnabled:
setKeyboardAppearance:
setMasksToBounds:
setBorderColor:
setBorderWidth:
textInputTraits
setAcceptsFloatingKeyboard:
setAcceptsSplitKeyboard:
setAutocorrectionType:
setTextLoupeVisibility:
setLearnsCorrections:
_charsRemainingView
_updateCharsRemaining
_responseMessageView
_textChanged:
becomeFirstResponder
endEditing:
textFieldShouldBeginEditing:
textFieldDidBeginEditing:
textFieldShouldEndEditing:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textField:shouldChangeCharactersInRange:replacementString:
textFieldShouldClear:
textFieldShouldReturn:
textField:shouldInsertText:replacingRange:
_dismissButton
_replyButton
_progressIndicator
_responseField
_allowsResponse
editingRectForBounds:
progressIndicatorStep
volumeStepUpForCurrentVolume:euVolumeLimit:
progress
volumeStepUp
wouldShowAtLeastAYellowBlockForVolume:euVolumeLimit:
setSubtitle:
initWithHUDViewLevel:
_updateImage
_updateLabels
setProgress:
_blockColorForValue:
redColor
_updateBlockView:value:blockSize:point:
volumeStepDownForCurrentVolume:euVolumeLimit:
setMode:
setHeadphonesPresent:
setEUVolumeLimit:
headphonesPresent
EUVolumeLimit
_mode
_headphonesPresent
_euVolumeLimit
_initializeEUVolumeLimits
_isCategoryAlwaysHidden:
setAttribute:forKey:error:
getActiveCategoryVolume:andName:
allowUserToExceedEUVolumeLimit
_isMusicPlayingSomewhere
currentRouteHasVolumeControl
changeActiveCategoryVolumeBy:fallbackCategory:resultVolume:affectedCategory:
_calcButtonRepeatDelay
_changeVolumeBy:
volumeStepDown
sendEUVolumeLimitAcknowledgementIfNecessary
_turnOnScreenIfNecessaryForEULimit:
_orderWindowOut:
_effectiveVolumeChanged:
_EUVolumeLimitChanged:
_EUVolumeEnforcementChanged:
_serverConnectionDied:
_volumeModeForCategory:
_HUDIsDisplayableForCategory:
_presentVolumeHUDWithMode:volume:
visibleHUDView
_volumeHUDViewWithMode:volume:
presentHUDView:autoDismissWithDelay:
_isVolumeHUDVisible
hideHUDView
visibleOrFadingHUDView
_isVolumeHUDVisibleOrFading
_userAcknowledgedEUEnforcement
getMediaVolume
volumeCategoryForAudioCategory:
setVolumeTo:forCategory:
getVolume:forCategory:
clearAlwaysHiddenCategories
lastDisplayedCategory
volumeHUDForCurrentCategory
setMediaVolume:
_debounce
_numberOfVolumeDecreasesSinceDownButtonDown
_alwaysHiddenCategories
_lastDisplayedCategory
_lastEventCategory
_hudHandledLastVolumeChange
_euDevice
_euVolumeLimitEnforced
_lastVolumeChangedWasBlocked
_volumeDownButtonIsDown
_volumeUpButtonIsDown
initWithPrivateStyle:
inputSettings
setStackingLevel:
setRenderingHint:
_setDrawsAsBackdropOverlayWithBlendMode:
animateWithDuration:animations:
animateWithDuration:delay:options:animations:completion:
setAlignment:
boldSystemFontOfSize:
initWithString:attributes:
drawAtPoint:
_flatImageWithColor:
displaysLabel
_updateBackdropMask
_updateBlockView
numberOfProgressIndicatorSteps
cancelDismissal
dismissWithCompletion:
subtitle
_level
_title
_subtitle
_image
_showsProgress
_progress
_blockView
_backdropMaskImageView
initWithTransitionContextProvider:overlay:
initWithTransitionContextProvider:
activatingApps
animationWrapperViewForLayoutState:interfaceOrientation:
elementWrapperViews
appView
setDisplayMode:options:withAnimationFactory:completion:
dismissWithAnimation:
_noteAnimationDidFinish
_cleanupAnimation
_waitsForApplicationActivationIfNecessary
_animationProgressDependencies
_shouldDismissBanner
_prepareAnimation
_startAnimation
animationSettings
waitsForAppActivation
setWaitsForAppActivation:
_overlay
_animationSettings
_waitsForAppActivation
_layoutWrapperView
initWithType:displayIdentifier:appSuggestion:
uniqueStringRepresentation
appSuggestion
_appSuggestion
handleLongBackPress
handleEndCallButtonPress
isPendingScreenUnblankAfterCACommit
isProximityDetectionEnabled
resetProximityCalibration
setProximityDetectionEnabled:
_proximityDetectionEnabled
_getTransitionWindow
rootAnimationSettings
reducedMotionSettings
centralAnimationSettings
mainDisplayLayoutViewController
animationWrapperViewForLayoutState:
elementWrapperViewForLayoutRole:
snapshotViewAfterScreenUpdates:
_finishedZooming
_layoutAnimationWrapperView
_snapshotView
_persistentSnapshotOverlay
setShowsDateView:
setShowsStatusText:
sb_isEqualToLegibilitySettings:
statusTextView
_titleFont
setNumberOfLines:
setAdjustsFontSizeToFitWidth:
_setTitleLabel:
_subtitleLabel
_subtitleFont
_setSubtitleLabel:
initWithEffect:
_primaryActionFont
_buttonTapped:
_setPrimaryActionButton:
setTitle:forState:
buttonWithType:
_secondaryActionFont
_setSecondaryActionButton:
overrideFooterText
setOverrideFooterText:
_imageView
_setImageView:
defaultSize
suggestedFrameForPageControlForPageBounds:desiredSize:
suggestedFrameForStatusView:inView:withInsets:
setNeedsUpdateConstraints
updateConstraints
lineHeight
centerXAnchor
constraintEqualToAnchor:
setActive:
leadingAnchor
constraintGreaterThanOrEqualToAnchor:constant:
topAnchor
bottomAnchor
firstBaselineAnchor
_positionBottomElementWithLayoutAnchor:lessThanOrEqual:
trailingAnchor
constraintLessThanOrEqualToAnchor:constant:
lastBaselineAnchor
constraintEqualToAnchor:constant:
heightAnchor
constraintEqualToConstant:
widthAnchor
constraintGreaterThanOrEqualToConstant:
centerYAnchor
constraintsWithVisualFormat:options:metrics:views:
activateConstraints:
setTranslatesAutoresizingMaskIntoConstraints:
_primaryActionButton
_secondaryActionButton
_lightSystemFontOfSize:
callToActionFont
handleSecondaryActionForView:
handlePrimaryActionForView:
titleText
setTitleText:
subtitleText
setSubtitleText:
primaryActionButtonText
setPrimaryActionButtonText:
secondaryActionButtonText
setSecondaryActionButtonText:
footerText
setFooterText:
showsStatusText
showsDateView
_overrideFooterText
_statusTextViewController
_showsStatusText
_needsTitleConstraints
_needsSubTitleConstraints
_needsPrimaryActionConstraints
_needsSecondaryActionConstraints
_needsImageConstraints
_showsDateView
sbf_homeScreenFolderGraphicsQuality
displayScale
_reduceTransparencyEnabledStateChanged
_updateForHavingReduceTransparencyOn:
_setGroupName:
_updateEffect
_isCurrentlyExpanding
blurRadiusForBackgroundViewInView:
_effectScale
setColorTint:
setBlurRadius:
_blurEffect
sb_emptyBlurEffectWithScale:
blurs
_effectiveEmptyEffect
setEffect:
_deviceSupportsOpaqueFrozenBlurs
drawViewHierarchyInRect:afterScreenUpdates:
expanding
transitionCancelled
setTransitionCancelled:
setBlurs:
setExpanding:
setFrozen:
frozen
_blurView
_blurViewSnapshot
_reduceTransparencyTintView
_debugFreezingView
_transitionCancelled
_blurs
_expanding
_frozen
initWithReference:
_invalidate
immutableSet
destroyScene:withTransitionContext:
synchronizeChanges:
UIScreen
isConnectedToDisplay:
_sceneWindowLayoutStrategy
_scene
releaseForScene:
_newLayoutController
workspaceIdentifier
_updateStateForScene:withSettings:
initWithScenes:invalidationHandler:
appendArraySection:withName:skipIfEmpty:
appendString:withName:
isUISubclass
underLock
sendResponse:
initWithSettings:
defaultLayoutStrategy
_noteDidChangeToVisibility:forScene:
retainForScene:
bundleForClass:
watchdogPolicy
_snapshotRequestsForApplication:scene:settings:
initWithScene:requests:expirationInterval:responseHandler:
actions
setWithSet:
setActions:
_noteDidCommitUpdateForScene:
_hostingPolicyForScene:
animationFence
_shouldFenceTransitionForScene:updatedClientSettingsDiff:oldClientSettings:transitionContext:
_synchronizeDrawingWithFence:
_scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:
_handleAction:forScene:
sceneLayoutController:noteHasVisibleElements:
sceneManager:scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:
sceneManager:scene:didReceiveActions:
sceneManager:hostingPolicyForScene:
sceneManager:createDefaultTransitionContextForScene:
allScenes
alertScenes
windowScenes
externalApplicationScenes
daemonScenes
pluginScenes
scenesForWorkspaceWithID:
assertBackgroundedStatusForScenes:
additionalActionsForApplication:withTransitionContext:
_state
_selfReference
_layoutController
_layoutControllerHasVisibleElements
_policyAggregator
_allScenes
_alertScenes
_windowScenes
_daemonScenes
_pluginScenes
_workspaceScenes
_externalApplicationScenes
_externalForegroundApplicationScenes
_reportedExternalForegroundApplicationScenes
_assertedBackgroundScenes
_outgoingSnapshots
_incomingSnapshots
_layoutControllerCreationReentrancyGuard
sharedSystemClientAuthenticator
getCString:maxLength:encoding:
authenticateAuditToken:withResult:
tokenFromAuditToken:
authenticateAuditToken:forEntitlement:error:
localizedDescription
stringWithCString:encoding:
switcherServiceWithName:viewServiceClassName:
initWithUTF8String:
setModeLegacy:
sharedUIAppClientAuthenticator
validateAuditToken:error:
effectiveTopDisplay
updateStatusBarStateForDisplay:withAnimationFactory:
_synchronizeDrawingAcrossProcessesOverPort:
isShowingNowPlaying
handleUnhandledBack
rebootForReason:
authenticateAuditToken:
requestWithEnabler:disabler:
setShowsActivityIndicatorEverywhere:
addRequest:forKey:forDaemonPid:
removeRequestForKey:forDaemonPid:
authenticateAuditToken:error:
setShowsSyncActivityIndicator:
setShowsOverridesForRecording:
initWithBytesNoCopy:length:freeWhenDone:
setUserInfo:
enableLockScreenPluginWithContext:
disableLockScreenPluginWithContext:
revokeAuthenticationImmediatelyForPublicReason:
remoteLock:
canAddIcon
clearDesiredIconState
webClipWithIdentifier:
initialLaunchImage
_webAppIdentifierFromWebClipIdentifier:
_snapshotDirectory
stringByDeletingLastPathComponent
addBookmarkIconForWebClip:
addNewIconToDesignatedLocation:animate:scrollToList:saveIconState:
setIconToReveal:revealingPrevious:
tryScrollToIconToRevealAnimated:
uninstallIcon:animate:
leafIconForIdentifier:
reloadIconImage
visibleIconStateDisplayIdentifiers
registerRemoteContextID:forIdentifier:opaque:size:application:
unregisterRemoteIdentifier:application:
presentRemoteViewIdentifier:asSheetForApplication:requireTopApplication:animated:
dismissRemoteViewIdentifier:forApplication:animated:
setAppDisabledVoiceControl:bundleIdentifier:
authenticateAuditToken:forEntitlement:withResult:
defaultVisibleIconImageSize
maxRowCountForListInRootFolderWithInterfaceOrientation:
maxColCountForListInRootFolderWithInterfaceOrientation:
maxIconCountForDock
maxListCountForFolders
exportState:
exportPendingState:includeMissingIcons:
exportFlattenedState:includeMissingIcons:
importIconState:
isMasqueradedLeafIdentifier:
prioritizedMasqueradeIconForIdentifier:
getStandardIconImageForLocation:
downloadingIconForBundleIdentifier:
homescreenIconImage
isIconVisiblyRepresented:
purgeCachedImages
bytes
initWithRed:green:blue:alpha:
dataWithBytesNoCopy:length:freeWhenDone:
applicationProcessForPID:
setConnectedToExternalAccessory:
previewCache
homeScreenSnapshot
bs_secureEncoded
lockScreenSnapshot
captureWarningSuppressionAssertionWithPort:reason:
dictionaryWithDictionary:
isStarkActive
wantsActivationEvent:eventSource:interval:
prepareForActivationEvent:eventSource:afterInterval:
handleActivationEvent:eventSource:withContext:
dismissAssistantViewIfNecessary:withAnimation:factory:completion:
postNotificationName:object:userInfo:deliverImmediately:
wallpaperConfigurationManager
setProceduralWallpaperIdentifier:options:forVariants:
bs_secureDecodedFromData:
getBestCropRect:zoomScale:forImageSize:portrait:parallaxFactor:
optionsWithName:parallaxFactor:zoomScale:supportsCropping:cropRect:portrait:hasVideo:stillTimeInVideo:
setWallpaperImage:wallpaperOptions:forVariants:
fileURLWithPath:
setVideoURL:forVariant:shoudCrop:relativeCropRect:
removeVideoForVariants:
wallpaperConfigurationForVariant:
wallpaperOptions
parallaxFactor
zoomScale
supportsCropping
cropRect
isPortrait
hasVideo
stillTimeInVideo
setVariant:
archivedDataWithRootObject:
_systemAnimationFenceExemptQueue
suspendWallpaperAnimationForReason:
_beginSuspendingMotionEffectsForReason:
resumeWallpaperAnimationForReason:
_endSuspendingMotionEffectsForReason:
performAsync:
application:didSetMinimumFetchInterval:
captureSuppressionAssertionWithPort:reason:
_setMesaUnlockingDisabled:forReason:
setDateFormat:
dateFromString:
setOverrideDate:
dataWithPropertyList:format:options:error:
enumerateKeysAndObjectsUsingBlock:
sbf_scaleImage:
sbf_CGImageBackedImage
imageWithCGImage:scale:orientation:
initWithEntitlement:additionalCredentials:
viewDidLayoutSubviews
statusBarFrame
setTextContainerInset:
doneButtonTapped:
setItems:
formattedAboutText
setAttributedText:
setScrollEnabled:
beginEditing
addAttribute:value:range:
endEditing
_aboutContentView
_navigationBar
interfaceWithProtocol:
exportedInterface
serviceViewControllerInterface
__shouldRemoteViewControllerFenceOperations
isStarkNowPlayingEntity
configureWithEntity:forElement:layoutState:
workspaceApplication
setUIApplicationElement:
setBundleIdentifier:
updateWithBuilder:
_lockedOnTop
setOrderOutCompletion:
hideAnimated:
_beginTimeTracking
_incrementCountForKey:
_endTimeTrackingAndReportWithKey:
showAnimated:
_restoreIconListIfNecessary
powerDown
powerDownView:incrementValueForAggdKey:
powerDownViewRequestCancel:
powerDownViewRequestPowerDown:
powerDownViewAnimateOutCompleted:
orderOutCompletion
_powerDownView
_orderOutCompletion
_aggdStartTime
_didShowBootSetupLogo:
_didHideBootSetupLogo:
URLForResource:withExtension:
initWithContentsOfURL:
_setStringOrdering:
_setLocalizedStrings:
_fetchLanguageFromTelephony
setupView
callToActionLabel
_resetDisplayedLocalizedStringsImmediately:
_transitionFromFakeBootLogoToWelcomeStrings
_stopCyclingLocalizedStrings
infoButton
_infoButtonTapped:
registerView:forRole:
_startCyclingLocalizedStrings
setViewState:
_startWifiScan
actionWithType:
sendAction:
_cancelWifiScan
_setStringCycleTimer:
_startCyclingLocalizedStringsWithDelay:
_localizedStrings
_currentLanguageIdentifier
_currentStringIndex
telephonyPrimaryLanguage
wifiPrimaryLanguage
preferredLanguagesForRegion:
uppercaseString
localizedStringWithFormat:
parentLocaleIdentifierForIdentifier:
enumerateObjectsWithOptions:usingBlock:
_importantLanguageIdentifiers
_setWifiPrimaryLanguage:
_setShouldResetOrderingOnNextCycle:
_cycleTimerDidFire:
removeObjectsInRange:
removeObjectsInArray:
indexSetWithIndexesInRange:
insertObjects:atIndexes:
_setCurrentStringIndex:
_updateDisplayedStrings
_currentStringsDictionary
setTitleString:forLanguage:
setText:forLanguage:animated:
stringsOrdering
_shouldResetOrderingOnNextCycle
fadeOut
fadeInImmediately:
activationInfoViewController
regulatoryInfoViewController
_regulatoryInfoButtonTapped:
setActivationInfoViewController:
setActivationInfoView:
regulatoryInfoButton
bs_addChildViewController:animated:transitionBlock:
removeTarget:action:forControlEvents:
bs_removeChildViewController:animated:transitionBlock:
setRegulatoryInfoView:
setRegulatoryInfoViewController:
initWithStyle:contentColor:
_updateWifiPrimaryLanguageFromGuessedCountries:
stringCycleTimer
_setTelephonyPrimaryLanguage:
statusBarAssertion
setStatusBarAssertion:
_setupManager
_currentStringsOrdering
_needsTransitionFromFakeLogoToWelcomeStrings
_cyclingLabels
_viewVisible
_canShowActivationInfo
_stringsOrdering
_stringCycleTimer
_activationInfoViewController
_telephonyPrimaryLanguage
_regulatoryInfoViewController
_wifiPrimaryLanguage
_updateSilentImage
setSilent:
isSilent
_silent
vibrateWhenSilent
vibrateWhenRinging
sharedMonitorForDisplayType:
currentLayout
elements
_keyboardDidShow:
_keyboardWillHide:
_noteSignificantTimeChanged:
_orientationLockChanged:
displayType
isUIApplicationElement
_bucketedElapsedTimeWithStartTime:
_saveOrientationLockAggdValues
layoutMonitor:didUpdateDisplayLayout:
layoutMonitor:didUpdateDisplayLayout:withContext:
_layoutMonitor
_currentOrientation
_currentOrientationStartTime
_currentElements
_isKeyboardOnScreen
_keyboardOnScreenStartTime
previousEntityForLayoutRole:
displayItemWithType:displayIdentifier:
startTransitionWithDisplayItem:presenting:fromDisplayMode:
_newSideSwitcherDynamicAnimationForPresenting:
setTransitionProgress:
setWantsPinResizeGrabber:withPercent:
endTransitionWithSuccess:
setWantsPinResizeGrabber:
_computeDoubleTapTimeout
_invalidateForFailureReason:
_invalidateForSuccess
walletPrearmRecognizer:didFailToRecognizeForReason:
walletPrearmRecognizerDidRecognize:
initWithDelegate:
startRecognizing
menuButtonSinglePress
menuButtonDoublePress
_timeout
_timer
_invalidated
overrideDate
controller:didChangeOverrideDateFromDate:
_startListeningForSignificantTimeChanges
_stopListeningForSignificantTimeChanges
defaultIconImageSize
currentDate
currentCalendar
drawIconInContext:imageSize:iconBase:date:calendar:format:
memoryMappedIconImageOfSize:scale:withDrawing:
_compositedIconImageForFormat:withBaseImageProvider:
setCompletionSpeed:
setCompletionCurve:
_completionSpeed
_completionCurve
setRequiredDirectionality:
_installTemplates
setTemplates:
logCategory
animationDistance
_cleanupDosido
defaultDuration
initWithAnimationSettings:
startSteppingAnimationsInView:
_prepareDosido
_noteAnimationCompleted:
_animateDosidoWithFactory:completion:
setOrigin:
spacingBetweenViews
direction
stepPercentage
setStepPercentage:
finishSteppingForwardToEndWithCompletion:
finishSteppingBackwardToStartWithCompletion:
animateDosidoWithFactory:completion:
cancelDosido
finishSteppingForwardToEnd
finishSteppingBackwardToStart
isStepped
initWithParentView:fromOrientation:
_transformedContentView
animationContainerView
setStepped:
fromOrientation
setSpacingBetweenViews:
isTransparent
setTransparent:
fromView
setFromView:
toView
setToView:
_parentView
_transformContainer
_transformedContent
_stepper
_completion
_animationCompleted
_stepped
_cleanedUp
_hidden
_transparent
_fromOrientation
_spacingBetweenViews
_direction
_fromView
_toView
maxVisibleIconRowsInterfaceOrientation:
homescreenIconViewMap
addLayoutGuide:
icons
recycleViewForIcon:
layoutIconsNow
_wallpaperRelativeIconCenterForIconView:
setWallpaperRelativeImageCenter:
enumerateIconViewsUsingBlock:
iconImageCenter
_wallpaperRelativeIconCenterForIconImageCenter:
center
coordinateForIcon:
needsCompacting
folder
startCoalescingContentChangesWithRequestID:
compactIcons
subarrayWithRange:
_sendLayoutDelegateWouldHaveMovedIcon:
_layoutIcon:atIndex:createViewNow:pop:
stopCoalescingContentChangesForRequestID:
emptyPlaceholder
isEmpty
directlyContainsIcon:
firstFreeSlotIndexForType:
firstFreeSlotOrLastSlotIndexForType:
maxIcons
iconViewForIcon:
mappedIconViewForIcon:
originForIconAtIndex:
_popIconView:
_updateEditingStateForIcons:animated:
placeIcon:atIndex:
removedIcons
isDownloadingIcon
tryToReplaceIcon:withIcon:
insertIcon:atIndex:
setIconsNeedLayout
layoutIconsIfNeeded:domino:
insertIcon:atIndex:moveNow:pop:
iconAtIndex:
isEmptyPlaceholder
removeIconAtIndex:
indexForIcon:
isPlaceholder
baseIconViewClass
iconCoordinateForIndex:forOrientation:
centerForIconCoordinate:
defaultIconImageCenter
layoutFocusGuides
_setManualLayoutFrame:
nextIconFocusGuide
previousIconFocusGuide
_sendLayoutDelegateLayoutInvalidated
isLayoutReversed
setLocation:
beginAnimations:context:
setAnimationDuration:
setAnimationDelay:
endAnimations
indexForCoordinate:forOrientation:
isGrabbedIconPlaceholder
indexOfObjectPassingTest:
isFolderIcon
convertPoint:toView:
canReceiveGrabbedIcon:
showIconImagesFromColumn:toColumn:totalColumns:allowAnimations:
setPaused:
isEditing
setIsEditing:animated:
enumerateIconsUsingBlock:
setIconLabelAlpha:
iconRowsForSpacingCalculation
horizontalBumpForColumn:
rotationAnchor
initWithFrame:startIcon:endIcon:viewMap:coordinate:location:
prepareToCrossfade
coordinate
crossfadeWithDuration:
endIcon
layoutDelegate
iconListView:wouldHaveMovedIcon:
iconListViewLayoutInvalidated:
maxVisibleIcons
modelClass
tintColor
setModel:
viewMap
setLayoutDelegate:
setLayoutReversed:
setWallpaperRelativeFrame:
rowForIcon:
compactIcons:
containsIcon:
firstFreeSlotIndex
firstFreeSlotOrLastSlotIndex
placeIcon:atIndex:moveNow:pop:
insertIcon:atIndex:moveNow:
removeIcon:
setAlphaForAllIcons:
originForIcon:
centerForIcon:
viewForIcon:
coordinateForIconAtIndex:
indexOfIcon:
iconAtPoint:index:
showAllIcons
updateEditingStateAnimated:
isDock
setBouncedIcon:
bouncedIcon
setIconsLabelAlpha:
prepareToRotateToInterfaceOrientation:
performRotationWithDuration:
cleanupAfterRotation
_allowsFocusToLeaveViaHeading:
setEditing:
purged
setPurged:
setNextIconFocusGuide:
setPreviousIconFocusGuide:
setStatusBarHeight:
wallpaperRelativeFrame
_model
_viewMap
_statusBarHeight
_bouncedIcon
_removedIcons
_rotationContainers
_needsLayout
_rotating
_fadeView
_purged
_pageContainerGuide
_isEditing
_layoutReversed
_nextIconFocusGuide
_previousIconFocusGuide
_layoutDelegate
_wallpaperRelativeFrame
_initWithUserAuthenticationController:syncController:
_syncController
isInUse
shouldAutoUnlockForSource:
initWithUserAuthenticationController:
userAuthenticationController
_setSyncController:
_userAuthenticationController
_soundDefaults
calendarAlarmPath
sharedToneManager
currentToneIdentifierForAlertType:
ringtoneIdentifier
filePathForToneIdentifier:
shouldVibrateForCurrentRingerStateWithAudioCategory:
ringtonePath
shouldVibrateForCurrentRingerState
maxLabelSize
minimumInterIconSpacing
_applicationFrame
iconColumnsForScreenWidth:
insets
setInsets:
_insets
_lastFocusedView
setMessageString:
stop
initWithType:
playWithCompletionHandler:targetQueue:
playMessageReceived
alertWithString:address:
smsClass0AlertDisplayDidTapLearnMoreButton:
_unregisterForNotifications
_registerForNotifications
_initWithString:
showClass0SMSFromField
_dynamicReferenceBounds
convertPoint:fromView:
_bounds
visibleBounds
sb_setBoundsAndPositionFromFrame:
_updateCornerMask
scalingView
setAnchorPoint:
isSingleCoreDevice
setBrightness:
setNeedsLayoutOnGeometryChange:
setShowsSquareCorners:
setCornerRadiusEnabled:
applyCornerRadius:
initWithImageView:crossfadeView:
prepareGeometry
setMasksCorners:
setStretchAnchorPoint:
setCrossfadeFraction:
setIconBlurFraction:
setAppSnapshotBlurFraction:
setAppSnapshotCornerRadiusFraction:
setMorphFraction:totalScale:
cleanup
crossfadeView
masksCorners
performsTrueCrossfade
setPerformsTrueCrossfade:
stretchAnchorPoint
cornerRadiusEnabled
_containerView
_crossfadeView
_containerScaleX
_containerScaleY
_masksCorners
_performsTrueCrossfade
_cornerRadiusEnabled
_stretchAnchorPoint
setNeedsDisplayOnBoundsChange:
_updateTransitionsAnimated:
_clearDisplayLink
isCompleteWithView:
setActivePausedTransition:
setActiveStateTransition:
_updatePausedTransitionAnimated:
_updateStateTransitionAnimated:
setActiveFractionTransition:
_updateFractionTransitionAnimated:
_hasActiveTransitions
_ensureDisplayLink
completeTransitionAndUpdateView:
progressViewCanBeRemoved:
updateToPaused:
newTransitionToPaused:
newTransitionFromState:toState:
updateToFraction:
newTransitionToFraction:
updateView:withElapsedTime:
_onDisplayLink:
displayLinkWithTarget:selector:
setPreferredFramesPerSecond:
mainRunLoop
addToRunLoop:forMode:
drawInRect:blendMode:alpha:
_drawPieWithCenter:
_drawOutgoingCircleWithCenter:
_drawIncomingCircleWithCenter:
_drawPauseUIWithCenter:
sbf_bytesNeededForSize:scale:withContextType:
initWithLabel:slotLength:
_pieImagesMemoryPool
bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:
setLineWidth:
strokeWithBlendMode:alpha:
addArcWithCenter:radius:startAngle:endAngle:clockwise:
fillWithBlendMode:alpha:
sbf_imageFromContextWithSize:scale:type:pool:drawing:
_pieImageAtFraction:
_maskImage
addClip
bezierPathWithRect:
setState:paused:fractionLoaded:animated:
setCanAnimate:
setOverlayImage:
circleBoundingRect
overlayImage
canAnimate
backgroundAlpha
foregroundAlpha
setForegroundAlpha:
circleRadiusFraction
setCircleRadiusFraction:
pauseRadiusFraction
setPauseRadiusFraction:
displayedState
setDisplayedState:
displayingPaused
setDisplayingPaused:
displayedFraction
setDisplayedFraction:
activeStateTransition
activePausedTransition
activeFractionTransition
_activeStateTransition
_activePausedTransition
_activeFractionTransition
_modelState
_modelPaused
_modelFraction
_displayLink
_lastUpdate
_canAnimate
_displayingPaused
_overlayImage
_backgroundAlpha
_foregroundAlpha
_circleRadiusFraction
_pauseRadiusFraction
_displayedState
_displayedFraction
_classForTransitionFromState:toState:
_initWithFromState:toState:
functionWithName:
_solveForInput:
_updateView:
_totalElapsedTime
_duration
_timingFunction
_fromState
_toState
_fraction
setNeedsDisplayInRect:
_initToPaused:
_updateTimingFunction
_updateElapsedTimeFromFraction
_toPaused
_updateView:forDisplayedFraction:
_targetFraction
imageViewParentView
crossfadeViewParentView
_imageViewCornerView
_crossfadeViewCornerView
_daemonRestart:
_newSIM:
registerForSettingsAlerts
_delayedDismiss
sentResponse
errorStringForCode:
USSDStringAvailable:allowsResponse:
receivedString
setDismissOnActivate:
_receivedString
_dismissOnActivate
_delayedDismissTimer
addPrefNotification:withUserInfo:
prefsNotificationsAlertString
initWithPlugin:
initWithOverlayViewController:priority:
setCameraGrabberHidden:forRequester:
setMediaControlsHidden:forRequester:
setSlideToUnlockBlurHidden:forRequester:
setLogoutButtonHidden:forRequester:
setActivationBlock:
setDeactivationBlock:
initWithPlugin:lockScreenViewController:
disabledMesaMatching
setDisabledMesaMatching:
_overlayStyle
_disabledMesaMatching
exceptionWithName:reason:userInfo:
crossfadeType
setCrossfadeType:
_imageViewParentView
_crossfadeViewParentView
_crossfadeType
_motionEffectsSupported
_checkoutBackgroundImage
checkinValue:
_clearText
transform
_textOffset
accessoryTextForLocation:
_checkoutImageForText:highlighted:
_configureAnimatedForText:highlighted:withPreparation:animation:completion:
brightness
setImage:brightness:
_resizeForTextImage:
_overhang
setQueuedAnimation:
queuedAnimation
_crossfadeToTextImage:withPreparation:animation:completion:
_zoomInWithTextImage:preparation:animation:completion:
_zoomOutWithPreparation:animation:completion:
bezierPathWithOvalInRect:
setCountedMapKey:
checkoutValueForKey:creationBlock:
_createImageForText:highlighted:
_textFont
fontDescriptor
fontDescriptorByAddingAttributes:
defaultParagraphStyle
setLineBreakMode:
_maxTextWidth
boundingRectWithSize:options:attributes:context:
drawInRect:withAttributes:
_textPadding
checkoutAccessoryImagesForIcon:location:
configureAnimatedForIcon:location:highlighted:withPreparation:animation:completion:
configureForIcon:location:highlighted:
accessoryOriginForIconBounds:
displayingAccessory
setAccessoryBrightness:
prepareForReuse
_incomingTextView
_animating
_queuedAnimation
_displayingAccessory
_backgroundImage
_textImage
parallaxSettings
iconBadgeSettings
addKeyObserver:
_applyParallaxSettings
_motionEffects
_removeMotionEffect:
slidePixelsX
slideDirectionX
slidePixelsY
slideDirectionY
initWithKeyPath:type:
valueWithCATransform3D:
setMinimumRelativeValue:
setMaximumRelativeValue:
_addMotionEffect:
_parallaxSettings
_carScreen
imageNamed:inBundle:compatibleWithTraitCollection:
initWithFrame:style:
_newPasscodeView
passcodeLockViewForUsersCurrentStyle
initWithVariant:
resetLockScreenIdleTimerWithDuration:
passcode
notePasscodeEntryBegan
notePasscodeEntryCancelled
_passcodeLockViewPasscodeEntered:viaMesa:
initForMesaWithSource:successful:
initForPasscode:source:
_invalidOrFail:
responderWithSuccessHandler:failureHandler:invalidHandler:
processAuthenticationRequest:responder:
resetForFailedPasscode
passcodeLockViewPasscodeDidChange:
passcodeLockViewPasscodeEntered:
passcodeLockViewCancelButtonPressed:
passcodeLockViewEmergencyCallButtonPressed:
passcodeLockViewPasscodeEnteredViaMesa:
completionBlock
_attemptingUnlock
_completionBlock
_overrideDate
_layoutElementControllerForLayoutRole:
_transitioningFromLayoutElementControllerForLayoutRole:
_newAnimationWrapperViewForLayoutState:roleMask:displayMode:
isAuditHistoryEnabled
_addAuditHistoryItem:
_startAnimatingInDirection:
_didComplete
numberWithUnsignedInteger:
_animationFactory
animationWrapperViewForLayoutState:roleMask:interfaceOrientation:
initWithParentView:anchorEdge:orientation:
_newStretchTransformerForDirection:
_newDosidoAnimatorForDirection:
wallpaperMode
_animator:finishedAnimating:
transitionWasCancelled
settingsWithDuration:timingFunction:
startAnimatingInDirection:withContext:
_customizedDescriptionProperties
_transitionAnimator
enableSteppingWithAnimationSettings:
currentDirection
targetTransitionContext
endingTransitionContext
_currentAnimator
_currentDirection
_startingView
_targetView
_startingTransitionContext
_targetTransitionContext
_endingTransitionContext
_animationTransition
_initWithDomain:
_bindProperty:withDefaultKey:toDefaultValue:options:
_bindAndRegisterDefaults
setPresentationStyle:
setNotificationBehavior:
setEnablePlugin:
setEnableLostModePlugin:
setRestrictSiri:
setRestrictCamera:
setRestrictUnlock:
setRestrictLogout:
setRestrictTouchID:
setRestrictMediaControls:
setRestrictTodayCenter:
setRestrictControlCenter:
setRestrictNotificationCenter:
setHideStatusBar:
setHideTimeAndDate:
setHideSubtitle:
setSubtitleValue:
setDisableOnUnlock:
sectionWithRows:
possibleValues:titles:
enablePlugin
enableLostModePlugin
restrictSiri
restrictCamera
restrictUnlock
restrictLogout
restrictTouchID
restrictMediaControls
restrictTodayCenter
restrictControlCenter
restrictNotificationCenter
hideStatusBar
hideTimeAndDate
hideSubtitle
subtitleValue
disableOnUnlock
_enablePlugin
_enableLostModePlugin
_restrictSiri
_restrictCamera
_restrictUnlock
_restrictLogout
_restrictTouchID
_restrictMediaControls
_restrictTodayCenter
_restrictControlCenter
_restrictNotificationCenter
_hideStatusBar
_hideTimeAndDate
_hideSubtitle
_disableOnUnlock
_presentationStyle
_notificationBehavior
_subtitleValue
flush
synchronize
descriptorWithName:display:
setLockBacklight:
initWithDescriptor:
present
freeze
prepareForExitAndRelaunch:
actionWithOptions:
sendActionsToBackboard:
isMovementAllowedForHeading:direction:isRTL:isLeftHandDrive:
renderMode
setRenderMode:
invertsShape
setInvertsShape:
foregroundColor
setForegroundColor:
offset
setOffset:
sharpness
setSharpness:
lineWidth
layerClass
actionsToDeliver
setActionsToDeliver:
cameraApplication
_transitionAppViewWithProgress:
pageContent
flag:
addComponent:
dateView
hidden:
wallpaper
slideableContent
tinting
addRestrictedCapabilities:
_bailIfFaceTimeCallComesIn
_appearState
dashBoardHostedAppViewController:shouldTransitionToMode:
_maskView
_tintView
_appViewController
callClass
callForwardingReason
callBarringFacility
callingLineIDRestrictionValue
callingLinePresentationValue
connectedLineIDRestrictionValue
connectedLinePresentationValue
enabledString
serviceCenterAddress
ssServiceType
mmiProcedure
settingType
callingNamePresentationValue
_callForwardingString:
_callWaitingString:
_callBarringString:
_fixedDialingString:
_connectedLinePresentationString:
_callingLinePresentationString:
_connectedLineIDRestrictionString:
_callingLineIDRestrictionString:
_simLockString:
_serviceCenterAddressString:
_ssPasswordString:
_callingNamePresentationString:
_alertStringForPref:
appendString:
registerWithDataBuilder:
_registeredBuilder
_updateText
bs_setHitTestingDisabled:
_profileStateChangedNotification:
_updateTextForProfiles
_updateTextForLegal
updateTextsWithBlock:
dashBoardStatusTextViewControllerContentDidChange:
_updateTextForDeviceInformation
_updateTextForSupervision
deviceIfLostMessage
deviceAssetTag
setDeviceInformationText:
lockScreenDefaults
showSupervisionText
isSupervised
cloudConfigurationDetails
modelSpecificLocalizedStringKeyForKey:
setSupervisionText:
showLegalText
_legalString
setInternalLegalText:
_profileConnection
uniqueIdentifier
isCallContinuitySuggestion
notificationCenterSettings
bounceSettings
_resetToInitialState
_setupSubviews
_setupSlideUpToAppGesture
_suggestedAppDidChange:
_setState:
_translateSlidingViewByY:
_screenBounds
_slideUpToAppRecognizerDidPan:
priority:
transitionContext
transitionSource:didEndWithContext:
_updateSlideUpToAppControllerWithCurrentSuggestedApp
isEligibleForLockScreen
_setTargetApp:withAppSuggestion:
showContinuityIcon
continuityIconType
performWithCurrentSuggestedAppAndApplication:
noteNotActivatingForAppSuggestion:fromSource:
isSiriSuggestion
slideController:didUpdateWithApplicationWithBundleIdentifier:
_activateApp:withAppInfo:andURL:animated:
slideController:prepareForSlideUpAppLaunchAnimated:
activityType
initWithIdentifier:activityTypeIdentifier:appSuggestion:launchSource:
noteActivatingForAppSuggestion:fromSource:
velocityInView:
slideControllerShouldBeginSliding:
_beginSlideWithYTranslation:
_updateSlideWithYTranslation:
_endSlideWithYTranslation:velocity:cancelled:
transitionSource:willBeginWithType:
startFetchingPayloadForAppSuggestion:
_prepareForSlideUpAnimation
appGrabberSlideUpVelocityThreshold
_finishSlideUpGesture
_animateSlideUpWithVelocity:completion:
_finishSlideDownGesture
_animateSlideDownWithVelocity:bounce:completion:
initWithReferenceBounds:settings:feedback:
beginBounceWithInitialFrame:targetFrame:velocity:removingGravityAtMidway:stepper:completion:
animateWithSettings:actions:completion:
_instantiateDynamicAnimationForTargetValue:withInitialVelocity:
_siriViewController
initWithApp:referenceSize:orientation:display:hostRequester:
setForcesStatusBarHidden:
transitionSource:didUpdateTransitionWithContext:
pluginController
viewPartiallyRevealedWithPercentRevealed:
_performSiriContinuity
_performCallContinuity
_performTargetAppContinuity
userActivityFromUUID:withError:
handleViewFullyRevealed
openURL:withCompletionHandler:
reactivateAlertForActivityContinuationWithActivityIdentifier:
_activateTargetAppAnimated:
slideController:requestedUnlockWithActionBlock:
_executeDeferredAppUpdateBlocks
dismissAssistantViewIfNecessary:withAnimation:
slideControllerRequestedGrabberView:
_slideUpToAppGrabberZoneForGrabber:
setActivationEvent:
setScreen:
viewControllerForActivationContext:
initWithValue:velocity:unitSize:
activeValue:ofType:
_setBoundaryPull:
addActiveValue:
setFriction:
_setDecelerationFactor:
hitTestEdgeInsets
appViewRequesterIdentifier:
appViewRequesterPriority:
assistant:viewWillDisappear:
assistant:viewDidDisappear:
isSliding
_setSlideUpToAppGestureRecognizer:
panGestureRecognizer
clippingView
_testSettings
_deferredAppUpdateBlocks
_executingDeferredAppUpdateBlocks
_currentYOffset
_targetApp
_targetAppInfo
_launchAppTransaction
_appDefaultImageView
_appBackgroundView
_slideUpToAppGestureRecognizer
_bounceSettings
_slideDownBounceAnimator
disableHostingForRequester:
_finishCommit
enableHostingForRequester:priority:
addMilestone:
removeMilestone:
removeAllMilestones
removeAllChildTransactions
starkScreenController
initWithAlertManager:toAlert:
_doCommit
fromEntity
initFromApp:toAlertImpersonator:starkScreenController:
toEntity
initWithActivatingApp:alertImpersonator:starkScreenController:
initFromApp:toNowPlayingWithStarkScreenController:
initFromNowPlayingToAlertImpersonator:starkScreenController:
satisfyMilestone:
_noteWillActivateApplicationOnMainScreen:underLock:
_effectiveTopEntity
_newAnimationFromAppToApp
_newAnimationFromLauncherToApp
_newAnimationFromAppToNowPlaying
_newAnimationFromNowPlayingToApp
animationController:willBeginAnimation:
animationControllerDidFinishAnimation:
_activatingAlert
_animatedAppDeactivation
_mainScreenAppThatWillBeActivated
_mainScreenAppThatWillBeActivatedObserver
_serviceAvailabilityChanged:
hasAlertOfClass:
initWithTitle:bodyText:
initWithFolder:orientation:viewMap:context:
setImage:forState:
_scrollButtonPressed:
statusBarEdgeInsetsForConfiguration:
iconLayoutOverrideStrategy
preservesCurrentListOrigin
layoutInsets
_listViewSideInsetForBounds:
iconListViewCount
currentPageIndex
_updateScrollButtonStatesForIndex:
resetIconListViews
_evaluateScrollingForListViewsIfNecessary
updateIconListViews
iconListViews
_updateIconListFrames
_updatePageControlToIndex:
_setScrollingDisabled:forReason:
setCurrentPageIndex:animated:
initWithFolder:orientation:viewMap:
setInteractionAffordances:
_newPageControl
_offsetToCenterPageControlInSpaceForPageControl
_layoutSubviews
shouldInstallFocusGuides
_buttonUXEnabled
_scrollLeftButton
_scrollRightButton
_scrollButtonSize
_listViewInsets
_statusBarInsets
averageColorForVariant:
contrastForVariant:
vibrantSettingsWithReferenceColor:referenceContrast:legibilitySettings:
setVibrantSettings:
supportsVibrancy
updateVibrantView:backgroundView:
_sb_safeAddObject:
_sb_enqueue:
_sb_dequeue
_sb_peek
componentForType:property:
token
updateWithMessage:requestFlags:
initWithMessage:replyPort:requestFlags:auditToken:
_userNotificationDone:
dispatchUserNotificationFromMachMessage:auditToken:
idleTimerSettingsForProvider:logBuilder:
idleTimerForSettings:logBuilder:
addStep:
initWithMode:interval:reportUserEvents:
initWithInterval:
_concreteTimerForMode:interval:reportUserEvents:logBuilder:
initWithWarnTimer:expireTimer:resetPolicy:unwarnPolicy:unwarnInterval:
_warnTimerForSettings:logBuilder:
updateSettingsForSecurityDefaults:logBuilder:
updateSettingsForStore:logBuilder:
updateSettingsForSimDefaults:logBuilder:
updateSettingsForProfile:logBuilder:
updateSettingsForPrototypeSettings:logBuilder:
sanitizeSettingsAfterInitialSetup:logBuilder:
updateSettingsForDefaultWarnInterval:logBuilder:
updateSettingsForWorkspace:logBuilder:
updateSettingsForUnlockedWithMesa:logBuilder:
updateSettingsForBatterySaverMode:logBuilder:
updateSettingsForFaceDown:logBuilder:
updateSettingsForWarnInterval:logBuilder:
updateSettingsForDuration:settings:logBuilder:
sanitizeSettingsForLockscreenDefaults:logBuilder:
sanitizeSettingsAfterSetup:duration:logBuilder:
idleTimerDefaults
disableAutoDimExists
effectiveValueForSetting:
prototypeControllerSettings
preventLockover
minimumLockscreenIdleTime
hasBiometricAuthenticationCapabilityEnabled
pocketState
idleTimerForProvider:logBuilder:
disabledTimer
sanitizeTotalDuration:logBuilder:
sanitizeWarnInterval:logBuilder:
hasRegisteredViewControllerForIdentifier:
allValues
isolatedViewController
initWithIsolatedViewController:
unregisterViewControllerForIsolationIdentifier:
appendDictionarySection:withName:skipIfEmpty:
appendDictionarySection:withName:multilinePrefix:skipIfEmpty:objectTransformer:
registerViewController:forIsolationIdentifier:
registerRequester:forIsolationIdentifier:
unregisterRequester:forIsolationIdentifier:
_addHIDEventDeferralWithSourceIdentifier:forReason:addition:
_removeHIDEventDeferralWithSourceIdentifier:forReason:removal:
_identifiersToViewControllers
_identifiersToRequesters
_deferralContextIdsToReasons
serviceBundleIdentifier
serviceClassName
serviceViewControllerProxy
setPreferredContentSize:
getPreferredContentSizeWithReplyBlock:
_getPreferredContentSizeWithReplyBlock:
viewServiceDidTerminateWithError:
setServiceClassName:
_serviceClassName
_serviceHasSetPreferredContentSize
arrayWithCapacity:
setAllowInSetup:
setPendWhileKeyBagLocked:
setAllowedBundleIDs:
setAllowInCar:
setDefaultResponseLaunchBundleID:
setDefaultResponseLaunchURL:
setKeyboardTypes:
setAutocapitalizationTypes:
setAutocorrectionTypes:
setIconImagePath:
setAttachmentImagePath:
setSoundPath:
setSoundID:
setSoundIDBehavior:
setVibrationPattern:
setSoundAlertType:
setSoundAlertTopic:
setAvControllerAttributes:
setAvItemAttributes:
initWithPath:
_safeLocalizedValue:withBundle:
setAlertHeader:
setAlertMessage:
setAlertMessageDelimiter:
setLockScreenAlertHeader:
setLockScreenAlertMessage:
setLockScreenAlertMessageDelimiter:
setDefaultButtonTitle:
setAlternateButtonTitle:
setOtherButtonTitle:
setTextFieldTitles:
setTextFieldValues:
_uiAlertActionStyleFromSBUserNotificationButtonPresentationStyle:
visibleAlertItem
deactivateAlertItem:reason:animated:
activateAlertItem:animated:
_performWithoutDeferringTransitions:
setRemoteServiceBundleIdentifier:
setRemoteViewControllerClassName:
setExtensionIdentifier:
extensionWithIdentifier:error:
setAlertExtension:
initForReadingWithData:
setRequiresSecureCoding:
setWithObjects:
decodeObjectOfClasses:forKey:
finishDecoding
setExtensionRequest:
instantiateViewControllerWithInputItems:connectionHandler:
requestViewController:fromServiceWithBundleIdentifier:connectionHandler:
cancelExtensionRequestWithIdentifier:
appendInt:withName:
_setActivated:
playPresentationSound
setTopic:
setExternalToneFileURL:
setShouldRepeat:
setMaximumDuration:
setExternalVibrationPattern:
setVibrationIdentifier:
initWithToneAlertConfiguration:
initWithPath:error:
initWithAVItem:vibrationPattern:repeats:maxDuration:controllerAttributes:
initWithSystemSoundID:behavior:vibrationPattern:
setMessage:
setPlaceholder:
setSecureTextEntry:
autocapitalizationType
autocorrectionType
setAutocapitalizationType:
setKeyboardType:
addTextFieldWithConfigurationHandler:
_displayActionButtonOnLockScreen
dismissIfNecessaryWithResponse:
actionWithTitle:style:handler:
addAction:
setPreferredAction:
setContentViewController:
_clearRemoteViewControllerIfPresent
_prepareNewAlertControllerWithLockedState:requirePasscodeForActions:
doCleanupAfterDeactivationAnimation
_sendResponseAndCleanUp:
textFields
_cleanup
deactivateForButton
sound
didDeactivateForReason:
didFailToActivate
undimsScreen
_publicDescription
shouldShowInLockScreen
allowMenuButtonDismissal
configure:requirePasscodeForActions:
performUnlockAction
allowLockScreenDismissal
allowInLoginWindow
behavesSuperModally
forcesModalAlertAppearance
dismissesOverlaysOnLockScreen
reappearsAfterUnlock
_noteVolumeOrLockPressed
willDeactivateForReason:
keyboardTypes
autocapitalizationTypes
autocorrectionTypes
textFieldTitles
textFieldValues
soundPath
soundID
soundIDBehavior
vibrationPattern
soundAlertType
soundAlertTopic
avControllerAttributes
avItemAttributes
alertHeader
alertMessage
alertMessageDelimiter
lockScreenAlertHeader
lockScreenAlertMessage
lockScreenAlertMessageDelimiter
defaultButtonTitle
alternateButtonTitle
otherButtonTitle
defaultResponseLaunchBundleID
defaultResponseLaunchURL
remoteViewControllerClassName
remoteServiceBundleIdentifier
contentViewControllerForAlertController
setContentViewControllerForAlertController:
alertExtension
extensionRequest
_alertSource
_replyPort
_portWatcher
_expirationTimer
_sentResponse
_token
_requestFlags
_alertHeader
_alertMessage
_alertMessageDelimiter
_lockScreenAlertHeader
_lockScreenAlertMessage
_lockScreenAlertMessageDelimiter
_defaultButtonTitle
_alternateButtonTitle
_otherButtonTitle
_soundPath
_soundID
_soundIDBehavior
_vibrationPattern
_soundAlertType
_soundAlertTopic
_avControllerAttributes
_avItemAttributes
_soundRepeatDuration
_soundStopTimer
_keyboardTypes
_autocapitalizationTypes
_autocorrectionTypes
_textFieldTitles
_textFieldValues
_creationTime
_defaultButtonTag
_unlockActionButtonTag
_replyFlags
_defaultResponseLaunchBundleID
_defaultResponseLaunchURL
_remoteViewControllerClassName
_remoteServiceBundleIdentifier
_contentViewControllerForAlertController
_defaultButtonActionStyle
_alternateButtonActionStyle
_otherButtonActionStyle
_allowedInLoginWindow
_canceled
_isActivated
_aboveLock
_dismissOnLock
_dontDismissOnUnlock
_behavesSuperModally
_allowMenuButtonDismissal
_forcesModalAlertAppearance
_dismissesOverlaysOnLockScreen
_configuredLocked
_configuredNeedsPasscode
_defaultResponseAppLaunchWaitingForPasscode
_deactivatingForPresentationUpdate
_sound
_processAssertion
_allowLockscreenDismissal
_extensionIdentifier
_alertExtension
_extensionRequest
colors
setColors:
locations
setLocations:
startPoint
setStartPoint:
endPoint
setEndPoint:
color
_colors
_accessoryNamesInLowPower
update
setCurrentlyVisible:
initWithDefaultVisible:bundleID:
defaultVisible
currentlyVisible
_bundleID
_defaultVisible
_currentlyVisible
_setNotifyStateThatSpringBoardIsShowingAMiniAlert:
_hideApplicationModalAlertsWithFence:
_showApplicationModalAlertsWithFence:
initWithIdentifier:forReason:queue:invalidationBlock:
_noteSpringBoardModalAlertStateChanged:
hideApplicationModalAlertsForReason:
_fencingTransitionContext:
setCanShowAlerts:
updateUISettingsWithTransitionBlock:
canShowApplicationModalAlerts
_addModalAlertPresenterIfNecessary:
_removeModalAlertPresenter:
_getSpringBoardPresenter
_activeModalAlertPresenters
_springBoardModalAlertPresenter
_hideApplicationModalAlertsAssertionWhileSBModalAlertsActive
appendFloat:withName:decimalPrecision:
wrapperWithState:
hostManager
animateWithFactory:actions:
_stateLookupForPriority:
beginDelayingHomescreenStyleChangesForReason:
setWallpaperStyleTransitionState:forPriority:forVariant:withAnimationFactory:
_backgroundColorForApp:
_setBackgroundColor:forBundleID:withAnimationFactory:
endDelayingHomescreenStyleChangesForReason:animationFactory:
_updateWallpaperAndBackgroundStatesForModifiedBundleID:animationFactory:
_effectiveStateForBundleID:
_effectivePriorityForBundleID:
setHomescreenStyle:forBundleID:priority:animationFactory:
setHomescreenStyleTransitionState:forBundleID:priority:animationFactory:
removeHomescreenStyleForBundleID:priority:animationFactory:
_bundleIDToApplicationTransitionStates
_bundleIDToApplicationAnimationTransitionStates
translationInView:
setBounces:
setShowsVerticalScrollIndicator:
setScrollsToTop:
setContentOffset:
_setHysteresis:
_iconEditingStateChanged:
_openFolderChanged:
_displayLaunched:
contentOffset
updateForRotation
setContentSize:
_notifyThaWeStartedShowingOrHiding
setContentOffset:animated:
_updateForFinalContentOffset
_updateForScrollingEnded
_updateScrollingEnabled
_isShowingSearch
applyPictureInPictureInsets:fromSource:duration:
isTracking
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
setTargetView:
setDisabled:forReason:
isActivated
targetView
isAnimatingResetOrReveal
_scrollView
_suppressObserverCallbacks
_panGestureRecognizer
_lastOffset
_disabledReasons
_isDismissing
_animatingResetOrReveal
initWithUserEventInterface:
isEqualToTimer:
resetWithInterval:mode:observer:
idleTimerDidRefresh:
builderWithObject:ofExpectedClass:
appendObject:counterpart:
isEqual
userEventTimerReceivedUserEvent:
userEventTimerPresenceTriggered:
userEventTimerPresenceExpired:
userEventTimerUserIdled:
userEventTimerUserUnidled:
idleTimerForExtension
_userEventTimer
_buttonForActionTitle:
bs_map:
_buttonView
setButtons:
actionButtonSettingsWithGraphicsQuality:
initWithColorSettings:
_buttonPressed:
buttonViewController:didSelectButtonAtIndex:
setButtonTitles:
preferredContentSize
_buttons
_dockEdgeForInterfaceOrientation:
setDockEdge:
pullDownSearchViewController
_reduceTransparencyChanged
viewWillTransitionToSize:withContainingExpandedTreeNode:transitionCoordinator:
shouldOpenFolderIcon:
parent
dock
setFolder:
innerFolderController
setCurrentPageIndex:animated:completion:
setIdleText:
isDisplayingIcon:
dockListView
dockView
beginModifyingDockOffscreenFractionForReason:
dockEdge
_listIndexIsVisible:
prepareToOpen
setManagesStatusBarWidth:
prepareToClose
_isDockSwitchedForOrientation:
_dockLayoutReversedForInterfaceOrientation:
returnDockView
dockAnimationWindow
_configureDockViewForOrientationWithoutAnimation:
_configureAppStatusBarInsetsForOrientation:
configureAppStatusBarInsets
managesStatusBarWidth
statusBarInsetsForOrientation:
setStatusBarEdgeInsets:forLayoutLayer:
statusBarInsetsForDockEdge:
_shouldUseDockAnimationWindowForRotationToInterfaceOrientation:duration:
borrowDockView
setForcedInterfaceOrientation:
setFrameOrigin:
setDockAnimationWindow:
_shouldSlideDockOutDuringRotationFromOrientation:toOrientation:
setPageControlHidden:
_configureDockViewForOrientationDuringAnimation:
setDockOffscreenFraction:
_configureViewForOrientationWithoutAnimation:
iconAllowsBadging:
_updateHomescreenAndDockFade
listViewClass
rootFolder:shouldAllowBadgingForIcon:
_contentViewClass
_depth
folderControllers
_autoscrollExclusionRegion
_configureAppStatusBarInsetsAnimated:
_managesStatusBarWidth
_dockAnimationWindow
forcedInterfaceOrientation
_forcedInterfaceOrientation
_appearsInLoupe
setType:
setConsumable:
eventWithType:
value
setValue:
_consumable
_type
_value
_initWithUser:
_buddyDidExit
_activeCallStateDidChange:
useDashBoard
_updateActiveDestinations
prependObject:
_enumerateWithDirection:presentationsWithType:usingBlock:
appendObject:
_enumeratePresentationsWithType:usingBlock:
_performBatchActions:animated:processQueue:
_processAlertItemQueuesAnimated:
deactivateAlertItem:reason:
_deactivateAlertItem:reason:animated:
centerNamed:
runServer
ignoreIfAlreadyDisplaying
allowInSetup
pendInSetupIfNotAllowed
isLoginUser
hasObject
_processAlertItemsFromQueue:animated:
dequeueAllObjects
_presentationForAlertItem:
_isAlertItemPresentable:outReasonsNotPresentable:
_shouldPendAlertItem:outReasonsPended:
_presenterForAlertItem:
_presentAlertItem:withPresenter:animated:
allowedBundleIDs
_didEverActivate
canPresentMultipleAlertItemsSimultaneously
_hasPresentationForPresenter:
shouldShowInEmergencyCall
lockScreenModalAlertItemPresenter
lockScreenNotificationsAlertItemPresenter
unlockedAlertItemPresenter
_presentedAlertItemForPresenter:
initWithAlertItem:presenter:
alertItemsController:willActivateAlertItem:
_notifyObservers:
presentAlertItem:animated:
alertItemsController:didActivateAlertItem:
didActivate
_reallyDeactivateAlertItem:forReason:deactivateBlock:
_dismissAlertItem:fromPresenter:forReason:animated:
alertItemsController:didDeactivateAlertItem:forReason:
dismissAlertItem:animated:
_deactivationCompleted
arrayWithObjects:
alertItem
objectEnumerator
reverseObjectEnumerator
deactivateAlertItemsOfClass:reason:
deactivateAlertItemsOfClass:reason:animated:
hasObjectOfClass:
objectsOfClass:
hasVisibleSuperModalAlert
_preventLockOver
initWithInteger:
_alertItemNotificationCenter
postNotificationName:userInfo:
activatePendedAlertsIfNecessary
initWithClientPort:reason:
assertionExpired:
setLockScreenNotificationsAlertItemPresenter:
setInUILockedMode:
convertUnlockedAlertsToLockedAlerts
convertLockedAlertsToUnlockedAlerts
_activePresenterForAlertItem:
hasLockScreenModalAlert
dontLockOverAlertItems
_postAlertPresentedNotificationForType:sender:date:
_user
_alertItemsQueue
_superModalItemsQueue
_alertItemPresentations
_superModalAlertItemPresentations
_activePresenters
_forceAlertsToPendReasons
_suppressionAssertions
_modernLockScreenEnabled
_inUILockedMode
_isProcessingQueue
_delayProcessingQueue
_lockScreenModalAlertItemPresenter
_lockScreenNotificationsAlertItemPresenter
_unlockedAlertItemPresenter
_CTToSBSIMStatus:
_statusFromCT
_updateToStatus:
_tryToUpdateStatus
_tearDownAlertAndUpdateStatus
lockEntryView
setupSuccess
_shouldSuppressAlert
_setupAppActivationStateDidChange:
alertTitleForStatus:
initWithStatus:
setupFailureState
_activationDidChange
_telephonyDidRestart
_postponementDidChange
_externalSIMStatusChanged:
lockEntryAlertDismissed:
alertItemDismissed:
repopAlert
attemptUnlock
_handlePromptForUnlock
_updateSIMStatus:withOptions:
pinLockAttemptsRemaining
pukLockAttemptsRemaining
languageCode
_isBrickedDevice
_status
_weak_currentAlert
_lockEntryAlert
_languageCode
_hasHadSIMWhileNotBricked
_wasActivated
_neededUIM
_inSetup
alertTitleForStatus:languageCode:
canSIMUnlock
_isBricked
alertTitleForLanguageCode:
alertTextForLanguageCode:
_canShowOKButton:
_canShowUnlockButton:
trySIMUnlock
foregroundApplicationDisplayID
_localizeWithHandler:
canChangeBackgroundStyle
requiredInfoKeys
requiredEntitlementKeys
_loadFromProxy:
objectsForInfoDictionaryKeys:
entitlementValuesForKeys:
stringForKey:
builtOnOrAfterSDKVersion:
boolForKey:
stringByDeletingPathExtension
launchImageParametersFromLaunchImagesInfo:withBundleIdentifier:isMonarchLinked:
arrayForKey:
bs_objectsOfClass:
bs_safeArrayForKey:
_staticApplicationShortcutItemsFromInfoPlistEntry:
numberForKey:
unsignedIntegerValue
isRemoveableSystemApp
_visibilityOverrideFromInfo:entitlements:
_configureTags:hasVisibilityOverride:
_overrideTags:
_calculateSupportedTypesFromProxy:
applicationDefaults
forcesMedusaAdoption
supportsAllInterfaceOrientations
_statusBarStyleOverridesForArray:
ignoresDeclaredNetworkUsage
gameCenterEverEnabled
caseInsensitiveCompare:
rawValues
_calculateVoipClassWithEntitlements:
declarationForBundleIdentifier:info:entitlements:
URLByAppendingPathComponent:
isNewsstand
isCarrierInstall
isDeveloperDevice
defaultIconStateDisplayIdentifiers
arrayByAddingObject:
deviceFamily
visibilityOverride
launchImageInfo
urlSchemes
documentInboxURL
allowedNKNotificationsPerDay
_applicationShortcutWidgetBundleIdentifier
_staticApplicationShortcutItems
_carDisplayName
_iconClass
_carPlayDeclaration
_domainsToPreheat
_launchImageInfo
_launchInterfaceFileName
_urlSchemes
_iconMasqueradeIdentifier
_once_localizeStaticApplicationShortcutItems
_once_localizeCarDisplayName
_dynamicApplicationShortcutItemsVersion
_visibilityOverride
_defaultStatusBarStyle
_uninstallCapability
_voipClass
_allowedNKNotificationsPerDay
_networkUsageTypes
_ignoredStatusBarStyleOverrides
_isLaunchableDuringSetup
_behavesAsCaller
_wantsLaunchWithoutPNG
_wantsFullScreen
_isGameCenterEnabled
_wasGameCenterEverEnabled
_statusBarIsLegacy
_requiresHiDPI
_disablesScreenJail
_isCloudKitEnabled
_isCloudDocsEnabled
_alwaysLaunchesSuspended
_requiresPasscodeIfLaunchedBeforeFirstUnlock
_systemAppSupportsLocalNotifications
_disallowsNotificationCenter
_disallowsControlCenter
_cloudDocsEnabled
_documentInboxURL
_calculateUniqueStringRepresentation
displayIdentifier
homeScreenDisplayItem
sideSwitcherDisplayItem
isHomeScreenDisplayItem
isSideSwitcherDisplayItem
_uniqueStringRepresentation
_displayIdentifier
initWithFrame:languageCode:
setContentsPosition:
_forcesPortraitOrientation
localizedStringWithKey:
_pinAttemptsRemainingLabel
_failureTitle
setStatusTitle:
_failureLabel
setStatusSubtitle:
forceShowStatus:
label
initWithLightStyle:
setupCurrentLockAttemptState
passcodeLockView
setupUnlockAttemptState
_doUnlock
_unlock
_passcodeViewGenerator
_code
initWithWorkspaceTransitionRequest:
setAllowsAdditiveAnimations:
workspaceTransitionRequest
previousLayoutState
_fadeInLayoutElementViewController:inLayoutState:withAnimationSettings:completion:
_fadeOutLayoutElementViewController:inLayoutState:withAnimationSettings:completion:
_slideInLayoutElementViewController:inLayoutState:withAnimationSettings:completion:
_slideOutLayoutElementViewController:inLayoutState:withAnimationSettings:completion:
initWithWorkspaceTransitionRequest:animationSettings:
_presentingSideApp
stringByExpandingTildeInPath
setCurrentIconStateURL:
setDesiredIconStateURL:
initWithVehicleId:
vehicleId
_vehicleId
_initWithIdentifiers:
_stateWithIdentifiers:
breadcrumbStateAfterPoppingIdentifier:
appendArraySection:withName:multilinePrefix:skipIfEmpty:
breadcrumbStateAfterPushingIdentifier:
breadcrumbStateAfterPoppingLastIdentifier
containsIdentifer:
breadcrumbIdentifiers
_breadcrumbIdentifiers
preferredInterfaceOrientationOnDisplay:
initWithEventHandler:idleTimerFactory:
perform
removeDisabledAssertionReason:
addDisabledAssertionReason:
idleTimerDidExpire:
idleTimerDidReceiveUserEvent:
idleTimerDidWarn:
initWithEventHandler:
updateWithIdleDimProvider:reason:
isDisabledAssertionActiveForReason:
_eventHandler
_idleTimerFactory
_idleTimer
_disabledTimer
_disabledAssertions
_stateCaptureAssertion
setVisible:animated:completion:
wantsToHandleItsOwnAnimation
setWantsToHandleItsOwnAnimation:
_noteAnimationDidFail
_animateStatusBar
initWithDefaultParameters
setForegroundColor:animationParameters:
enableTime:crossfade:crossfadeDuration:
initWithTransitionContextProvider:alert:visible:
_visible
setAllowMessageInCar:
lowBatteryLevel
hasGasGauge
_shouldIgnoreChangeToBatteryLevel:
_thresholdForLevel:
hideLowPowerAlerts
initWithLevel:
isSyncing
gotLowBatteryWarning
isWirelessSyncing
isAutoSyncing
_enableLowPowerMode
systemVersionDescription
saveLowBatteryLogWithCapacity:voltage:
setBatteryLevel:
_talkLevel
_configureWallpaperView
_createAppLabelForSuggestion:
_createDescriptionLabelForSuggestion:
_createIconViewForSuggestion:
_configureConstraints
_isSingleLine
initWithFrame:appSuggestion:style:
_configureIconBackgroundView
touchesBeganInBottomBannerView:
_labelFont
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
wallpaperSettings
deckSwitcherBackgroundBlurRadius
deactivateConstraints:
initWithWallpaperVariant:transformOptions:
maxAppLaunchWallpaperScale
setZoomScale:
setWallpaperStyle:
deckSwitcherBackgroundDarkeningFactor
_backdropSettings
defaultFontDescriptorWithTextStyle:
_appTitleForSuggestion:
setAllowsGroupBlending:
setCompositingFilter:
_descriptionStringForSuggestion:
_configureLabelForVibrancy:
initWithAdditionalTopPadding:invertVerticalInsets:
setGrabberImageFromAppWithBundleIdentifier:withIconFormat:
addConstraints:
isArrivedAtHomePrediction
isArrivedAtWorkPrediction
isLocationBasedSuggestion
isLocationPredictionFromSource:
originatingBundleIdentifier
isLocallyGeneratedSuggestion
originatingDeviceName
isPrediction
isFirstWakePrediction
_firstWakeGreetingString
isCarPlayPrediction
isHeadphonesPrediction
isBluetoothPrediction
isLocationPredictionOfType:
suggestedLocationName
descriptorForRequiredKeysForStyle:
_ios_meContactWithKeysToFetch:error:
stringFromContact:style:
_meCardShortName
calendarWithIdentifier:
bs_dayPeriodForDate:inLocale:
extraBottomLayoutMargin
setUsesFakeBlur:
representedAppSuggestion
usesFakeBlur
_suggestion
_fakeWallpaperView
_blurWallpaperView
_blurViewConstraints
_appLabel
_descriptionLabel
_iconView
_usesFakeBlur
separatorViewModeForCurrentState
showTestBulletin
initWithCoordinateSpace:withExtent:role:
extent
convertRect:toCoordinateSpace:
identity
provider
isReservedForHorizontalScrolling
regionForCoordinateSpace:withExtent:
setRole:
setIdentifier:
setIdentity:
setProvider:
setReservedForHorizontalScrolling:
convertRect:fromCoordinateSpace:
appendBool:withName:ifEqualTo:
appendRect:withName:
convertPoint:toCoordinateSpace:
regionForCoordinateSpace:
role:
intersectsCoordinateSpace:
_reservedForHorizontalScrolling
_identifier
_role
_coordinateSpace
_identity
_provider
_extent
setDashBoardRegionRole:
dashBoardRegionRole
setDashBoardRegionReservedForHorizontalScrolling:
dashBoardRegionIsReservedForHorizontalScrolling
initWithTransitionContextProvider:zoomDirection:
startHostingWallpaperOverlay:
relinquishHostingOfWallpaperOverlay
initWithFolderController:crossfadeView:
setSettings:
initWithFolderController:appView:
unlockSettings
setDistantScale:
prepare
setFraction:
isShowingModalBanner
animateStatusBarFromLockToHome
animateToFraction:afterDelay:withCompletion:
centralAnimationFactory
effectiveSettings
_statusBarAnimator
_iconAnimator
_alertWindowHostWrapper
_viewToAnimate
_transitionRequest
_wallpaperOverlay
_bodyText
_showPrefs
lockLabel
shortLockLabel
setAllowedTouchTypes:
pressesBegan:withEvent:
pressesChanged:withEvent:
pressesEnded:withEvent:
pressesCancelled:withEvent:
latestPressesEvent
_latestPressesEvent
addDataProvider:
_existingBulletinRequestForPublisherBulletinID:
setDate:
modifyBulletin:
_newBulletinRequest:
addBulletin:forDestinations:
_publishBulletinWithID:
publisherBulletinID
sectionIdentifier
setSectionID:
setPublisherBulletinID:
actionWithLaunchBundleID:callblock:
setDefaultAction:
setSubsectionIDs:
initWithToneAlert:
setSound:
appearanceWithTitle:
actionWithAppearance:
setSupplementaryActions:
defaultSectionInfoForType:
setPushSettings:
setSubsectionID:
setSuppressedSettings:
setAlertType:
publisherDestination
recencyDate
setUsesVariableLayout:
setMessageNumberOfLines:
sortDescriptors
bulletinsWithRequestParameters:lastCleared:
clearedInfoForBulletins:lastClearedInfo:
clearedInfoForClearingAllBulletinsWithLastClearedInfo:
clearedInfoForClearingBulletinsFromDate:toDate:lastClearedInfo:
clearedInfoForBulletins:
sectionParameters
getDataForAttachmentUUID:recordID:withCompletionHandler:
getPNGDataForAttachmentUUID:recordID:sizeConstraints:withCompletionHandler:
getAspectRatioForAttachmentUUID:recordID:withCompletionHandler:
primaryAttachmentDataForRecordID:
attachmentPNGDataForRecordID:sizeConstraints:
attachmentAspectRatioForRecordID:
dataProviderDidLoad
defaultSubsectionInfos
displayNameForSubsectionID:
migrateSectionInfo:oldSectionInfo:
noteSectionInfoDidChange:
receiveMessageWithName:userInfo:
handleBulletinActionResponse:
handleBulletinActionResponse:withCompletion:
syncsBulletinDismissal
displayNameForFilterID:
bulletinsFilteredBy:count:lastCleared:
bulletinsFilteredBy:enabledSectionIDs:count:lastCleared:
universalSectionIdentifier
defaultSectionInfo
sectionDisplayName
sectionIcon
sectionIconData
parentSectionIdentifier
publish
_publisherBulletinIDWithIndex:
publishBulletinsWithCount:
_connection
_proxy
_bulletinRequests
hasSuffix:
initWithScreen:animationWindow:fallbackIconContainer:
contextWithScreen:animationWindow:fallbackIconContainer:
animationWindow
fallbackIconContainer
_animationWindow
_fallbackIconContainer
_displayDeactivated:
configureForAirplaneModeDataAlertOnCellular:
configureForAirplaneModeDataAlertOffCellular:
configureForAirplaneModeNonDataAlert
configureForInCall
turnOffAirplaneMode
sendUserToSettings
_associatedDisplay
_isDataAlert
_usesCellNetwork
expandedChildViewController
setParentTreeNodeViewController:
removeChildTreeNodeViewController:
_setFromExpandedViewController:
_setToExpandedViewController:
_setExpandedTreeNode:animated:withCompletion:
treeNode
popExpandedTreeNodeAnimated:withCompletion:
pushExpandedTreeNode:animated:withCompletion:
_rootParentViewController
effectiveExpandedTreeNode
_expandedTreeNode
_expandedViewController
containingExpandedTreeNode
isExpandedForContainingExpandedTreeNode:
_handleWillAddChildViewController:
_handleRemoveChildViewController:
sizeForChildContentContainer:withParentContainerSize:
frameForChildTreeNodeViewController:inState:withParentContainerSize:
treeNodeViewController:viewControllerForChildTreeNode:
treeNodeViewController:selectedChildTreeNode:
treeNodeViewController:dismissedChildTreeNode:
treeNodeViewController:targetExpandedTreeNodeForProposedTreeNode:
treeNodeViewController:destinationExpandedTreeNodeForTargetTreeNode:
bs_hasPrefix:
indexAtPosition:
indexPathByAddingIndex:
bs_nearestCommonAncestorWithIndexPath:
treeNodeViewController:animationControllerForOperation:animated:fromViewController:fromTreeNode:toViewController:toTreeNode:
treeNodeViewController:interactionControllerForAnimationController:
treeNodeViewController:willPerformOperation:fromViewController:fromTreeNode:toViewController:toTreeNode:withTransitionCoordinator:
isCancelled
animator
setInteractor:
_fromExpandedViewController
_updateStateForViewController:
_toExpandedViewController
_setFinalStateForViewController:
_fromExpandedTreeNode
_toExpandedTreeNode
_shouldAddViewController:afterTransitionFromViewController:toViewController:canceled:
_shouldRemoveViewController:afterTransitionFromViewController:toViewController:canceled:
_shouldAddViewController:afterTransitionFromViewController:toViewController:
_shouldRemoveViewController:afterTransitionFromViewController:toViewController:
_initialFrameForViewController:forTransitionFromViewController:toViewController:
_finalFrameForViewController:forTransitionFromViewController:toViewController:
parentTreeNodeViewController
_transitionToExpandedTreeNode:animated:withCompletion:
_forwardToExpandedViewControllerNearestToTreeNode:withNodeModifier:block:
setExpandedTreeNode:animated:withCompletion:
_performOperation:animated:fromViewController:fromTreeNode:toViewController:toTreeNode:withContinuation:completion:
_forwardToExpandedViewControllerNearestToTreeNode:block:
setContainerView:
setWantsAnimation:
setAnimator:
setViewController:forKey:
setView:forKey:
setInitialFrame:forViewController:
setFinalFrame:forViewController:
startTransition
_shouldAddViewControllerAfterCurrentTransitionCompletes:
_shouldRemoveViewControllerAfterCurrentTransitionCompletes:
_handleWillRemoveChildViewController:
isDescendantOfView:
addViewToHierarchyForChildTreeNodeViewController:
_handleAddChildViewController:
removeViewFromHierarchyForChildTreeNodeViewController:
finalFrameForViewController:
initialFrameForViewController:
transitionWillBegin:
transitionDidBegin:
transitionWillReverse:
transitionDidReverse:
transitionWillFinish:
transitionDidFinish:
setTreeNode:
setExpandedTreeNodes:withCompletion:
indexPath
expandedTreeNodes
isExpanded
setTopExpandedTreeNode:
deepestExpandedDescendantViewController
addTransitionObserver:
removeTransitionObserver:
addChildTreeNodeViewController:
shouldAutomaticallyForwardAppearanceMethods
transitionCoordinator
_treeNode
_fromExpandedChildTreeNode
_toExpandedChildTreeNode
_expandedTreeNodes
_currentTransitionOperation
_currentTransition
_currentTransitionContinuation
_clientOperationCompletion
_transitionObservers
_parentTreeNodeViewController
_lock_manager
updateDevicePresence
_lock_spawnManagerCallbackThread
_runManagerCallbackThread
initWithTarget:selector:object:
performSelector:onThread:withObject:waitUntilDone:
currentThread
port
scheduleInRunLoop:forMode:
_updateCurrentNetwork
updateSignalStrength
_updateWiFiState
_cachedIsAssociated
_linkDidChange
_primaryInterfaceChanged:
wifiSupported
devicePresent
_lock_setWiFiDevice:
_powerStateDidChange
isAssociatedToIOSHotspot
clearWiFiPickerPreferences
setPowered:
wiFiEnabled
setWiFiEnabled:
signalStrengthRSSI
updateSignalStrengthFromRawRSSI:andScaledRSSI:
knownNetworks
resetSettings
wifiRunLoopRef
_wifiInterface
_lock
_callbackRunLoop
_manager
_device
_deviceInterfaceName
_mainThread_devicePresent
_currentNetwork
_previousNetwork
_currentNetworkHasBeenSet
_currentNetworkIsIOSHotspot
_currentNetworkIsIOSHotspotHasBeenSet
_powered
_poweredHasBeenSet
_mainThread_signalStrengthBars
_mainThread_signalStrengthRSSI
_mainThread_signalStrengthHasBeenSet
_primaryInterfaceUpdateTimeoutSource
_primaryInterface
_primaryInterfaceHasBeenSet
_isPrimaryInterface
_isPrimaryInterfaceChanging
_showUsagePrefs
_postAlertsIfNeeded
_shouldShowTelephonyAlerts
_hasEverRegistered
_isRegisteredToNetwork
_setHasEverRegistered:
_setCurrentAlertItem:
_setupActivationState
_isDeveloperDevice
_resetActivationState
_activationFailed
_settingUpActivationState
_hasShownMismatchedSIM
_activatingAlertItem
_unqiueDeviceIdentifier
stopObserving
beginRestoring
_didEndRestoring:
_resetStarted:
_resetEnded:
_wirelessSyncEnded:
_wirelessSyncBegan:
_appInstallationNotification
finishedTerminatingApplications
_notifyRestoreCanProceed
_setRestoreState:
_setupRestoreTimer
setTelephonyAndBluetoothItemsCloaked:
webClips
removeFromDisk
_killApplicationsIfNecessary
_delayedBeginReset
_syncSessionDidBegin
_syncSessionDidEnd
beginResetting
_didEndResetting
initWithIdentifier:type:withController:
_invalidateRestoreTimer
_rebootNow
setProgressValue:
_updateProgress
initWithProgressBarVisibility:
setVisible:
clearIdleTimer
_delayedQuitApplications
_isBackupAgentRunning
_restoreTimerFired:
cancelRestoring
resetState
beginResetting:
_restoreState
_resetState
_restoreTimerState
_restoreTimer
_progressTimer
_showingResetUI
_appsChangedDuringSync
_restoreStartedNotifyToken
_restoreEndedNotifyToken
_disableDeviceLockAssertion
_isAppSyncing
_inExtendedAppSyncCoalescePeriod
initWithScreen:layoutStrategy:debugName:
initWithScreen:layoutStrategy:debugName:configuration:
_reversesLinearFocusWrapping
_configuration
_setupCoordinatingTransitions
sideAppAnimationControllerWithTransitionRequest:animationSettings:
addCoordinatingChildTransaction:withSchedulingPolicy:
zoomDirection
_requiresLiveHostView
_viewsForAnimationStepping
activatingApp
deactivatingApp
forceUpdateStyleOverrides:
_appStatusBarTransitionInfo
zoomOther
clientSettings
statusBarContextID
setContextId:hidden:forRequester:
hostViewForRequester:enableAndOrderFront:
_animationIdentifier
startStyleRequest
dimmingLevel
setDimmingLevel:
animateAlongsideTransition:completion:
deckSwitcherBackgroundWallpaperStyle
_transitioningAppViewControllers
saveSuspendSnapshot
currentHomescreenStyleTransitionState
setHomescreenStyleTransitionState:forBundleIdentifier:withPriority:animationFactory:
_animationDuration
_animationDelay
settingsWithDuration:delay:
deactivatingApps
setHomescreenStyle:forBundleIdentifier:withPriority:animationFactory:
removeHomescreenStyleForBundleIdentifier:withPriority:animationFactory:
_openFolderController
isLegacy
legibilityStyle
initWithStyle:legacy:legibilityStyle:foregroundColor:foregroundAlpha:
setStartStyleRequest:
setStartOrientation:
setEndOrientation:
setTransition:
setEndStyleRequest:
setZoomOther:
startOrientation
endOrientation
_prefersSceneSnapshot
_shouldHideAppStatusBar
_animateWallpaperWithFactory:
_animateFakeStatusBarWithParameters:
_contextHostView
_hostRequester
_transitioningSceneHostManager
_zoomDirection
_orderWindowFrontAndThenOut:withColor:
setContentView:
_tearDown
_createUIWithColor:
_orderFrontWithoutMakingKey
flashWhiteWithCompletion:
_flashCompletionBlocks
_flashWindow
_flashView
_windowVisible
isWidgetSection
sectionID
clearable
sectionType
isBulletinSection
distantPast
displaysCriticalBulletins
showsInLockScreen
showsMessagePreview
_updateWithSectionInfo:
setShowsInLockScreen:
setShowsMessagePreview:
subsections
subsectionID
setShowsInLockScreen:forSubsectionID:
setShowsMessagePreview:forSubsectionID:
lastSortDate
validSortDescriptorsFromSortDescriptors:
sortUsingDescriptors:
compareObject:toObject:
bulletinID
orderSectionUsingRecencyDate
_indexForNewBulletin:
iconImage
iconImageWithFormat:
setIconImage:
_sortDateForBulletin:
indexOfBulletinID:
sortedArrayUsingComparator:
_removeBulletin:
setLargeIconImage:
addBulletin:
bulletinAtIndex:
valueForKey:
initWithBulletinListSection:subsectionID:
bulletinWithBulletinID:
subsectionIDs
_subsectionWithIDCreatingIfNecessary:
bulletinCount
hasClearableBulletins
initWithSectionInfo:
updateWithSectionInfo:
compareSection:forOrder:
setSortDescriptors:
removeBulletin:
replaceBulletin:withBulletin:
hasBulletinWithID:
largeIconImage
showsBulletinIDInLockScreen:
showsBulletinsInSubsectionIDInLockScreen:
showsMessagePreviewForBulletinID:
showsMessagePreviewForBulletinsInSubsectionID:
bulletins
widget
setWidget:
messageNumberOfLines
sectionInfo
setSectionInfo:
_sectionID
_sectionType
_widget
_bulletins
_bulletinIDs
_sortDescriptors
_iconImage
_showsInLockScreen
_showsMessagePreview
_messageNumberOfLines
_displaysCriticalBulletins
_lastSortDate
_subsections
_largeIconImage
_sectionInfo
_subsectionID
raise:format:
transitionContextProvider
initWithFrame:privateStyle:
setUsesTint:
initWithFrame:backdropViewSettings:
reduceTransparencyStatusDidChange:
useHighQualityTransition
prepareForTransition
completeTransitionToBlurred:
_graphicsQuality
sbf_searchTransitionGraphicsQuality
useHighQualityGraphics
sb_backdropViewWithPrivateStyle:
setGroupName:
insertSubview:belowSubview:
transitionToSettings:
transitionIncrementallyToSettings:weighting:
groupName
usesTint
lowQualityStyle
setLowQualityStyle:
_effectView
_reduceTransparencyView
_backupProgress
_settingsForPrivateStyle
_privateGroupName
_usesTint
_lowQualityStyle
_needToEnsureThatWeUpdateBackdropAtLeastOnce
_updateBackgroundStyle
removeObserver:forKeyPath:
didMoveToSuperview
_updateHosting
didMoveToWindow
setDesiredWallpaperOrientation:
setContainerOrientation:
requestedBackgroundStyle
hostViewForRequester:enableAndOrderFront:appearanceStyle:
setBackgroundColorWhileNotHosting:
setRemoteAlertHasCustomWallpaperStyle:
setRemoteAlertWallpaperStyle:
setRemoteAlertRemoteTunnelingWasActive:
remoteAlertHasCustomWallpaperStyle
remoteAlertWallpaperStyle
remoteAlertRemoteTunnelingWasActive
_addStatusBar
initWithFrame:remoteAlert:displayItem:
installAlertInViewController:
hostAlertWithManager:
_portraitContentWrapper
_rotatingContentWrapper
_contextHostManager
_alertContentViewWrapper
_fakeStatusBar
_remoteAlert
_remoteAlertHasCustomWallpaperStyle
_remoteAlertRemoteTunnelingWasActive
_remoteAlertWallpaperStyle
initWithName:onQueue:
initWithMachServiceName:
resume
_internalQueue_removeAssertionByStyleOverrides:
_invalidateAssertionsWithIdentifiers:forClientConnection:
_updateAppSceneSettingsForForegroundAppsAndPostAddedStyleOverrides:removedStyleOverrides:
_postStatusStringsByStyle:
initWithSceneToUpdate:newSettings:transitionContext:
_mainQueue_getStatusBarStyleOverridesToSuppressAndStatusStringsByStyleForForegroundApplications:withHandler:
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
setInterruptionHandler:
_internalQueue_deactivateStatusBarStyleOverridesAssertionsWithIdentifiers:forClientConnection:
setInvalidationHandler:
currentConnection
isExclusive
_internalQueue_addAssertionByStyleOverrides:
statusString
updateForegroundApplications:withOptions:completion:
showsWhenForeground
_statusStringsByStyleForActiveAssertionsByStyleOverride:inactiveAssertionsByStyleOverride:
remoteObjectProxyWithErrorHandler:
invalidateStatusBarStyleOverridesAssertionsWithIdentifiers:
removeStyleOverrides:
addStyleOverrides:
relinquishLock:
null
getDoubleHeightStatusStringForStyle:
postDoubleHeightStatusString:forStyle:
listener:shouldAcceptNewConnection:
activateStatusBarStyleOverridesAssertions:reply:
deactivateStatusBarStyleOverridesAssertionsWithIdentifiers:
setStatusString:forAssertionWithIdentifier:
xpcListener
setXpcListener:
assertionsByIdentifierByClientConnection
setAssertionsByIdentifierByClientConnection:
assertionsByStyleOverride
setAssertionsByStyleOverride:
internalQueue
setInternalQueue:
setStatusBarStyleOverrides:
exclusiveStatusBarStyleOverrides
setExclusiveStatusBarStyleOverrides:
setEventQueue:
_runningUpdateTransactions
_statusBarStyleOverrides
_exclusiveStatusBarStyleOverrides
_xpcListener
_assertionsByIdentifierByClientConnection
_assertionsByStyleOverride
_internalQueue
enumerateStatusBarStyleOverridesWithBlock:
setMultiplier:
setDuration:
setCurve:
setControlPoint1:
setControlPoint2:
setAnimationType:
setMass:
setStiffness:
setDamping:
actionWithHandler:
rowWithTitle:action:
rowWithTitle:childSettingsKeyPath:
_moduleWithSectionTitle:delay:
submoduleWithModule:childSettingsKeyPath:
valueKeyPath:
showNowPlaying
setShowNowPlaying:
setShowContinuityIcon:
setContinuityIconType:
showUserPicture
setShowUserPicture:
showLogoutButton
setShowLogoutButton:
showThermalTrap
setShowThermalTrap:
showBlockedUI
setShowBlockedUI:
showResetRestore
setShowResetRestore:
showEmergencyDialer
setShowEmergencyDialer:
showRegionsDebugView
setShowRegionsDebugView:
verticalBounceSettings
setVerticalBounceSettings:
horizontalBounceSettings
setHorizontalBounceSettings:
passcodeSettings
setPasscodeSettings:
mesaSettings
setMesaSettings:
setHorizontalScrollFailureRecognizerSettings:
dashBoardScrollModifierSettings
setDashBoardScrollModifierSettings:
setUnlockToPhoneWallpaperOutSettings:
setUnlockToPhoneWallpaperInSettings:
unlockWallpaperOutSettings
setUnlockWallpaperOutSettings:
unlockWallpaperInSettings
setUnlockWallpaperInSettings:
mainToCameraViewSlideCompletionPercentage
setMainToCameraViewSlideCompletionPercentage:
mainToTodayViewSlideCompletionPercentage
setMainToTodayViewSlideCompletionPercentage:
unlockSlideForIdleTimerDisabledPercentage
setUnlockSlideForIdleTimerDisabledPercentage:
unlockSlideForIdleTimerDisabledPercentageIPad
setUnlockSlideForIdleTimerDisabledPercentageIPad:
notificationScrollForIdleTimerDisabledOffset
setNotificationScrollForIdleTimerDisabledOffset:
notificationScrollForIdleTimerDisabledOffsetIPad
setNotificationScrollForIdleTimerDisabledOffsetIPad:
setAppGrabberSlideUpVelocityThreshold:
unlockSwipeWallpaperAlpha
setUnlockSwipeWallpaperAlpha:
alwaysPutPluginsBelowScrollView
setAlwaysPutPluginsBelowScrollView:
killsInsecureDrawingApps
setKillsInsecureDrawingApps:
_showNowPlaying
_showContinuityIcon
_showUserPicture
_showLogoutButton
_showThermalTrap
_showBlockedUI
_showResetRestore
_showEmergencyDialer
_showRegionsDebugView
_alwaysPutPluginsBelowScrollView
_killsInsecureDrawingApps
_continuityIconType
_verticalBounceSettings
_horizontalBounceSettings
_passcodeSettings
_mesaSettings
_horizontalScrollFailureRecognizerSettings
_dashBoardScrollModifierSettings
_unlockToPhoneWallpaperOutSettings
_unlockToPhoneWallpaperInSettings
_unlockWallpaperOutSettings
_unlockWallpaperInSettings
_mainToCameraViewSlideCompletionPercentage
_mainToTodayViewSlideCompletionPercentage
_unlockSlideForIdleTimerDisabledPercentage
_unlockSlideForIdleTimerDisabledPercentageIPad
_notificationScrollForIdleTimerDisabledOffset
_notificationScrollForIdleTimerDisabledOffsetIPad
_appGrabberSlideUpVelocityThreshold
_unlockSwipeWallpaperAlpha
setCentralAnimationSettings:
_centralAnimationSettings
setLabelAlphaWithZoom:
labelAlphaWithZoom
_labelAlphaWithZoom
setDockMass:
setCenterRowCoordinate:
precision:
valueValidator:
between:and:
sectionWithRows:title:condition:
conditionFormat:
centerRowCoordinate
distanceEffect
setDistanceEffect:
firstHopIncrement
setFirstHopIncrement:
hopIncrementAcceleration
setHopIncrementAcceleration:
dockMass
zoomViewBelowIcons
setZoomViewBelowIcons:
_zoomViewBelowIcons
_centerRowCoordinate
_distanceEffect
_firstHopIncrement
_hopIncrementAcceleration
_dockMass
appHeadStart
setAppHeadStart:
appZoomSettings
setAppZoomSettings:
appFadeSettings
setAppFadeSettings:
_appHeadStart
_appZoomSettings
_appFadeSettings
setCrossfadeWithZoom:
setFadesIconGrid:
submoduleWithModule:childSettingsKeyPath:condition:
crossfadeWithZoom
crossfadeSettings
effectiveCrossfadeAnimationSettings
outerFolderFadeSettings
setOuterFolderFadeSettings:
setCrossfadeSettings:
fadesIconGrid
iconGridFadeSettings
setIconGridFadeSettings:
_crossfadeWithZoom
_fadesIconGrid
_outerFolderFadeSettings
_crossfadeSettings
_iconGridFadeSettings
setMorphWithZoom:
morphWithZoom
morphSettings
effectiveMorphAnimationSettings
setMorphSettings:
_morphWithZoom
_morphSettings
innerFolderFadeSettings
setInnerFolderFadeSettings:
_innerFolderFadeSettings
setEpsilon:
setDelay:
appSnapshotCornerRadiusSettings
setAppSnapshotCornerRadiusSettings:
_appSnapshotCornerRadiusSettings
setValuesFromModel:
initWithDefaultValues
setMaxAppSuspendHintProgress:
setMaxAppLaunchWallpaperScale:
setMaxFolderCloseHintProgress:
setReducedMotionSettings:
setUnlockSettings:
centerLaunchSettings
setCenterLaunchSettings:
centerSuspendSettings
setCenterSuspendSettings:
centerAcceleratedSuspendSettings
setCenterAcceleratedSuspendSettings:
crossfadeLaunchSettings
setCrossfadeLaunchSettings:
crossfadeSuspendSettings
setCrossfadeSuspendSettings:
crossfadeAcceleratedSuspendSettings
setCrossfadeAcceleratedSuspendSettings:
maxAppSuspendHintProgress
folderOpenSettings
setFolderOpenSettings:
folderCloseSettings
setFolderCloseSettings:
maxFolderCloseHintProgress
_reducedMotionSettings
_unlockSettings
_centerLaunchSettings
_centerSuspendSettings
_centerAcceleratedSuspendSettings
_crossfadeLaunchSettings
_crossfadeSuspendSettings
_crossfadeAcceleratedSuspendSettings
_maxAppSuspendHintProgress
_maxAppLaunchWallpaperScale
_folderOpenSettings
_folderCloseSettings
_maxFolderCloseHintProgress
processName
setProcessName:
collectionFn
setCollectionFn:
_processName
_collectionFn
localizedPlatformName
restartSystemEvent
processorCount
_loadDefaultIconInfoIfNecessary
dictionaryWithContentsOfURL:
modernizeRootArchive:
leafIdentifiersFromArchive:
systemBuildVersion
hardwareModel
productType
uniqueDeviceIdentifier
defaultIconState
defaultStarkIconState
supportsOpenGLES2
isStarkDevice
supportsAllMedusaFeatures
_defaultIconInfoOnce
_defaultStarkIconState
_defaultIconState
_defaultIconStateDisplayIdentifiers
_localizedDeviceName
_hasGasGauge
_supportsOpenGLES2
_internalInstall
_carrierInstall
_singleCoreDevice
_starkDevice
_medusaDevice
_supportsAllMedusaFeatures
systemVersion
dismissButtonText
iconDefaults
setDidShowIconReorderAlert:
haveShownAlert
_selectIconModel:
_keyboardWillShow:
_installedAppsDidChange:
_lockScreenUIWillLock:
_primaryAppleAcountDidChange:
_storeAccountDidChange:
defaultStore
displayIDsWithBadgingEnabled
setObserverFeed:
_updateUninstallingSystemAppsRestricted
folderIcons
listCount
numberOfIcons
_foldersInList:
heightForStyle:orientation:
initWithOrientation:statusBarHeight:
_effectiveOrientation
_prepareToResetRootIconLists
_resetRootIconLists
viewWillLayoutSubviews
_windowInterfaceOrientation
deepestFolderController
iconListViewAtIndex:
indexPathWithIndex:
lastTouchedIcon
isTouchDownInIcon
_cancelAllTouches
prepareToTearDown
setChildFolderContainerView:
indexPathForIconWithIdentifier:
setAnimationContext:
setFolderDelegate:
setEditing:animated:
restoreExpandedIndexPath:
captureLocationInfoForIcon:inModel:
hasDesiredIconState
relayout
removeIcon:compactFolder:
compactRootIconLists
layoutIconLists:domino:forceRelayout:
saveIconStateIfNeeded
didShowIconReorderAlert
hasDownloadedStoreApplication
isEditingAllowed
updateCurrentIconListIndexAndVisibility:
currentIconListIndex
rootIconListAtIndex:
currentFolderIconListIndex
folderIconListAtIndex:
dropDestinationPageIndex
dropDestinationIconListIndex
openFolder
demoDefaults
shouldLockIconsInStoreDemoMode
isOpen
_isAppIconForceTouchControllerPeekingOrShowing
_dismissAppIconForceTouchControllerIfNecessaryAnimated:withCompletionHandler:
presentedViewController
resetCurrentVisibleIconListImageVisibilityAndJitterState
_toWindowOrientation
transitionDuration
_willRotateToInterfaceOrientation:duration:
_willAnimateRotationToInterfaceOrientation:duration:
_fromWindowOrientation
_didRotateFromInterfaceOrientation:
childViewControllers
viewWillTransitionToSize:withTransitionCoordinator:
isLeafIcon
indexPathForNewIcon:isDesignatedLocation:replaceExistingIconAtIndexPath:
replaceIconAtPath:withIcon:saveState:
insertIcon:atIndexPath:moveNow:pop:
placeIcon:atIndexPath:moveNow:layoutNow:pop:
getListView:folder:relativePath:forIndexPath:createIfNecessary:
purgeIconFromMap:
listsContainingLeafIconWithIdentifier:
showInfoAlertIfNeeded:
_scrollToIconToRevealAnimated:
_enqueueTransitionName:withHandler:
_isShowingSearchableTodayView
_isShowingPullDownSearch
finishInstallingIconAnimated:
iconListViewAtIndex:inFolder:createIfNecessary:
placeIcon:atIndexPath:
leafIcon
reverse
openFolderIcon:animated:withCompletion:
insertIcon:intoListView:iconIndex:moveNow:pop:
performCascadingIconInsertion:indexPath:
folderControllerForFolder:
maxListCount
addEmptyListView
removeIconAtIndexPath:
compactIconsInIconListsInFolder:moveNow:limitToIconList:
compactLists
compactIconsAndLists
setLastTouchedIcon:
removeIcon:andCompactFolder:folderRef:
removeEmptyList:
completeUninstall
allowsUninstall
isUninstallingSystemAppsRestricted
setUninstalled
setAllowJitter:
uninstallIconAnimationCompletedForIcon:
currentRootIconList
removeAllAnimations
_launchIcon:
launchEnabled
parentFolder
nodeIdentifier
containsNodeIdentifier:
postWithDataBuilder:
viewMap:locationForIcon:
setHighlighted:
prepareToLaunchTappedIcon:completionHandler:
setIsEditing:withFeedbackBehavior:
_shouldLockItemsInStoreDemoMode
setCancelable:
setGrabbedIcon:
impactOccurredWithIntensity:
setAnimationCurve:
CGRectValue
shiftFolderViewsForKeyboardAppearing:keyboardHeight:
commitAnimations
position
setIconPosition:
_updateInterfaceOrientationFromActiveInterfaceOrientation
indexPathWithIconIndex:listIndex:
bs_indexPathByAddingPrefix:
setIsGrabbed:
setIsOverlapping:
restoreScrollingAndRotationAfterUngrab
_iconDropDidFinish:
moveIconFromWindow:toIconList:
noteGrabbedIconDidChange:
grabbedIconPlaceholder
insertIcon:intoListView:iconIndex:moveNow:
_moveIconToContentView:
setRecipientIcon:duration:
createNewFolderFromRecipientIcon:grabbedIcon:
addIcons:intoFolderIcon:animated:openFolderOnFinish:complete:
_dropIconIntoOpenFolder:withInsertionPath:
_dropIconOutOfClosingFolder:withInsertionPath:
_dropIcon:withInsertionPath:
shouldRemoveWhenEmpty
fixupBouncedIconsInFolder:startingWithIndex:
setLastTouch:
_cancelFolderSpringloadTimer
prepareDropGlow
showDropGlow:
removeDropGlow
folderSpringloadTimerFired
currentIconListView
iconListViewForTouch:
noteGrabbedIcon:locationDidChangeWithTouch:
animation
setKeyPath:
setFromValue:
setToValue:
setTimingFunction:
setBeginTime:
setRepeatCount:
setAutoreverses:
dropGlow
addAnimation:forKey:
iconStateDisplayIdentifiers
noteUserIsInteractingWithIcons
aa_isManagedAppleID
activeAccount
isManagedAppleID
setUninstallingSystemAppsRestricted:
enumerateFolderIconsUsingBlock:
setSpotlightTransitioningFromBreadcrumb:
_presentTopEdgeSpotlight:
_presentRightEdgeSpotlight:
dismissSpotlightOrTodayViewAnimated:enqueueDismissal:
_dismissTopEdgeSpotlight:
_dismissRightEdgeSpotlight:
layoutSearchableViews
_isShowingOrTransitioningToSearchableTodayView
isPullDownSearchVisible
isSearchableTodayViewVisible
isSearchableTodayViewVisibleOrTransitionDestination
dismissSearchForHardwareKeyboard:
layout
setOpen:
iconsOfClass:
removeIconDataSourcesOfClass:
restrictionEnforcedHomeScreenLayout
initWithITunesRepresentation:
store
setHasRestrictedEnforcedLayout:
initWithStore:applicationDataSource:
folderSettings
sortsIconsAlphabetically
setSortsIconsAlphabetically:
loadAllIcons
_iconVisibilityChanged:
_iconModelDidReloadIcons:
_iconModelWillLayout:
_iconModelDidLayout:
initWithIconModel:
setVisibilityOfIconsWithVisibleTags:hiddenTags:
importState:
initWithIconModel:screen:delegate:viewDelegate:
maxIconListCount
_controllerClassForFolderClass:
previousLocationInfoForIcon:
folderName
indexPathForFirstFreeSlotAvoidingFirstList:
enumerateAllIconsUsingBlock:
maxIconCountForListInFolderClass:
initWithMaxListCount:maxIconCountInLists:
initWithFolder:
addIcon:
homescreenMap
appIconForceTouchGestureRecognizer
stopHandlingGestureRecognizer:
setAppIconForceTouchGestureRecognizer:
hasFolderIconView
listAtIndex:
lists
viewMap:maxRecycledViewsOfClass:
listsContainingIcon:
_supportsForceTouch
location
isBookmarkIcon
setDataSource:
_handleAppIconForceTouchGestureRecognizer:
startHandlingGestureRecognizer:
_iconCanBeGrabbed:
iconHandleLongPress:withFeedbackBehavior:
isGrabbed
noteGrabbedIconLocationChangedWithTouch:
iconWasTapped:
allowsNestedFolders
_noteUserIsInteractingWithIcons
isUninstallSupportedForIcon:
iconColorSettings
closeBoxesEverywhere
pushSettings
_badgesAreEnabledForSectionInfo:
noteBadgeDidChange
setDisplayIDsWithBadgingEnabled:
_updateEnabledBadgesSetWithSections:
getSectionInfoWithCompletion:
hasRestrictedEnforcedLayout
effectiveRestrictedBoolValueForSetting:
initWithLeafIcon:orientation:viewMap:
setFadesReferenceView:
initWithOuterController:innerController:folderIcon:
setTransitionRequest:
borrowPrimaryAppView
initWithFolderController:crossfadeView:icon:
setCurrentValue:
setHintAnimator:
setConvergenceFunctionWithConstant:
setFinishesOnValueConvergence:
setTargetValue:
hintToFraction:
setApplier:
initWithIconAnimator:folderController:childViewController:operation:
setInitialDelay:
operation
gestureRecognizer
minPinchScale
initWithPinchGesture:minPinchScale:
forceStageInteractionProgress
transitionAnimationFactory
setHomescreenWallpaperScale:withAnimationFactory:
animateWithSettings:actions:
returnPrimaryAppView
_recenterMotionEffects
isPictureInPictureSupported
iconAnimator
supportsAcceleratedAppDismiss
isRootFolderClass
_debugStringForIconOrder:
_resetFolderSpringloadTimer
_closeFolderController:animated:withCompletion:
_folderControllerDidReceiveCancelReachabilityAction:
homescreenPageIndicatorImageSetCache
_shouldRespondToReachability
handleReachabilityActivated:animated:completion:
_dismissAnimated:withCompletionHandler:
_shouldRespondToReachability:
_performReachabilityTransactionForActivate:immediately:
_shouldCancelFailedReachability
_appIconForceTouchGestureRecognizerShouldBegin
dismissAnimated:withCompletionHandler:
forceTouchCompleted
feedbackBehavior
touchForceVelocity
initWithFireInterval:repeatInterval:leewayInterval:queue:handler:
schedule
pressDuration
iconTapped:
initWithContentType:
wallpaperRelativeImageCenter
defaultIconImageFrame
fixedCoordinateSpace
setLocalizedTitle:
filteredApplicationShortcutItemsWithStaticApplicationShortcutItems:dynamicApplicationShortcutItems:
testFlightApplication
setActivationMode:
setBundleIdentifierToLaunch:
appPlaceholder
isActive
isPrioritizable
initWithImageData:dataType:isTemplate:
isPausable
isPaused
isCancelable
applicationType
isBetaApp
applicationDisplayName
applicationIconsWithBadgesSortedByImportance
getIconImage:
initWithImageData:dataType:
setBadgeView:
_iconViewInDockOrFolder:
setIconImageAndAccessoryAlpha:
_aggregateLoggingAppKeyForIcon:
webClip
pageURL
initWithActivityItems:applicationActivities:
prioritize
bundleIdentifierToLaunch
folderView
_titleTextField
showingEditUI
selectAll:
_setupWithGestureRecognizer:
_peekAnimated:withRelativeTouchForce:allowSmoothing:
_presentAnimated:withCompletionHandler:
animator:animationSettingsForOperation:folderController:childViewController:
observer:addBulletin:forFeed:playLightsAndSirens:withReply:
observer:addBulletin:forFeed:
observer:modifyBulletin:forFeed:
observer:modifyBulletin:
observer:removeBulletin:forFeed:
observer:removeBulletin:
observer:updateSectionOrderRule:
observer:updateSectionOrder:
observer:updateSectionInfo:
observer:removeSection:
observer:noteSectionParametersChanged:forSectionID:
observer:purgeReferencesToBulletinID:
observer:noteAlertBehaviorOverridesChanged:
observer:noteAlertBehaviorOverrideStateChanged:
observer:noteInvalidatedBulletinIDs:
observer:noteServerConnectionStateChanged:
observer:noteServerReceivedResponseForBulletin:
observer:prepareAttachment:beforeDeliveringBulletin:withCompletionHandler:
observerShouldFetchAttachmentImageBeforeBulletinDelivery:
observerShouldFetchAttachmentSizeBeforeBulletinDelivery:
observer:thumbnailSizeConstraintsForAttachment:bulletin:
observer:thumbnailSizeConstraintsForAttachmentType:
observer:processData:forAttachment:bulletin:completionHandler:
observer:composedImageFromThumbnailData:forAttachment:bulletin:completionHandler:
observer:composedImageSizeForAttachment:bulletin:thumbnailSize:
observer:composedAttachmentImageForType:thumbnailData:key:
observer:composedAttachmentSizeForType:thumbnailWidth:height:key:
applicationRestrictionController:didUpdateVisibleTags:hiddenTags:
controllerClassForFolder:
folderController:draggedIconDidPauseAtLocation:inListView:
folderController:draggedIconDidMoveFromListView:toListView:
folderController:draggedIconMightDropFromListView:
folderController:draggedIconShouldDropFromListView:
folderControllerShouldClose:withPinchGesture:
folderControllerShouldBeginEditing:
folderControllerDidEndScrolling:
folderControllerDidReceiveCancelReachabilityAction:
animationDidStart:
animationDidStop:finished:
appIconForceTouchController:newIconViewCopyForGestureRecognizer:
appIconForceTouchController:iconViewFrameForGestureRecognizer:
appIconForceTouchController:applicationBundleIdentifierForGestureRecognizer:
appIconForceTouchController:applicationBundleURLForGestureRecognizer:
appIconForceTouchController:applicationShortcutWidgetBundleIdentifierForGestureRecognizer:
appIconForceTouchController:applicationShortcutItemsForGestureRecognizer:
appIconForceTouchController:iconImageInsetsForGestureRecognizer:
appIconForceTouchController:iconImageCornerRadiusForGestureRecognizer:
appIconForceTouchController:parallaxSettingsForGestureRecognizer:
appIconForceTouchController:zoomDownViewForGestureRecognizer:
appIconForceTouchController:zoomDownCenterForGestureRecognizer:
appIconForceTouchController:shouldHandleGestureRecognizer:
appIconForceTouchController:shouldUseSecureWindowForGestureRecognizer:
appIconForceTouchController:willPresentForGestureRecognizer:
appIconForceTouchController:didPresentForGestureRecognizer:
appIconForceTouchController:willDismissForGestureRecognizer:
appIconForceTouchController:didDismissForGestureRecognizer:
appIconForceTouchController:shouldActivateApplicationShortcutItem:atIndex:forGestureRecognizer:
iconTouchBegan:
icon:touchMoved:
icon:touchEnded:
iconShouldAllowTap:
icon:canReceiveGrabbedIcon:
icon:openFolder:animated:
iconCloseBoxTapped:
iconViewDisplaysBadges:
iconViewDisplaysCloseBox:
iconLabelWidth
supportsDock
canAddWebClip:
canAddDownloadingIconForApplication:
iconModel:applicationWithBundleIdentifier:
placeholdersByDisplayIDForIconModel:
iconModel:customInsertionIndexPathForIcon:inRootFolder:
willUnarchiveIconModel:withMetadata:
canSaveIconState:
didSaveIconState:
didDeleteIconState:
viewMapShouldPrepareViewsOfClasses:
viewMap:numberOfViewsToPrepareOfClass:
viewMap:configureIconView:
iconViewClassForIcon:location:
windowForRecycledViewsInViewMap:
viewMap:willRecycleView:
firstPageLeafIdentifiers
folderNameForDisplayID:
showDeveloperBuildExpirationAlertIfNecessaryFromLockscreen:toLauncher:
isFolderScrolling
updateCurrentIconListIndexAndVisibility
currentFolderIconList
dropDestinationIconList
addNewIconsToDesignatedLocations:saveIconState:
popToCurrentRootIconListWhenPossible
isPerformingExpandTransition
isPerformingCancelledCollapseTransition
insertIcon:atIndexPath:moveNow:
uninstallIcon:
isAnimatingForUnscatter
dismissApplicationShareSheetIfPresented:completion:
noteViewCovered
recipientIcon
_iconListIndexIsValid:
activateTodayViewWithCompletion:
isShowingTodayView
isShowingOrTransitioningToTodayView
_visibleTags
_hiddenTags
_iconModel
_needsRelayout
_sendITunesNotification
_bbObserver
_displayIDsWithBadgingEnabled
_closingFolder
_launchingIcon
_highlightedIcon
_iconToReveal
_grabbedIcon
_recipientIcon
_droppedIconsAnimatingIntoPlace
_droppedIconsInToOrOutOfFolder
_numberOfDroppedIconsAnimatingIntoOrOutOfFolder
_lastTouchedIcon
_animatingFolder
_grabbedIconIsDraggedOutOfFolderView
_grabbedIconSourceFolder
_allowsUninstall
_iconAlpha
_oldScrollOffset
_lastTouch
_folderSpringloadTimer
_keyboardIsRotating
_isAnimatingFolderCreation
_isAnimatingForUnscatter
_isAnimatingSignficantly
_maxIconViewsInHierarchy
_iconColorSettings
_showingSearch
_indexPathToResetTo
_performedInitialLayout
_appIconForceTouchController
_appIconForceTouchIconView
_appIconForceTouchEditingTimer
_appIconForceTouchEditingScore
_appIconForceTouchSkipCancelAllTouches
_currentTransitionRequest
_currentExpandCompletions
_currentCollapseCompletions
_transitionEventQueue
_queryableFolderMetric
_homescreenIconViewMap
_iconVisibilityService
_previousIconLocationTracker
_hasRestrictedEnforcedLayout
_uninstallingSystemAppsRestricted
presentation
setCoordinateSpace:
presentationWithCoordinateSpace:
unionPresentation:
addRegion:
addRegions:
bs_filter:
firstRegionIntersectingCoordinateSpace:
presentationForRole:
appendUnsignedInteger:withName:
presentationForProvider:
firstRegionIntersectingCoordinateSpace:excludingRegionsWithRole:
regionsIntersectingCoordinateSpace:
_regions
activeInterfaceOrientationIgnoringSourcesAbove:
allWindowsIncludingInternalWindows:onlyVisibleWindows:
_sortSources:
orientationSourceLevel
sortUsingComparator:
interfaceOrientationSources
_highestSourceAtOrBelow:amongSources:
_stateCaptureHandle
_configureForInnerFolderController:
_iconPageIndicatorImageSetCache
_interactionAffordances
_supportsKnobEvents
_supportsTouchEvents
_regenerateImage
initWithStyle:diameter:
_monogrammerForLegibilitySettings:diameter:
initWithSettings:strength:image:
monogramForContact:
setImage:shadowImage:
strength
setStrength:
setContact:
contact
diameter
setDiameter:
_contact
_monogramLegibilityView
_legibilityStrength
_diameter
__systemService
openApplication:options:withResult:
_openNotificationCenter
initWithForceHidden:
initWithSceneID:
_wallpaperStyle
_enableContextHosting
_updateStatusBarVisibilityForContextHostView
observeStatusBarContextIDWithBlock:
backgroundView
observeBackgroundStyleWithBlock:
initWithApp:referenceSize:orientation:display:
_disableContextHosting
displayMode
_forcesStatusBarHidden
statusBarDescriptor
breadcrumbTitle
breadcrumbSecondaryTitle
appendSuper
systemPinkColor
_clearSnapshotViews
removeAllObservers
setPlaceholderView:withAnimationFactory:
_crossfadeFromDisplayMode:showingView:toDisplayMode:showingView:options:withAnimationFactory:completion:
_setEffectiveDisplayMode:options:withAnimationFactory:completion:
_activationStateDidChange:
isForcedHidden
setForceHidden:
_updateStatusBarVisibility
scene
_recheckLiveContentDependencies
inspectDiff:withContext:
_configureViewForEffectiveDisplayMode:
_viewForDisplayMode:
_bestDisplayModeLessThanMode:
_configureStaticContentView
_configureSceneSnapshotView
_configureContextHostView
isHiddenOrHasHiddenAncestor
crossfadeViewWithStartView:endView:translucent:
setAnimationFactory:
setAllowsGroupOpacityDuringCrossfade:
setAdaptsAnimationFactoryTimingFunction:
crossfadeWithCompletion:
_shouldLoadInterfaceFileBasedStaticContent
_launchInterfaceView
_snapshotOrDefaultImageView
sbs_isMainScreen
bestSnapshotWithImageName:sceneID:variantID:scale:size:contentTypeMask:statusBarStateMask:launchingOrientation:
defaultSnapshotWithImageName:sceneID:size:scale:interfaceOrientation:
_naturalSize
zoomViewForApplication:screen:interfaceOrientation:snapshot:snapshotSize:statusBarDescriptor:decodeImage:
nibWithNibName:bundle:
instantiateWithOwner:options:
_hasLiveContent
_sceneContentSnapshotView
_makeSceneContentSnapshotViewOnBackgroundQueue:completionHandler:
snapshotContextForRequester:
layersToExclude
layerManager
layers
contextID
setLayersToExclude:
snapshotViewWithContext:
capture
snapshotViewForSnapshot:
setSceneSnapshotView:
makeLiveSnapshotViewOnBackgroundQueue:completionHandler:
updateReferenceSize:andOrientation:
effectiveDisplayMode
_hotSwapStaticContentView
hostViewForRequester:appearanceStyle:
_hotSwapLiveSnapshotView
defaultDisplayModeAnimationFactory
sceneMonitor:sceneWasCreated:
sceneMonitor:sceneWasDestroyed:
sceneMonitor:sceneSettingsDidChangeWithDiff:previousSettings:
sceneMonitor:effectiveSceneSettingsDidChangeWithDiff:previousSettings:
sceneMonitor:pairingStatusDidChangeForExternalSceneIDs:
sceneMonitor:sceneClientSettingsDidChangeWithDiff:transitionContext:
sceneMonitor:sceneWillCommitUpdateWithContext:
sceneMonitor:sceneDidCommitUpdateWithContext:
placeholderView
setPlaceholderView:
setDisplayMode:withAnimationFactory:completion:
setStatusBarDescriptor:
liveSnapshotView
updateSceneSnapshotViewOnQueue:completionHandler:
contextHostingRequester
contextHostingPriority
displayModeOptions
sceneSnapshotView
cachedResizeIconView
setCachedResizeIconView:
_displayMode
_effectiveDisplayMode
_options
_sceneMonitor
_clientSettingsInspector
_contextHostingPriority
_contextHostingRequester
_clientPlaceholderView
_staticContentView
_sceneSnapshotView
_cachedResizeIconView
_statusBarDescriptor
wrapperWithFrame:
significantTimeChanged:
_dateLabelFont
initWithSettings:strength:string:font:
setUseColorFilters:
setMinimumScaleFactor:
setupAlternateDateLabelIfNecessary
_updateDateLabel
_layoutDateLabel
resetFormattersIfNecessary
showAlternateDate
_lunarDateFont
initWithSettings:strength:font:
dateFont
dateOnlyLunarDateFont
formatDateAsMultiLineDayOfWeekMonthDayStyle:
setString:
formatDateAsDayOfWeekMonthDayStyle:
dateOnlyLabelToLunarDateLabelBaselineDifferenceY
descender
capHeight
lastBaselineOffsetFromBottom
setUseMultiLineDate:
dateLabel
setDateLabel:
useMultiLineDate
_dateLabel
_alternateDateLabel
_useMultiLineDate
setFullscreen:
setForcesOpaque:
_updateWallpaperOrientation
sideAppPresentationStyle
prepareToAnimateToTransitionState:
setTransitionState:
desiredWallpaperOrientation
wallpaperEffectView
_desiredWallpaperOrientation
_wallpaperWrapperView
_wallpaperEffectView
leafIcons
initWithSet:
allIcons
isEqualToSet:
visibleIconIdentifiers
_canAddDownloadingIconForBundleID:
initWithApplicationPlaceholder:
leafIdentifierForApplicationPlaceholderBundleID:
bookmarkWithWebClip:
initWithBookmark:
addIconForApplication:
addDownloadingIconForDownload:
removeIconForIdentifier:
orderedSetWithCapacity:
_iconState
loadDesiredIconState:
loadCurrentIconState:
iconState
ignoresIconsNotInIconState
unarchiveRootFolderFromArchive:withIconSource:
deleteIconState
metadata
didUnarchiveMetadata:
isDirty
markIconStateClean
sort
localizedCompareDisplayNames:
sortedArrayUsingSelector:
_indexPathInRootFolder:forNewIcon:isDesignatedLocation:replaceExistingIconAtIndexPath:
insertIcon:atIndexPath:
placeIconsOnFirstPage:
indexPathForLeafIdentifier:inArchive:
deleteDesiredIconState:
allKeys
isSubsetOfSet:
indexPathForIconInPlatformState:
allowsAddingIcon:
orderedIcons
indexOfObject:inSortedRange:options:usingComparator:
indexPathForIcon:includingPlaceholders:
archivedLeafIdentifiers
deleteCurrentIconState:
saveDesiredIconState:error:
iconModelMetadata
archiveRootFolderInModel:metadata:
saveCurrentIconState:error:
isIconStateDirty
_saveIconState
_replaceAppIconsWithDownloadingIcons:
logToAggregateInstallationLog:step:success:bundleID:description:
_replaceAppIconsWithDownloadingIcons
_unarchiveRootFolder
setArchivedLeafIdentifiers:
clearDesiredIconStateIfPossible
_saveDesiredIconState
applicationDataSource
initWithCurrentState:desiredState:
initWithDictionary:copyItems:
keyEnumerator
setLeafIconsByIdentifier:
setLeafIdentifiersForMasqueradeIdentifier:
iTunesRepresentationFromRootArchive:preApex:pending:iconSource:
forecastedLayoutForIconState:includeMissingIcons:
rootArchiveFromITunesRepresentation:
addDownloadingIconForBundleID:withIdentifier:
leafIconsWithIdentifiers:
_applicationIcons
expectedIconForDisplayIdentifier:
importDesiredIconState:
leafIconsByIdentifier
leafIdentifiersForMasqueradeIdentifier
allowsSaving
setAllowsSaving:
setIgnoresIconsNotInIconState:
_desiredIconState
_desiredIconStateFlattened
_leafIconsByIdentifier
_leafIdentifiersForMasqueradeIdentifier
_hiddenIconTags
_visibleIconTags
_tagsHaveBeenSet
_rootFolder
_store
_applicationDataSource
_allowsSaving
_ignoresIconsNotInIconState
_sortsIconsAlphabetically
_archivedLeafIdentifiers
initWithTransitionRequest:originalTransitionContext:
isFinishedAnimating
removeTarget:action:
addTarget:action:
_begin
updateWhitePointAdaptationStrengthWithWorkspaceTransitionRequest:animationTransitionContext:
isTrackingGesture
_continueLayoutTransitionToCompletion:startAutoPiP:updateScenes:
_cancelPendingAppLaunch
_childTransactionDidComplete:
_gestureChanged:
projectedCompletionTypeForInterval:
_gestureEndedWithCompletionType:
_gestureCancelled
_debugLoggingEnabled
_debugLogCategories
_continueLayoutTransitionWithContext:toCompletion:startAutoPiP:updateScenes:
finishWithCompletionType:
_pendingAppLaunchTimerFired
swipeTransactionFinishedAnimating:
isInterrupted
completionType
_schedulePendingAppLaunch
referenceFrameForEntity:inLayoutState:
animationControllerDidRevealApplication:
transactionWillBeginLayoutTransition:
transaction:performTransitionWithCompletion:
transaction:didEndLayoutTransitionWithContinuation:
transactionShouldConsiderLockStateForForegroundScenesDuringTransition:
startTrackingGesture:
_canBeInterrupted
_finishWithCompletionType:
nextTransitionContext
setNextTransitionContext:
previousTransitionContext
setPreviousTransitionContext:
_animationController
_sceneLayoutTransaction
_layoutCompletion
_layoutContinuation
_delayedAppLaunchTimer
_trackingGesture
_endLayoutTransition
_completingAnimation
_basePercentage
_originalTransitionContext
_nextTransitionContext
_previousTransitionContext
_autoPiPTransaction
screens
_screenDidConnect:
_screenDidDisconnect:
screenManager:shouldBindConnectionHandlerToScreen:withDisplay:
screenManager:didTriggerConnectionHandlerEvent:forScreen:withDisplay:
_updateHandlerForConnectionToScreen:withDisplay:
dictionaryWithCapacity:
addConnectionHandler:
_handlers
_displayToHandlerMap
_displayToScreenMap
setMaximumIntervalBetweenPresses:
_configureGestureRecognizers
screenshotGesture:
allowedTouchTypes
performTakeScreenshotAction
setButtonActions:
screenshotGestureRecognizer
setScreenshotGestureRecognizer:
setHomeHardwareButton:
setLockHardwareButton:
_buttonActions
_screenshotGestureRecognizer
_handleClockNotificationUpdate:
_pendingNotificationRequestsDidChange:
getPendingNotificationRequestsWithCompletionHandler:
_stopTimer
_startTimer
timerView
setEndDate:
_stopTimerNotifyingDelegate:
timerControllerDidStopTimer:
isEndDateValid
_updateTimerFired
timerWithTimeInterval:target:selector:userInfo:repeats:
_updateTimerLabelView
timerControllerDidStartTimer:
updateTimerLabel
content
bs_firstObjectPassingTest:
_scheduledTimerDidChange:
trigger
isTimerActive
_enabled
_updateTimer
_endDate
_handlePinchGesture:
_updatePinchScale:
pinchGesture
velocity
endInteraction:
setPercentComplete:
_pinchInterval
_pinchGesture
initWithFolderController:
setCriticalIconNodeIdentifiers:
referenceView
_forceSquareZoomDimension
folderController
targetIcon
extraIconViewForIcon:
referenceIconView
targetIconView
labelView
setLabelAccessoryViewHidden:
_zoomedFrame
iconImageVisibleSize
_setZoomScale:
borrowScalingView
anchorPoint
_visualAltitude
_configureTargetIconPositioningView:
_zoomedIconCenter
targetIconContainerView
_setAnimationFraction:
_applyZoomFraction:
_applyVisualAltitudeFraction:
_applyIconGridFadeFraction:
_applyOuterFadeFraction:
returnScalingView
animationCompletions
setHomeScreenScaleAnimator:
setTargetIconScaleXAnimator:
setTargetIconScaleYAnimator:
fadesHomeScreen
_setIconAlpha:
_numberOfSignificantAnimations
_performAnimationToFraction:withCentralAnimationSettings:delay:alreadyAnimating:sharedCompletion:
homeScreenScaleAnimator
settingsWithMass:stiffness:damping:
reverseWithSettings:directionChangeSettings:headStart:
targetIconScaleXAnimator
targetIconScaleYAnimator
_homeScreenScaleForZoomFraction:
valueForKeyPath:
initWithLayer:keyPath:initialValue:targetValue:
_targetIconScaleForZoomFraction:
animateWithSettings:completion:
animateWithFactory:additionalDelay:options:actions:completion:
animateWithFactory:additionalDelay:options:actions:
maxHomeScreenZoomScale
_zoomedVisualAltitude
_convertVisualAltitude:fromView:
_setVisualAltitude:
fadeContentForMagnificationFraction:
initWithFolderController:targetIcon:
setAnimationCompletions:
zoomScaleDimension
_iconScootch
_naturalVisualAltitude
_scalingView
_targetIconView
_targetIconPositioningView
_testCompletionCount
_homeScreenScaleAnimator
_targetIconScaleXAnimator
_targetIconScaleYAnimator
_animationCompletions
_targetIcon
_zoomScaleDimension
stopWatchingForDevices
firstBTDeviceToReportBatteryLevel
pairedDevices
iapDeviceChanged:
connectionChanged:
addDeviceNotification:
removeDeviceNotification:
batteryChanged:
bluetoothDeviceInitiatedVoiceControl:
bluetoothDeviceEndedVoiceControl:
noteDevicesChanged
updateBattery
canReportBatteryLevel
batteryLevel
startWatchingForDevices
updateTetheringConnected
deviceForAudioRoute:
tetheringConnected
_devices
_tetheringConnected
_teardownRequestQueues
_handlingQueue_setBulletinHandlingEnabled:
serialQueue
_handlingQueue_setSectionHandlingEnabled:
representedBulletin
defaultAction
sb_nonPluginDefaultAction
notificationCenterTableViewController:didSelectAction:forRow:inSection:
behavior
shouldDismissBulletin
clearBulletins:inSection:
modallyPresentBannerForBulletin:action:
isAuthenticationRequired
activationMode
_lockScreenViewController
authenticateForNotificationActionWithCompletion:
bulletinActionHandler
handleAction:forBulletin:withCompletion:
ncTableViewController
insertSection:beforeSection:
removeRow:inSection:
moveSection:beforeSection:
replaceWithSection:section:
reorderSections:
insertRow:beforeRow:inSection:
hasContent
transitionToBulletinViewControllerViewIfNecessary
transitionToContentUnavailableViewIfNecessary
replaceWithRow:row:inSection:
representedListSection
setRequestHandlingEnabled:
sectionWithIdentifier:
_numberOfBulletinsInSection:
_bulletinAtIndex:inSection:
_feedsForBulletinID:
commitInsertionOfBulletin:beforeBulletin:inSection:forFeed:
pushUpdatesAgainForSectionWithIdentifier:feeds:
infoForBulletinSection:
_addBulletinID:toSetForFeed:
willAssociateBulletin:withSection:forFeed:
_addBulletinID:toSetForFeeds:
didAssociateBulletin:withSection:forFeed:
infoForBulletin:inSection:forFeed:
willDisassociateBulletin:fromSection:
_removeBulletinIDFromAllFeeds:
_isBulletin:associatedWithSection:forFeed:
sortVisibleSections
_indexOfBulletin:inSection:
commitReplacementWithBulletin:ofBulletin:inSection:
_associateBulletin:withSection:forFeed:
_insertSectionIfNecessary:commit:
_bulletinAfterBulletin:inSection:
_isBulletin:associatedWithSection:
_disassociateBulletin:fromSection:
commitRemovalOfBulletin:fromSection:
removeSection:
_reassociateBulletin:withSection:
_enabledSectionWithIdentifier:
indexOfSectionWithIdentifier:
_numberOfVisibleSections
_sectionIdentifierAtIndex:
_isSectionVisible:
_setSection:visible:
_updateMakeshiftSectionOrderIfNecessary:
sectionAfterSection:
commitInsertionOfSection:beforeSection:
requestListBulletinsForSectionID:
getSortDescriptorsForSectionID:withCompletion:
infoForSection:
_setSection:enabled:
_removeBulletin:fromSection:
commitRemovalOfSection:
clearSection:
commitReorderOfSections:
_sortAndCommitReloadOfSections
_addSection:
updateSection:withInfo:
updateSection:withParameters:
_loadSection:
enqueueRequest:
getParametersForSectionID:withCompletion:
removeAndDisableSection:
initWithSerialQueue:workQueue:executionCondition:
_makeQueueWithLabel:
setSectionRequestQueue:
setBulletinRequestQueue:
prepareWithCompletion:
enqueueAsyncRequest:
_teardownRequestQueue:
observer
_addBulletin:toSection:forFeed:
_enqueueBulletinRequest:forBulletinInfo:
_replaceBulletin:inSection:
_setSectionOrderRule:
_setSectionOrder:andSortSections:
_updateSection:completion:
listThumbnailConstraintsForAttachmentType:
listImageForAttachmentType:thumbnailData:
listImageSizeForAttachmentType:thumbnailWidth:height:
_bulletinWithIdentifier:inSection:
_setupRequestQueues
setBulletinHandlingEnabled:
getSectionInfoForActiveSectionsWithCompletion:
getSectionOrderRuleWithCompletion:
initWithObserverFeed:
isBulletinHandlingEnabled
isSectionHandlingEnabled
setSectionHandlingEnabled:
isRequestHandlingEnabled
sectionOrderRule
notificationCenterTableViewController:shouldHighlightRow:inSection:
notificationCenterTableViewController:didSelectRow:inSection:
commitMoveOfSection:beforeSection:
commitReplacementWithSection:ofSection:
isRePushingUpdates
pushUpdatesAgainForFeeds:
firstSection
sectionRequestQueue
bulletinRequestQueue
_observer
_feed
_sectionRequestQueue
_bulletinRequestQueue
_enabledSectionInfosByID
_visibleSectionIDs
_bulletinIDsByFeed
_sectionOrderRule
_sectionOrder
_makeshiftSectionOrder
_handlingControlQueue
_bulletinHandlingDisabledCount
_sectionHandlingDisabledCount
_bulletinObserverViewControllerFlags
initWithPresentedViewController:presentingViewController:
_setContainerIgnoresDirectTouchEvents:
_removeCounterRotationIfNecessary
_setRotatableViewOrientation:duration:force:
presentationTransitionDidEnd:
dismissalTransitionDidEnd:
shouldPresentInFullscreen
shouldRemovePresentersView
_shouldDisableInteractionDuringTransitions
_frameForTransitionViewInPresentationSuperview:
_adjustOrientationIfNecessaryInWindow:forViewController:preservingViewController:
_counterRotatedView
_setCounterRotatedView:
_counterRotatedAngle
_setCounterRotatedAngle:
_counterRotatedOriginalBounds
_setCounterRotatedOriginalBounds:
initWithPattern:options:error:
firstMatchInString:options:range:
range
numberOfRanges
rangeAtIndex:
substringWithRange:
ussdFilterStrings
ussdFilterSometimesStrings
_init
queueWithDispatchQueue:
initWithIdentifier:queue:clientAuthenticator:
_handleCarPlayFetchIconState:fromClient:
_handleCarPlaySetIconState:fromClient:
_handleCarPlayResetIconState:fromClient:
_handleCarPlayFetchApplication:fromClient:
_handleHarmonyFetchWhitePointAdaptivityStyleMessage:fromClient:
_handleRemovabilityFetchRemovabilityMessage:fromClient:
_handleRemovabilitySetRemovalAllowedMessage:fromClient:
_handleShortcutFetchApplicationShortcutItemsMessage:fromClient:
_handleShortcutUpdateDynamicApplicationShortcutItemsMessage:fromClient:
sendReplyMessageWithPacker:
payload
applicationServer:client:fetchIconOrderForVehicleId:withCompletion:
applicationServer:client:setIconOrder:hiddenIcons:forVehicleId:
applicationServer:client:resetAppIdentifierOrderForVehicleId:
applicationServer:client:fetchApplicationForBundleIdentifier:inVehicle:withCompletion:
applicationServer:client:fetchWhitePointAdaptivityStyleForDisplayId:withCompletion:
applicationServer:client:fetchApplicationShortcutItemsOfTypes:forBundleIdentifier:withCompletion:
applicationServer:client:setDynamicApplicationShortcutItems:forBundleIdentifier:
noteDidReceiveMessage:withType:fromClient:
carPlayDelegate
setCarPlayDelegate:
harmonyDelegate
setHarmonyDelegate:
removabilityDelegate
shortcutDelegate
setShortcutDelegate:
_carPlayDelegate
_harmonyDelegate
_removabilityDelegate
_shortcutDelegate
setShouldShowInLockScreen:
setForcesModalAlertAppearance:
setBehavesSuperModally:
setAllowMenuButtonDismissal:
setAllowLockScreenDismissal:
setReappearsAfterUnlock:
_shouldShowInLockScreen
_allowLockScreenDismissal
_reappearsAfterUnlock
_reappearsAfterLock
initWithName:
_updateAVRoutes
statusBarDefaults
suppressStatusBarOverrideForScreenSharing
_updateScreenSharingStatusBarStyleOverrideSuppressionPreference:
_cancelPendingVolumeChange
_clearScreenSharingStatusBarStyleOverride
_clearVideoOutStatusBarStyleOverride
_nowPlayingInfo
_sendMediaCommand:
applicationCanBeConsideredNowPlaying:
isScreenSharing
muted
_commitVolumeChange:
changeVolumeBy:forCategory:
handsetRouteIsPicked
volumeControlIsAvailable
routeOtherThanHandsetAvailable
wirelessDisplayRouteIsPicked
pickedRoute
routeName
_systemVolumeChanged:
_systemMuteChanged:
_softMuteChanged:
_externalScreenChanged:
_authenticationStateChanged:
updateScreenSharingStatusBarStyleOverride
_updateLastRecentActivtyDate
routingControllerAvailableRoutesDidChange:
routingController:pickedRouteDidChange:
routingControllerExternalScreenTypeDidChange:
routingController:didFailToPickRouteWithError:
routingControllerDidPauseFromActiveRouteChange:
hasTrack
isFirstTrack
isLastTrack
isApplicationActivityActive
lastActivityDate
suppressHUD
setSuppressHUD:
_startVideoOutStatusBarStyleOverride
skipFifteenSeconds:
setVolume:
handsetRouteIsSelected
routeOtherThanHandsetIsAvailable
nameOfPickedRoute
_nowPlayingInfoChanged
_nowPlayingPIDChanged
_nowPlayingAppIsPlayingDidChange
_applicationActivityStatusDidChange:
_manualVolumeChangeCount
_pendingVolumeChange
_volumeCommitTimer
_debounceVolumeRepeat
_lastNowPlayingAppPID
_lastNowPlayingAppIsPlaying
_lastMediaRemoteAppActivityStatus
_suppressHUD
_ringerMuted
_screenSharing
_screenSharingSetsStatusBarOverride
_screenSharingStatusBarOverrideTimer
_videoOutStatusBarOverrideTimer
_routingController
_lastActivityDate
_screenSharingStatusBarStyleOverrideAssertion
_videoOutStatusBarStyleOverrideAssertion
requiresAuthentication
isPresentingBanner
supportsContentExtensions
presentModalBannerForNotificationRequest:sourceAction:
_requestAuthenticationWithCompletion:
dispatcher:requestPermissionToExecuteAction:forDestination:notificationRequest:withParameters:completionBlock:
dispatcher:willExecuteAction:forNotificationRequest:withParameters:completionBlock:
dispatcher:didExecuteAction:forNotificationRequest:
dispatcher:launchForegroundApplicationForAction:notificationRequest:fromDestination:withParameters:
dispatcher:launchBackgroundApplicationForAction:notificationRequest:fromDestination:withParameters:
_isPushOrLocalNotificationRequest:
_launchOriginFromDestination:
_bannerDestination
restartTransition
restart
invalidated
currentSettings
initialDelay
wasPreviousPhaseInteractive
hintAnimator
setCompletion:
hintFraction
backgroundDarkeningView
fraction
iconAnimatorWasInvalidated:
wasRestarted
_currentSettings
_currentOperation
_receivedFirstInteractiveUpdate
_needsTransitionTokenIncrementOnNextUpdate
_folderController
_childViewController
_operation
_initialDelay
launchURL
webApplications
bookmarkIcon
setBookmarkIcon:
bookmark
_bookmark
_unhostSideAppToStopHidingThem
tableView
reloadData
indexPathForRow:inSection:
insertRowsAtIndexPaths:withRowAnimation:
deleteRowsAtIndexPaths:withRowAnimation:
_returnToDisplayItem
_hostSideAppToHideThem
startInteractiveTransition:presenting:withRequest:
setTransitionParameters:
endTransitionWithSuccess:completion:
_animateUsingDefaultTimingWithOptions:animations:completion:
appViewForApplication:inLayoutRole:withLayoutContext:hostRequester:
_returnToSideDisplayItem
registerClass:forCellReuseIdentifier:
dequeueReusableCellWithIdentifier:forIndexPath:
section
textLabel
switcherContentController:activatedBestAppSuggestion:
switcherContentController:selectedItem:
deselectRowAtIndexPath:animated:
switcherContentController:canDeleteItem:
switcherContentController:deletedItem:
snapshotScale
hasInteractiveContentAtBottomOfScreen
endInteractionWithCommitment:
nextDisplayItem
animatePresentationForTransitionRequest:withCompletion:
animateDismissalToDisplayItem:forTransitionRequest:withCompletion:
insertDisplayItem:atIndex:completion:
removeDisplayItem:forReason:completion:
replaceDisplayItem:withDisplayItem:completion:
suppressBackgroundForReason:
stopSuppressingBackgroundForReason:
_setReturnToDisplayItem:
_setReturnToSideDisplayItem:
_initialDisplayItem
_setInitialDisplayItem:
_initialLayoutState
_setInitialLayoutState:
displayItems
setDisplayItems:
bestAppSuggestion
setBestAppSuggestion:
numberOfSectionsInTableView:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:canEditRowAtIndexPath:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
_displayItems
_temporaryAppView
_temporarySideAppView
_bestAppSuggestion
initWithFolderView:statusBarHeight:
didAddSubview:
_launchIPodIfNecessary
initWithWorkspaceTransitionRequest:animationSettings:animationBlock:
_animationBlock
initWithNotificationRequest:viewController:
_tickTimerFired:
doesNotRecognizeSelector:
invalidateTimer
_appName
_formatDuration:
notificationRequest
localizedNameForContext:
formatAlarmSnoozeDuration:
setHasUpdatedContent
updateContent
secondaryText
fireTime
setFireTime:
tickTimer
setTickTimer:
_fireTime
_tickTimer
smsDefaults
isComposingNewMessage
iMChatUnreadConversationCount
suspendedGroupId
pluginBundleForName:type:
_pluginBundleForPluginWithName:
initWithBundle:activationContext:
awakeFromBundle
pluginWillActivateWithContext:
pluginDidDeactivateWithContext:
pluginHandleEvent:
pluginAgent
setPluginAgent:
pluginPriority
pluginViewController
pluginAppearance
pluginUnlockAction
loadPlugin:
overrideForElement:
elementOverrides
element
appearanceWithIdentifier:
pageControl
setComponents:
setRestrictedCapabilities:
initWithAppearance:
setAuxiliaryAnimation:
_updateAppearance:
activatePluginController:
deactivatePluginController:
pluginController:updateAppearance:
pluginController:sendAction:
appendClass:withName:
pluginWithName:activationContext:
unlockAction
isElementHidden:
addLifecycleObserver:
removeLifecycleObserver:
enumerateLifecycleObserversUsingBlock:
_bundle
_bundleName
_controller
_agent
_appearance
_lifecycleObservers
_auxiliaryActivationAnimationBlock
_auxiliaryDeactivationAnimationBlock
initWithWallpaperController:
_wallpaperLegibilitySettings
_notifyDelegate
dashBoardLegibilityProviderDidUpdate:
currentLegibilitySettings
wallpaperController
setWallpaperController:
_wallpaperController
_checkDocumentsInCloudStateIfNeeded
_startCheckingForRelatedExternalDataIfNeeded
_hasRelatedData
setHasGameKitData:
setHasHealthKitData:
setUninstalledByUser:
cancelDownload
hasAuthenticatedAccount
isHealthDataAvailable
hasSourceWithBundleIdentifier:completion:
_waitForRelatedDataResponsesIfNeeded
_checkedDocumentsInCloudState
_appHasDocumentsOrDataInCloud
_askedUserAboutDocumentsInCloud
_askedUserAboutDocumentsWithPendingUpdates
_checkedForRelatedData
_finishedCheckingForRelatedData
_appHasHealthKitData
_appHasGameKitData
_healthKitResponseSem
_accessibilityOptionsChanged:
_evaluateTriggerClass
_unlockTriggerWithClass:
initWithMesaSettings:andUnlockTrigger:
_expectedTriggerClassIncludingAccessibility:
mesaUnlockBehaviorConfigurationDidChange:
_isAccessibilityRestingUnlockPreferenceEnabled
liftToWakeControllerEnablementDidChange:
liftToWakeController:didObserveTransition:
initWithDashBoardViewController:liftToWakeController:lockScreenPrototypeSettings:
newBehaviorForCurrentConfiguration
_currentUnlockTriggerClass
_liftToWakeController
_prototypeSettings
_currentTriggerClass
_beginReset:
markObliterationStart
hasPassesOfType:
isRemovingPassesOfType:
performPaymentCardDeletionWithCompletion:
setRestartType:
_setProgress:
_resetThread
detachNewThreadSelector:toTarget:withObject:
removePassesOfType:withDiagnosticReason:
_resetFinished
_postResetEnded
passLibrary:removingPassesOfType:didUpdateWithProgress:
passLibrary:removingPassesOfType:didFinishWithSuccess:
_threadRunning
_progressLock
_obliterationController
_paymentCardsExist
_passLibrary
_paymentCardDeletionProgressStack
_postCardDeletionHandler
_resetThreadSemaphore
resetAllSettingsToDefaults
resetApps
locale
keyboards
removePersistentDomainForName:
fileSystemRepresentation
flushExternalCaches
writeToFile:atomically:
setAttributes:ofItemAtPath:error:
setLanguages:
setKeyboards:
setApplicationPlaceholder:
gridCellImage
_darkenedIconImageForImage:
initWithWhite:alpha:
iconFormatForLocation:
fetchIconImageWithFormat:
getGenericIconImage:
uninstalledByUser
removeIconDataSource:
realDisplayName
reloadForStatusChange
_wasUninstalledByUser
_appPlaceholder
_updateCallPluginPresentationStyle
_passcodeLockedStateChanged:
_effectivePresentationStyle
isHidingPasscodeViewDuringCall
_buttonHeight
buttons
activateApplications
updateWhitePointAdaptationStrength
_initWithUserManager:
registerCriticalUserSwitchStakeHolder:
currentUser
isMultiUserSupported
unregisterStakeHolder:status:reason:
_setUserSwitchPending:
isMultiUser
isLoggingOut
userType
logoutWithCompletion:
canLogout
_displayProgressAlertIfNeeded
setLoggingOut:
switchToLoginUserWithCompletionHandler:
disableUser:completionHandler:
modifyBody:
taskWithName:reason:
_noteApplicationDidExit:
_evaluateRunningApplications
prepareForRestart
_portraitOrientedProgressLocationForOrientation:
progressIndicatorWithStyle:position:
setProgressIndicatorProperties:
shouldTurnOnScreenForBacklightSource:
refreshData
_massageApplicationListForDisplay:
initWithUserAccount:
predicateWithBlock:
filterUsingPredicate:
mainSwitcherDisplayItems
numberWithUnsignedLong:
localizedCompare:
pendingApplicationsForLogoutProgressAlertViewController:
debugBlockingTasksForLogoutProgressAlertViewController:
willSwitchToUser:
readyToSwitchToUser:
userSwitchBlockingTasksDidUpdate:
logout
disableCurrentUser
_setPolicyAggregator:
_userManager
_lazy_user
_lazy_policyAggregator
_progressAlert
_displayApplications
_terminatingApplications
_terminateApplicationsTask
_terminateApplicationsStartDate
_debugBlockingTasks
_loginSession
_loggingOut
errorWithDomain:code:userInfo:
setWantsNumberOfLineFragments:
numberOfLineFragments
setMaximumNumberOfLines:
defaultFontForPrimaryText
defaultFontForSecondaryText
_bodyLeading
fontDescriptorWithSymbolicTraits:
preferredFontForTextStyle:symbolicTraits:
defaultColorForRelevanceDate
defaultFontForRelevanceDate
defaultColorForEventDate
defaultFontForEventDate
initWithStyle:reuseIdentifier:
setSeparatorInset:
setStartDate:withTimeZone:
setEndDate:withTimeZone:
startCoalescingUpdates
stopCoalescingUpdates
isAllDay
setAllDay:
labelType
setLabelType:
isTimestamp
setIsTimestamp:
recycleLabel:
defaultColorForPrimaryText
defaultFontForSubtitleText
defaultColorForSubtitleText
defaultColorForSecondaryText
setupRelevanceDateLabel:
setupEventDateLabel:
shouldVerticallyCenterContent
contentWidthWithRowWidth:andAttachmentSize:forLayoutMode:
firstLineBaselineOffsetFromTop
firstLineBaselineOffsetFromTopNoIcon
sb_yPositionForLabelWithContainerBounds:baselineOffset:font:
actionButtonPaddingLeft
paddingBetweenTitleAndRelevanceDate
numberOfLines
textRectForBounds:limitedToNumberOfLines:
secondLineBaselineOffsetFromFirstLine
sb_yPositionForLayoutAfterLabel:baselineOffset:
_setShouldHaveFullLengthTopSeparator:
_setShouldHaveFullLengthBottomSeparator:
dateLabelDidChange:
primaryText
setPrimaryText:
setSecondaryText:
setSecondaryContentViewController:
setActionButton:
relevanceDateLabel
setRelevanceDateLabel:
eventDateLabel
setEventDateLabel:
primaryTextColor
setPrimaryTextColor:
subtitleTextColor
setSubtitleTextColor:
secondaryTextColor
setSecondaryTextColor:
setSecondaryTextNumberOfLines:treatAsUpperBound:
relevanceDateColor
setRelevanceDateColor:
eventDateColor
setEventDateColor:
setAttachmentImage:
primaryTextAlpha
setPrimaryTextAlpha:
subtitleTextAlpha
setSubtitleTextAlpha:
secondaryTextAlpha
setSecondaryTextAlpha:
relevanceDateAlpha
setRelevanceDateAlpha:
eventDateAlpha
setEventDateAlpha:
iconAlpha
setIconAlpha:
attachmentAlpha
setAttachmentAlpha:
secondaryTextNumberOfLines
secondaryTextNumberOfLinesIsUpperBound
realContentView
primaryLabel
subtitleLabel
secondaryLabel
iconView
actionButton
attachmentView
secondaryTextHeight
setSecondaryTextHeight:
secondaryContentViewController
_realContentView
_primaryLabel
_secondaryLabel
_relevanceDateLabel
_eventDateLabel
_actionButton
_attachmentView
_attachmentSize
_secondaryContentViewController
_secondaryTextNumberOfLinesIsUpperBound
_secondaryTextNumberOfLines
_secondaryTextHeight
setCustomOverlayDescriptor:
requester
setRequester:
restartType
wantsPersistentSnapshot
customOverlayDescriptor
applicationLaunchURL
setApplicationLaunchURL:
_requester
_restartType
_delay
_wantsPersistentSnapshot
_customOverlayDescriptor
_applicationLaunchURL
configurationForSettingsLayoutWithId:onScreen:
traitCollectionWithDisplayScale:
traitCollectionWithUserInterfaceIdiom:
traitCollectionWithTraitsFromCollections:
setGeoSupported:
rightHandDrive
supportsFocus
transportType
OEMIconVisible
supportedFeatures
vehicleAmbientBrightness
effectivePolicyForAppDeclaration:
_simulatedAccessoryProtocols
set_simulatedAccessoryProtocols:
configurationForSettingsLayoutWithId:
initWithVehicleInformation:device:screen:display:
setKnownVehicle:
setPairedVehicle:
simulatedAccessoryProtocols
setSimulatedAccessoryProtocols:
setAcBackSupported:
setLayoutId:
_vehicleInformation
_layoutJustification
_screenScale
_screenSupportsFocus
_traitCollection
_connectedWirelessly
_knownVehicle
_OEMIconVisible
_pairedVehicle
_appPolicyEvaluator
_appPolicyForBundleID
_acBackSupported
_layoutId
_capabilityForKey:
_clearAggdKeysForLocations:
wallpaperDefaults
dateIrisWallpaperLastPlayed
irisWallpaperPlayCount
isDateInToday:
setDateIrisWallpaperLastPlayed:
setIrisWallpaperPlayCount:
updateWallpaperAggdKeysForLocations:withHasVideo:hasProcedural:name:
saveWallpaperAggdCurrentValues
incrementIrisPlayCount
_valueString
_bucketedPlayCount
_resetPlayCountDate
_aggd_lockscreenWallpaperType
_aggd_lockscreenWallpaperIdentifier
_aggd_homescreenWallpaperType
_aggd_homescreenWallpaperIdentifier
_aggd_irisWallpaperEnabled
_aggd_sharedWallpaper
presentAlertItem:isLocked:animated:
_sharedInstanceCreateIfNecessary:
initWithBundleIDs:states:elevatedPriority:
setHandler:
setPrefetchedKeys:
addApplicationLifecycleObserver:
appLibrary
installedApplicationWithBundleIdentifier:
allInstalledApplications
_loadApplications:removed:
_lockStateChanged:
_memoryWarningReceived
_deviceFirstUnlocked
_noteApplicationIconChanged:
_finishDeferredMajorVersionMigrationTasks_FlushSystemSnapshots
_finishDeferredMajorVersionMigrationTasks_FlushLegacySnapshots
_lock_applicationWithBundleIdentifier:
_removeApplicationsFromModelWithBundleIdentifier:forInstall:withReason:
_sendInstalledAppsDidChangeNotification:removed:modified:
increment
decrement
uninstallApplication:withOptions:completion:
wait
_unusuallyMutedAudioPlaying:
noteApplicationIdentifiersDidChangeWithAdded:modified:removed:
_appClassForInfo:
_preLoadApplications
_loadApplicationFromApplicationInfo:
_appInfosToBundleIDs:
_updateIconControllerAndModelForLoadedApplications:reveal:popIn:reloadAllIcons:
noteVisibilityOverridesDidChange
_loadApplicationsAndIcons:removed:reveal:
_updateVisibilityOverrides
setWithCapacity:
bundleID
allBundleIdentifiers
alwaysAvailableApplicationBundleIdentifiers
noteNeedsToRefreshVisiblityOverrides
bundleIdentifiersWithVisibilityOverrideHidden
applicationsAdded:
applicationsModified:
applicationsRemoved:
applicationsDemoted:
applicationService:setBadgeValue:forBundleIdentifier:
applicationService:getBadgeValueForBundleIdentifier:withCompletion:
applicationService:deleteAllSnapshotsForBundleIdentifier:
applicationService:setNextWakeDate:forBundleIdentifier:
applicationService:suspendApplicationWithBundleIdentifier:
service:canAcquireTerminationAssertion:completionHandler:
service:didAcquireTerminationAssertion:
service:didRelinquishTerminationAssertion:
faceTimeApp
inCallServiceApp
clockApplication
iPodOutApplication
loginApplication
_loadApplicationWithoutMutatingIconState:
_applicationsByBundleIdentifer
_applicationsPlayingMutedAudioSinceLastLock
_backgroundDisplayDict
_applicationsLock
_systemAppsVisibilityOverrides
_cachedSystemAppsWithVisibilityOverrideHidden
_appStateMonitor
_booting
_appsToAutoLaunchAfterBoot
_restrictionController
_appLibraryObserver
_appLibrary
_systemAppInfo
_uninstallationReverseSemaphore
isCurrentPageTransparent
_fromAlert
_needsAnimatedFade
cachePassphraseWithInfo:
uncachePassphraseWithInfo:
allowAuthenticationRevocation
shouldClearBlockStateOnSync
usesSecureMode
wipeDeviceWithReason:
cachePasscode:
clearPasscodeCache
passcodeAuthenticationFailedWithError:
_secureBackupHelper
_setSecureBackupHelper:
_initWithDataSource:persistenceCoordinator:sceneManagerCoordinator:
saveScreenshotsWithCompletion:
isSaving
_fetchEligibleScreenshotProvidersForSnapshotting
captureScreenshot
flasher
saveScreenshot:withCompletion:
screenshotManagerScreensToScreenshot:
_providerForScreen:
dataSource
_sceneManagerCoordinator
_setSceneManagerCoordinator:
_persistenceCoordinator
_setPersistenceCoordinator:
_dataSource
submitPassword
_passwordEntered:
reactivateAlert
launchEmergencyDialer
_abort
_clearAlertController
configureTextField:
localizedDescriptionOfDefaultNewPasscodeConstraints
makeEmergencyCall
_setActions:
initWithPasscodeMode:unlockScreenType:simplePasscodeType:
_setErrorString:
didEndCall
_unlockScreenType
_simplePasscodeType
_errorString
_hasEmergencyCall
_alreadySubmittedPassword
_userWantsToComplyNow:
initWithTitle:message:continueButtonTitle:cancelButtonTitle:
_message
_continueButtonTitle
_cancelButtonTitle
_startListeningToManagedConfigurationNotification
_stopListeningToManagedConfigurationNotification
isPasscodeSet
_fetchAndSetUnlockScreenTypeForNewPasscode:
_presentPasscodeAlertItemWithMode:alertItemErrorString:unlockScreenType:
passcode:meetsCurrentConstraintsOutError:
changePasscodeFrom:to:outError:
_stopListeningToRestoreCompletedAlertStateChangedNotifications
defaultNewPasscodeEntryScreenTypeWithOutSimplePasscodeType:
unlockScreenTypeWithOutSimplePasscodeType:
isPasscodeModificationAllowed
checkPasscodeCompliance
forceUserToChangePasscode
_stopListeningToTelephonyNotifications
_didEndCall
lastRevokedAuthenticationDate
notifyUserHasSeenComplianceMessageWithLastLockDate:
_startListeningToTelephonyNotifications
_startListeningToRestoreCompletedAlertStateChangedNotifications
_isRestoreCompletedAlertActive
_activateComplianceAlert
getPasscodeComplianceWarningLastLockDate:completionBlock:
_passcodeAlertItem
_previousPasscode
_newPasscode
_complianceAlertItem
_forcedComplianceDate
_manageConfigurationEffectiveSettingsObserver
_telephonyNotificationObserver
_restoreCompletedAlertStateChangedToken
_delayedComplianceAlertUntilAfterRestoreCompletedAlert
suppressesAlertsWhenAppIsActive
alertSuppressionContexts
sb_shouldSuppressAlert
debugName
_prepareForHostingIfNeeded
_startWatchingForScrollViewNotifications
_startWatchingForDisplayLaunchNotifications
_startWatchingForPresentationControllerNotifications
_startWatchingForTextSelectionInteractionNotifications
bs_removeChildViewController:
_stopWatchingForScrollViewNotifications
_stopWatchingForDisplayLaunchNotifications
_stopWatchingForPresentationControllerNotifications
_stopWatchingForTextSelectionInteractionNotifications
bs_addChildViewController:
initWithRequester:
setFrameObserver:
bs_beginAppearanceTransitionForChildViewController:toVisible:animated:
bs_endAppearanceTransitionForChildViewController:toVisible:
setSnapshotView:
snapshotView
customSnapshotView
_dismissPresentedViewControllersWithCompletion:
isClippingDisabled
setClippingDisabled:
setHostView:
_updateAppearStateForRequester:animated:
shareTouchesWithIsolatedViewIfNeededForRequester:
_disableHostingForRequester:
shareTouchesWithIsolatedViewForRequester:
_addHIDEventDeferralForRequester:
newSystemFenceHandle
updateSettings:withTransitionContext:
presentationController
hostView
mainViewForTouchDelivery
_hostViewForRequester:
_contextId
wantsToShareTouches
_hostContextIdForRequester:
policyRequiringSharingOfTouchesDeliveredToChildContextId:withHostContextId:
endpoint
setAssertionEndpoint:
ipc_addPolicy:
delaysSharingTouchesUntilAppeared
isSharingTouchesWithIsolatedView
_touchesEvent
_initialTouchTimestamp
policyCancelingTouchesDeliveredToContextId:withInitialTouchTimestamp:
_touchViewForRequester:
_scrollViewWillBeginDragging:
_scrollViewDidEndDragging:
cancelTouchesInIsolatedViewForCurrentEventForRequester:
isScrollEnabled
cancelTouchesForCurrentEventInHostingContextForRequester:
endCancelingTouchesInIsolatedViewForCurrentEventForRequester:
endCancelingTouchesInHostingContextForCurrentEventForRequester:
_textSelectionInteractionWillBegin:
_textSelectionInteractionDidEnd:
hostWindowForFirstResponderInIsolation
textSelectionInteractionWillBegin
textSelectionInteractionDidEnd
_presentationControllerWillBeginPresenting:
_presentationControllerDidEndPresenting:
_presentationControllerWillBeginDismissing:
_presentationControllerDidEndDismissing:
presentingViewController
presentationControllerWillBeginPresenting:
presentationControllerDidEndPresenting:
presentationControllerWillBeginDismissing:
presentationControllerDidEndDismissing:
nextResponder
hostWindowForActiveRequester
_resignAnyFirstResponderInIsolatedWindow
isInvalidated
willActivateHosting
endSharingTouchesWithIsolatedViewForRequester:
_removeHIDEventDeferralForRequester:
willDeactivateHosting
valueWithCGRect:
sceneHostManagerLayersDidChange:
sceneHostManagerDidSuspendHosting:
sceneHostManagerDidResumeHosting:
sceneHostManagerDidInvalidate:
sceneHostManager:willActivateRequester:
sceneHostManager:willDeactivateRequester:
_hostView:screenRectDidChange:
addHostingObserver:forRequester:
removeHostingObserver:forRequester:
multiplexedHostingViewForRequester:
viewWillAppear:forRequester:
viewDidAppear:forRequester:
viewWillDisappear:forRequester:
viewDidDisappear:forRequester:
viewDidMoveToWindow:forRequester:
canForwardEventsToRealViewControllerForRequester:
viewWillTransitionToSize:withTransitionCoordinator:forRequester:
activePresentationController
disableClipping:forRequester:
explicitlyDisableHostingForRequester:
shouldAutomaticallyForwardRotationMethods
shouldSupressTouchesForIsolatedView
isCancelingTouchesInIsolatedView
isCancelingTouchesInHostingContext
containingScrollView
_isolationWindow
_isolatedViewController
_hostManager
_visibleRequesters
_activeRequester
_containingScrollView
_scrollingWasEnabled
_identifiersToObservers
_identifiersToHostViews
_identifiersToDeferralProperties
_presentedViewControllers
_touchDeliveryPolicyAssertion
_cancelTouchesInHostingViewAssertion
_cancelTouchesInIsolatedViewAssertion
initWithListItem:
_bulletinListItem
publishDate
primaryAttachmentType
numberOfAdditionalAttachments
composedAttachmentImageWithObserver:
bannerTextForAdditionalAttachments:showingImage:
attachmentImage
activeBulletin
lockScreenActionContextForBulletin:withOrigin:pluginActionsAllowed:
sourceDate
attachmentText
lockScreenActionContext
_setKeyboardSuppressed:forReason:withPredicate:
initWithReason:sceneLevel:
acquireWithPredicate:transitionContext:
startSuppressingKeyboardWithReason:predicate:
stopSuppressingKeyboardWithReason:
_keyboardSuppressionAssertions
initWithColor:
_updateVibrancy
secondaryColor
performTransitionWithCompletionBlock:
initWithDestination:context:
_destination
_context
_mainWorkspace
sb_deviceInternalBattery
percentCharge
sb_supportsDetailedBatteryMetrics
isCharging
removeDeviceChangeHandlerWithIdentifier:
batteryChargingViewWithSingleBattery
setPrimaryBatteryText:forBattery:
batteryChargingViewWithDoubleBattery
setSecondaryBatteryText:forBattery:
addDeviceChangeHandler:withIdentifier:
batteryVisible
string:
updateAppearance:completion:
_clearVisibilityTimer
setBatteryVisible:
desiredVisibilityDuration
_visibilityTimerFired:
chargingViewControllerFadedOutContent:
initForDisplayOfBattery:
presentWithAnimation:
prepareForDismissalWithAnimation:
chargingView
showChargeLevelWithBatteryVisible:
_shouldDisplayBattery
_chargingView
_visibilityTimer
_connectedDevices
setBackgrounded:
initWithApplicationBundleID:executionContextProvider:
updateSceneWithIdentifier:display:newSettings:transitionContext:initialClientSettingsProvider:
_launchApp
_sendRequestWithType:
contextWithSceneID:settings:
beginDiscovery
_reloadWidgetPreferences
isWidgetLoggingEnabled
setWidgetLoggingEnabled:
showWidgetSnapshotDebugLabels
setWidgetSnapshotTimestampsEnabled:
initWithWidgetDiscoveryController:
_isWidgetVisible:
showInternalWidgets
lastExitReason
didPurgeNonCAMLSnapshots
setDidPurgeNonCAMLSnapshots:
didPurgeNonASTCSnapshots
setDidPurgeNonASTCSnapshots:
initWithStyle:
debugWidgetWithBundleID:options:completion:
launchTodayViewFromCurrentContextWithCompletion:
widgetDiscoveryController:widgetWithBundleIdentifier:didEncounterProblematicSnapshotAtURL:
widgetDiscoveryControllerShouldIncludeInternalWidgets:
widgetDiscoveryController:preferredViewControllerForPresentingFromViewController:
widgetDiscoveryController:shouldPurgeArchivedSnapshotsForWidgetWithBundleIdentifier:
didPurgeNonCAMLSnapshotsForWidgetDiscoveryController:
didPurgeNonASTCSnapshotsForWidgetDiscoveryController:
whiteStatusBarAssertionForWidgetDiscoveryController:
widgetDiscoveryController:didEndUsingStatusBarAssertion:
widgetDiscoveryController:requestUnlockWithCompletion:
newWidgetGroupViewController
setWidgetDiscoveryController:
formatDateAsLongYMDHMSNoSpacesWithDate:
_isWritingSnapshot
_incrementWriteCount
_finishedWritingScreenshot:didFinishSavingWithError:context:
_decrementWriteCount
_screenshotWriteCount
stringWithString:
_reachedThreshold
_disallowScrollingInTouchedView:
touchesShouldCancelInContentView:
setPasscodeView:
setLockScreenView:
_lockScreenView
_addViews
overlayPropertiesFactoryWithStyle:
_notificationCenterDidPresent:
_notificationCenterWillDismiss:
irisWallpaperSettings
cancelPreviousPerformRequestsWithTarget:
stopAnimating
propertiesWithDeviceDefaultGraphicsQuality
_layoutDateView
_updateDateViewLegibility
_updateTimerLegibility
_setEnableTemporaryPasscodeButtonHysteresis:
_passcodePropertiesChanged
_preventScrollingOnGrabberView:
_updateCornerGrabberLegibilityIfNecessary
_updateCornerGrabberView:withNewView:usingBlock:
setBlursSelf:
currentPage
_showFakeWallpaperBlurWithAlpha:withFactory:
insertSubview:above:
setPasscodeHidden:forRequester:
_evaluateOverlaysForChange
insertSubview:below:
insertSubview:aboveSubview:
_updateLogoutButtonLegibility
_adjustTextBlurForPercentScrolled:
presentationLayer
affineTransform
sb_removeAnimationsForKeys:update:
_addZoomDownOverlayViews
_removeZoomDownOverlayViews
setBlurHidden:forRequester:
_updateSlideToUnlockBackground
setTopGrabberHidden:forRequester:
setBottomGrabberHidden:forRequester:
_setScrollingEnabled:
setHasCustomBackgroundColor:
initWithContentColor:
hasRequesters
setRequested:forRequester:
_startAnimatingSlideToUnlockDelayFinished
shouldShowSlideToUnlockTextImmediately
_startAnimatingSlideToUnlockWithDelay:
setHighlight:
setChevronStyle:
setCustomSlideToUnlockText:
animationWithKeyPath:
functionWithControlPoints::::
setVelocity:
setFillMode:
_defaultSlideToUnlockText
setTextLanguage:
_isPluginBelowForegroundScrollView
blurRadius
_shakeSlideToUnlockAnimationEnded
batteryChargingView
lockScreenViewIsCurrentlyBeingDisplayed
wantsToShowStatusBarTime
enableTime:
removeTapExcludedView:
addTapExcludedView:
scrollView
resetCoordinatedPresentingController:
setSlideToUnlockHidden:forRequester:
setBackdropVisible:
setComputesColorSettings:
_setCurrentBlurRadius:
_newScrollView
slideToUnlockFontSize
initWithText:andFont:
_updateVibrantViewBackgrounds
updateText
_addGrabberViews
_addBounceAnimator
_shouldUseVibrancy
initWithView:
setPresentingDelegate:
removeCoordinatedPresentingController:
addCoordinatedPresentingController:
presentingController:gestureRecognizerShouldBegin:
setShouldBeginBlock:
_scrollBy:
setTranslateBlock:
presentingControllerDidFinishPresentation:
setCompletedBlock:
setCanceledBlock:
setShowsHorizontalScrollIndicator:
setPagingEnabled:
setDelaysContentTouches:
_updateStatusBarLegibility
_updateGrabbersLegibilityIfNecessary
_updateStatusTextLegibility
_addOrRemoveFakeStatusBars
_updateDeviceInformationTextLegibility
setVibrancyAllowed:
_effectiveStatusBarColor
_effectiveStatusBarLegibilityStyle
setLegibilityStyle:
setLegibilitySettings:textStrength:
legibilitySettingsOverrideVibrancy
contentColor
_averageWallpaperColorForFrame:
contrastInRect:forVariant:
averageColorInRect:forVariant:
labelFrame
_updateVibrantView:screenRect:backgroundView:
chevronFrame
setChevronBackgroundColor:
_updateSlideToUnlockBlurVisibility
_updateTopGrabberBackground
_updateBottomGrabberBackground
_updateCornerGrabberBackground
_updateLogoutButtonBackground
gestures
tapExcludedViews
_isScrollOffsetOnPage
cancelGestureRecognizer:
reenableGestureRecognizer:
presentingController:gestureRecognizer:shouldReceiveTouch:
presentingController:willHandleGesture:
setDisallowsRasterization:forVariant:withReason:
_needsRealBlur
propertiesWithGraphicsQuality:
_overlayStylePropertiesFromPropertiesFactory:
_setEffectivePasscodeTintColor:
_setEffectivePasscodeTintAlpha:
_percentScrolled
_updateOverlaysForScroll:passcodeView:
tintAlpha
_layoutWallpaperBlurView
_layoutForegroundView
_layoutFakeStatusBars
_layoutScrollView
_layoutGrabberView:atTop:
_layoutPluginView
_topGrabberYOriginForPercentScrolled:
_bottomGrabberYOriginForPercentScrolled:
_irisGestureZone
addTapExcludedZone:
_layoutLockContentView
_layoutLockHUDView
_layoutCameraGrabberView
_layoutBottomLeftGrabberView
_layoutNotificationView
_layoutSlideToUnlockView
_layoutTimerView
_layoutStatusTextView
_layoutChargingView
_layoutMediaControlsView
_layoutLogoutButtonView
_layoutDeviceInformationTextView
isRelinquishingDateViewGeometry
dateViewBaselineY
timeBaselineOffsetFromOrigin
deviceInformationTextViewCanUseFullHeight
deviceInformationInsets
subtitleBaselineOffsetFromOrigin
baselineOffsetFromBottom
slideToUnlockInsets
baselineOffsetFromBottomWithSize:
slideToUnlockOverlayMargin
slideUpGrabberInset
logoutInsets
_layoutGrabberView:atTop:percentScrolled:
isRelinquishingTopGrabberGeometry
setBlurAlpha:
isRelinquishingNotificationListViewGeometry
_layoutLockView
_layoutPasscodeView
_layoutEmergencyCallView
_layoutOverlayViews
isRelinquishingBatteryViewGeometry
isDoubleHeight
lockScreenView:didScrollToPage:
_setCanPanVertically:
pageNumberForLockScreenPage:
horizontalOffsetForLockScreenPage:
scrollToPage:animated:completion:
_isValidPage:
_beginCrossfadingFakeStatusBars
_scrollingDidFinish
isAllowingWallpaperBlurUpdates
_percentScrolledForOffset:
gestureRecognizers
scrollBehavior
fixedHysteresis
_inputButtonCircleSize
_inputButtonCircleSpacing
percentOfNextButtonIncluded
setScrollingDisabled:forRequester:
_setUndoInputOnTouchCancellation:
_setAllowPasscodeCharacterUndoOnTouchesCancelled:
lockScreenPageForPageNumber:
lockScreenView:didEndScrollingOnPage:
_setCurrentPage:
_endCrossfadingFakeStatusBars
hide
fadeIn
lockScreenViewDidBeginScrolling:
presentingDelegate
isAnimating
cancelAnimation
scrollCancelsOrb
lockScreenViewPhonePluginIsActive
_adjustTopAndBottomGrabbersForPercentScrolled:
_updateBlurAndPasscodeView:forPercentScrolled:
_updateFakeStatusBarsForPercentScrolled:
lockScreenViewDidScrollWithNewScrollPercentage:tracking:
lockScreenViewWillEndDraggingWithPercentScrolled:percentScrolledVelocity:targetScrollPercentage:
_shouldCrossfadeStatusBarsForLegibility
currentStyle
requestStyle:
crossfadeTime:duration:
initWithFrame:showForegroundView:inProcessStateProvider:
_shouldCrossfadeStatusBars
effectiveCustomSlideToUnlockText
glintyAnimationDidStart
glintyAnimationDidStop
glintyFadeInAnimationDidStop
glintyFadeOutAnimationDidStop
isPresentingControllerTransitioning
abortAnimatedTransition
treatCurrentPositionAsBoundaryforGesture:
shouldBeginHintForGesture:
coordinatedPresentingControllerIdentifier
hintDisplacement
hintEdge
conflictingGestures
presentingController:conflictingGestureDidBegin:
presentingController:conflictingGestureDidEnd:
_debugDescription
topGrabberView
bottomGrabberView
hasTransparentUnderlay
setDateView:
setStatusTextView:
setDeviceInformationTextView:
setTimerView:
setMediaControlsView:
setNotificationView:
setCameraGrabberView:
setBottomLeftGrabberView:
setBatteryChargingView:
setEmergencyCallViewController:withDuration:completion:
_updatePluginViewVisibility
setLogoutButtonView:
slideUpGestureDidBegin
slideUpGestureDidCleanup
slideForegroundVerticallyBy:
foregroundTranslationY
abortAnimatedForegroundSlide
setForegroundHidden:forRequester:
setLockContentHidden:forRequester:
setLockContentOverlaysHidden:forRequester:
setLockHUDHidden:forRequester:
setDimmingOverlaysHiddenForZoomDown:forRequestor:
isCameraGrabberHidden
isBottomLeftGrabberHidden
setBottomLeftGrabberHidden:forRequester:
setStatusTextHidden:forRequester:
setNotificationsHidden:forRequester:
notificationsViewHidden
isTopGrabberHidden
isBottomGrabberHidden
setTopBottomGrabbersHidden:forRequester:
setMediaControlsHidden:forRequester:withAnimationFactory:
setDeviceInformationTextHidden:forRequester:
mediaControlsHidden
setMediaControlsContainerAlpha:
setPluginViewHidden:forRequester:
setScrollViewInteractionDisabled:forRequester:
_scrollViewInteractionDisabledRequesters
setUsesCustomSlideToUnlockDisplayForWhiteBackground:forRequester:
_setRelinqish:geometryOfElementWithRequesters:forRequester:
setRelinquishNotificationListViewGeometry:forRequester:
setRelinquishDateViewGeometry:forRequester:
setRelinquishBatteryViewGeometry:forRequester:
setRelinquishTopGrabberGeometry:forRequester:
isRelinquishingMediaControlsGeometry
setRelinquishMediaControlsGeometry:forRequester:
shakeSlideToUnlockTextWithCustomText:
setCustomSlideToUnlockLanguage:
_setMediaControlsHidden:forRequester:withAnimationFactory:allowAnimationForNilFactory:
_setMediaControlsHidden:forRequester:
irisGestureRecognizer
setIrisGestureRecognizer:
_noteAppearing
_noteWillDisappear
setStatusBarLegibilityEnabled:
setLegibilitySettingsOverrideVibrancy:
_lockContentOverlaysShouldBeHidden
_addLockContentOverlay:
_removeLockContentOverlay:
_hasLockContentUnderlayRequesterOtherThanRequester:
_addLockContentUnderlayWithRequester:
_removeLockContentUnderlayWithRequester:
_setLockContentUnderlayPropertiesFactoryOverride:
invalidateGrabberOrigins
_mediaControlsY
_mediaControlsHeight
scrollToPage:animated:
resetContentOffsetToCurrentPage
willMoveToWindow:
notificationView
cameraGrabberView
bottomLeftGrabberView
foregroundView
statusBarLegibilityEnabled
isShakingSlideToUnlockText
logoutButtonView
deviceInformationTextView
mediaControlsView
pluginBackgroundView
setPluginBackgroundView:
_effectivePasscodeTintColor
_effectivePasscodeTintAlpha
setTopGrabberView:
setBottomGrabberView:
_contentUnderlayOverride
_contentUnderlayRequesters
_contentOverlays
_passcodeOverlayView
_wallpaperBlurView
_foregroundView
_foregroundScrollView
_foregroundLockView
_foregroundLockUnderlayView
_foregroundLockContentView
_foregroundLockContentOverlaysView
_foregroundLockHUDView
_dateView
_statusTextView
_timerView
_slideToUnlockView
_slideToUnlockParentSpringView
_slideToUnlockSpringView
_isShakingSlideToUnlockText
_isAnimatingSlideToUnlockText
_slideToUnlockWhiteModeRequesters
_slideToUnlockBackgroundView
_topGrabberBackgroundView
_bottomGrabberBackgroundView
_cameraGrabberBackgroundView
_bottomLeftGrabberBackgroundView
_logoutButtonBackgroundView
_topGrabberView
_bottomGrabberView
_cameraGrabberView
_bottomLeftGrabberView
_passcodeOverscrollBackgroundView
_zoomDownOverlayTopBackgroundView
_zoomDownOverlayBottomBackgroundView
_batteryChargingView
_notificationView
_emergencyCallView
_logoutButtonView
_deviceInformationTextView
_mediaControlsContainerView
_mediaControlsView
_pluginView
_pluginPresentationStyle
_foregroundHiddenRequesters
_foregroundLockContentHiddenRequesters
_foregroundLockContentOverlaysHiddenRequesters
_foregroundLockHUDHiddenRequesters
_zoomDownOverlaysHiddenRequesters
_slideToUnlockHiddenRequesters
_modalAlertHiddenRequesters
_notificationsHiddenRequesters
_passcodeHiddenRequesters
_topGrabberHiddenRequesters
_bottomGrabberHiddenRequesters
_cameraGrabberHiddenRequesters
_bottomLeftGrabberHiddenRequesters
_statusTextHiddenRequesters
_mediaControlsHiddenRequesters
_pluginHiddenRequesters
_scrollingDisabledRequesters
_logoutButtonHiddenRequesters
_deviceInformationTextHiddenRequesters
_notificationViewRelinquishGeometryRequesters
_dateViewRelinquishGeometryRequesters
_batteryViewRelinquishGeometryRequesters
_topGrabberRelinquishGeometryRequesters
_mediaControlsRelinquishGeometryRequesters
_foregroundTranslationY
_bounceAnimator
_scrollCompletionBlocks
_currentPage
_startingContentOffset
_scrolling
_setGrabberOrigins
_topGrabberOriginalOriginY
_bottomGrabberOriginalOriginY
_currentBlurRadius
_defaultUnderlayPropertiesFactory
_whiteUnderlayView
_fakePasscodeStatusBarView
_fakeLockStatusBarView
_fakeStatusBarWithTimeView
_showingEmergencyCall
_isPresentingNotificationCenter
_presentingDelegate
_irisWallpaperSettings
_irisGestureRecognizer
_statusBarLegibilityEnabled
_legibilitySettingsOverrideVibrancy
_pluginBackgroundView
addRequester:
removeRequester:
_requesters
vibrantSettings
_configureVibrantViewWithSettings:
overlaySettings
_configureOverlayViewWithSettings:
_buttonFont
vibrantButton
_buttonImageForColor:selected:
selectedTintColor
selectedTextColor
_newButtonWithBackgroundImage:selectedImage:titleColor:selectedTitleColor:
setVibrantButton:
overlayButton
setOverlayButton:
setBackgroundImage:forState:
titleEdgeInsets
setTitleEdgeInsets:
_buttonStateChanged:
_buttonPushed:
sendActionsForControlEvents:
isSelected
setSelected:
isHighlighted
bezierPathWithRoundedRect:cornerRadius:
updateForContenteCategorySizeChange
_vibrantButton
_overlayButton
unregisterProxyRemoteView:
setRemoteViewIdentifier:
setContextId:
setBackgroundColorWhileHosting:
_setIsConnected:
remoteViewDidConnect:
remoteViewDidDisconnect:
connectToContextID:forIdentifier:application:
noteConnectionLost
disconnect
remoteViewIdentifier
remoteViewOpaque
setRemoteViewOpaque:
_app
_remoteViewIdentifier
_remoteViewOpaque
setReachabilityContainerView:
setSearchViewDismissalReasonForNextTransition:
initialPresentationMode
defaultSearchViewPresentationSource
defaultSearchViewDismissalReason
directlyForwardViewSizeChanges
dismissSearchViewWithReason:
displaysWidgets
initWithPageViewControllers:mainPageViewController:legibilityProvider:
_setPageViewControllers:
_setAllowedPageViewControllers:
_setMainPageViewController:
addTimingFunction:withName:
value:
_displayWillTurnOnWhileOnDashBoard:
_policyAggregatorCapabilitiesChanged:
_setupModeChanged:
_powerStatusChangedToConnectedState:
initWithBlock:
registerLockScreenActionProvider:forSource:
_setLockOutController:
sharedController
_handleEvent:
initWithButtonPredicate:eventBlock:
setIrisDelegate:
_indexOfTodayPage
activatePage:animated:withCompletion:
_indexOfMainPage
_updateActiveBehaviorsForReason:
visiblePageViewController
updatePresentationAnimated:
_updateActiveAppearanceForReason:
initWithDashBoardView:systemGestureManager:
_loadViewsForRestrictedPagesIfPossible
resetScrollViewToMainPageAnimated:withCompletion:
setModalDestination:
setListDestination:
setSlideUpToAppView:
_beginAppearanceTransitionForPageViewControllersToVisible:animated:
noteDeviceBlockedStatusUpdated
_updateScrollingBehavior
_setupIrisWallpaperGesture
bs_endAppearanceTransitionForChildViewController:
_endAppearanceTransitionForPageViewControllersToVisible:
_handleEventType:
_setHasContentAboveDashBoard:
_listenForDisplayLayoutChanges:
setActiveAppearance:
_displayLayoutDidUpdate:
pageViewControllers
dismissPresentationAnimated:
_invalidateStatusBarAssertions
dashBoardViewController:requestsTouchIDDisabled:forReason:
areRestrictedCapabilities:
shouldShowLockStatusBarTime
_isPresentingModalViewControllerWithIdentifier:
isUnlockDisabled
_presentModalViewController:animated:completion:
_dismissModalViewControllersWithIdentifier:animated:completion:
noteAuthenticated:
updateUIForAuthenticated:
setLockScreenActionContext:
runUnlockAction
backlightLevel
setInScreenOffMode:forAutoUnlock:
_transitionChargingViewToVisible:showBattery:animated:
_dismissAppBelowDashBoard:completion:
dateViewIfExists
reactivateAlertFromLockScreenWithUIUnlock:disableAnimatedTransition:
_addOrRemoveThermalTrapViewIfNecessaryAnimated:
_addOrRemoveBlockedViewIfNecessaryAnimated:
_addOrRemoveResetRestoreViewIfNecessaryAnimated:
_addOrRemoveSetupViewIfNecessaryAnimated:
_updateModalPresentationControllerVisibility
modalPresentationController
isPresentingContent
exitEmergencyDialerAnimated:
_indexOfCameraPage
_canHandleTransitionRequest:
activateCameraAnimated:withActions:
_activateAppBelowDashBoard:withActions:
entities
previousAppearance
componentForType:identifier:
slideUpAppGrabberView
pointInside:withEvent:
allowSystemGestureAtLocation:
biometricLockoutState
isFingerOn
initWithFingerOn:
currentTransitionSource
appendArraySection:withName:multilinePrefix:skipIfEmpty:objectTransformer:
activePresentation
_presentationForParticipant:
_isInAnimationBlock
_currentAnimationSettings
addAlongsideAnimations:completion:
intent
setCustomLockScreenActionContext:
_customLockScreenActionContext
dashBoardViewController:unlockWithRequest:completion:
_setBottomPresentationControllerVisibility:
_setModalPresentationControllerVisibility:
_dismissModalViewController:animated:completion:
_resetIdleTimerIfTopMost
setPreviousAppearance:
_isSourceForHorizontalScrolling:
_allowedPageViewControllers
_isPageContentHidden
visiblePageRange
irisPlaybackState
irisBehavior
wallpaperAggdLogger
_updateUIForPlaying:immediately:
dashBoardViewControllerIrisPlayingDidFinish:
isIrisInteracting
_dismissPluginViewController:withStyle:animated:completion:
_presentPluginViewController:withStyle:animated:completion:
_performWithoutAnimation:
_setPluginViewController:
lockScreenActionContextForAction:fromPlugin:
actionWithContext:
sendResponseWithSuccess:
updateSlideUpAppGrabberViewForApplicationWithBundleIdentifier:
notificationIdentifier
un_logDigest
setDispatcher:
updateNotificationRequest:forCoalescedNotification:
withdrawNotificationRequest:forCoalescedNotification:
updateNotificationSectionSettings:
notificationDestination
setMesaUnlockBehaviorDelegate:
handleBiometricEvent:
mesaUnlockBehaviorDelegate
mesaUnlockBehavior:requestsFeedback:
hintFailureText
updateCallToActionForMesaMatchFailure
mesaUnlockBehavior:requestsUnlock:withFeedback:
setRegionsDebugView:
_activeViewControllers
_gestureRecognizer:isLocatedOverHorizontalContentRegionInViewController:
_overSlidingControlForLocation:inView:
isIsolatingContent
lastSettledPageIndex
setTargetPageIndexForDraggingEnded:
navigationController
interactivePopGestureRecognizer
removeFailureRequirement:
_slideableContentOffset
_isSlideableContentOffsetOnscreen:
didDismissLockScreenPlugin:
willDismissLockScreenPlugin:
dismissContentViewController:animated:completion:
didPresentLockScreenPlugin:
willPresentLockScreenPlugin:
presentContentViewController:animated:completion:
_dismissApplicationWithCompletion:
_eligiblePageViewControllers
_addVisiblePageViewController:
_removeAllowedPageViewController:
_updateVisibilityForPageViewControllersWithVisiblePageViewController:
setPageViews:
setMainPageView:
setCameraPageEnabled:
_indexOfPageViewControllerClass:
_isFadeInAnimationInProgress
isTransitioningInteractively
significantUserInteractionDidOccur
localAppearance
behaviorForProvider:
appearanceForProvider:
pageRelativeScrollOffset
dateViewPresentationExtentForPageRelativeScrollOffset:
identifier:
removeComponent:
setAppearanceFraction:
appearanceFraction
setActivePresentation:
_updateLocalAppearanceForPresentation
regionsDebugView
setRegions:
_appearanceForParticipant:
sb_copy
valueForFunctionWithName:
setMinFillHeight:
_offsetForTransitionFromOffset:toOffset:timingFunction:
string
flag
setFlag:
numberWithLong:
_alphaForTransitionFromHidden:toHidden:timingFunction:
flagForComponentType:
setTransitional:
isEqualToAppearance:
_updateDateTimeView
_updateStatusBar
_updatePageControl
_updatePageContent
_updateBackground
_updateForegroundView
_updateLegibilitySettings
_updateWallpaperEffectView
_updateTintingView
_isSlideableContentOnscreen
_updateCameraBehavior
_updateNotificationsAndTodayViewBehavior
_updateSetupBehavior
_updateLiftToWakeBehavior
_behaviorForParticipant:
_pageCapabilities
setActiveBehavior:
dashBoardController:didChangeActiveBehavior:
removeRestrictedCapabilities:
setupBehavior
setSetupBehavior:
beginTransitionToBackgroundStyle:
updateBackgroundStyleTransitionProgress:
isTransitioningBackgroundStyle
completeTransitionToBackgroundStyle:
_valueForTransitionInterval:timingFunction:
setForegroundViewPositionOffset:
setDateViewIsVibrant:
setForceDateViewCentered:
setDateViewPageAlignment:
setDateViewOffset:
setContentAlpha:withSubtitleVisible:
setCustomSubtitleView:
_currentAnimationDuration
_statusBarStateProvider
_setFakeStatusBarEnabled:
setFakeStatusBarLevel:
setBouncesHorizontally:
localBehavior
setWallpaperEffectView:
tintingView
_createFakeStatusBarView
setFakeStatusBarView:
irisWallpaperView
_actuallyUpdateUIForIrisNotPlaying
_actuallyUpdateUIForIrisPlaying:
isConnectedToPower
_startFadeInAnimationForSource:fadingToBatteryView:
prepareToFadeInForSource:timeAlpha:dateAlpha:statusBarAlpha:delegate:existingDateView:completion:
_transitionTimerViewToVisible:animated:
removeAllComponentsWithIdentifier:
view:
_updateLocalAppearanceForRequester:animationSettings:actions:completion:
initWithString:accessoryView:
layoutForDisplayType:
rangeOfString:options:
setModalPresentationView:
isThermallyBlocked
setBottomPage:
presentedViewControllers
dismissPresentationAnimated:completion:
invalidateLockScreenActionContext
pluginManager:didLoadPlugin:
pluginManager:willUnloadPlugin:
pluginManager:activePluginDidChange:
pluginManager:displayedPluginDidUpdateAppearance:
pluginManager:displayedPluginDidChangeFromPlugin:toPlugin:
pluginManager:plugin:handleAction:
irisWallpaperViewPlaybackStateDidChange:
irisWallpaperViewIsInteractingDidChange:
irisWallpaperView:didReplaceGestureRecognizer:withGestureRecognizer:
dispatcher
controller:shouldAllowPanScrollingWithSystemGestureRecognizer:
controllerWillCancelHorizontalScrolling:
controllerDidCancelHorizontalScrolling:
searchEtceteraViewController:willChangeToMode:animated:
searchEtceteraViewController:changingToMode:animated:
searchEtceteraViewController:didChangeToMode:animated:
searchEtceteraViewController:shouldPresentSearchFromSource:
searchEtceteraViewController:shouldDelaySearchWillDismissWithReason:
searchEtceteraViewController:willDismissSearchWithReason:
initWithPageViewControllers:mainPageViewController:
setIrisWallpaperView:
setWallpaperColorProvider:
activateMainPageWithCompletion:
registerExternalBehaviorProvider:
externalBehaviorProviderBehaviorChanged:
unregisterExternalBehaviorProvider:
registerExternalEventHandler:
unregisterExternalEventHandler:
registerExternalPresentationProvider:
externalPresentationProviderPresentationChanged:
unregisterExternalPresentationProvider:
addIdleTimerDisabledAssertionReason:
removeIdleTimerDisabledAssertionReason:
isIdleTimerDisabledForReason:
isIdleTimerDisabled
addDashBoardObserver:
removeDashBoardObserver:
presentModalViewController:fromRect:inView:animated:
presentModalViewController:withTransition:
presentViewController:withTransition:completion:
canUIUnlockFromSource:
prepareForUIUnlock
finishUIUnlockFromSource:
canBeDeactivatedForUIUnlockFromSource:
launchInCallAlert
noteResetRestoreStateUpdated
shouldUnlockUIOnKeyDownEvent
emergencyDialerExitedWithError:
setShowingMediaControls:
isSystemGesturePermittedForPresentingController:
noteMenuButtonDown
noteMenuButtonUp
didCompleteTransitionOutOfLockScreen
createHomeButtonShowPasscodeRecognizerForHomeButtonPress
wantsLockScreenIdleTimer
screenFadeAnimationController:setRelevantViewsHidden:forRequester:
_windowsFromViewControllers:
updateStatusBarForLockScreenTeardown
_actuallyUpdateUIForIrisPlaying
startLockScreenFadeInAnimationForSource:
_setMainDisplayPolicyAggregator:
_setStatusBarStateProvider:
wallpaperColorProvider
setLastSettledPageIndex:
setLocalBehavior:
setIrisBehavior:
setLocalAppearance:
dateViewController
setDateViewController:
powerChangeObserver
setPowerChangeObserver:
timerViewController
setTimerViewController:
legibilityProvider
setLegibilityProvider:
lockScreenActionManager
setLockScreenActionManager:
fakeStatusBarView
hideStatusBarAssertionForScrolling
setHideStatusBarAssertionForScrolling:
irisPlayerIsInteracting
setIrisPlayerIsInteracting:
shouldTransitionIrisWallpaperToStillWhenPlaybackFinishes
setShouldTransitionIrisWallpaperToStillWhenPlaybackFinishes:
setWallpaperAggdLogger:
setModalPresentationController:
setCurrentTransitionSource:
setupController
setSetupController:
_screenOffMode
_hasContentAboveDashBoard
_preventAppearanceUpdatesForRotation
_pluginManager
_interactiveAnimationCalculator
_pluginViewController
_pluginViewControllerPresentationStyle
_externalBehaviorProviders
_externalEventHandlers
_externalPresentationProviders
_applicationHosters
_transitionType
_participantState
_transitionDisabledIdleTimer
_homeButtonShowPasscodeRecognizer
_modalPresentationController
_bottomPresentationController
_slideUpToAppController
_chargingViewController
_chargingViewControllerTimer
_mesaUnlockBehaviorConfiguration
_mesaUnlockBehavior
_idleTimerEventPublisher
_redirectHandler
_scrollGestureController
_listeningForDisplayLayoutChanges
_screenOnForLiftToWake
_statusBarInLockdownForTeardown
_irisPlayerIsInteracting
_shouldTransitionIrisWallpaperToStillWhenPlaybackFinishes
_activeAppearance
_activeBehavior
_dispatcher
_irisWallpaperView
_wallpaperColorProvider
_pageViewControllers
_mainPageViewController
_lastSettledPageIndex
_localBehavior
_irisBehavior
_setupBehavior
_appearanceFraction
_previousAppearance
_localAppearance
_activePresentation
_dateViewController
_powerChangeObserver
_timerViewController
_legibilityProvider
_lockScreenActionManager
_fakeStatusBarView
_hideStatusBarAssertionForScrolling
_wallpaperAggdLogger
_currentTransitionSource
_setupController
nowPlayingService:didTerminateWithError:
switchToState:
synchronizeAnimationsInActions:
suggestedFrameForMediaControlsForPageBounds:
suggestedFrameForMediaArtworkForControlsFrame:bottomInset:inPageBounds:
initWithArtworkView:
_artworkView
_checkEntitlementsForClient:withCompletionHandler:
imageData
initWithStaticApplicationShortcutItems:dynamicApplicationShortcutItems:
_sanitizeApplicationShortcutItems:withEntitlements:
_serviceClientFullAccessEntitlementAuthenticator
_serviceClientCustomImageEntitlementAuthenticator
isLockScreenDisabledForAssertion
valueWithNonretainedObject:
isLockScreenActive
addLockScreenDisableAssertion:
removeLockScreenDisableAssertion:
_disableLockScreenIfPossibleAssertions
setContextID:
proxyRemoteView
setProxyRemoteView:
viewSize
setViewSize:
_proxyRemoteView
_contextID
_viewSize
_sequesterProxyRemoteView:
_newProxyRemoteViewForIdentifier:
proxyRemoteViewForIdentifier:
_registeredRemoteViewInfos
_unregisteredRemoteViewInfos
setScrollBehavior:
setPercentOfNextButtonIncluded:
setFixedHysteresis:
_scrollBehavior
_fixedHysteresis
_percentOfNextButtonIncluded
_hardwareButtonPressed:
_lockStateChanged
_notificationCenterDidPresent
lockScreenManager
_activeAlertDestinationsInRequestDestinations:
requestDestinations
notificationCenterController
_alertNowForNotificationRequest:
_scheduleRealertsForNotificationRequest:
soundController
stopSoundForNotificationRequest:
_killRealertsForNotificationRequest:
activeRequestWithRealerts
realertTimers
setActiveRequestWithRealerts:
screenController
resetAutomaticLockStateForNotificationRequest:
playSoundIfPossibleForNotificationRequest:
turnOnScreenIfPossibleForNotificationRequest:
killRealerts
_shouldRealert
realertCount
_realertTimerFired:
initWithTimeInterval:serviceIdentifier:target:selector:userInfo:
setUserVisible:
setMinimumEarlyFireProportion:
alertOnPostForNotificationRequest:forRequestDestinations:
alertOnPresentationForNotificationRequest:
killAlertsForNotificationRequest:
initWithSoundController:screenController:lockScreenManager:notificationCenterController:
setSoundController:
setScreenController:
setLockScreenManager:
setNotificationCenterController:
setRealertTimers:
_soundController
_screenController
_lockScreenManager
_notificationCenterController
_activeRequestWithRealerts
_realertTimers
initWithInteractionProgress:
_gestureRecognizer
makeKeyAndOrderFront:
sheetWithRemoteViewIdentifierDidDismiss:
noteSheetDidEnd
_tearDownSheet:
initWithRemoteViewIdentifier:application:wasPresentedAnimated:
presentSheetView:animated:
dismissSheetView:animated:
statusBarWillChangeOrientation:duration:
wasPresentedAnimated
sendStatusBarOrientationWillChangeToSheets:duration:
sheetWantsProgress
_appToSheetMap
_presentationWindow
activatingAlert
deactivatingAlert
representedDisplay
activation
anyCallIsEndpointOnCurrentDevice
noteNextUnlockShouldReturnToCallIfPossible:
dismissOnUILock
setAnimation:
_activatingLockScreenWorkspaceAlert
keyCommandWithInput:modifierFlags:action:
commandTabDisplayItems
modifierFlags
_activateWithForwardDirection:
_clearTimer
_showWindow:
selectedApplicationDisplayItem
viewController:selectedApplicationWithDisplayItem:
isApplicationEntity
sharedRemoteKeyboards
userSelectedApp:onCompletion:
_showCommandTabBarAfterTimer:
showCommandTabBar
acquire
_setRotatableViewOrientation:updateStatusBar:duration:force:
viewControllerWantsDismissal:
_commandTabViewController
_resignActiveAssertion
_remoteProxyView
_wasPresentedAnimated
_isTranslucent
_setupBackground
_backgroundWallpaperEffectView
_teardownBackgroundWallpaperEffectView
displays
displayManager:didConnectDisplay:
_noteScreenDidChangeMode:
_currentDisplay
_eventForMainDisplayTransitionRequest:
requestWithDisplay:
_eventLabelForEvent:
_setCurrentDisplay:
_isListeningForApplicationStateChanges
_appStateDidChange:
_setListeningForApplicationStateChanges:
_displayConnectShouldWaitForAppRunning:
_application:canAccessDisplay:
_handleDisplayConnectIfPossible:
_startListeningForApplicationLaunch
_shouldConnectDisplayNow:
_connectDisplay:
_stopListeningForApplicationLaunch
_slaveTransactionForMainDisplayTransitionRequest:currentExternalDisplay:
displayManager:willConnectDisplay:
displayManager:didDisconnectDisplay:
expectedForegroundAppsOnDisplay:
_listeningForApplicationStateChanges
canTurnOnDisplay
_isQuietModeEnabledAndActive
overridesQuietMode
_isDeviceUILocked
alertsWhenLocked
overridesPocketMode
backlightController
_turnOnScreenForPocketMode
_turnOnScreen
canTurnOnScreenForNotificationRequest:
turnOnScreenForNotificationRequest:
preventsAutomaticLock
defaultLockScreenDimIntervalWhenNotificationsPresent
pocketStateManager
_turnOnScreenForOutOfPocketEventBeforeTimeInterval:
queryStateOntoQueue:andMonitorFor:withTimeout:andHandler:
quietModeStateAggregator
isQuietModeEnabledAndActive
lockStateAggregator
_createPowerAssertion
_cancelTurnOnScreenForOutOfPocketEvents
_releasePowerAssertion
_sb_isScreenObscuredInPocketState:
_turnOnScreenForOutOfPocketEventIfNecessary
pocketStateManager:didUpdateState:
initWithBackLightController:lockScreenManager:lockStateAggregator:quietModeStateAggregator:
setBacklightController:
setLockStateAggregator:
setQuietModeStateAggregator:
setPocketStateManager:
turnOnScreenForOutOfPocketEvent
setTurnOnScreenForOutOfPocketEvent:
powerAssertionName
setPowerAssertionName:
powerAssertionID
setPowerAssertionID:
_turnOnScreenForOutOfPocketEvent
_powerAssertionID
_backlightController
_lockStateAggregator
_quietModeStateAggregator
_pocketStateManager
_powerAssertionName
referenceCoordinateSpace
layoutCoordinateSpace
_reconnect
_notifyActive:
invoke
_notifyTimedOut:
stateName
_endDelayingPresentation
_beginDelayingPresentation:cancellationHandler:
_switchToService:
_noteServiceFailure
notifyWhenActive:withTimeout:
_cancelRequest
_service
_reactivateAttempt
_lastReactivationAttempt
_notifyBlocks
initWithDeviceBlockStatusProvider:
overlayView
blockTimer
slideToUnlockText
setBlockTimer:
_blockTimer
whitePointAdaptationStrengthForWhitePointAdaptivityStyle:
setWhitePointAdaptationStrengthStandard:
setWhitePointAdaptationStrengthReading:
setWhitePointAdaptationStrengthPhoto:
setWhitePointAdaptationStrengthVideo:
setWhitePointAdaptationStrengthGame:
setWhitePointAdaptationUpdateDefaultDuration:
setWhitePointAdaptationInteractiveUpdateEnabled:
setWhitePointAdaptationInteractiveUpdateTimingFunctionName:
setWhitePointAdaptationStrength:forWhitePointAdaptivityStyle:
whitePointAdaptationStrengthStandard
whitePointAdaptationStrengthReading
whitePointAdaptationStrengthPhoto
whitePointAdaptationStrengthVideo
whitePointAdaptationStrengthGame
whitePointAdaptationUpdateDefaultDuration
whitePointAdaptationInteractiveUpdateEnabled
whitePointAdaptationInteractiveUpdateTimingFunctionName
_whitePointAdaptationInteractiveUpdateEnabled
_whitePointAdaptationStrengthStandard
_whitePointAdaptationStrengthReading
_whitePointAdaptationStrengthPhoto
_whitePointAdaptationStrengthVideo
_whitePointAdaptationStrengthGame
_whitePointAdaptationUpdateDefaultDuration
_whitePointAdaptationInteractiveUpdateTimingFunctionName
initWithBannerController:bannerViewController:
bannerContextView
notificationCenterHandlerWithBannerController:bannerViewController:
pullDownHandlerWithBannerController:bannerViewController:
bannerViewController
_bannerViewController
_bannerController
propertyWithName:enumMapping:
initWithFeatureId:event:registerProperties:
trackEventWithPropertyValues:value:
localizedCaseInsensitiveCompare:
_tableView
detailTextLabel
grayColor
dequeueReusableCellWithIdentifier:
_configureCell:withBlockingTask:
tableView:titleForHeaderInSection:
tableView:titleForFooterInSection:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:moveRowAtIndexPath:toIndexPath:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
setDebugBlockingTasks:
debugBlockingTasks
_applicationKeys
animationDuration
_animationFinished
_evaluateTotalAnimationCompletion
isCurrentlyAnimatingActivation
_alertViewFinishedAnimatingItself
_fadeAnimationFinished
_toAlert
_alertViewIsAnimatingItself
_alertIsTransparent
_finishedPrimaryFadeAnimation
_needsLockScreenAlphaRestoredOnCompletion
listSectionIdentifier
shouldSuppressBulletinMessageForPrivacy:
startOfDayForDate:
isDateInYesterday:
formatDateAsRelativeDateStyle:
formatDateAsDayOfWeek:
_representedDateForDate:
_identifierForSectionInfoWithRepresentedDate:
representedDate
_titleForDate:
identifierForSectionInfoWithDate:
invalidateTitle
updateForCurrentState
setSectionLocation:animated:
sectionLocation
setSeparatorStyle:
_preferredSizeForRelevanceDateLabel:
showsSeparator
setShowsSeparator:
isMissed
setMissed:
_separator
_showsSeparator
_missed
requestSecondaryContentViewControllerForBulletin:completion:
sb_defaultTitle
isSuppressingMessageForPrivacy
_subtitleText
topic
isLoading
_secondaryText
endDate
hasEventDate
setStartDate:
timeZone
setStartDateTimeZone:
_relevanceDateLabelDescription
startDate
startDateTimeZone
endDateTimeZone
dateIsAllDay
_relevanceDateTextColor
relevanceDateFormatStyle
formatDateAsTimeStyle:
_bbDateFormatStyle
startLabelWithStartDate:endDate:timeZone:allDay:forStyle:
dateFormatStyle
combinedDateLabelWithStartDate:endDate:timeZone:allDay:forStyle:
_eventDateLabelForDisplay
_effectiveAttachmentImageSize
_secondaryTextToDisplay
_secondaryContentView
_subtitleTextToDisplay
_primaryText
_primaryTextColor
_subtitleTextColor
_secondaryTextColor
_configureRelevanceDateLabel:
styleForLabel:
_configureEventDateLabel:
_attachmentImageToDisplay
safeDescription
effectiveRecencyDate
attachmentImageSize
setAttachmentImageSize:
setEffectiveRecencyDate:
setRelevanceDateFormatStyle:
_attachmentImage
_attachmentImageSize
_suppressingMessageForPrivacy
_isCachedMessageSuppressionValid
_effectiveRecencyDate
_relevanceDateFormatStyle
setEndDateTimeZone:
_startDate
_startDateTimeZone
_endDateTimeZone
_visibleView
_contentViewForControllerMode:
frameOrigin
contentBottomInset
_reloadWallpaperAndFlushCaches:completionHandler:
initWithBannerView:
hasSentAnyCallbacks
noteDidDismissWithReason:
bannerViewWillAppear:
noteWillAppear
bannerViewDidAppear:
noteDidAppear
bannerViewWillDismiss:forReason:
noteWillDismissWithReason:
bannerViewDidDismiss:forReason:
matchPreviousCallbacks:
_source
_sentWillAppear
_sentDidAppear
_sentWillDismiss
_sentDidDismiss
_dismissReason
pageControl:didRecieveTouchInDirection:
_setLegibilitySettings:
setCurrentPageIndicatorTintColor:
setPageIndicatorTintColor:
pageIndicatorImageSetForLegibilitySettings:
searchIndicatorImageSetForLegibilitySettings:
_invalidateIndicators
enabledPageIndicatorSet
pageIndicatorSet
_searchIndicatorImage:
_iconListIndicatorImage:
_legibilityStyle
shadowImage
_imageForLegibilitySettings:strength:
setShadowImage:
_drawModernIndicatorInView:enabled:
_createModernIndicatorImageFromView:
_indicatorViewEnabled:index:
initWithSettings:strength:image:shadowImage:
_setIndicatorImage:toEnabled:index:
_transitionIndicator:toEnabled:index:
imageSetCache
setImageSetCache:
shouldShowSearchIndicator
setShouldShowSearchIndicator:
legibilityEnabled
setLegibilityEnabled:
_hasSetLegibility
_shouldShowSearchIndicator
_cachedDefaultHeight
_pageIndicatorImageSets
_searchIndicatorImageSets
_legibilityEnabled
_imageSetCache
_indicatorSpacing
statusBarController
_createViewToAnimate
newFakeStatusBarWithStyle:
convertRect:fromWindow:
_zoomInFactory
fromLockoutView
_finishedAnimation:
factoryWithMass:stiffness:damping:
setContextHostManager:
_finished
initWithActivatingApp:fromLockoutView:starkScreenController:
transitionContextProviderWithActivatingApp:deactivatingApp:
_animationWithActivatingApp:fromLockoutView:starkScreenController:
_waitToStartTransaction
addChildTransaction:withSchedulingPolicy:
iconController
setHidden:withAnimationFactory:
setStatusBarHidden:forReason:withAnimationFactory:
initWithSceneID:waitForContexts:waitForContextsTimeout:
listenForSatisfiedMilestone:withBlock:
initFromLockoutView:starkScreenController:
_applicationDependencyStateChanged
_animation
alertTitle
cancelActionTitle
defaultActionTitle
formattedPhoneNumber
_url
trackEventWithPropertyValues:
setSuppressFromSettings:
_dataProviderProxy
initialAppViewScale
_beginLayoutStateTransitionWithContext:
_endLayoutStateTransitionForContext:
_endLayoutStateTransitionForFailedTransactionWithContext:
_notifySlavesIfNecessary
isReadyForSynchronizedCommit
performSynchronizedCommit
synchronizationDelegate
setSynchronizationDelegate:
slaveTransactions
synchronizedTransactionReadyToCommit:
synchronizedTransaction:willCommitSynchronizedTransactions:
synchronizedTransaction:didCommitSynchronizedTransactions:
isGestureCompleted
noteGestureCompletedSuccessfully:cleanupTransaction:
launchAppUnderLockScreenWithTransaction:
_launchedApp
_earlyLaunchTransaction
_deferredFinalLaunchTransaction
_gestureCompleted
_didBegin
_notifiedSlaves
_passcodeLockStateChanged
_deviceBlockedStateChanged:
setLockScreenView:force:
isAnotherSlideUpControllerBlockingController:
performGeneralCleanupForUserAction:
_setupBounceAnimatorAndGrabberView
_addOrRemovePasscodeViewIfNecessary
_clearAppDefaultImageAndRemoveFromSuperview:
_createGrabberView
_newBounceAnimatorWithGrabberView:
setGrabberOnLockScreen:
controllerShouldUseAdditionalTopPadding:
controllerShouldInvertVerticalPadding:
setAppStyleGrabberImage:
setGrabberImageFromAppWithBundleIdentifier:
addGrabberView:toLockScreenView:forController:
grabberViewInLockScreenView:forController:
abortDynamicAnimationForScreenOff
translateSlidingViewByY:
layoutBelowIfNeeded
_cleanupFromDismissal
_cleanupBackgroundLaunchNonsense
hideSlidingStatusBar
_lockScreenViewFakeStatusBar
viewControllerToUseAsParent
setUnderLock:
updateUISettingsWithBlock:
passcodeViewDidBecomeActive:forController:
isWaitingForMilestone:
_commonGestureCleanup
updateDateFrameHorizontalOffset:verticalOffset:
_handleAppLaunchedUnderLockScreen
adjustWallpaperForVerticalScrollPercentage:
updateWhitePointAdaptationStrengthWithWorkspaceTransitionRequest:fromPercentage:toPercentage:animationSettings:interactive:
setSlideDownBounceAnimator:
_finishSlideDownWithCompletion:
_newDynamicAnimationForTargetValue:withInitialVelocity:
setSlideUpAnimation:
finalizeGesture
isNotificationSuggestion
actionBlockForAction:withOrigin:
lockScreenActionContextForActivityBlock:
getBulletinsForPublisherMatchIDs:sectionID:withCompletion:
isOpenURLSuggestion
webpageURL
activateTargetApp
setDisableStatusBarAssertion:
prepareForSlideUpAppLaunchAnimated:
prepareForSlideUpAnimation
setTargetApp:withAppSuggestion:
lockScreenIsActive
setTargetURL:
hasAuthenticatedAtLeastOnceSinceBoot
_noteDeviceHasBeenUnlockedOnceSinceBoot:
presentingControllerIdentifierForController:
_foregroundTranslationForLocation:
_animateSlideDownWithVelocity:completion:
opacity
abortAnimatedDateFrameChange
handleFailedAuthenticationRequest:error:
addAsFirstResponder:
handleInvalidAuthenticationRequest:
removeResponder:
setPrepareBlock:
boundaryTranslationInY
setBoundaryTranslationInY:
handleSuccessfulAuthenticationRequest:
setGrabberViewImage:
presentTargetAppAnimated:
wantsToShowStatusBar
hasActiveUnlockActionContext
isShowingPasscodeView
bounceAnimator
disableStatusBarAssertion
didAbortBounce
setDidAbortBounce:
slideDownBounceAnimator
slideUpAnimation
_isInScreenOffMode
_slidingStatusBarView
_currentlySliding
_dynamicAnimation
_targetAppIsSiri
_targetAppIsInCallService
_deactivatingForInCallService
_appSuggestionWasInvoked
_targetURL
_grabberImage
_bulletinObserver
_showingPasscodeView
_dismissingPasscodeView
_defaultImagesNeedUpdateUponPasscodeExit
_waitingToDeactivateForActivityLaunch
_preUIUnlockActions
_authenticationAssertionForContinuityUnlock
_passcodeSenderView
_passcodeOverscrollView
_slideUpTransaction
_actionContext
_disablingOcclusionsForTargetApp
_launchingAppFromNonOccludedState
_previousSlidePercent
_didAbortBounce
_disableStatusBarAssertion
_boundaryTranslationInY
_slideUpAnimation
setProximityDetectionMode:
isEqualToBehavior:
_idleTimerDuration
_idleTimerMode
_idleWarnMode
_scrollingStrategy
_restrictedCapabilities
_proximityDetectionMode
hostedAccessoryWrappersForAlert:
windowHostWrapper
_appLayoutWrapperView
_accessoryHostWrappers
_alertContextHostView
initWithName:type:priority:window:application:pid:
priority
_name
_priority
_pid
_displayID
clientID
deferEventsForClientWithProperties:toClientWithProperties:
setFocusEnabled:
setNeedsPreferredFocusedItemUpdate
_updateEventFocus
setFocusWindow:
_applyAssertion:
takeWithPriority:reason:forWindow:bundleIdentifier:pid:
dropReason:
focusedPid
_assertions
_lastFocusAssertion
_focusWindow
_setInSetupMode:
setupHasFinishedRestoringFromBackup
showSetupLogoForSetupLaunch
postLaunchCompleteNotificationForSetup
_inSetupMode
currentLockScreenActionContextActionSource:
_clearActionOnAllProviders
currentLockScreenActionContext
actionProviders
setActionProviders:
_actionProviders
_primed
layoutElement
referenceOrientation
layoutOrientation
setReferenceOrientation:
setLayoutOrientation:
_referenceOrientation
initWithLayoutElement:appView:adornmentView:
initWithLayoutElement:appView:
willMoveToSuperview:
adornmentView
_layoutElement
_appView
_orientedView
_adornmentView
_activateSideApp
sideLayoutElementController
setPreventWhitePointAdaptationStrengthUpdateOnComplete:
_cleanupSideApp
notePassedSideAppActivationThreshold
waitingForGestureToComplete
_waitingForGestureToComplete
_activateSideAppTransaction
_activatedSideApp
_updateWhitePointAdaptationStrengthOnComplete
animationDelay
settingsWithDuration:delay:timingFunction:
_primaryApp
_appContextHostWrapper
_applyPrototypeSettingsToConstants
setTracksImmediatelyWhileDecelerating:
setHorizontalScrollDecelerationFactor:
setAlwaysBounceHorizontal:
_updateVisibleItems
_animateWallpaperDismissal
_cleanupWallpaper
_unhostSideApp
_updateScrollViewFrameAndContentSize
_getIndiciesAndDirectionToPreserveScrollPositionWhenInsertingAtIndex:prior:subsequent:direction:animated:
_beginInsertionOrRemovalOfDisplayItem:direction:style:progress:
_updateContentSizePreservingScrollPositionOfPriorIndex:subsequentIndex:acrossMutation:
_insertionRemovalSlideAnimation
_updateProgressOfInsertingOrRemovingDisplayItem:progress:
_endInsertionOrRemovalOfDisplayItem:
purgePageViewForDisplayItem:
_insertionRemovalStatusForDisplayItem:
_updateContentSizePreservingScrollPositionOfDisplayItem:atOriginalIndex:acrossMutation:
_getItemToKeepStill:andDirection:whenRemovingItem:
_topVisibleItem
_animatePresentationWithCompletionBlock:
_cleanupDisappearedItemContainers
_revealSideAppForDismissalWithTransitionRequest:
_animateDismissalWithCompletionBlock:
_cancelScrolling
_shouldScrollForDismissalToItem:
_minimizeScrollDistanceForDismissalToItem:
_indexForPresentationOrDismissalIsPresenting:
_visibleItemRange
setActiveOrientationSource:andUpdateToOrientation:usingCrossfadeToBlack:
suspendColorSamplingForReason:
resumeColorSamplingForReason:
_animationSettingsForHidingSideAppForPresentation
_popSideAppControllerWithAnimationSettings:completion:
layoutContainsRole:
_animationSettingsForRevealingSideAppForDismissal
_shouldFadeInToRevealSideAppForDismissal
_pushSideAppControllerForSwitcher:withAnimationSettings:fadeIn:completion:
dismissingSuggestionPageView
_itemContainerForDisplayItem:
_hideSideAppForPresentation
_animateWallpaperPresentationForTransitionRequest:
setShowSuggestions:
_sendViewPresentingToPageViewsForTransitionRequest:
_sendViewDismissingToPageViewsForTransitionRequest:
_frameForIndex:displayItemsCount:transitionParameters:scrollProgress:ignoringScrollOffset:ignoringKillingAdjustments:ignoringPinning:
_scaleForTransformForIndex:progressPresented:scrollProgress:
value:withObjCType:
getValue:
insertMass
insertStiffness
insertDamping
_dynamicValueAnimationMatchingCASpringAnimationWithMass:stiffness:damping:velocity:fromValue:toValue:
_frameForIndex:
_transformForIndex:
_layoutDisplayItem:
_ensureCardSubviewOrdering
_applyStyleToVisibleItemContainers
_normalizedScrollProgress
_scaleTransformedFrameForIndex:withUntransformedFrame:scrollProgress:
_shouldUseDepth
_effectiveIndexForIndex:
_depthForIndex:displayItemsCount:scrollProgress:ignoringKillOffset:
_leadingOffsetForIndex:displayItemsCount:transitionParameters:scrollProgress:ignoringKillingAdjustments:
_effectiveInsertionRemovalSlideInProgressForIndex:
_scrollViewContentSizeForDisplayItemCount:
_scrollProgressForIndex:displayItemsCount:depth:ignoringKillOffset:
_transformForIndex:progressPresented:scrollProgress:
_scaleForPresentedProgress:
_displayItemWantsToBeKeptInViewHierarchy:
_isIndexVisible:
_applyStyleToItemContainer:
_didAddVisibleItemContainer:forDisplayItem:
_removeVisibleItemContainerForDisplayItem:
updateCachedPageViewsWithVisibleItemRange:scrollDirection:allItems:
_didRemoveVisibleItemContainerForDisplayItem:
_opacityForIndex:scrollProgress:
_isItemTransitioning:
_insertingOrRemovingDisplayItems
_isItemVisible:
currentlyHostedDisplayItems
_isAboveTransitioningItemDuringPresentation:
_isAboveTransitioningItemDuringDismissalAfterInteractivePresentation:
_scrollProgressForIndex:displayItemsCount:progressPresented:frameOrigin:ignoringScrollOffset:
_setNormalizedScrollProgress:animated:completion:
_desiredXOriginForQuantizedTopPage
_preferredVisibleMarginForTopPage
contentSize
_setContentOffset:animated:completion:
clipStatusBarArea
_applyStyleToItemContainer:forceRealBlur:
_opacityForIndex:
_blurForIndex:
blurEnabled
_isAboveTransitioningItemDuringPresentationAndWillEndUpOffscreen:
_isAboveTransitioningItemDuringDismissalAfterInteractivePresentationAndWillEndUpOffscreen:
shouldRasterize
contentBlurRadiusProgress
setContentBlurRadiusProgress:
_titleOpacityForIndex:
setTitleOpacity:
_titleAndIconOpacityForIndex:
setTitleAndIconOpacity:
setShouldRasterize:
setContentCornerRadiusProgress:
_applyVisibleMarginToItemContainer:
setContentPageViewScale:
_killGestureHysteresis
setKillGestureHysteresis:
killingProgress
_priorIndex:fullyObscuresCardForItemContainer:
setUnobscuredMargin:
_blurForIndex:scrollProgress:
_titleOpacityForIndex:scrollProgress:
_shouldShowIconAndTitleInItemContainers
presentAnimationSettings
mass
stiffness
damping
_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:
dismissAnimationSettings
settingsWithMass:stiffness:damping:epsilon:
factoryWithDuration:timingFunction:
preferredRestingVisibleMarginForBounds:
initWithFrame:displayItem:delegate:
pageViewForDisplayItem:synchronously:
setPageView:
isDragging
isDecelerating
_isAnimatingScroll
_stopScrollingAndZoomingAnimations
setScrolling:
_scrollViewThinksItsScrolling
setLowLatency:
_scrollView:adjustedOffsetForOffset:translation:startPoint:locationInView:horizontalVelocity:verticalVelocity:
_shouldAdjustScrollViewTracking
_topIndexForLocationInScrollView:
_adjustedOffsetForIndex:offset:start:originalLocationInView:locationInView:
contentOffsetVelocityConsideringNextContentOffset:
_scaleTransformedXOrigin:scrollProgress:
_sizeForPageViewOfDisplayItem:progressPresented:
_contentSizeForPageViewOfDisplayItem:
contentOffsetVelocity
isDisplayItemOfContainerRemovable:
_contentSizeDeltaForItemDeletion
aExpLayoutCoeff
bExpLayoutCoeff
depthPadding
useTitleOpacityPrototypeSettings
titleOpacityACoeff
titleOpacityBCoeff
titleOpacityCCoeff
titleOpacityDCoeff
orientationForPageViewFromProvider:
initialDisplayItemForPageViewFromProvider:
nextDisplayItemForInteractiveTransitionForPageViewFromProvider:
initialLayoutStateForPageViewFromProvider:
sizeForDisplayItem:fromProvider:
contentSizeForDisplayItem:fromProvider:
containerViewControllerForPageViewFromProvider:
suggestionViewController:activatedSuggestion:
orientationForSuggestionViewController:
shouldShowIconAndLabelOfContainer:
killDisplayItemOfContainer:withVelocity:
canSelectDisplayItemOfContainer:numberOfTaps:
selectedDisplayItemOfContainer:
frameForPageViewOfContainer:fullyPresented:
scrollViewKillingProgressUpdated:ofContainer:
minimumVerticalTranslationForKillingOfContainer:
pageForDisplayItem:
_layoutDisplayItem:withZoomScale:
_scaleTransformedFrameForIndex:
_isIndexTransitioning:
_animationFactoryForWallpaper
_insertionRemovalProgressForDisplayItem:
_transitionProgress
_visibleItemContainers
_isReadyForScrollViewLayout
_scrollView:adjustedOffsetForOffset:translation:startPoint:locationInView:
_backgroundDarkeningView
_topmostItemMinimumFrameXOrigin
_topmostItemMinimumScale
_scrollViewLastContentOffset
_scrollViewLastScrolledForward
_appSuggestionViewController
_pageViewProvider
_transitionParameters
_transitionInProgress
_transitionPresenting
_transitionInteractive
_transitionFinishingAfterBeingInteractive
_transitionDidFinishDismissing
_didSendViewPresentingDismissing
_shouldHideTitlesAndIconsForInteraction
_initialTitleAndIconOpacityTransitionProgress
_hideSideAppView
_blocksToPerformWhenScrollingEnds
_insertionRemovalStatus
_suppressBackgroundReasons
_configuredScrollviewForThisPresentation
_isScrolling
_grabbedDraggingIndex
_inputContentOffsetAdjustmentForIndexChange
_outputContentOffsetAdjustmentForIndexChange
_start
_originalLocationInView
_isWallpaperConfigured
_toggle
_updateAppsToBringUpFromPreferences
_bringToForeground:withFrame:
_sendToBackground:
_activated
_leftTestBundleID
_rightTestBundleID
_centerTestBundleID
_addBackgroundView
_addSlideableContentView
_addPageControl
_addDateTimeContainer
_addScrollView
_addAuthIndicator
_addTintingView
_layoutFakeStatusBarView
_setupIrisGestureOnScrollView:
_layoutBottomPage
_setDateView:forTesting:
updatePageControl
pageViews
setNumberOfPages:
setCurrentPage:
_dateViewFrameForPageAlignment:pageRelativeScrollOffset:outAlignmentPercent:
presentationExtentForAlignmentPercent:
_layoutFullScreenViews
_layoutDateTimeViewClippingView
_layoutPageControl
_layoutAuthIndicator
_layoutWallpaperEffectView
_layoutTintingView
scrollView:adjustedOffsetForOffset:translation:startPoint:locationInView:horizontalVelocity:verticalVelocity:
_setUserInteractionDisabled:forReason:
_currentTransitionContext
_completedTransitionContextForPreviousTransitionContext:newTransitionContext:
scrollFromRightToLeft
recognized
contentOffsetForPageAtIndex:
currentScrollContext
searchClippingLineMaxY
_overlayClippingFrame
mainPageView
setAlignmentPercent:
timeLabelOffsetForScrollPercent:
suggestedFrameForDateTimeViewInScreenCoordinates:centeredX:
origin
numberOfPages
sizeForNumberOfPages:
bottomPage
setScrollView:
setHidesForSinglePage:
showAuthenticationEngineeringUI
currentScrollInterval
scrollViewWillBeginScrolling:
scrollViewDidScroll:withContext:
scrollViewDidEndScrolling:
setPageControl:
dateViewOffset
dateViewPageAlignment
forceDateViewCentered
dateViewIsVibrant
fakeStatusBarLevel
slideableContentView
modalPresentationView
setTintingView:
slideUpToAppView
foregroundViewPositionOffset
targetPageIndexForDraggingEnded
_dateTimeClippingView
_authIndicator
_slideableContentView
_dateEffectView
_scrollViewStartingXOffset
_scrollModifier
_initialPageIndex
_forceDateViewCentered
_dateViewIsVibrant
_bottomPage
_mainPageView
_pageControl
_dateViewPageAlignment
_fakeStatusBarLevel
_modalPresentationView
_tintingView
_slideUpToAppView
_targetPageIndexForDraggingEnded
_regionsDebugView
_dateViewOffset
_foregroundViewPositionOffset
deactivateForReason:
_nextAlertItemToTest
_dismissCurrentItem
alertForIndex:
initWithAccessory:batteryLevel:
faceTimeURLWithDestinationID:
_anyAppIcon
telephonyURLWithDestinationID:promptUser:
_anyLeafIcon
_anyUserInstalledAppIcon
initWithAppInfo:
dataPlanAlertItemForCase:
_mapsApp
testCases
testCasesGrouped
nameForCase:
thermalWarningAlert:didTriggerAction:
_anySUDescriptor
recipesToTest
setRecipesToTest:
_item
_recipesToTest
_setLevel:
wantsFullscreenPresentation
supportsAwayListItem:
setUnlockActionHandler:
bannerItemWithAwayListItem:unlockActionHandler:delegate:
initWithNotificationRequest:
_titleFontOfSize:
_messageFontOfSize:
_backToOEM
_setButtonType:
initWithFrame:configuration:title:image:message:baselineSeparations:
requestCarUI
_sizeTitleToFitInFrame:
_sizeMessageToFitInFrame:
nextObject
_thinSystemFontOfSize:
pointSize
preferredFocusedItem
messageLabel
imageView
backToOEMButton
_titleAscender
_titleDescender
_imageSize
_messageLabel
_messageAscender
_messageDescender
_backToOEMButton
_backToOEMGestureRecognizer
_baselineSeparations
_setBrightnessLevel:showHUD:
increaseBrightnessAndRepeat
adjustBacklightLevel:
decreaseBrightnessAndRepeat
setBrightnessLevel:
_brightnessDownTransaction
_brightnessUpTransaction
beginAnimations:
_recenterHUDView
setBecomeKeyOnOrderFront:
_createUI
orderFront:
presentHUDView:
_hudWindow
_hudContentView
_hudView
_hudVisibleOrFading
_ignoresHitTest
_setSuggestionQueueSuspended:
_removeContainerForSlideUp
_updateBottomBanner
_handleBannerTap:
_handleBannerPan:
_idleOnscreenRectForBottomBanner
_presentedRectForBottomBanner
_offscreenRectForContentView
_presentedRectForContentView
_offscreenRectForBottomBanner
_bottomBannerStyle
_insertAndAnimateInBottomBannerForSuggestion:
_animateOutAndRemoveCurrentBottomBanner
_beginInteractivePresentationOrAnimation
_insertContainerForSlideUp
_endInteractivePresentationOrAnimation
upperBoundary:ofType:
_newDynamicAnimationForTargetValue:withStartValue:withInitialVelocity:
_beganPanGesture
_updatedPanGestureWithProgress:
_finishPresentationOrDismissalForProgress:velocity:
initWithFrame:appSuggestion:
showSuggestions
_isSuggestionQueueSuspended
_showSuggestions
_currentBottomBanner
_slideUpPageView
_tapGestureRecognizer
_inInteractivePresentationOrAnimation
_presentingOrDismissingBanner
_progressPresented
_fullyPresented
_setSuggestionQueue
_suggestionQueueSuspended
setAccountURL:
laterButtonTitle
notNow
nowButtonTitle
takeAction
accountURL
initWithAccountURL:
_accountURL
setRemainingPortion:
remainingPortion
_remainingPortion
_showSettings
setNewAccount:
isNewAccount
_newAccount
_promptToDisable
_currentTextForResetOrRestoreState
localizedProductName
supportsWhitePointAdaptation
_defaultAnimationSettings
_updateWhitePointAdaptationStrengthWithAnimationSettings:
_updateWhitePointAdaptationStrengthWithWorkspaceTransitionRequest:fromPercentage:toPercentage:animationSettings:cancelled:interactive:
_whitePointAdaptivityStyleForActiveAlert
_whitePointAdaptivityStylesForLayoutState
setWhitePointAdaptivityStyleWithStyles:animationSettings:
previousApplications
_updateWhitePointAdaptationStrengthWithFromApplications:toApplications:fromAlert:toAlert:fromPercentage:toPercentage:animationSettings:interactive:
_isInteractiveUpdateEnabled
transitionFromWhitePointAdaptivityStyleWithStyles:toWhitePointAdaptivityStyleWithStyles:fromPercentage:toPercentage:animationSettings:
_whitePointAdaptivityStyleForLayoutElement:
_applicationForLayoutElement:
_defaultAnimationDuration
harmonySettings
_harmonySettings
updateWhitePointAdaptationStrengthWithAnimationSettings:
_layoutViewController
setCarrierName:
_carrierName
sb_firstDescendantOfViewControllers:passingTest:
sb_firstDescendantPassingTest:
sb_firstDescendantOfClass:
sb_beginAppearanceTransitionIfNecessary:animated:
sb_endAppearanceTransitionIfNecessary
sb_firstDescendantOfClassNamed:
guidedAccessWasActivated
guidedAccessWasDeactivated
setButtonDown:
isAnyTouchGestureRunning
_cancelPreheatingOfPlugin
handleButtonDownEventFromSource:
handleButtonUpEventFromSource:
performWhenMenuButtonIsUpUsingBlock:
currentLongPressDuration
_preheatPluginForPresentationAfterInterval:
performQueuedButtonUpActions
_performButtonPreflightActions
consumeHomeButtonSinglePressUpWithPriority:
noteMenuButtonSinglePress
_shouldIgnorePressesDueToProxOrIdle:
preheatImageCacheForVariant:
handleHomeButtonPress
handleButtonTapFromSource:
handleMenuButtonPress
handleHomeButtonHeld
_logMenuButtonHoldTime
consumeHomeButtonDoublePressDownWithPriority:
noteMenuButtonDoublePress
consumeHomeButtonTriplePressUpWithPriority:
preheatForMenuButtonWithFireDate:
cancelPendingActivationEvent:
scheduleButtonUpActionBlock:
performInitialButtonUpActions
performDoublePressDownActions
performTriplePressUpActions
performLongPressCancelledActions
performDoubleTapUpActions
setCurrentLongPressDuration:
_dontUnlockOnButtonUp
_isGuidedAccessActive
_buttonUpActions
_buttonUpPostActions
_menuButtonHoldStartTime
_menuButtonHoldStartAbsoluteTime
_hardwareButtonService
_buttonDown
_currentLongPressDuration
_notificationCenterDestination
bannerItemWasTapped:
handleLockScreenActionWithContext:
timestamp
shouldPlayLightsAndSirens
inertWhenLocked
isCritical
suppressedMessage
showMessagePreview
accessoryIconMask
canShowWhileLocked
sortDate
listItem
unlockActionHandler
_listItem
_lockedActionHandler
systemServiceClient
appendUInt64:withName:
setSystemServiceClient:
eventMask
setEventMask:
eventPriority
setEventPriority:
_systemServiceClient
_eventMask
_eventPriority
setHardwareButtonDelegate:
isSuspended
_sendEvent:withPriority:
messageTypeKey
messageWithPacker:
connection
sendToConnection:
_sendXPCMessageForEvent:priority:toClient:
member:
_addClientInfo:
_removeClientInfo:
_setSystemServiceClient:buttonKind:eventMask:priority:
setHapticType:
hapticType
setObject:forSetting:
initWithInfo:timeout:forResponseOnQueue:withHandler:
removeHintSuppressionAssertion:
addHintSuppressionAssertion:
systemServiceServer:clientDidDisconnect:
systemServiceServer:client:acquireAssertionOfType:forReason:withCompletion:
systemServiceServer:client:setEventMask:buttonKind:priority:
systemServiceServer:client:setHapticType:buttonKind:
systemServiceServer:client:fetchHapticTypeForButtonKind:completion:
hasConsumersForHomeButtonPresses
homeButtonClients
setHomeButtonClients:
_serviceClientHomeHardwareButtonHintSuppressionEntitlementAuthenticator
_serviceClientEventConsumerEntitlement
_homeButtonClients
addAutoUnlockRule:
removeAutoUnlockRule:
_rules
_pipWindow
setPictureInPictureWindowHidden:withReason:
_doAnimation:
updateSpringBoardStatusBarForLockScreenTeardown
_transitionWallpaperFromLockWithOptionalOutTimingFunction:adjustWindowLevel:completionHandler:
_dismissBannerAnimated:
_maybeStartCrossfade
_noteContextHostCrossfadeDidFinish
_maybeReportAnimationFinished
_noteAnimationDidRevealApplication
appViewControllers
_removeWallpaperAnimationPriorityWithFactory:
_willSetupStartDependencies
isReasonableMomentToInterrupt
_noteNotificationAnimationsDidFinish
_animationWrapperView
_pipWindowWrapper
_appsRequiringHostView
_finishedActivating
_finishedCrossfadingToHostView
_finishedNotificationAnimations
initWithAlertManager:toAlert:fromAlert:
_initWithAlertManager:
_addDeactivationMilestones
_addActivationMilestones
deactivateAll
_updateForegroundScenesUnderLock:
evaluateMilestone:withEvaluator:
addMilestones:
alert:didActivateWithCompletion:
alert:didDeactivateWithCompletion:
initWithAlertManager:fromAlert:deactivateAll:
toAlert
fromAlert
_deactivateAll
_suppressingActivationOcclusion
wallpaperSpecificationEnumerator
wallpaperSpecifications
setWallpaperSpecificationEnumerator:
initWithPropertyList:
setOverriddenComposedWallpaperSpecification:
downloadedWallpaperCache
removeAllFiles
setWallpaperSpecifications:
_wallpaperSpecifications
_wallpaperSpecificationEnumerator
initWithBootDefaults:user:
readTransitionContext
hasUserSwitchOverlayMismatch
transitionForContext:outDestination:
registerBlockObserver:
dismissActions
saveContext:
overlayDescriptor
isInterstitial
userInteractionIsEnabled
_saveContextFromTransitionContext:
_transitionContextPersistence
_setTransitionContextPersistence:
_transitionFactory
_setTransitionFactory:
_initialRestartState
_transition
_transitionObserver
_ranOnce
_renderOverlayDismissActions
snapshotSortDescriptorForNames:
snapshotSortDescriptorForScheme:
snapshotSortDescriptorForInterfaceOrientationMask:
snapshotSortDescriptorForStatusBarStateMask:
snapshotSortDescriptorForImageScale:
snapshotSortDescriptorForContentTypeMask
snapshotSortDescriptorForRequiredOSVersion:
snapshotSortDescriptorForCreationDate
sortDescriptorWithKey:ascending:comparator:
compare:options:
snapshotSortDescriptorsForNames:scheme:imageScale:statusBarStateMask:interfaceOrientationMask:requiredOSVersion:
snapshotSortDescriptorForLaunchInterfaceIdentifier:
orderedSetWithObject:
orderedSet
appInfo
setAppInfo:
loadViewIfNeeded
isolationViewControllerClass
_rotateViewIfNecessary:inverted:
slideOverDirection
setSlideOverDirection:
fromContainerView
toContainerView
fromDimmingView
toDimmingView
_slideOverDirection
_fromContainerView
_toContainerView
_fromDimmingView
_toDimmingView
addNodeObserver:
addFolderObserver:
_appPlaceholdersDidChange:
_updateBadgeValue
removeNodeObserver:
removeFolderObserver:
isRootFolder
gridImages
_notifyAccessoriesDidUpdate
progressState
progressPercent
setByAddingObjectsFromSet:
_adjustForIconsAdded:removed:
_containedIconImageChanged:
listIndexForContainedIcon:
gridCellIndexForIconIndex:
numberOfCells
gridImageByPatchingWithCellImageProviderBlock:
replaceObjectAtIndex:withObject:
_notifyImageDidUpdate
folderIcon:didUpdateGridImage:forListIndex:forContainedIconImageUpdate:
rootFolderDelegateDidChange:
localizedStandardCompare:
_maxIconsInGridImage
_iconGridImageClass
gridImageForNumberOfCells:withCellImageProviderBlock:
_miniIconGridForPage:
numberOfColumns
rectAtIndex:maxCount:
sbListIndex
sbIconIndex
iconImageAtIndex:
children
containedNodeIdentifiers
indexPathsForContainedNodeIdentifier:prefixPath:
nodesAlongIndexPath:consumedIndexes:
nodeDescriptionWithPrefix:
node:didAddContainedNodeIdentifiers:
node:didRemoveContainedNodeIdentifiers:
indexOfList:
containsIndex:
folder:didAddList:
folder:didRemoveLists:atIndexes:
iconImageDidUpdate:
iconAccessoriesDidUpdate:
iconLaunchEnabledDidChange:
updateLabel
progressIsPaused
shouldAnimateProgress
noteContainedIconsAdded:removed:
noteContainedIcon:replacedIcon:
miniGridCellImageForIcon:
_cachedMiniGrids
_folder
_nodeObservers
_finishedDownloadIdentifiers
_progressState
_progressPercent
effectView
setObserver:
addEmptyList
removeListObserver:
nodes
_compactLists
_listsForCompaction
_removeLists:
addNode:
addListObserver:
didAddFolder:
_addList:
indexSet
indexOfNode:
addIndex:
didRemoveFolder:
removeNodesAtIndexes:
_createNewListWithIcon:
listModelClass
initWithFolder:maxIconCount:
nodeAtIndex:
performCascadingIconInsertion:listIndex:iconIndex:
maxNumberOfIcons
nodesContainingNodeIdentifier:
bs_emptyPath
referencedIcon
placeholderNodeIdentifierForIcon:
stopCoalescingContentChangesForRequestID:forceReload:
_isCoalescingContentChanges
enumerateNodesUsingBlock:
purgeLists
setParentFolder:
indexDescriptionWithPrefix:
iconList:didRemoveIcon:
iconList:didAddIcon:
list:didAddContainedNodeIdentifiers:
list:didRemoveContainedNodeIdentifiers:
iconList:didReplaceIcon:withIcon:
defaultDisplayName
setDefaultDisplayName:
canRemoveIcons
canEditDisplayName
_setLists:
maxIconCountInLists
_folderObservers
_lists
_defaultDisplayName
_displayNameDirty
_open
_cancelable
_addedIcons
_coalesceChangesRequests
_maxListCount
_maxIconCountInLists
_parentFolder
bs_subpathFromPosition:
_actionFont
setAllowOnAllDevices:
setReachabilityDefaultKeepAlive:
setReachabilityInteractiveKeepAlive:
setYOffsetFactor:
setReducedMotionSlideDuration:
setPrecision:
reducedMotionSlideDuration
epsilon
factoryWithMass:stiffness:damping:epsilon:
allowOnAllDevices
_allowOnAllDevices
_reachabilityDefaultKeepAlive
_reachabilityInteractiveKeepAlive
_yOffsetFactor
_mass
_stiffness
_damping
_epsilon
_reducedMotionSlideDuration
_createScrollView
_frameForIconTitleViewContainer
_deviceSupportsBlur
filterWithType:
_blurFrame
setFilters:
_frameForScrollView
_handlePageViewPressDown:
setMinimumPressDuration:
_handlePageViewTap:
setAllowableMovement:
_applyVisualStyleToSubviews
_hysteresis
_frameForPageView
_addIconSubview
_removeIconSubview
alwaysBounceVertical
setAlwaysBounceVertical:
_frameForIconView
_frameForIconTitle:
_transformForIconTitleViewContainer
_updateBlur
_ensureSubviewOrder
_inverseScaleTransformFactor
_scaleTransformFactor
_effectiveTitleAndIconOpacityConsideringKillProgress
initWithDisplayItem:
updateIcon
setValue:forKeyPath:
setRasterizationScale:
spacingBetweenIconAndLabel
spacingBetweenSnapshotAndIcon
spacingBetweenEdgeAndIcon
iconSize
killGestureHysteresis
contentCornerRadiusProgress
titleOpacity
titleAndIconOpacity
contentPageViewScale
unobscuredMargin
_pageView
_verticalScrollView
_iconAndLabelContainer
_iconTitle
_killVelocity
_contentCornerRadiusProgress
_contentBlurRadiusProgress
_contentPageViewScale
_titleOpacity
_titleAndIconOpacity
_pressDownGestureRecognizer
_doubleTapGestureRecognizer
_disableBlurInputBoundsUpdatesForDismissal
_blurEnabled
_lastBlurRadius
_lastBlurFrame
_unobscuredMargin
factoryWithDuration:delay:timingFunction:
_slideUpViewsWithSlideFactory:fadeFactory:delayIncrement:
_noteSignificantAnimationFinished
_finishViewForSlideUp:
animateWithFactory:additionalDelay:actions:completion:
initFromLockoutView:toLockoutView:starkScreenController:
_viewsToSlideUp
_toLockoutView
_significantAnimationsRemaining
_noteActiveDataSourceDidChangeNotification:
_noteActiveDataSourceDidGenerateImageNotification:
_noteDataSourceDidInvalidateNotification:
_updateActiveDataSource
_notifyLaunchEnabledDidChange
reloadIconImagePurgingImageCache:
_noteActiveDataSourceDidGenerateIconFormat:
accessoryTypeForLocation:
isRecentlyUpdated
canEllipsizeLabel
canTightenLabel
_leafIdentifier
_applicationBundleID
_dataSources
_activeDataSource
_dataSourceAtUninstallation
insertNode:atIndex:
_setDock:
notificationListInsets
setContentInset:
_regulatoryImageView
setContext:
_handleDimmingViewGesture:
dimmingView
_keyboardFrameWillChange:
setDimmingLevel:withPercent:
sideSwitcherGrabberStyle
setSideSwitcherGrabberStyle:
isSideSwitcherGrabberPressed
setSideSwitcherGrabberPressed:
setResizing:
updateVibrancyForPinResizeGrabberView
_updatePinResizeGrabberVerticalOffsetWithAnimationDuration:
wantsPinResizeGrabber
layoutStateForLayoutElementContainingView:
hasLayoutAttributes:
setPinResizeGrabberHorizontalOffset:
pinResizeGrabberFrame
handleReturnActionForLayoutElementContainingView:
rectValue
isResizing
setPinResizeGrabberVerticalOffset:
pinResizeGrabberView
setVibrant:
locationOfTouch:inView:
shouldAllowSwipeInDimmingViewAtStartLocation:inLayoutElementContainingView:
willBeginTransition
didEndTransition
_isTransitioning
willBeginResize
didEndResize
setLayoutElementViewAlpha:
_supportedOrientations
_contentWrapperView
pinResizeGrabberHorizontalOffset
_dismissTapRecognizer
_dismissSwipeRecognizer
_keyboardVisible
_keyboardFrame
_resizing
_pinResizeGrabberHorizontalOffset
initWithTransitionContextProvider:starkScreenController:
currentFolderController
_cleanupHosting
overrideStrategyForApplicationAnimation:screenController:
setIconLayoutOverrideStrategy:
_prepareZoom
_animationState
_noteZoomDidFinish
_noteDependencyDidInvalidate
_animateZoomWithCompletion:
_setReferenceIconViewIsInTransitionIfAppropriate:
_iconAnimationSettings
waitingToStart
setAllIconElementsButLabelToHidden:
isFocused
setAlwaysAppearsFocused:
setSeparatorHidden:
_alertImpersonator
_fromAssistant
_folderIsDisplayingIcon
contactForUser:
isUserPictureSupported
_userPictureView
_flasher
resetAllDefaults
animationDurationMultiplier
setAnimationDurationMultiplier:
enableUIPreviewInteractionAnimations
setEnableUIPreviewInteractionAnimations:
actionWithSettingsKeyPath:
_enableUIPreviewInteractionAnimations
_animationDurationMultiplier
_iconAtIndex:
addIcon:asDirty:
setParent:
_notifyListObservers:
replaceNodeAtIndex:withNode:
containsNode:
removeNode:
sortUsingSelector:
directlyContainsLeafIconWithIdentifier:
warmUpIconImagesForLocation:
_icons
_maxIconCount
_listObservers
_iconStateIsDirty
setViewServiceClassName:
viewServiceClassName
_viewServiceClassName
_noteFolderAnimationStateDidChange
_animateFolderIcon:open:animated:withCompletion:
_setHasAnimatingFolder:
_cleanupForClosingFolderAnimated:
_compactRootListsAfterFolderCloseWithAnimation:
_folderDidFinishOpenClose:animated:success:
pushFolderIcon:animated:completion:
popFolderAnimated:completion:
_proposedFolderNameForGrabbedIcon:recipientIcon:
convertRect:toWindow:
placeholderForIcon:
_moveDroppedIconsToLocation:
iconImageSnapshot
iconImageFrame
iconImageAlpha
scrollToFirstGapAnimated:
_setAnimatingFolderCreation:
frameForMiniIconAtIndex:
addKeyframeWithRelativeStartTime:relativeDuration:animations:
animateKeyframesWithDuration:delay:options:animations:completion:
iconBackgroundView
setRefusesRecipientStatus:
replaceFolderIcon:byContainedIcon:animated:
allowNestedFolders
isInDock
_folderRowsForFolder:inOrientation:
_createTestFolderWithOverrideIconList:
_ppt_currentHomescreenState
_ppt_restoreHomescreenState:
_failCurrentTestWithMessage:
_createTestFolder
isDroppingIconsInOrOutOfFolder
isDroppingIcon:
_presentNotificationCenterForReachability
_snapshotFadeDidStop:finished:snapshot:
_contentViewRelativeFrameForIcon:
_folderRowsForFolder:
addListenerID:forService:
_faceTimeStateChanged:
availabilityForListenerID:forService:
incomingFaceTimeCall
activeFaceTimeCall
currentFaceTimeCall
incomingVideoCall
activeVideoCall
removeListenerID:forService:
isVideo
faceTimeIsAvailable
_hasFaceTimeCapability
_faceTimeCapabilityUpdateToken
_sharedCallCenter
setEnableSideApps:
setEnablePinningSideApps:
setEnableBreadcrumbs:
setDesiredBundleIdentifier:
setDebugSceneColors:
setDebugRotationCenter:
setDebugColorRotationRegions:
setClipRotationRegions:
setZoomOutRotationFactor:
setRotationSlowdownFactor:
setSpaceAroundSideGrabberToAllowPullIn:
setFencesRotation:
setMillisecondsBetweenResizeSteps:
setSlideOffResizeThreshold:
setGapSwipeBuffer:
debugRotationCenter
debugColorRotationRegions
clipRotationRegions
zoomOutRotationFactor
setValueValidatator:
setMinValue:
setMaxValue:
enableSideApps
anyRotationDebuggingEnabled
enableBreadcrumbs
desiredBundleIdentifier
debugSceneColors
rotationSlowdownFactor
spaceAroundSideGrabberToAllowPullIn
fencesRotation
millisecondsBetweenResizeSteps
slideOffResizeThreshold
gapSwipeBuffer
_enableSideApps
_enableBreadcrumbs
_enablePinningSideApps
_debugSceneColors
_debugRotationCenter
_debugColorRotationRegions
_clipRotationRegions
_fencesRotation
_desiredBundleIdentifier
_zoomOutRotationFactor
_rotationSlowdownFactor
_spaceAroundSideGrabberToAllowPullIn
_millisecondsBetweenResizeSteps
_slideOffResizeThreshold
_gapSwipeBuffer
assertion
setAssertion:
invalidateProcessAssertion
takeProcessAssertionWithSequenceNumber:
_assertion
needsLegibilityImageForParameters:
updateIconLabelWithSettings:imageParameters:
iconLabelViewWithSettings:imageParameters:
parameters
checkoutLabelImageForParameters:
_checkInImages
checkinLabelImage:
initWithSettings:strength:image:shadowImage:options:
imageParameters
checkoutLegibilityImageWithLabelImage:parameters:
setImageParameters:
setSettings:image:shadowImage:
usesColorFilters
checkinLegibilityImage:
_imageParameters
initWithOrientation:variant:
lockscreenWallpaperSettings
homescreenWallpaperSettings
initWithImageCache:iconController:wallpaperController:
_updateWallpaperForLocations:options:withCompletion:
_checkForComposedWallpapersAtLaunch
_updateScreenBlanked
_motionEffectsChanged
_accessibilityReduceTransparencyChanged:
_endSuspendingMotionEffectsForBlurIfNeeded
_beginDisallowRasterizationBlock
styleTransitionState
_shouldSuspendMotionEffectsForState:
_endDisallowRasterizationBlock
_updateMotionEffectsForState:
_updateWallpaperHidden
_updateWallpaperParallax
setVariant:withAnimationFactory:
currentTransitionStateIsOpaque
prepareToDisappear
prepareToAppear
setZoomFactor:withAnimationFactory:
setContentsRect:
switchToIrisMode:
hasContentOutsideVisibleBounds
setLockscreenWallpaperScale:withAnimationFactory:
homescreenStyleInfo
lockscreenStyleInfo
wallpaperStyleInfoForVariant:
setPriorityInfo:forPriority:
_updateEffectViewForVariant:withFactory:
removePriorityInfoForPriority:
shouldDelayHomescreenStyleUpdates
_suspendOrResumeColorSampling
_suspendOrResumeWallpaperAnimation
averageColorInRect:forVariant:withSmudgeRadius:
_wallpaperViewForVariant:
averageColorInRect:withSmudgeRadius:
contrastInRect:
contrast
contrastInRect:contrastWithinBoxes:contrastBetweenBoxes:
_createHomescreenLightForegroundBlurImageIfNecessary
contentScaleFactor
_setDisallowRasterization:withReason:reasons:
_updateRasterizationState
physicalMemory
wallpaperType
_bestStaticWallpaperViewInitializationOptionsForVariant:shared:options:
proceduralWallpaper
proceduralWallpaperOptions
initWithFrame:proceduralWallpaper:options:variant:
wallpaperImage
videoURL
initWithFrame:wallpaperImage:cacheGroup:wallpaperVideoURL:stillTimeInVideo:staticImageOptions:variant:prewireMemory:useRewindPlaybackStyle:
initWithFrame:wallpaperImage:cacheGroup:variant:options:
setInternalObserver:
setParallaxFactor:
setParallaxEnabled:
setWallpaperName:
setSharesContentsAcrossVariants:
variantsThatDarkenWallpaperToEnsureLegibilityForWallpaperType:
setVariantsThatDarkenContentsToEnsureLegibility:
setVariant:withAnimationFactory:forced:
URLByAppendingPathComponent:isDirectory:
numberWithUnsignedShort:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
initWithDirectoryURL:
setRetryIntervals:
initWithStore:faultHandler:
setMaxTotalFileSize:
setMaxTotalFileCount:
setMaxAllowedTimeSinceLastAccess:
setMaxAllowedTimeSinceGeneration:
_isWallpaperHiddenForVariant:
lockScreenWallpaperConfiguration
homeScreenWallpaperConfiguration
overriddenComposedWallpaperSpecification
_rebuildComposedWallpapers
_lockScreenWallpaperSpecificationFromProfile
_homeScreenWallpaperSpecificationFromProfile
initWithAssetCache:
_background_setWallpaperForLocations:fromImage:name:
buildWallpaperFromSpecification:completionHandler:
variantsShareWallpaperConfigurationForTypes:
variantsShareWallpaper
_updateSharedWallpaperWithOptions:
_updateSeparateWallpaperForVariants:options:
setHomescreenWallpaperScale:
setLockscreenWallpaperScale:
setLockscreenOnlyWallpaperAlpha:
_updateBlurGeneration
invalidateSnapshotsForLocations:
isDisplayingWallpaperWithConfiguration:forVariant:
_isWallpaperView:displayingWallpaperWithConfiguration:forVariant:
_clearWallpaperView:
setSharedWallpaperView:
setLockscreenWallpaperView:
setHomescreenWallpaperView:
_makeAndInsertWallpaperViewWithConfiguration:forVariant:shared:options:
_handleWallpaperChangedForVariant:
_saveWallpaperAggdKeysForLocations:withConfiguration:
vendWallpaperViewForConfiguration:forVariant:shared:options:
setGeneratesBlurredImages:
regenerateStaticWallpaperThumbnailImages
_setWallpaperHidden:variant:reason:
_beginSuspendingMotionEffectsForBlurIfNeeded
highestValidPriority
priorityInfoForPriority:
setStyleTransitionState:
_newWallpaperEffectViewForVariant:transitionState:
_clearWallpaperEffectView:
_forceUpdateToSpringBoardInterfaceOrientationWithAnimationDuration:
_updateEffectViewForVariant:oldState:newState:oldEffectView:newEffectView:
_activeWallpaperView
_observersForVariant:
_reconfigureBlurViewsForVariant:
_updateBlurImagesForVariant:
_blurViewsForVariant:
reconfigureWithSource:
updateImageWithSource:
setContinuousColorSamplingEnabled:
setWallpaperAnimationEnabled:
imageForBackdropParameters:includeTint:
sbf_resizeImageToSize:preservingAspectRatio:
setTransformOptions:
rotateToInterfaceOrientation:
_imageForStyle:withSource:
_isRasterizationDisallowedForCurrentVariant
wantsRasterization
removeAllImagesWithCompletion:
_isAcceptingOrientationChangesFromSource:
setRotating:
needsImmediateLayoutBeforeRotation
_handleWallpaperGeometryChangedForVariant:
orientationSource:willRotateToInterfaceOrientation:duration:
orientationSource:willAnimateRotationToInterfaceOrientation:duration:
orientationSource:didRotateFromInterfaceOrientation:
_handleWallpaperLegibilitySettingsChanged:forVariant:
wallpaperThumbnailImageData
providerLegibilitySettingsChanged:
wallpaperViewDidInvalidateBlurs:
wallpaperViewDidInvalidateGeometry:
wallpaperView:didChangeZoomFactor:
wallpaperViewDidChangeWantsRasterization:
wallpaperConfigurationManager:didChangeWallpaperConfigurationForVariants:
wallpaperConfigurationManager:isVideoSupportedForVariant:
wallpaperServer:fetchThumbnailDataForVariant:completionHandler:
updateIrisWallpaperForUnlockedState
updateIrisWallpaperForLockedState
setLockscreenWallpaperContentsRect:
contrastInRect:contrastWithinBoxes:contrastBetweenBoxes:forVariant:
homescreenLightForegroundBlurImage
homescreenLightForegroundBlurImageContentsRectForWallpaperRelativeRect:
_registerFakeBlurView:
_unregisterFakeBlurView:
_sourceForFakeBlurView:
_newFakeBlurViewForVariant:style:transformOptions:
_getImageInRect:withZoomFactor:forVariant:style:
homescreenWallpaperScale
lockscreenWallpaperScale
activeOrientationSource
lockscreenWallpaperView
homescreenWallpaperView
sharedWallpaperView
_wallpaperWindow
_wallpaperContainerView
_wallpaperOverlayContainerView
_lockscreenWallpaperView
_homescreenWallpaperView
_sharedWallpaperView
_lockscreenObservers
_homescreenObservers
_suspendColorSamplingReasons
_suspendWallpaperAnimationReasons
_requireWallpaperReasons
_hideHomescreenWallpaperReasons
_hideLockscreenWallpaperReasons
_displayedVariant
_lockscreenOnlyWallpaperAlpha
_lockscreenBlurViews
_homescreenBlurViews
_disallowRasterizationBlockCount
_disallowRasterizationReasonsHomeVariant
_disallowRasterizationReasonsLockVariant
_homescreenLightForegroundBlurImage
_homescreenLightForegroundBlurImageDisplayRect
_creatingHomescreenLightForegroundBlurImage
_isSuspendingMotionEffectsForBlur
_previewCache
_activeOrientationSource
_coalescingGeometryChanges
_locationsWithCoalescedGeometryChanges
_coordinator
_homescreenStyleChangeDelayReasons
_downloadedWallpaperCache
_wallpaperConfigurationManager
_homescreenWallpaperScale
_lockscreenWallpaperScale
_overriddenComposedWallpaperSpecification
_homescreenStyleInfo
_lockscreenStyleInfo
_updateImageWithSource:notifyObserver:
zoomFactor
setZoomFactor:
setContentsOpaque:
parallaxEnabled
_allowsParallax
transformOptions
_setImage:style:notify:
fakeBlurView:didChangeStyle:
blurredImage
snapshotImage
setLogicalContentOrientation:
superlayer
setSourceLayer:
valueWithCGPoint:
setSourcePoints:
setRemovedOnCompletion:
effectiveStyle
offsetWallpaperBy:
fullscreen
_transformOptions
_requestedStyle
_effectiveStyle
_wallpaperView
_fullscreen
_updateBackgroundColor
_variant
enumerateValidPrioritiesUsingBlock:
_priorityInfo
_styleTransitionState
characterSetWithCharactersInString:
setCharactersToBeSkipped:
scanHexInt:
getRed:green:blue:alpha:
sb_RGBHexString
sb_colorWithRGBHexString:
getHue:saturation:brightness:alpha:
deckSwitcherBackgroundSaturationDeltaFactor
deckSwitcherForegroundSaturationDeltaFactor
deckSwitcherForegroundBlurRadius
mediumBlurRadius
mediumGrayscaleTintLevel
mediumGrayscaleTintAlpha
mediumSaturationDeltaFactor
setAllowNestedFolders:
setPinchToClose:
setMinPinchScale:
setOneColumnAtATime:
pinchToClose
oneColumnAtATime
_allowNestedFolders
_pinchToClose
_oneColumnAtATime
_minPinchScale
__useDynamicMethodResolution
_contentUnavailableVibrantOptionsForCurrentState
setVibrantOptions:
tableViewControllerClass
contentUnavailableText
initWithFrame:title:style:includeBackdrop:
invalidateContentLayout
reloadTableViewDataIfNecessary
_lazyContentUnavailableView
insertTableView
_insertContentUnavailableView
_removeBulletinViewControllerView
_transitionToBulletinViewControllerView:animated:
insertAppropriateViewWithContent
setTableViewFrame:
canRemoveViewOnDismissal:
notificationCenterTableViewController:insertionAnimationForRow:inSection:
notificationCenterTableViewController:removalAnimationForRow:inSection:
notificationCenterTableViewController:replacementAnimationForRow:inSection:
layoutModeForNotificationCenterTableViewController:
sizeObservingView:didChangeSize:
scrollsToTop
reloadSortOrder
setBulletinActionHandler:
_ncTableViewController
_contentUnavailableView
_columnViewControllerFlags
_contentProvidingView
_requestHandlingEnabled
_bulletinActionHandler
notificationRequestWithCardItem:
postNotificationWithRequest:
modifyNotificationWithRequest:
withdrawNotificationWithRequest:
initWithDispatcher:
postNotificationRequestForCardItem:
modifyNotificationRequestForCardItem:
withdrawNotificationRequestForCardItem:
shouldConfigureDependencies
systemGestureManager
setSystemGestureManager:
initialButtonDownGestureRecognizer
setInitialButtonDownGestureRecognizer:
initialButtonUpGestureRecognizer
setInitialButtonUpGestureRecognizer:
singlePressUpGestureRecognizer
setSinglePressUpGestureRecognizer:
acceleratedSinglePressUpGestureRecognizer
setAcceleratedSinglePressUpGestureRecognizer:
longPressGestureRecognizer
setLongPressGestureRecognizer:
doublePressDownGestureRecognizer
setDoublePressDownGestureRecognizer:
doublePressUpGestureRecognizer
setDoublePressUpGestureRecognizer:
triplePressUpGestureRecognizer
setTriplePressUpGestureRecognizer:
doubleTapUpGestureRecognizer
setDoubleTapUpGestureRecognizer:
_systemGestureManager
_initialButtonDownGestureRecognizer
_initialButtonUpGestureRecognizer
_singlePressUpGestureRecognizer
_acceleratedSinglePressUpGestureRecognizer
_longPressGestureRecognizer
_doublePressDownGestureRecognizer
_doublePressUpGestureRecognizer
_triplePressUpGestureRecognizer
_doubleTapUpGestureRecognizer
initWithScreenshotGestureRecognizer:buttonActions:gestureRecognizerConfiguration:
_createGestureRecognizersWithConfiguration:
_reconfigureHomeButton
_startObservingReconfigurationTriggers
acquireFingerDetectionWantedAssertionForReason:
observeDefaults:onQueue:withBlock:
_setFingerDetectionEnabled:
_axHomeButtonPrefsDidChange:
disableHomeButtonDoublePress
disableHomeButton
_reconfigureGestureRecognizersForNewMaximumTapCount:oldMaximumTapCount:
_reconfigureGestureRecognizersForNewMaximumPressCount:oldMaximumPressCount:
definitionForHomeButton
setMaximumPressCount:
setMaximumTapCount:
setMinimumLongPressTimeInterval:
setMaximumLongPressTimeInterval:
setMinimumMultiplePressTimeInterval:
setMaximumMultiplePressTimeInterval:
homeButtonHapticType
setStackshotType:
setScreenshotType:
setButtonDefinition:
applyDefinitions:
initialButtonDown:
setClickCount:
setRecognizesOnPressPhaseBegan:
initialButtonUp:
singlePressUp:
acceleratedSinglePressUp:
longPress:
doublePressDown:
doublePressUp:
triplePressUp:
doubleTapUp:
setAllowedPressTypes:
screenshotRecognizerDidRecognize:
gestureRecognizerConfiguration
cancelLongPress
setHomeButtonHapticType:
buttonDefinition
maximumPressCount
maximumMultiplePressTimeInterval
_isCurrentlyTransitioning
_transitioningFromLayoutState
isPluginVisible
isVoiceControlVisible
pendingRestartTransitionRequest
_acceleratedSinglePressRecognizerShouldBegin
_isMenuDoublePressAllowed:
numberWithUnsignedLongLong:
_terminateHomeButtonEventAtCount:
_singlePressUp:
_cancelGestureRecognizer:
_processDoubleDownAndDoubleUpSimultaneously
setLongPressDuration:
_isMenuDoublePressDisabled
_siriHomeButtonPrefsDidChange:
setGestureRecognizerConfiguration:
maximumTapCount
longPressDurationOverride
setLongPressDurationOverride:
longPressDidOccur
setLongPressDidOccur:
emulatedPerSenderDownCount
setEmulatedPerSenderDownCount:
_fingerDetectEnabledAssertion
_hintSuppressionAssertions
_longPressDidOccur
_gestureRecognizerConfiguration
_maximumPressCount
_maximumTapCount
_longPressDurationOverride
_emulatedPerSenderDownCount
_buttonDefinition
initWithTransitionContextProvider:options:
_recentsFromPrefs
_displayItemRolesFromPrefsForLoadedDisplayItems:
clearLegacyDefaults
_saveRecents
_warmUpRecentIcons
appSwitcherDefaults
initWithUserDefaults:andIconController:andApplicationController:
_registerApplicationNotificationObservers
setRecentDisplayItems:
setRecentDisplayItemRoles:
legacyRecentApplications
recentDisplayItems
_recentsFromLegacyPrefs
recentDisplayItemRoles
initWithObjects:forKeys:
_warmUpIconForDisplayItem:
_layoutElementForApplication:
_applicationActivationStateDidChange:withLockScreenViewController:andLayoutElement:
_applicationLayoutRoleChanged:
_addApplicationToFront:role:
_displayItemForApplication:
addToFront:role:
_pruneRoles
displayItemsForAppsOfRoles:
_recentDisplayItems
_recentDisplayItemsForCommandTab
_displayItemsToRoles
_iconController
_applicationController
_applicationActivationStateDidChangeObserver
_applicationLayoutRoleChangedNotificationObserver
_addObservers
_stopUpdateTimer
isSubtitleHidden
setSubtitleHidden:
_updateLegibilityStrength
initForDashBoard:withFrame:
_startUpdateTimer
_updateFormat
_setDisablesUpdates:
setTimeLegibilityStrength:
setSubtitleLegibilityStrength:
_backlightChanged
_updateView
updateFormat
stopMinuteUpdatesForToken:
startMinuteUpdatesWithHandler:
_timerToken
_disablesUpdates
_setupAndAddFakeStatusBarIfNecessary
_stepperForTransition:
_completionForTransition:
performTransition:withAnimator:
initWithLockScreenViewController:
setViewToClip:
performTransition:duration:delay:completion:
cleanupIfNecessary
viewToClip
cleanupManually
setCleanupManually:
wantsFakeStatusBar
setWantsFakeStatusBar:
shouldSlideLockScreenView
setShouldSlideLockScreenView:
hidesSpringBoardStatusBarInitially
setHidesSpringBoardStatusBarInitially:
_lockscreenVC
_viewToClip
_statusBarContainer
_wantsFakeStatusBar
_shouldSlideLockScreenView
_cleanupManually
_needsCleanup
_hidesSpringBoardStatusBarInitially
request
setEntity:forKey:
entityForKey:
entityForIdentifier:
previousEntities
setPreviousEntity:forKey:
previousEntityForKey:
previousEntityForIdentifier:
_isFinalized
_entities
_previousEntities
_layoutState
_previousLayoutState
_animationDisabled
_request
_updateLockedImage
setLocked:
_locked
locked
expirationDate
_expirationDate
unlocksScreen
_batteryLevel
_accessoryName
transitionSupportsCancelling
_pastPointOfNoReturn
isPastPointOfNoReturn
convertRect:toLayer:
_configureFolderIconsForAnimation:
primaryLayoutElementController
transitioningIcon
primaryAppView
_configureAppView:forZoomDirection:
addTransitionContinuation:
disableHostingForReason:
contextHostRequester
enableHostingForRequester:orderFront:
_showsLiveContentASAP
sb_hostWrapperForUseInWindow:hostRequester:enable:orderFront:
configureLabelAccessoryViewsForAnimation:
setTransitioningIcon:
_transitioningIcon
_transitioningAppView
_hiddenTargetIconImageView
_sceneLayoutWindowHostWrapper
_wallpaperEffectViewWrapper
_disableHomeScreenWindowHostingAssertion
_homeScreenTransitionCompletion
_homeScreenTransitionFinishedCancelled
_attemptingCrossfade
_tintViewBackgroundColorAtFullAlpha
_hasLowQualityBackground
_updateForHavingLowQualityBackground:
folderBackgroundSize
cornerRadiusToInsetContent
_setContinuousCornerRadius:
_folderSettings
_continuousCornerRadius
_overlayToDismissForOptions:
isShowingBanner
dismissAnimated:withAdditionalAnimations:completion:
transitionAnimationDuration
willDismissOverlaysForDismissOptions:
dismissOptions
_dismissOptions
_handleLongPressGesture:
_handlePressDownGesture:
_handleTapGesture:
iconViewMapForSwitcherPageView:
_configureAppIconAsOverlayIfNecessary
_removeAppIconAsOverlayIfNecessary
iconModel
initWithFrame:icon:viewMap:
overlayViewTransformForPageView:
_squishAfterDelay:
selectedPageView:
_unsquishAfterDelay:
canSelectPageView:numberOfTaps:
_animateUsingDefaultDampedSpringWithDelay:initialSpringVelocity:options:animations:completion:
shouldShowAppIconAsOverlay
setShouldShowAppIconAsOverlay:
_shouldShowAppIconAsOverlay
_isShowingAppIconAsOverlay
_isActivating
_iconViewMap
_iconViewSetAsOverlay
formattedFaceTimeDestinationAccount
initWithBacklightController:idleTimerDefaults:
_handleBacklightLevelChanged:
_reconsiderEnablement
_startObservingIfNecessary
_stopObservingIfNecessary
isWakeGestureAvailable
supportLiftToWake
_screenTurnedOff
_screenTurnedOn
startWakeGestureUpdates
stopWakeGestureUpdates
_sendTransitionToObservers:
_ignoredTransition:
wakeGestureManager:didUpdateWakeGesture:
_isObservingWakeGestureManager
_idleTimerDefaults
_setIdleTimerDefaults:
_wakeGestureManager
_wakeGestureState
_screenOn
_isEnabled
_observingCMWakeGestureManager
rotationDefaults
lastLockedOrientation
_updateLockStateWithOrientation:forceUpdateHID:changes:
setLastLockedOrientation:
_updateLockStateWithChanges:
lockOverrideEnabled
_addLockOverrideReason:orientation:force:
_removeLockOverrideReason:
_setupRunLoopObserverIfNecessaryForOrientation:andInitialLockState:
_handler_runLoopObserverDispose
enableLockOverrideForReason:suggestOrientation:
enableLockOverrideForReason:forceOrientation:
updateLockOverrideForCurrentDeviceOrientation
_userLockedOrientation
_previousLockedOrientation
_runLoopObserver
_lockOverrideReasons
_setupWallpaperView
_setupDateView
_setupStatusBar
_setupPageControl
_setupCallToActionLabel
_setupSlideToUnlockView
_setupCameraView
wallpaperThumbnailImage
resizableImageWithCapInsets:resizingMode:
dateWithTimeIntervalSinceReferenceDate:
setSnapshotOverridesWithTimeEnabled:
setHidesImage:
initWithSettings:strength:image:tintColor:
setVisible:animated:
_layoutWallpaperView
_layoutStatusBar
_layoutCallToActionLabel
_layoutCameraView
_baselineOffsetFromBottom
baselineOffset
suggestedFrameForCallToActionLabel:yOffset:inBounds:
initWithFrame:wallpaperController:
_slideToUnlockLegibilityLabel
_statusBar
_cameraView
_dashBoardPageControl
_callToActionLabel
_createOrUpdateTintedImageOrLayer
originalImage
contents
setContents:
filters
tintedImage
tintedLayer
setWantsTintedLayer:
setOriginalImage:
wantsTintedLayer
_tintedImage
_tintedLayer
_wantsTintedLayer
_originalImage
_tintColor
_plugIn
bundleWithURL:
objectForInfoDictionaryKey:
createSnapshotWithGroupID:
setContentType:
isFullScreen
compatibilityMode
removeIndex:
firstIndex
_currentDataStoreCandidate
_hasUnconsideredDataStores
deleteSourceWithBundleIdentifier:completion:
removeHistoryForGameWithBundleIdentifier:completionHandler:
enumerateIndexesUsingBlock:
dismissAlertDeletingData:
_relatedDataStores
_dataStoresToPurge
_deleteButtonIndex
canTransitionWithTranslation
referenceFrameForIdentifier:inLayoutState:
startTransitionPresenting:withRequest:
performPresentationAnimationForTransitionRequest:withCompletion:
initWithTransitionContextProvider:interactive:
endTransition:withSuccess:completion:
_isInteractive
initWithTimers:
initWithTimers:copy:
initWithArray:copyItems:
isTimerCurrent:
compoundTimer:willMoveFromIndex:toIndex:
compoundTimer:didMoveFromIndex:toIndex:
_timers
_currentTimerIdx
coordinateSpaceForInterfaceOrientation:withReferenceBounds:
sharedRequester
_layoutStateClass
initialLayoutState
setSceneContainerView:
sceneContainerView
_transitioningLayoutElementControllers
viewControllerClass
_existingLayoutElementControllerWithElementIdentifier:
_dequeueLayoutElementControllerForReuseOfClass:
_addLayoutElementViewController:forLayoutElement:entity:
supportsReuse
_enqueueLayoutViewControllerForReuse:
initWithTransitionContextProvider:layoutController:animationSettings:animationBlock:
animationControllerForTransitionRequest:
coordinateSpaceForInterfaceOrientation:
_animationWrapperViewForElement:layoutState:
adornmentViewForApplication:inLayoutRole:withLayoutContext:
appViewForWorkspaceApplication:inLayoutState:
appViewForApplication:inLayoutRole:withLayoutContext:
_referenceSizeForRole:withLayoutContext:
coordinateSpaceForLayoutContext:
stringByReplacingOccurrencesOfString:withString:
referenceBoundsForEntity:inLayoutState:
setLayoutState:
_previousLayoutElementControllerWithElementIdentifier:
_addViewControllerForLayoutElement:entity:
willBeginTransitionToVisible:
_presentationChangesSignificantlyOnTransitioningFromLayoutElement:toLayoutElement:
_layoutElementViewController:transitioningFromLayoutElement:toLayoutElement:
_configureVisibilityForCurrentLayoutState
_doCommonCleanupUponEndingLayoutTransitionWithContext:
_cleanupDisappearedLayoutElementController:
_shouldRepositionViewAfterTransition:
_shouldAdjustViewAffordancesAfterTransition:
_dimmingLevelForElement:inLayout:
didEndTransitionToVisible:
_verifyLayoutElementControllersAreValidForCurrentLayoutState
_transitioningFromLayoutOrientation
_transitioningToLayoutOrientation
_shouldRotateToLayoutOrientation:
filteredSetUsingPredicate:
hasSameIdentityAsElement:
setReferenceFrame:
handleDimmingViewTapForLayoutElementViewController:
shouldAllowSwipeInDimmingViewAtStartLocation:forLayoutElementViewController:
layoutElementViewController:configureDisplayLayoutElement:
layoutElementControllers
hasVisibleElements
_placeAppViewControllersInDisplayMode:options:withAnimationFactory:completion:
shouldPerformFullscreenAnimationForTransitionRequest:
animationControllerForRotatingWithTransitionRequest:
composedAnimationControllerForDosidoWithTransitionRequest:using:
animationWrapperViewForLayoutState:roleMask:
appViewForWorkspaceApplication:
__testCoordinateSpaceStuff
referenceBoundsForEntity:
referenceBoundsForIdentifier:inLayoutState:
referenceFrameForEntity:
_transitioningToLayoutState
_updateLayoutStateWithContext:
_isCurrentlyRotating
_layoutOrientationForInterfaceOrientation:
isUserResizing
setUserResizing:
_layoutElementControllersByRole
_previousLayoutElementControllersByRole
_reusableLayoutElementControllers
_homescreenLayoutElement
_userResizing
_sceneContainerView
_updateSceneLayoutView
viewControllerForKey:
isHomeScreenEntity
_sceneLayoutView
_primaryAppView
_leafIcon
imageOrientation
countedMapKey
_countedMapKey
viewOfClass:
recycleView:
_pluginNeedsOverlay:
_newOverlayView
canReinitiateActivation
customerServicePhoneNumber
_showRetryButton
_showSupportNumber
_visibleIdentifiersChanged:
_iconStateDisplayIdentifiersLock
_iconStateDisplayIdentifiers
_noteEnteredNode
_noteExitedNode
initWithObjects:count:
_iconSource
_pushFolder:
_currentFolder
_popFolder
_currentParseDepth
_noteRepresentationIsCorrupted
_noteSignificantDeviation
_isNodeIdentifierAlreadyUnarchived:
_noteNodeIdentifierWasUnarchived:
_setIconSource:
_setRootFolder:
_setMetadata:
_folderStack
_parseDepth
_nodeIdentifiersUnarchived
_corrupted
_dirty
_metadata
_representationForNode:inModel:
_nodeFromRepresentation:context:
_iTunesIconListForList:preApex:pending:iconSource:
_iTunesIconListsForLists:preApex:pending:iconSource:
rowCount
columnCount
hiddenBundleIdentifiers
showsOEMIcon
_modernIconListsForLists:allowFolders:
_modernIconListForList:allowFolders:
_addLeafNodesForNode:toSet:
_pathForNode:toIdentifier:
_folderFromRepresentation:withContext:
_newFolderIconForFolder:
_representationForFolder:inModel:
_representationForIcon:inModel:
_iconFromRepresentation:withContext:
_folderClassForFolderType:context:
_listFromRepresentation:withMaxIconCount:context:overflow:
_folderTypeForFolder:
_representationForList:inModel:
_migrateLeafIdentifierIfNecessary:
_modernIconCellForCell:allowFolders:
_iTunesIconCellForCell:preApex:pending:iconSource:
_iTunesDictionaryForLeafIcon:withIdentifier:
_iTunesDictionaryForDownloadingIcon:
_iTunesDictionaryForLeafIdentifier:
relativePath
iconImagePath
initWithTimeIntervalSinceReferenceDate:
carKitRepresentationFromRootArchive:iconSource:
rootArchiveFromCarKitRepresentation:iconSource:
_dashBoardMainPageView
_updateCallToActionTextAnimated:
shakeCallToActionWithCompletion:
_addCallToAction
_addSlideUpAppGrabberView
initWithMediaController:
_addOrRemoveViewsAsAppropriate
kitPresentedViewController
updateForLegibilitySettings:
setFakeWallpaperVisible:
cancelFadeInTimerIfNecessary
_updateMediaControlsVisibility
_addOrRemoveNotificationsListIfNecessaryAnimated:
setCallToActionLabel:
setSlideUpAppGrabberView:
presentContentViewController:animated:
isLogoutSupported
button
setSlideUpAppGrabberViewVisible:
_addOrRemoveUserPictureViewController
_addOrRemoveLogoutButtonViewController
_addStatusTextViewControllerIfNecessary
_updateSlideUpGrabberViewVisibilityIfNecesary
viewControllers
presentContentViewControllers:animated:completion:
dismissContentViewControllers:animated:completion:
nowPlayingController:didChangeToState:
notificationListViewController:hasContent:
useFakeBlur
_nowPlayingController
_nowPlayingState
_userPictureViewController
_notificationViewController
_logoutButtonViewController
_authenticatedSinceFingerOn
_cachedMesaFailureText
_temporaryMesaFailureTextActive
_useFakeBlur
_actuallyAnimateTransition
_cleanupAfterAnimating
initWithCoordinatingChildTransaction:schedulingPolicy:
coordinatingChildTransaction
schedulingPolicy
_coordinatingChildTransaction
_schedulingPolicy
__animationShouldStart
setAnimationTransactionCompletion:
__startAnimation
setDebugName:
__reportAnimationCompletion
__cleanupAnimation
supportsCancelling
_enumerateCoordinatingAnimationsWithSchedulingPolicy:block:
transitionSupportsRestarting
hasStarted
removeChildTransaction:
_setAnimationState:
_abortAnimation
noteActivationStateChanged:
initWithApplication:manualListener:
coordinatingAnimationControllers
_enumerateCoordinatingChildRelationshipsWithBlock:
_willAnimate
__alertItemsController
_enumerateObserversWithBlock:
__waitForAppActivationTransactionForApplication:
_addDebugLogCategory:
__wantsInitialProgressStateChange
_willBeginWaitingForStartDependencies
animationTransaction
notifyObserversTransaction
cleanupTransaction
_applicationActivationStateDidChange
_willComplete
__abortAnimation
_notifyObserversOfAnimationCompletion
_isNullAnimation
_enumerateCoordinatingAnimationsWithBlock:
initWithAnimationController:stepper:
initWithAnimationController:
__noteAnimationDidTerminate
animationTransactionCompletion
animating
addSteppedCoordinatingChildAnimation:
delayCleanupUntilTransactionFinishes:
stopDelayingCleanupForTransaction:
delayAnimationUntilTransactionFinishes:
stopDelayingAnimationForTransaction:
setTransitionContextProvider:
needsCATransactionActivate
setNeedsCATransactionActivate:
_transitionContextProvider
_animationTransaction
_notifyObserversTransaction
_cleanupTransaction
_progressDependencies
_waitForActivationDependencies
_coordinatingChildRelationships
_steppedCoordinatingChildAnimations
_transitionWindow
_transitionContainer
_didPostBeginAnimationNotification
_didNotifyObserversOfCompletion
_needsCATransactionActivate
_animationTransactionCompletion
initWithActivatingApp:deactivatingApp:
setActivatingApp:
setDeactivatingApp:
_activatingApp
_deactivatingApp
initWithIconImageCache:
configuration
initWithConfiguration:delegate:
_iconControllerForVehicleId:
exportIconStateForCarKit
resetIconModelState
iconImageCache
_applicationIconImageForBundleIdentifier:format:
visibleRow
gridImage
folderIcon
numberOfRows
firstVisibleMiniIconIndex
firstVisibleRowForGap
setGridImage:
setVisibleRow:
pageIndex
setPageIndex:
setFolderIcon:
_gridImage
_visibleRow
_pageIndex
_folderIcon
reposition
sizeForNumberOfRows:
setElement:
positionAtRow:
_element
initWithDefaultSize
_updateRasterization
_updateAccessibilityBackgroundContrast
_setPageElements:
scrollToTopOfFirstPageAnimated:
setBackgroundAndIconGridImageAlpha:
setBackgroundScale:
_interiorGridSizeClipRect
_interPageSpacing
scrollToTopOfPage:animated:
_performScrollingMovingToLeft:movingToRight:targetPageIndex:targetPageScrollRow:newLeftElement:newRightElement:animated:
_currentPageElement
visibleMiniIconCount
frameForMiniIconAtIndexPath:
setWallpaperRelativeCenter:
setSuppressesExternalUpdates:
_setAnimating:
setFloatyFolderCrossfadeFraction:
_showLeftMinigrid
_showRightMinigrid
updateImageAnimated:
setIcon:location:animated:
cellSpacing
_setupGridViewsInDefaultConfiguration
blurryBackgroundViewDidChangeWhetherBlurring:
contentsImage
_generateSquareContentsImage
darkeningOverlayImage
snapshot
scrollToGapOrTopIfFullOfPage:animated:
visibleMiniIconListIndex
centerVisibleMiniIconIndex
lastVisibleMiniIconIndex
visibleImageRelativeFrameForMiniIconAtIndex:
setIconGridImageAlpha:
setSuppressesBlurryBackgroundChanges:
prepareToCrossfadeWithFloatyFolderView:allowFolderInteraction:
cleanupAfterFloatyFolderCrossfade
_accessibilityBackgroundView
_pageGridContainer
_leftWrapperView
_rightWrapperView
_pageElements
_currentPageIndex
_crossfadeFolderView
_crossfadeScalingView
_bezierPathWithArcRoundedRect:cornerRadius:
snapshotAsynchronously:withImageBlock:
sb_snapshotImage
snapshotWithImageBlock:
_pluginDidLoad:
isLoaded
bundlePath
_pluginWillUnload:
unload
loadedUIPlugins
_loadedUIPluginHostsVisible:
loadedUIPluginHosts
pluginHandledButtonTapEventFromSource:
setHostPendingActivation:
hostPendingActivation
cancelPendingPluginActivationEvent:
pluginWantsInterfaceOrientation:
pluginSuppressesNotifications
defaultLockScreenDimInterval
pluginWantsScreenDimInterval:
loadUIPluginNamed:withHost:
unloadUIPlugin:forHost:
overrideInterfaceOrientation:
suppressingNotifications
overrideScreenDimInterval:
_uiPlugins
_pendingActivation
_hostPendingActivation
notificationRequestWithRequestDestination:
setContent:
notificationRequestForBannerWithIcon
presentedBanner
_presentedLongLookViewController
presentLongLookAnimated:completion:
_postNotificationRequest:forCoalescedNotification:completion:
dismissPresentedViewControllerAndClearNotification:animated:completion:
_runLongLookDismissalTestAndClearNotifications:withBeginBlock:completion:
initWithViewController:
_pluginViewDidAnimatedIn:
_pluginViewAnimatedOut:
_updateForTransparentDismiss:
allowSuspension
allowStackingOfAlert:
viewIsReadyToBeRemoved
viewWillAnimateOut
animateViewOut
viewAnimatedOut
prepareViewToAnimateIn
animateViewIn
viewWillAnimateIn
updateSpringBoardInPreparationForTransparentDismiss
alertAdapterDisplayDidDisappear:
didFinishLaunchingFrontmost
initWithAlertController:
setAnimationStartTime:
methodSignatureForSelector:
invocationWithMethodSignature:
setTarget:
setSelector:
setArgument:atIndex:
retainArguments
setPendingDeactivationInvocation:
_animationDelayForOthersActivation
activateAlertForController:animated:animateCurrentDisplayOut:withDelay:isSlidingDisplay:
deactivateAlertForController:animated:animateOldDisplayInWithStyle:isSlidingDisplay:
_adapterForController:
prepareViewToAnimateOut
setViewShouldAnimateIn:
_animatingDeactivation
_animatingActivation
actionBlocks
setActionBlocks:
_performQueueNestCount
_actionBlocks
initWithLayerDictionary:
initWithLayers:
initWithLayer:
referencedAssetURLs
propertyListRepresentation
specificationWithLayers:
initWithPropertyListData:
allAssetURLs
_layers
colorWithHue:saturation:brightness:alpha:
colorForLayerDictionary:
layerWithColor:
_color
imageURLForLayerDictionary:
sizingModeForLayerDictionary:
initWithImageURL:sizingMode:
imageURL
sizingMode
layerWithImageURL:sizingMode:
_imageURL
_sizingMode
shouldAnimateIconsIn
_revealedContentBeneathForDismiss
_animatingOut
_vibrantDarkFillDodgeColor
layerWithVibrantColor:tintColor:filterType:filterAttributes:
configWithContentConfig:
effectConfig
lockScreenActionContextForBulletin:action:origin:pluginActionsAllowed:context:completion:
alternateAction
actionBlockForAction:withOrigin:context:
unlockActionLabel
fullUnlockActionLabel
preservesUnlockActionCase
initWithLockLabel:shortLockLabel:action:identifier:
canBypassPinLock
setCanBypassPinLock:
setDeactivateAwayController:
setRequiresUIUnlock:
setRequiresAuthentication:
setBulletin:
contactlessInterfaceCanBePresentedFromSource:
presentContactlessInterfaceForPassWithUniqueIdentifier:fromSource:completion:
bundleName
contextWithName:
requiresPasscode
urlForClockAppSection:
isApplicationAction
setLockLabel:
setAction:
isEmergencyDialerAction
isCallAction
isInCallAction
lockScreenActionContextForFullScreenBulletinViewController:
lockScreenActionContextForAlertItem:
lockScreenActionContextForCardItem:
lockScreenActionContextForSnoozedAlarmItem:
lockScreenActionContextForWidgetRequest:
lockScreenActionContextForContinuityApp:withUniqueIdentifier:andActivityTypeIdentifier:appSuggestion:
lockScreenActionContextForPlugin:
updateOrientationForUndim
isAuthenticatedCached
deviceIsPasscodeLocked
limitFeaturesForRemoteLock
deviceIsLocked
_openApplication:withURL:fromSource:animated:options:
canLaunchFromSource:withURL:bundleID:
_safeValue:forKey:ofType:
_cleanupFromBannerLaunch
_launchFromSource:withURL:bundleID:allowUnlock:animate:
_updateAppearance
lockAndDimDeviceDisconnectingCallIfNecessary:andDimScreen:
idleTimerDisabledReasons
activateRemoteAlertService:options:activationHandler:deactivationHandler:
updateInterfaceOrientationIfNecessary
foregroundDisplayID
localizedDisplayNameForDisplayID:
isApplicationForegroundObscured:
applicationInstalledForDisplayID:
deviceIsPasscodeLockedRemotely
deviceIsBlocked
deviceIsTethered
lockScreenIsShowing
networkUsageTypeForAppWithDisplayID:
springBoardIsActive
alertIsActive
canUserLaunchIcon
openURL:allowUnlock:animated:
launchApplicationFromSource:withDisplayID:options:
launchApplicationFromSource:withURL:options:
isApplicationRestrictedOrHidden:
launchFromSource:withURL:bundleID:allowUnlock:
canLaunchFromAwayViewPluginWithURL:bundleID:
launchFromAwayViewPluginWithURL:bundleID:allowUnlock:animate:
adjustLockScreenContentByOffset:forAwayViewPlugin:withAnimationDuration:
updateCustomSubtitleTextForAwayViewPlugin:
updateLockScreenInterfaceIfNecessary
undimScreen
lockAndDimDevice
lockAndDimDeviceDisconnectingCallIfNecessary:
isScreenOn
setBadgeNumberOrString:forApplicationWithID:
modalBulletinAlertHandlerRegistry
activateModalBulletinAlert:
addActiveInterfaceOrientationObserver:
removeActiveInterfaceOrientationObserver:
notifyOnNextUserEvent
setMinimumBacklightLevel:animated:
activateRemoteAlertService:options:
isNamedRemoteAlertServiceActive:controllerClassName:
enableLockScreenBundleNamed:activationContext:
disableLockScreenBundleNamed:deactivationContext:
setWallpaperTunnelActive:forFullscreenAlertController:
topSuspendedEventsOnlyDisplayID
_modalAlertRegistry
initWithPoints:
_sortPoints:
_setPoints:
_updateProperties
pointCount
_pointAtIndex:
_isLeftHanded
_thumbIndex
_points
points
_centroid
enumeratePointsUsingBlock:
_pointAtIndex:ofPointArray:
_updateCentroid
_updateWeights
_updateWeightedCentroid
_setCentroid:
setObject:atIndexedSubscript:
_setWeights:
_weightAtIndex:
_setWeightedCentroid:
_applyTransform:
_baseOrientation
CGPointValue
distanceOfFarthestPointFromCentroid
_flipHorizontally
_scale:
_rotate:
_translate:
_meanFingertipRowAngle
_meanRadius
_weights
_weightedCentroid
_mutablePoints
setBool:forKey:
isBadgedForSoftwareUpdate
setBadgedForSoftwareUpdate:
matchesPolygon:matchTransformsAllowed:acceptanceFactor:outMorphedCandidate:
configureOverlayPropertiesForStyle:
setCharge:
initWithFrame:useWhiteLogo:
_adjustTitleVisibilityForInfoViews
_defaultAttributes
_setDefaultAttributes:
_toggleViewState
buddyView:didChangeToStyle:
_firstLineBaselineOffsetFromBoundsTop
setTitleString:
setTitleLanguage:
isFakeLogoHidden
underlayPropertiesFactory
activationInfoView
setInfoButton:
regulatoryInfoView
_logoView
_usesWhiteLogo
_viewState
_underlayPropertiesFactory
_activationInfoView
_infoButton
_regulatoryInfoView
timingFunctionForPushAndPop
setHitTestRegions:forDisplay:
_initWithBKSInterface:displayLayoutMonitor:
bs_CGRectValue
touchRegionBuffer
bs_valueWithCGRect:
_calculateTouchRegionsFromSceneRects:
initWithRect:
setExclusiveTouchNormalizedSubRect:
_calculateHitTestRegionsFromSceneRects:
_queue_handleHitTestRegionUpdate:forDisplay:
referenceFrame
_queue_handleDisplayLayoutUpdateWithSceneRects:forDisplay:
setDisplayLayoutMonitor:
displayLayoutMonitor
_queue_bksInterface
_queue_displayLayoutMonitor
_queue_hitTestRegions
isTransitional
properties
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
_components
_transitional
_backgroundColor
loggingTitle
supportsAlertController
radarURLs
setRadarURLs:
_radarURLs
supportsAdaptation
supportsBlueLightReduction
adaptationClient
getEnabled
getAdaptationMode
setWhitePointAdaptivityStyle:animationSettings:
setAdaptationMode:withPeriod:
setWeakestAdaptationModeFromArray:withLength:andPeriod:
animateFromWeakestAdaptationModeInArray:withLength:toWeakestInArray:withLength:withProgress:andPeriod:
isWhitePointAdaptationEnabled
setWhitePointAdaptationEnabled:
_client
_supportsWhitePointAdaptation
_supportsBlueLightReduction
getStrengths:nStrengths:
overrideStrengths:forModes:nModes:
_updateGeometry
_transformForContainerOrientation:contentOrientation:
contentViews
contentOrientation
containerOrientation
_transformedView
_contentOrientation
_containerOrientation
_sharedInstanceCreatingIfNeeded:
_lockStateChangedNotification:
_uiRelockedNotification:
setUILocked:
_handleShowControlCenterGesture:
initWithTarget:action:type:
setEdges:
controlCenterSettings
removeAllBehaviors
controlCenterWillPresent
controlCenterDidDismiss
_enumerateObservers:
controlCenterWillBeginTransition
controlCenterDidFinishTransition
_updateCoveredContentSnapshot
_clearCoveredContentSnapshot
dismissModalFullScreenIfNeeded
inGrabberOnlyMode
_ambiguousActivationMargin
contentHeightForOrientation:
_yValueForOpen
_yValueForClosed
_updateRevealPercentage:
setRevealPercentage:
distance
positionUpdated:
setPageControlAlpha:
_updateGrabberVisibility
platterContainer
revealPercentage
hideGrabberAnimated:
_showControlCenterGestureBeganWithGestureRecognizer:
_showControlCenterGestureChangedWithGestureRecognizer:
_showControlCenterGestureEndedWithGestureRecognizer:
_showControlCenterGestureCancelled
_showControlCenterGestureFailed
_shouldShowGrabberOnFirstSwipe
showGrabberAnimated:
_shouldUseControlCenterRevealConfirmation
_beginSystemGesturePresentationWithGestureRecognizer:
_setupViewForPresentation
_updateTransitionWithTouchLocation:velocity:
_hideGrabberForSystemGesture
_endPresentation
_cancelTransition
_beginTransitionWithTouchLocation:
allowShowTransition
isPresented
_allowShowTransitionSystemGesture
initWithScreen:debugName:rootViewController:
swipePresentationConfiguration
edgeBehaviorWithCoordinateSpace:configuration:
setDistance:
setExtentBeyondDistance:
userInteractionStarted
_controlCenterWindow
setAlpha:forWindow:
configureForLightStyle
setAppliesOutputSettingsAutomatically:
setAppliesOutputSettingsAnimationDuration:
setPresented:
_revealSlidingViewToHeight:
_cleanupAnimator
setInGrabberOnlyMode:
_beginPresentation
_doSetupBeforeBeginTransition
_controlCenterHeightForTouchLocation:initialTouchLocation:
_setLockHUDHidden:
oldBounceFriction
lowerBoundary:ofType:
setAnimatingDynamically:
controlCenterWillFinishTransitionOpen:withDuration:
useNewBounce
dynamicsContainerView
initWithReferenceView:
_setAnimatorIntegralization:
_finishPresenting:completion:
initWithItems:
bounceResistance
setResistance:
bounceDensityFactor
setDensity:
setAllowsRotation:
addBehavior:
minVelocity
maxVelocity
_verticalPercentageMovedOnScreenForY:stopY:
initWithItems:mode:
setPushDirection:
attachmentThreshold
attachmentFrequencyAbove
attachmentFrequencyBelow
attachmentVelocityDamping
attachmentMinDamping
attachmentMaxDamping
removeBehavior:
initWithItem:attachedToAnchor:
setLength:
setFrequency:
_newDynamicAnimationForShow:currentValue:velocity:unitSize:
userInteractionCancelled
_resetPanTransitionState
_presentWithDuration:completion:
isFullyRevealed
_dismissWithDuration:additionalAnimations:completion:
setFullyRevealed:
hideGrabberAnimated:completion:
requiresGrabberForControlCenterGesture
controlCenterRevealMode
_hidGrabberForSystemGesture
_updateShouldShowGrabberOnFirstSwipe
allowShowTransitionSystemGesture
isLocationWithinGrabberActiveZone
userInteractionEnded
_endTransitionWithVelocity:completion:
appliesOutputSettingsAutomatically
outputSettings
colorSettings
setColorSettings:
computeOutputSettingsUsingModel:
applySettings:
noninteractiveDismissDuration
notifyControlCenterControl:didActivate:
controlCenterViewControllerWantsDismissal:
controlCenterViewControllerWantsDismissal:animated:completion:
controlCenterViewController:canHandleGestureRecognizer:
controlCenterViewController:handleTap:
controlCenterViewController:handlePan:
controlCenterViewController:backdropViewDidUpdate:
controlCenterSystemAgentForControlCenterViewController:
preventDismissalOnLock:forReason:
allowHideTransition
beginTransitionWithTouchLocation:
endTransitionWithVelocity:completion:
setAmbiguousActivationMargin:
setFeedbackBehavior:
_rootView
_coveredContentSnapshot
_fullScreenGrabberContainer
_fullScreenGrabberBackdrop
_fullScreenChevron
_controlCenterGestureRecognizer
_controlCenterGestureStartTime
_systemAgent
_preventDismissalOnLockReasons
_uiLocked
_animatingInitialSwipe
_inPresentationPan
_inDismissalPan
_panInitialTouchLocation
_dismissalPanHasGoneBelowCCTopEdge
_gotFirstBackdropUpdate
_bounceAnimation
_animator
_animatorStopCount
_animatorStopFrame
_presented
_inGrabberOnlyMode
_fullyRevealed
_feedbackBehavior
setSpeed:
setTimeOffset:
_adjustDurationForLongestAnimation
animationForKey:
_makeSubviewTree:fromView:
animationKeys
removeAnimationForKey:
_checkForCompletion
_displayLinkFiredForBackwardToStart:
_setStepPercentage:
timeOffset
isRemovedOnCompletion
sb_removeAnimationsIncludingSubviews:predicate:
_updateAnimationSteppingTarget:
views
appendArraySection:withName:skipIfEmpty:objectTransformer:
_interruptFinish
_displayLinkFired:
finishSpeed
setFinishSpeed:
_views
_finishedAnimatingViews
_percentage
_completed
_finishingForward
_finishingBackward
_animatingToStepPercent
_animatedSteppingTimestamp
_animatedSteppingStartPercent
_animatedSteppingTargetPercent
_finishBackwardTimestamp
_finishBackwardDuration
_finishBackwardPercentage
_beganFinishingTimestamp
_finishSpeed
_realActivatingEntity
activatingEntity
_lockedInterfaceOrientation
setPreferredInterfaceOrientation:onDisplay:
UIActionType
sceneIdentifierForApplication:
ignoreOcclusionReasons
setDeviceOrientationEventsEnabled:
relativeString
setPayload:
setShouldTakeKeyboardFocus:
_watchdogScaleFactorForApplication:
setWatchdogScaleFactor:
setUserLaunchEventTime:
setForTesting:
setEnvironment:
setWaitForDebugger:
setDisableASLR:
setCheckForLeaks:
setArguments:
setStandardOutputURL:
setStandardErrorURL:
setLaunchIntent:
stringForInterfaceOrientation:
isPictureInPictureWindowVisible
hasSentActivationResult
setApplication:forLayoutRole:
setPreviousEntity:forLayoutRole:
applicationForBundleID:
previousApplicationForBundleID:
sceneSettingsForApplication:
sceneTransitionContextForApplication:
sceneClientSettingsForApplication:withSceneSettings:
executionContextForApplication:
fencesAnimations
setFencesAnimations:
alwaysRunsWatchdog
setAlwaysRunsWatchdog:
waitsForSceneUpdates
resultBlock
preferredInterfaceOrientation
setPreferredInterfaceOrientation:
_resultBlock
_background
_fencesAnimations
_alwaysRunsWatchdog
_waitsForSceneUpdates
_sentActivationResult
_preferredInterfaceOrientation
setTopAngle:
setBottomAngle:
_topAngle
_bottomAngle
_rectForLayoutMetric:
setExclusiveTouch:
setLabelHidden:
defaultConfiguration
impactBehaviorWithCoordinateSpace:configuration:
cancelLongPressTimer
_updateJitter
_updateIconImageViewAnimated:
_updateLabelAccessoryView
_updateLabel
_updateProgressAnimated:
_updateAccessoryViewWithAnimation:
_setIcon:animated:
iconViewDidChangeLocation:
setIconImageAlpha:
setIconAccessoryAlpha:
_applyIconImageAlpha:
_applyIconAccessoryAlpha:
setProgressAlpha:
_applyIconLabelAlpha:
_setCornerRadius:
_labelHeight
_defaultIconFormat
_frameForImageView
_frameForLabel
_frameForLabelAccessoryViewWithLabelFrame:
_frameForAccessoryView
_centerForCloseBox
_labelVerticalOffset
maxSizeOffset
labelAccessoryViewSizeForType:
labelAccessoryViewRightMargin
_centerForCloseBoxRelativeToVisibleImageFrame:
_updateAdaptiveColors
setIcon:forLocation:
setIconView:
setAccessibilityIncreaseContrastEnabled:
buildParameters
_labelImageParameters
_legibilitySettingsWithParameters:
_legibilitySettingsWithStyle:primaryColor:
shadowColor
initWithStyle:primaryColor:secondaryColor:shadowColor:
viewForLabelAccessoryType:
canShowLabelAccessoryView
_configureLabelAccessoryViewForType:
iconImageViewClassForLocation:
recycleIconImageView:
dequeueRecycledIconImageViewOfClass:
_createAccessoryViewIfNecessary
_updateBrightness
setAdditive:
setValues:
setFrameInterval:
setValueFunction:
suppressJitter
_jitterPositionAnimation
_jitterTransformAnimation
setPosition:
canReceiveGrabbedIcon
allTouches
prepareToCrossfadeImageWithView:crossfadeType:maskCorners:trueCrossfade:anchorPoint:
cleanupAfterCrossfade
activateWithCompletionBlock:
_handleSecondHalfLongPressTimer:
_delegateTouchEnded:
grabDurationForEvent:
_handleFirstHalfLongPressTimer:
_delegateTapAllowed
allowsTapWhileEditing
_applyEditingStateAnimated:
_updateCloseBoxAnimated:
_isShowingCloseBox
_closeBoxTapped
setProgressState:paused:percent:animated:
setShouldRasterizeImageView:
swapInIcon:
_frameForVisibleImage
_labelImage
_legibilitySettingsWithPrimaryColor:
shouldShowLabelAccessoryView
_automationID
pointMostlyInside:withEvent:
_recursiveNotifyInteractionTintColorDidChangeForReasons:
_recursivelyUpdateBackdropMaskFrames
prepareToCrossfadeImageWithView:crossfadeType:maskCorners:trueCrossfade:
setTouchDownInIcon:
snapshotEdgeInsets
currentLabelAccessoryType
contentType
iconAccessoryAlpha
iconLabelAlpha
_currentImageView
_accessoryView
_closeBox
_closeBoxParallaxSettings
_wallpaperRelativeCloseBoxCenter
_labelView
_labelAccessoryView
_currentLabelAccessoryType
_dropGlow
_drawsLabel
_isPaused
_isGrabbed
_isOverlapping
_refusesRecipientStatus
_highlighted
_launchDisabled
_isJittering
_allowJitter
_touchDownInIcon
_hideLabel
_hideLabelAccessoryView
_unjitterPoint
_grabPoint
_longPressTimer
_longPressGrabDuration
_visibleImageRect
_contentType
_iconImageAlpha
_iconAccessoryAlpha
_iconLabelAlpha
_appIconForceTouchGestureRecognizer
_wallpaperRelativeImageCenter
blurryCloseBoxes
setWantsBlurEvaluator:
_whiteTintView
_xColorBurnView
_xPlusDView
_colorSettings
_wallpaperRelativeCenter
_animatorIsInteractive
_interactorSupportsRestarting
_animatorSupportsRestarting
_startInteractiveTransition
_updateTransitionAnimationFactoryAndOptions
transitionAnimationOptions
_runAlongsideAnimationBlocksWithFactory:options:
_runAlongsideAnimationBlocksInEnclosingAnimationContext
_interactiveAnimator
completionVelocity
_runInteractionEndedHandlers
_acquireTransitionCompletion
_completeTransitionIfPossible
_reversibleAnimator
_animatorIsReversible
_completeTransition
_objectSupportsRestarting:
animateWithFactory:options:actions:
wantsAnimation
pauseInteractiveTransition
viewForKey:
targetTransform
requiresCancellableAnimations
requiresInteractiveAnimations
requiresRestartableAnimations
animateAlongsideTransitionInView:animation:completion:
notifyWhenInteractionEndsUsingBlock:
notifyWhenInteractionChangesUsingBlock:
interactor
setTargetTransform:
_targetTransform
_viewControllersByKey
_viewsByKey
_initialFramesByViewController
_finalFramesByViewController
_transitionStarted
_transitionFinished
_transitionIsCancelled
_transitionWasEverCancelled
_transitionBeganInteractively
_transitionWasInteractive
_wantsAnimation
_transitionDidBeginCalled
_transitionPercentComplete
_transitionAnimationOptions
_transitionAnimationFactory
_interactor
_alongsideAnimations
_alongsideCompletions
_alongsideInteractionEndedHandlers
_alongsideAnimationViews
_transitionContinuations
_outstandingClientCompletionCount
_layoutTransition
hasObserver:
shouldWarmUp
matchesEntity:
badgeValue
_badgeNumberOrString
_cachedIconImages
_parentNode
_iconImagesMemoryPool
slotLength
sbf_memoryMappedImageWithPool:
_iconImageOfSize:scale:failGracefully:drawing:
_initWithElements:interfaceOrientation:
_defaultOrientation
_folderIconImageView
matchBackgroundWallpaperCenterToFolderIconView:
setTapDuration:
tapDuration
createWithDuration:delay:
_tapDuration
setDoubleTapOnMenuDown:
doubleTapOnMenuDown
_doubleTapOnMenuDown
_deactivateEmergencyDialerController
_activateEmergencyDialerController
_updateEmergencyCallMode:
activateWithCompletion:
anyCallPassesTest:
isEmergencyCallbackModeEnabled
emergencyDialer:willDeactivateWithError:
_callCenter
_inEmergencyCall
_inEmergencyCallMode
_modelWillRemoveIcon:
_modelWillReloadIcons
_modelWillLayoutIconState
_modelDidLayoutIconState
recycleAndPurgeAll
_iconViewForIcon:
_addIconView:forIcon:
checkinValues:
_recycleIconView:
purgeViewsForClass:
_cacheImagesForIcon:
_cacheLabelImagesForIcon:location:
_cacheAccessoryImagesForIcon:location:
setIconViewClass:
setIconViewDelegate:
_observeIconAndCacheIfNecessary:
recycledViewsContainer
weakToStrongObjectsMapTable
newViewOfClass:
recycleIconView:
purgeRecycledIconViewsForClass:
_iconViewsForIcons
_viewDelegate
_labelsForIcons
_lightLegibilityImagesForIcons
_darkLegibilityImagesForIcons
_accessoryImagesForIcons
shouldThrottleContentNotificationOnDate:withLastCount:onDay:
isNewsstandApplication
supportsNewsstandContentBackgroundMode
_supportsNewsstandContentBackgroundMode
_newsstandWakes
initWithAlert:
initWithDisplayChangeSettings:
succinctDescriptionForObject:
alertClass
_generator
isAlertEntity
_doIt
_doWork
_synchronizationDelegate
initWithSettings:strength:
_updateTextViewsIfNecessary
systemLayoutSizeFittingSize:
_spacingBetweenNonLegalLabels
_updateTextViews
_updateInternalLegalLabel
_updateSupervisionLabel
_updateDeviceInformationLabel
_nonLegalLabelFontLeading
setLineSpacing:
_nonLegalTextParagraphSpacing
_lineHeightOfNonLegalLabels
internalLegalText
supervisionText
deviceInformationText
_strength
_internalLegalTextLabel
_deviceInformationLabel
_supervisionLabel
_transactionCount
_internalLegalText
_supervisionText
_deviceInformationText
dateByAddingTimeInterval:
_updateDisplayLink
_handleTimePassed
getHour:minute:second:nanosecond:fromDate:
_updateDisplayLinkFrameIntervalForSecondsPastMinute:
preferredFramesPerSecond
_minuteUpdateHandlers
_nextToken
_calendar
_lastHour
_lastMinute
initWithApplication:transitionRequest:
setShouldSendActivationResult:
addSynchronizedTransaction:
_synchronizedGroup
initWithConfiguration:delegate:iconImageCache:
iconsView
_rebuildIconStore
rebuildIconsAndLayout
resetCurrentIconState
exportStateForCarKit
_isCurrentlyConnected
setScreenBounds:
setShowsOEMIcon:
iconControllerShouldPersistIconsForFakeApps:
currentIndexPath
animationWindowForIconController:
handleBackPress
iconModelDidLayout
persistIconStateWithoutLayout
focusedView
containsView:
setNeedsFocusUpdate
_clearHighlightedIcon
badgesAppIcon
OEMIconLabel
OEMIcons
isPrerendered
pixelSize
imageWithData:scale:
performOperationForFakeIconWithDisplayID:
rootFolderController
_preferredFocusedItem
preferredFocusEnvironments
nextFocusedView
iconIsVisibleForLeafIdentifier:
scrollToIconListAtIndex:animated:completion:
didUpdateFocusInContext:withAnimationCoordinator:
fakeIconOperationController
setFakeIconOperationController:
_fakeIconOperationController
_iconLayoutOverrideStrategy
_loaded
_lastFocusedIndex
_cachedIconsPerHomeScreenPage
_reallySetState:forReason:
_invalidateMinimumTimer
_switchedFromState:toState:
_minimumTimerFired
homeButtonShowPasscodeRecognizerDidFailToRecognize:
homeButtonShowPasscodeRecognizerRequestsPasscodeUIToBeShown:
_simulateTimerFiring
_simplePublicDescription
_fingerWasOnInitially
_fingerHasLifted
_minimumTimer
_terminalStateReasoning
_initialLocation
contextId
inheritsSecurity
setInheritsSecurity:
setBiometricAutoUnlockingDisabled:forReason:
_setMesaEnabledForTransientAppearanceTransition:
settingsForPrivateStyle:graphicsQuality:
setScreenOn:
animateWithSettings:options:actions:completion:
passcodeViewControllerDidCancelPasscodeEntry:
sbf_dashBoardPresentationGraphicsQuality
_overrideBiometricMatchingEnabled:forReason:
passcodeViewControllerDidBeginPasscodeEntry:
passcodeViewController:didCompletePasscodeEntry:
initForMesaWithSource:successful:handler:
initForPasscode:source:handler:
initWithOptions:
_sustainGracePeriodAssertion
_sustainAuthenticationAssertion
_passcodeLockView
initWithConfiguration:layout:
_isLayoutBoundsOnly
strategyWithConfiguration:layout:
frameForWindow:
shouldClipForWindow:
_layout
_iconModelDidRelayout:
_iconModelDidReload:
_clearObservers
_cleanupZoom
_setIconListView:
_setDockListView:
_applyLabelAlphaFraction:
_animateToFraction:afterDelay:withSharedCompletion:
intersectSet:
_invalidateAnimationForSignificantIconModelChangesForReason:
setInvalidated:
enumerateIconsAndIconViewsWithHandler:
listIconCount
dockIconCount
cleanupZoom
startTime
criticalIconNodeIdentifiers
iconListView
_listIconToViewMap
_dockIconToViewMap
_criticalIconNodeIdentifiers
_iconListModel
_startTime
_iconListView
_dockListView
initWithRootViewController:
initWithIsolationIdentifier:
setSearchDelegate:
setWidgetGroupDelegate:
setCurrentStyle:
searchViewPresentationSourceForNextTransition
setSearchViewPresentationSourceForNextTransition:
searchViewDismissalReasonForNextTransition
setDefaultSearchViewDismissalReason:
setDefaultSearchViewPresentationSource:
_shouldWidgetsBlurContent
setWidgetsBlurContent:
presentationMode
setDefaultMode:
updateViewForInitialPresentation
searchDelegate
widgetGroupDelegate
setContentBottomInset:
_willDeactivateHosting
_screenSnapshotViewWithRect:
navigationBar
isShowingTwoWidgetColumns
minorScrollView
willChangeToMode:animated:
changeToMode:animated:
didChangeToMode:animated:
hostingDelegate
setSeparatorVisible:animated:
isTransitioningToSpotlight
setBlurProgress:animated:
_enterSpotlightAnimated:presentationSource:animationBegan:completion:
_enterSpotlightAnimated:animationBegan:completion:
_exitSpotlightForReason:animated:animationBegan:completion:
_shouldExcludeWindowFromSnapshot:
searchFieldDidFocus
resetSearchView
widgetGroupViewController:newCustomBackgroundViewForItem:inScrollView:
materialSettingsForWidgetGroupViewController:
additionalBundleIdentifiersForAttribution:
requestedLegibilitySettings
requestedWallpaperVariantForWidgetBackgroundViews
customAnimator
searchEtceteraIsolatedViewController:willChangeToMode:animated:
searchEtceteraIsolatedViewController:changingToMode:animated:
searchEtceteraIsolatedViewController:didChangeToMode:animated:
searchEtceteraIsolatedViewController:shouldPresentSearchFromSource:
searchEtceteraIsolatedViewController:shouldDelaySearchWillDismissWithReason:
supportedModes
_totalDistanceForBlurTransition
_enterSpotlightAnimated:presentationSource:completion:
_exitSpotlightForReason:
_reachabilityEnabled
_reachabilityContainerView
_dismissReachabilityGesture
_supportedModes
_currentMode
_transitioningModes
_searchViewPresentationSourceForNextTransition
_searchViewDismissalReasonForNextTransition
rebuildEverythingForReason:
initWithPresenter:isolatedViewController:
createViewControllerForIsolation
_shouldUseGrapeFlags
isPresenting
setPresentationType:
isFromCurrentState
setFromCurrentState:
initialTouchLocation
setInitialTouchLocation:
stepper
setStepper:
presentationBegunHandler
setPresentationBegunHandler:
pendingTransition
setPendingTransition:
completion
_fromCurrentState
_presentationType
_presentationBegunHandler
_pendingTransition
_initialTouchLocation
biometricEventMonitorDidAuthenticate:
_handleBacklightFadeFinished:
_handleUIDidLock:
_handleShowNotificationCenterGesture:
setBlursBackground:
blursBackground
isTransitioningBanner
addWindowClient:
removeWindowClient:
_showNotificationCenterGestureBeganWithGestureRecognizer:
_showNotificationCenterGestureChangedWithGestureRecognizer:duration:
_showNotificationCenterGestureEndedWithGestureRecognizer:
_showNotificationCenterGestureCancelled
_showNotificationCenterGestureFailed
setGrabberEnabled:
isGrabberLocked
minimumTranslationToEndGestureWithReveal
canShowHideGrabberView
_beginDismissalWithTouchLocation:
_invalidateCoveredContentSnapshot
_insertCoveredContentSnapshotIfNecessary:
_setViewUserInteractionEnabled:
prepareLayoutForDefaultPresentation
handleGrabberPress:
_handleDismissGesture:
grabberContentRect
_setEdgeRegionSize:
registerSharedGrabberView:withHideBlock:
positionContentForTouchAtLocation:
grabberView
isGrabberEnabled
disableGrabberLock
_setupForViewPresentation
_removeCoveredContentSnapshot
setPresentedState:
_setGrabberEnabled:
_setupForPresentationWithTouchLocation:
_setupForDismissal
_newViewControllerTransitionContextForPresentation:interactive:
shouldPresentSpotlightFromCurrentPositionWithVelocity:
shouldEndGestureWithPresentationWithVelocity:
_shouldPresentSpotlightForCurrentTransitionStateAndVelocity:
cancelBeginAppearanceTransition
_cancelInteractiveTransitionIfAppropriateForVelocity:
showPageControl
_cleanupAfterTransition:
presentPartialPulldownSpotlightAnimated:completion:
_registerNotificationCenterBulletinWindowClient:
searchIsDismissingFromPartialPulldown
presentSearchForHardwareKeyboardWithCompletion:
searchIsPresentedFromPartialPulldown
dismissPartialPulldownSpotlightAnimated:completion:
_beginPresentationWithTouchLocation:presentationBegunHandler:
_transitionNonInteractivelyForPresentation:stepper:
dismissAnimated:fromCurrentState:withStepper:completion:
_dismissPartialPulldownAnimated:fromCurrentState:withStepper:completion:
dismissBannerWithAnimation:reason:forceEvenIfBusy:completion:
_unregisterNotificationCenterBulletinWindowClient:
cleanUpAfterTransition
_transitionNonInteractively
notificationCenterRevealMode
unregisterSharedGrabberView
setGrabberViewEnabled:
updateForChangeInLockedState
_updateForChangeInLockedState
_requiresUIUnlockForActionContext:
_handleActionContextRequiringUIUnlock:
_requiresAuthenticationForActionContext:
_handleActionContextRequiringAuthentication:
requiresUIUnlock
attemptToUnlockUIFromNotification
hasAuthenticatedForNotificationAction
allowsShowNotificationsSystemGesture
shouldAllowInteractiveDismissal
allowsHideNotificationsGesture
sideSwitcherRevealGesture
shouldPlayFeedbackForNewTouchLocation:velocity:
impactOccurred
abortAnimatedPositionChange
_handleActionOrRequestWithDefaultAction:lockedAction:
grabberAnimationDuration
requiresKeyWindow
bulletinWindowDidBecomeKey
bulletinWindowDidResignKey
shouldClipContentView
shouldAllowPartialPulldownForCurrentTransition
shouldPinViewsForPartialPulldown
_shouldSelectViewControllerAtTouchLocation
registerSharedGrabberView:withWillPresentBlock:hideBlock:andCompletion:
partialPulldownFeedbackBehavior
setPartialPulldownFeedbackBehavior:
presentedState
_borrowedGrabberView
_borrowedGrabberWillPresentBlock
_borrowedGrabberHideBlock
_borrowedGrabberCompletionBlock
_grabberPressGesture
_lockScreenActionContext
_transitionState
_grabberEnabled
_didCoalesceWidgetsConnections
_showSystemGestureRecognizer
_dismissGestureRecognizer
_currentBounceAnimator
_bulletinWindowClients
_activeTransitionContext
_ncDefaults
_partialPulldownFeedbackBehavior
_presentedState
underlayRequesterNameForContext:
shouldBeHidden
factoryWithDuration:delay:
activationBlock
deactivationBlock
initFromOverlay:toOverlay:inside:
performTransitionWithAnimationFactory:completion:
_hideLockContent
_from
_lockScreenVC
setDescriptionProvider:
allocWithZone:
setFlag:forSetting:
flagForSetting:
boolForSetting:
objectForSetting:
removeAllSettings
settings:keyDescriptionForSetting:
settings:valueDescriptionForFlag:object:ofSetting:
keyDescriptionForSetting:
valueDescriptionForFlag:object:ofSetting:
initWithApplication:iconFormat:
cardItem
setPluginCompletionBlock:
pluginCompletionBlock
executeAction:fromOrigin:withParameters:completion:
shouldForwardAction
setShouldForwardAction:
initWithCardItem:
_shouldForwardAction
_cardItem
_pluginCompletionBlock
setShouldDismissNotification:
setActionRunner:
revealWalletPassNotificationActionForCardItem:
isKeyWindow
canResignFirstResponder
setShouldRestoreFirstResponder:
shouldRestoreFirstResponder
startHosting
setWindowHostWrapper:
canAppearUnderAlert
setCanAppearUnderAlert:
_canAppearUnderAlert
_shouldRestoreFirstResponder
_windowHostWrapper
_notificationCenterDidDeactivate:
_controlCenterDidDeactivate:
_assistantVisibilityDidChange:
_alertCount
_alertAtIndex:
_needsPortraitOrientationLockForAlert:
_disablePortraitOrientationLock
disablePortraitOrientationLockIfPossibleForAlert:
removeActiveLayoutLayer:
_noteWillDisplayAlert:
_hostAccessoryWindowsForActivatingAlert:
_enablePortraitOrientationLock
addActiveLayoutLayer:
_deactivate:
_noteFinishedWithAlert:atIndex:
_stopHostingAccessoryWindowsForDeactivatingAlert:
isDismissingBanner
bannerWindow
_windows
setOrientation:animationParameters:
_removeHostedAccessoryViewsForRequester:
hideHostedAccessoryViewsForAlert:
_canAutorotate
_noteAlertWillDismiss:
_alertToAccessoryWrappersMap
_orientationLockAssertion
_initWithElements:
isEqualToLayoutState:
_layoutStateForTransitionContext:
isDeactivatingEntity
deactivationSettings
isPlaceholderEntity
layoutElementForRole:
_stateWithElements:interfaceOrientation:
_elements
dateByAddingUnit:value:toDate:options:
advanceOverrideDateByAmount:
_shouldAnimateTransitionFromPlugin:toPlugin:
transitionFromPlugin:toPlugin:lockScreenViewController:
requiresSetup
isLogin
comingFromUserPowerDown
isForSimulator
dontLockAfterCrash
_transactionForDestination:context:
initWithDestination:context:initialRestartState:
setSlideEnabled:
setSlideDirectionX:
setSlideDirectionY:
setSlidePixelsX:
setSlidePixelsY:
iconSettings
setLockscreenWallpaperSettings:
setHomescreenWallpaperSettings:
setIconSettings:
setIconBadgeSettings:
_lockscreenWallpaperSettings
_homescreenWallpaperSettings
_iconSettings
_iconBadgeSettings
setSimplicityOptions:
dosidoAnimationSettings
setSwitcherStyle:
setClipStatusBarArea:
setAExpLayoutCoeff:
setBExpLayoutCoeff:
setDepthPadding:
setUseTitleOpacityPrototypeSettings:
setTitleOpacityACoeff:
setTitleOpacityBCoeff:
setTitleOpacityCCoeff:
setTitleOpacityDCoeff:
setInsertMass:
setInsertStiffness:
setInsertDamping:
simplicityOptions
archiveValueForKey:
setSimplicityOptionNoSnapshots:
setSimplicityOptionNoStatusBars:
setSimplicityOptionNoLabels:
setSimplicityOptionNoIcons:
setSimplicityOptionNoBlurs:
setSimplicityOptionNoShadows:
switcherStyle
setOrbGestureSettings:
setWallpaperSettings:
setDosidoAnimationSettings:
setPresentAnimationSettings:
setDismissAnimationSettings:
simplicityOptionNoSnapshots
simplicityOptionNoStatusBars
simplicityOptionNoLabels
simplicityOptionNoIcons
simplicityOptionNoBlurs
simplicityOptionNoShadows
_simplicityOptions
_clipStatusBarArea
_useTitleOpacityPrototypeSettings
_simplicityOptionNoSnapshots
_simplicityOptionNoStatusBars
_simplicityOptionNoLabels
_simplicityOptionNoIcons
_simplicityOptionNoBlurs
_simplicityOptionNoShadows
_switcherStyle
_orbGestureSettings
_wallpaperSettings
_aExpLayoutCoeff
_bExpLayoutCoeff
_depthPadding
_titleOpacityACoeff
_titleOpacityBCoeff
_titleOpacityCCoeff
_titleOpacityDCoeff
_insertMass
_insertStiffness
_insertDamping
_dosidoAnimationSettings
_presentAnimationSettings
_dismissAnimationSettings
_beginAnimation
setEffectiveTopDisplay:forStarkTrigger:withAnimationFactory:
_setupMilestonesFrom:to:
_setupAnimationFrom:to:
initWithBehavior:request:feedback:
feedback
_behavior
_feedback
_setPassLibrary:
setUnlockCredentialSet:
_setAuthenticated:
_updateMatchingForState:forReason:
_resetStateForReason:
isWalletPreArmDisabled
isUnlockingDisabled
isAutoUnlockingDisabled
_setupPreArmRecognizerIfPossibleForReason:
hasEnrolledFingers
_hasActivePasscodeViews
_isWalletPreArmAllowed
_setState:forReason:
refreshMatchMode
_handlePassKitDismissalIfNecessaryWithReason:
presentContactlessInterfaceForDefaultPassFromSource:completion:
_invalidateWalletPreArmRecognizer
_isMatchingEffectivelyDisabled
mesaCoordinator:requestsAuthenticationFeedback:
_pendUnlockRequest:
mesaCoordinator:requestsUnlockWithIntent:
_removePasscodeMatchingAssertion:
initWithMatchMode:reason:invalidationBlock:
_addPasscodeMatchingAssertion:
_stateChangedFrom:to:
_stateWantsMatching:outMatchMode:
acquireMatchingAssertionWithMode:reason:
_clearPendingUnlockRequest
_createFingerDetectAssertion
_toggleAutoUnlockBehaviorEnabled:
_clearFingerDetectAssertion
matchMode
biometricResource:observeEvent:
biometricResource:matchingAllowedDidChange:
biometricResource:matchingEnabledDidChange:
passLibraryReceivedInterruption
passLibrary:receivedUpdatedCatalog:passes:
contactlessInterfaceDidPresentFromSource:
contactlessInterfaceDidDismissFromSource:
initWithBiometricResource:
acquireDisableCoordinatorAssertionForReason:
acquireDisableWalletPreArmAssertionForReason:
acquireDisableUnlockAssertionForReason:
acquireDisableAutoUnlockAssertionForReason:
_noteMenuButtonSinglePress
_noteMenuButtonDoublePress
bioAuthenticatedWhileMenuButtonDown
setBioAuthenticatedWhileMenuButtonDown:
_setAutoUnlockBehavior
_setAutoUnlockBehavior:
_walletPrearmRecognizer
_getPassLibrary
_biometricResource
_autoUnlockBehavior
_presentingWalletInterface
_didMatchBeforeWalletPrearmRecognizerTimeout
_isAuthenticated
_matchingWantedAssertion
_bioAuthenticatedWhileMenuButtonDown
_pendingUnlockRequest
_activePasscodeMatchAssertions
_disabledWalletPrearmAssertions
_disabledUnlockAssertions
_disabledAutoUnlockAssertions
_nextSceneDebugColor
_updateDisplayLayoutElementToVisible:
preferredLayoutLevel
orangeColor
blueColor
magentaColor
greenColor
brownColor
purpleColor
debugDescriptionWithMultilinePrefix:
manager
isRetaining
isDefunct
_autoreleaseManager:
_updateRetainWithBlock:
sceneManagerDidInvalidateForReference:
setManager:
setDisplayIsConnected:
_weak_manager
_managerWasValid
_displayIsConnected
_retainingScenes
_sceneID
UIImage
_invalidateSnapshotData
fetchImageData:
fetchImage
_snapshot
_scaleFactor
_cachedImage
_processedSurface
_primaryWebAppInfo
substringFromIndex:
classicMode
_dataContainerURL
getStartupImage:
refreshLaunchImagesInSnapshotManifestIfNeededWithInfoDictionary:
_customStartupImageForLaunchingOrientation:
setLaunchURL:
_bookmarkIcon
_launchURL
_initWithDisplay:
transitionState
_sideSwitcherGrabberStyleForDisplayItem:
sideSwitcherScroller:viewForDisplayItem:
startTransitionWithDisplayItem:presenting:
_startUpdatingWallpaperForTransition
acquireWithPredicate:
_updateGroupOpacity
_updateWallpaperForTransition
prepareToEndTransitionAnimated:
_endWallpaperForTransitionWithSuccess:
heightFromTopForFinalItemSize
_configureBackgroundView
_switcherModelChanged:
contentRectForLayout
_initialDisplayItemsList
setViewCurrentlyAppeared:
initWithFrame:displayItem:
_updateGroupOpacityForDisplayItem:
_itemSize
_nativeItemSize
viewCurrentlyAppeared
contentOffsetSpeedInScrollingDirection
initWithKey:ascending:selector:
_sideSwitcherIsPinned
_supportsHighQualityBlurInOverlayMode
effectWithStyle:
grabberColorForGrabberState:pressed:
overlayBlendModeForGrabberState:pressed:
sideSwitcherScroller:purgeView:
sideSwitcherScrollerItemSize:
sideSwitcherScrollerDistanceBetweenItems:
sideSwitcherScroller:displayItemWantsToBeKeptInViewHierarchy:
displayModeForTransitioningDisplayItem
transitionProgress
_itemViewController
_wallpaperBlurTransitionState
_switcherPageViews
_hostedApplicationDisplayItems
_transitioningDisplayItem
_hasActivatedItemWhileVisible
_viewCurrentlyAppeared
_backgroundWrapperView
nowPlayingSceneHostManager
initWithScreenController:timeout:
_appSyncStateChanged
endMonitoring
_beginObservingICloudRestoreStatus
_endObservingICloudRestoreStatus
_setAppSyncState:
_updateIconsForStateChange
_iCloudStatusChanged
isRestoringFromICloud
isAppSyncing
_isSyncing
_syncRegistrationToken
_iCloudRestoreToken
_restoringFromICloud
_isAutoSyncing
_isWirelessSyncing
arrayWithContentsOfURL:
initWithFrame:overlayView:
setGravity:
setElasticity:
setGrabberAnimationDuration:
setBounceSettings:
actionButtonVibrantTintLevel
setActionButtonVibrantTintLevel:
actionButtonVibrantTintAlpha
setActionButtonVibrantTintAlpha:
actionButtonSelectedVibrantTintLevel
setActionButtonSelectedVibrantTintLevel:
actionButtonSelectedVibrantTintAlpha
setActionButtonSelectedVibrantTintAlpha:
actionButtonOverlayTintLevel
setActionButtonOverlayTintLevel:
actionButtonOverlayTintAlpha
setActionButtonOverlayTintAlpha:
actionButtonSelectedOverlayTintLevel
setActionButtonSelectedOverlayTintLevel:
actionButtonSelectedOverlayTintAlpha
setActionButtonSelectedOverlayTintAlpha:
modeButtonTintLevel
setModeButtonTintLevel:
modeButtonTintAlpha
setModeButtonTintAlpha:
modeLabelTintLevel
setModeLabelTintLevel:
modeLabelTintAlpha
setModeLabelTintAlpha:
_grabberAnimationDuration
_actionButtonVibrantTintLevel
_actionButtonVibrantTintAlpha
_actionButtonSelectedVibrantTintLevel
_actionButtonSelectedVibrantTintAlpha
_actionButtonOverlayTintLevel
_actionButtonOverlayTintAlpha
_actionButtonSelectedOverlayTintLevel
_actionButtonSelectedOverlayTintAlpha
_modeButtonTintLevel
_modeButtonTintAlpha
_modeLabelTintLevel
_modeLabelTintAlpha
strongToWeakObjectsMapTable
addBusyClient:
isDeviceUILocked
_dequeuePendedEventsIfPossible
isBusy
isBulletinWindowBusy
isDevicePasscodeLocked
feed
canShowAlertForFeed:
eventForBulletin:feed:block:
shouldSuppressAlertForBulletin:
bulletinAlertShouldOverrideQuietMode
alertHandlersForSection:
bindBulletin:forRegistry:
_syncDismissalForBulletin:
handleEvent:withBulletin:forRegistry:
_executeOrPendEventBlock:forFeed:bulletin:
modalThumbnailConstraintsForAttachmentType:
modalImageForAttachmentType:thumbnailData:
getAlertBehaviorOverridesWithCompletion:
initWithBulletin:supersededAlert:
allowsAddingToLockScreenWhenUnlocked
removeBulletins:inSection:fromFeed:
setLaunchBundleID:
bulletinWindowStoppedBeingBusy
attachmentImageForBulletin:
_incomingBulletinEventQueue
_handlersBySectionID
_handlersByBulletinID
_alertsByBulletinID
_quietModeEnabled
destroyingAlert:withBulletin:
_addStatusBarSettingsAssertion:
_modifiedStatusBarSettingsAssertion:
_removeStatusBarSettingsAssertion:
_updateBannerSuppressionState
_screenUndimmmed:
_registerTargetImplementation:
_handleDismissBannerSystemGesture:
setTopAlert:
_setOverdueCompletionBlock:
_fireCompletionBlockForBannerAnimationForAssistantRevealIfNecessary
_fireCompletionBlockForBannerAnimationForAssistantDismissIfNecessary
_unregisterTargetImplementation:
removeBusyClient:
_removeActiveGestureHandler
isPulledDown
showsKeyboard
_cancelBannerDismissTimers
_tryToDismissWithAnimation:reason:forceEvenIfBusy:completion:
_bannerView
_removePendingContextsForSourceNeedingRepop:
_bannerContext
dismissBannerWithAnimation:reason:
_presentBannerForContext:reason:
_dequeueBannerIfPossible
_pendingBannerContextForSourceNeedingRepop:
currentBannerContextForSource:
_dequeueBannerIfPossibleIgnoringStickyBanner:existingDismissReason:
_newBannerContextViewController
setBannerContext:withReplaceReason:completion:
bs_takeObjectForKey:
_dismissOverdueOrDequeueIfPossible
canShowInAssistant
setWindowAboveAssistant:
_updateBannerSuppressionStateAndDequeueIfPossible:withDelay:
_dequeueAfterDelayIfPossible
_isItemShowable:fromSource:
_viewControllerForPresentation
isBeingDismissed
isBeingPresented
_canDequeueIgnoringStickyBanner:
sb_transitionCoordinator
_dequeueNextBannerContext
requestsModalPresentation
_performTransition:withAnimation:context:reason:completion:
_updateGestureHandlerWithState:type:
_handleGestureState:location:displacement:velocity:
_newGestureHandlerForType:
isDismissing
_shouldPendStickyBannerContext:withReason:
_handleSystemDismissGestureWithState:position:velocity:
setBannerContext:withReplaceReason:
isSticky
_setBannerSticky:
_performRevealTransitionWithContext:animated:completion:
_performReplaceTransitionWithContext:reason:completion:
_performHideTransitionWithContext:animated:reason:completion:
_setBannerViewControllerForContext:
_updateLockScreenForBannerVisible:
presentingActionIdentifier
willPresentFromActionIdentifier:
_addBannerGestureRecognizersToView:
transitionToActionWithIdentifier:
setBannerPullPercentage:
setModalPresentationStyle:
setTransitioningDelegate:
_stopCurrentSound
_handleBannerPanGesture:
_dismissIntervalElapsed
_replaceIntervalElapsed
_setupBannerDismissTimers
currentBannerHeight
allowsDismissBannerGesture
isTrackingDismissGesture
bannerHeight
isShowingModalBannerWithKeyboard
_bannerItem
lockScreenActionContextWithContext:
updateKeyWindowStatusIfNecessary
noteModalBannerIsVisible:
setBannerPullDisplacement:
registerSource:
unregisterSource:
modallyPresentBannerWithContext:
signalSource:
dismissCurrentBannerContextForSource:
cacheBannerForContext:withCompletion:
removeCachedBannerForContext:
bannerTargetIdentifier
bannerTargetIdiom
bannerViewController:willSelectAction:withContext:
bannerViewControllerDidSelectAction:
bannerViewControllerDidRequestDismissal:
bannerViewControllerDidRequestSticky:
bannerViewController:didRequestSticky:
bannerViewControllerDidReceiveRaiseGesture:
bannerViewControllerDidShrinkForKeyboard:
bannerViewControllerDidPullDown:
handler:pulledBannerByDisplacement:
setBannerAlpha:
_soundDidFinishPlayingForBannerContext:
_bannerViewBackgroundImage
_newBannerViewForContext:
topAlert
_sources
_pendingBannerContextsNeedingRepop
_topAlert
_soundIsPlaying
_dismissalOverdue
_replaceDelayIsActive
_showingStickyDurationBanner
_suppressingBanners
_enableDelayActive
_assistantIsFullyVisible
_transitionCount
_activeGestureType
_activeGestureHandler
_overdueDismissReason
_overdueCompletionBlock
_dismissingBannerForAssistantReveal
_dismissingBannerForAssistantDismiss
_assistantRevealCompletionBlock
_assistantDismissCompletionBlock
_bannerContextToViewControllerCache
_dismissSystemGestureRecognizer
_transitionCoordinator
initWithIndicatorSet:enabledIndicatorSet:
_pageIndicatorSet
_enabledPageIndicatorSet
_emptyPageIndicatorSet
initWithImage:shadowImage:
dashBoardPageIndicatorImageSetCache
cameraIndicatorImageSetForLegibilitySettings:
_indicatorImageSetResults
_searchImageSetResults
_cameraImageSetResults
systemFontOfSize:weight:
_goodbyeLabelBaselineOffset
_userAvatarVerticalOffsetFromCenter
initWithActivityIndicatorStyle:
_moreDocumentsLabelBaselineOffset
_updateViewData
setConstant:
_updateUserAvatar
_updateUserAvatarLegibility
_updateGoodbye
_updateBlame
isKeyAvailable:
givenName
stringByReplacingCharactersInRange:withString:
familyName
stringFromContact:
isProgressVisible
setProgressVisible:
setUserContact:
setPendingApplications:
userContact
pendingApplications
_userContact
_pendingApplications
_userAvatarView
_userAvatarVerticalConstraint
_goodbyeLabel
_goodbyeLabelConstraint
_savingDocumentsActivityAndLabelContainerView
_savingDocumentsActivityIndicator
_savingDocumentsLabel
_savingDocumentsMoreLabel
_savingDocumentsMoreLabelConstraint
_blameContainerView
_blameAppIconView
_blameAppNameLabel
_statusBarSettingsAssertion
nc_shouldReverseLayoutDirection
initWithParentDestination:
_setupSystemStateChangeNotifications
_setupDismissalNotifications
_setupTimers
_isPresentingBanner
_isPresentingBannerInLongLook
_isPresentingBannerPreventingAutomaticLock
isPreventingAutomaticLock
expandAndPlayAudioMessage
_postNotificationRequest:forCoalescedNotification:modal:sourceAction:completion:
_isPresentingStickyBanner
_isPresentedBannerBeingDragged
_isInSetupMode
_isPendingBannerPresentation
shouldReceiveNotificationRequest:
canReceiveNotificationRequest:
_canReceiveNotificationRequestIfLocked:
canModifyNotificationRequest:
_presentedBannerMatchesNotificationRequest:
setNotificationRequest:
canWithdrawNotificationRequest:
_isPresentingActiveAlert
dismissPresentedBannerAnimated:completion:
isContentExtensionVisible:
destination:requestPermissionToExecuteAction:forNotificationRequest:withParameters:completion:
destination:executeAction:forNotificationRequest:withParameters:completion:
resignActiveAssertion
_cancelReplaceAndDismissTimers
_setReadyForNotificationRequestsCoalescingWith:
_isContentSuppressedForNotificationRequest:
reloadStaticContentProvider
_updateMotionGestureObservation
_startReplaceAndDismissTimersForRequest:
_dismissBannerCompleted
destination:didDismissNotificationRequest:
transitioningDelegate
setActiveGesture:
silenceAction
_setStatusBarsHidden:withDuration:
isUserInteractionInProgress
setUserInteractionInProgress:
hasCommittedToPresentingCustomContentProvidingViewController
isShortLook
isAudioMessageNotificationRequest
bannerPresentationSemaphore
notificationAndCCMaterialSettings
_isPresentingBannerForAudioMessage
addGestureObserver:withPriority:
removeGestureObserver:
_resetPresentTimer
_isPresentingBannerWithHiddenPreview
_isUILocked
destination:didBecomeReadyToReceiveNotificationsPassingTest:
destinationDidBecomeReadyToReceiveNotifications:
destination:didBecomeReadyToReceiveNotificationsCoalescedWith:
_rootViewController
_isNotificationCenterVisible
postNotificationRequest:withPresentingViewController:animated:completion:
didReceiveNotificationRequest:
setBannerPresentationSemaphore:
_notificationViewControllerForRequest:
_presentNotificationViewController:modal:forRequest:sourceAction:completion:
setPresentedBanner:
_scheduleNotificationViewControllerPresentationBlock:
_setReadyForNotificationRequests
destination:requestsClearingNotificationRequests:fromDestinations:
_isDeviceAuthenticated
contentPreviewSetting
dismissAutomatically
setupManager
revealsAdditionalContentOnPresentation
destination:willPresentNotificationRequest:suppressAlerts:
setInteractionEnabled:
destination:willDismissNotificationRequest:
shouldNotificationRequestPresentAsLongLook:
setRevealAdditionalContentOnPresentation:
setPresentationSourceAction:
destination:didPresentNotificationRequest:
_isShowingShortLookAtRest
_startTimerWithDelay:eventHandler:
_startReplaceTimer
_startDismissTimer
_cancelReplaceTimer
_cancelDismissTimer
_setupModeChanged
_dismissNonStickyBanner
_dismissBannerForUILocking
_dismissPresentedBannerAndClearNotification:animated:
dismissPresentedViewControllerAndClearNotification:animated:
_cleanupRootViewControllerPresentationStack
notificationViewController:staticContentProviderForNotificationRequest:
notificationViewController:requestPermissionToExecuteAction:withParameters:completion:
notificationViewController:executeAction:withParameters:completion:
notificationViewControllerDateFormatStyle:
notificationViewControllerShouldPan:
notificationViewControllerShouldInterpretTapAsDefaultAction:
notificationViewControllerShouldBlurShortLook:
notificationViewControllerShouldAllowInteractionGesture:
notificationViewController:shouldFinishLongLookTransitionWithCompletionBlock:
notificationViewController:suggestsDismissingShortLookWithSource:
shouldAddHintTextForNotificationViewController:
notificationViewController:preferredViewControllerForPresentingFromViewController:
longLookWillPresentForNotificationViewController:
notificationViewController:didPresentLongLook:
longLookWillDismissForNotificationViewController:
notificationViewController:didDismissLongLook:
notificationViewController:didDismissShortLook:
notificationViewControllerWillBeginUserInteraction:
notificationViewControllerDidEndUserInteraction:
presentationFrameForNotificationViewController:
notificationViewController:convertRect:toLocalWindowSpaceFromView:
notificationViewController:didCommitToShortLookPresentation:withCoordinator:
notificationViewController:didCommitToLongLookPresentation:withCoordinator:
customBackgroundViewForNotificationViewController:
showAdditionalMessageLinesForNotificationViewController:
shouldLoadAudioAccessoryViewForNotificationViewController:
notificationViewControllerIsReadyToBePresented:
materialSettingsForNotificationViewController:
didReceiveRaiseGesture
prepareDestinationToReceiveCriticalNotificationRequest:
modifyNotificationRequest:forCoalescedNotification:
interceptsQueueRequest:
presentModalBannerForNotificationRequest:
presentModalBannerAndExpandForNotificationRequest:
setSetupManager:
setBannerWindow:
presentTimer
setPresentTimer:
replaceTimer
setReplaceTimer:
dismissTimer
setDismissTimer:
setResignActiveAssertion:
longLookDestination
setLongLookDestination:
_userInteractionInProgress
_bannerWindow
_presentedBanner
_presentTimer
_replaceTimer
_dismissTimer
_bannerPresentationSemaphore
_longLookDestination
addTimingFunction:withName:constrainedToIntervalBetween:and:
timingFunctionWithTimingFunction:constrainedToIntervalBetween:and:
timingFunction
valueAtPercentage:
addTimingFunctionWithName:fromNormalizedAnimationSettings:
timingFunctionNames
_functionsByName
initWithTimingFunction:constrainedToIntervalBetween:and:
constrainedRange
_constrainedRange
originatingDeviceType
lastUpdateTime
setLaunchSource:
setAppSuggestion:
launchSource
_reportAndKillInsecureProcesses:
_executeRestartAction:fromProcess:
targetURL
processIds
scenesPassingTest:
killForReason:andReport:withDescription:
setContentContainer:
initWithPictureInPictureViewController:
_actuallyUpdateContentViewLayoutSettingsAndLayoutIfNeeded
_actuallyHandlePanRotationPinchGestureEndedState
currentContentViewPosition
currentContentViewSizeForAspectRatio:
_updateContentViewLayoutConstraintsWithContentViewSize
updateHostedWindowSize:
_handlePanGesture:
_handleRotationGesture:
_contentViewFrameInDisplayReferenceSpace
_updateDisplayLayoutElementReferenceFrame
_convertContentViewFrameFromReferenceSpace:
_updateContentViewLayoutConstraintsWithFrame:
animateViewWithAnimationType:initialSpringVelocity:animations:completion:
setStashState:animated:
defaultContentViewSizeForAspectRatio:
setContentViewSize:
_updateContentViewLayoutSettingsAndLayoutIfNeeded
minimumContentViewSizeForAspectRatio:
maximumContentViewSizeForAspectRatio:
_convertRectToSceneReferenceSpace:
constant
_handlePanRotationPinchGestureBeganState
setTranslation:inView:
_contentViewCenter
_stashContentViewWithContentViewCenter:
_handlePanRotationPinchGestureEndedState
_adjustContentViewAnchorPointForGestureRecognizer:
rotation
hostedWindowSizeChangeBegan
updateLayerHostTransform:
setContentViewPosition:
_constrainContentViewSize:
hostedWindowSizeChangeEnded
preferredContentSizeDidChangeForPictureInPictureViewController
prepareStartAnimationWithInitialLayerFrame:completionHandler:
performStartAnimationWithAnimationHandler:completionHandler:
performStopAnimationWithFinalLayerFrame:animationHandler:completionHandler:
performRotateAnimationWithRotation:completionHandler:
handleTapGesture
handleDoubleTapGesture
contentViewLayoutSettingsDidChange
setContentViewPadding:animationDuration:animationOptions:
displayLayoutElementLevel
setDisplayLayoutElementLevel:
pictureInPictureViewController
_preferredContentSize
_contentViewPosition
_contentViewSize
_contentViewPadding
_addContentViewLayoutConstraints
_stashContentView
_panGestureHandled
_rotationGestureHandled
_pinchGestureHandled
_initialGestureScale
_panGestureVelocity
_pinchGestureScaleFactor
_layoutConstraints
_contentViewGestureCenterXLayoutConstraint
_contentViewGestureCenterYLayoutConstraint
_contentViewGestureWidthLayoutConstraint
_contentViewGestureHeightLayoutConstraint
_layoutConstraintStyle
_displayLayoutElementLevel
_pictureInPictureViewController
SB_accessibilityContentViewScale
SB_accessibilitySetContentViewScale:
setSuggestedAnimationController:
operatorDefaults
uikitDefaults
duetDefaults
settingsDefaults
networkDefaults
_lazy_globalDefaults
_lazy_carrierDefaults
_lazy_operatorDefaults
_lazy_uikitDefaults
_lazy_duetDefaults
_lazy_demoDefaults
_lazy_setupDefaults
_lazy_settingsDefaults
_lazy_smsDefaults
_lazy_phoneDefaults
_lazy_networkDefaults
_lazy_soundDefaults
initWithTintColor:selectedTintColor:textColor:selectedTextColor:
settingsWithTintColor:selectedTintColor:textColor:selectedTextColor:
_selectedTintColor
_selectedTextColor
initWithVibrantSettings:overlaySettings:
editButtonSettingsWithGraphicsQuality:
settingsWithGraphicsQuality:
_vibrantSettings
_overlaySettings
killSound
_handleActionGroup:
actionBlockForAction:
hasInteractiveAction
launchBundleID
setBulletinButtonIndices:
_handleAction:
_actionsFromBulletin
_actionsWithOptions
_defaultActions
_dismissAction
_defaultAction
hasLaunchAction
_defaultAppearance
setAppearance:
dismissAction
_dismissAppearance
snoozeAction
_snoozeAppearance
supplementaryActionsForLayout:
bs_first:
actionGroupWithActions:
_optionsAppearance
_configureSheetWithBulletinButtons
_configureSheetWithBulletinActions
modalAlertContent
suppressesTitle
preferredContentSizeCategory
preferredImageForContentSizeCategory:tintColor:
appendAttributedString:
attributedStringWithAttachment:
_setAttributedTitle:
sb_shouldSuppressMessageForPrivacy
playSound
preventLock
canBeSilencedByMenuButtonPress
initWithBulletin:
_snoozeAction
bulletinButtonIndices
_bulletin
_bulletinButtonIndices
_playedSound
_superseded
_actions
statusBarDescriptorWithForceHidden:
setBreadcrumbTitle:
setBreadcrumbSecondaryTitle:
_forceHidden
_breadcrumbTitle
_breadcrumbSecondaryTitle
removeImageForKey:
snapshotForKey:withGenerationBlockIfNecessary:
_mappedImageKeys
_resignAsKeyWindow
_allowsShowNotificationsGestureFromBanner:
_allowsShowNotificationsSystemGestureFromBanner:
activeKeyboard
targetWindow
_removeWindowFromStack:
_pushKeyWindow:
_popKeyWindow:
initWithBulletinWindowController:
sharedTextEffectsWindow
_setWantsKeyWindow:
removeChildViewController:
_becomeKeyWindow
_didBecomeKeyWindow:
_didResignKeyWindow:
parentSectionID
_isBusyForReason:
addWindowClient:withChildViewController:
removeWindowClient:withChildViewController:
_hasKeyWindowClients
isWindowAboveAssistant
_wantsKeyWindow
_bulletinWindow
_rotatingKeyboard
_aboveAssistant
_windowClients
_keyClients
_busyClients
_busyReasons
_rootVC
hitTestsAsOpaque
_canBecomeKeyWindow
_setIgnoreAppSupportedOrientations:
_getRotationContentSettings:
_windowController
setAnimated:
setPresenting:
setPresentingViewController:
setPresentedViewController:
presentationCompletion
setPresentationCompletion:
dismissalCompletion
setDismissalCompletion:
_animated
_presenting
_presentingViewController
_presentedViewController
_presentationCompletion
_dismissalCompletion
_animateDismiss
_dismissAndLock
_animatingDismiss
_isWindowServerHostingManaged
createIOSurfaceWithContextIds:count:frame:
createScreenIOSurface
initWithRenderImage:
CA_copyRenderValue
images
_thumbnailFitToSize:
_newThumbnailWithJPEG:forMaxPixelDimension:
_newSource
_newThumbnailWithImageSource:forMaxPixelDimension:
sbg_thumbnailFitToSize:
sbg_squareImage
_activeEffectView
_createEffectViewForVariantIfNeeded:
_homeWallpaperEffectView
_lockWallpaperEffectView
dismissReachability:
setEnableRemoteHosting:
sharedTextEffectsWindowAboveStatusBar
setHostedWindowOffset:
_effectiveReachabilityContainerView
isReachabilityEnabled
notifyTextSelectionViewWillTranslateForReachability
setTextSelectionReachabilityOffset:activating:
reachabilityWillEnableWithOffset:
notifyTextSelectionViewDidTranslateForReachability
reachabilityWillDisable
_effectiveReachabilityGestureView
handleCancelReachabilityGesture
reachabilityContainerView
dismissReachabilityGesture
cancelReachability
isAutoPictureInPictureSupported
isAnalagousToEntity:
shouldStartPictureInPictureForApplicationWithProcessIdentifierEnteringBackground:
_failWithReason:description:precipitatingError:
startPictureInPictureForApplicationWithProcessIdentifierEnteringBackground:animated:completionHandler:
entityToPiP
_pidToPiP
_entityToPiP
_inferredTransitionStyle
_convertPointToSceneReferenceSpace:
_setTranslation:
_setTranslationMagnitude:
_setAbsoluteTranslation:
_setScale:
_setRotation:
appendPoint:withName:
translationMagnitude
absoluteTranslation
_translationMagnitude
_rotation
_translation
_absoluteTranslation
_locationInSceneReferenceSpace
_previousLocationInSceneReferenceSpace
analyzeTouches:
translationWeight
pinchingWeight
rotationWeight
_smoothedInfo
_translationWeight
_pinchingWeight
_rotationWeight
_dominantComponent
actionButtonWithStyle:
_wordCountForText:
_titleLabelHeightThatFits:
minimumScaleFactor
setBackgroundColor:withBlendMode:
initWithConfiguration:stateProvider:
_isStatusBarHidden
requestStyle:animationParameters:
setActiveBundleIdentifer:
styleForRequestedStyle:
_layoutStatusBar:
setDockDataProvider:
updateStatusBarItem:
forgetEitherSideHistory
_backPressed:
handleStatusBarBackPress
statusBar:didTriggerButtonType:withAction:context:
statusBar:willAnimateFromHeight:toHeight:duration:animation:
statusBar:didAnimateFromHeight:toHeight:animation:
statusBarSystemNavigationAction:
statusBar:didTriggerButtonType:withAction:
dockController
statusBarStyleDelegate
statusBarStateProvider
setStatusBarStyleDelegate:
updateStatusBarWithRequestedStyle:animationFactory:
setActiveBundleIdentifier:
newFakeStatusBar
isSeparatorHidden
_statusBarView
_statusBarStyleDelegate
_statusBarHideReasons
_styleHasBeenRequested
_statusBarWidth
_separatorView
_separatorHidden
_dockController
_notifyFrameObserverThatScreenRectDidChange
frameObserver
_didScroll
_contextHostRequester
_hostView
_clippingDisabled
_frameObserver
_updateContentViewControllerClassFromSettings
_warmAppInfoForAppsInList
_activateSwitcherNoninteractivelyWithSource:switcherTransition:
_isTransitioningToOrFromSwitcher
_activateSwitcherValidatorWithEventLabel:transactionProvider:
_dismissSwitcherNoninteractivelyWithSource:
_dismissSwitcherValidatorWithEventLabel:transactionProvider:
_toggleSwitcherNoninteractivelyWithSource:switcherTransition:
_toggleSwitcherTransitionValidator
_noteSwitcherDidPresentWithSource:didCommit:
_quitAppRepresentedByDisplayItem:forReason:
_displayItemFromLayoutElement:
_insertDisplayItem:atIndex:completion:
_displayItemFromAlert:
hasChildTransactionsOfClass:
_entityForDisplayItem:
launchURLRequiresInboxCopy
copyItemAtURL:toURL:error:
_otherReturnToElementsByRole
_configureRequestForDismissal:withEventLabel:
_doUglySiriActivationThingsIfNecessary:
alertForDisplayItem:
isSpringBoardKillable
_switcherServiceRemoved:
_switcherServiceAdded:
_appActivationStateDidChange:
_switcherRemoteAlertRemoved:
_switcherRemoteAlertAdded:
_continuityAppSuggestionChanged:
_rebuildAppListCache
_updateBestAppSuggestion
_lockOrientationForSwitcher
_releaseSwitcherOrientationLock
_disableContextHostingForApp:
_destroyAppListCache
_insertSwitcherService:atIndex:completion:
isBeingPresentedObscured
_replaceDisplayItem:withDisplayItem:completion:
currentSuggestedApp
_isBestAppSuggestionEligibleForSwitcher:
placeholderDisplayItems
serviceAtIndex:
alertAtIndex:
placeholderBundleIdentifiers
_cacheAppList
exitAndRelaunch:
alertForBundleIdentifier:
_temporarilyHostAppForQuitting:
_removeDisplayItem:forReason:completion:
activateSwitcherNoninteractively
setReturnToDisplayItem:
performDismissAnimationForTransitionRequest:toDisplayItem:withCompletion:
_setPreviousLayoutState:withTopAlert:
_setOtherReturnToElementsByRole:
_switcherServices
_switcherRemoteAlerts
_contentViewControllerClass
_servicesRemovedWhileAwayFromSwitcher
_appsHostedForTermination
_showStatusBarForSwitcherAssertion
_appSwitcherResignActiveAssertion
_showOrHidePluginViewAppropriately
setThermalWarningView:
setPluginView:
setContentHidden:forRequester:
thermalWarningView
pluginView
_contentHiddenRequesters
_thermalWarningView
contentContainerView
dismissButtonClicked:
setOpacity:
addSublayer:
learnMoreButtonClicked:
alertContainerView
effectForBlurEffect:
messageTitleLabel
learnMoreButton
messageTextLabel
blurEffectContainerView
dismissButton
darkBlurView
messageString
_contentContainerView
_alertContainerView
_blurEffectContainerView
_darkBlurView
_messageTextLabel
_messageTitleLabel
_learnMoreButton
_lineLayer
_messageString
_createStatusBarIfNeeded
initWithFrame:appView:displayItem:layoutState:delegate:
contentMode
_layoutFakeStatusBar
currentBreadcrumbNavigationAction
titleForDestination:
URLForDestination:
setOverrideBreadcrumbTitle:secondaryTitle:
_updateBreadcrumbOverrides
setAppView:
_appTransformView
_interactive
_savedStatusBarStyleOverride
initWithPid:queue:
addRequest:forKey:
removeRequestForKey:
noteDaemonCanceled:
setEnabler:
setDisabler:
dispatchEnablerOnQueue:
dispatchDisablerOnQueue:
enabler
disabler
_enabler
_disabler
_newDispatchSourceForPid:queue:
_handleCancelation
_dispatchSource
_daemonRequests
initWithFrame:mode:
separatorWithScreenScale:mode:
blendMode
separatorForCurrentState
_height
fadeAnimationSettings
_animationSpeedForBacklightChangeSource:isFadeIn:
backlightFadeDuration
speedMultiplierForLiftToWake
speedMultiplierForFadeIn
_assistantVisibilityChanged
_invertColorsChanged
initWithDebugName:
overlayInSettings
dateInSettings
contentInSettings
wallpaperInSettings
overlayOutSettings
dateOutSettings
wallpaperOutSettings
_cleanupAnimationWhenInterruptingFadeIn:
interruptFadeOutIfNeeded
_runCompletionHandlerForFadeIn:
_setLastBacklightChangeSource:
_createFadeWindowForFadeIn:
replicate
_setFakeAnimationDateView:
_setRelevantLockScreenViewsHidden:
_animationSettingsForBacklightChangeSource:isFadeIn:
wallpaperInContentsRect
_startFadeInIfNecessary
_startFadeAnimationsForFadeIn:animationSettings:
_setDateViewAlpha:
_handleAnimationCompletionIfNecessaryForFadeIn:
backlightFadeDurationForSource:isFadeIn:
animateBacklightToFactor:duration:source:completion:
animateWithFactory:options:actions:completion:
wallpaperOutContentsRect
_fadeWindow
_fakeFadeAnimationDateView
_originalDateLeftEdge
_originalDateBottomEdge
_finalTimeAlpha
_finalDateAlpha
_finalStatusBarAlpha
_realDateView
_preparingToAnimateFadeIn
_animatingForFadeIn
_animatingForFadeOut
_insideFadeInCompletionBlock
_insideFadeOutCompletionBlock
_animationToken
_fadeInCompletionBlock
_fadeOutCompletionBlock
_animatingDateTime
_animatingWallpaper
_animatingOverlay
_animatingContent
_lastBacklightChangeSource
setAlertItem:
_alertItem
_presenter
iconImagePaddingInsets
alwaysAppearsFocused
setWantsFocusHighlight:
canBecomeFocused
_alwaysAppearsFocused
_updateAlarmStatusBarItemForPendingNotificationRequests:
addNotificationRequests:withCompletionHandler:
removePendingNotificationRequestsWithIdentifiers:
_updateTimerShortcutItems
setAlarmEnabled:
updateTimerShortcutItem
userNotificationCenter:didDeliverNotifications:
userNotificationCenter:didChangePendingNotificationRequests:
addNotificationRequest:withCompletionHandler:
removePendingNotificationRequestsWithIdentifier:
_userNotificationCenter
_updateWetState
_finishInit
isDetectionEnabled
isAccessoryPortWet
_showStatusBarIcon
_stateDidUpdate
isLiquidDetected
showStatusBarIcon
_wetToken
_finishedInit
_detectionEnabled
_accessoryPortWet
_failWithReason:description:
_startAppRepairs
_evaluateCompletion
purchaserDSID
initWithBundleID:accountIdentifier:claimStyle:
accountDSID
_completeRequest:success:error:
startWithResponseBlock:
initWithApplicationInfos:
appInfos
_appInfos
_repairRequests
layoutIdentifier
supportedLayoutRoles
layoutAttributes
entityGenerator
initWithIdentifier:role:supportedRoles:attributes:viewControllerClass:entityGenerator:
builder
appendInteger:
appendUnsignedInteger:
elementWithDescriptor:role:
setEntityGenerator:
_entityGenerator
_supportedLayoutRoles
_layoutAttributes
_viewControllerClass
_toggleWithAnimationSettings:
_setAnchorEdge:
_setOrientation:
meshTransform
setDepthNormalization:
setSubdivisionSteps:
setMeshTransform:
_setStretchFactor:
_animateToZeroStretchFactor
updateMeshTransform:stretchFactor:
faceCount
addVertex:
addFace:
replaceVertexAtIndex:withVertex:
setStartingAmplitude:
amplitudeForElapsedTime:
setKeyTimes:
setTimingFunctions:
anchorEdge
_mesh
_stretchFactor
_transformView
_anchorEdge
layoutTransaction
appendString:counterpart:
appendInteger:counterpart:
_intent
isolationIdentifier
shouldDisableClipping
setDidMoveToWindowHandler:
preferredSizeForHostedView
isHosting
setHostingDelegate:
_multiplexedHostingView
_hosting
_hostingDelegate
_isolationIdentifier
sideSwitcherGrabberView
_updateGrabberColorAndVisibility
pinResizeGrabberVerticalOffset
_pinResizeGrabberHitTestFrame
viewDidMoveToSuperview
_dimmingView
_dimmingLevel
_sideSwitcherGrabberStyle
_sideSwitcherGrabberView
_pinResizeGrabberView
_pinResizeGrabberVerticalOffset
_sideSwitcherGrabberPressed
_createVibrantVersionIfNeeded
isVibrant
_vibrantView
_solidView
_vibrant
_colorDodgeView
_plusLView
_appStateChanged:
_activationStateChanged:
_manualListener
_done
_isInLostMode
_isBlocked
_hasPasscodeSet
_requiresSetup
_shouldNeverLock
_forSimulator
_currentUser
_bootDefaults
setWantsToManageStatusBarAtActivation:
setCanManageStatusBarVisibility:
disablesFadeInAnimation
wantsWallpaperTunnel
_initialFakeStatusBarNeeded
initWithCompoundTimer:warnOnly:resetPolicy:unwarnPolicy:unwarnInterval:
resetToOriginalTimer:
_compoundTimer
_originalTimer
_resetPolicy
_unwarnPolicy
_unwarnInterval
_transitionedToExpireTimestamp
_isTransitioningToExpire
_inExpireStage
_warnOnly
services
initWithServices:zone:
serviceBundleIdentifiers
serviceForBundleIdentifier:
_reallyInitFromRepresentation:
isBootingDark
appendBool:counterpart:
_parseOverlayInfo
_initWithRepresentation:user:
_initWithRestartRequest:fromLocked:fromApplication:
_initWithRebootContext:
_representation
fromApplicationBundleID
setFromApplicationBundleID:
fromLocked
setFromLocked:
setLogin:
isLogout
setLogout:
setDark:
setHasUserSwitchOverlayMismatch:
_fromApplicationBundleID
_fromLocked
_isDark
_isLogin
_isLogout
_hasUserSwitchOverlayMismatch
_setScene:
_invalidateContextWaitWatchdog
contextManager
contexts
initWithTimeout:queue:
isWaitingForResponse
windowContextManagerWillStartTrackingContexts:
windowContextManagerDidStopTrackingContexts:
windowContextManager:didRepositionContext:from:to:
sceneLayerManagerWillStartTrackingLayers:
sceneLayerManagerDidStopTrackingLayers:
sceneLayerManager:didRepositionLayer:fromIndex:toIndex:
initWithSceneID:waitForContexts:
waitForContexts
_sceneIDToWaitForCreation
_createdScene
_waitForContextsWatchdog
_waitForContextsTimeout
_waitForContext
addLaunchOperation:withDisplayID:
_launchOperationForDisplayIDMap
scrollThresholdForPasscodeScroll
associatedCell
setAssociatedCell:
_associatedCell
_setSeparatorBackdropOverlayBlendMode:
removeTarget:forEvents:
setResetsScrollOnPluginWillDisable:
_notePluginDisabled:
scrollToOriginAnimated:
_vibrantTextColor
wantsUnlockActionText
_updateUnlockText:
isTopCell
_buttonWithLabel:
_handleActionButtonPress:
buttonPressed
_unlockTextOriginY
unlockLineBaselineOffsetFromPreviousLine
rowHeightForTitle:subtitle:body:maxLines:attachmentSize:secondaryContentSize:datesVisible:rowWidth:includeUnlockActionText:
lastLineBottomPadding
resetScrollView
setContentScrollViewWidth:
_separatorBackdropOverlayBlendMode
setIsTopCell:
setButtonLabel:handler:
shouldAnimateHintForTouchInCell:
contentScrollViewWidth
resetsScrollOnPluginWillDisable
contentScrollView
_isTopCell
_currentContentAlpha
_actionButtonHandler
_contentScrollView
_unlockTextLabel
_resetsScrollOnPluginWillDisable
_contentScrollViewWidth
rowHeight
_countdownLabel
rowHeightForTitle:body:rowWidth:
shouldBreadcrumbLaunchedApplicationWithBundleIdentifier:
pluginSupportedAndEnabled
_isPluginLoaded
_starkSiriWillAppear:
_starkSiriDidAppear:
_starkSiriWillDisappear:
_starkSiriDidDisappear:
_loadPlugin
_notePluginVisibilityDidChange
setUnlockedDevice:
handlePreheatCommand
_activationSettingsWithDismissalDisallowed:
dismissPluginForEvent:
dismissSiriWithAnimation:factory:completion:
_defaultAnimatedDismissDurationForMainScreen
_dismissForMainScreenWithFactory:completion:
_isDismissingAllViews
assistantRootViewController
setAssistantController:
_toggleModalAlertHidingAssertion:
_notifyObserversViewWillAppear:
_bioAuthenticated:
_viewDidAppearWithType:
_notifyObserversViewWillDisappear:
_viewDidDisappearWithType:
uiPluginAttemptMesaUnlock
_notifyObserversViewDidAppear:
_notifyObserversViewDidDisappear:
pluginExpectsFaceContact
updateClientSettingsWithBlock:
_updateSceneClientSettings
_createAssistantWindowIfNecessary
setUiEnvironment:
_viewWillAppearOnMainScreen:
_viewController:willAnimateAppearanceWithContext:
_viewController:setShowsStatusBar:
_fakeStatusBarForOrientation:
_viewDidAppearOnMainScreen:
hideOtherWindowsDuringAppearance
startHidingWindowsExclusivelyFromLevel:toLevel:forContext:reason:
_viewController:animateAppearanceWithContext:
commit
stopHidingWindowsForContext:
_viewWillDisappearOnMainScreen:
_viewController:willAnimateDisappearanceWithContext:
_viewDidDisappearOnMainScreen:
_viewController:animateDisappearanceWithContext:
setShowsStatusBar:
willAnimateAppearanceFromContext:
animateAppearanceFromContext:
willAnimateDisappearanceFromContext:
animateDisappearanceFromContext:
handleBluetoothDismissal
presentSiri:viewController:forBundleIdentifer:
_presentForMainScreenAnimated:completion:
uiPluginAttemptDeviceUnlock:withPassword:lockViewOwner:
currentCarPlayExternalDevice
borrowScreenForClient:reason:
uiPlugin:launchApplicationWithBundleID:openURL:
uiPlugin:isNowRunning:
uiPlugin:setExpectsFaceContact:
assistantAnimationDuration
assistantDismissAnimationDurationOverApp
handleSiriButtonDownEventFromSource:activationEvent:
handleSiriButtonUpEventFromSource:
handleSiriPreheatCommand
dismissAssistantView:forAlertActivation:
activateIgnoringTouches
mainScreenView
transferOwnershipOfAuthenticationAssertion
_dismissUIPlugin:animated:
uiPluginWantsActivation:forEvent:completion:
uiPlugin:launchApplicationWithBundleID:openURL:allowDismissal:
uiPlugin:openURL:
uiPluginUserEventOccurred:
uiPlugin:forceUpdateToInterfaceOrientation:animated:
unlockedDevice
_operationQueue
_appDisplayIDBeingHosted
_assistantWindow
_unlockedDevice
_launchedInStark
_isHidingOtherWindows
_activationEvent
_disableAssertion
_dismissingReasons
_pendingDismissViewType
_mainScreenViewController
_mainDisplayLayoutElement
_starkDisplayLayoutElement
_hideApplicationModalAlertsAssertion
_pendedCarPlayActivationBundleIdentifier
_count
_previousContentOffset
_previousScrollTime
_rawContentOffsetVelocity
notificationCenterDidDismiss:
_handleTap:
setMaximumSingleTapDuration:
_handlePress:
_handlePan:
setGestureHandlingEnabled:
_removeTapGestureFailureRequirementFromGuestGestures:
setTapGesture:
setLongPressGesture:
setPanGesture:
_installLocalGestures
activeController
_resetGestureSequence
_removeAllGestures
setFingerOnMesa:
_hasCoordinatedPresentingController:
_controller:managedGestureLikeGesture:
sb_briefDescription
_resetInitialPanLocation
_setLocalGesture:enabled:
_viewForGestures
_cameraGrabberZone
lockScreenCameraController
lockScreenBottomLeftAppController
_notificationController
_lockScreenNotificationListController
_lockScreenCameraController
_lockScreenBottomLeftController
_topGrabberZone
_bottomLeftGrabberZone
_bottomGrabberZone
_lockScreenNotificationListView
scrollableRegion
_canControllerWithIdentifier:becomeActiveWithTouchAtLocation:
_coordinatedPresentingControllerWithIdentifier:
_isPresentationEnabledForController:locationInWindow:
_isBounceEnabledForController:locationInWindow:
previousActiveController
setInitialPanLocationInViewSpace:
_tapPeriodElapsed
setGestureState:
setPreviousActiveController:
setActiveController:
setActiveHintEdge:
setInitialTouchTimeStamp:
isGestureHandlingEnabled
_reenableGestures
isBounceEnabledForPresentingController:locationInWindow:
isPresentationEnabledForPresentingController:locationInWindow:
_controllerForGesture:
_compareControllerWithIdentifier:withControllerWithIdentifier:
_doesController:manageGestureLikeGesture:
_isController:excludingViewsUnderGesture:
isFingerOnMesa
_initializeInitialTouchTimeStamp
activeHintEdge
_abortCurrentAnimationForController:
gestureState
tapGesture
_resetGestureSequenceAndReenableGestures
_updateControllerPresentationForTapOrPress:withAnimation:abortingCurrentAnimation:
_elapsedTapPeriod
maximumSingleTapDuration
isGuestGestureActive
_tapGestureForActiveController
_hasTapPeriodElapsed
_resetGesture:
_cancelGuestGesturesExcludingController:
_updateControllerPresentationForTap
_hintEdgeForController:
_updateActiveControllerPresentationForPress:
_dismissControllerForPress:abortingCurrentAnimation:
_didActiveControllerChange
_resetGesture:forController:
_updateGrabberStateForControllerIfNecessary:
_beginControllerPresentationForPan
_updateControllerPresentationForPan
_endControllerPresentationForPanInState:
_hintGestureShouldBegin:
setGuestGestureActive:
_presentingController:willHandleTap:
_presentingController:willHandlePan:
longPressGesture
panGesture
initialPanLocationInViewSpace
setGestures:
controllersToGuestGestures
setControllersToGuestGestures:
controllersToConflictingGuestGestures
setControllersToConflictingGuestGestures:
initialTouchTimeStamp
didEvaluatePressDelay
setDidEvaluatePressDelay:
_gestureHandlingEnabled
_guestGestureActive
_didEvaluatePressDelay
_fingerOnMesa
_tapGesture
_longPressGesture
_panGesture
_gestures
_controllersToGuestGestures
_controllersToConflictingGuestGestures
_gestureState
_previousActiveController
_activeController
_activeHintEdge
_initialTouchTimeStamp
_initialPanLocationInViewSpace
_initWithModalAlertPresentationCoordinator:sceneManager:scene:
_areSettingsBackground:
_visibleAlertCount
_isSystemPresenter
_invalidateTimer
_allDay
_labelType
applySettingsToCAAnimation:
_shouldFinishWithLocation:velocity:
_finishGestureWithDisplacement:velocity:
_stopAnimating
_newAnimationForShow:withDisplacement:velocity:
_pullDownDistance
maximumHeight
minimumHeight
_finalDisplacementForShow:
_boundaryForShow:finalDisplacement:
_pullForShow:finalDisplacement:
_pulledDown
_startedPulledDown
initWithPresentingViewController:
topViewController
setCoordinatedActionPerformingDelegate:
addViewController:animated:completion:
_alertController
removeViewController:animated:completion:
setAlertControllerDelegate:
_setPresented:
alertControllerDidDisappear:
modalViewControllerStack:willPresentViewController:
modalViewControllerStack:didPresentViewController:
modalViewControllerStack:willDismissViewController:
modalViewControllerStack:didDismissViewController:
_performActionForAlertController:invokeActionBlock:dismissControllerBlock:
currentlyPresentedAlertItem
_modalViewControllerStack
_setModalViewControllerStack:
_lockOutProvider
animationContext
_applyAlphaForFraction:
fadesReferenceView
_addedToWindow
_fadesReferenceView
numberOfPresses
setNumberOfPresses:
maxDefaultPressDownDuration
setMaxDefaultPressDownDuration:
maxDefaultPressUpDuration
setMaxDefaultPressUpDuration:
maxDownToDownDuration
setMaxDownToDownDuration:
indexOfPressDownToUseForVarianceAndGrowth
setIndexOfPressDownToUseForVarianceAndGrowth:
numberOfPressDownGrowthTerms
setNumberOfPressDownGrowthTerms:
indexOfPressUpToUseForVarianceAndGrowth
setIndexOfPressUpToUseForVarianceAndGrowth:
numberOfPressUpGrowthTerms
setNumberOfPressUpGrowthTerms:
pressDownVariance
setPressDownVariance:
pressUpVariance
setPressUpVariance:
_numberOfPresses
_maxDefaultPressDownDuration
_maxDefaultPressUpDuration
_maxDownToDownDuration
_indexOfPressDownToUseForVarianceAndGrowth
_numberOfPressDownGrowthTerms
_indexOfPressUpToUseForVarianceAndGrowth
_numberOfPressUpGrowthTerms
_pressDownVariance
_pressUpVariance
todayContentUnderlapsNavBar
navigationBarTopInset
_updateScrollViewVisibilityForSupportedModes
_updateScrollingEnabledForSupportedModes
_resetContentOffsetForSupportedModes
setNavigationBarTopInset:
todayContentView
updateContentInsets
_indexOfNotificationsPageView
scrollToPageAtIndex:animated:
_indexOfTodayPageView
_currentScrollViewMode
_scrollViewModeForIndex:
_shouldAllowScrollingForStyle:
_delegateCurrentModeWillChange:
_delegateCurrentModeDidChange:
searchEtceteraLayoutView:willChangeToMode:
searchEtceteraLayoutView:didChangeToMode:
setTodayContentUnderlapsNavBar:
_nextLogicalModeIfResigningSearch
setTodayContentView:
searchContentView
setSearchContentView:
notificationsContentView
setNotificationsContentView:
_todayContentView
_searchContentView
_notificationsContentView
_notificationsPageView
_todayPageView
_todayContentUnderlapsNavBar
_currentStyle
_navigationBarTopInset
_contentBottomInset
setDisplayMode:
wantsHighlightOnInsert
canBeRemovedByNotificationCenterPresentation
canBeRemovedByUnlock
setTimestamp:
isNewItem
setIsNewItem:
buttonLabel
setButtonLabel:
_timestamp
_isNewItem
_buttonLabel
addressBookRecordID
sectionIconImageWithFormat:
_update
_updateActiveBulletin
_updateSortDate
_updateDisplayDate
_updateMessage
subtypePriority
lastInterruptDate
sortedBulletins
setActiveBulletin:
suppressesMessageForPrivacy
sb_hasCustomSecondaryContent
_suppressesMessageForPrivacy
maxMessageLines
bulletinWithID:
listTextForAdditionalAttachmentCount:
letterCharacterSet
rangeOfCharacterFromSet:
hasSamePersonAsBulletin:
coalescesWhenLocked
_hasCustomSecondaryContent
allowsAutomaticRemovalFromLockScreen
canSnooze
responseForSnoozeAction
send
initWithBulletin:andObserver:
removeAllBulletins
containsBulletinWithID:
canCoalesceWithBulletin:
snoozeButtonindex
setShouldPlayLightsAndSirens:
_personID
_contactInfo
_sortDate
_displayDate
_listItemImage
_shouldPlayLightsAndSirens
_activeBulletin
distantFuture
_notificationRequest
_setCurrentAlert:
preferredAction
_dismissWithAction:
initWithSystemAlert:
currentAlert
isAlarm
_currentAlert
_appImage
_showingButton
_isAlarm
iconData
_initWithData:scale:
thumbnail
setCardThumbnail:
body
setCardItem:
cardThumbnail
_cardThumbnail
stringValue
sbf_imageMaskedByColor:
_layoutNavigationControllerView
setNavigationControllerView:
navigationControllerView
_navigationControllerView
initWithSBAlertItem:
defaultNotificationActionForSBAlertItem:
dismissNotificationActionForSBAlertItem:
_genericImageForAttachmentType:
setConstraintType:
setFixedHeight:
setMinAspectRatio:
setMaxAspectRatio:
setFixedWidth:
setThumbnailScale:
setFixedDimension:
_imageFromPNGData:
_imageByCroppingOrPaddingImage:toSize:
_listImageForAttachmentType:thumbnailData:forFloatingAlert:
_nMoreAttachments:
_nAttachments:
bannerImageSizeForAttachmentType:thumbnailWidth:height:
lockScreenFloatingThumbnailContraintsForAttachmentType:
bannerThumbnailConstraintsForAttachmentType:
lockScreenFloatingImageForAttachmentType:thumbnailData:
bannerImageForAttachmentType:thumbnailData:
_buttonReleased:
setBaselineAdjustment:
effect
visualEffect
setVisualEffect:
_firstBaselineAnchor
isSideSwitcherEntity
_setObserverDelegateForStarkScreenManager:
bbObserverDelegate
bulletin
notificationController
_bulletinBannerSource
setBbObserverDelegate:
setFeed:
_bbObserverDelegate
_commonInitFromView:toView:alert:toDisplay:
nowPlayingSnapshot
_commonInitWithTransitionContextProvider:starkScreenController:waitForNowPlaying:initializationParametersBlock:
initFromNowPlayingToNowPlayingWithStarkScreenController:
initFromNowPlayingToApp:starkScreenController:
initFromAlertImpersonator:toNowPlayingWithStarkScreenController:
_initWithElements:andBreadcrumbState:andSideAppState:andExternallyManagedSideAppState:interfaceOrientation:
_initWithElements:andBreadcrumbState:andSideAppState:andExternallyManagedSideAppState:interfaceOrientation:sceneManager:appEntityGenerator:workspace:lockOutController:
breadcrumbState
setSideAppIdentifier:
presentationWidth
setPresentationWidth:
_stateWithElements:andBreadcrumbState:andSideAppState:andExternallyManagedSideAppState:interfaceOrientation:
wallpaperModeForLayoutRole:
includesStatusBarForLayoutRole:
sideAppWidth
externallyManagedSideAppPresentationStyle
externallyManagedSideAppWidth
externallyManagedSideAppState
_sideAppState
_externallyManagedSideAppState
_appEntityGenerator
_breadcrumbState
_acquireResignActiveAssertion
initWithFrame:vibrantSettings:
powerDownDelegate
setPowerDownDelegate:
resetScreenBrightness
_internalView
revokeAuthenticationImmediatelyIfNecessaryForPublicReason:
suggestedLockAnimationForTransitionRequest:
lockUIFromSource:withOptions:completion:
_authController
_initWithSeedBulletin:additionalBulletins:andObserver:
_setSound
defaultActionWithContext:
actionBlock
responseForAcknowledgeAction
behaviorParameters
initWithActionBlock:remoteViewControllerClassName:remoteServiceBundleIdentifier:actionIdentifier:activationMode:behavior:parameters:
_receivedTime
seedBulletin
_supportsSubActions
sb_minimalSupplementaryActions
_uiBannerActionForBBAction:context:
_defaultBBAction
launchActionWithBundleID:callblock:
actionWithIdentifier:
missedBannerDescriptionFormat
_seedBulletinMessage
itemWithBulletin:andObserver:
itemWithSeedBulletin:additionalBulletins:andObserver:
additionalBulletins
subActionLabels
subActions
_seedBulletin
_additionalBulletins
_setReceivedTime:
initWithNotificationIdentifier:
_windowFinishedRotating
_allowRotationOnMainWindowIfNecessary:
_invalidateCompletions
_animateToFractionFromContext:
_animateToFractionFromPendingContexts
_isDelayedForRotation
setHintFraction:
setBackgroundDarkeningView:
_hintFraction
_startAnimationAfterRotationEnds
_windowIsRotating
_pendedAnimationContexts
_animationContext
_instanceIdentifier
_hintAnimator
alertItemsSettings
disableBBHandlers
addAlertHandler:forSection:
_disabled
_buttonPredicate
_eventBlock
_supportsLayoutRole:
_supportsPresentationAtAnySize
_supportsDynamicResizing
voiceControlDisabledByCurrentlyRunningApp
_captureAppsForTransition
_willBegin
_performTransition
_sendActivationResultWithSuccess:
_willInterruptWithReason:
_willFailWithReason:
_evaluateTransitionCompletion
_prepareSynchronizedSceneUpdates
_updateScenesForTransitionCompletion
_overrideInterfaceOrientationForOrientationMismatch:
flushLayoutForDisplayType:
_beginLayoutTransitionNow
_synchronizeSceneUpdatesNow
_prepareScenesForTransition
setWaitsForSceneCommits:
synchronizedTransactions
_performSynchronizedCommit
_mainDisplayUpdateAggregateDictionaryForLayoutRoleWithApplication:
_setupKeyboardSuppression
setDefaultHostedLayerTypes:
primaryWindowOverlayInsets
_updateAggregateDictionary
deactivatingApplications
_teardownKeyboardSuppression
sceneIdentifier
sceneSettings
error
transaction:willLaunchProcess:
transaction:didLaunchProcess:
transaction:didCreateScene:
transaction:willUpdateScene:
transaction:willCommitSceneUpdate:
transaction:didCommitSceneUpdate:
synchronizedTransactionGroup:shouldFailForSynchronizedTransaction:
sceneUpdateTransactions
activatingApplications
_fbLayoutTransition
_transitionFailed
_delegateTransitionComplete
_synchronizeLayoutTransitionWithSceneUpdates
_performSceneUpdates
_waitForSceneUpdates
_sceneUpdateTransactionGroup
_scenesBackgroundedStatusAssertion
_updateTransactions
_appsBySceneID
_activatingAppsBySceneID
_deactivatingAppsBySceneID
_scenesToBackground
starkWindowDelegate
starkWindowDidTriggerUnhandledBack:
setStarkWindowDelegate:
_starkWindowDelegate
_ringerStateChanged:
soundType
_resolvedSystemSoundID
playSound:environments:completion:
stopSound:
_playSystemSound:
_playRingtone:
_playSong:
avItem
_playAVItem:forSound:
_playToneAlert:
_playFeedback:
_setCompletionBlock:
_soundDidStartPlaying:
isPlaying:
_cleanupSystemSound:andKill:
_killAVController
_cleanupToneAlertForSound:andKill:
_beginPendingCallbacksBlock
_stopAllAlerts
_endPendingCallbacksBlock
stopAllSounds
_soundDidFinishPlaying:
endInterruptionWithStatus:
systemSoundID
songPath
soundBehavior
_setResolvedSoundID:
ringtoneName
_filePathForToneIdentifier:isValid:
newAVItemForToneIdentifier:
avItemWithPath:error:
queueWithArray:error:
avControllerWithQueue:error:
controllerAttributes
isRepeating
setRepeatMode:
setVibrationEnabled:
maxDuration
_maxDurationReachedForAVController
beginInterruption:
play:
alertConfiguration
alertWithConfiguration:
playWithCompletionHandler:
eventType
_privateEventOccurred:
soundDidBeginPlaying:
_enqueueCallback:
soundDidFinishPlaying:
isPlayingAnySound
_soundsBySystemSoundIDs
_avController
_avControllerSound
_avControllerMaxDurationTimer
_avControllerObserver
_toneAlertsBySounds
_soundsByToneAlerts
_pendingCallbacks
_pendedCallbacks
setAppSnapshotView:
initWithFrame:settings:
setBlurView:
initWithAppView:
blurredAppSnapshotView
isCreatingBlur
setCreatingBlur:
blurContainerView
setBlurredAppSnapshotView:
appIconView
setBlurContainerView:
sb_generateSnapshotViewAsynchronouslyOnQueue:completionHandler:
generateBlurredAppSnapshotWithCompletionHandler:
setAppIconView:
_creatingBlur
_appIconView
_blurContainerView
_blurredAppSnapshotView
appSnapshotView
blurView
_appSnapshotView
setBlurHardEdges:
setLightenGrayscaleWithSourceOver:
setDarkeningTintSaturation:
setDarkeningTintBrightness:
setDarkeningTintAlpha:
setDarkenWithSourceOver:
minTranslation
_tearDownForceObserver
_lockOrientation
_setupAnimation
_releaseOrientationLock
sb_stringForState
playInitialHaptic
actuateFeedback:
canPop
initWithView:targetState:minimumRequiredState:
_setClassifierShouldRespectSystemGestureTouchFiltering:
setCompletesAtTargetState:
_updateInteractionProgressWithGesture:
_endInteractionWithGesture:
_cancelInteractionWithGesture:
forceDrivesInitialProgress
commitToNextAppTranslation
nextAppPopScale
initWithTransitionContextProvider:activatingDisplayItem:interactive:
_initialSpringVelocityForVelocity:withTranslation:
dismissAnimationEpsilon
dismissAnimationMass
dismissAnimationStiffness
dismissAnimationDamping
factoryWithMass:stiffness:damping:epsilon:initialVelocity:
_runPresentLayoutCompletionIfPossible
_translationWithVelocity:acceleration:
additionalThrowDisplacement
_requiresAdditionalAnimation
_noteDidCommitToActivatingSwitcher:didCommitToNextDisplayItem:
_transitionRequestForPresentationWithCommitment:toNextDisplayItem:
_beginDismissalWithCurrentTranslation:
_crossFadeToEndInteraction
presentAnimationMass
presentAnimationStiffness
presentAnimationDamping
_currentProgressForGesture:rawNormalizedTranslation:normalizedTranslation:
translateProgress
_currentProgressForForceObserver:withMaxProgress:
maxPopTranslation
_noteInteractionProgressWithGesture:orForceObserver:
_updateInteractionParameters:
_endInteractionWithParameters:velocity:
playCommitHaptic
_runDismissLayoutCompletionIfPossible
_forceObserver
_isPanning
_didAnimateToInitialPosition
_didFinishAnimatingToInitialPosition
_didPop
_didBump
_didCommitToSwitcher
_didCommitToNextDisplayItem
_didPerformPresentLayoutCompletion
_minNormalizedTranslation
_currentTransitionParameters
_currentVelocity
_presentAnimationController
_dismissAnimationController
_presentLayoutCompletion
_dismissLayoutCompletion
_dismissTransitionRequest
_alertToGoTo
transitionContext:updateTransitionProgress:
percentVisible
_configure
registerPressDownWithTimestamp:
registerPressUpWithTimestamp:
resetWithNewValidator:numberOfPresses:
_watchdogInterval
_noteTriggerActionRecievedResponse
response
sosDidTrigger:completion:
_noteTriggerDidBecomeActive
_noteTriggerDidBecomeInactive
sosTriggerDidBecomeActive:
sosTriggerDidBecomeInactive:
_configureSettings
initWithValidator:numberOfPresses:
_intervalThatSucceeds
pressSequenceRecognizerDidCompleteSequence:
pressSequenceRecognizer:didBeginPressDownAtIndex:
pressSequenceRecognizerDidFail:
resetWithNewConfiguration:
_setRecognizer:
_validator
_numberOfPressesThatTrigger
_numberOfPressesThatActivate
_recognizer
_lastKnownActiveState
_triggerAction
_projectedMotionForInterval:
_directionallyAcceptMotion:
_log:
requiredDirectionality
_matchedTemplate
ignoreTouch:forEvent:
_updateForTouchesBeganOrMoved:
_updateForTouchesCancelledOrEnded:
_failMeForReason:
_polygonForTouches:
_attemptTemplateMatchWithTouches:polygon:
_computeGestureMotionWithTouches:polygon:
templates
initWithTemplate:morph:
_failedRecognitionAttempts
_setMatchedTemplate:
_setMatchedPolygon:
mapTableWithKeyOptions:valueOptions:
_matchedPolygon
_possibleTemplates
_initialTouchPointMap
_setFailedRecognitionAttempts:
_trackingTouchCount
_setTrackingTouchCount:
_cumulativeMotion
_setCumulativeMotion:
_cumulativeMotionEnvelope
_setCumulativeMotionEnvelope:
_smoothedIncrementalMotion
_setSmoothedIncrementalMotion:
setAnimationDistance:
_recognitionBegan
_sequenceNumber
_templates
_animationDistance
_requiredDirectionality
_transformAnalyzer
morphedCandidate
touchTemplate
_morphedCandidate
_touchTemplate
_editBackgroundImage
_clearButtonImage
setClearButtonMode:
setReturnKeyType:
setMinimumFontSize:
_textLabelView
_updateLegibilityView
textRect
renderInContext:
textRectForBounds:
allowsEditing
clearButtonRectForBounds:
_textRectForBounds:
updateForChangedSettings:
setShowsEditUI:animated:
setFontSize:
fontSize
setAllowsEditing:
_showingEditUI
_legibilityView
_allowsEditing
_keyboardWillChange:
_removeInteractiveViewController
_removeButtonViewController
_removeAccessoryViewController
_removeSecondaryContentViewController
_removeInlayContentViewController
sbf_bannerGraphicsQuality
_bannerViewCreatingIfNecessary
setSeparatorVisible:
setBackgroundImage:
_updateMaximumHeights
_loadRemoteViewControllersWithCompletion:
remoteInteractiveAction
_setInlayContentViewWithCompletion:
_setPullDownViewWithCompletion:
_setAccessoryViewWithCompletion:
_setSecondaryContentViewWithCompletion:
canPullDown
setModal:
_noteDidPullDown
interactiveNotificationDidAppear
percentPulledDown
_bannerContentHeight
_preferredPullDownViewHeight
_hasActions
handleActionIdentifier:
_handleBannerTapGesture:
setTouchesBeganBlock:
setTouchesEndedBlock:
_newBackgroundViewWithFrame:
_handleBannerContainerTapGesture:
setBannerView:
_bannerFrameForOrientation:
_updateMaximumHeightsWithOrientation:
_handleBannerTapGesture:withActionContext:
getActionContextWithCompletion:
textInputAction
_setInteractiveViewController:
requestInteractiveNotificationControllerWithName:bundleIdentifier:context:completion:
setTextInputDelegate:
setActionIdentifier:
setButtonTitle:
_newButtonViewController
_setButtonViewController:
bottomOverhangHeight
_miniumBannerContentHeight
_updateMaximumContainerHeightForOrientation:
_updateMaximumPullDownViewHeight
_updateMaximumBannerHeight
preferredMaximumHeight
setMaximumHeight:
_pullDownViewHeight
setPullDownViewHeight:
_maximumPullDownViewHeight
setPullDownView:
_pullDownBottomOverhangHeight
setPullDownBottomOverhangHeight:
_addChildViewController:withTransition:
_removeChildViewController:withTransition:
bannerAccessoryRemoteViewControllerClassName
bannerAccessoryRemoteServiceBundleIdentifier
_setAccessoryViewController:
requestBannerAccessoryViewControllerWithName:bundleIdentifier:context:completion:
setAccessoryView:
secondaryContentRemoteViewControllerClassName
secondaryContentRemoteServiceBundleIdentifier
_setSecondaryContentViewController:
requestContentViewControllerWithName:bundleIdentifier:context:completion:
setSecondaryContentView:
inlayViewService
viewControllerClassName
_setInlayContentViewController:
setInlayView:
_setInteractiveViewController:animated:
replacePullDownViewWithView:animated:
_addChildPullDownViewController:
_removeChildPullDownViewController:
transitionToAction:
actionIdentifier
actionForIdentifier:
raiseAction
responseForAction:
sb_supportsRaiseAction
_bannerFrame
hostViewControllerDidChangePreferredContentSize:
hostViewController:didRequestDismissalWithContext:
hostViewController:didEnable:actionAtIndex:
hostViewController:serviceRequestedDismissalEnabled:
textInputViewController:didSendTypedText:
hostViewControllerDidRequestDismissal:
hostViewControllerDidRequestSticky:
hostViewController:didRequestSticky:
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
_percentDismissed
backgroundImage
_interactiveViewController
_accessoryViewController
_inlayContentViewController
_buttonViewController
_notifiedAppeared
_manualDismissalEnabled
_bannerContextView
_maximumBannerHeight
_remoteLoadingGroup
setPageController:
setTodayViewControllerDelegate:
numberOfWidgetsChanged:
unregisterAllViews
dashBoardTodayViewController:contentViewsDidChange:
setTodayViewController:
shouldDisableLiveIcons
_dismissAnimationCompleted
passcodeAlertViewShouldAnimatePresentation:
passcodeAlertViewShouldShowAutomaticallyWhenVisible:
setPasscodeViewsToVisible:animated:completion:
_dismissing
initWithQueue:asGateway:priority:
gestureDefaults
_evaluateEnablement
_isMultitaskingGesturesEnabled
_updateUserPreferences
_isGestureWithTypeAllowed:
isSystemGesturesAllowed
_setMultitaskingGesturesEnabled:
_shouldEnableSystemGestureWithType:
_isTouchGestureWithType:
_gestureDefaults
_multitaskingGesturesEnabled
setLogoutProgressAlert:
_defaultPendingApplications
setRemainingApplications:
_defaultBlockingTasks
setRemainingBlockingTasks:
logoutProgressAlert
remainingApplications
remainingBlockingTasks
_tasks
_logoutProgressAlert
_remainingApplications
_remainingBlockingTasks
sb_yPositionForLabelWithContainerBounds:lineHeight:baselineOffset:font:
initWithImageGenerationBlock:
_block
queueLock
setQueueLock:
blockTimerDidFire:
fire
_queueLock
setTestRecipeClassName:
setWindowAlpha:
testRecipeClassName
windowAlpha
setPreventLockover:
_preventLockover
_testRecipeClassName
_windowAlpha
_save:url:error:
_delete:error:
_load:error:
dataWithContentsOfURL:options:error:
URLByDeletingLastPathComponent
writeToURL:options:error:
currentIconStateURL
desiredIconStateURL
_currentIconStateURL
_desiredIconStateURL
_deleteLegacyState
legacyIconState
legacyIconState2
createSceneWithIdentifier:display:settings:initialClientSettings:clientProvider:transitionContext:
fbsSceneWithIdentifier:
initWithScreen:layoutStrategy:debugName:scene:
_scene2
_doTheThing
iconWindow
calculatedDuration
_cleanupEverything
_finishedCleanup
setAssistantAnimationDuration:
setAssistantDismissAnimationDurationOverApp:
setSpotlightNoninteractiveAnimationDuration:
_assistantAnimationDuration
_assistantDismissAnimationDurationOverApp
_spotlightNoninteractiveAnimationDuration
_simStatusChanged:
setAttributes:range:
_formattedIMEI
_formattedCSN
_formattedICCID
_updateTextView
_formattedString:withSpaceAfterDigits:
insertString:atIndex:
_meid
_imei
_iccid
_csn
_isOnBootstrap
_alertHeight
_regulatoryInfoButton
notifyWhenNowPlayingIsActive:withTimeout:
indexSetWithIndex:
objectsAtIndexes:
removeNodeAtIndex:
removeAllNodes
_nodes
_index
_createSuggestionSources
_listenForNotifications
_stopListeningForNotifications
_destroySuggestionSources
stopListeningForBestAppSuggestions
_evaluateSuggestionUpdates:
_screenDidUndim:
_screenDidDim:
_handleInitialSpringBoardLaunch
queueFetchOfPayloadForBestAppSuggestion:
_nextUserEventOccured:
_setContinuitySuggestionUpdatesEnabled:expertCenterSuggestionUpdatesEnabled:
startListeningForBestAppSuggestions
setValue:forState:
postEventToInterestedObservers:
_calculateBestSuggestionAndNotifyListeners
bestAppSuggestionWasLaunched:withInteractionType:
bestAppSuggestionLaunchWasCancelled:
initWithAppSuggestion:
bestAppSuggestionMayHaveChanged
bestAppSuggestionChanged:
connectionInterrupted
_continuitySuggestionManager
_continuityCurrentBestSuggestion
_currentBestSuggestion
_isListeningForContinuitySuggestion
_isListeningForExpertCenterSuggestion
_screenOnDueToUserEvent
_screenOnAndLookingForEvent
originatingDeviceIdentifier
indexPathWithIndexes:length:
_invalidateSceneDerivedObjects
_configureWithScene:
_layoutTransitionDidEnd
isPairedWithExternalSceneID:
setHasKeyboardFocus:
_updateSideSwitcherGrabber
isTransitioningForDisplayType:
effectiveSceneSettings
observeFrameWithBlock:
observeLevelWithBlock:
appContainerViewControllerPreferredLayoutLevelDidChange:
_updateEffectiveLayoutElementVisibility
observeIsBackgroundedWithBlock:
observeStatusBarStyleWithBlock:
observeStatusBarHiddenWithBlock:
isSideSwitcherGrabberHidden
setSideSwitcherGrabberHidden:forRequester:
setSceneIdentifier:
_sceneIdentifier
_monitor
_settingsInspector
_effectiveSettingsInspector
_sideSwitcherHiddenRequesters
setCurrentState:
setDesiredState:
currentState
desiredState
_currentState
_desiredState
_initWithNodeIdentifier:icon:
_nodeIdentifier
_resetDelayState
_fail
_processPresses:
_succeed
_allRequiredButtonsDown
maximumIntervalBetweenPresses
_downTimer
_currentlyPressedTypes
_didGetRequiredSimultaneousDowns
_maximumIntervalBetweenPresses
systemYellowColor
systemRedColor
systemGreenColor
initWithFrame:isInternalBattery:lowBatteryLevel:
setChargePercentage:
_chargePercentage
_lowBatteryLevel
_isInternalBattery
_chargePercentFont
maskImageNameForChargingBattery
maskImageNameForInternalChargingBattery
maskImageNameForExternalChargingBattery
_updateChargeString:oldLabel:
alignmentPercent
_alignmentPercent
setMask:
setGrayscaleTintMaskImage:
setColorTintMaskImage:
setFilterMaskImage:
_layoutBattery
_layoutChargePercentLabel
timeSubtitleBaselineY
timeLabelBaselineY
timeFont
_batteryNoseOffset
timeSubtitleFont
_batteryContainerView
_batteryBlurView
_batteryFillView
_chargePercentLabel
_batteryConstraints
_batteryTopOffset
_batteryImage
imageWithRenderingMode:
_spaceBetweenBatteryImages
_batteryTopPadding
_chargingBoltTopOffset
_deviceNameBaselineOffset
_deviceChargeBaselineOffset
_internalBatteryContainerView
_externalBatteryContainerView
_internalBatteryBlurView
_externalBatteryBlurView
_internalBatteryFillView
_externalBatteryFillView
_internalChargePercentLabel
_externalChargePercentLabel
_internalChargingNameLabel
_externalChargingNameLabel
_internalChargingIndicator
_externalChargingIndicator
_fromOTASoftwareUpdate
isQuietModeEnabled
quietModeState
_quietModeEnabledAndActive
_quietModeState
initWithObserver:flags:
flags
_flags
registerAlertManager:forScreen:
_integerDisplayID
definition
identityForIdentifier:workspaceIdentifier:
localIdentity
setClientIdentity:
specification
setSpecification:
parametersForSpecification:
createSceneWithDefinition:initialParameters:
occlusionWithRect:
_activate:
_makeAlertWindowOpaque:
_resetAlertWindowOpacity
_createAlertWindowIfNecessaryForAlert:
_removeFromView:oldAlertIndex:
setDeferredAlertWindow:
setAlertWindow:
occlusions
setOcclusions:
alertWantsToForceWallpaperTunnelUpdate:
setAlertsShouldDeactivateAfterLaunch
applicationWillAnimateActivation
applicationFinishedAnimatingBeneathAlert
deferredAlertWindow
_alertServerScene
_alertClientSceneOcclusions
_alertClientScene
_alertWindow
_deferredAlertWindow
_alerts
_removalPendingAlerts
_deactivatingAllAlerts
_delegateFlags
initWithScreenController:
_group
setSublayerTransform:
_calculateCentersAndCameraPosition
setDockOffscreenFractionModifier:
_positionView:forIcon:
setZPosition:
dockOffscreenFractionModifier
hasDock
_iconZoomDelay
_animationFactoryForIcon:
_animationFactoryForDock
_animationFactoryForFolderView
zoomView
cameraPosition
_zoomView
_folderView
_iconZoomedZ
_centerRow
_centerCol
_cameraPosition
_dockOffscreenFractionModifier
appTransitionView:animationWillStartWithDuration:afterDelay:
appTransitionViewAnimationDidStop:
_animationBegan
_animationEnded
_notifyDelegateAnimationBeganWithDuration:delay:
_notifyDelegateThatAnimationIsDone
initWithApplication:name:
_removeObserversForPlugin:
setHost:
setPluginController:
registeredWithHost
_noteDeviceLockedOrBlocked
_uiLocked:
_deviceBlocked:
_remoteLocked:
_restoreOrientation
handleActivationEvent:eventSource:context:
handledPasscodeUnlockWithCompletion:
handledButtonDownEventFromSource:
handledButtonUpEventFromSource:
handledButtonTapFromSource:
_uiPluginAttemptDeviceUnlockWithPassword:
deviceUnlockSucceeded
deviceUnlockFailed
_processAuthenticationRequest:responder:
uiPluginWantsDismissal:withAnimation:
uiPluginExpectsFaceContact:
_setAuthController:
_isPluginRunning
lockButtonPressed:
volumeChanged:
_handleAction:withName:
destination:performAction:forNotificationRequest:withParameters:completion:
shouldDismissNotification
_dismissFromSignificantUserInteraction
_handleSilenceAction
_handlePrimaryAction
_handleDismissAction
_handleSecondaryAction
supplementaryActions
_primaryAction
_secondaryAction
_silenceAction
_assistantActivationSettingsDidChange:
shouldEnterVoiceControl
initFromMenuButton
resetVoiceControlIfNecessary:
initFromWiredHeadsetButton
_performDelayedHeadsetActionForAssistant
_performDelayedHeadsetActionForVoiceControl
_prepareDelayedHeadsetAction
_cancelDelayedHeadsetAction
handleHeadsetButtonUpFromActivation:
unregisterForAlerts
bluetoothDeviceRequestedVoiceControl:
bluetoothDeviceTerminatedVoiceControl:
setNextRecognitionAudioInputPaths:
_spokenLanguageDidChange:
_updateNextRecognitionAudioInputPaths:
_delayedAssistantActivationPending
_titleForAlternateActionButton
handleVolumeButtonPressed
_hasSnoozeAction
performSnoozeAction
_hasAlternateAction
performAlternateAction
performDismissAction
fullAlternateActionLabel
alternateActionLabel
_customTitleForAlternateActionButton
_calculatedTitleForAlternateActionButton
_alternateAction
performAction:
handleTapGestureFromView:
bulletinItem
setBulletinItem:
_bulletinView
_performedAction
_bulletinItem
setBodyText:
bodyText
_body
setBody:
setSnoozeable:
defaultTimeZone
triggerWithDate:timeZone:remainingRepeatCount:totalRepeatCount:repeatInterval:repeatCalendar:
requestWithIdentifier:content:trigger:
notificationWithRequest:date:
_publishBulletinForNotification:
_initWithDefaultPNGName:extension:minOSVersionString:size:interfaceOrientation:
validInfoPlistOrientationKeys
_sanitizedImageNameFromName:withExtension:actualExtension:
appendSize:
appendCGSize:counterpart:
modifyProem:
defaultPNGName
extension
minOSVersionString
_defaultPNGName
_extension
_minOSVersionString
_size
_modelWillLayout
_modelDidLayout
_backlightFadeFinished
_lockScreenSnapshotProvider
_homeScreenSnapshotProvider
regenerateSnapshotsForLocations:withCompletion:
initWithFrame:iconController:wallpaperController:
_imageCache
_invalidatedLocations
_importStateWithoutLayout:
setHiddenBundleIdentifiers:
_showsOEMIcon
_hiddenBundleIdentifiers
_evaluateContentViews
_removeAllAnimations:
_updateAppearanceForScrollView:animated:
_setDashBoardScrollingDisabled:forReason:
_updateAppearanceForScrollView:
_isDashBoardScrollingDisabled
_updateBehavior
_dateMovingScrollView
pageController
suggestedContentInsetsForListForPage:pageBounds:
shouldAddNavBarInsetForStyle:
_searchNavigationBar
topContentInsetForSearchNavigationBar:
_desiredAlphaForScrollView:
_shouldHideDateTimeForZeroWidgetDisplay
_offsetForScrollView:
_maxClippingOffset
_restingValueForDateMovingScrollView
dateBaselineToListY
widgetCount
contentInset
shouldShowWeatherViewForStyle:
weatherView
clipProgressForScrollOffset:withPageBounds:
verticalSpacingBetweenWidgets
isWidgetVisible:
_focusSearchFieldWithCompletion:
_hitCancelButtonWithCompletion:
todayViewControllerDelegate
_dateViewComponent
_todayViewControllerDelegate
_showingMultiColumnLayout
_disableScrollingForModalPresentation
_contentViews
_scrollingDisabledReasons
_pageController
_legibilityImageSizeForSize:style:
_maxLegibilityImageSizeForLabelSize:
_strengthForLegibilityStyle:
_legibilityImagePool
_drawImageForLegibilitySettings:strength:size:
_initWithCGImage:scale:orientation:parameters:
sbf_imageFromContextWithSize:scale:type:pool:drawing:encapsulation:
_legibilityImageCountedMap
_legibilityImageForIconLabelImage:parameters:
isIconLabelLegibilityImage
_parameters
_updateLockState
_descriptionForLockState:
_lockState
showPasscode
initForFailureShowingPasscode:
vibrate
jiggleLock
result
initForSuccess
initForFailureWithFailureSettings:
_vibrate
_showPasscode
_jiggleLock
_result
_deviceInformationParagraphSpacing
_deviceInformationLabelFontLeading
rangeOfComposedCharacterSequenceAtIndex:
applyKerning:whitespaceKerning:toAttributedString:
boundingRectWithSize:options:context:
roundedRectBezierPath:withRoundedCorners:withCornerRadius:
drawWithRect:options:context:
drawWithRect:options:attributes:context:
rangeOfCharacterFromSet:options:range:
_rectWithDrawing:inRect:fromParameters:
rectFromParameters:constrainedToRect:
drawImageInRect:fromParameters:
_initWithCGImage:scale:orientation:parameters:maxSizeOffset:
_parametersWithDefaultStyle:
_labelImageCountedMap
_drawLabelImageForParameters:
_maxSizeOffset
_invalidateDisableTimer
_updateNowPlayingPlugin
_removeObservers
_updateToState:
_isMediaRecentlyActive
_startDisableTimer
_disableTimerFired
isNowPlayingActive
_mediaController
_disableTimer
_setAssociatedDisplay:
associatedDisplay
setAssociatedDisplay:
manualDismissalHandler
setManualDismissalHandler:
_manualDismissalHandler
setAnimatePasscodePresentation:
_passcodeEntryAlertView
_configurePasscodeView:
animatePasscodePresentation
_authenticationCancelled
_presentEmergencyCall
initWithData:encoding:
_authenticationSuccess:fromMesa:
_authenticationFailure:fromMesa:
passcodeEntryAlertViewController:authenticatePasscode:
_attemptUnlock:passcode:
passcodeEntryAlertViewControllerWantsEmergencyCall:
setShowEmergencyCallButton:
showEmergencyCallButton
_wantsToHandleItsOwnAnimation
_passcodeRequester
_showEmergencyCallButton
_animatePasscodePresentation
hardwareButtonDelegate
_handleBiometricsFetchUnlockCredentialSetMessage:fromClient:
_handleHardwareButtonAcquireAssertionMessage:fromClient:
_handleHardwareButtonSetPressEventMask:fromClient:
_handleHardwareButtonSetHapticType:fromClient:
_handleHardwareButtonGetHapticType:fromClient:
biometricsDelegate
systemServiceServer:client:fetchUnlockCredentialSet:
noteClientDidDisconnect:
setBiometricsDelegate:
_biometricsDelegate
_hardwareButtonDelegate
setSnapshot:
snapshotImageView
setSnapshotImageView:
snapshotReferenceFrame
setSnapshotReferenceFrame:
_snapshotImageView
_snapshotReferenceFrame
initWithDisplayItem:application:orientation:preferringDownscaledSnapshot:async:withQueue:
setOrientation:orientationBehavior:preferringDownscaledSnapshot:
_updateTranslucency
_snapshotChanged:
_setCornerRadiusIfNecessaryForSnapshotImageView:
CGPath
setPath:
_layoutContainer
_rotationTransformForOrientation
_transformOrientation
_loadSnapshotAsyncPreferringDownscaled:
_loadSnapshotSyncPreferringDownscaled:
_prepareStatusBarIfNeededForTransitionRequest:initialProgress:
_needsDifferentSnapshotForMedusaForLayoutState:
_crossfadeToZoomUpViewIfNecessaryForTransitionRequest:
statusBarLayoutFrame
setUsesNonuniformScaling:
setHasOpaqueContents:
_loadZoomUpSnapshotSyncForTransitionRequest:
_configureSnapshotImageView:
setUpdateCrossfadeView:
_crossfadeToNewSnapshotImage:withSnapshotContext:
_snapshotImageFrameForContext:
_frameForBackstopLayer
purgeImage
shouldTransitionToDefaultPng
_contextForAvailableSnapshotWithLayoutState:preferringDownscaled:defaultImageOnly:
_syncImageFromSnapshot:
variantID
cachedImageForInterfaceOrientation:
_loadImageAsyncFromSnapshotContext:
_queue_keepGoing
fileFormat
_snapshotImageLoaded:forSnapshotContext:downscaled:
_queue_createDecodedImageIfPossible:
_loadImageAsyncFromSnapshotContext:displayItem:
insertSublayer:atIndex:
removeFromSuperlayer
setFillColor:
setStatusBarLayoutFrame:
appSwitcherSnapshotViewForDisplayItem:orientation:preferringDownscaledSnapshot:loadAsync:withQueue:
_fallbackDefaultBackgroundColor
setShouldTransitionToDefaultPng:
updateCrossfadeView
_snapshotContext
_solidColorBackstopLayer
_updateCrossfadeView
_zoomUpCrossfadeView
_zoomUpSnapshotContext
_deferredUpdateSnapshotContext
_loadedImage
_needsZoomUpImage
_needsTwoAppZoomUpBackground
_preferDownscaledSnapshot
_appSnapshotUpdatedSequenceID
_snapshotQueue
_shouldTransitionToDefaultPng
_statusBarLayoutFrame
_clientPort
_handleUIRelock
lockScreenTestPluginSettings
_refreshLockScreenPlugin
_loadLockScreenPluginWithContext:
auxiliaryAnimation
_handlePluginDisabled:withContext:
_sendEventToPlugin:
_highestPriorityPluginIgnoringViewDisplay:
_setActivePlugin:displayedPlugin:
_pluginForPluginController:
activePlugin
displayedPlugin
_plugins
_activePlugin
_displayedPlugin
initWithIdentifier:andApplication:
setAutomatesLifecycle:
setIgnoresOcclusions:
_setResignActiveAssertionEnabled:
requestedMode
_setMode:fromClient:forReason:
configureDisplayLayoutElement:
setRequestedMode:
appViewController:shouldTransitionToMode:
appViewController:didTransitionFromMode:toMode:
appViewControllerWillActivateApplication:
appViewControllerDidDeactivateApplication:
_authenticationAssertion
_cachedBasicPublicDescription
slowPressDuration
appendTimeInterval:withName:decomposeUnits:
_isTimerRunning
_cancelTimer
_timerFired
setSlowPressDuration:
_slowPressTimer
_setSlowPressTimer:
_bioUnlockOccurredWhileTimerWasRunning
_slowPressDuration
_label
_labelOffset
_labelSize
_trigger
passcodeRequiredEventsCountAsFailures
_handleMesaFailure
_feedbackForPasscodeEvent
flashRedOnPasscodeRequiredEvents
_feedbackForBioUnlockEventThatWasSpontaneous:
successFeedbackWaitsUntilButtonUp
_failureSettingsForFailAttempt:
_feedbackForFailureSettings:
waitUntilButtonUp
firstFailureSettings
secondFailureSettings
thirdFailureSettings
fourthFailureSettings
fifthFailureSettings
_setTrigger:
_getHomeHardwareButton
_setHomeHardwareButton:
_failedMesaUnlockAttempts
_mesaUnlockBehaviorDelegate
_simulateScrollToIconWithDisplayIdentifier:
_openAppStore
_searchIsVisible
_todayViewIsVisible
_lastPresentationSource
_currentPresentationSource
setAutomaticallyAdjustsScrollViewInsets:
_updateTodayViewContentInsets
__viewClass
_createMultiplexedChildViewControllers
_cleanupTransitionStateTracking
_statusBarWasTapped:
navigationItem
contentSizeForContainerSize:
_isolationWindowRectDidChange:
_onlySupportsSearch
_containedViewController:willAppear:
_performStateChangeForEligibleContainedViewControllers:
_containedViewController:didAppear:
_containedViewController:willDisappear:
_containedViewController:didDisappear:
shouldUseMultiLineDateViewForStyle:
transitionWithView:duration:options:animations:completion:
_searchPresentationSourceForThisTransition
_shouldPresentSearchFromSource:
_captureStateForNavigationControllerTransitionTo:
_isPoppingToSearch:
_isInteractivePopToSearch:
searchViewWillPresentFromSource:
_setOrientationLockOverrideForSearch:
searchViewDidPresentFromSource:
_postNotificationForSearchVisibilityChanged
_resetStateForNavigationControllerTransitionTo:
_searchDismissalReasonForThisTransition
_isPushingOverSearch:
_shouldDelaySearchWillDismissWithReason:
searchViewWillDismissWithReason:
searchViewDidDismissWithReason:
_setCurrentMode:animated:interactive:animations:completion:
_updateTodayViewAppearanceForCurrentStyle
setShouldBlurContent:
_setSearchViewController:
_initializeTodayViewControllerIfNecessary
_setDateViewController:
_updateAlternateDateLabel
_setNotificationCenterDestination:
todayListMajorScrollView
_scrollToTopIfPossible:
todayListMinorScrollView
viewControllerForMode:
_deviceSupportsWeatherDisplay
todayView
contentInsetsForStyle:bounds:contentSize:navigationBarInset:
pullDownSearchGestureYOffset
widgetListViewEdgeInsetsIncludingSearchHeader:
pullDownSearchGestureDraggingFromTopOfScrollView:
_updateWeatherAndDateViewOffsetsForScrollView:
pullDownSearchGesturePercentComplete
setShouldAllowVisibleSeparator:
_enterSpotlightInteractively
handleDraggingWillEndWithTargetContentOffset:forScrollView:
handleScrollingEnded:
defaultRestingOffsetForStyle:navigationBarInset:
adjustTargetContentOffset:forScrollView:withDefaultRestingOffset:
_updateAccessoryLegibility
_captureTransitionStateTrackingForTransitionToMode:
_propagateLifecycleMethodsOnWillChangeToModeAnimated:reverse:
_propagateLifecycleMethodsOnDidChangeToModeAnimated:reverse:
_setMode:animated:
setTodayView:
setTodayListMajorScrollView:
setTodayListMinorScrollView:
setWeatherView:
setSearchView:
setNotificationsView:
setNotificationListInsetMargins:
insetMargins
notificationsContainerViewController
_setNotificationViewController:
_weatherWidgetVisibilityChanged
invalidateVisibleWidgets
_propagateLifecycleMethodsOnWillChangeToModeAnimated:
_propagateLifecycleMethodsOnDidChangeToModeAnimated:
_shouldNotifyWeatherWidgetForAppearanceChanges
_viewControllersToNotifyOfStateChanges
isInteractiveTransition
lastOperation
initWithAnimator:
_returnToRootViewControllerForSearchIfNeeded:
_willChangeToMode:animated:
_didChangeToMode:animated:
_nextModeIfResigningCurrentMode
isTransitioningFromSpotlight
popToRootViewControllerAnimated:
_updateWeatherLegibility:
_updateDateViewLegibility:
_updateSearchLegibility:
_updateWidgetLegibility:
setShouldUnderlapNavigationBar:
_setTodayViewController:
_setWeatherViewController:
setWeatherViewOffset:
_updateSearchViewControllerForIsolationTankOffsetX:
setRoundedCornerVisible:
viewDidMoveToWindow:shouldAppearOrDisappear:
notificationSectionSettingsForDestination:
notificationSectionSettingsForDestination:forSectionIdentifier:
destination:requestsClearingNotificationRequests:
_containingNavigationControllerDidDisappear
_setNotificationListContainerViewController:
defaultMode
widgetsBlurContent
_weatherViewController
_transitioningFromMode
_transitioningToMode
_transitioningFromChildViewController
_transitioningToChildViewController
_currentTransitionAnimator
_userInteractionDisabledReasons
_pullToSearchPossible
_pullToSearchRecognizing
transitionedToSearchInteractively
_scrollViewContentOffsetDirty
_isInteractivePopToSearch
_poppingToSearch
_pushingOverSearch
_searchControllerRequestedReset
_widgetEffectViews
_isolatedViewControllerFlags
_widgetsBlurContent
_widgetGroupDelegate
_searchDelegate
_defaultMode
_defaultSearchViewPresentationSource
_defaultSearchViewDismissalReason
allProcesses
enumerateScenesWithBlock:
launch
_referenceForDisplay:creatingIfNecessary:
_sceneManagerForDisplay:creatingIfNecessary:
preferredLevel
workspace:didReceiveCreateSceneRequestForIdentifier:initialClientSettings:withCompletion:
workspace:didReceiveDestroySceneRequestForIdentifier:withCompletion:
_displayToReferenceMap
containsValue:
_countedKeys
_map
setResetRestoreText:
isFinished
isExecuting
addTask:
main
humanReadableDescription
setHumanReadableDescription:
_humanReadableDescription
_operationGroup
setupInteractiveSideAppAnimationIfNecessary
infoOverlayWantsDismissal
captureFlagsForActivatingApp:
orientationAtLaunch
_isTransitionToSpotlight
_setupDisplayModeForAppView:displayMode:
statusBarFrameForSnapshotFrame:orientation:statusBarStyleRequest:hidden:
addStatusBarToView:withSize:destinationFrame:interfaceOrientation:scaleFactor:styleRequest:statusBarDescriptor:hidden:
_setupDisplayModeForActivatingAppView:
_evaluateTransparency
_invalidateWrapperView:
_mainScreenSnapshot
_setFromView:
_setupDisplayModeForDeactivatingAppView:
_performCrossfadeIfNeeded
fromAppWantsLiveContent
setFromAppWantsLiveContent:
forCommandTab
setForCommandTab:
_homeScreenHostWrapper
_dosidoAnimator
_requiresHostView
_fromAppWantsLiveContent
_dosidoDidComplete
_crossfadeDidComplete
_forCommandTab
offersMigration
_offersMigration
setWallpaperInContentsRect:
setWallpaperOutContentsRect:
valueFormatter:
setBacklightFadeDuration:
setSpeedMultiplierForFadeIn:
setSpeedMultiplierForLiftToWake:
setDateInSettings:
setOverlayInSettings:
setContentInSettings:
setWallpaperInSettings:
setDateOutSettings:
setOverlayOutSettings:
setWallpaperOutSettings:
_backlightFadeDuration
_speedMultiplierForFadeIn
_speedMultiplierForLiftToWake
_dateInSettings
_overlayInSettings
_contentInSettings
_wallpaperInSettings
_dateOutSettings
_overlayOutSettings
_wallpaperOutSettings
_wallpaperInContentsRect
_wallpaperOutContentsRect
_scheduledClockPendingNotificationRequestsDidChange:
setActivePlugin:
prepareForRemoval
_setDeferredModelUpdateBlock:
prepareForTeardown
removeAllCachedBanners
cellAtTouchLocation:
_firstItemWantingFullscreenPresentation
presentFullscreenBulletinAlertWithItem:
isUsingBanners
notificationListBecomingVisible:
_presentFullscreenBulletinAlertIfNeeded
concealForChangeInMessagePrivacy
_newItemForBulletin:shouldPlayLightsAndSirens:
_shouldCacheBannerForBulletin:
cacheBannerForBulletin:completion:
_addItem:forBulletin:playLightsAndSirens:withReply:
_listItemContainingBulletinID:
_coalescableListItemForNewBulletin:
_updateModelAndViewForAdditionOfItem:
_updateModelAndViewForModificationOfItem:
modifyFullscreenBulletinAlertWithItem:
hasRemoteViewAction
removeCachedBannerForBulletinID:
_removeCachedBannerForBulletinID:
_updateModelAndViewForRemovalOfItem:
dismissFullscreenBulletinAlertWithItem:reason:
_listItemContainingSystemAlert:
_listItemContainingCardItem:
_activateOrUpdateCardItem:animated:
isFromSnooze
_sortItemList:
updateForAdditionOfItemAtIndex:allowHighlightOnInsert:
_shouldAddBannerItem:
updateForModificationOfItemWithOldIndex:andNewIndex:
updateForRemovalOfItemAtIndex:removedItem:
_updateModelForRemovalOfItem:updateView:
removeLockScreenNotificationsPassingTest:
updateForRemovalOfItems
lockScreenDidEndScrollingOnPage:
_dismissBulletinsForActionContext:
lockScreenScrollView
scrollingGesture
actionWithLaunchURL:callblock:
setBulletinID:
setLastInterruptDate:
setRecencyDate:
shouldTestBannerPlayTextTone
setDateFormatStyle:
setHasEventDate:
actionWithLaunchBundleID:
setRaiseAction:
setAuthenticationRequired:
setSupplementaryActions:forLayout:
targets
bannerTargetManager:didAddTarget:
bannerTargetManager:didRemoveTarget:
bannerEnablementChanged
hasAnyContent
initWithContext:
_showTestBulletin
visibleNotificationCells
_firstBulletinHasRaiseAction
_firstBulletin
addGestureObserver:
noteUnlockActionChanged:
listViewDidBeginScrolling:
listViewDidEndScrolling:
listView:cellDidBeginScrolling:
listView:cellDidEndScrolling:
noteListViewReadyForModelUpdate
listItemAtIndexPath:
peekNextBannerItemForTarget:
dequeueNextBannerItemForTarget:
newBannerViewForContext:
setIsOnscreen:
hasMissedUnreadNotifications
activateCardItem:animated:
deactivateCardItem:
updateCardItem:
_updateModelAndViewForReplacingItem:withNewItem:
removeItemsForUnlock
removeItemsForNotificationCenterPresentation
revealForChangeInMessagePrivacy
lockScreenViewDidEndScrollingOnPage:
quietModeEnabled
setHasAnyContent:
_listItems
_deferredModelUpdateBlock
_hasDeferredUpdateToClearListItems
_bannerTarget
_listItemsBannerQueue
_isOnscreen
_hasMissedUnreadNotifications
_messagePrivacyRevealState
_hintingCell
_hintingCellOriginalOffset
_hasAnyContent
touchesBeganBlock
touchesEndedBlock
_touchesBeganBlock
_touchesEndedBlock
_createTongueAndGestureRecognizersIfNecessaryWithColorStyle:
_dismissTongueWithStyle:animated:
_distanceFromEdgeForRecognizer:
grabberTongueOrPullEnabled:
grabberTongueRequiredOutsideGrabberFreeRegion:
grabberTongueRequiredForWholeEdge:
grabberTongueCenterOnEdge:
grabberTongueWidthOfGrabberFreeRegion:
grabberTongueWidthOfActiveEdge:
grabberTongueBeganPulling:withDistance:andVelocity:
_edgeOrientedVelocityForRecognizer:
grabberTongueUpdatedPulling:withDistance:andVelocity:
grabberTongueEndedPulling:withDistance:andVelocity:
grabberTongueCanceledPulling:withDistance:andVelocity:
grabberTongueWillPresent:
_handlePullGesture:
_newBackdropViewWithColorStyle:
_newLightChevronView
_newDarkChevronView
_dismissTongue:
_cancelPendingTongueDismissRequests
_frameForTongueWhenVisible:
_willPresent
_chevronFrameForTongueBounds:
_transformForTongue
_centerOnScreenEdge
_widthOfGrabberFreeRegionAroundTongue
_widthOfActiveEdgeCenteredAtTongue
_requiresTongue
_requiresTongueOutsideGrabberFreeRegion
_recognizerIsOutsideGrabberFreeZone:
_pointInside:
_tongueOrPullEnabled
_recognizerIsWithinGrabberActiveZone:
_updateCancelsTouchesWithRecognizer:
_recognizerIsWithinGrabberZone:
_presentTongue
_pullGestureBegan:
_pullGestureUpdated:
_pullGestureEnded:
_pullGestureCanceled:
initWithDelegate:edge:type:
installInView:withColorStyle:
dismissWithStyle:animated:
edgePullGestureRecognizer
distanceFromEdge
_edgePullGestureRecognizer
_tongueContainer
_tongueBackdropView
_tongueChevron
_tongueVisible
_inPullGesture
_inTongueGesture
_inTongueDismissGesture
_screenEdge
_systemGestureType
_containingView
_didReceiveLowMemoryWarning:
clearCachedImages
_updateOverlayImage
_updateOverlayAlpha
_updateProgressMask
_clearProgressView
squareContentsImage
squareDarkeningOverlayImage
_currentOverlayImage
_iconBasicOverlayImage
_iconSquareOverlayImage
_generateIconBasicOverlayImageForFormat:
_generateIconSquareOverlayImageForFormat:
showsSquareCorners
_brightness
_location
_progressView
_cachedSquareContentsImage
_showsSquareCorners
_overlayAlpha
loadTourFromPrefsIfNecessary
_tour
_currentStop
_failedToLoadTour
initWithLabelAccessoryType:
_circleImageWithGraphicsQuality:
_xImageWithGraphicsQuality:
_circleImage
_xImage
compositeCircleXImage
_glyphImagesFromAttributedString:
compositeCircleXImageWithGraphicsQuality:
setImage:forKey:
_circleFrameForState:
_xFrameWithCircleFrame:forState:
_unrolledCircleBounds
_circleBoundsForState:
_glyphFramesWithCircleFrame:forState:
_layoutSubviewsForState:
_lazyHighlightView
_circleImageView
_xImageView
_compositeCircleXImageView
_highlightView
_glyphImageViews
_animatingTransitionCount
_clearButtonState
_startStyleRequest
_startOrientation
_endStyleRequest
_endOrientation
_zoomOther
_transformForStatusBarWithOrientation:scaleFactor:
_transformAndFrame:forLaunchImageContextHostViewWithOrientation:statusBarHeight:inJailRect:
statusBarFrameForSnapshotFrame:remainderFrame:orientation:statusBarStyleRequest:hidden:
_referenceBoundsForApp:
_effectiveStatusBarSettingsForSnapshot:application:
zoomViewForApplication:sceneID:interfaceOrientation:statusBarDescriptor:imageName:decodeImage:
layerWithContextID:
sceneSnapshot
forceUpdateDoubleHeightStatus
zoomViewForContextHostView:application:sceneID:statusBarDescriptor:
zoomViewForApplication:sceneID:interfaceOrientation:statusBarDescriptor:decodeImage:
zoomViewWithIOSurfaceSnapshotOfApp:sceneID:screen:statusBarDescriptor:
handleCancelReachabilityGesture:
_removeBackdropMaskViews
_updateContrastSettingsForGrabberView
_updateContrastSettingsForBottomSeparator
_updateGrabberAndPageControlForMode:
visibleContentViewControllers
tintsBackground
_defaultBackdropViewStyle
setSimulatesMasks:
_newNonBlurredBackgroundViewWithAutoresizing:
showsBackground
_newBackgroundView
_newTintView
_setViewHitTestAsOpaque:
_validateBackgroundViewIfNecessary
initWithFrame:showForegroundView:
_newGrabberView
isGrabberViewEnabled
_configureGrabberForSoloMode:
setPresentationDelegate:
_configureView
_loadClippingView
_loadContainerView
_loadPageControl
_loadGrabberContentView
_loadContentClippingView
_loadContentView
_loadStatusBar
_loadBottomSeparator
_loadNotificationCenterWithSearchViewControllerView
_loadSearchBackdropView
_loadScrollToTopView
dismissModalFullScreenAnimated:
notificationsViewController
modeViewController
setSelectedViewController:
rectForBulletin:
_containerFrame
_registerGrabberView:withHideBlock:
_drawsAsBackdropOverlay
_grabberColor
_relevanceDateColor
_updateContentClippingView
notificationAndTodayContainerView
_resetAdjustedViewPositions
updateClippingLineVisibility
_velocityIsSufficientToRevealNotificationCenter:
_currentDragPosition
_speedupOffsetForNotificationPulldown
_initialStatusBarSearchFieldOffset
_shouldPlayFeedbackForNewOffset:oldOffset:targetValue:
enterSpotlightAnimated:fromPartialPulldown:completion:
exitSpotlightAnimated:completion:
_scaledValueAtLocation:withLowerBound:upperBound:rangeMin:rangeMax:
_translatedCenterPointWithOriginalBounds:yTranslation:
_grabberContentViewFrameForDefaultGrabberPresentation
_setContainerFrame:
_grabberContentViewFrameForRegisteredGrabber
_positionSearchRelatedViewsWithTouchLocation:
_containerFrame:
clippingInsets
_addSpotlightBackgroundForPresentation:
_transitionSpotlightBackgroundForPresentation:
_newSpotlightBackgroundView
_animateForReachabilityActivatedWithHandler:
_animateForReachabilityDeactivatedWithHandler:
grayControlInteractionTintColor
searchIsPresentingOrDismissingForPartialPulldown
didPresentOrDismissModalViewController
_loadLayoutViewControllerView
isSuppressingNotificationUpdates
dismissSearchForHardwareKeyboardWithCompletion:
presentGrabberView
dismissGrabberView
contentViewAlpha
setNotificationCenterWithSearchViewController:
_contentClippingView
_searchBackdropView
_bottomSeparator
_notificationCenterWithSearchViewController
_scrollToTopView
_grabberView
_grabberContentView
_grabberBackgroundView
_grabberTintView
_registeredGrabberView
_registeredGrabberHideBlock
_notificationCenterViewControllerFlags
_showingForReachability
_preReachabilityOrigin
_reachabilityOrigin
_preReachabilityGrabberHidden
_preReachabilityGrabberFrame
_preReachabilitySeparatorOrigin
_reachabilitySeparatorOrigin
_tapToCancelReachabilityGestureRecognizer
_allowPartialPulldownForCurrentTransition
_searchIsPresentedForPartialPulldown
_searchIsDismissingFromPartialPulldown
_maxStatusBarOffsetForPartialPulldown
_spotlightTopBackgroundView
_spotlightTransitioningBackgroundView
_lastHapticFeedbackPlayedPosition
_searchFieldNeedsEntryAcceleration
_gestureNeedsRubberbandSpeedup
addBlock:
_blocks
_disableSystemGesture:withType:
removeGestureRecognizer:fromDisplay:
setDelaysTouchesEnded:
_setRequiresSystemGesturesToFail:
addGestureRecognizer:toDisplay:
_enableSystemGesture:withType:
windowForSystemGesturesForDisplay:
_systemGestureChanged:
gesturesPreventedByStylus
_typeToGesture
_typeToState
_recognizingTouchGestures
_touchGestures
_gesturesPreventedByStylus
_stylusPriorityRecognizer
_systemGesturesDisabledForAccessibility
_handleFetchThumbnailMessage:fromClient:
tokenFromXPCMessage:
_wallpaperVariantFromXPCDictionary:
_containerViewController
_widgetGroupViewController
scenes
_scenes
_invalidationHandler
timeIntervalSince1970
effectiveStatusBarHeight
currentHeight
distanceToTopOfAppIcons
hasCustomUnlockLabel
setShortLockLabel:
deactivateAwayController
_lockLabel
_shortLockLabel
_action
_fontSize
_requiresUIUnlock
_deactivateAwayController
_canBypassPinLock
_requiresAuthentication
soundWithBBSound:
_bestVariantForUIFormat:
imagePath
imageName
imageNamed:inBundle:
isPrecomposed
_applicationIconImageForFormat:precomposed:
initWithRingtone:vibrationPattern:repeats:maxDuration:controllerAttributes:
initWithSystemSoundPath:behavior:vibrationPattern:
iconImageWithFormat:overridingBundleID:
sectionDisplaysCriticalBulletins
sb_applicationDisplayName
bulletinAlertShouldOverridePocketMode
imageForContentSizeCategory:
imageWithData:
_triggerRaiseGesture
_notificationListDidAppear:
_notificationListDidDisappear:
_notificationListVisible
_bannerContextForBulletin:
setPresentingActionIdentifier:
setRequestsModalPresentation:
initWithItem:source:target:
_showTestBanner:
_indexOfQueuedBulletinID:
imageWithName:inBundle:
addImage:forContentSizeCategory:
setAccessoryIconMask:
_removeNextBulletinIfNecessary
sectionSubtype
_syncLockScreenDismissalsForSeedBulletin:additionalBulletins:
_replaceBulletin:
_queueBulletin:
_dismissWithdrawnBannerIfNecessaryFromBulletinIDs:
_bulletinQueue
_sectionIDsToPend
_bulletinIdentifierToBannerContextCache
_playSoundForBulletin:playedInternally:
_stopSoundWithID:internalOnly:
sharedAlertController
stopAllAlerts
_shouldHonorPlaySoundRequestForBulletin:
killSounds
_enqueueBlock:forFeed:bulletin:
playSoundForBulletin:
isPlayingSoundForBulletin:
killSoundForBulletin:
_blockQueue
_playingSounds
_internalBulletinsWePlayedSoundsFor
_bulletinsRequiringExplicitKill
_deviceIsLocked
initWithSceneIdentifier:process:display:newSettings:transitionContext:clientProviderProvider:initialClientSettingsProvider:
setWaitsForSceneCommit:
displayId
effectSettings
clearHasBeenCommitted
purgeAllViews
_recycledViewsByClass
_updateRestrictions
_setQueue:
_updateCardItem:
_updateThumbnailForCardItem:withSnapshotter:completion:
_activateCardItem:animated:
_deactivateCardItem:
purgeCacheOfPassSnapshotsWithUinqueID:
setThumbnail:
snapshotWithUniqueID:manifestHash:size:completion:
setCardItems:forControllerWithIdentifier:
getCardItemsForControllerWithIdentifier:withHandler:
_cardItems
_connections
_listener
_cardWhileLockedAllowed
_walletNotificationSource
_subtitleBaseline
_iconYPosition
_warningIconView
_updateAppearanceForBackgroundStyle:transitionToSettings:
_updateAppearanceForTransitionFromStyle:toStyle:withProgress:
_darkenValueForBackgroundStyle:
_darkenWithProgress:
_tintValueForBackgroundStyle:
_tintWithProgress:
_reducedTransparencyValueForBackgroundStyle:
_reduceTransparencyWithProgress:
_valueFromStart:toEnd:withFraction:
_backgroundColorForDarkenAlpha:andProgress:
_sourceOverView
_darkenSourceOverView
_createAnimator
_addTapRecognizer
_removeAnimator
_resetAnimator
_removeTapRecognizer
allowTapForGestureRecognizer:
_beginAnimating:
bounce
initWithItem:
initWithReferenceSystem:
_updateSettings
friction
gravity
elasticity
multiplier
minVelocityToAssist
setMinVelocityToAssist:
maxVelocityToAssist
setMaxVelocityToAssist:
maxVelocityAssistance
setMaxVelocityAssistance:
dynamicAnimatorWillResume:
dynamicAnimatorDidPause:
setBounceEnabled:
shouldBeginBlock
prepareBlock
translateBlock
canceledBlock
completedBlock
_tapExcludedViews
_tapExcludedZones
_isAnimating
_bounceEnabled
_system
_tapRecognizer
_shouldBeginBlock
_prepareBlock
_translateBlock
_canceledBlock
_completedBlock
_disableStatusBarAlphaChangeAssertion
_screenTurnedOn:
_backlightLevelChanged:
_fingerOn:
_tryAgain:
_keybagBioUnlock:
_unlockAnimationWillStart:
_prearmMatch:
setFingerOnTime:
setKeybagUnlockTime:
setFingerOnWithScreenOn:
timestampEvent:
fingerOnTime
keybagUnlockTime
_clearEverything
mesaDefaults
isLogTimestampsEnabled
isSignpostsEnabled
_shouldSignpost
_shouldSyslogTimestamps
fingerOnWithScreenOn
_isScreenOn
_fingerOnWithScreenOn
_fingerOnTime
_keybagUnlockTime
initWithFrame:highlightAlpha:highlightHeight:
_updatedBackgroundImage
highlightHeight
imageWithCGImage:
initWithDockListView:forSnapshot:
_backgroundImageView
_forSnapshot
_dockEdge
handleEvent:token:action:
addObserverWithToken:forEvent:
removeObserverWithToken:forEvent:
animationController
setGlyphImage:
destination:willPresentNotificationRequest:
initWithNotificationRequest:revealingAdditionalContentOnPresentation:
parentDestination
setParentDestination:
_parentDestination
_noteSwitcherAnimationFinished
_evaluateDependenciesForCrossfadeStart
_crossfadeApp
_noteCrossfadeDidFinish
factoryWithTimingFunction:
_reportAnimationFinishedIfNecessary
_isActivatingFromContinuityApp
_activatingDisplayItem
_appViewLayoutWrapper
_animatingPageView
_finishedSwitcherAnimation
_shouldUseSnapshotForAppLaunchIfPossible
snapshotsWithImageName:sceneID:launchingSize:launchingScale:contentTypeMask:statusBarStateMask:launchingOrientation:
_defaultPNGNameUsingFallbacksForSceneID:
_normalizeSnapshotName:
fetchRequest
setStatusBarStateMask:
setPredicate:
_ingestDefaultPNGsInManifest:withLaunchImageBaseName:
compatibilityInfoForAppInfo:
setGroupID:
setStatusBarState:
setUrlSchemeName:
setLaunchInterfaceIdentifier:
initWithApplicationCompatibilityInfo:launchRequest:timeout:
setFallbackGenerationContext:
snapshotsForGroupID:fetchRequest:
imageForSnapshot:interfaceOrientation:
cachedImageForSnapshot:interfaceOrientation:
defaultLaunchInterface
_defaultLaunchImageBaseName
_defaultPNGNameFromActivationSettings
_defaultPNGNameWhenActivatingFromURLSetting:
_defaultPNGNameFromSuspensionSettings
_defaultImageNameForSceneID:
initWithUUIDString:
cacheGUID
_purgeStaticDefaultImagesInSnapshotManifest
_ingestInfoPlistImagesInManifest:
_resetLaunchImageIngestionStatus
_reingestStaticDefaultImagesInSnapshotManifest
regularExpressionWithPattern:options:error:
setScheme:
saveSnapshot:atPath:withContext:
_preferredImagePathInBundle:baseResourceName:ofType:forMainScene:size:scale:outScale:
_preferredImagePathByScaleInBundle:resourceName:ofType:scale:outScale:
_purgeAndResetStaticDefaultImagesInSnapshotManifest
_markAllManifestsForReingestion
_reingestStaticDefaultImagesForAllApps
sbui_effectiveWindowForIsolation
_snapshotExcludingWindows:withRect:
earlierDate:
sortWithOptions:usingComparator:
_updateContentViewControllersAnimated:completion:
_reflowPresentationWithAnimationSettings:
aggregatePresentation:
handleAppearanceUpdateFromController:animationSettings:
isolatingViewController
sentinelWithQueue:signalCount:signalHandler:
willTransitionToPresented:
didTransitionToPresented:
signalWithContext:
_updatePresentationForViewController:presentation:animationSettings:
_mutatingPresentation
_contentViewControllers
_activeContentViewControllers
_isolatedPresentationViewController
setAllowsEdgeAntialiasing:
scalingTransform
usesNonuniformScaling
_transformHorizontalScale
_transformVerticalScale
_transformScale
hasOpaqueContents
_usesNonuniformScaling
_hasOpaqueContents
setCurrentPageIndex:
_updateVisiblePages
_layoutPages
_updateCurrentPageForScrollOffset
setContentOffset:animated:completion:
setVisiblePageRange:
_bs_didEndScrolling
_bs_didScrollWithContext:
_bs_willBeginScrolling
_changingScrollViewLayout
_pageViews
_visiblePageRange
lineAlpha
setLineAlpha:
_realLine
_hideAppHostView
_staticAppView
_rebuildDisposition
_presentationParticipant
registerView:forRole:options:
_rebuildPresentation
_regionsForView:
_rebuildAppearance
_layoutIfNeededForPresentation
_rebuildBehavior
handleAction:fromController:
isDashBoardView
collectionViewLayout
collectionViewContentSize
unregisterView:
updateAppearance:
updateBehavior:
isPresentation
_presentation
_isolatingViewController
_isolationClass
_regionProviders
_forcingLayoutForPresentation
_isBeingPresented
initWithTransitionContextProvider:layoutController:animationSettings:stepped:animationBlock:
_blockAnimation
setSupportedInterfaceOrientations:
_supportedInterfaceorientations
_updateInterfaceOrientationToCurrentActiveInterfaceOrientationWithDuration:
passesTouchesThrough
setPassesTouchesThrough:
_passesTouchesThrough
_imageByApplyingLegibilityDarkeningToImage:
initWithFolder:orientation:viewMap:forSnapshot:
setIconPageIndicatorImageSetCache:
iconListViewClassForFolderView:
folderView:currentPageIndexDidChange:
folderViewWillBeginScrolling:
folderViewDidEndScrolling:
folderViewShouldClose:withPinchGesture:
folderViewShouldBeginEditing:
folderViewDidReceiveCancelReachabilityAction:
_folderContent
handleAction:fromScene:forCarDisplaySceneManager:
newLayoutControllerForCarDisplaySceneManager:
sceneWindowLayoutStrategyForCarDisplaySceneManager:
carDisplayDelegate
setCarDisplayDelegate:
_carDisplayDelegate
toApplications
_serialOverlayPreDismissalOptions
_animationWillBegin:
_animationDidFinish
_fromApp
_workspaceAlreadyResumed
setMaxSize:
setIconLocation:
setCanEllipsize:
setCanTighten:
setContainsEmoji:
setCanUseMemoryPool:
setFocusHighlightColor:
setTextInsets:
setFontLanguageInsets:
_rowsRelativeToKeyPath:
setCondition:
controlPoint1
controlPoint2
_curve
_controlPoint1
_controlPoint2
animationType
settingsWithMass:stiffness:damping:epsilon:delay:timingFunction:
_moduleWithSectionTitle:
condition:
setCalculatedDuration:
speed
_exportedSettings
_animationType
_calculatedDuration
_speed
rowTableViewCellClass
cellStyleForRow:
updateDisplayedValue
_sendActions:
_updateForAppearanceState:
_reallyActivateApp
recursiveDescription
_deactivateHostedApp
_destroyAppView
_resetOrientationWrapperView
_createAppView
_activateApp
interrupt
automatesLifecycle
ignoresOcclusions
orientationWrapperView
setOrientationWrapperView:
_hostedApp
_hostedAppView
_activeTransitions
_actionsToDeliver
_requestedMode
_ignoresOcclusions
_automatesLifecycle
_orientationWrapperView
_changeBadge:
initWithInt:
_prepareForTransitionToSize:andInterfaceOrientation:withTransitionCoordinator:
_animateTransitionToSize:andInterfaceOrientation:withTransitionContext:
_cleanupAfterTransitionToSize:fromInterfaceOrientation:withTransitionContext:
_updateInterfaceOrientationFromActiveInterfaceOrientation:
_iconRotationPreventionReasons
_disableAnimationForNextIconRotation
_isFromMainSwitcher
suggestedAnimationController
_activateAlert
_updateSceneLayout
_willTransitionToSpringBoard
alertActivationBlock
setAlertActivationBlock:
_topApplications
_alertActivationBlock
_deferAlertActivationForAnimationCompletion
setModeViewControllerDelegate:
_loadContentViewControllers
_managesTwoColumns
_shouldLayoutInTwoColumnsInLayoutMode:
_localizableTitleForColumnViewController:
_setUpColumnViewController:
_isDeviceMoreThanUILocked
selectedViewController
_areNotificationsViewControllersAvailable
_notificationsViewControllerCreateIfNecessary:
setViewControllers:
_needsLayoutAfterLoadingContentViewControllers
_shouldLayoutInTwoColumnsInActiveLayoutMode
_notificationCenterLayoutModeForCurrentState
_layoutModeViewController
contentInsetsForModeViewController:
initForNotificationCenterLayoutMode:
runScrollTest:iterations:delta:useAAGView:
_supportedNotificationCenterLayoutModes
_lastPresentedNotificationCenterLayoutMode
_topSeparatorView
_notificationsViewController
_modeViewController
_performDeviceCoherencyCheck
_isRootTransaction
keepAliveForAsyncBlock:
setClearsCompletionAsynchronously:
_slaveTransactions
_suggestedAnimationController
_clearsCompletionAsynchronously
_highlightImageWithHeight:alpha:
highlightAlpha
_highlight
_highlightAlpha
_highlightHeight
fromApplications
enumerateToApplicationsWithBlock:
_cleanUpAfterAnimation
preventWhitePointAdaptationStrengthUpdateOnComplete
_delayTransitionCompletionForRequester:
_completeCurrentTransition
_stopDelayingTransitionCompletionForRequester:
isGoingToLauncher
shouldRestoreSpringBoardContentOnCleanup
_synchronizeWithSceneUpdates
toAndFromAppsDiffer
_handleApplicationDidNotChange:
enumerateDeactivatingApplicationsWithBlock:
_relinquishResignActiveAssertion
_clearAnimation
performToAppStateCleanup
isFromMainSwitcher
isFromSideSwitcher
isGoingToMainSwitcher
_fromAppWantsLiveContentForDosido
_newHomeScreenSnapshotViewForDismissToSwitcherWithZoomDownTransitionContext:
deckSwitcherForegroundWallpaperStyle
shouldPerformToAppStateCleanupOnCompletion
shouldAnimateOrientationChangeOnCompletion
_beginTransition
_transitionWasCancelled
_willPerformAnimation
_hasPreAnimationTasks
_performPreAnimationTasksWithCompletion:
_hasPostAnimationTasks
_performPostAnimationTasksWithCompletion:
_handleApplicationUpdateScenesTransactionFailed:
_animationDidRevealApplication
_animatedActivation
_animatedDeactivation
_deactivatingAppFromAppToAppGesture
_appQuitFromSwitcher
_autoPIPTransitionOrder
_pipDuringSwitchTransitionTasksGroup
_performingDosidoWithPinnedSideSwitcherVisible
_homeScreenSnapshotForDismissToSwitcher
_didCancelAppDismissForDismissToSwitcher
_preventWhitePointAdaptationStrengthUpdateOnComplete
setAutorotates:forceUpdateInterfaceOrientation:
_debugName
isolationTankController
_hitTest:withEvent:windowServerHitTestWindow:
_hostingWindow
_aboveWindowScrollView
_usesWindowServerHitTesting
_isConstrainedByScreenJail
_shouldAutorotateToInterfaceOrientation:
_orientationForViewTransform
multiUserDefaults
_updateData
_supportsDebugUI
_updateDebugTasksViewControllerSizeFromSize:
disableStatusBarItem:requestor:
enableStatusBarItem:requestor:
disablesInternalDebugBlockingTasksUI
_platformController
_multiUserDefaults
_debugTasksViewController
_loadGameCenterIfNecessary
_shouldAnimateTransition
_activateApplications:
_doLegacyAlertAnimationWatchingThatNobodyWantsToSupportAnymoreInThisTransactionTodayPleaseGetRidOfMeSometimePlease
_deactivateAlertIfNecessary
_didTransitionFromSpringBoard
_animationToSpringBoard
_animationToApplications
_prepareApplicationsForActivationAnimated:
_alertAnimationComplete:
setStatusBarStyle:animated:
_endTransition
deactivateAfterNextLaunch
setDeactivateAfterNextLaunch:
_alertTransitionContext
_alertChangeTransaction
_ignoreOcclusionsReasonForActivatingApps
_preventAlertDeactivationForAnimation
_preventAlertDeactivationForAnimationLegacy
_createdAnimation
_animateActivation
_goingToSpringBoard
_animatedAppActivation
_activatingFromAssistant
_fadeAssistant
_waitingForAppActivation
_pidToAutoPIP
_automaticallyPippingInCallAlert
_deactivateAfterNextLaunch
isModal
_layoutInlayContainerView
_layoutBackgroundView
_inlineContainerFrame
inlayView
_backgroundFrame
_bannerBottomY
highlighted
inlayContainerView
setInlayContainerView:
_modal
_inlayView
_maximumHeight
_inlayContainerView
systemBlueColor
setPrimaryTextAccessoryImage:
setSecondaryText:italicized:
setAlternateSecondaryText:
setAlternateSecondaryText:italicized:
setAlternateSecondaryTextAlpha:
setRelevanceDate:
_showAttachmentPreview
_hasAttachment
_attachmentImageViewFrame
_textViewFrame
_iconImageViewFrame
_secondaryContentFrame
_textViewFrameForBounds:
_secondaryContentInsetY
_secondaryContentFrameForBounds:
_contentFrameForBounds:
_contentFrame
_iconInsetY
_textInsetX
textWillWrapForWidth:
_defaultRelevanceDateColor
_setRelevanceDateColor:
setPercentPulledDown:
shouldBorrowScreen
_viewSource
_attachmentImageView
hostAgentClass
clientAgentClass
initWithAlertSet:zone:
addRemoteAlert:
removeRemoteAlert:
addPlaceholderForIdentifier:
removePlaceholderForIdentifier:
_placeholderIdentifiers
_doAlertTransition
isRemote
_cleanUpAnimation
setActivatingAlert:
setDeactivatingAlert:
setActivation:
_animatingAlertDeactivation
_activation
_deactivatingAlert
_workspaceTransitionRequestForCurrentLayoutStateWithSuspendingPrimaryApplication:suspendingSideApplication:
initWithTransitionRequest:layoutViewController:
_invalidateTimers
resizeUIManager
resizeGestureZoomAnimationFactory
canDismissResizeUI
setResizeUIManager:
dismissResizeUIWithAnimationFactory:completionHandler:
_dismissResizeUIAnimated:
layoutViewController
_normalizedNarrowAppLocation
_normalizedHalfScreenAppLocation
_canResizeToHalfScreen
normalizedSuspendPrimaryLocation
normalizedSuspendSideLocation
_rubberbandingStartScreenEdgeMargin
_sideAppWidthForResizeGestureRegion:
_layoutWidthForLayoutRole:withSideAppPresentationStyle:sideAppWidth:
_separatorWidth
layoutSpaceAnchorEdgeForPrimaryLayoutRole
layoutSpaceAnchorEdgeForSideLayoutRole
_canTransitionIntoFullResizeWithLayoutState:
_maxRubberBandOffsetForAppWidth:
_rubberBandOffsetForOffset:maxOffset:minOffset:range:outside:
shouldReverseLayoutDirection
_getPrimaryAppTransform:sideAppTransform:forPrimaryTranslationAmount:primaryScaleAmount:sideTranslationAmount:sideScaleAmount:
dividerPosition
_resizeGestureRegionForLocation:
_getPrimaryAppFrame:sideAppFrame:grabberHorizontalOffset:forResizeGestureLocation:region:allowRubberbanding:
_getPrimaryAppTransform:sideAppTransform:grabberHorizontalOffset:forResizeGestureRegion:location:allowRubberbanding:
lastResizeGestureRegion
_updateElementViewsAlphaAndGrabberForGestureRegion:
setLastResizeGestureRegion:
isWaitingToObscureAppsDuringShowing
distanceTraveledFromInitialLocation
obscureAppsDuringShowingWithAnimationFactory:
interfaceOrientedLocationInView:
_updateSlideOffUIWithDistance:gestureRecognizer:
_layoutWidthForLayoutRole:inLayoutState:
breadcrumbLayoutElementController
isSlidingOffOverlaySideApp
anchorEdgeForSideLayoutRole
setSlidingOffOverlaySideApp:
_updateFullResizeUIFromGestureRecognizer:
_updateSlideOffUIFromGestureRecognizer:
pinUnpinTapTimer
resizeGestureRecognizer
beganTrackingNearDivider
hasResizedSpeculatively
currentWorkspaceTransaction
transitionContextForResizingSideAppToWidth:
_transactionForExecutingApplicationTransitionContext:eventLabel:
setResizingSpeculatively:
setHasResizedSpeculatively:
_addChildWorkspaceTransaction:
isFinishingWithOverlaySideAppDismissal
_restartResizeUIWithGestureRecognizer:
absoluteDistanceTraveled
_updateResizeUIFromGestureRecognizer:
_isResizeGestureInSpeculativeResizeRegionForLocation:
_beginSpeculativeResizeIfAppropriate
numberOfTouches
_resizeGestureFinishedWithState:dividerPosition:velocity:absoluteDistanceTraveled:directionalDistanceTraveled:numberOfTouches:
_resizeGestureFinishedWithState:gestureRegion:velocity:distanceTraveled:numberOfTouches:
_finalActionForGestureState:gestureRegion:distanceTraveled:numberOfTouches:
setFinishingWithOverlaySideAppDismissal:
isPerformingFinalAction
_shouldObscureAppsBeforePerformingFinalAction:
_requiredResizeUIStateBeforeAnimatingViewsForFinalAction:
_animateElementViewsForFinalAction:animationFactory:initialVelocity:completionHandler:
addNotificationHandlerForState:usingBlock:
_performWhenCurrentWorkspaceTransactionCompletesUsingBlock:
pendingFinalActionCount
setPendingFinalActionCount:
_performWhenCurrentFinalActionCompletesUsingBlock:
_performFinalAction:velocity:completionHandler:
setPerformingFinalAction:
currentGestureIdentifier
_affectedLayoutRolesForFinalAction:
affectedLayoutRoles
setAffectedLayoutRoles:animated:
_transitionContextForFinalAction:
_requiredResizeUIStateBeforeDismissingResizeUIForFinalAction:
_dismissResizeUI
_tellElementViewsWeEndedResize
lastGestureWasFullResizeGesture
transitionContextForSuspendingPrimaryApp
transitionContextForSuspendingSideApp
transitionContextForSettingSideAppPinned:
_visibleReferenceFrameForElement:inLayoutState:
_appFrameForElementWithRole:inLayoutState:withSideAppPresentationStyle:sideAppWidth:inCoordinateSpace:withHeight:
_distanceFromEdgeForSideAppView
_newSideAppDynamicAnimationForTargetValue:startValue:withInitialVelocity:
_slidingTransformForSideAppViewWithNewDistance:
_layoutFrameForSize:withRole:inLayoutState:
setCurrentGestureIdentifier:
setLastGestureWasFullResizeGesture:
_tellElementViewsWeWillBeginResize
isShowingResizeUI
_longPressPinTimerDidFire:
setLongPressPinTimer:
initialSingleTouchTimestamp
isShowingResizeUIOrAlreadyVisible
_pinUnpinTapTimerDidFire:
setPinUnpinTapTimer:
initWithMainLayoutViewController:
setDelaysRecoilUntilAppsAreObscured:
setAffectedLayoutRoles:
showResizeUIWhileWaitingToObscureApps:animationFactory:completionHandler:
cancelWithAnimationFactory:
setCurrentWorkspaceTransaction:
setCurrentWorkspaceTransactionStartDate:
beginRecoilingWithAnimationFactory:
longPressPinTimer
appDeactivationAssertion
_didInterruptWithReason:
_bailOutOfResizeUIInAnUnsightlyManner
_resizeGestureDidUpdate:
initWithLayoutElementViewController:
resizeGestureZoomAnimationSettings
resizeUIManager:cachedSceneSnapshotViewForLayoutElementViewController:
resizeUIManager:didCreateSceneSnapshotView:forLayoutElementViewController:
resizeUIManager:cachedResizingPlaceholderViewForLayoutElementViewController:
resizeUIManager:didCreateResizingPlacholderView:forLayoutElementViewController:
resizeUIManager:willChangeToState:
resizeUIManager:willChangeDisplayModeOfAppController:toDisplayMode:
_getPrimaryAppTransform:forPrimaryTranslationAmount:primaryScaleAmount:
_getSideAppTransform:forSideTranslationAmount:sideScaleAmount:
currentWorkspaceTransactionStartDate
isResizingSpeculatively
_transactionCompletionBlocks
_finalActionCompletionBlocks
_cachedSnapshotViews
_cachedPlaceholderViews
_previousSlideOffPercent
_suspendPrimaryApplicationWorkspaceTransitionRequest
_suspendSideApplicationWorkspaceTransitionRequest
_resizingSpeculatively
_hasResizedSpeculatively
_slidingOffOverlaySideApp
_finishingWithOverlaySideAppDismissal
_lastGestureWasFullResizeGesture
_performingFinalAction
_primaryLayoutElementController
_sideLayoutElementController
_appDeactivationAssertion
_resizeUIManager
_lastResizeGestureRegion
_currentWorkspaceTransaction
_currentWorkspaceTransactionStartDate
_longPressPinTimer
_pinUnpinTapTimer
_pendingFinalActionCount
_currentGestureIdentifier
elementViewController
elementViewSize
_elementViewController
_elementViewSize
_displayWillActivate:
_displayDidDeactivate:
_applicationDidExit:
_shouldPauseForNotificationCenter
_notificationCenterWillAppear:
_notificationCenterDidDisappear:
_activeDisplayChanged:
_addPauseCause:
_stringForPauseCause:
updateUnanimated
_significantAnimationWillBegin:
_significantAnimationDidEnd:
_removePauseCause:
_isPausedForCause:
updateAnimatingState
_willBeginScrolling:
_didEndScrolling:
isAnimationAllowed
_spotlightWillAppear:
_spotlightWillDismiss:
_pauseCauses
_showBlackView
_internalContainerView
_blackView
notificationRequestWithAlertItem:
initWithMainSwitcherController:
_forcePressGestureBeganWithGesture:
_slideUpGestureBegan
_slideUpGestureChanged:
_slideUpGestureEndedWithCompletionType:cumulativePercentage:
_slideUpGestureCancelled
_switcherForcePressTransaction
_waitingForTransactionCreation
_switcherController
_switcherAnimationRevealing
_slideUpGestureRevealedOrDismissedSwitcher
_activationBlock
_deactivationBlock
initWithMode:interval:reportUserEvents:userEventInterface:
appendDouble:withName:decimalPrecision:
callbackOnNextUserEvent
appendCGFloat:counterpart:
_interval
_shouldReportUserEvents
_chatCarrierSMSAlert
_chatMessageAlert
_chatCMSBAlert
_chatMMSDelayedDownloadAlert
_chatMMSInformationMissingAlert
_mapsThermalAlert
_accessibilityVoiceOverTouchAlert
_wifiBTSSPAlert
_wifiDontAskAlert
_wifiErrorAlert
_wifiIsEnterpriseAlert
_wifiPasswordAlert
_wifiTrustAlert
educationAlertWasDeactivated:
_currentAssistantLanguage
initWithMessageBody:sender:acknowledgeBlock:
setAddress:
setMessageCount:
setIgnoreIfAlreadyDisplaying:
initWithName:andComparison:
initWithNetworkName:error:
initWithNetworkName:
setBluetoothStyle:
initWithCertificateArray:networkName:
initWithApp:starkScreenController:
_animationForApp:
_handleAppRelaunch:
addTransactionDidFinishWorkBlock:
_relaunchSuspended
_willBeOccluded
_disableActiveOrientationChangeAssertion
_starkScreenController
_toApp
_generateImageWithFormat:
initWithCGImage:
_activateWithOptions:context:
_configureContextForUILockActivation
noteActivatedForActivityContinuationWithIdentifier:
_configureActionForEvent:
handleButtonActions:
setCurrentActiveInCallAlert:
unHandledEvents
_noteAction:completedWithUnHandledEvents:
initWithEvents:targetQueue:withHandler:
reactivateAlertForLockButtonPress
handleLockButtonPressed:
_currentActiveInCallAlert
_outstandingLockButtonActionUUIDs
stateSettings
setStateSettings:
setActivationSettings:
setDeactivationSettings:
processSettings
setProcessSettings:
_callAndClearAlertActivationCompletionIfNecessary
_kickoffAlertActivation
_alertDidActivate
_setupAndActivate
shouldPlaceOutgoingScenesUnderLockOnCompletion
_shouldUpdateUnderLockStateForForegroundScenes
_lockScreenController
_toLockscreenAlertTransaction
_alertActivationCompletion
_resign
_makeActive
_setRoutingAttributesForWiredHeadset:
_workspaceActivate
activateWhenReady
_voiceControlFlags
_sideSwitcherLongPress:
_keyboardFrameDidChange:
_disableGestureWithTypeForCommonReasons:
sideSwitcherPressGestureRecognizer
sceneViewController
_sideAppRevealGestureBeganForActivation:ofSideSwitcher:
_sideSwitcherRevealGestureBegan
_sideAppRevealGestureUpdatedWithDistance:
_sideSwitcherRevealGestureUpdatedWithDistance:
_finishSideAppRevealGestureWithVelocity:distance:forActivation:
_finishSideSwitcherRevealGestureWithVelocity:distance:
_layoutAdornmentContainer
_transformForHidingElementWithRole:frame:baseTransform:withLayoutState:
dismissGrabbersWithStyle:animated:
_sidePullGestureSucceededForRequestID:
_setLastSideAppRevealGestureTransactionRequestUUID:
_setCurrentSideSwitcherRevealTransaction:
_setCurrentSideAppRevealTransaction:
_setLastSideSwitcherRevealGestureTransactionRequestUUID:
_progressForSideAppTransitionWithNewDistance:
_newSideSwitcherDynamicAnimationForTargetValue:withStartValue:withInitialVelocity:
_effectiveValue:
_activateSideAppViewWithInitialPosition:forActivation:
_activateSideSwitcherViewWithInitialDistance:
resizeGestureTransaction
setResizeGestureTransaction:
_resizeGestureBegan
_startResizeTransactionWithLabel:checkGestureStatus:
locationOfDividerForSceneResizeGestureRecognizer:
sceneResizeGestureRecognizer:locationForViewOffset:
sceneResizeGestureRecognizer:viewOffsetForLocation:
heightOfSingleTapAreaInDividerForSceneResizeGestureRecognizer:
heightOfPinningAreaInDividerForSceneResizeGestureRecognizer:
interfaceOrientationForSceneResizeGestureRecognizer:
minimumDurationForSingleTouchForSceneResizeGestureRecognizer:
minimumDistanceForSingleTouchForSceneResizeGestureRecognizer:
verticalCenterOfSingleTouchRegionForSceneResizeGestureRecognizer:
sceneResizeGestureRecognizer:shouldWaitForInvalidSingleTouchToBecomeValidWithDistanceFromDivider:
sceneResizeGestureRecognizerShouldOnlyRecognizeForSingleTouch:
initWithSceneLayoutViewController:
installAccessoriesInView:
anyLayoutGestureActive
anyLayoutGestureWaitingToComplete
sideSwitcherRevealGestureActive
_sceneViewController
_sideAppGrabberTongue
_sideSwitcherGrabberTongue
_sideAppRevealGestureIsActive
_sideSwitcherRevealGestureIsActive
_sideSwitcherRevealGestureAsOverlayIsActive
_effectiveKeyboardFrame
_lastSideAppRevealGestureTransactionRequestUUID
_lastSideSwitcherRevealGestureTransactionRequestUUID
_transactionRequestUUIDToRevealGestureSuccess
_currentSideAppRevealWorkspaceTransaction
_currentSideSwitcherRevealWorkspaceTransaction
_resizeGestureRecognizer
_resizeGestureTransaction
_sideSwitcherPressGestureRecognizer
_deactivatingLockScreenWorkspaceAlert
initWithFrame:overlayWrapperView:pluginView:
_overlayWrapperView
_overlayController
emergencyCallViewController:didExitWithError:
dismissEmergencyCallViewController:
_wallpaperStyleFromUIBackgroundStyle:
tintColorForBackgroundStyle:outBlurRadius:
numberOfRowsForNumberOfCells:
_gridImageForNumberOfCells:withPreviousGridImage:cellImageProviderBlock:
cellSize
_numberOfCells
autoupdatingCurrentLocale
setDateStyle:
setTimeStyle:
timeZoneWithName:
setTimeZone:
stringFromDate:
cStringUsingEncoding:
convertPoint:toWindow:
convertPoint:fromWindow:
objects
setObjects:
_objects
initWithDefaults:userManager:
hasCompletedSynchronizingCloudCriticalData
setQualityOfService:
setMaxConcurrentOperationCount:
_queue_isComplete
_queue_startFetchingCloudCriticalData
operationCount
setHasCompletedSynchronizingCloudCriticalData:
addOperation:
_queue_addOperation:
_pendingOperationCount
_addTestOperation:
_queue_fetchCloudAccountOperation
_queue_fetchMDMProfilesOperation
_queue_fetchCloudDefaultsOperation
_queue_migrateSoundPreferencesOperation
_needsSync
_queue_bootDefaults
_queue_operationGroup
_queue_operationCount
_queue_startTime
_testOperations
setTransitionBlurView:
_configureFromScratch
_setTransitionFraction:
grayscaleTintAlpha
grayscaleTintLevel
colorTintAlpha
colorTint
_configureForCurrentBlurStyle
_updateWallpaperAverageColor:
_needsBlurViewForStyle:
setMaskImageView:
setTintMaskingContainer:
setBlurMaskingContainer:
_configureViews
_configureGrayscaleAndColorTintViewForStartStyle:
setGrayscaleTintView:
setColorTintView:
setTransitionGrayscaleTintView:
setTransitionColorTintView:
grayscaleTintView
transitionGrayscaleTintView
colorTintView
transitionColorTintView
imageInRect:forVariant:withStyle:zoomFactor:mask:masksBlur:masksTint:
setMaskImage:masksBlur:masksTint:
setBarTintColor:
setBarWantsAdaptiveBackdrop:
appearanceStorage
setAppearanceStorage:
updateBackgroundImage
_setIsContainedInPopover:
_setFrame:forceUpdateBackgroundImage:
forcesOpaque
transitionBlurView
maskImageView
blurMaskingContainer
tintMaskingContainer
_wallpaperAverageColor
_startStyle
_endStyle
_transitionFraction
_grayscaleTintView
_colorTintView
_transitionBlurView
_transitionGrayscaleTintView
_transitionColorTintView
_maskImageView
_blurMaskingContainer
_tintMaskingContainer
_shouldMaskBlur
_shouldMaskTint
_forcesOpaque
_accessibilityReduceTransparencyEnabled
initWithParentView:fromOrientation:starkScreenController:
_captureApplicationState
_fireAndClearResultBlockIfNecessaryForFailure:
enumerateNewlyActivatingApplicationsWithBlock:
_onlyPerformingDeactivations
_beginAnimationIfNecessary
_checkForAnimationCompletion
_noteAnimationFinished
_shouldFailForChildTransaction:
_configureAnimation
mainScreenApplicationsDidCommitSceneUpdates:
mainScreenApplicationUpdateScenesTransactionCompleted:
mainScreenApplicationSceneWillCommit:
mainScreenApplicationSceneDidCommit:
makeObjectsPerformSelector:withObject:
transitionContextToUndoTransitionContext:
exitContext
_applicationForScene:
watchdogTimeout
trackedProcesses
_layoutTransitionContinuation
_appRepairTransaction
_additionalTransitionContext
_fromApplications
_completionDelayRequesters
_underLockScreenInForeground
_gestureInitiated
_preactivationForegroundRunningApplicationCount
_toAndFromApplicationsDiffer
_retriedAfterVoluntaryExit
_applicationStateNeedsCapture
_previousTransitionPerformedDeactivations
_dismissedOverlays
_layoutTransaction
_trackedProcesses
initWithInterval:userEventInterface:
initWithScreenshotGestureRecognizer:homeHardwareButton:buttonActions:createGestures:
_createGestureRecognizers
buttonDown:
singlePress:
sosDefaults
hasIndiaConfiguration
sosGesture:
loggingGesture:
disablesForAccessibility
deviceSupportsSOS
_reportAggdLoggingForButtonEventIsDownEvent:
_tryToSendButtonDownEventsToAppForRecognizer:
_sendButtonUpEventToAppForRecognizer:
minimumPressDuration
_timestampOnGestureRecognizer:
noteDidBeginSOS
pressesForGestureRecognizer:
_noteAXHomeClickSpeedChanged
buttonDownGestureRecognizer
setButtonDownGestureRecognizer:
singlePressGestureRecognizer
setSinglePressGestureRecognizer:
lockPressSequenceObserver
setLockPressSequenceObserver:
sosTriggerObserver
setSosTriggerObserver:
sosGestureRecognizer
setSosGestureRecognizer:
loggingGestureRecognizer
setLoggingGestureRecognizer:
_gestureRecognizers
_buttonDownGestureRecognizer
_singlePressGestureRecognizer
_lockPressSequenceObserver
_sosTriggerObserver
_sosGestureRecognizer
_loggingGestureRecognizer
_screenDimmed:
noteChangeOfState:newValue:
lostModeIsActive
noteOccurrenceOfEvent:
_lostModeStateChanged
_stateProvider
_setBlurredBackgroundView:
_blurredBackgroundView
_setBlurSettings:
_blurSettings
setDarkeningTintHue:
_setBackgroundBackdropView:
_backgroundBackdropView
addConstraint:
_setSelectionSquareView:
_selectionSquareView
_layoutAppIcons
_moveSelectionSquareToIconAtIndex:
_selectedIconView
_setSelectedIconView:
_selectionXLayoutConstraint
removeConstraint:
_setSelectionXLayoutConstraint:
_noteDidSelectApplicationDisplayItem
_indexOfDisplayItem:
canBecomeFirstResponder
_switcherDisplayItems
_selectedIndex
_iconViews
setStyleOverride:
setExclusive:
setShowsWhenForeground:
styleOverride
exclusive
_exclusive
_showsWhenForeground
_styleOverride
_remoteAlerts
_initWithReason:
_addDisableAppStatusBarAlphaChangesAssertion:
_removeDisableAppStatusBarAlphaChangesAssertion:
_addDisableAppStatusBarUserInteractionChangesAssertion:
_removeDisableAppStatusBarUserInteractionChangesAssertion:
setJiggleLock:
setVibrate:
setShowPasscode:
setWaitUntilButtonUp:
_waitUntilButtonUp
setPasscodeRequiredEventsCountAsFailures:
setFlashRedOnPasscodeRequiredEvents:
setSuccessFeedbackWaitsUntilButtonUp:
setFirstFailureSettings:
setSecondFailureSettings:
setThirdFailureSettings:
setFourthFailureSettings:
setFifthFailureSettings:
_passcodeRequiredEventsCountAsFailures
_flashRedOnPasscodeRequiredEvents
_successFeedbackWaitsUntilButtonUp
_firstFailureSettings
_secondFailureSettings
_thirdFailureSettings
_fourthFailureSettings
_fifthFailureSettings
_mainDisplayPreferredInterfaceOrientation
_setMainDisplayPreferredInterfaceOrientation:
_computeNonlinearSpeedGain:
_computeHandSizeCompensationGain:
setIndex:
setRange:
fragmentWithIndex:length:lineWidth:
index
_lineWidth
_range
fragmentCount
addFragment:
fragments
_fragments
whitespaceAndNewlineCharacterSet
invertedSet
sizeWithAttributes:
stringMetricsForFirstLineWidth:
drawWithMetrics:inContext:
sb_firstDescendantOfViews:passingTest:
masksToBounds
sublayers
_printLayer:level:
createIOSurfaceWithFrame:
sb_hasActiveKeyboardOnScreen
sb_printLayerHierarchy
sb_removeAllSubviews
isForCarPlay
isDefinition:allowedForAuditToken:
isDefinition:equalToDefinition:
impersonatedCarPlayAppIdentifier
_isForCarPlay
didInvalidate
_disconnect
remoteAlertClass
activateWithContext:
thermalDefaults
_didReceiveWarningAction:
_isLevelBlocked:
_setBlocked:
suppressThermalWarning
isBlockedForThermal
setWifiEnabled:
wasConnectedToWiFiWhenBrickedForThermalConditions
setWasConnectedToWiFiWhenBrickedForThermalConditions:
setBlockedForThermal:
thermalBlockStatusChanged:
thermalWarningAssertionExpired:
isThermalBlocked
addThermalObserver:
removeThermalObserver:
isInSunlight
_sampling
_samplingStartTime
_samplingStartCPUTimesByApp
_sunlightStateToken
_coldTempToken
_warningAssertionToken
_warningResponseToken
_warningSuppressionAssertions
_inSunlight
_networkDefaults
_thermalDefaults
_securityDefaults
setNotificationIdentifier:
setSectionIdentifier:
setThreadIdentifier:
_destinations
setRequestDestinations:
_notificationOptionsForAlertItem:
_notificationSoundFromSound:
setCloseAction:
setDismissAutomatically:
setOverridesQuietMode:
setAlertsWhenLocked:
setAddToLockScreenWhenUnlocked:
setLockScreenPersistence:
setLockScreenPriority:
setCanPlaySound:
setCanTurnOnDisplay:
setHideClearActionInList:
setSoundType:
setSongPath:
setSystemSoundID:
setSoundBehavior:
setControllerAttributes:
setAllowsSelection:
_tableHeaderView
setTableHeaderView:
_tableFooterView
setTableFooterView:
_setTopPadding:
setSeparatorColor:
_pocketLineColor
lockScreenRowActionFactory
_disableIdleTimer:
visibleCells
_setGestureRecognizerRequiresTableGestureRecognizersToFail:
_clearTextDisabledTimer
_clearTextFadeTimer
convertRect:fromLayer:
indexPathsForVisibleRows
rectForRowAtIndexPath:
_resetAllFadeTimers
_setContentForTableCell:withItem:atIndexPath:
_alertItemForIndexPath:
_activeBulletinForIndexPath:
_snoozedAlarmNotificationRequestForIndexPath:
_handleAction:forBulletin:
rowActionsForBulletin:isFirst:isLast:handler:
rowActionsForAlertItem:isFirst:isLast:handler:
rowActionsForSnoozedAlarmNotificationRequest:isFirst:isLast:handler:
_setNonSelectedCellsToVisible:withSelectedCell:
_enableIdleTimerAfterScroll
setUpdateCellsToVisibleOnPluginWillDisable:
_scrollingEndedInScrollView:
_pageDecelerationTarget
_updateBottomShadowVisibility
beginUpdates
cellForRowAtIndexPath:
_rowAnimationForInsert
endUpdates
_updateTotalContentHeight
_disableExistingContent
reloadRowsAtIndexPaths:withRowAnimation:
_rowAnimationForDelete
_postludeForUpdateForRemoval:
_pluginWasDisabled:
_textDisabledTimerFired:
_cellTextFadeTimerFired:
visibleRegionUsingPresentationLayer:
scrollToTopOfListAnimated:
tableView:willBeginSwipingRowAtIndexPath:
tableView:didEndSwipingRowAtIndexPath:
tableView:shouldDrawTopSeparatorForSection:
updateCellsToVisibleOnPluginWillDisable
_topPocketView
_bottomPocketView
_currentTextAlpha
_fadeStartTimestamp
_oldTextDisabledTimer
_indexOfNewItem
_notificationCellIsScrollingToPasscode
_notificationScrollDecelerationRatio
_heightForListItemCache
_totalContentHeight
_startingScrollOffset
_lastDistanceScrolled
_cellButtonFactory
_updateCellsToVisibleOnPluginWillDisable
_tryToSendAction:
dismissAlertCooldown:
_autoCoolDown
_playPresentationSound
_actionTaken
setViewController:
setOperation:
transitionForViewController:operation:animated:completion:
invokeCompletionIfNecessaryWithResult:
animated
_queuePendingTransition:
_performPendingTransitionIfNecessary
_removePendingTransition:forSuccess:
_addPendingTransition:
_popNextPendingTransition
_setCurrentTransition:
_addViewController:completion:
_removeViewController:completion:
_noteWillPresentViewController:
_noteDidPresentViewController:
_noteWillDismissViewController:
_noteDidDismissViewController:
removeViewControllerAnimated:completion:
_viewControllerStack
_pendingTransitions
_restoreDefaultValues
serializedState
initWithSerializedState:
_sideAppIdentifier
_presentationWidth
setUserInteractionDelegate:
setDestinationDelegate:
captureOnlyMaterialViewForCurrentState
_layoutListView
_updatePresentation
activeRaiseToListenNotificationRequest
_didPresentNotificationCenter
hasVisibleContent
_coalesceHiddenPreviewNotificationRequestIfPossible:forCoalescedNotification:
_coalesceNotificationRequestIfPossible:forCoalescedNotification:
_performSelfCorrectingListViewAction:
removeNotificationRequest:forCoalescedNotification:
hiddenPreviewContentProviders
_threadIdentifierForNotificationRequest:
_phoneCoalescingContentProviderWithSameContactAsNotificationRequest:
phoneCoalescingContentProviders
_hideOrShowRequestsForParentNotificationSectionSettings:
destination:clearNotificationRequests:
setDeviceAuthenticated:
categoryIdentifier
isLookStyleLongLook
_identifierForNotificationRequest:
staticContentProviders
_snoozeAlarmNotificationStaticContentProviderForNotificationRequest:viewController:
_invalidateTimerIfSnoozeAlarmNotificationStaticContentProvider:
_setListHasContent:
setActiveRaiseToListenNotificationRequest:
removeCoalescedNotificationRequest:
coalescedNotificationRequests
numberOfSections
numberOfItemsInSection:
indexPathForItem:inSection:
scrollToItemAtIndexPath:atScrollPosition:animated:
_clearContentIncludingPersistent:
_expandHiddenPreviewNotifications
_coalesceHiddenPreviewNotifications
_suggestedListViewFrame
_listViewContentInset
_scrollIndicatorInsetsForContentInset:
setScrollIndicatorInsets:
clearAllNonPersistent
notificationRequestWithHintText
reloadNotificationRequest:
_updateHiddenPreviewContentProvidersForAuthenticationStateChange
notificationRequestsPassingTest:
suggestedFrameForListForPage:pageBounds:insets:
threadIdentifier
hasSameContactAsNotificationRequest:
coalesceHiddenNotificationRequest:
notificationViewControllerForSizing
notificationsEnabled
showsInNotificationCenter
_notificationSectionSettingsHidesSection:
subSectionIdentifier
hideRequestsForNotificationSectionIdentifier:subSectionIdentifier:
showRequestsForNotificationSectionIdentifier:subSectionIdentifier:
_hideOrShowRequestsForNotificationSectionSettings:
subSectionSettings
notificationListViewControllerDidSignificantUserInteraction:
notificationListViewControllerDidScroll:
notificationListViewControllerDidEndScrolling:
notificationListViewController:requestPermissionToExecuteAction:forNotificationRequest:withParameters:completion:
notificationListViewController:requestsExecuteAction:forNotificationRequest:withParameters:completion:
notificationListViewController:requestsClearingNotificationRequests:
notificationListViewController:shouldFinishLongLookTransitionForNotification:withCompletionBlock:
notificationListViewController:preferredViewControllerForPresentingFromViewController:
notificationListViewController:convertRect:toLocalWindowSpaceFromView:
notificationListViewController:staticContentProviderForNotificationRequest:viewController:
notificationListViewController:didEndDisplayingCellForNotificationRequest:
notificationListViewController:shouldAllowInteractionsForNotificationRequest:
notificationListViewController:showSupplementaryActionsForNotificationRequest:
notificationListViewController:willPresentInitialContentWithTransitionCoordinator:
notificationListViewControllerIsUpdatingContent:
notificationListViewController:willDismissRemainingContentWithTransitionCoordinator:
customCellBackgroundViewForNotificationListViewController:
notificationListViewController:setRaiseGestureDetectionEnabled:forNotificationRequest:
notificationListViewController:didRemoveNotificationRequestInLongLook:
materialSettingsForNotificationListViewController:
notificationListViewController:requestsClearingNotificationRequestsInSections:
notificationListViewController:requestsClearingNotificationRequestsFromDate:toDate:inSections:
setStaticContentProviders:
setHiddenPreviewContentProviders:
setPhoneCoalescingContentProviders:
_listViewController
_captureOnlyMaterialView
_clippingLine
_headerOffset
_footerOffset
_listPresentingContent
_listDismissingContent
_listBeingLaidOut
_notificationEffectViews
_significantUserInteractionTimer
_listSuppressLongLookDismissal
_staticContentProviders
_hiddenPreviewContentProviders
_phoneCoalescingContentProviders
_activeRaiseToListenNotificationRequest
_handlePressDownWithTimestamp:
_handlePressUpWithTimestamp:
_resetAndNotify
_resetWatchdogIfNecessary
pressEventIsValidInSequence:endingDownEvent:duration:
timeUntilNextPressEventIsInValidInSequence:lastPressEventInSequenceIsDown:
_resetAfterDelay:
_complete
_watchdogTimeIntervalFromDelay:
validator
_lastPressDownEvent
_lastPressUpEvent
_watchdogTimer
_currentPressTuple
buildWallpaperOfSize:fromSpecification:completionHandler:
fileCache
loadFileWithIdentifier:completionHandler:
buildWallpaperOfSize:fromSpecification:assets:completionHandler:
drawColorLayer:inBounds:
drawImageLayer:inBounds:assets:
isRegularFile
regularFileContents
initWithData:
_fileCache
_invokeCallToActionShakeCompletionIfNecessary
_updateCallToActionLegibility
_updateStatusTextViewForLegibilitySettings
_updateLogoutButtonForLegibilitySettings
_updateSlideUpAppGrabberViewForLegibilitySettings
_layoutSlideUpAppGrabberView
_logoutButtonInsets
isVibrancyAllowed
_updateSlideToAppGrabberBackgroundView
slideUpAppGrabberViewVisible
fakeWallpaperVisible
_slideUpAppGrabberBackgroundView
_logoutHugCorner
_callToActionShakeCompletion
_callToActionShakeContainerParentView
_callToActionShakeContainer
_slideUpAppGrabberViewVisible
_fakeWallpaperVisible
_slideUpAppGrabberView
isTimeEnabled
_finalizeAndClearPluginAnimationContext
setActiveToOverlayTransition:
setActiveFromOverlayTransition:
setActiveOverlayTransition:
activeToOverlayTransition
activeFromOverlayTransition
activeOverlayTransition
_activeToOverlayTransition
_activeFromOverlayTransition
_activeOverlayTransition
initWithValue:fillColor:
sliceWithValue:fillColor:
fillColor
_fillColor
setClearsContextBeforeDrawing:
_updateMetrics
_rotateContext
_drawSlice:atValue:
setSlices:
_slices
_valueTotal
_radius
_center
_defaultRotation
_hasAnimation
starkScreenAlertManager
_alertDidDeactivate
initWithLayoutInsets:perservingCurrentListOrigin:
_layoutInsets
_preservesCurrentListOrigin
setShouldUseGrapeFlags:
_setForceLevelClassifier:
_forceLevelClassifier
setRespectsSystemGestureTouchFiltering:
orbGestureRegionMax
_initWithBSSettings:
stringForStatusBarStyle:
appendUnsignedInteger:counterpart:
_BSSettings
carDisplaySettings
_updateVehicleInfo
dictionaryWithContentsOfFile:
takeScreenForConnection
setResizesToFullScreen:
_updateLockOutMode
_alertSheetPresented:
_alertSheetDismissed:
_externalDeviceScreenBecameAvailable:
_externalDeviceScreenBecameUnavailable:
UIStatusBarDisableCarPlayDockItem
_tearDownAndInvalidate:
setFocusController:
MFiCertificateSerialNumber
allVehicles
certificateSerialNumber
isEqualToData:
pairingStatus
_didChangeFromState:
setEffectiveTopDisplay:actualTopDisplay:forStarkTrigger:withAnimationFactory:
_setACBackEnabled:forRequester:
_updateDock
_toggleNotificationSuspendedState
_toggleNowPlayingVisible:
_takeScreenIfNecessaryForTopDisplayActivation
contextWithState:
setAssociatedBundleID:
_handleMenuEventAndTakeScreen:
_handleSuspendTopMost
_setSiriState:
setSuspended:forReason:
assistantController
_dismissSiriWithFactory:animations:completion:
_hideWindowsForSetup:
animateLockOutModeChanges
setLockOutMode:animated:
setWorkspaceIdentifier:
_defaultScreenFrameOffsetForStatusBar:
takeScreenForClient:reason:
handleMenuEvent
_scrollToFirstIconPageIfPossible
_updateAlertSheetFocus
_dismissAlertItemAfterDelay:
scheduledTimerWithTimeInterval:repeats:block:
starkScreenControllerShouldDelayUpdateLockoutMode:
lockOutMode
_newNowPlayingScene
_createFakeIconOperationController
setIconVisibilityDelegate:
initWithConfiguration:systemGestureManager:layoutStrategy:debugName:scene:
starkScreenControllerWantsRelockUI:
_launchNowPlaying
_allowInCallOverrideStyle
_allowNavigationOverrideStyle
_collectCarPlayDiagnostics
focusMovementInfo
_isStatusBarScene:
heading
initWithFocusMovementInfo:
_setNeedsNonDeferredFocusUpdate
_isACBackEnabled
requestCarUIForURL:
handleFocusMovementAction:fromScene:
initWithDisplay:configuration:
iOSUIRequestedForApplicationURL:
siriRequestedWithAction:
lockoutWindow
setNowPlayingForWorkspaceApplication:
handleUncompletedAppLaunchWithStarkTrigger:
cleanupForTopDisplayIfNecessaryWithAnimationFactory:
_noteInitializationCompleted
_noteConnectSetupCompleted
_noteDisconnectCompleted
_fbsDisplay
_actualTopDisplay
_effectiveTopDisplay
_alertSheets
_alertSheetsToWindowMap
_screenState
_lockOutMode
_delayUpdatingLockOutMode
_lockOutViewController
_lockOutWindow
_lockOutLayoutElement
_nowPlayingScene
_nowPlayingWindow
_showingNowPlaying
_iconWindow
_statusBarViewController
_statusBarWindow
_notificationWindow
_siriWindow
_siriState
_alertBorrowScreenToken
_siriBorrowScreenToken
_alertDismissTimer
_currentlyGatheringLogs
_radarAlertItem
_focusController
_externalDevice
_externalDeviceScreenAvailable
_oemScreenLayoutElement
_acBackDisabledReasons
_previouslyFocusedScene
_focusMovementManager
_dockIsEnabled
_hidModeForMode:
_userEventsDidIdle
_userEventsDidUnIdle
_userEventPresenceTriggered
_userEventPresenceExpired
_userEventReceived
resizingMode
_baseImage
_updateLegibilityViews
isCameraPageEnabled
_cameraIndicatorImage:
_pageIndicatorImage:
_currentPageIndicatorColor
_pageIndicatorColor
_modernBounds
_sbLegibilitySettings
_legibilityViews
_cameraPageEnabled
_disableLockAssertion
_initWithStartView:endView:translucent:
isUserInteractionEnabled
allowsHitTesting
setAllowsHitTesting:
allowsGroupOpacityDuringCrossfade
adaptsAnimationFactoryTimingFunction
_startView
_endView
_translucent
_crossfaded
_allowsGroupOpacityDuringCrossfade
_adaptsAnimationFactoryTimingFunction
_setAlertManager:
_hideAlerts:onBehalfOfAlert:
_stopHidingAlertsForAlert:
_adjustHiddenAlerts
_showAlert:
_hideAlert:
dumpTunnelState
_hiderToHideeMap
_hiddenAlerts
startDeliveringNotificationsToMainThread
_usbStarkConnected
_pairedVehiclesChanged:
_updateGeoSupport
stopDeliveringNotifications
appendPointer:withName:
promptRelockUIIfAppropriate
isPasscodeEntryAlertVisible
sharedConfiguration
currentCountrySupportsCarIntegration
updateCountryConfiguration:
_earlyStarkConnection
_clearEarlyConnectState
_promptConnectionSteps
acquireWithHandler:onQueue:
_scheduleClearEarlyConnectStateExpirationTimer
_unscheduleClearEarlyConnectStateExpirationTimer
_clearEarlyConnectStateTimerExpired
_clearPromptState
_setCurrentController:
prepareToHandleUnlockAttempt
handleUnlockAttempt
screenControllerForDisplay:
shouldShowCarPlayStatusBarItem
_displayToControllerMap
_currentScreenController
_spuriousScreenUndimmingAssertion
_deviceLockDisableAssertion
_lockScreenDisableAssertion
_earlyConnectDeviceLockDisableAssertion
_carPlayStatusBarStyleOverrideAssertion
_earlyCarPlayStatusBarStyleOverrideAssertion
_hasShownConnectedAlert
_delayShowingConnectedAlert
_geoSupported
initWithMediaControlsViewController:
artworkView
controlsViewController
artworkViewController
_mediaPlayerViewController
_controlsViewController
_artworkViewController
initWithConfiguration:allowedTargetIdentifier:
setNotificationHeight:
initWithFrame:collectionViewLayout:
registerClass:forCellWithReuseIdentifier:
_performBackGesture:
_performSelectGesture:
_performSwipeGesture:
notificationViewController:stateDidChangeFrom:
dismissCurrent
noteContextCanceled:
setSuspended:cancellingCurrent:forReason:
dequeueReusableCellWithReuseIdentifier:forIndexPath:
setStarkSessionConfiguration:
setBannerContext:
isStarkBannerItem
shouldShowModalSubActions
setPausedForUserInteraction:
deleteItemsAtIndexPaths:
alertControllerWithTitle:message:preferredStyle:
noteContext:subActionSelected:
_setDefaultAlertAction:
performBatchUpdates:completion:
noteContextSelected:
noteDidDismiss
_performCancelNotificationTapGesture:
notificationViewController:willDisplayBannerView:
subtype
_wheelChangedWithEvent:
collectionView:didSelectItemAtIndexPath:
currentContext
insertItemsAtIndexPaths:
collectionView:numberOfItemsInSection:
collectionView:cellForItemAtIndexPath:
numberOfSectionsInCollectionView:
collectionView:viewForSupplementaryElementOfKind:atIndexPath:
collectionView:canMoveItemAtIndexPath:
collectionView:moveItemAtIndexPath:toIndexPath:
indexTitlesForCollectionView:
collectionView:indexPathForIndexTitle:atIndex:
collectionView:shouldHighlightItemAtIndexPath:
collectionView:didHighlightItemAtIndexPath:
collectionView:didUnhighlightItemAtIndexPath:
collectionView:shouldSelectItemAtIndexPath:
collectionView:shouldDeselectItemAtIndexPath:
collectionView:didDeselectItemAtIndexPath:
collectionView:willDisplayCell:forItemAtIndexPath:
collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:
collectionView:didEndDisplayingCell:forItemAtIndexPath:
collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:
collectionView:shouldShowMenuForItemAtIndexPath:
collectionView:canPerformAction:forItemAtIndexPath:withSender:
collectionView:performAction:forItemAtIndexPath:withSender:
collectionView:transitionLayoutForOldLayout:newLayout:
collectionView:canFocusItemAtIndexPath:
collectionView:shouldUpdateFocusInContext:
collectionView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInCollectionView:
collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:
collectionView:targetContentOffsetForProposedContentOffset:
starkBannerTarget:didChangeContextWithDismissReason:
initWithConfiguration:systemGestureManager:
_showTestNotificationWithTitle:
_touchCapable
_dismissingForSystemGesture
_backGestureRecognizer
_selectGestureRecognizer
_alertItemBannerSource
_currentContext
_currentSubActionLabels
_currentCell
_notificationsLayout
_notificationsView
_cancelNotificationTapGestureRecognizer
_dismissNotificationTouchpadSwipeGestureRecognizer
_configureIconImageView:
_crossfadeToIconImage:
setImageView:
addBulletin:interrupt:
_percentVisibleForPercentComplete:
_touchSwallowingView
concurrent
_pageViewSizeForDisplayItem:
_homePageContentView
_shouldHostAppDisplayItem:
_contextHostingAppViewForDisplayItem:
_viewForService:displayItem:
_viewForRemoteAlert:placeholder:displayItem:
_snapshotViewForDisplayItem:preferringDownscaledSnapshot:synchronously:
_updateCachedPageViewsWithVisibleItemRange:scrollDirection:allItems:
_totalItemsForWhichToKeepAroundSnapshots
_isSnapshotDisplayItem:
_useSnapshotsWhenPossible
_contentSizeForDisplayItem:
sizeForAppView:representing:
_lastVisibleRange
_homeScreenPageView
_hostedApps
_appSnapshots
_switcherServiceViewControllerMap
hostViewForRequester:
setContextHostView:
setContextHostRequester:
_deviceOrientationChanged:
_appKilledInAppSwitcher:
_windowDidBecomeKey:
initWithSceneManager:
neverBreadcrumb
alwaysBreadcrumb
_breadcrumbBundleIdForApplication:withTransitionContext:
systemNavigationActionContextWithTitle:bundleId:
systemNavigationActionContextWithURL:
_openStrategyForAppLinkState:
setOpenStrategy:
_destinationContextsForApplication:withTransitionContext:
postPresentedWithDataBuilder:
info
postWasTapped:dataBuilder:
_presentAssistantFromBreadcrumb
_presentSpotlightFromSource:fromBreadcrumb:
_activateAppLink:withAppLinkState:transitionContext:wasFromSpotlight:previousBreadcrumb:
_activateBreadcrumbApplication:
initWithDestinationContexts:forResponseOnQueue:withHandler:
bundleIdForDestination:
_isActivatingPinnedBreadcrumbApp:withTransitionContext:
setCurrentBreadcrumbNavigationAction:
_shouldBreadcrumbApplication:withTransitionContext:
_breadcrumbNavigationActionForApplication:withTransitionContext:
setByAddingObject:
shouldChangeOrientation
orientationRequested
setScene:
setOldClientSettings:
_externalClientSettingsDiffInspector
setApp:
setUpdatedClientSettings:
_appClientSettingsDiffInspector
_internalClientSettingsDiffInspector
deactivationReasons
_updateLevelForScene:transitionContext:
updateFaceContactExpectation
oldClientSettings
updatedClientSettings
observeProximityDetectionModesWithBlock:
observeDefaultStatusBarStyleWithBlock:
defaultStatusBarHidden
observeDefaultStatusBarHiddenWithBlock:
observeDefaultPNGNameWithBlock:
defaultPNGExpirationTime
observeDefaultPNGExpirationTimeWithBlock:
observeCompatibilityModeWithBlock:
observeDeviceOrientationEventsEnabledWithBlock:
observeInterfaceOrientationChangesDisabledWithBlock:
_application:initiatedChangefromInterfaceOrientation:toInterfaceOrientation:scene:sceneSettings:transitionContext:
observeInterfaceOrientationWithBlock:
observeIdleTimerDisabledWithBlock:
observeControlCenterRevealModeWithBlock:
observeNotificationCenterRevealModeWithBlock:
observeWindowOverlayInsetsWithBlock:
observePreferredLevelWithBlock:
observePreferredSceneHostIdentifierWithBlock:
_updateExternalForegroundApplicationScenesToInterfaceOrientation:force:
_animateGeometryChangesForExternalForegroundApplicationScenes
_rotationAnimationSettingsForRotationFromInterfaceOrientation:toInterfaceOrientation:medusaSettings:
preferredSceneHostIdentifier
_effectiveKeyboardSceneLevelForClientSettings:
_validInterfaceOrientation
_validInterfaceOrientationChangeCount
_processedValidInterfaceOrientationChangeCount
_faceContactExpectationManager
_currentBreadcrumbNavigationAction
_oldClientSettings
_updatedClientSettings
_dismissingAlert
_newModeViewForMode:
_updateLockOutModeIfPending
lockoutView
setLockOutMode:
_modeView
_previousModeView
_layoutWindowHostManager
_layoutWindowHostRequester
_inDealloc
_pendingAnimated
_pendingMode
_startupAnimation
focusController
_assertingFocus
_borrowScreenToken
_callOrFaceTimeStateChanged
defaultActionType
_inCallOrFaceTime
starkBannerItemDidReloadDisplayProperties:
reloadDisplayProperties
subTitle
categoryImage
effectiveDefaultActionType
ignoreAction
matchesContext:
_displayReasons
setCalculationMode:
initWithFrame:backdropStyle:
setGrabberVisible:
_disableRasterizeInAnimations
starkSessionConfiguration
_contextView
_starkSessionConfiguration
_dropShadowImageView
_bezierPathWithPillRect:cornerRadius:
stroke
setHighlighted:afterDelay:
_performSetHighlighted
_didSetHighlighted:
protectDelayedUnhighlights
setProtectDelayedUnhighlights:
_protectDelayedUnhighlights
registerClass:forDecorationViewOfKind:
prepareLayout
layoutAttributesForCellWithIndexPath:
layoutAttributesForDecorationViewOfKind:withIndexPath:
setZIndex:
indexPathBeforeUpdate
indexPathAfterUpdate
updateAction
_transitionAttributesForAction:withLayoutAttributes:
layoutAttributesForElementsInRect:
layoutAttributesForItemAtIndexPath:
layoutAttributesForDecorationViewOfKind:atIndexPath:
shouldInvalidateLayoutForBoundsChange:
_indexPathsToInsertForDecorationViewOfKind:
_indexPathsToDeleteForDecorationViewOfKind:
prepareForCollectionViewUpdates:
finalizeCollectionViewUpdates
initialLayoutAttributesForAppearingItemAtIndexPath:
finalLayoutAttributesForDisappearingItemAtIndexPath:
initialLayoutAttributesForAppearingDecorationElementOfKind:atIndexPath:
finalLayoutAttributesForDisappearingDecorationElementOfKind:atIndexPath:
notificationHeight
transitionSpacing
setTransitionSpacing:
subActionsInsets
setSubActionsInsets:
subActionPadding
setSubActionPadding:
subActionHeight
setSubActionHeight:
_notificationAttributes
_previousNotificationAttributes
_subActionsAttributes
_previousSubActionsAttributes
_backgroundAttributes
_previousBackgroundAttributes
_notificationHeight
_transitionSpacing
_subActionsInsets
_subActionPadding
_subActionHeight
_handleWidgetLaunchRecommendation:completion:
dataClass
configureWithData:
metricID
_postMetric:withID:
metricDidPost:data:
componentID
initWithSceneManager:proximitySensorManager:
_frontmostSceneExpectsFaceContact
_setFaceExpected:
_proximitySensorClientID
faceExpected
client:wantsProximityDetectionEnabled:
_proximitySensorManager
_faceExpected
localizedName
_applications
initWithBulletin:feed:configuration:
starkBannerContent
appName
_subTitle
_externalSystemWhiteColor
_bbDismissAppearance
bbSupplementaryActions
_bbDismissAction
bbAllActions
actionWithBlock:
updateBulletinToInstance:
_transactionProvider
resistance
_gravity
_velocity
_elasticity
_friction
_resistance
_multiplier
_minVelocityToAssist
_maxVelocityToAssist
_maxVelocityAssistance
_removeGestureManager
_addGestureObserver:withPriority:
_updateGestureManager
_removeGestureObserver:
_observersForPriority:
_enumerateObserversByPriority:
_highestPriorityObservers
_hasObservers
_addGestureManager
initWithPriority:
_notifyObserversOfGesture:
setGestureHandler:
_observersByPriority
_motionGestureManager
noteShouldStopDisablingStatusBarOverrides
_appHostWrapper
_targetStatusBarStyle
_layoutRole
_lockOrientation:
_unlockOrientation
_suspendGestureChanged:
_suspendGestureEndedWithCompletionType:
_suspendGestureCancelled
_reportTransactionCompletedWithType:
_executeUnscatterWithCompletion:
initWithCMPocketStateManager:calloutQueue:
isPocketStateAvailable
pocketStateMonitor:pocketStateDidChangeFrom:to:
_pocketState
_calloutQueue
initWithAlertItem:configuration:
allowMessageInCar
category
_originDate
numberOfLinesInTitle
numberOfButtons
setBodyTextMaxLineCount:
setTitleMaxLineCount:
viewWithTag:
_buttonAtIndex:
bodyTextLabel
setTag:
isShowingImage
_showingImage
setAnimateLockOutModeChanges:
_animateLockOutModeChanges
_configureGestures
_shouldConvertToMultipleIconListsInLandscapeOrientation
_convertToMultipleIconListsAnimated:
enumeratePageBackgroundViewsUsingBlock:
setAccessibilityLegibilitySettings:
_addIconListView:
isDisplayingMultipleIconLists
_newPageBackgroundView
_removeIconListView:
_countOfAdditionalPagesToKeepVisibleInOneDirection
_countOfAdditionalPagesToKeepAnimatingInOneDirection
isAnimatingRotation
_convertToSingleIconListAnimated:
_titleFontSize
_orientationDidChange:
setAnimatingRotation:
_frameForScalingView
_titleVerticalOffsetForOrientation:
_pageBackgroundFrameForPageRect:
_updateIconListContainment:atIndex:
_currentPageIndexDidChange
_updateScalingViewLocation
iconListViewAtPoint:
willTransitionAnimated:withSettings:
didTransitionAnimated:
setDisplayingMultipleIconLists:
_updateScalingViewFrame
_handleOutsideTap:
_tapToCloseGestureRecognizer:shouldReceiveTouch:
_handleReachabilityActivatedAnimate:completion:
_handleReachabilityDectivatedAnimate:completion:
repositionForReachabilityActivated:animated:actions:completion:
_scrollViewClass
visibleFolderRelativeImageCenterForIcon:
_iconListFrameForPageRect:atIndex:
locationCountsAsInsideFolder:
_showsTitle
fadeContentForMinificationFraction:
reachabilityYOffset
_scrollClipView
_pageBackgroundViews
_pageBackgroundViewsForIconListViews
_scalingViewPageIndex
_preReachabilityTitleOrigin
_reachabilityTitleOrigin
_preReachabilityScaleOrigin
_reachabilityScaleOrigin
_reachabilityYOffset
_layingOutForReachability
_displayingMultipleIconLists
_animatingRotation
_noteLocked
_noteLockScreenUndimmed
_noteAppWillBecomeFrontmost:
_noteAppDidBecomeFrontmost:
_noteHomeScreen
_noteSiriVisibilityChanged
_noteAppSwitcherDidAppear
_noteSearchVisibilityDidChange:
_noteNotificationCenterAllWillAppear
_noteNotificationCenterWillDismiss
_noteLockScreenPasscodeDidAppear
_noteLockScreenPasscodeDidDisappear
_noteControlCenterControlDidActivate:
_noteControlCenterControlDidDeactivate:
_noteMediaControlsDidAppear
_noteMediaControlsDidDisappear
_noteBacklightDidTurnOn:
_activeContext
_setActiveCategory:
_resetCategoryForContext:
_nameForCurrentContext
_noteNotificationCenterTodayWillAppear
_noteLockScreenCameraDidAppear
_noteLockScreenCameraDidDisappear
_thisCategoryStartTime
_lastCategoryChangeTime
_activeCategory
_previousCategory
_lastCameraActivationWasForBottomCorner
_newGrabberView:
target
_layoutContentContainerView
accessoryView
secondaryContentView
_centeredBoundsForRect:
_contentSizeThatFits:
_defaultGrabberColor
_vibrantContentView
_setGrabberColor:
_layoutPullDownContainerView
_layoutBackdropView
_layoutGrabber
_layoutSeparatorView
_updateContentAlpha
_updateHighlightView
_centeredBounds
_layoutAccessoryView
_layoutContentView
_pullDownContentAlpha
_grabberAlpha
_defaultButtonColor
_defaultButtonTextColor
grabberVisible
separatorVisible
pullDownView
pullDownViewHeight
pullDownBottomOverhangHeight
_pullDownView
_pullDownContainerView
_callbacks
_wrapperCallbacks
_grabberSize
_hidesGrabberOnPullDown
_minimumHeight
_contentViewFlags
_grabberVisible
_separatorVisible
_cleanUpAllStatusBarSettingsAssertions
_setStatusBarValueForPropertyWithAssertions:setter:
_updateWindowLevel
_applyEdgeInsetsToStatusBar
valueWithUIEdgeInsets:
topmostActiveLayoutLayer
UIEdgeInsetsValue
setStatusBarAlpha:
addPointer:
_evaluateSettings
removePointerAtIndex:
diffFromSettings:toSettings:
_isInAnimationBlockWithAnimationsEnabled
setStatusBarStyle:animation:
inspectChangesWithBlock:
_descriptionForPropertyWithAssertions:
statusBarWindowFrame
statusBarEdgeInsets
setStatusBarUserInteractionEnabled:
isStatusBarUserInteractionEnabled
setWindowLevel:forOverrideReason:
removeWindowLevelOverrideReason:
_disableAlphaChangeAssertions
_disableUserInteractionChangeAssertions
_windowLevelOverrideReasons
_windowLevelOverrideMap
_statusBarSettingsAssertionsByLevel
_currentStatusBarSettings
_edgeInsetsDictionary
_activeLayoutLayers
_defaultWindowLevel
pointerAtIndex:
_updateOuterShadowView
_updateIconTitleViews
_scrollProgressForEffectiveIndex:displayItemsCount:progressPresented:frameOrigin:
_iconTitleContainerForDisplayItem:
_updateScrollViewPagingWidth
_reduceMotionAnimationFactory
_frameForAllItemsInScrollView
_opacityForIconTitleViewAtIndex:
_setInterpageSpacing:
_visibleIconTitleContainers
_outerShadowView
initWithComponentId:
_postQueryableMetric
registerQueriableMetric:callback:
_builder
_assistantViewController
_callDurationChanged
carPlayRecentlyUsedApplicationIdentifiers
_generateOrderedBundleIdentifiersWithBundleIdentifiers:
dockSettingsDidChange
setCarPlayRecentlyUsedApplicationIdentifiers:
currentAbbreviatedStatusBarString
_isNowPlayingApplicationForBundleIdentifier:
activeBundleIdentifier
dockImageForBundleIdentifier:format:traitCollection:
_iconVisibilityDelegate
_orderedBundleIdentifiers
_activeBundleIdentifier
_mostRecentNowPlayingBundleIdentifier
_mostRecentOtherBundleIdentifier
_callDuration
_carPlayDefaults
initWithForceStageInteractionProgress:target:action:
_receivedFirstInteractionProgressUpdate
_forceStageInteractionProgress
rebootWithContext:
setScaleForNoBlur:
setOrbCancelsScroll:
setScrollCancelsOrb:
setIrisLoopFadesOutUI:
orbCancelsScroll
irisLoopFadesOutUI
_orbCancelsScroll
_scrollCancelsOrb
_irisLoopFadesOutUI
pressName
pressSequence
durationDown
setDownDuration:
durationUp
setUpDuration:
setSequences:
didTriggerSOS
setDidTriggerSOS:
clickMax
setClickMax:
setPressName:
setPressSequence:
_didTriggerSOS
_pressName
_pressSequence
_clickMax
_initWithInitialRestartState:startupController:systemService:
_shutdownWithOptions:description:
_persistStartupTransitionContextFromRebootContext:
_restartWithTransitionRequest:
_postShutdownNotification
shutdownWithOptions:
_killAllAppsForPendingExitWithReason:description:expiration:completion:
_reallyRestartWithTransitionRequest:
_persistStartupTransitionContextFromRestartRequest:
_doRestartForTransition:
___waitForeverTillBackBoarddExits
_isUserSwitchPending
_startupController
_pendingRestartTransitionRequest
_isShuttingDown
_isRestartImminent
_systemService
_timerFont
_newTimerDialForSettings:
_enumerateReplicateViews:
formatAbbreviatedTimerDuration:
monospacedDigitSystemFontOfSize:weight:
_createReplicateView
_delayedForRotation
sublayerTransform
_zoomAppForZoomFraction:
_translateAppForZoomFraction:
_fadeAppForZoomFraction:
setAppZoomAnimator:
_appZoomDelay
appZoomAnimator
_appZPositionForZoomFraction:
zPosition
distantScale
_appZoomView
_destinationFrame
_distantScale
_appZoomAnimator
activeViewController
performEndAppearanceToController:withTransitionBlock:
setActiveAlert:
setActiveViewController:
alertWindowViewControllerDelegate
_alertWindowViewControllerDelegate
_activeAlert
_activeViewController
_childAlerts
numberOfPressesToTrigger
notePressSequenceObserver:didReportData:
_notePowerDownImminent
_setPressCollector:
_pressCollector
_alertToActivate
_alertToDeactivate
_transitionIsAlertActivation
addLoginObserver:
removeLoginObserver:
loginAppDidFinishLaunching:
_waitForLoginAppToFinishLaunchingTransaction
_coordinate
_setReferenceIconViewHiddenIfAppropriate:
initWithDeactivatingApp:alertImpersonator:starkScreenController:
setDeckSwitcherForegroundDarkeningFactor:
setDeckSwitcherForegroundSaturationDeltaFactor:
setDeckSwitcherForegroundBlurRadius:
setDeckSwitcherForegroundWallpaperStyle:
setDeckSwitcherBackgroundDarkeningFactor:
setDeckSwitcherBackgroundSaturationDeltaFactor:
setDeckSwitcherBackgroundBlurRadius:
setDeckSwitcherBackgroundWallpaperStyle:
deckSwitcherForegroundDarkeningFactor
_deckSwitcherForegroundWallpaperStyle
_deckSwitcherBackgroundWallpaperStyle
_deckSwitcherForegroundDarkeningFactor
_deckSwitcherBackgroundDarkeningFactor
_deckSwitcherForegroundSaturationDeltaFactor
_deckSwitcherBackgroundSaturationDeltaFactor
_deckSwitcherForegroundBlurRadius
_deckSwitcherBackgroundBlurRadius
_notifyObservers
_sharedInstance
setSize:
_addObserver:
_removeObserver:
_position
_legibilitySettingsForStyle:
subscriber
_removeSubscriber:
setSubscriber:
addSubscriberForFileURL:usingBlock:
fileCoordinator
_activateAlertItem:
setTimer:
downloadMessage
setDownloadMessage:
_downloadMessage
_fileCoordinator
_subscriber
_isPortrait
shouldAddTopInsetForStyle:
shouldShowDateViewForStyle:
suggestedContentInsetsForTodayPageWithMultiLineDate:pageBounds:
supportsMultiLineDayOfWeekMonthDayStyle
minYofClippableContent
_configureContentView
_resultingOrientation
__runAlongsideAnimations
setRecoil:amount:forPriority:withAnimationFactory:
_recoilByHighestPriorityWithAnimationFactory:
getAnchorEdge:forLayoutRole:shouldReverseLayoutDirection:
convertAnchorEdge:toLayoutOrientation:
getAnchorEdge:forLayoutRole:
anchorEdgeForPrimaryLayoutRole
_referenceSizeForEntity:inLayoutState:
_referenceSizeForLayoutElement:inLayoutState:
_referenceFrameForLayoutElement:inLayoutState:
forceKeyboardAway
_postLayoutRoleChangedNotificationsForEndingLayoutStateTransition
_dropResignActiveAssertionForEndingLayoutStateTransition
_stopSuppressingKeyboardForEndingLayoutStateTransition
_acquireOrReleaseHideSpringBoardStatusBarAssertionIfNecessary
_acquireOrReleaseOrientationLockIfNecessary
_updateWallpaperStyle
_checkSubviewOrdering
initWithApplication:layoutContext:
_resizeAppsAnimationControllerWithTransitionRequest:
_sideOverlaySlideInAnimationControllerWithTransitionRequest:
_sideAppPopOffAnimationControllerWithTransitionRequest:
_sideAppMakePrimaryAnimationControllerWithTransitionRequest:
_sideSwitcherPresentationAnimationControllerWithTransitionRequest:
_sideSwitcherDismissalAnimationControllerWithTransitionRequest:
_sideAppPresentationAnimationControllerWithTransitionRequest:animationSettings:
_primaryAppPopOffAnimationControllerWithTransitionRequest:
_primaryAppSlideOverAnimationControllerWithTransitionRequest:
_rotateAppsAnimationControllerWithTransitionRequest:
_sideAppDismissalAnimationControllerWithTransitionRequest:animationSettings:
_animationSettingsForPushAndPopWithDuration:
popLayoutElementViewControllerWithAnimationSettings:completion:
pushLayoutElementViewController:withAnimationSettings:completion:
_pushSideAppOverlayController:dimOtherViews:withAnimationSettings:fadeIn:completion:
capturedSnapshotView
_disableSubviewReordering
setCapturedSnapshotView:
_reenableSubviewReordering
_setAnimator:
_newSidePullDynamicAnimationForTargetValue:withStartValue:withInitialVelocity:unitSize:
_animateLayoutElementViewController:inLayoutState:withAnimationSettings:animationBlock:completion:
anchorEdgeForLayoutRole:
_defaultWidthForSideApp
_edgeToAlignLayoutFrameForRole:inLayoutState:
_layoutSizeForRole:withLayoutContext:
_visibleLayoutFrameForElement:inLayoutState:
_recoilMainSceneLayout:withAnimationFactory:
_pushSideAppOverlayController:withAnimationSettings:completion:
_makeSideAppControllerPrimaryWithAnimationSettings:completion:
_resizeAppViewsWithAnimationSettings:completion:
_rotateAppViewsWithAnimationSettings:completion:
_transitionToOrFromSideSwitcherForPresenting:completion:
_fadeInSideAppWithAnimationSettings:completion:
_slideInSideAppWithAnimationSettings:completion:
_fadeOutSideAppWithAnimationSettings:completion:
_slideOutSideAppWithAnimationSettings:completion:
setRecoil:forPriority:withAnimationFactory:
convertAnchorEdgeToLayoutOrientation:
popLayoutElementViewControllerWithCompletion:
pushLayoutElementViewController:withCompletion:
_startClippingbreadcrumbLayoutElementController:
_stopClippingbreadcrumbLayoutElementController:
_layoutGestureManager
_layoutOrientedAdornmentContainer
_breadcrumbClippingView
_disableSubviewReorderingCount
_recoilRequesters
_overlayDeactivationAssertion
_hideSpringBoardStatusBarAssertion
_preventIconRotationReason
_capturedSnapshotView
_layoutContext
initWithFeatureId:opportunityEvent:conversionEvent:registerProperties:
trackGoalOpportunityEventWithPropertyValues:
trackGoalOpportunityEventWithConversion:propertyValues:
setPreservesSuperviewLayoutMargins:
suggestedFrameForListForPage:pageBounds:
_layoutTodayView
_layoutWeather
_updateContentInsetsForScrollView:
setTodayViewShouldBeOffset:
setContainsDateTimeDisplay:
suggestedLeadingBottomCornerForWeatherViewForPageBounds:
suggestedFrameForDateOnlyViewInScreenCoordinates:multiLineDate:
_todayViewInsets
_dateMovingScrollViewIfExists
weatherViewOffset
todayViewShouldBeOffset
containsDateTimeDisplay
_todayViewShouldBeOffset
_containsDateTimeDisplay
_todayView
_todayListMajorScrollView
_todayListMinorScrollView
_weatherView
_weatherViewOffset
searchView
listWidthForNotificationCenter
notificationListInsetMargins
notificationsView
_notificationListInsetMargins
remoteAlertWantsToAllowBanners:
remoteAlertDidRequestDismissal
remoteAlertWantsToUpdateAllowedHardwareButtonEvents:
remoteAlertWantsWallpaperTunnelActive:
remoteAlertWantsToSetBackgroundStyle:withDuration:
remoteAlertWantsMenuButtonDismissal:
remoteAlertWantsToAllowAlertStacking:
remoteAlertWantsToSetDismissalAnimationStyle:
remoteAlertWantsToSetDesiredStatusBarStyleOverrides:
remoteAlertWantsToSetIdleTimerDisabled:forReason:
remoteAlertWantsToSetAutoLockDuration:
remoteAlertWantsToSetStatusBarHidden:withDuration:
remoteAlertWantsToDismissOnUILock:
remoteAlertWantsToDisableFadeInAnimation:
remoteAlertWantsToSetWhitePointAdaptivityStyle:
remoteAlertDidTerminateWithError:
setAllowsBanners:
setDesiredHardwareButtonEvents:
setAllowsMenuButtonDismissal:
setBackgroundStyle:withDuration:
setAllowsAlertStacking:
setDismissalAnimationStyle:
setDesiredStatusBarStyleOverrides:
setDesiredAutoLockDuration:
setStatusBarHidden:withDuration:
setShouldDismissOnUILock:
setShouldDisableFadeInAnimation:
setSupportedInterfaceOrientationOverride:
configureWithContext:completion:
handleHomeButtonPressed
_initWithRemoteAlertHostViewController:
_cleanupIdleTimerDisabledReasons
_setImpersonatedApplicationBundleID:
_setDismissWithHomeButton:
_setWantsWallpaperTunnel:immediately:
_setDismissalAnimationStyle:
_setLaunchingInterfaceOrientation:
setRequestedBackgroundStyle:
_setHasTranslucentBackground:
_setSuppressesSiri:
setActivatedForSiri:
_setCustomStatusBarStyle:
serviceViewControllerProxyWithErrorHandler:
_setShouldDisableFadeInAnimation:
_requestWithServiceName:serviceClass:context:options:completion:
_updateStatusBarAssertion
remoteAlertDidActivate:
remoteAlertDidDeactivate:
serviceName
_didTerminateWithError:
remoteAlertDidRequestDismissal:
remoteAlert:didTerminateWithError:
setNeedsWhitePointAdaptivityStyleUpdate
requestWithDefinition:context:delegate:completion:
remoteAlertDelegate
_remoteAlertHostViewController
_remoteAlertDelegate
_impersonatedApplicationBundleID
_dismissWithHomeButton
_userRequestedHomeButtonDismissal
_desiredButtonEvents
_wantsWallpaperTunnel
_hasTranslucentBackground
_requestedBackgroundStyle
_allowsAlertStacking
_dismissalAnimationStyle
_disableFadeInAnimation
_idleTimerDisabledReasons
_requestedAutoLockTime
_hasCustomStatusBarStyle
_customStatusBarStyle
_desiredStatusBarStyleOverrides
_wantsToShowStatusBar
_wantsToManageStatusBarAtActivation
_canManageStatusBarVisibility
_suppressesSiri
_activatedForSiri
_dismissOnUILock
_desiredLaunchingInterfaceOrientation
_dontCancelStatusBarStyleOverrides
_clientActivationHandler
_clientDeactivationHandler
_forCarPlay
_canChangePendingOfAlertItems
_beingPresentedObscured
_willAnimateIn
_willAnimateOut
_powerDownSliderDidBeginSlide
setCanAlterScreenBrightness:
_powerDownSliderDidUpdateSlideWithValue:
canAlterScreenBrightness
_powerDownSliderDidCompleteSlide
_powerDownSliderDidCancelSlide
_cancelButtonTapped
_idleTimerFired
_canAlterScreenBrightness
_powerDownDelegate
_hiddenLockScreenForeground
alertWindow:resizedFromContentFrame:toContentFrame:
sb_commonInitScreenEdgePanGestureRecognizer
shouldUseGrapeFlags
grabberActiveZoneWidth
edges
_locationForTouch:
_touchInterfaceOrientation
setGrabberActiveZoneWidth:
_grabberActiveZoneWidth
updateParameters
setSpringConstant:
startingAmplitude
endingAmplitude
setEndingAmplitude:
springStrength
setSpringStrength:
springDecay
setSpringDecay:
minimumSpringStrength
setMinimumSpringStrength:
massDecay
setMassDecay:
minimumMass
setMinimumMass:
mink
minm
psi_n
psi_d
zeta
initWithLiftToWakeController:
_backlightWillTurnOn:
_setGestureWokeScreen:
isLockScreenVisible
_gestureWokeScreen
_isLockScreenMainPageVisible
_isLockScreenIdleTimerDisabled
startFadeOutAnimationFromLockSource:
_setLiftToWakeController:
_setLockScreenManager:
_setBacklightController:
_accessor_lockScreenManager
_accessor_backlightController
_accessor_policyAggregator
_observing
_significantUserInteractionOccuredSinceWake
initWithNotificationListViewController:
alertingController
destination:requestsClearingNotificationRequestsInSections:
destination:requestsClearingNotificationRequestsFromDate:toDate:inSections:
_shouldHidePreviewForNotificationRequest:
reloadRequestsWithSuppressedContent
_isNotAuthenticated
setAlertingController:
notificationListViewControllerDidBeginSignificantUserInteraction:
notificationListViewControllerDidFinishSignificantUserInteraction:
setNotificationListViewController:
setNotificationsContainerViewController:
_alertingController
_notificationListViewController
_notificationsContainerViewController
notificationCenterRowActionFactory
_updateEnhancedContrastSettings:
_registerOrQueueReusableClass:forIdentifier:registerBlock:queueBlock:
registerClass:forHeaderFooterViewReuseIdentifier:
_registerOrQueueHeaderClassForInfo:
_registerOrQueueCellClassForInfo:
setTableViewNeedsReload
setSeparatorBottomShadowColor:
setSeparatorTopShadowColor:
showsVerticalScrollIndicator
_viewIfLoaded
_reloadTableViewData
_updateReusableViews
viewForRow:inSection:
_updateReusableView:forInterfaceItemInfo:withLayoutMode:
_sectionInfoAtIndexPath:
_rowInfoAtIndexPath:
_registerOrQueueReusableViewClassForInfo:
addChildRowIfPossible:
removeChildRowIfPossible:
numberOfRowsInSection:
operand
activeOperand
referenceOperand
isSectionOperand
_insertSection:atIndex:dryRun:
_insertRow:atIndex:inSection:dryRun:
_reloadTableForOperationIfNecessary:
insertSections:withRowAnimation:
_removeSection:dryRun:
_removeRow:fromSection:dryRun:
deleteSections:withRowAnimation:
_moveSection:toIndex:dryRun:
moveSection:toSection:
_replaceWithSection:section:dryRun:
_replaceWithRow:row:inSection:dryRun:
_reloadSectionHeaderFooters:withRowAnimation:
operandWithSection:row:
compoundOperandWithOperand:referenceOperand:
operationWithOperand:label:
_performInsertionOperation:
_performRemovalOperation:
_performMoveOperation:
_reloadOrInvalidateTableViewData
bs_each:
_performReplacementOperation:
headerViewForSection:
_performBatchUpdates:completion:
invalidateSectionAndRowViewHeights:
_representedBulletinAtIndexPath:
_selectAction:atIndexPath:
_sectionLocationAtIndexPath:
dequeueReusableHeaderFooterViewWithIdentifier:
_hasFirstBulletinInSectionWithRaiseAction
invalidateData
orderedSections
rowsInSectionWithIdentifier:
performOperationsWithoutAnimation:
reloadSections:withRowPopulator:
addRow:inSection:
reloadRows:inSection:
indexOfSection:
usesTableViewSeparators
setUsesTableViewSeparators:
canDismissBulletins
setCanDismissBulletins:
_orderedSections
_sectionIDsToRows
_reusableViewIDsToUnregisteredCellClassNames
_reusableViewIDsToUnregisteredHeaderClassNames
_tableViewNeedsReload
_animationsEnabled
_notificationCenterTableViewControllerDelegateFlags
_usesTableViewSeparators
_canDismissBulletins
initWithSection:row:
_section
_row
initWithOperand:operand:
_activeOperand
_referenceOperand
initWithOperand:label:
_operand
_effectiveViewController
initWithWork:
work
creationDate
_workBlock
_creationDate
_workQueue_expireWorkForKey:
_notifyObserversWorkDidChange
dequeueWorkForKey:
workDidChange:
initWithMaximumNumberOfWorkItemsPerKey:
keysWithWork
addWorkItem:forKey:
purgeWorkForKey:
setWorkExpirationPeriod:forKey:
defaultWorkExpirationPeriod
setDefaultWorkExpirationPeriod:
workItemsPerKey
observers
maxWorkPerKey
_workItemsPerKey
_keysWithWork
_workExpirationPeriods
_workQueue
_maxWorkPerKey
_observerQueue
_defaultWorkExpirationPeriod
isBluetoothAudioPrediction
_steps
_deactivateAlertIfPossible
initFromAlertImpersonator:toApp:starkScreenController:
_handleFailureToLaunch
_newAnimationFromAppToLauncher
_deactivateAlertTransaction
componentWithType:
setPriority:
resetProperties:
setProperties:
legibilitySettings:
offset:
hasValueForProperty:
resetAllProperties
_properties
_flag
_string
_alpha
_offset
initWithFrame:stepper:
initWithItem:targetFrame:feedbackBehavior:
finishInteractionWithVelocity:removingGravityAtMidway:
setBoundaryInsets:
_setBehavior:
_setCompletion:
_targetFrame
collisionBoundsType
collisionBoundingPath
_storeURL
_stateLock_loadFromDiskIfNeeded
_stateLock_markDirty
_saveQueue_save
_applicationShortcutItemsFromPlistArray:
_plistArrayFromApplicationShortcutItems:
bs_dictionaryByAddingEntriesFromDictionary:
clearStore
applicationShortcutItems
version
setApplicationShortcutItems:withLanguages:version:
_stateLock
_saveQueue
_cachedApplicationShortcutItems
_cachedLanguages
_cachedVersion
_isLoaded
_isDirty
statusBarStyleOverridesSettings
_assertionsByApp
_systemAnimationFenceCreatingIfNecessary:
setWatchdogPolicy:
setClientSettings:
updateSceneWithIdentifier:parameters:transitionContext:
_performSynchronizedCommit:
descriptionForObject:withObjectsAndNames:
waitsForSceneCommits
_clearApplicationActivationState
_noteWillCommitUpdateForScene:
shouldSendActivationResult
_appContext
_sceneTransitionContext
_clientSettings
_suspendedActivation
_shouldSendActivationResult
noteDependencyDidInvalidate
initFromApp:toApp:starkScreenController:
_viewToHide
_impersonatedApplication
_setupConstraints
_setLanguage:forLabel:
viewState
titleString
language
setLanguage:
_titleString
_language
initWithApplication:actions:
_notifySlavesForMilestoneRemovalIfNecessary
removeMilestones:
_willAddChildTransaction:
milestones
_suppressionReason
_completionType
_nonSlaveChildrenWaitingToFinish
_primaryAppOrAnyAppFromSet:
setStarted:
setCurrentAnimationSettings:
targetValue
initialValue
_animateFromValue:toValue:withSettings:beginTime:
currentAnimationSettings
hasReversed
setReversed:
forwardAnimationKey
beginTime
_percentCompleteForAnimation:time:
_animateFromRelativeValue:toRelativeValue:withSettings:beginTime:
_animationWithSettings:
_inputPercentCompleteForAnimation:outputPercentComplete:precision:
keyPath
_additiveAnimationForKeyPath:withSettings:beginTime:fromRelativeValue:toRelativeValue:
outstandingCAAnimationCompletionCount
setOutstandingCAAnimationCompletionCount:
reversalAnimationKeys
setForwardAnimationKey:
setBeginTimeMode:
isSpringAnimation
applyToCAAnimation:
durationForEpsilon:
_outputPercentCompleteForAnimation:inputPercentComplete:
setReversalAnimationKeys:
_started
_reversed
_layer
_keyPath
_initialValue
_targetValue
_outstandingCAAnimationCompletionCount
_forwardAnimationKey
_reversalAnimationKeys
initWithNavigationBarClass:toolbarClass:
_updateEdgesForExtendedLayoutForViewController:underlapNavBar:
pushViewController:animated:
_setBuiltinTransitionStyle:
bottomViewController
shouldUnderlapNavigationBar
shouldAllowVisibleSeparator
showSeparator:animated:
updateBlurProgress:animated:
_goBack
defaultDoubleHeight
edgesForExtendedLayout
setEdgesForExtendedLayout:
popViewControllerAnimated:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
_statusBarHeightAdjustmentForCurrentOrientation
_canBecomeFirstResponder
_shouldUnderlapNavigationBar
_shouldAllowVisibleSeparator
initWithHIDInterface:hardwareDefaults:
reloadDefaults
disableProximitySensor
_setProximityDetectionPermitted:
_updateProxState
isProximityDetectionPermitted
_setProximityDetectionEnabled:
_clientsWantDetectionEnabled
_enableProx
_disableProx
destroy
_clientsWantingDetectionEnabled
_hidInterface
_hardwareDefaults
_proximityDetectionPermitted
_objectWithinProximity
initWithDeactivatingApp:withAlertImpersonator:starkScreenController:
prefersLayerHostSnapshot
animationStartTime
setAnimationDelegate:
animationDidStop:finished:context:
setAnimationDidStopSelector:
initWithDeactivatingApp:starkScreenController:
_hasValidInputs
sb_containsEmoji
_canEllipsizeLabel
_canTightenLabel
fontName
iconViewDelegate
externalSystemTealColor
_adjustedFontForScripts:forFont:
iconViewClass
wantsFocusHighlight
_wantsFocusHighlight
_iconViewDelegate
_iconViewClass
removeKeyPathObserver:
_contentInsets
initWithGraphicsQuality:
handleModeChange:
_headerViewHeightForMode:
_modeControlFrameWithHeaderBounds:forMode:
_newSwipeGestureRecognizerWithDirection:
_updateEnabledStateOfSwipeGestures
_loadHeaderView
_invalidateContentLayout
removeAllSegments
insertSegmentWithTitle:atIndex:animated:
setSelectedSegmentIndex:
deselectedViewController
_isChildViewControllerViewLoadedInContentView:
setDeselectedViewController:
factoryWithMass:stiffness:damping:timingFunction:
_setSelectedBulletinObserverViewController:animated:
_layoutHeaderViewIfNecessary
_layoutSegmentsIfNecessary
_layoutContentIfNecessary
_invalidateHeaderLayout
numberOfSegments
_invalidateSegmentLayout
_addBulletinObserverViewController:
_contentOffset:forChildViewController:
_setSelectedSegmentIndex:
_setContentViewContentOffset:animated:
setSelectedViewController:animated:
removeViewController:
addViewController:
selectedSegmentIndex
_isRequestHandlingEnabled
scrollToRowAtIndexPath:atScrollPosition:animated:
setTintColor:forUse:
_buttonTitleFont
settings:changedValueForKeyPath:
modeViewControllerDelegate
_selectedViewController
_deselectedViewController
_headerView
_modeControl
_leftSwipeGestureRecognizer
_rightSwipeGestureRecognizer
_modeViewControllerFlags
_modeViewControllerDelegate
setTitleTextAttributes:forState:
setSemanticContentAttribute:
_configureSegmentedControl:withColorSettings:
_segmentedControlForUse:colorSettings:
_segmentedControlForUse:
_primaryTextFont
_invalidatePrimaryTextAttributedString
_attributedStringForSecondaryText:italicized:
setSubtitleTextAttributedString:
setSecondaryTextAttributedString:
setAlternateSecondaryTextAttributedString:
_defaultRelevanceDateFont
_secondaryItalicTextFont
_secondaryTextFont
attribute:atIndex:effectiveRange:
symbolicTraits
insertAttributedString:atIndex:
_primaryTextRectForBounds:
_subtitleTextRectForBounds:attributedString:
_primaryTextBaselineForBounds:
_primaryTextSizeForBounds:
_subtitleTextOriginYForBounds:
_secondaryTextOriginYForBounds:
_secondaryTextRectForBounds:attributedString:
_primaryTextAttributedString
_hasSecondaryText
_maximumSecondaryTextRectForBounds:
primaryTextAccessoryImage
alternateSecondaryText
_isItalicizedAttributedString:
subtitleTextAttributedString
secondaryTextAttributedString
alternateSecondaryTextAttributedString
_primaryTextAttributedStringComponent
_primaryTextAccessoryImageComponent
_subtitleTextAttributedString
_secondaryTextAttributedString
_alternateSecondaryTextAttributedString
_secondaryTextAlpha
_alternateSecondaryTextAlpha
setBottomSeparatorView:
bottomSeparatorView
setTopSeparatorView:
topSeparatorView
setDrawsBottomSeparator:
setDrawsTopSeparator:
shouldUseNarrowWidth
setShouldUseNarrowWidth:
separatorClass
setSeparatorClass:
drawsTopSeparator
drawsBottomSeparator
_dismissImageView
_bottomSeparatorView
_shouldUseNarrowWidth
_drawsTopSeparator
_drawsBottomSeparator
_separatorClass
_updateClippingLineVisibilityForVisibleModes:
_todayViewWantsClippingLine
_wantsSeparatorForScrollView:
presentationDelegate
_sendDidPresentOrDismissModalViewControllerCallbackWithCoordinator:
_lastValidPresentationMode
_presentationDelegate
initWithWebClip:
_deviceUnlockedForFirstTime:
removalDisallowed
generateIconImageForFormat:scale:
fullScreen
_webClip
_reallyLaunchTodayViewFromCurrentContextWithCompletion:
borderWidth
borderColor
colorWithCGColor:
iconBorderView
setIconBorderView:
setShowsAppIconBorder:
showsAppIconBorder
_showsAppIconBorder
_iconBorderView
initWithConfiguration:platformController:
platformController
_accessListWithBlock:
isAnyActive
_assertCrossfadeViewSizeIfNecessary
addClient:
removeClient:
noteClientWallpaperRelativeBoundsDidChange:
wallpaperRelativeBounds
wantsBlur:
setWallpaperBackgroundRect:forContents:withFallbackColor:
setBlurring:
isBlurring
wallpaperRelativeCenter
wantsBlurEvaluator
isSuppressingExternalUpdates
_wallpaperRelativeBounds
_isBlurring
_suppressesExternalUpdates
_wantsBlurEvaluator
_updateBackgrounds
_updateClient:
_updateBlurForClient:
_updateAllClients
maxSaturationBoost
maxSaturation
maxBrightnessBoost
maxBrightness
colorAlpha
whiteAlpha
_clients
_blurImage
_solidColor
blurryFolderIcons
_contentsImageForColor:
_convertViewPoint:toInterfaceOrientation:
_convertViewRect:toInterfaceOrientation:
_viewOffsetForNormalizedLocation:
_dividerViewOffset
_interfaceOrientedPoint:
_shouldStartTrackingSingleTouchAtLocation:distanceFromDivider:
_leftTouch
_singleTrackingTouch
_waitingTouch
_clearTrackingTouches
_startTrackingWithTouch:andTouch:
_canStartAnyKindOfTrackingWithTouch:
_shouldContinueTrackingInvalidTouchWithDistanceFromDivider:
_startTrackingWithSingleTouch:
_setWaitingTouch:
setInitialWaitingTouchLocation:
setWaitingForInvalidTouchToBecomeValid:
_debugRegionsDidChange
_ignoresTouchesMoved
_rightTouch
isWaitingForInvalidTouchToBecomeValid
willAllowResizeForSingleTouch:
initialWaitingTouchLocation
_handleTouchesMovedForSingleTouchTracking:withEvent:
_handleTouchesMovedForMultipleTouchTracking:withEvent:
_shouldConsiderSingleTouchTrackingAsFailed
_checkInitialValidityOfTouch:andTouch:
_normalizedLocationForViewOffset:
_setDividerPosition:
setPreviousTouchPosition:
setPreviousTouchTimestamp:
_setLeftTouch:
_setRightTouch:
setAbsoluteDistanceTraveled:
setDistanceTraveledFromInitialLocation:
setBeganTrackingNearDivider:
_setIgnoresTouchesMoved:
_setSingleTrackingTouch:
setInitialSingleTouchTimestamp:
_singleTouchStartedInPinningAreaWithLocation:
_stopDrawingDebugRegions
_checkOngoingValidityOfLeftTouch:rightTouch:
_updateStatsForTouchPosition:timestamp:
previousTouchPosition
previousTouchTimestamp
initWithFrame:gesture:
debugDelegate
debugDrawingUpdatedForSceneResizeGestureRecognizer:
_interfaceOrientedBounds
_drawDebugRegions
setDebugDelegate:
_beganTrackingNearDivider
_waitingForInvalidTouchToBecomeValid
_dividerPosition
_distanceTraveledFromInitialLocation
_absoluteDistanceTraveled
_initialSingleTouchTimestamp
_previousTouchPosition
_previousTouchTimestamp
_debugDelegate
_initialWaitingTouchLocation
setSnakebite:
snakebite
_dividerView
_waitingTouchView
_otherFingerTouchableAreaView
_rightTouchableAreaView
_snakebite
backgroundBlurAlpha
pageControlAlpha
searchViewAlpha
iconsAlpha
_configureParallax
_resetSearchScrollTrackingState
setWrappedView:
isDockViewBorrowed
setStatusBarHeightAdjustment:
isPullDownSearchVisibleOrTransitioning
_offsetForSearchableTodayViewPage
_pullDownSearchVisiblilityProgress
_animateViewsForPullingToSearchWithPercent:
_searchableTodayViewVisiblilityProgress
_animateViewsForScrollingToSearchableTodayViewWithPercent:
_layoutSubviewsForPulldownSearch
_layoutSubviewsForSearchableTodayView
_setFirstPageOffset:
effectivePageControlFrame
_searchableTodayViewInsetsForPageControl
effectiveDockFrame
isScalingViewBorrowed
layoutDockView
initWithFolderView:reason:
_isExternallyAnimatingDockOffscreenFraction
_setDockOffscreenFraction:
_searchableTodayViewDockOffscreenProgress
_updateDockViewZOrdering
_searchableTodayViewIsTransitioning
_disableUserInteractionBeforeSignificantAnimation
_enableUserInteractionAfterSignificantAnimation
setDockViewBorrowed:
updateDockViewOrientation
_statusBarInsetsForDockEdge:dockOffscreenPercentage:
_updateEditingStateAnimated:
tearDownListViews
_updatesWallpaperRelativeCenter
_pullDownSearchIsTransitioning
setMarqueeEnabled:
setMarqueeRunning:
_captureInitialSearchScrollTrackingState
_setReachabilityTemporarilyDisabled:
_cleanUpAfterScrolling
iconScrollViewDidCancelTouchTracking:
updateIconListIndexAndVisibility:
_pageIndexForOffset:
_activeVCForSearchableTodayView
_kickoffTransitionWithViewController:presenting:animated:
_scrollOffsetForPageAtIndex:
_scrollViewFrameForDockEdge:
_pageWidth
_scrollOffsetForFirstListView
_removeParallax
setDirectionalLockEnabled:
setHeaderOffset:
setExtendedSize:
_updateStatusBarInsetsToPercent:
_activeVCForPullDownSearch
_searchableTodayViewModeWantsBlur
wrappedView
_minusPageCount
externalClient:wantsToModifyDockOffScreenFraction:
removeDockOffscreenFractionExternalClient:
_setParallaxDisabled:forReason:
isSpotlightTransitioningFromBreadcrumb
_dockView
_dockViewBorrowed
_idleTextView
_parallaxDisabledReasons
_searchPulldownWrapperView
_searchableTodayWrapperView
_searchBlurEffectView
_minusPageAnimationStepper
_baseOffsetForDeterminingScrollToSearchThreshold
_contentOffsetWhenScrollToSearchBeganDragging
_currentPageIndexWhenScrollToSearchBeganDragging
_dockListHeightWhenScrollToSearchBeganDragging
_pageWidthWhenScrollToSearchBeganDragging
_retryingAutoScrollToSearchDueToUnexpectedContentOffset
_scrollToSearchIsDraggingOrAnimating
_scrollToSearchIsBeingPresentedOrDismissedAutomatically
_searchWasVisibleWhenScrollToSearchBeganDragging
_targetPageIndexForAutoScrollToSearch
_doNotUseThisDirectlyPlease_dockOffscreenProgress
_dockOffscreenProgressSettingExternalClients
_pullDownSearchViewController
_searchableTodayViewController
_currentPullDownTransition
_currentPullDownAnimator
_currentPullDownInteractor
_currentSlideOverTransition
_currentSlideOverAnimator
_currentSlideOverInteractor
_spotlightTransitioningFromBreadcrumb
_updateLayout
statusBarHeightAdjustment
headerOffset
extendedSize
_statusBarHeightAdjustment
_wrappedView
_extendedSize
setFolderView:
_horizontalProgressSubtractionFromVertical:
_forcePanGestureToEndImmediately
_updateScrollParameters
maxScrollDistance
setMaxScrollDistance:
cancelScrollingIfTooMuchDrag
setCancelScrollingIfTooMuchDrag:
accumulatedDragThresholdPercentage
setAccumulatedDragThresholdPercentage:
maxDragFromVerticalPerFrame
setMaxDragFromVerticalPerFrame:
powerOfVerticalDirectionSine2
setPowerOfVerticalDirectionSine2:
inertialMultiplierSigmoidBase
setInertialMultiplierSigmoidBase:
inertialMultiplierSigmoidRange
setInertialMultiplierSigmoidRange:
inertialMultiplierSigmoidPivot
setInertialMultiplierSigmoidPivot:
inertialMultiplierSigmoidAlpha
setInertialMultiplierSigmoidAlpha:
minPercentageSigmoidBase
setMinPercentageSigmoidBase:
minPercentageSigmoidRange
setMinPercentageSigmoidRange:
minPercentageSigmoidPivot
setMinPercentageSigmoidPivot:
minPercentageSigmoidAlpha
setMinPercentageSigmoidAlpha:
_cancelled
_firstLocation
_lastLocation
_minSwipePercentageOfScreen
_inertialMultiplier
_initialScrollViewOffsetX
_accumulatedDrag
_maxAccumulatedDragThreshold
_recognized
_cancelScrollingIfTooMuchDrag
_maxScrollDistance
_accumulatedDragThresholdPercentage
_maxDragFromVerticalPerFrame
_powerOfVerticalDirectionSine2
_inertialMultiplierSigmoidBase
_inertialMultiplierSigmoidRange
_inertialMultiplierSigmoidPivot
_inertialMultiplierSigmoidAlpha
_minPercentageSigmoidBase
_minPercentageSigmoidRange
_minPercentageSigmoidPivot
_minPercentageSigmoidAlpha
pipDefaults
allowAutoPIP
_appSwitcherWillQuitApp:
_keyboardWillChangeFrame:
_keyboardWillDisappear:
_keyboardWillRotate:
_bulletinWillPresent:
_bulletinWillDismiss:
_nowPlayingStateChangedForPartialMedusaDevice
valueWithEdgeInsets:
_managePictureInPictureWindowVisibilityAnimated:
_pictureInPictureApplicationForProcessIdentifier:
shouldStartPictureInPictureForApplicationEnteringBackground:
startPictureInPictureForApplicationEnteringBackground:animated:completionHandler:
pictureInPictureInterruptionBegan
pictureInPictureInterruptionEnded
_updatePictureInPictureOverlayInsetsWithDuration:
_managePictureInPictureWindowLevel
pictureInPictureApplications
processIdentifier
activePictureInPictureApplication
isPictureInPictureActive
_adjustPIPInsetsForKeyboardFrameChangeNotification:
edgeInsetsValue
_setPictureInPictureWindowMargin:animationDuration:animationOptions:
_createWindowAndRootViewControllerIfNeeded
_destroyWindowAndRootViewControllerIfPossible
pictureInPictureController:didCreatePictureInPictureViewController:
pictureInPictureController:willDestroyPictureInPictureViewController:
_pictureInPictureController
_pictureInPictureWindow
_pictureInPictureWindowMargin
_pictureInPictureWindowHiddenReasons
_pictureInPictureInsetsForSource
_handleNotificationDidDeliver:
setCarPlaySetting:
parametersForSubtype:
setUnlockActionLabel:
setFullUnlockActionLabel:
setAlternateActionLabel:
setFullAlternateActionLabel:
setCanBeSilencedByMenuButtonPress:
setPreservesUnlockActionCase:
setPreventLock:
setPreemptsPresentedAlert:
setAllowsAddingToLockScreenWhenUnlocked:
setAllowsAutomaticRemovalFromLockScreen:
setPrioritizeAtTopOfLockScreen:
_interruptAudioAndLockDeviceForNotification:
_isAlarmNotification:
_bulletinRequestForAlarmNotification:
_isTimerNotification:
_bulletinRequestForTimerNotification:
_isBedtimeNotification:
_bulletinRequestForBedtimeNotification:
withdrawBulletinWithPublisherBulletinID:
_bulletinRequestForAlarmSnoozeNotificationRequest:
shouldPauseMedia
shouldLockDevice
isSnoozeable
_actionWithIdentifier:title:
bs_safeAddObject:
setAlternateAction:
setContextValue:forKey:
actionWithLaunchURL:
setDismissAction:
_alarmIDFromNotificationRequest:
setRecordID:
setSilenceAction:
setSnoozeAction:
_bulletinSoundWithAlertType:notificationSound:
setWantsFullscreenPresentation:
setSectionSubtype:
setIgnoresQuietMode:
_timerIDFromNotificationRequest:
_isWakeNotificationRequest:
setShouldDismissBulletin:
_recordIDFromNotificationRequest:
setTurnsOnDisplay:
setCategoryID:
_isAlarmNotificationRequest:
_isBedtimeNotificationRequest:
sharedVibrationManager
vibrationWithIdentifierIsValid:
patternForVibrationWithIdentifier:repeating:
audioVolume
setAudioVolume:
toneIdentifier
setToneIdentifier:
toneMediaLibraryItemIdentifier
setExternalToneMediaLibraryItemIdentifier:
vibrationIdentifier
actionID
_handleBulletinAlarmDismissResponse:
_handleBulletinAlarmSnoozeResponse:
_handleBulletinSnoozeStopResponse:
_handleBulletinBedtimeSnoozeResponse:
_handleBulletinBedtimeStopResponse:
_handleBulletinBedtimeDismissResponse:
_notificationRequestFromActionResponse:
_saveTimeInBedSamples
_removeSnoozeBulletinForResponse:
setFromSnooze:
bulletinPublisherID
triggerWithTimeInterval:repeats:
bulletinContext
_notificationRequestFromData:
decodeObjectOfClass:forKey:
_isWakeNotification:
_recordIDFromNotification:
_vibrationPatternForVibrationName:
_snoozedAlarmRequests
showRSSI
showGSMRSSI
countryCodesShowingEmergencyOnlyStatus
_stopTimeItemTimer
_removeAssistantEyesFreeStatusBarStyleOverride
_removeTetheringStatusBarStyleOverrideAssertion
statusBarStateAggregatorDidStartPost:
statusBarStateAggregator:didVisitItem:withUpdates:toData:
statusBarStateAggregator:didUpdateNonItemData:
statusBarStateAggregatorDidFinishPost:withData:actions:
_resetTimeItemFormatter
_updateSignalStrengthItem
_updateServiceItem
_updateDataNetworkItem
_updateBatteryItems:
_tickRefCount:up:withTransitionBlock:
_requestActions:
_notifyItemChanged:
_updateTetheringState
_buildLocationState
_updatePersonNameItem
_updateAllInternalBatteryItems
_updateLockItem
_restartTimeItemTimer
_noteNotChargingStatusChanged
_noteAirplaneModeChanged
_updateCarPlayItem
_setItem:enabled:
initWithTimeIntervalSince1970:
_displayStringForSIMStatus:
_shouldShowPersonName
_sbCarrierNameForOperator:
_displayStringForRegistrationStatus:
_shouldShowEmergencyOnlyStatus
_simStatusMeansLocked:
_shouldShowNotChargingItem
powerSourceState
showBatteryLevel
showBatteryPercentage
_setUsesCharacterDirection:
address
isUsingNetwork
_thermalColorForLevel:
_notifyNonItemDataChanged
_updateTimeItems
_updateQuietModeItem
_updateAirplaneMode
_updateBluetoothHeadphonesItem
_updateBluetoothBatteryItem
_updateBluetoothItem
_updateTTYItem
_updateAlarmItem
_updateLocationItem
_updateRotationLockItem
_updateAirplayItem
_updateAssistantItem
_updateVPNItem
_updateCallForwardingItem
_updateActivityItem
_updateThermalColorItem
_updateLiquidDetectionItem
_postItem:withState:
timeZoneForSecondsFromGMT:
statusBarImageDictionaries
_setShowingNotChargingItem
_updateLocationState
_statusBarData
setUserNameOverride:
sendStatusBarActions:
noteThermalConditionsDidChange
addPostingObserver:
removePostingObserver:
_setUserSessionController:
_statusBarDefaults
_cachedShowRSSI
_cachedShowGSMRSSI
_coalescentBlockDepth
_hasPostedOnce
_itemPostState
_nonItemDataChanged
_data
_postObservers
_notifyingPostObservers
_showsRecordingOverrides
_timeItemDateFormatter
_timeItemTimer
_timeItemTimeString
_serviceString
_serviceCrossfadeString
_countryCodesShowingEmergencyOnlyStatus
_airplaneTransitionToken
_suppressCellServiceForAirplaneModeTransition
_showsActivityIndicatorOnHomeScreen
_activityIndicatorEverywhereCount
_syncActivityIndicatorCount
_activityDisplayIdentifier
_showingNotChargingItem
_batteryDetailString
_alarmEnabled
_applyingAssistantStyle
_locationStatusBarIconType
_siriEyesFreeStatusBarStyleOverrideAssertion
_tetheringStatusBarStyleOverrideAssertion
_lazy_userSessionController
_personName
_overridePersonName
_frameForFolderView:
childFolderContainerView
_childFolderContainerView
addStatusBarStateObserver:
_removeInCallStatusBarOverrideAssertion
removeStatusBarStateObserver:
_updateDisabledItems
getStatusBarData:
forceUpdateToData:animated:
postStatusBarData:withActions:
statusBarStateProvider:didPostStatusBarData:withActions:
statusBarStateProvider:didChangeDoubleHeightStatusStringForStyle:
setAllItemsExceptBatteryCloaked:
_shouldPostForVisitedItem:withUpdates:toAggregatorData:lastPost:
_composePostDataFromAggregatorData:
_toggleSimulatesInCallStatusBar
_overridePercent
_killActivity
_simulateInCallStatusBar
_inCallStatusBarStyleOverrideAssertion
_itemIsDisabled
_itemWasDisabled
_itemDisabledRequests
_timeEnabled
_statusBarTimeRequiresUpdate
_timeCloaked
_allButBatteryCloaked
_telephonyAndBluetoothCloaked
_composePostActionsFromAggregatorActions:
_didFinishPost
_shouldPostForUpdatesToNonItemData:
doubleHeightStatusStringForStyle:
_didChangeDoubleHeightStatusStringForStyle:
_stateAggregator
_stateObservers
_aggregatorData
_aggregatorActions
_lastPost
_itemNeedsPost
_anyItemNeedsPost
_nonItemDataNeedsPost
_posting
_stylesWithDetailUpdates
_topApplication
_fromStarkLauncher
_displayForDisplayEntity:
_handleFailure
_animatingAlertSuspension
setDurationDown:
_durationDown
_durationUp
_rootLayoutTransition
_starkScreenAlertManager
_timerFiredWithComponents:flags:
_updateUnanimatedWithComponents:
setContentsScale:
localeDidChange:
systemNumberingSystem
localeIdentifier
numberingSystemForLocaleID:
backgroundImageName
generateProcessedMappedIconImageWithName:iconOptions:
second
minute
hour
currentNumberingSystem
setCurrentNumberingSystem:
_timerFired:
_handleTimeChange:
_seconds
_minutes
_hours
_blackDot
_redDot
_currentNumberingSystem
_notifyIndexChange:identifiers:withValidationBlock:
_dock
_layoutMediaControls
_updatePersistentUpdatesEnabled:
mediaControlsViewController:didReceiveInteractionEvent:
_mediaControlsViewController
_activationTriggeredFromStark
_handleAppDidNotChange
_newAnimationFromNowPlayingToNowPlaying
_newAnimationFromLauncherToNowPlaying
_newAnimationFromNowPlayingToLauncher
_horizontalScrollFailureGestureRecognizerChanged:
_updateForScrollingStrategy:fromScrollingStrategy:
_registerGestures:
_unregisterGestures:
_setRelativePanView:
_dashBoardView
_screenEdgeGestureRecognizer
_swallowGestureRecognizer
_scrollViewGestureRecognizer
_horizontalFailureGestureRecognizer
_fromLockoutView
_referenceFrameForApplicationIdentifier:inLayoutState:
_beginNextSwipeTransaction
_interruptGestureIfAppropriate
_reportTransactionCompletedGoingNext:
switchAppList
_newGesturePending
_trackingSwipeTransaction
modalDestination
listDestination
addToLockScreenWhenUnlocked
requestsFullScreenPresentation
_clearNotificationRequestsFromDashBoard:
stopAllRealerts
alertingControllerForDestination:
destination:settingsForSectionIdentifier:
_active
_modalDestination
_listDestination
_notificationDestinationDelegate
_stateLock_storeForBundleIdentifier:
_storesKeyedByBundleIdentifier
_relaunchExpected
_appWasActivating
_systemListItem
delaysRecoilUntilAppsAreObscured
isRecoilingLayout
isHidingSideSwitcherGrabber
_resizingPlaceholderAppIconViewForAppViewController:
_willChangeDisplayModeOfAppController:toDisplayMode:
_updateCachedSnapshotViewForAppViewController:onQueue:completionHandler:
affectsMultipleLayoutRoles
primaryAppContainerViewController
sideAppContainerViewController
_updateCachedSnapshotViewForAppViewController:onQueue:displayWhenReadyIfTrue:displayOptions:completionHandler:
_updateCachedResizingPlaceholderAppIconViewForAppViewController:
setState:ifCurrentlyAtState:
_resizingPlaceholderViewForAppViewController:
_displayPlaceholderView:inAppController:options:factory:completionHandler:
_beginHidingSideSwitcherGrabberWithAnimationFactory:completionHandler:
_recoilWithFactory:
setWaitingToObscureAppsDuringShowing:
setShowingCompletionHandler:
_performShowConstructedUIPhaseOfShowingResizeUIWithPrimaryPlaceholderView:sidePlaceholderView:factory:completionHandler:
_performNextStepOfShowingResizeUIWithBlock:
_performBlurPhaseOfShowingResizeUIWithPrimaryPlaceholderView:sidePlaceholderView:completionHandler:
_performPlaceholderViewConstructionPhaseOfShowingResizeUIWithCompletionHandler:
_performAppSnapshotPhaseOfShowingResizeUIWithCompletionHandler:
_bestResizingPlaceholderViewForAppContainerViewController:
showingCompletionHandler
_unrecoilWithFactory:
_fireRemainingStateNotificationHandlers
_endHidingSideSwitcherGrabberWithAnimationFactory:completionHandler:
_resetDisplayModeForElementController:options:animationFactory:completionHandler:
_resetElementControllerDisplayModesWithAnimationFactory:completionHandler:
_fireStateNotificationHandlersForState:
setRecoilingLayout:
mainLayoutViewController
setHidingSideSwitcherGrabber:
isResizeUIVisible
isDismissingResizeUI
_stateNotificationHandlers
_createdPlaceholderViews
_delaysRecoilUntilAppsAreObscured
_waitingToObscureAppsDuringShowing
_recoilingLayout
_hidingSideSwitcherGrabber
_affectedLayoutRoles
_mainLayoutViewController
_showingCompletionHandler
_handleSignificantTimeChange:
_handleLocalChange:
_handleTimeZoneChange:
_updateSection:withLockState:
_installClearButtonTouchEater
_setHeaderViewCurrentlyInClearState:
_handleEatenTouch:
_configureBBSectionInfo:
_isChronologicalSectionInfo:
_isArrangedByAppSection
_sortSectionIDs
_invalidateClearActionsForSection:
_commitRemovalOfBulletinBoardSectionIfNecessary:
_commitRemovalOfChronologicalSectionIfNecessary:
_chronologicalSectionInfoForDate:creatingIfNecessary:
_chronologicalSectionAfterChronologicalSection:
_updateSectionOrderForOperationInSection:
_headerViewCurrentlyInClearState
_populateBulletinInfo:inSection:
composedAttachmentImageSizeWithObserver:
getAttachmentImageForBulletin:withCompletion:
_populateBulletinInfo:inSection:andSectionOrderRule:
_allBulletinsSorted
_tearDownChronologicalStructures
_reloadOrderedSections:
_updateSectionForChangeInLockScreenVisibility:withProcessingBlock:
observerFeed
_updateSectionForChangeInLockScreenVisibility:withLockState:updatedSubsectionIDs:
_updateSectionForChangeInMessagePrivacyIfNecessary:
_updateSectionForChangeInNumberOfLines:
clearBulletinsFromDate:toDate:inSections:
_updateChronologicalSectionHeadersWithBlock:
_updateChronologicalSectionsForTimeZoneChange
_updateChronologicalSectionHeadersForSignificantTimeChange
_updateChronologicalSectionHeadersForLocaleChange
_gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
_gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
_gestureRecognizerShouldBegin:
_gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
_gestureRecognizer:shouldReceiveTouch:
_gestureRecognizer:shouldReceivePress:
_gestureRecognizer:canPreventGestureRecognizer:
_gestureRecognizer:canBePreventedByGestureRecognizer:
orderedSectionIDs
sectionIDsToOrderedBulletins
_sortBulletins:forSection:
_orderedSectionIDs
_sectionIDsToOrderedBulletins
_clearButtonTouchEater
_orderedChronologicalSectionIDs
_sectionIDsToChronologicalSectionInfos
_notificationsModeViewControllerDelegateFlags
_sharedInstanceCreateIfNeeded:
_deferredScreenUnblankDone
_batterySaverModeDidChange:
_setBacklightFactorToZeroForProx
_cancelSetBacklightFactorToZeroAfterDelay
_clearAutoLockTimer
_setBKEventTimerMode:withDuration:
isWaitingToLockUI
_resetIdleTimerAndUndim:source:
_sendResetIdleTimerAction
_lockScreenWantsUserEventNotifications
_nextLockTimeDuration
_nextIdleTimeDuration
adjustIdleLockDuration:idleDimDuration:
_performDeferredBacklightRampWorkWithInfo:
_animateBacklightToFactor:duration:source:silently:completion:
preventIdleSleep
disableAutoDim
dontDimOrLockWhileConnectedToPower
isBacklightLoggingEnabled
dimForIdleWarning
_autoLockTimerFired:
canRelockForAutoDimTimer
wantsScreenToAutoDim
_lockScreenDimTimerFired
_didIdle
_resetLockScreenIdleTimerWithDuration:mode:
allowIdleSleep
shouldHandlePocketStateChanges
_startFadeOutAnimationFromLockSource:
_undimFromSource:
_currentLockScreenIdleTimerInterval
turnOnScreenFullyWithBacklightSource:
setBacklightFactorPending:
_userEventOccurred
_userEventPresenceTimerExpired
_requestedUserEventNotificationOccurred
_lastBKUserEventTimerMode
_minimumLockIdleTime
_autoLockTimer
_lastTimeIdleCausedDim
_nextLockDurationAfterDim
_disableAutoDimming
_isPendingScreenUnblankAfterCACommit
_undimmedForBulletinSinceLastUserEvent
_allowIdleTimerToBeReset
updateTextView
_textLabel
preserveInputViews
restoreInputViews
_prototypingIsAllowedSettingChanged:
_managedkeyObservers
_managedKeyPathObservers
addKeyPathObserver:
applyArchiveValue:forKey:
_isPrototypingEnabled:
set_managedkeyObservers:
set_managedKeyPathObservers:
addKeyPathObserverIfPrototyping:
__managedkeyObservers
__managedKeyPathObservers
_updateVisibilityPreferences
_postRestrictionStateToObservers:
_postRestrictionState
effectiveWhitelistedAppBundleIDs
_updateRestrictionsAndForcePost:
restrictedAppBundleIDs
isInSingleAppMode
disabledApplicationIDs
shouldShowInternalApplications
shouldShowNonDefaultSystemApplications
_tagValidityMap
_validTagsByIdentifier
_tagsNotificationToken
_enabledTags
_ratingRanksByIdentifier
_restrictedIdentifiers
_applicationDefaults
_showInternalApps
_hasHideNonDefaultSystemAppsCapability
_showAllSystemApps
_canPostRestrictionState
sb_snapshotViewImmediatelyFramedForPortrait
deleteSlot:
initWithContext:slotId:
slotId
_slotId
allContexts
createImageSlot:hasAlpha:
objectForSlot:
setContentScaleFactor:
sb_generateSnapshotAsynchronouslyOnQueue:completionHandler:
beginDisablingInterfaceAutorotation
endDisablingInterfaceAutorotation
showPromptWithIdentifier:completionHandler:
_transitionWallpaperFromLock
wasAutoUnlocked
hasNotifications
_siriAuthenticationAssertion
_hidKeyboardForTransition
_updateStatusBarForLockTeardown
_disabledAutorotationForUnlockToApp
setFolderName:
setIconModel:
_previousIconLocations
_folderName
prototypingDefaults
settingsFromArchiveFile:error:
prototypeSettingsNeedsMigration
archiveToFile:error:
restoreDefaultValues
_save
setPrototypeSettingsNeedsMigration:
slowDownFactor
setGlobalSlowDownFactor:
_maybeToggleEnablement
useFallbackSettingsHelperOnThisDevice
_updateEventRouters
_hideSettings
testItemToken
_updatePreventingLockover
_changeActiveTestRecipeIfNecessary
restoreFromArchiveFile:error:
initWithRootSettings:
initWithBarButtonSystemItem:target:action:
setDismissButton:
_offscreenFrame
allowPrototypeSettings
_tearDownSettingsWindow
setActiveTestRecipe:
defaultSystemAppEventRouter
defaultFocusedAppEventRouter
descriptorWithPage:usage:
addHIDEventDescriptors:
setEventRouters:
_hasPreviousSettings
_restorePreviousSettings
_testRecipeClassNames
showSettingsForFallback
isShowingSettingsUI
_prototypingDefaults
_rootSettings
_settingsWindow
_settingsController
_fallbackHelper
_activeTestRecipe
_showingSettings
_showingSettingsForFallback
_hasActiveEventRouters
staticImage:
setParallaxSettings:
setFolderSettings:
setRootAnimationSettings:
setControlCenterSettings:
setAppSwitcherSettings:
setLockScreenSettings:
setCarDisplaySettings:
setLockScreenTestPluginSettings:
setIconColorSettings:
setFadeAnimationSettings:
setAlertItemsSettings:
setNotificationCenterSettings:
setIrisWallpaperSettings:
homeButtonSettings
setHomeButtonSettings:
setReachabilitySettings:
setMedusaSettings:
setStatusBarStyleOverridesSettings:
setPrototypeControllerSettings:
setHarmonySettings:
appIconForceTouchSettings
setAppIconForceTouchSettings:
setNotificationAndCCMaterialSettings:
setMiscellaneousSystemAnimationSettings:
_rootAnimationSettings
_controlCenterSettings
_appSwitcherSettings
_lockScreenSettings
_carDisplaySettings
_lockScreenTestPluginSettings
_fadeAnimationSettings
_alertItemsSettings
_notificationCenterSettings
_homeButtonSettings
_reachabilitySettings
_medusaSettings
_statusBarStyleOverridesSettings
_prototypeControllerSettings
_appIconForceTouchSettings
_notificationAndCCMaterialSettings
_miscellaneousSystemAnimationSettings
handleTimerFired:
shouldUseFallbackAction
_pressesWithinInterval
_setup:transitionStyle:
_finishedSliding
_areApplicationLaunchesFinished
_lockscreenViewController
_lockscreenClippedSlideController
_appsNeedingContextHosting
_fromCC
_fromNC
_waitForAppActivationForContextHostView
profileStateChangedNotification:
lostModeInfo
footnoteText
newlineCharacterSet
componentsSeparatedByCharactersInSet:
_inLostMode
setShouldUseExteriorDismissActionSeparators:
setShouldUseNarrowWidthForLonelyDismissAction:
shouldSuppressSupplementaryActionsForPrivacy:
_actionButtonStyleForAppearance:primaryActionExists:
_rowActionWithBBAction:bulletinActionStyle:bulletinContext:handler:
_dismissActionForBulletin:shouldUseNarrowWidth:isFirst:isLast:handler:
_updateSeparatorsForDismissButton:isFirst:isLast:
rowActionWithStyle:title:handler:
_setButton:
_tableViewStyleForBulletinActionStyle:
_actionButtonClassForAppearance:
setBulletinContext:
uiColor
_backgroundColorForActionStyle:
_rowActionWithBBAction:button:handler:
_isCustomAppearance:
viewClassName
shouldUseNarrowWidthForLonelyDismissAction
shouldUseExteriorDismissActionSeparators
_shouldUseNarrowWidthForLonelyDismissAction
_shouldUseExteriorDismissActionSeparators
_purgeListViews
_setAnimatedScrolling:
_setPageControlDisabled:forReason:
_endScrollingTest
_setCurrentPageIndex:deferringPageControlUpdate:
_isValidPageIndex:
_setCurrentPageIndex:
_setScrollViewContentOffset:animated:
_ignoreScrollingDidEndNotifications
_unignoreScrollingDidEndNotifications
_iconListViewAtIndex:
_createIconListViewForList:
_addIconListViewsForModels:
_iconListViewForList:
_scrollViewContentSize
_resetIconListViews
_updateIconListViews
updateIconListIndexAndVisibility
_shouldDisableUpdatingCurrentIconList
setPreferredFocusEnvironments:
setPreferredFocusedView:
lowestVisibleIconListIndexAndColumn:columnsOnScreen:totalLists:columnsPerList:
_pushDisableUpdateCurrentIconListCount
_currentIconListView
_popDisableUpdateCurrentIconListCount
_shouldIgnoreScrollingDidEndNotifications
_setFolderName:
_updateTitleLegibilitySettings
iconScrollViewWillCancelTouchTracking:
doesPageContainIconListView:
scalingViewFrame
_hasMinusPages
_interactionTintColor
noteUserHasGrabbedIcon:
willRotateToInterfaceOrientation:
scrollView:contentSizeForZoomScale:withProposedSize:
accessibilityLegibilitySettings
animatingToOrientation
setAnimatingToOrientation:
reachabilityStatusBarEdgeInsets
setReachabilityStatusBarEdgeInsets:
_iconListViews
_pageControlDisabledReasons
_rotatingIconList
_minVisibleListViewIndex
_maxVisibleListViewIndex
_minAnimatingListViewIndex
_maxAnimatingListViewIndex
_disableUpdatingCurrentIconListCount
_firstDisplayedColumnOnCurrentList
_animatedScrolling
_isScalingViewBorrowed
_scrollFrames
_scrollFrameCount
_ignoreScrollingDidEndNotificationsCount
_rotationCompletionBlocks
_reachabilityStatusBar
_swipeToCancelReachabilityGestureRecognizer
_swipeToRevealNotificationCenterGestureRecognizer
_effectiveStatusBarHeight
_accessibilityLegibilitySettings
_animatingToOrientation
_reachabilityStatusBarEdgeInsets
cancelTouchTracking
_scrollsToMakeFirstResponderVisible
initWithNibName:bundle:sceneHoster:wallpaperController:
_handleBacklightFadeEnded
_reallyRelinquishStatusBarAssertion
_showOrHideThermalTrapUIAnimated:
updateSettingsWithTransitionBlock:completion:
_updateBatteryChargingViewAnimated:
loginContainerView
_showStatusBarForReason:
_hideStatusBarForReason:
_reallyAcquireStatusBarAssertionIfNecessaryInitiallyVisible:
_setupLoginScene
setDeferHIDEvents:
standardDefaults
shouldAlwaysBeEnabled
killLoginApp
hostedAppBundleID
hostedSceneIdentifier
launchLoginAppWithCompletion:
_cleanupBatteryChargingViewWithAnimationDuration:
_addBatteryChargingView
_fadeViewsForChargingViewVisible:
_removeBatteryChargingView
sceneDeactivatedWithError:
sceneUpdatedIdleTimerMode:
sceneUpdatedStatusBarUserName:
sceneUpdatedRotationMode:
_initWithSceneHoster:wallpaperController:
requiresPasscodeInputForUIUnlockFromSource:withOptions:
prepareToEnterLostMode
noteExitingLostMode
shouldDisableALS
_setupLoginAppHosting
_killLoginApp
_hostedAppBundleID
_hostedSceneIdentifier
_sceneHoster
_batteryChargingViewController
_thermalWarningViewController
_pluginWrapperViewController
_showStatusBarReasons
requestEmergencyCallControllerWithCompletion:
mask
_lazyLegibilityView
_hitTestEdgeInsets
_saturatedIconView
_vibrancyAllowed
_createFakeStatusBar
_usesSnapshots
_handleWillDismissSpotlight:
_handleDidDismissSpotlight:
_handleWillBeginSignificantAnimation:
_handleDidEndSignificantAnimation:
_targetWallpaperStyle
_darkeningFactor
_transitionWallpaperWithProgress:presenting:
_addDisableSnapshotReason:
_removeDisableSnapshotReason:
_darkeningView
_iconsWindowHostWrapper
_externalHomeScreenSnapshotView
_statusBarWindowHostWrapper
_snapshotPreventionReasons
_snapshotGenerationToken
initWithGoingToSetup:
allowAutoUnlock
alertPriority
_goingToSetup
_createCameraControllerIfNecessary
_handleDisplayTurnedOnWhileUILocked:
_handleDisplayWillUndim
_handlePasscodeLockStateChanged
_handlePasscodePolicyChanged
_powerStatusChanged:
_unsupportedChargingAccessoryStateChanged:
_callInfoChanged:
_callCountChanged:
_buddyDidFinish:
_handleSuggestedAppChanged:
_evaluateLockUIForActiveCalls
privateConfiguration
behaviorWithConfiguration:coordinateSpace:
_createLockScreenActionManager
_prepareWallpaperForLockedMode
_addRemoveOrChangePasscodeViewIfNecessary
_addTimerViewIfNecessary
_addDateView
_addStatusTextView
_addNotificationView
_addCameraGrabberIfNecessary
_addLogoutControllerIfNecessary
_addDeviceInformationTextView
_addBottomLeftGrabberIfNecessaryForAutoUnlock:
_addOrRemoveBuddyBackgroundIfNecessary
_addUserPictureOverlayIfNecessary
_removeAllOverlays
_setHintManagerEnabledIfPossible:removingLockScreenView:
_removeDateView
_removeStatusTextView
_removeTimerView
_dismissFullscreenBulletinAlertAnimated:reason:
_removeNotificationView
_removeActivePluginView
_setNowPlayingControllerEnabled:
_removeBuddyBackground
_removeUserPictureOverlay
_removeLogoutController
_removeDeviceInformationTextView
_prepareWallpaperForUnlockedMode
_addLogoutController
_createLogoutControllerIfNecessary
_updateDateTimerStatusBarAndLockSlider
_destroyEmergencyDialerAnimated:
_removeBlockedView:
_removeModalBannerOverlay:
_removeThermalTrapView:
_removeRestoreView:
_addRemoveOrChangePasscodeViewIfNecessaryCanAdd:canRemove:
passcodeLockViewForStyle:
_togglePasscodeEmergencyCallButtonIfNecessary
_effectiveLegibilitySettings
_addTimerView
_addUserPictureOverlay
hintEdgeForController:
activeLockScreenPlugin
_postPasscodeLockNotification:
isFirstResponder
startUIUnlockFromSource:withOptions:
_adjustIdleTimerForEmergencyDialerActive:
_setHintManagerEnabledIfPossible:
_setIrisGestureDisabled:forRequester:
noteViewMovedOffscreenTemporarily
_adjustLockScreenWallpaperAlphaForPercentScrolled:scrollViewTracking:
factoryWithSettings:timingFunction:
isLockScreenPluginViewVisible
_effectiveCustomSlideToUnlockText
_updateGrabbersForScreenOffMode
_shouldShowChargingText
_addBatteryChargingViewAndShowBattery:
_effectiveOpacityForVisibleDateView
_releaseLockScreenView
setAllowsStatusTextUpdatingOnResignFirstResponder:
_shouldShowDate
_effectiveVisibleStatusBarAlpha
pointInside:forEvent:
_notificationCenterWillPresent:
_setStatusBarUserInteractionEnabledForTopGrabber:
_scheduleUnblockTimer
_addOrRemoveBlockedViewIfNecessary:
_addOrRemoveThermalTrapViewIfNecessary:
_addOrRemoveResetRestoreViewIfNecessary:
_clearAlphaStatusBarAssertion
_lockScreenViewCreatingIfNecessary
__transitionOverlayAnimated:from:to:completion:
_removeInfoOverlayViewAnimated:
_addInfoOverlayViewWithTitle:
_removePasscodeOverlayWithCompletion:
_addOrRemoveModalBannerOverlay:
_noteAppearingForSmartCoverUnlock:
_handleDisplayTurnedOff
_passcodeStateChanged
setForcesPasscodeViewDuringCall:
__shouldHidePasscodeForActiveCall
_endTimedPasscodeHysteresis
_shouldUpdateMesaCounts
_beginTimedPasscodeHysteresis
_attemptUnlockWithDelay:type:
attemptUnlockWithMesa
_activePluginHidesNotificationList
_setupAlphaStatusBarAssertion:
_dismissNotificationCenterToRevealPasscode
_removeFullscreenBulletinViewAnimated:
_addFullscreenBulletinViewWithItem:
_addPasscodeOverlayWithCompletion:
_handlePassKitDisplayChange:
_updateAppearanceForPlugin
stopCyclingLocalizedStrings
vibrancyDisabled
backgroundColorHint
_luminance
_overlayLegibilitySettings
_notificationListLegibilitySettings
_pluginLegibilitySettings
_fadeViewsForIrisPlaying:
passcodeLockViewKeypadKeyDown:
passcodeLockViewKeypadKeyUp:
overlay:wantsStyleChange:
lockScreenHintManager
hintDisplacementForController:
prepareForExternalUIUnlock
activateCameraAnimated:
shouldShowStatusBarOnDeactivation
lockScreenIsShowingBulletins
prepareForMesaUnlockWithCompletion:
removeOverlay
_wantsToAnimateFromPasscodeLockOnFailedPasscodeAttemptAndBlocked
_handlePassKitPresentation
_handlePassKitDismissal
_updateGrabbersForIdentityManagerAuthentication
_playAuthenticationFeedbackForSuccess:
updateLegibility
_translateNotificationListView
_isAnimatingNotificationListView
_translateTopGrabber
_setStationaryContentAlpha:
_didNotificationsPassTopGrabber
_bioLockScreenActionContext
_setBioLockScreenActionContext:
_userAuthController
_setUserAuthController:
pluginManager
_hasAuthenticatedForNotificationAction
_setHasAuthenticatedForNotificationAction:
_setWallpaperAggdLogger:
_blockedController
_cameraController
_bottomLeftAppController
_ignoreFirstMediaToggle
_logoutController
_deviceInformationTextViewController
_authorizationAttemptView
_attemptingPasscodeUnlock
_chargingViewControllerVisible
_wasAutoUnlocked
_forcePasscodeWhileInCall
_isHidingPasscodeWhileInCall
_nextUnlockShouldReturnToCall
_buddyController
_buddyOverlayContext
_prioritizedOverlays
_fullScreenOverlayContext
_blockedOverlayContext
_fullscreenBulletinController
_fullScreenBulletinOverlayContext
_infoOverlayController
_infoOverlayContext
_thermalWarningController
_thermalWarningContext
_resetRestoreViewController
_resetRestoreOverlayContext
_passcodeOverlayViewController
_passcodeOverlayContext
_userPictureOverlayController
_userPictureOverlayContext
_emergencyCallController
_retryingEmergencyDialerCreationWhileBlocked
_suppressWallpaperAlphaChangeOnScroll
_disabledMesaForPhoneCall
_hintManager
_statusBarUserInteractionAssertion
_handlingMenuDoubleTap
_irisGestureDisabledReasons
_evaluateShouldPerformTransition
_mainScenesDidCommit
_isRotatable
_initWithFrame:debugName:scene:attached:
_setWindowInterfaceOrientation:
sb_disableStatusBarHeightChanges
handleStatusBarChangeFromHeight:toHeight:
orientationSourceDescription
layoutStrategy
_recycledViewsContainerView
_layoutStrategy
_canAffectStatusBarAppearance
_resetList
list
_findApplicationInDirection:startLookingAtIndex:inList:
_bundleIDShouldBeRepresentedInList:
setList:
_list
_notificationCenterDidDismiss
canPlaySound
playingSounds
_soundWithNotificationSound:
requestsRequiringExplicitKill
playInEvironments:completion:
silencedByMenuButtonPress
canPlaySoundForNotificationRequest:
playSoundForNotificationRequest:
_killSounds
initWithSong:vibrationPattern:repeats:maxDuration:controllerAttributes:
initWithLockScreenManager:lockStateAggregator:quietModeStateAggregator:
setPlayingSounds:
setRequestsRequiringExplicitKill:
_requestsRequiringExplicitKill
_updateAppearanceForScrollViews
_updateAppearanceForScrollViewsAnimated:
_setRequestDisableRootFolderParallax:reason:
_setRequestDisableRootFolderScrolling:reason:
_eligibleScrollViews
_todayLayoutContentView
setApplicationBundleID:
initWithClientIdentity:
createSceneWithName:specification:
_updateHIDEventDeferralsIfNecessary
updateSettingsWithBlock:completion:
contentManager
clientIdentity
observeIdleTimerModeWithBlock:
statusBarUserNameOverride
observeStatusBarUserNameOverrideWithBlock:
rotationMode
observeRotationModeWithBlock:
processesForBundleIdentifier:
destroyScene:
scene:configureInitialClientSettings:
scene:didUpdateClientSettingsWithDiff:
scene:handleIncomingActions:
scene:willActivateWithTransitionContext:
scene:didDeactivateWithError:
deferHIDEvents
_sceneWorkspace
_loginScene
_cachedActivationOrientationForInitialClientSettings
_deferHIDEvents
_hidEventDeferralsInstalled
_updateTextForBatteries
_batteryController
carPlayEnableAllStatusBarItemsOverride
_electronicTollCollectionChanged
_resetStatusBarTime
showOptimalCellDataForCarPlay
_shouldShowRadarItem
_shouldDisableBattery
_batteryStateChanged
_itemIsIgnored:
formatDateAsTimeNoAMPM:
_isItemEnabled:
showTapToRadarForCarPlay
electronicTollCollection
setStatusBarItem:disabled:forRequester:
_sessionConfiguration
_oldAggregatorTimeCString
_timeCString
_showOptimalCellData
_showTapToRadar
_disableBattery
_showElectronicTollCollection
_electronicTollCollectionAvailable
_allStatusBarItemsOverrideEnabled
_inCallDetail
_requestedActions
_statusBarItemsDisabledRequesters
isStoreDemoApplicationLockEnabled
_initWithDisplay:demoDefaults:restartManager:
_allowsCapabilitySuggestedApplicationWithExplanation:
_allowsCapabilityLockScreenBulletinWithExplanation:
_allowsCapabilityUnlockToPluginSpecifiedApplicationWithExplanation:
_allowsCapabilityAssistantEnabledWithExplanation:
_allowsCapabilityAssistantWithExplanation:
_allowsCapabilitySendMediaCommandWithExplanation:
_allowsCapabilitySystemGestureWithExplanation:
_allowsCapabilityVoiceControlWithExplanation:
_allowsCapabilitySpotlightWithExplanation:
_allowsCapabilityLockScreenCameraSupportedWithExplanation:
_allowsCapabilityLockScreenCameraWithExplanation:
_allowsCapabilityNotificationCenterWithExplanation:
_allowsCapabilityControlCenterWithExplanation:
_allowsCapabilityLogoutWithExplanation:
_allowsCapabilityLoginWindowWithExplanation:
_allowsCapabilityHomeScreenEditingWithExplanation:
_allowsCapabilityScreenshotWithExplanation:
_allowsCapabilityCommandTabWithExplanation:
_allowsCapabilityLockScreenControlCenterWithExplanation:
_allowsCapabilityLockScreenNotificationCenterWithExplanation:
_allowsCapabilityLockScreenTodayViewWithExplanation:
_allowsCapabilityTodayViewWithExplanation:
_allowsCapabilityLiftToWakeWithExplanation:
_hasFullySetUpUserWithExplanation:
_lockScreenDefaults
_deviceLockOutController
_allowsNotificationOrControlCenterWithExplanation:
restrictedBoolValueForFeature:
shouldAllowScreenshotsInLoginWindow
isLockScreenControlCenterAllowed
reloadDemoDefaults
_setProfileConnection:
_setSetupManager:
_setAuthenticationController:
_setDeviceLockOutController:
_setLockScreenDefaults:
_lazy_profileConnection
_lazy_setupManager
_lazy_authenticationController
_lazy_deviceLockOutController
_lazy_lockScreenDefaults
_hasCameraCapability
_demoDefaults
_storeDemoAppLockEnabled
activateAppWithDisplayID:url:unlockIfNecessary:
prototypeSettings
materialSettings
activateAppWithDisplayID:url:
lockOrientation
unlockOrientation
isOrientationLocked
updateWifiDevicePresence
setWifiPowered:
wifiDevicePresent
wifiIsPowered
getFGSceneIdentifiers
frontmostApplicationDisplayID
hideStatusBarAssertion
promptForUnlockIfNecessary:
setUseOrbGesture:
setTranslateProgress:
setMinTranslation:
setMaxPopTranslation:
setCommitToNextAppTranslation:
setNextAppPopScale:
setOrbGestureRegionMax:
setForceDrivesInitialProgress:
setPanHysteresis:
setPlayInitialHaptic:
setPlayCommitHaptic:
setCanPop:
setDismissAnimationMass:
setDismissAnimationStiffness:
setDismissAnimationDamping:
setDismissAnimationEpsilon:
setPresentAnimationMass:
setPresentAnimationStiffness:
setPresentAnimationDamping:
setAdditionalThrowDisplacement:
panHysteresis
_useOrbGesture
_forceDrivesInitialProgress
_playInitialHaptic
_playCommitHaptic
_canPop
_translateProgress
_minTranslation
_maxPopTranslation
_commitToNextAppTranslation
_nextAppPopScale
_orbGestureRegionMax
_panHysteresis
_dismissAnimationMass
_dismissAnimationStiffness
_dismissAnimationDamping
_dismissAnimationEpsilon
_presentAnimationMass
_presentAnimationStiffness
_presentAnimationDamping
_additionalThrowDisplacement
_pressDownBoundsForDesiredIndex:sequence:
_pressUpBoundsForDesiredIndex:sequence:
_modeForDesiredIndex:isDownEvent:
initWithAlertingController:
_setupNewDestinationsForDispatcher:
_setupLegacyDestinationsForDispatcher:lockScreenManager:
_isDeviceLocked
_isCarPlayActive
_areNotificationsAllowedInLockScreen
_lockScreenWantsBanners
registerDestination:
setDestination:enabled:
dashBoardDestination
carDestination
unregisterDestination:
dispatcherDelegate
setDispatcherDelegate:
notificationSource
setNotificationSource:
userNotificationAlertSource
setUserNotificationAlertSource:
setCarDestination:
_dashBoardDestination
_dispatcherDelegate
_notificationSource
_userNotificationAlertSource
_carDestination
setVerticalScrollDecelerationFactor:
_setAutomaticContentOffsetAdjustmentEnabled:
_scrollViewContentSizeForProgress:
_scrollViewContentOffsetForProgress:
_startUpdatingScrollViewForPresentationOrDismissal
_updateVisiblePageViews
_frameForItem:
_applyPageViewStyleToVisiblePageViews
_contentOffsetOnRotationToSize:oldViewHeight:oldOffsetY:
_centerOfIndex:
_distanceBetweenItems
_itemsPerScreen
_itemSizeForProgress:
_centerOfIndex:forProgress:
_frameForItem:progressPresented:
_updateScrollViewLayoutForPresentationOrDismissal
_applyStyleToPageView:
_isItemVisible:withSidePadding:progress:
scrollViewDidBeginDragging:
removeItem:duration:completion:
insertItem:atIndex:duration:completion:
replaceItemAtIndex:withNewItem:duration:
_visiblePageViews
_interactiveTransitionProgress
_displayItemContentTransitionProgress
_isAnimatingDisplayItemContentTransition
_beginningOfDismissalContentOffset
_shouldResetContentOffset
_applicationWithBundleIdentifier:
handlePushNotificationFromApplication:userInfo:priority:completion:
shouldSuppressUserNotificationPermissionAlertForBundleIdentifier:
_newsstandApplicationWithBundleIdentifier:
initWithRemoteNotificationPayload:withHandler:
isApplicationInstalled:
isApplicationRestricted:
isBackgroundAppRefreshSupportedForApplication:
isRemoteNotificationBackgroundModeSupportedForApplication:
isNewsstandApplication:
isNewsstandContentBackgroundModeSupportedForApplication:
shouldThrottleContentNotificationForApplicatin:onDate:withLastCount:onDay:
handleContentAvailableNotificationForApplication:userInfo:priority:completion:
dataProviderConnection
shouldUseDefaultDataProviderForBundleIdentifier:
shouldShowUserNotificationPermissionAlertForBundleIdentifier:
displayNameForApplication:
isInternalApplication:
isSystemApplication:
handleNewsstandNotificationForApplication:userInfo:
_resetIconLists
accessibilityReduceTransparencyDidChange
_cancelAllInteractionTimers
_homescreenAndDockShouldFade
_fadeHomescreenAndDockIfNecessaryForFolderOpen:
_setHomescreenAndDockAlpha:
setAnimating:
_addFakeStatusBarView
_compactFolder
_removeFakeStatusBar
_resetFakeStatusBarSettingsIfNecessary
wasExpandedAfterLastSizeTransition
setWasExpandedAfterLastSizeTransition:
_removeFakeStatusBarAndAssertionIfExists
_resetFakeStatusBarFrameOnly
_updateAssociatedControllerStateAnimated:
_addEmptyListForce:
setCurrentPageIndexToListDirectlyContainingIcon:animated:completion:
_createContext
_updateStateOfAssociatedController:animated:
_restoreFromContext:
lastContext
setLastContext:
_cancelAutoScroll
_cancelDragPauseTimer
_cancelCloseFolderTimer
folderDelegate
_closeFolderTimerFired
_setCloseFolderTimerIfNecessary
indexOfObjectIdenticalTo:
setDropDestinationPageIndex:
_dragPauseTimerFired:
_allowUserInteraction
_canDropIconInListView:
_resetDragPauseTimerForPoint:inIconListView:
_doAutoScrollByPageCount:
_updateAutoScrollForTouch:
_scrollLeft:
_scrollRight:
_updateDragPauseForTouch:
_updateCloseFolderForTouch:
_updateDropDestinationForTouch:
_clearIconAnimator
_newAnimatorForZoomUp:
outerFolderController
bs_subpathWithRange:
_updateInterfaceOrientationFromDeviceOrientation
_noteFolderListsDidChange
targetIconViewForExpandUnexpandTransitionOfFolderWithIcon:
_iconAppearsOnCurrentPage:
fakeStatusBar
setFakeStatusBar:
_didAutoScroll
_autoScrollTimer
_dragPausePoint
_dragPauseTimer
_closeFolderTimer
_grabbedIconHasEverEnteredFolderView
_dropDestinationPageIndex
_editingContextsByFolder
_isOpen
_wasExpandedAfterLastSizeTransition
_folderDelegate
_lastContext
setBlock:
setIsConnectedToPower:
block
setConnectedToPower:
_notificationToken
_connectedToPower
setAlphaAndObeyBecauseIAmTheWindowManager:
observeDidAddPlaceholdersWithBlock:
observeDidCancelPlaceholdersWithBlock:
observeDidAddApplicationsWithBlock:
observeDidReplaceApplicationsWithBlock:
observeDidRemoveApplicationsWithBlock:
observeDidDemoteApplicationsWithBlock:
observeDidChangeNetworkUsageWithBlock:
allPlaceholders
_addObserver:table:
_removeObserver:table:
supportsDeviceFamily:
launchRequestsForApplication:withCompatibilityInfo:
naturalSize
setNaturalSize:
_captureOrUpdateLaunchImagesForApplications:firstImageIsReady:
applicationPlaceholdersAdded:
applicationPlaceholdersCancelled:
_waitForLaunchImageGenerationForApplications:
applicationPlaceholdersInstalled:
_removeCachedLaunchImagesForApplications:forgettingApps:
applicationPlaceholdersNetworkUsageChanged:
placeholders
removeApplicationLifecycleObserver:
addPlaceholderLifecycleObserver:
removePlaceholderLifecycleObserver:
_allApplicationsFilteredBySystem:bySplashBoard:
_placeholdersByBundleID
_applicationObservers
_placeholderObservers
_refreshAppsToLaunch
_refreshTriggers
_wake:
_switcherRevealed:
_frontDisplayChanged:
setRecommendationHandler:
fakeDuetTriggers
setTriggers:
duetWhitelistedApps
setAppsToLaunch:
appsToLaunch
recommendationHandler
_handleTrigger:
okToLaunch:forReasons:withHandler:
setAppLaunchRecommendationHandler:
triggers
_triggers
_appsToLaunch
_recommendationHandler
setCompletionHandler:
finishWithResult:
_fireCompletionHandlerWithResult:
completionHandler
initForApplication:trigger:sequenceNumber:withCompletion:
finished
_completionHandler
fakeForegroundTransitionForBackgroundFetch
_opportunisticallyUpdateApplications:trigger:
_startBackgroundFetchForNotification:
backgroundMultitaskingWatchdogTimeout
_invalidateBackgroundTasksForApplication:
queue_appFinishedBackgroundUpdating:sequenceNumber:result:
_watchdogCompletionForBackgroundFetchTaskValue:
queue_fireWatchdoggableCompletionForBackgroundFetchTaskValue:
queue_invalidateBackgroundTasksForApplication:
queue_backgroundTaskFinished:forApplication:
_backgroundTaskFinished:forApplication:
queue_startBackgroundFetchTaskForApplication:trigger:sequenceNumber:withWatchdoggableCompletion:
nextSequenceNumber
_appIsBeingDebugged:
_startBackgroundFetchTaskForApplication:trigger:sequenceNumber:withWatchdoggableCompletion:
_launchAppForUpdating:trigger:pushNotificationUserInfo:withWatchdoggableCompletion:
_appFinishedBackgroundUpdating:sequenceNumber:result:
_performPendingWorkForBundleID:
_appToBackgroundTasks
_backgroundFetchTaskValueToWatchdoggableCompletion
_pendingWorkStore
_watchdogTimeout
initWithHandler:
setSequenceNumber:
setBundleID:
setBootTransitionContext:
bootTransitionContext
activateCamera
shouldShowSlideshowButton
_backlightLevel
setDisableBBHandlers:
setTestItemToken:
newTestItemForToken:
_disableBBHandlers
_testItemToken
initWithBiometricResource:overrideMatchingAssertionFactory:
setPasscodeBiometricResource:
_newLockScreenController
_reallySetUILocked:
activationChanged:
_lockUI
_handleExternalUIUnlock:
_deviceBlockedChanged:
_resetOrRestoreStateChanged:
_lockScreenDimmed:
_frontmostDisplayChanged:
_callCountChanged
_evaluatePreArmDisabledAssertions
forceLoginWindow
_shouldLockAfterEndingTelephonyCall
_shouldLockAfterEndingFaceTimeCall
_activateLockScreenAnimated:animationProvider:automatically:inScreenOffMode:dimInAnimation:dismissNotificationCenter:completion:
_relockUIForButtonPress:afterCall:
sharedPreferencesController
_setWalletPreArmDisabled:forReason:
_attemptUnlockWithPasscode:mesa:finishUIUnlock:
_isPasscodeVisible
_handleAuthenticationFeedback:
_setPasscodeVisible:animated:
_setHomeButtonShowPasscodeRecognizer:
jiggleLockIcon
_performLockScreenAlertActivationTransitionAnimated:dimInAnimation:animationProvider:completion:
revokeAuthenticationIfNecessaryForPublicReason:
_postLockCompletedNotification:
_setMesaCoordinatorDisabled:forReason:
_clearAuthenticationLockAssertion
_createAuthenticationAssertion
_setUILocked:
_sendUILockStateChangedNotification
_isUnlockDisabled
_finishUIUnlockFromSource:withOptions:
setUIUnlocking:
_runUnlockActionBlock:
_performLockScreenAlertDeactivationTransition
_canAttemptRealUIUnlockIgnoringBacklightNonsenseWithReason:
sentinelWithQueue:signalHandler:
_addPrivateAuthenticationObserver:
_lockFeaturesForRemoteLock:
processAuthenticationRequest:
exitLostModeIfNecessaryFromRemoteRequest:
noteScreenWillTurnOn
noteScreenDidTurnOff
setLimitFeaturesForRemoteLock:
lostModeDisableDashBoard
setUseDashBoard:
disableLostMode
_maybeLaunchSetupForcingCheckIfNotBricked:
setDeviceSetup:
_shouldUnlockUIOnKeyDownEvent
temporaryBlockStatusChanged
extendedKeybagLockStateChanged:
averageColorForCurrentWallpaperInScreenRect:
activateLostModeForRemoteLock:
_shouldBeInSetupMode
_liftToWakeManager
_setLiftToWakeManager:
unlockActionBlock
setUnlockActionBlock:
_mesaCoordinator
_allowDisablePasscodeLockAssertion
_allowUILockUnlock
_isWaitingToLockUI
_unlockRequest
_uiHasBeenLockedOnce
_uiUnlocking
_passcodeEntryController
_sustainAuthenticationWhileUIUnlockedAssertion
_lockScreenDisabledAssertionManager
_autoUnlockRuleAggregator
_mesaCoordinatorDisabledAssertions
_mesaWalletPreArmDisabledAssertions
_mesaAutoUnlockingDisabledAssertions
_mesaUnlockingDisabledAssertions
_unlockActionBlock
highlightColorForNightTime:
buttonWithOKAndHighlightColor:
buttonWithChevronImageForTraitCollection:highlightColor:
_setRelevanceDate:
initWithConfiguration:context:
_hasSubtitle
setMinimumLineHeight:
setMaximumLineHeight:
fontAttributes
fontDescriptorWithFontAttributes:
darkGrayColor
_shouldShowOKButton
_layoutForButton:contentFrame:
_categoryImageInsets
attributedText
_contentInsetsForActionType:
_categoryImageView
_subTitleLabel
_subTitleAscender
_okButton
_configureImageAndLabelsForSuggestion:
_imageForSuggestion:
_topStringForSuggestion:
_bottomStringForSuggestion:
defaultFontDescriptorWithTextStyle:addingSymbolicTraits:options:
systemGrayColor
setPreferredMaxLayoutWidth:
systemMidGrayColor
initWithFrame:displayItem:suggestedApp:
_topLabel
_bottomLabel
_zoomUpAppView
actionWithCallblock:
enqueueItem:
enumerateAllItemsMatchingContext:withBlock:
indexesOfEnqueuedItemsMatchingContext:
removeEnqueuedItemsAtIndexes:
currentItemFromTarget
dismissCurrentItemFromTarget
setWindowLevelRange:
windowLevelRange
hideRequestWithWindowLevelRange:reason:
_windowLevelRange
desiredAlpha
setDesiredAlpha:
_desiredAlpha
windows
_takeNoteOfWindow:onScreen:
_isHidingWindowLevel:
_recomputeHideRangeAndAdjustWindows
_isHidingWindows
_adjustWindowsForActiveHideRange
_captureWindow:
_releaseWindow:
dumpHidingState
dumpKnownWindows
_windowStateMap
_hidingContextMap
_keyboardMonitor
_hideRange
_activateSetupWithCompletion:underLock:fromSnapshot:
_bulletinWindowController
_orientationLockManager
_appController
_allowedTargetIdentifier
_target
_enqueuedItems
setCategoryIdentifier:
setIgnoreAttachmentImageThumbnailCrop:
setAuditHistoryEnabled:
allowInCar
_animationTimingFunction
_setupFakeStatusBarIfNecessary
_reallyFinishedAnimating
_showFakeStatusBarIfNecessary
_removeFakeStatusBarIfNecessary
_shouldAnimateWallpaper
statusBarFrameForOrientation:
_setViewToAnimate:
_launchingOrientation
_fakeStatusBarViewContainer
_appIsTranslucent
sharedEngine
updateAnimator:
startAnimator:
stopAnimator:
isRunningAnimator:
_invokeApplier
_invokeCompletionWithFinished:
elapsedTime
_convergeValue
currentValue
finishesOnValueConvergence
convergenceFunction
setConvergenceFunction:
applier
frameInterval
setStartTime:
lastFireTime
setLastFireTime:
_previousForce
_diff
_finishesOnValueConvergence
_currentValue
_convergenceFunction
_applier
_frameInterval
_lastFireTime
_tearDownDisplayLink
_animators
_finishedAnimators
isPausedForUserInteraction
_dequeueWithOptions:dismissReason:
_isSuspendedForAssistant
_dismissContext:withOptions:dismissReason:
_replaceIntervalElapsed:
_dismissIntervalElapsed:
_killIntervalElapsed:
_canDismissWithOptions:
_canDequeueWithOptions:
isSuspendedForReason:
_suspensionReasons
_pendedContexts
_currentSound
_displayAssertions
initWithFolderController:iconView:iconZoomScaleDimension:
_referenceFolderIconView
_innerFolderController
_innerFolderView
_innerZoomAnimator
_targetFolderIconView
_applyIconCrossfadeForZoomFraction:
_applyIconTransformForZoomFraction:
_applyFolderFadeForZoomFraction:
_calculateZoomedOffset:scale:forIcon:withView:
_folderIconView
_folderIconViewScaleTransform
_warningView
unlockCredentialSet
serializedCredentialSet
_unlockCredentialAuthenticator
pageViewController
_pageViewController
setXComponent:yComponent:
addChildBehavior:
setCollisionDelegate:
_setupCollisionBoundaries
_itemCompleted
_itemStopped
yComponent
removeAllBoundaries
_frameCollisionBoundaryPoints:
addBoundaryWithIdentifier:fromPoint:toPoint:
_isGravityDown
setYComponent:
_beginInteraction
addLinearVelocity:forItem:
_removeDraggingBehavior
_itemPastMidway
removeChildBehavior:
_adjustedVelocity:
finishInteractionWithVelocity:
_itemOriginY
linearVelocityForItem:
_shouldAssistWithVelocity:
_velocityAssistance
_percentRemaining
collisionBehavior:beganContactForItem:withItem:atPoint:
collisionBehavior:endedContactForItem:withItem:
collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:
collisionBehavior:endedContactForItem:withBoundaryIdentifier:
initiateInteractionFromPoint:
updateInteractionWithPoint:
finishInteraction
allowsAnimatorToStop
hapticBehavior
setHapticBehavior:
boundaryInsets
_midwayPosition
_completionThreshold
_previousLinearVelocity
_previousPreviousLinearVelocity
_bodyBehavior
_collisionBehavior
_gravityBehavior
_pushBehavior
_draggingBehavior
_hapticBehavior
_boundaryInsets
setStringsOrdering:
setLocalizedStrings:
buddyView
setStringCycleTimer:
startsWithBlackBackground
_noteLogoVisible:
_removeAllHiddenReasons
isShowingBootLogo
localizedStrings
currentStringIndex
setWifiPrimaryLanguage:
setShouldResetOrderingOnNextCycle:
setCurrentStringIndex:
shouldResetOrderingOnNextCycle
setLockScreenViewController:
setShowingBootLogo:
setStartsWithBlackBackground:
setTelephonyPrimaryLanguage:
hasResultsFromWifiScan
setHasResultsFromWifiScan:
_showingBootLogo
_startsWithBlackBackground
_hasResultsFromWifiScan
_pukAttemptsRemainingLabel
_attemptPUKUnlock
_enteredPUKCode
_newPIN
shouldRelockAfterBioUnlock
_lockOutStatusProvider
setPlaceholderProxy:
placeholderProxy
isDone
isDownloading
isInstalling
isContentRestricted
setApplicationDisplayName:
installType
_progressChanged
_reloadThumbnailImage
_getOrGenerateIconImageWithFormat:
installState
installPhase
isRestricted
placeholderShouldAllowPausing:
isCancellable
_iconImageKeyForBundleID:format:
_generateIconImageWithFormat:
_generatePendingIconFormats
backgroundQueue
_shouldDisplayAppName
_downloadingLabel
_defaultIconImageWithFormat:
placeholderPercentCompleteDidChange:
placeholderPrioritizableDidChange:
placeholderCancellabilityDidChange:
placeholderPausabilityDidChange:
placeholderInstallStateDidChange:
placeholderInstallPhaseDidChange:
placeholderDidChangeSignificantly:
initWithPlaceholderProxy:
iconChanged
_placeholderProxy
_applicationDisplayName
_fractionProgress
_installing
_observingKVO
_installType
_generatedIconImagesByKey
_formatsPendingGeneration
initWithMobileKeyBag:
recoveryEnabled
recoveryRequired
_mobileKeyBag
settingsObservers
updateSectionOrderRule:
_performOnAllObservers:
updateSectionOrder:
updateSectionInfo:
registerSettingsObserver:
unregisterSettingsObserver:
sectionOrder
bbObserver
setBbObserver:
setSettingsObservers:
_settingsObservers
_processPendingProxies
_addPlaceholders:
_removePlaceholders:forInstall:
_postPlaceholdersDidChangeForAdded:modified:removed:
_swapDownloadingIcon:forApplicationIcon:placeholderProxy:
_finishPlaceholder:
_removeDownloadingIcons:saveState:
_downloadsEnded
_dropGrabbedIconIfNecessary:completion:
_lsWorkspaceObserver
_pendingAdded
_pendingInstalled
_pendingCancelled
_removingPlaceholderProxies
_hasDownloadedFromStore
_usingNetwork
setSlowAnimations:
setSlowDownFactor:
slowAnimations
_isArchiveValue
_slowAnimations
_slowDownFactor
setBlurryCloseBoxes:
setBlurryFolderIcons:
setMaxSaturationBoost:
setMaxSaturation:
setMaxBrightnessBoost:
setMaxBrightness:
setColorAlpha:
setWhiteAlpha:
setSuppressJitter:
setCloseBoxesEverywhere:
_blurryFolderIcons
_blurryCloseBoxes
_suppressJitter
_closeBoxesEverywhere
_maxSaturationBoost
_maxSaturation
_maxBrightnessBoost
_maxBrightness
_colorAlpha
_whiteAlpha
SBHorizontalScrollFailureTriangleView
SBHorizontalScrollFailureRecognizer
_UISettingsKeyObserver
NSObject
SBNotificationCenterHeaderView
SBModalLayoutCaching
SBNotificationCenterSectionInfo
SBAccessibilityMesaUnlockTrigger
SBMesaUnlockTriggerDelegate
SBReachabilityManager
SBBannerToNotificationCenterGestureHandler
SBAccountStoreManager
SBAppSwitcherSoftOutlineShadowView
SBDashBoardPluginViewController
SBLockScreenPluginDelegate
SBLegibilitySettings
SpringBoard
MCProfileConnectionObserver
SBPowerDownControllerDelegate
SBRestartManagerDelegate
SBModalAlertPresentationCoordinatorDelegate
UIApplicationDelegate
ScriptingAdditions
SBTransientActiveInterfaceOrientationRequester
SBTelephonyAirplaneModeAlertItem
SBUIController
SBWallpaperObserver
SBTouchTemplateGestureRecognizerDelegate
SBSystemGestureRecognizerDelegate
UIGestureRecognizerDelegate
BSTransactionObserver
UIInteractionProgressObserver
UIWindowDelegate
SBApplicationIcon
SBAppSwitcherServiceManager
SBInterfaceItemInfo
SBItemInfoLayoutCache
SBSectionInfo
SBRowInfo
SBWorkspace
SBMainWorkspace
SBAlertManagerDelegate
SBAlertManagerObserver
SBStarkScreenManagerObserver
SBStarkScreenControllerObserver
SBReachabilityObserver
FBSystemServiceDelegate
FBProcessManagerObserver
FBApplicationProcessObserver
FBProcessObserver
BSWatchdogDelegate
FBSceneManagerObserver
BSPowerMonitorObserver
SBDockIconListView
SBCarPlayIconImageCache
SBIconLabelImageParameters
NSCopying
NSMutableCopying
SBExternalDisplayConnectTransaction
SBSearchEtceteraTransitionUtilities
SBSearchEtceteraBlurringTransitionAnimator
SBSearchEtceteraIsolatedViewControllerAnimatedTransitioning
SBViewControllerInteractiveAnimatedTransitioning
SBViewControllerReversibleAnimatedTransitioning
SBViewControllerAnimatedTransitioning
UIViewControllerAnimatedTransitioning
SBViewControllerRestartableTransitioning
SBViewControllerPercentCompletionReporting
SBBatteryWidgetVisibilityController
Snapshots
SBDashBoardPageViewController
SBDashBoardPageViewControllerProtocol
SBDashBoardViewPresenting
SBDashBoardViewControlling
SBDashBoardAppearanceProviding
SBDashBoardBehaviorProviding
SBDashBoardIdleBehaviorProviding
SBDashBoardPresentationProviding
SBDashBoardEventHandling
SBDashBoardParticipating
SBDashBoardActionHandling
SBApplicationHosting
SBAppSwitcherPageView
SBHintInteractor
SBViewControllerInteractiveTransitioning
UIViewControllerInteractiveTransitioning
SBViewControllerPercentDrivenTransitionUpdating
SBViewControllerReversibleTransitioning
SBViewControllerCancellableTransitioning
SBAlertItemTestRecipe
SBTestRecipe
SBVolumePressBandit
SBApplicationTestingManager
SBPPTSearchGestureObserver
SBSearchGestureObserver
SBPPTAlertViewDelegate
SBApplicationTesting
SBWorkspaceTransitionRequest
SBWorkspaceTransitionLayoutDelegate
BSDescriptionProviding
SBApplicationRemovabilityService
SBApplicationServerRemovabilityDelegate
SBApplicationServerDelegate
SBAlertWindow
SBAlertWindowViewControllerDelegate
SBLockHardwareButtonActions
SBUIPasscodeViewWithLockScreenStyle
SBPressCollector
SBAlertView
SBLockScreenPluginTransition
SBAlert
SBDisplay
SBDisplaySettings
SBActivationSettings
SBDeactivationSettings
SBStateSettings
SBProcessSettings
SBStarkSessionConfiguring
SBApplication
FBWindowContextHostManagerDelegate
FBSceneHostManagerDelegate
SBLeafIconDataSource
SBWorkspaceEntityGenerating
SBStarkAnimationWindow
SBTelephonyManager
RadiosPreferencesDelegate
SBTouchTemplatePanGestureRecognizer
SBZoomView
SBFullscreenZoomView
SBClippedZoomView
SBUSSDAlertDisplay
UITextFieldDelegate
USSDReplyField
SBVolumeHUDView
VolumeControl
SBHUDView
SBUIStartupFromOverlayAnimationController
SBContinuityDisplayItem
SBHIDInterface
SBProximitySensorControlling
SBUIStartupToUserSetupAppZoomInAnimationController
SBDashBoardModalView
SBLockScreenModalView
SBFolderControllerBackgroundView
SBSceneManager
SBSceneLayoutViewControllerDelegate
FBSceneManagerDelegate
BSInvalidatable
SBSMSClass0AboutViewController
_SBUISwitcherPageHostInterface
_SBUISwitcherPageProviderInterface
SBAppSwitcherPageServiceRemoteViewController
SBStarkNowPlayingLayoutElementViewController
SBPowerDownController
SBPowerDownAlertViewDelegate
SBUIPowerDownViewDelegate
SBDashBoardSetupViewController
SBRingerHUDView
SBRingerHUDController
SBOrientationAggdLogger
FBSDisplayLayoutObserver
SBDismissSideSwitcherAnimationController
SBWalletPrearmRecognizer
SBCalendarApplicationIcon
SBDateTimeOverrideObserver
SBPercentPassthroughInteractiveTransition
SBScrunchSystemGestureRecognizer
SBZOrderAnimatableView
SBDosidoAnimator
SBUIAnimationStepping
SBIconListView
SBLockScreenAutoUnlockAggregateRule
SBSoundPreferences
SBStarkRootIconListView
SBSMSClass0Alert
SBSMSClass0AlertDisplayDelegate
SBBouncingSystem
_UIDynamicReferenceSystem
SBBatteryDeviceCountTestRecipe
SBIconImageCrossfadeView
SBIconProgressView
_SBIconProgressTransition
_SBIconProgressStateTransition
_SBIconProgressNoneWaitingStateTransition
_SBIconProgressWaitingLoadingStateTransition
_SBIconProgressLoadingNoneStateTransition
_SBIconProgressPausedTransition
_SBIconProgressFractionTransition
SBIconImageAppLowQualityCrossfadeView
SBUSSDAlert
SBDashBoardNowPlayingViewController
SBLockScreenPluginOverlayContext
SBIconImageAppCrossfadeView
SBIconBadgeView
SBIconAccessoryView
SBReusableView
SBIconParallaxBadgeView
SBStarkIconBadgeView
SBLockScreenPasscodeOverlayViewController
SBUIPasscodeLockViewDelegate
SBDateTimeController
SBUISwitchAppSwipeAnimationController
SBExternalCarrierDefaults
SBLockScreenTestPluginSettings
SBRenderOverlayRecipe
SBStarkFocusMovementManager
SBDistanceFieldView
SBDashBoardCameraPageViewController
SBDashBoardHostedAppViewControllerDelegate
CTHelpers
PrefsNotifications
SBFolderStatsQueryableMetric
SBDashBoardStatusTextViewController
SBSiriTestSuggestion
SBCallContinuityTestSuggestion
SBDashBoardSlideUpToAppController
SBAppViewHostRequester
SBAssistantObserver
SBDashBoardViewTransitionSource
SBStarkAppToImpersonatedAppWorkspaceTransaction
SBNetworkReselectionAlert
SBMobilityManagementAlert
SBStarkFolderView
SBDashBoardVibrancyUtility
SBQueueAdditions
SBDashBoardSlidingAppViewController
SBUserNotificationCenter
SBPasscodeAlertRecipe
SBDashBoardIdleTimerFactory
SBIsolationManager
SBSUIRemoteAlertItemContentHostInterface
SBSUIRemoteAlertItemContentServiceInterface
_SBRemoteAlertContentHostViewController
SBUserNotificationAlert
SBGradientView
SBBluetoothAccessoryBatteryMonitor
SBAppVisibilityPreferences
SBModalAlertPresentationCoordinator
SBWallpaperStyleTransitionStateWrapper
SBWallpaperControllerCoordinator
SBSearchScrollView
SBSearchGesture
UIScrollViewDelegate
SBDisabledIdleTimer
SBUserEventInterfaceObserver
SBIdleTimer
SBBannerButtonViewController
SBRootFolderController
SBRootFolderDelegate
SBRootFolderDockAnimationViewController
_SBRootFolderDockAnimationViewControllerWindow
SBDashBoardEvent
SBUIAnimationFadeLockScreenWithNotificationsToSpringBoard
SBAlertItemsController
SBAssertionDelegate
SBSIMLockManager
SBSIMLockAlertItem
SBApplicationInfo
SBDisplayItem
SBSIMLockEntryAlert
SBSIMLockEntryAlertView
SBSIMLockEntryViewInterface
SBUIAnimationSideAppSlide
SBCarPlayIconModelStore
SBBreadcrumbState
SBMainWorkspaceEntity
SBDashBoardIdleTimerEventPublisher
SBIdleTimerDelegate
SBWorkspaceAlertAnimationProviding
SBUIAnimationForAlertAnimationProvider
SBLowPowerAlertItem
SBSwitcherAppSuggestionBottomBannerView
SBLockScreenNotificationSeparatorView
SBModalAlertRecipe
SBIconListScrollingRecipe
SBDashBoardRegion
UICoordinateSpace
SBDashBoardViewControllerProtocol
SBDashBoardWallpaperOverlayHosting
SBUIAnimationZoomDownDashBoardToHome
SBPhoneAlertItem
SBNetworkReselectionAlertItem
SBLongPressGestureRecognizer
SBTestDataProvider
BBRemoteDataProvider
BBDataProvider
BBSectionIdentity
SBFolderControllerAnimationContext
SBLaunchAlertItem
SBTreeNodeViewController
SBViewControllerTransitionContextDelegate
SBTreeNodeViewControllerDelegate
SBTreeNodeViewControllerTransitionObserver
SBWiFiManager
SBDiskSpaceAlertItem
SBLockdownManager
SBSyncController
SBStarkStatusBarWindow
SBSwitcherSlideUpSystemGestureRecognizer
SBUIAnimationZoomApp
SBScreenFlash
SBBulletinListSection
SBBulletinListSubsection
SBUIWorkspaceAnimationController
SBSearchBackdropView
SBUIProgressiveBlur
SBAppSwitcherRemoteAlertCellView
SBStatusBarStyleOverridesAssertionManager
NSXPCListenerDelegate
SBStatusBarStyleOverridesAssertionServer
SBLockScreenSettings
SBIconAnimationSettings
SBIconZoomSettings
SBCenterZoomSettings
SBCenterAppZoomSettings
SBScaleZoomSettings
SBCrossfadeZoomSettings
SBFolderZoomSettings
SBReducedMotionFadeSettings
SBUnlockSettings
SBCenterAppLaunchSettings
SBCenterAppSuspendSettings
SBCenterAcceleratedAppSuspendSettings
SBCrossfadeAppTransitionSettings
SBCrossfadeAppLaunchSettings
SBCrossfadeAppSuspendSettings
SBCrossfadeAcceleratedAppSuspendSettings
SBFolderOpenSettings
SBFolderCloseSettings
SBRootAnimationSettings
SBPowerAssertionContext
SBRestoreFailureAlertItem
SBPlatformController
SBHomeScreenNagAlert
SBDeveloperBuildExpirationAlert
SBReorderInfoAlert
SBCarrierDebuggingAlert
SBIconController
SBHomeScreenIconTransitionAnimatorDelegate
BBObserverDelegate
SBApplicationRestrictionObserver
SBFolderControllerDelegate
CAAnimationDelegate
SBUIAppIconForceTouchControllerDataSource
SBUIAppIconForceTouchControllerDelegate
SBIconViewDelegate
SBIconModelDelegate
SBIconViewMapDelegate
SBReusableViewMapDelegate
SBIconModelApplicationDataSource
SBDashBoardPresentation
SBMainDisplayInterfaceOrientationAggregator
SBStarkFolderController
SBDashBoardUserPictureView
SBUILegibility
SBUIOptionalLegibility
SBWidgetDebuggingTestRecipe
SBAppView
FBSceneMonitorDelegate
SBMainAppSwitcherPageContentView
SBAppSwitcherPageContentView
_SBAppViewCrossfadeWrapperView
SBSearchEtceteraDateViewController
SBSwitcherWallpaperPageContentView
SBIconModel
SBSwitchAppSwipeTransaction
SBUIAnimationControllerObserver
SBSceneLayoutWorkspaceTransactionDelegate
SBScreenManager
SBCombinationHardwareButton
SBLockScreenTimerViewController
SBPinchInteractionProgress
SBScaleIconZoomAnimator
SBBluetoothController
SBBulletinObserverViewController
SBBulletinObserverSectionHeaderView
SBBulletinWindowPresentationController
SBApplicationServer
SBTestAlertItem
SBMediaController
MPAVRoutingControllerDelegate
SBNCNotificationDispatcherDelegate
NCNotificationDispatcherDelegate
SBHomeScreenIconTransitionAnimator
SBIconAnimatorDelegate
SBWeatherApplicationIcon
SBStarkAlertToAppWorkspaceTransactionFactory
SBBookmarkIcon
SBMinimumViableSwitcherTableViewController
SBMainAppSwitcherContentViewControlling
SBIconContentView
SBVODController
SBUIBlockAnimationController
SBSnoozeAlarmNotificationStaticContentProvider
SBSMSApplication
SBLockScreenBundleController
SBPluginBundleController
BSPluginBundleController
SBLockScreenPluginController
SBLockScreenPlugin
SBLockScreenPluginAgent
SBDashBoardLegibilityProvider
SBDeleteIconAlertItem
SBDashBoardMesaUnlockBehaviorConfiguration
SBLiftToWakeObserver
SBResetManager
SBDownloadingIcon
SBInCallLockScreenPlugin
SBBannerButtonView
SBAppExitedWorkspaceTransaction
SBUserSessionController
SBLogoutProgressDataSource
SBAlertObserver
UMCriticalUserSwitchStakeholder
NCNotificationDateLabel
SBNotificationCell
SBDateLabelDelegate
SBRestartTransitionRequest
SBStarkSessionConfiguration
SBWallpaperAggdLogger
SBUnlockedAlertItemPresenter
SBAlertItemPresenter
SBApplicationController
SBApplicationRestrictionDataSource
SBApplicationLifecycleObserver
FBUIApplicationServiceDelegate
FBApplicationTerminationAssertionServiceDelegate
SBUnsupportedURLAlertItem
SBUIAnimationFadeAlertToSpringBoard
SBDefaultAuthenticationPolicy
SBFAuthenticationPolicy
SBScreenshotManager
SBPasscodeAlertItem
SBPasscodeComplianceAlertItem
SBPasscodeController
AlertSuppression
SBIsolationTankController
FBSceneHostManagerObserver
_SBMultiplexedHostViewScreenRectObserver
SBMultiplexedHostingDelegate
HostingWindows
SBTestStarkAlertView
SBTestStarkAlert
SBStarkAlertRecipe
SBLockScreenNotificationBulletinBannerItem
SBKeyboardSuppressionManager
SBAppProfileExpiredAlertItem
SBDashBoardVibrantWallpaperChevronView
SBBaseStartupTransition
SBStartupTransition
SBLockScreenBatteryChargingViewController
SBWindowManagerTestRecipe
SBAppProfileNotTrustedAlertItem
SBSnapshotTestRecipe
SBWidgetController
WGWidgetDiscoveryControllerDelegate
SBExtensionHandling
_SBScreenshotPersistenceCoordinator
SBLockScreenFakeStatusBarStateProvider
SBLockScreenScrollView
SBLockScreenView
_UIGlintyStringViewDelegate
SBCoordinatedPresenting
SBPresentingDelegate
SBLockScreenViewRequesterTracker
SBAnimatableCorneredView
SBNotificationVibrantButton
SBProxyRemoteView
SBHomeScreenPullDownSearchViewController
SBDashBoardViewController
SBDashBoardViewDelegate
SBDashBoardViewTransitioning
SBDashBoardLegibilityProviderDelegate
SBLockScreenActionProvider
SBLockScreenPluginManagerDelegate
SBFIrisWallpaperViewDelegate
SBDashBoardSlideUpToAppControllerDelegate
SBDashBoardNotificationDestination
SBNotificationExtensionVisibilityProviding
SBLockScreenTimerViewControllerDelegate
SBDashBoardMesaUnlockBehaviorConfigurationDelegate
SBMesaUnlockBehaviorDelegate
SBDashBoardScrollGestureControllerDelegate
SBSearchEtceteraMultiplexingViewControllerAppearanceDelegate
SBSUICarDisplayNowPlayingHostInterface
SBSUICarDisplayNowPlayingInterface
SBStarkNowPlayingService
SBDashBoardMediaArtworkView
SBDashBoardMediaArtworkViewController
SBApplicationShortcutService
SBApplicationServerShortcutDelegate
SBLockScreenDisabledAssertionManager
SBAutoUnlockRule
SBRemoteViewInfo
SBRemoteViewsController
SBLockScreenPasscodeSettings
SBNCAlertingController
NCAlertingController
SBWorkspaceInteractionContext
SBSheetController
SBAlertToLockScreenWorkspaceTransaction
SBCommandTabController
SBCommandTabViewControllerDelegate
SBSheetView
SBAppViewBackgroundView
SBExternalDisplayController
FBDisplayManagerObserver
SBWorkspaceSlaving
SBNCScreenController
CMPocketStateDelegate
SBRootIconListView
SBSceneLayoutWindow
SBStarkNowPlayingController
SBStarkNowPlayingServiceDelegate
SBLockScreenDeviceBlockViewController
SBHarmonySettings
SBBannerGestureHandler
SBSwitcherToAppTransitionMetric
SBLogoutDebugBlockingViewController
UITableViewDataSource
UITableViewDelegate
SBUIAnimationFadeLockscreenToAlert
SBBBSectionInfo
SBChronologicalNotificationsSectionInfo
SBNotificationsBulletinCell
SBBBBulletinInfo
SBNotificationDateLabelDescription
SBSearchEtceteraBlurringPushTransitionAnimator
SBReloadWallpaperTestRecipe
SBBannerViewCallbackManager
SBIconListPageControl
SBStarkIconListPageControl
_SBUIStarkStartupToAppAnimation
SBUIStarkStartupToAppAnimation
SBAppFreeDevProfileNotTrustedAlertItem
SBCallPermissionAlertItem
SBSystemGestureSwitchMetric
SBSettingsDataProvider
SBUIAnimationLockScreenToAppCrossfade
FBSynchronizedTransaction
SBLockScreenSlideUpToAppWorkspaceTransaction
FBSynchronizedTransactionDelegate
SBLockScreenSlideUpToAppController
SBFAuthenticationResponder
SBDashBoardBehavior
SBUIAnimationFadeRemoteAlertToApps
SBIconLaunchMetric
SBStarkScreenFocusAssertion
SBStarkScreenFocusController
SBSetupManager
SBReducedMotionDosidoAnimator
SBLockScreenActionManager
SBHomeButtonPressMesaUnlockTrigger
SBSceneLayoutAnimationWrapperView
SBSceneLayoutReferenceOrientedView
SBSceneLayoutInterfaceOrientedView
SBSceneLayoutElementAnimationWrapperView
SBSideAppSlideGestureWorkspaceTransaction
SBUIAnimationZoomUpAppsFromAlert
SBExternalWifiDefaults
SBButtonDownGestureRecognizer
SBDeckSwitcherViewController
SBDeckSwitcherPageViewProviderDelegate
SBSwitcherAppSuggestionViewControllerDelegate
SBDeckSwitcherItemContainerDelegate
SBMedusaAppsTestRecipe
SBDashBoardView
BSUIScrollViewDelegate
SBDashBoardBackgroundStyleTransitioning
SBTestableAlertItemTestRecipe
SBThermalWarningAlertItemDelegate
SBThermalTrapRecipe
SBSearchBlurEffectView
SBLockScreenNotificationBannerItemFactory
SBNotificationStaticContentProvider
SBStarkLockOutView
SBBrightnessHUDView
SBBrightnessController
SBHUDController
SBHUDWindow
SBSwitcherAppSuggestionViewController
SBSwitcherAppSuggestionBottomBannerViewDelegate
SBAppSwitcherPageViewDelegate
SBSwitcherAppSuggestionContentView
SBDataPlanAccountAlertItem
SBDataPlanAlertActions
SBDataPlanUsageAlertItem
SBDataPlanDisableAlertItem
SBDataPlanActivationAlertItem
SBDashBoardResetRestoreViewController
SBSceneLayoutWhitePointAdaptationController
SBDataPlanCompletionAlertItem
UIViewController_SpringBoard
SBHomeHardwareButtonActions
SBLockScreenNotificationBannerItem
SBDefaultBannerViewSource
SBUIQuietModePlayability
SBDataPlanFailureAlertItem
SBButtonConsumerClientInfo
SBHardwareButtonService
SBSystemServiceServerHardwareButtonDelegate
SBSystemServiceServerDelegate
SBAutoUnlockComposableRule
SBUIAnimationLockScreenToAppZoomIn
SBAlertChangeTransaction
SBFolderIconListView
SBComposedWallpaperTestRecipe
SBStartupTransitionController
SnapshotSorting
SBFairPlayFamilyLeaveAlertItem
SBStarkLockOutWindow
SBZoomableView
SBDashBoardMainPageViewController
SBSlideOverDosidoAnimator
SBMedusaOrientationTestRecipe
SBFolderIcon
SBFolderObserver
SBIconObserver
SBIconIndexNodeObserver
SBDashBoardVibrantWallpaperButton
SBFolder
SBTreeNode
SBIconIndexNode
SBIconIndexMutableListObserver
SBIconListModelObserver
SBLockScreenInfoOverlayView
SBReachabilitySettings
SBDeckSwitcherItemContainer
SBUIStarkStartupToLockoutAnimation
SBLeafIcon
SBRootFolder
SBSetupRegulatoryInfoViewController
SBDashBoardAction
SBDataPlanAlertItem
SBToggleClassroomPluginTestRecipe
SBLayoutElementContainerView
SBUIStarkZoomUpAppFromHomeAnimation
SBDashBoardUserPictureViewController
_SBDefaultScreenshotProvider
_SBScreenshotProvider
SBAppIconForceTouchSettings
SBIconListModel
NSFastEnumeration
SBAppSwitcherService
SBDeckSwitcherPageView
Folders
SBConferenceManager
SBMedusaSettings
SBExternalSoundsDefaults
SBWindowManagerWithActionTestRecipe
SBIconLabelViewFactory
SBIconSimpleLabelView
SBIconLabelView
SBIconLegibilityLabelView
_SBWallpaperWindow
SBWallpaperController
SBFLegibilitySettingsProviderDelegate
SBFWallpaperViewInternalObserver
SBUIActiveOrientationObserver
SBFWallpaperConfigurationManagerDelegate
SBWallpaperServerDelegate
Medusa
_SBFakeBlurView
_SBFakeBlur
_SBAccessibilityTintView
SBWallpaperStyleInfo
SBWallpaper
SBFolderSettings
SBExternalGlobalDefaults
SBNCColumnViewController
SBModeViewControllerContentProviding
SBNCTableViewControllerDelegate
SBUISizeObservingViewDelegate
SBWalletNotificationSource
NCNotificationSource
SBHBInitialPressDownGestureRecognizer
SBHBInitialPressUpGestureRecognizer
SBHBDoublePressDownGestureRecognizer
SBHBDoublePressUpGestureRecognizer
SBHBTriplePressDownGestureRecognizer
SBHBSinglePressUpGestureRecognizer
SBHBAcceleratedSinglePressUpGestureRecognizer
SBHBTriplePressUpGestureRecognizer
SBHBLongPressGestureRecognizer
SBHBDoubleTapUpGestureRecognizer
SBHomeHardwareButtonGestureRecognizerConfiguration
SBHomeHardwareButton
SBIconImageFolderCrossfadeView
SBRotateHomeScreenWorkspaceTransaction
SBAppSwitcherModel
SBLockScreenDateViewController
SBLockScreenClippedSlideController
SBWorkspaceTransitionContext
SBDisplayLayoutContext
SBRotationLockHUDView
SBRotationLockHUDController
SBDataPlanExpirationAlertItem
SBBluetoothAccessoryLowPowerAlertItem
SBUIAnimationHomeScreenZoomApp
SBFolderBackgroundView
SBDismissOverlaysAnimationController
SBSideSwitcherPageView
SBIconOverlayDarkeningView
SBVideoPermissionAlertItem
SBLiftToWakeController
CMWakeGestureDelegate
SBAppSwitcherServiceCellView
SBOrientationLockManager
SBLockScreenPreviewView
SBTintedImageProvider
Capture
SBRelatedDataDeletionAlertItem
SBUIPresentSwitcherAnimationController
SBCompoundIdleTimer
_SBSceneLayoutCoordinateSpace
SBAnimationWrapperHostRequester
SBSceneLayoutViewController
SBLayoutElementViewControllerDelegate
SBLeafIconViewController
SBIconAccessoryImage
SBCountedMapValue
SBIconAccessoryViewMap
SBLockScreenPluginOverlayViewController
SBActivationFailedAlertItem
SBIconVisibilityService
SBIconStateUnarchiveResult
SBIconStateUnarchiveContext
SBIconStateArchiver
SBDashBoardMainPageContentViewController
SBDashBoardStatusTextViewControllerDelegate
SBLockScreenNowPlayingControllerDelegate
SBDashBoardNotificationListViewControllerDelegate
SBSearchEtceteraPartialPulldownTransitionAnimator
SBScreenshotManagerDataSource
_SBUIAnimationControllerCoordinatingChildRelationship
SBUIAnimationController
SBUIAnimationControllerCoordinating
SBUIAnimationControllerActivatingAndDeactivatingAppTransitionContextProvider
SBUIAnimationControllerTransitionContextProvider
SBApplicationCarPlayService
SBApplicationServerCarPlayDelegate
_SBFolderPageElement
_SBIconGridWrapperView
SBFolderIconImageView
SBFolderIconObserver
SBIconBlurryBackgroundViewObserver
SBSnapshotWindow
SBViewSnapshotProvider
SBUIPluginManager
Testing
SBUIFullscreenAlertAdapter
SBHardwareButtonActionList
SBComposedWallpaperSpecification
SBComposedWallpaperSpecificationLayer
SBComposedWallpaperSpecificationColorLayer
SBComposedWallpaperSpecificationImageLayer
SBUIFullscreenAlertViewAdapter
SBDashBoardModalVisualEffect
SBLockScreenActionContextFactory
SBUserAgent
SBUIUserAgent
SBPolygon
SBExternalSettingsDefaults
SBTouchTemplate
SBLockScreenBuddyView
SBAnimationUtilities
SBBackBoardServicesInterface
SBTouchRegionManager
SBDashBoardAppearance
SBStarkLoggingAlertItem
SBStarkInitiateLoggingAlertItem
SBStarkCompleteLoggingAlertItem
SBStarkFileRadarAlertItem
SBHarmonyController
SettingsSupport
SBOrientationTransformWrapperView
_SBOrientationTransformedContentView
SBExternalDuetDefaults
SBControlCenterController
CCUIControlCenterViewControllerDelegate
SBDashBoardExternalBehaviorProviding
SBDashBoardExternalPresentationProviding
SBAnimationStepper
SBWorkspaceApplicationTransitionContext
SBHorizontalScrollFailureRecognizerSettings
SBIconView
SBIconViewClass
SBCloseBoxView
SBViewControllerTransitionContext
SBViewControllerContextTransitioning
UIViewControllerContextTransitioning
SBViewControllerTransitionRestartedReporting
SBViewControllerTransitionCoordinator
UIViewControllerTransitionCoordinator
UIViewControllerTransitionCoordinatorContext
SBViewControllerTransitionCoordinatorContext
SBIcon
Internal
MemoryMappedImages
SBStarkLayoutState
SBFolderIconView
SBHomeButtonTimingSettings
SBHomeButtonSettings
SBDashBoardEmergencyDialerViewController
SBLockScreenEmergencyDialerDelegate
SBIconViewMap
SBIconViewObserver
SBNewsstandApplication
SBWorkspaceAlert
SBExternalDisplayWorkspaceSlaveTransaction
SBDashBoardStatusTextView
SBPreciseClockTimer
SBSuspendedWorkspaceTransaction
SBStarkIconController
SBStarkStatusBarIconVisibilityDelegate
SBDashBoardHomeButtonShowPasscodeRecognizer
SBHomeButtonShowPasscodeRecognizer
SBSwallowingGestureRecognizer
SBLayerHostView
SBDashBoardPasscodeViewController
SBCarWindowLayoutStrategy
SBWindowLayoutStrategy
SBIconZoomAnimator
SBSearchEtceteraMultiplexingViewController
SPUISearchViewControllerDelegate
WGWidgetGroupViewControllerDelegate
SBSearchEtceteraIsolatedViewControllerAppearanceDelegate
SBDashBoardIsolatingViewController
SBNotificationCenterDismissScreenEdgePanGestureRecognizer
SBNotificationCenterInteractiveTransition
SBNotificationCenterTransitionContext
SBNotificationCenterController
SBBulletinWindowClient
SBNotificationCenterViewControllerDelegate
SBBulletinActionHandler
SBLockOverlayTransition
BSSettingDescriptionProvider
SBSaturatedIconView
SBActivateApplicationTestRecipe
NCRevealWalletPassActionRunner
NCNotificationActionRunner
SBLockScreenPluginLifecycleObserver
Wallet
SBMainAlertHostedAccessoryWrapper
SBMainAlertManager
SBLayoutState
SBLayoutContext
SBAdvanceDateOverrideTestRecipe
SBLockScreenPluginTransitionFactory
SBStartupTransitionFactory
SBAppParallaxSettings
SBAppSwitcherSettings
SBStarkAppExitedWorkspaceTransaction
_SBPendingMesaUnlockBehaviorUnlockRequest
SBLockScreenMesaCoordinator
SBUIBiometricResourceObserver
SBWalletPrearmRecognizerDelegate
PKPassLibraryDelegate
SBUIPasscodeBiometricMatchingAssertionFactory
SBLayoutElementViewController
SBLayoutElementContainerViewDelegate
SBSceneDebugColors
SBSceneManagerReference
BSDebugDescriptionProviding
SBSnapshotDataProviderContext
SBSceneSnapshotDataProvider
XBSnapshotDataProvider
SBUIImageDataProvider
SBWebApplication
SBSideSwitcherViewController
SBSideSwitcherScrollingItemViewDelegate
SBSideSwitcherPageViewDelegate
SBSideSwitcherContainerView
_SBUIStarkZoomUpNowPlayingFromHomeAnimation
SBUIStarkZoomUpNowPlayingFromHomeAnimation
SBModelessSyncController
SBModelessSyncStubs
SBLoginAppContainerOverlayWrapperView
SBPresentNotificationCenterTestRecipe
SBNotificationCenterSettings
SBBulletinModalController
SBBulletinAlertHandler
SBBulletinBusyClient
SBBulletinModalAlertLifeCycle
SBAppStatusBarSettingsAssertion
SBMainWorkspaceTransaction
SBBannerController
SBUIBannerTargetImplementation
SBUIBannerTargetBase
SBBannerContextViewControllerDelegate
SBBannerGestureHandlerDelegate
SBBannerDismissSystemGestureRecognizerDelegate
SB20086499Workaround
SBIconPageIndicatorImageSetResult
SBIconPageIndicatorImageSetCache
SBLogoutProgressAlertView
NotificationCenter
SBNotificationBannerDestination
NCNotificationViewControllerDelegatePrivate
NCNotificationViewControllerDelegate
SBMotionGestureObserver
NCNotificationAlertDestination
NCNotificationDestination
SBNotificationDestinationHomeButtonPressHandler
TestingSupport
SBSteppedAnimationTimingFunctionCalculator
_SBSteppedAnimationTimingFunction
SBActivityContinuationAction
SBActionHandler
SBPIPContainerViewController
PGPictureInPictureViewControllerContentContainer
SBPIPContentViewLayoutSettingsObserver
SBAccessibility
SBStartupTransitionToHome
SBExternalDefaults
SBControlColorSettings
SBNotificationControlColorSettings
SBBulletinModalAlert
SBAppViewStatusBarDescriptor
SBWallpaperEffectSnapshotCache
SBBulletinWindowController
SBBulletinWindow
SBBulletinRootView
SBBulletinRootViewController
_SBBulletinRootViewControllerTransitionContext
SBStarkRelockUIAlert
SBRenderImage
SBGraphics
SBMultiVariantWallpaperEffectView
SBDashBoardSlidingPresentationViewController
Reachability
SBDashBoardRegionsDebugView
SBAutoPiPWorkspaceTransaction
UIGestureRecognizerTransformAnalyzerInfo
UIGestureRecognizerTransformAnalyzer
SBTableViewCellActionButton
SBStarkStatusBarViewController
UIStatusBarStyleDelegate
SBFakeiTunesRestoreTestRecipe
_SBMultiplexedHostView
SBVPPAppRequiresHealingAlertItem
SBMainSwitcherViewController
SBMainAppSwitcherContentViewControllerDelegate
SBSwitcherContainerView
SBLoginAppContainerView
SBSMSClass0AlertView
SBSwitcherAppViewWrapperPageContentView
SBIconRelayoutRecipe
SBUIAnimationControllerAdditions
SBDaemonHandler
SBDaemonRequest
SBDaemonContext
SBNotificationSeparatorView
SBScreenFadeAnimationController
SBAlertItemPresentation
SBExternalUIKitDefaults
SBStarkIconView
SBClockNotificationManager
UNUserNotificationCenterObserver
SBLiquidDetectionManager
SBAppRepairTransaction
SBLayoutElement
SBLayoutElementDescriptor
SBLayoutElementIdentity
SBStatusBarForcedHiddenTestRecipe
SBStretchTransformerView
SBStretchTransformer
SBActivateSwitcherToAppsWorkspaceTransaction
SBLockScreenUnlockRequest
SBMultiplexingViewController
SBMultiplexedHostingObserver
_SBMultiplexingView
SBExternalPhoneDefaults
SBLayoutElementAdornmentView
SBSceneDimmingView
SBLayoutElementPinResizeGrabberView
_SBLayoutElementPinResizeGrabberVibrantView
SBWaitForAppActivationTransaction
SBInitialRestartState
SBMutableInitialRestartState
SBUIAnimationFadeAlertToRemoteAlert
SBWarningIdleTimer
SBCompoundIdleTimerDelegate
SBInsecureDrawingAlertItemTestRecipe
SBAppSwitcherServiceSet
SBStartupTransitionContext
SBWaitForSceneCreationTransaction
FBWindowContextManagerObserver
FBSceneLayerManagerObserver
SBStarkFakeIconOperationController
SBLockScreenNotificationScrollView
SBLockScreenNotificationCell
SBLockScreenBulletinCell
SBLockScreenSnoozedAlarmCell
SBLockScreenSystemAlertCell
SBLockScreenPassbookCell
SBReachabilityTestRecipe
SBBannerDismissSystemGestureRecognizer
SBAssistantController
SBSMSClass0AlertTestRecipe
SBAppSwitcherScrollView
SBLockScreenHintManager
CCUIControlCenterObserver
SBLockScreenHintLongPressGestureRecognizer
SBLockScreenHintPanGestureRecognizer
SBLockScreenHintTapGestureRecognizer
SBModalAlertPresenter
SBSnoozedAlarmDateLabel
SBSwitchAppDosidoAnimator
SBBannerPullDownGestureHandler
SBAlertItemWindow
SBSharedModalAlertItemPresenter
_SBAlertControllerDelegate
SBModalViewControllerStackDelegate
UIAlertControllerCoordinatedActionPerforming
SBIconFadeAnimator
SBPressSequenceSettings
SBDisableActiveInterfaceOrientationChangeAssertion
SBSearchEtceteraLayoutView
SBAppContainerView
SBWallpaperLegibilitySettingsProvider
SBFLegibilitySettingsProvider
SBAwayListItem
SBAwayListCellButtonHandler
SBAwayBulletinListItem
SBSnoozedAlarmListItem
SBAwaySystemAlertItem
SBAwayCardListItem
SBDashBoardTodayPageView
SBSIMLockPasscodeRecipe
NCUserAlertActionRunner
NCUserAlertDefaultActionRunner
NCUserAlertDismissActionRunner
UserAlert
SBBulletinAttachmentFactory
SBDashBoardModalButton
SBSideSwitcherRecipe
SBNotificationLegacyCarDestination
_SBUIStarkDosidoNowPlayingAnimation
SBUIStarkDosidoNowPlayingAnimation
SBSimpleLockScreenActionProvider
SBMainDisplayLayoutState
SBMainDisplayLayoutContext
SBRotateScenesWorkspaceTransaction
SBInsecureDrawingAlertItem
SBPowerDownAlertView
SBStartupTransitionToLockOut
SBBulletinBannerItem
SBBulletinBanner
SBIconAnimationContext
SBIconAnimator
SBBulletinAlertHandlerRegistry
SBUIAnimationFadeHomeToPluginAlert
SBDashBoardBlockEventHandler
SBMainWorkspaceSideSwitcherEntity
SBVoiceDisabledBundles
SBSceneLayoutWorkspaceTransaction
FBSynchronizedTransactionGroupDelegate
FBApplicationUpdateScenesTransactionObserver
SBStarkNowPlayingWindow
SBDashBoardFullscreenNotificationView
SBSoundController
SBAppResizingPlaceholderView
SBAppResizingBlurContainerView
SBAppBackdropViewSettings
SBSwitcherForcePressSystemGestureTransaction
SBFramewiseInteractiveTransitionAnimator
SBSOSTriggerObserver
SBPressSequenceRecognizerDelegate
SBTouchTemplateGestureRecognizer
SBTemplateAndMorph
SBUIAnimationSwitcherDismissToRemoteAlert
SBFolderTitleTextField
SBBannerContainerViewController
NCInteractiveNotificationHostDelegate
SBBannerButtonViewControllerDelegate
NCNotificationActionTextInputDelegate
NCBannerAccessoryHostViewControllerDelegate
UIViewControllerTransitioningDelegate
SBDashBoardTodayPageViewController
SBDashBoardTodayViewControllerDelegate
SBClockApplicationIcon
SBPasscodeEntryAlertView
SBBulletinLocalObserverGateway
SBMainDisplaySystemGestureManager
SBLogoutProgressTestRecipe
SBBuddyLockScreenDismissOnlyAlertItem
SBDismissEmergencyCallRecipe
SBAutoPurgingImageView
SBBlockWorkspaceQueueTestRecipe
SBPrototypeControllerSettings
SBIconModelPropertyListFileStore
SBIconModelStore
SBDefaultIconModelStore
SBFullScreenOcclusionTestRecipe
SBUIStarkStartupToHomeAnimation
SBMiscellaneousSystemAnimationSettings
SBActivationInfoViewController
SBWaitForCarNowPlayingActiveTransaction
SBIconIndexMutableList
SBAppSuggestionManager
UABestAppSuggestionManagerDelegate
_SBUABestAppSuggestion
SBIconIndex
SBLockScreenUserPictureView
SBAppContainerViewController
SBIconModelMemoryStore
SBExternalDisplayDisconnectTransaction
SBPlaceholderIcon
SBScreenshotGestureRecognizer
SBLockScreenBatteryFillView
SBLockScreenBatteryChargingView
_SBLockScreenSingleBatteryChargingView
_SBLockScreenDoubleBatteryChargingView
SBRebootContext
SBQuietModeStateAggregator
SBAlertManagerObserverWrapper
SBAlertManager
SBAlertDelegate
SBAlertWindowDelegate
SBStarkWorkspaceTransitionRequest
SBReverseCountedSemaphore
SBSideSwitcherWhiteView
SBCenterIconZoomAnimator
SBIconListLayoutDelegate
SBExternalDemoDefaults
SBUIFullscreenAnimationView
SBStarkAppToAppWorkspaceTransactionFactory
SBApplicationActivationAssertion
SBUIPluginHost
SBUIPluginControllerHost
SBDashBoardFullscreenNotificationViewController
SBDashBoardModalViewDelegate
SBLockScreenModalViewDelegate
SBVoiceControlController
SBLockScreenFullscreenBulletinViewController
SBLockOverlayViewDelegate
SBUILockOverlayViewDelegate
SBDismissOnlyAlertItem
SBAlarmAndTimerTestRecipe
SBApplicationLaunchImageParameters
SBWallpaperPreviewSnapshotCache
SBCarPlayIconModel
SBDashBoardTodayViewController
SBIconLabelLegibilityImage
SBLockStateAggregator
SBAuthenticationFeedback
SBLockScreenDeviceInformationTextView
SBIconLabelImage
SBLockScreenNowPlayingController
SBApplication32BitDeprecationAlertItem
SBPasscodeEntryAlertViewController
SBPasscodeEntryAlertViewDelegate
SBSystemServiceServer
_SBAppSwitcherSnapshotContext
SBAppSwitcherSnapshotView
SBAssertion
SBLockScreenPluginManager
SBDashBoardHostedAppViewController
SBAppViewControllerDelegate
SBHomeButtonPressSpeedMesaUnlockTrigger
SBStarkRelockUIViewController
SBDashBoardMesaUnlockBehavior
SBMesaUnlockBehavior
SBSimScrollToIconTestRecipe
SBNoLocalApplicationAlertItem
SBSearchEtceteraIsolatedViewController
SBSearchEtceteraLayoutViewDelegate
'"#q
SBSceneManagerCoordinator
FBWorkspaceDelegate
SBSceneManagerReferenceDelegate
SBCountedMap
SBLockScreenResetRestoreViewController
_SBSynchronizeOperation
SBUIAnimationZoomDownApp
SBLockScreenInfoOverlayViewController
SBUIAnimationDosidoTransitionController
SBIPhotoLaunchDeniedAlertItem
SBFadeAnimationSettings
SBAppBlacklistedAlertItem
_SBMainScreenScreenshotProvider
SBLockScreenNotificationListController
SBLockScreenNotificationViewDelegate
SBLockScreenActionHandler
SBLockScreenNotificationModel
SBUIBannerSource
SBUIBannerTargetManagerObserver
SBLockScreenNotificationBannerItemDelegate
SBBannerTapGestureRecognizer
SBGrabberTongue
SBIconImageView
SBIconProgressViewDelegate
SBBulletinTourRecipe
SBIconLabelAccessoryView
SBIconRecentlyUpdatedLabelAccessoryView
SBIconBetaLabelAccessoryView
SBIconLabelAccessoryViewMap
SBDashBoardWallpaperEffectView
SBNotificationsClearButton
SBAppStatusBarTransitionInfo
SBUIAnimationController_Internal
SBNotificationCenterViewController
SBNotificationCenterWithSearchViewControllerPresentationDelegate
SBCancelableBlockOperation
SBStylusPriorityGestureRecognizer
SBSystemGestureManager
SBWallpaperServer
SBCameraApplication
SBWidgetListViewRecipe
SBSceneBackgroundedStatusAssertion
SBLockScreenActionContext
SBMutableLockScreenActionContext
SBUtilities
SBPolicyAggregator
SBRaiseToListenTestRecipe
SBLockScreenUserPictureViewController
SBBulletinBannerControllerTest
SBBulletinBannerController
SBBulletinSoundController
SBExternalDisplayUpdateSlaveTransaction
SBApplicationHarmonyService
SBApplicationServerHarmonyDelegate
SBLowQualityDarkBlurEffect
SBReusableViewMap
SBCardItemsController
SBCardItemsControllerRemoteInterface
SBLockScreenTemperatureWarningView
SBDashBoardTemperatureWarningViewController
SBDashBoardBackgroundView
SBDashBoardWallpaperOverlay
SBLockScreenBounceAnimator
UIDynamicAnimatorDelegate
SBLockToAppStatusBarAnimator
SBBiometricEventLogger
SBDockView
SBEventObserverRegistry
SBUIAnimationControllerAnimator
SBLockScreenLogoutButtonViewController
SBNotificationLongLookBannerDestination
SBUIDismissSwitcherAnimationController
DefaultImage
DefaultImage_Naming
DefaultImage_ManifestIngestion
SBDashBoardPresentationViewController
SBUIAnimationFadePluginAlertToHome
_SBUIStarkStartupToNowPlaying
SBUIStarkStartupToNowPlaying
SBBulletinListUtilities
SBSwitcherSnapshotImageView
SBCornerAnimatingImageView
SBPagedScrollView
SBDashBoardClippingLine
SBUIStaticAnimationController
SBDashBoardViewControllerBase
SBSceneLayoutTransitionAnimationController
_SBDummyRootVC
SBActiveInterfaceOrientationFollowingWindow
SBHomeScreenPreviewView
SBFolderViewDelegate
SBCarDisplaySceneManager
SBReturnToLockscreenWorkspaceTransaction
SBMutableIconLabelImageParameters
SBAnimationCurveSettings
SBAnimationSettings
SBReadonlyRow
SBReadonlyTableViewCell
SBAppViewController
SBBadgeCountRecipe
SBWipeSnapshotManifestTestRecipe
SBHomeScreenView
SBHomeScreenViewController
SBAppsToAlertWorkspaceTransaction
SBNotificationCenterLayoutViewController
SBModeViewControllerDelegate
SBUIStarkNullAnimationController
SBWorkspaceTransaction
SBHighlightView
SBAppToAppWorkspaceTransaction
SBIsolationTankWindow
SBStartupTransitionToApp
SBLogoutProgressAlertViewController
SBGameCenter
SBAlertToAppsWorkspaceTransaction
SBBannerContainerView
SBDefaultBannerView
SBUIBannerView
SBVibrantBannerView
SBInternalSceneSpecification
SBOmnibusAlertItemTestRecipe
SBAppSwitcherRemoteAlertSet
SBAlertToAlertWorkspaceTransaction
SBAppResizeGestureWorkspaceTransaction
SBMainDisplaySceneLayoutResizeUIManagerDelegate
SBResizeConveniences
SBAppResizeElementControllerCacheKey
SBLiveIconImageView
SBTapGestureRecognizer
SBUIStartupFromBlackAnimationController
SBUserAlertNotificationSource
SBMainSwitcherGestureCoordinator
SBLockOverlayViewController
SBLockOverlayContext
SBAutomaticIdleTimer
SBClientAlertItemTestRecipe
SBAssistantAlerts
SBChatKitAlerts
SBMapsAlerts
SBWiFiPickerAlerts
SBRelaunchAppWorkspaceTransaction
SBRelaunchBuddyWorkspaceTransaction
SBSpringBoardApplicationIcon
SBInCallAlertManager
SBActivateAppUnderLockScreenWorkspaceTransaction
SBAlertChangeTransactionDelegate
SBMesaUnlockTrigger
SBVoiceControlAlert
SBMainDisplaySceneLayoutGestureManager
SBSceneResizeSnakebiteGestureRecognizerDelegate
SBGrabberTongueDelegate
SBLockScreenToAlertWorkspaceTransaction
SBLoginAppContainerPluginWrapperView
SBLoginAppContainerPluginWrapperViewController
SBLockScreenEmergencyCallViewController
SBStarkIconWindow
SBIconGridImage
SBFakeStatusBarView
SBUIStartupToHomescreenAnimationController
SBWallpaperStyleRecipe
SBAlertItemsObjectQueue
SBSynchronizeCloudCriticalDataOperation
SBWallpaperEffectView
_SBFakeBlurObserver
_SBMaskingContainerView
_SBTintView
SBCarDosidoAnimator
SBMainScreenApplicationSceneTransactionObserver
SBToAppsWorkspaceTransaction
SBStarkNotificationBackgroundView
SBManualIdleTimer
SBLockHardwareButton
SBSOSTriggerObserverDelegate
SBBulletinSystemStateAdapter
SBCommandTabViewController
SBStatusBarStyleOverridesSettings
SBAppSwitcherRemoteAlertManager
SBBaseStatusBarChangeAssertion
SBDisableAppStatusBarAlphaChangesAssertion
SBDisableAppStatusBarUserInteractionChangesAssertion
SBLockScreenMesaFailureSettings
SBLockScreenMesaSettings
SBWorkspaceHomeScreenEntity
SBTouchTemplatePinchGestureRecognizer
SBLineFragment
SBStringMetrics
SBStringDrawing
SBUIStarkZoomDownNowPlayingToHomeAnimation
SBExternalDisplayWorkspaceTransitionRequest
SpringBoardAdditions
SBRemoteAlertAdapterController
SBThermalController
SBThermalWarningSuppressionAssertionDelegate
SBFThermalBlockProvider
SBLockScreenNotificationTableView
SBLockScreenNotificationListView
!!11
SBThermalWarningAlertItem
SBThermalWarningSuppressionAssertion
SBUIAnimationRemoteAlertToAlert
_SBModalViewControllerStackTransition
SBModalViewControllerStack
SBSideAppState
SBDashBoardNotificationListViewController
NCNotificationListViewControllerUserInteractionDelegate
NCNotificationListViewControllerDestinationDelegate
SBPressSequenceRecognizer
SBComposedWallpaperBuilder
SBDashBoardMainPageView
SBLockScreenAnimatedPluginTransition
SBPieChartSlice
SBPieChartView
SBStarkAlertToImpersonatedAppWorkspaceTransaction
SBIconLayoutOverrideStrategy
SBSwitcherForcePressSystemGestureRecognizer
SBAppStatusBarSettings
SBMutableAppStatusBarSettings
SBStarkScreenController
AVExternalDeviceDelegate
SBStarkIconControllerDelegate
SBStarkWindowDelegate
SBStarkStatusBarViewControllerDelegate
SBCarDisplaySceneManagerDelegate
SBUserEventInterface
SBDarkeningImageView
SBDashBoardPageControl
SBLockScreenDisableAssertion
SBZoomableCrossfadeView
SBAlertWallpaperTunnelManager
SBStarkScreenManager
SBScreenConnectionHandler
SBStarkScreenControllerDelegate
SBDashBoardNowPlayingController
SBCarBannerNotificationView
SBStarkNotificationViewController
UICollectionViewDataSource
UICollectionViewDelegate
SBCollectionViewCellDelegate
SBStarkBannerTargetObserver
SBDeckSwitcherIconImageContainerView
SBTestDataProvider2
SBSearchEtceteraBlurringPullTransitionAnimator
SBDeckSwitcherPageViewProvider
SBSwitcherAppViewWrapperPageContentViewDelegate
SelfHosting
SBWindowSelfHostWrapper
SBMainDisplaySceneManager
SBClientSettingObserverContext
SBAppClientSettingObserverContext
SBInternalClientSettingObserverContext
SBSystemGestureScrunchMetric
SBUIAnimationZoomDownLockScreenToHome
SBStarkLockOutViewController
SBStarkNotificationWindow
SBStarkNotificationViewControllerDelegate
SBStarkBannerItem
SBZPositionDosidoAnimator
SBStarkBannerCell
SBDashBoardViewBase
SBDashBoardModalViewControllerBase
SBCollectionViewCell
SBStarkNotificationLayout
SBWidgetLaunchStatsTestRecipe
SBAWDMetric
SBAWDMetricData
SBLowBatteryLogTestRecipe
SBFaceContactExpectationManager
SBManyApplicationsAlertItem
SBUIAnimationZoomDownAppsToAlert
SBStarkBulletinBannerItem
SBMainWorkspaceTransitionRequest
SBBounceSettings
SBHomeScreenWindow
SBMotionGestureController
SBUIAnimationFadeRemoteAlertToHome
SBWorkspaceEntity
SBLayoutElementProviding
SBWorkspaceDeactivatingEntity
SBWorkspacePlaceholderEntity
SBScrunchAppsSystemGestureWorkspaceTransaction
SBPocketStateMonitor
SBStarkAlertItemBannerItem
SBBevelView
SBImageAlertView
SBCarDisplaySettings
UIGestureRecognizer_SpringBoard
SBFloatyFolderView
SBFloatyFolderBackgroundClipView
SBFloatyFolderScrollView
SBScreenTimeTrackingController
SBStarkIconListModel
SBBannerContextViewSeparator
SBBannerContextView
SBAppStatusBarManager
SBReduceMotionDeckSwitcherViewController
SBAWDQueryableMetric
SBAssistantRootViewController
SBDashBoardModalPresentationViewController
SBStarkStatusBarDockController
UIStatusBarCarPlayDockDataProviding
SBForceStageInteractionGestureRecognizer
SBRebootRecipe
SBIrisWallpaperSettings
SBPressSequenceMetric
SBPressSequenceMetricData
SBRestartManager
SBLockScreenTimerView
SBCenterAppIconZoomAnimator
SBAlertWindowViewController
SBPressSequenceObserver
SBPressCollectorDelegate
SBAWDMetricDelegate
SBWorkspaceAlertTransitionContext
SBUIStartupToLoginWindowAnimationController
SBLoginAppContainerViewControllerObserver
SBIconRotationContainer
SBUIStarkZoomDownAppToHomeAnimation
SBAppSwitcherWallpaperSettings
_SBWallpaperStyleChoiceRow
_SBSaturationDeltaChoiceRow
_SBBlurRadiusChoiceRow
SBPIPContentViewLayoutSettings
SBLockOverlayView
SBDocumentAccessAlertItem
SBSearchEtceteraMetrics
SBSwitcherAppSuggestionSlideUpView
_SBSceneLayoutViewControllerAnimator
_SBSceneLayoutViewControllerTransitionContext
SBMainDisplaySceneLayoutViewController
SBAppActivationOrientationLayoutContext
SBBreadcrumbMetric
SBMainScreenAlertWindowViewController
SBSearchEtceteraLayoutContentView
SBSearchEtceteraTodayLayoutContentView
SBSearchEtceteraSearchLayoutContentView
SBSearchEtceteraNotificationsLayoutContentView
SBUIRemoteAlertHostInterface
SBUIRemoteAlertServiceInterface
_SBRemoteAlertHostViewController
SBRemoteAlertAdapter
_SBRemoteAlertHostViewControllerDelegate
SBRemoteAlert
_SBInternalPowerDownView
SBAlertViewAdapter
SBScreenEdgePanGestureRecognizer
SBHarmonicOscillator
SBExternalOperatorDefaults
SBLiftToWakeManager
SBDashBoardExternalEventHandling
SBNotificationCenterDestination
SBAlertingNotificationDestination
SBNCTableViewController
SBInfoOperand
SBCompoundInfoOperand
SBInfoOperation
SBAlertAdapter
SBWorkItem
SBWorkStore
SBBestAppSuggestion
SBDeferredWorkBuilder
SBStarkImpersonatedAppToAppWorkspaceTransaction
SBUIStarkScreenAnimationController
SBDashBoardComponent
SBNotificationCenterBounceAnimator
_SBNotificationCenterBouncingItem
UIDynamicItem
SBNotificationCenterScrollToTopView
SBApplicationShortcutStore
SBStatusBarStyleOverridesAssertionTestRecipe
SBApplicationSceneUpdateTransaction
SBUIStarkDosidoAnimation
SBDashBoardSetupView
SBWorkspaceApplication
SBSystemGestureWorkspaceTransaction
SBMainWorkspaceLayoutStateContingencyPlan
SBUIMainScreenAnimationController
SBReversibleLayerPropertyAnimator
SBUIAnimationFadeAlertToAlert
SBSearchEtceteraNavigationController
UINavigationControllerDelegate
SBProximitySensorManager
SBExternalDisplayTearDownSlaveTransaction
SBExternalSMSDefaults
SBUIStarkAnimationZoomDownApp
SBIconLabelImageParametersBuilder
SBStarkRootFolderController
SBModeViewController
_UISettingsKeyPathObserver
SBModeControlManager
SBStarkIconImageView
SBDefaultBannerTextView
SBTableViewCellDismissActionButton
SBNotificationCenterWithSearchViewController
SBBookmark
SBTodayWidgetXCodeDebuggingUtility
SBRoundedRectBorderView
SBSceneViewAppIconView
SBStarkIconModelApplicationDataSource
SBSpuriousScreenUndimmingAssertion
SBPanSystemGestureRecognizer
SBCrossfadeIconZoomAnimator
SBIconBlurryBackgroundView
_SBIconWallpaperBackgroundClient
_SBIconWallpaperBackgroundProvider
SBFolderIconBackgroundView
SBSceneResizeSnakebiteGestureRecognizer
SBSnakebiteDebugWindow
SBSceneResizeSnakebiteGestureDebugDelegate
_SBMinusPageStepper
SBRootFolderView
SBFramewiseInteractiveTransitionAnimatorDelegate
_SBRootFolderLayoutWrapperView
_SBRootFolderDockOffscreenFractionExternalClient
SBDockOffscreenFractionModifying
SBSwitcherPresentationInteractionMetric
SBDashBoardScrollModifier
SBPIPController
PGPictureInPictureControllerDelegate
SBAlertItemsControllerObserver
SBExternalSetupDefaults
SBUIAnimationControllerSteppedAnimator
SBClockDataProvider
SBBatteryDeviceChargeTestRecipe
SBStatusBarStateAggregator
SBFolderContainerView
SBMainStatusBarStateProvider
UIStatusBarStateObserver
SBStatusBarStateProvider
SBStatusBarStateAggregatorPosting
UIStatusBarStateProvider
SBStarkAlertWindow
SBSwitcherActivateNoninteractivelyTransaction
SBStarkAppToAlertWorkspaceTransaction
SBStarkAlertToAppWorkspaceTransaction
SBBouncingItem
SBPressTuple
SBStarkSystemGestureManager
SBStarkConnectWorkspaceTransaction
SBStarkDisconnectWorkspaceTransaction
SBStarkWorkspaceTransaction
SBStarkIconLayoutOverrideStrategyFactory
SBClockApplicationIconImageView
SBDefaults
SBRootFolderWithDock
SBDashBoardMediaControlsView
SBDashBoardMediaControlsViewController
MPULockScreenMediaControlsDelegate
SBStarkWorkspaceNowPlayingEntity
SBStarkAlertToAlertWorkspaceTransaction
SBStarkAppToAppWorkspaceTransaction
SBDashBoardScrollGestureController
SBUIStarkStartupAnimation
SBStarkSceneLayoutViewController
SBSwitchAppSystemGestureWorkspaceTransaction
SBSwitchAppSwipeTransactionDelegate
SBDashBoardNotificationDispatcher
SBDashBoardNotificationAlertingController
SBApplicationShortcutStoreManager
SBUIStarkStaticAnimationController
SBAssistantWindow
SBLockScreenNotificationSystemBannerItem
SBMainDisplaySceneLayoutResizeUIManager
SBNotificationsViewController
UIGestureRecognizerDelegatePrivate
SBNotificationCenterTouchEater
SBNotificationBulletinInfo
SBBacklightController
SBPocketStateMonitorObserver
SBLockScreenStatusTextViewController
SBNotificationBannerWindow
SBUISettings
SBApplicationRestrictionController
SBSnapshotExtensions
SBSnapshotSlotIdWrapper
SBAsynchronousSnapshot
SBLockScreenToAppsWorkspaceTransaction
SBIconPreviousLocationTracker
SBIconPreviousLocationInfo
SBStartupTransitionToLoginWindow
SBVolumeSliderRow
SBPrototypeController
SBRootSettings
_SBFallbackSettingsHelper
SBUILockscreenSlideAnimationController
SBLockScreenDeviceInformationTextViewController
SBNotificationRowActionFactory
SBFolderView
SBIconListPageControlDelegate
SBIconScrollViewDelegate
SBIconScrollView
SBMainWorkspacePrimarySwitcherEntity
SBLoginAppContainerViewController
SBLockScreenBatteryChargingViewControllerDelegate
SBLoginAppSceneHosterDelegate
SBUIAnimationFadeAlertToLockscreen
SBLockScreenEmergencyDialerController
SBLockScreenEmergencyCallViewControllerDelegate
SBSlideUpAppGrabberView
_SBFVibrantView
SBSwitcherMetahostingHomePageContentView
SBSetupUpgradeAlertItem
SBLockScreenViewController
SBLockScreenViewDelegate
SBLockScreenNotificationListDelegate
SBUIPasscodeLockViewDelegate_Internal
SBLockScreenInfoOverlayDelegate
SBLockOverlayViewControllerDelegate
SBLockScreenSlideUpToAppControllerDelegate
SBStarkToAppWorkspaceTransaction
SBRecycledViewsContainer
SBDefaultWindowLayoutStrategy
SBWindow
SBSecureWindow
SBIgnoredForAutorotationSecureWindow
SBSwitchAppList
SBSwitchAppSystemGestureRecognizer
SBNCSoundController
SBHomeScreenSearchableTodayViewController
SBLoginAppSceneHoster
FBUISceneDelegate
SBLoginAppClientSettingObserverContext
SBDashBoardChargingViewController
SBStarkStatusBarStateProvider
SBMainDisplayPolicyAggregator
SBControlCenterSystemAgent
CCUIControlCenterSystemAgent
SBAppSwitcherOrbGestureSettings
SBSearchEtceteraPercentDrivenInteractiveTransition
SBDashBoardScrollModifierSettings
SBMappedImageCacheAdditions
SBPressSequenceValidator
SBNCNotificationDispatcher
SBDashBoardViewControllerObserver
SBSideSwitcherScrollingItemViewController
SBUserNotificationSystemStateProvider
UNSSystemStateProviding
SBExternalDisplayUpdateTransaction
SBFolderController
SBFolderContext
SBDashBoardPowerChangeObserver
SBWindowManager
SBApplicationLibraryObserver
SBFakeDuet
SBBackgroundFetchTask
SBBackgroundMultitaskingManager
SBWorkStoreObserver
SBBackgroundFetchExternalRequest
SBStartupTransitionContextPersistence
SBLockScreenViewControllerBase
SBScreenFadeAnimationControllerDelegate
SBAlertItemsSettings
SBLockScreenManager
SBLockScreenViewControllerDelegate
SBPasscodeEntryAlertViewControllerDelegate
SBFPrivateAuthenticationObserver
SBDashBoardViewControllerDelegate
SBWallpaperColorProvider
SBLockScreenMesaCoordinatorDelegate
SBHomeButtonShowPasscodeRecognizerDelegate
SBStarkBannerView
SBStarkBannerItemObserver
SBDeckSwitcherAppSuggestionPageContentView
SBStarkBulletinBannerSource
SBDataProviderRecipe
SBWindowHideRequest
SBWindowHideState
SBWindowHidingManager
SBStartupTransitionToSetup
SBStarkBannerSource
SBTransaction
SBStarkAlertItemBannerSource
SBUIAnimationFadeAlertToHostedApp
SBValueConvergenceAnimator
_SBValueConvergenceAnimatorEngine
SBStarkBannerTarget
SBFolderIconZoomAnimator
_SBInnerFolderIconZoomAnimator
SBLockedModalAlertItemPresenter
SBDashBoardDeviceBlockViewController
SBUIAnimationFadeAppsToRemoteAlert
SBCombinationHardwareButtonActions
SBLockScreenTemperatureWarningViewController
SBBiometricsService
SBSystemServiceServerBiometricsDelegate
SBDashBoardPageViewBase
SBDashBoardPageView
SBEmptyBlurEffect
SBBounceBehavior
UICollisionBehaviorDelegate
SBLockScreenBuddyViewController
SBLockScreenBuddyViewDelegate
SBSIMLockPUKEntryAlertView
SBBiometricAuthenticationPolicy
SBUIBiometricAuthenticationPolicy
SBApplicationPlaceholder
FBApplicationPlaceholderObserver
SBDataRecoveryController
SBNotificationSectionSettings
SBApplicationPlaceholderController
SBApplicationPlaceholderLifecycleObserver
SBApplicationPlaceholderDelegate
SBAnimationFactorySettings
SBIconColorSettings
@64@0:8i16@20{CGPoint=dd}28d44@52B60
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8@16@24
v32@0:8@"_UISettings"16@"NSString"24
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@32@0:8@16:24
v16@0:8
d16@0:8
v24@0:8q16
{CGPoint=dd}32@0:8@16@24
@24@0:8@16
v24@0:8@16
q24@0:8@16
{CGPoint=dd}16@0:8
d32@0:8d16d24
B32@0:8{CGPoint=dd}16
d32@0:8{CGPoint=dd}16
B40@0:8{CGPoint=dd}16d32
v20@0:8B16
v24@0:8Q16
v24@0:8d16
{CGPoint="x"d"y"d}
@"NSMutableSet"
@"NSArray"
@"UIEvent"
@24@0:8q16
q16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@?16@0:8
v24@0:8@?16
@"UILabel"
@"UIImageView"
@"SBNotificationsClearButton"
d40@0:8@16q24q32
@"SBItemInfoLayoutCache"
v24@0:8@"SBMesaUnlockTrigger"16
@32@0:8@16@24
@"SBDashBoardViewController"
@"SBMesaUnlockTrigger"
v28@0:8B16@20
v36@0:8d16B24d28
@"NSHashTable"
B64@0:8q16q24{CGPoint=dd}32d48d56
v32@0:8d16d24
{CGSize="width"d"height"d}
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"NSObject<OS_dispatch_queue>"
@"ACAccountStore"
@"ACAccount"
{UIEdgeInsets=dddd}16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UIView"
v24@0:8@"SBLockScreenPlugin"16
v36@0:8B16@20@?28
@"SBLockScreenPlugin"
d24@0:8q16
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v24@0:8@"SBPowerDownController"16
v24@0:8@"SBRestartManager"16
v32@0:8@"SBRestartManager"16@"SBRestartTransitionRequest"24
v28@0:8@16B24
v28@0:8@"SBModalAlertPresentationCoordinator"16B24
v24@0:8@"UIApplication"16
B32@0:8@16@24
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@16@24@32@40
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@16@24@32
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@16q24d32
v40@0:8@"UIApplication"16q24d32
v32@0:8@16q24
v32@0:8@"UIApplication"16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@16@24@32@?40
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@16@24@32@40@?48
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@16@24@?32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@16@?24
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
Q32@0:8@16@24
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@40@0:8@16@24@32
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@16@24@?32
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@16@24@32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
v20@0:8i16
B24@0:8^{__IOHIDEvent=}16
v24@0:8^{__IOHIDEvent=}16
v28@0:8i16B20B24
B24@0:8q16
q36@0:8@16q24i32
B28@0:8@16i24
v28@0:8@16i24
B32@0:8@16@?24
v60@0:8@16@24B32B36B40@44@?52
v56@0:8@16@24B32B36@40@?48
v52@0:8@16@24B32@36@?44
v48@0:8@?16@24@?32@40
v24@0:8^{__GSEvent=}16
v32@0:8q16@24
v36@0:8q16B24@28
v40@0:8q16d24@32
v44@0:8q16d24B32@36
v48@0:8q16d24B32B36@40
v40@0:8q16B24B28@32
v24@0:8B16B20
B28@0:8@16B24
i16@0:8
@"SBUIController"
^{__IOHIDEvent=}
@"NSMutableArray"
@"NSSet"
@"SBApplication"
@"NSNumberFormatter"
@"NSTimer"
@"NSDate"
^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]}
@"NSObject<OS_dispatch_source>"
@"BBDataProviderConnection"
@"SBCardItemsController"
@"SBNCNotificationDispatcher"
^{__CFBoolean=}
@"SBUserSessionController"
@"<SBFLockOutStatusProvider>"
@"SBFUserAuthenticationController"
@"SBAppStatusBarSettingsAssertion"
@"SBSStatusBarStyleOverridesAssertion"
@"NSString"
@"SBBluetoothAccessoryBatteryMonitor"
@"SBScreenshotManager"
@"SBSynchronizeCloudCriticalDataOperation"
@"SBRestartManager"
^{__GSEvent=}
@"SBModalAlertPresenter"
@"SBModalAlertPresentationCoordinator"
@"SBMainDisplayInterfaceOrientationAggregator"
@"SBWidgetController"
@"SBHomeHardwareButton"
@"SBLockHardwareButton"
@"SBAccountStoreManager"
@"SBPowerDownController"
@"SBCombinationHardwareButton"
@"SBPressSequenceObserver"
@32@0:8q16@24
v32@0:8@"_UILegibilitySettings"16q24
v24@0:8@"NSArray"16
@"UIView"24@0:8@"UIGestureRecognizer"16
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
v24@0:8@"BSTransaction"16
v24@0:8@"UIInteractionProgress"16
v28@0:8@"UIInteractionProgress"16B24
v88@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56
v88@0:8@"UIWindow"16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56
B32@0:8@16q24
B32@0:8@"UIWindow"16q24
@"UIView"24@0:8@"UIWindow"16
v40@0:8@"UIWindow"16q24d32
v32@0:8@"UIWindow"16q24
B24@0:8@"UIWindow"16
v32@0:8^{?=BBBBBdi}16@24
v32@0:8^{?=BBBBBdi}16@"UIWindow"24
v36@0:8@16i24@28
v36@0:8@16@24i32
v28@0:8B16@?20
v36@0:8B16d20@?28
B28@0:8B16^B20
f16@0:8
v32@0:8q16d24
C16@0:8
@"SBHomeScreenWindow"
@"SBIconContentView"
@"UIStatusBar"
@"UIForceStageInteractionProgress"
@"SBDismissOnlyAlertItem"
@"SBAppSwitcherSettings"
@"SBScrunchSystemGestureRecognizer"
@"SBScrunchAppsSystemGestureWorkspaceTransaction"
@"SBSwitcherSlideUpSystemGestureRecognizer"
@"SBSwitcherForcePressSystemGestureRecognizer"
@"SBSwitchAppSystemGestureWorkspaceTransaction"
@"SBSwitchAppSystemGestureRecognizer"
@"SBSwitchAppList"
@"NSCountedSet"
@24@0:8^{_NSZone=}16
@28@0:8@16i24
@?36@0:8i16@20@?28
v28@0:8i16@?20
@20@0:8i16
@28@0:8i16@20
@"UIImage"
@"SBAppSwitcherServiceSet"
B40@0:8{CGSize=dd}16q32
d48@0:8{CGSize=dd}16q32@?40
@24@0:8Q16
@32@0:8@16Q24
B24@0:8@?16
B40@0:8Q16@?24@?32
B40@0:8@16Q24@?32
@"FBSDisplay"
@"FBWorkspaceEventQueue"
@"SBWorkspaceTransaction"
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"UIScreen"16
B32@0:8@"SBAlertManager"16@"SBAlert"24
@"SBAlertWindow"32@0:8@"SBAlertManager"16@"FBSScene"24
q32@0:8@16@24
q32@0:8@"SBAlertManager"16@"SBAlert"24
Q32@0:8@"SBAlertManager"16@"SBAlert"24
v40@0:8@"SBAlertManager"16@"SBAlert"24@"NSArray"32
v36@0:8@16@24B32
v36@0:8@"SBAlertManager"16@"SBAlert"24B32
v40@0:8@"SBAlertManager"16@"SBAlert"24@"SBAlert"32
v40@0:8@"SBAlertManager"16@"SBAlert"24@"BSUIAnimationFactory"32
v32@0:8@"SBAlertManager"16@"SBAlert"24
v32@0:8@"SBAlertManager"16@"SBAlertWindow"24
v40@0:8@"SBAlertManager"16@"SBAlert"24@"SBAlertWindow"32
v24@0:8@"SBStarkScreenManager"16
v40@0:8@16q24q32
v40@0:8@"SBStarkScreenController"16q24q32
v40@0:8@"FBSystemService"16@"NSString"24@?<v@?q>32
v40@0:8@"FBSystemService"16@"FBSystemServiceOpenApplicationRequest"24@?<v@?@"NSError">32
v56@0:8@"FBSystemService"16@"NSString"24@"NSDictionary"32@"BSAuditToken"40@?<v@?q>48
v64@0:8@16@24@32@40@48@?56
v64@0:8@"FBSystemService"16@"NSURL"24@"NSString"32@"NSDictionary"40@"BSAuditToken"48@?<v@?q>56
v32@0:8@"FBSystemService"16@?<v@?B>24
v48@0:8@"FBSystemService"16@"NSSet"24@"BSAuditToken"32@?<v@?q>40
v32@0:8@16Q24
v32@0:8@"FBSystemService"16Q24
v28@0:8@"FBSystemService"16B24
v40@0:8@"FBSystemService"16@"FBSDataResetRequest"24@?<v@?B>32
v32@0:8@"FBProcessManager"16@"FBProcess"24
v24@0:8@"FBApplicationProcess"16
v32@0:8@"FBApplicationProcess"16@"FBApplicationProcessExitContext"24
v24@0:8@"FBProcess"16
v40@0:8@"FBProcess"16@"FBProcessState"24@"FBProcessState"32
v24@0:8@"BSWatchdog"16
v40@0:8@"FBSceneManager"16@"FBScene"24@"<FBSceneClient>"32
v48@0:8@16@24@32@40
v48@0:8@"FBSceneManager"16@"FBScene"24@"FBSSceneSettings"32@"FBSSceneTransitionContext"40
v40@0:8@16@24Q32
v40@0:8@"FBSceneManager"16@"FBScene"24Q32
v44@0:8@16@24Q32B40
v44@0:8@"FBSceneManager"16@"FBScene"24Q32B40
v32@0:8@"FBSceneManager"16@"FBScene"24
B24@0:8@"BSPowerMonitor"16
v24@0:8@"BSPowerMonitor"16
@28@0:8@16B24
@24@0:8@?16
@36@0:8@16B24@?28
@32@0:8@16@?24
@36@0:8@16B24@28
@48@0:8@16@24@32o^@40
B44@0:8@16@24B32^@36
v44@0:8@16B24@28@?36
@"FBSceneManager"
@"SBMainAlertManager"
@"BSEventQueueLock"
@"SBScreenTimeTrackingController"
@"SBOrientationAggdLogger"
@"FBDisplayLayoutTransition"
@"BSWatchdog"
@"SBWindow"
@"SBWindowSelfHostWrapper"
@"NSMutableDictionary"
Q24@0:8q16
@40@0:8@16q24@32
@56@0:8{CGPoint=dd}16^Q32^i40@48
Q32@0:8{CGPoint=dd}16
{CGPoint=dd}32@0:8{SBIconCoordinate=qq}16
{CGSize=dd}16@0:8
@"UIFont"
@"UIColor"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v32@0:8@16d24
v32@0:8@"<SBViewControllerContextTransitioning>"16d24
v40@0:8@16d24q32
v40@0:8@"<SBViewControllerContextTransitioning>"16d24q32
d24@0:8@16
d24@0:8@"<SBViewControllerContextTransitioning>"16
v24@0:8@"<SBViewControllerContextTransitioning>"16
@"BSUIAnimationFactory"24@0:8@"<SBViewControllerContextTransitioning>"16
Q24@0:8@16
Q24@0:8@"<SBViewControllerContextTransitioning>"16
d24@0:8@"<UIViewControllerContextTransitioning>"16
v24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
@"SBMiscellaneousSystemAnimationSettings"
@"SBSearchEtceteraLayoutView"
@"SBSearchBackdropView"
@"<SBViewControllerContextTransitioning>"
{CGRect={CGPoint=dd}{CGSize=dd}}64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48^d56
{CGSize=dd}48@0:8{CGSize=dd}16q32^{CGRect={CGPoint=dd}{CGSize=dd}}40
v24@0:8@"_UILegibilitySettings"16
@"<SBDashBoardViewControllerProtocol>"16@0:8
v24@0:8@"<SBDashBoardViewControllerProtocol>"16
v24@0:8@"<SBDashBoardViewControlling>"16
v40@0:8@"<SBDashBoardViewControlling>"16@"BSAnimationSettings"24@?<v@?B>32
@"SBDashBoardAppearance"16@0:8
@"SBDashBoardBehavior"16@0:8
@"SBDashBoardPresentation"16@0:8
@"<SBDashBoardViewPresenting>"16@0:8
v24@0:8@"<SBDashBoardViewPresenting>"16
@"NSSet"16@0:8
@"_UILegibilitySettings"16@0:8
@"UIColor"16@0:8
@"<UICoordinateSpace>"16@0:8
@"NSArray"16@0:8
B24@0:8@"SBDashBoardEvent"16
v32@0:8@"SBDashBoardAction"16@"<SBDashBoardParticipating>"24
@"SBApplication"16@0:8
v36@0:8B16d20q28
@"<SBDashBoardViewControllerProtocol>"
v44@0:8@16B24d28@36
{CGAffineTransform=dddddd}16@0:8
@"UIView<SBAppSwitcherPageContentView>"
@"SBDisplayItem"
@"SBAppSwitcherSoftOutlineShadowView"
@"<SBAppSwitcherPageViewDelegate>"
@32@0:8@16d24
{?="start"{?="value"d"inclusive"B}"end"{?="value"d"inclusive"B}}
@"UIInteractionProgress"
v32@0:8@"SBSearchGesture"16d24
v28@0:8@"SBSearchGesture"16B24
v36@0:8@16B24@?28
v32@0:8@16B24B28
v32@0:8Q16@?24
v52@0:8Q16Q24@32@40B48
v28@0:8Q16B24
v32@0:8q16@?24
v40@0:8@16@?24@?32
v32@0:8d16@?24
v48@0:8@?16@?24@?32@?40
v40@0:8@?16@24@?32
v56@0:8Q16@24@32@?40@?48
@"SBLayoutState"24@0:8@"SBWorkspaceTransitionContext"16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@"SBWorkspaceTransitionContext"16@"SBWorkspaceEntity"24
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
@"SBWorkspace"
@"SBAlertManager"
@"NSUUID"
@"SBSceneLayoutViewController"
@"SBWorkspaceApplicationTransitionContext"
@"SBWorkspaceAlertTransitionContext"
@"BSAuditToken"
@"SBWorkspaceInteractionContext"
v48@0:8@"SBApplicationServer"16@"<FBSystemServiceClient>"24@"NSString"32@?<v@?q>40
v44@0:8@16@24B32@36
v44@0:8@"SBApplicationServer"16@"<FBSystemServiceClient>"24B32@"NSString"36
@"FBServiceClientAuthenticator"
B24@0:8@"SBAlertWindowViewController"16
q24@0:8@"SBAlertWindowViewController"16
Q24@0:8@"SBAlertWindowViewController"16
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
@60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48B56
@20@0:8B16
@"SBAlertWindowViewController"
@"<SBAlertWindowDelegate>"
@"NSMapTable"
@60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48@?52
@"UIView<SBUIPasscodeLockView>"
@"SBDashBoardBackgroundView"
v28@0:8d16B24
@"BSTimer"
@"SBPressTuple"
@"<SBPressCollectorDelegate>"
v80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
@"SBAlert"
@"SBLockScreenViewControllerBase"
@"UIStatusBarStyleRequest"16@0:8
@"SBDisplaySettings"16@0:8
v28@0:8q16I24
q20@0:8I16
B20@0:8I16
v28@0:8@16I24
@20@0:8I16
@"SBActivationSettings"16@0:8
v24@0:8@"SBActivationSettings"16
@"SBDeactivationSettings"16@0:8
v24@0:8@"SBDeactivationSettings"16
@"SBStateSettings"16@0:8
v24@0:8@"SBStateSettings"16
v32@0:8q16q24
q24@0:8q16
@"SBProcessSettings"16@0:8
v24@0:8@"SBProcessSettings"16
v36@0:8q16@24B32
@32@0:8{CGSize=dd}16
B20@0:8B16
@"<SBAlertDelegate>"
@"SBAlertView"
@"SBActivationSettings"
@"SBDeactivationSettings"
@"SBStateSettings"
@"SBProcessSettings"
@"UIScreen"
@"FBDisplayLayoutElement"
@"CRCarPlayAppPolicy"24@0:8@"SBApplication"16
@"AVExternalDevice"16@0:8
@"FBSDisplay"16@0:8
@"UIScreen"16@0:8
@"UITraitCollection"16@0:8
B20@0:8i16
@48@0:8@16@24@32#40
@"NSString"32@0:8@"FBWindowContextHostManager"16@"NSString"24
B40@0:8@16@24q32
B40@0:8@"FBWindowContextHostManager"16@"NSString"24q32
@"NSString"32@0:8@"FBSceneHostManager"16@"NSString"24
B40@0:8@"FBSceneHostManager"16@"NSString"24q32
Q24@0:8@"SBLeafIcon"16
@"UIImage"28@0:8@"SBLeafIcon"16i24
@"NSString"28@0:8@"SBLeafIcon"16i24
B24@0:8@"SBLeafIcon"16
q24@0:8@"SBLeafIcon"16
d24@0:8@"SBLeafIcon"16
@24@0:8@"SBLeafIcon"16
@"NSString"24@0:8@"SBLeafIcon"16
i24@0:8@16
i24@0:8@"SBLeafIcon"16
B36@0:8@16i24@28
B36@0:8@"SBLeafIcon"16i24@28
@"SBWorkspaceEntity"16@0:8
I16@0:8
v20@0:8I16
v36@0:8B16@20@28
{CGSize=dd}24@0:8@16
d20@0:8i16
@"SBApplicationInfo"
@"BKSApplicationDataStore"
@"XBApplicationSnapshotManifest"
@"UIRemoteApplication"
@"NSUserDefaults"
@"FBApplicationProcess"
@"BSMachPortSendRight"
@"FBProcessState"
@"FBApplicationProcessExitContext"
@"BKSProcessAssertion"
@"PCPersistentTimer"
@"NSDictionary"
@"FBSApplicationDataStore"
@40@0:8{CGPoint=dd}16@32
^{__CTServerConnection=}16@0:8
v32@0:8@?16@?24
v24@0:8{?=ii}16
v28@0:8B16^{__CTServerConnection=}20
v40@0:8@16@24^@32
Q20@0:8i16
v48@0:8@16@24@32^v40
v20@0:8C16
^{__CFString=}16@0:8
v36@0:8^{__CFString=}16^{__CFString=}24B32
v24@0:8i16i20
v24@0:8B16i20
^{__CTServerConnection=}
^{__CFString=}
^{__SCDynamicStore=}
@"SBAlertItem"
@"RadiosPreferences"
^{tcp_connection_fallback_watch_s=}
@"NWSystemPathMonitor"
@"TUCall"
d32@0:8@16@24
{CGPoint=dd}40@0:8{CGPoint=dd}16q32
@36@0:8@16@24B32
@148@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{CGRect={CGPoint=dd}{CGSize=dd}}80@112q120B128B132B136B140B144
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"SBFullscreenZoomView"
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@16{_NSRange=QQ}24@40
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
B48@0:8@16@24{_NSRange=QQ}32
@"TPButton"
@"UITextView"
@"UIActivityIndicatorView"
@"UITextField"
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
f24@0:8f16f20
B24@0:8f16f20
v20@0:8f16
@20@0:8f16
v60@0:8@16f24{CGSize=dd}28{CGPoint=dd}44
@24@0:8i16f20
v24@0:8i16f20
@"_UIBackdropView"
@"BKSDisplayRenderOverlay"
@"BSAnimationSettings"
@"SBSceneLayoutAnimationWrapperView"
@40@0:8^{NSString=#}16@24@32
@"SBBestAppSuggestion"
@"<SBLockScreenModalViewDelegate>"16@0:8
v24@0:8@"<SBLockScreenModalViewDelegate>"16
v24@0:8@"NSString"16
@"UIImage"16@0:8
v24@0:8@"UIImage"16
@"<SBDashBoardModalViewDelegate>"
@"SBDashBoardModalButton"
@"UIButton"
@"SBDashBoardStatusTextViewController"
@"_UILegibilitySettings"
@"UIVisualEffectView"
v28@0:8@"SBSceneLayoutViewController"16B24
v56@0:8@16@24@32@40@48
v56@0:8@"FBSceneManager"16@"FBScene"24@"FBSSceneClientSettingsDiff"32@"FBSSceneClientSettings"40@"FBSSceneTransitionContext"48
v40@0:8@"FBSceneManager"16@"FBScene"24@"NSSet"32
q32@0:8@"FBSceneManager"16@"FBScene"24
@"FBSSceneTransitionContext"32@0:8@"FBSceneManager"16@"FBScene"24
v32@0:8Q16@24
@"SBSceneManagerReference"
@"SBSceneLayoutWindow"
@"SBPolicyAggregator"
@"BSCopyingCacheSet"
@"UINavigationBar"
v32@0:8@"UIView<SBUIPowerDownViewInterface>"16@"NSString"24
v24@0:8@"UIView<SBUIPowerDownViewInterface>"16
@"SBPowerDownAlertView"
@"SBSetupManager"
@"SBActivationInfoViewController"
@"SBSetupRegulatoryInfoViewController"
v32@0:8@"FBSDisplayLayoutMonitor"16@"FBSDisplayLayout"24
v40@0:8@"FBSDisplayLayoutMonitor"16@"FBSDisplayLayout"24@"FBSDisplayLayoutTransitionContext"32
d24@0:8Q16
@"FBSDisplayLayoutMonitor"
@"<SBWalletPrearmRecognizerDelegate>"
v32@0:8@"SBDateTimeController"16@"NSDate"24
@28@0:8i16@?20
v32@0:8@"BSUIAnimationFactory"16@?<v@?B>24
@32@0:8@16q24
@"SBAnimationStepper"
{CGPoint=dd}32@0:8{CGPoint=dd}16
{CGPoint=dd}24@0:8@16
Q40@0:8{SBIconCoordinate=qq}16q32
{SBIconCoordinate=qq}32@0:8Q16q24
v40@0:8@16Q24B32B36
@40@0:8@16Q24B32B36
@36@0:8@16Q24B32
{CGPoint=dd}24@0:8Q16
{SBIconCoordinate=qq}24@0:8@16
{SBIconCoordinate=qq}24@0:8Q16
@40@0:8{CGPoint=dd}16^Q32
v44@0:8q16q24q32B40
B24@0:8Q16
@"SBIconListModel"
@"SBIconViewMap"
@"SBIcon"
@"UIFocusContainerGuide"
@"UIFocusGuide"
@"<SBIconListLayoutDelegate>"
@"SBSyncController"
Q24@0:8d16
v48@0:8{UIEdgeInsets=dddd}16
v24@0:8@"SBSMSClass0AlertView"16
{CGPoint=dd}40@0:8{CGPoint=dd}16@32
{CGPoint=dd}40@0:8{CGPoint=dd}16@"UIView"32
v32@0:8{CGPoint=dd}16
@"SBAnimatableCorneredView"
@"SBIconImageView"
@24@0:8d16
v40@0:8q16B24d28B36
@"_SBIconProgressStateTransition"
@"_SBIconProgressPausedTransition"
@"_SBIconProgressFractionTransition"
@"CADisplayLink"
@"<SBIconProgressViewDelegate>"
@32@0:8q16q24
#32@0:8q16q24
@"CAMediaTimingFunction"
v56@0:8@16i24B28@?32@?40@?48
v56@0:8@"SBIcon"16i24B28@?<v@?>32@?<v@?>40@?<v@?B>48
v32@0:8@16i24B28
v32@0:8@"SBIcon"16i24B28
{CGPoint=dd}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"NSArray"28@0:8@"SBIcon"16i24
v52@0:8@16B24@?28@?36@?44
v48@0:8@16@?24@?32@?40
v40@0:8@?16@?24@?32
@"SBDarkeningImageView"
@"SBIconAccessoryImage"
@"SBFParallaxSettings"
v24@0:8@"<SBUIPasscodeLockView>"16
@"SBUIPasscodeViewWithLockScreenStyle"
@40@0:8@16Q24q32
@"BSUIAnimationFactory"
@"<SBDosidoAnimator>"
B40@0:8Q16Q24B32B36
^{CGColor=}16@0:8
v24@0:8^{CGColor=}16
B32@0:8@"SBDashBoardHostedAppViewController"16q24
@"SBDashBoardHostedAppViewController"
@"SBDashBoardStatusTextView"
@"MCProfileConnection"
@"<SBDashBoardStatusTextViewControllerDelegate>"
@"NSString"24@0:8@"SBAppView"16
q24@0:8@"SBAppView"16
v32@0:8@"SBAssistantController"16q24
{?=d{?={?=dB}{?=dB}}q}16@0:8
v44@0:8@16@24@32B40
v44@0:8d16{CGPoint=dd}24B40
v44@0:8{CGPoint=dd}16B32@?36
v40@0:8{CGPoint=dd}16@?32
@32@0:8d16d24
@"SBLockScreenSettings"
@"SBMainWorkspaceTransaction"
@"UIPanGestureRecognizer"
@"SBBounceSettings"
@"SBNotificationCenterBounceAnimator"
@"<SBDashBoardSlideUpToAppControllerDelegate><SBDashBoardViewPresenting>"
@"SBWorkspaceAlert"
@"SBWorkspaceApplication"
@48@0:8@16q24@32@40
d48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8^{?={?=IIIIIi}{?=I}}16r^{?=[8I]}24
@"SBPasscodeEntryAlertViewController"
@44@0:8q16d24B32@36
@72@0:8{?=dddBBqq}16@64
{?=dddBBqq}32@0:8@16@24
B32@0:8^{?=dddBBqq}16@24
B40@0:8^{?=dddBBqq}16q24@32
B40@0:8q16^{?=dddBBqq}24@32
v32@0:8{CGSize=dd}16
v24@0:8@?<v@?{CGSize=dd}>16
@64@0:8@16I24i28{?=[8I]}32
@24@0:8B16B20
q20@0:8i16
@"NSURL"
@"_SBRemoteAlertContentHostViewController"
@"SBUISound"
@"NSExtension"
@"<NSCopying>"
@28@0:8B16@20
@"<SBModalAlertPresentationCoordinatorDelegate>"
@"<BSInvalidatable>"
@40@0:8{?=qqd}16
{?=qqd}16@0:8
v40@0:8{?=qqd}16
{?="startStyle"q"endStyle"q"transitionFraction"d}
B48@0:8q16@24q32@40
B64@0:8{?=qqd}16@40q48@56
B40@0:8@16q24@32
v24@0:8@"UIScrollView"16
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@16@24d32
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
@"SBSearchScrollView"
v24@0:8@"SBUserEventInterface"16
B24@0:8@"<SBIdleTimer>"16
@"<SBIdleTimerDelegate>"16@0:8
v24@0:8@"<SBIdleTimerDelegate>"16
@"SBUserEventInterface"
@"<SBIdleTimerDelegate>"
@"<SBBannerButtonViewControllerDelegate>"
B32@0:8@"SBRootFolder"16@"SBIcon"24
v48@0:8{CGSize=dd}16@32@40
B28@0:8q16B24
B36@0:8q16B24@?28
B32@0:8q16q24
B32@0:8q16d24
{UIEdgeInsets=dddd}24@0:8q16
@"_SBRootFolderDockAnimationViewControllerWindow"
@"NSNumber"
v24@0:8@"SBAssertion"16
v32@0:8@?16B24B28
B32@0:8@16^@24
v40@0:8@16@24i32B36
v36@0:8@16i24@?28
v40@0:8Q16Q24@?32
B28@0:8#16i24
B32@0:8#16i24B28
@24@0:8#16
v36@0:8i16@20@28
B28@0:8I16@20
@"UMUser"
@"SBAlertItemsObjectQueue"
@"NSMutableOrderedSet"
@"<SBAlertItemPresenter><SBLockScreenActionProvider>"
@"<SBAlertItemPresenter>"
q24@0:8^{__CFString=}16
v32@0:8^{__CFString=}16^{__CFDictionary=}24
@"SBSIMLockAlertItem"
@"SBSIMLockEntryAlert"
@"CRCarPlayAppDeclaration"
@32@0:8^{NSString=#}16@24
^{NSString=#}16@0:8
^{NSString=#}
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"NSString"48
v24@0:8@"<SBIdleTimer>"16
@"<SBDashBoardEventHandling>"
@"SBDashBoardIdleTimerFactory"
@"<SBIdleTimer>"
v32@0:8B16B20@?24
v32@0:8B16B20@?<v@?B>24
@"<SBWorkspaceAlertAnimationProviding>"
I20@0:8I16
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48Q56
@"SBWallpaperEffectView"
@"SBSlideUpAppGrabberView"
@"<SBSwitcherAppSuggestionBottomBannerViewDelegate>"
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
{CGPoint=dd}40@0:8{CGPoint=dd}16@"<UICoordinateSpace>"32
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"<UICoordinateSpace>"48
@64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24q56
@"<UICoordinateSpace>"
v24@0:8@"UIView<SBDashBoardWallpaperOverlay>"16
@"UIView<SBDashBoardWallpaperOverlay>"16@0:8
@"SBAlert<SBDashBoardViewControllerProtocol>"
@"SBLockToAppStatusBarAnimator"
@"SBIconAnimator"
@"SBWorkspaceTransitionRequest"
@"UIView<SBDashBoardWallpaperOverlay>"
@"UIPressesEvent"
@"NSSet"32@0:8@"BBBulletinRequestParameters"16@24
@32@0:8@"NSSet"16@24
@40@0:8@"NSDate"16@"NSDate"24@32
@24@0:8@"NSSet"16
@"BBSectionParameters"16@0:8
v40@0:8@"NSUUID"16@"NSString"24@?<v@?@"NSData">32
v48@0:8@"NSUUID"16@"NSString"24@"BBThumbnailSizeConstraints"32@?<v@?@"NSData">40
v40@0:8@"NSUUID"16@"NSString"24@?<v@?f>32
@"NSData"24@0:8@"NSString"16
@"NSData"32@0:8@"NSString"16@"BBThumbnailSizeConstraints"24
f24@0:8@16
f24@0:8@"NSString"16
B32@0:8@"BBSectionInfo"16@"BBSectionInfo"24
v24@0:8@"BBSectionInfo"16
v32@0:8@"NSString"16@"NSDictionary"24
v24@0:8@"BBActionResponse"16
v32@0:8@"BBActionResponse"16@?<v@?B>24
@40@0:8Q16Q24@32
@"NSSet"40@0:8Q16Q24@32
@48@0:8Q16@24Q32@40
@"NSSet"48@0:8Q16@"NSSet"24Q32@40
@"BBSectionInfo"16@0:8
@"BBSectionIcon"16@0:8
@"NSData"16@0:8
@"BBDataProviderProxy"
@36@0:8i16B20B24@28
v24@0:8@"SBViewControllerTransitionContext"16
@"SBTreeNodeViewController"32@0:8@"SBTreeNodeViewController"16@"<SBTreeNode>"24
v32@0:8@"SBTreeNodeViewController"16@"<SBTreeNode>"24
@"<SBTreeNode>"32@0:8@"SBTreeNodeViewController"16@"<SBTreeNode>"24
@68@0:8@16q24B32@36@44@52@60
@"<UIViewControllerAnimatedTransitioning>"68@0:8@"SBTreeNodeViewController"16q24B32@"SBTreeNodeViewController"36@"<SBTreeNode>"44@"SBTreeNodeViewController"52@"<SBTreeNode>"60
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"SBTreeNodeViewController"16@"<UIViewControllerAnimatedTransitioning>"24
v72@0:8@16q24@32@40@48@56@64
v72@0:8@"SBTreeNodeViewController"16q24@"SBTreeNodeViewController"32@"<SBTreeNode>"40@"SBTreeNodeViewController"48@"<SBTreeNode>"56@"<SBViewControllerTransitionCoordinator>"64
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8@16q24{CGSize=dd}32
{CGSize=dd}40@0:8@16{CGSize=dd}24
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8@16@24@32
B44@0:8@16@24@32B40
v76@0:8q16B24@28@36@44@52@?60@?68
@"<SBTreeNode>"
@"SBTreeNodeViewController"
@"SBViewControllerTransitionContext"
@"<SBTreeNodeViewControllerDelegate>"
v24@0:8^v16
^v16@0:8
^{__CFRunLoop=}16@0:8
@"NSRecursiveLock"
^{__CFRunLoop=}
@"SBFAuthenticationAssertion"
@"<SBStarkSessionConfiguring>"
@"FBSceneHostManager"
@"UIWindow"
q32@0:8@16q24
@"BBSectionInfo"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@"BSUIBackdropView"
@"_UIBackdropViewSettings"
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56
{CGSize=dd}32@0:8{CGSize=dd}16
@"SBOrientationTransformWrapperView"
@"SBFakeStatusBarView"
@"SBRemoteAlertAdapter"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@"NSSet"16@?<v@?@"NSDictionary">24
v24@0:8@"NSSet"16
v32@0:8@"NSString"16@"NSString"24
v40@0:8@16Q24@?32
@"NSXPCListener"
@"SBLockScreenPasscodeSettings"
@"SBLockScreenMesaSettings"
@"SBHorizontalScrollFailureRecognizerSettings"
@"SBDashBoardScrollModifierSettings"
@"SBAnimationSettings"
@"SBReducedMotionFadeSettings"
@"SBUnlockSettings"
@"SBCenterAppLaunchSettings"
@"SBCenterAppSuspendSettings"
@"SBCenterAcceleratedAppSuspendSettings"
@"SBCrossfadeAppLaunchSettings"
@"SBCrossfadeAppSuspendSettings"
@"SBCrossfadeAcceleratedAppSuspendSettings"
@"SBFolderOpenSettings"
@"SBFolderCloseSettings"
@"NSOrderedSet"
@48@0:8@16Q24@32@40
@"SBIconAnimationSettings"48@0:8@"SBHomeScreenIconTransitionAnimator"16Q24@"SBFolderController"32@"SBTreeNodeViewController"40
v52@0:8@16@24Q32B40@?44
v52@0:8@"BBObserver"16@"BBBulletin"24Q32B40@?<v@?B>44
v40@0:8@"BBObserver"16@"BBBulletin"24Q32
v32@0:8@"BBObserver"16@"BBBulletin"24
v32@0:8@"BBObserver"16q24
v32@0:8@"BBObserver"16@"NSArray"24
v32@0:8@"BBObserver"16@"BBSectionInfo"24
v32@0:8@"BBObserver"16@"NSString"24
v40@0:8@"BBObserver"16@"BBSectionParameters"24@"NSString"32
v32@0:8@"BBObserver"16Q24
v32@0:8@"BBObserver"16@"NSSet"24
v28@0:8@"BBObserver"16B24
v48@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32@?<v@?Q>40
B24@0:8@"BBObserver"16
@"BBThumbnailSizeConstraints"40@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32
@"BBThumbnailSizeConstraints"32@0:8@"BBObserver"16q24
v56@0:8@"BBObserver"16@"NSData"24@"BBAttachmentMetadata"32@"BBBulletin"40@?<v@?@"NSData">48
v56@0:8@"BBObserver"16@"NSData"24@"BBAttachmentMetadata"32@"BBBulletin"40@?<v@?@"UIImage">48
{CGSize=dd}56@0:8@16@24@32{CGSize=dd}40
{CGSize=dd}56@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32{CGSize=dd}40
@"UIImage"48@0:8@"BBObserver"16q24@"NSData"32@"NSString"40
{CGSize=dd}48@0:8@16q24f32f36@40
{CGSize=dd}48@0:8@"BBObserver"16q24f32f36@"NSString"40
v40@0:8@"SBApplicationRestrictionController"16@"NSSet"24@"NSSet"32
#24@0:8@16
#24@0:8@"SBFolder"16
B48@0:8@16{CGPoint=dd}24@40
B48@0:8@"SBFolderController"16{CGPoint=dd}24@"SBIconListView"40
B40@0:8@"SBFolderController"16@"SBIconListView"24@"SBIconListView"32
B32@0:8@"SBFolderController"16@"SBIconListView"24
v32@0:8@"SBFolderController"16@"SBIconListView"24
v32@0:8@"SBFolderController"16@"UIPinchGestureRecognizer"24
v24@0:8@"SBFolderController"16
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
@"UIView"32@0:8@"SBUIAppIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@"SBUIAppIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
@"NSString"32@0:8@"SBUIAppIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
@"NSURL"32@0:8@"SBUIAppIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
@"NSArray"32@0:8@"SBUIAppIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
{UIEdgeInsets=dddd}32@0:8@16@24
{UIEdgeInsets=dddd}32@0:8@"SBUIAppIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
d32@0:8@"SBUIAppIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
@"SBFParallaxSettings"32@0:8@"SBUIAppIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
{CGPoint=dd}32@0:8@"SBUIAppIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
B32@0:8@"SBUIAppIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
v32@0:8@"SBUIAppIconForceTouchController"16@"SBUIForceTouchGestureRecognizer"24
B48@0:8@16@24Q32@40
B48@0:8@"SBUIAppIconForceTouchController"16@"SBSApplicationShortcutItem"24Q32@"SBUIForceTouchGestureRecognizer"40
v32@0:8@"SBIconView"16@"_UIFeedbackImpactBehavior"24
v24@0:8@"SBIconView"16
v32@0:8@"SBIconView"16@"UITouch"24
v28@0:8@"SBIconView"16B24
B24@0:8@"SBIconView"16
B32@0:8@"SBIconView"16@"SBIconView"24
v36@0:8@"SBIconView"16@"SBFolder"24B32
Q24@0:8#16
B24@0:8@"UIWebClip"16
B24@0:8@"SBApplication"16
@"SBApplication"32@0:8@"SBIconModel"16@"NSString"24
@"NSDictionary"24@0:8@"SBIconModel"16
@"NSIndexPath"40@0:8@"SBIconModel"16@"SBIcon"24@"SBRootFolder"32
v32@0:8@"SBIconModel"16@"NSDictionary"24
B24@0:8@"SBIconModel"16
v24@0:8@"SBIconModel"16
@"NSArray"24@0:8@"SBIconViewMap"16
Q32@0:8@16#24
Q32@0:8@"SBIconViewMap"16#24
v32@0:8@"SBIconViewMap"16@"SBIconView"24
#28@0:8@16i24
#28@0:8@"SBIcon"16i24
i32@0:8@16@24
i32@0:8@"SBIconViewMap"16@"SBIcon"24
Q32@0:8@"SBReusableViewMap"16#24
@"SBWindow"24@0:8@"SBReusableViewMap"16
v32@0:8@"SBReusableViewMap"16@"UIView<SBReusableView>"24
@"NSDictionary"16@0:8
v40@0:8{CGSize=dd}16@32
v36@0:8@16B24B28B32
@44@0:8@16@24B32B36B40
v44@0:8@16@24B32@?36
@40@0:8@16@24B32B36
@48@0:8@16@24q32B40B44
@44@0:8@16@24q32B40
v36@0:8@16B24^@28
v36@0:8@16B24@28
v32@0:8d16B24B28
B32@0:8Q16B24B28
B24@0:8B16B20
#24@0:8#16
@"SBIconModel"
@"BBObserver"
@"SBRootFolderController"
@"SBFolder"
@"SBLeafIcon"
@"UITouch"
@"SBIconColorSettings"
@"NSIndexPath"
@"SBUIAppIconForceTouchController"
@"SBIconView"
@"SBHomeScreenIconTransitionAnimator"
@"BSEventQueue"
@"SBFolderStatsQueryableMetric"
@"SBIconVisibilityService"
@"SBIconPreviousLocationTracker"
{UIEdgeInsets=dddd}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@32@0:8d16@24
@"CNContact"
@"_UILegibilityView"
v32@0:8@"FBSceneMonitor"16@"FBScene"24
v40@0:8@"FBSceneMonitor"16@"FBSSceneSettingsDiff"24@"FBSSceneSettings"32
v32@0:8@"FBSceneMonitor"16@"NSSet"24
v40@0:8@"FBSceneMonitor"16@"FBSSceneClientSettingsDiff"24@"FBSSceneTransitionContext"32
v32@0:8@"FBSceneMonitor"16@"FBSceneUpdateContext"24
v44@0:8@"SBDisplayItem"16B24d28@"SBWorkspaceTransitionRequest"36
@56@0:8@16{CGSize=dd}24q40@48
@64@0:8@16{CGSize=dd}24q40@48@56
v40@0:8q16@24@?32
q48@0:8q16Q24@32@?40
v48@0:8q16Q24@32@?40
v72@0:8q16@24q32@40Q48@56@?64
v40@0:8{CGSize=dd}16q32
@"FBSceneMonitor"
@"UIApplicationSceneClientSettingsDiffInspector"
@"UIView<FBSceneHostView>"
@"UIView<SBAppViewBackgroundView>"
@"SBSceneViewAppIconView"
@"SBAppViewStatusBarDescriptor"
@"SBUILegibilityLabel"
@"SBFLockScreenAlternateDateLabel"
@40@0:8@16^B24^@32
@48@0:8@16@24^B32^@40
@"SBRootFolder"
@"<SBIconModelStore>"
@"<SBIconModelApplicationDataSource>"
@"<SBIconModelDelegate>"
v28@0:8@"SBUIAnimationController"16B24
v24@0:8@"SBUIAnimationController"16
v24@0:8@"SBSceneLayoutWorkspaceTransaction"16
v32@0:8@"SBSceneLayoutWorkspaceTransaction"16@?<v@?>24
v32@0:8@"SBSceneLayoutWorkspaceTransaction"16@?<v@?@"SBWorkspaceApplicationTransitionContext"Q>24
B24@0:8@"SBSceneLayoutWorkspaceTransaction"16
v28@0:8B16B20B24
@"<SBSwitchAppSwipeTransactionDelegate>"
@"SBUISwitchAppSwipeAnimationController"
@"SBSceneLayoutWorkspaceTransaction"
@"SBAutoPiPWorkspaceTransaction"
@"SBCombinationHardwareButtonActions"
@"SBScreenshotGestureRecognizer"
@"<SBLockScreenTimerViewControllerDelegate>"
@"UIPinchGestureRecognizer"
v52@0:8d16@24d32B40@?44
d24@0:8d16
{CGPoint=dd}24@0:8d16
@"SBReversibleLayerPropertyAnimator"
v48@0:8@16@24@32Q40
@40@0:8@16@24Q32
B40@0:8@16@24Q32
@32@0:8Q16@24
v32@0:8@?16@24
@"BSSerializedRequestQueue"
{?="isRePushingUpdates"b1}
v40@0:8@16q24@32
@"<SBApplicationServerCarPlayDelegate>"
@"<SBApplicationServerHarmonyDelegate>"
@"<SBApplicationServerRemovabilityDelegate>"
@"<SBApplicationServerShortcutDelegate>"
@28@0:8B16B20B24
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v32@0:8@"MPAVRoutingController"16@"NSError"24
@"MPAVRoutingController"
v64@0:8@"NCNotificationDispatcher"16@"NCNotificationAction"24@"<NCNotificationDestination>"32@"NCNotificationRequest"40@"NSDictionary"48@?<v@?B>56
v56@0:8@"NCNotificationDispatcher"16@"NCNotificationAction"24@"NCNotificationRequest"32@"NSDictionary"40@?<v@?B>48
v40@0:8@"NCNotificationDispatcher"16@"NCNotificationAction"24@"NCNotificationRequest"32
v56@0:8@"NCNotificationDispatcher"16@"NCNotificationAction"24@"NCNotificationRequest"32@"NSString"40@"NSDictionary"48
@"SBNotificationBannerDestination"
v24@0:8@"SBIconAnimator"16
@48@0:8@16@24@32Q40
@"SBIconAnimationSettings"
@"SBFolderController"
@"<SBHomeScreenIconTransitionAnimatorDelegate>"
@"SBBookmark"
v32@0:8B16B20@24
v32@0:8B16B20@"SBWorkspaceTransitionRequest"24
v48@0:8{?=dddd}16
@"SBDisplayItem"16@0:8
v28@0:8B16@?<v@?B>20
v32@0:8@"SBWorkspaceTransitionRequest"16@?<v@?>24
v40@0:8@"SBDisplayItem"16@"SBWorkspaceTransitionRequest"24@?<v@?>32
v40@0:8@"SBDisplayItem"16Q24@?<v@?B@"SBDisplayItem"@"SBDisplayItem">32
v40@0:8@16q24@?32
v40@0:8@"SBDisplayItem"16q24@?<v@?B@"SBDisplayItem"@"SBDisplayItem">32
v40@0:8@"SBDisplayItem"16@"SBDisplayItem"24@?<v@?B@"SBDisplayItem"@"SBDisplayItem">32
v24@0:8@"SBDisplayItem"16
@"SBMainDisplayLayoutState"16@0:8
v24@0:8@"SBMainDisplayLayoutState"16
@"<SBMainAppSwitcherContentViewControllerDelegate>"16@0:8
v24@0:8@"<SBMainAppSwitcherContentViewControllerDelegate>"16
@"SBBestAppSuggestion"16@0:8
v24@0:8@"SBBestAppSuggestion"16
@"<SBMainAppSwitcherContentViewControllerDelegate>"
@"SBAppView"
@"SBMainDisplayLayoutState"
@32@0:8q16d24
@40@0:8@16@24@?32
@"SBAwayViewPluginController"16@0:8
v24@0:8@"SBLockScreenPluginContext"16
v24@0:8@"SBLockScreenPluginPresentation"16
@"<SBLockScreenPluginAgent>"16@0:8
v24@0:8@"<SBLockScreenPluginAgent>"16
@"UIViewController<SBLockScreenPluginViewController>"16@0:8
@"<SBLockScreenPluginAppearance>"16@0:8
@"SBLockScreenPluginAction"16@0:8
v24@0:8@"<SBLockScreenPluginController>"16
v32@0:8@"<SBLockScreenPluginController>"16@"<SBLockScreenPluginAppearance>"24
B32@0:8@"<SBLockScreenPluginController>"16@"SBLockScreenPluginAction"24
@"BSPluginBundle"
@"FBProcess"
@"<SBLockScreenPluginController>"
@"<SBLockScreenPluginAgent>"
@"SBLockScreenPluginAppearanceContext"
@"SBLockOverlayContext"
@"<SBLockScreenPluginDelegate>"
@"<SBDashBoardLegibilityProviderDelegate>"
@"SBWallpaperController"
@"NSObject<OS_dispatch_semaphore>"
v24@0:8@"SBLiftToWakeController"16
v32@0:8@"SBLiftToWakeController"16q24
#20@0:8B16
@"<SBDashBoardMesaUnlockBehaviorConfigurationDelegate>"
@"SBLiftToWakeController"
v40@0:8@16Q24d32
v36@0:8@16Q24B32
@"NSLock"
@"SBFObliterationController"
@"PKPassLibrary"
^{?=f^{__CFArray}f}
@"SBApplicationPlaceholder"
@"NSArray"24@0:8@"SBLogoutProgressAlertViewController"16
@"NSDictionary"24@0:8@"SBLogoutProgressAlertViewController"16
v24@0:8@"SBAlert"16
v24@0:8@"UMUser"16
v24@0:8@"NSDictionary"16
{CGPoint=dd}24@0:8q16
@"UMUserManager"
@"SBMainDisplayPolicyAggregator"
@"SBLogoutProgressAlertViewController"
@"UMUserSwitchBlockingTask"
v32@0:8@"NSDate"16@"NSTimeZone"24
@"<SBDateLabelDelegate>"16@0:8
v24@0:8@"<SBDateLabelDelegate>"16
@28@0:8@16I24
d48@0:8d16{CGSize=dd}24q40
v24@0:8@"<NCNotificationDateLabel>"16
@"UILabel<NCNotificationDateLabel>"
@"UIViewController"
@"BKSDisplayRenderOverlayDescriptor"
@"CRVehicleInformation"
@"AVExternalDevice"
@"UITraitCollection"
@"CRCarPlayAppPolicyEvaluator"
v28@0:8@"SBAlertItem"16B24
@"SBSharedModalAlertItemPresenter"
@"SBApplication"24@0:8@"NSString"16
v40@0:8@"FBUIApplicationService"16@24@"NSString"32
v40@0:8@"FBUIApplicationService"16@"NSString"24@?<v@?@>32
v32@0:8@"FBUIApplicationService"16@"NSString"24
v40@0:8@"FBUIApplicationService"16@"NSDate"24@"NSString"32
v40@0:8@"FBApplicationTerminationAssertionService"16@"FBApplicationTerminationAssertion"24@?<v@?@"NSError">32
v32@0:8@"FBApplicationTerminationAssertionService"16@"FBApplicationTerminationAssertion"24
@"BKSApplicationStateMonitor"
@"SBApplicationRestrictionController"
@"SBApplicationLibraryObserver"
@"FBApplicationLibrary"
@"SBReverseCountedSemaphore"
v24@0:8@"NSError"16
@"SecureBackup"
@"SBSceneManagerCoordinator"
@"_SBScreenshotPersistenceCoordinator"
@"<SBScreenshotManagerDataSource>"
@28@0:8i16i20i24
v32@0:8i16@20i28
@"SBPasscodeAlertItem"
@"SBPasscodeComplianceAlertItem"
v24@0:8@"FBSceneHostManager"16
v32@0:8@"FBSceneHostManager"16@"NSString"24
v56@0:8@"_SBMultiplexedHostView"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIViewController<SBMultiplexedHostingObserver>"16@"NSString"24
@"UIView"24@0:8@"NSString"16
v28@0:8B16@"NSString"20
v32@0:8@"UIWindow"16@"NSString"24
B24@0:8@"NSString"16
v48@0:8{CGSize=dd}16@"<UIViewControllerTransitionCoordinator>"32@"NSString"40
@"UIPresentationController"16@0:8
I24@0:8@16
@"SBIsolationTankWindow"
@"UIScrollView"
@"BKSTouchDeliveryPolicyAssertion"
@"SBTestStarkAlert"
@"SBApplicationIcon"
@"SBStartupTransitionContext"16@0:8
@"SBStartupTransitionContext"
@"SBMainWorkspace"
@"SBLockScreenBatteryChargingView"
@"<SBLockScreenBatteryChargingViewControllerDelegate>"
@"FBApplicationUpdateScenesTransaction"
v40@0:8@"WGWidgetDiscoveryController"16@"NSString"24@"NSURL"32
B24@0:8@"WGWidgetDiscoveryController"16
@"UIViewController"32@0:8@"WGWidgetDiscoveryController"16@"UIViewController"24
B32@0:8@"WGWidgetDiscoveryController"16@"NSString"24
@24@0:8@"WGWidgetDiscoveryController"16
v32@0:8@"WGWidgetDiscoveryController"16@24
v32@0:8@"WGWidgetDiscoveryController"16@?<v@?B>24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?B>32
@"WGWidgetDiscoveryController"
v40@0:8@16@24^v32
@"<SBUIPasscodeLockView>"
@"SBLockScreenView"
v40@0:8{CGPoint=dd}16@?<v@?>32
v48@0:8{CGPoint=dd}16{CGPoint=dd}32
v44@0:8{CGPoint=dd}16B32@?<v@?B>36
v24@0:8@"UIGestureRecognizer"16
@"<SBPresentingDelegate>"16@0:8
v24@0:8@"<SBPresentingDelegate>"16
B40@0:8@"<SBCoordinatedPresenting>"16@"UIGestureRecognizer"24@"UITouch"32
B32@0:8@"<SBCoordinatedPresenting>"16@"UIGestureRecognizer"24
v32@0:8@"<SBCoordinatedPresenting>"16@"UIGestureRecognizer"24
v24@0:8@"<SBCoordinatedPresenting>"16
v40@0:8@16d24@?32
v36@0:8B16^@20@28
v40@0:8B16@20@28B36
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56
v32@0:8d16@24
v36@0:8@16B24d28
v28@0:8q16B24
v36@0:8q16B24@?28
@"SBLockOverlayStylePropertiesFactory"
@"SBLockScreenScrollView"
@"SBFLockScreenDateView"
@"UIView<SBUILegibility>"
@"SBLockScreenTimerView"
@"_UIGlintyStringView<_SBFVibrantView>"
@"SBUIChevronView"
@"SBUIVibrantButton"
@"SBLockScreenDeviceInformationTextView"
@"SBLockScreenViewRequesterTracker"
@"SBLockScreenBounceAnimator"
@"SBDisableAppStatusBarAlphaChangesAssertion"
@"<SBPresentingDelegate>"
@"SBIrisWallpaperSettings"
@"UIGestureRecognizer"
@"<SBLockScreenViewDelegate>"
v36@0:8I16@20@28
@"<SBProxyRemoteViewDelegate>"
v32@0:8@"<SBDashBoardViewTransitionSource>"16q24
v72@0:8@16{?=d{?={?=dB}{?=dB}}q}24
v72@0:8@"<SBDashBoardViewTransitionSource>"16{?=d{?={?=dB}{?=dB}}q}24
v24@0:8@"SBDashBoardLegibilityProvider"16
@"SBLockScreenActionContext"16@0:8
v32@0:8@"SBLockScreenPluginManager"16@"SBLockScreenPlugin"24
v40@0:8@"SBLockScreenPluginManager"16@"SBLockScreenPlugin"24@"SBLockScreenPlugin"32
B40@0:8@"SBLockScreenPluginManager"16@"SBLockScreenPlugin"24@"SBLockScreenPluginAction"32
v24@0:8@"<SBFIrisWallpaperView>"16
v40@0:8@"<SBFIrisWallpaperView>"16@"UIGestureRecognizer"24@"UIGestureRecognizer"32
B24@0:8@"SBDashBoardSlideUpToAppController"16
v32@0:8@"SBDashBoardSlideUpToAppController"16@"NSString"24
v32@0:8@"SBDashBoardSlideUpToAppController"16@?<v@?B>24
v28@0:8@"SBDashBoardSlideUpToAppController"16B24
@"SBSlideUpAppGrabberView"24@0:8@"SBDashBoardSlideUpToAppController"16
v32@0:8@"NCNotificationRequest"16@"NCCoalescedNotification"24
v24@0:8@"NCNotificationSectionSettings"16
@"<SBDashBoardNotificationDispatcher>"16@0:8
v24@0:8@"<SBDashBoardNotificationDispatcher>"16
v24@0:8@"SBLockScreenTimerViewController"16
v24@0:8@"SBDashBoardMesaUnlockBehaviorConfiguration"16
B32@0:8@"<SBMesaUnlockBehavior>"16@"SBAuthenticationFeedback"24
B40@0:8@"<SBMesaUnlockBehavior>"16@"SBLockScreenUnlockRequest"24@"SBAuthenticationFeedback"32
B32@0:8@"SBDashBoardScrollGestureController"16@"UIGestureRecognizer"24
v24@0:8@"SBDashBoardScrollGestureController"16
v36@0:8@"SBSearchEtceteraMultiplexingViewController"16Q24B32
B32@0:8@16Q24
B32@0:8@"SBSearchEtceteraMultiplexingViewController"16Q24
v32@0:8@"SBSearchEtceteraMultiplexingViewController"16Q24
v68@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56B64
B40@0:8{CGPoint=dd}16@32
v44@0:8@16q24B32@?36
v36@0:8Q16B24@?28
v48@0:8@16@24@?32@?40
d56@0:8{?={?=dB}{?=dB}}16@48
{CGPoint=dd}56@0:8{CGPoint=dd}16{CGPoint=dd}32@48
d32@0:8B16B20@24
B28@0:8B16@?20
@"SBLockScreenPluginManager"
@"SBSteppedAnimationTimingFunctionCalculator"
@"SBDashBoardPluginViewController"
@"SBDashBoardNotificationDispatcher"
{?="value"d"interval"{?="start"{?="value"d"inclusive"B}"end"{?="value"d"inclusive"B}}"mode"q}
@"SBDashBoardHomeButtonShowPasscodeRecognizer"
@"SBDashBoardModalPresentationViewController"
@"SBDashBoardSlidingPresentationViewController"
@"SBDashBoardSlideUpToAppController"
@"SBDashBoardChargingViewController"
@"SBDashBoardMesaUnlockBehaviorConfiguration"
@"SBDashBoardMesaUnlockBehavior"
@"SBDashBoardIdleTimerEventPublisher"
@"SBDashBoardBlockEventHandler"
@"SBDashBoardScrollGestureController"
@"<SBDashBoardViewControllerDelegate>"
@"SBDashBoardAppearance"
@"SBDashBoardBehavior"
@"<SBDashBoardNotificationDispatcher>"
@"SBMainStatusBarStateProvider"
@"<SBFIrisWallpaperView>"
@"<SBWallpaperColorProvider>"
@"SBDashBoardMainPageViewController"
@"SBDashBoardPresentation"
@"SBLockScreenDateViewController"
@"SBDashBoardPowerChangeObserver"
@"SBLockScreenTimerViewController"
@"SBDashBoardLegibilityProvider"
@"SBLockScreenActionManager"
@"SBWallpaperAggdLogger"
@"<SBDashBoardViewTransitionSource>"
@"SBDashBoardSetupViewController"
v24@0:8@"SBSUICarDisplayNowPlayingStateContext"16
@"<SBStarkNowPlayingServiceDelegate>"
v56@0:8@16@24Q32@40@?48
v56@0:8@"SBApplicationServer"16@"<FBSystemServiceClient>"24Q32@"NSString"40@?<v@?@"SBSApplicationShortcutServiceFetchResult">48
v48@0:8@"SBApplicationServer"16@"<FBSystemServiceClient>"24@"NSArray"32@"NSString"40
@"SBProxyRemoteView"
v56@0:8I16@20B28{CGSize=dd}32@48
v32@0:8@"NCNotificationRequest"16@"NSSet"24
v24@0:8@"NCNotificationRequest"16
@"SBNCSoundController"
@"SBNCScreenController"
@"SBLockScreenManager"
@"SBNotificationCenterController"
@"NCNotificationRequest"
B40@0:8@16@24B32B36
v28@0:8q16f24
v32@0:8@"SBCommandTabViewController"16@"SBDisplayItem"24
v24@0:8@"SBCommandTabViewController"16
@"SBCommandTabViewController"
@"FBUIApplicationSceneDeactivationAssertion"
v32@0:8@"FBDisplayManager"16@"FBSDisplay"24
@"NSSet"32@0:8@"SBWorkspace"16@"SBWorkspaceTransitionRequest"24
v32@0:8@"CMPocketStateManager"16q24
@"SBBacklightController"
@"SBLockStateAggregator"
@"SBQuietModeStateAggregator"
@"CMPocketStateManager"
v32@0:8@"SBStarkNowPlayingService"16@"NSError"24
v32@0:8@?16d24
@"_UIAsyncInvocation"
@"SBStarkNowPlayingService"
@"SBSUICarDisplayNowPlayingStateContext"
@"SBFDeviceBlockTimer"
@"<SBBannerGestureHandlerDelegate>"
@"SBBannerContainerViewController"
@"SBBannerController"
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@16@24q32
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@16@24q32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@16q24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@16:24@32@40
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@16:24@32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
@"SBUIFullscreenAlertAdapter"
v24@0:8i16B20
@"SBNotificationSeparatorView"
@"SBBBSectionInfo"
@"NSTimeZone"
@"UIView<SBUIBannerView>"
@"<SBUIBannerSource>"
v36@0:8@16B24q28
@28@0:8B16q20
@"<SBIconListPageControlDelegate>"
@"SBIconPageIndicatorImageSetResult"
@"SBIconPageIndicatorImageSetCache"
@"FBWindowContextHostManager"
@"_SBUIStarkStartupToAppAnimation"
@"SBStarkScreenController"
@"<FBSynchronizedTransactionDelegate>"16@0:8
v24@0:8@"<FBSynchronizedTransactionDelegate>"16
v24@0:8@"BSTransaction<FBSynchronizedTransaction>"16
v32@0:8@"BSTransaction<FBSynchronizedTransaction>"16@"NSArray"24
v24@0:8@"SBFAuthenticationRequest"16
v32@0:8@"SBFAuthenticationRequest"16@"NSError"24
@"_UIDynamicValueAnimation"
@"SBLockScreenSlideUpToAppWorkspaceTransaction"
@"SBLockScreenActionContext"
@"<SBLockScreenSlideUpToAppControllerDelegate>"
@60@0:8@16q24d32@40@48i56
v52@0:8d16@24@32@40i48
@"SBStarkScreenFocusAssertion"
@24@0:8^Q16
@"SBLayoutElement"
@"SBLayoutElementAdornmentView"
q24@0:8@"SBDeckSwitcherPageViewProvider"16
@"SBDisplayItem"24@0:8@"SBDeckSwitcherPageViewProvider"16
@"SBMainDisplayLayoutState"24@0:8@"SBDeckSwitcherPageViewProvider"16
{CGSize=dd}32@0:8@16@24
{CGSize=dd}32@0:8@"SBDisplayItem"16@"SBDeckSwitcherPageViewProvider"24
@"UIViewController"24@0:8@"SBDeckSwitcherPageViewProvider"16
v32@0:8@"SBSwitcherAppSuggestionViewController"16@"SBBestAppSuggestion"24
q24@0:8@"SBSwitcherAppSuggestionViewController"16
B24@0:8@"SBDeckSwitcherItemContainer"16
v32@0:8@"SBDeckSwitcherItemContainer"16d24
B32@0:8@"SBDeckSwitcherItemContainer"16q24
v24@0:8@"SBDeckSwitcherItemContainer"16
{CGRect={CGPoint=dd}{CGSize=dd}}28@0:8@16B24
{CGRect={CGPoint=dd}{CGSize=dd}}28@0:8@"SBDeckSwitcherItemContainer"16B24
v32@0:8d16@"SBDeckSwitcherItemContainer"24
d24@0:8@"SBDeckSwitcherItemContainer"16
Q20@0:8B16
q32@0:8{CGPoint=dd}16
v48@0:8@16Q24Q32d40
{?=QQd}24@0:8@16
v52@0:8Q16^Q24^Q32^Q40B48
v40@0:8^@16^Q24@32
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8Q16
{CGRect={CGPoint=dd}{CGSize=dd}}64@0:8Q16{CGRect={CGPoint=dd}{CGSize=dd}}24d56
d44@0:8Q16Q24d32B40
d76@0:8Q16Q24{?=dddd}32d64B72
{CGRect={CGPoint=dd}{CGSize=dd}}84@0:8Q16Q24{?=dddd}32d64B72B76B80
d52@0:8Q16Q24d32d40B48
{CGAffineTransform=dddddd}24@0:8Q16
d40@0:8Q16d24d32
{CGAffineTransform=dddddd}40@0:8Q16d24d32
{CGSize=dd}24@0:8Q16
v36@0:8d16B24@?28
{CGSize=dd}32@0:8@16d24
B32@0:8q16@24
d32@0:8Q16d24
{_NSRange=QQ}16@0:8
{CGPoint=dd}88@0:8@16{CGPoint=dd}24{CGPoint=dd}40{CGPoint=dd}56{CGPoint=dd}72
{CGPoint=dd}104@0:8@16{CGPoint=dd}24{CGPoint=dd}40{CGPoint=dd}56{CGPoint=dd}72^d88^d96
{CGPoint=dd}88@0:8q16{CGPoint=dd}24{CGPoint=dd}40{CGPoint=dd}56{CGPoint=dd}72
@"SBAppSwitcherScrollView"
{_NSRange="location"Q"length"Q}
@"SBSwitcherAppSuggestionViewController"
@"SBDeckSwitcherPageViewProvider"
{?="progress"d"cornerRadiusProgress"d"initialItemTranslation"d"dimming"d}
v64@0:8@16{?=q{CGPoint=dd}{CGPoint=dd}}24
v64@0:8@"UIScrollView"16{?=q{CGPoint=dd}{CGPoint=dd}}24
B36@0:8Q16B24@?28
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8d16
{CGPoint=dd}104@0:8@16{CGPoint=dd}24{CGPoint=dd}40{CGPoint=dd}56{CGPoint=dd}72N^d88N^d96
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8q16d24^d32
{?=d{?={?=dB}{?=dB}}q}112@0:8{?=d{?={?=dB}{?=dB}}q}16{?=d{?={?=dB}{?=dB}}q}64
@"SBPagedScrollView"
@"SBDashBoardScrollModifier"
@"<SBDashBoardViewDelegate>"
@"SBDashBoardPageControl"
@"SBDashBoardWallpaperEffectView"
@"SBDashBoardRegionsDebugView"
v28@0:8@"SBThermalWarningAlertItem"16i24
@"NCNotificationViewController"
@88@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56@64@72@80
@"UITapGestureRecognizer"
v24@0:8f16B20
^{BKSDisplayBrightnessTransaction=}
@"SBHUDView"
v24@0:8@"SBSwitcherAppSuggestionBottomBannerView"16
q24@0:8@"SBAppSwitcherPageView"16
{CGAffineTransform=dddddd}24@0:8@16
{CGAffineTransform=dddddd}24@0:8@"SBAppSwitcherPageView"16
{CGSize=dd}24@0:8@"SBAppSwitcherPageView"16
@40@0:8d16d24d32
@"SBSwitcherAppSuggestionBottomBannerView"
@"SBDeckSwitcherPageView"
@"<SBSwitcherAppSuggestionViewControllerDelegate>"
@32@0:8@16B24B28
v52@0:8@16d24d32@40B48
v56@0:8@16d24d32@40B48B52
v76@0:8@16@24@32@40d48d56@64B72
@"SBMainDisplaySceneLayoutViewController"
B24@0:8^@16
@"SBHardwareButtonActionList"
@"SBHardwareButtonService"
@"<SBNotificationDestinationHomeButtonPressHandler>"
@"NSDate"16@0:8
@"BBAccessoryIcon"16@0:8
@"SBAwayListItem"
@"<SBLockScreenActionHandler>"
@"<SBLockScreenNotificationBannerItemDelegate>"
@"<FBSystemServiceClient>"
v32@0:8@"SBSystemServiceServer"16@"<FBSystemServiceClient>"24
v56@0:8@16@24q32@40@?48
v56@0:8@"SBSystemServiceServer"16@"<FBSystemServiceClient>"24q32@"NSString"40@?<v@?@"BSAction">48
v56@0:8@16@24Q32q40q48
v56@0:8@"SBSystemServiceServer"16@"<FBSystemServiceClient>"24Q32q40q48
v48@0:8@16@24q32q40
v48@0:8@"SBSystemServiceServer"16@"<FBSystemServiceClient>"24q32q40
v48@0:8@16@24q32@?40
v48@0:8@"SBSystemServiceServer"16@"<FBSystemServiceClient>"24q32@?<v@?q>40
B40@0:8q16q24@32
v48@0:8@16q24Q32q40
@"<SBAlertChangeTransactionDelegate>"
@"NSEnumerator"
@"SBInitialRestartState"
@"SBStartupTransitionContextPersistence"
@"SBStartupTransitionFactory"
@"BSTransaction<SBStartupTransition>"
@"BSTransactionBlockObserver"
@64@0:8@16@24d32Q40Q48@56
@"FBApplicationInfo"
v32@0:8@"SBFolder"16@"SBIconListModel"24
v40@0:8@"SBFolder"16@"NSArray"24@"NSIndexSet"32
v24@0:8@"SBIcon"16
v32@0:8@"<SBIconIndexNode>"16@"NSSet"24
v28@0:8i16@20
Q24@0:8Q16
@"<SBTreeNode>"16@0:8
@"NSMutableSet"16@0:8
@"NSMutableSet"32@0:8@16@"NSIndexPath"24
@"NSMutableArray"32@0:8@"NSIndexPath"16Q24
v24@0:8@"<SBIconIndexNodeObserver>"16
v32@0:8@"SBIconIndexMutableList"16@"NSSet"24
v32@0:8@"SBIconListModel"16@"SBIcon"24
v40@0:8@"SBIconListModel"16@"SBIcon"24@"SBIcon"32
@32@0:8Q16Q24
@32@0:8@16^@24
@40@0:8@16Q24Q32
@"SBIconIndexMutableList"
@"SBFolderIcon"
@"<SBDeckSwitcherItemContainerDelegate>"
@"SBDeckSwitcherIconImageContainerView"
@"UILongPressGestureRecognizer"
@"SBStarkLockOutView"
v24@0:8#16
i20@0:8i16
@"<SBLeafIconDataSource>"
@"<SBRootFolderDelegate>"
v28@0:8B16d20
@"UISwipeGestureRecognizer"
@"<SBLayoutElementContainerViewDelegate>"
@"SBDashBoardUserPictureView"
@"SBScreenFlash"16@0:8
@"SBScreenFlash"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@32@0:8@16^Q24
v24@0:8:16
v52@0:8^@16^@24^@32@40B48
@36@0:8Q16@24B32
v40@0:8@16B24B28@?32
v48@0:8@16@24B32B36@?40
Q32@0:8@16q24
v36@0:8@?16@24B32
^{MGNotificationTokenStruct=}
@"TUCallCenter"
@24@0:8@"_UILegibilitySettings"16
v32@0:8@"_UILegibilitySettings"16@"SBIconLabelImageParameters"24
@"SBIconLabelImageParameters"
v24@0:8@"<SBFLegibilitySettingsProvider>"16
v24@0:8@"SBFWallpaperView"16
v32@0:8@"SBFWallpaperView"16d24
v40@0:8q16d24q32
v32@0:8@"SBFWallpaperConfigurationManager"16q24
B32@0:8@"SBFWallpaperConfigurationManager"16q24
v40@0:8@"SBWallpaperServer"16q24@?<v@?@"NSData">32
v48@0:8q16@24@32@?40
B48@0:8q16q24q32@40
B64@0:8{?=qqd}16q40q48@56
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48d56
d56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
d72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^d48^d56q64
v36@0:8B16q20@28
Q36@0:8q16B24Q28
@44@0:8@16q24B32Q36
B36@0:8B16@20@28
v40@0:8q16@24@32
v40@0:8q16Q24@?32
v32@0:8q16Q24
@48@0:8q16{?=qqd}24
B40@0:8{?=qqd}16
B56@0:8q16^{?=qqd}24^{?=qqd}32^@40^@48
@40@0:8q16q24Q32
@72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48q56N^q64
v36@0:8q16q24B32
v40@0:8q16q24d32
@"SBFWallpaperView"
@"SBWallpaperPreviewSnapshotCache"
@"SBWallpaperControllerCoordinator"
@"SBFFileCache"
@"SBFWallpaperConfigurationManager"
@"SBComposedWallpaperSpecification"
@"SBWallpaperStyleInfo"
@32@0:8N^q16@24
@"<_SBFakeBlurObserver>"16@0:8
v24@0:8@"<_SBFakeBlurObserver>"16
v36@0:8@16q24B32
@"<_SBFakeBlurObserver>"
{?=B{?=qqd}}24@0:8q16
v56@0:8{?=B{?=qqd}}16q48
[14{?="valid"B"styleTransitionState"{?="startStyle"q"endStyle"q"transitionFraction"d}}]
B24@0:8@"SBModeViewController"16
q40@0:8@16@24@32
q40@0:8@"SBNCTableViewController"16@"SBRowInfo"24@"SBSectionInfo"32
B40@0:8@"SBNCTableViewController"16@"SBRowInfo"24@"SBSectionInfo"32
B48@0:8@"SBNCTableViewController"16@"BBAction"24@"SBRowInfo"32@"SBSectionInfo"40
q24@0:8@"SBNCTableViewController"16
v40@0:8@16{CGSize=dd}24
v40@0:8@"SBUISizeObservingView"16{CGSize=dd}24
@"SBNCTableViewController"
@"_UIContentUnavailableView"
{?="scrollsToTop"b1"isLayoutValid"b1}
@"<SBBulletinActionHandler>"
@24@0:8@"NCNotificationDispatcher"16
@"NCNotificationDispatcher"
@"SBSystemGestureManager"
@"UIHBClickGestureRecognizer"
@"UIHBLongClickGestureRecognizer"
@"SBHomeHardwareButtonActions"
@"SBHomeHardwareButtonGestureRecognizerConfiguration"
@"BKSButtonDefinition"
@"SBDismissOverlaysAnimationController"
@"SBAppSwitcherDefaults"
@"SBIconController"
@"SBApplicationController"
^{NSNumber=#}
@?20@0:8i16
v44@0:8i16d20d28@?36
@"SBLayoutState"16@0:8
@"SBLayoutState"
@"<SBWorkspaceTransitionLayoutDelegate>"
@"SBFolderSettings"
v32@0:8@"CMWakeGestureManager"16q24
@"CMWakeGestureManager"
@"SBIdleTimerDefaults"
^{__CFRunLoopObserver=}
@"_UILegibilityLabel"
@"SBUILegibilityView"
@"SBUICallToActionLabel"
@"CALayer"
@"NSMutableIndexSet"
@56@0:8q16{CGRect={CGPoint=dd}{CGSize=dd}}24
v24@0:8@"SBLayoutElementViewController"16
B40@0:8{CGPoint=dd}16@"SBLayoutElementViewController"32
v32@0:8@"SBLayoutElementViewController"16@"SBSDisplayLayoutElement"24
{CGSize=dd}32@0:8q16@24
@"<SBSceneLayoutViewControllerDelegate>"
@"SBWorkspaceTransitionContext"
@"SBSceneLayoutElementAnimationWrapperView"
@"<NSCopying><NSObject>"16@0:8
@"SBIconModel"16@0:8
v24@0:8@"SBFolder"16
@"SBFolder"16@0:8
@40@0:8@16B24B28@32
#32@0:8@16@24
v24@0:8@"SBDashBoardStatusTextViewController"16
v32@0:8@"SBLockScreenNowPlayingController"16q24
v28@0:8@"SBDashBoardNotificationListViewController"16B24
@"SBDashBoardNowPlayingController"
@"SBDashBoardUserPictureViewController"
@"SBDashBoardNotificationListViewController"
@"SBLockScreenLogoutButtonViewController"
@"NSArray"24@0:8@"SBScreenshotManager"16
@"BSTransaction<SBUIAnimationControllerCoordinating>"
@"<SBUIAnimationControllerTransitionContextProvider>"
@"BSBlockTransaction"
v48@0:8@"SBApplicationServer"16@"<FBSystemServiceClient>"24@"NSString"32@?<v@?@"NSDictionary">40
v56@0:8@"SBApplicationServer"16@"<FBSystemServiceClient>"24@"NSArray"32@"NSArray"40@"NSString"48
v40@0:8@"SBApplicationServer"16@"<FBSystemServiceClient>"24@"NSString"32
v56@0:8@"SBApplicationServer"16@"<FBSystemServiceClient>"24@"NSString"32@"NSString"40@?<v@?@"NSString"@"UIImage">48
@"SBCarPlayIconImageCache"
@"SBIconGridImage"
@"_SBFolderPageElement"
v48@0:8@16@24Q32@40
v48@0:8@"SBFolderIcon"16@"SBIconGridImage"24Q32@"SBIcon"40
v24@0:8@"SBIconBlurryBackgroundView"16
v60@0:8B16B20Q24Q32@40@48B56
@"SBFolderIconBackgroundView"
@"_SBIconGridWrapperView"
@"SBFloatyFolderView"
B32@0:8i16i20^d24
v32@0:8i16i20d24
B32@0:8i16i20@24
B24@0:8^q16
B24@0:8^d16
@"SBUIPluginHost"
v36@0:8B16@?20@?28
v40@0:8@16B24B28B32B36
v36@0:8@16B24i28B32
@32@0:8@16i24B28
@56@0:8@16@24i32B36@40@?48
i24@0:8@"NSString"16
B32@0:8@16B24B28
B32@0:8@"NSURL"16B24B28
B36@0:8i16@20@28
B36@0:8i16@"NSURL"20@"NSString"28
B36@0:8i16@"NSString"20@"NSDictionary"28
B36@0:8i16@"NSURL"20@"NSDictionary"28
B40@0:8i16@20@28B36
B40@0:8i16@"NSURL"20@"NSString"28B36
B32@0:8@"NSURL"16@"NSString"24
B40@0:8@"NSURL"16@"NSString"24B32B36
v40@0:8d16@24d32
v40@0:8d16@"SBAwayViewPluginController"24d32
v24@0:8@"SBAwayViewPluginController"16
v32@0:8@16@"NSString"24
@"<SBBulletinAlertHandlerRegistry>"16@0:8
v24@0:8@"SBAlertItem"16
v24@0:8@"<SBUIActiveOrientationObserver>"16
v48@0:8@"NSString"16@"NSDictionary"24@?<v@?B>32@?<v@?B>40
B32@0:8@"NSString"16@"NSString"24
v28@0:8B16@"SBUIFullscreenAlertController"20
@40@0:8@16@24#32
B48@0:8@16@24i32B36@40
B44@0:8i16@20@28B36B40
@"SBBulletinAlertHandlerRegistry"
{CGPoint=dd}32@0:8Q16@24
@32@0:8^{CGPoint=dd}16Q24
v64@0:8{CGAffineTransform=dddddd}16
Q48@0:8@16Q24d32^@40
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
@"SBUIAppleLogoView"
@"<SBLockScreenBuddyViewDelegate>"
^{NSMutableSet=#}24@0:8^{NSMutableSet=#}16
v32@0:8^{NSMutableSet=#}16@24
@"SBBackBoardServicesInterface"
^{NSMutableSet=#}
@32@0:8q16Q24
v56@0:8@16@24d32d40@48
@"CBClient"
f24@0:8q16
v28@0:8f16q20
{CGAffineTransform=dddddd}32@0:8q16q24
@"_SBOrientationTransformedContentView"
v24@0:8@"CCUIControlCenterViewController"16
v36@0:8@"CCUIControlCenterViewController"16B24@?<v@?>28
B32@0:8@"CCUIControlCenterViewController"16@"UIGestureRecognizer"24
v32@0:8@"CCUIControlCenterViewController"16@"UITapGestureRecognizer"24
v32@0:8@"CCUIControlCenterViewController"16@"UIPanGestureRecognizer"24
v32@0:8@"CCUIControlCenterViewController"16@"_UIBackdropView"24
@"<CCUIControlCenterSystemAgent>"24@0:8@"CCUIControlCenterViewController"16
d48@0:8{CGPoint=dd}16{CGPoint=dd}32
@44@0:8B16d20d28d36
v40@0:8d16@?24@?32
@"CCUIControlCenterRootView"
@"CCUIControlCenterViewController"
@"SBScreenEdgePanGestureRecognizer"
@"SBControlCenterSystemAgent"
@"CCUIControlCenterSettings"
@"UIDynamicAnimator"
@"_UIFeedbackEdgeBehavior"
{CGRect={CGPoint=dd}{CGSize=dd}}20@0:8i16
v56@0:8@16Q24B32B36{CGPoint=dd}40
@"SBIconImageCrossfadeView"
@"UIView<SBIconAccessoryView>"
@"SBCloseBoxView"
@"UIView<SBIconLabelView>"
@"UIView<SBReusableView>"
@"<SBIconViewDelegate>"
@"<SBIconViewObserver>"
@"_UIFeedbackImpactBehavior"
#20@0:8i16
@"SBIconBlurryBackgroundView"
@"UIViewController"24@0:8@"NSString"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"UIViewController"16
@"UIView"16@0:8
v24@0:8@?<v@?@"<SBViewControllerTransitionCoordinatorContext>"@?<v@?>>16
B32@0:8@?16@?24
B32@0:8@?<v@?@"<SBViewControllerTransitionCoordinatorContext>">16@?<v@?@"<SBViewControllerTransitionCoordinatorContext>">24
B40@0:8@16@?24@?32
B40@0:8@"UIView"16@?<v@?@"<SBViewControllerTransitionCoordinatorContext>">24@?<v@?@"<SBViewControllerTransitionCoordinatorContext>">32
v24@0:8@?<v@?@"<SBViewControllerTransitionCoordinatorContext>">16
B32@0:8@?<v@?@"<UIViewControllerTransitionCoordinatorContext>">16@?<v@?@"<UIViewControllerTransitionCoordinatorContext>">24
B40@0:8@"UIView"16@?<v@?@"<UIViewControllerTransitionCoordinatorContext>">24@?<v@?@"<UIViewControllerTransitionCoordinatorContext>">32
v24@0:8@?<v@?@"<UIViewControllerTransitionCoordinatorContext>">16
@"BSUIAnimationFactory"16@0:8
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
@"<UIViewControllerAnimatedTransitioning>"
@"<UIViewControllerInteractiveTransitioning>"
@"<SBViewControllerTransitionContextDelegate>"
[17@"UIImage"]
@52@0:8{CGSize=dd}16d32B40@?44
@48@0:8{CGSize=dd}16d32@?40
v32@0:8@"SBLockScreenEmergencyDialerController"16@"NSError"24
@"SBLockScreenEmergencyDialerController"
v32@0:8@16^i24
@"<SBIconViewMapDelegate>"
B40@0:8@16^Q24^q32
@"<FBSynchronizedTransactionDelegate>"
^{NSNumber=#}24@0:8@?16
v24@0:8^{NSNumber=#}16
@"NSCalendar"
@"FBSynchronizedTransactionGroup"
@"<SBStarkIconControllerDelegate>"
@"SBCarPlayIconModel"
@"SBStarkFolderController"
@"SBStarkFakeIconOperationController"
@"SBIconLayoutOverrideStrategy"
@"<SBHomeButtonShowPasscodeRecognizerDelegate>"16@0:8
v24@0:8@"<SBHomeButtonShowPasscodeRecognizerDelegate>"16
v32@0:8Q16Q24
@"<SBHomeButtonShowPasscodeRecognizerDelegate>"
@"UIView<SBUIPasscodeLockView_Internal>"
@"<SBDashBoardPasscodeViewControllerDelegate>"
{UIEdgeInsets=dddd}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"UIWindow"16
v40@0:8d16d24@?32
@"SBIconListView"
@"UIView"40@0:8@"WGWidgetGroupViewController"16@24@"UIScrollView"32
@"NCMaterialSettings"24@0:8@"WGWidgetGroupViewController"16
@"NSArray"24@0:8@"WGWidgetGroupViewController"16
@"<SBSearchEtceteraIsolatedViewControllerAnimatedTransitioning>"16@0:8
v36@0:8@"SBSearchEtceteraIsolatedViewController"16Q24B32
B32@0:8@"SBSearchEtceteraIsolatedViewController"16Q24
v36@0:8B16Q20@?28
v44@0:8B16Q20@?28@?36
v44@0:8Q16B24@?28@?36
@"<SBSearchEtceteraMultiplexingViewControllerAppearanceDelegate>"
@"SBDashBoardViewControllerBase"
@48@0:8B16d20d28d36B44
v28@0:8B16@?<v@?>20
B40@0:8@"BBAction"16@"BBBulletin"24@?<v@?>32
v36@0:8B16q20@?28
v40@0:8B16B20@?24@?32
@"SBNotificationCenterViewController"
@"SBNotificationCenterSettings"
@"UIScreenEdgePanGestureRecognizer"
@"SBNotificationCenterTransitionContext"
@"SBNotificationCenterDefaults"
@"UIImpactFeedbackGenerator"
@"SBLockScreenViewController"
@"NSString"32@0:8@"BSSettings"16Q24
@48@0:8@16q24@32Q40
@"NSString"48@0:8@"BSSettings"16q24@32Q40
@"NSString"24@0:8Q16
@40@0:8q16@24Q32
@"NSString"40@0:8q16@24Q32
@"BSMutableSettings"
v48@0:8@"NCNotificationAction"16@"NSString"24@"NSDictionary"32@?<v@?B>40
@"SBSCardItem"
@"SBDisableActiveInterfaceOrientationChangeAssertion"
@"SBFLockScreenWallpaperParallaxSettings"
@"SBFHomeScreenWallpaperParallaxSettings"
@"SBAppSwitcherOrbGestureSettings"
@"SBAppSwitcherWallpaperSettings"
@"<SBMesaUnlockBehavior>"
@"SBAuthenticationFeedback"
v32@0:8@"<SBUIBiometricResource>"16Q24
v28@0:8@"<SBUIBiometricResource>"16B24
v24@0:8@"SBWalletPrearmRecognizer"16
v32@0:8@"SBWalletPrearmRecognizer"16Q24
v40@0:8@"PKPassLibrary"16@"PKCatalog"24@"NSSet"32
v40@0:8@"PKPassLibrary"16Q24d32
v36@0:8@"PKPassLibrary"16Q24B32
@"<BSInvalidatable>"32@0:8Q16@"NSString"24
B32@0:8Q16^Q24
@"SBUIBiometricResource"
@"<SBLockScreenMesaCoordinatorDelegate>"
@"SBWalletPrearmRecognizer"
@"_SBPendingMesaUnlockBehaviorUnlockRequest"
v24@0:8@"SBLayoutElementContainerView"16
B40@0:8{CGPoint=dd}16@"SBLayoutElementContainerView"32
@"SBLayoutState"24@0:8@"SBLayoutElementContainerView"16
@"<SBLayoutElementViewControllerDelegate>"
@"<SBSceneManagerReferenceDelegate>"
@"SBSceneManager"
@24@0:8o^{CGAffineTransform=dddddd}16
@"NSData"24@0:8o^{CGAffineTransform=dddddd}16
@"XBSnapshotDataProviderContext"16@0:8
@"FBSceneSnapshot"
@"SBSnapshotDataProviderContext"
@40@0:8@16@24d32
@"SBBookmarkIcon"
@28@0:8q16B24
q28@0:8q16B24
@"SBSideSwitcherPageView"32@0:8@"SBSideSwitcherScrollingItemViewController"16@"SBDisplayItem"24
v32@0:8@"SBSideSwitcherScrollingItemViewController"16@"SBSideSwitcherPageView"24
{CGSize=dd}24@0:8@"SBSideSwitcherScrollingItemViewController"16
d24@0:8@"SBSideSwitcherScrollingItemViewController"16
B32@0:8@"SBSideSwitcherScrollingItemViewController"16@"SBDisplayItem"24
@"SBIconViewMap"24@0:8@"SBAppSwitcherPageView"16
B32@0:8@"SBAppSwitcherPageView"16q24
v24@0:8@"SBAppSwitcherPageView"16
@"SBSideSwitcherScrollingItemViewController"
@"_SBUIStarkZoomUpNowPlayingFromHomeAnimation"
@"SBLockOverlayView"
B32@0:8@"BBBulletin"16@"<SBBulletinAlertHandlerRegistry>"24
v36@0:8i16@"BBBulletin"20@"<SBBulletinAlertHandlerRegistry>"28
v40@0:8@?16Q24@32
@40@0:8@16Q24@32
@36@0:8B16Q20@28
@"SBAppStatusBarSettings"
v24@0:8@"<SBUIBannerSource>"16
v24@0:8@"SBUIBannerContext"16
@"SBUIBannerContext"24@0:8@"<SBUIBannerSource>"16
v32@0:8@"SBUIBannerContext"16@?<v@?>24
v40@0:8@"SBBannerContainerViewController"16@"SBUIBannerAction"24@"NSDictionary"32
v24@0:8@"SBBannerContainerViewController"16
v28@0:8@"SBBannerContainerViewController"16B24
v32@0:8@"SBBannerGestureHandler"16d24
v28@0:8B16q20
v32@0:8B16q20B28
v40@0:8B16q20B28@?32
B28@0:8B16q20
v56@0:8q16{CGPoint=dd}24d40d48
v56@0:8q16{CGPoint=dd}24{CGPoint=dd}40
v52@0:8q16B24@28q36@?44
v44@0:8@16B24q28@?36
@"SBBannerGestureHandler"
@"SBBannerDismissSystemGestureRecognizer"
@"_UILegibilityImageSet"
@"NSLayoutConstraint"
@"<NCNotificationStaticContentProviding>"32@0:8@"NCNotificationViewController"16@"NCNotificationRequest"24
v48@0:8@"NCNotificationViewController"16@"NCNotificationAction"24@"NSDictionary"32@?<v@?B>40
q24@0:8@"NCNotificationViewController"16
B24@0:8@"NCNotificationViewController"16
v32@0:8@"NCNotificationViewController"16@?<v@?B>24
B32@0:8@"NCNotificationViewController"16@24
@"UIViewController"32@0:8@"NCNotificationViewController"16@"UIViewController"24
v24@0:8@"NCNotificationViewController"16
v28@0:8@"NCNotificationViewController"16B24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"NCNotificationViewController"16
{CGRect={CGPoint=dd}{CGSize=dd}}64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56
{CGRect={CGPoint=dd}{CGSize=dd}}64@0:8@"NCNotificationViewController"16{CGRect={CGPoint=dd}{CGSize=dd}}24@"UIView"56
v36@0:8@"NCNotificationViewController"16B24@"<UIViewControllerTransitionCoordinator>"28
@"UIView"24@0:8@"NCNotificationViewController"16
@"MTMaterialSettings"24@0:8@"NCNotificationViewController"16
@"<NCNotificationAlertDestinationDelegate>"16@0:8
v24@0:8@"<NCNotificationAlertDestinationDelegate>"16
B24@0:8@"NCNotificationRequest"16
@"<NCNotificationDestinationDelegate>"16@0:8
v24@0:8@"<NCNotificationDestinationDelegate>"16
v52@0:8@16B24@28@36@?44
@32@0:8Q16@?24
@"<NCNotificationAlertDestinationDelegate>"
@"SBNotificationBannerWindow"
@"SBNotificationLongLookBannerDestination"
v48@0:8@16@24d32d40
@40@0:8@16d24d32
{SBNormalizedTransitionInterval=dd}16@0:8
{SBNormalizedTransitionInterval="start"d"duration"d}
@48@0:8@16@24@32q40
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@?48
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@?<v@?>48
v32@0:8@?<v@?>16@?<v@?>24
v64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@?48@?56
v64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@?<v@?>48@?<v@?>56
v32@0:8q16@?<v@?>24
v64@0:8{UIEdgeInsets=dddd}16d48Q56
@"PGPictureInPictureViewController"
@"SBExternalGlobalDefaults"
@"SBExternalCarrierDefaults"
@"SBExternalOperatorDefaults"
@"SBExternalUIKitDefaults"
@"SBExternalDuetDefaults"
@"SBExternalDemoDefaults"
@"SBExternalSetupDefaults"
@"SBExternalSettingsDefaults"
@"SBExternalSMSDefaults"
@"SBExternalPhoneDefaults"
@"SBExternalWifiDefaults"
@"SBExternalSoundsDefaults"
@"SBControlColorSettings"
@"BBBulletin"
@"SBBulletinModalAlert"
@"SBBulletinRootViewController"
v24@0:8^{?=BBBBBdi}16
@"SBBulletinRootView"
@"SBBulletinWindowController"
@"_SBBulletinRootViewControllerTransitionContext"
@24@0:8^{_CARenderImage=}16
^{_CARenderImage=}
^{CGImageSource=}16@0:8
^{CGImage=}32@0:8^{CGImageSource=}16d24
^{CGImage=}32@0:8@16d24
v36@0:8{CGPoint=dd}16B32
@"SBWorkspaceEntity"
@"UIGestureRecognizerTransformAnalyzerInfo"
d32@0:8{CGSize=dd}16
q36@0:8@"UIStatusBar"16q24i32
v52@0:8@16d24d32d40i48
v52@0:8@"UIStatusBar"16d24d32d40i48
v44@0:8@16d24d32i40
v44@0:8@"UIStatusBar"16d24d32i40
@"UISystemNavigationAction"24@0:8@"UIStatusBar"16
v40@0:8@"UIStatusBar"16q24q32
v48@0:8@16q24q32@40
v48@0:8@"UIStatusBar"16q24q32@40
@"SBStarkStatusBarStateProvider"
@"<UIStatusBarStyleDelegate>"
@"<SBStarkStatusBarViewControllerDelegate>"
@"SBStarkStatusBarDockController"
@"<_SBMultiplexedHostViewScreenRectObserver>"
v32@0:8@"<SBMainAppSwitcherContentViewControlling>"16@"SBDisplayItem"24
B32@0:8@"<SBMainAppSwitcherContentViewControlling>"16@"SBDisplayItem"24
v32@0:8@"<SBMainAppSwitcherContentViewControlling>"16@"SBBestAppSuggestion"24
@?32@0:8@16@?24
@"SBAppSwitcherRemoteAlertSet"
@"UIViewController<SBMainAppSwitcherContentViewControlling>"
@"SBSwitcherContainerView"
@"SBLoginAppContainerOverlayWrapperView"
@"<SBSMSClass0AlertDisplayDelegate>"
@80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56@64@72
@"<SBSwitcherAppViewWrapperPageContentViewDelegate>"
B36@0:8@16@24i32
@32@0:8@?16@?24
@32@0:8d16q24
d28@0:8q16B24
v72@0:8q16d24d32d40@48@56@?64
@"<SBScreenFadeAnimationControllerDelegate>"
v32@0:8@"UNUserNotificationCenter"16@"NSArray"24
@"UNUserNotificationCenter"
@?<@"SBWorkspaceEntity"@?@"NSString">16@0:8
B24@0:8@"<SBLayoutElementIdentity>"16
@64@0:8@16q24Q32Q40#48@?56
@"CAMutableMeshTransform"
@"SBStretchTransformerView"
@"FBSProcessHandle"
@"UIScrollView"16@0:8
v24@0:8@"UIViewController"16
@"<SBMultiplexedHostingDelegate>"
@"SBSceneDimmingView"
@"SBLayoutElementPinResizeGrabberView"
@"SBBootDefaults"
v40@0:8@16Q24Q32
v40@0:8@"SBCompoundIdleTimer"16Q24Q32
@56@0:8@16@24q32q40d48
@52@0:8@16B24q28q36d44
@"SBCompoundIdleTimer"
@"SBInsecureDrawingAlertItem"
@32@0:8@16^{_NSZone=}24
v24@0:8@"FBWindowContextManager"16
v48@0:8@16^{FBSceneLayer=#}24Q32Q40
v48@0:8@"FBWindowContextManager"16^{FBSceneLayer=#}24Q32Q40
v24@0:8@"FBSceneLayerManager"16
v48@0:8@16@24Q32Q40
v48@0:8@"FBSceneLayerManager"16@"FBSceneLayer"24Q32Q40
@36@0:8@16B24d28
@"FBScene"
@"SBLockScreenNotificationCell"
d96@0:8@16@24@32Q40{CGSize=dd}48{CGSize=dd}64B80d84B92
@"<SBAwayListCellButtonHandler>"
@"SBLockScreenNotificationScrollView"
@"<UIScrollViewDelegate>"
@"SBSnoozedAlarmDateLabel"
d40@0:8@16@24d32
B24@0:8i16i20
v40@0:8q16q24@?32
v48@0:8q16q24@32@?40
B32@0:8i16i20^v24
B36@0:8@16i24@?28
@"SBAssistantWindow"
@"UIViewController<SBUIPluginViewControllerInterface>"
B40@0:8q16{CGPoint=dd}24
B40@0:8@16{CGPoint=dd}24
q32@0:8q16q24
v36@0:8@16@?24B32
@"SBLockScreenHintTapGestureRecognizer"
@"SBLockScreenHintLongPressGestureRecognizer"
@"SBLockScreenHintPanGestureRecognizer"
@"<SBCoordinatedPresenting>"
@"<SBDateLabelDelegate>"
@36@0:8B16d20d28
@28@0:8B16d20
d20@0:8B16
v24@0:8@"_SBAlertController"16
v32@0:8@"SBModalViewControllerStack"16@"UIViewController"24
v40@0:8@"UIAlertController"16@?<v@?>24@?<v@?@?<v@?>>32
@"SBModalViewControllerStack"
@"SBSearchEtceteraTodayLayoutContentView"
@"SBSearchEtceteraSearchLayoutContentView"
@"SBSearchEtceteraNotificationsLayoutContentView"
@"SBSearchEtceteraLayoutContentView"
@"<SBSearchEtceteraLayoutViewDelegate>"
@"<SBFLegibilitySettingsProviderDelegate>"16@0:8
v24@0:8@"<SBFLegibilitySettingsProviderDelegate>"16
@"<SBFLegibilitySettingsProviderDelegate>"
@"UNNotificationRequest"
{CGSize=dd}40@0:8q16d24d32
@40@0:8@16{CGSize=dd}24
@36@0:8q16@24B32
@28@0:8Q16B24
@"NSLayoutYAxisAnchor"
@"<BBObserverDelegate>"
@"_SBUIStarkDosidoNowPlayingAnimation"
@56@0:8@16@24@32@40q48
@88@0:8@16@24@32@40q48@56@?64@72@80
@"SBMainDisplaySceneManager"
@"SBSideAppState"
@"SBBreadcrumbState"
@"_SBInternalPowerDownView"
@"SBFolderControllerAnimationContext"
@"<SBIconAnimatorDelegate>"
@"SBValueConvergenceAnimator"
v32@0:8@"<SBBulletinAlertHandler>"16@"NSString"24
@"SBAlertItemsSettings"
B32@0:8@"FBSynchronizedTransactionGroup"16@"BSTransaction<FBSynchronizedTransaction>"24
v32@0:8@"FBApplicationUpdateScenesTransaction"16@"FBApplicationProcess"24
v32@0:8@"FBApplicationUpdateScenesTransaction"16@"FBScene"24
^{NSSet=#}16@0:8
^{NSDictionary=#}16@0:8
@"<SBSceneLayoutWorkspaceTransactionDelegate>"
@"SBSceneBackgroundedStatusAssertion"
@"<SBStarkWindowDelegate>"
B40@0:8@16q24@?32
v24@0:8I16B20
@"AVController"
@"SBAppResizingBlurContainerView"
d40@0:8{CGPoint=dd}16d32
v64@0:8{?=dddd}16{CGPoint=dd}48
d40@0:8@16^d24^d32
d32@0:8@16d24
@"UIPreviewForceInteractionProgress"
@"SBUIPresentSwitcherAnimationController"
@"SBUIDismissSwitcherAnimationController"
@"SBMainWorkspaceTransitionRequest"
@"<SBFramewiseInteractiveTransitionAnimatorDelegate>"
v24@0:8@"SBPressSequenceRecognizer"16
v32@0:8@"SBPressSequenceRecognizer"16Q24
@"SBPressSequenceRecognizer"
@"SBPressSequenceValidator"
@"SBPressSequenceSettings"
@"BSAction"
@"<SBSOSTriggerObserverDelegate>"
q24@0:8d16
B24@0:8d16
@"SBTouchTemplate"
@"SBPolygon"
@"UIGestureRecognizerTransformAnalyzer"
v24@0:8@"UIViewController<NCInteractiveNotificationHost>"16
v32@0:8@"UIViewController<NCInteractiveNotificationHost>"16@"NSDictionary"24
v36@0:8@16B24Q28
v36@0:8@"UIViewController<NCInteractiveNotificationHost>"16B24Q28
v28@0:8@"UIViewController<NCInteractiveNotificationHost>"16B24
v32@0:8@"SBBannerButtonViewController"16Q24
v32@0:8@"NCNotificationActionTextInputViewController"16@"NSString"24
v24@0:8@"NCBannerAccessoryHostViewController"16
v28@0:8@"NCBannerAccessoryHostViewController"16B24
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8q16
@"UIViewController<NCInteractiveNotificationHost>"
@"NCBannerAccessoryHostViewController"
@"NCContentHostViewController"
@"SBBannerButtonViewController"
@"SBUIBannerContext"
@"SBBannerContainerView"
@"SBBannerContextView"
@"NSObject<OS_dispatch_group>"
@"<SBBannerContextViewControllerDelegate>"
v32@0:8@"SBDashBoardTodayViewController"16@"NSSet"24
@"SBDashBoardTodayViewController"
@"<SBPasscodeEntryAlertViewDelegate>"
@"SBGestureDefaults"
d72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48d56@64
d64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48@56
@"FBWorkspaceEventQueueLock"
B32@0:8@"NSDictionary"16^@24
@24@0:8^@16
@"NSDictionary"24@0:8^@16
B40@0:8@16@24^@32
@"<SBIconIndexMutableListObserver>"
v24@0:8@"UABestAppSuggestion"16
@"UABestAppSuggestionManager"
@"UABestAppSuggestion"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16Q48
@"FBSSceneSettingsDiffInspector"
@60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48q52
@"SBLockScreenBatteryFillView"
@28@0:8@16{?=b1b1b1b1b1b1b1b1b1b1b1b1}24
{?=b1b1b1b1b1b1b1b1b1b1b1b1}16@0:8
{?="willActivate"b1"didActivate"b1"willDeactivate"b1"didDeactivate"b1"didChangeTop"b1"topBgStyleChange"b1"topStatusBarVisibile"b1"topOrientationEnable"b1"didCreateWindow"b1"willTearDownWindow"b1"didTearDownWindow"b1"didRemoveFromWindow"b1}
@"<SBAlertManagerObserver>"
v32@0:8@"SBAlert"16@"BSUIAnimationFactory"24
B24@0:8@"SBAlert"16
q24@0:8@"SBAlert"16
Q24@0:8@"SBAlert"16
v28@0:8@"SBAlert"16B24
B24@0:8@"SBAlertWindow"16
q24@0:8@"SBAlertWindow"16
Q24@0:8@"SBAlertWindow"16
@"FBSScene"
@"SBAlertWindow"
{?="deactivateDismissed"b1"newWindow"b1"defaultShouldAutorotate"b1"defaultPresentationOrientation"b1"defaultSupportedOrientations"b1}
@"<SBAlertManagerDelegate>"
v32@0:8@"SBIconListView"16@"SBIcon"24
v24@0:8@"SBIconListView"16
@"<SBDockOffscreenFractionModifying>"
@"<SBUIFullscreenAnimationViewDelegate>"
B36@0:8@"SBUIPluginController"16i24@?<v@?B>28
v28@0:8@"SBUIPluginController"16B24
B24@0:8@"SBUIPluginController"16
B40@0:8@"SBUIPluginController"16@"NSString"24@"<SBDeviceLockViewOwner>"32
B32@0:8@"SBUIPluginController"16@"NSURL"24
B40@0:8@"SBUIPluginController"16@"NSString"24@"NSURL"32
B44@0:8@"SBUIPluginController"16@"NSString"24@"NSURL"32B40
v24@0:8@"SBUIPluginController"16
v36@0:8@"SBUIPluginController"16q24B32
@"SBUIPluginController"
v24@0:8@"<SBLockScreenModalView>"16
@"NCNotificationAction"
v24@0:8@"SBUILockOverlayView"16
@"SBAwayBulletinListItem"
@40@0:8@16@24o^@32
@64@0:8@16@24@32{CGSize=dd}40q56
@"SBFMappedImageCache"
@"SBDashBoardComponent"
@"<SBDashBoardTodayViewControllerDelegate>"
@"SBDashBoardPageViewController"
@48@0:8^{CGImage=}16d24q32@40
{CGRect={CGPoint=dd}{CGSize=dd}}60@0:8B16{CGRect={CGPoint=dd}{CGSize=dd}}20@52
v40@0:8d16d24@32
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
@64@0:8^{CGImage=}16d24q32@40{CGPoint=dd}48
@"SBMediaController"
@"<SBLockScreenNowPlayingControllerDelegate>"
B24@0:8@"SBPasscodeEntryAlertView"16
@"<SBPasscodeEntryAlertViewControllerDelegate>"
@"<SBSystemServiceServerBiometricsDelegate>"
@"<SBSystemServiceServerHardwareButtonDelegate>"
@"XBApplicationSnapshot"
@"SBSwitcherSnapshotImageView"
@48@0:8@16q24B32B36@40
@56@0:8@16@24q32B40B44@48
v32@0:8q16i24B28
^{CGImage=}24@0:8^{CGImage=}16
v36@0:8^{CGImage=}16@24B32
@"_SBAppSwitcherSnapshotContext"
@"CAShapeLayer"
@"SBZoomableCrossfadeView"
@28@0:8I16@20
@"<SBAssertionDelegate>"
@"<SBLockScreenPluginManagerDelegate>"
@"SBLockScreenTestPluginSettings"
B32@0:8@"SBAppViewController"16q24
v40@0:8@"SBAppViewController"16q24q32
v24@0:8@"SBAppViewController"16
@"<SBDashBoardHostedAppViewControllerDelegate>"
@"SBAppViewController"
@"<SBMesaUnlockBehaviorDelegate>"16@0:8
v24@0:8@"<SBMesaUnlockBehaviorDelegate>"16
@"<SBMesaUnlockBehaviorDelegate>"
v32@0:8@"SBSearchEtceteraLayoutView"16Q24
{UIEdgeInsets=dddd}20@0:8B16
v32@0:8N^{CGPoint=dd}16@24
v48@0:8Q16B24B28@?32@?40
@"SPUISearchViewController"
@"WGWidgetGroupViewController"
@"SBNotificationCenterDestination"
@"NCNotificationListContainerViewController"
@"WALockscreenWidgetViewController"
@"SBSearchEtceteraDateViewController"
@"<SBSearchEtceteraIsolatedViewControllerAnimatedTransitioning>"
{?="runningOnPad"b1"delegateRespondsToWillBeginDragging"b1"delegateRespondsToDidScroll"b1"delegateRespondsToWillEndDragging"b1"delegateRespondsToDidEndDragging"b1"delegateRespondsToDidEndDecelerating"b1"delegateRespondsToDidEndScrollingAnimation"b1"didDelaySearchWillDismiss"b1}
@"<SBSearchEtceteraIsolatedViewControllerAppearanceDelegate>"
@"<WGWidgetGroupViewControllerDelegate>"
@"<SPUISearchViewControllerDelegate>"
v48@0:8@"FBWorkspace"16@"NSString"24@"FBSSceneClientSettings"32@?<v@?@"FBScene">40
v40@0:8@"FBWorkspace"16@"NSString"24@?<v@?>32
v24@0:8@"SBSceneManagerReference"16
@"SBLockScreenInfoOverlayView"
@"SBDosidoAnimator"
v24@0:8@"SBLockScreenActionContext"16
v24@0:8@"SBLockScreenNotificationListView"16
v32@0:8@"SBLockScreenNotificationListView"16@"SBLockScreenNotificationCell"24
@"SBAwayListItem"24@0:8@"NSIndexPath"16
@"SBUIBannerItem"24@0:8@"<SBUIBannerTarget>"16
@"UIView<SBUIBannerView>"24@0:8@"SBUIBannerContext"16
v24@0:8@"UIView<SBUIBannerView>"16
v28@0:8@"UIView<SBUIBannerView>"16i24
v32@0:8@"SBUIBannerTargetManager"16@"<SBUIBannerTarget>"24
v24@0:8@"SBLockScreenNotificationBannerItem"16
@32@0:8{CGPoint=dd}16
@"SBLockScreenNotificationListView"
@"<SBLockScreenNotificationListDelegate>"
@"<SBUIBannerTarget>"
{CGRect={CGPoint=dd}{CGSize=dd}}20@0:8B16
@"<SBGrabberTongueDelegate>"
v24@0:8@"SBIconProgressView"16
@"SBIconProgressView"
{CGSize=dd}24@0:8q16
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@"UIStatusBarStyleRequest"
{CGAffineTransform=dddddd}32@0:8q16d24
{CGAffineTransform=dddddd}72@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16q24d32{CGRect={CGPoint=dd}{CGSize=dd}}40
{CGRect={CGPoint=dd}{CGSize=dd}}68@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48@56B64
{CGRect={CGPoint=dd}{CGSize=dd}}76@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGRect={CGPoint=dd}{CGSize=dd}}48q56@64B72
@76@0:8@16@24q32@40{CGSize=dd}48@64B72
@52@0:8@16@24q32@40B48
@60@0:8@16@24q32@40@48B56
v108@0:8@16{CGSize=dd}24{CGRect={CGPoint=dd}{CGSize=dd}}40q72d80@88@96B104
B40@0:8d16d24d32
B48@0:8{CGPoint=dd}16{CGPoint=dd}32
d56@0:8d16d24d32d40d48
{CGPoint=dd}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{CGPoint=dd}16
@"<SBNotificationCenterViewControllerDelegate>"
@"SBNotificationCenterLayoutViewController"
@"SBNotificationCenterWithSearchViewController"
@"SBNotificationCenterScrollToTopView"
@"UIPageControl"
{?="blursBackground"b1"showsBackground"b1"isBackgroundValid"b1"isGrabberEnabled"b1"isGrabberLockEngaged"b1"viewHitTestsAsOpaque"b1"isViewHitTestingValid"b1}
@"<SBWallpaperServerDelegate>"
@48@0:8@16@24@?32@40
@"SBLockScreenUserPictureView"
v44@0:8@16@24I32@?36
v44@0:8@"SBApplicationServer"16@"<FBSystemServiceClient>"24I32@?<v@?q>36
@"<SBReusableViewMapDelegate>"
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
@"SBWalletNotificationSource"
d40@0:8d16d24d32
v24@0:8@"UIDynamicAnimator"16
@"SBBouncingSystem"
@"SBBouncingItem"
@"SBBounceBehavior"
@"SBDockIconListView"
@"SBHighlightView"
v40@0:8@16Q24^v32
v24@0:8^{__CFString=}16
v28@0:8B16^{__CFString=}20
@"SBUIAnimationController"
@"<NCNotificationAlertDestination><NCNotificationViewControllerDelegatePrivate>"
@"SBAppSwitcherPageView"
@64@0:8@16@24{CGSize=dd}32d48q56
@88@0:8@16@24@32d40{CGSize=dd}48Q64Q72q80
@80@0:8@16@24{CGSize=dd}32d48Q56Q64q72
@24@0:8^d16
@76@0:8@16@24@32B40{CGSize=dd}44d60^d68
@56@0:8@16@24@32d40^d48
B32@0:8@16N^@24
@"SBDashBoardPresentationViewController"
@"SBCornerAnimatingImageView"
{?={?=dB}{?=dB}}16@0:8
v32@0:8{_NSRange=QQ}16
B28@0:8Q16B24
v56@0:8{?=q{CGPoint=dd}{CGPoint=dd}}16
v40@0:8@16q24Q32
@"SBDashBoardIsolatingViewController"
@"<SBDashBoardViewPresenting>"
@52@0:8@16@24@32B40@?44
@48@0:8@16@24@32@?40
@"SBUIBlockAnimationController"
@"_SBDummyRootVC"
#24@0:8@"SBFolderView"16
v32@0:8@"SBFolderView"16q24
v24@0:8@"SBFolderView"16
v32@0:8@"SBFolderView"16@"UIPinchGestureRecognizer"24
@"SBFolderView"
@"<SBCarDisplaySceneManagerDelegate>"
@"<SBAppViewControllerDelegate>"
v48@0:8{CGSize=dd}16q32@40
{UIEdgeInsets=dddd}24@0:8@"SBModeViewController"16
v44@0:8@16q24q32B40
@"SBNotificationsViewController"
@"SBModeViewController"
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48d56
@48@0:8{CGPoint=dd}16@32@40
@"SBPlatformController"
@"SBMultiUserDefaults"
@"<SBLogoutProgressDataSource>"
@"SBLogoutProgressAlertView"
@"SBLogoutDebugBlockingViewController"
@"SBAlertChangeTransaction"
@"SBUIBannerContext"16@0:8
v24@0:8@"UIView"16
@"UIColor"24@0:8q16
v32@0:8@"UIColor"16q24
@"<SBDefaultBannerViewSource>"
@"SBDefaultBannerTextView"
@"UIView"32@0:8@"SBMainDisplaySceneLayoutResizeUIManager"16@"SBLayoutElementViewController"24
v40@0:8@"SBMainDisplaySceneLayoutResizeUIManager"16@"UIView"24@"SBLayoutElementViewController"32
@"SBAppResizingPlaceholderView"32@0:8@"SBMainDisplaySceneLayoutResizeUIManager"16@"SBLayoutElementViewController"24
v40@0:8@"SBMainDisplaySceneLayoutResizeUIManager"16@"SBAppResizingPlaceholderView"24@"SBLayoutElementViewController"32
v32@0:8@"SBMainDisplaySceneLayoutResizeUIManager"16Q24
v40@0:8@"SBMainDisplaySceneLayoutResizeUIManager"16@"SBAppContainerViewController"24q32
q24@0:8Q16
d56@0:8d16d24d32d40^B48
v60@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGRect={CGPoint=dd}{CGSize=dd}}24^d32d40Q48B56
v60@0:8^{CGAffineTransform=dddddd}16^{CGAffineTransform=dddddd}24^d32Q40d48B56
v64@0:8^{CGAffineTransform=dddddd}16^{CGAffineTransform=dddddd}24d32d40d48d56
v40@0:8^{CGAffineTransform=dddddd}16d24d32
v64@0:8q16d24d32d40d48Q56
v56@0:8q16Q24d32d40Q48
v40@0:8Q16d24@?32
Q48@0:8q16Q24d32Q40
v48@0:8Q16@24d32@?40
{CGRect={CGPoint=dd}{CGSize=dd}}64@0:8q16@24q32q40@48d56
@"SBLayoutElementViewController"
@"SBMainDisplaySceneLayoutResizeUIManager"
@"SBSwitcherForcePressSystemGestureTransaction"
@"SBMainSwitcherViewController"
@"<SBLockOverlayViewControllerDelegate>"
@"SBLockOverlayViewController"
@36@0:8q16d24B32
v32@0:8@"SBAlert"16@?<v@?>24
@"<SBMesaUnlockTriggerDelegate>"
{?="shouldBeActivated"b1"isReadyToBeActivated"b1"hasBeenActivated"b1}
d24@0:8@"SBSceneResizeSnakebiteGestureRecognizer"16
d32@0:8@"SBSceneResizeSnakebiteGestureRecognizer"16d24
q24@0:8@"SBSceneResizeSnakebiteGestureRecognizer"16
B32@0:8@16d24
B32@0:8@"SBSceneResizeSnakebiteGestureRecognizer"16d24
B24@0:8@"SBSceneResizeSnakebiteGestureRecognizer"16
B24@0:8@"SBGrabberTongue"16
d24@0:8@"SBGrabberTongue"16
v40@0:8@16d24d32
v40@0:8@"SBGrabberTongue"16d24d32
v24@0:8@"SBGrabberTongue"16
v36@0:8d16d24B32
@"SBGrabberTongue"
@"SBSideAppSlideGestureWorkspaceTransaction"
@"SBSceneResizeSnakebiteGestureRecognizer"
@"SBAppResizeGestureWorkspaceTransaction"
@"SBLockScreenPluginOverlayViewController"
@"SBLoginAppContainerPluginWrapperView"
@32@0:8q16^d24
@"<SBLockScreenEmergencyCallViewControllerDelegate>"
@40@0:8Q16@24@?32
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8Q16Q24
@"NSOperationQueue"
@88@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48q56d64@72B80B84
v32@0:8@"UIView<_SBFakeBlur>"16q24
B24@0:8N^{?=qqd}16
v52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
@"UIView<_SBFakeBlur>"
v24@0:8@"FBApplicationUpdateScenesTransaction"16
v24@0:8@"FBScene"16
@"SBAppRepairTransaction"
v32@0:8@"SBSOSTriggerObserver"16@?<v@?B>24
v24@0:8@"SBSOSTriggerObserver"16
@44@0:8@16@24@32B40
@"SBLockHardwareButtonActions"
@"SBButtonDownGestureRecognizer"
@"SBTapGestureRecognizer"
@"SBLongPressGestureRecognizer"
@"SBSOSTriggerObserver"
@"BBSystemStateProvider"
@"<SBCommandTabViewControllerDelegate>"
@"SBLockScreenMesaFailureSettings"
@40@0:8Q16Q24d32
v32@0:8@16^{CGContext=}24
v24@0:8@"SBThermalWarningSuppressionAssertion"16
v24@0:8@"<SBFThermalConditionObserver>"16
@"SBThermalDefaults"
@"SBSecurityDefaults"
@"SBLockScreenNotificationTableView"
@"<SBLockScreenNotificationViewDelegate>"
@"<SBLockScreenNotificationModel>"
@"SBNotificationRowActionFactory"
@"<SBThermalWarningAlertItemDelegate>"
@"<SBThermalWarningSuppressionAssertionDelegate>"
@44@0:8@16Q24B32@?36
@"<SBModalViewControllerStackDelegate>"
@"_SBModalViewControllerStackTransition"
v24@0:8@"NCNotificationListViewController"16
v56@0:8@"NCNotificationListViewController"16@"NCNotificationAction"24@"NCNotificationRequest"32@"NSDictionary"40@?<v@?B>48
v32@0:8@"NCNotificationListViewController"16@"NSSet"24
v40@0:8@"NCNotificationListViewController"16@"NCNotificationRequest"24@?<v@?B>32
@"UIViewController"32@0:8@"NCNotificationListViewController"16@"UIViewController"24
{CGRect={CGPoint=dd}{CGSize=dd}}64@0:8@"NCNotificationListViewController"16{CGRect={CGPoint=dd}{CGSize=dd}}24@"UIView"56
@"<NCNotificationStaticContentProviding>"40@0:8@"NCNotificationListViewController"16@"NCNotificationRequest"24@"NCNotificationViewController"32
v32@0:8@"NCNotificationListViewController"16@"NCNotificationRequest"24
B32@0:8@"NCNotificationListViewController"16@"NCNotificationRequest"24
v32@0:8@"NCNotificationListViewController"16@"<UIViewControllerTransitionCoordinator>"24
@"UIView"24@0:8@"NCNotificationListViewController"16
v36@0:8@"NCNotificationListViewController"16B24@"NCNotificationRequest"28
@"MTMaterialSettings"24@0:8@"NCNotificationListViewController"16
v48@0:8@"NCNotificationListViewController"16@"NSDate"24@"NSDate"32@"NSSet"40
{UIEdgeInsets=dddd}48@0:8{UIEdgeInsets=dddd}16
@"NCNotificationPriorityListViewController"
@"MTMaterialView"
@"SBDashBoardClippingLine"
@"SBFTouchPassThroughView"
@"<SBDashBoardNotificationListViewControllerDelegate>"
@"<SBPressSequenceRecognizerDelegate>"
v48@0:8{CGSize=dd}16@32@?40
v56@0:8{CGSize=dd}16@32@40@?48
@64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56
@"SBDashBoardVibrantWallpaperButton"
@"SBLockOverlayTransition"
@52@0:8{UIEdgeInsets=dddd}16B48
v24@0:8@"NSURL"16
@"SBWindow"24@0:8@"SBStarkIconController"16
B24@0:8@"SBStarkIconController"16
v24@0:8@"SBWindow"16
B40@0:8@"BSAction"16@"FBScene"24@"SBCarDisplaySceneManager"32
@"SBSceneLayoutViewController"24@0:8@"SBCarDisplaySceneManager"16
@"<SBWindowLayoutStrategy>"24@0:8@"SBCarDisplaySceneManager"16
@"SBStarkSessionConfiguration"
@"SBCarDisplaySceneManager"
@"SBCarDisplaySettings"
@"<SBDisplay>"
@"SBStarkLockOutViewController"
@"SBStarkLockOutWindow"
@"SBStarkAnimationWindow"
@"SBStarkNowPlayingController"
@"SBStarkNowPlayingWindow"
@"SBStarkIconController"
@"SBStarkIconWindow"
@"SBStarkStatusBarViewController"
@"SBStarkStatusBarWindow"
@"SBStarkNotificationWindow"
@"SBStarkSystemGestureManager"
@"SBStarkFileRadarAlertItem"
@"SBStarkScreenFocusController"
@"SBStarkFocusMovementManager"
@"<SBStarkScreenControllerDelegate>"
v40@0:8d16q24@32
i24@0:8q16
@"<SBUserEventInterfaceObserver>"
B40@0:8@"SBScreenManager"16@"UIScreen"24@"FBSDisplay"32
v48@0:8@16q24@32@40
v48@0:8@"SBScreenManager"16q24@"UIScreen"32@"FBSDisplay"40
B24@0:8@"SBStarkScreenController"16
v24@0:8@"SBStarkScreenController"16
@"SBSpuriousScreenUndimmingAssertion"
@"SBLockScreenDisableAssertion"
@"MPULockScreenMediaControlsViewController"
@"SBDashBoardNowPlayingViewController"
q32@0:8@"UICollectionView"16q24
@"UICollectionViewCell"32@0:8@"UICollectionView"16@"NSIndexPath"24
q24@0:8@"UICollectionView"16
@"UICollectionReusableView"40@0:8@"UICollectionView"16@"NSString"24@"NSIndexPath"32
B32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
@"NSArray"24@0:8@"UICollectionView"16
@40@0:8@16@24q32
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSString"24q32
v32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"UICollectionViewCell"24@"NSIndexPath"32
v48@0:8@"UICollectionView"16@"UICollectionReusableView"24@"NSString"32@"NSIndexPath"40
B48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
v48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
@"UICollectionViewTransitionLayout"40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"UICollectionViewLayout"32
B32@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24
v40@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
{CGPoint=dd}40@0:8@16{CGPoint=dd}24
{CGPoint=dd}40@0:8@"UICollectionView"16{CGPoint=dd}24
v28@0:8@"SBStarkBannerTarget"16i24
@"SBStarkBannerTarget"
@"SBStarkAlertItemBannerSource"
@"SBStarkBulletinBannerSource"
@"SBStarkBannerCell"
@"SBStarkNotificationLayout"
@"SBCarBannerNotificationView"
@"<SBStarkNotificationViewControllerDelegate>"
{CGSize=dd}32@0:8@"SBAppView"16@"SBDisplayItem"24
v44@0:8{_NSRange=QQ}16B32@36
@"<SBDeckSwitcherPageViewProviderDelegate>"
v52@0:8@16@24@32B40@44
@40@0:8q16q24@32
v64@0:8@16q24q32@40@48@56
@"FBSSceneClientSettingsDiffInspector"
@"SBFaceContactExpectationManager"
@"UISystemNavigationAction"
@"FBSSceneClientSettings"
@"FBSSceneTransitionContext"
@"UIApplicationSceneSettings"
@"UIApplicationSceneClientSettings"
v32@0:8@"SBStarkNotificationViewController"16@"<SBUIBannerView>"24
v28@0:8@"SBStarkNotificationViewController"16i24
@"<SBCollectionViewCellDelegate>"
B48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UICollectionViewLayoutAttributes"
@"<SBAWDMetricDelegate>"
@"SBProximitySensorManager"
@"CMGestureManager"
@"SBLayoutElement"16@0:8
@"SBLayoutElement"24@0:8q16
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16Q48
@"SBFloatyFolderBackgroundClipView"
@"SBFolderBackgroundView"
@"SBBannerViewCallbackManager"
{?="providesDefaultElementColors"b1"supportsElementColors"b1}
v56@0:8{UIEdgeInsets=dddd}16Q48
[11@"NSPointerArray"]
d48@0:8d16Q24d32d40
@"AWDServerConnection"
@36@0:8@16i24@28
@"UIImage"36@0:8@"NSString"16i24@"UITraitCollection"28
@"<SBStarkStatusBarIconVisibilityDelegate>"
@"SBCarPlayDefaults"
@40@0:8@16@24:32
v48@0:8q16@24d32@?40
@"<SBRestartManagerDelegate>"
@"SBStartupTransitionController"
@"SBRestartTransitionRequest"
@"FBSystemService"
@"<SBAlertWindowViewControllerDelegate>"
v32@0:8@"SBPressCollector"16@"NSArray"24
v32@0:8@"SBAWDMetric"16@"SBAWDMetricData"24
@"SBPressCollector"
@"<SBPressSequenceObserverDelegate>"
v24@0:8@"SBLoginAppContainerViewController"16
@"BSTransaction"
@92@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56@64{SBIconCoordinate=qq}72i88
{SBIconCoordinate=qq}16@0:8
{SBIconCoordinate="row"q"col"q}
@"NSFileCoordinator"
{UIEdgeInsets=dddd}80@0:8Q16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGSize=dd}56d72
v40@0:8N^{CGPoint=dd}16@24d32
B36@0:8o^I16q24B32
I28@0:8I16q20
v44@0:8B16d20q28@36
B32@0:8o^I16q24
I24@0:8q16
v48@0:8@16B24@28B36@?40
@48@0:8d16d24d32d40
{CGAffineTransform=dddddd}24@0:8d16
v56@0:8@16@24@32@?40@?48
Q32@0:8q16@24
{CGAffineTransform=dddddd}112@0:8q16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGAffineTransform=dddddd}56@104
d40@0:8q16q24q32
d32@0:8q16@24
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGSize=dd}16q32@40
@"SBMainDisplaySceneLayoutGestureManager"
@"<SBMainDisplayLayoutContext>"
v32@0:8@"SBSRemoteAlertConfigurationContext"16@?<v@?>24
v24@0:8@"NSUUID"16
v32@0:8@"SBSRemoteAlertActivationContext"16@?<v@?>24
@"<_SBRemoteAlertHostViewControllerDelegate>"
@"<SBRemoteAlertDelegate>"16@0:8
v48@0:8@"SBSRemoteAlertDefinition"16@"SBSRemoteAlertConfigurationContext"24@"<SBRemoteAlertDelegate>"32@?<v@?@"<SBRemoteAlert>"@"NSError">40
@"_SBRemoteAlertHostViewController"
@"<SBRemoteAlertDelegate>"
@"<SBPowerDownAlertViewDelegate>"
@40@0:8@16:24q32
@"SBNCAlertingController"16@0:8
v24@0:8@"SBNCAlertingController"16
@"<NCNotificationDestinationDelegate>"
@"SBNCAlertingController"
@"NCNotificationListViewController"
v48@0:8#16@24@?32@?40
B36@0:8@16Q24B32
B36@0:8@16@24B32
B44@0:8@16Q24@32B40
@"<SBNCTableViewControllerDelegate>"
{?="suppliesInsertionAnimation"b1"suppliesRemovalAnimation"b1"suppliesReplacementAnimation"b1"decidesHighlight"b1"interestedInSelection"b1"suppliesLayoutMode"b1}
@"SBSectionInfo"
@"SBRowInfo"
@"SBInfoOperand"
v116@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{CGPoint=dd}80B96@?100@?108
@"_SBNotificationCenterBouncingItem"
@"UIBezierPath"16@0:8
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@?48
@"UIMutableApplicationSceneSettings"
@"UIApplicationSceneTransitionContext"
@"FBSSceneClientSettings<UIApplicationSceneClientSettings>"
@48@0:8@16@24d32d40
v48@0:8d16d24@32@40
@56@0:8@16@24@32d40d48
d40@0:8@16d24d32
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
@32@0:8#16#24
@"<SBProximitySensorControlling>"
@"SBHardwareDefaults"
B32@0:8^{CGPoint=dd}16@24
@"SBNCColumnViewController"
@"SBModeControlManager"
{?="isHeaderLayoutValid"b1"isContentLayoutValid"b1"isSegmentLayoutValid"b1"isRequestHandlingEnabled"b1"shouldLoadAllChildViews"b1"delegateProvidesContentInsets"b1}
@"<SBModeViewControllerDelegate>"
v32@0:8@16:24
{CGSize=dd}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"NSAttributedString"
@"<SBNotificationCenterWithSearchViewControllerPresentationDelegate>"
@"UIWebClip"
B24@0:8@"SBIconColorSettings"16
v64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGImage=}48^{CGColor=}56
@"<SBIconBlurryBackgroundViewObserver>"
^{CGImage=}
^{CGColor=}
@24@0:8^{CGColor=}16
@"<SBSceneResizeSnakebiteGestureDebugDelegate>"
v24@0:8@"SBSceneResizeSnakebiteGestureRecognizer"16
@44@0:8@16q24@32B40
{UIEdgeInsets=dddd}24@0:8Q16
{UIEdgeInsets=dddd}32@0:8Q16d24
@"SBDockView"
@"_SBRootFolderLayoutWrapperView"
@"SBSearchBlurEffectView"
@"_SBMinusPageStepper"
@"SBHomeScreenPullDownSearchViewController"
@"SBHomeScreenSearchableTodayViewController"
@"SBFramewiseInteractiveTransitionAnimator"
@"SBPercentPassthroughInteractiveTransition"
@"SBRootFolderView"
v32@0:8@"PGPictureInPictureController"16@"PGPictureInPictureViewController"24
v32@0:8@"SBAlertItemsController"16@"SBAlertItem"24
v36@0:8@"SBAlertItemsController"16@"SBAlertItem"24i32
v32@0:8i16B20@?24
v64@0:8{UIEdgeInsets=dddd}16q48d56
@"PGPictureInPictureController"
r^{?=[35B][64c]ii[100c][100c][2[100c]][1024c]IiiIiI[150c]iib1b1b1[256c]b1b1b1b1b1Ib1b1b1[256c][256c][100c]b1b1}16@0:8
v36@0:8^q16B24@?28
v28@0:8i16Q20
B24@0:8i16B20
@"SBStatusBarDefaults"
[35Q]
{?="itemIsEnabled"[35B]"timeString"[64c]"gsmSignalStrengthRaw"i"gsmSignalStrengthBars"i"serviceString"[100c]"serviceCrossfadeString"[100c]"serviceImages"[2[100c]]"operatorDirectory"[1024c]"serviceContentType"I"wifiSignalStrengthRaw"i"wifiSignalStrengthBars"i"dataNetworkType"I"batteryCapacity"i"batteryState"I"batteryDetailString"[150c]"bluetoothBatteryCapacity"i"thermalColor"i"thermalSunlightMode"b1"slowActivity"b1"syncActivity"b1"activityDisplayId"[256c]"bluetoothConnected"b1"displayRawGSMSignal"b1"displayRawWifiSignal"b1"locationIconType"b1"quietModeInactive"b1"tetheringConnectionCount"I"batterySaverModeActive"b1"deviceIsRTL"b1"lock"b1"breadcrumbTitle"[256c]"breadcrumbSecondaryTitle"[256c]"personName"[100c]"electronicTollCollectionAvailable"b1"wifiLinkWarning"b1}
@"NSDateFormatter"
@"SBFolderContainerView"
v36@0:8@16r^{?=[35B][64c]ii[100c][100c][2[100c]][1024c]IiiIiI[150c]iib1b1b1[256c]b1b1b1b1b1Ib1b1b1[256c][256c][100c]b1b1}24i32
v36@0:8@"<UIStatusBarStateProvider>"16r^{?=[35B][64c]ii[100c][100c][2[100c]][1024c]IiiIiI[150c]iib1b1b1[256c]b1b1b1b1b1Ib1b1b1[256c][256c][100c]b1b1}24i32
v32@0:8@"<UIStatusBarStateProvider>"16q24
v32@0:8B16B20d24
B40@0:8i16B20r^{?=[35B][64c]ii[100c][100c][2[100c]][1024c]IiiIiI[150c]iib1b1b1[256c]b1b1b1b1b1Ib1b1b1[256c][256c][100c]b1b1}24r^{?=[35B][64c]ii[100c][100c][2[100c]][1024c]IiiIiI[150c]iib1b1b1[256c]b1b1b1b1b1Ib1b1b1[256c][256c][100c]b1b1}32
v24@0:8^{?=[35B][64c]ii[100c][100c][2[100c]][1024c]IiiIiI[150c]iib1b1b1[256c]b1b1b1b1b1Ib1b1b1[256c][256c][100c]b1b1}16
[35B]
[35@"NSCountedSet"]
v24@0:8@"SBStatusBarStateAggregator"16
v40@0:8@16i24B28r^{?=[35B][64c]ii[100c][100c][2[100c]][1024c]IiiIiI[150c]iib1b1b1[256c]b1b1b1b1b1Ib1b1b1[256c][256c][100c]b1b1}32
v40@0:8@"SBStatusBarStateAggregator"16i24B28r^{?=[35B][64c]ii[100c][100c][2[100c]][1024c]IiiIiI[150c]iib1b1b1[256c]b1b1b1b1b1Ib1b1b1[256c][256c][100c]b1b1}32
v32@0:8@16r^{?=[35B][64c]ii[100c][100c][2[100c]][1024c]IiiIiI[150c]iib1b1b1[256c]b1b1b1b1b1Ib1b1b1[256c][256c][100c]b1b1}24
v32@0:8@"SBStatusBarStateAggregator"16r^{?=[35B][64c]ii[100c][100c][2[100c]][1024c]IiiIiI[150c]iib1b1b1[256c]b1b1b1b1b1Ib1b1b1[256c][256c][100c]b1b1}24
v36@0:8@"SBStatusBarStateAggregator"16r^{?=[35B][64c]ii[100c][100c][2[100c]][1024c]IiiIiI[150c]iib1b1b1[256c]b1b1b1b1b1Ib1b1b1[256c][256c][100c]b1b1}24i32
v24@0:8@"<UIStatusBarStateObserver>"16
@"NSString"24@0:8q16
B24@0:8r^{?=[35B][64c]ii[100c][100c][2[100c]][1024c]IiiIiI[150c]iib1b1b1[256c]b1b1b1b1b1Ib1b1b1[256c][256c][100c]b1b1}16
v24@0:8^i16
@"SBStatusBarStateAggregator"
v36@0:8i16@20@?28
v32@0:8@"MPULockScreenMediaControlsViewController"16@24
@"SBDashBoardView"
@"SBSwallowingGestureRecognizer"
@"SBHorizontalScrollFailureRecognizer"
@"<SBDashBoardScrollGestureControllerDelegate>"
v24@0:8@"SBSwitchAppSwipeTransaction"16
@"SBSwitchAppSwipeTransaction"
v56@0:8@"<SBDashBoardNotificationDestination>"16@"NCNotificationAction"24@"NCNotificationRequest"32@"NSDictionary"40@?<v@?B>48
v32@0:8@"<SBDashBoardNotificationDestination>"16@"NSSet"24
@"<SBDashBoardNotificationAlertingController>"24@0:8@"<SBDashBoardNotificationDestination>"16
@"NCNotificationSectionSettings"32@0:8@"<SBDashBoardNotificationDestination>"16@"NSString"24
@"<SBDashBoardNotificationDestination>"
v56@0:8@16@24@?32Q40@?48
v48@0:8@16Q24@32@?40
@"<SBMainDisplaySceneLayoutResizeUIManagerDelegate>"
@"SBNotificationCenterTouchEater"
@"SBNotificationCenterHeaderView"
{?="suppliesInsertionAnimation"b1"suppliesRemovalAnimation"b1"suppliesReplacementAnimation"b1"handlesBulletinActions"b1}
v40@0:8@"SBPocketStateMonitor"16q24q32
v32@0:8^d16^d24
v44@0:8f16d20q28@?36
v48@0:8f16d20q28B36@?40
v28@0:8d16i24
@"<SBApplicationRestrictionDataSource>"
@"SBApplicationDefaults"
@"CAContext"
@"SBPrototypingDefaults"
@"SBRootSettings"
@"PTSettingsController"
@"_SBFallbackSettingsHelper"
@"<SBTestRecipe>"
@"SBAppParallaxSettings"
@"SBRootAnimationSettings"
@"SBFadeAnimationSettings"
@"SBLegibilitySettings"
@"SBFWallpaperSettings"
@"SBAnimationFactorySettings"
@"SBHomeButtonSettings"
@"SBReachabilitySettings"
@"SBMedusaSettings"
@"SBStatusBarStyleOverridesSettings"
@"SBPrototypeControllerSettings"
@"SBHarmonySettings"
@"SBAppIconForceTouchSettings"
@"MTMaterialSettings"
@"SBLockScreenClippedSlideController"
@40@0:8@16B24B28@?32
@48@0:8@16q24@32@?40
q28@0:8@16B24
@44@0:8@16B24B28B32@?36
v28@0:8@"SBIconListPageControl"16i24
v24@0:8@"SBIconScrollView"16
q48@0:8^q16^q24Q32Q40
{CGSize=dd}48@0:8@16d24{CGSize=dd}32
@"SBIconListPageControl"
@"SBIconScrollView"
@"SBFolderTitleTextField"
@"<SBFolderViewDelegate>"
v24@0:8@"SBLockScreenBatteryChargingViewController"16
B28@0:8i16@20
@"<SBLoginAppSceneHoster>"
@"SBLockScreenBatteryChargingViewController"
@"SBLockScreenTemperatureWarningViewController"
@"SBLoginAppContainerPluginWrapperViewController"
v24@0:8@"SBLockScreenEmergencyCallViewController"16
v32@0:8@"SBLockScreenEmergencyCallViewController"16@"NSError"24
@"SBLockScreenEmergencyCallViewController"
@"<SBLockScreenEmergencyDialerDelegate>"
@"_SBFVibrantSettings"16@0:8
v24@0:8@"_SBFVibrantSettings"16
@"SBSaturatedIconView"
@"_SBFVibrantSettings"
v32@0:8@"SBLockScreenView"16q24
v24@0:8@"SBLockScreenView"16
v40@0:8d16d24d32
v24@0:8@"SBAwayBulletinListItem"16
v32@0:8@"SBAwayBulletinListItem"16@"NSString"24
v24@0:8@?<v@?B>16
v32@0:8@"SBLockOverlayViewController"16Q24
q24@0:8@"SBLockScreenSlideUpToAppController"16
v40@0:8@"UIView<_SBFVibrantView>"16@"SBLockScreenView"24@"SBLockScreenSlideUpToAppController"32
@"UIView<_SBFVibrantView>"32@0:8@"SBLockScreenView"16@"SBLockScreenSlideUpToAppController"24
B24@0:8@"SBLockScreenSlideUpToAppController"16
v28@0:8B16@"SBLockScreenSlideUpToAppController"20
@"UIViewController"16@0:8
v44@0:8B16@20@28@?36
@"SBLockScreenDeviceBlockViewController"
@"SBLockScreenStatusTextViewController"
@"SBLockScreenNotificationListController"
@"SBLockScreenSlideUpToAppController"
@"SBLockScreenDeviceInformationTextViewController"
@"SBLockScreenNowPlayingController"
@"SBLockScreenBuddyViewController"
@"SBLockScreenFullscreenBulletinViewController"
@"SBLockScreenInfoOverlayViewController"
@"SBLockScreenResetRestoreViewController"
@"SBLockScreenPasscodeOverlayViewController"
@"SBLockScreenUserPictureViewController"
@"SBLockScreenHintManager"
@"SBDisableAppStatusBarUserInteractionChangesAssertion"
@"<SBLockScreenViewControllerDelegate>"
@"_UIFeedbackEventBehavior"
@"SBRecycledViewsContainer"
@"<SBWindowLayoutStrategy>"
v32@0:8@"FBUIScene"16@"FBSMutableSceneClientSettings"24
v32@0:8@"FBUIScene"16@"FBSSceneClientSettingsDiff"24
B32@0:8@"FBUIScene"16@"NSSet"24
v32@0:8@"FBUIScene"16@"FBSSceneTransitionContext"24
v32@0:8@"FBUIScene"16@"NSError"24
v24@0:8@?<v@?B@"NSError">16
v32@0:8@?<@"FBSSceneTransitionContext"@?@"FBSMutableSceneSettings">16@?<v@?B@"NSError">24
@"<SBLoginAppSceneHosterDelegate>"16@0:8
v24@0:8@"<SBLoginAppSceneHosterDelegate>"16
@"FBUISceneWorkspace"
@"FBUIScene"
@"SBSUILoginUISceneClientSettingsDiffInspector"
@"<SBLoginAppSceneHosterDelegate>"
@"SBSUILoginUISceneClientSettings"
@"BCBatteryDeviceController"
v32@0:8i16B20@24
[64c]
B32@0:8q16^@24
@"SBFDeviceLockOutController"
@"SBLockScreenDefaults"
@"SBDemoDefaults"
@"CCUIControlCenterSettings"16@0:8
@"MTMaterialSettings"16@0:8
v32@0:8@"NSString"16@"NSURL"24
v36@0:8@"NSString"16@"NSURL"24B32
@"<CCUIStatusBarHidingAssertion>"16@0:8
B36@0:8@16B24d28
d28@0:8@16B24
{_SBPressSequenceValidatorBounds=dd}32@0:8Q16@24
q28@0:8Q16B24
v32@0:8@"SBDashBoardViewController"16@"SBDashBoardBehavior"24
@"<SBAlertingNotificationDestination>"
@"SBNCNotificationDispatcherDelegate"
@"NCBulletinNotificationSource"
@"SBUserAlertNotificationSource"
@"SBNotificationLegacyCarDestination"
{CGSize=dd}24@0:8d16
{CGPoint=dd}32@0:8q16d24
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8Q16d24
B40@0:8@16d24d32
{CGPoint=dd}48@0:8{CGSize=dd}16d32d40
v48@0:8@16Q24d32@?40
v40@0:8Q16@24d32
@"<SBSideSwitcherScrollingItemViewDelegate>"
B48@0:8@16@24^Q32^q40
B48@0:8@"NSString"16@"NSDate"24^Q32^q40
v48@0:8@"NSString"16@"NSDictionary"24q32@?<v@?>40
v40@0:8{CGPoint=dd}16@32
@"SBFolderControllerBackgroundView"
@"<SBFolderControllerDelegate>"
@"SBFolderContext"
@"<NSObject>"
@44@0:8@16Q24i32@?36
v24@0:8@"SBWorkStore"16
v36@0:8@16i24Q28
v44@0:8@16Q24i32@?36
B48@0:8@16Q24@32@?40
@"SBWorkStore"
@"UIFetchContentInBackgroundAction"
v36@0:8@"SBScreenFadeAnimationController"16B24@"NSString"28
v28@0:8i16@"NSDictionary"20
B32@0:8@"SBPasscodeEntryAlertViewController"16@"NSString"24
v24@0:8@"SBPasscodeEntryAlertViewController"16
v24@0:8@"SBDashBoardViewController"16
v36@0:8@"SBDashBoardViewController"16B24@"NSString"28
v40@0:8@"SBDashBoardViewController"16@"SBLockScreenUnlockRequest"24@?<v@?B>32
@"UIColor"48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B32@0:8@"SBLockScreenMesaCoordinator"16@"SBAuthenticationFeedback"24
B28@0:8@"SBLockScreenMesaCoordinator"16i24
v24@0:8@"<SBHomeButtonShowPasscodeRecognizer>"16
v52@0:8B16@?20B28B32B36B40@?44
B24@0:8o^@16
@"SBLockScreenMesaCoordinator"
@"<SBHomeButtonShowPasscodeRecognizer>"
@"SBLockScreenUnlockRequest"
@"SBLockScreenDisabledAssertionManager"
@"SBLockScreenAutoUnlockAggregateRule"
@"SBLiftToWakeManager"
v24@0:8@"SBStarkBannerItem"16
@"SBStarkBannerItem"
@"SBUIStarkBannerViewButton"
@40@0:8{SBWindowLevelRange_struct=dd}16@32
{SBWindowLevelRange_struct=dd}16@0:8
v32@0:8{SBWindowLevelRange_struct=dd}16
{SBWindowLevelRange_struct="start"d"end"d}
@40@0:8Q16@24@32
@"SBOrientationLockManager"
@32@0:8@16^v24
Q32@0:8@16@?24
v28@0:8q16i24
v36@0:8@16q24i32
@"<SBStarkBannerTargetObserver>"
@"_SBInnerFolderIconZoomAnimator"
@48@0:8@16@24{CGPoint=dd}32
v48@0:8^{CGPoint=dd}16^{CGPoint=dd}24@32@40
@"SBFolderIconView"
@"SBLockScreenTemperatureWarningView"
v40@0:8@"SBSystemServiceServer"16@"<FBSystemServiceClient>"24@?<v@?@"NSData">32
@"UIViewController<SBDashBoardPageViewControllerProtocol>"16@0:8
v24@0:8@"UIViewController<SBDashBoardPageViewControllerProtocol>"16
@"UIViewController<SBDashBoardPageViewControllerProtocol>"
v56@0:8@16@24@32{CGPoint=dd}40
v56@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<UIDynamicItem>"32{CGPoint=dd}40
v40@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<UIDynamicItem>"32
v56@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<NSCopying>"32{CGPoint=dd}40
v40@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<NSCopying>"32
v24@0:8^{CGPoint=dd}16
@"<UIDynamicItem>"
@"UIDynamicItemBehavior"
@"UICollisionBehavior"
@"UIGravityBehavior"
@"UIAttachmentBehavior"
v32@0:8@"SBLockScreenBuddyView"16Q24
v24@0:8@"FBApplicationPlaceholder"16
@"FBApplicationPlaceholder"
@"<SBApplicationPlaceholderDelegate>"
@"SBFMobileKeyBag"
B24@0:8@"SBApplicationPlaceholder"16
HorizontalScrollFailureRecognizer - begining recognition for multi-touch: %@
HorizontalScrollFailureRecognizer - touches BEGAN: touchesFromEvent: %@, knownTouches: %@
HorizontalScrollFailureRecognizer - touches MOVED: touches: %@, knownTouches: %@
HorizontalScrollFailureRecognizer - beginning recognitition due to location out of bounds.
HorizontalScrollFailureRecognizer - touches ENDED: touchesFromEvent: %@, knownTouches: %@
HorizontalScrollFailureRecognizer - touches CANCELLED: touchesFromEvent: %@, knownTouches: %@
FAILURE RECOGNIZER - averagePointFromTouches: %@
[SBAccessibilityMesaUnlockTrigger] unlocking base unlock trigger says we should
[SBAccessibilityMesaUnlockTrigger] unlocking because main page visible & no content above dashboard
[SBAccessibilityMesaUnlockTrigger] NOT unlocking because main page is not visible or content is above dashboard
[SBAccessibilityMesaUnlockTrigger] triggering because base unlock trigger fired: %@
Can't %{public}@ reachability on an unsupported device!
%{public}@ interactedSinceScheduling: %{public}@, interactedBeforePing: %{public}@, lastUserEventTime: %g, timeSinceStart: %g, initialKeepAliveTime: %g
Can't enter reachability mode with an SBAlert other than the new lockscreen active
Can't enter reachability mode with an SBAlertItem visible
Can't enter reachability mode with Siri active
Can't enter reachability mode while control center is visible
Can't enter reachability mode in a non-portrait orientation
Can't enter reachability mode while workspace is busy
Can't enter reachability mode temporarily for these reasons: %{public}@
Preferred languages have changed from '%{public}@' to '%{public}@'. Relaunching.
Unknown language: [NSLocale preferredLanguages] is nil.
Got a language change notification but we're not doing anything! Boot languages: %{public}@, new preferred languages: %{public}@
no lastRestoreIdentifier to read
could not read lastRestoreIdentifier : error=%{public}@
migrating because of version mismatch : build '%@' -> '%@' : restoreIdentifier '%@' -> '%@'
failed to move '%@' to lastRestoreIdentifierPath : error=%@
failed to set %@ on '%@' : error=%@
failed to write lastRestoreIdentifier to '%@' : error=%@
failed to create tempPath for lastRestoreIdentifier : '%@'
checking '%@' from %@ for defunct image caches
failed while enumerating %@ : url=%@ error=%@
successfully removed '%@'
failed while removing '%@' : error=%@
skipping %@ '%@'
failed while checking %{public}@ of '%@' : error=%@
failed to find cachesURL of '%@'
finished purging defunct image caches
not checking for defunct image caches because the last build is too recent
Startup orientation: %{public}@ (overlay orientation: %{public}@)
%s Unhandled signal: %d
Started swallowing events
Stopped swallowing events
Timed out fetching cloud data at startup.
Cleaning up photo-library for store demo-mode.
Loaded plugin: %{public}@ (%{public}@); Principal class: %{public}@
Failed to load plugin: %{public}@ (%{public}@)
Failed to acquire status bar style override assertion for recording
Language changed! while locked? %{public}@; for Setup? %{public}@
Unable to find the field test app.
Can't show lock screen camera grabber! %@
usagePage: 0x%x usage: 0x%x downEvent: %d
Car Siri Button: %@
Accessory Siri Button: %@
Unknown Siri Button: %@ ignored (source = %d)
Not handling voice command button (%d) because the assistantController didn't want it
CarPlay home button %@
Keyboard home button %@
Game controller home button %@
Unknown-source home button %@ -- ignoring
Ignoring unknown smart cover state
Ignoring flash button because it is coming from a carplay device
headset button down
headset button up
Ignoring headset press: already handled by alert
Unable to add external document (error: %@).
Unable to find the container associated with the given URL (url: %{public}@).
Unable to get coordinated access (error: %{public}@).
BUG: Midnight timer was in the past: %{public}@ (%f)
Posting SignificantTimeChangeNotification with message: %{public}@
Next DST Transition: %{public}@
locking after call
Object is within proximity notification: %s
Can't lock in response to case latch event due to demo defaults, syncing, resetting, or powering down
Pending device orientation change (to %d) because we're in the middle of a startup event.
Ignoring device orientation to: %d because we're device orientation locked to %d orientation.
Setting device orientation from backboardd to: %d
Vetoing device change because another orientation event came in later and hasn't run yet.
Updated mirrored display orientation to %d (message: '%{public}@')
Updated status bar orientation to %d (message: '%{public}@')
Updated status bar orientation to %d (message: '%{public}@') with animation
Updated device orientation from %d to %d (message: '%{public}@') %@ animation
Nudging device orientation but it's already %d (message: '%{public}@') %@ animation
Attempt to change active interface orientation from %d to %d (message: '%{public}@'), but changes temporarily disabled due to assertions held: %{public}@
Attempt to change active interface orientation which was already %d (message: '%@'), but changes temporarily disabled due to assertions held: %@
Active interface orientation changing from %d to %d  (message: '%{public}@').
Active interface orientation not changing to %d because we don't need to (message: '%{public}@').
Alert view is changing active interface orientation to %d
Wants orientation events is now %@, (message: %{public}@)
The top thing is %{public}@ and he wants orientation events: %{public}@ _wantsOrientationEvents: %{public}@
The top thing is STILL %{public}@ and he wants orientation events: %{public}@ _wantsOrientationEvents: %{public}@
%{public}@ result: intercepting menu button event and forwarding to %{public}@
%{public}@ result: ignoring because setup is active
%{public}@ result: activating setup
%{public}@ result: ignoring because we're in lost mode and have a foreground app that behaves like phone
%{public}@ result: ignoring because ending call for lock button press
%{public}@ result: top alert handled it: %{public}@
%{public}@ result: ignoring because an alert is showing
%{public}@ result: suspending all displays
%{public}@ result: ignoring because attempting to dismiss alert items
%{public}@ result: ignoring because we're rotating
%{public}@ result: dismissing app switcher
%{public}@ result: icon controller handled it
%{public}@ result: activating app switcher
volume event killed because SBSoundController handled it
sending volume buttonDown event to %{public}@
failing multitasking gestures for reason: %{public}@
Not allowing the scrunch because no system gestures are allowed
Not allowing the scrunch because there is an alert on screen that we can't dismiss': %d
Not allowing the scrunch because the workspace is locked
Not allowing the scrunch because the top app is: %@ stateSettingFinishedLaunchingFrontmost: %{public}@
Not allowing the scrunch because we are trying to dismiss the visible alert instead
Not allowing the scrunch because the app switcher is showing
Not allowing the scrunch because we have a lock state: %lu
Not allowing the scrunch because user is typing
Gesture began
Not allowing the app switcher gesture because no system gestures are allowed
Not allowing the app switcher gesture because switcher is showing
Not allowing the app switcher gesture because the icon controller is scrolling: %{public}@ hasAnimatingFolder:%{public}@
Not allowing the app switcher gesture because the workspace is busy: %{public}@ ignoringEvents: %{public}@
Not allowing the app switcher gesture because user is typing
Not allowing the app switcher gesture because there's pressure on the home button
Not allowing the app switcher gesture because the icon controller isScrolling:%{public}@ hasAnimatingFolder:%{public}@
Not allowing the app switcher gesture because icon force touch is peeking or showing
Not allowing the app switcher gesture because active interface orientation isn't portrait
Not allowing app switcher gesture because we have an alert up
Not allowing the switch app gesture because no system gestures are allowed
Not allowing the switch app gesture because we have lock state: %lu
Not allowing the switch app gesture because the workspace is busy
Not allowing the switch app gesture because there is an alert on screen that we can't dismiss': %d
Not allowing the switch app gesture because we have an overlay side element: %@
Not allowing the switch app gesture because have no active app
Not allowing the switch app gesture because the switch app list doesn't contain the current app: %@ list: %@ 
Not allowing the switch app gesture because user is typing
Gesture began with percentage: %f
told that the transaction %p completed
Using legibility settings: %@
Unable to launch url %{public}@ due to restrictions on %{public}@
Cannot open URL in %{public}@ while running setup.
Cannot launch %{public}@ while it is being updated
Cannot launch %{public}@ while a termination assertion is held on it
Cannot launch %{public}@ because it is being uninstalled
Attempted to launch an untrusted application %{public}@
Attempted to launch restricted application %{public}@
Attempted to launch application %{public}@ suspended, but it declares UIApplicationExitsOnSuspend
Attempted to activate application %{public}@ while device locked
Unable to activate stark alert - no stark alert manager: %@
SBWorkspaceActivateRemoteAlert: Attempt to activate a remote alert but there was no alert manager: forStark=%d, isStarking=%d, serviceName=%@, options=%@
SBWorkspaceActivateRemoteAlert: sending prepare -> serviceName=%{public}@ context=%@
SBWorkspaceActivateRemoteAlert: activating remoteAlert -> serviceName=%{public}@ options=%@
SBWorkspaceActivateRemoteAlert: remoteAlert already active - just sending prepare -> serviceName=%{public}@ context=%@
SBWorkspaceActivateRemoteAlert: re-activating existing in-call service -> %@
SBWorkspaceActivateRemoteAlert: re-activating already known remoteAlert-> %@
SBWorkspaceActivateRemoteAlert: Dropping request for remote alert that is already pending: forStark=%d, isStarking=%d, serviceName=%@, options=%@
SBWorkspaceActivateRemoteAlert: re-activating already known remoteAlert-> %@ : throwing away the one we fetched asynchronously-> %@
SBWorkspaceActivateRemoteAlert: you should supply a serviceName and a viewControllerClassName when attempting to present a remoteAlert -> serviceName=%{public}@ options=%@
Cannot activate a nil remote alert : workspaceType=%li options=%@
SBWorkspaceTerminateApplication: %{public}@: "%@"
SBWorkspaceTerminateAllApps: reason = "%@"; description = "%@"
Screen Sharing status bar tap not supported in the simulator
[SBWorkspace] SBWorkspaceNoteSystemBootComplete
[SBWorkspace] start
Prepared %{public}@ for transition request:
%{public}@
Running %{public}@ for transition request:
%{public}@
Executing request: %@
Application %{public}@ cannot be launched because it has been uninstalled.
Application %{public}@ cannot be launched because it has outstanding termination assertions.
Current transaction (%{public}@) will perform additional transition: %{public}@
Executing suspended-activation immediately: %{public}@
Memory pressure relieved.
Flagging %{public}@ for relaunch
Ignoring application exit of %@ because we are pending exit.
Process exited: %{public}@ -> %{public}@
Not actually relaunching %@ because it has outstanding termination assertions
%@ wants to be auto-relaunched after exiting
Memory level is not normal or this app was killed by jetsam. Pending auto-relaunch of '%@'.
Application exit detected and we need to return to the lock-screen!
Not creating an app relaunch transaction because %{public}@ is already running
No transaction needed for exiting app.
An application that SpringBoard is not tracking with bundle identifier %{public}@ just exited.
Received %{public}@ open application request for "%{public}@" from %{public}@.
Allowing openApplication unlock attempt because we're authenticated and %@: %@
Verifying request for <%{public}@> of extension type "%{public}@" with host <%{public}@>...
Extension type "<%{public}@>" predates 10.0 -- ignoring visibility check and allowing the openURL request.
Widget extension <%{public}@> visibility is: %{public}@
NotificationUI extension <%{public}@> visibility is: %{public}@
Extension <%{public}@> is not allowed to open URLs, period.
Extension <%{public}@> is considered foreground-running by assertiond.
The outermost host-process <%{public}@> has process-type "%{public}@"
Ignoring request from extension with a non-application host process!
Host application is running as a view service; considering it foreground for the purposes of this extension request.
Host application is NOT running as a view service.
assertiond says the extension is not foreground-running (state %u)
Allowing openURL request from extension <%{public}@> because it is visible (%d) or entitled.
Allowing openURL unlock attempt for un-entitled process because we're authenticated and %@: %@
alert: %@
Ignoring transaction watchdog while FrontBoard is being debugged.
Transaction watchdog fired. Asking for state capture info.
Ignoring transaction watchdog for reason: %@
Ignoring transaction watchdog because the transaction is complete.
Root transaction failed: %{public}@. Attempting to force us back to SB...
Root transaction complete: %{public}@
Running next transaction event synchronously.
carScreenController=%p did change from state=%i to state=%i
stark fixup: saving %{public}@ as exit app
stark fixup: removing end app for ui unlock
stark fixup: restoring %{public}@ from start app
stark fixup: ignoring %{public}@ from start app because it is not supported in stark
stark fixup: removing end app because not ui locked
stark fixup: ignoring start app because not ui locked
stark fixup: do nothing because transaction is somehow out of date
[SBStarkDisconnectWorkspaceTransaction] didChangeState created %@ for %@
stark fixup: saving start app as %{public}@
stark fixup: restoring %{public}@ from exit app
stark fixup: not restoring %{public}@ from exit app because we couldn't resolve the app
stark fixup: ignoring exit app because not ui locked
Got kIOMessageSystemWillSleep
Got kIOMessageSystemWillNotSleep
Got kIOMessageSystemWillPowerOn
Got kIOMessageSystemHasPoweredOn
found a scene that has disabled the idle timer (idleTimerDisabled: %d, isBeingDebugged: %d): %@
[snapshot] <%{public}@> Deferring downscaling of snapshot because protected data is unavailable.
Unable to delete snapshot due to incomplete context: %@
Unable to save snapshot due to missing information: %@
Unable to find context host manager for context: %@
Invalid scale specified for saving a snapshot: %@
[%{public}@] unable to snapshot scene with context: %@
[%{public}@] Finished writing snapshots after %.2f sec
%{public}@ will transition to visible %{public}@
%{public}@ did transition to visible %{public}@
Killing %{public}@ so that the launch test may begin
Transition request %@ was declined: %@
[%{public}@] Client process [%@] is not entitled to request application removability on behalf of another process. Ignoring request.
[%{public}@] Client process [%@] is not entitled to set application removability on behalf of another process. Ignoring request.
Lock button button down action handled with result: %{public}@
Lock button long press action handled with result: %{public}@
Lock button single tap action handled with result: %{public}@
%s Lock screen view controller is not of expected type: %{public}@
%s %{public}@
%s %{public}@; Ignoring unexpected ordering: currentActivationState=%{public}@
%s %{public}@ %lu
%s %{public}@; Ignoring unexpected ordering: SEO=%{public}@ from currentActivationState=%{public}@
%s %{public}@; SEO: %{public}@
%{public}@ is no longer recently updated.
%{public}@ is now recently updated.
%@egistering %@ for VoIP automatic relaunch.
Application '%{public}@' has failed to launch too many times. Not relaunching.
Force hiding the status bar: %d for %@ with animationSettings=%{public}@
Application state changed for %{public}@: %{public}@
Activation state changed for %{public}@: %{public}@
Siri is disabled, and we tried to launch X using Siri: %{public}@
__lastOperatorDefaults changed (via init) to %{public}@
cellular fallback is %{public}@
AVSystemController returned error: (%@, %li). Destroying connection. (Callstack: %{public}@)
CTServerConnection returned error: (%i, %i). Destroying connection. (Callstack: %{public}@)
SBTelephonyManager updated _callForwardingIndicator to %{public}@
Setting _CTServerConnection%{public}@TransmitPowerLimitPerBand()
CTServerConnection failed to acquire fastDormancySuspend assertion: (%i, %i)
[SBTelephonyManager] updateLocale: clearing country code info for non-cellular device
[SBTelephonyManager] _updateNetworkLocale: got updated country code: %{public}@
[SBTelephonyManager] _updateLastKnownNetworkCountryCode: got last known network country code: %{public}@
Locking after call
Dumping baseband state: %@
SBTelephonyManager updating _lteConnectionShows4G to %{public}@
SBTelephonyManager - queried for _suppressesCellDataIndicator with new state=%{public}@
SBTelephonyManager - queried for _suppressesCellDataIndicator with new state=%@
[SBTelephonyManager] _updateModemDataConnectionTypeWithCTInfo: - cellular data connection changed from %{public}@ to %{public}@
[SBTelephonyManager] _updateModemDataConnectionTypeWithCTInfo: - No data connection indicated in dataStatus dictionary -> %{public}@
NO WIFI BARS: current WiFi network name is %@
SBTelephonyManager-cellularRadioCapabilityIsActive - queried for _suppressesCellIndicators with new state=%{public}@
[SBTelephonyManager] registeredWithoutCellular: querying registrationInfo
SBTelephonyManager updated usingVPN to %{public}@
[SBTelephonyManager] _setIsInEmergencyCallbackMode: status changed from %{public}@ to %{public}@
SBTelephonyManager resetting _needsUserIdentificationModule (for postponement change)
[SBTelephonyManager] _cachedCTRegistrationCellStatus: querying registrationInfo
[SBTelephonyManager] _cachedCTRegistrationDisplayStatus: querying registrationInfo
[SBTelephonyManager] cell status changed from %{public}@ to %{public}@
[SBTelephonyManager] display status changed from %{public}@ to %{public}@
[SBTelephonyManager] forcedHome status changed from %{public}@ to %{public}@
[SBTelephonyManager] registration status changed from %{public}@ to %{public}@
SBTelephonyManager resetting _needsUserIdentificationModule (for carrier bundle change)
SBTelephonyManager resetting _lteConnectionShows4G (for carrier bundle change)
[SBTelephonyManager] operatorName changed from '%{public}@' to '%{public}@'
[SBTelephonyManager] SIM status changed from %{public}@ to %{public}@
[SBTelephonyManager] SIM status not changing (%{public}@) - firing notification anyway
SBTelephonyManager updated _needsUserIdentificationModule to %{public}@
Previous tethering state was %@ with %d devices connected; new state is %{public}@ with %d devices connected; updating UI.
(%{public}@) -> %{public}@
background CTServerConnection returned error: (%i, %i) in %s
SBTelephonyManager::_HideDataIndicatorChanged received status info -> %{public}@
[SBTelephonyManager] _SBEmergencyCallBackModeChangeHandler: could not understand payload for %@ -> %@
[SBTelephonyManager] registrationInfo is NULL - failing update
__lastOperatorDefaults changed (via ProviderNameChanged) to %{public}@
[SBTelephonyManager] _SignalStrengthChanged: notification error -> raw=%li bars=%li : %{public}@
[SBTelephonyManager] _SignalStrengthChanged: queried -> raw=%li bars=%li
__lastOperatorDefaults changed (via OperatorBundleChanged) to %{public}@
Data plan expiration did not include expiration date
Ignoring data plan expiration notification because autorenew is enabled
Unsupported combination of usage values (%{public}@=%{public}@, %{public}@=%{public}@, %{public}@=%{public}@)
Unknown data plan status type '%{public}@'
Ignoring unsuccessful data plan status (statusType='%{public}@')
Acknowledging I'm about to pass the EU Volume Limit
VolumeControl -- volume increment down:%d
VolumeControl -- volume decrement down:%d
_effectiveVolumeChanged for AVSystemController reason:%{public}@
Got a new EUVolumeLimit: %@
EU Volume Enforcement is now %@
Immediately setting screen blank state to %d
Scheduling deferred screen unblank because we're waiting for a CA commit
%s Setting prox sensor to: %s
%s factor,%f,duration,%f,permanently,%d,silently,%d
%s This view component configuration is unsupported
Background status assertion invalidated for scene: %{public}@
Asserting background status for scenes: %{public}@
[display:%@] [%@] Ignoring invalid snapshot action: %@
[display:%@] [%@] Got snapshot-perform request (%p) with context: %@
[display:%@] [%@] Snapshot request (%p) was invalidated before it completed!
[display:%@] [%@] Deleting any snapshot taken for now-invalidated action (%p).
Ignoring snapshot request from %{public}@ because it is not backgrounded.
[display:%@] [%@] Got snapshot-invalidate request with context: %@
Not fencing scene transistion with scene: %@ because it is backgrounded
[display:%@] [%@] Cancelling outgoing snapshot action (%p) because %@.
[display:%@] [%@] Cancelling incoming snapshot action (%p) because %@.
[display:%@] [%@] Requesting snapshot(s) because %@.
%{public}@: ERROR: No transition context exists for update to scene %{public}@; unable to include snapshot actions.
Ignoring unhandled action directed at scene %{public}@: %@
Authentication failure: %{public}@ is not permitted to call %{public}@
%{public}@ - failed to interrupt keybag refetch (requested from %{public}@)
%{public}@ - no keybag refetch active (requested from %{public}@)
Entitlement %{public}@ required to hide the car statusBar
app isn't starkCapable -> %s
Couldn't find app for token -> %s
Entitlement %{public}@ required to use %s
SBDaemonRequest: enabling %{public}@ for pid: %i (%{public}@)
SBDaemonRequest: disabling %{public}@ for pid: %i (%{public}@)
SBDaemonRequest: adding %{public}@ for pid: %i (%{public}@)
SBDaemonRequest: removing %{public}@ for pid: %i (%{public}@)
pid %i (%{public}@) requested screen undim
Unable to find icon with webclip identifier [%{public}@] for removal.
Assistant is unavailable at this time.
Attempt to active assistant by proxy for an application for car, but the corresponding application wasn't found: %{public}@
Attempt to activate assistant for car, but no car context was active.
Unsupported SBSAssistantActivationReason: %d
Assistant activated externally with event: %d 
Assistant changed it's mind about accepting the activation event: %d
Assistant doesn't want the activation event: %d
Assistant deactivated externally
Assistant could not be deactivated externally because it wasn't visible.
Entitlement %{public}@ required to use %s with %{public}@ option
Entitlement %@ required to use %s
Received request to present remote alert "%{public}@" from %@
%s %@
Disabling dynamic wallpapers and parallax for assertion with reason=%@
Re-enabling dynamic wallpapers and parallax for assertion with reason=%@
Ignoring change to typing-active state from application "%{public}@"
Entitlement required to use %s
Unable to serialize object: %@
Invalid argument: %@ must be an NSDictionary %{public}@
Invalid argument: %{public}@ must be an NSString %{public}@
Invalid argument: %@ must be an NSArray %{public}@
Invalid argument: %@ must be an NSString %{public}@
Entitlement %{public}@ required for %{public}@ to set suppression context on %{public}@ using %s
Deallocated while active
Beginning recognition with timeout: %f
Invalidated by caller
SinglePressReceived (timer active? %d)
DoublePressReceived (timer active? %d)
Recognized
Failed for %{public}@
Can't return an origin for icon not in this list: %@
Bounced an icon on a list that already had a bounced icon. Please report this
%{public}@ Lock screen view controller is not of expected type: %{public}@
Defering finalization of commit until %{public}@ can activate [or exit]: 
Allowing transaction to finalize it's commit, as %{public}@ finally activated.
Transaction ending because we were expecting %{public}@ to activate, but it exited instead.
Presenting a CFUserNotification on behalf of: %{public}@
Authentication failure: %{public}@ is not permitted to send CFUserNotifications
Creating timer:
%{public}@
securityDefaults dontLockEver is YES; setting totalInterval and warnInterval to NEVER_IDLE; setting timerMode to SBDashBoardIdleTimerModeDisabled
idleTimerDefaults disableAutoDimExists is YES; setting totalInterval and warnInterval to NEVER_IDLE; setting timerMode to SBDashBoardIdleTimerModeDisabled
MCFeatureAutoLockTime (%.2f) is lte MAX_TOTAL_INTERVAL (%.2f); setting totalInterval  to %.2f
MCFeatureAutoLockTime (%.2f) is gt MAX_TOTAL_INTERVAL (%.2f); setting totalInterval and warnInterval to NEVER_IDLE; setting timerMode to SBDashBoardIdleTimerModeDisabled
isRunningInStoreDemoMode is YES; setting warnInterval to NEVER_IDLE; setting timerMode to SBDashBoardIdleTimerModeDisabled
totalInterval (%.2f) is lt 30; applying factor (%.2f) to calculate warnInterval of %.2f
totalInterval (%.2f) is gt 30; subtracting delta (%.2f) to calculate warnInterval of %.2f
SBPrototypeControllerSettings preventLockover is YES; setting timerMode to SBDashBoardIdleTimerModeDisabled
totalInterval (%.2f) and/or warnInterval (%.2f) is not sane; setting totalInterval to %.2f and warnInterval to %.2f
totalInterval (%.2f) is float equals to 0; setting totalInterval to %.2f
warnInterval (%.2f) is float equals to 0; setting warnInterval to %.2f
after setup, warnInterval was %g; setting shouldWarn to NO
after setup, expireInterval is %.2f; shouldExpireAfterWarn is %s
after setup, shouldWarn is NO and expireInterval is NEVER_IDLE; setting timerMode to SBDashBoardIdleTimerModeDisabled
totalInterval (%.2f) is gte 0; setting totalInterval to at least minLockscreenDuration (%.2f);
duration is %{public}@; setting totalInterval to %.2f; setting timerMode to %{public}@
duration is %{public}@; leaving totalInterval calculation to unlock path
workspaceLockTime (%.2f) gte 0; setting totalInterval to %.2f
workspaceLockTime (%.2f) lt 0; setting totalInterval to NEVER_IDLE
workspaceDimTime (%.2f) gte 0; setting warnInterval to %.2f
workspaceDimTime (%.2f) lt 0; setting warnInterval to NEVER_IDLE
sbIsActive and mesaEnabled are YES; calculating totalInterval as half (%.2f) or MIN_TOTAL_INTERVAL_HOMESCREEN_MESA (%.2f), whichever is greater; totalInterval set to %.2f
isBatterySaverModeActive is YES; calculating totalInterval as min of totalInterval (%.2f) and MAX_TOTAL_INTERVAL_BATTERY_SAVER (%.2f); totalInterval set to %.2f
isBatterySaverModeActive is YES; calculating warnInterval as min of warnInterval (%.2f) and totalInterval - MAX_WARNING_INTERVAL_DELTA_BATTERY_SAVER (%.2f); warnInterval set to %.2f
isBatterySaverModeActive is YES and warnInterval (%.2f) lt MAX_WARNING_INTERVAL_DELTA_BATTERY_SAVER (%.2f); applying factor (%.2f) to calculate warnInterval of %.2f
totalInterval (%.2f) lte 30; applying factor (%.2f) to calculate warnInterval of %.2f
totalInterval (%.2f) gt 30; subtracting delta (%.2f) to calculate warnInterval of %.2f
Exception "%{public}@" encountered while decoding archive value for SBUserNotificationExtensionIdentifierKey: %{public}@
Unable to create remote view controller: %{public}@
Unable to find extension for identifier: "%{public}@" error: %{public}@
Unable to create file URL for sound path: '%{public}@'
Unable to set attribute key '%{public}@' to '%{public}@' on AVItem: %{public}@
Error creating AVItem: %{public}@
Sending back %d textField response(s) to alert item owner.
Converting unlocked alerts to locked alerts.
Converting locked alerts to unlocked alerts.
Received request to activate alertItem: %{public}@
Activation - ignoring activation attempt for %{public}@ because it's already presented by %{public}@.
Activation - Failed to activate %{public}@ because it's not allowed at this time for reason: %{public}@
Activation - Pending activation of %{public}@ due to reason: %{public}@
Activation - Presenting %{public}@ with presenter: %{public}@
Activation - Pending activation of %{public}@ because no presenter is capable of presenting it currently.
Activation - Presenter:%@ will present presentation: %@
Activation - Presenter:%@ did present presentation: %@
Will deactivate alertItem: %@ for reason: %{public}@
Deactivated alertItem: %{public}@
Deactivation - Presenter:%@ will dismiss presentation: %@.
Deactivation - Presenter:%@ did dismiss presentation: %@.
Notifying client of alert presentation: %@
Adding pend alert items reason: %@
Removing pend alert items reason: %@
Adding alertItemsSuppression assertion : %@
Failed to create alertItemsSuppression assertion for reason %{public}@
Removing alertItemsSuppression assertion : %@
SLM: alertItemDismissed : %p
SLM: dismissing alert for repop : %p
SLM: oldStatus=%{public}@ status=%{public}@ oldBricked=%i currentIsBrickedDevice=%i
SLM: dismissing alert : (status=%{public}@) %p
SLM: popping alert : %p
SLM SIM Status: updating from %{public}@ with %{public}@
SLM: prompt for unlock requested
SLM: [%p didDeactivateForReason:%i]
Unable to localize staticApplicationShortcutItems for %@ because we failed to create a bundle for %@
Unable to localize carDisplayName for %@ because we failed to create a bundle for %@
Unable to locate class for SBIconClass key %{public}@ for %{public}@
NKThrottle: setting _allowedContentNotificationsPerDay=%lu for app=%{public}@
Updating idle timer for reason: %@
Updating idle timer (but not active) for reason: %@
Removing idle timer for reason: %@
Adding idle timer disabled reason: %@
Disabling idle timer for reason: %@
Active idle timer: %{public}@
Removing idle timer disabled reason: %@
Reenabling idle timer as last reason removed: %@
Idle timer refreshed %{public}@
Idle timer expired %{public}@
Idle timer received user event %{public}@
Idle timer warned %{public}@
Unable to register for filesystem events: %{public}s
Unable to create a kqueue: %{public}s
%s %{public}@ to %{public}@
%s %{public}@ %@
SBWiFiManager: WiFi device is: %{public}@
SBWiFiManager-_powerStateDidChange
SBWiFiManager-_linkDidChange
SBWiFiManager-_primaryInterfaceChanged: marking current network as primary
SBWiFiManager-_primaryInterfaceChanged: current network is nil, marking previous network as primary
SBWiFiManager-_primaryInterfaceChanged: primary is wifi but no networks known - marking as not primary
SBWiFiManager-_primaryInterfaceChanged: wifi is no longer primary
SB RESTORE: SBRestoreStarted
SB RESTORE: SBRestoreEnded
SB RESTORE: beginRestoring %d
SB RESTORE: cancelRestoring %d
SB RESTORE: _notifyRestoreCanProceed %d
SB RESTORE: didEndRestoring %d
SB RESTORE: Error obtaining process list size
SB RESTORE: Error obtaining process list
SB RESTORE: BackupAgent not running
SB RESTORE: BackupAgent restarted
SB RESTORE: BackupAgent failed
Rejecting connection for status bar style overrides because caller isn't entitled
Error communicating with client: %{public}@
Loading default icon state from: %{public}@
Trying to reset root icon lists but the root folder controller already exists. Either someone forgot to call _prepareToResetRootIconLists or a second set of prepare/reset calls happened in the middle.
Relaying out icon model due to visibility changes requiring a relayout.
Icon isn't in an icon list
SBIconController: requesting delayed relayout because folder finished animating.
Checking restriction for uninstalling system apps. Apple account restricted: %i, iTunes Store account restricted: %i
Changing restriction for uninstalling system apps to %i (Apple account restricted: %i, iTunes Store account restricted: %i)
SBIconModel: delaying relayout because folder is animating or icon is dropping
SBIconModel: enqueuing relayout because icon is dropping when layout occurred (cleanup)
Icon state save prevented due to in progress restore
ERROR: We have no grabbed icon!
Paused over icon index = %lu; order = %@ (%d); icon = %@
Updating recipient icon
Removing placeholder icon
Succeeded in launching Notification Center for testing
Failed to launch Notification Center for testing: %{public}@
%@: set desired icon state
%@: unable to read desired icon state: %@
%@: unable to read current icon state: %@. Defaulting to platform state.
%@: using default platform state
%@: icon state was corrupt; reverting to the default platform state
%@: deleted desired icon state
%@: unable to delete desired icon state: %{public}@: 
%{public}@
%@: deleted current icon state
%@: unable to delete current icon state: %@
%@: desired icon state saved
%@: unable to save desired icon state: %@
%@: current icon state saved
%@: unable to save current icon state: %{public}@
%@: exported state: %@
%@: exported pending state: %@
%@: exported flattened icon state: %@
%@: icon state imported: %@
<%{public}@:%p> Now going RIGHT to %{public}@
<%{public}@:%p> Now going LEFT to %{public}@
<%{public}@:%p> Gesture ended with completionType: %ld
registering display=%{public}@ to screen=%{public}@ on init
binding display=%{public}@ to handler=<%{public}@:%p>
calling setup with display=%{public}@ for screen=%{public}@ : handler=<%{public}@:%p>
registering display=%{public}@ to screen=%{public}@ on connect
got a connect notification without a display : this shouldn't be possible - screen=%@
got a connect notification without a screen
unregistering display=%{public}@ for screen=%{public}@ on disconnect
calling teardown with display=%{public}@ for screen=%{public}@ : handler=<%{public}@:%p>
got a disconnect notification without a screen
Take screenshot: %d
Bluetooth device voice control initiated: %@
[%{public}@]: Removing bulletin %@ from section: %@
[%@]: Received unknown bulletin %@ for section: %@
[%@]: Clearing section: %@ with bulletins: %@
[%{public}@] Client process [%@] sent a message with an unknown format. Ignoring request.
Unable to send reset playback timeout command to Music app.
nowplayingapp pid returned by mediaserverd was not actually a running app - probably background suspended - so returning nil
Failed to acquire screen sharing status barstyle override assertion
Failed to acquire video out status bar style override assertion
Unable to send command %d to now playing app.
SBMediaController -- volume decrement down:%d
SBMediaController -- volume increment down:%d
mediaremoted says now playing app pid is %i.
[Stark] Running %@ for transition request: %@
Tapped: %@
Launching iPod for rentals
Animation ran with a nil animation block
[SBLockScreenPlugin] No plugin bundle found named "%@"
[SBLockScreenPlugin] No root view controller was returned from %@
Couldn't determine whether app %{public}@ provided health data: %@
Timed out waiting for HealthKit to respond
Unlock behavior configuration changed - new expected trigger is: %{public}@
_resetThread: beginning device reset.
_ResetWISPr: SecItemDelete failed: %ld
_ResetAdHocCerts: SecItemDelete failed: %ld
INITIALIZE: session started as user: %@ (multi-user session: %@)
LOGOUT: Logout attempted, but logout is not supported.
LOGOUT: Logout initiated automatically due to lost mode activation.
LOGOUT: Logout initiated by user.
LOGOUT: switch to login user call completed %@
LOGOUT: Forcing logout and disable of current user
LOGOUT: disable current user call completed %@
[SBUSerSessionController] willSwitchToUser: (currentUser? %@) will switch to user: %@
[SBUSerSessionController] willSwitchToUser: Exiting early for login session.
LOGOUT: Terminating running applications.
[SBUserSessionController] readyToSwitchToUser: (currentUser? %@) ready to switch to user: %@
[SBUserSessionController] readyToSwitchToUser: (isLogin: %d, isLogout: %d, currentUser? %@) switching to user: %@
[SBUserSessionController] readyToSwitchToUser: we're now ready for the user switch.
[SBUserSessionController] userSwitchBlockingTasksDidUpdate: bundleIDsToTasks = %@
LOGOUT: application exited: %@
LOGOUT: no more running applications pending; droping user switch assertion.
LOGOUT: still not switching; _terminatingApplications = %@
LOGOUT: displaying logout alert.
Installed apps did change.
Added: %{public}@
Removed: %{public}@
Modified: %{public}@
ERROR: Unable to load application (id=%{public}@) because SBApplication's initializer returned nil.
ERROR: Unable to load application because there is no bundle identifier (id=%{public}@) or the bundle is not an app bundle (url=%{public}@) for application proxy %@.
Reloading application states for '%@' as they have been updated.
*** Application failed to load in 'loadApplications': %{public}@
Reloading and rendering all application icons.
denying installation termination assertion for %{public}@ -- foregroundRunning:%d nowPlayingAndIsPlaying:%d recordingAudio:%d
not found from cache delete termination assertion for bundleID:%{public}@
denying cache delete termination assertion -- bundleID:%{public}@ appState:%{public}@
denying termination assertion -- bundleID:%{public}@ unknown reason:'%{public}@' 
termination assertion acquired (app not found):%{public}@
termination assertion relinquished: %{public}@
Previous screenshot(s) are still being written
sending screenshot action to scene: %{public}@
WARNING: Activating passcode compliance alert before existing compliance alert was dimissed
NOTE: Skipping presentation of passcode alert item (passcode modification not allowed by MC)
Dealying activating passcode compliance alert until after restore completed alert
%@ animated: %d requester = %@
FORCE -- %@ requester = %@
FORCE -- %@ requester = %@ stillActive = %d
%{public}@: Sending touch delivery policy %@ failed with error: %@
%{public}@: Sending cancellation touch delivery policy failed with error: %@
-- attempted to add event deferral to isolation tank for nil requester -- %@
-- attempted to remove event deferral to isolation tank for nil requester -- %@
[SBSnapshotTestRecipe] Sending %@ request with %@
[SBSnapshotTestRecipe] No active app main scene. Ignoring.
Today view is visible; WGWidgetGroupViewController says widget "%{public}@" is: %{public}@
Moved potentially bad item from %{public}@ to %{public}@: %{public}@
Failed to move potentially bad item from %{public}@ to %{public}@: %{public}@
setting lock screen scroll view interaction enabled (%d) possibly for no reason
setting lock screen scroll view interaction disabled (%d) for reason %@
DashBoard switching to SBDashBoardParticipantStateActive
DashBoard view is still present in -displayDidDisappear. SBDashBoardViewController appear state is %@.
DashBoard switching to SBDashBoardParticipantStateInactive
[UnlockDisabled] Returning YES because SBDashBoardCapabilityUnlock is restricted.
[UIUnlock] Can UIUnlock from source %ld?
[UIUnlock] Returning NO because unlock is disabled.
[UIUnlock] Returning NO because the slide up to app controller is sliding.
[UIUnlock] Returning %@ because %@.
[UIUnlock] Returning %@.
Handling transition request for %@ from %@...
Not creating home button passcode recognizer because mesa unlock is disabled.
Not creating home button passcode recognizer because we're already in bio-lockout status.
Updating behavior for: %@...
Ignoring update from inactive participant.
Updating appearance for: %@...
%@ %@ fromSender: %@
%@ says it would handle button: %@
[Transition] Ignoring transition began from %@ since there is an active transition from %@
[Transition] Will begin from %@
[Transition] Ignoring transition update from %@ since there is an active transition from %@
[Transition] Update from %@ with context %@
transitionProgress: %f, percentThreshold: %f
[Transition] Ignoring transition ended from %@ since there is an active transition from %@
[Transition] Will end from %@ with context %@
[Transition] New visible pages indexes: [%lu..%lu]
[Transition] Updated internal transition context: %@
[Transition] Did end transition from %@
Active uplugin changed it's appearance style: %@
Plugin changed presentation style from %d to %d: %@
Destination %{public}@ posting notification %@ to %{public}@
Destination %{public}@ updating notification %{public}@
Destination %{public}@ withdrawing notification %{public}@
Dismissing plugin view controller for plugin: %@
Dismissed plugin view controller: %@.
Presenting plugin view controller for plugin: %@
Presented plugin view controller: %@.
Updating page visibility...
Allowed view controller: %@
%@ Sending event: %@
%@ Event handled = %@
%@ Event delivered.
Ignoring appearance update for %@ because we are in a rotation.
Beginning appearance update for %@... --------
New presentation: %@
Appearance did change for reason [%@]...
Added: %@
Removed: %@
[Behavior] Notification behavior changed from %@ to %@ for reason: %@
[Behavior] Restricted capabilities changed from %@ to %@ for reason: %@
[Behavior] Proximity detection mode changed from %@ to %@ for reason: %@
[Behavior] Aggregate behavior did change: %@ for reason: %@
isScreenOn: %{public}@
Presenting charging UI.
Dismissing charging UI.
Display layout did change - has content above dashboard? %{public}@
[%{public}@] Client is not entitled to set bundleIdentifierToLaunch. Ignoring.
[%{public}@] Client is not entitled to set an icon using a custom (dynamic, non-masked) image. Ignoring.
[%{public}@] Client is not entitled to set a contact icon with custom image data. Ignoring.
[%{public}@] Client process [%@] is not entitled to request application shortcut items on behalf of another process. Ignoring request.
[%{public}@] Client process [%@] is not entitled to change dynamic application shortcut items on behalf of another process. Ignoring request.
Adding lock screen disable assertion %@
Removing lock screen disable assertion %@
%{public}@ on post for request %{public}@. uiLocked=%d activeAlertDestinations=%d shouldSuppressAlert=%d
Alerting on presentation for request %{public}@
Killing realerts for request %{public}@
Screen can be turned on for notification %{public}@: %d [ hasRequest: %d canTurnOnDisplay: %d isQuietModeEnabledAndActive: %d overridesQuietMode: %d caseIsEnabledAndLatched: %d isInLostMode: %d isDeviceUILocked: %d alertsWhenLocked: %d sentToLockScreenDestination: %d sentToBannerDestination: %d ]
Turn on screen for notification %{public}@ [ overridesPocketMode: %d screenIsOn: %d ]
Reset idle timer for notification %{public}@
Reset idle timer [ doFadeIn: %d ]
Reset idle timer
PocketStateManager: query state
PocketStateManager: query responded with state: %ld
PocketStateManager: turn on screen for out of pocket event before %lf
PocketStateManager: turn on screen for out of pocket event
About to take out a power assertion so we keep the device awake while we wait to see if it is removed from the pocket
Unable to take power assertion with name %{public}@ - returned %#x
Releasing power assertion: %@
pocketStateManager:didUpdateState:%ld
Delayed presentation timed out [%{public}@ -> %{public}@].
%s - vc request failed [%{public}@ -> %{public}@]: %{public}@
car now playing service terminated unexpectedly; attempting to reconnect immediately (%lu).
car now playing service terminated unexpectedly; throttling reconnection (%lu).
%s - vc didTerminateWithError: %{public}@
Scene was destroyed instead of created - finishing animation early
[SBHomeButtonPressMesaUnlockTrigger] unlocking because menuButtonDown: %d primed: %d
[SBHomeButtonPressMesaUnlockTrigger] not unlocking because not primed and menu button up
[SBHomeButtonPressMesaUnlockTrigger] screen off - resetting state
[SBHomeButtonPressMesaUnlockTrigger] unpriming due to significant user interaction
[SBHomeButtonPressMesaUnlockTrigger] setting menu button up and priming
Activating for medusa: left=%{public}@, right=%{public}@
Suspending for medusa: left=%{public}@, right=%{public}@
DashBoardView scrollView frame will change from %@ to %@
DashBoardView installed iris gesture recognizer
DashBoardView removed iris gesture recognizer
[SBStarkLockOutView] backToOEM: starkScreen: requesting car ui
SBWPA =BEGIN============================================
SBWPA UPDATE WHITE POINT ADAPTATION STRENGTH WITH DEFAULT DURATION
SBWPA UPDATE WHITE POINT ADAPTATION STRENGTH WITH ANIMATION SETTINGS
SBWPA =END==============================================
SBWPA UPDATE WHITE POINT ADAPTATION STRENGTH FOR APPLICATION TRANSITION
SBWPA TRANSITION WHITE POINT ADAPTIVITY STYLE
SBWPA%@
%{public}@ result: guided access
%{public}@ result: system gesture running
%{public}@ result: turning on the screen if necessary
Down action delivered to assistant.
Up action delivered to assistant.
%{public}@ result: assistant handled it
%{public}@ result: ignored; starting Siri preheat
%{public}@ result: exiting edit mode
%{public}@ result: failed preflight checks
%{public}@ result: external consumer (at guided-access priority)
%{public}@ result: ignored because %{public}@
%{public}@ result: dismissing modal banner
%{public}@ result: banner destination wants home button
%{public}@ result: notification center destination wants home button
%{public}@ result: dismissing command-tab UI
%{public}@ result: notification center handled it
%{public}@ result: control center handled it
%{public}@ result: dismissing spotlight/todayView
%{public}@ result: main display scene manager handled it
%{public}@ result: button consumer app handled it
%{public}@ result: Frontmost alert (%{public}@) handled it
%{public}@ result: attempting unlock with home button source
%{public}@ result: ignored because we don't unlock on button up
%{public}@ result: SBUIController handled it
%{public}@ result: SBUIController is busy - queued the home button event for later processing
%{public}@ result: dismissing powerdown
%{public}@ result: assistant handled it for car activation
%{public}@ result: assistant handled it for home button activation
%{public}@ result: voice control handled it
%{public}@ result: ignored because nothing handled it
%{public}@ result: blocked
%{public}@ result: in setup mode
%{public}@ result: lock-screen view controller handled it
%{public}@ result: ignoring because we're mid-remote alert animation
Nothing handled the double press, so pretending it was a single press...
%{public}@ result: external consumer
%{public}@ result: accessibility handled it
Performing up actions
Performing long press cancelled actions
Performing double tap up actions
%{public}@ result: reachability handled it
%{public}@ result: double-tap ignored because reachability is disabled
Sending assistant prepare activation event with interval %g
Sending assistant a cancellation pending activation event
First down to last up processed in %gs
XPC send success:%d client:%{public}@
Client priority %d < required %d: %{public}@
Client suspended: %{public}@
Sending event:%d to %{public}@
Sending %d
Sending any
Client doesn't handle this event
Client add: %{public}@
Client remove: %{public}@
Updated button event consumer:%{public}@
Removing button event consumer:%{public}@
Unsupported button type:%d
Authentication failure: %{public}@ is not permitted to call %{public}@. Ignoring request.
unknown button kind:%d
[%{public}@] Client process [%@] is not entitled to aquire hardware button assertion. Ignoring request.
Startup transition controller initialized with initial state: %@
Startup transition destination: %{public}@, with transition: %{public}@ (context=%{public}@).
Startup transition completed.
%s ERROR: icon of class %{public}@ cannot be added to this model: %@
IGNORING. Controller = %@; animating dropped icons = %d
%s - acquired process assertion: %@
Set wallpaper style state for priority %li for variant %{public}@ to %{public}@
Error creating wallpaper download cache directory: %{public}@
Disabling dynamic wallpapers and parallax for battery saver mode
Re-enabling dynamic wallpapers and parallax for battery saver mode
Flushing all wallpaper caches and rebuilding everything
Reloading wallpaper without flushing caches
Set wallpaper orientation source to %{public}@
Doing wallpaper rotation with alternate orientation source: %{public}@
Not accepting changes from alternate orientation source: %{public}@
Animating wallpaper orientation to %d in %1.2f
Not animating wallpaper orientation to %d in %1.2f because it's already in that orientation
Force wallpaper rotation with alternate orientation source: %{public}@
Class '%@' is not of expected class, '%{public}@'
reconfiguring due to AX prefs change
reconfiguring due to Siri prefs change
reconfiguring due to SB prefs change
allowReachability changed, requesting setFingerDetect:%d
tripleClickOptions:%@
maximumMultiplePressInterval override from AX is:%g
maximumLongPressDuration override from alerts is:%g
maximumLongPressDuration from plugins is:%g
multiplePressInterval: minimum > maximum, using maximum(%g): %g > %g
longPressDuration: minimum > maximum, using maximum(%g): %g > %g
new button definition:%{public}@
reconfiguring due to long press duration change
GR config: double press requires triple to fail
GR config: double press DOES NOT require triple to fail
GR config: single press requires double to fail
GR config: single press DOES NOT require double to fail
Long press cancelled
Accelerated single press recognizer should not begin -- 'hint' suppression assertions: %{public}@
Accelerated single press recognizer should not begin because currently editing
Accelerated single press recognizer should not begin because the lock button is down
Accelerated single press recognizer should not begin because triple click is enabled
Accelerated single press recognizer should not begin because click speed setting is too slow
Accelerated single press recognizer should not begin because an SBAlert is up
Accelerated single press recognizer should not begin because Control Center is up
Accelerated single press recognizer should not begin because Notification Center is down
Accelerated single press recognizer should not begin because a banner is showing
Accelerated single press recognizer should not begin -- in the app switcher
Accelerated single press recognizer should not begin -- transitioning from the app switcher
Accelerated single press recognizer should not begin -- system modal alert
Accelerated single press recognizer should not begin -- in Setup
Accelerated single press recognizer should not begin -- intercept app:%{public}@
Accelerated single press recognizer should not begin -- reachability is open
Accelerated single press recognizer should not begin -- external button consumers exist
Accelerated single press recognizer should not begin -- %{public}@ is visible
Accelerated single press recognizer should not begin -- icon force touch controller peeking or showing
Accelerated single press recognizer should begin -- cancelling app launch or folder open
Accelerated single press recognizer should not begin -- iconController is already transitioning
Accelerated single press recognizer should begin -- hasForegroundApplication
Accelerated single press recognizer should begin -- hasOpenFolder
Accelerated single press recognizer should not begin: not in a supported context
Ignoring menu button event because user default disables home button
Ignoring menu button event because we're in a startup transition: %{public}@
Ignoring menu button event because we have a pending restart transition: %{public}@
Ignoring double press menu button event for reason: %{public}@
Menu button held: sleeping %d started wake %d blocked %d gesture %{public}@ buddy mode %d
EMU terminate with count:%d
SenderID:%lX appears to be synthesizing home button events without press count/terminal support; SpringBoard is providing emulation for max count:%d
EMU down count:%d senderID:%lX
EMU eat up count:%d senderID:%lX
EMU handled:%d
Initial button down (state:%{public}@)
Initial button up (state:%{public}@)
Single press -- skipping single press actions due to long press
Accelerated single press up (state:%{public}@)
Normal single press up (state:%{public}@)
Long press (state:%{public}@)
Double press down (state:%{public}@)
Double press up (state:%{public}@)
Triple press up (state:%{public}@)
Double tap up (state:%{public}@)
Date view controller disabled updates: %@
Failed to load folder mask image '%{public}@'
SBLiftToWakeController: intentionally ignored transition: %{public}@
SBLiftToWakeController: screen turned off
SBLiftToWakeController: screen turned on
Lift to wake enablement changed to: %{public}@ (Available: %{public}@, UserPref: %{public}@)
SBLiftToWakeController: backlight changed: %@
Starting to observe the CMWakeGestureManager.
Stopped observing the CMWakeGestureManager.
SBLiftToWakeController: sending to observers: %@
SBLiftToWakeController: updated wake gesture state received:%d
SBLiftToWakeController: wake gesture state not handled -- were we supposed to receive %d ?
Enabling global orientation lock for user
Disabling global orientation lock for user
Enabling global orientation lock override for reason: %{public}@, new orientation: %d, forced %{public}@
Disabling global orientation lock override for reason: %{public}@
SB orientation locked: %{public}s; user lock: %{public}s, overrides: %{public}@
SB orientation lock change handler fired! is locked: %{public}@; performed update: %{public}@
No display name found for identifier (%{public}@): specify a display name with the '%{public}@' key in the widget's Info.plist
asked to transition from %@ to %@ but couldn't
_primary is %@
NOTE: %@/%@/%@
NOTE: converted layout to reference, %@ -> %@
NOTE: converted reference to layout, %@ -> %@
could not find icon for representation -> %@
could not generate folderIcon for representation -> %@
throwing out unknown icon representation -> %@
throwing out icon because its nodeIdentifier has already been unarchived : node=%@
throwing out icon because it masquerades as identifier=%@ : node=%@
throwing out icon because it isn't visible in the model : node=%@
throwing out masquerade because it has already been unarchived : identifier=%@
could not find masquerade icon for representation=%@
could not find icon for representation=%@
could not add icon to list -> icon=%@ list=%@
overflow list exceeds the maxListCount of the folder -> folder=%{public}@ overflowListRepresentation=%{public}@
list representation exceeds the maxListCount of the folder -> folder=%{public}@ listRepresentation=%{public}@
Representation of list should be an array: %{public}@
Representation of lists should be an array: %{public}@
Representation of folder should contain lists: %{public}@
Representation of dock should be an array: %{public}@
Representation of folder should contain a dock: %{public}@
could not construct folder for representation=%@
the node representation is in an unknown format -> %{public}@
Unable to snapshot screens for reason: %{public}@
[SBUIAnimationController] dealloc
[SBUIAnimationController] begin: willAnimate: %{public}@
Monitoring animation start dependency: %{public}@
[SBUIAnimationController] willComplete: Canceling animation
[SBUIAnimationController] noteAnimationDidFinish: Animation succeeded.
[SBUIAnimationController] noteAnimationDidFail: Animation failed.
%s UIPlugins require a host
%s plugin named "%@" is already loaded. Ignoring.
unloaded bundle: %{public}@
failed to unload bundle: %{public}@
%@ handled button down event from source %d
%@ handled button up event from source %d
%@ handled button single tap from source %d
%@ handled activation event: %{public}@
maximum reentrant queued button list actions exceeded (%d)
%s: Can't open %@ when device is locked, passcode locked or blocked.
%s This method doesn't do anything, and hasn't for a quite a while; please stop calling it.
%{public}@
Not allowing transition because: %@
Not allowing transition while locked because: %@
Not allowing transition because the NC is already showing.
Not allowing transition because a modal banner is showing.
Not allowing transition because the top alert suppresses CC.
Not allowing transition because the top app suppresses CC.
Not allowing transition because kbd says typing is active.
Not allowing transition because icon force touch is peeking or showing.
Not allowing show gesture because we are UI-locked and the lock screen view controller doesn't permit it.
shouldBegin: %{public}@ generallyAllowed: %{public}@ ccAllows: %{public}@ lockScreenAllows: %{public}@ withinActiveZone:%{public}@
%s - DO NOT CALL THIS: %{public}@
%s BSAction for continuation wasn't our expected type.
color context with dimensions %{public}@ @%fx does not fit in 'iconImages' memory pool - returning nil
Ignoring dismiss from event "%{public}@" because we are in emergency call mode.
Dismissing emergency dialer for event: "%{public}@"
Emergency dialer controller requested dismissal
Emergency dialer controller requested dismissal due to error: %{public}@
Activating emergency dialer controller...
Emergency dialer controller activation complete; success = %{public}@.
Deactivating emergency dialer controller
Updating for notification: %@
Now in emergency call mode: %{public}@; call active: %{public}@
No delegate specified for an SBIconViewMap.
Newsstand-%{public}@: resetting wake quota because app became frontmost
Newsstand-%{public}@: resetting wake quota for new content
NK push throttling has been disabled for '%{public}@'
Initialized %{public}@ with finger on: %{public}@
[%{public}@] dealloc
Received biometric event: %{public}@
[%{public}@] fingerOn
[%{public}@] fingerOff
[%{public}@] initial finger down has lifted
[%{public}@] authenticated: %{public}@
[%{public}@] changed to state: %{public}@ for reason: %{public}@
Could not find icon view in visible icon list or dock!
Invalidated icon zoom animation for reason: %@, stack=%{public}@
%{public}@ changing to unsupported mode '%{public}@', only supports '%{public}@'!
UIKitModalWillBeginPresenting: %@
UIKitModalWillBeginPresenting: Transition cancelled %@
rebuilding behavior for interaction change during view controller presentation
rebuilding behavior for view controller presentation
UIKitModalDidEndPresenting: %@
UIKitModalWillBeginDismissing: %@
UIKitModalDidEndDismissing: %@
UIKitModalDidEndDismissing: after CA commit
changedState: %@
shouldBegin: %{public}@ generallyAllow: %{public}@ allow: %{public}@
Removed disable coordinator assertion for reason: %@
Added disable wallet pre-arm assertion for reason: %@
Removed disable wallet pre-arm assertion for reason: %@
Removed disable Unlock assertion for reason: %@
Added disable Unlock assertion for reason: %@
Removed disable AutoUnlock assertion for reason: %@
Added disable AutoUnlock assertion for reason: %@
Received menu button single press
Received menu button double press
Ignoring reset request because state wouldn't change for reason: %@
Finger on
Finger off
Bio unlock
Identity match - while wallet pre-arm recognizer active
Identity match received while waiting for unlock.
Identity match - likely to be consumed by someone else (ie. wallet) because we aren't looking for it.
Biometric resource matching allowed did change to %@
Presenting wallet UI
Unlock behavior (%@) requests feedback: %@
Feedback request handled successfully.
Feedback request was dropped and unhandled.
Unlock behavior (%@) requests unlock attempt but we can't handle it right now because we're matching for PreArm.
Unlock behavior (%@) requests unlock attempt: %@
Unlock request succeeded.
Unlock request failed.
Denied unlock request from behavior (%@) because it specifies unhandled intent: %d
Mesa state changed to [%{public}@] for reason: %@
Mesa matching mode changed to [%{public}@] for reason: %@
Replaying pending unlock request because now we're available for match unlocks: %@
Not starting pre-arm recognizer because isWalletPreArmAllowed: %d, canTransitionToPreArm: %d
Pended unlock request: %@
Dropping pended unlock request because it expired: %@
Enabling auto unlock behavior based on current state.
Disabling auto unlock behavior based on current state.
delaying release of %@
performing delayed release of %@
Banners suppressed because active plugins suggest that's a bad idea.
Banners suppressed because the top display says not to: %@
%@Dequeing banner. Flags: suppressing: %d - enableDelay: %d - replaceDelay: %d - sound: %d - sticky: %d - busy: %d
Used pending banner item ahead instead of the banner queue: %@
Ignoring forced dismissal of a banner that was already dismissing. Dismiss reason: %li
Replace interval elapsed for context %@
Sticky banner item [%@] was overdue for dismissal but should appear now; aborting dismissal.
Sound did finish playing
Revealing context: %@
Hiding context: %@ for reason: %d
Pending sticky banner item for repop later: %@, reason: %d
Replacing old context: %@ with new context: %@
Set up banner dismiss timers for context %@
shouldBegin: %{public}@ generallyAllowed: %{public}@ allowed: %{public}@
touch: %@ not considered because we are showing a modal banner with a keyboard
touch: %@ is considered because is in the right place
touch: %@ not considered because it outside the allowed bounds for a banner dismiss
touch: %@ not considered because bannerHeight: %f view: %@
Presenting and expanding modal banner for notification %{public}@ on %{public}@
Presenting modal banner for notification %{public}@ action %{public}@ on %{public}@
Destination %{public}@ can receive notification %{public}@: %d [ stickyVisible: %d bannerDragged: %d inSetupMode: %d pendingBannerPresentation: %d shouldLongLookDestinationReceive: %d canLongLookDestinationReceive: %d canReceiveNotificationRequestIfLocked: %d]
Modifying notification %{public}@ in banner
Withdrawing notification %{public}@ from banner
Destination %{public}@ requesting permission to execute action %{public}@ with parameters %{private}@
Destination %{public}@ executing action %{public}@ with parameters %{private}@
Long look presented for notification %{public}@
Long look dismissed for notification %{public}@
Short look dismissed for notification %{public}@
User interaction ended
User interaction started
Destination %{public}@ received raise gesture
Destination %{public}@ is listening to raise gesture
Destination %{public}@ is now ready to receive notifications
Destination %{public}@ is now ready to receive notifications coalescing with %{public}@
post-banner
Destination %{public}@ received notification %{public}@
Forwarding notification %{public}@ to long look banner %{public}@
Banner for notification %{public}@ was dropped. suppressed: %d application: %d, notification center: %d, quiet mode: %d
Replacing banner for notification %{public}@
Presented banner for notification %{public}@ on %{public}@
Presented sticky banner for notification %{public}@ on %{public}@
resetting present timer %@
timer fired %@
timer should only fire while in short look
tried to start a timer that was not canceled %{public}@ notification %{public}@
started replace timer %@
started dismiss timer %@
canceling replace timer %@
canceling dismiss timer %@
present timer fired %@
Presentation timer should only fire with no banners
Dismissing banner for notification %{public}@
Entitlement %{public}@ required for action: %{public}@
Killing process with pid %i (bundleID: %{public}@, state: %@, foreground scenes: %{public}@) for view security
Killing unknown process with pid %i for view security: %{public}@ (result: %i)
Bulletin window busy for reason: %@
Bulletin window no longer busy for reason: %@
Bulletin window is no longer busy.
Not allowing gesture because NC is already showing (and the grabber isn't visible).
Not allowing gesture because CC is showing.
Not allowing gesture because the search etcetera isolated view controller is transitioning.
Not allowing gesture because banner is showing.
Not allowing gesture because blocking UI plugin (assistant?) is showing.
Not allowing gesture because top application suppresses NC.
Not allowing gesture because top alert suppresses NC.
Not allowing gesture because icon force touch is peeking or showing.
Not allowing gesture because we are locked and the lock screen view controller doesn't permit it.
Notifications: Tearing down Notifications window for client %@
Notifications: remaining clients: %@
%s ERROR: Could not open image "%{public}@" in the SpringBoard bundle.
Could not copy launch URL to desired URL before launch, with error = %{public}@
Attempting to enter switcher with display item (%@) not in app list.
Unable to create dispatch source for pid %d
Invalid daemon pid %d
%s: setting status bar alpha: 0
[SBScreenFadeAnimationController] _startFadeAnimationsForFadeIn: setting status bar alpha: %f
Update status bar: alarm=%@
SBLiquidDetectionManager received notification %s
SBLiquidDetectionManager is not supported on this device.
SBLiquidDetectionManager loaded accessory port wetness state: %{public}@
SBLiquidDetectionManager was unable to obtain the wet/dry state; notify error code %u.
SBLiquidDetectionManager updating status bar icon to visible: %{public}@
SBLiquidDetectionManager posting state did change to: %{public}@
updateMeshTransform: %.3f  =>   %.3f : %.3f : %.3f : %.3f : %.3f : %.3f   :   %.3f : %.3f : %.3f : %.3f : %.3f : %.3f
Will move from %{public}@ to %{public}@
%{public}@
Did move from %{public}@ to %{public}@
%{public}@
doubling SBWarningIdleTimer configuration as user unwarned at %.2g seconds, which is within %.2g seconds
reverting to original SBWarningIdleTimer configuration as user unwarned at %.2g seconds, which is outside %.2g seconds
reverting to original SBWarningIdleTimer configuration as we have expired
Overlay user switch mismatch due to being inside a login session and booting with the login overlay.
Overlay user switch mismatch due to being inside a user session and booting with the logout overlay.
Gesture failed because there was too much movement down the screen
Assistant shouldn't enter because: %@
Assistant shouldn't enter because the plugin couldn't be loaded
Not handling voice command button %d because the assistantController didn't want it
screen=stark : animation=%ld factory=%@
screen=main : factory=%@
%s Assistant failed to load!
Siri view will appear.
Siri view did appear.
Siri view will disappear.
Siri view did disappear.
Not activating assistant from ear gesture, prox active: %c, assistant active: %c
Not activating assistant in stark mode because stark is not active : event=%i state=%i
Ignoring assisted tel: URL because assistant is dismissing or not visible
[SBAssistantController] uiPlugin launchApp: starkScreen: borrow: %p - %{public}@
[SBAssistantController] uiPlugin launchApp: starkScreen: borrow release: %p - %{public}@
Failed to add coordinated presenting controller (%@)
%@ local gesture (%@)
Invalid coordinated presenting controller priority (%ld)
%s: Zone (%@) %@ contain location (%@) for controller with ID '%ld'
Invalid coordinated presenting controller identifier (%ld)
%s: Transitioning from '%@' to '%@'
%s: Resetting gesture sequence
%s: canceling gesture %@ on controller %@
%s: Allowing gesture (%@) to begin (obtained controller: %@, current controller: %@).
%s: Not allowing gesture (%@) to begin due to current gesture state (%@) or controller (obtained controller: %@, current controller: %@).
%s: Aborting current animation for controller %@.
%s: state=UIGestureRecognizerStateBegan
%s: state=UIGestureRecognizerStateChanged
%s: state=UIGestureRecognizerStateEnded
Tap gesture not possible (state=%ld), disabled (enabled=%@), or period has elapsed (%@).
%s: state=%ld
Fade icon animator was not attached to heierarchy!
Passcode locking if necessary, because we're transitioning at boot to the lockscreen .
SBSoundController: not playing sound - environments=%i allowed=%i -> %{public}@
Play sound: %{public}@
%s doesn't know how to play this sound type: %{public}@
SBSoundController: %{public}@ sound - environments=%i -> %{public}@
SBSoundController: stopping sound -> %{public}@
%s doesn't know how to kill this sound type: %{public}@
SBSoundController: stopping all sounds
SBSoundController: stopped all sounds
Volume button down
MaxDuration reached for AVController: %@
Stop %{public}@ with AVController: %{public}@
No alert sound found at path '%{public}@'
Play SystemSoundID: %ul
Failed to register a completion handler for sound: %{public}@
Could not load ringtone '%{public}@' for sound -> %{public}@
failed to correctly generate avItem from song path '%{public}@' - %{public}@
%s : Unable to set attribute key '%{public}@' to '%{public}@' -> %{public}@
Item will change with AVController: %{public}@
Play AVItem %{public}@ with AVController: %{public}@
Failed to play alert with -[TLAlert playWithCompletionHandler:] for sound: %{public}@ error: %{public}@
Ringer was muted.
SBSwitcherForcePressSystemGestureTransaction: gesture: %p state: %{public}@
Gesture changed percentage: %f
Beginning loading remote view controllers for banner context %@
Remote view controllers loading timed out for context %@
Finished loading remote view controllers for context %@
Tried to transition to an unknown action behavior: %@
(Display - %{public}@) Not allowing system gestures because we are scrolling the icon controller
(Display - %{public}@) Not allowing system gestures because we are scrolling a folder
Read current icon state from disk.
Read desired icon state from legacy user-defaults [1].
Read desired icon state from legacy user-defaults [2].
Read desired icon state from disk.
formattedICCID: %{public}@
sim status changed %{public}@
ignoring attempt to reactivate the topAlert -> %@
activating alert: %@
deactivate called on unknown alert: %@
deactivating alert: %@
Dismissing %{public}@ due to device lock or block
Destination %{public}@ performing %{public}@ action for notification %{public}@
Destination %{public}@ skipping performing %{public}@ action for notification %{public}@ because it is nil
Destination %{public}@ received volume changed event for notification %{public}@
Destination %{public}@ received lock button pressed event for notification %{public}@
Destination %{public}@ received %{public}@ event for notification %{public}@
Destination %{public}@ received primary button tap event for notification %{public}@
Destination %{public}@ received secondary button tap event for notification %{public}@
Destination %{public}@ presenting notification %{public}@
Destination %{public}@ does not support updating notification %{public}@
Assistant handled wired mic button tap
Telling siri to activate for BTHeadset
Telling VC to activate for BTHeadset
Lock screen alarm did appear: bulletin item=%@
Update content for lock screen alarm: bulletin item=%@
[%{public}@ already performed action
[.plist ingest] [%{public}@] Incorrect %{public}@ type (requires NSString) or invalid value ('%{public}@'), skipping...
%{public}@
[.plist ingest] [%{public}@] Incorrect %{public}@ type (requires NSString) in ('%{public}@'), skipping...
%{public}@
[.plist ingest] [%{public}@] Incorrect combination of %{public}@ and %{public}@ ('%{public}@' and '%{public}@'), skipping...
%{public}@
[.plist ingest] [%{public}@] Incorrect launchImageInfo format (requires NSDictionary) in ('%{public}@'), skipping...
[.plist ingest] [%{public}@] Incorrect launchImagesInfo format (requires NSArray) in ('%{public}@'), skipping...
Today view content views did change! %@
client did disconnect:%{public}@
[defaultImage; snapshotView sync] no snapshot info for [%@]
[defaultImage; snapshotZoomUpView sync] no snapshot info for [%@]
[defaultImage; snapshotView] grabbed cached snapshot for %{public}@
[defaultImage; snapshotView async] no snapshot (or default image) for [%@]
[defaultImage; snapshotView async] Couldn't create image for astc snapshot [%@] [%@]
[defaultImage; snapshotView async] Couldn't create image source for astc snapshot [%@] [%@]
[defaultImage; snapshotView async] Couldn't decode image [%@] [%@]
[defaultImage; snapshotView async] Couldn't generate image from PNG provider for [%@] [%@]
[defaultImage; snapshotView async] Couldn't create data provider for async image loading [%@] [%@]
[defaultImage; snapshotView async] generated snapshot image from file at %{public}@
[defaultImage; snapshotView async] couldn't generate rotated image for file at %{public}@
[SBLockScreenPluginManager] Ignoring event %d because plugins are disabled.
<%{public}@> created
<%{public}@> dealloc
<%{public}@> viewWillAppear
<%{public}@> viewDidAppear
<%{public}@> viewWillDisappear
<%{public}@> viewDidDisappear
<%{public}@> didDeactivate
<%{public}@> didResignActive
<%{public}@> didBecomeActive
<%{public}@> willActivateApplication
<%{public}@> taking authentication sustain assertion
<%{public}@> didDeactivateApplication
<%{public}@> releasing authentication sustain assertion
<%{public}@> mode change request to %{public}@ (fromClient: %{public}@) for reason: %@
<%{public}@> mode changed to %{public}@
<%{public}@> mode change request vetoed by delegate
<%{public}@> taking resign active assertion
<%{public}@> releasing resign active assertion
[SBHomeButtonPressSpeedMesaUnlockTrigger] not unlocking because the timer is running
[SBHomeButtonPressSpeedMesaUnlockTrigger] timer isn't running, unlocking: %d
[SBHomeButtonPressSpeedMesaUnlockTrigger] screen off - resetting state
[SBHomeButtonPressSpeedMesaUnlockTrigger] menu button down - starting timer for unlock and priming
[SBHomeButtonPressSpeedMesaUnlockTrigger] finger off - no longer primed
[SBHomeButtonPressSpeedMesaUnlockTrigger] unlocking because match occurred while timer was running and finger is still on
[SBHomeButtonPressSpeedMesaUnlockTrigger] not unlocking because match occurred while timer was running: %d finger is still on: %d
Base unlock behavior received biometric event: %{public}@
requesting feedback: %@
requesting unlock with intent: %d and feedback: %@
trigger fired - requesting unlock with intent: %d and feedback: %@
Denying %{public}@ because search etc navigation controller isn't appear(ing|ed)
Denying %{public}@ because screen is off
creating sceneManagerReference=%{public}@
purging a defunct sceneManagerReference=%{public}@
preferred scene level %f is out of bounds; setting level to default for %@
process (%{public}@) requested scene creation -> %{public}@
process (%{public}@) requested scene creation with identifier "%@" but a scene with that identifier already exists
process (%{public}@) requested scene creation but is not a daemon or lacks the entitlement
process (%{public}@) requested scene destruction -> %{public}@
process (%{public}@) requested scene destruction for a scene that it doesn't own -> %{public}@
process (%{public}@) requested scene destruction for a scene that doesn't exist (%{public}@)
purging disconnected sceneManagerReference=%{public}@
purging invalidated sceneManagerReference=%{public}@
SynchronizeCloudCriticalData - operation started: %{public}@
SynchronizeCloudCriticalData - operation ended: %{public}@ (duration: %fs)
Present item if needed on %@: %@
Add bulletin to Lock Screen: %@
Present item on %@: %@
Modify item on %@: %@
SBLockScreenNotificationListController: Attempting to modify a bulletin I don't have
SBLockScreenNotificationListController: Attempting to remove a bulletin I don't have
Ignoring deactivation request for unknown alert item %@
not deactivating system alert for alert %@
Toggled banner enablement in the lockscreen: %@
(Display - %{public}@) Not allowing system gestures because: %@
(Display - %{public}@) Not allowing system gestures because accessibility has disabled them
(Display - %@) Enabling System Gesture Type: %{public}@ - %@
(Display - %@) Disabling System Gesture Type: %{public}@ - %@
%s: (Display - %@) - %@
%s requesting SBUISound for unknown BBSoundType -> %@
Play sound for bulletin: %@
Warning: Could not find a UIScreen associated with this FBSDisplay: %{public}@ so using the CADisplay bounds: %{public}@ screens; %{public}@
SBCardItemsController connection interrupted.
SBCardItemsController connection invalidated.
Received set card item: %@ from: %@
Activating card item: %{public}@
Updating card item: %{public}@
Deactivating card item: %{public}@
Card while locked restriction changed: %d
%f MesaPerf %s (mach: %f)
[defaultImage] <%{public}@> default image name %{public}@ calculated from %{public}@
[%@] savedCachedGUIDString=%@ currentCacheGUID=%@ savedSequenceNSNumber=%@ currentSequenceNumber=%li savedIngestorVersionNSNumber=%@ currentIngestorVersion=%li dataStore=%@
[.png ingestor] [%{public}@] Resetting ingestion status.
[legacy ingest] [%{public}@] Candidate isn't a string: %{public}@, skipping...
[legacy ingest] [%{public}@] Invalid size modifiers for %{public}@, skipping...
[legacy ingest] [%{public}@] Invalid scheme ('%{public}@') not declared in plist for %{public}@, skipping...
[legacy ingest] [%{public}@] Extranenous content ('%{public}@') left over after processing permitted modifiers in %{public}@, skipping...
[legacy ingest] [%{public}@] Need to load the image to get size for %{public}@
[legacy ingest] [%{public}@] going to save %{public}@
[legacy ingest] [%{public}@] Found no candidate PNGs...
[.plist ingest] [%{public}@] Incorrect image path type (requires NSString) in ('%{public}@'), skipping...
%{public}@
[.plist ingest] [%{public}@] going to save %{public}@
[.plist ingest] [%{public}@] Found no candidate plist entries...
Prox state changed: %@
%{public}@: Adding content view controller %@ (animated: %{public}@)
%{public}@: Removing content view controller %@ (animated: %{public}@)
%{public}@ reflowing for appearance update from %{public}@
%{public}@ - Sending event %{public}@ to non-active content view controllers: %@
%{public}@: Got signal: %@
%{public}@: Dismissing content view controller %@
%@: Presenting content view controller %@
%@ updating %@ with %@
%@ aggregated %@ by adding %ld regions
    %@
Hosting app view because app is activating...
%@ %@
%@ animated: %@
%@ reason = %@
%@ presented = %@
View %@ intersects %@.
Hiding view %@ because it intersects %@ within %@
Showing view %@ because it doesn't intersect any regions within %@.
%@: Ignoring behavior update from %@.
%@: Ignoring appearance update from %@
Attempting to rotate active interface orientation following window (%@) to orientation: %d from orientation %d.
Really rotating active interface orientation following window (%@) to orientation: %d.
[%{public}@] Wiping snapshot manifest...
Enabling home screen icon rotation for reason: %{public}@
Disabling home screen icon rotation for reason: %{public}@
Nudging home screen window orientation because icon rotation changed.
Re-locking device because device coherency check failed for transaction %@. Active application: %@
Ignoring too long suspension animation delay %f for %@
%@ debugName: %@
Setting interface orientation for app at launch to %d for %@
Dismiss resize UI (animated: %u, manager: %@)
Can't dismiss the resize UI manager
Bail out of resize UI
Resize gesture finished with state %li in region "%@"
Workspace transaction already running; will need to wait until that is done to process gesture finish
Re-running gesture finish now that the previous workspace transaction is done
Need to wait to perform final action
Re-running gesture finish now that previous final action is done
Perform final action: %{public}@
Changing affected layout roles to "%{public}@" (was "%{public}@")
Child transation for final action '%{public}@': %@
Preparing to execute child transation as part of final action '%{public}@' with UI manager %@: %@
Child transation completed as part of final action (%{public}@): %@
Detected out-of-date resize manager while waiting for UI to be ready to execute child transaction as part of final action '%{public}@'
Detected out-of-date resize manager as part of final action '%{public}@'
Finished final action '%{public}@'
Animate element views for final action: %{public}@ (Primary controller: %@, side controller: %@)
Restart resize UI
New gesture identifier: %lu
Reusing resize UI manager: %@
Making new resize UI manager: %@
Adding child transaction: %@
Long-press pin timer did fire
Pin/unpin tap timer did fire
Begin transaction
Completed transaction
Resize UI Manager %@ will change display mode of app controller %@ to %@
Resize UI Manager %@ will change to state %@
Gesture ended with completionType: %ld cumulativePercentage: %f
Gesture cancelled
Setting app interrupted by phone: %@
View Service terminated with error: %@ -> %@
Needs to synchronize cloud critical data? %@
%{public}@ took %fs
%s: In setup mode. At end of transaction %@. activeAlert = %@ activeApplication = %@. Forcibly launching setup.
Ignoring lock button event because object in proximity
Ignoring lock button events because we're in a startup transition: %@
Ignoring lock button event because we are pending a restart.: %@
Lock button down: state=%d
Lock button button down action handled with result: app handled button down event: %@
Lock button button down action handled with result: button down pre-actions handled it
Lock button single press: state=%d
Lock button single press recognized.
Lock button single press action handled with result: sending button event to intercepting client: %@
Lock button single tap action handled with result: single tap pre-actions handled it.
Lock button long press: state=%d, duration: %f
Lock button long press recognized.
Long press canceled
%{public}@layer: %{public}@, clipsToBounds: %d, bounds: %{public}@
Entitlement %{public}@ required to create remoteAlert with definition=%{public}@
SBSRemoteAlertDefinition required to create remoteAlert : definition=%{public}@
Thermal controller initialized: %{public}@
notify_register_check(kSunlightState) failed
Adding thermal warning assertion : %@
Failed to create thermal warning assertion for reason %@
Removing thermal warning assertion : %@
Will toggle bricked state to: %{public}@
Unable to change CT registration status. _CTServerConnectionCreate() failed.
Did toggle bricked state to: %{public}@
Lock screen notification table view is being asked for a cell with no corresponding item.
17292282: Current count (%ld) not what was expected (%ld + 1)!
Adding view controller to pending transition list for presentation (animated? %d): %@
Adding view controller to pending transition list for dismissal (animated? %d): %@
Set new current transition: %@
We have a current transition on-going; attempting to pend the next operation.
Found a previously queued activation for this view controller (%@), and this is a dismissal (%@), so removing both from the pending queue.
No current transition is on-going, but pending it for immediate execution.
Beginning processing add view controller: %@
Finished processing add view controller: %@
Beginning processing remove view controller: %@
Finished processing remove view controller: %@
Nothing to process.
Unable to consume next transition event yet due to on-going current transition.
Really begin presenting view controller: %@ (presentingVC = %@)
Really finished presenting view controller: %@
Current view-controller is already presented, so we have nothing to do.
Need to dismiss current presented view controller (%@) in order to present ourself (%@)
No current presented view controller, presenting straight away.
Really begin dismissing topmost view controller: %@
Really finished dismissing topmost view controller: %@
There is no presented view-controller to dismiss.
Calling out to delegate for willPresent: %@
Calling out to delegate for didPresent: %@
Calling out to delegate for willDismiss: %@
Calling out to delegate for didDismiss: %@
%{public}@ is listening to raise gesture
%{public}@ stopped listening to raise gesture
%{public}@ received raise gesture
Destination %{public}@ handled home button tap dismissing long look
Destination %@ handled home button tap dismissing long look
Destination %{public}@ clearing all notifications because we were torn down
%{public}@ clearing notifications; includePersistent = %d
Expanding hidden preview notifications for %@
Coalescing hidden preview notifications for %@
Coalesced hidden preview notification request %{public}@ with content provider = %@
Coalescing notification request %{public}@ with content provider = %@
Destination %{public}@ clearing all non-persistent notifications because notification center presented
skipping stark session protocol that isn't of type string: '%{public}@'
[SBStarkScreenController] initWithConfiguration: starkScreen: taking
[SBStarkScreenController] tearDownAndInvalidate: starkScreen: borrow release: %p - %{public}@
ignoring siri activation request : screen=%{public}@ state=%i
[SBStarkScreenController] handleMenuEventAndTakeScreen: starkScreen: taking for lock toggle
[SBStarkScreenController] handleMenuEventAndTakeScreen: starkScreen: requesting car ui for lock toggle
[SBStarkScreenController] handleMenuEventAndTakeScreen: starkScreen: taking
[SBStarkScreenController] takeScreenIfNecessaryForTopDisplayActivation: starkScreen: taking
[SBStarkScreenController] setSiriState: starkScreen: borrow release: %p - %{public}@
[SBStarkScreenController] setSiriState: starkScreen: borrow: %p - %{public}@
[SBStarkScreenController] _createFakeIconOperationController: starkScreen: requesting car ui
Removing AC_BACK requester %@
Adding AC_BACK requester %@
[SBStarkScreenController] willActivateAlert: starkScreen: borrow: %p - %{public}@
[SBStarkScreenController] didDeactivateAlert: starkScreen: borrow release: %p - %{public}@
Not handling Stark Siri button because the assistantController didn't want it
CarPlay Dock item activated with context: %@
[SBStarkScreenController] iOSUIRequestedForApplicationURL: starkScreen: taking
iOS CarPlay UI requested with a blank URL=<%p:%{public}@ %{public}@>
SiriRequestedAction: %d
----BEGIN IDLED----
----END IDLED----
----BEGIN UNIDLED----
----END UNIDLED----
----BEGIN PRESENCE TRIGGERED----
----END PRESENCE TRIGGERED----
----BEGIN PRESENCE EXPIRED----
----END PRESENCE EXPIRED----
Previously hidden alert has been reactivated; unhiding it
Unable to acquire assertion for UIStatusBarStyleOverrideCarPlay
brought up a new car screen controller=%p for display=%{public}@
cannot bring up car screen because a controller already exists for display=%{public}@
cannot bring up car screen for a nil display
cannot bring up car screen for a nil device
tearing down car screen controller=%p for display=%{public}@
unhandled screen connection event (%i) on screen=%{public}@ display=%{public}@
%{public}@: The total number of SBAppSwitcherSnapshotView instances (%d) exceeds the number allowed on this device (%d). This shouldn't happen under normal conditions, and likley indicates that there is a bug in the logic for purging snapshots that are not visible via this method.
Failed to load remote view service: %{public}@. %@
AppLink from escape button didn't contain an URL: %@
Not fencing scene transistion with scene: %{public}@ because it is deactivated for system gestures
Scene %{public}@ is setting idleTimerDisabled to: %s%s
Got a device orientation change, updating from %d to %d
Requesting scene rotate transaction from %d to %d
Requesting null layout transaction for rotation from %d to %d
Not updating foreground app scenes to %d (%{public}@) because %{public}@
Scene %{public}@ is changing level to: %f
[SBStarkNotificationWindow] dealloc: starkScreen: borrow release: %p - %{public}@
[SBStarkNotificationWindow] notificationVC willDisplayBannerView: starkScreen: borrow: %p - %{public}@
[SBStarkNotificationWindow] notificationVC stateDidChange: starkScreen: borrow release: %p - %{public}@
Updated widgets: %{public}@
Adding motion gesture observer %@
Removing motion gesture observer %@
Notifying observer: %@ of raise gesture
Adding motion gesture manager with priority %ld
Received gesture type %ld
Removing motion gesture manager
<%{public}@:%p> gesture: %p state: %@ cumulativePercentage: %f
Gesture ended with completionType: %ld
Adding status bar disable alpha change assertion: %@
Removing status bar disable alpha change assertion: %@
adding status bar settings assertion: %@
removing status bar settings assertion: %@
Evaluate status bar settings. new: %f, current: %f, actual: %f
Changing status bar alpha for combined settings: %@
Changing status bar style for combined settings: %@
Suppressing status bar %{public}@ change due to outstanding disablement assertions: %@
Shutdown requested for reason: %@
Reboot requested with context: %@
Restart with transition request: %@
Restarting for reason "%@" on behalf of %@
asked to transition from %{public}@ to %{public}@ but couldn't
_primary is %{public}@, _visible is %{public}@
pop from %@ to %@
to frame: %@ -> %@
from frame: %@
reappearing bc frame: %@
push from %@ to %@
to frame: %@
from frame: %@ -> %@
disappearing bc frame: %@
side app frame: %@
make side app primary from %@ to %@
side frame: %@
rotating from %@ to %@, angle will be %f
We don't know how to handle this rotation case. Could be a 360 or something.
primary frame: %@-> %@
side frame: %@-> %@
breadcrumb frame: %@-> %@
new primary frame: %{public}@, new side frame: %{public}@
_remoteAlertHostViewController can't yet set allowsBanners=%i
_remoteAlertHostViewController can't yet set dismissalAnimationStyle=%i
%s requesting remote alert for %@ - %@
[%@] Error configuring completion block: error=%@
[%@] Configuration completion block called.
%s connected to %@
%s error requesting <%@:%@> -> %@
error from prepareForActivationWithContext:completion: - error=%@ remoteAlert=%@
_remoteAlertHostViewController did set dismissalAnimationStyle=%i
%s %@ -> %@
Transition received: %{public}@
Ignoring transition -- prox is active
Ignoring transition - policy aggregator denied with with reason: %@
Unknown transition!
Attemping unlock for transition sleep -> wake
Resetting idle timer for transition sleep -> wake
Resetting lock screen idle timer for transition wake -> wake
Resetting idle timer for transition wake -> wake
Turning screen off for transition wake -> sleep
Not turning screen off for transition wake -> sleep because gestureWokeScreen: %d isLockScreenMainPageVisible: %d idleTimerRunning: %d significantUserInteractionOccuredSinceWake: %d
Destination %{public}@ modifying notification %{public}@
Destination %{public}@ received section settings for %{public}@
%{public}@: unanticipated reload required for operation: %{public}@
Please file a radar on 'PEP NotificationCenter | 1.0' and include the syslog.
%{public}@: ordered section IDs: %{public}@
%{public}@: rows for sectionID '%{public}@': %{public}@
%{public}@: table section count: %ld
%{public}@: table row count for section '%ld': %ld
%{public}@: table view requested cell for %{public}@ section (%ld), row (%ld), %{public}@ no cell was returned.
Bulletin section header <%@> does not conform to SBModalLayoutCaching
%@: Ignoring request to save shortcut items because existing shortcuts could not be read from disk: %@
%@: Reading from disk at url: %@
%@: Failed to convert application shortcut data to plist. Data length:%ld
%@: Found unexpected application shortcut plist on disk: %@
Removing file at url: %@
Failed to remove file at url: %@. Error: %{public}@
%@: Read from disk. Count=%d
%@: Failed to read application shortcuts for bundleID: %@ from URL: %@. Error: %{public}@
%@: File doesn't exist
%@: Ignoring save request because the client requested to save too much data. Size = %ld bytes. Limit = %ld bytes.
%@: Ignoring save request because not dirty
%@: Saving data (length=%ld) to url: %@
%@: Failed to create directory for saving application shortcuts at url: %@. Error: %{public}@
%@: Failed to write shortcuts to url: %@. Error: %{public}@
%@: No shortcuts to save, so deleting file at: %@
%@: No shortcuts to save
Not enabling prox detection because prox isn't permitted on this device
%s: Index path (%@) is valid in local store, but UITableView claims the %@ is out of bounds (%ld)
%s: Requested bulletin: %@
Please notify the developer investigating <rdar://problem/14607333>.
dismiss overlays animation controller finished.
dismissOverlaysAnimationController: %@
Adding spurious screen undimming assertion <%p:%{public}@>
Removing spurious screen undimming assertion <%p:%{public}@>
%s touchLocation: %@ dividerLocation: %f
FAILED: only touch too far from divider
FAILED: not 2 touches
touch1: %f, touch2: %f, horizontal distance: %f, 2D distance: %f
divider: %f, touch1: %f, touch2: %f
FAILED: touches too far apart from each other on X axis
FAILED: touches too close to each other on X axis
FAILED: touch 1 too far from divider
FAILED: touch 2 too far from divider
FAILED: both touches on same side of divider
FAILED: touches too far apart from each other on Y axis
FAILED: touches crossed each other
setting state to 'began'
setting state to 'changed'
%{public}@ Home Screen page mismatch, forcing page zero
_SBRootFolderDockOffscreenFractionExternalClient deallocated but not invalidated! Reason: %{public}@
[SBClockDataProvider] init failed: no clock app
Clock data provider received local notification: notification=%@
Clock data provider ignoring notification with no title or body: notification=%@
Clock data provider ignoring notification that is not an alarm or timer or sleep: notification=%@
Clock data provider publishing bulletin: notification=%@
Clock data provider pausing all audio: notification=%@
Clock data provider locking device: notification=%@
vibration is not valid '%{public}@'
Ignoring keyed archive data contains that invalid classes: %@
overriding _countryCodesShowingEmergencyOnlyStatus from prefs to be -> %{public}@
Status bar data manager: telephony manager reports 0 signal strength bars and raw signal strength of %d.
Status bar data manager: reporting 0 signal strength bars because we have no telephony manager.
serviceContent changing from %i to %i
service changing from '%{public}@' to '%{public}@'
serviceCrossfade changing from '%{public}@' to '%{public}@'
dataNetworkType changed to %{public}@
battery info changed to (%{public}@ %i) with detail='%{public}@'
activity info changed to slow=%i sync=%i identifier=%{public}@
locationType changed to %i
quietMode changed to %i
removing assistant style override
apply assistant style override
Failed to acquire Assistant Eyes Free status bar style override
personName changing from '%{public}@' to '%{public}@'
Failed to acquire tethering status bar style override
*** [SBStatusBarStateAggregator] cannot update unknown status bar item (%i)
%@abling %{public}@
Failed to acquire in-call simulation status barstyle override assertion
StarkConnected: creating primaryCarScene=%{public}@
StarkConnected: ignoring occlusions on the main-scene of %{public}@ because a stark full-screen capable app is top-most.
StarkConnected: laying out for nowPlaying=%{public}@
StarkConnected: with no foreground application scene.
StarkConnected: creating backgroundCarScene=%{public}@
StarkDisconnected: found abandoned scene=%{public}@ with display=%{public}@ while tearing down session for display=%{public}@
StarkDisconnected: destroying scenes: %{public}@, un-ignoring occlusions for main display scenes: %{public}@, display: %{public}@, carSceneManager: %@
%{public}@: scrolling strategy changed from %@ to %@
%{public}@: placing scrollview UIPanGestureRecognizer (%@) back in scrollview (%@)
%{public}@: removing edge recognizer (%@) from %{public}@
%{public}@: removing swallow recognizer (%@) from %{public}@
%{public}@: removing horizontal cancel recognizer (%@) from %{public}@
%{public}@: placing scrollview UIPanGestureRecognizer (%@) into %{public}@
%{public}@: adding edge recognizer (%@) to %{public}@
%{public}@: adding swallow recognizer (%@) to %{public}@
%{public}@: adding horizontal cancel recognizer (%@) to %{public}@
Destination %{public}@ ignoring received notification %{public}@
%@: Request to invalidate all stores immediately: %@
%@: Request to save all stores immediately: %@
%@: Removing shortcut items for %{public}@ because it was uninstalled
%@: Creating store for bundle identifier: %{public}@
returning -1 from _nextIdleTimeDuration because SBAutoDimTime is less than 0
returning -1 from _nextIdleTimeDuration because we're in emergency callback mode
returning -1 from _nextIdleTimeDuration we're not dimming while plugged in
returning -1 from _nextIdleTimeDuration because of these idleTimerDisabledReasons: %@
returning -1 from _nextIdleTimeDuration because backboardd won't let us yet
returning the workspace dim time (%lf) from _nextIdleTimeDuration
returning -1 from _nextLockTimeDuration because SBAutoLockTime is less than 0
returning -1 from _nextLockTimeDuration because we're plugged in, not connected to Stark, and either playing music (%d) or instructed never to dim while plugged in (%d)
returning -1 from _nextLockTimeDuration because we have alert items that can't be locked over
returning -1 from _nextLockTimeDuration because we have banners that can't be locked over
returning -1 from _nextLockTimeDuration because we're in emergency callback mode
returning -1 from _nextLockTimeDuration because we're either in a normal call (%d) or on a FaceTime call (%d)
returning -1 from _nextLockTimeDuration because we're either in buddy (%d) or in the in-call UI (%d)
returning the workspace lock time (%lf) from _nextLockTimeDuration
Attempting to undim from source: %ld
Ignoring undim from screenOff because only prox can do that
Ignoring undim because it's for a bulletin and the user didn't act since the last one
Ignoring undim because we're pending a screen unblank
Ignoring undim because an object is in proximity
Ignoring undim because we're in the middle of locking the UI
Undimming for source: %{public}@
Attempting to reset idle timer and undim (%d) from source: %ld
Ignoring idle timer reset because only prox can undim a fully dimmed screen.
Ignoring idle timer reset because it's for a bulletin.
Ignoring idle timer reset because we disable auto-dimming.
Ignoring idle timer reset because it's not a change for prox or lift to wake and the lock-screen wants user event notifications.
Setting the nextLockDuration to -1 because there's an object in proximity
Disabling idle timer because the next idle duration < 0.
Tried to set an autolock duration of 0, default time: %f
Setting next idle duration (source:%ld) to: %f%@ lockAfterDim: %f
Setting _lastBKUserEventTimerMode=%i with duration=%f
Decreasing idle lock time to (%f) because we are at SpringBoard on a TouchID device
Decreasing idle lock time to (%f) because the current idle lock time was greater than the max in battery saver mode
Decreasing idle dim time to (%f) because the it was greater than the idle lock duration while in battery saver mode
setting idle dim time to (%f) because it was less than the min in battery saver mode
Decreasing idle lock time to (%f) because we are face down on table
setting idle dim time to (%f) because the idle lock time (%f) is <= 30 seconds
Removing idle timer disabled reason: %@ (remaining count=%lu)
Got notification that a deferred screen unblank has completed
Should not turn the screen on due to outstanding spurious screen undimming assertions
Animating backlight to factor %.2f with duration %.2f source:%ld
animateBacklightToFactor bt: %{public}@
Ignoring dim for idle timer expire because we disable auto-dimming.
Ignoring dim for warn because we disable auto-dimming.
User Events Did Idle
User Events Did UnIdle
User Events Occurred
User Events Presence Timer Expired
User Event Notification fired
 *|MGUpdate|* tag=%@ old=%i new=%@
 *|MGReset|* response=%@
Killing %@ because it has been disabled
%s Didn't work: %@
%s Success.
Scroll frames: %{public}@
adding new view for %@
removing leftover views: %@
intercepting menu button event and forwarding to %{public}@
LoginUI app activation completed: %d
Failed to activate login scene, retrying; error = %@
Login scene deactivated with error, relaunching it; error = %@
Exiting early because we're already attempting unlock!
Add lock screen alarm: bulletin item=%@
Present lock screen alarm: bulletin item=%{public}@
Dismiss lock screen alarm: bulletin item=%{public}@ animated: %d reason=%{public}@
Lock screen plugin %{public}@ requested opening of app/url: %{public}@
relocking immediately because the old lock screen no longer supports mesa
Using overlay settings: %@
Using notification list settings: %@
Using plugin settings: %@
Using wallpaper settings: %@
Using default settings: %@
Sound can be played for notification %{public}@: %d [ hasRequest: %d hasSound: %d canPlaySound: %d isQuietModeEnabledAndActive: %d overridesQuietMode: %d isInLostMode: %d isDeviceUILocked: %d alertsWhenLocked: %d ]
Play sound for notification %{public}@
Already playing sound for notification %{public}@
Adding status bar item %u requester %@
Removing status bar item %u requester %@
Setting up SpringBoard notifications dispatcher %{public}@
Updating active destinations [ deviceLocked: %d lostMode: %d carPlay: %d lockScreenNotifications: %d bannersActive : %d ]
Saving context for previous folder: %@
Opening folder with previous context: %@
[SBFolderController] _cancelCloseFolderTimer was called
[SBFolderController] _cancelAutoScroll was called
[SBIcon}: %@
%s Unable to open folder icon %@ because we aren't actually open!
%s Folder icon %@ cannot be opened because it does not exist on the current page.
%s No folder icon view for %@
[SBFolderController] willRotateToInterfaceOrientation was called
[SBFolderController] willAnimateRotationToInterfaceOrientation was called
[SBFolderController] didRotateFromInterfaceOrientation was called
%@ --> %@; index = %lu
%@ --> %@; indexes = %@
Recommending that %{public}@ be updated now due to a push notification
Recommendation handler did launch %d
Not recommending that %{public}@ be updated now due to a push notification: reasonIsPush - %d pushIsInterestingTrigger - %d appIsInteresting - %d
Got a duet trigger: %@
Recommending that %{public}@ be updated now
Recommendation handler did launch %{public}@
creating process - %@
%@ 2nd try - Finally got the background update process assertion: %@
%@ Finally got the background update process assertion: %@ alreadyFinishedTask: %@
%@ Firing completion with result: %{public}@
%{public}@ finished updating but didn't provide a valid sequence number: %d
Told to launch %{public}@ for background fetch, but the app doesn't support background fetch - please file a bug against SpringBoard
About to take out a power assertion so we keep the device awake until the push notification is handled
Releasing power assertion: %{public}@
Launching %{public}@ for a low priority push
Launching %{public}@ for a push because it is being debugged
%{public}@ finished background updating sequenceNumber: %d result: %d 
response - %@
Executing the SBBackgroundFetchExternalRequest for: %{public}@ sequenceNumber: %d
Ignoring lock attempt because we're still initializing ourselves at startup and we're not ready for this yet.
LockUI from source: %{public}@
%s unknown lock source %d; ignoring.
Workspace can't lock: %{public}@
Unable to interrupt workspace busy state
-[SBTelephonyManager inCall] %d
Terminating FaceTime call due to smart cover closure.
LockUI from source: Now locking
Bio authentication request to dismiss denied because the lock-screen isn't currently visible -> swizzling unlock intent to authenticate only.
Disconnecting call
[[SBTelephonyManager sharedTelephonyManager] incomingCallExists] %d autoLock %d animate %d
Telephony controller not checked in
UILocked: %d
unlockUIFromSource:%d options:%@
unlockUIFromSource: Ignoring unlock attempt because we're still initializing ourselves at startup and we're not ready for this yet.
unlockUIFromSource: Ignoring unlock attempt due to stark activation
unlockUIFromSource: screenWasOff:%d turnOnScreenFirst:%d startFadeInAnimation:%d shouldTurnOnScreen:%d
Bailing from UIUnlock because: turnOnScreenFirst = %d; autoUnlock = %d; shouldTurnOnScreen = %d
Ignoring unlock attempt because unlock is disabled.
%{public}@ said it can't UI-unlock for source %d
_finishUIUnlockFromSource: %d
Bailing out of _finishUIUnlockFromSource because the device is blocked.
Lock screen REFUSED to be deactivated! NOT unlocking.
[Unlock Request] Turning screen on for unlock request: %@
[Unlock Request] Request had no source, or didn't want to actually unlock. Succeeding.
[Unlock Request] AuthenticateOnly specified, and we are authenticated. Succeeding.
[Unlock Request] DismissOnly specified, but we are not authenticated. Failing.
[Unlock Request] Dismiss specified, and we are already UI-unlocked. Succeeding.
[Unlock Request] Request to dismiss failed with reason: "%@". Failing.
[Unlock Request] Performing action!
[Unlock Request] Request failed.
[Unlock Request] Request succeeded!
[Unlock Request] Attempting real UIUnlock...
[Unlock Request] Attempted UIUnlock failed :(
Not locked so not unlocking
Unlock attempt succeeded: %@
Ignoring unlock attempt due to stark activation
Enabling lost mode plugin since we are in lost mode.
We wanted to enable the lost mode plugin but we don't think we're in lost mode.
Locking the UI
Launching buddy
Lost mode is active after receiving lost mode change notification
Lost mode is not active after receiving lost mode change notification
SBWindowManager changing alpha for an untracked window. It may be untracked if the alpha change occurred while it was still hidden.
Context %p (%@) passed an invalid window level range %@
Context %p (%@) updating hide window request %@ -> %@
Context %p (%@) cleared.
Stop hiding request from unknown context %p (%{public}@) ignored
SBWindowManager: Ignoring window %p because it isn't an SBWindow
SBWindowManager now tracking window %p
SBWindowManager: already tracking window %p
SBWindowManager is releasing window %p
SBWindowManager restoring alpha to %.f for released window %p
Passcode locking if necessary, because we're transitioning at boot to Setup.
Play sound for CarPlay SBUIBannerItem: %@
PRIORITIZE: %{public}@
CANCEL: %{public}@
PAUSE: %{public}@
RESUME: %{public}@
Updated: %@
Reloading thumbnail image for placeholder: %{public}@
Placeholders @ boot time: %@
App placeholder proxies added: %@, currentlyKnownExistingPlaceholders: %@
App placeholder proxies installed: %@
App placeholder proxies cancelled: %@
*** Adding download to icon list: %{public}@:%@, installType: %u
*** No placeholder exists for placeholderProxy with bundleID: %{public}@. Ignoring this removal.
*** App icon isn't visible: %@ - adding to removal list
*** Download was cancelled or no app exists - removing icon: %@:%{public}@
*** Unable to find associated downloading icon for download removed: %{public}@
*** App icon generated - but unable to find the downloading icon anymore, inserting the app icon as error control: %@
Waiting to perform block until icon <%@> is completely dropped.
Icon [%@] finished dropping - performing completion block now.
Placeholders added: %@, modified: %@, removed: %@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
viewDebugArea
TB,N,V_viewDebugArea
allowMultiTouch
TB,N,V_allowMultiTouch
maxAllowableVerticalOffset
TQ,N,V_maxAllowableVerticalOffset
minAllowedTopAngle
Td,N,V_minAllowedTopAngle
maxAllowedTopAngle
Td,N,V_maxAllowedTopAngle
minAllowedBottomAngle
Td,N,V_minAllowedBottomAngle
maxAllowedBottomAngle
Td,N,V_maxAllowedBottomAngle
triggeredEvent
T@"UIEvent",R,N,V_triggeredEvent
delegate
T@"<SBSystemGestureRecognizerDelegate>",W,D,N
runningAsSystemGesture
TB,N,GisRunningAsSystemGesture,V_runningAsSystemGesture
<UITouch:%p phase:%@ force: %f, loc: %@>
Began
Ended
Moved
Cancelled
Stationary
BULLETIN_LIST_CLEAR
SpringBoard
layoutMode
Tq,N
titleLabel
T@"UILabel",R,N,V_titleLabel
iconImageView
T@"UIImageView",R,N,V_iconImageView
clearButtonVisibleAction
T@?,C,N,V_clearButtonVisibleAction
clearButtonFinalAction
T@?,C,N,V_clearButtonFinalAction
Tq,N,V_layoutMode
d8@?0
clearPossibleAction
T@?,C,N,V_clearPossibleAction
clearAction
T@?,C,N,V_clearFinalAction
com.apple.springboard.reachability.dismissesByTouch
com.apple.springboard.reachability.dismissesByHome
com.apple.springboard.reachability.enabled
com.apple.springboard.reachability.activated
com.apple.springboard.reachability.activated.sb.%@
com.apple.springboard.reachability.activated.app.%@
com.apple.springboard.reachability.dismissesByTimeoutAfterInteraction
com.apple.springboard.reachability.dismissesByFullTimeout
com.apple.springboard.reachability.dismissesByFinger
v8@?0
enable
disable
reachabilityModeActive
TB,R,N,V_reachabilityModeActive
reachabilityEnabled
TB,N
com.apple.language.changed
com.apple.purplebuddy.LanguageResetReady
SBLastRestoreIdentifier
void performSpringBoardMigrationIfNeeded()
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/main.m
<Unknown File>
failed to generate a valid restoreIdentifier : %@ (last=%@)
com.apple.springboard-imagecache
SpringBoardIconCache
com.apple.SpringBoard.notificationCenterLinen
com.apple.SpringBoard.folderSwitcherLinen
com.apple.springboard.newsstand
14A9999
B24@?0@"NSURL"8@"NSError"16
sharedimagecache
directory
non-directory
LockBackground.jpg
HomeBackground.jpg
LockBackgroundPortrait.jpg
HomeBackgroundLandscape.jpg
LockBackgroundThumbnail.jpg
HomeBackgroundThumbnail.jpg
13A297
v28@?0i8d12d20
v12@?0B8
v16@?0q8
com.apple.springboard.SBAccountStoreManager
primaryAppleAccount
T@"ACAccount",&,V_primaryAppleAccount
accountStore
T@"ACAccountStore",R,N,V_accountStore
SBAccountStoreManagerPrimaryAppleAccountDidChangeNotification
Multitasking_Shadow
@"UIImage"16@?0^Q8
v16@?0@"UIGraphicsImageRendererContext"8
shouldClip
clippingFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N
clippingCornerRadius
Td,N
%@-%@
plugin
T@"SBLockScreenPlugin",R,N,V_plugin
Slide To Unlock Dark Shadow Strength
slideToUnlockDarkShadowStrength
Slide To Unlock Light Shadow Strength
slideToUnlockLightShadowStrength
App Icon Grabber Dark Shadow Strength
appIconGrabberDarkShadowStrength
App Icon Grabber Light Shadow Strength
appIconGrabberLightShadowStrength
Time Dark Shadow Strength
timeDarkShadowStrength
Time Light Shadow Strength
timeLightShadowStrength
Date Dark Shadow Strength
dateDarkShadowStrength
Date Light Shadow Strength
dateLightShadowStrength
Icon Label Dark Shadow Strength
iconLabelDarkShadowStrength
Icon Label Light Shadow Strength
iconLabelLightShadowStrength
Folder Title Dark Shadow Strength
folderTitleDarkShadowStrength
Folder Title Light Shadow Strength
folderTitleLightShadowStrength
Logout Button Glyph Dark Shadow Strength
logoutButtonGlyphDarkShadowStrength
Logout Button Glyph Light Shadow Strength
logoutButtonGlyphLightShadowStrength
Logout Button Text Dark Shadow Strength
logoutButtonTextDarkShadowStrength
Logout Button Text Light Shadow Strength
logoutButtonTextLightShadowStrength
Status Text Dark Shadow Strength
statusTextDarkShadowStrength
Status Text Light Shadow Strength
statusLightShadowStrength
User Picture Dark Shadow Strength
userPictureDarkShadowStrength
User Picture Light Shadow Strength
userPictureLightShadowStrength
Lock Screen Settings
Legibility Settings
Td,V_slideToUnlockDarkShadowStrength
Td,V_slideToUnlockLightShadowStrength
Td,V_appIconGrabberDarkShadowStrength
Td,V_appIconGrabberLightShadowStrength
Td,V_timeDarkShadowStrength
Td,V_timeLightShadowStrength
Td,V_dateDarkShadowStrength
Td,V_dateLightShadowStrength
Td,V_statusTextDarkShadowStrength
statusTextLightShadowStrength
Td,V_statusTextLightShadowStrength
Td,V_iconLabelDarkShadowStrength
Td,V_iconLabelLightShadowStrength
Td,V_folderTitleDarkShadowStrength
Td,V_folderTitleLightShadowStrength
timerTextDarkShadowStrength
Td,V_timerTextDarkShadowStrength
timerTextLightShadowStrength
Td,V_timerTextLightShadowStrength
timerDialDarkShadowStrength
Td,V_timerDialDarkShadowStrength
timerDialLightShadowStrength
Td,V_timerDialLightShadowStrength
Td,V_logoutButtonGlyphDarkShadowStrength
Td,V_logoutButtonGlyphLightShadowStrength
Td,V_logoutButtonTextDarkShadowStrength
Td,V_logoutButtonTextLightShadowStrength
Td,V_userPictureDarkShadowStrength
Td,V_userPictureLightShadowStrength
com.apple.springboard.BBDataProvider
SBForceAlertItemsToPendForBoot
SBMemoryPressureUnderPressureNotification
SBMemoryPressureReturnedToNormalNotification
SBBootCompleteNotification
SBApplicationStatusBarStyleOverridesDidChangeNotification
SBBatterySaverModeDidChangeNotification
SBApplicationStatusBarWasTappedNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SpringBoard.m
Must have our initial scene at boot time so we can initialize our active interface orientation properly.
orientationAggregator
-[SpringBoard handleSignal:]
shutdown
ThermalUIAlertExit
PurpleFBServer
darkboot
com.apple.SpringBoard.volumePowerQueue
com.apple.backboardd.tetherPrefsNeedUpdate
com.apple.backboardd.tetherStateChanged
SBSpringBoardDidLaunchNotification
SpringBoard launching, home screen rotates
StartupTransition
Unexpected state: UI locked during boot unexpectedly.
Finishing our initialization of orientation at startup.
v16@?0@"BSTransaction<SBStartupTransition>"8
Unpend startup alert items
v24@?0@"BSTransactionBlockObserver"8@"BSTransaction<SBStartupTransition>"16
com.apple.preferences.sounds.changed
com.apple.mobile.storage_mounted
com.apple.mobile.camera_attached
com.apple.system.batterysavermode
v12@?0i8
com.apple.springboard.finishedstartup
VolumeUp
VolumeDown
show on homescreen backstop
com.apple.springboard.homescreenunlocked
dontLockEver
useHardwareSwitchAsOrientationLock
euampscYbKXqj/bSaHD0QA
Q8@?0
v16@?0Q8
searchReveal
searchReveal-setup
SETTING_LANGUAGE
SpringBoardLanguageChangeBackstop
LanguageChange
-[UIApplication requestDeviceUnlock]
iconState
com.apple.fieldtest
DOWN
ringerLockButton
sleepButton
homeButton
volumeDownButton
headphoneVolumeDown
volumeUpButton
headphoneVolumeUp
smartCoverClosed
smartCoverOpen
headphonePause
headphoneConnect
com.apple.reliability.hookup.
HOME_SCREEN_SHORTCUT_DISCOVERABILITY
SPOTLIGHT_SHORTCUT_DISCOVERABILITY
SCREENSHOT_SHORTCUT_DISCOVERABILITY
Powerdown UI
photos://contentmode?id=import
delay-sleep-for-headset-click
RESTRICTED_URL_TITLE
RESTRICTED_URL_BODY
UNHANDLED_URL_TITLE
UNHANDLED_URL_BODY
sdkVersion.integerValue >= 8
entitlements.%@ != nil
Unable to find the container associated with the given URL (url: %@).
v16@?0@"NSError"8
The user has denied permission to open this URL.
Unable to coorindate access with file: %@
URL is not handled by SpringBoard or any available application
NSURL
Invalid condition not satisfying: %@
[url isKindOfClass: NSURLClass]
SBApplication
[appToOpen isKindOfClass: SBApplicationClass]
SBActivationSettings
activationSettings != nil
[activationSettings isKindOfClass: SBActivationSettingsClass]
Ignoring unsafe request to open URL %@
Device is in airplane mode
User did not unlock the device
No application was found to process this request
_openURLCore: called with no display
_openURLCore: called with no activation settings
Relock After Telephony URL Failed
com.apple.springboard.volumeButton.volumeDownPressDuration
com.apple.springboard.volumeButton.volumeUpPressDuration
Midnight Passed
SignificantTimeChangeNotification
(none provided)
Daylight Savings Time Change
ActivateBuddy
TRUE
FALSE
QueueWorkspaceEvent
UnlockFromSmartCover
B8@?0
LockFromSmartCover
com.apple.springboard.HasSeenACaseLatchCoverNotification
pended change during startup transition
BackBoardd
Device Orientation Changed from %@ to %d
with
without
active interface orientation changed
B32@?0@8Q16^B24
v24@?0@8^B16
com.apple.springboard
 (alert-hosted app)
 (alert)
 (app)
v24@?0@"FBScene"8^B16
 (fallback)
%@%@
com.apple.mobile.SubstantialTransition
layout state updated changed & has a primary element
-[SpringBoard launchApplicationWithIdentifier:suspended:]
this call must be made on the main thread
typing is active
com.apple.springboard.nowPlayingAppChanged
com.apple.Music.dontAnimateREO
v32@?0@"SBApplication"8Q16^B24
KeybagRefetch
SBDisableActiveInterfaceOrientationChangeAssertion
removing a disableActiveInterfaceOrientationChangeAssertion
window
T@"UIWindow",&,N
nowLocatingApps
T@"NSMutableArray",&,N,V_nowLocatingApps
powerDownController
T@"SBPowerDownController",&,N,V_powerDownController
daylightSavingsTimer
T@"NSTimer",&,N,V_daylightSavingsTimer
nowPlayingProcessPID
Ti,N,V_nowPlayingProcessPID
batterySaverModeActive
TB,N,GisBatterySaverModeActive,V_batterySaverModeActive
combinationHardwareButton
T@"SBCombinationHardwareButton",R,N,V_combinationHardwareButton
volumeIncrementSequenceObserver
T@"SBPressSequenceObserver",R,N,V_volumeIncrementSequenceObserver
volumeDecrementSequenceObserver
T@"SBPressSequenceObserver",R,N,V_volumeDecrementSequenceObserver
bulletinBoardConnection
T@"BBDataProviderConnection",R,N,V_bulletinBoardConnection
bulletinBoardQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_bulletinBoardQueue
typingActive
TB,N,GisTypingActive,V_typingActive
leastRecentlyForegroundLocatingApp
T@"SBApplication",R,N
userSessionController
T@"SBUserSessionController",R,N,V_userSessionController
homeHardwareButton
T@"SBHomeHardwareButton",R,N,V_homeHardwareButton
lockHardwareButton
T@"SBLockHardwareButton",R,N,V_lockHardwareButton
lockOutController
T@"<SBFLockOutStatusProvider>",R,N,V_lockOutController
authenticationController
T@"SBFUserAuthenticationController",R,N,V_authenticationController
screenshotManager
T@"SBScreenshotManager",R,N,V_screenshotManager
notificationDispatcher
T@"SBNCNotificationDispatcher",R,N,V_notificationDispatcher
widgetController
T@"SBWidgetController",R,N,V_widgetController
restartManager
T@"SBRestartManager",R,N,V_restartManager
modalAlertPresentationCoordinator
T@"SBModalAlertPresentationCoordinator",R,N,V_modalAlertPresentationCoordinator
accountStoreController
T@"SBAccountStoreManager",R,N,V_accountStoreController
wantsOrientationEvents
TB,R,N
A reason is required to create a SBTransientActiveInterfaceOrientationRequester.
reason
T@"NSString",R,C,N,V_reason
orientation
Tq,R,N,V_orientation
wasDeviceLocked
TB,N,V_wasDeviceLocked
Terminating in response to the Purple Server port invalidation.
com.apple.iapd.notify.extendedMode
displayport
SBUIACStatusChangedNotification
SBUIExternalChargeAccessoryConnectedStatusChangedNotification
SBUIHeadsetDockStatusChangedNotification
SBUIBatteryNotChargingStatusChangedNotification
SBUIUnsupportedChargingAccessoryStatusChangedNotification
SBSwitchAppGesture
SBScrunchAppGesture
yhHcB0iH0d1XzPO/CFd3ow
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIController.m
Invalid parameter not satisfying: %@
com.apple.multitasking.switcher.doublemenutogglewhileshowing
com.apple.multitasking.switcher.doublemenutogglewhilehidden
UNSUPPORTED_CHARGING_ACCESSORY
updateLayoutForStatusBarHeightChange
Trying to create a transaction but I'm already tracking a scrunchAppTransaction
Gesture recognizer was expected to be in state %@, but it was in state %@
@"SBMainWorkspaceTransaction"16@?0@"SBMainWorkspaceTransitionRequest"8
v16@?0@"SBWorkspaceApplicationTransitionContext"8
B16@?0@"SBMainWorkspaceTransitionRequest"8
Scrunch Gesture Began but I'm still tracking an old gesture with this transaction: %@
Trying to create a transaction but I'm already tracking a switchAppTransaction
v16@?0@"SBMainWorkspaceTransitionRequest"8
%s : _ignoreSwitchAppListClearRequests decremented below zero
-[SBUIController _endIgnoringSwitchAppListClearRequests]
%@ - Accessibility
SBHomeScreenStatusBar
v16@?0@"SBMutableAppStatusBarSettings"8
useOrbGesture
wasTornDownWhenBeganRequiring
TB,N,V_wasTornDownWhenBeganRequiring
com.apple.multitasking.systemgesture.Suspend.began
com.apple.multitasking.systemgesture.Suspend.ended
com.apple.multitasking.systemgesture.Suspend.failed
com.apple.multitasking.systemgesture.Suspend.cancelled
com.apple.multitasking.systemgesture.SwitchApp.began
com.apple.multitasking.systemgesture.SwitchApp.ended
com.apple.multitasking.systemgesture.SwitchApp.failed
com.apple.multitasking.systemgesture.SwitchApp.cancelled
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBApplicationIcon.m
only valid on main thread; use __loadUnmaskedIconImageForFormat for background
BTN 
@"NSString"16@?0@"NSString"8
-[SBApplicationIcon _localizedUninstallStringForKey:]
SBUninstallIconOverrideStringsFile
UNINSTALL_ICON_TITLE_REMOVE_WITH_NAME
UNINSTALL_ICON_TITLE_NOT_ALLOWED
UNINSTALL_ICON_BODY_REMOVE_DATA
UNINSTALL_ICON_BODY_DELETE_DATA
UNINSTALL_ICON_BODY_NOT_ALLOWED
UNINSTALL_ICON_BODY_REMOVE_DATA_LEAVES_DOCUMENTS_IN_CLOUD
UNINSTALL_ICON_BODY_DELETE_DATA_LEAVES_DOCUMENTS_IN_CLOUD
UNINSTALL_ICON_BUTTON_REMOVE
UNINSTALL_ICON_BUTTON_CANCEL
AppSwitcherServiceAdded
AppSwitcherServiceRemoved
AppSwitcherService
<%@: %p; representedObject: %@>
representedObject
T@,R,N,V_representedObject
identifier
T@"NSString",R,C,N
icon
T@"UIImage",&,N,V_icon
settingsIcon
T@"UIImage",&,N,V_settingsIcon
displayName
T@"NSString",C,N,V_displayName
settingsDisplayName
T@"NSString",C,N,V_settingsDisplayName
SBMedusaEnabledStateChangedNotification
__SBWorkspaceLaunchOriginStark
__SBWorkspaceOpenOptionUnlockResult
SBWorkspaceReachabilityOrientationLockReason
test
SBWorkspaceDisplayKey
search
ActivateStarkAlert = %@
v16@?0@"SBWorkspaceAlertTransitionContext"8
ActivateAlert = %@
activate remote alert: %@
SBWorkspaceActivateRemoteAlert: waiting for prepareForActivationWithContext:completion:
deferred UI unlock
reset lock screen page
v16@?0@"SBRemoteAlertAdapter"8
serviceName
viewControllerClassName
v24@?0@"SBRemoteAlertAdapter"8@"NSError"16
prepare alert activation with options
SBWorkspaceTypeActivateRemoteAlertWithOptions: waiting for prepareForActivationWithContext:completion:
DeactivateAlert = %@
SBWorkspaceDeactivateAlert_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBWorkspace.m
[alerts count] > 1
DeactivateStarkAlert = %@
SBWorkspaceDeactivateStarkAlert_block_invoke
ActivateAlert
com.apple.ist.windward
com.apple.ist.demoloop
Demo.mov
com.apple.DemoApp
SBWorkspaceLaunchDemoAppIfNeeded
B24@?0@"FBScene"8^B16
System boot is not complete
Ongoing transaction: %@
Not Busy
TerminateApp: %@ (%@)
TerminateAllApplications
Unlock to launch double height status bar app.
com.apple.iphonesimulator.toggleincallstatusbar
SBStatusBarReturnToHearingAidNotification
prefs:root=INTERNET_TETHERING
prefs:root=INTERNAL_SETTINGS&path=sysdiagnose
prefs:root=General&path=SOS
v24@?0@"NSDictionary"8@"NSError"16
display
eventQueue
ActivateApplication = %@
slave
T@"FBSDisplay",R,N,V_display
T@"FBWorkspaceEventQueue",R,N,V_eventQueue
currentTransaction
T@"SBWorkspaceTransaction",R,N,V_currentTransaction
you can't call this before [SBMainWorkspace start]
SBWorkspace
just don't call this
sceneManager
alertManager
daemonHandlers
SpringBoard - MainAlertManager
@8@?0
SpringBoard - CurrentTransaction
SpringBoard - EventQueue
SpringBoard - DaemonHandlers
must be called from a transaction or on a workspace event
CurrentTransaction
medusaEnabled
playSoundOnDeviceWake
SBPowerDefaults
disableIdleSleep
Failed preflight
Vetoed by request validator.
Vetoed by policy aggregator.
application has been uninstalled
App is uninstalled
App has outstanding termination assertions
Lock screen handled request
No transaction created
Application failed preflight checks
v24@?0@"SBWorkspaceApplication"8^B16
must only be called when running on the event queue
at this point we must have a transaction : request=%@
the transaction must reference the original request
request
v32@?0@"SBAlert"8Q16^B24
v16@?0@"SBWorkspaceAlert"8
SBWorkspaceSuspended
SBWorkspaceFinishInitialization
ACTIVATION_REQUIRED
Activation Required
/AppleInternal/Library/PreferenceBundles/Internal Settings.bundle/4_note_rising.aiff
Workspace will update scene with identifier %@
App impersonating with alert should never be buddy because we don't support that scenario.
ReturnToLockscreenFromApplicationExited = %@
ApplicationExited = %@
!relaunchApp || [exitedWorkspaceApp boolForProcessSetting:kSBProcessSettingRelaunchAfterExiting]
RelaunchAfterApplicationExited = %@ (suspended? %d)
trusted
untrusted
green-tea
FBSystemService-OpenURLRequest: %@ (scheme %@)
FBSystemService-OpenApplicationRequest: %@
Ignoring untrusted request without a URL
AAPCommandLaunchOriginStark
outError != nil
Unknown application display identifier %@.
Device setup is not yet complete.
Application cannot be launched because it has outstanding termination assertions.
Invalid arguments passed with SBSApplicationDebugOnNextLaunch or SBSApplicationDebugOnNextLaunch.
Can't launch %@ when syncing.
System boot is not yet complete.
Unable to launch %@ suspended because this app declares UIApplicationExitsOnSuspend.
Unable to launch %@ because it is disabled or restricted.
Unable to launch %@ because it has an invalid code signature, inadequate entitlements or its profile has not been explicitly trusted by the user.
Unable to launch %@ because this app doesn't declare the proper UIBackgroundMode
layout role '%@' is unsupported'
target bundleID must have the primary app role
this device doesn't support opening additional apps
only one additional app supported
must specify a primary app with additional apps
invalid additional app role '%@'
only role currently supported for additional app is side
Unknown additional application display identifier %@.
Can't launch suspended with additional applications
Can't launch for events with additional applications
Device setup is not yet complete
Unable to launch %@ because the device was not, or could not be, unlocked.
Unable to launch %@ foreground because the device is locked. see FBSOpenApplicationOptions.h for ways to do this.
Can't launch in classic mode when we have additional applications
Can't activate for URL session when we have additional applications
hidden
exit for classic mode relaunch
Application %@ does not support layout role %@
OpenApplication(%@)ForRequester(%@)
The request could not be handled at this time
v16@?0@"NSDictionary"8
v16@?0@?<v@?>8
Entitlement %@ required to open unsafe dial request with URL: %@
Application %@ is neither visible nor entitled, so may not open URLs.
Invalid host process for extension of type "%@" (expected %@, found %@).
VISIBLE
NOT VISIBLE
Ignoring request from extension <%@> because its hosting process <%@> is not an application.
%@ extension <%@> is neither visible nor entitled, so may not open URLs.
Entitlement %@ required to open URLs while locked.
%@ cannot be launched because the device is locked.
Cound not find any application with bundleID %@
v16@?0@"NSString"8
lock-screen Spotlight is visible
SBWorkspaceRequest: Open "%@"
FBSystemService-HandleActions
UnlockedAlerts
-[SBMainWorkspace alertManager:willActivateAlert:overAlerts:]
Workspace will activate alert
-[SBMainWorkspace alertManager:didActivateAlert:overAlerts:]
Workspace did activate alert
-[SBMainWorkspace alertManager:willDeactivateAlert:top:]
-[SBMainWorkspace alertManager:didDeactivateAlert:top:]
-[SBMainWorkspace alertManager:didChangeTopAlertFromAlert:toAlert:]
Not the same transaction: _currentTransaction = %p vs transaction = %p
com.apple.springboard.stark.fixupStartApp
v16@?0@"NSNotification"8
com.apple.springboard.stark.fixupActiveScreenController
com.apple.springboard.stark.teardownActiveScreenController
com.apple.springboard.stark.fixupExitApp
Disable Workspace Reachability
Activate App Reachability
AppReachabilityWindow
SBAppReachability
AppReachabilityEffectWindow
T@"SBWorkspaceTransaction",&,N,V_currentTransaction
T@"FBSceneManager",R,N,V_sceneManager
alertManagerIsActivatingLockAlert
TB,R,N,V_alertManagerIsActivatingLockAlert
foregroundAppPidsWhenDisplaySecureModeWasEnabled
T@"NSSet",R,N,V_foregroundAppPidsWhenDisplaySecureModeWasEnabled
TB,R,N,GisMedusaEnabled,V_medusaEnabled
T@"SBAlertManager",R,N,V_alertManager
springBoardActive
TB,R,N,GisSpringBoardActive
autoDimTime
Td,R,N
autoLockTime
wantsIdleTimerDisabled
force activate SpringBoard
ActivateSpringBoard
contents
CarPlayIconCache
i8@?0
text
font
maxSize
containsEmoji
canEllipsize
canTighten
canUseMemoryPool
style
scale
accessibilityIncreaseContrastEnabled
iconLocation
T@"NSString",R,C,N,V_text
T{CGSize=dd},R,N,V_maxSize
T@"UIFont",R,N,V_font
Td,R,N,V_scale
TB,R,N,V_canEllipsize
TB,R,N,V_canTighten
TB,R,N,V_containsEmoji
TB,R,N,V_canUseMemoryPool
Tq,R,N,V_style
textColor
T@"UIColor",R,N,V_textColor
TB,R,N,V_accessibilityIncreaseContrastEnabled
focusHighlightColor
T@"UIColor",R,N,V_focusHighlightColor
textInsets
T{UIEdgeInsets=dddd},R,N,V_textInsets
fontLanguageInsets
T{UIEdgeInsets=dddd},R,N,V_fontLanguageInsets
Ti,R,N,V_iconLocation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSearchEtceteraBlurringTransitionAnimator.m
_layoutView
[_transitionContext isAnimated]
spotlightNoninteractiveAnimationDuration
destinationMode
TQ,N
transitionStyle
TQ,N,V_destinationMode
TQ,N,V_transitionStyle
com.apple.springboard.SBBatteryWidgetAlwaysAvailable
B16@?0@"BCBatteryDevice"8
com.apple.BatteryCenter.BatteryWidget
SBIconVisibility
com.apple.springboard.appIconVisibilityPreferencesChanged
SBApplicationSnapshotChangedNotification
SBApplicationSnapshotChangedSequenceUserInfoKey
SBSuspendSnapshot
downscaled
v16@?0@"XBApplicationSnapshotPredicate"8
LaunchImages
@16@?0@"XBApplicationSnapshot"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBApplication+Snapshots.m
sceneSnapshot
mainSnapshotQueue
alternateSnapshotQueue
appearanceIdentifier
backgroundStyle
Tq,R,N
components
T@"NSSet",R,C,N
legibilitySettings
T@"_UILegibilitySettings",R,N
backgroundColor
T@"UIColor",R,N
idleTimerDuration
idleTimerMode
idleWarnMode
scrollingStrategy
notificationBehavior
restrictedCapabilities
TQ,R,N
proximityDetectionMode
presentationCoordinateSpace
T@"<UICoordinateSpace>",R,W,N
presentationRegions
T@"NSArray",R,C,N
dashBoardIdentifier
participantState
presenter
T@"<SBDashBoardViewPresenting>",W,N
presentationStyle
presentationType
presentationTransition
presentationPriority
presentationAltitude
activeAppearance
T@"SBDashBoardAppearance",R,C,N
activeBehavior
T@"SBDashBoardBehavior",R,C,N
externalPresentation
T@"SBDashBoardPresentation",R,C,N
dashBoardViewController
T@"<SBDashBoardViewControllerProtocol>",W,N
transitioning
TB,N,GisTransitioning
authenticated
T@"<SBDashBoardViewControllerProtocol>",W,N,V_dashBoardViewController
TB,N,GisTransitioning,V_transitioning
TB,R,N,V_authenticated
cornerRadius
view
T@"UIView<SBAppSwitcherPageContentView>",&,N,V_view
displayItem
T@"SBDisplayItem",&,N,V_displayItem
overlay
T@"UIView",&,N,V_overlayView
auxiliaryView
T@"UIView",R,W,N,VauxiliaryView
shadowStyle
Tq,N,V_shadowStyle
shadowAlpha
Td,N,V_shadowAlpha
overlayAlpha
contentAlpha
darkeningAlpha
Td,N,V_cornerRadius
shouldClipShadow
shadowClippingFrame
T@"<SBAppSwitcherPageViewDelegate>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBHintInteractor.m
BSFloatGreaterThanOrEqualToFloat(maxHintProgress, 0.0)
completionSpeed
completionCurve
wantsInteractiveStart
interactionProgress
T@"UIInteractionProgress",R,N,V_interactionProgress
maxHintProgress
SBAlertItem Test
Modal %d
Normal %d
launch
resume
widget-launch
quit
scrollIconList
scrollJigglyIconList
AppSliderBringup
AppSliderBringupOverApp
AppSliderDismiss
AppSliderDismissOverApp
FolderOpen
FolderClose
ScrollFolder
HomeScreenRotate
FolderRotate
AppIconForceTouchPeek
AppIconForceTouchPeekInDock
AppIconForceTouchPresent
AppIconForceTouchPresentInDock
AppIconForceTouchDismiss
AppIconForceTouchDismissInDock
HomeScreenIconPullToSpotlight
HomeScreenIconPullToSpotlightDismiss
presentSpotlight
dismissSpotlight
HomeScreenSwipeLeftToTodayView
HomeScreenSwipeRightFromTodayView
DashBoardPasscode
DashBoardPasscodePresented
DashBoardPasscodeDismissed
unscatterAnimation
AppOpen
AppClose
AppOpenInFolder
AppCloseInFolder
AppOpenCenterZoom
AppCloseCenterZoom
HomeScreenSwipeLeftToSpotlight
TodayViewFocusSearchFieldToSpotlight
TodayViewPullDownToSpotlight
LockScreenTodayViewFocusSearchFieldToSpotlight
LockScreenTodayViewPullDownToSpotlight
LockScreenSwipeLeftToTodayView
LockScreenSwipeLeftToSpotlight
NotificationCenterFocusSearchFieldToSpotlightOverHomeScreen
NotificationCenterPartialPullDownToSpotlightOverHomeScreen
NotificationCenterFocusSearchFieldToSpotlightOverLockScreen
NotificationCenterPartialPullDownToSpotlightOverLockScreen
NotificationCenterFocusSearchFieldToSpotlightOverSafari
NotificationCenterPartialPullDownToSpotlightOverSafari
SpotlightLeftOfHomeRotation
SpotlightPulldownRotation
SpotlightTodayViewRotation
SpotlightSearch
DashBoardScrollToLeftPage
DashBoardScrollToLeftPageWithBlur
DashBoardScrollToRightPage
DashBoardScrollFromLeftToRightPage
DashBoardRotateCameraPage
DashBoardRotateMainPageToLandscape
DashBoardRotateMainPageToPortrait
DashBoardRotateTodayViewPageToLandscape
DashBoardRotateTodayViewPageToPortrait
DashBoardDismissWhileAuthenticated
DashBoardDismissFromPasscodeViewAfterAuthentication
DashBoardDismissFromTodayViewWhileAuthenticated
DashBoardEnterSpotlightLaunchNullDismissToHome
LockScreenScrollNotifications
NotificationCenterBringup
NotificationCenterDismiss
NotificationCenterScroll
ControlCenterBringup
ControlCenterDismiss
ControlCenterBringupOverSafari
ControlCenterBringupOnLockScreen
ControlCenterScrollAmongstPages
ControlCenterShowAirDropSheet
ControlCenterShowOrbActions
ControlCenterDismissOrbActions
TodayViewEdit
NotificationShortToLongLookTransition
NotificationReParkLongLookTransition
NotificationClearLongLookTransition
NotificationBannerTransition
AppSliderScrollCold
AppSliderScrollWarm
AppSliderScrollColdOverApp
AppSliderScrollWarmOverApp
AppSliderScrollRotatedHomeScreenCold
AppSliderScrollRotatedHomeScreenWarm
AppSliderScrollRotatedOverAppCold
AppSliderScrollRotatedOverAppWarm
SiriBringupImmediateBeep
SiriBringup
DisplayAlert
keyboardShowing
keyboardHiding
rotateToPortrait
rotateToLandscape
TodayViewScrollWidgets
DashBoardTodayViewScrollWidgets
PPT Test Underway
currentTestName
T@"NSString",C,N,V_currentTestName
scrollTestActiveSubtest
T@"NSString",C,N,V_scrollTestActiveSubtest
presentation
com.apple.Preferences
CheckForLeaks
1111
index
iterations
BulletinBoardRotation
delay
animate
testName
displayIdentifier
launchURL
launchArguments
arguments
--suspended
SampleWithCHUD
Delay
Animation
scrollPage%dto%d
scrollPageAggregate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBApplicationTesting.m
This test wants to be run UI unlocked!
present-animation-delay
This test wants to be run UI locked!
scrollToLeft
enterAnimationDelay
exitAnimationDelay
enterDashBoardSpotlight
exitDashBoardSpotlight
slideToTodayDelay
slideToTodayAnimation
slideToCenterDelay
slideToCenterAnimation
v16@?0@"NCNotificationRequest"8
v24@?0@"SBNotificationCenterController"8@?<v@?>16
animation
v20@?0B8@?<v@?>12
This test is not supported on devices that don't allow for home screen rotation.
Home screen rotation not supported on this device
WaitForTest
runAppSwitcherDismissTest
delta
NotificationCenterScrollTest
com.apple.ExtensionTester.NullNCWidget
com.apple.ExtensionTester
widgetID
containingBundleID
v20@?0B8@"NSString"12
Failed to obtain the widget
LockScreenScrollNotifications PPT Test
scroll-media
scroll-home
present-animation-animation
dismiss-animation-delay
dismiss-animation-animation
runBlock
v32@?0@"SBNotificationBannerDestination"8@?<v@?>16@?<v@?B@?<v@?>>24
testOptions
startTestBeforePluginActivation
appear
disappear
scrollToCenter
scrollToRight
PPT Test
Delay-ToLandscape
Delay-ToPortrait
DashBoardRotationDone
DashBoard is not enabled.
com.apple.test.Null
scrollToTodayPage
launchNullAppFromSpotlight
TodayView is not available.
delay-unlock
Passcode must be visible.
Passcode must not be visible.
title
message
buttonOne
buttonTwo
timeToPresent
Killing app for PPT
workspaceActivate
workspaceDeactivate
PPTPerformTestOverHomeScreen
completion
PPTPerformTestOverSafari
setupFirstRotation
completeFirstRotation
setupSecondRotation
completeSecondRotation
Rotation isn't supported on this device
%lu Alert(s) appeared during PPT run
Alert: %@
Title: %@
Message: %@
sectionId
%@.%lu
_updateCompletionHandler
PPT-driven rotation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBWorkspaceTransitionRequest.m
workspace
must have a display
must have a workspace
execute post-transition tasks
eventLabel
applicationContext
alertContext
T@"SBWorkspace",R,N,V_workspace
auditToken
T@"BSAuditToken",&,N,V_auditToken
T@"SBAlertManager",&,N,V_alertManager
T@"NSString",C,N,V_eventLabel
uniqueID
T@"NSUUID",R,C,N,V_uniqueID
finalized
TB,R,N,GisFinalized,V_finalized
T@"SBWorkspaceApplicationTransitionContext",&,N,V_applicationContext
T@"SBWorkspaceAlertTransitionContext",&,N,V_alertContext
interactionContext
T@"SBWorkspaceInteractionContext",&,N,V_interactionContext
transitionCompletion
T@?,C,N,V_transitionCompletion
v20@?0B8@"FBProcess"12
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAlertWindow.m
must provide a valid screen object
must provide a valid rootViewController object
%s - Don't call this function - %@
-[SBAlertWindow _initWithFrame:debugName:attached:]
can't change the root or it must be of the right type
alertWindowDelegate
T@"<SBAlertWindowDelegate>",W,N,V_alertWindowDelegate
ignoring lock down because an alert is handling it: %@
ignoring because the screen is not dimmed.
ignoring because case is on and closed.
ended fade-out to lock early, and told the screen to fade-in back in right away.
aborting locking UI because the sos gesture is active
locking UI from lock button source.
Unlocking from lock button source with fade-in animation: %d
ignoring because user default says we should never lock.
ignored because we're sleeping
ignored because we're restoring
ignored because we're resetting
ignored because home button is down
locking after ending a call with lock button source
swallowing lock button press because we are in the process of fading in for LTW
locking the device with lock button source and animating fade-out
SBLockOrientationForScreenFadeOut
fadeout undone
ignored due to case closed and enabled
ignored due to _dontLockOnNextLockUp
ignored due to [SBApp shouldNeverLock]
resetting idle timer and undimming for lock button source
isButtonDown
TB,R,N,V_isButtonDown
SOSManager
/System/Library/PrivateFrameworks/SOS.framework/SOS
### Failed to Soft Linked: /System/Library/PrivateFrameworks/SOS.framework/SOS
passcodeView
T@"UIView<SBUIPasscodeLockView>",R,N,V_passcodeView
invalid
programmatic
home button
lock button
volume button
other button
keyboard
smart cover
idle timer
touch
notification
prox
Siri
boot
pocket state
external request
external app request
springboard request
lift to wake
logout
notification center
AC power change
charging accessory change
restoring
full screen alert
language change
unknown user event
T@"<SBPressCollectorDelegate>",W,N,V_delegate
maxPressDownDuration
Td,N,V_maxPressDownDuration
maxPressUpDuration
Td,N,V_maxPressUpDuration
AlertView laying out in %@
-[SBLockScreenPluginTransition _removeFromView]
-[SBLockScreenPluginTransition _addToView]
fromPlugin
T@"SBLockScreenPlugin",R,N,V_fromPlugin
toPlugin
T@"SBLockScreenPlugin",R,N,V_toPlugin
viewController
T@"SBLockScreenViewControllerBase",R,N,V_viewController
SBAlertAnimationOutBegan
SBAlertAnimationOutEnded
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAlert.m
must have a targetScreen set before anyone asks for _screen
effectiveVC
activation
deactivation
state
It makes no sense to reveal the wallpaper through an opaque alert!
v16@?0@"SBSDisplayLayoutElement"8
%@: active alert
SBFullScreenAlertIsActive-%@-%p
requestedDismissal
TB,N,G_requestedDismissal,S_setRequestedDismissal:,V_requestedDismissal
_occluding
TB,N,G_isOccluding,S_setOccluding:
suppressesNotificationCenter
suppressesControlCenter
suppressesSiri
activatedForSiri
suppressesBanners
expectsFaceContact
TB,N,V_expectsFaceContact
whitePointAdaptivityStyle
SBApplicationHasSetBadgeLocally
SBApplicationBadgeKey
SBApplicationAutoLaunchForVoIP
SBApplicationIsNewlyInstalled
SBApplicationRecentlyUpdated
SBApplicationRecentlyUpdatedTimerStartDate
SBApplicationActivationStateDidChange
SBApplicationStateDidChange
previousState
SBApplicationLayoutRoleChangedNotification
oldLayoutRole
newLayoutRole
SBApplicationDebugStateChangedNotification
SBApplicationShowsProgressChangedNotification
SBApplicationDidExitNotification
SBApplicationBundleIdentifierKey
LaunchSuspend
SBApplication32DeprecationAcknowledgementDateKey
CLASSIC
uninstallAllowed
telemergency
searchInCall
noVVM
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBApplication.m
process
-[SBApplication processWillLaunch:]
-[SBApplication processDidLaunch:]
-[SBApplication didExitWithContext:]
-[SBApplication _didSuspend]
com.apple.airportsettingsvisible
-[SBApplication willActivate]
-[SBApplication willActivateForScene:transactionID:]
-[SBApplication didActivateForScene:transactionID:]
-[SBApplication willDeactivateForEventsOnly:]
-[SBApplication didDeactivateForEventsOnly:]
-[SBApplication willAnimateActivation]
-[SBApplication didAnimateActivation]
-[SBApplication willAnimateDeactivation:]
-[SBApplication didAnimateDeactivation]
didn't receive -willAnimateDeactivation
-[SBApplication willAnimateActivationOnStarkScreenController:]
-[SBApplication didAnimateActivationOnStarkScreenController:]
-[SBApplication willAnimateDeactivationOnStarkScreenController:]
-[SBApplication didAnimateDeactivationOnStarkScreenController:]
De-r
external-accessory
@"FBSSceneTransitionContext"16@?0@"FBSMutableSceneSettings"8
v16@?0@"FBSMutableSceneSettings"8
Don't calculate a launch orientation for a running app. Really.
ProductVersion
Periodic Wake Timer Fired
SPD resume for incoming traffic
type(%li) must pass FBSDisplayTypeIsValid
%@ - %@
TERMINATED
BACKGROUND_TASK_SUSPENDED
BACKGROUND_RUNNING
FOREGROUND_RUNNING
PROCESS_SERVER
FOREGROUND_RUNNING_OBSCURED
UNKNOWN
NOT RUNNING
ACTIVATED
ACTIVATING_EVENTS_ONLY
ACTIVATING
DEACTIVATING_EVENTS_ONLY
DEACTIVATED_EVENTS_ONLY
DEACTIVATING
DEACTIVATED
-[SBApplication _setActivationState:]
attempted reentrant mutation of activationState detected
AppStore
-[SBApplication isUninstallAllowed]
-[SBApplication setUninstallAllowed:]
arm64
x86_64
Quit
%@ContentAvailable
-[SBApplication takeStatusBarStyleOverridesAssertion:]
-[SBApplication releaseStatusBarStyleOverridesAssertion:]
-[SBApplication _invalidateStatusBarStyleOverridesAssertions]
activation count bump mismatch
SBDefaultStatusBarStyleKey
SBDefaultStatusBarHiddenKey
SBDefaultPNGNameKey
SBDefaultPNGPreventSplitKey
kSBDefaultPNGExpirationAbsoluteTimeKey
SBClassicAppZoomedInKey
DefaultApplicationState
plist
processState
Alerts impersonating apps at this time is only supported on Stark.
B32@?0@8@16^B24
CLEANING_ICON_LABEL
device
T@"AVExternalDevice",R,N
interactionAffordances
layoutJustification
screenSupportsFocus
T@"FBSDisplay",R,N
screen
T@"UIScreen",R,N
screenBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
screenScale
traitCollection
T@"UITraitCollection",R,C,N
acBackSupported
TB,R,N,GisACBackSupported
ambientBrightnessNighttime
TB,R,N,GisAmbientBrightnessNighttime
connectedWirelessly
TB,R,N,GisConnectedWirelessly
geoSupported
TB,R,N,GisGeoSupported
knownVehicle
TB,R,N,GisKnownVehicle
OEMIconVisible
TB,R,N,GisOEMIconVisible
pairedVehicle
TB,R,N,GisPairedVehicle
layoutId
T@"NSString",R,N
context must conform to SBStarkSessionConfiguring
T@"FBProcessState",&,V_threadUnsafe_processState
classicMode
Tq,R,D,N,G_classicMode
defaultClassicModeOverride
Tq,N,V_defaultClassicModeOverride
_activationSettings
T@"SBActivationSettings",C,N,S_setActivationSettings:,V_activationSettings
_deactivationSettings
T@"SBDeactivationSettings",C,N,S_setDeactivationSettings:,V_deactivationSettings
_stateSettings
T@"SBStateSettings",C,N,S_setStateSettings:,V_stateSettings
_processSettings
T@"SBProcessSettings",R,C,N,V_processSettings
Tq,N,V_whitePointAdaptivityStyle
Ti,R,D,N
xpcEventPort
T@"BSMachPortSendRight",&,N,V_xpcEventPort
statusBarStyleOverridesToSuppress
Ti,N,V_statusBarStyleOverridesToSuppress
applicationShortcutWidgetBundleIdentifier
T@"NSString",R,C,D,N
staticApplicationShortcutItems
T@"NSArray",R,C,D,N
dynamicApplicationShortcutItems
T@"NSArray",C,D,N
uninstallSupported
TB,R,D,N,GisUninstallSupported
TB,D,N,GisUninstallAllowed
TB,N,GisRestoring,V_isRestoringApplicationFromHiding
reachabilitySupported
TB,D,N,GisReachabilitySupported
carPlayDeclaration
T@"CRCarPlayAppDeclaration",R,N
showingModalAlert
TB,R,N,GisShowingModalAlert
itemID
T@"NSNumber",R,N
mainSceneID
T@"NSString",C,N,V_mainSceneID
SBTelephonyManagerDidStartNotification
SBCallCountChangedNotification
SBPostponementStatusChangedNotification
SBServiceAvailabilityChangedNotification
SBSIMStatusChangedNotification
SBNewSIMNotification
SBOperatorNameChangedNotification
SBOperatorBundleChangedNotification
SBCarrierBundleChangedNotification
SBDataConnectionTypeChangedNotification
SBVPNConnectionChangedNotification
SBSignalStrengthChangedNotification
SBCallForwardingChangedNotification
SBTTYChangedNotification
SBLockScreenTelephoneCallUINeedsUpdateNotification
SBLastKnownNetworkCountryCodeDidChangeNotification
com.apple.carrier
com.apple.operator
UseEmergencyServicesTestNumber
contains-cellular-radio
CellularTelephonyCapability
cellular-data
data-plan
com.apple.commcenter.InternationalRoamingEDGE.changed
Library
Preferences
com.apple.operator.plist
com.apple.springboard.edgeEnabledChanged
HPAudioLoggingChangedNotification
playSoundOnBasebandReset
vpnActive
SBTelephonyManagerBackgroundQueryQueue
com.apple.springboard.background
v16@?0^{__CTServerConnection=}8
Enable
Disable
-[SBTelephonyManager setFastDormancySuspended:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBTelephonyManager.m
-[SBTelephonyManager airplaneModeChanged]
v16@?0^{__CFString=}8
?animStart=%F
&animStart=%F
-[SBTelephonyManager handleCallControlFailure:]
-[SBTelephonyManager callEventHandler:]
tel:%@
Receiver
Speaker
BluetoothLEOutput
PhoneCall
PlayAndRecord
CSILog
enabled
SBNetworkRegistrationCookie
DataIndicatorOverrideForLTE
wifiUpdateQueue
-[SBTelephonyManager isUsingVPNConnection]
WAITING_FOR_ACTIVATION_TITLE
WAITING_FOR_ACTIVATION_BODY
PHONE_ACTIVATED
isInEmergencyCallbackMode
GSDeviceName
incomingCall
T@"TUCall",&,N,V_incomingCall
activeCall
T@"TUCall",&,N,V_activeCall
heldCall
T@"TUCall",&,N,V_heldCall
outgoingCall
T@"TUCall",&,N,V_outgoingCall
noConnection
1xConnection
gprsConnection
edgeConnection
umtsConnection
hsdpaConnection
4GOverrideConnection
lteConnection
bluetoothConnection
wifiConnection
otherConnection
(%i)
unknown
registering
registered
notRegistered
emergencyOnly
active
inactive
error
notSet
false
true
TTYSettings
/System/Library/PrivateFrameworks/Accessibility.framework/Frameworks/AXHearingSupport.framework/AXHearingSupport
### Failed to Soft Linked: /System/Library/PrivateFrameworks/Accessibility.framework/Frameworks/AXHearingSupport.framework/AXHearingSupport
void _CallForwardingSettingChanged(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
void SBEdgeEnabledChanged(CFNotificationCenterRef *, void *, CFStringRef, const void *, CFDictionaryRef)
void _updateLocale(SBTelephonyManager *__strong, CTError (*)(CTServerConnectionRef, CFStringRef *), void (^__strong)(CFStringRef), void (^__strong)(void))_block_invoke
void _SIMChangedHandler(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
void _CellChangedHandler(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
/Media/HighlandPark/hp.plist
isStreaming
void _CallForwardedHandler(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
OUTGOING_CALL_FORWARDED
INCOMING_CALL_FORWARDED
void _CallForwardingActiveHandler(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
CALL_FORWARDING_ACTIVE
void _RadioModuleDead(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
DEAD_RADIO_TITLE
DEAD_RADIO_MESSAGE_TELEPHONY
DEAD_RADIO_MESSAGE_DATA_ONLY
void _HideDataIndicatorChanged(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
void _PostponementStatusChanged(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
void _RegistrationStatusChangedHandler(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
observer
void _ProviderNameChanged(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
void _SignalStrengthChanged(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
void _OperatorNameChanged(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
void _OperatorBundleChanged(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
void _CarrierBundleChanged(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
void _DataStatusChanged(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
void _DataRoamingChanged(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
void _DataPlanActivateFailed(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
void _DataPlanStatusHandler(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
void _BasebandReset(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
/AppleInternal/Library/PreferenceBundles/Internal Settings.bundle
baseband
aiff
hasSignificantMotionToBegin is NO because the dominantComponent is %d, expecting translation, directionallyAcceptedMotion: %@
recognizesHorizontalPanning
TB,N,V_recognizesHorizontalPanning
recognizesVerticalPanning
TB,N,V_recognizesVerticalPanning
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBZoomView.m
call to abstract base class initializer
UIClassicStatusBarLandscape.png
UIClassicStatusBarPortrait.png
zPosition
zoomView
surface
T@,R,W,N
%s requires a fullscreenZoomViewToClip
-[SBClippedZoomView initWithClippingFrame:fullscreenZoomView:]
PLEASE_WAIT
DISMISS_ALERT
REPLY
CANCEL
CHARS_REMAINING
CHAR_REMAINING
ringer
mute
mute-RTL
speaker
speaker-RTL
BLUETOOTH_VOLUME
RINGER_VOLUME
SOUND_EFFECTS_VOLUME
VOLUME_VOLUME
HEADPHONES_VOLUME
HIGH_VOLUME
MUTE_VOLUME
mode
Ti,N,V_mode
headphonesPresent
TB,N,V_headphonesPresent
EUVolumeLimit
Tf,N,V_euVolumeLimit
AllCategoriesHidden
Ringtone
Voicemail
VoicemailGreeting
HeadsetBT
HeadphonesBT
RingtonePreview
ExplicitVolumeChange
FullMuteChange
CannotExceedEUVolumeLimit
Headphone
Headset
enforced
un-enforced
MediaPlayback
level
Ti,N,V_level
T@"NSString",&,N
subtitle
image
T@"UIImage",&,N
showsProgress
TB,N,V_showsProgress
progress
Tf,N,V_progress
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIStartupFromOverlayAnimationController.m
transitionRequest
animationSettings
T@"BSAnimationSettings",&,N,V_animationSettings
waitsForAppActivation
TB,N,V_waitsForAppActivation
appSuggestion
T@"SBBestAppSuggestion",R,N,V_appSuggestion
SBBlankScreenStateChangeNotification
SBHIDDeferredScreenUnblankCompleted
SBHIDButtonSystemGesturesQueue
v24@?0^{__CFRunLoopObserver=}8Q16
-[SBHIDInterface setProximityDetectionEnabled:]
proximityDetectionEnabled
TB,N,GisProximityDetectionEnabled
DeviceUsagePage
DeviceUsage
Built-In
_SBSetBacklightFactor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIStartupToUserSetupAppZoomInAnimationController.m
This transition can only run with Buddy/Setup.
Buddy's role must be primary
LoginBootToSetupAppZoomIn
-[SBDashBoardModalView updateConstraints]
H:|-(margin)-[title]-(margin)-|
margin
T@"<SBLockScreenModalViewDelegate>",W,N
T@"_UILegibilitySettings",&,N
titleText
T@"NSString",C,N
subtitleText
primaryActionButtonText
secondaryActionButtonText
footerText
T@"UILabel",&,N,G_titleLabel,S_setTitleLabel:,V_titleLabel
subtitleLabel
T@"UILabel",&,N,G_subtitleLabel,S_setSubtitleLabel:,V_subtitleLabel
secondaryActionButton
T@"UIButton",&,N,G_secondaryActionButton,S_setSecondaryActionButton:,V_secondaryActionButton
primaryActionButton
T@"SBDashBoardModalButton",&,N,G_primaryActionButton,S_setPrimaryActionButton:,V_primaryActionButton
imageView
T@"UIImageView",&,N,G_imageView,S_setImageView:,V_imageView
T@"<SBDashBoardModalViewDelegate>",W,N,V_delegate
showsDateView
TB,N,V_showsDateView
showsStatusText
TB,N,V_showsStatusText
T@"_UILegibilitySettings",&,N,V_legibilitySettings
SBFolderControllerBackgroundViewBlurGroupName
transitionCancelled
TB,N,V_transitionCancelled
blurs
TB,N,V_blurs
expanding
TB,N,V_expanding
frozen
TB,N,V_frozen
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSceneManager.m
reference
[reference display]
-[SBSceneManager invalidate]
-[SBSceneManager window]
asked for the window but the display is no longer connected : display=%@
connected display doesn't appear to have a screen : display=%@
SBSceneLayoutWindow-%@
subclass must provide a valid layoutController
v16@?0@"NSSet"8
Scenes
v24@?0@"NSString"8@"NSSet"16
alert
externalForegroundApp
externalBackgroundApp
otherWorkspace
assertedBackground
uncategorized
invalidating
invalidated
cannot respond to non-destruction scene events after invalidation
we are taking new snapshots
the scene is moving to the foreground
another scene update with a watchdog is happening
the scene moved to the background
the scene is now under lock
v16@?0@"BSActionResponse"8
cannot answer scene questions after invalidation
cannot respond to scene events after invalidation
valid
TB,R,N,GisValid
T@"SBSceneLayoutWindow",R,N
layoutController
T@"SBSceneLayoutViewController",R,N
policyAggregator
T@"SBPolicyAggregator",R,N
com.apple.springboard.services
com.apple.springboard.blockableservices
com.apple.springboard.watchdogserver
com.apple.springboard.backgroundappservices
com.apple.springboard.icongeneration
_SBXXDisplayIdentifierForPID_block_invoke
_SBXXDisplayIdentifiersForPID_block_invoke
_SBXXAppSwitcherServiceRegister
_SBXXApplicationDisplayIdentifiers_block_invoke
_SBXXFrontmostApplicationDisplayIdentifier_block_invoke
_SBXXBundlePathForDisplayIdentifier_block_invoke
_SBXXLocalizedApplicationNameForDisplayIdentifier_block_invoke
_SBXXDataReset
_SBXXSuspend_block_invoke
_SBXXSuspendFrontmostApp_block_invoke
interruptKeybagRefetch from %@
_SBXXInterruptKeybagRefetch_block_invoke
kern_return_t _SBXXWorkspaceCarStatusBarChange(mach_port_t, uint8_t, int32_t, double, mach_port_t, audit_token_t)
kern_return_t _SBXXSetWantsLockButtonEvents(mach_port_t, int32_t, audit_token_t)
Request from process = %@
_SBXXReboot_block_invoke
_SBXXShutDown_block_invoke
_SBXXSetApplicationBadgeNumber_block_invoke
ShowProgress-%@
_SBXXSetApplicationShowsProgress
_SBXXSetAllApplicationsShowProgress
_SBXXSetAllApplicationsShowSyncIndicator
ShowSyncIndicator
_SBXXSetShowsOverridesForRecording
SetOverridesForRecording
_SBXXEnableLockScreenBundle
_SBXXApplicationRequestedDeviceUnlock
SBSRequestPasscodeUnlockUI
_SBXXLockDeviceAndFeatures
SBS External Client (pid: %d) - LockDeviceAndFeatures
_SBXXDimScreen
_SBXXGetBatteryAwakeTime
_SBXXGetRecentSleepsWakes
_SBXXGetScheduledPowerEvents
_SBXXGetBatteryUsageTimesInSeconds
Main/Default%@.png
_SBXXGetNowPlayingAppBundleIdentifier
_SBXXGetDisplayIdentifiers_block_invoke
_SBXXGetExternalAccessoryProtocolsForDisplayIdentifier
_SBXXGetDisplayIdentifiersForExternalAccessoryProtocols
_SBXXRegisterRemoteView
_SBXXUnregisterRemoteView
_SBXXPresentSheetView
_SBXXDismissSheetView
_SBXXSetVoiceControlEnabled_block_invoke
_SBXXGetMediaVolume
_SBXXSetMediaVolume
_SBXXGetIconState_block_invoke
_SBXXGetPendingIconState_block_invoke
_SBXXGetFlattenedIconState_block_invoke
_SBXXSetIconState_block_invoke
_SBXXGetIconPNGData_block_invoke
_SBXXSetAssistantRecognitionStrings
kern_return_t _SBXXSetAppIsConnectedToEA(mach_port_t, pid_t, uint8_t, audit_token_t)
_SBXXGetCurrentHomeScreenImage
_SBXXGetCurrentLockScreenImage
kern_return_t _SBXXAddThermalWarningSuppressionAssertion(mach_port_t, char *, mach_port_t, audit_token_t)
kern_return_t _SBXXActivateAssistantWithContext(mach_port_t, audit_token_t, uint32_t, sbs_property_list_data_t, mach_msg_type_number_t)
kern_return_t _SBXXDeactivateAssistant(mach_port_t, double, uint8_t, uint8_t *, mach_port_t, audit_token_t)
kern_return_t _SBXXPresentRemoteAlert(mach_port_t, audit_token_t, char *, sbs_property_list_data_t, mach_msg_type_number_t, char *, char *)
activated
deactivated
kern_return_t _SBXXIsNamedRemoteAlertCurrentlyActive(mach_port_t, char *, char *, uint8_t *, audit_token_t)
_SBXXSetProceduralWallpaper
com.apple.springboard.unset-procedural-wallpaper
_SBXXSetWallpaperImageForLocations
_SBXXSetWallpaperImageSurfaceForLocations
_SBXXSetWallpaperAsset
_SBXXClearWallpaperAsset
_SBXXGetWallpaperOptions
kern_return_t _SBXXSetWallpaperVariant(mach_port_t, uint8_t, uint8_t *, audit_token_t)
_SBXXGetWallpaperLegibilitySettings
kern_return_t _SBXXAddWallpaperAnimationSuspensionAssertion(mach_port_t, char *, mach_port_t, audit_token_t)
kern_return_t _SBXXAddAlertItemsSuppressionAssertion(mach_port_t, char *, mach_port_t, audit_token_t)
kern_return_t _SBXXAddBiometricAssertion(mach_port_t, char *, mach_port_t, uint8_t, audit_token_t)
kern_return_t _SBXXSetTypingActive(mach_port_t, uint8_t, audit_token_t)
kern_return_t _SBXXOverrideDisplayedDate(mach_port_t, char *, audit_token_t)
yyyy'-'MM'-'dd' 'HH':'mm':'ss
_SBSetAlertSuppressionContextArraysBySectionIdentifierDictionary
_SBSetAlertSuppressionContextArraysBySectionIdentifierDictionary_block_invoke
v32@?0@8@16^B24
kern_return_t _SBSetAlertSuppressionContextArraysBySectionIdentifierDictionary(__strong id, audit_token_t)_block_invoke
CLASS0SMS_ABOUT_TITLE
USSD
DONE
CLASS0SMS_CLASS_0_SMS
CLASS0SMS_FLASH_SMS
CLASS0SMS_ABOUT_BODY
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkNowPlayingLayoutElementViewController.m
[entity isStarkNowPlayingEntity]
com.apple.springboard.powerdown.uiActivatedCount
com.apple.springboard.powerdown.uiDeactivatedByCancelButtonCount
com.apple.springboard.powerdown.uiDeactivatedByIdleCount
com.apple.springboard.powerdown.uiActivatedDurationSeconds
com.apple.springboard.powerdown.powerOffSliderCompletedCount
com.apple.springboard.powerdown.poweroffSliderCanceledByLettingGoCount
orderOutCompletion
T@?,C,N,V_orderOutCompletion
T@"<SBPowerDownControllerDelegate>",W,N,V_delegate
Greeting
Configure
SetupDashBoardStrings
order
strings
v32@?0@8Q16^B24
activationInfoViewController
T@"SBActivationInfoViewController",&,N,V_activationInfoViewController
regulatoryInfoViewController
T@"SBSetupRegulatoryInfoViewController",&,N,V_regulatoryInfoViewController
localizedStrings
T@"NSDictionary",C,N,G_localizedStrings,S_setLocalizedStrings:,V_localizedStrings
stringsOrdering
T@"NSArray",C,N,S_setStringOrdering:,V_stringsOrdering
currentStringIndex
TQ,N,G_currentStringIndex,S_setCurrentStringIndex:,V_currentStringIndex
wifiPrimaryLanguage
T@"NSString",C,N,S_setWifiPrimaryLanguage:,V_wifiPrimaryLanguage
telephonyPrimaryLanguage
T@"NSString",C,N,S_setTelephonyPrimaryLanguage:,V_telephonyPrimaryLanguage
stringCycleTimer
T@"NSTimer",&,N,S_setStringCycleTimer:,V_stringCycleTimer
statusBarAssertion
T@"SBAppStatusBarSettingsAssertion",&,N,V_statusBarAssertion
shouldResetOrderingOnNextCycle
TB,N,G_shouldResetOrderingOnNextCycle,S_setShouldResetOrderingOnNextCycle:,V_shouldResetOrderingOnNextCycle
ringer-silence
SILENT_VOLUME
silent
TB,N,GisSilent,V_silent
com.apple.springboard.orientation.rotationLockEnabled
com.apple.springboard.orientation.rotationLockOrientation
com.apple.springboard.orientation.sb.usageTime.%@.%@
com.apple.springboard.orientation.app.usageTime.%@.%@
com.apple.springboard.orientation.keyboard.usageTime.%@
Timeout
SinglePress
Deallocated while active
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBWalletPrearmRecognizer.m
Cannot start recognizing an invalidated recognizer.
Beginning recognition with timeout: %f
Invalidated by caller
SinglePressReceived (timer active? %d)
DoublePressReceived (timer active? %d)
Recognized
Failed for %{public}@
@"UIImage"8@?0
Td,N,V_completionSpeed
Tq,N,V_completionCurve
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDosidoAnimator.m
use initWithParentView:...
already cleaned up
stepper must be nil
stepped
TB,R,N,GisStepped
stepPercentage
animationContainerView
T@"UIView",R,N,V_transformContainer
fromOrientation
Tq,R,N,V_fromOrientation
spacingBetweenViews
Td,N,V_spacingBetweenViews
direction
TQ,N,V_direction
TB,N,GisHidden,V_hidden
TB,N,GisStepped,V_stepped
transparent
TB,N,GisTransparent,V_transparent
fromView
T@"UIView",&,N,V_fromView
toView
T@"UIView",&,N,V_toView
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBIconListView.m
_viewMap != nil
v32@?0@"SBIconView"8Q16^B24
<%@ %p: frame = %@; Model = %@>
layoutIconList
v32@?0@"SBIcon"8Q16^B24
call to %s when already rotating
-[SBIconListView prepareToRotateToInterfaceOrientation:]
Tq,N,V_orientation
statusBarHeight
Td,N,V_statusBarHeight
editing
TB,N,GisEditing,V_isEditing
purged
TB,N,V_purged
layoutReversed
TB,N,GisLayoutReversed,V_layoutReversed
wallpaperRelativeFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_wallpaperRelativeFrame
layoutDelegate
T@"<SBIconListLayoutDelegate>",W,N,V_layoutDelegate
previousIconFocusGuide
T@"UIFocusGuide",&,N,V_previousIconFocusGuide
nextIconFocusGuide
T@"UIFocusGuide",&,N,V_nextIconFocusGuide
syncController
T@"SBSyncController",&,N,G_syncController,S_setSyncController:,V_syncController
userAuthenticationController
T@"SBFUserAuthenticationController",R,N,V_userAuthenticationController
EmergencyAlert
insets
T{UIEdgeInsets=dddd},N,V_insets
SBSMSClass0String
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSMSClass0Alert.m
string
address
void _SMSClass0Handler(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
CLASS_0_ALERT_MESSAGE_FROM
MPInCallAlertStateChangeNotification
bounds
T{CGRect={CGPoint=dd}{CGSize=dd}},V_bounds
Change Battery Device Count
SBBatteryDeviceCountTestRecipeIncreaseNotification
SBBatteryDeviceCountTestRecipeDecreaseNotification
cornerRadiusEnabled
TB,N,V_cornerRadiusEnabled
containerView
T@"UIView",R,N,V_containerView
T@"SBIconImageView",R,N
crossfadeView
T@"UIView",R,N
scalingView
masksCorners
TB,N,V_masksCorners
performsTrueCrossfade
TB,N,V_performsTrueCrossfade
stretchAnchorPoint
T{CGPoint=dd},N,V_stretchAnchorPoint
iconProgressPieImages
backgroundAlpha
Td,N,V_backgroundAlpha
foregroundAlpha
Td,N,V_foregroundAlpha
circleRadiusFraction
Td,N,V_circleRadiusFraction
pauseRadiusFraction
Td,N,V_pauseRadiusFraction
circleBoundingRect
displayedState
Tq,N,V_displayedState
displayingPaused
TB,N,V_displayingPaused
displayedFraction
Td,N,V_displayedFraction
activeStateTransition
T@"_SBIconProgressStateTransition",&,N,V_activeStateTransition
activePausedTransition
T@"_SBIconProgressPausedTransition",&,N,V_activePausedTransition
activeFractionTransition
T@"_SBIconProgressFractionTransition",&,N,V_activeFractionTransition
T@"<SBIconProgressViewDelegate>",W,N,V_delegate
overlayImage
T@"UIImage",&,N,V_overlayImage
canAnimate
TB,N,V_canAnimate
SBUSSDString
SBUSSDAllowsResponse
SBUSSDAlertSentResponse
Test USSD Alert
void _PrefNotificationHandler(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUSSDAlert.m
PrefNotifications
void _USSDHandler(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
USSD_ERROR
USSD_TERMINATED
-[SBLockScreenPluginOverlayContext initWithPlugin:lockScreenViewController:]_block_invoke
disabledMesaMatching
TB,N,V_disabledMesaMatching
-imageViewParentView called on SBIconImageAppCrossfadeView directly
-crossfadeViewParentView called on SBIconImageAppCrossfadeView directly
imageViewParentView
crossfadeViewParentView
crossfadeType
TQ,N,V_crossfadeType
BadgeBackground
SBIconBadgeView.BadgeBackground
@"SBIconAccessoryImage"16@?0@"NSString"8
%@ - %@%@
 (highlighted)
queuedAnimation
T@?,C,N,V_queuedAnimation
layer.transform
StarkBadgeBackground
CarDisplayIconBadge
@"UIView<SBUIPasscodeLockView>"8@?0
Old lock-screen passcode UI
completionBlock
T@?,C,N,V_completionBlock
currentDate
T@"NSDate",R,C,N
overrideDate
T@"NSDate",C,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUISwitchAppSwipeAnimationController.m
already complete
newDirection != _currentDirection
newDirection != SBDosidoDirectionUnknown
Cancelling animator: %@
Swapping directions to: %@
right
left
startingApp
targetApp
endingApp
currentAnimator
currentDirection
Cleaning up animation.
Step backward to start: %@
Step forward to end: %@
_targetTransitionContext != nil
Created new dosido animator to %@: %@
_targetTransitionContext == nil
Created new stretch animator: %@
_currentAnimator == nil
Animator completed: %@
_currentAnimator == animator
TQ,R,N,V_currentDirection
targetTransitionContext
T@"SBWorkspaceApplicationTransitionContext",R,N,V_targetTransitionContext
endingTransitionContext
T@"SBWorkspaceApplicationTransitionContext",R,N,V_endingTransitionContext
canReinitiateActivation
UserCanReinitiateActivation
customerServicePhoneNumber
CustomerServicePhoneNumber
shouldHideAllVoicemailUI
ShouldHideAllVoicemailUI
disabledApplicationIDs
DisabledApplications
carrierName
CarrierName
showClass0SMSFromField
ShowClass0SMSFromField
homeCountryCode
HomeCountryCode
ussdFilterStrings
USSDFilterPatterns
ussdFilterSometimesStrings
USSDFilterSometimesPatterns
TB,R,D,N
T@"NSString",R,D,N
T@"NSArray",R,D,N
Enable Test Plugin
enablePlugin
Enable Lost Mode Plugin
enableLostModePlugin
None
MediumDark
Dark
Legibile
Background Style
Default
Disabled
Exclusive
Temporary
Notification Behavior
Overlay
Normal
Background
Presentation Style
Restrict Siri
restrictSiri
Restrict Camera
restrictCamera
Restrict Unlock
restrictUnlock
Restrict Logout
restrictLogout
Restrict TouchID
restrictTouchID
Restrict Media Controls
restrictMediaControls
Restrict Today Center
restrictTodayCenter
Restrict Control Center
restrictControlCenter
Restrict Notification Center
restrictNotificationCenter
Hide Status Bar
hideStatusBar
Hide Time & Date
hideTimeAndDate
Hide Subtitle
hideSubtitle
Subtitle Value
subtitleValue
Disable on Unlock
disableOnUnlock
Lock Screen Test Plugin
TB,V_enablePlugin
TB,V_enableLostModePlugin
Tq,V_presentationStyle
Tq,V_backgroundStyle
Tq,V_notificationBehavior
TB,V_restrictSiri
TB,V_restrictCamera
TB,V_restrictUnlock
TB,V_restrictLogout
TB,V_restrictTouchID
TB,V_restrictMediaControls
TB,V_restrictTodayCenter
TB,V_restrictControlCenter
TB,V_restrictNotificationCenter
TB,V_hideStatusBar
TB,V_hideTimeAndDate
TB,V_hideSubtitle
T@"NSString",&,V_subtitleValue
TB,V_disableOnUnlock
Render Overlay Persistence
asdfasdfasdf
login
foregroundColor
sharpness
offset
renderMode
invertsShape
T^{CGColor=}
lineWidth
actionsToDeliver
T@"NSSet",&,N
B16@?0^{__CFString=}8
Voice
Data
Sync Data Circuit
Async Data Circuit
Packet Access
Pad Access
On All Calls
When Busy
When Unanswered
When Unreachable
All Calls
All Conditional Calls
All Outgoing
All Incoming
Outgoing International
Outgoing International, Except Home Country
Incoming While Roaming Outside Home Country
Incoming, Not On SIM
All Services
All Outgoing Services
All Incoming Services
Enabled
Unknown
Network Controlled
Not Available
Available
No Address
Type %d
No Service Specified
Activation
Deactivation
Interrogation
Registration
Erasure
PrefNotificationName
PrefNotificationInfo
Forwards to %@
%@ Call Forwarding
%@%@
%@ Call Waiting
%@ Call Barring
%@ Fixed Dialing%@
Connected Line Presentation
Calling Line Presentation
Connected Line ID Restriction
Calling Line ID Restriction
SIM Lock
Service Center Address
Supplementary Service Password
Calling Name Presentation
PIN2
Setting Interrogation Succeeded
Setting Interrogation Failed
Setting %@ Succeeded
Setting %@ Failed
com.apple.springboard.homescreenLayout.numFolders
com.apple.springboard.homescreenLayout.numDockItems
com.apple.springboard.homescreenLayout.numDockFolders
com.apple.springboard.homescreenLayout.numPages
LOCK_SCREEN_SUPERVISION_NOTICE_WITH_ORGNAME
LOCK_SCREEN_SUPERVISION_NOTICE
INTERNAL_INSTALL_LEGAL_DECLARATION_DO_NOT_LOCALIZE
SpringBoard-Internal
INTERNAL_INSTALL_LEGAL_INSTRUCTIONS_DO_NOT_LOCALIZE
INTERNAL_INSTALL_LEGAL_CONTACT_DO_NOT_LOCALIZE
%@, %@ %@
T@"<SBDashBoardStatusTextViewControllerDelegate>",W,N,V_delegate
overrideFooterText
T@"NSString",C,N,V_overrideFooterText
ready
sliding
passcode
transitioning to app
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDashBoardSlideUpToAppController.m
can't transition from %@ to %@
v24@?0@"SBBestAppSuggestion"8@"SBApplication"16
v40@?0{CGRect={CGPoint=dd}{CGSize=dd}}8
facetime-audio://user@example.com
DashBoard-SlideUpToApp
TB,R,N,GisTransitioning
transitionContext
T{?=d{?={?=dB}{?=dB}}q},R,N
TQ,N,G_state,S_setState:,V_state
panGestureRecognizer
T@"UIPanGestureRecognizer",R,N,V_slideUpToAppGestureRecognizer
clippingView
T@"UIView",R,N,V_clippingView
TB,R,N,GisSliding
T@"<SBDashBoardSlideUpToAppControllerDelegate><SBDashBoardViewPresenting>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkAppToImpersonatedAppWorkspaceTransaction.m
Alert impersonating app is required for this transaction.
SBStarkAppToImpersonatedAppWorkspaceTransaction
__waitingForAppToActivateToKickOffAlertActivationTransaction
commitTransaction
void _NetworkReselect(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBNetworkReselectionAlert.m
void _RegistrationCallback(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBMobilityManagementAlert.m
MOBILITY_MANAGEMENT_FORMAT_STRING
Smart chip not provisioned
Smart chip not allowed
Call failed
Phone not allowed
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkFolderView.m
CarDisplayLeftArrow
CarDisplayRightArrow
SingleIconList-No-Scrolling-Necessary
com.apple.SBUserNotification
Passcode Full-Screen Alert
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDashBoardIdleTimerFactory.m
provider must be nonnull
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBIsolationManager.m
isolationIdentifier
Attempting to register isolation identifier '%@', which is already registered.
Attempting to register view controller '%@', which is already registered.
requester
Attempting to register requester '%@' for unknown isolation identifier '%@'
identifiersToViewControllers
identifiersToRequesters
@16@?0@8
addition
removal
SBUserNotificationDoneNotification
<%@:%p -> %@:%@>
v24@?0{CGSize=dd}8
T@,W,N,V_delegate
serviceClassName
T@"NSString",C,N,V_serviceClassName
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUserNotificationAlert.m
Must specify both SBUserNotificationRemoteServiceBundleIdentifier and SBUserNotificationRemoteViewControllerClassName or neither
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
v24@?0@"_UIRemoteViewController"8@"NSError"16
_cleanedUp == YES
source
sound
v16@?0@"UITextField"8
v16@?0@"UIAlertAction"8
cannot activate an already cleaned up alert
SpringBoard: unlock from SBUserNotificationAlert
keyboardTypes
T@,&,V_keyboardTypes
autocapitalizationTypes
T@,&,V_autocapitalizationTypes
autocorrectionTypes
T@,&,V_autocorrectionTypes
textFieldTitles
T@,&,V_textFieldTitles
textFieldValues
T@,&,V_textFieldValues
soundPath
T@"NSString",&,V_soundPath
soundID
TI,V_soundID
soundIDBehavior
TI,V_soundIDBehavior
vibrationPattern
T@"NSDictionary",&,V_vibrationPattern
soundAlertType
Tq,V_soundAlertType
soundAlertTopic
T@"NSString",&,V_soundAlertTopic
avControllerAttributes
T@"NSDictionary",&,V_avControllerAttributes
avItemAttributes
T@"NSDictionary",&,V_avItemAttributes
alertHeader
T@"NSString",&,V_alertHeader
alertMessage
T@"NSString",&,V_alertMessage
alertMessageDelimiter
T@"NSString",&,V_alertMessageDelimiter
lockScreenAlertHeader
T@"NSString",&,V_lockScreenAlertHeader
lockScreenAlertMessage
T@"NSString",&,V_lockScreenAlertMessage
lockScreenAlertMessageDelimiter
T@"NSString",&,V_lockScreenAlertMessageDelimiter
defaultButtonTitle
T@"NSString",&,V_defaultButtonTitle
alternateButtonTitle
T@"NSString",&,V_alternateButtonTitle
otherButtonTitle
T@"NSString",&,V_otherButtonTitle
defaultResponseLaunchBundleID
T@"NSString",&,V_defaultResponseLaunchBundleID
defaultResponseLaunchURL
T@"NSURL",&,V_defaultResponseLaunchURL
remoteViewControllerClassName
T@"NSString",&,V_remoteViewControllerClassName
remoteServiceBundleIdentifier
T@"NSString",&,V_remoteServiceBundleIdentifier
extensionIdentifier
T@"NSString",&,V_extensionIdentifier
contentViewControllerForAlertController
T@"UIViewController",&,V_contentViewControllerForAlertController
alertExtension
T@"NSExtension",&,V_alertExtension
extensionRequest
T@"<NSCopying>",C,V_extensionRequest
colors
T@"NSArray",C,N,V_colors
locations
T@"NSArray",C,N
startPoint
T{CGPoint=dd}
endPoint
SBBluetoothAccessoryBatteryMonitor
<%@: %p, bundle=%@ default=%i current=%i>
defaultVisible
TB,R,V_defaultVisible
currentlyVisible
TB,V_currentlyVisible
HideApplicationModalAlertsAssertion
v16@?0@"BSSimpleAssertion"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBModalAlertPresentationCoordinator.m
We shouldn't have an assertion already at this point.
SystemModalAlertActive
com.apple.springboard.showingAlertItem
@"UIApplicationSceneTransitionContext"16@?0@"UIMutableApplicationSceneSettings"8
springBoardPresenter
T@"SBModalAlertPresenter",&,N,G_getSpringBoardPresenter,S_setSpringBoardPresenter:,V_springBoardModalAlertPresenter
T@"<SBModalAlertPresentationCoordinatorDelegate>",W,N,V_delegate
TB,R,D,N,GisShowingModalAlert
showingSystemModalAlert
TB,R,D,N,GisShowingSystemModalAlert
canShowApplicationModalAlerts
TB,R,D,N,GcanShowApplicationModalAlerts
start
transitionFraction
T{?=qqd},N,V_state
applicationStates
applicationAnimationStates
targetView
T@"UIView",&,N,V_targetView
animatingResetOrReveal
TB,R,N,GisAnimatingResetOrReveal,V_animatingResetOrReveal
TB,R,N,GisActivated
T@"<SBIdleTimerDelegate>",W,N
T@"<SBIdleTimerDelegate>",W,N,V_delegate
@16@?0@"NSString"8
T@"<SBBannerButtonViewControllerDelegate>",W,N,V_delegate
SBRootFolderDockFractionAnimatorReason
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBRootFolderController.m
Cannot expand or collapse a root folder view controller
dockAnimationWindow
T@"_SBRootFolderDockAnimationViewControllerWindow",&,N,V_dockAnimationWindow
managesStatusBarWidth
TB,N,V_managesStatusBarWidth
folder
T@"SBRootFolder",&,D,N
contentView
T@"SBRootFolderView",R,D,N
dockEdge
forcedInterfaceOrientation
Tq,N,V_forcedInterfaceOrientation
AppearanceChanged
BehaviorChanged
WillDisappear
DidDisappear
DeactivateLayoutElement
DidDeactivate
WillActivate
DidResignActive
DidBecomeActive
Unlock
AuthenticationChanged
Screen On
Screen Off
IdleTimerExpired
IdleTimerDidReceiveEvent
IdleTimerDidWarn
IdleTimerWillRefresh
IdleTimerDidRefresh
SignificantUserInteraction
BacklightChanged
HomeButton
LockButton
VolumeUpButton
VolumeDownButton
HeadsetButton
HeadsetButtonHeld
FingerOn
(unknown)
type
value
consumable
Tq,N,V_type
TB,N,GisConsumable,V_consumable
T@"NSNumber",&,N,V_value
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAlertItemsController.m
Unavailable
SpringBoard - SBAlertItemsController
superModalItemsQueue
alertItemsQueue
superModalPresentations
presentations
Presenters
lockScreenModalAlertItemPresenter
lockScreenNotificationsAlertItemPresenter
unlockedAlertItemPresenter
activePresenters
v32@?0@"SBAlertItem"8@"<SBAlertItemPresenter>"16^B24
Only the SBAlertItemsController can deactivate for pended reasons.
The system is shutting down or pending a restart.
Already presenting an item of this class type.
Alert cannot show while we're in Setup.
Alert cannot show in the login window session.
Forced to pend for reasons: %@
Restricted because we have a currently visible super modal presentation.
Restricted because we're in Setup.
Restricted to only appear over the following bundle ids: %@
Restricted because there's no presenter that can handle this alert item at this time.
Restricted because the presenter for this alert item is busy.
Restricted while in an emergency call.
Restricted while the smart cover is on.
alertItem
v16@?0@"<SBAlertItemsControllerObserver>"8
We must have a presentation for an alert item to dismiss it (alertItem: %@).
a valid reason must be given for changing the pending state
-[SBAlertItemsController captureSuppressionAssertionWithPort:reason:]
suppressionAssertions
T@"<SBAlertItemPresenter><SBLockScreenActionProvider>",&,N,V_lockScreenModalAlertItemPresenter
T@"<SBAlertItemPresenter>",&,N,V_lockScreenNotificationsAlertItemPresenter
T@"<SBAlertItemPresenter>",&,N,V_unlockedAlertItemPresenter
PhoneSettingsPromptForSIMUnlockNotification
notReady
missing
pinLocked
pukLocked
pukHopelesslyLocked
fixedDialingLocked
networkPersonalizationLocked
coporatePersonalizationLocked
operatorPersonalizationLocked
operatorSubsetPersonalizationLocked
serviceProviderPersonalizationLocked
+[SBSIMLockManager sharedInstance]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSIMLockManager.m
void _simStatusChangedNotification(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
MISSING_SIM_TITLE
BAD_SIM_TITLE
PIN_LOCKED_TITLE
PUK_LOCKED_TITLE
PUK_HOPELESSLY_LOCKED_TITLE
FIXED_DIALING_LOCKED_SIM_TITLE
LOCKED_SIM_TITLE
BRICKED_AND_SIM_LOCKED_STRING
PUK_LOCKED_STRING
PUK_HOPELESSLY_LOCKED_STRING
PERSONALIZATION_LOCKED_SIM_STRING
UNLOCK
CFBundleDisplayName#Car
UIApplicationShortcutWidget
UIApplicationShortcutItems
UIApplicationShortcutItemsVersion
com.apple.developer.legacyvoip
com.apple.
InfoPlist
InfoPlist-OrbHW
SBIconMasqueradeIdentifier
SBIsLaunchableDuringSetup
_UIDisableClassicMode
UILaunchImages
SBIconVisibilitySetByAppPreference
SBIconVisibilityDefaultVisible
SBPrefersSavedSnapshots
SBBehavesAsCaller
SBWantsLiveResume
UIRequiresFullScreen
SBUsesNetwork
UIRequiresPersistentWiFi
SBIconClass
UIApplicationShouldDisableScreenJail
SBLaunchSuspendedAlways
SBRequiresPasscodeBeforeFirstUnlock
SBAppUsesLocalNotifications
SBDomainsToPreheat
com.apple.springboard.allowIconVisibilityChanges
com.apple.springboard.disallowNotificationCenter
com.apple.springboard.disallowControlCenter
com.apple.newsstand.content-notification-daily-limit
application-identifier
hidpi
cloudkit
Documents/Inbox/
10.0
systemApplication
TB,R,N,GisSystemApplication
internalApplication
TB,R,N,GisInternalApplication
appleApplication
TB,R,N,GisAppleApplication
T@"NSString",R,C,N,V_applicationShortcutWidgetBundleIdentifier
T@"NSArray",R,N
dynamicApplicationShortcutItemsVersion
TQ,R,N,V_dynamicApplicationShortcutItemsVersion
launchableDuringSetup
TB,R,N,GisLaunchableDuringSetup,V_isLaunchableDuringSetup
usesSplashBoard
TB,R,N,V_usesSplashBoard
disablesClassicMode
TB,R,N,V_disablesClassicMode
T@"NSString",R,C,N,V_displayName
carDisplayName
visibilityOverride
TQ,R,N,V_visibilityOverride
monarchLinked
TB,R,N,GisMonarchLinked,V_isMonarchLinked
prefersSavedSnapshots
TB,R,N,V_prefersSavedSnapshots
behavesAsCaller
TB,R,N,V_behavesAsCaller
wantsLaunchWithoutPNG
TB,R,N,V_wantsLaunchWithoutPNG
wantsFullScreen
TB,R,N,V_wantsFullScreen
defaultStatusBarStyle
Tq,R,N,V_defaultStatusBarStyle
ignoredStatusBarStyleOverrides
Ti,R,N,V_ignoredStatusBarStyleOverrides
networkUsageTypes
Ti,R,N,V_networkUsageTypes
iconClass
T#,R,N,V_iconClass
gameCenterEnabled
TB,R,N,GisGameCenterEnabled,V_isGameCenterEnabled
wasGameCenterEverEnabled
TB,R,N,V_wasGameCenterEverEnabled
requiresHiDPI
TB,R,N,V_requiresHiDPI
disablesScreenJail
TB,R,N,V_disablesScreenJail
cloudKitEnabled
TB,R,N,GisCloudKitEnabled,V_isCloudKitEnabled
cloudDocsEnabled
TB,R,N,GisCloudDocsEnabled,V_cloudDocsEnabled
alwaysLaunchesSuspended
TB,R,N,V_alwaysLaunchesSuspended
requiresPasscodeIfLaunchedBeforeFirstUnlock
TB,R,N,V_requiresPasscodeIfLaunchedBeforeFirstUnlock
systemAppSupportsLocalNotifications
TB,R,N,V_systemAppSupportsLocalNotifications
uninstallCapability
TQ,R,N,V_uninstallCapability
voipClass
TQ,R,N,V_voipClass
T@"CRCarPlayAppDeclaration",R,N,V_carPlayDeclaration
supportedTypes
Ti,R,N,V_supportedTypes
statusBarIsLegacy
TB,R,N,GisStatusBarLegacy,V_statusBarIsLegacy
domainsToPreheat
T@"NSArray",R,N,V_domainsToPreheat
launchImageInfo
T@"NSArray",R,N,V_launchImageInfo
launchInterfaceFileName
T@"NSString",R,N,V_launchInterfaceFileName
urlSchemes
T@"NSSet",R,N,V_urlSchemes
Tq,R,N,V_whitePointAdaptivityStyle
documentInboxURL
T@"NSURL",R,N,V_documentInboxURL
disallowsNotificationCenter
TB,R,N,V_disallowsNotificationCenter
disallowsControlCenter
TB,R,N,V_disallowsControlCenter
allowedNKNotificationsPerDay
TQ,R,N,V_allowedNKNotificationsPerDay
iconMasqueradeIdentifier
T@"NSString",R,C,N,V_iconMasqueradeIdentifier
Homescreen
RemoteAlert
SwitcherService
ContinuityApp
WebApp
SideSwitcher
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDisplayItem.m
use initWithType:...
Must have type & identifier %@, %@
Type
Display Identifier
%@ %@
T@"NSString",R,C,N,V_type
T@"NSString",R,C,N,V_displayIdentifier
ENTER_PIN_TITLE
PERSONALIZATION_LOCK_ENTER_CODE
NETWORK_LOCKED_LABEL
CORPORATE_LOCKED_LABEL
OPERATOR_LOCKED_LABEL
OPERATOR_SS_LOCKED_LABEL
SERVICE_PROVIDER_LOCKED_LABEL
PIN_ENTRY_SUCCESS
WAITING_RESPONSE_TITLE
WAIT_FOR_UNLOCK
@"SBUIPasscodeLockViewSIMLockKeypad"8@?0
PIN_ATTEMPT_REMAINING
PIN_ATTEMPTS_REMAINING
PIN_UNLOCK_FAILED_TITLE
PERSONALIZATION_UNLOCK_FAILED_TITLE
~/Library/SpringBoard/%@-CarDisplayIconState.plist
~/Library/SpringBoard/%@-CarDisplayDesiredIconState.plist
vehicleId
T@"NSString",R,N,V_vehicleId
breadcrumbIdentifiers
T@"NSArray",R,N,V_breadcrumbIdentifiers
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBMainWorkspaceEntity.m
better be main display
SBDashBoardIsDeactivated
SBDashBoardScreenOff
SpringBoard - SBDashBoardIdleTimerEventPublisher
idleTimer
disabledAssertions
wantsToHandleItsOwnAnimation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIAnimationForAlertAnimationProvider.m
[alert conformsToProtocol:@protocol(SBWorkspaceAlertAnimationProviding)]
%@ %@ (%@)
LOW_BATT_TITLE
LOW_BATT_MSG_LEVEL
AUTO_%@_SYNC_LOW_POWER
%@_SYNC_LOW_POWER
SYNC_LOW_POWER
wapi
WLAN
WIFI
. %@
f+PE44W6AO2UENJk3p2s5A
ENABLE_LOW_POWER
com.apple.springboard.lowBatteryAlertAction.lowPowerMode
CLOSE
com.apple.springboard.lowBatteryAlertAction.close
appLabel
descriptionLabel
iconView
spaceFromLeftEdge
cornerRadiusExtension
iconMargin
|[contentView]|
V:|[contentView]-cornerRadiusExtension-|
|-iconMargin-[iconView]-iconMargin-[appLabel][descriptionLabel]-(>=spaceFromLeftEdge)-|
|-iconMargin-[iconView]-iconMargin-[appLabel]
fakeWallpaperView
|[fakeWallpaperView]|
V:|[fakeWallpaperView]|
blurView
|[blurView]|
V:|[blurView]|
ARRIVED_AT_HOME_SUGGESTION
ARRIVED_AT_WORK_SUGGESTION
CONTINUITY_LOCATION_BASED_SUGGESTION
LOCATION_DONATED_IN_APP_SUGGESTION_FORMAT
LOCATION_COPIED_IN_APP_SUGGESTION_FORMAT
CONTINUITY_ORIGINATOR_NAME_FORMAT
CARPLAY_CONNECTED_SUGGESTION
DEVICE_CONNECTED_SUGGESTION_NAME_FORMAT
HEADPHONES_CONNECTED_SUGGESTION
BLUETOOTH_DEVICE_CONNECTED_SUGGESTION
GENERIC_DEVICE_CONNECTED_SUGGESTION
SINGLE_LINE_SUGGESTION_FORMAT
LOCATION_DIRECTION_LAUNCH_SUGGESTION_FORMAT
LOCATION_RIDE_LAUNCH_SUGGESTION_FORMAT
SIRI
MORNING1_FIRST_WAKE_SUGGESTION_FORMAT
MORNING2_FIRST_WAKE_SUGGESTION_FORMAT
AFTERNOON1_FIRST_WAKE_SUGGESTION_FORMAT
AFTERNOON2_FIRST_WAKE_SUGGESTION_FORMAT
EVENING1_FIRST_WAKE_SUGGESTION_FORMAT
EVENING2_FIRST_WAKE_SUGGESTION_FORMAT
NIGHT1_FIRST_WAKE_SUGGESTION_FORMAT
NIGHT2_FIRST_WAKE_SUGGESTION_FORMAT
MORNING1_FIRST_WAKE_SUGGESTION_NONAME
MORNING2_FIRST_WAKE_SUGGESTION_NONAME
AFTERNOON1_FIRST_WAKE_SUGGESTION_NONAME
AFTERNOON2_FIRST_WAKE_SUGGESTION_NONAME
EVENING1_FIRST_WAKE_SUGGESTION_NONAME
EVENING2_FIRST_WAKE_SUGGESTION_NONAME
NIGHT1_FIRST_WAKE_SUGGESTION_NONAME
NIGHT2_FIRST_WAKE_SUGGESTION_NONAME
T@"<SBSwitcherAppSuggestionBottomBannerViewDelegate>",W,N,V_delegate
usesFakeBlur
TB,N,V_usesFakeBlur
representedAppSuggestion
T@"SBBestAppSuggestion",R,N
TQ,R,N,V_style
Modal Alerts
Icon List Scrolling
Accessory
Content
role
extent
reservedForHorizontalScrolling
coordinateSpace
T@"<UICoordinateSpace>",R,W,N,V_coordinateSpace
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_extent
Tq,N,V_role
T@"NSString",C,N,V_identifier
identity
T@"<UICoordinateSpace>",W,N,V_identity
provider
T@,W,N,V_provider
TB,N,GisReservedForHorizontalScrolling,V_reservedForHorizontalScrolling
TB,N,GdashBoardRegionIsReservedForHorizontalScrolling
dashBoardRegionRole
dashBoardRegionReservedForHorizontalScrolling
SBUIAnimationZoomDownLockScreenToHome
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIAnimationZoomDownDashBoardToHome.m
[dashBoardAlert conformsToProtocol:@protocol(SBDashBoardViewControllerProtocol)]
use the designated initializer
NETWORK_LOST
NETWORK_LOST_TEXT
prefs:root=Carrier
NETWORK_LOST_LOCK_LABEL
NETWORK_LOST_LOCK_LABEL_SHORT
NETWORK_RESTRICTED
NETWORK_RESTRICTED_TEXT
SETTINGS
latestPressesEvent
T@"UIPressesEvent",R,N,V_latestPressesEvent
-[SBTestDataProvider init]
 [UPDATE]
 [UPDATE]
[UPDATE]
PPT Notification #%d
Notification %@
Message
com.apple.mobilecal
com.apple.springboard.test.fruit
Ripe
ripe
Rotten
rotten
com.apple.springboard.test
com.apple.springboard.test.vegetable
Produce
Fruit
Vegetable
-[SBTestDataProvider clearedInfoForClearingAllBulletinsWithLastClearedInfo:]
-[SBTestDataProvider clearedInfoForClearingBulletinsFromDate:toDate:lastClearedInfo:]
-[SBTestDataProvider clearedInfoForBulletins:lastClearedInfo:]
-[SBTestDataProvider dataProviderDidLoad]
-[SBTestDataProvider receiveMessageWithName:userInfo:]
-[SBTestDataProvider attachmentPNGDataForRecordID:sizeConstraints:]
-[SBTestDataProvider attachmentAspectRatioForRecordID:]
-[SBTestDataProvider noteSectionInfoDidChange:]
T@"UIScreen",R,N,V_screen
animationWindow
T@"SBWindow",R,N,V_animationWindow
fallbackIconContainer
T@"UIView",R,N,V_fallbackIconContainer
none
medusaCapable
dynamicResizing
AIRPLANE_CELL_PROMPT_SMS
AIRPLANE_CELL_PROMPT
AIRPLANE_DISABLE
AIRPLANE_CANCEL
wi-fi
AIRPLANE_DATA_PROMPT_WLAN
AIRPLANE_DATA_PROMPT
AIRPLANE_DATA_PROMPT_NO_WIFI
AIRPLANE_DATA_SETTINGS
AIRPLANE_DATA_OK
AIRPLANE_PROMPT
IN_CALL_LAUNCH_ALERT
IN_CALL_LAUNCH_OK
prefs:root=ROOT#AIRPLANE_MODE
Attempting to clean up a nil tree node view controller after setting the expanded tree node
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBTreeNodeViewController.m
popExpandedTreeNodeAnimated:withCompletion: was called without an expanded tree node in the stack.
the completion wasn't called immediately like it should be
B16@?0@?<v@?@?<v@?B>>8
v16@?0@?<v@?B>8
Hit a nil expanded view controller
setTopExpandedTreeNode: was called with no expanded tree node in the stack.
Received a delegate callback from an unknown transition : expected=%@ actual=%@ -> treeNodeVC=%@
Cannot set a nil 'from' view controller
Cannot set a nil 'to' view controller
Must be called during a transition
Delegate returned a target tree node that was not equal to or a descendant of the proposed tree node
@"<SBTreeNode>"24@?0@"SBTreeNodeViewController"8@"<SBTreeNode>"16
v24@?0@"SBTreeNodeViewController"8@"<SBTreeNode>"16
Delegate returned a destination tree node that was not between the currently expanded tree node and the target tree node
fromVC != nil
toVC != nil
already tracking a transition operation : tracking=%i new=%i -> treeNodeVC=%@
already tracking a transition : tracking=%@ new=%@ -> treeNodeVC=%@
Must be called within a transition
parentTreeNodeViewController
T@"SBTreeNodeViewController",W,N,V_parentTreeNodeViewController
isTransitioning
_fromExpandedViewController
T@"SBTreeNodeViewController",&,N,S_setFromExpandedViewController:
_toExpandedViewController
T@"SBTreeNodeViewController",&,N,S_setToExpandedViewController:
_fromExpandedTreeNode
T@"<SBTreeNode>",R,N
_toExpandedTreeNode
_expandedTreeNode
_expandedViewController
T@"SBTreeNodeViewController",R,N
treeNode
T@"<SBTreeNode>",&,N
T@"<SBTreeNodeViewControllerDelegate>",W,N,V_delegate
containingExpandedTreeNode
expanded
TB,R,N,GisExpanded
expandedTreeNodes
effectiveExpandedTreeNode
expandedChildViewController
deepestExpandedDescendantViewController
SBWifiManagerLinkWillChangeNotification
SBWifiManagerLinkDidChangeNotification
SBWifiManagerLinkHotSpotnessDidChangeNotification
SBWifiSignalStrengthChangedNotification
SBWifiManagerPrimaryInterfaceMayHaveChangedNotification
PRESENT
NOT PRESENT
SBWiFiManager callback thread
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBWiFiManager.m
SBWiFiManager: got a key/value callback that it doesn't understand -> %@
SBWiFiManager: shouldn't be possible to get a key/value callback before the runloop has been started
LOW_DISK_SPACE_TITLE
LOW_DISK_SPACE_MESSAGE
LOW_DISK_SPACE_DISMISS
LOW_DISK_SPACE_SETTINGS
prefs:root=General&path=STORAGE_ICLOUD_USAGE/DEVICE_STORAGE
SBLockdownDeviceActivatedChangedNotification
MISMATCHED_SIM_TITLE
MISMATCHED_SIM_BODY
REGISTRATION_FAILED_TITLE
REGISTRATION_FAILED_BODY
SBITunesRestoreStateDidChangeNotification
SBResetOrRestoreStateDidChangeNotification
com.apple.MobileSync.BackupAgent.RestoreStarted
com.apple.MobileSync.BackupAgent.kBackupAgentRestoreEnded
com.apple.springboard.reset-started
com.apple.springboard.reset-ended
Sync restore or reset
com.apple.SpringBoard.ReadyForRestore
device reset
ResetOrRestoreComplete
com.apple.springboard.reset-ready
-[SBSyncController _delayedBeginReset]
BackupAgent
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkStatusBarWindow.m
configuration
rootViewController must be a subclass of SBStarkStatusBarViewController
rootViewController
T@"SBStarkStatusBarViewController",&,N
com.apple.springboard.launchwithzoomanimation
com.apple.springboard.suspendwithzoomanimation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIAnimationZoomApp.m
v16@?0@"<SBViewControllerTransitionCoordinatorContext>"8
zoomDirection
TQ,R,N,V_zoomDirection
ScreenFlash
<%@: %p; type = %@; sectionID = %@>
WeeApp
Bulletin
q24@?0@8@16
subsectionID
sectionInfo
T@"BBSectionInfo",&,N,V_sectionInfo
sectionID
T@"NSString",C,N,V_sectionID
bulletins
T@"NSArray",R,N,V_bulletins
widget
T@,&,N,V_widget
sortDescriptors
T@"NSArray",&,N,V_sortDescriptors
iconImage
T@"UIImage",&,N,V_iconImage
largeIconImage
T@"UIImage",&,N,V_largeIconImage
showsInLockScreen
TB,N,V_showsInLockScreen
showsMessagePreview
TB,N,V_showsMessagePreview
messageNumberOfLines
TQ,N,V_messageNumberOfLines
subsectionIDs
T@"NSSet",R,W,N
T@"NSString",R,C,N,V_subsectionID
%s is not a valid initializer. You must call -[%@ initWithWorkspaceTransitionRequest:].
-[SBUIWorkspaceAnimationController initWithTransitionContextProvider:]
workspaceTransitionRequest
T@"SBWorkspaceTransitionRequest",R,N
SpotlightBackdropGroup
groupName
T@"NSString",&,N,V_privateGroupName
usesTint
TB,N,V_usesTint
lowQualityStyle
TQ,N,V_lowQualityStyle
requestedBackgroundStyle
SBAppSwitcherAlertRequester
remoteAlertHasCustomWallpaperStyle
TB,N,V_remoteAlertHasCustomWallpaperStyle
remoteAlertWallpaperStyle
Tq,N,V_remoteAlertWallpaperStyle
remoteAlertRemoteTunnelingWasActive
TB,N,V_remoteAlertRemoteTunnelingWasActive
T@"SBDisplayItem",R,C,N,V_displayItem
com.apple.springboard.statusbarservicesqueue
com.apple.springboard.statusbareventqueue
com.apple.springboard.statusbarservices
-[SBStatusBarStyleOverridesAssertionManager updateForegroundApplications:withOptions:completion:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStatusBarStyleOverridesAssertionManager.m
v20@?0i8@"NSMapTable"12
-[SBStatusBarStyleOverridesAssertionManager _mainQueue_getStatusBarStyleOverridesToSuppressAndStatusStringsByStyleForForegroundApplications:withHandler:]
B24@?0@"SBSStatusBarStyleOverridesAssertionData"8^B16
UpdateSuppressionSettings
STATUS_BAR_BACKGROUND_LOCATION_SINGLE_APP_WITH_NAME_FORMAT
STATUS_BAR_BACKGROUND_LOCATION_MULTIPLE_OTHER_APPS_WITH_COUNT_FORMAT
STATUS_BAR_BACKGROUND_LOCATION_MULTIPLE_APPS_WITH_COUNT_FORMAT
xpcListener
T@"NSXPCListener",&,N,V_xpcListener
assertionsByIdentifierByClientConnection
T@"NSMapTable",&,N,V_assertionsByIdentifierByClientConnection
assertionsByStyleOverride
T@"NSMapTable",&,N,V_assertionsByStyleOverride
internalQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
T@"FBWorkspaceEventQueue",&,N,V_eventQueue
statusBarStyleOverrides
Ti,N,V_statusBarStyleOverrides
exclusiveStatusBarStyleOverrides
Ti,N,V_exclusiveStatusBarStyleOverrides
Show Now Playing
showNowPlaying
Show Continuity Icon
showContinuityIcon
Call
Continuity Icon Type
continuityIconType
Show User Picture
showUserPicture
Show Logout Button
showLogoutButton
Show Thermal Trap
showThermalTrap
Show Blocked UI
showBlockedUI
Show Reset/Restore
showResetRestore
Show Emergency Dialer
showEmergencyDialer
Show Regions Debug
showRegionsDebugView
Add Notification
B24@?0@"PTSRow"8@"PTSModuleController"16
Modern Lockscreen
Slide To Unlock Failure Recognizer
horizontalScrollFailureRecognizerSettings
DashBoard Scroll Modifier
dashBoardScrollModifierSettings
Passcode Settings
passcodeSettings
Mesa Settings
mesaSettings
Gravity
verticalBounceSettings.gravity
Elasticity
verticalBounceSettings.elasticity
Friction
verticalBounceSettings.friction
Velocity
verticalBounceSettings.velocity
Minimum Velocity To Assist
verticalBounceSettings.minVelocityToAssist
Maximum Velocity To Assist
verticalBounceSettings.maxVelocityToAssist
Velocity Assistance Amount
verticalBounceSettings.maxVelocityAssistance
Camera Bounce Settings
Multiplier
horizontalBounceSettings.multiplier
horizontalBounceSettings.gravity
horizontalBounceSettings.elasticity
horizontalBounceSettings.friction
horizontalBounceSettings.velocity
Slide To Unlock Bounce Settings
Unlock To Phone Wallpaper Out
unlockToPhoneWallpaperOutSettings
Unlock To Phone Wallpaper In
unlockToPhoneWallpaperInSettings
Unlock Wallpaper Out
unlockWallpaperOutSettings
Unlock Wallpaper In
unlockWallpaperInSettings
mainToCameraViewSlideCompletionPercentage
Main page to Camera Slide Completion Percentage
mainToTodayViewSlideCompletionPercentage
Main page to Today view slide Completion Percentage
unlockSlideForIdleTimerDisabledPercentage
Unlock Slide Percentage to Disable Idle Timer (iPhone)
unlockSlideForIdleTimerDisabledPercentageIPad
Unlock Slide Percentage to Disable Idle Timer (iPad)
notificationScrollForIdleTimerDisabledOffset
Notification List Scroll Offset to Disable Idle Timer (iPhone)
notificationScrollForIdleTimerDisabledOffsetIPad
Notification List Scroll Offset to Disable Idle Timer (iPad)
unlockSwipeWallpaperAlpha
Unlock Swipe Wallpaper Alpha
appGrabberSlideUpVelocityThreshold
App Grabber Slide Up Velocity Threshold
Always put plugins below scroll view
alwaysPutPluginsBelowScrollView
Global plugin properties
Kill Insecure Drawing Apps
killsInsecureDrawingApps
Security
Restore Defaults
LockScreen Settings
TB,V_showNowPlaying
TB,V_showContinuityIcon
Ti,V_continuityIconType
TB,V_showUserPicture
TB,V_showLogoutButton
TB,V_showThermalTrap
TB,V_showBlockedUI
TB,V_showResetRestore
TB,V_showEmergencyDialer
TB,V_showRegionsDebugView
verticalBounceSettings
T@"SBBounceSettings",&,V_verticalBounceSettings
horizontalBounceSettings
T@"SBBounceSettings",&,V_horizontalBounceSettings
T@"SBLockScreenPasscodeSettings",&,V_passcodeSettings
T@"SBLockScreenMesaSettings",&,V_mesaSettings
T@"SBHorizontalScrollFailureRecognizerSettings",&,V_horizontalScrollFailureRecognizerSettings
T@"SBDashBoardScrollModifierSettings",&,V_dashBoardScrollModifierSettings
T@"SBAnimationSettings",&,V_unlockToPhoneWallpaperOutSettings
T@"SBAnimationSettings",&,V_unlockToPhoneWallpaperInSettings
T@"SBAnimationSettings",&,V_unlockWallpaperOutSettings
T@"SBAnimationSettings",&,V_unlockWallpaperInSettings
Td,V_mainToCameraViewSlideCompletionPercentage
Td,V_mainToTodayViewSlideCompletionPercentage
Td,V_unlockSlideForIdleTimerDisabledPercentage
Td,V_unlockSlideForIdleTimerDisabledPercentageIPad
Td,V_notificationScrollForIdleTimerDisabledOffset
Td,V_notificationScrollForIdleTimerDisabledOffsetIPad
Td,V_appGrabberSlideUpVelocityThreshold
Td,V_unlockSwipeWallpaperAlpha
TB,V_alwaysPutPluginsBelowScrollView
TB,V_killsInsecureDrawingApps
Icon Animation
centralAnimationSettings
T@"SBAnimationSettings",&,V_centralAnimationSettings
Icon Zoom Animation
Label alpha on zoom spring
labelAlphaWithZoom
TB,V_labelAlphaWithZoom
Increase Mass
Decrease Mass
centralAnimationSettings.animationType == %d
Coordinate of center row
centerRowCoordinate
@24@?0@8@16
Dock mass
dockMass
Distance effect
distanceEffect
Mass for first "hop"
firstHopIncrement
distanceEffect != 0
Hop mass acceleration
hopIncrementAcceleration
Center Zoom
Td,V_centerRowCoordinate
Tq,V_distanceEffect
Td,V_firstHopIncrement
Td,V_hopIncrementAcceleration
Td,V_dockMass
zoomViewBelowIcons
TB,N,V_zoomViewBelowIcons
App Zoom Animation
App head-start (seconds)
appHeadStart
appZoomSettings
App Fade
appFadeSettings
Td,V_appHeadStart
T@"SBAnimationSettings",&,V_appZoomSettings
T@"SBAnimationSettings",&,V_appFadeSettings
Crossfade on zoom spring
crossfadeWithZoom
Crossfade Animation
crossfadeSettings
crossfadeWithZoom == NO
Outer Folder Fade
outerFolderFadeSettings
Fade Icon Grid
fadesIconGrid
Icon Grid Fade Animation
iconGridFadeSettings
fadesIconGrid == YES
Crossfade Zoom
T@"SBAnimationSettings",&,V_outerFolderFadeSettings
TB,V_crossfadeWithZoom
T@"SBAnimationSettings",&,V_crossfadeSettings
TB,V_fadesIconGrid
T@"SBAnimationSettings",&,V_iconGridFadeSettings
Morph on zoom spring
morphWithZoom
Morph Animation
morphSettings
morphWithZoom == NO
TB,V_morphWithZoom
T@"SBAnimationSettings",&,V_morphSettings
Inner Folder Fade
innerFolderFadeSettings
T@"SBAnimationSettings",&,V_innerFolderFadeSettings
Reduced Motion Crossfade
Snapshot Corner Radius
appSnapshotCornerRadiusSettings
T@"SBAnimationSettings",&,V_appSnapshotCornerRadiusSettings
Reduced Motion
reducedMotionSettings
unlockSettings
Launch/Suspend Animations
Center Launch
centerLaunchSettings
Center Suspend
centerSuspendSettings
Center Accelerated Suspend
centerAcceleratedSuspendSettings
Crossfade Launch
crossfadeLaunchSettings
Crossfade Suspend
crossfadeSuspendSettings
Crossfade Accelerated Suspend
crossfadeAcceleratedSuspendSettings
Max Suspend Hint Progress
maxAppSuspendHintProgress
Max App Launch Wallpaper Scale
maxAppLaunchWallpaperScale
Folder Animations
Folder Open
folderOpenSettings
Folder Close
folderCloseSettings
Max Close Hint Progress
maxFolderCloseHintProgress
Icon Animations
T@"SBReducedMotionFadeSettings",&,V_reducedMotionSettings
T@"SBUnlockSettings",&,V_unlockSettings
T@"SBCenterAppLaunchSettings",&,V_centerLaunchSettings
T@"SBCenterAppSuspendSettings",&,V_centerSuspendSettings
T@"SBCenterAcceleratedAppSuspendSettings",&,V_centerAcceleratedSuspendSettings
T@"SBCrossfadeAppLaunchSettings",&,V_crossfadeLaunchSettings
T@"SBCrossfadeAppSuspendSettings",&,V_crossfadeSuspendSettings
T@"SBCrossfadeAcceleratedAppSuspendSettings",&,V_crossfadeAcceleratedSuspendSettings
Td,V_maxAppSuspendHintProgress
Td,V_maxAppLaunchWallpaperScale
T@"SBFolderOpenSettings",&,V_folderOpenSettings
T@"SBFolderCloseSettings",&,V_folderCloseSettings
Td,V_maxFolderCloseHintProgress
processName
T@"NSString",C,N,V_processName
collectionFn
T@?,C,N,V_collectionFn
RESTORE_FAILURE_ALERT_BODY_TEXT
RESTORE_FAILURE_ALERT_RESTART_BUTTON_TITLE
SBRestoreFailureAlertItem
device-name-localized
gas-gauge-battery
opengles-2
apple-internal-install
CarrierInstallCapability
UCG5MkVahJxG1YULbbd5Bg
ZYqko/XM5zD3XBfN5RmaXA
BuildVersion
HWModelStr
ProductType
DeviceClass
UniqueDeviceID
DefaultIconState
%@-%.0fw-%.0fh
%@-%.0fw
%@-%.0fh
DefaultIconState_CarDisplay
com.apple.springboard.application-shortcut-item.share
com.apple.springboard.application-shortcut-item.prioritize-download
com.apple.springboard.application-shortcut-item.pause-download
com.apple.springboard.application-shortcut-item.resume-download
com.apple.springboard.application-shortcut-item.cancel-download
com.apple.springboard.application-shortcut-item.unread-notifications
com.apple.springboard.application-shortcut-item.rename-folder
SBIconDidFinishDroppingNotification
SBIconEditingStateChangedNotification
SBIconControllerDisableScrollingForAppIconForceTouchReason
SBIconControllerDisableRotationForAppIconForceTouchReason
DEVELOPER_BUILD_EXPIRATION
A new iOS update is now available. Please update from the current iOS beta.
REORDER_INFO_TITLE
REORDER_INFO_BODY
com.apple.SpringBoard.iconController.transitions
v16@?0^{?=QQQQ}8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBIconController.m
_rootFolderController == nil
restoreExpandedIndexPath: can fail but we shouldn't ever have that happen to us here : _indexPathToResetTo=%@
SBCanForceDebuggingInfo
CARRIER_DEBUGGING_TITLE
CARRIER_DEBUGGING_BODY
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
tryScrollToIconToRevealAnimated:%@
restoreExpandedIndexPath: can fail but we shouldn't ever have that happen to us here : path=%@
popToCurrentRootIconList
transitionName
transitionHandler
launchIcon
v16@?0^{?=qBB}8
opacity
springloadBlink
v32@?0@"SBFolderIcon"8Q16^B24
Dismiss Spotlight
noteIconStateChangedExternally
v32@?0@"SBIcon"8@"NSIndexPath"16^B24
com.apple.springboard.iconStateChanged
Q16@?0@"SBIcon"8
SBIconController can't handle an icon appearing in multiple places
v16@?0@"NSArray"8
com.apple.VoiceMemos
com.apple.gamecenter
com.apple.Photo-Booth
v24@?0d8d16
performingTransitionOperation
unchanged
before
overlapping
after
move out of the way
fill placeholder
Icons Reachability
v16@?0d8
@"SBSApplicationShortcutItem"16@?0@"NSString"8
SHARE_APPLICATION_SHORTCUT_ITEM_TITLE
SEND_BETA_FEEDBACK_APPLICATION_SHORTCUT_ITEM_TITLE
SHARE_BOOKMARK_APPLICATION_SHORTCUT_ITEM_TITLE
PrioritizeDownloadApplicationShortcutItemIcon
PRIORITIZE_DOWNLOAD_APPLICATION_SHORTCUT_ITEM_TITLE
PauseDownloadApplicationShortcutItemIcon
PAUSE_DOWNLOAD_APPLICATION_SHORTCUT_ITEM_TITLE
ResumeDownloadApplicationShortcutItemIcon
RESUME_DOWNLOAD_APPLICATION_SHORTCUT_ITEM_TITLE
CancelDownloadApplicationShortcutItemIcon
CANCEL_DOWNLOAD_APPLICATION_SHORTCUT_ITEM_TITLE
User
RENAME_FOLDER_APPLICATION_SHORTCUT_ITEM_TITLE
com.apple.springboard.quickaction.opened.%@
v16@?0@"NSNumber"8
com.apple.springboard.quickaction.selected.%@
thirdParty
bookmark
testApplication
hasRestrictedEnforcedLayout
TB,N,V_hasRestrictedEnforcedLayout
uninstallingSystemAppsRestricted
TB,N,GisUninstallingSystemAppsRestricted,V_uninstallingSystemAppsRestricted
currentTransitionAnimator
T@"SBHomeScreenIconTransitionAnimator",R,N
lastTouchedIcon
T@"SBIcon",&,N,V_lastTouchedIcon
homescreenIconViewMap
T@"SBIconViewMap",R,N
B16@?0@"SBDashBoardRegion"8
B40@?0{CGRect={CGPoint=dd}{CGSize=dd}}8
regions
T@"<UICoordinateSpace>",W,N,V_coordinateSpace
T@"NSArray",R,C,N,V_regions
SpringBoard - Main Display Interface Orientation Aggregator
q24@?0@"<SBMainDisplayInterfaceOrientationSource>"8@"<SBMainDisplayInterfaceOrientationSource>"16
orientationSourceDescription
component states
orientationLockManager
notions of interface orientation
activeInterfaceOrientation
statusBarOrientation
systemGestureOrientation
layoutOrientation
springBoardWantsOrientationEvents
notions of device orientation
uiDeviceOrientation
bksNonFlatDeviceOrientation
bksCurrentDeviceOrientation
bksLockedOrientation
(unlocked)
interfaceOrientationSources
T@"NSArray",R,&,N
%@ (%ld)
strength
contact
T@"CNContact",C,N,V_contact
diameter
Td,N,V_diameter
Td,N,V_legibilityStrength
Trigger NC for debugging
com.apple.TodayViewWidget
com.apple.widget-extension
SBAppView
Placeholder
StaticContent
LiveSnapshot
LiveContent
Automatic
(Unknown)
%@:%p-SBAppView:%p-%llu
%@-%p-%llu
v16@?0^v8
This class does not support unarchiving from a nib
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAppView.m
raw init not supported
displayMode
forceStatusBarHidden
breadcrumbTitle
breadcrumbSecondaryTitle
this object has already been invalidated
effectiveDisplayMode must not be Automatic
v16@?0@"UIView"8
contextHostingPriority
Tq,R,N,V_contextHostingPriority
contextHostingRequester
T@"NSString",R,C,N,V_contextHostingRequester
sceneSnapshotView
T@"UIView",&,N,V_sceneSnapshotView
cachedResizeIconView
T@"SBSceneViewAppIconView",&,N,V_cachedResizeIconView
statusBarDescriptor
T@"SBAppViewStatusBarDescriptor",&,N,V_statusBarDescriptor
application
T@"SBApplication",R,N,V_application
referenceSize
T{CGSize=dd},R,N,V_referenceSize
Tq,R,N,V_displayMode
effectiveDisplayMode
Tq,R,N,V_effectiveDisplayMode
displayModeOptions
TQ,R,N,V_options
placeholderView
T@"UIView",&,N
backgroundView
T@"UIView<SBAppViewBackgroundView>",&,N,V_backgroundView
useMultiLineDate
TB,N,V_useMultiLineDate
dateLabel
T@"UIView",&,N,V_dateLabel
desiredWallpaperOrientation
Tq,N,V_desiredWallpaperOrientation
wallpaperStyle
Tq,N,V_wallpaperStyle
wallpaperEffectView
T@"SBWallpaperEffectView",R,N,V_wallpaperEffectView
SBIconModelDidAddIconNotification
SBIconModelDidReplaceIconNotification
SBIconModelWillRemoveIconNotification
SBIconModelWillReloadIconsNotification
SBIconModelDidReloadIconsNotification
SBIconModelWillLayoutIconStateNotification
SBIconModelDidLayoutIconStateNotification
SBIconModelVisibilityDidChangeNotification
SBIconModelIconsToShowKey
SBIconModelIconsToHideKey
v24@?0@"NSString"8^B16
q24@?0@"SBApplicationIcon"8@"SBApplicationIcon"16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBIconModel.m
%@: unable to load icon state from the platform state
%@: can only replace application icons
App icon replaced with downloading icon from layout.
v24@?0@"SBIconListModel"8^B16
store
applicationDataSource
rootFolder
visibleIconIdentifiers
ignoresIconsNotInIconState
sortsIconsAlphabetically
Copied leaf icon dictionaries should be logically equal to one another.
leafIconsByIdentifier
T@"NSDictionary",&,N,V_leafIconsByIdentifier
leafIdentifiersForMasqueradeIdentifier
T@"NSDictionary",&,N,V_leafIdentifiersForMasqueradeIdentifier
archivedLeafIdentifiers
T@"NSSet",C,N,V_archivedLeafIdentifiers
allowsSaving
TB,N,V_allowsSaving
T@"<SBIconModelDelegate>",W,N,V_delegate
T@"<SBIconModelStore>",R,N,V_store
T@"<SBIconModelApplicationDataSource>",R,N,V_applicationDataSource
TB,N,V_ignoresIconsNotInIconState
TB,N,V_sortsIconsAlphabetically
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSwitchAppSwipeTransaction.m
[_sceneLayoutTransaction isTransitioning] == NO
previousApp
nextApp
can't complete multiple times
can't have an end transition yet
Finish with completion type: BackwardToStart.
Finish with completion type: ForwardToEnd.
Gesture cancelled
Cancelling pending app launch timer.
Starting pending app launch timer.
Timer fired. Activating target transition context.
trying to finish layout transition but we already have a continuation
must not have auto pip transaction
must have an ending context
AutoPiPAfterSwitchAppSwipe
Continuing layout transition; toCompletion? %@; updateScenes? %@
_animationController == controller
_endingTransitionContext == nil
[controller endingTransitionContext] != nil
Finished animating to %@.
animation finished without a layout transition completion
finished layout transition but we have no continuation
Starting layout transition to %@.
must be animating or have an ending context
Layout transition to %@ complete; ending it now.
Layout transition to %@ complete; pending continuation...
T@"<SBSwitchAppSwipeTransactionDelegate>",W,N,V_delegate
trackingGesture
TB,R,N,GisTrackingGesture,V_trackingGesture
finishedAnimating
TB,R,N,GisFinishedAnimating
nextTransitionContext
T@"SBWorkspaceApplicationTransitionContext",&,N,V_nextTransitionContext
previousTransitionContext
T@"SBWorkspaceApplicationTransitionContext",&,N,V_previousTransitionContext
-[SBScreenManager init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBScreenManager.m
-[SBScreenManager _updateHandlerForConnectionToScreen:withDisplay:]
-[SBScreenManager _screenDidConnect:]
got a connect notification for a screen that I already thought was connected with a different display : screen=%@ previousDisplay=%@ newDisplay=%@
got a connect notification for a screen when I already had a screen for the same display : previousScreen=%@ newScreen=%@ display=%@
-[SBScreenManager _screenDidDisconnect:]
B32@?0@"FBSDisplay"8@"UIScreen"16^B24
v32@?0@"FBSDisplay"8@"<SBScreenConnectionHandler>"16^B24
-[SBScreenManager addConnectionHandler:]
handler
v32@?0@"FBSDisplay"8@"UIScreen"16^B24
buttonActions
T@"SBCombinationHardwareButtonActions",&,N,V_buttonActions
screenshotGestureRecognizer
T@"SBScreenshotGestureRecognizer",&,N,V_screenshotGestureRecognizer
T@"SBHomeHardwareButton",W,N,V_homeHardwareButton
T@"SBLockHardwareButton",W,N,V_lockHardwareButton
B16@?0@"UNNotificationRequest"8
T@"<SBLockScreenTimerViewControllerDelegate>",W,N,V_delegate
TB,N,GisEnabled,V_enabled
pinchGesture
T@"UIPinchGestureRecognizer",R,N,V_pinchGesture
minPinchScale
AppOpenAnimation
AppCloseAnimation
FolderOpenAnimation
FolderCloseAnimation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBScaleIconZoomAnimator.m
targetIcon != nil
We should always have a target icon view for the target icon: %@
We should always have a reference icon view for the target icon: %@
Home screen zoom scaling point anchor is NaN: scalingView: %@, scalingViewLayer origin: %@, scalingViewLayer frame: %@, scalingViewAnchor: %@, referenceIconCenter: %@, scalingViewBounds: %@, zoomScaleDimension: %f:%f, zoomedFrame: %@, iconSize: %@, xScale: %f, yScale: %f, targetIconView: %@, targetIcon: %@
Target icon zoom scaling point anchor is NaN: targetIconPositioningView: %@, targetIconPositioningViewLayer origin: %@, targetIconPositioningViewLayer frame: %@, targetIconPositioningViewAnchor: %@, targetCenter: %@, modelCenter: %@, cameraPosition: %@, targetIconPositioningViewBounds: %@, zoomScaleDimension: %f:%f, zoomedFrame: %@, iconSize: %@, xScale: %f, yScale: %f, targetIconView: %@, targetIcon: %@
transform.scale.xy
transform.scale.x
transform.scale.y
homeScreenScaleAnimator
T@"SBReversibleLayerPropertyAnimator",&,N,V_homeScreenScaleAnimator
targetIconScaleXAnimator
T@"SBReversibleLayerPropertyAnimator",&,N,V_targetIconScaleXAnimator
targetIconScaleYAnimator
T@"SBReversibleLayerPropertyAnimator",&,N,V_targetIconScaleYAnimator
animationCompletions
T@"NSMutableArray",&,N,V_animationCompletions
targetIcon
T@"SBIcon",R,N,V_targetIcon
referenceIconView
T@"SBIconView",R,N
targetIconView
targetIconContainerView
zoomScale
maxHomeScreenZoomScale
fadesHomeScreen
zoomScaleDimension
T{CGPoint=dd},R,N,V_zoomScaleDimension
settings
T@"SBScaleZoomSettings",&,D,N
SBBluetoothBatteryAvailabilityChangedNotification
SBBluetoothBatteryLevelChangedNotification
SBBluetoothConnectionChangedNotification
-[SBBluetoothController iapDeviceChanged:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBBluetoothController.m
-[SBBluetoothController addDeviceNotification:]
-[SBBluetoothController removeDeviceNotification:]
-[SBBluetoothController connectionChanged:]
-[SBBluetoothController batteryChanged:]
BBBulletinObserverViewControllerSectionOrderDefault
BBBulletinObserverViewControllerSectionOrderChronological
com.apple.springboard.SBBulletinObserverViewController.handlingControlQueue
B12@?0B8
Attempt to %@ a section (%@) that %@.
already exists
doesn't exist
Section with identifier '%@' expected in store, but wasn't found
v16@?0@"BBSectionParameters"8
Attempt to setup request queues when at least one is not 'nil' (%@, %@)
com.apple.notificationcenter.bulletinobservervc.sectionrequestqueue
com.apple.notificationcenter.bulletinobservervc.bulletinrequestqueue
@16@?0@"BBSectionInfo"8
sectionRequestQueue
T@"BSSerializedRequestQueue",&,N,V_sectionRequestQueue
bulletinRequestQueue
T@"BSSerializedRequestQueue",&,N,V_bulletinRequestQueue
_SBBulletinObserverViewControllerQueueIsValidTag
counterRotatedView
T@"UIView",&,N,G_counterRotatedView,S_setCounterRotatedView:,V_counterRotatedView
counterRotatedAngle
Td,N,G_counterRotatedAngle,S_setCounterRotatedAngle:,V_counterRotatedAngle
counterRotatedOriginalBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,G_counterRotatedOriginalBounds,S_setCounterRotatedOriginalBounds:,V_counterRotatedOriginalBounds
com.apple.springboard.application-server
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBApplicationServer.m
you can't deallocate the server
v16@?0@"NSObject<OS_xpc_object>"8
v24@?0@"NSString"8@"UIImage"16
v16@?0@"SBSApplicationShortcutServiceFetchResult"8
carPlayDelegate
T@"<SBApplicationServerCarPlayDelegate>",W,N,V_carPlayDelegate
harmonyDelegate
T@"<SBApplicationServerHarmonyDelegate>",W,N,V_harmonyDelegate
removabilityDelegate
T@"<SBApplicationServerRemovabilityDelegate>",W,N,V_removabilityDelegate
shortcutDelegate
T@"<SBApplicationServerShortcutDelegate>",W,N,V_shortcutDelegate
This alert item %@ on the lockscreen, %@ modal appearance and %@ supermodal
appears
does not appear
forces
does not force
is not
Dismiss
<%@:%p - title: %@>
T@"NSString",C,N,V_title
shouldShowInLockScreen
TB,N,V_shouldShowInLockScreen
forcesModalAlertAppearance
TB,N,V_forcesModalAlertAppearance
behavesSuperModally
TB,N,V_behavesSuperModally
allowMenuButtonDismissal
TB,N,V_allowMenuButtonDismissal
allowLockScreenDismissal
TB,N,V_allowLockScreenDismissal
reappearsAfterUnlock
TB,N,V_reappearsAfterUnlock
reappearsAfterLock
TB,N,V_reappearsAfterLock
SBMediaVolumeChangedNotification
SBMediaNewVolumeParameter
SBMediaNowPlayingChangedNotification
SBMediaNowPlayingAppChangedNotification
SBMediaNowPlayingTrackElapsedTimeChangedNotification
SBMediaApplicationActivityDidBeginNotification
SBMediaApplicationActivityDidEndNotification
SBRingerChangedNotification
SBAirPlayScreenSharingStatusChangedNotificationName
SBAudioRoutesChangedNotification
SBMediaController
suppressStatusBarOverrideForScreenSharing
isFirstTrack
isLastTrack
Audio/Video
com.apple.springboard.ringerstate
DisplayPort30PinAdapterConnected
com.apple.HaywireAccessoryAttached
RouteChange
v24@?0^{__CFDictionary=}8^v16
v12@?0C8
ringerMuted
TB,N,GisRingerMuted
nowPlayingApplication
T@"SBApplication",R,W,N
lastActivityDate
T@"NSDate",R,N
suppressHUD
SBNCNotificationDispatcherDelegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBNCNotificationDispatcherDelegate.m
Unknown destination %@
bannerDestination
T@"SBNotificationBannerDestination",W,N,V_bannerDestination
currentSettings
T@"SBIconAnimationSettings",R,N
iconAnimator
T@"SBIconAnimator",R,N,V_iconAnimator
folderController
T@"SBFolderController",R,N,V_folderController
childViewController
T@"SBTreeNodeViewController",R,N,V_childViewController
operation
TQ,R,N,V_operation
initialDelay
Td,N,V_initialDelay
currentOperation
cancelled
TB,R,N,GisCancelled
restarted
TB,R,N,GwasRestarted
T@"<SBHomeScreenIconTransitionAnimatorDelegate>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkAlertToAppWorkspaceTransactionFactory.m
Stark transactions require a finalized main display transaction
starkScreenController
Going from an impersonated app to an impersonated app is unsupported at this time.
q24@?0@"SBWebApplication"8@"SBWebApplication"16
BOOKMARK_FOLDER_NAME
T@"SBBookmark",R,N,V_bookmark
webClip
T@"UIWebClip",R,N
T@"NSURL",R,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBMinimumViableSwitcherTableViewController.m
UIFloatIsOne(parameters.progress) || UIFloatIsZero(parameters.progress)
Identifier
Kill
MinimumViableSwitcherRequester
_returnToDisplayItem
T@"SBDisplayItem",C,N,S_setReturnToDisplayItem:
_returnToSideDisplayItem
T@"SBDisplayItem",C,N,S_setReturnToSideDisplayItem:
_initialDisplayItem
T@"SBDisplayItem",C,N,S_setInitialDisplayItem:
_initialLayoutState
T@"SBMainDisplayLayoutState",&,N,S_setInitialLayoutState:
displayItems
T@"<SBMainAppSwitcherContentViewControllerDelegate>",N
bestAppSuggestion
T@"SBBestAppSuggestion",&,N
T@"NSArray",C,N,V_displayItems
T@"SBDisplayItem",C,N,S_setReturnToDisplayItem:,V_returnToDisplayItem
T@"SBDisplayItem",C,N,S_setInitialDisplayItem:,V_initialDisplayItem
T@"SBDisplayItem",C,N,S_setReturnToSideDisplayItem:,V_returnToSideDisplayItem
T@"SBMainDisplayLayoutState",&,N,S_setInitialLayoutState:,V_initialLayoutState
T@"<SBMainAppSwitcherContentViewControllerDelegate>",W,N,V_delegate
T@"SBBestAppSuggestion",&,N,V_bestAppSuggestion
com.apple.itunesstored.RentalAdded
Media
iTunes_Control
iTunes
Rentals.plist
Rentals
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIBlockAnimationController.m
animationBlock
%s is not a valid initializer. You must call -[%@ initWithWorkspaceTransitionRequest:animationSettings:animationBlock:].
-[SBUIBlockAnimationController initWithWorkspaceTransitionRequest:]
ALARM_TITLE
ALARM_SNOOZE_TIME_REMAINING
fireTime
Td,N,V_fireTime
tickTimer
T@"NSTimer",&,N,V_tickTimer
Default-sms
InCallLockScreen
NowPlayingArtLockScreen
MapsLockScreen
FindMyiPhoneLockScreen
pluginAgent
T@"<SBLockScreenPluginAgent>",W,N
pluginPriority
pluginViewController
T@"UIViewController<SBLockScreenPluginViewController>",R,N
pluginAppearance
T@"<SBLockScreenPluginAppearance>",R,N
pluginUnlockAction
T@"SBLockScreenPluginAction",R,&,N
Principal class does not conform to expected protocol
v16@?0#8
v28@?0Q8i16^B20
name
principalClass
controller
T@"<SBLockScreenPluginDelegate>",W,N,V_delegate
T@"NSString",R,C,N,V_bundleName
T@"<SBLockScreenPluginController>",R,N,V_controller
appearance
T@"SBLockScreenPluginAppearanceContext",R,N
unlockAction
T@"SBLockScreenPluginAction",R,N
dashBoardAppearance
T@"SBDashBoardAppearance",R,N
dashBoardBehavior
T@"SBDashBoardBehavior",R,N
T@"SBLockOverlayContext",&,N,V_overlay
auxiliaryActivationAnimationBlock
T@?,C,N,V_auxiliaryActivationAnimationBlock
auxiliaryDeactivationAnimationBlock
T@?,C,N,V_auxiliaryDeactivationAnimationBlock
T@"<SBLockScreenPluginAgent>",W,N,V_agent
wallpaperController
T@"SBWallpaperController",&,N,V_wallpaperController
T@"<SBDashBoardLegibilityProviderDelegate>",W,N,V_delegate
v20@?0B8@"NSError"12
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDashBoardMesaUnlockBehaviorConfiguration.m
Mesa unlock trigger must be a type of SBMesaUnlockTrigger.
Base unlock trigger cannot be accessibility or we'll loop.
T@"<SBDashBoardMesaUnlockBehaviorConfigurationDelegate>",W,N,V_delegate
SBResetManager
Data Reset - Mode: %d
Erase All Content and Settings
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBResetManager.m
_resetThread ran with incompatible mode: %d
com.apple.springboard.reset-willend
SystemConfiguration
com.apple.mobilephone.speeddial.plist
com.apple.preferences.volume-limit.plist
com.apple.accountsettings.plist
com.apple.AOSNotification.launchd
com.apple.AOSNotification.plist
com.apple.OTASyncAgent.plist
com.apple.OTASyncState.plist
com.apple.apsd.plist
com.apple.purplebuddy.plist
com.apple.purplebuddy.notbackedup.plist
Cookies
WebKit
Databases
BulletinBoard
ClearedSections.plist
GlobalPreferences
~/Library/Preferences/.GlobalPreferences.plist
/var/db/dhcpclient
Library/Preferences/com.apple.network.eapclient.tls.TrustExceptions.plist
Library/Preferences/com.apple.network.eapclient.eapfast.plist
Library/Preferences/com.apple.ids.deviceproperties.plist
WISPr
com.apple.certui
com.apple.downloadingicon-%@
%@ Associated bundle ID: %@ 
buttons
T@"NSArray",&,N,V_buttons
SBUserSessionControllerDomain
with error: %@
successfully
userAccount
multiUserSupported
canLogout
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUserSessionController.m
This is not expected to land on the main thread.
terminate running tasks
Logout
This cannot be invoked on the main thread.
B24@?0@"SBApplication"8@"NSDictionary"16
v32@?0@"SBDisplayItem"8Q16^B24
q24@?0@"SBApplication"8@"SBApplication"16
loggingOut
TB,N,GisLoggingOut,V_loggingOut
T@"SBMainDisplayPolicyAggregator",&,N,G_policyAggregator,S_setPolicyAggregator:,V_lazy_policyAggregator
user
T@"UMUser",R,&,N
loginSession
TB,R,N,GisLoginSession,V_loginSession
isMultiUserSupported
sessionType
logout not permitted
com.apple.SharediPad.duration.savingDocuments
allDay
TB,N,GisAllDay
T@"<SBDateLabelDelegate>",N
labelType
Ti,N
isTimestamp
realContentView
T@"UIView",R,N,V_realContentView
contentBounds
T@"UIView",R,N,V_iconImageView
primaryText
secondaryText
primaryLabel
T@"UILabel",R,N,V_primaryLabel
T@"UILabel",R,N,V_subtitleLabel
secondaryLabel
T@"UILabel",R,N,V_secondaryLabel
relevanceDateLabel
T@"UILabel",&,N
eventDateLabel
T@"UILabel<NCNotificationDateLabel>",&,N
actionButton
T@"UIButton",&,N,V_actionButton
secondaryContentViewController
T@"UIViewController",&,N,V_secondaryContentViewController
secondaryTextNumberOfLines
TQ,R,N,V_secondaryTextNumberOfLines
secondaryTextNumberOfLinesIsUpperBound
TB,R,N,V_secondaryTextNumberOfLinesIsUpperBound
primaryTextColor
T@"UIColor",&,N
subtitleTextColor
secondaryTextColor
relevanceDateColor
eventDateColor
primaryTextAlpha
subtitleTextAlpha
secondaryTextAlpha
relevanceDateAlpha
eventDateAlpha
iconAlpha
attachmentAlpha
secondaryTextHeight
Td,N,V_secondaryTextHeight
attachmentView
T@"UIView",R,N,V_attachmentView
shouldVerticallyCenterContent
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBRestartTransitionRequest.m
restartType
wantsPersistentSnapshot
applicationLaunchURL
customOverlayLDescriptor
T@"NSString",C,N,V_requester
T@"NSString",C,N,V_reason
Ti,N,V_restartType
Td,N,V_delay
TB,N,V_wantsPersistentSnapshot
customOverlayDescriptor
T@"BKSDisplayRenderOverlayDescriptor",C,N,V_customOverlayDescriptor
T@"NSURL",C,N,V_applicationLaunchURL
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkSessionConfiguration.m
vehicleInformation
-[SBStarkSessionConfiguration policyForApp:]
-[SBStarkSessionConfiguration setKnownVehicle:]
-[SBStarkSessionConfiguration setPairedVehicle:]
TB,N,GisACBackSupported,V_acBackSupported
TB,N,GisGeoSupported
TB,N,GisKnownVehicle
TB,N,GisPairedVehicle
T@"NSString",&,N,V_layoutId
simulatedAccessoryProtocols
com.apple.springboard.wallpaper.lockscreen.type
com.apple.springboard.wallpaper.homescreen.type
com.apple.springboard.wallpaper.lockscreen.identifier
com.apple.springboard.wallpaper.homescreen.identifier
com.apple.springboard.wallpaper.shared
com.apple.springboard.iriswallpaper.enabled
com.apple.springboard.iriswallpaper.playcount
%lld/%lld/%lld/%lld/%lld/%lld
SBInstalledApplicationsDidChangeNotification
SBInstalledApplicationsAddedBundleIDs
SBInstalledApplicationsModifiedBundleIDs
SBInstalledApplicationsRemovedBundleIDs
com.apple.LaunchServices.applicationIconChanged
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBApplicationController.m
%@ does not dealloc
shouldn't ever have two apps with the same pid %d: app1=%@ app2=%@
User Requested
Added SBApplication.
Update
Unable to add SBApplication; reason = SBApplication's initializer returned nil.
Unable to add SBApplication; reason = No bundle identifier exists or the bundle is not an app bundle.
Removed from the system.
Removed SBApplication; reason = %@
uninstalling app
CFBundleIdentifier
Removing downloading icon because app installed without ever receiving a placeholder.
Demotion
termination assertion acquired: (%@)
secureBackupHelper
T@"SecureBackup",&,N,G_secureBackupHelper,S_setSecureBackupHelper:,V_secureBackupHelper
-[SBScreenshotManager saveScreenshots]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBScreenshotManager.m
-[SBScreenshotManager saveScreenshotsWithCompletion:]
sceneManagerCoordinator
T@"SBSceneManagerCoordinator",&,N,G_sceneManagerCoordinator,S_setSceneManagerCoordinator:,V_sceneManagerCoordinator
persistenceCoordinator
T@"_SBScreenshotPersistenceCoordinator",&,N,G_persistenceCoordinator,S_setPersistenceCoordinator:,V_persistenceCoordinator
dataSource
T@"<SBScreenshotManagerDataSource>",R,N,V_dataSource
PasscodeController - makeEmergencyCall
ENTER_CURRENT_PASSCODE
PASSCODE_ALERT_TITLE
ENTER_NEW_PASSCODE
CONFIRM_NEW_PASSCODE
PASSCODE_ALERT_NEXT
PASSCODE_ALERT_DONE
PASSCODE_ALERT_CANCEL
PASSCODE_ALERT_EMERGENCY
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBPasscodeController.m
Illegal condition: unlock type is simple, but no simple passcode type detected.
EmptyPasscode
PASSCODE_ALERT_INCORRECT_PASSCODE
CONFIRM_NEW_PASSCODE_MISMATCH
Cannot be simple and have a non-simple passcode type.
NON_COMPLIANT_PASSCODE_CONTINUE
NON_COMPLIANT_PASSCODE_LATER
PASSCODE_REMINDER_CONTINUE
PASSCODE_REMINDER_CANCEL
v28@?0i8@"NSString"12@"NSString"20
SBIsolationTankRectDidChangeNotification
SBIsolationTankRectInScreenSpaceKey
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBIsolationTankController.m
cannot invalidate while actively hosting
we don't currently allow multiple hosting observers for a single requester.
observer doesn't match existing observer for requester %@
cannot remove observer that is the active requester (%@)
can't vend a hosting view for an unregistered observer
NSString
requester != nil
[requester isKindOfClass: NSStringClass]
Requester %@ did not become active
Requester %@ did not deactivate
Requester %@ has no registered SBMultiplexedHostingObserver!
SBMultiplexedHostingObserver %@ for requester %@ does not implement %@ and is trying to manage touch delivery!
Requester %@ has no registered host view!
IsolationTank-%@
0x%x
isolatedViewController
T@"UIViewController",R,N,V_isolatedViewController
containingScrollView
T@"UIScrollView",R,N,V_containingScrollView
_UIScrollViewContainsView
[scrollView isKindOfClass:[UIScrollView class]]
_UIViewContainsScrollView
Stark Alert
<%@: %p, suppression reasons: %@>
APP_BETA_EXPIRED_TITLE_WITH_NAME_FORMAT
APP_PROFILE_EXPIRED_TITLE_WITH_NAME_FORMAT
APP_PROFILE_EXPIRED_OK
context
T@"SBStartupTransitionContext",R,N
destination
mainWorkspace
T@"SBMainWorkspace",R,N,V_mainWorkspace
T@"SBStartupTransitionContext",R,N,V_context
TQ,R,N,V_destination
BATTERY_CHARGE_PERCENTAGE
BATTERY_CHARGING
BATTERY_CHARGE_REMAINING
LockScreenChargeHandler
v16@?0@"BCBatteryDevice"8
@"BSAnimationSettings"16@?0@"SBDashBoardAppearance"8
T@"<SBLockScreenBatteryChargingViewControllerDelegate>",W,N,V_delegate
Window Manager
com.acato.Test
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBWindowManagerTestRecipe.m
Context was nil
Reason didn't match
T@"FBApplicationUpdateScenesTransaction",&,N,V_currentTransaction
APP_PROFILE_NOT_TRUSTED_TITLE
APP_PROFILE_NOT_TRUSTED_BODY
APP_PROFILE_NOT_TRUSTED_CANCEL
Snapshot Testing
SBSnapshotTestRecipe
perform
invalidate
com.apple.springboard.widgetViewControllerPrefsChanged
SBWidgetController
WidgetListEditView
widgetDiscoveryController
T@"WGWidgetDiscoveryController",&,N,G_widgetDiscoveryController,V_widgetDiscoveryController
badwidgets
com.apple.springboard.openurlswhenlocked
com.apple.springboard.wipedevice
com.apple.springboard.activateawayviewplugins
com.apple.multitasking.preferences
com.apple.multitasking.unlimitedassertions
com.apple.multitasking.newsstandassertions
com.apple.springboard.openurlinbackground
com.apple.springboard.setbadgestring
com.apple.localnotification.schedulingproxy
com.apple.springboard.appusingexternalaccessory
com.apple.UIKit.vends-view-services
com.apple.springboard.thermalWarningSuppression
com.apple.springboard.activateassistant
com.apple.springboard.activateRemoteAlert
com.apple.springboard.stark.activateBackgroundProvider
com.apple.springboard.stark.activateRemoteAlert
com.apple.springboard.stark.hideStatusBar
com.apple.springboard.switcherServiceRegistrar
com.apple.springboard.alertItemsSuppression
com.apple.springboard.wallpaperAnimationSuspension
com.apple.springboard.wallpaper-access
com.apple.springboard.setWallpaperVariant
com.apple.springboard.setTypingActive
com.apple.springboard.allowallcallurls
com.apple.springboard.requestScene-daemon
com.apple.springboard.statusbarstyleoverrides
com.apple.developer.icloud-services
com.apple.springboard.setWantsLockButtonEvents
com.apple.springboard.setCarPlayIconOrder
com.apple.springboard.alertSuppressionSectionIdentifier
com.apple.springboard.overrideDisplayedDate
com.apple.springboard.iconState
com.apple.springboard.setVoiceControlEnabled
com.apple.springboard.CFUserNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/_SBScreenshotPersistenceCoordinator.m
public.png
isSaving
PLSaveImageToCameraRollWithTypeAndExtension
System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
noSiri
thermal
blocked
buddy
 knob
 touch-button
 touch-gesture
 %li
SBStarkNotificationSuspensionReasonAssistant
SBLockScreenWillMoveToWindow
SBLockScreenDidMoveToWindow
lock screen
SBLockScreenViewControllerMediaControlsDidShow
SBLockScreenViewControllerMediaControlsDidHide
TemporaryPasscodeButtonHysteresis
SBNotificationCenterIsPresentedRequester
T@"<SBUIPasscodeLockView>",W,N,V_passcodeView
lockScreenView
T@"SBLockScreenView",W,N,V_lockScreenView
<%@:%p - alpha:%f, hidden:%@, frame:%@, bounds:%@>:
            
foregroundHiddenRequesters: %@
            
foregroundContentHiddenRequesters: %@
            
foregroundContentOverlaysHiddenRequesters: %@
            
foregroundHUDHiddenRequesters: %@
            
zoomDownOverlaysHiddenRequesters: %@
            
contentUnderlayRequesters: %@
            
contentUnderlayColorOverride: %@
            
modalAlertRequesters: %@
            
notificationsHiddenRequesters: %@
            
passcodeHiddenRequesters: %@
            
topGrabberHiddenRequesters: %@
            
bottomGrabberHiddenRequesters: %@
            
cameraGrabberHiddenRequesters: %@
            
bottomLeftGrabberHiddenRequesters: %@
            
statusTextHiddenRequesters: %@
            
overlaysHiddenRequesters: %@
            
slideToUnlockHiddenRequesters: %@
            
logoutButtonHiddenRequesters: %@
            
deviceInformationTextHiddenRequesters: %@
            
pluginHiddenRequesters: %@
            
scrollingDisabledRequesters: %@
            
scrollViewInteractionDisabledRequesters: %@
            
defaultUnderlayProperties: %@
            
wallpaperView: %@
SBLockScreenView
v16@?0@"SBSlideUpAppGrabberView"8
EmergencyCall
transform
position.x
position
force
B16@?0@"UIView"8
MediaControls
@"SBWallpaperEffectView"8@?0
B16@?0@"UIGestureRecognizer"8
AWAY_LOCK_LABEL
LockScreenScroll
SBLockScreenViewContentUnderlayOverride
-[SBLockScreenView _beginCrossfadingFakeStatusBars]
coordinatedPresentingControllerIdentifier
hintDisplacement
hintEdge
presentingDelegate
T@"<SBPresentingDelegate>",N
gestures
T@"NSSet",R,N
conflictingGestures
tapExcludedViews
effectivePasscodeTintColor
T@"UIColor",&,N,G_effectivePasscodeTintColor,S_setEffectivePasscodeTintColor:,V_effectivePasscodeTintColor
effectivePasscodeTintAlpha
Td,N,G_effectivePasscodeTintAlpha,S_setEffectivePasscodeTintAlpha:,V_effectivePasscodeTintAlpha
scrolling
TB,R,N,GisScrolling,V_scrolling
scrollView
T@"UIScrollView",R,N,V_foregroundScrollView
isShakingSlideToUnlockText
TB,R,N,V_isShakingSlideToUnlockText
topGrabberView
T@"SBUIChevronView",&,N,V_topGrabberView
bottomGrabberView
T@"SBUIChevronView",&,N,V_bottomGrabberView
foregroundView
T@"UIView",R,N,V_foregroundView
irisGestureRecognizer
T@"UIGestureRecognizer",&,N
T@"<SBLockScreenViewDelegate>",W,V_delegate
dateView
T@"SBFLockScreenDateView",&,N,V_dateView
statusTextView
T@"UIView<SBUILegibility>",&,N,V_statusTextView
timerView
T@"SBLockScreenTimerView",&,N,V_timerView
notificationView
T@"UIView",&,N,V_notificationView
T@"UIView<SBUIPasscodeLockView>",&,N,V_passcodeView
cameraGrabberView
T@"SBSlideUpAppGrabberView",&,N,V_cameraGrabberView
bottomLeftGrabberView
T@"SBSlideUpAppGrabberView",&,N,V_bottomLeftGrabberView
batteryChargingView
T@"SBLockScreenBatteryChargingView",&,N,V_batteryChargingView
mediaControlsView
T@"UIView",&,N,V_mediaControlsView
pluginBackgroundView
T@"UIView",&,N,V_pluginBackgroundView
logoutButtonView
T@"SBUIVibrantButton",&,N,V_logoutButtonView
deviceInformationTextView
T@"SBLockScreenDeviceInformationTextView",&,N,V_deviceInformationTextView
statusBarLegibilityEnabled
TB,N,V_statusBarLegibilityEnabled
legibilitySettingsOverrideVibrancy
TB,N,V_legibilitySettingsOverrideVibrancy
vibrantButton
T@"UIButton",&,N,V_vibrantButton
overlayButton
T@"UIButton",&,N,V_overlayButton
<%@:%p>
remoteViewIdentifier
T@"NSString",&,N,V_remoteViewIdentifier
remoteViewOpaque
TB,N,V_remoteViewOpaque
T@"<SBProxyRemoteViewDelegate>",W,N,V_delegate
SBDashBoardIsTransitioning
SBDashBoardLockOrientationForScreenFadeIn
SBDashBoardLockOrientationForInteractiveTransition
SBDashBoardActiveBehavior
SBDashBoardPresentation
dateViewAlpha
statusBarAlpha
pageControlAlpha
pageContentAlpha
(default)
(active)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDashBoardViewController.m
The centerViewController must be part of viewControllers.
SBDashBoardViewController
B16@?0@"SBDashBoardEvent"8
We never cleaned up the old _dateViewController
ViewDidLoad
viewWillAppear
DashBoard does not support modal view controller presentations.
Rotation
CompleteRotation
view must be of type SBDashBoardView: %@
_bottomPresentationController == nil
UserAuthenticationChanged
we're showing the passcode UI
SBDashBoardCapabilityTouchID is restricted
the home button is being handled manually
[[self activeBehavior] areRestrictedCapabilities:SBDashBoardCapabilityUnlock] == NO
ScreenOff
ScreenOn
We shouldn't get asked for this if we're already authenticated.
transitionSource
appearState
pageControllers
modalPresentationController
slideUpAppController
bottomPresentationController
observers
externalBehaviorProviders
externalEventHandlers
externalPresentationProviders
activePresentation
mesaUnlockBehavior
scrollGestureController
%@:%p
setLegibilitySettings
legibilityProvider
nested transitions are not supported. current transition from %@; new transition from %@
type != SBDashBoardTransitionTypeNone
beginTransition-%@
com.apple.springboard.lock-screen.scroll
v32@?0@"SBDashBoardPageViewController"8Q16^B24
TransitionSourceDidUpdate
endTransition-%@
unknown is not a valid state
iris
We must have a plugin for the active one to have changed it's appearance.
The active plugin that changed wasn't the one we knew about now.
PluginAppearanceChanged
SBDashBoardSlideUpToAppController
PrototypeSettingsChanged
v16@?0@"<SBLockScreenPluginLifecycleObserver>"8
The main page should always be visible
![self isTransitioning]
newPageIndex != NSNotFound
[participant conformsToProtocol:@protocol(SBDashBoardParticipating)]
[participant conformsToProtocol:@protocol(SBDashBoardBehaviorProviding)]
[participant conformsToProtocol:@protocol(SBDashBoardAppearanceProviding)]
[participant conformsToProtocol:@protocol(SBDashBoardPresentationProviding)]
there is no page controller at starting index %lu
there is no page controller at target index %lu
(none)
SBDashBoardStatusBar
SBDashBoardFakeStatusBar
irisPlaying-%@
StartFadeInAnimation
FadeIn
TimerView
@"NSArray"8@?0
ChargingView
_displayWillTurnOnWhileOnDashBoard
v32@?0@"FBSDisplayLayoutElement<SBSDisplayLayoutElement>"8Q16^B24
displayLayoutDidUpdate
policyAggregatorCapabilitiesChanged
setupModeChanged
DismissedModalPresentationController
DismissedBottomPresentationController
v32@?0@"SBDashBoardViewControllerBase"8Q16^B24
dispatcher
T@"<SBDashBoardNotificationDispatcher>",W,N
pageViewControllers
T@"NSArray",C,N,S_setPageViewControllers:,V_pageViewControllers
allowedPageViewControllers
T@"NSArray",C,N,G_allowedPageViewControllers,S_setAllowedPageViewControllers:,V_allowedPageViewControllers
mainPageViewController
T@"SBDashBoardMainPageViewController",&,N,S_setMainPageViewController:,V_mainPageViewController
lastSettledPageIndex
TQ,N,V_lastSettledPageIndex
T@"SBDashBoardBehavior",C,N,V_activeBehavior
localBehavior
T@"SBDashBoardBehavior",&,N,V_localBehavior
irisBehavior
T@"SBDashBoardBehavior",&,N,V_irisBehavior
setupBehavior
T@"SBDashBoardBehavior",&,N,V_setupBehavior
appearanceFraction
Td,N,V_appearanceFraction
T@"SBDashBoardAppearance",C,N,V_activeAppearance
previousAppearance
T@"SBDashBoardAppearance",C,N,V_previousAppearance
localAppearance
T@"SBDashBoardAppearance",C,N,V_localAppearance
T@"SBDashBoardPresentation",&,N,V_activePresentation
dateViewController
T@"SBLockScreenDateViewController",&,N,V_dateViewController
powerChangeObserver
T@"SBDashBoardPowerChangeObserver",&,N,V_powerChangeObserver
timerViewController
T@"SBLockScreenTimerViewController",&,N,V_timerViewController
T@"SBDashBoardLegibilityProvider",&,N,V_legibilityProvider
lockScreenActionManager
T@"SBLockScreenActionManager",&,N,V_lockScreenActionManager
fakeStatusBarView
T@"SBFakeStatusBarView",&,N,V_fakeStatusBarView
hideStatusBarAssertionForScrolling
T@"SBAppStatusBarSettingsAssertion",&,N,V_hideStatusBarAssertionForScrolling
irisPlayerIsInteracting
TB,N,V_irisPlayerIsInteracting
shouldTransitionIrisWallpaperToStillWhenPlaybackFinishes
TB,N,V_shouldTransitionIrisWallpaperToStillWhenPlaybackFinishes
wallpaperAggdLogger
T@"SBWallpaperAggdLogger",&,N,V_wallpaperAggdLogger
T@"SBDashBoardModalPresentationViewController",&,N,V_modalPresentationController
T@"<SBFLockOutStatusProvider>",&,N,G_lockOutController,S_setLockOutController:,V_lockOutController
currentTransitionSource
T@"<SBDashBoardViewTransitionSource>",&,N,V_currentTransitionSource
setupController
T@"SBDashBoardSetupViewController",&,N,V_setupController
T@"SBMainDisplayPolicyAggregator",&,N,G_policyAggregator,S_setMainDisplayPolicyAggregator:,V_policyAggregator
statusBarStateProvider
T@"SBMainStatusBarStateProvider",&,N,G_statusBarStateProvider,S_setStatusBarStateProvider:,V_statusBarStateProvider
T@"<SBDashBoardViewControllerDelegate>",W,N,V_delegate
irisWallpaperView
T@"<SBFIrisWallpaperView>",&,N,V_irisWallpaperView
wallpaperColorProvider
T@"<SBWallpaperColorProvider>",W,N,V_wallpaperColorProvider
notificationDestination
T@"<SBAlertingNotificationDestination>",R,N
hasContentAboveDashBoard
TB,R,N,V_hasContentAboveDashBoard
T{?=d{?={?=dB}{?=dB}}q},R,N,V_transitionContext
T@"<SBDashBoardNotificationDispatcher>",W,N,V_dispatcher
T@"<SBStarkNowPlayingServiceDelegate>",W,N,V_delegate
v28@?0B8Q12@"NSString"20
lockScreenDisabled
assertions
proxyRemoteView
T@"SBProxyRemoteView",&,N,V_proxyRemoteView
contextID
TI,N,V_contextID
T@"SBApplication",&,N,V_application
viewSize
T{CGSize=dd},N,V_viewSize
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBRemoteViewsController.m
Proxy view already exists
Default Hysteresis
Fixed Hysteresis
Button and Then Some Hyesteresis
Disable Scrolling
Passcode Scroll Behavior
scrollBehavior
Percent of Next Button Included
percentOfNextButtonIncluded
fixedHysteresis
Ti,N,V_scrollBehavior
Td,N,V_fixedHysteresis
Td,N,V_percentOfNextButtonIncluded
Alerting
Not alerting
com.apple.springboard.alertingcontroller.realert-%ld
soundController
T@"SBNCSoundController",&,N,V_soundController
screenController
T@"SBNCScreenController",&,N,V_screenController
lockScreenManager
T@"SBLockScreenManager",&,N,V_lockScreenManager
notificationCenterController
T@"SBNotificationCenterController",&,N,V_notificationCenterController
activeRequestWithRealerts
T@"NCNotificationRequest",&,N,V_activeRequestWithRealerts
realertTimers
T@"NSMutableSet",&,N,V_realertTimers
gestureRecognizer
T@"UIGestureRecognizer",R,N,V_gestureRecognizer
SBTopSheetDidChangeNotification
com.apple.springboard.remoteSheetActive
Sheets
animateRemoteSheetUp
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAlertToLockScreenWorkspaceTransaction.m
This transaction can only handle activating a lockscreen.
CommandTab
COMMAND_TAB_DISCOVERABILITY
ActivateAppCommandTab
Command Tab Window
T@"SBWindow",R,N,V_window
visible
TB,R,N,GisVisible
_isTranslucent
SBExternalDisplayConnect
SBExternalDisplayDisconnect
SBExternalDisplayUpdate
v24@?0@"FBSDisplay"8^B16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBExternalDisplayController.m
Asking about a display that I don't handle: %@
got a screen mode change notification without a screen -> %@
External Display transactions require a finalized main display transaction
currentDisplay
T@"FBSDisplay",&,N,G_currentDisplay,S_setCurrentDisplay:,V_currentDisplay
listeningForApplicationStateChanges
TB,N,G_isListeningForApplicationStateChanges,S_setListeningForApplicationStateChanges:,V_listeningForApplicationStateChanges
v24@?0q8@"NSError"16
com.apple.springboard.pocketNotification.%d
AssertType
NoIdleSleepAssertion
AssertLevel
AssertName
backlightController
T@"SBBacklightController",&,N,V_backlightController
lockStateAggregator
T@"SBLockStateAggregator",&,N,V_lockStateAggregator
quietModeStateAggregator
T@"SBQuietModeStateAggregator",&,N,V_quietModeStateAggregator
pocketStateManager
T@"CMPocketStateManager",&,N,V_pocketStateManager
turnOnScreenForOutOfPocketEvent
TB,N,V_turnOnScreenForOutOfPocketEvent
powerAssertionName
T@"NSString",C,N,V_powerAssertionName
powerAssertionID
TI,N,V_powerAssertionID
com.apple.MusicUIService
MusicUIServiceCarDisplayBrowsableContentViewController
-[SBStarkNowPlayingController _reconnect]_block_invoke_2
-[SBStarkNowPlayingController nowPlayingService:didTerminateWithError:]
AWAY_LOCK_EMERGENCY_LABEL
blockTimer
T@"SBFDeviceBlockTimer",&,N,V_blockTimer
slideToUnlockText
T@"NSString",R,W,N
Standard
whitePointAdaptationStrengthStandard
Reading
whitePointAdaptationStrengthReading
Photo
whitePointAdaptationStrengthPhoto
Video
whitePointAdaptationStrengthVideo
Game
whitePointAdaptationStrengthGame
Update White Point Adaptation Strength
White Point Adaptivity Styles
Default Animation Duration
whitePointAdaptationUpdateDefaultDuration
Enable Interactive Updates
whitePointAdaptationInteractiveUpdateEnabled
Linear
Ease In
Ease Out
Ease In Ease Out
Interactive Timing Function
whitePointAdaptationInteractiveUpdateTimingFunctionName
White Point Adaptation Updates
Harmony
Tf,N,V_whitePointAdaptationStrengthStandard
Tf,N,V_whitePointAdaptationStrengthReading
Tf,N,V_whitePointAdaptationStrengthPhoto
Tf,N,V_whitePointAdaptationStrengthVideo
Tf,N,V_whitePointAdaptationStrengthGame
Tf,N,V_whitePointAdaptationUpdateDefaultDuration
TB,N,V_whitePointAdaptationInteractiveUpdateEnabled
T@"NSString",C,N,V_whitePointAdaptationInteractiveUpdateTimingFunctionName
BannerPan
bannerView
T@"SBBannerContextView",R,N
bannerViewController
T@"SBBannerContainerViewController",R,N,V_bannerViewController
bannerController
T@"SBBannerController",R,W,N,V_bannerController
T@"<SBBannerGestureHandlerDelegate>",W,N,V_delegate
MainSwitcher
WentHome
SwitcherTransition
(%@)
DebugBlockingViewCell
debugBlockingTasks
T@"NSDictionary",&,N,V_debugBlockingTasks
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIAnimationFadeLockscreenToAlert.m
[lockScreenViewController isKindOfClass:[SBLockScreenViewControllerBase class]]
[toAlert isKindOfClass:[SBUIFullscreenAlertAdapter class]]
representedListSection
T@"SBBulletinListSection",R,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBBulletinBoardInterfaceItemInfo.m
Represented object required to be of class 'NSDate', not '%@'
<%@: %p; identifier: %@; title: %@>
representedDate
T@"NSString",R,C,N,V_title
showsSeparator
TB,N,V_showsSeparator
missed
TB,N,GisMissed,V_missed
v16@?0@"UIViewController"8
LOADING
representedBulletin
T@"BBBulletin",R,N
T@"SBBBSectionInfo",&,N,V_sectionInfo
T@"UIColor",R,N,V_secondaryTextColor
attachmentImage
T@"UIImage",&,N,V_attachmentImage
attachmentImageSize
T{CGSize=dd},N,V_attachmentImageSize
suppressingMessageForPrivacy
TB,R,N,GisSuppressingMessageForPrivacy,V_suppressingMessageForPrivacy
T@"UIViewController",R,N,V_secondaryContentViewController
effectiveRecencyDate
T@"NSDate",C,N,V_effectiveRecencyDate
relevanceDateFormatStyle
Tq,N,V_relevanceDateFormatStyle
startDate
T@"NSDate",C,N,V_startDate
startDateTimeZone
T@"NSTimeZone",C,N,V_startDateTimeZone
endDate
T@"NSDate",C,N,V_endDate
endDateTimeZone
T@"NSTimeZone",C,N,V_endDateTimeZone
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSearchEtceteraBlurringPushTransitionAnimator.m
Can only transition in or out of search.
_incomingView
_outgoingView
This animator is not intended to be used interactively.
Reload Wallpaper
SBSearchPageIndicator
shouldShowSearchIndicator
TB,N,V_shouldShowSearchIndicator
legibilityEnabled
TB,N,V_legibilityEnabled
T@"<SBIconListPageControlDelegate>",W,N,V_delegate
imageSetCache
T@"SBIconPageIndicatorImageSetCache",&,N,V_imageSetCache
Td,N,V_scale
contextHostManager
T@"FBWindowContextHostManager",&,N,V_contextHostManager
T@"_SBUIStarkStartupToAppAnimation",R,N,V_animation
fromLockoutView
APP_FREE_DEVELOPER_PROFILE_NOT_TRUSTED_TITLE
APP_FREE_DEVELOPER_PROFILE_NOT_TRUSTED_BODY
APP_FREE_DEVELOPER_PROFILE_NOT_TRUSTED_CANCEL
CALL_PERMISSION_ALERT_CALL
CALL_PERMISSION_ALERT_CANCEL
T@"NSURL",R,N,V_url
Direction
Next
Previous
SwitchGesture
SBSlideUpAppGestureCompletedMilestone
SBSlideUpAppLaunchCompletedMilestone
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBLockScreenSlideUpToAppController.m
how can we get here if we didn't begin the transaction? -> %@
noteGestureCompletedSuccessfully was already called
synchronizationDelegate
T@"<FBSynchronizedTransactionDelegate>",W,N
v24@?0@"BSTransaction"8^B16
siri-suggestion
Lock screen slide up app
SBLockScreenSlideUpGesture
uh-oh, we already have a _slideUpTransaction running -> %@
v16@?0@"UIMutableApplicationSceneSettings"8
PreactivateLockscreenCamera
clear continuity passcodeDisableAssertion
disable for continuity unlock
v16@?0@"UIGestureRecognizer"8
disableStatusBarAssertion
T@"SBDisableAppStatusBarAlphaChangesAssertion",&,N,V_disableStatusBarAssertion
didAbortBounce
TB,N,V_didAbortBounce
boundaryTranslationInY
Td,N,V_boundaryTranslationInY
slideDownBounceAnimator
T@"SBNotificationCenterBounceAnimator",&,N,V_slideDownBounceAnimator
slideUpAnimation
T@"_UIDynamicValueAnimation",&,N,V_slideUpAnimation
T@"<SBLockScreenSlideUpToAppControllerDelegate>",W,N,V_delegate
LivePhotos
Camera
TouchID
TodayCenter
ControlCenter
NotificationCenter
Continuity
Inherit
RegionDefined
Always
SystemWake
SystemInterrupt
PasscodeEntry
UserAction
DeepInteraction
Unlocked
LiftToWakeNoContent
Manual
Warn
FaceContact
proxMode
Tq,N,V_idleTimerDuration
Tq,N,V_idleTimerMode
Tq,N,V_idleWarnMode
Tq,N,V_scrollingStrategy
Tq,N,V_notificationBehavior
TQ,N,V_restrictedCapabilities
Tq,N,V_proximityDetectionMode
SBFadeRemoteAlertToAppsRequester
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIAnimationFadeRemoteAlertToApps.m
[workspaceAlert representsAlertOfClass:[SBRemoteAlertAdapter class]]
RemoteAlertToApps
Folder
InDock
InFolder
IconLaunch
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkScreenFocusController.m
must supply a focus assertion name
<%@:%p type=%@ priority=%f name=%@ window=%@ bundleID=%@ pid=%d>
suspend
take
T@"NSString",R,C,N,V_name
Tq,R,N,V_type
priority
Td,R,N,V_priority
T@"UIWindow",R,W,N,V_window
bundleID
T@"NSString",R,C,N,V_bundleID
Ti,R,N,V_pid
must supply a focus assertion
B32@?0@"SBStarkScreenFocusAssertion"8Q16^B24
must supply a focus assertion reason
<%@:%p> -> %@
focusWindow
T@"UIWindow",W,N,V_focusWindow
SBInBuddyModeDidChangeNotification
SBOrientationLockedForBuddy
SBWorkspaceDidShowSetupLogoNotification
SBWorkspaceDidHideSetupLogoNotification
/Applications/Setup.app
com.apple.springboard.setupsnapshotremoved
inSetupMode
TB,R,N,GisInSetupMode
There already is an existing provider for source %lu
v32@?0@"NSNumber"8@"<SBLockScreenActionProvider>"16^B24
actionProviders
T@"NSMutableDictionary",&,N,V_actionProviders
primed
menuButtonDown
referenceOrientation
B16@?0@8
Tq,N,V_referenceOrientation
Tq,N,V_layoutOrientation
elementWrapperViews
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSceneLayoutAnimationWrapperView.m
wrong initializer
appView
layoutElement
T@"SBLayoutElement",R,N,V_layoutElement
T@"SBAppView",R,N,V_appView
adornmentView
T@"SBLayoutElementAdornmentView",R,N,V_adornmentView
SBSideAppGestureCompletedMilestone
SBWaitingToCleanupSideAppAfterAppLaunchTransactionMilestone
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSideAppSlideGestureWorkspaceTransaction.m
_waitingForGestureToComplete
waitingForGestureToComplete
TB,R,N,V_waitingForGestureToComplete
SBZoomUpAppsFromAlertRequester
com.apple.preferences.network
wifiEnabled
wifi-network
TB,D,N
Switcher
App Switcher Visible
DeckSwitcherRequester
SBAppSwitcherParallaxDisablingReason
SBAppSwitcherWallpaperAnimationDisablingReason
v16@?0@"NSMutableArray"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDeckSwitcherViewController.m
!_transitionInProgress
!_transitionRequest
_transitionInProgress
{?=QQd}
Should not have called this if depth is not being used.
Inverse only works when ignoringScrollOffset
The range of visible items in the switcher should never be discontinuous
_transitionDidFinishDismissing
hv != nil
vv != nil
testMedusaAppLeftBundleID
testMedusaAppRightBundleID
testMedusaAppCenterBundleID
Medusa 2 Apps
SBDashBoardIsCurrentlyScrollingReason
transitioningBackgroundStyle
TB,R,N,GisTransitioningBackgroundStyle
regionsDebugView
T@"SBDashBoardRegionsDebugView",&,N,V_regionsDebugView
T@"<SBDashBoardViewDelegate>",W,N,V_delegate
T@"SBPagedScrollView",&,N,V_scrollView
pageViews
T@"NSArray",&,N
mainPageView
T@"UIView",&,N,V_mainPageView
pageControl
T@"SBDashBoardPageControl",&,N,V_pageControl
dateViewOffset
T{CGPoint=dd},N,V_dateViewOffset
dateViewPageAlignment
Tq,N,V_dateViewPageAlignment
forceDateViewCentered
TB,N,V_forceDateViewCentered
dateViewIsVibrant
TB,N,V_dateViewIsVibrant
T@"UIView",&,N,V_fakeStatusBarView
fakeStatusBarLevel
TQ,N,V_fakeStatusBarLevel
T@"UIGestureRecognizer",&,N,V_irisGestureRecognizer
bottomPage
T@"UIView",&,N,V_bottomPage
slideableContentView
T@"UIView",R,N,V_slideableContentView
modalPresentationView
T@"UIView",&,N,V_modalPresentationView
T@"SBDashBoardWallpaperEffectView",&,N,V_wallpaperEffectView
tintingView
T@"UIView",&,N,V_tintingView
T@"SBDashBoardBackgroundView",&,N,V_backgroundView
slideUpToAppView
T@"UIView",&,N,V_slideUpToAppView
foregroundViewPositionOffset
T{CGPoint=dd},N,V_foregroundViewPositionOffset
targetPageIndexForDraggingEnded
TQ,N,V_targetPageIndexForDraggingEnded
Test SpringBoard SBAlertItems
Language Changed
Activation Failed
Activation Failed A Lot
Game Deletion
Health Data Deletion
SIM Lock Missing SIM
SIM Lock Bad SIM
SIM Lock PIN Locked
SIM Lock PUK Locked
SIM Lock PUK Hopelessly Locked
SIM Lock Fixed Dialing Locked
SIM Lock Network Personalization Locked
SIM Lock Corporate Personalization Locked
SIM Lock Operator Personalization Locked
SIM Lock Operator Subset Personalization Locked
SIM Lock Service Provider Personalization Locked
Low Power Alert
BT Accessory Low Power
Phone Smart Chip Not Provisioned
Phone Smart Chip Not Allowed
Phone Call Failed
Phone Not Allowed
Launch Alert In Call
Launch Alert Airplane Mode
Disk Space
Delete Icon
Downlaod Error
Mismatched SIM
Registration Failed
Outgoing Call Forwarded
Incoming Call Forwarded
Call Forwarding Active
Dead Radio
Waiting For Activation
Phone Activated
Unsupported Charger
Carrier Debugging
Home Screen Reorder Info
Restore Failure
Call Permission Telephone
Video Permission
Unsupported URL Restricted
Unsupported URL Unhandled
App Profile Expired
App Blacklisted
App Profile Not Trusted
Dev Profile Not Trusted
Thermal Warning
Insecure Drawing
IPhoto Launch Denied
FairPlay Family Leave
App Requires Healing
Cloud Document Access
Doc Open Many Apps
Doc Open No Local Apps
Data Plan Activation Type 1
Data Plan Activation Type 2
Data Plan Activation Type 3
Data Plan Activation Type 4
Data Plan Completion
Data Plan Failure
Data Plan Usage
Data Plan Expiration
Passcode Compliance
Passcode Compliance Cancel
Passcode Complicance Cancel Reminder
Passcode Previous Simple
Passcode Previous Numeric
Passcode Previous Full
Passcode New Simple
Passcode New Numeric
Passcode New Full
Passcode Confirm Simple
Passcode Confirm Numeric
Passcode Confirm Full
Software Update Available
Software Update Forced Install
Software Update Install Later
Software Update Verifying
Software Update Can't Install
Software Update Verify Failed
Software Update Download Failed
Not a Real Test
1234567890
2025551234
SBCarrierDebuggingAlert
Download Error
Some kind of download error
http://www.apple.com
Non-compliant passcode!
Which is bad!
Which is bad, but whatevs?
Which is bad, so cancel!
SBReorderInfoAlert
All Done
Bye bye now.
recipesToTest
T@"NSArray",&,N,V_recipesToTest
Thermal Trap
T@"NCNotificationViewController",R,W,N,V_viewController
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkLockOutView.m
LOCKOUT_BACK_TO_OEM
CarDisplay
not enough baselineSeparations(%u) for numberOfElements(%u)
each element in baselineSeparations must be an NSNumber (float) -> %@
{CGRect={CGPoint=dd}{CGSize=dd}}48@?0d8{CGRect={CGPoint=dd}{CGSize=dd}}16
messageLabel
T@"UILabel",R,N,V_messageLabel
T@"UIImageView",R,N,V_imageView
backToOEMButton
T@"UIButton",R,N,V_backToOEMButton
brightness
SBHUDControllerDidDismissHUDWindowNotification
reorientHUD
HUDWindow
setBestAppSuggestionQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSwitcherAppSuggestionViewController.m
Can't insert app suggestion banner if we already have one
suggestionQueueSuspended
TB,N,G_isSuggestionQueueSuspended,S_setSuggestionQueueSuspended:,V_suggestionQueueSuspended
showSuggestions
TB,N,V_showSuggestions
T@"<SBSwitcherAppSuggestionViewControllerDelegate>",W,N,V_delegate
DATA_PLAN_LATER
DATA_PLAN_NOW
accountURL
T@"NSURL",C,N,V_accountURL
DATA_PLAN_ADD_TITLE
DATA_PLAN_ADD_LOW_BODY
DATA_PLAN_ADD_EMPTY_BODY
remainingPortion
T@"NSNumber",&,N,V_remainingPortion
DATA_PLAN_DISABLE_TITLE
DATA_PLAN_DISABLE_BODY
prefs:root=MOBILE_DATA_SETTINGS_ID
DATA_PLAN_NEW_ACCOUNT_TITLE
DATA_PLAN_NEW_ACCOUNT_BODY
newAccount
TB,N,GisNewAccount,V_newAccount
RESTORE_IN_PROGRESS
RESTORE_CANCELING
RESTORE_COMPLETE
RESTORE_FAILED
RESET_IN_PROGRESS
RESET_COMPLETE
NONE
SET WHITE POINT ADAPTIVITY STYLE
ANIMATION DURATION
ANIMATION DELAY
@"NSSet"16@?0@"NSSet"8
@"NSArray"16@?0@"NSSet"8
FROM APPLICATIONS
WHITE POINT ADAPTIVITY STYLE
TO APPLICATIONS
FROM ALERT
TO ALERT
@"NSArray"16@?0@"NSArray"8
TYPE
INTERACTIVE
STANDARD
FROM
PERCENTAGE
ACTIVE ALERT
PRIMARY LAYOUT ELEMENT
SIDE LAYOUT ELEMENT
%*s%@:%*s%@
%*s%@:%*s%.2f
DATA_PLAN_ACTIVATED_TITLE
DATA_PLAN_ACTIVATED_FORMAT
DATA_PLAN_UPDATED_TITLE
DATA_PLAN_UPDATED_FORMAT
T@"NSString",C,N,V_carrierName
[Invalid]
UIViewControllerDisappeared
UIViewControllerAppearing
UIViewControllerAppeared
UIViewControllerDisappearing
HandleMenuButton
com.apple.homebutton.pushes
power down shortcut
com.apple.homebutton.holds
com.apple.homebutton.doubleTaps
com.apple.homebutton.holdDuration
buttonDown
TB,N,GisButtonDown,V_buttonDown
currentLongPressDuration
Td,N,V_currentLongPressDuration
T@"<SBNotificationDestinationHomeButtonPressHandler>",W,N,V_bannerDestination
notificationCenterDestination
T@"<SBNotificationDestinationHomeButtonPressHandler>",W,N,V_notificationCenterDestination
B24@?0@"SBUIBannerContext"8@"NSDictionary"16
listItem
T@"SBAwayListItem",R,N,V_listItem
unlockActionHandler
T@"<SBLockScreenActionHandler>",&,N,V_lockedActionHandler
T@"<SBLockScreenNotificationBannerItemDelegate>",W,N,V_delegate
DATA_PLAN_FAILED_TITLE
DATA_PLAN_FAILED_ACTIVATE_FORMAT
DATA_PLAN_FAILED_UPDATE_FORMAT
DATA_PLAN_FAILED_TRY_LATER
DATA_PLAN_FAILED_TRY_AGAIN
systemServiceClient
eventMask
eventPriority
T@"<FBSystemServiceClient>",&,N,V_systemServiceClient
TQ,N,V_eventMask
Tq,N,V_eventPriority
%@ does not support initialization.
-[SBHardwareButtonService systemServiceServer:client:setEventMask:buttonKind:priority:]_block_invoke
-[SBHardwareButtonService systemServiceServer:client:setHapticType:buttonKind:]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBHardwareButtonService.m
completion != nil
-[SBHardwareButtonService systemServiceServer:client:fetchHapticTypeForButtonKind:completion:]_block_invoke
HomeHardwareButtonHintSuppressionAssertion
homeButtonClients
T@"NSMutableOrderedSet",&,N,V_homeButtonClients
v24@?0@"<SBAutoUnlockRule>"8^B16
LockScreenToAppZoomIn
alertWillActivate
alertDidActivate
alertWillDeactivate
alertDidDeactivate
waitingForDelegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAlertChangeTransaction.m
toAlert
fromAlert
T@"SBAlert",R,N,V_alert
T@"SBAlert",R,N,V_fromAlert
T@"<SBAlertChangeTransactionDelegate>",W,N,V_delegate
Test Composed Wallpapers
color
green
blue
http://i.imgur.com/nuANVcZ.jpg
sizing
center
fill
http://i.imgur.com/oZYGdOt.jpg
http://i.imgur.com/m4AzpIu.png
http://i.imgur.com/Tpq7jIQ.jpg
http://i.imgur.com/EvSKvXk.jpg
http://i.imgur.com/jpL6yv1.jpg
version
layers
wallpaperSpecifications
T@"NSArray",C,N,V_wallpaperSpecifications
wallpaperSpecificationEnumerator
T@"NSEnumerator",&,N,V_wallpaperSpecificationEnumerator
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStartupTransitionController.m
We've already run once, and can't run the startup transition again.
A startup transition is required.
v16@?0@"BSTransaction"8
v16@?0@"BSTransactionBlockObserver"8
startupTransition
initialResetState
transition
Startup transition differs from what we expect.
transitionFactory
T@"SBStartupTransitionFactory",&,N,G_transitionFactory,S_setTransitionFactory:,V_transitionFactory
transitionContextPersistence
T@"SBStartupTransitionContextPersistence",&,N,G_transitionContextPersistence,S_setTransitionContextPersistence:,V_transitionContextPersistence
T@"BSTransaction<SBStartupTransition>",R,N,V_transition
q24@?0@"NSString"8@"NSString"16
q24@?0@"NSNumber"8@"NSNumber"16
q24@?0@"XBStatusBarSettings"8@"XBStatusBarSettings"16
q24@?0@"NSDate"8@"NSDate"16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBFairPlayFamilyLeaveAlertItem.m
appInfo
FAIRPLAY_FAMILY_LEAVE_ALERT_TITLE
FAIRPLAY_FAMILY_LEAVE_ALERT_MESSAGE
FAIRPLAY_FAMILY_LEAVE_CANCEL
FAIRPLAY_FAMILY_LEAVE_APP_STORE
itms-apps://?action=lookup&ids=%@
T@"FBApplicationInfo",&,N,V_appInfo
contentViewController
T@"SBDashBoardMainPageContentViewController",R,N
fromContainerView
T@"UIView",R,N,V_fromContainerView
toContainerView
T@"UIView",R,N,V_toContainerView
fromDimmingView
T@"UIView",R,N,V_fromDimmingView
toDimmingView
T@"UIView",R,N,V_toDimmingView
slideOverDirection
TQ,N,V_slideOverDirection
Medusa Orientation
%@ Folder: %@
@"UIImage"16@?0Q8
q16@?0@"SBApplicationIcon"8
B32@?0@"SBApplicationIcon"8Q16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBFolderIcon.m
cannot be observed by a nil object
effectView
T@"SBWallpaperEffectView",R,N,V_effectView
SBResettingIconsCoalesceID
SBInsertIconCoalesceID
SBCompactIconsCoalesceID
SBGrabbedIconCoalesceID
SBIconIntoFolderCoalesceID
SBUninstallIconCoalesceID
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBFolder.m
Paradoxes ensue if the folder contains its own icon.
v32@?0@"SBIconListModel"8Q16^B24
prefixPath must be specified
path must be specified
   F 
<%@: %p, %@>
children
parent
T@"<SBTreeNode>",R,W,N
open
TB,N,GisOpen,V_open
T@"SBFolderIcon",W,N,V_icon
cancelable
TB,N,GisCancelable,V_cancelable
parentFolder
T@"SBFolder",W,N,V_parentFolder
lists
listCount
maxListCount
maxIconCountInLists
TQ,R,N,V_maxIconCountInLists
Allow on all devices
allowOnAllDevices
General Settings (Must Kill SpringBoard)
Hold Interval
fingerOnMesaRequiredDuration
Hold Activation Settings
reachabilityDefaultKeepAlive
After Touch
reachabilityInteractiveKeepAlive
Reachability Keep Alive
Mass
mass
Stiffness
stiffness
Damping
damping
Epsilon
epsilon
Spring Values
Offset Factor
yOffsetFactor
Positioning
Reachability
Td,N,V_mass
Td,N,V_stiffness
Td,N,V_damping
Td,N,V_epsilon
reducedMotionSlideDuration
Td,N,V_reducedMotionSlideDuration
TB,N,V_allowOnAllDevices
Td,N,V_reachabilityDefaultKeepAlive
Td,N,V_reachabilityInteractiveKeepAlive
Td,N,V_yOffsetFactor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDeckSwitcherItemContainer.m
Override initWithFrame:displayItem:delegate: instead
inputQuality
inputRadius
blur
inputBounds
Can't re-present item container after dismissal.
filters.blur.inputRadius
filters.blur.inputBounds
pageView
T@"SBDeckSwitcherPageView",&,N,V_pageView
contentCornerRadiusProgress
Td,N,V_contentCornerRadiusProgress
contentBlurRadiusProgress
Td,N,V_contentBlurRadiusProgress
contentPageViewScale
Td,N,V_contentPageViewScale
titleAndIconOpacity
Td,N,V_titleAndIconOpacity
titleOpacity
Td,N,V_titleOpacity
unobscuredMargin
Td,N,V_unobscuredMargin
killGestureHysteresis
T@"SBDisplayItem",R,N,V_displayItem
T@"<SBDeckSwitcherItemContainerDelegate>",R,W,N,V_delegate
killingProgress
blurEnabled
TB,R,N,V_blurEnabled
SBLeafIconDataSourceDidChangeNotification
SBLeafIconDataSourceDidGenerateImageNotification
kSBLeafIconDataSourceDidGenerateImageFormatKey
SBLeafIconDataSourceDidInvalidateNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBLeafIcon.m
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBRootFolder.m
you can't set the dock on a rootFolder that doesn't support it : %@ : %@
   R 
Dock:
Pages:
dock
T@"SBIconListModel",&,N,S_setDock:
T@"<SBRootFolderDelegate>",W,N,V_delegate
supportsDock
EmergencyDialer
ResetIdleTimer
SBLockScreenActionContext
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDashBoardActions.m
context != nil
[context isKindOfClass: SBLockScreenActionContextClass]
T@"SBLockScreenActionContext",&,N,V_context
Toggle Classroom Plugin
resizing
TB,N,GisResizing,V_resizing
T@"<SBLayoutElementContainerViewDelegate>",W,N,V_delegate
dimmingLevel
wantsPinResizeGrabber
sideSwitcherGrabberStyle
sideSwitcherGrabberPressed
TB,N,GisSideSwitcherGrabberPressed
pinResizeGrabberHorizontalOffset
Td,N,V_pinResizeGrabberHorizontalOffset
flasher
T@"SBScreenFlash",R,N
T@"SBScreenFlash",R,N,V_flasher
Animation Duration Multiplier
animationDurationMultiplier
Enable UIPreviewInteraction Animations
enableUIPreviewInteractionAnimations
Animation Settings
App Icon Force Touch
Tf,N,V_animationDurationMultiplier
TB,N,V_enableUIPreviewInteractionAnimations
-[SBIconListModel addIcon:asDirty:]
v16@?0@"<SBIconListModelObserver>"8
<%@: %p; %ld icons; folder = %@>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBIconListModel.m
   L 
T@"SBFolder",R,W,N,V_folder
bundleIdentifier
T@"NSString",C,N,V_bundleIdentifier
viewServiceClassName
T@"NSString",C,N,V_viewServiceClassName
T@"UIView<SBMainAppSwitcherPageContentView>",&,D,N
SBIconOpenFolderChangedNotification
SBIconControllerPPTFolderTestRequestID
folder animation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBIconController-Folders.m
To set _animatingFolder, you MUST use _setHasAnimatingFolder:.
Open Folder
Close Folder
FolderOpenClose
FolderNaming
SBApplicationIcon
Unable to create test folder
openAnimation
commitDelay
SBLockScreenFacetimeCallUINeedsUpdateNotification
SBFaceTimeStateChangedNotification
venice
v24@?0^{__CFString=}8^{__CFDictionary=}16
Service(NonUI)
Service(UI)
Keyboard
DocumentPicker
FileProvider
PhotoEditor
ShareService
Widget
WatchKit
UserNotifications(NonUI)
UserNotifications(UI)
CallKitDirectoryService
MessagesPayloadProvider
IntentsService(NonUI)
IntentsService(UI)
ReplayKitBroadcastService
com.apple.services
com.apple.ui-services
com.apple.keyboard-service
com.apple.fileprovider-ui
com.apple.fileprovider-nonui
com.apple.photo-editing
com.apple.share-services
com.apple.watchkit
com.apple.usernotifications.service
com.apple.usernotifications.content-extension
com.apple.callkit.call-directory
com.apple.message-payload-provider
com.apple.intents-ui-service
com.apple.intents-service
com.apple.broadcast-services
com.apple.Safari.sharedlinks-service
com.apple.Safari.content-blocker
com.apple.spotlight.index
com.apple.AudioUnit-UI
com.apple.MobileSMS
Enable Side Apps
enableSideApps
Enable Pinning Side Apps
enablePinningSideApps
Enable Breadcrumbs
enableBreadcrumbs
Feature Toggles
App Bundle Identifier
desiredBundleIdentifier
Color Scene Controllers
debugSceneColors
Color Rotation Center
debugRotationCenter
Color Rotation Regions
debugColorRotationRegions
Clip Rotation Regions
clipRotationRegions
Zoom Out During Rotation
zoomOutRotationFactor
Rotation Slowdown Factor
rotationSlowdownFactor
Debugging Aids
Amount of Space Above/Below Slide Grabber
spaceAroundSideGrabberToAllowPullIn
Tweaks
Fence Rotation
fencesRotation
Animations
Delay between steps (ms)
millisecondsBetweenResizeSteps
Slide-off Resize Threshold
slideOffResizeThreshold
Resizing Gesture
Buffer
gapSwipeBuffer
GapSwipe
Medusa
TB,N,V_enableBreadcrumbs
TB,N,V_enableSideApps
TB,N,V_enablePinningSideApps
T@"NSString",C,N,V_desiredBundleIdentifier
TB,N,V_debugSceneColors
TB,N,V_debugRotationCenter
TB,N,V_debugColorRotationRegions
TB,N,V_clipRotationRegions
Td,N,V_zoomOutRotationFactor
Td,N,V_rotationSlowdownFactor
Td,N,V_spaceAroundSideGrabberToAllowPullIn
TB,N,V_fencesRotation
TQ,N,V_millisecondsBetweenResizeSteps
Td,N,V_slideOffResizeThreshold
Td,N,V_gapSwipeBuffer
com.apple.preferences.sounds
keyboardPlaysSounds
Window Manager + Action
prefs:root=NOTIFICATIONS_ID
Background Content Fetching (%d)
-[SBWindowManagerWithActionTestRecipe takeProcessAssertionWithSequenceNumber:]_block_invoke
assertion
T@"BKSProcessAssertion",&,N,V_assertion
imageParameters
T@"SBIconLabelImageParameters",&,N,V_imageParameters
SBWallpaperBackdropGroupName
SBWallpaperViewHasDarkBlurReason
SBWallpaperViewBatterySaverReason
Wallpaper
settingVariant
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBWallpaperController.m
invalid wallpaper style priority (%i)
Invalid wallpaper variant to legibilitySettingsForVariant:
_homescreenLightForegroundBlurImage=%@ homescreenWallpaperView=%@ contentScale=%f blurImagePointSize=%@
Cache
SharedComposedWallpaper
v24@?0@"UIImage"8@"NSArray"16
HomeComposedWallpaper
LockComposedWallpaper
ScreenIsBlanked
WallpaperStyleHidden
unpaired disallowRastrizationBlock decrement
interfaceOrientation
HomeScreen
StyleInfo
homescreenStyleChangeDelayReasons
LockScreen
medusaCoordinator
wallpaperConfigurationManager
v24@?0@"SBApplication"8^B16
Cannot start hosting a new wallpaper overlay before the current one has been relinquished.
lockscreenWallpaperView
T@"SBFWallpaperView",&,N,V_lockscreenWallpaperView
homescreenWallpaperView
T@"SBFWallpaperView",&,N,V_homescreenWallpaperView
sharedWallpaperView
T@"SBFWallpaperView",&,N,V_sharedWallpaperView
homescreenStyleInfo
T@"SBWallpaperStyleInfo",R,N,V_homescreenStyleInfo
lockscreenStyleInfo
T@"SBWallpaperStyleInfo",R,N,V_lockscreenStyleInfo
variant
windowLevel
homescreenWallpaperScale
Td,N,V_homescreenWallpaperScale
lockscreenWallpaperScale
Td,N,V_lockscreenWallpaperScale
T@"<SBFIrisWallpaperView>",R,N
currentHomescreenStyleTransitionState
T{?=qqd},R,N
activeOrientationSource
Tq,R,N,V_activeOrientationSource
downloadedWallpaperCache
T@"SBFFileCache",R,N
overriddenComposedWallpaperSpecification
T@"SBComposedWallpaperSpecification",C,N,V_overriddenComposedWallpaperSpecification
T@"SBFWallpaperConfigurationManager",R,N
requestedStyle
effectiveStyle
AlignFakeWallpaperToLayer-%p
T@"<_SBFakeBlurObserver>",N
fullscreen
transformOptions
TB,N,V_fullscreen
T@"<_SBFakeBlurObserver>",N,V_observer
TQ,N,V_transformOptions
T@"<_SBFakeBlurObserver>",W,N,V_observer
Bad index to priorityInfoAtIndex:
Bad index to setPriorityInfo:atIndex:
Bad index to removePriorityInfoForPriority:
v24@?0q8^B16
styleTransitionState
priorityInfo
T@"SBWallpaperEffectView",&,N,V_wallpaperEffectView
T{?=qqd},N,V_styleTransitionState
highestValidPriority
#%X%X%X
sb_RGBHexString
SBUIController
ActiveOrientation
%@ -> %@ (%.02f)
Alert
AlertAnimation
Application
ApplicationAnimation
GuidedAccess
MedusaAnimation
MedusaGesture
SystemGesture
INVALID
Recoil
TestingOnly
Allow Nested Folders
allowNestedFolders
Pinch to Close
pinchToClose
Min Pinch Scale
Load one column at a time?
oneColumnAtATime
Ignore user order and sort alphabetically
Folders
TB,N,V_allowNestedFolders
TB,N,V_pinchToClose
Td,N,V_minPinchScale
TB,N,V_oneColumnAtATime
com.apple
AppleLocale
AppleLanguages
AppleKeyboards
SBFormattedPhoneNumber
locale
languages
keyboards
NOTIFICATION_CENTER_CONTENT_UNAVAILABLE_ALL
tableViewControllerClass
T#,R,W,N
bulletinActionHandler
T@"<SBBulletinActionHandler>",W,N,V_bulletinActionHandler
ncTableViewController
T@"SBNCTableViewController",R,N,V_ncTableViewController
requestHandlingEnabled
TB,N,GisRequestHandlingEnabled,V_requestHandlingEnabled
scrollsToTop
contentSize
T{CGSize=dd},R,N
contentUnavailableText
T@"NCNotificationDispatcher",&,N,V_dispatcher
systemGestureManager
T@"SBSystemGestureManager",&,N,V_systemGestureManager
initialButtonDownGestureRecognizer
T@"UIHBClickGestureRecognizer",&,N,V_initialButtonDownGestureRecognizer
initialButtonUpGestureRecognizer
T@"UIHBClickGestureRecognizer",&,N,V_initialButtonUpGestureRecognizer
singlePressUpGestureRecognizer
T@"UIHBClickGestureRecognizer",&,N,V_singlePressUpGestureRecognizer
acceleratedSinglePressUpGestureRecognizer
T@"UIHBClickGestureRecognizer",&,N,V_acceleratedSinglePressUpGestureRecognizer
longPressGestureRecognizer
T@"UIHBLongClickGestureRecognizer",&,N,V_longPressGestureRecognizer
doublePressDownGestureRecognizer
T@"UIHBClickGestureRecognizer",&,N,V_doublePressDownGestureRecognizer
doublePressUpGestureRecognizer
T@"UIHBClickGestureRecognizer",&,N,V_doublePressUpGestureRecognizer
triplePressUpGestureRecognizer
T@"UIHBClickGestureRecognizer",&,N,V_triplePressUpGestureRecognizer
doubleTapUpGestureRecognizer
T@"UIHBClickGestureRecognizer",&,N,V_doubleTapUpGestureRecognizer
shouldConfigureDependencies
disableHomeButton
disableHomeButtonDoublePress
allowReachability
Voice Control
syncing data
ending call for lock button press
not authenticated and has foreground application
disabled by user default
T@"SBHomeHardwareButtonActions",&,N,V_buttonActions
gestureRecognizerConfiguration
T@"SBHomeHardwareButtonGestureRecognizerConfiguration",&,N,V_gestureRecognizerConfiguration
T@"UIGestureRecognizer",W,N,V_screenshotGestureRecognizer
maximumPressCount
Tq,N,V_maximumPressCount
maximumTapCount
Tq,N,V_maximumTapCount
longPressDurationOverride
Td,N,V_longPressDurationOverride
longPressDidOccur
TB,N,V_longPressDidOccur
emulatedPerSenderDownCount
T@"NSMutableDictionary",&,N,V_emulatedPerSenderDownCount
buttonDefinition
T@"BKSButtonDefinition",&,N,V_buttonDefinition
TB,R,N,GisButtonDown
supportsAcceleratedAppDismiss
hapticType
SBAppSwitcherModelDidChangeNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAppSwitcherModel.m
defaults
@16@?0@"SBDisplayItem"8
Only Apps may be added to app switcher model
B24@?0@8@"NSDictionary"16
wantsPreciseTime
preciseTimeEnabled
v16@?0@"NSDate"8
subtitleHidden
TB,N,GisSubtitleHidden
v24@?0@?<v@?d>8@?<v@?>16
%@: showing fake status bar
viewToClip
T@"UIView",&,N,V_viewToClip
wantsFakeStatusBar
TB,N,V_wantsFakeStatusBar
hidesSpringBoardStatusBarInitially
TB,N,V_hidesSpringBoardStatusBarInitially
shouldSlideLockScreenView
TB,N,V_shouldSlideLockScreenView
cleanupManually
TB,N,V_cleanupManually
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBWorkspaceTransitionContext.m
we have no layout delegate
entities
animationDisabled
layoutState
previousLayoutState
previousEntities
T@"SBLayoutState",R,N
T@"SBWorkspaceTransitionRequest",W,N,V_request
_finalized
TB,R,N,G_isFinalized,V_finalized
T@"SBLayoutState",R,N,V_layoutState
T@"SBLayoutState",R,N,V_previousLayoutState
TB,N,V_animationDisabled
T@"<SBWorkspaceTransitionLayoutDelegate>",W,N,V_layoutDelegate
locked
unlocked
TB,N,GisLocked,Vlocked
DATA_PLAN_ADD_EXPIRATION_BODY_MINUTES
SpringBoardPlurals
DATA_PLAN_ADD_EXPIRATION_BODY_HOURS
DATA_PLAN_ADD_EXPIRATION_BODY_LESS_THAN_DAYS
DATA_PLAN_ADD_EXPIRATION_BODY_DAYS
expirationDate
T@"NSDate",&,N,V_expirationDate
ACCESSORY_LOW_POWER_TITLE
ACCESSORY_LOW_POWER_MESSAGE
SBAppZoomSceneLayoutWindowHostRequester
SBDismissToSwitcherReason
SBUIAnimationHomeScreenZoomApp zooming up
v24@?0@"<SBViewControllerTransitionCoordinatorContext>"8@?<v@?>16
SBUIAnimationHomeScreenZoomApp zoom-up cancelled
transitioningIcon
T@"SBLeafIcon",&,N,V_transitioningIcon
FolderMask-RFB
FolderMask
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDismissOverlaysAnimationController.m
Unsupported initializer
dismissOptions
TQ,R,N,V_dismissOptions
T@"<SBSideSwitcherPageViewDelegate>",W,N
shouldShowAppIconAsOverlay
TB,N,V_shouldShowAppIconAsOverlay
VIDEO_PERMISSION_ALERT_CALL
Conference
VIDEO_PERMISSION_ALERT_CANCEL
<unknown>
(sleep -> wake)
(wake -> wake)
(wake -> sleep)
supportLiftToWake
wakeGestureState
screenOn
observingCMWakeGestureManager
idleTimerDefaults
T@"SBIdleTimerDefaults",&,N,G_idleTimerDefaults,S_setIdleTimerDefaults:,V_idleTimerDefaults
TB,R,N,GisEnabled,V_isEnabled
-[SBOrientationLockManager _setupRunLoopObserverIfNecessaryForOrientation:andInitialLockState:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBOrientationLockManager.m
effectivelyLocked
userLockedInterfaceOrientation
overrideReasons
camera-lockscreen.png
inputColor
originalImage
T@"UIImage",&,N,V_originalImage
tintColor
T@"UIColor",&,N,V_tintColor
wantsTintedLayer
TB,N,V_wantsTintedLayer
tintedImage
T@"UIImage",R,W,N
tintedLayer
T@"CALayer",R,W,N
CFBundleDisplayName
v24@?0Q8^B16
GAMECENTER_DELETE_STATS_TITLE
GAMECENTER_DELETE_STATS_BODY
GAMECENTER_DELETE_STATS_CANCEL
GAMECENTER_DELETE_STATS_DELETE
HEALTHKIT_DELETE_DATA_TITLE
HEALTHKIT_DELETE_DATA_BODY
HEALTHKIT_DELETE_DATA_CANCEL
HEALTHKIT_DELETE_DATA_DELETE
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBRelatedDataDeletionAlertItem.m
We should not have posted a %@ alert when there's no related data to ask about!
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIPresentSwitcherAnimationController.m
Trying to drive a non-interactive transition
Present switcher, start animation
timers
 <--ACTIVE
@16@?0@"<SBIdleTimer>"8
SBSceneLayoutAnimationPlaceholder
UIInterfaceOrientationPortrait
UIInterfaceOrientationLandscapeLeft
UIInterfaceOrientationLandscapeRight
UIInterfaceOrientationPortraitUpsideDown
B16@?0@"SBLayoutElementViewController"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSceneLayoutViewController.m
no entity for element: %@
no view controller class for element: %@
can't add a scene controller when we already have one
you're trying to clean up a non-existent VC
v40@?0@"SBWorkspaceTransitionRequest"8@"SBSceneLayoutViewController"16@"BSAnimationSettings"24@?<v@?B>32
[self _isCurrentlyTransitioning]
UIInterfaceOrientation
From view
From space
FAILURE: layout rect is zero for %@/%@/%@
FAILURE: reference rect is zero for %@/%@/%@
FAILURE: converted layout rect is zero for %@/%@/%@
FAILURE: converted reference rect is zero for %@/%@/%@
FAILURE: layout rect doesn't match converted reference rect, %@/%@/%@ (%@ vs %@)
FAILURE: reference rect doesn't match converted layout rect, %@/%@/%@ (%@ vs %@)
unexpected state at beginLayoutStateTransition : requestedContext=%@ currentContext=%@ fromState=%@ toState=%@ previousControllersByRole=%@
no entity present for element %@
need the old view controller for %@
something has gone horribly wrong
B24@?0@"SBLayoutElement"8@"NSDictionary"16
current scene controllers do not match current layout state
layoutElementControllers
previousLayoutElementControllers
reusableLayoutElementControllerCountOfClass:%@
transitioningFromLayout
transitioningToLayout
T@"SBLayoutState",&,N,V_layoutState
sceneContainerView
T@"UIView",&,N,V_sceneContainerView
T@"<SBSceneLayoutViewControllerDelegate>",W,N,V_delegate
userResizing
TB,N,GisUserResizing,V_userResizing
primaryLayoutElementController
T@"SBLayoutElementViewController",R,N
appViewControllers
hasVisibleElements
leafIcon
T@"SBLeafIcon",R,N,V_leafIcon
viewMap
T@"SBIconViewMap",R,N,V_viewMap
T@"SBWorkspaceTransitionRequest",&,N,V_transitionRequest
primaryAppView
T@"SBSceneLayoutElementAnimationWrapperView",R,N
countedMapKey
T@"<NSCopying><NSObject>",R,C,N
T@"NSString",C,N,V_countedMapKey
ACTIVATION_FAILED_TITLE
ACTIVATION_FAILED_BODY
Contact your carrier if this problem continues to occur.
Contact your carrier at %@ from another phone if this problem continues to occur.
ACTIVATION_FAILED_BODY_SUPPORT
ACTIVATION_FAILED_IGNORE_BUTTON
ACTIVATION_FAILED_RETRY_BUTTON
com.apple.springboard.display-identifiers.changed
buttonBar
iconMatrix
iconLists
iconModDate
defaultDisplayName
bundleVersion
webClipURL
listType
metadata
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBIconStateArchiving.m
the parse depth can't go negative
_iconSource
T@"SBIconModel",&,N,S_setIconSource:,V_iconSource
T@"SBRootFolder",&,N,S_setRootFolder:,V_rootFolder
T@"NSDictionary",&,N,S_setMetadata:,V_metadata
dirty
TB,R,N,GisDirty
leafIdentifier mismatch : actual='%@' expected='%@'
icon must be a leafIcon : icon=%@ representation=%@
dictionary representation must result in a folderIcon or nil : icon=%@ representation=%@
the placeholder should always have a referencedIcon by the time we ask for its representation
com.apple.mobileslideshow-Camera
com.apple.mobileslideshow
com.apple.mobileslideshow-Photos
com.apple.videos
com.apple.mobileipod-VideoPlayer
com.apple.mobileipod-MediaPlayer
com.apple.mobileipod-AudioPlayer
com.apple.mobileipod
com.apple.Shoebox
AWAY_LOCK_TRY_AGAIN
MainPageUIKitModal:%@
com.apple.springboard.lockNotificationListEmptyAtScreenOn
PRESS_HOME_TO_OPEN
PRESS_HOME_TO_UNLOCK
useFakeBlur
TB,N,V_useFakeBlur
showingMediaControls
TB,R,N,GisShowingMediaControls
slideUpAppGrabberView
T@"SBSlideUpAppGrabberView",R,N
notificationListViewController
T@"SBDashBoardNotificationListViewController",R,N,V_notificationViewController
T@"<SBDashBoardNotificationDispatcher>",W,D,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSearchEtceteraPartialPulldownTransitionAnimator.m
waiting
running
finished
cleanedUp
(%d)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIAnimationController.m
coordinatingChildTransaction
T@"BSTransaction<SBUIAnimationControllerCoordinating>",R,N,V_coordinatingChildTransaction
schedulingPolicy
TQ,R,N,V_schedulingPolicy
v24@?0@"BSTransaction"8@?<v@?B>16
notify observers
clean up
 %s : unexpected animation state : expected=%@ actual=%@
-[SBUIAnimationController dealloc]
(%@ or %@)
v24@?0@"SBUIAnimationController"8^B16
Cannot add a coordinating child transaction to an animation controller that's already been started.
Cannot add a coordinating child transaction that's already been started.
Cannot add a stepped coordinating child if the parent has stepping disabled.
Cannot add a stepped coordinating child if the child has stepping disabled.
-[SBUIAnimationController __startAnimation]
v24@?0@"_SBUIAnimationControllerCoordinatingChildRelationship"8^B16
-[SBUIAnimationController _begin]
v16@?0@"<SBUIAnimationControllerObserver>"8
Stepping animations in view: %@
Animation progress dependency was not the same as the activating app.
-[SBUIAnimationController _notifyObserversOfAnimationCompletion]
v16@?0@"<BSTransactionObserver>"8
-[SBUIAnimationController __noteAnimationDidTerminate]
Animation completed before it started
-[SBUIAnimationController __reportAnimationCompletion]
-[SBUIAnimationController __cleanupAnimation]
T@"SBViewControllerTransitionContext",&,N,V_transition
transitionContextProvider
T@"<SBUIAnimationControllerTransitionContextProvider>",&,N,V_transitionContextProvider
animationTransactionCompletion
T@?,C,N,V_animationTransactionCompletion
animationTransaction
T@"BSTransaction",R,N,V_animationTransaction
notifyObserversTransaction
T@"BSTransaction",R,N,V_notifyObserversTransaction
cleanupTransaction
T@"BSTransaction",R,N,V_cleanupTransaction
needsCATransactionActivate
TB,N,V_needsCATransactionActivate
T@"UIView",R,N,V_transitionContainer
activatingApps
deactivatingApps
activatingApp
T@"SBWorkspaceApplication",R,N
deactivatingApp
transitionSupportsCancelling
transitionSupportsRestarting
transitionWasCancelled
transitionWasRestarted
interactive
TB,R,N,GisInteractive
transitionCoordinator
T@"<SBViewControllerTransitionCoordinator>",R,N
T@"BSAnimationSettings",R,N
T@"SBWorkspaceApplication",&,N,V_activatingApp
T@"SBWorkspaceApplication",&,N,V_deactivatingApp
LAUNCHER_NAME-%@
iconImageCache
T@"SBCarPlayIconImageCache",R,N,V_iconImageCache
gridImage
T@"SBIconGridImage",&,N,V_gridImage
visibleRow
TQ,N,V_visibleRow
pageIndex
TQ,N,V_pageIndex
folderIcon
T@"SBFolderIcon",W,N,V_folderIcon
element
T@"_SBFolderPageElement",&,N,V_element
v16@?0@"UIImage"8
servicebundle
lockbundle
uibundle
bundle
-[SBUIPluginManager loadUIPluginNamed:withHost:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBPluginManager.m
orientation must not be null
dimInterval must not be null
hostPendingActivation
T@"SBUIPluginHost",&,V_hostPendingActivation
SBAlertAnimationInBeganNotification
SBAlertAnimationInEndedNotification
SBPluginFullscreenAlertAnimatedOutNotification
SBPluginFullscreenAlertUpdateForTransparentDismissNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIFullscreenAlertAdapter.m
display must be an UIFullscreenAlertViewAdapter
actionBlocks
T@"NSMutableArray",&,N,V_actionBlocks
T@"NSArray",R,C,N,V_layers
allAssetURLs
propertyListRepresentation
T@"<NSCopying>",R,C,N
Subclasses should override this method
T@"NSDictionary",R,C,N
referencedAssetURLs
colorModel
saturation
Use initWithColor:
T@"UIColor",R,N,V_color
Use initWithImageURL:
imageURL
T@"NSURL",R,C,N,V_imageURL
sizingMode
Tq,R,N,V_sizingMode
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIFullscreenAlertViewAdapter.m
alert must be a UIFullscreenAlertAdapter
VIEW
REMOTE_NOTIFICATIONS_LOCK_LABEL
AWAY_LOCK_LABEL_FORMAT
useContactlessInterface
uniqueIDs
seedIndex
Activate %@ from plugin %@
SBUILaunchOptionKeyActivationSettings
BannerOpenAppFromUserAgent
+[SBUserAgent sharedUserAgent]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUserAgent.m
-[SBUserAgent init]
-[SBUserAgent updateInterfaceOrientationIfNecessary]
SBUserAgent thinks the screen is on
-[SBUserAgent activeInterfaceOrientation]
-[SBUserAgent foregroundApplicationDisplayID]
-[SBUserAgent foregroundDisplayID]
-[SBUserAgent isApplicationForegroundObscured:]
-[SBUserAgent applicationInstalledForDisplayID:]
-[SBUserAgent springBoardIsActive]
-[SBUserAgent alertIsActive]
-[SBUserAgent canUserLaunchIcon]
-[SBUserAgent deviceIsLocked]
-[SBUserAgent deviceIsPasscodeLocked]
-[SBUserAgent deviceIsPasscodeLockedRemotely]
-[SBUserAgent deviceIsBlocked]
-[SBUserAgent deviceIsTethered]
-[SBUserAgent lockScreenIsShowing]
-[SBUserAgent openURL:allowUnlock:animated:]
-[SBUserAgent _cleanupFromBannerLaunch]
-[SBUserAgent _openApplication:withURL:fromSource:animated:options:]
SBUIUserAgent
-[SBUserAgent _openApplication:withURL:fromSource:animated:options:]_block_invoke
-[SBUserAgent canLaunchFromSource:withURL:bundleID:]
-[SBUserAgent launchApplicationFromSource:withDisplayID:options:]
-[SBUserAgent launchApplicationFromSource:withURL:options:]
-[SBUserAgent launchFromSource:withURL:bundleID:allowUnlock:]
-[SBUserAgent _launchFromSource:withURL:bundleID:allowUnlock:animate:]
-[SBUserAgent canLaunchFromAwayViewPluginWithURL:bundleID:]
-[SBUserAgent launchFromAwayViewPluginWithURL:bundleID:allowUnlock:animate:]
-[SBUserAgent updateLockScreenInterfaceIfNecessary]
-[SBUserAgent updateCustomSubtitleTextForAwayViewPlugin:]
-[SBUserAgent undimScreen]
-[SBUserAgent lockAndDimDevice]
-[SBUserAgent lockAndDimDeviceDisconnectingCallIfNecessary:]
-[SBUserAgent lockAndDimDeviceDisconnectingCallIfNecessary:andDimScreen:]
-[SBUserAgent isScreenOn]
-[SBUserAgent setIdleTimerDisabled:forReason:]
-[SBUserAgent isIdleTimerDisabledForReason:]
-[SBUserAgent notifyOnNextUserEvent]
-[SBUserAgent setBadgeNumberOrString:forApplicationWithID:]
-[SBUserAgent setIdleText:]
-[SBUserAgent networkUsageTypeForAppWithDisplayID:]
-[SBUserAgent modalBulletinAlertHandlerRegistry]
-[SBUserAgent activateModalBulletinAlert:]
-[SBUserAgent addActiveInterfaceOrientationObserver:]
-[SBUserAgent removeActiveInterfaceOrientationObserver:]
-[SBUserAgent setMinimumBacklightLevel:animated:]
-[SBUserAgent activateRemoteAlertService:options:]
-[SBUserAgent activateRemoteAlertService:options:activationHandler:deactivationHandler:]
-[SBUserAgent isNamedRemoteAlertServiceActive:controllerClassName:]
-[SBUserAgent setWallpaperTunnelActive:forFullscreenAlertController:]
-[SBUserAgent localizedDisplayNameForDisplayID:]
-[SBUserAgent enableLockScreenBundleNamed:activationContext:]
-[SBUserAgent disableLockScreenBundleNamed:deactivationContext:]
-[SBUserAgent isInternalInstall]
-[SBUserAgent topSuspendedEventsOnlyDisplayID]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBPolygon.m
The max number of points allowed is %d
(%f, %f)
<%@:%p points=%@ leftHanded=%@ thumbIndex: %lu>
v40@?0{CGPoint=dd}8Q24^B32
mutablePoints
T@"NSMutableArray",&,N,G_points,S_setPoints:,V_mutablePoints
centroid
T{CGPoint=dd},N,G_centroid,S_setCentroid:,V_centroid
weights
T@"NSMutableArray",&,N,G_weights,S_setWeights:,V_weights
weightedCentroid
T{CGPoint=dd},N,G_weightedCentroid,S_setWeightedCentroid:,V_weightedCentroid
pointCount
distanceOfFarthestPointFromCentroid
kBadgedForSoftwareUpdateKey
badgedForSoftwareUpdate
TB,N,GisBadgedForSoftwareUpdate
possible
match
noMatch
NSLanguage
TQ,N,V_style
T@"<SBLockScreenBuddyViewDelegate>",W,N,V_delegate
infoButton
T@"UIButton",&,N,V_infoButton
activationInfoView
T@"UIView",&,N,V_activationInfoView
regulatoryInfoView
T@"UIView",&,N,V_regulatoryInfoView
SBTouchRegionManager
v24@?0@"NSValue"8^B16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBTouchRegionManager.m
This touchRegion: %@ doesn't intersect this rect along the side: %@
v32@?0@"FBSDisplayLayoutElement"8Q16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDashBoardAppearance.m
identifier != nil
[identifier isKindOfClass: NSStringClass]
transitional
backgoundStyle
backgoundColor
TB,N,GisTransitional,V_transitional
Tq,N,V_backgroundStyle
T@"UIColor",&,N,V_backgroundColor
T@"NSSet",C,N,V_components
BANNER_OKAY
BEGIN_GATHERING_LOGS
END_GATHERING_LOGS
CarPlay Diagnostics
New CarPlay Diagnostics Generated
Unlock your device to file a radar.
File radar?
File Radar
Cancel
radarURLs
T@"NSArray",&,N,V_radarURLs
supportsWhitePointAdaptation
TB,R,N,V_supportsWhitePointAdaptation
whitePointAdaptationEnabled
TB,N,GisWhitePointAdaptationEnabled
supportsBlueLightReduction
TB,R,N,V_supportsBlueLightReduction
container
contentOrientation
Tq,N,V_contentOrientation
containerOrientation
Tq,N,V_containerOrientation
contentViews
content
com.apple.Duet
duetWhitelistedApps
DuetWhitelistedApps
Control Center Reveal
SBControlCenterControlDidActivate
SBControlCenterControlDidDeactivate
SBControlCenterControlName
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBControlCenterController.m
this should never go away
Control Center
v16@?0@"<CCUIControlCenterObserver>"8
(unknown reason)
ControlCenterWindow
-[SBControlCenterController beginTransitionWithTouchLocation:]
-[SBControlCenterController endTransitionWithVelocity:completion:]
noninteractiveDismissDuration
inGrabberOnlyMode
TB,N,V_inGrabberOnlyMode
UILocked
TB,N,GisUILocked,V_uiLocked
presented
TB,N,GisPresented,V_presented
fullyRevealed
TB,N,GisFullyRevealed,V_fullyRevealed
ambiguousActivationMargin
Td,N,G_ambiguousActivationMargin,V_ambiguousActivationMargin
feedbackBehavior
T@"_UIFeedbackEdgeBehavior",&,N,V_feedbackBehavior
SBControlCenterControllerWillPresentNotification
SBControlCenterControllerDidDismissNotification
SBAnimationStepper
SBAnimationStepperViewForAnimation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAnimationStepper.m
stepper wasn't invalidated
Trying to dealloc a SBAnimationStepper but the displayLink is still running
multiple steppers shouldn't be operating on the same view
this animation better be our own
v24@?0@"UIView"8^B16
object already invalidated
Trying to call this but the mainRunLoop != currentRunLoop: %@
B16@?0@"CAAnimation"8
views
finishSpeed
Td,N,V_finishSpeed
duration
Td,R,N,V_duration
CLASSIC_SUFFIX
activating
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBWorkspaceApplicationTransitionContext.m
request deallocated without executing result block
B24@?0@"SBWorkspaceEntity"8^B16
this entity is supposed to be a copy
-[SBWorkspaceApplicationTransitionContext finalize]
iphone
background
fenceAnimations
alwaysWatchdog
waitForScenes
TB,N,GisBackground,V_background
fencesAnimations
TB,N,V_fencesAnimations
alwaysRunsWatchdog
TB,N,V_alwaysRunsWatchdog
waitsForSceneUpdates
TB,N,V_waitsForSceneUpdates
resultBlock
T@?,C,N,V_resultBlock
applications
previousApplications
Tq,N,V_interfaceOrientation
preferredInterfaceOrientation
Tq,N,V_preferredInterfaceOrientation
activatingEntity
T@"SBWorkspaceEntity",&,D,N
activatingApplication
T@"SBWorkspaceApplication",&,D,N
Failure Recognizer Enabled?
View Debug Area
Max Vertical Offset
Max Top Angle
topAngle
Max Bottom Angle
bottomAngle
Slide To Unlock Failure Recognizer Settings
TB,N,V_enabled
Td,N,V_topAngle
Td,N,V_bottomAngle
SBIconPosition
SBIconTransform
B24@?0@"UITouch"8^B16
B24@?0@"UIPress"8^B16
contentType
TQ,R,N,V_contentType
T@"SBIcon",&,N
T@"<SBIconViewDelegate>",W,N,V_delegate
T@"<SBIconViewObserver>",W,N,V_observer
location
Ti,N,V_iconLocation
iconImageAlpha
Td,N,V_iconImageAlpha
iconAccessoryAlpha
Td,N,V_iconAccessoryAlpha
iconLabelAlpha
Td,N,V_iconLabelAlpha
appIconForceTouchGestureRecognizer
T@"UIGestureRecognizer",&,N,V_appIconForceTouchGestureRecognizer
isEditing
shouldShowLabelAccessoryView
currentLabelAccessoryType
Tq,R,N,V_currentLabelAccessoryType
T@"_UIFeedbackImpactBehavior",R,N,V_feedbackBehavior
labelView
T@"UIView<SBIconLabelView>",R,N
wallpaperRelativeImageCenter
T{CGPoint=dd},N,V_wallpaperRelativeImageCenter
B16@?0@"SBIconColorSettings"8
IconCloseBoxXLarge
IconCloseBoxX
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBViewControllerTransitionContext.m
Dealloc'd a transition that is in flight. Something bad is probably happening.
Cannot set the animator once the transition has started
Can only set the interactor before the transition has started or when it is cancelled
Attempted to start a transition that is already finished
An interaction controller was paired with a non-interactive animation
An interaction controller was paired with a non-animated context
A restartable interaction controller was paired with an animation that doesn't support restarting
Attempted to interactively update a non-interactive transition
Attempted to interactively update a non-interactive animation
Called finishInteractiveTransition on a non-interactive transition
Called cancelInteractiveTransition on a non-interactive transition
Attempted to complete a transition that is not in flight
Client indicated the transition was %@ but it was %@
completed
canceled
Attempted to cancel a transition when there is no transition in flight
Attempted to cancel a transition that is already cancelled
Attempted to cancel a transition that doesn't support cancelling
Attempted to restart a transition when there is no transition in flight
Attempted to restart a transition that isn't cancelled
Attempted to restart an animation that doesn't support restarting
Attempted to restart a transition that doesn't support restarting
Attempted to restart a non-interactive transition interactively
continuation
Attempted to add a continuation to a completed transition
isInteractive
isInterruptible
wantsAnimation
supportsRestarting
isCancelled
animated
TB,R,N,GisAnimated
targetTransform
T{CGAffineTransform=dddddd},R,N
initiallyInteractive
transitionDuration
percentComplete
completionVelocity
T@"<SBViewControllerTransitionContextDelegate>",W,N,V_delegate
T@"UIView",&,N,V_containerView
animator
T@"<UIViewControllerAnimatedTransitioning>",&,N
interactor
T@"<UIViewControllerInteractiveTransitioning>",&,N
Tq,N,V_presentationStyle
T{CGAffineTransform=dddddd},N,V_targetTransform
TB,N,V_wantsAnimation
SBIconGenerationSerialQueue
<%@: %p; nodeID: %p>
<%@: %p; nodeID: '%@'>
-[SBIcon addObserver:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBIcon.m
%@ cannot be observed by a nil object
-[SBIcon removeObserver:]
-[SBIcon hasObserver:]
%@%@-%p (%@)
UNINSTALL_ICON_TITLE_DELETE_WITH_NAME
UNINSTALL_ICON_BUTTON_DELETE
T@"<SBTreeNode>",W,N
shouldWarmUp
-[SBIcon(Internal) _notifyImageDidUpdate]
-[SBIcon(Internal) _notifyAccessoriesDidUpdate]
-[SBIcon(Internal) _notifyLaunchEnabledDidChange]
iconImages
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkLayoutState.m
stark only supports portrait
SBFolderIconView's icon must be an SBFolderIcon
Tap Duration
tapDuration
Action Delay
Tap Timing
Duration: %.3f; Delay: %.3f
<%@: %p; duration = %.3f, delay = %.3f>
Td,N,V_tapDuration
Double tap on menu down
doubleTapOnMenuDown
Settings
TB,N,V_doubleTapOnMenuDown
B16@?0@"TUCall"8
SBIconViewMap can map only a valid SBIcon object to a valid SBIconView (invalid mapping %@->%@)
iconModel
T@"SBIconModel",R,N,V_model
NKDontThrottleNewsstandContentNotifications
newsstand-content
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBWorkspaceAlert.m
T@"SBAlert",&,N,V_alert
alertClass
T#,R,N
T@"<FBSynchronizedTransactionDelegate>",W,N,V_synchronizationDelegate
RenderServer
UserSwitch
Obliteration
internalLegalText
T@"NSString",C,N,V_internalLegalText
supervisionText
T@"NSString",C,N,V_supervisionText
deviceInformationText
T@"NSArray",C,N,V_deviceInformationText
Td,N,V_strength
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkIconController.m
called %s before we've been fully setup
-[SBStarkIconController rootFolder]
-[SBStarkIconController currentFolderController]
-[SBStarkIconController rootFolderController]
-[SBStarkIconController leafIconForIdentifier:]
can't reset if already invalidated
CarDisplayCanvasIcon-com.apple.cardisplay.OEM.png
CarDisplayCanvasIcon-%@.png
T@"<SBStarkSessionConfiguring>",R,N,V_configuration
fakeIconOperationController
T@"SBStarkFakeIconOperationController",&,N,V_fakeIconOperationController
iconLayoutOverrideStrategy
T@"SBIconLayoutOverrideStrategy",&,N
rootFolderController
T@"SBStarkFolderController",R,N
InitializedFromHomeButtonPress
BiometricEventRequiresPasscode: %@
MatchFailure: %@
Finger Off After Minimum Timer Has Passed
Authenticated
minimumTimerActive
initialFingerOn?
initialFingerOnHasLifted?
finalStateReason
MinimumTimeToShowPasscodePassed - finger on initially but hasn't yet lifted
MinimumTimerExpired - was on initially and lifted during the minimum timer.
MinimumTimerExpired - finger was not on at the time the home button press recognized
T@"<SBHomeButtonShowPasscodeRecognizerDelegate>",W,N
T@"<SBHomeButtonShowPasscodeRecognizerDelegate>",W,N,V_delegate
Initial
MinimumTimerActive
MinimumTimerPassed
Success
Failed
TI,N
inheritsSecurity
DashBoardAttemptUnlock
DashBoardTransientPasscodeAppearanceTransition
DashBoardSustainUnlock
T@"<SBDashBoardPasscodeViewControllerDelegate>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBCarWindowLayoutStrategy.m
Critical node identifier removed: %@
Icon model relayout
Icon model reloaded all icon instances
iconListView
T@"SBIconListView",R,N,V_iconListView
dockListView
T@"SBIconListView",R,N,V_dockListView
criticalIconNodeIdentifiers
T@"NSSet",&,N,V_criticalIconNodeIdentifiers
startTime
T@"SBIconZoomSettings",&,D,N
SBSearchEtceteraMultiplexingViewController
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSearchEtceteraMultiplexingViewController.m
attemping to initialize %@ with an invalid combination of modes
Subclassers must override to use
Call the designated initializer
This method is for testing and is unsafe if called when we are visible
Only a single valid mode
B16@?0@"UIWindow"8
supportedModes
currentMode
presentationMode
T@"<SBSearchEtceteraMultiplexingViewControllerAppearanceDelegate>",W,N,V_delegate
searchViewPresentationSourceForNextTransition
TQ,N,V_searchViewPresentationSourceForNextTransition
searchViewDismissalReasonForNextTransition
TQ,N,V_searchViewDismissalReasonForNextTransition
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDashBoardIsolatingViewController.m
presenter != nil
viewController != nil
UIKitModalPresentation
UIKitModalPresentationCancelled
UIKitModalDismissal
T@"SBDashBoardViewControllerBase",R,N,V_isolatedViewController
SBNotificationCenterControllerWillPresent
SBNotificationCenterControllerDidPresent
SBNotificationCenterControllerMayDismiss
SBNotificationCenterControllerWillDismiss
SBNotificationCenterControllerDidDismissNotification
SBNotificationCenterBackdropGroupName
SBNotificationCenterControllerBusyForHideShowList
SBNotificationCenterControllerBusyForShowingTab
SBNotificationCenterControllerOrientationLockForShowList
presenting
TB,R,N,GisPresenting
Tq,N,V_presentationType
fromCurrentState
TB,N,GisFromCurrentState,V_fromCurrentState
initialTouchLocation
T{CGPoint=dd},N,V_initialTouchLocation
stepper
T@?,C,N,V_stepper
presentationBegunHandler
T@?,C,N,V_presentationBegunHandler
pendingTransition
T@?,C,N,V_pendingTransition
T@?,C,N,V_completion
SBNotificationCenterDidPresent
v24@?0{CGPoint=dd}8
Present Notification Center
%s: already have an active transition context: %@
-[SBNotificationCenterController dismissAnimated:fromCurrentState:withStepper:completion:]_block_invoke
Expected '_borrowedGrabberView' (%@) and '_unregisterSharedGrabberBlock' (%@) to be nil
@"SBLockScreenActionContext"8@?0
grabberAnimationDuration
partialPulldownFeedbackBehavior
T@"UIImpactFeedbackGenerator",&,N,V_partialPulldownFeedbackBehavior
presentedState
Tq,N,V_presentedState
T@"SBNotificationCenterViewController",R,N,V_viewController
T@"SBNotificationCenterSettings",R,N,V_settings
T@"SBWindow",R,W,N
grabberVisible
TB,R,N,GisGrabberVisible
grabberEnabled
TB,N,GisGrabberEnabled,V_grabberEnabled
blursBackground
lockScreenActionContext
T@"SBLockScreenActionContext",R,N,V_lockScreenActionContext
OverlayContext:%p
(empty)
notASetting
appAnimationDuration
appAnimationDelay
appForceQuitFromSwitcher
appViaSystemGesture
appToAppSystemGesture
appToIconWithLeafIdentifier
alertEventOnly
alertAfterNextLaunch
alertAnimationDelayForOthersActivation
alertAnimateOthersResumption
alertDismissalRequested
alertDisableAnimating
alertDeactivatingLockScreenInBackground
appAnimationStart
animationDurationForOthersActivation
empty
TB,R,N,GisEmpty
inputBias
inputAmount
Activate App
com.apple.mobilenotes
shouldForwardAction
cardItem
T@"SBSCardItem",R,&,N,V_cardItem
pluginCompletionBlock
T@?,C,N,V_pluginCompletionBlock
TB,N,V_shouldForwardAction
WALLET_ACTION_SHOW_PASS
%@-%lu-default
HideCCForSBAlert
HideNCForSBAlert
HideNotificationLongLookForSBAlert
HideSiriForSBAlert
HideAppIconForceTouchForSBAlert
windowHostWrapper
T@"SBWindowSelfHostWrapper",&,N,V_windowHostWrapper
canAppearUnderAlert
TB,N,V_canAppearUnderAlert
shouldRestoreFirstResponder
TB,N,V_shouldRestoreFirstResponder
B32@?0@"SBMainAlertHostedAccessoryWrapper"8Q16^B24
SBMainAlertManager is locking orientation
SBAlertManager
SBMainAlertManager is unlocking orientation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBLayoutState.m
Don't try to init a LayoutState directly. Use the initialLayoutState
[context isKindOfClass:[SBWorkspaceApplicationTransitionContext class]]
elements
T@"NSSet",R,N,V_elements
Tq,R,N,V_interfaceOrientation
Advance Date Override
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStartupTransitionFactory.m
initialRestartState
Homescreen Wallpaper
homescreenWallpaperSettings
Lockscreen Wallpaper
lockscreenWallpaperSettings
Icon Lists
iconSettings
Icon Badges
iconBadgeSettings
Parallax
T@"SBFLockScreenWallpaperParallaxSettings",&,V_lockscreenWallpaperSettings
T@"SBFHomeScreenWallpaperParallaxSettings",&,V_homescreenWallpaperSettings
T@"SBFParallaxSettings",&,V_iconSettings
T@"SBFParallaxSettings",&,V_iconBadgeSettings
Deck Switcher
Minimum Viable Switcher
Style
switcherStyle
Wallpaper Settings
wallpaperSettings
Orb Gesture
orbGestureSettings
Clip Status Bar
clipStatusBarArea
Translation
aExpLayoutCoeff
Curve Exponent
bExpLayoutCoeff
Depth Padding
depthPadding
Deck Switcher Layout
useTitleOpacityPrototypeSettings
Title Opacity A
titleOpacityACoeff
Title Opacity B
titleOpacityBCoeff
Title Opacity C
titleOpacityCCoeff
Title Opacity D
titleOpacityDCoeff
Title Opacity
insertMass
insertStiffness
insertDamping
Insert Spring
@24@?0@8@"SBAppSwitcherSettings"16
No Snapshots
simplicityOptionNoSnapshots
No Status Bars
simplicityOptionNoStatusBars
No Labels
simplicityOptionNoLabels
No Icons
simplicityOptionNoIcons
No Blurs
simplicityOptionNoBlurs
No Shadows
simplicityOptionNoShadows
Dosido Settings
dosidoAnimationSettings
Present Animation
presentAnimationSettings
Dismiss Animation
dismissAnimationSettings
App Switcher
simplicityOptions
Tq,D
TB,V_simplicityOptionNoSnapshots
TB,V_simplicityOptionNoStatusBars
TB,V_simplicityOptionNoLabels
TB,V_simplicityOptionNoIcons
TB,V_simplicityOptionNoBlurs
TB,V_simplicityOptionNoShadows
Tq,V_switcherStyle
T@"SBAppSwitcherOrbGestureSettings",&,N,V_orbGestureSettings
T@"SBAppSwitcherWallpaperSettings",&,N,V_wallpaperSettings
TB,V_clipStatusBarArea
Td,V_aExpLayoutCoeff
Td,V_bExpLayoutCoeff
Td,V_depthPadding
TB,V_useTitleOpacityPrototypeSettings
Td,V_titleOpacityACoeff
Td,V_titleOpacityBCoeff
Td,V_titleOpacityCCoeff
Td,V_titleOpacityDCoeff
Td,V_insertMass
Td,V_insertStiffness
Td,V_insertDamping
T@"SBAnimationSettings",&,N,V_dosidoAnimationSettings
T@"SBAnimationSettings",&,N,V_presentAnimationSettings
T@"SBAnimationSettings",&,N,V_dismissAnimationSettings
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkAppExitedWorkspaceTransaction.m
![app boolForProcessSetting:kSBProcessSettingRelaunchAfterExiting]
behavior
T@"<SBMesaUnlockBehavior>",R,N,V_behavior
T@,R,N,V_request
feedback
T@"SBAuthenticationFeedback",R,N,V_feedback
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBLockScreenMesaCoordinator.m
biometricResource
Authentication state changed (authenticated: %@)
DisableCoordinator
Last disable coordinator assertion removed.
Disable coordinator assertion added: %@
DisableWalletPreArmAssertion
Last disable wallet pre-arm assertion dropped and current state is unavailable.
PreArm was active, but now it's disabled for assertions: %@
DisableUnlockAssertion
Last disable Unlock assertion dropped and current state is unavailable.
Unlock was allowed, but now it's disabled for assertions: %@
DisableAutoUnlockAssertion
Last disable AutoUnlock assertion dropped and current state is unavailable.
AutoUnlock was allowed, but now it's disabled for assertions: %@
MenuButtonSinglePress
MenuButtonDoublePress
Reset because %@
matchingState
isPresentingWalletInterface
pendingUnlockRequest
disableCoordinatorAssertions
disableWalletPrearmAssertions
disableUnlockAssertions
disableAutoUnlockAssertions
passcodeMatchAssertions
Finger On
Identity match - with no wallet pre-arm recognizer active and not presenting wallet UI
Allowed
NotAllowed
Biometric event monitor matching is now allowed.
recognizer
We should never be presenting the wallet interface when a pre-arm recognizer recognizes.
We must be in the pre-arm state to receive this message
Wallet UI failed to present.
We should never be presenting the wallet interface when a pre-arm recognizer fails.
Wallet pre-arm failed to recognize for reason %@ but we matched before it failed to recognize or the finger is still on the sensor
Wallet pre-arm failed to recognize for reason %@ - bioAutoUnlockingDisabledReasons: %@
We shouldn't be getting unlock requests when matching is effectively disabled.
We must be in an state allowing unlocks to request an unlock.
service-interruption
source: %d
Cleanup making sure the UI is actually dismissed.
%@ - starting recognition for wallet pre-arm
We only support pending while in a pre-arm state at this time (currentState: %d).
Passcode view is active and wants matching: %@
Passcode frontmost added.
last passcode view matching wanted assertion relinquished: %@
Passcode frontmost removed.
wallet UI dismissed with reason: %@
MesaCoordinatorEnabled
walletPrearmRecognizer
T@"SBWalletPrearmRecognizer",R,N,G_walletPrearmRecognizer,V_walletPrearmRecognizer
TQ,R,N,G_state,V_state
passLibrary
T@"PKPassLibrary",&,N,G_getPassLibrary,S_setPassLibrary:,V_passLibrary
autoUnlockBehavior
T@"<SBMesaUnlockBehavior>",&,N,G_setAutoUnlockBehavior,S_setAutoUnlockBehavior:,V_autoUnlockBehavior
T@"<SBLockScreenMesaCoordinatorDelegate>",W,N,V_delegate
bioAuthenticatedWhileMenuButtonDown
TB,N,V_bioAuthenticatedWhileMenuButtonDown
TB,N,GisAuthenticated,V_isAuthenticated
TB,R,N,GisEnabled
walletPreArmDisabled
TB,R,N,GisWalletPreArmDisabled
isUnlockingDisabled
TB,R,N,GisUnlockingDisabled
autoUnlockingDisabled
TB,R,N,GisAutoUnlockingDisabled
AllowWalletPreArm
AllowAutoUnlock
PasscodeUI
T@"<SBLayoutElementViewControllerDelegate>",W,N,V_delegate
preferredLayoutLevel
manager
isRetaining
isDefunct
retaining reasons
display-connected
-[SBSceneManagerReference delegate]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSceneManagerReference.m
-[SBSceneManagerReference setDelegate:]
-[SBSceneManagerReference manager]
-[SBSceneManagerReference setManager:]
you can't set the manager if the reference has been invalidated : manager=%@
-[SBSceneManagerReference isRetaining]
-[SBSceneManagerReference isDefunct]
-[SBSceneManagerReference setDisplayIsConnected:]
-[SBSceneManagerReference retainForScene:]
-[SBSceneManagerReference releaseForScene:]
-[SBSceneManagerReference invalidate]
we were trying to retain manager but it went away anyway : manager=%@
T@"FBSDisplay",&,N,V_display
sceneID
T@"NSString",C,N,V_sceneID
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSnapshotDataProvider.m
snapshot
T@"XBSnapshotDataProviderContext",R,&,N
T@"XBSnapshotDataProviderContext",R,&,N,V_context
com.apple.webapp
com.apple.webapp-
T@"NSURL",&,N,V_launchURL
bookmarkIcon
T@"SBBookmarkIcon",&,N
SBSideSwitcherRequester
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSideSwitcherViewController.m
!SBSideSwitcherIsTransitioning([self transitionState])
B24@?0@"FBScene"8@"FBSSceneSettings"16
SBSideSwitcherIsTransitioning([self transitionState])
pageview should be removed from the hierarchy at this point so that it not reused
v16@?0^{?=QQB}8
ActivateSideApplication = %@
B24@?0@"SBDisplayItem"8@"NSDictionary"16
@16@?0@"SBApplication"8
Illegal transition state change (idle -> finishing). Must enter `running` state first
Illegal transition state change (running -> idle). Must enter `finishing` state first
viewCurrentlyAppeared
TB,N,V_viewCurrentlyAppeared
transitionState
TQ,N,V_transitionState
transitionProgress
Td,N,V_transitionProgress
kSBWirelessAppSyncBegan
kSBWirelessAppSyncEnded
kSBSyncSessionBegan
kSBSyncSessionEnded
SBICloudRestoreDidBeginNotification
SBICloudRestoreDidEndNotification
isAppSyncing
TB,R,N,V_isAppSyncing
isSyncing
TB,R,N,V_isSyncing
isRestoringFromICloud
isAutoSyncing
TB,R,N,V_isAutoSyncing
isWirelessSyncing
TB,R,N,V_isWirelessSyncing
com.apple.springboard.atc.wsyncnotify
/newIconState.plist
overlayView
T@"SBLockOverlayView",R,N,V_overlayView
bounceSettings.gravity
bounceSettings.elasticity
bounceSettings.friction
Resistance
bounceSettings.resistance
bounceSettings.velocity
bounceSettings.minVelocityToAssist
bounceSettings.maxVelocityToAssist
bounceSettings.maxVelocityAssistance
Bounce
Animation Duration
Grabber
Mode Button Tint Level
modeButtonTintLevel
Mode Button Tint Alpha
modeButtonTintAlpha
Mode Label Tint Level
modeLabelTintLevel
Mode Label Tint Alpha
modeLabelTintAlpha
Mode Control
Notification Center
bounceSettings
T@"SBBounceSettings",&,N,V_bounceSettings
Td,V_grabberAnimationDuration
actionButtonVibrantTintLevel
Td,N,V_actionButtonVibrantTintLevel
actionButtonVibrantTintAlpha
Td,N,V_actionButtonVibrantTintAlpha
actionButtonSelectedVibrantTintLevel
Td,N,V_actionButtonSelectedVibrantTintLevel
actionButtonSelectedVibrantTintAlpha
Td,N,V_actionButtonSelectedVibrantTintAlpha
actionButtonOverlayTintLevel
Td,N,V_actionButtonOverlayTintLevel
actionButtonOverlayTintAlpha
Td,N,V_actionButtonOverlayTintAlpha
actionButtonSelectedOverlayTintLevel
Td,N,V_actionButtonSelectedOverlayTintLevel
actionButtonSelectedOverlayTintAlpha
Td,N,V_actionButtonSelectedOverlayTintAlpha
Td,N,V_modeButtonTintLevel
Td,N,V_modeButtonTintAlpha
Td,N,V_modeLabelTintLevel
Td,N,V_modeLabelTintAlpha
B32@?0@"SBBulletinEvent"8Q16^B24
Reminder #%lu
Buy Groceries
Whole Foods on 24th
TestSectionID
View Reminder
com.apple.reminders
Mark As Completed
complete
Remind me in 15 minutes
remind
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAppStatusBarSettingsAssertion.m
use initWithSettings:...
invalid status bar settings level
invalid status bar settings
invalid reason
TQ,R,N,V_level
T@"SBAppStatusBarSettings",R,C,N,V_settings
T@"SBMainWorkspaceTransitionRequest",R,D,N
BusyForAssistantReveal
BusyForAssistantDismiss
BannerTransition
SBBusyReasonRaiseGesture
SBBannerControllerOrientationLockForKeyboardReason
SBBannerControllerWillDismissBulletinNotification
B32@?0@"SBUIBannerContext"8Q16^B24
B32@?0@"<SBUIBannerTargetImplementation>"8@"<SBUIBannerSource>"16@"SBUIBannerItem"24
Not 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBBannerController.m
reveal must have a context
replace must have a context
hide must not have a context
if not revealing we must already have a _bannerViewController
unknown banner transition = %i : context = %@ : dismissReason = %i
bannerTargetIdentifier
T^v,R,N
bannerTargetIdiom
topAlert
T@"SBAlert",&,N,V_topAlert
T@"SBLockScreenActionContext",&,N,V_lockScreenActionContext
_transitionCoordinator
sb_transitionCoordinator
T@"<UIViewControllerTransitionCoordinator>",R,N
pageIndicatorSet
T@"_UILegibilityImageSet",R,N,V_pageIndicatorSet
enabledPageIndicatorSet
T@"_UILegibilityImageSet",R,N,V_enabledPageIndicatorSet
<firstname>
<surname>
<fullname>
LOGOUT_GOODBYE_USER_NAME_FORMAT
<[a-z]+>
givenName
familyName
LOGOUT_GOODBYE_USER
LOGOUT_GOODBYE_USER_NO_NAME
LOGOUT_SAVING_DOCUMENTS_FROM
LOGOUT_SAVING_DOCUMENTS_MORE_COUNT
LOGOUT_SAVING_DOCUMENTS
userContact
T@"CNContact",&,N,V_userContact
pendingApplications
T@"NSArray",C,N,V_pendingApplications
progressVisible
TB,D,N,GisProgressVisible
Possible
Changed
B16@?0@"NCNotificationRequest"8
T@"<NCNotificationDestinationDelegate>",W,N
T@"<NCNotificationAlertDestinationDelegate>",W,N
presentedBanner
T@"NCNotificationViewController",&,N,V_presentedBanner
bannerWindow
T@"SBNotificationBannerWindow",&,N,V_bannerWindow
userInteractionInProgress
TB,N,GisUserInteractionInProgress,V_userInteractionInProgress
presentTimer
T@"NSObject<OS_dispatch_source>",&,N,V_presentTimer
replaceTimer
T@"NSObject<OS_dispatch_source>",&,N,V_replaceTimer
dismissTimer
T@"NSObject<OS_dispatch_source>",&,N,V_dismissTimer
bannerPresentationSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,N,V_bannerPresentationSemaphore
resignActiveAssertion
T@"FBUIApplicationSceneDeactivationAssertion",&,N,V_resignActiveAssertion
longLookDestination
T@"SBNotificationLongLookBannerDestination",&,N,V_longLookDestination
setupManager
T@"SBSetupManager",&,N,V_setupManager
presentingBanner
TB,R,N,GisPresentingBanner
presentingBannerInLongLook
TB,R,N,GisPresentingBannerInLongLook
dismissingBanner
TB,R,N,GisDismissingBanner
preventingAutomaticLock
TB,R,N,GisPreventingAutomaticLock
T@"NCNotificationViewController",R,&,N
Td,N,V_percentComplete
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSteppedAnimationTimingFunctionCalculator.m
Invalid timing interval for function (%f, %f)
timingFunction
T@"CAMediaTimingFunction",R,N,V_timingFunction
constrainedRange
T{SBNormalizedTransitionInterval=dd},R,N,V_constrainedRange
launchSource
Tq,N,VlaunchSource
T@"SBBestAppSuggestion",&,N,V_appSuggestion
T@"NSDictionary",R,W,N
com.apple.backboardd
com.apple.frontboard.shutdown
B32@?0@"BSAction"8@"NSString"16@?<v@?>24
RestartTransitionRequest-(%@-%d)-reason:%@
com.apple.springboard.processesKilledForInsecureDrawing.%@
Process detected doing insecure drawing while in secure mode
/System/Library/Frameworks/WebKit.framework/XPCServices/
%@ is not a valid initializer. You must call -[%@ initWithPictureInPictureViewController:].
%@ does not support unarchiving from a nib.
size_width
size_height
margin_left
margin_right
margin_top
margin_bottom
H:|-(margin_left)-[contentView(size_width)]
H:[contentView(size_width)]-(margin_right)-|
V:|-(margin_top)-[contentView(size_height)]
V:[contentView(size_height)]-(margin_bottom)-|
origin_x
origin_y
H:|-(origin_x)-[contentView(size_width)]
V:|-(origin_y)-[contentView(size_height)]
q8@?0
{CGSize=dd}8@?0
pictureInPictureViewController
T@"PGPictureInPictureViewController",R,N,V_pictureInPictureViewController
displayLayoutElementLevel
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBPIPContainerViewController.m
%@ expects scale in range [0..1]!
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStartupTransitionToHome.m
globalDefaults
T@"SBExternalGlobalDefaults",R,&,N
carrierDefaults
T@"SBExternalCarrierDefaults",R,&,N
operatorDefaults
T@"SBExternalOperatorDefaults",R,&,N
uikitDefaults
T@"SBExternalUIKitDefaults",R,&,N
duetDefaults
T@"SBExternalDuetDefaults",R,&,N
demoDefaults
T@"SBExternalDemoDefaults",R,&,N
setupDefaults
T@"SBExternalSetupDefaults",R,&,N
settingsDefaults
T@"SBExternalSettingsDefaults",R,&,N
smsDefaults
T@"SBExternalSMSDefaults",R,&,N
phoneDefaults
T@"SBExternalPhoneDefaults",R,&,N
networkDefaults
T@"SBExternalWifiDefaults",R,&,N
soundDefaults
T@"SBExternalSoundsDefaults",R,&,N
T@"UIColor",R,N,V_tintColor
selectedTintColor
T@"UIColor",R,N,V_selectedTintColor
selectedTextColor
T@"UIColor",R,N,V_selectedTextColor
vibrantSettings
T@"SBControlColorSettings",R,N,V_vibrantSettings
overlaySettings
T@"SBControlColorSettings",R,N,V_overlaySettings
SBBulletinModalAlert
v32@?0@"BBButton"8Q16^B24
OPEN
OPTIONS
SNOOZE
bulletinButtonIndices
T@"NSArray",&,N,V_bulletinButtonIndices
actions
T@"NSArray",&,N,V_actions
%@: forceHidden: %d, breadcrumbTitle: %@, breadcrumbSecondaryTitle: %@
forceHidden
TB,N,GisForcedHidden,V_forceHidden
T@"NSString",C,N,V_breadcrumbTitle
T@"NSString",C,N,V_breadcrumbSecondaryTitle
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBWallpaperEffectSnapshotCache.m
key cannot be nil or empty
wallpaperEffectSnapshotCache-%@
SBBulletinWindow
wantsKeyWindow
TB,N,G_wantsKeyWindow,S_setWantsKeyWindow:,V_wantsKeyWindow
T@"UIViewController",R,N,V_rootVC
T@"UIWindow",R,N,V_bulletinWindow
windowAboveAssistant
TB,N,GisWindowAboveAssistant,V_aboveAssistant
TB,N,GisAnimated,V_animated
TB,N,GisPresenting,V_presenting
presentingViewController
T@"UIViewController",&,N,V_presentingViewController
presentedViewController
T@"UIViewController",&,N,V_presentedViewController
presentationCompletion
T@?,C,N,V_presentationCompletion
dismissalCompletion
T@?,C,N,V_dismissalCompletion
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkRelockUIAlert.m
SBStarkRelockUIAlert defines its own vc
{%0f,%0f}
-Portrait
-PortraitUpsideDown
-LandscapeLeft
-LandscapeRight
UIImage *SBCreateResourceImageWithoutCaching(NSString *__strong)
pixelSize
Tq,N,V_variant
Tq,N,V_style
Search Reachability
TB,N,GisReachabilityEnabled
reachabilityContainerView
T@"UIView",W,N
dismissReachabilityGesture
T@"UIGestureRecognizer",R,&,N
T@"NSArray",&,N,V_regions
startingPiPFailed
Found %@
PiPController says to start!
%@-%p
PiPController is not interested.
PiPTransition
Couldn't start PiP for %@ (pid %d)
com.apple.springboard.show.pip-overlay.%@
Nothing to PiP.
pidToPiP
entityToPiP
ZoomDown
Tq,N,V_transitionStyle
T@"SBWorkspaceEntity",R,C,N,V_entityToPiP
translation
translationMagnitude
absoluteTranslation
rotation
T{CGPoint=dd},N,S_setTranslation:,V_translation
Td,N,S_setTranslationMagnitude:,V_translationMagnitude
T{CGPoint=dd},N,S_setAbsoluteTranslation:,V_absoluteTranslation
Td,N,S_setScale:,V_scale
Td,N,S_setRotation:,V_rotation
dominantComponent
Ti,R,N,V_dominantComponent
translationWeight
Td,N,V_translationWeight
pinchingWeight
Td,N,V_pinchingWeight
rotationWeight
Td,N,V_rotationWeight
smoothedInfo
T@"UIGestureRecognizerTransformAnalyzerInfo",R,N,V_smoothedInfo
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkStatusBarViewController.m
must provide a valid hide reason to enable/disable
statusBarStyleDelegate
T@"<UIStatusBarStyleDelegate>",W,N
separatorHidden
TB,N,GisSeparatorHidden
dockController
T@"SBStarkStatusBarDockController",R,N
T@"SBStarkStatusBarStateProvider",R,N
Enter/Exit Fake iTunes Restore State
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBMultiplexedHostView.m
Call the designated initializer instead
T@"NSString",R,C,N,V_requester
hostView
T@"UIView",&,N,V_hostView
snapshotView
T@"UIView",&,N,V_snapshotView
frameObserver
T@"<_SBMultiplexedHostViewScreenRectObserver>",W,N,V_frameObserver
clippingDisabled
TB,N,GisClippingDisabled,V_clippingDisabled
APP_REPAIR_REQUIRES_NETWORK_TITLE
APP_REPAIR_REQUIRES_NETWORK_MESSAGE_WITH_NAME_FORMAT
APP_REPAIR_REQUIRES_NETWORK_OK
SBOrientationLockForSwitcher
SBAppSwitcherHidePictureInPictureReason
switcher kill
SBSuppressKeyboardForMainAppSwitcher
ActivateSwitcherNoninteractive
ActivateSwitcherForcePress
DismissSwitcherForcePress
DismissSwitcherNoninteractive
DismissSwitcherNoninteractiveForAppSuggestion
SBAppSwitcherQuitAppNotification
SBAppSwitcherQuitAppBundleIdentifierKey
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBMainSwitcherViewController.m
if this doesn't exist then we're hosed - somebody likely called _destoryAppListCache too early
v28@?0B8@"SBDisplayItem"12@"SBDisplayItem"20
Unhandled display item type
must be gone by now if the element is being reused
switcher appearing
v16@?0^{?=qB}8
killed from app switcher
T@"SBMainDisplayLayoutState",C,N,S_setInitialLayoutState:,V_initialLayoutState
_otherReturnToElementsByRole
T@"NSMutableDictionary",C,N,S_setOtherReturnToElementsByRole:,V_otherReturnToElementsByRole
T@"UIView",&,N,V_contentView
thermalWarningView
T@"SBLoginAppContainerOverlayWrapperView",&,N,V_thermalWarningView
pluginView
T@"UIView",&,N,V_pluginView
CLASS0SMS_ALERT_TITLE
CLASS0SMS_DISMISS
CLASS0SMS_ALERT_LEARN_MORE_TITLE
messageString
T@"NSString",C,N,V_messageString
T@"<SBSMSClass0AlertDisplayDelegate>",N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSwitcherAppViewWrapperPageContentView.m
T@"SBAppView",&,N,V_appView
T@"<SBSwitcherAppViewWrapperPageContentViewDelegate>",W,N,V_delegate
Icon Relayout & Reload
com.apple.springboardservices.daemonqueue
SBDaemonHandler state -> %@
enabler
T@?,C,N,V_enabler
disabler
T@?,C,N,V_disabler
%@[%i]:
FadeWindow
ScreenFadeAnimation
-[SBScreenFadeAnimationController prepareToFadeInForSource:timeAlpha:dateAlpha:statusBarAlpha:delegate:existingDateView:completion:]
screenFadeAnimationController
-[SBScreenFadeAnimationController _runCompletionHandlerForFadeIn:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBScreenFadeAnimationController.m
really shouldn't invoke the fade in block from inside the fade in block
really shouldn't invoke the fade out block from inside the fade out block
T@"SBAlertItem",&,N,V_alertItem
T@"<SBAlertItemPresenter>",&,N,V_presenter
com.apple.UIKit
fakeForegroundTransitionForBackgroundFetch
UIFakeForegroundTransitionForBackgroundFetch
UIStatusBarDisableCarPlayDockItem
alwaysAppearsFocused
TB,N,V_alwaysAppearsFocused
SBClockScheduledNotificationsDidChangeNotification
SBClockNotificationRequestssKey
SBClockAlarmsDidFireNotification
SBClockNotificationKey
SBLiquidDetectionManagerStateDidChange
XxnEk9uiIk5vCdbWEGt7lA
com.apple.ioam.accessory.vhi.stateChange
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBLiquidDetectionManager.m
a singleton should not be deallocated
liquid detected
no liquid detected
detected
accessoryPortWet
TB,R,N,GisAccessoryPortWet,V_accessoryPortWet
detectionEnabled
TB,R,N,GisDetectionEnabled,V_detectionEnabled
liquidDetected
TB,R,D,N,GisLiquidDetected
appRepairFailed
appRepairRequiresNetwork
appRepair
no data connection
refetch request failed
Running app repair request %p for %@ (%@).
Got response for request %p with success: %@.
v28@?0B8@"NSArray"12@"NSError"20
appInfos
T@"NSSet",R,C,N,V_appInfos
supportedRoles
attributes
viewControllerClass
layoutIdentifier
layoutRole
supportedLayoutRoles
layoutAttributes
entityGenerator
T@?,R,C,N
T@"NSString",R,C,N,V_identifier
Tq,R,N,V_role
T@?,C,N,V_entityGenerator
TQ,R,N,V_supportedLayoutRoles
TQ,R,N,V_layoutAttributes
T#,R,N,V_viewControllerClass
Force StatusBar Hidden
com.apple.mobilemail
Mesh
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStretchTransformer.m
Trying to call %s, but we already have a completion block (so this has already been called one time
-[SBStretchTransformer animateDosidoWithFactory:completion:]
meshTransform
anchorEdge
TQ,N,S_setAnchorEdge:,V_anchorEdge
Tq,N,S_setOrientation:,V_orientation
T@"UIView",&,N,V_view
intent
@"NSString"8@?0
T@"NSString",C,N,V_name
Ti,N,V_source
Ti,N,V_intent
T@"FBSProcessHandle",&,N,V_process
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBMultiplexingViewController.m
v24@?0@"SBFView"8@"UIWindow"16
subclassers must implement
hostingDelegate
T@"<SBMultiplexedHostingDelegate>",W,N,V_hostingDelegate
hosting
TB,R,N,GisHosting,V_hosting
contextHostRequester
T@"NSString",R,C,N,V_contextHostRequester
T@"NSString",R,C,N,V_isolationIdentifier
hideMyPhoneNumber
HideMyNumber
dimmingView
T@"SBSceneDimmingView",R,N,V_dimmingView
pinResizeGrabberView
T@"SBLayoutElementPinResizeGrabberView",R,N,V_pinResizeGrabberView
Tq,N,V_dimmingLevel
Tq,N,V_sideSwitcherGrabberStyle
TB,N,GisSideSwitcherGrabberPressed,V_sideSwitcherGrabberPressed
pinResizeGrabberFrame
pinResizeGrabberVerticalOffset
Td,N,V_pinResizeGrabberVerticalOffset
vibrant
TB,N,GisVibrant,V_vibrant
TB,N,GisVisible
SBWaitForAppActivationMilestone
Activation failed - app exited
isPasscodeLocked
isBlocked
isInLostMode
hasPasscodeSet
requiresSetup
shouldNeverLock
forSimulator
bootDefaults
inLostMode
TB,N,GisInLostMode,V_isInLostMode
TB,N,GisBlocked,V_isBlocked
TB,N,V_hasPasscodeSet
TB,N,V_requiresSetup
TB,N,V_shouldNeverLock
currentUser
T@"UMUser",&,N,V_currentUser
T@"SBBootDefaults",&,N,V_bootDefaults
TB,N,GisForSimulator,V_forSimulator
TB,D,N,GisAuthenticated
TB,D,N,GisInLostMode
TB,D,N,GisBlocked
T@"UMUser",&,D,N
T@"SBBootDefaults",&,D,N
TB,D,N,GisForSimulator
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIAnimationFadeAlertToRemoteAlert.m
[alertManager isKindOfClass:[SBMainAlertManager class]]
[remoteAlert isKindOfClass:[SBRemoteAlertAdapter class]]
init not supported -- use initWithWarnTimer:expireTimer:
compoundTimer
SBWarningTimerStageWarn
SBWarningTimerStageExpire
Test Insecure Drawing Alert
Test Process
services
T@"NSMutableArray",R,N,V_services
__reason
__appLaunchURL
__fromAppBundleID
__fromLocked
restartReason
fromApplication
fromLocked
fromDarkBoot
isLogin
isLogout
fromApplicationBundleID
T@"NSString",C,N,V_fromApplicationBundleID
TB,N,V_fromLocked
dark
TB,N,GisDark,V_isDark
TB,N,GisLogin,V_isLogin
TB,N,GisLogout,V_isLogout
hasUserSwitchOverlayMismatch
TB,N,V_hasUserSwitchOverlayMismatch
T@"BKSDisplayRenderOverlay",&,N,V_overlay
WaitingForCreation
WaitingForContextOrderIn
SceneDidCommitUpdate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBWaitForSceneCreationTransaction.m
sceneID != nil
[sceneID isKindOfClass: NSStringClass]
SceneIDToWaitForCreation
Timeout hit
Scene was destroyed
scene
T@"FBScene",&,N,S_setScene:,V_scene
waitForContexts
TB,R,N,V_waitForContext
associatedCell
T@"SBLockScreenNotificationCell",W,N,V_associatedCell
T@"<UIScrollViewDelegate>",W,N,V_delegate
isTopCell
TB,N,V_isTopCell
contentScrollViewWidth
Td,N,V_contentScrollViewWidth
contentScrollView
T@"UIScrollView",R,N,V_contentScrollView
resetsScrollOnPluginWillDisable
TB,N,V_resetsScrollOnPluginWillDisable
SBReachabilityTestActivatedNotification
SBReachabilityTestDeactivatedNotification
Reachability Test
T@"<SBBannerDismissSystemGestureRecognizerDelegate>",W,D,N
SBAssistantWorkspaceRevealInitialAssistantPopover
SBAssistantContextHostRequester
SBRevealModeKey
SBAssistantRevealModeWillChangeNotification
SBAssistantRevealModeDidChangeNotification
SBAssistantVisibilityDidChangeNotification
SBAssistantIsRunningDidChangeNotification
MainScreen
StarkScreen
SBAssistantHidingOtherWindowsReason
SBAssistantController-%ld
default
q16@?0q8
Siri unlock %@
assistant
Assistant.uibundle
-[SBAssistantController _loadPlugin]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAssistantController.m
clientSettings is of an unexpected class : %@
v16@?0@"FBSMutableSceneClientSettings"8
AssistantWindow
SiriActivation
if the homescreen isn't rotatable then siri must not be in landscape (%@)
expected landscape bulletin window (%@)
SiriDeactivation
Assistant should not be visible if we are attempting to activate it - inStarkMode? %d, inMainScreenMode: %d, activationEvent: %d
Siri unlock attempt
10s buffer (launch from stark siri)
Assistant plugin forced update, but no one calls this anymore so why bother?
assistantAnimationDuration
assistantDismissAnimationDurationOverApp
unlockedDevice
TB,N,V_unlockedDevice
Test Class0 SMS
This is a test of the Class 0 SMS alert - count=%i
Test Address
com.apple.springboard.lockScreenHintsPrefsChanged
-[SBLockScreenHintManager _removeAllGestures]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBLockScreenHintManager.m
LockScreenHintManager
-[SBLockScreenHintManager removeCoordinatedPresentingController:]
Enabling
Disabling
-[SBLockScreenHintManager _canControllerWithIdentifier:becomeActiveWithTouchAtLocation:]_block_invoke
does
doesn't
B56@?0{CGPoint=dd}8{CGRect={CGPoint=dd}{CGSize=dd}}24
-[SBLockScreenHintManager setGestureState:]
-[SBLockScreenHintManager _resetGestureSequence]
-[SBLockScreenHintManager _cancelGuestGesturesExcludingController:]
-[SBLockScreenHintManager _hintGestureShouldBegin:]
-[SBLockScreenHintManager _abortCurrentAnimationForController:]
-[SBLockScreenHintManager _handlePress:]
tapGesture
T@"SBLockScreenHintTapGestureRecognizer",&,N,V_tapGesture
longPressGesture
T@"SBLockScreenHintLongPressGestureRecognizer",&,N,V_longPressGesture
panGesture
T@"SBLockScreenHintPanGestureRecognizer",&,N,V_panGesture
initialPanLocationInViewSpace
T{CGPoint=dd},N,V_initialPanLocationInViewSpace
T@"NSMutableSet",&,N,V_gestures
controllersToGuestGestures
T@"NSMapTable",&,N,V_controllersToGuestGestures
controllersToConflictingGuestGestures
T@"NSMapTable",&,N,V_controllersToConflictingGuestGestures
gestureState
Tq,N,V_gestureState
previousActiveController
T@"<SBCoordinatedPresenting>",&,N,V_previousActiveController
activeController
T@"<SBCoordinatedPresenting>",&,N,V_activeController
activeHintEdge
TQ,N,V_activeHintEdge
initialTouchTimeStamp
T@"NSDate",&,N,V_initialTouchTimeStamp
guestGestureActive
TB,N,GisGuestGestureActive,V_guestGestureActive
didEvaluatePressDelay
TB,N,V_didEvaluatePressDelay
fingerOnMesa
TB,N,GisFingerOnMesa,V_fingerOnMesa
T@"SBLockScreenView",&,N,V_lockScreenView
gestureHandlingEnabled
TB,N,GisGestureHandlingEnabled,V_gestureHandlingEnabled
B16@?0#8
SBLockScreenHintGestureStateNone
SBLockScreenHintGestureStateTapped
SBLockScreenHintGestureStateEndingTap
SBLockScreenHintGestureStatePressing
SBLockScreenHintGestureStatePressed
SBLockScreenHintGestureStateEndingPress
SBLockScreenHintGestureStateCancellingPress
SBLockScreenHintGestureStatePanning
SBLockScreenHintGestureStateEndingPan
SBLockScreenHintGestureStateCancellingPan
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBModalAlertPresenter.m
foreground
TB,R,D,N,GisForeground
TB,N,GisAllDay,V_allDay
T@"<SBDateLabelDelegate>",N,V_delegate
Ti,N,V_labelType
TB,N,VisTimestamp
recoil
SBAlertItemWindow
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSharedModalAlertItemPresenter.m
Attempt to present an alert item without an alertController - alertItem: %@
Attempting to dismiss an alert item without an alertController - alertItem: %@
Unexpectedly dismissed alert controller (%@), please file a radar to PEP SpringBoard about this bad citizen: %@
modalViewControllerStack
T@"SBModalViewControllerStack",&,N,G_modalViewControllerStack,S_setModalViewControllerStack:,V_modalViewControllerStack
currentlyPresentedAlertItem
T@"SBAlertItem",R,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBIconFadeAnimator.m
crossfadeView != nil
fadesReferenceView
TB,N,V_fadesReferenceView
numberOfPresses
TQ,N,V_numberOfPresses
maxDefaultPressDownDuration
Td,N,V_maxDefaultPressDownDuration
maxDefaultPressUpDuration
Td,N,V_maxDefaultPressUpDuration
maxDownToDownDuration
Td,N,V_maxDownToDownDuration
indexOfPressDownToUseForVarianceAndGrowth
TQ,N,V_indexOfPressDownToUseForVarianceAndGrowth
numberOfPressDownGrowthTerms
TQ,N,V_numberOfPressDownGrowthTerms
indexOfPressUpToUseForVarianceAndGrowth
TQ,N,V_indexOfPressUpToUseForVarianceAndGrowth
numberOfPressUpGrowthTerms
TQ,N,V_numberOfPressUpGrowthTerms
pressDownVariance
Td,N,V_pressDownVariance
pressUpVariance
Td,N,V_pressUpVariance
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDisableActiveInterfaceOrientationChangeAssertion.m
Reason is required.
<%p: reason='%@'>
T@"SBPagedScrollView",R,&,N,G_scrollView,V_scrollView
visibleView
T@"SBSearchEtceteraLayoutContentView",R,&,N,G_visibleView,V_visibleView
todayContentView
T@"SBSearchEtceteraTodayLayoutContentView",&,N,V_todayContentView
searchContentView
T@"SBSearchEtceteraSearchLayoutContentView",&,N,V_searchContentView
notificationsContentView
T@"SBSearchEtceteraNotificationsLayoutContentView",&,N,V_notificationsContentView
TQ,N,V_currentMode
currentStyle
TQ,N,V_currentStyle
todayContentUnderlapsNavBar
TB,N,V_todayContentUnderlapsNavBar
navigationBarTopInset
Td,N,V_navigationBarTopInset
contentBottomInset
Td,N,V_contentBottomInset
T@"<SBSearchEtceteraLayoutViewDelegate>",W,N,V_delegate
T@"SBAppView",&,N
Static
Live
T@"<SBFLegibilitySettingsProviderDelegate>",W,N
T@"<SBFLegibilitySettingsProviderDelegate>",W,N,V_delegate
SBAwayBulletinListAttachmentKey
SBAwayBulletinFloatingAttachmentKey
buttonLabel
T@"NSString",C,N,V_buttonLabel
timestamp
T@"NSDate",&,N,V_timestamp
isNewItem
TB,N,V_isNewItem
shouldPlayLightsAndSirens
%@: %ld bulletins
Title:%@
Message: %@
Person ID: %ld
Contact: %@
Active Bulletin: %@
activeBulletin
T@"BBBulletin",&,V_activeBulletin
T@"UIViewController",&,V_secondaryContentViewController
TB,N,V_shouldPlayLightsAndSirens
notificationRequest
T@"UNNotificationRequest",&,N,V_notificationRequest
fireDate
T@"UIImage",R,N,V_iconImage
cardThumbnail
T@"UIImage",&,N,V_cardThumbnail
T@"SBSCardItem",C,N,V_cardItem
body
AWAY_ITEM_TYPE_COUNT_FORMAT
AWAY_ITEM_TYPE_MIDDLE_FORMAT
AWAY_ITEM_TYPE_END_FORMAT
BulletinListSystemIcon
navigationControllerView
T@"UIView",&,N,V_navigationControllerView
SIM Lock Passcode
T@"SBAlertItem",R,W,N,V_alertItem
NCUserAlertDefaultActionRunner
%@-%lu-dismiss
AttachmentVideoOverlay
N_MORE_ATTACHMENTS
1_MORE_ATTACHMENT
N_ATTACHMENTS
1_ATTACHMENT
visualEffect
T@"UIVisualEffect",&,N
Show/Hide Side Switcher
ActiveSideSwitcherPinned = %@
bbObserverDelegate
T@"<BBObserverDelegate>",&,N,V_bbObserverDelegate
feed
TQ,N,V_feed
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIStarkDosidoNowPlayingAnimation.m
initializationParametersBlock
v48@?0@"NSString"8^@16^@24^@32^@40
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBMainDisplayLayoutState.m
Activating %@ as side app without anything as primary
somehow we ended up with a bogus layout element: %@
breadcrumbState
sideAppState
sideAppPresentationStyle
sideAppWidth
externallyManagedSideAppPresentationStyle
externallyManagedSideAppWidth
T@"SBBreadcrumbState",R,N,V_breadcrumbState
T@"SBSideAppState",R,N,V_sideAppState
externallyManagedSideAppState
T@"SBSideAppState",R,N,V_externallyManagedSideAppState
SBRotateScenesWorkspaceTransaction ready to commit
View Security Bug
Please file a bug with the crash log to the relevant component
T@"<SBPowerDownAlertViewDelegate>",W,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStartupTransitionToLockOut.m
StartupTransitionToLockOut
@"SBUIAnimationController"16@?0@"SBWorkspaceTransitionRequest"8
T@"SBLockScreenManager",R,N,V_lockScreenManager
Seed Bulletin
Additional Bulletins
SBBulletinBannerItem
@"SBUIBannerAction"16@?0@"BBAction"8
AWAY_ITEM_PENDED_DEFAULT_FORMAT
SBIconAnimationContextInvalidationNotification
fraction
Td,N,V_fraction
animationContext
T@"SBFolderControllerAnimationContext",R,N,V_animationContext
referenceView
TB,N,V_invalidated
T@"<SBIconAnimatorDelegate>",W,N,V_delegate
T@"SBIconAnimationSettings",&,N,V_settings
hintFraction
Td,N,V_hintFraction
hintAnimator
T@"SBValueConvergenceAnimator",&,N,V_hintAnimator
backgroundDarkeningView
T@"UIView",&,N,V_backgroundDarkeningView
animating
TB,R,N,GisAnimating
pastPointOfNoReturn
TB,R,N,GisPastPointOfNoReturn
environment
standardOut
standardError
waitForDebugger
disableASLR
relaunchAfterExiting
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIAnimationFadeHomeToPluginAlert.m
[alert isKindOfClass:[SBUIFullscreenAlertAdapter class]]
Hidden
Black
Blur
UltraLightBlurOnly
SemiLightBlurOnly
FlatSemiLightBlurOnly
LightBlurOnly
DarkBlurOnly
UltraLightTintedBlur
SemiLightTintedBlur
FlatSemiLightTintedBlur
LightTintedBlur
MediumTintedBlur
DarkTintedBlur
UltraLightTintOnly
SemiLightTintOnly
FlatSemiLightTintOnly
LightTintOnly
DarkTintOnly
BackgroundLightBlurOnly
BackgroundLightTintedBlur
BackgroundLightTintOnly
ForegroundLightBlurOnly
ForegroundLightTintedBlur
ForegroundLightTintOnly
SwitcherBackgroundLightBlurOnly
SwitcherBackgroundLightTintedBlur
SwitcherBackgroundLightTintOnly
SwitcherForegroundLightBlurOnly
SwitcherForegroundLightTintedBlur
SwitcherForegroundLightTintOnly
(%li)
com.apple.SpringBoard.builtin.SideSwitcher
SBSuppressKeyboardForSceneLayoutTransition
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSceneLayoutWorkspaceTransaction.m
![context isBackground]
%@:%@
_scenesBackgroundedStatusAssertion == nil
![self isComplete]
!_isTransitioning
_transitionContext != nil
_sceneUpdateTransactionGroup == nil
------ PERFORM TRANSITION: %@
v32@?0@"NSString"8@"SBWorkspaceApplication"16^B24
Layout transition will synchronize with scene updates.
Layout transition will NOT synchronize with scene updates.
------ TRANSITION COMPLETE with success: %@
can't call this more than once
Transition continuation called with follow-up transition: %@.
Ignoring continuation because we have already completed.
Performing additional scene layout update for override orientation.
Not performing additional scene layout update for override orientation. (canUpdateScenes = %d, wantsOverride = %d, isComplete = %d
v24@?0@"SBWorkspaceApplicationTransitionContext"8Q16
Starting layout transition.
Deferring commit to synchronization delegate: %@
side-large
side-narrow
-overlay
com.apple.springboard.show.%@.%@
appTupleActivationCount.%@
&&%@
Don't need to do any orientation override, the settings don't have orientation events enabled
Multiple override interface orientations don't make sense (%@ vs %@)
Scene Layout Transaction needs to override orientation to %@ for %@
Sent activation result; error = %@
v16@?0@"<FBApplicationUpdateScenesTransactionObserver>"8
Delegate says perform commit now.
Scene updates ready to commit.
Synchronizing with scene updates NOW.
Update transaction failed: %@
T@"<SBSceneLayoutWorkspaceTransactionDelegate>",W,N,V_delegate
options
TQ,N,V_options
TB,R,N,GisTransitioning,V_isTransitioning
T@"SBWorkspaceApplicationTransitionContext",R,N,V_transitionContext
sceneUpdateTransactions
T@"NSSet",R,N,V_updateTransactions
T@"NSDictionary",R,N,V_appsBySceneID
activatingApplications
T@"NSDictionary",R,N,V_activatingAppsBySceneID
deactivatingApplications
T@"NSDictionary",R,N,V_deactivatingAppsBySceneID
starkWindowDelegate
T@"<SBStarkWindowDelegate>",W,N,V_starkWindowDelegate
-[SBSoundController isPlayingAnySound]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSoundController.m
[NSThread isMainThread]
-[SBSoundController isPlaying:]
-[SBSoundController playSound:environments:completion:]
played
failed to play
-[SBSoundController stopSound:]
-[SBSoundController stopAllSounds]
systemSounds=%@ : avSound=%@ (controller=%@) : tones=%@ (alerts=%@)
-[SBSoundController addObserver:]
-[SBSoundController removeObserver:]
-[SBSoundController handleVolumeButtonDownEvent]
-[SBSoundController _cleanupSystemSound:andKill:]
Must be used from main thread
Failed to create AVController
-[SBSoundController _playAVItem:forSound:]
_avController should be nil
_avControllerSound should be nil
_avControllerMaxDurationTimer should be nil
_avControllerObserver should be nil
unbalanced begin/end for pending callbacks
blurContainerView
T@"SBAppResizingBlurContainerView",&,N,V_blurContainerView
blurredAppSnapshotView
T@"UIView",&,N,V_blurredAppSnapshotView
creatingBlur
TB,N,GisCreatingBlur,V_creatingBlur
appIconView
T@"SBSceneViewAppIconView",&,N,V_appIconView
appSnapshotView
T@"UIView",&,N,V_appSnapshotView
T@"_UIBackdropView",&,N,V_blurView
SBGestureFinishedTrackingGestureMilestone
SBOrientationLockForSwitcherPresentation
SBSwitcherForcePressKeepPresentationAnimationAlive
com.apple.springboard.multitasking.systemgesture.OrbShowSwitcher.cancelled
com.apple.springboard.multitasking.systemgesture.OrbShowSwitcher.completion.previousapp
com.apple.springboard.multitasking.systemgesture.OrbShowSwitcher.completion.appswitcher
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSwitcherForcePressSystemGestureTransaction.m
T@"<SBFramewiseInteractiveTransitionAnimatorDelegate>",W,N,V_delegate
percentVisible
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSOSTriggerObserver.m
SBSOSTriggerObserver configuring settings without a configuration set
SBSOSTriggerObserver configuring settings with an unexpected configuration
T@"<SBSOSTriggerObserverDelegate>",W,N,V_delegate
Tq,R,N,V_configuration
hasSignificantMotionToBegin is NO because it hasn't been directionally accepted for required direction: %d cumulativeMotion: %f
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBTouchTemplateGestureRecognizer.m
Subclasses must override this function
%s - Got another touch but we're already matching, so ignore this one
-[SBTouchTemplateGestureRecognizer touchesBegan:withEvent:]
Recognizer changing state to %@
Beginning gesture recognition sequence number %lu
v24@?0@"UITouch"8^B16
%s - hadn't recognized yet and we were tracking this touch
-[SBTouchTemplateGestureRecognizer _updateForTouchesCancelledOrEnded:]
%s - candidate: %@ from points: %@
-[SBTouchTemplateGestureRecognizer _attemptTemplateMatchWithTouches:polygon:]
%s - result: %@ template: %@
-[SBTouchTemplateGestureRecognizer _attemptTemplateMatchWithTouches:polygon:]_block_invoke
v32@?0@"SBTouchTemplate"8Q16^B24
%s - attemptedTemplateMatch: %@ # of attempts so far: %lu
%s - >%d attempts and still no template matches
motionAccepted: %@, _cumulativeMotion: %f commitDistance: %f
Have enough motion, but the subclass doesn't agree'
Failed: %@
Ending gesture recognition sequence %lu
possibleTemplates
T@"NSMutableArray",R,N,G_possibleTemplates,V_possibleTemplates
initialTouchPointMap
T@"NSMapTable",R,N,G_initialTouchPointMap,V_initialTouchPointMap
matchedTemplate
T@"SBTouchTemplate",&,N,G_matchedTemplate,S_setMatchedTemplate:,V_matchedTemplate
matchedPolygon
T@"SBPolygon",&,N,G_matchedPolygon,S_setMatchedPolygon:,V_matchedPolygon
failedRecognitionAttempts
TQ,N,G_failedRecognitionAttempts,S_setFailedRecognitionAttempts:,V_failedRecognitionAttempts
trackingTouchCount
TQ,N,G_trackingTouchCount,S_setTrackingTouchCount:,V_trackingTouchCount
cumulativeMotion
Td,N,G_cumulativeMotion,S_setCumulativeMotion:,V_cumulativeMotion
cumulativeMotionEnvelope
Td,N,G_cumulativeMotionEnvelope,S_setCumulativeMotionEnvelope:,V_cumulativeMotionEnvelope
smoothedIncrementalMotion
Td,N,G_smoothedIncrementalMotion,S_setSmoothedIncrementalMotion:,V_smoothedIncrementalMotion
templates
T@"NSArray",&,N,V_templates
animationDistance
Td,N,V_animationDistance
requiredDirectionality
Tq,N,V_requiredDirectionality
transformAnalyzer
T@"UIGestureRecognizerTransformAnalyzer",R,N,V_transformAnalyzer
T@"<SBTouchTemplateGestureRecognizerDelegate>",W,D,N
sequenceNumber
TQ,R,N,V_sequenceNumber
cumulativePercentage
morphedCandidate
T@"SBPolygon",R,N,V_morphedCandidate
touchTemplate
T@"SBTouchTemplate",R,N,V_touchTemplate
SBUIAnimationSwitcherToAlertAnimationFinished
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIAnimationSwitcherDismissToRemoteAlert.m
SBDisableSwitcherRotationForAlertActivation
FolderTitleEditBG
FolderTitleClearButton
allowsEditing
TB,N,V_allowsEditing
fontSize
showingEditUI
TB,R,N,V_showingEditUI
SBBulletinWindowWillPresentBulletinNotification
SBBulletinWindowWillDismissBulletinNotification
SBBulletinPresentationAnimator
SBBulletinPresentationFrame
v24@?0@"NSObject<OS_dispatch_group>"8@?<v@?@?<v@?>>16
v16@?0@"UITapGestureRecognizer"8
v16@?0@"NCInteractiveNotificationHostViewController"8
v16@?0@"SBBannerContainerViewController"8
v16@?0@"NCBannerAccessoryHostViewController"8
v16@?0@"NCContentHostViewController"8
CKBBActionIdentifierReply
T@"<SBBannerContextViewControllerDelegate>",W,N,V_delegate
backgroundImage
T@"UIImage",&,N,V_backgroundImage
bannerContextView
T@"SBBannerContextView",R,N,V_bannerContextView
T@"UIView",R,N,V_backgroundView
canPullDown
pulledDown
TB,R,N,GisPulledDown,V_pulledDown
showsKeyboard
todayViewController
T@"SBDashBoardTodayViewController",&,N,V_todayViewController
-[SBPasscodeEntryAlertView setPasscodeViewsToVisible:animated:completion:]_block_invoke
passcodeLockView
T@"UIView<SBUIPasscodeLockView>",R,N
T@"<SBPasscodeEntryAlertViewDelegate>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBMainDisplaySystemGestureManager.m
Creating this class requires a main display
systemGesturesAllowed
_multitaskingGesturesEnabled
multitasking-gestures
multitaskingGesturesEnabled
TB,N,G_isMultitaskingGesturesEnabled,S_setMultitaskingGesturesEnabled:,V_multitaskingGesturesEnabled
Logout Progress Alert
name1
reason1
name2
reason2
com.apple.MobileSafari
com.apple.MobilePhone
logoutProgressAlert
T@"SBLogoutProgressAlertViewController",&,N,V_logoutProgressAlert
remainingApplications
T@"NSArray",C,N,V_remainingApplications
remainingBlockingTasks
T@"NSDictionary",&,N,V_remainingBlockingTasks
Dismiss Emergency Call
blah
Block workspace queue for 2 seconds
Test Recipe
T@"NSTimer",&,N,V_blockTimer
queueLock
T@"FBWorkspaceEventQueueLock",&,N,V_queueLock
__none
testRecipeClassName
T@"NSString",&,V_testRecipeClassName
windowAlpha
Td,V_windowAlpha
preventLockover
TB,V_preventLockover
currentIconStateURL
T@"NSURL",&,N,V_currentIconStateURL
desiredIconStateURL
T@"NSURL",&,N,V_desiredIconStateURL
~/Library/SpringBoard/IconState.plist
~/Library/SpringBoard/DesiredIconState.plist
Occlude All the Things
-[SBFullScreenOcclusionTestRecipe init]
-[SBFullScreenOcclusionTestRecipe handleVolumeIncrease]
SBFullScreenOcclusionTestRecipe
Siri Present/Dismiss Duration
Siri Dismiss Duration (over app)
Spotlight Non-interactive Animation
Spotlight
System Animations
Tf,N,V_assistantAnimationDuration
Tf,N,V_assistantDismissAnimationDurationOverApp
Tf,N,V_spotlightNoninteractiveAnimationDuration
NO_NAME
MEID:
IMEI:
CSN:
ICCID:
REGULATORY_INFO_BUTTON_LABEL
Regulatory
regulatoryInfoButton
T@"UIButton",R,N,V_regulatoryInfoButton
BSNowPlayingActivationMilestone
Timed out
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBIconIndexMutableList.m
%@: no containing nodes known for removedNodeIdentifier=%@
%@: previous containment of removedNodeIdentifier=%@ in node=%@ was unknown
 -> 
  |  
       
Index: 
T@"<SBIconIndexMutableListObserver>",W,N,V_observer
SBSuggestedAppChangedNotification
SBNewSuggestedAppKey
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAppSuggestionManager.m
we're activating an app for continuity that didn't come from a source we know about
T@"UABestAppSuggestion",R,N,V_appSuggestion
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAppContainerViewController.m
[entity isApplicationEntity]
cannot be configured for a different application
sceneIdentifier
T@"NSString",C,N,V_sceneIdentifier
T@"SBAppView",R,N
currentState
T@"NSDictionary",C,N,V_currentState
desiredState
T@"NSDictionary",C,N,V_desiredState
SBIconModelStoreDomain
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBPlaceholderIcon.m
the icon must have a nodeIdentifier
Placeholder: 
the icon must have a valid representation
Placeholder: Grabbed
Placeholder: Empty
DestinationHole
maximumIntervalBetweenPresses
Td,N,V_maximumIntervalBetweenPresses
LockScreenChargingBatteryMask
-RTL
LockScreenInternalChargingBatteryMask
LockScreenExternalChargingBatteryMask
batteryVisible
desiredVisibilityDuration
alignmentPercent
Td,N,V_alignmentPercent
LockScreenSmallChargingBolt
<SBRebootContext:%p - reason:'%@'; dark:%@>
SBQuietModeStateChangedNotification
T@"BBObserver",&,N,V_observer
quietModeEnabled
TB,R,N,GisQuietModeEnabled,V_quietModeEnabled
quietModeEnabledAndActive
TB,R,N,GisQuietModeEnabledAndActive,V_quietModeEnabledAndActive
quietModeState
TQ,R,N,V_quietModeState
SBAlertScene
T@"<SBAlertManagerObserver>",R,W,N,V_observer
flags
T{?=b1b1b1b1b1b1b1b1b1b1b1b1},R,N,V_flags
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAlertManager.m
screen cannot be nil
delegate cannot be nil
com.apple.springboard.alerts-%u%@-%d
No alert to activate
you can't switch the alertManager that an alert is tied to
No alert to deactivate
alertCount
cannot activate alert without a scene -> %@
FullscreenAlerts
alerts
alertWindow
T@"SBAlertWindow",&,N,V_alertWindow
deferredAlertWindow
T@"SBAlertWindow",&,N,V_deferredAlertWindow
T@"<SBAlertManagerDelegate>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkWorkspaceTransitionRequest.m
T@"SBStarkScreenController",&,N,V_screenController
SBCenterIconZoomDockFractionAnimatorReason
v28@?0@"SBIcon"8@"SBIconView"16B24
dockOffscreenFractionModifier
T@"<SBDockOffscreenFractionModifying>",&,N,V_dockOffscreenFractionModifier
T@"UIView",R,N,V_zoomView
cameraPosition
T{CGPoint=dd},R,N,V_cameraPosition
T@"SBCenterZoomSettings",&,D,N
com.apple.demo-settings
shouldLockIconsInStoreDemoMode
LockIcons
T@"<SBUIFullscreenAnimationViewDelegate>",W,N,V_delegate
TB,R,N,V_animating
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkAppToAppWorkspaceTransactionFactory.m
Going from an impersonated app and an impersonated app is unsupported at this time.
T@"SBApplication",R,N,V_app
SBUIPluginHost restore orientation (not locked, no app)
SBUIPluginHost restore orientation (not locked, has app)
SBUIPluginHost restore orientation (locked)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIPluginHost.m
implement me
it makes no sense to call this without a completion
pluginController
T@"SBUIPluginController",&,V_plugin
authController
T@"SBFUserAuthenticationController",&,N,G_authController,S_setAuthController:,V_authController
isPluginVisible
TB,R
isPluginRunning
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDashBoardFullscreenNotificationViewController.m
_request != nil
primary
secondary
dismiss
silence
_request == nil
NCNotificationRequest
request != nil
[request isKindOfClass: NCNotificationRequestClass]
T@"NCNotificationRequest",R,N,V_request
AWAY_ALERT_ALTERNATE_LABEL_FORMAT
bulletinItem
T@"SBAwayBulletinListItem",&,N,V_bulletinItem
Alarm / Timer
Alarm
Timer Done
UILaunchImageSize
UILaunchImageOrientation
UILaunchImageMinimumOSVersion
UILaunchImageName
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBApplicationLaunchImageParameters.m
orientation=%li is not a valid interfaceOrientation
Portrait
minOS
size
defaultPNGName
T@"NSString",R,C,N,V_defaultPNGName
extension
T@"NSString",R,C,N,V_extension
minOSVersionString
T@"NSString",R,C,N,V_minOSVersionString
T{CGSize=dd},R,N,V_size
LockScreenSnapshot
HomeScreenSnapshot
ji56BO1mUeT7Qg9RO7Er9w
Aixt/MEN2O2B7f+8m4TxUA
B16@?0@"NSString"8
hiddenBundleIdentifiers
T@"NSArray",&,N,V_hiddenBundleIdentifiers
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_screenBounds
rowCount
columnCount
showsOEMIcon
TB,N,V_showsOEMIcon
SBDashBoardIsolatedViewControllerPresentedSomethingReason
SBDashBoardIsolatedViewControllerTextSelectionInteractionReason
SBDashBoardIsolatedViewControllerChangingModesReason
todayViewControllerDelegate
T@"<SBDashBoardTodayViewControllerDelegate>",W,N,V_todayViewControllerDelegate
pageController
T@"SBDashBoardPageViewController",W,N,V_pageController
iconLabelLegibility_gray
@"UIImage"32@?0^{CGImage=}8d16q24
@"SBIconLabelLegibilityImage"16@?0@"SBIconLabelImageParameters"8
parameters
T@"SBIconLabelImageParameters",R,C,V_parameters
SBAggregateLockStateDidChangeNotification
SBAggregateLockStateKey
PasscodeLocked
Blocked
<%@: %p; lockState = 0x%X (%@)>
Aggregate lock state changed: %@
 (added)
 (%@ added)
 (%@ removed)
result
showPasscode
hintFailureText
vibrates
jiggleLock
TQ,R,N,V_result
TB,R,N,V_showPasscode
vibrate
TB,R,N,V_vibrate
TB,R,N,V_jiggleLock
Failure
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBIconLabelImage.m
parameters cannot be nil
iconLabels_gray
iconLabels_color
slotLength (%zd) not large enough for %@ context with dimensions %@ @%fx for parameters=%@ -> precalculatedMaxSizes=(@%fx) %@ currentMaxSizes=(@%fx) %@
gray
@"SBIconLabelImage"16@?0@"SBIconLabelImageParameters"8
{maxSizeOffset=%@ parameters=%@}
T@"SBIconLabelImageParameters",R,C,N,V_parameters
maxSizeOffset
T{CGPoint=dd},R,N,V_maxSizeOffset
com.apple.springboard.nowplaying
T@"<SBLockScreenNowPlayingControllerDelegate>",W,N,V_delegate
Tq,R,N,V_currentState
DEPRECATED_32_BIT_APP_SECONDARY_NO_UPDATE
prefs:root=General&path=About/APPLICATIONS
DEPRECATED_32_BIT_APP_ACKNOWLEDGE
DEPRECATED_32_BIT_APP_TITLE
DEPRECATED_32_BIT_APP_BODY_NO_UPDATE
associatedDisplay
T@"SBApplication",W,N,V_associatedDisplay
manualDismissalHandler
T@?,C,N,V_manualDismissalHandler
animatePasscodePresentation
TB,N,V_animatePasscodePresentation
T@"<SBPasscodeEntryAlertViewControllerDelegate>",W,N,V_delegate
showEmergencyCallButton
TB,N,V_showEmergencyCallButton
TB,N,V_wantsToHandleItsOwnAnimation
com.apple.springboard.system-service-server
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSystemServiceServer.m
v16@?0@"NSData"8
v16@?0@"BSAction"8
biometricsDelegate
T@"<SBSystemServiceServerBiometricsDelegate>",W,N,V_biometricsDelegate
hardwareButtonDelegate
T@"<SBSystemServiceServerHardwareButtonDelegate>",W,N,V_hardwareButtonDelegate
T@"XBApplicationSnapshot",&,N,V_snapshot
snapshotImageView
T@"SBSwitcherSnapshotImageView",&,N,V_snapshotImageView
snapshotReferenceFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_snapshotReferenceFrame
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAppSwitcherSnapshotView.m
Use the class creation method
Orientation
Container Orientation
updateCrossfadeView
T@"SBZoomableCrossfadeView",&,N,V_updateCrossfadeView
TB,V_invalidated
statusBarLayoutFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_statusBarLayoutFrame
shouldTransitionToDefaultPng
TB,N,V_shouldTransitionToDefaultPng
<%@ %p: port=%u reason=%@>
T@"<SBAssertionDelegate>",W,N,V_delegate
SBLockScreenPluginWasDisabledNotification
v32@?0@"NSString"8@"SBLockScreenPlugin"16^B24
B16@?0@"SBLockScreenPlugin"8
SBLockScreenPluginContext
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBLockScreenPluginManager.m
[context isKindOfClass: SBLockScreenPluginContextClass]
LockScreenTestPlugin
delegateClass
activePlugin
displayedPlugin
plugins
T@"SBLockScreenPlugin",R,N,V_activePlugin
T@"SBLockScreenPlugin",R,N,V_displayedPlugin
T@"<SBLockScreenPluginManagerDelegate>",W,N,V_delegate
SBWorkspaceApplication
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDashBoardHostedAppViewController.m
app != nil
[app isKindOfClass: SBWorkspaceApplicationClass]
client requested
viewDidAppear
viewDidDisappear
DashBoard deactivated
resign active released
T@"<SBDashBoardHostedAppViewControllerDelegate>",W,N,V_delegate
slowPressDuration
isTimerRunning
slowPressTimer
T@"BSTimer",&,N,G_slowPressTimer,S_setSlowPressTimer:,V_slowPressTimer
Td,N,V_slowPressDuration
CarPlayRelockUIGlyph
RELOCK_UI_ALERT_MESSAGE
failedMesaUnlockAttempts
trigger
mesaUnlockBehaviorDelegate
T@"<SBMesaUnlockBehaviorDelegate>",W,N
T@"SBHomeHardwareButton",&,N,G_getHomeHardwareButton,S_setHomeHardwareButton:,V_homeHardwareButton
T@"SBMesaUnlockTrigger",&,N,G_trigger,S_setTrigger:,V_trigger
T@"SBLockScreenMesaSettings",R,N,G_mesaSettings,V_mesaSettings
T@"<SBMesaUnlockBehaviorDelegate>",W,N,V_mesaUnlockBehaviorDelegate
Simulate Scroll To Icon
itms-apps://itunes.apple.com/WebObjects/MZStore.woa/wa/docTypeLookup?uti=%@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBNoLocalApplicationAlertItem.m
NO_LOCAL_APPLICATION_TITLE
NO_LOCAL_APPLICATION_MESSAGE
NO_LOCAL_APPLICATION_APPSTORE
NO_LOCAL_APPLICATION_CANCEL
T@"NSURL",R,C,N,V_url
T@?,R,C,N,V_completion
SBLockOrientationForSpotlight
shouldBlurContent
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSearchEtceteraIsolatedViewController.m
viewClass must be a subclass of %@
can only change to a single SBSearchEtceteraViewControllerModes value that is included in supportedModes
Can't perform animations to a different mode if we aren't animating.
Can't proceed interactively to a different mode if we aren't animating.
_transitioningToChildViewController
T@"WGWidgetGroupViewController",&,N,G_todayViewController,S_setTodayViewController:,V_todayViewController
searchViewController
T@"SPUISearchViewController",&,N,G_searchViewController,S_setSearchViewController:,V_searchViewController
notificationListContainerViewController
T@"NCNotificationListContainerViewController",&,N,G_notificationListContainerViewController,S_setNotificationListContainerViewController:,V_notificationListContainerViewController
T@"SBNotificationCenterDestination",&,N,G_notificationCenterDestination,S_setNotificationCenterDestination:,V_notificationCenterDestination
navigationItem
T@"UINavigationItem",R,N
T@"SBSearchEtceteraLayoutView",R,&,N
T@"<SBSearchEtceteraIsolatedViewControllerAppearanceDelegate>",W,N,V_delegate
widgetGroupDelegate
T@"<WGWidgetGroupViewControllerDelegate>",W,N,V_widgetGroupDelegate
searchDelegate
T@"<SPUISearchViewControllerDelegate>",W,N,V_searchDelegate
defaultMode
TQ,N,V_defaultMode
defaultSearchViewPresentationSource
TQ,N,V_defaultSearchViewPresentationSource
defaultSearchViewDismissalReason
TQ,N,V_defaultSearchViewDismissalReason
widgetsBlurContent
TB,N,V_widgetsBlurContent
-[SBSceneManagerCoordinator init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSceneManagerCoordinator.m
v32@?0@"FBProcess"8Q16^B24
-[SBSceneManagerCoordinator _referenceForDisplay:creatingIfNecessary:]
-[SBSceneManagerCoordinator _sceneManagerForDisplay:creatingIfNecessary:]
attempting to access a manager that has been invalidated : manager=%@
the reference is dead but we thought we were retaining it : ref=%@
@"NSString"16@?0@"SBSceneManagerReference"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBCountedMap.m
creationBlock produced a value with a countedMapKey (%@) different than requested (%@)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/_SBSynchronizeOperation.m
Cannot add a task to a synchronize operation that has already completed or is currently executing.
humanReadableDescription
T@"NSString",&,N,V_humanReadableDescription
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIAnimationZoomDownApp.m
T@"<SBLockScreenInfoOverlayDelegate>",W,D,N
DosiDoTransitionWindow
fromAppWantsLiveContent
TB,N,V_fromAppWantsLiveContent
forCommandTab
TB,N,V_forCommandTab
IPHOTO_LAUNCH_ALERT_TITLE_PREMIGRATION
IPHOTO_LAUNCH_ALERT_MESSAGE_PREMIGRATION
IPHOTO_LAUNCH_BUTTON_MIGRATE
photos-migrate-iphoto://
IPHOTO_LAUNCH_BUTTON_LEARN_MORE
http://support.apple.com/kb/HT6290
IPHOTO_LAUNCH_BUTTON_CANCEL
IPHOTO_LAUNCH_ALERT_TITLE_POSTMIGRATION
IPHOTO_LAUNCH_ALERT_MESSAGE_POSTMIGRATION
offersMigration
TB,N,V_offersMigration
@"NSString"24@?0@"NSValue"8@"_UISettings"16
@"NSValue"24@?0@"NSString"8@"_UISettings"16
Backlight Fade Duration
backlightFadeDuration
Backlight Fade In Speed Multiplier
speedMultiplierForFadeIn
Lift-to-Wake Speed Multiplier
_speedMultiplierForLiftToWake
Backlight Fades
Date In Animation
dateInSettings
Overlay In Animation
overlayInSettings
Content In Animation
contentInSettings
Wallpaper In Animation
wallpaperInSettings
Wallpaper In Rect
wallpaperInContentsRect
Date Out Animation
dateOutSettings
Overlay Out Animation
overlayOutSettings
Wallpaper Out Animation
wallpaperOutSettings
Wallpaper Out Rect
wallpaperOutContentsRect
Undim
Screen Dim/Undim Animation
Td,N,V_backlightFadeDuration
Td,N,V_speedMultiplierForFadeIn
speedMultiplierForLiftToWake
Td,N,V_speedMultiplierForLiftToWake
T@"SBAnimationSettings",&,N,V_dateInSettings
T@"SBAnimationSettings",&,N,V_overlayInSettings
T@"SBAnimationSettings",&,N,V_contentInSettings
T@"SBAnimationSettings",&,N,V_wallpaperInSettings
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_wallpaperInContentsRect
T@"SBAnimationSettings",&,N,V_dateOutSettings
T@"SBAnimationSettings",&,N,V_overlayOutSettings
T@"SBAnimationSettings",&,N,V_wallpaperOutSettings
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_wallpaperOutContentsRect
noAnimate
animationDurationForOthersSuspension
homeScreenSnapshot
suspended
eventOnly
safe
animateWithoutPNG
animatePreviousWithoutPNG
preferSceneSnapshots
animateLiveContentASAP
animationDelay
reverseAnimation
sourceIdentifier
annotation
launchOptions
launchImageName
userLaunchEventTime
classicOverride
appLink
appLinkState
escapingAppLink
breadcrumbSourceIdentifier
breadcrumbNavigationAction
spotlightVisible
todayViewVisible
bannerLongLookVisible
processLaunchIntent
fromHomeScreen
fromContinuity
fromBanner
fromBulletinList
fromAssistant
fromStark
fromCC
fromIconWithLeafIdentifier
fromLockScreenBottomCorner
fromSystemGesture
fromSpotlight
fromBreadcrumb
fromCommandTab
fromSystemServiceRequest
fromTrustedSystemServiceRequest
fromShortcutItem
fromWidget
fromNotificationContentExtension
asNowPlaying
launchForegroundUnderLockScreen
ignoringOcclusionsReason
mainSceneDisplayItem
siriContinuityAppSuggestion
pinSideApp
resizeSideAppNarrow
resizeSideAppLarge
dontResetSwitchAppList
animateOthersSuspension
dimScreen
fromDeactivatingAlert
asPanel
animationStartForOthersSuspension
animationDuration
APP_BLACKLISTED_TITLE_WITH_NAME_FORMAT
APP_BLACKLISTED_BODY
APP_BLACKLISTED_CANCEL
NotificationList
SBLockScreenNotificationListControllerBulletinQueue
-[SBLockScreenNotificationListController prepareForTeardown]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBLockScreenNotificationListController.m
B16@?0@"BBAction"8
bulletin removed
isCritical
sortDate
B16@?0@"SBAwayListItem"8
Fake iTunes notification #%ld
Hello.
com.apple.MobileStore
itms://?action=music
FakeBulletin%ld
Decline
Maybe
Accept
accept
%s sent to incorrect source(%p) -> %@
-[SBLockScreenNotificationListController newBannerViewForContext:]
T@"<SBLockScreenNotificationListDelegate>",W,N,V_delegate
hasAnyContent
TB,N,V_hasAnyContent
T@"SBLockScreenActionContext",&,N,V_actionContext
TB,R,N,V_quietModeEnabled
usingBanners
TB,R,N,GisUsingBanners
T@"SBLockScreenPlugin",&,N,V_activePlugin
touchesBeganBlock
T@?,C,N,V_touchesBeganBlock
touchesEndedBlock
T@?,C,N,V_touchesEndedBlock
SBOrientationLockForGrabber
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBGrabberTongue.m
use initWithDelegate:...
_invalidated
Can't install more than once
SideAppGrabber
Grabbers can only be installed on one edge
Unexpected State Transition
Td,N,V_overlayAlpha
showsSquareCorners
TB,N,V_showsSquareCorners
T@"SBIcon",R,N,V_icon
Td,N,V_brightness
Bulletin Tour
SBBulletinTourApplications
IconNewDot
SBNotificationsClearButtonCompositeCircleX
High
SBNotificationsClearButtonCircle
SBNotificationsClearButtonX
v24@?0^{CGContext=}8d16
%@-%@-%@-%lu-%lu
SBNotificationsClearButton
@"NSString"16@?0@"NSIndexPath"8
^{__CTRun=}40@?0Q8^{__CTRun=}16^q24^^{CGPoint}32
@"NSIndexPath"24@?0@"NSIndexPath"8^d16
graphicsQuality
Tq,R,N,V_graphicsQuality
clearButtonState
Tq,R,N,V_clearButtonState
(zoomOther) :
%i -> %i
%@ -> %@
<%@:%p transition=%@ %@ orientation=%@ : styleRequest=%@>
startStyleRequest
T@"UIStatusBarStyleRequest",C,N,V_startStyleRequest
startOrientation
Tq,N,V_startOrientation
endStyleRequest
T@"UIStatusBarStyleRequest",C,N,V_endStyleRequest
endOrientation
Tq,N,V_endOrientation
Ti,N,V_transition
zoomOther
TB,N,V_zoomOther
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIController+SBUIAnimationController.m
!snapshot || CGSizeEqualToSize([snapshot referenceSize], snapshotSize)
<%@:%p style=%i legacy=%i legibility=%i fgColor=%@>
fade-in
fade-out
persist
slide
SBSuspendingWallpaperForNotificationCenterReason
v16@?0@8
NC Reachability
T@"<SBNotificationCenterViewControllerDelegate>",W,N,V_delegate
suppressesNotificationUpdates
TB,N,GisSuppressingNotificationUpdates
contentViewAlpha
clippingInsets
T{UIEdgeInsets=dddd},N
contentFrame
grabberViewEnabled
TB,N,GisGrabberViewEnabled
showsBackground
backdropView
T@"_UIBackdropView",R,N
grabberView
T@"SBUIChevronView",R,N,V_grabberView
T@"UIPageControl",R,N,V_pageControl
visibleContentViewControllers
notificationCenterWithSearchViewController
T@"SBNotificationCenterWithSearchViewController",&,N,V_notificationCenterWithSearchViewController
Block added after operation started or finished.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSystemGestureManager.m
use initWithDisplay:
v32@?0@"NSNumber"8@"UIGestureRecognizer"16^B24
Trying to add a system gesture with type %@, but we already have one: %@
v32@?0@8@"UIGestureRecognizer"16^B24
_display
_recognizingTouchGestures
_typeToGesture
_typeToState
-[SBSystemGestureManager _systemGestureChanged:]
anyTouchGestureRunning
TB,R,N,GisAnyTouchGestureRunning
systemGesturesDisabledForAccessibility
TB,N,GareSystemGesturesDisabledForAccessibility,V_systemGesturesDisabledForAccessibility
gesturesPreventedByStylus
T@"NSSet",&,N,V_gesturesPreventedByStylus
Show NotificationCenter
Dismiss Banner
Show ControlCenter
Suspend App
Switcher Slide Up
Switch App
Scene Resize
Side App Reveal
Side App Grabber Reveal
Side App Overlay Dismiss
Side Switcher Reveal
Side Switcher Grabber Press
Switcher Force Press
CarPlay Banner Dismiss
Scroll DashBoard
Content Cancel Scroll DashBoard
Edge Scroll DashBoard
Horizontal Cancel Scroll DashBoard
com.apple.springboard.wallpaper-server
T@"<SBWallpaperServerDelegate>",W,N,V_delegate
Widget List View
v32@?0@"UIWindow"8Q16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSceneBackgroundedStatusAssertion.m
must invalidate before releasing
-[SBSceneBackgroundedStatusAssertion invalidate]
scenes
T@"NSSet",R,C,N,V_scenes
SBSearchControllerVisibilityDidChange
today
notifications
pull down from home screen
partial pull down
today view
bread crumb
cancel button
tap in empty area
swipe up
swipe back
device slept
AWAY_LOCK_LABEL_SHORT
T@"NSString",&,N,V_identifier
lockLabel
T@"NSString",&,N,V_lockLabel
shortLockLabel
T@"NSString",&,N,V_shortLockLabel
action
T@?,C,N,V_action
requiresUIUnlock
TB,N,V_requiresUIUnlock
deactivateAwayController
TB,N,V_deactivateAwayController
canBypassPinLock
TB,N,V_canBypassPinLock
requiresAuthentication
TB,N,V_requiresAuthentication
bulletin
T@"BBBulletin",W,N,V_bulletin
hasCustomUnlockLabel
T@"NSString",&,D,N
T@?,C,D,N
T@"BBBulletin",W,D,N
Ti,D,N
BulletinListCriticalIcon
+[SBUISound(SBUtilities) soundWithBBSound:]
Trigger Raise to Listen gesture
bulletinID
T@"NSString",C,D,N
B32@?0@"BBBulletin"8Q16^B24
Meeting #%lu
Invitation from Jane Appleseed, Today
3 PM to 4 PM
Invitation from Jane Appleseed, Today 3 PM to 4 PM
BannerVIPAccessory
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBBulletinBannerController.m
-[SBBulletinBannerController newBannerViewForContext:]
SBQuietModeStatusChangedNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBBulletinSoundController.m
The queue should always be empty if the window controller is no longer busy
@"<FBSceneClientProvider>"8@?0
@"FBSSceneClientSettings"8@?0
Successfully added a external display scene update for app: %@
Failed to add an external display scene update for app: %@ (process didn't exist)
v20@?0@"SBApplication"8B16
This app should have a foreground scene: %@
These apps should have a background scene: %@
T@"<SBReusableViewMapDelegate>",W,N,V_delegate
manifestHashes
com.apple.springboard.carditemscontroller
walletNotificationSource
T@"SBWalletNotificationSource",&,N,V_walletNotificationSource
Temperature
IPHONE_TOO_HOT
THERMAL_ALERT_STRING
DASHBOARD_BLOCK_EMERGENCY_BUTTON
TemperatureCold
SBDashBoardBackgroundView
T@"BSUIBackdropView",R,N,V_backdropView
TB,R,N,GisTransitioningBackgroundStyle,V_transitioning
-[SBLockScreenBounceAnimator dealloc]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBLockScreenBounceAnimator.m
main-screen-width
- MG is reporting the main screen width as %f
- MG has no value for the width
main-screen-height
- MG is reporting the main screen height as %f
- MG has no value for the height
- CA is reporting size: %@
UIScreen bounds are empty: %@, GS is currently reporting point size: %@ scale: %f - extraLogging: %@
shouldBeginBlock
T@?,C,V_shouldBeginBlock
prepareBlock
T@?,C,V_prepareBlock
translateBlock
T@?,C,V_translateBlock
canceledBlock
T@?,C,V_canceledBlock
completedBlock
T@?,C,V_completedBlock
T@"SBBounceSettings",&,N,V_settings
T@"<SBPresentingDelegate>",W,N,V_presentingDelegate
SBLockToAppStatusBarAnimator
-[SBLockToAppStatusBarAnimator animateStatusBarFromLockToHome]_block_invoke
SBBiometricEventTimestampNotificationKeybagUnlock
SBBiometricEventTimestampNotificationFingerOn
SBBiometricEventTimestampNotificationTryAgain
SBBiometricEventTimestampNotificationPrearmMatch
SBScreenIsOn
com.apple.fingerprint.sb.fingerprintUnlocks
fingerOnTime
TQ,N,V_fingerOnTime
fingerOnWithScreenOn
TB,N,V_fingerOnWithScreenOn
keybagUnlockTime
TQ,N,V_keybagUnlockTime
/System/Library/PrivateFrameworks/BiometricKit.framework/BiometricKit
ScreenWillTurnOn
TryAgain
KeybagUnlock
UnlockAnimationStart
PrearmMatch
TQ,N,V_dockEdge
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIAnimationControllerAnimator.m
animationController
T@"SBUIAnimationController",R,W,N,V_animationController
GroupAvatar
LOGOUT_BUTTON_TITLE
button
T@"SBDashBoardVibrantWallpaperButton",R,N
parentDestination
T@"<NCNotificationAlertDestination><NCNotificationViewControllerDelegatePrivate>",W,N,V_parentDestination
com.apple.switcher.dismiss.host
com.apple.switcher.dismiss.noRotation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIDismissSwitcherAnimationController.m
Animation thinks that it has already crossfaded
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBApplication+DefaultImage.m
Scene ID argument is required for getting a snapshot image.
activation settings
url settings
suspension settings
SBLastBundleSequenceNumberForLaunchImageIngestion
SBLastIngestorVersionForLaunchImageIngestion
launchImageBaseName != nil
(self BEGINSWITH %@) AND (pathExtension ==[c] 'png')
@(\d)x
~(ipad|iphone)
-(%@)
-(\d{3,4})w
-(\d{3,4})h
-([A-Za-z][A-Za-z\-\+0-9\.]+)
ipad
~iphone
~ipad
CGFloat SBScreenScale()
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBCommon.m
Reading screen scale static before it has been initialized
CGPoint SBScaledPoint(CGPoint)
CGSize SBScaledSize(CGSize)
@%ldx
void SBSetShouldRasterizeLayer(CALayer *__strong, BOOL)
Library/SpringBoard
UIColor *SBComposedColor(UIColor *__strong, UIColor *__strong, CGBlendMode)
SBComposedColor does not support blend mode %d. But you can add it!
com.apple.backboard.proximity.changed
SBSignificantTimeChangedNotification
SBSignificantTimeChangeWasMidnight
SBCurrentLocaleDidChangeNotification
SBSetupBuddyCompletedNotification
SBFrontmostDisplayChangedNotification
SBIAPExtendedModeChangedNotification
SBPasscodePolicyChangedNotification
SBApplicationsRegisteredForVolumeButtonEventsChangedNotification
SBApplicationsRegisteredForLockButtonEventsChangedNotification
SBUIAppSwitcherRevealedNotification
SBUIAppSwitcherObscuredNotification
SBHomescreenDisplayChangedNotification
SBNotificationCenterWillAppearNotification
SBNotificationCenterDidDisappearNotification
SBWorkspaceWillSleepNotification
SBWorkspaceDidWakeFromSleepNotification
SBFrontmostDisplayKey
SBSignificantAnimationWillBeginNotification
SBSignificantAnimationDidEndNotification
SBSpotlightWillAppearInHomeScreenViewNotification
SBSpotlightWillDismissInHomeScreenViewNotification
SBSpotlightDidAppearInHomeScreenViewNotification
SBSpotlightDidDismissInHomeScreenViewNotification
SBNoteSignificantAnimationDidEnd
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBNotifications.m
__SignificantAnimationCount != 0
q24@?0@"SBDashBoardViewControllerBase"8@"SBDashBoardViewControllerBase"16
layoutID
presentingContent
isolatingContent
isolationViewController
presentedViewControllers
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDashBoardPresentationViewController.m
_isolatedPresentationViewController == nil
SBDashBoardPresentationViewController: content transition completion was not called with missing signals: %@
v16@?0@"<BSBlockSentinelSignalContext>"8
Dismissing: %@
PresentationAggregation
Presenting: %@
hasContent
TB,R,N,GhasContent
TB,R,N,GisPresentingContent
contentViewControllers
T@"NSArray",R,C,N,V_contentViewControllers
T@"NSArray",R,C,N,V_activeContentViewControllers
T@"UIImage",R,N
usesNonuniformScaling
TB,N,V_usesNonuniformScaling
hasOpaqueContents
TB,N,V_hasOpaqueContents
v32@?0@"UIView"8Q16^B24
currentPageIndex
TQ,N,V_currentPageIndex
visiblePageRange
T{_NSRange=QQ},N,V_visiblePageRange
T@"NSArray",C,N,V_pageViews
lineAlpha
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIStaticAnimationController.m
the activating app must be valid -> app=%@
DON'T DO IT, MAN
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDashBoardViewControllerBase.m
appearanceID != nil
[appearanceID isKindOfClass: NSStringClass]
role != SBDashBoardRegionRoleNone
[self isViewLoaded]
_isolatingViewController == nil
UIViewController
[viewController isKindOfClass: UIViewControllerClass]
B16@?0@"UIViewController"8
childViewControllers
isolatingViewController
regionProviders
TB,R,N,GisIsolatingContent
T@"SBDashBoardViewControllerBase",R,N
T@"UIViewController",R,N,V_isolatingViewController
TB,R,N,GisPresentation,V_isBeingPresented
disappeared
TB,R,N,GisDisappeared
kitPresentedViewController
T@"UIViewController",R,N
T@"_UILegibilitySettings",R,N,V_legibilitySettings
T@"<SBDashBoardViewPresenting>",W,N,V_presenter
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSceneLayoutTransitionAnimationController.m
v32@?0@"SBWorkspaceTransitionRequest"8@"BSAnimationSettings"16@?<v@?B>24
%s is not a valid initializer. You must call -[%@ initWithTransitionContextProvider:layoutController:animationSettings:animationBlock:].
-[SBSceneLayoutTransitionAnimationController initWithWorkspaceTransitionRequest:]
supportedInterfaceOrientations
TQ,N,V_supportedInterfaceorientations
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBActiveInterfaceOrientationFollowingWindow.m
SBActiveInterfaceOrientationFollowingWindow requires its own root view controller.
rootVCSupportedInterfaceOrientations
passesTouchesThrough
TB,N,V_passesTouchesThrough
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBCarDisplaySceneManager.m
must have a delegate by the time this is called
carDisplayDelegate
T@"<SBCarDisplaySceneManagerDelegate>",W,N,V_carDisplayDelegate
fromApp = %@
toAlert = %@
T{CGSize=dd},D,N
T@"UIFont",&,D,N
Td,D,N
Tq,D,N
T@"UIColor",&,D,N
T{UIEdgeInsets=dddd},D,N
Animation Curve
Ease In/Out
Custom
@24@?0@8@"SBAnimationCurveSettings"16
.curve
curve
.controlPoint1
controlPoint1
.controlPoint2
controlPoint2
%K == %d
Control Point 1
Control Point 2
Curve
TQ,N,V_curve
T{CGPoint=dd},N,V_controlPoint1
T{CGPoint=dd},N,V_controlPoint2
@24@?0@8@"SBAnimationSettings"16
Basic
Spring
animationType == %d
animationType
Duration
@24@?0@"NSNumber"8@"SBAnimationSettings"16
Calculated Duration
calculatedDuration
@"NSString"24@?0@8@"SBAnimationSettings"16
Td,N,V_calculatedDuration
Tq,N,V_animationType
Td,N,V_duration
speed
Td,N,V_speed
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAppViewController.m
AppViewController must be explicitly invalidated before it can deallocate.
Something changed the app's (%@) foreground status out from underneath us (current mode: %@, window: %@).
[[sceneSettings ignoreOcclusionReasons] containsObject:_identifier]
Cannot create an app view on an invalidated appViewController: %@
Current mode must be live.
Cannot activate an application on an invalidated appViewController: %@
scene manager must exist
v24@?0@"SBApplicationSceneUpdateTransaction"8^B16
orientationWrapperView
T@"SBOrientationTransformWrapperView",&,N,V_orientationWrapperView
T@"<SBAppViewControllerDelegate>",W,N,V_delegate
T@"NSString",R,C,N,V_bundleIdentifier
automatesLifecycle
TB,N,V_automatesLifecycle
requestedMode
Tq,N,V_requestedMode
Tq,R,N,V_currentMode
T@"SBAppView",R,N,V_hostedAppView
ignoresOcclusions
TB,N,V_ignoresOcclusions
T@"NSSet",&,N,V_actionsToDeliver
Badge count
com.apple.Test
Wipe Snapshot Manifest (most recent app)
MainWindowRotation
Home Screen is transitioning
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBHomeScreenViewController.m
reason must be valid
SBDeferringAlertActivationTillAnimationCompletesMilestone
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAppsToAlertWorkspaceTransaction.m
alertContext != nil
Don't activate already active alert
fromApps = %@
v32@?0@"SBWorkspaceApplication"8Q16^B24
alertActivationBlock
T@?,C,N,V_alertActivationBlock
NOTIFICATION_CENTER_MODE_ALL
notificationsViewController
T@"SBNotificationsViewController",R,N,V_notificationsViewController
modeViewController
T@"SBModeViewController",R,N,V_modeViewController
animationFinished
animationKeepAlive
lock
home
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBWorkspaceTransaction.m
use initWithTransitionRequest:
keepAliveForAsyncBlock
Request
com.apple.springboard.workspace.devicecoherencycheckfailed
clearsCompletionAsynchronously
TB,N,V_clearsCompletionAsynchronously
T@"SBWorkspaceTransitionRequest",R,N,V_transitionRequest
T@"SBSceneLayoutViewController",R,N,V_layoutController
suggestedAnimationController
T@"SBUIAnimationController",&,N,V_suggestedAnimationController
highlight-%.2fa-%.1fh
highlightAlpha
Td,R,N,V_highlightAlpha
highlightHeight
Td,R,N,V_highlightHeight
DismissToSwitcher
fromApps = %@
animation = %@
just stop already!
NewTransition
B32@?0@"SBWorkspaceApplication"8Q16^B24
AppToApp setting up animation to launcher
preventWhitePointAdaptationStrengthUpdateOnComplete
TB,N,V_preventWhitePointAdaptationStrengthUpdateOnComplete
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBIsolationTankWindow.m
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStartupTransitionToApp.m
SBLogoutProgressAlertViewController
T@"<SBLogoutProgressDataSource>",W,N,V_dataSource
T@"UMUser",R,N,V_user
/System/Library/PrivateFrameworks/GameCenter.framework/GameCenter
GKLocalPlayer
GKGame
ExistingAlertAnimationInProgress
AlertNoAnimateContextOverlapReason
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAlertToAppsWorkspaceTransaction.m
alertToDeactivate != nil
<%@:%p %i>
fromAlert = %@
AlertToApps beginning
AlertToApps beginning, refresh for alert
AlertToApps did complete
unscatterWithoutController
AlertToApps vending animation to SpringBoard
AlertToApps deactivating alert
deactivateAfterNextLaunch
TB,N,V_deactivateAfterNextLaunch
T@"SBWorkspaceAlert",R,N,V_alert
inlayContainerView
T@"UIView",&,N,V_inlayContainerView
modal
TB,N,GisModal,V_modal
T@"SBBannerContextView",W,N,V_bannerView
T@"UIView",W,N,V_backgroundView
inlayView
T@"UIView",W,N,V_inlayView
maximumHeight
Td,N,V_maximumHeight
highlighted
TB,N,V_highlighted
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDefaultBannerView.m
expected item to be subclass of SBBulletinBannerItem
SpringBoard SBAlertItem Tour
SBHomeScreenNagAlert
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAlertToAlertWorkspaceTransaction.m
type = %@
activatingAlert
T@"SBWorkspaceAlert",&,N,V_activatingAlert
deactivatingAlert
T@"SBWorkspaceAlert",&,N,V_deactivatingAlert
TB,N,V_activation
T@"SBUIAnimationController",&,N,V_animation
appResizeGesture
SpeculativeResize
Began speculative resize to width: %@
Gesture finished with state: %li, region: %@, distance traveled: %f, number of touches: %lu, final action: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAppResizeGestureWorkspaceTransaction.m
Already performing final resize action!
FinalResizeAction
v40@?0@"SBWorkspaceTransitionRequest"8d16d24@"BSAnimationSettings"32
Already running a workspace transaction!
layoutViewController
T@"SBMainDisplaySceneLayoutViewController",R,N,V_layoutViewController
T@"SBLayoutElementViewController",R,N,V_primaryLayoutElementController
sideLayoutElementController
T@"SBLayoutElementViewController",R,N,V_sideLayoutElementController
appDeactivationAssertion
T@"FBUIApplicationSceneDeactivationAssertion",R,N,V_appDeactivationAssertion
resizeUIManager
T@"SBMainDisplaySceneLayoutResizeUIManager",&,N,V_resizeUIManager
lastResizeGestureRegion
TQ,N,V_lastResizeGestureRegion
currentWorkspaceTransaction
T@"SBMainWorkspaceTransaction",&,N,V_currentWorkspaceTransaction
currentWorkspaceTransactionStartDate
T@"NSDate",C,N,V_currentWorkspaceTransactionStartDate
resizingSpeculatively
TB,N,GisResizingSpeculatively,V_resizingSpeculatively
hasResizedSpeculatively
TB,N,V_hasResizedSpeculatively
slidingOffOverlaySideApp
TB,N,GisSlidingOffOverlaySideApp,V_slidingOffOverlaySideApp
finishingWithOverlaySideAppDismissal
TB,N,GisFinishingWithOverlaySideAppDismissal,V_finishingWithOverlaySideAppDismissal
lastGestureWasFullResizeGesture
TB,N,V_lastGestureWasFullResizeGesture
longPressPinTimer
T@"NSTimer",&,N,V_longPressPinTimer
pinUnpinTapTimer
T@"NSTimer",&,N,V_pinUnpinTapTimer
performingFinalAction
TB,N,GisPerformingFinalAction,V_performingFinalAction
pendingFinalActionCount
TQ,N,V_pendingFinalActionCount
currentGestureIdentifier
TQ,N,V_currentGestureIdentifier
<%@: %p, %@, %@>
elementViewController
T@"SBLayoutElementViewController",R,N,V_elementViewController
elementViewSize
T{CGSize=dd},R,N,V_elementViewSize
half-and-half (stretch to narrow)
narrow (stretch to half-and-half)
slide primary off
slide side off
will suspend primary
will suspend side
suspend primary
suspend side (pinned)
suspend side (overlay)
resize side to half
resize side to narrow
pin side
unpin side
unsupported pin side
SBLiveIconActiveDisplayChanged
, %@
<%@: %p; pause causes: %@>
windowless
appLaunch
controlCenter
iconInstructed
recycled (no icon)
significantAnimation
spotlightActivation
notificationCenter
SBOrientationLockForSwitcherGesture
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBMainSwitcherGestureCoordinator.m
use initWithMainSwitcherController
Force Press Gesture Began but I'm still tracking an old gesture with this transaction: %@
T@"<SBLockOverlayViewControllerDelegate>",W,N,V_delegate
shouldBeHidden
T@"SBLockOverlayViewController",R,N,V_viewController
TQ,R,N,V_priority
activationBlock
T@?,C,N,V_activationBlock
deactivationBlock
T@?,C,N,V_deactivationBlock
interval
External SBAlertItem Tour
BIG BROTHER
This is a carrier SMS
A sample SMS message for your testing needs
Jane Appleseed
iMessage
A subtly different sample SMS message for your testing needs
+12025551234
SpringTest
AFPreferencesSupportedLanguages
initAFPreferencesSupportedLanguages
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBClientAlertItemTestRecipe.m
softLinkAFPreferencesSupportedLanguages
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
AssistantServicesLibrary
frameworkLibrary
CKCarrierSMSAlertItem
initCKCarrierSMSAlertItem
classCKCarrierSMSAlertItem
/System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
ChatKitLibrary
CKMessageAlertItem
initCKMessageAlertItem
classCKMessageAlertItem
CMASBBAlertItem
initCMASBBAlertItem
classCMASBBAlertItem
MMSDelayedDownloadAlertItem
initMMSDelayedDownloadAlertItem
classMMSDelayedDownloadAlertItem
MMSInformationMissingAlertItem
initMMSInformationMissingAlertItem
classMMSInformationMissingAlertItem
MNThermalAlertItem
initMNThermalAlertItem
classMNThermalAlertItem
/System/Library/SpringBoardPlugins/MapsLockScreen.lockbundle/MapsLockScreen
MapsLockScreenLibrary
WFBTSSPAlertItem
initWFBTSSPAlertItem
classWFBTSSPAlertItem
/System/Library/SpringBoardPlugins/WiFiPicker.servicebundle/WiFiPicker
WiFiPickerLibrary
WFWiFiDontAskAlertItem
initWFWiFiDontAskAlertItem
classWFWiFiDontAskAlertItem
WFWiFiErrorAlertItem
initWFWiFiErrorAlertItem
classWFWiFiErrorAlertItem
WFWiFiIsEnterpriseAlert
initWFWiFiIsEnterpriseAlert
classWFWiFiIsEnterpriseAlert
WFWiFiPasswordAlertItem
initWFWiFiPasswordAlertItem
classWFWiFiPasswordAlertItem
WFWiFiTrustAlertItem
initWFWiFiTrustAlertItem
classWFWiFiTrustAlertItem
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBRelaunchAppWorkspaceTransaction.m
[app boolForProcessSetting:kSBProcessSettingRelaunchAfterExiting] || [app boolForProcessSetting:kSBAppActivationSettingSuspended]
!IS_APP_LAUNCHER(app)
ApplicationRelaunchUnderAlert
relaunchSuspended = %@
willBeOccluded = %@
animation = %@
T@"SBStarkScreenController",&,N,V_starkScreenController
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSpringBoardApplicationIcon.m
This icon can only be created on iPad
COMMAND_TAB_SPRINGBOARD_DISPLAY_NAME
SpringBoardAppIconiPadLarge2x
SpringBoardAppIconiPad2x
tell in-call alert to end call for lock button press
SBInCallAlertManager: waiting for prepareForActivationWithContext:completion: from reactivateAlertForLockButtonPress
inform in-call alert of activity continuation
v16@?0@"SBUIRemoteAlertButtonActionResponse"8
currentActiveInCallAlert
T@"SBRemoteAlertAdapter",R,N,V_currentActiveInCallAlert
SBDisplayBannerSuppressionChangedNotification
stateSettings
T@"SBStateSettings",&,N,V_stateSettings
activationSettings
T@"SBActivationSettings",&,N,V_activationSettings
deactivationSettings
T@"SBDeactivationSettings",&,N,V_deactivationSettings
processSettings
T@"SBProcessSettings",&,N,V_processSettings
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBActivateAppUnderLockScreenWorkspaceTransaction.m
Must have a lock screen controller provided.
LaunchUnderLock
T@"<SBMesaUnlockTriggerDelegate>",W,N,V_delegate
SBTriggeredByMenu
SBAudioRouteType
SBHeadsetConnected
SBWaitingForButtonUp
SBResizeAppGesture
SBRevealSideSwitcherGesture
SBRevealSideAppGesture
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBMainDisplaySceneLayoutGestureManager.m
use initWithSceneLayoutViewController:
Must have side app to activate side switcher interactively.
Must have side switcher view controller to activate interactively.
resizeGestureRecognizer
T@"SBSceneResizeSnakebiteGestureRecognizer",R,N,V_resizeGestureRecognizer
resizeGestureTransaction
T@"SBAppResizeGestureWorkspaceTransaction",&,N,V_resizeGestureTransaction
sideSwitcherPressGestureRecognizer
T@"UILongPressGestureRecognizer",R,N,V_sideSwitcherPressGestureRecognizer
sceneViewController
T@"SBMainDisplaySceneLayoutViewController",R,N,V_sceneViewController
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBLockScreenToAlertWorkspaceTransaction.m
This transaction can only handle deactivating a lockscreen.
T@"SBLockScreenPlugin",R,&,N,V_plugin
T@"<SBLockScreenEmergencyCallViewControllerDelegate>",W,N,V_delegate
gridImages
numberOfCells
numberOfColumns
numberOfRows
America/Los_Angeles
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIStartupToHomescreenAnimationController.m
cannot have an app we're activating
com.apple.SpringBoard.buttons
AppResize
SceneResize
LockScreenHint
MotionGesture
Icon
Banner
Sound
UserSession
StatusBarish
Backlight
AlertItems
AlertItemStack
AlertItemUserNotifications
LiftToWake
Thermal
SystemGestureDetail
SystemGestureControlCenter
SystemGestureNotificationCenter
SystemGestureBannerDismiss
SystemGestureScrunch
SystemGestureAppSwitcher
SystemGestureSwitchApp
Home
Lock
Volume
main-screen-pitch
FBSystemAppScene
CGPoint SBConvertPointFromSceneSpaceToDeviceReferenceSpace(FBSScene *__strong, CGPoint)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBCoordinateSpaceConversionUtilities.m
Scene can't be of class FBSystemAppScene until we update their interface orientation accordingly!
CGPoint SBConvertPointFromDeviceReferenceSpaceToSceneSpace(FBSScene *__strong, CGPoint)
CGRect SBConvertRectFromSceneSpaceToDeviceReferenceSpace(FBSScene *__strong, CGRect)
CGRect SBConvertRectFromDeviceReferenceSpaceToSceneSpace(FBSScene *__strong, CGRect)
CGPoint SBConvertPointFromSceneSpaceToNormalizedSceneSpace(FBSScene *__strong, CGPoint)
CGPoint SBConvertPointFromNormalizedSceneSpaceToSceneSpace(FBSScene *__strong, CGPoint)
CGRect SBConvertRectFromSceneSpaceToNormalizedSceneSpace(FBSScene *__strong, CGRect)
CGRect SBConvertRectFromNormalizedSceneSpaceToSceneSpace(FBSScene *__strong, CGRect)
Homescreen Wallpaper Style Changer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAlertItemsObjectQueue.m
Cannot append nil to the queue.
Cannot prepend nil to the queue.
Trying to remove an object that is not in the queue.
objects
T@"NSMutableOrderedSet",&,N,V_objects
com.apple.springboard.synchronizeCloudCriticalData
FetchICloudAccount
Loading iCloud account data...
v16@?0@"NSObject<OS_dispatch_group>"8
FetchMDMProfiles
Fetching profiles...
com.apple.Accessibility
FetchICloudDefaults
Fetching data from iCloud...
%@.%@
v16@?0^{__CFDictionary=}8
MigrateSoundPreferences
Migrating sound preferences from com.apple.springboard to com.apple.preferences.sounds...
TB,R,D,N,GisComplete
startStyle
endStyle
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBWallpaperEffectView.m
SBWallpaperEffectView does not support style Hidden
v24@?0@"UIColor"8@"UIImage"16
T@"UIView<_SBFakeBlur>",&,N,V_blurView
grayscaleTintView
T@"UIView",&,N,V_grayscaleTintView
colorTintView
T@"UIView",&,N,V_colorTintView
transitionBlurView
T@"UIView<_SBFakeBlur>",&,N,V_transitionBlurView
transitionGrayscaleTintView
T@"UIView",&,N,V_transitionGrayscaleTintView
transitionColorTintView
T@"UIView",&,N,V_transitionColorTintView
maskImageView
T@"UIImageView",&,N,V_maskImageView
blurMaskingContainer
T@"UIView",&,N,V_blurMaskingContainer
tintMaskingContainer
T@"UIView",&,N,V_tintMaskingContainer
forcesOpaque
TB,N,V_forcesOpaque
SBWaitingForPreAnimationTasksMilestone
SBWaitingForPostAnimationTasksMilestone
SBAppWillBecomeForeground
SBAppDidBecomeForeground
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBToAppsWorkspaceTransaction.m
ToApps -performToAppStateCleanup
Subclass specified animation: %@.
Skipping animation.
No animation specified.
Unactivated additional transition request being replaced by another.
Current foreground transaction request can not perform additional background requests. (current = %@, requestedAdditional: %@)
-[SBToAppsWorkspaceTransaction _didComplete]
App repair completed. Success = %@.
(SpringBoard)
Activating Apps
Deactivating Apps
------ Will begin layout transition.
Performing layout transition now.
ToApps performing transition
------ Layout transition completed!
Retrying after voluntary exit of %@
we better have a follow-up transition
can't run this twice
App Repair
performing app repair
"%@" is being debugged
Animation will begin: %@
!!!! Animation began that we weren't tracking: %@
Animation did finish: %@
!!!! Animation completed that we weren't tracking: %@
toApplications
fromApplications
trackedProcesses
T@"NSSet",R,N,V_trackedProcesses
layoutTransaction
T@"SBSceneLayoutWorkspaceTransaction",R,N,V_layoutTransaction
numberOfPressesToTrigger
com.apple.springboard.lockButton.lockPressDuration
T@"SBLockHardwareButtonActions",&,N,V_buttonActions
gestureRecognizers
T@"NSSet",&,N,V_gestureRecognizers
buttonDownGestureRecognizer
T@"SBButtonDownGestureRecognizer",&,N,V_buttonDownGestureRecognizer
singlePressGestureRecognizer
T@"SBTapGestureRecognizer",&,N,V_singlePressGestureRecognizer
T@"SBLongPressGestureRecognizer",&,N,V_longPressGestureRecognizer
lockPressSequenceObserver
T@"SBPressSequenceObserver",&,N,V_lockPressSequenceObserver
sosTriggerObserver
T@"SBSOSTriggerObserver",&,N,V_sosTriggerObserver
sosGestureRecognizer
T@"SBLongPressGestureRecognizer",&,N,V_sosGestureRecognizer
loggingGestureRecognizer
T@"SBLongPressGestureRecognizer",&,N,V_loggingGestureRecognizer
commandTabHighlight
blurSettings
T@"_UIBackdropViewSettings",&,N,G_blurSettings,S_setBlurSettings:,V_blurSettings
backgroundBackdropView
T@"_UIBackdropView",&,N,G_backgroundBackdropView,S_setBackgroundBackdropView:,V_backgroundBackdropView
blurredBackgroundView
T@"UIView",&,N,G_blurredBackgroundView,S_setBlurredBackgroundView:,V_blurredBackgroundView
selectionSquareView
T@"UIImageView",&,N,G_selectionSquareView,S_setSelectionSquareView:,V_selectionSquareView
selectedIconView
T@"SBIconView",&,N,G_selectedIconView,S_setSelectedIconView:,V_selectedIconView
selectionXLayoutConstraint
T@"NSLayoutConstraint",&,N,G_selectionXLayoutConstraint,S_setSelectionXLayoutConstraint:,V_selectionXLayoutConstraint
T@"<SBCommandTabViewControllerDelegate>",W,N,V_delegate
In Call
In Workout
Recording
Tethering
In Video Conference
Screen Sharing
Navigation (Teal)
Navigation (Blue)
Assistant Eyes Free
Video Out
Hearing Aid Recording
Background Location
Emergency SOS
Style Override
styleOverride
exclusive
Shows When Foreground
showsWhenForeground
Status Bar Style Overrides
Ti,N,V_styleOverride
TB,N,V_exclusive
TB,N,V_showsWhenForeground
SBAppSwitcherRemoteAlertManagerAddedRemoteAlertNotification
SBAppSwitcherRemoteAlertManagerRemovedRemoteAlertNotification
SBAppSwitcherRemoteAlertManagerRemoteAlertKey
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStatusBarChangeAssertion.m
You cannot invoke this directly.
<%@:%p = reason:%@>
Jiggle Lock
Vibrate
Show Passcode
Wait Until Button Up
waitsUntilButtonUp
Failure Settings
TB,N,V_jiggleLock
TB,N,V_vibrate
TB,N,V_showPasscode
waitUntilButtonUp
TB,N,V_waitUntilButtonUp
First Failure
firstFailureSettings
Second Failure
secondFailureSettings
Third Failure
thirdFailureSettings
Fourth Failure
fourthFailureSettings
Fifth Failure
fifthFailureSettings
Count as Failure
passcodeRequiredEventsCountAsFailures
Flash Red
flashRedOnPasscodeRequiredEvents
Passcode Required events
Wait until button up
successFeedbackWaitsUntilButtonUp
Match events
Slow Press Duration (seconds)
Press Speed
Mesa Failure Settings
T@"SBLockScreenMesaFailureSettings",&,N,V_firstFailureSettings
T@"SBLockScreenMesaFailureSettings",&,N,V_secondFailureSettings
T@"SBLockScreenMesaFailureSettings",&,N,V_thirdFailureSettings
T@"SBLockScreenMesaFailureSettings",&,N,V_fourthFailureSettings
T@"SBLockScreenMesaFailureSettings",&,N,V_fifthFailureSettings
TB,N,V_passcodeRequiredEventsCountAsFailures
TB,N,V_flashRedOnPasscodeRequiredEvents
TB,N,V_successFeedbackWaitsUntilButtonUp
com.apple.SpringBoard.builtin.HomeScreen
hasSignificantMotionToBegin is NO because the dominantComponent is %d, expecting scale
<%@ %p; range: %@; lineWidth: %.1f>
TQ,N,V_index
range
T{_NSRange=QQ},N,V_range
Td,N,V_lineWidth
<%@ %p; %lu fragment(s)> %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBExternalDisplayWorkspaceTransitionRequest.m
-----
anchorPoint
T{CGPoint=dd},N
T@"SBRemoteAlertAdapter<SBRemoteAlert>",R,D,N
-[SBThermalController startListeningForThermalEvents]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBThermalController.m
-[SBThermalController captureWarningSuppressionAssertionWithPort:reason:]
ThermalLevel
WarningSuppressionAssertions
ThermalWarningUIAction: %{public}@
thermal cool down
 SBSuppressThermalWarning
ThermalWarningUISuppressed:%@
ThermalWarningUIDisplayed
ThermalUIAlertEnter
Tq,N,S_setLevel:,V_level
inSunlight
TB,R,N,GisInSunlight,V_inSunlight
com.apple.system.thermalsunlightstate
Very Cold
Moderately Cold
Mild
Severe
Critical
%@-%lu
com.apple.springboard.%@
SYSTEM_NOTIFICATION_HEADER
SBLockScreenNotificationListViewWillBeginDragging
v32@?0@"SBLockScreenNotificationCell"8Q16^B24
ALARM_SNOOZING
Snoozing:
PassbookCell
SnoozedAlarmCell
BulletinCell
SystemAlertCell
throwaway cell
v24@?0@"BBAction"8@"NSIndexPath"16
updateCellsToVisibleOnPluginWillDisable
TB,N,V_updateCellsToVisibleOnPluginWillDisable
T@"<SBLockScreenNotificationViewDelegate>",W,N,V_delegate
model
T@"<SBLockScreenNotificationModel>",W,N,V_model
THERMAL_WARN_TITLE
THERMAL_WARN_BODY
THERMAL_WARN_BUTTON_IGNORE
THERMAL_WARN_BUTTON_COOLDOWN
waitingForResponse
TB,R,N,GisWaitingForResponse
Ignore
CoolDown
AutoCoolDown
<%@: %p port=%u reason=%@>
T@"<SBThermalWarningSuppressionAssertionDelegate>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIAnimationRemoteAlertToAlert.m
NSIndexPath * _Nonnull SBTreeNodeGetIndexPath(__strong id<SBTreeNode> _Nonnull)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBTreeNode.m
child must be present in the children array
Index %lu out of bounds for children array of length %lu
NSIndexPath * _Nonnull SBTreeNodeGetIndexPathForDescendantTreeNode(__strong id<SBTreeNode> _Nonnull, __strong id<SBTreeNode> _Nonnull)
v32@?0@"NSNumber"8Q16^B24
<_SBModalViewControllerStackTransition:%p - viewController: %@>
T@"UIViewController",&,N,V_viewController
TQ,N,V_operation
TB,N,V_animated
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBModalViewControllerStack.m
View controller to add to the stack must be non-nil.
View controller to remove from the stack must be non-nil.
View controller (%@) can't be removed to the modal stack when it doesn't already exist.
We cannot have a pending transition if we have no current transition.
We can only add operations here.
We can only remove operations here.
T@"<SBModalViewControllerStackDelegate>",W,N,V_delegate
viewControllers
topViewController
T@"UIViewController",R,D,N
kSBSideAppStateAppIdentifierKey
kSBSideAppStatePresentationStyleKey
kSBSideAppStatePresentationWidthKey
Pinned
HalfScreen
Narrow
width
sideAppIdentifier
T@"NSString",C,N,V_sideAppIdentifier
presentationWidth
Tq,N,V_presentationWidth
pinned
half screen
narrow
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDashBoardNotificationListViewController.m
v32@?0@"NCNotificationRequestHiddenPreviewContentProvider"8Q16^B24
v24@?0@"NCNotificationRequest"8^B16
B24@?0@"NCNotificationRequestPhoneCoalescingContentProvider"8^B16
staticContentProviders
T@"NSMutableDictionary",&,N,V_staticContentProviders
hiddenPreviewContentProviders
T@"NSMutableDictionary",&,N,V_hiddenPreviewContentProviders
phoneCoalescingContentProviders
T@"NSMutableSet",&,N,V_phoneCoalescingContentProviders
activeRaiseToListenNotificationRequest
T@"NCNotificationRequest",&,N,V_activeRaiseToListenNotificationRequest
TB,R,N,V_listPresentingContent
T@"<SBDashBoardNotificationListViewControllerDelegate>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBPressSequenceRecognizer.m
Use initWithValidator:
SBPressSequenceRecognizer must be given non nil validator
T@"<SBPressSequenceRecognizerDelegate>",W,N,V_delegate
validator
T@"SBPressSequenceValidator",R,N,V_validator
TQ,R,N,V_numberOfPresses
Use initWithAssetCache:
v24@?0@"NSFileWrapper"8@"NSError"16
fileCache
T@"SBFFileCache",R,N,V_fileCache
callToActionLabel
T@"SBUICallToActionLabel",&,N,V_callToActionLabel
T@"SBDashBoardVibrantWallpaperButton",&,N,V_logoutButtonView
T@"SBSlideUpAppGrabberView",&,N,V_slideUpAppGrabberView
slideUpAppGrabberViewVisible
TB,N,V_slideUpAppGrabberViewVisible
fakeWallpaperVisible
TB,N,V_fakeWallpaperVisible
-[SBLockScreenAnimatedPluginTransition beginTransition]
activeToOverlayTransition
T@"SBLockOverlayTransition",&,N,V_activeToOverlayTransition
activeFromOverlayTransition
T@"SBLockOverlayTransition",&,N,V_activeFromOverlayTransition
activeOverlayTransition
T@"SBLockOverlayTransition",&,N,V_activeOverlayTransition
Td,R,V_value
fillColor
T@"UIColor",R,V_fillColor
@sum.value
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkAlertToImpersonatedAppWorkspaceTransaction.m
Must have an application for the SBStarkAlertToImpersonatedAppWorkspaceTransaction.
Alert impersonator is required for the SBStarkAlertToImpersonatedAppWorkspaceTransaction.
fromStarkAlert = %@, toApplication: %@ (impersonating alert: %@)
layoutInsets
T{UIEdgeInsets=dddd},R,N,V_layoutInsets
preservesCurrentListOrigin
TB,R,N,V_preservesCurrentListOrigin
_UIPreviewInteractionForceLevelClassifier
orbGestureRegionMax
alpha
BSSettings
T@"BSSettings",R,N,G_BSSettings,V_settings
Td,R,D,N
Tq,R,D,N
T@"_UILegibilitySettings",R,D,N
T@"_UILegibilitySettings",&,D,N
StarkSiriWillAppearNotification
StarkSiriDidAppearNotification
StarkSiriWillDisappearNotification
StarkSiriDidDisappearNotification
topDisplay
starkLockOut
starkTopDisplayFocus
starkNowPlaying
starkSiriFocus
starkLockOutFocus
alertSheetFocus
statusBarFocus
presenting siri
oem:back
Launcher
Siri-Presenting
Siri-Dismissing
HomeScreenAnimation
protocols
SIMULATOR_EXTENDED_DISPLAY_PROPERTIES
setup
fade
slideOver
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkScreenController.m
sceneManager is of an unexpected type : sceneManager=%@
StarkLockOut
StarkAnimationWindow
v32@?0@"CRVehicle"8Q16^B24
nowplaying
current
siriSlideOverAnimation
-[SBStarkScreenController _noteInitializationCompleted]
-[SBStarkScreenController _noteConnectSetupCompleted]
-[SBStarkScreenController _noteDisconnectCompleted]
com.apple.springboard.car.nowPlaying-%p
stark home button pressed
user activated app
notification appears malformed : alertSheet=%@ window=%@
notification appears malformed : alertSheet=%@
v16@?0@"NSTimer"8
StarkNowPlaying
StarkIcons
StarkStatusBar
StarkNotifications
StarkSiri
music://cardisplay/show-now-playing
TopDisplaySuppressesNotifications
SBStarkAlertWindow
iOS UI requested
display mismatch : manager.display=%@ , self.display=%@
T@"<SBStarkScreenControllerDelegate>",W,N,V_delegate
sessionConfiguration
fbsDisplay
T@"FBSDisplay",R,N,V_fbsDisplay
T@"SBWindow",R,N
T@"UIWindow",R,N
iconWindow
lockoutWindow
iconController
T@"SBStarkIconController",R,N
notificationController
T@"SBStarkNotificationViewController",R,N
statusBarController
T@"SBStarkStatusBarViewController",R,N
T@"SBStarkSystemGestureManager",R,N,V_systemGestureManager
actualTopDisplay
T@"<SBDisplay>",R,&,N
effectiveTopDisplay
TB,R,N,GisShowingNowPlaying,V_showingNowPlaying
{brightness=%f image=%@}
SBCameraPageIndicator
cameraPageEnabled
TB,N,GisCameraPageEnabled,V_cameraPageEnabled
SBDashBoardTransitionContext
<%@: reason %@>
animationFactory
T@"BSUIAnimationFactory",&,N,V_animationFactory
allowsGroupOpacityDuringCrossfade
TB,N,V_allowsGroupOpacityDuringCrossfade
adaptsAnimationFactoryTimingFunction
TB,N,V_adaptsAnimationFactoryTimingFunction
SBAlertWallpaperTunnelManager
Can't setup a tunnel to the wallpaper from a detached alert
Can't setup a tunnel to the wallpaper for a view-less alert
Multiple SBAlertManagers for the main screen are not supported
Can't tear down a tunnel to the wallpaper from a detached alert
SBAlertWallpaperTunnelManager's alertManager can be set only once!
v24@?0@"SBAlert"8^B16
There %@ currently %lu hidden alert(s):
  %p: [%@] %@
Alerts hiding other alerts:
  %p [%@] is hiding alerts: 
%@%p
Alerts hidden by other alerts:
  %p [%@] is hidden by alerts: 
There are currently no hidden alerts; tunnel is not active
SBCarIgnoreOcclusionsReason
SBCarPlayConnectedStatusChangedNotificationName
+[SBStarkScreenManager sharedInstance]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkScreenManager.m
com.apple.iaptransportd.ExternalAccessory.distributednotification.server
IAPNotificationStarkUSBSwitch
controllers
currentController
screenDimmingAssertion
unlockAssertion
lockscreenDisableAssertion
earlyUnlockAssertion
Stark
Stark-early-connect
controlsViewController
T@"SBDashBoardNowPlayingViewController",R,N,V_controlsViewController
artworkViewController
T@"SBDashBoardNowPlayingViewController",R,N,V_artworkViewController
notificationBannerCell
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkNotificationViewController.m
we only support one section (asked for %li)
shouldn't be asking for a cell when we don't have a currentNotification
we can only be showing one notification at a time
we only support a maximum of one item
we must have a collectionView before we try to perform updates
we only support two sections (asked for %li)
Ti,N,S_setState:
T@"<SBStarkNotificationViewControllerDelegate>",W,N,V_delegate
T@"SBIcon",&,N,V_icon
T@"UIImageView",&,N,V_imageView
-[SBTestDataProvider2 init]
Remote Notification!
Hello there.
com.apple.test_provider2
Fake Remote DP
-[SBTestDataProvider2 bulletinsFilteredBy:count:lastCleared:]
-[SBTestDataProvider2 clearedInfoForBulletins:lastClearedInfo:]
-[SBTestDataProvider2 dataProviderDidLoad]
-[SBTestDataProvider2 receiveMessageWithName:userInfo:]
-[SBTestDataProvider2 attachmentPNGDataForRecordID:sizeConstraints:]
-[SBTestDataProvider2 attachmentAspectRatioForRecordID:]
-[SBTestDataProvider2 noteSectionInfoDidChange:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSearchEtceteraBlurringPullTransitionAnimator.m
SBDeckSwitcherRequester
SBAppSwitcherSnapshotView queue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDeckSwitcherPageViewProvider.m
use initWithDelegate:
T@"<SBDeckSwitcherPageViewProviderDelegate>",W,N,V_delegate
T@"UIWindow",&,N,V_window
contextHostView
T@"UIView",&,N,V_contextHostView
T@"NSString",&,N,V_contextHostRequester
com.apple.springboard.spotlight-placeholder
SYSTEM_SEARCH_TITLE
SiriBreadcrumb
SpotlightBreadcrumb
ActivateFromBreadcrumb: %@
ActivateFromAppLinkEscape
v16@?0^{?=QQQ}8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBMainDisplaySceneManager.m
expected oldClientSettings to be a UISubclass
@?<v@?^v>16@?0@?<v@?@"SBInternalClientSettingObserverContext">8
v16@?0@"SBInternalClientSettingObserverContext"8
@?<v@?^v>16@?0@?<v@?@"SBAppClientSettingObserverContext">8
v16@?0@"SBAppClientSettingObserverContext"8
 (ignoring because isBackgrounded)
@?<v@?^v>16@?0@?<v@?@"SBClientSettingObserverContext">8
v16@?0@"SBClientSettingObserverContext"8
App (%@) is updating its orientation (was %@)
Rotating-an-App-hosted-by-an-alert
app orientation change backstop
Device Rotation: #%lu (initially to %@)
rotation conditions failed: requested orientation check %@, layout controller orientation validation %@
passed
failed
an alert is active, and force wasn't requested
orientation change request is stale
T@"SBMainDisplayPolicyAggregator",R,N
T@"SBMainDisplaySceneLayoutViewController",R,D,N
T@"SBSideAppState",&,N
currentBreadcrumbNavigationAction
T@"UISystemNavigationAction",&,N,V_currentBreadcrumbNavigationAction
T@"FBScene",&,N,V_scene
oldClientSettings
T@"FBSSceneClientSettings",&,N,V_oldClientSettings
T@"FBSSceneTransitionContext",&,N,V_transition
T@"SBApplication",&,N,V_app
T@"UIApplicationSceneSettings",&,N,V_settings
T@"UIApplicationSceneClientSettings",&,N,V_oldClientSettings
updatedClientSettings
T@"UIApplicationSceneClientSettings",&,N,V_updatedClientSettings
Forward
Backward
ScrunchGesture
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIAnimationZoomDownLockScreenToHome.m
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkLockOutViewController.m
controller had no configuration!!!
invalidate wasn't called before dealloc
cannot update lockOutMode after invalidation
LOCKOUT_GENERIC_TTL
LOCKOUT_SIRI_TTL
LOCKOUT_SIRI_MSG
LOCKOUT_THERMAL_TTL
CarDisplayThermometer
LOCKOUT_THERMAL_MSG
lockOutMode
lockoutView
T@"SBStarkLockOutView",R,N,V_modeView
starkNotificationFocus
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkNotificationWindow.m
rootViewController must be a subclass of SBStarkNotificationViewController
focusController
T@"SBStarkScreenFocusController",&,N,V_focusController
T@"SBStarkNotificationViewController",&,D,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkBannerItem.m
this is an abstract base class - don't instantiate it directly
subTitle
categoryImage
defaultActionType
effectiveDefaultActionType
sourceDate
subActionLabels
zPosition-in-out
starkSessionConfiguration
T@"<SBStarkSessionConfiguring>",&,N,V_starkSessionConfiguration
T@"<SBCollectionViewCellDelegate>",W,N,V_delegate
protectDelayedUnhighlights
TB,N,V_protectDelayedUnhighlights
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkNotificationLayout.m
only insert and delete actions are supported
only a maximum of 1 item is supported
only 1 section is currently supported
only a maximum of 1 item is supported in section 0
moves are not currently supported
notificationHeight
Td,N,V_notificationHeight
transitionSpacing
Td,N,V_transitionSpacing
subActionsInsets
T{UIEdgeInsets=dddd},N,V_subActionsInsets
subActionPadding
Td,N,V_subActionPadding
subActionHeight
Td,N,V_subActionHeight
Trigger Duet for Widgets
DuetWidgetLaunchStatsUpdate
_widgetDiscoveryController
com.apple.stocks.widget
com.apple.mobilecal.widget
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAWDMetric.m
SBAWDMetric requires a non nil data builder to post
SBAWDMetric data must be a subclass of SBAWDMetricData
SBAWDMetric '%@' configured a nil metric
SBAWDMetric subclass '%@' must override -dataClass
SBAWDMetric subclass '%@' must override -metricID
T@"<SBAWDMetricDelegate>",W,N,V_delegate
Print LowBattery Log
_faceExpected
faceExpected
TB,N,S_setFaceExpected:,V_faceExpected
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBManyApplicationsAlertItem.m
MANY_APPLICATIONS_TITLE
MANY_APPLICATIONS_MESSAGE
MANY_APPLICATIONS_CANCEL
T@"NSArray",R,N,V_applications
SBZoomDownAppsToAlertRequester
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkBulletinBannerItem.m
must provide a bulletin
CarBannerAlertGlyph.png
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBMainWorkspaceTransitionRequest.m
call initWithDisplay: instead
T@"SBMainWorkspace",R,D,N
Tq,N,V_source
transactionProvider
T@?,C,N,V_transactionProvider
isMainWorkspaceTransitionRequest
SBLayoutExternalInactivePrimaryRole
SBLayoutExternalInactiveSideRole
SBLayoutBreadcrumbRole
SBLayoutPrimaryRole
SBLayoutSideRole
undefined
breadcrumb
side
externally-managed-primary
externally-managed-side
gravity
Td,V_gravity
velocity
Td,V_velocity
elasticity
Td,V_elasticity
friction
Td,V_friction
resistance
Td,V_resistance
multiplier
Td,V_multiplier
minVelocityToAssist
Td,V_minVelocityToAssist
maxVelocityToAssist
Td,V_maxVelocityToAssist
maxVelocityAssistance
Td,V_maxVelocityAssistance
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBHomeScreenWindow.m
!rootViewController
homeScreenViewController
T@"SBHomeScreenViewController",R,W,N
(inherit)
DarkenSourceOver
BlurOnly
Light
LightWithTint
v32@?0@"NSHashTable"8Q16^B24
v32@?0@"NSNumber"8@"NSHashTable"16^B24
SBFadeRemoteAlertToHomeHostRequester
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIAnimationFadeRemoteAlertToHome.m
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBWorkspaceEntity.m
Non-main displays are portrait-only : attempted to set to %@ on display=%@
@"SBWorkspaceEntity"16@?0@"NSString"8
_mainDisplayPreferredInterfaceOrientation
Tq,N,G_mainDisplayPreferredInterfaceOrientation,S_setMainDisplayPreferredInterfaceOrientation:,V_mainDisplayPreferredInterfaceOrientation
Tq,N,V_layoutRole
representedDisplay
T@"<SBDisplay>",R,W,N
T@"SBActivationSettings",R,N,V_activationSettings
T@"SBDeactivationSettings",R,N,V_deactivationSettings
SBScrunchAppsGestureReason
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBScrunchAppsSystemGestureWorkspaceTransaction.m
deallocated while still ignoring interaction events
ScrunchAppsSystemGestureWorkspaceTransaction _begin-ing
Not expecting to be told that the system gesture began
UnscatterIcons
v16@?0^{?=Q}8
init not supported -- use initWithCMPocketStateManager:calloutQueue:
pocketState
Tq,R,N,V_pocketState
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkAlertItemBannerItem.m
must initialize with a valid alertItem
com.apple.springboard.stark.notifications
Animate lockout changes?
animateLockOutModeChanges
Passcode Locked
Passcode Blocked
Siri Off
Buddy Showing
Modes
Lock Out
TB,V_animateLockOutModeChanges
Tq,V_lockOutMode
<%@: %p>
unknown: %lu
v24@?0@"SBFloatyFolderBackgroundClipView"8^B16
v32@?0@"SBFloatyFolderBackgroundClipView"8Q16^B24
displayingMultipleIconLists
TB,N,GisDisplayingMultipleIconLists,V_displayingMultipleIconLists
animatingRotation
TB,N,GisAnimatingRotation,V_animatingRotation
T@"SBFolderBackgroundView",R,N,V_backgroundView
other
homescreen
lockscreen
phone
push
com.apple.springboard.lockscreen.%@.wakeCount
com.apple.springboard.%@.controlcenter.%@.activationCount
flashlight
com.apple.springboard.auto-lock
com.apple.springboard.%@.screenOnTime
com.apple.springboard.%@.activationCount
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBBannerContextView.m
the view returned from newBannerViewForContext: does not reference the correct bannerContext
BannerGrabber
backdrop
dismissing
TB,R,N,GisDismissing,V_isDismissing
TB,N,V_grabberVisible
separatorVisible
TB,N,V_separatorVisible
pullDownView
T@"UIView",&,N,V_pullDownView
pullDownViewHeight
Td,N,V_pullDownViewHeight
pullDownBottomOverhangHeight
Td,N,V_pullDownBottomOverhangHeight
accessoryView
T@"UIView",&,N,V_accessoryView
secondaryContentView
T@"UIView",&,N,V_secondaryContentView
SpringBoard - SBAppStatusBarManager
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAppStatusBarManager.m
windowLevelOverrideReason is not valid
layoutLayer != SBAppStatusBarLayoutLayerHomeScreen
v24@?0Q8Q16
user interaction
disableAlphaChangeAssertions
disableUserInteractionChangeAssertions
statusBarSettingsByAssertionLevel
%@ - (%@)
statusBarEdgeInsets
T{UIEdgeInsets=dddd},R,N
topmostActiveLayoutLayer
foreground app
foreground app animation
fullscreen alert
fullscreen alert animation
app switcher
power down
login window
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBReduceMotionDeckSwitcherViewController.m
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAWDQueryableMetric.m
SBAWDQueryableMetric can't register with a nil data builder
v12@?0I8
T@"UIScreen",&,N,V_screen
T@"UIView",R,N,V_contentView
assistantController
T@"UIViewController<SBUIPluginViewControllerInterface>",&,N,V_assistantViewController
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkStatusBarDockController.m
stateProvider
v32@?0@"NSString"8Q16^B24
forceStageInteractionProgress
T@"UIForceStageInteractionProgress",R,N,V_forceStageInteractionProgress
Reboot
TestRecipe
Orbing cancels scroll
orbCancelsScroll
Scrolling cancels orb
scrollCancelsOrb
Fade Out UI When Loop Playing
irisLoopFadesOutUI
Iris Settings
Iris Wallpaper
TB,N,V_orbCancelsScroll
TB,N,V_scrollCancelsOrb
TB,N,V_irisLoopFadesOutUI
v16@?0@"SBAWDMetricData"8
pressName
T@"NSString",C,N,V_pressName
pressSequence
T@"NSArray",C,N,V_pressSequence
didTriggerSOS
TB,N,V_didTriggerSOS
clickMax
TQ,N,V_clickMax
Shutdown (reason=%@)
Reboot (%@)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBRestartManager.m
isRestartImminent
pendingRestartTransitionRequest
startupController
com.apple.springboard.deviceWillShutDown
RelaunchingSpringBoard-reason:%@-requester:%@
rebootContext
isUserSwitchPending
TB,N,G_isUserSwitchPending,S_setUserSwitchPending:,V_isUserSwitchPending
T@"<SBRestartManagerDelegate>",W,N,V_delegate
T@"BSTransaction<SBStartupTransition>",R,D,N
T@"SBRestartTransitionRequest",R,N,V_pendingRestartTransitionRequest
pendingExit
TB,R,D,N,GisPendingExit
v16@?0@"SBFLockScreenDateSubtitleView"8
AppOpenCenterZoomAnimation
AppCloseCenterZoomAnimation
appZoomAnimator
T@"SBReversibleLayerPropertyAnimator",&,N,V_appZoomAnimator
T@"SBCenterAppZoomSettings",&,D,N
distantScale
Td,V_distantScale
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAlertWindowViewController.m
screen must be valid
alertWindowViewControllerDelegate
T@"<SBAlertWindowViewControllerDelegate>",W,N,V_alertWindowViewControllerDelegate
activeAlert
T@"SBAlert",&,N,V_activeAlert
activeViewController
T@"UIViewController",&,N,V_activeViewController
v16@?0@"SBPressSequenceMetricData"8
T@"<SBPressSequenceObserverDelegate>",W,N,V_delegate
T@"NSString",R,N,V_pressName
pressCollector
T@"SBPressCollector",R,N,V_pressCollector
alertToActivate
alertToDeactivate
T@"SBWorkspaceAlert",&,N,V_alertToActivate
T@"SBWorkspaceAlert",&,N,V_alertToDeactivate
transitionIsAlertActivation
TB,N,V_transitionIsAlertActivation
WaitForLoginWindowToFinishLaunchingMilestone
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIStartupToLoginWindowAnimationController.m
BootToLoginWindow
endIcon
T@"SBIcon",R,N
coordinate
T{SBIconCoordinate=qq},R,N,V_coordinate
Ti,R,N,V_location
iconImageCenter
T{CGPoint=dd},R,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIStarkZoomDownAppToHomeAnimation.m
the 'app' parameter must be valid -> app=%@
Wallpaper Style
deckSwitcherForegroundWallpaperStyle
Saturation
deckSwitcherForegroundSaturationDeltaFactor
Blur Radius
deckSwitcherForegroundBlurRadius
Darkening Amount
deckSwitcherForegroundDarkeningFactor
Deck Switcher Home Screen Card Wallpaper
deckSwitcherBackgroundWallpaperStyle
deckSwitcherBackgroundSaturationDeltaFactor
deckSwitcherBackgroundBlurRadius
deckSwitcherBackgroundDarkeningFactor
Deck Switcher Background Wallpaper
App Switcher Wallpaper
Tq,V_deckSwitcherForegroundWallpaperStyle
Tq,V_deckSwitcherBackgroundWallpaperStyle
Td,V_deckSwitcherForegroundDarkeningFactor
Td,V_deckSwitcherBackgroundDarkeningFactor
Td,V_deckSwitcherForegroundSaturationDeltaFactor
Td,V_deckSwitcherBackgroundSaturationDeltaFactor
Td,V_deckSwitcherForegroundBlurRadius
Td,V_deckSwitcherBackgroundBlurRadius
UltraLight (Blur only)
SemiLight (Blur only)
FlatSemiLight (Blur only)
Light (Blur only)
Dark (Blur only)
UltraLight (Tinted Blur)
SemiLight (Tinted Blur)
FlatSemiLight (Tinted Blur)
Light (Tinted Blur)
Dark (Tinted Blur)
UltraLight (Tint only)
SemiLight (Tint only)
FlatSemiLight (Tint only)
Light (Tint only)
Dark (Tint only)
Background Light (Blur only)
Background Light (Tinted Blur)
Background Light (Tint only)
Foreground Light (Blur only)
Foreground Light (Tinted Blur)
Foreground Light (Tint only)
Switcher Background Light (Blur only)
Switcher Background Light (Tinted Blur)
Switcher Background Light (Tint only)
Switcher Foreground Light (Blur only)
Switcher Foreground Light (Tinted Blur)
Switcher Foreground Light (Tint only)
Desaturate
DesaturateLight
ExtraLight
MediumLight
Medium
MediumStrong
Strong
ExtraStrong
Small
Large
ExtraLarge
ExtraExtraLarge
ExtraExtraExtraLarge
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDocumentAccessAlertItem.m
fileCoordinator
@?<v@?>16@?0@"NSProgress"8
DOCUMENT_ACCESS_TITLE
DOCUMENT_ACCESS_WAITING_MESSAGE
DOCUMENT_ACCESS_CANCEL
timer
T@"NSTimer",&,N,V_timer
downloadMessage
TB,N,V_downloadMessage
subscriber
T@,&,N,V_subscriber
T@"NSFileCoordinator",R,N,V_fileCoordinator
SBAppSwitcherAppSuggestionSlideUpViewHostRequester
SBOrientationLockForDisplayedOverlay
SBSuppressKeyboardForSideAppOverlay
SBSuppressKeyboardForSideSwitcherGesture
%@: primary element
v16@?0@"SBLayoutState"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBMainDisplaySceneLayoutViewController.m
q24@?0@"SBAppContainerViewController"8@"SBAppContainerViewController"16
[self _isCurrentlyRotating]
![self _isCurrentlyRotating]
animation preconditions failed
v32@?0@"SBMainDisplayLayoutState"8@"SBLayoutElementViewController"16@?<v@?B>24
DismissSideAppForDimmingViewTap
recoilRequesters
capturedSnapshotView
T@"UIView",&,N,V_capturedSnapshotView
T@"SBMainDisplayLayoutState",R,N
breadcrumbLayoutElementController
shouldReverseLayoutDirection
Left
Assistant
Right
AppLinkEscape
Action
Presented
BreadcrumbShown
BreadcrumbTapped
todayView
T@"UIView",&,N,V_todayView
todayListMajorScrollView
T@"UIScrollView",&,N,V_todayListMajorScrollView
todayListMinorScrollView
T@"UIScrollView",&,N,V_todayListMinorScrollView
weatherView
T@"UIView",&,N,V_weatherView
T@"UIView",&,N,V_dateView
weatherViewOffset
T{CGPoint=dd},N,V_weatherViewOffset
todayViewShouldBeOffset
TB,N,V_todayViewShouldBeOffset
containsDateTimeDisplay
TB,N,V_containsDateTimeDisplay
searchView
T@"UIView",&,N,V_searchView
notificationListInsetMargins
T{UIEdgeInsets=dddd},N,V_notificationListInsetMargins
notificationsView
T@"UIView",&,N,V_notificationsView
T@"<_SBRemoteAlertHostViewControllerDelegate>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBRemoteAlertAdapter.m
the viewController must be a _SBRemoteAlertHostViewController
must provide a serviceName
must provide a serviceClass
must provide a completionHandler
+[SBRemoteAlertAdapter _requestWithServiceName:serviceClass:context:options:completion:]
+[SBRemoteAlertAdapter _requestWithServiceName:serviceClass:context:options:completion:]_block_invoke
-[SBRemoteAlertAdapter _disconnect]
-[SBRemoteAlertAdapter _didTerminateWithError:]
remoteAlertDidTerminateWithError
_UIViewServiceInterfaceErrorDomain
remoteAlertDelegate
T@"<SBRemoteAlertDelegate>",R,W,N
Tq,N,V_requestedBackgroundStyle
TB,N,V_activatedForSiri
forCarPlay
TB,R,N,G_isForCarPlay,V_forCarPlay
dismissalAnimationStyle
Tq,R,N,V_dismissalAnimationStyle
userRequestedHomeButtonDismissal
TB,R,N,V_userRequestedHomeButtonDismissal
wantsWallpaperTunnel
TB,R,N,V_wantsWallpaperTunnel
dismissOnUILock
TB,R,N,V_dismissOnUILock
disablesFadeInAnimation
TB,R,N,V_disableFadeInAnimation
serviceBundleIdentifier
beingPresentedObscured
TB,N,GisBeingPresentedObscured,V_beingPresentedObscured
T@"<SBRemoteAlertDelegate>",R,W,N,V_remoteAlertDelegate
PowerDown
showing power down
canAlterScreenBrightness
TB,N,V_canAlterScreenBrightness
powerDownDelegate
T@"<SBPowerDownAlertViewDelegate>",&,N,V_powerDownDelegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAlertViewAdapter.m
alert must be an alertAdapter
grabberActiveZoneWidth
Td,N,V_grabberActiveZoneWidth
shouldUseGrapeFlags
TB,N,V_shouldUseGrapeFlags
startingAmplitude
Td,N,VA
endingAmplitude
Td,N,VZ
springStrength
Td,N,Vk
springDecay
Td,N,Vdk
minimumSpringStrength
Td,N,Vmink
Td,N,Vm
massDecay
Td,N,Vdm
minimumMass
Td,N,Vminm
statusBarImageDictionaries
StatusBarImages
gestureWokeScreen
liftToWakeController
T@"SBLiftToWakeController",&,N,G_liftToWakeController,S_setLiftToWakeController:,V_liftToWakeController
T@"SBMainDisplayPolicyAggregator",&,N,G_policyAggregator,S_setPolicyAggregator:,V_accessor_policyAggregator
T@"SBLockScreenManager",&,N,G_lockScreenManager,S_setLockScreenManager:,V_accessor_lockScreenManager
T@"SBBacklightController",&,N,G_backlightController,S_setBacklightController:,V_accessor_backlightController
TB,N,G_gestureWokeScreen,S_setGestureWokeScreen:,V_gestureWokeScreen
NotificationCenterUserInteraction
alertingController
T@"SBNCAlertingController",W,N
T@"NCNotificationListViewController",&,N,V_notificationListViewController
notificationsContainerViewController
T@"NCNotificationListContainerViewController",&,N,V_notificationsContainerViewController
T@"<NCNotificationDestinationDelegate>",W,N,V_delegate
T@"SBNCAlertingController",W,N,V_alertingController
SBNCTableViewWillScroll
SBNCTableViewDidFinishScrolling
kSBNotificationCenterTableViewControllerInfoSentinel
v24@?0#8@"NSString"16
There are remaining bulletins for the section being removed: %@
There are already bulletins associated with this section: %@
Attempt to insert existing row: %@
Attempt to insert item already present in store: %@
%@: Failed to update model: %@
Attempt to remove item not present in store: %@
Attempt to move item not present in store: %@
%s: moving rows is not supported
-[SBNCTableViewController _performMoveOperation:]_block_invoke
Attempt to replace item not present in store: %@
Insert Section
Remove Section
Move Section
v16@?0@"SBRowInfo"8
Replace Section
Insert Row
Remove Row
Replace Row
T@"<SBNCTableViewControllerDelegate>",W,N,V_delegate
tableViewFrame
usesTableViewSeparators
TB,N,V_usesTableViewSeparators
canDismissBulletins
TB,N,V_canDismissBulletins
<%@: %p; section: %@; row: %@>
section
T@"SBSectionInfo",R,N,V_section
T@"SBRowInfo",R,N,V_row
sectionOperand
TB,R,N,GisSectionOperand
<%@: %p; activeOperand: %@; referenceOperand: %@>
activeOperand
T@"SBInfoOperand",R,N,V_activeOperand
referenceOperand
T@"SBInfoOperand",R,N,V_referenceOperand
<%@: %p; (%@) operand: %@>
operand
T@,R,N,V_operand
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBAlertAdapter.m
cannot make an adapter without a viewController
display must be an alertViewAdapter
creationDate
T@"NSDate",R,N,V_creationDate
work
T@?,R,C,N,V_workBlock
com.apple.SBWorkStore.workQueue
com.apple.SBWorkStore.observerQueue
<%@ %p; maxWork: %d>
<%@ %p; maxWork: %d 
keysWithWork: %@ 
work: %@>
workItemsPerKey
T@"NSMutableDictionary",R,N,V_workItemsPerKey
T@"NSMutableArray",R,N,V_observers
maxWorkPerKey
TQ,R,N,V_maxWorkPerKey
keysWithWork
defaultWorkExpirationPeriod
Td,N,V_defaultWorkExpirationPeriod
uniqueIdentifier
T@"NSUUID",R,C
activityType
lastUpdateTime
T@"NSDate",R,C
originatingDeviceIdentifier
originatingDeviceName
originatingDeviceType
originatingBundleIdentifier
suggestedLocationName
T@"NSURL",R,C
App failed to launch
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIStarkScreenAnimationController.m
must reference a valid starkScreenController
T@"SBStarkScreenController",R,N,V_starkScreenController
SBInternalAppTag
SBNonDefaultSystemAppTag
DateView
StatusBar
PageControl
PageContent
SlideableContent
Tinting
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDashBoardComponents.m
flag
legibility
properties
TQ,N,V_properties
Tq,N,V_priority
Tq,N,V_flag
T{CGPoint=dd},N,V_offset
T@"NSString",C,N,V_string
T@"UIColor",&,N,V_color
Td,N,V_alpha
T@"UIDynamicAnimator",R,N,G_animator,V_animator
T@"SBBounceBehavior",&,N,G_behavior,S_setBehavior:,V_behavior
T@?,C,N,G_completion,S_setCompletion:,V_completion
T@"_UIFeedbackEdgeBehavior",W,N,V_feedbackBehavior
T{CGAffineTransform=dddddd},N
collisionBoundsType
collisionBoundingPath
T@"UIBezierPath",R,N
frame
applicationShortcutItems
ApplicationShortcuts
com.apple.springboard.sbapplicationshortcutstore
com.apple.springboard.sbapplicationshortcutstore.save
%@: Faled to serialize shortcuts to property list. Error: %@
Unspecified
AppSwitcher
LockScreenCorner
NonInteractiveSystemGesture
FBSystemService
Breadcrumb
ExternalDisplay
SideAppSwitcher
Accessibility
Invalid
Status Bar Style Overrides Assertions
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBApplicationSceneUpdateTransaction.m
appContext
@"FBProcessExecutionContext"8@?0
SceneID
Display
Launch Suspended
Actions
Clearing app activation state
T@"SBWorkspaceApplication",R,N,V_appContext
T@"NSString",R,N,V_sceneIdentifier
sceneSettings
T@"UIMutableApplicationSceneSettings",R,N,V_settings
shouldSendActivationResult
TB,N,V_shouldSendActivationResult
titleString
T@"NSString",&,N,V_titleString
viewState
Ti,N,V_viewState
language
T@"NSString",N,V_language
@"SBWorkspaceApplication"16@?0@"NSString"8
T@"NSSet",C,N,V_actions
T@"SBProcessSettings",R,N,V_processSettings
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSystemGestureWorkspaceTransaction.m
Trying to _begin but I'm not tracking a system gesture
T@"UIGestureRecognizer",&,N,V_gestureRecognizer
completionType
Tq,R,N,V_completionType
@16@?0@"SBWorkspaceEntity"8
Main screen transaction animation
B24@?0@"SBWorkspaceApplication"8^B16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBReversibleLayerPropertyAnimator.m
Cannot start an animator that has already started
Cannot reverse an animator that has not started
Cannot reverse an animator that has already reversed
currentAnimationSettings
T@"BSAnimationSettings",C,N,V_currentAnimationSettings
started
TB,N,GhasStarted,V_started
reversed
TB,N,GhasReversed,V_reversed
outstandingCAAnimationCompletionCount
TQ,N,V_outstandingCAAnimationCompletionCount
forwardAnimationKey
T@"NSString",C,N,V_forwardAnimationKey
reversalAnimationKeys
T@"NSMutableArray",&,N,V_reversalAnimationKeys
layer
T@"CALayer",R,N,V_layer
keyPath
T@"NSString",R,C,N,V_keyPath
initialValue
Td,R,N,V_initialValue
targetValue
Td,R,N,V_targetValue
com.apple.AppStore
com.apple.calculator
com.apple.camera
com.apple.mobiletimer
com.apple.facetime
com.apple.Maps
com.apple.mobilephone
com.apple.InCallService
com.apple.Music
com.apple.Passbook
com.apple.purplebuddy
com.apple.mobilesafari
com.apple.iphoneos.iPodOut
com.apple.mobileiphoto
com.apple.mobileme.fmf1
com.apple.PrintKit.Print-Center
com.apple.iCloudDriveApp
com.apple.Siri
com.apple.LoginUI
com.apple.DataActivation
com.apple.Diagnostics
com.apple.TestFlight
com.apple.Magnifier
SBSearchEtceteraNavigationControllerDidShowViewController
shouldUnderlapNavigationBar
TB,N,V_shouldUnderlapNavigationBar
shouldAllowVisibleSeparator
TB,N,V_shouldAllowVisibleSeparator
_proximityDetectionEnabled
_proximityDetectionPermitted
_objectWithinProximity
_clientsWantingDetectionEnabled
disableProximitySensor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBProximitySensorManager.m
clientID
com.apple.prox.reset.all
com.apple.prox.reset.phoneCall
TB,N,GisProximityDetectionEnabled,S_setProximityDetectionEnabled:,V_proximityDetectionEnabled
proximityDetectionPermitted
TB,N,GisProximityDetectionPermitted,S_setProximityDetectionPermitted:,V_proximityDetectionPermitted
iMChatUnreadConversationCount
composingNewMessage
suspendedGroupId
TQ,R,D,N
TB,R,D,N,GisComposingNewMessage
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIStarkAnimationZoomDownApp.m
AnimateHostSuspension
ZoomFade
T@"NSString",&,N,V_text
T@"SBIconView",&,N,V_iconView
iconViewDelegate
T@"<SBIconViewDelegate>",W,N,V_iconViewDelegate
iconViewClass
T#,&,N,V_iconViewClass
T@"_UILegibilitySettings",&,N,V_settings
TB,N,V_accessibilityIncreaseContrastEnabled
wantsFocusHighlight
TB,N,V_wantsFocusHighlight
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBModeViewController.m
Only instances of 'SBNCColumnViewController' and subclasses are currently supported
Attempt to select index (%ld) outside of range of child view controllers (%lu)
-[SBModeViewController rectForBulletin:]
If you have caught this in the debugger, please leave it in this state.
deselectedViewController
T@"SBNCColumnViewController",&,N,V_deselectedViewController
modeViewControllerDelegate
T@"<SBModeViewControllerDelegate>",W,N,V_modeViewControllerDelegate
selectedViewController
T@"UIViewController<SBModeViewControllerContentProviding>",W,N
TB,N,GisRequestHandlingEnabled
T@"NSArray",R,N,V_views
numberOfSegments
selectedSegmentIndex
subtitleTextAttributedString
T@"NSAttributedString",C,N,V_subtitleTextAttributedString
secondaryTextAttributedString
T@"NSAttributedString",C,N,V_secondaryTextAttributedString
alternateSecondaryTextAttributedString
T@"NSAttributedString",C,N,V_alternateSecondaryTextAttributedString
primaryTextAccessoryImage
alternateSecondaryText
T@"UILabel",R,N,V_relevanceDateLabel
topSeparatorView
T@"SBNotificationSeparatorView",&,N,V_topSeparatorView
bottomSeparatorView
T@"SBNotificationSeparatorView",&,N,V_bottomSeparatorView
shouldUseNarrowWidth
TB,N,V_shouldUseNarrowWidth
separatorClass
T#,&,N,V_separatorClass
drawsTopSeparator
TB,N,V_drawsTopSeparator
drawsBottomSeparator
TB,N,V_drawsBottomSeparator
presentationDelegate
T@"<SBNotificationCenterWithSearchViewControllerPresentationDelegate>",W,N,V_presentationDelegate
navigationController
T@"SBSearchEtceteraNavigationController",R,N
T@"NCNotificationListViewController",R,N
notificationAndTodayContainerView
contentContainerView
showPageControl
webapp:%@
T@"UIWebClip",R,N,V_webClip
SBTodayWidgetLaunchErrorDomain
Today view is restricted.
DashBoard is required to work in the lock-screen.
borderColor
borderWidth
T@"SBIconImageView",R,N,V_imageView
label
T@"UILabel",R,N,V_label
iconBorderView
T@"UIView",&,N,V_iconBorderView
showsAppIconBorder
TB,N,V_showsAppIconBorder
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkIconModelApplicationDataSource.m
platformController
T@"SBPlatformController",R,N,VplatformController
com.apple.springboard.spurious-screen-undimming-assertions
v16@?0@"NSMapTable"8
<%p:%@>
[%@]
<%@:%p %@>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBCrossfadeIconZoomAnimator.m
View size cannot be 0 or we will divide by zero and die a horrible death.
Crossfade view cannot be nil.
T@"SBCrossfadeZoomSettings",&,D,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBIconBlurryBackgroundView.m
SBIconBlurryBackgroundViews cannot have subviews.
backgroundColorPhase
T@"<SBIconBlurryBackgroundViewObserver>",W,N,V_observer
wallpaperRelativeCenter
T{CGPoint=dd},N,V_wallpaperRelativeCenter
isBlurring
TB,R,N,V_isBlurring
wantsBlurEvaluator
T@?,C,N,V_wantsBlurEvaluator
suppressesExternalUpdates
TB,N,GisSuppressingExternalUpdates,V_suppressesExternalUpdates
ColoredFolderBackground
-[SBSceneResizeSnakebiteGestureRecognizer touchesBegan:withEvent:]
-[SBSceneResizeSnakebiteGestureRecognizer _canStartAnyKindOfTrackingWithTouch:]
dividerPosition
Td,N,S_setDividerPosition:,V_dividerPosition
leftTouch
T@"UITouch",&,N,G_leftTouch,S_setLeftTouch:,V_leftTouch
rightTouch
T@"UITouch",&,N,G_rightTouch,S_setRightTouch:,V_rightTouch
singleTrackingTouch
T@"UITouch",&,N,G_singleTrackingTouch,S_setSingleTrackingTouch:,V_singleTrackingTouch
waitingTouch
T@"UITouch",&,N,G_waitingTouch,S_setWaitingTouch:,V_waitingTouch
ignoresTouchesMoved
TB,N,G_ignoresTouchesMoved,S_setIgnoresTouchesMoved:,V_ignoresTouchesMoved
initialWaitingTouchLocation
T{CGPoint=dd},N,V_initialWaitingTouchLocation
initialSingleTouchTimestamp
Td,N,V_initialSingleTouchTimestamp
Td,N,V_velocity
previousTouchPosition
Td,N,V_previousTouchPosition
previousTouchTimestamp
Td,N,V_previousTouchTimestamp
distanceTraveledFromInitialLocation
Td,N,V_distanceTraveledFromInitialLocation
absoluteDistanceTraveled
Td,N,V_absoluteDistanceTraveled
waitingForInvalidTouchToBecomeValid
TB,N,GisWaitingForInvalidTouchToBecomeValid,V_waitingForInvalidTouchToBecomeValid
beganTrackingNearDivider
TB,N,V_beganTrackingNearDivider
debugDelegate
T@"<SBSceneResizeSnakebiteGestureDebugDelegate>",W,N,V_debugDelegate
T@"<SBSceneResizeSnakebiteGestureRecognizerDelegate>",W,D,N
snakebite
T@"SBSceneResizeSnakebiteGestureRecognizer",&,N,V_snakebite
SBRootFolderSignificantAnimationReason
SBRootFolderIsCurrentlyScrollingReason
SBRootFolderShowingSearchableTodayViewReason
SBRootFolderShowingReachabilityReason
SBRootFolderTranslatingForReachabilityReason
SBRootFolderSuspendingWallpaperForSpotlightReason
backgroundBlurAlpha
iconsAlpha
searchViewAlpha
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBRootFolderView.m
Root folder view cannot be minimized.
We should not have an active but non-interactive transition here.
Received a delegate callback from an unknown transition
!_currentPullDownTransition
!_currentSlideOverTransition
Attempting to transition to unexpected view controller
dockOffscreenProgressSettingExternalClients
dockViewBorrowed
TB,N,GisDockViewBorrowed,V_dockViewBorrowed
spotlightTransitioningFromBreadcrumb
TB,N,GisSpotlightTransitioningFromBreadcrumb,V_spotlightTransitioningFromBreadcrumb
parallaxSettings
T@"SBFParallaxSettings",R,N,V_parallaxSettings
statusBarHeightAdjustment
Td,N,V_statusBarHeightAdjustment
headerOffset
Td,N,V_headerOffset
extendedSize
T{CGSize=dd},N,V_extendedSize
wrappedView
T@"UIView",&,N,V_wrappedView
Trying to change the dock offscreen fraction on an invalid object
folderView
T@"SBRootFolderView",&,N,V_folderView
Source
DidCommit
SwitcherInteraction
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDashBoardScrollModifier.m
scrollView != nil
recognized
TB,R,N,V_recognized
maxScrollDistance
Td,N,V_maxScrollDistance
cancelScrollingIfTooMuchDrag
TB,N,V_cancelScrollingIfTooMuchDrag
accumulatedDragThresholdPercentage
Td,N,V_accumulatedDragThresholdPercentage
maxDragFromVerticalPerFrame
Td,N,V_maxDragFromVerticalPerFrame
powerOfVerticalDirectionSine2
Td,N,V_powerOfVerticalDirectionSine2
inertialMultiplierSigmoidBase
Td,N,V_inertialMultiplierSigmoidBase
inertialMultiplierSigmoidRange
Td,N,V_inertialMultiplierSigmoidRange
inertialMultiplierSigmoidPivot
Td,N,V_inertialMultiplierSigmoidPivot
inertialMultiplierSigmoidAlpha
Td,N,V_inertialMultiplierSigmoidAlpha
minPercentageSigmoidBase
Td,N,V_minPercentageSigmoidBase
minPercentageSigmoidRange
Td,N,V_minPercentageSigmoidRange
minPercentageSigmoidPivot
Td,N,V_minPercentageSigmoidPivot
minPercentageSigmoidAlpha
Td,N,V_minPercentageSigmoidAlpha
%@ needs to be invoked on the main thread!
PIPWindow
SBHidePIPWindowForSwitcherAppExit
H:|[containerView]|
V:|[containerView]|
deviceSetup
SetupDone
setupState
SetupState
TB,D,N,GisDeviceSetup
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIAnimationControllerSteppedAnimator.m
finishSteppingBackwardToStart
finishSteppingBackwardToStart didn't complete!
finishSteppingForwardToEnd
finishSteppingForwardToEnd didn't complete!
T@"SBAnimationStepper",R,N,V_stepper
alarm.dismiss
alarm.snooze
alarm.stop
timer.dismiss
timer.stop
snooze.dismiss
snooze.stop
bedtime.snooze
bedtime.stop
bedtime.dismiss
SBBulletinContextNotificationRequestDataKey
AlarmSnoozeCountdown
BulletinContextSnoozeAlarmFireDate
ALARM_LOCK_LABEL_SHORT
ALARM_LOCK_LABEL
ALARM_ALTERNATE_LABEL_SHORT
ALARM_ALTERNATE_LABEL
TIMER_ALTERNATE_LABEL_SHORT
TIMER_ALTERNATE_LABEL
B32@?0@"NSString"8@"UNNotificationRequest"16^B24
ALARM_SNOOZE
ALARM_STOP
TIMER_STOP
SLEEP_ALARM_BEDTIME_SNOOZE
SLEEP_ALARM_BEDTIME_STOP
SNOOZE_STOP
ALARM_SNOOZING_TITLE
Snoozing
-SNOOZE
Change Battery Device Charge
SBBatteryDeviceChargeTestRecipeIncreaseNotification
SBBatteryDeviceChargeTestRecipeDecreaseNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStatusBarStateAggregator.m
calls to %s are not allowed from within observer notifications
-[SBStatusBarStateAggregator beginCoalescentBlock]
-[SBStatusBarStateAggregator endCoalescentBlock]
unbalanced call to %s
-[SBStatusBarStateAggregator addPostingObserver:]
-[SBStatusBarStateAggregator removePostingObserver:]
v16@?0@?<v@?@"SBStatusBarStateAggregator">8
v16@?0@"SBStatusBarStateAggregator"8
StatusBarStateAggregatorBatteryHandler
showBatteryPercentage
showBatteryLevel
showRSSI
showGSMRSSI
SIMULATOR_CARRIER_STRING
SOS_ONLY
-[SBStatusBarStateAggregator _updateBatteryItems:]
[batteryDevice isInternal]
bluetooth
INTERNET_TETHERING_SINGLE_HOST
INTERNET_TETHERING_MULTIPLE_HOSTS
NO_SIM
BAD_SIM
LOCKED_SIM
NO_SERVICE
SEARCHING
AllowPrefixMatching
StatusBarCarrierName
T@"SBUserSessionController",&,N,G_userSessionController,S_setUserSessionController:,V_lazy_userSessionController
time
quietMode
airplaneMode
signalStrength
service
personName
dataNetwork
battery
batteryPercent
notCharging
bluetoothBattery
alarm
nike
rotationLock
doubleHeight
airPlay
carPlay
student
callForwarding
activity
thermalColor
radar
carplaydock
GPRS
Edge
UMTS
WiFi
Hotspot
draining
charging
charged
T@"SBFolderView",R,N,V_folderView
childFolderContainerView
T@"SBFolderContainerView",&,N
T@"UIView",&,N,V_backgroundView
T@"SBIconLayoutOverrideStrategy",&,N,V_iconLayoutOverrideStrategy
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBMainStatusBarStateProvider.m
Invalid status bar item %d
requestor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStatusBarStateProvider.m
calls to %s are not allowed from within a post
-[SBStatusBarStateProvider beginCoalescentBlock]
-[SBStatusBarStateProvider endCoalescentBlock]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkAppToAlertWorkspaceTransaction.m
No Stark alert to activate
Don't activate already active Stark alert
StarkLauncher
toStarkAlert = %@
T@"SBWorkspaceAlert",R,N,V_activatingAlert
AnimatingAlertDeactivationLegacy
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkAlertToAppWorkspaceTransaction.m
_alert
fromStarkAlert = %@
durationDown
durationUp
Td,N,V_durationDown
Td,N,V_durationUp
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkSystemGestureManager.m
Creating this class requires a car display
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkConnectWorkspaceTransaction.m
if we've got a primaryCarApplication then we must have a mainSceneToIgnoreOcclusion and the processes must match
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkDisconnectWorkspaceTransaction.m
SBStarkTransaction:%@
starkScreenAlertManager
T@"SBAlertManager",R,N,V_starkScreenAlertManager
GdXjx1ixZYvN9Gg8iSf68A
transform.rotation
arab
ClockIconBackgroundSquareArabic
ClockIconBackgroundSquare
-iPadPro
currentNumberingSystem
T@"NSString",C,N,V_currentNumberingSystem
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBRootFolderWithDock.m
com.apple.SpringBoard.Car.NowPlaying-%@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkWorkspaceNowPlayingEntity.m
displayChangeSettings must be of type SBWorkspaceApplication : displayChangeSettings=%@
T@"SBWorkspaceApplication",R,N,V_application
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkAlertToAlertWorkspaceTransaction.m
Can't transition from/to the same alert
fromStarkApp = %@
toApp = %@
animation = %@
v16@?0@"BSUIAnimationFactory"8
Running animation: %@
Running without animation.
fromEntity
T@"SBWorkspaceEntity",R,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBDashBoardScrollGestureController.m
ScrollGestureController must be invalidated before it hits dealloc.
scrollGesture
swallowGesture
edgeGesture
horizontalCancelGesture
T@"<SBDashBoardScrollGestureControllerDelegate>",W,N,V_delegate
T@"UIView",R,N,V_fromLockoutView
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkSceneLayoutViewController.m
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSwitchAppSystemGestureWorkspaceTransaction.m
Trying to do a switch app transaction but I have no initial transition context
SBSwitchAppSystemGestureWorkspaceTransaction _begin-ing
Swipe %p completed to %@ (wasInterrupted = %@).
Interrupting current swipe transaction...
New gesture starting
Waiting for current swipe to finish before starting the next...
Creating new swipe transaction.
StartingNewGesture
SwitchAppSwipe
the primary element is not an application
_trackingSwipeTransaction == transaction
Swipe %p finished animating to %@.
Still tracking gesture
switchAppList
T@"SBSwitchAppList",C,N,V_switchAppList
TB,N,GisActive,V_active
T@"SBDashBoardBehavior",&,N,V_activeBehavior
modalDestination
T@"<SBDashBoardNotificationDestination>",W,N,V_modalDestination
listDestination
T@"<SBDashBoardNotificationDestination>",W,N,V_listDestination
T@"<NCNotificationDestinationDelegate>",W,N,V_notificationDestinationDelegate
com.apple.springboard.sbapplicationshortcutstoremanager
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIStarkStaticAnimationController.m
assistantRootViewController
T@"SBAssistantRootViewController",R,D,N
ResizeUI
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBMainDisplaySceneLayoutResizeUIManager.m
use initWithMainLayoutViewController:
affectedLayoutRoles
delaysRecoilUntilAppsAreObscured
waitingToObscureAppsDuringShowing
recoilingLayout
hidingSideSwitcherGrabber
Trying to show the UI in a bad state
v24@?0@"SBAppResizingPlaceholderView"8@"SBAppResizingPlaceholderView"16
Trying to obscure the apps in a bad state
Trying to obscure the apps when not prepared to
Trying to dismiss the UI in a bad state
TQ,N,V_state
mainLayoutViewController
T@"SBMainDisplaySceneLayoutViewController",R,N,V_mainLayoutViewController
TB,N,GisWaitingToObscureAppsDuringShowing,V_waitingToObscureAppsDuringShowing
showingCompletionHandler
T@?,C,N,V_showingCompletionHandler
TB,N,GisRecoilingLayout,V_recoilingLayout
TB,N,GisHidingSideSwitcherGrabber,V_hidingSideSwitcherGrabber
T@"<SBMainDisplaySceneLayoutResizeUIManagerDelegate>",W,N,V_delegate
TQ,N,V_affectedLayoutRoles
TB,N,V_delaysRecoilUntilAppsAreObscured
showingResizeUI
TB,R,N,GisShowingResizeUI
showingResizeUIOrAlreadyVisible
TB,R,N,GisShowingResizeUIOrAlreadyVisible
dismissingResizeUI
TB,R,N,GisDismissingResizeUI
canDismissResizeUI
idle
appearing (generating app snapshots)
appearing (constructing views)
appearing (generating blurs)
appearing (waiting to obscure)
appearing (animating UI)
dismissing (animating UI)
kSBNotificationsViewControllerInfoSentinel
SBNotificationCenterNotificationsWillAppearNotification
Can't find index to insert %@ (_orderedChronologicalSectionIDs=%@; _sectionIDsToChronologicalSectionInfos=%@)
Attempt to insert section that is already in store: %@
Attempt to insert section for which bulletins already exists: %@
Attempt to remove section for which bulletins remain: %@
Attempt to replace with section that is already in store: %@
Attempt to replace with section for which bulletins already exist: %@
Attempt to replace reference section for which no bulletins exist: %@
Q24@?0@"SBBBBulletinInfo"8@"NSArray"16
Q32@?0@"SBBBBulletinInfo"8@"SBBBBulletinInfo"16@"NSArray"24
B16@?0@"SBNotificationCenterHeaderView"8
com.apple.springboard.notificationcenter.sectionclear
v16@?0@"SBBBBulletinInfo"8
@"NSArray"16@?0@"SBSectionInfo"8
v24@?0@"NSArray"8@"NSDictionary"16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBNotificationsViewController.m
Bulletin missing effective recency date: %@
B16@?0@"SBBBBulletinInfo"8
v32@?0@"SBBBBulletinInfo"8Q16^B24
v16@?0@"SBChronologicalNotificationsSectionInfo"8
orderedSectionIDs
T@"NSArray",R,W,N
sectionIDsToOrderedBulletins
T@"NSMutableDictionary",R,W,N
q24@?0@"SBBBBulletinInfo"8@"SBBBBulletinInfo"16
NSComparator ComparatorForBulletinsInSection(SBBBSectionInfo *__strong, BBSectionOrderRule)
Comparator is nil: section=%@; sectionOrderRule=%ld
SBBacklightPreFadeBacklightActivationCompleteNotification
SBSuspendMotionEffectsBecauseDisplayIsOff
backlight
dontDimOrLockWhileConnectedToPower
 retroactively
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBBacklightController.m
inoutIdleLockDuration
*inoutIdleLockDuration
sendWillTurnOnNotification
backlightChangeSource
isPendingScreenUnblankAfterCACommit
TB,R,N,V_isPendingScreenUnblankAfterCACommit
screenIsOn
screenIsDim
bannerPresentationWindow
oldSettingValue
newSettingValue
_managedkeyObservers
_managedKeyPathObservers
T@"NSHashTable",&,N,V__managedkeyObservers
T@"NSHashTable",&,N,V__managedKeyPathObservers
hide-non-default-apps
shouldShowInternalApplications
shouldShowNonDefaultSystemApplications
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBApplicationRestrictionController.m
observer cannot be nil
B32@?0@"NSString"8Q16^B24
app has been disabled/restricted
SBPortraitFramedSnapshot
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSnapshotUtilities.m
use initWithContext:
slotId
TI,R,N,V_slotId
T@"CAContext",R,N,V_context
com.apple.SpringBoard.SBAppViewSnapshotSlotIdWrapper
v24@?0@8d16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBLockScreenToAppsWorkspaceTransaction.m
This class can only handle the lockscreen
fromLockScreen
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBIconPreviousLocationTracker.m
T@"SBIconModel",&,N,V_iconModel
T@"SBFolder",W,N,V_folder
folderName
T@"NSString",C,N,V_folderName
RootSettings
RootSettings.previous
SBPrototypeSettingsAreAllowedChangeNotification
allowPrototypeSettings
slowDownFactor
-[SBPrototypeController _restorePreviousSettings]
PrototypeController
ShowingPrototypeSettings
PTSettingsController
PreventLockoverSwitch
activeTestRecipe
T@"<SBTestRecipe>",&,N,V_activeTestRecipe
prototypingEnabled
TB,R,N,GisPrototypingEnabled,V_isEnabled
showingSettingsUI
TB,R,N,GisShowingSettingsUI,V_showingSettings
rootSettings
T@"SBRootSettings",R,N,V_rootSettings
prototypeControllerSettings.testRecipeClassName
Notification & CC Materials
_internal_material
Misc System Animations
_internal_droplet
_internal_parallax
_internal_folder
_internal_zoom2
_internal_controlcenter
Lock Screen
_internal_bounce
_internal_appslider
CarPlay
_internal_CarDisplaySettings
_internal_plugin
Screen Fade Animation
_internal_hairfade
Alert Items
_internal_alerts
_internal_notifications_icon
Legibility
_internal_glasses
_internal_wallpapericon
Icon Adaptive Colors
_internal_closeboxsettings
Home Button
_internal_homebutton
_internal_reachforthemoon
_internal_medusa
_internal_statusbarstyleoverrides
_internal_harmony
_internal_appiconforcetouch
Prevent Screen Dim
prototypeControllerSettings.preventLockover
Settings Sheet Alpha
prototypeControllerSettings.windowAlpha
Animation Overrides
Restore Previous Settings
_hasPreviousSettings == YES
T@"SBAppParallaxSettings",&,V_parallaxSettings
folderSettings
T@"SBFolderSettings",&,V_folderSettings
rootAnimationSettings
T@"SBRootAnimationSettings",&,V_rootAnimationSettings
controlCenterSettings
T@"CCUIControlCenterSettings",&,V_controlCenterSettings
appSwitcherSettings
T@"SBAppSwitcherSettings",&,V_appSwitcherSettings
lockScreenSettings
T@"SBLockScreenSettings",&,V_lockScreenSettings
carDisplaySettings
T@"SBCarDisplaySettings",&,V_carDisplaySettings
lockScreenTestPluginSettings
T@"SBLockScreenTestPluginSettings",&,V_lockScreenTestPluginSettings
iconColorSettings
T@"SBIconColorSettings",&,V_iconColorSettings
fadeAnimationSettings
T@"SBFadeAnimationSettings",&,V_fadeAnimationSettings
alertItemsSettings
T@"SBAlertItemsSettings",&,V_alertItemsSettings
notificationCenterSettings
T@"SBNotificationCenterSettings",&,V_notificationCenterSettings
T@"SBLegibilitySettings",&,V_legibilitySettings
T@"SBFWallpaperSettings",&,V_wallpaperSettings
irisWallpaperSettings
T@"SBIrisWallpaperSettings",&,V_irisWallpaperSettings
T@"SBAnimationFactorySettings",&,V_animationSettings
homeButtonSettings
T@"SBHomeButtonSettings",&,V_homeButtonSettings
reachabilitySettings
T@"SBReachabilitySettings",&,V_reachabilitySettings
medusaSettings
T@"SBMedusaSettings",&,V_medusaSettings
statusBarStyleOverridesSettings
T@"SBStatusBarStyleOverridesSettings",&,V_statusBarStyleOverridesSettings
prototypeControllerSettings
T@"SBPrototypeControllerSettings",&,V_prototypeControllerSettings
harmonySettings
T@"SBHarmonySettings",&,V_harmonySettings
appIconForceTouchSettings
T@"SBAppIconForceTouchSettings",&,V_appIconForceTouchSettings
notificationAndCCMaterialSettings
T@"MTMaterialSettings",&,V_notificationAndCCMaterialSettings
miscellaneousSystemAnimationSettings
T@"SBMiscellaneousSystemAnimationSettings",&,V_miscellaneousSystemAnimationSettings
ringer-switch
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUILockscreenSlideAnimationController.m
Must be either activating or deactivating lock screen
AnimatingNCOnLSToApp
lsVC
lsClippedSlideController
fromNC
finishedSliding
waitForAppActivationForContextHostView
appsNeedingContextHosting
TB,N,GisInLostMode,V_inLostMode
v24@?0@"UITableViewRowAction"8@"NSIndexPath"16
shouldUseNarrowWidthForLonelyDismissAction
TB,N,V_shouldUseNarrowWidthForLonelyDismissAction
shouldUseExteriorDismissActionSeparators
TB,N,V_shouldUseExteriorDismissActionSeparators
SBFolderViewWillBeginScrollingNotification
SBFolderViewDidEndScrollingNotification
SBFolderSignificantAnimationReason
SBFolderScrollingReason
SBFolderIconGrabbedReason
IconScrolling
v32@?0@?<v@?>8Q16^B24
_UIScrollViewAnimationEndedNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBFolderView.m
Attempt to set a content offset that was NAN! offset attempted: %@, _scrollView: %@
_ignoreScrollingDidEndNotifications mismatch
scroll view did scroll time: frame=%u, offset: %@, time: %f ms
iconListViewCount
isScalingViewBorrowed
minusPageCount
rotating
TB,N,GisRotating,V_rotating
scalingViewBorrowed
TB,R,N,GisScalingViewBorrowed,V_isScalingViewBorrowed
TB,N,GisScrolling,V_isScrolling
titleTextField
T@"SBFolderTitleTextField",R,N,G_titleTextField
T@"<SBFolderViewDelegate>",W,N,V_delegate
T@"SBFolder",&,N,V_folder
TB,R,N,GisEditing,V_isEditing
Tq,R,N,V_currentPageIndex
iconListViews
T@"NSArray",R,C,N,V_iconListViews
effectiveStatusBarHeight
Td,R,N,V_effectiveStatusBarHeight
accessibilityLegibilitySettings
T@"_UILegibilitySettings",&,N,V_accessibilityLegibilitySettings
animatingToOrientation
Tq,N,V_animatingToOrientation
reachabilityStatusBarEdgeInsets
T{UIEdgeInsets=dddd},N,V_reachabilityStatusBarEdgeInsets
T@"<SBIconScrollViewDelegate>",W,D,N
com.apple.SpringBoard.builtin.PrimarySwitcher
LockScreenPlugin
Launch LoginUI
LoginAppDisablingRotation
ThermalTrap
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIAnimationFadeAlertToLockscreen.m
[lockScreen isKindOfClass:[SBLockScreenViewControllerBase class]]
v16@?0@"SBUIEmergencyCallHostViewController"8
TB,R,N,GisActive,V_active
T@"UIViewController",R,N,V_viewController
T@"<SBLockScreenEmergencyDialerDelegate>",W,N,V_delegate
siri-suggestion-landscape
T@"_SBFVibrantSettings",&,N
hitTestEdgeInsets
T{UIEdgeInsets=dddd},R,N,V_hitTestEdgeInsets
vibrancyAllowed
TB,N,GisVibrancyAllowed,V_vibrancyAllowed
T@"_SBFVibrantSettings",&,N,V_vibrantSettings
SBSwitcherMetahostingHomePageContentViewHomePageContentRequiringReason
significant-animation
spotlight-dismiss
AppSwitcherHomePageCell-%p
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSwitcherMetahostingHomePageContentView.m
AppSwitcherHomePageCell-StatusBar-%p
LOCKSCREEN_SOFTWARE_UPGRADE_ALERT_TITLE
LOCKSCREEN_SOFTWARE_UPGRADE_NEED_TO_RUN_SETUP_ALERT_MESSAGE
LOCKSCREEN_SOFTWARE_UPGRADE_ALERT_MESSAGE
SBLockOrientationForScreenFadeIn
SBLockScreenViewControllerDidBeginScrolling
SBLockScreenPlayingIrisIdleTimerDisabledReason
Restore
ModalBanner
SBLostMode
passcodePage
ActivePlugin
IrisPlaying
SBLockScreenEnterPasscodeUINotification
SBLockScreenExitPasscodeUINotification
SBLockScreenNotificationListDidAppearNotification
SBLockScreenNotificationListDidDisappearNotification
releasing lock screen
camera://?launchsource=lockscreen
scrolling to passcode
WallpaperTransition
NotificationCenterController
ControlCenterController
com.apple.springboard.lockscreen.unlockwithoutbulletins
exit emergency dialer
LockScreenTopGrabber
InfoOverlay
PasscodeOverlay
com.apple.springboard.emptylockscreenpresented
com.apple.fingerprint.sb.passcodeUnlocks
com.apple.fingerprint.sb.passcodeUnlockFails
lock screen view controller
SBNotificationListBannersEnabled
FullscreenBulletin
Charging
Iris Playing
PassKitDisplayChange
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBLockScreenViewController.m
Can't relock immediately because _userAuthController is nil
BioUnlock in Old LockScreen
Buddy
%@ Buddy background
Hiding
Showing
SBLockScreenPlugin
@"UIView"16@?0@"UIView"8
_bioLockScreenActionContext
T@"SBLockScreenActionContext",&,N,G_bioLockScreenActionContext,S_setBioLockScreenActionContext:,V_bioLockScreenActionContext
hasAuthenticatedForNotificationAction
TB,N,G_hasAuthenticatedForNotificationAction,S_setHasAuthenticatedForNotificationAction:,V_hasAuthenticatedForNotificationAction
T@"SBWallpaperAggdLogger",&,N,G_wallpaperAggdLogger,S_setWallpaperAggdLogger:,V_wallpaperAggdLogger
userAuthController
T@"SBFUserAuthenticationController",&,N,G_userAuthController,S_setUserAuthController:,V_userAuthController
T@"_UIFeedbackEventBehavior",&,N,V_feedbackBehavior
T@"<SBLockScreenViewControllerDelegate>",W,N,V_delegate
pluginManager
T@"SBLockScreenPluginManager",R,N,V_pluginManager
toEntity
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBWindow.m
%s - dont' call this function - %@
-[SBWindow initWithFrame:]
layoutStrategy
T@"<SBWindowLayoutStrategy>",R,N,V_layoutStrategy
list
T@"NSArray",&,N,V_list
v32@?0@"NSString"8@"SBUISound"16^B24
playingSounds
T@"NSMutableDictionary",&,N,V_playingSounds
requestsRequiringExplicitKill
T@"NSMutableSet",&,N,V_requestsRequiringExplicitKill
SBIsolatedViewControllerPresentedSomethingReason
SBIsolatedViewControllerTextSelectionInteractionReason
SBIsolatedViewControllerPageAppeared
SBIsolatedViewControllerChangingModesReason
LoginWorkspace
LoginScene
LoginAppContainer
@?<v@?^v>16@?0@?<v@?@"SBLoginAppClientSettingObserverContext">8
v16@?0@"SBLoginAppClientSettingObserverContext"8
T@"<SBLoginAppSceneHosterDelegate>",W,N
hostedAppBundleID
hostedSceneIdentifier
hostedApp
deferHIDEvents
T@"<SBLoginAppSceneHosterDelegate>",W,N,V_delegate
T@"SBApplication",R,D,N
TB,N,V_deferHIDEvents
T@"FBUIScene",&,N,V_scene
T@"SBSUILoginUISceneClientSettings",&,N,V_updatedClientSettings
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkStatusBarStateProvider.m
item
SBMainDisplayPolicyAggregatorCapabilitiesChangedNotification
storeDemoApplicationLockEnabled
In setup mode
In login session
Device is in lost mode
Assistant not supported or disabled
Making an emergency call
Voice control disabled by current application
In call: %s / incoming call exists: %s
Call interrupted lock: %s / ending call for lock button press: %s
In conference
Super modal alert visible
Lock screen has has disabled assistant
Active alert has disabled assistant
We are in store demo app lock mode
voice-control
MG says the device doesn't have the VC capability
Siri is supported and enabled
We are disabled for remote lock
Disabled by the currently running app
We are inCall: %@ incomingCall: %@
We are in a FaceTime call
Lock screen has has disabled voice control
Active alert has disabled voice control
still-camera
MG says the device doesn't have the camera capability
The device doesn't have Camera.app.
lockScreenCameraSupported: %d, cameraRestricted: %d, currently blocked: %d (thermal blocked: %d), isUserFullySetUp: %d, userSetUpExplanation: "%@", ephemeral multi-user: %d
Device is blocked
A modal alert is showing
Command-Tab is visible
Device not configured for multiuser
Device is in Single App Mode
Current session is not a login session
Not available to ephemeral user sessions
Device has enforced home screen layout
ManagedConfiguration policy states: no screen shots allowed
Snapshotting unavailable at the login window.
Haven't unlocked the device yet after a reboot.
Can't use command-tab while a mini alert is visible.
Can't use command-tab while locked.
Can't use command-tab while in buddy mode.
ManagedConfiguration policy states: no control center on the lock screen.
New Control Center available on the old lock screen.
ManagedConfiguration policy states: no notifications view on the lock screen.
New Notification Center available on the old lock screen.
ManagedConfiguration policy states: no today view on the lock screen.
No today view on unauthenticated lock screen when the device is configured as multi-user (e.g. Education mode).
ManagedConfiguration policy states: no today view.
profileConnection
T@"MCProfileConnection",&,N,G_profileConnection,S_setProfileConnection:,V_lazy_profileConnection
T@"SBSetupManager",&,N,G_setupManager,S_setSetupManager:,V_lazy_setupManager
T@"SBFUserAuthenticationController",&,N,G_authenticationController,S_setAuthenticationController:,V_lazy_authenticationController
deviceLockOutController
T@"SBFDeviceLockOutController",&,N,G_deviceLockOutController,S_setDeviceLockOutController:,V_lazy_deviceLockOutController
lockScreenDefaults
T@"SBLockScreenDefaults",&,N,G_lockScreenDefaults,S_setLockScreenDefaults:,V_lazy_lockScreenDefaults
Unlock For Control Center Initiated App Launch
Unlock For Control Center Authenticated UI
-[SBControlCenterSystemAgent isRingerMuted]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBControlCenterSystemAgent.m
-[SBControlCenterSystemAgent setRingerMuted:]
-[SBControlCenterSystemAgent handsetRouteIsSelected]
-[SBControlCenterSystemAgent nameOfPickedRoute]
-[SBControlCenterSystemAgent wirelessDisplayRouteIsPicked]
-[SBControlCenterSystemAgent lockOrientation]
-[SBControlCenterSystemAgent unlockOrientation]
-[SBControlCenterSystemAgent isOrientationLocked]
-[SBControlCenterSystemAgent isInAirplaneMode]
-[SBControlCenterSystemAgent updateWifiDevicePresence]
-[SBControlCenterSystemAgent setWifiPowered:]
-[SBControlCenterSystemAgent wifiDevicePresent]
-[SBControlCenterSystemAgent wifiIsPowered]
Control Center System Agent Client
%K == YES
Translate Progress (%)
translateProgress
Min Translation (%)
minTranslation
Next App Translation (%)
commitToNextAppTranslation
Max Pop Translation (%)
maxPopTranslation
Next App Pop Scale
nextAppPopScale
Orb Gesture Region Max (%)
Force Drives Initial Progress
forceDrivesInitialProgress
Pan Hysteresis
panHysteresis
Play Initial Haptic
playInitialHaptic
Play Commit Haptic
playCommitHaptic
Can Pop
canPop
Dismiss Spring Mass
dismissAnimationMass
Dismiss Spring Stiffness
dismissAnimationStiffness
Dismiss Spring Damping
dismissAnimationDamping
Dismiss Spring Epsilon
dismissAnimationEpsilon
Present Spring Mass
presentAnimationMass
Present Spring Stiffness
presentAnimationStiffness
Present Spring Damping
presentAnimationDamping
Additional Throw Disp. (%)
additionalThrowDisplacement
App Switcher Orb Gesture
TB,V_useOrbGesture
Td,V_translateProgress
Td,V_minTranslation
Td,V_maxPopTranslation
Td,V_commitToNextAppTranslation
Td,V_nextAppPopScale
Td,V_orbGestureRegionMax
TB,V_forceDrivesInitialProgress
Td,V_panHysteresis
TB,V_playInitialHaptic
TB,V_playCommitHaptic
TB,V_canPop
Td,V_dismissAnimationMass
Td,V_dismissAnimationStiffness
Td,V_dismissAnimationDamping
Td,V_dismissAnimationEpsilon
Td,V_presentAnimationMass
Td,V_presentAnimationStiffness
Td,V_presentAnimationDamping
Td,V_additionalThrowDisplacement
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSearchEtceteraPercentDrivenInteractiveTransition.m
use initWithAnimator:...
Max Scroll Distance
Cancel Scrolling If Too Much Drag
Accumulated Drag Threshold Percentage
Max Drag From Veritical
Power of Vertical Direction Squared
Inertial Multiplier Sigmoid Base
Inertial Multiplier Sigmoid Range
Inertial Multiplier Sigmoid Pivot
Inertial Multiplier Sigmoid Alpha
Min Percentage Sigmoid Base
Min Percentage Sigmoid Range
Min Percentage Sigmoid Pivot
Min Percentage Sigmoid Alpha
DashBoard Scroll Modifier Settings
Session
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBPressSequenceValidator.m
Use initWithSettings:
SBPressSequenceValidator must be given non nil settings
SBPressSequence asked to evaluate an up event with no down event present in the sequence
SBPressSequenceValidator found 0 validations when it should have found at least 1
T@"SBPressSequenceSettings",R,N,V_settings
dispatcherDelegate
T@"SBNCNotificationDispatcherDelegate",&,N,V_dispatcherDelegate
notificationSource
T@"NCBulletinNotificationSource",&,N,V_notificationSource
userNotificationAlertSource
T@"SBUserAlertNotificationSource",&,N,V_userNotificationAlertSource
carDestination
T@"SBNotificationLegacyCarDestination",&,N,V_carDestination
T@"SBNCAlertingController",&,N,V_alertingController
T@"SBNotificationBannerDestination",R,N,V_bannerDestination
dashBoardDestination
T@"<SBAlertingNotificationDestination>",R,N,V_dashBoardDestination
T@"SBWalletNotificationSource",R,N,V_walletNotificationSource
T@"SBNotificationCenterDestination",R,N,V_notificationCenterDestination
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBSideSwitcherScrollingItemViewController.m
T@"<SBSideSwitcherScrollingItemViewDelegate>",W,N,V_delegate
scrollEnabled
TB,N,GisScrollEnabled
SBUnscatterAnimationWillBeginNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBFolderController.m
coordinator != nil
SBFolderController
a new list view should have been added
iconListLocation
-[SBFolderController pushFolderIcon:animated:completion:]
TB,N,GisOpen,V_isOpen
TB,N,GisAnimating,V_isAnimating
wasExpandedAfterLastSizeTransition
TB,N,V_wasExpandedAfterLastSizeTransition
dropDestinationPageIndex
Tq,N,V_dropDestinationPageIndex
grabbedIcon
T@"SBIcon",&,N,V_grabbedIcon
lastContext
T@"SBFolderContext",&,N,V_lastContext
fakeStatusBar
T@"SBFakeStatusBarView",&,N,V_fakeStatusBar
outerFolderController
T@"SBFolderController",R,W,N
innerFolderController
T@"SBFolderController",R,N
T@"SBFolderControllerAnimationContext",&,N,V_animationContext
_autoscrollExclusionRegion
folderDelegate
T@"<SBFolderControllerDelegate>",W,N,V_folderDelegate
TB,R,N,GisScrolling
T@"SBFolderView",R,N,V_contentView
<%@: %p; pageIndex: %lu>
SBDashBoardPowerChangeObserverIdentifier
block
T@?,C,N,V_block
connectedToPower
TB,N,GisConnectedToPower,V_connectedToPower
-[SBApplicationLibraryObserver init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBApplicationLibraryObserver.m
B32@?0@"SBApplicationInfo"8Q16^B24
Applications Added
Applications Updated
Applications Removed
Applications Demoted
appLibrary
T@"FBApplicationLibrary",R,N,V_appLibrary
placeholders
SBFakeDuetTriggerWake
SBFakeDuetTriggerUnlock
SBFakeDuetTriggerSwitcher
SBFakeDuetTriggerReturnToSpringBoard
SBFakeDuetTriggerPushNotification
triggers
T@"NSArray",&,N,V_triggers
appsToLaunch
T@"NSArray",&,N,V_appsToLaunch
recommendationHandler
T@?,C,N,V_recommendationHandler
StartBGFetch
BGFetchBundleID
BGFetchSequenceNumber
<%@:%p -> %@ trigger: %@ sequenceNumber: %d
completionHandler
T@?,C,N,V_completionHandler
T@"NSString",R,N,V_bundleID
TQ,R,V_trigger
Ti,R,V_sequenceNumber
TB,R,V_finished
SBBackgoundMultitaskingManagerQueue
v24@?0@"SBBackgroundFetchTask"8Q16
com.apple.springboard.bgContentFetching.%@-%d
AssertionOnBehalfOfBundleID
B12@?0i8
watchdogTimeout
Td,R,N,V_watchdogTimeout
T@"UIFetchContentInBackgroundAction",&,N,V_action
Ti,N,V_sequenceNumber
T@"NSString",C,N,V_bundleID
RetrievedNewData
NoNewDataAvailable
TimedOut
ProcessAssertionInvalidated
Error
AppBecameForeground
Opportunistic
Opportunistic - Debugging
Push Notification
Push Notification - Debugging
Push Notification Retry
Push Notification Retry - Debugging
Low Priority Push Notification
Low Priority Push Notification - Debugging
Fake - Opportunistic
Fake - Push Notification
Fake - Low Priority Push Notification
External Notification
SBAwayViewDimmedNotification
SBAwayViewActivatedNotification
SBLockScreenViewControllerUnlockTextShouldUpdateNotification
SBLockScreenEmergencyCallUIDisplayedNotification
SBLockScreenEmergencyCallUIDismissedNotification
SBLockScreenHidingPasscodeViewDuringCallChangedNotification
SBLockScreenWillAnimateDeactivation
SBLockScreenTransientActiveInterfaceOrientationForUndimReason
Is in screen off mode
Lock screen is undimming
TB,N,GisAuthenticated,V_authenticated
backlightLevel
Td,N,V_backlightLevel
Disable BB Handlers
disableBBHandlers
Test Item
testItemToken
TB,N,V_disableBBHandlers
Tq,N,V_testItemToken
SBUILockOptionsAnimateLockScreenActivationKey
SBUILockOptionsAnimateLockScreenActivationShouldDimKey
SBUILockOptionsLockAutomaticallyKey
SBUILockOptionsUseScreenOffModeKey
SBUILockOptionsAfterCallKey
SBUILockOptionsForceLockKey
SBUILockOptionsAnimationTransactionProviderKey
SBUIUnlockOptionsBypassPasscodeKey
SBUIUnlockOptionsTurnOnScreenFirstKey
SBUIUnlockOptionsStartFadeInAnimation
SBUIUnlockOptionsNoPasscodeAnimationKey
SBLockScreenUIWillLockNotification
SBLockScreenUIDidLockNotification
SBLockScreenUIRelockedNotification
SBLockScreenUndimmedNotification
SBLockScreenDimmedNotification
SBLockScreenExternalPartyWantsUILockNotification
SBLockScreenExternalPartyWantsUIUnlockNotification
SBLockScreenPictureInPictureHiddenReason
SBSuppressKeyboardForUILock
SBUseModernUILockScreen
SBApplicationRequestedDeviceUnlock
com.apple.springboard.toggleLockScreen
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBLockScreenManager.m
Unexpectedly created SBLockScreenManager before UIApplication instance was created.
SpringBoard - SBLockScreenManager
LOCK BUTTON
KEYBOARD
IDLE TIMER
SMART COVER
PLUGIN
NOTIFICATION CENTER
LIFT-TO-WAKE
UNKNOWN (%d)
AttemptLock
-[SBLockScreenManager lockUIFromSource:withOptions:completion:]
Bio authentication attempt
Wallet pre-arm assertion dictionary is null before adding a new assertion: %@).
ForButtonPress
AfterCall
Lock button
UI unlocked
Attempted to toggle lock state when we don't allow locking/unlocking.
UI Unlocked
com.apple.passcode.PasscodeType
Global 'allow UIUnlock' flag is set to NO
the new lock screen expects user authentication before unlock can happen
SBLockScreenBusyForLostMode
SBLockScreenUnlockRequest
[request isKindOfClass: SBLockScreenUnlockRequestClass]
Activate LockScreen
Deactivate Lockscreen
-[SBLockScreenManager _performLockScreenAlertDeactivationTransition]_block_invoke
UI Locked
Allows DisablePasscodeLockAssertion
Allow Locking/Unlocking
mesaCoordinator
lockScreenViewController
com.apple.springboard.lockcomplete
UI unlock attempt
Setup
Device blocked
Phone call
Screen off
LockScreenNotTopMost
SBLockScreenManagerPendAlertsForLostMode
SBLockScreenManagerBusyForLostMode
entering lost mode
HandleActivationChanged
UIUnlocking
TB,N,GisUIUnlocking,V_uiUnlocking
liftToWakeManager
T@"SBLiftToWakeManager",&,N,G_liftToWakeManager,S_setLiftToWakeManager:,V_liftToWakeManager
unlockActionBlock
T@?,C,N,V_unlockActionBlock
T@"SBLockScreenViewControllerBase",R,N,V_lockScreenViewController
T@"SBDashBoardViewController",R,N
isUILocked
TB,R,V_isUILocked
isWaitingToLockUI
TB,R,V_isWaitingToLockUI
shouldHandlePocketStateChanges
shouldPlayLockSound
isLockScreenActive
isLockScreenVisible
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkBannerView.m
expected item to be subclass of SBStarkBannerItem
topLabel
bottomLabel
Bluetooth75-switcher
Location75-switcher
Carplay75-switcher
Aux75-switcher
Wake75-switcher
com.apple.macbookair
MacBookAir75-switcher
com.apple.mac.laptop
MacBookPro75-switcher
com.apple.macmini
MacMini75-switcher
com.apple.mac
Mac75-switcher
com.apple.watch
Watch75-switcher
com.apple.iphone
iPhone75-switcher
com.apple.ipad
iPad75-switcher
com.apple.ipod
com.apple.apple-tv
ATV75-switcher
v16@?0@"SBStarkBannerItem"8
Sample Notification - Blah
Sample Notification - Blah Blah
Bulletin Data Provider
(%.f, %.f)
<SBWindowHideRequest: range = %@; reason = %@>
windowLevelRange
T{SBWindowLevelRange_struct=dd},V_windowLevelRange
T@"NSString",C,V_reason
<SBWindowHideState: hidden = %@; desiredAlpha = %.f>
TB,GisHidden,V_hidden
desiredAlpha
Td,V_desiredAlpha
SBWindowHidingManager
Active hide range is: %@
These are our active hide requests:
Context %p (%@): %@
These are our known windows:
Window %p [%@]: %@
There are additional UIKit windows that we don't know about:
%p: %@ (%@)
SBWindow
NOT an SBWindow
v24@?0@"UIWindow"8^B16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStartupTransitionToSetup.m
use initWithDestination:context:initialRestartState:
Setting orientation to Portrait for boot to Setup.
StartupTransitionToSetup
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBStarkBannerSource.m
must pass a configuration
must pass an allowed target identifier
target/source inconsistency error: expected subclass of SBStarkBannerItem
B32@?0@"SBStarkBannerItem"8Q16^B24
-[SBStarkBannerSource newBannerViewForContext:]
AlertToPhone
viewToAnimate
T@"UIView",&,N,G_viewToAnimate,S_setViewToAnimate:,V_viewToAnimate
d24@?0d8d16
SBValueConvergenceAnimator cannot have a frame interval less than 1
Td,N,V_startTime
lastFireTime
Td,N,V_lastFireTime
elapsedTime
currentValue
Td,N,V_currentValue
Td,N,V_targetValue
finishesOnValueConvergence
TB,N,V_finishesOnValueConvergence
convergenceFunction
T@?,C,N,V_convergenceFunction
applier
T@?,C,N,V_applier
frameInterval
Tq,N,V_frameInterval
v24@?0@"SBValueConvergenceAnimator"8^B16
T@"<SBStarkBannerTargetObserver>",W,N,V_observer
pausedForUserInteraction
TB,N,GisPausedForUserInteraction
currentContext
T@"SBUIBannerContext",R,N,V_currentContext
T@"SBFolderZoomSettings",&,D,N
T@"SBFolderIcon",R,D,N
T@"SBFolderIconView",R,D,N
SBDisableMesaReasonModalAlertItem
FadeAppToRemoteAlert
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBUIAnimationFadeAppsToRemoteAlert.m
AppsToRemoteAlert
com.apple.springboard.mesa.unlockCredential
statusBarStyle
statusBarHidden
ccRevealMode
ncRevealMode
ccAmbiguousActivationMargin
finishedLaunchingFrontmost
statusBarWindowID
starkStatusBarStyle
starkStatusBarHidden
pageViewController
T@"UIViewController<SBDashBoardPageViewControllerProtocol>",W,N
T@"UIViewController<SBDashBoardPageViewControllerProtocol>",W,N,V_pageViewController
BottomCollisionBoundary
TopCollisionBoundary
Td,N,V_gravity
Td,N,V_elasticity
Td,N,V_friction
Td,N,V_resistance
Td,N,V_minVelocityToAssist
Td,N,V_maxVelocityToAssist
Td,N,V_maxVelocityAssistance
hapticBehavior
T@"_UIFeedbackEdgeBehavior",&,N,V_hapticBehavior
boundaryInsets
T{UIEdgeInsets=dddd},N,V_boundaryInsets
Buddy Fake Logo
Buddy Localization Cycle
T@"SBLockScreenViewController",W,N,V_lockScreenViewController
T@"NSDictionary",C,N,V_localizedStrings
T@"NSArray",C,N,V_stringsOrdering
TQ,N,V_currentStringIndex
T@"NSString",C,N,V_wifiPrimaryLanguage
T@"NSString",C,N,V_telephonyPrimaryLanguage
T@"NSTimer",&,N,V_stringCycleTimer
showingBootLogo
TB,N,GisShowingBootLogo,V_showingBootLogo
startsWithBlackBackground
TB,N,V_startsWithBlackBackground
hasResultsFromWifiScan
TB,N,V_hasResultsFromWifiScan
TB,N,V_shouldResetOrderingOnNextCycle
ENTER_PUK_TITLE
PUK_LOCKED_ENTER_PIN
PUK_LOCKED_CONFIRM_PIN
PUK_LOCKED_ENTER_PIN_LABEL
PUK_LOCKED_CONFIRM_PIN_LABEL
PUK_ENTRY_SUCCESS
PUK_UNLOCK_FAILED_TITLE
PUK_LOCKED_PIN_MISMATCH_LABEL
com.apple.springboard.downloadingicons.imagegeneration
<%@: %p; %@> app proxy = %@, properties:
            Progress=%f
            Done=%@
            Active=%@
            Paused=%@
            Pausable=%@
            Cancellable=%@
            Downloading=%@
            Installing=%@
            ContentRestricted=%@
            placeholderDisplayName=%@ (current proxy value=%@)
            iconLabel=%@
            installType=%i
com.apple.springboard.iconImageAvailable
DOWNLOADING_ICON_LABEL
SBApplicationPlaceholder-%d-%@
Reloading icon image.
PAUSED_ICON_LABEL
RESTRICTED_ICON_LABEL
WAITING_ICON_LABEL
INSTALLING_ICON_LABEL
placeholderProxy
T@"FBApplicationPlaceholder",&,N,V_placeholderProxy
applicationBundleID
T@"NSString",C,N,V_applicationBundleID
applicationDisplayName
T@"NSString",C,N,V_applicationDisplayName
T@"<SBApplicationPlaceholderDelegate>",W,N,V_delegate
prioritizable
TB,R,N,GisPrioritizable
pausable
TB,R,N,GisPausable
TB,R,N,GisCancelable
LockOut
LoginWindow
com.apple.springboard.recovery.enabled
Force data recovery
dataRecoveryRequired
v16@?0@"<SBNotificationSectionSettingsObserver>"8
v24@?0@"<SBNotificationSectionSettingsObserver>"8^B16
bbObserver
T@"BBObserver",&,N,V_bbObserver
settingsObservers
T@"NSMutableSet",&,N,V_settingsObservers
sectionOrderRule
Tq,R,N,V_sectionOrderRule
sectionOrder
T@"NSArray",R,C,N,V_sectionOrder
SBApplicationPlaceholdersNetworkUsageDidChangeNotification
SBApplicationPlaceholdersDidChangeNotification
__placeholdersAdded
__placeholdersModified
__placeholdersRemoved
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoard_Sim/SpringBoard-3563.88.4.1/SBApplicationPlaceholderController.m
%s: should be called on the main thread only.
-[SBApplicationPlaceholderController applicationPlaceholdersAdded:]
-[SBApplicationPlaceholderController applicationPlaceholdersInstalled:]
-[SBApplicationPlaceholderController applicationPlaceholdersCancelled:]
-[SBApplicationPlaceholderController _processPendingProxies]
Processing placeholder to add.
Added placeholder to icon list.
Attempt to remove placeholder we are no longer tracking.
Proessing placeholder to remove.
Removing downloading icon because app icon isn't visible.
Removing downloading icon because it was cancelled or no application exists.
Attempt to remove placeholder, but no downloading icon was found.
Replacing downloading icon with application icon.
Replacing downloading icon with application icon; unable to find downloading icon.
Slow Animations
slowAnimations
Slow Factor
TB,N,V_slowAnimations
Td,N,V_slowDownFactor
Blur Folder Icons
blurryFolderIcons
Blur Close-Boxes
blurryCloseBoxes
Use Blurs (wallpaper permitting)
Max Saturation Boost
maxSaturationBoost
Max Saturation
maxSaturation
Max Brightness Boost
maxBrightnessBoost
Max Brightness
maxBrightness
Color Alpha
colorAlpha
White Alpha
whiteAlpha
Adaptive Tint
Suppress Icon Jitter
suppressJitter
Close-Boxes Everywhere
closeBoxesEverywhere
Close-Box Debug
Icon Colors
TB,N,V_blurryFolderIcons
TB,N,V_blurryCloseBoxes
Td,N,V_maxSaturationBoost
Td,N,V_maxSaturation
Td,N,V_maxBrightnessBoost
Td,N,V_maxBrightness
Td,N,V_colorAlpha
Td,N,V_whiteAlpha
TB,N,V_suppressJitter
TB,N,V_closeBoxesEverywhere
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>application-identifier</key>
<string>com.apple.springboard</string>
<key>aps-connection-initiate</key>
<true/>
<key>checklessPersistentURLTranslation</key>
<true/>
<key>com.apple.BTServer.allowRestrictedServices</key>
<true/>
<key>com.apple.BTServer.programmaticPairing</key>
<true/>
<key>com.apple.CallHistory.sync.allow</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>preferences-reset</string>
<string>voice</string>
<string>identity</string>
<string>phone</string>
<string>carrier-settings</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.CoreRoutine.LocationOfInterest</key>
<true/>
<key>com.apple.MobileInternetSharing.allow</key>
<true/>
<key>com.apple.QuartzCore.displayable-context</key>
<true/>
<key>com.apple.QuartzCore.global-capture</key>
<true/>
<key>com.apple.QuartzCore.secure-capture</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.SystemConfiguration.SCDynamicStore-write-access</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.AutoWake.xml</string>
<string>preferences.plist</string>
<string>com.apple.radios.plist</string>
</array>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.assistant.client</key>
<true/>
<key>com.apple.authkit.writer.internal</key>
<true/>
<key>com.apple.avfoundation.allow-still-image-capture-shutter-sound-manipulation</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.backboard.displaybrightness</key>
<true/>
<key>com.apple.backboardd.cancelsTouchesInHostedContent</key>
<true/>
<key>com.apple.backboardd.hostCanRequireTouchesFromHostedContent</key>
<true/>
<key>com.apple.backboardd.lastUserEventTime</key>
<true/>
<key>com.apple.backboardd.launchapplications</key>
<true/>
<key>com.apple.bulletinboard</key>
<true/>
<key>com.apple.bulletinboard.dataprovider</key>
<true/>
<key>com.apple.bulletinboard.observer</key>
<true/>
<key>com.apple.bulletinboard.serverconduit</key>
<true/>
<key>com.apple.bulletinboard.settings</key>
<true/>
<key>com.apple.bulletinboard.systemstate</key>
<true/>
<key>com.apple.bulletinboard.utilities</key>
<true/>
<key>com.apple.cards.all-access</key>
<true/>
<key>com.apple.coreaudio.allow-amr-decode</key>
<true/>
<key>com.apple.coreaudio.allow-speex-codec</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.batterysaver.allow</key>
<true/>
<key>com.apple.coremedia.allow-pre-wiring-pixel-buffers</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.coremedia.virtualdisplaysession</key>
<true/>
<key>com.apple.developer.extension-host.widget-extension</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.developer.ubiquity-kvstore-identifier</key>
<string>com.apple.springboard</string>
<key>com.apple.duet.expertcenter.consumer</key>
<true/>
<key>com.apple.frontboard.app-badge-value-access</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboard.shutdown</key>
<true/>
<key>com.apple.homekit.private-spi-access</key>
<true/>
<key>com.apple.iapd.accessibility</key>
<true/>
<key>com.apple.icloud.findmydeviced.access</key>
<true/>
<key>com.apple.icloud.fmfd.access</key>
<true/>
<key>com.apple.imagent</key>
<true/>
<key>com.apple.imagent.av</key>
<true/>
<key>com.apple.imagent.chat</key>
<true/>
<key>com.apple.intents.extension.discovery</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.keystore.stash.access</key>
<true/>
<key>com.apple.launchservices.clearadvertisingid</key>
<true/>
<key>com.apple.locationd.activity</key>
<true/>
<key>com.apple.locationd.authorizeapplications</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.prompt_behavior</key>
<true/>
<key>com.apple.locationd.region_proxy_service</key>
<true/>
<key>com.apple.locationd.status</key>
<true/>
<key>com.apple.locationd.usage_oracle</key>
<true/>
<key>com.apple.locationd.vehicle_data</key>
<true/>
<key>com.apple.lsapplicationproxy.deviceidentifierforvendor</key>
<true/>
<key>com.apple.managedconfiguration.mdmd-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.mediastream.mstreamd-access</key>
<true/>
<key>com.apple.messages.composeclient</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.mkb.usersession.loginwindow</key>
<true/>
<key>com.apple.mobile.deleted.AllowFreeSpace</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.logoutcritical</key>
<true/>
<key>com.apple.mobilemail.mailservices</key>
<true/>
<key>com.apple.multitasking.systemappassertions</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.nfcd.hwmanager</key>
<true/>
<key>com.apple.nfcd.seshat</key>
<true/>
<key>com.apple.notificationcenter.widgetcontrollerhascontent</key>
<true/>
<key>com.apple.payment.configuration</key>
<true/>
<key>com.apple.payment.presentation</key>
<true/>
<key>com.apple.private.CallHistory.read</key>
<true/>
<key>com.apple.private.CoreAuthentication.SPI</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>InverseDeviceID</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.appleaccount.app-hidden-from-icloud-settings</key>
<true/>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.canGetAppLinkInfo</key>
<true/>
<key>com.apple.private.canModifyAppLinkPermissions</key>
<true/>
<key>com.apple.private.carkit</key>
<true/>
<key>com.apple.private.carkit.app</key>
<true/>
<key>com.apple.private.clouddocs.can-grant-access-to-document</key>
<true/>
<key>com.apple.private.corerecents</key>
<true/>
<key>com.apple.private.coreservices.canopenactivity</key>
<true/>
<key>com.apple.private.coreservices.lsuseractivityd.bestappsuggestion</key>
<true/>
<key>com.apple.private.corespotlight.search.internal</key>
<true/>
<key>com.apple.private.externalaccessory.showallaccessories</key>
<true/>
<key>com.apple.private.game-center</key>
<array>
<string>Account</string>
<string>Games</string>
</array>
<key>com.apple.private.game-center.bypass-authentication</key>
<true/>
<key>com.apple.private.healthkit</key>
<true/>
<key>com.apple.private.healthkit.read_authorization_override</key>
<array>
<string>HKCategoryTypeIdentifierSleepAnalysis</string>
</array>
<key>com.apple.private.healthkit.source_override</key>
<string>com.apple.mobiletimer</string>
<key>com.apple.private.healthkit.write_authorization_override</key>
<array>
<string>HKCategoryTypeIdentifierSleepAnalysis</string>
</array>
<key>com.apple.private.hid.client.event-dispatch</key>
<true/>
<key>com.apple.private.hid.client.service-protected</key>
<true/>
<key>com.apple.private.hid.manager.client</key>
<true/>
<key>com.apple.private.icfcallserver</key>
<true/>
<key>com.apple.private.ids.idsquery</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.bulletinboard</string>
<string>com.apple.madrid</string>
<string>com.apple.private.alloy.siri.phrasespotter</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.bulletinboard</string>
<string>com.apple.private.alloy.siri.phrasespotter</string>
</array>
<key>com.apple.private.ids.registration-reset</key>
<true/>
<key>com.apple.private.imavcore.imavagent</key>
<true/>
<key>com.apple.private.imcore.imdpersistence.database-access</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.imcore.spi.database-access</key>
<true/>
<key>com.apple.private.in-app-payments</key>
<true/>
<key>com.apple.private.kernel.darkboot</key>
<true/>
<key>com.apple.private.kernel.jetsam</key>
<true/>
<key>com.apple.private.librarian.can-get-application-info</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/ActivationState</string>
<string>NULL/BrickState</string>
<string>NULL/SBLockdownEverRegisteredKey</string>
<string>com.apple.xcode.developerdomain/DeveloperStatus</string>
<string>NULL/BuildExpireTime</string>
</array>
<key>com.apple.private.lockdown.finegrained-remove</key>
<array>
<string>com.apple.mobile.iTunes.store/AppleID</string>
<string>com.apple.mobile.data_sync/Contacts</string>
<string>com.apple.mobile.data_sync/Calendars</string>
<string>com.apple.mobile.data_sync/Bookmarks</string>
<string>com.apple.mobile.data_sync/Mail Accounts</string>
</array>
<key>com.apple.private.mis.online_auth_agent</key>
<true/>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>UninstallForLaunchServices</string>
<string>SetCapabilities</string>
<string>Lookup</string>
</array>
<key>com.apple.private.mobilesafari.searchengine</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.networkextension.configuration</key>
<true/>
<key>com.apple.private.persona.read</key>
<true/>
<key>com.apple.private.security.container-manager</key>
<true/>
<key>com.apple.private.subscriptionservice.internal</key>
<true/>
<key>com.apple.private.suggestions</key>
<true/>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceReminders</string>
<string>kTCCServicePhotos</string>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceCamera</string>
<string>kTCCServiceWillow</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.private.tty.settings</key>
<true/>
<key>com.apple.private.ubiquity-kvstore-access</key>
<array>
<string>com.apple.weather</string>
<string>com.apple.stocks</string>
<string>com.apple.backboardd</string>
<string>com.apple.Accessibility</string>
<string>com.apple.Accessibility.SwitchControl</string>
<string>com.apple.Accessibility.TouchAccommodations</string>
<string>com.apple.AssistiveTouch</string>
<string>com.apple.HearingAids</string>
<string>com.apple.SpeakSelection</string>
<string>com.apple.VoiceOverTouch</string>
<string>com.apple.ZoomTouch</string>
</array>
<key>com.apple.private.xpc.launchd.app-server</key>
<true/>
<key>com.apple.remotenotification.access</key>
<true/>
<key>com.apple.remotenotification.preferences</key>
<true/>
<key>com.apple.securebackupd.access</key>
<true/>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.weather</string>
</array>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.sharedpclogging</string>
</array>
<key>com.apple.sharing.CoordinatedAlerts</key>
<true/>
<key>com.apple.sos.trigger</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.activateawayviewplugins</key>
<true/>
<key>com.apple.springboard.allowallcallurls</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.openurlswhenlocked</key>
<true/>
<key>com.apple.springboard.setbadgestring</key>
<true/>
<key>com.apple.springboard.shortcutitems.fullaccess</key>
<true/>
<key>com.apple.springboard.statusbarstyleoverrides</key>
<true/>
<key>com.apple.symptom_analytics.query</key>
<true/>
<key>com.apple.symptom_analytics.refresh</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-calls</string>
<string>modify-calls</string>
<string>access-call-providers</string>
</array>
<key>com.apple.timed</key>
<true/>
<key>com.apple.tzlink.allow</key>
<true/>
<key>com.apple.usernotification.notificationschedulerproxy</key>
<true/>
<key>com.apple.videoconference.allow-conferencing</key>
<true/>
<key>com.apple.visualvoicemail.client</key>
<true/>
<key>com.apple.voiceservices.tts.customvoice</key>
<true/>
<key>com.apple.voicetrigger.voicetriggerservice</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>fairplay-client</key>
<string>1172857363</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.preferences</string>
</array>
<key>vm-pressure-level</key>
<true/>
</dict>
</plist>
333333
