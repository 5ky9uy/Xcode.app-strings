ShouldNotifyNextUnlock
com.apple.paired-unlock
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v8@?0
v20@?0B8@"NSError"12
v28@?0B8B12B16@"NSError"20
peer
T@"PUPeer",R,N,V_peer
connections
T@"NSMutableSet",R,N,V_connections
gizmoWantsNotificationOnNextUnlock
TB,N
setting up signal handler for %@
init
alloc
setDelegate:
initWithMachServiceName:
resume
sharedUnlockManager
disableUnlockWithDevice:
requestRemoteDeviceDisableOnlyRemoteUnlock
invalidate
copy
countByEnumeratingWithState:objects:count:
dealloc
didPairForUnlock:error:
didUnpairForUnlock:error:
didEnableOnlyRemoteUnlock:error:
didDisableOnlyRemoteUnlock:error:
remoteDeviceDidCompletePasscodeAction:error:
remoteDeviceDidUnlock
remoteDeviceDidRemoveLockout:error:
didGetRemoteDeviceHasPasscode:isLocked:isUnlockOnly:error:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
interfaceWithProtocol:
setRemoteObjectInterface:
checkIn
pairForUnlockWithPasscode:
unpairForUnlock
enableOnlyRemoteUnlockWithPasscode:
disableOnlyRemoteUnlock
requestRemoteDevicePasscodeAction:type:
requestRemoteDeviceUnlockNotification
requestRemoteDeviceRemoveLockout
didCompletePasscodeAction:error:
getRemoteDeviceState
setExportedInterface:
setExportedObject:
_removeConnection:
setInvalidationHandler:
addObject:
count
numberWithUnsignedInteger:
processIdentifier
removeObject:
remoteObjectProxy
requestPasscodeAction:type:existingPasscode:completion:
setGizmoWantsNotificationOnNextUnlock:
pairForUnlockWithPasscode:completionHandler:
connections
requestRemoteDevicePasscodeAction:type:completionHandler:
unpairForUnlockWithCompletionHandler:
enableOnlyRemoteUnlockWithPasscode:completionHandler:
disableOnlyRemoteUnlockWithCompletionHandler:
peer:didNotifyStateHasPasscode:isPasscodeLocked:isUnlockOnly:error:
getRemoteDeviceState:
requestRemoteDeviceRemoveLockout:
listener:shouldAcceptNewConnection:
peer:didPairForUnlock:error:
peerRemoteDeviceDidUnlock:
peer:remoteDeviceRequestsPasscodeAction:type:existingPasscode:completionHandler:
peer:wantsNotificationOfNextUnlock:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
_handlePasscodeRemoval
gizmoWantsNotificationOnNextUnlock
.cxx_destruct
peer
_listener
_requestPasscodeActionHandler
_actionServerConnection
_peer
_connections
currentRunLoop
numberWithInt:
dictionaryWithObjects:forKeys:count:
objectForKeyedSubscript:
integerValue
setObject:forKeyedSubscript:
numberWithInteger:
Not unpairing now; will do so when watch next connects
Server got new connection
Server connection invalidated!
received connection %@
_connections (%@) = %@
Server lost connection %@ to PID %d
Remote device requested passcode action %li
Client connection checked in
SIGTERM has been received, exiting...
v28@0:8B16@20
v28@0:8B16@"NSError"20
v16@0:8
v36@0:8B16B20B24@28
v36@0:8B16B20B24@"NSError"28
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"NSString"16
v32@0:8q16q24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v36@0:8@16B24@28
v36@0:8@"PUPeer"16B24@"NSError"28
v24@0:8@"PUPeer"16
v44@0:8@16B24B28B32@36
v44@0:8@"PUPeer"16B24B28B32@"NSError"36
v56@0:8@16q24q32@40@?48
v56@0:8@"PUPeer"16q24q32@"NSString"40@?<v@?B@"NSError">48
v28@0:8@16B24
v28@0:8@"PUPeer"16B24
v32@0:8@16@24
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v20@0:8B16
@"NSXPCListener"
@"NSXPCConnection"
@"PUPeer"
@"NSMutableSet"
PUUnlockClient
NSObject
PUUnlockServer
PUServer
NSXPCListenerDelegate
PUPeerDelegate
MCProfileConnectionObserver
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>FAKETEAMID.</string>
<key>com.apple.BTServer.allowQuickRSSIRead</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.pairedunlock</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.pairedunlock</string>
</array>
<key>com.apple.private.sharing.unlock-manager</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.paired-unlock</string>
</array>
</dict>
</plist>
