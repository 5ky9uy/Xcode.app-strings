APSAWDAirPlayPhotoSessionEndedOnServer
NSCopying
APSAWDAirPlayAudioSessionStartedOnClient
APSAWDAirPlayVideoSessionStartedOnClient
APSAWDAirPlayScreenSessionEndedOnServer
APSAWDAirPlayVideoSessionEndedOnServer
APSAWDAirPlayPhotoSessionStartedOnServer
APSAWDAirPlaySlideshowSessionEndedOnServer
APSAWDAirPlayScreenSessionEndedOnClient
APSAWDAirPlayScreenSessionStartedOnServer
APSAWDAirPlaySlideshowSessionEndedOnClient
APSAWDAirPlayDiscoveryPresenceModeStats
APSAWDAirPlaySlideshowSessionStartedOnClient
APSAWDAirPlayVideoSessionEndedOnClient
APSAWDAirPlayAudioSessionEndedOnClient
APSAWDAirPlayPhotoSessionEndedOnClient
APSAWDAirPlayDiscoveryDetailedModeStats
APSAWDAirPlayVideoSessionStartedOnServer
APSAWDAirPlayAudioSessionEndedOnServer
APSAWDAirPlaySlideshowSessionStartedOnServer
APSAWDAirPlayDiscoveryPeer
APSAWDAirPlayAudioSessionStartedOnServer
APSAWDAirPlayPhotoSessionStartedOnClient
APSAWDAirPlayScreenSessionStartedOnClient
hasSessionUUID
TB,R,N
sessionUUID
T@"NSString",&,N,V_sessionUUID
hasTimestamp
TB,N
timestamp
TQ,N,V_timestamp
hasReason
reason
Ti,N,V_reason
hasDuration
duration
TI,N,V_duration
hasTotalPhotos
totalPhotos
TI,N,V_totalPhotos
hasMinPhotoBytes
minPhotoBytes
TI,N,V_minPhotoBytes
hasMaxPhotoBytes
maxPhotoBytes
TI,N,V_maxPhotoBytes
hasMinBPS
minBPS
TI,N,V_minBPS
hasMaxBPS
maxBPS
TI,N,V_maxBPS
%@ %@
hasStatus
status
Ti,N,V_status
hasTransportType
transportType
TI,N,V_transportType
hasCompressionType
compressionType
TI,N,V_compressionType
hasEncryptionType
encryptionType
TI,N,V_encryptionType
hasBonjourMs
bonjourMs
TI,N,V_bonjourMs
hasConnectMs
connectMs
TI,N,V_connectMs
hasAuthMs
authMs
TI,N,V_authMs
hasAnnounceMs
announceMs
TI,N,V_announceMs
hasSetupAudioMs
setupAudioMs
TI,N,V_setupAudioMs
hasSetupScreenMs
setupScreenMs
TI,N,V_setupScreenMs
hasRecordMs
recordMs
TI,N,V_recordMs
hasDidFallbackToInfraToAvoidP2POverDFS
didFallbackToInfraToAvoidP2POverDFS
TB,N,V_didFallbackToInfraToAvoidP2POverDFS
hasAwdlRSSI
awdlRSSI
Ti,N,V_awdlRSSI
hasInfraRSSI
infraRSSI
Ti,N,V_infraRSSI
hasAwdlCCA
awdlCCA
Ti,N,V_awdlCCA
hasInfraCCA
infraCCA
Ti,N,V_infraCCA
hasInfraSNR
infraSNR
Ti,N,V_infraSNR
AirPlayMetrics
AirPlay
APSLogUtils
AirPlayError
OSStatus APSSignalErrorAt(OSStatus, const char *, const char *)
%s signalled %#m: %s
void APSLogErrorAt(OSStatus, const char *, int, Boolean)
%s:%d: %s error %#m
%s:%d: false condition
hasServerModel
serverModel
T@"NSString",&,N,V_serverModel
hasServerVersion
serverVersion
T@"NSString",&,N,V_serverVersion
hasType
type
TI,N,V_type
hasFileBytes
fileBytes
TQ,N,V_fileBytes
hasBitrate
bitrate
TI,N,V_bitrate
hasAudioOnly
audioOnly
TI,N,V_audioOnly
hasInfoMs
infoMs
TI,N,V_infoMs
hasSecureConnectionMs
secureConnectionMs
TI,N,V_secureConnectionMs
hasPostAuthMs
postAuthMs
TI,N,V_postAuthMs
hasFramesReceived
framesReceived
TI,N,V_framesReceived
hasConfigChanges
configChanges
TI,N,V_configChanges
hasClearScreens
clearScreens
TI,N,V_clearScreens
hasUnclearScreens
unclearScreens
TI,N,V_unclearScreens
hasSuspends
suspends
TI,N,V_suspends
hasResumes
resumes
TI,N,V_resumes
hasForcedRefreshes
forcedRefreshes
TI,N,V_forcedRefreshes
hasNegativeAheadFrames
negativeAheadFrames
TI,N,V_negativeAheadFrames
hasCaFrames
caFrames
TI,N,V_caFrames
hasCaDrops
caDrops
TI,N,V_caDrops
hasAudioLost
audioLost
TI,N,V_audioLost
hasAudioUnrecovered
audioUnrecovered
TI,N,V_audioUnrecovered
hasAudioLate
audioLate
TI,N,V_audioLate
hasAvgRTT
avgRTT
TI,N,V_avgRTT
hasAvgAhead
avgAhead
Ti,N,V_avgAhead
hasAvgReceiveMs
avgReceiveMs
Ti,N,V_avgReceiveMs
hasPauses
pauses
TI,N,V_pauses
hasRewinds
rewinds
TI,N,V_rewinds
hasFastFowards
fastFowards
TI,N,V_fastFowards
hasReadyToPlayMs
readyToPlayMs
TI,N,V_readyToPlayMs
hasStallCount
stallCount
TI,N,V_stallCount
hasBandwidthStdDev
bandwidthStdDev
Td,N,V_bandwidthStdDev
hasBandwidthMean
bandwidthMean
Td,N,V_bandwidthMean
hasBandwidthMax
bandwidthMax
Td,N,V_bandwidthMax
hasLocalFairPlayCount
localFairPlayCount
TI,N,V_localFairPlayCount
hasLocalNonFairPlayCount
localNonFairPlayCount
TI,N,V_localNonFairPlayCount
hasRemoteFairPlayCount
remoteFairPlayCount
TI,N,V_remoteFairPlayCount
hasRemoteNonFairPlayCount
remoteNonFairPlayCount
TI,N,V_remoteNonFairPlayCount
hasClientModel
clientModel
T@"NSString",&,N,V_clientModel
hasClientVersion
clientVersion
T@"NSString",&,N,V_clientVersion
hasSkipBacks
skipBacks
TI,N,V_skipBacks
hasSkipAheads
skipAheads
TI,N,V_skipAheads
hasFramesSent
framesSent
TI,N,V_framesSent
hasAvgEstimatedBandwidth
avgEstimatedBandwidth
TI,N,V_avgEstimatedBandwidth
hasAvgUsedBandwidth
avgUsedBandwidth
TI,N,V_avgUsedBandwidth
hasAvgBitrate
avgBitrate
TI,N,V_avgBitrate
hasRetransmitAvg
retransmitAvg
TI,N,V_retransmitAvg
hasRttAvg
rttAvg
TI,N,V_rttAvg
hasCpuAvg
cpuAvg
TI,N,V_cpuAvg
hasWifiRSSI
wifiRSSI
Ti,N,V_wifiRSSI
hasWifiChannel
wifiChannel
TI,N,V_wifiChannel
hasAudioCompressionType
audioCompressionType
TI,N,V_audioCompressionType
hasClientPrepareMs
clientPrepareMs
TI,N,V_clientPrepareMs
hasClientBonjourMs
clientBonjourMs
TI,N,V_clientBonjourMs
hasClientConnectMs
clientConnectMs
TI,N,V_clientConnectMs
hasClientConfigMs
clientConfigMs
TI,N,V_clientConfigMs
hasServerAcceptTime
serverAcceptTime
TI,N,V_serverAcceptTime
hasServerConfigTime
serverConfigTime
TI,N,V_serverConfigTime
APSNTPClock
APSNTPClockLockStateDidChange
OSStatus APSNTPClockCreate_Common(CFAllocatorRef, Boolean, Boolean, CMClockRef, CMClockRef *)
NULL clockOut
NULL sourceClock
APSNTPClock_%p
clock %p created
primary
client
APSNTPClock <%p> %s. IP info not available.
APSNTPClock <%p> %s bound to IP %s sourcing
hasDiscoverySessionUUID
discoverySessionUUID
T@"NSString",&,N,V_discoverySessionUUID
hasStartTime
startTime
TQ,N,V_startTime
hasFirstDeviceFoundMs
firstDeviceFoundMs
Ti,N,V_firstDeviceFoundMs
hasTheme
theme
T@"NSString",&,N,V_theme
hasTransition
transition
T@"NSString",&,N,V_transition
hasRepeat
repeat
TI,N,V_repeat
hasSlideMs
slideMs
TI,N,V_slideMs
APSConnectionInterfaceManager
com.apple.airplay.connectionInterfaceManager
APSConnectionInterfaceManagerCreate
Failed allocating set
connectionInterfaceManager_selectInterfaceInternal
Invalid interface
OSStatus connectionInterfaceManager_selectInterfaceInternal(void *)
Requested interface %d with no previous selection
Requested interface %d while %d was already selected
Requested the altready selected interface %d
void connectionInterfaceManager_releaseInterfaceSelection(void *)
Releasing interface selection for token %d
No selection token left. Releasing interface reservation
APSRTPJitterBuffer
com.apple.APSRTPJitterBuffer.log
APSRTPJitterBufferRef APSRTPJitterBufferCreate(CFAllocatorRef, const AudioStreamBasicDescription *, const AudioStreamBasicDescription *, uint32_t, APSRTPJitterBufferOptions, CFStringRef, OSStatus *)
Creating jitter buffer '%@' for input format: %{asbd}, target size: %u ms, legacy buffering mode: %s
OSStatus _APSRTPJitterBufferConfigurePacketQueues(APSRTPJitterBufferRef)
'%@' Allocated %u packets
OSStatus _APSRTPJitterBufferConfigureOutput(APSRTPJitterBufferRef)
'%@' Allocated ring buffer of size: %u bytes
'%@' Setting discard threshold / target sample counts to: %lu / %lu
___APSRTPJitterBufferDecodeThreadEntry_block_invoke_6
'%@' Decode thread ending
___APSRTPJitterBufferDecodeThreadEntry_block_invoke_5
'%@' Triggering discard excess with enqueued sample count: %u
___APSRTPJitterBufferCopyPacketPCMSamples_block_invoke_3
'%@' Writing %u samples of pcm audio
___APSRTPJitterBufferCopyPacketPCMSamples_block_invoke_2
'%@' Writing %u samples of silence due to gap
___APSRTPJitterBufferCopyPacketPCMSamples_block_invoke
'%@' Overrun occurred
___APSRTPJitterBufferDecodePacketSamples_block_invoke_8
'%@' Writing %u samples of decoded audio
___APSRTPJitterBufferDecodePacketSamples_block_invoke_7
'%@' Error occurred during decode: %#m (%u samples produced)
___APSRTPJitterBufferDecodePacketSamples_block_invoke_6
'%@' Writing %u samples of silence (instead of decoded audio) due to decode error %#m
___APSRTPJitterBufferDecodePacketSamples_block_invoke_5
'%@' Writing %u samples of silence (instead of concealed audio) due to non-multiple of frames per packet
___APSRTPJitterBufferDecodePacketSamples_block_invoke_4
'%@' Writing %u samples of concealed audio
___APSRTPJitterBufferDecodePacketSamples_block_invoke_3
___APSRTPJitterBufferDecodePacketSamples_block_invoke_2
'%@' Writing %u samples of silence (instead of concealed audio) due to decode error %#m
___APSRTPJitterBufferDecodePacketSamples_block_invoke
___APSRTPJitterBufferDecodeThreadEntry_block_invoke_4
'%@' Gap detected: %u samples (%u ms)
___APSRTPJitterBufferDecodeThreadEntry_block_invoke_3
Skipping out of order packet
___APSRTPJitterBufferDecodeThreadEntry_block_invoke_2
'%@' Decode started with packet at timestamp: %u
___APSRTPJitterBufferDecodeThreadEntry_block_invoke
'%@' Decode thread starting
void _APSRTPJitterBufferFinalize(CFTypeRef)
'%@' Statistics:
Underruns: %u
Overruns: %u
Gaps: %u
APSRTPSavedPacket *APSRTPJitterBufferGetEmptyPacket(APSRTPJitterBufferRef, OSStatus *)
######### No packets available ##########
__APSRTPJitterBufferRead_block_invoke_9
'%@' Underrun occurred
__APSRTPJitterBufferRead_block_invoke_8
'%@' Reading %u bytes (%u samples) of decoded audio
__APSRTPJitterBufferRead_block_invoke_7
__APSRTPJitterBufferRead_block_invoke_6
'%@' Entering legacy buffering mode (%u ms underrun) - %u samples enqueued, %u packets enqueued
__APSRTPJitterBufferRead_block_invoke_5
'%@' Skipping %u bytes (%u samples) of decoded audio
__APSRTPJitterBufferRead_block_invoke_4
'%@' Discarding %u samples of excess pcm audio
__APSRTPJitterBufferRead_block_invoke_3
'%@' Discard excess requested with totalSampleCount: %u, target: %u
__APSRTPJitterBufferRead_block_invoke_2
'%@' Exiting legacy buffering mode (%u ms buffered)
__APSRTPJitterBufferRead_block_invoke
'%@' Read request for %u bytes (%u samples) of pcm audio
hasSlowKeepAlives
slowKeepAlives
TI,N,V_slowKeepAlives
hasRetransmits
retransmits
TI,N,V_retransmits
hasFutileRetransmits
futileRetransmits
TI,N,V_futileRetransmits
APSAudioSession
AVAudioSession
/System/Library/Frameworks/AVFoundation.framework/AVFoundation
AVAudioSessionCategoryPlayAndRecord
AVAudioSessionCategoryPlayback
AVAudioSessionModeVoiceChat
AVAudioSessionModeDefault
AVAudioSessionInterruptionNotification
AVAudioSessionMediaServicesWereResetNotification
AVAudioSessionInterruptionTypeKey
speechRecognition
telephony
outputLatencyMicros
inputLatencyMicros
audioType
void APSAudioSessionEnsureSetup(Boolean, uint32_t, uint32_t)
Audio session category and mode updated to %@/%@
Changed preferred sample rate to %u
### Set preferred sample rate to %u failed: %@
Changed IO buffer duration to %f ms
### Set preferred sample rate to %f ms failed: %@
Audio session activated
v16@?0@"NSNotification"8
void _HandleReset(NSNotification *)
### APSAudioSession reset
*** AirPlay Audio Reinitialized
(end interruption)
(begin interruption)
void _HandleAudioInterruption(NSNotification *)
AirPlay Audio Interruption: %u %s
Audio resuming after interruption
void APSAudioSessionEnsureTornDown()
Audio session deactivated
EngineStateChanged
FigPlayer
EngineState
EndpointGroupID
[APTrackListPlayer %p]
TrackList
NetworkTime
MediaTime
Rate
TrackListIndex
%s signalled err=%d (%s) (%s) at %s line %d
kCMBaseObjectError_ParamErr
! engineState
APTrackListPlayerEngineStateCreateCopy
/Library/Caches/com.apple.xbs/Sources/EmbeddedAirPlayFrameworks_Sim/EmbeddedAirPlay-310.17/Support/MusicCommon/APTrackListPlayerCommon.c
! outEngineState
kCMBaseObjectError_AllocationFailed
couldn't create new dictionary
hasFirstSrcPresenceBeaconSentMs
firstSrcPresenceBeaconSentMs
TQ,N,V_firstSrcPresenceBeaconSentMs
hasFirstAWDLDeviceFoundMs
firstAWDLDeviceFoundMs
TQ,N,V_firstAWDLDeviceFoundMs
hasDurationMs
durationMs
TQ,N,V_durationMs
hasTotalPeersDiscovered
totalPeersDiscovered
TI,N,V_totalPeersDiscovered
hasDevicePickedMs
devicePickedMs
TI,N,V_devicePickedMs
hasApRSSI
apRSSI
Ti,N,V_apRSSI
hasTotalAWDLPeersDiscovered
totalAWDLPeersDiscovered
TI,N,V_totalAWDLPeersDiscovered
hasTotalAWDLmDNSPeers
totalAWDLmDNSPeers
TI,N,V_totalAWDLmDNSPeers
hasClientInfoMs
clientInfoMs
TI,N,V_clientInfoMs
hasClientSecureConnectionMs
clientSecureConnectionMs
TI,N,V_clientSecureConnectionMs
hasClientAuthMs
clientAuthMs
TI,N,V_clientAuthMs
hasClientPostAuthMs
clientPostAuthMs
TI,N,V_clientPostAuthMs
hasCompressionPercent
compressionPercent
TI,N,V_compressionPercent
hasGlitches
glitches
TI,N,V_glitches
hasRetransmitSends
retransmitSends
TI,N,V_retransmitSends
hasRetransmitReceives
retransmitReceives
TI,N,V_retransmitReceives
hasRetransmitNotFounds
retransmitNotFounds
TI,N,V_retransmitNotFounds
hasRetransmitMinMs
retransmitMinMs
TI,N,V_retransmitMinMs
hasRetransmitMaxMs
retransmitMaxMs
TI,N,V_retransmitMaxMs
hasRetransmitAvgMs
retransmitAvgMs
TI,N,V_retransmitAvgMs
hasRetransmitRetryMinMs
retransmitRetryMinMs
TI,N,V_retransmitRetryMinMs
hasRetransmitRetryMaxMs
retransmitRetryMaxMs
TI,N,V_retransmitRetryMaxMs
hasLostPackets
lostPackets
TI,N,V_lostPackets
hasUnrecoveredPackets
unrecoveredPackets
TI,N,V_unrecoveredPackets
hasLastPackets
lastPackets
TI,N,V_lastPackets
hasMaxBurstLoss
maxBurstLoss
TI,N,V_maxBurstLoss
hasBigLosses
bigLosses
TI,N,V_bigLosses
hasNtpRTTMin
ntpRTTMin
TI,N,V_ntpRTTMin
hasNtpRTTMax
ntpRTTMax
TI,N,V_ntpRTTMax
hasNtpRTTAvg
ntpRTTAvg
TI,N,V_ntpRTTAvg
hasNtpOffsetMin
ntpOffsetMin
TI,N,V_ntpOffsetMin
hasNtpOffsetMax
ntpOffsetMax
TI,N,V_ntpOffsetMax
hasNtpOffsetAvg
ntpOffsetAvg
TI,N,V_ntpOffsetAvg
hasNtpOutliers
ntpOutliers
TI,N,V_ntpOutliers
hasNtpSteps
ntpSteps
TI,N,V_ntpSteps
hasRtpMaxSkew
rtpMaxSkew
TI,N,V_rtpMaxSkew
hasRtpSkewResets
rtpSkewResets
TI,N,V_rtpSkewResets
hasDacpPauses
dacpPauses
TI,N,V_dacpPauses
hasDacpNext
dacpNext
TI,N,V_dacpNext
hasDacpPrevious
dacpPrevious
TI,N,V_dacpPrevious
PrimaryState
EndpointID
EngineType
PlaylistController
TrackListPlayer
RenderPipelineOptions
IsStreaming
PrimarySuccessionList
APSIntrospector
introsp_addCommand
void introsp_addCommand(IntrospectorData *, CFStringRef, const void *, APSIntrospectorCommand, CFStringRef, Boolean)
can't add '%@' command: it has already been added
introsp_serverStart
/tmp/APSIntrospector.%s
void introsp_serverStart(IntrospectorData *)
listening on port %d
can't start APSIntrospector server: %#m
void introsp_serverMain(void *)
can't accept new connection: %#m
introsp_serverHandleSession
%s:%s ap> 
%s%s
readbuf_readChar
unmatched quote
line is too long
Parse error: %s
%s: no such command found, use 'help' to list available commands
quit (same as 'exit')
quit
turn the prompt on/off
line
prompt
modify or show current log settings
%s: can't add '%s' setting: %#m
%s: can't get log settings: %#m
logging
list available commands and their brief descriptions
%@ -- %@
no such command
help
change or show fignote log variables
change
show
%s: operation not supported
%s: no such domain or key
%s: unknown error: %d
Usage: %s change <domain> <key> <value>
Or:    %s show <domain> [<key>]
fignote
quit (same as 'quit')
Buh bye
exit
output arguments in single quotes
'%s' 
echo
APSIntrospectorSetCommandContext
void APSIntrospectorSetCommandContext(CFStringRef, const void *)
can't set context for '%@' command: no such command
count
Usage: %s [count]
v16@?0r^v8
Object %d:
%s: %d object%s
AirPlayHTTPUtilities
OSStatus APSHTTPParseByteRangeRequest(const char *, size_t, int64_t, int64_t *, int64_t *)
### Bad range (start=%lld, end=%lld, size=%lld)
APSKeyHolderCommon
void keyHolder_secureMemDeallocateCallBack(void *, void *)
!!! Invalid memory block to dealloc - size %d.
APSKeyHolder
[APSKeyHolder %p]
hasDeviceFeature
deviceFeature
Ti,N,V_deviceFeature
hasTargetPresenceBeaconReceivedMs
targetPresenceBeaconReceivedMs
TQ,N,V_targetPresenceBeaconReceivedMs
hasAwdlAirPlayTXTReceivedMs
awdlAirPlayTXTReceivedMs
TQ,N,V_awdlAirPlayTXTReceivedMs
hasAwdlRAOPTXTReceivedMs
awdlRAOPTXTReceivedMs
TQ,N,V_awdlRAOPTXTReceivedMs
hasWifiAirPlayTXTReceivedMs
wifiAirPlayTXTReceivedMs
TQ,N,V_wifiAirPlayTXTReceivedMs
hasWifiRAOPTXTReceivedMs
wifiRAOPTXTReceivedMs
TQ,N,V_wifiRAOPTXTReceivedMs
hasAggregated
aggregated
TB,N,V_aggregated
hasBtleRSSI
btleRSSI
Ti,N,V_btleRSSI
hasLatencyMs
latencyMs
TI,N,V_latencyMs
hasClientAnnounceMs
clientAnnounceMs
TI,N,V_clientAnnounceMs
hasClientSetupAudioMs
clientSetupAudioMs
TI,N,V_clientSetupAudioMs
hasClientSetupScreenMs
clientSetupScreenMs
TI,N,V_clientSetupScreenMs
hasServerRecordMs
serverRecordMs
TI,N,V_serverRecordMs
APTrackListPlayer
APTrackListPlayerCreate
com.apple.coremedia.figplayerprimarytrackListPlayer.state
com.apple.coremedia.musicspeakerboss.notification
tlp_initiateTimebase
tlp_createNewFigPlayer
tlp_initiateFigPlayerInternal
tlp_initiateStateDictionary
v24@?0r^v8r^v16
void tlp_playbackItemStalledNotificationListenerInternal(CMNotificationCenterRef, const void *, CFStringRef, const void *, CFTypeRef)
[%{ptr}] Playback stalled for item: %@
v8@?0
tlp_updateEngineStateWithFigPlayerStateInternal
no current Playback Item but no error
mediaserverd
tlp_CopyProperty
tlp_copyFigPropertyInternal
tlp_SetFigPlayerAndEngineState
OSStatus tlp_setFigPlayerAndEngineStateInternal(APTrackListPlayerRef, FigPlayerRef, APTrackListPlayerEngineStateRef)
[%{ptr}] %###s: figPlayer: %@; engineState: %@
OSStatus tlp_setEngineStateInternal(APTrackListPlayerRef, APTrackListPlayerEngineStateRef, Boolean)
[%{ptr}] called shouldResetFigPlayer: %d
tlp_setEngineStateInternal
[%{ptr}]   EngineState: rate: %1.3f; trackListIndex: %d; mediaTime: %1.3f; networkTime: %1.3f; trackList: %@
unknown type in tracklist
[%{ptr}] %###s; enqueueing: %@ with migrationID: %d
OSStatus tlp_waitUntilItemIsReadyForPlaybackWithTimeout(APTrackListPlayerRef, FigPlaybackItemRef, int64_t)
[%{ptr}] %###s; Delaying playback... ready? %@; likely to keep up? %@
[%{ptr}] %###s; FAILED TO WAIT FOR READY ITEM: %@
tlp_copyEngineStateToUse
[%{ptr}] Setting rate %1.3f; itemTime: %1.3f; hostTime: %1.3f
[%{ptr}] now host time: %1.3f
tlp_CopyEngineState
tlp_copyEngineStateInternal
tlp_SetEngineState
OSStatus tlp_getRateInternal(APTrackListPlayerRef, float *)
[%{ptr}] getting rate
tlp_getRateInternal
OSStatus tlp_setRateInternal(APTrackListPlayerRef, float)
[%{ptr}] setting rate to %1.3f
tlp_setRateInternal
APSEventRecorder
APSEventRecorderCreate
OSStatus APSEventRecorderCreate(APSEventRecorderType, CFStringRef, uint32_t, APSSignPost *, APSEventRecorderRef, APSEventRecorderRef *)
Created eventRecorder = %p (%@), type = 0x%x, eventCount = %d, parentEventRecorder = %@
APSEventRecorderCopyName
APSEventRecorderRecordEventWithFlags
APSEventRecorderRef eventRecorder_copyChildEventRecorderOfTypeByDeepSearch(APSEventRecorderRef, APSEventRecorderType)
[copyChildEventRecorderOfType] inEventRecorderType = 0x%x, inEventRecorder = %@ (type = 0x%x) 
[copyChildEventRecorderOfType] inEventRecorderType = 0x%x, iterEventRecorder = [%@] --> %@ (type = 0x%x) 
APSEventRecorderGetTimeBetweenEventsInMilliSecond
APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive
MMMM d, HH:mm:ss.SSS
eventRecorder_copyChildEventRecorderOfType
void eventRecorderApplier_printAll(APSEventRecorderRef, void *)
[%@] ---> [%@]
hasPrepareMs
prepareMs
TI,N,V_prepareMs
hasConfigMs
configMs
TI,N,V_configMs
_timestamp
_duration
_maxBPS
_maxPhotoBytes
_minBPS
_minPhotoBytes
_reason
_sessionUUID
_totalPhotos
_has
copyWithZone:
dealloc
hasSessionUUID
setTimestamp:
setHasTimestamp:
hasTimestamp
setReason:
setHasReason:
hasReason
setDuration:
setHasDuration:
hasDuration
setTotalPhotos:
setHasTotalPhotos:
hasTotalPhotos
setMinPhotoBytes:
setHasMinPhotoBytes:
hasMinPhotoBytes
setMaxPhotoBytes:
setHasMaxPhotoBytes:
hasMaxPhotoBytes
setMinBPS:
setHasMinBPS:
hasMinBPS
setMaxBPS:
setHasMaxBPS:
hasMaxBPS
description
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
sessionUUID
setSessionUUID:
timestamp
reason
duration
totalPhotos
minPhotoBytes
maxPhotoBytes
minBPS
maxBPS
isMemberOfClass:
class
release
init
allocWithZone:
retain
numberWithUnsignedInt:
numberWithInt:
numberWithUnsignedLongLong:
setObject:forKey:
dictionary
stringWithFormat:
_announceMs
_authMs
_awdlCCA
_awdlRSSI
_bonjourMs
_compressionType
_connectMs
_encryptionType
_infraCCA
_infraRSSI
_infraSNR
_recordMs
_setupAudioMs
_setupScreenMs
_status
_transportType
_didFallbackToInfraToAvoidP2POverDFS
setStatus:
setHasStatus:
hasStatus
setTransportType:
setHasTransportType:
hasTransportType
setCompressionType:
setHasCompressionType:
hasCompressionType
setEncryptionType:
setHasEncryptionType:
hasEncryptionType
setBonjourMs:
setHasBonjourMs:
hasBonjourMs
setConnectMs:
setHasConnectMs:
hasConnectMs
setAuthMs:
setHasAuthMs:
hasAuthMs
setAnnounceMs:
setHasAnnounceMs:
hasAnnounceMs
setSetupAudioMs:
setHasSetupAudioMs:
hasSetupAudioMs
setSetupScreenMs:
setHasSetupScreenMs:
hasSetupScreenMs
setRecordMs:
setHasRecordMs:
hasRecordMs
setDidFallbackToInfraToAvoidP2POverDFS:
setHasDidFallbackToInfraToAvoidP2POverDFS:
hasDidFallbackToInfraToAvoidP2POverDFS
setAwdlRSSI:
setHasAwdlRSSI:
hasAwdlRSSI
setInfraRSSI:
setHasInfraRSSI:
hasInfraRSSI
setAwdlCCA:
setHasAwdlCCA:
hasAwdlCCA
setInfraCCA:
setHasInfraCCA:
hasInfraCCA
setInfraSNR:
setHasInfraSNR:
hasInfraSNR
status
transportType
compressionType
encryptionType
bonjourMs
connectMs
authMs
announceMs
setupAudioMs
setupScreenMs
recordMs
didFallbackToInfraToAvoidP2POverDFS
awdlRSSI
infraRSSI
awdlCCA
infraCCA
infraSNR
numberWithBool:
_fileBytes
_audioOnly
_bitrate
_infoMs
_postAuthMs
_secureConnectionMs
_serverModel
_serverVersion
_type
hasServerModel
hasServerVersion
setType:
setHasType:
hasType
setFileBytes:
setHasFileBytes:
hasFileBytes
setBitrate:
setHasBitrate:
hasBitrate
setAudioOnly:
setHasAudioOnly:
hasAudioOnly
setInfoMs:
setHasInfoMs:
hasInfoMs
setSecureConnectionMs:
setHasSecureConnectionMs:
hasSecureConnectionMs
setPostAuthMs:
setHasPostAuthMs:
hasPostAuthMs
serverModel
setServerModel:
serverVersion
setServerVersion:
type
fileBytes
bitrate
audioOnly
infoMs
secureConnectionMs
postAuthMs
_audioLate
_audioLost
_audioUnrecovered
_avgAhead
_avgRTT
_avgReceiveMs
_caDrops
_caFrames
_clearScreens
_configChanges
_forcedRefreshes
_framesReceived
_negativeAheadFrames
_resumes
_suspends
_unclearScreens
setFramesReceived:
setHasFramesReceived:
hasFramesReceived
setConfigChanges:
setHasConfigChanges:
hasConfigChanges
setClearScreens:
setHasClearScreens:
hasClearScreens
setUnclearScreens:
setHasUnclearScreens:
hasUnclearScreens
setSuspends:
setHasSuspends:
hasSuspends
setResumes:
setHasResumes:
hasResumes
setForcedRefreshes:
setHasForcedRefreshes:
hasForcedRefreshes
setNegativeAheadFrames:
setHasNegativeAheadFrames:
hasNegativeAheadFrames
setCaFrames:
setHasCaFrames:
hasCaFrames
setCaDrops:
setHasCaDrops:
hasCaDrops
setAudioLost:
setHasAudioLost:
hasAudioLost
setAudioUnrecovered:
setHasAudioUnrecovered:
hasAudioUnrecovered
setAudioLate:
setHasAudioLate:
hasAudioLate
setAvgRTT:
setHasAvgRTT:
hasAvgRTT
setAvgAhead:
setHasAvgAhead:
hasAvgAhead
setAvgReceiveMs:
setHasAvgReceiveMs:
hasAvgReceiveMs
framesReceived
configChanges
clearScreens
unclearScreens
suspends
resumes
forcedRefreshes
negativeAheadFrames
caFrames
caDrops
audioLost
audioUnrecovered
audioLate
avgRTT
avgAhead
avgReceiveMs
_bandwidthMax
_bandwidthMean
_bandwidthStdDev
_fastFowards
_localFairPlayCount
_localNonFairPlayCount
_pauses
_readyToPlayMs
_remoteFairPlayCount
_remoteNonFairPlayCount
_rewinds
_stallCount
setPauses:
setHasPauses:
hasPauses
setRewinds:
setHasRewinds:
hasRewinds
setFastFowards:
setHasFastFowards:
hasFastFowards
setReadyToPlayMs:
setHasReadyToPlayMs:
hasReadyToPlayMs
setStallCount:
setHasStallCount:
hasStallCount
setBandwidthStdDev:
setHasBandwidthStdDev:
hasBandwidthStdDev
setBandwidthMean:
setHasBandwidthMean:
hasBandwidthMean
setBandwidthMax:
setHasBandwidthMax:
hasBandwidthMax
setLocalFairPlayCount:
setHasLocalFairPlayCount:
hasLocalFairPlayCount
setLocalNonFairPlayCount:
setHasLocalNonFairPlayCount:
hasLocalNonFairPlayCount
setRemoteFairPlayCount:
setHasRemoteFairPlayCount:
hasRemoteFairPlayCount
setRemoteNonFairPlayCount:
setHasRemoteNonFairPlayCount:
hasRemoteNonFairPlayCount
pauses
rewinds
fastFowards
readyToPlayMs
stallCount
bandwidthStdDev
bandwidthMean
bandwidthMax
localFairPlayCount
localNonFairPlayCount
remoteFairPlayCount
remoteNonFairPlayCount
numberWithDouble:
_clientModel
_clientVersion
hasClientModel
hasClientVersion
clientModel
setClientModel:
clientVersion
setClientVersion:
_skipAheads
_skipBacks
setSkipBacks:
setHasSkipBacks:
hasSkipBacks
setSkipAheads:
setHasSkipAheads:
hasSkipAheads
skipBacks
skipAheads
_avgBitrate
_avgEstimatedBandwidth
_avgUsedBandwidth
_cpuAvg
_framesSent
_retransmitAvg
_rttAvg
_wifiChannel
_wifiRSSI
setFramesSent:
setHasFramesSent:
hasFramesSent
setAvgEstimatedBandwidth:
setHasAvgEstimatedBandwidth:
hasAvgEstimatedBandwidth
setAvgUsedBandwidth:
setHasAvgUsedBandwidth:
hasAvgUsedBandwidth
setAvgBitrate:
setHasAvgBitrate:
hasAvgBitrate
setRetransmitAvg:
setHasRetransmitAvg:
hasRetransmitAvg
setRttAvg:
setHasRttAvg:
hasRttAvg
setCpuAvg:
setHasCpuAvg:
hasCpuAvg
setWifiRSSI:
setHasWifiRSSI:
hasWifiRSSI
setWifiChannel:
setHasWifiChannel:
hasWifiChannel
framesSent
avgEstimatedBandwidth
avgUsedBandwidth
avgBitrate
retransmitAvg
rttAvg
cpuAvg
wifiRSSI
wifiChannel
_audioCompressionType
_clientBonjourMs
_clientConfigMs
_clientConnectMs
_clientPrepareMs
_serverAcceptTime
_serverConfigTime
setAudioCompressionType:
setHasAudioCompressionType:
hasAudioCompressionType
setClientPrepareMs:
setHasClientPrepareMs:
hasClientPrepareMs
setClientBonjourMs:
setHasClientBonjourMs:
hasClientBonjourMs
setClientConnectMs:
setHasClientConnectMs:
hasClientConnectMs
setClientConfigMs:
setHasClientConfigMs:
hasClientConfigMs
setServerAcceptTime:
setHasServerAcceptTime:
hasServerAcceptTime
setServerConfigTime:
setHasServerConfigTime:
hasServerConfigTime
audioCompressionType
clientPrepareMs
clientBonjourMs
clientConnectMs
clientConfigMs
serverAcceptTime
serverConfigTime
_startTime
_discoverySessionUUID
_firstDeviceFoundMs
hasDiscoverySessionUUID
setStartTime:
setHasStartTime:
hasStartTime
setFirstDeviceFoundMs:
setHasFirstDeviceFoundMs:
hasFirstDeviceFoundMs
discoverySessionUUID
setDiscoverySessionUUID:
startTime
firstDeviceFoundMs
_repeat
_slideMs
_theme
_transition
hasTheme
hasTransition
setRepeat:
setHasRepeat:
hasRepeat
setSlideMs:
setHasSlideMs:
hasSlideMs
theme
setTheme:
transition
setTransition:
repeat
slideMs
_futileRetransmits
_retransmits
_slowKeepAlives
setSlowKeepAlives:
setHasSlowKeepAlives:
hasSlowKeepAlives
setRetransmits:
setHasRetransmits:
hasRetransmits
setFutileRetransmits:
setHasFutileRetransmits:
hasFutileRetransmits
slowKeepAlives
retransmits
futileRetransmits
sharedInstance
setPreferredIOBufferDuration:error:
IOBufferDuration
setActive:error:
defaultCenter
mainQueue
addObserverForName:object:queue:usingBlock:
removeObserver:
setCategory:withOptions:error:
setMode:error:
userInfo
objectForKey:
integerValue
setPreferredSampleRate:error:
_durationMs
_firstAWDLDeviceFoundMs
_firstSrcPresenceBeaconSentMs
_apRSSI
_devicePickedMs
_totalAWDLPeersDiscovered
_totalAWDLmDNSPeers
_totalPeersDiscovered
setFirstSrcPresenceBeaconSentMs:
setHasFirstSrcPresenceBeaconSentMs:
hasFirstSrcPresenceBeaconSentMs
setFirstAWDLDeviceFoundMs:
setHasFirstAWDLDeviceFoundMs:
hasFirstAWDLDeviceFoundMs
setDurationMs:
setHasDurationMs:
hasDurationMs
setTotalPeersDiscovered:
setHasTotalPeersDiscovered:
hasTotalPeersDiscovered
setDevicePickedMs:
setHasDevicePickedMs:
hasDevicePickedMs
setApRSSI:
setHasApRSSI:
hasApRSSI
setTotalAWDLPeersDiscovered:
setHasTotalAWDLPeersDiscovered:
hasTotalAWDLPeersDiscovered
setTotalAWDLmDNSPeers:
setHasTotalAWDLmDNSPeers:
hasTotalAWDLmDNSPeers
firstSrcPresenceBeaconSentMs
firstAWDLDeviceFoundMs
durationMs
totalPeersDiscovered
devicePickedMs
apRSSI
totalAWDLPeersDiscovered
totalAWDLmDNSPeers
_clientAuthMs
_clientInfoMs
_clientPostAuthMs
_clientSecureConnectionMs
setClientInfoMs:
setHasClientInfoMs:
hasClientInfoMs
setClientSecureConnectionMs:
setHasClientSecureConnectionMs:
hasClientSecureConnectionMs
setClientAuthMs:
setHasClientAuthMs:
hasClientAuthMs
setClientPostAuthMs:
setHasClientPostAuthMs:
hasClientPostAuthMs
clientInfoMs
clientSecureConnectionMs
clientAuthMs
clientPostAuthMs
_bigLosses
_compressionPercent
_dacpNext
_dacpPauses
_dacpPrevious
_glitches
_lastPackets
_lostPackets
_maxBurstLoss
_ntpOffsetAvg
_ntpOffsetMax
_ntpOffsetMin
_ntpOutliers
_ntpRTTAvg
_ntpRTTMax
_ntpRTTMin
_ntpSteps
_retransmitAvgMs
_retransmitMaxMs
_retransmitMinMs
_retransmitNotFounds
_retransmitReceives
_retransmitRetryMaxMs
_retransmitRetryMinMs
_retransmitSends
_rtpMaxSkew
_rtpSkewResets
_unrecoveredPackets
setCompressionPercent:
setHasCompressionPercent:
hasCompressionPercent
setGlitches:
setHasGlitches:
hasGlitches
setRetransmitSends:
setHasRetransmitSends:
hasRetransmitSends
setRetransmitReceives:
setHasRetransmitReceives:
hasRetransmitReceives
setRetransmitNotFounds:
setHasRetransmitNotFounds:
hasRetransmitNotFounds
setRetransmitMinMs:
setHasRetransmitMinMs:
hasRetransmitMinMs
setRetransmitMaxMs:
setHasRetransmitMaxMs:
hasRetransmitMaxMs
setRetransmitAvgMs:
setHasRetransmitAvgMs:
hasRetransmitAvgMs
setRetransmitRetryMinMs:
setHasRetransmitRetryMinMs:
hasRetransmitRetryMinMs
setRetransmitRetryMaxMs:
setHasRetransmitRetryMaxMs:
hasRetransmitRetryMaxMs
setLostPackets:
setHasLostPackets:
hasLostPackets
setUnrecoveredPackets:
setHasUnrecoveredPackets:
hasUnrecoveredPackets
setLastPackets:
setHasLastPackets:
hasLastPackets
setMaxBurstLoss:
setHasMaxBurstLoss:
hasMaxBurstLoss
setBigLosses:
setHasBigLosses:
hasBigLosses
setNtpRTTMin:
setHasNtpRTTMin:
hasNtpRTTMin
setNtpRTTMax:
setHasNtpRTTMax:
hasNtpRTTMax
setNtpRTTAvg:
setHasNtpRTTAvg:
hasNtpRTTAvg
setNtpOffsetMin:
setHasNtpOffsetMin:
hasNtpOffsetMin
setNtpOffsetMax:
setHasNtpOffsetMax:
hasNtpOffsetMax
setNtpOffsetAvg:
setHasNtpOffsetAvg:
hasNtpOffsetAvg
setNtpOutliers:
setHasNtpOutliers:
hasNtpOutliers
setNtpSteps:
setHasNtpSteps:
hasNtpSteps
setRtpMaxSkew:
setHasRtpMaxSkew:
hasRtpMaxSkew
setRtpSkewResets:
setHasRtpSkewResets:
hasRtpSkewResets
setDacpPauses:
setHasDacpPauses:
hasDacpPauses
setDacpNext:
setHasDacpNext:
hasDacpNext
setDacpPrevious:
setHasDacpPrevious:
hasDacpPrevious
compressionPercent
glitches
retransmitSends
retransmitReceives
retransmitNotFounds
retransmitMinMs
retransmitMaxMs
retransmitAvgMs
retransmitRetryMinMs
retransmitRetryMaxMs
lostPackets
unrecoveredPackets
lastPackets
maxBurstLoss
bigLosses
ntpRTTMin
ntpRTTMax
ntpRTTAvg
ntpOffsetMin
ntpOffsetMax
ntpOffsetAvg
ntpOutliers
ntpSteps
rtpMaxSkew
rtpSkewResets
dacpPauses
dacpNext
dacpPrevious
_awdlAirPlayTXTReceivedMs
_awdlRAOPTXTReceivedMs
_targetPresenceBeaconReceivedMs
_wifiAirPlayTXTReceivedMs
_wifiRAOPTXTReceivedMs
_btleRSSI
_deviceFeature
_aggregated
setDeviceFeature:
setHasDeviceFeature:
hasDeviceFeature
setTargetPresenceBeaconReceivedMs:
setHasTargetPresenceBeaconReceivedMs:
hasTargetPresenceBeaconReceivedMs
setAwdlAirPlayTXTReceivedMs:
setHasAwdlAirPlayTXTReceivedMs:
hasAwdlAirPlayTXTReceivedMs
setAwdlRAOPTXTReceivedMs:
setHasAwdlRAOPTXTReceivedMs:
hasAwdlRAOPTXTReceivedMs
setWifiAirPlayTXTReceivedMs:
setHasWifiAirPlayTXTReceivedMs:
hasWifiAirPlayTXTReceivedMs
setWifiRAOPTXTReceivedMs:
setHasWifiRAOPTXTReceivedMs:
hasWifiRAOPTXTReceivedMs
setAggregated:
setHasAggregated:
hasAggregated
setBtleRSSI:
setHasBtleRSSI:
hasBtleRSSI
deviceFeature
targetPresenceBeaconReceivedMs
awdlAirPlayTXTReceivedMs
awdlRAOPTXTReceivedMs
wifiAirPlayTXTReceivedMs
wifiRAOPTXTReceivedMs
aggregated
btleRSSI
_clientAnnounceMs
_clientSetupAudioMs
_clientSetupScreenMs
_latencyMs
_serverRecordMs
setLatencyMs:
setHasLatencyMs:
hasLatencyMs
setClientAnnounceMs:
setHasClientAnnounceMs:
hasClientAnnounceMs
setClientSetupAudioMs:
setHasClientSetupAudioMs:
hasClientSetupAudioMs
setClientSetupScreenMs:
setHasClientSetupScreenMs:
hasClientSetupScreenMs
setServerRecordMs:
setHasServerRecordMs:
hasServerRecordMs
latencyMs
clientAnnounceMs
clientSetupAudioMs
clientSetupScreenMs
serverRecordMs
_configMs
_prepareMs
setPrepareMs:
setHasPrepareMs:
hasPrepareMs
setConfigMs:
setHasConfigMs:
hasConfigMs
prepareMs
configMs
@"NSString"
{?="timestamp"b1"duration"b1"maxBPS"b1"maxPhotoBytes"b1"minBPS"b1"minPhotoBytes"b1"reason"b1"totalPhotos"b1}
@24@0:8^{_NSZone=}16
v16@0:8
B16@0:8
v24@0:8Q16
v20@0:8B16
v20@0:8i16
v20@0:8I16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
i16@0:8
I16@0:8
{?="timestamp"b1"announceMs"b1"authMs"b1"awdlCCA"b1"awdlRSSI"b1"bonjourMs"b1"compressionType"b1"connectMs"b1"encryptionType"b1"infraCCA"b1"infraRSSI"b1"infraSNR"b1"recordMs"b1"setupAudioMs"b1"setupScreenMs"b1"status"b1"transportType"b1"didFallbackToInfraToAvoidP2POverDFS"b1}
{?="fileBytes"b1"timestamp"b1"audioOnly"b1"authMs"b1"awdlCCA"b1"awdlRSSI"b1"bitrate"b1"bonjourMs"b1"connectMs"b1"duration"b1"infoMs"b1"infraCCA"b1"infraRSSI"b1"infraSNR"b1"postAuthMs"b1"secureConnectionMs"b1"status"b1"transportType"b1"type"b1"didFallbackToInfraToAvoidP2POverDFS"b1}
{?="timestamp"b1"audioLate"b1"audioLost"b1"audioUnrecovered"b1"avgAhead"b1"avgRTT"b1"avgReceiveMs"b1"caDrops"b1"caFrames"b1"clearScreens"b1"configChanges"b1"duration"b1"forcedRefreshes"b1"framesReceived"b1"negativeAheadFrames"b1"reason"b1"resumes"b1"suspends"b1"unclearScreens"b1}
{?="bandwidthMax"b1"bandwidthMean"b1"bandwidthStdDev"b1"timestamp"b1"duration"b1"fastFowards"b1"localFairPlayCount"b1"localNonFairPlayCount"b1"pauses"b1"readyToPlayMs"b1"reason"b1"remoteFairPlayCount"b1"remoteNonFairPlayCount"b1"rewinds"b1"stallCount"b1}
v24@0:8d16
d16@0:8
{?="timestamp"b1"status"b1"transportType"b1}
{?="timestamp"b1"duration"b1"maxBPS"b1"maxPhotoBytes"b1"minBPS"b1"minPhotoBytes"b1"pauses"b1"reason"b1"skipAheads"b1"skipBacks"b1"totalPhotos"b1}
{?="timestamp"b1"avgBitrate"b1"avgEstimatedBandwidth"b1"avgUsedBandwidth"b1"clearScreens"b1"configChanges"b1"cpuAvg"b1"duration"b1"forcedRefreshes"b1"framesSent"b1"reason"b1"resumes"b1"retransmitAvg"b1"rttAvg"b1"suspends"b1"unclearScreens"b1"wifiChannel"b1"wifiRSSI"b1}
{?="timestamp"b1"audioCompressionType"b1"clientBonjourMs"b1"clientConfigMs"b1"clientConnectMs"b1"clientPrepareMs"b1"serverAcceptTime"b1"serverConfigTime"b1"status"b1"transportType"b1}
{?="startTime"b1"timestamp"b1"firstDeviceFoundMs"b1"status"b1}
{?="timestamp"b1"repeat"b1"slideMs"b1"status"b1}
{?="bandwidthMax"b1"bandwidthMean"b1"bandwidthStdDev"b1"timestamp"b1"duration"b1"localFairPlayCount"b1"localNonFairPlayCount"b1"readyToPlayMs"b1"reason"b1"remoteFairPlayCount"b1"remoteNonFairPlayCount"b1"stallCount"b1}
{?="timestamp"b1"duration"b1"futileRetransmits"b1"reason"b1"retransmits"b1"slowKeepAlives"b1}
{?="durationMs"b1"firstAWDLDeviceFoundMs"b1"firstSrcPresenceBeaconSentMs"b1"startTime"b1"timestamp"b1"apRSSI"b1"devicePickedMs"b1"status"b1"totalAWDLPeersDiscovered"b1"totalAWDLmDNSPeers"b1"totalPeersDiscovered"b1}
{?="timestamp"b1"audioOnly"b1"clientAuthMs"b1"clientBonjourMs"b1"clientConnectMs"b1"clientInfoMs"b1"clientPostAuthMs"b1"clientSecureConnectionMs"b1"status"b1"transportType"b1"type"b1}
{?="timestamp"b1"bigLosses"b1"compressionPercent"b1"dacpNext"b1"dacpPauses"b1"dacpPrevious"b1"duration"b1"futileRetransmits"b1"glitches"b1"lastPackets"b1"lostPackets"b1"maxBurstLoss"b1"ntpOffsetAvg"b1"ntpOffsetMax"b1"ntpOffsetMin"b1"ntpOutliers"b1"ntpRTTAvg"b1"ntpRTTMax"b1"ntpRTTMin"b1"ntpSteps"b1"reason"b1"retransmitAvgMs"b1"retransmitMaxMs"b1"retransmitMinMs"b1"retransmitNotFounds"b1"retransmitReceives"b1"retransmitRetryMaxMs"b1"retransmitRetryMinMs"b1"retransmitSends"b1"rtpMaxSkew"b1"rtpSkewResets"b1"unrecoveredPackets"b1}
{?="timestamp"b1"repeat"b1"slideMs"b1"status"b1"transportType"b1}
{?="awdlAirPlayTXTReceivedMs"b1"awdlRAOPTXTReceivedMs"b1"startTime"b1"targetPresenceBeaconReceivedMs"b1"timestamp"b1"wifiAirPlayTXTReceivedMs"b1"wifiRAOPTXTReceivedMs"b1"awdlRSSI"b1"btleRSSI"b1"deviceFeature"b1"status"b1"wifiRSSI"b1"aggregated"b1}
{?="timestamp"b1"audioCompressionType"b1"clientAnnounceMs"b1"clientAuthMs"b1"clientBonjourMs"b1"clientConnectMs"b1"clientSetupAudioMs"b1"clientSetupScreenMs"b1"latencyMs"b1"serverRecordMs"b1"status"b1"transportType"b1}
{?="timestamp"b1"status"b1}
{?="timestamp"b1"audioCompressionType"b1"awdlCCA"b1"awdlRSSI"b1"bonjourMs"b1"configMs"b1"connectMs"b1"infraCCA"b1"infraRSSI"b1"infraSNR"b1"prepareMs"b1"status"b1"transportType"b1"didFallbackToInfraToAvoidP2POverDFS"b1}
