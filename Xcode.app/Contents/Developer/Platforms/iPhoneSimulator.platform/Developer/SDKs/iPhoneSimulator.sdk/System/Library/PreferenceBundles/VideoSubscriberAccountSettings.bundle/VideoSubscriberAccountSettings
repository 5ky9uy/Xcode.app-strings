initWithNibName:bundle:
alloc
init
initWithNotificationName:
setDelegate:
setMaxConcurrentOperationCount:
vs_frameworkBundle
localizedStringForKey:value:table:
setTitle:
setAutomaticallyAdjustsScrollViewInsets:
_setupAppropriateChildViewController
viewDidAppear:
setIdentityProviderController:
setShouldPresentIdentityProviderViewController:
_showInitialIdentityProviderViewController:
_replaceLastViewControllerWithViewController:
accountStore
makeAccountRequestWithAccountStore:
_startIdentityProviderRequest:identityProvider:presentViewControllers:
navigationController
popToViewController:animated:
identityProvider
appStoreRoomURL
editAccountRequestWithAccount:accountStore:
userInfo
mutableCopy
setLocalizedAlertButtonTitle:
setDestructive:
_account
identityProviderDisplayName
sharedFactory
removeAccount:withCompletionHandler:
viewControllerToConfirmAccountDeletionForIdentityProviderDisplayName:preferredStyle:confirmationHandler:
presentViewController:animated:completion:
setAttemptHandler:
arrayWithObjects:count:
addEntriesFromDictionary:
domain
code
errorWithDomain:code:userInfo:
setRecoveryDestructive:
recoveryButton
popoverPresentationController
setSourceView:
bounds
setSourceRect:
setError:
_updateChildViewController:
loadingViewController
mainQueue
privateQueue
identityProviderID
initWithIdentityProviderID:
addOperation:
addDependency:
result
initWithAccount:identityProvider:appDescription:
blockOperationWithBlock:
appAdamID
initWithAppAdamID:preferredArtworkSize:
object
_presentError:
unwrapObject:error:
addExecutionBlock:
initWithOperation:timeout:
isFinished
setAllIdentityProviders:
setShouldExcludeUnsupportedProviders:
filteredIdentityProviders
count
identityProviderPickerViewControllerWithIdentityProviders:
setCancellationAllowed:
setAdditionalProvidersMode:
cancel
_removeCurrentChildViewControllerIfNecessary
addChildViewController:
view
setFrame:
setAutoresizingMask:
addSubview:
contentScrollView
bottomLayoutGuide
length
setContentInset:
setScrollIndicatorInsets:
didMoveToParentViewController:
setCurrentChildViewController:
currentChildViewController
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
presentedViewController
viewControllers
removeLastObject
addObject:
setViewControllers:animated:
identityProviderController
identityProviderControllerWithIdentityProvider:
setShowsLoadingViewController:
type
_presentAlertForError:offeringToDeleteAccount:
dismissViewControllerAnimated:completion:
submitRequest:completionHandler:
shouldPresentIdentityProviderViewController
initWithRootViewController:
setModalPresentationStyle:
pushViewController:animated:
parentViewController
popToRootViewControllerAnimated:
firstAccount
accountInfoViewControllerWantsMoreApps:
accountInfoViewController:didSelectEditAccountForAccount:identityProvider:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
identityProviderController:showViewController:
identityProviderController:replaceViewControllerWithViewController:
identityProviderController:didAuthenticateAccount:
identityProviderControllerHideViewController:
identityProviderPickerViewControllerDidCancel:
identityProviderPickerViewController:didPickIdentityProvider:
identityProviderPickerViewControllerDidPickAdditionalIdentityProviders:
remoteNotifier:didReceiveRemoteNotificationWithUserInfo:
_dismiss
.cxx_destruct
setAccountStore:
setPrivateQueue:
remoteNotifier
setRemoteNotifier:
_shouldPresentIdentityProviderViewController
_identityProviderController
_accountStore
_currentChildViewController
_privateQueue
_remoteNotifier
name
preferenceSpecifierNamed:target:set:get:detail:cell:edit:
setProperty:forKey:
icon
numberWithBool:
bundleID
persistentID
setButtonAction:
initWithStyle:reuseIdentifier:specifier:
propertyForKey:
boolValue
_createInstallButton
_updateSubviewsWithInstallState:
setAccessoryView:
setSelectionStyle:
layoutSubviews
clearColor
setBackgroundColor:
setCharge:
target
buttonAction
addTarget:action:forControlEvents:
setEnabled:
colorWithWhite:alpha:
setTintColor:
setAlpha:
sizeToFit
specifierForAppWithDescription:target:action:
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEnded:withEvent:
touchesCancelled:withEvent:
setInstallState:
installState
_installButton
_installState
raise:format:
displayName
_initializeAppInstallerWithAppDescription:
_specifiers
setSpecifiers:
tableView:cellForRowAtIndexPath:
_updateInstallCell:
appInstaller
start
_dismissAboutPrivacyViewController:
viewControllerForAboutPrivacyWithTarget:action:
delegate
account
appDescription
_installButtonTapped:
username
_accountUsernameButtonTapped:
setControllerLoadAction:
_seeMoreAppsLinkButtonTapped:
_setAppAllowedAccess:withSpecifier:
_isAppAllowedAccountAccessWithSpecifier:
sharedPrivacyFacade
initWithBundle:privacyFacade:
isAccessGranted
setAccessGranted:
knownAppBundles
countByEnumeratingWithState:objects:count:
_specifierForBundle:
emptyGroupSpecifier
stringWithFormat:
rangeOfString:
valueWithNonretainedObject:
_aboutPrivacyLinkTapped:
groupSpecifierWithID:
_accountUsernameSpecifier
_seeMoreAppsSpecifier
_accountAccessSpecifiers
groupSpecifierWithID:name:
installAppSpecifier
copy
bundleIdentifier
removeObject:
addObjectsFromArray:
initForAppWithDescription:
isInstalled
_expectedAppAvailabilityInCurrentAppStore:
setPendingAppStoreAvailabilityCheck:
checkAvailabilityInStore:
requiresReachabilityCheckToDetermineDownloadability
setPendingAppDownloadabilityCheck:
fetchDownloadability:
setAppInstaller:
currentStoreFront
containsObject:
pendingAppStoreAvailabilityCheck
pendingAppDownloadabilityCheck
isAvailableInStore
isDownloadable
reloadSpecifier:
_reloadInstallAppSpecifierIfNeeded
appInstallerWillStart:
appIsDownloadableDidChange:
appIsAvailableInStoreDidChange:
initWithCoder:
setInstallAppSpecifier:
_pendingAppStoreAvailabilityCheck
_pendingAppDownloadabilityCheck
_identityProvider
_appDescription
_delegate
_appInstaller
_installAppSpecifier
TV_PROVIDER_TITLE
ERROR_DISMISS_BUTTON_TITLE
SIGN_OUT_BUTTON_TITLE
v20@?0B8@"NSError"12
v8@?0
B16@?0@"NSError"8
v16@?0@"VSIdentityProvider"8
v16@?0@"NSError"8
v16@?0@"NSArray"8
v16@?0@"VSIdentityProviderResponse"8
v16@?0@"VSFailable"8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
identityProviderController
T@"VSIdentityProviderController",&,N,V_identityProviderController
shouldPresentIdentityProviderViewController
TB,N,V_shouldPresentIdentityProviderViewController
accountStore
T@"VSAccountStore",&,N,V_accountStore
currentChildViewController
T@"UIViewController",&,N,V_currentChildViewController
privateQueue
T@"NSOperationQueue",&,N,V_privateQueue
remoteNotifier
T@"VSRemoteNotifier",&,N,V_remoteNotifier
VSAppIsAlreadyInstalled
VSAppIsAvailable
APP_INSTALL_BUTTON_TITLE_ALREADY_INSTALLED
APP_INSTALL_BUTTON_TITLE_INSTALL_NOW
APP_INSTALL_BUTTON_TITLE_UNAVAILABLE
installState
Tq,N,V_installState
The %@ initializer is not available.
The %@ parameter must not be nil.
account
ACCOUNT_INFO_DEFAULT_USERNAME
APP_STORE_LINK_TEXT
VSAccountInfo
AUTHENTICATED_SETTINGS_HEADER_FORMAT
ABOUT_PRIVACY_LINK_TITLE
%@ %@
accountGroup
seeMoreApps
accountAccess
ACCOUNT_ACCESS_GROUP_NAME
installAppGroup
v12@?0B8
appInstaller
T@"ACUIAppInstaller",&,N,V_appInstaller
pendingAppStoreAvailabilityCheck
TB,N,V_pendingAppStoreAvailabilityCheck
pendingAppDownloadabilityCheck
TB,N,V_pendingAppDownloadabilityCheck
installAppSpecifier
T@"PSSpecifier",&,N,V_installAppSpecifier
T@"VSAccount",R,N,V_account
identityProvider
T@"VSIdentityProvider",R,N,V_identityProvider
appDescription
T@"ACUIAppDescription",R,N,V_appDescription
delegate
T@"<VSAccountInfoViewControllerDelegate>",W,N,V_delegate
VSSettingsViewController
VSAccountInfoViewControllerDelegate
NSObject
VSIdentityProviderControllerDelegate
VSIdentityProviderPickerViewControllerDelegate
VSRemoteNotifierDelegate
VSAppInstallCell
VSAccountInfoViewController
ACUIAppInstallerDelegate
v24@0:8@16
v24@0:8@"VSAccountInfoViewController"16
v40@0:8@16@24@32
v40@0:8@"VSAccountInfoViewController"16@"VSAccount"24@"VSIdentityProvider"32
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@"VSIdentityProviderController"16@"UIViewController"24
v32@0:8@"VSIdentityProviderController"16@"VSAccount"24
v24@0:8@"VSIdentityProviderController"16
v24@0:8@"UIViewController<VSIdentityProviderPickerViewController>"16
v32@0:8@"UIViewController<VSIdentityProviderPickerViewController>"16@"VSIdentityProvider"24
v32@0:8@"VSRemoteNotifier"16@"NSDictionary"24
@32@0:8@16@24
v20@0:8B16
v28@0:8@16B24
v16@0:8
v36@0:8@16@24B32
@"VSIdentityProviderController"
@"VSAccountStore"
@"UIViewController"
@"NSOperationQueue"
@"VSRemoteNotifier"
@40@0:8@16@24:32
@40@0:8q16@24@32
v24@0:8q16
q16@0:8
@"SKUIItemOfferButton"
v24@0:8@"ACUIAppInstaller"16
@24@0:8@16
@40@0:8@16@24@32
@24@0:8^{__CFBundle=}16
@"VSAccount"
@"VSIdentityProvider"
@"ACUIAppDescription"
@"<VSAccountInfoViewControllerDelegate>"
@"ACUIAppInstaller"
@"PSSpecifier"
%@ app expected to be unavailable in current app store, so starting with hidden Install / Unavailable button.
%@ app downloadability requires reachability check, so starting with hidden Install / Unavailable button.
The pending %@ app downloadability check finished. The button will become visible now unless we're still waiting for a pending app store availability check.
The pending %@ app store availability check finished. The button will become visible now unless we're still waiting for a pending downloadability check.
