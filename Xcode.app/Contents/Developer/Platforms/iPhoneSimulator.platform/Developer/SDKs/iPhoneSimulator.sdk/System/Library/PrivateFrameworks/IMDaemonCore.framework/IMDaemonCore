?UUUUUU
@(#)PROGRAM:IMDaemonCore  PROJECT:IMDaemonCore-
init
retain
alloc
numberWithInt:
initWithObjectsAndKeys:
sharedTunesController
addListener:
sharedInstance
class
isKindOfClass:
mutableCopy
dealloc
defaultCenter
removeObserver:name:object:
removeListener:
release
numberWithBool:
dictionaryWithObject:forKey:
writeAccountDefaults:
sharedAccountController
accountID
isAccountActive:
accountDefaults
objectForKey:
boolValue
sharedDaemon
parentalControls
disableAccount:
count
allKeys
countByEnumeratingWithState:objects:count:
isNull
length
removeObjectForKey:
addEntriesFromDictionary:
service
broadcasterForService:messageContext:
account:defaultsChanged:
session
accountDefaultsChanged:
isManaged
delayedSaveSettings
postAccountCapabilitiesToListener:
broadcasterForTarget:forService:messageContext:
blockList
allowList
blockingMode
blockIdleStatus
statusToPost
capabilities
serviceLoginStatus
serviceLoginStatusMessage
account:defaults:blockList:allowList:blockingMode:blockIdleStatus:status:capabilities:serviceLoginStatus:loginStatusMessage:
numberWithUnsignedLongLong:
buddyProperties
copy
groups
autorelease
isDisabled
wasDisabledAutomatically
setWasDisabledAutomatically:
serviceSupportsOneSessionForAllAccounts
existingServiceSessionForService:
sessionClass
initWithAccount:service:
internalName
addAccount:
sessionDidBecomeActive
status
changeMyStatus:changedKeys:
shouldForceAccountsConnected
login
sessionWillBecomeInactiveWithAccount:
intValue
setObject:forKey:
__stringByStrippingControlCharacters
unarchiveObjectWithData:
stringValue
addObject:
removeObjectsForKeys:
keysOfChangedEntriesComparedTo:
isActive
allObjects
account:statusChanged:
isEqualToDictionary:
shouldPublishNowPlaying
playerInfo
archivedDataWithRootObject:
messageFormat
isEqualToString:
dictionaryWithObjectsAndKeys:
changeStatus:
isSystemIdle
systemIdleTime
dateWithTimeIntervalSinceNow:
setIdleTime:
_updateIdle
_registrationInfo
_forceSetLoginStatus:message:reason:properties:
setLoginStatus:message:reason:properties:
__forceSetLoginStatus:oldStatus:message:reason:properties:account:
systemDidBecomeIdle
systemDidBecomeUnidle
screenSaverDidStart
screenSaverDidStop
screenLocked
screenUnlocked
systemWillSleep
systemDidWake
systemDidEnterMemoryPressure
systemDidLeaveMemoryPressure
systemWillShutdown
systemApplicationDidEnterBackground
systemApplicationWillEnterForeground
systemApplicationDidBecomeActive
systemApplicationWillResignActive
systemApplicationDidSuspend
systemApplicationDidResume
systemApplicationDidSuspendForEventsOnly
systemApplicationDidResumeForEventsOnly
notificationCenterWillAppear
notificationCenterDidDisappear
systemDidStartBackup
systemDidStopBackup
systemDidFinishMigration
systemRestoreStateDidChange
systemDidFastUserSwitchOut
systemDidFastUserSwitchIn
systemDidLogout
systemDidLock
systemDidUnlock
systemScreenDidPowerUp
systemScreenDidPowerDown
systemDidLeaveFirstDataProtectionLock
systemDidLeaveDataProtectionLock
systemDidEnterDataProtectionLock
initWithAccountID:defaults:service:
setIsManaged:
canMakeDowngradeRoutingChecks
postAccountCapabilities
accountInfoToPost
createSessionIfNecessary
releaseSession
statusToSave
tunesController:playerInfoChanged:
setRegistrationStatus:error:alertInfo:
loginID
registrationStatus
registrationError
registrationAlertInfo
setLoginStatus:message:
isLoading
setIsLoading:
setSession:
serviceDisconnectReason
_accountDefaults
_account
_service
_session
_myStatus
_lastPostedStatus
_isLoading
_isManaged
_loginStatusMessage
_loginStatus
_disconnectReason
_daemonWillShutdown:
addObserver:selector:name:object:
save
allServices
arrayByApplyingSelector:
isIDSBased
serviceDefaults
accountsForService:
serviceRequiresSingleAccount
accountForAccountID:
defaultAccountSettings
loadOldStatusStore
serviceProperties
stringGUID
shouldCreateActiveAccounts
activateAccount:
accountsLoadedFromIdentityServices
activeAccountsFromIdentityServices
activateAccounts:
disallowDeactivation
shouldForceAccountsActive
serviceWithName:
_checkPowerAssertion
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
saveSettings
containsObject:
lastObject
loginWithAccount:
enableAccount:
activeAccountsForService:
activeAccountsChanged:forService:
removeObject:
logout
removeAccount:
activeAccounts
sharedPictureCache
writePictureCache
deactivateAccounts:
deactivateAccounts:force:
_isAccountActive:forService:
accountAdded:defaults:service:
accountAdded:
isEqualToIgnoringCase:
allKeysForObject:
deactivateAccount:force:
accountRemoved:
accounts
allValues
caseInsensitiveCompare:
__imArrayByFilteringWithBlock:
idsAccount
uniqueID
__imArrayByApplyingBlock:filter:
__imFirstObject
load
deferredSave
deactivateAccount:
setupAccount:
accountsForLoginID:onService:
connectedAccounts
connectedAccountsForService:
connectingAccounts
connectingAccountsForService:
accountForIDSAccountUniqueID:
activeSessions
sessionForAccount:
anySessionForServiceName:
_accounts
_activeAccounts
_isFirstLoad
_copyServicePropertiesFromIMServiceBundle:
synchronizeServiceDefaults
unloadServiceBundle
pathForResource:ofType:
dictionaryWithContentsOfFile:
isLoaded
_reallyUnloadServiceBundle
bundleIdentifier
loadAndReturnError:
unload
serviceProtocolVersion
_serviceDomain
stringWithFormat:
oldInternalName
loadServiceBundle
principalClass
initWithFormat:
defaultManager
fileExistsAtPath:
initWithContentsOfFile:
_defaultDefaults
serviceDomain
_serviceDefaultsForDomain:
_oldServiceDomain
array
addObjectsFromArray:
defaultsChanged:forService:
purgeMemoryCaches
initWithBundle:
accountClass
serviceDefaultsForSetup
clearOneTimeImportAccounts
newAccountWithAccountDefaults:accountID:
supportsDatabase
serviceSupportsRegistration
serviceIgnoresNetworkConnectivity
serviceWantsNullHostReachability
serviceNeedsLogin
serviceNeedsPassword
serviceShouldBeAlwaysLoggedIn
serviceRequiresHost
serviceChatsIgnoreLoginStatus
serviceSupportsPresence
description
bundle
_bundle
_sessionClass
_internalName
_serviceDefaults
_serviceProperties
_cachedServiceDefaults
_cachedSetupServiceDefaults
_blockPrefWriting
object
enumerateObjectsUsingBlock:
removeObjectsInArray:
__allServiceSessionsWeakReferenceArray
weakRefWithObject:
__imArrayByApplyingBlock:
allServiceSessions
isEqual:
enableNotifications
lock
initWithCapacity:
_setAutoReconnectTimer
chats
account
chatIdentifier
style
_newHashForChat:style:
unlock
_managedPrefsNotification:
_networkChanged:
_callMonitorStateChanged:
setWatchesSystemLockState:
__registerNewServiceSession:
_processConnectionMonitorUpdate
cancelPreviousPerformRequestsWithTarget:
_abandonSystemProxySettingsFetcher
_abandonPWFetcher
_clearAutoReconnectTimer
_clearConnectionMonitor
invalidate
_updateConnectionMonitorFromAccountDefaultsIgnoringProxy:
isUnderFirstDataProtectionLock
_updateRoutingTimerWithInterval:
_updateExpireStateTimerWithInterval:
_updateWatchdogTimerWithInterval:
leaveAllChats
clear
setDelegate:
initWithRemoteHost:delegate:
remoteHost
goConnectedWithLocalSocketAddress:remoteSocketAddress:
server
initWithHost:port:delegate:
retrieveProxySettings
stringByRemovingWhitespace
_updateConnectionMonitorWithRemoteHost:
_reconnectIfNecessaryWithAccount:
accountShouldBeAlwaysLoggedIn
_doLoginIgnoringProxy:withAccount:
isImmediatelyReachable
overrideNetworkAvailability
goDisconnected
logoutServiceSessionWithAccount:
isDataConnectionActive
isOnCall
supportsSimultaneousVoiceAndDataRightNow
_setPendingConnectionMonitorUpdate
_processPotentialNetworkChange
isNetworkUp
autoReconnectWithAccount:
disableServiceSession:
active
allowedAsChild
lowercaseString
canonicalFormOfID:
broadcaster
account:capabilitiesChanged:
currentMessageContext
broadcasterForListenersWithCapabilities:
arrayWithObjects:
initWithTargets:
broadcasterForListenersWithCapabilities:forService:messageContext:
endMessageSuppression
null
updateProperties:chat:style:
chatForChatIdentifier:style:
broadcasterForChatListeners
guid
properties
chat:propertiesUpdated:
connectionMonitorDidUpdate:
autoLogin
autoReconnect
logoutWithAccount:
holdBuddyUpdates
resumeBuddyUpdates
authenticateAccount:
registerAccount:
unregisterAccount:
requestGroups
changeGroups:
changeGroup:changes:
renameGroup:to:
acceptSubscriptionRequest:from:
requestSubscriptionTo:
startWatchingBuddy:
stopWatchingBuddy:
requestProperty:ofPerson:
setValue:ofProperty:ofPerson:
updateAuthorizationCredentials:token:account:
joinChatID:handleInfo:identifier:style:joinProperties:
joinChatID:handleInfo:identifier:style:groupID:joinProperties:
leaveChatID:identifier:style:
removeChatID:identifier:style:
invitePersonInfo:withMessage:toChatID:identifier:style:
removePersonInfo:chatID:identifier:style:
declineInvitationToChatID:identifier:style:
updateDisplayName:fromDisplayName:forChatID:identifier:style:
sendMessage:toChatID:identifier:style:
sendReadReceiptForMessage:toChatID:identifier:style:
sendPlayedReceiptForMessage:toChatID:identifier:style:
sendSavedReceiptForMessage:toChatID:identifier:style:
noteMessagesMarkedAsReadForChatWithGUID:
setProperties:ofParticipant:inChatID:identifier:style:
setBlockingMode:
setAllowList:
setBlockList:
setBlockIdleStatus:
passwordUpdatedWithAccount:
importMessage:isRead:
sendFileTransfer:toPerson:
sendCommand:withProperties:toPerson:
sendCommand:withProperties:toPerson:toChatID:identifier:style:
requestVCWithPerson:properties:conference:
respondToVCInvitationWithPerson:properties:conference:
cancelVCRequestWithPerson:properties:conference:reason:
sendCounterProposalToPerson:properties:conference:
sendVCUpdate:toPerson:conference:
sendAVMessageToPerson:sessionID:type:userInfo:conference:
relay:sendInitateRequest:toPerson:
relay:sendUpdate:toPerson:
relay:sendCancel:toPerson:
addAliases:account:
removeAliases:account:
validateAliases:account:
unvalidateAliases:account:
validateProfileWithAccount:
enrollDeviceInSMSRelay:
unEnrollDeviceInSMSRelay:
enrollSelfDeviceInSMSRelay
accountNeedsLogin
accountNeedsPassword
displayName
updateConnectionMonitorWithLocalSocketAddress:remoteSocketAddress:
_reconnectIfNecessary
networkConditionsAllowLogin
canonicalFormOfChatRoom:
equalID:andID:
refreshServiceCapabilities
broadcasterForChatObserverListeners
broadcasterForAVConferenceListeners
broadcasterForACConferenceListeners
broadcasterForVCConferenceListeners
_clearDowngradeMarkersForChat:
serverHost
serverPort
proxyType
proxyHost
proxyPort
proxyAccount
proxyPassword
useSSL
password
_lock
_localProperties
_changedBuddies
_registeredChats
_groupChatIdentifierToChatRoomMap
_chatRoomToGroupChatIdentifierMap
_chatSuppressionFlagMap
_chatSuppressionTimerMap
_suppressedMessages
_messageRoutingTimer
_messageExpireStateTimer
_messageWatchdogTimer
_storageTimer
_messagesReceivedDuringStorage
_pendingReadReceiptFromStorageCount
_connectionMonitor
_reconnectTimer
_loginID
_pwRequestID
_systemProxySettingsFetcher
_buddyChangeLevel
_activated
_saveKeychainPassword
_awaitingDataContext
_shouldReconnect
_badPass
_buddies
_proxyHost
_proxyAccount
_proxyPassword
_password
_serverHost
_proxyType
_proxyPort
_useSSL
_serverPort
initWithService:
addDelegate:queue:
removeDelegate:
componentsSeparatedByString:
objectAtIndexedSubscript:
numberWithUnsignedInteger:
_senderIDFromToken:
_stripFZIDPrefix
date
initWithSender:time:body:attributes:fileTransferGUIDs:flags:error:guid:
setPayloadData:
setBalloonBundleID:
didReceiveMessage:forChat:style:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retainCount
zone
hash
superclass
debugDescription
dtService
setDtService:
_dtService
synchronize
delayedSynchronize
setContextStamp:
_updateContextStamp
broadcasterWithMessageContext:
_dictionaryRepresentation
fileTransfer:updatedWithProperties:
stringByAppendingPathComponent:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
localURL
initWithInputURL:outputURL:identifier:operation:delegate:
start
_setTransferState:
_postUpdated:
_archiveFileTransfer:
identifier
didErrorOccur
transferForGUID:
failTransfer:reason:
__mainThreadPostNotificationName:object:
outputURL
defaultHFSFileManager
path
attributesOfItemAtPath:error:
_setLocalURL:
fileSize
_setCurrentBytes:totalBytes:
otherPerson
_addGatekeeperProperties:toFileAtPath:
enumeratorAtPath:
_needsWrapper
stringByDeletingLastPathComponent
lastPathComponent
stringByDeletingPathExtension
createUniqueDirectoryWithName:atPath:ofType:
writeToFile:atomically:encoding:error:
fileURLWithPath:
addDefaultGatekeeperPropertiesToDirectory:
_addSpotlightPropertiesFromFileTransfer:toDirectory:
moveItemAtPath:toPath:uniquePath:error:
removeItemAtPath:error:
cleanup
_transferTimerTick:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
averageTransferRate
currentBytes
timeIntervalSince1970
_lastAveragedInterval
_lastAveragedBytes
_setAveragedTransferRate:lastAveragedInterval:lastAveragedBytes:
_setLastUpdatedInterval:
totalBytes
fileTransfer:updatedWithCurrentBytes:totalBytes:averageTransferRate:
_initWithGUID:filename:isDirectory:localURL:account:otherPerson:totalBytes:hfsType:hfsCreator:hfsFlags:isIncoming:
fileHFSTypeCode
fileHFSCreatorCode
fileHFSFlags
fileTransfers:createdWithLocalPaths:
makeNewIncomingTransferWithGUID:filename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:
makeNewOutgoingTransferWithGUID:filename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:
_setAccount:otherPerson:
fileTransfer:createdWithProperties:
removeTransferForGUID:
valueOfPersistentProperty:
launchListenerForCapability:
standaloneFileTransferRegistered:
transferState
_addActiveTransfer:
_setError:
isIncoming
_createWrapperForTransfer:
resetTransfer:andPostReason:
_setStartDate:
_addTransferringTransfer:
_removeWrapperForTransfer:
_setDirectory:hfsType:hfsCreator:hfsFlags:
_removeActiveTransfer:
_removeTransferringTransfer:
startFinalizingTransfer:
isFinished
storeAttachment:associateWithMessageWithGUID:
localPath
_completeProgressForTransferGUID:
_clearProgressForTransferGUID:
localizedDescription
_setErrorDescription:
_handleFileTransfer:acceptedWithPath:autoRename:overwrite:postNotification:
_dictionaryRepresentationsForFileTransfers:toSave:
dictionaryWithObjects:forKeys:
shouldForceArchive
_doesLocalURLRequireArchiving:
_updateWithDictionaryRepresentation:
UTF8String
transferredFilename
setTransferredFilename:
filename
_randomTemporaryPathWithFileName:
error
_handleFileTransferStopped:
hasPrefix:
setMessageGUID:
setHideAttachment:
stringByAppendingPathExtension:
stringByResolvingAndStandardizingPath
writeToFile:options:error:
fileURLWithPath:isDirectory:
guidForNewOutgoingTransferWithLocalURL:
_newFileTransferForStoredAttachmentPayloadDataWithTransferGUID:messageGUID:
broadcastTransfersWithGUIDs:atLocalPaths:
fileCopierDidStart:
fileCopierDidFinish:
_progressForTransferGUID:allowCreate:path:
_temporaryPathForGUID:filename:
archiveFileTransfer:
_addGatekeeperProperties:toDirectory:
hasActiveFileTransfers
guidForNewIncomingTransferWithFilename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:
guidForNewOutgoingTransferWithFilename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:
assignTransfer:toAccount:otherPerson:
removeUnassignedTransfers
addTransfer:forGUID:
registerStandaloneTransfer:
startTransfer:
updateTransfer:currentBytes:totalBytes:
updateTransfer:
endTransfer:
resetTransferAndPostError:error:
failTransfer:error:
acceptTransfer:path:
_allFileTransfers
_handleSendFileTransfer:
_handleFileTransfer:createdWithProperties:fromPid:
_handleFileTransfer:updatedWithProperties:
_handleFileTransferRemoved:
guidsForStoredAttachmentPayloadData:messageGUID:
markAttachment:sender:recipients:isIncoming:
contextStamp
_guidToCopierMap
_guidToSimpleCopierMap
_guidToTransferMap
_activeTransfers
_contextStamp
_transferTimer
_transferringTransfers
code
_cleanUpTemporaryFiles
_isPairedDeviceInProxyMode
_initiateQuickSwitch
_getFileSizeAtPath:
_getTempDBPath
_deleteFileAtPath:
_getTempRecentsPath
_getZippedDBPath
_getZippedRecentsPath
_getTruncatedDBPath
_getDowngradedDBPath
initWithInputURL:outputURL:identifier:operation:completionBlock:queue:
numberWithInteger:
_sendIDSMessage:
_quickSwitchCompleted:
_notifyPSYWithResult:
_sendIDSFile:withCommand:
_getCurrentDBVersion
integerValue
_truncateDBToPath:
moveItemAtPath:toPath:error:
_sendZippedFileAtPath:withCommand:
_notifyPSYDataSent
_compressFileAtPath:toPath:withCompletionBlock:
stringByStandardizingPath
copyItemAtPath:toPath:error:
setWithObject:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
_FTCopyGzippedData
sendData:toDestinations:priority:options:identifier:error:
_FTOptionallyDecompressData
_handleQuickSwitchInitiateRequest
_handleDBVersionResponse:
_handleRecentsRequest
_handleQuickSwitchCompleted:
_handleIncomingDB:
_handleIncomingRecents:
_appearsToBeEmail
devices
isDefaultPairedDevice
dummyMethod
_decompressFileAtPath:toPath:withCompletionBlock:
_sendDBVersionResponse:
_sendRecentsRequest
_sendQuickSwitchCompletedWithResult:
_defaultPairedDevice
quickSwitchIDSService
setQuickSwitchIDSService:
_quickSwitchIDSService
setAsString:forKey:
substringWithRange:
_updateMessage
objectAtIndex:
timeIntervalSinceNow
_playerChanged:
userInfo
isEnabled
_playerChangedNotification:
setPlayerInfo:
_lastChange
_lastInfo
_playerInfo
_listeners
_messageFormat
_legacy_parseAIMLString:
_IMAgentObjectForKey:
_superFormatFromAIML:
registerSessionClassWithBundle:
_services
setModificationStamp:
performInitialHousekeeping
broadcasterForChatListenersWithMessageContext:
databaseFull
lastMessage
updateLastMessageForChat:hintMessage:
updateStateForChat:fromMessage:toMessage:forcePost:hintMessage:
fileTransferGUIDs
isAuxImage
AuxGUIDFromFileTransferGUID:
attachmentWithGUID:
messageGUID
_itemsWithGUIDs:
handle
updateStamp
_storeAttachmentsForMessage:
isFromMe
sender
_updateCacheForMessageGUID:fromMessage:toMessage:updateLastMessage:
associatedMessageGUID
initWithArray:
startTimingForKey:
stopTimingForKey:
anyObject
_itemsWithAssociatedGUID:
registerTransfersWithGUIDs:forMessageGUID:
type
_hasMessagesWithGUIDs:
itemWithGUID:
timeIntervalSinceReferenceDate
body
string
__stringByStrippingAttachmentAndControlCharacters
existingChatsForIDs:onService:style:
serviceName
messagesWithHandles:onServices:messageGUID:limit:
_messagesWithHandles:onServices:messageGUID:limit:onlyMessages:
messagesWithRoomNames:onServices:messageGUID:limit:
_messagesWithRoomNames:onServices:messageGUID:limit:onlyMessages:
_unreadMessagesWithHandles:onServices:limit:fallbackGUID:
_unreadMessagesWithRoomNames:onServices:limit:fallbackGUID:
chatForMessageGUID:
chatsForMessageGUID:
chatsGUIDsForMessageWithGUID:
existingChatWithGUID:
countryCode
unformattedID
deleteMessageGUIDs:
removeMessage:fromChat:
subarrayWithRange:
historicalMessageGUIDsDeleted:chatGUIDs:queryID:
_deleteMessagesWithGUIDs:chatIdentifiers:style:onServices:batchNumber:completion:
_performBlock:afterDelay:
deleteMessagesWithChatIdentifiers:style:onServices:completion:
messageWithReplaceMessageID:fromHandle:onService:
longLongValue
initWithLongLong:
mainThread
_suppressDBUpdateTimerFired
__im_performBlock:
__postDBUpdate
broadcasterForChatDatabaseListenersWithMessageContext:
modificationStamp
databaseUpdated:
postCountChanges
_updateModificationDate
_postDBUpdate
lastFailedMessageID
broadcasterForListenersWithCapabilities:messageContext:
lastFailedMessageIDChanged:
unreadMessagesCount
unreadCountChanged:
associatedMessageType
pluginSessionGUID
balloonBundleID
messagesWithAssociatedGUID:
setConsumedSessionPayloads:
consumedSessionPayloads
updateFileTransfer:
storeItem:forceReplace:
storeMessage:forceReplace:modifyError:modifyFlags:flagMask:
updateUnformattedID:forBuddyID:onService:
messagesWithGUIDs:
canStoreItem:onService:
canStoreMessage:onService:
hasStoredMessageWithGUID:
messageWithGUID:
existingMessageSimilarToMessage:skipServices:skipGUIDs:withinTimeInterval:participants:
markMessageAsDeduplicated:
messagesWithHandles:onServices:limit:
messagesWithRoomNames:onServices:limit:
lastMessageWithHandles:onServices:
unreadMessagesWithHandles:onServices:limit:fallbackGUID:
unreadMessagesWithRoomNames:onServices:limit:fallbackGUID:
lastMessageWithRoomNames:onServices:
attachmentsWithHandles:onServices:
attachmentsWithRoomNames:onServices:
messageActionItemsForOriginalMessageGUID:
frequentRepliesForForChatIdentifiers:onServices:limit:
chatForMessage:
chatsForMessage:
resolveUnformattedRepresentationsForHandles:onService:message:completionBlock:
deleteMessageGUIDs:inChat:
deleteMessagesWithChatIdentifiers:style:onServices:
deleteMessagesWithReplaceMessageID:fromHandle:onService:
markMessagesAsReadWithHandles:onServices:upToGUID:readDate:fromMe:
markMessagesAsReadWithRoomNames:onServices:upToGUID:readDate:fromMe:
markMessagesAsReadWithHandle:onService:upToGUID:readDate:fromMe:
markMessagesAsReadWithRoomname:onService:upToGUID:readDate:fromMe:
cleanseAttachments
isSuppressDatabaseUpdates
setSuppressDatabaseUpdates:
rebuildLastFailedMessageID
rebuildUnreadMessageCount
replaceMessageAcknowledgmentsWithNewMessageAcknowledgment:associatedMessageGUID:sender:
loadConsumedSessionPayloadsForItems:
_modificationStamp
_cachedUnreadMessageCount
_cachedLastFailedMessageID
_suppressedUpdates
_pendingDBUpdatePost
_suppressedUpdatesTimer
databaseNoLongerFull
isTypingMessage
rangeOfString:
setGroupID:
setProperties:
setDisplayName:
setIsFiltered:
setLastAddressedLocalHandle:
setChatIdentifier:
setState:
setServiceName:
setStyle:
setParticipants:
setGuid:
setHasHadSuccessfulQuery:
setRoomName:
setAccountID:
_updateCachedParticipants
numberWithChar:
numberWithLongLong:
participants
handleInfo
compareIDs:
indexOfObject:matchingComparison:
isBetterDefinedThan:
replaceObjectAtIndex:withObject:
storeChat:
arrayWithObject:
addParticipants:
removeObjectAtIndex:
removeParticipants:
state
roomName
unreadCount
rowID
groupID
isFiltered
hasHadSuccessfulQuery
copyDictionaryRepresentation:
copyDictionaryRepresentation
setLastMessage:
initWithDictionary:
chat:updated:
lastAddressedLocalHandle
sortedArrayUsingSelector:
componentsJoinedByString:
dataUsingEncoding:
SHA1HexString
storeAndBroadcastChatChanges
chat:displayNameUpdated:
chat:isFilteredUpdated:
initWithAccountID:service:guid:groupID:chatIdentifier:participants:roomName:displayName:lastAddressedLocalHandle:properties:state:style:isFiltered:hasHadSuccessfulQuery:
_setUnreadCount:
isArchived
_setRowID:
addParticipant:
removeParticipant:
serviceSession
chatProperties
dictionaryRepresentationIncludingLastMessage
dictionaryRepresentation
_updateLastMessage:
updateProperties:
generateNewGroupID
isUnnamedChat
updateGroupID:
updateLastAddressedHandle:
updateDisplayName:
updateIsFiltered:
updateHasHadSuccessfulQuery:
_accountID
_serviceName
_properties
_chatIdentifier
_guid
_groupID
_roomName
_displayName
_lastAddressedLocalHandle
_participants
_lastMessage
_chatInfo
_state
_style
_unreadCount
_rowID
_isArchived
_isFiltered
_hasHadSuccessfulQuery
_forceReloadChats:
replayMessages
existingChatForID:account:
addChat:
existingChatWithIdentifier:account:
existingChatForRoom:account:
setWithArray:
isEqualToSet:
existingChatForIDs:account:displayName:groupID:style:
messageID
unreadCountForChat:
errorCode
updateUnreadCountForChat:
deleteChat:
addMessageWithGUID:toChat:
removeMessageWithGUID:fromChat:
updateStateForChat:hintMessage:
loadChatsWithCompletionBlock:
postSetupToAllListeners
_saveChats
loadAllChats
repairDuplicateChatsIfNeeded
allExistingChatsWithIdentifier:style:
_makeAllAttachmentsClassC
nextObject
dictionaryWithObjects:forKeys:count:
setAttributes:ofItemAtPath:error:
compare:
sortedArrayUsingComparator:
_createGroupChatsArray
findDuplicateUnnamedGroups:
_chat:isDuplicateOfChat:
arrayWithCapacity:
findDuplicateChats:
_findChatWinnerInDuplicateChatArray:
_findLosingChatGUIDsInArrayOfChats:withWinner:
removeChat:
_updateDuplicateUnnamedGroupsWithNewGroupIDIfNeeded
_mergeDuplicateGroupsIfNeeded
chatForHandle:account:chatIdentifier:guid:
chatForHandles:account:chatIdentifier:style:groupID:displayName:guid:
chatForRoom:account:chatIdentifier:guid:
existingChatForIDs:account:style:
updateStateForChat:forcePost:
addItem:toChat:
removeItem:fromChat:
addMessage:toChat:
_chatInfoForSaving
saveChats
_chatsLock
_chats
_doneLoadingAfterMerge
context
firstOccurrence
setContext:
shouldJettison:
setCount:
_contextWeakReference
_firstOccurrence
_count
initWithFormat:arguments:
doubleValue
dateWithTimeIntervalSinceReferenceDate:
numberWithDouble:
_setLocalPath:
setType:
setCreatedDate:
setIsIncoming:
setUserInfo:
setTotalBytes:
setFilename:
setIsSticker:
setStickerUserInfo:
setAttributionInfo:
saveAttachmentForTransfer:
isSticker
isAuxVideo
createdDate
startDate
mimeType
stickerUserInfo
attributionInfo
hideAttachment
updateAttachment:
deleteAttachmentForTransfer:
removeAttachment:fromMessageWithGUID:
deleteAttachmentsWithGUIDs:
deleteAttachmentDataForTransfer:
deleteAttachmentWithGUID:
initWithID:unformattedID:countryCode:
archiveChat:
unarchiveChat:
chatsWithHandle:onService:
chatsWithRoomname:onService:
setChatIsFiltered:withChatGuid:
_lastModificationStamp
_generateLocationSharingItemWithHandleID:direction:action:
receivedIncomingLocationSharePacket:
_forwardMappingPacket:toID:account:
bundleForClass:
containsObjectIdenticalTo:
removeObjectIdenticalTo:
methodSignatureForSelector:
invokeWithTarget:
addTarget:
removeTarget:
forwardInvocation:
_targets
set_targets:
set_lock:
changeType
otherHandle
time
title
actionType
direction
originalMessageGUID
timeRead
timeDelivered
timePlayed
flags
numberWithUnsignedInt:
subject
expireState
payloadData
expressiveSendStyleID
timeExpressiveSendPlayed
associatedMessageRange
messageSummaryInfo
dataWithMessageSummaryInfoDictionary:
value:withObjCType:
replaceID
initWithMessageItem:
bodyData
setBodyData:
plainBody
setPlainBody:
setAssociatedMessageGUID:
setAssociatedMessageType:
setFileTransferGUIDs:
setSubject:
setTime:
setTimeDelivered:
setTimeRead:
setTimePlayed:
setAccount:
setService:
unsignedIntValue
setErrorCode:
setExpireState:
setTimeExpressiveSendPlayed:
isEmpty
isRead
isSent
isDelivered
setFlags:
isEqualToData:
isEqualToNumber:
isEqualToDate:
initWithFilePath:
errorWithDomain:code:userInfo:
storeDictionary:error:
valueForKey:
replayMessage:
copyNextBatchWithSize:iterationContext:
_processBatch:
deleteReplayDB
storeMessage:type:error:
deleteReplayDBIfNotUnderFirstUnlock
_storageController
registerChat:style:displayName:groupID:handleInfo:
registerChat:style:displayName:groupID:handleInfo:account:
canonicalizeChatIdentifier:style:
isInternalInstall
processInfo
processName
shouldImitateGroupChatUsingChatRooms
chatRoomForGroupChatIdentifier:
groupChatIdentifierForChatRoom:
chatForChatIdentifier:style:account:
processMessageForSending:toChat:style:allowWatchdog:account:completionBlock:
_mapRoomChatToGroupChat:style:
_updateWatchdogForMessageGUID:
setHandle:
sendMessage:toChat:style:account:
account:chat:style:chatProperties:messageReceived:
didSendMessageReadReceiptForMessageID:account:
didSendMessagePlayedReceiptForMessageID:account:
didSendMessageSavedReceiptForMessageID:account:
didLeaveChat:style:
didUpdateChatStatus:chat:style:handleInfo:
didUpdateChatStatus:chat:style:account:
didJoinChat:style:displayName:groupID:handleInfo:
didJoinChat:style:displayName:groupID:handleInfo:account:
didUpdateChatStatus:chat:style:displayName:groupID:handleInfo:
didUpdateChatStatus:chat:style:displayName:groupID:handleInfo:account:
initWithDomain:code:userInfo:
isAwaitingStorageTimer
account:chat:style:chatProperties:error:
didReceiveError:forMessageID:forceError:account:
account:chat:style:chatProperties:messageUpdated:
noteSuppressedMessageUpdate:
isExpirable
_updateExpireStateForMessageGUID:
_didReceiveMessageDeliveryReceiptForMessageID:attempts:date:account:
timeIntervalSinceDate:
_hasSuppressedMessageID:chatGUID:
_didReceiveMessageReadForMessageID:date:attempts:useMessageSuppression:completionBlock:
didReceiveMessageReadForMessageID:date:useMessageSuppression:completionBlock:
_didReceiveMessageReadReceiptForMessageID:date:attempts:completionBlock:
_didReceiveMessagePlayedForMessageID:date:attempts:useMessageSuppression:completionBlock:
didReceiveMessagePlayedForMessageID:date:useMessageSuppression:completionBlock:
_didReceiveMessagePlayedReceiptForMessageID:date:attempts:completionBlock:
initWithSender:time:guid:type:
setActionType:
setOtherHandle:
setOriginalMessageGUID:
_didReceiveMessageSavedForMessageID:ofType:forChat:fromHandle:fromMe:date:attempts:useMessageSuppression:account:completionBlock:
didReceiveMessageSavedForMessageID:ofType:forChat:fromHandle:fromMe:date:useMessageSuppression:completionBlock:
didSendMessage:forChat:style:forceDate:
didSendMessage:forChat:style:account:forceDate:
loginIDForAccount:
account:chat:style:chatProperties:messageSent:
sendSavedReceiptForMessage:toChatID:identifier:style:account:
_updateRoutingForMessageGUID:chatGUID:error:account:
isAssociatedMessageItem
notifyDidSendMessageID:shouldNotify:
notifyDidSendMessageID:account:shouldNotify:
account:chat:style:chatProperties:notifySentMessage:sendTime:
_endMessageSuppressionForChatGUID:
enumerateKeysAndObjectsUsingBlock:
setSender:
setTitle:
didReceiveMessage:forChat:style:account:
arrayWithObjects:count:
didReceiveMessages:forChat:style:account:
dateLastCallEnded
_suppresionTimerFired:
initWithTimeInterval:name:shouldWake:target:selector:userInfo:
_setSuppressedMessage:inChatWithGUID:
account:chat:style:chatProperties:messagesReceived:
roomNameIsProbablyAutomaticallyGenerated
useChatRoom:forGroupChatIdentifier:
account:chat:style:chatProperties:invitationReceived:
account:chat:style:chatProperties:updateProperties:
unregisterChat:style:
account:chat:style:chatProperties:statusChanged:handleInfo:
didChangeMemberStatus:forHandle:unformattedNumber:countryCode:forChat:style:
didChangeMemberStatus:forHandle:fromHandle:unformattedNumber:countryCode:forChat:style:
didChangeMemberStatus:forHandle:fromHandle:unformattedNumber:countryCode:forChat:style:account:
account:chat:style:chatProperties:member:statusChanged:
setOtherUnformattedID:
setOtherCountryCode:
setChangeType:
unsignedIntegerValue
initWithUnsignedInteger:
unsignedLongLongValue
didJoinChat:style:handleInfo:
sendMessage:toChat:style:
_markChatAsDowngraded:
_handleRoutingWithDictionary:
requestRoutingForMessageGuid:inChat:error:completionBlock:
_routingTimerFired
requestRoutingWithCompletion:
canMakeExpireStateChecks
_handleExpireStateDictionary:
requestExpireStateForMessageGuid:completionBlock:
fireDate
_expireStateTimerFired
requestExpireStateWithCompletion:
_handleWatchdogWithDictionary:
requestWatchdogForMessageGuid:completionBlock:
_watchdogTimerFired
requestWatchdogWithCompletion:
_storageTimerFired
pendingReadReceiptFromStorageCount
setPendingReadReceiptFromStorageCount:
_updateStorageTimerWithInterval:
initWithSet:
sortedArrayUsingFunction:context:
registerChat:groupID:style:
registerChat:style:
registerChat:style:handleInfo:
isChatRegistered:style:
processMessageForSending:toChat:style:allowWatchdog:completionBlock:
sendLocationSharingInfo:toID:completionBlock:
didLeaveChat:style:account:
didJoinChat:style:
didJoinChat:style:handleInfo:account:
didReceiveReplaceMessageID:forChat:style:
didReceiveErrorMessage:forChat:style:
didReceiveError:forMessageID:forceError:
didSendMessageReadReceiptForMessageID:
didSendMessagePlayedReceiptForMessageID:
didSendMessageSavedReceiptForMessageID:
didReceiveMessageDeliveryReceiptForMessageID:date:
didReceiveMessageDeliveryReceiptForMessageID:date:account:
didReceiveMessageReadForMessageID:date:completionBlock:
didReceiveMessageReadReceiptForMessageID:date:completionBlock:
didReceiveMessagePlayedForMessageID:date:completionBlock:
didReceiveMessagePlayedReceiptForMessageID:date:completionBlock:
didReceiveMessageSavedForMessageID:ofType:forChat:fromHandle:fromMe:date:completionBlock:
didReceiveMessageSavedForMessageID:ofType:forChat:fromHandle:fromMe:date:useMessageSuppression:account:completionBlock:
didSendMessage:forChat:style:
notifyDidSendMessageID:
didReceiveDisplayNameChange:fromID:forChat:style:account:
didReceiveInvitation:forChat:style:
didUpdateChatStatus:chat:style:
didChangeMemberStatus:forHandle:forChat:style:
didSendBalloonPayload:forChat:style:messageGUID:account:completionBlock:
didReceiveBalloonPayload:forChat:style:messageGUID:account:
noteItemFromStorage:
noteLastItemFromStorage:
incrementPendingReadReceiptFromStorageCount
decrementPendingReadReceiptFromStorageCount
contactsAvatarRecipeData
setContactsAvatarRecipeData:
_copyForEnumerating
laterDate:
account:chat:style:chatProperties:messagesUpdated:
stringByExpandingTildeInPath
stickers
stickerDictionaryRepresentation
stickerGUID
fileURL
_cachedPathForStickerWithProperties:
_isRecipeBasedSticker:
_FTDataFromHexString
transcodeLocalTransferPayloadData:balloonBundleID:completionBlock:
allDownloadedStickerPacks
allDownloadedStickers
_filePathInStickerPacksForStickerGUID:stickerPackGUID:stickerHash:
retrieveStickerWithProperties:completionBlock:
stickerPackGUIDToPackMap
setStickerPackGUIDToPackMap:
_stickerPackGUIDToPackMap
beginBuddyChanges
endBuddyChanges
dictionary
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
hasListeners
account:buddyPropertiesChanged:
localPropertiesOfBuddy:
buddyPictures
pictureOfBuddy:
pictureKeyForBuddy:
allBuddies
markBuddiesAsChanged:
changeProperty:ofBuddy:to:
clearPropertiesOfBuddy:
property:ofBuddy:
localProperty:ofBuddy:
clearLocalProperties
changeLocalProperty:ofBuddy:to:
disallowReconnection
cancelRequestID:serviceIdentifier:
joinChat:style:groupID:joinProperties:
invitePersonInfo:withMessage:toChat:style:
invitePerson:withMessage:toChat:style:
joinChat:handleInfo:style:groupID:joinProperties:
leaveChat:style:
removeChat:style:
declineInvitationToChat:style:
setProperties:ofParticipant:inChat:style:
hasCapability:
noteBadPassword
loginServiceSessionWithAccount:
defaultChatSuffix
joinChat:style:joinProperties:
validityOfChatRoomName:
cancelVCRequestWithPerson:properties:conference:
deleteContext
setDeleteContext:
_deleteContext
initWithPath:storeName:dataProtectionClass:
persistData:forKey:error:
deleteBatchWithContext:error:
datasUpToLimit:deleteContext:error:
deleteDatabase
filePath
store
setStore:
_filePath
_store
_handleFirewallUserNotificationDidFinish:
warnIfPortBlocked:forAction:
userNotificationDidFinish:
_firewallUserNotificationForService:
_login_serverSettingsReadyWithAccount:
requiresDataConnectionActivation
_data_connection_readyWithAccount:
initWithString:
_login_usernameAndPasswordReadyWithAccount:
fetchPasswordForProfileID:username:service:outRequestID:completionBlock:
initWithProxyProtocol:proxyHost:proxyPort:delegate:
retrieveProxyAccountSettings
_login_checkUsernameAndPasswordWithAccount:
_setValue:ofPersistentProperty:
showForgotPasswordNotificationForAccount:
requestPasswordForUsername:service:badPassword:showForgotPassword:shouldRememberPassword:outRequestID:completionBlock:
_doLoginIgnoringProxy:
account:loginStatusChanged:message:reason:properties:
removeAllObjects
_wentOfflineWithAccount:
systemProxySettingsFetcher:retrievedHost:port:protocol:
systemProxySettingsFetcher:retrievedAccount:password:
serviceSessionDidLoginWithAccount:
serviceSessionDidLogoutWithAccount:
serviceSessionDidLogoutWithMessage:reason:properties:account:
_autoReconnectTimer:
initialize
setID:
setCountryCode:
setUnformattedID:
_unformattedID
_countryCode
searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:
searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
searchableIndexDidThrottle:
searchableIndexDidFinishThrottle:
accountType
updateAccountWithAccountInfo:
accountInfo
imdAccountLoginFromIDSAccountWithType:login:
initWithAccountID:defaults:service:idsAccount:
_idsAccount
addRegistrationDelegate:queue:
_loadIDSAccountController
removeRegistrationDelegate:
enabledAccounts
_removeAccount:
initWithDictionary:uniqueID:serviceName:
accountFromIDSAccountWithUniqueID:
updateAccountActivation
refreshRegistration
accountController:accountAdded:
accountController:accountUpdated:
accountController:accountRemoved:
accountController:accountEnabled:
accountController:accountDisabled:
account:registrationStatusInfoChanged:
account:aliasesChanged:
account:vettedAliasesChanged:
account:profileChanged:
account:loginChanged:
account:displayNameChanged:
refreshRegistrationForAccount:
registrationFailedForAccount:needsDeletion:
idsAccountController
_accountController
_activatingAccount
_deactivatingAccount
deviceInformationString
idsAccounts
registeredURIs
_isDeviceRegisteredForAccount:
_updateAccountStatusToUnregistered:withAccount:
authenticateAccount
registerAccount
unregisterAccount
passwordUpdated
updateAuthorizationCredentials:token:
_aliasesForIDSAccount:
aliases
trimmedString
removeAliases:
addAliases:
validateAliases:
unvalidateAliases:
validateProfile
registrationCertificate
vettedAliases
imdAccountForIDSAccount:
validationStatusForAlias:onAccount:
clearCallerIDForAccount:
_bestGuessURI
certForURI:onIDSAccount:
_reregisterAndReidentify:
_aliasStringsForIDSAccount:
_validationStatusForAlias:onAccount:
callerURIForIDSAccount:
_URIFromCanonicalizedPhoneNumber
_appearsToBeDSID
_FZBestGuessFZIDType
_URIFromFZIDType:
idsAccountForURI:
callerURI
_isDeviceRegistered
_aliases
activeDevicesUpdated
reregister
reIdentify
validationStatusForAlias:
certForURI:
clearCallerID
callerID
serviceType
GUID
_GUID
IMDAccount
Creating account id: %@    defaults: %@    on service: %@
IMDAccount: incoming 'defaults' is not a dictionary, %@, %@
AccountManaged
%@ - write account defaults: %@
accountID
accountDefaults
capabilities
serviceLoginStatus
serviceLoginStatusMessage
buddyProperties
groups
Registration
IMDaemonCore
%@: Account is restricted, not creating session
%@: Created active session: %@ of service type: %@   (Session class: %@)
%@: Reused existing session: %@
Session
%@: Telling session it became active
%@: Setting initial status: %@
%@: Forcing login
%@: Done setting up session: %@
Away
DaemonCoreLocalizable
Default Away message
Exception: %@    Loading profile data
Exception archiving object: %@
-[%@ _forceSetLoginStatus:%d message:%@ reason:%d properties:%@] session=%@
isLoading
TB,N,V_isLoading
wasDisabledAutomatically
TB,N
shouldPublishNowPlaying
TB,R,N
registrationStatus
Ti,R,N
registrationError
registrationAlertInfo
T@"NSDictionary",R,&,N
statusToSave
statusToPost
accountInfoToPost
T@"NSDictionary",R,&,N,V_accountDefaults
T@"NSString",R,&,N,V_account
loginID
T@"NSString",R,&,N
service
T@"IMDService",R,&,N,V_service
session
T@"IMDServiceSession",&,N,V_session
isActive
isDisabled
isManaged
TB,N,V_isManaged
canMakeDowngradeRoutingChecks
status
TI,R,N,V_loginStatus
serviceDisconnectReason
Ti,R,N,V_disconnectReason
T@"NSString",R,&,N,V_loginStatusMessage
v8@?0
IMDAccountController
Loading services: %@ (First load: %@)
Loading service: %@
   Creating account with ID: %@
   Creating persistent session with ID: %@
  Service wants new accounts active, setting active: %@
 Not loading accounts from defaults, appears to be IDS Based: %@
 Found accounts: %@
 Loading: %@
 Done
  Setting active accounts: %@
  Service wants accounts always active, setting active: %@
Logging in previously logged in accounts: %@
  * Logging in previously logged in account: %@
  * No account found for account ID: %@
Done loading service: %@
iMessage
iMessage service found: %@    accounts: %@
PlaceholderAccount
   Empty iMessage accounts, created one: %@
   Added, and moving along
   No account created
   We have iMessage acounts, good to go
No iMessage service found
Done loading all services
Activating accounts: %@
   Found account: %@
      => Disabled, continuing
      Found service: %@
      Adding account: %@ to active set: %@
Reusing session: %@
      Active account set is: %@
      Building sesssion
      Enable the associated account
Deactivating accounts: %@
Tried to deactivate an account, but found no account: %@
Tried to deactivate an account, but found no service; %@
Add account: %@
*** Removing placeholder account: %@
Remove account: %@
B16@?0@8
@16@?0@8
activeSessions = %@
IMDAccountController: Could not find a service session for string: %@, account: %@, allAccounts: %@
IMDAccountController: Could not find a service for string: %@
IMDAccountController: Could not find an account for serviceString: %@, accountsForService: %@, accounts: %@
IMDAccountController: Could not find a session for account: %@
TB,R,N,V_isLoading
accounts
T@"NSArray",R,N
activeAccounts
connectedAccounts
connectingAccounts
activeSessions
Loading internal party service with bundle: %@
ServiceProperties
plist
%@: Loading request for service bundle: %@   Loaded: %@
%@: Loading service bundle: %@   Loaded: %@   identifier: %@
%@: Load success: %@    (Error: %@)
%@: Session class: %@
%@: Service properties: %@
Warning
%@: Load failed! Disabling any active accounts  (Error: %@)
   => Disabling: %@
%@.%@
Service
Missing session class for service: %@    properties: %@    bundle: %@
%@Defaults
IMDService
Clearing one time accounts for %@: %@
Saving %@'s connected accounts: %@
Saving %@'s connecting accounts: %@
Saving %@'s settings: %@
Saving %@'s status: %@
%@AccountDefaults
IMDService (%@)
Backup started, blocking pref writing
Under memory pressure, blowing caches
sessionClass
T#,R,N
accountClass
serviceProperties
T@"NSDictionary",R,&,N,V_serviceProperties
bundle
T@"NSBundle",R,&,N,V_bundle
internalName
serviceDomain
isIDSBased
serviceDefaults
serviceDefaultsForSetup
defaultAccountSettings
serviceRequiresSingleAccount
shouldCreateActiveAccounts
serviceWantsNullHostReachability
serviceIgnoresNetworkConnectivity
shouldForceAccountsActive
shouldForceAccountsConnected
serviceNeedsLogin
serviceNeedsPassword
serviceShouldBeAlwaysLoggedIn
serviceRequiresHost
serviceSupportsRegistration
serviceChatsIgnoreLoginStatus
serviceSupportsPresence
serviceSupportsOneSessionForAllAccounts
supportsDatabase
disallowDeactivation
serviceProtocolVersion
Tq,R,N
__kIMDaemonWillShutdownNotification
__kIMDManagedPreferencesChangedNotification
v32@?0@"CUTWeakReference"8Q16^B24
@16@?0@"CUTWeakReference"8
v32@?0@"IMDServiceSession"8Q16^B24
IMDServiceSession
initWithAccount: %@       service:%@  defaults: %@
DEALLOC: %@
[%@ addAccount:%@]
[%@ removeAccount:%@]
[%@ sessionDidBecomeActive]
Scheduling routing, expire and watchdog timer before first unlock
Not scheduling routing, expire and watchdog timer before first unlock
[%@ sessionWillBecomeInactiveWithAccount:%@]
-[IMDServiceSession _connectionMonitor] monitor: %@:%@
_updateConnectionMonitorWithRemoteHost: %@:%@
Creating connection monitor to global reachability: %@
Already have connection monitor to global reachability: %@
Going disconnected for connection monitor: %@
_reconnectIfNecessary: %@:%@
  shouldAlwaysBeLoggedIn: %@    shouldReconnect: %@   wasLikelyNetworkError: %@  loginStatus: %d  disconnectReason: %d
%@: we're disconnected properly - and we're supposed to try to reconnect now, 
IMConnectionMonitor
%@       forcing disconnect
%@: Network connection to %@ is down -- disconnecting
%@       Data connection is active, going into login server ready
%@       I can be reached
%@ connectionMonitorDidUpdate: Currently connected: %@   (Reachable: %@  Data Active: %@  On Call: %@  Data+Voice: %@   Result: %@)
Network
                                        remoteHost: %@
                            isDataConnectionActive: %@
                                       isReachable: %@
                                          isOnCall: %@
                  supportsSimultaneousDataAndVoice: %@
                            isImmediatelyReachable: %@
                               awaitingDataContext: %@
-[IMDServiceSession networkConditionsAllowLogin]: %@ (%@)   (Ignoring network)
-[IMDServiceSession networkConditionsAllowLogin]: %@ (%@)   ([[%@]_connectionMonitor isImmediatelyReachable])
-[IMDServiceSession networkConditionsAllowLogin]: %@ (%@)   (Fallback)
Refreshing capabilities: %@
%@ System did unlock - ending message suppression
account
T@"IMDAccount",R,&,N,V_account
T@"NSArray",R,&,N,V_accounts
password
T@"NSString",R,&,N,V_password
serverHost
T@"NSString",R,&,N,V_serverHost
serverPort
TS,R,N,V_serverPort
proxyType
Tq,R,N,V_proxyType
proxyHost
T@"NSString",R,&,N,V_proxyHost
proxyPort
TS,R,N,V_proxyPort
proxyAccount
T@"NSString",R,&,N,V_proxyAccount
proxyPassword
T@"NSString",R,&,N,V_proxyPassword
useSSL
TB,R,N,V_useSSL
displayName
accountNeedsLogin
accountNeedsPassword
accountShouldBeAlwaysLoggedIn
allowedAsChild
networkConditionsAllowLogin
overrideNetworkAvailability
com.apple.private.alloy.electrictouch
IMDLegacyDTController
Loaded dtService: %@
_senderIDFromToken invalid input
_senderIDFromToken could not split into legitimate components %@
Received incoming DT message service %@ account %@ [data length] %@ fromID %@ context %@
IMDLegacyDTController No data %@ or fromID %@ on DT message. Bailing early
IMDLegacyDTController could not get senderID from fromID:%@
Got senderID %@
Created new DT message %@
Processed message %@ with session  %@
Could not find suitable session to process message %@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
dtService
T@"IDSService",&,N,V_dtService
__kkPictureCacheAddedPictureNotification
data
name
__kkPictureCacheNameChangedNotification
__kIMDFileTransferCreatedNotification
__kIMDFileTransferAcceptedNotification
__kIMDFileTransferStoppedNotification
__kIMDFileTransferRemovedNotification
__kIMDFileTransferArchiveSucceededNotification
__kIMDFileTransferArchiveFailedNotification
IMDFileTransferCenter
Did not remove wrapper for transfer at local URL %@
Chat
  => Nope, we have offline at quit set
Attachments
IMDFileTransfer posting recoverable error state for IMFileTransfer
IMDFileTransfer reset file transfer to waiting state
file-read-data
Denying transfer, client with pid: %d not allowed to access request path: %@
Transfers
Allowing transfer, client with pid: %d allowed to access request path: %@
_handleFileTransfer accepted %@
ForceAllTransfersExpired
IMFileTransferCenter
stopping transfer to guid
MessageService Failed writing attachment to disk on incoming: %@
contextStamp
T@"NSString",&,N,V_contextStamp
hasActiveFileTransfers
com.apple.private.alloy.messagesquickswitch
com.apple.pairedsync.messagessync
/var/mobile/Library/SMS/sms.db
MessagesQSwitch
tempSMS.db
tempDowngradedSMS.db
QuickSwitch
Instantiated IMDQuickSwitchController
Sending dummy request
Current db version is %ld
Recents
compressedSMSRecents.zip
compressedSMSDB.zip
QuickSwitch Could not determine file size as path was nil
QuickSwitch Could not determine file size at path %@ with error %@
Size of file at path %@ is %lu
QuickSwitch We got a nil path to truncate to.
QuickSwitch Could not delete DB at path %@
QuickSwitchTruncating
Messages
Started truncating quick switch DB
QuickSwitch Could not trim DB with error %@ 
Finished truncating quick switch DB
QuickSwitch we were given a nil path to delete
QuickSwitch Could not delete file at path %@ with error '%@'
Deleted file at path %@ 
Cleaning up temporary files
QuickSwitch Could not delete DB at path %@ %@
QuickSwitch. We do not expect file to already exist. Clearing it.
QuickSwitch Could not delete zipped file DB at path %@ with error %@
QuickSwitchZipping
Finished zipping quick switch DB
QuickSwitch Could not create zipped DB
v16@?0@"IMFileCopier"8
Started zipping quick switch DB
QuickSwitch. We do not expect file to already exist.
Finished unzipping quick switch DB
QuickSwitch Could not create unzipped DB
Started unzipping quick switch DB
Initiating quick switch
QuickSwitch Could not send initiate QuickSwitch message. Bailing!
Could not send initiate QuickSwitch message. Bailing!
Could not send QuickSwitch Recents request. Bailing!
We tried to _handleQuickSwitchInitiateRequest a non watch device for QuickSwitch. This is really bad!
Finished with success %@
dbVersionResponse %@
Downgrade: found a database that can be downgraded to version: %ld
Trying to QuickSwitch to incompatible gizmo. Bailing quick switch. localDBVersion %ld gizmoDBVersion %ld
QuickSwitch Truncated DB did not succeed at path %@, Really bad! 
Truncation succeeded! :-)
Attempting downgrade from %ld to %ld...
Error Trying to QuickSwitch watch to version %ld from %ld. Downgrade failed with error: %@
Downgraded from %ld to %ld ok! :-D
QuickSwitch failed to rename downgraded db to tempdb with error: %@
renamed %@ to %@ in preperation for compression - this means the downgrade completed ok. :-D
We could not create zip file for QuickSwitch
Sent zipped file to watch
Database QuickSwitch: Could not send file over to gizmo. Bailing
Copying from %@ to %@
QuickSwitch could not copy path to temp directory with error %@. Bailing!!
QuickSwitch we could not create zip file
QuickSwitch could not send file over to gizmo. Bailing
_handleQuickSwitchCompleted %@
QuickSwitch got _handleIncomingDB on a non gizmo. Really bad!!
QuickSwitch got _handleIncomingRecents on a non gizmo. Really bad!!
Sending file at URL %@ to local account (identifier %@)  (error %@)  (metadata %@) success: %@
Sending message to local account (identifier %@)  (error %@)  (request %@) success: %@
service %@, account %@, incomingData %@ fromID %@ context %@
Got request %@
Got IMDQuickSwitchControllerCommandInitiateQuickSwitch
Got IMDQuickSwitchControllerCommandResponeDBVersion
Got IMDQuickSwitchControllerCommandRequestRecents
Got IMDQuickSwitchControllerCommandQuickSwitchCompleted
QuickSwitch got unknown request over quick switch service %ld
service %@, account %@, resourceURL %@ metadata %@ fromID %@ context %@
Got IMDQuickSwitchControllerCommandIncomingDB at url %@
Got IMDQuickSwitchControllerCommandIncomingRecents at url %@
QuickSwitch got unknown resource ULR callback over quick switch service %ld
message sent with identifier %@ 
Checking if we are in proxy mode
Not in proxy mode. Found active iMessage account signed into email %@ 
In proxy mode. Did not find any active iMessage account logged in using email.
Found default paired device %@
QuickSwitch Did not find default paired device
QuickSwitch _notifyPSYWithResult not available on this platform
QuickSwitch _notifyPSYDataSent not available on this platform
quickSwitchIDSService
T@"IDSService",&,N,V_quickSwitchIDSService
__kTunesMessageChangedNotification
Playing
Location
file
Name
Album
Artist
Genre
Year
Store URL
Display String
DisplayString
Stream Title
Player State
playerInfo
T@"NSMutableDictionary",N,V_playerInfo
isEnabled
messageFormat
T@"NSString",R,N
AIMToSuperParser
FZPersonProfile
loadOldStatusStore
T@"NSDictionary",R,N
Registering bundle: %@
   => Internal service with name: %@
allServices
Performing initial database housekeeping
Daemon
Registering for the DB reconnect notification.
Got a mandatory DB reconnect notification, I will now exit.
com.apple.imagent
  => Failing all unsent, unfailed messages
  => Database was full, waiting to post
  => Posting database full
  => Cleaning up orphaned attachments
Updating cache for message guid: %@
  **** Updating this chat!
Storing Aux image transfer %@
_storeAttachmentsForMessage did not find Aux video transfer %@
Updating transfer: %@
Posting resulting transfer to clients; %@
Not storing: %@
Stored item: %@:%@
Stored message: %@
Updated from %@->%@  on service: %@
IMDMessageRecordCopyMessagesForAssociatedGUID resulted in a non-associated message item: %@
************* Please file a radar!!!!!!!!!!! *******************************
A message returned by IMDMessageRecordCopyMessagesForAssociatedGUID is associated to %@ instead of the requested GUID %@.
GUID we got from IMDMessageRecordCopyMessagesForGUIDs wasn't one of the guids we requested. IMItem we got back was: %@, IMDMessageRecordRef guid we got was: %@, requested guids was: %@
history query
generate chat items
IMTiming
history query timing: %@
_messagesWithRoomNames: %@ onServices %@ limit %d recordStoreRecords: %@
_unreadMessagesWithHandles: %@ onServices %@ limit %d recordStoreRecords: %@
_unreadMessagesWithRoomNames: %@ onServices %@ limit %d fallbackGUID %@ recordStoreRecords: %@
Ensure transfers with GUIDs registered: %@ for message: %@
   Found saved transfer: %@
      Existing transfer: %@
           New transfer: %@
Found messages with associated guids: %@  (%@)
Found messages with guids: %@  (%@)
Have stored message for guid (%@): %@
Stored item for guid (%@): %@
Stored message for guid (%@): %@
Found existing message: %@ similar to: %@   (Skip Services: %@   Skip GUIDs: %@   Within Time Interval: %f)
No existing message similar to: %@   (Skip Services: %@   Skip GUIDs: %@   Within Time Interval: %f)
Stored message for replace ID (%d): %@
Found %d messages with handles: %@ on services: %@  limit: %d
Found %d messages with room names: %@ on services: %@  limit: %d
Found last message: %@ with handles: %@ on services: %@
Found %d messages with handle: %@ on service: %@  limit: %d
Found last message: %@ with room names: %@ on services: %@
Found %d filenames with handles: %@ on services: %@
Found %d filenames with room names: %@ on services: %@ 
Found %d message action items for original message guid: %@
MessageStore
Found chat guids: %@ for message guid: %@
Couldn't find existing chat with guid: %@ in IMDChatRegistry for messageGUID: %@
   Found Chats: %@
Deleted %d messages with guids: %@ in chat: %@
Deleted %d messages with guids: %@
Deleting batch %d of messages for chatIdentifiers %@ onServices %@. %d messages will be deleted.
deleteMessageswithChatIdentifiers: %@ onServices: %@
Found %d messages to delete
Deleted %d messages with replace ID: %d from handle: %@ on service: %@
Marked %d messages as read with handles: %@ on service: %@  from me: %@
Marked %d messages as read with roomnames: %@ on service: %@  from me: %@
Marked %d messages as read with handle: %@ on service: %@  from me: %@
Marked %d messages as read with room name: %@ on service: %@  from me: %@
suppress DB update timer fired
setSuppressDatabaseUpdates called with suppressUpdates %d 
Scheduling a suppress DB invalidation timer
Broadcasting lastFailedMessageIDChanged with new value: %lld 
Suppressed: Broadcasting lastFailedMessageIDChanged with new value: %lld 
Broadcasting unreadCountChanged with new value: %lld 
Suppressed: Broadcasting unreadCountChanged with new value: %lld 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMCore_Sim/IMCore-1757.5.7/IMDaemonCore/IMDMessageStore.m
-[IMDMessageStore replaceMessageAcknowledgmentsWithNewMessageAcknowledgment:associatedMessageGUID:sender:]
Unexpected nil '%@' in %s at %s:%d. %@
newGUID
ASSERTION FAILED: %@
associatedMessageGUID
Database
"Database": Will delete old ack %@: %@: %lld
"Database": Will NOT delete old ack %@: %@: %lld
Deleting previous acknowledgments failed with error: %@
B16@?0@"IMItem"8
Observed more than one unconsumed breadcrumb: %@ for '%@' session %@
B16@?0@"IMAssociatedMessageItem"8
Breadcrumbs
History query found breadcrumb %@ with payload history: %tu items.
modificationStamp
T@"NSString",&,V_modificationStamp
__kIMDMessageStoreHandleUnformattedIDKey
__kIMDMessageStoreHandleCanonicalIDKey
__kIMDMessageStoreHandleCountryCodeKey
 => Not storing item, service: %@  does not support a database
 => Not storing message, service: %@  does not support a database
 => Not storing message, typing message
%s (%@)
-[IMDChat initWithAccountID:service:guid:groupID:chatIdentifier:participants:roomName:displayName:lastAddressedLocalHandle:properties:state:style:isFiltered:hasHadSuccessfulQuery:]
Created chat: %@
-[IMDChat dealloc]
Dealloc chat: %@
guid
chatIdentifier
serviceName
roomName
groupID
lastAddressedLocalHandle
properties
style
state
unreadCount
rowID
isFiltered
hasHadSuccessfulQuery
participants
Chat: %@  Adding participants: %@
Trying to add participants: %@ to 1:1 chat :%@
Chat: %@  Removing participants: %@
Trying to remove participant from a group chat with 2 or less participants %@
Reassociating chat: %@  to account: %@
IMDChat: %p GUID: %@ Style: %c State: %d Participants: %@  Room Name: %@  Display Name: %@  Identifier: %@  Unread count: %d  Row ID: %lld  Group ID: %@, isFiltered: %@, hasHadSuccessfulQuery: %@
lastMessage
Chat: %@   Updating last message: %@
Chat: %@   Property update: %@
     Resulting properties: %@
     => Saving changes
ChatRegistry
   Generating group ID for chat: %@    groupID: %@
Sorted participant array %@
   Generating group ID for chat: %@    groupID: %@  using IDs = %@
T@"NSString",C
T@"NSString",C,SsetGroupID:
T@"IMMessageItem",&
T@"NSDictionary",&
TQ,S_setUnreadCount:
Tq,S_setRowID:
T@"NSArray",C
isUnnamedChat
serviceSession
T@"IMDServiceSession",R,&
T@"IMDAccount",R,&
T@"IMDService",R,&
dictionaryRepresentation
T@"NSDictionary",R,&
chatProperties
isArchived
TB,R
Received merge complete notification, re-syncing chats
Resetting LastBulletinboardPostedMessageRowID: %lld
com.apple.MobileSMS
LastBulletinboardPostedMessageRowID
Not Resetting LastBulletinboardPostedMessageRowID: %lld
v20@?0i8Q12
com.apple.imdpersistenceagent.notification.mergecompleted
com.apple.imdpersistenceagent.notification.switchcompleted
com.apple.automatichistorydeletion.deleted
Deleted history automatically, re-syncing chats
handle: %@  account: %@  chatIdentifier: %@  guid: %@
Found existing chat: %@
handles: %@  account: %@  chatIdentifier: %@  guid: %@
room: %@  account: %@  chatIdentifier: %@  guid: %@
 Hint message for last message was older than the current last message: %@, current: %@
 Querying db for last message: %@
 => Using last message: %@ for chat: %@
Registering chat: %@
Unregistering chat: %@
Deleting chat: %@
%s: item: %@ chat: %@
-[IMDChatRegistry addItem:toChat:]
%s: message: %@ chat: %@
-[IMDChatRegistry addMessage:toChat:]
%@;%c;%@
Found SMS chat with different participants than its iMessage sibling. Chat: %@. Updating participants using %@
  Result: %@
Forcing reload of chats _doneLoadingAfterUnlock: %d forced: %d
Dropping all chats in registry
Updating database clients
Posting the update chat registry to all listeners
=> Done notifying clients
Loading Chats...
 Found %d chats
No service found, looking at name: %@
No service found for name: %@: removing this chat [%@]
No account: removing this chat [%@]
   Loaded chat: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMCore_Sim/IMCore-1757.5.7/IMDaemonCore/IMDChatRegistry.m
-[IMDChatRegistry loadChatsWithCompletionBlock:]
generatedGroupID
   Updating chat identifier: %@, to: %@, chat guid: %@
=> Done Loading %d Chats
Caught exception %@ while merging forks
Merge fork
Not merging forks before first unlock
Actually saving chat store
Kicking off deferred save
Device left first unlock, re-syncing chats
calling update routing, expire and watch dog after first unlock
systemDidUnlock
DidMakeAllAttachmentsClassC
Making all attachments class C
/var/mobile/Library/SMS/Attachments
Failed making file class C: %@ with error %@
q24@?0@"IMDChat"8@"IMDChat"16
ForkMerge
Found %ld unnamed chats needing new groupIDs: %@
generatedGroupID is nil
updated unnamed chat groupID from %@ to %@ => %@
No unnamed duplicate groups found needing new groupIDs
did not find winner %@ in list of duplicates %@
Finding group chats
Found %ld duplicate chats needing merging: %@
winningChat unexpectedly nil
losingChats is unexpectedly nil
found winning chat %@, and losing chats %@, in list of chat duplicates: %@
will merge losing chats %@ into winning chat id %@
repairing duplicate chats failed: %@
merged losing chats %@ into winning chat id %@
Deleted unwanted chat %@
finished merging %ld duplicate chats
No duplicate chats found to merge
-[IMDChatRegistry repairDuplicateChatsIfNeeded]
Unexepectedly true '%@' in %s at %s:%d. %@
_isLoading
DidCheckForDuplicateChats
will check for duplicate chats after checking pref key %@:merged-duplicate-chats
Set pref for duplicate check (%@:merged-duplicate-chats) to YES
Finished replacing groupIDs in unnamd chats in %f seconds
We did not have any unnamed forked groups
Finished repairing duplicate chats in %f seconds (total time %f seconds)
Will NOT check for duplicate chats after checking pref key %@:merged-duplicate-chats
chats
Not enough time passed since last jettison
Max number of failure occurrences exceeded
Max time since failure occurrence exceeded
Max time or occurrences not yet met
Context has expired
context
T@,W,N
firstOccurrence
T@"NSDate",R,V_firstOccurrence
count
TQ,N,V_count
IMDInconsistency
Setting inconsistency handler
Noticed inconsistency at context %@ (count = %llu)
Resolving inconsistency at context %@
Finished initialization, last jettison was %@
LastJettisonTimeInterval
v32@?0@"IMDInconsistency"8Q16^B24
Enabling timer, since we have inconsistencies we need to check up on
Disabling timer, all inconsistencies resolved
Checking our inconsistencies to see if it's time to jettison state
Too many inconsistencies found in imagent, jettisoning state and starting over (reason: %@)
Inconsistencies aren't bad enough to merit a jettison (reasons: %@)
Removing expired inconsistencies: %@
Unable to create IMFileTransfer from NULL IMDAttachmentRecordRef.
This transfer doesn't have a filename, returning nil.
This transfer doesn't have a guid, returning nil.
Exception raised while attempting to create IMFileTransfer: %@
Created: %@ from attachment record: %@
Unable to create IMDAttachmentRecordRef from nil IMFileTransfer.
Local path: %@, filename: %@
Persisting transfer failed.
Not creating entry in DB for Aux video transfer %@
Created: %@ from imfiletransfer: %@
Updating %@ from %@
 Storing transfer at path: %@
 ** Not storing transfer
Unable to find an attachment record for guid: %@.
Request to store transfer: %@
  => Updating existing : %@
  => Created new : %@
  ** Associated transfer GUID %@ with message GUID: %@
Over ridiing return val in storeAttachment for Aux transfer %@
Request to unassociate transfer: %@ from message guid: %@
Request to update transfer: %@
  => Updating existing: %@ with: %@
  => Found no transfer, storing instead
Request for attachment with guid: %@
Request to delete attachments with guids: %@
Request to delete attachment with guid: %@
Attempted to create IMDChatRecordRef from NIL IMDChat.
Updating chat with participants: %@
 Adding handle: %@   (%@)
 Removing handle: %@
You passed me a NULL chat record ref. No IMDSavedChat for you!
Archiving chat: %@
No chat record found to archive for chat: %@
Unarchiving chat: %@
No chat record found to unarchive for chat: %@
ChatLoading
Started loading chat store
loadAllChats: IMDChat: %@
v16@?0^{_IMDChatRecordStruct=}8
Done loading chat store
Lookup failed, NIL or empty message GUID.
Couldn't find chat for message guid: %@
Couldn't find message for guid: %@
Association failed, NIL or empty message GUID.
Association failed, NIL or empty chat GUID.
Associating message guid: %@ to chat: %@
Disassociation failed, NIL or empty message GUID.
Disassociation failed, NIL or empty chat GUID.
chat
-[IMDChatStore deleteChat:]
"Database": ASSERTION FAILED: %s is unexpectedly nil in "%s" at line %d [%@]
"Database": Deleted chat in %f seconds (%@) 
Setting chat isFiltered failed, nil chat guid
T@"NSString",&,V_lastModificationStamp
offer-request
Exception forwarding to target: %@
_targets
T@"NSMutableArray",&,N,V_targets
_lock
T@"NSLock",&,N,V_lock
@"NSString"24@?0@"NSString"8@"NSString"16
Built IMItem: %@    from IMDMessageRecordRef: %@
Attempted to create IMDMessageRecordRef from nil IMItem.
Attempting to create participant change item with GUID: %@  %@  %@ => %@
invite
remove
Exception caught creating IMDMessageRecordRef from IMItem: %@   (%@)
Attempting to create title item with GUID: %@   title: %@
Attempting to add group leave GUID: %@ %@ => %@
start sharing
stop sharing
unknown
incoming
outgoing
Attempting location share update to chat guid GUID: %@  (%@:%@) %@ => %@
save audio
save video
Attempting to add message action GUID: %@ (%@) %@ => %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMCore_Sim/IMCore-1757.5.7/IMDaemonCore/IMDMessageStore_PersistenceUtilities.m
IMDMessageRecordRef IMDCreateIMDMessageRecordRefFromIMMessageItem(IMItem *)
IMDCreateIMDMessageRecordRefFromIMMessageItem
Unexpected not equal '%@ (%@) != %@ (%@)' in %s at %s:%d. %@
[imMessageItem type]
IMDMessageRecordItemTypeMessage
Unexpected false '%@' in %s at %s:%d. %@
[imMessageItem isKindOfClass:[IMAssociatedMessageItem class]]
Exception caught creating IMDMessageRecordRef from IMMessageItem: %@
Updating IMMessageItem: %@ from IMMessageItem: %@
Updating IMItem: %@ from IMItem: %@
__kIMDReplayControllerErrorDomain
IMDReplayContoller
Request to store replay message %@ type %d
IMDReplayContoller message was nil
IMDReplayContoller Incorrect message type %d
Warning, missing %@ to add to %s
dict
IMDReplayMessageController. Storing message %@ failed with error %@
IMDReplayContoller: Found an empty message payload while replaying
IMDReplayContoller: Could not get message service session for iMessage to replay
IMDReplayContoller: Could not get SMS Service session to replay.
IMDReplayContoller Trying to replay message of unknown type %@ %d
IMDReplayController
Starting message replay.
deleteReplayDBIfNotUnderFirstUnlock isUnderFirstUnlock %@
Not deleting replay DB
Deleting replay DB on imagent launch after first unlock
/var/mobile/Library/SMS/replayDB.db
Registering chat identifier: %@   style: %d  hash: %@ handleInfo: %@
 => Found chat, but it had no particpants. Updating with handleInfo: %@
********** Created bad chat: %@ *************
1:1 chat identifier mismatch
 => We already have one, nothing to do here. Chat: [%@]
Is chat (%@) registered locally: %@  registry: %@  hash:%@  chats: %@
Session unregistering chat identifier: %@   style: %d
Failed to canonicalize chat identifier
Failed to find chat for hash hash %@ with chatIdentifier: %@, style: %c
Updating account ID from: %@ => %@
  => Message was stored. Input: %@   Output: %@
  => No result? Using the requested message: %@
com.apple.imessage
DropSendingMessage
 ** DropSendingMessage is enabled, failing send message
v28@?0B8@"IMMessageItem"12@"IMMessageItem"20
Removing message: %@   from chat: %@ due to send on different service
v16@?0@"IMMessageItem"8
Did leave chat: %@  style: %c setting state: %d
Did join chat: %@  style: %c setting state: %d   name: %@   groupID: %@
error: %d  message: %@  force error: %@
Found old message: %@  for error: %d
Updated message: %@
Message is already delivered, and we're not forcing an error here (%@)
Unable to mark error: %d, no messages found for guid: %@
message: %@
Found old message for read receipt: %@
Unable to mark send of read receipt, message is on a different service: %@ vs %@
Unable to mark send of read receipt, no messages found for guid: %@
Found old message for played receipt: %@
Expire received message played on local device: %@
Unable to mark send of played receipt, message is on a different service: %@ vs %@
Unable to mark send of played receipt, no messages found for guid: %@
Found old message for saved receipt: %@
Unable to mark send of saved receipt, message is on a different service: %@ vs %@
Unable to mark send of saved receipt, no messages found for guid: %@
   Found message from chat: %@
   Message was already marked as delivered, ignoring
Found old message for delivery receipt: %@
MessageService
Received delivery receipt for message: %@
Delivery receipt time was: %f
MessageLogStatistic
FTServices
Message had error: %d
Updated message: %@  had error: %@
B8@?0
MessageSuppression
No message found for guid: %@ to mark as delivered, trying again in a bit
Second to last try, waiting longer
Last try, waiting a lot longer
No message ever found for guid: %@ to mark as read, bailing
Returning early in _didReceiveMessageReadForMessageID because !_activated
-[IMDServiceSession(IMDServiceSession_Chat) _didReceiveMessageReadForMessageID:date:attempts:useMessageSuppression:completionBlock:]
Returning early in _didReceiveMessageReadForMessageID because messageID: %@, [[self service] supportsDatabase]: %@, service: %@
Found chats for messageID: %@   chats: %@
Found no chats for messageID: %@
Found chat for messageID: %@, chat: %@
Received reflected read receipt. Setting suppression flag for chat %@
Noting received reflected read receipt for: %@ (%@)  (self: %@)
Remaining messages: %@
  Also adding message: %@
  Skipping message: %@
No message found for guid: %@ to mark as read, trying again in a bit
-[IMDServiceSession(IMDServiceSession_Chat) _didReceiveMessageReadReceiptForMessageID:date:attempts:completionBlock:]
Found chat for messageID: %@   chat: %@
Unable notify about message, message is on a different service: %@ vs %@
Unable notify about message, no message found
-[IMDServiceSession(IMDServiceSession_Chat) _didReceiveMessagePlayedForMessageID:date:attempts:useMessageSuppression:completionBlock:]
Received reflected played receipt. Setting suppression flag for chat %@
Noting received reflected played receipt for: %@ (%@)  (self: %@)
No message found for guid: %@ to mark as played, trying again in a bit
No message ever found for guid: %@ to mark as played, bailing
-[IMDServiceSession(IMDServiceSession_Chat) _didReceiveMessagePlayedReceiptForMessageID:date:attempts:completionBlock:]
-[IMDServiceSession(IMDServiceSession_Chat) _didReceiveMessageSavedForMessageID:ofType:forChat:fromHandle:fromMe:date:attempts:useMessageSuppression:account:completionBlock:]
   Message was already marked as saved, ignoring
Received reflected saved receipt. Setting suppression flag for chat %@
Noting received reflected saved receipt for: %@ (%@)  (self: %@)
v16@?0@"IMItem"8
Stored item: %@     Actually stored: %@
Posting received message: %@
Item was not stored, ignoring
v28@?0B8@"IMItem"12@"IMItem"20
Message with guid %@ has been deleted!
No message found for guid: %@ to mark as saved, trying again in a bit
No message ever found for guid: %@ to mark as saved, bailing
-[IMDServiceSession(IMDServiceSession_Chat) didSendMessage:forChat:style:account:forceDate:]
Not notifying for message: %@   this is a typing indicator, and we've already stored a completed message
Not notifying for message: %@   this is a typing indicator, and it failed
Send time was: %f  (GUID: %@   Message: %@)
Automatically saving message sent from local device: %@
Expire message sent from local device: %@
Updating date on message guid %@ to be: %@
Posting sent message: %@
"Database": Replacing previous message acknowledgements with new acknowledgment for sent message; sender: '%@':'%@'
-[IMDServiceSession(IMDServiceSession_Chat) notifyDidSendMessageID:account:shouldNotify:]
Updated sent message: %@   duration: %@
Unable notify about message, no messages found for guid: %@
Noting messages for chat GUID %@ marked as read
Suppressed messages now marked as read: %@
Cleared suppression flag for chat %@
%@ ending message suppression for all outstanding timers: %@
v32@?0@8@16^B24
%@ _endMessageSuppressionForChatGUID: %@
Found old message: %@
Removed read flag: %@
Updating chat: %@
Message is already not read: %@
Message suppression timer fired for chat guid %@
Setting suppressed message: %@
name: %@   fromID: %@   identifier: %@ style: %d
Ignoring name update, already the current name
messages: %@
Automatically saving message sent from linked device: %@
Expire message sent from linked device: %@
Found existing message: %@
Date last call ended: %@
Looking for a similar message %f seconds back
Found similar message? %@
The existing message was read, let's mark the new one is read
Bailing, we had a similar message: %@
Service was SMS, let's move it over to iMessage
Broadcasting service update for message with GUID %@ after suppression
Bailing, we already had a finished message for this in the database, and the current one is not
Should suppress message: %@
Found suppression timer %@ for chat %@
message-suppression-timer %@
Suppressing message: %@
Setting suppressed message flag: %@
The input message disagrees with the "from me" attribute, creating a new message ID
@"IMMessageItem"16@?0@"IMMessageItem"8
  Ensuring the app is alive here
Stored message: %@     Actually stored: %@
"Database": Replacing previous message acknowledgements with new acknowledgment for received message; sender: '%@':'%@':'%@'
Message was not stored, ignoring
Updating invitation message after DB store: %@
Invalid chat identifier, ignoring
Chat: %@  status update: %d  style: %c
Chat: %@  member: %@ from member: %@ unformated: %@ country: %@ status update: %d  style: %c
Storing participant leave: %@
Storing %@ participant change item  %@ => %@
No chat to update downgrade properties for.
Handling routing dictionary: %@
Chat: Got a missing service in routing dictionary for GUID (%@): %@
Chat: could not find a session to route message GUID: %@
Chat: Could not re-route missing message GUID: %@
Chat: Could not find a chat for message: %@
Not routing message (%@) because it is not sent and has no error, not a candidate for routing
Re-routing message (guid:%@):%@   chat:%@   service:%@   session:%@
No chat registered, creating on one on service %@  identifier: %@   style: %c  (Chat: %@)
Generated handle info: %@ for group chat: %@
Chat already exists for the other session, nothing to do here: %@
Sending message to session: %@  chatGUID: %@
v24@?0@"NSDictionary"8d16
Scheduling a routing check with interval: %f
message-routing-timer
Handling expire state dictionary: %@
Chat: Could not expire missing message GUID: %@
Not deleting message (%@) because was already saved
Not expiring message (%@) because its expire state %d is already %d
Expire message (guid:%@):%@   chat:%@   session:%@
   delete expired messages: %@
   deleted expired messages: %@
Don't schedule expire state check with interval: %f, one is already scheduled with interval: %f
Scheduling an expire state check with interval: %f
message-expire-state-timer
Handling watchdog dictionary: %@
Chat: Could not watchdog missing message GUID: %@
Don't schedule watchdog check with interval: %f, one is already scheduled with interval: %f
Scheduling a watchdog check with interval: %f
message-watchdog-timer
Scheduling a storage invalidation timer in: %f
We have pending read receipts to process after storage timer fired
Storage timer fired, guids we need to process: %@
Noting suppressed item updated while processing messages from storage (%@)
Noting item from storage (%@)
Noting last item from storage (%@)
Incremented pending read receipt to %lu
Decremented pending read receipt to %lu
Setting pending read receipt to %lu
Storing message: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMCore_Sim/IMCore-1757.5.7/IMDaemonCore/IMDServiceSession_Chat.m
void _IMDStoreMessage(IMDService *, IMMessageItem *, BOOL, BOOL, BOOL, FZMessageFlags, _IMDMessageStoreShouldStoreBlock, _IMDMessageStoreDidStoreBlock, _IMDMessageStoreCompletionBlock)
_IMDStoreMessage
[resultMessage isKindOfClass:[inMessage class]]
input and output message types are not the same
  => Result message: %@
Set avatar likeness data for message %@
Found messages guids to mark as read: %@
Found chats to mark as read: %@
Notifying about messages: %@
Found message to mark as played: %@
Automatically saving received message played on linked device: %@
Expire received message played on linked device: %@
Found chats to mark as played: %@
Notifying about message: %@
Found message to mark as saved: %@
Found chats to mark as saved: %@
Storing item: %@
  => Result item: %@
/var/mobile/Library/SMS/Stickers
IMDStickerRegistry
Deleting legacy Sticker folder at path %@, error %@
Initialized IMDStickerStore
All downloaded sticker packs to be passed to mobileSMS %@
All downloaded stickers to be passed to mobileSMS %@
Looking for sticker in registry stickerGUID:%@ packGUID:%@ stickerHash:%@ 
IMDStickerRegistry. Invalid parameters passed to _filePa_filePathInStickerPacksForStickerGUIDthForStickerGUID
Found sticker in sticker map %@. Will move it to %@
IMDStickerRegistry. Could not move file from path %@ to path %@ error %@
Did not find sticker in sticker map
_isRecipeBasedSticker invalid properties
Retrieve sticker with properties %@, completionBlock %@
IMDStickerRegistry. No completion block passed in.
IMDStickerRegistry. Invalid parameters passed in.
sticker found in cache %@
Received ME-sticker from balloon %@
IMDStickerRegistry. Failed retrieving sticker me-sticker with error %@, outputURLS %@
Received transcoded output from balloon bundle id %@ path %@
v40@?0@"NSArray"8@"NSString"16@"NSError"24B32B36
Sticker not found in cache
Invalid sticker properties passed to retrieveStickerWithProperties %@
stickerPackGUIDToPackMap
T@"NSMutableDictionary",&,V_stickerPackGUIDToPackMap
com.apple.private.IMDaemonCore.IMDStickerRegistry
Tried to change property %@ with nil buddy ID
Tried to change empty property for buddy ID: %@
Tried to change IDProperty for buddy ID: %@   bailing
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMCore_Sim/IMCore-1757.5.7/IMDaemonCore/IMDServiceSession_BuddyList.m
<Unknown File>
Too many calls to [IMDService endBuddyChanges]!
allBuddies
T@"NSArray",R,&,N
buddyPictures
Keychain
Abandoning password fetcher with request ID: %@  session: %@
No pending password fetch requests for session: %@
__kIMDReplayMessageStorageControllerErrorDomain
deleteContext
T@"IDSKVDeleteContext",&,N,V_deleteContext
passing in nil filePath to initWithFilePath
IMDReplayStorageController
IMDReplayStorageController was asked to store nil dictionary
Deleting replay db with path %@
store
T@"IDSKVStore",&,N,V_store
filePath
T@"NSString",R,&,N,V_filePath
__ksFirewallUserNotificationIdentifier
RememberPassword
Not Connected
Unexpectedly disconnected
Disconnecting...
Connecting...
Connecfted
-[IMDServiceSession disallowReconnection] %@
Auto-Reconnect Request: %@:%@
Auto-Reconnect failed (Network conditions don't allow it): %@:%@
Reconnecting account: %@:%@
Do Login: %@:%@  (serviceLoginStatus: %d)
Ignoring Login: %@:%@  (serviceLoginStatus: %d)
_login_serverSettingsReadyWithAccount: %@:%@
The account name or server is not valid.
Error message: Invalid Jabber account name or server
  setting service status to disconnected, account or server is invalid
****** No IMConnectionMonitor for login of account: %@
A network error occurred.
Alert message: network error
_data_connection_ready: %@:%@
v72@?0@"NSString"8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56@"NSNumber"64
_login_usernameAndPasswordReady: %@:%@
_login_checkUsernameAndPassword: %@:%@  has pass: %@   bad pass: %@
_login_checkUsernameAndPassword: connectionMonitor says we're not reachable
Skipping login, we're not activated
Strange, we're here, but already logged in
Building password notification dialog for: %@   (has pass: %@   has login: %@  bad pass: %@)
v76@?0@"NSString"8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56B64B68B72
autoLogin: %@:%@
Login request: %@:%@ (Setting should reconnect flag = YES)
-[IMDServiceSession logoutServiceSession]: %@, account:%@
-[%@ logoutWithAccount:%@] (activated = %@)
Tried to logout: %@  but we're not supposed to, reflecting this!
<<Connected>>
** %@: clearing _shouldReconnectFlag at logout
%@: Login status changed to %@ (%@)
-[IMDServiceSession _autoReconnectTimer]: %@
 => Network appears to be up, we'll try to auto reconnect
 ** Network does not appear to be up, we'll skip this attempt
-[IMDServiceSession _clearAutoReconnectTimer]: %@
<%@:%@:%@>
[%@: <%@:%@:%@>]
T@"NSString",&,N,V_id
unformattedID
T@"NSString",&,N,V_unformattedID
countryCode
T@"NSString",&,N,V_countryCode
handleInfo
IMDServiceSesssion. ******* We tried replaying message %@ via IMDServiceSession 
writeAccountDefaults - Started with %@ as the login ID
writeAccountDefaults - Setting %@ as the login ID
writeAccountDefaults - Removing login ID %@
idsAccount
T@"IDSAccount",R,&,N,V_idsAccount
Adding registration delegate for account %@
P:%@
E:%@
Unknown account type %d for login %@, can't build loginID
IMDAccount added %@, adding corresponding IDSAccount %@
IMDAccount removed %@, removing corresponding IDSAccount %@
Enabling IDSAccount %@
Disabling IDSAccount %@
Received account added %@
Received account updates %@
Received accountRemoved %@
** Received account removed for account: %@, but we can't find an account for it
Received accountEnabled %@
** Received account enabled for account: %@, but we can't find an account for it
Received accountDisabled %@
** Received account disabled for account: %@, but we can't find an account for it
IMDIDSService received registration status changed: %@ (%@)
IMDIDSService received aliases changed to %@: %@ (%@)
IMDIDSService received vetted aliases changed: %@ (%@)
IMDIDSService received profile changed to %@: %@ (%@)
IMDIDSService received login changed to %@: %@ (%@)
IMDIDSService received display name changed to %@: %@ (%@)
 => Registration failed, deactivating...: %@ (%@)
IMDIDSService received refresh registration: %@ (%@)
idsAccountController
T@"IDSAccountController",R,&,N,V_accountController
accountsLoadedFromIdentityServices
activeAccountsFromIdentityServices
imessage
%@: Initialized!  (Environment: %@)
Dealloc service session: %@
********** We don't have an IDSAccount, please file a radar ********** State: service session = %@, accounts = %@
********** We couldn't find an IMDAccount for the IDSAccount, please file a radar ********** State: service session = %@, IDSAccount = %@, accounts = %@
********** Requesting registered URIs but we don't have an IDSAccount, please file a radar ********** State: service session = %@, accounts = %@
-[IMDAppleServiceSession sessionDidBecomeActive]
Session activating: %@ on Environment: %@
-[IMDAppleServiceSession sessionWillBecomeInactiveWithAccount:]
Session deactivating: %@ on Environment: %@
AppleServiceSession
AppleServiceSession: %@
Client requested re-authenticate (Environment: %@) account: %@
Found account to re-authenticate account: %@
Client requested re-register (Environment: %@)
Found account to re-register account: %@
Client requested de-register (Environment: %@)
Found account to de-register account: %@
Client requested password updated (account: %@)
Found account to update password account: %@
Client updateAuthorizationCredentials (account: %@)
Found account to updateAuthorizationCredentials: %@
Client request to remove aliases: %@ account: %@
Found account to remove aliases: %@  account: %@
Client request to add aliases: %@  account: %@
Found account to add aliases: %@  account: %@
Client request to validate: %@  account: %@
Found account to validate aliases: %@  account: %@
Client request to unvalidate: %@  account: %@
Found account to unvalidate aliases: %@  account: %@
Client request to validate profile info: %@
Found account to validate profile info account: %@
certForURI: %@ - No cert found, not in registered URI set
certForURI: %@ - No cert found - missing registration cert
Checking specified caller ID: %@ on account: %@, accountDefaults: %@
Caller ID isn't validated, clearing caller ID settings
No cert for caller ID: %@, clearing caller ID settings
 Caller ID is valid, registered and in good shape, moving along
No caller ID specified, moving along
@16@?0@"NSString"8
%@ callerID - choosing %@ from %@
 ** Selected display ID: %@  was not in URIs set: %@
callerURI - No bindings !!
CallerID
IDS Account (%@) registered for: %@ returning
IDS Account (%@) not registered for: %@ skipping
IDS Account (%@) registered for: %@ but registration status was wrong. Saving for later
certForURI: %@ - Found cert in idsAccount: %@
Clearing caller ID setting on account: %@
T@"IDSAccount",R,&,N
idsAccounts
aliases
vettedAliases
callerID
serviceType
callerURI
registeredURIs
GUID
T@"NSString",R,&,N,V_GUID
%@: Account is restricted, not creating session
%@: Created active session: %@ of service type: %@   (Session class: %@)
%@: Reused existing session: %@
%@: Done setting up session: %@
iMessage service found: %@    accounts: %@
   Empty iMessage accounts, created one: %@
   Added, and moving along
   No account created
   We have iMessage acounts, good to go
No iMessage service found
Activating accounts: %@
Deactivating accounts: %@
*** Removing placeholder account: %@
Loading internal party service with bundle: %@
%@: Loading request for service bundle: %@   Loaded: %@
%@: Loading service bundle: %@   Loaded: %@   identifier: %@
%@: Load success: %@    (Error: %@)
%@: Session class: %@
%@: Service properties: %@
%@: Load failed! Disabling any active accounts  (Error: %@)
   => Disabling: %@
                                        remoteHost: %@
                            isDataConnectionActive: %@
                                       isReachable: %@
                                          isOnCall: %@
                  supportsSimultaneousDataAndVoice: %@
                            isImmediatelyReachable: %@
                               awaitingDataContext: %@
"Database": Will delete old ack %@: %@: %lld
"Database": Will NOT delete old ack %@: %@: %lld
handle: %@  account: %@  chatIdentifier: %@  guid: %@
handles: %@  account: %@  chatIdentifier: %@  guid: %@
room: %@  account: %@  chatIdentifier: %@  guid: %@
   Loaded chat: %@
"Database": ASSERTION FAILED: %s is unexpectedly nil in "%s" at line %d [%@]
"Database": Deleted chat in %f seconds (%@) 
error: %d  message: %@  force error: %@
message: %@
"Database": Replacing previous message acknowledgements with new acknowledgment for sent message; sender: '%@':'%@'
name: %@   fromID: %@   identifier: %@ style: %d
messages: %@
Automatically saving message sent from linked device: %@
Expire message sent from linked device: %@
Found existing message: %@
Date last call ended: %@
Looking for a similar message %f seconds back
Found similar message? %@
"Database": Replacing previous message acknowledgements with new acknowledgment for received message; sender: '%@':'%@':'%@'
%@ - write account defaults: %@
writeAccountDefaults - Started with %@ as the login ID
writeAccountDefaults - Setting %@ as the login ID
writeAccountDefaults - Removing login ID %@
Adding registration delegate for account %@
IMDAccount added %@, adding corresponding IDSAccount %@
IMDAccount removed %@, removing corresponding IDSAccount %@
Enabling IDSAccount %@
Disabling IDSAccount %@
Received account added %@
Received account updates %@
Received accountRemoved %@
** Received account removed for account: %@, but we can't find an account for it
Received accountEnabled %@
** Received account enabled for account: %@, but we can't find an account for it
Received accountDisabled %@
** Received account disabled for account: %@, but we can't find an account for it
IMDIDSService received registration status changed: %@ (%@)
IMDIDSService received aliases changed to %@: %@ (%@)
IMDIDSService received vetted aliases changed: %@ (%@)
IMDIDSService received profile changed to %@: %@ (%@)
IMDIDSService received login changed to %@: %@ (%@)
IMDIDSService received display name changed to %@: %@ (%@)
 => Registration failed, deactivating...: %@ (%@)
IMDIDSService received refresh registration: %@ (%@)
%@: Initialized!  (Environment: %@)
Dealloc service session: %@
Session activating: %@ on Environment: %@
Session deactivating: %@ on Environment: %@
AppleServiceSession: %@
Client requested re-authenticate (Environment: %@) account: %@
Found account to re-authenticate account: %@
Client requested re-register (Environment: %@)
Found account to re-register account: %@
Client requested de-register (Environment: %@)
Found account to de-register account: %@
Client requested password updated (account: %@)
Found account to update password account: %@
Client updateAuthorizationCredentials (account: %@)
Found account to updateAuthorizationCredentials: %@
Client request to remove aliases: %@ account: %@
Found account to remove aliases: %@  account: %@
Client request to add aliases: %@  account: %@
Found account to add aliases: %@  account: %@
Client request to validate: %@  account: %@
Found account to validate aliases: %@  account: %@
Client request to unvalidate: %@  account: %@
Found account to unvalidate aliases: %@  account: %@
Client request to validate profile info: %@
Found account to validate profile info account: %@
Checking specified caller ID: %@ on account: %@, accountDefaults: %@
Caller ID isn't validated, clearing caller ID settings
No cert for caller ID: %@, clearing caller ID settings
 Caller ID is valid, registered and in good shape, moving along
No caller ID specified, moving along
%@ callerID - choosing %@ from %@
Clearing caller ID setting on account: %@
IMDAccount
IMSystemMonitorListener
IMDAccountController
IMDService
IMDServiceSession
IMConnectionMonitorDelegate
IMServiceSessionProtocol
IMDLegactDTController
IDSServiceDelegate
NSObject
DeferredSavingAdditions
IMDFileTransferCenter
IMFileCopierDelegate
IMDQuickSwitchController
TunesController_Additions
IMTunesController
Additions
IMDServiceController
IMDMessageStore
IMDChat
IMDChatRegistry
IMDInconsistency
IMDAttachmentStore
IMDChatStore
IMDLocationSharingController
IMDInvocationForwarder
IMDReplayController
IMDServiceSession_Chat
IMDStickerRegistry
IMDServiceSession_BuddyList
IMDServiceSession_Base
IMDReplayStorageIterationContext
IMDReplayStorageController
IMDServiceSession_Firewall
IMDServiceSession_LoginManagement
IMDHandle
IMDServiceSession_MessageReplay
IMDSpotlightIndexDelegate
CSSearchableIndexDelegate
IMDIDSAccount
IMDIDSService
IDSAccountControllerDelegate
IDSAccountRegistrationDelegate
IMDAppleServiceSession
v16@0:8
@40@0:8@16@24@32
v20@0:8B16
B16@0:8
v24@0:8@16
@16@0:8
v32@0:8@16@24
v32@0:8i16i20@24
i16@0:8
v40@0:8I16@20i28@32
v28@0:8I16@20
I16@0:8
@"NSMutableDictionary"
@"NSString"
@"IMDService"
@"IMDServiceSession"
@"NSDictionary"
v28@0:8@16B24
B32@0:8@16@24
B24@0:8@16
@32@0:8@16@24
@24@0:8@16
#16@0:8
q16@0:8
@"NSBundle"
v24@0:8@"IMConnectionMonitor"16
v24@0:8@"IMDAccount"16
v24@0:8@"NSString"16
v24@0:8@"NSDictionary"16
v32@0:8@"NSString"16@"NSDictionary"24
v32@0:8@"NSString"16@"NSString"24
v28@0:8B16@20
v28@0:8B16@"NSString"20
v40@0:8@16@24@32
v40@0:8@16@"NSString"24@"NSString"32
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v52@0:8@16@24@32C40@44
v52@0:8@"NSString"16@"NSDictionary"24@"NSString"32C40@"NSDictionary"44
v60@0:8@16@24@32C40@44@52
v60@0:8@"NSString"16@"NSDictionary"24@"NSString"32C40@"NSString"44@"NSDictionary"52
v36@0:8@16@24C32
v36@0:8@"NSString"16@"NSString"24C32
v52@0:8@16@24@32@40C48
v52@0:8@"NSDictionary"16@"IMMessageItem"24@"NSString"32@"NSString"40C48
v44@0:8@16@24@32C40
v44@0:8@"NSDictionary"16@"NSString"24@"NSString"32C40
v52@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40C48
v44@0:8@"IMMessageItem"16@"NSString"24@"NSString"32C40
v52@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40C48
v20@0:8I16
v24@0:8@"NSArray"16
v28@0:8@"NSDictionary"16B24
v32@0:8@"IMFileTransfer"16@"NSString"24
v40@0:8@"NSNumber"16@"NSDictionary"24@"NSString"32
v60@0:8@16@24@32@40@48C56
v60@0:8@"NSNumber"16@"NSDictionary"24@"NSString"32@"NSString"40@"NSString"48C56
v40@0:8@"NSString"16@"NSDictionary"24@"NSString"32
v48@0:8@16@24@32@40
v48@0:8@"NSString"16@"NSDictionary"24@"NSString"32@"NSNumber"40
v40@0:8@"NSData"16@"NSString"24@"NSString"32
v48@0:8@16I24I28@32@40
v48@0:8@"NSString"16I24I28@"NSDictionary"32@"NSString"40
v32@0:8@"NSArray"16@"NSString"24
@20@0:8I16
S16@0:8
@"NSRecursiveLock"
@"IMDAccount"
@"NSMutableArray"
@"NSMutableSet"
@"IMTimer"
@"NSTimer"
@"IMConnectionMonitor"
@"IMSystemProxySettingsFetcher"
v56@0:8@16@24@32@40@48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@16@24@32@40@48@56
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@16@24@32B40@44
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@16@24@32B40@44@52
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v24@0:8@"IDSService"16
v40@0:8@16@24@?32
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@"IDSService"
v24@0:8@"IMFileCopier"16
@36@0:8@16B24@28
@28@0:8@16B24
i32@0:8@16@24
v56@0:8@16@24B32Q36I44I48S52
@48@0:8@16B24Q28I36I40S44
v40@0:8@16Q24Q32
v32@0:8@16q24
v36@0:8@16@24i32
v44@0:8@16@24B32B36B40
B44@0:8@16@24@32B40
Q24@0:8@16
v24@0:8q16
B32@0:8@16q24
@"NSDate"
v44@0:8@16@24@32B40
v32@0:8@?16d24
@44@0:8@16B24B28B32Q36
@52@0:8@16@24@32Q40B48
@48@0:8@16@24Q32@40
@56@0:8@16@24@32d40@48
@36@0:8i16@20@28
@40@0:8@16@24Q32
@48@0:8@16@24@32Q40
v48@0:8@16@24@32@?40
v60@0:8@16@24C32@36Q44@?52
@44@0:8@16C24@28@?36
@36@0:8@16C24@28
@52@0:8@16@24@32@40B48
@"NSNumber"
@116@0:8@16@24@32@40@48@56@64@72@80@88q96C104B108B112
C16@0:8
v20@0:8C16
v24@0:8Q16
@20@0:8B16
@"NSArray"
@"IMMessageItem"
@48@0:8@16@24@32@40
@68@0:8@16@24@32C40@44@52@60
@36@0:8@16@24C32
@52@0:8@16@24@32@40C48
@28@0:8@16C24
B24@0:8@?16
B36@0:8@16@24C32
^{NSArray=#}24@0:8^{NSArray=#}16
@24@0:8^{NSArray=#}16
@32@0:8^{NSArray=#}16@24
^{NSArray=#}16@0:8
B24@0:8^@16
@"CUTWeakReference"
v40@0:8@16q24q32
@"FMFSession"
@"NSLock"
B36@0:8@16C24^@28
@"IMDReplayStorageController"
v28@0:8@16C24
v36@0:8@16C24@28
v52@0:8@16C24@28@36@44
v60@0:8@16C24@28@36@44@52
B28@0:8@16C24
v32@0:8^@16^C24
v48@0:8@16@24C32B36@?40
v56@0:8@16@24C32B36@40@?48
v44@0:8@16@24C32@36
v44@0:8@16C24@28@36
v32@0:8i16@20C28
v32@0:8I16@20B28
v40@0:8I16@20B28@32
B40@0:8@16@24@32
B48@0:8@16q24@32@40
v52@0:8@16@24q32B40@?44
v44@0:8@16@24B32@?36
v48@0:8@16@24q32@?40
v88@0:8@16q24@32@40B48@52q60B68@72@?80
v68@0:8@16q24@32@40B48@52@?60
v80@0:8@16q24@32@40B48@52B60@64@?72
v52@0:8@16@24C32@36@44
v36@0:8@16@24B32
v40@0:8i16@20C28@32
v56@0:8i16@20C28@32@40@48
v64@0:8i16@20C28@32@40@48@56
v40@0:8i16@20@28C36
v56@0:8i16@20@28@36@44C52
v64@0:8i16@20@28@36@44@52C60
v72@0:8i16@20@28@36@44@52C60@64
v44@0:8@16@24I32@36
v24@0:8d16
v60@0:8@16@24C32@36@44@?52
@40@0:8^{NSString=#}16^{NSString=#}24@32
v32@0:8@16@?24
B24@0:8Q16
{_FZChatRoomValidity=iS}24@0:8@16
@"IDSKVDeleteContext"
B32@0:8@16^@24
@32@0:8Q16^@24
@"IDSKVStore"
B28@0:8i16@20
v44@0:8@16@24S32q36
v44@0:8@16i24@28@36
v52@0:8I16I20@24i32@36@44
q24@0:8@16
v32@0:8@"CSSearchableIndex"16@?<v@?>24
v40@0:8@"CSSearchableIndex"16@"NSArray"24@?<v@?>32
v24@0:8@"CSSearchableIndex"16
@"IDSAccount"
v32@0:8@"IDSAccountController"16@"IDSAccount"24
v32@0:8@"NSString"16@"NSArray"24
@28@0:8i16@20
@"IDSAccountController"
q32@0:8@16@24
