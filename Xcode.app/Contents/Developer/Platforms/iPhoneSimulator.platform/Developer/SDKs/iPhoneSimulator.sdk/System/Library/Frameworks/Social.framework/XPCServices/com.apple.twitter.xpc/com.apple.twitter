TWDLastTCoValue
TWDLastTCoLengthFetchedDate
TWDLastImageLimits
TWDLastImageLimitsFetchedDate
TWDGeotagStatus
TWDLastUserRecordsFetchedDate
TWDUserRecordsStaleTimeout
TWDTimestampSkew
TWDLastMigrationSystemVersionKey
TWAlwaysSend
https://twitter.com/%@/status/%@
TWDSession dealloc %@
TWDSession ensureUserRecordStore
TWDSession setActiveAccountIdentifier
Fetching account with identifier %@
TWDLastAccountIdentifier
com.apple.twitterd
v12@?0B8
v8@?0
identifier
active
accountDescription
accountEntries
imageLimits
AIRPLANE_TITLE_TWITTER
Localizable
AIRPLANE_OK
AIRPLANE_SETTINGS
prefs:
prefs:root=TWITTER
fetchCurrentTCoLength got error %@ responseObject %@
short_url_length
v32@?0@8@"NSURLResponse"16@"NSError"24
photo_size_limit
max_media_per_upload
Tweet failed with status code: %d and error: %@ and responseType: %@
TWEET_FAILED_BODY_DUPLICATE_FORMAT
TWEET_FAILED_BODY_DUPLICATE_FORMAT_NO_TEXT
TWEET_RENEW_CREDENTIALS_REASON
v24@?0q8@"NSError"16
TWEET_FAILED_BODY_GENERIC_FORMAT
TWEET_FAILED_BODY_GENERIC_FORMAT_NO_TEXT
TWEET_FAILED_TITLE
TWEET_FAILED_RETRY_BUTTON
TWEET_FAILED_CANCEL_BUTTON
TWEET_FAILED_OK
_sendStatus response.statusCode %d responseObject errorCode %@
user
screen_name
id_str
v40@?0@"NSNumber"8@"NSHTTPURLResponse"16@"NSDictionary"24@"NSError"32
Retweet response.statusCode %d responseObject errorCode %@
Retweet failed with status code: %d and error: %@
error
v32@?0@8@"NSHTTPURLResponse"16@"NSError"24
Missing required parameters to send a direct message
Direct message response.statusCode %d responseObject errorCode %@
Direct message send failed with status code: %d and error: %@
TWITTER_DIRECT_MESSAGE_FAILED_BODY
TWITTER_DIRECT_MESSAGE_FAILED_TITLE
text
user_id
TWDSession location access denied. Displaying alert.
_fetchUserInfoForScreenName %@
_fetchProfileImageDataFromTwitterForScreenName %@
_fetchProfileImageDataFromTwitterForScreenName %@. Got user info error %@
_fetchProfileImageDataFromTwitterForScreenName %@. Got user info %@
profile_image_url_https
_normal.
_bigger.
_fetchProfileImageDataFromTwitterForScreenName %@. Will fetch profile image at url %@
_fetchProfileImageDataFromTwitterForScreenName %@. Got profile image data %lx error %@
v32@?0@"NSData"8@"NSHTTPURLResponse"16@"NSError"24
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
screen_name == %@
record: %@
screen_name BEGINSWITH[cd] %@
status
in_reply_to_status_id
long
media
image/jpeg
text/plain
Initing with EFFECTIVE BUNDLE: %@
LOCATION_DISABLED_TITLE_TWITTER
LOCATION_CANCEL
LOCATION_SETTINGS
prefs:root=Privacy&path=LOCATION
setGeotagStatus %i notifyClient:%@
nts_startUpdatingLocation block
startUpdatingLocation
Sending SLGeotagStatusLocating
TWDSession %@ deferred CLLocationManager cleanup block start.
TWDSession %@ deferred CLLocationManager cleanup block end.
bounding_box
coordinates
name
Found no valid vertices in polygon %@
Calculated place center lat=%d lon=%d
v16@?0@"NSDictionary"8
TWDSession locationManager:didFailWithError: %@
max_results
result.places
Received places: %@ error: %@
Requesting place from twitter for lat %g long %g
screenScale
locationViewWidth
locationViewHeight
locationGeoString
latitude
longitude
geotagStatus
geo_enabled
v32@?0@"NSDictionary"8@"NSHTTPURLResponse"16@"NSError"24
GEO_DISABLED_TITLE
GEO_DISABLED_MESSAGE_TWITTER
GEO_DISABLED_CANCEL
GEO_DISABLED_ENABLE
TWDSession got timestamp skew %@ from prefs
TWDSession found no timestamp skew in prefs
TWDSession stored timestamp skew %@ in prefs
TWDSession will migrate twitter data
TWDSession did finish migrating twitter data
Twitter
Twitter.sqlite
/Twitter/Twitter.sqlite
/Twitter.sqlite
/Twitter/profileImages
/TwitterProfileImages
/Twitter
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
timestampSkew
Td,N
TwitterProfileImages
SLTwitterUserRecord prefetchMedia at url %@
SLTwitterUserRecord prefetchMedia request block starting for url %@
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
SLTwitterUserRecord prefetchMedia request block finishing for url %@
profileImagePath
T@"NSString",R,N
TWDUserRecordStore init for account %@
TWDUserRecordStore dealloc %@
UserRecord
cursor
stringify_ids
count
followed ids request handler for cursor %@ received error %@
fetched followed user ids %@
fetching user info for the following ids %@
user info request handler for cursor %@ received error %@
next_cursor_str
v20@?0@"NSArray"8B16
id_str == %@
screen_name ==[c] %@
Could not save user record store: %@
v24@?0@"SLTwitterUserRecord"8@"NSError"16
System/Library/Frameworks/Social.framework/XPCServices/com.apple.twitter.xpc/twitterdModel.momd
set sharedURLCache memoryCapacity to %d and diskCapacity to %d
com.apple.private.social.twitter.service
com.apple.private.accounts.allaccounts
initWithConnection:database:
alloc
init
defaultCenter
accountStoreChanged:
addObserver:selector:name:object:
setGeotagStatus:notifyClient:
setActiveAccountIdentifier:
nts_stopUpdatingLocation:guaranteedToBeOnMainThread:
lock
unlock
removeObserver:
dealloc
identifier
copy
connection
processIdentifier
buildUserStore
database
initWithSession:database:account:accountStore:
updateFollowedUserRecordsIfNeeded
accountStore
accountWithIdentifier:
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
count
objectAtIndex:
isEqualToString:
showGeotagDisabledForAccountAlert:
fetchGeotagAccountSetting:
dictionary
array
countByEnumeratingWithState:objects:count:
setObject:forKey:
numberWithBool:
accountDescription
addObject:
lastFetchedImageLimits:
sessionInfo
airplaneMode
sharedNetworkObserver
isWiFiEnabled
localizedStringForKey:value:table:
twitterIconURL
URLWithString:
defaultWorkspace
openSensitiveURL:withOptions:
startUpdatingLocation
warnAboutNetworksIfNeeded
date
timeIntervalSinceDate:
intValue
numberWithInt:
lastFetchedTCoLength:
SLTwitterTCoLengthURL
initWithURL:
setTimestampSkewStorageDelegate:
setRequestMethod:
setAccount:
objectForKey:
recordFetchedTCoLength:
encodeableError
performJSONRequestWithHandler:
errorWithDomain:code:userInfo:
mutableCopy
defaultImageLimits
SLTwitterImageLimitsURL
objectForKeyedSubscript:
class
isKindOfClass:
recordFetchedImageLimits:
imageData
imageAssetURLs
containsObject:
removeObject:
playToneAndVibrationForType:
sl_twitterResponseTypeFromResponseObject:looseAuthFailureMatching:
statusCode
sl_twitterResponseObjectErrorCode:
numberWithUnsignedInt:
statusText
length
stringWithFormat:
stringWithString:
renewCredentialsForAccount:reason:completion:
_sendStatus:location:completion:
completeSendBlock:
beginTransaction
boolValue
playTweetSound
initWithFormat:
endTransaction
handleRetryTweet:location:response:responseObject:copiedCompletion:error:
statusRequiresMultiPart:
sendMultiPartStatus:location:copiedCompletion:
sendSimpleStatus:location:copiedCompletion:
currentLocation
SLTwitterRetweetURLForTweetID:
initWithURL:parameters:requestMethod:
callingPID
setCallingPID:
dictionaryWithObject:forKey:
SLTwitterDirectMessageURL
nts_geotagFetchingDeniedByUser
notifyUserAboutDisallowedLocation
SLTwitterUserInfoURL
setParameter:forKey:
userRecordWithDictionaryRepresentation:
dictionaryWithObjects:forKeys:count:
stringByReplacingOccurrencesOfString:withString:
performRequestWithHandler:
_fetchUserInfoForScreenName:completion:
lastObject
profileImagePath
dataWithContentsOfFile:
_fetchProfileImageDataFromTwitterForScreenName:completion:
predicateWithFormat:
userRecordsMatchingPredicate:completionBlock:
inReplyToStatusID
coordinate
SLTwitterUpdateStatusURL
maskedApplicationID
setApplicationID:
SLTwitterUpdateMultiPartStatusURL
addMultiPartData:withName:type:
dataUsingEncoding:
serviceForServiceType:
maximumImageDataSize
_sendMultiPartStatus:assetDataArray:location:copiedCompletion:
loadAssetDataIfNecessaryWithMaxByteSize:completion:
_effectiveBundleForCoreLocation
initWithEffectiveBundle:
setDelegate:
authorizationStatusForBundle:
bundleForClass:
nts_startUpdatingLocation
notifyClientOfLocationInfoChange
nts_locationManager
requestWhenInUseAuthorization
startUpdatingLocationWithPrompt
stopUpdatingLocation
description
setName:
setIdentifier:
setLatitude:
setLongitude:
stopUpdatingLocation:
_locationCoordinateCenterInTwitterPolygon:
_updateLocationStateWithPlaceName:placeID:locationCoordinate:
objectAtIndexedSubscript:
doubleValue
name
location
updateLocationStateWithCLPlacemarks:
reverseGeocodeLocation:completionHandler:
fetchNearbyPlacesWithCoreLocation:
updateLocationStateWithTwitterPlace:
fetchNearbyPlace:completion:
horizontalAccuracy
_clearLocationTimer
_fetchPlaceInfoForLocation:
setGeotagStatus:
SLTwitterNearbyPlacesURL
valueForKeyPath:
floatValue
numberWithDouble:
remoteObjectProxy
currentLocationInfo
acceptLocationUpdate:
SLTwitterAccountSettingsURL
enableGeotagAccountSetting:
sharedController
needsMigrationForSocialDaemonBundleID:preferenceKey:
ensureSocialUserDataDirectory
_migrateTwitterDataWithMigrationController:
didFinishMigrationForSocialDaemonBundleID:preferenceKey:
defaultManager
_oldTwitterDatabasePath
fileExistsAtPath:
_newTwitterDatabasePath
moveItemAtPath:toPath:error:
_oldTwitterImagesFolderPath
_newTwitterImagesFolderPath
_oldTwitterFolderPath
removeItemAtPath:error:
needsFileProtectionUpgradeForProfileImagesAtPath:serviceNameForLogging:
_twitterDatabaseFileName
removeAncillarySocialDatabaseFilesWithPrefix:serviceNameForLogging:
stringByAppendingPathComponent:
migrateDaemonDataIfNecessary
checkIn:
ensureUserRecordStore
fetchSessionInfo:
fetchGeotagStatus:
fetchCurrentTCoLength:
fetchCurrentImageLimits:
fetchRecordForScreenName:completion:
recordsMatchingPrefixString:completion:
fetchProfileImageDataForScreenName:completion:
sendStatus:completion:
retweetTweetWithID:completion:
sendDirectMessage:toUser:withScreenName:completion:
showTwitterSettingsIfNeeded:
getPermaLinkFromLastStatusUpdate:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
timestampSkew
setTimestampSkew:
nts_clientScale
nts_clientLocationViewSize
.cxx_destruct
_activeAccount
_accountStore
_locationStatusLock
_locationTimer
_geotagStatus
_locationManager
_currentLocation
_safeLocationManagerDelegate
_currentPlace
_userRecordStore
_clientInfo
_sendCompletionsLock
_sendCompletions
_warningAboutLocationAuth
_location
_permaLinkOfLastSuccessfulStatusUpdate
setMaxConcurrentOperationCount:
sharedQueue
defaultSessionConfiguration
setURLCache:
sessionWithConfiguration:
profileImagesPath
screen_name
stringByAddingPercentEscapesUsingEncoding:
profile_image_url
initWithString:
initWithURL:cachePolicy:timeoutInterval:
_noCacheSession
createFileAtPath:contents:attributes:
dataTaskWithRequest:completionHandler:
resume
addOperationWithBlock:
prefetchMedia
username
updateFollowedUserRecords
fetchObjectsForEntityNamed:withPredicate:
objectOfClass:
runSynchronouslyOnCoreDataQueue:
isMainThread
userRecordWithDictionaryRepresentation:existed:
dictionaryWithObjectsAndKeys:
personPredicateWithValue:comparison:forProperty:addressBook:
setPredicate:
setContext:
setAddressBook:
mainQueue
addOperation:
context
SLTwitterFriendsURL
componentsJoinedByString:
SLTwitterUsersLookupURL
consumeUserRecordRepresentations:
fetchFollowedUserRecordsWithCursor:
consumeAddressBookRecords:
findABEntriesWithTwitterScreenNames:
save:
localizedDescription
userRecordEntityWithID:
newObjectForEntityNamed:
setValuesWithObject:
saveUserRecordStoreWithHandler:
userRecordEntityWithScreenName:
consumeScreenName:existed:
searchOperation:didFindMatches:moreComing:
findABEntriesWithScreenName:
_weakSession
_account
_database
sharedURLCache
setMemoryCapacity:
setDiskCapacity:
memoryCapacity
diskCapacity
initWithExportedSessionClass:serviceProtocol:
setServiceName:
interfaceWithProtocol:
setClientInterface:
setPersistentStoreName:
setManagedObjectModelPath:
arrayWithObjects:count:
restrictToClientsWithEntitlements:
TWDSession
SLTwitterRemoteSessionProtocol
CLLocationManagerDelegate
NSObject
SLTimestampSkewStorageDelegate
SLMicroBlogPrefetchMediaQueue
TWDUserRecord
TWDUserRecordStore
ABSearchOperationDelegate
SLTwitterClientSessionProtocol
v16@0:8
v24@0:8@16
@16@0:8
v24@0:8@"NSDictionary"16
v24@0:8@"NSString"16
v24@0:8@?16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v24@0:8@"NSNumber"16
v32@0:8@16@?24
v32@0:8@"NSString"16@?<v@?@"SLTwitterUserRecord"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"SLMicroBlogStatus"16@?<v@?@"NSNumber"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v48@0:8@16@24@32@?40
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v24@0:8@?<v@?@"NSString"@"NSError">16
v40@0:8@16@24@32
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@16@24
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@16
B24@0:8@"CLLocationManager"16
v40@0:8@16q24@32
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@16i24
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
d16@0:8
v24@0:8d16
@32@0:8@16@24
i16@0:8
i24@0:8^B16
v20@0:8i16
@24@0:8^B16
v64@0:8@16@24@32@40@?48@56
v40@0:8@16@24@?32
v24@0:8i16B20
v24@0:8B16B20
v20@0:8B16
v48@0:8@16@24{CLLocationCoordinate2D=dd}32
{CLLocationCoordinate2D=dd}24@0:8@16
f16@0:8
{CGSize=dd}16@0:8
@"ACAccount"
@"ACAccountStore"
@"NSLock"
@"NSObject<OS_dispatch_source>"
@"CLLocationManager"
{CLLocationCoordinate2D="latitude"d"longitude"d}
@"SLSafeLocationManagerDelegate"
@"SLPlace"
@"TWDUserRecordStore"
@"NSDictionary"
@"NSMutableArray"
@"CLLocation"
@"NSString"
v36@0:8@16@24B32
v36@0:8@"ABSearchOperation"16@"NSArray"24B32
@48@0:8@16@24@32@40
@24@0:8@16
@32@0:8@16^B24
v32@0:8@16^B24
@"TWDSession"
@"SLDatabase"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>FAKETEAMID.com.apple.twitter.xpc</string>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.twitter.plist</string>
</array>
<key>com.apple.accounts.applicationidfrompid</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.prompt_behavior</key>
<true/>
<key>com.apple.locationd.status</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServicePhotos</string>
</array>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>social-services</string>
</array>
</dict>
</plist>
