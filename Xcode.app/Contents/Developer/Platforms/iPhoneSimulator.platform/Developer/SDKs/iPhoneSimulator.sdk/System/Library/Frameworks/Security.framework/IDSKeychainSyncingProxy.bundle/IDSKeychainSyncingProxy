MonitorState
UnhandledMessages
IDSSendMessageOptionForceEncryptionOff
com.apple.security.sos.error
v8@?0
event
IDSCallout
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.security.keychainchanged
backoff
v12@?0i8
com.apple.security.fpiAvailable
IDS Transport
SecError
com.apple.private.alloy.keychainsync
cannot set IDS device ID, secd is running as root
cannot set IDS deviceID, secd does not have a full peer info for account
IDSKeychainSyncingProxy can't set up the IDS service
IDSKeychainSyncingProxy can't set device ID, device is locked
IDSKeychainSyncingProxy could not retrieve device ID from keychain
v40@?0@"NSMutableDictionary"8B16B20@"NSObject<OS_dispatch_queue>"24@?<v@?@"NSMutableDictionary"BB>32
v24@?0@"NSMutableDictionary"8B16B20
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
unhandledMessageBuffer
T@"NSMutableDictionary",&,N,V_unhandledMessageBuffer
shadowPendingMessages
T@"NSMutableDictionary",&,N,V_shadowPendingMessages
allFragmentedMessages
T@"NSMutableDictionary",&,N,V_allFragmentedMessages
pingTimers
T@"NSMutableDictionary",&,N,V_pingTimers
penaltyTimer
T@"NSObject<OS_dispatch_source>",&,V_penaltyTimer
penaltyTimerScheduled
TB,V_penaltyTimerScheduled
monitor
T@"NSMutableDictionary",&,V_monitor
queuedMessages
T@"NSDictionary",&,V_queuedMessages
isIDSInitDone
TB,V_isIDSInitDone
isSecDRunningAsRoot
TB,V_isSecDRunningAsRoot
doesSecDHavePeer
TB,V_doesSecDHavePeer
calloutQueue
T@"NSObject<OS_dispatch_queue>",&,V_calloutQueue
isLocked
TB,V_isLocked
unlockedSinceBoot
TB,V_unlockedSinceBoot
retryTimer
T@"NSObject<OS_dispatch_source>",&,V_retryTimer
retryTimerScheduled
TB,V_retryTimerScheduled
inCallout
TB,V_inCallout
setIDSDeviceID
TB,V_setIDSDeviceID
shadowDoSetIDSDeviceID
TB,V_shadowDoSetIDSDeviceID
handleAllPendingMessages
TB,V_handleAllPendingMessages
shadowHandleAllPendingMessages
TB,V_shadowHandleAllPendingMessages
com.apple.notifyd.matching
aks_get_lock_state failed: %d
v32@?0@"NSString"8@16^B24
com.apple.security.idskeychainsyncingproxy.unhandledMessages.plist
WAIT4DEBUGGER
Waiting for debugger
NumberOfIDSMessageFragments
kFragmentIndex
IDSMessageOperation
MessageToSendKey
MessageID
deviceID
v32@?0@8@16^B24
IDSPing
@"NSMutableDictionary"24@?0@"NSMutableDictionary"8^@16
checking peers
v32@?0@8Q16^B24
Could not send message to peer: %@: IDS delegate uninitialized, can't use IDS to send this message
Could not send message to peer: %@: IDS devices are not registered yet
Could not send message to peer: %@: IDS device ID for peer does not match any devices within an IDS Account
Had an error sending IDS message to peer: %@
com.apple.security.ids.error
IDSKeychainSyncingProxy didSendWithSuccess identifier=%@ error=%@
IDSKeychainSyncingProxy didSendWithSuccess identifier=%@ Success!
com.apple.security.cloudkeychainproxy3
com.apple.security.idskeychainsyncingproxy
operation
value
error
version
GetNewKeysOnly
KeysToGet
KeysRequireFirstUnlock
KeysRequiresUnlocked
NotificationFlags
AlwaysKeys
FirstUnlockKeys
UnlockedKeys
Context
AllKeys
KeyParameter
Circle
Message
deviceName
idsDataMessage
peerID
sendersPeerID
ItemChanged
ClearStore
Synchronize
SynchronizeAndWait
Flush
PUTDictionary
GETv2
RegisterKeys
DeviceID
IDSDeviceList
IDSMessage
IDSMessageFragmented
requestSyncWithAllPeers
requestEnsurePeerRegistration
com.apple.security.cloudkeychainproxy.kvstorechange3
com.apple.security.cloudkeychain.forceupdate
peer availability check finished
require the sender's device ID
object %@ is not a data
Penalty
ConsecutiveWrites
LastWriteTimestamp
MessageQueue
PenaltyTimer
DidWriteDuringPenalty
TimeTable
AFirstMinute
BSecondMinute
CThirdMinute
DFourthMinute
EFifthMinute
TimeSlice
api_trace
v16@?0r^v8
v24@?0r^v8r^v16
ENTER
RETURN
SecAPITrace 
C%p F%p
CALLER 
security scope control
Emergency
Alert
Critical
Error
Warning
Notice
Info
Debug
none
DEBUGSCOPE
.GlobalPreferences.plist
SecLogging
Logging
com.apple.security
Circle-Logging
logging
logObjectQueue
com.apple.securityd
v16@?0r*8
%@: [%d] %s
kSecCoreCryptoDomain
kSecNotifyDomain
debug
null
%@%@
v24@?0Q8*16
v24@?0r*8Q16
%@%@:%@
%c:%@ 
yyyy-MM-dd HH:mm
Date Formatting
v16@?0^{__CFDateFormatter=}8
ZuluCalendar
%02X
Library/Keychains
Library/Caches
Library/Preferences
mobile
/Library/Managed Preferences/%@/%@
%@/%@
alloc
init
dictionaryWithObjects:forKeys:count:
count
exportState
setUnhandledMessages:
objectForKeyedSubscript:
dictionary
initWithCapacity:
doIDSInitialization
doSetIDSDeviceID
streamEvent:
timerFired
idsState
importIDSState:
updateUnlockedSinceBoot
updateIsLocked
keybagDidUnlock
handleAllPendingMessage
keybagDidLock
idsProxy
scheduleRetryRequestTimer
initWithService:
addDelegate:queue:
calloutWith:
copy
initWithFormat:arguments:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
persistState
keybagStateChange
sendKeysCallout:
.cxx_destruct
unhandledMessageBuffer
setUnhandledMessageBuffer:
shadowPendingMessages
setShadowPendingMessages:
allFragmentedMessages
setAllFragmentedMessages:
pingTimers
setPingTimers:
penaltyTimer
setPenaltyTimer:
penaltyTimerScheduled
setPenaltyTimerScheduled:
monitor
setMonitor:
queuedMessages
setQueuedMessages:
isIDSInitDone
setIsIDSInitDone:
isSecDRunningAsRoot
setIsSecDRunningAsRoot:
doesSecDHavePeer
setDoesSecDHavePeer:
calloutQueue
setCalloutQueue:
isLocked
setIsLocked:
unlockedSinceBoot
setUnlockedSinceBoot:
retryTimer
setRetryTimer:
retryTimerScheduled
setRetryTimerScheduled:
inCallout
setInCallout:
setIDSDeviceID
setSetIDSDeviceID:
shadowDoSetIDSDeviceID
setShadowDoSetIDSDeviceID:
handleAllPendingMessages
setHandleAllPendingMessages:
shadowHandleAllPendingMessages
setShadowHandleAllPendingMessages:
_service
_deviceID
_penaltyTimerScheduled
_isIDSInitDone
_isSecDRunningAsRoot
_doesSecDHavePeer
_isLocked
_unlockedSinceBoot
_retryTimerScheduled
_inCallout
_setIDSDeviceID
_shadowDoSetIDSDeviceID
_handleAllPendingMessages
_shadowHandleAllPendingMessages
_unhandledMessageBuffer
_shadowPendingMessages
_allFragmentedMessages
_pingTimers
_penaltyTimer
_monitor
_queuedMessages
_calloutQueue
_retryTimer
propertyList:isValidForFormat:
dataWithPropertyList:format:options:error:
writeToURL:options:error:
dataWithContentsOfURL:options:error:
propertyListWithData:options:format:error:
array
stringByAppendingString:
addObject:
componentsJoinedByString:
stringWithFormat:
enumerateKeysAndObjectsUsingBlock:
registrationFileURL
read:error:
dictionaryWithDictionary:
write:data:error:
dictionaryDescription:
mainRunLoop
recordTimestampOfWriteToIDS:deviceName:peerID:
filterForWritableValues:
sendFragmentedIDSMessages:name:peer:error:
pingDevices:peerID:
string
sendIDSMessage:name:peer:identifier:error:
length
subdataWithRange:
dictionaryWithObjectsAndKeys:
initWithInt:
objectForKey:
intValue
chunkAndSendKeychainPayload:deviceID:ourPeerID:theirPeerID:operation:error:
removeObjectForKey:
pingTimerFired:peerID:identifier:
setObject:forKey:
enumerateObjectsUsingBlock:
stringWithUTF8String:
numberWithBool:
devices
objectAtIndexedSubscript:
uniqueID
compare:
sendMessage:toDestinations:priority:options:identifier:error:
errorWithDomain:code:userInfo:
null
valueForKey:
longValue
replaceObjectAtIndex:withObject:
countNumberOfValidObjects:
data
appendData:
initWithUTF8String:
containsString:
handleTestMessage:id:
checkForFragmentation:id:data:
combineMessage:peerID:uuid:
sendMessageToSecurity:fromID:
shouldPersistMessage:id:
penaltyTimerFired:deviceName:peerID:
setNewTimer:key:deviceName:peerID:
initializeKeyEntry:
isEqualToString:
increasePenalty:key:keyEntry:deviceName:peerID:
decreasePenalty:key:keyEntry:deviceName:peerID:
initializeTimeTable:
recordTimestampForAppropriateInterval:key:consecutiveWrites:
date
dateByAddingTimeInterval:
numberWithInt:
allKeys
sortedArrayUsingSelector:
timeIntervalSinceDate:
IDSKeychainSyncingProxy
IDSServiceDelegate
NSObject
IDSKeychainSyncingProxyPersistentState
IDSProxySendMessage
IDSProxyReceiveMessage
IDSProxyThrottle
%@ start
keychain changed, wiping backoff monitor state
secd has a peer info
%@ locking!
%@ unlocking!
%@ Got error from SecAKSGetHasBeenUnlocked: %@
%@ Got error querying lock state: %@
updateIsLocked: %d
keybagStateChanged
keybagStateChange! was locked: %d
%@ attempting to hand unhandled messages to securityd, here is our message queue: %@
scheduling unhandled messages timer
doIDSInitialization!
Could not create ids service
IDS Transport Successfully set up IDS!
SETTING RUN AS ROOT ERROR: %@
system is locked, cannot set device ID, error: %@
securityd does not have a peer yet , error: %@
Setting device ID error: %@, code: %ld
%@ did not handle message: %@
can't save PersistentState as XML
error serializing PersistentState to xml: %@
error writing PersistentState to file: %@
could not deserialize PersistentState from %@: %@
Total number of Fragments: %d
length: %lu
sending fragment: %@
fragmenting message! %@
keychainData length: %lu
sending message, no fragmentation: %@
returning result: %d, error: %@
device ID: %@ !!!!!!!!!!!!!!!!Ping timeout is up!!!!!!!!!!!!
sent peerID: %@ to securityd to sync over KVS
Could not hand peerID: %@ to securityd, error: %@
sending to id: %@
sending ping to peer %@ had an error: %@
!!writing these keys to IDS!!: %@
Sending message from: %@ to: %@
devices: %@
 we have their deviceName: %@
This is our list of devices: %@
identifier: %@
sent to peer:%@, message: %@
this is our index: %lu and size: %lu
!received availability response!: %@
timer not nil
sent device ID: %@ to securityd to sync over IDS
Could not hand device ID: %@ to securityd, error: %@
received pong message from other device: %@, ping test PASSED
received ping test message, dropping on the floor now
Received Availability Message from:%@!
Received PingTest Message from: %@!
device is locked, not responding to availability check
message: %@
Received message from: %@
from peer %@, operation type as string: %@, as integer: %d
fragmentation: messageData: %@, myPeerID: %@
no fragmentation: messageData: %@, myPeerID: %@
dropping IDS message
error:%@
Attempting to handle pending messsages
handling Message: %@
cannot handle messages from: %@ when locked, error:%@
not ready to handle message from: %@, error:%@
unhandledMessageBuffer: %@
message for a ghost! dropping message. error:%@
error in message, dropping message. error:%@
IDSProxy handled this message %@, from: %@
increasing penalty!
key %@, waiting %d minutes long to send next messages
decreasing penalty!
key: %@, !!!!!!!!!!!!!!!!penalty timeout is up!!!!!!!!!!!!
key: %@, queuedMessages: %@
key: %@, message queue not empty, writing to IDS!
key: %@, current penalty timeout: %@
didn't find a time slot, resetting the table
consecutive writes: %d
written for 5 consecutive minutes, time to start throttling
monitor: keys have been written for 5 or more minutes, recording we wrote during timeout
monitor: still writing freely
filterForWritableValues: %@
keyEntry_operationType: %@
writing to queuedMessages: %@
@16@0:8
v56@0:8@16@24@32@40@48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@16@24@32@40@48@56
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v32@0:8@16@24
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@16@24@32B40@44
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@16@24@32B40@44@52
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v48@0:8@16@24@32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v24@0:8@16
v24@0:8@"IDSService"16
v40@0:8@16@24@?32
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v16@0:8
v24@0:8@?16
v20@0:8B16
@"IDSService"
@"NSString"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_source>"
@"NSDictionary"
@"NSObject<OS_dispatch_queue>"
B40@0:8@16@24^@32
@32@0:8@16^@24
@24@0:8@16
B64@0:8@16@24@32@40@48^@56
B48@0:8@16@24@32^@40
v40@0:8@16@24@32
B56@0:8@16@24@32^@40^@48
i24@0:8@16
B40@0:8@16@24@32
@40@0:8@16@24@32
B32@0:8@16@24
@44@0:8i16@20@28@36
v56@0:8@16@24^@32@40@48
v40@0:8^@16@24^@32
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key> keychain-cloud-circle</key>
<true/>
<key>application-identifier</key>
<string>com.apple.security.idskeychainsyncingproxy</string>
<key>com.apple.private.ids.force-encryption-off</key>
<array>
<string>com.apple.private.alloy.keychainsync</string>
</array>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.keychainsync</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.keychainsync</string>
</array>
<key>com.apple.private.ids.remoteurlconnection</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>IMCore</string>
<string>InternetAccounts</string>
</array>
</dict>
</plist>
