CardDAVSyncInfo
CardDAVAgent
CardDAVAddressBookURLsConsumer
NSObject
DAContactsUpdateConsumer
DAActionConsumer
DADataclassLockWatcher
DAValidityCheckConsumer
ABPredicateDelegate
DARefreshManagerDelegate
CardDAVFinishInitialSyncConsumer
CardDAVMeCardUpdateConsumer
DABabysittable
CardDAVDaemonAccount
CoreDAVLocalDBInfoProvider
CoreDAVTaskGroupDelegate
CoreDAVGetAccountPropertiesTaskGroupDelegate
CoreDAVContainerInfoTaskGroupDelegate
CoreDAVContainerQueryTaskDelegate
CoreDAVTaskDelegate
CardDAVFacebookDaemonAccount
CardDAVVCardItem
CoreDAVLeafDataPayload
DADataElement
CardDAViCloudGetAccountPropertiesTaskGroup
CardDAViCloudDaemonAccount
NSURLConnectionDelegate
.cxx_destruct
uuidToPersonCache
setUuidToPersonCache:
startedWithNoContacts
setStartedWithNoContacts:
_uuidToPersonCache
_startedWithNoContacts
initWithAccount:
account
setWasUserInitiated:
isWaitingForPassword
accountDescription
shouldFailAllTasks
shouldAutodiscoverAccountProperties
discoverInitialPropertiesWithConsumer:
refreshFolderListRequireChangedFolders:isUserRequested:
setSyncWhenReachable:
_probeAndSyncWithBlock:
sharedDBWatcher
isMonitoring
_validateAndSync:
registerConcernedABParty:withChangedBlock:
removeConcernedABParty:
principalPath
setShouldDoInitialAutodiscovery:
saveAccountProperties
domain
isEqualToString:
code
setIsWaitingForPassword:
handleValidationError:completion:
enabledForDADataclass:
setIsMonitoring:
observeReachabilityWithBlock:
_setUpABNotifications
sharedManager
registerDelegate:
stopObservingReachability
_tearDownABNotifications
taskManager
shutdown
sharedGateKeeper
unregisterWaiterForDataclassLocks:
unregisterDelegate:
setShouldUseOpportunisticSockets:
syncAddressBookURLsWithConsumer:
addressBooksByFolderURL
countByEnumeratingWithState:objects:count:
URLWithString:
objectForKeyedSubscript:
addObject:
_appendSyncRequestsForFolders:remoteChanges:
addressBooks
count
_syncAllContactFoldersWithRemoteChanges:
length
sharedInstance
abDB
createOrphanedABRecordFromParsedVCardOutRecordType:
personPredicateWithGroup:source:account:
personPredicateWithValue:comparison:forProperty:
arrayWithObjects:count:
andPredicateWithSubpredicates:
searchPeopleWithPredicate:sortOrder:inAddressBook:withDelegate:
personPredicateWithPhoneLike:countryHint:addressBook:
objectAtIndexedSubscript:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
changeTrackingID
abPersonChangeId
abGroupChangeId
changeId
itemChangeType
changedItem
abRecordType
da_leastInfoStringRepresentationRelativeToParentURL:
serverID
_localIdForExternalURL:inContainer:withFolderURL:
_copyExistingABRecordForContact:inStore:
class
saveWithLocalObject:toContainer:containerURL:shouldMergeProperties:outMergeDidChooseLocalProperties:account:shouldSaveGroups:
clientID
setObject:forKeyedSubscript:
setLocalItem:
deleteFromContainer:
removeObjectForKey:
_handlePotential503Error:
homeURL
abOpenDBWithClientIdentifier:
syncStoreIdentifier
propertyListFromData:mutabilityOption:format:errorDescription:
dictionaryWithCapacity:
numberWithBool:
dataFromPropertyList:format:errorDescription:
abCloseDBAndSave:
relinquishLocksForWaiter:dataclasses:moreComing:
delegateDidCompleteRefresh:
setLastRetryTimeout:
_fireWaitingFolderItemSyncRequests
updateMeCardWithWithConsumer:
setBestMeCard
_updateMeCard
maxImageSizeFromSyncDict:
maxResourceSizeFromSyncDict:
_fillOutExternalUUIDForRecordType:localId:changeType:outTouchedDB:
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
containsObject:
alloc
initWithABRecord:outNeedsDBSave:maxImageSize:maxResourceSize:inContainerWithURL:
initWithItemChangeType:changedItem:serverId:
integerValue
absoluteString
finishInitialSyncOfContactsFolder:previousTag:uuidsToAddActions:hrefsToModDeleteActions:useCRUD:maxResources:maxSize:consumer:
_successfullyFinishedInitialSyncForFolderWithID:
abClearSuperfluousChanges
removeAllObjects
_pushInitialSyncActionsForFolderWithURL:
allObjects
addObjectsFromArray:
_clearChangeHistoriesWithChangeIdContext:pushedActions:inStore:
abSaveDB
_handleAction:inStore:withFolderURL:isInitialSync:arePartialResults:
abProcessAddedRecords
abRecord
numberWithInt:
setUUIDToPersonCache:
saveIfGroupWithLocalObject:toContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:account:
removeObject:
abProcessAddedImages
_finishInitialSyncForFolderWithURL:
_syncResultForFolderWithURL:newTag:newSyncToken:actions:changeIdContext:isInitialSync:arePartialResults:
mutableCopy
userInfo
DAObjectForKeyCaseInsensitive:
doubleValue
watchedCollections
retryRefreshForDelegate:withCollections:after:originalRefreshReason:
lastRetryTimeout
folderURL
isKindOfClass:
_addressBookSyncTask:failedWithErrorCode:
intValue
da_newGUID
initWithCapacity:
loadClientIDs
loadLocalItemWithAccount:
_addChangeForType:changedItemId:changeId:addedIdsToChangeId:modifiedIdsToChangeId:deletedIdsToChangeId:changeIdsToClear:
_fillOutExternalURLForRecordType:localId:changeType:inFolderWithURL:outNewExternalURL:outTouchedDB:
allKeys
setChangeId:
_copyABActionsOfType:inContainer:existingActions:maxImageSize:maxResourceSize:outHighestChangeId:outTouchedDB:
setAbPersonChangeId:
setAbGroupChangeId:
folder
folderID
sharedBabysitter
registerAccount:forOperationWithName:
boolValue
setIsInitialUberSync:
isInitialUberSync
actions
_copyCoalescedChangesInContainer:existingActions:maxImageSize:maxResourceSize:changeContext:outTouchedDB:
hasRemoteChanges
setHasRemoteChanges:
isResyncAfterConnectionFailed
synchronizeContactsFolder:previousTag:previousSyncToken:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:previousTagIsSuspect:moreLocalChangesAvailable:consumer:
unregisterAccount:forOperationWithName:
transactionId
_reallySyncRequest:
registerWaiter:forDataclassLocks:completionHandler:
lock
copy
unlock
_syncRequest:
isEqual:
setActions:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
initWithFolder:hasRemoteChanges:isInitialUberSync:
_appendSyncRequest:
hasPrefix:
pushTransport
uppercaseString
initWithString:
pushKeysToFolderURLs
APSTopicHasValidPrefix:
registerTopic:forDelegate:inEnvironment:
unregisterTopic:forDelegate:inEnvironment:
accountID
scheduleIdentifier
onBehalfOfBundleIdentifier
username
password
successfullyRetrievedAddressBookURLs
failedToRetrieveAddressBookURLsWithError:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
syncResultForContactsFolder:newTag:previousTag:newSyncToken:actions:results:changeIdContext:isInitialSync:moreAvailable:moreLocalChangesAvailable:pushedActions:
contactsFolderWithId:successfullyPushedActions:
actionFailed:forTask:error:
waiterID
account:isValid:validationError:
predicateShouldContinue:
predicateShouldContinue:afterFindingRecord:
predicateShouldContinue:afterFindingRecord:metadata:
predicateShouldContinue:afterFindingRecord:moreComing:
predicateShouldContinue:afterFindingRecord:metadata:moreComing:
refreshCollections:withReason:
getDAAccount
serverTokenRegistrationURL
interfaceWentUp
interfaceWentDown
trustHandler
successfullyFinishedInitalUploadForFolderWithID:blacklistedUUIDs:blacklistedHREFs:
failedToFinishInitialSync:error:
successfullyUpdatedServerMeCardWithURL:
failedToUpdateServerMeCardWithError:
startMonitoring
requestAgentStopMonitoringWithCompletionBlock:
syncFolderIDs:forDataclasses:isUserRequested:
_currentlySyncingFolderURLs
_outstandingFolderRequests
_folderItemSyncRequestLock
_isSyncingHierarchy
_folderURLToHeldAsideGroups
_matchMode
_testRecord
_matchedRecord
_serverTokenRegistrationURL
_containerPushKeys
_folderURLToSyncInfo
_bulkUploadUUIDBlacklist
_bulkUploadHREFBlacklist
initWithBackingAccountInfo:
setSearchTaskSet:
mapTableWithStrongToStrongObjects
setPushedActionsByTaskGroup:
pushedActionsByTaskGroup
objectForKey:
setObject:forKey:
isForgivableError:
pushedActionsForTaskGroup:
backingAction
context
setLocalETag:forItemWithURL:inFolderWithURL:
initWithURL:eTag:dataPayload:inContainerWithURL:withAccountInfoProvider:
_fillOutActionsArray:addedOrModified:removed:
consumerForTask:
previousCTag
isInitialSync
daActionsFromCDVActions:
removePushedActionsForTaskGroup:
removeConsumerForTask:
errorWithDomain:code:userInfo:
copyCDVActionFromDAAction:
initWithFolderURL:checkCTag:uuidsToAddActions:hrefsToModDeleteActions:context:accountInfoProvider:taskManager:
setMultiPutBatchMaxNumResources:
setMultiPutBatchMaxSize:
setDelegate:
setConsumer:forTask:
startTaskGroup
uuidToHREF
hrefToETag
hrefToStatus
nextCTag
CDVIsHTTPStatusLineWithStatusCode:
enumerateKeysAndObjectsUsingBlock:
uuidToErrorItems
maxResourceSize
maxImageSize
invalidImageType
imageError
noUIDConflict
validAddressData
hrefToErrorItems
_updateMeTaskGroup:didFinishWithError:
_bulkUploadTaskGroup:didFinishWithError:
initWithAction:context:
serverId
setChangeContext:
action
changeContext
copyDAActionFromCDVAction:
cdvActionsFromDAActions:
initWithFolderURL:previousCTag:previousSyncToken:actions:syncItemOrder:context:accountInfoProvider:taskManager:appSpecificDataItemClass:
setIsInitialSync:
setEnsureUpdatedCTag:
isSearchAddressBook
isAddressBook
isSharedAddressBook
containerTitle
lastPathComponent
prettyStringForDisplayName
_copyABAccount:
addressBookConstraintsPlistPath
updateSyncDict:forSource:withContainer:
privileges
hasWriteContentPrivileges
hasWritePropertiesPrivileges
setMPushKeysToFolderURLs:
setPushTransport:
containerURLs
pushTransports
meCardURL
pushKey
mPushKeysToFolderURLs
anyObject
bulkRequests
isEqualToDictionary:
_handleOrphanarium:toBeCreatedContainersByURL:
allValues
newABSourceForContainer:
_fillOutAddressBooksFromLocalDB
addressBookHomes
unionSet:
directoryGatewayURLs
initWithAccountInfoProvider:containerURLs:directoryGatewayURLs:taskManager:
initWithAccountInfoProvider:taskManager:
_reallySyncAddressBookURLsWithConsumer:
mAddressBooksByFolderURL
setMAddressBooksByFolderURL:
setMAddressBooks:
setMSearchAddressBooks:
mAddressBooks
mSearchAddressBooks
setFolderName:
setFolderID:
setDataclass:
searchString
maxResults
initWithSearchString:searchLimit:atURL:appSpecificDataItemClass:
setAccountInfoProvider:
setContext:
consumer
submitIndependentTask:
arrayWithCapacity:
convertToDAContactSearchResultElement
searchQuery:returnedResults:
searchQuery:finishedWithError:
cancelTask:
stringWithFormat:
URLByAppendingPathComponent:
discoveryTask:gotAccountInfo:error:
URLByDeletingLastPathComponent
cardURL
_updateStoredMeCardWithURL:
_copyCardFromMeIdentifierAndContainer:
_serverMeCard:hasChangedInContainer:
initWithAccountInfoProvider:taskManager:homeURL:cardURL:
sendMeCardEverywhere
_reallyUpdateMeCardWithWithConsumer:allowDistantUpdate:
copyLocalETagsForURLs:inFolderWithURL:
copyAllLocalURLsInFolderWithURL:
copyLocalETagsForURLToETagDict:inFolderWithURL:
syncPutTask:completedWithNewETag:parentTaskGroup:error:
syncPostTask:postedData:parentTaskGroup:error:
syncDeleteTask:parentTaskGroup:completedWithError:
syncBulkChangeTask:parentTaskGroup:completedWithError:
syncPutTask:completedWithNewETag:error:
syncPostTask:data:error:
syncDeleteTask:error:
syncBulkChangeTask:error:
containerSyncTask:retrievedAddedOrModifiedActions:removed:
containerSyncTask:completedWithNewCTag:newSyncToken:addedOrModified:removed:error:
taskGroup:didFinishWithError:
getAccountPropertiesTask:completedWithError:
containerInfoTask:completedWithContainers:error:
containerQueryTask:completedWithFoundItems:limitReached:error:
containerQueryTask:completedWithFoundItems:error:
task:didFinishWithError:
_reallyPerformSearchQuery:
_reallyCancelSearchQuery:
_reallyCancelAllSearchQueries
_reallySearchQueriesRunning
setHomeURL:
searchTaskSet
setMeCardURL:
meFolderURL
setMeFolderURL:
hasOutstandingABChanges
setHasOutstandingABChanges:
_hasOutstandingABChanges
_pushTransport
_homeURL
_mAddressBooksByFolderURL
_mAddressBooks
_mSearchAddressBooks
_mPushKeysToFolderURLs
_searchTaskSet
_meCardURL
_meFolderURL
_pushedActionsByTaskGroup
useThunderhillBetaServers
host
init
setDataPayload:
setServerID:
setSyncKey:
setAbRecordType:
abDBThrowOnNil:
bytes
base64EncodedStringWithOptions:
initWithFormat:
setClientID:
copyVCardRepresentationOfRecord:withPhoto:extraPhotoParameters:
dataPayload
dealloc
initWithData:
createRecordInSource:outRecordType:
importToPerson:removeExistingProperties:
importToGroup:removeExistingProperties:
localRecordHasAdditionalProperties
copyImageContentsAtURL:outError:
isEqualToData:
lastCropRectChecksum
initWithBytes:length:
lastCropRectX
lastCropRectY
lastCropRectWidth
lastCropRectHeight
syncKey
_massageAddedOrModifiedVCard:
unarchiveObjectWithData:
compare:options:range:
substringFromIndex:
setDisplayName:
setFirstName:
setLastName:
setEmailAddress:
setWorkPhone:
setMobilePhone:
setHomePhone:
setIPhone:
setMainPhone:
setFaxPhone:
setWorkFaxPhone:
setPagerNumber:
setCompany:
setTitle:
setAlias:
setStreet:
setCity:
setState:
setZip:
setCountry:
initWithData:encoding:
initWithBase64EncodedString:options:
setJpegPhoto:
setImService:
setImUsername:
emailAddress
setIdentifierOnServer:
childrenOrder
sourceURL
setSourceURL:
destinationURL
setDestinationURL:
saveWithLocalObject:toContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:account:
saveServerIDToExistingItem
UUIDToPersonCache
_abRecordType
_serverID
_clientID
_dataPayload
_abRecord
_syncKey
_UUIDToPersonCache
_setPropertiesFromParsedResponses:
successfulPropertiesToValues
CDVObjectForKeyWithNameSpace:andName:
hrefsAsFullURLs
scheme
user
port
CDVRawPath
parameterString
query
fragment
initWithCDVScheme:user:password:host:port:path:parameterString:query:fragment:
setHostOverride:
setUseSSLOverride:
setPortOverride:
hostOverride
hostFromDataclassPropertiesForDataclass:
useSSLOverride
useSSLFromDataclassPropertiesForDataclass:
portOverride
portFromDataclassPropertiesForDataclass:
backingAccountInfo
parentAccount
dataclassProperties
saveVerifiedAccount:withCompletionHandler:
aa_updatePropertiesForAppleAccount:completion:
compressRequests
initWithObjectsAndKeys:
resetAccountID
fetchingImageDataRefCount
setFetchingImageDataRefCount:
CDVURLWithUser:
initWithURL:cachePolicy:timeoutInterval:
setUrlRequest:
urlRequest
_setProperty:forKey:
copyStorageSession
DARequestByApplyingStorageSession:
_sendRequest:
currentRunLoop
dateWithTimeIntervalSinceNow:
runMode:beforeDate:
setFetchedImageData:
setFetchImageError:
getAppleIDSession
appleIDHeadersForRequest:
setValue:forHTTPHeaderField:
customConnectionProperties
_initWithRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:
scheduleInRunLoop:forMode:
start
aa_firstName
aa_lastName
aa_primaryEmail
currentRequest
handleResponse:forRequest:shouldRetry:
cancel
statusCode
appendData:
protectionSpace
authenticationMethod
sender
previousFailureCount
cancelAuthenticationChallenge:
proposedCredential
useCredential:forAuthenticationChallenge:
initWithIdentifier:
connection:didFailWithError:
connectionShouldUseCredentialStorage:
connection:willSendRequestForAuthenticationChallenge:
connection:canAuthenticateAgainstProtectionSpace:
connection:didReceiveAuthenticationChallenge:
connection:didCancelAuthenticationChallenge:
setHost:
setUseSSL:
useSSL
setPort:
noteHomeSetOnDifferentHost:
shouldHandleHTTPCookiesForURL:
shouldSendClientInfoHeaderForURL:
shouldCompressRequests
_shouldWipeDataOnUpgradeFromAccountVersion:
connection:didReceiveResponse:
connection:didReceiveData:
connectionDidFinishLoading:
connection:willCacheResponse:
fetchedImageData
fetchImageError
_fetchingImageDataRefCount
_useSSLOverride
_fetchedImageData
_fetchImageError
_hostOverride
_portOverride
_urlRequest
v16@0:8
@16@0:8
v24@0:8@16
B16@0:8
v20@0:8B16
@"NSMutableDictionary"
v24@0:8@"NSError"16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v92@0:8@16@24@32@40@48@56@64B72B76B80@84
v92@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSArray"48@"NSArray"56@"ContactFolderItemsSyncContext"64B72B76B80@"NSArray"84
v32@0:8@16@24
v32@0:8@"NSString"16@"NSArray"24
v40@0:8q16@24@32
v40@0:8q16@24@"NSError"32
v36@0:8@16B24@28
v36@0:8@"DAAccount"16B24@"NSError"28
B24@0:8@"NSPredicate"16
B32@0:8@16^v24
B32@0:8@"NSPredicate"16^v24
B40@0:8@16^v24@32
B40@0:8@"NSPredicate"16^v24@"NSDictionary"32
B36@0:8@16^v24B32
B36@0:8@"NSPredicate"16^v24B32
B44@0:8@16^v24@32B40
B44@0:8@"NSPredicate"16^v24@"NSDictionary"32B40
v28@0:8@16i24
v28@0:8@"NSSet"16i24
@"NSSet"16@0:8
@"DAAccount"16@0:8
@"NSURL"16@0:8
@"DATrustHandler"16@0:8
v40@0:8@16@24@32
v40@0:8@"NSString"16@"NSSet"24@"NSSet"32
v32@0:8@"NSString"16@"NSError"24
v24@0:8@"NSURL"16
@24@0:8@16
v24@0:8@?16
v24@0:8B16B20
v36@0:8@16q24B32
^v32@0:8@16^v24
B40@0:8@16@24^v32
i40@0:8@16^v24@32
B48@0:8@16^v24@32B40B44
B64@0:8@16@24@32@40@48B56B60
v32@0:8@16q24
v72@0:8Q16@24@32@40@48@56@64
B40@0:8I16i20Q24^B32
@68@0:8I16^v20@28q36q44^i52^B60
@64@0:8^v16@24q32q40@48^B56
v28@0:8@16B24
@"NSMutableSet"
@"NSMutableArray"
@"NSLock"
@"NSURL"
@32@0:8@16@24
@"NSDictionary"32@0:8@"NSArray"16@"NSURL"24
@"NSSet"24@0:8@"NSURL"16
@"NSDictionary"32@0:8@"NSDictionary"16@"NSURL"24
B40@0:8@16@24@32
B40@0:8@"NSString"16@"NSURL"24@"NSURL"32
B48@0:8@16@24@32@40
B48@0:8@"CoreDAVPutTask"16@"NSString"24@"CoreDAVContainerSyncTaskGroup"32@"NSError"40
B48@0:8@"CoreDAVPostTask"16@"NSData"24@"CoreDAVContainerSyncTaskGroup"32@"NSError"40
B40@0:8@"CoreDAVDeleteTask"16@"CoreDAVContainerSyncTaskGroup"24@"NSError"32
B40@0:8@"CoreDAVBulkChangeTask"16@"CoreDAVContainerSyncTaskGroup"24@"NSError"32
B40@0:8@"CoreDAVPutTask"16@"NSString"24@"NSError"32
B40@0:8@"CoreDAVPostTask"16@"NSData"24@"NSError"32
B32@0:8@16@24
B32@0:8@"CoreDAVDeleteTask"16@"NSError"24
B32@0:8@"CoreDAVBulkChangeTask"16@"NSError"24
v40@0:8@"CoreDAVContainerSyncTaskGroup"16@"NSSet"24@"NSSet"32
v64@0:8@16@24@32@40@48@56
v64@0:8@"CoreDAVContainerSyncTaskGroup"16@"NSString"24@"NSString"32@"NSSet"40@"NSSet"48@"NSError"56
v32@0:8@"CoreDAVTaskGroup"16@"NSError"24
v32@0:8@"CoreDAVGetAccountPropertiesTaskGroup"16@"NSError"24
v40@0:8@"CoreDAVContainerInfoTaskGroup"16@"NSSet"24@"NSError"32
v44@0:8@16@24B32@36
v44@0:8@"CoreDAVContainerQueryTask"16@"NSSet"24B32@"NSError"36
v40@0:8@"CoreDAVContainerQueryTask"16@"NSSet"24@"NSError"32
v32@0:8@"CoreDAVTask"16@"NSError"24
B76@0:8@16@24@32@40B48q52q60@68
v80@0:8@16@24@32@40@48B56B60B64B68@72
^v20@0:8B16
^v24@0:8@16
B56@0:8I16i20Q24@32^@40^B48
^v24@0:8r^^v16
B32@0:8^v16^v24
B28@0:8@16B24
@"NSDictionary"
@"NSMapTable"
@56@0:8@16@24@32@40@48
@56@0:8@"NSURL"16@"NSString"24@"NSData"32@"NSURL"40@"<CoreDAVAccountInfoProvider>"48
@"NSData"16@0:8
@"NSArray"16@0:8
B52@0:8^v16^v24B32^B36@44
B52@0:8^v16^v24B32^B36@"DAAccount"44
v24@0:8^v16
B24@0:8@"DAAccount"16
B24@0:8^v16
@56@0:8^v16^B24q32q40@48
B64@0:8^v16^v24@32B40^B44@52B60
^v24@0:8^I16
^v16@0:8
I16@0:8
v20@0:8I16
@"NSNumber"
@"NSData"
@"NSString"
v32@0:8@"NSURLConnection"16@"NSError"24
B24@0:8@"NSURLConnection"16
v32@0:8@"NSURLConnection"16@"NSURLAuthenticationChallenge"24
B32@0:8@"NSURLConnection"16@"NSURLProtectionSpace"24
v24@0:8q16
q16@0:8
B32@0:8^{__CFArray=}16@24
B20@0:8i16
@32@0:8@16^@24
i16@0:8
v20@0:8i16
@"NSMutableData"
@"NSError"
@"NSMutableURLRequest"
uuidToPersonCache
T@"NSMutableDictionary",&,N,V_uuidToPersonCache
startedWithNoContacts
TB,N,V_startedWithNoContacts
v12@?0B8
v8@?0
v24@?0q8@"NSError"16
v12@?0i8
CTagIsSuspect
NeedInitialSync
 (pushed all)
BulkRequests
retry-after
CardDAVSyncRequest
v20@?0q8B16
-[CardDAVAgent _fireWaitingFolderItemSyncRequests]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccessTools_Sim/DataAccess-1575.14/CardDAV/CardDAVAgent.m
<Unknown File>
Attempted to queue a sync request for a folder with no folder id: %@
com.me.
com.apple.contact.
com.icloud.
APSD
PRODUCTION
production
SANDBOX
DEVELOPMENT
development
demo
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
trustHandler
T@"DATrustHandler",R,N
^{__CFDictionary=}24@?0^v8^v16
Person
Group
CardDAVSync
CardDAVInitialUpload
v24@?0@"NSString"8@"NSURL"16
v32@?0@"NSURL"8@"NSString"16^B24
v32@?0@"NSString"8@"CoreDAVErrorItem"16^B24
v32@?0@"NSURL"8@"CoreDAVErrorItem"16^B24
CardDAV
CardDAVSyncABURLS
%@.vcf
CardDAVValidityCheck
mAddressBooksByFolderURL
T@"NSMutableDictionary",&,N,V_mAddressBooksByFolderURL
mAddressBooks
T@"NSMutableSet",&,N,V_mAddressBooks
mSearchAddressBooks
T@"NSMutableSet",&,N,V_mSearchAddressBooks
mPushKeysToFolderURLs
T@"NSMutableDictionary",&,N,V_mPushKeysToFolderURLs
pushTransport
T@"NSDictionary",&,N,V_pushTransport
searchTaskSet
T@"NSMutableSet",&,N,V_searchTaskSet
homeURL
T@"NSURL",&,N,V_homeURL
meCardURL
T@"NSURL",&,N,V_meCardURL
meFolderURL
T@"NSURL",&,N,V_meFolderURL
pushedActionsByTaskGroup
T@"NSMapTable",&,N,V_pushedActionsByTaskGroup
hasOutstandingABChanges
TB,N,V_hasOutstandingABChanges
addressBooks
T@"NSSet",R,N
addressBooksByFolderURL
T@"NSDictionary",R,N
pushKeysToFolderURLs
webdav.beta.facebook.com
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccessTools_Sim/DataAccess-1575.14/CardDAV/CardDAVVCardItem.m
%@ wasn't a CardDAVDaemonAccount
X-ABCROP-RECTANGLE=ABClipRect_1&%d&%d&%d&%d&%@
Please read CardDAVVCardItem.h, and try again
X-ADDRESSBOOKSERVER-MEMBER
urn:uuid:
serverID
T@"NSURL",&,N
dataPayload
T@"NSData",R,N
syncKey
T@"NSString",R,N
childrenOrder
T@"NSArray",R,N
sourceURL
destinationURL
T@"NSData",&,N,V_dataPayload
abRecordType
TI,N,V_abRecordType
T@"NSString",&,N,V_syncKey
T@"NSURL",&,N,V_serverID
clientID
T@"NSNumber",&,N,V_clientID
abRecord
T^v,R,N,V_abRecord
UUIDToPersonCache
T@"NSMutableDictionary",W,N,V_UUIDToPersonCache
CardDAVAccountPrincipalURL
NOT 
v20@?0B8@"NSError"12
com.apple.mobilesync
CardDAVImageFetch
v32@?0@8@16^B24
CardDAViCloudDaemonAccount
fetchingImageDataRefCount
Ti,N,V_fetchingImageDataRefCount
fetchedImageData
T@"NSMutableData",&,N,V_fetchedImageData
fetchImageError
T@"NSError",&,N,V_fetchImageError
hostOverride
T@"NSString",&,N,V_hostOverride
useSSLOverride
Ti,N,V_useSSLOverride
portOverride
Tq,N,V_portOverride
urlRequest
T@"NSMutableURLRequest",&,N,V_urlRequest
Account "%@" is waiting for a password, so we're going to ignore this refresh request
Account "%@" thinks it should fail all tasks.  Doing so
Account doesn't have a principal URL. Running autodiscovery.
__ABDatabaseChangedExternally
Account %@ was successfully autodiscovered, saving account settings
Got a password from the user. Attempting autodiscovery again for "%@"
Account "%@" can't figure out its principalPath, and we couldn't get a password from the user 
We'll refresh if we find a better network connection.
reachability indicates that the network is reachable.  We're going to retry our folder sync.
The CardDAV agent was told to stop monitoring.
Not syncing ab hierarchy, as I'm in the middle of doing that
Asked to sync folder with id %@, but I only know of these folders %@
Predicate %@ matched contact %@ with local id %d
Found a last chance matching using %@
Found no match for contact %@
Clearing Person change index %d
Clearing Group change index %d
adding %@
updating %@
saved %@, server id %@, clientID %@
Holding aside group with server id %@
Yikes: %s %@ %@
Will avoid to block dataaccessd for too long during initial sync - slowing down pushes
Will avoid using too much memory during initial sync - slowing down pushes
Not pushing person with uuid %@ href %@ because the server rejected it
Pushing %d people%s
Not pushing group with uuid %@ href %@ because the server rejected it
started initial sync for %@ with no contacts - won't try to match people
Could not save local container
The server told us to try again after %f seconds.
The server returned a 503, but didn't give us a retry-after header. We'll retry again after %f seconds
We got another 503 error, but we've already backed off for 8 minutes. Giving up and retrying again at our regularly scheduled time
Daemon is ignoring task %@ which failed with status %ld and error %@
_addChange for type %lu, changedItemId %@ changeId %@ addedIds %@ modifiedIds %@ deletedIds %@, changeIdsToClear %@
A preset action for a sync request wanted a modify, but we have no server id.  Dropping the modify of %@
A preset action for a sync request didn't have an associated local event in the db action %@
A preset action for a sync request had change type %lu, which is unsupported.  Dropping that action
Looking at change with id %d type %d externalURL %@
Clearing change index %d
The babysitter put us in timeout, so we're going to fail this sync. %@
Asked to sync folder with id %@, but I have no matching container
My ctag of %@ is suspect, I'll get a new one
external change, folder %@
Blasting whitespace before first time sync
Blasted whitespace before first time sync
%lu changes
returning early, as we have a folder change with no remote changes, and no local changes
DATransaction starting, ID: %@
lock for %@ aborted
CardDAVAgent: locks granted for dataclasses %lx
%s: asked to sync folder request %@, but that has no server id.  Dropping this sync on the floor
Appending a sync request for folder %@
Got AB URLs from our daemon account, going to sync my folders
Yikes: %s %@
network unreachable during folder sync. Waiting for reachability to signal a retry.
Couldn't get a store or database to clear AddressBook changes
Clearing %@ changes in store %d to index %d
Container sync task %@ completed with next cTag %@, next synctoken %@, add/modify count %lu, remove count %lu, error %@
Our ab store went missing mid sync.  Shenanigans!
Found a contact with full path %@, which I can't make into a URL relative to %@
Found a group with full path %@, which I can't make into a URL relative to %@
The babysitter put us in timeout. Failing initial contacts sync. %@
Folder with id %@ supports bulk upload.  Using it
Asked to do a bulk upload to folder id %@, but it doesn't support it.  Failing
bulk upload task group %@ completed with error %@
Bulk upload finished, but I have no store for it!
For uuid %@, I have new href %@, but no local record
For href %@ with no uuid, I can't find my local record
For href %@, I have new etag %@, but no local record
For href %@, I have a 404, but no local record to de-href
Unacceptable DAAction %@.  Not handing it to CoreDAV
Unacceptable CoreDAVAction %@.  Not handing it to DA
The babysitter put us in timeout. Failing this sync. %@
ACCOUNTDCOERROR Didn't find account with identifier %@ in AB db. Creating one
Creating AB store for account %@
container info %@
Ignoring push transports from additional home set %@
Ignoring Me card from additional home set %@
Me card URL is %@
The babysitter put us in timeout. Failing to sync AB URLs. %@
Sending CardDAV search results back to consumer %@.
Query: %@
Results: %@
CardDAV search task %p was cancelled
The CardDAV search returned an error: (%@)
cancelling search query %@
Found a delete of a record with no external id.  Dropping this delete on the floor
Looking for Me card as seen on server. Folder URL: %@ - Me Card URL: %@
Server Me card %@ as seen on server not found locally
Server me card: %@ - stored one: %@
Updating known server me card to %@ in %@
Local me card: %@ - Distant me card: %@
No local me card, will use server provided one
Updating me card from server
Can't set me card: %@
Not updating distant me card
Updating me card on server
Couldn't get address book
Unable to parse the contact with this data %@
Not setting image on person, as it hasn't changed
Not saving image for contact, as image download failed with error %@
Found local members in the group %@ that didn't exist on the server. This group will get pushed to the server
Unknown phone number label %@
Moving along the migration of local store into a CardDAV cocoon
Home set is on a different host. Fetching new AppleAccount properties
Updated account properties are %@
Backing parent AppleAccount was %@saved successfully.
Error fetching AppleAccount properties: %@
Finishing migration of store with id %@ into a pretty CardDAV butterfly
Image URL %@ is invalid for fetching an image
Copying image from URL %@ is aborted because another fetch is in progress
Copying image from URL %@ is starting. Set fetchingImageDataRefCount to 1.
Fetching image at %@
Fetched image at %@, data at %p
Could not get photo data from url %@.  Error %@
Retry copying image. Increment fetchingImageDataRefCount to %d.
Retry AppleIDSession request %@
The server blocked our image data fetch.  Request %@.  Response status code %d
Adding fetched image data for %@ to %p
This code block is probably never invoked because SSL cannection is canceled after this block.
Fail to copy image. Decrement fetchingImageDataRefCount to %d.
Completed copying image. Decrement fetchingImageDataRefCount to %d.
