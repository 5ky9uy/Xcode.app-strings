333333
?333333
MbP?
com.apple.springboardservices.eventobserver.internalSBSEventObserverEventDimmed
v8@?0
SBStatusBarReturnToHearingAidNotification
SBMediaNowPlayingChangedNotification
SBMediaNowPlayingTrackElapsedTimeChangedNotification
HearingAidUIClient
HearingAidUIServer
SBLockScreenManager
sharedInstanceIfExists
isUILocked
shouldShow
result
v24@?0@"NSDictionary"8@"NSError"16
effectiveStatusBarStyle
statusBarStyle
 - [%d, %d, %d, %d]
%s:%d %@
-[AXSBHearingAidDeviceController _updateHearingAidAfterMediaPlayback:]
com.apple.Accessibility
HearingAids
HALoggingQueue
(%d, %d) (%d, %@) - %@
-[AXSBHearingAidDeviceController audioRouteDidChange:]
 - %d, %d
-[AXSBHearingAidDeviceController hearingAidConnectionDidChange:]
MPAVRoutingControllerRouteUserInfoKey
Setting preferred %@ - %@
-[AXSBHearingAidDeviceController userChangedRouteNotification:]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
isShowingHearingAidControl
TB,N,VisShowingHearingAidControl
hearingAidIsConnected
TB,N,V_hearingAidIsConnected
holdingMediaForConnection
TB,N,V_holdingMediaForConnection
holdingPhoneForConnection
TB,N,V_holdingPhoneForConnection
preferredRoute
T@"NSDictionary",&,N,V_preferredRoute
Phone call %@ - [%d, %d, %d] - [%d, %d, %d]
void callStateChanged(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)_block_invoke
v32@?0@"NSDictionary"8Q16^B24
SBReachabilityManager
SBPrototypeController
sharedInstance
SBMainWorkspace
_instanceIfExists
_reachabilityWindow
SBWindow
rootSettings
SBRootSettings
reachabilitySettings
SBReachabilitySettings
yOffsetFactor
mass
stiffness
damping
epsilon
reducedMotionSlideDuration
reachabilityEnabled
_notifyObserversReachabilityModeActive:excludingObserver:
_setKeepAliveTimer
enabled
offset
SBMainDisplaySceneManager
_shouldBreadcrumbApplication:withTransitionContext:
SBWorkspaceApplication
bundleIdentifier
SBWorkspaceApplicationTransitionContext
applicationForLayoutRole:
previousApplicationForLayoutRole:
SBWorkspaceTransitionContext
request
SBMainWorkspaceTransitionRequest
source
isMainWorkspaceTransitionRequest
Accessibility
SBBacklightController
SBUIController
_lockScreenViewController
SHAKE_TO_ENABLE
AXSBServerOrientationChange
activeInterfaceOrientation
reorientHUD
UITableViewTexture.png
ask.sheet.option.VoiceOver.on
activate-arrow
SWIPE_TO_ENABLE
delegate
T@"<AXSBVoiceOverSwipeDetectorDelegate>",N,V_delegate
SBDashBoardScrollGestureController
setScrollingStrategy:
scrollingStrategy
SBOrientationLockChangedNotification
_UIAlertControllerActionView
UIAlertController
UIWindow
SBBulletinWindowController
VolumeControl
SBHUDController
UIApplication
SBScreenshotManager
SBAssistantController
SBControlCenterController
SBNotificationCenterController
SBApplication
buttonIndex
Tq,N,VbuttonIndex
_canDismissWithGestureRecognizer
IsTripleClick
action
UIAlertAction
title
NSString
UIPreferencesBlueCheck
UIPreferencesWhiteCheck
SBTelephonyManager
SBConferenceManager
UIApplicationRotationFollowingWindow
UIApplicationRotationFollowingController
isAssistantVisible
SBMediaController
SBOrientationLockManager
sharedTelephonyManagerCreatingIfNecessary:
SBMainSwitcherViewController
SBSystemGestureManager
isGestureWithTypeAllowed:
mainDisplayManager
SBVoiceControlController
isVoiceControlVisible
handleHomeButtonHeld
updateProcessState:
activateIgnoringTouches
lockUIFromSource:withOptions:
_authenticationStateChanged:
resetLockScreenIdleTimerWithDuration:
shouldTurnOnScreenForBacklightSource:
setBacklightFactor:source:
allowsShowNotificationsGesture
_allowsShowNotificationsGestureFromBanner:
SpringBoard
_notificationDispatcher
SBNCNotificationDispatcher
_bannerDestination
SBNotificationBannerDestination
presentedBanner
NCNotificationViewController
_scrollView
UIScrollView
isPresentingBanner
activateSwitcherNoninteractivelyWithSource:
handleSiriButtonDownEventFromSource:activationEvent:
shouldEnterAssistant
handleSiriButtonUpEventFromSource:
lockOutController
SBFDeviceLockOutController
isLockedOut
presentHUDView:autoDismissWithDelay:
isPlaying
isRingerMuted
pause
play
nowPlayingApplication
isUserLocked
lock
unlock
_frontMostAppOrientation
addActiveOrientationObserver:
applicationOpenURL:
removeActiveOrientationObserver:
_toggleSearch
sharedApplication
_setRotatableViewOrientation:duration:force:
_effectiveVolumeChanged:
_presentVolumeHUDWithMode:volume:
isVisible
lockScreenViewController
SBLockScreenViewController
isMakingEmergencyCall
isPasscodeLockVisible
dismissSwitcherNoninteractively
allowShowTransition
allowShowTransitionSystemGesture
inCall
SBApplicationController
applicationWithPid:
reachabilityModeActive
inFaceTime
SBUIPluginManager
handleButtonUpEventFromSource:
presentAnimated:
applicationWithBundleIdentifier:
_updateReachabilityModeActive:withRequestingObserver:
_activateApplicationFromAccessibility:
unlockUIFromSource:withOptions:
SBLockScreenUnlockRequest
setName:
setSource:
setIntent:
unlockWithRequest:completion:
dashBoardViewController
SBDashBoardViewController
addIdleTimerDisabledAssertionReason:
removeIdleTimerDisabledAssertionReason:
handleAction:fromSender:
SBDashBoardAction
actionWithType:
_scrollGestureController
B16@?0@"AXValidationManager"8
AXSpringBoardServerHelper
AXSB_UIAlertControllerActionViewSafeCategory
AXSB_UIAlertControllerSafeCategory
AXSBServerHelperBulletinWindowController
AXSBUIWindow
AXSBServerHelperSBControlCenterController
AXSBServerVolumeControl
AXSBServerSBHUDController
AXSBServerUIApplication
AXSBScreenshotManagerAccessibility
AXSBAssistantController
AXSBLockScreenManager
AXSBReachabilityManagerAccessibility
AXSBHomeHardwareButtonActions
AXSB_SBApplicationSafeCategory
AXSBMainDisplaySceneManagerAccessibility
AXSBDashBoardScrollGestureControllerAccessibility
v16@?0@"AXValidationManager"8
com.apple.mobile.SubstantialTransition
v16@?0@"NSNotification"8
SBLockScreenViewControllerBase
SBIconController
SBSyncController
SBWallpaperController
Incoming call: %@
Incoming call?: %@
Call status (Before answering call): %lu
Answering call
Call status (After answering call): %lu
Existing calls: %@
Existing call count: %lu
Call status (Before disconnecting call) : %lu
Disconnecting call
Call status (After disconnecting call) : %lu
SBVoiceControlAlertDisplay
SBUseHardwareSwitchAsOrientationLock
prefs:root=General&path=ACCESSIBILITY/AIR_TOUCH_TITLE/CreateCustomGesture
prefs:root=General&path=ACCESSIBILITY/ScannerSwitchTitle/CustomGesturesIdentifier/CreateCustomGesture
screenIsOn
com.apple.WebKit.WebContent
v12@?0C8
v12@?0i8
isAppSwitcherShowing
isInUse
model
allApplications
displayName
isInternalApplication
Trying to unlock with intent %d: unlock request did not respond to %s
Accessibility screen unlock
v12@?0B8
NotImplemented
showSpeechPlaybackControls not implemented
Retried media pause, %@
success
fail
Media Pause command %@
Retried media play, %@
Media Play command %@
incomingCallExists
outgoingCallExists
expected SBUIController to respond to _activateApplicationFromAccessibility: %@
SOS: triggering SOS
_NCNotificationViewControllerView
_accessibilityAllowsShowNotificationsGestureFromThreeFingerSwipe
IsAXActivating
notification.center.showing
AXSBAllowShowNotificationGesture
Show CC: %d
Show CC: No because GA is active
Show CC: UI is locked, generally allowed: %d, ccAllows: %d
allowHideTransition
Show CC: controller allows transition: %d
Show CC: Allow transition: %d %{public}@
Show CC: Presenting CC
Show CC: Dismiss CC
ask.sheet.option.GuidedAccess.on
ask.sheet.option.AssistiveTouch.on
ask.sheet.option.SwitchOver.on
ask.sheet.option.WhiteOnBlack.on
ask.sheet.option.Zoom.on
ask.sheet.option.HearingAidControl.on
ask.sheet.option.reduce.white.point.on
ask.sheet.option.DisplayFiltersColor.on
ask.sheet.option.grayscale.on
ask.sheet.option.touch.accommodations
ask.sheet.option.magnifier.on
Loc Caption Panel
com.apple.purplebuddy
v32@?0@8Q16^B24
q24@?0@8@16
ask.sheet.title
v16@?0@"UIAlertAction"8
ask.sheet.option.cancel
windowContextID
Could not find the class for UIApplicationRotationFollowingWindow. We need this class in order to handle rotation properly (rdar://problem/20780193)
Could not find the class for UIApplicationRotationFollowingController. We need this class in order to handle rotation properly (rdar://problem/20780193)
Finished presenting, but we asked to dismiss the alert during this presentation, so hiding it now.
We somehow had disabled system gestures already, before presenting an alert.  Are there multiple alerts being shown simultaneously?  We don't handle that too well right now...
Tried to dismiss alert controller, but it was being presented.  Waiting till it finishes being presented before dismissing.
Tried to dismiss alert controller, but it was already being dismissed.  Cleaning up but not dismissing for real.
We cleaned up an alert, but system gestures had not been disabled for that alert.  This is unexpected.
_accessibilityObjectWithinProximity
ZoomConflictMessage
ZoomConflictTitle
TripleClickMessage
TripleClickEnableTitle
cancel
enable
USAGE_CONFIRMED_TITLE
Somehow ended up presenting an alert without clearing it first.  Message: %@.  Alert controller: %@
VoiceOver.confirmation.message.format
SWITCH_USAGE_CONFIRMED_MESSAGE
TOUCH_ACCOMMODATIONS_USAGE_CONFIRMED_MESSAGE
broken.home.button.title
broken.home.button.message
enable.zoom.purple.buddy.title
enable.zoom.purple.buddy.message
alertControllerToDismissAfterPresentation
T@"UIAlertController",&,N,V_alertControllerToDismissAfterPresentation
disableSystemGesturesAssertionForAlert
T@"AXAssertion",&,N,V_disableSystemGesturesAssertionForAlert
sideAppManager
T@"AXSpringBoardServerSideAppManager",&,N,V_sideAppManager
zoomConflictController
T@"UIAlertController",&,N,V_zoomConflictController
zoomTripleClickController
T@"UIAlertController",&,N,V_zoomTripleClickController
zoomBuddyUsageController
T@"UIAlertController",&,N,V_zoomBuddyUsageController
switchUsageConfirmedController
T@"UIAlertController",&,N,V_switchUsageConfirmedController
voiceOverUsageConfirmedController
T@"UIAlertController",&,N,V_voiceOverUsageConfirmedController
touchAccommodationsUsageConfirmedController
T@"UIAlertController",&,N,V_touchAccommodationsUsageConfirmedController
tripleClickAlertController
T@"UIAlertController",&,N,V_tripleClickAlertController
brokenHomeButtonAlertController
T@"UIAlertController",&,N,V_brokenHomeButtonAlertController
SBRingerHUDView
SBRotationLockHUDView
AccessibilityDisableIdleTimer
SOSManager
initSOSManager
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.62/AccessibilityUmbrellaFramework/Frameworks/AXSpringBoardServerInstance/Source/AXSpringBoardServerHelper.m
classSOSManager
/System/Library/PrivateFrameworks/SOS.framework/SOS
SOSLibrary
frameworkLibrary
SBHomeHardwareButtonActions
performSinglePressUpActions
AXSpringBoardServerInstanceDidInitializeNotification
SBFaceTimeStateChangedNotification
identifier
T@"NSString",C,N,V_identifier
type
T@"NSString",C,N,V_type
sb-ax-action-queue
payload
Error sending SpringBoard action: %@
Error sending reachability toggled message: %@
B32@?0@"AXIPCClient"8Q16^B24
B32@?0@8Q16^B24
Proximity Changed triggering an audio route change
-[_AXSpringBoardServerInstance _proximityDidChange:]
Speaker
Receiver
HeadsetBT
CarAudioOutput
BluetoothLEOutput
Headset
Headphone
LineOut
Not changing route because hearing aids aren't connected
-[_AXSpringBoardServerInstance _setCallRoute:ifCurrentlyRoutedTo:]
Changing call route to [%d] %@
Changing route to %@
-[_AXSpringBoardServerInstance _setAVCallRoute:]
You shouldn't have called me
_hasFinishedLaunching
SpringBoard is not done booting. Waiting for notification to start AXSB server.
MPAVRoutingControllerDidPickRouteNotification
v20@?0I8@"NSString"12
error starting AX SB IPC server: %@
com.apple.assistivetouch.daemon
com.apple.private.allow-explicit-graphics-priority
com.apple.accessibility.voiceover
com.apple.accessibility.AccessibilityUIServer
com.apple.accessibility.api
com.apple.voiceservices.tts.customvoice
com.apple.CoreRoutine.preferences
com.apple.hearingaids
com.apple.accessibility.AXSBServer.assertions
com.apple.private.kernel.jetsam
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.62/AccessibilityUmbrellaFramework/Frameworks/AXSpringBoardServerInstance/Source/AXSpringBoardServerInstance.m
-[_AXSpringBoardServerInstance acquireAssertionWithType:identifier:clientPort:]
Should have a list of assertion pairs here, not nil!
B32@?0@"AXAssertionIdentifierTypePair"8Q16^B24
SBSheetController
saveScreenshots
applicationForTopSheet
_accessibilitySetSystemGesturesDisabledByAccessibility:
_isSpringBoardShowingAnAlert
screenshotManager
SBUIPluginHost
pluginController
FBScene
FBApplicationProcess
FBProcessManager
FBSceneManager
FBSDisplay
isMainDisplay
FBProcess
state
systemApplicationProcess
FBProcessState
visibility
isForeground
clientProcess
display
settings
enumerateScenesWithBlock:
FBSSceneSettings
frame
{CGRect={CGPoint=dd}{CGSize=dd}}
level
isOccluded
AXSpringBoardServerInstance
-[_AXSpringBoardServerInstance _setupAssertionServerIfNeeded]_block_invoke
AXSpringBoardServer did not understand assertion type: %@
v16@?0@"NSString"8
reenabling dashboard system gestures
disabling dashboard system gestures
orientation
alertType
v16@?0q8
data
screenLocked
passcode
register
Could not connect client for registering SpringBoard action handler: %{public}@
_accessibilityRetrieveIsSiriListening
talking
locked
active
cancelEnabled
visible
record
bundleId
show
string
query
excludeSiri
gesture
assertionServer
T@"_AXAssertionServer",&,N,V_assertionServer
disableNotificationCenterAssertionHeld
TB,N,V_disableNotificationCenterAssertionHeld
disableControlCenterAssertionHeld
TB,N,V_disableControlCenterAssertionHeld
T@"<AXSpringBoardServerInstanceDelegate>",N,V_delegate
com.apple.SpringBoard.builtin.SideSwitcher
UIGestureRecognizer
_normalizedNarrowAppLocation
normalizedSuspendPrimaryLocation
normalizedSuspendSideLocation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2156.62/AccessibilityUmbrellaFramework/Frameworks/AXSpringBoardServerInstance/Source/AXSpringBoardServerSideAppManager.m
-[AXSB_SBSceneResizeSnakebiteGestureRecognizerSafeCategory dividerPosition]
Tried to set a gesture type to fake for the resize gesture recognizer, which we didn't handle: %ld
SBPlatformController
SBMainDisplaySceneLayoutViewController
SBSceneLayoutViewController
SBLayoutState
elementWithRole:
SBSceneManagerCoordinator
mainDisplaySceneManager
SBSceneManager
layoutController
layoutState
SBLayoutElement
_sideAppRevealGestureBeganForActivation:ofSideSwitcher:
_sideAppRevealGestureUpdatedWithDistance:
_sideSwitcherRevealGestureBegan
_sideSwitcherRevealGestureUpdatedWithDistance:
_finishSideAppRevealGestureWithVelocity:distance:forActivation:
_finishSideSwitcherRevealGestureWithVelocity:distance:
interfaceOrientation
sideAppState
setSideAppState:
SBMainDisplayLayoutState
dividerPosition
velocity
absoluteDistanceTraveled
beganTrackingNearDivider
_resizeGestureDidUpdate:
_canResizeToHalfScreen
sideLayoutElementController
SBSideAppState
sideAppIdentifier
presentationWidth
presentationStyle
handleDimmingViewTapForLayoutElementViewController:
hasLayoutAttributes:
_tongueOrPullEnabled
edgePullGestureRecognizer
supportsAllMedusaFeatures
initialState
_resizeGestureRecognizer
SBSceneResizeSnakebiteGestureRecognizer
_sideAppGrabberTongue
SBGrabberTongue
_sideSwitcherGrabberTongue
_layoutGestureManager
SBMainDisplaySceneLayoutGestureManager
_effectiveKeyboardFrame
__CGRect__
AXSpringBoardServerHelperSideAppManager
AXSB_UIGestureRecognizerSafeCategory
AXSB_SBSceneResizeSnakebiteGestureRecognizerSafeCategory
GAXSpringboard
shouldAllowMedusaGestures
Tried to perform invalid side app gesture: %lu.  Allowed gestures: %@
Setting screen contrast to %.0f on display %@
/System/Library/AccessibilityBundles/VisualAlerts.bundle
Audio/Video
com.apple.MobileSMS
%@ said %@
AX: Update SB Server(%d, %lu) {{ Internal Logging }}
Could not read the login session note: %@
Could not property deserialize note as a plist: %@
v24@?0@"NSError"8@"NSData"16
Enabling resting unlock because AST was on and we had never set this before
v16@?0B8B12
AX: Registering for SBAX server launch {{ Internal Logging }}
AccessibilitySettingsLoaderDidUpdateSettings
_restartManager
SBRestartManager
rebootForReason:
AXSpringBoardSettingsLoader
Registering for home button errors
IOProviderClass
IOGeneralInterest
AXBrokenHomeButtonAlreadyRebootedOnce
Setting flag that we already rebooted one time
com.apple.accessibility.sshb.failure.reboot
Home button detected as broken, rebooting gracefully
MESA FAILURE: Home button broke, rebooting
AST already running, no need to enable again
Switch Control already running, no need to enable again
Starting AST in repair incarnation mode
AppleSPUHIDDevice
button-err-state
Found device with button err state %d
Home button error state : %d (check type initial: %d), graceful reboot status? %d
AST Button failure mode: new count: %d
com.apple.accessibility.sshb.failure.assistivetouch.mode
AST is on in repair mode, turning off. No more error state
AST setting failure mode log: %d
Jq+xaurJgFzSwxOfTqtBGw
Did get profile changed notification from MC:%@. Will check to see if GAX should be loaded
whitelistedApps (%{public}@) or appSelfLockIDs (%{public}@) exist. WIll enable GAX (Single App Mode) now
whitelistedApps and appSelfLockIDs both nil.  No need to enable GAX (Single App Mode)
com.apple.accessibility.remote
VOWORK: Registering for remote network update
VOWORK: HIDE ENABLER %@
VOWORK: SWIPE GO AWAY: %@
VOWORK: window is gone
%@/%@
/System/Library/CoreServices/VoiceOverTouch.app
Sounds/FolderClosed.aiff
Sounds/FolderOpened.aiff
VOWORK: start frame: %@
VOWORK: reachability changed, isReachable: %d
VOWORK: force registration again: %d
configuration.apple.com
VOWORK: register for reachability changed %@
com.apple.springboard
com.apple.iapd.videoout.SettingsChanged
Button message handler: %d
AppleSPUHIDDevice property change
DeviceUsagePairs
DeviceUsagePage
DeviceUsage
alloc
init
defaultCenter
liveListenStatusBarActivated:
addObserver:selector:name:object:
statusBarDidChange:
mediaPlaybackDidChange:
pickableAudioRoutesDidChange:
userChangedRouteNotification:
removeObserver:
setPreferredRoute:
dealloc
sharedInstance
startServerWithDelegate:
initWithIdentifier:serviceBundleName:
setDelegate:
isScreenLocked
showHearingAidControl:
safeValueForKey:
safeBoolForKey:
allowHearingAidControlOnLockScreen
server
showControlCenter:
hearingUIClient
numberWithBool:
dictionaryWithObject:forKey:
backgroundAccessQueue
valueForKey:
boolValue
setIsShowingHearingAidControl:
sendUpdatedStatusBarStyle
isShowingHearingAidControl
setLockScreenDimTimerEnabled:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
class
focusedAppProcess
state
sharedApplication
statusBar
currentStyle
_applicationController
applicationWithPid:
unsignedIntValue
effectiveStatusBarStyle
numberWithInteger:
setHearingAidControlIsVisible:
callAudioRoute
mediaAudioRoute
pairedHearingAids
hearingAidReachable
shouldStreamToLeftAid
shouldStreamToRightAid
isPairedWithFakeHearingAids
shouldRequestAudioConnectionForCall:
_updateHearingAidAfterMediaPlayback:
isMediaPlaying
holdingMediaForConnection
stringWithFormat:
UTF8String
pauseMedia
setHoldingMediaForConnection:
requestHearingAidConnectionWithReason:
dictionaryWithObjects:forKeys:count:
resumeMedia
cancelHearingAidConnectionRequest
preferredRoute
holdingPhoneForConnection
setHoldingPhoneForConnection:
setHearingAidIsConnected:
userInfo
avRouteDescription
sharedController
userInterfaceClient:processMessageFromServer:withIdentifier:error:
userInterfaceClient:messageFromServerForWithIdentifierShouldBeProcessedAsynchronously:
userInterfaceClient:processMessageFromServerAsynchronously:withIdentifier:completion:
userInterfaceClient:accessQueueForProcessingMessageWithIdentifier:
userInterfaceClient:messageWithIdentifierRequiresWritingBlock:
userInterfaceClient:willActivateUserInterfaceServiceWithInitializationMessage:
connectionWithServiceWasInterruptedForUserInterfaceClient:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
hearingAidConnectionDidChange:
serverDidDie:
startServer
_lockStateChanged
audioRouteDidChange:
hearingAidIsConnected
_routeChangedTime
_hearingAidIsConnected
_holdingMediaForConnection
_holdingPhoneForConnection
_preferredRoute
hasActiveCall
hasActiveOrPendingCall
hasActiveOrPendingCallOrFaceTime
sharedAVSystemController
attributeForKey:
enumerateObjectsUsingBlock:
safeCategoryTargetClassName
safeCategoryBaseClass
validateClass:
validateClass:hasClassMethod:withFullSignature:
validateClass:hasInstanceVariable:withType:
validateClass:hasInstanceMethod:withFullSignature:
_notifyObserversReachabilityModeActive:excludingObserver:
isScreenLockedWithPasscode:
_axReachabilityEnabled
springBoardServerInstance
shouldSendReachabilityToggled
_axDictionaryOfAnimationProperties
isHidden
numberWithInt:
setObject:forKeyedSubscript:
_axReachabilitySettings
doubleValue
mainScreen
bounds
numberWithDouble:
_axSendReachabilityToggledActionWithPayload:
dictionary
_axAddReachabilityProperty:toDictionary:
_synchronizeDrawingAcrossProcesses
reachabilityToggledWithPayload:synchronizationPort:completion:
_setKeepAliveTimer
_accessibilityPerformValidations:
validateClass:isKindOfClass:
isEqualToString:
applicationForLayoutRole:
previousApplicationForLayoutRole:
safeIntegerForKey:
length
_shouldBreadcrumbApplication:withTransitionContext:
bundleForClass:
localizedStringForKey:value:table:
initWithFrame:
allocWithZone:
setClipsToBounds:
addSubview:
setNumberOfLines:
setFont:
clearColor
setBackgroundColor:
whiteColor
setTextColor:
setTextAlignment:
colorWithRed:green:blue:alpha:
setShadowColor:
setShadowOffset:
setText:
sizeToFit
frame
setFrame:
setAlpha:
orientationChange
reorientHUDIfNeeded:
intValue
beginAnimations:
setAnimationDuration:
setTransform:
commitAnimations
roundedRectBezierPath:withRoundedCorners:withCornerRadius:
setFill
fill
drawRect:
setAutoresizesSubviews:
setMultipleTouchEnabled:
_defaultBackgroundGradient
initWithImage:
setAutoresizingMask:
setUserInteractionEnabled:
kitImageNamed:
colorWithPatternImage:
_swipeDetected:
initWithTarget:action:
setDelaysTouchesEnded:
setCancelsTouchesInView:
setNumberOfTouchesRequired:
setDirection:
addGestureRecognizer:
initWithTitle:
setHidesBackButton:
_cancelVOSwipeActivation:
initWithBarButtonSystemItem:target:action:
setRightBarButtonItem:
pushNavigationItem:
imageNamed:inBundle:
boldSystemFontOfSize:
setLineBreakMode:
setColor:
colorWithAlphaComponent:
setIsAccessibilityElement:
delegate
swipeDetectorDetectedSwipe
swipeDetectorCanceled
touchesBegan:withEvent:
touchesEnded:withEvent:
layoutSubviews
_titleLabel
_bgImageView
_swipeDetected
_delegate
_accessibilitySetSavedScrollingStrategy:
_accessibilityForcedScrollingStrategy
setScrollingStrategy:
_accessibilitySavedScrollingStrategy
_accessibilitySetForcedScrollingStrategy:
integerValue
accessibilitySetSystemDashBoardGesturesEnabled:
_isSecure
actionWithTitle:style:handler:
setButtonIndex:
buttonIndex
initWithStyle:reuseIdentifier:
textLabel
colorWithWhite:alpha:
_topLine
_bottomLine
_accessibilityBoolValueForKey:
_canDismissWithGestureRecognizer
_visibleTripleClickItems
countByEnumeratingWithState:objects:count:
_titleForTripleClickOption:
_valueForTripleClickOption:
viewWithTag:
removeFromSuperview
initWithImage:highlightedImage:
setTag:
image
size
userInterfaceLayoutDirection
setAccessibilityTraits:
setAccessibilityLabel:
setValidationTargetName:
setOverrideProcessName:
setDebugBuild:
installSafeCategory:canInteractWithTargetClass:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
performValidation
_performValidation
addActiveOrientationObserver:
currentQueue
springBoardActionOccurred:
addObserverForName:object:queue:usingBlock:
addObject:
setSideAppManager:
removeActiveOrientationObserver:
_lockScreenManager
mainAccessQueue
_handleTripleClickAskAlert
_handleZoomInBuddyAlert
handleBrokenHomeButtonAlert
_handleVoiceOverUsageConfirmation
_handleZoomConflictAlert:
_handleSwitchUsageConfirmed
_handleTouchAccommodationsUsageConfirmed
_handleZoomTripleClickAfterConflict
_handleDisableBrightnessFiltersAlert:
performAsynchronousWritingBlock:
tripleClickAlertController
_toggleTripleClickDisplay
touchAccommodationsUsageConfirmedController
_dismissAlertController:
setTouchAccommodationsUsageConfirmedController:
switchUsageConfirmedController
setSwitchUsageConfirmedController:
voiceOverUsageConfirmedController
setVoiceOverUsageConfirmedController:
array
incomingCall
axSafelyAddObject:
incomingVideoCall
firstObject
identifier
status
answerCall:
currentCalls
axSafelyAddObjectsFromArray:
currentVideoCalls
count
disconnectCall:withReason:
keyWindow
subviews
lastObject
performSynchronousReadingBlock:
getActiveCategoryVolume:andName:
_updateReachabilityModeActive:withRequestingObserver:
lock
unlock
isScreenLockedWithServerInstance:
initWithString:
applicationOpenURL:
objectForKey:
_backlightController
resetLockScreenIdleTimerWithDuration:
activateSwitcherNoninteractivelyWithSource:
currentDevice
_tapticEngine
actuateFeedback:
handleSiriButtonDownEventFromSource:activationEvent:
handleSiriButtonUpEventFromSource:
_assistantController
dismissAssistantViewIfNecessary:
accessibilityIsNotificationVisible
isNotificationCenterVisibleWithServerInstance:
accessibilityShowNotificationCenter:
accessibilityShowControlCenter:
sideAppManager
isSideSwitcherVisible
clearSideAppState
dismissSwitcherNoninteractively
_accessibilityIsSpeakThisTemporarilyDisabled
_accessibilityIsSystemGestureActive
_accessibilitySystemGesturesDisabledByAccessibility
numberWithUnsignedInteger:
areSystemGesturesDisabledNativelyWithServerInstance:
areSystemGesturesDisabledByAccessibilityWithServerInstance:
installedAppsWithServerInstance:
isPasscodeRequiredOnLockWithServerInstance:
isAppSwitcherVisibleWithServerInstance:
isSiriVisibleWithServerInstance:
isMakingEmergencyCallWithServerInstance:
isPurpleBuddyAppFrontmostWithServerInstance:
isSystemAppFrontmostExcludingSiri:withServerInstance:
isSystemSleepingWithServerInstance:
isSyncingRestoringResettingOrUpdatingWithServerInstance:
applicationWithBundleIdentifier:
_iconController
applicationIconForBundleIdentifier:
isIconVisible:
setObject:forKey:
setName:
setSource:
setIntent:
unlockWithRequest:completion:
_unlockWithIntent:
raise:format:
sharedTelephonyManagerCreatingIfNecessary:
setSiriIsTalking:
allowedMedusaGestures
performMedusaGesture:
_toggleSearch
postNotificationName:object:
serverInstance:appWithIdentifier:
isPasscodeLockVisible
_uiController
_activateApplicationFromAccessibility:
bundleIdentifier
visibility
dashBoardViewController
actionWithType:
handleAction:fromSender:
userEventOccurred
addIdleTimerDisabledAssertionReason:
removeIdleTimerDisabledAssertionReason:
triggerSOS
view
_accessibilityViewIsVisible
contentOffset
isGuidedAccessActive
_accessibilityAllowsShowNotificationsGestureFromThreeFingerSwipe
_accessibilitySetBoolValue:forKey:
presentAnimated:
initWithString:attributes:
dismissAnimated:
_accessibilitySetAllowShowNotificationGestureOverride:
_accessibilityIsUILocked
isGestureWithTypeAllowed:
supportsAccessibilityDisplayFilters
touchAccommodationsEnabled
localizationQACaptionMode
runningAppProcessesWithServerInstance:
isSideSwitcherVisibleWithServerInstance:
hasActiveOrPendingCallOrFaceTimeWithServerInstance:
isBuddyRunning
isPreferencesFrontmost
isMultiTaskingActive
isiCloudPaired
voiceOverActivationWorkaround
isMagnifierVisible
compare:
sortUsingComparator:
_cleanupAlertController:
removeAllObjects
alertControllerWithTitle:message:preferredStyle:
_shouldShowTCOption:
_sortVisibleItems
_handleAlertActionPress:controller:
setTripleClickAlertController:
addAction:
actions
_displayAlertController:
_contextId
numberWithUnsignedInt:
postNotificationName:object:userInfo:
setAutorotates:
setAccessibilityViewIsModal:
setHidden:
setRootViewController:
setWindowLevel:
rootViewController
alertControllerToDismissAfterPresentation
setAlertControllerToDismissAfterPresentation:
presentViewController:animated:completion:
disableSystemGesturesAssertionForAlert
assertionWithType:identifier:
setDisableSystemGesturesAssertionForAlert:
isBeingPresented
isBeingDismissed
dismissViewControllerAnimated:completion:
dismissAlertWithCancel
setZoomConflictController:
setZoomTripleClickController:
objectForKeyedSubscript:
_handleUsageConfirmationDialogWithMessage:storedController:
brokenHomeButtonAlertController
setBrokenHomeButtonAlertController:
zoomBuddyUsageController
setZoomBuddyUsageController:
notifyZoomHomeButtonWasPressed
zoomConflictController
zoomTripleClickController
initWithInteger:
initWithDouble:
initWithObjectsAndKeys:
springBoardActionOccurred:withPayload:
initialize
sharedServerHelper
_awayController
_notificationCenterController
_syncController
_wallpaperController
serverInstance:showAlertType:withHandler:withData:
hideAlertWithServerInstance:
isVoiceControlRunningWithServerInstance:
handleToggleIncomingCallWithServerInstance:
volumeLevelWithServerInstance:
isSideSwitchUsedForOrientationWithServerInstance:
setReachabilityActive:
isRingerMutedWithServerInstance:
isOrientationLockedWithServerInstance:
serverInstance:setOrientationLocked:
openCustomGestureCreationForASTWithServerInstance:
openCustomGestureCreationForSCATWithServerInstance:
isMediaPlayingWithServerInstance:forBundleId:
resetDimTimerWithServerInstance:
openSiriWithServerInstance:
dismissSiriWithServerInstance:
openVoiceControlWithServerInstance:
toggleNotificationCenterWithServerInstance:
isNotificationVisibleWithServerInstance:
serverInstance:showControlCenter:
serverInstance:showNotificationCenter:
isControlCenterVisibleWithServerInstance:
clearSideAppStateWithServerInstance:
openAppSwitcherWithServerInstance:
dismissAppSwitcherWithServerInstance:
simulateEdgePressHaptics:
serverInstance:showSpeechPlaybackControls:
serverInstance:pauseMedia:forBundleId:
hasActiveCallWithServerInstance:
hasActiveOrPendingCallWithServerInstance:
isSpeakThisTemporarilyDisabledWithServerInstance:
serverInstance:springBoardSystemInfoQuery:
wakeUpDeviceIfNecessaryWithServerInstance:
unlockDeviceWithServerInstance:
reachabilityOffsetWithServerInstance:
setSiriIsTalking:withServerInstance:
allowedMedusaGesturesWithServerInstance:
serverInstance:performMedusaGesture:
revealSpotlightWithServerInstance:
setDashBoardSystemGesturesEnabled:withServerInstance:
activateSOSModeWithServerInstance:
isSystemAppShowingAnAlertWithServerInstance:
focusedAppPIDWithServerInstance:
purpleBuddyPIDWithServerInstance:
runningAppPIDsWithServerInstance:
isSettingsAppFrontmostWithServerInstance:
focusedAppsWithServerInstance:
focusedAppProcessWithServerInstance:
forceLoadGAXBundleWithServerInstance:
launchMagnifierAppWithServerInstance:
isMagnifierVisibleWithServerInstance:
userEventOccurredWithServerInstance:
setLockScreenDimTimerEnabled:withServerInstance:
_accessibilityAllowShowNotificationGestureOverride
frontmostAppProcessWithServerInstance:
shouldOverrideInterfaceOrientation
_accessibilityHandleHomeOrLockButtonPress
activeInterfaceOrientationWillChangeToOrientation:
activeInterfaceOrientationDidChangeToOrientation:willAnimateWithDuration:fromOrientation:
_alertHandler
_presentationWindow
_shouldOverrideInterfaceOrientation
_notificationObservers
_alertControllerToDismissAfterPresentation
_disableSystemGesturesAssertionForAlert
_sideAppManager
_zoomConflictController
_zoomTripleClickController
_zoomBuddyUsageController
_switchUsageConfirmedController
_voiceOverUsageConfirmedController
_touchAccommodationsUsageConfirmedController
_tripleClickAlertController
_brokenHomeButtonAlertController
lockUIFromSource:withOptions:
_authenticationStateChanged:
saveScreenshots
activeInterfaceOrientation
alertInterfaceOrientation
interfaceOrientation
_setRotatableViewOrientation:duration:force:
transitionDuration:
_presentWithDuration:completion:
shouldBlockGestureActivation:
allowShowTransition
_allowsShowNotificationsGestureFromBanner:
presentHUDView:autoDismissWithDelay:
floatValue
_effectiveVolumeChanged:
_presentVolumeHUDWithMode:volume:
shouldCancelSiriTouchActivationBlock
activateIgnoringTouches
updateProcessState:
TTYHardwareEnabled
TTYSoftwareEnabled
cancelCallPromptDisplay
performSinglePressUpActions
setIdentifier:
type
setType:
_identifier
_type
copy
initWithKey:payload:
sendSimpleMessage:withError:
currentVideoCall
displayName
axAttributedStringWithString:
setAttribute:forKey:
disableNotificationCenterAssertionHeld
disableControlCenterAssertionHeld
sendSimpleMessage:synchronizationPort:error:
serviceMachPort
indexOfObjectPassingTest:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
_setCallRoute:ifCurrentlyRoutedTo:
displayedCall
sharedAudioSystemController
audioCategory
audioMode
pickableRoutesForCategory:andMode:
pickableRoutesForCategory:
arrayByAddingObjectsFromArray:
hasPrefix:
isEqualToDictionary:
_setAVCallRoute:
setAttribute:forKey:error:
_initServer
removeAllHandlersForTarget:
strongToStrongObjectsMapTable
initWithServiceName:perPidService:
_registerServerAndNotifyClients
_springBoardFinishedLaunching:
_startHearingAidServer:
_proximityDidChange:
removeObserver:name:object:
startServerWithError:
setQueueSize:
_initializeHandlers
setClientInvalidationCallback:
_getApplicationOrientation:
setHandlerWithTarget:selector:forKey:possibleRequiredEntitlements:
_getPid:
_showAlert:
_hideAlert:
_screenLocked:
_isMakingEmergencyCall:
_hasActiveCall:
_hasActiveOrPendingCall:
_hasActiveOrPendingCallOrFaceTime:
_topEventPidOverride:
_takeScreenshot:
_openAppSwitcher:
_dismissAppSwitcher:
_simulateEdgePressHaptics:
_wakeUpDeviceIfNecessary:
_unlockDevice:
_openSiri:
_dismissSiri:
_toggleNotificationCenter:
_isNotificationCenterVisible:
_openVoiceControl:
_getActiveInterfaceOrientation:
_actionHandling:
_isVoiceControlRunning:
_isSiriTalkingOrListening:
_setSiriIsTalking:
_isSystemSleeping:
_volumeLevel:
_isOrientationLocked:
_setOrientationLocked:
_isSideSwitchUsedForOrientation:
_isRingerMuted:
_openCustomGestureCreationForAST:
_openCustomGestureCreationForSCAT:
_cancelGestureActivation:
_toggleHearingControl:
_isPointInAXInspector:
_isMediaPlaying:
_pauseMedia:
_resumeMedia:
_resetDimTimer:
_showControlCenter:
_showNotificationCenter:
_isControlCenterVisible:
_copyStringToPasteboard:
_isSiriVisible:
_isAppSwitcherVisible:
_isSideSwitcherVisible:
_isSyncingRestoringResettingOrUpdating:
_areSystemGesturesDisabledNatively:
_areSystemGesturesDisabledByAccessibility:
_handleSpringBoardInfoQuery:
_handleInstalledApps:
_handleIsInspectorMinimized:
_handleCancelReachabilityTimer:
_handleRevealSpotlight:
_handleLoadGAXBundleForUnmanagedASAM:
setHandlerWithTarget:selector:forKey:
_handleLaunchMagnifierApp:
_handleIsMagnifierVisible:
_setSpeechPlaybackControls:
_isSpeakThisTemporarilyDisabled:
_handleAcquireAssertion:
_handleRelinquishAssertion:
_handleUserEventOccurred:
_handleSetLockScreenDimTimerEnabled:
_activateSOSMode:
_handleIsSystemAppShowingAnAlert:
_handleGetFocusedAppPID:
_handleGetPurpleBuddyPID:
_handleGetRunningAppPIDs:
_handleGetFocusedApps:
_handleIsSystemAppFrontmost:
_handleIsPurpleBuddyAppFrontmost:
_handleIsSettingsAppFrontmost:
_handleIsMultitaskingActive:
_reachabilityOffset:
_reachabilityHandling:
_reachabilityActive:
_handleToggleIncomingCall:
_allowedMedusaGestures:
_performMedusaGesture:
addPossibleRequiredEntitlement:forMessageWithKey:
_setupAssertionServerIfNeeded
assertionServer
addHeldAssertionOfType:byClient:
_assertionClientForPort:
initWithPort:
setClientIdentifier:
setTimeout:
connectWithError:
_relinquishAllAssertionsForClientWithPort:
setPortDeathHandler:
callStackSymbols
relinquishAssertionWithType:identifier:clientPort:
removeHeldAssertionOfType:byClient:
removeObjectForKey:
validateClass:hasProperty:withType:
performValidations:withPreValidationHandler:postValidationHandler:
_accessibilitySetSystemGesturesDisabledByAccessibility:
setAssertionServer:
_setSystemGesturesEnabled:
_accessibilitySetSpeakThisTemporarilyDisabled:
setDisableNotificationCenterAssertionHeld:
setDisableControlCenterAssertionHeld:
_setDashboardSystemGesturesDisabled:
setAssertionWasAcquiredHandler:
setAssertionWasReleasedHandler:
payload
clientPort
sendSimpleMessage:
dictionaryWithObjectsAndKeys:
_hasActionHandlerForClientPort:
_removeActionHandler:
_hasReachabilityHandlerForClientPort:
_removeReachabilityHandler:
_accessibilityIsInspectorMinimized
_accessibilityIsPointInAXInspector:
generalPasteboard
arrayWithObjects:count:
setItems:
unsignedIntegerValue
acquireAssertionWithType:identifier:clientPort:
archivedDataWithRootObject:
springBoardServerInstanceIfExists
registerHandlerForMessageKey:target:selector:entitlements:
_server
_client
_actionHandlers
_reachabilityHandlers
_assertionClients
_currentSpeakerClient
_disableNotificationCenterAssertionHeld
_disableControlCenterAssertionHeld
_assertionServer
__CGRect__
_accessibilityIsFakingGesture
_accessibilityFakeState
numberOfTouches
_accessibilitySetIsFakingGesture:
_accessibilitySetFakeState:
_mainDisplaySceneLayoutViewController
safeDoubleForKey:
_accessibilityFakeGestureType
dividerPosition
absoluteDistanceTraveled
beganTrackingNearDivider
_accessibilitySetFakeGestureType:
velocity
elementWithRole:
window
_addRevealGesturesIfAllowed:
_addResizeGestureRecognizerGesturesIfAllowed:
_mainDisplaySceneManager
setSideAppState:
containsObject:
_revealSideApp
_revealSideSwitcherForGestureType:
_dismissSideSwitcher
_performFakeResizeGestureForGestureType:
_mainDisplaySceneLayoutGestureManager
_dividerPointForSideElementFrame:orientation:
gestureRecognizer:shouldReceiveTouch:
hasLayoutAttributes:
_sideAppRevealGestureBeganForActivation:ofSideSwitcher:
_distanceForSideAppReveal
_sideAppRevealGestureUpdatedWithDistance:
_velocityForHorizontalSwipe:
_finishSideAppRevealGestureWithVelocity:distance:forActivation:
_revealSideAppAsSwitcher:
_sideSwitcherRevealGestureBegan
_sideSwitcherRevealGestureUpdatedWithDistance:
_finishSideSwitcherRevealGestureWithVelocity:distance:
handleDimmingViewTapForLayoutElementViewController:
_resizeGestureDidUpdate:
CGRectValue
_sideElementFrameAdjustingForKeyboard:
_sideOverlayDismissPointForSideElementFrame:orientation:
_setVoiceOverTouchSettings:
speakCorrectionsEnabled
setSpeakCorrectionsEnabled:
serverIfRunning
displays
objectAtIndex:
setContrast:
_checkContrastSetting
detachNewThreadSelector:toTarget:withObject:
cancel
_checkAccessibilityOptionsSetByiTunes
afterDelay:processBlock:
_checkVoiceOverTouchSetByiTunes
_checkZoomTouchSetByiTunes
_checkInvertColorsSetByiTunes
_checkMonoAudioSetByiTunes
_checkSpeakAutofillSetByiTunes
_checkClosedCaptioningSetByitunes
bundleWithPath:
isLoaded
load
speakIncomingNotifications
setObserverFeed:
sectionID
setCategory:withOptions:error:
setActive:error:
title
message
speechUtteranceWithString:
systemLanguageID
quickSpeakSpeakingRateForLanguage:
quickSpeakSpeakingRate
setRate:
speakUtterance:
_updateAXSettings
_updateSpringBoardHelper
sharedManager
propertyListWithData:options:format:error:
readDataForFileAtAccessibilityContainerPath:completion:
_findNoteFromLoginSessionWithCompletion:
_registerForNotifications
_initializeRemoteSettingsListener
_handleGuidedAccessManagedConfigurationDidChange:
bootstrapGuidedAccessIfNeeded
_registerForHomeButtonBreakage
_performValidations
standardUserDefaults
boolForKey:
setBool:forKey:
synchronize
_setRebootedGracefullyOnce
rebootForReason:
_alreadyRebootedGracefullyOnce
_startAssistiveTouchForBrokenHomeButton
brokenHomeButtonCount
setBrokenHomeButtonCount:
_gracefulRebootForBrokenHomeButton
_registerForHomeButtonBreakageNotification
_checkForHomeButtonBreakage:
initWithTargetSerialQueue:
sharedConnection
effectiveWhitelistedAppsAndOptions
autonomousSingleAppModePermittedBundleIDs
updateAvailableSpeechAssets
_registerForSpokenNotes
registerUpdateBlock:forRetrieveSelector:withListener:
_isDeviceAffectedByVOActivationWorkaround
_remoteAccessibilitySettingsChanged:
registerNetworkDefaultsForAppID:
_updateRemoteAccessibilitySettings
_hideVoiceOverEnabler
_playVOActivationSoundEnded
animateWithDuration:animations:completion:
initWithContentRect:
setBecomeKeyOnOrderFront:
setEnabled:
orderFront:
setOpaque:
setContentView:
resourcePath
initFileURLWithPath:isDirectory:
_playVOActivationSoundStarted
_voiceOverEnabled:
_makeVoiceOverVibrateWindow
setBounds:
setCenter:
animateWithDuration:animations:
registerNetworkDefaultsForAppIDs:forceUpdate:
sharedNetworkObserver
removeObserver:forHostname:
_reachabilityChanged:
addObserver:selector:forHostname:
checkScreenContrast
checkAccessibilityOptions
observer:addBulletin:forFeed:playLightsAndSirens:withReply:
observer:addBulletin:forFeed:
observer:modifyBulletin:forFeed:
observer:modifyBulletin:
observer:removeBulletin:forFeed:
observer:removeBulletin:
observer:updateSectionOrderRule:
observer:updateSectionOrder:
observer:updateSectionInfo:
observer:removeSection:
observer:noteSectionParametersChanged:forSectionID:
observer:purgeReferencesToBulletinID:
observer:noteAlertBehaviorOverridesChanged:
observer:noteAlertBehaviorOverrideStateChanged:
observer:noteInvalidatedBulletinIDs:
observer:noteServerConnectionStateChanged:
observer:noteServerReceivedResponseForBulletin:
observer:prepareAttachment:beforeDeliveringBulletin:withCompletionHandler:
observerShouldFetchAttachmentImageBeforeBulletinDelivery:
observerShouldFetchAttachmentSizeBeforeBulletinDelivery:
observer:thumbnailSizeConstraintsForAttachment:bulletin:
observer:thumbnailSizeConstraintsForAttachmentType:
observer:processData:forAttachment:bulletin:completionHandler:
observer:composedImageFromThumbnailData:forAttachment:bulletin:completionHandler:
observer:composedImageSizeForAttachment:bulletin:thumbnailSize:
observer:composedAttachmentImageForType:thumbnailData:key:
observer:composedAttachmentSizeForType:thumbnailWidth:height:key:
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:didCancelSpeechUtterance:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
_showSwipeDetectionEnablerView
_showVibrationVoiceOverEnablerView
_registerReachability
_voiceOverVibrateWindow
_voiceOverActivationCanceler
_managedConfigurationNotificationCoalesceTimer
mutableCopy
%{public}s
%{public}@
AXSBHearingAidDeviceController
AXUIClientDelegate
NSObject
AXHAServerDelegate
AXHeardServerDelegate
__AXSBReachabilityManagerAccessibility_super
SafeCategory
AXSBReachabilityManagerAccessibility
__AXSBMainDisplaySceneManagerAccessibility_super
AXSBMainDisplaySceneManagerAccessibility
AXSBVoiceOverShakeMessage
AXSBVoiceOverSwipeDetectorView
__AXSBDashBoardScrollGestureControllerAccessibility_super
AXSBDashBoardScrollGestureControllerAccessibility
AXSecureWindow
__AXSB_UIAlertControllerActionViewSafeCategory_super
__AXSB_UIAlertControllerSafeCategory_super
__AXSBUIWindow_super
__AXSBServerHelperBulletinWindowController_super
__AXSBServerVolumeControl_super
__AXSBServerSBHUDController_super
__AXSBServerUIApplication_super
__AXSBScreenshotManagerAccessibility_super
__AXSBAssistantController_super
__AXSBLockScreenManager_super
__AXSBServerHelperSBControlCenterController_super
__AXSBServerHelperSBNotificationCenterController_super
__AXSB_SBApplicationSafeCategory_super
AXAlertAction
AXTripleClickTableViewCell
AXSB_UIAlertControllerSafeCategory
AXSB_UIAlertControllerActionViewSafeCategory
AXSpringBoardServerHelper
AXSpringBoardServerInstanceDelegate
AXSBLockScreenManager
AXSBScreenshotManagerAccessibility
AXSBServerUIApplication
AXSBUIWindow
AXSBServerHelperSBNotificationCenterController
AXSBServerHelperSBControlCenterController
AXSBServerHelperBulletinWindowController
AXSBServerSBHUDController
AXSBServerVolumeControl
AXSBAssistantController
AXSB_SBApplicationSafeCategory
__AXSBHomeHardwareButtonActions_super
AXSBHomeHardwareButtonActions
AXAssertionIdentifierTypePair
_AXSpringBoardServerInstance
__AXSpringBoardServerSideAppManager
__AXSB_UIGestureRecognizerSafeCategory_super
AXSB_UIGestureRecognizerSafeCategory
__AXSB_SBSceneResizeSnakebiteGestureRecognizerSafeCategory_super
AXSB_SBSceneResizeSnakebiteGestureRecognizerSafeCategory
AXSpringBoardServerSideAppManager
AXSpringBoardSettingsLoader
AXSBVoiceOverSwipeDetectorDelegate
BBObserverDelegate
AVSpeechSynthesizerDelegate
@16@0:8
@48@0:8@16@24Q32^@40
@"NSDictionary"48@0:8@"AXUIClient"16@"NSDictionary"24Q32^@40
B32@0:8@16Q24
B32@0:8@"AXUIClient"16Q24
v48@0:8@16@24Q32@?40
v48@0:8@"AXUIClient"16@"NSDictionary"24Q32@?<v@?@"NSDictionary"@"NSError">40
@32@0:8@16Q24
@"AXAccessQueue"32@0:8@"AXUIClient"16Q24
v32@0:8@16@24
v32@0:8@"AXUIClient"16@"NSMutableDictionary"24
v24@0:8@16
v24@0:8@"AXUIClient"16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v20@0:8B16
v24@0:8@"AXHeardServer"16
v16@0:8
q16@0:8
B20@0:8B16
@"NSDictionary"
v28@0:8B16@20
B32@0:8@16@24
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UILabel"
@"UIImageView"
@"<AXSBVoiceOverSwipeDetectorDelegate>"
v24@0:8q16
@40@0:8@16q24@?32
@32@0:8q16@24
@"UIView"
v48@0:8@16q24@?32@40
v48@0:8@"_AXSpringBoardServerInstance"16q24@?<v@?q>32@40
v24@0:8@"_AXSpringBoardServerInstance"16
B24@0:8@"_AXSpringBoardServerInstance"16
d24@0:8@16
d24@0:8@"_AXSpringBoardServerInstance"16
v28@0:8@16B24
v28@0:8@"_AXSpringBoardServerInstance"16B24
B32@0:8@"_AXSpringBoardServerInstance"16@"NSString"24
B28@0:8@16B24
B28@0:8@"_AXSpringBoardServerInstance"16B24
v36@0:8@16B24@28
v36@0:8@"_AXSpringBoardServerInstance"16B24@"NSString"28
@"NSDictionary"32@0:8@"_AXSpringBoardServerInstance"16Q24
@32@0:8@16@24
@32@0:8@"_AXSpringBoardServerInstance"16@"NSString"24
@24@0:8@16
@"NSDictionary"24@0:8@"_AXSpringBoardServerInstance"16
v28@0:8B16@"_AXSpringBoardServerInstance"20
@"NSArray"24@0:8@"_AXSpringBoardServerInstance"16
B32@0:8@"_AXSpringBoardServerInstance"16Q24
@"NSNumber"24@0:8@"_AXSpringBoardServerInstance"16
i24@0:8@16
i24@0:8@"_AXSpringBoardServerInstance"16
B28@0:8B16@20
B28@0:8B16@"_AXSpringBoardServerInstance"20
@24@0:8@"_AXSpringBoardServerInstance"16
v20@0:8i16
B20@0:8i16
@20@0:8i16
v32@0:8@16^@24
v40@0:8q16d24q32
@"UIWindow"
@"NSMutableArray"
@"UIAlertController"
@"AXAssertion"
@"AXSpringBoardServerSideAppManager"
v28@0:8i16@20
v36@0:8q16d24B32
v32@0:8d16@?24
v32@0:8@16d24
v24@0:8i16f20
@"NSString"
v32@0:8q16@24
B24@0:8Q16
v36@0:8@16I24@?28
B20@0:8I16
v20@0:8I16
B28@0:8i16@20
v44@0:8i16@20:28@36
@20@0:8I16
v36@0:8@16@24I32
@"AXIPCServer"
@"AXIPCClient"
@"<AXSpringBoardServerInstanceDelegate>"
@"NSMapTable"
@"_AXAssertionServer"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v24@0:8Q16
d16@0:8
d20@0:8B16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGPoint=dd}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
v20@0:8C16
v24@0:8@?16
v52@0:8@16@24Q32B40@?44
v52@0:8@"BBObserver"16@"BBBulletin"24Q32B40@?<v@?B>44
v40@0:8@16@24Q32
v40@0:8@"BBObserver"16@"BBBulletin"24Q32
v32@0:8@"BBObserver"16@"BBBulletin"24
v32@0:8@16q24
v32@0:8@"BBObserver"16q24
v32@0:8@"BBObserver"16@"NSArray"24
v32@0:8@"BBObserver"16@"BBSectionInfo"24
v32@0:8@"BBObserver"16@"NSString"24
v40@0:8@16@24@32
v40@0:8@"BBObserver"16@"BBSectionParameters"24@"NSString"32
v32@0:8@16Q24
v32@0:8@"BBObserver"16Q24
v32@0:8@"BBObserver"16@"NSSet"24
v28@0:8@"BBObserver"16B24
v48@0:8@16@24@32@?40
v48@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32@?<v@?Q>40
B24@0:8@"BBObserver"16
@40@0:8@16@24@32
@"BBThumbnailSizeConstraints"40@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32
@32@0:8@16q24
@"BBThumbnailSizeConstraints"32@0:8@"BBObserver"16q24
v56@0:8@16@24@32@40@?48
v56@0:8@"BBObserver"16@"NSData"24@"BBAttachmentMetadata"32@"BBBulletin"40@?<v@?@"NSData">48
v56@0:8@"BBObserver"16@"NSData"24@"BBAttachmentMetadata"32@"BBBulletin"40@?<v@?@"UIImage">48
{CGSize=dd}56@0:8@16@24@32{CGSize=dd}40
{CGSize=dd}56@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32{CGSize=dd}40
@48@0:8@16q24@32@40
@"UIImage"48@0:8@"BBObserver"16q24@"NSData"32@"NSString"40
{CGSize=dd}48@0:8@16q24f32f36@40
{CGSize=dd}48@0:8@"BBObserver"16q24f32f36@"NSString"40
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@16{_NSRange=QQ}24@40
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
@"AXAccessQueueTimer"
@"AXDispatchTimer"
