DYGLShaderProfilerMobileSupport
DYShaderAnalyzerNextGPU
isRenderBeginWithEvents:type:
isRenderEndWithEvents:type:
isFramebufferFetchWithEvents:type:
initWithDelegate:
deviceInfo
platform
metalPluginForPlatform:
shaderAnalyzer
length
_calculatePerLineCostWithSampleData:binary:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
_calculatePerDrawCallCostWithSampleData:targetIndex:
bytes
setTotalCost:
dictionaryWithCapacity:
setDrawCallCost:
numberWithDouble:
numberWithUnsignedInt:
setObject:forKeyedSubscript:
objectAtIndexedSubscript:
objectForKeyedSubscript:
doubleValue
enumerateKeysAndObjectsUsingBlock:
disassembleBinary:
arrayWithObjects:count:
count
_waitLatencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:
_latencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:
_latencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:forLimiterType:
defaultManager
fileExistsAtPath:
UTF8String
characterSetWithCharactersInString:
invertedSet
stringWithUTF8String:
lastPathComponent
stringByDeletingPathExtension
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
addObject:
numberWithInt:
dataWithJSONObject:options:error:
alloc
initWithData:encoding:
writeToFile:atomically:encoding:error:
setPerFileCost:
_createPerFileCostDictionaryWith:lineOffset:
perFileCost
allValues
setTotalPerLineCost:
setDrawCallPerLineCost:
setSourcePath:
setLineIndex:
setBinaryRangeInfo:
setDisassembledLineInfo:
setOffset:
setDisasmSource:
setIrSource:
setCost:
setCostPercentage:
setOpcodeType:
setOpcodeSubType:
setOpcode:
disassembledLineInfo
setCallStackInfo:
setFunction:
setFile:
setDirectory:
callStackInfo
binaryRangeInfo
setBinaryDisassemblyInfo:
setSourceInfo:
dictionary
_createPerLineCostDictionaryWith:lineOffset:
supportRendererType:
isDisassemblerAvailable
analyzeBinary:uscSamples:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
platformShaderAnalyzer
.cxx_destruct
_platformShaderAnalyzer
dataWithData:
writeToURL:atomically:
path
shaderInstructionInfoFromBinary:withStartOffset:forLength:targetIndex:
respondsToSelector:
countByEnumeratingWithState:objects:count:
diassemblyString
irString
cost
opCodeType
opCodeSubType
opCode
offset
insructionInformationFromBinary:withStartOffset:forLength:targetIndex:
fileExistsAtPath:isDirectory:
removeItemAtURL:error:
c28@0:8^v16I24
c20@0:8i16
c16@0:8
@24@0:8@16
@72@0:8@16@24i32@36@44@52I60@64
@28@0:8@16i24
d28@0:8@16I24
d36@0:8@16I24@28
@28@0:8r^{PerLineCost={vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}d}16I24
@28@0:8r^{PerFileCost={PerLineCost={vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}d}{unordered_map<unsigned int, PerFileCost::PerLineCost, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, PerFileCost::PerLineCost> > >={__hash_table<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::hash<unsigned int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::equal_to<unsigned int>, true> >=f}}}}16I24
@16@0:8
v16@0:8
@"<DYPShaderAnalyzer>"
MbP?
St12length_error
St11logic_error
St9exception
St8bad_cast
NSt3__117bad_function_callE
GlobalLoad
v32@?0@8@"NSNumber"16^c24
GlobalStore
Sample
LocalLoad
LocalStore
Offset
Empty Path
DY_DUMP_SP_INFO
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
/tmp/shaderProfilerResults/shader_cost_%s_%s.txt
SourceFiles
LineData
source
line
cost
percent
%u: %s      %.1f %.2f%%
%u: %s
ShaderRangeInfo
lineIndex
function
filename
fullpath
directory
      -----> %u:  %s : %s
callstackInfos
diassembly
offset
disasm
    %d %s %.1f %.2f%%
    %d %s
----------- Full Binary Disassembly -----------
disasmSource
irSource
costPercentage
opcodeType
opcodeSubType
opcode
binaryDisassemblyInfo
/tmp/shaderProfilerResults/json/shader_cost_%s_%s.json
allDrawCall
perDrawCall
totalCost
perLineCost
__TEXT
__GPU_METADATA
16777235-0
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
