initWithName:
uniqueDescription
UTF8String
invalidate
setInternal:
mark
internal
stringWithFormat:
.cxx_destruct
_internal
categoryWithName:
logCategory
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
logIdentifier
exceptionWithName:reason:userInfo:
init
weakObjectsHashTable
copy
alloc
shortDescription
setDelegate:
currentRunLoop
removeFromRunLoop:forMode:
mainRunLoop
scheduleInRunLoop:forMode:
dealloc
domain
serviceType
descriptionWithPointer:
propertyQueue
allObjects
hashTableWithOptions:
countByEnumeratingWithState:objects:count:
addObject:
removeObject:
clientQueue
isBrowsing
setBrowsing:
setBrowseBlock:
searchForServicesOfType:inDomain:
_stopBrowsingWithError:
stop
notifyDelegateBrowserStoppedWithError:
delegateQueue
delegate
netServiceBrowser:didStopBrowsingWithError:
netServiceBrowser:didAddService:
netServiceBrowser:didRemoveService:
browseBlock
errorFromNetServiceErrorDict:
hmfErrorWithCode:description:reason:suggestion:underlyingError:
initWithNetService:
addNetServiceToCache:
notifyDelegateOfAddedService:
isEqualToString:
hmfErrorWithCode:description:reason:suggestion:
cachedNetServices
removeNetServiceFromCache:
notifyDelegateOfRemovedService:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
initWithDomain:serviceType:
shouldCache
setShouldCache:
startBrowsingWithCompletionHandler:
stopBrowsing
_cachedNetServices
_shouldCache
_browsing
_delegate
_domain
_serviceType
_clientQueue
_delegateQueue
_propertyQueue
_browseBlock
sharedPowerLogger
linkTypeDescription:
reportConnection:linkType:
reportIncomingAdvertisementChange:
reportIncomingIPEvent:
reportIncomingIDSPush:fromToken:
reportIncomingCloudPush:
reportIncomingLoxyMessage:
MACAddressString
performBlockAfterWoWReassertionDelay:
isWoWAsserted
setWoWAsserted:
currentNetworkSSID
initWithWorkQueue:
addressFamily
addressString
_addressFamily
_addressString
stringWithUTF8String:
initWithSocketAddress:
rangeOfString:options:
length
stringByReplacingCharactersInRange:withString:
normalizedHostname:
hostname
initWithHostname:
_hostname
localAddress
initWithDefaultClass:
dictionary
objectForKey:
defaultClass
setObject:forKey:
removeObjectForKey:
classForKey:
setClass:forKey:
_classes
_defaultClass
memoryPressure
_handleMemoryStateChange:
isMonitoring
setMonitoring:
memoryState
setMemoryState:
memoryMonitor:didChangeMemoryState:
start
_monitoring
_memoryState
_memoryPressure
regularExpressionWithPattern:options:error:
matchesInString:options:range:
count
objectAtIndexedSubscript:
numberOfRanges
rangeAtIndex:
substringWithRange:
integerValue
initWithMajorVersion:minorVersion:updateVersion:
updateVersion
majorVersion
minorVersion
versionString
isEqualToVersion:
compare:
decodeIntegerForKey:
encodeInteger:forKey:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
initWithVersionString:
isAtLeastVersion:
isGreaterThanVersion:
_majorVersion
_minorVersion
_updateVersion
initWithMajorVersion:minorVersion:updateVersion:buildVersion:
buildVersion
compare:options:
decodeObjectOfClass:forKey:
encodeObject:forKey:
versionFromOperatingSystemVersion:
operatingSystemVersion
_buildVersion
arrayWithCapacity:
privateDescription
propertyDescription
attributeDescriptions
mainBundle
bundleIdentifier
name
isValid
setValid:
_valid
_name
getUUIDBytes:
initWithNetAddress:
_stop
netAddress
initWithWeakObject:
networkReachabilityRef
handleNetworkReachabilityChange:
currentNetworkFlags
setCurrentNetworkFlags:
setReachable:
networkMonitorIsReachable:
networkMonitorIsUnreachable:
isReachable
reachabilityPath
_reachable
_currentNetworkFlags
_netAddress
_networkReachabilityRef
object
objectHash
_object
_objectHash
allocWithZone:
identifier
qualityOfService
destination
transport
activity
userInfo
headers
messagePayload
responseHandler
setQualityOfService:
setIdentifier:
setName:
setDestination:
setTransport:
setActivity:
setUserInfo:
setHeaders:
setMessagePayload:
setResponseHandler:
_identifier
_qualityOfService
_destination
_transport
_activity
_userInfo
_headers
_messagePayload
_responseHandler
initWithName:destination:payload:
initWithName:qualityOfService:destination:payload:
initWithName:qualityOfService:destination:userInfo:headers:payload:
UUID
__initWithInternalMessage:
UUIDString
initWithInternalMessage:
activityNameWithMessageName:
messageWithName:destination:payload:
messageWithName:qualityOfService:destination:payload:
mutableCopyWithZone:
initWithName:identifier:messagePayload:responseHandler:
allMessageDestinations
messageWithName:messagePayload:
messageWithName:messagePayload:responseHandler:
messageWithName:identifier:messagePayload:
messageWithMessage:messagePayload:
messageWithMessage:messagePayload:responseHandler:
objectForKeyedSubscript:
uuidFromStringForKey:
stringForKey:
numberForKey:
boolForKey:
boolForKey:keyPresent:
dictionaryForKey:
arrayForKey:
dataForKey:
dateForKey:
nullForKey:
timeZoneFromDataForKey:
dateComponentsFromDataForKey:
errorFromDataForKey:
calendarFromDataForKey:
locationFromDataForKey:
predicateFromDataForKey:
arrayOfDateComponentsFromDataForKey:
uuidForKey:
timeZoneForKey:
dateComponentsForKey:
errorForKey:
calendarForKey:
locationForKey:
predicateForKey:
arrayOfDateComponentsForKey:
mutableCopy
setObject:forKeyedSubscript:
setUserInfoValue:forKey:
setHeaderValue:forKey:
localizedStringForKey:value:table:
hmfErrorWithCode:userInfo:
errorWithDomain:code:userInfo:
isHMFError
hmfErrorWithCode:
initWithMessageHandler:token:receiverQueue:
msgHandler:token:receiverQueue:
receiverQueue
setReceiverQueue:
messageHandler
setMessageHandler:
token
setToken:
_receiverQueue
_messageHandler
_token
messageTargetUUID
messageReceiveQueue
workQueue
notificationHandlers
numberWithUnsignedLongLong:
_deregisterForMessage:receiver:token:
allKeys
target
markWithReason:
allValues
activityWithName:parent:block:
sendMessage:completionHandler:
dispatchMessage:target:
messageTransport:didReceiveMessage:
initWithTransport:
registerForMessage:receiver:messageHandler:
deregisterForMessage:receiver:
deregisterReceiver:
dispatchMessage:
setWorkQueue:
setNotificationHandlers:
isRemote
setRemote:
_remote
_workQueue
_notificationHandlers
initWithTarget:
sendMessage:target:responseQueue:responseHandler:completionHandler:
sendMessage:target:
sendMessage:target:responseQueue:responseHandler:
sendMessage:target:andInvokeCompletionHandler:
data
initWithRequest:statusCode:
appendData:
requestRef
bodyData
initWithConnection:requestRef:
responseWithStatusCode:
appendBodyData:
method
headerFields
body
setURL:
setMethod:
setBody:
bodyStream
connection
_requestRef
_bodyStream
_connection
_bodyData
initWithStatusCode:headerFields:body:
initWithMessageRef:
request
response
setValue:forHeaderField:
message
responseRef
setHeaderValue:forHeaderKey:
completionHandler
setCompletionHandler:
_responseRef
_request
_completionHandler
_response
defaultFormatter
privateStringForObjectValue:
stringForObjectValue:
caseInsensitiveCompare:
algorithm
value
initWithAlgorithm:value:
_algorithm
_value
type
netServiceBrowser
netService
notifyDelegateOfUpdatedNetService:
monitor:didUpdateNetService:
notifyDelegateOfReachabilityChange:
monitor:didUpdateReachability:
port
setNetService:
resolveWithTimeout:completionHandler:
_netService
_netServiceBrowser
URLWithString:
scheme
host
isValidBaseURL:
baseURL
__initializeWithOptions:
defaultSessionConfiguration
setHTTPCookieAcceptPolicy:
setHTTPCookieStorage:
setHTTPShouldSetCookies:
setURLCredentialStorage:
setURLCache:
setHTTPShouldUsePipelining:
mainQueue
sessionWithConfiguration:delegate:delegateQueue:
setMaxConcurrentOperationCount:
netServiceMonitor
resolveWithCompletionHandler:
reachabilityMonitor
sharedManager
registerWoWAssertionForObject:
deregisterObject:
absoluteString
session
hostName
addresses
options
baseURLWithScheme:hostAddress:port:
clientDidBecomeReachable:
clientDidBecomeUnreachable:
isCancelled
reachabilityProbeQueue
cancelAllOperations
requestClientReachabilityPingWithRetry:
finish
confirmWithTimeout:completionHandler:
addExecutionBlock:
addOperation:
isPinging
client:didRequestPingWithCompletionHandler:
setPinging:
startDelegatedPingTimer
stopDelegatedPingTimer
delegatedPingTimer
initWithMinimumTimeInterval:maximumTimeInterval:exponentialFactor:options:
setDelegatedPingTimer:
resume
suspend
setActive:
urlRequest
relativePath
URLWithString:relativeToURL:
valueForHTTPHeaderField:
setValue:forHTTPHeaderField:
code
startReachabilityProbe
statusCode
allHeaderFields
initWithRequest:internalResponse:
dataTaskWithRequest:completionHandler:
cancel
getAllTasksWithCompletionHandler:
operations
isActive
allowAnonymousConnection
protectionSpace
serverTrust
credentialForTrust:
timerDidFire:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
initWithBaseURL:options:
initWithNetService:options:
sendRequest:completionHandler:
cancelPendingRequests
setAllowAnonymousConnection:
_pinging
_allowAnonymousConnection
_active
_baseURL
_options
_session
_reachabilityMonitor
_reachabilityProbeQueue
_netServiceMonitor
_delegatedPingTimer
timer
_handleExpiration
isRunning
timeInterval
leeway
distantFuture
_resume
_kick
setRunning:
_suspend
dateWithTimeIntervalSinceNow:
setFireDate:
_fire
date
initWithTimeInterval:options:
fireDate
kick
fire
_timeInterval
_leeway
_running
_fireDate
_timer
isIncreasing
exponentialFactor
maximumTimeInterval
minimumTimeInterval
setTimeInterval:
reset
_increasing
_minimumTimeInterval
_maximumTimeInterval
_exponentialFactor
array
_handleCompletedReceivedRequest:error:
handleRequest:bodyReadStream:eventType:
_stopReadBody:
_sendStatusCode:forRequest:
connection:didReceiveRequest:
dataWithBytes:length:
_sendStatusCode:forRequest:bodyData:
pendingRespones
address
initWithConnectionRef:
open
close
_handleRecievedRequestRef:
sendResponse:
_handleCompletedResponse:error:
pendingRequests
_address
_pendingRequests
_pendingRespones
bytes
initWithUUIDBytes:
_target
defaultCategory
strongToStrongObjectsMapTable
lock
_addCategory:inSubsystem:
_getCategory:
categoryWithName:inSubsystem:
initCategory:inSubsystem:
performBlock:
initialize
loggingCategory
loggingSubsystem
_loggingCategory
_loggingSubsystem
assertionsForActivityAssertions:name:
arrayWithObjects:count:
setSerialNumber:
setModel:
setRegionInfo:
setWifiInterfaceMACAddress:
setProductPlatform:
setProductClass:
setProductVariant:
processInfo
setSoftwareVersion:
setSupportsBLE:
updateName
lowercaseString
containsString:
__initialize
startMonitoringSystemChanges
notificationToken
_notificationToken
timeIntervalSinceReferenceDate
stringByAppendingString:
transaction
creationTime
_transaction
_creationTime
initWithPairingKeyData:
initWithIdentifier:publicKey:privateKey:
publicKey
initWithName:value:
privateKey
initWithName:value:options:formatter:
pairingIdentity
publicPairingIdentity
_publicKey
_privateKey
setClassName:forClass:
setClass:forClassName:
isEqualToData:
load
_data
minusSet:
member:
mergeObject:
shouldMergeObject:
setHeaderFields:
_headerFields
_URL
_method
_body
timeoutInterval
initWithURL:cachePolicy:timeoutInterval:
setHTTPBody:
setHTTPMethod:
setAllHTTPHeaderFields:
initWithInternalRequest:
setTimeoutInterval:
_timeoutInterval
initWithURL:method:body:timeoutInterval:
dataWithCapacity:
appendBytes:length:
uppercaseString
dataUsingEncoding:
numberWithBool:
dictionaryWithObjects:forKeys:count:
unsignedIntegerValue
doubleValue
numberWithDouble:
initWithPort:options:
connectionIdleTimeout
setConnectionIdleTimeout:
watchdogTimeout
setWatchdogTimeout:
connections
_port
_connections
serverDidInvalidate:
server:didOpenConnection:
server:didCloseConnection:
activityWithName:parent:assertions:block:
initWithName:parent:assertions:
initWithName:parent:
markWithFormat:
parent
assertions
startDate
initWithFormat:arguments:
internalAssertions
activityWithName:block:
_lock
_state
_parent
_assertions
_internalAssertions
_startDate
timeIntervalSinceDate:
componentsJoinedByString:
getBytes:range:
MACAddress
SSID
isEqualToNetworkInfo:
isEqualToAddress:
initWithMACAddress:SSID:
_MACAddress
_SSID
_statusCode
notifyNameUpdated:
defaultCenter
postNotificationName:object:userInfo:
systemInfo
model
regionInfo
serialNumber
productPlatform
productClass
productVariant
softwareVersion
supportsBLE
wifiInterfaceMACAddress
_supportsBLE
_model
_serialNumber
_regionInfo
_productPlatform
_productClass
_productVariant
_softwareVersion
_wifiInterfaceMACAddress
takeWoWAssertion
releaseWoWAssertion
deregisterWoWAssertionForObject:
wowAssertion
setWowAssertion:
_wowAssertion
initWithWorkQueue:dataSource:
initWithMACAddressString:
dataSource
currentNetworkDidChangeForDataSource:
propQueue
shouldAssertWoW
setShouldAssertWoW:
setCurrentNetworkSSID:
postNotificationName:object:
dataSource:didChangeWoWState:
dataSource:didChangeLinkAvailability:
_shouldAssertWoW
_currentNetworkSSID
_propQueue
_dataSource
initWithAddressData:
formattedString
initWithAddressString:length:
_formattedString
boolValue
_deregisterForPowerSourceNotifications:
_registerForPowerSourceNotifications
notifyBatteryStateChange:
notifyBatteryLevelChange:
setBatteryLevel:
setBatteryState:
notificationPort
interestNotification
batteryState
batteryLevel
updateBatteryState:
hasBattery
_interestNotification
_hasBattery
_batteryLevel
_batteryState
_notificationPort
initWithDomain:type:name:port:
stopPublishing
setPort:
startPublishingWithCompletionHandler:
stopWithError:
_stopWithError:
server:didStopWithError:
requestHandlers
URLPredicate
evaluateWithObject:
methodPredicate
matchBlock
requestBlock
initWithConnection:
server:shouldAcceptConnection:
addConnection:
openWithCompletionHandler:
removeConnection:
_handleOpenedConnection:
_handleClosedConnection:
_handleReceivedRequest:connection:
connection:didCloseWithError:
initWithServiceType:name:port:options:
startWithCompletionHandler:
registerRequestHandler:
unregisterRequestHandler:
_requestHandlers
_connectionIdleTimeout
hmf_isEmpty
hmf_objectsAreKindOfClass:
removeObjectAtIndex:
hmf_removeFirstObject
objectAtIndex:
hmf_dequeue
addObjectsFromArray:
hmf_maybeDequeue
hmf_enqueue:
hmf_enqueueMultiple:
stringByReplacingOccurrencesOfString:withString:
hasPrefix:
substringFromIndex:
initWithData:
enumerateByteRangesUsingBlock:
stringWithCapacity:
appendFormat:
hmf_hexadecimalStringWithOptions:
hmf_initWithHexadecimalString:options:
hmf_isZeroed
hmf_hexadecimalRepresentation
hmf_isInteger
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
characterSetWithCharactersInString:
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:
hmf_isNumeric
initWithUUIDString:
hmf_isEqualToUUID:
hmf_isEqualToUUIDString:
initWithBase64EncodedString:options:
decodeTimeZone
decodeDateComponents
setWithObject:
deserializeObjectWithData:allowedClasses:
decodeCalendar
setWithArray:
decodeArrayOfDateComponents
mutableDictionaryForKey:
mutableArrayForKey:
mutableSetForKey:
setForKey:
base64EncodedDataForKey:
nsValueForKey:
urlForKey:
zeroUUID
initForReadingFromData:error:
decodeObjectOfClasses:forKey:
finishDecoding
deserializeObjectWithData:allowedClass:frameworkClasses:
initWithLevel:step:factor:
level
factor
step
initWithCapacity:
appendString:
indentWithLevel:step:factor:
indentWithLevel:
indentByFactor:
_level
_step
_factor
string
sortedArrayUsingSelector:
containsObject:
secureDescriptionWithIndent:newLine:blacklistedKeys:
secureDescriptionWithBlacklistKeys:
describeElements:
second
numberWithInteger:
minute
hour
month
localTimeDescription
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
stringFromDate:
dateFromString:
initWithTimeInterval:sinceDate:
currentCalendar
components:fromDate:toDate:options:
components:fromDate:
fileNameDescription
iso8601Description
dateComponents
dateFromFileNameDescription:
timeIntervalDescription:
cancelWithError:
cancelAllOperationsWithError:
initWithTimeout:
lockWithOptions:
willChangeValueForKey:
didChangeValueForKey:
isFinished
isExecuting
isReady
setError:
automaticallyNotifiesObserversForKey:
underlyingQueue
isAsynchronous
setExecuting:
setFinished:
error
timeoutDate
setTimer:
_executing
_finished
_error
_queue
arrayByAddingObject:
executionBlocks
blockOperationWithBlock:
main
_executionBlocks
dictionaryWithCapacity:
keyEnumerator
initWithPlatform:class:variant:softwareVersion:
containsValueForKey:
decodeSoftwareVersionWithCoder:
encodeSoftwareVersion:withCoder:
productInfo
initWithPlatform:class:softwareVersion:
peerAddress
sendResponse:completionHandler:
initWithDomain:type:name:
TXTRecordData
updateTXTRecordWithData:
startMonitoring
stopMonitoring
notifyUpdatedAddresses:
netService:didUpdateAddresses:
isEqualToDictionary:
notifyUpdatedTXTRecord:
removeAllObjects
dictionaryFromTXTRecordData:
setTXTRecord:
removeAllTXTRecordObjects
netService:didUpdateTXTRecord:
firstObject
bestAddress
_reallyResolveWithTimeout:completionHandler:
resolveBlocks
isResolving
setResolving:
resolveWithTimeout:
setHostname:
setAddresses:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
TXTRecord
_type
_addresses
_TXTRecord
_resolving
_hostName
_resolveBlocks
updateTXTRecord
isPublishing
dataFromTXTRecordDictionary:
setTXTRecordData:
setPublishing:
setPublishBlock:
publishWithOptions:
publishBlock
setTXTRecordValue:forKey:
removeTXTRecordValueForKey:
_publishing
_publishBlock
floatValue
isEqualToNumber:
sharedPreferences
preferenceForKey:
capitalizedString
formatter
_formatter
processName
defaultCache
isExists
_exists
defaultManager
URLsForDirectory:inDomains:
URLByAppendingPathComponent:
path
fileExistsAtPath:isDirectory:
fileURLWithPathComponents:
_isValidMethodPrediate:
_isValidURLPredicate:
initWithMethodPredicate:URLPredicate:matchBlock:
setRequestBlock:
_methodPredicate
_URLPredicate
_matchBlock
_requestBlock
deallocationBlock
setDeallocationBlock:
_deallocationBlock
_startObserving
_stopObserving
cachedHash
observedObject
observerKey
initWithObservedObject:
_observedObject
_cachedHash
classRegistry
defaultValues
preferences
preferenceClassForPreferenceKey:
defaultValueForPreferenceKey:
initWithKey:options:defaultValue:
setPreferenceClass:forPreferenceKey:
setDefaultValue:forPreferenceKey:
_preferences
_classRegistry
numberValue
setNumberStyle:
numberFromString:
stringValue
dataValue
setValue:
_key
initWithKey:options:domain:defaultValue:
URLForResource:withExtension:
bundleWithIdentifier:
dictionaryWithContentsOfURL:
initWithLocaleIdentifier:
timeZoneWithAbbreviation:
setTimeZone:
valueForHeaderField:
dateFormatter
setContentLength:
requestWithMethod:url:protocolVersion:
responseWithStatusCode:statusDescription:protocolVersion:
setDate:
contentType
setContentType:
contentLength
_message
unlock
initWithOptions:
_internalOptions
initWithNamespace:data:
subdataWithRange:
%{public}@%{public}@
SubActivity
Identifier = %@, Parent = %@, Name = %@
Activity
Failed to mark
Successfully marked
internal
T@"NSObject<OS_os_transaction>",&,N,V_internal
State
Homed Version
Home Manager
Sync Manager
Home
Room
Zone
Metadata
Characteristic
Service
Pending Invites
Incoming Invites
Outgoing Invites
BulletinNotification
BulletinNotificationGroup
BulletinNotificationGroupServices
BulletinNotificationGroupCameras
Service Group
Accessory
Secondary Accessory
Bridge
Bridged Accessory
Category
Action Set
Trigger
Timer Trigger
Location
Event
Predicate
Recurrence
Execute Once
Execute Session
User
Removed User
Current User
Resident
Accessory Profile
Accessory Transport
Write Action
Keychain
Keychain Item
Mesh
Application Data
HomeNotificationRegistrations
SetupHash
Pending Read Responses
Shared Home Source Version
Shared Home Update Handler
Shared Home Update Session
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
%@ is unavailable
delegateQueue
propertyQueue
[%@] Failed to create internal net service browser
<%@%@, Domain = %@, Service Type = %@>
v8@?0
[%@] The browser is already browsing
[%@] Start browsing for %@%@
[%@] Stopping the browse
[%@] Browser started browsing
[%@] Browse did stop
[%@] Failed to browse
[%@] Failed to browse with error: %@
Operation cancelled.
Failed to search for services.
[%@] Added service: %@
[%@] The browse domain, %@, was removed
The search domain was removed.
[%@] Removed service: %@
clientQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_clientQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_delegateQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_propertyQueue
T@"NSNetServiceBrowser",R,N,V_internal
browsing
TB,N,GisBrowsing,V_browsing
browseBlock
T@?,C,N,V_browseBlock
delegate
T@"<HMFNetServiceBrowserDelegate>",W,V_delegate
domain
T@"NSString",R,C,N,V_domain
serviceType
T@"NSString",R,C,N,V_serviceType
shouldCache
TB,N,V_shouldCache
cachedNetServices
T@"NSArray",R,C,N
HomeKitLinkTypeIP
HomeKitLinkTypeBluetoothLE
HomeKitLinkTypeUnknown
00:00:00:00:00:00
T@"<HMFWiFiManagerDataSourceDelegate>",W,N
wowAsserted
TB,N,GisWoWAsserted,SsetWoWAsserted:
currentNetworkSSID
T@"NSString",R,C,N
MACAddressString
addressFamily
TQ,R,N,V_addressFamily
addressString
T@"NSString",R,C,N,V_addressString
Invalid sockaddr
T^{sockaddr_in=CCS{in_addr=I}[8c]},R,N,V_internal
T^{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I},R,N,V_internal
Invalid hostname
hostname
T@"NSString",R,C,N,V_hostname
[%@] Invalid socket address family: %c
[%@] Invalid hostname
<%@%@, Address = %@>
T@"HMFNetAddressInternal",R,N,V_internal
TQ,R,N
T@"NSObject<OS_dispatch_queue>",R,V_propertyQueue
defaultClass
T#,R,V_defaultClass
memoryPressure
T@"NSObject<OS_dispatch_source>",R,N,V_memoryPressure
monitoring
TB,N,GisMonitoring,V_monitoring
T@"<HMFMemoryMonitorDelegate>",W,V_delegate
memoryState
Tq,R,N,V_memoryState
^(\d+)(\.(\d+))?(\.(\d+))?.*$
Failed to create version string regex with error: %@
Invalid version string: %@
%tu.%tu.%tu
%tu.%tu
HM.major
HM.minor
HM.update
supportsSecureCoding
TB,R
majorVersion
TQ,R,V_majorVersion
minorVersion
TQ,R,V_minorVersion
updateVersion
TQ,R,V_updateVersion
versionString
^(\d+)(\.(\d+))?(\.(\d+))?((;(.*))|(\s*\((.*)\))|(\.(.*)))?.*$
%@ (%@)
%ld.%ld.%ld
HM.build
buildVersion
T@"NSString",R,C,V_buildVersion
shortDescription
privateDescription
propertyDescription
attributeDescriptions
Invalidating during deallocation
%@.%@
Invalidating
Assertion
valid
TB,GisValid,V_valid
name
T@"NSString",R,C,V_name
uniqueDescription
[%@] Failed to create network reachability monitor%@.
for %@
%@ '%@'
localhost
<%@%@>, Address = %@>
networkReachabilityRef
T^{__SCNetworkReachability=},R,N,V_networkReachabilityRef
currentNetworkFlags
TI,N,V_currentNetworkFlags
T@"<HMFNetMonitorDelegate>",W,V_delegate
netAddress
T@"HMFNetAddress",R,C,N,V_netAddress
reachable
TB,R,GisReachable,V_reachable
reachabilityPath
A valid object is required
objectHash
TQ,R,N,V_objectHash
object
T@,R,W,V_object
Message:
Background
Default
Utility
User Initiated
User Interactive
Unknown
Overriding unknown QoS, '%tu', to default
identifier
T@"NSUUID",C,N,V_identifier
T@"NSString",C,N,V_name
qualityOfService
Tq,N,V_qualityOfService
destination
T@"HMFMessageDestination",&,N,V_destination
transport
T@"HMFMessageTransport",W,N,V_transport
activity
T@"HMFActivity",&,N,V_activity
userInfo
T@"NSDictionary",C,N,V_userInfo
headers
T@"NSDictionary",C,N,V_headers
messagePayload
T@"NSDictionary",C,N,V_messagePayload
responseHandler
T@?,C,N,V_responseHandler
%@%@
Name is a required argument
Destination is a required argument
%@ %@
<%@%@, Identifier = %@, Name = %@, QoS = %@, Destination = %@, Activity = %@, 
User Info = %@,
Headers = %@>
T@"HMFMessageInternal",R,N,V_internal
T@"NSUUID",C,N
T@"HMFMessageDestination",&,N
T@"NSDictionary",C,N
T@?,C,N
Tq,R,N
T@"HMFMessageTransport",R,W,N
T@"HMFActivity",R,N
T@"NSDictionary",R,C,N
Invalid userInfo class provided, %@, for message, see <rdar://problem/37677418>
T@"NSUUID",C,D,N
T@"NSString",C,D,N
Tq,D,N
T@"HMFMessageDestination",&,D,N
T@"HMFMessageTransport",W,D,N
T@"HMFActivity",&,D,N
T@"NSDictionary",C,D,N
T@?,C,D,N
HMFErrorDomain
hmfError
TB,R,N,GisHMFError
receiverQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_receiverQueue
messageHandler
T@?,C,N,V_messageHandler
token
T@"NSNumber",&,N,V_token
HMFMessageDispatcher: Receiver is returning nil for targetUUID when registering for message '%@'
Messages are required to have a valid destination, treating this as a fan out message
Calling Message Handler
MessageHandler: %@
Calling Message Handlers
Message %@ was not handled
Invalid paramter.
The disatcher does not have a valid transport
workQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
notificationHandlers
T@"NSMutableDictionary",&,N,V_notificationHandlers
remote
TB,N,GisRemote,V_remote
T@"HMFMessageTransport",R,N,V_transport
Cannot send with response handler if the message already has a response handler
v24@?0@"NSError"8@"NSDictionary"16
v16@?0@"NSError"8
bodyData
T@"NSMutableData",R,N,V_bodyData
requestRef
T^{_CFHTTPServerRequest=},R,N,V_requestRef
bodyStream
T^{__CFReadStream=},R,N,V_bodyStream
connection
T@"_HMFCFHTTPServerConnection",R,W,N,V_connection
Failed to create message
response
T@"_HMFCFHTTPMessage",R,N,V_response
request
T@"_HMFCFHTTPServerRequest",R,N,V_request
responseRef
T^{_CFHTTPServerResponse=},R,N,V_responseRef
completionHandler
T@?,C,N,V_completionHandler
You must override %@ in a subclass
T@"<HMFMessageTransportDelegate>",W,V_delegate
default
DumpState
PreventUserIdleSystemSleep
Failed to create assertion with error: %tu
TI,N,V_identifier
Enabled
Disabled
<redacted>
SHA-1
SHA-224
SHA-256
SHA-384
SHA-512
SHA1
SHA224
SHA256
SHA384
SHA512
, Algorithm = %@, Value = %@
HM.algorithm
HM.value;
algorithm
Tq,R,V_algorithm
value
T@"NSData",R,C,V_value
Failed to start browser with error: %@
NetServiceMonitor
Updated the service: %@
The service, %@, is now reachable
The service, %@, is now unreachable
Monitor did stop with error: %@
Resolving monitored net service
Updating monitored net service: %@
The resolved service, %@, does not match the monitored service: %@
Failed to resolve monitored net servive, %@, with error: %@
v24@?0@"HMFNetAddress"8@"NSError"16
Net service was removed, marking as unreachable: %@
netServiceBrowser
T@"HMFNetServiceBrowser",R,N,V_netServiceBrowser
T@"<_HMFNetServiceMonitorDelegate>",W,V_delegate
netService
T@"HMFNetService",R,C,V_netService
[%@] Scheme is required
[%@] Host address is required
[%@] Port is required
%@://%@:%tu
[%@] Invalid base URL: %@
[%@] Network service is required
reachabilityProbeQueue
Registering for WOW assertion
<%@%@>
HTTPClient
https
http
No available IPv4 address, falling back to '%@', WoW may fail.
Returning baseURLWithScheme: %@, address: %@, port: %tu
Returning baseURL: %@
Notifying delegate of reachablity change to %@
unreachable
Starting confirmation for service: %@
Failed to confirm service, marking the client as unreachable
Confirmed service, requesting application ping
Service is unreachable and a timeout occurred, performing a one-time ping
Client ping in progress, dropping ping request
Requesting client to perform a ping
Delegated ping failed, marking the client as unreachable
Delgated ping succeeded, marking the client as reachable
v12@?0B8
Going to attempt to retry delegated ping later
Failed to resolve server network address with error: %@
Not connected to the server, cannot send request
Override the request URL to: %@
Sending request: %@
Invalid parameter.
Invalid response scheme type
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
Cancelling all pending requests
Canceling task: %@
v16@?0@"NSArray"8
Received notification that the client is now reachable
Received notification that the client is no longer reachable
Updating net service to: %@
Received notificcation that the net service is now reachable
Cancelling pending confirmations due to reachability change
Received notification that the net service was removed
Retrying delegated ping
Session did become invalid with error: %@
Recevied challenge: %@
Received connection challenge, accepting the server's certificate as the client is set to allow anonymous connections
session
T@"NSURLSession",R,N,V_session
active
TB,N,GisActive,V_active
reachabilityMonitor
T@"HMFNetMonitor",R,N,V_reachabilityMonitor
T@"NSOperationQueue",R,N,V_reachabilityProbeQueue
netServiceMonitor
T@"_HMFNetServiceMonitor",R,N,V_netServiceMonitor
delegatedPingTimer
T@"HMFExponentialBackoffTimer",&,N,V_delegatedPingTimer
pinging
TB,N,GisPinging,V_pinging
TB,N,GisReachable,V_reachable
T@"<HMFHTTPClientDelegate>",W,V_delegate
baseURL
T@"NSURL",R,C,N,V_baseURL
T@"HMFNetService",R,C,N,V_netService
options
TQ,R,N,V_options
allowAnonymousConnection
TB,N,V_allowAnonymousConnection
[HMFTimer] Expiration, %f, must be greater than 0
[HMFTimer] Failed to create dispatch_source
Timer
<%@%@, isRunning: %@, interval: %f s, leeway: %f s, repeating: %@>
timer
T@"NSObject<OS_dispatch_source>",R,N,V_timer
running
TB,N,GisRunning,V_running
T@"<HMFTimerDelegate>",W,V_delegate
timeInterval
Td,R,N,V_timeInterval
leeway
TQ,R,N,V_leeway
fireDate
T@"NSDate",R,C,V_fireDate
[HMFExponentialBackoffTimer] The exponential factor cannot be 0
[HMFExponentialBackoffTimer] The minimum time interval, %f, must be greater than 0
[HMFExponentialBackoffTimer] The maximum time interval, %f, must be greater than or equal to the minimum time interval, %f
Td,N
increasing
TB,R,N,GisIncreasing,V_increasing
minimumTimeInterval
Td,R,N,V_minimumTimeInterval
maximumTimeInterval
Td,R,N,V_maximumTimeInterval
exponentialFactor
Tq,R,N,V_exponentialFactor
Failed to create connection, connection is invalid
Failed to open request body stream
Sending a 500 (Internal Server Error) for the request: %@
Sending a 501 (Not Implemented) for the request: %@
Got zero bytes read and no accumulated read bytes
kCFStreamEventUnknown(%ld)
Failed to send response, %@, with error: %@
Sending response: %@
The response is invalid: %@
Completed sending response, %@, with error: %@
CFHTTPServer
pendingRequests
T@"NSMutableArray",R,N,V_pendingRequests
pendingRespones
T@"NSMutableArray",R,N,V_pendingRespones
T^{_CFHTTPServerConnection=},R,N,V_internal
T@"<_HMFCFHTTPServerConnectionDelegate>",W,V_delegate
TB,R,N,GisValid
address
T@"HMFNetAddress",R,N,V_address
Connection invalidated
Connection received error: %@
<%@%@, Target = %@>
target
T@"NSUUID",R,C,N,V_target
com.apple.HomeKit
[%@] 
loggingSubsystem
T@"NSString",R,N,V_loggingSubsystem
T@"NSObject<OS_os_log>",R,N,V_internal
loggingCategory
T@"NSString",R,N,V_loggingCategory
UserAssignedDeviceName
SerialNumber
ModelNumber
RegionInfo
ProductName
DeviceClass
ReleaseType
BuildVersion
bluetooth-le
WifiAddress
v24@?0^{__CFString=}8^{__CFDictionary=}16
Mac OS X
iPhone OS
Watch OS
Apple TVOS
Beta
Carrier
Internal
notificationToken
T^{MGNotificationTokenStruct=},R,V_notificationToken
iPhone
iPod
iPad
AppleTV
Watch
AudioAccessory
Creating transaction '%@'
Completed transaction '%@' - held for %.3fs
Releasing transaction '%@'
transaction
T@"NSObject<OS_os_transaction>",R,N,V_transaction
creationTime
Td,R,N,V_creationTime
The identifier is required
The public key is required
Identifier
Public Key
Private Key
HAP.identifier
HAP.publicKey
HAP.privateKey
T@"NSString",R,C,N,V_identifier
publicKey
T@"HMFPairingKey",R,C,N,V_publicKey
privateKey
T@"HMFPairingKey",R,C,N,V_privateKey
publicPairingIdentity
T@"HMFPairingIdentity",R,C
HAPPairingKey
The pairing key data must be %tu bytes long
Data
HAP.data
data
T@"NSData",R,C,N,V_data
T@"NSURL",C,N,V_URL
method
T@"NSString",C,N,V_method
headerFields
T@"NSDictionary",&,N,V_headerFields
body
T@"NSData",&,N,V_body
<%@%@, URL = %@, Method = %@, 
Headers = %@, 
Body = %@>
timeoutInterval
Td,N,V_timeoutInterval
T@"HMFHTTPRequestInternal",R,N,V_internal
T@"NSURL",R,C,N
T@"NSDictionary",R,N
T@"NSData",R,N
urlRequest
T@"NSURLRequest",R,C,N
Test
Td,D,N
T@"NSData",C,D,N
T@"NSDictionary",&,D,N
Host
com.apple.HMFoundation.%@%@%@.%tu
Failed to create server, server is invalid
Requiring TLS in anonymous mode
Failed to bind server
T^{_CFHTTPServer=},R,N,V_internal
connections
T@"NSMutableArray",R,N,V_connections
T@"<_HMFCFHTTPServerDelegate>",W,V_delegate
port
TQ,R,N,V_port
connectionIdleTimeout
Server invalidated
Server received error: %@
Server did open connection: %@
Server did close connection: %@
Started
Started child activity: %@
%@ %@ (%@)
, Parent = %@, Assertions = %@, Valid = %@, Start = %@
Marked with reason: %@
Marked
Activity
internalAssertions
T@"NSArray",R,N,V_internalAssertions
startDate
T@"NSDate",R,V_startDate
T@"NSUUID",R,C,V_identifier
parent
T@"HMFActivity",R,W,V_parent
assertions
TQ,R,V_assertions
TB,R,GisValid,V_valid
Invalidated after %fs
Stopped child activity: %@
None
Memory
Power
Cannot create HMFWiFiNetworkInfo with MACAddress: %@ and SSID: %@
 MACAddress=%@ SSID=%@
HMF.MACAddress
HMF.SSID
MACAddress
T@"HMFMACAddress",R,C,V_MACAddress
SSID
T@"NSString",R,C,V_SSID
statusCode
Tq,R,N,V_statusCode
T@"NSDictionary",R,N,V_headerFields
T@"NSData",C,N,V_body
<%@%@, Status Code = %ld, 
Headers = %@, 
Body = %@,
Request = %@>
T@"HMFHTTPResponseInternal",R,N,V_internal
T@"HMFHTTPRequest",R,N,V_request
HMFSystemInfoNameUpdatedNotification
HMFSystemInfoNameNotificationKey
Updated system name to '%@'
T@"NSObject<OS_dispatch_queue>",R,N,V_workQueue
T@"NSString",C,V_name
model
T@"NSString",C,V_model
regionInfo
T@"NSString",C,V_regionInfo
serialNumber
T@"NSString",C,V_serialNumber
wifiInterfaceMACAddress
T@"NSString",C,V_wifiInterfaceMACAddress
productPlatform
Tq,V_productPlatform
productClass
Tq,V_productClass
productVariant
Tq,V_productVariant
softwareVersion
T@"HMFSoftwareVersion",C,V_softwareVersion
supportsBLE
TB,V_supportsBLE
HMF.wowAssertionKey
wowAssertion
T@"_HMFNetManagerWoWAssertion",W,V_wowAssertion
HMFWiFiManagerCurrentNetworkDidChangeNotification
propQueue
[HMFWiFiManager] Taking WoW assertion
[HMFWiFiManager] Releasing WoW assertion
[HMFWiFiManager] Re-Enabling WoW
[HMFWiFiManager] WiFi link is %@
Down
[HMFWiFiManager] Current network SSID updated from %@ to %@
sharedManager
T@"HMFWiFiManager",R
T@"NSObject<OS_dispatch_queue>",R,N,V_propQueue
dataSource
T@"<HMFWiFiManagerDataSource>",R,N,V_dataSource
shouldAssertWoW
TB,N,V_shouldAssertWoW
T@"NSString",C,N,V_currentNetworkSSID
Failed to convert string to hardware address %@: %d
Failed to create hardware address with invalid length: %lu
Failed to create hardware address with data of invalid length: %@
 formattedString=%@
HMF.data
length
T@"NSData",R,C,V_data
formattedString
T@"NSString",R,C,V_formattedString
Failed to create MAC address with string of invalid length: %lu
Failed to create MAC address with data of invalid length: %@
HMFPowerManagerBatteryStateDidChangeNotification
HMFPowerManagerBatteryLevelDidChangeNotification
IOPMPowerSource
BatteryInstalled
Battery state changed: %tu
CurrentCapacity
MaxCapacity
Unable to determine the current battery level
ExternalChargeCapable
FullyCharged
Unable to determine the current battery state
IOServiceFirstMatch
notificationPort
T^{IONotificationPort=},R,N,V_notificationPort
interestNotification
TI,R,N,V_interestNotification
batteryState
Tq,V_batteryState
batteryLevel
Tf,V_batteryLevel
hasBattery
TB,R,V_hasBattery
IOGeneralInterest
[%@] A valid name is required for publishing
_http
%@ %tu
<%@%@, Service Type = %@, Name = %@, Port = %tu, Connection Idle Timeout: %f>
HTTPServer
Starting server
Failed to start server
Enabling WoW
Started server on port %tu
Failed to publish net service with error: %@
Stopped server with error: %@
Found a matching request handler, %@, for the request, %@, but there was no request block
Found a matching request handler, %@, for the request, %@
Opening new connection: %@
Failed to open new connection, %@, with error: %@
Closing connection: %@
Server invalidated.
T@"_HMFCFHTTPServer",&,N,V_internal
T@"<HMFHTTPServerDelegate>",W,V_delegate
T@"NSString",R,C,N,V_name
TQ,R,V_port
Td,V_connectionIdleTimeout
T@"HMFMutableNetService",R,N,V_netService
T@"NSArray",R,C,V_connections
requestHandlers
T@"NSArray",R,C
hmf_empty
TB,R,Ghmf_isEmpty
v40@?0r^v8{_NSRange=QQ}16^B32
%02X
hmf_zeroed
TB,R,Ghmf_isZeroed
hmf_hexadecimalRepresentation
T@"NSString",R
hmf_mumeric
TB,R,Ghmf_isNumeric
hmf_integer
TB,R,Ghmf_isInteger
### Keyed unarchiving resulted in exception: %@, %@
### Keyed unarchiving resulted in exception 2: %@, %@
    
step
T@"NSString",R,N,V_step
factor
TQ,R,N,V_factor
level
T@"NSString",R,N,V_level
%@%@{
%@%@ = 
%@%@(
domain: %@, code: %ld, userInfo = %@
%@ s, 
%@ m, 
%@ h, 
%@ d, 
%@ mo, 
en_US_POSIX
YYYY_MM_dd_HH_mm_ss_SSS_ZZZ
MM/dd/yyyy HH:mm:ss
yyyy-MM-dd'T'HH:mm:ssZZZZZ
isExecuting
isFinished
<%@, Identifier=%@>
Operation is already executing
Operation is already executing.
Operation is not ready
Cancelling with error: %@
Cannot set an activity once an operation has started execuring
Cannot set an activity once an activity has been set
Operation
Operation timed out, cancelling
T@"NSUUID",R,V_identifier
T@"HMFTimer",&,V_timer
executing
TB,GisExecuting
finished
TB,GisFinished
underlyingQueue
T@"NSObject<OS_dispatch_queue>",R
T@"HMFActivity",&,V_activity
timeoutDate
T@"NSDate",R,C
error
T@"NSError",R,C
Operation is already executing or has finished.
Executing %tu blocks
executionBlocks
T@"NSArray",R,C,V_executionBlocks
Finishing operation
Operation is already complete, aborting.
Operation is already executing, aborting.
Starting operation
Operation:%@
Executing operation
macOS
watchOS
tvOS
MacBook
Macmini
iMac
MacPro
Customer
Developer
<%@%@, Platform = %@, Class = %@, Variant = %@, Software Version = %@>
HMF.platform
HMF.class
HMF.variant
HMF.softwareVersion
HMF.majorVersion
HMF.minorVersion
HMF.patchVersion
Tq,R,V_productPlatform
Tq,R,V_productClass
Tq,R,V_productVariant
T@"HMFSoftwareVersion",R,N,V_softwareVersion
<%@%@, Address %@>
Failed to open connection
Generic error.
Failed to open connection.
T@"_HMFCFHTTPServerConnection",R,N,V_internal
peerAddress
T@"HMFNetAddress",R,N
T@"<HMFHTTPClientConnectionDelegate>",W,V_delegate
HMFNetServiceDidStartMonitoringInternalNotification
NSNetServiceErrorDomain
<%@%@, Domain = %@, Type = %@, Name = %@, Port = %tu, Addresses = %@>
[%@] Skipping resolving service, already have a cached address: %@
[%@] Starting to resolve service
[%@] Net service will resolve
[%@] Net service resolved
[%@] Net service failed to resolve with error: %@
Not found.
Failed to resolve.
[%@] Net service stopped resolving
Cancelled.
Net service stopped resolving.
[%@] Net service TXT record updated: %@
resolveBlocks
T@"NSMutableArray",R,N,V_resolveBlocks
resolving
TB,N,GisResolving,V_resolving
T@"NSNetService",R,N,V_internal
T@"<HMFNetServiceDelegate>",W,V_delegate
type
T@"NSString",R,C,N,V_type
hostName
T@"HMFNetAddress",R,C,V_hostName
addresses
TXTRecord
[%@] Service domain is required
[%@] Service type is required
[%@] Service name is required
[%@] Invalid TXT record key, %@, error: %@
[%@] Invalid TXT record value, %@, error: %@
[%@] Failed to update TXT record
[%@] The service is already publishing
[%@] Cannot publish without a resolved port
Cannot publish without a resolved port.
[%@] Failed to create internal net service
Failed to create record.
[%@] Start publishing the net service
[%@] Stopping the net service
[%@] Net service will publish
[%@] Published
[%@] Failed to publish
[%@] Failed to publish with error: %@
Failed to publish net service.
[%@] Net service did stop
Net service stopped publishing.
publishing
TB,GisPublishing,V_publishing
publishBlock
T@?,C,N,V_publishBlock
TQ,N,V_port
[%@] Failed to serialize TXT record key with exception: %@
Invalid TXT record key.
[%@] Failed to serialize TXT record value with exception: %@
Invalid TXT record value.
shouldLogPrivateInformation
T@"<NSObject>",R,N,V_value
formatter
T@"NSFormatter",R,C,N,V_formatter
Attempting to privately log legacy attribute description for object: %@
<%@%@%@>
<private>
%@: %@
defaultCache
T@"HMFCache",R
T@"NSURL",R,C,V_URL
exists
TB,R,GisExists,V_exists
Unable to determine preferred cache directory
Library
Caches
[HMFHTTPRequestHandler] Paramter is requred: 'methodPredicate'
[HMFHTTPRequestHandler] Invalid method predicate
[HMFHTTPRequestHandler] Paramter is requred: 'URLPredicate'
[HMFHTTPRequestHandler] Invalid URL predicate
methodPredicate
T@"NSPredicate",R,C,N,V_methodPredicate
URLPredicate
T@"NSPredicate",R,C,N,V_URLPredicate
matchBlock
T@?,R,C,N,V_matchBlock
requestBlock
T@?,C,N,V_requestBlock
HMF.observerKey
deallocationBlock
T@?,C,N,V_deallocationBlock
%@+%@
T@"NSUUID",R,N,V_identifier
cachedHash
TQ,R,V_cachedHash
observedObject
T@,R,W,V_observedObject
HMFPreferenceUpdatedNotification
, Preferences = 
Adding new preference: %@
lock
T@"HMFUnfairLock",R,N,V_lock
classRegistry
T@"HMFClassRegistry",R,V_classRegistry
preferences
Preference
T@"NSString",R,V_key
TQ,R,V_options
T@"<NSObject>",C,V_value
boolValue
TB,R,N
numberValue
T@"NSNumber",R,C,N
stringValue
dataValue
T@"NSData",R,C,N
, Domain = %@, Key = %@, Value = %@
T@"NSString",R,C,V_domain
Preferences
plist
com.apple.HomeKitDaemon
Invalid preference key representation: %@
Value
Unknown preference value: %@
Transfer-Encoding
Content-Length
Content-Type
Date
EEE, d MMM yyyy HH:mm:ss z
en_US
message
T^{__CFHTTPMessage=},R,N,V_message
T@"NSData",C,N
The namespace is required
<[%tu] %@%@%@>
 ... 
HMFMemoryAssertion
HMFDumpCategory
HMFLogging
NSObject
HMFNetServiceBrowser
NSNetServiceBrowserDelegate
HMFPowerLogger
HMFWiFiManagerDataSource
HMFNetAddressInternal
_HMFNetAddressIPV4
_HMFNetAddressIPV6
_HMFNetAddressHostname
HMFNetAddress
HMFClassRegistry
HMFMemoryMonitor
HMFVersion
NSCopying
NSSecureCoding
NSCoding
HMFSoftwareVersion
HMFObject
HMFAssertion
HMFNetMonitor
HMFWeakObject
HMFMessageInternal
HMFMessage
NSMutableCopying
Deprecated
MessagePayload
HMFMutableMessage
HMFError
HMMsgHandler
HMFMessageDispatcher
HMFMessageTransportDelegate
_HMFCFHTTPServerRequest
_HMFCFHTTPServerResponse
HMFMessageTransport
HMFPowerAssertion
HMFPrivateObjectFormatter
HMFPrivateDescriptionFormatter
HMFDigest
_HMFNetServiceMonitor
HMFNetServiceBrowserDelegate
HMFHTTPClient
HMFNetMonitorDelegate
_HMFNetServiceMonitorDelegate
HMFTimerDelegate
NSURLSessionDelegate
HMFTimer
HMFExponentialBackoffTimer
_HMFCFHTTPServerConnection
HMFMessageDestination
HMFLogCategory
HMFSystemInfo_ios
HMFOSTransaction
HMFPairingIdentity
HMFPairingKey
HMFMerging
HMFHTTPRequestInternal
HMFHTTPRequest
HMFMutableHTTPRequest
_HMFCFHTTPServer
HMFActivity
HMFWiFiNetworkInfo
HMFHTTPResponseInternal
HMFHTTPResponse
HMFMutableHTTPResponse
HMFSystemInfo
_HMFNetManagerWoWAssertion
HMFNetManager
HMFWiFiManager
HMFWiFiManagerDataSourceDelegate
HMFHardwareAddress
HMFMACAddress
HMFPowerManager
HMFHTTPServer
_HMFCFHTTPServerDelegate
HMFHTTPClientConnectionDelegate
HMFoundation
HMFoundationArrayAsQueue
Utils
SecureCodingUtils
Logging
HMUIndent
HomeKit
HMFOperation
HMFBlockOperation
HMFProductInfo
HMFHTTPClientConnection
_HMFCFHTTPServerConnectionDelegate
HMFNetService
NSNetServiceDelegate
HMFMutableNetService
HMFAttributeDescription
HMFCache
HMFHTTPRequestHandler
_HMFObjectObserverInternal
HMFObjectObserver
HMFPreferences
HMFPreference
HMFSystemPreference
_HMFCFHTTPMessage
HMFLock
HMFLocking
NSLocking
HMFUnfairLock
__HMFOSUnfairLock
__HMFOSUnfairRecursiveLock
Version5
@24@0:8@16
v16@0:8
@16@0:8
v24@0:8@16
@"NSObject<OS_os_transaction>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"HMFLogCategory"16@0:8
v32@0:8@16@24
v36@0:8@16@24B32
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
@32@0:8@16@24
@20@0:8B16
v20@0:8B16
v24@0:8@?16
@?16@0:8
@"NSHashTable"
@"<HMFNetServiceBrowserDelegate>"
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSNetServiceBrowser"
@24@0:8q16
v32@0:8@16q24
v24@0:8@?<v@?>16
@"<HMFWiFiManagerDataSourceDelegate>"16@0:8
v24@0:8@"<HMFWiFiManagerDataSourceDelegate>"16
@24@0:8r^{sockaddr=CC[14c]}16
^{sockaddr_in=CCS{in_addr=I}[8c]}16@0:8
^{sockaddr_in=CCS{in_addr=I}[8c]}
^{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I}16@0:8
^{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I}
@"HMFNetAddressInternal"
@24@0:8#16
#24@0:8@16
v32@0:8#16@24
@"NSMutableDictionary"
q16@0:8
v24@0:8q16
@"<HMFMemoryMonitorDelegate>"
@"NSObject<OS_dispatch_source>"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16Q24Q32
q24@0:8@16
@40@0:8{?=qqq}16
@48@0:8Q16Q24Q32@40
{?=qqq}16@0:8
@"NSArray"16@0:8
v20@0:8I16
^{__SCNetworkReachability=}16@0:8
I16@0:8
@"<HMFNetMonitorDelegate>"
@"HMFNetAddress"
^{__SCNetworkReachability=}
@"NSUUID"
@"HMFMessageDestination"
@"HMFMessageTransport"
@"HMFActivity"
@"NSDictionary"
@40@0:8@16@24@32
@48@0:8@16q24@32@40
@64@0:8@16q24@32@40@48@56
@"HMFMessageInternal"
@48@0:8@16@24@32@?40
@40@0:8@16@24@?32
B32@0:8@16^B24
@56@0:8q16@24@32@40@48
@48@0:8q16@24@32@40
@32@0:8q16@24
@40@0:8@?16@24@32
@"NSNumber"
v32@0:8@"HMFMessageTransport"16@"HMFMessage"24
v40@0:8@16@24@?32
v40@0:8@16@24@32
v32@0:8@16@?24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@?40@?48
@32@0:8@16^{_CFHTTPServerRequest=}24
^{_CFHTTPServerRequest=}16@0:8
^{__CFReadStream=}16@0:8
^{_CFHTTPServerRequest=}
^{__CFReadStream=}
@"_HMFCFHTTPServerConnection"
@"NSMutableData"
@32@0:8@16q24
^{_CFHTTPServerResponse=}16@0:8
^{_CFHTTPServerResponse=}
@"_HMFCFHTTPServerRequest"
@"_HMFCFHTTPMessage"
@"<HMFMessageTransportDelegate>"
@"NSString"24@0:8@16
@"NSData"
v32@0:8@"HMFNetServiceBrowser"16@"HMFNetService"24
v32@0:8@"HMFNetServiceBrowser"16@"NSError"24
@"HMFNetService"
@"<_HMFNetServiceMonitorDelegate>"
@"HMFNetServiceBrowser"
@40@0:8@16@24Q32
v24@0:8@"HMFNetMonitor"16
v28@0:8@16B24
v32@0:8@"_HMFNetServiceMonitor"16@"HMFNetService"24
v28@0:8@"_HMFNetServiceMonitor"16B24
v24@0:8@"HMFTimer"16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
@32@0:8@16Q24
v24@0:8Q16
B20@0:8B16
@"NSURL"
@"<HMFHTTPClientDelegate>"
@"NSURLSession"
@"HMFNetMonitor"
@"NSOperationQueue"
@"_HMFNetServiceMonitor"
@"HMFExponentialBackoffTimer"
@32@0:8d16Q24
d16@0:8
@"NSDate"
@"<HMFTimerDelegate>"
@48@0:8d16d24q32Q40
v24@0:8d16
@24@0:8^{_CFHTTPServerConnection=}16
v24@0:8^{_CFHTTPServerRequest=}16
v40@0:8@16^{__CFReadStream=}24Q32
v32@0:8q16@24
v40@0:8q16@24@32
v32@0:8^{_CFHTTPServerResponse=}16@24
^{_CFHTTPServerConnection=}16@0:8
@"<_HMFCFHTTPServerConnectionDelegate>"
@"NSMutableArray"
^{_CFHTTPServerConnection=}
@"NSObject<OS_os_log>"
@32@0:8Q16@24
^{MGNotificationTokenStruct=}16@0:8
^{MGNotificationTokenStruct=}
@"HMFPairingKey"
@"HMFHTTPRequestInternal"
@48@0:8@16@24@32d40
@32@0:8Q16Q24
^{_CFHTTPServer=}16@0:8
@"<_HMFCFHTTPServerDelegate>"
^{_CFHTTPServer=}
v48@0:8@16@24Q32@?40
@"NSObject<OS_os_activity>"
@"HMFUnfairLock"
^{os_activity_scope_state_s=[2Q]}
@"NSArray"
@"HMFMACAddress"
@40@0:8q16@24@32
@"HMFHTTPResponseInternal"
@"HMFHTTPRequest"
@"HMFSoftwareVersion"
@"_HMFNetManagerWoWAssertion"
v28@0:8@"<HMFWiFiManagerDataSource>"16B24
v24@0:8@"<HMFWiFiManagerDataSource>"16
@"<HMFWiFiManagerDataSource>"
f16@0:8
v20@0:8f16
^{IONotificationPort=}16@0:8
^{IONotificationPort=}
v24@0:8@"_HMFCFHTTPServer"16
v32@0:8@"_HMFCFHTTPServer"16@"_HMFCFHTTPServerConnection"24
v32@0:8@"HMFHTTPClientConnection"16@"HMFHTTPRequest"24
v32@0:8@"HMFHTTPClientConnection"16@"NSError"24
@48@0:8@16@24Q32Q40
@"_HMFCFHTTPServer"
@"<HMFHTTPServerDelegate>"
@"HMFMutableNetService"
@24@0:8Q16
@40@0:8@16#24@32
@36@0:8@16B24@28
@24@0:8@?16
@24@0:8d16
@"NSError"
@"HMFTimer"
@40@0:8q16q24@32
@48@0:8q16q24q32@40
v32@0:8@"_HMFCFHTTPServerConnection"16@"_HMFCFHTTPServerRequest"24
@"<HMFHTTPClientConnectionDelegate>"
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
v32@0:8d16@?24
@"NSNetService"
@"<HMFNetServiceDelegate>"
@48@0:8@16@24@32Q40
@48@0:8@16@24Q32@40
@"<NSObject>"
@"NSFormatter"
@"NSPredicate"
@"HMFClassRegistry"
@40@0:8@16Q24@32
@48@0:8@16Q24@32@40
@40@0:8@16@24q32
@40@0:8q16@24q32
@24@0:8^{__CFHTTPMessage=}16
^{__CFHTTPMessage=}16@0:8
^{__CFHTTPMessage=}
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
@(#)PROGRAM:HMFoundation  PROJECT:HomeKit-1
