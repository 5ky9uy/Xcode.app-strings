patchFile
failed to read header: %s
bad magic
failed to open control region: %s
failed to open diff region: %s
failed to open extra region: %s
malloc of filebuf failed: %s
malloc of patchbuf failed: %s
failed to read control block
read %zd from orig file, expected %d
read %zd from diff sect, expected %d
wrote %zd to new file, expected %d
read %zd from extra sect, expected %d
patch_file
open(%s): %s
fstat(%s): %s
q36@?0i8^v12Q20q28
q36@?0i8r^v12Q20q28
patch failed
BZOpen
malloc of wrapper failed: %s
fropen failed: %s
BZ2_bzReadOpen failed: %d
BZRead
BZ2_bzRead failed: %d
ApplyAppPatchWorkingDir
PreviousVersion
Patch
Payload
MIApplyAppPatch
Failed to remove extraction root %@ : %@
Extracting previous full version at %@
Failed to extract previous version ipa to %@ : %@
Extracting patch at %@
Failed to extract patch ipa to %@ : %@
Failed to get bundles in previous version extract path %@
Failed to get bundles in patch extract path %@
com.apple.MobileInstallation.BundleURL
No bundle found in patch with identifier %@; bundle must not exist in new app
com.apple.deltainstallcommands.
No patch manifest found in patch for identifier %@; nothing to do.
Failed to create info plist hash from %@
UISupportedDevices
SupportedDevices
Info.plist of patch target %@ contained a SupportedDevices array that contained items other than strings.
Attempting patch update of %@ from %@ (%@) to %@ (%@)
Could not hardlink copy %@ to %@ with manifest %@
Failed to remove patch manifest at %@ : %@
More patches existed than bundles in original full ipa: %@
Failed to create result ipa at %@
_FindBundles
Failed to get items in directory %@: %@
vpnplugin
Failed to get bundle identifier from bundle info %@
_CreateZipFromDirectory
Failed to open %s : %s
containsDotDotPathComponents
TB,R
%d: %@ (%@:%ld %@)
%d: %@
i24@?0r^^{_ftsent}8r^^{_ftsent}16
hardlink_copy_hierarchy
fts_open of %s failed: %s
realpath of '%s' failed at element '%s': %s
Failed to open manifest %s
Failed to read first manifest command
Destination path was too long
Failed to realpath parent of %s
Entity exists at %s but it's not a directory
Command '%c' with path %s matched relpath %s
Failed to make dest path for symlink %s
Entity with mode 0%o exists at symlink location in dest path %s
Copying symlink %s to %s
Failed to copy symlink %s to %s
Failed to make dest path for file %s
Entity does not exist at file location in dest path %s
%s.XXXXXX
failed to make newfile path: %s.XXXXXXX
mktemp failed for %s : %s
patch_file failed for:
chmod failed for %s : %s
rename of %s to %s failed: %s
Skipping link creation for %s
Entity with mode 0%o exists at file location in dest path %s
Hardlinking %s to %s
link of %s to %s failed: %s
copyfile of %s to %s failed: %s
Failed to skip directory %s: %s
Skipping directory %s
Failed to make dest path for directory %s
Non-directory entity with mode 0%o exists at directory location in dest path %s
Making directory %s
mkdir of '%s' failed: %s
Failed to make destination directory "%s" writable: %s
Setting final perms of %s to 0%o
chmod of '%s' failed: %s
Skipping post-traversal directory fixup for entity type 0%o at path %s
FTS in %s returned an error %d for path '%s'
Failed to read next manifest command
Hit EOF so terminating manifest processing
Got done processing bundle but there were still commands remaining in manifest.
open_delta_manifest
Could not open %s: %s
Could not stat %s: %s
Failed to map file at %s; error %s
madvise failed: %s
Failed to allocate command stream object
Invalid manifest file at %s
validate_stream
Failed to read magic
ipaD
Stream had invalid magic: %s
Failed to read version from manifest header
Manifest had invalid version: %ld; expected 1, 2, or 3
Failed to read manifest source version
%s %s
Incoming expected source version string "%s %s" was too long
Got manifest for version "%s", but expected version "%s"
compare of info plist hash failed
expected_infoplisthash is NULL
Failed to read stream
read_string_to_terminator
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileInstallation_Daemon_Sim/MobileInstallation-620.20.2/daemon/delta_update.m
stream->currentStreamOffset < stream->streamLength
validate_supported_devices
Failed to malloc buffer for line
Failed to read supported devices from stream
Existing app lists supported devices but there were none in the manifest
Failed to create patch supported devices string
Failed to split patch supported devices string
Target app had no supported devices but patch did: %@
Expected supported devices had devices that were not in patch: %@
Patch listed devices that were not in expected supported devices: %@
read_next_manifest_command
Failed to read command from manifest
Stream had invalid command: %hhu
Failed to read arg1 of command %hhu
Failed to read arg2 of command %hhu
Invalid touch time "%s" found for path "%s"
Got malformed EOF marker
read_bytes
Expected to read %ld bytes but stream didn't have that many
realpath_parent_no_symlink
Failed to find parent of '%s'
Path was too long
Found symlink at destination path "%s"; this is not allowed.
make_and_check_dest_path
%s/%s
Dest path '%s/%s' was too long
realpath'd destpath '%s' is different from non-realpath '%s'
_copy_symlink
Can't read symlink %s: %s
Can't create symlink %s: %s
MIInstallerErrorDomain
FunctionName
SourceFileLine
PathArgument
-[MIFileManager removeItemAtURL:error:]
nil url passed to -removeItemAtURL:error:
removefile_state_set REMOVEFILE_STATE_ERROR_CALLBACK failed: %s
removefile_state_set REMOVEFILE_STATE_ERROR_CONTEXT failed: %s
removefile of %@ failed: %s
-[MIFileManager createDirectoryAtURL:withIntermediateDirectories:mode:class:error:]
mkpath_np of %@ failed: %s
mkdir of %@ failed: %s
-[MIFileManager _copyItemAtURL:toURL:failIfSrcMissing:error:]
stat of %@ failed: %s
destination %@ exists and is a directory
copyfile of %@ to %@ failed: %s
-[MIFileManager _moveItemAtURL:toURL:failIfSrcMissing:error:]
rename of %@ to %@ failed: %s
/Library/ApplicationBackups
/System/Library/AppPlaceholders
Failed to remove move source after copy at %@ : %@
temp.XXXXXX
-[MIFileManager createTemporaryDirectoryInDirectoryURL:error:]
Failed to create temp dir at path %s
-[MIFileManager _traverseDirectory:error:withBlock:]
fts_open failed for %s with error %s
Error for path %s: %s
fts_close failed for %s with error %s
-[MIFileManager _removeACLAtPath:isDir:error:]
acl_init() failed: %s
Failed to remove ACL
opendir of %s failed: %s
dirfd of %s failed: %s
Failed to set ACL on dir %s: %s
open of %s failed: %s
Failed to set ACL on %s: %s
-[MIFileManager standardizeOwnershipAtURL:toUID:GID:validateSymlinks:removeACLs:error:]_block_invoke
Could not chown %s: %s
LegacyErrorString
InvalidSymlink
invalid symlink at %s
Could not chmod %s: %s
B24@?0^{_ftsent=^{_ftsent}^{_ftsent}^{_ftsent}q^v**iiSSQiSsSSS^{stat}[1c]}8^@16
-[MIFileManager urlsForItemsInDirectoryAtURL:ignoringSymlinks:error:]_block_invoke
Ignoring symlink at %s/%s
Failed to create URL by appending %s to %@
B16@?0^{dirent=QQSSC[1024c]}8
-[MIFileManager urlsForItemsInDirectoryAtURL:ignoringSymlinks:error:]
_IterateDirectory for %s returned %s
-[MIFileManager createSymbolicLinkAtURL:withDestinationURL:error:]
Could not create symlink containing %s at %s: %s
-[MIFileManager destinationOfSymbolicLinkAtURL:error:]
Could not readlink %s : %s
-[MIFileManager itemExistsAtURL:error:]
Failed to determine if %@ exists: %s
lstat of %s failed: %s
-[MIFileManager itemDoesNotExistAtURL:]
-[MIFileManager dataProtectionClassOfItemAtURL:class:error:]
Failed to getclass of file %s: %s
-[MIFileManager setDataProtectionClassOfItemAtURL:toClass:ifPredicate:error:]
Failed to setclass(%d) on file %s: %s
Manifest.plist
iTunesArtwork
iTunesMetadata.plist
GeoJSON
com.apple.mobileinstallation.companion_placeholder
ManifestCaptureFailed
iTunesArtworkCaptureFailed
iTunesMetadataCaptureFailed
GeoJSONCaptureFailed
CompanionPlaceholderCaptureFailed
-[MIFileManager captureStoreDataFromDirectory:toDirectory:doCopy:failureIsFatal:withError:]
Failed to copy %@ to %@
Failed to move %@ to %@
-[MIFileManager _realPathWhatExistsInPath:]
Realpathed %@ ; appending non-existing components %@
-[MIFileManager _realPathForURL:allowNonExistentPathComponents:]
Failed to realpath %s : %s at %s
-[MIFileManager realPathForURL:ifChildOfURL:]
The base path %@ and/or suspicious path %@ were nil
/private/
/private
supiscious path %@ does not contain base path %@ as a prefix
The suspicious path %@ contains '..' paths, which are invalid
Readlink failed: %s
Rejecting %@ -> %s, as absolute symlinks are not allowed
Failed to retrieve depth of %@
Rejecting %@ -> %@, as it is points outside or to the base %@
Failed to retrieve realpath for base path %@ 
Failed to retrieve realpath for suspicious path %@
Rejecting %@ with base %@ because real component counts don't make sense (reals %@ ; %@)
private
Rejecting %@ with base %@ because base component count is greater than child component count (reals %@ ; %@)
Rejecting %@ with base %@ (reals %@ ; %@) because components diverge at %@ != %@
com.apple.installd.placeholder
-[MIFileManager markBundleAsPlaceholder:withError:]
Could't set placeholder EA on "%s": %s
com.apple.installd.installType
-[MIFileManager setInstallType:onBundle:error:]
Could't set installType EA on "%s": %s
-[MIFileManager installTypeForBundle:error:]
Couldn't get installType EA from "%s": %s
getxattr for installType EA on %s returned %zd (expected %zu)
-[MIFileManager setUniqueInstallID:onBundle:error:]
Attempted to set a zero-length or nil install ID on "%s"
com.apple.installd.uniqueInstallID
Could't set unique install ID EA on "%s": %s
-[MIFileManager uniqueInstallIDForBundle:error:]
Attr named %s not present on %@
Couldn't get unique install ID EA from "%s": %s
Got zero length for %s EA on "%s"
getxattr for unique install ID EA on %s returned %zd (expected %zu)
_removefile_error_callback
removefile hit error for %s : %s
removefile hit error for %s but we failed to get the error number
extractPKZip
+[MIBOMWrapper extractZipArchiveAtURL:toURL:withError:]
Could not create copier
PackageExtractionFailed
Could not extract archive
bom_file_error_handler
BOMCopier signaled file error on %s : %s
bom_fatal_error_handler
BOMCopier signaled fatal error: %s
bom_fatal_file_error_handler
BOMCopier signaled fatal file error on %s : %s
copyExtendedAttributes
copyResources
Info.plist
MILoadInfoPlist
Missing Info.plist at %@
Failed to create CFBundle from URL %@
Failed to get filtered Info.plist with keys %@ from bundle %@
Object returned from _CFBundleCreateFilteredInfoPlist was not a dictionary, was type %@
CFBundleGetInfoDictionary failed for bundle %@
CFBundleInfoPlistURL
B24@?0*8Q16
MICreateSHA256Digest
Failed to read %@ : %s
v8@?0
_ReadFile
failed to open %s : %s
failed to stat %s : %s
malloc failed for %ld bytes: %s
read failed for %s : %s
read failed for %s, got %lld bytes
0123456789abcdef
fileURLWithPath:isDirectory:
URLByAppendingPathComponent:isDirectory:
defaultManager
removeItemAtURL:error:
path
extractZipArchiveAtURL:toURL:withError:
count
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
stringByAppendingString:
itemDoesNotExistAtURL:
class
fileSystemRepresentation
UTF8String
removeObjectForKey:
allKeys
urlsForItemsInDirectoryAtURL:ignoringSymlinks:error:
pathExtension
isEqualToString:
setObject:forKeyedSubscript:
arrayWithObjects:count:
setWithArray:
isKindOfClass:
numberWithBool:
numberWithInt:
dictionaryWithObjects:forKeys:count:
stringWithFileSystemRepresentation:length:
pathComponents
containsDotDotPathComponents
stringWithFileSystemRepresentation:
stringWithFormat:
boolValue
allObjects
mutableCopy
alloc
initWithFormat:arguments:
stringWithUTF8String:
errorWithDomain:code:userInfo:
userInfo
domain
code
init
createDirectoryAtURL:withIntermediateDirectories:mode:class:error:
containsString:
_copyItemAtURL:toURL:failIfSrcMissing:error:
_moveItemAtURL:toURL:failIfSrcMissing:error:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
realPathForURL:ifChildOfURL:
_removeACLAtPath:isDir:error:
_traverseDirectory:error:withBlock:
addObject:
copy
fileURLWithPath:
itemExistsAtURL:error:
copyItemIfExistsAtURL:toURL:error:
objectAtIndexedSubscript:
moveItemIfExistsAtURL:toURL:error:
subarrayWithRange:
fileURLWithPathComponents:
itemExistsAtURL:
_realPathForURL:allowNonExistentPathComponents:
pathWithComponents:
_realPathWhatExistsInPath:
hasPrefix:
length
substringFromIndex:
containsObject:
_validateSymlink:withStartingDepth:andEndingDepth:
stringByDeletingLastPathComponent
stringByAppendingPathComponent:
unsignedLongLongValue
numberWithUnsignedLongLong:
createDirectoryAtURL:withIntermediateDirectories:mode:error:
copyItemAtURL:toURL:error:
moveItemAtURL:toURL:error:
createTemporaryDirectoryInDirectoryURL:error:
standardizeOwnershipAtURL:toUID:GID:validateSymlinks:removeACLs:error:
createSymbolicLinkAtURL:withDestinationURL:error:
destinationOfSymbolicLinkAtURL:error:
dataProtectionClassOfItemAtURL:class:error:
setDataProtectionClassOfItemAtURL:toClass:ifPredicate:error:
captureStoreDataFromDirectory:toDirectory:doCopy:failureIsFatal:withError:
markBundleAsPlaceholder:withError:
bundleAtURLIsPlaceholder:
setInstallType:onBundle:error:
installTypeForBundle:error:
setUniqueInstallID:onBundle:error:
uniqueInstallIDForBundle:error:
dictionaryWithDictionary:
beginTransaction
endTransaction
currentThread
name
allocWithZone:
initWithString:
appendString:
reason
callStackSymbols
componentsJoinedByString:
MobileInstallationAdditions
MIFileManager
MIBOMWrapper
B16@0:8
@32@0:8r*16Q24
@24@0:8r*16
@16@0:8
B32@0:8@16^@24
B44@0:8@16B24S28i32^@36
B40@0:8@16B24S28^@32
B44@0:8@16@24B32^@36
B40@0:8@16@24^@32
@32@0:8@16^@24
B40@0:8@16^@24@?32
B36@0:8r*16B24^@28
B48@0:8@16I24I28B32B36^@40
@36@0:8@16B24^@28
B24@0:8@16
B40@0:8@16^i24^@32
B44@0:8@16i24@?28^@36
B48@0:8@16@24B32B36^@40
@24@0:8@16
@28@0:8@16B24
B36@0:8@16I24^I28
@32@0:8@16@24
