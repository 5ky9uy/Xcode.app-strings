init
stringWithUTF8String:
fileURLWithPath:
defaultManager
informationForPlugInWithPid:
objectForKeyedSubscript:
fileURLWithPath:isDirectory:
bundleWithURL:
applicationProxyForIdentifier:placeholder:
localizedName
bundleIdentifier
applicationProxyForIdentifier:
initWithPid:
executablePath
dealloc
initWithMessage:
initWithBundleIdentifier:isWK2Proxy:
displayName
.cxx_destruct
client_type
client
policy_id
is_wk2_proxy
path
bundle
plugin
displayNameBlock
_is_wk2_proxy
_client_type
_pid
_client
_policy_id
_path
_bundle
_plugin
mainRunLoop
bundleURL
UTF8String
numberWithLongLong:
stringWithFormat:
containsObject:
alloc
resetStandardUserDefaults
standardUserDefaults
persistentDomainForName:
objectForKey:
fileSystemRepresentation
mainBundle
isEqualToString:
bundleWithPath:
dictionary
localizedStringForKey:value:table:
setObject:forKeyedSubscript:
numberWithBool:
dictionaryWithObjects:forKeys:count:
numberWithUnsignedInteger:
arrayWithObjects:count:
stringByAppendingString:
longLongValue
unsignedIntValue
entitlements
class
isKindOfClass:
absoluteString
plugInKitPlugins
countByEnumeratingWithState:objects:count:
bundleVersion
isInstalled
queue
removeObjectForKey:
_makeReadyToReceiveMessages
dictionaryWithDictionary:
copy
_sendMessage:handler:
sharedMessageControllerForCurrentPlatform
setIncomingMessageType:handler:
sendMessage:ofType:handler:
messageTypesToHandlers
setMessageTypesToHandlers:
setQueue:
_messageTypesToHandlers
_queue
Refusing client without path (pid %d): (#%d) %{public}s
Refusing extension without containing app bundle (%{public}s)
Refusing client without bundle identifier (%{public}s)
starting as: %s; UID: %d
service handler: %{public}s
client handler: %{public}s
Handling Application Uninstalled event; pruning database.
Notification event: WatchKit applications updated.
Handling SIGTERM...
Handling language change...
failed to find app for bundle ID "%{public}@"
Failed to create %{public}s (%d)
Failed to open database: %{public}s
using database: %{public}s, version: %d
Upgrading database from version %d to %s
Downgrading database from version %d to %s
Failed to remove old database
Failed to post com.apple.tcc.access.changed notification (%u)
%{public}s%s
handling request from PID[%d](%d): %{public}s
Ignoring unknown request (%{public}s)
%s: incoming client: %d, for: %s
Refusing %{public}s for invalid service: %{public}s
Refusing %{public}s with oddly shaped audit token from PID[%d]
PID[%d] is checking access for target PID[%d]
Granting PID[%d] access to %s via entitlement 'com.apple.private.tcc.allow'
Restricted PID[%d] access to %{public}s via entitlement 'com.apple.private.tcc.allow.overridable'
Granting PID[%d] access to %{public}s via entitlement 'com.apple.private.tcc.allow.overridable'
Refusing %{public}s for service %{public}s from invalid client with pid %d
Refusing %{public}s to %{public}s for PID[%d] because we could not get the client string.
Restricted PID[%d] access to %{public}s
Granting PID[%d] access to %{public}s via entitlement 'com.apple.private.tcc.system'
Checking PID[%d] for delegated service: %s: operation: %@
delegated service: %s: sandbox_check_by_audit_token(%d, %@, ...) fails: %d
PID[%d] for delegated service: %s: operation: %@ is %s
PID[%d] for delegated service: %s: operation: %@ is not sandboxed... ignoring com.apple.tcc.delegated-services entitlement
Client %{public}@ is in Default Allow list for service %{public}s
Query for current DB state returns error: %d
Handling access request: %s:%s, default_allow: %d, allowed: %d, prompt_count:%d, update_access: %d, preflight: %s
%{public}s is restricted by Parental Controls.
%{public}s is denied.
Service kTCCServiceAccessibility does not allow prompting; returning preflight_unknown
Service %{public}s does not allow prompting; returning denied.
Delaying prompt for pid %d
Unable to prompt for client without display name (%{public}s)
Prompting for access to %{public}s from %{public}s
Using Localizable-D22 strings table
Refusing %{public}s for service %{public}s and client %{public}s[%d] without %{public}s key
Refusing %{public}s from unprivileged client (pid %d)
Failed to allocate _CFBundleCreateUnique()  client %{public}@
Usage key:%s, client[%d](%s), usage string: '%@'
No usage string found (key:%s) for client[%d] in bundle:%s
Usage key:%s service sdk version: 0x%x;  client[%d](%s) sdk version: 0x%x
Secondary Usage key:%s service sdk version: 0x%x;  client[%d](%s) sdk version: 0x%x: usage string: '%@'
Per-App Default Purpose String key: %{public}@, client[%d](%{public}s) sdk version: 0x%x: usage string: '%{public}@'
rejecting client with unknown executable path
failed to get text offset for %{public}s: (#%d) %{public}s
failed to open "%{public}s": (#%d): %{public}s
failed to read header from %{public}s: %{public}s;  (client.pid: %d, textoff: %llu, expected size: %lu, got: %zd)
spooky magic for %{public}s (%X)
can't allocate buffer for %{public}s: (#%d) %{public}s
failed to read commands from %{public}s: %{public}s
load command truncated for %{public}s
load command broken for %{public}s
version command truncated for %{public}s
Unable to terminate_with_reason() %{public}s[%d]: %d (%{public}s) for service %{public}s
Terminating %{public}s[%d] because access to the %{public}s service changed.
Unable to kill %{public}@ (%d)
Terminating plugin %{public}@ of %{public}@ because access to the %{public}@ service changed.
Missing service value for message: %{public}s
Allocation for serviceName failed for message: %{public}s
VACUUM after DELETE of (%@ : %@)
Handling internal test operation: %s
Generating bogus DB query in %u seconds...
... Generating bogus DB query
Unexpected execution of SQL statement step block when generating a database error.
Unsupported internal test operation: %s
Pruning entry for %s
shutting down tccd...
...exiting when clean.
%{public}s: Allocation failure: _queue %p, _messageTypesToHandlers: %p
%{public}s:  nil message type!
%{public}s: received nil message type!
Platform does not support sending messages!
@"NSString"8@?0
target_token
client_type
client
bundle
path
Ti,R,V_client_type
T@"NSString",R,V_client
policy_id
T@"NSNumber",R,V_policy_id
is_wk2_proxy
TB,R,V_is_wk2_proxy
T@"NSString",R,V_path
T@"NSBundle",R,V_bundle
Ti,R,V_pid
plugin
T@"NSDictionary",R,V_plugin
com.apple.TCC
access
com.apple.tcc.db_queue
com.apple.tccd
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.tccd.gc
com.apple.distnoted.matching
Application Uninstalled
com.apple.notifyd.matching
com.apple.sockpuppet.applications.updated
v8@?0
com.apple.language.changed
v12@?0i8
SELECT
id, uuid, display FROM
policies JOIN active_policy ON (policies.id = active_policy.policy_id) WHERE
active_policy.client_type = ? AND active_policy.client = ?
v16@?0^{sqlite3_stmt=}8
%@:%@
%s/TCC.db
allocation failed
PRAGMA journal_mode=WAL;PRAGMA foreign_keys=ON;
BEGIN
CREATE TABLE IF NOT EXISTS admin (key TEXT PRIMARY KEY NOT NULL, value INTEGER NOT NULL);INSERT OR IGNORE INTO admin VALUES ('version', 9);CREATE TABLE IF NOT EXISTS policies (
INTEGER
NOT NULL PRIMARY KEY, 
bundle_id
TEXT
NOT NULL, 
uuid
TEXT
NOT NULL, 
display
TEXT
NOT NULL, 
UNIQUE (bundle_id, uuid));CREATE TABLE IF NOT EXISTS active_policy (
client
TEXT
NOT NULL, 
client_type
INTEGER
NOT NULL, 
policy_id
INTEGER NOT NULL, 
PRIMARY KEY (client, client_type), 
FOREIGN KEY (policy_id) REFERENCES policies(id) ON DELETE CASCADE ON UPDATE CASCADE);CREATE INDEX IF NOT EXISTS active_policy_id ON active_policy(policy_id);CREATE TABLE IF NOT EXISTS access (
service
TEXT
NOT NULL, 
client
TEXT
NOT NULL, 
client_type
INTEGER
NOT NULL, 
allowed
INTEGER
NOT NULL, 
prompt_count
INTEGER
NOT NULL, 
csreq
BLOB, 
policy_id
INTEGER, 
PRIMARY KEY (service, client, client_type),
FOREIGN KEY (policy_id) REFERENCES policies(id) ON DELETE CASCADE ON UPDATE CASCADE);CREATE TABLE IF NOT EXISTS access_times (
service
TEXT
NOT NULL, 
client
TEXT
NOT NULL, 
client_type
INTEGER
NOT NULL, 
last_used_time
INTEGER
NOT NULL, 
policy_id
INTEGER, 
PRIMARY KEY (service, client, client_type), 
FOREIGN KEY (policy_id) REFERENCES policies(id) ON DELETE CASCADE ON UPDATE CASCADE);CREATE TABLE IF NOT EXISTS access_overrides (
service
TEXT
NOT NULL PRIMARY KEY);
SELECT value FROM admin WHERE key = 'version'
DROP TABLE access; DROP TABLE access_times; DROP TABLE access_overrides;
ALTER TABLE access ADD COLUMN csreq BLOB
DELETE FROM access_times
DELETE FROM access WHERE service = 'kTCCServicePhotos' AND allowed = 0
CREATE TABLE IF NOT EXISTS NEW_access (
service
TEXT
NOT NULL, 
client
TEXT
NOT NULL, 
client_type
INTEGER
NOT NULL, 
allowed
INTEGER
NOT NULL, 
prompt_count
INTEGER
NOT NULL, 
csreq
BLOB, 
policy_id
INTEGER, 
PRIMARY KEY (service, client, client_type),
FOREIGN KEY (policy_id) REFERENCES policies(id) ON DELETE CASCADE ON UPDATE CASCADE)
INSERT INTO NEW_access SELECT service, client, client_type, allowed, prompt_count, csreq, NULL FROM access
DROP TABLE access
ALTER TABLE NEW_access RENAME TO access
CREATE TABLE IF NOT EXISTS NEW_access_times (
service
TEXT
NOT NULL, 
client
TEXT
NOT NULL, 
client_type
INTEGER
NOT NULL, 
last_used_time
INTEGER
NOT NULL, 
policy_id
INTEGER, 
PRIMARY KEY (service, client, client_type), 
FOREIGN KEY (policy_id) REFERENCES policies(id) ON DELETE CASCADE ON UPDATE CASCADE)
INSERT INTO NEW_access_times SELECT service, client, client_type, last_used_time, NULL FROM access_times
DROP TABLE access_times
ALTER TABLE NEW_access_times RENAME TO access_times
DELETE FROM access WHERE ( service = 'kTCCServicePhotos' or service = 'kTCCServicePhotosAdd' )
UPDATE admin SET value = 9 WHERE key = 'version'
COMMIT
HOME
%s/%s
Library/TCC
com.apple.tcc.access.changed
database error: %s (%d)
 aborting...
function
TCCAccessRequest
TCCAccessCopyInformation
TCCAccessCopyInformationForBundle
TCCAccessCopyBundleIdentifiersForService
TCCAccessCopyBundleIdentifiersDisabledForService
TCCAccessSetInternal
TCCAccessSetOverride
TCCAccessGetOverride
TCCAccessResetInternal
TCCAccessDeclarePolicy
TCCAccessSelectPolicyForExtensionWithIdentifier
TCCAccessResetPoliciesExcept
TCCTestInternal
handle_TCCAccessRequest
service
/System/Library/PrivateFrameworks/TCC.framework
unrestricted-CheckAuditToken
com.apple.private.tcc.allow
result
SELECT NULL FROM access_overrides WHERE service = ?
com.apple.private.tcc.allow.overridable
restricted
com.apple.private.tcc.system
com.apple.tcc.delegated-services
sandboxOperationForDelegation
allowed
denied
do_not_cache
default-allow
paranoid
default-allow-whitelist
SELECT allowed, prompt_count, csreq FROM access WHERE service = ? AND client = ? AND client_type = ?
preflight
INSERT OR REPLACE INTO access VALUES (?, ?, ?, 1, ?, ?, ?)
track-access-times
INSERT OR REPLACE INTO access_times VALUES (?, ?, ?, ?, ?)
i8@?0
com.apple.springboard
SBParentalControlsCapabilities
disable-alert
kTCCServiceAccessibility
preflight_unknown
kTCCServiceFaceID
Localizable-D22
%s%@
IPHONE_SIMULATOR_ROOT
REQUEST_ACCESS_SERVICE_%s
purpose-key
This app has crashed because it attempted to access privacy-sensitive data without a usage description.  The app's Info.plist must contain an %@ key with a string value explaining to the user how the app uses this data.
abort
problem_key
alert-info-string
REQUEST_ACCESS_INFO_SERVICE_%s
REQUEST_ACCESS_ALLOW
REQUEST_ACCESS_DENY
INSERT OR REPLACE INTO access VALUES (?, ?, ?, 0, ?, ?, ?)
kTCCServiceAddressBook
NSContactsUsageDescription
sandbox-extension
kTCCServiceCalendar
NSCalendarsUsageDescription
kTCCServiceReminders
NSRemindersUsageDescription
kTCCServiceTwitter
revocable
kTCCServiceFacebook
kTCCServiceSinaWeibo
kTCCServiceLiverpool
kTCCServiceUbiquity
kTCCServiceTencentWeibo
kTCCServiceShareKit
kTCCServicePhotos
NSPhotoLibraryUsageDescription
kTCCServicePhotosAdd
NSPhotoLibraryAddUsageDescription
secondary-purpose-key
minimum-sdk-version
kTCCServiceBluetoothPeripheral
NSBluetoothPeripheralUsageDescription
kTCCServiceCamera
NSCameraUsageDescription
device-camera
kTCCServiceMotion
NSMotionUsageDescription
disallowed-on-platform
iphoneos-ephemeral-user
kTCCServiceKeyboardNetwork
kTCCServiceWillow
NSHomeKitUsageDescription
kTCCServiceMediaLibrary
NSAppleMusicUsageDescription
kTCCServiceSpeechRecognition
NSSpeechRecognitionUsageDescription
kTCCServiceMSO
kTCCServiceSiri
NSSiriUsageDescription
kTCCServiceCalls
NSVoIPUsageDescription
NSFaceIDUsageDescription
use-default-purpose-string
com.apple.MobileStore
com.apple.AppStore
com.apple.mobilesafari
com.apple.iBooks
com.apple.private.tcc.manager
com.apple.tcc.
extension
REQUEST_DEFAULT_PURPOSE_STRING_SERVICE_%@
truncated
SELECT client, client_type, allowed, last_used_time, csreq FROM access NATURAL LEFT JOIN access_times WHERE service = ?
granted
last_used
code_requirement
clients
SELECT service, allowed, last_used_time, csreq FROM access NATURAL LEFT JOIN access_times WHERE client = ? AND client_type = ?
services
SELECT client FROM access WHERE service = ? AND client_type = ? AND allowed != 0
SELECT client FROM access WHERE service = ? AND client_type = ? AND allowed = 0
INSERT OR REPLACE INTO access VALUES (?, ?, ?, ?, ?, ?, NULL)
Access to service %s changed.
override
INSERT OR IGNORE INTO access_overrides VALUES (?)
DELETE FROM access_overrides WHERE service = ?
kTCCServiceAll
kTCCClientAll
SELECT service, client, client_type FROM access
DELETE FROM access
SELECT service FROM access WHERE client = ? AND client_type = ?
DELETE FROM access WHERE client = ? AND client_type = ?
DELETE FROM access_times WHERE client = ? AND client_type = ?
SELECT client, client_type FROM access WHERE service = ?
DELETE FROM access WHERE service = ?
DELETE FROM access_times WHERE service = ?
SELECT NULL FROM access WHERE service = ? AND client = ? AND client_type = ?
DELETE FROM access WHERE service = ? AND client = ? AND client_type = ?
DELETE FROM access_times WHERE service = ? AND client = ? AND client_type = ?
VACUUM access; VACUUM access_times;
policy
display
INSERT OR REPLACE INTO policies (bundle_id, uuid, display) VALUES (?, ?, ?);
com.apple.private.tcc.policy-override
bundle_id
SELECT id FROM policies WHERE bundle_id = ? AND uuid = ?
INSERT OR REPLACE INTO active_policy VALUES (?, ?, ?)
exceptions
CREATE TEMPORARY TABLE _exceptions (uuid TEXT NOT NULL)
B24@?0Q8@"NSObject<OS_xpc_object>"16
INSERT INTO _exceptions VALUES (?)
DELETE FROM policies WHERE bundle_id = ? AND uuid NOT IN (SELECT uuid FROM _exceptions)
DROP TABLE IF EXISTS _exceptions
operation
TestDBAbort
kTCCBogusService
SELECT DISTINCT client, client_type FROM access
TCCDMessageTypeKey
TCCDIdsMessageController
-[TCCDMessageController init]
-[TCCDMessageController setIncomingMessageType:handler:]
-[TCCDMessageController sendMessage:ofType:handler:]
messageTypesToHandlers
T@"NSMutableDictionary",&,V_messageTypesToHandlers
queue
T@"NSObject<OS_dispatch_queue>",&,V_queue
Client
TCCDMessageController
@20@0:8i16
@24@0:8@16
@28@0:8@16B24
@16@0:8
v16@0:8
i16@0:8
B16@0:8
@"NSString"
@"NSNumber"
@"NSBundle"
@"NSDictionary"
v32@0:8@16@?24
v40@0:8@16@24@?32
v24@0:8@16
@"NSMutableDictionary"
@"NSObject<OS_dispatch_queue>"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.companionappd.connect.allow</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.tccd.sync</string>
<string>com.apple.private.alloy.tccd.msg</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.tccd.sync</string>
<string>com.apple.private.alloy.tccd.msg</string>
</array>
<key>com.apple.private.xpc.domain-extension.proxy</key>
<true/>
</dict>
</plist>
