alloc
init
setNorm:
setMinimumTermFrequency:
class
isKindOfClass:
isEqualToParameters:
termWeightScheme
idfWeightScheme
norm
minimumTermFrequency
engagementRate
isEqual:
engagementCount
encodeInteger:forKey:
encodeObject:forKey:
defaultParameters
decodeIntegerForKey:
setTermWeightScheme:
setIdfWeightScheme:
setWithObjects:
decodeObjectOfClasses:forKey:
setEngagementRate:
setEngagementCount:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
.cxx_destruct
_termWeightScheme
_idfWeightScheme
_norm
_minimumTermFrequency
_engagementRate
_engagementCount
setDivergence:
scale
setScale:
divergence
_scale
_divergence
sharedInstance
insertTopicWithName:label:identifier:parent:
addTopicWithName:label:identifier:parent:
root
setRoot:
clients
setClients:
maxDepth
setMaxDepth:
timeToLive
setTimeToLive:
referenceDate
setReferenceDate:
sensedScoreEngine
setSensedScoreEngine:
temporalScoreEngine
setTemporalScoreEngine:
propagatedScoreEngine
setPropagatedScoreEngine:
handler
setHandler:
_root
_clients
_maxDepth
_timeToLive
_referenceDate
_sensedScoreEngine
_temporalScoreEngine
_propagatedScoreEngine
_handler
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
propagatedScoreForSensedScore:destination:distance:
activations
defaultEngine
naive
attenuation
numberWithInt:
arrayWithObjects:count:
dictionaryWithObjects:forKeys:count:
term
stringWithFormat:
type
client
systemPathWithDirectoryComponent:
initWithPath:
setQuery:
date
timeIntervalSinceReferenceDate
interval
interactionType
setPreparation:
runQuery:
database
features
countByEnumeratingWithState:objects:count:
UTF8String
score
initWithArray:copyItems:
_addFeatureVector:
query
_whereClauseForFeatureTemplate:
documentCount
setStep:
_countTableRows:
runQuery:inTransaction:
_documentCountContainsFeatureLike:inTransaction:
stringWithUTF8String:
featureWithType:term:client:score:
_featureFromStatement:
dataWithBytes:length:
unarchivedObjectOfClass:fromData:error:
archivedDataWithRootObject:
bytes
length
numberWithInteger:
numberWithDouble:
doubleValue
_addCentroidFeature:score:vectorIndex:inTransaction:
_centroidLength
zeros:
setObject:atIndexedSubscript:
_featureFromStatementWithScore:
scaleValueForFeature:scaling:
_indexForFeature:
_setCentroidFeature:score:inTransaction:
migrationPlan
defaultStore
addFeatureVectors:
deleteFeatureVectors
deleteFeatureVectorsWithFeatureLike:
deleteFeatureVectorsOlderThan:
deleteFeatureVectorsInExcessOf:
featureCount
documentCountContainsFeatureLike:
mostFrequentFeature
mostFrequentFeatureCount
leastFrequentFeature
leastFrequentFeatureCount
enumerateStateWithBlock:
centroid
centroidWithScaling:
centroidScoreForFeature:
setCentroidFeature:
vectorFromFeatureVector:
featureForIndex:
indexForFeature:
parameters
setParameters:
initWithStore:parameters:
setStore:
store
update
objectForKeyedSubscript:
count
operationForDivergence:
_centroidVectorFromFeatureVector:withScaling:
_vectorFromFeatureVector:
performScalarOperation:other:
array
addObject:
modelWithStore:parameters:
scoreForFeatureVector:scoringParameters:
_store
_parameters
temporalScoreForIndicationOnDate:referenceDate:
timeIntervalSinceDate:
exponential
dictionary
initWithName:
setObject:forKeyedSubscript:
defaultLogLevel
setLogLevelFromDefaults
initWithSuiteName:
valueForKey:
integerValue
setLogLevel:
sharedLogChannelWithName:
defaultChannel
persistenceChannel
name
setName:
logLevel
_logLevel
_name
timestampString
nameForLogLevel:
addObjectsFromArray:
matches:
allObjects
removeObjectsInArray:
minusSet:
subarrayWithRange:
_documentsContainingFeaturesLike:
countForObject:
sortedArrayUsingComparator:
_featuresSortedByCountAscending:
objectAtIndexedSubscript:
featureMatchWithValuesFromFeature:
_featureOccurrencesInDocuments:interactionType:
_vectorFromDictionary:
allKeys
enumerateObjectsUsingBlock:
copyWithZone:
dictionaryWithDictionary:
dictionaryWithCapacity:
objectAtIndex:
indexOfObject:
documents
modelParameters
centroidVector
defaultManager
URLsForDirectory:inDomains:
URLByAppendingPathComponent:isDirectory:
mainBundle
bundleIdentifier
URLByAppendingPathComponent:
clientPathWithDirectoryComponent:
indicationWithScore:date:
indicationWithScore:date:client:
_score
_date
_client
_insertRoot
clear
label
identifier
initWithUUIDString:
setIdentifier:
setLabel:
dateWithTimeIntervalSinceReferenceDate:
UUIDString
_indicationFromStatement:
topicWithName:label:identifier:
_parentForTopic:
objectsPassingTest:
firstObject
setParent:
_childrenForTopic:
containsObject:
setChildren:
_indicationsForTopic:
setIndications:
_topicFromStatement:
insertIndication:topic:
selectTopicsForQuery:
initWithType:term:client:score:
isEqualToFeature:
isEqualToString:
_type
_term
initWithDate:interval:interactionType:features:
featureVectorWithDate:interval:interactionType:features:
_interval
_interactionType
_features
sensedScoreForTopic:directScore:
level
height
power
sigmoid
parent
indications
indirectActivations
children
setScore:
setActivations:
setIndirectActivations:
_label
_identifier
_indications
_activations
_indirectActivations
preparation
step
error
setError:
_query
_preparation
_step
_error
_reset
dealloc
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLWithString:relativeToURL:
path
migrate
_dropAllOfType:
_runQuery:preparation:step:error:
version
clearAll
configureDatabase
runMigrationPlan:toVersion:
migrateToVersion:withMigrationPlan:
numberWithUnsignedInteger:
hasPrefix:
methodForSelector:
updateSchemaVersionNumberTo:
_path
_schemaVersion
_database
setLength:
setVector:
vector
initWithLength:
operate:v2:
mutableCopy
appendFormat:
appendString:
isEqualToVector:
vectorWithElements:length:
ones:
performOperation:other:
_vector
_length
operationWithBlock:
normalizeL1
normalizeL2
cosineSimilarity
KLDivergence
propagateUp:score:parent:distance:
propagateDown:score:root:distance:
processTopic:query:
executeQuery:
provideIndication:forTopic:
rankDocuments:withTopics:
stringForInteractionType:
stringForDivergence:
stringForNormalization:
stringForTermWeightScheme:
stringForIDFWeightScheme:
interactionTypeFromString:
divergenceFromString:
normalizationFromString:
termWeightSchemeFromString:
IDFWeightSchemeFromString:
operationForNormalization:
initWithType:term:client:
featureMatchWithType:term:client:
isEqualToFeatureMatch:
decodeObjectOfClass:forKey:
setType:
setTerm:
setClient:
termWeightScheme
idfWeightScheme
norm
minimumTermFrequency
engagementRate
engagementCount
supportsSecureCoding
TB,R
Tq,V_termWeightScheme
Tq,V_idfWeightScheme
Tq,V_norm
TQ,V_minimumTermFrequency
T@"NSDictionary",C,V_engagementRate
T@"NSDictionary",C,V_engagementCount
scale
T@"NSDictionary",C,V_scale
divergence
Tq,V_divergence
root
T@"IFTopic",&,N,V_root
clients
T@"NSArray",&,N,V_clients
maxDepth
TQ,N,V_maxDepth
timeToLive
Td,N,V_timeToLive
referenceDate
T@"NSDate",&,N,V_referenceDate
sensedScoreEngine
T@"<IFSensedScoreEngine>",&,N,V_sensedScoreEngine
temporalScoreEngine
T@"<IFTemporalScoreEngine>",&,N,V_temporalScoreEngine
propagatedScoreEngine
T@"<IFPropagatedScoreEngine>",&,N,V_propagatedScoreEngine
handler
T@?,C,N,V_handler
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v8@?0
PRAGMA foreign_keys = ON
CREATE TABLE IF NOT EXISTS document (date INTEGER,duration REAL,didEngage INTEGER,didRender INTEGER)
CREATE TABLE IF NOT EXISTS documentFeature (documentId INTEGER,term TEXT,type TEXT,client TEXT,score REAL,PRIMARY KEY (documentId, term, type, client),FOREIGN KEY (documentId) REFERENCES document(rowid))
CREATE TABLE IF NOT EXISTS centroid (vectorIndex INTEGER,term TEXT,type TEXT,client TEXT,score REAL,PRIMARY KEY (term, type, client))
CREATE TABLE IF NOT EXISTS parameters (data BLOB)
CREATE TABLE IF NOT EXISTS meta (id INTEGER PRIMARY KEY,version INTEGER)
CREATE VIEW documentJoin AS SELECT * FROM document d, documentFeature dF WHERE d.rowid = dF.documentId 
CREATE TRIGGER fkd_documentFeature_documentId BEFORE DELETE ON document FOR EACH ROW BEGIN DELETE from documentFeature WHERE documentId = OLD.rowid; END; 
CREATE INDEX Idx1 ON centroid(term, type, client);
CREATE INDEX Idx2 ON documentFeature(documentId, term, type, client);
INSERT OR IGNORE INTO meta (id, version) VALUES (1, 2)
(term LIKE '%@')
(term IS NOT NULL)
(type LIKE '%@')
(type IS NOT NULL)
(client LIKE '%@')
(client IS NOT NULL)
%@ AND %@ AND %@
Centroid
INSERT OR IGNORE INTO document (date, duration, didEngage, didRender) VALUES (?, ?, ?, ?)
v16@?0^{sqlite3_stmt=}8
INSERT OR IGNORE INTO documentFeature (documentId, term, type, client, score) VALUES (?, ?, ?, ?, ?)
DELETE FROM document
DELETE FROM document WHERE document.rowid IN(SELECT documentId FROM documentJoin WHERE %@)
DELETE FROM document WHERE document.date < %f
DELETE FROM document WHERE rowid IN (SELECT rowid FROM document ORDER BY rowid ASC LIMIT %lu)
SELECT count(*) FROM %@
v24@?0^{sqlite3_stmt=}8^B16
document
SELECT count(*) FROM (SELECT term, type, client FROM documentJoin GROUP BY term, type, client)
SELECT count(*) FROM (SELECT * from documentJoin WHERE %@ GROUP BY documentId)
SELECT term, type, client, count(*) FROM documentJoin GROUP BY term, type, client ORDER BY count(*) DESC LIMIT 2
SELECT term, type, client, count(*) FROM documentJoin GROUP BY term, type, client ORDER BY count(*) ASC LIMIT 2
SELECT data FROM parameters LIMIT 1
DELETE FROM parameters
INSERT INTO parameters (data) VALUES (?)
INSERT into centroid (vectorIndex, term, type, client, score) values(?, ?, ?, ?, ?)
DELETE FROM centroid
SELECT term, type, client, SUM(CASE WHEN didRender THEN score ELSE 0 END), SUM(CASE WHEN didEngage THEN score ELSE 0 END), count(distinct documentId) FROM documentJoin GROUP BY term, type, client;
centroid
SELECT score, vectorIndex from centroid
SELECT term, type, client, score, vectorIndex from centroid
REPLACE into centroid (vectorIndex, term, type, client, score) values(?, ?, ?, ?, ?)
SELECT vectorIndex FROM centroid WHERE (term LIKE ?) AND (type LIKE ?) AND (client LIKE ?) LIMIT 1
SELECT term, type, client, score from centroid WHERE vectorIndex = %lu;
SELECT score FROM centroid WHERE (term LIKE ?) AND (type LIKE ?) AND (client LIKE ?) LIMIT 1
parameters
T@"IFCentroidModelParameters",&
v48@?0@"IFFeature"8Q16@"NSDictionary"24^@32^B40
T@"IFCentroidModelParameters",R
store
T@"<IFCentroidStore>",R
T@"NSArray",R
T@"<IFCentroidStore><IFCentroidStoreInternal>",&,V_store
T@"IFCentroidModelParameters",&,V_parameters
com.apple.interest.logging
%@.logLevel
default
persistence
name
T@"NSString",&,V_name
logLevel
Ti,V_logLevel
%a %b %d %T
error
warning
info
debug
level%d
q24@?0@8@16
v32@?0@"IFFeature"8Q16^B24
InterestFramework
client
T@"NSString",R,N,V_client
score
Td,R,N,V_score
date
T@"NSDate",R,N,V_date
Graph
CREATE TABLE IF NOT EXISTS topic (identifier TEXT NOT NULL,name TEXT NOT NULL,label TEXT NOT NULL,PRIMARY KEY (identifier))
CREATE TABLE IF NOT EXISTS relation (parent TEXT NOT NULL,child TEXT NOT NULL,PRIMARY KEY (parent, child),FOREIGN KEY (parent) REFERENCES topic(identifier),FOREIGN KEY (child) REFERENCES topic(identifier))
CREATE TABLE IF NOT EXISTS indication (root TEXT NOT NULL,mean REAL,client TEXT,date INT,PRIMARY KEY (root, client, date),FOREIGN KEY (root) REFERENCES topic(identifier))
CREATE TABLE IF NOT EXISTS meta (id INTEGER PRIMARY KEY,version INT,data BLOB)
INSERT OR IGNORE INTO topic (identifier, name, label) VALUES (?, ?, ?)
INSERT OR IGNORE INTO relation (parent, child) VALUES (?, ?)
INSERT OR IGNORE INTO indication (root, mean, client, date) VALUES (?, ?, ?, ?)
SELECT * FROM indication WHERE (root LIKE ?)
SELECT child FROM relation WHERE (parent LIKE ?)
SELECT parent FROM relation WHERE (child LIKE ?)
B24@?0@"IFTopic"8^B16
SELECT * FROM topic WHERE (name LIKE ? AND label LIKE ? AND identifier LIKE ?)
<%@: %p>: (%@, %@, %@, %f)
type
T@"NSString",R,C,V_type
term
T@"NSString",R,C,V_term
T@"NSString",R,C,V_client
Td,R,V_score
T@"NSDate",R,V_date
interval
Td,R,V_interval
interactionType
Tq,R,V_interactionType
features
T@"NSArray",R,C,V_features
26F6B859-9D67-4D51-B2C5-DDFE74492015
T@"NSString",&,N,V_name
label
T@"NSString",&,N,V_label
identifier
T@"NSUUID",&,N,V_identifier
Td,N,V_score
T@"IFTopic",R,N
height
TQ,R,N
level
parent
T@"IFTopic",&,N,Vparent
children
T@"NSArray",&,N,Vchildren
indications
T@"NSArray",&,N,V_indications
activations
TQ,N,V_activations
indirectActivations
TQ,N,V_indirectActivations
(%d) %s
[%@ %@]: %@
query
T@"NSString",C,N,V_query
preparation
T@?,C,N,V_preparation
step
T@?,C,N,V_step
T@?,C,N,V_error
:memory:
Failed to create client directory %@.
interest.sqlite
SELECT name FROM sqlite_master WHERE type='table' AND NOT (name LIKE 'sqlite_%' OR name LIKE 'meta')
DELETE FROM %@
SELECT name FROM sqlite_master WHERE type='%@'
DROP %@ %@
table
trigger
index
view
SELECT version FROM meta
BEGIN TRANSACTION
END TRANSACTION
Preparation failed.
IFDataStore corruption detected.
Error(%d): %s (SQL: %@)
PRAGMA journal_mode=WAL
PRAGMA synchronous=NORMAL
IFDataStore migration failed.
migration_
update meta set version=%ld where id=1
path
T@"NSURL",R,C,N,V_path
version
Tq,R,N
database
T^{sqlite3=},R,N,V_database
 %.2f 
vector
T^d,R
length
T^d,V_vector
TQ,V_length
@"<IFVector>"24@?0@"<IFVector>"8@"<IFVector>"16
+[IFVectorOperations add]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreInterest_Sim/CoreInterest-15.50.1/CoreInterest/IFVector.m
v1.length == v2.length
d24@?0@"<IFVector>"8@"<IFVector>"16
+[IFVectorOperations cosineSimilarity]_block_invoke
IFInteractionTypeEngaged
IFInteractionTypeRendered
IFInteractionTypeMax
IFDivergenceFunctionCosineSimilarity
IFDivergenceFunctionKL
IFDivergenceFunctionMax
IFNormalizationFunctionL1
IFNormalizationFunctionL2
IFNormalizationFunctionMax
IFTermWeightSchemeBinary
IFTermWeightSchemeRaw
IFTermWeightSchemeNormalizationLog
IFTermWeightSchemeNormalizationDouble
IFTermWeightSchemeNormalizationDoubleK
IFTermWeightSchemeMax
IFIDFWeightSchemeUnary
IFIDFWeightSchemeInverse
IFIDFWeightSchemeInverseMax
IFIDFWeightSchemeInverseSmooth
IFIDFWeightSchemeInverseProbabilistic
IFIDFWeightSchemeMax
<%@: %p>: (%@, %@, %@)
T@"NSString",C,V_type
T@"NSString",C,V_term
T@"NSString",C,V_client
IFCentroidModelParameters
NSSecureCoding
NSCoding
IFCentroidScoringParameters
IFTopicManager
IFQuery
IFPropagatedScoreEngineNaive
IFPropagatedScoreEngine
NSObject
IFPropagatedScoreEngineAttenuation
IFCentroidDataStore
IFCentroidStoreInternal
IFCentroidStore
IFCentroidStoreCounting
IFCentroidModel
IFTemporalScoreEngineNaive
IFTemporalScoreEngine
IFTemporalScoreEngineExponential
IFLogChannel
IFLogging
IFCentroidVolatileStore
IFDataStorePaths
IFIndication
IFGraphDataStore
IFFeature
NSCopying
IFFeatureVector
IFSensedScoreEngineNaive
IFSensedScoreEngine
IFSensedScoreEngineSigmoid
IFSensedScoreEnginePower
IFTopic
IFDataStoreQuery
IFDataStore
IFVector
IFVectorOperating
IFVectorOperationScalar
IFVectorOperation
IFVectorOperations
IFManager
IFCentroidCommon
IFFeatureMatch
@16@0:8
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8@16
v16@0:8
q16@0:8
v24@0:8q16
Q16@0:8
v24@0:8Q16
@"NSDictionary"
B48@0:8@16@24@32@40
d16@0:8
v24@0:8d16
@?16@0:8
v24@0:8@?16
@"IFTopic"
@"NSArray"
@"NSDate"
@"<IFSensedScoreEngine>"
@"<IFTemporalScoreEngine>"
@"<IFPropagatedScoreEngine>"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
d40@0:8d16@24Q32
d40@0:8d16@"IFTopic"24Q32
Q24@0:8@16
Q24@0:8Q16
B24@0:8@"NSArray"16
Q24@0:8@"IFFeatureMatch"16
Q24@0:8@"NSDate"16
@"<IFCentroidStore>"16@0:8
@"IFFeature"16@0:8
d24@0:8@16
@24@0:8Q16
v24@0:8@?<v@?@"IFFeature"Q@"NSDictionary"^@^B>16
@"<IFVector>"16@0:8
@"<IFVector>"24@0:8@"NSDictionary"16
d24@0:8@"IFFeature"16
B24@0:8@"IFFeature"16
@"<IFVector>"24@0:8@"IFFeatureVector"16
@"IFFeature"24@0:8Q16
Q24@0:8@"IFFeature"16
@"IFCentroidModelParameters"16@0:8
v24@0:8@"IFCentroidModelParameters"16
Q28@0:8@16B24
@24@0:8^{sqlite3_stmt=}16
v44@0:8@16d24q32B40
v36@0:8@16d24B32
@32@0:8@16@24
d32@0:8@16@24
d32@0:8@"IFFeatureVector"16@"IFCentroidScoringParameters"24
@"NSArray"16@0:8
@"<IFCentroidModel>"32@0:8@"<IFCentroidStore>"16@"IFCentroidModelParameters"24
@"<IFCentroidStore><IFCentroidStoreInternal>"
@"IFCentroidModelParameters"
d32@0:8@"NSDate"16@"NSDate"24
i16@0:8
v20@0:8i16
@"NSString"
@20@0:8i16
@32@0:8@16q24
@20@0:8B16
@"NSCountedSet"
@"NSMutableArray"
@"<IFVector>"
@32@0:8d16@24
@40@0:8d16@24@32
B32@0:8@16@24
@40@0:8@16@24@32
@48@0:8@16@24@32d40
@24@0:8^{_NSZone=}16
@48@0:8@16d24q32@40
d32@0:8@16d24
d32@0:8@"IFTopic"16d24
@"NSUUID"
v28@0:8@16B24
v48@0:8@16@?24@?32@?40
q32@0:8Q16@24
q32@0:8@16Q24
^{sqlite3=}16@0:8
@"NSURL"
^{sqlite3=}
@32@0:8^d16Q24
@"<IFVector>"32@0:8@"<IFVectorOperation>"16@"<IFVector>"24
d32@0:8@"<IFVectorOperationScalar>"16@"<IFVector>"24
v32@0:8@16Q24
^d16@0:8
@"<IFVector>"24@0:8Q16
@"<IFVector>"32@0:8^d16Q24
v24@0:8^d16
@24@0:8@?16
d32@0:8@"<IFVector>"16@"<IFVector>"24
@"<IFVector>"32@0:8@"<IFVector>"16@"<IFVector>"24
v48@0:8@16d24@32Q40
v32@0:8@16@24
@24@0:8q16
q24@0:8@16
@(#)PROGRAM:CoreInterest  PROJECT:CoreInterest-1
