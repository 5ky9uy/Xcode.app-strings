iTunes Store
BiometricStateReset
BiometricState
[%{public}@]: Attempting to migrate itunes password profile settings
{public}
MCProfileConnection
MCFeatureITunesStorePasswordEntryForced
[%{public}@]: Updating forced itunes password setting to no
[%{public}@]: Deleting weak token cookie
mz_at0
[%{public}@]: Deleting session cookies
v16@?0r^@8
[%{public}@]: Treating storefront '%{public}@' as synced storefront
DidShowHardRestoreFailureDialog
RestoreAccountIDs
RestoreFailRetryCount
RestoreItemKinds
RestoreSoftFailRetryCount
RestoreStoreFrontIDs
RestoreSuppressTermsAndConditions
AutomaticDownloadKinds
UnsignedBags
InitiateSessionURL
https://init.itunes.apple.com/bag.xml?ix=6&custombag=true
com.apple.mobileipod
HasMigratedMusicAllowsCellularData
MusicAllowsCellularData
AllowAutoDownloadOnCellular
[%{public}@]: Scheduling AppStore Migrator
ASDMigrationRequestOptions
ASDMigrationRequest
[%{public}@]: AppStore Migrator scheduled: %{public}@
v16@?0@"NSError"8
[%{public}@]: Scheduling iTunes Migrator
[%{public}@]: iTunes Migrator Scheduled
v20@?0B8@"NSError"12
%{public}@: Looking for and cleaning up duplicate accounts BEFORE migrating accounts.
%{public}@: Starting migration to Accounts.framework.
%{public}@: Looking for and cleaning up duplicate accounts AFTER migrating accounts.
%{public}@: No accounts were migrated, so we won't do a second cleanup pass.
%{public}@: Starting migration to iTunes Feature Enabler.
migrator
com.apple.itunesstored
v8@?0
@"NSString"16@?0@"SSAccount"8
%{public}@: currentAccounts = %{public}@
%{public}@: Unable to de-dupe an account that has no altDSID. account = %{public}@
%{public}@: Two or more accounts have the same altDSID. Removing it from %{public}@.
%{public}@: Two or more accounts have the same altDSID, but we failed to remove it from %{public}@. error = %@
%{public}@: Unable to de-dupe an account that has no username. account = %{public}@
%{public}@: There's more than one active account. %{public}@ will become the active account.
%{public}@: Failed to set %{public}@ as inactive. error = %@
%{public}@: Successfully copied account properties from %{public}@ to %{public}@.
%{public}@: Failed to copy account properties from %{public}@ to %{public}@. error = %{public}@
%{public}@: Removed a duplicate of %{public}@.
%{public}@: Failed to remove a duplicate of %{public}@. error = %@
%{public}@: %{public}@ had a broken DSID, so we removed it.
%{public}@: %{public}@ had a broken DSID, but we failed to remove it. error = %@
originalUsername
%{public}@: %@ was an empty account, so we removed it.
%{public}@: %@ was an empty account, but we failed to remove it. error = %@
%{public}@: Successfully removed %{public}@ because its DSID conflicted with that of another account.
%{public}@: Failed to remove %{public}@ even though its DSID conflicted with that of another account. error = %@
%{public}@: We didn't start with an active account. We won't try and select a new one.
%{public}@: The active account matches what we started with. activeAccount = %{public}@
%{public}@: The active account is not equal to the original active account. We'll try and repair it. originalActiveAccount = %{public}@ | newActiveAccount = %{public}@
%{public}@: Attempting to activate an account that matches %{public}@.
%{public}@: Found an account that matches the original active account. It will be set as active. newActiveAccount = %{public}@
%{public}@: Failed to find an account that matches the original active account. Selecting a random account to make active. newActiveAccount = %{public}@
%{public}@: Failed to find an account that matches the original active account and unable to find any account to make active.
%{public}@: Failed to set %{public}@ as active. error = %@
numberWithInteger:
class
_logConfig
sharedConfig
shouldLog
OSLogObject
shouldLogToDisk
stringByReplacingOccurrencesOfString:withString:
sharedConnection
isAppRatingLimitInEffect
setBoolValue:forSetting:
didRestoreFromBackup
sharedStorage
dictionaryWithObject:forKey:
removeCookiesWithProperties:
numberWithBool:
alloc
init
getValuesForDomain:keys:count:usingBlock:
setValue:forDomain:key:completionBlock:
didMigrateBackupFromDifferentDevice
currentDevice
automaticDownloadKinds
containsObject:
initWithObjects:
unionAutomaticDownloadKinds:withCompletionBlock:
isEqualToString:
numberWithUnsignedChar:
didUpgrade
didRestoreFromCloudBackup
initWithMigrationType:
initWithOptions:
startWithCompletionBlock:
performMigration:completionBlock:
sharedAccountsMigrationConfig
_cleanupAccounts
migrateToAccountsFramework
migrate
setCategory:
setSubsystem:
copy
defaultStore
accounts
hashedDescription
_ss_map:
activeAccount
countByEnumeratingWithState:objects:count:
_removeAccountIfEmpty:
_cleanupDuplicateAccountsByUsername
_cleanupDuplicateAccountsByAltDSID
_cleanupMultipleActiveAccounts
_removeAccountIfBroken:
_setNewActiveAccountIfNeeded:
isLocalAccount
altDSID
objectForKeyedSubscript:
setObject:forKeyedSubscript:
addObject:
allKeys
count
setAltDSID:
saveAccount:verifyCredentials:error:
accountName
_removeAccountsIfDifferentDSIDs:
_mergeAccountsWithSameUsernames:
isActive
backingAccount
creationDate
compare:
setActive:
accountProperties
numberWithInt:
isEqual:
isEqualToNumber:
description
firstObject
_copyAccountPropertiesIfNeededFromAccount:toAccount:
removeAccount:error:
uniqueIdentifier
accountWithAltDSID:uniqueIdentifier:accountName:
lastObject
dataClassName
performMigration
[%{public}@]: Attempting to migrate itunes password profile settings
[%{public}@]: Updating forced itunes password setting to no
[%{public}@]: Deleting weak token cookie
[%{public}@]: Deleting session cookies
[%{public}@]: Treating storefront '%{public}@' as synced storefront
[%{public}@]: Scheduling AppStore Migrator
[%{public}@]: AppStore Migrator scheduled: %{public}@
[%{public}@]: Scheduling iTunes Migrator
[%{public}@]: iTunes Migrator Scheduled
%{public}@: Looking for and cleaning up duplicate accounts BEFORE migrating accounts.
%{public}@: Starting migration to Accounts.framework.
%{public}@: Looking for and cleaning up duplicate accounts AFTER migrating accounts.
%{public}@: No accounts were migrated, so we won't do a second cleanup pass.
%{public}@: Starting migration to iTunes Feature Enabler.
%{public}@: currentAccounts = %{public}@
%{public}@: Unable to de-dupe an account that has no altDSID. account = %{public}@
%{public}@: Two or more accounts have the same altDSID. Removing it from %{public}@.
%{public}@: Two or more accounts have the same altDSID, but we failed to remove it from %{public}@. error = %@
%{public}@: Unable to de-dupe an account that has no username. account = %{public}@
%{public}@: There's more than one active account. %{public}@ will become the active account.
%{public}@: Failed to set %{public}@ as inactive. error = %@
%{public}@: Successfully copied account properties from %{public}@ to %{public}@.
%{public}@: Failed to copy account properties from %{public}@ to %{public}@. error = %{public}@
%{public}@: Removed a duplicate of %{public}@.
%{public}@: Failed to remove a duplicate of %{public}@. error = %@
%{public}@: %{public}@ had a broken DSID, so we removed it.
%{public}@: %{public}@ had a broken DSID, but we failed to remove it. error = %@
%{public}@: %@ was an empty account, so we removed it.
%{public}@: %@ was an empty account, but we failed to remove it. error = %@
%{public}@: Successfully removed %{public}@ because its DSID conflicted with that of another account.
%{public}@: Failed to remove %{public}@ even though its DSID conflicted with that of another account. error = %@
%{public}@: We didn't start with an active account. We won't try and select a new one.
%{public}@: The active account matches what we started with. activeAccount = %{public}@
%{public}@: The active account is not equal to the original active account. We'll try and repair it. originalActiveAccount = %{public}@ | newActiveAccount = %{public}@
%{public}@: Attempting to activate an account that matches %{public}@.
%{public}@: Found an account that matches the original active account. It will be set as active. newActiveAccount = %{public}@
%{public}@: Failed to find an account that matches the original active account. Selecting a random account to make active. newActiveAccount = %{public}@
%{public}@: Failed to find an account that matches the original active account and unable to find any account to make active.
%{public}@: Failed to set %{public}@ as active. error = %@
ISMMigrator
@16@0:8
v16@0:8
v32@0:8@16@24
v24@0:8@16
B24@0:8@16
@24@0:8@16
B16@0:8
