AKExtensionItemContext
com.apple.AuthKitUI.AKLocationSignInAlert
com.apple.AuthKitUI.AKSecondFactorAlert
com.apple.AuthKitUI.AKSecondFactorEntryAlert
ak_context
T@"AKAppleIDAuthenticationContext",&,D,N,Sak_setContext:
X-Apple-Identity-Token
X-Apple-Session-Key
X-Apple-Encrypted-Session-Key
stringValue
T@"NSString",C,N,V_stringValue
expirationDate
T@"NSDate",R,N,V_expirationDate
name
T@"NSString",C,N,V_name
sessionKey
T@"NSData",R,N
encryptedSessionKey
externalizedVersion
externalizedVersionString
T@"NSString",R,N
AKPassword
AKRawPassword
AKIDMSToken
AKDSID
AKAltDSID
AKRememberPassword
AKIsHSA2
AKSecurityLevel
AKIsUnderage
AKIsLegacyStudent
AKDidPerformInteractive
AKNewAppleIDSetupInfo
AKMasterKeyID
AKDidShowServerUI
AKAcceptedTerms
AKManagedAppleID
AKAuditLogin
AKFirstName
AKLastName
AKImageURL
AKShortLivedToken
AKIsServerUIRequired
AKIsPasscodeResetRequired
AKConfigurationInfo
AKDuplexSession
AKCircleContext
AKAppleIDEmailsDidChangeNotification
com.apple.authkit.user-info-changed
altDSID
security-level
v8@?0
AKAppleIDAuthenticationControllerXPCLock
-[AKAppleIDAuthenticationController authenticateWithContext:completion:] requires a non-nil value for the context parameter.
v24@?0@"NSDictionary"8@"NSError"16
v16@?0@"NSError"8
v20@?0B8@"NSError"12
v24@?0@"NSArray"8@"NSError"16
(null)
v24@?0@"NSNumber"8@"NSError"16
v24@?0@"AKCircleRequestPayload"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
v24@?0@"AKAppleIDServerResourceLoadDelegate"8@"NSError"16
sensitiveAuthenticationKeys
T@"NSSet",R,N
deallocHandler
T@?,C,N,V_deallocHandler
delegate
T@"<AKAppleIDAuthenticationDelegate>",W,N
AKContextManagerQueue
v20@?0B8@"NSDictionary"12
v12@?0B8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
-[_AKAppleIDAuthenticationContextManager provisionAnisetteForContext:withCompletion:]
-[_AKAppleIDAuthenticationContextManager syncAnisetteForContext:withSIMData:completion:]
-[_AKAppleIDAuthenticationContextManager eraseAnisetteForContext:withCompletion:]
-[_AKAppleIDAuthenticationContextManager fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:]
-[_AKAppleIDAuthenticationContextManager legacyAnisetteDataForContext:DSID:withCompletion:]
T@"<AKAppleIDAuthenticationDelegate>",W,N,V_delegate
request
T@"NSURLRequest",&,N,V_request
retryCount
TQ,N,V_retryCount
underlyingTask
T@"NSURLSessionDataTask",&,N,V_underlyingTask
completionHandler
T@?,C,N,V_completionHandler
receivedData
T@"NSMutableData",&,N,V_receivedData
lastRetryError
T@"NSError",&,N,V_lastRetryError
canceledOrCompleted
TB,N,V_canceledOrCompleted
AuthKitURLSession
com.apple.authkit.url
icloud.com
_usesAppleIDContext
TB,N,V__usesAppleIDContext
com.apple.authkit
core
traffic
signpost
(******)
@24@?0@8@16
com.apple.gs.
(cag).
%@...
v32@?0@"NSString"8@"NSString"16^B24
v32@?0@8@16^B24
POST
_altDSID
_akAction
_itemIdentifier
<%@:%p> identifier: %@, action: %@, altDSID: %@
supportsSecureCoding
TB,R
itemIdentifier
T@"NSString",C,N,V_itemIdentifier
akAction
T@"NSString",C,N,V_akAction
T@"NSString",C,N,V_altDSID
true
ak-button
ak-action
X-Apple-AK-Action
start-icsc
mk-validation
continue
complete
read
cancel
delete
teardown
X-Apple-AK-Continuation-Data
X-Apple-Alternate-Id
X-Apple-DSID
X-Apple-I-88CC-99DE-EE63-2736
X-Apple-PE-Token
X-Apple-I-Account-Name
X-Apple-I-Account-NameType
phoneNumber
AKUsername
AKPasswordResetTokenKey
AKEmailVerificationCompletedNotificationKey
icloud
imessage
facetime
itunesstore
appstore
gamecenter
AKICSCURLKey
AKRecoveryURLKey
X-Apple-iCSC-Identity-Token
X-Apple-iCSC-PE-Token
X-Apple-Recovery-Identity-Token
X-Apple-Recovery-PE-Token
X-Apple-MK-Validation-Token
X-Apple-I-iCSC-PRK
X-Apple-I-iCSC-MD-M
X-Apple-I-ICSCREC
status
success
failure
appleid
errorCode
errorMessage
action
start_account_recovery
try_again
prs_account_nm
personID
dsid
pakedata
idmsdata
circlestep
atxid
Request
Header
prkgen
X-Apple-AK-Auth-Type
X-Apple-AK-Request-Auth-Type
HSA2
X-Apple-I-Experiment-Mode
X-Apple-I-RecoveryKey-Show
X-Apple-I-HSA1-Conversion
source
clear_followup_notification
AKFollowUpAltDSIDKey
AKFollowUpServerURL
AKFollowUpSafariURL
cfudata
cfuids
X-Mme-Device-Id
X-Apple-I-Client-Time
X-Mme-Proxied-Device-Id
X-Apple-GS-Token
X-Apple-SL-Token
X-Apple-I-MD
X-Apple-I-MD-M
X-Apple-I-MD-RINFO
X-Apple-I-Companion-MD
X-Apple-I-Companion-MD-M
X-Apple-I-Companion-MD-RINFO
X-Apple-I-Proxied-MD
X-Apple-I-Proxied-MD-M
X-Apple-I-Proxied-MD-RINFO
X-Apple-Ephemeral-Auth
X-Mme-Nas-Qualify
X-Apple-I-Logged-In-Services
X-Apple-AK-Context-Type
X-Apple-I-CK
X-Apple-I-PRK
X-MMe-Country
X-Apple-I-Locale
X-Apple-I-TimeZone
X-MMe-Companion-Client-Info
X-MMe-Proxied-Client-Info
X-Apple-I-PRK-Gen
X-Apple-I-Local-Login-Uses-AppleID
X-Apple-HB-Token
X-Apple-I-MLB
X-Apple-I-ROM
X-Apple-I-SRL-NO
X-Apple-iOS-SLA-Version
X-Apple-Proxied-App-Name
X-Apple-Client-App-Name
X-Apple-I-MD-LU
X-Apple-I-CDP-Circle-Status
false
%@:%@
itunes
piggybacking
%llu
AKDisablePET
AKFakeAuthSuccess
AKDisablePiggy
AKAddHS2CreateHeader
AKSuppressHSA2Suggestions
AKAllowPhoneNumberAccounts
AKAddExperimentalModeHeader
AKLastCheckInAttemptDate
AKLastCheckInSuccessDate
AKLastIDMSEnvironment
com.apple.authkit.config
v12@?0i8
shouldDisablePETs
Tq,N
shouldFakeAuthSuccess
shouldDisablePiggybacking
shouldSuppressHSA2Suggestions
shouldAddHSA2CreateHeader
shouldAllowPhoneNumberAccounts
shouldAllowExperimentalMode
lastCheckInAttemptDate
T@"NSDate",C,N
lastCheckInSuccessDate
lastKnownIDMSEnvironment
TQ,N
AKConfigurationDidChangeNotification
_services
_operatingSystems
_includeUntrustedDevices
<%@:%p> altDSID: %@, os: %@, services: %@, untrusted: %d
includeUntrustedDevices
TB,N,V_includeUntrustedDevices
services
T@"NSArray",C,N,V_services
operatingSystems
T@"NSArray",C,N,V_operatingSystems
AppleIDAuthSupportNoPinning
.GlobalPreferences
adsid
DSID
aliases
retaining-services
__OSINSTALL_ENVIRONMENT
__AKSYNCBUBBLE
AKAccountManagerQueue
primaryAccount
appleIdAliases
sharedInstance
T@"AKAccountManager",R,N
appleIDAccountType
T@"ACAccountType",R,N
store
T@"ACAccountStore",&,N,V_accountStore
authKitAccountType
ACAccountStore
/System/Library/Frameworks/Accounts.framework/Accounts
ACHeartbeatTokenKey
ACContinuationTokenKey
ACPasswordResetTokenKey
ACPasswordResetTokenBackupKey
ACTokenKey
ACAccountTypeIdentifierIDMS
ACAccountTypeIdentifierAppleAccount
ACAccountTypeIdentifierAppleIDAuthentication
%02X
_identityToken
_heartbeatToken
_shouldSendAbsintheHeader
_shouldSendEphemeralAuthHeader
_serviceType
_continuationToken
_passwordResetToken
_serviceToken
_proxiedDeviceAnisetteData
_proxiedDevice
_proxyAppName
_clientAppName
_shouldSendLocalUserHasAppleIDLoginHeader
_shouldSendICSCIntentHeader
_loggedInServices
_hasEmptyPasswordOverride
hsa2
X-Apple-CDP-Action
shouldSendEphemeralAuthHeader
TB,N,V_shouldSendEphemeralAuthHeader
shouldSendICSCIntentHeader
TB,N,V_shouldSendICSCIntentHeader
shouldSendLocalUserHasAppleIDLoginHeader
TB,N,V_shouldSendLocalUserHasAppleIDLoginHeader
serviceType
Tq,N,V_serviceType
loggedInServices
T@"NSArray",C,N,V_loggedInServices
passwordResetToken
T@"NSString",C,N,V_passwordResetToken
continuationToken
T@"NSString",C,N,V_continuationToken
heartbeatToken
T@"NSString",C,N,V_heartbeatToken
identityToken
T@"NSString",C,N,V_identityToken
proxiedDevice
T@"AKDevice",&,N,V_proxiedDevice
proxyAppName
T@"NSString",C,N,V_proxyAppName
clientAppName
T@"NSString",C,N,V_clientAppName
hasEmptyPasswordOverride
T@"NSNumber",&,N,V_hasEmptyPasswordOverride
proxiedDeviceAnisetteData
T@"AKAnisetteData",&,N,V_proxiedDeviceAnisetteData
shouldSendAbsintheHeader
TB,N,V_shouldSendAbsintheHeader
serviceToken
T@"NSString",C,N,V_serviceToken
step
atxnid
pake
<%@:%p> transaction: %@, step: %ld, errorCode: %ld
_responseInfo
_serverInfo
_clientInfo
_transactionId
_clientErrorCode
_circleStep
responseMessage
T@"AKPushMessage",&,N,V_responseMessage
responseInfo
T@"NSDictionary",&,N,V_responseInfo
circleStep
TQ,N,V_circleStep
serverMachineId
serverInfo
T@"NSString",&,N,V_serverInfo
clientInfo
T@"NSData",&,N,V_clientInfo
clientErrorCode
Tq,N,V_clientErrorCode
T@"NSString",&,N,V_altDSID
transactionId
T@"NSString",&,N,V_transactionId
urls
cfgs
gsService
midStartProvisioning
midFinishProvisioning
midSyncMachine
securityUpgradeEligibility
securityUpgrade
validateCode
secondaryAuth
postData
apsEnv
iForgot
iForgotAppleIdLocked
iForgotResetNotification
createAccount
device_list_self
trustedDevices
trustedDevicesSummaryUrl
qualifyCert
qualifySession
tokenUpgrade
postConfigData
fetchConfigData
changePasswordUrl
validateVettingToken
renewRecoveryToken
idmsEnv
circle
followUpItems
fetchUserInfo
storeModernRecoveryKey
is-phone-number-supported
IdMS1
IdMS2
IdMS3
escapeHatchURL
T@"NSURL",R,N
bagProvider
T@"<AKURLBagDictionaryProvider>",&,N,V_bagProvider
basicAuthURL
startProvisioningURL
endProvisioningURL
syncAnisetteURL
upgradeEligibilityCheckURL
upgradeUIURL
validateCodeURL
checkInURL
notificationAckURL
iForgotURL
iForgotContinuationURL
createAppleIDURL
deviceListURL
trustedDevicesURL
trustedDevicesSummaryURL
absintheCertURL
absintheSessionURL
tokenUpgradeURL
configurationInfoURL
fetchConfigDataURL
changePasswordURL
validateVettingTokenURL
renewRecoveryTokenURL
circleURL
fetchFollowUps
fetchUserInfoURL
storeModernRecoveryURL
APSEnvironment
IDMSEnvironment
TQ,R,N
phoneNumberSupportedConfig
TB,R,N,GisPhoneNumberSupportedConfig
_encodedRecoveryIdentityToken
_encodedRecoveryPET
_authContext
_recoveryContinuationURL
_supportsMasterKeyRecovery
supportsMasterKeyRecovery
TB,N,V_supportsMasterKeyRecovery
encodedRecoveryIdentityToken
T@"NSString",C,N,V_encodedRecoveryIdentityToken
encodedRecoveryPET
T@"NSString",C,N,V_encodedRecoveryPET
recoveryContinuationURL
T@"NSURL",C,N,V_recoveryContinuationURL
authContext
T@"AKAppleIDAuthenticationContext",&,N,V_authContext
decodedRecoveryIdentityTokenString
decodedRecoveryPETString
X-Apple-I-MD-Cmd-Target
AKAnisetteControllerLock
_serviceID
_pairedDevice
_proxiedAnisetteData
v16@?0@"NSDictionary"8
v16@?0@"NSMutableDictionary"8
v24@?0@"AKAnisetteData"8@"NSError"16
paired
X-Apple-I-MD-DATA
pairedDevice
T@"AKDevice",&,N,V_pairedDevice
_machineID
_oneTimePassword
_routingInfo
AKAnisetteData <%p>: {MID: %@ - OTP: %@ - RD: %@}
machineID
T@"NSString",C,N,V_machineID
oneTimePassword
T@"NSString",C,N,V_oneTimePassword
routingInfo
TQ,N,V_routingInfo
AKAuthenticationError
AKAnisetteError
AKUnderlyingADIErrors
CDPContext
/System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP
CDPStateController
CDPRecoveryController
CDPFollowUpContext
CDPFollowUpController
CDPStateErrorDomain
CDPIDMSRecordMIDKey
CDPIDMSPasswordResetKey
CDPUIAccountRecoveryController
/System/Library/PrivateFrameworks/CoreCDPUI.framework/CoreCDPUI
_waitForReply
_identityTokenValue
_heartbeatTokenValue
_pushToken
_payload
_waitForReplyTimeout
__notifyOfTimeout
identityTokenValue
T@"NSString",&,N,V_identityTokenValue
heartbeatTokenValue
T@"NSString",&,N,V_heartbeatTokenValue
pushToken
T@"NSString",&,N,V_pushToken
_notifyOfTimeout
TB,N,V__notifyOfTimeout
payload
T@"AKCircleRequestPayload",&,N,V_payload
waitForReply
TB,N,V_waitForReply
waitForReplyTimeout
Td,N,V_waitForReplyTimeout
com.apple.ak.anisette.xpc
X-MMe-Client-Info
https
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
AKDeviceUnlockState
+[AKDevice activeIDSPeerDevice]
_uniqueDeviceIdentifier
_serverFriendlyDescription
_color
_enclosureColor
_locale
_linkType
AKDevice <%p> {%@} link %@
UniqueDeviceID
ModelNumber
%@;%@;%@
%@/%@ (%@/%@)
<%@> <%@> <%@>
iPhoneSimulator
Simulator
%@_%@
Localizable
serialNumber
T@"NSString",R
userChosenName
localUserUUID
userFullName
internationalMobileEquipmentIdentity
isProtectedWithPasscode
isUnlocked
isInCircle
mobileEquipmentIdentifier
integratedCircuitCardIdentifier
isInternalBuild
isAppleIDLoginEnabled
hasBeenUnlockedSinceLastCheckIn
serializedData
T@"NSData",R
serverFriendlyDescription
T@"NSString",C,V_serverFriendlyDescription
uniqueDeviceIdentifier
T@"NSString",C,V_uniqueDeviceIdentifier
color
T@"NSString",C,V_color
enclosureColor
T@"NSString",C,V_enclosureColor
coverGlassColor
T@"NSNumber",C,V_coverGlassColor
housingColor
T@"NSNumber",C,V_housingColor
backingColor
T@"NSNumber",C,V_backingColor
locale
T@"NSLocale",C,V_locale
MLBSerialNumber
T@"NSString",C,V_MLBSerialNumber
ROMAddress
T@"NSString",C,V_ROMAddress
modelNumber
T@"NSString",C,V_modelNumber
linkType
TQ,SsetLinkType:,V_linkType
v32@?0@8Q16^B24
AKAnisetteProvisioningControllerXPCLock
No DSID was provided!
%06u
LOGIN_CODE_ALERT_OK_BUTTON
AKTemporaryValue
com.apple.ak.code.entered
AKAuthenticationInternalTokenCK
com.apple.authkit.generic
com.apple.authkit.messages
com.apple.authkit.passkit
X-Apple-Security-Upgrade-Context
SERVICE_NAME_ICLOUD
SERVICE_NAME_ITUNES
SERVICE_NAME_APPSTORE
SERVICE_NAME_IMESSAGE
SERVICE_NAME_FACETIME
SERVICE_NAME_GAMECENTER
INLINE_PASSWORD_ALERT_TITLE_SERVICE_ICLOUD
INLINE_PASSWORD_ALERT_TITLE_SERVICE_IMESSAGE
INLINE_PASSWORD_ALERT_TITLE_SERVICE_APP_STORE
INLINE_PASSWORD_ALERT_TITLE_SERVICE_ITUNES
INLINE_PASSWORD_ALERT_TITLE_SERVICE_GAME_CENTER
INLINE_PASSWORD_ALERT_TITLE_SERVICE_FACETIME
INLINE_PASSWORD_ALERT_TITLE_NO_SERVICE
%username%
_reason
_username
_isUsernameEditable
_DSID
_isProxyingForApp
_proxiedAppBundleID
_proxiedAppName
_serviceIdentifiers
_identifier
_maximumLoginAttempts
_isEphemeral
_shouldAllowAppleIDCreation
_shouldPromptForPasswordOnly
_passwordPromptTitle
_defaultButtonString
_httpHeadersForRemoteUI
_password
_isPasswordEditable
_shouldUpdatePersistentServiceTokens
_shouldOfferSecurityUpgrade
_needsCredentialRecovery
_needsNewAppleID
_needsPasswordChange
_shouldPreventInteractiveAuth
_generatedCode
_latitude
_longitude
_deviceClass
_deviceColor
_deviceEnclosureColor
_shouldForceInteractiveAuth
_capabilityForUIDisplay
_companionDeviceAnisetteData
_companionDevice
_isAppleIDLoginEnabled
_hasEmptyPassword
_shouldRequestShortLivedToken
_shortLivedToken
_shouldRequestConfigurationInfo
_isTriggeredByNotification
_message
_anticipateEscrowAttempt
_isFirstTimeLogin
_supportsPiggybacking
_desiredInternalTokens
_shouldSkipSettingsLaunchAlert
_shouldSendIdentityTokenForRemoteUI
_shouldRequestRecoveryPET
_title
_helpAnchor
_helpBook
_shouldSkipInitialReachabilityCheck
_attemptIndex
_securityUpgradeContext
<%@: %p { UUID: %@ }>
<%@: %p {
UUID: %@,
username: %@,
editable-username: %@,
altDSID: %@,
DSID: %@,
password: %@,
service-type: %ld,
service IDs: %@,
reason: %@
ephemeral: %@,
password-only: %@,
force-interaction: %@,
prevent-interaction: %@,
update-service-tokens: %@,
offer-upgrade: %@,
offer-upgrade-context: %@,
proxying-for-app: %@,
proxied-app-id: %@,
proxied-device: %@,
companion-device: %@
max-login-attempts: %@
appleid-login-enabled: %@
has-empty-password: %@
request-slt: %@
short-lived-token: %@
triggered-by-push: %@
skip-alert: %@
skip-reachability-check: %@
attemp-index: %lu,
INLINE_PASSWORD_ALERT_MESSAGE
PASSWORD_ALERT_MESSAGE_INTERNAL_BLAME
INLINE_PASSWORD_ALERT_OK_BUTTON
INLINE_PASSWORD_ALERT_CANCEL_BUTTON
INLINE_PASSWORD_ALERT_USERNAME_PLACEHOLDER_TV
INLINE_PASSWORD_ALERT_PASSWORD_PLACEHOLDER_TV
WRONG_PASSWORD_ALERT_CANCEL_BUTTON
WRONG_PASSWORD_ALERT_TRY_AGAIN_BUTTON
ENTER_VERITIFCATION_CODE_CANCEL_BUTTON
ENTER_VERITIFCATION_CODE_FAILED_BUTTON
WRONG_LOGIN_CODE_ALERT_CANCEL_BUTTON
WRONG_LOGIN_CODE_TRY_AGAIN_BUTTON
com.apple.ak.twofa
T@"NSUUID",R,N,V_identifier
TQ,R,N,V_capabilityForUIDisplay
TB,N,V_shouldSendIdentityTokenForRemoteUI
_interpolatedReason
TB,R,N,V_shouldSkipInitialReachabilityCheck
TQ,N,V_attemptIndex
shouldPromptForPasswordOnly
TB,N,V_shouldPromptForPasswordOnly
shouldUpdatePersistentServiceTokens
TB,N,V_shouldUpdatePersistentServiceTokens
TB,N,S_setProxyingForApp:,V_isProxyingForApp
T@"NSString",C,N,S_setProxiedAppBundleID:,V_proxiedAppBundleID
T@"NSString",C,N,S_setProxiedAppName:,V_proxiedAppName
T@"NSString",C,N,V_passwordPromptTitle
T@"NSString",C,N,S_setPassword:,V_password
TB,N,V_isPasswordEditable
T@"NSString",C,N,S_setShortLivedToken:,V_shortLivedToken
shouldPreventInteractiveAuth
TB,N,V_shouldPreventInteractiveAuth
shouldForceInteractiveAuth
TB,N,V_shouldForceInteractiveAuth
T@"AKDevice",C,N
companionDevice
anisetteDataProvider
T@"<AKAnisetteServiceProtocol>",C,N,V_anisetteDataProvider
T@"NSNumber",C,N,SsetAppleIDLoginEnabled:,V_isAppleIDLoginEnabled
hasEmptyPassword
T@"NSNumber",C,N,SsetHasEmptyPassword:,V_hasEmptyPassword
shouldRequestRecoveryPET
TB,N,V_shouldRequestRecoveryPET
shouldRequestShortLivedToken
TB,N,V_shouldRequestShortLivedToken
shouldRequestConfigurationInfo
TB,N,V_shouldRequestConfigurationInfo
supportsPiggybacking
TB,N,V_supportsPiggybacking
anticipateEscrowAttempt
TB,N,V_anticipateEscrowAttempt
desiredInternalTokens
T@"NSSet",C,N,V_desiredInternalTokens
isFirstTimeLogin
TB,N,SsetFirstTimeLogin:,V_isFirstTimeLogin
shouldSkipSettingsLaunchAlert
TB,N,V_shouldSkipSettingsLaunchAlert
securityUpgradeContext
T@"NSString",C,N,V_securityUpgradeContext
T@"NSString",C,N,S_setMessage:,V_message
companionDeviceAnisetteData
T@"AKAnisetteData",&,N,V_companionDeviceAnisetteData
displayString
T@"NSString",C,N,V_displayString
displayTitle
T@"NSString",C,N,V_displayTitle
cdpUiProvider
T@"<CDPStateUIProvider>",&,N,V_cdpUiProvider
username
T@"NSString",C,N,V_username
isUsernameEditable
TB,N,V_isUsernameEditable
shouldAllowAppleIDCreation
TB,N,V_shouldAllowAppleIDCreation
needsCredentialRecovery
TB,N,V_needsCredentialRecovery
needsNewAppleID
TB,N,V_needsNewAppleID
needsPasswordChange
TB,N,V_needsPasswordChange
isTriggeredByNotification
TB,N,SsetTriggeredByNotification:,V_isTriggeredByNotification
reason
T@"NSString",C,N,V_reason
defaultButtonString
T@"NSString",C,N,V_defaultButtonString
maximumLoginAttempts
Tq,N,V_maximumLoginAttempts
serviceIdentifier
T@"NSString",C,N
serviceIdentifiers
T@"NSArray",C,N,V_serviceIdentifiers
isEphemeral
TB,N,V_isEphemeral
T@"NSString",C,N,V_DSID
httpHeadersForRemoteUI
T@"NSDictionary",C,N,V_httpHeadersForRemoteUI
T@,&,N,V_clientInfo
shouldOfferSecurityUpgrade
TB,N,V_shouldOfferSecurityUpgrade
title
T@"NSString",&,V_title
helpAnchor
T@"NSString",C,V_helpAnchor
helpBook
T@"NSString",C,V_helpBook
generatedCode
latitude
T@"NSNumber",C,N
longitude
deviceClass
deviceColor
deviceEnclosureColor
com.apple.ak.auth.xpc
KCAESGCMDuplexSession
/System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle
passwordPrompt
passwordPromptGoToSettingsNotification
invalidAccountSave
invalidAccountUpdate
missingAccountServices
buildNumber
osVersion
model
lastUpdatedDate
trusted
_name
_serialNumber
_buildNumber
_operatingSystemName
_operatingSystemVersion
_model
_machineId
_lastUpdatedDate
_trusted
<%@:%p> Name: %@, SN: %@, Build: %@, OS: %@, Version: %@, Model: %@, Timestamp: %@, Trusted: %d
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_serialNumber
T@"NSString",R,C,N,V_buildNumber
operatingSystemName
T@"NSString",R,C,N,V_operatingSystemName
operatingSystemVersion
T@"NSString",R,C,N,V_operatingSystemVersion
T@"NSString",R,C,N,V_model
TB,R,N,V_trusted
T@"NSDate",R,C,N,V_lastUpdatedDate
machineId
T@"NSString",R,C,N,V_machineId
alloc
init
ak_setContext:
userInfo
mutableCopy
data
initForWritingWithMutableData:
setRequiresSecureCoding:
encodeObject:forKey:
finishEncoding
setObject:forKey:
removeObjectForKey:
setUserInfo:
objectForKey:
initForReadingWithData:
class
decodeObjectOfClass:forKey:
finishDecoding
ak_context
extensionItemWithAppleIDAuthenticationContext:
copy
doubleValue
dateWithTimeIntervalSinceNow:
length
initWithBase64EncodedString:options:
initWithData:encoding:
componentsSeparatedByString:
count
objectAtIndexedSubscript:
tokenWithValue:lifetime:
setName:
tokenWithBase64String:
.cxx_destruct
stringValue
setStringValue:
expirationDate
name
_expirationDate
_stringValue
_name
dataUsingEncoding:
tokenWithExternalizedVersion:lifetime:
propertyListWithData:options:format:error:
isKindOfClass:
allHeaderFields
objectForKeyedSubscript:
_setSessionKey:
_setEncryptedSessionKey:
initWithAppleID:altDSID:
setObject:forKeyedSubscript:
dataWithPropertyList:format:options:error:
externalizedVersion
tokenWithExternalizedVersionString:
updateWithHTTPURLResponse:
sessionKey
encryptedSessionKey
externalizedVersionString
_properties
setWithObjects:
initWithIdentifier:daemonXPCEndpoint:
initWithAuthenticationController:
invalidate
dealloc
delegate
setDelegate:
raise:format:
registerContext:
unregisterContext:
debugDescription
setServiceIdentifier:
_authenticationServiceConnection
remoteObjectProxyWithErrorHandler:
_sanitizedCopy
ak_redactedCopy
authenticateWithContext:completion:
synchronousRemoteObjectProxyWithErrorHandler:
numberWithInteger:
setAppleIDWithAltDSID:inUse:forService:completion:
setAppleIDWithDSID:inUse:forService:completion:
fetchUserInformationForAltDSID:completion:
fetchDeviceListWithContext:completion:
setConfigurationInfo:forIdentifier:forAltDSID:completion:
configurationInfoWithIdentifiers:forAltDSID:completion:
checkSecurityUpgradeEligibilityForContext:completion:
generateLoginCodeWithCompletion:
validateLoginCode:forAppleID:withCompletion:
performCircleRequestWithContext:completion:
checkInWithAuthenticationServerForAppleID:completion:
reportSignOutForAppleID:service:completion:
reportSignOutForAllAppleIDsWithCompletion:
updateStateWithExternalAuthenticationResponse:forContext:completion:
updateStateWithExternalAuthenticationResponse:forAppleID:completion:
isDevicePasscodeProtected:
activeLoginCode:
getServerUILoadDelegateForAltDSID:completion:
getServerUILoadDelegateWithContext:completion:
altDSID
synchronizeFollowUpItemsForContext:completion:
teardownFollowUpWithContext:completion:
renewRecoveryTokenWithContext:completion:
verifyMasterKey:withContext:completion:
persistMasterKeyVerifier:withContext:completion:
domain
isEqual:
code
setUsername:
setAltDSID:
setIsUsernameEditable:
_setProxyingForApp:
validateVettingToken:forAltDSID:completion:
emailsForAltDSID:completion:
fetchURLBagWithCompletion:
lock
initWithMachServiceName:options:
initWithListenerEndpoint:
XPCInterface
setRemoteObjectInterface:
setExportedObject:
setExportedInterface:
setInterruptionHandler:
setInvalidationHandler:
resume
unlock
sensitiveAuthenticationKeys
initWithIdentifier:
initWithDaemonXPCEndpoint:
setAppleIDWithAltDSID:inUse:forService:
setAppleIDWithDSID:inUse:forService:
fetchDeviceListWithContext:error:
validateLoginCode:forAppleID:completion:
synchronizeFollowUpItemsForContext:error:
verifyMasterKey:context:completion:
persistMasterKeyVerifier:context:completion:
emailsForAltDSID:
urlBagWithError:
deallocHandler
setDeallocHandler:
_serviceID
_daemonXPCEndpoint
_contextManager
_connectionLock
_deallocHandler
hasPrefix:
_identifier
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:
respondsToSelector:
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:completion:
_clientSideContextForServerContext:
ak_errorWithCode:
presentKeepUsingUIForAppleID:completion:
dismissKeepUsingUIWithCompletion:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
presentBasicLoginUIWithCompletion:
dismissBasicLoginUIWithCompletion:
presentLoginAlertWithError:title:message:completion:
presentSecondFactorUIWithCompletion:
dismissSecondFactorUIWithCompletion:
presentSecondFactorAlertWithError:title:message:completion:
presentNativeRecoveryUIWithContext:completion:
dismissNativeRecoveryUIWithCompletion:
presentServerProvidedUIWithURLRequest:delegate:completion:
dismissServerProvidedUIWithCompletion:
anisetteDataProvider
provisionAnisetteWithCompletion:
syncAnisetteWithSIMData:completion:
eraseAnisetteWithCompletion:
fetchAnisetteDataAndProvisionIfNecessary:withCompletion:
legacyAnisetteDataForDSID:withCompletion:
_updateWithValuesFromContext:
presentKeepUsingUIForContext:appleID:completion:
dismissKeepUsingUIForContext:withCompletion:
presentBasicLoginUIForContext:completion:
dismissBasicLoginUIForContext:completion:
presentLoginAlertForContext:withError:title:message:completion:
presentSecondFactorUIForContext:completion:
dismissSecondFactorUIForContext:completion:
presentSecondFactorAlertForContext:withError:title:message:completion:
presentServerProvidedUIForContext:URLRequest:delegate:completion:
dismissServerProvidedUIForContext:completion:
presentNativeRecoveryUIForContext:recoveryContext:completion:
dismissNativeRecoveryUIForContext:completion:
shouldContinueWithAuthenticationResults:error:forContextID:completion:
provisionAnisetteForContext:withCompletion:
syncAnisetteForContext:withSIMData:completion:
eraseAnisetteForContext:withCompletion:
fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:
legacyAnisetteDataForContext:DSID:withCompletion:
_authContextsByUUID
_authController
_authContextsQueue
_delegate
setCanceledOrCompleted:
receivedData
response
_completeWithError:
request
setRequest:
retryCount
setRetryCount:
underlyingTask
setUnderlyingTask:
completionHandler
setCompletionHandler:
setReceivedData:
lastRetryError
setLastRetryError:
canceledOrCompleted
_canceledOrCompleted
_request
_retryCount
_underlyingTask
_completionHandler
_receivedData
_lastRetryError
set_usesAppleIDContext:
allValues
countByEnumeratingWithState:objects:count:
_unsafe_completeTask:withError:
defaultSessionConfiguration
_usesAppleIDContext
set_appleIDContext:
setMaxConcurrentOperationCount:
setUnderlyingQueue:
sessionWithConfiguration:delegate:delegateQueue:
absoluteString
_URLSession
dataTaskWithRequest:
taskIdentifier
numberWithUnsignedInteger:
state
cancel
appendData:
_isRecoverableError:
_unsafe_retryTaskIfPossible:
isEqualToString:
protectionSpace
host
containsString:
authenticationMethod
serverTrust
isValidCertificateTrust:forHostname:
sharedURLSession
sharedAnisetteFreeURLSession
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
beginDataTaskWithRequest:completionHandler:
cancelDataTask:
_urlSession
_sessionQueue
_tasksByIdentifier
__usesAppleIDContext
JSONObjectWithData:options:error:
containsObject:
_ak_truncatedTokensCopy
ak_map:
initWithCapacity:
stringByReplacingOccurrencesOfString:withString:
substringToIndex:
stringWithFormat:
enumerateKeysAndObjectsUsingBlock:
ak_dictionaryWithResponseData:
ak_jsonDictionaryWithResponseData:
UTF8String
dataWithBytes:length:
ak_SHA256
ak_hexString
ak_SHA256String
context
authContext
username
setAppleID:
decodedRecoveryPETString
setPasswordEquivToken:
DSID
longLongValue
numberWithLongLong:
setDsid:
supportsMasterKeyRecovery
setIdmsMasterKeyRecovery:
idmsMasterKeyRecovery
setIdmsRecovery:
setGuestMode:
appleID
dsid
recoveryControllerWithContext:
setAuthProvider:
setUiProvider:
_mapICSCRecoveryResultsToAuthKit:
performRecovery:
dictionary
cdpIDMSRecordPRKKey
cdpIDMSRecordMIDKey
recoveryContinuationURL
requestWithURL:
setHTTPMethod:
decodedRecoveryIdentityTokenString
ak_addICSCRecoveryHeaderWithIdentityToken:forAltDSID:
ak_addRecoveryHeaderWithIdentityToken:forAltDSID:
base64EncodedStringWithOptions:
setValue:forHTTPHeaderField:
postBodyForiCSCServerUIResponseWithContext:recoveryError:
ak_setBodyWithParameters:
allHTTPHeaderFields
cdpErrorDomain
localizedFailureReason
requestForRecoveryCompletionWithContext:recoveredInfo:recoveryError:
shouldSendServerResponseForRecoveredInfo:withRecoveryError:
cdpContext:performSilentRecoveryTokenRenewal:
cdpContext:verifyMasterKey:completion:
initWithContext:uiProvider:
presentNativeRecoveryUIWithCompletion:
_recoveryController
_recoveryContext
_cdpUiProvider
supportsSecureCoding
encodeWithCoder:
initWithCoder:
itemIdentifier
setItemIdentifier:
akAction
setAkAction:
_itemIdentifier
_akAction
_altDSID
interfaceWithProtocol:
currentDevice
isInternalBuild
localUserUUID
uniqueDeviceIdentifier
serverFriendlyDescription
isInCircle
anisetteDataForURLRequest:error:
ak_anisetteHeadersWithData:
ak_proxiedAnisetteHeadersWithData:
_setAuthorizationHeaderWithToken:altDSID:key:
setHTTPBody:
dataWithJSONObject:options:error:
sharedSigner
signatureForURLRequest:
componentsJoinedByString:
currentLocale
uppercaseString
locale
localeIdentifier
localTimeZone
abbreviation
ROMAddress
MLBSerialNumber
serialNumber
date
ak_serverFriendlyString
dictionaryWithObjects:forKeys:count:
machineID
oneTimePassword
routingInfo
initWithFormat:
ak_addInternalBuildHeader
ak_addLocalUserUUIDHashHeader
ak_addDeviceUDIDHeader
ak_addProxiedDeviceUDIDHeader:
ak_addClientInfoHeader
ak_addCircleStatusHeader
ak_addCompanionClientInfoHeader:
ak_addProxiedClientInfoHeader:
ak_addEphemeralAuthHeader
ak_addAnisetteHeaders
ak_addProxiedAnisetteHeaders:
ak_addAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addAuthorizationHeaderWithServiceToken:forAltDSID:
ak_addAuthorizationHeaderWithHeartbeatToken:forAltDSID:
ak_addShortLivedTokenHeaderWithIdentityToken:forAltDSID:
ak_setJSONBodyWithParameters:
ak_addAbsintheHeader
ak_addLoggedInServicesHeaderForServices:
ak_addContextHeaderForServiceType:
ak_addContinutationKeyHeader:
ak_addPasswordResetKeyHeader:
ak_addCountryHeader
ak_addLocaleHeader
ak_addTimeZoneHeader
ak_addPRKRequestHeader
ak_addICSCIntentHeader
ak_addLocalUserHasAppleIDLoginHeader
ak_addDeviceROMHeader
ak_addDeviceMLBHeader
ak_addDeviceSerialNumberHeader
ak_addAcceptedSLAHeaderWithVersion:
ak_addClientApp:
ak_addProxyApp:
ak_clientTimeHeader
ak_localeHeader
ak_timeZoneHeader
ak_clientInfoHeader
ak_deviceUDIDHeader
ak_anisetteHeadersWithCompanionData:
removeAllObjects
standardUserDefaults
configurationValueForKey:
integerValue
setConfigurationValue:forKey:
unsignedIntegerValue
sharedConfiguration
shouldDisablePETs
setShouldDisablePETs:
shouldFakeAuthSuccess
setShouldFakeAuthSuccess:
shouldDisablePiggybacking
setShouldDisablePiggybacking:
shouldSuppressHSA2Suggestions
setShouldSuppressHSA2Suggestions:
shouldAddHSA2CreateHeader
setShouldAddHSA2CreateHeader:
shouldAllowPhoneNumberAccounts
setShouldAllowPhoneNumberAccounts:
shouldAllowExperimentalMode
setShouldAllowExperimentalMode:
lastKnownIDMSEnvironment
setLastKnownIDMSEnvironment:
lastCheckInAttemptDate
setLastCheckInAttemptDate:
lastCheckInSuccessDate
setLastCheckInSuccessDate:
_cachedSettings
_notificationToken
_settingsQueue
decodeObjectOfClasses:forKey:
decodeBoolForKey:
encodeBool:forKey:
includeUntrustedDevices
setIncludeUntrustedDevices:
services
setServices:
operatingSystems
setOperatingSystems:
_includeUntrustedDevices
_services
_operatingSystems
isAccountsFrameworkAvailable
accountPropertyForKey:
setAccountProperty:forKey:
hearbeatTokenForAccount:error:
continuationTokenForAccount:error:
passwordResetTokenForAccount:error:
passwordResetTokenBackupForAccount:error:
_tokenWithName:forAccount:error:
_removeTokenKey:forAccount:
credentialForAccount:error:
credentialItemForKey:
errorWithDomain:code:userInfo:
authKitAccountType
accountsWithAccountType:
aliasesForAccount:
accountTypeWithAccountTypeIdentifier:
appleIDAccountType
firstObject
creationDate
compare:
arrayWithObjects:count:
_removeTokenForKeys:forAccount:
credential
setCredentialItem:forKey:
setCredential:
saveVerifiedAccount:withCompletionHandler:
removeObject:
addObject:
servicesUsingAccount:
allObjects
stringRepresentationForService:
allAuthKitAccounts
removeAccount:withCompletionHandler:
iCloudAccountForAppleID:
isPrimaryiCloudAccount:
iCloudAccountForAltDSID:
_iCloudAccountType
_aliasesForiCloudAccount:
_altDSIDForiCloudAccount:
boolValue
sharedInstance
altDSIDForAccount:
setAltDSID:forAccount:
DSIDForAccount:
setDSID:forAccount:
setAliases:forAccount:
securityLevelForAccount:
setSecurityLevel:forAccount:
hearbeatTokenForAccount:
continuationTokenForAccount:
passwordResetTokenForAccount:
passwordResetTokenBackupForAccount:
masterTokenForAccount:
removeMasterTokenForAccount:
authKitAccountWithAltDSID:
authKitAccountWithDSID:
authKitAccountWithAppleID:
appleIDAccountWithAltDSID:
appleIDAccountWithAppleID:
mostRecentlyUsedAuthKitAccount
removeAllPasswordResetTokens
removeContinuationTokenForAccount:
setAccount:inUse:byService:
activeServiceNamesForAccount:
removeUnusedAuthKitAccounts
hasPrimaryiCloudAccountForAppleID:
hasPrimaryiCloudAccountForAltDSID:
transportableAuthKitAccount:
store
setStore:
_accountStore
_authKitAccountType
_appleIDAccountType
_accountQueue
bytes
appendFormat:
numberWithBool:
signRequestWithCommonHeaders:
sharedController
_signWithFeatureOptInHeaders:
statusCode
signalFromServerResponse:
isResponseActionable:
initWithAltDSID:identityToken:
signRequest:
isResponseFinal:
isAuthenticationRequired:
isResponseFinalForHSA2ServerFlow:
serviceToken
setServiceToken:
shouldSendEphemeralAuthHeader
setShouldSendEphemeralAuthHeader:
shouldSendICSCIntentHeader
setShouldSendICSCIntentHeader:
shouldSendLocalUserHasAppleIDLoginHeader
setShouldSendLocalUserHasAppleIDLoginHeader:
serviceType
setServiceType:
loggedInServices
setLoggedInServices:
passwordResetToken
setPasswordResetToken:
continuationToken
setContinuationToken:
heartbeatToken
setHeartbeatToken:
identityToken
setIdentityToken:
proxiedDevice
setProxiedDevice:
proxyAppName
setProxyAppName:
clientAppName
setClientAppName:
hasEmptyPasswordOverride
setHasEmptyPasswordOverride:
proxiedDeviceAnisetteData
setProxiedDeviceAnisetteData:
shouldSendAbsintheHeader
setShouldSendAbsintheHeader:
_shouldSendEphemeralAuthHeader
_shouldSendICSCIntentHeader
_shouldSendLocalUserHasAppleIDLoginHeader
_shouldSendAbsintheHeader
_serviceToken
_serviceType
_loggedInServices
_passwordResetToken
_continuationToken
_heartbeatToken
_identityToken
_proxiedDevice
_proxyAppName
_clientAppName
_hasEmptyPasswordOverride
_proxiedDeviceAnisetteData
transactionId
setTransactionId:
serverInfo
setServerInfo:
clientErrorCode
circleStep
setCircleStep:
setWithArray:
decodeIntegerForKey:
encodeInteger:forKey:
payloadWithMessage:
isRequestingPayload
isAcceptingPayload
clientInfo
serverMachineId
replyPayload
setClientInfo:
setClientErrorCode:
responseMessage
setResponseMessage:
responseInfo
setResponseInfo:
_serverInfo
_clientInfo
_clientErrorCode
_transactionId
_responseMessage
_responseInfo
_circleStep
_urlAtKey:
configurationAtKey:
_requestEnvironmentsWithError:
_IDMSEnvironmentFromString:
_requestEnvironmentsWithBag:
_requestConfigurationsWithError:
_fetchURLBagWithCompletion:
_requestNewURLBagIfNecessaryWithError:
URLWithString:
_urlBag:
bagProvider
sharedBag
keyForEscapeHatchURL
looksLikeiForgotURLKey:
IDMSEnvironmentFromBag:
basicAuthURL
startProvisioningURL
endProvisioningURL
syncAnisetteURL
upgradeEligibilityCheckURL
upgradeUIURL
validateCodeURL
escapeHatchURL
checkInURL
notificationAckURL
iForgotURL
iForgotContinuationURL
createAppleIDURL
deviceListURL
trustedDevicesURL
trustedDevicesSummaryURL
absintheCertURL
absintheSessionURL
tokenUpgradeURL
configurationInfoURL
fetchConfigDataURL
changePasswordURL
validateVettingTokenURL
renewRecoveryTokenURL
circleURL
fetchFollowUps
fetchUserInfoURL
storeModernRecoveryURL
isPhoneNumberSupportedConfig
APSEnvironment
IDMSEnvironment
requestNewURLBagIfNecessaryWithCompletion:
requestNewURLBagIfNecessaryWithError:
urlAtKey:
setBagProvider:
_bagProvider
setDSID:
setAuthContext:
setSupportsMasterKeyRecovery:
setEncodedRecoveryIdentityToken:
setEncodedRecoveryPET:
setRecoveryContinuationURL:
encodedRecoveryIdentityToken
encodedRecoveryPET
recoveryContextWithServerInfo:
isValid
_supportsMasterKeyRecovery
_encodedRecoveryIdentityToken
_encodedRecoveryPET
_recoveryContinuationURL
_authContext
numberWithInt:
originalRequest
_generateAppleIDHeadersForRequest:withCompletion:
_handleURLResponse:forRequest:withCompletion:
_generateAppleIDHeadersForRequest:error:
addEntriesFromDictionary:
_genericAppleIDHeadersDictionaryForRequest:
_nativeAnisetteController
anisetteDataWithError:
_pairedDeviceAnisetteController
anisetteDataForURLRequest:completion:
syncWithSIMData:completion:
provisionWithCompletion:
eraseWithCompletion:
initForDevice:
copyWithZone:
URLSession:task:getAppleIDHeadersForResponse:completionHandler:
relevantHTTPStatusCodes
appleIDHeadersForRequest:
handleResponse:forRequest:shouldRetry:
pairedDevice
setPairedDevice:
_proxiedAnisetteData
_anisetteControllerLock
_pairedDevice
numberWithUnsignedLongLong:
setMachineID:
setOneTimePassword:
setRoutingInfo:
_machineID
_oneTimePassword
_routingInfo
ak_errorWithCode:userInfo:
ak_isUserCancelError
ak_isUserSkippedError
ak_isUserTryAgainError
ak_errorWithCode:underlyingError:
ak_wrappedAnisetteError:
_contextCreationDate
contextWithAuthResults:
initWithAuthenticationResults:
initWithContext:
contextForStateRepair
initWithPresentingViewController:
stateControllerWithContext:
followUpRepairContext
followUpController
accountRecoveryControllerWithPresentingViewController:
decodeDoubleForKey:
encodeDouble:forKey:
payload
setPayload:
waitForReply
setWaitForReply:
waitForReplyTimeout
setWaitForReplyTimeout:
identityTokenValue
setIdentityTokenValue:
heartbeatTokenValue
setHeartbeatTokenValue:
pushToken
setPushToken:
_notifyOfTimeout
set_notifyOfTimeout:
_waitForReply
__notifyOfTimeout
_payload
_waitForReplyTimeout
_identityTokenValue
_heartbeatTokenValue
_pushToken
stringByAppendingString:
formattedUsernameFromUsername:
provisionAnisetteForDevice:completion:
syncAnisetteWithSIMData:device:completion:
eraseAnisetteForDevice:completion:
fetchAnisetteDataAndProvisionIfNecessary:device:completion:
legacyAnisetteDataForDSID:device:completion:
scheme
caseInsensitiveCompare:
ak_usesHTTPSScheme
initWithLocaleIdentifier:
setDateFormat:
setLocale:
timeZoneForSecondsFromGMT:
setTimeZone:
stringFromDate:
_lookUpCurrentUniqueDeviceID
setUniqueDeviceIdentifier:
_generateServerFriendlyDescription
setServerFriendlyDescription:
_lookUpCurrentColor
setColor:
_lookUpCurrentEnclosureColor
setEnclosureColor:
_lookUpCurrentCoverGlassColor
setCoverGlassColor:
_lookUpCurrentHousingColor
setHousingColor:
_lookUpCurrentBackingColor
setBackingColor:
autoupdatingCurrentLocale
_lookupROMAddress
setROMAddress:
_lookupMLBSerialNumber
setMLBSerialNumber:
setLinkType:
_lookupModelNumber
setModelNumber:
_hardwareModel
_osName
_osVersion
_buildNumber
bundleForClass:
infoDictionary
mainBundle
bundleIdentifier
sharedConnection
isPasscodeSet
localizedStringForKey:value:table:
activeIDSPeerDevice
deviceWithSerializedData:
deviceSpecificLocalizedStringWithKey:
serializedData
hasBeenUnlockedSinceLastCheckIn
setHasBeenUnlockedSinceLastCheckIn:
userChosenName
userFullName
internationalMobileEquipmentIdentity
isUnlocked
isProtectedWithPasscode
isAppleIDLoginEnabled
mobileEquipmentIdentifier
integratedCircuitCardIdentifier
phoneNumber
color
enclosureColor
coverGlassColor
housingColor
backingColor
modelNumber
linkType
_isMonitoringUnlockEvents
_monitoringLock
_serverFriendlyDescription
_uniqueDeviceIdentifier
_color
_enclosureColor
_coverGlassColor
_housingColor
_backingColor
_locale
_MLBSerialNumber
_ROMAddress
_modelNumber
_linkType
arrayWithCapacity:
enumerateObjectsUsingBlock:
ak_arrayWithResponseData:
ak_arrayWithJSONResponseData:
_initForDevice:daemonXPCEndpoint:
_anisetteServiceConnection
fetchAnisetteDataAndProvisionIfNecessary:error:
exceptionWithName:reason:userInfo:
anisetteDataWithCompletion:
_targetDevice
_setMessage:
setReason:
unsignedIntValue
setGeneratedCode:
_message
_interpolatedReason
archivedDataWithRootObject:
UUID
_initWithIdentifier:
_capabilityForUIDisplay
_shouldSkipInitialReachabilityCheck
initWithSurrogateID:
reason
serviceIdentifiers
setServiceIdentifiers:
cdpUiProvider
stringWithUTF8String:
_secondFactorQueue
_startListeningForSecondFactorCodeEntryNotification
_stopListeningForSecondFactorCodeEntryNotification
_localUserHasEmptyPassword
serviceIdentifier
companionDevice
setCompanionDevice:
_handleSecondFactorCodeEntry
_isProxyingForApp
_proxiedAppBundleID
_setProxiedAppBundleID:
_shouldSendIdentityTokenForRemoteUI
set_shouldSendIdentityTokenForRemoteUI:
_passwordPromptTitle
set_passwordPromptTitle:
_proxiedAppName
_setProxiedAppName:
_password
_setPassword:
_isPasswordEditable
set_isPasswordEditable:
_shortLivedToken
_setShortLivedToken:
_attemptIndex
set_attemptIndex:
setCdpUiProvider:
isUsernameEditable
shouldAllowAppleIDCreation
setShouldAllowAppleIDCreation:
needsCredentialRecovery
setNeedsCredentialRecovery:
needsNewAppleID
setNeedsNewAppleID:
needsPasswordChange
setNeedsPasswordChange:
isTriggeredByNotification
setTriggeredByNotification:
defaultButtonString
setDefaultButtonString:
maximumLoginAttempts
setMaximumLoginAttempts:
isEphemeral
setIsEphemeral:
httpHeadersForRemoteUI
setHttpHeadersForRemoteUI:
shouldOfferSecurityUpgrade
setShouldOfferSecurityUpgrade:
title
setTitle:
helpAnchor
setHelpAnchor:
helpBook
setHelpBook:
shouldPromptForPasswordOnly
setShouldPromptForPasswordOnly:
shouldUpdatePersistentServiceTokens
setShouldUpdatePersistentServiceTokens:
shouldPreventInteractiveAuth
setShouldPreventInteractiveAuth:
shouldForceInteractiveAuth
setShouldForceInteractiveAuth:
setAnisetteDataProvider:
setAppleIDLoginEnabled:
hasEmptyPassword
setHasEmptyPassword:
shouldRequestRecoveryPET
setShouldRequestRecoveryPET:
shouldRequestShortLivedToken
setShouldRequestShortLivedToken:
shouldRequestConfigurationInfo
setShouldRequestConfigurationInfo:
supportsPiggybacking
setSupportsPiggybacking:
anticipateEscrowAttempt
setAnticipateEscrowAttempt:
desiredInternalTokens
setDesiredInternalTokens:
isFirstTimeLogin
setFirstTimeLogin:
shouldSkipSettingsLaunchAlert
setShouldSkipSettingsLaunchAlert:
securityUpgradeContext
setSecurityUpgradeContext:
companionDeviceAnisetteData
setCompanionDeviceAnisetteData:
displayString
setDisplayString:
displayTitle
setDisplayTitle:
_generatedCode
_latitude
_longitude
_deviceClass
_deviceColor
_deviceEnclosureColor
_activeSecondFactoryEntryPrompt
_secondFactoryEntryCompletion
_companionDevice
_nativeRecoveryController
_isUsernameEditable
_shouldAllowAppleIDCreation
_needsCredentialRecovery
_needsNewAppleID
_needsPasswordChange
_isTriggeredByNotification
_isEphemeral
_shouldOfferSecurityUpgrade
_shouldPromptForPasswordOnly
_shouldUpdatePersistentServiceTokens
_shouldPreventInteractiveAuth
_shouldForceInteractiveAuth
_shouldRequestRecoveryPET
_shouldRequestShortLivedToken
_shouldRequestConfigurationInfo
_supportsPiggybacking
_anticipateEscrowAttempt
_isFirstTimeLogin
_shouldSkipSettingsLaunchAlert
_username
_reason
_defaultButtonString
_maximumLoginAttempts
_serviceIdentifiers
_DSID
_httpHeadersForRemoteUI
_title
_helpAnchor
_helpBook
_anisetteDataProvider
_isAppleIDLoginEnabled
_hasEmptyPassword
_desiredInternalTokens
_securityUpgradeContext
_companionDeviceAnisetteData
_displayString
_displayTitle
generatedCode
latitude
setLatitude:
longitude
setLongitude:
deviceClass
setDeviceClass:
deviceColor
setDeviceColor:
deviceEnclosureColor
setDeviceEnclosureColor:
setClasses:forSelector:argumentIndex:ofReply:
triggerAutoBugCaptureWithSubType:andBundleID:userInfo:
shouldCapturePromptBugForContext:
userInfoFromContext:
userInfoFromAccount:
_initWithInfo:
dateWithTimeIntervalSince1970:
decodeObjectForKey:
initWithInfo:
buildNumber
operatingSystemName
operatingSystemVersion
model
trusted
lastUpdatedDate
machineId
_trusted
_serialNumber
_operatingSystemName
_operatingSystemVersion
_model
_lastUpdatedDate
_machineId
AKExtensionItem
AKToken
AKMasterToken
AKAppleIDAuthenticationController
AKAppleIDAuthenticationLimitedUIProvider
NSObject
AKAppleIDAuthenticationUIProvider
_AKAppleIDAuthenticationContextManager
AKAppleIDAuthenticationClientProtocol
AKURLDataTask
AKURLSession
NSURLSessionDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
AuthKit
AKNativeAccountRecoveryController
CDPAuthProvider
AKFollowUpTearDownContext
NSSecureCoding
NSCoding
AKAppleIDAuthenticationClientInterface
AKConfiguration
AKDeviceListRequestContext
AKCertificatePinning
AKAccountManager
AKAppleIDServerResourceLoadDelegate
AKCircleRequestPayload
AKURLBag
AKAccountRecoveryContext
AKAppleIDSession
NSURLSessionAppleIDContext
NSCopying
AKAnisetteData
AKAbsintheSigner
AKCDPFactory
AKCircleRequestContext
AKUsernameFormatter
AKAnisetteProvisioningDaemonProtocol
AKAnisetteProvisioningDaemonInterface
AKDevice
AKAnisetteProvisioningController
AKAppleIDAuthenticationSurrogateUIProvider
AKAppleIDAuthenticationContext
SecondFactorSupport
LocationNotificationSupport
AKAppleIDAuthenticationDaemonProtocol
AKAppleIDAuthenticationDaemonInterface
AKAutoBugCapture
AKRemoteDevice
v24@0:8@16
@16@0:8
@24@0:8@16
@32@0:8@16@24
v16@0:8
@"NSDate"
@"NSString"
B24@0:8@16
@"NSMutableDictionary"
v32@0:8@16@?24
v36@0:8@16B24q28
@32@0:8@16^@24
v48@0:8@16@24@32@?40
v40@0:8@16@24@?32
v24@0:8@?16
v40@0:8Q16@24@?32
v40@0:8@16q24@?32
B24@0:8^@16
@24@0:8^@16
B32@0:8@16^@24
@?16@0:8
@"NSXPCListenerEndpoint"
@"NSXPCConnection"
@"_AKAppleIDAuthenticationContextManager"
@"NSLock"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v48@0:8@"NSError"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">40
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v48@0:8@"NSError"16@"NSString"24@"NSString"32@?<v@?@"NSNumber"@"NSError">40
v32@0:8@"AKAccountRecoveryContext"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"NSURLRequest"16@"AKAppleIDServerResourceLoadDelegate"24@?<v@?@"NSHTTPURLResponse"@"NSDictionary"@"NSError">32
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v56@0:8@16@24@32@40@?48
v36@0:8@16B24@?28
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?B@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">24
v56@0:8@"AKAppleIDAuthenticationContext"16@"NSError"24@"NSString"32@"NSString"40@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">48
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSNumber"@"NSError">24
v56@0:8@"AKAppleIDAuthenticationContext"16@"NSError"24@"NSString"32@"NSString"40@?<v@?@"NSNumber"@"NSError">48
v48@0:8@"AKAppleIDAuthenticationContext"16@"NSURLRequest"24@"AKAppleIDServerResourceLoadDelegate"32@?<v@?@"NSHTTPURLResponse"@"NSDictionary"@"NSError">40
v40@0:8@"AKAppleIDAuthenticationContext"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v48@0:8@"NSDictionary"16@"NSError"24@"NSUUID"32@?<v@?B@"NSDictionary">40
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSData"24@?<v@?B@"NSError">32
v36@0:8@"AKAppleIDAuthenticationContext"16B24@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSString"24@?<v@?@"AKAnisetteData"@"NSError">32
@"AKAppleIDAuthenticationController"
@"NSObject<OS_dispatch_queue>"
@"<AKAppleIDAuthenticationDelegate>"
v24@0:8Q16
v20@0:8B16
@"NSURLRequest"
@"NSURLSessionDataTask"
@"NSMutableData"
@"NSError"
v32@0:8@16@24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24q32q40q48
v40@0:8@16@24@32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@32@0:8@16@?24
@"NSURLSession"
@24@0:8@?16
@40@0:8@16@24@32
B32@0:8@16@24
v32@0:8@"CDPContext"16@?<v@?@"CDPContext"@"NSError">24
v40@0:8@"CDPContext"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
@"CDPRecoveryController"
@"AKAccountRecoveryContext"
@"<CDPStateUIProvider>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8q16
q16@0:8
@"NSArray"
B32@0:8^{__SecTrust=}16@24
Q24@0:8@16
v32@0:8Q16@24
@40@0:8@16@24^@32
@24@0:8q16
@"ACAccountStore"
@"ACAccountType"
@"AKDevice"
@"NSNumber"
@"AKAnisetteData"
@"NSData"
@"AKPushMessage"
@"NSDictionary"
@"<AKURLBagDictionaryProvider>"
@"NSURL"
@"AKAppleIDAuthenticationContext"
@24@0:8^{_NSZone=}16
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary">40
@"NSSet"16@0:8
v40@0:8@16@24^B32
@"AKAnisetteProvisioningController"
@32@0:8q16@24
@20@0:8i16
d16@0:8
v24@0:8d16
@"AKCircleRequestPayload"
v36@0:8B16@20@?28
v32@0:8@"AKDevice"16@?<v@?B@"NSError">24
v40@0:8@"NSData"16@"AKDevice"24@?<v@?B@"NSError">32
v36@0:8B16@"AKDevice"20@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"NSString"16@"AKDevice"24@?<v@?@"AKAnisetteData"@"NSError">32
@"NSLocale"
@28@0:8B16^@20
v28@0:8B16@?20
@24@0:8@"NSString"16
^{__CFUserNotification=}
@"AKNativeAccountRecoveryController"
@"NSUUID"
@"<AKAnisetteServiceProtocol>"
@"NSSet"
v44@0:8@16B24q28@?36
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8Q16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v44@0:8@"NSString"16B24q28@?<v@?B@"NSError">36
v44@0:8@"NSNumber"16B24q28@?<v@?B@"NSError">36
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"AKDeviceListRequestContext"16@?<v@?@"NSArray"@"NSError">24
v48@0:8@"<NSSecureCoding>"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSString"16q24@?<v@?B@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"AKCircleRequestContext"16@?<v@?@"AKCircleRequestPayload"@"NSError">24
v40@0:8@"NSString"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSDictionary"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"AKFollowUpTearDownContext"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
Invalid token string! %@
Error: Got malformed GS token data!
Value for %@ is missing/invalid!
Nil value for expected header: %@
Unable to serialized token properties! Error: %@
%@ deallocated
authkit/authenticate
BEGIN [%llu]: AuthenticateWithContext
END [%llu] %fs: AuthenticateWithContext
Request with %@
Remote authentication service returned an error: %{public}@
Remote authentication service came back with: %@
authkit/set-in-use
Remote authentication service returned an error: %@
Calling out to remote auth service for altDSID %@, service %@, inUse %@.
Result of remote call: %@. Error: %@.
Calling out to remote auth service for DSID %@, service %@, inUse %@.
authkit/fetch-user-info
Calling out to remote auth service to fetch user information for: %{public}@
Result of remote call: %{private}@. Error: %{public}@
authkit/fetch-device-list
Calling out to remote auth service to fetch device list information for: %{public}@
Result of remote call: %@. Error: %@
authkit/set-configuration-info
Calling out to remote auth service to set: %@ for identifier: %@.
authkit/fetch-configuration-info
Calling out to remote auth service to fetch configuration for identifiers: %@.
Result of remote call: %{private}@. Error: %@
authkit/check-upgrade-eligibility
HSA 2 eligibility check came back with result: %@ and error: %@
authkit/generate-login-code
Generated code: %@. Error: %@
authkit/validate-login-code
authkit/perform-circle-request
authkit/check-in
authkit/report-sign-out
authkit/report-sign-out-all
authkit/update-state-with-response
Asking akd to update state for %@ with auth response: %@
Result of updating auth state: %@. Error: %@
Failed to get passcode state with error: %@
Failed to get active code with error: %@
authkit/fetch-load-delegate
BEGIN [%llu]: FetchServerLoadDelegate
END [%llu] %fs: FetchServerLoadDelegate
Asking akd for AKAppleIDServerResourceLoadDelegate for altDSID %@
Result of getting AKAppleIDServerResourceLoadDelegate: %@. Error: %@
Asking akd for AKAppleIDServerResourceLoadDelegate for context %@
authkit/sync-follow-up-items
Synchronizing follow ups for altDSID: %@
Synchronized follow ups %@ with error %@
Failed to synchronize follow ups due to xpc error: %@
authkit/followup-teardown
Asking akd to teardown: %@
Completed teardown request; Error: %@
authkit/renew-recovery-token
Asking akd to fetch a new recovery token token with info: %@
Failed to renew recovery token: %@
authkit/verify-master-key
Asking akd to verify master key with info: %@
Failed to verify master key: %@
authkit/persist-master-key
Failed to persist master key: %@
authkit/validate-vetting-token
Asking akd to validate vetting token %@ for altDSID: %@
Vetting-token validation failed due to expired master token. Attempting to re-auth...
Unable to refresh expired master token for vetting-token validation.
Master token should be fresh now. Reattempting vetting token-validation...
Result afer reauth: Is token valid? %@. Error: %@
Result: Is token valid? %@. Error: %@
Failed to get email list: %@
Email list: %@
authkit/fetch-url-bag
Calling out to remote auth service to url bag
Synchronously calling out to remote auth service to url bag
Connection to akd was interrupted!
Connection to akd was invalidated.
Bad client! You are not supposed to provide your own implementation of AKAppleIDAuthenticationUIProvider!
authkit/should-continue
BEGIN [%llu]: ShouldContinueWithResults
END [%llu] %fs: ShouldContinueWithResults
Client has no knowledge of context ID: %@
Delegate says to continue? %@
Calling delegate...
No delegate available.
Error: We do not have a UI-capable context on the client side!
Error: We do not have a UI-capabable context on the client side!
%s (%d) called
Server has provided an invalid context lacking an ID: %@
AKURLSession %p is initializing...
NSURLSession became invalid with error: %@
Calling all pending completions.
Creating new NSURLSession with default config...
Asked to begin task with either nil request %@ or completion handler %@
Creating task for request at URL: %@
Resuming task %@ for URL %@
Cancelling task for request %@
The data parameter is nil!
Aggregating received data for task: %@
Task %@ completed! Error: %@
Error is recoverable. Checking if retry is possible.
Retrying is not available on this platform.
Detected an iCloud URL request, will not perform IdMS cert validation.
Server cert validity check failed!
Error: No response data!
There was an error parsing body data! %@
The body data was not in the expected (dictionary) format!
Starting retrieval of recovery info for appleId <%@ : %@>
Starting recovery using %@...
Failed to retrieve recovery info with error. %@
Recovered data for context: %@
Escrowed recovery info missing PRK
Escrowed recovery info missing MID
Building recovery response request
Failed to unwrap the icsc recovery identity token.
Recovery response: %@
Recovery response body: %@
Building recovery response body
Unable to get Anisette data for request %@! Error: %@
Unable to serialize request parameters! Error: %@
Invalid JSON input: %@
Adding header with services: %@
Encountered incomplete Anisette data! %@
Encountered incomplete companion Anisette data! %@
Encountered incomplete Anisette data for proxied device! %@
Cached AuthKit configurations have changed. Clearing cache...
Nil key!
Exception caught: %@
Will not allow nil altDSID to be set!
Will not allow nil DSID to be set!
DSID *must* be an NSNumber, but we got: %@
Fetching token: %@ for account %@
Nil account cannot possibly have a %@ token!
AuthKit credential is completely MIA! Account: %@. Fetch error: %@
AuthKit %@ token is missing! Account: %@. Credential: %@.
Found %@ IDMS accounts for which PRK might need to be cleared.
Attempted to remove a token for nil key
Nil credential for account %@. Odd, but no clearing is necessary.
Clearing %@ for account %@...
Successfully clear %@ for account %@
Failed to clear %@ for account %@. Error: %@
Checking if IDMS account cleanup is necessary...
Removing unusued IDMS account %@...
Failed to remove account %@. Error: %@
Successfully removed account %@.
Invalid type for value of primaryAccount account property: %@. Account: %@
Invalid type for value of appleIdAliases %@. Account: %@
Invalid type for altDSID %@. Account: %@
Attempting to unregister for all Apple IDs.
Unregistering all Apple IDs failed with error: %@
Unregistering all Apple IDs succeeded!
Could not determine passcode state with error %@
Attaching PRK header
Signing request as ephemeral
Attaching ICSC header
Signing request with service token
Signing request with ID token
Signing request with HB token
Signing request with Experimental Mode opt-in header
Building recovery context with info: %@
Not going to do anything with non-HTTP response from URL: %@
Trying to get new Anisette headers to retry request for %@...
Unable to append header for request %@! Error: %@
Passing along decorated request for: %@
Using proxied Anisette data for headers to URL: %@.
Fetching paired device Anisette data for headers to URL: %@.
Handling response %@ for URL %@...
No handling for HTTP status code %@ in response for URL %@
No instance of AKAnisetteProvisioningController to handle HTTP code %@ in response to %@ %@.
Sync status code (%d) received for URL: %@
HTTP 434 without sync data received!
Anisette sync was successful!
Anisette sync failed! Error: %@
Reprovision status code (%d) received for URL: %@
Unable to reprovision because Anisette data could not be erased! Error: %@
Erased Anisette data successfully. Time to provision!
Provisioning new Anisette data failed! Error: %@
Successfully provisioned new Anisette data.
%{private}s called on unsupported platform, please file a radar!
Caught exception (%@) unserializing AKDevice data (%@)
Caught exception (%@) serializing self (%@)
Setting previously unlocked state to %@
Failed to check circle status: %@
System reports isPasscodeSet: %@
authkit/anisette-provision
BEGIN [%llu]: ProvisionAnisette
END [%llu] %fs: ProvisionAnisette
Remote Anisette service returned an error: %@
Remote Anisette service successfuly provisioned.
authkit/sync-sim
Remote Anisette service successfuly resynced provisioning data.
authkit/anisette-erase
BEGIN [%llu]: EraseAnisette
END [%llu] %fs: EraseAnisette
Remote Anisette service successfuly erased provisioning data.
authkit/anisette-for-request
Not allowed to use Anisette data with non-HTTPS URLs.
authkit/fetch-anisette
BEGIN [%llu]: FetchAnisette
Remote Anisette service returned Anisette data.
END [%llu] %fs: FetchAnisette
authkit/legacy-anisette
Remote Anisette service returned legacy Anisette data.
%@ being updated by %@
self.username is nil
Starting native recovery flow with context: %@
Dismissing native recovery flow
Username and password already present.
Will prompt for password...
Will prompt for username and password...
Client %{public}@ requested authentication.
Showing login error...
Canceling second-factor entry prompt.
Nothing to dismiss right now.
Listening for code entry notification...
No longer listening for code entry notification.
Notified that 2FA code was entered, but code is empty!
Passing 2FA code to akd.
Dropping 2FA code because we are currently holding a reply block.
Closing login code prompt.
Received notification of login code entry. Forwarding to observer %@.
@(#)PROGRAM:AuthKit  PROJECT:AuthKit-1
