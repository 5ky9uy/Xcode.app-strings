@@(#)PROGRAM:ProtectedCloudKeySyncing  PROJECT:ProtectedCloudStorage-475.60.4
URKey
PCSUserRegistry
PCSUserRegistryMobileBackup
PCSUserRegistrySubscription
doneSubscription
publicKey
escrow
firstSeen
identity
keyStatus
serverChangeToken
MBserverChangeToken
com.apple.ProtectedCloudStorage
UserRegistry
PCS-APS
v8@?0
v24@?0q8@"NSError"16
com.apple.icloud-container.
com.apple.protectedcloudstorage.protectedcloudkeysyncing
v24@?0@"NSString"8@"NSError"16
done
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v16@?0@"CKRecord"8
v24@?0@"CKRecordID"8@"NSString"16
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v16@?0@"NSError"8
v24@?0@"CKAccountInfo"8@"NSError"16
No iCloud account
record
UserRegistryStats
deadbeef04d137be2e1730235f5664094b831186
MobileBackup
v16@?0r^v8
v16@?0^{__CFString=}8
TRUEPREDICATE
v24@?0@"NSArray"8@"NSError"16
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
mainOperationQueue
T@"NSOperationQueue",&,V_mainOperationQueue
resyncRegistryAction
T@"PCSDelayedAction",&,V_resyncRegistryAction
container
T@"CKContainer",&,V_container
mobileBackup
T@"PCSMobileBackup",&,V_mobileBackup
recordZoneID
T@"CKRecordZoneID",&,V_recordZoneID
mobileBackupRecordZoneID
T@"CKRecordZoneID",&,V_mobileBackupRecordZoneID
deviceIdentifier
T@"NSString",&,V_deviceIdentifier
deviceName
T@"NSString",&,V_deviceName
accounts
T@"AccountsModel",&,V_accounts
oslog
T@"NSObject<OS_os_log>",&,V_oslog
userdb
T@"UserRegistryDB",&,V_userdb
resubmitSyncing
TB,V_resubmitSyncing
queue
T@"NSObject<OS_dispatch_queue>",&,V_queue
stats_dirty
TB,V_stats_dirty
currentSyncOperations
T@"PCSRegistryOperationPair",&,V_currentSyncOperations
pendingSyncOperations
T@"PCSRegistryOperationPair",&,V_pendingSyncOperations
cloudKitRateLimitedOp
T@"NSOperation",&,V_cloudKitRateLimitedOp
stats
T@"UserRegistryStats",&,V_stats
%@-%@%@
Timed out waiting for a reply to %@ message with ID %@
timeoutTimer
T@"NSObject<OS_dispatch_source>",&,V_timeoutTimer
replyBlock
T@?,C,V_replyBlock
completion
T@?,C,V_completion
com.apple.ProtectedCloudStorage.MessagerRegistration
com.apple.ProtectedCloudStorage.IDSMessaging
com.apple.ProtectedCloudStorage.outstandingReply
pendingReplies
T@"NSMutableDictionary",R,V_pendingReplies
internalQueue
T@"NSObject<OS_dispatch_queue>",R,V_internalQueue
service
T@"IDSService",R,V_service
serviceDelegateSet
TB,V_serviceDelegateSet
transaction
T@"NSObject<OS_os_transaction>",&,V_transaction
delegate
T@"<PCSIDSMessagingDelegate>",W,N,V_delegate
com.apple.ProtectedCloudStorage.device_internal_queue
%@%@
isConnected
TB,V_isConnected
isActivePairedDevice
TB,V_isActivePairedDevice
isTombstone
TB,V_isTombstone
syncingIsRestricted
TB,V_syncingIsRestricted
observers
T@"NSHashTable",R,V_observers
idsDeviceIdentifier
T@"NSString",R,V_idsDeviceIdentifier
pairingID
T@"NSUUID",R
supportsPCSKeySync
TB,R
isReachable
model
T@"NSString",R
watchSize
T@"NSString",R,V_watchSize
buildVersion
T@"NSString",R,V_buildVersion
osVersion
T@"NSString",R,V_osVersion
serialNumber
T@"NSString",R,V_serialNumber
UUID
T@"NSString",R,V_UUID
completionBlockWithError
T@?,C,V_completionBlockWithError
com.apple.appconduitd.PCSDeviceManager.internal
devices
T@"NSMutableDictionary",R,V_devices
activePairedDevice
T@"PCSDevice",&,V_activePairedDevice
T@"<PCSDeviceManagerDelegate>",W,V_delegate
allDevices
T@"NSArray",R
%@(%@,%@)
%@(%@)
finished 
cancelled
executing
ready
pending
<%@: %@ error:%@>
<%@: %@%@>
 dep:
<%@ (%p): %@ error:%@>
<%@ (%p): %@%@>
B32@?0@8Q16^B24
operationUUID
T@"NSString",&,V_operationUUID
error
T@"NSError",&,V_error
<PCSRegistryOperationPair: %@, %@>
actualOperation
T@"PCSRegistryOperation",&,V_actualOperation
finishOperation
T@"PCSRegistryOperation",&,V_finishOperation
message
T@"NSDictionary",R,V_message
idsContext
T@"IDSMessageContext",R,V_idsContext
fromID
T@"NSString",R,V_fromID
PCSIDSSyncing
v16@?0@"PCSPeerSyncing"8
force
%@ - %@
transport
T@"PCSIDSTransport",&,V_transport
manager
T@"PCSKeySyncing",&,V_manager
peers
T@"NSMutableDictionary",&,V_peers
syncingQueue
T@"NSObject<OS_dispatch_queue>",&,V_syncingQueue
T@"NSOperationQueue",&,V_queue
com.apple.private.alloy.pcskey.sync
inital sync
Current
Keys
iCDPFlag
v24@?0@"PCSIDSMessage"8@"NSError"16
v32@?0@"NSString"8Q16^B24
reply
v20@?0B8@"NSError"12
device
T@"PCSDevice",&,V_device
keys
T@"NSData",&,V_keys
pendingRequest
TB,V_pendingRequest
clientVersion
Ti,V_clientVersion
client
T@"PCSKeyClient",&,V_client
syncingManager
T@"PCSKeySyncing",&,V_syncingManager
actionOnTrigger
T@?,C,V_actionOnTrigger
delayInSeconds
TQ,V_delayInSeconds
operationQueue
T@"NSOperationQueue",&,V_operationQueue
waitSource
T@"NSObject<OS_dispatch_source>",&,V_waitSource
pendingTransaction
Tq,V_pendingTransaction
noTransaction
Tq,V_noTransaction
running
TB,V_running
PCSDelayedActionQueue
com.apple.security.PCSIdentityBackup
lastSeen
lastHash
name
lastSent
failures
numberHandshakes
firstSync
protocol
dsid
iCDP2
circle2
uuid
T@"NSString",&,V_uuid
T@"NSString",&,V_buildVersion
T@"NSDate",&,V_firstSync
T@"NSDate",&,V_lastSeen
T@"NSData",&,V_lastHash
T@"NSString",&,V_name
Ti,V_failures
T@"NSDate",&,V_lastSent
protocolVersion
Tq,V_protocolVersion
iCDP
TB,V_iCDP
circle
TB,V_circle
isNewWatch
TB,V_isNewWatch
Tq,V_numberHandshakes
v32@?0@?<v@?@"NSString">8Q16^B24
clients
v32@?0@8@16^B24
settings
T@"NSUserDefaults",&,V_settings
database
T@"UserRegistryDB",&,V_database
notifyHooks
T@"NSMutableArray",&,V_notifyHooks
PCSAccountQueue
ACDAccountStoreDidChangeNotification
v12@?0i8
No primary AppleAccount
No username found on accounts
No dsid found on accounts
store
T@"ACAccountStore",&,V_store
accountsChanged
TB,V_accountsChanged
username
T@"NSString",R,V_username
T@"NSString",R,V_dsid
identifier
T@"NSString",R,V_identifier
lastError
T@"NSString",R,V_lastError
testRollEpoch
com.apple.ProtectedCloudStorage.scheduledKeyroll
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.ProtectedCloudStorage.test.mobileBackupStateChange
com.apple.nanoregistry.paireddevicedidchangeversion
com.apple.pairedsync.syncDidComplete
com.apple.ProtectedCloudStorage.updatedKeys
com.apple.security.view-change.PCS
com.apple.security.secureobjectsync.circlechanged
com.apple.ProtectedCloudStorage.mobileBackupStateChange
nextRegistrySync
registrySyncIdentifier
lastMobileBackupStatus
No last mobile backup status, but have a keyroll epoch time (%@)
False alarm check for backup state change
v48@?0I8^{__CFString=}12B20B24i28^{__CFString=}32^{__CFString=}40
v32@?0@"NSData"8@"PCSMTT"16@"NSError"24
com.apple.ProtectedCloudStorage.test.mobileBackupStateChange.success
Failed keyroll operations for  %d of %d keys
Skipping escrow proxy sync, could not determine dsid and/or identifier: %@
No ServiceName Specified
Failed getting dsid: %@
Manatee not enabled for service %@
Manatee not supported on this account: %@
Manatee not supported on this device
v40@?0@"NSNumber"8@"NSNumber"16@"NSNumber"24@"NSError"32
v44@?0^{_PCSIdentityData=}8@"NSData"16@"PCSMTT"24B32@"NSError"36
request already pending
Mobile backup is disabled
v32@?0@8Q16^B24
No user registry
test
restore
DSID missing
Failed to get identities
Would Be
PCSUserRegistry disabled for devices
PCSUserRegistry disabled for device based escrow keys
reportStatus
view
global
currentTLK
keystate
waitforunlock
readypendingunlock
initializing
initialized
fetchcomplete
needrefetch
badcurrentpointers
newtlksfailed
fetching
waitfortlk
unhealthy
healtlkshares
healtlksharesfailed
waitforfixupoperation
resetzone
T@"NSObject<OS_dispatch_queue>",&,V_internalQueue
registry
T@"PCSUserRegistry",&,V_registry
registryQueue
T@"NSObject<OS_dispatch_queue>",&,V_registryQueue
triggerWatchSyncingAction
T@"PCSDelayedAction",&,V_triggerWatchSyncingAction
serialOperationQueue
T@"NSOperationQueue",&,V_serialOperationQueue
scheduledKeyrollActivity
T@"NSObject<OS_xpc_object>",&,V_scheduledKeyrollActivity
com.apple.private.protectedcloudstorage.keysyncing
PCSSync
com.apple.ProtectedCloudStorage.fortnightly
com.apple.notifyd.matching
init
alloc
containerWithIdentifier:
initWithZoneName:ownerName:
copyMachineIdentifier
defaultAccountsModel
initWithDelay:operationQueue:
syncUserRegistry
setAction:
setHoldTransaction:
dsid
initWithDSID:
setUserdb:
userdb
oslog
cacheUserRegistryStats
stats
stats_dirty
setStats_dirty:
queue
_onqueueSaveUserRegistryStats
setQualityOfService:
setTimeoutIntervalForResource:
container
lastfetchRecordZoneChangesAtStart
accountStatusWithCompletionHandler:
defaultCenter
checkAccountStatus:
addObserver:selector:name:object:
initWithEnvironmentName:queue:
setDelegate:
stringByAppendingString:
arrayWithObjects:count:
setEnabledTopics:
serverPreferredPushEnvironmentWithCompletionHandler:
setupSubscriptions:
getConfigData:
initWithSubscriptionID:
setNotificationInfo:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
dataWithBytes:length:
replaceConfigRecord:data:
setModifySubscriptionsCompletionBlock:
userInitiatedConfiguration
setConfiguration:
addDatabaseOperation:
pushNotifications
setPushNotifications:
flushStats
_onqueueDeleteServerChangeToken:
clearCloudKitCache
zoneReset
setZoneReset:
createPendingSyncOperation:
setCurrentSyncOperations:
mainOperationQueue
actualOperation
addOperation:
getServerChangeToken:
setPreviousServerChangeToken:
dictionaryWithObjects:forKeys:count:
initWithRecordZoneIDs:optionsByRecordZoneID:
setFetchAllChanges:
addDependency:
recordID
recordName
zoneID
mobileBackupRecordZoneID
isEqual:
saveEscrowChange:
setRecordChangedBlock:
deleteEscrowID:
setRecordWithIDWasDeletedBlock:
domain
isEqualToString:
saveServerChangeToken:forKey:
setRecordZoneFetchCompletionBlock:
fetchRecordZoneChanges
setFetchRecordZoneChanges:
setError:
setLastfetchRecordZoneChangesAtStart:
setFetchRecordZoneChangesCompletionBlock:
privateDatabase
pendingSyncOperations
finishOperation
currentSyncOperations
setPendingSyncOperations:
init:finish:
cloudKitRateLimitedOp
error
addExecutionBlock:
accountInfoWithCompletionHandler:
errorWithDomain:code:userInfo:
accountStatus
hasValidCredentials
accounts
setDsid:
createZone:withName:
fetchAllChanges:
checkErrorForRetryPause:
errorShouldCauseReset:
resyncDatabase:
resyncRegistryAction
trigger
mobileBackup
isBackupEnabled
startBackupOfNewMobileBackupIdentities
blockOperationWithBlock:
initRequiringSecureCoding:
encodeObject:forKey:
recordType
objectForKeyedSubscript:
encodedData
replaceRecordID:data:publicKey:
deleteRecordID:
initForReadingFromData:error:
class
decodeObjectOfClass:forKey:
setStats:
recordFetch
setRecordFetch:
recordModify
setRecordModify:
deleteRecordAll
privateCloudDatabase
code
userInfo
allValues
countByEnumeratingWithState:objects:count:
doubleValue
setCloudKitRateLimitedOp:
initWithZoneName:
initWithRecordZonesToSave:recordZoneIDsToDelete:
setModifyRecordZonesCompletionBlock:
setEscrowKey:escrowBlob:
deleteEscrowKey:
queryEscrowKey:
queryEscrowName:
count
mutableCopy
removeObjectsInRange:
arrayWithArray:
subarrayWithRange:
statModify
initWithRecordsToSave:recordIDsToDelete:
setSavePolicy:
cancel
pushMobileBackupRecordsToCloudKit:removeObjects:
setModifyRecordsCompletionBlock:
setObject:forKeyedSubscript:
initWithRecordName:zoneID:
initWithRecordType:recordID:
date
identityCopySet
mobileBackupKeyRecordIdentity:version:
etag
keyRecord:withName:zone:
updateEscrowData:escrowIdentity:identity:
addObject:
scanPCSIdentitiesForNewMobileBackupRecords
array
lastError
longValue
isKindOfClass:
copy
setData:
setFlags:
queryEscrowKeys
loadMobileBackupKeysFromDB
extractMobilebackupKeyEscrow:
predicateWithFormat:
initWithRecordType:predicate:
performQuery:inZoneWithID:completionHandler:
queryMobileBackupKeysFromCloudKit:
ckRecordListToRecordIDs:
allKeys
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
initWithBackup:
setupStatCache
setupCloudKitSyncing
registerCloudKitNotifications
saveRecord:
statFetch
deleteMobileBackupZone
queryEscrowID:
keyRecordIdentity:device:version:
checkRegistry:
allMobileBackupKeys
fetchMobileBackupRecordIDsWithError:
userDBBackupRecordIDsWithError:
.cxx_destruct
setMainOperationQueue:
setResyncRegistryAction:
setContainer:
setMobileBackup:
recordZoneID
setRecordZoneID:
setMobileBackupRecordZoneID:
deviceIdentifier
setDeviceIdentifier:
deviceName
setDeviceName:
setAccounts:
setOslog:
resubmitSyncing
setResubmitSyncing:
setQueue:
_resubmitSyncing
_stats_dirty
_stats
_mainOperationQueue
_resyncRegistryAction
_container
_mobileBackup
_recordZoneID
_mobileBackupRecordZoneID
_deviceIdentifier
_deviceName
_accounts
_oslog
_userdb
_queue
_currentSyncOperations
_pendingSyncOperations
_cloudKitRateLimitedOp
stringWithFormat:
UTF8String
setReplyBlock:
setCompletion:
runReplyHandlerWithMessage:error:
setTimeoutTimer:
replyBlock
completion
timeoutTimer
initWithTimeout:queue:logDescription:sentID:replyHandler:completion:
_timeoutTimer
_replyBlock
_completion
initWithServiceName:
initWithService:
service
internalQueue
addDelegate:queue:
serviceDelegateSet
setServiceDelegateSet:
idsDeviceIdentifier
setWithObject:
numberWithDouble:
numberWithBool:
sendMessage:toDestinations:priority:options:identifier:error:
pendingReplies
removeObjectForKey:
setTransaction:
idsContext
expectsPeerResponse
message
fromID
outgoingResponseIdentifier
incomingResponseIdentifier
initWithMessage:idsContext:fromID:
delegate
incomingMessage:fromDevice:
transportWithIDSServiceName:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
sendMessage:toDevice:withPriority:timeout:logDescription:handleReply:
sendResponse:toMessage:withPriority:timeout:logDescription:
copyLocalPairedDevices
transaction
_serviceDelegateSet
_delegate
_pendingReplies
_internalQueue
_service
_transaction
weakObjectsHashTable
observers
removeObject:
isConnected
isActivePairedDevice
_onQueue_isReachable
length
addObserver:
removeObserver:
pairingID
supportsPCSKeySync
isReachable
model
setIsActivePairedDevice:
setIsConnected:
isTombstone
setIsTombstone:
watchSize
buildVersion
osVersion
serialNumber
UUID
syncingIsRestricted
setSyncingIsRestricted:
_isActivePairedDevice
_isConnected
_isTombstone
_syncingIsRestricted
_idsDeviceIdentifier
_watchSize
_buildVersion
_osVersion
_serialNumber
_UUID
_observers
completionBlockWithError
initWithAccountsModel:
main
setCompletionBlockWithError:
_completionBlockWithError
activePairedDevice
devices
setActivePairedDevice:
newDevices:removedDevices:
sharedManager
currentActivePairedDevice
deviceForIDSIdentifier:
deviceForPairingID:
allDevices
setSimulatedDevices:
_devices
_activePairedDevice
UUIDString
name
operationUUID
isFinished
isCancelled
isExecuting
isReady
operationStateString
selfname
pendingDependenciesString:
dependencies
indexesOfObjectsPassingTest:
objectsAtIndexes:
componentsJoinedByString:
setOperationUUID:
_error
_operationUUID
setActualOperation:
setFinishOperation:
_actualOperation
_finishOperation
_message
_idsContext
_fromID
dictionary
transport
handleIncomingMessage:
connectionForDevice:complete:
syncingQueue
peers
manager
initWithDevice:syncingManager:
setObject:forKey:
updateLastSeen
addOperationWithBlock:
checkSyncing:
boolValue
getClientWithIdentifier:
setName:
saveClient:
initWithManager:transport:serialQueue:
havePeers
checkSyncingForPeer:force:
triggerIDSSyncing:
devicesAreNowNearby:
devicesAreNoLongerNearby:
setTransport:
setManager:
setPeers:
setSyncingQueue:
_transport
_manager
_peers
_syncingQueue
defaultSyncingManager
device
client
setLastSeen:
numberWithUnsignedInt:
lastSent
timeIntervalSinceDate:
lastSeen
failures
checkRatelimit:
timeUntilSyncing
lastHash
isEqualToData:
updateClient:
protocolVersion
sendKeys
copyAllPCSKeys:
copySHA256Hash:
checkHashWithRateLimit:
ratelimitClientSyncing
pendingRequest
setKeys:
setPendingRequest:
numberHandshakes
setNumberHandshakes:
setLastSent:
keyFailure:
intValue
setClientVersion:
haveKeys:
sendKeysOld
syncingManager
setProtocolVersion:
sendCommand:data:dsid:handleReply:
keys
signalComplete:
pcsKeyData:
enumerateObjectsUsingBlock:
updateSyncedKeysToDevice:type:keys:
sendSomeKeys:dsid:
sendCurrentKeys:
sendKeys:dsid:handleReply:
copyIdentitySet
sendCurrents:dsid:handleReply:
outStandingPCSKeys:
iCDPStatus
companionCircleMember
iCDP
circle
setPeeriCDPStatus:
setPeerCircleStatus:
sendiCDPStatus:circleStatus:handleReply:
setBuildVersion:
setFailures:
firstSync
setFirstSync:
data
setLastHash:
setICDP:
setCircle:
numberWithInt:
numberWithInteger:
sendReply:error:toMessage:
defaultPCSSyncing
triggerSyncingWithEscrowProxy:complete:
uuid
setDevice:
clientVersion
setClient:
setSyncingManager:
_pendingRequest
_clientVersion
_device
_keys
_client
_syncingManager
actionOnTrigger
setActionOnTrigger:
delayInSeconds
setDelayInSeconds:
operationQueue
setOperationQueue:
waitSource
setWaitSource:
pendingTransaction
setPendingTransaction:
noTransaction
setNoTransaction:
running
setRunning:
_running
_actionOnTrigger
_delayInSeconds
_operationQueue
_waitSource
_pendingTransaction
_noTransaction
setUuid:
updateWithValues:dsid:
setIsNewWatch:
numberWithLong:
dictionaryWithDictionary:
initWithName:values:dsid:
getValues:
isNewWatch
_iCDP
_circle
_isNewWatch
_failures
_uuid
_firstSync
_lastSeen
_lastHash
_name
_lastSent
_protocolVersion
_numberHandshakes
userRegistry
beginExclusiveTransaction
markMirrorKey:type:
setMirrorKey:service:type:publicIdentity:
updateMirrorKey:service:type:newType:current:
endTransaction:
updateSyncDevice:seen:version:
syncedKeyToDevice:type:device:
syncDevices
missingKeysFromDevice:type:
dataWithLength:
bytes
mutableBytes
settings
dictionaryForKey:
updateSyncDevice:version:
enumerateKeysAndObjectsUsingBlock:
addUpdateNotify:
storePCSKeyData:current:
setiCDPStatus:
setCompanionCircleMember:
syncKeysWithDatabase
allClients
setSettings:
database
setDatabase:
notifyHooks
setNotifyHooks:
_settings
_database
_notifyHooks
setStore:
setAccountsChanged:
update
accountsChanged
store
aa_primaryAppleAccount
aa_appleId
aa_personID
identifier
username
_accountsChanged
_username
_dsid
_identifier
_lastError
_store
initWithPCSKeySyncing:
setupMetrics
setInternalQueue:
setMaxConcurrentOperationCount:
defaultMobileBackup
setRegistry:
registry
setRegistryQueue:
setTriggerWatchSyncingAction:
triggerWatchSyncingAction
triggerWatchSyncing:
setupActivity
setScheduledKeyrollActivity:
triggerKeyRolling
queuedCheckRegistry:withReply:
setWithArray:
containsObject:
shouldRoll
notifyKeyRegistry
objectForKey:
compare:
timeIntervalSince1970
serialOperationQueue
boolForKey:
getRollEpoch
logger
logRecoverableError:forEvent:withAttributes:
recordEpochForKeyroll
logSuccessForEvent:
setBool:forKey:
synchronize
timeIntervalSinceNow
attemptTimer
scheduledKeyrollActivity
dateWithTimeIntervalSince1970:
getServicesToRoll
createIdentity:roll:sync:complete:
scheduleRollAttempt
stringForKey:
dateByAddingTimeInterval:
initWithIdentitySet:dsid:
restoreMobileBackup:withReply:
createNewIdentity:roll:sync:complete:
triggerWatchSyncing
notifyInternalEvent:
registryQueue
notifyDailyEvent
waitUntilFinished
initWithInt:
controlObject:
rpcStatus:reply:
getPCSKeyHash:
getAllClients:
syncKeys:withReply:
requestKeys:withReply:
triggerDaily:withReply:
manateeStatus:complete:
keyRollPending:complete:
fetchAllDeviceKeys:withReply:
triggerUserRegistryCheck:withReply:
deleteThisDevice:withReply:
escrowRecordIDs:withReply:
mobileBackupRecordIDsWithReply:
userDBBackupRecordIDsWithReply:
fetchStats:
mobileBackupStatus:
checkForBackupStateChange
notifyEvent:
setSerialOperationQueue:
_registry
_registryQueue
_triggerWatchSyncingAction
_serialOperationQueue
_scheduledKeyrollActivity
valueForEntitlement:
processIdentifier
interfaceWithProtocol:
setExportedInterface:
exportedInterface
setExportedObject:
resume
listener:shouldAcceptNewConnection:
initWithMachServiceName:
stringWithUTF8String:
currentRunLoop
Failed to initalize UserRegistryDB
accountStatusWithCompletionHandler: %d error: %@
Starting to sync
Stoping syncing
subscription completed
Couldn't create database subscription; syncing is severely degraded: %@
didReceiveToken: %@, triggering syncing
Creating resyncing operation, finishing with %@
received new record(%@) for: %@
got update for unknown zone: %@
Record deleted: %@
got delete for unknown zone: %@
Got CloudKit error while fetching: %@ for zone:%@
Got other error: %@for zone:%@
fetchRecordzoneChangesCompletionBlock error: %@
Creating new syncing operation, after %@
Returning pending syncing operation: %@
rate-limited by CloudKit
syncing operation (%@) no longer pending
Finished syncing operation %@: (%@)
Not logged into iCloud (%@)
iCloud account in grey mode (%@)
Caching DSID from Accounts
No DSID available. Quitting sync.
Creating zone before syncing
Fetch failed for some terrible reason: (%@), restarting entire sync process
Fetching failed for some reason: (%@), scheduling sync restart
MobileBackup is off; not pushing data to CloudKit
startBackupOfNewMobileBackupIdentities as part of syncing done: (%@)
Pushing new changes failed for some reason: (%@), scheduling retry
No new items to push; finishing
Created new pending syncing operation: %@
CloudKit timeout complete
Delaying %.1f seconds for CK operations
Error creating zone (%@): %@
Created zones: %@
Error deleting zone (%@): %@
Deleted zones: %@
pushMobileBackupRecordsToCloudKit Starting
updating %u records, removing %u records
Finished uploading registry records (%@)
Stored record, saving in cache: %@
Retriggering syncing due to error (%@)
Failed to create escrow identity: %@
MobileBackup is off; no new records!
No PCSIdentities to Escrow to MobileBackup
No escrow identity
Will store %@ as (%@)
Couldn't escrow identity %@ (%@); skipping
Already stored %@ as (%@); skipping
No identities for %@
Not doing MobileBackup for %@
Harvested %lu records for MobileBackup escrow from Local PCS
Starting startBackupOfNewMobileBackupIdentities
startBackupOfNewMobileBackupIdentities - pushing new keys to cloudKit
No local mobile backup key changes
Fail getting dsid: %@
Failed to get PCS identities: %@
Converting CKRecords to PCSKeybagKeys
Converted %lu CKRecords to PCSKeybagKeys
loadMobileBackupKeysFromDB returning (count %lu)
queryMobileBackupKeysFromCloudKit
queryMobileBackupKeysFromCloudKit: error: %@
queryMobileBackupKeysFromCloudKit got keys (count %lu)
queryMobileBackupKeysFromCloudKit returning (count %lu)
Failed to create IDSService for %@
Sent %@ message with IDS UUID %@
Error occurred sending %@ message with no replyHandler: %@
Reply attempted to message that did not expect peer response: %@ -> %@
Failed to get response ID from original message id %@; dropping reply
Failed to send response with ID %@ to message with ID %@
Received reply for message ID %@ with ID %@
Got message with ID %@ with response ID %@, but no reply handler available
Received message with ID %@
Got message from %@ with id %@ with no delegate set
Error occurred sending message %@: %@
Synchronize keys with escrow proxy
Fail to synchronize keys: %@
Synchronize keys complete
No active paired device
No IDS Device registered with identifier %@
Failed to find device with pairing ID %@
Failed to get PCSDevice for identifier %@; dropping message.
Failed to get sync connection for IDS device %@; dropping message
syncing  with: %@
Device %@ has disappeared
Device %@ appeared. isActive:%d, isConnected:%d
Device %@ is now nearby (isActive:%d)
Device %@ is no longer nearby (isActive:%d)
sending message: %d to peer: %@
sending keys to peer: %@
Device %@ checking if syncing needed
Can't get initial data: %@
Can't get initial hash: %@
Client %@ already have uptodate keys
Client %@ have same os version: %@
Ratelimit sending to device %@
initial request to device %@ already pending
Sending inital check-in to device %@ hash: %@
reply from initital checkin: %@ error: %@
Client have keys: %@
Client requests updating keys: have %@
Client requests new protocol
sendKeys request to device %@ already pending
Can't get dsid
Sending keys to device %@ hash:%@
reply from send key: %@ error: %@
client confirms it have key: %@
client failed
No key to send [to device: %@
sending %lu (%lu left) keys to
client confirms stored keys: %u
device: %@ type: 1 keys: %@
client failed: %d
set current: %@
Can't get pending keys
local iCDP: %d, cached peer iCDP status: %d
local circle: %d, cached peer circle status: %d
Setting peer iCDP status to: %d and circle to: %d
Failed to send message to peer: %@, trying later
Peer confirmed iCDP state too: %d
Other failure to store iCDP state: %d, trying later
handleIncomingMessage watch requested keys: %@
handleIncomingMessage sync with escrow proxy: %@
sync with escrow proxy for service %@
handleIncomingMessage unknown command %d from device: %@
Failed to fetch dsid from accounts: %@
Failed to get identity set for pcsKey extraction
Failed to get identity for public key %@
Failed to get exported data for identity %@: %@
Failed to parse key data: %@
Failed to store identity %@: %@
Already have a local copy of: %@
Failed to get iCDP: %@
Failed to set iCDP: %@
Failed to get database
Updating service %@
Failed to get copy of identites of service type: %@
failed to open database transaction
Syncing %lu identites %@ with database
no accounts found: %@
Switching from DSID %{public}@ to %{public}@
Error checking registry (%@)
Got darwin notification %@
MOBSTATE Notifying registry.
There is a pending keyRoll for epoch %@
getServicesToRoll: no pending roll
getServicesToRoll: no identity set
Keyroll triggered but couldn't allocate a returnSet
Keyroll triggered but there is no self
Keyroll triggered but no services are defined for rolling
Keyroll triggered but we've already completed rolling
Manatee keyroll & sync with CKKS registry for all eligible services
CKKS registry roll & sync failed for service %@ with: %{public}@ (mtt: %@)
CKKS registry roll & sync for service %@ completed: %@
Successfully completed keyroll operations for  %d keys
Failed keyroll operations for  %d keys
PCSCKKSRegistrySync
Manatee sync with CKKS registry for service %{public}@
CKKS registry sync failed with: %{public}@ (mtt: %@)
CKKS registry sync completed: %@
Trigger syncing with escrow proxy on behalf of cloudd: next sync: %{public}@
skipping sync due to ratelimiting
setting cloudd expiration to: %@
Escrow proxy sync reported: %d: %{public}@
Completed best-effort mobile backup restore with recoverIssue:%@ missing:%@ present:%@ error:%@
Timeout expired for best-effort backup recovery. Continuing with CKKS sync.
Kicking off user registry sync due to new messages3 identity
Already a request (recently) pending, returning early
Allowing checkRegistry calls again
Requsted keys sync
Fetching all device keys
PCSRestoreCKBackupWithCompletion: %s
restoreMobileBackup: sync finished with: %@
restoreMobileBackup: got reply from server
PCSRestoreCKBackupWithCompletion failed with: %@
%@ Adding missing identity
Already have identity
recover stats: Recovered: %d AlreadyPresent: %d RecoveryIssue: %d
PCSReportManateeStatus circle status: %d: %@
PCSReportManateeStatus rpcStatus: %@
PCSReportManateeStatus rpcStatus reply: %@
PCSReportManateeStatus %@ rpcStatus: %d
Client pid: %d doesn't have entitlement: %@
PCSUserRegistry
APSConnectionDelegate
NSObject
PCSIDSReplyContext
PCSIDSTransport
IDSServiceDelegate
PCSDevice
EscrowProxySyncOperation
PCSDeviceManager
PCSIDSMessagingDeviceManager
PCSRegistryOperation
PCSRegistryOperationPair
PCSIDSMessage
PCSIDSSyncing
PCSIDSMessagingDelegate
PCSPeerSyncing
PCSDelayedAction
PCSKeyClient
PCSKeySyncing
AccountsModel
PCSSyncing
PCSSyncingProtocol
ServiceDelegate
NSXPCListenerDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v28@0:8@16B24
v24@0:8@16
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
@24@0:8@16
v16@0:8
v20@0:8B16
@32@0:8@16@24
B40@0:8@16^{_PCSIdentityData=}24^{_PCSIdentityData=}32
@40@0:8^{_PCSIdentityData=}16@24@32
@32@0:8^{_PCSIdentityData=}16@24
B24@0:8@?16
^{_PCSIdentitySetData=}16@0:8
@24@0:8^@16
@"UserRegistryStats"
@"NSOperationQueue"
@"PCSDelayedAction"
@"CKContainer"
@"PCSMobileBackup"
@"CKRecordZoneID"
@"NSString"
@"AccountsModel"
@"NSObject<OS_os_log>"
@"UserRegistryDB"
@"NSObject<OS_dispatch_queue>"
@"PCSRegistryOperationPair"
@"NSOperation"
@64@0:8d16@24@32@40@?48@?56
@?16@0:8
v24@0:8@?16
@"NSObject<OS_dispatch_source>"
v56@0:8@16@24@32@40@48
v64@0:8@16@24@32@40@48@56
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v40@0:8@16@24@?32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v64@0:8@16@24q32d40@48@?56
v56@0:8@16@24q32d40@48
@"<PCSIDSMessagingDelegate>"
@"NSMutableDictionary"
@"IDSService"
@"NSObject<OS_os_transaction>"
@"NSHashTable"
@"<PCSDeviceManagerDelegate>"
@"PCSDevice"
@"NSError"
@"PCSRegistryOperation"
@40@0:8@16@24@32
@"NSDictionary"
@"IDSMessageContext"
v32@0:8@"PCSIDSMessage"16@"NSString"24
v32@0:8@16@?24
@"PCSIDSTransport"
@"PCSKeySyncing"
v44@0:8I16@20@28@?36
v32@0:8B16B20@?24
d24@0:8d16
d16@0:8
v36@0:8i16@20@28
i16@0:8
v20@0:8i16
@"NSData"
@"PCSKeyClient"
@32@0:8Q16@24
v24@0:8Q16
q16@0:8
v24@0:8q16
@"NSDate"
B28@0:8@16B24
B20@0:8B16
B32@0:8@16@24
B36@0:8@16i24@28
@"NSUserDefaults"
@"NSMutableArray"
@"ACAccountStore"
v40@0:8@16B24B28@?32
v28@0:8B16@?20
v24@0:8@?<v@?@"NSData"@"NSError">16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?>16
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@"NSString"16B24B28@?<v@?@"NSData"@"PCSMTT"@"NSError">32
v32@0:8@"NSString"16@?<v@?I>24
v32@0:8@"NSDictionary"16@?<v@?@"NSString"@"NSData"@"NSData"@"NSArray"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v28@0:8B16@?<v@?@"NSNumber"@"NSNumber"@"NSNumber"@"NSError">20
v24@0:8@?<v@?@"UserRegistryStats">16
v24@0:8@?<v@?B@"NSError">16
@"NSArray"16@0:8
@"PCSUserRegistry"
@"NSObject<OS_xpc_object>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
bplist00
 !"#$%&'($)*_
BuildMachineOSBuild_
CFBundleDevelopmentRegion_
CFBundleDisplayName_
CFBundleExecutable_
CFBundleIdentifier_
CFBundleInfoDictionaryVersion\CFBundleName_
CFBundleShortVersionString_
CFBundleSignature_
CFBundleSupportedPlatforms_
CFBundleVersionZDTCompiler_
DTPlatformBuild^DTPlatformName_
DTPlatformVersionZDTSDKBuildYDTSDKNameWDTXcode\DTXcodeBuild_
MinimumOSVersion_
NSHumanReadableCopyright^UIDeviceFamilyW16B2657Ren_
ProtectedCloudKeySyncing_
8com.apple.protectedcloudstorage.protectedcloudkeysyncingS6.0S1.0T????
AppleTVSimulatorQ1_
"com.apple.compilers.llvm.clang.1_0P_
appletvsimulatorT11.4V15L556_
appletvsimulator11.4T0930V9P107go
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.protectedcloudstorage.protectedcloudkeysyncing</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>backupd-connection-initiate</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.protectedcloudstorage.protectedcloudkeysyncing</string>
<key>com.apple.developer.aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.keystore.access-keychain-keys</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<string>UniqueDeviceID</string>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.appleaccount.app-hidden-from-icloud-settings</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.ckks</key>
<true/>
<key>com.apple.private.ckks.currentitempointers_read</key>
<true/>
<key>com.apple.private.ckks.currentitempointers_write</key>
<true/>
<key>com.apple.private.ckks.plaintextfields</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.packages</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.pcskey.sync</string>
</array>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.securebackupd.access</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.ProtectedCloudStorage.backup</string>
<string>com.apple.ProtectedCloudStorage</string>
</array>
<key>keychain-cloud-circle</key>
<true/>
</dict>
</plist>
