ACDManagedAccount
ACDPropertyEncryption
ACManagedDefaults
ACProtobufVariableValue
NSCopying
ACDManagedAccountType
ACAccountStore
ACAccount
ACProtobufCoding
NSObject
NSCoding
NSSecureCoding
ACAccountType
ACDOAuthSignerProtocol
ACOAuthSigner
ACProtobufVariableKeyValuePair
Accounts
ACAccountCredential
ACProtobufDataclassAction
ACAccountStoreProtocol
ACRemoteAccountStoreSession
NSXPCProxyCreating
ACAccountStoreClientSideListener
ACDManagedAuthorization
ACDManagedAccessOptionsKey
ACProtobufVariableValueList
ACProtobufAccount
ACSystemConfigManager
ACNotificationRebroadcaster
ACDManagedDataclass
ACProtobufCredentialItem
ACDAccountStoreProtocol
ACDAccountStoreInterface
ACProtobufKeyValuePair
Helpers
ACDataclassAction
ACDManagedCredentialItem
ACProtobufVariableValueDictionary
ACProtobufAccountType
ACProtobufDate
ACProtobufURL
ACDManagedAccountProperty
ACProtobufAccountCredential
ACCredentialItem
ACDispatchCerberus
ACZeroingString
ACAccountMigrationLock
ACProtobufUUID
lastCredentialRenewalRejectionDate
T@"NSDate",&,D,N
dataclassProperties
T@,&,D,N
active
T@"NSNumber",&,D,N
authenticated
identifier
T@"NSString",&,D,N
date
authenticationType
accountDescription
supportsAuthentication
owningBundleID
username
credentialType
childAccounts
T@"NSSet",&,D,N
provisionedDataclasses
parentAccount
T@"ACDManagedAccount",&,D,N
accountType
T@"ACDManagedAccountType",&,D,N
customProperties
enabledDataclasses
visible
com.apple.accounts.privacy
encrypted-data
com.apple.Dataclass.Mail
com.apple.Dataclass.Contacts
com.apple.Dataclass.Calendars
com.apple.Dataclass.Reminders
com.apple.Dataclass.Bookmarks
com.apple.Dataclass.Notes
com.apple.Dataclass.ContactsSearch
com.apple.Dataclass.DeviceLocator
com.apple.Dataclass.MediaStream
com.apple.Dataclass.SharedStreams
com.apple.Dataclass.Backup
com.apple.Dataclass.Ubiquity
com.apple.Dataclass.KeyValue
com.apple.Dataclass.Shoebox
com.apple.Dataclass.KeychainSync
com.apple.Dataclass.Content
com.apple.Dataclass.CKDatabaseService
com.apple.Dataclass.CKDeviceService
com.apple.Dataclass.CKShareService
com.apple.Dataclass.CloudPhotos
com.apple.Dataclass.Availability
com.apple.Dataclass.ShareLocation
com.apple.Dataclass.Messages
com.apple.Dataclass.BackToMyMac
com.apple.Dataclass.NetworkVPN
com.apple.Dataclass.ServerDocuments
com.apple.Dataclass.Notifications
com.apple.Dataclass.News
com.apple.Dataclass.ShareMenu
com.apple.Dataclass.SmartDefaults
com.apple.Dataclass.CloudDesktop
com.apple.Dataclass.Home
com.apple.Dataclass.CoreRoutine
com.apple.Dataclass.Health
com.apple.Dataclass.Siri
com.apple.Dataclass.Photos
none
parent
AppleID
OAuth
Kerberos
ReasonString
ShouldForce
ShouldAvoidUI
ShouldPromptBeforeRenew
LoginURL
CallbackURL
Services
AppleIDServiceType
ProxiedAppBundleID
ACShouldSave
DiscoverPropertiesForAccountCreation
DiscoverConnectionProperties
RefreshEmailAliases
RefreshEmailRules
ShouldNotUseParentAccount
ShouldNotCoalesceRequests
AllowedSSLCertificates
changed
deleted
auth
prompt
delete-all
fetch-accounts
invalidate-fetched-accounts-cache
ACAskForReply
ACLogLevel
ACOutputLevel
ACShouldSuppressPrompts
ACEnableAccountDiff
ACKeeoPasswordAround
v8@?0
%@ %@
stringValue
integerValue
unsignedIntegerValue
doubleValue
dataValue
uuidValue
dateValue
urlValue
arrayValue
setValue
dictionaryValue
hasStringValue
TB,R,N
T@"NSString",&,N,V_stringValue
hasIntegerValue
TB,N
Tq,N,V_integerValue
hasUnsignedIntegerValue
TQ,N,V_unsignedIntegerValue
hasDoubleValue
Td,N,V_doubleValue
hasDataValue
T@"NSData",&,N,V_dataValue
hasUuidValue
T@"ACProtobufUUID",&,N,V_uuidValue
hasDateValue
T@"ACProtobufDate",&,N,V_dateValue
hasUrlValue
T@"ACProtobufURL",&,N,V_urlValue
hasArrayValue
T@"ACProtobufVariableValueList",&,N,V_arrayValue
hasSetValue
T@"ACProtobufVariableValueList",&,N,V_setValue
hasDictionaryValue
T@"ACProtobufVariableValueDictionary",&,N,V_dictionaryValue
com.apple.accounts.tombstone
com.apple.accounts.retry
v16@?0@"NSError"8
void ac_dispatch_remote_sync(__strong id<NSXPCProxyCreating>, __strong ac_remote_dispatch_block_t, __strong dispatch_block_t)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Accounts_Sim/Accounts-677.3.0.13/ACRemoteDispatch.m
<Unknown File>
Invalid parameter not satisfying: %@
proxyProvider
block
connectionFailureHandler
com.apple.accounts
core
signpost
supportsMultipleAccounts
accountTypeDescription
credentialProtectionPolicy
visibility
supportedDataclasses
permission
accounts
accessKeys
syncableDataclasses
encryptAccountProperties
obsolete
ACDAccountStoreDidChangeNotification
ACAccountStoreDidChangeNotification
ACAccountCredentialsDidChangeNotification
ACAccountTypesDidChangeNotification
AccountIdentifier
account
ACAccountStoreReply
v16@?0@"NSNotification"8
com.apple.accountsd.sim.accountmanager
v24@?0@"ACAccount"8@"NSError"16
v16@?0@"<ACDAccountStoreProtocol>"8
v24@?0@"ACAccountType"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
Account type must be non-nil
v24@?0@"NSNumber"8@"NSError"16
AccountSyncDelete
Account must be non-nil
v20@?0B8@"NSError"12
v24@?0@"NSURL"8@"NSError"16
Access options are not permitted for this account type. The options argument must be nil.
Access options are required for this account type.
v24@?0q8@"NSError"16
v24@?0@"ACAccountCredential"8@"NSError"16
v24@?0@"ACCredentialItem"8@"NSError"16
Credential item must be non-nil
v24@?0@"NSSet"8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@8@"NSError"16
v24@?0@"NSString"8@"NSError"16
The dataclasses argument cannot be nil
The accountTypes argument cannot be nil
NSErrorPeerCertificateChainKey
URL must be non-nil
Auth delegate class name must be non-nil
Bundle path must be non-nil
v28@?0B8@"NSDictionary"12@"NSError"20
accountTypeIDs must be non-nil
accountTypeIDs must not be empty
remoteAccountStoreSession
T@"ACRemoteAccountStoreSession",&,N,V_remoteAccountStoreSession
effectiveBundleID
T@"NSString",R,V_clientBundleID
T@"NSArray",R,W,N
ACPropertyFullName
firstName
middleName
lastName
nickname
IdentityEmailAddress
Hostname
PortNumber
ServerPath
SSLEnabled
SSLIsDirect
AllowsInsecureAuthentication
AllowsRecoverableTrustCertificate
DisableDynamicConfiguration
Prevent Recents Syncing
configProfileIdentifier
shouldNeverUseSyncableCredential
AutodiscoverURL
EWSExternalURL
EWSInternalURL
EWSRootFolderID
AuthenticationScheme
X-APOP
smtpHostname
smtpPort
smtpRequiresSSL
imapHostname
imapPort
imapRequiresSSL
SendingAccountIdentifier
UseMailDrop
EmailAliases
mailAliasEditingURL
DisplayName
IsEnabled
IsPrimary
IsDefault
Color
EmailAddresses
EmailAddress
SecIdentityPersistentRef
SecCertificatePersistentRefs
DAAccountHost
credential
accountProperties
parentIdentifier
objectID
dirtyProperties
dirtyAccountProperties
dirtyDataclassProperties
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Accounts_Sim/Accounts-677.3.0.13/ACAccount.m
data.length != 0
%@ (%@)
en_US
type:%@
identifier: %@
accountDescription: %@
username: %@
objectID: %@
provisionedDataclasses: %@
enabledDataclasses: %@
enableAndSyncableDataclasses: %@
dataclassProperties: %@
properties: %@
parentAccount: %@
owningBundleID:%@
authenticated: %@
lastCredentialRenewalRejectedDate: %@
supportsAuthentication: %@
authenticationType: %@
credentialType: %@
created: %@
active: %@
visible: %@
%@ - %@
ACAccount can't be his own parent
You can't enable dataclasses on child accounts
%@@%@
DAAccountEmailAddress
fallback
gmail.com
apidata.googleusercontent.com
www.googleapis.com
google.com
caldav.aol.com
carddav.aol.com
aol.com
caldav.calendar.yahoo.com
carddav.address.yahoo.com
yahoo.com
webdav.facebook.com
facebook.com
dav.qq.com
qq.com
caldav.126.com
contacts.126.com
126.com
caldav.163.com
contacts.163.com
163.com
@yahoo.co.jp
caldav.calendar.yahoo.co.jp
carddav.address.yahoo.co.jp
"%@" (%@)
Changes for account %@:
Username changed from "%@" to "%@"
Account description changed from "%@" to "%@"
Parent account changed from %@ to %@
Enabled dataclasses changed from %@ to %@
Provisioned dataclasses changed from %@ to %@
Dataclass properties changed from %@ to %@
Authenticated changed from %@ to %@
Date for last credential-renewal rejection changed from %@ to %@
Active state changed from %@ to %@
Added account properties: %@
Modified account properties: %@
Removed account properties: %@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
supportsSecureCoding
TB,R
T@"NSURL",R,N
accountStore
T@"ACAccountStore",R,N
T@"ACAccount",&,N
parentAccountIdentifier
T@"NSString",R,N
T@"NSArray",R,N
T@"NSMutableSet",&,N
T@"NSDictionary",R,W,N
TB,N,GisAuthenticated
displayAccount
T@"ACAccount",R,W,N
TB,N,GisActive
dirty
TB,R,N,GisDirty
T@"NSSet",R,N,V_dirtyProperties
T@"NSSet",R,N,V_dirtyAccountProperties
T@"NSSet",R,N,V_dirtyDataclassProperties
supportsPush
creationDate
T@"NSDate",&,N
TB,N,GisVisible
shortDebugName
clientToken
accountPropertiesTransformer
T@?,C,V_accountPropertiesTransformer
T@"NSString",R,W,N
T@"ACAccountType",&,N
T@"NSString",C,N
userFullName
T@"ACAccountCredential",&,N
com.apple.twitter
com.apple.sinaweibo
com.apple.facebook
com.apple.account.SubscribedCalendar
com.apple.account.CalDAV
com.apple.account.CardDAV
com.apple.account.BookmarkDAV
com.apple.account.IMAP
com.apple.account.POP
com.apple.account.SMTP
com.apple.account.Exchange
com.apple.account.Hotmail
com.apple.account.LDAP
com.apple.account.Google
com.apple.account.Yahoo
com.apple.account.OnMyDevice
com.apple.account.IMAPNotes
com.apple.account.IMAPMail
com.apple.account.AppleAccount
com.apple.account.AppleID
com.apple.account.FaceTime
com.apple.account.Madrid
com.apple.account.GameCenter
com.apple.account.iTunesStore
com.apple.flickr
com.apple.vimeo
com.apple.linkedin
com.apple.tudou
com.apple.youku
com.apple.account.yelp
com.apple.account.tencentweibo
com.apple.account.IdentityServices
com.apple.account.kerberos.sso.
com.apple.account.DeviceLocator
com.apple.account.HolidayCalendar
com.apple.account.FindMyFriends
com.apple.account.AppleIDAuthentication
com.apple.account.CloudKit
com.apple.account.126
com.apple.account.163
com.apple.account.aol
com.apple.account.qq
com.apple.account.osxserver
com.apple.account.jabber
com.apple.account.yahooim
com.apple.account.aim
com.apple.account.idms
com.apple.account.mso
com.apple.account.SingleSignOn
com.apple.account.facebookLegacy
com.apple.account.CalDAVLegacy
com.apple.account.CardDAVLegacy
ACFacebookAppIdKey
ACFacebookPermissionsKey
ACFacebookAudienceKey
ACLinkedInAppIdKey
ACLinkedInPermissionsKey
everyone
friends
ACTencentWeiboAppIdKey
ACLiverpoolContainerId
ACBlahblahBlahTokenId
ACBlahBlahBlahAppId
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Accounts_Sim/Accounts-677.3.0.13/ACAccountType.m
identifier: %@
description: %@
objectID: %@
supportsAuthentication %@
supportsMultipleAccounts %@
obsolete %@
encryptAccountProperties %@
owningBundleID %@
supportedDataclasses %@
syncableDataclasses %@
allIdentifiers
T@"NSSet",R,C
T@"NSURL",&,N,V_objectID
Ti,N
T@,C,N
T@"NSString",&,N,V_credentialType
T@"ACAccountStore",W,N,V_accountStore
Ti,N,V_supportsAuthentication
TB,N,V_supportsMultipleAccounts
T@"NSString",&,N,V_owningBundleID
TB,N,GisObsolete,V_obsolete
T@"NSSet",R,N,V_supportedDataclasses
T@"NSSet",R,N,V_syncableDataclasses
T@"NSSet",R,N,V_accessKeys
fullDescription
TB,R,N,V_encryptAccountProperties
T@"NSString",R,N,V_accountTypeDescription
T@"NSString",R,N,V_identifier
accessGranted
v24@?0@"NSURLRequest"8@"NSError"16
com.apple.accountsd.sim.oauthsigner
shouldIncludeAppIdInRequest
TB,N,V_shouldIncludeAppIdInRequest
value
T@"NSString",&,N,V_key
T@"ACProtobufVariableValue",&,N,V_value
credentialAvailability
owningTeamID
Dirty property name '%@' not part of managed object.
object is missing required property '%@'
oauth
oauth2
password
token
oauth-token
oauth-token-secret
oath-refresh-token
oauth-expiry-date
purpose
oauth-token-nosync
rpassword
old-password
hybrid
appleid-authentication
find-my-iphone-token
find-my-iphone-siri-token
maps-token
hsa-token
find-my-friends-token
find-my-friends-app-token
back-to-my-mac-token
cloudkit-token
token-expiry-date
heartbeat-token
continuation-key
password-reset-token
password-reset-token-backup
mdm-server-token
yahoo-xympki-tokens
yahoo-xympki-token
yahoo-xympki-cookie-y
yahoo-xympki-cookie-t
yahoo-xympki-cookie-crumb
tencent-weibo-client-consumer-key
container-user-id
/t/t
credentialItems
_requiresTouchID
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Accounts_Sim/Accounts-677.3.0.13/ACAccountCredential.m
v32@?0@8@16^B24
com.apple.iOS
allSupportedKeys
requiresTouchID
TB,N,V_requiresTouchID
oauthTokenSecret
TB,N,GisDirty,V_dirty
empty
TB,N,GisEmpty,V_empty
oauthTokenNoSync
oauthRefreshToken
expiryDate
findMyiPhoneToken
mapsToken
mdmServerToken
hsaToken
tokenExpiryDate
T@"NSDate",C,N
oauthToken
type
destructive
affectedContainers
Ti,N,V_type
TB,N,V_destructive
T@"NSMutableArray",&,N,V_affectedContainers
spoofedBundleID
T@"NSString",C,N,V_spoofedBundleID
notificationsEnabled
TB,N,V_notificationsEnabled
options
grantedPermissions
bundleID
name
owningAccountTypes
values
T@"NSMutableArray",&,N,V_values
properties
T@"ACProtobufAccountType",&,N,V_accountType
hasCredential
T@"ACProtobufAccountCredential",&,N,V_credential
T@"NSString",&,N,V_identifier
hasAccountDescription
T@"NSString",&,N,V_accountDescription
hasUsername
T@"NSString",&,N,V_username
T@"NSMutableArray",&,N,V_properties
TB,N,V_authenticated
hasLastCredentialRenewalRejectionDate
T@"ACProtobufDate",&,N,V_lastCredentialRenewalRejectionDate
TB,N,V_active
TB,N,V_visible
TB,N,V_supportsAuthentication
T@"NSMutableArray",&,N,V_dataclassProperties
hasObjectID
T@"ACProtobufURL",&,N,V_objectID
hasParentAccountIdentifier
T@"NSString",&,N,V_parentAccountIdentifier
T@"NSMutableArray",&,N,V_enabledDataclasses
T@"NSMutableArray",&,N,V_provisionedDataclasses
hasAuthenticationType
T@"NSString",&,N,V_authenticationType
hasCredentialType
hasDate
T@"ACProtobufDate",&,N,V_date
hasOwningBundleID
T@"NSMutableArray",&,N,V_dirtyProperties
T@"NSMutableArray",&,N,V_dirtyAccountProperties
T@"NSMutableArray",&,N,V_dirtyDataclassProperties
ACSysConfigManagerTimerQueue
ACSysConfigManagerSCPeferencesQueue
com.apple.accounts.applicationidfrompid
com.apple.accounts.connectbeforemigrationdidfinish
com.apple.private.accounts.bundleidspoofing
com.apple.private.accounts.authdialoghost
com.apple.private.accounts.allaccounts
com.apple.accounts.twitter.defaultaccess
com.apple.accounts.appleaccount.fullaccess
com.apple.accounts.weibo.defaultaccess
com.apple.accounts.flickr.defaultaccess
com.apple.accounts.vimeo.defaultaccess
com.apple.accounts.linkedin.defaultaccess
com.apple.accounts.facebook.defaultaccess
com.apple.accounts.tudou.defaultaccess
com.apple.accounts.youku.defaultaccess
com.apple.accounts.osxserver.defaultaccess
com.apple.private.accounts.customaccesssinfo
com.apple.accounts.yelp.defaultaccess
com.apple.accounts.tencentweibo.defaultaccess
com.apple.accounts.inactive.fullaccess
com.apple.accounts.appleidauthentication.defaultaccess
com.apple.accounts.idms.fullaccess
com.apple.itunesstored.private
certificatesData
policiesProperties
exited?
provisionedAccounts
syncableTypes
supportedTypes
enabledAccounts
Failed to find an account type for %@
Failed to create an account of type %@
accountIdentifier
expirationDate
serviceName
isPersistent
T@"NSString",&,N,V_accountIdentifier
hasExpirationDate
T@"ACProtobufDate",&,N,V_expirationDate
T@"NSString",&,N,V_serviceName
hasIsPersistent
TB,N,V_isPersistent
T@"NSString",&,N,V_value
T@"NSURL",&,N
uuid
T@"NSUUID",&,N
object
T@,&,N
array
T@"NSArray",C,N
T@"NSSet",C,N
v32@?0@"NSString"8@16^B24
dictionary
T@"NSDictionary",C,N
v32@?0@"NSString"8@"NSString"16^B24
credentialItemsDictionary
propertiesDictionary
dataclassPropertiesDictionary
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Accounts_Sim/Accounts-677.3.0.13/ACDataclassAction.m
ACDataclassActionCancel
ACDataclassActionCreateSyncDataStore
ACDataclassActionMergeSyncDataIntoLocalData
ACDataclassActionDeleteSyncData
ACDataclassActionCreateSyncDataStoreKeepLocalData
ACDataclassActionMergeLocalDataIntoSyncData
ACDataclassActionCreateSyncDataStoreDeleteLocalData
ACDataclassActionRefresh
ACDataclassActionLoseNonUploadedData
Unknown ACDataclassAction
_error
TB,R,G_isError
Tq,R,N,V_type
isDestructive
TB,R,N,V_isDestructive
T@"NSArray",R,N,V_affectedContainers
persistent
pair
pairs
T@"NSMutableArray",&,N,V_pairs
T@"NSString",&,N,V_accountTypeDescription
hasVisibility
Ti,N,V_visibility
hasCredentialProtectionPolicy
T@"NSString",&,N,V_credentialProtectionPolicy
hasSupportsAuthentication
hasSupportsMultipleAccounts
hasEncryptAccountProperties
TB,N,V_encryptAccountProperties
hasObsolete
TB,N,V_obsolete
Td,N,V_value
Subscribed Calendar
CalDAV
CardDAV
BookmarkDAV
SMTP
Exchange
LDAP
Mail
MobileMe
Gmail
Yahoo
OnMyDevice
IMAPNotes
AppleAccount
CastleIMAP
Supported Dataclasses
Enable Actions
Disable Actions
Delete Account Actions
Show Reminders Separately
Version
Accounts
Supports Multiple Stores
Display Dataclass Switch
Requires User Confirmation
None
Keep Local Data
Merge Local Data
Delete Local Data
Merge Sync Data
Delete Sync Data
Merge Data
Delete Data
Enabled Dataclasses
Identifier
Sync Identifier
Provisioned Dataclasses
Type
Class
Username
Type String
Short Type String
Subscribed Calendars
CalendarsWereMigrated
/tmp/AccountMigrationInProgress
ChildAccounts
ChangeType
AccountID
AccountType
OriginalDataclasses
owner
T@"NSMutableArray",&,N,V_credentialItems
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Accounts_Sim/Accounts-677.3.0.13/ACCredentialItem.m
accountIdentifier: %@
expirationDate: %@
serviceName: %@
persistent: %@
objectID: %@
expired
TB,R,N,GisExpired
TB,N,GisPersistent
com.apple.accounts.keychain
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Accounts_Sim/Accounts-677.3.0.13/ACZeroingString.m
string
Failed to allocate backing character buffer
characters
bytes
encoding
cString
AC.bytes
AC.length
Mismatch between data length and encoded length!
Index out of bounds
Range out of bounds
T^S,R,V_characters
length
ACMigrationDidFinish
ACMigrationLock
LastMigrationSystemVersion
com.apple.accountsd
class
numberWithBool:
dictionaryWithObjects:forKeys:count:
numberWithInt:
isKindOfClass:
objectForKeyedSubscript:
boolValue
accountPropertyCryptoKeyCreatingIfNecessary:
encryptProperty:
decryptProperty:
_decryptableDataForStoredProperty:
alloc
init
standardUserDefaults
objectForKey:
isNSNumber__
isNSString__
intValue
initWithInt:
sharedInstance
valueForManagedDefault:
setValue:forManagedDefault:
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
numberWithLongLong:
numberWithUnsignedLongLong:
numberWithDouble:
setStringValue:
setDataValue:
setUuidValue:
setDateValue:
setUrlValue:
setArrayValue:
setSetValue:
setDictionaryValue:
allocWithZone:
copyWithZone:
isMemberOfClass:
isEqual:
hash
mergeFrom:
hasStringValue
setIntegerValue:
setHasIntegerValue:
hasIntegerValue
setUnsignedIntegerValue:
setHasUnsignedIntegerValue:
hasUnsignedIntegerValue
setDoubleValue:
setHasDoubleValue:
hasDoubleValue
hasDataValue
hasUuidValue
hasDateValue
hasUrlValue
hasArrayValue
hasSetValue
hasDictionaryValue
readFrom:
writeTo:
copyTo:
.cxx_destruct
stringValue
integerValue
unsignedIntegerValue
doubleValue
dataValue
uuidValue
dateValue
urlValue
arrayValue
setValue
dictionaryValue
_doubleValue
_integerValue
_unsignedIntegerValue
_arrayValue
_dataValue
_dateValue
_dictionaryValue
_setValue
_stringValue
_urlValue
_uuidValue
_has
numberWithUnsignedInteger:
remoteObjectProxyWithErrorHandler:
stringWithUTF8String:
currentHandler
handleFailureInFunction:file:lineNumber:description:
synchronousRemoteObjectProxyWithErrorHandler:
initWithRemoteEndpoint:effectiveBundleID:
connectToRemoteAccountStoreUsingEndpoint:
defaultCenter
sharedRebroadcaster
userInfo
postNotificationName:object:userInfo:
removeAllObjects
addObserverForName:object:queue:usingBlock:
removeObserver:
disconnectFromRemoteAccountStore
dealloc
initWithListenerEndpoint:
initWithMachServiceName:options:
initWithXPCConnection:
setRemoteAccountStoreSession:
remoteAccountStoreSession
setSpoofedBundleID:
connect
disconnect
errorWithDomain:code:userInfo:
_setAccountStore:
accountWithIdentifier:handler:
waitOnSemaphore:withTimeout:
_connectionFailureError
setAccountStore:
accountTypeWithIdentifier:handler:
copy
countByEnumeratingWithState:objects:count:
accountsWithHandler:
accountsWithAccountType:handler:
accountsWithAccountType:options:completion:
accountsOnPairedDeviceWithAccountType:handler:
exceptionWithName:reason:userInfo:
objectID
setObjectID:
insertAccountType:withHandler:
removeAccountType:withHandler:
setAccountProperty:forKey:
removeAccount:withDataclassActions:completion:
isDirty
canSaveAccount:completion:
_saveAccount:verify:dataclassActions:completion:
_unsanitizeError:
_setObjectID:
_clearCachedChildAccounts
_clearDirtyProperties
saveAccount:verify:dataclassActions:completion:
requestAccessToAccountsWithType:options:completion:
accessKeys
count
raise:format:
identifier
requestAccessForAccountTypeWithIdentifier:options:withHandler:
verifyCredentialsForAccount:saveWhenAuthorized:withHandler:
verifyCredentialsForAccount:options:completion:
accountStore
_sanitizeOptionsDictionary:
_clearCachedCredentials
renewCredentialsForAccount:options:completion:
renewCredentialsForAccount:force:reason:completion:
accountTypesWithHandler:
dataclassesWithHandler:
credentialForAccount:error:
_setOwningAccount:
credentialForAccountWithIdentifier:handler:
credentialForAccount:serviceID:error:
credentialForAccount:serviceID:handler:
setCredential:forAccount:serviceID:completion:
credentialForAccount:serviceID:
credentialItemsWithCompletion:
credentialItemForAccount:serviceName:completion:
insertCredentialItem:completion:
clearDirtyProperties
saveCredentialItem:completion:
removeCredentialItem:completion:
parentAccountForAccountWithIdentifier:handler:
childAccountsForAccountWithIdentifier:handler:
childAccountsWithAccountTypeIdentifier:parentAccountIdentifier:handler:
enabledDataclassesForAccountWithIdentifier:handler:
provisionedDataclassesForAccountWithIdentifier:handler:
supportedDataclassesForAccountType:handler:
syncableDataclassesForAccountType:handler:
accessKeysForAccountType:handler:
setNotificationsEnabled:
appPermissionsForAccountType:withHandler:
setPermissionGranted:forBundleID:onAccountType:withHandler:
clearAllPermissionsGrantedForAccountType:withHandler:
permissionForAccountType:withHandler:
grantedPermissionsForAccountType:withHandler:
clearGrantedPermissionsForAccountType:withHandler:
typeIdentifierForDomain:withHandler:
displayAccountTypeForAccountWithIdentifier:handler:
accountIdentifiersEnabledForDataclass:handler:
accountIdentifiersEnabledToSyncDataclass:handler:
preloadDataclassOwnersWithCompletion:
dataclassActionsForAccountSave:completion:
dataclassActionsForAccountDeletion:completion:
isPerformingDataclassActionsForAccount:completion:
accountExistsWithDescription:completion:
isTetheredSyncingEnabledForDataclass:completion:
tetheredSyncSourceTypeForDataclass:completion:
kerberosAccountsForDomainFromURL:completion:
isPushSupportedForAccount:completion:
accountIdentifiersEnabledForDataclasses:withAccountTypeIdentifiers:completion:
setObject:forKeyedSubscript:
accountWithIdentifier:completion:
updateExistenceCacheOfAccountWithTypeIdentifier:withHandler:
accountsWithAccountTypeIdentifierExist:
countOfAccountsWithAccountTypeIdentifier:
accountTypeWithAccountTypeIdentifier:
supportsMultipleAccounts
handleURL:
clientTokenForAccountIdentifier:completion:
addClientToken:forAccountIdentifier:completion:
discoverPropertiesForAccount:options:completion:
mutableCopy
domain
isEqualToString:
code
openAuthenticationURL:forAccount:shouldConfirm:completion:
openAuthenticationURLForAccount:withDelegateClassName:fromBundleAtPath:shouldConfirm:completion:
visibleTopLevelAccountsWithAccountTypeIdentifiers:completion:
accountsWithAccountTypeIdentifiers:preloadedProperties:completion:
accountsWithAccountTypeIdentifiers:preloadedProperties:error:
notifyRemoteDevicesOfModifiedAccount:withChangeType:completion:
notifyRemoteDevicesOfNewAccount:withCompletion:
saveAccount:toPairedDeviceWithOptions:completion:
removeAccountsFromPairedDeviceWithCompletion:
triggerKeychainMigrationIfNecessary:
reportTelemetryForLandmarkEvent:
canSaveAccountsOfAccountTypeIdentifier:
initWithRemoteEndpoint:
initWithEffectiveBundleID:
accountWithIdentifier:
accountWithIdentifier:error:
accountTypeWithAccountTypeIdentifier:error:
accountTypeWithIdentifier:completion:
accounts
accountsWithAccountType:
accountsWithAccountType:options:error:
accountsWithAccountType:completion:
accountsOnPairedDeviceWithAccountType:completion:
insertAccountType:withCompletionHandler:
removeAccountType:withCompletionHandler:
removeAccount:withDeleteSync:completion:
removeAccount:withCompletionHandler:
canSaveAccount:withCompletionHandler:
saveAccount:withCompletionHandler:
saveVerifiedAccount:withCompletionHandler:
saveAccount:withDataclassActions:completion:
saveAccount:withDataclassActions:doVerify:completion:
requestAccessToAccountsWithType:withCompletionHandler:
verifyCredentialsForAccount:withHandler:
renewCredentialsForAccount:reason:completion:
renewCredentialsForAccount:completion:
renewCredentialsForAccount:services:completion:
allAccountTypes
allDataclasses
credentialForAccount:
setCredential:forAccount:serviceID:error:
credentialForAccount:bundleID:
allCredentialItems
credentialItemForAccount:serviceName:
insertCredentialItem:withCompletionHandler:
saveCredentialItem:withCompletionHandler:
removeCredentialItem:withCompletionHandler:
parentAccountForAccount:
parentAccountForAccount:error:
childAccountsForAccount:
childAccountsForAccount:error:
childAccountsForAccount:withTypeIdentifier:
enabledDataclassesForAccount:
provisionedDataclassesForAccount:
supportedDataclassesForAccountType:
syncableDataclassesForAccountType:
accessKeysForAccountType:
appPermissionsForAccountType:
setPermissionGranted:forBundleID:onAccountType:
clearAllPermissionsGrantedForAccountType:
permissionForAccountType:
grantedPermissionsForAccountType:
clearGrantedPermissionsForAccountType:
typeIdentifierForDomain:
displayTypeForAccountWithIdentifier:
accountIdentifiersEnabledForDataclass:
accountIdentifiersEnabledToSyncDataclass:
dataclassActionsForAccountSave:
dataclassActionsForAccountSave:error:
dataclassActionsForAccountDeletion:
dataclassActionsForAccountDeletion:error:
isPerformingDataclassActionsForAccount:
isPerformingDataclassActionsForAccount:error:
hasAccountWithDescription:
isTetheredSyncingEnabledForDataclass:
tetheredSyncSourceTypeForDataclass:
isPushSupportedForAccount:
cachedAccountWithIdentifier:completion:
updateExistenceCacheOfAccountWithTypeIdentifier:
clientTokenForAccount:
addClientToken:forAccount:
accountsWithAccountTypeIdentifiers:completion:
accountsWithAccountTypeIdentifiers:error:
notifyRemoteDevicesOfModifiedAccount:
notifyRemoteDevicesOfUpdatedCredentials:
notifyRemoteDevicesOfNewAccount:
effectiveBundleID
_clientBundleID
_replyQueue
_daemonAccountStoreDidChangeObserver
_accountCache
_remoteAccountStoreSession
initWithAccountType:
_createNewAccountUID
supportsAuthentication
_installCredentialsChangedObserver
_unsafe_markPropertyDirty:
initWithManagedAccount:
accountType
initWithManagedAccountType:
accountDescription
username
authenticated
lastCredentialRenewalRejectionDate
active
visible
URIRepresentation
parentAccount
authenticationType
credentialType
date
owningBundleID
encryptAccountProperties
dataclassProperties
customProperties
value
name
initWithManagedAccount:accountStore:
dirtyProperties
allObjects
decodeObjectOfClass:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
credentialsChanged:
encodeObject:forKey:
accountProperties
accountPropertiesTransformer
_markAccountPropertyDirty:
_initWithProtobuf:
hasCredential
credential
propertiesDictionary
hasLastCredentialRenewalRejectionDate
dataclassPropertiesDictionary
hasObjectID
hasParentAccountIdentifier
parentAccountIdentifier
enabledDataclasses
initWithArray:
provisionedDataclasses
dirtyAccountProperties
dirtyDataclassProperties
length
handleFailureInMethod:object:file:lineNumber:description:
initWithData:
_encodeProtobuf
setAccountType:
setCredential:
setIdentifier:
setAccountDescription:
setUsername:
setPropertiesDictionary:
setAuthenticated:
initWithDate:
setLastCredentialRenewalRejectionDate:
setActive:
setVisible:
setSupportsAuthentication:
setDataclassPropertiesDictionary:
initWithURL:
setParentAccountIdentifier:
setEnabledDataclasses:
setProvisionedDataclasses:
setAuthenticationType:
setCredentialType:
setDate:
setOwningBundleID:
setDirtyProperties:
setDirtyAccountProperties:
setDirtyDataclassProperties:
data
_loadAllCachedProperties
setTimeStyle:
setDateStyle:
localeWithLocaleIdentifier:
setLocale:
creationDate
stringFromDate:
enabledAndSyncableDataclasses
isAuthenticated
isActive
isVisible
isPropertyDirty:
containsObject:
initWithCapacity:
addObject:
removeObject:
_markPropertyDirty:
_useParentForCredentials
setGivenName:
setMiddleName:
setFamilyName:
localizedStringFromPersonNameComponents:style:options:
credentialWithError:
accountTypeDescription
willChangeValueForKey:
didChangeValueForKey:
accountPropertyForKey:
setValue:forKey:
displayAccount
arrayWithCapacity:
supportedDataclasses
intersectSet:
syncableDataclasses
isEnabledForDataclass:
_markDataclassPropertyDirty:
propertiesForDataclass:
setByAddingObjectsFromSet:
reload
allKeys
removeObjectForKey:
_loadCachedPropertiesWithoutCredentials
clientToken
addClientToken:
host
containsString:
appendFormat:
isEqualToDate:
objectAtIndexedSubscript:
supportsSecureCoding
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
_initWithProtobufData:
_encodeProtobufData
encodeWithCoder:
initWithCoder:
_initWithManagedAccount:accountStore:withDirtyStateFromAccount:
portableCopy
fullDescription
markAllPropertiesDirty
setDirty:forProperty:
_markCredentialDirty
userFullName
setCreationDate:
setAccountProperties:
propertyForKey:
setProperty:forKey:
supportsPush
setParentAccount:
childAccounts
childAccountsWithAccountTypeIdentifier:
isEnabledToSyncDataclass:
setEnabled:forDataclass:
isProvisionedForDataclass:
setDataclassProperties:
setProperties:forDataclass:
takeValuesFromModifiedAccount:
refresh
accountByCleaningThirdPartyTransformations
qualifiedUsername
defaultAutodiscoverDomainForChildType:
setCreatingFromManagedObject:
shortDebugName
diffAccount:
setSecIdentity:
copySecIdentity
setSecCertificates:
secCertificates
setAccountPropertiesTransformer:
_store
_identifier
_accountDescription
_owningBundleID
_username
_authenticationType
_credentialType
_clientToken
_haveCheckedForClientToken
_accountType
_credential
_properties
_dataclassProperties
_accountAccessAvailable
_authenticated
_active
_supportsAuthentication
_visible
_objectID
_date
_lastCredentialRenewalRejectionDate
_parentAccount
_haveCheckedForParentAccount
_parentAccountIdentifier
_haveCheckedForChildAccounts
_childAccounts
_enabledDataclasses
_provisionedDataclasses
_dirtyProperties
_dirtyAccountProperties
_dirtyDataclassProperties
_credentialsDidChangeObserver
_accountPropertiesTransformer
_creatingFromManagedObject
arrayWithObjects:count:
setWithArray:
visibility
credentialProtectionPolicy
obsolete
isObsolete
setAccountTypeDescription:
setVisibility:
setCredentialProtectionPolicy:
setSupportsMultipleAccounts:
setEncryptAccountProperties:
allIdentifiers
initWithIdentifier:description:
initWithManagedAccountType:accountStore:
accessGranted
setObsolete:
_accountTypeDescription
_visibility
_credentialProtectionPolicy
_accountStore
_supportsMultipleAccounts
_obsolete
_supportedDataclasses
_syncableDataclasses
_accessKeys
_encryptAccountProperties
initWithAccount:remoteEndpoint:
_connectToRemoteOAuthSignerUsingEndpoint:
setClientBundleID:withHandler:
disconnectFromRemoteOAuthSigner
setShouldIncludeAppIdInRequest:
signURLRequest:withAccount:callingPID:timestamp:handler:
signURLRequest:withAccount:applicationID:timestamp:handler:
signedURLRequestWithURLRequest:callingPID:timestamp:
interfaceWithProtocol:
setRemoteObjectInterface:
setInterruptionHandler:
remoteObjectProxy
resume
invalidate
initWithAccount:
signedURLRequestWithURLRequest:applicationID:timestamp:
signedURLRequestWithURLRequest:
shouldIncludeAppIdInRequest
_connection
_account
_proxyShim
_shouldIncludeAppIdInRequest
setKey:
setValue:
_key
_value
entity
attributesByName
valueForKey:
_obsoleteAttributes
intersectsSet:
relationshipsByName
dictionaryWithValuesForKeys:
_removeObsoleteKeysFromDictionary:
setValuesForKeysWithDictionary:
isOptional
dictionaryWithObject:forKey:
setValuesWithObject:
validateRequiredAttributesForObject:error:
credentialItems
setOauthToken:
setOauthRefreshToken:
setExpiryDate:
setOauthTokenSecret:
setPassword:
initWithOAuthToken:tokenSecret:
initWithPassword:
arrayWithObjects:
arrayByAddingObjectsFromArray:
requiresTouchID
stringWithString:
setRequiresTouchID:
initWithValue:forKey:
enumerateKeysAndObjectsUsingBlock:
setCredentialItems:
_newZStringWithString:
initWithString:
credentialItemForKey:
setCredentialItem:forKey:
dateWithTimeIntervalSinceReferenceDate:
timeIntervalSinceReferenceDate
credentialWithOAuthToken:tokenSecret:
credentialWithPassword:
allSupportedKeys
supportedKeysForAccountTypeIdentifier:credentialType:
nonPersistentKeysForAccountTypeIdentifier:credentialType:
credentialPolicyForAccountTypeIdentifier:key:clientID:
additionalServiceSegmentForAccountTypeIdentifier:
initWithOAuth2Token:refreshToken:expiryDate:
isEmpty
keysForCredentialItems
token
setToken:
oauthToken
oauthTokenSecret
oauthTokenNoSync
setOauthTokenNoSync:
oauthRefreshToken
expiryDate
password
findMyiPhoneToken
setFindMyiPhoneToken:
mapsToken
setMapsToken:
hsaToken
setHsaToken:
mdmServerToken
setMdmServerToken:
tokenExpiryDate
setTokenExpiryDate:
setDirty:
setEmpty:
_credentialItems
_owningAccount
_requiresTouchID
_dirty
_empty
objectAtIndex:
addAffectedContainers:
affectedContainersCount
clearAffectedContainers
affectedContainersAtIndex:
affectedContainersType
type
setType:
destructive
setDestructive:
affectedContainers
setAffectedContainers:
_affectedContainers
_type
_destructive
_configureConnection
XPCInterface
accountCredentialsDidChangeForAccountWithIdentifier:
setExportedInterface:
sharedClientSideListener
setExportedObject:
setInvalidationHandler:
endpoint
_configureRemoteAccountStoreIfNecessary
spoofedBundleID
notificationsEnabled
_hasConfiguredRemoteAccountStore
_xpcConnectionHasBeenInvalidated
_notificationsEnabled
_spoofedBundleID
addValue:
valuesCount
clearValues
valueAtIndex:
valueType
values
setValues:
_values
addProperties:
addDataclassProperties:
addEnabledDataclasses:
addProvisionedDataclasses:
addDirtyProperties:
addDirtyAccountProperties:
addDirtyDataclassProperties:
propertiesCount
clearProperties
propertiesAtIndex:
dataclassPropertiesCount
clearDataclassProperties
dataclassPropertiesAtIndex:
enabledDataclassesCount
clearEnabledDataclasses
enabledDataclassesAtIndex:
provisionedDataclassesCount
clearProvisionedDataclasses
provisionedDataclassesAtIndex:
dirtyPropertiesCount
dirtyPropertiesAtIndex:
dirtyAccountPropertiesCount
clearDirtyAccountProperties
dirtyAccountPropertiesAtIndex:
dirtyDataclassPropertiesCount
clearDirtyDataclassProperties
dirtyDataclassPropertiesAtIndex:
propertiesType
dataclassPropertiesType
enabledDataclassesType
provisionedDataclassesType
dirtyPropertiesType
dirtyAccountPropertiesType
dirtyDataclassPropertiesType
hasAccountDescription
hasUsername
hasAuthenticationType
hasCredentialType
hasDate
hasOwningBundleID
properties
setProperties:
_keepAlive
_createSCPreferencesSession
_destroySCPreferencesSession
_tearDown
_timeoutInterval
valueWithPointer:
_livingInstance
setAccountsWithAccountTypeIdentifier:exist:
setCountOfAccounts:withAccountTypeIdentifier:
_handleSCPreferencesSessionNotification:
_getValueForKey:
_setValue:forKey:
_timerQueue
_timerSource
_preferencesQueue
_preferencesSession
_applySkipCount
bundleInfoValueForKey:PID:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchiveObjectWithData:
unarchivedObjectOfClasses:fromData:error:
setAccountIdentifier:
setExpirationDate:
setServiceName:
hasExpirationDate
setIsPersistent:
setHasIsPersistent:
hasIsPersistent
accountIdentifier
expirationDate
serviceName
isPersistent
_accountIdentifier
_expirationDate
_serviceName
_isPersistent
_buildXPCInterface
saveAccount:withHandler:
notifyRemoteDevicesOfModifiedAccount:withChangeType:
setClasses:forSelector:argumentIndex:ofReply:
initWithTimeIntervalSinceReferenceDate:
absoluteString
setUrl:
UUIDString
initWithUUIDString:
initWithUUID:
setUuid:
uuid
_setObject:
unsignedLongLongValue
longLongValue
initWithSet:
initWithDictionary:
array
initWithObjectValue:
setObject:
object
initWithObjectValue:forKey:
_convertArray:
replaceObjectAtIndex:withObject:
setArray:
setSet:
setDictionary:
pairs
setPairs:
pairsCount
clearCredentialItems
addCredentialItems:
credentialItemsCount
setCredentialItemsDictionary:
credentialItemsDictionary
initWithType:destructivity:affectedContainers:
numberWithInteger:
actionWithType:
destructiveActionWithType:
destructiveActionWithType:affectedContainers:
_actionForError:
_isError
isDestructive
_isDestructive
addPair:
clearPairs
pairAtIndex:
pairType
_pairs
setHasVisibility:
hasVisibility
hasCredentialProtectionPolicy
setHasSupportsAuthentication:
hasSupportsAuthentication
setHasSupportsMultipleAccounts:
hasSupportsMultipleAccounts
setHasEncryptAccountProperties:
hasEncryptAccountProperties
setHasObsolete:
hasObsolete
credentialItemsAtIndex:
credentialItemsType
initWithManagedCredentialItem:
persistent
compare:
initWithManagedCredentialItem:accountStore:
initWithAccountIdentifier:serviceName:
isExpired
setPersistent:
_persistent
ac_secureCodingError
_sanitizeObject:
getCharacters:range:
initWithBytes:length:encoding:
decodeIntegerForKey:
bytes
encodeInteger:forKey:
_compatibleCopy
_newZStringWithCharacters:length:
initWithCharacters:length:
initWithUTF8String:
replacementObjectForCoder:
classForCoder
_allowsDirectEncoding
characterAtIndex:
characters
_characters
_length
initWithName:
createAccountMigrationLock
writeMigrationVersionPref
unlock
_currentSystemVersion
signalMigrationFinished
migrationFinished
"*** SecItemCopyMatching returned error %@"
"XPC error: %@"
"Max retries reached. Will hang calling process..."
"Will retry in %@ seconds..."
"ac_dispatch_remote called with out a block!"
"Remote account store returned error: %{public}@"
"Error returned from daemon: %@"
"Error returned from daemon: %{public}@"
accounts/remove-account
BEGIN [%llu]: Starting removal of account %@.
END [%llu] %fs: Completed account removal.
accounts/can-save-account
accounts/save-account
BEGIN [%llu]: Starting save for account %@.
END [%llu] %fs: Completed account save.
"Calling daemon to save"
accounts/request-access
accounts/verify-credentials
"Account %@ associated with store %@, verifying credentials on store %@"
BEGIN [%llu]: Starting credential verification for account %@.
END [%llu] %fs: Completed account credential verification.
accounts/renew-credentials
"Account %@ associated with store %@, renewing credentials on store %@"
END [%llu] %fs: Completed account credential renewal.
accounts/credential-for-account
accounts/set-credential-for-account
"Credential item %@ associated with store %@, inserting credential item on store %@"
"accountID is nil!"
"Could not get dataclass actions: %@"
"Could not get dataclass performing status: %@"
accounts/paired-update-account
"Notified successfully!"
"Notified of credential update successfully!"
accounts/paired-save-account
accounts/paired-remove-accounts
accounts/trigger-keychain-migration
"Keychain migrated successfully!"
accounts/report-telemetry-upgrade-or-restore
"Telemetry reported successfully!"
"ACAccount initializer just ran into an account %@ without an account type!"
"Unexpecteed nil value for %@"
"NSObjectInaccessibleException caught inside -[ACAccount initWithManagedAccount:]"
"Method \"%{private}@\" called on ACAccount without a valid ACAccountStore!"
"-[ACAccount isEnabledForDataclass:] should not be relied on to get the status of FMiP. It may return inaccurate results. Use AAUIDeviceLocatorService instead."
"Exchange qualified: %@"
"Failed with status %@"
"NSObjectInaccessibleException caught inside -[ACAccountType initWithManagedAccountType:]"
"Bundle ID spoofing failed."
"Error signing request: %@"
"The connection to ACDOAuthSigner was interrupted."
"The connection to ACDAccountStore was interrupted."
"The connection to ACDAccountStore was invalidated."
"Spoofed the client's bundle ID to: %@"
"Error setting the client's bundle ID"
"ACAccountStoreClientSideListener is ignoring credential change notification because no account ID was provided."
"ACSystemConfigManager: failed to acquire SCPreferencesLock for %@ due to error %@"
"trustRef was NULL"
"Failed to deserialize, error: %@"
"NSObjectInaccessibleException caught inside -[ACCredentialItem initWithManagedCredentialItem:]"
"Removing object %@ error userInfo because it is not NSSecureCoding."
"Signaling username and credential migration finished"
"Lock acquired."
"Posting migration finished notification."
"Unlocked. Done signaling migration finished."
"Writing Accounts ACLastMigrationSystemVersion version pref %@"
^{__SecKey=}20@0:8B16
@24@0:8@16
@16@0:8
v32@0:8@16@24
@24@0:8^{_NSZone=}16
B16@0:8
v24@0:8q16
v20@0:8B16
v24@0:8Q16
v24@0:8d16
B24@0:8@16
v24@0:8@16
Q16@0:8
v16@0:8
q16@0:8
d16@0:8
@"ACProtobufVariableValueList"
@"NSData"
@"ACProtobufDate"
@"ACProtobufVariableValueDictionary"
@"NSString"
@"ACProtobufURL"
@"ACProtobufUUID"
{?="doubleValue"b1"integerValue"b1"unsignedIntegerValue"b1}
i24@0:8@16
q24@0:8@16
@32@0:8@16@24
@32@0:8@16^@24
v32@0:8@16@?24
@40@0:8@16Q24^@32
v40@0:8@16Q24@?32
v36@0:8@16B24@?28
v40@0:8@16@24@?32
v44@0:8@16B24@28@?36
v44@0:8@16@24B32@?36
@40@0:8@16@24^@32
v48@0:8@16@24@32^@40
v36@0:8B16@20@28
v24@0:8@?16
B32@0:8@16^@24
B32@0:8@16@24
v52@0:8@16@24@32B40@?44
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@"ACRemoteAccountStoreSession"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@"PBCodable"16
@24@0:8@"NSData"16
@"PBCodable"16@0:8
@"NSData"16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8@16@24@32
v28@0:8B16@20
@24@0:8^@16
v24@0:8^{__SecIdentity=}16
^{__SecIdentity=}16@0:8
@?16@0:8
@"ACAccountStore"
@"ACAccountType"
@"ACAccountCredential"
@"NSURL"
@"NSDate"
@"ACAccount"
@"NSArray"
@"NSMutableSet"
i16@0:8
v20@0:8i16
@"NSSet"
v56@0:8@16@24@32@40@?48
v56@0:8@"NSURLRequest"16@"ACAccount"24@"NSNumber"32@"NSDate"40@?<v@?@"NSURLRequest"@"NSError">48
v56@0:8@"NSURLRequest"16@"ACAccount"24@"NSString"32@"NSDate"40@?<v@?@"NSURLRequest"@"NSError">48
v32@0:8@"NSString"16@?<v@?B@"NSError">24
@"NSXPCConnection"
@"<ACDOAuthSignerProtocol>"
@"ACProtobufVariableValue"
@24@0:8Q16
@"NSMutableArray"
v24@0:8@"NSString"16
@24@0:8@?16
@24@0:8@?<v@?@"NSError">16
@"ACProtobufAccountType"
@"ACProtobufAccountCredential"
v28@0:8@16B24
v32@0:8q16@24
v20@0:8I16
^v24@0:8@16
v32@0:8^v16@24
@"NSObject<OS_dispatch_source>"
^{__SCPreferences=}
{?="isPersistent"b1}
v48@0:8@16@24@32@?40
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"ACAccount"@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"ACAccountType"16Q24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"ACAccountType"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"ACAccountCredential"@"NSError">24
v40@0:8@"ACAccount"16@"NSString"24@?<v@?@"ACAccountCredential"@"NSError">32
v48@0:8@"ACAccountCredential"16@"ACAccount"24@"NSString"32@?<v@?B@"NSError">40
v40@0:8@"ACAccount"16@"NSString"24@?<v@?@"ACCredentialItem"@"NSError">32
v32@0:8@"ACCredentialItem"16@?<v@?@"ACCredentialItem"@"NSError">24
v32@0:8@"ACCredentialItem"16@?<v@?@"NSURL"@"NSError">24
v32@0:8@"ACCredentialItem"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSSet"@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@"NSSet"@"NSError">24
v24@0:8@?<v@?@"NSError">16
v32@0:8@"ACAccount"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"ACAccount"16@?<v@?B@"NSError">24
v40@0:8@"ACAccount"16@"NSDictionary"24@?<v@?B@"NSError">32
v32@0:8@"ACAccount"16@?<v@?@"NSURL"@"NSError">24
v44@0:8@"ACAccount"16B24@"NSDictionary"28@?<v@?@"NSURL"@"NSError">36
v32@0:8@"NSString"16@?<v@?@"NSNumber"@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@"ACAccountType"@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"ACAccountType"16@?<v@?@"NSDictionary"@"NSError">24
v48@0:8@"NSNumber"16@"NSString"24@"ACAccountType"32@?<v@?@@"NSError">40
v32@0:8@"ACAccountType"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@@"NSError">24
v40@0:8@"ACAccount"16@"NSDictionary"24@?<v@?@"ACAccount"@"NSError">32
v40@0:8@"ACAccount"16@"NSDictionary"24@?<v@?@"NSNumber"@"NSError">32
v24@0:8@"NSURL"16
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v44@0:8@"NSURL"16@"ACAccount"24B32@?<v@?B@"NSError">36
v52@0:8@"ACAccount"16@"NSString"24@"NSString"32B40@?<v@?B@"NSDictionary"@"NSError">44
v32@0:8@"ACAccount"16@"NSString"24
v40@0:8@"ACAccount"16@"NSString"24@?<v@?B@"NSError">32
v24@0:8@?<v@?B@"NSError">16
@24@0:8q16
@32@0:8q16@24
@36@0:8q16B24@28
{?="supportsAuthentication"b1"visibility"b1"encryptAccountProperties"b1"obsolete"b1"supportsMultipleAccounts"b1}
v32@0:8@16Q24
@32@0:8r^S16Q24
@40@0:8r^v16Q24Q32
@24@0:8r*16
S24@0:8Q16
v40@0:8^S16{_NSRange=QQ}24
^S16@0:8
