?333333
UIWindowFirstResponderDidChangeNotification
UIWindowFirstResponderUserInfoKey
SBLockButtonPressedNotification
SBUIAppSwitcherRevealedNotification
ZoomUIAleartWillAppearNotification
/System/Library/AccessibilityBundles
UIKit
axbundle
v8@?0
B16@?0@"AXValidationManager"8
UIAlertController
_UIAlertControllerView
_contentView
UIView
SBDashBoardViewController
finishUIUnlockFromSource:
SpringBoard
_accessibilityActivationAnimationStartDelay
_accessibilityActivationAnimationWillBegin
_accessibilityDeactivationAnimationStartDelay
_accessibilityDeactivationAnimationWillBegin
SBReachabilitySettings
yOffsetFactor
homeGestureSwipeDownHeight
UIPanGestureRecognizer
translationInView:
{CGPoint=dd}
locationInView:
setTranslation:inView:
_lastSceneReferenceLocation
__CGPoint__
_firstSceneReferenceLocation
SBFluidSwitcherScreenEdgePanGestureRecognizer
SBFluidSwitcherGestureManager
gestureRecognizer:shouldReceiveTouch:
activateReachabilityGestureRecognizer
reachabilitySettings
UIScreenEdgePanGestureRecognizer
_locationForTouch:
SBBarSwipeScreenEdgePanGestureRecognizer
SBFluidSwitcherViewController
fluidSwitcherGestureTransaction:didBeginGesture:
fluidSwitcherGestureTransaction:didEndGesture:
UITouch
UIGestureRecognizer
touchesBegan:withEvent:
touchesEnded:withEvent:
SBReachabilityGestureRecognizer
PHSOSViewController
showMedicalID
_UIFocusDisplayLinkScrollAnimator
setTargetContentOffset: forScrollableContainer: convergenceRate: completion:
Zoom UI
v24@?0@"AXValidationManager"8Q16
v16@?0@"AXValidationManager"8
ZoomUI_UIAlertControllerOverride
ZoomUI_SpringBoardOverride
ZoomUI_SBDashBoardViewControllerOverride
ZoomUI_SBReachabilitySettingsOverride
ZoomUI_SBFluidSwitcherScreenEdgePanGestureRecognizer
ZoomUI_SBFluidSwitcherViewController
ZoomUI_SBFluidSwitcherGestureManager
ZoomUI_SBBarSwipeScreenEdgePanGestureRecognizer
ZoomUI_SBReachabilityGestureRecognizer
ZoomUI_UITouchReachabilityOverride
ZoomUI_PHSOSViewController
ZoomUI_UIFocusScrollAnimatorOverride
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
autocapitalizationType
Tq,N
autocorrectionType
spellCheckingType
smartQuotesType
smartDashesType
smartInsertDeleteType
keyboardType
keyboardAppearance
returnKeyType
enablesReturnKeyAutomatically
TB,N
secureTextEntry
TB,N,GisSecureTextEntry
textContentType
T@"NSString",C,N
passwordRules
T@"UITextInputPasswordRules",C,N
hasText
TB,R,N
selectedTextRange
T@"UITextRange",C
markedTextRange
T@"UITextRange",R,N
markedTextStyle
T@"NSDictionary",C,N
beginningOfDocument
T@"UITextPosition",R,N
endOfDocument
inputDelegate
T@"<UITextInputDelegate>",W,N
tokenizer
T@"<UITextInputTokenizer>",R,N
textInputView
T@"UIView",R,N
selectionAffinity
insertDictationResultPlaceholder
T@,R,N
type
frame
window
Got a keyboard will show notification, but keyboard was not on screen.
Got a keyboard will hide notification, but keyboard was not even present.
Got a keyboard did hide notification, but keyboard was not even present.
contextId
registeredForAppNotifications
TB,N,GisRegisteredForAppNotifications,V_registeredForAppNotifications
view
bounds
_activateReachabilityGestureRecognizer
_switcherViewController
_reachabilitySettings
AXSBReachabilityTouch
MPAVRoutingControllerDidPickRouteNotification
AXUpdateQueue
UIApplicationLoadedWebKit
_accessibilityWebKitLoaded
AccessibilitySettingsLoaderDidUpdateSettings
v16@?0@"NSNotification"8
Ping BackBoard for unmanaged ASAM
B24@?0^@8^@16
v28@?0B8@12@"NSError"20
unable to ping BackBoard to load the GAX bundle: %@
com.apple.accessibility.AccessibilityUIServer
****************** Loading GAX SpringBoard Server Bundle ****************
/System/Library/AccessibilityBundles/GAXSpringboardServer.bundle
**** AX Error: Could not load GAXSpringboard bundle. bundleWithPath came back nil
**** AX Error: Accessibility: Could not load GAXSpringboard bundle
**** AX Error: Could not initialize GAXSpringboard instance: %@
****************** Loading GAX Client Bundle ****************
/System/Library/AccessibilityBundles/GAXClient.bundle
**** AX Error: Could not load GAX Client bundle. bundleWithPath came back nil
**** AX Error: Accessibility: Could not load GAX Client bundle
**** AX Error: Could not initialize GAX Client instance: %@
notificationToken
T@,&,N,V_notificationToken
InvertColorsManager.bundle
Invert colors bundle %{public}@
Loading: %{public}@
Could not load: %{public}@ %{public}@
Handling invert colors pre-load
SBHomescreenDisplayChangedNotification
ASTDispatch
edgeInsets
UIAXASTKeyboardSafeAreaInsetsUpdated
Keyboard active notification 
visible
UIAXASTKeyboardStatus
Got keyboard shown notification, but had no keyboard window.
Keyboard shown notification: %{public}@
Ignoring keyboard shown notification because the keyboard was not local.
Keyboard hidden notification: %{public}@
Ignoring keyboard hidden notification because the keyboard was not local.
MPInlineVideoController
AssistiveTouchHelper - MediaPlayer
IUVideoPlaybackViewController
_firstVideoFrameDisplayed
AssistiveTouchHelper - iPodUI
MPMoviePlayerPlaybackStateDidChangeNotification
MediaPlayer
iPodUI
MPMoviePlayerController
controlsHidden
mediaPlaybackFinished
UIAXASTVideoControlStatus
UIASTNotificationCenter
Sending initial safe area update
__ZoomServices
UITextInput
UIKeyInput
UITextInputTraits
NSObject
ZoomServicesUI
__ZoomUI_UIAlertControllerOverride_super
SafeCategory
ZoomUI_UIAlertControllerOverride
__ZoomUI_SpringBoardOverride_super
ZoomUI_SpringBoardOverride
__ZoomUI_PHSOSViewController_super
ZoomUI_PHSOSViewController
__ZoomUI_SBDashBoardViewControllerOverride_super
ZoomUI_SBDashBoardViewControllerOverride
__ZoomUI_SBReachabilitySettingsOverride_super
ZoomUI_SBReachabilitySettingsOverride
__ZoomUI_UIFocusScrollAnimatorOverride_super
ZoomUI_UIFocusScrollAnimatorOverride
__ZoomUI_SBFluidSwitcherScreenEdgePanGestureRecognizer_super
ZoomUI_SBFluidSwitcherScreenEdgePanGestureRecognizer
__ZoomUI_SBFluidSwitcherGestureManager_super
ZoomUI_SBFluidSwitcherGestureManager
__ZoomUI_SBBarSwipeScreenEdgePanGestureRecognizer_super
ZoomUI_SBBarSwipeScreenEdgePanGestureRecognizer
__ZoomUI_SBReachabilityGestureRecognizer_super
ZoomUI_SBReachabilityGestureRecognizer
__ZoomUI_UITouchReachabilityOverride_super
ZoomUI_UITouchReachabilityOverride
__ZoomUI_SBFluidSwitcherViewController_super
ZoomUI_SBFluidSwitcherViewController
AccessibilitySettingsLoader
GuidedAccessManager
AXInvertColorsController
AssistiveTouchHelper
__CGPoint__
alloc
init
sharedInstance
zoomFrame
mainScreen
bounds
activeInterfaceOrientation
zoomPreferredCurrentLensMode
isEqualToString:
defaultCenter
_handleZoomEnabledStatusDidChangeNotification:
addObserver:selector:name:object:
_updateForCurrentZoomStatus
_unregisterForAppNotifications
removeObserver:
dealloc
stringByAppendingPathComponent:
stringByAppendingPathExtension:
bundleWithPath:
principalClass
_installZoomUISafeCategoriesIfNeeded
_registerForAppNotifications
isRegisteredForAppNotifications
_handleRegisterZoomConflictNotification:
_handleZoomFocusDidChangeNotification:
_handleFirstResponderDidChangeNotification:
_handleKeyboardWillShowNotification:
_handleKeyboardWillHideNotification:
_handleKeyboardDidHideNotification:
_handleAlertWillAppearNotification:
_handleLockButtonWasPressedNotification:
_handleAppSwitcherWillBeginRevealNotification:
_handleAppDidBecomeActiveNotification:
_handleAppDidEnterBackgroundNotification:
setRegisteredForAppNotifications:
removeObserver:name:object:
validateClass:
validateClass:hasInstanceVariable:withType:
validateClass:hasInstanceMethod:withFullSignature:
class
validateClass:isKindOfClass:
setValidationTargetName:
setOverrideProcessName:
setDebugBuild:
installSafeCategory:canInteractWithTargetClass:
registerInterestInZoomAttributes
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
_convertRectToSceneReferenceSpace:
userInfo
objectForKey:
isKindOfClass:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
autocapitalizationType
setAutocapitalizationType:
autocorrectionType
setAutocorrectionType:
spellCheckingType
setSpellCheckingType:
smartQuotesType
setSmartQuotesType:
smartDashesType
setSmartDashesType:
smartInsertDeleteType
setSmartInsertDeleteType:
keyboardType
setKeyboardType:
keyboardAppearance
setKeyboardAppearance:
returnKeyType
setReturnKeyType:
enablesReturnKeyAutomatically
setEnablesReturnKeyAutomatically:
isSecureTextEntry
setSecureTextEntry:
textContentType
setTextContentType:
passwordRules
setPasswordRules:
insertText:
deleteBackward
hasText
textInRange:
replaceRange:withText:
setMarkedText:selectedRange:
unmarkText
textRangeFromPosition:toPosition:
positionFromPosition:offset:
positionFromPosition:inDirection:offset:
comparePosition:toPosition:
offsetFromPosition:toPosition:
positionWithinRange:farthestInDirection:
characterRangeByExtendingPosition:inDirection:
baseWritingDirectionForPosition:inDirection:
setBaseWritingDirection:forRange:
firstRectForRange:
caretRectForPosition:
selectionRectsForRange:
closestPositionToPoint:
closestPositionToPoint:withinRange:
characterRangeAtPoint:
selectedTextRange
setSelectedTextRange:
markedTextRange
markedTextStyle
setMarkedTextStyle:
beginningOfDocument
endOfDocument
inputDelegate
setInputDelegate:
tokenizer
shouldChangeTextInRange:replacementText:
textStylingAtPosition:inDirection:
positionWithinRange:atCharacterOffset:
characterOffsetOfPosition:withinRange:
insertDictationResult:
dictationRecordingDidEnd
dictationRecognitionFailed
frameForDictationResultPlaceholder:
removeDictationResultPlaceholder:willInsertResult:
beginFloatingCursorAtPoint:
updateFloatingCursorAtPoint:
endFloatingCursor
textInputView
selectionAffinity
setSelectionAffinity:
insertDictationResultPlaceholder
window
convertRect:fromView:
convertRect:toWindow:
_contextId
notifyZoomFocusDidChangeWithType:rect:contextId:
integerValue
_keyboardFrameInScreenCoordinates
zoomShouldFollowFocus
notifyZoomFocusDidChangeWithType:rect:contextId:keyboardFrame:
server
registerGestureConflictWithZoom:
mainBundle
bundleIdentifier
notifyZoomKeyboardWillBecomeVisibleWithFrame:inAppWithBundleID:
activeKeyboard
notifyZoomKeyboardWillHideInAppWithBundleID:
notifyZoomKeyboardDidHideInAppWithBundleID:
CGRectValue
unsignedIntValue
notifyZoomLockButtonWasPressed
notifyZoomAppSwitcherRevealAnimationWillBegin
notifyZoomAppDidBecomeActive:keyboardFrameIfVisible:
notifyZoomAppDidEnterBackground:
enableZoomServices
disableZoomServices
_unMappedZoomPoint:
_deviceIsPortrait
_shouldUnmapPointsForD22Gestures
_accessibilityBundlePrincipalClass
_registeredForAppNotifications
safeCategoryTargetClassName
safeCategoryBaseClass
viewDidAppear:
safeValueForKey:
valueWithCGRect:
numberWithUnsignedInt:
dictionaryWithObjects:forKeys:count:
initWithName:object:userInfo:
postNotification:
appActivationAnimationStartDelay
_accessibilityActivationAnimationStartDelay
appDeactivationAnimationStartDelay
_accessibilityDeactivationAnimationStartDelay
_accessibilityActivationAnimationWillBegin
notifyZoomAppActivationAnimationWillBegin
_accessibilityDeactivationAnimationWillBegin
notifyZoomAppDeactivationAnimationWillBegin
_accessibilityPerformValidations:
showMedicalID
notifyZoomSOSMedicalIDShown
finishUIUnlockFromSource:
notifyZoomDeviceWasUnlocked
yOffsetFactor
reachabilityScaleFactor
zoomInStandby
zoomScale
setTargetContentOffset:forScrollableContainer:convergenceRate:completion:
touchesBegan:withEvent:
touchesEnded:withEvent:
safeCGPointForKey:
_convertPortaitPointToSBOrientation:
_viewOrientationDoesNotMatchSBOrientation:
_convertSBPointToPortaitOrientation:
locationInView:
translationInView:
setTranslation:inView:
view
safeCGFloatForKey:
gestureRecognizer:shouldReceiveTouch:
_locationForTouch:
anyObject
setAccessibilityIdentifier:
accessibilityIdentifier
notifyZoomFluidSwitcherGestureWillBegin
fluidSwitcherGestureTransaction:didBeginGesture:
notifyZoomFluidSwitcherGestureDidFinish
performSelector:withObject:afterDelay:
fluidSwitcherGestureTransaction:didEndGesture:
setInPreboardMode:
setInCheckerBoardMode:
loadResource:principalClass:error:
_registerZoomNotificationListeners
_updateAccessibilitySpeakCorrections
speakCorrectionsEnabled
registerUpdateBlock:forRetrieveSelector:withListener:
_webKitInitialized
_accessibilityUserChangedRouteNotification:
_accessibilitySetBoolValue:forKey:
_update
detachNewThreadSelector:toTarget:withObject:
_updateITunesSettings
postNotificationName:object:
_updateAssistiveTouchInformation
initialize
update
updateITunesSettings
mainQueue
_loadRequiredBundles
addObserverForName:object:queue:usingBlock:
applicationIsEntitledForUnmanagedASAM
loadRequiredBundlesForUnmanagedASAM
_isValidClientApp
replayer
loadGAXBundleForUnmanagedASAM
replayWithName:attempts:interval:async:queue:replayBlock:completion:
_loadSpringboardServerBundle
_loadClientBundle
loadAndReturnError:
initializeMonitoring
.cxx_destruct
notificationToken
setNotificationToken:
_notificationToken
ignoreLogging
identifier
isLoaded
_updateStatus
loadInvertColorsBundle
keyWindow
safeAreaInsets
_astDispatchQueue
allocWithZone:
dataWithBytes:length:
setObject:forKey:
sendMessageName:userInfo:
_sendKeyboardStatusUpdate:
_sendKeyboardStatusUpdateHidden
_sendKeyboardStatusUpdate
_sendSafeAreaUpdate
rectValue
objectForKeyedSubscript:
boolValue
installMediaCategoriesAndValidate
performValidations:withPreValidationHandler:postValidationHandler:
addHandler:forFramework:
installiPodUICategoriesAndValidate
object
playbackState
initWithTargetSerialQueue:
cancel
numberWithBool:
afterDelay:processBlock:
enable
centerNamed:
installKeyboardListener
installMediaControlsListener
sharedApplication
applicationState
_handleMediaPlaybackEnded
{CGPoint="x"d"y"d}
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q16@0:8
v24@0:8q16
v20@0:8B16
v24@0:8@16
v24@0:8@"NSString"16
@"UITextInputPasswordRules"16@0:8
v24@0:8@"UITextInputPasswordRules"16
v16@0:8
@24@0:8@16
v32@0:8@16@24
v40@0:8@16{_NSRange=QQ}24
@32@0:8@16@24
@32@0:8@16q24
@40@0:8@16q24q32
q32@0:8@16@24
q32@0:8@16q24
v32@0:8q16@24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@32@0:8{CGPoint=dd}16
@40@0:8{CGPoint=dd}16@32
B32@0:8@16@24
v28@0:8@16B24
v32@0:8{CGPoint=dd}16
@"NSString"24@0:8@"UITextRange"16
v32@0:8@"UITextRange"16@"NSString"24
v40@0:8@"NSString"16{_NSRange=QQ}24
@"UITextRange"32@0:8@"UITextPosition"16@"UITextPosition"24
@"UITextPosition"32@0:8@"UITextPosition"16q24
@"UITextPosition"40@0:8@"UITextPosition"16q24q32
q32@0:8@"UITextPosition"16@"UITextPosition"24
@"UITextPosition"32@0:8@"UITextRange"16q24
@"UITextRange"32@0:8@"UITextPosition"16q24
q32@0:8@"UITextPosition"16q24
v32@0:8q16@"UITextRange"24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"UITextRange"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"UITextPosition"16
@"NSArray"24@0:8@"UITextRange"16
@"UITextPosition"32@0:8{CGPoint=dd}16
@"UITextPosition"40@0:8{CGPoint=dd}16@"UITextRange"32
@"UITextRange"32@0:8{CGPoint=dd}16
@"UITextRange"16@0:8
v24@0:8@"UITextRange"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"UITextPosition"16@0:8
@"<UITextInputDelegate>"16@0:8
v24@0:8@"<UITextInputDelegate>"16
@"<UITextInputTokenizer>"16@0:8
B32@0:8@"UITextRange"16@"NSString"24
@"NSDictionary"32@0:8@"UITextPosition"16q24
q32@0:8@"UITextPosition"16@"UITextRange"24
v24@0:8@"NSArray"16
@"UIView"16@0:8
{CGPoint=dd}32@0:8{CGPoint=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
d16@0:8
v20@0:8i16
v56@0:8{CGPoint=dd}16@32d40@?48
{CGPoint=dd}24@0:8@16
v40@0:8{CGPoint=dd}16@32
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
Loading settings loader: (system: %d)
Could not load AXSystemApp Server Instance. Error: %@
Loading system app server instance: %@
AXSettingsLoader told to start
%{public}@
