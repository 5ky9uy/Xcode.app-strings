FLSQLErrorCode
v8@?0
com.apple.followup.itemstorequeue
BEGIN EXCLUSIVE TRANSACTION
COMMIT TRANSACTION
ROLLBACK TRANSACTION
v24@?0^{sqlite3_stmt=}8^B16
pragma foreign_keys=on
database
T^{sqlite3=},R,N
databasePath
T@"NSString",R,N
shouldAutomaticallyMigrate
TB,N,V_shouldAutomaticallyMigrate
@16@?0@"FLFollowUpItem"8
com.apple.language.changed
com.apple.corefollowup.agent
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
listener
T@"NSXPCListener",&,N,V_listener
com.apple.authkit.hsa2-password-reset
com.apple.authkit
v32@?0@"FLFollowUpItem"8Q16^B24
B24@?0@"FLFollowUpItem"8@"NSDictionary"16
com.apple.corefollowup.items_changed
delegate
T@"<ClientInterfaceDelegate>",R,W,N,V_delegate
uniqueIdentifier
T@"NSString",R,C,N,V_uniqueIdentifier
/Library/CoreFollowUp/items.db
INSERT OR REPLACE INTO items (uuid, title, body, show_in_settings, style, persist_when_activated, persist_when_dismissed, user_info, client_identifier, extension_identifier, group_identifier) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
v16@?0^{sqlite3_stmt=}8
INSERT INTO actions (label, url, launch_url, launch_arguments, item_id, action_identifier) VALUES (?, ?, ?, ?, ?, ?)
INSERT OR REPLACE INTO notifications (item_id, title, body, unlock_label, relevance_date, activate_action_id, dismiss_action_id, clear_action_id, frequency, creationDate, options, id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
INSERT INTO notifications (item_id, title, body, unlock_label, relevance_date, activate_action_id, dismiss_action_id, clear_action_id, frequency, creationDate, options) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DELETE FROM items WHERE id=?
DELETE FROM notifications WHERE item_id=?
DELETE FROM actions WHERE id=?
v24@?0@"FLFollowUpAction"8^B16
v24@?0@"FLFollowUpNotification"8^B16
v24@?0@"FLFollowUpItem"8^B16
SELECT id, uuid, title, body, show_in_settings, style, persist_when_activated, persist_when_dismissed, user_info, client_identifier, extension_identifier, group_identifier FROM items
 WHERE
 uuid = ?
 ORDER BY style
SELECT id, title, body, unlock_label, relevance_date, activate_action_id, dismiss_action_id, clear_action_id, frequency, creationDate, options FROM notifications
SELECT id, title, body, unlock_label, relevance_date, activate_action_id, dismiss_action_id, clear_action_id, frequency, creationDate, options FROM notifications WHERE item_id = ? LIMIT 1
SELECT id, label, url, launch_url, launch_arguments, action_identifier FROM actions
 WHERE item_id = ?
 WHERE id = ?
queryExecutor
T@"FLSQLiteExecutor",&,N,V_queryExecutor
com.apple.notifyd.matching
com.apple.springboard.lockstate
_State
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.followup.notify
notification
frequency
v16@?0Q8
v20@?0B8@"NSError"12
com.apple.akd.followup
v16@?0@"NSError"8
notificationProvider
T@"<NotificationProvider>",&,N,V_notificationProvider
queryString
T@"NSString",C,N,V_queryString
bindHandler
T@?,C,N,V_bindHandler
rowHandler
T@?,C,N,V_rowHandler
fl_convert_la_userinfo
SELECT value FROM databaseProperties WHERE key='schemaVersion'
pragma foreign_keys=off
UPDATE databaseProperties SET value='%@' WHERE key='schemaVersion'
ALTER TABLE notifications ADD COLUMN creationDate INTEGER NOT NULL DEFAULT (%f)
ALTER TABLE notifications ADD COLUMN options BLOB
_tmp
INSERT INTO items_tmp (uuid, title, body, show_in_settings, style, persist_when_activated, persist_when_dismissed, user_info, client_identifier, extension_identifier, group_identifier) SELECT uuid, title, body, show_in_settings, style, persist_when_activated, persist_when_dismissed, user_info, client_identifier, NULL, '%@' FROM items
INSERT INTO actions_tmp (label, url, launch_url, launch_arguments, item_id, action_identifier) SELECT label, url, launch_url, fl_convert_la_userinfo(launch_arguments), item_id, NULL FROM actions
INSERT INTO notifications_tmp (item_id, title, body, unlock_label, relevance_date, activate_action_id, dismiss_action_id, clear_action_id, frequency, creationDate) SELECT item_id, title, body, unlock_label, %f, activate_action_id, dismiss_action_id, clear_action_id, 0, %f from notifications
ALTER TABLE databaseProperties_tmp RENAME TO databaseProperties
ALTER TABLE notifications_tmp RENAME TO notifications
ALTER TABLE actions_tmp RENAME TO actions
ALTER TABLE items_tmp RENAME TO items
CREATE TABLE databaseProperties%@ (key TEXT PRIMARY KEY, value TEXT)
INSERT INTO databaseProperties%@ (key, value) VALUES ('schemaVersion', '%@')
CREATE TABLE notifications%@ (id INTEGER PRIMARY KEY, item_id INTEGER REFERENCES items(id) ON DELETE CASCADE, title TEXT, body TEXT, unlock_label TEXT, relevance_date INTEGER, activate_action_id INTEGER REFERENCES actions(id) ON DELETE CASCADE, dismiss_action_id INTEGER REFERENCES actions(id) ON DELETE CASCADE, clear_action_id INTEGER REFERENCES actions(id) ON DELETE CASCADE, frequency INTEGER, creationDate INTEGER, options BLOB)
CREATE TABLE actions%@ (id INTEGER PRIMARY KEY, item_id INTEGER REFERENCES items(id) ON DELETE CASCADE, label TEXT, url TEXT, launch_url TEXT, launch_arguments BLOB, action_identifier TEXT)
CREATE TABLE items%@ (id INTEGER PRIMARY KEY, uuid TEXT, client_identifier TEXT, title TEXT, body TEXT, show_in_settings INTEGER, style INTEGER, persist_when_activated INTEGER, persist_when_dismissed INTEGER, user_info BLOB, extension_identifier TEXT, group_identifier TEXT, UNIQUE(uuid))
DROP TABLE IF EXISTS databaseProperties
DROP TABLE IF EXISTS notifications
DROP TABLE IF EXISTS actions
DROP TABLE IF EXISTS items
INSERT INTO notifications_tmp (item_id, title, body, unlock_label, relevance_date, activate_action_id, dismiss_action_id, clear_action_id, frequency) SELECT item_id, title, body, unlock_label, 0, activate_action_id, dismiss_action_id, clear_action_id, 0 from notifications
CREATE TABLE notifications%@ (id INTEGER PRIMARY KEY, item_id INTEGER REFERENCES items(id) ON DELETE CASCADE, title TEXT, body TEXT, unlock_label TEXT, relevance_date INTEGER, activate_action_id INTEGER REFERENCES actions(id) ON DELETE CASCADE, dismiss_action_id INTEGER REFERENCES actions(id) ON DELETE CASCADE, clear_action_id INTEGER REFERENCES actions(id) ON DELETE CASCADE, frequency INTEGER)
CREATE TABLE databaseProperties (key TEXT PRIMARY KEY, value TEXT)
INSERT INTO databaseProperties (key, value) VALUES ('schemaVersion', '%@')
CREATE TABLE notifications (id INTEGER PRIMARY KEY, item_id INTEGER REFERENCES items(id) ON DELETE CASCADE, title TEXT, body TEXT, unlock_label TEXT, relevance_date INTEGER, activate_action_id INTEGER REFERENCES actions(id) ON DELETE CASCADE, dismiss_action_id INTEGER REFERENCES actions(id) ON DELETE CASCADE, clear_action_id INTEGER REFERENCES actions(id) ON DELETE CASCADE, frequency INTEGER)
CREATE TABLE actions (id INTEGER PRIMARY KEY, item_id INTEGER REFERENCES items(id) ON DELETE CASCADE, label TEXT, url TEXT, launch_url TEXT, launch_arguments BLOB, action_identifier TEXT)
CREATE TABLE items (id INTEGER PRIMARY KEY, uuid TEXT, client_identifier TEXT, title TEXT, body TEXT, show_in_settings INTEGER, style INTEGER, persist_when_activated INTEGER, persist_when_dismissed INTEGER, user_info BLOB, extension_identifier TEXT, group_identifier TEXT, UNIQUE(uuid))
Improper number of arguments.
Bad data.
init
beginTransaction
class
_databaseQueue
endTransaction
openTransaction
commitTransaction
_executeQuery:
rollbackTransaction
UTF8String
queryWithString:
performInsertQuery:error:
performQuery:rowHandler:
setRowHandler:
performQuery:error:
_unsafe_openDatabase:
_prepareStatementForQuery:error:
bindHandler
_printStatement:
_stepThroughRowsWithQuery:statement:
_finalizeStatement:error:
rowHandler
queryString
_handleDatabaseFailureError:
_currentDataBaseError
userInfo
objectForKeyedSubscript:
integerValue
_unsafe_closeDatabase
_unsafe_wipeDatabase
stringWithUTF8String:
numberWithInt:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
performBlockAndWait:
_unsafe_createDataBase
shouldAutomaticallyMigrate
alloc
initWithExecutor:
migrateSchemeIfNecessary
stringByDeletingLastPathComponent
defaultManager
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
removeItemAtPath:error:
performBlock:
initWithDatabasePath:
database
databasePath
performTransactionBlockAndWait:
performInsertQuery:
performQuery:
openDatabase:
wipeDatabase
closeDatabase
.cxx_destruct
setShouldAutomaticallyMigrate:
_database
_databasePath
_shouldAutomaticallyMigrate
copy
predicateWithValue:
itemsMatchingPredicate:
_itemsMatchingPredicate:identifiers:
arrayWithObjects:count:
itemsMatchingIdentifiers:
sharedInstance
safeSelectFollowUpItemsWithUniqueIdentifiers:
sharedFilter
approvalStatusForItem:
decorateUnknownItem:
clientIdentifier
isEqualToString:
fl_map:
filteredArrayUsingPredicate:
initWithClientIdentifier:
followUpItems
itemsMatchingIdentifier:
_clientIdentifier
dictionary
initWithMachServiceName:
setDelegate:
resume
_beginObservingLanguageChangeNotfication
lock
initWithXPCConnection:delegate:
setExportedInterface:
setExportedObject:
uniqueIdentifier
setObject:forKey:
unlock
removeObjectForKey:
_stopObservingLanguageChangeNotification
dealloc
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
listener:shouldAcceptNewConnection:
clientInterface:wasInvalidatedWithError:
start
listener
setListener:
_clientLock
_clientsByUniqueIdentifier
_listener
UUID
UUIDString
itemsForClientIdentifier:
count
notification
previousNotificationActionDate
setPreviousNotificationActionDate:
creationDate
setCreationDate:
enumerateObjectsUsingBlock:
recalculateActionDateToAccountForDelay
insertFollowUpItem:
_telemetryProcessor
processItemAddition:
sharedController
deliverNotificationsForItem:
_didChangeFollowUpItems
countByEnumeratingWithState:objects:count:
processItemRemoval:
deleteFollowUpItem:
tearDownNotificationForItem:
firstObject
predicateWithBlock:
allFollowUpItems
showInSettings
processCurrentItems:
updateRepeatingActivityState
didActivateHSA2LoginNotificationNotification:
title
setTitle:
informativeText
setInformativeText:
setWithObjects:
setOptions:
setUniqueIdentifier:
setClientIdentifier:
setShowInSettings:
setNotification:
followUpItemUserInfo
setUserInfo:
postFollowUpItem:completion:
sharedTelemetryController
initWithController:
countOfPendingFollowUpItemsForClientIdentifier:completion:
pendingFollowUpItemsForClientIdentifier:completion:
clearPendingFollowUpItemsForClientIdentifier:completion:
clearPendingFollowUpItemsForClientIdentifier:uniqueIdentifiers:completion:
clearNotificationForItem:completion:
postHSA2LoginNotification:completion:
postHSA2LoginCode:withNotification:completion:
postHSA2PasswordChangeForAppleID:completion:
tearDownHSA2LoginNotificationWithPushMessageID:
postHSA2PasswordResetNotification:completion:
_predicateForClientIdentifier:
delegate
_conn
_delegate
_uniqueIdentifier
stringByAppendingString:
_unsafe_insertFollowUpItem:
setSqlID:
actions
_unsafe_insertAction:item:
_unsafe_insertNotificationForItem:
sqlID
displayStyle
shouldPersistWhenActivated
shouldPersistWhenDismissed
_userInfoData
bytes
length
extensionIdentifier
groupIdentifier
setBindHandler:
label
absoluteString
launchActionURL
identifier
activateAction
dismissAction
clearAction
_unsafeSelectNotificationForFollowUpItem:
_unsafe_deleteActionWithID:
unlockActionLabel
timeIntervalSince1970
frequency
_optionsData
array
addObject:
_unsafeSelectFollowUpActionsForItem:orActionID:rowHandler:
_unsafeSelectFollowUpNotificationsWithRowHandler:
_unsafeSelectFollowUpItemsWithUniqueIdentifiers:rowHandler:
stringWithString:
appendString:
indexOfObject:
appendFormat:
stringFromColumn:inStatement:
setDisplayStyle:
setShouldPersistWhenActivated:
setShouldPersistWhenDismissed:
dataFromColumn:inStatement:
set_userInfoData:
setExtensionIdentifier:
setGroupIdentifier:
setActions:
setUnlockActionLabel:
dateFromColumn:inStatement:
setActivateAction:
setDismissAction:
setClearAction:
intervalFromColumn:inStatement:
setFrequency:
set_optionsData:
setLabel:
urlFromColumn:inStatement:
setUrl:
setLaunchActionURL:
setIdentifier:
URLWithString:
dataWithBytes:length:
dateWithTimeIntervalSince1970:
updateNotificationForFollowUpItem:
deleteNotificationForFollowUpItem:
safeSelectFollowUpActions
safeSelectFollowUpNotifications
_openDatabase
_closeDatabase
_wipeDatabase
queryExecutor
setQueryExecutor:
_queryExecutor
_monitorUnlockEvents
_processPendingNotifications:
_itemsRequiringRepeatingFollowUp
_registerActivityForItems:
valueForKey:
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
_activityCriteriaWithFrequency:
numberWithUnsignedInteger:
numberWithLong:
_deliverNotificationsForItem:forceDelivery:
shouldDeliverNotification
providerForFollowUpItem:
postNotificationForFollowUpItem:
tearDownNotificationsForFollowUpItem:
isHSA2LoginItem
isHSA2PasswordResetItem
captureActionForItem:withEvent:source:
_handleNotificationAction:forItem:activationSource:
_handleDestructiveAction:forItem:
_updateNotificationDeliveryDateForItem:
currentEnvironment
followUpExtensionSupportEnabled
sharedExtensionQueue
initWithIdentifier:
remoteInterface
_processFollowUpItemNotificationWithExtension:activatedAction:
followUpPerformUpdateWithCompletionHandler:
options
mutableCopy
removeObject:
initWithItem:
setEventSource:
handleAction:completion:
date
xpcConnectionForClientWithMachServiceName:
remoteObjectProxyWithErrorHandler:
didActivateHSA2LoginNotification:
initWithMachServiceName:options:
interfaceWithProtocol:
setRemoteObjectInterface:
provider:didActivateNotificationForFollowUpItemWithIdentifier:activationSource:
provider:didDismissNotificationForFollowUpItemWithIdentifier:activationSource:
provider:didClearNotificationsForFollowUpItemsWithIdentifiers:activationSource:
notificationProvider
setNotificationProvider:
_itemStoreDecorator
_notificationProvider
setQueryString:
_queryString
_bindHandler
_rowHandler
_schemaVersion
_migrateSchema:toSchema:
_createCleanCurrentDatabase
_migrateToCurrentFrom:
_dropTables
_createCurrentDatabaseWithTableSuffix:
_migrateFujitailToCurrent
numberWithLongLong:
stringWithFormat:
_createErilutionOneDatabaseWithTableSuffix:
_migrateFujitailToErilutionOne
dataWithPropertyList:format:options:error:
Executing query: %@
SQL Exec %@ failed with error %s.
Executing query: %s
Rows changed: %d
Database error detected: %@
Database corruption detected: %@
Migration was suppressed...
Attempting to open database at path: %@
%@: Failed to open file at path %@
Database opened at path: %@
Attempting to wipe database at path: %@
Failed to wipe database with error: %@
Closing database
Closed database with result: %d
Notified of language change. Will exit when all clear.
Replacing existing item %@ with matching identifier
Inserting a new follow up
%@: Failed to insert follow up item into database
Searching for matching item in store, using identifier: %@
Failed to insert item with error: %@
Failed to insert action with error: %@
Using creation date from %@
Failed to insert notification with error: %@
Deleting item: %@
Failed to delete notification with error: %@
Deleting notifications for item %@
Failed to delete action with error: %@
Actions Fetched: %@
Notifications Fetched: %@
Item Fetched: %@
Failed to select items with error: %@
Found notification: %@
Failed to select notifications for item with error: %@
Failed to select actions for item with error: %@
XPC event (%@) handler called.
No special handling for XPC event: %@
Unregistering any active activities
Starting a repeating activity based on items: %@
XPC activity says that it's time post notifications!
Error setting activity continue
Posted %@ notifications
Error setting activity done
XPC activity registration complete. State: %@.
Registered for XPC events
Scheduling XPC activity with interval %f
Processing pending notifications...
Processed pending notifications...
Deliverying notification for item with identifier: %@
%@: Ignoring notification activation with nil uniqueIdentifier
Activated notification for %@
Clearing notifications for %@
Dismissing notification: %@
Handling notification action %@ for item %@
Remote interface not available... that's that
Handling destructive notification action %@ for item %@
Failed to handle action with error: %@
Resetting notification target date to now
%@: XPC Error from client delegate while trying to send an HSA2 login activation callback - %@
followup/migration
Migrating from %lld to %lld
Unable to create migrator function
Creating Current database with suffix
Dropping all tables...
Starting launch arguments conversion
Row migration completed
FLSQLiteExecutor
FLItemStoreDecorator
FollowUpServer
NSXPCListenerDelegate
NSObject
ClientInterfaceDelegate
ClientInterface
FLDaemonProtocol
ItemStore
FLFollowUpControllerDelegate
NotificationController
NotificationProviderDelegate
FLSQLiteQuery
FLStoreMigrator
v24@0:8@?16
@16@0:8
@24@0:8@16
^{sqlite3=}16@0:8
v16@0:8
i24@0:8@16
q24@0:8@16
B24@0:8@16
B32@0:8@16@?24
B32@0:8@16^@24
q32@0:8@16^@24
v24@0:8^{sqlite3_stmt=}16
v32@0:8@16^{sqlite3_stmt=}24
^{sqlite3_stmt=}32@0:8@16^@24
B32@0:8^{sqlite3_stmt=}16^@24
B24@0:8^@16
i16@0:8
B16@0:8
v20@0:8B16
^{sqlite3=}
@"NSString"
@32@0:8@16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@16@24
v32@0:8@"ClientInterface"16@"NSError"24
v24@0:8@16
@"NSLock"
@"NSMutableDictionary"
@"NSXPCListener"
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@"FLFollowUpItem"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@"NSString"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"FLHSA2LoginNotification"16@?<v@?Q@"NSError">24
v40@0:8@"NSNumber"16@"FLHSA2LoginNotification"24@?<v@?Q@"NSError">32
v24@0:8@"NSString"16
v24@0:8@"FLHSA2LoginNotification"16
v32@0:8@"FLHSA2PasswordResetNotification"16@?<v@?B@"NSError">24
@"NSXPCConnection"
@"<ClientInterfaceDelegate>"
q32@0:8@16@24
B24@0:8q16
v40@0:8@16q24@?32
@32@0:8q16^{sqlite3_stmt=}24
d32@0:8q16^{sqlite3_stmt=}24
@"FLSQLiteExecutor"
v40@0:8@16@24Q32
v40@0:8@"<NotificationProvider>"16@"NSString"24Q32
v40@0:8@"<NotificationProvider>"16@"NSArray"24Q32
@24@0:8d16
v28@0:8@16B24
@"FLItemStoreDecorator"
@"<NotificationProvider>"
@?16@0:8
q16@0:8
v32@0:8q16q24
v24@0:8q16
@(#)PROGRAM:followupd  PROJECT:CoreFollowUp-1
bplist00
 !"#$%&'#(_
BuildMachineOSBuild_
CFBundleAllowMixedLocalizations_
CFBundleDevelopmentRegion_
CFBundleExecutable_
CFBundleIdentifier_
CFBundleInfoDictionaryVersion\CFBundleName_
CFBundlePackageType_
CFBundleShortVersionString_
CFBundleSupportedPlatforms_
CFBundleVersionZDTCompiler_
DTPlatformBuild^DTPlatformName_
DTPlatformVersionZDTSDKBuildYDTSDKNameWDTXcode\DTXcodeBuild_
MinimumOSVersion^UIDeviceFamilyW16B2657
RenYfollowupd_
com.apple.followupdS6.0TAPPLS1.0
AppleTVSimulator_
"com.apple.compilers.llvm.clang.1_0P_
appletvsimulatorT11.2U15K85_
appletvsimulator11.2T0920T9C16
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.bulletinboard.dataprovider</key>
<true/>
<key>com.apple.bulletinboard.observer</key>
<true/>
<key>com.apple.bulletinboard.utilities</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.openurlswhenlocked</key>
<true/>
<key>com.apple.springboard.setbadgestring</key>
<true/>
</dict>
</plist>
