alloc
distantFuture
initWithFireDate:interval:target:selector:userInfo:repeats:
init
mstreamdIdleTimerDidFire:
_dormantTimerWithSelector:
currentRunLoop
addTimer:forMode:
idleStateNotificationTimerDidFire:
photoStreamDaemonPokeTimerDidFire:
albumSharingDaemonPokeTimerDidFire:
invalidate
dealloc
dateWithTimeIntervalSinceNow:
setFireDate:
currentThread
mainThread
_didIdle
performSelectorOnMainThread:withObject:waitUntilDone:
sharedManager
isPaused
_startIdleTimerWithInterval:
fireDate
date
timeIntervalSinceDate:
_stopIdleTimer
nextActivityDate
distantPast
isEqualToDate:
timeIntervalSinceNow
_didUnidle
retryOutstandingActivities
_resetIdleTimer
isBusy
mediaStreamDaemonDidIdle:
mediaStreamDaemonDidUnidle:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
MSAlbumSharingDaemonDidIdle:
MSAlbumSharingDaemonDidUnidle:
MSAlbumSharingDaemonDidUnidleMomentarily:
MSAlbumSharingDaemon:didForgetPersonID:
MSAlbumSharingDaemon:didReceiveTooManyAlbumsError:personID:
MSAlbumSharingDaemon:didReceiveTooManyPhotosError:forAlbum:personID:
MSAlbumSharingDaemon:didReceiveTooManySubscriptionsError:personID:
MSAlbumSharingDaemon:didReceiveTooManyCommentsError:forAssetCollection:inAlbum:personID:
MSAlbumSharingDaemon:didReceiveCommentTooLongError:forAssetCollection:inAlbum:personID:
doNothingTimer:
.cxx_destruct
daemon
setDaemon:
albumSharingDaemon
setAlbumSharingDaemon:
_idleTimer
_lastNotifiedState
_idleStateNotificationTimer
_daemon
_albumSharingDaemon
_busyCount
_photoStreamDaemonPokeTimer
_albumSharingDaemonPokeTimer
shouldLogAtLevel:
logFacility:level:format:args:
setDelegate:
start
runMode:beforeDate:
stop
shutDownCompletionBlock:
timerWithTimeInterval:target:selector:userInfo:repeats:
initWithMachServiceName:
resume
defaultCenter
mainQueue
defaultMonitor
isExternalPowerConnected
personIDToPowerBudgetMap
allValues
countByEnumeratingWithState:objects:count:
didBeginExternalPower
didEndExternalPower
addObserverForName:object:queue:usingBlock:
_serverSideConfigurationDidChange:
addObserver:selector:name:object:
valueForEntitlement:
boolValue
setExportedObject:
isBusyCompletionBlock:
enqueueAssetCollections:personID:reply:
dequeueAssetCollectionWithGUIDs:personID:reply:
deleteAssetCollections:personID:
pollForSubscriptionUpdatesForPersonID:
pollForSubscriptionUpdatesTriggeredByPushNotificationForPersonID:
serverSideConfigurationForPersonID:reply:
refreshServerSideConfigurationForPersonID:
resetServerStateForPersonID:
abortAllActivityForPersonID:
pauseForUUID:
unpauseForUUID:
forgetEverythingForPersonID:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
setExportedInterface:
_setQueue:
releaseBusy
toggleAssertion
didIdle
retainBusy
didUnidle
initWithEnvironmentName:namedDelegatePort:queue:
_updatePushNotificationTopicsOutListenToProduction:outListenToDevelopment:
arrayWithObjects:count:
setEnabledTopics:
reenqueueQuarantinedActivitiesWithReason:
removeObserver:
enqueueAssetCollection:personID:outError:
numberWithBool:
dictionaryWithObject:forKey:
setObject:forKey:
dequeueAssetCollectionWithGUIDs:personID:outError:
deleteAssetCollections:forPersonID:
subscriberPluginClass
personIDsForPollingTriggeredByPushNotification
count
personIDUsesProductionPushEnvironment:
thePlatform
setPushToken:
topic
userInfo
isEqualToString:
objectForKey:
serverSideConfigurationForPersonID:
dictionaryWithObjectsAndKeys:
baseURLForPersonID:
resetServerObjectWithPersonID:baseURL:
resetServer
pingPauseUUID:
unpauseUUID:
forgetPersonID:
removeObjectForKey:
personIDToPowerBudgetPersistedValuesMap
rearmAuthenticationAlert
didEncounterAuthenticationFailureForPersonID:
didEncounterAuthenticationSuccessForPersonID:
isWaitingForAuth
stopAllActivities
numberWithInteger:
stringWithFormat:
sharedAlertManager
displayAlertForPersonID:notificationDict:completionBlock:
dictionary
_powerBudgetForPersonID:
doubleValueForParameter:forPersonID:defaultValue:
setMaxActiveTimeAfterPush:
setMaxActiveTimeAfterLossOfForeground:
setMaxActiveTimeAfterGlobalResetSync:
setPersonID:
_readPowerBudgetParametersForPersonID:
personID
MSSafeUnarchiveObjectWithFile:outError:
isEqualToDictionary:
archiveRootObject:toFile:
defaultManager
removeItemAtPath:error:
didReceiveGlobalResetSync
didBeginForegroundFocus
didEndForegroundFocus
didReceivePushNotification
isFileTransferAllowed
MSPowerBudgetDidRequestPersistedValues:
MSPowerBudget:didRequestStorageOfPersistedValues:
MSPowerBudgetGotSignificantEvent:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
pauseManagerDidPause:
pauseManagerDidUnpause:
listener:shouldAcceptNewConnection:
didReceiveNewServerSideConfigurationForPersonID:
didReceiveAuthenticationFailureForPersonID:
didReceiveAuthenticationSuccessForPersonID:
didExceedPublishQuotaForPersonID:retryDate:
didReceiveGlobalResetSyncForPersonID:
didBeginForegroundFocusForPersonID:
didEndForegroundFocusForPersonID:
didReceivePushNotificationForPersonID:
mayDownloadPersonID:
setPersonIDToPowerBudgetPersistedValuesMap:
setPersonIDToPowerBudgetMap:
_center
_noWakeCenter
_prodAPSConnection
_devAPSConnection
_powerAssertionManager
_personIDToPowerBudgetPersistedValuesMap
_personIDToPowerBudgetMap
stringByAppendingPathComponent:
initWithService:
addDelegate:queue:
accounts
noWakeServiceListener
initWithServiceName:queue:delegate:
setNoWakeServiceListener:
object
stopAssetDownloadsForPersonID:
UTF8String
sendServerSideConfigurationDidChangeNotificationForPersonID:
busyPingTimer
setBusyPingTimer:
shutDown
removeAllObjects
setContext:
unarchiveObjectWithData:
setRelationshipState:
addAlbum:
GUID
deleteAlbumWithGUID:
personIDsListeningToPushNotification
personIDEnabledForAlbumSharing:
powerBudgetForPersonID:
theDaemon
setFocusAlbumGUID:
setFocusAlbumGUID:forPersonID:
setFocusAssetCollectionGUID:
setFocusAssetCollectionGUID:forPersonID:
doubleValue
powerBudgetPersistedParameters
persistentObjectForKey:personID:
setPowerBudgetPersistedParameters:
setPersistentObject:forKey:personID:
_busyPingTimerDidExpire:
forgetEverythingAboutPersonID:completionBlock:
forgetEverythingCompletionBlock:
XPCNSServiceListener:didReceiveNewConnection:
XPCNSServiceListener:shouldReceiveNewConnection:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:account:incomingMessage:fromID:
didDestroyStateMachineForPersonID:
isPersonIDAllowedToDownloadAssets:
stabilizedDidIdle
stabilizedDidUnidle
didReceiveAuthFailureForPersonID:
didReceiveAuthSuccessForPersonID:
serviceListener
setServiceListener:
prodAPSConnection
setProdAPSConnection:
devAPSConnection
setDevAPSConnection:
idsService
setIdsService:
_serviceListener
_powerBudgetPersistedParameters
_busyPingTimer
_idsService
delegate
foregroundPingTimerByPersonID
_foregroundPingTimerDidExpire:
XPCForegroundRequestByPersonID
sendReply:
message
isInRetryState
retryOutstandingActivitiesForPersonID:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
cancelActivitiesForPersonID:
workQueue
modelForPersonID:
array
albumGUIDs
addObject:
albumWithGUID:
accessControlGUIDsForAlbumWithGUID:
accessControlWithGUID:
invitationGUIDs
invitationWithGUID:
assetCollectionGUIDsInAlbumWithGUID:
assetCollectionWithGUID:
videoURLForAssetCollectionWithGUID:completionBlock:
unsignedIntegerValue
videoURLsForAssetCollectionWithGUID:forMediaAssetType:completionBlock:
isAssetCollectionWithGUIDMarkedAsUnviewed:
commentsForAssetCollectionWithGUID:
commentWithGUID:
dictionaryWithCapacity:
refreshResetSync:personID:info:
refreshContentOfAlbumWithGUID:resetSync:personID:info:
refreshAccessControlListOfAlbumWithGUID:personID:info:
refreshCommentsForAssetCollectionWithGUID:resetSync:personID:info:
addAlbum:personID:info:
modifyAlbumMetadata:personID:info:
deleteAlbumWithGUID:personID:info:
markAlbumGUIDAsViewed:personID:moveLastViewedAssetCollectionMarker:info:
subscribeToAlbumWithGUID:personID:info:
unsubscribeFromAlbumWithGUID:personID:info:
markAsSpamInvitationWithGUID:personID:
markAsSpamAlbumWithGUID:personID:
markAsSpamInvitationWithToken:personID:
acceptInvitationWithToken:personID:info:completionBlock:
acceptInvitationWithGUID:personID:info:
rejectInvitationWithGUID:personID:info:
addAccessControlEntries:toAlbumWithGUID:personID:info:
removeAccessControlEntryWithGUID:personID:info:
addAssetCollections:toAlbumWithGUID:personID:info:
deleteAssetCollectionWithGUID:personID:info:
deleteAssetCollectionsWithGUIDs:personID:
markCommentsForAssetCollectionWithGUID:asViewedWithLastViewedDate:personID:info:
addComments:toAssetCollectionWithGUID:personID:info:
deleteCommentWithGUID:personID:info:
retrieveAssets:inAlbumWithGUID:personID:
intValue
retrieveAssetsInAssetCollectionsWithGUIDs:assetTypeFlags:personID:
_handleForegroundPing:request:
stabilizedIsBusy
assetsInDownloadQueueCountForPersonID:
numberWithInt:
deviceHasEnoughDiskSpaceRemainingToOperate
existingModelForPersonID:
hasEnqueuedActivities
_handleFocusAlbum:
setPublicAccessEnabled:forAlbumWithGUID:personID:completionBlock:
setMultipleContributorsEnabled:forAlbumWithGUID:personID:completionBlock:
XPCNSServiceConnection:didReceiveRequest:sequenceNumber:
XPCNSServiceConnectionDidDisconnect:
setForegroundPingTimerByPersonID:
setXPCForegroundRequestByPersonID:
_foregroundPingTimerByPersonID
_XPCForegroundRequestByPersonID
Starting idle check timer with an interval of %.1f seconds.
Stopping idle timer
Daemon idled.
Not starting exit timer because daemon is paused.
Extending exit timer period.
Daemon unidled.
Idle timer fired.
Checking for idle on main loop
Sending idle state polling notification
mstreamd starting up.
Sending idle state polling notification at shutdown
mstreamd shutting down.
My Photo stream not enabled, not listening to any push notifications.
Created APS connection %{public}@
PersonIDs waiting for push: %@
The subscription plugin class does not support push notification refreshing.
Not listening to push notifications.
Received new push token.
Received push notification for invitations topic: %@ userInfo: %@
%{public}@: Received unknown push notification, ignoring
Paused.
Unpaused.
Received quota excess failure for person ID %@. Next retry date: %{public}@
%{public}@: Creating power budget object for person ID %@
Unable to unarchive persisted power budget values: %@
%@ Server-side configuration has changed for personID %@. Reading new values.
Registered IDS service for %@
Shared Streams daemon starting.
%{public}@: Listening to prod push notifications.
%{public}@: Listening to dev push notifications.
Shared stream not enabled, not listening to any push notifications.
%{public}@: Shared Streams daemon shutting down.
%@: Shared Streams daemon has shut down.
%{public}@: Failed to get entitlement for pid %d
%{public}@: Failed to create security task from audit token for pid %d
%{public}@: Rejecting incoming connection from pid %d lacking of the correct entitlement.
%{public}@ Client connected: %{public}@
%{public}@: Received incoming message %@ for service %{public}@ account %@ from %@
Adding new pending album: %@
Removing album: %@
Unknown operation %{public}@ for %@
%{public}@: Not listening to push notifications.
Received new push notification topic: %@ userInfo: %@
%{public}@: Shared Photo Stream is disabled for person ID %@. Not creating power budget.
%{public}@: Destroying power budget object for person ID %@
%{public}@: Daemon stabilized in idle state. Sending notification.
%{public}@: Daemon busy ping timer expired. Sending notification.
%{public}@: Daemon in unidled state. Sending notification.
%{public}@: Holding foreground assertion for personID 
%{public}@: Dropping foreground assertion for personID 
%{public}@: Serving message %{public}@ from client %{public}@
%{public}@
%{public}@: Daemon busy: %d
%{public}@: Unknown request %{public}@ from client %{public}@. Ignoring.
%{public}@: Client disconnected: %{public}@
v8@?0
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
daemon
T@"MSIOSMediaStreamDaemon",W,N,V_daemon
albumSharingDaemon
T@"MSIOSAlbumSharingDaemon",W,N,V_albumSharingDaemon
com.apple.notifyd.matching
mstremad waking up
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.mediastream.mstreamd
forceProtocolVersion
B12@?0i8
v28@?0i8@"NSString"12[1{__va_list_tag=II^v^v}]20
com.apple.mediastream.mstreamd.push-dev
com.apple.mediastream.mstreamd.push-prod
com.apple.mediastream.subscription.push
com.apple.mediastream.mstreamd-access
v16@?0@"NSNotification"8
Authentication changed
QUOTA_BODY_PLURAL
QUOTA_TITLE
QUOTA_OK_BUTTON
Power budget got significant change
personIDToPowerBudgetPersistedValuesMap
T@"NSMutableDictionary",&,N,V_personIDToPowerBudgetPersistedValuesMap
personIDToPowerBudgetMap
T@"NSMutableDictionary",&,N,V_personIDToPowerBudgetMap
powerBudget.plist
com.apple.mediastream.mstreamd.sharing.push-dev
com.apple.mediastream.mstreamd.sharing.push-prod
com.apple.private.alloy.photostream
com.apple.sharedstreams
albumData
type
delete
MSIOSAlbumSharingDaemon.powerBudgetParams
serviceListener
T@"XPCNSServiceListener",&,N,V_serviceListener
noWakeServiceListener
T@"XPCNSServiceListener",&,N,VnoWakeServiceListener
prodAPSConnection
T@"APSConnection",&,N,V_prodAPSConnection
devAPSConnection
T@"APSConnection",&,N,V_devAPSConnection
busyPingTimer
T@"NSTimer",&,N,V_busyPingTimer
powerBudgetPersistedParameters
T@"NSDictionary",&,N,V_powerBudgetPersistedParameters
idsService
T@"IDSService",&,N,V_idsService
MSMSASServiceConnection work queue
%@: Failed to properly decode personID from incoming message in %@
AlbumSharingDaemon
v32@?0@"NSError"8@"NSURL"16@"NSDate"24
v32@?0@"NSError"8@"NSArray"16@"NSDate"24
v24@?0@"NSDictionary"8@"NSError"16
v16@?0@"NSError"8
foregroundPingTimerByPersonID
T@"NSMutableDictionary",&,N,V_foregroundPingTimerByPersonID
XPCForegroundRequestByPersonID
T@"NSMutableDictionary",&,N,V_XPCForegroundRequestByPersonID
MediaStreamMonitor
MSMediaStreamDaemonDelegate
MSAlbumSharingDaemonDelegate
NSObject
MSDaemonProtocols
MSIOSMediaStreamDaemon
MSPowerBudgetDelegate
APSConnectionDelegate
MSPauseManagerDelegate
NSXPCListenerDelegate
MSIOSAlbumSharingDaemon
XPCNSServiceListenerDelegate
IDSServiceDelegate
MSMSASServiceConnection
XPCNSServiceConnectionDelegate
v24@0:8@16
v24@0:8@"MSMediaStreamDaemon"16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24@32
v48@0:8@16@24@32@40
v56@0:8@16@24@32@40@48
v24@0:8@"MSAlbumSharingDaemon"16
v32@0:8@"MSAlbumSharingDaemon"16@"NSString"24
v40@0:8@"MSAlbumSharingDaemon"16@"NSError"24@"NSString"32
v48@0:8@"MSAlbumSharingDaemon"16@"NSError"24@"MSASAlbum"32@"NSString"40
v56@0:8@"MSAlbumSharingDaemon"16@"NSError"24@"MSASAssetCollection"32@"MSASAlbum"40@"NSString"48
v16@0:8
v24@0:8d16
@"NSTimer"
@"MSIOSMediaStreamDaemon"
@"MSIOSAlbumSharingDaemon"
v24@0:8@?16
v40@0:8@16@24@?32
v32@0:8@16@?24
v24@0:8@?<v@?B>16
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary">32
v32@0:8@"NSArray"16@"NSString"24
v24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"NSDictionary">24
@24@0:8@16
@"NSDictionary"24@0:8@"MSPowerBudget"16
v32@0:8@"MSPowerBudget"16@"NSDictionary"24
v24@0:8@"MSPowerBudget"16
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v24@0:8@"MSPauseManager"16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8^B16^B24
@"NSXPCListener"
@"APSConnection"
@"MSPowerAssertionManager"
@"NSMutableDictionary"
v32@0:8@"XPCNSServiceListener"16@"XPCNSServiceConnection"24
B32@0:8@"XPCNSServiceListener"16@"NSObject<OS_xpc_object>"24
v64@0:8@16@24@32@40@48@56
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@"XPCNSServiceListener"
@"NSDictionary"
@"IDSService"
v40@0:8@16@24Q32
v40@0:8@"XPCNSServiceConnection"16@"XPCNSRequest"24Q32
v24@0:8@"XPCNSServiceConnection"16
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>${EXECUTABLE_NAME}</string>
<key>CFBundleIdentifier</key>
<string>com.apple.mediastream.mstreamd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundlePackageType</key>
<string>com.apple.product-type.tool</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleVersion</key>
<string>2</string>
<key>CFBundleShortVersionString</key>
<string>2.0</string>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>1516615657</string>
<key>application-identifier</key>
<string>Apple Certification Authority.</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.private.corerecents</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.photostream</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.photostream</string>
</array>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServicePhotos</string>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.security.personal-information.addressbook</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>appleaccount</string>
</array>
</dict>
</plist>
