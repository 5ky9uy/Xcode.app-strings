333333
333333
?ffffff
&@333333
?ffffff
(@333333
?ffffff
Uninitialized
Not logged in
Waiting
Waiting to sync
Syncing
Error
Showing menu
Update
Login failed
Sync complete
Sync error
Data client connected
Data client connect failed
Data client disconnected
User initiated login
User initiated retry
My Music view controller
MusicSyncStatusBinding
ICloudLibraryLoadingMessage
NoMusicFuseErrorMessage
NoMusicDefaultErrorMessage
#T:[%@%p] #Notice #%@ : Tried to show top menu view controller when it is already being shown 
Main:
v8@?0
v24@?0@"SSAuthenticateResponse"8@"NSError"16
ITunesLoginTitle
ITunesLoginMessage
placeholder_error_music
ICloudErrorRetryButton
ICloudLibraryTitle
ICloudLibraryConnectionFailure
ITunesInTheCloudTitle
ITunesInTheCloudConnectionFailure
musicSyncStatus
@"NSString"40@?0@"TVSStateMachine"8@"NSString"16@24@"NSDictionary"32
v16@?0@"TVMusicCloudViewController"8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
stateMachine
T@"TVSStateMachine",&,N,V_stateMachine
isUserLoggedIn
TB,N,V_isUserLoggedIn
topMenuViewController
T@"UIViewController",&,N,V_topMenuViewController
cloudProgressView
T@"TVMusicCloudProgressView",&,N,V_cloudProgressView
activityIndicatorView
T@"UIActivityIndicatorView",&,N,V_activityIndicatorView
loginPromptView
T@"TVSignInLandingView",&,N,V_loginPromptView
errorMessageView
T@"UIView",&,N,V_errorMessageView
currentDisplayedView
T@"UIView",W,N,V_currentDisplayedView
noMusicView
T@"UIView",&,N,V_noMusicView
cloud
subscription
itunesradio
serviceType
TQ,R,N
isVideoMediaType
TB,R,N
Endpoint selector
tableView
T@"TVTableView",&,N,V_tableView
routingController
T@"MPAVRoutingController",&,N,V_routingController
lastFocusedRouteID
T@"NSString",&,N,V_lastFocusedRouteID
didSelectRouteBlock
T@?,C,N,V_didSelectRouteBlock
AirplayDestinationIcon
AirplaySpeakerIcon
routeDeviceType
Tq,N,V_routeDeviceType
TVMusic
#T:[%@%p] #Warning #%@ : No context menu items supplied for menu with heading "%@" -- context menu will not be shown. 
v16@?0@"UIAlertAction"8
MusicLibraryGenres
v24@?0@"MPModelLibraryResponse"8@"NSError"16
v16@?0@"NSIndexPath"8
delegate
T@"<TVTableViewDelegate>",W,D,N
indexPathForLastFocusedItem
T@"NSIndexPath",R,C,N,V_indexPathForLastFocusedItem
ExplicitLyricsErrorTitle
ExplicitLyricsErrorMessage
LyricsUnvailableErrorTitle
LyricsUnvailableErrorMessage
MusicOK
v24@?0@"NSString"8^B16
<br>
artworkImageView
T@"TVImageView",&,N,V_artworkImageView
lyrics
T@"NSString",C,N,V_lyrics
lyricsID
T@"NSString",C,N,V_lyricsID
mediaItem
T@"<TVPMediaItem>",&,N,V_mediaItem
storeArtworkDictionary
T@"NSDictionary",&,N,V_storeArtworkDictionary
artworkURL
T@"NSURL",&,N,V_artworkURL
artworkImageProxy
T@"TVImageProxy",&,N,V_artworkImageProxy
duration
popularity
explicit
data-content-id
music-library-id
play-icon-when-focused
music-track-type
song
classical-work
classical-movement
playbackViewController
T@"TVPPlaybackViewController",&,N,V_playbackViewController
player
T@"<TVPPlayback>",&,N,V_player
NOT_NOW_BUTTON
ON_LAUNCH_ALERT_TITLE
ON_LAUNCH_ALERT_MESSAGE
ON_CONTAINER_LOAD_ALERT_TITLE
ON_CONTAINER_LOAD_ALERT_MESSAGE
ON_PLAY_PASSCODE_SET_ALERT_TITLE
ON_PLAY_PASSCODE_SET_ALERT_MESSAGE
ON_PLAY_ALERT_TITLE
ON_PLAY_ALERT_MESSAGE
ON_PURCHASE_PASSCODE_SET_ALERT_TITLE
ON_PURCHASE_PASSCODE_SET_ALERT_MESSAGE
ON_PURCHASE_ALERT_TITLE
ON_PURCHASE_ALERT_MESSAGE
ON_ADD_TO_LIBRARY_PASSCODE_SET_ALERT_TITLE
ON_ADD_TO_LIBRARY_PASSCODE_SET_ALERT_MESSAGE
ON_ADD_TO_LIBRARY_ALERT_TITLE
ON_ADD_TO_LIBRARY_ALERT_MESSAGE
RESTRICTIONS_BUTTON
ALLOW_EXPLICIT_BUTTON
prefs:root=Restrictions
v20@?0B8@"NSError"12
onLaunch
onContainerLoad
onPlay
onPurchase
onAddToLibrary
v16@?0@"MPIdentifierSet"8
v16@?0@"MPModelSong"8
v24@?0@"MPModelSong"8@"NSError"16
com.apple.TVMusic.TVMusicPlaybackHelper.lyrics.sharedQueue
artworkCatalogs
T@"NSArray",&,N,V_artworkCatalogs
imageOffset
T{CGPoint=dd},N,V_imageOffset
MusicLibrarySeasonTitle
v24@?0@"TVImageView"8@"UIImage"16
EpisodeSongCellIdentifier
v16@?0@"TVPMusicContextMenuData"8
v24@?0@"TVMusicSongCell"8@"UIImage"16
TVMusicAppOpenURLNotification
v16@?0@"AVAudioSession"8
v32@?0@"NSDictionary"8@"<TVPhotoServerInterface>"16@?<v@?@"NSArray"@"NSError">24
mediaRepeatMode
nowplaying
play
persistentID
album
playlist
musicVideo
movie
tvEpisode
tvSeason
#T:[%@%p] #Notice #%@ : Unknown play item type [%@] in [%@] 
#T:[%@%p] #Notice #%@ : Not enough parameters for play command in [%@] 
internal
v28@?0@"SSVSubscriptionStatus"8B16@"NSError"20
#T:[%@%p] #Error #%@ : No IKAppContext available: Javascript will not work properly! 
itms
#T:[%@%p] #Warning #%@ : Subscription account status is unknown when player is about to change state. 
FuseLostLeaseTitle
FuseLostLeaseMessage
#T:[%@%p] #Notice #%@ : Account need authentication. 
previewPlayer
T@"<TVPPlayback>",&,N,V_previewPlayer
subscriptionStatus
T@"SSVSubscriptionStatus",&,N,V_subscriptionStatus
purchaseManager
T@"SSPurchaseManager",&,N,V_purchaseManager
reportingPlaybackObserver
T@"TVMusicPlaybackObserver",&,N,V_reportingPlaybackObserver
T@"<TVPPlayback>",R,N
navigationController
T@"UINavigationController",R,N
supportsLyrics
v28@?0@"TVImage"8@"NSError"16B24
completion
T@?,C,N,V_completion
imageLoaded
TB,N,GisImageLoaded,V_imageLoaded
_tintColor
T@"UIColor",&,N,S_setTintColor:,V__tintColor
_focusedColor
T@"UIColor",&,N,S_setFocusedColor:,V__focusedColor
_enableEdgeAntialiasingOnSelected
TB,N,S_setEnableEdgeAntialiasingOnSelected:,V__enableEdgeAntialiasingOnSelected
_edgeAntialiasingOnSelectedRestrictedToLeftRightEdge
TB,N,S_setEdgeAntialiasingOnSelectedRestrictedToLeftRightEdge:,V__edgeAntialiasingOnSelectedRestrictedToLeftRightEdge
image
T@"UIImage",&,N
placeholderImage
T@"UIImage",&,N,V_placeholderImage
cornerRadius
Td,N
imageProxy
T@"TVImageProxy",&,N,V_imageProxy
MusicLibraryNoMusic
containerView
T@"UIView",&,N,V_containerView
titleLabel
T@"UILabel",&,N,V_titleLabel
messageLabel
T@"UILabel",&,N,V_messageLabel
message
T@"NSString",&,N,V_message
T@"TVMusicPlayer",&,N,V_player
playlistRepeatMode
Tq,N,V_playlistRepeatMode
badgeView
T@"UIView",&,N,V_badgeView
placeholderAssetType
Tq,N,V_placeholderAssetType
TVMusicPlaylistCellIdentifier
TVMusicAddToPlaylistErrorDomain
AddToPlaylistMessage
AddToPlaylistOK
v16@?0@"NSError"8
AddToPlaylistCancel
AddToAPlaylist
NewPlaylist
v24@?0@"NSError"8@"MPModelPlaylist"16
#T:[%@%p] #Warning #%@ : Error adding item [%@]: %@ 
v16@?0@"NSString"8
B8@?0
v32@?0@"MPModelPlaylist"8@"NSIndexPath"16^B24
PLAYLIST_ADD_BEHAVIOR_ALERT_TITLE_SINGULAR
PLAYLIST_ADD_BEHAVIOR_ALERT_TITLE_PLURAL
PLAYLIST_ADD_BEHAVIOR_ALERT_MESSAGE
PLAYLIST_ADD_BEHAVIOR_ADD_BUTTON
PLAYLIST_ADD_BEHAVIOR_DONT_ADD_BUTTON
spinner
T@"UIActivityIndicatorView",&,N,V_spinner
mpRequest
T@"MPModelLibraryRequest",&,N,V_mpRequest
folderPlaylist
T@"MPModelPlaylist",&,N,V_folderPlaylist
songToAdd
T@"MPModelSong",&,N,V_songToAdd
PlaylistNameHeading
CreatePlaylistButton
completionBlock
T@?,C,N,V_completionBlock
hidePresentingView
TB,N,V_hidePresentingView
PlaylistSongCell
MusicLibraryAlbumPlayNext
MusicLibraryAlbumAddToUpNext
v24@?0@"MPModelResponse"8@"NSError"16
SongsCount
T@"MPModelPlaylist",&,N,V_playlist
mpResponse
T@"MPModelResponse",&,N,V_mpResponse
imageViews
T@"NSArray",C,N,V_imageViews
minimumInteritemSpacing
Td,N,V_minimumInteritemSpacing
menuicon_shuffle-mask
MusicLibraryShuffle
menuicon_more-mask
MusicLibraryMore
MusicLibraryShuffleAll
MusicLibraryGoToArtist
menuicon_artist-mask
icon_gotoshow_mask
MusicLibraryGoToShow
MusicLibraryAllSeasons
TVMusicPlaybackContainerChangedNotification
Not Applicable
Other
Skipped Backward
Skipped Forward
Playlist changed
Manual Pause
Interruption
Inactivity Pause
Session timeout
Scrub begin
Scrub end
Played to end
Track Banned
Failed to load
Quick Play
T@"<TVPPlayback>",R,N,V_player
offline
TB,N,GisOffline,V_offline
reportingController
T@"MPCReportingController",R,N,V_reportingController
SBEnabled
TB,N,GisSBEnabled,V_SBEnabled
storeAccountID
TQ,N,V_storeAccountID
v16@?0@"MPModelGenericObject"8
%@.%@
T@"MPModelSong",&,N,V_song
mediaItemMetadata
T@"NSDictionary",&,N,V_mediaItemMetadata
T@"TVPBaseMediaItem",&,N,V_mediaItem
containerGuide
T@"UIFocusContainerGuide",R,N,V_containerGuide
musicRadioCard
musicCard
musicInfoCard
musicMiniCard
musicShowCard
musicPostcard
musicArtistInfoCard
musicAboutCard
musicSongLockup
musicListSongLockup
userProfileBanner
socialBadge
MyMusic
Library
NowPlaying
MusicStackStyleSheet
MusicSearchStyleSheet
MusicProductStyleSheet
MusicProductBundleStyleSheet
musicLibraryClientData
mediaLibraryClientData
T@"<TVPPlayback>",W,N,V_player
placeholder-album-90-onDark
placeholder-album-378-onDark
placeholder-album-680-onDark
placeholder-artist-90-onDark
placeholder-artist-378-onDark
placeholder-artist-680-onDark
placeholder-video-90-onDark
placeholder-video-378-onDark
placeholder-video-680-onDark
placeholder-playlist-90-onDark
placeholder-playlist-378-onDark
placeholder-playlist-680-onDark
placeholder-purchased-90-onDark
placeholder-purchased-378-onDark
placeholder-purchased-680-onDark
placeholder-smartalbum-90-onDark
placeholder-smartalbum-378-onDark
placeholder-smartalbum-680-onDark
placeholder-genius-90-onDark
placeholder-genius-378-onDark
placeholder-genius-680-onDark
music-folder2-90
music-folder2-378
music-folder2-680
placeholder-video-16x9-onDark
placeholder-album-90-onLight
placeholder-album-378-onLight
placeholder-album-680-onLight
placeholder-artist-90-onLight
placeholder-artist-378-onLight
placeholder-artist-680-onLight
placeholder-video-90-onLight
placeholder-video-378-onLight
placeholder-video-680-onLight
placeholder-playlist-90-onLight
placeholder-playlist-378-onLight
placeholder-playlist-680-onLight
placeholder-purchased-90-onLight
placeholder-purchased-378-onLight
placeholder-purchased-680-onLight
placeholder-smartalbum-90-onLight
placeholder-smartalbum-378-onLight
placeholder-smartalbum-680-onLight
placeholder-genius-90-onLight
placeholder-genius-378-onLight
placeholder-genius-680-onLight
placeholder-video-16x9-onLight
sortAlbumsByArtist
MusicLibraryCompilations
MusicLibraryAlbumsTitle
UnknownAlbum
shuffleAllButton
T@"UIControl",&,N,V_shuffleAllButton
songsResultsController
T@"TVCKDataClientResultsController",&,N,V_songsResultsController
genre
T@"MPModelGenre",&,N,V_genre
artist
T@"MPModelArtist",&,N,V_artist
composer
T@"MPModelComposer",&,N,V_composer
buttonsFocusGuide
T@"UIFocusGuide",&,N,V_buttonsFocusGuide
previouslyFocusedCell
T@"UIView",&,N,V_previouslyFocusedCell
focusGuideTopConstraint
T@"NSLayoutConstraint",&,N,V_focusGuideTopConstraint
MusicLibraryMusicVideosTitle
TVMusicPlayQueueChangedNotification
TVMusicPlayQueueErrorDomain
com.apple.TVMusic
TVMusicPlayQueue
Music
move item
end seek
pause
stop
fast-forward
rewind
nextItem
previousItem
v32@?0@"MPCPlayerResponseItem"8@"NSIndexPath"16^B24
requestResponseController
T@"MPRequestResponseController",&,N,V_requestResponseController
playerResponse
T@"MPCPlayerResponse",&,N,V_playerResponse
mediaItems
T@"NSArray",&,N,V_mediaItems
isUpdating
TB,N,V_isUpdating
optimisticPlayIndex
Tq,N,V_optimisticPlayIndex
durationSnapshot
T{?=dddddffB},N,V_durationSnapshot
isRadioPlayback
TB,N,V_isRadioPlayback
playerPath
T@"MPCPlayerPath",&,N
T@"NSObject<TVMusicPlayQueueDelegate>",W,N,V_delegate
lastPlayerResponse
T@"MPCPlayerResponse",R,N
currentPlayingItem
T@"MPCPlayerResponseItem",R,N
playerState
Tq,R,N
currentPlayingElapsedTime
Td,R,N
currentPlayingDuration
TVMusicLibraryUtilsErrorDomain
@24@?0@"MPMediaEntity"8Q16
v24@?0@"NSArray"8@"NSError"16
v32@?0@"MPModelObject"8@"NSIndexPath"16^B24
v16@?0@"MPModelObject"8
v32@?0@"MPModelPlaylistEntry"8q16^B24
v32@?0@8q16^B24
com.apple.TVMusic.TVMusicContextMenuFactory.removeSongFromPlaylist
avPlayer
v12@?0B8
T@"UINavigationController",&,N,V_navigationController
menuGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_menuGestureRecognizer
nowPlayingWallPaper
T@"UIView",&,N,V_nowPlayingWallPaper
TVMusicScreenSaverServiceErrorDomain
v16@?0@"NSDictionary"8
cloudDataClient
T@"TVCKCloudDataClient",&,N,V_cloudDataClient
remotePhotoServerInterface
T@"<TVPhotoServerInterface>",&,N,V_remotePhotoServerInterface
TVDurationValueTransformer
minutesFormatter
T@"NSDateComponentsFormatter",&,N,V_minutesFormatter
secondsFormatter
T@"NSDateComponentsFormatter",&,N,V_secondsFormatter
TVMusicCollectionViewMovieCellIdentifier
MusicLibraryTVShows
MusicLibraryMovies
v32@?0@"MPModelTVSeason"8@"NSIndexPath"16^B24
EpisodesCount
tvMoviesSelector
T@"UISegmentedControl",&,N,V_tvMoviesSelector
selectorFocusGuide
T@"UIFocusGuide",&,N,V_selectorFocusGuide
durationFormatter
T@"NSDateComponentsFormatter",R,N
np-button-add
np-button-lyrics
np-button-context
ContextMenuAddedToLibrary
ContextMenuConfirmOK
v20@?0B8@"NSArray"12
v32@?0@"NSString"8@"NSString"16@"NSError"24
B32@?0@8Q16^B24
musicNowPlayingViewController
T@"TVPMusicNowPlayingViewController",R,N
activityText
T@"NSString",C,N,V_activityText
activityIndicatorHidden
TB,N,GisActivityIndicatorHidden,V_activityIndicatorHidden
activityIndicatorDelay
Td,N,V_activityIndicatorDelay
contentsRect
TVAnimatedLabelMarqueeLayerContentOriginXAnimationKey
TVAnimatedLabelMarqueeMaskLayerWidthAnimationKey
TVAnimatedLabelMarqueeMaskLayerPositionXAnimationKey
TVAnimatedLabelMarqueeLayerPositionXAnimationKey
TVAnimatedLabelMarqueeLayerWidthAnimationKey
UILabelMarqueeRightFade.png
UILabelMarqueeMask.png
contentsRect.origin.x
bounds.size.width
position.x
currentMarqueeView
T@"_TVAnimatedImageView",R,W,N,V_currentMarqueeView
nextMarqueeView
T@"_TVAnimatedImageView",R,W,N,V_nextMarqueeView
animating
TB,N,GisAnimating,V_animating
paused
TB,N,GisPaused,V_paused
marqueeDelay
Td,N,V_marqueeDelay
replicationPadding
Td,N,V_replicationPadding
maskCapWidth
Td,N,V_maskCapWidth
scrollRate
Tf,N,V_scrollRate
crossfadeDuration
Td,N,V_crossfadeDuration
attributedStrings
T@"NSArray",C,N,V_attributedStrings
currentAttributedStringIndex
TQ,R,N,V_currentAttributedStringIndex
underPosterOutset
Td,N,V_underPosterOutset
AlbumSongCell
Standard
Classical (new)
Classical (legacy)
v32@?0@"MPModelSong"8@"NSIndexPath"16^B24
MusicByComposer
%@. %@
MusicLibraryAlbumStartStation
%ld    
%@    
T@"MPModelAlbum",&,N,V_album
tracks
T@"NSArray",&,N,V_tracks
showArtistNames
TB,N,V_showArtistNames
groupByClassicalWorks
indexesOfClassicalWorks
T@"NSMutableIndexSet",&,N,V_indexesOfClassicalWorks
trackDisplayMode
Tq,N,V_trackDisplayMode
TVDeckImageViewReadyNotification
cycleInterval
Td,N,V_cycleInterval
transitionDuration
Td,N,V_transitionDuration
newDataTransitionDuration
Td,N,V_newDataTransitionDuration
T@"NSArray",C,N,V_artworkCatalogs
imageFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_imageFrame
deckViewParadeType
TQ,N,V_deckViewParadeType
cachedTextRectForBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedTextRectForBounds
previousBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_previousBounds
previousNumberOfLines
Tq,N,V_previousNumberOfLines
cachedSizeThatFits
T{CGSize=dd},N,V_cachedSizeThatFits
previousTargetSize
T{CGSize=dd},N,V_previousTargetSize
icon_play_sm_mask
WatchedCheckmark
popularity-on
popularity-off
badge_explicit_mask
floatingView
T@"_UIFloatingContentView",&,N,V_floatingView
cellHeight
ordinalVisible
TB,N,V_ordinalVisible
playIconVisible
TB,N,V_playIconVisible
musicBarsVisible
TB,N,V_musicBarsVisible
songType
Tq,N,V_songType
thumbnail
T@"TVImageProxy",&,N
thumbnailImage
title
T@"NSString",&,N,V_title
T@"NSString",&,N,V_artist
T@"NSString",&,N,V_album
heading
T@"NSString",&,N,V_heading
Td,N,V_duration
durationString
T@"NSString",&,N,V_durationString
isExplicit
TB,N,V_isExplicit
ordinalValue
TQ,N,V_ordinalValue
hasOrdinal
TB,N,V_hasOrdinal
fullWidthStyle
TB,N,V_fullWidthStyle
T@"NSNumber",&,N,V_popularity
showPlayIconWhenFocused
TB,N,V_showPlayIconWhenFocused
enabled
TB,N,V_enabled
focusable
TB,N,V_focusable
thumbnailImageView
T@"TVImageView",R,N
thumbnailSize
T{CGSize=dd},R,N
isWatched
TB,N,V_isWatched
adamID
Tq,N,V_adamID
Tq,N,V_persistentID
MusicLibraryPlaylistsTitle
featureName
playlistVersionHash
parentPlaylistFolder
T@"MPModelPlaylist",&,N,V_parentPlaylistFolder
Unknown Artist
Album Detailed Data In Flight or Already Retrieved
v32@?0@"NSString"8Q16^B24
ContextMenuGoToAlbum
v16@?0@"MPModelAlbum"8
ContextMenuGoToArtist
ContextMenuAddToPlaylist
ContextMenuRemoveFromPlaylist
v24@?0@"MPModelPlaylist"8@"NSError"16
ContextMenuConfirmDelete
ContextMenuConfirmCancel
ContextMenuRemoveFromLibrary
ContextMenuLove
ContextMenuHate
ContextMenuPlayNext
ContextMenuAddToUpNext
ContextMenuLyrics
ContextMenuAddToLibrary
ContextMenuCreateStation
v16@?0@"MPModelArtist"8
ContextMenuSubscribe
ContextMenuUnsubscribe
ContextMenuShuffle
ContextMenuGoToTVShow
ContextMenuGoToMovie
#T:[%@%p] #Warning #%@ : Error setting taste type %@ for song adamID %lld: %@ 
#T:[%@%p] #Warning #%@ : Error setting taste type %@ for music video adamID %lld: %@ 
#T:[%@%p] #Warning #%@ : Error setting taste type %@ for album adamID %lld: %@ 
#T:[%@%p] #Warning #%@ : Error setting taste type %@ for album adamID %@: %@ 
#T:[%@%p] #Warning #%@ : Error setting taste type %@ for item pid %lld: %@ 
v24@?0@"TVMusicLibraryCollectionViewCell"8@"UIImage"16
imageView
T@"UIImageView",&,N,V_imageView
placeholderImageView
T@"UIImageView",&,N,V_placeholderImageView
showImage
TB,N,V_showImage
imageShape
Tq,N,V_imageShape
subTitle
T@"NSString",&,N,V_subTitle
artworkCatalog
T@"MPArtworkCatalog",&,N,V_artworkCatalog
ComposersCellIdentifier
MusicLibraryComposers
TVSStateMachine
CLOUD
TVCollectionViewDidScrollNotification
T@"<TVCollectionViewDelegate>",W,D,N
TVMusicPlayerLeaseDidEndNotification
name
T@"NSString",R,N
T@"<TVPPlaybackDelegate>",W,N
asyncDelegate
T@"<TVPASyncPlaybackDelegate>",W,N
T@"TVPPlaylist",&,N
currentMediaItem
T@"NSObject<TVPMediaItem>",&,N
currentMediaItemPreparedForLoading
currentMediaItemInitialLoadingComplete
currentMediaItemHasVideoContent
currentMediaItemIsStreaming
currentMediaItemPresentationSize
currentMediaItemHasDates
state
T@"TVPPlaybackState",R,N
errorBehavior
Tq,N
interactive
TB,N
rate
rateUsedForPlayback
waitsAfterPreparingMediaItems
elapsedTime
playbackDate
T@"NSDate",C,N
isLive
muted
volume
Tf,N
chapterCollections
T@"NSArray",R,N
currentChapterCollection
T@"TVPChapterCollection",&,N
currentChapter
T@"TVPChapter",R,N
currentInterstitial
T@"TVPInterstitial",R,N
bufferedTimeRange
T@"TVPTimeRange",R,N
seekableTimeRange
seekableDateRange
T@"TVPDateRange",R,N
forwardPlaybackEndTime
reversePlaybackEndTime
mediaItemEndAction
audioOptions
selectedAudioOption
T@"TVPAudioOption",&,N
subtitleOptions
selectedSubtitleOption
T@"TVPSubtitleOption",&,N
maximumBitRate
preventsSleepDuringVideoPlayback
updatesMediaRemoteInfoAutomatically
limitReadAhead
T@"AVPlayer",R,N
playQueue
T@"TVMusicPlayQueue",&,N,V_playQueue
playbackEngine
T@"MPCPlaybackEngine",&,N,V_playbackEngine
T@"NSString",C,N,V_name
elapsedTimeObservers
T@"NSMutableArray",&,N,V_elapsedTimeObservers
T@"AVPlayer",&,N,V_avPlayer
elapsedTimeJumpInProgress
TB,N,V_elapsedTimeJumpInProgress
targetElapsedTime
Td,N,V_targetElapsedTime
T@"TVPPlaybackState",&,N,V_state
T@"<TVPASyncPlaybackDelegate>",W,N,VasyncDelegate
Tq,N,VerrorBehavior
TB,N,Vinteractive
Td,N,VrateUsedForPlayback
TB,N,VwaitsAfterPreparingMediaItems
T@"NSDate",C,N,VplaybackDate
TB,N,Vmuted
Tf,N,Vvolume
T@"NSArray",R,N,VchapterCollections
T@"TVPChapterCollection",&,N,VcurrentChapterCollection
T@"TVPChapter",R,N,VcurrentChapter
T@"TVPInterstitial",R,N,VcurrentInterstitial
Td,R,N,VforwardPlaybackEndTime
Td,R,N,VreversePlaybackEndTime
Tq,N,VmediaItemEndAction
T@"TVPAudioOption",&,N,VselectedAudioOption
T@"NSArray",R,N,VsubtitleOptions
T@"TVPSubtitleOption",&,N,VselectedSubtitleOption
Td,N,VmaximumBitRate
TB,N,VpreventsSleepDuringVideoPlayback
TB,N,VupdatesMediaRemoteInfoAutomatically
TB,N,VlimitReadAhead
ICloudSignInButton
signInLabel
T@"UILabel",&,N,V_signInLabel
signInButton
T@"UIButton",&,N,V_signInButton
T@"NSString",C,N,V_title
T@"NSString",C,N,V_message
actionPromptMessage
T@"NSString",C,N,V_actionPromptMessage
sampleImage
T@"UIImage",&,N,V_sampleImage
alphaOnImage
Td,N,V_alphaOnImage
T@"<TVSignInLandingViewDelegate>",W,N,V_delegate
bounds
BarAnimation_%ld
musicBarsStyle
TQ,N
library
recently_added
playlists
artists
albums
songs
genres
composers
compilations
videos
shows
%@ / %@
currentContext
TQ,V_currentContext
currentSubcontext
TQ,V_currentSubcontext
currentPAFFeatureName
T@"NSString",R
_imageTintColor
T@"UIColor",&,N,S_setImageTintColor:,V__imageTintColor
_imageViewWidth
Td,N,S_setImageViewWidth:,V__imageViewWidth
rendersImageAsTemplates
TB,N,V_rendersImageAsTemplates
allowsFocus
TB,N,V_allowsFocus
previewView
T@"UIView",&,N,V_previewView
fadeThroughPreviews
TB,N,V_fadeThroughPreviews
autoUpdatePreviewViewControllerBlock
T@?,C,N,V_autoUpdatePreviewViewControllerBlock
previewViewController
T@"UIViewController",&,N,V_previewViewController
tableViewWidth
Td,N,V_tableViewWidth
tableViewPadding
T{UIEdgeInsets=dddd},N,V_tableViewPadding
previewViewPadding
T{UIEdgeInsets=dddd},N,V_previewViewPadding
previewOnRightSide
TB,N,V_previewOnRightSide
backdropViewMode
TQ,N,V_backdropViewMode
bannerView
T@"UIView",&,N,V_bannerView
T@"TVTableView",&,D,N
headerView
T@"UIView",&,N,V_headerView
previewPaused
TB,N,GisPreviewPaused
shouldAnimatePreviewView
shouldHideBackdropView
backdropViewHideStateNeedsUpdatingBlock
T@?,C,N
v16@?0@"UIImage"8
preloadCount
Tq,N,V_preloadCount
preloadCompletionHandler
T@?,C,N,V_preloadCompletionHandler
queueSize
Tq,N,V_queueSize
concurrentDownloadCount
Tq,N,V_concurrentDownloadCount
nextIndex
Tq,N,V_nextIndex
finishedImages
T@"NSMutableArray",&,N,V_finishedImages
pendingArtworkCatalogs
T@"NSMutableArray",&,N,V_pendingArtworkCatalogs
loadingArtworkCatalogs
T@"NSMutableArray",&,N,V_loadingArtworkCatalogs
randomized
TB,N,GisRandomized,V_randomized
pauseImageLoad
TB,N,V_pauseImageLoad
mediaType
Tq,N,V_mediaType
identifier
T@"NSNumber",&,N,V_identifier
containerType
Tq,N,V_containerType
containerStoreID
T@"NSString",&,N,V_containerStoreID
containerCloudID
T@"NSString",&,N,V_containerCloudID
artistOrCuratorName
T@"NSString",&,N,V_artistOrCuratorName
containerName
T@"NSString",&,N,V_containerName
artistStoreID
T@"NSNumber",&,N,V_artistStoreID
storeID
T@"NSString",&,N,V_storeID
isInLibrary
TB,N,V_isInLibrary
songHasStoreLyrics
TB,N,V_songHasStoreLyrics
librarySongLyrics
T@"NSString",&,N,V_librarySongLyrics
onPlayingStateChanged
onRadioRecentStationsChanged
onMusicLibraryInitialized
onMusicLibraryUpdated
onSubscriptionStatusChanged
onStorePushNotification
radio-station-id
artwork-url
seed-store-id
tvmusic
showAlbum
albumID
songID
showArtist
artistID
showPlaylist
playlistID
showTVShow
TVEpisodeID
showMovie
movieID
success
error
sagaIDs
sortByAlbum
com.apple.itunesstored
TVMusicJS
#T:[%@%p] #Warning #%@ : Received PLAY command while still processing a play command 
#T:[%@%p] #Warning #%@ : Attempting to play null items - will be ignored 
v32@?0@8@16^B24
insertIndex
@24@?0@"NSDictionary"8Q16
@24@?0@"RadioStation"8Q16
v16@?0@"NSArray"8
#T:[%@%p] #Notice #%@ : Completed recent radio stations refresh with error: %@ 
persistentIDs
@24@?0@8Q16
type
v16@?0@"NSURL"8
v16@?0@"UIViewController"8
GoToAlbum
GoToArtist
GoToMusicVideo
RemoveFromRecentlyPlayed
Shuffle
Queue
PlayNext
AddToUpNext
GoToTVShow
GoToMovie
commandToHandle
v20@?0B8@"NSString"12
artistName
artistId
curatorName
curatorId
addedMenuItems
displayText
menuPosition
yyyy-MM-dd'T'HH:mm:ss
bookmarkTime
bookmarkTimestamp
hasBeenPlayed
isMarkedAsUnwatched
results
term
queryType
range
properties
cancel
#T:[%@%p] #Warning #%@ : Can't perform query; invalid query types "%@". 
#T:[%@%p] #Warning #%@ : Can't perform query; cloud data client is not connected and synced. 
callback_%p
#T:[%@%p] #Warning #%@ : Failed to set client data: %@ 
v32@?0@"NSNumber"8@"NSMutableDictionary"16^B24
v16@?0@"JSContext"8
width
height
sortOrder
trackNumber
v32@?0@"NSString"8@"NSDictionary"16^B24
q24@?0@"<TVPMediaItem>"8@"<TVPMediaItem>"16
v32@?0@"MPModelPlaylistEntry"8@"NSIndexPath"16^B24
mpaa
%@-movies
%@-tv
@"NSDictionary"24@?0@"RadioStation"8Q16
subscribed
v16@?0@"NSNotification"8
%p-%ld
isMusicLibraryInitialized
TB,R
contentTypeSong
contentTypeMusicVideo
contentTypeAlbum
contentTypePlaylist
tasteTypeNeutral
tasteTypeLove
tasteTypeHate
isProcessingPlayCommand
TB,V_isProcessingPlayCommand
clientData
artwork
children
albumArtistName
collectionName
albumCount
songCount
kind
tvShow
songsAndMusicVideos
recentlyAdded
urlPlayback
urlVideoPlayback
localTrack
none
hasLyrics
shouldBookmarkPlayPosition
contentRatingsBySystem
value
playlistCloudID
playlistAuthor
dateAdded
sagaID
albumPersistentID
storeCloudAlbumID
ClientDataId
ClientDataKind
ClientDataArtwork
ClientDataMPArtwork
action
playNow
playNext
addToUpNext
forceAction
shuffle
playIndex
playbackReporting
recommendationData
containerID
getArtworkFileURL
ErrorNoMediaItems
ErrorUnknownAction
ErrorPlaybackInProgress
radio
%llu
SongCell
MusicLibrarySongsTitle
sortSongsByArtist
collectionView
T@"TVCollectionView",&,N,V_collectionView
T@"TVLabel",&,N,V_titleLabel
libraryRequest
T@"MPModelLibraryRequest",&,N,V_libraryRequest
lastReceivedResponse
T@"MPModelResponse",&,N,V_lastReceivedResponse
focusToIndexPath
T@"NSIndexPath",&,N,V_focusToIndexPath
T@"MPSectionedCollection",&,N,V_songs
sectionedCollectionDataSource
T@"<MPLazySectionedCollectionDataSource>",&,N,V_sectionedCollectionDataSource
regular
emphasized
thin
light
ultralight
medium
semibold
bold
heavy
black
TVCrossfadeViewWillDisplayNotification
padding
T{UIEdgeInsets=dddd},N,V_padding
crossfadePeriod
Td,N,V_crossfadePeriod
text
T@"NSString",C,N,V_text
T@"UIImage",&,N,V_image
buttonStyle
circular
TB,N,V_circular
TVScrollingParadeViewWillDisplayNotification
multiply
inputColor
positionAnimation
filters.multiply.inputColor
undimmingAnimation
dimmingAnimation
MusicLibraryRecentlyAdded
MusicLibraryShowsTitle
itemIDs
isVideo
isRemoteView
PAFItemType
IDs: %@, featureName: %@, isVideo: %d, duration: %g
supportsSecureCoding
T@"SSVPlayActivityEventItemIDs",&,N,V_itemIDs
T@"NSString",&,N,V_featureName
TB,N,V_isVideo
TQ,N,V_PAFItemType
TB,N,V_isRemoteView
MPIdentifier_%@
MPObject_%@
TVMusicArtworkLoaderErrorDomain
|1|%@
|2|%@
|3|%@
|4|%@
|5|%@
|6|%@
|7|%@
|8|%@
|9|%@
systemInputViewController
T@"UISystemInputViewController",R,N,V_systemInputViewController
T@"<TVTextEntryControllerDelegate>",W,N,V_delegate
textField
T@"UITextField",R,N,V_textField
textFieldHeaderLabel
T@"UILabel",R,N,V_textFieldHeaderLabel
topAccessoryView
T@"UIView",&,N,V_topAccessoryView
bottomAccessoryView
T@"UIView",&,N,V_bottomAccessoryView
textFieldAllowsFocus
titleView
T@"UILabel",&,N,V_titleView
messageView
T@"UILabel",&,N,V_messageView
T@"TVImageView",&,N,V_imageView
T@"NSAttributedString",&,N,V_title
T@"NSAttributedString",&,N,V_message
submitButton
T@"UIButton",&,N,V_submitButton
progressPercent
musicSyncProgress
Tf,N,V_progressPercent
musicPlaylistLockup
musicPlaylistTitleCell
data-name
position
v28@?0@"UIImage"8@"NSError"16B24
subtitle
@24@?0@"UIColor"8Q16
T@"NSArray",&,N,V_imageViews
createdImageViews
TB,N,V_createdImageViews
titleBlockView
T@"UIView",&,N,V_titleBlockView
subtitleLabel
T@"UILabel",&,N,V_subtitleLabel
titleBackgroundImageView
T@"TVImageView",&,N,V_titleBackgroundImageView
T@"NSString",&,N,V_playlistID
titleGradientLayer
T@"CALayer",&,N,V_titleGradientLayer
showName
typeDisplayName
numberOfEpisodes
v32@?0@"MPModelObject"8q16^B24
v32@?0@"MPModelLibrarySearchScope"8q16^B24
v32@?0@"MPModelGenericObject"8@"NSIndexPath"16^B24
v24@?0@"NSURL"8@"NSError"16
TVMusicCollectionViewCellIdentifier
mpResults
T@"MPSectionedCollection",&,N,V_mpResults
cellIdentifier
T@"TVLabel",R,N,V_titleLabel
showIndexBarTitles
TB,N,V_showIndexBarTitles
TVMusicNowPlayingWillDisplayMediaItemNotification
TVMusicNowPlayingDidDisplayMediaItemNotification
TVMusicNowPlayingDidSelectPlayingItemInPlaylist
TVMusicNowPlayingWillAppear
TVMusicNowPlayingWillDisappear
---> Product Type: %@, Screen Scale: %g
LibraryMenuShuffle
LibraryMenuRecentlyAdded
LibraryMenuPlaylists
LibraryMenuArtists
LibraryMenuAlbums
LibraryMenuSongs
LibraryMenuItemShows
LibraryMenuMusicVideos
LibraryMenuGenres
LibraryMenuComposers
LibraryMenuCompilations
v32@?0@8@"NSIndexPath"16^B24
MusicLibraryMenuHeading
menuItems
T@"NSArray",C,N,V_menuItems
currentMenuContext
TQ,R,N,V_currentMenuContext
TVMusicMediaItemMetadataArtistID
TVMusicMediaItemMetadataMPIdentifierSet
TVMusicMediaItemMetadataUserLyrics
TVMusicMediaItemMetadataMPModelObject
TVMusicMediaItemMetadataSagaID
TVMusicTableViewCellIdentifier
@"UIViewController"16@?0@"NSIndexPath"8
tableHeaderLabel
T@"UILabel",&,N,V_tableHeaderLabel
playPauseRecognizer
T@"TVInteractionGestureRecognizer",&,N,V_playPauseRecognizer
tableHeaderView
T@"UIView",&,N,V_tableHeaderView
headingVerticalOffset
Td,N,V_headingVerticalOffset
MusicLibraryArtistsTitle
init
alloc
initWithName:initialState:mode:
tvs_unbind:
defaultCenter
removeObserver:
dealloc
viewDidLoad
_appDidBecomeActiveNotification:
addObserver:selector:name:object:
_storeAccountChangedNotification:
_dataClientConnectionHandler:
cloudDataClient
_libraryDidUpdate:
defaultStore
activeAccount
setIsUserLoggedIn:
_registerStateMachineHandlers
setShouldAcceptEvents:
viewWillAppear:
postEvent:
viewDidAppear:
currentDisplayedView
view
arrayWithObjects:count:
status
currentState
isSagaPurchased
isFusePurchased
isJaliscoAvailableInStoreFront
musicSyncStatus
setSagaEnabled:
_setScreenSaverEnabledForCloudLibrary
_showTopMenu
_showSyncingView
_showErrorView
cloudProgressView
_removeCurrentView
mainBundle
localizedStringForKey:value:table:
initWithMessage:
addSubview:
setCloudProgressView:
setCurrentDisplayedView:
removeFromSuperview
noMusicView
mainScreen
bounds
initWithFrame:
setMessage:
setNoMusicView:
numberWithBool:
dictionaryWithObjects:forKeys:count:
sharedInstance
bundleIdentifier
setScreenSaverDisplayStatusForBundleIdentifier:isEnabled:extraInfo:
topMenuViewController
parentViewController
_showWaitingView
_updateTopMenu
willMoveToParentViewController:
removeFromParentViewController
contextForSignIn
initWithAuthenticationContext:
authenticatedAccount
setActive:
setActiveLockerAccount:
startWithAuthenticateResponseBlock:
array
defaultMediaLibrary
filterAvailableContentGroups:withOptions:
numberWithUnsignedInteger:
addObject:
loginPromptView
setDelegate:
setTitle:
imageNamed:
setSampleImage:
setAlphaOnImage:
setLoginPromptView:
activityIndicatorView
initWithActivityIndicatorStyle:
setActivityIndicatorView:
center
setCenter:
startAnimating
isSagaEnabled
clearColor
setBackgroundColor:
setTextAlignment:
title2Font
setFont:
setText:
listTitleTextColor
setTextColor:
setAutoresizingMask:
setNumberOfLines:
bodyFont
listSubheadTextColor
buttonWithType:
setTitle:forState:
_clickedErrorRetryButton:
addTarget:action:forControlEvents:
sizeToFit
frame
setFrame:
setErrorMessageView:
errorMessageView
_showCloudProgressView
tvs_bind:toObject:withKeyPath:options:
_removeTopMenu
_removeCloudProgressView
_removeLoginPromptView
_removeWaitingView
_removeErrorMessageView
_removeNoMusicView
isUserLoggedIn
_showLoginPromptView
connect
executeBlockAfterCurrentStateTransition:
registerDefaultHandlerForEvent:withBlock:
_showAuthenticationDialog
registerHandlerForEvent:onState:withBlock:
_handleConnectedStatusWithStateMachine:
registerHandlerForEvent:onStates:withBlock:
disconnect
class
isKindOfClass:
menuItems
_menuItems
isEqualToArray:
initWithMenuItems:
addChildViewController:
didMoveToParentViewController:
setNeedsFocusUpdate
_showNoMusicView
tvs_bindingAdaptor
MusicSyncStatusBinding
updateBoundMusicSyncStatus
establishBinding:toObject:withKeyPath:bindingOptions:updateHandler:
valueForBinding:
integerValue
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
authenticateUserOnSelectSignIn
preferredFocusEnvironments
controller:didFailQuery:
tvs_bindMusicSyncStatusBindingToObject:withKeyPath:options:
.cxx_destruct
stateMachine
setStateMachine:
setTopMenuViewController:
_isUserLoggedIn
_stateMachine
_topMenuViewController
_cloudProgressView
_activityIndicatorView
_loginPromptView
_errorMessageView
_currentDisplayedView
_noMusicView
mediaItemMetadataForProperty:
hasSuffix:
setWithArray:
containsObject:
serviceType
isVideoMediaType
initWithNibName:bundle:
initWithDataSource:name:
setDiscoveryMode:
setDataSource:
indexPathForRow:inSection:
setModalTransitionStyle:
tableView
registerClass:forCellReuseIdentifier:
viewDidDisappear:
didSelectRouteBlock
didReceiveMemoryWarning
viewWillLayoutSubviews
reloadData
dequeueReusableCellWithIdentifier:forIndexPath:
_routeForIndexPath:
textLabel
routeName
defaultPlayer
playQueue
playerPath
route
setAccessoryType:
routingController
availableRoutes
count
setDidSelectRouteBlock:
dismissViewControllerAnimated:completion:
nextFocusedIndexPath
routeUID
setLastFocusedRouteID:
lastFocusedRouteID
_indexPathForAudioRouteID:
objectAtIndexedSubscript:
indexOfObject:
countByEnumeratingWithState:objects:count:
isEqualToString:
routingControllerAvailableRoutesDidChange:
routingController:pickedRouteDidChange:
routingControllerExternalScreenTypeDidChange:
routingController:didFailToPickRouteWithError:
routingControllerDidPauseFromActiveRouteChange:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
tableView:didReceivePhysicalPlayForItemAtIndexPath:
tableView:shouldHandleLongPressForItemAtIndexPath:
tableView:didReceiveLongPressForItemAtIndexPath:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:titleForFooterInSection:
tableView:canEditRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
_indexPathForAudioRoute:
setTableView:
setRoutingController:
_selectedIndexPath
_didSelectRouteBlock
_tableView
_routingController
_lastFocusedRouteID
layoutSubviews
imageView
traitCollectionDidChange:
traitCollection
userInterfaceStyle
_updateImage
didUpdateFocusInContext:withAnimationCoordinator:
isFocused
whiteColor
_flatImageWithColor:
setImage:
setRouteDeviceType:
routeDeviceType
_routeDeviceType
viewControllerForContextMenuData:
theApp
navigationController
presentViewController:animated:completion:
heading
alertControllerWithTitle:message:preferredStyle:
actionBlock
title
actionWithTitle:style:handler:
hasCheckmark
_setChecked:
addAction:
showContextMenu:
genresLibraryRequest
initWithLibraryRequest:
setBackdropViewMode:
setTableViewWidth:
title1Font
pointSize
systemFontOfSize:weight:
_textColor
setFirstLineHeadIndent:
initWithString:attributes:
setTableHeaderTitleAttributedText:
setHeadingVerticalOffset:
setPreviewViewController:
mpResults
itemAtIndexPath:
name
numberOfSections
numberOfItemsInSection:
previouslyFocusedIndexPath
cellForRowAtIndexPath:
_setColorsForCell:indexPath:isFocused:withAnimationCoordinator:
_setPreviewArtworkForGenre:
albumsViewControllerForGenre:
pushViewController:animated:
colorWithWhite:alpha:
blackColor
addCoordinatedAnimations:completion:
setNeedsDisplay
albumsLibraryRequest
setScopedContainers:
setContentRange:
arrayWithCapacity:
results
itemsInSectionAtIndex:
artworkCatalog
tvs_addObjectIfNotNil:
setArtworkCatalogs:
performWithResponseHandler:
_lastReceivedResponse
_visibleOnScreen
_shouldUpdateOnViewDidAppear
_previewViewController
initWithFrame:style:
_playButtonAction:
initWithTarget:action:
_setButtonType:
addGestureRecognizer:
_longPressAction:
_setRemembersPreviouslyFocusedItem:
delegate
_performBlockWithFocusedCellIndexPath:
nextFocusedView
isDescendantOfView:
visibleCells
indexPathForCell:
copy
state
window
screen
focusedView
superview
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
indexPathForLastFocusedItem
_indexPathForDirectlyFocusedItem
_playButtonRecognizer
_longPressRecognizer
_indexPathForLastFocusedItem
canBecomeFocused
setMediaItem:
initWithFrame:privateStyle:
panGestureRecognizer
numberWithInteger:
setAllowedTouchTypes:
setUserInteractionEnabled:
setBounces:
lyrics
setLyrics:
setContentInset:
_showActivityIndicator
performSelector:withObject:afterDelay:
_handleTogglePlayPause
setAllowedPressTypes:
_reportPAFEventForLyricsView
length
setLyricsID:
code
_showErrorAlertWithTitle:message:
cancelPreviousPerformRequestsWithTarget:selector:object:
isViewLoaded
_hideActivityIndicator
attributedStringFromLyricsString:
setAttributedText:
setHidden:
setNeedsLayout
setCornerRadius:
artworkImageView
size
initWithScaleToSize:scaleMode:
setDecorator:
setImageProxy:
initWithLookupDictionary:
URLWithHeight:width:format:
setArtworkURL:
initWithObject:imageLoader:groupType:
setArtworkImageProxy:
text
sizeThatFits:
setSize:
setContentSize:
subtitle1Font
setMarqueeEnabled:
setMarqueeRunning:
subtitle3Font
stringWithFormat:
lyricsID
mediaItem
reportPAFEventForMediaItem:lyricsID:duration:isRemoteView:
player
togglePlayPause
HTMLifyNewlines:
fontDescriptorWithTextStyle:
setLineSpacing:
preferredFont
attributedSanitizedStringFromHTMLString:defaultAttributes:
rangeOfString:
enumerateLinesUsingBlock:
componentsJoinedByString:
initWithLyrics:lyricsID:
initWithMediaItem:
showLyrics:withLyricsID:error:
setSongTitle:
setStoreArtworkDictionary:
storeArtworkDictionary
artworkURL
artworkImageProxy
setArtworkImageView:
_lyricsLabel
_lyricsScrollView
_spinnerView
_songTitle
_songAlbum
_songArtist
_songTitleLabel
_songSubtitleLabel
_startViewTime
_mediaItem
_storeArtworkDictionary
_artworkURL
_artworkImageProxy
_artworkImageView
_lyrics
_lyricsID
registerViewElementClass:forElementName:
layoutWithElement:
attributes
objectForKeyedSubscript:
boolValue
isDisabled
setEnabled:
setFocusable:
longLongValue
setAdamID:
setPersistentID:
setShowPlayIconWhenFocused:
setSongType:
childViewElements
setThumbnail:
elementName
attributedText
string
setArtist:
setDurationString:
setOrdinalValue:
setPopularity:
setIsExplicit:
registerElements
songCellFromElement:existingView:
initWithPlayer:invalidateWhenDone:initialPlaybackType:
isRadioPlaying
setIsRadioPlayback:
setIsMusicPlaylist:
setAllowDefaultMenuButtonBehavior:
initWithPlayer:
playbackViewController
setPlaybackViewController:
setPlayer:
_playbackViewController
_player
defaultWorkspace
URLWithString:
openSensitiveURL:withOptions:
setAllowExplicitContent
setAllowsExplicitContent:
setPreferredAction:
didDisplayExplicitRestrictionAlertOfType:
isRestrictionsPasscodeSet:
shouldDisplayExplicitRestrictionAlertOfType:completionBlock:
presentExplicitRestrictionAlertIfNeededOfType:completionBlock:
explicitRestrictionAlertTypeForTypeString:
setStoreAdamID:
initWithBlock:
initWithIdentifiers:block:
setSong:
identifiers
newOperationWithResponseHandler:
_lyricsOperationQueue
addOperation:
getLyricsForAdamID:completionBlock:
supportsLyrics
initWithMediaItem:lyricsID:
reportingPlaybackObserver
setDuration:
setIsRemoteView:
newLyricsPlayActivityEventForLyricsInfo:
reportPlayActivityEvent:
reportPAFEventForLyricsInfo:duration:isRemoteView:
setMaxConcurrentOperationCount:
setName:
getLyricsForMediaItem:completionBlock:
mediaItemHasLyrics:
PAFLyricsInfoForMediaItem:lyricsID:
_updateImageFrame
setImageFrame:
initWithImageOffset:
setImageOffset:
artworkCatalogs
imageOffset
_deckImageView
_artworkCatalogs
_imageOffset
show
initWithTitle:libraryRequest:
setItemSize:
setMinimumLineSpacing:
collectionView
setCollectionViewLayout:
setRemembersLastFocusedIndexPath:
cellIdentifier
registerClass:forCellWithReuseIdentifier:
titleLabel
_seasonName
textColor
goToShowButton
_goToShow
normalMoreButton
_selectedMoreButton
setDateStyle:
_bookmarkWillUpdateNotification:
viewWillDisappear:
sortType
number
localizedStringWithFormat:
_addLabelWithFont:text:
layer
setShadowRadius:
setShadowOpacity:
setShadowOffset:
setMasksToBounds:
setFittingSize:
setDestination:configurationBlock:
addLayoutGuide:
leftAnchor
constraintEqualToAnchor:
rightAnchor
topAnchor
bottomAnchor
setPreferredFocusEnvironments:
contentInset
_setPositionForView:topLeft:
_artworkPlaceholderImageForUserInterfaceStyle:
setPlaceholderImage:
pressesBegan:withEvent:
anyObject
type
playItemType:withMPObject:
totalItemCount
popViewControllerAnimated:
representativeEpisode
storeSubscriptionAdamID
numberWithLongLong:
openJavascriptAppWithURL:
cellForItemAtIndexPath:
setSelected:
deviceLibraryPersistentID
contextMenuForLibraryItemWithPersistentID:itemType:completionHandler:
dequeueReusableCellWithReuseIdentifier:forIndexPath:
episodeTypeDisplayName
releaseDate
stringFromDate:
_songCellPlaceholderImage
_isTVEpisodeWatched:
setIsWatched:
thumbnailImageView
setContentMode:
thumbnailSize
setThumbnailImage:
stringValue
initWithIdentifier:mediaType:
bookmarkForKey:
hasBeenPlayed
collectionView:shouldHighlightItemAtIndexPath:
collectionView:didHighlightItemAtIndexPath:
collectionView:didUnhighlightItemAtIndexPath:
collectionView:shouldSelectItemAtIndexPath:
collectionView:shouldDeselectItemAtIndexPath:
collectionView:didSelectItemAtIndexPath:
collectionView:didDeselectItemAtIndexPath:
collectionView:willDisplayCell:forItemAtIndexPath:
collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:
collectionView:didEndDisplayingCell:forItemAtIndexPath:
collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:
collectionView:shouldShowMenuForItemAtIndexPath:
collectionView:canPerformAction:forItemAtIndexPath:withSender:
collectionView:performAction:forItemAtIndexPath:withSender:
collectionView:transitionLayoutForOldLayout:newLayout:
collectionView:canFocusItemAtIndexPath:
collectionView:shouldUpdateFocusInContext:
collectionView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInCollectionView:
collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:
collectionView:targetContentOffsetForProposedContentOffset:
collectionView:shouldSpringLoadItemAtIndexPath:withContext:
collectionView:didReceivePhysicalPlayForItemAtIndexPath:
collectionView:shouldHandleLongPressForItemAtIndexPath:
collectionView:didReceiveLongPressForItemAtIndexPath:
collectionViewCanBecomeFocused:
initWithSeason:libraryRequest:
didProcessResponse:error:
titleOffset
collectionView:cellForItemAtIndexPath:
artworkSize
_playlistTitleLabel
_infoLabel
_goToShowButton
_moreButton
_actionButtons
_tvSeason
_seasonLabel
_episodeReleaseDateFormatter
_shouldReloadOnViewDidAppear
sharedApplication
appController
jsOpenURL:options:
contextWithBagType:
URLBagForContext:
existingBagDictionary
supportsLyricsForURLBagDictionary:
showPlaybackControllerWithPlayer:
setCategory:error:
setConfigurationBlock:
sharedConnection
systemServiceProxy
registerNowPlayingDelegate:
_playerWillChangeState:
_playerDidChangeState:
_playbackLeaseEnded:
_accountChangedNotification:
_internetAvailabilityChanged:
_nowPlayingSelectedPlayingItem:
_musicDataClientStatusChanged:
_playlistMediaChangeRequested:
sharedCoordinator
lastKnownStatus
accountStatus
_initializePlayActivityFeedReportingWithSubscriptionStatus:
sharedInterfaceFactory
initWithDataClient:
registerAppWithProviderObject:
registerRemotePhotoServer:
photoAssetsWithOptions:responseBlock:
setDefaultRequestHandler:
initWithManagerIdentifier:
application:didFinishLaunchingWithOptions:
_playlistRepeatModeFromPreferences
setPlaylistRepeatMode:
addObserver:forKeyPath:options:context:
setFilteringDisabled:
start:
defaultSyncingKeyValueStore
setupBookmarkService:
beginGeneratingLibraryChangeNotifications
host
paused
play
pathComponents
componentsSeparatedByString:
characterSetWithCharactersInString:
componentsSeparatedByCharactersInSet:
unsignedLongValue
playItemType:withPersistentID:
resourceSpecifier
postNotificationName:object:userInfo:
_setSpotlightRegistrationWithSubscriptionStatus:
getStatusWithOptions:statusBlock:
initWithWritingStyle:
setShouldReportPlayActivityEvents:
setShouldReportAggregateTimePlayActivityEvents:
initWithPlayer:reportingController:
uniqueIdentifier
unsignedLongLongValue
setStoreAccountID:
setOffline:
setSBEnabled:
accountIdentifier
sharedManager
distantFuture
registerSubscriptionWithInfo:expirationDate:
unregisterSubscriptionWithInfo:
currentAppContext
initWithAppContext:
setObject:forKeyedSubscript:
setMescalPrimeEnabledForXHRRequests:
pathForResource:ofType:
fileURLWithPath:
object
userInfo
stopped
pause
playing
previewPlayer
stop
setSubscriptionStatus:
setPendingStartLeaseSession:
currentMediaItem
postNotificationName:object:
allowsExplicitContent
playlist
setSkipExplicit:
rootViewController
_handleAccountChangedWithSubscriptionStatus:
subscriptionStatus
internetAvailable
mediaRepeatMode
systemServicePresentNowPlayingUI
playActivityReportingController
application:openURL:options:
applicationDidBecomeActive:
observeValueForKeyPath:ofObject:change:context:
appController:evaluateAppJavaScriptInContext:
bootURL
didShowViewController
purchaseManager
setPurchaseManager:
setReportingPlaybackObserver:
setPreviewPlayer:
_jinglePlayActivityReportingController
_currentMediaItem
_checkedForLyricsSupport
_supportsLyrics
_purchaseManager
_reportingPlaybackObserver
_previewPlayer
_subscriptionStatus
setClipsToBounds:
setCompletionHandler:
cancel
intrinsicContentSize
contentMode
expectedSize
willMoveToWindow:
isImageLoaded
_loadImage
image
_setImage:
setImageProxy:completion:
completion
setCompletion:
_updateImageViewWithPlaceholderImageIfNeeded
cornerRadius
_enableEdgeAntialiasingOnSelected
setAllowsEdgeAntialiasing:
_edgeAntialiasingOnSelectedRestrictedToLeftRightEdge
setEdgeAntialiasingMask:
setCacheOnLoad:
setEnableCache:
imageWithCGImage:
imageProxy
setImageLoaded:
isMainThread
load
setTintColor:
imageWithRenderingMode:
setHighlightedImage:
setSelected:animated:
_imageView
_setTintColor:
_setFocusedColor:
placeholderImage
_tintColor
_focusedColor
_setEnableEdgeAntialiasingOnSelected:
_setEdgeAntialiasingOnSelectedRestrictedToLeftRightEdge:
_rendersImageAsTemplates
_image
__focusedColor
_imageContentMode
_flatImage
_flatHighlightImage
_selected
_imageLoaded
__enableEdgeAntialiasingOnSelected
__edgeAntialiasingOnSelectedRestrictedToLeftRightEdge
_placeholderImage
_imageProxy
_completion
__tintColor
_configureUIControls
getAttributedTextSize:font:maxWidth:
_updateColorsForUserInterfaceStyle:
setLineBreakMode:
boundingRectWithSize:options:attributes:context:
message
containerView
setContainerView:
setTitleLabel:
messageLabel
setMessageLabel:
_message
_containerView
_titleLabel
_messageLabel
setRepeatMode:
isSongPlayingWithAdamID:persistentID:
playlistRepeatMode
_playlistRepeatMode
contentView
effectiveUserInterfaceLayoutDirection
badgeView
accessoryView
_updatePlaceholderImageIfNeeded
setAccessoryView:
_setAccessoryViewColor
_updateColors
_textLabelColor
_detailTextLabelColor
_updateColorsWithTextLabelColor:detailTextLabelColor:
detailTextLabel
_setAccessoryViewWithTextLabelColor:detailTextLabelColor:
_isFocusedInDarkMode
_focusedInDarkModeTextLabelColor
_defaultTextLabelColor
_defaultDetailTextLabelColor
listItemTextColor
placeholderAssetType
setBadgeView:
setPlaceholderAssetType:
_accessoryImage
_badgeView
_placeholderAssetType
folderPlaylist
playlistsLibraryRequestWithParentPlaylistFolder:userEditableOnly:
_configureViewWithMPResponse:
spinner
convertPoint:fromView:
setFolderPlaylist:
songToAdd
setSongToAdd:
_presentViewController:
_addItemToPlaylist:itemIdentifiers:completionHandler:
storeAdamID
kindWithVariants:
setItemKind:
setAllowedItemIdentifiers:
cloudAddToPlaylistBehavior
_presentAddToPlaylistBehaviorDialogFromViewController:forSingleTrackAddition:withCompletionHandler:
storeCloudID
hsCloudClient
addItemWithSagaID:toPlaylistWithPersistentID:completionHandler:
addStoreItemWithAdamID:toPlaylistWithPersistentID:completionHandler:
errorWithDomain:code:userInfo:
setSpinner:
_isTopLevelMenu
setHidePresentingView:
setPlaylistName:
setShouldCreatePlaylist:
newOperationWithLocalPersistenceResponseHandler:completeResponseHandler:
setCompletionBlock:
layoutIfNeeded
_addActionWithTitle:style:handler:shouldDismissHandler:
stringByAppendingString:
didSelectPlaylist:
enumerateItemsUsingBlock:
setCloudAddToPlaylistBehavior:completionHandler:
mpRequest
setMpRequest:
_alertControllerIsConfigured
_hsCloudClient
_songToAdd
_spinner
_mpRequest
_folderPlaylist
title3Font
setTopAccessoryView:
setSubmitButton:
setBottomAccessoryView:
_doneButtonAction:
lightGrayColor
colorWithAlphaComponent:
hidePresentingView
presentingViewController
completionBlock
textField
textEntryControllerDidFinish:
_textEntryVC
_hidePresentingView
_completionBlock
_setWantsRightToLeftHorizontalMirroringIfNeeded:
initWithFrame:collectionViewLayout:
normalShuffleButton
_selectedShuffleButton
songsLibraryRequestForPlaylist:
layoutMargins
setLayoutMargins:
calloutFont
_artworkPlaceholderImage
tracksTiledArtworkCatalogWithRows:columns:
_performRequest
convertPoint:toView:
reverseObjectEnumerator
allObjects
_playFocusedSong
_startMusicPlaybackAtIndexPath:shuffle:
mpResponse
globalIndexForIndexPath:
contextMenuForLibraryPlaylistEntry:inPlaylist:atPosition:completionHandler:
_songAtIndexPath:
duration
artist
isExplicitSong
setHasOrdinal:
storeAsset
isRedownloadable
song
playSongsInContainer:startIdentifiers:shuffle:
playSongsInContainer:startModelObject:dontReloadForSameSong:
playSongsInContainer:playbackAction:
_processResponse:error:
_modelResponseDidInvalidate:
_updateInfoLabel
removeObserver:name:object:
controller:willChangeResultsForQuery:
controller:didChangeResultsForQuery:
controller:shouldHandleUpdate:
collectionView:numberOfItemsInSection:
numberOfSectionsInCollectionView:
collectionView:viewForSupplementaryElementOfKind:atIndexPath:
collectionView:canMoveItemAtIndexPath:
collectionView:moveItemAtIndexPath:toIndexPath:
indexTitlesForCollectionView:
collectionView:indexPathForIndexTitle:atIndex:
initWithPlaylist:
setPlaylist:
setMpResponse:
_collectionView
_shuffleButton
_songPlayCount
_playlist
_mpResponse
imageViews
imageType
viewForElement:existingView:
setImageViews:
style
interitemSpacing
setMinimumInteritemSpacing:
setOpaque:
makeObjectsPerformSelector:
insertSubview:atIndex:
_didLoadImageForImageView:
_checkReadyToDisplay
minimumInteritemSpacing
removeObject:
socialBadgeFromElement:existingView:
_unloadedImageViews
_imageViews
_minimumInteritemSpacing
initWithStyle:
wideShuffleButton
wideGoToArtistButton
allSeasonsButton
_recordPlayActivityEvent:shouldReportToStore:
setEventType:
deviceName
setDeviceName:
date
setEventDate:
systemTimeZone
setEventTimeZone:
currentDevice
userAgent
setBuildVersion:
itemIDs
setItemIDs:
featureName
setFeatureName:
PAFItemType
setItemType:
setItemDuration:
isVideo
setMediaType:
isRemoteView
setSourceType:
setTimedMetadata:
eventType
itemEndTime
itemStartTime
setPlayActivityEvent:
setShouldReportToStore:
endReasonType
_stringForEndReason:
recordReportingEvents:
_recordPlayActivityEvent:forMediaItem:
isOffline
reportingController
isSBEnabled
storeAccountID
_currentJingleReportingTimedMetadata
_hasSetLastPlayEventTimeStamp
_isScrubbing
_itemForElapsedTimeChange
_lastPlayEventEndTimeForCurrentItem
_lastPlayEventTimeIntervalSinceReferenceDate
_playbackSessionID
_shouldReportAsPlaying
_startTimeForElapsedTimeChange
_elapsedTimeObserverToken
_lastContainer
_lastContainerType
_offline
_SBEnabled
_reportingController
_storeAccountID
initWithSong:mediaItemMetadata:
propertySetForSongsWithDetails:
initWithProperties:relationships:
initWithRequestedPropertySet:
modelObjectWithStorePlatformDictionary:
initWithSong:
mediaItemMetadata
initWithMPObject:
numberWithDouble:
album
hasLoadedValueForKey:
shouldReportPlayEvents
trackCount
numberWithLong:
trackNumber
genre
hasStoreLyrics
hasVideo
radioStationHash
numberWithUnsignedLongLong:
isEqualToMediaItem:
hasTrait:
setMediaItemMetadata:forProperty:
removeMediaItemMetadataForProperty:
performMediaItemMetadataTransactionWithBlock:
initWithStorePlatformDictionary:
mediaItemURL
reportingDelegate
setMediaItemMetadata:
_song
_mediaItemMetadata
_setManualLayoutFrame:
containerGuide
_containerGuide
setup
registerClass:forElementName:elementType:dependent:
setExtendedInterfaceCreator:
playlistViewFromElement:existingView:
URLForResource:withExtension:
initWithBase64EncodedString:options:
JSONObjectWithData:options:error:
initialize
viewControllerForElement:existingViewController:
URLForResource:
imageForResource:
collectionViewCellClassForElement:
_imageProxyForElement:
_styleSheetURLForTemplate:
_musicCloudViewController
tvs_dictionaryForKey:
tvs_stringForKey:
setCountLimit:
objectForKey:
setObject:forKey:
compilationsLibraryRequest
setShowIndexBarTitles:
initWithCompilations:
_addShuffleButton
removeObserver:forKeyPath:
font
descender
buttonsFocusGuide
constraintEqualToAnchor:constant:
layoutFrame
libraryRequest
albumSortDescriptors
setItemSortDescriptors:
setLibraryRequest:
initWithAlbum:
_showViewControllerWithZoomAnimation:
_handlePlayPause:
heightAnchor
constraintEqualToConstant:
setButtonsFocusGuide:
previouslyFocusedView
setImageShape:
year
setSubTitle:
setArtworkCatalog:
_selectedShuffle
composer
initWithGenre:
initWithArtist:
initWithComposer:showTitle:
shuffleAllButton
setShuffleAllButton:
songsResultsController
setSongsResultsController:
setGenre:
setComposer:
previouslyFocusedCell
setPreviouslyFocusedCell:
focusGuideTopConstraint
setFocusGuideTopConstraint:
_shuffleAllButton
_songsResultsController
_genre
_artist
_composer
_buttonsFocusGuide
_previouslyFocusedCell
_focusGuideTopConstraint
musicVideosLibraryRequest
_playFromItemAtIndexPath:
playFromRequest:startItemIdentifiers:shuffle:
cellSpacing
cellSize
initWithMediaItems:index:isCollection:
systemMusicPathWithRoute:playerID:
setPlayerPath:
propertySetWithProperties:
setQueueItemProperties:
setPlayingItemProperties:
setTracklistRange:
setRequest:
startUpdating
mediaItems
responseTrackList
playingItemIndexPath
optimisticPlayIndex
items
activeListIndex
activeList
requestResponseController
request
reloadQueue
canMoveItemAtIndexToPlayNext:
reorderCommand
indexPathForGlobalIndex:
canMoveItem:
moveItem:afterItem:
_performPlayerCommandRequest:name:
setNeedsReload
reloadIfNeeded
isUpdating
beginAutomaticResponseLoading
setIsUpdating:
endAutomaticResponseLoading
playerResponse
tracklist
playerState
currentPlayingItem
seekCommand
endSeek
_performPlayerCommand:name:
beginSeekWithDirection:
changeItemCommand
nextItem
setOptimisticPlayIndex:
_optimisticChangeNotification
previousItem
indexPathForItem:inSection:
changeToItem:
performRequest:completion:
changePositionToElapsedInterval:
playQueue:didChangePlayingItem:
durationSnapshot
timeIntervalSinceReferenceDate
shuffleCommand
setShuffleType:
shuffleType
repeatCommand
setRepeatType:
repeatType
replacePlayQueueWithPlaybackIntent:startPlayback:completionHandler:
tracklistSource
resetCommand
replaceWithPlaybackIntent:
insertCommand
insertAfterPlayingItemWithPlaybackIntent:
insertAtEndOfTracklistWithPlaybackIntent:
_updatePlayQueue
_mediaItemForMPCPlayerResponseItem:
metadataObject
contentItemIdentifier
currentPlayingElapsedTime
videoView
response
setPlayerResponse:
_mediaItemsForTrackList:
setMediaItems:
setDurationSnapshot:
_isTracklist:equalToTrackList:
playQueue:didUpdateQueue:
playQueue:didChangeFromPlayState:toPlayState:
isRadioPlayback
playQueue:didChangeElapsedTime:forItem:atIndex:
playQueue:didChangeVideoView:
playQueue:didChangeDurationSnapshot:
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
trackList
moveItemAtIndexToPlayNext:
stopUpdating
fastForward
rewind
changeToNextItem
changeToPreviousItem
changeToItemAtIndex:
setElapsedTime:
currentPlayingDuration
lastPlayerResponse
setShuffleEnabled:preserveCurrentItem:
shuffleEnabled
repeatMode
replacePlayQueueWithPlaybackIntent:startPlayback:
addToPlayQueueWithPlaybackIntent:playNext:
_performInternalPlayerCommand:
setRequestResponseController:
_isRadioPlayback
_isUpdating
_delegate
_requestResponseController
_playerResponse
_mediaItems
_optimisticPlayIndex
_durationSnapshot
persistentID
tvs_arrayByMappingObjectsUsingBlock:
addItemWithProductID:completionHandler:
itemWithPersistentID:verifyExistence:
removeItems:
HSCloudClient
removeItemsWithSagaIDs:completionHandler:
setModelObject:
sharedDeviceLibraryController
performDeleteEntityChangeRequest:withRelatedModelObjects:
transientAddStateForModelObject:
isItemInLibraryWithPeristentID:
setItemProperties:
firstItem
setDeviceLibraryPersistentID:
findMPObjectWithIdentifiers:itemKind:itemProperties:completionHandler:
setStoreSubscriptionAdamID:
findMPSongWithIdentifiers:itemProperties:completionHandler:
playlistsLibraryRequestWithParentPlaylistFolder:
setGlobalPlaylistID:
appendSection:
appendItem:
enumerateItemsInSectionAtIndex:usingBlock:
enumerateSectionsUsingBlock:
removeItemAtIndexPath:
setPlaylistEntries:
setQualityOfService:
addItemToLibraryWithAdamID:completionHandler:
removeItemFromLibraryWithPersistentID:
removeItemsFromLibraryWithSagaIDs:completionHandler:
removeMPObjectFromLibrary:
isMPObjectInLibrary:
findItemInLibraryWithPersistentID:itemKind:itemProperties:completionHandler:
findMPSongInLibraryWithSubscriptionAdamID:itemProperties:completionHandler:
findPlaylistWithCloudGlobalID:completionHandler:
removeSong:fromPlaylist:atPosition:completionHandler:
_menuPressed:
setViewServiceActive:
_dismissRemoteViewController
initWithPlayer:invalidateWhenDone:
setIsIdleScreen:
initWithRootViewController:
setAlpha:
wallpaperViewForVariant:
animateWithDuration:animations:completion:
animateWithDuration:delay:options:animations:completion:
avPlayer
_setAllowsVideoPlaybackWhileInBackground:
_remoteViewControllerProxy
dismissWithResult:
viewServiceBeginPresentationWithOptions:
viewServiceEndPresentationWithOptions:completion:
_exportedInterface
viewServiceUpdatePresentationWithOptions:
viewServiceHandleMessage:reply:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
_remoteViewControllerInterface
setNavigationController:
menuGestureRecognizer
setMenuGestureRecognizer:
nowPlayingWallPaper
setNowPlayingWallPaper:
_navigationController
_menuGestureRecognizer
_nowPlayingWallPaper
tvm_seasonTitle
_fetchPhotoAssetsForAlbumArtwork:
setGroupingProperty:
setRange:
_fetchArtworkURLsForDataItems:responseBlock:
didFinishFetchingPhotoAssets
submitDataQuery:priority:withCompletionQueue:completionHandler:
valueForProperty:
allValues
initWithCapacity:
allKeys
setAssetIdentifier:
setFullResolutionURL:
loadArtworkURLsForTrackIDs:completionHandler:
setCloudDataClient:
remotePhotoServerInterface
setRemotePhotoServerInterface:
_cloudDataClient
_remotePhotoServerInterface
setValueTransformer:forName:
setAllowedUnits:
setZeroFormattingBehavior:
doubleValue
appendString:
setSecond:
secondsFormatter
stringFromDateComponents:
minutesFormatter
stringFromTimeInterval:
transformedValueClass
allowsReverseTransformation
transformedValue:
setMinutesFormatter:
setSecondsFormatter:
_minutesFormatter
_secondsFormatter
initWithItems:
setSelectedSegmentIndex:
_handleTVMoviesSelector
TVSeasonsLibraryRequestForShow:
TVEpisodesLibraryRequestForShow:season:
tvMoviesSelector
setSelectorFocusGuide:
cellsTopMargin
selectorFocusGuide
creator
durationFormatter
stringByReplacingOccurrencesOfString:withString:
setArtworkCatalog:withFittingSize:
setUnitsStyle:
selectedSegmentIndex
TVShowsLibraryRequest
moviesLibraryRequest
updateCollectionViewLayout
setLibraryRequest:completionHandler:
setTvMoviesSelector:
_selectedSegment
_isShowingMovies
_shouldFocusSegmentBar
_durationFormatter
_tvMoviesSelector
_selectorFocusGuide
_nowPlayingViewWillAppear:
_nowPlayingViewWillDisappear:
_nowPlayingViewWillLoad:
_playbackQueueDidChange:
currentChildViewController
setPlaybackDelegate:
musicNowPlayingViewController
setShowAnimatedBackground:
reloadPlaylist
contextMenuForMediaItem:completionHandler:
_controlsForMediaItem:showAddButton:hasLyrics:
setRoutePickerButtonStyle:
setCircular:
_addToLibraryAction:
_showLyricsAction:
newPlaybackControllerWithPlayer:initialPlaybackType:
showPlaybackControllerWithPlayer:animated:
topViewController
viewControllers
tvs_objectsPassingTest:
setViewControllers:
playbackViewController:loadRelatedContentForMediaItem:withCompletionHandler:
playMediaItemAtIndex:
playbackViewControllerProvidesCustomControls:
playbackViewController:controlsForMediaItem:completionHandler:
playbackViewController:didSelectHistoryMediaItem:player:
playbackViewControllerUserWillInitiatePlayback:
routePickerControlForPlaybackViewController:
newPlaybackControllerWithPlayer:
_mediaItemForNowPlayingControls
_addToLibraryButton
_lyricsButton
_contextMenuButton
_routePickerButton
setView:
effectWithStyle:
effectForBlurEffect:
initWithEffect:
defaultSizeForStyle:
loadView
viewDidLayoutSubviews
setActivityText:
activityText
isActivityIndicatorHidden
setActivityIndicatorHidden:
activityIndicatorDelay
setActivityIndicatorDelay:
_activityTextLabel
_showingSpinner
_spinnerTimer
_visualEffectView
_activityIndicatorHidden
_activityText
_activityIndicatorDelay
_shouldAnimatePropertyWithKey:
_applicationWillResignActiveNotification:
_applicationDidBecomeActiveNotification:
initWithString:
setAttributedStrings:
firstObject
setHighlighted:
currentMarqueeView
_imageForText:
stopAnimating
nextMarqueeView
removeAnimationForKey:
setMask:
_prepareNextMarquee
_startMarqueeIfNeeded
setAnimating:
textSizeForWidth:
replicationPadding
presentationLayer
contentsRect
position
setContentsRect:
setBounds:
setPosition:
begin
setAnimationDuration:
commit
drawTextInRect:
marqueeDelay
drawInRect:blendMode:alpha:
backgroundColor
textAlignment
_drawFullMarqueeTextInRect:
isAnimating
_shouldCycle
currentAttributedStringIndex
attributedStrings
objectAtIndex:
_clearLabelTextContents
crossfadeDuration
bringSubviewToFront:
_nextAttributedString
setContents:
sublayers
scrollRate
isPaused
CGImage
setContentsCenter:
scale
setContentsScale:
animationWithKeyPath:
setFillMode:
numberWithFloat:
arrayWithObjects:
setValues:
setKeyTimes:
addAnimation:forKey:
setRemovedOnCompletion:
keyTimes
setSpeed:
setTimeOffset:
_clearAttributedStrings
setPaused:
stopAnimatingWithoutResetWithDuration:
stopAndResetScrollWithDuration:
setMarqueeDelay:
setReplicationPadding:
maskCapWidth
setMaskCapWidth:
setScrollRate:
setCrossfadeDuration:
underPosterOutset
setUnderPosterOutset:
_marqueeNeeded
_marqueeing
_maskLayer
_animating
_paused
_scrollRate
_marqueeDelay
_replicationPadding
_maskCapWidth
_crossfadeDuration
_attributedStrings
_currentAttributedStringIndex
_underPosterOutset
_currentMarqueeView
_nextMarqueeView
mapTableWithKeyOptions:valueOptions:
songsLibraryRequestForAlbumDetails
kindWithSongKind:
headlineFont
_updateAlbumInfo
trackDisplayMode
classicalWork
grouping
removeAllIndexes
removeAllObjects
_checkAlbumAttributesForTracks
_songResults
groupByClassicalWorks
_tracksIncludingClassicalWorks
addObjectsFromArray:
setTracks:
collectionViewLayout
item
containsIndex:
_isItemSingleMovementWork:
contextMenuForMPSong:container:completionHandler:
tracks
_classicalWorkNameForSong:
shouldShowComposer
classicalMovement
classicalMovementNumber
_romanNumeralForNumber:
rangeOfString:options:range:
substringFromIndex:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
characterAtIndex:
numberWithInt:
dictionary
setShowArtistNames:
setTrackDisplayMode:
indexSet
removeLastObject
lastObject
_setItemIsSingleMovementWork:
addIndex:
playFromMPAlbum:
isValid
_updateTracks
collectionView:layout:sizeForItemAtIndexPath:
collectionView:layout:insetForSectionAtIndex:
collectionView:layout:minimumLineSpacingForSectionAtIndex:
collectionView:layout:minimumInteritemSpacingForSectionAtIndex:
collectionView:layout:referenceSizeForHeaderInSection:
collectionView:layout:referenceSizeForFooterInSection:
initWithLegacyAlbum:
_trackDisplayModeString
setAlbum:
showArtistNames
indexesOfClassicalWorks
setIndexesOfClassicalWorks:
_albumTitleLabel
_artistNameLabel
_hasMultipleArtists
_trackCount
_classicalWorkMap
_showArtistNames
_album
_tracks
_indexesOfClassicalWorks
_trackDisplayMode
_paradeViewReadyNotification:
_scrollingParadeViewReadyNotification:
_crossfadeViewReadyNotification:
_fadeToBlack
imageFrame
transitionDuration
_dissolveToPendingView
_viewTypeForNumberOfImages:
_displayPlaceholderView
cycleInterval
setCrossfadePeriod:
newDataTransitionDuration
transitionWithView:duration:options:animations:completion:
animateWithDuration:animations:
initWithImage:
_paradeThreshold
resume
deckViewParadeType
setDeckViewParadeType:
setCycleInterval:
setTransitionDuration:
setNewDataTransitionDuration:
_pendingDisplayView
_pendingViewType
_displayView
_viewType
_placeholderImageView
_imageLoadTimeout
_deckViewParadeType
_cycleInterval
_transitionDuration
_newDataTransitionDuration
_imageFrame
_clearCachedValues
setAdjustsFontSizeToFitWidth:
setBaselineAdjustment:
previousBounds
previousNumberOfLines
cachedTextRectForBounds
textRectForBounds:limitedToNumberOfLines:
setCachedTextRectForBounds:
setPreviousBounds:
setPreviousNumberOfLines:
previousTargetSize
cachedSizeThatFits
setCachedSizeThatFits:
setPreviousTargetSize:
_previousNumberOfLines
_cachedSizeThatFits
_previousTargetSize
_cachedTextRectForBounds
_previousBounds
setFocusedSizeIncrease:
setContentMotionRotation:translation:
setRoundContentWhenDeselected:
configurationWithStyle:
setFocusAnimationConfiguration:
_ordinalWidth
_createLabelAtPosition:width:
caption1Font
_setContinuousCornerRadius:
_setColorsForCurrentUserInterfaceStyle
setClipsSubviews:
floatingView
focusable
prepareForReuse
setHeading:
setMusicBarsVisible:
setPlayIconVisible:
clearArtworkCatalogs
cellHeight
setOrdinalVisible:
setControlState:
_shouldShowPlayIcon
fullWidthStyle
isHidden
_hasThumbnail
hasOrdinal
_layoutLabel:
_updatePlayingState
arrayByAddingObject:
isEqualToNumber:
_popularityImageForPopularity:
valueTransformerForName:
_preferredConfigurationForFocusAnimation:inContext:
subviews
_triggeringPhysicalButton
_floatingViewControlState
setControlState:animated:
pressesCancelled:withEvent:
pressesEnded:withEvent:
playIconVisible
musicBarsVisible
adamID
_playingItemChanged:
_playbackStateChanged:
thumbnail
thumbnailImage
setFullWidthStyle:
songType
durationString
isExplicit
ordinalValue
popularity
showPlayIconWhenFocused
enabled
isWatched
setFloatingView:
ordinalVisible
_artistLabel
_albumLabel
_durationLabel
_ordinalLabel
_headingLabel
_thumbnailView
_explicitBadgeView
_popularityIndicatorView
_labels
_musicBarsView
_isObservingPlayer
_playIconView
_popularityOnImage
_watchedCheckmarkImageView
_isExplicit
_hasOrdinal
_fullWidthStyle
_showPlayIconWhenFocused
_enabled
_focusable
_isWatched
_ordinalVisible
_playIconVisible
_musicBarsVisible
_songType
_title
_heading
_duration
_durationString
_ordinalValue
_popularity
_adamID
_persistentID
_floatingView
initWithParentPlaylistFolder:
isSubscribed
sharedTracker
currentPAFFeatureName
queryItemWithName:value:
cloudVersionHash
globalPlaylistID
parentPlaylistFolder
setParentPlaylistFolder:
_parentPlaylistFolder
setGroupingDirection:
numberWithUnsignedChar:
filterWithProperty:op:value:
addDataQueryFilter:
initWithQueryType:
addProperty:
initWithDataFilters:op:
properties
enumerateObjectsUsingBlock:
null
setWriteToAssetLibrary:
songsLibraryRequestForContextMenu
artistsLibraryRequest
itemKind
itemProperties
_contextMenuForMPObject:completionHandler:
_libraryContextMenuForMPSong:
_libraryContextMenuForMPAlbum:
_libraryContextMenuForMPArtist:
_libraryContextMenuForMPPlaylist:
_libraryContextMenuForMPMovie:
_libraryContextMenuForMPTVEpisode:
_libraryContextMenuForMPTVSeason:
_libraryContextMenuForMPTVShow:completionHandler:
_catalogContextMenuForSubject:
isLibraryAdded
_adamIdFromMediaItem:
initWithTitle:mediaType:identifier:
setArtistOrCuratorName:
setStoreID:
setArtistStoreID:
setIsInLibrary:
setLibrarySongLyrics:
setSongHasStoreLyrics:
songsLibraryRequestForContextMenuWithPlaylist:
_libraryContextMenuForMPSong:container:playlistIndex:
_menuItemForLibraryGoToAlbumWithSong:
_menuItemForLibraryGoToArtistWithSong:
_menuItemForRemoveMPItemFromLibraryWithPersistentID:title:itemKind:
_menuItemForLibraryRemoveSong:fromPlaylist:atPosition:
_menuItemForLibrarySongAddToPlaylistWithSong:
_menuItemForLibraryPlaybackType:persistentID:playbackAction:
_menuItemForCreateStationFromSong:
_menuItemForLibraryLyricsWithSong:
_menuItemForLibraryLoveWithMPObject:
_menuItemForLibraryHateWithMPObject:
_menuTitleForMPSong:
initWithHeading:menuItems:
_kindForGenericObjectType:
_menuItemForLibraryGoToArtistWithAlbum:
representativeSong
_menuItemForCreateStationFromAlbum:
_menuItemForCreateStationFromArtist:
_menuItemForGoToMovieWithStoreID:
_menuItemForGoToTVShowWithEpisodeStoreID:
_pushViewController:
_findAlbumWithPersistentID:completionHandler:
_activateAppIfBackgrounded
initWithTitle:actionBlock:
setMenuItemType:
albumsViewControllerForArtist:
_showLibraryArtistForAlbum:
storeID
mediaType
_menuItemForCatalogSongGoToAlbum:
_menuItemForCatalogSongGoToArtist:
isInLibrary
_addOrRemoveLibraryMenuWithAdamID:mediaType:isInLibrary:
_menuItemForCatalogSongAddToPlaylist:
_menuItemForCatalogShuffle
_menuItemForPlayNext:actionBlock:
_menuItemForAddToUpNext:actionBlock:
_MPModelSongWithAdamID:title:
_menuItemForCatalogSongLyrics:
_menuItemForCatalogMusicVideoLove:
_menuItemForCatalogMusicVideoHate:
_menuItemForCatalogSongLove:
_menuItemForCatalogSongHate:
_menuItemForAddOrRemoveAlbum:
_MPModelAlbumWithAdamID:title:
_menuItemForCatalogAlbumLove:
_menuItemForCatalogAlbumHate:
artistOrCuratorName
_MPModelArtistWithAdamID:name:
_menuItemForCatalogPlaylistSubscribe:
_menuItemForCatalogPlaylistUnsubscribe:
_menuItemForCatalogPlaylistLove:
_menuItemForCatalogPlaylistHate:
_menuItemForGoToTVShow:
_menuTitleForContextMenuSubject:
_removeFromLibraryMenuWithAdamID:mediaType:
_addToLibraryMenuWithAdamID:
_removeMPObjectFromLibrary:
_deleteConfirmationDialogWithTitle:CompletionHandler:
sharedController
tasteTypeForModel:
setTasteType:forModel:withCompletionHandler:
setHasCheckmark:
initWithIdentifier:actionBlock:
identifier
playItemType:withPersistentID:playbackAction:
_showLyricsForMPSong:
_menuItemForRemoveAlbumFromLibrary:
_menuItemForAddAlbumToLibrary:
_genericObjectTypeForMediaType:
_removeItemFromLibraryWithStoreID:itemKind:
playFromMPSong:
playFromMPArtist:
_catalogSongGoToAlbumActon:
artistStoreID
_catalogSongGoToArtistAction:
_tasteTypeForAdamID:
_setTasteType:forSongID:
_setTasteType:forMusicVideoID:
songHasStoreLyrics
_showLyricsForContextMenuSubject:
_setTasteType:forAlbumID:
addGlobalPlaylistWithID:andAddToCloudLibrary:completion:
_removeLibraryItemItemMatchingIdentifiers:itemKind:
_tasteTypeForPlaylistGlobalID:
_setTasteType:forPlaylistGlobalID:
kindWithEpisodeKind:
kindWithAlbumKind:
kindWithSeasonKind:
kindWithKinds:
kindWithPlaylistEntryKind:options:
tasteTypeForStoreAdamID:
tasteTypeForPlaylistGlobalID:
setTasteType:forStoreAdamID:withContentType:completionHandler:
setTasteType:forPlaylistGlobalID:withCompletionHandler:
deviceMediaLibrary
setTasteType:forMediaEntity:withCompletionHandler:
_findLibraryItemMatchingIdentifiers:itemKind:completionHandler:
_checkLibraryForTrackWithAdamID:resultBlock:
_addTrackWithAdamIDToLibrary:completionBlock:
applicationState
URLWithString:relativeToURL:
openURL:options:completionHandler:
contextMenuForCatalogItem:
_radioContextMenuForSubject:
_menuItemForGoToMovie:
_setTasteType:forItemPersistentID:
setBackgroundColor:forState:
_setShadows
_addSubheadLabelWithFont:textColor:
setAllowsGroupBlending:
placeholderImageView
hasImageOnDisk
setShowImage:
_adjustToArtworkSize:
_setWidthForLabel:
setShadowOpacity:forUserInterfaceStyle:
setShadowExpansion:
setShadowPath:
_setLabelTextColors
_setLabelPositionsChangeY:
controlState
isHighlighted
setControlState:withAnimationCoordinator:
_updateShadowForLabel:inFocus:
_imageAreaHeightForImageWidth:
focusedSizeIncrease
_setLabelTextColorsForUserInterfaceStyle:
setShadowColor:
setShadowBlur:
imageShape
subTitle
setImageView:
setPlaceholderImageView:
showImage
_subTitleLabel
_showImage
_imageShape
_subTitle
_artworkCatalog
composersLibraryRequest
setPreviewOnRightSide:
setTableViewPadding:
albumsViewControllerForComposer:
_previewViewControllerForIndexPath:
initializeLoggingWithDomain:persistentComponents:
indexPathsForVisibleItems
_notifyDidScroll
_delegateFlags
section
setMediaLibrary:
kindWithVariants:songKind:
kindWithVariants:playlistEntryKind:options:
kindWithRelationshipKinds:
sortDescriptorWithRelatedProperties:ascending:
setSectionKind:
setSectionProperties:
_propertySetForTVEpisode
sortDescriptorWithKey:ascending:
_propertySetForSongsInContextMenu
_songsLibraryRequestForContextMenuWithPlaylist:songProperties:
sortSongsByArtist
sortDescriptorWithKeyPath:ascending:
propertySetForAlbumDetails
_albumsLibraryRequestWithVariants:
sortAlbumsByArtist
recentlyAddedlibraryRequest
TVShowsAndMoviesLibraryRequest
songsLibraryRequest
songSortDescriptors
TVEpisodeLibraryRequestWithAdamID:
initWithPlayerID:
setVideoSupported:
start
becomeActive
_itemReadyToPlay:
elapsedTimeObservers
setAvPlayer:
setElapsedTimeJumpInProgress:
setTargetElapsedTime:
changeMediaInDirection:
initWithStartTime:endTime:
_TVPPlaybackStateFromMCPPlayerState:
setState:
_setAVPlayerFromVideoView:
_updateElapsedTimeObserversWithDurationSnapshot:
dateWithTimeIntervalSinceReferenceDate:
elapsedTime
elapsedTimeJumpInProgress
targetElapsedTime
itemError
loading
scanning
engineDidPauseForLeaseEnd:
engine:didFailToPlayFirstItem:withError:
engine:didFailToPlayItem:withError:
initWithName:
invalidate
changeMediaInDirection:reason:
continueLoadingCurrentItem
playIgnoringDelegate:
pauseIgnoringDelegate:
pauseWithVolumeRampDuration:
scanWithRate:
stopWithVolumeRampDuration:
setElapsedTime:precise:
setElapsedTime:seekPrecision:
setElapsedTime:seekPrecision:ignoreDelegate:
addElapsedTimeObserver:
removeElapsedTimeObserverWithToken:
addBoundaryTimeObserverForTimes:withHandler:
addBoundaryTimeObserverForDates:withHandler:
removeBoundaryTimeObserverWithToken:
skipToNextChapterInDirection:
setSelectedSubtitleOption:setGlobalPreference:
updateSubtitleOptions
currentMediaItemSupportsScrubbingUsingPlayer
asyncDelegate
setAsyncDelegate:
setCurrentMediaItem:
currentMediaItemPreparedForLoading
currentMediaItemInitialLoadingComplete
currentMediaItemHasVideoContent
currentMediaItemIsStreaming
currentMediaItemPresentationSize
currentMediaItemHasDates
errorBehavior
setErrorBehavior:
interactive
setInteractive:
rate
rateUsedForPlayback
setRateUsedForPlayback:
waitsAfterPreparingMediaItems
setWaitsAfterPreparingMediaItems:
playbackDate
setPlaybackDate:
isLive
muted
setMuted:
volume
setVolume:
chapterCollections
currentChapterCollection
setCurrentChapterCollection:
currentChapter
currentInterstitial
bufferedTimeRange
seekableTimeRange
seekableDateRange
forwardPlaybackEndTime
reversePlaybackEndTime
mediaItemEndAction
setMediaItemEndAction:
audioOptions
selectedAudioOption
setSelectedAudioOption:
subtitleOptions
selectedSubtitleOption
setSelectedSubtitleOption:
maximumBitRate
setMaximumBitRate:
preventsSleepDuringVideoPlayback
setPreventsSleepDuringVideoPlayback:
updatesMediaRemoteInfoAutomatically
setUpdatesMediaRemoteInfoAutomatically:
limitReadAhead
setLimitReadAhead:
changeToMediaAtIndex:reason:
addWeakReferenceToVideoView:
removeWeakReferenceToVideoView:
engine:didFailToPlayFirstItem:
engine:willResetQueueWithPlaybackIntent:
setPlayQueue:
playbackEngine
setPlaybackEngine:
setElapsedTimeObservers:
_elapsedTimeJumpInProgress
_playQueue
_playbackEngine
_name
_elapsedTimeObservers
_avPlayer
_targetElapsedTime
_state
configureUIControls
titleForState:
caption2Font
_setBlurEnabled:
_onSelectSignIn:
setActionPromptMessage:
actionPromptMessage
sampleImage
alphaOnImage
signInLabel
setSignInLabel:
signInButton
setSignInButton:
_actionPromptMessage
_sampleImage
_alphaOnImage
_signInLabel
_signInButton
_createBarViews
setMusicBarsStyle:
_removeAnimations
_addAnimationsWithRepeatCount:
_setBarHeights:
_addAnimations
_updateMusicBarsStyle
filterWithType:
setCompositingFilter:
musicBarsStyle
setAnchorPoint:
removeAllAnimations
valueWithCGRect:
setKeyPath:
setRepeatCount:
resumeAnimating
_barViews
_repeatCount
_musicBarsStyle
currentContext
setCurrentContext:
currentSubcontext
setCurrentSubcontext:
_currentContext
_currentSubcontext
initWithStyle:reuseIdentifier:
labelForMarquee
_imageViewWidth
_textLabelWidthWithXPosition:currentWidth:
_setImageTintColor:
rendersImageAsTemplates
setRendersImageAsTemplates:
allowsFocus
setAllowsFocus:
_imageTintColor
_setImageViewWidth:
_backingImage
_allowsFocus
__imageTintColor
__imageViewWidth
_selectedAllSeasons
_allSeasonsButton
_addBackdropView
_applicationWillEnterForeground:
_applicationDidFinishSuspension:
_setPreviewPaused:
_frameForHeaderView
_frameForTable
_frameForPreview
adjustedFrameForPreviewFrame:
_isAutoUpdatingPreviewViewController
_cancelDelayedAutoUpdateOfPreviewViewController
_focusVelocity
_delayedAutoUpdatePreviewViewController
_unregisterForBackdropViewHideStateUpdates
_registerForBackdropViewHideStateUpdates
_updateBackdropViewAfterSettingPreviewViewIfNessecary
shouldAnimatePreviewView
_updateBackdropViewBeforeSettingPreviewViewIfNessecary
_setPreviewView:forced:animated:completion:
setPreviewView:
_cancelAutoUpdatingPreviewViewController
fadeThroughPreviews
insertSubview:belowSubview:
sendSubviewToBack:
setPreviewViewController:forced:
_removeBackdropView
alpha
insertSubview:aboveSubview:
autoUpdatePreviewViewControllerBlock
_resetAutoUpdatePreviewViewControllerState
setBackdropViewHideStateNeedsUpdatingBlock:
backdropViewMode
shouldHideBackdropView
setBackdropViewHidden:animated:
_isBackdropViewVisible
tableViewWidth
setPreviewPaused:
defaultRowHeight
defaultSectionHeaderHeight
setHeaderView:
setAutoUpdatePreviewViewControllerBlock:
setBannerView:
previewViewController
tableViewPadding
previewViewPadding
setPreviewViewPadding:
previewOnRightSide
bannerView
headerView
previewView
setFadeThroughPreviews:
_backdropView
_tableContainingView
_previewContainerView
_lastAutoUpdatePreviewIndexPath
_lastAutoUpdatePreviewDelay
_pendingAutoUpdatePreviewIndexPath
_previewOnRightSide
_fadeThroughPreviews
_tableViewWidth
_backdropViewMode
_bannerView
_headerView
_previewView
_autoUpdatePreviewViewControllerBlock
_tableViewPadding
_previewViewPadding
isPreviewPaused
backdropViewHideStateNeedsUpdatingBlock
_fillQueue
_checkForPreloadCompletion
removeObjectAtIndex:
_loadPendingImages
_currentQueueSize
_artworkCatalogToLoadNext
pauseImageLoad
_artworkDidLoad:withImage:
_artworkDidFail:
requestImageWithCompletionHandler:
mutableCopy
preloadImageCount:withCompletionHandler:
popNextImage
setPauseImageLoad:
isRandomized
setRandomized:
preloadCount
setPreloadCount:
preloadCompletionHandler
setPreloadCompletionHandler:
queueSize
setQueueSize:
concurrentDownloadCount
setConcurrentDownloadCount:
nextIndex
setNextIndex:
finishedImages
setFinishedImages:
pendingArtworkCatalogs
setPendingArtworkCatalogs:
loadingArtworkCatalogs
setLoadingArtworkCatalogs:
_randomized
_pauseImageLoad
_preloadCount
_preloadCompletionHandler
_queueSize
_concurrentDownloadCount
_nextIndex
_finishedImages
_pendingArtworkCatalogs
_loadingArtworkCatalogs
setIdentifier:
containerType
setContainerType:
containerStoreID
setContainerStoreID:
containerCloudID
setContainerCloudID:
containerName
setContainerName:
librarySongLyrics
_isInLibrary
_songHasStoreLyrics
_mediaType
_identifier
_containerType
_containerStoreID
_containerCloudID
_artistOrCuratorName
_containerName
_artistStoreID
_storeID
_librarySongLyrics
_playbackStateDidChange:
_recentRadioStationsDidChange:
sharedRadioRecentStationsController
_subscriptionStatusDidChange:
_registerForStorePushNotifications
_setupMusicLibraryNotification
_sendPlayingStateNotification:
removeListener:
removeObserver:forKeyPath:context:
isProcessingPlayCommand
isObject
callWithArguments:
setIsProcessingPlayCommand:
_createMediaItemsForPlaylistPersistentID:options:
dictionaryWithCapacity:
_createMediaItemsForCollection:options:
_createMediaItemForStoreItem:options:
formattedArtworkURLString:
initWithURL:traits:
_setMetadataInMediaItem:fromDictionary:artwork:
_mediaItemMetadataFromOptions:
enumerateKeysAndObjectsUsingBlock:
episode
movie
_addPAFInfoToMediaItem:fromOptions:ignoreContainerID:
_createMediaItemsForLocalTrackIDs:
unsignedIntegerValue
insertObject:atIndex:
_prepareCallback:
_storeRequestForMediaItems:
playFromRequest:playbackAction:
_jsCallbackWithIdentifier:args:
setStoreIDs:
playFromStationStringID:
playFromArtistID:
_dictionaryForRadioStation:
getRecentStationsWithCompletionHandler:
refreshWithCompletionHandler:
queryMusicLibraryForPlaylistWithCloudGlobalID:completionHandler:
removePlaylistFromMusicLibraryWithGlobalID:completionHandler:
toString
queryMediaLibrary:maxItems:searchTerm:options:completionHandler:
queryRecentlyAdded:range:completionHandler:
querySongsForAlbumWithPersistentID:options:range:completionHandler:
queryMusicLibraryForCollection:cloudID:options:completionHandler:
getNowPlayingInfoWithOptions::
tvs_setObjectIfNotNil:forKey:
absoluteString
getURLForArtworkCatalog:isInLibrary:completionHandler:
presentContextMenuForItemWithOptions:::
_songFromPlatformDictionary:
_isItemInLibraryWithSubscriptionID:itemKind:
_isAlbumInLibraryWithStoreID:
_isPlaylistInLibraryWithCloudGLobalID:
initWithTitle:identifier:actionBlock:
setMenuItems:
menuItemType
setActionBlock:
setDateFormat:
currentLocale
setLocale:
bookmarksForKeys:
bookmarkTime
bookmarkTimestamp
isMarkedAsUnwatched
querySongsForAlbumWithPersistentID::::
isString
initWithProperty:op:value:
_queryMusicLibrary:options:range:properties:filters:callback:
queryRecentlyAdded:::
appContext
jsContext
valueWithNewObjectInContext:
valueWithRange:inContext:
addProperties:
addDataQueryFilters:
setJSValue:forProperty:
_aggregateTracksIntoAlbums:
albumStoreIDForPersistentID:
artistStoreIDForPersistentID:
dataWithJSONObject:options:error:
base64EncodedStringWithOptions:
jsValueForProperty:
evaluate:completionBlock:
loadArtworkURLsForPlaylistIDs:completionHandler:
cancelProcessing
dataClient
isAlbumArtworkAvailableForTrackID:
_callJSMusicInitializedNotification
stationStringID
dataUsingEncoding:
intValue
compare:
sortedArrayUsingComparator:
_addPAFDataToMediaItem:fromPlaylist:options:
tvs_numberForKey:
contentRestrictionsCountryCode
countryCode
lowercaseString
initWithRatingSystemString:ratingLabel:rank:ratingDescription:
ratingSystem
_callJSMethodNamed:withArgs:
_handleCloudClientConnected
mainQueue
addObserverForName:object:queue:usingBlock:
_callJSMusicUpdatedNotification
valueWithObject:inContext:
hasProperty:
invokeMethod:withArguments:
removeListener:forTopic:
addListener:forTopic:
_isItemInLibraryWithIdentifiers:itemKind:
pushNotificationServer:didReceiveMessageForTopic:userInfo:
pushNotificationServerTokenDidChange:
playItems:::
playRadioStation:::
getRecentRadioStations:
queryMusicLibraryForPlaylistWithCloudGlobalID::
addToMusicLibraryWithAdamID::
addPlaylistToMusicLibraryWithGlobalID::
removePlaylistFromMusicLibraryWithGlobalID::
removeItemsFromMusicLibraryWithSagaIDs::
queryMediaLibrary:::::
queryMusicLibraryForSongsWithAdamIDs::
queryMusicLibraryForCollection::::
getNowPlayingInfo:
getCurrentIsPlayingState:
presentExplicitRestrictionAlertIfNeededOfType::
presentDetailView:::
presentContextMenuForItem::
getBookmarkDataForItems::
queryMusicLibrary:::::
querySongsForAlbum::::
setTasteType::::
tasteTypeForAdamID:
addSongToPlaylist:
isMusicLibraryInitialized
contentTypeSong
contentTypeMusicVideo
contentTypeAlbum
contentTypePlaylist
tasteTypeNeutral
tasteTypeLove
tasteTypeHate
_loadImageProxy:
_finishedLoadingImageProxy:
_playlistWithMediaItems:index:isCollection:
_playbackContainerDidChange:
_activeQueries
_loadingImageProxies
_isMusicLibrarySynced
_musicSyncObserverAdded
_radioHistoryInitialized
_isProcessingPlayCommand
initWithName:value:
arrayByAddingObjectsFromArray:
setScheme:
setHost:
setQueryItems:
setHeaderReferenceSize:
_playSongAtIndexPath:
lastReceivedResponse
_invalidateResultsWithResponse:
songs
sectionedCollectionDataSource
sectionIndexTitles
indexOfSectionForSectionIndexTitleAtIndex:
dataSource
_collectionView:canMoveItemAtIndexPath:
_collectionView:moveItemAtIndexPath:toIndexPath:
_collectionView:canEditItemAtIndexPath:
_sectionIndexTitlesForCollectionView:
_collectionView:indexPathForSectionIndexTitle:atIndex:
collectionViewNeedsFocusUpdate:
setCollectionView:
setLastReceivedResponse:
focusToIndexPath
setFocusToIndexPath:
setSongs:
setSectionedCollectionDataSource:
_indexBarSection
_libraryRequest
_focusToIndexPath
_songs
_sectionedCollectionDataSource
viewControllerForKey:
completeTransition:
_beginZoomAnimationFromViewController:toViewController:containerView:completion:
setTransform:
transitionDuration:
animateTransition:
interruptibleAnimatorForTransition:
animationEnded:
preferredFontForTextStyle:
fontDescriptor
fontDescriptorByAddingAttributes:
fontWithDescriptor:size:
_userInterfaceStyle
_lightModeListTitleTextColor
_darkModeListTitleTextColor
_lightModeListSubheadTextColor
_darkModeListSubheadTextColor
_lightModeListItemTextColor
_darkModeListItemTextColor
_lightModeReviewScoreTextColor
_darkModeReviewScoreTextColor
_lightModeReviewTextColor
_darkModeReviewTextColor
_lightModeReviewNameTextColor
_darkModeReviewNameTextColor
_lightModeListItemSelectedOverlayFillColor
_darkModeListItemSelectedOverlayFillColor
colorWithRed:green:blue:alpha:
_lightModeListItemSelectedOuterStrokeColor
_darkModeListItemSelectedOuterStrokeColor
_lightModeMetadataLongDescriptionColor
_darkModeMetadataLongDescriptionColor
title4Font
headline2Font
headline3Font
subtitle2Font
subheadFont
footnoteFont
fontWithWeight:fromFont:
imageHeaderSubtitleColor
listItemSelectedTextColor
folderTitleTextColor
gridItemTextColor
rowTitleTextColor
rowTitleSelectedTextColor
productionTitlesTextColor
reviewScoreTextColor
reviewTextColor
reviewNameTextColor
reviewRowTitleTextColor
listItemSelectedOverlayFillColor
listItemSelectedOuterStrokeColor
metadataLongDescriptionTextColor
menuBarButtonTextColor
menuBarButtonHighlightedTextColor
feedTitleColor
feedSubtitleColor
feedPageIndicatorColor
feedPageIndicatorCurrentPageColor
feedRatingsStarColor
feedListItemFocusedColor
feedNavigationColor
padding
_startTimer
_loadNextImage:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
_crossfadeToImage:
didMoveToSuperview
setPadding:
crossfadePeriod
_crossfadeTimer
_loaderQueue
_crossfadePeriod
_padding
setFocusScaleAnchorPoint:
setMinimumScaleFactor:
_selectButtonAction:
_buttonActionTriggered
addTarget:action:forEvents:
_setButtonShadows
isEnabled
circular
_setCornerRadius:
buttonStyle
_focusedImageView
_maskImageLayer
_textLabel
_selectRecognizer
_buttonStyle
_circular
_text
stations
radioPlaybackIntentWithStationStringID:
playWithPlaybackIntent:
radioPlaybackIntentFromArtist:
radioPlaybackIntentFromSong:
radioPlaybackIntentFromAlbum:
didMoveToWindow
_startAnimations
_stopAnimations
_addImageToAnimationContainer:
tvs_randomizedArray
CGColor
setValue:forKey:
setFilters:
subarrayWithRange:
setFromValue:
setToValue:
functionWithName:
setTimingFunction:
functionWithControlPoints::::
setBeginTime:
animationDidStart:
animationDidStop:finished:
_additionalImageViewCount
_animationGroup
albumsViewControllerForAllAlbums
artistsViewController
compilationsViewController
genresViewController
composersViewController
musicVideosViewController
playlistsViewController
recentlyAddedViewController
songsViewControllerForAllSongs
TVShowsViewController
decodeObjectForKey:
decodeDoubleForKey:
decodeBoolForKey:
decodeIntegerForKey:
encodeObject:forKey:
encodeDouble:forKey:
encodeBool:forKey:
encodeInteger:forKey:
setCloudID:
setPurchasedAdamID:
setSubscriptionAdamID:
setRadioAdamID:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
setIsVideo:
setPAFItemType:
_isVideo
_isRemoteView
_itemIDs
_featureName
_PAFItemType
playItemType:withMPObject:startItemIdentifiers:shuffle:
_playSongsWithRequest:startIdentifiers:shuffle:
_queueSongsWithRequest:playNext:
_playWithPlaybackIntent:startIdentifiers:shuffle:
_playSongsWithRequest:playbackAction:
hasCommonIdentifierWithIdentifierSet:
_songsRequestForContainer:songVariants:
_playSongsScopedToContainer:songVariants:playbackAction:
setShuffleMode:
playbackIntentWithStartItemIdentifiers:
touchesBegan:withEvent:
whitespaceAndNewlineCharacterSet
tvs_stringByRemovingCharactersInSet:
_identifierForMPModelObject:
tvs_MD5String
_loadArtworkForMPObject:scaleToSize:completionHandler:
tvEpisode
season
imageWithCGImageRef:preserveAlpha:
appendFormat:
storeCloudAlbumID
storePurchasedAdamID
contentItemID
imageKeyForObject:
cancelLoad:
loadImageForObject:scaleToSize:cropToFit:completionHandler:
loadImageForObject:scaleToSize:cropToFit:imageDirection:completionHandler:
textFieldDidChange:
insertSubview:below:
_doneButtonPressed:
systemInputViewControllerForResponder:editorView:containingResponder:
setSupportsRecentInputsIntegration:
setSystemInputViewControllerDelegate:
supportsTouchInput
reloadInputViewsForPersistentDelegate
systemLayoutSizeFittingSize:
boundingRectWithSize:options:context:
systemInputViewController:didChangeAccessoryVisibility:
systemInputViewControllerDidAcceptRecentInput:
shouldUpdateFocusInContext:
_disableAutomaticKeyboardUI
_enableAutomaticKeyboardPressDone
textFieldAllowsFocus
setTextFieldAllowsFocus:
textFieldHeaderLabel
topAccessoryView
bottomAccessoryView
systemInputViewController
_textField
_topAccessoryView
_bottomAccessoryView
_isTouchEnabled
_preferredFocusedView
_hideAccessoryViews
_textFieldHeaderLabel
_systemInputViewController
_titleViewFrameWithBounds:
_imageViewFrameWithBounds:
_messageViewFrameWithBounds:
titleView
setTitleView:
messageView
setMessageView:
_titleView
_messageView
_buttonFrameWithBounds:
submitButton
_submitButton
isSecureTextEntry
_placeholderImageForObjectType:
handlePlayPauseCommand
_setColorsForUserInterfaceStyle:
setProgressPercent:
progressPercent
_progressView
_progressCompleteView
_progressPercent
setHighlightStyle:
darkGrayColor
_scaleRect:withStyle:
initWithScaleToSize:
_configureLabel:withTextElement:maxWidth:
colorType
color
gradientColors
setColors:
setStartPoint:
setEndPoint:
titleGradientLayer
removeFromSuperlayer
insertSublayer:atIndex:
setTitleGradientLayer:
setAccessibilityLabel:
width
height
margin
maxTextLines
_randomColor
createdImageViews
setCreatedImageViews:
titleBlockView
setTitleBlockView:
subtitleLabel
setSubtitleLabel:
titleBackgroundImageView
setTitleBackgroundImageView:
playlistID
setPlaylistID:
_createdImageViews
_titleBlockView
_subtitleLabel
_titleBackgroundImageView
_playlistID
_titleGradientLayer
setMaximumResultsPerScope:
initWithItemKind:name:properties:
setScopes:
setSearchString:
curator
setStoreCloudID:
setStoreCloudAlbumID:
artworkCatalogBackingFileURL
requestExportableArtworkURLWithCompletion:
setMpResults:
_configureCollectionViewLayout:
didSelectItemAtIndexPath:
showIndexBarTitles
navigationController:didShowViewController:animated:
navigationController:willShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
_navigationControllerDelegate
_viewControllerWithZoomAnimation
_sectionIndex
_showIndexBarTitles
_mpResults
_setHeadingAttributes
_setPreviewArtworkForBrowseSectionRowAtIndex:
_menuItemForRowIndex:
_previewTypeForMenuItem:
cancelPreviousPerformRequestsWithTarget:
_setPreviewArtworkForMenuIndexNumber:
productType
_viewControllerForBrowseSectionRowAtIndex:
_setPreviewArtworkForPreviewType:
_shuffleArray:maxCount:
_artworkCatalogForMPObject:size:
_setHeadingSizeWithStartingSize:minimumSize:
exchangeObjectAtIndex:withObjectAtIndex:
_nameForMenuItem:
currentTopMenu
_noResultsViewWithTitle:subtitle:
currentMenuContext
_previewShowsEverything
_viewControllerUIContext
_menuSelectionIsDisplayed
_currentPreviewType
_previewArtworkCatalogMap
_currentMenuIndex
_mapMenuItemToName
_currentPreviewLibraryResponse
_currentMenuContext
_handlePlayPauseButton
_configureTableHeaderView
_startMusicPlayback
_tableHeaderLabel
headingVerticalOffset
setTableHeaderTitle:
tableHeaderTitle
tableHeaderTitleAttributedText
tableHeaderLabel
setTableHeaderLabel:
playPauseRecognizer
setPlayPauseRecognizer:
tableHeaderView
setTableHeaderView:
_headingVerticalOffset
_playPauseRecognizer
_tableHeaderView
TVMusicCloudViewController
TVSignInLandingViewDelegate
NSObject
TVMusic
TVMusicSpeakerSelectionViewController
MPAVRoutingControllerDelegate
TVTableViewDelegate
UITableViewDelegate
UIScrollViewDelegate
UITableViewDataSource
_TVMusicAudioRouteCell
TVMusicContextMenuUI
TVMusicLibraryGenresViewController
TVTableView
UIGestureRecognizerDelegate
_TVMusicLyricsScrollView
TVMusicLyricsViewController
TVML
TVMusicPlaybackHostController
TVMusicRestrictionsUI
TVMusicLyricsHelper
TVMusicParadeViewController
TVMusicLibraryEpisodesViewController
TVCollectionViewDelegate
UICollectionViewDelegate
TVMusicAppDelegate
PBSystemServiceNowPlayingDelegate
TVImageView
TVMusicNoMusicView
TVMusicPlayerManager
TVMusicTableViewCell
TVMusicAddToPlaylistViewController
_PlaylistNameEntryViewController
TVTextEntryControllerDelegate
TVMusicLibraryPlaylistDetailViewController
TVCKDataClientResultsControllerDelegate
UICollectionViewDataSource
TVMusicSocialBadge
TVMusicLibraryButtonFactory
TVMusicPlaybackObserver
TVMusicMPSongMediaItem
TVFocusRedirectView
TVMusicInterfaceFactory
_TVInterfaceCreatingPrivate
TVInterfaceCreating
TVMusicLibraryAlbumsViewController
TVMusicLibraryVideosViewController
TVMusicPlayQueue
MPRequestResponseControllerDelegate
TVMusicLibraryUtilities
PBSViewServicePresenter
PBSViewServiceInterface
TVMusicSystemNowPlayingViewController
TVMusicAdditions
TVMusicScreenSaverService
TVPhotoServiceInterface
TVDurationValueTransformer
TVMusicLibraryShowsViewController
TVMusicNowPlayingManager
TVPPlaybackViewControllerDelegate
TVActivityIndicatorViewController
_TVAnimatedImageView
TVAnimatedLabel
TVMusicLibraryAlbumDetailViewController
UICollectionViewDelegateFlowLayout
TVDeckImageView
TVLabel
TVMusicSongCell
TVMusicLibraryPlaylistsViewController
TVMusicMPModelImageProxy
TVMusicContextMenuFactory
TVMusicLibraryCollectionViewCell
TVMusicLibraryComposersViewController
_TVMusicLibraryTableViewCell
TVCollectionView
TVMusicMPLibraryRequestFactory
TVMusicPlayer
TVMusicPlayQueueDelegate
MPCPlaybackEngineDelegate
TVPAVFPlayback
TVPPlayback
TVSignInLandingView
TVMusicBarsView
TVMusicLibraryUITracker
TVTableViewCell
TVMusicLibrarySeasonsViewController
TVPreviewTableViewController
TVPreviewTableViewControllerAdditions
_TVImageLoaderQueue
TVMusicContextMenuSubject
TVMusicJSObject
TVCKPushNotificationListener
JSExport
TVMusicLibrarySongsViewController
UICollectionViewDataSource_Private
TVNavigationZoomAnimator
UIViewControllerAnimatedTransitioning
TVThemeManager
TVImageCrossfadeView
TVMusicLibraryActionButton
TVMusicLibraryComposerDetailViewController
TVMusicRadioUtilities
TVScrollingParadeView
CAAnimationDelegate
TVMusicLibraryViewController
TVMusicPAFLyricsInfo
NSSecureCoding
NSCoding
TVMusicPlaybackHelper
TVInteractionGestureRecognizer
TVMusicMPArtworkCatalogLoader
TVImageLoader
TVTextEntryController
UISystemInputViewControllerDelegate
TVTextEntryHeaderView
TVTextEntryFooterView
_TVTextEntryTextField
TVMusicLibraryRecentlyAddedViewController
TVMusicCloudProgressView
TVMusicPlaylistLockupViewCell
Helpers
TVMusicMPRequestViewController
UINavigationControllerDelegate
TVMusicNowPlayingViewController
TVMusicLibraryTopMenuViewController
TVMusicTableViewController
TVMusicLibraryArtistsViewController
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v16@0:8
v20@0:8B16
v24@0:8@16
@24@0:8@16
v32@0:8@16@24
v40@0:8@16@24@32
@"TVSStateMachine"
@"UIViewController"
@"TVMusicCloudProgressView"
@"UIActivityIndicatorView"
@"TVSignInLandingView"
@"UIView"
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v32@0:8@"MPAVRoutingController"16@"NSError"24
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@16B24
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v40@0:8@16@24q32
d32@0:8@16@24
d32@0:8@16q24
@32@0:8@16q24
q32@0:8@16@24
B32@0:8@16@24
@32@0:8@16@24
@40@0:8@16@24@32
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
B40@0:8@16@24@32
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v32@0:8@"TVTableView"16@"NSIndexPath"24
B32@0:8@"TVTableView"16@"NSIndexPath"24
q32@0:8@16q24
q24@0:8@16
q40@0:8@16@24q32
v40@0:8@16q24@32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
@?16@0:8
v24@0:8@?16
@"NSIndexPath"
@"TVTableView"
@"MPAVRoutingController"
@"NSString"
v24@0:8q16
q16@0:8
v44@0:8@16@24B32@36
@"MPModelResponse"
@"TVMusicParadeViewController"
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@"UITapGestureRecognizer"
@"UILongPressGestureRecognizer"
@"UILabel"
@"UIScrollView"
@"<TVPMediaItem>"
@"NSDictionary"
@"NSURL"
@"TVImageProxy"
@"TVImageView"
@"TVPPlaybackViewController"
@"<TVPPlayback>"
v32@0:8q16@?24
v32@0:8@16@?24
v36@0:8@16d24B32
v44@0:8@16@24d32B40
@32@0:8{CGPoint=dd}16
v32@0:8{CGPoint=dd}16
{CGPoint=dd}16@0:8
@"TVDeckImageView"
@"NSArray"
{CGPoint="x"d"y"d}
v48@0:8@16@24@32@40
{CGPoint=dd}40@0:8@16{CGPoint=dd}24
B32@0:8@"UICollectionView"16@"NSIndexPath"24
v32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"UICollectionViewCell"24@"NSIndexPath"32
v48@0:8@"UICollectionView"16@"UICollectionReusableView"24@"NSString"32@"NSIndexPath"40
B48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
v48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
@"UICollectionViewTransitionLayout"40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"UICollectionViewLayout"32
B32@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24
v40@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
{CGPoint=dd}40@0:8@"UICollectionView"16{CGPoint=dd}24
B40@0:8@"UICollectionView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v32@0:8@"TVCollectionView"16@"NSIndexPath"24
B32@0:8@"TVCollectionView"16@"NSIndexPath"24
B24@0:8@"TVCollectionView"16
v40@0:8@16{CGPoint=dd}24
@24@0:8q16
{CGSize=dd}16@0:8
@"TVLabel"
@"UIControl"
@"MPModelTVSeason"
@"NSDateFormatter"
v48@0:8@16@24@32^v40
@"MPUJinglePlayActivityReportingController"
@"SSPurchaseManager"
@"TVMusicPlaybackObserver"
@"SSVSubscriptionStatus"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGSize=dd}32@0:8{CGSize=dd}16
v24@0:8d16
d16@0:8
v24@0:8B16B20
@"UIImage"
@"UIImageView"
@"UIColor"
{CGSize=dd}40@0:8@16@24d32
B32@0:8q16q24
@"TVMusicPlayer"
v36@0:8@16B24@?28
v40@0:8q16@24@?32
@"HSCloudClient"
@"MPModelSong"
@"MPModelLibraryRequest"
@"MPModelPlaylist"
v24@0:8@"TVTextEntryController"16
@"TVTextEntryController"
v32@0:8@"TVCKDataClientResultsController"16@"TVCKDataQuery"24
B32@0:8@"TVCKDataClientResultsController"16@"NSDictionary"24
@40@0:8@16@24q32
q32@0:8@"UICollectionView"16q24
@"UICollectionViewCell"32@0:8@"UICollectionView"16@"NSIndexPath"24
q24@0:8@"UICollectionView"16
@"UICollectionReusableView"40@0:8@"UICollectionView"16@"NSString"24@"NSIndexPath"32
v40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
@"NSArray"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSString"24q32
@"TVCollectionView"
@"NSMutableArray"
@24@0:8Q16
v24@0:8Q16
@"NSData"
@"SSVPlayActivityEventContainerIDs"
@"MPCReportingController"
@"TVPBaseMediaItem"
@"UIFocusContainerGuide"
#24@0:8@16
@"UIView"32@0:8@"TVViewElement"16@"UIView"24
@"UIViewController"32@0:8@"TVViewElement"16@"UIViewController"24
@"NSURL"24@0:8@"NSString"16
@"UIImage"24@0:8@"NSString"16
#24@0:8@"TVViewElement"16
@"TVImageProxy"24@0:8@"TVViewElement"16
@"TVMusicCloudViewController"
@20@0:8B16
@28@0:8@16B24
@"TVCKDataClientResultsController"
@"MPModelGenre"
@"MPModelArtist"
@"MPModelComposer"
@"UIFocusGuide"
@"NSLayoutConstraint"
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
@36@0:8@16q24B32
B24@0:8q16
v32@0:8q16@24
{?=dddddffB}16@0:8
v72@0:8{?=dddddffB}16
@"NSObject<TVMusicPlayQueueDelegate>"
@"MPRequestResponseController"
@"MPCPlayerResponse"
{?="snapshotTime"d"startTime"d"endTime"d"duration"d"elapsedDuration"d"rate"f"defaultRate"f"isLiveContent"B}
v48@0:8@16@24@32@?40
v48@0:8q16@24@32@?40
v40@0:8@16@24@?32
v48@0:8@16@24q32@?40
v24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@?<v@?>24
@"NSXPCInterface"16@0:8
v32@0:8@"NSDictionary"16@?<v@?@"<NSSecureCoding>"@"NSError">24
v24@0:8@"<NSSecureCoding>"16
@"UINavigationController"
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@"<TVPhotoServerInterface>"16
@"TVCKCloudDataClient"
@"<TVPhotoServerInterface>"
@"NSDateComponentsFormatter"
@"UISegmentedControl"
v32@0:8@"<TVPMediaItem>"16@?<v@?@"TVPMusicContextMenuData">24
v40@0:8@"TVPPlaybackViewController"16@"NSObject<TVPMediaItem>"24@?<v@?@"TVPRelatedContent">32
B24@0:8@"UIViewController"16
v40@0:8@"UIViewController"16@"<TVPMediaItem>"24@?<v@?@"NSArray"q>32
B40@0:8@"UIViewController"16@"<TVPMediaItem>"24@"<TVPPlayback>"32
v24@0:8@"UIViewController"16
@"UIView"24@0:8@"UIViewController"16
@32@0:8@16B24B28
@"TVMusicLibraryActionButton"
@"AVRoutePickerView"
@"NSObject<OS_dispatch_source>"
@"UIVisualEffectView"
f16@0:8
v20@0:8f16
@"CALayer"
@"_TVAnimatedImageView"
{CGSize=dd}40@0:8@16@24@32
{UIEdgeInsets=dddd}40@0:8@16@24q32
d40@0:8@16@24q32
{CGSize=dd}40@0:8@16@24q32
{CGSize=dd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"NSIndexPath"32
{UIEdgeInsets=dddd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
d40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
{CGSize=dd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
@"NSMapTable"
@"MPModelAlbum"
@"NSMutableIndexSet"
Q24@0:8q16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
@32@0:8q16@24
@32@0:8d16d24
@"TVMusicBarsView"
@"NSNumber"
@"_UIFloatingContentView"
v40@0:8q16q24@?32
@40@0:8q16@24@32
@32@0:8@16@?24
@40@0:8Q16q24Q32
q24@0:8q16
v32@0:8q16q24
@36@0:8q16q24B32
@32@0:8q16q24
v40@0:8@16{CGSize=dd}24
d24@0:8d16
@"TVAnimatedLabel"
@"MPArtworkCatalog"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{?="_respondsToDidPlayItem"b1"_respondsToDidLongPressItem"b1"_respondsToCanBecomeFocused"b1}
v40@0:8@16q24q32
v48@0:8@16d24@32q40
v80@0:8@16{?=dddddffB}24
v32@0:8@"TVMusicPlayQueue"16@"NSArray"24
v32@0:8@"TVMusicPlayQueue"16@"<TVPMediaItem>"24
v40@0:8@"TVMusicPlayQueue"16q24q32
v48@0:8@"TVMusicPlayQueue"16d24@"<TVPMediaItem>"32q40
v32@0:8@"TVMusicPlayQueue"16@"UIView"24
v80@0:8@"TVMusicPlayQueue"16{?=dddddffB}24
v24@0:8@"MPCPlaybackEngine"16
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@"NSError"32
v28@0:8d16B24
v48@0:8d16{?=qiIq}24
v52@0:8d16{?=qiIq}24B48
@24@0:8@?16
v32@0:8Q16@24
@24@0:8@"NSString"16
v32@0:8q16@"NSString"24
@24@0:8@?<v@?d@"NSDate"dB>16
@32@0:8@"NSArray"16@?<v@?B>24
v28@0:8@"TVPSubtitleOption"16B24
@"<TVPPlaybackDelegate>"16@0:8
v24@0:8@"<TVPPlaybackDelegate>"16
@"<TVPASyncPlaybackDelegate>"16@0:8
v24@0:8@"<TVPASyncPlaybackDelegate>"16
@"TVPPlaylist"16@0:8
v24@0:8@"TVPPlaylist"16
@"NSObject<TVPMediaItem>"16@0:8
v24@0:8@"NSObject<TVPMediaItem>"16
@"TVPPlaybackState"16@0:8
@"NSDate"16@0:8
v24@0:8@"NSDate"16
@"NSArray"16@0:8
@"TVPChapterCollection"16@0:8
v24@0:8@"TVPChapterCollection"16
@"TVPChapter"16@0:8
@"TVPInterstitial"16@0:8
@"TVPTimeRange"16@0:8
@"TVPDateRange"16@0:8
@"TVPAudioOption"16@0:8
v24@0:8@"TVPAudioOption"16
@"TVPSubtitleOption"16@0:8
v24@0:8@"TVPSubtitleOption"16
v32@0:8Q16@"NSString"24
v24@0:8@"TVPVideoView"16
@"AVPlayer"16@0:8
@"TVPChapterCollection"
@"<TVPASyncPlaybackDelegate>"
@"TVPSubtitleOption"
@"TVPInterstitial"
@"TVPAudioOption"
@"NSDate"
@"TVPChapter"
@"TVMusicPlayQueue"
@"MPCPlaybackEngine"
@"AVPlayer"
@"TVPPlaybackState"
@"<TVSignInLandingViewDelegate>"
@"UIButton"
d32@0:8d16d24
v40@0:8@16B24B28@?32
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
@"TVFocusRedirectView"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@40@0:8@16q24@32
v40@0:8@"TVCKPushNotificationServer"16@"NSString"24@"NSDictionary"32
v24@0:8@"TVCKPushNotificationServer"16
v56@0:8@16q24@32@40@48
v48@0:8@16{_NSRange=QQ}24@40
v56@0:8@16@24{_NSRange=QQ}32@48
@64@0:8@16{_NSRange=QQ}24@40@48@56
@56@0:8@16@24{_NSRange=QQ}32@48
v48@0:8@16Q24Q32@40
Q24@0:8@16
v40@0:8@"NSArray"16@"NSDictionary"24@"JSValue"32
v40@0:8@"NSDictionary"16@"NSDictionary"24@"JSValue"32
v24@0:8@"JSValue"16
v32@0:8@"NSString"16@"JSValue"24
v32@0:8@"NSArray"16@"JSValue"24
v56@0:8@"NSArray"16q24@"JSValue"32@"NSDictionary"40@"JSValue"48
v48@0:8@"NSDictionary"16{_NSRange=QQ}24@"JSValue"40
v56@0:8@"NSString"16@"NSDictionary"24{_NSRange=QQ}32@"JSValue"48
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"JSValue"40
v32@0:8@"NSDictionary"16@"JSValue"24
v40@0:8@"NSString"16@"NSString"24@"JSValue"32
@"JSValue"64@0:8@"NSArray"16{_NSRange=QQ}24@"NSArray"40@"JSValue"48@"JSValue"56
@"JSValue"56@0:8@"NSString"16@"NSDictionary"24{_NSRange=QQ}32@"JSValue"48
v48@0:8@"NSString"16Q24Q32@"JSValue"40
Q24@0:8@"NSString"16
B24@0:8@"NSDictionary"16
@72@0:8@16@24{_NSRange=QQ}32@48@56@64
B36@0:8@16@24B32
B32@0:8q16@24
@"MPSectionedCollection"
@"<MPLazySectionedCollectionDataSource>"
d24@0:8@16
d24@0:8@"<UIViewControllerContextTransitioning>"16
v24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
@"NSTimer"
@"_TVImageLoaderQueue"
@"UIGestureRecognizer"
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
@"NSObject<OS_dispatch_group>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"SSVPlayActivityEventItemIDs"
v44@0:8Q16@24@32B40
v36@0:8@16@24B32
v32@0:8@16Q24
v40@0:8Q16@24Q32
@32@0:8@16Q24
v40@0:8@16Q24Q32
@52@0:8@16{CGSize=dd}24B40@?44
@60@0:8@16{CGSize=dd}24B40q44@?52
@"NSString"24@0:8@16
@52@0:8@16{CGSize=dd}24B40@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">44
@60@0:8@16{CGSize=dd}24B40q44@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">52
B48@0:8@16{CGSize=dd}24@?40
v28@0:8@"UISystemInputViewController"16B24
v24@0:8@"UISystemInputViewController"16
@"_TVTextEntryTextField"
@"<TVTextEntryControllerDelegate>"
@"UISystemInputViewController"
@"NSAttributedString"
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
v56@0:8@16q24@32@40@?48
v48@0:8@16{_NSRange=QQ}24@?40
v56@0:8@16@24{_NSRange=QQ}32@?48
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
@"<UINavigationControllerDelegate>"
q24@0:8Q16
@40@0:8@16{CGSize=dd}24
v32@0:8d16d24
@"NSMutableDictionary"
@"TVInteractionGestureRecognizer"
Unable to add to playlist with PID %@, item identifiers: %@ error: %@
Unable to add item to playlist ID %@ because there was no Store ID or Saga ID in identifiers: [%@].
Unable to move item at indexPath %@ to after indexPath %@
Error performing change to item (%ld) request: %{public}@
Unable to perform change to item (%ld) command: No command request is available.
Unable to perform change to item (%ld) command: No tracklist is available.
Error performing set elapsed time to position %{public}g
Unable to perform set elapsed time command: No command request is available.
Error setting shuffle type: %{public}@
Shuffle command not available
Error setting repeat type: %{public}@
Repeat command not available
Error replacing queue with playback intent: %@, error: %{public}@
Queue replace command not available
Queue reset command not found on tracklist!
Unable to replace queue; tracklist is nil
Error inserting into queue with playback intent: %@, error: %{public}@
Queue insert command not available
Queue insert command not found on tracklist!
Unable to insert into queue; tracklist is nil
Unable to perform command "%{public}@" because no player response is available.
Performing player command "%{public}@"
Error performing %{public}@ request: %{public}@
Successfully completed player command "%{public}@"
Unable to perform %{public}@ request: No queue command is available.
Got response with %{public}ld items, index = %{public}ld, elapsed time for "%@" is %{public}g
   > Changed playing item: = %@, content item ID = %@
   > Tracklist changed from %{public}ld items to %{public}ld items
   > Changed play state from %{public}ld to %{public}ld
Failed to remove song from playlist: %{public}@
Could not find song %{public}@ at index %{public}ld in playlist %{public}@
Unable to create menu for PID=%@: unsupported item type %ld
Did not find playlist entry %{public}@ in playlist %{public}@ at position %{public}ld
Can't get artist information for album [%@]
Failed to remove song from playlist; error: %{public}@
Removed song "%{public}@" from playlist "%{public}@".
#Warning #SYSTEM No adamID for album (%@), can't add it.
Failed to add album (%@) to library: error=%@.
#Warning #SYSTEM No adamID for album (%@), can't delete it.
Error subscribing to playlist ID %@: %@
Failed to add song (adamID=%@) to library: error=%@.
Can't remove item because it was not found in library. Identifiers: %@
Can't create add to library menu item for adamID %llu
Can't create remove from library menu item for adamID %llu, media type %ld
Unknown item type for playback
Unsupported item type for playback: %ld
Unknown playback type
Can't perform query; cloud data client is not connected and synced.
Ignoring recently added item: %@.
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>1755971667</string>
<key>adi-client</key>
<string>572356293</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.RemovePeer</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.accounts.inactive.fullaccess</key>
<true/>
<key>com.apple.appletv.pbs.now-playing-view-service</key>
<true/>
<key>com.apple.atvcached.client</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.avfoundation.allow-video-playback-in-background</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.coremedia.allow-mpeg4streaming</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.managedconfiguration.feature-setting.allowExplicitContent</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.mediaremote.allow</key>
<array>
<string>TVPairing</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.iad.background-client</key>
<true/>
<key>com.apple.private.iad.privileged-client</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/TVSUIWallpaper/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.ak.anisette.xpc</string>
<string>com.apple.askpermissiond</string>
<string>com.apple.familycircle.agent</string>
<string>com.apple.hsa-authentication-server</string>
<string>com.apple.mediaartworkd.xpc</string>
<string>com.apple.MediaPlayer.MPRadioControllerServer</string>
<string>com.apple.rtcreportingd</string>
<string>com.apple.storebookkeeperd.xpc</string>
<string>com.apple.atc.xpc</string>
<string>com.apple.atc.xpc.downloadprogress</string>
<string>com.apple.atc.xpc.runkeeplocaltask</string>
<string>com.apple.PairingManager</string>
<string>com.apple.itunescloudd.playactivity</string>
<string>com.apple.nanoprefsync</string>
<string>com.apple.itunescloud.delegation-provider</string>
<string>com.apple.itunescloud.delegate-account-store</string>
<string>com.apple.coremedia.endpointpicker.xpc</string>
<string>com.apple.coremedia.routediscoverer.xpc</string>
<string>com.apple.coremedia.routingcontext.xpc</string>
<string>com.apple.coremedia.endpointremotecontrolsession.xpc</string>
<string>com.apple.PairingManager</string>
</array>
<key>com.apple.smoot.subscriptionservice</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.tv.api</key>
<array>
<string>iTunes</string>
</array>
<key>com.apple.tvmlkit.private</key>
<true/>
<key>fairplay-client</key>
<string>1888082492</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.MediaRemote.pairing</string>
</array>
</dict>
</plist>
