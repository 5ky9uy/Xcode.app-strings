333333
Q@333333
ffffff
,@333333
traitCollection
userInterfaceStyle
colorWithWhite:alpha:
setBackgroundColor:
traitCollectionDidChange:
init
alloc
initWithName:initialState:mode:
sharedInstance
defaultCenter
removeObserver:
dealloc
viewDidLoad
_appDidBecomeActiveNotification:
addObserver:selector:name:object:
_storeAccountChangedNotification:
_libraryDidUpdate:
_musicLibraryStateChanged:
_musicLibraryError:
_musicLibrarySyncProgress:
defaultStore
activeAccount
setIsUserLoggedIn:
_registerStateMachineHandlers
setShouldAcceptEvents:
libraryManager
initialize
viewWillAppear:
postEvent:
viewDidAppear:
currentDisplayedView
view
arrayWithObjects:count:
cloudProgressView
_removeCurrentView
mainBundle
localizedStringForKey:value:table:
initWithMessage:
addSubview:
setCloudProgressView:
setCurrentDisplayedView:
removeFromSuperview
noMusicView
mainScreen
bounds
initWithFrame:
isFusePurchased
setMessage:
setNoMusicView:
defaultMediaLibrary
filterAvailableContentGroups:withOptions:
state
numberWithBool:
dictionaryWithObjects:forKeys:count:
bundleIdentifier
setScreenSaverDisplayStatusForBundleIdentifier:isEnabled:extraInfo:
parentViewController
willMoveToParentViewController:
removeFromParentViewController
contextForSignIn
initWithAuthenticationContext:
authenticatedAccount
setActive:
setActiveLockerAccount:
startWithAuthenticateResponseBlock:
array
numberWithUnsignedInteger:
addObject:
loginPromptView
setDelegate:
setTitle:
imageNamed:
setSampleImage:
setAlphaOnImage:
setLoginPromptView:
activityIndicatorView
initWithActivityIndicatorStyle:
setActivityIndicatorView:
center
setCenter:
startAnimating
clearColor
setTextAlignment:
title2Font
setFont:
setText:
listTitleTextColor
setTextColor:
setAutoresizingMask:
setNumberOfLines:
bodyFont
listSubheadTextColor
buttonWithType:
setTitle:forState:
_clickedErrorRetryButton:
addTarget:action:forControlEvents:
sizeToFit
frame
setFrame:
setErrorMessageView:
errorMessageView
_showCloudProgressView
_removeTopMenu
_removeCloudProgressView
_removeLoginPromptView
_removeWaitingView
_removeErrorMessageView
_removeNoMusicView
currentState
isUserLoggedIn
_showLoginPromptView
_showWaitingView
executeBlockAfterCurrentStateTransition:
_updateTopMenu
registerDefaultHandlerForEvent:withBlock:
_showAuthenticationDialog
registerHandlerForEvent:onState:withBlock:
reload
_showSyncingView
_setScreenSaverEnabledForCloudLibrary
registerHandlerForEvent:onStates:withBlock:
_showErrorView
menuItems
_menuItems
isEqualToArray:
initWithMenuItems:
addChildViewController:
didMoveToParentViewController:
setNeedsFocusUpdate
_showNoMusicView
object
syncProgress
setProgressPercent:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
authenticateUserOnSelectSignIn
preferredFocusEnvironments
.cxx_destruct
stateMachine
setStateMachine:
topMenuViewController
setTopMenuViewController:
setLibraryManager:
_isUserLoggedIn
_stateMachine
_topMenuViewController
_cloudProgressView
_activityIndicatorView
_loginPromptView
_errorMessageView
_currentDisplayedView
_noMusicView
_libraryManager
mediaItemMetadataForProperty:
hasSuffix:
setWithArray:
containsObject:
serviceType
isVideoMediaType
_iTunesAccountActivity:
setState:
setCloudStatus:
hsCloudClient
setDaemonConfiguration:
uniqueIdentifier
longLongValue
_postErrorNotificationWithCode:
_postErrorWithCode:underlyingError:
setIsSagaPurchased:
setIsFusePurchased:
setAccountDSID:
tvck_isITunesMatchEnabled
tvck_setITunesMatchEnabled:
unsignedLongLongValue
_syncDatabase
_deleteDatabaseWithMainThreadCompletionHandler:
_getAccountInfoWithCompletionBlock:
_stopPeriodicJaliscoUpdate
_unregisterSagaPush
_unregisterJaliscoPush
_updateSyncProgress
cancelPreviousPerformRequestsWithTarget:selector:object:
_uninitialize
cloudStatus
_syncJalisco
_syncSaga
updateArtistHeroImages
errorWithDomain:code:userInfo:
postNotificationName:object:userInfo:
postNotificationName:object:
valueForKey:
isEqualToString:
cloudAddToPlaylistBehavior
setCloudAddToPlaylistBehavior:completionHandler:
sharedCoordinator
lastKnownStatus
accountStatus
getStatusWithOptions:statusBlock:
getITunesMatchStatusWithCompletionBlock:
isJaliscoAvailableInStoreFront
accountDSID
_registerJaliscoPushForUser:
_startPeriodicJaliscoUpdate
setSyncProgress:
hasCloudLibrary
performSelector:withObject:afterDelay:
setJaliscoSynced:
updateJaliscoLibraryWithReason:completionHandler:
_getJaliscoDatabaseRevision:
_setLockerAccount
_registerSagaPushForUser:
updateSagaLibraryWithReason:completionHandler:
_getSagaDatabaseRevision:
isJaliscoSynced
activeLockerAccount
saveAccount:error:
loadUpdateProgressWithCompletionHandler:
databaseDeleteInProgress
setDatabaseDeleteInProgress:
removeJaliscoLibraryWithCompletionHander:
deauthenticateWithCompletionHandler:
initWithType:interval:delay:async:
_updateJaliscoWithReason:
setPerformBlock:
_periodicJaliscoUpdateTask
registerBackgroundTask:
unregisterBackgroundTask:
_updateSagaWithReason:
isSagaPurchased
setHsCloudClient:
jaliscoPushUpdateTask
setJaliscoPushUpdateTask:
sagaPushUpdateTask
setSagaPushUpdateTask:
_isFusePurchased
_isSagaPurchased
_jaliscoSynced
_databaseDeleteInProgress
_state
_cloudStatus
_syncProgress
_hsCloudClient
_accountDSID
_jaliscoPushUpdateTask
_sagaPushUpdateTask
isMainThread
viewControllerForContextMenuData:
theApp
navigationController
presentViewController:animated:completion:
count
heading
alertControllerWithTitle:message:preferredStyle:
countByEnumeratingWithState:objects:count:
actionBlock
title
actionWithTitle:style:handler:
hasCheckmark
_setChecked:
addAction:
showContextMenu:
genresLibraryRequest
initWithLibraryRequest:
setBackdropViewMode:
setTableViewWidth:
title1Font
pointSize
systemFontOfSize:weight:
_textColor
setFirstLineHeadIndent:
initWithString:attributes:
setTableHeaderTitleAttributedText:
setHeadingVerticalOffset:
setPreviewViewController:
dequeueReusableCellWithIdentifier:forIndexPath:
mpResults
itemAtIndexPath:
textLabel
name
numberOfSections
numberOfItemsInSection:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
previouslyFocusedIndexPath
cellForRowAtIndexPath:
nextFocusedIndexPath
_setColorsForCell:indexPath:isFocused:withAnimationCoordinator:
_setPreviewArtworkForGenre:
albumsViewControllerForGenre:
pushViewController:animated:
blackColor
addCoordinatedAnimations:completion:
setNeedsDisplay
tableView
reloadData
albumsLibraryRequest
setScopedContainers:
setContentRange:
arrayWithCapacity:
results
itemsInSectionAtIndex:
artworkCatalog
setFittingSize:
scale
setDestinationScale:
setArtworkCatalogs:
performWithResponseHandler:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:numberOfRowsInSection:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:heightForRowAtIndexPath:
_lastReceivedResponse
_visibleOnScreen
_shouldUpdateOnViewDidAppear
_previewViewController
initWithFrame:style:
_playButtonAction:
initWithTarget:action:
_setButtonType:
addGestureRecognizer:
_longPressAction:
_setRemembersPreviouslyFocusedItem:
delegate
tableView:didReceiveLongPressForItemAtIndexPath:
tableView:shouldHandleLongPressForItemAtIndexPath:
_performBlockWithFocusedCellIndexPath:
nextFocusedView
isDescendantOfView:
visibleCells
indexPathForCell:
copy
tableView:didReceivePhysicalPlayForItemAtIndexPath:
window
screen
focusedView
superview
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
didUpdateFocusInContext:withAnimationCoordinator:
indexPathForLastFocusedItem
_indexPathForDirectlyFocusedItem
_playButtonRecognizer
_longPressRecognizer
_indexPathForLastFocusedItem
canBecomeFocused
initWithNibName:bundle:
initWithFrame:privateStyle:
panGestureRecognizer
numberWithInteger:
setAllowedTouchTypes:
setUserInteractionEnabled:
setBounces:
setContentInset:
_handleTogglePlayPause
setAllowedPressTypes:
isLibraryAdded
lyrics
text
length
identifiers
lyricsID
_showLyrics:withLyricsID:error:
hasStoreLyrics
_loadAndDisplayStoreLyrics
lyricsText
_showActivityIndicator
_setCornerRadius:
setClipsToBounds:
setHidden:
setImage:
setDestination:configurationBlock:
viewWillDisappear:
_reportPAFEventForLyricsView
setSong:
newOperationWithResponseHandler:
lyricsOperationQueue
addOperation:
setLyricsText:
setLyricsID:
_hideActivityIndicator
attributedStringFromLyricsString:
setAttributedText:
_isNaturallyRTL
setNeedsLayout
code
_showErrorAlertWithTitle:message:
album
artist
viewWillLayoutSubviews
sizeThatFits:
setSize:
setContentSize:
songTitle
subtitle1Font
setMarqueeEnabled:
setMarqueeRunning:
songArtist
songAlbum
subtitle3Font
stringWithFormat:
dismissViewControllerAnimated:completion:
setVisibleDuration:
setModelSong:
PAFFeatureName
setFeatureName:
PAFRecommendationData
setRecommendationData:
PAFContainerData
setModelPlayEvent:
lyricsReportingController
recordLyricsViewEvent:
player
togglePlayPause
HTMLifyNewlines:
fontDescriptorWithTextStyle:leadingAdjustment:
whiteColor
setLineSpacing:
setParagraphSpacing:
preferredFont
attributedSanitizedStringFromHTMLString:defaultAttributes:
rangeOfString:
enumerateLinesUsingBlock:
componentsJoinedByString:
setMaxConcurrentOperationCount:
setQualityOfService:
setName:
initWithSong:
setPAFFeatureName:
setPAFRecommendationData:
setPAFContainerData:
_artworkImageView
_lyricsLabel
_lyricsScrollView
_spinnerView
_songTitleLabel
_songSubtitleLabel
_startViewTime
_song
_PAFFeatureName
_PAFRecommendationData
_PAFContainerData
_lyricsText
_lyricsID
registerViewElementClass:forElementName:
layoutWithElement:
attributes
objectForKeyedSubscript:
boolValue
isDisabled
setEnabled:
setFocusable:
setStoreAdamID:
setStoreSubscriptionAdamID:
setDeviceLibraryPersistentID:
initWithBlock:
setSongIdentifier:
setShowPlayIconWhenFocused:
setSongType:
childViewElements
initWithObject:imageLoader:groupType:
setThumbnail:
elementName
attributedText
string
setArtist:
setDurationString:
integerValue
setOrdinalValue:
setPopularity:
setIsExplicit:
registerElements
songCellFromElement:existingView:
currentMediaItem
initWithPlayer:invalidateWhenDone:initialPlaybackType:
isRadioPlaying
setIsRadioPlayback:
setIsMusicPlaylist:
setAllowDefaultMenuButtonBehavior:
setPopWhenPlayerStops:
setPresentsNowPlayingVideoWithoutAnimations:
viewDidDisappear:
presentedViewController
isBeingPresented
initWithPlayer:
playbackViewController
setPlaybackViewController:
setPlayer:
_playbackViewController
_player
defaultWorkspace
URLWithString:
openSensitiveURL:withOptions:
setAllowExplicitContent
setAllowsExplicitContent:
setPreferredAction:
didDisplayExplicitRestrictionAlertOfType:
isRestrictionsPasscodeSet:
shouldDisplayExplicitRestrictionAlertOfType:completionBlock:
maximumEffectiveTVShowRanking
maximumEffectiveMovieRanking
validateRestrictionForContentType:withRating:allowInteraction:withCompletion:
presentExplicitRestrictionAlertIfNeededOfType:completionBlock:
explicitRestrictionAlertTypeForTypeString:
presentRatingRestrictionAlertIfNeededOfType:forRating:completionBlock:
_updateImageFrame
isViewLoaded
setImageFrame:
initWithImageOffset:
setImageOffset:
artworkCatalogs
imageOffset
_deckImageView
_artworkCatalogs
_imageOffset
show
initWithTitle:libraryRequest:
setItemSize:
setMinimumLineSpacing:
collectionView
setCollectionViewLayout:
setRemembersLastFocusedIndexPath:
cellIdentifier
registerClass:forCellWithReuseIdentifier:
headerView
titleLabel
subtitleLabel
headlineFont
textColor
_seasonName
goToShowButton
_goToShow
normalMoreButton
_selectedMoreButton
setDateStyle:
_bookmarkWillUpdateNotification:
sortType
number
localizedStringWithFormat:
setLayoutMargins:
setCornerRadius:
layer
setShadowRadius:
setShadowOpacity:
setShadowOffset:
setMasksToBounds:
_sizeImageViewToFit
addLayoutGuide:
leftAnchor
constraintEqualToAnchor:
rightAnchor
topAnchor
bottomAnchor
setPreferredFocusEnvironments:
viewDidLayoutSubviews
_artworkPlaceholderImageForUserInterfaceStyle:
setPlaceholderImage:
pressesBegan:withEvent:
anyObject
type
playItemType:withMPObject:
image
size
representativeEpisode
storeAdamID
storeSubscriptionAdamID
numberWithLongLong:
openJavascriptAppWithURL:
cellForItemAtIndexPath:
setSelected:
deviceLibraryPersistentID
contextMenuForLibraryItemWithPersistentID:itemType:completionHandler:
dequeueReusableCellWithReuseIdentifier:forIndexPath:
episodeTypeDisplayName
releaseDate
stringFromDate:
_songCellPlaceholderImage
_isTVEpisodeWatched:
setIsWatched:
thumbnailImageView
setContentMode:
thumbnailSize
setThumbnailImage:
stringValue
initWithIdentifier:mediaType:
bookmarkForKey:
hasBeenPlayed
menuItemType
tvs_objectsPassingTest:
setMenuItems:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
collectionView:shouldHighlightItemAtIndexPath:
collectionView:didHighlightItemAtIndexPath:
collectionView:didUnhighlightItemAtIndexPath:
collectionView:shouldSelectItemAtIndexPath:
collectionView:shouldDeselectItemAtIndexPath:
collectionView:didSelectItemAtIndexPath:
collectionView:didDeselectItemAtIndexPath:
collectionView:willDisplayCell:forItemAtIndexPath:
collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:
collectionView:didEndDisplayingCell:forItemAtIndexPath:
collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:
collectionView:shouldShowMenuForItemAtIndexPath:
collectionView:canPerformAction:forItemAtIndexPath:withSender:
collectionView:performAction:forItemAtIndexPath:withSender:
collectionView:transitionLayoutForOldLayout:newLayout:
collectionView:canFocusItemAtIndexPath:
collectionView:shouldUpdateFocusInContext:
collectionView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInCollectionView:
collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:
collectionView:targetContentOffsetForProposedContentOffset:
collectionView:shouldSpringLoadItemAtIndexPath:withContext:
collectionView:didReceivePhysicalPlayForItemAtIndexPath:
collectionView:shouldHandleLongPressForItemAtIndexPath:
collectionView:didReceiveLongPressForItemAtIndexPath:
collectionViewCanBecomeFocused:
initWithSeason:libraryRequest:
cellsTopMargin
collectionView:cellForItemAtIndexPath:
_setPositionForView:topLeft:
artworkSize
_imageViewContainer
_goToShowButton
_moreButton
_actionButtons
_tvSeason
_episodeReleaseDateFormatter
_shouldReloadOnViewDidAppear
sharedApplication
appController
jsOpenURL:options:
contextWithBagType:
URLBagForContext:
existingBagDictionary
supportsLyricsForURLBagDictionary:
defaultPlayer
showPlaybackControllerWithPlayer:
setCategory:error:
setConfigurationBlock:
sharedConnection
systemServiceProxy
registerNowPlayingDelegate:
_playerDidChangeState:
_playbackLeaseEnded:
_accountChangedNotification:
_internetAvailabilityChanged:
_playlistMediaChangeRequested:
sharedInterfaceFactory
registerAppWithProviderObject:
registerRemotePhotoServer:
photoAssetsWithOptions:responseBlock:
setDefaultRequestHandler:
application:didFinishLaunchingWithOptions:
start:
defaultSyncingKeyValueStore
setupBookmarkService:
startObserving
setFilteringDisabled:
setCloudFilteringType:
beginGeneratingLibraryChangeNotifications
sharedCloudController
becomeActive
host
paused
play
pathComponents
objectAtIndexedSubscript:
componentsSeparatedByString:
characterSetWithCharactersInString:
componentsSeparatedByCharactersInSet:
unsignedLongValue
playItemType:withPersistentID:
resourceSpecifier
hideCurrentPlaybackController
applicationWillEnterForeground:
instancesRespondToSelector:
applicationDidEnterBackground:
resignActive
_setSpotlightRegistrationWithSubscriptionStatus:
accountIdentifier
sharedManager
distantFuture
registerSubscriptionWithInfo:expirationDate:
unregisterSubscriptionWithInfo:
UUID
UUIDString
URLWithString:relativeToURL:
mainQueue
userInfo
addObserverForName:object:queue:usingBlock:
openURL:options:completionHandler:
currentAppContext
initWithAppContext:
setObject:forKeyedSubscript:
setMescalPrimeEnabledForXHRRequests:
pathForResource:ofType:
fileURLWithPath:
stopped
allowsExplicitContent
playlist
setSkipExplicit:
stop
rootViewController
_handleAccountChangedWithSubscriptionStatus:
subscriptionStatus
setSubscriptionStatus:
internetAvailable
pause
systemServicePresentNowPlayingUI
supportsLyrics
application:openURL:options:
applicationDidBecomeActive:
launchAppWithCompletionHandler:
appController:evaluateAppJavaScriptInContext:
bootURL
didShowViewController
setLyricsReportingController:
_currentMediaItem
_checkedForLyricsSupport
_supportsLyrics
_lyricsReportingController
_subscriptionStatus
setCompletionHandler:
cancel
intrinsicContentSize
contentMode
layoutSubviews
expectedSize
willMoveToWindow:
isImageLoaded
_loadImage
setImageProxy:
_setImage:
setImageProxy:completion:
completion
setCompletion:
_updateImageViewWithPlaceholderImageIfNeeded
cornerRadius
_enableEdgeAntialiasingOnSelected
setAllowsEdgeAntialiasing:
_edgeAntialiasingOnSelectedRestrictedToLeftRightEdge
setEdgeAntialiasingMask:
setCacheOnLoad:
setEnableCache:
imageWithCGImage:
imageProxy
setImageLoaded:
load
setTintColor:
imageWithRenderingMode:
_flatImageWithColor:
setHighlightedImage:
setSelected:animated:
_imageView
_setTintColor:
_setFocusedColor:
placeholderImage
_tintColor
_focusedColor
_setEnableEdgeAntialiasingOnSelected:
_setEdgeAntialiasingOnSelectedRestrictedToLeftRightEdge:
_rendersImageAsTemplates
_image
__focusedColor
_imageContentMode
_flatImage
_flatHighlightImage
_selected
_imageLoaded
__enableEdgeAntialiasingOnSelected
__edgeAntialiasingOnSelectedRestrictedToLeftRightEdge
_placeholderImage
_imageProxy
_completion
__tintColor
_configureUIControls
getAttributedTextSize:font:maxWidth:
_updateColorsForUserInterfaceStyle:
setLineBreakMode:
boundingRectWithSize:options:attributes:context:
message
containerView
setContainerView:
setTitleLabel:
messageLabel
setMessageLabel:
_message
_containerView
_titleLabel
_messageLabel
_addHeadingLabel
headingLabel
setTranslatesAutoresizingMaskIntoConstraints:
constraintEqualToAnchor:constant:
setHeaderText:
headerText
setHeadingLabel:
_headerText
_headingLabel
songsLibraryRequest
playbackIntentWithStartItemIdentifiers:
setShuffleMode:
setPlayActivityFeatureName:
setFallbackPlaybackIntent:
playbackStatusController
playbackStateforItem:inContainer:
playbackStateforItemWithIdentifiers:
isItemPlaying:container:
isItemPlayingWithIdentifiers:
setPlaybackStatusController:
_playbackStatusController
contentView
effectiveUserInterfaceLayoutDirection
badgeView
accessoryView
_updatePlaceholderImageIfNeeded
setAccessoryView:
_setAccessoryViewColor
_updateColors
_textLabelColor
_detailTextLabelColor
_updateColorsWithTextLabelColor:detailTextLabelColor:
detailTextLabel
_setAccessoryViewWithTextLabelColor:detailTextLabelColor:
_isFocusedInDarkMode
_focusedInDarkModeTextLabelColor
_defaultTextLabelColor
_defaultDetailTextLabelColor
listItemTextColor
isFocused
placeholderAssetType
setBadgeView:
setPlaceholderAssetType:
_accessoryImage
_badgeView
_placeholderAssetType
objectToAdd
_getSongsForPlaylist:
_getSongsForAlbum:
folderPlaylist
playlistsLibraryRequestWithParentPlaylistFolder:userEditableOnly:allowEmptyPlaylists:
_configureViewWithMPResponse:
spinner
convertPoint:fromView:
initWithObjectToAdd:
setFolderPlaylist:
_presentViewController:
_addToPlaylist:requestConfirmation:
_nameOfObjectToAdd
_addToPlaylist:
performWithoutEnforcement:
_addToPlaylist:objectToAdd:
_presentAddToPlaylistBehaviorDialogFromViewController:forSingleTrackAddition:withCompletionHandler:
collectionTracks
_addToPlaylist:objectToAdd:songsToAdd:
song
addSong:toPlaylist:completionHandler:
addAlbum:toPlaylist:songsToAdd:completionHandler:
addPlaylist:toPlaylist:itemsToAdd:completionHandler:
presentingViewController
showWithTitle:message:image:
trackCount
representativeSong
setCollectionTracks:
getItemsInPlaylist:completionHandler:
getSongsInAlbum:completionHandler:
setSpinner:
setHidePresentingView:
_addToNewPlaylistNamed:parentPlaylist:
setCompletionBlock:
layoutIfNeeded
_addActionWithTitle:style:handler:shouldDismissHandler:
stringByAppendingString:
didSelectPlaylist:
tvm_enumerateItemsUsingBlock:
setPlaylistName:
setParentPlaylist:
setShouldCreatePlaylist:
hasLoadedValueForKey:
copyWithIdentifiers:block:
newOperationWithLocalPersistenceResponseHandler:completeResponseHandler:
_isTopLevelMenu
mpRequest
setMpRequest:
setObjectToAdd:
_alertControllerIsConfigured
_spinner
_mpRequest
_folderPlaylist
_objectToAdd
_collectionTracks
title3Font
setTopAccessoryView:
setSubmitButton:
setBottomAccessoryView:
_doneButtonAction:
lightGrayColor
colorWithAlphaComponent:
hidePresentingView
completionBlock
textField
textEntryControllerDidFinish:
_textEntryVC
_hidePresentingView
_completionBlock
_setWantsRightToLeftHorizontalMirroringIfNeeded:
initWithFrame:collectionViewLayout:
setDataSource:
normalShuffleButton
_selectedShuffleButton
songsLibraryRequestForPlaylist:
layoutMargins
_addLabelWithFont:text:
calloutFont
_artworkPlaceholderImage
tracksTiledArtworkCatalogWithRows:columns:
_performRequest
didReceiveMemoryWarning
contentInset
convertPoint:toView:
reverseObjectEnumerator
allObjects
_playFocusedSong
_startMusicPlaybackAtIndexPath:shuffle:
mpResponse
globalIndexForIndexPath:
contextMenuForLibraryPlaylistEntry:inPlaylist:atPosition:completionHandler:
totalItemCount
_songAtIndexPath:
hasVideo
duration
isExplicitSong
setDuration:
setHasOrdinal:
setPlayItem:inContainer:
storeAsset
isRedownloadable
playSongsInContainer:startIdentifiers:shuffle:
genericObjectWithModelObject:
playSongsInContainer:startModelObject:dontReloadForSameSong:
_processResponse:error:
popViewControllerAnimated:
_modelResponseDidInvalidate:
_updateInfoLabel
removeObserver:name:object:
collectionView:numberOfItemsInSection:
numberOfSectionsInCollectionView:
collectionView:viewForSupplementaryElementOfKind:atIndexPath:
collectionView:canMoveItemAtIndexPath:
collectionView:moveItemAtIndexPath:toIndexPath:
indexTitlesForCollectionView:
collectionView:indexPathForIndexTitle:atIndex:
initWithPlaylist:
setPlaylist:
setMpResponse:
_playlistTitleLabel
_infoLabel
_collectionView
_shuffleButton
_playlist
_mpResponse
imageViews
mutableCopy
lastObject
imageType
viewForElement:existingView:
removeLastObject
doubleValue
systemFontOfSize:
initWithStyle:
setBgColor:
setDiameter:
setFocusedSizeIncrease:
setFirstName:
setLastName:
setImageViews:
style
interitemSpacing
setMinimumInteritemSpacing:
setOpaque:
makeObjectsPerformSelector:
insertSubview:atIndex:
_didLoadImageForImageView:
_checkReadyToDisplay
minimumInteritemSpacing
removeObject:
socialBadgeFromElement:existingView:
_unloadedImageViews
_imageViews
_minimumInteritemSpacing
enumerateSectionsUsingBlock:
enumerateItemsInSectionAtIndex:usingBlock:
enumerateItemsUsingBlock:
tvm_enumerateSectionsUsingBlock:
tvm_enumerateItemsInSectionAtIndex:usingBlock:
setPriority:
constraintWithPriority:
setInsetsLayoutMarginsFromSafeArea:
setContentCompressionResistancePriority:forAxis:
setAlignment:
setAxis:
setDistribution:
setSpacing:
leadingAnchor
layoutMarginsGuide
firstBaselineAnchor
trailingAnchor
constraintGreaterThanOrEqualToAnchor:constant:
activateConstraints:
previouslyFocusedView
shouldUpdateFocusInContext:
rightStackView
subviews
addArrangedSubview:
leadingFocusGuide
firstObject
trailingFocusGuide
stackFocusGuide
topFocusGuide
setRightViews:
rightViews
setRightStackView:
setTopFocusGuide:
setLeadingFocusGuide:
setTrailingFocusGuide:
setStackFocusGuide:
_subtitleLabel
_rightViews
_rightStackView
_topFocusGuide
_leadingFocusGuide
_trailingFocusGuide
_stackFocusGuide
widePlayButton
wideShuffleButton
wideGoToArtistButton
allSeasonsButton
playbackPosition
shouldRememberBookmarkTime
initWithSong:mediaItemMetadata:
propertySetForSongsWithDetails:
initWithProperties:relationships:
initWithRequestedPropertySet:
modelObjectWithStorePlatformDictionary:
mediaItemMetadata
isUnknownItemType
initWithMPObject:
numberWithDouble:
unknownItemDescription
shouldReportPlayEvents
numberWithLong:
trackNumber
genre
initWithIdentifiers:block:
radioStationHash
storeCloudID
numberWithUnsignedLongLong:
bookmark
bookmarkTime
hasCommonIdentifierWithIdentifierSet:
isEqualToMediaItem:
hasTrait:
setMediaItemMetadata:forProperty:
removeMediaItemMetadataForProperty:
performMediaItemMetadataTransactionWithBlock:
_playedThresholdTimeForDuration:
setBookmarkTime:
date
setBookmarkTimestamp:
setHasBeenPlayed:
updateBookmark:
initWithStorePlatformDictionary:
mediaItemURL
reportingDelegate
updateBookmarkWithSuggestedTime:forElapsedTime:duration:playbackOfMediaItemIsEnding:
setUnknownItemType:
setUnknownItemDescription:
setMediaItemMetadata:
mediaItem
setMediaItem:
setBookmark:
_unknownItemType
_unknownItemDescription
_mediaItemMetadata
_mediaItem
_bookmark
_setManualLayoutFrame:
containerGuide
_containerGuide
setup
registerClass:forElementName:elementType:dependent:
setExtendedInterfaceCreator:
playlistViewFromElement:existingView:
playlistImgWithElement:existingView:
URLForResource:withExtension:
initWithBase64EncodedString:options:
JSONObjectWithData:options:error:
element
isDataPrivateForElement:
tv_imageProxy
blurDecoratorForDataIsPrivate
cornerRadiiFromElement:cornerRadii:circle:
setCornerRadii:
setDecorator:
viewControllerForElement:existingViewController:
URLForResource:
imageForResource:
collectionViewCellClassForElement:
_imageProxyForElement:
_styleSheetURLForTemplate:
_musicCloudViewController
tvs_dictionaryForKey:
tvs_stringForKey:
setCountLimit:
objectForKey:
bundleWithIdentifier:
imageNamed:inBundle:
setObject:forKey:
compilationsLibraryRequest
setShowIndexBarTitles:
_addPlayButton
_addShuffleButton
initWithCompilations:
albumsLibraryRequestForArtist:
_handlePlayPause:
playButton
tvs_addObjectIfNotNil:
shuffleAllButton
initWithAlbum:
_showViewControllerWithZoomAnimation:
_genericObjectForitemAtIndexPath:
didSelectObject:
playing
didPlayObject:
cellSpacing
cellSize
configureCell:forObject:
setImageShape:
setSubTitle:
setArtworkCatalog:withFittingSize:
composer
songsLibraryRequestForAlbum:
libraryRequest
itemKind
setSectionKind:
itemSortDescriptors
setSectionSortDescriptors:
playWithPlaybackIntent:
setPlayButton:
_selectedPlay
playShuffled:
setShuffleAllButton:
_selectedShuffle
setAlbum:
collectionView:layout:sizeForItemAtIndexPath:
collectionView:layout:insetForSectionAtIndex:
collectionView:layout:minimumLineSpacingForSectionAtIndex:
collectionView:layout:minimumInteritemSpacingForSectionAtIndex:
collectionView:layout:referenceSizeForHeaderInSection:
collectionView:layout:referenceSizeForFooterInSection:
initWithGenre:
initWithArtist:
initWithComposer:showTitle:
additionalHeaderControls
setGenre:
setComposer:
_artist
_genre
_composer
_playButton
_shuffleAllButton
musicVideosLibraryRequest
indexPathForItem:inSection:
_playFromItemAtIndexPath:
sharedTracker
currentPAFFeatureName
playWithPlaybackIntent:initialPlaybackType:
_selectedPlayButton
setMaximumImageHeight:
initWithMediaItems:index:isCollection:
initWithDelegate:
propertySetWithProperties:
setQueueItemProperties:
setPlayingItemProperties:
setTracklistRange:
setDisablePlaybackStateValidation:
setQueueSectionProperties:
_createGlobalPlayerPathWithRoute:
setPlayerPath:
setRequest:
startUpdating
getActiveRouteWithCompletion:
_applicationDidBecomeActive:
_repeatModeSettingDidChange:
_activeSystemRouteDidChange:
mediaItems
responseTrackList
playingItemIndexPath
mediaItemIndexes
unsignedIntegerValue
activeListIndex
activeList
metadataObject
audioRoute
routeName
userDeviceName
requestResponseController
request
playerPath
route
_updatePlayerPathWithRoute:
canMoveItemAtIndexToPlayNext:
reorderCommand
items
indexPathForGlobalIndex:
canMoveItem:
moveItem:afterItem:
_performPlayerCommandRequest:name:
isUpdating
beginAutomaticResponseLoading
setIsUpdating:
endAutomaticResponseLoading
playerResponse
tracklist
playerState
currentPlayingItem
seekCommand
endSeek
_performPlayerCommand:name:
beginSeekWithDirection:
changeItemCommand
nextItem
previousItem
changeToItem:
performRequest:completion:
changePositionToElapsedInterval:
setPendingElapsedTimeChange:
setPendingElapsedTime:
isPendingElapsedTimeChange
pendingElapsedTime
durationSnapshot
timeIntervalSinceReferenceDate
shuffleCommand
setShuffleType:
performRequest:options:completion:
willChangeValueForKey:
didChangeValueForKey:
standardUserDefaults
setMusicRepeatType:
_setRepeatType:
repeatType
repeatCommand
setRepeatType:
systemMusicPathWithRoute:playerID:
resetCommand
replaceWithPlaybackIntent:
tracklistToken
radioStationPlaybackMetadata
stationName
setRadioStationName:
performWithCompletion:
clear
isLocalDeviceQueue
_isUserSubscribed
insertCommand
insertAfterPlayingItemWithPlaybackIntent:
insertAtEndOfTracklistWithPlaybackIntent:
isDeviceRoute
isSystemMusicPath
_updatePlayQueue
isInvalidRouteError
systemRoute
setActiveRoute:completion:
setNeedsReloadForSignificantRequestChange
pathWithRoute:bundleID:playerID:
dictionaryWithCapacity:
_mediaItemForMPCPlayerResponseItem:section:atIndexPath:
setMediaItems:
setMediaItemIndexes:
dictionary
isRadioPlayback
radioStationName
_playEventFromGenericObject:
radioStation
setRadioStation:
_repeatModeFromRepeatType:
response
section
sectionAtIndex:
tracklistRange
_tracklistRangeForRadioPlayback:
contentItemIdentifier
currentPlayingElapsedTime
videoView
setLastPlayingItem:
setPlayerResponse:
_updateMediaItemsWithTrackList:
setDurationSnapshot:
setIsVideoPlayback:
setSupportsShuffle:
setSupportsRepeat:
_tracklistRepeatMode
_setRepeatMode:
shuffleType
_setShuffleEnabled:
representedBundleDisplayName
_isTracklist:equalToTrackList:
playQueue:didUpdateQueue:
playQueue:didChangePlayingItem:
playQueue:didChangeFromPlayState:toPlayState:
playQueue:didChangeElapsedTime:forItem:atIndex:
playQueue:didChangeVideoView:
playQueue:didChangeDurationSnapshot:
updatePlayerPath
musicRepeatType
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
airplayDetectorAirplayStarted:
airplayDetectorAirplayEnded:
trackList
isMediaItem:matchingResponseItem:
audioRouteName
setAudioRoute:
moveItemAtIndexToPlayNext:
stopUpdating
fastForward
rewind
changeToNextItem
changeToPreviousItem
changeToItemAtIndex:
setElapsedTime:
currentPlayingDuration
lastPlayerResponse
setShuffleEnabled:preserveCurrentItem:
shuffleEnabled
setRepeatMode:
repeatMode
replacePlayQueueWithPlaybackIntent:completionHandler:
clearPlayQueueWithCompletionHandler:
canAddToPlayQueueNextWithPlaybackIntent:
canAddToPlayQueueAtEndWithPlaybackIntent:
addToPlayQueueWithPlaybackIntent:playNext:
isMusicAppQueue
_performInternalPlayerCommand:
supportsShuffle
supportsRepeat
lastPlayingItem
isVideoPlayback
externalEndpointsAvailable
setExternalEndpointsAvailable:
setRequestResponseController:
_isNewPlayQueue
_supportsShuffle
_supportsRepeat
_repeatMode
_shuffleEnabled
_invalidationQueue
_invalidationTimer
_airplayDetector
_isAirplayActive
_isRadioPlayback
_isVideoPlayback
_isUpdating
_externalEndpointsAvailable
_pendingElapsedTimeChange
_delegate
_lastPlayingItem
_radioStationName
_pendingElapsedTime
_requestResponseController
_playerResponse
_mediaItems
_mediaItemIndexes
_durationSnapshot
domain
registerForUser:
addListener:forTopic:
addPushNotificationType:withParameters:
removePushNotificationType:
removeListener:forTopic:
unsignedIntValue
_handleJaliscoPushNotification:
_handleSagaPushNotification:
pushNotificationServer:didReceiveMessageForTopic:userInfo:
pushNotificationServerTokenDidChange:
sharedDeviceLibraryController
appendSection:
_modelObjectForAdamID:
appendItem:
registerTransientAddState:forModelObjects:relatedModelObjects:
_libraryAddRemoveQueue
persistentID
tvs_arrayByMappingObjectsUsingBlock:
unregisterTransientState:
addItemWithProductID:completionHandler:
setModelObject:
performDeleteEntityChangeRequest:withRelatedModelObjects:completion:
transientAddStateForModelObject:
addGlobalPlaylistWithID:andAddToCloudLibrary:completion:
setStoreCloudID:
setAllowedItemIdentifiers:
itemWithPersistentID:verifyExistence:
deleteItems:
HSCloudClient
removeItemsWithSagaIDs:completionHandler:
setItemKind:
setItemProperties:
firstItem
findMPObjectWithIdentifiers:itemKind:itemProperties:completionHandler:
findMPSongWithIdentifiers:itemProperties:completionHandler:
kindWithVariants:
setGlobalPlaylistID:
removeItemAtIndexPath:
setPlaylistEntries:
_addItemToPlaylist:objectToAdd:itemsToAdd:completionHandler:
kindWithKinds:
tvEpisode
movie
globalPlaylistID
_storeRequestForID:completionHandler:
setItemIdentifiers:
setPersonalizationStyle:
setKeyProfile:
initWithIdentity:
setRequestContext:
allItems
metadataDictionary
setRepresentativeModelObject:
setSongResults:
playlistChangeRequestQueue
addItemToLibraryWithAdamID:completionHandler:
removeMPObjectFromLibrary:
isItemPendingAddToLibraryForAdamID:
addGlobalPlaylistToLibraryWithID:completionHandler:
removeItemsFromLibraryWithSagaIDs:completionHandler:
findItemInLibraryWithPersistentID:itemKind:itemProperties:completionHandler:
findMPSongInLibraryWithSubscriptionAdamID:itemProperties:completionHandler:
findPlaylistWithCloudGlobalID:completionHandler:
removeSong:fromPlaylist:atPosition:completionHandler:
showWithType:
_dismissRemoteViewController
addObserver:forKeyPath:options:context:
_menuPressed:
removeObserver:forKeyPath:
setViewServiceActive:
setIsIdleScreen:
initWithRootViewController:
setNavigationBarHidden:
setAlpha:
wallpaperViewForVariant:
animateWithDuration:animations:completion:
animateWithDuration:delay:options:animations:completion:
avPlayer
_setAllowsVideoPlaybackWhileInBackground:
_remoteViewControllerProxy
dismissWithResult:
observeValueForKeyPath:ofObject:change:context:
viewServiceBeginPresentationWithOptions:
viewServiceEndPresentationWithOptions:completion:
_exportedInterface
viewServiceUpdatePresentationWithOptions:
viewServiceHandleMessage:reply:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
dismissCurrentRemoteViewController
_remoteViewControllerInterface
setNavigationController:
menuGestureRecognizer
setMenuGestureRecognizer:
nowPlayingWallPaper
setNowPlayingWallPaper:
_navigationController
_menuGestureRecognizer
_nowPlayingWallPaper
tvm_seasonTitle
_fetchPhotoAssetsForAlbumArtwork:
setRemotePhotoServerInterface:
remotePhotoServerInterface
didFinishFetchingPhotoAssets
artworkCatalogBackingFileURL
setFullResolutionURL:
requestImageWithCompletionHandler:
photoAssetsWithOptions:remotePhotoServer:responseBlock:
syncObserverToken
setSyncObserverToken:
_remotePhotoServerInterface
_syncObserverToken
bezierPathWithRoundedRect:cornerRadius:
CGPath
objectAtIndex:
null
imageWithSize:alpha:cgContextActions:
CGImage
imageWithCGImageRef:preserveAlpha:
identifier
isCancelled
_processFirstRequest:
setCancelled:
_executeRequest:
scaleToSize
upscaleAdjustment
_playlistImageWithImages:size:upscaleAdjustment:cornerRadius:
completionHandler
loadImagesWithCompletionHandler:
imageKeyForObject:
cancelLoad:
URLForObject:
loadImageForObject:scaleToSize:cropToFit:completionHandler:
loadImageForObject:scaleToSize:cropToFit:imageDirection:completionHandler:
loadImageForObject:scaleToSize:cropToFit:imageDirection:requestLoader:completionHandler:
_pendingQueue
_serialProcessingQueue
_maxConcurrentCount
absoluteString
numberWithUnsignedLong:
appendFormat:
initWithCapacity:
removeObjectForKey:
removeAllObjects
initWithImageProxies:playlistStyle:
imageProxies
playlistStyle
setScaleToSize:
setUpscaleAdjustment:
_requestIdentifier
_images
_pendingProxies
_cancelled
_imageProxies
_playlistStyle
_upscaleAdjustment
_cornerRadius
_completionHandler
_scaleToSize
setValueTransformer:forName:
setAllowedUnits:
setZeroFormattingBehavior:
appendString:
setSecond:
secondsFormatter
stringFromDateComponents:
minutesFormatter
stringFromTimeInterval:
transformedValueClass
allowsReverseTransformation
transformedValue:
setMinutesFormatter:
setSecondsFormatter:
_minutesFormatter
_secondsFormatter
initWithItems:
setSelectedSegmentIndex:
_handleTVMoviesSelector
TVSeasonsLibraryRequestForShow:
TVEpisodesLibraryRequestForShow:season:
tvMoviesSelector
centerXAnchor
centerYAnchor
creator
durationFormatter
stringByReplacingOccurrencesOfString:withString:
setUnitsStyle:
selectedSegmentIndex
TVShowsLibraryRequest
moviesLibraryRequest
updateCollectionViewLayout
setLibraryRequest:completionHandler:
setTvMoviesSelector:
_selectedSegment
_isShowingMovies
_durationFormatter
_tvMoviesSelector
_nowPlayingViewWillAppear:
_nowPlayingViewWillDisappear:
_nowPlayingViewWillLoad:
_musicViewWillAppear:
_musicViewWillDisappear:
_playbackQueueDidChange:
_currentMediaItemDidChange:
_playbackStateDidChange:
_playerPathChanged:
playQueue
_songResponseDidInvalidate:
_songWillAddToLibrary:
_appDidBecomeActive:
_audioRouteDidChange:
_playbackStatusChanged:
setEndpointRoute:
setPlaybackDelegate:
isBeingDismissed
isMovingFromParentViewController
musicNowPlayingViewController
setMusicNowPlayingViewController:
setShowsInlineVideo:
setShowAnimatedBackground:
_updateAudioRoute
setInitialViewMode:
reloadPlaylist
_showPlaybackControllerWithPlayer:initialPlaybackType:
topViewController
_removePlaybackControllers
contextMenuForMediaItem:completionHandler:
_controlsForMediaItem:showAddButton:hasLyrics:contextMenuButtonIndex:
songsAndMusicVideosLibraryRequestForContextMenu
isHomePodRoute
isStereoPair
isAppleTVRoute
isEqualToNumber:
reloadCurrentControls
playingItem
setAllowsVideoPlaybackWithoutVisuals:
setAudioRouteName:
setCircular:
_addToLibraryAction:
_showLyricsAction:
applicationState
_removePlaybackControllersWithCompletion:
viewControllers
childViewControllers
setViewControllers:
playbackViewController:loadRelatedContentForMediaItem:withCompletionHandler:
playMediaItemAtIndex:
playbackViewControllerProvidesCustomControls:
playbackViewController:controlsForMediaItem:completionHandler:
playbackViewController:didSelectHistoryMediaItem:player:
playbackViewControllerUserWillInitiatePlayback:
currentEndpointDeviceTypeForPlaybackViewController:
showPlaybackControllerWithPlayer:initialPlaybackType:
_mediaItemForNowPlayingControls
_songForNowPlayingControls
_playEventForNowPlayingControls
_responseForNowPlayingControls
_addToLibraryButton
_lyricsButton
_contextMenuButton
_showNowPlayingWhenReadyToPlay
_pendingPlaybackType
_musicNowPlayingViewController
initFromURLBag
valueForKey:error:
ageGateInfoFromURLBag
initWithRatingThreshold:dialogTitle:dialogMessage:
isAgeGateEnabled
setIsAgeGateEnabled:
ratingThreshold
setRatingThreshold:
dialogTitle
setDialogTitle:
dialogMessage
setDialogMessage:
_isAgeGateEnabled
_ratingThreshold
_dialogTitle
_dialogMessage
initWithAgeGateInfo:
ageGateInfo
storePurchasedAdamID
arrayForKey:
explicitRating
_updateSavedIdentifiers:withIdentifier:
_showAgeGateDialogWithCompletion:
removeObjectAtIndex:
setValue:forKey:
standardAgeGateController
customAgeGateControllerWithRatingThreshold:dialogTitle:dialogMessage:
showAgeGateDialogIfNeededForLibraryItem:completion:
showAgeGateDialogIfNeededForRatingLevel:completion:
setAgeGateInfo:
_ageGateInfo
setView:
effectWithStyle:
effectForBlurEffect:
initWithEffect:
defaultSizeForStyle:
loadView
setActivityText:
activityText
isActivityIndicatorHidden
setActivityIndicatorHidden:
activityIndicatorDelay
setActivityIndicatorDelay:
_activityTextLabel
_showingSpinner
_spinnerTimer
_visualEffectView
_activityIndicatorHidden
_activityText
_activityIndicatorDelay
sharedBagLoadingController
bagDictionary
setSectionInset:
mapTableWithKeyOptions:valueOptions:
songsLibraryRequestForAlbumDetails
frameLayoutGuide
_updateAlbumInfo
setValue:forRequestParameter:
valueForProperty:
childStoreItemMetadatas
storeID
popularity
setSongPopularity:forAdamID:
setAlbumAppData:
startWithLookupBlock:
trackDisplayMode
classicalWork
grouping
removeAllIndexes
_checkAlbumAttributesForTracks
_songResults
groupByClassicalWorks
_tracksIncludingClassicalWorks
addObjectsFromArray:
setTracks:
collectionViewLayout
item
containsIndex:
_isItemSingleMovementWork:
contextMenuForMPSong:container:completionHandler:
tracks
firstSection
songPopularityForIdentifiers:
_classicalWorkNameForSong:
shouldShowComposer
classicalMovement
classicalMovementNumber
_romanNumeralForNumber:
rangeOfString:options:range:
substringFromIndex:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
characterAtIndex:
popularityThreshold
setPopularityThreshold:
numberWithInt:
setShowArtistNames:
setTrackDisplayMode:
indexSet
_setItemIsSingleMovementWork:
addIndex:
deleteConfirmationDialogWithTitle:completionHandler:
canPlayItemType:withPersistentID:playbackAction:
playSongsInContainer:playbackAction:
canPlayFromMPAlbum:
playFromMPAlbum:
year
releaseDateComponents
calendarWithIdentifier:
dateFromComponents:
localizedStringFromDate:dateStyle:timeStyle:
isValid
_updateTracks
_trackDisplayModeString
showArtistNames
indexesOfClassicalWorks
setIndexesOfClassicalWorks:
_albumTitleLabel
_artistNameLabel
_artworkContainerView
_hasMultipleArtists
_trackCount
_classicalWorkMap
_songPlayCount
_showArtistNames
_album
_tracks
_indexesOfClassicalWorks
_trackDisplayMode
_popularityThreshold
_scrollingParadeViewReadyNotification:
_crossfadeViewReadyNotification:
_fadeToBlack
imageFrame
transitionDuration
setCrossfadeDuration:
_dissolveToPendingView
_viewTypeForNumberOfImages:
_displayPlaceholderView
cycleInterval
setCrossfadePeriod:
setPaused:
isPaused
newDataTransitionDuration
transitionWithView:duration:options:animations:completion:
animateWithDuration:animations:
initWithImage:
_paradeThreshold
resume
deckViewParadeType
setDeckViewParadeType:
setCycleInterval:
setTransitionDuration:
setNewDataTransitionDuration:
_pendingDisplayView
_pendingViewType
_displayView
_viewType
_placeholderImageView
_imageLoadTimeout
_deckViewParadeType
_cycleInterval
_transitionDuration
_newDataTransitionDuration
_imageFrame
initWithOverlayImage:
settingsForPrivateStyle:
setBlurRadius:
uiImage
_applyBackdropViewSettings:
drawInRect:
setFill
overlayImage
initWithCGImageRef:preserveAlpha:
decorate:scaledWithSize:croppedToFit:
decoratorIdentifier
_overlayImage
_clearCachedValues
setAdjustsFontSizeToFitWidth:
setBaselineAdjustment:
isUserInteractionEnabled
previousBounds
previousNumberOfLines
cachedTextRectForBounds
textRectForBounds:limitedToNumberOfLines:
setCachedTextRectForBounds:
setPreviousBounds:
setPreviousNumberOfLines:
previousTargetSize
cachedSizeThatFits
setCachedSizeThatFits:
setPreviousTargetSize:
_previousNumberOfLines
_cachedSizeThatFits
_previousTargetSize
_cachedTextRectForBounds
_previousBounds
setContentMotionRotation:translation:
setRoundContentWhenDeselected:
configurationWithStyle:
setFocusAnimationConfiguration:
_ordinalWidth
_createLabelAtPosition:width:
caption1Font
_setContinuousCornerRadius:
_setColorsForCurrentUserInterfaceStyle
setClipsSubviews:
floatingView
focusable
prepareForReuse
setHeading:
setMusicBarsVisible:
setPlayIconVisible:
clearArtworkCatalogs
cellHeight
initWithScaleToSize:scaleMode:
_updateVideoBadge
setOrdinalVisible:
setControlState:
_shouldShowPlayIcon
hasOrdinal
fullWidthStyle
isHidden
_hasThumbnail
_hasVideoBadge
_layoutLabel:
_updatePlayingState
arrayByAddingObject:
_popularityImageForPopularity:
compare:
valueTransformerForName:
_preferredConfigurationForFocusAnimation:inContext:
_triggeringPhysicalButton
_floatingViewControlState
setControlState:animated:
pressesCancelled:withEvent:
pressesEnded:withEvent:
setMusicBarsStyle:
playIconVisible
musicBarsVisible
songIdentifier
playbackItem
playbackContainer
thumbnail
thumbnailImage
songType
setFullWidthStyle:
durationString
isExplicit
ordinalValue
showPlayIconWhenFocused
enabled
isWatched
setFloatingView:
ordinalVisible
setPlaybackItem:
setPlaybackContainer:
_artistLabel
_albumLabel
_durationLabel
_ordinalLabel
_thumbnailView
_explicitBadgeView
_popularityIndicatorView
_videoBadgeView
_labels
_musicBarsView
_isObservingPlayer
_playIconView
_popularityOnImage
_watchedCheckmarkImageView
_titleColor
_isExplicit
_hasOrdinal
_fullWidthStyle
_showPlayIconWhenFocused
_enabled
_focusable
_isWatched
_ordinalVisible
_playIconVisible
_musicBarsVisible
_songType
_title
_heading
_duration
_durationString
_ordinalValue
_popularity
_songIdentifier
_floatingView
_playbackItem
_playbackContainer
initWithParentPlaylistFolder:
isSubscribed
queryItemWithName:value:
cloudVersionHash
parentPlaylistFolder
setParentPlaylistFolder:
_parentPlaylistFolder
setWriteToAssetLibrary:
imageLoader
contextMenuForLibraryItemWithPersistentID:itemType:container:completionHandler:
songsLibraryRequestForContextMenu
artistsLibraryRequest
itemProperties
_contextMenuForMPObject:container:completionHandler:
_libraryContextMenuForMPSong:container:playlistIndex:
_libraryContextMenuForMPAlbum:
_libraryContextMenuForMPArtist:
_libraryContextMenuForMPPlaylist:
_libraryContextMenuForMPMovie:
_libraryContextMenuForMPTVEpisode:
_libraryContextMenuForMPTVSeason:
_libraryContextMenuForMPTVShow:completionHandler:
_catalogContextMenuForSubject:
_adamIdFromMediaItem:
initWithTitle:mediaType:identifier:
setArtistOrCuratorName:
setStoreID:
setArtistStoreID:
setArtworkImageProxy:
setArtworkURL:
setIsInLibrary:
setSongHasStoreLyrics:
setLibrarySongLyrics:
songsLibraryRequestForContextMenuWithPlaylist:
_getPlayEventForContainer:identifiers:
setPlayEvent:
_deleteConfirmationDialogWithTitle:CompletionHandler:
_menuItemForLibraryGoToAlbumWithSong:
_menuItemForLibraryGoToArtistWithSong:
_menuItemForRemoveMPItemFromLibraryWithPersistentID:title:itemKind:
_addToLibraryMenuWithAdamID:
_menuItemForLibraryRemoveSong:fromPlaylist:atPosition:
_menuItemForLibraryAddToPlaylist:
_menuItemForLibraryPlaybackType:persistentID:playbackAction:
_menuItemForCreateStationFromSong:
_menuItemForLibraryLyricsWithSong:container:
_menuItemForLibraryLoveWithMPObject:
_menuItemForLibraryHateWithMPObject:
_menuTitleForMPSong:
initWithHeading:menuItems:
_kindForGenericObjectType:
_menuItemForLibraryGoToArtistWithAlbum:
_menuItemForCreateStationFromAlbum:
_menuItemForCreateStationFromArtist:
_menuItemForGoToMovieWithStoreID:
_menuItemForGoToTVShowWithEpisodeStoreID:
indexPathForRow:inSection:
_performWithAppInForeground:
_pushViewController:
_findAlbumWithPersistentID:completionHandler:
initWithTitle:actionBlock:
setMenuItemType:
albumsViewControllerForArtist:
_showLibraryArtistForAlbum:
mediaType
_menuItemForCatalogSongGoToAlbum:
_menuItemForCatalogSongGoToArtist:
isInLibrary
_addOrRemoveLibraryMenuWithAdamID:mediaType:isInLibrary:
_menuItemForCatalogAddToPlaylist:
_menuItemForCatalogShuffle
_menuItemForPlayNext:actionBlock:
_menuItemForAddToUpNext:actionBlock:
_MPModelSongWithAdamID:title:
_menuItemForCatalogSongLyrics:
_menuItemForCatalogMusicVideoLove:
_menuItemForCatalogMusicVideoHate:
_menuItemForCatalogSongLove:
_menuItemForCatalogSongHate:
_menuItemForAddOrRemoveAlbum:
_MPModelAlbumWithContextMenuSubject:
_menuItemForCatalogAlbumLove:
_menuItemForCatalogAlbumHate:
artistOrCuratorName
_MPModelArtistWithAdamID:name:
playlistIsSubscribed
_menuItemForCatalogPlaylistSubscribe:
_menuItemForCatalogPlaylistUnsubscribe:
_menuItemForCatalogPlaylistLove:
_menuItemForCatalogPlaylistHate:
_menuItemForGoToTVShow:
_menuTitleForContextMenuSubject:
_removeFromLibraryMenuWithAdamID:mediaType:
sharedController
tasteTypeForModel:
setTasteType:forModel:withCompletionHandler:
setHasCheckmark:
canPlayItemWithStoreID:playbackAction:
initWithIdentifier:actionBlock:
playItemType:withPersistentID:playbackAction:
featureName
recommendationData
playEvent
_menuItemForRemoveAlbumFromLibrary:
_menuItemForAddAlbumToLibrary:
_genericObjectTypeForMediaType:
_removeItemFromLibraryWithStoreID:itemKind:
canPlayFromMPSong:
playFromMPSong:
canPlayFromMPArtist:
playFromMPArtist:
_catalogSongGoToAlbumActon:
artistStoreID
_catalogSongGoToArtistAction:
setLibraryAdded:
isCompilationAlbum
setCompilation:
_tasteTypeForAdamID:
_setTasteType:forSongID:
_setTasteType:forMusicVideoID:
songHasStoreLyrics
_showLyricsForContextMenuSubject:
_setTasteType:forAlbumID:
_removeLibraryItemItemMatchingIdentifiers:itemKind:
_tasteTypeForPlaylistGlobalID:
_setTasteType:forPlaylistGlobalID:
kindWithSongKind:
kindWithEpisodeKind:
kindWithAlbumKind:
kindWithSeasonKind:
kindWithPlaylistEntryKind:options:
tasteTypeForStoreAdamID:
tasteTypeForPlaylistGlobalID:
setTasteType:forStoreAdamID:withContentType:completionHandler:
setTasteType:forPlaylistGlobalID:withCompletionHandler:
deviceMediaLibrary
setTasteType:forMediaEntity:withCompletionHandler:
_findLibraryItemMatchingIdentifiers:itemKind:completionHandler:
_checkLibraryForTrackWithAdamID:resultBlock:
_addTrackWithAdamIDToLibrary:completionBlock:
contextMenuForCatalogItem:
_libraryContextMenuForMPSong:
_radioContextMenuForSubject:
_menuItemForGoToMovie:
_setTasteType:forItemPersistentID:
setBackgroundColor:forState:
_setShadows
_addSubheadLabelWithFont:textColor:
setAllowsGroupBlending:
imageView
placeholderImageView
setArtworkCatalog:
hasImageOnDisk
setShowImage:
_adjustToArtworkSize:
_setSizeForLabel:
setShadowOpacity:forUserInterfaceStyle:
setShadowExpansion:
setShadowPath:
_setLabelTextColors
_setLabelPositionsChangeY:
setHighlighted:
controlState
isHighlighted
setControlState:withAnimationCoordinator:
_updateShadowForLabel:inFocus:
maximumImageHeight
imageShape
focusedSizeIncrease
_setLabelTextColorsForUserInterfaceStyle:
setShadowColor:
setShadowBlur:
subTitle
setImageView:
setPlaceholderImageView:
showImage
_subTitleLabel
_showImage
_imageShape
_subTitle
_maximumImageHeight
_artworkCatalog
composersLibraryRequest
setPreviewOnRightSide:
setTableViewPadding:
registerClass:forCellReuseIdentifier:
albumsViewControllerForComposer:
_previewViewControllerForIndexPath:
initializeLoggingWithDomain:persistentComponents:
setContentInsetAdjustmentBehavior:
_updateOverlayLayoutGuide
adjustedContentInsetDidChange
contentOffset
adjustedContentInset
contentSize
overlayLayoutView
indexPathsForVisibleItems
_notifyDidScroll
_delegateFlags
_overlayLayoutView
setMediaLibrary:
kindWithVariants:songKind:
kindWithVariants:playlistEntryKind:options:
kindWithRelationshipKinds:
sortDescriptorWithRelatedProperties:ascending:
setItemSortDescriptors:
setSectionProperties:
_propertySetForTVEpisode
sortDescriptorWithKey:ascending:
propertySetForAlbumDetails
_propertySetForSongsInContextMenu
_songsLibraryRequestForContextMenuWithPlaylist:songProperties:
_albumsLibraryRequestWithVariants:
recentlyAddedlibraryRequest
TVShowsAndMoviesLibraryRequest
TVEpisodeLibraryRequestWithAdamID:
playlistsLibraryRequestWithParentPlaylistFolder:
initWithPlayerID:
setVideoSupported:
addEngineObserver:
start
_itemReadyToPlay:
_itemAssetLoaded:
_itemChanged:
_itemPlaybackEnded:
removeObserver:forKeyPath:context:
removeEngineObserver:
playbackEngine
fallbackPlaybackIntent
elapsedTimeObservers
setIsStopped:
waitsAfterPreparingMediaItems
currentAVItem
isAssetLoaded
_setCurrentState:
_setCurrentMediaItem:
_TVPPlaybackStateFromMCPPlayerState:
currentMediaItemInitialLoadingComplete
setCurrentMediaItemInitialLoadingComplete:
isStopped
elapsedTime
identifiersForLastEndedPlaybackItem
setElapsedTimeJumpInProgress:
setTargetElapsedTime:
reportUserSeekFromTime:toTime:
changeMediaInDirection:
initWithStartTime:endTime:
timedMetadataIfAvailable
_setAVPlayerFromVideoView:
playerLayer
setAvPlayer:
_updateAVPlayerFromAVItem:
playerItem
setAVKitMediaType:
currentItem
_populatePlayerItem:withMetadataFromMediaItem:
forwardmostCMTimeRangeInCMTimeRanges:
initWithCMTimeRange:
setBufferedTimeRange:
setIsLive:
isLoading
setIsLoading:
loading
initWithStartTime:duration:
_updateElapsedTimeObserversWithDurationSnapshot:
dateWithTimeIntervalSinceReferenceDate:
elapsedTimeJumpInProgress
targetElapsedTime
itemError
_sendNotificationForError:avItem:
setItemError:
modelGenericObject
flattenedGenericObject
setCurrentAVItem:
modelPlayEvent
identifiersForLastPlayedContainer
setIdentifiersForLastPlayedContainer:
setIdentifiersForLastEndedPlaybackItem:
scanning
_getStringForTitleLabel:subtitleLabel:forMediaItem:
setIdentifier:
setExtendedLanguageTag:
setValue:
setExternalMetadata:
setAirPlayedContent:
engineDidPauseForLeaseEnd:
engine:prepareForActivationWithCompletion:
engine:didFailToActivateWithError:resolution:
engine:didFailToPlayFirstItem:withError:
engine:didFailToPlayItem:withError:
engine:requiresAuthorizationToPlayItem:authorizationHandler:
engine:didChangeToState:
engine:willChangeToItem:fromItem:
engine:didChangeToItem:
engine:willResetQueueWithPlaybackContext:
engine:didResetQueueWithPlaybackContext:error:
engine:didChangeQueueWithReason:
engine:didChangeShuffleType:
engine:didChangeRepeatType:
engineWillBeginStateRestoration:
engineDidEndStateRestoration:
initWithName:
invalidate
changeMediaInDirection:reason:
continueLoadingCurrentItem
playIgnoringDelegate:
pauseIgnoringDelegate:
pauseWithVolumeRampDuration:
scanWithRate:
stopWithVolumeRampDuration:
setElapsedTime:precise:
setElapsedTime:seekPrecision:
setElapsedTime:seekPrecision:ignoreDelegate:
addElapsedTimeObserver:
removeElapsedTimeObserverWithToken:
addBoundaryTimeObserverForTimes:withHandler:
addBoundaryTimeObserverForDates:withHandler:
removeBoundaryTimeObserverWithToken:
skipToNextChapterInDirection:
setSelectedSubtitleOption:setGlobalPreference:
updateSubtitleOptions
currentMediaItemSupportsScrubbingUsingPlayer
asyncDelegate
setAsyncDelegate:
setCurrentMediaItem:
currentMediaItemPreparedForLoading
currentMediaItemHasVideoContent
currentMediaItemIsStreaming
currentMediaItemPresentationSize
currentMediaItemHasDates
errorBehavior
setErrorBehavior:
interactive
setInteractive:
rate
rateUsedForPlayback
setRateUsedForPlayback:
setWaitsAfterPreparingMediaItems:
playbackDate
setPlaybackDate:
isLive
muted
setMuted:
volume
setVolume:
chapterCollections
currentChapterCollection
setCurrentChapterCollection:
currentChapter
currentInterstitial
bufferedTimeRange
seekableTimeRange
seekableDateRange
forwardPlaybackEndTime
reversePlaybackEndTime
mediaItemEndAction
setMediaItemEndAction:
audioOptions
selectedAudioOption
setSelectedAudioOption:
subtitleOptions
selectedSubtitleOption
setSelectedSubtitleOption:
maximumBitRate
setMaximumBitRate:
preventsSleepDuringVideoPlayback
setPreventsSleepDuringVideoPlayback:
updatesMediaRemoteInfoAutomatically
setUpdatesMediaRemoteInfoAutomatically:
limitReadAhead
setLimitReadAhead:
changeToMediaAtIndex:reason:
addWeakReferenceToVideoView:
removeWeakReferenceToVideoView:
setElapsedTime:orPlaybackDate:withAVKitCompletion:
engine:didFailToPlayFirstItem:
engine:willResetQueueWithPlaybackIntent:
setPlayQueue:
setPlaybackEngine:
setElapsedTimeObservers:
_mediaItemObservationQueue
_waitsAfterPreparingMediaItems
_elapsedTimeJumpInProgress
_isStopped
_isLive
_isLoading
_playQueue
_playbackEngine
_name
_elapsedTimeObservers
_avPlayer
_targetElapsedTime
_bufferedTimeRange
_currentAVItem
_identifiersForLastPlayedContainer
_identifiersForLastEndedPlaybackItem
configureUIControls
titleForState:
caption2Font
_setBlurEnabled:
_onSelectSignIn:
setActionPromptMessage:
actionPromptMessage
sampleImage
alphaOnImage
signInLabel
setSignInLabel:
signInButton
setSignInButton:
_actionPromptMessage
_sampleImage
_alphaOnImage
_signInLabel
_signInButton
_createBarViews
_removeAnimations
_addAnimationsWithRepeatCount:
_setBarHeights:
_addAnimations
_updateMusicBarsStyle
filterWithType:
setCompositingFilter:
musicBarsStyle
setAnchorPoint:
removeAllAnimations
valueWithCGRect:
setKeyPath:
setValues:
setKeyTimes:
setSpeed:
setRepeatCount:
addAnimation:forKey:
stopAnimating
resumeAnimating
_barViews
_repeatCount
_musicBarsStyle
currentContext
setCurrentContext:
currentSubcontext
setCurrentSubcontext:
_currentContext
_currentSubcontext
initWithStyle:reuseIdentifier:
labelForMarquee
_updateImage
_imageViewWidth
_textLabelWidthWithXPosition:currentWidth:
_setImageTintColor:
rendersImageAsTemplates
setRendersImageAsTemplates:
allowsFocus
setAllowsFocus:
_imageTintColor
_setImageViewWidth:
_backingImage
_allowsFocus
__imageTintColor
__imageViewWidth
setPlayerRequestController:
setLabel:
emptyPropertySet
playerRequestController
tvm_identifiesSameItemAs:
playbackState
playingSection
setPlayingItem:
setPlayingSection:
setPlaybackState:
_playbackState
_playingSection
_playingItem
_playerRequestController
_selectedAllSeasons
_allSeasonsButton
setTableView:
_addBackdropView
_applicationWillEnterForeground:
_applicationDidFinishSuspension:
_setPreviewPaused:
_frameForHeaderView
_frameForTable
_frameForPreview
adjustedFrameForPreviewFrame:
setBounds:
_isAutoUpdatingPreviewViewController
_cancelDelayedAutoUpdateOfPreviewViewController
_focusVelocity
_delayedAutoUpdatePreviewViewController
_unregisterForBackdropViewHideStateUpdates
_registerForBackdropViewHideStateUpdates
_updateBackdropViewAfterSettingPreviewViewIfNessecary
shouldAnimatePreviewView
_updateBackdropViewBeforeSettingPreviewViewIfNessecary
_setPreviewView:forced:animated:completion:
setPreviewView:
_cancelAutoUpdatingPreviewViewController
fadeThroughPreviews
insertSubview:belowSubview:
sendSubviewToBack:
setPreviewViewController:forced:
_removeBackdropView
alpha
insertSubview:aboveSubview:
autoUpdatePreviewViewControllerBlock
_resetAutoUpdatePreviewViewControllerState
setBackdropViewHideStateNeedsUpdatingBlock:
backdropViewMode
shouldHideBackdropView
setBackdropViewHidden:animated:
_isBackdropViewVisible
tableViewWidth
setPreviewPaused:
defaultRowHeight
defaultSectionHeaderHeight
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
indexPathForPreferredFocusedViewInTableView:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
setHeaderView:
setAutoUpdatePreviewViewControllerBlock:
setBannerView:
previewViewController
tableViewPadding
previewViewPadding
setPreviewViewPadding:
previewOnRightSide
bannerView
previewView
setFadeThroughPreviews:
_backdropView
_tableContainingView
_previewContainerView
_lastAutoUpdatePreviewIndexPath
_lastAutoUpdatePreviewDelay
_pendingAutoUpdatePreviewIndexPath
_previewOnRightSide
_fadeThroughPreviews
_tableViewWidth
_backdropViewMode
_bannerView
_headerView
_previewView
_autoUpdatePreviewViewControllerBlock
_tableViewPadding
_previewViewPadding
isPreviewPaused
backdropViewHideStateNeedsUpdatingBlock
_fillQueue
_checkForPreloadCompletion
_loadPendingImages
_currentQueueSize
_artworkCatalogToLoadNext
pauseImageLoad
_artworkDidLoad:withImage:
_artworkDidFail:
preloadImageCount:withCompletionHandler:
popNextImage
setPauseImageLoad:
isRandomized
setRandomized:
preloadCount
setPreloadCount:
preloadCompletionHandler
setPreloadCompletionHandler:
queueSize
setQueueSize:
concurrentDownloadCount
setConcurrentDownloadCount:
nextIndex
setNextIndex:
finishedImages
setFinishedImages:
pendingArtworkCatalogs
setPendingArtworkCatalogs:
loadingArtworkCatalogs
setLoadingArtworkCatalogs:
_randomized
_pauseImageLoad
_preloadCount
_preloadCompletionHandler
_queueSize
_concurrentDownloadCount
_nextIndex
_finishedImages
_pendingArtworkCatalogs
_loadingArtworkCatalogs
setMediaType:
containerType
setContainerType:
containerStoreID
setContainerStoreID:
containerCloudID
setContainerCloudID:
containerName
setContainerName:
setPlaylistIsSubscribed:
librarySongLyrics
artworkURL
storeArtworkDictionary
setStoreArtworkDictionary:
artworkImageProxy
setIsCompilationAlbum:
_isInLibrary
_songHasStoreLyrics
_playlistIsSubscribed
_isCompilationAlbum
_mediaType
_identifier
_containerType
_containerStoreID
_containerCloudID
_artistOrCuratorName
_containerName
_artistStoreID
_storeID
_librarySongLyrics
_artworkURL
_storeArtworkDictionary
_artworkImageProxy
_playEvent
_featureName
_recommendationData
_recentRadioStationsDidChange:
sharedRadioRecentStationsController
_subscriptionStatusDidChange:
_playbackContainerDidChange:
_playbackErrorDidOccur:
_registerForStorePushNotifications
_setupMusicLibraryNotification
removeListener:
isProcessingPlayCommand
isObject
callWithArguments:
setIsProcessingPlayCommand:
_stringifyID:
_needsSubscriptionForPlayItem:
_callJSMethodNamed:withArgs:
setStoreIDs:
_storeDictForSongInCollection:atIndex:
_firstPlayIdentifierForSongDict:
_isStoreSongExplicit:
initWithLookupDictionary:
mediaClipWithStoreItemMetadata:storeItemMovieClip:
_ratingRankingFromStoreDictionary:
kindWithModelClass:
initWithRequest:
setResults:
setStaticResponse:
_addPAFDataToPlaybackIntent:options:
_prepareCallback:
playWithPlaybackIntent:initialPlaybackType:playbackAction:
_jsCallbackWithIdentifier:args:
canPlayFromStationStringID:isFreeRadioStation:
_getFeatureNameFromOptions:
playFromStationStringID:playActivityFeatureName:
canPlayFromArtistID:
playFromArtistID:
_dictionaryForRadioStation:
getRecentStationsWithCompletionHandler:
refreshWithCompletionHandler:
queryMusicLibraryForPlaylistWithCloudGlobalID:completionHandler:
removePlaylistFromMusicLibraryWithGlobalID:completionHandler:
numberWithUnsignedInt:
toString
queryMediaLibrary:maxItems:searchTerm:options:completionHandler:
_modelKindForItemTypeString:
queryRecentlyAdded:range:completionHandler:
querySongsForAlbumWithPersistentID:options:range:completionHandler:
findItemInLibraryWithType:cloudID:options:completionHandler:
getNowPlayingInfoWithOptions::
tvs_setObjectIfNotNil:forKey:
getURLForArtworkCatalog:completionHandler:
getPlayingStateWithCompletionHandler:
presentContextMenuForItemWithOptions:::
_songFromPlatformDictionary:
_getRecommendationDataFromOptions:
_getPlayEventFromOptions:
_isItemInLibraryWithSubscriptionID:itemKind:
_isAlbumInLibraryWithStoreID:
initWithTitle:identifier:actionBlock:
insertObject:atIndex:
setActionBlock:
setDateFormat:
currentLocale
setLocale:
bookmarksForKeys:
bookmarkTimestamp
isMarkedAsUnwatched
stationStringID
dataUsingEncoding:
setPlayActivityRecommendationData:
allValues
allKeys
tvs_numberForKey:
_getDictionaryForGenericObject:completionHandler:
descriptionText
episodeNumber
_callJSMusicInitializedNotification
_libraryManagerStateChanged:
_libraryWasUpdated:
_callJSMusicUpdatedNotification
appContext
valueWithObject:inContext:
hasProperty:
invokeMethod:withArguments:
evaluate:completionBlock:
_isItemInLibraryWithIdentifiers:itemKind:
setJSValue:forProperty:
jsValueForProperty:
playItems:::
playRadioStation:::
getRecentRadioStations:
queryMusicLibraryForPlaylistWithCloudGlobalID::
addToMusicLibraryWithAdamID::
addPlaylistToMusicLibraryWithGlobalID::
removePlaylistFromMusicLibraryWithGlobalID::
removeItemsFromMusicLibraryWithSagaIDs::
removeItemFromMediaLibraryWithPersistentID:::
queryMediaLibrary:::::
queryMusicLibraryForSongsWithAdamIDs::
queryMediaLibraryWithStoreID::::
queryRecentlyAdded:::
querySongsForAlbumWithPersistentID::::
findItemInLibraryByCloudID::::
getNowPlayingInfo:
getCurrentIsPlayingState:
presentExplicitRestrictionAlertIfNeededOfType::
presentDetailView:::
presentContextMenuForItem::
getBookmarkDataForItems::
musicAppAPIVersion
isMusicLibraryInitialized
_isMusicLibrarySynced
_radioHistoryInitialized
_isProcessingPlayCommand
initWithName:value:
arrayByAddingObjectsFromArray:
setScheme:
setHost:
setQueryItems:
setHeaderReferenceSize:
sortButton
_selectedSortButton
_playSongAtIndexPath:
lastReceivedResponse
_invalidateResultsWithResponse:
setTransform:
songs
sectionedCollectionDataSource
sectionIndexTitles
indexOfSectionForSectionIndexTitleAtIndex:
sortDescriptorsForRequest:
dataSource
shuffleAllLibrarySongs
showSortMenuForLibraryRequest:inViewController:completion:
lastPlayedSortDescriptors
setLastPlayedSortDescriptors:
playSongsInContainer:startModelObject:dontReloadForSameSong:sortDescriptors:
_collectionView:canMoveItemAtIndexPath:
_collectionView:moveItemAtIndexPath:toIndexPath:
_collectionView:canEditItemAtIndexPath:
_sectionIndexTitlesForCollectionView:
_collectionView:indexPathForSectionIndexTitle:atIndex:
collectionViewNeedsFocusUpdate:
setCollectionView:
setLibraryRequest:
setLastReceivedResponse:
focusToIndexPath
setFocusToIndexPath:
setSongs:
setSectionedCollectionDataSource:
_libraryRequest
_focusToIndexPath
_songs
_sectionedCollectionDataSource
_lastPlayedSortDescriptors
viewControllerForKey:
completeTransition:
_beginZoomAnimationFromViewController:toViewController:containerView:completion:
transitionDuration:
animateTransition:
interruptibleAnimatorForTransition:
animationEnded:
preferredFontForTextStyle:
fontDescriptor
fontDescriptorByAddingAttributes:
fontWithDescriptor:size:
_userInterfaceStyle
_lightModeListTitleTextColor
_darkModeListTitleTextColor
_lightModeListSubheadTextColor
_darkModeListSubheadTextColor
_lightModeListItemTextColor
_darkModeListItemTextColor
_lightModeReviewScoreTextColor
_darkModeReviewScoreTextColor
_lightModeReviewTextColor
_darkModeReviewTextColor
_lightModeReviewNameTextColor
_darkModeReviewNameTextColor
_lightModeListItemSelectedOverlayFillColor
_darkModeListItemSelectedOverlayFillColor
colorWithRed:green:blue:alpha:
_lightModeListItemSelectedOuterStrokeColor
_darkModeListItemSelectedOuterStrokeColor
_lightModeMetadataLongDescriptionColor
_darkModeMetadataLongDescriptionColor
title4Font
headline2Font
headline3Font
subtitle2Font
subheadFont
footnoteFont
fontWithWeight:fromFont:
imageHeaderSubtitleColor
listItemSelectedTextColor
folderTitleTextColor
gridItemTextColor
rowTitleTextColor
rowTitleSelectedTextColor
productionTitlesTextColor
reviewScoreTextColor
reviewTextColor
reviewNameTextColor
reviewRowTitleTextColor
listItemSelectedOverlayFillColor
listItemSelectedOuterStrokeColor
metadataLongDescriptionTextColor
menuBarButtonTextColor
menuBarButtonHighlightedTextColor
feedTitleColor
feedSubtitleColor
feedPageIndicatorColor
feedPageIndicatorCurrentPageColor
feedRatingsStarColor
feedListItemFocusedColor
feedNavigationColor
padding
_startTimer
_loadNextImage:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
_crossfadeToImage:
didMoveToSuperview
setPadding:
crossfadePeriod
crossfadeDuration
_crossfadeTimer
_loaderQueue
_crossfadePeriod
_crossfadeDuration
_padding
setFocusScaleAnchorPoint:
setMinimumScaleFactor:
_selectButtonAction:
_buttonActionTriggered
addTarget:action:forEvents:
_setButtonShadows
isEnabled
circular
buttonStyle
_focusedImageView
_maskImageLayer
_textLabel
_selectRecognizer
_buttonStyle
_circular
_text
stations
radioPlaybackIntentWithStationStringID:
setRadioStationStringID:
radioPlaybackIntentWithStation:
_playbackIntentForArtistID:
radioPlaybackIntentFromSong:
radioPlaybackIntentFromAlbum:
radioPlaybackIntentFromArtist:
didMoveToWindow
_startAnimations
_stopAnimations
_addImageToAnimationContainer:
tvs_randomizedArray
CGColor
setFilters:
subarrayWithRange:
begin
animationWithKeyPath:
setFromValue:
setToValue:
functionWithName:
setTimingFunction:
setFillMode:
setRemovedOnCompletion:
functionWithControlPoints::::
setBeginTime:
commit
removeAnimationForKey:
animationDidStart:
animationDidStop:finished:
_animating
_additionalImageViewCount
_animationGroup
_paused
radiusFromCornerRadii:
floatValue
tv_width
tv_height
focusedSizeIncreaseForSize:upscaleFactor:
children
tv_elementType
tv_imageType
canHandleDecodingOnRenderThread
initWithImageProxy:
setStackSize:
setFocusSizeIncrease:
albumsViewControllerForAllAlbums
artistsViewController
compilationsViewController
genresViewController
composersViewController
musicVideosViewController
playlistsViewController
recentlyAddedViewController
songsViewControllerForAllSongs
TVShowsViewController
_isAppleMusicSubscriber
_isPlayingOnLocalDevice
_playRequestWithItemType:withPersistentID:playbackAction:requestBlock:
playItemType:withMPObject:startItemIdentifiers:shuffle:
_playSongsWithRequest:initialPlaybackType:
_playVideoItemWithRequest:item:
_playSongsWithRequest:startIdentifiers:shuffle:initialPlaybackType:
_queueSongsWithRequest:playNext:
_playWithPlaybackIntent:initialPlaybackType:playbackAction:checkSubscriptionStatus:
_playSongsScopedToContainer:songVariants:playbackAction:sortDescriptors:
_isVideoItemType:
_playSongsWithRequest:playbackAction:
playSongsInContainer:startIdentifiers:shuffle:itemSortDescriptors:inSectionKind:sectionSortDescriptors:initialPlaybackType:
playSongsInContainer:startIdentifiers:shuffle:sortDescriptors:
playSongsInContainer:startIdentifiers:shuffle:itemSortDescriptors:inSectionKind:sectionSortDescriptors:
_songsRequestForContainer:songVariants:
_playUsingAirPlayWithPlaybackIntent:initialPlaybackType:playbackAction:
pickRoute:withPassword:completion:
playFromRequest:startItemIdentifiers:shuffle:
playFromRequest:playbackAction:
_categoryForRequest:
_hasLegacySortTypeForCategory:
_legacySortTypeForCategory:
isSortAlbumsByArtistSet
isSortSongsByArtistSet
sortAlbumsByArtist
sortSongsByArtist
_defaultSortTypeForCategory:
integerForKey:
_supportedSortTypeDictionary
setInteger:forKey:
synchronize
_setCurrentSortType:forCategory:
variants
scopedContainers
_currentSortTypeForCategory:
_sortDescriptorsForSortType:
sortDescriptorWithKeyPath:ascending:
_titleForSortType:
_setScopedMusicVideosForScopedAlbumSortType:
_alertActionForSortType:inCategory:handler:
actions
canSortRequest:
touchesBegan:withEvent:
whitespaceAndNewlineCharacterSet
tvs_stringByRemovingCharactersInSet:
_identifierForMPModelObject:
tvs_MD5String
_loadArtworkForMPObject:scaleToSize:completionHandler:
storeCloudAlbumID
contentItemID
setWindowLevel:
setRootViewController:
presentationViewController
_presentationViewController
initWithType:
initWithTitle:message:image:
widthAnchor
constraintLessThanOrEqualToConstant:
constraintGreaterThanOrEqualToConstant:
heightAnchor
constraintEqualToConstant:
insertSubview:below:
constraintLessThanOrEqualToAnchor:
titleText
messageText
_continuousCornerRadius
roundedRectBezierPath:withRoundedCorners:withCornerRadius:
setEffect:
setWindow:
_scheduleDismiss
setTitleText:
setMessageText:
_shadowView
_backgroundView
_contentVibrancy
_window
_titleText
_messageText
textFieldDidChange:
_doneButtonPressed:
systemInputViewControllerForResponder:editorView:containingResponder:
setSupportsRecentInputsIntegration:
setSystemInputViewControllerDelegate:
supportsTouchInput
reloadInputViewsForPersistentDelegate
systemLayoutSizeFittingSize:
boundingRectWithSize:options:context:
systemInputViewController:didChangeAccessoryVisibility:
systemInputViewControllerDidAcceptRecentInput:
_disableAutomaticKeyboardUI
_enableAutomaticKeyboardPressDone
textFieldAllowsFocus
setTextFieldAllowsFocus:
textFieldHeaderLabel
topAccessoryView
bottomAccessoryView
systemInputViewController
_textField
_topAccessoryView
_bottomAccessoryView
_isTouchEnabled
_preferredFocusedView
_hideAccessoryViews
_textFieldHeaderLabel
_systemInputViewController
_titleViewFrameWithBounds:
_imageViewFrameWithBounds:
_messageViewFrameWithBounds:
titleView
setTitleView:
messageView
setMessageView:
_titleView
_messageView
_buttonFrameWithBounds:
submitButton
_submitButton
isSecureTextEntry
season
isCompilation
curator
_placeholderImageForObjectType:
handlePlayPauseCommand
_setColorsForUserInterfaceStyle:
progressPercent
_progressView
_progressCompleteView
_progressPercent
_addArtistButton
registerClass:forSupplementaryViewOfKind:withReuseIdentifier:
artistButton
setFooterView:
footerView
constraintGreaterThanOrEqualToAnchor:
_musicVideosLibraryRequest
setMusicVideosResponse:
setMpResults:completion:
_playMusicVideo:
updateWithModelResponse:
musicVideosResponse
dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:
setArtistButton:
_selectedArtist
_artistButton
_footerView
_musicVideosResponse
setHighlightStyle:
darkGrayColor
_scaleRect:withStyle:
intValue
initWithScaleToSize:
_configureLabel:withTextElement:maxWidth:
backgroundColor
colorType
color
gradientColors
setColors:
setStartPoint:
setEndPoint:
titleGradientLayer
removeFromSuperlayer
insertSublayer:atIndex:
setTitleGradientLayer:
setAccessibilityLabel:
font
descender
width
height
margin
position
maxTextLines
_randomColor
createdImageViews
setCreatedImageViews:
titleBlockView
setTitleBlockView:
setSubtitleLabel:
titleBackgroundImageView
setTitleBackgroundImageView:
playlistID
setPlaylistID:
_createdImageViews
_titleBlockView
_titleBackgroundImageView
_playlistID
_titleGradientLayer
setMaximumResultsPerScope:
initWithItemKind:name:properties:
setScopes:
setSearchString:
dataWithJSONObject:options:error:
base64EncodedStringWithOptions:
setWriteCompletionHandler:
sortedArrayUsingComparator:
setStoreCloudAlbumID:
initWithModel:personalizationStyle:
initWithUnpersonalizedRequest:unpersonalizedContentDescriptors:
resolvedURLString
requestExportableArtworkPropertiesWithCompletion:
_updateControls
_configureCollectionViewLayout:
_sortButtonSelected
didSelectItemAtIndexPath:
showIndexBarTitles
totalNumberOfItems
setTotalNumberOfItems:
navigationController:didShowViewController:animated:
navigationController:willShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
setMpResults:
_navigationControllerDelegate
_viewControllerWithZoomAnimation
_showIndexBarTitles
_mpResults
_totalNumberOfItems
_setHeadingAttributes
_updateArtworkIfNeeded
_setPreviewArtworkForBrowseSectionRowAtIndex:
_menuItemForRowIndex:
_previewTypeForMenuItem:
_setPreviewArtworkForMenuIndexNumber:
_viewControllerForBrowseSectionRowAtIndex:
_setPreviewArtworkForPreviewType:
_shuffleArray:maxCount:
_artworkCatalogForMPObject:size:
_setHeadingSizeWithStartingSize:minimumSize:
exchangeObjectAtIndex:withObjectAtIndex:
_nameForMenuItem:
currentTopMenu
_noResultsViewWithTitle:subtitle:
currentMenuContext
_viewControllerUIContext
_menuSelectionIsDisplayed
_currentPreviewType
_previewArtworkCatalogMap
_currentMenuIndex
_mapMenuItemToName
_currentPreviewLibraryResponse
_didSetPreviewArtwork
_artworkNeedsUpdate
_lastSetMenuIndex
_currentMenuContext
_handlePlayPauseButton
_configureTableHeaderView
_startMusicPlayback
_tableHeaderLabel
headingVerticalOffset
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
setTableHeaderTitle:
tableHeaderTitle
tableHeaderTitleAttributedText
tableHeaderLabel
setTableHeaderLabel:
playPauseRecognizer
setPlayPauseRecognizer:
tableHeaderView
setTableHeaderView:
_headingVerticalOffset
_playPauseRecognizer
_tableHeaderView
isAirplayReceiver
bundleID
TVMusicSeparatorView
TVMusicCloudViewController
TVSignInLandingViewDelegate
NSObject
TVMusic
TVMusicLibraryManager
TVMusicContextMenuUI
TVMusicLibraryGenresViewController
TVTableView
UIGestureRecognizerDelegate
_TVMusicLyricsScrollView
TVMusicLyricsViewController
TVML
TVMusicPlaybackHostController
TVMusicRestrictionsUI
TVMusicParadeViewController
TVMusicLibraryEpisodesViewController
TVCollectionViewDelegate
UICollectionViewDelegate
UIScrollViewDelegate
TVMusicAppDelegate
PBSystemServiceNowPlayingDelegate
TVImageView
TVMusicNoMusicView
TVMusicSectionHeaderView
TVMusicPlayerManager
TVMusicTableViewCell
TVMusicAddToPlaylistViewController
_PlaylistNameEntryViewController
TVTextEntryControllerDelegate
TVMusicLibraryPlaylistDetailViewController
UICollectionViewDataSource
TVMusicSocialBadge
TVMusicLibraryHeaderView
TVMusicLibraryButtonFactory
TVMusicMPSongMediaItem
TVFocusRedirectView
TVMusicInterfaceFactory
_TVInterfaceCreatingPrivate
TVInterfaceCreating
TVMusicLibraryAlbumsViewController
UICollectionViewDelegateFlowLayout
TVMusicLibraryVideosViewController
TVMusicPlayQueue
MPRequestResponseControllerDelegate
TVMusicAirplayDetectorDelegate
PushNotificationHandler
TVCKPushNotificationListener
TVMusicLibraryUtilities
TVMusicHUDController
PBSViewServicePresenter
PBSViewServiceInterface
TVMusicSystemNowPlayingViewController
TVMusicAdditions
TVMusicScreenSaverService
TVPhotoServiceInterface
TVMusicPlaylistImageLoader
TVImageLoader
TVMusicPlaylistImageRequest
TVDurationValueTransformer
TVMusicLibraryShowsViewController
TVMusicNowPlayingManager
TVPPlaybackViewControllerDelegate
TVMusicAgeGateInfo
TVMusicAgeGateController
TVActivityIndicatorViewController
TVMusicLibraryAlbumDetailViewController
TVDeckImageView
TVMusicBlurDecorator
TVLabel
TVMusicSongCell
TVMusicLibraryPlaylistsViewController
TVMusicMPModelImageProxy
TVMusicContextMenuFactory
TVMusicLibraryCollectionViewCell
TVMusicLibraryComposersViewController
_TVMusicLibraryTableViewCell
TVCollectionView
TVMusicMPLibraryRequestFactory
TVMusicPlayer
TVMusicPlayQueueDelegate
MPCPlaybackEngineDelegate
MPCPlaybackEngineEventObserving
TVPAVFPlayback
TVPPlayback
TVSignInLandingView
TVMusicBarsView
TVMusicLibraryUITracker
TVTableViewCell
TVMusicPlaybackStatusController
TVMusicEquivalency
TVMusicLibrarySeasonsViewController
TVPreviewTableViewController
TVTableViewDelegate
UITableViewDelegate
TVPreviewTableViewControllerAdditions
_TVImageLoaderQueue
TVMusicContextMenuSubject
TVMusicJSObject
JSExport
TVMusicLibrarySongsViewController
UICollectionViewDataSource_Private
TVNavigationZoomAnimator
UIViewControllerAnimatedTransitioning
TVThemeManager
TVImageCrossfadeView
TVMusicLibraryActionButton
TVMusicLibraryComposerDetailViewController
TVMusicRadioUtilities
TVScrollingParadeView
CAAnimationDelegate
TVMusicLibraryViewController
TVMusicPlaybackHelper
TVMusicLibrarySortUtilities
TVInteractionGestureRecognizer
TVMusicMPArtworkCatalogLoader
_TVMusicHUDWindow
TVMusicHUDViewController
TVTextEntryController
UISystemInputViewControllerDelegate
TVTextEntryHeaderView
TVTextEntryFooterView
_TVTextEntryTextField
TVMusicLibraryRecentlyAddedViewController
TVMusicCloudProgressView
TVMusicLibraryArtistDetailViewController
TVMusicPlaylistLockupViewCell
Helpers
TVMusicMPRequestViewController
UINavigationControllerDelegate
TVMusicLibraryTopMenuViewController
TVMusicTableViewController
TVMusicLibraryArtistsViewController
TVMusicAirplayDetector
v24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v16@0:8
v20@0:8B16
@"TVSStateMachine"
@"TVMusicLibraryTopMenuViewController"
@"TVMusicCloudProgressView"
@"UIActivityIndicatorView"
@"TVSignInLandingView"
@"UIView"
@"TVMusicLibraryManager"
v32@0:8q16@24
v24@0:8q16
v24@0:8d16
q16@0:8
v32@0:8q16@?24
v24@0:8@?16
d16@0:8
@"HSCloudClient"
@"NSNumber"
@"TVSBackgroundTask"
@24@0:8@16
@32@0:8@16@24
q24@0:8@16
q32@0:8@16q24
v40@0:8@16@24@32
v32@0:8@16@24
d32@0:8@16@24
v44@0:8@16@24B32@36
@"MPModelResponse"
@"TVMusicParadeViewController"
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@"NSIndexPath"
@"UITapGestureRecognizer"
@"UILongPressGestureRecognizer"
B40@0:8@16@24@32
@"UIImageView"
@"UILabel"
@"UIScrollView"
@"MPModelSong"
@"NSString"
@"NSData"
@"MPModelPlayEvent"
@"TVPPlaybackViewController"
@"<TVPPlayback>"
v40@0:8Q16Q24@?32
@32@0:8{CGPoint=dd}16
v32@0:8{CGPoint=dd}16
{CGPoint=dd}16@0:8
@"TVDeckImageView"
@"NSArray"
{CGPoint="x"d"y"d}
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@16B24
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v48@0:8@16@24@32@40
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
@40@0:8@16@24@32
{CGPoint=dd}40@0:8@16{CGPoint=dd}24
B32@0:8@"UICollectionView"16@"NSIndexPath"24
v32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"UICollectionViewCell"24@"NSIndexPath"32
v48@0:8@"UICollectionView"16@"UICollectionReusableView"24@"NSString"32@"NSIndexPath"40
B48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
v48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
@"UICollectionViewTransitionLayout"40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"UICollectionViewLayout"32
B32@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24
v40@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
{CGPoint=dd}40@0:8@"UICollectionView"16{CGPoint=dd}24
B40@0:8@"UICollectionView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v32@0:8@"TVCollectionView"16@"NSIndexPath"24
B32@0:8@"TVCollectionView"16@"NSIndexPath"24
B24@0:8@"TVCollectionView"16
v40@0:8@16{CGPoint=dd}24
@24@0:8q16
{CGSize=dd}16@0:8
@"TVImageView"
@"UIControl"
@"MPModelTVSeason"
@"NSDateFormatter"
@"MPCLyricsReportingController"
@"SSVSubscriptionStatus"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGSize=dd}32@0:8{CGSize=dd}16
v32@0:8@16@?24
v24@0:8B16B20
@?16@0:8
@"UIImage"
@"UIColor"
@"TVImageProxy"
{CGSize=dd}40@0:8@16@24d32
@"TVMusicPlaybackStatusController"
@"TVMusicPlayer"
v36@0:8@16B24@?28
@"MPModelLibraryRequest"
@"MPModelPlaylist"
@"MPModelGenericObject"
v24@0:8@"TVTextEntryController"16
@"TVTextEntryController"
@40@0:8@16@24q32
q32@0:8@"UICollectionView"16q24
@"UICollectionViewCell"32@0:8@"UICollectionView"16@"NSIndexPath"24
q24@0:8@"UICollectionView"16
@"UICollectionReusableView"40@0:8@"UICollectionView"16@"NSString"24@"NSIndexPath"32
v40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
@"NSArray"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSString"24q32
@"TVLabel"
@"TVCollectionView"
@"NSMutableArray"
@20@0:8f16
@"UIStackView"
@"UIFocusGuide"
d24@0:8d16
v44@0:8d16d24d32B40
@"NSDictionary"
@"TVPBaseMediaItem"
@"TVCKMutableBookmark"
@"UIFocusContainerGuide"
#24@0:8@16
@"UIView"32@0:8@"TVViewElement"16@"UIView"24
@"UIViewController"32@0:8@"TVViewElement"16@"UIViewController"24
@"NSURL"24@0:8@"NSString"16
@"UIImage"24@0:8@"NSString"16
#24@0:8@"TVViewElement"16
@"TVImageProxy"24@0:8@"TVViewElement"16
@"TVMusicCloudViewController"
{CGSize=dd}40@0:8@16@24@32
{UIEdgeInsets=dddd}40@0:8@16@24q32
d40@0:8@16@24q32
{CGSize=dd}40@0:8@16@24q32
{CGSize=dd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"NSIndexPath"32
{UIEdgeInsets=dddd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
d40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
{CGSize=dd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
@20@0:8B16
@28@0:8@16B24
@"MPModelArtist"
@"MPModelGenre"
@"MPModelComposer"
{?=qq}20@0:8B16
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
v24@0:8@"TVMusicAirplayDetector"16
@36@0:8@16q24B32
B24@0:8q16
q24@0:8q16
{?=dddddffBB}16@0:8
v72@0:8{?=dddddffBB}16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"TVMusicAirplayDetector"
@"NSObject<TVMusicPlayQueueDelegate>"
@"MPCPlayerResponseItem"
@"MPRequestResponseController"
@"MPCPlayerResponse"
{?="snapshotTime"d"startTime"d"endTime"d"duration"d"elapsedDuration"d"rate"f"defaultRate"f"isLiveContent"B"isLoading"B}
v40@0:8@"TVCKPushNotificationServer"16@"NSString"24@"NSDictionary"32
v24@0:8@"TVCKPushNotificationServer"16
v48@0:8@16@24@32@?40
v48@0:8q16@24@32@?40
v40@0:8q16@24@?32
v40@0:8@16@24@?32
v48@0:8@16@24q32@?40
v24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@?<v@?>24
@"NSXPCInterface"16@0:8
v32@0:8@"NSDictionary"16@?<v@?@"<NSSecureCoding>"@"NSError">24
v24@0:8@"<NSSecureCoding>"16
v48@0:8@16@24@32^v40
@"UINavigationController"
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@"<TVPhotoServerInterface>"16
v40@0:8@"NSDictionary"16@"<TVPhotoServerInterface>"24@?<v@?@"NSArray"@"NSError">32
@"<TVPhotoServerInterface>"
@"<NSObject>"
@56@0:8@16{CGSize=dd}24d40d48
@52@0:8@16{CGSize=dd}24B40@?44
@60@0:8@16{CGSize=dd}24B40q44@?52
@68@0:8@16{CGSize=dd}24B40q44@52@?60
@"NSString"24@0:8@16
@"NSURL"24@0:8@16
@52@0:8@16{CGSize=dd}24B40@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">44
@60@0:8@16{CGSize=dd}24B40q44@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">52
@68@0:8@16{CGSize=dd}24B40q44@"<IKNetworkRequestLoader>"52@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">60
v32@0:8{CGSize=dd}16
@"NSMutableDictionary"
{CGSize="width"d"height"d}
@"NSDateComponentsFormatter"
@"UISegmentedControl"
v32@0:8@"<TVPMediaItem>"16@?<v@?@"TVPMusicContextMenuData">24
v40@0:8@"TVPPlaybackViewController"16@"NSObject<TVPMediaItem>"24@?<v@?@"TVPRelatedContent">32
B24@0:8@"UIViewController"16
v40@0:8@"UIViewController"16@"<TVPMediaItem>"24@?<v@?@"NSArray"q>32
B40@0:8@"UIViewController"16@"<TVPMediaItem>"24@"<TVPPlayback>"32
v24@0:8@"UIViewController"16
q24@0:8@"UIViewController"16
@40@0:8@16B24B28^q32
v32@0:8@16Q24
@"<TVPMediaItem>"
@"MPModelLibraryResponse"
@"TVMusicLibraryActionButton"
@"TVPMusicNowPlayingViewController"
@40@0:8q16@24@32
@"TVMusicAgeGateInfo"
@"UIVisualEffectView"
@"NSMapTable"
@"MPModelAlbum"
@"NSMutableIndexSet"
Q24@0:8q16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v24@0:8Q16
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@44@0:8@16{CGSize=dd}24B40
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@32@0:8q16@24
@32@0:8d16d24
@"TVMusicBarsView"
@"MPIdentifierSet"
@"_UIFloatingContentView"
@"MPModelObject"
v40@0:8q16q24@?32
v48@0:8q16q24@32@?40
@32@0:8@16@?24
@40@0:8Q16q24Q32
v32@0:8q16q24
@36@0:8q16q24B32
@32@0:8q16q24
v40@0:8@16{CGSize=dd}24
@"MPArtworkCatalog"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{?="_respondsToDidPlayItem"b1"_respondsToDidLongPressItem"b1"_respondsToCanBecomeFocused"b1}
@32@0:8@16B24B28
@24@0:8Q16
v40@0:8@16q24q32
v48@0:8@16d24@32q40
v80@0:8@16{?=dddddffBB}24
v32@0:8@"TVMusicPlayQueue"16@"NSArray"24
v32@0:8@"TVMusicPlayQueue"16@"<TVPMediaItem>"24
v40@0:8@"TVMusicPlayQueue"16q24q32
v48@0:8@"TVMusicPlayQueue"16d24@"<TVPMediaItem>"32q40
v32@0:8@"TVMusicPlayQueue"16@"UIView<MPCVideoView>"24
v80@0:8@"TVMusicPlayQueue"16{?=dddddffBB}24
v24@0:8@"MPCPlaybackEngine"16
v32@0:8@"MPCPlaybackEngine"16@?<v@?B@"NSError">24
v40@0:8@"MPCPlaybackEngine"16@"NSError"24@?<v@?B>32
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@"NSError"32
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@?<v@?B@"NSError">32
v32@0:8@16q24
v32@0:8@"MPCPlaybackEngine"16Q24
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@"MPAVItem"32
v32@0:8@"MPCPlaybackEngine"16@"MPAVItem"24
v32@0:8@"MPCPlaybackEngine"16@"MPPlaybackContext"24
v40@0:8@"MPCPlaybackEngine"16@"MPPlaybackContext"24@"NSError"32
v32@0:8@"MPCPlaybackEngine"16@"NSString"24
v32@0:8@"MPCPlaybackEngine"16q24
v28@0:8d16B24
v48@0:8d16{?=qiIq}24
v52@0:8d16{?=qiIq}24B48
@24@0:8@?16
f16@0:8
v20@0:8f16
v32@0:8Q16@24
@24@0:8@"NSString"16
v32@0:8q16@"NSString"24
@24@0:8@?<v@?d@"NSDate"dB>16
@32@0:8@"NSArray"16@?<v@?B>24
v28@0:8@"TVPSubtitleOption"16B24
@"<TVPPlaybackDelegate>"16@0:8
v24@0:8@"<TVPPlaybackDelegate>"16
@"<TVPASyncPlaybackDelegate>"16@0:8
v24@0:8@"<TVPASyncPlaybackDelegate>"16
@"TVPPlaylist"16@0:8
v24@0:8@"TVPPlaylist"16
@"NSObject<TVPMediaItem>"16@0:8
v24@0:8@"NSObject<TVPMediaItem>"16
@"TVPPlaybackState"16@0:8
@"NSDate"16@0:8
v24@0:8@"NSDate"16
@"NSArray"16@0:8
@"TVPChapterCollection"16@0:8
v24@0:8@"TVPChapterCollection"16
@"TVPChapter"16@0:8
@"TVPInterstitial"16@0:8
@"TVPTimeRange"16@0:8
@"TVPDateRange"16@0:8
@"TVPAudioOption"16@0:8
v24@0:8@"TVPAudioOption"16
@"TVPSubtitleOption"16@0:8
v24@0:8@"TVPSubtitleOption"16
v32@0:8Q16@"NSString"24
v40@0:8d16@24@?32
v24@0:8@"TVPVideoView"16
@"AVPlayer"16@0:8
v40@0:8d16@"NSDate"24@?<v@?B@"NSNumber"@"NSDate">32
B40@0:8^@16^@24@32
@"TVPChapterCollection"
@"<TVPASyncPlaybackDelegate>"
@"TVPSubtitleOption"
@"TVPInterstitial"
@"TVPAudioOption"
@"NSDate"
@"TVPChapter"
@"TVMusicPlayQueue"
@"MPCPlaybackEngine"
@"AVPlayer"
@"TVPPlaybackState"
@"TVPTimeRange"
@"MPAVItem"
@"<TVSignInLandingViewDelegate>"
@"UIButton"
d32@0:8d16d24
q32@0:8@16@24
v40@0:8@16@24q32
d32@0:8@16q24
@32@0:8@16q24
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v32@0:8@"TVTableView"16@"NSIndexPath"24
B32@0:8@"TVTableView"16@"NSIndexPath"24
v40@0:8@16B24B28@?32
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
@"TVFocusRedirectView"
@"UIViewController"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@40@0:8@16q24@32
@"NSURL"
v56@0:8@16q24@32@40@48
v48@0:8@16{_NSRange=QQ}24@40
v56@0:8@16@24{_NSRange=QQ}32@48
v40@0:8@"NSArray"16@"NSDictionary"24@"JSValue"32
v40@0:8@"NSDictionary"16@"NSDictionary"24@"JSValue"32
v24@0:8@"JSValue"16
v32@0:8@"NSString"16@"JSValue"24
v32@0:8@"NSArray"16@"JSValue"24
v40@0:8@"NSString"16@"NSString"24@"JSValue"32
v56@0:8@"NSArray"16q24@"JSValue"32@"NSDictionary"40@"JSValue"48
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"JSValue"40
v48@0:8@"NSDictionary"16{_NSRange=QQ}24@"JSValue"40
v56@0:8@"NSString"16@"NSDictionary"24{_NSRange=QQ}32@"JSValue"48
v32@0:8@"NSDictionary"16@"JSValue"24
B32@0:8q16@24
@"TVMusicLibraryHeaderView"
@"MPSectionedCollection"
@"<MPLazySectionedCollectionDataSource>"
d24@0:8@16
d24@0:8@"<UIViewControllerContextTransitioning>"16
v24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
@"NSTimer"
@"_TVImageLoaderQueue"
@"CALayer"
@"UIGestureRecognizer"
B28@0:8@16B24
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
@"NSObject<OS_dispatch_group>"
B40@0:8Q16@24Q32
B32@0:8@16Q24
v44@0:8Q16@24@32B40
v36@0:8@16@24B32
v40@0:8@16Q24Q32
v40@0:8Q16@24Q32
v60@0:8@16@24B32@36@44@52
v68@0:8@16@24B32@36@44@52Q60
@32@0:8@16Q24
v44@0:8@16Q24Q32B40
v48@0:8Q16@24Q32@?40
v44@0:8@16@24B32Q36
v48@0:8@16Q24Q32@40
B24@0:8Q16
@40@0:8q16@24@?32
v48@0:8@16{CGSize=dd}24@?40
@"_TVMusicHUDWindow"
v28@0:8@"UISystemInputViewController"16B24
v24@0:8@"UISystemInputViewController"16
@"_TVTextEntryTextField"
@"<TVTextEntryControllerDelegate>"
@"UISystemInputViewController"
@"NSAttributedString"
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
v56@0:8@16q24@32@40@?48
v48@0:8@16{_NSRange=QQ}24@?40
v56@0:8@16@24{_NSRange=QQ}32@?48
Q24@0:8@16
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
@"<UINavigationControllerDelegate>"
q24@0:8Q16
@40@0:8@16{CGSize=dd}24
v32@0:8d16d24
q40@0:8@16@24q32
@"TVInteractionGestureRecognizer"
@"<TVMusicAirplayDetectorDelegate>"
Uninitialized
Not logged in
Waiting
Syncing
Error
Showing menu
Update
Login failed
Sync started
Sync complete
Sync error
User initiated login
User initiated retry
My Music view controller
ICloudLibraryLoadingMessage
NoMusicFuseErrorMessage
NoMusicDefaultErrorMessage
#T:[%@%p] #Notice #%@ : Cloud music library is available and has been synced. Set screensaver preferences.. 
Main:
v8@?0
v24@?0@"SSAuthenticateResponse"8@"NSError"16
ITunesLoginTitle
ITunesLoginMessage
placeholder_error_music
ICloudLibraryTitle
ICloudLibraryConnectionFailure
ICloudErrorRetryButton
@"NSString"40@?0@"TVSStateMachine"8@"NSString"16@24@"NSDictionary"32
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
stateMachine
T@"TVSStateMachine",&,N,V_stateMachine
isUserLoggedIn
TB,N,V_isUserLoggedIn
topMenuViewController
T@"TVMusicLibraryTopMenuViewController",&,N,V_topMenuViewController
cloudProgressView
T@"TVMusicCloudProgressView",&,N,V_cloudProgressView
activityIndicatorView
T@"UIActivityIndicatorView",&,N,V_activityIndicatorView
loginPromptView
T@"TVSignInLandingView",&,N,V_loginPromptView
errorMessageView
T@"UIView",&,N,V_errorMessageView
currentDisplayedView
T@"UIView",W,N,V_currentDisplayedView
noMusicView
T@"UIView",&,N,V_noMusicView
libraryManager
T@"TVMusicLibraryManager",&,N,V_libraryManager
cloud
subscription
itunesradio
serviceType
TQ,R,N
isVideoMediaType
TB,R,N
TVMusicLibraryManagerStateChangedNotification
TVMusicLibraryManagerSyncProgressNotification
TVMusicLibraryManagerErrorNotification
TVMusicLibraryManagerErrorKey
TVMusicLibraryManagerDidReceiveUpdatePushNotification
isJalisco2Enabled
com.apple.TVMusic.LibraryManager
v12@?0B8
v24@?0B8B12@"NSError"16
TVMusicLibraryManagerErrorDomain
true
v28@?0@"SSVSubscriptionStatus"8B16@"NSError"20
v24@?0Q8@"NSError"16
v12@?0I8
v12@?0f8
v16@?0@"NSError"8
sharedInstance
T@"TVMusicLibraryManager",R
state
Tq,N,V_state
cloudStatus
Tq,N,V_cloudStatus
hsCloudClient
T@"HSCloudClient",&,N,V_hsCloudClient
isFusePurchased
TB,N,V_isFusePurchased
isSagaPurchased
TB,N,V_isSagaPurchased
syncProgress
Td,N,V_syncProgress
jaliscoSynced
TB,N,GisJaliscoSynced,V_jaliscoSynced
databaseDeleteInProgress
TB,N,V_databaseDeleteInProgress
accountDSID
T@"NSNumber",&,N,V_accountDSID
jaliscoPushUpdateTask
T@"TVSBackgroundTask",&,N,V_jaliscoPushUpdateTask
sagaPushUpdateTask
T@"TVSBackgroundTask",&,N,V_sagaPushUpdateTask
TVMusic
#T:[%@%p] #Warning #%@ : No context menu items supplied for menu with heading "%@" -- context menu will not be shown. 
v16@?0@"UIAlertAction"8
MusicLibraryGenres
v24@?0@"MPModelLibraryResponse"8@"NSError"16
v16@?0@"NSIndexPath"8
delegate
T@"<TVTableViewDelegate>",W,D,N
indexPathForLastFocusedItem
T@"NSIndexPath",R,C,N,V_indexPathForLastFocusedItem
v24@?0@"UIImageView"8@"UIImage"16
v24@?0@"MPModelSong"8@"NSError"16
ExplicitLyricsErrorTitle
ExplicitLyricsErrorMessage
LyricsUnvailableErrorTitle
LyricsUnvailableErrorMessage
MusicOK
v24@?0@"NSString"8^B16
<br>
com.apple.TVMusic.TVMusicLyricsViewController.sharedQueue
lyricsText
T@"NSString",C,N,V_lyricsText
lyricsID
T@"NSString",C,N,V_lyricsID
lyricsOperationQueue
T@"NSOperationQueue",R,N
songTitle
T@"NSString",R,N
songAlbum
songArtist
PAFFeatureName
T@"NSString",C,N,V_PAFFeatureName
PAFRecommendationData
T@"NSData",&,N,V_PAFRecommendationData
PAFContainerData
T@"MPModelPlayEvent",&,N,V_PAFContainerData
duration
popularity
explicit
data-content-id
music-library-id
play-icon-when-focused
music-track-type
greyed-out
grayed-out
v16@?0@"MPIdentifierSet"8
song
music-video
classical-work
classical-movement
playbackViewController
T@"TVPPlaybackViewController",&,N,V_playbackViewController
player
T@"<TVPPlayback>",&,N,V_player
TVMusicRestrictionsUI
NOT_NOW_BUTTON
ON_LAUNCH_ALERT_TITLE
ON_LAUNCH_ALERT_MESSAGE
ON_CONTAINER_LOAD_ALERT_TITLE
ON_CONTAINER_LOAD_ALERT_MESSAGE
ON_PLAY_PASSCODE_SET_ALERT_TITLE
ON_PLAY_PASSCODE_SET_ALERT_MESSAGE
ON_PLAY_ALERT_TITLE
ON_PLAY_ALERT_MESSAGE
ON_PURCHASE_PASSCODE_SET_ALERT_TITLE
ON_PURCHASE_PASSCODE_SET_ALERT_MESSAGE
ON_PURCHASE_ALERT_TITLE
ON_PURCHASE_ALERT_MESSAGE
ON_ADD_TO_LIBRARY_PASSCODE_SET_ALERT_TITLE
ON_ADD_TO_LIBRARY_PASSCODE_SET_ALERT_MESSAGE
ON_ADD_TO_LIBRARY_ALERT_TITLE
ON_ADD_TO_LIBRARY_ALERT_MESSAGE
RESTRICTIONS_BUTTON
ALLOW_EXPLICIT_BUTTON
prefs:root=Restrictions
v20@?0B8@"NSError"12
onLaunch
onContainerLoad
onPlay
onPurchase
onAddToLibrary
CHANGE_ALLOWED_TV_RATING
CHANGE_ALLOWED_MOVIE_RATING
CANT_PLAY_CONTENT_TYPE
CANT_PLAY_DUE_TO_RATING
v16@?0Q8
artworkCatalogs
T@"NSArray",&,N,V_artworkCatalogs
imageOffset
T{CGPoint=dd},N,V_imageOffset
MusicLibrarySeasonTitle
v24@?0@"TVImageView"8@"UIImage"16
EpisodeSongCellIdentifier
v16@?0@"TVPMusicContextMenuData"8
v24@?0@"TVMusicSongCell"8@"UIImage"16
B32@?0@"TVPMusicContextMenuDataItem"8Q16^B24
TVMusicAppOpenURLNotification
v16@?0@"AVAudioSession"8
v32@?0@"NSDictionary"8@"<TVPhotoServerInterface>"16@?<v@?@"NSArray"@"NSError">24
nowplaying
show-now-playing
play
persistentID
album
playlist
musicVideo
movie
tvEpisode
tvSeason
#T:[%@%p] #Notice #%@ : Unknown play item type [%@] in [%@] 
#T:[%@%p] #Notice #%@ : Not enough parameters for play command in [%@] 
internal
%@://internal/np-launch/?id=%@
v16@?0@"NSNotification"8
#T:[%@%p] #Error #%@ : No IKAppContext available: Javascript will not work properly! 
itms
FuseLostLeaseTitle
FuseLostLeaseMessage
#T:[%@%p] #Notice #%@ : Account need authentication. 
subscriptionStatus
T@"SSVSubscriptionStatus",&,N,V_subscriptionStatus
lyricsReportingController
T@"MPCLyricsReportingController",&,N,V_lyricsReportingController
T@"<TVPPlayback>",R,N
navigationController
T@"UINavigationController",R,N
supportsLyrics
v28@?0@"TVImage"8@"NSError"16B24
completion
T@?,C,N,V_completion
imageLoaded
TB,N,GisImageLoaded,V_imageLoaded
_tintColor
T@"UIColor",&,N,S_setTintColor:,V__tintColor
_focusedColor
T@"UIColor",&,N,S_setFocusedColor:,V__focusedColor
_enableEdgeAntialiasingOnSelected
TB,N,S_setEnableEdgeAntialiasingOnSelected:,V__enableEdgeAntialiasingOnSelected
_edgeAntialiasingOnSelectedRestrictedToLeftRightEdge
TB,N,S_setEdgeAntialiasingOnSelectedRestrictedToLeftRightEdge:,V__edgeAntialiasingOnSelectedRestrictedToLeftRightEdge
image
T@"UIImage",&,N
placeholderImage
T@"UIImage",&,N,V_placeholderImage
cornerRadius
Td,N
imageProxy
T@"TVImageProxy",&,N,V_imageProxy
MusicLibraryNoMusic
containerView
T@"UIView",&,N,V_containerView
titleLabel
T@"UILabel",&,N,V_titleLabel
messageLabel
T@"UILabel",&,N,V_messageLabel
message
T@"NSString",&,N,V_message
headingLabel
T@"UILabel",&,N,V_headingLabel
headerText
T@"NSString",&,N,V_headerText
fallback_library
T@"TVMusicPlayer",&,N,V_player
playbackStatusController
T@"TVMusicPlaybackStatusController",&,N,V_playbackStatusController
badgeView
T@"UIView",&,N,V_badgeView
placeholderAssetType
Tq,N,V_placeholderAssetType
com.apple.TVMusic.TVMusicAddToPlaylistViewController
AddToPlaylistMessage
AddToPlaylistOK
AddToPlaylistCancel
HUDConfirmationAddedToPlaylistTitle
HUDConfirmationAddedToPlaylistMessage
NotificationsAddToPlaylist
v24@?0@"NSArray"8@"NSError"16
AddToAPlaylist
NewPlaylist
v16@?0@"NSString"8
B8@?0
v32@?0@"MPModelPlaylist"8@"NSIndexPath"16^B24
v16@?0@"MPModelPlaylist"8
v24@?0@"NSError"8@"MPModelPlaylist"16
#T:[%@%p] #Warning #%@ : Error adding item [%@]: %@ 
PLAYLIST_ADD_BEHAVIOR_ALERT_TITLE_SINGULAR
PLAYLIST_ADD_BEHAVIOR_ALERT_TITLE_PLURAL
PLAYLIST_ADD_BEHAVIOR_ALERT_MESSAGE
PLAYLIST_ADD_BEHAVIOR_ADD_BUTTON
PLAYLIST_ADD_BEHAVIOR_DONT_ADD_BUTTON
spinner
T@"UIActivityIndicatorView",&,N,V_spinner
mpRequest
T@"MPModelLibraryRequest",&,N,V_mpRequest
folderPlaylist
T@"MPModelPlaylist",&,N,V_folderPlaylist
objectToAdd
T@"MPModelGenericObject",&,N,V_objectToAdd
collectionTracks
T@"NSArray",&,N,V_collectionTracks
PlaylistNameHeading
CreatePlaylistButton
completionBlock
T@?,C,N,V_completionBlock
hidePresentingView
TB,N,V_hidePresentingView
PlaylistSongCell
v24@?0@"MPModelResponse"8@"NSError"16
SongsCount
T@"MPModelPlaylist",&,N,V_playlist
mpResponse
T@"MPModelResponse",&,N,V_mpResponse
imageViews
T@"NSArray",C,N,V_imageViews
minimumInteritemSpacing
Td,N,V_minimumInteritemSpacing
-[MPSectionedCollection(TVMusic) tvm_enumerateSectionsUsingBlock:]_block_invoke
v32@?0@8q16^B24
-[MPSectionedCollection(TVMusic) tvm_enumerateItemsInSectionAtIndex:usingBlock:]_block_invoke
-[MPSectionedCollection(TVMusic) tvm_enumerateItemsUsingBlock:]_block_invoke
v32@?0@8@"NSIndexPath"16^B24
rightStackView
T@"UIStackView",&,N,V_rightStackView
topFocusGuide
T@"UIFocusGuide",&,N,V_topFocusGuide
leadingFocusGuide
T@"UIFocusGuide",&,N,V_leadingFocusGuide
trailingFocusGuide
T@"UIFocusGuide",&,N,V_trailingFocusGuide
stackFocusGuide
T@"UIFocusGuide",&,N,V_stackFocusGuide
T@"TVLabel",R,N,V_titleLabel
subtitleLabel
T@"TVLabel",R,N,V_subtitleLabel
rightViews
T@"NSArray",C,N,V_rightViews
menuicon_shuffle-mask
MusicLibraryShuffle
menuicon_more-mask
MusicLibraryMore
MusicLibraryPlay
menuicon_play-mask
MusicLibraryGoToArtist
menuicon_artist-mask
icon_gotoshow_mask
MusicLibraryGoToShow
MusicLibraryAllSeasons
CurrentlyPlayingTitle
v16@?0@"MPModelGenericObject"8
%@.%@
T@"MPModelSong",&,N,V_song
mediaItemMetadata
T@"NSDictionary",&,N,V_mediaItemMetadata
mediaItem
T@"TVPBaseMediaItem",&,N,V_mediaItem
bookmark
T@"TVCKMutableBookmark",&,N,V_bookmark
unknownItemType
TB,N,GisUnknownItemType,V_unknownItemType
unknownItemDescription
T@"NSString",C,N,V_unknownItemDescription
containerGuide
T@"UIFocusContainerGuide",R,N,V_containerGuide
musicRadioCard
musicCard
musicInfoCard
musicMiniCard
musicShowCard
musicPostcard
musicArtistInfoCard
musicAboutCard
musicSongLockup
musicListSongLockup
userProfileBanner
socialBadge
playlistImg
MyMusic
Library
NowPlaying
MusicStackStyleSheet
MusicSearchStyleSheet
MusicProductStyleSheet
MusicProductBundleStyleSheet
MusicVideoProductStyleSheet
musicLibraryClientData
mediaLibraryClientData
T@"<TVPPlayback>",W,N,V_player
com.apple.TVPlayback
placeholder-album-90-onDark
placeholder-album-378-onDark
placeholder-album-680-onDark
placeholder-artist-90-onDark
placeholder-artist-378-onDark
placeholder-artist-680-onDark
placeholder-video-90-onDark
placeholder-video-378-onDark
placeholder-video-680-onDark
placeholder-purchased-90-onDark
placeholder-purchased-378-onDark
placeholder-purchased-680-onDark
placeholder-smartalbum-90-onDark
placeholder-smartalbum-378-onDark
placeholder-smartalbum-680-onDark
placeholder-genius-90-onDark
placeholder-genius-378-onDark
placeholder-genius-680-onDark
music-folder2-90
music-folder2-378
music-folder2-680
placeholder-video-16x9-onDark
placeholder-album-90-onLight
placeholder-album-378-onLight
placeholder-album-680-onLight
placeholder-artist-round-90-onLight
placeholder-artist-round-378-onLight
placeholder-artist-round-680-onLight
placeholder-video-90-onLight
placeholder-video-378-onLight
placeholder-video-680-onLight
placeholder-purchased-90-onLight
placeholder-purchased-378-onLight
placeholder-purchased-680-onLight
placeholder-smartalbum-90-onLight
placeholder-smartalbum-378-onLight
placeholder-smartalbum-680-onLight
placeholder-genius-90-onLight
placeholder-genius-378-onLight
placeholder-genius-680-onLight
placeholder-video-16x9-onLight
com.apple.TVMusic
TVMusicLibraryAlbumsViewController
MusicLibraryCompilations
MusicLibraryAlbumsTitle
playButton
T@"UIControl",&,N,V_playButton
shuffleAllButton
T@"UIControl",&,N,V_shuffleAllButton
genre
T@"MPModelGenre",&,N,V_genre
artist
T@"MPModelArtist",&,N,V_artist
composer
T@"MPModelComposer",&,N,V_composer
MusicLibraryMusicVideosTitle
TVMusicPlayQueueChangedNotification
TVMusicPlayQueueErrorDomain
TVMusicPlayQueueWillAddToQueueNotification
TVMusicPlayQueueWillAddToQueueNotificationUserInfoKeyPlayNext
TVMusicPlayQueuePlayerPathChangedNotification
Music
TVMusicPlayQueue
com.apple.TVMusic.TVMusicPlayQueue.invalidation
v16@?0@"MPAVRoute"8
move item
end seek
pause
stop
fast-forward
rewind
nextItem
previousItem
shuffleEnabled
repeatMode
v24@?0@"MPCPlayerResponse"8@"NSError"16
v32@?0@"MPCPlayerResponseItem"8q16^B24
v32@?0@"MPCPlayerResponseSection"8q16^B24
v16@?0@"MPModelPlayEvent"8
v32@?0@"MPCPlayerResponseItem"8@"NSIndexPath"16^B24
pendingElapsedTime
Td,N,V_pendingElapsedTime
pendingElapsedTimeChange
TB,N,GisPendingElapsedTimeChange,V_pendingElapsedTimeChange
requestResponseController
T@"MPRequestResponseController",&,N,V_requestResponseController
playerResponse
T@"MPCPlayerResponse",&,N,V_playerResponse
mediaItems
T@"NSArray",&,N,V_mediaItems
mediaItemIndexes
T@"NSDictionary",&,N,V_mediaItemIndexes
isUpdating
TB,N,V_isUpdating
lastPlayingItem
T@"MPCPlayerResponseItem",&,N,V_lastPlayingItem
durationSnapshot
T{?=dddddffBB},N,V_durationSnapshot
isRadioPlayback
TB,N,V_isRadioPlayback
radioStationName
T@"NSString",&,N,V_radioStationName
isVideoPlayback
TB,N,V_isVideoPlayback
externalEndpointsAvailable
TB,V_externalEndpointsAvailable
supportsShuffle
TB,N,V_supportsShuffle
supportsRepeat
TB,N,V_supportsRepeat
T@"NSObject<TVMusicPlayQueueDelegate>",W,N,V_delegate
lastPlayerResponse
T@"MPCPlayerResponse",R,N
currentPlayingItem
T@"MPCPlayerResponseItem",R,N
audioRouteName
isLocalDeviceQueue
isMusicAppQueue
playerState
Tq,R,N
currentPlayingElapsedTime
Td,R,N
currentPlayingDuration
audioRoute
T@"MPAVRoute",&,N
isInvalidRouteError
com.apple.sagad
com.apple.jalisco
purchase
media-kinds
feature-movie
tv-episode
TVMusicLibraryWillAddItemNotification
TVMusicLibraryWillAddItemNotificationUserInfoKeyAdamID
TVMusicLibraryWillAddGlobalPlaylistNotification
TVMusicLibraryDidAddItemNotification
TVMusicLibraryDidRemoveItemNotification
TVMusicLibraryUtilsErrorDomain
@24@?0@"MPMediaEntity"8Q16
identifiers
playlistGlobalID
v32@?0@"MPModelSong"8@"NSIndexPath"16^B24
sagaIDs
v16@?0@"MPModelObject"8
v32@?0@"MPModelPlaylistEntry"8q16^B24
com.apple.TVMusic.TVMusicContextMenuFactory.removeSongFromPlaylist
playlistIdentifiers
v32@?0@"MPModelPlaylistEntry"8@"NSIndexPath"16^B24
childrenIds
v24@?0@"NSDictionary"8@"NSError"16
com.apple.TVMusic.TVMusicLibraryUtilities
v24@?0@"<ICStorePlatformResponse>"8@"NSError"16
com.apple.TVMusic.TVMusicLibraryUtilities.addRemoveQueue
T@"TVMusicHUDController",R,N
avPlayer
T@"UINavigationController",&,N,V_navigationController
menuGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_menuGestureRecognizer
nowPlayingWallPaper
T@"UIView",&,N,V_nowPlayingWallPaper
TVMusicScreenSaverServiceErrorDomain
v32@?0@"MPModelAlbum"8@"NSIndexPath"16^B24
v16@?0@"UIImage"8
remotePhotoServerInterface
T@"<TVPhotoServerInterface>",&,N,V_remotePhotoServerInterface
syncObserverToken
T@"<NSObject>",&,N,V_syncObserverToken
TVMusicPlaylistStyleDefault
v16@?0^{CGContext=}8
Playlist Loader
v16@?0@"NSArray"8
Playlist
%@_%@
cancelled
TB,GisCancelled,V_cancelled
completionHandler
T@?,C,N,V_completionHandler
imageProxies
T@"NSArray",R,C,N,V_imageProxies
playlistStyle
T@"NSString",R,C,N,V_playlistStyle
scaleToSize
T{CGSize=dd},N,V_scaleToSize
upscaleAdjustment
Td,N,V_upscaleAdjustment
Td,N,V_cornerRadius
TVDurationValueTransformer
minutesFormatter
T@"NSDateComponentsFormatter",&,N,V_minutesFormatter
secondsFormatter
T@"NSDateComponentsFormatter",&,N,V_secondsFormatter
TVMusicCollectionViewMovieCellIdentifier
MusicLibraryTVShows
MusicLibraryMovies
v32@?0@"MPModelTVSeason"8@"NSIndexPath"16^B24
EpisodesCount
tvMoviesSelector
T@"UISegmentedControl",&,N,V_tvMoviesSelector
durationFormatter
T@"NSDateComponentsFormatter",R,N
playQueue.isRadioPlayback
np-button-add
np-button-context
np-button-lyrics
now_playing
musicNowPlayingViewController
T@"TVPMusicNowPlayingViewController",&,N,V_musicNowPlayingViewController
AgeGatePlayedItems
ratingWarningThreshold
ratingWarningTitle
ratingWarningText
isAgeGateEnabled
TB,N,V_isAgeGateEnabled
ratingThreshold
Tq,N,V_ratingThreshold
dialogTitle
T@"NSString",&,N,V_dialogTitle
dialogMessage
T@"NSString",&,N,V_dialogMessage
ContextMenuConfirmCancel
ContextMenuConfirmOK
ageGateInfo
T@"TVMusicAgeGateInfo",&,N,V_ageGateInfo
activityText
T@"NSString",C,N,V_activityText
activityIndicatorHidden
TB,N,GisActivityIndicatorHidden,V_activityIndicatorHidden
activityIndicatorDelay
Td,N,V_activityIndicatorDelay
AlbumSongCell
popularityStarThreshold
v24@?0@"SSLookupResponse"8@"NSError"16
Standard
Classical (new)
Classical (legacy)
MusicByComposer
%@. %@
ContextMenuRemoveFromLibrary
MusicLibraryAlbumPlayNext
MusicLibraryAlbumAddToUpNext
ContextMenuCreateStation
%@    
%ld    
T@"MPModelAlbum",&,N,V_album
tracks
T@"NSArray",&,N,V_tracks
showArtistNames
TB,N,V_showArtistNames
groupByClassicalWorks
indexesOfClassicalWorks
T@"NSMutableIndexSet",&,N,V_indexesOfClassicalWorks
trackDisplayMode
Tq,N,V_trackDisplayMode
popularityThreshold
T@"NSNumber",N,V_popularityThreshold
TVDeckImageViewReadyNotification
cycleInterval
Td,N,V_cycleInterval
transitionDuration
Td,N,V_transitionDuration
newDataTransitionDuration
Td,N,V_newDataTransitionDuration
T@"NSArray",C,N,V_artworkCatalogs
imageFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_imageFrame
deckViewParadeType
TQ,N,V_deckViewParadeType
social_hidden
%@-blur-%@
overlayImage
T@"UIImage",R,N,V_overlayImage
cachedTextRectForBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedTextRectForBounds
previousBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_previousBounds
previousNumberOfLines
Tq,N,V_previousNumberOfLines
cachedSizeThatFits
T{CGSize=dd},N,V_cachedSizeThatFits
previousTargetSize
T{CGSize=dd},N,V_previousTargetSize
icon_play_sm_mask
WatchedCheckmark
popularity-on
popularity-off
badge_explicit_mask
musicvideo-badge
floatingView
T@"_UIFloatingContentView",&,N,V_floatingView
cellHeight
ordinalVisible
TB,N,V_ordinalVisible
playIconVisible
TB,N,V_playIconVisible
musicBarsVisible
TB,N,V_musicBarsVisible
playbackItem
T@"MPModelObject",&,N,V_playbackItem
playbackContainer
T@"MPModelObject",&,N,V_playbackContainer
songType
Tq,N,V_songType
thumbnail
T@"TVImageProxy",&,N
thumbnailImage
title
T@"NSString",&,N,V_title
T@"NSString",&,N,V_artist
T@"NSString",&,N,V_album
heading
T@"NSString",&,N,V_heading
Td,N,V_duration
durationString
T@"NSString",&,N,V_durationString
isExplicit
TB,N,V_isExplicit
ordinalValue
TQ,N,V_ordinalValue
hasOrdinal
TB,N,V_hasOrdinal
fullWidthStyle
TB,N,V_fullWidthStyle
T@"NSNumber",&,N,V_popularity
T@"NSNumber",&,N,V_popularityThreshold
showPlayIconWhenFocused
TB,N,V_showPlayIconWhenFocused
enabled
TB,N,V_enabled
focusable
TB,N,V_focusable
thumbnailImageView
T@"TVImageView",R,N
thumbnailSize
T{CGSize=dd},R,N
isWatched
TB,N,V_isWatched
songIdentifier
T@"MPIdentifierSet",&,N,V_songIdentifier
MusicLibraryPlaylistsTitle
featureName
playlistVersionHash
parentPlaylistFolder
T@"MPModelPlaylist",&,N,V_parentPlaylistFolder
v16@?0@"MPModelSong"8
ContextMenuGoToAlbum
v16@?0@"MPModelAlbum"8
ContextMenuGoToArtist
ContextMenuAddToPlaylist
ContextMenuRemoveFromPlaylist
v24@?0@"MPModelPlaylist"8@"NSError"16
UnknownAlbum
ContextMenuConfirmDelete
ContextMenuLove
ContextMenuHate
ContextMenuPlayNext
ContextMenuAddToUpNext
ContextMenuLyrics
ContextMenuAddToLibrary
v28@?0B8@"NSArray"12@"NSError"20
v16@?0@"MPModelArtist"8
ContextMenuSubscribe
ContextMenuUnsubscribe
ContextMenuShuffle
ContextMenuGoToTVShow
ContextMenuGoToMovie
#T:[%@%p] #Warning #%@ : Error setting taste type %@ for song adamID %lld: %@ 
#T:[%@%p] #Warning #%@ : Error setting taste type %@ for music video adamID %lld: %@ 
#T:[%@%p] #Warning #%@ : Error setting taste type %@ for album adamID %lld: %@ 
#T:[%@%p] #Warning #%@ : Error setting taste type %@ for album adamID %@: %@ 
#T:[%@%p] #Warning #%@ : Error setting taste type %@ for item pid %lld: %@ 
v24@?0@"TVMusicLibraryCollectionViewCell"8@"UIImage"16
imageView
T@"UIImageView",&,N,V_imageView
placeholderImageView
T@"UIImageView",&,N,V_placeholderImageView
showImage
TB,N,V_showImage
imageShape
Tq,N,V_imageShape
subTitle
T@"NSString",&,N,V_subTitle
maximumImageHeight
Td,N,V_maximumImageHeight
artworkCatalog
T@"MPArtworkCatalog",&,N,V_artworkCatalog
ComposersCellIdentifier
MusicLibraryComposers
TVSStateMachine
CLOUD
TVCollectionViewDidScrollNotification
overlayLayoutView
T@"UIView",R,N,V_overlayLayoutView
T@"<TVCollectionViewDelegate>",W,D,N
TVMusicPlayerLeaseDidEndNotification
TVMusicPlaybackContainerChangedNotification
TVMusicPlayerErrorNotificationGenericObjectKey
com.apple.TVMusicPlayer._mediaItemObservationQueue
playerItem.loadedTimeRanges
waitsAfterPreparingMediaItems
localPlayback
name
T@"<TVPPlaybackDelegate>",W,N
asyncDelegate
T@"<TVPASyncPlaybackDelegate>",W,N
T@"TVPPlaylist",&,N
currentMediaItem
T@"NSObject<TVPMediaItem>",&,N
currentMediaItemPreparedForLoading
currentMediaItemInitialLoadingComplete
currentMediaItemHasVideoContent
currentMediaItemIsStreaming
currentMediaItemPresentationSize
currentMediaItemHasDates
T@"TVPPlaybackState",R,N
errorBehavior
Tq,N
interactive
TB,N
rate
rateUsedForPlayback
elapsedTime
playbackDate
T@"NSDate",C,N
isLive
muted
volume
Tf,N
chapterCollections
T@"NSArray",R,N
currentChapterCollection
T@"TVPChapterCollection",&,N
currentChapter
T@"TVPChapter",R,N
currentInterstitial
T@"TVPInterstitial",R,N
bufferedTimeRange
T@"TVPTimeRange",R,N
seekableTimeRange
seekableDateRange
T@"TVPDateRange",R,N
forwardPlaybackEndTime
reversePlaybackEndTime
mediaItemEndAction
audioOptions
selectedAudioOption
T@"TVPAudioOption",&,N
subtitleOptions
selectedSubtitleOption
T@"TVPSubtitleOption",&,N
maximumBitRate
preventsSleepDuringVideoPlayback
updatesMediaRemoteInfoAutomatically
limitReadAhead
T@"AVPlayer",R,N
playQueue
T@"TVMusicPlayQueue",&,N,V_playQueue
playbackEngine
T@"MPCPlaybackEngine",&,N,V_playbackEngine
T@"NSString",C,N,V_name
elapsedTimeObservers
T@"NSMutableArray",&,N,V_elapsedTimeObservers
T@"AVPlayer",&,N,V_avPlayer
elapsedTimeJumpInProgress
TB,N,V_elapsedTimeJumpInProgress
targetElapsedTime
Td,N,V_targetElapsedTime
T@"TVPPlaybackState",&,N,V_state
TB,N,VcurrentMediaItemInitialLoadingComplete
isStopped
TB,N,V_isStopped
TB,N,V_isLive
isLoading
TB,N,V_isLoading
T@"TVPTimeRange",&,N,V_bufferedTimeRange
currentAVItem
T@"MPAVItem",&,N,V_currentAVItem
identifiersForLastPlayedContainer
T@"MPIdentifierSet",&,N,V_identifiersForLastPlayedContainer
identifiersForLastEndedPlaybackItem
T@"MPIdentifierSet",&,N,V_identifiersForLastEndedPlaybackItem
fallbackPlaybackIntent
T@"MPCPlaybackIntent",&,N
T@"<TVPASyncPlaybackDelegate>",W,N,VasyncDelegate
Tq,N,VerrorBehavior
TB,N,Vinteractive
Td,N,VrateUsedForPlayback
TB,N,V_waitsAfterPreparingMediaItems
T@"NSDate",C,N,VplaybackDate
TB,N,Vmuted
Tf,N,Vvolume
T@"NSArray",R,N,VchapterCollections
T@"TVPChapterCollection",&,N,VcurrentChapterCollection
T@"TVPChapter",R,N,VcurrentChapter
T@"TVPInterstitial",R,N,VcurrentInterstitial
Td,R,N,VforwardPlaybackEndTime
Td,R,N,VreversePlaybackEndTime
Tq,N,VmediaItemEndAction
T@"TVPAudioOption",&,N,VselectedAudioOption
T@"NSArray",R,N,VsubtitleOptions
T@"TVPSubtitleOption",&,N,VselectedSubtitleOption
Td,N,VmaximumBitRate
TB,N,VpreventsSleepDuringVideoPlayback
TB,N,VupdatesMediaRemoteInfoAutomatically
TB,N,VlimitReadAhead
ICloudSignInButton
signInLabel
T@"UILabel",&,N,V_signInLabel
signInButton
T@"UIButton",&,N,V_signInButton
T@"NSString",C,N,V_title
T@"NSString",C,N,V_message
actionPromptMessage
T@"NSString",C,N,V_actionPromptMessage
sampleImage
T@"UIImage",&,N,V_sampleImage
alphaOnImage
Td,N,V_alphaOnImage
T@"<TVSignInLandingViewDelegate>",W,N,V_delegate
bounds
BarAnimation_%ld
musicBarsStyle
TQ,N
library
recently_added
playlists
artists
albums
songs
genres
composers
compilations
videos
shows
%@ / %@
currentContext
TQ,V_currentContext
currentSubcontext
TQ,V_currentSubcontext
currentPAFFeatureName
T@"NSString",R
_imageTintColor
T@"UIColor",&,N,S_setImageTintColor:,V__imageTintColor
_imageViewWidth
Td,N,S_setImageViewWidth:,V__imageViewWidth
rendersImageAsTemplates
TB,N,V_rendersImageAsTemplates
allowsFocus
TB,N,V_allowsFocus
TVMusicPlaybackStatusChanged
TVMusicPlaybackStatusController
playbackState
Tq,N,V_playbackState
playingSection
T@"MPModelGenericObject",&,N,V_playingSection
playingItem
T@"MPModelGenericObject",&,N,V_playingItem
playerRequestController
T@"MPRequestResponseController",&,N,V_playerRequestController
previewView
T@"UIView",&,N,V_previewView
fadeThroughPreviews
TB,N,V_fadeThroughPreviews
autoUpdatePreviewViewControllerBlock
T@?,C,N,V_autoUpdatePreviewViewControllerBlock
previewViewController
T@"UIViewController",&,N,V_previewViewController
tableViewWidth
Td,N,V_tableViewWidth
tableViewPadding
T{UIEdgeInsets=dddd},N,V_tableViewPadding
previewViewPadding
T{UIEdgeInsets=dddd},N,V_previewViewPadding
previewOnRightSide
TB,N,V_previewOnRightSide
backdropViewMode
TQ,N,V_backdropViewMode
bannerView
T@"UIView",&,N,V_bannerView
tableView
T@"TVTableView",&,D,N
headerView
T@"UIView",&,N,V_headerView
previewPaused
TB,N,GisPreviewPaused
shouldAnimatePreviewView
shouldHideBackdropView
backdropViewHideStateNeedsUpdatingBlock
T@?,C,N
v24@?0@"_TVImageLoaderQueue"8@"UIImage"16
preloadCount
Tq,N,V_preloadCount
preloadCompletionHandler
T@?,C,N,V_preloadCompletionHandler
queueSize
Tq,N,V_queueSize
concurrentDownloadCount
Tq,N,V_concurrentDownloadCount
nextIndex
Tq,N,V_nextIndex
finishedImages
T@"NSMutableArray",&,N,V_finishedImages
pendingArtworkCatalogs
T@"NSMutableArray",&,N,V_pendingArtworkCatalogs
loadingArtworkCatalogs
T@"NSMutableArray",&,N,V_loadingArtworkCatalogs
randomized
TB,N,GisRandomized,V_randomized
pauseImageLoad
TB,N,V_pauseImageLoad
mediaType
Tq,N,V_mediaType
identifier
T@"NSNumber",&,N,V_identifier
containerType
Tq,N,V_containerType
containerStoreID
T@"NSString",&,N,V_containerStoreID
containerCloudID
T@"NSString",&,N,V_containerCloudID
artistOrCuratorName
T@"NSString",&,N,V_artistOrCuratorName
containerName
T@"NSString",&,N,V_containerName
artistStoreID
T@"NSNumber",&,N,V_artistStoreID
storeID
T@"NSString",&,N,V_storeID
isInLibrary
TB,N,V_isInLibrary
songHasStoreLyrics
TB,N,V_songHasStoreLyrics
playlistIsSubscribed
TB,N,V_playlistIsSubscribed
librarySongLyrics
T@"NSString",&,N,V_librarySongLyrics
artworkURL
T@"NSURL",&,N,V_artworkURL
storeArtworkDictionary
T@"NSDictionary",&,N,V_storeArtworkDictionary
artworkImageProxy
T@"TVImageProxy",&,N,V_artworkImageProxy
playEvent
T@"MPModelPlayEvent",&,N,V_playEvent
T@"NSString",&,N,V_featureName
recommendationData
T@"NSData",&,N,V_recommendationData
isCompilationAlbum
TB,N,V_isCompilationAlbum
onRadioRecentStationsChanged
onMusicLibraryInitialized
onMusicLibraryUpdated
onSubscriptionStatusChanged
onStorePushNotification
onSubscriptionRequired
radio-station-id
artwork-url
seed-store-id
tvmusic
showAlbum
albumID
songID
showArtist
artistID
showPlaylist
playlistID
showTVShow
TVEpisodeID
showMovie
movieID
success
error
item
com.apple.itunesstored
isFreeRadioStation
@24@?0@"RadioStation"8Q16
#T:[%@%p] #Notice #%@ : Completed recent radio stations refresh with error: %@ 
v16@?0@"NSDictionary"8
persistentIDs
No cloud library
@24@?0@8Q16
Albums are not yet supported for this method. For now query the album's songs with queryMusicLibraryForSongsWithAdamIDs
Unsupported kind "%@"
Albums are not yet supported for this method. For now remove the album's songs with removeItemsFromMusicLibraryWithSagaIDs
Invalid persistentID "%@"
type
v16@?0@"NSURL"8
v16@?0@?<@"UIViewController"@?>8
@"TVMusicLibraryAlbumDetailViewController"8@?0
@"TVMusicLibraryPlaylistDetailViewController"8@?0
@"UIViewController"8@?0
@"TVMusicLibraryEpisodesViewController"8@?0
@"TVMusicLibrarySeasonsViewController"8@?0
GoToAlbum
GoToArtist
GoToMusicVideo
RemoveFromRecentlyPlayed
Shuffle
Queue
PlayNext
AddToUpNext
GoToTVShow
GoToMovie
commandToHandle
v20@?0B8@"NSString"12
artistName
artistId
isCompilation
curatorName
curatorId
isPlaylistSubscribed
addedMenuItems
displayText
menuPosition
yyyy-MM-dd'T'HH:mm:ss
bookmarkTime
bookmarkTimestamp
hasBeenPlayed
isMarkedAsUnwatched
results
sortOrder
@"NSDictionary"24@?0@"RadioStation"8Q16
subscribed
episodeDescription
episodeNumber
showName
radioStation
v16@?0@"JSContext"8
%p-%ld
isFreeContent
musicAppAPIVersion
isMusicLibraryInitialized
TB,R
isProcessingPlayCommand
TB,V_isProcessingPlayCommand
clientData
artwork
children
collectionName
kind
tvShow
songsAndMusicVideos
urlPlayback
urlVideoPlayback
localTrack
none
hasLyrics
contentRatingsBySystem
value
albumPersistentID
ClientDataId
ClientDataKind
ClientDataMPArtwork
action
playNow
playNext
addToUpNext
shuffle
playIndex
playbackReporting
containerID
getArtworkFileURL
ErrorNoMediaItems
ErrorUnknownAction
ErrorPlaybackInProgress
radio
%llu
SongCell
MusicLibrarySongsTitle
collectionView
T@"TVCollectionView",&,N,V_collectionView
T@"TVMusicLibraryHeaderView",&,N,V_headerView
libraryRequest
T@"MPModelLibraryRequest",&,N,V_libraryRequest
lastReceivedResponse
T@"MPModelResponse",&,N,V_lastReceivedResponse
focusToIndexPath
T@"NSIndexPath",&,N,V_focusToIndexPath
T@"MPSectionedCollection",&,N,V_songs
sectionedCollectionDataSource
T@"<MPLazySectionedCollectionDataSource>",&,N,V_sectionedCollectionDataSource
lastPlayedSortDescriptors
T@"NSArray",C,N,V_lastPlayedSortDescriptors
regular
emphasized
thin
light
ultralight
medium
semibold
bold
heavy
black
TVCrossfadeViewWillDisplayNotification
padding
T{UIEdgeInsets=dddd},N,V_padding
crossfadePeriod
Td,N,V_crossfadePeriod
crossfadeDuration
Td,N,V_crossfadeDuration
text
T@"NSString",C,N,V_text
T@"UIImage",&,N,V_image
buttonStyle
circular
TB,N,V_circular
TVScrollingParadeViewWillDisplayNotification
multiply
inputColor
position.x
positionAnimation
filters.multiply.inputColor
undimmingAnimation
dimmingAnimation
paused
TB,N,GisPaused,V_paused
width
height
TVConfigureForMetrics
data-is-private-mask
false
MusicLibraryRecentlyAdded
MusicLibraryShowsTitle
v28@?0@"MPModelLibraryRequest"8B16@"NSArray"20
TVMusicPlaybackHelper
TVMusicLibrarySortCategorySongs
TVMusicLibrarySortCategoryMusicVideos
TVMusicLibrarySortCategoryPlaylists
TVMusicLibrarySortCategoryAlbums
TVMusicLibrarySortCategoryAlbumsScoped
TVMusicLibrarySortCategoryMusicVideosScoped
MusicLibrarySortButtonTitle
MusicLibrarySortTypeTitle
MusicLibrarySortTypeArtist
MusicLibrarySortTypePlaylistType
MusicLibrarySortTypeDateAdded
MusicLibrarySortTypeAlbumYearAscending
MusicLibrarySortTypeAlbumYearDescending
MusicLibrarySortSelectionTitle
MPIdentifier_%@
MPObject_%@
TVMusicArtworkLoaderErrorDomain
v24@?0@8@"UIImage"16
|1|%@
|2|%@
|3|%@
|4|%@
|5|%@
|6|%@
|7|%@
|8|%@
|9|%@
presentationViewController
T@"UIViewController",R,N
HUDConfirmationAddedToLibraryTitle
NotificationsCheck
HUDConfirmationPlayNextTitle
HUDConfirmationPlayNextMessage
NotificationsPlayNext
HUDConfirmationPlayLaterTitle
HUDConfirmationPlayLaterMessage
NotificationsPlayLater
HUDConfirmationLovedTitle
HUDConfirmationLovedMessage
NotificationsLoved
HUDConfirmationDislikedTitle
HUDConfirmationDislikedMessage
NotificationsDisliked
window
T@"_TVMusicHUDWindow",W,N,V_window
titleText
T@"NSString",&,N,V_titleText
messageText
T@"NSString",&,N,V_messageText
systemInputViewController
T@"UISystemInputViewController",R,N,V_systemInputViewController
T@"<TVTextEntryControllerDelegate>",W,N,V_delegate
textField
T@"UITextField",R,N,V_textField
textFieldHeaderLabel
T@"UILabel",R,N,V_textFieldHeaderLabel
topAccessoryView
T@"UIView",&,N,V_topAccessoryView
bottomAccessoryView
T@"UIView",&,N,V_bottomAccessoryView
textFieldAllowsFocus
titleView
T@"UILabel",&,N,V_titleView
messageView
T@"UILabel",&,N,V_messageView
T@"TVImageView",&,N,V_imageView
T@"NSAttributedString",&,N,V_title
T@"NSAttributedString",&,N,V_message
submitButton
T@"UIButton",&,N,V_submitButton
MusicLibraryRecentlyAddedSubtitleVariousArtists
MusicLibraryRecentlyAddedSubtitlePlaylist
MusicLibraryRecentlyAddedSubtitleTVShow
progressPercent
Tf,N,V_progressPercent
TVMusicCollectionViewTextHeaderIdentifier
TVMusicCollectionViewBlankHeaderIdentifier
TVMusicLibraryArtistDetailViewController
artistButton
T@"UIControl",&,N,V_artistButton
footerView
T@"UIView",&,N,V_footerView
musicVideosResponse
T@"MPModelLibraryResponse",&,N,V_musicVideosResponse
musicPlaylistLockup
musicPlaylistTitleCell
data-name
position
v28@?0@"UIImage"8@"NSError"16B24
subtitle
@24@?0@"UIColor"8Q16
T@"NSArray",&,N,V_imageViews
createdImageViews
TB,N,V_createdImageViews
titleBlockView
T@"UIView",&,N,V_titleBlockView
T@"UILabel",&,N,V_subtitleLabel
titleBackgroundImageView
T@"TVImageView",&,N,V_titleBackgroundImageView
T@"NSString",&,N,V_playlistID
titleGradientLayer
T@"CALayer",&,N,V_titleGradientLayer
typeDisplayName
numberOfEpisodes
v32@?0@"MPModelObject"8q16^B24
v32@?0@"MPModelLibrarySearchScope"8q16^B24
com.apple.TVMusic.queryRecentlyAdded.serialQueue
index
v28@?0@"NSString"8@"NSError"16B24
v32@?0@"MPModelGenericObject"8@"NSIndexPath"16^B24
q24@?0@"NSDictionary"8@"NSDictionary"16
requestedID
v24@?0@"MPExportableArtworkProperties"8@"NSError"16
TVMusicCollectionViewCellIdentifier
v16@?0@"MPSectionedCollection"8
mpResults
T@"MPSectionedCollection",&,N,V_mpResults
totalNumberOfItems
Tq,N,V_totalNumberOfItems
cellIdentifier
T@"TVMusicLibraryHeaderView",R,N,V_headerView
showIndexBarTitles
TB,N,V_showIndexBarTitles
LibraryMenuShuffle
LibraryMenuRecentlyAdded
LibraryMenuPlaylists
LibraryMenuArtists
LibraryMenuAlbums
LibraryMenuSongs
LibraryMenuItemShows
LibraryMenuMusicVideos
LibraryMenuGenres
LibraryMenuComposers
LibraryMenuCompilations
MusicLibraryMenuHeading
top-menu-shuffle-mask
menuItems
T@"NSArray",R,C,N,V_menuItems
currentMenuContext
TQ,R,N,V_currentMenuContext
TVMusicMediaItemMetadataArtistID
TVMusicMediaItemMetadataMPIdentifierSet
TVMusicMediaItemMetadataUserLyrics
TVMusicMediaItemMetadataMPModelObject
TVMusicMediaItemMetadataSagaID
TVMusicMediaItemMetadataShouldSkipVideo
TVMusicMediaItemMetadataMPModelPlayEvent
TVMusicTableViewCellIdentifier
@"UIViewController"16@?0@"NSIndexPath"8
tableHeaderLabel
T@"UILabel",&,N,V_tableHeaderLabel
playPauseRecognizer
T@"TVInteractionGestureRecognizer",&,N,V_playPauseRecognizer
tableHeaderView
T@"UIView",&,N,V_tableHeaderView
headingVerticalOffset
Td,N,V_headingVerticalOffset
MusicLibraryArtistsTitle
airtunesd
T@"<TVMusicAirplayDetectorDelegate>",W,N,V_delegate
isAirplayReceiver
initialize called, but library is already initialized.
Can't sync database: user is not logged in.
Account has changed; deleting old library database.
Deleted music library: success = %d
Syncing database.
Syncing Jalisco database
Jalisco synced, sync complete.
Sync complete.
Library sync failed
Jalisco sync failed
Cloud library synced, success = %@
Cloud library initialized with database revision %u.
Cloud library sync failed
Ignoring database delete: already in progress.
Starting Jalisco update task
Stopping Jalisco update task
Unable to add song [%@] to playlist [%@], error: %@
Unable to add album [%@] to playlist [%@], error: %@
Unable to add playlist [%@] to playlist [%@], error: %@
Unsupported object type for adding to playlist: %@
Timed out getting songs in playlist "%@"
Timed out getting songs in album "%@"
Found nil while enumerating %s
Unable to move item at indexPath %@ to after indexPath %@
Error performing change to item (%ld) request: %{public}@
Unable to perform change to item (%ld) command: No command request is available.
Unable to perform change to item (%ld) command: No item is available.
Error performing set elapsed time to position %{public}g
Unable to perform set elapsed time command: No command request is available.
Attempt to set shuffle enabled %d
Error setting shuffle type: %{public}@
Shuffle command not available
_shuffleEnabled set %d to %d
Attempt to set repeat type %li
Error setting repeat type: %{public}@
Repeat command not available
_repeatMode set %li to %li
Error replacing queue with playback intent: %@, error: %{public}@
Unable to replace queue; tracklist is nil
Queue reset command (replaceWithPlaybackIntent) not available
Error clearing queue: %{public}@
Successfully cleared play queue.
Queue reset command (clear) not available
Error inserting into queue with playback intent: %@, error: %{public}@
Queue insert command not available
Queue insert command not found on tracklist!
Unable to insert into queue; tracklist is nil
Cancelling timeout for invalid route error due to valid response received
Got invalid route error; scheduling timeout to revert to local system route
Timeout fired for invalid route error; switching to local system route
Error setting active system route: %{public}@
Unable to perform command "%{public}@" because no player response is available.
Performing player command "%{public}@"
Error performing %{public}@ request: %{public}@
Successfully completed player command "%{public}@"
Unable to perform %{public}@ request: No queue command is available.
Creating empty play event from generic object [%{public}@]
Got nil player response.
Got response with %ld items, index = %ld, elapsed time for "%{public}@" is %g
Showing "Currently Playing" status for audio app [%{public}@]
   > Tracklist changed from %{public}ld items to %{public}ld items
   > Changed playing item: = %@, content item ID = %@
   > Changed play state from %{public}ld to %{public}ld
Got a valid player response, but there is no play queue delegate!.
Player path changed; sending TVMusicPlayQueuePlayerPathChangedNotification
Cloud client received Jalisco push notification, new DB revision [%@]
Cloud client received Saga push notification, new DB revision [%@]
Failed to remove song from playlist: %{public}@
Could not find song %{public}@ at index %{public}ld in playlist %{public}@
Unable to add album %@ to playlist %@: could not get songs in album.
Unable to add Playlist %@ to playlist %@: could not get playlist entries.
Unexpected object in metadata dictionary childrenIDs: %@.
Can't get item IDs in store response for playlist %@.
Unable to get items for playlist %@.
Can't get songs for album [%@]: no songs found in library.
Unable to get items for album %@.
TVMusicScreenSaverService: photoAssets request
TVMusicScreenSaverService: registerRemotePhotoServer: %@
TVMusicScreenSaverService: got %ld albums
TVMusicScreenSaverService: got %ld artwork catalogs
TVMusicScreenSaverService: No artwork available for screensaver.
TVMusicScreenSaverService: responding with %ld photo assets
TVMusicAgeGateController: Age gate threshold is provided in URL bag (%ld), but there is no dialog title or message.
Showing age gate warning
Age gate warning cancelled
Age gate warning accepted
TVMusicAgeGateController: Can't save nil identifier
Unable to create menu; invalid persistent ID.
Unable to create menu for PID=%@: unsupported item type %ld
Did not find playlist entry %{public}@ in playlist %{public}@ at position %{public}ld
Can't get artist information for album [%@]
Failed to remove song from playlist; error: %{public}@
Removed song "%{public}@" from playlist "%{public}@".
Can't remove item because it was not found in library. PersitentID: %lld
#Warning #SYSTEM No adamID for album (%@), can't add it.
Failed to add album (%@) to library: error=%@.
#Warning #SYSTEM No adamID for album (%@), can't delete it.
Can't create context meny for add [%@] to playlist.
Error subscribing to playlist ID %@: %@
Failed to add song (adamID=%@) to library: error=%@.
Can't remove item because it was not found in library. Identifiers: %@
Can't create add to library menu item for adamID %llu
Can't create remove from library menu item for adamID %llu, media type %ld
TVMusicPlayer: setting avPlayerItem.avKitMediaType to AVKitMediaTypeMusicVideo
TVMusicPlayer: setting avPlayerItem.avKitMediaType to AVKitMediaTypeUnspecified
Playback error: %{public}@ for item: %@
TVMusicPlayer: setting avPlayer.allowsVideoPlaybackWhileInBackground = YES
TVMusicPlayer: setting avPlayer.allowsVideoPlaybackWhileInBackground = NO
TVMusicPlayer: item playback ended; setting avPlayer.allowsVideoPlaybackWhileInBackground = NO
Unknown MPCPlayerState: %ld
Setting end-bookmark for item %@
Received playItems command while still processing a play command
Attempting to play null items - will be ignored
A playIndex of %{public}ld was requested, but playIndex is not supported for library album playback.
Could not find album in library with persistent ID %{public}lld
A playIndex of %{public}ld was requested, but playIndex is not supported for library playlist playback.
Could not find playlist in library with persistent ID %{public}lld
Can't find item at index %ld in playlist or album [%{public}@]
No store ID found for type %{public}@, name = "%@"
Ignoring %{public}ld play items, playing collection at index %{public}ld.
Ignoring %{public}ld play items, playing specified collection instead.
Ignoring %{public}ld library/store items, playing %{public}ld media clip items.
Ignoring %{public}ld library items, playing %{public}ld store items.
TVMusicRestrictionUI returned error: %{public}@
Unable to play anything from play items: %@
Unhandled generic object: %@
Javascript method name "%@" does not exist
Unknown item type for playback
Unsupported item type for playback: %ld
Unable to play item due to cancelled age gate warning
Error playing back with playbackIntent: %@: %@
MPCPlaybackIntent is nil!
Error picking route for airplay playback: %@
Unknown playback type
Playing %ld songs by artist.
No artist albums to play, attempting to play music videos.
Attempted to play artist songs, but there is nothing to play.
Can't perform query; cloud data client is not connected and synced.
Ignoring recently added item: %@.
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>1755971667</string>
<key>adi-client</key>
<string>572356293</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.RemovePeer</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.accounts.inactive.fullaccess</key>
<true/>
<key>com.apple.appletv.pbs.allow-custom-playpause</key>
<true/>
<key>com.apple.appletv.pbs.allow-custom-volume</key>
<true/>
<key>com.apple.appletv.pbs.bulletin-service-access</key>
<true/>
<key>com.apple.appletv.pbs.now-playing-view-service</key>
<true/>
<key>com.apple.atvcached.client</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allow-video-playback-in-background</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.coremedia.allow-mpeg4streaming</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.itunescloud.delegate-account-store</key>
<true/>
<key>com.apple.itunescloud.delegation-provider</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.managedconfiguration.feature-setting.allowExplicitContent</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.mediaremote.allow</key>
<array>
<string>TVPairing</string>
</array>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.iad.background-client</key>
<true/>
<key>com.apple.private.iad.privileged-client</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/TVSUIWallpaper/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.ak.anisette.xpc</string>
<string>com.apple.askpermissiond</string>
<string>com.apple.familycircle.agent</string>
<string>com.apple.hsa-authentication-server</string>
<string>com.apple.mediaartworkd.xpc</string>
<string>com.apple.MediaPlayer.MPRadioControllerServer</string>
<string>com.apple.rtcreportingd</string>
<string>com.apple.storebookkeeperd.xpc</string>
<string>com.apple.atc.xpc</string>
<string>com.apple.atc.xpc.downloadprogress</string>
<string>com.apple.atc.xpc.runkeeplocaltask</string>
<string>com.apple.PairingManager</string>
<string>com.apple.itunescloudd.playactivity</string>
<string>com.apple.nanoprefsync</string>
<string>com.apple.itunescloud.delegation-provider</string>
<string>com.apple.itunescloud.delegate-account-store</string>
<string>com.apple.coremedia.endpointpicker.xpc</string>
<string>com.apple.coremedia.routediscoverer.xpc</string>
<string>com.apple.coremedia.routingcontext.xpc</string>
<string>com.apple.coremedia.endpointremotecontrolsession.xpc</string>
<string>com.apple.PairingManager</string>
<string>com.apple.itunescloud.contenttaste</string>
</array>
<key>com.apple.smoot.subscriptionservice</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>com.apple.tv.api</key>
<array>
<string>iTunes</string>
</array>
<key>com.apple.tvmlkit.private</key>
<true/>
<key>fairplay-client</key>
<string>1888082492</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.MediaRemote.pairing</string>
</array>
</dict>
</plist>
