AzrM
TVIAssetIdentifier
v16@?0@"NSNotification"8
v12@?0I8
-[TVIMainViewController _swipeLeftAction:]
-[TVIMainViewController _swipeRightAction:]
-[TVIMainViewController viewServiceBeginPresentationWithOptions:]
animationDuration
v8@?0
-[TVIMainViewController viewServiceEndPresentationWithOptions:completion:]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v32@?0@"TVIAsset"8Q16^B24
@"TVIAsset"16@?0@"NSString"8
v32@?0@8Q16^B24
Night
Default
assetManager
T@"TVIAssetManager",&,N,V_assetManager
daylightCalculator
T@"TVIDaylightCalculator",&,N,V_daylightCalculator
playbackPausedWhileScreenSaverIsUp
TB,N,V_playbackPausedWhileScreenSaverIsUp
nowPlayingStateObserver
T@,&,N,V_nowPlayingStateObserver
backgroundView
T@"TVIBackgroundView",&,N,V_backgroundView
interactionEnabled
TB,N,GisInteractionEnabled,V_interactionEnabled
mediaItemToAssetMap
T@"NSMapTable",&,N,V_mediaItemToAssetMap
presentationEnded
TB,N,V_presentationEnded
leftSwipeRecognizer
T@"UISwipeGestureRecognizer",&,N,V_leftSwipeRecognizer
rightSwipeRecognizer
T@"UISwipeGestureRecognizer",&,N,V_rightSwipeRecognizer
TVIUserDefaultsKeyPreviouslyDownloadedAssetTimeOfDay
Download_Timestamp_%@
StoreDemo
com.apple.TVIdleScreen.TVIMainViewController.workQ
com.apple.purplebuddy
v16@?0@"TVIMetadata"8
TVBuddyCompletedSuccessfully
v24@?0@"NSURL"8@"NSError"16
assetDownloadManager
T@"TVIAssetDownloadManager",&,N,V_assetDownloadManager
downloadingAssetsSet
T@"NSMutableSet",&,N,V_downloadingAssetsSet
nextAssetDownloadTimer
T@"NSObject<OS_dispatch_source>",&,N,V_nextAssetDownloadTimer
activeAssetCache
T@"TVIAssetCache",W,N,V_activeAssetCache
customerAssetCache
T@"TVIAssetCache",&,N,V_customerAssetCache
retailAssetCache
T@"TVIAssetCache",&,N,V_retailAssetCache
assetIdentifierToCacheMap
T@"NSMutableDictionary",&,N,V_assetIdentifierToCacheMap
metadataManager
T@"TVIMetadataManager",&,N,V_metadataManager
metadata
T@"TVIMetadata",&,N,V_metadata
screensaverPreferencesObserver
T@,&,N,V_screensaverPreferencesObserver
setupPreferencesObserver
T@,&,N,V_setupPreferencesObserver
internetAvailabilityObserver
T@,&,N,V_internetAvailabilityObserver
workQ
T@"NSObject<OS_dispatch_queue>",&,N,V_workQ
TVIDaylightCalculatorDidUpdateLocationNotification
Location update failed: %@
isDaylight
TB,R,N
nextSunriseDate
T@"NSDate",R,C,N
nextSunsetDate
PurgeableVideos
TVIAssetCache_Timestamp_%@
v32@?0@"NSString"8@"NSURL"16^B24
v24@?0@"NSURL"8^B16
B24@?0@"NSURL"8@"NSError"16
q24@?0@8@16
v32@?0@"NSString"8Q16^B24
%@.%@
v16@?0@"NSError"8
assetToURLMap
T@"NSMutableDictionary",&,N,V_assetToURLMap
internalProtectedAssets
T@"NSMutableSet",&,N,V_internalProtectedAssets
protectedAssets
T@"NSCountedSet",&,N,V_protectedAssets
protectedDirectory
T@"NSURL",&,N,V_protectedDirectory
purgeableDirectory
T@"NSURL",&,N,V_purgeableDirectory
guaranteedAssetLimit
TQ,N,V_guaranteedAssetLimit
v16@?0@"AVAudioSession"8
window
T@"UIWindow",&,N
T@"UIWindow",&,N,V_window
EnableInteraction
TVIIgnoreTimeOfDay
TVICurrentTimeOfDay
TVIRefreshTimeIntervalOverride
TVICustomerMetadataURL
TVIAssetIdentifierOverride
InternalBuild
isInteractionEnabled
ignoreTimeOfDay
currentTimeOfDay
T@"NSString",R,N
refreshTimeInterval
T@"NSNumber",R,N
customerMetadataURL
T@"NSURL",R,N
initialPlaybackAssetIdentifier
version
TQ,N,V_version
initialAssetCount
TQ,N,V_initialAssetCount
assets
T@"NSArray",&,N,V_assets
sha1Hash
T@"NSData",&,N,V_sha1Hash
%@ identifier '%@', remoteURL '%@'
identifier
T@"NSString",&,N,V_identifier
remoteURL
T@"NSURL",&,N,V_remoteURL
startTime
Td,N,V_startTime
timeOfDay
Tq,N,V_timeOfDay
TVIUserDefaultsKeyLastRefreshDate
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
concurrentDownloadsSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,N,V_concurrentDownloadsSemaphore
downloadSession
T@"NSURLSession",&,N,V_downloadSession
downloadTasks
T@"NSHashTable",&,N,V_downloadTasks
com.apple.TVIdleScreen.TVIMetadataLoader.cacheQ
com.apple.TVIdleScreen.TVIMetadataLoader.updateQ
v16@?0@"NSData"8
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
state
TQ,N,V_state
localURL
T@"NSURL",C,N,V_localURL
remoteURLBlock
T@?,C,N,V_remoteURLBlock
T@"TVIMetadata",&,V_metadata
cacheQ
T@"NSObject<OS_dispatch_queue>",&,N,V_cacheQ
sessionID
T@"NSUUID",&,V_sessionID
updateHandler
T@?,C,V_updateHandler
updateQ
T@"NSObject<OS_dispatch_queue>",&,N,V_updateQ
remoteFetchTimer
T@"NSObject<OS_dispatch_source>",&,N,V_remoteFetchTimer
remoteFetchTask
T@"NSURLSessionDataTask",W,V_remoteFetchTask
urlBagObserver
T@,&,N,V_urlBagObserver
internetAvailableObserver
T@,&,N,V_internetAvailableObserver
aerialScreensaverSources
com.apple.TVIdleScreen.TVIMetadataManager.modeQ
com.apple.TVIdleScreen.TVIMetadataManager.updateQ
entries.json
@"NSURL"8@?0
retail.json
customerMetadataLoader
T@"TVIMetadataLoader",&,N,V_customerMetadataLoader
retailMetadataLoader
T@"TVIMetadataLoader",&,N,V_retailMetadataLoader
modeQ
T@"NSObject<OS_dispatch_queue>",&,N,V_modeQ
mode
currentMediaItemInitialLoadingComplete
-[TVIBackgroundView play]
-[TVIBackgroundView pause]
-[TVIBackgroundView togglePlayPause]
-[TVIBackgroundView next]
v16@?0q8
-[TVIBackgroundView addMediaItem:]
-[TVIBackgroundView removeMediaItem:]
v12@?0B8
player
T@"TVPPlayer",R,N,V_player
videoView
T@"TVPVideoView",R,N,V_videoView
shroudView
T@"UIView",R,N,V_shroudView
playbackEndTimeObserverToken
T@,&,N,V_playbackEndTimeObserverToken
delegate
T@"<TVIBackgroundViewDelegate>",W,N,V_delegate
mediaItems
T@"NSArray",R,N
currentMediaItem
T@"TVPURLMediaItem",R,N
nextMediaItem
accessibilityLabel
night
%@-%@
initWithNibName:bundle:
sharedInstance
alloc
init
strongToStrongObjectsMapTable
defaultCenter
_mediaRemotePlaybackApplicationStateDidChange
addObserverForName:object:queue:usingBlock:
removeObserver:
dealloc
mainScreen
bounds
initWithFrame:
blackColor
setBackgroundColor:
setView:
isInteractionEnabled
_swipeLeftAction:
initWithTarget:action:
numberWithInteger:
arrayWithObjects:count:
setAllowedTouchTypes:
setAllowedPressTypes:
setDirection:
addGestureRecognizer:
setLeftSwipeRecognizer:
_swipeRightAction:
setRightSwipeRecognizer:
_leftAction:
_rightAction:
_playPauseTapButtonAction:
_selectAction:
state
togglePlayPause
playbackPausedWhileScreenSaverIsUp
deactivateScreenSaver
_mediaPlaybackStateWithCompletion:
class
backgroundView
nextMediaItem
_dequeueMediaItem:
currentMediaItem
_assetForMediaItem:
_queueNextPlayableAssetBeforeAsset:
next
view
setDelegate:
addSubview:
_initialAsset
_queueAsset:
_queueNextPlayableAssetAfterAsset:
tvs_numberForKey:
doubleValue
play
leftSwipeRecognizer
setEnabled:
rightSwipeRecognizer
setPresentationEnded:
mediaItems
countByEnumeratingWithState:objects:count:
unlockAsset:
pause
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
viewServiceBeginPresentationWithOptions:
viewServiceEndPresentationWithOptions:completion:
_exportedInterface
viewServiceUpdatePresentationWithOptions:
viewServiceHandleMessage:reply:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
dismissWithResult:
count
indexOfObject:
objectAtIndex:
assets
identifier
isEqualToString:
enumerateObjectsUsingBlock:
initialPlaybackAssetIdentifier
standardUserDefaults
objectForKey:
_queueNextPlayableAssetFollowingAsset:inReverse:
_enumerateObjectsInArray:startObject:reverse:usingBlock:
_queueDefaultAsset
_canPlayAsset:
lockAsset:
_mediaItemWithLockedAsset:
_setAsset:forMediaItem:
addMediaItem:
_defaultMediaItem
removeMediaItem:
isDaylight
currentTimeOfDay
compare:options:
_currentTimeOfDay
ignoreTimeOfDay
timeOfDay
mainBundle
URLForResource:withExtension:
initWithURL:traits:
urlForLockedAsset:
startTime
accessibilityLabel
numberWithDouble:
setMediaItemMetadata:forProperty:
setAccessibilityLabel:
setPlaybackPausedWhileScreenSaverIsUp:
mediaItemToAssetMap
setObject:forKey:
presentationEnded
_remoteViewControllerInterface
backgroundView:willTransitionFromMediaItem:toMediaItem:
backgroundView:didTransitionFromMediaItem:toMediaItem:
loadView
.cxx_destruct
assetManager
setAssetManager:
daylightCalculator
setDaylightCalculator:
nowPlayingStateObserver
setNowPlayingStateObserver:
setBackgroundView:
setInteractionEnabled:
setMediaItemToAssetMap:
_playbackPausedWhileScreenSaverIsUp
_interactionEnabled
_presentationEnded
_assetManager
_daylightCalculator
_nowPlayingStateObserver
_backgroundView
_mediaItemToAssetMap
_leftSwipeRecognizer
_rightSwipeRecognizer
applicationCacheDirectory
initWithDirectory:guaranteedAssetLimit:
dictionary
isRunningInStoreDemoMode
setMode:
URLByAppendingPathComponent:
sharedScreenSaverPreferences
domain
idleScreenEnabled
_cancelNextAssetDownloadTimer
assetDownloadManager
cancelDownloads
customerAssetCache
setGuaranteedAssetLimit:
retailAssetCache
assetDownloadInterval
_shouldDownloadInitialAssets
_downloadAndCacheInitialAssets
_scheduleNextAssetDownload
addObserverForDomain:withDistributedSynchronizationHandler:
_setupCompleted
_internetAvailable
metadataManager
_handleUpdatedMetdata:
startMetadataUpdatesWithHandler:
stopMetadataUpdates
metadata
activeAssetCache
markAsset:asProtected:
urlForProtectedAsset:
containsObject:
removeAssetWithIdentifier:
setMetadata:
containsAsset:
_setDownloadDate:forAsset:
preferencesWithDomain:
boolForKey:defaultValue:
internetAvailable
_idleScreenEnabled
_canDownloadAssets
_cachedAssetCount
initialAssetCount
_nextAssetDownloadDate
_scheduleNextAssetDownloadOnDate:
downloadingAssetsSet
timeIntervalSinceNow
workQ
_downloadAndCacheNewAsset
mostRecentDownloadDate
currentCalendar
refreshTimeInterval
unsignedIntegerValue
dateByAddingUnit:value:toDate:options:
distantFuture
_previouslyDownloadedTimeOfDay
_downloadDateForAsset:
compare:
distantPast
_downloadAndCacheAsset:
_nextAssetToDownload
date
addObject:
addAsset:atURL:
_setPreviouslyDownloadedTimeOfDay:
removeObject:
downloadAsset:withCompletion:
integerForKey:
setInteger:forKey:
stringWithFormat:
setAssetDownloadManager:
setDownloadingAssetsSet:
nextAssetDownloadTimer
setNextAssetDownloadTimer:
setActiveAssetCache:
setCustomerAssetCache:
setRetailAssetCache:
assetIdentifierToCacheMap
setAssetIdentifierToCacheMap:
setMetadataManager:
screensaverPreferencesObserver
setScreensaverPreferencesObserver:
setupPreferencesObserver
setSetupPreferencesObserver:
internetAvailabilityObserver
setInternetAvailabilityObserver:
setWorkQ:
_assetDownloadManager
_downloadingAssetsSet
_nextAssetDownloadTimer
_activeAssetCache
_customerAssetCache
_retailAssetCache
_assetIdentifierToCacheMap
_metadataManager
_metadata
_screensaverPreferencesObserver
_setupPreferencesObserver
_internetAvailabilityObserver
_workQ
locationServicesEnabled
setDesiredAccuracy:
authorizationStatus
requestAlwaysAuthorization
_updateLocationForDaylight
requestLocation
timeIntervalSinceReferenceDate
calculateAstronomicalTimeForLocation:time:altitudeInDegrees:
isDayLightForTime:
nextSunrise
nextSunset
location
coordinate
postNotificationName:object:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
nextSunriseDate
nextSunsetDate
_almanac
_locationForDaylight
_locationManager
setWithCapacity:
_initializeCache
_cleanupInternallyProtectedAssets
_urlForAssetIdentifier:
_isAssetWithIdentiferExternallyProtected:
_markAssetWithIdentifier:asProtected:error:
_removeAssetWithIdentifier:
remoteURL
pathExtension
_filenameForAssetWithIdentifier:extension:
_moveAssetWithIdentifier:atURL:toDirectory:filename:error:
_addInternallyProtectedAssetWithIdentifier:
_addProtectedAssetWithIdentifier:
_setCacheTimestamp:forAssetWithIdentifier:
_enumerateCachedAssetsUsingBlock:
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
_assetIdentifierForFile:
_setURL:forAssetIdentifier:
_markAssetWithIdentifier:asInternallyProtected:error:
_enumerateAssetFilesInDirectory:usingBlock:
_createPurgeableDirectoryWithError:
code
_cacheTimestampKeyForAssetWithIdentifier:
moveItemAtURL:toURL:error:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getResourceValue:forKey:error:
removeItemAtURL:error:
_removeURLForAssetIdentifier:
_removeInternallyProtectedAssetWithIdentifier:
_removeProtectedAssetWithIdentifier:
allKeys
path
fileExistsAtPath:
removeObjectForKey:
enumerateKeysAndObjectsUsingBlock:
_isAssetWithIdentifierProtected:
_moveAssetWithIdentifier:toDirectory:error:
_countForProtectedAssetWithIdentifier:
_cacheTimestampForAssetWithIdentifier:
allObjects
sortedArrayUsingComparator:
subarrayWithRange:
_allAssetIdentifiers
_isAssetWithIdentifierInternallyProtected:
countForObject:
lastPathComponent
stringByDeletingPathExtension
registerCacheAtURL:ofType:urgency:requiresAppTermination:withCompletion:
enumerateAssetsUsingBlock:
_count
guaranteedAssetLimit
assetToURLMap
setAssetToURLMap:
internalProtectedAssets
setInternalProtectedAssets:
protectedAssets
setProtectedAssets:
protectedDirectory
setProtectedDirectory:
purgeableDirectory
setPurgeableDirectory:
_guaranteedAssetLimit
_assetToURLMap
_internalProtectedAssets
_protectedAssets
_protectedDirectory
_purgeableDirectory
setCategory:withOptions:error:
setConfigurationBlock:
setupNetworkMonitoring
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
window
setWindow:
_window
boolForKey:
integerValue
stringForKey:
URLWithString:
customerMetadataURL
isEqualToMetadata:
sha1Hash
isEqualToData:
version
setVersion:
setInitialAssetCount:
setAssets:
setSha1Hash:
_version
_initialAssetCount
_assets
_sha1Hash
isEqualToAsset:
setIdentifier:
setRemoteURL:
setStartTime:
setTimeOfDay:
_identifier
_remoteURL
_startTime
_timeOfDay
ephemeralSessionConfiguration
setTimeoutIntervalForResource:
setDiscretionary:
setNetworkServiceType:
sessionWithConfiguration:
weakObjectsHashTable
cancel
downloadTaskWithURL:completionHandler:
resume
concurrentDownloadsSemaphore
setConcurrentDownloadsSemaphore:
downloadSession
setDownloadSession:
downloadTasks
setDownloadTasks:
_concurrentDownloadsSemaphore
_downloadSession
_downloadTasks
copy
localURL
dataWithContentsOfURL:options:error:
metadataWithData:
_stopCheckingForRemoteMetadataUpdates
UUID
setSessionID:
setUpdateHandler:
sessionID
_dispatchUpdateWithMetadata:
_startCheckingForRemoteMetadataUpdates
updateHandler
_fetchRemoteMetadataAndUpdateCache
isValid
remoteURLBlock
writeToURL:atomically:
_fetchRemoteMetadataWithURL:completion:
remoteFetchTask
sharedSession
dataTaskWithURL:completionHandler:
setRemoteFetchTask:
initWithLocalURL:remoteURLBlock:
setState:
setLocalURL:
setRemoteURLBlock:
cacheQ
setCacheQ:
updateQ
setUpdateQ:
remoteFetchTimer
setRemoteFetchTimer:
urlBagObserver
setUrlBagObserver:
internetAvailableObserver
setInternetAvailableObserver:
_updateHandler
_state
_localURL
_remoteURLBlock
_cacheQ
_sessionID
_updateQ
_remoteFetchTimer
_remoteFetchTask
_urlBagObserver
_internetAvailableObserver
URLsForDirectory:inDomains:
firstObject
bundleIdentifier
_customerMetadataCacheURL
_customerMetadataRemoteURLBlock
_retailMetadataCacheURL
_retailMetadataRemoteURLBlock
mode
currentLoader
URLForKey:
_idleScreenEntriesConfigurationURL
customerMetadataLoader
setCustomerMetadataLoader:
retailMetadataLoader
setRetailMetadataLoader:
modeQ
setModeQ:
_mode
_customerMetadataLoader
_retailMetadataLoader
_modeQ
setPreventsSleepDuringVideoPlayback:
setUpdatesMediaRemoteInfoAutomatically:
setMediaItemEndAction:
addObserver:forKeyPath:options:context:
setPlayer:
setTranslatesAutoresizingMaskIntoConstraints:
leftAnchor
constraintEqualToAnchor:
setActive:
topAnchor
rightAnchor
bottomAnchor
setAlpha:
_removeBoundaryTimeObservers
player
invalidate
removeObserver:forKeyPath:context:
stop
delegate
shroudView
initWithDuration:controlPoint1:controlPoint2:animations:
userInfo
loading
addCompletion:
startAnimation
changeMediaInDirection:
playlist
addItem:
setCurrentMediaItem:
trackList
removeItemAtIndex:
currentMediaItemInitialLoadingComplete
_addBoundaryTimeObservers
observeValueForKeyPath:ofObject:change:context:
duration
addBoundaryTimeObserverForTimes:withHandler:
removeBoundaryTimeObserverWithToken:
didMoveToWindow
videoView
playbackEndTimeObserverToken
setPlaybackEndTimeObserverToken:
_delegate
_player
_videoView
_shroudView
_playbackEndTimeObserverToken
JSONObjectWithData:options:error:
metadataWithJSONObject:
tvs_SHA1Digest
assetWithJSONObject:
array
%@<%p> %s
Failed to create protected directory: %@
Failed to create purgeable directory: %@
Failed to move asset at URL (%@) to URL (%@) with error: %@
Error enumerating url: %@, %@
Error getting UTI for file: %@, %@
Failed to remove asset at URL (%@) with error: %@
Failed to register purgeable directory with TVSCacheDelete: %@
Failed to fetch asset at URL (%@) with error: %@
Failed to load cached metadata at URL (%@) with error: %@
Failed to fetch metadata at URL (%@) with error: %@
Failed to create application cache directory: %@
%@<%p> removed from window
<%@:%p> Failed to parse data: %@
<%@> "%@" and "%@" keys must be non-nil
PBSViewServicePresenter
NSObject
PBSViewServiceInterface
TVIMainViewController
TVIBackgroundViewDelegate
TVIAssetManager
TVIDaylightCalculator
CLLocationManagerDelegate
TVIAssetCache
TVIdleScreenAppDelegate
UIApplicationDelegate
TVIUserDefaults
TVIMetadata
TVIAsset
TVIAssetDownloadManager
TVIMetadataLoader
TVIUtilities
TVIMetadataManager
TVIBackgroundView
TVIMetadataParser
TVIMetadataParserV0
TVIMetadataParserV1
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v32@0:8@16@?24
v24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@?<v@?>24
@"NSXPCInterface"16@0:8
v32@0:8@"NSDictionary"16@?<v@?@"<NSSecureCoding>"@"NSError">24
v24@0:8@"<NSSecureCoding>"16
v40@0:8@16@24@32
v40@0:8@"TVIBackgroundView"16@"TVPURLMediaItem"24@"TVPURLMediaItem"32
@32@0:8@16@24
v16@0:8
v44@0:8@16@24B32@?36
v28@0:8@16B24
q16@0:8
@24@0:8@16
v24@0:8@?16
v32@0:8@16@24
v20@0:8B16
@"TVIAssetManager"
@"TVIDaylightCalculator"
@"TVIBackgroundView"
@"NSMapTable"
@"UISwipeGestureRecognizer"
v24@0:8q16
@"TVIAssetDownloadManager"
@"NSMutableSet"
@"NSObject<OS_dispatch_source>"
@"TVIAssetCache"
@"NSMutableDictionary"
@"TVIMetadataManager"
@"TVIMetadata"
@"NSObject<OS_dispatch_queue>"
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"GEOAlmanac"
{CLLocationCoordinate2D="latitude"d"longitude"d}
@"CLLocationManager"
@32@0:8@16Q24
v24@0:8Q16
B28@0:8@16B24
B32@0:8@16@24
B40@0:8@16@24^@32
B56@0:8@16@24@32@40^@48
B36@0:8@16B24^@28
Q24@0:8@16
B24@0:8^@16
@"NSCountedSet"
@"NSURL"
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"UIWindow"
@"NSArray"
@"NSData"
d16@0:8
v24@0:8d16
@"NSString"
@"NSObject<OS_dispatch_semaphore>"
@"NSURLSession"
@"NSHashTable"
@32@0:8@16@?24
@?16@0:8
@"NSUUID"
@"NSURLSessionDataTask"
@"TVIMetadataLoader"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8@16@24@32^v40
@"<TVIBackgroundViewDelegate>"
@"TVPPlayer"
@"TVPVideoView"
@"UIView"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>Apple Certification Authority.com.apple.TVIdleScreen</string>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.appletv.pbs.allow-screen-saver</key>
<true/>
<key>com.apple.atvcached.client</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
</dict>
</plist>
