initWithNibName:bundle:
strongToStrongObjectsMapTable
defaultCenter
_mediaRemotePlaybackApplicationStateDidChange
addObserverForName:object:queue:usingBlock:
removeObserver:
dealloc
alloc
mainScreen
bounds
initWithFrame:
blackColor
setBackgroundColor:
setView:
sharedInstance
isInteractionEnabled
_leftAction:
initWithTarget:action:
numberWithInteger:
arrayWithObjects:count:
setAllowedPressTypes:
addGestureRecognizer:
_rightAction:
_playPauseTapButtonAction:
_selectAction:
state
togglePlayPause
playbackPausedWhileScreenSaverIsUp
deactivateScreenSaver
_mediaPlaybackStateWithCompletion:
class
view
setDelegate:
addSubview:
_initialAsset
_queueAsset:
_queueNextPlayableAssetAfterAsset:
tvs_numberForKey:
doubleValue
play
leftSwipeRecognizer
setEnabled:
rightSwipeRecognizer
setPresentationEnded:
pause
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
viewServiceBeginPresentationWithOptions:
viewServiceEndPresentationWithOptions:completion:
_exportedInterface
viewServiceUpdatePresentationWithOptions:
viewServiceHandleMessage:reply:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
dismissWithResult:
count
indexOfObject:
objectAtIndex:
_queueNextPlayableAssetFollowingAsset:inPlaybackDirection:
_queueDefaultAsset
backgroundView
_defaultMediaItem
addMediaItem:
removeMediaItem:
supportsUHDAndHDR
mainBundle
URLForResource:withExtension:
initWithURL:traits:
currentDisplayMode
isHDR
setPlaybackPausedWhileScreenSaverIsUp:
presentationEnded
_dequeueMediaItem:
_remoteViewControllerInterface
backgroundView:willTransitionFromMediaItem:toMediaItem:
backgroundView:didTransitionFromMediaItem:toMediaItem:
loadView
_enumerateObjectsInArray:startObject:reverse:usingBlock:
_queueNextPlayableAssetBeforeAsset:
.cxx_destruct
nowPlayingStateObserver
setNowPlayingStateObserver:
setBackgroundView:
setInteractionEnabled:
mediaItemToAssetMap
setMediaItemToAssetMap:
setLeftSwipeRecognizer:
setRightSwipeRecognizer:
_playbackPausedWhileScreenSaverIsUp
_interactionEnabled
_presentationEnded
_nowPlayingStateObserver
_backgroundView
_mediaItemToAssetMap
_leftSwipeRecognizer
_rightSwipeRecognizer
setCategory:withOptions:error:
setConfigurationBlock:
setupNetworkMonitoring
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
window
setWindow:
_window
init
standardUserDefaults
boolForKey:
objectForKey:
integerValue
stringForKey:
URLWithString:
ignoreTimeOfDay
currentTimeOfDay
refreshTimeInterval
customerMetadataURL
initialPlaybackAssetIdentifier
isEqualToMetadata:
sha1Hash
isEqualToData:
version
setVersion:
initialAssetCount
setInitialAssetCount:
assets
setAssets:
setSha1Hash:
_version
_initialAssetCount
_assets
_sha1Hash
resolution
remoteURL4KHDR
remoteURL4KSDR
remoteURL1080HDR
remoteURL1080SDR
isEqualToAsset:
identifier
isEqualToString:
stringWithFormat:
remoteURLForDisplayMode:
setIdentifier:
startTime
setStartTime:
timeOfDay
setTimeOfDay:
setRemoteURL1080SDR:
setRemoteURL1080HDR:
setRemoteURL4KSDR:
setRemoteURL4KHDR:
_identifier
_startTime
_timeOfDay
_remoteURL1080SDR
_remoteURL1080HDR
_remoteURL4KSDR
_remoteURL4KHDR
dynamicRange
defaultManager
URLsForDirectory:inDomains:
firstObject
bundleIdentifier
URLByAppendingPathComponent:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
applicationCacheDirectory
setPreventsSleepDuringVideoPlayback:
setUpdatesMediaRemoteInfoAutomatically:
setMediaItemEndAction:
addObserver:forKeyPath:options:context:
setPlayer:
setTranslatesAutoresizingMaskIntoConstraints:
leftAnchor
constraintEqualToAnchor:
setActive:
topAnchor
rightAnchor
bottomAnchor
setAlpha:
initWithControlPoint1:controlPoint2:
initWithDuration:timingParameters:
_removeBoundaryTimeObservers
player
invalidate
removeObserver:forKeyPath:context:
videoView
stop
userInfo
loading
playbackStateObserver
setPlaybackStateObserver:
videoFadeDispatchGroup
shroudView
addAnimations:
startAnimation
setFadeOutAnimator:
setVideoFadeDispatchGroup:
setWaitingForReadyForDisplay:
currentMediaItem
nextMediaItem
delegate
changeMediaInDirection:
isRunning
addCompletion:
isReversed
setReversed:
playlist
addItem:
setCurrentMediaItem:
trackList
removeItemAtIndex:
currentMediaItemInitialLoadingComplete
_addBoundaryTimeObservers
waitingForReadyForDisplay
isReadyForDisplay
observeValueForKeyPath:ofObject:change:context:
duration
numberWithDouble:
next
addBoundaryTimeObserverForTimes:withHandler:
removeBoundaryTimeObserverWithToken:
didMoveToWindow
mediaItems
playbackEndTimeObserverToken
setPlaybackEndTimeObserverToken:
fadeInAnimator
setFadeInAnimator:
fadeOutAnimator
_waitingForReadyForDisplay
_delegate
_player
_videoView
_shroudView
_playbackEndTimeObserverToken
_playbackStateObserver
_fadeInAnimator
_fadeOutAnimator
_videoFadeDispatchGroup
v16@?0@"NSNotification"8
v12@?0I8
-[TVIMainViewController viewServiceBeginPresentationWithOptions:]
animationDuration
v8@?0
-[TVIMainViewController viewServiceEndPresentationWithOptions:completion:]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Default@2x
Default@2x_HDR
Default
playbackPausedWhileScreenSaverIsUp
TB,N,V_playbackPausedWhileScreenSaverIsUp
nowPlayingStateObserver
T@,&,N,V_nowPlayingStateObserver
backgroundView
T@"TVIBackgroundView",&,N,V_backgroundView
interactionEnabled
TB,N,GisInteractionEnabled,V_interactionEnabled
mediaItemToAssetMap
T@"NSMapTable",&,N,V_mediaItemToAssetMap
presentationEnded
TB,N,V_presentationEnded
leftSwipeRecognizer
T@"UISwipeGestureRecognizer",&,N,V_leftSwipeRecognizer
rightSwipeRecognizer
T@"UISwipeGestureRecognizer",&,N,V_rightSwipeRecognizer
v16@?0@"AVAudioSession"8
window
T@"UIWindow",&,N
T@"UIWindow",&,N,V_window
EnableInteraction
TVIIgnoreTimeOfDay
TVICurrentTimeOfDay
TVIRefreshTimeIntervalOverride
TVICustomerMetadataURL
TVIAssetIdentifierOverride
InternalBuild
isInteractionEnabled
TB,R,N
ignoreTimeOfDay
currentTimeOfDay
T@"NSString",R,N
refreshTimeInterval
T@"NSNumber",R,N
customerMetadataURL
T@"NSURL",R,N
initialPlaybackAssetIdentifier
version
TQ,N,V_version
initialAssetCount
TQ,N,V_initialAssetCount
assets
T@"NSArray",&,N,V_assets
sha1Hash
T@"NSData",&,N,V_sha1Hash
%@ identifier '%@', remoteURL1080SDR '%@', remoteURL1080HDR '%@', remoteURL4KSDR '%@', remoteURL4KHDR '%@'
identifier
T@"NSString",&,N,V_identifier
startTime
Td,N,V_startTime
timeOfDay
Tq,N,V_timeOfDay
remoteURL1080SDR
T@"NSURL",&,N,V_remoteURL1080SDR
remoteURL1080HDR
T@"NSURL",&,N,V_remoteURL1080HDR
remoteURL4KSDR
T@"NSURL",&,N,V_remoteURL4KSDR
remoteURL4KHDR
T@"NSURL",&,N,V_remoteURL4KHDR
currentMediaItemInitialLoadingComplete
readyForDisplay
-[TVIBackgroundView play]
-[TVIBackgroundView pause]
-[TVIBackgroundView togglePlayPause]
-[TVIBackgroundView next]
v16@?0q8
-[TVIBackgroundView addMediaItem:]
-[TVIBackgroundView removeMediaItem:]
v12@?0B8
player
T@"TVPPlayer",R,N,V_player
videoView
T@"TVPVideoView",R,N,V_videoView
shroudView
T@"UIView",R,N,V_shroudView
playbackEndTimeObserverToken
T@,&,N,V_playbackEndTimeObserverToken
playbackStateObserver
T@,W,N,V_playbackStateObserver
fadeInAnimator
T@"UIViewPropertyAnimator",&,N,V_fadeInAnimator
fadeOutAnimator
T@"UIViewPropertyAnimator",&,N,V_fadeOutAnimator
videoFadeDispatchGroup
T@"NSObject<OS_dispatch_group>",&,N,V_videoFadeDispatchGroup
waitingForReadyForDisplay
TB,N,V_waitingForReadyForDisplay
delegate
T@"<TVIBackgroundViewDelegate>",W,N,V_delegate
mediaItems
T@"NSArray",R,N
currentMediaItem
T@"TVPURLMediaItem",R,N
nextMediaItem
PBSViewServicePresenter
NSObject
PBSViewServiceInterface
TVIMainViewController
TVIBackgroundViewDelegate
TVIdleScreenAppDelegate
UIApplicationDelegate
TVIUserDefaults
TVIMetadata
TVIAsset
TVIdleScreenAdditions
TVIUtilities
TVIBackgroundView
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v32@0:8@16@?24
v24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@?<v@?>24
@"NSXPCInterface"16@0:8
v32@0:8@"NSDictionary"16@?<v@?@"<NSSecureCoding>"@"NSError">24
v24@0:8@"<NSSecureCoding>"16
v40@0:8@16@24@32
v40@0:8@"TVIBackgroundView"16@"TVPURLMediaItem"24@"TVPURLMediaItem"32
@32@0:8@16@24
v16@0:8
v44@0:8@16@24B32@?36
v32@0:8@16q24
v24@0:8@?16
v20@0:8B16
@"TVIBackgroundView"
@"NSMapTable"
@"UISwipeGestureRecognizer"
B32@0:8@16@24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@16@24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"UIWindow"
v24@0:8Q16
@"NSArray"
@"NSData"
@24@0:8@16
d16@0:8
v24@0:8d16
q16@0:8
v24@0:8q16
@"NSString"
@"NSURL"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8@16@24@32^v40
@"<TVIBackgroundViewDelegate>"
@"TVPPlayer"
@"TVPVideoView"
@"UIView"
@"UIViewPropertyAnimator"
@"NSObject<OS_dispatch_group>"
Failed to create application cache directory: %@
%@<%p> removed from window
%@<%p> Unexpected final position when reversing the fade out animation: %ld
%@<%p> %s
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.appletv.pbs.allow-screen-saver</key>
<true/>
<key>com.apple.atvcached.client</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.locationd.authorizeapplications</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
</dict>
</plist>
