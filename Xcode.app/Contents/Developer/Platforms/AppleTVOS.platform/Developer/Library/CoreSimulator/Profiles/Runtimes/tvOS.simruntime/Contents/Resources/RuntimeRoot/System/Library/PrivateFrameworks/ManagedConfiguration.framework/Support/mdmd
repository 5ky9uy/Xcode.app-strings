com.apple.managedconfiguration.mdmd-access
com.apple.managedconfiguration.mdmd.push
com.apple.managedconfiguration.profiled-access
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Accepted new connection.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ManagedConfigurationTools_Sim/ManagedConfiguration-2005.15/MDM/MCMDMServicer.m
<Unknown File>
Improper use. Entitlement required for call
XPC_ERROR_LACKS_ENTITLEMENT_CODE
Invalid parameter not satisfying: %@
completion
xpcConnection
T@"NSXPCConnection",W,N,V_xpcConnection
.Managed.plist.lock
Migrate MDM
MDM migrating...
Managed
Found non-store managed books in seed-only system location. Migrating...
MDM completed migration.
Migrating non-store managed books to system group container...
Moving legacy non-store managed books directory...
Failed to move legacy non-store managed books with error %@
Failed to delete legacy non-store managed books with error %@
Failed to move legacy non-store managed books with no error
Failed to set permissions on new non-store managed books directory with error %@
Removing empty legacy non-store managed books...
Failed to delete empty legacy non-store managed books with error %@
Failed to fix permissions of device's MDM managed non-store books with errors %@
Completed non-store managed books system group container migration.
Beginning update of non-store managed books manifest...
Completed non-store managed books manifest update.
Migrating enterprise book backup flag...
Failed to set backup exclusion on enterprise books directory
Set backup exclusion on enterprise books directory to %d
Could not get unlock token item: %@
Could not set unlock token item: %@
mdmd starting...
mdmd Catalyst Queue
v16@?0@"NSNotification"8
Idled.
Unidled.
Power assertion dropped.
Power assertion asserted.
mdmd preparing to stop.
Waiting for clean exit.
v8@?0
UDID
MCMDMServer member queue
Could not get device locator state. Error: %@
Could not get activation lock state. Error: %@
Enabling activation lock.
Could not enable activation lock. Error: %@
v16@?0@"NSError"8
v20@?0B8@"NSError"12
v24@?0Q8@"NSError"16
MDM_ERROR_NO_INSTALLATION
MDM_ERROR_BAD_INSTALLATION_BAD_VALUE
MDM_ERROR_MISSING_IDENTITY
Waiting for push token to be assigned to this device...
MDM_ERROR_BAD_INSTALLATION
No valid MDM installation found. MDM will not listen to push messages. Error: %@
Start MCMDMServer
-[MCMDMServer startOutError:]
-[MCMDMServer startOutError:]_block_invoke_2
-[MCMDMServer startOutError:]_block_invoke_3
v12@?0B8
com.apple.purplebuddy.setupdone
v12@?0i8
Valid MDM configuration found.
No valid MDM configuration found. Error: %@
No valid MDM configuration found.
Not polling in response to reachability change. Waiting for device to unlock first.
Scheduling poll of MDM server.
No cached response to send.
Checking for outstanding activity. Reachability event: %d
Connection did receive public token: %@
Push token received.
Push token data: '%@' Topic: '%@' Magic: '%@'
Push token is new, need to update
-[MCMDMServer connection:didReceivePublicToken:]_block_invoke
-[MCMDMServer connection:didReceivePublicToken:]_block_invoke_5
-[MCMDMServer connection:didReceivePublicToken:]_block_invoke_4
Push token is not new, don't need to update
Connection did receive message for topic: %@, user info: %@
Received push notification.
Push notification data: %@
Ignoring push notification with mismatched topic: %@
Rejecting MDM push dictionary because it does not contain the "%@" key
Rejecting MDM push dictionary because the "%@" key is not a string.
Rejecting MDM push dictionary because it does not have the right magic string.
Push magic mismatch marker already exists with date: %@
Existing push magic mismatch marker is older than %f seconds (%f seconds old), scheduling token update
Setting push magic mismatch marker with date: %@
Ignoring extra keys in push dictionary: %@
-[MCMDMServer connection:didReceiveMessageForTopic:userInfo:]
-[MCMDMServer connection:didReceiveMessageForTopic:userInfo:]_block_invoke_4
-[MCMDMServer connection:didReceiveMessageForTopic:userInfo:]_block_invoke_5
simulatorToken
Removing MDM profile.
v24@?0@"CATTaskResultObject"8@"NSError"16
Could not remove MDM profile: %@
MDM_ERROR_UNAUTHORIZED_BY_SERVER
Telling server about new device token.
Telling MDM Check-In Server about new device token.
User switch already initiated. Not telling server about new token right now.
The token update dictionary has UDID: %@
The certificate that the device is using to authenticate itself to the server has the following properties: %@
Cannot tell MDM server about updated token. Error: %@
Transaction completed. Status: %d
Cannot tell server of a new push token. Error: %@
v16@?0@"NSData"8
v32@?0@"NSData"8q16@"NSError"24
-[MCMDMServer schedulePollingServerForCommandWithAssertion:]
-[MCMDMServer schedulePollingServerForCommandWithAssertion:]_block_invoke_2
-[MCMDMServer schedulePollingServerForCommandWithAssertion:]_block_invoke
Polling MDM server %@ for next command.
User switch already initiated. Not polling the server for commands right now.
Could not send response to MDM server. Error: %@
Could not parse command. Error: %@
Server has no commands for this device.
Request: %@
v16@?0@"NSDictionary"8
Command Status: %@
Command Status: %@
Error: %@
Network reachability did change
Network reachability has changed.
-[MCMDMServer _networkReachabilityDidChange]
-[MCMDMServer _networkReachabilityDidChange]_block_invoke_2
-[MCMDMServer _networkReachabilityDidChange]_block_invoke
Keybad state did change
-[MCMDMServer _keybagStateDidChange]_block_invoke
-[MCMDMServer _keybagStateDidChange]_block_invoke_3
-[MCMDMServer _keybagStateDidChange]_block_invoke_2
Buddy did finish
-[MCMDMServer buddyDidFinish]
-[MCMDMServer buddyDidFinish]_block_invoke_2
-[MCMDMServer buddyDidFinish]_block_invoke
<%s %s:%lu>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ManagedConfigurationTools_Sim/ManagedConfiguration-2005.15/MDM/MCMDMServer.m
-[MCMDMServer notifyNewConfigurationWithCompletion:]
Notify new configuration
-[MCMDMServer notifyNewConfigurationWithCompletion:]_block_invoke
-[MCMDMServer scheduleTokenUpdateWithCompletion:]
Schedule token update
-[MCMDMServer scheduleTokenUpdateWithCompletion:]_block_invoke_3
-[MCMDMServer scheduleTokenUpdateWithCompletion:]_block_invoke_2
-[MCMDMServer scheduleTokenUpdateIfNecessaryWithCompletion:]
Schedule token update if necessary
-[MCMDMServer scheduleTokenUpdateIfNecessaryWithCompletion:]_block_invoke_2
-[MCMDMServer scheduleTokenUpdateIfNecessaryWithCompletion:]_block_invoke
Perform outstanding activities
-[MCMDMServer performOutstandingActivities]
-[MCMDMServer performOutstandingActivities]_block_invoke_3
-[MCMDMServer performOutstandingActivities]_block_invoke
-[MCMDMServer simulatePushWithCompletion:]
Simulate push
-[MCMDMServer simulatePushIfNetworkTetheredWithCompletion:]
Simulate push if network tethered
Asked to poll server if tethered, but no MDM installation exists.
MDM_ERROR_NOT_NETWORK_TETHERED
-[MCMDMServer simulatePushWithAssertion:completion:]
-[MCMDMServer simulatePushWithAssertion:completion:]_block_invoke_3
-[MCMDMServer simulatePushWithAssertion:completion:]_block_invoke
-[MCMDMServer retryNotNowWithCompletion:]
Retry not now
Last response was not a NotNow. Ignoring poll request.
-[MCMDMServer retryNotNowWithCompletion:]_block_invoke
Migrate MDM with context: %d
-[MCMDMServer uprootMDMWithCompletion:]
Uproot MDM
Uprooting MDM installation
Could not stop managing app: %@, error: %@
-[MCMDMServer uprootMDMWithCompletion:]_block_invoke_4
v24@?0@8@"NSError"16
-[MCMDMServer uprootMDMWithCompletion:]_block_invoke
Process device request: %@
Will switch user. Unfinished assertions:
organizationName
T@"NSString",R,C,N
serverName
memberQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_memberQueue
memberQueueDevAPSConnection
T@"APSConnection",&,N,V_memberQueueDevAPSConnection
memberQueueProdAPSConnection
T@"APSConnection",&,N,V_memberQueueProdAPSConnection
memberQueueIsMDMConfigurationValid
TB,N,V_memberQueueIsMDMConfigurationValid
memberQueueManagingProfileIdentifier
T@"NSString",&,N,V_memberQueueManagingProfileIdentifier
memberQueueIdentity
T^{__SecIdentity=},N,V_memberQueueIdentity
memberQueueTopic
T@"NSString",&,N,V_memberQueueTopic
memberQueueServerURL
T@"NSURL",&,N,V_memberQueueServerURL
memberQueueCheckInURL
T@"NSURL",&,N,V_memberQueueCheckInURL
memberQueueOrganizationInfo
T@"NSDictionary",&,N,V_memberQueueOrganizationInfo
memberQueueMDMOptions
T@"NSDictionary",&,N,V_memberQueueMDMOptions
memberQueueAccessRights
Ti,N,V_memberQueueAccessRights
memberQueueUseDevelopmentAPNS
TB,N,V_memberQueueUseDevelopmentAPNS
memberQueuePushMagic
T@"NSString",&,N,V_memberQueuePushMagic
memberQueueSignMessage
TB,N,V_memberQueueSignMessage
memberQueuePushToken
T@"NSData",&,N,V_memberQueuePushToken
memberQueuePollRequested
TB,N,V_memberQueuePollRequested
memberQueueTimerContext
T@"MCTimerContext",&,N,V_memberQueueTimerContext
memberQueuePowerAssertionAssertedNotificationToken
Ti,N,V_memberQueuePowerAssertionAssertedNotificationToken
memberQueuePowerAssertionDeassertedNotificationToken
Ti,N,V_memberQueuePowerAssertionDeassertedNotificationToken
memberQueueCommandUUID
T@"NSString",&,N,V_memberQueueCommandUUID
memberQueueUserSwitchAlreadyInitiated
TB,N,V_memberQueueUserSwitchAlreadyInitiated
jobQueue
T@"MCJobQueue",&,N,V_jobQueue
memberQueueCachedResponse
T@"NSDictionary",&,N
memberQueueLastResponseWasNotNow
TB,N
executionQueuePushTokenWaitContinuationBlock
T@?,C,N,V_executionQueuePushTokenWaitContinuationBlock
executionQueueIsCheckinInProgress
TB,N,V_executionQueueIsCheckinInProgress
eventQueueBusyCount
Ti,N,V_eventQueueBusyCount
organizationInfo
T@"NSDictionary",C,N
lastResponseWasNotNow
TB,R,N
tokenUpdateScheduled
TB,R,N,GisTokenUpdateScheduled
userSwitchAlreadyInitiated
MDMOptions
MCMDMXPCProtocol
NSObject
MCMDMClientProtocol
MCMDMServiceDelegate
NSXPCListenerDelegate
MCMDMServicer
MCMDMMigrator
MCMDMServer
MCJobQueueObserver
APSConnectionDelegate
MCMDMServerProtocol
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
getAssertionDescriptionsWithCompletion:
notifyNewConfigurationWithCompletion:
scheduleTokenUpdateWithCompletion:
scheduleTokenUpdateIfNecessaryWithCompletion:
simulatePushWithCompletion:
simulatePushIfNetworkTetheredWithCompletion:
retryNotNowWithCompletion:
migrateMDMWithContext:completion:
uprootMDMWithCompletion:
processDeviceRequest:completion:
interfaceWithProtocol:
setExportedInterface:
setXpcConnection:
setExportedObject:
resume
listener:shouldAcceptNewConnection:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
xpcConnection
valueForEntitlement:
boolValue
MCErrorWithDomain:code:descriptionArray:errorType:
remoteProcessHasEntitlement:
lacksEntitlementError:
sharedServer
.cxx_destruct
_xpcConnection
alloc
init
initWithReason:
stringByAppendingPathComponent:
defaultManager
fileExistsAtPath:isDirectory:
_moveNonStoreManagedBooksToSystemGroupContainerFromLegacyPath:
_moveNonStoreManagedBooksToSystemGroupContainer
_updateNonStoreBooksManifestForSystemGroupContainer
_updateSkipBackupKeyForNonStoreBooksDirectory
_updateUnlockTokenSecretToClassDIfNeeded
sharedConfiguration
userMode
removeItemAtPath:error:
contentsOfDirectoryAtPath:error:
count
firstObject
isEqualToString:
fileExistsAtPath:
numberWithUnsignedLong:
dictionaryWithObjects:forKeys:count:
setAttributes:ofItemAtPath:error:
dictionary
dictionaryWithContentsOfFile:
objectForKeyedSubscript:
countByEnumeratingWithState:objects:count:
initWithManifestDictionary:
persistentID
fullPath
hasPrefix:
lastPathComponent
setFullPath:
setObject:forKeyedSubscript:
arrayWithCapacity:
allValues
manifestDictionary
addObject:
writeToFile:atomically:
sharedConnection
isEnterpriseBookBackupAllowed
stringFromService:account:label:description:useSystemKeychain:outError:
removeItemForService:account:label:description:useSystemKeychain:group:
setString:forService:account:label:description:access:group:useSystemKeychain:outError:
sharedMigrator
migrateMDMWithContext:
defaultCenter
mainQueue
addObserverForName:object:queue:usingBlock:
startOutError:
initWithMachServiceName:
setDelegate:
currentRunLoop
distantFuture
runMode:beforeDate:
dateWithTimeIntervalSinceNow:
date
compare:
lastResponseWasNotNow
isTokenUpdateScheduled
setExecutionQueue:
setObserver:
memberQueueIdentity
dealloc
memberQueue
memberQueueServerURL
setMemberQueueServerURL:
memberQueueOrganizationInfo
copy
setMemberQueueOrganizationInfo:
removeObjectForKey:
memberQueueMDMOptions
setMemberQueueMDMOptions:
sharedInstance
enableActivationLockWithCompletion:
isActivationLockedWithCompletion:
fmipStateWithCompletion:
isEqualToData:
memberQueueLastResponseWasNotNow
objectForKey:
setMemberQueueLastResponseWasNotNow:
numberWithBool:
setObject:forKey:
tokenUpdateCount
memberQueueDevAPSConnection
setEnabledTopics:
memberQueueProdAPSConnection
setMemberQueueIsMDMConfigurationValid:
setMemberQueueIdentity:
setMemberQueueCheckInURL:
setMemberQueueManagingProfileIdentifier:
setMemberQueueAccessRights:
setMemberQueueUseDevelopmentAPNS:
setMemberQueuePushMagic:
memberQueueForgetCurrentConfiguration
dataWithContentsOfFile:
MCSafePropertyListWithData:options:format:error:
copyIdentityWithPersistentID:useSystemKeychain:
memberQueueManagingProfileIdentifier
setMemberQueueTopic:
memberQueueTopic
initWithString:
unsignedIntValue
setMemberQueueSignMessage:
memberQueuePushMagic
initWithEnvironmentName:namedDelegatePort:
setMemberQueueDevAPSConnection:
mainRunLoop
scheduleInRunLoop:
setMemberQueueProdAPSConnection:
memberQueueUseDevelopmentAPNS
arrayWithObject:
publicToken
setMemberQueuePushToken:
memberQueuePushToken
pushTokenCompletionBlock:
MCErrorWithDomain:code:descriptionArray:suggestion:USEnglishSuggestion:underlyingError:errorType:
checkIn
readConfigurationOutError:
jobQueue
jobDidFinishFromFunction:
executionQueueCheckForOutstandingActivityIsReachabilityEvent:assertion:completionBlock:
fromFunction:enqueueJob:
sharedNetworkObserver
_networkReachabilityDidChange
addNetworkReachableObserver:selector:
buddyDidFinish
cachedResponse
deviceIsLocked
schedulePollingServerForCommandWithAssertion:
memberQueueIsMDMConfigurationValid
_executionQueueCheckForOutstandingActivityIsReachabilityEvent:assertion:completionBlock:
executionQueueTellServerAboutDeviceTokenWithAssertion:completionBlock:
executionQueue
executionQueuePushTokenWaitContinuationBlock
setExecutionQueuePushTokenWaitContinuationBlock:
MCSHA1Hash
memberQueueLastPushTokenHash
setMemberQueueLastPushTokenHash:
memberQueueIncrementTokenUpdateRequestCount
pushReceived
pushRejected
memberQueuePushMagicMismatchDateMarker
timeIntervalSinceNow
sharedClient
scheduleTokenUpdate
initWithDictionary:
setMemberQueuePushMagicMismatchDateMarker:
executionQueuePollServerForCommandWithAssertion:completionBlock:
dataUsingEncoding:
setProfileIdentifier:
setType:
systemConnection
performRequest:completion:
setTokenUpdateRequestCountToZero
setCachedResponse:
executionQueueIsCheckinInProgress
setExecutionQueueIsCheckinInProgress:
memberQueueAccessRights
memberQueueCheckInURL
memberQueueSignMessage
userSwitchAlreadyInitiated
setMemberQueueTokenUpdateRequestCount:
isAwaitingDeviceConfigured
mutableCopy
dataWithPropertyList:format:options:error:
transactionWithURL:method:
setTimeout:
setUserAgent:
setContentType:
setData:
setIdentity:
setCMSSignatureHeaderName:
performSynchronously
error
MCVerboseDescription
statusCode
executionQueueRemoveMDMProfileWithAssertion:
unauthorizedByServerError
memberQueueDecrementTokenUpdateRequestCount
memberQueueTokenUpdateCount
performOutstandingActivities
responseData
performCompletionBlock:
sendResponse:completionBlock:
setMemberQueuePollRequested:
_idleResponse
length
malformedRequestErrorResult
setMemberQueueCachedResponse:
touch
executionQueueHandleRequest:withMDMParserOfClass:assertion:completionBlock:
dictionaryWithDictionary:
MCContainsErrorDomain:code:
errorChainFromError:
memberQueueCommandUUID
initWithManagingProfileIdentifier:
setServer:
setMemberQueueCommandUUID:
responseFromBasicResponse:
processRequest:accessRights:assertion:completionBlock:
memberQueueHasOutstandingActivity
memberQueueCachedResponse
intValue
numberWithInt:
isEphemeralMultiUser
memberQueueUserSwitchAlreadyInitiated
setMemberQueueUserSwitchAlreadyInitiated:
simulatePushWithAssertion:completion:
isManagedByMDM
managedAppIDs
setBundleIdentifier:
performRequest:error:
arrayWithObjects:count:
organizationInfo
serverURL
host
setUserSwitchAlreadyInitiated:
assertionDescriptions
appendFormat:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
organizationName
serverName
setServerURL:
setOrganizationInfo:
MDMOptions
setMDMOptions:
setLastResponseWasNotNow:
sendResponseSynchronously:outStatusCode:outError:
hasOutstandingActivity
_keybagStateDidChange
willSwitchUser
setMemberQueue:
memberQueuePollRequested
memberQueueTimerContext
setMemberQueueTimerContext:
memberQueuePowerAssertionAssertedNotificationToken
setMemberQueuePowerAssertionAssertedNotificationToken:
memberQueuePowerAssertionDeassertedNotificationToken
setMemberQueuePowerAssertionDeassertedNotificationToken:
setJobQueue:
eventQueueBusyCount
setEventQueueBusyCount:
_memberQueueIsMDMConfigurationValid
_memberQueueUseDevelopmentAPNS
_memberQueueSignMessage
_memberQueuePollRequested
_memberQueueUserSwitchAlreadyInitiated
_executionQueueIsCheckinInProgress
_memberQueueAccessRights
_memberQueuePowerAssertionAssertedNotificationToken
_memberQueuePowerAssertionDeassertedNotificationToken
_eventQueueBusyCount
_memberQueue
_memberQueueDevAPSConnection
_memberQueueProdAPSConnection
_memberQueueManagingProfileIdentifier
_memberQueueIdentity
_memberQueueTopic
_memberQueueServerURL
_memberQueueCheckInURL
_memberQueueOrganizationInfo
_memberQueueMDMOptions
_memberQueuePushMagic
_memberQueuePushToken
_memberQueueTimerContext
_memberQueueCommandUUID
_jobQueue
_executionQueuePushTokenWaitContinuationBlock
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v24@0:8@?<v@?@"NSArray"@"NSError">16
v28@0:8i16@?20
v32@0:8@16@?24
v24@0:8@?<v@?@"NSError">16
v28@0:8i16@?<v@?@"NSError">20
v32@0:8@"NSDictionary"16@?<v@?@"NSError"@"NSDictionary">24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
v16@0:8
v24@0:8@16
@"NSXPCConnection"
v20@0:8i16
v32@0:8@16@24
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v20@0:8B16
B24@0:8^@16
v36@0:8B16@20@?28
@40@0:8@16^q24^@32
v48@0:8@16#24@32@?40
i16@0:8
^{__SecIdentity=}16@0:8
v24@0:8^{__SecIdentity=}16
@?16@0:8
@"NSObject<OS_dispatch_queue>"
@"APSConnection"
@"NSString"
^{__SecIdentity=}
@"NSURL"
@"NSDictionary"
@"NSData"
@"MCTimerContext"
@"MCJobQueue"
ffffff
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>17A405001</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>mdmd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.managedconfiguration.mdmd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundlePackageType</key>
<string>com.apple.product-type.tool</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>AppleTVSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string></string>
<key>DTPlatformName</key>
<string>appletvsimulator</string>
<key>DTPlatformVersion</key>
<string>12.2</string>
<key>DTSDKBuild</key>
<string>16L180z</string>
<key>DTSDKName</key>
<string>appletvsimulator12.2</string>
<key>DTXcode</key>
<string>1020</string>
<key>DTXcodeBuild</key>
<string>10P70r</string>
<key>MinimumOSVersion</key>
<string>12.2</string>
<key>NSAppTransportSecurity</key>
<dict>
<key>NSAllowsArbitraryLoads</key>
<false/>
</dict>
<key>NSMainNibFile</key>
<string>MainWindow</string>
<key>UIDeviceFamily</key>
<array>
<integer>3</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
</array>
<key>com.apple.GAX.SPI</key>
<true/>
<key>com.apple.MobileInternetSharing.allow</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.AutoWake.xml</string>
<string>preferences.plist</string>
</array>
<key>com.apple.appletv.pbs.allow-active-application</key>
<true/>
<key>com.apple.appletv.pbs.osupdate-service-access</key>
<true/>
<key>com.apple.appstored.install-apps</key>
<true/>
<key>com.apple.apsd.ios-device-push-token</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.dmd-access</key>
<true/>
<key>com.apple.dmd.operation.apply-redemption-code</key>
<true/>
<key>com.apple.dmd.operation.begin-transaction</key>
<true/>
<key>com.apple.dmd.operation.clear-activation-lock-bypass-code</key>
<true/>
<key>com.apple.dmd.operation.clear-device-passcode</key>
<true/>
<key>com.apple.dmd.operation.clear-restrictions-password</key>
<true/>
<key>com.apple.dmd.operation.delete-user</key>
<true/>
<key>com.apple.dmd.operation.disable-lost-mode</key>
<true/>
<key>com.apple.dmd.operation.enable-lost-mode</key>
<true/>
<key>com.apple.dmd.operation.end-transaction</key>
<true/>
<key>com.apple.dmd.operation.erase-device</key>
<true/>
<key>com.apple.dmd.operation.fetch-activation-lock-bypass-code</key>
<true/>
<key>com.apple.dmd.operation.fetch-apps</key>
<true/>
<key>com.apple.dmd.operation.fetch-available-os-updates</key>
<true/>
<key>com.apple.dmd.operation.fetch-certificates</key>
<true/>
<key>com.apple.dmd.operation.fetch-device-properties</key>
<true/>
<key>com.apple.dmd.operation.fetch-location</key>
<true/>
<key>com.apple.dmd.operation.fetch-managed-books</key>
<true/>
<key>com.apple.dmd.operation.fetch-os-update-status</key>
<true/>
<key>com.apple.dmd.operation.fetch-profiles</key>
<true/>
<key>com.apple.dmd.operation.fetch-provisioning-profiles</key>
<true/>
<key>com.apple.dmd.operation.fetch-restrictions</key>
<true/>
<key>com.apple.dmd.operation.fetch-security-information</key>
<true/>
<key>com.apple.dmd.operation.fetch-unlock-token</key>
<true/>
<key>com.apple.dmd.operation.fetch-users</key>
<true/>
<key>com.apple.dmd.operation.install-app</key>
<true/>
<key>com.apple.dmd.operation.install-managed-book</key>
<true/>
<key>com.apple.dmd.operation.install-profile</key>
<true/>
<key>com.apple.dmd.operation.install-provisioning-profile</key>
<true/>
<key>com.apple.dmd.operation.invite-user-to-vpp</key>
<true/>
<key>com.apple.dmd.operation.lock-device</key>
<true/>
<key>com.apple.dmd.operation.log-out-user</key>
<true/>
<key>com.apple.dmd.operation.play-lost-mode-sound</key>
<true/>
<key>com.apple.dmd.operation.refresh-cellular-plans</key>
<true/>
<key>com.apple.dmd.operation.remove-app</key>
<true/>
<key>com.apple.dmd.operation.remove-managed-book</key>
<true/>
<key>com.apple.dmd.operation.remove-profile</key>
<true/>
<key>com.apple.dmd.operation.remove-protected-profile</key>
<true/>
<key>com.apple.dmd.operation.remove-provisioning-profile</key>
<true/>
<key>com.apple.dmd.operation.request-airplay-mirroring</key>
<true/>
<key>com.apple.dmd.operation.restart-device</key>
<true/>
<key>com.apple.dmd.operation.schedule-os-update</key>
<true/>
<key>com.apple.dmd.operation.schedule-os-update-scan</key>
<true/>
<key>com.apple.dmd.operation.set-app-analytics-enabled</key>
<true/>
<key>com.apple.dmd.operation.set-app-configuration</key>
<true/>
<key>com.apple.dmd.operation.set-app-options</key>
<true/>
<key>com.apple.dmd.operation.set-app-vpn-uuid</key>
<true/>
<key>com.apple.dmd.operation.set-bluetooth-enabled</key>
<true/>
<key>com.apple.dmd.operation.set-data-roaming-enabled</key>
<true/>
<key>com.apple.dmd.operation.set-device-name</key>
<true/>
<key>com.apple.dmd.operation.set-diagnostic-submission-enabled</key>
<true/>
<key>com.apple.dmd.operation.set-maximum-resident-users</key>
<true/>
<key>com.apple.dmd.operation.set-passcode-lock-grace-period</key>
<true/>
<key>com.apple.dmd.operation.set-personal-hotspot-enabled</key>
<true/>
<key>com.apple.dmd.operation.set-user-language</key>
<true/>
<key>com.apple.dmd.operation.set-user-locale</key>
<true/>
<key>com.apple.dmd.operation.set-voice-roaming-enabled</key>
<true/>
<key>com.apple.dmd.operation.set-wallpaper</key>
<true/>
<key>com.apple.dmd.operation.shut-down-device</key>
<true/>
<key>com.apple.dmd.operation.start-managing-app</key>
<true/>
<key>com.apple.dmd.operation.stop-airplay-mirroring</key>
<true/>
<key>com.apple.dmd.operation.stop-managing-app</key>
<true/>
<key>com.apple.dmd.operation.stop-managing-books</key>
<true/>
<key>com.apple.dmd.operation.trigger-diagnostics</key>
<true/>
<key>com.apple.dmd.operation.update-app</key>
<true/>
<key>com.apple.dmd.operation.validate-applications</key>
<true/>
<key>com.apple.frontboard.shutdown</key>
<true/>
<key>com.apple.icloud.FindMyDevice.FindMyDeviceHelperXPCService.access</key>
<true/>
<key>com.apple.icloud.findmydeviced.access</key>
<true/>
<key>com.apple.itunesstored.metrics</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.keystore.escrow.create</key>
<true/>
<key>com.apple.lsapplicationproxy.deviceidentifierforvendor</key>
<true/>
<key>com.apple.managedconfiguration.mdmd-access</key>
<true/>
<key>com.apple.managedconfiguration.mdmuserd-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled.configurationprofiles</key>
<array>
<string>Inspection</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>SilentNonUIInstallation</string>
<string>UIInstallation</string>
<string>CloudLockedRemoval</string>
</array>
<key>com.apple.managedconfiguration.profiled.get</key>
<array>
<string>MachineInfo</string>
<string>ManagedApplications</string>
<string>NetworkExtension</string>
<string>WiFiNetworks</string>
</array>
<key>com.apple.managedconfiguration.profiled.provisioningprofiles</key>
<array>
<string>Installation</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>Validation</string>
</array>
<key>com.apple.managedconfiguration.profiled.set</key>
<array>
<string>ActivationLock</string>
<string>ActivationRecord</string>
<string>Certificates</string>
<string>ClientRestrictions</string>
<string>CloudConfiguration</string>
<string>Passcode</string>
<string>Safari</string>
<string>UserSettings</string>
</array>
<key>com.apple.managedconfiguration.profiled.usercompliance</key>
<true/>
<key>com.apple.mkb.usersession.delete</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.mkb.usersession.loginwindow</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.bubblepop</key>
<true/>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/DeviceName</string>
<string>com.apple.mobile.backup/LastCloudBackupDate</string>
</array>
<key>com.apple.private.lockdown.finegrained-set</key>
<array>
<string>NULL/DeviceName</string>
</array>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>Uninstall</string>
<string>Lookup</string>
<string>CopyDiskUsageForLaunchServices</string>
<string>UninstallForLaunchServices</string>
<string>InstallForLaunchServices</string>
</array>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
<string>systemgroup.com.apple.media.books.managed</string>
</array>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.wipedevice</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
</array>
</dict>
</plist>
