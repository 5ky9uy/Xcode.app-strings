15jet_render_mode
15jet_framebuffer
11jet_context
18jet_command_buffer
13jet_render_op
NSt3__117bad_function_callE
16jet_stencil_mode
22jet_depth_stencil_mode
18jet_texture_OpenGL
22jet_framebuffer_OpenGL
18jet_context_OpenGL
17jet_buffer_OpenGL
22jet_buffer_pool_OpenGL
19jet_constant_OpenGL
18jet_sampler_OpenGL
19jet_function_OpenGL
12jet_function
18jet_program_OpenGL
22jet_render_mode_OpenGL
23jet_stencil_mode_OpenGL
29jet_depth_stencil_mode_OpenGL
16jet_fence_OpenGL
NSt3__120__shared_ptr_pointerIP16jet_fence_OpenGLNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI16jet_fence_OpenGLEE
15jet_buffer_pool
11jet_program
?11jet_texture
12jet_constant
9jet_fence
11jet_sampler
10jet_buffer
@(#)PROGRAM:Jet  PROJECT:Jet-1
standardUserDefaults
dictionaryForKey:
mutableCopy
dictionary
stringByAppendingString:
objectForKey:
boolValue
integerValue
currentContext
setCurrentContext:
mainBundle
stringWithUTF8String:
pathForResource:ofType:
defaultCStringEncoding
stringWithContentsOfFile:encoding:error:
UTF8String
presentRenderbuffer:
alloc
sharegroup
initWithAPI:sharegroup:
null
setValue:forKey:
contextWithEAGLContext:options:
extent
render:toTexture:bounds:colorSpace:
imageWithTexture:size:flipped:colorSpace:
class
bounds
mainScreen
scale
renderbufferStorage:fromDrawable:
initWithAPI:
_bindGLContext
setClearsContextBeforeDrawing:
layer
setContentsScale:
setOpaque:
onInit
_createContext
_renderCallback
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
frame
drawRect:
initWithFrame:
_commonInit
initWithCoder:
layoutSubviews
_reshape
remakeFramebuffer
runOnce
renderInFramebuffer:forTime:
imageNamed:
CGImage
layerClass
canRenderToContextType:
isOpaque
context
contextType
createTextureFromImageNamed:
.cxx_destruct
.cxx_construct
_ctx
_framebuffer
_eaglLayer
_glContext
_frameBufferColorTexture
_frameBufferDepthStencilTexture
_colorRenderBuffer
_didRunOnce
_beginTime
_drawTimer
_renderFence
JetDefaults
Jet: 
jet_assert
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Jet_Sim/Jet-2.24/Jet/jet_utils.mm
value
Shader source is nullptr
    #extension GL_OES_standard_derivatives : enable
    precision highp float;
    precision highp int;
    precision lowp sampler2D;
    precision lowp samplerCube;
    #line 0
Program validate log:
GL_FRAMEBUFFER_COMPLETE
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
GL_FRAMEBUFFER_UNSUPPORTED
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
GL_FRAMEBUFFER_STATUS_UNKNOWN: 0x%X
%s%d
%s%f
GL_BYTE
GL_UNSIGNED_BYTE
GL_SHORT
GL_UNSIGNED_SHORT
GL_FIXED
GL_FLOAT
GL_TYPE_UNKNOWN
%s%s
xglPrintVertexAttrib: (%d) {
 GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 
 GL_VERTEX_ATTRIB_ARRAY_ENABLED: 
 GL_VERTEX_ATTRIB_ARRAY_SIZE: 
 GL_VERTEX_ATTRIB_ARRAY_STRIDE: 
 GL_VERTEX_ATTRIB_ARRAY_TYPE: 
 GL_VERTEX_ATTRIB_ARRAY_NORMALIZED: 
xglPrintState: {
 GL_CURRENT_PROGRAM: 
 GL_ARRAY_BUFFER_BINDING: 
 GL_ELEMENT_ARRAY_BUFFER_BINDING: 
GL_FRAMEBUFFER_BINDING: %d
 GL_COLOR_ATTACHMENT0: GL_RENDERBUFFER : %d {%d x %d}
 GL_COLOR_ATTACHMENT0: GL_TEXTURE : %d
 GL_COLOR_ATTACHMENT0: <NONE>
 GL_DEPTH_ATTACHMENT: GL_RENDERBUFFER : %d {%d x %d}
 GL_DEPTH_ATTACHMENT: GL_TEXTURE : %d
 GL_DEPTH_ATTACHMENT: <NONE>
 GL_STENCIL_ATTACHMENT: GL_RENDERBUFFER : %d {%d x %d}
 GL_STENCIL_ATTACHMENT: GL_TEXTURE : %d
 GL_STENCIL_ATTACHMENT: <NONE>
GL_NO_ERROR
GL_INVALID_ENUM
GL_INVALID_VALUE
GL_INVALID_OPERATION
GL_ERROR_UNKNOWN: 0x%X
GL_INVALID_FRAMEBUFFER_OPERATION
GL_OUT_OF_MEMORY
GL_ERROR_UNKNOWN: 0x:%X
xglAssertNoError
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Jet_Sim/Jet-2.24/Jet/xgl_utils.mm
code == GL_NO_ERROR
xglProgram
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Jet_Sim/Jet-2.24/Jet/xglProgram.mm
xglCompileShader(&vertexShaderId, GL_VERTEX_SHADER, vertexShaderSource)
xglCompileShader(&fragmentShaderId, GL_FRAGMENT_SHADER, fragmentShaderSource)
set_vertex_texture
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Jet_Sim/Jet-2.24/Jet/jet_context.mm
!texture->is_framebuffer_only()
set_fragment_texture
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
jet_createSharedContext
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Jet_Sim/Jet-2.24/Jet/Jet.mm
false
com.apple.Jet
v8@?0
create_texture
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Jet_Sim/Jet-2.24/Jet/jet_context_OpenGL.mm
depth == 1
array_length == 1
mip_mapped == false
data == nullptr
type == jet_texture_type_2D || type == jet_texture_type_Rect
width == height
begin_render_pass
colorTexture->is_color_attachment_compatible()
depthTexture->is_depth_attachment_compatible()
stencilTexture->is_stencil_attachment_compatible()
set_vertex_buffer
index >= 0
set_vertex_constant
set_vertex_sampler
draw_indexed: indexType must be 'unsigned_int' or 'unsigned_short'
draw_indexed
indexType == jet_component_type_unsigned_int || indexType == jet_component_type_unsigned_short
present
glTex->_gl_RenderbufferId
set_data
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Jet_Sim/Jet-2.24/Jet/jet_types_OpenGL.h
length + offset <= _length
commit_data
!is_framebuffer_only()
slice_index <= 5
replace_region
set_max_buffer_count
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Jet_Sim/Jet-2.24/Jet/jet_buffer_pool.mm
count >= _maxBufferCount
-[JetView remakeFramebuffer]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Jet_Sim/Jet-2.24/Jet/JetView.mm
colorWidth == width
colorHeight == height
context
T^{jet_context=^^?^{jet_render_mode}^{jet_framebuffer}IIII{shared_ptr<jet_fence>=^{jet_fence}^{__shared_weak_count}}{unordered_set<jet_buffer *, std::__1::hash<jet_buffer *>, std::__1::equal_to<jet_buffer *>, std::__1::allocator<jet_buffer *> >={__hash_table<jet_buffer *, std::__1::hash<jet_buffer *>, std::__1::equal_to<jet_buffer *>, std::__1::allocator<jet_buffer *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *>, std::__1::allocator<std::__1::__hash_node<jet_buffer *, void *> > >={__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *>=^{__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<jet_buffer *> >=Q}{__compressed_pair<float, std::__1::equal_to<jet_buffer *> >=f}}}@},R
JetView
#16@0:8
B20@0:8I16
B16@0:8
^{jet_context=^^?^{jet_render_mode}^{jet_framebuffer}IIII{shared_ptr<jet_fence>=^{jet_fence}^{__shared_weak_count}}{unordered_set<jet_buffer *, std::__1::hash<jet_buffer *>, std::__1::equal_to<jet_buffer *>, std::__1::allocator<jet_buffer *> >={__hash_table<jet_buffer *, std::__1::hash<jet_buffer *>, std::__1::equal_to<jet_buffer *>, std::__1::allocator<jet_buffer *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *>, std::__1::allocator<std::__1::__hash_node<jet_buffer *, void *> > >={__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *>=^{__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<jet_buffer *> >=Q}{__compressed_pair<float, std::__1::equal_to<jet_buffer *> >=f}}}@}16@0:8
I16@0:8
v16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@24@0:8@16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8^{jet_framebuffer=^^?[4{?=^{jet_texture}II}]{?=^{jet_texture}fII}{?=^{jet_texture}III}}16d24
^{jet_texture=^^?}24@0:8@16
@16@0:8
^{jet_context=^^?^{jet_render_mode}^{jet_framebuffer}IIII{shared_ptr<jet_fence>=^{jet_fence}^{__shared_weak_count}}{unordered_set<jet_buffer *, std::__1::hash<jet_buffer *>, std::__1::equal_to<jet_buffer *>, std::__1::allocator<jet_buffer *> >={__hash_table<jet_buffer *, std::__1::hash<jet_buffer *>, std::__1::equal_to<jet_buffer *>, std::__1::allocator<jet_buffer *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *>, std::__1::allocator<std::__1::__hash_node<jet_buffer *, void *> > >={__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *>=^{__hash_node_base<std::__1::__hash_node<jet_buffer *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<jet_buffer *> >=Q}{__compressed_pair<float, std::__1::equal_to<jet_buffer *> >=f}}}@}
^{jet_framebuffer=^^?[4{?=^{jet_texture}II}]{?=^{jet_texture}fII}{?=^{jet_texture}III}}
@"CAEAGLLayer"
@"EAGLContext"
^{jet_texture=^^?}
@"NSTimer"
{shared_ptr<jet_fence>="__ptr_"^{jet_fence}"__cntrl_"^{__shared_weak_count}}
