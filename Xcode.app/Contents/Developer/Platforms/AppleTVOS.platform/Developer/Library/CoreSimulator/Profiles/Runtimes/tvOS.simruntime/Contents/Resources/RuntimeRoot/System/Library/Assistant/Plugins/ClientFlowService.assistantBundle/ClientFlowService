numberWithInteger:
dictionaryWithObjects:forKeys:count:
appVocabularyType
valueForKey:
intValue
stringType
commandFailedWithReason:
dictionary
sharedInstance
appBundleId
query
vocabularyStringsForAppBundleId:vocabularyType:query:
alloc
init
allObjects
setVocabularyStrings:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
performWithCompletion:
performWithCompletion:serviceHelper:
initWithDictionary:
fetchContactVocabularyEntities
length
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
isValidInputString:
serialQueue
appContactVocabularyDictionary
count
personNameComponentsFromString:
familyName
caseInsensitiveCompare:
addObject:
givenName
middleName
enumerateObjectsUsingBlock:
copy
setAppContactVocabularyDictionary:
setValue:forKey:
enumerateVocabularyUsingBlock:
vocabularyEntryWithContactNamed:forApp:
isEqualToString:
containsString:ignoringCase:
.cxx_destruct
siriKitVocabNotificationToken
setSiriKitVocabNotificationToken:
setSerialQueue:
_siriKitVocabNotificationToken
_appContactVocabularyDictionary
_serialQueue
initWithServiceName:
stringWithFormat:
UTF8String
_setQueue:
setRemoteObjectInterface:
setExportedObject:
setExportedInterface:
sharedAnalytics
logEventWithType:context:
setInterruptionHandler:
setInvalidationHandler:
resume
connectionToScripterWithCommandProcessor:
scriptCachePathWithCompletion:
scriptCheckSumDictionaryWithCompletion:
warmUpWithSignal:completion:
performCommandExecutionForCommand:peerInfo:completion:
updateScriptCacheForFlowScript:completion:
updateScriptArchiveAtPath:completion:
removeScripts:completion:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
handleOneWayCommand:
handleCommand:reply:
isDeviceLockedWithPasscodeWithCompletion:
scriptIdentifiers
remoteObjectProxyWithErrorHandler:
invalidate
commandSucceeded
openSensitiveURL:
dismissAssistant
assistantLocalizedStringForKey:table:bundle:
isDeviceLockedWithPasscode
isTimeoutSuspended
requiresResponse
handleCommand:isOneWay:completion:
peerInfoForCurrentCommand
handleWithCompletion:
handleRemoteCommand:isOneWay:completion:
handleCommand:completion:
handleOneWayCommand:commandHandler:completion:
handleCommand:commandHandler:completion:
initWithServiceHelper:
initClientLiteHelper
serviceHelper
setServiceHelper:
isClientLiteHelper
setIsClientLiteHelper:
_isClientLiteHelper
_serviceHelper
localizedDescription
code
setErrorCode:
handleAppAuthorizationStatusRequestWithCompletion:
setAppAuthorizationStatusMap:
_siriAuthorizationStatusForAppID:
appBundleIds
dictionaryWithCapacity:
authorizationStatusResponseWithAuthorizationStatusMap:
countByEnumeratingWithState:objects:count:
bundleIdentifier
authorizationStatusForAppWithBundleId:
_intents_findAppsWithAnIntentsServiceExtension:
defaultSessionConfiguration
setNetworkServiceType:
setAllowsCellularAccess:
setWaitsForConnectivity:
setTimeoutIntervalForRequest:
set_allowsTLSSessionTickets:
setUnderlyingQueue:
sessionWithConfiguration:delegate:delegateQueue:
urlInformation
downloadUrl
jsScriptIdentifier
path
_isValidURL:
_errorWithDescription:errorCode:
scriptDownloadFailedForScript:error:
initWithURL:
_cf_httpMethod
setHTTPMethod:
headerFields
setAllHTTPHeaderFields:
session
statusCode
delegate
encryptionParameters
hmac
hmacKey
initializationVector
_verifyScriptData:hmac:hmacKey:iv:
_hmacVerificationEventContextWithEncryptionParameters:script:scriptData:
_decryptedDataForScriptEncryptedData:forScript:
_isValidDecryptedData:forScript:
fileContentType
_scriptStringFromData:
setJsScript:
downloadedScript:
_saveDecryptedData:script:
dataTaskWithRequest:completionHandler:
finishTasksAndInvalidate
_filePathForScriptArchiveIdentifier:
writeToFile:options:error:
scriptSavedToFilePath:forScript:
cachePath
lastPathComponent
stringByAppendingPathComponent:
errorWithDomain:code:userInfo:
host
hasSuffix:
scheme
verifyScriptData:hmac:hmacKey:iv:
type
encryptionKey
decryptData:withKey:iv:salt:
initWithData:encoding:
initWithUTF8String:
jsScriptChecksum
SHA256
isEqualToData:
setObject:forKey:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
initWithDelegate:
downloadScript:
invalidateTasks
_delegate
_session
clientScripter
defaultManager
removeItemAtPath:error:
_removeArchiveAtPath:
updateScriptsQueue
setScriptUpdateSuccess:
scriptsUpdateCount
setScriptsUpdateCount:
scripts
scriptUpdateSuccess
updateScriptsCompletion
commandFailed
_cf_needsDownload
downloadManager
_updateScriptsCompletedForScriptIdentifier:success:
_updateScriptCacheForScript:completion:
_updateScriptCacheForScriptArchiveAtPath:completion:
scriptsCachePath
setClientScripter:
setUpdateScriptsQueue:
setDownloadManager:
setUpdateScriptsCompletion:
setScriptsCachePath:
_updateScripts
_scriptUpdateSuccess
_scriptsUpdateCount
_clientScripter
_scriptsCachePath
_updateScriptsQueue
_downloadManager
_updateScriptsCompletion
cacheScriptForDomain:script:completion:
unarchiveFileAtPath:toDirAtPath:error:
isEmpty:
cachingEnabled
cacheFilePathForDomain:
dictionaryWithObject:forKey:
dataUsingEncoding:
createFileAtPath:contents:attributes:
scriptChecksumDictionary
updatedScriptForFlowScript:
scriptExistsForDomain:
scriptForDomain:
removeScriptWithIdentifier:
jsScript
compressedScript
stringWithContentsOfFile:encoding:error:
processInfo
systemUptime
logScriptLoadType:forDomain:loadTime:
removeObjectForKey:
contentsOfDirectoryAtPath:error:
initWithSuiteName:
boolForKey:
sharedStore
domain
scriptFromFileSystemForIdentifier:
jsLibraries
setJsScriptChecksum:
setJsScriptIdentifier:
setJsLibraries:
objectForKey:
freeArchive:result:errorMessage:error:
stringWithUTF8String:
arrayWithObjects:count:
pathWithComponents:
firstObject
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
hasPrefix:
scriptCheckSumDictionaryFromFileSystem
enumerateKeysAndObjectsUsingBlock:
createCacheDirectoryIfNeeded
populateChecksumDictionary
shouldOverrideScripts
cacheScriptForDomain:script:
cacheArchivedScriptsFromPath:error:
cachedScriptDomainsAndCheckSums
removeAllScriptsWithCompletion:
overrideScriptsFromLocalCacheInCommand:
isCacheEmpty
cacheFileQueue
setCacheFileQueue:
setScriptChecksumDictionary:
_cacheFileQueue
_scriptChecksumDictionary
aceId
logQueuer
queuedLogs
failureResponseWithAceId:logs:
setStatus:
initWithServiceHelper:withConnectionName:
initWithClientLiteWithConnectionName:
handleCommandCompletionWithResponse:forCommand:startOfExecution:
isTimeoutDisabled
initWithTimeoutInterval:timeoutHandler:
start
cancelIfNotAlreadyCanceled
aceObjectWithDictionary:context:
executeCommand:completion:
failureResponseForCommand:status:
setLogQueuer:
_logQueuer
mainBundle
bundleId
commandFailedWithError:
removeAllObjects
addLogMessage:
clearLogs
logQueue
setLogQueue:
_logQueue
_dataForOperation:withInputData:key:iv:
randomDataOfLength:
deriveKeyForPassword:withSalt:
bytes
dataWithLength:
mutableBytes
lengthOfBytesUsingEncoding:
dataWithBytesNoCopy:length:
appendData:
encryptData:withKey:iv:
decryptData:withKey:
encryptData:withPassword:iv:salt:
decryptData:withPassword:iv:salt:
deriveKeyForSaltedKey:withSalt:
deriveConsistentKeyForPassword:
backgroundAction
setRefId:
queue
handleBackgroundActionRequest:completion:
sharedPreferences
assistantIsEnabled
userDefaultsKnowledgeStore
doubleValue
date
timeIntervalSinceDate:
numberWithDouble:
setBackgroundAction:
setCachedDomainClassJavascriptChecksumMap:
setBackgroundActionPayload:
handleBackgroundAction:onDispatchGroup:
_scriptCheckSumsWithCompletion:
performMaintenanceWithCompletion:
setQueue:
_queue
%s Unknown app vocabulary type - %@
%s Invalid string type - %@
%s Registering for vocabulary notification
%s Failed to register for vocabulary notification
%s Invalid input - contactName=[%@] appBundleId=[%@]
%s Checking if %@ is in %@'s vocabulary
%s Input name is empty, returning all strings... 
%s App %@ does not have any vocabulary strings for contacts
%s Adding vocabulary for %@
%s Invalid appId: %@
%s Private HealthKit SPI not available
%s Creating new XPC connection
%s CFScripter XPC interrupted
%s AFAnalytics: %@
%s CFScripter XPC invalidated
%s Received RemoveScriptsCommand for %lu scripts
%s XPC connection error %@
%s Handle remove scripts command complete. Tearing down connection to ClientScripter
%s Using AFClientLite One Way for %@
%s Response for One Way Command %@ --> %@
%s Error %@ handling one way command %@
%s Using AFClientLite Two Way for %@
%s Response for Two Way command %@ --> %@
%s Error %@ handling command %@
%s Both _serviceHelper and _isClientLiteHelper are undefined. This isn't supposed to happen
%s Unhandled command %@
%s URL: %@
%s AFAnalytics: %@ with context: %@
%s URL: %@ %tu bytes
%s %@
%s Invalidating tasks
%s Unable to save archive to path %@ %@
%s Invalid host - %@
%s Not using https
%s No path
%s Decryption failed
%s Unsupported Encryption Type - %@
%s Decrypted checksum does not match original checksum.
%s hmac verification error, scriptIdentifier is empty
%s hmac verification error, downloadURL is empty
%s hmac verification error, hmac is empty
%s hmac verification error, hmacKey is empty
%s hmac verification error, initializationVector is empty
%s URLSession became invalid %@
%s URL Session received challenge %@
%s URL Session finish events delegate method called.
%s Successfully updated script %@ in filesystem
%s Failed to update script %@ in filesystem
%s Unable to remove archive at path: %@ %@
%s Removed archive at path: %@
%s Successfully archive %@ updated in filesystem
%s Failed to update script archive %@ in filesystem
%s Update scripts command completed %@ for %@.
%s Update Script completed for all scripts.
%s Beginning update scripts command handling
%s Updating %@
%s CDN Download
%s Non-CDN Download
%s Script updated successfully for %@
%s Script update failed for %@ %@
%s Script saved to file for %@
%s Connection to scripter could not be established
%s Received UpdateScriptsCommand with %lu scripts
%s Nothing to cache.. 
%s Cached flow script for domain %@
%s Saving script checksum in memory for script %@
%s Unable to cache domain script %@, error %@
%s No valid script found in command for script %@
%s Script is up-to-date in filesystem. Skipping update for script %@
%s Removing script with identifier %@ from cache
%s Uncompressed script not present, checking for compressed script
%s Decompressing script with identifier %@
%s Unable to read script at %@, error 0x%lx
%s Unable to read script for empty domain
%s Found script %@ in filesystem
%s Removed script %@
%s Failed to delete %@ error 0x%lx
%s Error hit while trying to get contents of cache directory %@ %@
%s Deleting file %@
%s Error hit while removing file %@ %@
%s Removing script checksum from memory for script %@
%s Deleted [%lu] files
%s Script force loaded from cache --> %@
%s Script could not be force loaded from cache, script not in cache --> %@
%s Unable to log scriptLoadType for empty domain
%s Script for %@ obtained from file
%s Script for %@ sent from server
%s Script for %@ used cached JSContext
%s Script for %@ retrieved from server
%s Unable to obtain script for %@
%s No files in cache
%s File system cache has [%lu] files
%s Processing %@
%s Finished extracting %@
%s Cache directory %@ is a file?
%s Cache directory does not exists, attempting to create now ...
%s Error creating directory %@: %@
%s Successfuly created cache directory %@
%s Unable to get contents of cache directory %@
%s Populating filesystem script checksum dictionary
%s Nil file name!
%s Skipping reading hidden file %@
%s Unable to read cache file for domain %@ - error %@
%s Merging checksums..
%s Updated script checksums
%s CF client command completed response class=%@
%s Not caching script %@ because error %@
%s Execution completed with %@
%s Timeout disabled, ignoring watch dog timeout...
%s Watch dog timeout. Killing scripter ...
%s Key size mismatch %tu != %tu
%s Not all bytes were decrypted correctly!
%s CCCryptorFinal() failed with %d
%s CCCryptorUpdate() failed with %d
%s Unable to create CCCryptor, error = %d
%s Decryption failed with status = %d
%s Response dictionary %@
%s StartBackgroundAction command response for %@ is %@
%s Client Flow command handler completed: %@
%s Starting Client Flow command handler
%s Handling UpdateScriptsCommand succeeded
%s Handling UpdateScriptsCommand failed with %@
%s Response for %@ is not of class CFFlowCommand, but %@
%s %@ completed with %@ and error=%@
%s Error requesting background action %@. %@
%s Requesting background action %@
%s Background action %@ Error %@ 
%s Completed BackgroundAction %@
%s Timer already cancelled
%s Assistant is disabled. Not running background actions.
%s Background Activity is not allowed for another %@ seconds
%s Starting background action %lu of %lu  with identifier %@
%s All background actions completed
%s Unable to get dispatch queue
-[CFAppVocabularySearchRequestHandler stringType]
-[CFAppVocabularySearchRequestHandler performWithCompletion:serviceHelper:]
Invalid app vocabulary type
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Synapse app vocabulary retriever
-[CFSiriKitVocabularyRetriever init]_block_invoke
v12@?0i8
-[CFSiriKitVocabularyRetriever init]
-[CFSiriKitVocabularyRetriever vocabularyEntryWithContactNamed:forApp:]
-[CFSiriKitVocabularyRetriever vocabularyEntryWithContactNamed:forApp:]_block_invoke
v24@?0@"NSString"8^B16
v8@?0
-[CFSiriKitVocabularyRetriever fetchContactVocabularyEntities]_block_invoke_2
v40@?0@"NSString"8q16@"NSSet"24^B32
-[CFSiriKitVocabularyRetriever vocabularyStringsForAppBundleId:vocabularyType:query:]
siriKitVocabNotificationToken
Ti,V_siriKitVocabNotificationToken
appContactVocabularyDictionary
T@"NSDictionary",&,V_appContactVocabularyDictionary
serialQueue
T@"NSObject<OS_dispatch_queue>",&,V_serialQueue
-[CFGetActiveWorkoutApplicationIdentifierHandler performWithCompletion:serviceHelper:]
Private HealthKit SPI not available
+[CFServiceConnector connectionToScripterWithCommandProcessor:]
%@.%tu
+[CFServiceConnector connectionToScripterWithCommandProcessor:]_block_invoke
-[CFRemoveScriptCommandHandler performWithCompletion:]_block_invoke
XPC connection error %@
v16@?0@"NSError"8
v12@?0B8
Local ace handler not implemented.
-[CFServiceHelper handleRemoteCommand:isOneWay:completion:]
-[CFServiceHelper handleRemoteCommand:isOneWay:completion:]_block_invoke
v16@?0@"SABaseCommand"8
v20@?0B8@"NSError"12
Both _serviceHelper and _isClientLiteHelper are not set in CFServiceHelper
serviceHelper
T@"<AFServiceHelper>",&,V_serviceHelper
isClientLiteHelper
TB,V_isClientLiteHelper
v24@?0@"SABaseCommand"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
apple.com
https
CFScriptDownloadManager.Session
-[CFScriptDownloadManager downloadScript:]
scriptIdentifier
scriptURL
Error: Invalid URL
-[CFScriptDownloadManager downloadScript:]_block_invoke
NSURLSession error: %@
clientError
Unexpected response: %@ code:%ld
statusCode
Script failed HMAC verification!
Unable to decrypt file %@
Script file content type is not supported %@
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
-[CFScriptDownloadManager invalidateTasks]
Archive file path could not be obtained
-[CFScriptDownloadManager _saveDecryptedData:script:]
-[CFScriptDownloadManager _isValidURL:]
-[CFScriptDownloadManager _decryptedDataForScriptEncryptedData:forScript:]
-[CFScriptDownloadManager _isValidDecryptedData:forScript:]
-[CFScriptDownloadManager _hmacVerificationEventContextWithEncryptionParameters:script:scriptData:]
hmac
hmacKey
initializationVector
-[CFScriptDownloadManager URLSession:didBecomeInvalidWithError:]
-[CFScriptDownloadManager URLSession:didReceiveChallenge:completionHandler:]
-[CFScriptDownloadManager URLSessionDidFinishEventsForBackgroundURLSession:]
delegate
T@"<CFScriptDownloadDelegate>",R,V_delegate
session
T@"NSURLSession",R,V_session
-[CFUpdateScriptsCommandHandler _updateScriptCacheForScript:completion:]_block_invoke
-[CFUpdateScriptsCommandHandler _removeArchiveAtPath:]
-[CFUpdateScriptsCommandHandler _updateScriptCacheForScriptArchiveAtPath:completion:]_block_invoke
-[CFUpdateScriptsCommandHandler _updateScriptsCompletedForScriptIdentifier:success:]_block_invoke
successfully
failed
Result
Succeeded
Failed
-[CFUpdateScriptsCommandHandler _updateScripts]
-[CFUpdateScriptsCommandHandler _updateScripts]_block_invoke
v32@?0@"SACFClientFlowScript"8Q16^B24
-[CFUpdateScriptsCommandHandler downloadedScript:]_block_invoke
-[CFUpdateScriptsCommandHandler scriptDownloadFailedForScript:error:]
-[CFUpdateScriptsCommandHandler scriptSavedToFilePath:forScript:]_block_invoke
-[CFUpdateScriptsCommandHandler performWithCompletion:]_block_invoke
-[CFUpdateScriptsCommandHandler performWithCompletion:]
XPC connection could not be established to Scripter
UpdateScriptsCompletion Queue
v16@?0@"NSString"8
clientScripter
T@"<CFScripting>",&,V_clientScripter
scriptsCachePath
T@"NSString",&,V_scriptsCachePath
scriptsUpdateCount
Ti,V_scriptsUpdateCount
scriptUpdateSuccess
TB,V_scriptUpdateSuccess
updateScriptsQueue
T@"NSObject<OS_dispatch_queue>",&,V_updateScriptsQueue
downloadManager
T@"CFScriptDownloadManager",&,V_downloadManager
updateScriptsCompletion
T@?,C,V_updateScriptsCompletion
com.apple.siri.ClientFlow.ScriptCache
com.apple.siri.ClientFlow
clientflow.scriptoverride
-[CFFileCacheStore cacheScriptForDomain:script:completion:]
-[CFFileCacheStore cacheScriptForDomain:script:completion:]_block_invoke
-[CFFileCacheStore updateScriptCacheForFlowScript:completion:]
-[CFFileCacheStore updatedScriptForFlowScript:]
-[CFFileCacheStore scriptFromFileSystemForIdentifier:]_block_invoke
-[CFFileCacheStore scriptForDomain:]
-[CFFileCacheStore scriptForDomain:]_block_invoke
-[CFFileCacheStore removeScriptWithIdentifier:]_block_invoke
v32@?0@"NSString"8Q16^B24
-[CFFileCacheStore removeAllScriptsWithCompletion:]_block_invoke
-[CFFileCacheStore overrideScriptsFromLocalCacheInCommand:]
-[CFFileCacheStore overrideScriptsFromLocalCacheInCommand:]_block_invoke
%.02fms
-[CFFileCacheStore logScriptLoadType:forDomain:loadTime:]
scriptLoadTime
-[CFFileCacheStore isCacheEmpty]_block_invoke
%@ failed with error: %s
-[CFFileCacheStore freeArchive:result:errorMessage:error:]
archive_read_support_compression_all()
archive_read_support_format_all()
archive_read_open_filename()
-[CFFileCacheStore unarchiveFileAtPath:toDirAtPath:error:]
archive_read_extract() for %s
-[CFFileCacheStore createCacheDirectoryIfNeeded]
-[CFFileCacheStore scriptCheckSumDictionaryFromFileSystem]
-[CFFileCacheStore scriptCheckSumDictionaryFromFileSystem]_block_invoke
-[CFFileCacheStore populateChecksumDictionary]_block_invoke
v32@?0@"NSString"8@"NSData"16^B24
com.apple.siri.ClientFlow.FileCacheStore
cacheFileQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_cacheFileQueue
scriptChecksumDictionary
T@"NSMutableDictionary",&,N,V_scriptChecksumDictionary
ClientFlowPlugin
-[CFRequestHandler handleCommandCompletionWithResponse:forCommand:startOfExecution:]
-[CFRequestHandler handleCommandCompletionWithResponse:forCommand:startOfExecution:]_block_invoke
-[CFRequestHandler handleCommand:completion:]_block_invoke
-[CFRequestHandler handleCommand:completion:]
Command timed out!
v16@?0@"NSDictionary"8
T@"CFServiceHelper",&,V_serviceHelper
logQueuer
T@"CFLogQueuer",&,V_logQueuer
localizedDescription
Command not supported
-[CFPEXQueryHandler performWithCompletion:serviceHelper:]
%f- %@
logQueue
T@"NSMutableArray",&,V_logQueue
ClientFlow.SecurityUtils
+[CFSecurityUtils encryptData:withKey:iv:]
+[CFSecurityUtils decryptData:withKey:]
+[CFSecurityUtils _dataForOperation:withInputData:key:iv:]
MinimumWaitInSecondsBeforeNextBackgroundActivity
LastBackgroundActivityDate
com.apple.siri.ClientFlow.CFBackgroundActionService
-[CFBackgroundActionService _scriptCheckSumsWithCompletion:]_block_invoke
+[CFBackgroundActionService handleBackgroundActionRequest:completion:]_block_invoke
CFBackgroundActionService.handling
+[CFBackgroundActionService handleBackgroundActionRequest:completion:]_block_invoke_2
+[CFBackgroundActionService handleBackgroundActionRequest:completion:]
-[CFBackgroundActionService handleBackgroundAction:onDispatchGroup:]_block_invoke_2
-[CFBackgroundActionService handleBackgroundAction:onDispatchGroup:]_block_invoke
Watchdog timeout for %@!
-[CFBackgroundActionService performMaintenanceWithCompletion:]
-[CFBackgroundActionService performMaintenanceWithCompletion:]_block_invoke_2
v32@?0@"SAStartBackgroundActionRequest"8Q16^B24
-[CFBackgroundActionService performMaintenanceWithCompletion:]_block_invoke
queue
T@"NSObject<OS_dispatch_queue>",&,V_queue
CKKnowledgeStore
initCKKnowledgeStore
/BuildRoot/Library/Caches/com.apple.xbs/Sources/LocalFlowService_Sim/LocalFlowService-212.52/ClientFlowService/CFBackgroundActionService.m
classCKKnowledgeStore
/System/Library/PrivateFrameworks/CoreKnowledge.framework/CoreKnowledge
CoreKnowledgeLibrary
frameworkLibrary
CFAppVocabularySearchRequestHandler
AFServiceCommand
NSObject
CFSiriKitVocabularyRetriever
CFGetActiveWorkoutApplicationIdentifierHandler
CFServiceConnector
CFScripting
CFCommandProcessing
CFRemoveScriptCommandHandler
CFLocalAceHandling
CFServiceHelper
AFServiceHelper
CFAppAuthorizationRequestHandler
CFScriptDownloadManager
NSURLSessionDelegate
CFUpdateScriptsCommandHandler
CFScriptDownloadDelegate
CFFileCacheStore
CFRequestHandler
CFPEXQueryHandler
CFLogQueuer
CFSecurityUtils
CFBackgroundActionService
AFServiceMaintenance
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v32@0:8@?16@24
@24@0:8@16
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24
@24@0:8@"NSDictionary"16
q16@0:8
@32@0:8@16@24
v16@0:8
@40@0:8@16q24@32
i16@0:8
v20@0:8i16
v24@0:8@16
@"NSDictionary"
@"NSObject<OS_dispatch_queue>"
v32@0:8@16@?24
v40@0:8@16@24@?32
v24@0:8@?<v@?@"NSString">16
v32@0:8@"SACFSignal"16@?<v@?B>24
v40@0:8@"SACFAbstractClientCommand"16@"AFPeerInfo"24@?<v@?@"SABaseCommand">32
v32@0:8@"SACFClientFlowScript"16@?<v@?B>24
v32@0:8@"NSString"16@?<v@?B>24
v32@0:8@"NSArray"16@?<v@?B>24
v24@0:8@"SABaseCommand"16
v32@0:8@"SABaseCommand"16@?<v@?@"SABaseCommand">24
v24@0:8@?<v@?B>16
v24@0:8@?<v@?@"SABaseCommand"@"NSError">16
@40@0:8@16@24@32
B24@0:8@"NSURL"16
@"NSString"40@0:8@"NSString"16@"NSString"24@"NSBundle"32
v32@0:8@"SABaseCommand"16@?<v@?@"SABaseCommand"@"NSError">24
@"AFPeerInfo"16@0:8
v36@0:8@16B24@?28
v20@0:8B16
@"<AFServiceHelper>"
v32@0:8@16@24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
@28@0:8@16i24
B48@0:8@16@24@32@40
B32@0:8@16@24
@"<CFScriptDownloadDelegate>"
@"NSURLSession"
v24@0:8@"SACFClientFlowScript"16
v32@0:8@"NSString"16@"SACFClientFlowScript"24
v32@0:8@"SACFClientFlowScript"16@"NSError"24
v28@0:8@16B24
@?16@0:8
@"<CFScripting>"
@"NSString"
@"CFScriptDownloadManager"
v32@0:8@16^@24
v40@0:8q16@24d32
v44@0:8^{archive=}16i24@28^@36
v40@0:8@16@24^@32
@"NSMutableDictionary"
@32@0:8@16q24
v40@0:8@16@24d32
@"CFServiceHelper"
@"CFLogQueuer"
@"NSMutableArray"
@48@0:8@16@24@32@40
@48@0:8@16@24^@32^@40
@44@0:8I16@20@28@36
@24@0:8Q16
v24@0:8@?<v@?>16
