com.apple.PineBoardServices.Server
%@ Hash %lu
token
T@"NSUUID",R,N,V_token
requestType
TQ,R,N,V_requestType
restrictionContentType
TQ,N,V_restrictionContentType
restrictedSettingType
TQ,N,V_restrictedSettingType
rating
T@"NSNumber",C,N,V_rating
allowInteraction
TB,N,V_allowInteraction
serviceRequestCompletionBlock
T@?,C,N,V_serviceRequestCompletionBlock
resultHandler
T@?,C,N,V_resultHandler
T@"NSString",C,N,V_PIN
locationd
itunesstored
v8@?0
#T:[%@%p] #Error #%@ : Can't handle user notification from source: %@ [%@ -- %@] 
Main:
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
notificationFilter
T@?,C,N,V_notificationFilter
InputAllowed
AppSwitcherAllowed
IdleTimerAllowed
SiriAndDictationAllowed
SystemDialogsAllowed
SystemNowPlayingAllowed
VoiceOverEnabled
ZoomEnabled
InvertColorsEnabled
ClosedCaptionsEnabled
AudioDescriptionsEnabled
SwitchControlEnabled
ColorAdjustmentsDisabled
LightSensitivityEnabled
ReduceWhitePointEnabled
VoiceOverShortcutEnabled
ZoomShortcutEnabled
InvertColorsShortcutEnabled
ClosedCaptionsShortcutEnabled
AudioDescriptionsShortcutEnabled
SwitchControlShortcutEnabled
ColorAdjustmentsShortcutEnabled
LightSensitivityShortcutEnabled
ReduceWhitePointShortcutEnabled
Single App
Default
ID: %@
Mode: %@
 Opts: %@
mode
TQ,R,N,V_mode
bundleIdentifier
T@"NSString",R,C,N,V_bundleIdentifier
options
T@"NSDictionary",R,C,N,V_options
titleLabel
T@"UILabel",R,N,V_titleLabel
bodyLabel
T@"UILabel",R,N,V_bodyLabel
footerLabel
T@"UILabel",R,N,V_footerLabel
primaryButton
T@"UIButton",R,N,V_primaryButton
secondaryButton
T@"UIButton",R,N,V_secondaryButton
footerButton
T@"UIButton",R,N,V_footerButton
imageView
T@"UIImageView",R,N,V_imageView
combinedGuide
T@"UILayoutGuide",R,N,V_combinedGuide
textAndButtonsGuide
T@"UILayoutGuide",R,N,V_textAndButtonsGuide
imageGuide
T@"UILayoutGuide",R,N,V_imageGuide
buttonConstraints
T@"NSArray",R,C,N,V_buttonConstraints
titleText
T@"NSString",C,N,V_titleText
bodyText
T@"NSString",C,N,V_bodyText
footerText
T@"NSString",C,N,V_footerText
image
T@"UIImage",&,N,V_image
remoteConnection
T@"PBSystemServiceConnection",R,N,V_remoteConnection
com.apple.appletv.pbs.native-mode-switching
kioskAppConfiguration
currentDisplayMode
displayConnection
v24@?0@"NSDictionary"8@"NSError"16
-[PBApplication init]_block_invoke
FocusedProcessBinding
focusedProcess
PowerManagerSleepBinding
deviceAsleep
v16@?0@"NSNotification"8
ATVHIDSystemClientNotification_StartBSR
com.apple.sysdiagnose.sysdiagnoseStarted
com.apple.sysdiagnose.sysdiagnoseStopped
ScreenshotCaptured
StackShotTakenTitle
#T:[%@%p] #Error #%@ : Nested sysdiagnose invocations ignored. 
RunningSysdiagnoseTitle
#T:[%@%p] #Error #%@ : Mismatched sysdiagnose invocations ignored. 
#T:[%@%p] #Notice #%@ : New screenshot captured while screenshot captured bulletin already on screen. Squelching repost. 
#T:[%@%p] #Notice #%@ : Posting screenshot captured bulletin. 
ScreenshotCapturedTitle
#T:[%@%p] #Notice #%@ : Screenshot captured bulletin finished (%@). 
successfully
v20@?0B8@"NSError"12
v24@?0@"UIPress"8^B16
ATVHIDSystemClientNotification_SendLogs
EnhancedUIKitLogging
-[PBApplication _handlePhysicalButtonEvent:]
down
-[PBApplication _handleHIDEvent:]
-[PBApplication _prepareButtonEvent:withPressInfo:]
DOWN:
UP:  
-[PBApplication _handleKeyUIEvent:]
-[PBApplication sendEvent:]
resetIdleTimerAndUndim
IdleTimeOutBinding
v16@?0@"PBApplication"8
-[PBApplication _handleIdleTimeoutDidChange]
v24@?0@"FBScene"8^B16
com.apple.PineBoardServices.SystemService.HiliteModeActive
#T:[%@%p] #Error #%@ : Failed to register global Hilite mode state notification [%x] 
-[PBApplication _handleScreenSaverTrigger:]
-[PBApplication _handleCRDAppTrigger:]
-[PBApplication _handleSleepTrigger:]
-[PBApplication _handleBluetoothRemoteSleepTrigger:]
-[PBApplication _handleIdleBackgroundTasksTrigger:]
-[PBApplication _notifyIdleTasksEnabledDidChange]
-[PBApplication _handleProcessDidExitNotification:]
-[PBApplication _handleFocusedProcessDidChange]
BluetoothRemoteProximityDetection
NoNetworkAlertTitle
NoNetworkAlertSubtitle
#T:[%@%p] #Notice #%@ : Kiosk app configuration changed. Existing %@. New %@ 
Terminating process due to single app mode
-[PBApplication _blackScreenRecoveryModeNotification:]
v20@?0B8@"PBSDisplayMode"12
v12@?0B8
#T:[%@%p] #Notice #%@ : Sleep timeout changed by %@ 
#T:[%@%p] #Notice #%@ : Sleep requested by %@ for %@ 
#T:[%@%p] #Notice #%@ : Odd, device is already asleep. Ignoring request. 
#T:[%@%p] #Notice #%@ : Wake requested by %@ for %@ 
#T:[%@%p] #Notice #%@ : Relaunch backboardd requested by %@ 
backboardd
#T:[%@%p] #Notice #%@ : Relaunch requested by %@ 
#T:[%@%p] #Notice #%@ : Reboot requested by %@ 
#T:[%@%p] #Notice #%@ : Detected user presence. Invalidating idle timer 
UserPresenceDetected
#T:[%@%p] #Notice #%@ : Detected user presence but SS is already active. 
#T:[%@%p] #Notice #%@ : Activate screen saver requested by %@ 
#T:[%@%p] #Notice #%@ : Deactivate screen saver requested by %@ 
#T:[%@%p] #Notice #%@ : Menu button event requested by %@ 
Activate app if playing music after idle time:
remote presence detection
@"PBSUserActivityTrigger"8@?0
hilite mode
screen saver
sleep
idle-type background tasks
PBS: Deactivate Screen Saver
com.apple.PineBoardServices.SystemService.PresenceDetectionActive
B24@?0@"FBScene"8^B16
v16@?0@"NSTimer"8
boot-args
serial=3
#T:[%@%p] #Warning #%@ : Device has questionable boot-args: %@ 
com.apple.UIKit.LoggingPreferences
com.apple.UIKit
LogGesture
LogHIDEventIncoming
LogUIFocusLoggingEnabled
#T:[%@%p] #Notice #%@ : Enhancing UIKit logs. Previously: %@ 
#T:[%@%p] #Notice #%@ : Lessening UIKit logs 
v16@?0q8
statusBarStyle
Tq,R,N
statusBarHidden
TB,R,N
statusBarForegroundTransparent
TB,R,N,GisStatusBarForegroundTransparent
statusBarContextID
TI,R,N
defaultStatusBarStyle
defaultStatusBarHidden
userInterfaceStyle
defaultPNGName
T@"NSString",R,C,N
defaultPNGExpirationTime
Td,R,N
compatibilityMode
deviceOrientationEventsEnabled
interfaceOrientationChangesDisabled
interfaceOrientation
supportedInterfaceOrientations
TQ,R,N
idleTimerDisabled
proximityDetectionModes
controlCenterAmbiguousActivationMargin
controlCenterRevealMode
notificationCenterRevealMode
primaryWindowOverlayInsets
T{UIEdgeInsets=dddd},R,N
backgroundStyle
idleModeVisualEffectsEnabled
whitePointAdaptivityStyle
requestedDisplayMode
T@"FBSDisplayMode",R,C,N
displayConfigurationRequest
T@"FBSDisplayConfigurationRequest",R,C,N
reachabilitySupported
TB,R,N,GisReachabilitySupported
wantsExclusiveForeground
visibleMiniAlertCount
audioCategoriesDisablingVolumeHUD
T@"NSArray",R,N
brightnessLevel
disablesMirroring
Display Change
bluetoothRemoteKeepAliveTimer
T@"NSTimer",&,N,V_bluetoothRemoteKeepAliveTimer
remotePresenceDetectionTrigger
T@"PBSUserActivityTrigger",&,N,V_remotePresenceDetectionTrigger
hiliteModeTrigger
T@"PBSUserActivityTrigger",&,N,V_hiliteModeTrigger
screenSaverTrigger
T@"PBSUserActivityTrigger",&,N,V_screenSaverTrigger
sleepTrigger
T@"PBSUserActivityTrigger",&,N,V_sleepTrigger
bluetoothRemoteSleepTrigger
T@"PBSUserActivityTrigger",&,N,V_bluetoothRemoteSleepTrigger
idleTypeBackgroundTasksTrigger
T@"PBSUserActivityTrigger",&,N,V_idleTypeBackgroundTasksTrigger
crdAppTrigger
T@"PBSUserActivityTrigger",&,N,V_crdAppTrigger
appActivateInfoByBundleIdentifier
T@"NSMutableDictionary",&,N,V_appActivateInfoByBundleIdentifier
suppressWakeForHIDEventsTimer
T@"NSTimer",&,N,V_suppressWakeForHIDEventsTimer
T@"PBKioskAppConfiguration",C,N,V_kioskAppConfiguration
airPlayActive
TB,N,V_airPlayActive
isScreenSaverIdle
kioskAppIdentifier
T@"NSString",C,N,V_bundleIdentifier
openURL
T@"NSURL",C,N,V_openURL
trigger
T@"PBSUserActivityTrigger",&,N,V_trigger
Dismissed
Dismissing
Presented
Presenting
Activate
Dismiss
Success
Failure
Watchdog Fired
UserAction
CompletionHandler
@"NSString"40@?0@"TVSStateMachine"8@"NSString"16@24@"NSDictionary"32
v16@?0@?<v@?>8
v56@?0@"TVSStateMachine"8@"NSString"16@"NSString"24@"NSString"32@40@"NSDictionary"48
#T:[%@%p] #Error #%@ : Failed to register global idle state notification [%x] 
#T:[%@%p] #Error #%@ : Failed to set global idle state to %d [%x] 
#T:[%@%p] #Error #%@ : Failed to post global idle state notification [%x] 
com.apple.TVIdleScreen
com.apple.TVScreenSaver
TVScreenSaverServiceViewControllerName
com.apple.TVScreenSaver.preferences.notify
screenSaverActivationDelayInMinutes
Td,N,V_screenSaverActivationDelayInMinutes
screenSaverPrefs
T@"TVSPreferences",R,N,V_screenSaverPrefs
stateMachine
T@"TVSStateMachine",R,N,V_stateMachine
pendingActivationRequests
T@"NSMutableArray",R,N,V_pendingActivationRequests
needsDismissal
TB,N,V_needsDismissal
screenSaverViewController
T@"PBRemoteViewController",&,N,V_screenSaverViewController
observers
T@"NSHashTable",R,N,V_observers
watchdogTimer
T@"NSObject<OS_dispatch_source>",&,N,V_watchdogTimer
screenSaverIsActive
displayState
TQ,R,N,V_displayState
holdOffForMusicEnabled
TB,N,V_holdOffForMusicEnabled
com.apple.appletv.backgroundstate
uninitialized
text field
submitting
canceled
menu pressed
view appeared
dialog button pressed
Don't touch Jim
ButtonContinue
-[PBUserNotificationTextEntryViewController _menuButtonPressed:]
-[PBUserNotificationTextEntryViewController _handleHomeButton]
notification
T@"PBCFUserNotification",&,N
delegate
T@"<PBUserNotificationViewControllerDelegate>",W,N
childViewController
T@"UIViewController",&,N,V_childViewController
menuRecognizer
T@"UITapGestureRecognizer",&,N,V_menuRecognizer
T@"TVSStateMachine",&,N,V_stateMachine
currentTextField
Tq,N,V_currentTextField
userValues
T@"NSMutableArray",&,N,V_userValues
preferredUserInterfaceStyle
Tq,N,V_preferredUserInterfaceStyle
T@"PBCFUserNotification",&,N,V_notification
T@"<PBUserNotificationViewControllerDelegate>",W,N,V_delegate
PBAppLaunchLog
PBApplication
PBAppDelegate
numberOfTaps
TQ,R,N,V_numberOfTaps
T@"<PBTapGestureRecognizerDelegate>",W,D,N
recognizeOnPressDown
TB,N,V_recognizeOnPressDown
init
purge
idle
autocheck
manual-check
download-confirm
clear-asset-download-space
download
apply-confirm
apply-recheck
apply-recheck-cleanup
clear-brain-download-space
download-brain
clear-prepare-space
apply
reboot
cancel
manual-check-fired
restore-request
confirm-download
cancel-update
start-apply
start-apply-confirmed
init-after-update
init-on-boot
purge-ok
auto-check-fired
no-updates
yes-updates-bad-time
yes-updates-good-time
check-error
download-error
download-ok
no-space
yes-space
apply-fail
apply-ok
cancel-ok
timeout
apply-redownload
apply-proceed
OSSoftwareUpdate
OS update process starting, %@after update. (UUID %@)
not 
Store bag valid - noting app restarted update stage
Store bag not valid - listening for store bag load notification.
com.apple.PineBoard.SWU.SpaceClearing
Configuration for action %@.
Still initializing. Deferred action %d.
Install
Update check
Download
Failed to configure for action %@. %@ already in progress [%d].
Not starting deferred action %d
Unrecognized action during start:%@
Locating download for asset %@
Found download %@
No asset or no in-progress download.
Attempting to make asset download %@discretionary
non-
Reconfigured download OK.
Failed to reconfigure download: %d
Ignoring request for purgeable asset size while performing an update (state:%d).
Ignoring request to purge assets while performing an update (state:%d).
Ignoring auto check during state %@.
Ignoring manual check during state %@.
Ignoring restore during state %@.
Ignoring cancel during state %@.
Build
User requested reboot from slow update during clear prepare space.
User requested reboot from slow update during apply.
Ignoring manual check during cancel.
Starting prior asset purge...
Prior asset purge completed (purged %@ bytes).
v16@?0@"NSNumber"8
com.apple.MobileAsset.SoftwareUpdate
com.apple.MobileAsset.MobileSoftwareUpdate.UpdateBrain
Brain Server URL: %@
Asset Server URL: %@
Personalization Server URL: %@
AppleConnect credentials entered: %@
VPN profile loaded: %@
Found installed update %@
v32@?0@"MAAsset"8@"NSDate"16@"NSError"24
No installed update found. Failing install only action.
v16@?0@"PBSOSUpdateDescriptor"8
Found asset %@ with attributes:
    %@ : %@
No asset found.
Reporting update available
Clearing any old assets...
Removed %@ bytes.
Reporting no updates - bad time to update
Skipping recheck for manual install only.
Failed to recheck asset version - trying to apply old version [%@].
OSVersion
Rechecking version (%@/%@ vs %@/%@)
Forcing a recheck via default.
Need to redownload asset.
Asset is still current.
Recheck: good time to download
AutoApply: %@ time to download: asleep:%d idle:%d
good
Check: %@ time to download. (manual check: %@)
Asset already downloaded.
v16@?0@"MAProgressNotification"8
Purging all prior local assets in preparation to download...
Starting asset download... (%@discretionary)
Asset download complete.
Asset download failed [%d].
Asset download failed with an unexpected error [%d].
Asset found in unexpected state: %d. Failing update.
Current download not found during download success.
Download canceled (our state:%@)
Current download not found during download failure.
Sufficient prepare/apply space. Continuing...
Insufficient prepare/apply space. unused:%llu required:%llu. Failing update.
Preparing update at %@
Prepare update failed because the payload was not found: %@
Skipping progress notificaiton - no current asset.
Brain download canceled with error %@ (our state:%@)
Brain: Error during %@: %@
Brain %@ progress
Brain %@ progress percent:%@
Brain progress stalled unexpectedly [%@] - canceling.
Unexpected brain operation %@
Canceling update prior to download.
Asset download canceled [%d].
Canceling download asset in state: %ld
Current download not found during cancel.
Canceling apply asset in state: %ld
TIMEOUT: Clearing obliterate flag.
TIMEOUT: Attempting to reboot in 2 sec...
Asset download space check: asset installed:%d enoughSpace:%d requiredSpace:%lld unusedSpace:%llu
Asset space check returned insufficient space but an invalid requiredSpace of OFF_MAX. Failing update.
Asset space check returned insufficient space for asset download.
Required space (%llu) <= unused space (%llu), yet spaceCheck failed. Adjusting unused space.
Space needed (%llu - %llu = %llu) less than minimum, Using minimum (%llu).
Requesting %llu - %llu = %llu bytes ...
Space cleared but no longer checking asset download space. Failing update.
Asset download space REcheck: asset installed:%d enoughSpace:%d requiredSpace:%lld unusedSpace:%llu
v16@?0@"NSError"8
asset download
Conflicting asset download space data [err:%@ hasSpace:%d required:%llu unused:%llu].
Current download not found during download space check.
Brain download space check: enoughSpace:%d requiredSpace:%lld unusedSpace:%llu error:%@
Unexpected negative brain size without corresponding error. Failing update.
Brain download space recheck: hasSpace:%d requiredSpace:%lld unusedSpace:%llu error:%@
brain download
Insufficient brain download space.
Unable to determine brain size [%@]. Failing update.
Failed to get installation size from MSU [%@].
Prepare/Apply space check: requiredSpace:%llu unusedSpace:%llu (installationSize:%llu padding:%llu).
Insufficient space for Prepare/Apply. Requesting %llu - %llu = %llu bytes...
Prepare/Apply space recheck: required:%llu unused:%llu error:%@
Space cleared but no longer checking prepare/apply space. Failing update.
Attempting to clear space: %llu bytes ...
Requesting CacheDelete for space ...
CacheDelete request completed; purged:%llu error:%@
v24@?0q8@"NSError"16
Unable to clear sufficient space. CacheDelete failed: %@
CacheDelete cleared sufficient space.
Still need to clear %llu bytes.
Purgeable space %llu bytes insufficient to cover need %llu bytes. Failing update.
Successfully cleared sufficient space
MDM-triggered auto-apply check
auto-apply check
manual check
background check
restore
manual check only
manual download only
manual install only
Sufficient %@ space.
Starting slow update timer with timeout %.2f.
Stopping slow update timer.
Slow update timer fired.
Store bag loaded - noting app restarted update stage.
state
TQ,N,V_state
machine
T@"TVSStateMachine",&,N,V_machine
action
TQ,N,V_action
deferredAction
TQ,N,V_deferredAction
scanOptions
T@"PBSOSUpdateScanOptions",C,N,V_scanOptions
asset
T@"MAAsset",&,N,V_asset
assetReleaseDate
T@"NSDate",C,N,V_assetReleaseDate
slowUpdateTimer
T@"NSTimer",&,N,V_slowUpdateTimer
needToCancelMSUOperation
TB,N,V_needToCancelMSUOperation
assetIsLarge
TB,N,V_assetIsLarge
downloadAssetWithDiscretionaryPriority
TB,N,V_downloadAssetWithDiscretionaryPriority
isApplyingRecheckedUpdate
TB,N,V_isApplyingRecheckedUpdate
sentDownloadFinishedCallback
TB,N,V_sentDownloadFinishedCallback
userConfirmedApplyAtCheckTime
TB,N,V_userConfirmedApplyAtCheckTime
lastMSUPercentCompleted
Tf,N,V_lastMSUPercentCompleted
lastDownloadProgressNotification
T@"MAProgressNotification",&,N,V_lastDownloadProgressNotification
spaceClearingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_spaceClearingQueue
T@"<PBOSSoftwareUpdateProcessDelegate>",W,N,V_delegate
-------
UpdateLog.txt
[%@] %@
ERROR: %s
v24@?0@"<NSSecureCoding>"8@"NSError"16
dismissResultHandler
T@?,C,N,V_dismissResultHandler
terminationHandler
T@?,C,N,V_terminationHandler
/System/Library/PCPlugins
pcBundle
#T:[%@%p] #Notice #%@ : Considering %@. 
#T:[%@%p] #Error #%@ : Failed to load plugin at %@: %@ 
#T:[%@%p] #Notice #%@ : Loaded Plugin %@ (and called +pbUIPluginDidLoad) %@. 
#T:[%@%p] #Notice #%@ : Failed to create an instance of Plugin for URL %@. 
#T:[%@%p] #Notice #%@ : Loaded Plugin (no action taken) %@. 
presentedViewController
T@"UIViewController",&,N,V_presentedViewController
PBSnapshotVariantAppSwitcher
preferLaunchImage
TB,N,V_preferLaunchImage
preferredScaleFactor
Td,N,V_preferredScaleFactor
variant
T@"NSString",C,N,V_variant
type
Tq,R,N,V_type
item
T@"PBAppSwitcherItem",R,C,N,V_item
fromIndexPath
T@"NSIndexPath",R,C,N,V_fromIndexPath
toIndexPath
T@"NSIndexPath",R,C,N,V_toIndexPath
com.apple.PineBoard.PBExternalControlSystem.systemMusic
com.apple.PineBoard.PBExternalControlSystem.systemAudio
[System Music]
[System Audio]
B32@?0@"MPAVRoute"8Q16^B24
SpeakerVolumeGenericTitle
bulletinService
T@"PBBulletinService",&,N,V_bulletinService
volumeBulletin
T@"PBSBulletin",&,N,V_volumeBulletin
systemMusicRoutingController
T@"MPAVRoutingController",R,N,V_systemMusicRoutingController
systemAudioRoutingController
T@"MPAVRoutingController",R,N,V_systemAudioRoutingController
systemMusicVolumeController
T@"MPVolumeController",R,N,V_systemMusicVolumeController
systemAudioVolumeController
T@"MPVolumeController",R,N,V_systemAudioVolumeController
systemMusicVolume
T@"NSNumber",R,N,V_systemMusicVolume
systemAudioVolume
T@"NSNumber",R,N,V_systemAudioVolume
systemMusicVolumeSupported
TB,R,N,V_systemMusicVolumeSupported
systemAudioVolumeSupported
TB,R,N,V_systemAudioVolumeSupported
systemMusicVolumeNotificationsEnabled
TB,R,N,V_systemMusicVolumeNotificationsEnabled
systemAudioVolumeNotificationsEnabled
TB,R,N,V_systemAudioVolumeNotificationsEnabled
updatingVolumeValues
TB,R,N,V_updatingVolumeValues
T@"<PBVolumeControllerDelegate>",R,W,N,V_delegate
AppTransitionStateMachine
PBAppTransitionOverlayWindow
InitialState
BeginTransitionState
BeginAnimationCompleteWaitingSceneUpdateState
SceneUpdateCompleteWaitingBeginAnimationState
FinalTransitionState
ForegroundUpdateState
CompletedState
BeginEvent
SceneReadyEvent
ForegroundUpdateCompleteEvent
TransactionDidFailEvent
BeginAnimationCompleteEvent
[PBAppTransitionViewController -initWithNibName:bundle:] should not be used.
[PBAppTransitionViewController -initWithCoder:] should not be used.
/private/var/mobile/
v16@?0@"PBSnapshotLoadRequest"8
shouldUseLaunchImage
TB,R,N,V_shouldUseLaunchImage
animationDuration
Td,R,N,V_animationDuration
transitionType
Tq,R,N,V_transitionType
appSwitcherToDefaultKiosk
TB,R,N,V_appSwitcherToDefaultKiosk
visibleViewAfterInitialAnimation
T@"UIView",&,N,V_visibleViewAfterInitialAnimation
wallpaperView
T@"UIView",&,N,V_wallpaperView
overlayWindows
T@"NSMutableArray",&,N,V_overlayWindows
overlayHostContainer
T@"UIView",&,N,V_overlayHostContainer
transitionTransaction
T@"PBAppTransitionTransaction",R,N,V_transitionTransaction
completion
T@?,C,N,V_completion
%@{identifier : %@; providerType : %@}
identifier
T@"NSString",C,V_identifier
providerType
T@"NSString",C,V_providerType
v16@?0@"NSDictionary"8
#T:[%@%p] #Warning #%@ : PBServiceProviderRegistry: attempt to register endpoint with nil identifier denied (providerType: %@) 
#T:[%@%p] #Notice #%@ : PBServiceProviderRegistry: registering endpoint %@ for {%@ : %@} 
#T:[%@%p] #Warning #%@ : PBServiceProviderRegistry: attempt to clear endpoint with nil identifier denied 
#T:[%@%p] #Notice #%@ : PBServiceProviderRegistry: clearing endpoints {%@} 
#T:[%@%p] #Notice #%@ : PBServiceProviderRegistry: getting endpoint for {%@ : %@} 
#T:[%@%p] #Notice #%@ : PBServiceProviderRegistry: got endpoint %@ for {%@ : %@} 
%@://%@
PBDialogOptionPresentWhileScreenSaverActiveKey
PBDialogOptionPresentImmediatelyKey
AirPlay
Screen-Saver
FocusedApp
PBScreenSaverOptionUserInitiatedKey
TVRestrictionPINServiceViewController
com.apple.TVRestrictionPINService
v16@?0@"<NSSecureCoding>"8
v24@?0@"_UIRemoteViewController"8@"NSError"16
v16@?0@"TVSUIBlackScreenRecoveryViewController"8
v24@?0@"TVSUIBlackScreenRecoveryIterator"8@"TVSUIBlackScreenRecoveryViewController"16
v24@?0@"NSString"8^B16
B32@?0@"PBViewControllerPresentationRequest"8Q16^B24
Switcher - New Transition
AppLaunch
New Transition
TVCRDServiceLoadingViewController
TVCRDServiceInstructionsViewController
playbackLaunchShroudWindow
screenSaverWindow
airPlayWindow
v16@?0@"PBNavigationController"8
routingWindow
nowPlayingWindow
restrictionPINWindow
blackScreenRecoveryWindow
siriWindow
dialogWindow
bulletinWindow
appSwitcherWindow
appTransitionWindow
wallpaperWindow
crdLoadingWindow
crdInstructionsWindow
eventMaskingWindow
hotBlackWindow
tvBarWindow
v16@?0@"FBSDisplayLayoutElement"8
T@"PBWindow",&,N,V_hotBlackWindow
criticalAlertWindow
T@"PBWindow",&,N,V_criticalAlertWindow
softwareUpdateWindow
T@"PBOSUpdateWindow",&,N,V_softwareUpdateWindow
T@"PBWindow",&,N,V_eventMaskingWindow
T@"PBWindow",&,N,V_airPlayWindow
T@"PBWindow",&,N,V_bulletinWindow
T@"PBWindow",&,N,V_playbackLaunchShroudWindow
T@"PBWindow",&,N,V_dialogWindow
T@"PBWindow",&,N,V_siriWindow
T@"PBWindow",&,N,V_routingWindow
T@"PBWindow",&,N,V_nowPlayingWindow
T@"PBWindow",&,N,V_restrictionPINWindow
T@"PBWindow",&,N,V_screenSaverWindow
T@"PBWindow",&,N,V_appSwitcherWindow
T@"PBWindow",&,N,V_appTransitionWindow
T@"PBWindow",&,N,V_wallpaperWindow
T@"PBWindow",&,N,V_blackScreenRecoveryWindow
T@"PBWindow",&,N,V_crdLoadingWindow
T@"PBWindow",&,N,V_crdInstructionsWindow
T@"PBWindow",&,N,SsetTVBarWindow:,V_tvBarWindow
presentedBulletinViewController
T@"PBRemoteBulletinViewController",&,N,V_presentedBulletinViewController
dialogHiddenClients
T@"NSMutableSet",R,C,N,V_dialogHiddenClients
bulletinDismissalTimer
T@"NSObject<OS_dispatch_source>",R,N,V_bulletinDismissalTimer
pendingDialogRequests
T@"NSMutableArray",R,N,V_pendingDialogRequests
pendingBulletinRequests
T@"NSMutableArray",R,N,V_pendingBulletinRequests
pendingTransitionTransactions
T@"NSMutableArray",R,N,V_pendingTransitionTransactions
focusedAppDisplayLayoutElement
T@"FBDisplayLayoutElement",&,N,V_focusedAppDisplayLayoutElement
appTransitionHelper
T@"_PBWindowManagerAppTransitionHelper",&,N,V_appTransitionHelper
crdInstructionWindowIdentifier
TQ,N,V_crdInstructionWindowIdentifier
crdInstructionWindowGroup
T@"NSObject<OS_dispatch_group>",&,N,V_crdInstructionWindowGroup
useSnapshotForSiri
TB,R,N,V_useSnapshotForSiri
siriViewController
T@"UIViewController",R,N,V_siriViewController
siriSnapshotView
T@"UIView",R,N,V_siriSnapshotView
pendingAirPlayController
T@"UIViewController",&,N,V_pendingAirPlayController
presentingAirPlayWindow
TB,N,V_presentingAirPlayWindow
screenSaverState
Tq,N,V_screenSaverState
siriAssertionCheckedOut
TB,N,V_siriAssertionCheckedOut
dialogAssertionCheckedOut
TB,N,V_dialogAssertionCheckedOut
recoveryIterator
T@"TVSUIBlackScreenRecoveryIterator",&,N,V_recoveryIterator
presentingDialogWindow
presentingRouting
presentingNowPlaying
presentingPINRequest
presentingSiriSession
siriIsFullscreen
TB,N,V_siriIsFullscreen
presentingAppSwitcher
presentingAppTransition
presentingCRDLoadingWindow
presentingCRDInstructionsWindow
shouldAnimateCRDInstructionsHUD
TB,N,V_shouldAnimateCRDInstructionsHUD
presentingTVBarWindow
viewController
T@"UIViewController",R,N,V_viewController
T@"NSDictionary",C,N,V_options
timeoutInSeconds
Td,N,V_timeoutInSeconds
com.apple.PineBoard.appDelegate
com.apple.PineBoard.appDepot
com.apple.PineBoard.appLaunch
com.apple.PineBoard.appLifecycle
com.apple.PineBoard.appSwitcher
com.apple.PineBoard.appTesting
com.apple.PineBoard.bulletin
com.apple.PineBoard.crd
com.apple.PineBoard.displayManager
PBSDisplayManager
PBModeSwitchingManager
com.apple.PineBoard.event
com.apple.PineBoard.externalControl
actions
volume
com.apple.PineBoard.mediaRemote
observer
service
com.apple.PineBoard.nowPlaying
com.apple.PineBoard.osUpdate
com.apple.PineBoard.osUpdateProgress
com.apple.PineBoard.powerManager
com.apple.PineBoard.processManager
com.apple.PineBoard.screenSharing
com.apple.PineBoard.screenSaver
com.apple.PineBoard.singleApp
com.apple.PineBoard.snapshotService
com.apple.PineBoard.appearance
PBSystemAppearance
com.apple.PineBoard.systemService
com.apple.PineBoard.userNotifications
com.apple.PineBoard.userPresentationService
com.apple.PineBoard.videoSubscriberAccountService
com.apple.PineBoard.verificationOperation
com.apple.PineBoard.window
PBWindowManager
PBWindow
%@, dynamicRange: %@, frameRate: %0.2f, SDRColorMapping: %@
dynamicRange
Tq,R,N,V_dynamicRange
roundedFrameRate
frameRate
Td,R,N,V_frameRate
SDRColorMapping
Tq,R,N,V_SDRColorMapping
v32@?0@"PBDisplayModePredicate"8Q16^B24
v32@?0@"NSNumber"8Q16^B24
B16@?0@"PBSDisplayMode"8
HDR10
DolbyVision
DolbyVisionLowLatency
YCbCr
RGBLimited
RGBFull
None
com.apple.pineboard.display_mode_switch_active
selectedRouteVolume.volume
routingController
T@"TVPAudioRoutingController",&,N,V_routingController
swipeUpProgress
Td,N,V_swipeUpProgress
swipeUpItem
T@"NSIndexPath",C,N,V_swipeUpItem
Unimplemented
-[PBHomeMediaAccessControlManager init] not supported, use +sharedInstance instead
localAccessory
securityType
accessType
password
non-null
null
-[PBHomeMediaAccessControlManager _handleHomeAccessoryUpdate]
Successfully updated
Failed to update
Successfully removed
Failed to remove
PBSAirPlayAccessTypeAny
PBSAirPlayAccessTypeWiFiOnly
PBSAirPlayAccessTypeHomeOnly
PBSAirPlaySecurityTypeNone
PBSAirPlaySecurityTypeOnscreenCode
PBSAirPlaySecurityTypePassword
HMUserPrivilegeNone
HMUserPrivilegeRegular
HMUserPrivilegeAdministrator
#T:[%@%p] #Notice #%@ : WNLog: Start monitoring What's New 
com.apple.TVWhatsNew.needsBecomeActive
v12@?0i8
#T:[%@%p] #Notice #%@ : Good time to show What's New! 
#T:[%@%p] #Notice #%@ : WNLog: Will NOT update What's New schedule. Service has not started or time interval is the same 
#T:[%@%p] #Notice #%@ : WNLog: scheduling What's New with interval: %f. 
#T:[%@%p] #Notice #%@ : WNLog: What's New cannot be shown. User is not on home screen. Will retry. 
v28@?0B8@"UIViewController"12@"NSError"20
checkTimeInterval
Td,N
screenWidth
Td,R,N,V_screenWidth
screenHeight
Td,R,N,V_screenHeight
%@-%@
PBSiriLog
#T:[%@%p] #Notice #%@ : Semantic Context Screen Action Items: %@ 
#T:[%@%p] #Notice #%@ : Focusable Screen Action Items: %@ 
v32@?0@"PBSiriScreenActionItem"8Q16^B24
#T:[%@%p] #Notice #%@ : Returning Screen Action Items: %@ 
#T:[%@%p] #Notice #%@ : Semantic Context AXElements: %@ 
#T:[%@%p] #Notice #%@ : Focusable AXElements: %@ 
accessibilityElement
T@"AXElement",&,N,V_accessibilityElement
semanticContext
T@"NSDictionary",&,N,V_semanticContext
commandScreenActionItems
T@"NSArray",C,N,V_commandScreenActionItems
currentScreenActionItems
T@"NSArray",R,C,N
com.apple.appletv.pbs.now-playing-view-service
UIReceivesLongPressPlayPause
SupportsSharedQueue
PBSupportsActiveRouteNowPlaying
TVNowPlayingServiceViewControllerName
com.apple.
systemApplication
TB,R,N,GisSystemApplication
appleApplication
TB,R,N,GisAppleApplication
receivesLongPressPlayPause
TB,R,N,V_receivesLongPressPlayPause
supportsSharedQueue
TB,R,N,V_supportsSharedQueue
supportsActiveRouteNowPlaying
TB,R,N,V_supportsActiveRouteNowPlaying
nowPlayingViewControllerClassName
T@"NSString",R,C,N,V_nowPlayingViewControllerClassName
Identifier: %@, Generated Semantic Context: %@, AX Info: %@
%gx%g
%@/%@/%@/%@/%@/%@
T@"NSString",C,N,V_identifier
com.apple.appletv.hw.booted
com.apple.appletv.hw.restart.full
com.apple.appletv.hw.sleep.idle
com.apple.appletv.hw.sleep.settings
com.apple.appletv.hw.sleep.systemmenu
com.apple.appletv.hw.sleep.cec
com.apple.appletv.hw.sleep.siri
com.apple.appletv.hw.sleep.externaldevice
com.apple.appletv.hw.wake.forcepair
com.apple.appletv.hw.wake.useractivity
com.apple.appletv.hw.wake.cec
com.apple.appletv.hw.wake.externaldevice
com.apple.appletv.hw.wake.airplay
com.apple.appletv.hw.wake.siri_button
com.apple.appletv.hw.wake.siri_command
com.apple.appletv.hw.darkwake.osswu
com.apple.appletv.hw.memorypressure.1
com.apple.appletv.hw.thermal
com.apple.appletv.video.resolution
com.apple.appletv.video.mode
com.apple.appletv.remote.batteryRecharges
com.apple.appletv.remote.buttonPresses
com.apple.appletv.remote.tvButtonPresses
com.apple.appletv.remote.inertialSensorTime
com.apple.appletv.remote.audioStreamTime
com.apple.appletv.recoverymode.triggered
com.apple.appletv.recoverymode.resetallsettings
com.apple.appletv.recoverymode.restart
com.apple.appletv.inputdeviceusage.bt_remote
com.apple.appletv.inputdeviceusage.ir_remote
com.apple.appletv.inputdeviceusage.cec
com.apple.appletv.inputdeviceusage.bt_keyboard
com.apple.appletv.inputdeviceusage.game_controller
com.apple.appletv.inputdeviceusage.remote_app
com.apple.appletv.longplaypausepresentedrouting
com.apple.appletv.inputdeviceusage.longpressplaypausehandledbyapp
com.apple.appletv.remote.pairedCount
com.apple.appletv.remote.genericCount
com.apple.appletv.remote.remoteCount
com.apple.appletv.remote.keyboardCount
com.apple.appletv.remote.audioCount
com.apple.appletv.remote.controllerCount
AVLogs
MediaserverLogs
PlaybackLogs
WiFiLogs
ThermalLogs
BluetoothLogs
ConfigLogs
userxp-edid-url
atvMetricsTopics
atv_av_connectivity
metrics
metricsUrl
atvMetricsQuantizeSeconds
atvMetricsQuantizeButtonPresses
com.apple.PineBoard.NANDReporting
com.apple.PineBoard.DataReportingService
DiagnosticsAllowed
com.apple.iqagent
DisplayModeBinding
@distinctUnionOfArrays.self
mediaserverd_log
Library/Logs/CrashReporter
mediaserverd_log%ld.txt
playbacklog_
wifiDriver-
wifiManager-
wifi-
Library/Logs/CrashReporter/WiFi
Library/Logs/CrashReporter/WiFi/WiFiManager
com.apple.airplay.log
/Library/Logs/CrashReporter
thermstats
com.apple.MobileBluetooth.debug
com.apple.wirelessproxd.debug
DiagnosticMode
ShouldLog
Library/Logs/Bluetooth
ConfigData.plist
ConfigurationInfo
EDIDData
CrashReporterKey
itmsID
mediaID
DiagnosticLogPushTitle
DiagnosticLogPushSingleMessage
DiagnosticLogPushMultipleMessage
v16@?0@"PBDataReportingService"8
EDID
CoreControl
%@/%@
subtopic
device
version
os-ver
%@=%@
%@?%@
Accept-Language
X-Apple-TV-Version
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
seenEDIDs
T@"NSMutableSet",&,N,V_seenEDIDs
toReportEDIDData
T@"NSMutableDictionary",&,N,V_toReportEDIDData
lastSentEDIDTimestamp
T@"NSDate",&,N,V_lastSentEDIDTimestamp
keyTimingStarts
T@"NSMutableDictionary",&,N,V_keyTimingStarts
keyTimingTotals
T@"NSMutableDictionary",&,N,V_keyTimingTotals
NANDReportingThread
T@"NSThread",&,N,V_NANDReportingThread
com.apple.language.changed
com.apple.purplebuddy.LanguageResetReady
AppleDatePreferencesChangedNotification
observing
TB,N,GisObserving,V_observing
T@"<PBLanguageChangeObserverDelegate>",W,N,V_delegate
PBFixedWallpaperPath
11.0
v24@?0@"LSBundleProxy"8^B16
com.apple.PBSnapshotService.imageProcessing
com.apple.PineBoard.PBSnapshotService.access
operations
@"UIImage"8@?0
v32@?0@"XBApplicationSnapshot"8Q16^B24
v16@?0B8B12
q24@?0@"NSNumber"8@"NSNumber"16
accessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_accessQueue
imageProcessingQueue
T@"NSOperationQueue",R,N,V_imageProcessingQueue
pendingImageOperations
T@"NSMutableArray",R,N,V_pendingImageOperations
targetUserInterfaceStyle
Tq,R,N,V_targetUserInterfaceStyle
shouldPerformASAP
TB,R,N,V_shouldPerformASAP
generationBlock
T@?,R,C,N,V_generationBlock
org.khronos.ktx
imageProvider
T@?,R,C,N,V_imageProvider
saveCompletion
T@?,C,N,V_saveCompletion
Tq,R,N,V_variant
snapshotManifest
T@"XBApplicationSnapshotManifest",R,N,V_snapshotManifest
snapshot
T@"XBApplicationSnapshot",R,N,V_snapshot
provider
T@"NSObject<XBSnapshotDataProvider>",R,N,V_provider
generationCompletion
T@?,C,N,V_generationCompletion
%p Group: %@ Type: %@ Interface: %lu Variant: %@ ID: %@ 
PBBulletinLog
#T:[%@%p] #Notice #%@ : bulletinService %@ handle dismissal missing bulletin for viewController %@ 
#T:[%@%p] #Notice #%@ : bulletinService %@ handle dismissal missing viewController %@ remoteViewController %@ 
viewControllersByBulletin
T@"NSMapTable",R,N,V_viewControllersByBulletin
pendingBulletinsByRequestID
T@"NSMutableDictionary",R,N,V_pendingBulletinsByRequestID
delegateProxy
T@"<PBSBulletinServiceDelegate>",&,N,V_delegateProxy
computedAttributes
T@"NSDictionary",C,N,V_computedAttributes
focusableCellSize
T{CGSize=dd},R,N,V_focusableCellSize
originIndexPath
T@"NSIndexPath",C,N,V_originIndexPath
title
T@"NSString",C,N,V_title
titleOpacity
Td,N,V_titleOpacity
JustForSuchAnOcclusionSceneIdentifier
didRecognizeDoubleTap
didRecognizeTripleTap
%@ [%@]
No Name
WindowUpdate
-[PBWindow gestureRecognizer:shouldReceivePress:]
occluding
TB,N,GisOccluding,V_occluding
displayLayoutElement
T@"FBDisplayLayoutElement",&,N,V_displayLayoutElement
shouldOcclude
TB,N,V_shouldOcclude
name
T@"NSString",R,C,N,V_name
NULL
MENU
HOME
SELECT
MICROPHONE
PLAYPAUSE
VOLUMEUP
VOLUMEDOWN
DOWN
LEFT
RIGHT
PICK
UNKNOWN
MorseCode
PrimaryUsagePage
PrimaryUsage
IOClass
AppleEmbeddedKeyboard
-[ATVHIDSystemClient _processHIDEvent:]
OtherReason
ButtonDown
ButtonUp
Sleep
Wake
wallpaperViewController
T@"PBWallpaperViewController",&,N,V_wallpaperViewController
dismissLastViewControllerBlock
T@?,C,N,V_dismissLastViewControllerBlock
B32@?0@"PBAppSwitcherItem"8Q16^B24
v32@?0@"NSString"8Q16^B24
v32@?0@"LSApplicationProxy"8Q16^B24
v32@?0@"PBAppSwitcherItem"8Q16^B24
focusedProcessBundleID
T@"NSString",R,C,N,V_focusedProcessBundleID
itemsIncludingUpdates
T@"NSMutableArray",R,C,N,V_itemsIncludingUpdates
applicationIdentifierToAppState
T@"NSDictionary",C,N,V_applicationIdentifierToAppState
T@"<PBAppSwitcherManagerDelegate>",W,N,V_delegate
items
T@"NSArray",R,C,N,V_items
kioskItem
T@"PBAppSwitcherItem",R,N,V_kioskItem
focusedProcessItem
T@"PBAppSwitcherItem",R,N,V_focusedProcessItem
pendingUpdates
T@"NSArray",R,C,N,V_pendingUpdates
PBAppDepotAppStateDidChangeNotification
com.apple.HeadBoard
com.apple.purplebuddy
com.apple.TVSettings
com.apple.TVPhotos
com.apple.TVHomeSharing
com.apple.TVWatchList
com.apple.TVMovies
com.apple.TVShows
com.apple.TVAppStore
PBAppDepotQueueSpecificKey
PBAppDepotQueueSpecificContext
com.apple.PineBoard.PBAppDepot
com.apple.PineBoard.PBAppDepot.Preheat
TVAppEnabledOverride
com.apple.PineBoard.PBAppDepot.BBObserver
PBSAppState
Programming Guide
Blacklist
Not Whitelisted
Info.plist
Simulator
Restricted
Unknown
#T:[%@%p] #Notice #%@ : Single app configuration. Proposed %@. Evaluated %@. App whitelist options dict %@ 
v16@?0@"NSArray"8
appState
T@"NSDictionary",R,C
internalAppState
T@"NSMutableDictionary",&,N,V_internalAppState
internalProvisionedAppIdentifiers
T@"NSArray",C,N,V_internalProvisionedAppIdentifiers
appWhitelistOptions
T@"NSArray",R,C,N,V_appWhitelistOptions
internalKioskAppConfiguration
T@"PBKioskAppConfiguration",C,N,V_internalKioskAppConfiguration
enforceProvisioningOnSystemAppsEnabled
TB,N,V_enforceProvisioningOnSystemAppsEnabled
bbObserver
T@"BBObserver",&,N,V_bbObserver
monitor
T@"FBSApplicationDataStoreMonitor",&,N,V_monitor
provisionedAppIdentifiers
T@"NSArray",R,C
T@"PBKioskAppConfiguration",R,C
usesBackgroundNetwork
TB,N
badgeValue
T@,C,N
nextWakeDate
T@"NSDate",&,N
realAppState
T@"PBSMutableAppState",R,N,V_realAppState
clientPresentationCompletion
T@?,C,N,V_clientPresentationCompletion
  contentOffset: %f
  snapshotOffset: %f
contentOffset
Td,N,V_contentOffset
contentScale
Td,N,V_contentScale
cornerRadius
Td,N,V_cornerRadius
blurRadius
Td,N,V_blurRadius
blurRect
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_blurRect
maskRect
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_maskRect
shadowAlpha
Td,N,V_shadowAlpha
shadowBlurRadius
Td,N,V_shadowBlurRadius
textAlpha
Td,N,V_textAlpha
snapshotOffset
Td,N,V_snapshotOffset
headerHidden
TB,N,GisHeaderHidden,V_headerHidden
contentHidden
TB,N,GisContentHidden,V_contentHidden
PBSystemServiceDidEstablishDefaultKioskConnectionNotification
com.apple.PBSystemService.XPCListener
com.apple.PineBoardServices
defaultKioskConnection
T@"PBSystemServiceConnection",W,N,V_defaultKioskConnection
com.apple.springboard.CFUserNotification
machineVerificationFailed
highSecurityAccountVerificationFailed
carrierBillingVerificationFailed
com.apple.SBUserNotification
started successfully
failed to start
T@"<PBUserNotificationDelegate>",W,N,V_delegate
errorHandler
T@"SSErrorHandler",&,N,V_errorHandler
connected
TB,GisConnected,V_connected
registeredOperationClasses
T@"NSMutableDictionary",&,N,V_registeredOperationClasses
AlertSource
PBAppSwitcherRequester
PBAppTransitionRequester
[PBSceneView -initWithFrame:] should not be used.
[PBSceneView -initWithCoder:] should not be used.
sceneHostView
T@"UIView<FBSceneHostView>",R,W,N,V_sceneHostView
snapshotView
T@"UIView<FBSceneHostSnapshotView>",R,N,V_snapshotView
backgroundView
T@"UIView",R,N,V_backgroundView
bundleID
T@"NSString",R,C,N,V_bundleID
requester
T@"NSString",R,C,N,V_requester
scene
T@"FBScene",R,N,V_scene
hasBackground
TB,N,V_hasBackground
useSnapshot
TB,N,V_useSnapshot
com.apple.locationd.bundle-/System/Library/LocationBundles/TimeZone.bundle
almanac
T@"GEOAlmanac",&,N,V_almanac
locationForDaylight
T{CLLocationCoordinate2D=dd},N,V_locationForDaylight
locationManager
T@"CLLocationManager",&,N,V_locationManager
isDaylight
locationAvailable
TB,R,N,GisLocationAvailable
kCLAuthorizationStatusDenied
kCLAuthorizationStatusAuthorizedAlways
kCLAuthorizationStatusRestricted
kCLAuthorizationStatusNotDetermined
kCLAuthorizationStatusAuthorizedWhenInUse
#T:[%@%p] #Notice #%@ : Application semantic context: %@ 
#T:[%@%p] #Notice #%@ : Creating ACE object for screen action item semantic context: %@ 
AFContextManager
Unable to find class %s
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
SAScreenActionList
/System/Library/PrivateFrameworks/SAObjects.framework/SAObjects
SAScreenActionInfo
PBMachineDataOperationErrorDomain
No response provided for machine data
No user signed in for machine data
#T:[%@%p] #Notice #%@ : Triggering MD action: %@ 
#T:[%@%p] #Error #%@ : MD action failed: %@ 
#T:[%@%p] #Notice #%@ : MD action succeeded 
response
T@"NSHTTPURLResponse",&,N,V_response
TV-App Developer Settings
Q24@?0@"PBSMigrationContext"8^@16
com.apple.itunesstored
EnforceProvisioningOnSystemApps
HumeDeveloperConfigurationEnabled
HumeFamilyCarryConfigurationEnabled
InitiateSessionURL
Auto App Updates
AutoAppUpdatesEnabled
AutoUpdatesEnabled
Reset Restrictions
TVResolutions
TVDisplayID
TVUserSelectedMode
TVSeenPluggedIn
TVSpecialVirtualMode
TVCanDoHighBandwidthModes
TVCompletedDisplayAssistant
TVUserPreferredRefreshRate
TVUserShouldModeSwitchForDynamicRange
TVUserShouldModeSwitchForFrameRate
TVLastCableErrorInfo
TVDisplayDetectedPoorCableConnection
TVDisplayCableAlertPresentationTime
TVDisplayCableCheckCumulativeTime
_TVPreferDolbyLowLatency
_TVInternalDebugAlwaysSaveMode
_TVDisplayCableHistoryWindowSecondsOverride
_TVCableErrorPollingIntervalOverride
_TVCableScoreOverride
_TVDisplayCableAlertIntervalOverride
v32@?0@8@16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
customerMessage
carrierBillingUrls
verifyCodeUrl
sendCodeUrl
localization
customerSubmitButtonMessage
customerSendNewCodeButtonMessage
verificationCode
success
No failure info provided
v16@?0@"NSString"8
#T:[%@%p] #Warning #%@ : %@: Dialog returned while sending code 
#T:[%@%p] #Error #%@ : %@: CarM send code failed 
#T:[%@%p] #Error #%@ : %@: CarM code verification failed 
explanation
#T:[%@%p] #Warning #%@ : %@: User entered wrong CarM SMS code 
#T:[%@%p] #Error #%@ : %@: CarM verify code failed 
guid
POST
application/x-apple-plist
Content-Type
ButtonOK
v16@?0@"UIAlertAction"8
codeHandler
T@?,C,N,V_codeHandler
sendNewCodeBlock
T@?,C,N,V_sendNewCodeBlock
customerTitle
T@"NSString",&,N,V_customerTitle
T@"NSString",&,N,V_customerMessage
failureClientInfo
T@"NSDictionary",&,N,V_failureClientInfo
sceneID
T@"NSString",C,N,V_sceneID
v16@?0@"UIGraphicsImageRendererContext"8
context
T@"XBSnapshotDataProviderContext",R,&,N
T@"FBSceneSnapshot",R,N,V_snapshot
cachedImage
T@"UIImage",R,N,V_cachedImage
scaleFactor
Td,R,N,V_scaleFactor
T@"XBSnapshotDataProviderContext",R,&,N,V_context
launch
resume
quit
SiriBringupTV
testName
displayIdentifier
launchArguments
arguments
--suspended
testOptions
startTestBeforePluginActivation
PBUnavailableBundleListLoaderErrorDomain
PBAppProgrammingInfoKeyProvisionedAppIdentifiers
PBAppProgrammingInfoKeyDisabledAppIdentifiers
atv-headboard-url
contentIds
hideContentIds
merchant-mapping-url
PBAppManagementLog
#T:[%@%p] #Error #%@ : %s - Failed to load %@: %@ 
-[PBUnavailableBundleListLoader _loadMappingInfoWithError:]_block_invoke
v32@?0@"NSURLResponse"8@16@"NSError"24
-[PBUnavailableBundleListLoader _loadProgrammingInfoWithError:]_block_invoke
#T:[%@%p] #Notice #%@ : %@ missing from the URL bag. 
cancelled
TB,R,N,GisCancelled
Ignoring nested calls to get asset space. Returning zero.
Computing asset space...
Found %d potential assets to purge.
Adding asset size %lld (total: %lld).
Asset catalog refresh failed [%d].
Ignoring nested calls to purge assets. Returning zero bytes purged.
Determining local assets to purge.
Failed to refresh metadata during purge [%d].
Determining asset for action %d.
Asset catalog refresh error, returning no asset found.
Determining installed asset for update %@.
Asset missing all attributes when trying to create a descriptor.
ReleaseType
SUPublisher
ActualMinimumSystemPartition
Asset missing ActualMinimumSystemPartition when trying to create a descriptor. Trying MinimumSystemPartition.
MinimumSystemPartition
Asset missing MinimumSystemPartition too when trying to create a descriptor. Update will fail.
Ramp
SystemPartitionPadding
PrerequisiteBuild
PrerequisiteOSVersion
q24@?0@8@16
Expected only one local asset, found %d.
OS updates are delayed by %d days.
OS updates are not delayed.
Failed to get asset query to determine posted date. Cannot compute update delay expiration.
Asset query returned %d candidates (result: %d/%d postedDate: %@ action:%d).
Delaying updates but overriding because MDM asking for scan.
B32@?0@8Q16^B24
After filtering, %d candidate assets remain.
Candidate assets in order:
Update from: %@/%@ to: %@/%@/%@
Selected Asset %@
Installed asset query returned %d candidates (result: %d/%d postedDate: %@ update:%@).
Found matching installed asset %@ for %@.
No matching installed asset found.
Checking update for action %d from %@/%@/%@, prereq: %@/%@ to: %@/%@/%@ (delaying updates: %@)
Rejecting asset: different release types (%@ installed != %@).
Rejecting asset: attempted back-rev: %@/%@ offered / %@/%@ installed.
Rejecting asset: same version, not restoring: %@/%@ offered / %@/%@ installed.
Rejecting asset: Restoring during delayed updates and version increase: %@/%@ offered / %@/%@ installed.
Accepting asset: no prereqs: %@/%@ offered / %@/%@ installed.
Rejecting asset: delaying updates: %@/%@ offered / %@/%@ installed.
Rejecting asset: prereqs during Restore.
Rejecting asset: prereqs not met for update to %@/%@ (%@/%@ installed != %@/%@ required).
Accepting asset: prereqs met for update to %@/%@ (%@/%@ installed == %@/%@ required).
SupportedDevices
Querying asset metadata.
ERROR: Asset metadata query failed, even after retry [%d].
WARNING: Asset metadata query failed [%d]. Retrying...
ERROR: Unexpected result from asset metadata query [%d].
Query produced postedDate of incorrect type (string). Converting.
yyyy-MM-dd
Query produced postedDate of wrong type (%@).
Query failed to provide postedDate. Using current date.
Purgeable size %llu for asset %@ in state %d.
Starting asset catalog download...
Configuring catalog for supervised device.
Supervised: requesting PMV %@.
Supervised: delay period %@ days.
Ignoring PMV request of %@ for unsupervised device.
Ignoring delay period of %@ for unsupervised device.
Retrying asset catalog download...
Using cached asset catalog.
Asset catalog downloaded or no change on attempt %d [%d].
Asset catalog failed to download on attempt %d [%d].
Asset catalog failed to locate match on attempt %d [%d].
Unexpected result from asset catalog download on attempt %d [%d].
Purged asset: %@.
ERROR: Couldn't purge asset because it doesn't exist (??): %@.
ERROR: Failed to purge asset [%d]: %@.
Skipping asset being downloaded: %@.
Skipping asset required by OS: %@.
Skipping un-downloaded asset: %@.
Skipping asset in unexpected state [%d]: %@.
processingSpaceRequest
TB,N,VprocessingSpaceRequest
processingAssetRequest
TB,N,VprocessingAssetRequest
date
cableCheckTime
linkQuality
%@ linkQuality: %i, cableCheckTime: %.0f, date: %@
supportsSecureCoding
TB,R
Ti,N,V_linkQuality
T@"NSDate",R,N,V_date
Td,R,N,V_cableCheckTime
cableStatus
-[PBDisplayManager(CableCheck) resetCableInfoHistory]
-[PBDisplayManager(CableCheck) _stopBackgroundMonitoring]
-[PBDisplayManager(CableCheck) _pollingInterval]
customerTitleMessage
deviceListUrl
customerVerifyIdentityMessage
customerChooseDeviceMessage
devices
label
deviceId
hsaDeviceId
customerCodeSentToMessage
hsaCode
No verify URL provided
#T:[%@%p] #Warning #%@ : %@: Dialog returned while getting device list 
#T:[%@%p] #Warning #%@ : %@: User has no 2SV enrolled devices 
%@ %@
v16@?0Q8
#T:[%@%p] #Error #%@ : %@: 2SV send code failed 
#T:[%@%p] #Error #%@ : %@: 2SV code verification failed 
#T:[%@%p] #Warning #%@ : %@: User entered wrong 2SV code 
#T:[%@%p] #Error #%@ : %@: 2SV verify code failed 
ButtonCancel
sendNewCode
T@?,C,N,V_sendNewCode
T@"NSArray",&,N,V_devices
URLs
T@"NSDictionary",&,N,V_URLs
selectedDevice
T@"NSDictionary",&,N,V_selectedDevice
sendCodeLocalization
T@"NSDictionary",&,N,V_sendCodeLocalization
idleModeActive
TB,R,N,GisIdleModeActive,V_idleModeActive
PBSystemMenuSleepNowMessage
PBSystemMenuSleepNowTitle
PBSystemMenuSleepNowButton
/usr/libexec/airtunesd
com.apple.TVNowPlayingService
Reason
BundleID
Error
DismissedRemotely
ViewController
forPresentation
TB,N,V_forPresentation
reason
TQ,N,V_reason
nowPlayingProcessPID
nowPlayingAppFocused
PBNowPlayingManager.NowPlayingUI
pendingNowPlayingRequests
T@"NSMutableArray",R,N,V_pendingNowPlayingRequests
nowPlayingStateMachine
T@"TVSStateMachine",R,N,V_nowPlayingStateMachine
nowPlayingViewController
T@"PBRemoteViewController",&,N,V_nowPlayingViewController
systemNowPlayingActive
TB,N,GisSystemNowPlayingActive,V_systemNowPlayingActive
TB,R,N,V_nowPlayingAppFocused
vendorName
VSProviderAppBundleID
VSProviderAppInstallPosition
buyParams
bagKey
v28@?0B8@"ASDPurchaseResponse"12@"NSError"20
Assets.car
imageNotFound
TB,R,N,V_imageNotFound
IssueDataConfirmationTitle
comment
IssueDataConfirmationMessage
IssueDataConfirmationExportItem
IssueDataConfirmationCancelItem
prefs:root=DiagnosticLogExport&activate=true
prefs:root=DiagnosticLogExport&logfile=%@&activate=true
Library/Logs/CrashReporter/DiagnosticLogs/sysdiagnose/Latest
Library/Logs/CrashReporter/DiagnosticLogs/sysdiagnose
IN_PROGRESS_sysdiagnose
sysdiagnose_
v32@?0@"UIButton"8Q16^B24
v32@?0@8Q16^B24
buttons
T@"NSArray",C,N,V_buttons
buttonTitles
T@"NSArray",R,C,N,V_buttonTitles
defaultButtonIndex
Tq,N,V_defaultButtonIndex
T@"<TextEntryButtonViewDelegate>",W,N,V_delegate
firstCheckPostUpdate
assetDownloadNotStartedNoSpace
assetDownloadStarted
assetDownloadSucceeded
assetDownloadCompleted
assetDownloadFailed
assetDownloadCanceledByUser
brainDownloadStarted
brainDownloadSucceeded
brainDownloadFailed
brainDownloadFailedNoSpace
extractFailed
extractFailedNoSpace
extractCanceledBySlowUpdate
applySucceeded
applyFailed
applyFailedNoSpace
applyCanceledBySlowUpdate
updateSucceeded
updateFailed
updateCanceledByUser
updateCanceledForRedownload
applicationRestarted
atv_ota_update
stage
clientId
fromOS
fromHDMI
toOS
isRestore
hwModel
lastAttemptedUUID
targetOSBuild
ATVLastRestoreID
MON: Found last restore with data %@
MON: Failed to remove last restore file [@]
metrics.ATV.metricsUrl
MON: Store bag missing metrics.ATV.metricsUrl URL. Trying metrics.metricsUrl.
metrics.metricsUrl
MON: Store bag missing metrics.metricsUrl. No update monitoring.
%@/%@/%@
MON: Using override URL %@ (instead of %@ from bag).
MON: Vendor bag update monitoring URL: %@.
MON: Previous update attempt still present when starting new attempt - noting app restart for UUID %@
MON: Started monitoring update from %@ to %@ %@ with UUID %@ (queueing:%@).
Internal
Customer
manual
autoapply
background
unknownFromOSBuild
unknownFromHDMI
unknownToOSBuild
internal
customer
unknownClientId
unknownHW
MON: No monitor URL - skipping stage %@).
MON: Monitored stage %@ for %@ retryDelay: %ds result: %d [%@]
MON: Scheduling re-monitor of stage %@ for %@ in %ds
MON: Failed to note stage %@ for UUID %@ result: %d [%@].
MON: Terminated monitoring for UUID %@
MON: Found lastAttemptUUID %@, checking for update result.
MON: Clearing unexpected UUID during app restart processing (replacing %@ with %@).
MON: targetOSBuild %@ matches current OS build - update succeeded.
MON: targetOSBuild %@ did not match current OS build %@ - update failed.
MON: No lastAttemptUUID, ignoring app restart.
fromOSBuild
T@"NSString",C,N,V_fromOSBuild
T@"NSString",C,N,V_fromHDMI
toOSBuild
T@"NSString",C,N,V_toOSBuild
isInternalBuild
TB,V_isInternalBuild
TB,V_isRestore
triggeredManually
TB,V_triggeredManually
uuid
T@"NSString",&,N,V_uuid
baseURL
T@"NSURL",C,N,V_baseURL
iconImage
displayName
inputBounds
inputRadius
inputQuality
blurFilter
filters.blurFilter.inputBounds
filters.blurFilter.inputRadius
titleView
T@"PBAppSwitcherTitleView",R,N,V_titleView
itemContentView
T@"UIView",R,N,V_itemContentView
containerView
T@"UIView",R,N,V_containerView
Td,R,N,V_blurRadius
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_blurRect
hasBlurFilter
TB,N,V_hasBlurFilter
T@"UIView",&,N,V_snapshotView
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_maskRect
maskView
T@"UIView",R,N,V_maskView
snapshotImageView
T@"PBSnapshotView",R,N,V_snapshotImageView
appSwitcherItem
T@"PBAppSwitcherItem",R,N,V_appSwitcherItem
permissionResponseBlock
T@?,C,N,V_permissionResponseBlock
userInterfaceStyleMask
TQ,N,V_userInterfaceStyleMask
v32@?0Q8@"<NSSecureCoding>"16@"NSError"24
v28@?0B8@"<NSSecureCoding>"12@"NSError"20
viewControllersByRequest
T@"NSMapTable",R,N,V_viewControllersByRequest
dismissalCompletionByRequest
T@"NSMapTable",R,N,V_dismissalCompletionByRequest
messageRepliesByRequest
T@"NSMapTable",R,N,V_messageRepliesByRequest
pendingRequestsByRequestID
T@"NSMutableDictionary",R,N,V_pendingRequestsByRequestID
-[PBPinDisplayViewController _handleMenuButton:]
-[PBPinDisplayViewController _handleHomeButton:]
#T:[%@%p] #Notice #%@ : Media Remote PIN Timed Out 
timerSource
T@"NSObject<OS_dispatch_source>",&,N,V_timerSource
Td,N,V_timeout
dismissalCompletion
T@?,C,N,V_dismissalCompletion
initial_text
placeholder
keyboard_type
alt_title
alt_message
PBTextEntry
-[PBTextEntryViewController _menuButtonPressed:]
textFieldValues
T@"NSMutableArray",&,N,V_textFieldValues
T@"NSMutableArray",&,N,V_buttonTitles
enteredValues
T@"NSArray",&,N,V_enteredValues
defaultTitle
T@"NSString",C,N,V_defaultTitle
defaultMessage
T@"NSString",C,N,V_defaultMessage
T@"<PBTextEntryViewControllerDelegate>",W,N,V_delegate
[PBSnapshotView -initWithFrame:] should not be used.
[PBSnapshotView -initWithCoder:] should not be used.
requestBuilder
T@?,C,N,V_requestBuilder
T@"UIImageView",&,N,V_imageView
vibrantImageView
T@"UIImageView",&,N,V_vibrantImageView
vibrantView
T@"UIVisualEffectView",&,N,V_vibrantView
T@"UIView",&,N,V_backgroundView
TB,R,N,V_hasBackground
Initial
Transitioning To Switcher
Showing Switcher
Waiting for Launch
Waiting for Focus Launch
Scrolling to Item
Interrupting Scroll To Launch Item
Transitioning To Fullscreen
Showing Fullscreen
Delete Gesture
Delete Gesture Completing
Updating Collection View
Reverting Switcher To App State
Show Switcher
Revert Switcher To App Event
Transition Switcher Complete
Transition To Fullscreen Complete
Scroll Animation Complete
Begin Scrolling
End Scrolling
Activate Item
Activate Item Failed
Launch App
Kill Gesture Update
Kill Gesture Succeeded
Kill Gesture Cancel
Kill Gesture Cancelled or Succeeded
Collection View Update
Collection View Update Complete
Collection View Did Accept Focus
Should Animate Updates
AppSwitcherItem
Completion Handler
Swipe Offset
Swipe Velocity
timingCurveType
cubicTimingParameters
T@"UICubicTimingParameters",R,N
springTimingParameters
T@"UISpringTimingParameters",R,N
focusDirectionX
lastContentOffset
T{CGPoint=dd},R,N,V_lastContentOffset
-[PBAppSwitcherCollectionViewController upDoubleTapped:]
-[PBAppSwitcherCollectionViewController panGestureRecognizerMoved:]
v32@?0@"PBAppSwitcherUpdate"8Q16^B24
initialDragLocation
T{CGPoint=dd},N,V_initialDragLocation
panningVertically
TB,N,GisPanningVertically,V_panningVertically
panningHorizontally
TB,N,GisPanningHorizontally,V_panningHorizontally
scrolling
TB,N,GisScrolling,V_scrolling
preferredIndexPath
T@"NSIndexPath",&,N,V_preferredIndexPath
collectionView
T@"_PBAppSwitcherCollectionView",&,N,V_collectionView
T@"PBAppSwitcherTitleView",&,N,V_titleView
peekEffectEnabled
TB,N,V_peekEffectEnabled
peekEffect
T@"UIInterpolatingMotionEffect",R,N,V_peekEffect
panRecognizer
T@"UIPanGestureRecognizer",R,N,V_panRecognizer
upRecognizer
T@"UITapGestureRecognizer",R,N,V_upRecognizer
focusedItem
T@"PBAppSwitcherItem",&,N,V_focusedItem
pendingLaunchItem
T@"PBAppSwitcherItem",&,N,V_pendingLaunchItem
launchCompletionHandler
T@?,C,N,V_launchCompletionHandler
switcherAnimator
T@"UIViewPropertyAnimator",&,N,V_switcherAnimator
appSwitcherManager
T@"PBAppSwitcherManager",R,N,V_appSwitcherManager
PBProgrammingGuideDidUpdateNotification
PBForceProgrammingGuideReloadNotification
#T:[%@%p] #Notice #%@ : %s 
-[PBProgrammingGuide setNeedsReload]
-[PBProgrammingGuide _handleForceReloadNotification]
-[PBProgrammingGuide _handleReloadTimer]
#T:[%@%p] #Notice #%@ : Posting %@ 
#T:[%@%p] #Notice #%@ : %s - load already in progress 
-[PBProgrammingGuide _performUpdates]
#T:[%@%p] #Notice #%@ : Updating %@ applicationIdentifiersByBundleIdentifierMapping = %@ 
#T:[%@%p] #Error #%@ : Failed to load identifier mapping: %@ 
#T:[%@%p] #Notice #%@ : Updating %@ provisionedApplicationIdentifiers = %@ 
#T:[%@%p] #Notice #%@ : Updating %@ disabledApplicationIdentifiers = %@ 
provisionedApplicationIdentifiers
disabledApplicationIdentifiers
#T:[%@%p] #Error #%@ : Failed to load programming info: %@ 
AutoInstallAdditions.plist
adamID
T@"NSArray",C,N,V_provisionedApplicationIdentifiers
T@"NSSet",C,N,V_disabledApplicationIdentifiers
applicationIdentifiersByBundleIdentifierMapping
T@"NSDictionary",C,N,V_applicationIdentifiersByBundleIdentifierMapping
_PBPresentedAssistantContext<%p> { displayID: %@, assistantKind: %ld, assistantSource: %ld, presentedController: %@}
presentedController
T@"UIViewController",&,N,V_presentedController
displayID
T@"NSString",C,N,V_displayID
presentationRequest
T@"PBSDisplayAssistantPresentationRequest",&,N,V_presentationRequest
Cannot present DA with an nil request
TVDAViewController
com.apple.TVDisplayAssistant
v16@?0@"UIViewController"8
displayManager
T@"PBDisplayManager",&,N,V_displayManager
shownAssistantContext
T@"_PBPresentedAssistantContext",&,N,V_shownAssistantContext
isMonitoring
TB,N,V_isMonitoring
lastSeenDisplayID
T@"NSString",C,N,V_lastSeenDisplayID
dataRepresentation
T@"NSData",R,N,V_dataRepresentation
productID
T@"NSNumber",R,N,V_productID
manufacturer
T@"NSString",R,N,V_manufacturer
product
T@"NSString",R,N,V_product
physicalAddress
T@"NSData",R,N,V_physicalAddress
T@"NSNumber",R,N,V_WOM
T@"NSNumber",R,N,V_YOM
5202
2025
5200
jingleDocType
#T:[%@%p] #Warning #%@ : %@: User entered wrong CVV code 
#T:[%@%p] #Error #%@ : %@: CVV check failed 
machineName
Apple-TV
CVVPlaceholder
ButtonSubmit
verifyURL
T@"NSURL",&,N,V_verifyURL
com.apple.onboarding.siri
DictationTitle
SiriTitle
DictationMessage
SiriMessage
b239-dark
DictationOptInButton
SiriOptInButton
DictationOptOutButton
SiriOptOutButton
-[PBSiriOptInOfferViewController _handleMenuButton:]
-[PBSiriOptInOfferViewController _handleHomeButton:]
termsVisible
TB,N,V_termsVisible
dialogContainerView
T@"UIView",R,N,V_dialogContainerView
featureInfoViewController
T@"PBFeatureInfoViewController",R,N,V_featureInfoViewController
termsViewController
T@"OBPrivacySplashController",R,N,V_termsViewController
privacyFlow
T@"OBPrivacyFlow",R,N,V_privacyFlow
configuredForDictationOnly
TB,N,GisConfiguredForDictationOnly,V_configuredForDictationOnly
Loading
Idle
Validating Restriction for Content Types
Validating Restriction for Setting
Cancelling Restriction Authorization
Checking Restriction Setting enabled or disabled
Authorizing Restrictions
Validating PIN Code
Begin Validating Restriction For Content Types
Begin Validating Restriction For Setting
Cancel Restriction Authorization
Check Restriction Setting
Begin Authorizing Restrictions
Begin PIN Code Validation
Update
Complete
PBRestrictionServiceRequestManager
pendingServiceRequestsQueue
T@"NSMutableArray",R,N,V_pendingServiceRequestsQueue
pendingTokenToRequestMapping
T@"NSMutableDictionary",R,N,V_pendingTokenToRequestMapping
currentRequest
T@"PBRestrictionServiceRequest",&,N,V_currentRequest
PBScreenSaverTransitionForegroundProcessIdentifierKey
userInitiated
PBScreenSaverTransitionRequester
shouldPresent
TB,N,V_shouldPresent
completionHandler
T@?,C,N,V_completionHandler
-[PBScreenSaverTransitionViewController presentScreenSaverViewControllerWithOptions:completion:]_block_invoke
-[PBScreenSaverTransitionViewController dismissScreenSaverViewControllerWithOptions:completion:]_block_invoke_2
-[PBScreenSaverTransitionViewController _animatePresentationOverSystem:options:completion:]
-[PBScreenSaverTransitionViewController _animatePresentation:options:completion:]
isPresented
TB,N,V_isPresented
T@"PBRemoteViewController",R,N,V_screenSaverViewController
transform.scale
fromValue
toValue
PB-scaleAnimation
opacity
PB-fadeAnimation
inputHardEdges
PB-videoblur
PBProcessManager
simple
TB,N,GisSimple,V_simple
defaultResponseLaunchBundleID
T@"NSString",&,N,V_defaultResponseLaunchBundleID
defaultResponseLaunchURL
T@"NSURL",&,N,V_defaultResponseLaunchURL
replyPort
TI,N,V_replyPort
requestFlags
Ti,N,V_requestFlags
replyFlags
TI,N,V_replyFlags
notificationSource
T@"NSString",C,N,V_notificationSource
Ti,N,V_token
Ti,N,V_timeout
iconURL
T@"NSURL",C,N,V_iconURL
alertHeader
T@"NSString",C,N,V_alertHeader
alertMessage
T@"NSString",C,N,V_alertMessage
defaultButtonTitle
T@"NSString",C,N,V_defaultButtonTitle
alternateButtonTitle
T@"NSString",C,N,V_alternateButtonTitle
otherButtonTitle
T@"NSString",C,N,V_otherButtonTitle
Ti,N,V_defaultButtonIndex
alternateButtonIndex
Ti,N,V_alternateButtonIndex
otherButtonIndex
Ti,N,V_otherButtonIndex
dialogDefaultButtonIndex
Ti,N,V_dialogDefaultButtonIndex
shouldBehaveSuperModally
TB,N,V_shouldBehaveSuperModally
shouldDismissOnUnlock
TB,N,V_shouldDismissOnUnlock
selectableItemTitles
T@"NSArray",C,N,V_selectableItemTitles
noDefaultButton
TB,N,V_noDefaultButton
textFieldTitles
T@,C,N,V_textFieldTitles
textFieldInitialValues
T@,C,N,V_textFieldInitialValues
keyboardTypes
T@"NSArray",C,N,V_keyboardTypes
accountName
T@"NSString",C,N,V_accountName
attemptNumber
TQ,N,V_attemptNumber
responseSent
TB,N,V_responseSent
notificationType
textFieldEnteredValues
T@"NSArray",C,N,V_textFieldEnteredValues
v24@?0Q8^B16
v32@?0@"UICollectionViewUpdateItem"8Q16^B24
v32@?0@"NSIndexPath"8Q16^B24
insertedIndexPaths
T@"NSMutableArray",R,C,N,V_insertedIndexPaths
deletedIndexPaths
T@"NSMutableArray",R,C,N,V_deletedIndexPaths
finalIndexPathByOriginalIndexPath
T@"NSMutableDictionary",R,C,N,V_finalIndexPathByOriginalIndexPath
numberOfItemsBeforeUpdate
Tq,R,N,V_numberOfItemsBeforeUpdate
numberOfItems
Tq,R,N,V_numberOfItems
swipeIndex
Tq,R,N,V_swipeIndex
swipeUpOffset
Td,R,N,V_swipeUpOffset
No download in progress. Checking installed updates.
No installed update found.
Failed readyForInstallation check because asset URL %@ was not reachable [%@].
Failed readyForInstallation check because asset was not found [%@].
Failed readyForInstallation check because an update is already running.
Failed to start OS update check [%@]
OS update check started: manual request
OS update check started: MDM-triggered request
Not starting download, asset already downloaded.
Failed to start OS update download [%@]
v24@?0@"PBSOSUpdateDownload"8@"NSError"16
Attempt to cancel download for operation other than download only.
Attempt to purge download while update is running.
OS update check started: restore
OS update install started.
Failed to configure for OS install [%@].
Skipping initial checks: auto-apply enabled.
Scheduling initial check task in %.2fs.
OS update check started: initial task
Scheduling normal check task (delay:%lds period:%.2fs).
OS update check started: periodic task
ignoring sleep check because timeout set to Never.
sleep check skipped: last checked %2.2fs ago.
Skipping OS Check on sleep: auto-apply not enabled.
Not scheduling dark wake: bad system time.
not scheduling dark wake because sleep timeout set.
scheduling timer-based check at %@.
AppleTV.SWU.CheckTimer
Ignoring timer %@ != dark timer %@
Check timer [%@] fired.
Ignoring timer check: auto-apply disabled.
Not scheduling update delay expiration timer - expiration date has passed.
Scheduling update delay expiration timer for %@
AppleTV.SWU.CheckTimer.DelayedUpdateExpiration
Not scheduling update delay expiration timer - not delaying updates.
v16@?0@"NSDate"8
Ignoring timer %@ != delay expiration timer %@
Delayed update expiration timer [%@] fired.
Reloading vendor bag to check for disabled auto updates.
Starting timer for failed bag load (%lds).
Vendor bag reload complete/timed out - continuing.
Forcing auto-apply to YES via default.
Auto-apply updates %@.
allowed
disallowed
Auto-apply check started: timer
Auto-apply check skipped: device not asleep (%d) or not idle (%d).
Auto-apply check skipped: last checked %2.2fs ago.
vendor-gk-8
#T:[%@%p] #Error #%@ : Failed to deserialize vendor bag %@ 
merchant
itms
vendor-bag-versions
maximum-version
minimum-required-version
metadata
swu-allow-autoapply
Bag [%@,%@] matches, metadata %@ auto-apply updates.
Bag [%@,%@] does not meet requirements [%@].
Skipped invalide bag: %@
Old-style vendor bag metadata %@ auto-apply updates.
Failed to load a valid vendor bag.
OS update check: is at home user:%d
Invalid AppleConnect Credentials
OS update check: AppleConnect credentials valid.
Send Data to Apple Not Enabled
OS update check: Send Data enabled.
OS update check: %@
Cancel
Resetting OS update timer/tasks because sleep timeout changed.
Resetting OS update timer/tasks because auto-apply changed.
Skipping OS check on sleep: sleep set to Never.
Skipping OS check on sleep: last checked %2.2fs ago.
Skipping OS check on sleep: auto-apply not enabled.
%@ (%@)
OSUpdateConfirmNotReadyButDownloadedPrompt
OSUpdateConfirmNotReadyButDownloadedPromptNoVersion
OSUpdateConfirmNotReadyPrompt
OSUpdateConfirmNotReadyPromptNoVersion
OSUpdateConfirmNotReadySubtextButDownloadedFR
OSUpdateConfirmNotReadySubtextFR
OSUpdateConfirmNotReadyButDownloadedSubtext
OSUpdateConfirmNotReadySubtext
OSUpdateConfirmTitle
OSUpdateConfirmYesButDownloadedMenuItem
OSUpdateConfirmYesMenuItem
OSUpdateConfirmNoMenuItem
Auto-apply updates set; continuing with Apply.
Restoring; continuing with Apply.
Redownloading update; continuing with Apply.
User confirmed update, in Settings; continuing with Apply.
OSUpdateAutoConfirmReadyPrompt
OSUpdateAutoConfirmReadyPromptNoVersion
OSUpdateConfirmReadyPrompt
OSUpdateConfirmReadyPromptNoVersion
OSUpdateConfirmReadySubtextFR
OSUpdateConfirmReadySubtext
OSUpdateConfirmInstallYesMenuItem
OSUpdateConfirmInstallNoMenuItem
OSUpdateConfirmInstallEnableAutoMenuItem
Prompted for apply, OK to apply:%d enable auto:%d.
Setting Restore obliterate flag.
Checking Restore obliterate flag: %d
OSUpdateFailedText
OSUpdateFailedServerProblemSubtext
OSUpdateFailedNeedToRestartSubtext
Update check failed.
Cannot check for updates. Configuration error.
Cannot check for updates right now. Try again later.
Cannot check for updates. Redownload check failed.
Cannot check for updates because a previous operation is still in progress.
The download stalled unexpectedly.
The asset file was not found.
Cannot check for updated because model information is unavailable.
There was insufficient space to download or apply the update.
The preparation phase returned an error. Check the update log for more details. 
The application phase returned an error. Check the update log for more details. 
Cannot check for updates. (VPN initialization failed)
Cannot check for updates. (AppleConnect credentials invalid)
Cannot check for updates. (VPN connection canceled)
Cannot check for updates. (Failed to connect via VPN)
OSUpdateFailedSubtext
OSUpdateRestoreNoFullReplacementText
OSUpdateNoUpdatesText
UpdateCheckFinished with data %@
UpdateDownloadStarted with data %@
UpdateDownloadFinished with data %@
UpdateRedownloadStarted with data %@
UpdateApplyStarted with data %@
com.apple.PineBoard.osupdate.start
UpdateApplyFinished with data %@
Clearing obliterate flag at apply fail.
com.apple.PineBoard.osupdate.stop
monitoringEnabled
TB,N,V_monitoringEnabled
osSoftwareUpdateInitialCheckTask
T@"TVSBackgroundTask",&,N,V_osSoftwareUpdateInitialCheckTask
osSoftwareUpdatePeriodicCheckTask
T@"TVSBackgroundTask",&,N,V_osSoftwareUpdatePeriodicCheckTask
darkWakeTimer
T@"PCSimpleTimer",&,N,V_darkWakeTimer
updateDelayExpirationTimer
T@"PCSimpleTimer",&,N,V_updateDelayExpirationTimer
vendorBagRefetchTimeoutTimer
T@"NSTimer",W,N,V_vendorBagRefetchTimeoutTimer
osSoftwareUpdateCheckResponse
T@?,C,N,V_osSoftwareUpdateCheckResponse
isScreenSharingActive
ScreenSharingAlertMessage
ScreenSharingAlertUnknownDeviceMessage
ScreenSharingAlertTitle
ScreenSharingAlertSubmessage
ScreenSharingAlertAllowSession
ScreenSharingAlertCancelSession
ScreenSharingActiveBulletinTitle
ScreenSharingActiveBulletinMessage
ScreenSharingActiveUnknownDeviceBulletinTitle
ScreenSharingActiveUnknownDeviceBulletinMessage
currentBulletin
T@"PBSBulletin",&,N,V_currentBulletin
currentSessionID
TQ,N,V_currentSessionID
ScreenSharingActive
TB,R,N,GisScreenSharingActive
PBApplicationSnapshotUserInterfaceStyleKey
PBApplicationSnapshotIsTemplateImageKey
pb_userInterfaceStyle
Tq,N,Spb_setUserInterfaceStyle:
pb_isTemplateImage
TB,N,Spb_setIsTemplateImage:
com.apple.podcasts
-[PBMediaRemoteObserver _performMetadataUpdate]
-[PBMediaRemoteObserver _performMetadataUpdate]_block_invoke
v24@?0^v8^{__CFError=}16
v12@?0I8
 NOT
playing
playbackRate
playingMusic
isMusicAppPlaying
isPodcastsAppPlaying
trackIdentifier
T@"NSNumber",R,C,N,V_trackIdentifier
mediaType
T@"NSString",R,C,N,V_mediaType
T@"NSNumber",R,C,N,V_playbackRate
TB,R,N,V_playing
TB,R,N,V_playingMusic
TB,R,N,V_isMusicAppPlaying
TB,R,N,V_isPodcastsAppPlaying
Ti,R,N,V_nowPlayingProcessPID
T@"<PBMediaRemoteObserverDelegate>",W,N,V_delegate
Applying Settings
Set Configuration
Update Complete
Configuration
PBAXSavedKioskConfigurationOptionsKey
AXMenuVoiceOverAction
AXMenuZoomAction
AXMenuClosedCaptionAction
AXMenuAudioDescriptionAction
AXMenuSwitchControlAction
AXMenuDisplayFilterColorAdjustmentsAction
AXMenuDisplayFilterLightSensitivityAction
AXMenuDisplayFilterReduceWhitePointAction
accessibilityMenuOptions
B8@?0
voiceOverEnabled
zoomEnabled
preferSDHOverRegularSubtitles
preferVideoDescriptions
switchControlEnabled
displayFilterColorAdjustmentsEnabled
displayFilterLightSensitivityEnabled
displayFilterReduceWhitePointEnabled
v32@?0@?<B@?>8Q16^B24
T@"NSArray",C,N,V_pendingUpdates
updateCompletion
T@?,C,N,V_updateCompletion
updateTimer
T@"NSTimer",C,N,V_updateTimer
shouldSpeakItems
TB,N,V_shouldSpeakItems
predicate
T@"XBApplicationSnapshotPredicate",R,N,V_predicate
T@"NSString",R,N,V_sceneID
T@"NSString",R,N,V_bundleIdentifier
volumeControlAvailable
pinViewControllersByToken
T@"NSMapTable",R,N,V_pinViewControllersByToken
AudioRoutingControllerKVOCOntextSelectedRoute
NoAppSwitcher
NoAutoLaunch
KioskAppBundleIdentifier
MusicAppBundleIdentifier
AppIdentifierHistory
MusicNowPlayingTimeout
CRDAppTimeout
SleepTimeoutInSeconds
MenuLongPressDelayInSeconds
MicLongPressDelayInSeconds
PlayPauseLongPressSystemGestureEverywhere
RemotePresenceDetectionDelayTimeoutInSeconds
HILITEModeTimeout
BulletinNotificationAutoDismissalTimeInSeconds
EmitAVLog
EmitPlaybackLogs
EmitThermalLogs
EmitConfigLogs
EDIDLoggingTimePeriodInSeconds
FigaroLoggingURL
NoIssueDataExport
EmitButtonTimingLogs
BluetoothRemoteKeepAliveTimeInterval
BluetoothRemoteSleepTimeoutInSeconds
WhatsNewCheckTimeIntervalInSeconds
DisableHiliteMode
OSSWUMonitoringURLOverride
AllowSiriOnScreenActions
DialogTestingEnabled
IgnoreLocalHTTPCache
DarkModeShortcutEnabled
SystemAppearanceKey
ForceNight
NativeModeSwitchDurationInSeconds
NativeModeSwitchDebuggingEnabled
TVSystemMusicApp
appSwitcherEnabled
TB,R,N,GisAppSwitcherEnabled
kioskAppAutoLaunchEnabled
TB,R,N,GisKioskAppAutoLaunchEnabled
kioskAppBundleIdentifier
T@"NSString",C,N
musicAppBundleIdentifier
T@"NSString",R,N
appIdentifierHistory
T@"NSArray",C,N
whatsNewCheckTimeIntervalInSeconds
remotePresenceDetectionDelayTimeoutInSeconds
hiliteModeTimeoutInSeconds
hiliteModeDisabledForTesting
sleepTimeoutInSeconds
sleepNever
TB,R,N,GisSleepNever
musicNowPlayingTimeoutInSeconds
bulletinNotificationAutoDismissalTimeInSeconds
crdAppTimeoutInSeconds
menuLongPressDelayInSeconds
microphoneLongPressDelayInSeconds
longPressPlayPauseSystemGestureEverywhere
osSoftwareUpdateMonitoringURLOverride
emitDiagnosticAVLog
emitPlaybackLogs
emitThermalLogs
emitConfigLogs
emitButtonTimingLogs
figaroLoggingURL
suppressIssueDataExport
bluetoothRemoteKeepAliveTimeInterval
bluetoothRemoteSleepTimeoutInSeconds
allowSiriOnScreenActions
systemAppearance
Tq,N
systemAppearanceSelected
TB,R,N,GisSystemAppearanceSelected
dialogTestingEnabled
TB,R,N,GisDialogTestingEnabled
ignoreLocalHTTPCacheEnabled
darkModeShortcutEnabled
forceNight
modeSwitchDuration
modeSwitchDebuggingEnabled
-[PBSiriScreenActionManager init] not supported, use +sharedInstance instead
#T:[%@%p] #Notice #%@ : PBSiriScreenActionManager changing enabled state to: %@ 
systemApplicationElement
T@"AXElement",&,N,V_systemApplicationElement
currentApplicationElement
T@"AXElement",R,N
T@"<PBSiriScreenActionManagerDelegate>",W,N,V_delegate
enabled
TB,N,GisEnabled,V_enabled
currentScreenActionApplication
T@"PBSiriScreenActionApplication",R,N
com.apple.appletv.pbs.bulletin-service-access
com.apple.appletv.pbs.user-presentation-service-access
com.apple.appletv.pbs.video-subscriber-account-access
com.apple.appletv.pbs.diagnostic-logs-service-access
com.apple.appletv.pbs.osupdate-service-access
com.apple.appletv.pbs.airplay-service-access
com.apple.appletv.pbs.mediaremote
hiliteModeActive
screenSaverActive
com.apple.appletv.pbs.allow-sleep
com.apple.appletv.pbs.allow-wake
com.apple.appletv.pbs.allow-relaunch-backboardd
com.apple.appletv.pbs.allow-relaunch
com.apple.appletv.pbs.allow-reboot
com.apple.appletv.pbs.allow-sleep-timeout
com.apple.appletv.pbs.allow-screen-saver
com.apple.appletv.pbs.allow-conference-room-display
com.apple.appletv.pbs.allow-now-playing-presentation
com.apple.appletv.pbs.allow-purge-topshelf
com.apple.appletv.pbs.allow-siri-actions
com.apple.appletv.pbs.allow-active-application
com.apple.appletv.pbs.allow-send-menu
com.apple.appletv.pbs.allow-send-event-data
com.apple.appletv.pbs.allow-user-interface-style-change
#T:[%@%p] #Notice #%@ : System appearance requested by %@ 
#T:[%@%p] #Notice #%@ : System appearance changed to %ld by %@ 
com.apple.appletv.pbs.allow-kiosk-app
com.apple.appletv.pbs.allow-app-icon-change
com.apple.appletv.pbs.allow-siri-activation
com.apple.appletv.pbs.allow-launch-kiosk
com.apple.appletv.pbs.allow-shared-state-access
com.apple.appletv.pbs.allow-remote-pairing
com.apple.appletv.pbs.allow-custom-playpause
com.apple.appletv.pbs.allow-custom-volume
expired app
nowPlayingPresentationDelegate
T@"<PBSystemServiceNowPlayingDelegate>",&,N,V_nowPlayingPresentationDelegate
TB,N,V_hiliteModeActive
TB,N,V_screenSaverActive
T@"NSXPCConnection",R,N,V_remoteConnection
clientBundleIdentifier
T@"NSString",R,C,N,V_clientBundleIdentifier
TVButtonBehaviorTitle
TVButtonBehaviorMessage
TVButtonBehaviorFooter
TVButtonBehaviorOK
b239-tv-button
-[PBTVButtonChangeViewController _handleMenuButton:]
-[PBTVButtonChangeViewController _handleHomeButton:]
com.apple.TVSearch
com.apple.TVWLLowerThirdsService
TVWLLowerThirdsServiceViewController
com.apple.PineBoard.BBDataProvider
atv-headboard-refresh-interval-seconds
atv-whatsnew-refresh-interval-in-seconds
selectedRoute
music now playing
AccessibilityMenuOptionsBinding
v16@?0@"PBAppDelegate"8
#T:[%@%p] #Error #%@ : Unable to set audio session category: %@ 
v16@?0@"AVAudioSession"8
ATVHIDSystemClientNotification_DidReceivePeripheralPairingRequest
DidReceivePeripheralPairingRequest
com.apple.PineBoard.DidReceivePeripheralPairingRequest
inputAllowed
idleTimerAllowed
AssetLibrary
ShowSafeArea
ShowSerialNumber
PBDialogTestNotification
-[PBAppDelegate application:openURL:options:]
-[PBAppDelegate _handlePineBoardPrefsDidChange]
-[PBAppDelegate _handleProcessDidExit:applicationProcess:]
#T:[%@%p] #Notice #%@ : Process %@ exited (%lu): %@ 
#T:[%@%p] #Notice #%@ : Process %@ is not an application process (%@).  Will not attempt repair (if necessary). 
-[PBAppDelegate _handleProcessWillActivate:suspended:withContext:]
-[PBAppDelegate _handleProcessDidActivate:suspended:]
#T:[%@%p] #Warning #%@ : WNLog: Device is supervised, not starting whats new monitoring 
-[PBAppDelegate _handleAppStateDidChange]
Terminating process due to whitelist/blacklist
-[PBAppDelegate handleMenuTripleTapEvent]
-[PBAppDelegate handleMenuDoubleTapEvent]
-[PBAppDelegate handleMenuSingleTapEvent]
-[PBAppDelegate handleACHomeSingleTapEvent]
-[PBAppDelegate handleMenuLongPressEvent:]
-[PBAppDelegate handleQuadrupleMenuTapEvent]
-[PBAppDelegate handleUnhandledMenuEvent]
-[PBAppDelegate handleMicrophoneTapEvent:]
-[PBAppDelegate handleMicrophoneLongPressEvent:]
-[PBAppDelegate handleMicrophoneButtonDownEvent:]
-[PBAppDelegate _shouldSendMediaRemoteCommand:]
-[PBAppDelegate _sendMediaRemoteCommand:withOptions:]
-[PBAppDelegate shouldTogglePlayPauseOnButtonDown]
-[PBAppDelegate shouldTogglePlayPauseOnButtonUp]
-[PBAppDelegate handlePlayPauseTapEvent]
-[PBAppDelegate handlePlayTapEvent]
-[PBAppDelegate handlePauseTapEvent]
-[PBAppDelegate handleStopTapEvent]
-[PBAppDelegate handleRewindTapEvent]
f12@?0f8
-[PBAppDelegate handleFastForwardTapEvent]
-[PBAppDelegate handleNextTrackTapEvent]
-[PBAppDelegate handlePreviousTrackTapEvent]
-[PBAppDelegate handleSkipForwardsRepeatingPressEvent:]
-[PBAppDelegate handleSkipBackwardsRepeatingPressEvent:]
-[PBAppDelegate handleRewindLongPressEvent:]
-[PBAppDelegate handleFastForwardLongPressEvent:]
-[PBAppDelegate handlePlayPauseLongPressEvent:]
-[PBAppDelegate handleVolumeUpLongPressEvent:]
-[PBAppDelegate handleVolumeDownLongPressEvent:]
-[PBAppDelegate handlePowerToggleTapEvent]
-[PBAppDelegate handlePowerOnTapEvent]
-[PBAppDelegate handlePowerOffTapEvent]
-[PBAppDelegate handleTVTapEvent]
-[PBAppDelegate handleTVTapEventAsThirdTapEventInAppSwitcher]
-[PBAppDelegate handleTVDoubleTapEvent]
-[PBAppDelegate handleTVTripleTapEvent]
-[PBAppDelegate handleTVLongPressEvent:]
#T:[%@%p] #Notice #%@ : Presenting Sleep Now dialog 
-[PBAppDelegate handleExposeAllTapEvent]
-[PBAppDelegate handleDirectionalTapEvent:]
-[PBAppDelegate mediaRemoteObserverShouldShowTrackChangeBulletin:]
-[PBAppDelegate mediaRemoteObserverIsPlayingDidChange:]
-[PBAppDelegate mediaRemoteObserverNowPlayingAppDidChange:]
-[PBAppDelegate mediaRemoteObserverNowPlayingInfoDidChange:nowPlayingInfo:]
#T:[%@%p] #Notice #%@ : Ignoring language change while Buddy is running. 
Terminating process due to language(%@)/locale(%@) change
-[PBAppDelegate appTransitionWillBeginForContext:]
-[PBAppDelegate appTransitionDidCompleteForContext:]
-[PBAppDelegate _handleStoreURLBagDidLoadNotification]
-[PBAppDelegate _handleProgrammingGuideDidUpdateNotification]
-[PBAppDelegate _handleStoreAccountChangedNotification]
#T:[%@%p] #Error #%@ : Got error during store account notification handler: %@ 
#T:[%@%p] #Notice #%@ : %@ repair already in flight. 
#T:[%@%p] #Notice #%@ : %@ requesting repair. 
#T:[%@%p] #Notice #%@ : %@ %@repaired (in %2.5fs) -- changed %@ -- error %@ 
NOT 
v28@?0B8@"NSArray"12@"NSError"20
RCUnconfiguredVolumeTitle
RCUnconfiguredVolumeMessage
RCUnconfiguredVolumeCancelMenuItem
RCUnconfiguredVolumeGoToSettingsMenuItem
prefs:root=VOLUME
%@://button/tv
-[PBAppDelegate _suggestUserEnableDictation]
#T:[%@%p] #Error #%@ : Ignoring thermal notification in simulator. 
com.apple.airplay.playbackPrevent
#T:[%@%p] #Error #%@ : PM: *** Failed to stop AirPlay activity *** 
#T:[%@%p] #Error #%@ : PM: *** Failed to stop now playing activity *** 
com.apple.PineBoard.thermalShutdownNotification
com.apple.airplay.playbackAllow
#T:[%@%p] #Error #%@ : PM: *** Failed to restore AirPlay activity *** 
hidden
RemoteInspectorEnabled
com.apple.webinspectord
-[PBAppDelegate _shouldShowSiri]
com.apple.appletv.audiostart
#T:[%@%p] #Notice #%@ : RESTORE: Checking obliterate on boot flag: %d 
#T:[%@%p] #Error #%@ : RESTORE: ERROR: Expected last restore file missing. 
#T:[%@%p] #Notice #%@ : RESTORE: Performing obliterate on boot preserving %@. 
OSUpdateRestoreWaitingTitle
OSUpdateRestoreWaitingText
#T:[%@%p] #Notice #%@ : RESTORE: obliterate proceeding during boot. 
#T:[%@%p] #Error #%@ : RESTORE: obliterate call failed during boot. 
com.apple.mobilemusicsettings.latenightmode
com.apple.preferences-sounds
latenightmode
-[PBAppDelegate activateSiriWithContext:]
-[PBAppDelegate startSiriWithContext:]
-[PBAppDelegate stopSiriWithContext:]
#T:[%@%p] #Notice #%@ : Wake requested but already awake. 
#T:[%@%p] #Notice #%@ : Sleep requested but already asleep. 
#T:[%@%p] #Error #%@ : Failed to register global airplay ui mode state notification [%x] 
Termination assertion acquired (%ld)
#T:[%@%p] #Notice #%@ : Icon did change: id: %@ icon: %@ 
window
T@"UIWindow",&,N
musicNowPlayingTrigger
T@"PBSUserActivityTrigger",R,N
programmingGuideBackgroundTask
T@"TVSBackgroundTask",&,N,V_programmingGuideBackgroundTask
buddyPrefsObservingToken
T@,&,N,V_buddyPrefsObservingToken
mutableDeepLinkingAppHistory
T@"NSMutableOrderedSet",R,N,V_mutableDeepLinkingAppHistory
languageChangeObserver
T@"PBLanguageChangeObserver",&,N,V_languageChangeObserver
shouldDisableIdleTimer
TB,N,V_shouldDisableIdleTimer
audioRoutingController
T@"TVPAudioRoutingController",&,N,V_audioRoutingController
appLaunchDisabled
TB,N,V_appLaunchDisabled
awaitingSiriOptInOfferResponse
TB,N,V_awaitingSiriOptInOfferResponse
inFlightAppRepairRequest
T@"ASDRepairApplicationRequest",&,N,V_inFlightAppRepairRequest
_kioskRelaunchDisabled
TB,N,V__kioskRelaunchDisabled
AKUnregisterAllAppleIDs
/System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
IOHIDEventSenderID senderIDForCurrentEvent(void)
collectionViewController
T@"PBAppSwitcherCollectionViewController",&,N,V_collectionViewController
transitionCompletion
T@?,C,N,V_transitionCompletion
activeTransitionContext
T@"PBAppTransitionContext",&,N,V_activeTransitionContext
SerialNumber
updateScenesTransaction
T@"FBApplicationUpdateScenesTransaction",&,N,V_updateScenesTransaction
T@"PBAppTransitionContext",R,N,V_context
pb_usesManagedDiagnostics
pb_diagnosticsUploadURLString
AppleLanguages
lproj
@"NSString"40@?0@"NSBundle"8@"NSString"16@"NSString"24@"NSString"32
TrackingRoom
CustomName
TrackingAccessory
LockdownDeviceNameDidChange
LocalAccessoryInfoDidUpdate
Browsing
Onboarding
SetupAssistant
Finished
BeginBrowsing
BeginOnboarding
OnboardingSuccess
OnboardingFailure
SetupAssistantDidFinish
HomeConfigurationStateDidChange
-[PBHomeAccessoryManager init] not supported, use +sharedInstance instead
homeConfigurationState
UserAssignedDeviceName
v24@?0^{__CFString=}8^{__CFDictionary=}16
-[PBHomeAccessoryManager _initialiseStateMachine]_block_invoke
B32@?0@"TVCSRoom"8Q16^B24
B32@?0@"NSString"8Q16^B24
^Apple\sTV$
-[PBHomeAccessoryManager _setHomeConfigurationState:]
-[PBHomeAccessoryManager _configureLocalAccessory]
-[PBHomeAccessoryManager _configureLocalAccessory]_block_invoke
v24@?0@"TVCSHome"8@"NSError"16
-[PBHomeAccessoryManager _moveOrAddLocalAccessoryToRoomWithName:inHome:]_block_invoke_2
v24@?0@"TVCSRoom"8@"NSError"16
-[PBHomeAccessoryManager _moveOrAddLocalAccessoryToRoom:inHome:]_block_invoke
i8@?0
HomeKitAutoOnboarding
home
T@"TVCSHome",&,N,G_home,S_setHome:,V_home
accessory
T@"TVCSAccessory",&,N,G_accessory,S_setAccessory:,V_accessory
Tq,N,G_homeConfigurationState,S_setHomeConfigurationState:,V_homeConfigurationState
homeOnboardingStateMachine
T@"TVSStateMachine",R,N,G_homeOnboardingStateMachine,V_homeOnboardingStateMachine
com.apple.PreBoard
BootCount
#T:[%@%p] #Error #%@ : Unable to get short BSD proc info for %d: %s 
%@ - %@
Apple
Channel
lastTriggerValue
T@"NSString",C,N,V_lastTriggerValue
com.apple.appletv.demo.trigger
com.apple.demo-settings
com.apple.PineBoard.hardwareButtonAccessManager
HardwareButtonAccess
-[PBHardwareButtonAccessManager setVolumeButtonAccessEnabled:forApp:]
-[PBHardwareButtonAccessManager setExclusivePlayPauseButtonAccessEnabled:forApp:]
-[PBHardwareButtonAccessManager _updateApplicationState:]
appWithVolumeButtonAccess
T@"NSString",C,N,V_appWithVolumeButtonAccess
appWithExclusivePlayPauseButtonAccess
T@"NSString",C,N,V_appWithExclusivePlayPauseButtonAccess
#T:[%@%p] #Notice #%@ : Using API base URL: %@ 
?v=%u&caller=atv
&dsid=%@
&%@=%@
#T:[%@%p] #Notice #%@ : Using API URL: %@ 
BuildVersion
X-Apple-Uts-Client-Version
data
DemoDSID
com.apple.Pinecrest
APIBaseURL
com.apple.TVKit
https://uts-api-itms6.itunes.apple.com/pc/
JSONFromData
Expected NSDictionary or NSArray after deserializing JSON, but got %@
-[PBUserNotificationViewControllerTermsAndConditions _handleMenuButton]
-[PBUserNotificationViewControllerTermsAndConditions _handleHomeButton]
<%@: %p; from = %@; to = %@; appSwitcher = %@; userInitiated = %@; launchedForPlayback = %@; process = %@>
appSwitcherTransition
TB,N,GisAppSwitcherTransition,V_appSwitcherTransition
fromBundleIdentifier
T@"NSString",C,N,V_fromBundleIdentifier
toBundleIdentifier
T@"NSString",C,N,V_toBundleIdentifier
focusedBundleIdentifier
T@"NSString",C,N,V_focusedBundleIdentifier
firstUserLaunch
TB,N,GisFirstUserLaunch,V_firstUserLaunch
TB,N,GisUserInitiated,V_userInitiated
launchedForPlayback
TB,N,V_launchedForPlayback
launchOverSiri
TB,N,V_launchOverSiri
launchedByDeactivation
TB,N,V_launchedByDeactivation
systemAppInitiatedDeepLink
TB,N,V_systemAppInitiatedDeepLink
launchURL
T@"NSURL",C,N,V_launchURL
initiatorAuditToken
T@"BSAuditToken",C,N,V_initiatorAuditToken
process
T@"FBApplicationProcess",&,N,V_process
foregroundUpdateHandler
T@?,C,N,V_foregroundUpdateHandler
T@"<PBAppTransitionContextDelegate>",W,N,V_delegate
launchOptions
T@"NSDictionary",C,N,V_launchOptions
isForTesting
TB,N,V_isForTesting
Background Content Fetching (%u)
T@"NSString",R,N,V_bundleID
sequenceNumber
TI,R,N,V_sequenceNumber
finished
TB,R,N,V_finished
v24@?0@"PBBackgroundFetchTask"8Q16
v16@?0@"BSActionResponse"8
TVNPRoutingHostViewController
DismissalHandler
Options
dismissalHandler
T@?,C,N,V_dismissalHandler
PBNowPlayingManager.RoutingUI
pendingRoutingRequests
T@"NSMutableArray",R,N,V_pendingRoutingRequests
pendingDismissalHandlers
T@"NSHashTable",R,N,V_pendingDismissalHandlers
routingStateMachine
T@"TVSStateMachine",R,N,V_routingStateMachine
routingViewController
T@"UIViewController",&,N,V_routingViewController
CEC/IR Mode
Core Audio (System Audio)
System Music
Custom
Prepare
Now Playing App is Foreground Changed
AV Volume Control Available Changed
Custom Control Enabled
Custom Control Disabled
PBExternalControlPolicyDidUpdateNotification
v16@?0@"PBExternalControlSystem"8
PBExternalControlSystem-VolumeButtonBehavior
@"NSString"16@?0@"NSDictionary"8
externalControlSystem
T@"PBSExternalControlSystem",&,N,V_externalControlSystem
volumeController
T@"PBVolumeController",&,N,V_volumeController
volumeBehaviorStateMachine
T@"TVSStateMachine",&,N,V_volumeBehaviorStateMachine
-[PBSiriManager init] not supported, use +sharedInstance instead
-[PBSiriManager setup]
-[PBSiriManager activateSiriWithContext:]
-[PBSiriManager startSiriWithContext:]
-[PBSiriManager stopSiriWithContext:]
#T:[%@%p] #Notice #%@ : Checking listening state 
assistant
com.apple.pinecrest.SiriSupport
-[PBSiriManager _updateShouldPreferDictation]
siriEnabled
TB,N,GisSiriEnabled,V_siriEnabled
siriPluginController
T@"PBUIPluginController",&,N,V_siriPluginController
onScreenActionContextProvider
T@"PBSiriScreenActionContextProvider",&,N,V_onScreenActionContextProvider
shouldPreferDictation
TB,N,V_shouldPreferDictation
suspended
TB,N,GisSuspended,V_suspended
listening
TB,R,N,GisListening
AFPreferencesDidChangeNotification
AFPreferences
<%p>(%@)
InfoPlist
manager
T@"PBAppSwitcherManager",R,W,N,V_manager
applicationProxy
T@"LSApplicationProxy",&,N,V_applicationProxy
T@"PBSAppState",C,N,V_appState
pendingInsertion
TB,N,GisPendingInsertion,V_pendingInsertion
pendingDeletion
TB,N,GisPendingDeletion,V_pendingDeletion
itemType
Tq,R,N,V_itemType
live
TB,R,N,GisLive,V_live
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_displayName
T@"UIImage",R,N,V_iconImage
com.apple.TVConferenceRoomDisplay
com.apple.TVCRDService
Showing Waiting Screen
Launching App
Resigning App
Showing App
Showing Screen Saver
Start
App Launched
App Launch Failed
Begin Resign App
Complete Resign App
Settings Changed
Timer Expired
Waiting Screen Cancelled
Exited Unexpectedly
Will Present Screen Saver
Did Present Screen Saver
Will Dismiss Screen Saver
Did Dismiss Screen Saver
Launch Reason
-[PBConferenceRoomDisplayManager init] not supported, use +sharedInstance instead
crdActive
TB,N,GisCRDActive,V_crdActive
-[PBUserNotificationViewControllerAlert _handleMenuButton]
-[PBUserNotificationViewControllerAlert _handleHomeButton]
VideoSubscriberAccountViewService
currentConfiguration
T@"PBKioskAppConfiguration",C,N,V_currentConfiguration
TB,N,V_inputAllowed
appSwitcherAllowed
TB,N,V_appSwitcherAllowed
TB,N,V_idleTimerAllowed
siriAndDictationAllowed
TB,N,V_siriAndDictationAllowed
systemDialogsAllowed
TB,N,V_systemDialogsAllowed
systemNowPlayingAllowed
TB,N,V_systemNowPlayingAllowed
com.apple.TVAirPlay
TVAirPlayMediaViewController
PBSDisplayStateChangedModification
_unknown_
com.apple.appletvservices
<CADisplayMode %p>{ %s  %zu x %zu %.02f Hz  colorMode>%@ hdrMode>%@ gamut>%@ aspect>%@ scale>%lu }
  virtual  
non-virtual
PreferredDisplayMode
com.apple.coreanimation
availableModes
currentMode
localeRefreshRate
userSelectedDisplayMode
canHandleHighBandwidthModes
shouldModeSwitchForDynamicRange
shouldModeSwitchForFrameRate
detectedPoorCableConnection
lastCablePollStatus
userPreferredRefreshRate
encodedPromotedDisplayModes
sortedDisplayModes
fallbackDisplayMode
currentDisplayID
seenDisplayIDs
promotedVirtualDisplayModes
deemed4KCapable
Trying to update with a nil displayMode
Desired mode no longer valid: %@
Display mode switch unsuccessful: requested: %@ result: %@.
Failed to decode the requestedMode from %s
-[PBDisplayManager updateDisplayManagerWithRequest:reply:]
blackScreenRecoveryDisplayModes
q24@?0@"PBSDisplayMode"8@"PBSDisplayMode"16
  *** filtered ***
@"NSArray"12@?0B8
%ldx%ld(%ld)
The display %@ without setting up the sorted list
went to sleep
woke up
DisplayColorMode
TVResolutionWidth
TVResolutionHeight
TVRefreshRate
Virtual
DynamicRangeModeSwitchingEnabled
FrameRateModeSwitchingEnabled
B16@?0@"NSString"8
TVFallbackMode
count: %ld
T@"PBSDisplayMode",R,N
T@"NSSet",R,N
filteredUsingdPineBoardPolicy
TB,N,V_filteredUsingdPineBoardPolicy
nextEstablishModePerDisplays
T@"NSMutableDictionary",&,N,V_nextEstablishModePerDisplays
stateObservers
T@"NSHashTable",&,N,V_stateObservers
notifyClientsSource
T@"NSObject<OS_dispatch_source>",R,N,V_notifyClientsSource
displayConnectionToNotify
T@"NSNumber",&,N,V_displayConnectionToNotify
Td,N,V_localeRefreshRate
T@"NSArray",C,N,V_sortedDisplayModes
T@"PBSDisplayMode",C,N,V_currentDisplayMode
T@"PBSDisplayMode",C,N,V_fallbackDisplayMode
T@"PBSDisplayMode",C,N,V_userSelectedDisplayMode
T@"NSSet",C,N,V_seenDisplayIDs
T@"NSString",C,N,V_currentDisplayID
TB,N,V_canHandleHighBandwidthModes
TB,N,V_shouldModeSwitchForDynamicRange
TB,N,V_shouldModeSwitchForFrameRate
Tq,N,V_displayConnection
TB,N,V_detectedPoorCableConnection
Tq,N,V_lastCablePollStatus
Td,N,V_userPreferredRefreshRate
T@"NSArray",C,N,V_blackScreenRecoveryDisplayModes
T@"NSSet",C,N,V_encodedPromotedDisplayModes
TB,N,V_deemed4KCapable
isPresentingDisplayAssistant
presentedDisplayAssistantKind
T@"NSNumber",&,N,V_presentedDisplayAssistantKind
serialisedState
T@"NSDictionary",R,N
usesDolbyLowLatency
TB,R,N,V_usesDolbyLowLatency
defaults
T@"NSUserDefaults",&,N,V_defaults
memoryStore
T@"NSDictionary",&,N,V_memoryStore
currentEDIDHash
T@"NSString",C,N,V_currentEDIDHash
cableCheckTimer
T@"NSObject<OS_dispatch_source>",&,N,V_cableCheckTimer
lastCableErrorInfo
T@"PBCableSignalInfo",C,N,V_lastCableErrorInfo
baseCableCheckTimeInterval
Td,N,V_baseCableCheckTimeInterval
matchContentRequestedModes
T@"NSMutableArray",&,N,V_matchContentRequestedModes
observingFocusedProcess
TB,N,GisObservingFocusedProcess,V_observingFocusedProcess
DisableSnapshots
#T:[%@%p] #Error #%@ : Screenshot failed: could not create image. 
/tmp/screenshot-%@.png
public.png
#T:[%@%p] #Notice #%@ : Wrote screenshot to %@ 
#T:[%@%p] #Error #%@ : Screenshot failed: could not finalize image. 
#T:[%@%p] #Error #%@ : Screenshot failed: could not create destination (%@). 
#T:[%@%p] #Error #%@ : Screenshot failed: could not create URL (%@). 
com.apple.UIKit.vends-view-services
com.apple.SiriViewService
iCloudSyncEnabled
ProcessWillActivate
ProcessDidActivate
ProccessWillDeactivate
DeviceWillShutdown
SystemAppWillExit
ProcessDidExit
BundleIdentifier
Process
ApplicationProcess
ActivateSuspended
TransitionContext
PineBoard: transition already in progress
PBProcessManagerSuppressAutodownloadPromptKey
PBActivateAppOptionsKeyWantsDeepLinkFromOrigin
ProcessManager
#T:[%@%p] #Notice #%@ : Prompting the user to enable automatic app downloads if necessary 
com.apple.PBLinkHandler
prefs
enableSetting
disableSetting
AutoDownloadApps
applicationIdentifier
Tried to launch app with bundle identifier %@, but no such app is installed
App '%@' not available to handle '%@'
App '%@' looks unsafe for use on the internet; %@
App '%@' looks busy
App '%@' is not trusted (signature state: %ld)
App '%@' is not enabled (%@)
Squelching launch of app '%@' while waiting for app '%@' to be debugged
Cannot launch app '%@' while Setup Assistant is running
[PBD] Denying open-application request for reason: %@ (%@)
[PBD] Opening app '%@' is barred due to content restrictions
play
CLASSIC
@"NSRegularExpression"16@?0@"NSString"8
EnableMallocStackLogging
EnableMallocStackLoggingNoCompact
MallocStackLogging
MallocStackLoggingNoCompact
@"FBProcessExecutionContext"8@?0
v16@?0@"FBSMutableSceneSettings"8
 (backgrounded)
v16@?0@"PBAppTransitionContext"8
PBProcessManager.scenesTransactionObserver
WORKSPACE
#T:[%@%p] #Notice #%@ : Reboot requested 
#T:[%@%p] #Notice #%@ : System App Restart requested 
com.apple.springboard.requestScene-daemon
#T:[%@%p] #Notice #%@ : Checking app restrictions for '%@' (%ld) 
#T:[%@%p] #Notice #%@ : App '%@' is allowed to launch 
#T:[%@%p] #Notice #%@ : App '%@' is restricted from launch 
Physical network changed and this app is not safe for use while online
beta-reports-active
BetaTestingHasEndedAlertTitle
BetaTestingHasEndedAlertMessage
BetaTestingHasEndedAlertDefaultButton
AppFreeDeveloperProfileNotTrustedTitle
AppFreeDeveloperProfileNotTrustedBodyFormat
AppFreeDeveloperProfileNotTrustedCancel
AppProfileNotTrustedTitle
AppProfileNotTrustedBodyFormat
AppProfileNotTrustedCancel
AppProfileExpiredTitleWithNameFormat
AppProfileExpiredOK
-[PBProcessManager prepareSystemForSleepWithCompletion:]
-[PBProcessManager restoreSystemFromSleepWithCompletion:]
-[PBProcessManager _bringApplicationProcessToForeground:completion:]
-[PBProcessManager _bringApplicationProcessToForeground:completion:]_block_invoke
forTesting
TB,N,V_forTesting
debuggerTargetBundleIdentifier
T@"NSString",C,N,V_debuggerTargetBundleIdentifier
recentApplicationBundleIdentifiers
T@"FBProcess",R,N
focusedProcessBundleIdentifier
focusedProcessIsKioskApp
focusedProcessIsDefaultKioskApp
alternateApplicationIsActive
[PBD] Process '%@' is not running; transaction %s, %s, %s, and %s, with errors: %@
started
did not start
is running
is not running
was interrupted
was not interrupted
failed
did not fail
[PBD] Open app transaction failure; isBusy:%d failed:%d aborted:%d; %@ ; %@
. No app available to handle '%@'.
 with no URL. Untrusted requests may only open URLs, not launch specific applications.
. App is invalid. URL: '%@'.
. App is a placeholder and cannot be opened. URL: '%@'.
. App is blocked. URL: '%@'.
. App is restricted. URL: '%@'.
. App cannot handle '%@'.
[PBD] Untrusted request from '%@' to open '%@'%@
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
opaqueView
T@"UIView",R,N,V_opaqueView
ThermalNoticeText
ThermalNoticeSubtext
initWithToken:requestType:
init
class
isKindOfClass:
token
isEqual:
requestType
hash
description
stringWithFormat:
initWithToken:
.cxx_destruct
restrictionContentType
setRestrictionContentType:
restrictedSettingType
setRestrictedSettingType:
rating
setRating:
allowInteraction
setAllowInteraction:
serviceRequestCompletionBlock
setServiceRequestCompletionBlock:
resultHandler
setResultHandler:
setPIN:
_allowInteraction
_token
_requestType
_restrictionContentType
_restrictedSettingType
_rating
_serviceRequestCompletionBlock
_resultHandler
_PIN
alloc
notificationFilter
cancel
numberWithInt:
objectForKey:
setNotification:
_newViewControllerForNotification:
setObject:forKey:
notificationSource
numberWithBool:
dictionaryWithObjects:forKeys:count:
sharedInstance
presentDialogViewController:options:
timeout
_dismissViewController:
alertHeader
alertMessage
notificationType
setDelegate:
notification
didSelectButtonAtIndex:
dismissDialogViewController:
removeObjectForKey:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
userNotificationViewController:didSelectButtonIndex:
didCancelUserNotificationViewController:
userNotificationCenterDidReceiveCFNotification:
userNotificationCenterDidCancelCFNotification:
setNotificationFilter:
_displayedViewControllers
_notificationFilter
copy
mode
bundleIdentifier
options
initWithMode:bundleIdentifier:options:
_defaultSystemAppOptions
_singleAppOptionsForMCPayloadOptions:
objectForKeyedSubscript:
boolValue
setObject:forKeyedSubscript:
defaultSystemConfigurationWithBundleIdentifier:
singleAppModeConfigurationWithBundleIdentifier:payloadOptions:
copyWithZone:
_mode
_bundleIdentifier
_options
colorWithWhite:alpha:
viewDidLoad
view
addLayoutGuide:
setNumberOfLines:
setTextAlignment:
setFont:
whiteColor
setTextColor:
setText:
setTranslatesAutoresizingMaskIntoConstraints:
addSubview:
_textColor
setImage:
setTitle:target:action:forButton:
centerXAnchor
constraintEqualToAnchor:
centerYAnchor
widthAnchor
constraintEqualToConstant:
leadingAnchor
heightAnchor
constraintLessThanOrEqualToAnchor:
topAnchor
firstBaselineAnchor
lastBaselineAnchor
constraintEqualToAnchor:constant:
constraintGreaterThanOrEqualToConstant:
bottomAnchor
trailingAnchor
arrayWithObjects:count:
activateConstraints:
setNeedsUpdateConstraints
deactivateConstraints:
titleForState:
length
addObject:
updateViewConstraints
isHidden
isViewLoaded
buttonWithType:
_setBlurEnabled:
_buttonColor
_setVisualEffectViewEnabled:backgroundColor:
setTitle:forState:
addTarget:action:forControlEvents:
setHidden:
setTitleColor:forState:
blackColor
titleLabel
title
_setSpeedBumpEdges:
preferredFocusEnvironments
setTitleText:
setBodyText:
setFooterText:
titleText
bodyText
footerText
image
bodyLabel
footerLabel
primaryButton
secondaryButton
footerButton
imageView
combinedGuide
textAndButtonsGuide
imageGuide
buttonConstraints
_titleText
_bodyText
_footerText
_image
_titleLabel
_bodyLabel
_footerLabel
_primaryButton
_secondaryButton
_footerButton
_imageView
_combinedGuide
_textAndButtonsGuide
_imageGuide
_buttonConstraints
preferredFontForTextStyle:
diagnosticLogPaths
incrementScalarKey:
diagnosticLogPathsWithCompletion:
initWithRemoteConnection:
invalidate
remoteConnection
_remoteConnection
setWithObject:
sharedApplication
pb_registerMigrations
performMigrationIfNeeded
processInfo
systemUptime
setupPowerManagement
setSystemAppControlsFocusOnMainDisplay:
setupHIDEventRouters
setupNetworkMonitoring
connect
addObserver:forKeyPath:options:context:
wakeDisplayWithReply:
setSILState_On
start
_startExternalControlManagement
sharedPineBoardPreferences
appIdentifierHistory
_sanitizeAppIdentifierHistory:
setupProcessManagementWithRecentApplicationBundleIdentifiers:
startObservingFocusedProcess
tvs_bind:toObject:withKeyPath:options:
defaultCenter
_handleProcessDidExitNotification:
addObserverForName:object:queue:usingBlock:
_handleAppStateDidChange
addObserver:selector:name:object:
startConnectionMonitoring
_startBluetoothRemoteKeepAliveTimer
_bluetoothRemoteDidConnectNotification:
_bluetoothRemotePowerSourceLimitedSourceNotification:
startListeningForPowerSources
_handleBluetoothRemoteProximityDetection
_handleDeviceWillSleepNotification:
_handleDeviceWillWakeNotification:
_internetAvailabilityDidChangeNotification:
_blackScreenRecoveryModeNotification:
_startUpAndRunningTimer
_checkForQuestionableBootArgs
numberWithInteger:
numberWithDouble:
setMessage:
setViewControllerClassName:
setServiceIdentifier:
bulletinService
presentBulletin:withCompletion:
dismissBulletin:
removeObserver:
removeObserver:forKeyPath:context:
dealloc
sharedApplicationLibrary
setApplicationInfoClass:
setAllowConcurrentLoading:
initWithConfiguration:
preferredLanguages
firstObject
defaultWritingDirectionForLanguage:
registerAsSystemApp
indexSetWithIndex:
keyCommandWithKeyCodes:modifierFlags:buttonType:
_isButtonDownEvent:
numberWithUnsignedLongLong:
stringValue
setDeviceID:
setSourceName:
stopSiriWithContext:
sharedApplicationDelegate
shouldTogglePlayPauseOnButtonDown
shouldTogglePlayPauseOnButtonUp
shouldForwardSystemAppEvent
isB239ButtonEvent:
incrementEventCountForAppleBluetoothRemote
isIRRemoteButtonEvent:
incrementEventCountForIRRemote
isCECButtonEvent:
incrementEventCountForCEC
isRemoteAppEvent:
incrementEventCountForRemoteApp
isBluetoothKeyboardButtonEvent:
incrementEventCountForBluetoothKeyboard
allPresses
count
phase
enumerateObjectsUsingBlock:
timeIntervalSinceReferenceDate
sharedSystem
cancelPendingVolumeActions
postNotificationName:object:
standardUserDefaults
boolForKey:
_enhanceLogging:
_showStackShotIndication
_hidEvent
incrementB239ButtonPresses
incrementB239TVButtonPresses
_isSystemEvent:
_shouldTriggerExternalControlActionForEvent:
sendAction:withCompletion:
anyObject
type
_pausePlayback
_processChordsWithPressesEvent:
_handlePhysicalButtonEvent:
startSiriWithContext:
__handleHIDEvent:
_handleHIDEvent:
_logButtonEventTiming:
setSILStateForHIDEvent:
_handleSystemPressHidEvent:withType:
source
_prepareButtonEvent:withPressInfo:
_modifierFlags
_unmodifiedInput
isEqualToString:
toggleSystemAppearance
keyWindow
_handleKeyUIEvent:
focusedProcess
isSystemApplicationProcess
_isKeyDown
indexOfObjectIdenticalTo:
removeObjectAtIndex:
_finishButtonEvent:
_removeEnqueuedEvent:
isDeviceAsleep
_isGameControllerZeroEvent:
sendEvent:
countByEnumeratingWithState:objects:count:
window
_deactivateScreenSaver
_stopAllActivity
_resumeActivity
screenSaverTrigger
isIdle
kioskAppConfiguration
_updateKioskAppConfiguration:
wakeDeviceWithOptions:
resetUserActivityTriggersWithReason:
tvs_bindingAdaptor
IdleTimeOutBinding
_handleIdleTimeoutDidChange
establishBinding:toObject:withKeyPath:bindingOptions:updateHandler:
FocusedProcessBinding
_handleFocusedProcessDidChange
PowerManagerSleepBinding
_handleDevceSleepChange
setNeedsUpdateActivityTriggersAndBackgroundTasks
_setPresenceDetectionActive:
_updateHiliteModeState
enterIdleMode:
exitIdleMode:
settings
clientProcess
state
taskState
isUISubclass
mutableCopy
setIdleModeEnabled:
displayIdentity
configurationForIdentity:
setDisplayConfiguration:
updateSettings:withTransitionContext:
enumerateScenesWithBlock:
_activateScreenSaverFromUserAction:completion:
startCRDWithReason:
timeoutInSeconds
sleepDeviceWithOptions:
valueForBinding:
disconnectAllRemotesAndKeepPaired
setConnectionKeepAliveTimeInSeconds:
_stopBluetoothRemoteKeepAliveTimer
enableBackgroundTasksOfType:
disableBackgroundTasksOfType:
_notifyIdleTasksEnabledDidChange
UTF8String
tasksEnabledOfType:
userInfo
noteApplicationExit
containsObject:
removeObject:
_saveRecentApplicationBundleIdentifiers
setRecentlyUpdated:forBundleIdentifier:
remotePresenceDetectionTrigger
hiliteModeTrigger
internetAvailable
setKioskAppConfiguration:
setWithObjects:
allApplicationProcesses
systemApplicationProcess
killForReason:andReport:withDescription:
updateWithConfiguration:
fallbackDisplayMode
currentDisplayMode
initWithDisplayMode:
setWriteDisplayModeToDisk:
setUserInfo:
updateDisplayManagerWithRequest:reply:
blackScreenRecoveryDisplayModes
presentBlackScreenRecoveryForDisplayModes:selectionHandler:
applicationProcessesForBundleIdentifier:
bluetoothRemoteSleepTrigger
isCharging
batteryLevel
restoreSystemFromSleepWithCompletion:
_prepareForDeviceWake
noteGoodTimeToShowWhatsNew
dismissScreenSaver
prepareSystemForSleepWithCompletion:
playing
_prepareForDeviceSleep
isAnyRemoteConnected
bluetoothRemoteKeepAliveTimeInterval
bluetoothRemoteKeepAliveTimer
isValid
_keepBluetoothRemoteAlive
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setBluetoothRemoteKeepAliveTimer:
setSleepTimeoutInSeconds:
relaunch
reboot
isScreenSaverIdle
activateScreenSaverRequestedByClient:completion:
forwardHIDButtonEventWithUsagePage:usage:type:senderID:
insertObject:atIndex:
_enqueueHIDEvent:
cancelScheduledActivationForAppWithBundleIdentifier:
stringByAppendingString:
userActivityTriggerWithName:timeoutInSeconds:
addUserActivityTrigger:
setTarget:
_activateAppIdleAction:
setAction:
setTrigger:
setBundleIdentifier:
setOpenURL:
appActivateInfoByBundleIdentifier
dictionary
setAppActivateInfoByBundleIdentifier:
trigger
removeUserActivityTrigger:
suppressWakeForHIDEventsTimer
_stopSupressingWakeForHIDEvents
setSuppressWakeForHIDEventsTimer:
dateWithTimeIntervalSinceNow:
setFireDate:
shouldAssertActiveSourceOnAppRestart
idleTimerAllowed
remotePresenceDetectionDelayTimeoutInSeconds
hiliteModeTimeoutInSeconds
doubleValue
sleepTimeoutInSeconds
crdAppTimeoutInSeconds
isSleepNever
bluetoothRemoteSleepTimeoutInSeconds
isRunningInStoreDemoMode
setRemotePresenceDetectionTrigger:
_remotePresenceDetectionModeTrigger:
setHiliteModeTrigger:
_handleHiliteModeTrigger:
setScreenSaverTrigger:
_handleScreenSaverTrigger:
crdAppTrigger
setCrdAppTrigger:
_handleCRDAppTrigger:
sleepTrigger
setSleepTrigger:
_handleSleepTrigger:
setBluetoothRemoteSleepTrigger:
_handleBluetoothRemoteSleepTrigger:
_setIdleTimerDisabled:
playingMusic
_setIdleBackgroundTasksEnabled:
_setNormalBackgroundTasksEnabled:
idleTypeBackgroundTasksTrigger
setIdleTypeBackgroundTasksTrigger:
_handleIdleBackgroundTasksTrigger:
_updateUserActivityTriggers
_updateBackgroundTaskScheduling
recentApplicationBundleIdentifiers
setAppIdentifierHistory:
tvsui_setHeadBoardStoreDemoAppOrderFilePath:
activateScreenSaverFromUserAction:completion:
setPresenceDetectionEnabled:
startTimingForKey:
stopTimingForKey:
_focusedSceneHasHiliteModeEnabled
hiliteModeDisabledForTesting
_setHiliteModeActive:
scenesPassingTest:
clientSettings
idleModeVisualEffectsEnabled
nowPlayingProcessPID
processForPID:
openURL
activateApplication:openURL:suspended:completion:
arrayWithCapacity:
applicationProxyForIdentifier:
isInstalled
scheduledTimerWithTimeInterval:repeats:block:
valueForNVRAMVariable:
containsString:
flashSILMorseCode:
initWithSuiteName:
dictionaryWithObjectsAndKeys:
allKeys
setBool:forKey:
beginAppTransitionWithTransaction:
context
sendResponse:
saveSnapshotForScene:context:completion:
invalidateSnapshotsForBundleIdentifier:
launchKioskAppFromSetup
handleFocusedAppRequestDeactivation
UIActionType
kioskAppIdentifier
handleUnhandledMenuEvent
settingsByApplyingToMutableCopyOfSettings:
statusBarStyle
statusBarHidden
isStatusBarForegroundTransparent
statusBarContextID
defaultStatusBarStyle
defaultStatusBarHidden
userInterfaceStyle
defaultPNGName
defaultPNGExpirationTime
compatibilityMode
deviceOrientationEventsEnabled
interfaceOrientationChangesDisabled
interfaceOrientation
supportedInterfaceOrientations
idleTimerDisabled
proximityDetectionModes
controlCenterAmbiguousActivationMargin
controlCenterRevealMode
notificationCenterRevealMode
primaryWindowOverlayInsets
backgroundStyle
whitePointAdaptivityStyle
requestedDisplayMode
displayConfigurationRequest
isReachabilitySupported
wantsExclusiveForeground
visibleMiniAlertCount
audioCategoriesDisablingVolumeHUD
brightnessLevel
disablesMirroring
client:setIdleTimerDisabled:
hdrMode
refreshRate
pb_supportsHDR
updateWallpaperWithTransitionContext:
entitlementValueForKey:ofClass:
performModeSwitchForDisplayRequest:
isApplicationProcess
integerValue
dismissBlackScreenRecoveryWindow
presentingAppSwitcher
presentAppSwitcher
keyPathsForValuesAffectingKioskAppIdentifier
systemIdleSleepInterval
_newApplicationLibrary
sceneManager:didCreateScene:
sceneManager:willDestroyScene:
sceneManager:didDestroyScene:
sceneManager:updateForScene:preparedWithContext:
sceneManager:updateForScene:appliedWithContext:
sceneManager:updateForScene:completedWithContext:error:
sceneManager:didCreateScene:withClient:
sceneManager:willUpdateScene:withSettings:transitionContext:
sceneManager:willCommitUpdateForScene:transactionID:
sceneManager:didCommitUpdateForScene:transactionID:success:
sceneManager:didCommitUpdateForScene:transactionID:
sceneManager:scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:
sceneManager:scene:didReceiveActions:
sceneManager:hostingPolicyForDisplay:
sceneManager:hostingPolicyForScene:
sceneManager:createDefaultTransitionContextForScene:
bulletinService:didDismissBulletin:withReason:
powerManagerUserEventWantsWakeDevice:
finishSystemAppLaunch
_showSysdiagnoseIndication
_hideSysdiagnoseIndication
_showScreenshotCapturedIndication
userInterfaceLayoutDirection
_accessibilityIsSystemAppServer
resignActive
keyCommands
_validatePresses:forWindow:
stopAllActivity
resumeActivity
refreshKioskAppConfiguration:
resetIdleTimerAndUndim
tvs_bindIdleTimeOutBindingToObject:withKeyPath:options:
tvs_bindFocusedProcessBindingToObject:withKeyPath:options:
tvs_bindPowerManagerSleepBindingToObject:withKeyPath:options:
sendHIDButtonEventWithUsagePage:usage:type:senderID:toApplication:
client:setSleepTimeout:
sleepRequestedByClient:forReason:
wakeRequestedByClient:forReason:
relaunchBackboarddRequestedByClient:
relaunchRequestedByClient:
rebootRequestedByClient:
noteUserPresenceDetected
activateScreenSaverRequestedByClient:
deactivateScreenSaverRequestedByClient:
sendMenuButtonEventRequestedByClient:
sendEventData:fromClient:
activateAppIfPlayingMusicAfterIdleTime:bundleIdentifier:openURL:
userActivityTriggeredForReason:
temporarilySuppressWakeForHIDEvents
handleAppTransition:
observeValueForKeyPath:ofObject:change:context:
appSwitcherWindow
activateAppSwitcher
airPlayActive
setAirPlayActive:
_bulletinService
_networkBulletin
_sysdiagnoseBulletin
_screenshotCapturedBulletin
_clientsWantingIdleTimerDisabled
_needsAdjustToDisplayChange
_needsUpdateActivityTriggersAndBackgroundTasks
_inhibitScreenSaver
_processingIgnorableEventDuringSleep
_wakeForHIDEvents
_processingSysdiagnoseViaChord
_enqueuedEvents
_airPlayActive
_bluetoothRemoteKeepAliveTimer
_remotePresenceDetectionTrigger
_hiliteModeTrigger
_screenSaverTrigger
_sleepTrigger
_bluetoothRemoteSleepTrigger
_idleTypeBackgroundTasksTrigger
_crdAppTrigger
_appActivateInfoByBundleIdentifier
_suppressWakeForHIDEventsTimer
_kioskAppConfiguration
_openURL
_trigger
suppressIssueDataExport
reportLatestIssueData
sharedConnection
pb_usesManagedDiagnostics
sharedScreenSaverPreferences
initWithOptions:capacity:
_updateActivationDelay
_initializeStateMachine
domain
_notifyPhotosSourcesDaemon
addObserverForDomain:withDistributedSynchronizationHandler:
initWithObjectsAndKeys:
tvs_setObjectIfNotNil:forKey:
postEvent:withContext:userInfo:
currentState
stateMachine
_machineStateChangeHandler
initWithName:initialState:mode:stateChangeHandler:
setLogObject:
_activateScreenSaverViewControllerWithInfo:
registerHandlerForEvent:onState:withBlock:
pendingActivationRequests
registerHandlerForEvent:onStates:withBlock:
needsDismissal
postEvent:
executeBlockAfterCurrentStateTransition:
_postSystemDidChangeIdleState:
observers
screenSaverManagerDidPresentScreenSaver:
setNeedsDismissal:
_dismissScreenSaver
_forceDismissScreenSaver
registerDefaultHandlerForEvent:withBlock:
setShouldAcceptEvents:
watchdogTimer
setWatchdogTimer:
removeAllObjects
screenSaverManagerWillPresentScreenSaver:
hideDialogWindowForClient:
unhideDialogWindowForClient:
presentScreenSaverWithOptions:completion:
_notifyObserversScreenSaverWillDismiss
_handleScreenSaverDismissalWithState:
_notifyObserversScreenSaverDidDismiss
dismissScreenSaverWithOptions:completion:
forceDismissScreenSaver
setScreenSaverViewController:
screenSaverManagerWillDismissScreenSaver:
screenSaverManagerDidDismissScreenSaver:
bounds
drawViewHierarchyInRect:afterScreenUpdates:
saveWallpaperForSnapshotImage:completion:
lock
unlock
idleScreenEnabled
bundleURL
bundleWithURL:
objectForInfoDictionaryKey:
holdOffForMusicEnabled
allowsScreenSaverOverMusic
activationDelay
setScreenSaverActivationDelayInMinutes:
fetchInitialPhotoAssets
setHoldOffForMusicEnabled:
screenSaverIsActive
addObserver:
_saveScreenSaverSnapshotForWindow:completion:
_screenSaverAppBundleID
_screenSaverControllerClassNameForAppBundleID:
screenSaverActivationDelayInMinutes
displayState
screenSaverPrefs
screenSaverViewController
_holdOffForMusicEnabled
_needsDismissal
_screenSaverActivationDelayInMinutes
_displayState
_screenSaverPrefs
_stateMachine
_pendingActivationRequests
_screenSaverViewController
_observers
_watchdogTimer
initWithNibName:bundle:
setModalPresentationStyle:
setTransitioningDelegate:
array
textFieldTitles
_configureStateMachine
loadView
_menuButtonPressed:
initWithTarget:action:
_setButtonType:
addGestureRecognizer:
_handleHomeButton
setAllowedPressTypes:
viewWillAppear:
layoutIfNeeded
initForPresenting:
initWithPresentedViewController:presentingViewController:
_showTextEntryViewControllerForTextField:
userValues
setTextFieldEnteredValues:
dialogDefaultButtonIndex
otherButtonIndex
alternateButtonIndex
defaultButtonIndex
objectAtIndex:
stringByAppendingFormat:
textFieldInitialValues
textField
setAutocapitalizationType:
setAutocorrectionType:
setEnablesReturnKeyAutomatically:
keyboardTypeForTextField:
setKeyboardType:
isSecureTextField:
setSecureTextEntry:
isSecureTextEntry
setTextContentType:
setKeyboardAppearance:
_titleStringAttributes
initWithString:attributes:
setTitle:
_messageStringAttributes
setTopAccessoryView:
_buttonsForTextField:defaultButtonIndex:
initWithButtons:
setDefaultButtonIndex:
setBottomAccessoryView:
_showChildViewController:
isLastTextField:
otherButtonTitle
setTag:
alternateButtonTitle
defaultButtonTitle
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
addChildViewController:
setFrame:
didMoveToParentViewController:
childViewController
text
setObject:atIndexedSubscript:
postEvent:withContext:
bottomAccessoryView
buttonAtIndex:
delegate
buttonView:didSelectButton:atIndex:
focusedProcessBundleIdentifier
handleTVTapEvent
clearColor
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
textEntryControllerDidFinish:
preferredUserInterfaceStyle
setPreferredUserInterfaceStyle:
setChildViewController:
menuRecognizer
setMenuRecognizer:
setStateMachine:
currentTextField
setCurrentTextField:
setUserValues:
_notification
_delegate
_preferredUserInterfaceStyle
_childViewController
_menuRecognizer
_currentTextField
_userValues
mainBundle
initializeLoggingWithDomain:persistentComponents:
numberOfTapsRequired
gestureRecognizer:shouldRecognizeOnPressDown:
setState:
pressesBegan:withEvent:
reset
recognizeOnPressDown
setRecognizeOnPressDown:
numberOfTaps
_recognizeOnPressDown
_numberOfTaps
timestamp
logUnhandledEvents
_registerHandlers
lastAttemptedUUID
noteStage:
_storeURLBagLoaded:
initFileURLWithPath:isDirectory:
registerCacheAtURL:ofType:urgency:requiresAppTermination:withCompletion:
_processEvent:
_nameForAction:
setScanOptions:
setDeferredAction:
initWithDomain:code:userInfo:
deferredAction
action
isRunning
asset
refreshState
isDownloadingUpdate
machine
sharedManager
assetReleaseDate
descriptorForAsset:withReleaseDate:
setDescriptor:
lastDownloadProgressNotification
isStalled
_downloadProgressPhaseForCurrentState
setPhase:
totalExpected
totalWritten
setPercentComplete:
setNormalizedPercentComplete:
expectedTimeRemaining
setTimeRemaining:
setIsDone:
setProgress:
setDownloadAssetWithDiscretionaryPriority:
setDiscretionary:
configDownload:completion:
purgeableAssetSpaceWithCompletion:
numberWithLongLong:
purgeLocalAssetsWithCompletion:
_sendCheckStartNotification
errorWithDomain:code:userInfo:
_sendCheckFinishedNotificationForUpdateAvailable:withError:
_purgePreviousAssets
_restoreAllPurgedApps
_performCheck
_cancelUpdatePreDownload
removeObserver:name:object:
attributes
_wasStartedForRestore
_wasStartedByBackgroundCheck
prepareForUpdateToOSBuild:forRestore:triggeredManually:
_clearAssetDownloadSpace
setUserConfirmedApplyAtCheckTime:
_cancelUpdateDuringDownload
_downloadAsset
_clearInternalStateOnReturnToIdle
_cancelUpdateDuringApply
osUpdateProcessDidStartApplyWithData:
_clearBrainDownloadSpace
_recheckForNewerUpdate
osUpdateProcessDidStartRedownloadWithData:
setIsApplyingRecheckedUpdate:
_downloadBrain
_clearPrepareAndApplySpace
_prepareAndApplyUpdate
_cancelAndRebootDuringApply
setNeedToCancelMSUOperation:
configurationInfo
personalizationServerURLString
accountID
password
isProfileLoaded
_foundAsset:releaseDate:error:
installedAssetForUpdate:withCompletion:
descriptorForCurrentlyInstalledAssetWithCompletion:
scanOptions
assetForAction:options:withCompletion:
date
setLastCheckDate:
setAsset:
setAssetReleaseDate:
setAssetIsLarge:
longLongValue
_goodTimeToDownloadUpdate
shouldForceRedownloadOnce
setShouldForceRedownloadOnce:
_compareOSVersion:andBuild:withOSVersion:andBuild:
runningAnInternalBuild
shouldAutomaticallyApplyUpdates
isApplyingRecheckedUpdate
_isManagedAction
_resultUserInfoWithError:
osUpdateProcessDidStartCheckWithData:
osUpdateProcessDidFinishCheckWithData:
_processAssetDownloadSuccess
_handleAssetDownloadProgress:
attachProgressCallBack:
downloadAssetWithDiscretionaryPriority
_processAssetDownloadFailureWithResult:
startDownload:then:
sentDownloadFinishedCallback
setSentDownloadFinishedCallback:
currentDownload
osUpdateProcessDidFinishDownloadWithData:
_stopSlowUpdateTimer
mediaFreeSpace
osUpdateProcessDidFinishApplyWithData:
setLastDownloadProgressNotification:
getLocalFileUrl
assetId
imageForStep2of2
_prepareAndApplyUpdateThreadedWithImage:
numberWithFloat:
osUpdateProcessDidUpdateDownloadProgressWithData:
code
floatValue
osUpdateProcessDidUpdateApplyProgressWithData:
cancelDownloadSync
_forceRebootAfterCancel
slowUpdateRebootCount
setSlowUpdateRebootCount:
sharedPineBoardServicesPreferences
pbs_shouldObliterateOnLaunch
setPbs_shouldObliterateOnLaunch:
synchronizeAllDomains
osUpdateProcessDidStartDownloadWithData:
spaceCheck:
_processDownloadSpaceCheckResultForRequiredSpace:hasSpace:error:
_clearSpace:withCompletion:
_continueWithSufficientSpaceFor:
_processBrainDownloadSpaceCheckResultForBrainSize:error:
_clearPrepareAndApplySpaceWithInstallationSize:andPadding:
_processPrepareAndApplySpaceCheckResultForRequiredSpace:andError:
spaceClearingQueue
purgeSpace:withCompletion:
tvs_threePartVersionCompare:
compare:options:
slowUpdateTimeoutInSeconds
_slowUpdateTimerFired:
setSlowUpdateTimer:
slowUpdateTimer
osUpdateProcessDidEncounterSlowUpdateWithData:
userConfirmedApplyAtCheckTime
localizedDescription
sharedProcess
configureForAction:withOptions:error:
isInitializing
isCheckingForUpdate
setAssetDownloadIsDiscretionary:
resumeAfterUpdateCheck
resumeAfterDownload
cancelForReason:
rebootDueToSlowUpdate
purgeAssetsWithCompletion:
_handleBrainDownloadProgressCallbackWithState:error:
_updateProgressStatus:
_brainAssetDownloadOptions
_startSlowUpdateTimer
setMachine:
needToCancelMSUOperation
assetIsLarge
lastMSUPercentCompleted
setLastMSUPercentCompleted:
setSpaceClearingQueue:
_needToCancelMSUOperation
_assetIsLarge
_downloadAssetWithDiscretionaryPriority
_isApplyingRecheckedUpdate
_sentDownloadFinishedCallback
_userConfirmedApplyAtCheckTime
_lastMSUPercentCompleted
_action
_state
_machine
_deferredAction
_scanOptions
_asset
_assetReleaseDate
_slowUpdateTimer
_lastDownloadProgressNotification
_spaceClearingQueue
initWithFormat:arguments:
defaultManager
fileExistsAtPath:
attributesOfItemAtPath:error:
fileSize
removeItemAtPath:error:
stringByAppendingPathComponent:
initWithFormat:
serviceViewControllerProxy
viewServiceBeginPresentationWithOptions:
viewServiceHandleMessage:reply:
viewServiceUpdatePresentationWithOptions:
viewServiceEndPresentationWithOptions:completion:
navigationController
presentingViewController
removeViewController:completion:
dismissViewControllerAnimated:completion:
dismissResultHandler
_sendViewServiceEndPresentationWithOptions:completion:
_parentViewControllerDismissAnimated:
terminationHandler
parentViewController
_exportedInterface
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
dismissWithResult:
initWithCapacity:
serviceViewControllerInterface
exportedInterface
prepareViewServiceWithOptions:
messageViewServiceWithMessage:reply:
updateViewServiceWithOptions:
viewServiceDidTerminateWithError:
setDismissResultHandler:
setTerminationHandler:
_dismissalInProgressFlag
_pendingDismissalCompletionBlocks
_dismissResultHandler
_terminationHandler
_loadBundlesFromDirectory:
fileURLWithPath:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
pathExtension
bundlePath
loadAndReturnError:
principalClass
isSubclassOfClass:
initWithPluginHost:
pbUIPluginDidLoad
loadPlugins
pluginControllerForBundleIdentifier:
_loadedPluginsByBundleID
setPresentedViewController:
presentSiriViewController:
presentedViewController
dismissSiriWindow
hideSiriWindow
setSiriIsFullscreen:
presentViewController:
dismissViewController:
hideViewController:
didChangeMode:
_presentedViewController
requestWithBundleIdentifier:
variant
preferLaunchImage
preferredScaleFactor
setPreferLaunchImage:
setPreferredScaleFactor:
setVariant:
_preferLaunchImage
_preferredScaleFactor
_variant
initWithType:item:fromIndexPath:toIndexPath:
deleteUpdateWithItem:indexPath:
insertUpdateWithItem:indexPath:
item
fromIndexPath
toIndexPath
_type
_item
_fromIndexPath
_toIndexPath
serialisedState
localeRefreshRate
setLocaleRefreshRate:
findMatchingLocaleMode:enforceVirtualCheck:
autoupdatingCurrentLocale
countryCode
updateDisplayForNewRegionWithCountryCode:completion:
recalculatedCurrentLocaleRefreshRate
systemRouteWithContextUID:
initWithGroupRoute:outputDeviceRoute:
initWithDataSource:
setRoutingContextUID:
initWithDataSource:name:
adjustVolumeValue:
volumeValue
setVolumeValue:
_setNeedsVolumeUpdate
_updateVolume
pickedRoutes
isDeviceRoute
indexOfObjectPassingTest:
isVolumeControlAvailable
volumeSupportedChanged:forOutputContext:
sharedAVSystemController
attributeForKey:
_presentVolumeBulletinForRouteWithName:volumeLevel:
routeName
numberWithUnsignedInteger:
volumeBulletin
updateBulletin:withMessage:withCompletion:
setVolumeBulletin:
volumeController:volumeControlAvailableDidChange:
volumeController:volumeControlCapabilitiesDidChange:
volumeController:volumeControlLabelDidChange:
volumeController:volumeValueDidChange:
volumeController:mutedStateDidChange:
volumeController:volumeWarningStateDidChange:
volumeController:EUVolumeLimitDidChange:
volumeController:EUVolumeLimitEnforcedDidChange:
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
initWithDelegate:
increaseVolumeForOutputContext:
decreaseVolumeForOutputContext:
volumeSupportedForOutputContext:
setVolumeNotificationsEnabled:forOutputContext:
setBulletinService:
systemMusicRoutingController
systemAudioRoutingController
systemMusicVolumeController
systemAudioVolumeController
systemMusicVolume
systemAudioVolume
systemMusicVolumeSupported
systemAudioVolumeSupported
systemMusicVolumeNotificationsEnabled
systemAudioVolumeNotificationsEnabled
updatingVolumeValues
_systemMusicVolumeSupported
_systemAudioVolumeSupported
_systemMusicVolumeNotificationsEnabled
_systemAudioVolumeNotificationsEnabled
_updatingVolumeValues
_volumeBulletin
_systemMusicRoutingController
_systemAudioRoutingController
_systemMusicVolumeController
_systemAudioVolumeController
_systemMusicVolume
_systemAudioVolume
animationWithKeyPath:
functionWithControlPoints::::
_basicAnimationForView:withKeyPath:
_timingFunctionForAnimation
_timingFunctionForAnimationInView:withKeyPath:
_shouldAnimateAdditivelyForView:withKeyPath:
exceptionWithName:reason:userInfo:
process
isForeground
isAppSwitcherTransition
fromBundleIdentifier
toBundleIdentifier
launchedForPlayback
launchedByDeactivation
applicationType
dataContainerURL
path
launchURL
isFirstUserLaunch
abortTransition
setOpaque:
viewDidLayoutSubviews
overlayHostContainer
transitionTransaction
appTransitionWillBeginForContext:
_beginInitialTransitionAnimation
_complete
_beginFinalTransitionAnimation
_synchronizeDrawing
sceneWithIdentifier:
hostManager
disableHostingForRequester:
transitionType
initWithBundleIdentifier:hasBackground:loadRequestBuilder:
layer
setAllowsGroupOpacity:
initWithBundleID:hasBackground:requester:
setUseSnapshot:
setTransform:
setAlpha:
_installOverlayWindowsInOverlayContainer
setVisibleViewAfterInitialAnimation:
sendSubviewToBack:
pb_wallpaperViewForVariant:bundleIdentifier:
setHasBackground:
_synchronizedDrawingFence
notifyStartDefaultKioskAppTransitionForType:animationDuration:animationFence:delay:
_animateWithDuration:delay:options:factory:animations:completion:
notifyStartDefaultKioskAppTransitionWithAnimationFence:completion:
notifyPrepareDefaultKioskAppTransitionForType:animationDuration:delay:completion:
_startForegroundUpdate
visibleViewAfterInitialAnimation
insertSubview:below:
animateWithDuration:delay:options:animations:completion:
beginForegroundTransition
appTransitionDidCompleteForContext:
completion
_disableOverlayWindowsHosting
setCompletion:
overlayWindows
_scene
identifier
hostViewForRequester:
enableHostingForRequester:orderFront:
contextReadyForFinalTransition:
contextForegroundUpdateComplete:
contextTransitionDidFail:
initWithCoder:
initWithTransitionTransaction:
addOverlayWindow:
shouldUseLaunchImage
animationDuration
appSwitcherToDefaultKiosk
wallpaperView
setWallpaperView:
setOverlayWindows:
setOverlayHostContainer:
_shouldUseLaunchImage
_appSwitcherToDefaultKiosk
_transitionTransaction
_completion
_animationDuration
_transitionType
_visibleViewAfterInitialAnimation
_wallpaperView
_overlayWindows
_overlayHostContainer
initWithFrame:
setWindowLevel:
setContentMode:
redColor
colorWithAlphaComponent:
setFill
_canBecomeKeyWindow
_ignoresHitTest
drawRect:
setIdentifier:
providerType
setProviderType:
_identifier
_providerType
initWithBundleIDs:states:
clearEndpointsForIdentifier:
setHandler:
addObjectsFromArray:
null
URLWithString:
registerEndpoint:forIdentifier:providerType:
endpointForIdentifier:providerType:responseBlock:
_appStateMonitor
_clientEndpoints
_clientResponseBlocks
_registerWindowNotificationHandlers
initWithDisplayType:identifier:elementClass:
activate
addStateObserver:
removeStateObserver:
restrictionPINWindow
dialogWindow
_presentedDialogIsRemote
siriWindow
tvBarWindow
airPlayWindow
routingWindow
nowPlayingWindow
crdLoadingWindow
screenSaverWindow
pendingDialogRequests
_dialogRequestIsRemote:
viewController
screenSaverState
setScreenSaverState:
dismissRestrictionPINWindow
endSiriSession
_highestPriorityWindow
_lazyScreenSaverWindow
checkOutScreenSaverAssertion
rootViewController
checkInScreenSaverAssertion
_destroyScreenSaverWindow
presentScreenSaverViewControllerWithOptions:completion:
dismissScreenSaverViewControllerWithOptions:completion:
setRootViewController:
setScreenSaverWindow:
_beginPendingTransitionTransaction
isKeyWindow
_lazyNowPlayingWindow
_rootNavigationViewControllerForWindow:
pushViewController:animated:
topViewController
setNowPlayingWindow:
_lazyRoutingWindow
setRoutingWindow:
crdInstructionsWindow
_lazyRestrictionPINWindow
requestViewController:fromServiceWithBundleIdentifier:connectionHandler:
setRestrictionPINWindow:
displayMode
_lazyBlackScreenRecoveryWindow
presentViewController:animated:completion:
stop
setDismissBlock:
scheduleIterationForDisplayModes:iterationInterval:iterationBlock:
recoveryControllerWithDisplayMode:timeoutDuration:
blackScreenRecoveryWindow
recoveryIterator
setRecoveryIterator:
setBlackScreenRecoveryWindow:
_lazySiriWindow
_unhideSiriWindow
setUseSnapshotForSiri:animated:
checkOutSiriAssertion
dialogHiddenClients
_unhideDialogWindowForClients:
_schedulePresentDialog
isWaitingForStartListening
checkInSiriAssertion
animateWithDuration:animations:completion:
_willHideSiriWindow
setSiriWindow:
checkOutSiriFullScreenAssertion
checkInSiriFullScreenAssertion
snapshotViewAfterScreenUpdates:
insertSubview:atIndex:
setViewControllers:animated:
transitionWithView:duration:options:animations:completion:
requestWithViewController:
setOptions:
tvs_boolForKey:defaultValue:
_executePresentationRequest:
_enqueueDialogPresentationRequest:
_retirePresentationRequestForViewController:
_dismissDialogWindow
setDialogWindow:
checkInDialogAssertion
_presentNextDialog
criticalAlertWindow
softwareUpdateWindow
appTransitionWindow
isCRDActive
systemDialogsAllowed
_suspendDialogWindow
_lazyDialogWindowForRequest:
checkOutDialogAssertion
visibleViewController
windowManagerWillPresentDialogViewController:
modalPresentationStyle
presentingSiriSession
setTimeoutInSeconds:
_enqueueBulletinPresentationRequest:
presentedBulletinViewController
pendingBulletinRequests
dismissBulletinWindow
_schedulePresentBulletin
bulletinWindow
setBulletinWindow:
setPresentedBulletinViewController:
_presentNextBulletin
_lazyBulletinWindow
windowManagerWillPresentBulletinViewController:
_cancelBulletinTimer
applicationRetireBulletinViewController:
mainScreen
setSoftwareUpdateWindow:
setCriticalAlertWindow:
_setThermalState:
_lazyEventMaskingWindow
setEventMaskingWindow:
eventMaskingWindow
dismissHotBlackWindow
presentHotBlackWindow
hotBlackWindow
_lazyHotBlackWindow
setHotBlackWindow:
setPendingAirPlayController:
_lazyAirPlayWindow
checkOutAirPlayAssertion
setPresentingAirPlayWindow:
dismissRoutingUI
dismissNowPlaying
checkInAirPlayAssertion
setAirPlayWindow:
_shouldActivateAppSwitcher
_lazyAppSwitcherWindow
checkOutAppSwitcherAssertion
exitToCurrentApplication
shouldActivateForProcessWithIdentifier:
checkInAppSwitcherAssertion
setAppSwitcherWindow:
appTransitionHelper
presentingAppTransition
playbackLaunchShroudWindow
failWithReason:
activeTransitionContext
_cancelPendingTransitionTransactions
pendingTransitionTransactions
handleTransitionWithContext:completion:
initWithDisplayType:name:
beginTransition
_lazyAppTransitionWindow
checkOutTransitionAssertion
isSuspended
checkInTransitionAssertion
resumeSiriSession
_dismissAppTransitionWindow:
_updateLayoutElementsWithFocusedProcess:
endTransition
setAppTransitionHelper:
setCompletionBlock:
_dismissWindowsForAppLaunch:
begin
_beginShroudedAppTransitionTransaction:duration:delay:block:
isModeSwitchNeededForTransitionTransaction:
performModeSwitchForBundleIdentifierIfNeeded:
_beginAppTransitionTransaction:withCompletionHandler:
_lazyPlaybackLaunchShroudWindow
_dismissTransitionShroudWindow:
launchOverSiri
suspendSiriSession
windowLevel
dismissTVBarWindow
dismissAirPlayWindow
_dismissAppSwitcherWindow
setAppTransitionWindow:
setPlaybackLaunchShroudWindow:
dismissCRDWaitingScreen
_lazyCRDLoadingWindow
setCrdLoadingWindow:
crdInstructionWindowIdentifier
setCrdInstructionWindowIdentifier:
crdInstructionWindowGroup
_lazyCRDInstructionsWindow
presentingPINRequest
_incrementCRDInstructionWindowIdentifier
setCrdInstructionsWindow:
_lazyTVBarWindow
setTVBarWindow:
initWithFrame:name:
setShouldOcclude:
modeSwitchDebuggingEnabled
setBackgroundColor:
setVolumeGestureRecognizersEnabled:
setMicrophoneGestureRecognizersEnabled:
setTVGestureRecognizersEnabled:
setExposeAllGestureRecognizerEnabled:
setMenuGestureRecognizersEnabled:
setPlaybackGestureRecognizersEnabled:
setDirectionalGestureRecognizersEnabled:
_dismissAirPlayWindow
pendingAirPlayController
presentAirPlayViewController:
setDismissLastViewControllerBlock:
_dismissRoutingWindow:
_dismissNowPlayingWindow:
_dismissRestrictionPINWindow:
_dismissBlackScreenRecoveryWindow:
wallpaperWindow
setWallpaperWindow:
_dismissCRDLoadingWindow:
_dismissCRDInstructionsWindow:
setUserInteractionEnabled:
_dismissTVBarWindow:
makeKeyWindow
focusedAppDisplayLayoutElement
deactivate
setLevel:
setFillsDisplayBounds:
setUIApplicationElement:
activateWithBuilder:
mainQueue
object
_cancelGestureRecognizersForView:
_updateKeyWindow
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
navigationController:didDismissViewController:
displayState:didChangeWithConnection:
isScreenSaverWindowKey
presentingNowPlaying
presentNowPlayingViewController:options:
dismissNowPlayingViewControllerWithOptions:completion:
presentingRouting
presentRoutingViewController:options:
dismissRoutingViewControllerWithOptions:completion:
presentRestrictionPINWindow:
presentingDialogWindow
presentDialogViewController:
presentBulletinViewController:withTimeoutInSeconds:
updateBulletinViewControllerTimeout:timeoutInSeconds:
dismissBulletinViewController:
presentSoftwareUpdateWindow
dismissSoftwareUpdateWindow
presentThermalWarningWindow
dismissThermalWarningWindow
presentEventMaskingWindow
dismissEventMaskingWindow
dismissAppSwitcher
shroudTransitionWithDuration:delay:block:
cancelCurrentAppTransition
presentingCRDLoadingWindow
presentCRDLoadingWindow
dismissCRDLoadingWindow
presentingCRDInstructionsWindow
presentCRDInstructionsWindow
setShouldAnimateCRDInstructionsHUD:
dismissCRDInstructionsWindow
presentingTVBarWindow
presentTVBarViewController:
_lazyWallpaperWindow
_highestPriorityWindowBelow:eventsOnly:
siriIsFullscreen
shouldAnimateCRDInstructionsHUD
presentingAirPlayWindow
bulletinDismissalTimer
setFocusedAppDisplayLayoutElement:
setCrdInstructionWindowGroup:
useSnapshotForSiri
siriViewController
siriSnapshotView
siriAssertionCheckedOut
setSiriAssertionCheckedOut:
dialogAssertionCheckedOut
setDialogAssertionCheckedOut:
_hasScheduledPresentDialog
_hasScheduledPresentBulletin
_siriIsFullscreen
_shouldAnimateCRDInstructionsHUD
_presentingAirPlayWindow
_useSnapshotForSiri
_siriAssertionCheckedOut
_dialogAssertionCheckedOut
_presentedBulletinViewController
_softwareUpdateWindow
_hotBlackWindow
_criticalAlertWindow
_eventMaskingWindow
_airPlayWindow
_bulletinWindow
_playbackLaunchShroudWindow
_dialogWindow
_siriWindow
_routingWindow
_nowPlayingWindow
_restrictionPINWindow
_screenSaverWindow
_appSwitcherWindow
_appTransitionWindow
_wallpaperWindow
_blackScreenRecoveryWindow
_crdLoadingWindow
_crdInstructionsWindow
_tvBarWindow
_dialogHiddenClients
_bulletinDismissalTimer
_pendingDialogRequests
_pendingBulletinRequests
_pendingTransitionTransactions
_focusedAppDisplayLayoutElement
_appTransitionHelper
_crdInstructionWindowIdentifier
_crdInstructionWindowGroup
_siriViewController
_siriSnapshotView
_pendingAirPlayController
_screenSaverState
_recoveryIterator
_viewController
_timeoutInSeconds
_runCompletionsForContext:
sleepDisplayWithReply:
handleRegionChangeWithNewCountryCode:reply:
presentDisplayAssistantWithRequest:reply:
forgetDisplaysForDisplayAssistant
resetPoorCableWarnings
removeCableCheckHistory
displayAssistantDidStartForKind:
displayAssistantDidCompleteForKind:fromUserInteraction:
fetchCurrentDisplayStateWithReply:
enableModeSwitchingForDynamicRange:
enableModeSwitchingForFrameRate:
displayAssistantDidCompleteForKind:
initWithDynamicRange:SDRColorMapping:frameRate:
frameRate
dynamicRange
SDRColorMapping
predicatWithDynamicRange:frameRate:
predicatesWithPreferredSDRColorMapping:frameRate:
roundedFrameRate
_dynamicRange
_frameRate
_SDRColorMapping
_considerDisplayModeSwitchFinished:
addObserver:selector:name:object:suspensionBehavior:
shouldModeSwitchForDynamicRange
resolution
shouldModeSwitchForFrameRate
_shouldModeSwitchForBundleIdentifier:
preferredDisplayModeForBundleIdentifier:
shouldAllowModeSwitchForDynamicRange
shouldAllowModeSwitchForDynamicFrameRate
userSelectedDisplayMode
_bestDisplayModeForDynamicRange:frameRate:
_updateDisplayManagerWithDisplayMode:
_bestSDRDisplayMode
readUserSelectedDisplayMode
_fallbackPredicatesForDynamicRange:frameRates:
arrayWithArray:
_displayModePredicatesForDynamicRange:frameRate:
_findDisplayModeFromPredicate:
canHandleHighBandwidthModes
isVirtual
isAboveBandwidthThreshold
findFirstMode:
_isModeSwitchInProgress
matchContentRequestedModes
_notifyDisplayModeChange:
modeSwitchDuration
_notifyDisplayModeChangeDidFinish
performSelector:withObject:afterDelay:
sortedDisplayModes
cancelPreviousPerformRequestsWithTarget:selector:object:
lastObject
addNativeAndPerformanceObservers
removeNativeAndPerformanceObservers
reportingValueForMatchDynamicRange
reportingValueForMatchFrameRate
usesDolbyLowLatency
fetchAvailableRoutesWithCompletionHandler:
selectedRoute
routeDeviceType
volumeControl
_presentVolumeBulletinForRoute:
stepSize
volume
startObserving
stopObserving
routingController
setRoutingController:
_observing
_routingController
swipeUpProgress
setSwipeUpProgress:
swipeUpItem
setSwipeUpItem:
_swipeUpProgress
_swipeUpItem
_init
reloadHomeConfiguration
_handleHomeAccessoryUpdate
_handleAirPlaySettingsDidChange
localAccessory
home
minimumMediaUserPrivilege
isMediaPeerToPeerEnabled
accessType
setAccessType:
mediaPassword
securityType
setSecurityType:
setPassword:
_setHkAccessControlEnabled:
updateMediaPeerToPeerEnabled:completionHandler:
updateMinimumMediaUserPrivilege:completionHandler:
updateMediaPassword:completionHandler:
_hmHome
_updatingAirPlaySettings
_presentWhatsNewDialog
checkTimeInterval
_scheduleWhatsNewCheckTaskWithInterval:
focusedProcessIsDefaultKioskApp
unregisterBackgroundTask:
initWithType:interval:delay:async:
_isHeadBoardAppFocused
setPerformBlock:
registerBackgroundTask:
shouldShowWhatsNewWithOptions:reply:dismissHandler:
startWhatsNewMonitoring
setCheckTimeInterval:
_monitoringStarted
_shouldRetryShowingWhatsNew
_presentingWhatsNew
_whatsNewCheckTask
_checkTimeInterval
_currentCheckTimeInterval
_whatsNewNotifyToken
_presentedWNViewController
layoutAttributesForCellWithIndexPath:
setContentOffset:
setContentScale:
setSnapshotOffset:
setCornerRadius:
setBlurRect:
setBlurRadius:
setShadowAlpha:
setTextAlpha:
setHeaderHidden:
setSize:
setCenter:
setTransform3D:
setZIndex:
_attributesForIndexPath:scrollProgress:swipeOffset:swipeIndex:allowMask:
screenWidth
screenHeight
_screenWidth
_screenHeight
accessibilityElement
bundleId
semanticContext
tvSchemaCommandsKeyCompactIRI
tvs_arrayForKey:
tvs_stringForKey:
initWithAccessibilityElement:
setSemanticContext:
commandScreenActionItems
_visibleScreenActionItemsWithSemanticContext
_focusableScreenActionItems
_filteredScreenActionItems:applicationScreenActionItems:screenActionItemsWithSemanticContext:
addIndex:
removeObjectsAtIndexes:
currentScreenActionItems
elementsWithSemanticContext
siriContentElementsWithSemanticContext
_screenActionItemsFromAccessibilityElements:
nativeFocusableElements
siriContentNativeFocusableElements
tvSchemaTypeSoftwareApplicationNavigationCommandCompactIRI
screenActionItemForIdentifier:
setAccessibilityElement:
setCommandScreenActionItems:
_accessibilityElement
_semanticContext
_commandScreenActionItems
_loadFromProxy:
objectForInfoDictionaryKey:ofClass:
isAppleApplication
longPressPlayPauseSystemGestureEverywhere
isSystemApplication
isProvisioningProfileValidated
hasPrefix:
receivesLongPressPlayPause
supportsSharedQueue
supportsActiveRouteNowPlaying
nowPlayingViewControllerClassName
_receivesLongPressPlayPause
_supportsSharedQueue
_supportsActiveRouteNowPlaying
_nowPlayingViewControllerClassName
_isEqualToSiriScreenItem:
_defaultSemanticContext
_defaultIdentifier
_firstAvailableChooseActionName
scrollToVisible
isNativeFocused
setNativeFocus
elementForAttribute:
performAction:
setValue:
performAction:withValue:
label
buttonSemanticContextWithName:
linkedDataDictionary
stringByReplacingOccurrencesOfString:withString:
traits
frame
uiElement
stringWithAXAttribute:
peformActionWithName:parameters:
_sharedInstance
_configureAggregateDataReporting
_configureMemoryPressureReporting
_configureThermalPressureReporting
_configureEDIDReporting
_configureSleepWakeReporting
_reportDataNow
_reportNANDStatistics
serviceLog
sharedAggregateDictionary
incrementKey:
keyTimingStarts
keyTimingTotals
_collectLogPaths
initWithBlock:
setName:
setQualityOfService:
effectiveBoolValueForSetting:
_schedulePeriodicTrigger
_sendDiagnosticLogs:
_reportRecoveryActions
allValues
valueForKeyPath:
_pushDiagnosticLogsAtPaths:
_collectAVLog
_collectMediaserverLogPaths
_collectPlaybackLogPaths
_collectWiFiLogPaths
_collectAirPlayLogPaths
_collectThermalLogPaths
_collectBluetoothLogPaths
_collectConfigLogs
emitDiagnosticAVLog
contentsOfDirectoryAtPath:error:
copyItemAtPath:toPath:error:
emitPlaybackLogs
enumeratorAtPath:
nextObject
emitThermalLogs
preferencesWithDomain:
emitConfigLogs
dictionaryWithObject:forKey:
_recordEDID
toReportEDIDData
inverseUniqueID
synchronize
getPersistentIdentifierForDNU:
writeToFile:atomically:
_showPushedIndicatorForCount:
DisplayModeBinding
_handleDisplayModeDidChange
pushValue:forKey:
EDIDLoggingTimePeriodInSeconds
lastSentEDIDTimestamp
timeIntervalSinceDate:
setLastSentEDIDTimestamp:
_sendEDIDURLRequest:
_reportingURLForTopic:
valueForKey:
_sendToURL:withSubtopic:andParameters:
gatherUsageReportingDataWithCompletion:
figaroLoggingURL
productType
systemBuildVersion
dictionaryWithDictionary:
addEntriesFromDictionary:
objectEnumerator
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
componentsJoinedByString:
requestWithURL:
setTimeoutInterval:
setValue:forHTTPHeaderField:
systemVersion
ephemeralSessionConfiguration
setRequestCachePolicy:
sessionWithConfiguration:
dataTaskWithRequest:completionHandler:
resume
pairedDevices
setValue:forScalarKey:
_quantizedTimeForKey:
unsignedIntegerValue
_integer:quantizedBy:
reportedActions
HDR10ChromaSubsampling
SDRChromaSubsampling
startService
reportNow
incrementEventCountForGameController
_isDiagnosticsSubmissionAllowed
tvs_bindDisplayModeBindingToObject:withKeyPath:options:
_sendEDIDLogs
_sendCoreControlUsage
_reportBluetoothData
_threadReportNANDStatistics
_reportCurrentPersistentDisplayMode
seenEDIDs
setSeenEDIDs:
setToReportEDIDData:
setKeyTimingStarts:
setKeyTimingTotals:
NANDReportingThread
setNANDReportingThread:
_seenEDIDs
_toReportEDIDData
_lastSentEDIDTimestamp
_keyTimingStarts
_keyTimingTotals
_NANDReportingThread
stopObservingLanguageChanges
isObserving
setObserving:
subscribeToLanguageChangeNotification
subscribeToLocaleChangeNotification
unsubscribeFromLanguageChangeNotification
unsubscribeFromLocaleChangeNotification
observer:didObserveLanguageChange:localeChange:source:
startObservingLanguageChanges
languageDidChangeWithSource:
localeDidChange
isFreshInstall
isBuildUpdate
compareFromOSVersionWithOSVersion:
toBuild
compareFromBuildVersionWithBuildVersion:
defaultWorkspace
_invalidateSnapshotsWithMask:forBundleIdentifier:
enumerateApplicationsOfType:block:
setMaxConcurrentOperationCount:
_ingestDefaultLaunchImageForBundleIdentifier:
installedApplicationWithBundleIdentifier:
initWithApplicationInfo:
predicate
setReferenceSize:
setContentTypeMask:
tvsui_preferredUserInterfaceStyle
setUserInterfaceStyleMask:
fetchRequest
setPredicate:
_sortDescriptorsForImageScale:
setSortDescriptors:
snapshotsForGroupID:fetchRequest:
variantWithIdentifier:
imageForInterfaceOrientation:
purgeImage
pb_isTemplateImage
imageWithRenderingMode:
scale
contextWithFBSContext:
createSnapshotWithContext:
_updateSnapshot:withContext:forProcessWithIdentifier:completion:
_wallpaperPathForVariant:userInterfaceStyle:
fileExistsAtPath:isDirectory:
_wallpaperImageForVariant:userInterfaceStyle:
_saveWallpaperForSnapshotImage:synchronously:completion:
_cancelWallpaperOperations
stringForKey:
initWithContentsOfFile:
initWithSize:scale:effects:
_blurredImageWithImage:blurStyle:tintColor:filter:customBlurRadius:
filterWithType:
initWithGenerationBlock:
_userInterfaceStyleForFocusedProcess
initWithVariant:userInterfaceStyle:imageProvider:
setSaveCompletion:
_notifyWallpaperChange
initWithObjects:
_processImageOperationsSync:
_processImageOperation:
_cancelSnapshotOperationsWithGroupID:
deleteSnapshotsForGroupID:matchingPredicate:
supportsUHDAndHDR
setImageScale:
snapshotsForGroupID:matchingPredicate:
createSnapshotWithGroupID:
setContentType:
currentDevice
setRequiredOSVersion:
tvs_isLegacyApp
tvsui_applicationLaunchImageIsTemplate
pb_setIsTemplateImage:
initWithBundleIdentifier:scaleFactor:
initWithSnapshot:dataProvider:manifest:
sceneID
name
pb_createSnapshotForSceneSnapshot:withName:
setContentFrame:
pb_setUserInterfaceStyle:
initWithSceneSnapshot:scaleFactor:
deleteSnapshots:
createVariantForSnapshot:withIdentifier:
pb_userInterfaceStyle
initWithSnapshotPredicate:sceneID:bundleIdentifier:scaleFactor:
setGenerationCompletion:
compare:
sortDescriptorWithKey:ascending:comparator:
_processPendingOperations
snapshot
groupID
addOperations:waitUntilFinished:
operations
shouldPerformASAP
addOperation:
migrateWithContext:error:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
ingestLaunchImages
loadSnapshotImageWithRequest:
setupWallpaper
cancelSnapshotsForSceneID:
accessQueue
imageProcessingQueue
pendingImageOperations
_accessQueue
_imageProcessingQueue
_pendingImageOperations
targetUserInterfaceStyle
_targetUserInterfaceStyle
_shouldPerformASAP
isCancelled
main
generationBlock
_generationBlock
traitCollection
CGImage
numberWithUnsignedInt:
stringByDeletingLastPathComponent
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
imageProvider
saveCompletion
_imageProvider
_saveCompletion
generationCompletion
hasCachedImage
generateImageForSnapshot:dataProvider:writeToFile:didGenerateImage:didSaveImage:
snapshotManifest
provider
_snapshotManifest
_snapshot
_provider
_generationCompletion
contentType
variantID
validateRestrictionForContentTypesWithRequest:
validateRestrictionForSettingWithRequest:
cancelRequestWithToken:
_getDefaultServiceRequestWithResultHandler:
checkRestrictionSettingWithRequest:
authorizeRestrictionsWithRequest:
validatePINWithRequest:
UUID
validateRestrictionForContentType:withRating:allowInteraction:requestToken:withCompletion:
validateRestrictionForSetting:allowInteraction:requestToken:withCompletion:
cancelRestrictionAuthorization:
restrictionsEnabledWithResult:
authorizeRestrictionsWithResult:
validatePIN:withResult:
initWithKeyOptions:valueOptions:capacity:
viewControllersByBulletin
_bulletinServicesByViewController
dismissViewServiceWithReason:completion:
_bulletinServiceForViewController:
_prepareToPresentViewController:
_bulletinForViewController:
message
_handleApplicationDismissalForViewController:withReason:
viewControllerClassName
serviceIdentifier
_reserveTableSpaceForBulletin:error:
_bulletinForRequestID:
_setBulletin:forRequestID:
_setBulletinService:forViewController:
_setViewController:forBulletin:
_completeWithBulletin:success:error:completion:
setClientPresentationCompletion:
bulletinNotificationAutoDismissalTimeInSeconds
_viewControllerForBulletin:
_bulletinIsPending:
_updateRequestForBulletin:withBulletin:
updateViewServiceWithBulletin:
pendingBulletinsByRequestID
removeObjectsForKeys:
setDelegateProxy:
delegateProxy
prepareViewServiceWithBulletin:
callStackSymbols
applicationShouldActivateBulletinViewController:forAction:
applicationActivateBulletinViewController:
applicationDismissBulletinViewController:
applicationTerminateBulletinViewController:
xpcUpdateBulletin:withMessage:withCompletion:
_viewControllersByBulletin
_pendingBulletinsByRequestID
_delegateProxy
invalidateLayout
contentOffsetAdjustmentForLastItem
collectionView
numberOfItemsInSection:
targetContentOffsetForProposedContentOffset:withScrollingVelocity:
contentInset
contentOffset
prepareLayout
indexPathForItem:inSection:
setMaskRect:
setContentHidden:
layoutAttributesClass
setOriginIndexPath:
collectionViewContentSize
shouldInvalidateLayoutForBoundsChange:
targetContentOffsetForProposedContentOffset:
layoutAttributesForElementsInRect:
layoutAttributesForItemAtIndexPath:
originIndexPath
computedAttributes
setComputedAttributes:
focusableCellSize
_originIndexPath
_computedAttributes
_focusableCellSize
sizeToFit
layoutSubviews
setNeedsLayout
sizeThatFits:
setTitleOpacity:
titleOpacity
_title
_titleOpacity
_maxAllowableDeltaBetweenPresses
didRecognizeTripleTap
handleTVTapEventAsThirdTapEventInAppSwitcher
didRecognizeDoubleTap
handleTVDoubleTapEvent
registerTVPressDownTimestamp:
handleTVTapEvent:
_lastSingleTVTapTimestamp
_lastDoubleTVTapDownTimestamp
_lastTripleTVTapDownTimestamp
_decrementOcclusionCounter
_updateOccludingState
_updateLayoutElements
_incrementOcclusionCounter
shouldOcclude
setOccluding:
displayLayoutElement
setInterfaceOrientation:
setBackgrounded:
mainConfiguration
effectiveUserInterfaceStyle
setUserInterfaceStyle:
fullOcclusion
setOcclusions:
workspace
transitionContext
createSceneWithIdentifier:parameters:clientProvider:transitionContext:
specification
parametersForSpecification:
setSettings:
setClientSettings:
createSceneWithIdentifier:settings:initialClientSettings:clientProvider:transitionContext:
destroyScene:withTransitionContext:
handleVolumeUpLongPressEvent:
setMinimumPressDuration:
handleVolumeDownLongPressEvent:
setEnabled:
setNumberOfTapsRequired:
_setAllowableTouchTimeSeparation:
handleTVLongPressEvent:
handleExposeAllTapEvent
handleMicrophoneLongPressEvent:
microphoneLongPressDelayInSeconds
handleMicrophoneTapEvent:
handleMicrophoneButtonDownEvent:
handleMenuLongPressEvent:
menuLongPressDelayInSeconds
handleMenuSingleTapEvent
handleACHomeSingleTapEvent
darkModeShortcutEnabled
handleQuadrupleMenuTapEvent
removeGestureRecognizer:
_newTripleTapGestureRecognizerWithPressTypes:
handlePlayPauseLongPressEvent:
handlePlayPauseTapEvent
handlePlayTapEvent
handlePauseTapEvent
handleStopTapEvent
handleRewindTapEvent
handleFastForwardTapEvent
handleNextTrackTapEvent
handlePreviousTrackTapEvent
handleSkipForwardsRepeatingPressEvent:
handleSkipBackwardsRepeatingPressEvent:
handleRewindLongPressEvent:
handleFastForwardLongPressEvent:
handleDirectionalTapEvent:
handleMenuTripleTapEvent
allowedPressTypes
activeKeyboard
isDictationEnabled
isOnScreen
setTripleTapMenuGestureRecognizersEnabled:
isOccluding
setDisplayLayoutElement:
_microphoneLongPressRecognizer
_microphoneTapRecognizer
_microphoneTapDownRecognizer
_tvLongPressRecognizer
_tvTapRecognizer
_tvDoubleTapRecognizer
_rapidVolumeUpRecognizer
_rapidVolumeDownRecognizer
_longPressMenuRecognizer
_tapMenuRecognizer
_tapACHomeRecognizer
_tripleTapMenuRecognizer
_quadrupleTapMenuRecognizer
_tapExposeAllRecognizer
_playPauseLongPressRecognizer
_rewindLongPressRecognizer
_fastForwardLongPressRecognizer
_playPauseTapRecognizer
_playTapRecognizer
_pauseTapRecognizer
_stopTapRecognizer
_rewindTapRecognizer
_fastForwardTapRecognizer
_nextTrackTapRecognizer
_previousTrackTapRecognizer
_skipForwardsRepeatingPressRecognizer
_skipBackwardsRepeatingPressRecognizer
_directionalRecognizer
_shouldOcclude
_occluding
_name
_displayLayoutElement
_setSILState_On:
_setSILState_Off:
_startKeyboardHIDClient
dictionaryWithCapacity:
_handleWillSleepNotification:
_handleWillWakeNotification:
_buttonEvent:containsUsage:
routerWithDestination:
descriptorWithPage:usage:
addHIDEventDescriptors:
descriptorWithEventType:
defaultFocusedAppEventRouter
defaultSystemAppEventRouter
hidEventDescriptors
setEventRouters:
_processBatterySystemEvent:
_processConsumerEvent:
_processGenericDesktopEvent:
handlePowerToggleTapEvent
handlePowerOnTapEvent
handlePowerOffTapEvent
_setSILForButtonDown:
featureForType:
shouldAssertStandbyOnSleep
shouldAdjustDisplayStateOnWake
_processHIDEvent:
_processAppleVendorIRRemoteEvent:
_processAppleVendorDebugEvent:
_hidSystemClient
_btKeyboardHIDSystemClient
_normalEventRouters
_deviceIsSleeping
isKioskAppAutoLaunchEnabled
makeKeyAndVisible
setIdleModeActive:animated:
updateBackgroundWindowAndMakeVisible
wallpaperViewController
setWallpaperViewController:
_wallpaperViewController
_delegateDidDismissViewController:completion:
_lastViewController
dismissLastViewControllerBlock
viewControllers
_dismissLastViewControllerBlock
appSwitcherAllowed
pbsAvailableAppProxiesFromAppProxies:filteredWithExcludingTags:includeUnavailable:includePlaceholders:
_appDepotAppStateDidChangeNotification:
_populateItems
itemType
isPendingDeletion
items
kioskItem
objectAtIndexedSubscript:
initWithType:proxy:appState:manager:live:
setPendingInsertion:
indexOfObject:
_recalculateUpdates
manager:didReceiveLaunchRequestForItem:completion:
setPendingDeletion:
killApplication:removeFromRecents:
_updateItemsWithApplicationState
_applicationIdentifierToAppProxyDictionaryFromProxies:
_updateItemsWithInstalledProxyMap:
_updateItemsWithUninstalledProxyMap:
_updateItemsInstallProgressWithProxyMap:
appState
setApplicationIdentifierToAppState:
itemsIncludingUpdates
applicationIdentifierToAppState
isEnabled
setAppState:
_updateWithRemovedItems:
pbsAvailableAppProxiesFromAppProxies:filteredWithExcludingTags:
setApplicationProxy:
_updateForProgressChange
applicationIdentifier
isPendingInsertion
tvs_objectsPassingTest:
enumerateObjectsWithOptions:usingBlock:
managerDidEnqueuePendingUpdates:
initWithFocusedProcessBundleID:
canSwitchToItem:
canKillItem:
handleActivationRequestForItem:completion:
handleLaunchRequestForItemWithIdentifier:completion:
handleKillRequestForItem:
applyPendingUpdates
focusedProcessItem
pendingUpdates
focusedProcessBundleID
_items
_kioskItem
_focusedProcessItem
_pendingUpdates
_focusedProcessBundleID
_itemsIncludingUpdates
_applicationIdentifierToAppState
reallyPerformOSSoftwareUpdateCheck
reallyPerformMDMOSSoftwareUpdateCheck
checkForOSUpdatesWithOptions:response:
isOSSoftwareUpdateChecking:
startDownload:
cancelDownload:
purgeDownload:
currentDownload:
isOSSoftwareUpdateDownloading:
isUpdate:readyForInstallation:
installUpdate:withOptions:withResult:
reallyPerformOSSoftwareRestore
isOSSoftwareUpdateRunning:
cancelOSSoftwareUpdate
_obliterateDataPreservingPaths:withCompletion:
osUpdateServiceDidStartCheckWithData:
osUpdateServiceDidFinishCheckWithData:
osUpdateServiceDidStartDownloadWithData:
osUpdateServiceDidUpdateDownloadProgressWithData:
osUpdateServiceDidFinishDownloadWithData:
osUpdateServiceDidStartRedownloadWithData:
osUpdateServiceDidStartApplyWithData:
osUpdateServiceDidUpdateApplyProgressWithData:
osUpdateServiceDidEncounterSlowUpdateWithData:
osUpdateServiceDidFinishApplyWithData:
setManagerClientDelegate:
isCheckingForUpdates:
isDownloading:
isUpdateRunningWithCompletion:
checkForUpdate
checkForUpdateViaMDM
checkForUpdatesWithOptions:response:
cancelUpdate
restore
obliterateDataPreservingPaths:withCompletion:
didStartCheckWithData:
didFinishCheckWithData:
didStartDownloadWithData:
didUpdateDownloadProgressWithData:
didFinishDownloadWithData:
didStartRedownloadWithData:
didStartApplyWithData:
didUpdateApplyProgressWithData:
didEncounterSlowUpdateWithData:
didFinishApplyWithData:
_managerClientDelegate
_refreshCachedAppWhitelistOptions
tvsui_initializeFlatIconCache
tvsui_disableLSWorkspaceInstallHandling
applicationsWithAvailableStores
initWithApplicationIdentifer:
setCacheDeletingCount:
kioskAppBundleIdentifier
initWithQueue:
setObserverFeed:
_appDepotQueue
queueWithDispatchQueue:
initWithCalloutQueue:
_loadInitialAppState
internalAppState
initWithDictionary:copyItems:
internalProvisionedAppIdentifiers
internalKioskAppConfiguration
_appStateForIdentifier:
_addAppStateForIdentifier:
setRecentlyUpdated:
tvsui_flushApplicationCachedImages
tvsui_preheatSmallApplicationIcon
flush
setNeedsReload
_removeAppStateForIdentifier:
badgeValueWithValue:
setBadgeValue:
badgeValue
badgeNumber
badgeString
initWithMutableAppState:
setIconName:
_setNeedsNotifyAppStateDidChange
_checkApplicationIsSystemAppRequiringProvisioning:
setDisabledReasons:
deleteState
enumerateBundlesOfType:block:
setWithArray:
minusSet:
_updateAppInfo
enforceProvisioningOnSystemAppsEnabled
disabledApplicationIdentifiers
restrictedAppBundleIDs
effectiveWhitelistedAppBundleIDs
applicationIdentifiersByBundleIdentifierMapping
_reversedDictionaryWithDictionary:
orderedSetWithCapacity:
provisionedApplicationIdentifiers
setWithCapacity:
applicationProxyForItemID:
isPlaceholder
_systemAppBundleIdentifiers
isInSingleAppMode
_whitelistBlacklistExemptBundleIdentifiers
itemID
isAlwaysAvailable
pbs_enabled
_simulatorDisabledBundleIdentifiers
_checkApplicationIsRestricted:
_provisioningExemptBundleIdentifiers
disabledReasons
unionSet:
notifySharedAppStateDidChange
_notifyAppStateDidChange
sectionID
pushSettings
setBadgeEnabled:
_updateBadgeEnabledWithInfos:
getSectionInfoWithCompletion:
pbsExclusionTags
pbsAppTags
intersectsSet:
effectiveWhitelistedAppsAndOptions
isSettingLockedDownByRestrictions:
effectiveValueForSetting:
_isAppRestrictionProfileInstalled
ratingRank
parametersForValueSetting:
effectiveParametersForValueSetting:
setupAppDepot
applicationService:setBadgeValue:forBundleIdentifier:
applicationService:getBadgeValueForBundleIdentifier:withCompletion:
applicationService:deleteAllSnapshotsForBundleIdentifier:
applicationService:suspendApplicationWithBundleIdentifier:
dataSourceForApplicationBundleIdentifier:
observer:addBulletin:forFeed:playLightsAndSirens:withReply:
observer:addBulletin:forFeed:
observer:modifyBulletin:forFeed:
observer:modifyBulletin:
observer:removeBulletin:forFeed:
observer:removeBulletin:
observer:updateSectionInfo:
observer:removeSection:
observer:noteSectionParametersChanged:forSectionID:
observer:purgeReferencesToBulletinID:
observer:noteInvalidatedBulletinIDs:
observer:noteServerConnectionStateChanged:
observer:noteServerReceivedResponseForBulletin:
observer:prepareAttachment:beforeDeliveringBulletin:withCompletionHandler:
observerShouldFetchAttachmentImageBeforeBulletinDelivery:
observerShouldFetchAttachmentSizeBeforeBulletinDelivery:
observer:thumbnailSizeConstraintsForAttachment:bulletin:
observer:thumbnailSizeConstraintsForAttachmentType:
observer:processData:forAttachment:bulletin:completionHandler:
observer:composedImageFromThumbnailData:forAttachment:bulletin:completionHandler:
observer:composedImageSizeForAttachment:bulletin:thumbnailSize:
observer:composedAttachmentImageForType:thumbnailData:key:
observer:composedAttachmentSizeForType:thumbnailWidth:height:key:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
dataStoreMonitor:didUpdateApplication:forKey:
dataStoreMonitor:didInvalidateApplication:
appStateForAppIdentifier:
provisionedAppIdentifiers
addAppStateForApplicationProxies:
removeAppStateForApplicationProxies:
setIconName:forBundleIdentifier:
setCacheDeletingForBundleIdentifier:
unsetCacheDeletingForBundleIdentifier:
setInternalAppState:
setInternalProvisionedAppIdentifiers:
appWhitelistOptions
setInternalKioskAppConfiguration:
setEnforceProvisioningOnSystemAppsEnabled:
bbObserver
setBbObserver:
monitor
setMonitor:
_needsReload
_needsNotifyAppStateDidChange
_uiAppStateService
_enforceProvisioningOnSystemAppsEnabled
_internalAppState
_internalProvisionedAppIdentifiers
_appWhitelistOptions
_internalKioskAppConfiguration
_bbObserver
_monitor
usesBackgroundNetwork
setUsesBackgroundNetwork:
nextWakeDate
setNextWakeDate:
realAppState
_realAppState
bulletinServiceBeginPresentationWithBulletin:
bulletinServiceUpdateWithBulletin:
bulletinServiceEndPresentationWithReason:completion:
bulletinServiceWillPresentBulletin:
_callClientCompletionWithSuccess:
viewDidAppear:
clientPresentationCompletion
_clientPresentationCompletion
contentScale
snapshotOffset
cornerRadius
blurRadius
blurRect
maskRect
shadowAlpha
shadowBlurRadius
setShadowBlurRadius:
textAlpha
isHeaderHidden
isContentHidden
valueWithCGRect:
_headerHidden
_contentHidden
_contentOffset
_contentScale
_cornerRadius
_blurRadius
_shadowAlpha
_shadowBlurRadius
_textAlpha
_snapshotOffset
_blurRect
_maskRect
allocWithZone:
_singleton
_startServices
_notifyDefaultKioskAppHandleHomeButtonWithCompletion:
_notifyDefaultKioskAppPurgeTopShelfContentForApplicationIdentifiers:
_notifyPrepareDefaultKioskAppTransitionForType:animationDuration:delay:completion:
_notifyStartDefaultKioskAppTransitionWithAnimationFence:completion:
_notifyStartDefaultKioskAppTransitionForType:animationDuration:animationFence:delay:
_prepareForDefaultKioskAppTransitionWithCompletion:
_activeConnections
setWithSet:
defaultKioskConnection
defaultKioskAppHandleHomeButtonWithCompletion:
initWithBundleIdentifier:flags:reason:name:withHandler:
defaultKioskAppPurgeTopShelfContentForApplicationIdentifiers:
prepareDefaultKioskAppTransitionForType:animationDuration:delay:completion:
startDefaultKioskAppTransitionWithAnimationFence:completion:
startDefaultKioskAppTransitionForType:animationDuration:animationFence:delay:
prepareForDefaultKioskAppTransitionWithCompletion:
initWithMachServiceName:
initWithConnection:
clientBundleIdentifier
setDefaultKioskConnection:
_handleInvalidationForConnection:
setInvalidationHandler:
notifyDefaultKioskAppHandleHomeButtonWithCompletion:
notifyDefaultKioskAppPurgeTopShelfContentForApplicationIdentifiers:
activeConnections
listener:shouldAcceptNewConnection:
_acceptSerialQueue
_serviceListener
_processAssertion
_defaultKioskConnection
startUserNotificationCenter
initializeStoreErrorHandler
registeredOperationClasses
setRegisteredOperationClasses:
setFailureTypes:
startErrorHandler
isConnected
setConnected:
startWithCompletionBlock:
stopWithCompletionBlock:
reload
valueForProperty:
_handleCVVCheck:
_handle2SVCheck:
_handleCarMCheck:
performDefaultHandling
setCustomerTitle:
setCustomerMessage:
setVerifyURL:
success
retry
setSerializedURLs:
setFailureClientInfo:
initializeNotificationCenterWithDelegate:
errorHandlerDidDisconnect:
errorHandler:handleSession:
cfUserNotificationForToken:
_didHandleCFUserNotification:
registerOperationClass:forFailureType:
stopErrorHandler
errorHandler
setErrorHandler:
_connected
_errorHandler
_registeredOperationClasses
intValue
updateWithMessage:requestFlags:
initWithMessage:replyPort:requestFlags:
authenticateAuditToken:forEntitlement:error:
bundleID
_updateBackgroundView
setAutoresizingMask:
traitCollectionDidChange:
snapshotContext
snapshotViewWithContext:
_updateSceneHostView
performWithoutAnimation:
didMoveToSuperview
superview
hostViewForRequester:enableAndOrderFront:
disableHosting
requester
scene
hasBackground
useSnapshot
sceneHostView
snapshotView
backgroundView
_hasBackground
_useSnapshot
_bundleID
_requester
_sceneHostView
_snapshotView
_backgroundView
_migrateSystemAppearanceSettings
setDesiredAccuracy:
_videoPlayerNowPlayingStateDidChange:
locationServicesEnabled
authorizationStatus
_updateSystemAppPermissionsToMatchTimeZone
systemAppearance
setSystemAppearance:
isLocationAvailable
_updateUserInterfaceStyleForScenesWithUserInterfaceStyle:
calculateAstronomicalTimeForLocation:time:altitudeInDegrees:
isDayLightForTime:
_userInterfaceStyleForSystemAppearance:
tvsui_supportedUserInterfaceStyles
stopUpdatingLocation
startUpdatingLocation
_updateLocationForDaylight:
updateAutomaticSystemAppearanceIfNeeded
coordinate
isSystemAppearanceSelected
integerForKey:defaultValue:
_systemAppearanceForUserInterfaceStyle:
authorizationStatusForBundleIdentifier:
setAuthorizationStatusByType:forBundleIdentifier:
isDaylight
_defaultTransitionContext
settingsWithDuration:
setAnimationSettings:
setAnimationFence:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
setup
reportingValueForCurrentSystemAppearance
effectiveUserInterfaceStyleForBundleIdentifier:
almanac
setAlmanac:
locationForDaylight
setLocationForDaylight:
locationManager
setLocationManager:
_almanac
_locationManager
_locationForDaylight
defaultContextManager
addContextProvider:
removeContextProvider:
currentScreenActionApplication
list
setAppId:
tvSchemaViewIdentifierKeyCompactIRI
setViewId:
tvSchemaMainEntityKeyCompactIRI
tvs_dictionaryForKey:
_JSONSerializedSemanticContext:
setMainEntitySemanticData:
_screenActionInfoForScreenItem:
setDomainObjects:
info
setElementId:
absoluteIRIForProperty:linkedDataContext:
setType:
setSemanticId:
setSemanticData:
isValidJSONObject:
dataWithJSONObject:options:error:
initWithData:encoding:
allowContextProvider:
getCurrentContext
setResponse:
response
setError:
setSuccess:
defaultStore
activeAccount
initWithURLResponse:
actionName
uniqueIdentifier
setAccountIdentifier:
_response
initWithName:handler:
registerMigration:
restrictionsEnabled
resetRestrictions
resetRestrictionSettings
initWithHandlingClass:
pb_appleTVServicesUserDefaults
isEqualToDictionary:
enumerateKeysAndObjectsUsingBlock:
_saveDisplayMode:forKey:persisted:
_readDisplayModeForKey:persisted:
removeDisplayModeForKey:persisted:
_currentResolutionsPreferencesFromPersistentStore:
mainDisplay
uniqueId
_saveCurrentResolutionsPreferences:toPersistentStore:
enumerateMutableDisplayPreferencesUsingBlock:
defaults
setPromotedToReal:
encodedString
encodedPromotedDisplayModes
allObjects
setEncodedPromotedDisplayModes:
componentsSeparatedByString:
initWithArray:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClass:fromData:error:
setDouble:forKey:
doubleForKey:
readCableAlertPresentationTimes
readCableCheckCumulativeTime
currentEDIDHash
initWithDictionary:
memoryStore
setMemoryStore:
initWithEncodedString:
_debugAlwaysSaveModeEnabled
saveUserSelectedDisplayMode:
removeUserSelectedDisplayMode
saveCurrentDisplayID:
readSeenDisplayIDs
saveCanHandleHighBandwidthModes:
readCanDoHighBandwidth
saveShouldModeSwitchForDynamicRange:
readShouldModeSwitchForDynamicRange
saveShouldModeSwitchForFrameRate:
readShouldModeSwitchForFrameRate
saveUserPreferredRefreshRate:
readUserPreferredRefreshRate
saveDidCompleteDisplayAssistant:
readDidCompleteDisplayAssistant
removeAllCompleteDisplayAssistants
saveNewPromotedDisplayMode:
removePromotedDisplayModes
readEncodedPromotedDisplayModes
saveLastCableErrorInfo:
readLastCableErrorInfo
removeLastCableErrorInfo
saveDetectedPoorCableConnection:
readDetectedPoorCableConnection
saveCableCheckCumulativeTime:
resetCableCheckCumulativeTime
addCableAlertPresentationCurrentTime
removeCableAlertPresentationTimes
_shouldPreferDolbyVisionLowLatency
readCableHistoryWindowOverride
readCableErrorPollingIntervalOverride
readCableScoreOverride
readCableAlertIntervalOverride
failureClientInfo
_copySMSCodeFromUser
_verifySMSCode:error:
customerTitle
customerMessage
_sendNewCodeShowingDialogs:error:
presentCodeEntryAlertWithTitle:message:newCodeLabel:submitLabel:newCodeRequestHandler:completion:
_copySendCodeResponseWithError:
initWithDialogDictionary:
presentFailureAlertWithTitle:message:completion:
_copyVerifyResponseWithCode:error:
setShouldProcessProtocol:
setDataProvider:
guid
dataWithPropertyList:format:options:error:
setCachePolicy:
setURL:
setHTTPBody:
setHTTPMethod:
setShouldSendXTokenHeader:
setRequestProperties:
runSubOperation:returningError:
output
setMachineDataStyle:
setCodeHandler:
setSendNewCodeBlock:
setDefaultTitle:
setDefaultMessage:
addTextFieldWithInitialText:placeholder:keyboardType:
addButtonWithTitle:
alertControllerWithTitle:message:preferredStyle:
actionWithTitle:style:handler:
addAction:
sendNewCodeBlock
enteredValues
codeHandler
textEntry:didSelectButtonAtIndex:
textEntryDidCancel:
textEntry:willPresentTextField:
textEntry:didSubmitTextFieldAtIndex:
_submitIndex
_sendCodeIndex
_codeHandler
_sendNewCodeBlock
_customerTitle
_customerMessage
_failureClientInfo
setSceneID:
_sceneID
setScale:
isOpaque
IOSurface
imageWithCGImage:scale:orientation:
size
preferredFormat
initWithSize:format:
CGContext
drawInRect:
imageWithActions:
fetchImageData:
fetchImage
fallbackSnapshotDataProvider
hasProtectedContent
invalidateImage
cachedImage
scaleFactor
_context
_cachedImage
_scaleFactor
_runSiriBringUpTest:testOptions:
_startLaunchTestNamed:options:
_startResumeTestNamed:options:
runTest:options:
_markUserLaunchInitiationTimeForTest:
activateApplicationForTesting:suspended:completion:
disableKioskRelaunchForPPT
_isAppExecutableRunning:
_retryLaunchTestWithOptions:
enableKioskRelaunchForPPT
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
_activateApplication:suspended:forTest:
_setTestingContext:
bs_boolForKey:
startedTest:
finishedTest:
failedTest:
_loadProgrammingInfoWithError:
_santizeProgrammingInfo:error:
_loadMappingInfoWithError:
_santizeMappingInfo:error:
_computeRequestWithEndpoint:error:
_documentLoaderWithRequest:
requestProperties
loadWithCompletionHandler:
_numberArrayFromStringArray:
initWithURLRequest:
ignoreLocalHTTPCacheEnabled
documentLoaderWithRequestProperties:
setAuthenticationType:
setPostprocessor:
loadProgrammingInfoWithCompletion:
loadIdentifierMappingInfoWithCompletion:
_cancelled
setProcessingAssetRequest:
setProcessingSpaceRequest:
processingSpaceRequest
_queryForAssetPurge
_performMetadataQuery:
results
_purgeableSizeFor:
processingAssetRequest
_purgeAsset:
_finishAssetForAction:options:withCompletion:
_refreshAssetCatalogUsingOptions:withCompletion:
_finishInstalledAssetForUpdate:withCompletion:
setProductVersion:
setProductBuildVersion:
systemName
setProductSystemName:
setReleaseType:
setReleaseDate:
setPublisher:
tvs_numberForKey:
unsignedLongLongValue
setDownloadSize:
setUnarchivedSize:
setMinimumSystemPartitionSize:
setRampEnabled:
setSystemPartitionPadding:
setMsuPrepareSize:
setInstallationSize:
setUpdateType:
_queryForLocalAssetSearch
_postedDateForQuery:
_compareAsset:withAsset:
sortedArrayUsingComparator:
defaultOptions
_queryForAssetDownload
MDMUseDelayPeriod
delayPeriod
dateByAddingTimeInterval:
laterDate:
_isAsset:eligibleForAction:delayingUpdates:
indexesOfObjectsPassingTest:
objectsAtIndexes:
_asset:withReleaseDate:matchesUpdate:
systemReleaseType
initWithType:
returnTypes:
arrayWithObject:
addKeyValueArray:with:
queryMetaDataSync
postedDate
setDateFormat:
dateFromString:
arrayWithObjects:
getResourceValue:forKey:error:
isSupervised
setSupervised:
requestedPMV
setRequestedProductVersion:
setDelayPeriod:
_reportAssetCatalogDownloadWithResult:forAttempt:
startCatalogDownload:options:then:
purgeSync
dateAtWhichDelayedUpdatesExpireWithCompletion:
_linkQuality
initWithDate:cableCheckTime:linkQuality:
decodeObjectOfClass:forKey:
decodeDoubleForKey:
decodeIntForKey:
encodeObject:forKey:
cableCheckTime
encodeDouble:forKey:
linkQuality
encodeInt:forKey:
setDateStyle:
setTimeStyle:
stringFromDate:
currentInfoWithLastCableCheckTime:
supportsSecureCoding
encodeWithCoder:
cableStatus
setLinkQuality:
_date
_cableCheckTime
setBaseCableCheckTimeInterval:
setDetectedPoorCableConnection:
setLastCableErrorInfo:
_resetTimer
_stopBackgroundMonitoring
startMonitoringCable
cableCheckTimer
setCableCheckTimer:
stopMonitoringCable
_processCurrentCableInfo
resetCableInfoHistory
registerModeSwitch
_startBackgroundMonitoringAndIgnoreFirstPoll:
_pollingInterval
_historyWindowInterval
dataUsingEncoding:
propertyListWithData:options:format:error:
setURLs:
URLs
selectedDevice
_copy2SVCodeFromUser
_verify2SVCode:error:
setSelectedDevice:
_copyDeviceFromUser
_sendCodeToSelectedDevice
_displayDeviceListWithCompletionHandler:
sendCodeLocalization
_sendCodeToDevice:error:showDialogs:
_copyDevicesResponseWithError:
initWithTitle:message:
presentDevicesAlertWithTitle:message:deviceList:completion:
setSendCodeLocalization:
_copySendCodeResponseForDevice:error:
_copyVerifyResponseWithCode:fromDevice:error:
setValue:forRequestParameter:
setNeedsAuthentication:
setSendNewCode:
sendNewCode
devices
setDevices:
_sendNewCode
_devices
_URLs
_selectedDevice
_sendCodeLocalization
_updateWallpaperForFocusedProcess
_wallpaperForFocusedProcessWithVariant:
animationFence
_synchronizeDrawingWithFence:
animationSettings
animateWithSettings:actions:completion:
isIdleModeActive
_idleModeActive
_systemControlEnabled
sleepSystemForReason:
systemMenuController
setForPresentation:
setReason:
requestForPresentation:reason:
forPresentation
reason
_forPresentation
_reason
_initializeNowPlayingStateMachine
_updateNowPlayingAppFocused
isSiriViewServicePID:
isAirPlayViewServicePID:
willChangeValueForKey:
didChangeValueForKey:
nowPlayingStateMachine
_nowPlayingDismissedRemotely
_nowPlayingViewControllerWithOptions:completion:
pendingNowPlayingRequests
setNowPlayingViewController:
setSystemNowPlayingActive:
nowPlayingViewController
_getNowPlayingViewControllerClassName:serviceIdentifier:preferredBundleID:
applicationInfo
nowPlayingAppFocused
applicationProcessForPID:
systemServiceConnectionForProcessIdentifier:
sendMessagePresentNowPlayingUI
activateNowPlayingForReason:options:
_launchNowPlayingApp
_sendFocusedAppMessagePresentNowPlayingUI
isSystemNowPlayingActive
_nowPlayingAppFocused
_systemNowPlayingActive
_pendingNowPlayingRequests
_nowPlayingStateMachine
_nowPlayingViewController
setVendorName:
setBundleID:
setBuyParameters:
setBagKey:
initWithPurchases:
initWithOptions:
error
persistentID
status
installAppWithMetadata:
tvsui_applicationLaunchImageName
URLByAppendingPathComponent:
initWithURL:idiom:error:
traitCollectionWithDisplayScale:
traitCollectionWithUserInterfaceIdiom:
traitCollectionWithTraitsFromCollections:
imageNamed:withTrait:
setPreferredRange:
_flatImageWithColor:
imageNotFound
_imageNotFound
_reportLatestIssueDataWithRemainingAttempts:
reportIssueDataAtPath:
_latestSysdiagnoseFilePath
pb_diagnosticsUploadURLString
_uploadSysdiagnoseAtPath:toURL:deleteAfterUpload:
lastPathComponent
openSensitiveURL:withOptions:error:
destinationOfSymbolicLinkAtPath:error:
distantPast
fileType
skipDescendants
fileCreationDate
initWithURL:cachePolicy:timeoutInterval:
defaultSessionConfiguration
statusCode
removeItemAtURL:error:
uploadTaskWithRequest:fromFile:completionHandler:
_createButtonsWithTitles:
_didSelectButton:
setButtons:
buttons
indexOfButton:
initWithButtonTitles:
buttonWithTitle:
buttonTitles
_buttonTitles
_buttons
_defaultButtonIndex
_instance
_processNewUpdateAttemptToOSBuild:forRestore:triggeredManually:
_noteStage:
HDMIFirmwareVersion
lastRestoreFilePath
dictionaryWithContentsOfFile:
setLastAttemptedUUID:
setLastAttemptedTargetOSBuild:
osSoftwareUpdateMonitoringURLOverride
setBaseURL:
_processAppRestart
setToOSBuild:
setIsRestore:
setTriggeredManually:
setUuid:
isInternalBuild
baseURL
isRestore
toOSBuild
uuid
triggeredManually
fromOSBuild
fromHDMI
setRequestParameters:
_issueRequestForStage:withProperties:retryDelay:
_isCancelStage:
_isFailedStage:
_isFinalStage:
_processUpdateAttemptCompleted
lastAttemptedTargetOSBuild
lastUpdatedFromOSBuildVersion
setFromOSBuild:
setFromHDMI:
setIsInternalBuild:
_isInternalBuild
_isRestore
_triggeredManually
_baseURL
_fromOSBuild
_fromHDMI
_toOSBuild
_uuid
removeObjectIdenticalTo:
contentView
center
setShadowPath:
setShadowOffset:
setShadowRadius:
setAppSwitcherItem:
setShadowOpacity:
setBlurRadius:rect:
iconImage
displayName
isLive
setMasksToBounds:
setSnapshotView:
setFilters:
_updateRasterization
setValue:forKey:
setValue:forKeyPath:
setMaskView:
shouldRasterize
setRasterizationScale:
setShouldRasterize:
applyLayoutAttributes:
snapshotImageView
appSwitcherItem
titleView
itemContentView
containerView
hasBlurFilter
setHasBlurFilter:
maskView
_hasBlurFilter
_snapshotImageView
_appSwitcherItem
_titleView
_itemContentView
_containerView
_maskView
permissionResponseBlock
setPermissionResponseBlock:
_permissionResponseBlock
evaluateWithObject:
userInterfaceStyleMask
_userInterfaceStyleMask
viewControllersByRequest
_callHandlersForRequest:withReason:result:error:
_servicesByViewController
_presentationServiceForViewController:
_getViewServiceInfoForRequest:serviceName:className:
_reserveTableSpaceForRequest:error:
dismissalCompletionByRequest
_requestForRequestID:
_setRequest:forRequestID:
_setPresentationService:forViewController:
_setViewController:forRequest:
_viewControllerForRequest:
_callMessageReply:forRequest:success:result:error:
pendingRequestsByRequestID
_requestIsPending:
_requestForViewController:
presentUIWithRequest:completion:
messageUIWithRequest:message:reply:
dismissUIWithRequest:
messageRepliesByRequest
_viewControllersByRequest
_dismissalCompletionByRequest
_messageRepliesByRequest
_pendingRequestsByRequestID
initWithNumberOfDigits:separatorIndexes:
setEditable:
_cancelTimer
dismissalCompletion
promptLabel
_handleMenuButton:
_handleHomeButton:
_startTimerIfNecessary
_dismissViewControllerWithValue:
setDismissalCompletion:
initWithPresentedViewController:presentingViewController:blurStyle:
setTimeout:
timerSource
setTimerSource:
_timeout
_dismissalCompletion
_timerSource
_synchronizeEnteredValues
textFieldValues
defaultTitle
defaultMessage
_setTitleForRemoteTextEditing:
setPlaceholder:
setEnteredValues:
setAlternateTitle:message:forTextFieldAtIndex:
setTextFieldValues:
setButtonTitles:
_defaultTitle
_defaultMessage
_enteredValues
_textFieldValues
setRequestBuilder:
effectWithStyle:
effectForBlurEffect:
initWithEffect:
_updateImage
requestBuilder
renderingMode
setImageView:
vibrantImageView
setVibrantImageView:
vibrantView
setVibrantView:
setBackgroundView:
_requestBuilder
_vibrantImageView
_vibrantView
initWithMass:stiffness:damping:initialVelocity:
timingCurveType
cubicTimingParameters
springTimingParameters
lastContentOffset
_isFocusDirectionFlippedHorizontally
_updateLastContentOffset
_updateForReducedMotionPeek:
_applyKeyPathsAndRelativeValues:forMotionEffect:
_lastContentOffset
initWithFrame:collectionViewLayout:
setContentInset:
setDataSource:
registerClass:forCellWithReuseIdentifier:
_preferredContentOffsetForIndexPath:
setContentOffset:animated:
upDoubleTapped:
panGestureRecognizerMoved:
initWithKeyPath:type:
setMinimumRelativeValue:
setMaximumRelativeValue:
setBounds:
collectionViewLayout
didUpdateFocusInContext:withAnimationCoordinator:
previouslyFocusedView
isDescendantOfView:
nextFocusedView
dequeueReusableCellWithReuseIdentifier:forIndexPath:
isScrolling
nextFocusedIndexPath
setNeedsFocusUpdate
updateFocusIfNeeded
velocityInView:
translationInView:
addMotionEffect:
removeMotionEffect:
_showAppSwitcher
setPeekEffectEnabled:
_setKillGestureRecognizersEnabled:
_servicePendingUpdatesWithAnimation:
_activatePendingLaunchItem
launchCompletionHandler
setLaunchCompletionHandler:
pendingLaunchItem
appSwitcherManager
switcherAnimator
pacedFractionComplete
setCollectionViewLayout:
addAnimations:delayFactor:
setScrolling:
_activateItem:
setPendingLaunchItem:
_shouldScrollToItem:scrollIfNeeded:forced:
focusedView
_launchItem:shouldAnimateLayoutSwitch:
_prepareToLaunchItemImmediately:
focusedItem
_updateKillSwipeWithOffset:
_finishKillSwipeWithVelocity:completion:
_cancelKillSwipeWithVelocity:completion:
_handleCollectionViewUpdatesWithAnimation:completion:
bringSubviewToFront:
setCollectionViewLayout:animated:
initWithDuration:timingParameters:
setSwitcherAnimator:
addAnimations:
addCompletion:
startAnimation
setPreferredIndexPath:
scrollViewDidEndScrollingAnimation:
setCollectionViewLayout:animated:completion:
_animateUsingDefaultTimingWithOptions:animations:completion:
invalidateLayoutWithContext:
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
areAnimationsEnabled
setAnimationsEnabled:
__applyPendingUpdatesToCollectionView
performBatchUpdates:completion:
deleteItemsAtIndexPaths:
insertItemsAtIndexPaths:
collectionView:numberOfItemsInSection:
collectionView:cellForItemAtIndexPath:
numberOfSectionsInCollectionView:
collectionView:viewForSupplementaryElementOfKind:atIndexPath:
collectionView:canMoveItemAtIndexPath:
collectionView:moveItemAtIndexPath:toIndexPath:
indexTitlesForCollectionView:
collectionView:indexPathForIndexTitle:atIndex:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
collectionView:shouldHighlightItemAtIndexPath:
collectionView:didHighlightItemAtIndexPath:
collectionView:didUnhighlightItemAtIndexPath:
collectionView:shouldSelectItemAtIndexPath:
collectionView:shouldDeselectItemAtIndexPath:
collectionView:didSelectItemAtIndexPath:
collectionView:didDeselectItemAtIndexPath:
collectionView:willDisplayCell:forItemAtIndexPath:
collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:
collectionView:didEndDisplayingCell:forItemAtIndexPath:
collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:
collectionView:shouldShowMenuForItemAtIndexPath:
collectionView:canPerformAction:forItemAtIndexPath:withSender:
collectionView:performAction:forItemAtIndexPath:withSender:
collectionView:transitionLayoutForOldLayout:newLayout:
collectionView:canFocusItemAtIndexPath:
collectionView:shouldUpdateFocusInContext:
collectionView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInCollectionView:
collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:
collectionView:targetContentOffsetForProposedContentOffset:
collectionView:shouldSpringLoadItemAtIndexPath:withContext:
initWithManager:
initialDragLocation
setInitialDragLocation:
isPanningVertically
setPanningVertically:
isPanningHorizontally
setPanningHorizontally:
preferredIndexPath
setCollectionView:
setTitleView:
peekEffectEnabled
peekEffect
panRecognizer
upRecognizer
setFocusedItem:
_panningVertically
_panningHorizontally
_scrolling
_peekEffectEnabled
_appSwitcherManager
_preferredIndexPath
_collectionView
_peekEffect
_panRecognizer
_upRecognizer
_focusedItem
_pendingLaunchItem
_launchCompletionHandler
_switcherAnimator
_initialDragLocation
_handleForceReloadNotification
_reload
_performUpdates
_cancelPendingUpdates
_updateMappingInfoWithCompletion:
_updateProgrammingInfoWithCompletion:
_notifyProgrammingGuideDidUpdate
removeObjectsInArray:
_addAutoInstallAdditionsToArray:
processName
inputStreamWithURL:
open
propertyListWithStream:options:format:error:
close
_handleReloadTimer
setProvisionedApplicationIdentifiers:
setDisabledApplicationIdentifiers:
setApplicationIdentifiersByBundleIdentifierMapping:
_reloadNotificationToken
_programmingLoaderCancellation
_mappingLoaderCancellation
_loadInProgressFlag
_provisionedApplicationIdentifiers
_disabledApplicationIdentifiers
_applicationIdentifiersByBundleIdentifierMapping
wallpaperViewForUserInterfaceStyle:variant:
displayID
presentationRequest
kind
presentedController
initWithDisplayID:
setPresentedController:
setDisplayID:
setPresentationRequest:
_presentedController
_displayID
_presentationRequest
displayManager
setIsMonitoring:
presentUpgradeAssistantIfNeeded
shownAssistantContext
currentDisplayID
setShownAssistantContext:
lastSeenDisplayID
didCompleteDisplayAssistantForCurrentDisplay
isMonitoring
presentDisplayAssistantWithRequest:dismissCompletionHandler:
dismissDisplayAssistantIfNeeded
setLastSeenDisplayID:
detectedPoorCableConnection
lastCablePollStatus
_cableAlertInterval
disconnect
seenDisplayIDs
startDisplayAssistantMonitoring
presentCableAssistantIfNeeded
setDisplayManager:
_isMonitoring
_displayManager
_shownAssistantContext
_lastSeenDisplayID
dataRepresentation
productID
manufacturer
product
physicalAddress
_dataRepresentation
_productID
_manufacturer
_product
_physicalAddress
_WOM
_YOM
attachedDisplayEDID
tvs_SHA1Digest
tvs_lowercaseHexString
attachedDisplayEDIDDigest
acquire
relinquish
initWithReason:
initialize
__checkOut
__checkIn
checkOutHotBlackAssertion
checkInHotBlackAssertion
verifyURL
_copyCVVCodeFromUser
_verifyCVVCode:error:
presentAlertWithTitle:message:completion:
_copyResponseWithCode:error:
_verifyURL
isConfiguredForDictationOnly
linkWithBundleIdentifier:
flow
localizedButtonTitle
localizedButtonCaption
imageNamed:
_optIn:
_optOut:
_readAboutText:
initWithFlow:
termsVisible
setTermsVisible:
setSiriEnabled:
setDictationEnabled:
setConfiguredForDictationOnly:
dialogContainerView
featureInfoViewController
termsViewController
privacyFlow
_configuredForDictationOnly
_termsVisible
_dialogContainerView
_featureInfoViewController
_termsViewController
_privacyFlow
_initializeRestrictionServiceStateMachine
_validateRestrictionForContentTypesWithRequest:
_enqueueIncomingRequest:
_validateRestrictionForSettingWithRequest:
_authorizeRestrictionsWithRequest:
_checkRestrictionSettingWithRequest:
setCurrentRequest:
_validatePINWithRequest:postCompletionEvent:
currentRequest
pendingTokenToRequestMapping
pendingServiceRequestsQueue
_dequeueNextServiceRequest
setCallsStateChangeHandlerSynchronously:
_isContentType:allowedWithRating:
_isContentTypeRestrictedByProfile:
settingEnabled
_featureNameForSetting:
effectiveBoolValueForSetting:outAsk:
_isSettingRestrictedByProfile:
validatePIN:
_isBooleanSettingType:
_featureNameForContentType:
isEqualToNumber:
_pendingServiceRequestsQueue
_pendingTokenToRequestMapping
_currentRequest
shouldPresent
setShouldPresent:
completionHandler
setCompletionHandler:
_shouldPresent
_completionHandler
_animatePresentationOverSystem:options:completion:
_animatePresentation:options:completion:
alpha
_santizedViewServiceOptions:
animationTimingFunction
setAnimationTimingFunction:
commit
isPresented
setIsPresented:
_isPresented
setTimingFunction:
setFillMode:
setRemovedOnCompletion:
setDuration:
convertTime:fromLayer:
setBeginTime:
addAnimation:forKey:
_solveForInput:
setValues:
setKeyTimes:
setCalculationMode:
setRequestFlags:
setToken:
setShouldBehaveSuperModally:
setShouldDismissOnUnlock:
setDefaultResponseLaunchBundleID:
setDefaultResponseLaunchURL:
setNotificationSource:
initWithPath:
bundleForClass:
setIconURL:
_safeLocalizedValue:withBundle:
setAlertHeader:
setAlertMessage:
setDefaultButtonTitle:
setAlternateButtonTitle:
setOtherButtonTitle:
setSelectableItemTitles:
setTextFieldTitles:
setTextFieldInitialValues:
setKeyboardTypes:
setSimple:
setAlternateButtonIndex:
setOtherButtonIndex:
requestFlags
setNoDefaultButton:
noDefaultButton
setDialogDefaultButtonIndex:
setAccountName:
setAttemptNumber:
selectableItemTitles
shouldBehaveSuperModally
shouldDismissOnUnlock
keyboardTypes
responseSent
setResponseSent:
defaultResponseLaunchURL
openURL:options:completionHandler:
defaultResponseLaunchBundleID
activateApplication:openURL:options:suspended:completion:
setReplyFlags:
textFieldEnteredValues
replyFlags
replyPort
setReplyPort:
localizedStringForKey:value:table:
isAlive
iconURL
isSimple
accountName
attemptNumber
_noDefaultButton
_simple
_shouldBehaveSuperModally
_shouldDismissOnUnlock
_responseSent
_alternateButtonIndex
_otherButtonIndex
_dialogDefaultButtonIndex
_replyPort
_requestFlags
_replyFlags
_notificationSource
_iconURL
_alertHeader
_alertMessage
_defaultButtonTitle
_alternateButtonTitle
_otherButtonTitle
_selectableItemTitles
_textFieldTitles
_textFieldInitialValues
_textFieldEnteredValues
_defaultResponseLaunchBundleID
_defaultResponseLaunchURL
_accountName
_attemptNumber
_keyboardTypes
initWithIndexesInRange:
_scrollProgress
enumerateIndexesUsingBlock:
setIndexPath:
invalidateDataSourceCounts
prepareForCollectionViewUpdates:
updateAction
indexPathBeforeUpdate
indexPathAfterUpdate
sortUsingSelector:
finalizeCollectionViewUpdates
invalidationContextClass
initialLayoutAttributesForAppearingItemAtIndexPath:
finalLayoutAttributesForDisappearingItemAtIndexPath:
insertedIndexPaths
deletedIndexPaths
finalIndexPathByOriginalIndexPath
numberOfItemsBeforeUpdate
numberOfItems
swipeIndex
swipeUpOffset
_insertedIndexPaths
_deletedIndexPaths
_finalIndexPathByOriginalIndexPath
_numberOfItemsBeforeUpdate
_numberOfItems
_swipeIndex
_swipeUpOffset
_handlePineBoardPrefsDidChange
_handleOSUpdatePrefsDidChange
_handleManagedConfigurationSettingsChangedNotification:
setMonitoringEnabled:
setupDefaultAssetURLs
_scheduleOSUpdateCheck
checkResourceIsReachableAndReturnError:
setOsSoftwareUpdateCheckResponse:
_startOSUpdateCheckForAction:
progress
isDone
_okToCheckForOSSoftwareUpdate
osSoftwareUpdateInitialCheckTask
setOsSoftwareUpdateInitialCheckTask:
osSoftwareUpdatePeriodicCheckTask
setOsSoftwareUpdatePeriodicCheckTask:
_scheduleOSUpdateTimerForNextDarkWake
periodicCheckInterval
_scheduleOSUpdateCheckForExpiredDelay
_cancelOSUpdateDarkWakeTimer
lastCheckDate
sleepCheckDelay
_scheduleOSUpdateDarkWakeAt:
tvs_networkTimeIsApproximatelyCorrect
currentCalendar
components:fromDate:
setHour:
setMinute:
dateFromComponents:
setDay:
dateByAddingComponents:toDate:options:
darkWakeTimer
setDarkWakeTimer:
_osUpdateDarkWakeTimerFired:
initWithFireDate:serviceIdentifier:target:selector:userInfo:
mainRunLoop
scheduleInRunLoop:
vendorBagRefetchTimeoutTimer
setVendorBagRefetchTimeoutTimer:
_reloadVendorBag
updateDelayExpirationTimer
setUpdateDelayExpirationTimer:
_osUpdateDelayedUpdateExpirationTimerFired:
_postVendorBagReloadContinueAutoApply
_serverAllowsAutoApplyUpdates
shouldForceAllowAutoApply
vendorBags
_precheckConditionsAndPerformAction:
_isAtHomeSeedUser
validateWithError:
productVersion
productBuildVersion
_versionForUpdate:
setShouldAutomaticallyApplyUpdates:
osUpdateService
osSoftwareUpdateCheckResponse
_showOSUpdateDownloadAndApplyConfirmationForUpdate:largeUpdate:assetIsDownloaded:
_showOSUpdateUpToDateDialog:
_showOSUpdateError:inDomain:description:
_showApplyConfirmationDialogWithData:
_setUpdatingOS:
setProgressPercentage:
didEncounterSlowUpdate
startSoftwareUpdateMonitoring
notePlaybackStarted
_scheduleOSUpdateOnSleepCheck
monitoringEnabled
_monitoringEnabled
_osSoftwareUpdateInitialCheckTask
_osSoftwareUpdatePeriodicCheckTask
_darkWakeTimer
_updateDelayExpirationTimer
_vendorBagRefetchTimeoutTimer
_osSoftwareUpdateCheckResponse
_updateHUDStateForSessionID:
_externalScreenChanged:
isScreenSharingActive
_resetBulletinState:
sharedSystemScreenContext
outputDevice
sharedLocalDevice
setOutputDevice:options:
nextSessionID
_screenSharingDeviceName
initWithTitle:text:footers:
setShouldDismissAutomatically:
_delayedScreenSharingBulletinRefresh
buttonWithTitle:type:handler:
_terminateScreenSharing
addButton:
currentSessionID
currentBulletin
setCurrentBulletin:
setCurrentSessionID:
_currentBulletin
_currentSessionID
_extendedDataValueForKey:
_setExtendedDataValue:forKey:
extendedData
setExtendedData:
_nowPlayingAppDidChange:
_nowPlayingAppPlaybackStateDidChange:
_nowPlayingInfoDidChange:
_setNeedsMetadataUpdate
_allAudioMediaTypes
_bulletinInfoForNowPlayingInfo:
_performMetadataUpdate
_updateWithNowPlayingInfoDictionary:playbackState:nowPlayingPID:
mediaTypeForInfo:
trackIdentifierForInfo:
musicAppBundleIdentifier
_setVideoPlaying:musicPlaying:
mediaRemoteObserverNowPlayingAppDidChange:
mediaRemoteObserverNowPlayingInfoDidChange:nowPlayingInfo:
mediaRemoteObserverIsPlayingDidChange:
mediaRemoteObserverShouldShowTrackChangeBulletin:
_presentTrackChangeBulletinWithInfo:
tvs_dataForKey:
nowPlayingMediaTypeAudioOnly
playbackRate
isMusicAppPlaying
isPodcastsAppPlaying
trackIdentifier
mediaType
_lastNotificationPID
_metadataUpdateRunning
_playing
_playingMusic
_isMusicAppPlaying
_isPodcastsAppPlaying
_nowPlayingProcessPID
_playbackRate
_trackIdentifier
_mediaType
_initialzeStateMachine
accessibilityMenuOptions
voiceOverEnabled
setVoiceOverEnabled:
zoomEnabled
setZoomEnabled:
preferSDHOverRegularSubtitles
setPreferSDHOverRegularSubtitles:
preferVideoDescriptions
setPreferVideoDescriptions:
switchControlEnabled
setSwitchControlEnabled:
displayFilterColorAdjustmentsEnabled
setDisplayFilterColorAdjustmentsEnabled:
displayFilterLightSensitivityEnabled
setDisplayFilterLightSensitivityEnabled:
displayFilterReduceWhitePointEnabled
setDisplayFilterReduceWhitePointEnabled:
setShouldSpeakItems:
_setChecked:
_handleSetSingleAppConfiguration:
_handleSetDefaultConfiguration:
_currentConfigOptions
_applyUpdatesWithOptions:completion:
numberWithUnsignedLong:
_updatesForConfigurationOptions:
setPendingUpdates:
setUpdateCompletion:
_servicePendingUpdates
updateCompletion
handleAXShortcutEvent
updateTimer
setUpdateTimer:
_updateCompletion
_updateTimer
accessibilityLabel
speechUtteranceWithString:
setVolume:
stopSpeakingAtBoundary:
speakUtterance:
shouldSpeakItems
_speechSynthesizer
_shouldSpeakItems
imageScale
contentFrame
initWithCGImage:scale:orientation:
_predicate
mapTableWithKeyOptions:valueOptions:
_updateVolumeControlAvailableState
_audioRoutingController
_updateTVAVRPowerControlAvailableState
volumeControlAvailable
isReadyForUse
isConfiguredForUse
transport
_setRequestorBundleID:
activateSiriWithContext:
initWithNumberOfDigits:
digitGroupView
__activateSiriWithContext:
__startSiriWithContext:
__stopSiriWithContext:
__showPinDialogWithOptions:completion:
__dismissPinDialogWithToken:
__noteUserPresenceDetected
pinViewControllersByToken
_pinViewControllersByToken
boolForKey:defaultValue:
_defaultInstalledMusicAppProxy
doubleForKey:defaultValue:
setInteger:forKey:
tvs_bundle
infoDictionary
isAppSwitcherEnabled
setKioskAppBundleIdentifier:
whatsNewCheckTimeIntervalInSeconds
setRemotePresenceDetectionDelayTimeoutInSeconds:
setHiliteModeTimeoutInSeconds:
musicNowPlayingTimeoutInSeconds
emitButtonTimingLogs
allowSiriOnScreenActions
isDialogTestingEnabled
forceNight
setSystemApplicationElement:
currentApplicationElement
systemWideElement
systemApplication
siriScreenActionManagerIsSiriContentBeingDisplayed:
systemApplicationElement
currentApplications
currentApplicationsIgnoringSiri
_enabled
_systemApplicationElement
wallpaperViewForVariant:
registerNowPlayingDelegate:
deactivateApplication
launchKioskApp
wakeSystemForReason:
fetchDeviceIsAsleepWithResult:
relaunchBackboardd
activateScreenSaver
activateScreenSaverWithReply:
deactivateScreenSaver
launchCRDApp
presentSystemRoutingUIWithOptions:completion:
presentNowPlayingWithOptions:completion:
purgeTopShelfContentForApplicationIdentifiers:
setSleepTimeout:
sleepTimeoutWithReply:
recentApplicationBundleIdentifiersWithReply:
topActiveOrActivatingApplicationIdentifierWithReply:
setNextVoiceRecognitionAudioInputPaths:
setNextAssistantRecognitionStrings:
performScreenActionWithName:forItemIdentifier:parameters:reply:
sendMenuButtonEvent
sendEventData:
systemAppearanceWithReply:
kioskAppBundleIdentifierWithReply:
setMinimumBackgroundFetchInterval:
activateSiri
startSiriListening
stopSiriListening
fetchProvisionAppIdentifiersWithReply:
fetchDisabledAdamIDsWithReply:
fetchApplicationIdentifiersByBundleIdentifierMappingWithReply:
fetchEnforceProvisioningOnSystemAppsEnabledWithReply:
fetchPairedAppleRemoteStateWithReply:
pairAppleRemote:withReply:
activateAppIfPlayingMusicAfterIdleTime:openURL:
cancelScheduledAppActivation
setWantsPlayPauseButtonEvents:
setWantsVolumeButtonEvents:
getStoreFrontCountryCodeWithReply:
registerServiceProviderEndpoint:forProviderType:
endpointForProviderType:withIdentifier:responseBlock:
getBulletinServiceProxyWithReply:
getDiagnosticLogsServiceProxyWithReply:
getOSUpdateServiceProxyWithReply:
getAirPlayServiceProxyWithReply:
getRestrictionServiceProxyWithReply:
getMediaRemoteServiceProxyWithReply:
getUserPresentationServiceProxyWithReply:
getVideoSubscriberAccountServiceProxyWithReply:
getDisplayManagerServiceProxyWithReply:
listen
hiliteModeActive
screenSaverActive
setInterface:forSelector:argumentIndex:ofReply:
requestPresentationWithInfo:completion:
triggerUserActivity
systemServicePresentNowPlayingUI
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
_clientBundleIdentifierFromConnection
_registerConnection:
_activeConnectionsByProcessIdentifier
processIdentifier
setNowPlayingPresentationDelegate:
valueForEntitlement:
isDeviceAsleepAndSleptManually:
sortedArrayUsingSelector:
isAppleIRRemotePaired
pairAppleIRRemote
unpairAppleIRRemote
setExclusivePlayPauseButtonAccessEnabled:forApp:
setVolumeButtonAccessEnabled:forApp:
locale
remoteObjectProxy
nowPlayingPresentationDelegate
auditToken
setHiliteModeActive:
setScreenSaverActive:
_airPlayService
_diagnosticLogsService
_osUpdateService
_restrictionService
_userPresentationService
_videoSubscriberAccountService
_displayManagerService
_hiliteModeActive
_screenSaverActive
_clientBundleIdentifier
_nowPlayingPresentationDelegate
_handleOK
_updateConstantAudioOutput
_updateEventMaskingWindow
_updateAirPlayUIActiveState
_handleMusicNowPlayingTrigger:
AccessibilityMenuOptionsBinding
_updateTripleTapMenu
synchronizeAutomaticDownloadKinds
_performObliterationIfNeeded
setCategory:error:
setConfigurationBlock:
_handleStoreAccountChangedNotification
_registerProcessManagerNotificationHandlers
_setupLanguageChangeObserving
_handleThermalNotification:
_handleEnableLateNightModeNotification:
_handleDisableLateNightModeNotification:
initializeAssetLibraryWithCachePath:
_systemAnimationFenceExemptQueue
triggerThermalNotification
_loadBundles
_startBulletinBoardServer
_kickoffAppDepotReload
_startStoreURLBagMonitoring
_startSoftwareUpdateService
_launchPurpleBuddy
_launchConferenceRoomDisplayAppWithReason:
_launchKioskAppWithOptions:completion:
_setupWebinspector
handleDialogTestNotificationWithDialogId:
isStoreServicesURL
exitContext
exitReason
descriptionForExitReason:
_handleFairplayLaunchFailureForApplication:
handleTermination
focusedProcessIsKioskApp
setupAssistantDidFinish
_ensureTVAirPlayRunning
_startSteadyStateServices
prepareSiriViewServices
_configureAskPermission
_handleProcessDidExit:applicationProcess:
_handleProcessWillActivate:suspended:withContext:
_handleProcessDidActivate:suspended:
setAccessibilityMenuOptions:
_handleMenuOrACHomeSingleTapEventWithYesForMenuNoForACHome:
inputAllowed
_shouldShowSiri
waitForStartListening
_shouldSendMediaRemoteCommand:
_sendMediaRemoteCommand:withOptions:
_wouldExpectPlayPauseButtonDownShouldPause
_wouldExpectPlayPauseButtonUpShouldPause
_sendMediaRemoteCommand:
decreasePlaybackRateFromRate:rateUsedForPlayback:
_changePlaybackRateWithBlock:
increasePlaybackRateFromRate:rateUsedForPlayback:
_handleSkipGestureRecognizer:withCommand:interval:
_wouldExpectPlayPauseLongPressShouldPresentNowPlayingRoutingUI
activateRoutingUIForReason:options:dismissalHandler:
_sendActionOrShowUnconfiguredAlertForAction:
_requestWakeForReason:
_requestSleepForReason:
pbs_isTVBarEnabled
isTVAllowed
pbs_watchListButtonBehaviorEnabled
_shouldShowTVBar
_launchTVWatchList
beginStopCRD
endStopCRD
launchKioskAppWithCompletion:
canStopCRDWithResult:
handleTVTripleTapEvent
_launchAppSwitcher
_buttonType
appWithExclusivePlayPauseButtonAccess
_wouldExpectPlayPauseButtonShouldPause:
systemNowPlayingAllowed
_updateNowPlayingTrigger
languageChangeObserver
setLanguageChangeObserver:
_shouldEnableNavigationSoundsForBundleIdentifier:context:
initiatorAuditToken
systemAppInitiatedDeepLink
mutableDeepLinkingAppHistory
_updateProgrammingGuide
_updateWhatsNewCheckTimeInterval
_handleStoreURLBagDidLoadNotification
_handleProgrammingGuideDidUpdateNotification
_resetProgrammingGuideRefreshTaskWithTimeIntervalInSeconds:
programmingGuideBackgroundTask
interval
setProgrammingGuideBackgroundTask:
activeLockerAccount
setActiveLockerAccount:
saveAccount:error:
purchaserDSID
initWithBundleID:accountIdentifier:claimStyle:
setInFlightAppRepairRequest:
sendRequestWithCompletionBlock:
initWithServiceName:onQueue:
volumeControlNeedsConfiguring
setPbs_shouldShowUnconfiguredVolumeButtonsAlert:
_launchTVSettingsWithOpenURL:
musicNowPlayingTrigger
shouldDisableIdleTimer
_shouldPresentSystemNowPlayingForReason:
_deactivateFocusedAppWithOptions:
_deactivateApplicationWithOptions:completion:
appLaunchDisabled
_presentTVButtonBehaviorAlert
isSiriEnabled
isSiriAvailable
offeredEnableAssistant
setOfferedEnableAssistant:
_presentSiriOptInDialogWithViewController:completion:
offeredEnableDictation
setOfferedEnableDictation:
pbs_shouldShowWatchListButtonBehaviorAlert
lastUpdatedFromOSVersion
setPbs_shouldShowWatchListButtonBehaviorAlert:
awaitingSiriOptInOfferResponse
setAwaitingSiriOptInOfferResponse:
setAppLaunchDisabled:
appTags
_keyboardFocusedInApp:
siriAndDictationAllowed
audioRoutingController
_setConstantAudioOutputEnabled:
sourceName
resetToFactoryDefault
_setLateNightModeEnabled:
_wakeDeviceForSiriInteractionWithContext:
_suggestUserEnableDictation
_suggestUserEnableAssistantAndDictation
_launchTVSearch
killForReason:andReport:withDescription:completion:
alternateIconName
noteTerminationAssertionEfficacyChangedTo:forBundleIdentifier:
requestPasscodeUnlockUIForClient:withCompletion:
initialDisplayConfigurationForClient:
initialDisplayContextForClient:
edgeInfoForClient:displayConfiguration:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
setWindow:
tvs_bindAccessibilityMenuOptionsBindingToObject:withKeyPath:options:
handleMenuDoubleTapEvent
_startObservingPurpleBuddyPrefs
handlePermissionRequest:
_displayDialogForPermissionRequest:fromResponder:
_applicationForPIDIsPlaying:
buddyPrefsObservingToken
setBuddyPrefsObservingToken:
setShouldDisableIdleTimer:
setAudioRoutingController:
inFlightAppRepairRequest
_kioskRelaunchDisabled
set_kioskRelaunchDisabled:
_userNotificationHandler
_safeAreaWindow
_serialNumberWindow
_musicNowPlayingTrigger
_tooHot
_awaitingFirstAppLaunch
_bulletinBoardConnection
_bulletinBoardQueue
_uiAppSupportService
_shouldDisableIdleTimer
_appLaunchDisabled
_awaitingSiriOptInOfferResponse
__kioskRelaunchDisabled
_programmingGuideBackgroundTask
_buddyPrefsObservingToken
_mutableDeepLinkingAppHistory
_languageChangeObserver
_inFlightAppRepairRequest
_pressesEvent
setActiveTransitionContext:
setTransitionCompletion:
transitionCompletion
collectionViewController
setCollectionViewController:
_activeTransitionContext
_collectionViewController
_transitionCompletion
systemFontOfSize:
setShadowColor:
_peripheralStateDidChangeNotification:
_updateConnectedPeripheralSerialNumber
connectedPeripherals
_deviceSerialNumberLabel
_remoteSerialNumberLabel
doesNotRecognizeSelector:
addChildTransaction:
foregroundUpdateHandler
foregroundUpdateComplete
_willComplete
childTransactions
beginFinalTransition
_willFailWithReason:
_childTransactionDidComplete:
updateScenesTransaction
_handleUpdateScenesTransactionDidComplete
isComplete
isFailed
isInterrupted
setProcess:
initWithTransaction:context:
_shouldFailForChildTransaction:
setUpdateScenesTransaction:
_updateScenesTransaction
cloudConfigurationDetails
localizations
preferredLocalizationsFromArray:forPreferences:
pathForResource:ofType:
bundleWithPath:
foundation_localizedStringForKey:value:table:
_initialiseStateMachine
room
_isAccessoryInDefaultRoom:
configuredName
setDeviceName:
deviceNameByRemovingBonjourSuffix
caseInsensitiveCompare:
setConfiguredName:completionHandler:
_isDeviceNameAppleTV:
_isDeviceName:roomNameInAccessory:
_setAccessory:
_setHomeConfigurationState:
_homeOnboardingStateMachine
_setHome:
pbs_setNeedsHomeKitAutoOnboarding:
hmRoom
hmHome
roomForEntireHome
rooms
suggestedRoomNames:
initWithPattern:options:error:
numberOfMatchesInString:options:range:
pbs_buddySelectedRoomName
allOwnedHomes
_moveOrAddLocalAccessoryToRoomWithName:inHome:
createDefaultHomeWithCompletionHandler:
ownedCurrentHome
_moveOrAddLocalAccessoryToRoom:inHome:
createRoomNamed:inHome:completionHandler:
moveOrAddLocalAccessoryToRoom:inHome:completionHandler:
pbs_needsHomeKitAutoOnboarding
isDeviceNameModificationAllowed
startBrowsingForLocalAccessory
stopBrowsingForLocalAccessory
_configureLocalAccessory
registerStateTransitionFromState:onEvent:toState:
_homeConfigurationState
_home
_accessory
initWithBytes:length:encoding:
transitionSoundEffectsEnabled
isMainDisplay
_nameForDisplayType
_currentTriggerValue
_configureForDemoMode:
tvsui_setStoreDemoModeType:
tvsui_defaultIdleScreenEntriesConfigurationURL
tvsui_setIdleScreenEntriesConfigurationURL:
tvsui_setVideoPlaybackTimeout:
tvsui_setBundleIDsWithVideoRestriction:
_demoModeTriggerDidChange
lastTriggerValue
setLastTriggerValue:
_lastTriggerValue
initWithBundleIDs:states:elevatedPriority:
updateInterestedAssertionReasons:
_updateApplicationState:
_updateAppButtonAccess
unsignedIntValue
setAppWithExclusivePlayPauseButtonAccess:
setAppWithVolumeButtonAccess:
appWithVolumeButtonAccess
_logObject
_applicationStateMonitor
_viewServiceApplicationBundleIdentifiers
_foregroundApplicationBundleIdentifiers
_appsWithVolumeButtonAccess
_appsWithExclusivePlayPauseButtonAccess
_suspendedAppsWithVolumeButtonAccess
_suspendedAppsWithExclusivePlayPauseButtonAccess
_appWithVolumeButtonAccess
_appWithExclusivePlayPauseButtonAccess
requestWithURL:cachePolicy:timeoutInterval:
documentLoaderWithURLRequest:
documentLoaderWithAPIEndpoint:queryParameters:protocolVersion:
_APIBaseURL
_activeDSID
appendFormat:
initWithString:relativeToURL:
absoluteString
setITunesStoreRequest:
copyStoreFrontRequestHeaders
loadJSONWithReponseBlock:
loadWithWeakObject:completionHandler:
documentLoaderWithURL:
documentLoaderWithAPIEndpoint:queryParameters:
hasStoreAccount
JSONObjectWithData:options:error:
postprocessorName
processDocument:forResponse:error:
initWithTitle:text:
_handleMenuButton
removeAllButtons
isUserInitiated
setAppSwitcherTransition:
setFromBundleIdentifier:
setToBundleIdentifier:
focusedBundleIdentifier
setFocusedBundleIdentifier:
setFirstUserLaunch:
setUserInitiated:
setLaunchedForPlayback:
setLaunchOverSiri:
setLaunchedByDeactivation:
setSystemAppInitiatedDeepLink:
setLaunchURL:
setInitiatorAuditToken:
setForegroundUpdateHandler:
launchOptions
setLaunchOptions:
isForTesting
setIsForTesting:
_flags
_appSwitcherTransition
_firstUserLaunch
_userInitiated
_launchedForPlayback
_launchOverSiri
_launchedByDeactivation
_systemAppInitiatedDeepLink
_isForTesting
_fromBundleIdentifier
_toBundleIdentifier
_focusedBundleIdentifier
_launchURL
_initiatorAuditToken
_process
_foregroundUpdateHandler
_launchOptions
finishWithResult:
initForApplication:sequenceNumber:
sequenceNumber
finished
_assertion
_finished
_sequenceNumber
result
initWithHandler:
initWithURL:
initWithSessionIdentifier:
relativeString
setForTesting:
setUserLaunchEventTime:
setPayload:
setActions:
initWithTransitionContext:
setDismissalHandler:
requestForPresentation:reason:dismissalHandler:
dismissalHandler
_dismissalHandler
_initializeRoutingUIStateMachine
routingStateMachine
pendingDismissalHandlers
_routingUIDismissedRemotely
pendingRoutingRequests
setRoutingViewController:
routingViewController
_pendingRoutingRequests
_pendingDismissalHandlers
_routingStateMachine
_routingViewController
externalControlSystem
isAutomaticallyConfigured
pbs_shouldShowUnconfiguredVolumeButtonsAlert
pairAppleIRRemoteWithCompletion:
unpairAppleIRRemoteWithCompletion:
_initializeVolumeBehaviorStateMachine
_listenForVolumeButtonOverrideUpdates
_listenForNowPlayingAppNotifications
volumeBehaviorStateMachine
setVolumeButtonBehavior:
volumeController
externalControlSystemDidChangeTopology:
externalControlSystemDidUpdatePolicy:
externalControlSystemDidBecomeActiveSource:
externalControlSystemDidResignActiveSource:
externalControlSystem:didHandleRemoteControlButtonPressed:
externalControlSystem:didHandleRemoteControlButtonReleased:
externalControlSystem:didChangeReadyStatus:
externalControlSystem:didChangeLinkStatus:
externalControlSystem:didCompleteAction:withResult:error:
externalControlSystem:didReceiveDeviceEvent:
externalControlSystem:didReceiveRequest:
externalControlSystem:willStartLearningAction:
externalControlSystem:didLearnAction:withProgress:
externalControlSystem:didCompleteLearningAction:withResult:error:
externalControlSystem:didFinishLearningAction:
setExternalControlSystem:
setVolumeController:
setVolumeBehaviorStateMachine:
_externalControlSystem
_volumeController
_volumeBehaviorStateMachine
_shouldSuppressWakeForRemoteControlButton:
_isSiriEnabled
_handleAssistantPreferencesDidChangeNotification:
_handleRemoteProximityNotification:
siriPluginController
prepareViewServices
forgoWaitForStartListening
_updateShouldPreferDictation
shouldPreferDictation
setSuspended:
deviceID
_startSiriWithContext:
_stopSiriWithContext:
isListening
pluginHost
_preheatSiriViewServiceIfNecessary
sharedPreferences
assistantIsEnabled
_lazySiriPluginController
_startProvidingScreenActionContext
setSiriPluginController:
_stopProvidingScreenActionContext
setShouldPreferDictation:
onScreenActionContextProvider
setOnScreenActionContextProvider:
_waitingForStartListening
_suspended
_siriEnabled
_shouldPreferDictation
_siriPluginController
_onScreenActionContextProvider
_localizedAppName
tvsui_displayNameForAppState:withLocalizedAppName:
tvsui_smallApplicationFlatIcon
_updateDisplayName
_updateIconImage
applicationProxy
localizedName
manager
_live
_pendingInsertion
_pendingDeletion
_itemType
_applicationProxy
_displayName
_iconImage
_manager
_appState
_handleSettingsChanged
_launchCRDApp
_showCRDWaitingScreen
_handleLoadingTimeout
setCrdActive:
_updateIfCRDForcedOnWhileIdle
_updateIfCRDDisabledWhileActive
_exitCRDApp
processDidExit:
process:stateDidChangeFromState:toState:
applicationProcessWillLaunch:
applicationProcessDidLaunch:
applicationProcessDidExit:withContext:
applicationProcessDebuggingStateDidChange:
_crdActive
imageWithContentsOfFile:
setHeaderImage:
updateWithNotification:
_didSelectButtonAtIndex:
setInputAllowed:
setIdleTimerAllowed:
setAppSwitcherAllowed:
setSiriAndDictationAllowed:
setSystemDialogsAllowed:
setSystemNowPlayingAllowed:
setCurrentConfiguration:
currentConfiguration
_inputAllowed
_appSwitcherAllowed
_idleTimerAllowed
_siriAndDictationAllowed
_systemDialogsAllowed
_systemNowPlayingAllowed
_currentConfiguration
normalizeSnapshotName:
orientation
displayConfiguration
setFullScreen:
expirationDate
setExpirationDate:
setStyle:
setStatusBarSettings:
setCompatibilityMode:
setBackgroundStyle:
height
width
colorMode
colorGamut
pb_aspectRatio
preferredScale
internalRepresentation
pb_saveAsPreferred
displayConnectionToNotify
displayConnection
notifyStateChangeForDisplayConnection:
setDisplayConnectionToNotify:
reloadState
notifyClientsSource
presentedDisplayAssistantKind
promotedVirtualDisplayModes
deemed4KCapable
availableModes
filteredUsingdPineBoardPolicy
initWithCADisplayMode:usePineBoardPolicy:encodedPromotedModes:
setShouldModeSwitchForDynamicRange:
setShouldModeSwitchForFrameRate:
findMatchingCAMode:
currentMode
setCurrentMode:
update
isMainThread
treatDisplayModeAsFallback
setCanHandleHighBandwidthModes:
setLastCablePollStatus:
useDisplayModeAsDefaultForNextWake
nextEstablishModePerDisplays
updateCurrentCADisplayFromDisplayMode:error:
initWithSourceDisplayMode:destinationDisplayMode:kind:source:
upgradeDisplayModeToNonVirtual
writeDisplayModeToDisk
setUserSelectedDisplayMode:
setCurrentEDIDHash:
_recalculatedDisplayModesFromCoreAnimationModes:
sortUsingComparator:
externalDisplayAttributes
caModeIsVirtual
_recalculateDefaultDisplayMode:
_recalculatedBlackScreenRecoveryDisplayModes
setFilteredUsingdPineBoardPolicy:
isValidBlackScreenRecoveryMode
arrayByAddingObjectsFromArray:
migratePreferenceKeyForDisplayEDID:
canBeUsedToEstablishDisplayOnNextWake
isPresentingDisplayAssistant
userPreferredRefreshRate
setRefreshRate:
completeDisplayTransition:error:withReply:
setPresentedDisplayAssistantKind:
setUserPreferredRefreshRate:
setResolution:
setSDRColorMapping:
setDynamicRange:
setSDRChromaSubsampling:
setHDR10ChromaSubsampling:
setColorGamut:
setCaModeIsVirtual:
characterAtIndex:
newlineCharacterSet
componentsSeparatedByCharactersInSet:
stateObservers
isObservingFocusedProcess
setObservingFocusedProcess:
automaticallyNotifiesObserversForKey:
isAdvertisingHDMI2
filterModes:
baseCableCheckTimeInterval
setBlackScreenRecoveryDisplayModes:
setNextEstablishModePerDisplays:
setStateObservers:
setSortedDisplayModes:
setCurrentDisplayMode:
setFallbackDisplayMode:
setSeenDisplayIDs:
setCurrentDisplayID:
setDisplayConnection:
setDeemed4KCapable:
setDefaults:
lastCableErrorInfo
setMatchContentRequestedModes:
_filteredUsingdPineBoardPolicy
_canHandleHighBandwidthModes
_shouldModeSwitchForDynamicRange
_shouldModeSwitchForFrameRate
_detectedPoorCableConnection
_deemed4KCapable
_usesDolbyLowLatency
_observingFocusedProcess
_baseCableCheckTimeInterval
_blackScreenRecoveryDisplayModes
_nextEstablishModePerDisplays
_stateObservers
_notifyClientsSource
_displayConnectionToNotify
_localeRefreshRate
_sortedDisplayModes
_currentDisplayMode
_fallbackDisplayMode
_userSelectedDisplayMode
_seenDisplayIDs
_currentDisplayID
_displayConnection
_lastCablePollStatus
_userPreferredRefreshRate
_encodedPromotedDisplayModes
_presentedDisplayAssistantKind
_defaults
_memoryStore
_currentEDIDHash
_cableCheckTimer
_lastCableErrorInfo
_matchContentRequestedModes
_referenceBounds
tvs_ISO8601CombinedDateAndTimeFormatter
fileURLWithPath:isDirectory:
isFrontBoard
_notePhysicalNetworkStateDidChangeNotification:
processesForBundleIdentifier:
_bringApplicationProcessToForeground:completion:
automaticDownloadKinds
showPromptWithIdentifier:completionHandler:
openApplication:options:withResult:
exitAndRelaunch:
shutdownWithOptions:forSource:
_foregroundScene
scheme
resourceSpecifier
unionAutomaticDownloadKinds:withCompletionBlock:
minusAutomaticDownloadKinds:withCompletionBlock:
isTrusted
_handleSpecialURL:
_handleOpenApplicationRequest:bundleID:options:withResult:
applicationsAvailableForOpeningURL:
_shouldHandleTestURL:
handle
tvs_URLForKey:
_applicationSafeForUseOnline:
signatureState
_reportUntrustedLaunchAttemptWithAppInfo:
_wouldDebuggerTargetPreventLaunchForBundleIdentifier:
debuggerTargetBundleIdentifier
isFactoryActivated
handleTestURL:
_openApp:options:origin:withResult:
_checkContentRestrictions:options:thenProceedWithHandler:
initWithURL:resolvingAgainstBaseURL:
host
scenesForBundleIdentifier:
isBackgrounded
setArguments:
setEnvironment:
setStandardOutputURL:
setStandardErrorURL:
setDisableASLR:
setWaitForDebugger:
setLaunchIntent:
environment
regularExpressionWithPattern:options:error:
_isStorePlaybackURL:
forTesting
initWithApplicationBundleID:executionContextProvider:
updateSettingsWithBlock:
updateSceneWithIdentifier:parameters:transitionContext:
waitForDebugger
setDebuggerTargetBundleIdentifier:
postNotificationName:object:userInfo:
_resetDebuggerTargetBundleIdentifier
applicationUpdateScenesTransactionOberverWithResultBlock:
pixelSize
hasEntitlement:
UUIDString
preferredLevel
initWithSettings:
initWithScene:requests:expirationInterval:responseHandler:
actions
_setupEventDeferralsWithScene:
deviceFamilies
preferenceDomain
physicalNetworkAvailable
validateRestrictionForContentType:withRating:allowInteraction:withCompletion:
hasUniversalProvisioningProfile
hasFreeDeveloperProvisioningProfile
_scene:setBackgrounded:transactionGroup:
initWithSceneIdentifier:process:parameters:transitionContext:
setWaitsForSceneCommit:
addSynchronizedTransaction:
level
layerManager
layers
contextID
_contextId
hardwareIdentifier
propertiesWithClientID:pid:displayUUID:contextID:
deferEventsForClientWithProperties:toClientWithProperties:withPriority:
setFocusedProcess:
automaticallyNotifiesObserversOfFocusedProcess
processManager:didAddProcess:
processManager:didRemoveProcess:
systemService:canActivateApplication:withResult:
systemService:handleOpenApplicationRequest:withCompletion:
systemService:handleOpenApplicationRequest:options:origin:withResult:
systemService:handleOpenURLRequest:application:options:origin:withResult:
systemService:isPasscodeLockedOrBlockedWithResult:
systemService:handleActions:origin:withResult:
systemServicePrepareForShutdown:withOptions:
systemServicePrepareForExit:andRelaunch:
systemService:dataReset:completion:
systemServicePrepareForShutdown:andReboot:
workspace:didReceiveCreateSceneRequestForIdentifier:initialClientSettings:withCompletion:
workspace:didReceiveDestroySceneRequestForIdentifier:withCompletion:
displayMonitor:didConnectIdentity:withConfiguration:
displayMonitor:didUpdateIdentity:withConfiguration:
displayMonitor:willDisconnectIdentity:
alternateApplicationIsActive
updateEventDeferrals
_recentApplicationBundleIdentifiers
_activatedApplicationBundleIdentifiers
_pendingSceneUpdateTransactions
_systemService
_focusedProcess
_systemWakeTargetProcess
_fbSystemAppService
_fbSceneManager
_fbProcessManager
_fbDisplayManager
_pendingSnapshots
_processQueue
_forTesting
_debuggerTargetBundleIdentifier
hasStarted
allErrors
transactionWillBegin:
transactionDidBegin:
transactionDidFinishWork:
transactionDidComplete:
transaction:willLaunchProcess:
transaction:didLaunchProcess:
transaction:didCreateScene:
transaction:willUpdateScene:
transaction:willCommitSceneUpdate:
transaction:didCommitSceneUpdate:
_resultBlock
isBlocked
isRestricted
_configureSubviews
transitionCoordinator
_animateWithCoordinator:isPresenting:
animateAlongsideTransition:completion:
presentationTransitionWillBegin
dismissalTransitionWillBegin
opaqueView
_opaqueView
setProgressPercent:
showSlowUpdateViewWithCompletion:
_controller
setLineBreakMode:
_icon
_text
_subtext
PBRestrictionServiceRequest
PBUserNotificationHandler
PBUserNotificationViewControllerDelegate
NSObject
PBUserNotificationDelegate
PBKioskAppConfiguration
NSCopying
PBFeatureInfoViewController
PBDiagnosticLogsService
PBSDiagnosticLogsServiceInterface
UIApplicationSceneClientSettings
PBApplication
FBSceneManagerDelegate
FBSceneManagerObserver
PBSBulletinServiceDelegate
PBSPowerManagerDelegate
_AppActivateInfo
PBScreenSaverManager
PBUserNotificationTextEntryViewController
UIGestureRecognizerDelegate
UIViewControllerTransitioningDelegate
TextEntryButtonViewDelegate
TVSUITextEntryControllerDelegate
PBUserNotificationViewController
PBTapGestureRecognizer
PBOSSoftwareUpdateProcess
PBSViewServicePresenter
PBSViewServiceInterface
PBRemoteViewController
PBBundleLoader
PBSimplePluginHost
PBUIPluginHost
PBSnapshotLoadRequest
PBAppSwitcherUpdate
RegionRefreshRate
PBVolumeController
MPVolumeControllerDelegate
MPAVRoutingControllerDelegate
_PBAppTransitionAnimationFactory
_UIBasicAnimationFactory
PBAppTransitionViewController
PBAppTransitionContextDelegate
PBSafeAreaWindow
PBServiceProviderRegistryKeyPair
PBServiceProviderRegistry
PBPlaybackLaunchShroudWindow
PBScreenSaverWindow
PBAirPlayWindow
PBRoutingWindow
PBNowPlayingWindow
PBRestrictionPINWindow
PBBlackScreenRecoveryWindow
PBSiriWindow
PBDialogWindow
PBBulletinWindow
PBAppSwitcherWindow
PBAppTransitionWindow
PBCRDLoadingWindow
PBCRDInstructionsWindow
PBEventMaskingWindow
PBTVBarWindow
PBHotBlackWindow
PBWindowManager
PBNavigationControllerDelegate
UINavigationControllerDelegate
PBSDisplayStateObserver
PBViewControllerPresentationRequest
_PBWindowManagerAppTransitionHelper
PBDisplayManagerService
PBSDisplayManagerServiceInterface
PBSDisplayStateDisplayAssistant
PBSDisplayStateMutation
PBDisplayModePredicate
NativeAndPerformanceSwitching
PBVolumeChangeObserver
PBAppSwitcherLayoutInvalidationContext
PBHomeMediaAccessControlManager
PBWhatsNewService
PBAppSwitcherReduceMotionLayout
PBSiriScreenActionApplication
PBApplicationInfo
PBSiriScreenActionItem
PBDataReportingService
PBLanguageChangeObserver
PBSnapshotService
LSApplicationWorkspaceObserverProtocol
PBSMigrationHandling
_PBImageProcessingOperation
_PBWallpaperGenerateOperation
_PBWallpaperSaveOperation
_PBSnapshotSaveOperation
PBRestrictionService
PBSRestrictionServiceInterface
PBBulletinService
PBSBulletinServiceInterface
PBAppSwitcherFullFocusLayout
PBAppSwitcherTitleView
PBTVTapCoordinator
PBWindow
PBTapGestureRecognizerDelegate
ATVHIDSystemClient
PBBackgroundWindow
PBNavigationController
PBAppSwitcherManager
PBOSUpdateService
PBSOSUpdateServiceInterface
PBAppDepot
FBUIApplicationServiceDelegate
UISApplicationStateServiceDelegate
BBObserverDelegate
MCProfileConnectionObserver
FBSApplicationDataStoreObserver
PBSAppDepotProxyProtocol
_PBAppStateServiceDataSource
UISApplicationStateServiceDataSource
PBSBulletinPresenter
PBRemoteBulletinViewController
PBAppSwitcherFocusLayoutAttributes
PBSystemService
NSXPCListenerDelegate
PBUserNotificationCenter
SSErrorHandlerDelegate
PBSceneView
PBSystemAppearanceManager
CLLocationManagerDelegate
PBScreenSaverManagerObserver
PBSiriScreenActionContextProvider
AFContextProvider
PBMachineDataOperation
Migrations
Preferences
PBCarMVerificationOperation
PBTextEntryViewControllerDelegate
PBSceneSnapshotDataProviderContext
PBSceneSnapshotDataProvider
XBSnapshotDataProvider
PBApplicationTesting
PBUnavailableBundleListLoader
_PBUnavailableBundleListLoaderCancellableToken
PBCancellable
PBOSUpdateAssetManager
PBCableSignalInfo
NSSecureCoding
NSCoding
CableCheck
PB2SVerificationOperation
PBWallpaperViewController
PBSystemMenuViewController
_PBNowPlayingPresentationRequest
PBNowPlayingManager
PBVideoSubscriberAccountService
PBSVideoSubscriberAccountServiceInterface
PBDefaultLaunchImageDataProviderContext
PBDefaultLaunchImageDataProvider
PineBoardAdditions
PBIssueDataReporter
PBUserNotificationTextEntryButtonView
PBOSSoftwareUpdateMonitor
PBAppSwitcherFocusCollectionViewCell
PBStorePermissionMonitor
PBApplicationSnapshotPredicate
PBUserPresentationService
PBSUserPresentationServiceInterface
PBPinDisplayViewController
PBTextEntryViewController
PBSnapshotView
PBAppSwitcherTimingCurveProvider
UITimingCurveProvider
_PBAppSwitcherCollectionView
PBAppSwitcherCollectionViewController
UICollectionViewDataSource
UICollectionViewDelegate
UIScrollViewDelegate
PBAppSwitcherManagerDelegate
PBProgrammingGuide
_PBPresentedAssistantContext
PBDisplayAssistantService
PBDisplayEDID
EDID
__PBSceneDeactivationAssertion
__PBAirPlaySceneDeactivationAssertion
__PBAppSwitcherSceneDeactivationAssertion
__PBDialogSceneDeactivationAssertion
__PBHotBlackSceneDeactivationAssertion
__PBScreenSaverSceneDeactivationAssertion
__PBSiriSceneDeactivationAssertion
__PBSiriFullScreenSceneDeactivationAssertion
__PBTransitionSceneDeactivationAssertion
PBSceneDeactivationAssertionManager
PBCVVVerificationOperation
PBSiriOptInOfferViewController
PBRestrictionServiceRequestManager
_PBScreenSaverTransitionRequest
PBScreenSaverTransitionViewController
PBCFUserNotification
PBAppSwitcherFocusLayout
PBSoftwareUpdateService
PBOSSoftwareUpdateProcessDelegate
PBScreenSharingObserver
PBMediaRemoteObserver
PBAXFeatureManager
_PBAXMenuAlertController
PBSavedSnapshotDataProvider
PBMediaRemoteService
_PBSMediaRemoteServiceInternalInterface
PBSiriScreenActionManager
PBWallpaperWindow
PBSystemServiceInterface
PBSOSUpdateServiceDelegate
PBSAirPlayServiceInterface
PBSystemServiceNowPlayingDelegate
PBSystemServiceClientInterface
PBSystemServiceConnection
PBTVButtonChangeViewController
PBAppDelegate
BKSTerminationAssertionObserver
PBMediaRemoteObserverDelegate
PBLanguageChangeObserverDelegate
UISApplicationSupportServiceDelegate
UIApplicationDelegate
PBAppSwitcherViewController
PBSerialNumberWindow
PBAppTransitionTransaction
PBHomeAccessoryManager
PBRetailDemoModeObserver
PBHardwareButtonAccessManager
PineBoard
PBJSONPostprocessor
TVSDocumentPostprocessor
PBUserNotificationViewControllerTermsAndConditions
PBAppTransitionContext
PBBackgroundFetchTask
_PBRoutingUIPresentationRequest
PBRoutingUIManager
PBExternalControlSystem
PBSExternalControlSystemDelegate
PBVolumeControllerDelegate
Private
PBSiriManager
PBSiriScreenActionManagerDelegate
PBAppSwitcherItem
PBConferenceRoomDisplayManager
FBApplicationProcessObserver
FBProcessObserver
PBUserNotificationViewControllerAlert
PBSystemAppSettings
PBAirPlayService
Capture
PBDisplayManager
PBSDisplayState
PBProcessManager
FBProcessManagerObserver
FBSystemServiceDelegate
FBWorkspaceDelegate
FBSDisplayObserving
_PBPMApplicationUpdateScenesTransactionOberver
FBApplicationUpdateScenesTransactionObserver
BSTransactionObserver
PBOpaqueAlertController
_PBOpaqueAlertPresentationController
PBOSUpdateWindow
PBThermalNoticeWindow
@16@0:8
@24@0:8@16
@32@0:8@16Q24
B24@0:8@16
Q16@0:8
v16@0:8
v24@0:8Q16
v24@0:8@16
B16@0:8
v20@0:8B16
@?16@0:8
v24@0:8@?16
@"NSUUID"
@"NSNumber"
@"NSString"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16Q24
v32@0:8@"UIViewController<PBUserNotificationViewController>"16Q24
v24@0:8@"UIViewController<PBUserNotificationViewController>"16
v24@0:8@"PBCFUserNotification"16
@"NSMutableDictionary"
@32@0:8@16@24
@24@0:8^{_NSZone=}16
@40@0:8Q16@24@32
@"NSDictionary"
v48@0:8@16@24:32Q40
@"UIImage"
@"UILabel"
@"UIButton"
@"UIImageView"
@"UILayoutGuide"
@"NSArray"
v24@0:8@?<v@?@"NSDictionary">16
v24@0:8@"NSString"16
@"PBSystemServiceConnection"
q16@0:8
I16@0:8
d16@0:8
{UIEdgeInsets=dddd}16@0:8
@"FBSDisplayMode"16@0:8
@"FBSDisplayConfigurationRequest"16@0:8
@"NSArray"16@0:8
v32@0:8@16@24
v40@0:8@16@24@32
v48@0:8@16@24@32@40
v40@0:8@16@24Q32
v44@0:8@16@24Q32B40
v32@0:8@"FBSceneManager"16@"FBScene"24
v40@0:8@"FBSceneManager"16@"FBScene"24@"FBSceneUpdateContext"32
v48@0:8@"FBSceneManager"16@"FBScene"24@"FBSceneUpdateContext"32@"NSError"40
v40@0:8@"FBSceneManager"16@"FBScene"24@"<FBSceneClient>"32
v48@0:8@"FBSceneManager"16@"FBScene"24@"FBSSceneSettings"32@"FBSSceneTransitionContext"40
v40@0:8@"FBSceneManager"16@"FBScene"24Q32
v44@0:8@"FBSceneManager"16@"FBScene"24Q32B40
v56@0:8@16@24@32@40@48
q32@0:8@16@24
v56@0:8@"FBSceneManager"16@"FBScene"24@"FBSSceneClientSettingsDiff"32@"FBSSceneClientSettings"40@"FBSSceneTransitionContext"48
v40@0:8@"FBSceneManager"16@"FBScene"24@"NSSet"32
q32@0:8@"FBSceneManager"16@"FBSDisplayIdentity"24
q32@0:8@"FBSceneManager"16@"FBScene"24
@"FBSSceneTransitionContext"32@0:8@"FBSceneManager"16@"FBScene"24
v40@0:8@"<PBSBulletinServiceInterface>"16@"PBSBulletin"24Q32
v24@0:8@"PBSPowerManager"16
B32@0:8^{__IOHIDEvent=}16q24
B24@0:8^{__IOHIDEvent=}16
v24@0:8^{__IOHIDEvent=}16
B32@0:8@16@24
v28@0:8@16B24
v40@0:8I16I20Q24Q32
v48@0:8I16I20Q24Q32@40
v32@0:8@16d24
v32@0:8@16@?24
v40@0:8d16@24@32
v28@0:8B16@?20
v20@0:8I16
v48@0:8@16@24@32^v40
@"PBBulletinService"
@"PBSBulletin"
@"NSMutableSet"
@"NSMutableArray"
@"NSTimer"
@"PBSUserActivityTrigger"
@"PBKioskAppConfiguration"
@"NSURL"
v24@0:8d16
@"TVSPreferences"
@"TVSStateMachine"
@"PBRemoteViewController"
@"NSHashTable"
@"NSObject<OS_dispatch_source>"
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
@40@0:8@16@24@32
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
v40@0:8@16@24q32
v40@0:8@"PBUserNotificationTextEntryButtonView"16@"UIButton"24q32
v24@0:8@"TVSUITextEntryController"16
@"PBCFUserNotification"16@0:8
@"<PBUserNotificationViewControllerDelegate>"16@0:8
v24@0:8@"<PBUserNotificationViewControllerDelegate>"16
v24@0:8q16
@32@0:8q16^q24
@"PBCFUserNotification"
@"<PBUserNotificationViewControllerDelegate>"
@"UIViewController"
@"UITapGestureRecognizer"
q48@0:8@16@24@32@40
B40@0:8Q16@24^@32
v28@0:8B16@20
v32@0:8Q16@24
v36@0:8Q16B24@28
v32@0:8q16@24
v32@0:8Q16Q24
v32@0:8q16@?24
@24@0:8Q16
f16@0:8
v20@0:8f16
@"<PBOSSoftwareUpdateProcessDelegate>"
@"PBSOSUpdateScanOptions"
@"MAAsset"
@"NSDate"
@"MAProgressNotification"
@"NSObject<OS_dispatch_queue>"
v24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@?<v@?>24
@"NSXPCInterface"16@0:8
v32@0:8@"NSDictionary"16@?<v@?@"<NSSecureCoding>"@"NSError">24
v24@0:8@"<NSSecureCoding>"16
v24@0:8@"UIViewController"16
@"UIViewController"16@0:8
@48@0:8q16@24@32@40
@"PBAppSwitcherItem"
@"NSIndexPath"
v28@0:8@16I24
v28@0:8@16f24
v32@0:8@16q24
v28@0:8@"MPVolumeController"16B24
v28@0:8@"MPVolumeController"16I24
v32@0:8@"MPVolumeController"16@"NSString"24
v28@0:8@"MPVolumeController"16f24
v32@0:8@"MPVolumeController"16q24
v64@0:8@16@24q32@40@48@?56
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
B24@0:8Q16
v28@0:8B16Q20
@"<PBVolumeControllerDelegate>"
@"MPAVRoutingController"
@"MPVolumeController"
@"CABasicAnimation"32@0:8@"UIView"16@"NSString"24
@"CAMediaTimingFunction"16@0:8
@"CAMediaTimingFunction"32@0:8@"UIView"16@"NSString"24
B32@0:8@"UIView"16@"NSString"24
v24@0:8@"PBAppTransitionContext"16
@"PBAppTransitionTransaction"
@"UIView"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v40@0:8@16@24@?32
@"BKSApplicationStateMonitor"
v36@0:8@16@24B32
Q24@0:8@16
q24@0:8@16
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
v32@0:8@"UINavigationController"16@"UIViewController"24
v32@0:8@"<PBSDisplayState>"16q24
B32@0:8@16@?24
v24@0:8B16B20
v48@0:8@16d24d32@?40
v40@0:8d16d24@?32
@28@0:8@16B24
@"PBRemoteBulletinViewController"
@"PBOSUpdateWindow"
@"PBWindow"
@"FBDisplayLayoutElement"
@"_PBWindowManagerAppTransitionHelper"
@"NSObject<OS_dispatch_group>"
@"TVSUIBlackScreenRecoveryIterator"
v32@0:8@"PBSDisplayManagerUpdateRequest"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"PBSDisplayAssistantPresentationRequest"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@"NSNumber"16
@32@0:8q16d24
@40@0:8q16q24d32
@32@0:8q16@24
@"TVPAudioRoutingController"
@"TVCSHome"
@"TVSBackgroundTask"
@52@0:8@16d24d32q40B48
@"AXElement"
Q32@0:8Q16Q24
@"NSThread"
@"<PBLanguageChangeObserverDelegate>"
Q32@0:8@16^@24
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
Q32@0:8@"PBSMigrationContext"16^@24
v36@0:8@16B24@?28
v48@0:8@16@24@32@?40
@24@0:8d16
@"NSOperationQueue"
@24@0:8@?16
@40@0:8q16q24@?32
@"XBApplicationSnapshotManifest"
@"XBApplicationSnapshot"
@"NSObject<XBSnapshotDataProvider>"
v52@0:8Q16@24B32@36@?44
v44@0:8Q16B24@28@?36
v52@0:8Q16@"NSNumber"24B32@"NSUUID"36@?<v@?Q>44
v44@0:8Q16B24@"NSUUID"28@?<v@?Q>36
v24@0:8@"NSUUID"16
v24@0:8@?<v@?B>16
v32@0:8@"NSString"16@?<v@?B>24
B32@0:8@16Q24
@40@0:8@16@24@?32
v24@0:8@"<PBSBulletinServiceDelegate>"16
v32@0:8@"PBSBulletin"16@?<v@?B@"NSError">24
@"PBSBulletin"40@0:8@"PBSBulletin"16@"NSDictionary"24@?<v@?B@"NSError">32
v40@0:8@"PBSBulletin"16@"NSDictionary"24@?<v@?@"PBSBulletin"B@"NSError">32
v24@0:8@"PBSBulletin"16
@32@0:8@16^@24
v44@0:8@16B24@28@?36
@"NSMapTable"
@"<PBSBulletinServiceDelegate>"
{CGSize=dd}16@0:8
B48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGPoint=dd}32@0:8{CGPoint=dd}16
{CGPoint=dd}48@0:8{CGPoint=dd}16{CGPoint=dd}32
{CGSize="width"d"height"d}
{CGSize=dd}32@0:8{CGSize=dd}16
B32@0:8@"PBTapGestureRecognizer"16@"UIPress"24
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"UILongPressGestureRecognizer"
@"PBTapGestureRecognizer"
@"_UIRepeatingPressGestureRecognizer"
i16@0:8
^{__IOHIDEventSystemClient=}
@"PBWallpaperViewController"
@"<PBAppSwitcherManagerDelegate>"
v24@0:8@"<PBSOSUpdateServiceDelegate>"16
v24@0:8@"PBSOSUpdateManagerClient"16
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"PBSOSUpdateDescriptor"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"PBSOSUpdateDownload"@"NSError">16
v32@0:8@"PBSOSUpdateScanOptions"16@?<v@?@"PBSOSUpdateDescriptor"@"NSError">24
v40@0:8@"PBSOSUpdateDescriptor"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSNumber">16
@"<PBSOSUpdateServiceDelegate>"
@"PBSOSUpdateManagerClient"
v40@0:8@"FBUIApplicationService"16@24@"NSString"32
v40@0:8@"FBUIApplicationService"16@"NSString"24@?<v@?@>32
v32@0:8@"FBUIApplicationService"16@"NSString"24
@"<UISApplicationStateServiceDataSource>"24@0:8@"NSString"16
v52@0:8@16@24Q32B40@?44
@32@0:8@16q24
v56@0:8@16@24@32@40@?48
{CGSize=dd}56@0:8@16@24@32{CGSize=dd}40
{CGSize=dd}48@0:8@16q24f32f36@40
v52@0:8@"BBObserver"16@"BBBulletin"24Q32B40@?<v@?B>44
v40@0:8@"BBObserver"16@"BBBulletin"24Q32
v32@0:8@"BBObserver"16@"BBBulletin"24
v32@0:8@"BBObserver"16@"BBSectionInfo"24
v32@0:8@"BBObserver"16@"NSString"24
v40@0:8@"BBObserver"16@"BBSectionParameters"24@"NSString"32
v32@0:8@"BBObserver"16@"NSSet"24
v28@0:8@"BBObserver"16B24
v48@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32@?<v@?Q>40
B24@0:8@"BBObserver"16
@"BBThumbnailSizeConstraints"40@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32
@"BBThumbnailSizeConstraints"32@0:8@"BBObserver"16q24
v56@0:8@"BBObserver"16@"NSData"24@"BBAttachmentMetadata"32@"BBBulletin"40@?<v@?@"NSData">48
v56@0:8@"BBObserver"16@"NSData"24@"BBAttachmentMetadata"32@"BBBulletin"40@?<v@?@"UIImage">48
{CGSize=dd}56@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32{CGSize=dd}40
@"UIImage"48@0:8@"BBObserver"16q24@"NSData"32@"NSString"40
{CGSize=dd}48@0:8@"BBObserver"16q24f32f36@"NSString"40
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v40@0:8@"FBSApplicationDataStoreMonitor"16@"NSString"24@"NSString"32
v32@0:8@"FBSApplicationDataStoreMonitor"16@"NSString"24
@"NSDictionary"16@0:8
@"UISApplicationStateService"
@"BBObserver"
@"FBSApplicationDataStoreMonitor"
@"NSDate"16@0:8
v24@0:8@"NSDate"16
@"PBSMutableAppState"
v32@0:8Q16@?24
v32@0:8Q16@?<v@?>24
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v48@0:8q16d24d32@?40
v48@0:8q16d24@32d40
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"BKSProcessAssertion"
v24@0:8@"SSErrorHandler"16
v32@0:8@"SSErrorHandler"16@"SSErrorHandlerSession"24
@20@0:8i16
v32@0:8#16q24
@"<PBUserNotificationDelegate>"
@"SSErrorHandler"
@36@0:8@16B24@28
@"FBScene"
@"UIView<FBSceneHostView>"
@"UIView<FBSceneHostSnapshotView>"
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
v24@0:8@"PBScreenSaverManager"16
q24@0:8q16
{CLLocationCoordinate2D=dd}16@0:8
v32@0:8{CLLocationCoordinate2D=dd}16
@"GEOAlmanac"
@"CLLocationManager"
{CLLocationCoordinate2D="latitude"d"longitude"d}
B24@0:8@"<AFContextProvider>"16
@"NSHTTPURLResponse"
@20@0:8B16
v32@0:8@"PBTextEntryViewController"16Q24
v24@0:8@"PBTextEntryViewController"16
v32@0:8@"PBTextEntryViewController"16@"UITextField"24
B28@0:8B16^@20
B32@0:8@16^@24
@24@0:8^@16
v64@0:8@16@24@32@40@?48@?56
@24@0:8o^{CGAffineTransform=dddddd}16
@"XBSnapshotDataProviderContext"16@0:8
@"NSData"24@0:8o^{CGAffineTransform=dddddd}16
@"UIImage"16@0:8
@"<XBSnapshotDataProvider>"16@0:8
@32@0:8@16d24
@"XBSnapshotDataProviderContext"
@"FBSceneSnapshot"
v36@0:8@16B24@28
v40@0:8Q16@24@?32
B36@0:8@16Q24B32
B40@0:8@16@24@32
v32@0:8q16q24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@36@0:8@16d24i32
v20@0:8i16
B36@0:8@16^@24B32
@40@0:8@16@24^@32
@24@0:8q16
@28@0:8B16Q20
v40@0:8^@16^@24@32
@"<TextEntryButtonViewDelegate>"
v32@0:8@16B24B28
v56@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24
@"PBSnapshotView"
@"PBAppSwitcherTitleView"
v40@0:8@16^@24^@32
v32@0:8@"PBSUserPresentationRequest"16@?<v@?Q@"<NSSecureCoding>"@"NSError">24
v40@0:8@"PBSUserPresentationRequest"16@"NSDictionary"24@?<v@?B@"<NSSecureCoding>"@"NSError">32
v24@0:8@"PBSUserPresentationRequest"16
v52@0:8@?16@24B32@36@44
v48@0:8@16Q24@32@40
@32@0:8Q16@24
Q40@0:8@16@24q32
@"<PBTextEntryViewControllerDelegate>"
@36@0:8@16B24@?28
@"UIVisualEffectView"
@"UICubicTimingParameters"16@0:8
@"UISpringTimingParameters"16@0:8
{CGPoint=dd}16@0:8
{CGPoint="x"d"y"d}
q32@0:8@16q24
@40@0:8@16@24q32
q32@0:8@"UICollectionView"16q24
@"UICollectionViewCell"32@0:8@"UICollectionView"16@"NSIndexPath"24
q24@0:8@"UICollectionView"16
@"UICollectionReusableView"40@0:8@"UICollectionView"16@"NSString"24@"NSIndexPath"32
B32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
@"NSArray"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSString"24q32
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
{CGPoint=dd}40@0:8@16{CGPoint=dd}24
v32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"UICollectionViewCell"24@"NSIndexPath"32
v48@0:8@"UICollectionView"16@"UICollectionReusableView"24@"NSString"32@"NSIndexPath"40
B48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
v48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
@"UICollectionViewTransitionLayout"40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"UICollectionViewLayout"32
B32@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24
v40@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
{CGPoint=dd}40@0:8@"UICollectionView"16{CGPoint=dd}24
B40@0:8@"UICollectionView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"PBAppSwitcherManager"16
v40@0:8@"PBAppSwitcherManager"16@"PBAppSwitcherItem"24@?<v@?B>32
B32@0:8@16B24B28
v32@0:8d16@?24
B20@0:8B16
{CGPoint=dd}24@0:8@16
v32@0:8{CGPoint=dd}16
@"PBAppSwitcherManager"
@"_PBAppSwitcherCollectionView"
@"UIInterpolatingMotionEffect"
@"UIPanGestureRecognizer"
@"UIViewPropertyAnimator"
@"<PBCancellable>"
@"NSSet"
@"PBSDisplayAssistantPresentationRequest"
@"PBDisplayManager"
@"_PBPresentedAssistantContext"
@"NSData"
@"PBFeatureInfoViewController"
@"OBPrivacySplashController"
@"OBPrivacyFlow"
B32@0:8Q16@24
@"PBRestrictionServiceRequest"
v36@0:8B16@20@?28
@32@0:8@16I24i28
B24@0:8q16
@"PCSimpleTimer"
v32@0:8@16I24i28
@"<PBMediaRemoteObserverDelegate>"
@"AVSpeechSynthesizer"
@48@0:8@16@24@32d40
@"XBApplicationSnapshotPredicate"
v24@0:8@"PBSMediaRemoteSiriContext"16
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
@"<PBSiriScreenActionManagerDelegate>"
v32@0:8d16@24
v24@0:8@"<PBSystemServiceNowPlayingDelegate>"16
v24@0:8@?<v@?BB>16
v32@0:8@"NSDictionary"16@?<v@?B>24
v24@0:8@?<v@?d>16
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?@"NSString"i>16
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@?<v@?B@"NSError">40
v24@0:8@"NSData"16
v24@0:8@?<v@?q>16
v24@0:8@?<v@?@"NSString">16
v32@0:8@"NSString"16@"NSString"24
v28@0:8B16@?<v@?B>20
v32@0:8d16@"NSURL"24
v32@0:8@"NSXPCListenerEndpoint"16@"NSString"24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSXPCListenerEndpoint"@"NSError">32
v24@0:8@?<v@?@"<PBSBulletinServiceInterface>">16
v24@0:8@?<v@?@"<PBSDiagnosticLogsServiceInterface>">16
v24@0:8@?<v@?@"<PBSOSUpdateServiceInterface>">16
v24@0:8@?<v@?@"<PBSAirPlayServiceInterface>">16
v24@0:8@?<v@?@"<PBSRestrictionServiceInterface>">16
v24@0:8@?<v@?@"<_PBSMediaRemoteServiceInternalInterface>">16
v24@0:8@?<v@?@"<PBSUserPresentationServiceInterface>">16
v24@0:8@?<v@?@"<PBSVideoSubscriberAccountServiceInterface>">16
v24@0:8@?<v@?@"<PBSDisplayManagerServiceInterface>">16
v24@0:8@?<v@?>16
v48@0:8q16d24d32@?<v@?>40
v32@0:8@"BKSAnimationFenceHandle"16@?<v@?>24
v48@0:8q16d24@"BKSAnimationFenceHandle"32d40
@"PBAirPlayService"
@"PBDiagnosticLogsService"
@"PBOSUpdateService"
@"PBRestrictionService"
@"PBUserPresentationService"
@"PBVideoSubscriberAccountService"
@"PBDisplayManagerService"
@"NSXPCConnection"
@"<PBSystemServiceNowPlayingDelegate>"
v32@0:8Q16@"NSString"24
B24@0:8@"PBMediaRemoteObserver"16
v24@0:8@"PBMediaRemoteObserver"16
v32@0:8@"PBMediaRemoteObserver"16@"NSDictionary"24
v40@0:8@16B24B28q32
v40@0:8@"PBLanguageChangeObserver"16B24B28q32
v32@0:8@"BSAuditToken"16@?<v@?B>24
@"FBSDisplayConfiguration"24@0:8@"BSAuditToken"16
@"UISDisplayContext"24@0:8@"BSAuditToken"16
@"UISApplicationSupportDisplayEdgeInfo"32@0:8@"BSAuditToken"16@"FBSDisplayConfiguration"24
B48@0:8@16@24@32@40
v40@0:8@16q24d32
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
Q32@0:8@16@24
B40@0:8@16@24@?32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
B20@0:8I16
v28@0:8I16@20
v36@0:8@16I24d28
B24@0:8^B16
B20@0:8i16
@"PBUserNotificationHandler"
@"PBSafeAreaWindow"
@"PBSerialNumberWindow"
@"BBDataProviderConnection"
@"UISApplicationSupportService"
@"NSMutableOrderedSet"
@"PBLanguageChangeObserver"
@"ASDRepairApplicationRequest"
@"PBAppTransitionContext"
@"PBAppSwitcherCollectionViewController"
@"FBApplicationUpdateScenesTransaction"
@"TVCSAccessory"
@"NSObject<OS_os_log>"
@40@0:8@16@24Q32
@40@0:8@16@"NSURLResponse"24^@32
{?="delegateForegroundUpdateComplete"b1"delegateReadyForFinalTransition"b1"delegateTransitionDidFail"b1}
@"BSAuditToken"
@"FBApplicationProcess"
@"<PBAppTransitionContextDelegate>"
@28@0:8@16I24
@36@0:8B16Q20@?28
v40@0:8@16i24B28@32
v36@0:8@16i24d28
v24@0:8@"PBSExternalControlSystem"16
v32@0:8@"PBSExternalControlSystem"16q24
v28@0:8@"PBSExternalControlSystem"16B24
v40@0:8@"PBSExternalControlSystem"16i24B28@"NSError"32
v28@0:8@"PBSExternalControlSystem"16i24
v36@0:8@"PBSExternalControlSystem"16i24d28
v32@0:8@"PBVolumeController"16Q24
@"PBSExternalControlSystem"
@"PBVolumeController"
B24@0:8@"PBSiriScreenActionManager"16
@"PBUIPluginController"
@"PBSiriScreenActionContextProvider"
@52@0:8q16@24@32@40B48
@"LSApplicationProxy"
@"PBSAppState"
v24@0:8@"FBProcess"16
v40@0:8@"FBProcess"16@"FBProcessState"24@"FBProcessState"32
v24@0:8@"FBApplicationProcess"16
v32@0:8@"FBApplicationProcess"16@"FBApplicationProcessExitContext"24
@"NSSet"16@0:8
v24@0:8@"<PBSDisplayStateObserver>"16
@"NSArray"24@0:8@?<B@?@"PBSDisplayMode">16
@"PBSDisplayMode"24@0:8@?<B@?@"PBSDisplayMode">16
@"PBSDisplayMode"28@0:8@"PBSDisplayMode"16B24
@"PBSDisplayMode"16@0:8
B24@0:8^@16
v40@0:8q16@24@?32
@"PBSDisplayMode"
@"NSUserDefaults"
@"PBCableSignalInfo"
v32@0:8@"FBProcessManager"16@"FBProcess"24
v64@0:8@16@24@32@40@48@?56
v40@0:8@"FBSystemService"16@"NSString"24@?<v@?q>32
v40@0:8@"FBSystemService"16@"FBSystemServiceOpenApplicationRequest"24@?<v@?@"NSError">32
v56@0:8@"FBSystemService"16@"NSString"24@"NSDictionary"32@"BSAuditToken"40@?<v@?q>48
v64@0:8@"FBSystemService"16@"NSURL"24@"NSString"32@"NSDictionary"40@"BSAuditToken"48@?<v@?q>56
v32@0:8@"FBSystemService"16@?<v@?B>24
v48@0:8@"FBSystemService"16@"NSSet"24@"BSAuditToken"32@?<v@?q>40
v32@0:8@"FBSystemService"16Q24
v28@0:8@"FBSystemService"16B24
v40@0:8@"FBSystemService"16@"FBSDataResetRequest"24@?<v@?B>32
v48@0:8@"FBWorkspace"16@"NSString"24@"FBSSceneClientSettings"32@?<v@?@"FBScene">40
v40@0:8@"FBWorkspace"16@"NSString"24@?<v@?>32
v40@0:8@"FBSDisplayMonitor"16@"FBSDisplayIdentity"24@"FBSDisplayConfiguration"32
v32@0:8@"FBSDisplayMonitor"16@"FBSDisplayIdentity"24
v44@0:8@16@24B32@?36
v52@0:8@16@24@32B40@?44
B36@0:8@16B24@28
@"FBSSystemService"
@"FBProcess"
@"FBSystemService"
@"FBSceneManager"
@"FBProcessManager"
@"FBDisplayManager"
v24@0:8@"BSTransaction"16
v32@0:8@"FBApplicationUpdateScenesTransaction"16@"FBApplicationProcess"24
v32@0:8@"FBApplicationUpdateScenesTransaction"16@"FBScene"24
@"TVSUIOSUpdateViewController"
?333333
?333333
?ffffff
?333333
@333333
?333333
?ffffff
?333333
?33s?K
?333333
---- ======== The system app is starting to initialize its UIApp ======== ----
%s - Failed to wake display %@
---- ======== The system app has initialized its UIApp ======== ----
---- ======== The system app is starting system app launching ======== ----
---- ======== The system app has initialized the external control (CEC) system ======== ----
---- ======== The system app did finish system app launching ======== ----
Processing chord event %{public}@, current chord:0x%lx start time:%f
new chord:0x%lx current chord:0x%lx ended:%d canceled:%d, 
Setting _processingSysdiagnoseViaChord
Clearing current chord at time %f.
Setting current chord:0x%lx at time:%f
%s: %s 0x%lx 0x%lx %s 0x%llx
%s: %s
Received physical button press
Sending %s Csmr_VoiceCommand event from sender 0x%llx to Siri
%s: forwarding
%s_BUTTON_%s  ts: %llu  now: %llu  delayed: %lld ticks (%0.4f ms); deltas since last event: ts: %lld (%0.4f ms)  now: %lld (%0.4f ms)
%s_BUTTON_%s  ts: %llu  now: %llu  delayed: %lld ticks (%0.4f ms); deltas since last event: ts: %lld (%0.4f ms)  now: %lld (%0.4f ms); deltas since down: ts: %lld (%0.4f ms)  now: %lld (%0.4f ms)
%s: device is asleep: %d
changing IdleModeEnabled to %s for scene of app %@
%s: notifying
setting IdleTimerDisabled to yes for app '%@'
setting IdleTimerDisabled to no for app '%@'
>>> forwardHIDButtonEventWithUsagePage: %u usage: %u type: %d senderID: 0x%llx
>>> sendHIDButtonEventWithUsagePage: %u usage: %u type: %d senderID: 0x%llx to %@ (%d)
Pre-blanking screen via BKS prior to sleep.
Received AirPlay request to wake
Event data sent from %{public}@, %{public}@
Handling first boot
Handling ATV restart
received SnapshotRequestAction, type Perform, for scene of app %@
received SnapshotRequestAction, type Invalidate, for scene of app %@
received SnapshotRequestAction, unknown type %ld, for scene of app %@
received DismissSceneAction for scene of app %@
received UnhandledMenuButton for %@
ignoring UnhandledMenuButton for %@
UnhandledMenuButton for %@ was handled by PBAppDelegate
UnhandledMenuButton causing deactivation of %@
UnhandledMenuButton for %@ left unhandled
received unknown action %@ for %@
app %@ scene update with diff %@
Observer handler for domain %@ invoked. We notify the photo caching daemon...
dismissScreenSaver handled: %d
Screen saver watchdog fired! Going back to dismissmed state.
---- ======== The system app is launching! Long live the system app! ======== ----
---- ======== (mach_absolute_time = %llu ticks, %.06f sec [%.03f ticks/sec, %u / %u]) ======== ----
---- ======== The system app is handling signal %d ======== ----
---- ======== The system app is ignoring signal %d ======== ----
---- ======== Attempt to set signal handler for %d impossible ======== ----
%{public}@
Failed to clear update log file: %{public}@
Failed to get size of update log file: %{public}@
failed to flush log file: %d
failed to close log file: %d
failed to open file %@: %d
ViewService took too long to complete. Continuing
ViewService completed normally
ViewService completed, but took too long
Region change: new country's (%{public}@ refresh rate (%.0f) is the same as previous' locale
Region change: Launching DA for new country: %{public}@
Region change: new country's (%{public}@ refresh rate (%.0f) changed but the TV does not have a matching locale mode for %{public}@
Region change: new country's (%{public}@ refresh rate (%.0f) changed and our current mode is already at that rate %{public}@
Increase volume for output context: %lu
Increase volume (System Music) from %f to %f
Decrease volume (System Music) from %f to %f
Set volume notifications enabled %d for category: %lu
Volume control available did change %d for %{public}s
Volume value did change %f for %{public}s
Picked routes did changed
Update Volume (System Audio):
  volumeAvailable: %d
  volume: %{public}@
 notificationsEnabled: %d
 includesHDMI: %d
 routes: %@
Update Volume (System Music):
  volumeAvailable: %d
  volume: %{public}@
 notificationsEnabled: %d
 includesHDMI: %d
 routes: %@
Volume Supported Changed (System Audio) to %d
Volume Supported Changed (System Music) to %d
Present Volume Bulletin (System Audio) with name: %{public}s volume: %f
Present Volume Bulletin (System Music) with name: %{public}s volume: %f
Failed to present screen saver, already in state %d
Failed to present screen saver, window not created
Present screen saver with options %{public}@
Present screen saver complete; success=%s
Failed to present screen saver, dismissing window
Failed to dismiss screen saver, not currently presenting
Dismiss screen saver with options %{public}@
Dismiss screen saver complete
Force dismissing screensaver
Force dismiss screensaver complete
Failed to mode switch for BSR: %{public}@
Use snapshot for Siri %d
Siri Showing Snapshot
Siri Showing Live UI
Failed transaction because a previous transition has not finished - ctxt: %{public}@
Failed transaction because the playback launch shroud is up
Failed transaction because the app shitcher is presented
Key window updated: %{public}@
displayManagerService invalidated %@
updateDisplayManagerWithRequest (service) %@
sleepDisplayWithReply (service)
wakeDisplayWithReply (service)
handleRegionChangeWithNewCountryCode:reply: (service)
presentDisplayAssistantWithRequest:reply: (service)
forgetDisplaysForDisplayAssistant (service)
resetPoorCableWarnings (service)
removeCableCheckHistory (service)
displayAssistantDidStartForKind (service)
displayAssistantDidCompleteForKind (service)
fetchCurrentDisplayStateWithReply (service)
enableModeSwitchingForDynamicRange (service)
enableModeSwitchingForFrameRate (service)
Failed to register global mode switch state notification [%x]
Checking if a mode switch is required for %{public}@: Simulator does not support mode switches
Preferred mode set to %{public}@
Performing mode switch for bundle identifier %{public}@
Native Mode Switching is not enabled
Native Mode Requested: Dynamic Range: %@, Frame Rate: %0.2f
Native Mode Requested: User selected display mode
No available display mode matched the requested criteria, no mode switch will occur
App uses game mode switching, setting preferred mode to %{public}@
App previously set requestedDisplayMode
Will attempt to match SDR color mode from: %{public}@
Display Mode Search Predicates: %{public}@
Found matching display mode: %{public}@
User Selected Mode: %{public}@
Looking for display mode with predicate: %{public}@, (matchDR: %d, matchRR: %d, canHandleHighBandwidth: %d)
New display mode requested while a mode switch was in progress: %{public}@
Preferred Video mode set to %{public}@
Current mode is not 1080p or higher and > 50Hz, no mode switch required
Modes are equal, no mode switch required
Going from HDR -> SDR, mode switch required
Going from SDR -> HDR, mode switch required
Current mode is < 50Hz, mode switch required
No conditions met, no mode switch required
Native mode switching, checking if modes are equal but object is nil: CurrentMode: %{public}@, Preferred Mode: %{public}@
Native mode switching, are modes equal: %d
Current SDR Dislay Mode: %{public}@
Received AVKit notification: %{public}@
Posting global mode switch state notification [%d]
Pending display mode request: %{public}@
AP: init
AP: Unsupported: HMUserPrivilegeRegular and NOT P2P
AP: Unsupported: HMUserPrivilegeAdministrator
AP: Changing local access type to: %@ (privilege: %@ P2P: %@)
AP: Changing local security type to: %@
AP: Updating Password - %@
%s: Setting AirPlay access type to %@ because the device is not part of a home.
AP: AP settings updated: access type: %@ security type: %@ || home: %@ privilege: %@ P2P: %@
AP: Updating Home with privilege: %@ P2P: %@
AP: %@ media p2p enabled: %@ (error: %@)
AP: %@ minimum user privilege: %@ (error: %@)
AP: Updating password
AP: %@ password (error: %@)
AP: Removing password
AP: HK password was already nil
AP: no Home detected
Determining whether to launch What's New
unable to load What's New %@
No WN
Incrementing scalar: %@
Starting to time: %@
startTimingForKey called before it was stopped: %@
%@ time: %f (%f total)
stopTimingForKey called for key that wasn't started: %@
Failed to enable diagnostic reporting.
Scheduling periodic trigger task to start in %f secs, repeat in %f secs.
Periodic data reporting triggered.
Reporting RecoveryMode data.
Apple TV log push requested.
Removing cache file:%{public}@
Failed to clear copied mediaserverd logs [%{public}@]
Copying:%{public}@ to:%{public}@
Failed to copy log for push: %{public}@ [%{public}@]
Successfully removed:%{public}@
Failed to clear log after copy: %{public}@ [%{public}@]
Failed to copy mediaserverd logs for push: %{public}@ [%{public}@]
No playback logs to push.
Failed to clear copied wifi logs [%{public}@]
Copying %{public}@ to %{public}@
WiFi logs unavailable: %{public}@
Failed to clear copied AirPlay logs [%{public}@]
AirPlay logs unavailable: %{public}@
No thermal logs to push.
Generating config logs...
Failed to get inverseDeviceID
Failed to generate additional logs
Log file missing during push: %{public}@
No log files to push.
Not reporting EDID logs - too soon since last report.
No EDID logs to report.
No EDID URL provided, can't report EDID data.
EDIDs to report: %lu.
No EDID URL provided, can't report CoreControl usage.
No Figaro URL provided for topic '%{public}@'
Figaro URL string invalid: %{public}@
Figaro Request URL invalid: %{public}@
Figaro Reporting to Splunk: %@
FAILED: Figaro reporting request:%{public}@ error: %{public}@
Succeeded: Figaro reporting request: %@
Button Count: BTRemote: %ld, IR: %ld, CEC: %ld, Keyboard: %ld, GC: %ld, Remote App: %ld
Language observer: Lockdown changed the locale
Language observer: Lockdown changed the language
Language observer: Buddy is ready for language change
Unable to save snapshot due to missing information: %@
Unable to find context host manager for context: %@
Invalid scale specified for saving a snapshot: %@
WALLPAPER: Rendered in %f s
Request For Snapshot %@
DeleteSnapshot :%@
Processing Image Operations Synchronously [START]
Processing Image Operations Synchronously [END]
GenerateWallpaper: Begin
GenerateWallpaper: Cancelled
SaveWallpaper.cancelled
GenerateWallpaper: End
GenerateWallpaper
SaveWallpaper: Begin with variant:%lu style:%lu
SaveWallpaper: Written to path %@
SaveWallpaper: Cancelled
SaveWallpaper: End
SaveWallpaper
SNAPSHOT: Begin %@
SaveSnapshot.generateImage.complete
SaveSnapshot.saveImage.complete
SNAPSHOT: Cancelled
SaveSnapshot.cancelled
SNAPSHOT: End %@
SaveSnapshot
bulletinService invalidated %@
windowManagerWillPresentBulletinViewController, no service! for viewController %@
applicationActivateBulletinViewController, no service! for viewController %@
applicationDismissBulletinViewController, no service! for viewController %@
applicationRetireBulletinViewController, no service! for viewController %@
applicationTerminateBulletinViewController, no service! for viewController %@
%@ removing bulletinViewController %@ for bulletin %@ bt %@
removing bulletin service %@ for viewController %@ bt %@
dealloc %@
adjusting %@ windowLevel to %f
adjusting %@ isHidden to %s
adjusting %@ _occluding to %s
creating occlusion scene
destroying occlusion scene
%s; dictation enabled: %s, keyboard on-screen: %s, keyboard hosted by PB: %s, blocking recognition: %s
Clearing HID event routers to prevent accidental input entering sleep (reason: %{public}@).
Sleeping the display (Feature:%{public}@ Setting:%d).
Scheduling installation of HID sleep-time event routers in %.1f sec
Installing sleep-time HID event routers
Clearing HID event routers to prevent accidental input entering wake (reason: %{public}@).
Waking the display (Feature:%{public}@ Setting:%d).
Unblanking screen via BKS prior to wake.
Scheduling restoration of normal HID event routers in %.1f sec
Restoring normal HID event routers
---- ======== The background window has been made visible ======== ----
Application '%{public}@' is not enabled, existing reasons are %{public}@)
Application '%{public}@' is not enabled, but do not know why (%d, %ld, %{public}@)
Setting badgeEnabled on %@ to %d
Connected to server and requesting current section state
Disconnected from server
bulletinViewController %@ calling proxy %@ begin presentation with bulletin %@
bulletinViewController %@ calling proxy %@ update with bulletin %@
%@ Bulletin viewService took too long to dismiss. Continuing
%@ Bulletin viewService completed normally
%@ Bulletin viewService completed, but took too long
bulletinViewController %@ calling proxy %@ dismiss with reason %@
bulletinViewController %@ viewService terminated with error %@
bulletinViewController %@ calling client completion. Success? %@
%@ %@ Error [%@]
%@ stopped
%@: disconnected from daemon
%@: failureType %@
%@: skipping
Process that requested CFUserNotification does not have the correct entitlement!: %@
Process that requested CFUserNotification does not have the correct entitlement! This will be enforced in a future release: %@
Received CFUserNotification from [%@]
Setting default location to kCLLocationCoordinate2DInvalid
Location Services Enabled
Checking CLAuthorizationStatus: %{public}@
Setting System Appearance: %ld
System set to Automatic appearance but location is not available, waiting for a location update
System set to PBSSystemAppearanceAutomatic, checking if a change is needed...
Location is invalid, system is set to PBSSystemAppearanceAutomatic but won't be updated
Checking if it's daylight: %d
%{public}@ specifies Light or Dark, effective style is %ld
%{public}@ specifies a preferred style, effective style is %ld
%{public}@ specifies an automatic style, effective style is %ld
WARN: Authorization status changed and no longer allows updates, CLAuthorizationStatus: %{public}@
Authorization status changed to %{public}@, starting location updates
Authorization status changed to %{public}@
Location Manager did update locations
ERROR: Location update failed: %{public}@
Screen saver will dimiss
AVKit sent a %{public}@
Updated location for daylight, turning off location updating
ERROR: Failed to update location for daylight, CLLocationCoordinate2D is invalid
Migrating from UIKit appearance settings to PBSSystemAppearance
Setting PineBoard location permissions to match Time Zone: %{public}@
Setting userInterfaceStyle to %{public}@ for sceneID: %{public}@
Preferred UIUserInterfaceStyle for %{public}@ is %ld
Trying to bless a nil virtual mode
Adding new special virtual mode: %{public}@ to set %{public}@
Could not archive a PBCableSignalInfo object: %{public}@
Could not unarchive a PBCableSignalInfo object: %{public}@
Bad resolution preferences - resetting.
Bad resolution preferences for display %{public}@ - resetting.
Saving resolution for display %{public}@ : %{public}@
Saving in memory resolution for display %{public}@ : %{public}@
Invalid mode %{public}@ for key: %{public}@ read from disk
Retrying launch of %@...
Killing %@ so that the launch test may begin
%s - Ressting cable history
%s (timer: %p) - Stopping cable monitoring
%s - Trying to set a polling override that is too low, using the min value: %.0f seconds
#Critical #SYSTEM %{public}@: Store returned useless response
Not starting now playing view service for %@ because now playing app is already focused
installAppWithMetadata (service) will install app with metadata %@
installAppWithMetadata (service) will start request %@
installAppWithMetadata (service) finished with good result.
installAppWithMetadata (service) finished with bad result.
installAppWithMetadata (service) got response %@
installAppWithMetadata (service) response had item %@
installAppWithMetadata (service) response item was successful.
installAppWithMetadata (service) response item was *not* successful.
installAppWithMetadata (service) response item has result for job %@ bundle ID %@
installAppWithMetadata (service) response item result has duplicate status.
installAppWithMetadata (service) response item result has success status.
installAppWithMetadata (service) response item result has failed status.
installAppWithMetadata (service) response item had error %@
installAppWithMetadata (service) got error %@
installAppWithMetadata (service) didn't have vendorName, bundleID, or buyParams: %@
Failed to find a valid sysdiagnose file after waiting. Nothing to report.
Failed to find a valid sysdiagnose file. Waiting a bit to try again...
Failed to locate Latest sysdiagnose archive via link. [%@]
Skipping %@ - in-progress sysdiagnose
Skipping %@ - not sysdiagnose file
Skipping %@ - not regular file
Choosing %@ - %@ is newer than %@
Not choosing %@ - not latest
Failed to get attributes for sysdiagnose %@. [%@]
Failed to locate latest sysdiagnose archive via scan.
Failed to upload sysdiagnose. %@  Response:  %@
Failed to remove sysdiagnose at %@ err %@
Successfully removed sysdiagnose at %@
userPresentationService invalidated %@
invalidate (service) dismissViewController
windowManagerWillPresentDialogViewController %@ service %@
presentUI (service) %@
presentUI (service) completed with reason %lu
presentUI (service) dismissHandler called
presentUI (service) terminationHandler called
presentUI (service) presentDialogViewController %@
presentUI (service) failed - presentation error: %@
messageUI (service) %@
dismissUI (service) %@
dismissUI (service) dismissViewController
view service prepared for request: %@
%@ removing remoteViewController %@ for request %@ bt %@
removing presentation service %@ for viewController %@ bt %@
Initial items(%lu) %@
Up double tapped, kill %@
Swiped up, kill %@
Items before update(%lu) %@
Delete index paths %@
Insert index paths %@
Items after update(%lu) %@
DA service: dismissing DA for old conetxt: %{public}@, going to new display: %{public}@
DA service: presenting upgrade assistant
DA service: presenting cable warning assistant
DA service: presented with display context: %{public}@
Failed to show the display assistant with display context: %{public}@, error: %{public}@
Error digesting the SHA for display %{public}@
Assertion '%{public}s' already checked out
Checked out (acquired) assertion '%{public}s'
Checked in (relinquished) assertion '%{public}s'
#Critical #SYSTEM %{public}@: Server can't find our account
#Critical #SYSTEM %{public}@: Unexpected response from server
Received event %@ on State %@
We need to cancel the current request %@
Cancelling one of the pending requests %@ in the queue
Enqueuing pending service request %@
Request %@ has already been enqueued.....
Dequeued next pending service request %@
No pending requests...
%s - Requested the screensaver view service successfully?: %d, error: %{public}@
%s - hasForegroundScene: %d
%s - shouldPresent: %d, options: %{public}@
Setting up initial screen sharing check.
Start observing external screen changes.
Stop observing external screen changes.
External Screen Change Notification: remote viewing is active.
External Screen Change Notification: remote viewing is not active.
Tearing down screen sharing session.
Resetting sharing bulletin state (is visible).
Remote viewing session will be allowed.
Remote viewing session will be cancelled.
Resetting sharing bulletin state (not visible).
Updating screen sharing HUD state (in: %lu current: %lu).
Screen sharing is active.  Displaying HUD.
Screen sharing inactive.
_nowPlayingInfoDidChange %@
_nowPlayingAppPlaybackStateDidChange %@
_nowPlayingAppDidChange %@
Presenting track change bulletin: %p
Scheduling _performMetadataUpdate
Busy, trying _performMetadataUpdate again in 0.5s
%s got MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync() result
%s got MRMediaRemoteGetPlaybackStateForPlayer() result
-[PBMediaRemoteObserver _update...] state: %d, pid: %d, title: %@
QA: PineBoard thinks that the system is%s playing media (%d, %@)
No URL for snapshot with path: %{public}@ sceneID: %{public}@ snapshot: %@
#Critical #SYSTEM Could not register for media remote service volume control notification
#Critical #SYSTEM Could not register for TV/AVR power control notification
Pin Dialog Requested by PBMediaRemoteService
Sleep request by %@ failed - not entitled.
Wake request by %@ failed - not entitled.
Fetch deviceIsAsleepWithResult by %@ failed - no result block.
Relaunch request by %@ failed - not entitled.
Reboot request by %@ failed - not entitled.
Sleep timeout set request by %@ failed - not entitled.
Sleep timeout get request by %@ failed - not entitled.
Screen saver activation by %@ failed - not entitled.
Screen saver deactivation by %@ failed - not entitled.
Air play activation request by %@ failed - not entitled.
CRD App launch request by %@ failed - not entitled.
Present now playing by %@ failed - not entitled.
Top purge request by %@ failed - not entitled.
Fetch of recent applications by %@ failed - not entitled.
Fetch of top application by %@ failed - not entitled.
Setting assistant audio input paths by %@ failed - not entitled.
Setting assistant strings request by %@ failed - not entitled.
Trying to perform screen action %@ on item: %@
Activating screen action: %@
Unable to find screen action item: %@
Performing Siri action by %@ failed - not entitled.
Send menu request by %@ failed - not entitled.
Send event data request by %@ failed - not entitled.
Setting effective user inteface style request by %@ failed - not entitled.
Kiosk app get request by %@ failed - not entitled.
Kiosk App BundleIdentifier changed to %@ by %@
Setting kiosk app request by %@ failed - not entitled.
Setting icon name by %@ failed - not entitled.
Activate Siri request by %@ failed - not entitled.
Start Siri listening request by %@ failed - not entitled.
Stop Siri listening request by %@ failed - not entitled.
Launch kiosk request by %@ failed - not entitled.
Fetch provisionedAppIdentifiers by %@ failed - not entitled.
Fetch disabledAdamIDs by %@ failed - not entitled.
Fetch applicationIdentifiersByBundleIdentifierMapping by %@ failed - not entitled.
Fetch enforceProvisioningOnSystemAppsEnabled by %@ failed - not entitled.
Fetch Paired Apple Remote State by %@ failed - not entitled.
Pair Apple Remote request by %@ failed - not entitled.
setShowingAudioNowPlayingUI: request by %@ failed - not entitled.
setWantsVolumeButtonEvents: request by %@ failed - not entitled.
Bulletin service proxy request by %@ failed - missing entitlement %@.
Diagnostic logs service proxy request by %@ failed - missing entitlement %@.
OS update service proxy request by %@ failed - missing entitlement %@.
AirPlay service proxy request by %@ failed - missing entitlement %@.
MediaRemote service proxy request by %@ failed - missing entitlement %@.
User presentation service proxy request by %@ failed - missing entitlement %@.
Video Subscriber Account service proxy request by %@ failed - missing entitlement %@.
---- ======== The system app is starting to finish launching ======== ----
---- ======== The system app is setting up audio routing ======== ----
---- ======== The system app did start remaining launch setup ======== ----
========== Since we have completed set up, wake up the photo sources caching daemon ===========
---- ======== The system app did finish remaining launch setup ======== ----
---- ======== (mach_absolute_time = %llu ticks, %.06f sec) ======== ----
---- ======== The system app did finish launching ======== ----
%s: %@
*** itms-services schemes are unsupported on %@ %@
%s: %d
%s no now-playing PID for command %d
%s sent media remote command %d (handled: %s); options: %@
%s NOT sending media remote command %d; options: %@
%s unhandled event
%s result: %s
Handling active source remote event
%s: %@ -> %@ %d
Remove Now Playing Trigger - Playing Music:%d Idle Disabled:%d
Add Now Playing Trigger - Playing Music:%d Idle Disabled:%d
---- ======== The system app is launching the kiosk app ======== ----
---- ======== The system app has finished launching the kiosk app ======== ----
We have completed set up. Now it's safe to launch the photo caching daemon....
---- ======== The system app has finished launching the kiosk app BUT.... ======== ----
We could not establish a connection to HeadBoard, launching without animations
Launching %@...
#Alert #SYSTEM Inhibiting %@ launch.
#Alert #SYSTEM Inhibiting Settings launch.
Launching TVSettings app...
%s; dictation enabled: %s, is Siri available: %s, keyboard on-screen: %s, should suggest: %s
%s;  %d %d   %d %d   %d %d %d %d   %d %d  => %s
%s; handled point = %d
%s: calculated senderID 0x%llx for current event
HK: init
%s: Setting lockdown device name to "%@".
%s: Setting accessory name to "%@".
%s: Failed to set accessory name. %@
%s: Updated accessory name.
%s: Changing home configuration state. New state: %@
%s: Found %ld homes.
%s: Failed to create default home. Error: %@
%s: Unable to find a suitable home for the device.
%s: Failed to create room. Room name: %@ Error: %@
%s: Failed to configure local accessory. Error: %@
%s: Configure local accessory complete.
configure local accessory
Failed to create path to boot count folder [%{public}@]
Incremented boot count to %d
Failed to increment boot count [%d]
Failed to close boot count file [%d]
Failed to open boot count file [%d]
Failed to clear boot count [%{public}@]
Boot count file cleared.
Boot count file not present - already cleared.
Ignoring request to play system sound [%u] as we are asleep
Reading boot count from %{public}@
Boot count:%d
Failed to read a valid count
RetailDemoMode: Start observing
RetailDemoMode: Stop observing
RetailDemoMode: Will configure for Apple Store
RetailDemoMode: Will configure for Channel
RetailDemoMode: Will disable
RetailDemoMode: Unexpected value: %@
RetailDemoMode: Relaunch
%s enabled:%d app:%@
%s:%@ isForeground:%d isRunningAsViewService:%d isTerminated:%d
Remove all for %@ (termination)
Move Play/Pause override from suspended to active for %@
Move Volume override from suspended to active for %@
Move Play/Pause override from active to suspended for %@
Move Volume override from active to suspended for %@
Foreground Apps: %@
Running View Services: %@
*Updated* Play/Pause override: %@
*Updated* Volume override: %@
%@ Finally got the background fetch task process assertion; sequenceNumber: %u, success: %@, alreadyFinishedTask: %@
%{public}@ background fetch task finishing; sequenceNumber: %u
%{public}@ created background fetch task; sequenceNumber: %u
%{public}@ finished background fetch task; sequenceNumber: %u result: %d response: %@
Volume does not need configuration (pref:%d configured:%d enabled:%d auto:%d transport:%ld).
Volume needs configuration.
Display mode changed. Posting policy update.
%s; enabled = %d
%s; prefer dictation = %d
Activating Dictation UI display (single tap)
Activating Siri plugin for UI display (single tap)
Activating dictation (press and hold)
Activating Siri plugin to start listening (press and hold)
Stopping dictation (press and hold)
Deactivating Siri plugin for listening
Siri Enabled: %s
Creating SiriPluginController from bundle com.apple.pinecrest.SiriSupport
%s; dictation enabled: %s, keyboard on-screen: %s, preferring dictation: %s
Read Siri OnScreenActions pref. Allow = %s
Creating onscreen context provider
Removing onscreen context provider
PIN required to perform CRD action
Failure to launch CRD App
Launching CRD App
Exiting CRD App
AirPlay service requested
AirPlay activity request by %@ failed - not entitled.
You cannot create and init a PBDisplayManager; use +sharedInstance.
!_TVInternalDebugAlwaysSaveMode enabled! - Looking for matching CA displayMode for %{public}@
Setting CADisplay mode to: %{public}@
Display mode change successful
Received mode update request %{public}@
Reset video settings update request
Mode update request will present DA with request %{public}@
Saving mode for next wake %{public}@
PBDisplayManager modes have been sorted:
*** DISPLAY CONNECTION LOST ***
*** DISPLAY CONNECTION DETECTED ***
Current display (%{public}@ attributes: %{public}@
Fallback mode is now: %{public}@
Establishing mode failure: %{public}@
Current mode is now: %{public}@
%{public}@%{public}s
Found Dolby Vision & Dolby Vision Low Latency modes, removing the former from PineBoard. --- Internal _TVPreferDolbyLowLatency is set
Found Dolby Vision & Dolby Vision Low Latency modes, removing the latter from PineBoard.
PBDisplayManager current special virtual modes count: %lu list:
%{public}@
PBDisplayManager input CA modes to filter & sort:
 This display does not have any modes that fit the PineBoard policy. Falling back to allowing all modes.
Unable to set display to default mode (no modes)
Establishing display mode from one-off memory cache: %{public}@ for display: %{public}@
Establishing preferred display mode from previous preference: %{public}@ for display: %{public}@
Failed to establish the preferred mode <%{public}@>, we'll try again %ld times
Establishing display mode from policy (respecting preferred refresh rate): %{public}@ for display: %{public}@
Establishing display mode from policy: %{public}@ for display: %{public}@
Failed to establish a display mode, blowing user selected preference away
Manually launching DA with request %{public}@
Display Assistant started for %{public}@ (kind: %{public}@
Display Assistant completed for %{public}@ (kind: %{public}@
Supressing initial cable warning because CC was run
Migrating the old tvOS 10 resolution prefs %{public}@ for display: %{public}@
Migrating the tvOS 11 seed resolution prefs %{public}@ for display: %{public}@
Migrating native mode switching options to EDID: %{public}@
Notifying display state change with new state:
Recomputing state from KVO notification
Focused process did change, ensuring the correct display mode
Screenshot requested, but not creating screenshot because snapshots are disabled
systemService:canActivateApplication:withResult: => Disabled because %@
Launching process "%@" in classic mode: %ld
*** ERROR: ignoring default - %@ value is unsupported type
*** ERROR: ignoring default - cannot compile %@ value into regular expression; %@
Launching process "%@" in %@ mode
launching %@, launchedByDeactivation: %s
starting app %@ scene %sbackgrounded
Process Manager launching %{public}@%{public}s, from: %{public}@, foreground: %{public}@, focused: %{public}@, switcherActive: %@
displayMonitor:didConnectIdentity:withConfiguration: '%{public}@', '%{public}@'
displayMonitor:didUpdateIdentity:withConfiguration: '%{public}@', '%{public}@'
displayMonitor:willDisconnectIdentity: '%{public}@'
Cancelling snapshots for %@ because we're taking new snapshots
Prefered style %lu not in supported styles %@, this is unexpected
Cancelling snapshots for %@ because we're moving to the foreground
%s - process to restore post sleep: %{public}@
%s - restoring process on wake: %{public}@
%s - bringing process to foreground: %{public}@
%s - brought process to foreground: %{public}@
setting app %@ scene to %sbackgrounded
#Alert #SYSTEM transaction:willLaunchProcess %{public}@
#Alert #SYSTEM transactionDidComplete %{public}@
#Alert #SYSTEM open application failure: %{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>allow-softwareupdated</key>
<true/>
<key>application-identifier</key>
<string>com.apple.PineBoard</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.BTServer.allowRestrictedServices</key>
<true/>
<key>com.apple.BTServer.appleMfgDataScanner</key>
<true/>
<key>com.apple.BTServer.programmaticPairing</key>
<true/>
<key>com.apple.BTServer.supportsPairing</key>
<true/>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.MobileAsset.SoftwareUpdate</key>
<true/>
<key>com.apple.QuartzCore.displayable-context</key>
<true/>
<key>com.apple.QuartzCore.global-capture</key>
<true/>
<key>com.apple.QuartzCore.secure-capture</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.SystemConfiguration.SCDynamicStore-write-access</key>
<true/>
<key>com.apple.accessibility.api</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.appletv.pbs.allow-reboot</key>
<true/>
<key>com.apple.appletv.pbs.allow-siri-actions</key>
<true/>
<key>com.apple.appletv.pbs.allow-sleep</key>
<true/>
<key>com.apple.appletv.pbs.display-manager-service-access</key>
<true/>
<key>com.apple.appletv.pbs.issue-data-reporter-service-access</key>
<true/>
<key>com.apple.assistant.client</key>
<true/>
<key>com.apple.atvcached.client</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.backboardd.launchapplications</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.bulletinboard.dataprovider</key>
<true/>
<key>com.apple.bulletinboard.observer</key>
<true/>
<key>com.apple.bulletinboard.settings</key>
<true/>
<key>com.apple.developer.associated-domains</key>
<array>
<string>webcredentials:www.icloud.com</string>
<string>webcredentials:www.apple.com</string>
<string>webcredentials:www.me.com</string>
</array>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.frontboard.app-badge-value-access</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.homekit.private-spi-access</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.locationd.authorizeapplications</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.multitasking.systemappassertions</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.multitasking.unlimitedassertions</key>
<true/>
<key>com.apple.osanalytics.otatasking-service-access</key>
<true/>
<key>com.apple.otacrashcopier.allowSubmitDiagnosticLogPathsWithIdentifier</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>CLIENT_ENTITLEMENT</string>
<string>PURGE_ENTITLEMENT</string>
<string>PURGEABLE_ENTITLEMENT</string>
<string>CANCEL_PURGE_ENTITLEMENT</string>
</array>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.allow-explicit-graphics-priority</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.CoreControl</string>
</array>
<key>com.apple.private.assets.change-daemon-config</key>
<true/>
<key>com.apple.private.cecd.control</key>
<true/>
<key>com.apple.private.cecd.observer</key>
<true/>
<key>com.apple.private.dmd.policy</key>
<true/>
<key>com.apple.private.externalaccessory.showallaccessories</key>
<true/>
<key>com.apple.private.hid.client.event-dispatch</key>
<true/>
<key>com.apple.private.kernel.darkboot</key>
<true/>
<key>com.apple.private.kernel.jetsam</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/BrickState</string>
<string>NULL/ActivationInfo</string>
<string>NULL/DeviceCertificate</string>
<string>NULL/ActivationPrivateKey</string>
</array>
<key>com.apple.private.memorystatus</key>
<true/>
<key>com.apple.private.mis.online_auth_agent</key>
<true/>
<key>com.apple.private.mobilestoredemo.enabledemo</key>
<array>
<string>Enroll</string>
<string>Manage</string>
</array>
<key>com.apple.private.security.no-sandbox</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceWillow</string>
</array>
<key>com.apple.private.xpc.launchd.app-server</key>
<true/>
<key>com.apple.remote-text-metadata</key>
<true/>
<key>com.apple.siri.client_lite</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.timed</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>fairplay-client</key>
<string>693001776</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>appleaccount</string>
<string>com.apple.certificates</string>
</array>
</dict>
</plist>
