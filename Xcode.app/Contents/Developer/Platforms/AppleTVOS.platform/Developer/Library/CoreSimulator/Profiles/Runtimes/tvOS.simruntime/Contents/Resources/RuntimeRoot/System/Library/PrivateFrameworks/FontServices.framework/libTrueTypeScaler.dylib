11cacheStrike
fpaZ
pamc
 tvc
mgpf
fylg
daeh
aehh
xtmh
acol
pxam
eman
tsop
perp
space
exclam
quotedbl
numbersign
dollar
percent
ampersand
quotesingle
parenleft
parenright
asterisk
plus
comma
hyphen
period
slash
zero
three
four
five
seven
eight
nine
colon
semicolon
less
equal
greater
question
bracketleft
backslash
bracketright
asciicircum
underscore
grave
braceleft
braceright
asciitilde
Adieresis
Aring
Ccedilla
Eacute
Ntilde
Odieresis
Udieresis
aacute
agrave
acircumflex
adieresis
atilde
aring
ccedilla
eacute
egrave
ecircumflex
edieresis
iacute
igrave
icircumflex
idieresis
ntilde
oacute
ograve
ocircumflex
odieresis
otilde
uacute
ugrave
ucircumflex
udieresis
dagger
degree
cent
sterling
section
bullet
paragraph
germandbls
registered
copyright
trademark
acute
dieresis
Oslash
plusminus
ordfeminine
ordmasculine
oslash
questiondown
exclamdown
logicalnot
florin
guillemotleft
guillemotright
ellipsis
Agrave
Atilde
Otilde
endash
emdash
quotedblleft
quotedblright
quoteleft
quoteright
divide
ydieresis
Ydieresis
fraction
currency
guilsinglleft
guilsinglright
daggerdbl
periodcentered
quotesinglbase
quotedblbase
perthousand
Acircumflex
Ecircumflex
Aacute
Edieresis
Egrave
Iacute
Icircumflex
Idieresis
Igrave
Oacute
Ocircumflex
Ograve
Uacute
Ucircumflex
Ugrave
dotlessi
circumflex
tilde
macron
breve
dotaccent
ring
cedilla
hungarumlaut
ogonek
caron
ravaravc tvcmgpfravffylgravgdaehaehhxtmhacolpxamperp
lppa
eurt
TrueType
xAA 3.0 (OFA 2)
tlfcnrkcspsccrfmrdrmpambpamchtaptpxg
.notdef
.null
nonmarkingreturn
space
exclam
quotedbl
numbersign
dollar
percent
ampersand
quotesingle
parenleft
parenright
asterisk
plus
comma
hyphen
period
slash
zero
three
four
five
seven
eight
nine
colon
semicolon
less
equal
greater
question
bracketleft
backslash
bracketright
asciicircum
underscore
grave
braceleft
braceright
asciitilde
Adieresis
Aring
Ccedilla
Eacute
Ntilde
Odieresis
Udieresis
aacute
agrave
acircumflex
adieresis
atilde
aring
ccedilla
eacute
egrave
ecircumflex
edieresis
iacute
igrave
icircumflex
idieresis
ntilde
oacute
ograve
ocircumflex
odieresis
otilde
uacute
ugrave
ucircumflex
udieresis
dagger
degree
cent
sterling
section
bullet
paragraph
germandbls
registered
copyright
trademark
acute
dieresis
notequal
Oslash
infinity
plusminus
lessequal
greaterequal
partialdiff
summation
product
integral
ordfeminine
ordmasculine
Omega
oslash
questiondown
exclamdown
logicalnot
radical
florin
approxequal
Delta
guillemotleft
guillemotright
ellipsis
nobreakspace
Agrave
Atilde
Otilde
endash
emdash
quotedblleft
quotedblright
quoteleft
quoteright
divide
lozenge
ydieresis
Ydieresis
fraction
currency
guilsinglleft
guilsinglright
daggerdbl
periodcentered
quotesinglbase
quotedblbase
perthousand
Acircumflex
Ecircumflex
Aacute
Edieresis
Egrave
Iacute
Icircumflex
Idieresis
Igrave
Oacute
Ocircumflex
apple
Ograve
Uacute
Ucircumflex
Ugrave
dotlessi
circumflex
tilde
macron
breve
dotaccent
ring
cedilla
hungarumlaut
ogonek
caron
Lslash
lslash
Scaron
scaron
Zcaron
zcaron
brokenbar
Yacute
yacute
Thorn
thorn
minus
multiply
onesuperior
twosuperior
threesuperior
onehalf
onequarter
threequarters
franc
Gbreve
gbreve
Idot
Scedilla
scedilla
Cacute
cacute
Ccaron
ccaron
dcroat
)] def
) TTMakeVariationFont
htap
AssureStrikeNodes
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FontParser_Sim/FontParser-228.6.2.3/TrueTypeScaler3/TTServer/CacheNodes.c
(keyMatchCode)strike.fFont->GetHash() == theCacheStrike->theFont->header.matchCode
ResolveCacheStrike: AssureStrikeNodes() failed!
ERROR: gs->CE2 OR gs->CE1 NULL(A)
ERROR: gs->CE2 OR gs->CE1 NULL(B)
ERROR: gs->CE0 NULL or ptNum out of range(A)
ERROR: gs->CE0 NULL or ptNum out of range(B)
ERROR: CE2 NULL(A)
ERROR: start or tmp16 beyond CE2->maxPointCount
ERROR: CE2 NULL(C)
ERROR: CE0, CE1 or CE2 NULL; RP1 out of range
ERROR: pt2 out of range
ERROR: rag1 out of range
ERROR: CE0, CE1 or CE2 NULL; pt1 or pt2 out of range
ERROR: ce0 or ce1 NULL; pt0 out of range
ERROR: ptNum out of range
ERROR: ce1 or ce2 NULL; pt1 or pt2 out of range
ERROR: element NULL; pt out of range(A)
ERROR: element NULL; pt out of range(B)
ERROR: ce0 or ce1 NULL; pt1 or pt2 out of range
ERROR: fnt_GETDATA - randomFntGetData: N == 0
ERROR: CE0 or CE1 NULL
ERROR: CE0 or CE1 NULL; pt0 or ptNum out of range
ERROR: globalGS->funcDef == 0
ERROR: globalGS->funcDef == 0(A)
ERROR: globalGS->funcDef == 0(B)
CHECK_ASSERTION: interpreter assertion failed "%s"
(glyph = %d)
ERROR: trying to pop below the stack base
ERROR: trying to pop an empty stack
Bad element ptr
CHECK_RANGE_INDEX: %d not in range (%d - %d), interpreter value out of range
ERROR: trying to push beyond the end of stack
ERROR: trying to access outside the stack
ERROR: invalid stack index
CHECK_PFPROJ: non-valid_pfProj (pfProj = %f)
ERROR: CE2 NULL(B)
ERROR: gxpoint out of range
CHECK_RANGE: %d not in range (%d - %d), interpreter value out of range
ERROR: trying to access beyond the inst array
ERROR: trying to access beyond the font data
CHECK_FDEF: %d is out of range (0 - %d)
CHECK_PROGRAM: %d is neither a fontProgramIndex(%d) nor preProgramIndex(%d)
r^i16@?0r^i8
B20@?0r^s8i16
Faulty glyph (id:%d) outline detected - replacing with a space/null glyph
 - %s
 - in memory font kind
 - unkown font kind
gs->fntCallStack overage
\004
0123456789ABCDEF
ERROR: fnt_SDPVTL: gs->CE0 NULL(B)
ERROR: arg1 or arg2 out of range(CE0)
ERROR: arg1 or arg2 out of range(CE1)
ERROR: arg1 out of range(CE2)
ERROR: elements[GLYPHELEMENT] == NULL
fnt_DEBUG: DEBUG opcode: %08lX
ERROR: fnt_UTP: gs->CE0 NULL(B)
ERROR: fnt_ADJUST: gs->CE0 NULL(B)
ERROR: fnt_FLIPPT: gs->CE0 NULL(B)
ERROR: fnt_FLIPRGON: gs->CE0 NULL(B)
ERROR: fnt_FLIPRGOFF: gs->CE0 NULL(B)
ScalerMemoryOFA2.c: FindABlock didn't!
r*16@?0r*8
*16@?0*8
%.15f
a%02x
a%04x
gid%d
%.4f
.notdef
%!FontType1-1.0: ^s ^d.^d
%!PS-TrueTypeFont-^d-^d-2
14 dict begin/FontName /^s def
/PaintType 0 def
/FontType 3 def
/FontType 42 def
/FontType 1 def
/Encoding 
readonly def
/FontMatrix matrix def
/FontBBox[^i ^i 1 index div ^i 2 index div ^i 3 index div ^i 5 -1 roll div]cvx def
/FontMatrix [ ^f 0 0 ^f 0 0 ] def
/FontBBox{^i ^i ^i ^i}def
/UniqueID ^i def
/sfnts [<
/sfnts [(
00><
00>] def
/CharStrings ^i dict dup begin
/^s ^i def
 end readonly def
/TrueState 271 string def TrueDict begin sfnts save 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt cvi 0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt cvi 3 -1 roll restore TrueState initer end
/BuildChar{exch begin Encoding 1 index get CharStrings dup 2 index known{exch}{exch pop /.notdef}ifelse get dup xcheck{currentdict systemdict begin begin exec end end}{exch pop TrueDict begin /bander load cvlit exch TrueState render end}ifelse end} bind def
currentdict dup/FontName get exch definefont pop end
256 array 0 1 255{1 index exch/.notdef put}for
dup ^i /^s put
currentdict currentfile eexec
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
dup/Private 13 dict dup begin/RD{string currentfile exch readstring pop}executeonly def/ND{noaccess def}executeonly def/NP{noaccess put}executeonly def/BlueValues[]def/MinFeature{16 16}def/password 5839 def/OtherSubrs[{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{16384 div 4 1 roll 16384 div 4 1 roll 16384 div 4 1 roll 16384 div 4 1 roll 0 0 matrix astore matrix currentmatrix exch concat}executeonly{setmatrix}executeonly]noaccess def
/Subrs 
 array
dup 
 RD 
2 index/CharStrings 
 dict dup begin
/.notdef 8 RD 
end end readonly put
noaccess put
dup/FontName get exch definefont pop
mark currentfile closefile
systemdict/product 2 copy known{get dup(LaserWriter IIf)eq exch(LaserWriter IIg)eq or version(2010.113)eq and not}{pop pop true}ifelse{/UniqueID ^i def}if
userdict/TTMakeVariationFont known userdict begin/TTMakeVariationFontDefined exch def end
TTMakeVariationFontDefined{save}if userdict begin/TTMakeVariationFont{exch dup length 1 add dict exch{exch dup dup/FID ne exch/UniqueID ne and{2 index 4 1 roll exch put}{pop pop}ifelse} forall begin/Variations exch def currentdict end/GXVariationfont exch definefont} bind def end TTMakeVariationFontDefined{restore}if
00> TTMakeVariationFont
/FontInfo 1 dict dup begin
/FSType ^i def
end readonly def
14 dict dup begin
/FontType 3 def
/PaintType 0 def
/StrokeWidth 0 def
/FontMatrix[1 0 .25 1 0 0]def
/FontBBox[^d ^d ^d ^d]def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
/BuildChar{exch begin Encoding exch get CharStrings dup 2 index known{exch}{exch pop /.notdef}ifelse get dup xcheck{currentdict systemdict begin begin exec end end}{dup 0 get 0 2 index 1 4 getinterval aload pop setcachedevice dup 6 get exch dup 5 get 3 -1 roll true yopmatrix dup 4 6 index 7 get put dup 5 6 index 8 get put 5 -1 roll 9 1 getinterval cvx imagemask}ifelse end}bind def
/yopmatrix [^i 0 0 ^i 0 0] def
/yopmatrix[^i 0 ^i .25 mul ^i 0 0]def
/^s [^d ^d ^d ^d ^d ^i ^i ^d ^d <
/^s [^d ^d ^d ^d ^d ^i ^i ^d ^d (
>]def
)]def
end def end
/^s exch definefont pop
/GetShort {2 copy get 256 mul
3 1 roll
1 add
get add
} bind def
/SignedByte {dup 127 gt {256 sub
} if
} bind def
/LocalVariables 3 dict dup begin/theString null def
/strInd 0 def
/doingY false def
end def/DrawGlyph {exec
LocalVariables begin
/theString exch def
/strInd 0 def
theString strInd GetShort
/strInd strInd 2 add def
{theString strInd GetShort
/strInd strInd 2 add def
dup 0 gt {
1 sub 2 mul
theString strInd get SignedByte
theString strInd 1 add get SignedByte moveto
/strInd strInd 2 add def
/doingY false def
dup strInd add
exch
theString strInd 3 -1 roll getinterval
{SignedByte
doingY {rlineto /doingY false def}
 {/doingY true def} ifelse
} forall
closepath
/strInd exch def
} if
} repeat
PaintType 2 eq { StrokeWidth
setlinewidth stroke
} {eofill
} ifelse
} bind def
/BuildChar{exch begin Encoding exch get CharStrings dup 2 index known{exch}{exch pop /.notdef}ifelse get
dup 0 get
3 -1 roll
dup 1 get exch dup 2 get exch dup 3 get exch dup 4 get exch
7 1 roll
setcachedevice
yopmatrix matrix invertmatrix concat
9 get DrawGlyph
end}bind def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
%APLT1End
