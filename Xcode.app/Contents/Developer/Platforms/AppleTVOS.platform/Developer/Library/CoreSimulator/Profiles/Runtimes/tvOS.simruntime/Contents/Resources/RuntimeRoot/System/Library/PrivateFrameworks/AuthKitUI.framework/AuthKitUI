init
copy
componentsWithURL:resolvingAgainstBaseURL:
host
path
stringByAppendingString:
_matchInputAgainstPaths:
numberWithBool:
countByEnumeratingWithState:objects:count:
hasPrefix:
initWithWhitelistedPaths:
shouldAllowRequest:
.cxx_destruct
_whiteListedPaths
alloc
initWithUUIDString:
_initWithIdentifier:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
presentBasicLoginUIWithCompletion:
dismissBasicLoginUIWithCompletion:
presentLoginAlertWithError:title:message:completion:
presentSecondFactorUIWithCompletion:
dismissSecondFactorUIWithCompletion:
presentSecondFactorAlertWithError:title:message:completion:
presentNativeRecoveryUIWithContext:completion:
dismissNativeRecoveryUIWithCompletion:
presentServerProvidedUIWithConfiguration:completion:
dismissServerProvidedUIWithCompletion:
presentKeepUsingUIForAppleID:completion:
dismissKeepUsingUIWithCompletion:
initWithSurrogateID:
initWithNibName:bundle:
initWithUsername:password:
loadView
view
_handleMenuRecognizer:
initWithTarget:action:
_setButtonType:
setDelegate:
addGestureRecognizer:
viewWillAppear:
username
length
password
setState:
signInDelegate
signInViewControllerDidPresent:
viewWillDisappear:
isBeingDismissed
ak_cancelAction
didPerformAction
performCancelAction
setDidPerformAction:
signInViewControllerWillDismiss:
viewDidDisappear:
signInViewControllerDidDismiss:
state
_showUsernameEntryViewController
_showPasswordEntryViewController
ak_authenticateAction
_showActivityIndicatorViewController
performAuthenticateAction
raise:format:
_showCredentialEntryViewControllerForState:
bundleForClass:
localizedStringForKey:value:table:
reason
formattedUsernameFromUsername:
stringWithFormat:
signInButtonString
textField
setAutocapitalizationType:
setAutocorrectionType:
setEnablesReturnKeyAutomatically:
setKeyboardType:
setReturnKeyType:
setSecureTextEntry:
setPlaceholder:
setText:
_textFieldTextDidChange:
addTarget:action:forControlEvents:
_titleStringAttributes
initWithString:attributes:
setTitle:
_messageStringAttributes
setMessage:
setTopAccessoryView:
buttonWithType:
text
setEnabled:
setTitle:forState:
_submitButtonPressed:
setSubmitButton:
submitButton
sizeToFit
setBottomAccessoryView:
_showChildViewController:
setActivityText:
setActivityIndicatorDelay:
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
addChildViewController:
bounds
setFrame:
addSubview:
didMoveToParentViewController:
title3Font
listTitleTextColor
clearColor
dictionaryWithObjects:forKeys:count:
bodyFont
childViewController
bottomAccessoryView
setUsername:
setPassword:
isUsernameEditable
traitCollection
userInterfaceStyle
topAccessoryView
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
textEntryControllerDidFinish:
resetAuthenticatingState
traitCollectionDidChange:
setAk_cancelAction:
setAk_authenticateAction:
setReason:
setSignInButtonString:
setSignInDelegate:
setIsUsernameEditable:
setChildViewController:
menuRecognizer
setMenuRecognizer:
_currentTitle
_currentSubtitle
_isUsernameEditable
_didPerformAction
_ak_cancelAction
_ak_authenticateAction
_username
_password
_reason
_signInButtonString
_signInDelegate
_childViewController
_menuRecognizer
_state
initWithFrame:
setTranslatesAutoresizingMaskIntoConstraints:
generatorFieldFont
setFont:
setTextAlignment:
addObject:
setContentCompressionResistancePriority:forAxis:
setContentHuggingPriority:forAxis:
passcodeFieldTapped:
defaultCenter
_updateFonts:
addObserver:selector:name:object:
removeObserver:name:object:
dealloc
setNeedsUpdateConstraints
objectAtIndexedSubscript:
substringWithRange:
deactivateConstraints:
constraintsWithVisualFormat:options:metrics:views:
addObjectsFromArray:
firstObject
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
metricsForTextStyle:
scaledValueForValue:
setObject:forKey:
numberWithDouble:
activateConstraints:
updateConstraints
firstGeneratorField
stringValue
postNotificationName:object:userInfo:
setString:
_syncStringValueToLabels
emitCodeEnteredNotification
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
becomeFirstResponder
activeKeyboard
setReturnKeyEnabled:
isEqualToString:
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:
appendString:
deleteCharactersInRange:
canBecomeFirstResponder
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
fontWithDescriptor:size:
autocapitalizationType
autocorrectionType
spellCheckingType
setSpellCheckingType:
smartQuotesType
setSmartQuotesType:
smartDashesType
setSmartDashesType:
smartInsertDeleteType
setSmartInsertDeleteType:
keyboardType
keyboardAppearance
setKeyboardAppearance:
returnKeyType
enablesReturnKeyAutomatically
isSecureTextEntry
textContentType
setTextContentType:
insertText:
deleteBackward
hasText
viewForFirstBaselineLayout
viewForLastBaselineLayout
setStringValue:
setPasscodeFieldDisabled:
generatorFields
setGeneratorFields:
activeConstraints
setActiveConstraints:
_stringValue
_tapGestureRecognizer
_passcodeFieldDisabled
_generatorFields
_activeConstraints
contentContainerView
setTitleText:
authenticationContext
_message
setMessageText:
updateViewConstraints
setWantsBaselineOffset:
messageText
boundingRectWithSize:options:attributes:context:
baselineOffset
descender
extensionContext
inputItems
ak_context
setAuthenticationContext:
_configureTitleHeaderView
_configureCodeGenView
_updateFontContstraints:
systemLayoutSizeFittingSize:
setPreferredContentSize:
viewDidAppear:
layer
animation
setMass:
setStiffness:
setDamping:
setDuration:
setVelocity:
setFillMode:
numberWithFloat:
setFromValue:
setToValue:
functionWithName:
setValueFunction:
functionWithControlPoints::::
setTimingFunction:
setKeyPath:
addAnimation:forKey:
resignFirstResponder
animationDidStart:
animationDidStop:finished:
jiggleAView
clearSecondFactorEntry
generatedCode
codeGeneratorView
setCodeGeneratorView:
titleHeaderViewController
setTitleHeaderViewController:
_codeGeneratorView
_titleHeaderViewController
_authenticationContext
setNumberOfLines:
titleText
_setHyphenationFactor:
setPreferredMaxLayoutWidth:
_configureMessageLabel
array
mainScreen
arrayWithObjects:count:
_defaultTraitCollection
imageNamed:inBundle:compatibleWithTraitCollection:
initWithImage:
setContentMode:
_configureBannerImage
setBannerImage:
bannerImage
bannerView
setBannerView:
titleLabel
setTitleLabel:
messageLabel
setMessageLabel:
_bannerImage
_titleText
_messageText
_bannerView
_titleLabel
_messageLabel
setView:
viewWillLayoutSubviews
_initWithNibName:bundle:
iforgotButton
iForgotButtonWasTapped:
removeTarget:action:forControlEvents:
createAppleIDButton
createAppleIDButtonWasTapped:
_passwordDelegate
_setPasswordDelegate:
_prefillAuthFields
_updateSignInFieldStatuses
viewDidLoad
allTargets
count
signInButton
signInButtonWasTapped:
appleIDField
setRowIdentifier:
passwordField
entryDescription
entryField
setAdjustsFontSizeToFitWidth:
_appleIDTextFieldDidChange:
_passwordTextFieldDidChange:
setHidden:
context
_updateVibrancyAndBlurInTextFields
_isAccountModificationRestricted
_updatePlaceholderIfNeeded
_updateSignInButtonState
sharedBag
isPhoneNumberSupportedConfig
_isSignInAllowed
fieldBackgroundColor
setUsesVibrancy:
setBlurEffectStyle:
setFieldBackgroundColor:
_beginAuthenticationIfPossibleWithOption:
_startBusyWorkUI
ak_errorWithCode:
_beginAuthenticationIfPossibleWithOption:withUsername:password:
wantsAuthenticationProgress
spinner
startAnimating
stopAnimating
animateWithDuration:animations:completion:
isHidden
_hidebusyWorkUI
_setPasswordFieldHidden:animated:
textFieldShouldBeginEditing:
textFieldDidBeginEditing:
textFieldShouldEndEditing:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textField:shouldChangeCharactersInRange:replacementString:
textFieldShouldClear:
textFieldShouldReturn:
context:needsPasswordWithCompletion:
secondaryButtonTitle
setSecondaryButtonTitle:
tertiaryButtonTitle
setTertiaryButtonTitle:
setSecondaryButtonTarget:action:
setTertiaryButtonTarget:action:
setContext:
usesVibrancy
blurEffectStyle
setWantsAuthenticationProgress:
primaryButtonTitle
loginFieldsContainer
setLoginFieldsContainer:
setAppleIDField:
setPasswordField:
setSignInButton:
setIforgotButton:
setCreateAppleIDButton:
setSpinner:
_usesDarkMode
_usesVibrancy
_blurEffectStyle
_secondaryButtonTitle
_tertiaryButtonTitle
_context
_passwordRequiredCompletion
_wantsAuthenticationProgress
_primaryButtonTitle
_fieldBackgroundColor
_loginFieldsContainer
_appleIDField
_passwordField
_signInButton
_iforgotButton
_createAppleIDButton
_spinner
setUsesDarkMode:
usesDarkMode
_setPasswordFieldHiddenIfNeeded
_requiresPasswordInput
isEphemeral
sharedConnection
effectiveBoolValueForSetting:
isAuthInProgress
_canBeginAuthenticationWithOption:
setAuthInProgress:
delegate
_setPassword:
setNeedsCredentialRecovery:
setNeedsNewAppleID:
setAuthenticationType:
authenticationController
_provideDelegateWithAuthResults:error:
authenticateWithContext:completion:
signInViewController:didAuthenticateWithResults:error:
mutableCopy
_initWithAuthController:
_authenticationController
_authInProgress
_delegate
_commonInit
initWithCoder:
textFieldStyle
_setupInlineEntryStyleViews
_setupAlertStyleViews
_fieldTextColor
setTextColor:
isEnabled
_backgroundImageForRowIdentifier:blurEffectStyle:backgroundColor:
_cachedImageForRowIdentifier:blurEffectStyle:backgroundColor:usingBlock:
effectWithStyle:
effectForBlurEffect:
initWithEffect:
contentView
insertSubview:atIndex:
_setupLabelAndFieldStyles
blackColor
colorWithWhite:alpha:
_systemMidGrayTintColor
_placeholderLabel
setPriority:
_setupBackgroundViewConstriants
drawFillForStyle:pathRect:roundedCorners:cornerRadius:backgroundColor:
drawStrokeForStyle:pathRect:roundedCorners:cornerRadius:pathSegments:
resizableImageWithCapInsets:
imageWithRenderingMode:
_roundedRectBezierPath:withRoundedCorners:cornerRadius:segments:legacyCorners:
scale
setLineWidth:
setUsesEvenOddFillRule:
stroke
whiteColor
colorWithAlphaComponent:
fill
removeAllObjects
objectForKeyedSubscript:
setObject:forKeyedSubscript:
setTextFieldStyle:
rowIdentifier
visualEffectView
setVisualEffectView:
backgroundImageView
setBackgroundImageView:
constraints
setConstraints:
_entryDescription
_entryField
_textFieldStyle
_rowIdentifier
_visualEffectView
_backgroundImageView
_constraints
ak_idpWebViewWithFrame:idpHandler:
webView
setupTitleView
idpHandler
configuration
request
_setNavigationTitle:
setEdgesForExtendedLayout:
loadRequest:
cancel
currentDevice
userInterfaceIdiom
navigationController
navigationBar
setBackgroundImage:forBarMetrics:
_setHidesShadow:
bundleWithIdentifier:
imageNamed:inBundle:
setSecureIconView:
secureIconView
systemGreenColor
setTintColor:
setAlpha:
title
_preferredFontForTextStyle:maximumContentSizeCategory:
initWithArrangedSubviews:
setTitleStackView:
titleStackView
setSpacing:
navigationItem
setTitleView:
_cancelBarButtonPressed:
initWithBarButtonSystemItem:target:action:
setLeftBarButtonItem:
setPrompt:
hasOnlySecureContent
animateWithDuration:animations:
IDPHandler:didStartLoadingPageInWebView:
IDPHandler:didFinishLoadingPageInWebView:
initWithIDPHandler:
setIdpHandler:
_webView
_idpHandler
_secureIconView
_titleStackView
_assertValidPresentingViewController
signInViewController
defaultButtonString
setModalTransitionStyle:
presentingViewController
presentViewController:animated:completion:
alertControllerWithTitle:message:preferredStyle:
actionWithTitle:style:handler:
addAction:
dismissViewControllerAnimated:completion:
setAk_regenerateCodeAction:
integerValue
numberWithInteger:
setAk_codeEnteredAction:
presentedViewController
domain
code
jiggleDigitField
contextDidPresentLoginAlertController:
contextWillDismissLoginAlertController:
contextDidDismissLoginAlertController:
_cleanUpBasicLoginWithCompletion:
setSignInViewController:
_signInViewController
resourceLoadDelegate
completeWithError:
completeWithFinalResponse:
presentationType
_headerValueFromType:
setValue:forHTTPHeaderField:
signRequest:
signalFromServerResponse:
serverDataHarvester
harvestDataFromServerHTTPResponse:
_completeWithResponse:additionalData:error:
harvestedData
allHeaderFields
ac_secureCodingError
tearDownContext
initWithRequestConfiguration:completion:
handleAuthKitActionAttribute:
processResponse:
completeWithError:additionalData:
serverUIDelegate
initiatingURL
_serverUICompletion
_latestReadResponse
_configuration
_serverUIDelegate
_serverDataHarvester
_initiatingURL
indexSetWithIndex:
initWithNumberOfDigits:separatorIndexes:
_resendCode:
setAccessoryView:
removeObserver:
viewDidLayoutSubviews
pinViewController
promptLabel
digitGroupView
shake
ak_regenerateCodeAction
performRegenerateCodeAction
ak_codeEnteredAction
performCodeEnteredAction
digitEntryViewControllerDidCancel:
digitEntryViewControllerDidFinish:
codeEntryObserver
setCodeEntryObserver:
_ak_regenerateCodeAction
_ak_codeEnteredAction
_pinViewController
_codeEntryObserver
scannerWithString:
scanHexInt:
colorWithRed:green:blue:alpha:
ak_colorWithServerRGBRepresentation:
_valueForFieldWithID:inObjectModel:
serverInfo
displayedPages
lastObject
hasTableView
_valueForTextFieldFromPage:rowID:
passcodeViewOM
attributes
passcodeField
tableViewOM
sections
rows
control
valueForFieldWithID:
initWithObjectModel:
_objectModel
nonPersistentDataStore
setWebsiteDataStore:
setSuppressesIncrementalRendering:
setMediaTypesRequiringUserActionForPlayback:
initWithFrame:configuration:
setNavigationDelegate:
setPreferredStyle:
setAlertStyle:
_setupViewControllerForAlertStyle
_removeAllTextFields
setPreferredAction:
alertStyle
_setupViewControllerForDefaultStyle
_setupViewControllerForNonEditableUsernameFieldStyle
_setupViewControllerForUserOrCreateAppleIDStyle
_setupViewControllerForIForgotStyle
_setupViewControllerForSecondFactorEntryStyle
stringByReplacingOccurrencesOfString:withString:
textFields
authenticateButtonTitle
_syncUsernameAndPasswordPropertiesWithTextFieldContent
authenticateAction
_actionWithTitle:descriptiveText:image:style:handler:shouldDismissHandler:
_wrappedCancelAction
_setActions:
authenticateTitle
_interpolatedReasonString
setBorderStyle:
setBackgroundColor:
addTextFieldWithConfigurationHandler:
isMultiUserMode
ak_passwordRecoveryButton
dismissAndShowiForgot
setRightViewMode:
setRightView:
_setupAuthenticateAndCancelButtons
useIDAction
createIDAction
setContentViewController:
forgotIDAction
forgotPasswordAction
contentViewController
mainQueue
codeEnteredAction
userInfo
addObserverForName:object:queue:usingBlock:
regenerateCodeAction
ak_jiggleAnimation
basicLoginAlertControllerWillDismiss:
basicLoginAlertControllerDidDismiss:
basicLoginAlertControllerDidPresent:
_beginPinningInputViews
actions
_isPinningInputViews
_endPinningInputViews
initWithAlertStyle:
setAuthenticateTitle:
setAuthenticateButtonTitle:
_jiggleTheAlert
disablesAutomaticKeyboardDismissal
setAuthenticateAction:
setCreateIDAction:
setUseIDAction:
setForgotIDAction:
setForgotPasswordAction:
setRegenerateCodeAction:
setCodeEnteredAction:
setGeneratedCode:
_alertStyle
_ak_createIDAction
_ak_useIDAction
_ak_forgotIDAction
_ak_forgotPasswordAction
_ak_username
_ak_password
_ak_title
_ak_reason
_ak_authenticateButtonTitle
_generatedCode
clientInfo
_harvestDataFromClientInfo:withExtractor:
harvestIDMSRecoveryInfoFromClientInfo:
_harvestIDMSRecoveryHeadersInfo:
harvestIDMSRecoveryInfoFromHeaders:
harvestDataFromServerUIObjectModel:
harvestDataFromCompanionResponse:
_harvestedData
_presentBasicLoginUIAlertWithCompletion:
_contextWillBeginPresentingSecondaryUI
requestType
_presentServerProvidedUIWithConfiguration:completion:
_presentIDPProvidedUIWithConfiguration:completion:
_contextDidEndPresentingSecondaryUI
_dismissServerProvidedUIWithCompletion:
contextWillBeginPresentingSecondaryUI:
contextDidEndPresentingSecondaryUI:
authenticationType
isListeningForHSATokenAutoFill
stopListeningForHSATokenAutoFill
shouldAllowAppleIDCreation
serviceType
_interpolatedReasonWithBlame
_cleanUpBasicLogin
setShouldAllowAppleIDCreation:
_presentLoginAlertWithError:title:message:waitForInteraction:completion:
deviceSpecificLocalizedStringWithKey:
alertDelegate
displayAlertForContext:error:completion:
forceInlinePresentation
_remoteUIController
setHostViewController:
setHandlerForElementName:handler:
loadRequest:completion:
_contextWillDismissLoginAlertController
initWithConfiguration:withCompletionHandler:
showViewController:sender:
_contextDidPresentLoginController
initWithRootViewController:
_navController
viewControllers
containsObject:
accountRecoveryControllerWithPresentingViewController:
setForceInlinePresentation:
topViewController
httpHeadersForRemoteUI
enumerateKeysAndObjectsUsingBlock:
_isDeferrableFinalResponseHarvested
isResponseFinal:
errorWithDomain:code:userInfo:
willPresentModalNavigationController:
numberWithUnsignedInteger:
defaultPages
setLeftNavigationBarButtonItem:
_setUseCustomBackButtonAction:
_handleBackButtonTap:
initWithTitle:style:target:action:
setBackBarButtonItem:
protectionSpace
authenticationMethod
serverTrust
isValidCertificateTrust:forHostname:
defaultSessionConfiguration
proxiedDevice
anisetteDataProvider
setAnisetteDataProvider:
setPairedDevice:
set_appleIDContext:
setSessionConfiguration:
setNavigationController:
remoteUIStyle
setStyle:
startListeningForHSATokenAutoFill
setHidesBackButton:
_contextDidDismissLoginAlertController
remoteUIController:shouldLoadRequest:redirectResponse:
remoteUIController:objectModel:shouldDisplayNamedElement:page:
remoteUIController:didFinishLoadWithError:
remoteUIController:didReceiveHTTPResponse:
remoteUIController:didReceiveChallenge:completionHandler:
remoteUIController:willPresentObjectModel:modally:
remoteUIController:didPresentObjectModel:modally:
remoteUIController:didRefreshObjectModel:
remoteUIController:didRemoveObjectModel:
remoteUIController:willPresentModalNavigationController:
remoteUIController:didDismissModalNavigationWithObjectModels:
remoteUIControllerDidDismiss:
remoteUIController:createPageWithName:attributes:
remoteUIController:didReceiveObjectModel:actionSignal:
remoteUIController:willLoadRequest:
_isSatisfyingPasswordRequirements
cdpUiProvider
setPresentingViewController:
setAlertDelegate:
_topViewControllerOnLoadStart
_overrideFirstActionSignal
_basicLoginViewController
_modalRemoteUINavController
_currentRemoteOM
_serverUIContextController
_deferredResponse
_isPresentingServerUI
_forceInlinePresentation
_presentingViewController
_alertDelegate
__passwordDelegate
tapToSignInViewController:didAuthenticateWithResults:error:
whitelistedPathURLs
_completeFlowWithError:
absoluteString
acsURL
stopLoading
_samlJavaScriptQuery
_safePayloadFromResult:
completion
setCompletion:
evaluateJavaScript:completionHandler:
ak_urlQueryString
webView:decidePolicyForNavigationAction:decisionHandler:
webView:decidePolicyForNavigationResponse:decisionHandler:
webView:didStartProvisionalNavigation:
webView:didReceiveServerRedirectForProvisionalNavigation:
webView:didFailProvisionalNavigation:withError:
webView:didCommitNavigation:
webView:didFinishNavigation:
webView:didFailNavigation:withError:
webView:didReceiveAuthenticationChallenge:completionHandler:
webViewWebContentProcessDidTerminate:
_redirectApprover
_completion
Made redirection decision (%@) for <%@>
Failed to match path: %@ > %@
Clearing Second Factor Entry Field
MCFeatureAccountModificationAllowed is restricted. Disabling UI.
Authentication is already in progress.
Authentication not possible due to a restriction MCFeatureAccountModificationAllowed.
Creating new basic login UI instance.
User is trying to sign in!
Basic login UI is already on screen.
akd says there was an issue with the login. Will display alert.
User canceled!
User is retrying login after error.
User dismissed login error alert.
User dismissed login error alert. Sign-in not present.
User canceled second-factor entry!
User says they did not get a code.
User entered code %@.
Dismissing second factor UI.
Detected BuddyML button tap with %@ action
Signing request with presentation action: %@
Processing a server UI response: %@
We're done with the server UI flow client-side, but there's no completion block to call!
Completed server UI request with final response: %@
Final response headers: %@
Completed server UI request with error: %@
Extracting value for row: %@
Passcode view with ID %@ found
BuddyML contained row with ID %{public}@ but it did not contain a text field.
Received request to clear 2FA Entry Field
Harvesting data from object model: %{private}@
Harvesting data with extractor: %{private}@
Found an Apple ID (%{private}@) with extractor %{private}@
Found a password with extractor %{private}@ - %{private}@
Harvesting data from response: %{private}@
Found continuation data header in HTTP response
Found Apple ID (%{private}@) in HTTP response
Harvested recovery continuation endpoint
Harvested native recovery action: %@
Username is present but password is missing and required. Client should provide us with password.
Presenting RUI flow at url: %@
Presenting IDP flow at url: %@
Context was asked to dismiss server provided UI
User is creating an AppleID!
User is using an AppleID!
User forgot the password!
Apple TV does not support password reset flow, canceling auth.
Displaying login alert...
Will skip showing login error alert.
Presenting keep using alert for %@
User accepted using the suggested Apple ID.
User declined to use the suggested Apple ID.
User opted to cancel using the suggested Apple ID.
Client was asked to dismiss server-provided UI.
Looks like the server UI has already been dismissed.
We still have basic login UI in our nav stack. Ignoring dismiss request.
Forcing inline presentation with presenter: %@
Starting nav controller: %@
A server UI request load succeeded with response: %@
Final response detected and we are not modal, finishing...
We are inside a modal flow, deferring response processing
A deferrable final response detected, waiting for object model to load before completing
A server UI load failed with error %@
Presenting modal nav controller: %@
Dismissed the modal nav controller
Server UI object model received: %@ - %d
Top view controller has changed since load start. Aborting flow.
Server UI is being dismissed.
We have a deferred server response, waiting until dismissal completion
Starting inline presentation
Incoming signal: %@
Handling first action signal
Handling back button tap, coercing into cancel
Server UI will present an object model: %@
Deferred final response detected, finishing...
Server UI received a challange, validating...
Server cert validity check failed!
Proxying for another device, so attaching secondary Anisette controller to our URL session config.
Processing IDP URL navigation: %@
We reached the acsURL path, canceling the webView and providing the request to idMS
AKURLRequestApprover
AKAppleIDAuthenticationUISurrogateContext
AKAppleIDAuthenticationSurrogateUIProvider
AKAppleIDAuthenticationUIProvider
AKAppleIDAuthenticationLimitedUIProvider
NSObject
AKAppleIDServerAuthenticationUIProvider
AKTVSignInViewController
UIGestureRecognizerDelegate
TVTextEntryControllerDelegate
AKCodeEntryView
UIKeyInput
UITextInputTraits
AKSecondFactorCodeEntryContentViewController
CAAnimationDelegate
AKSecondFactorCodeEntry
AKBasicLoginContentViewControllerContainerView
AKBasicLoginContentViewController
AKInlineSignInViewController
UITextFieldDelegate
AKAppleIDAuthenticationInAppContextPasswordDelegate
Deprecated
AKBaseSignInViewController
AKTextField
AKIDPProvidedSignInViewController
AKIDPHandlerDelegate
AKIDPPresentationController
AKAppleIDAuthenticationTVContext
AKTVSignInViewControllerDelegate
AKAppleIDServerUIContextController
AKTVSecondFactorEntryViewController
TVDigitEntryViewControllerDelegate
AuthKit
AKAppleIDObjectModelFieldExtractor
AKAppleIDServerUIFieldExtractor
AKAppleIDAuthenticationTVUISurrogateContext
AKBasicLoginAlertController
AKAppleIDServerUIDataHarvester
AKAppleIDAuthenticationInAppContext
AKBasicLoginAlertControllerDelegate
RemoteUIControllerDelegate
AKTapToSignInViewController
AKIDPHandler
WKNavigationDelegate
@24@0:8@16
B24@0:8@16
v16@0:8
@"NSArray"
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v48@0:8@16@24@32@?40
v32@0:8@16@?24
v24@0:8@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v48@0:8@"NSError"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">40
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v48@0:8@"NSError"16@"NSString"24@"NSString"32@?<v@?@"NSNumber"@"NSError">40
v32@0:8@"AKAccountRecoveryContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"AKServerRequestConfiguration"16@?<v@?@"NSHTTPURLResponse"@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
@24@0:8@"NSString"16
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
v24@0:8@16
v24@0:8@"TVTextEntryController"16
@32@0:8@16@24
v20@0:8B16
v24@0:8q16
@?16@0:8
q16@0:8
@"NSString"
@"<AKTVSignInViewControllerDelegate>"
@"UIViewController"
@"UITapGestureRecognizer"
v24@0:8@"NSString"16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"NSMutableString"
v28@0:8@16B24
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
@"AKCodeEntryView"
@"AKBasicLoginContentViewController"
@"AKAppleIDAuthenticationContext"
@"UIImage"
@"UIImageView"
@"UILabel"
v32@0:8@16q24
B48@0:8@16{_NSRange=QQ}24@40
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
v32@0:8@"AKAppleIDAuthenticationInAppContext"16@?<v@?@"NSString"@"NSError">24
v32@0:8@16:24
v24@0:8Q16
v24@0:8B16B20
@"AKAppleIDAuthenticationInAppContext"
@"UIColor"
@"UIView"
@"AKTextField"
@"UIButton"
@"UIActivityIndicatorView"
B24@0:8Q16
v40@0:8Q16@24@32
v32@0:8@16@24
@"AKAppleIDAuthenticationController"
@"<AKSignInViewControllerDelegate>"
@40@0:8q16q24@32
v72@0:8q16{CGRect={CGPoint=dd}{CGSize=dd}}24i56d60i68
v76@0:8q16{CGRect={CGPoint=dd}{CGSize=dd}}24i56d60@68
@48@0:8q16q24@32@?40
@"UITextField"
@"UIVisualEffectView"
@"NSMutableArray"
v32@0:8@"AKIDPHandler"16@"WKWebView"24
@24@0:8@"AKIDPHandler"16
@"WKWebView"16@0:8
@"WKWebView"
@"AKIDPHandler"
@"UIStackView"
v24@0:8@"AKTVSignInViewController"16
@"AKTVSignInViewController"
@32@0:8@16@?24
@24@0:8Q16
v40@0:8@16@24@32
@"NSHTTPURLResponse"
@"AKServerRequestConfiguration"
@"AKAppleIDServerResourceLoadDelegate"
@"AKAppleIDServerUIDataHarvester"
@"NSURL"
v24@0:8@"TVDigitEntryViewController"16
@"TVDigitEntryViewController"
@"NSString"24@0:8@"NSString"16
@"RUIObjectModel"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@24@0:8q16
@"<AKBasicLoginAlertControllerDelegate>"
@"NSMutableDictionary"
v24@0:8@"AKBasicLoginAlertController"16
B40@0:8@16@24@32
B48@0:8@16@24@32@40
v40@0:8@16@24@?32
v36@0:8@16@24B32
@40@0:8@16@24@32
v40@0:8@16@24^Q32
B40@0:8@"RemoteUIController"16@"NSMutableURLRequest"24@"NSURLResponse"32
B48@0:8@"RemoteUIController"16@"RUIObjectModel"24@"RUIElement"32@"RUIPage"40
v32@0:8@"RemoteUIController"16@"NSError"24
v32@0:8@"RemoteUIController"16@"NSHTTPURLResponse"24
v40@0:8@"RemoteUIController"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v36@0:8@"RemoteUIController"16@"RUIObjectModel"24B32
v32@0:8@"RemoteUIController"16@"RUIObjectModel"24
v32@0:8@"RemoteUIController"16@"UINavigationController"24
v32@0:8@"RemoteUIController"16@"NSArray"24
v24@0:8@"RemoteUIController"16
@"RUIPage"40@0:8@"RemoteUIController"16@"NSString"24@"NSDictionary"32
v40@0:8@"RemoteUIController"16@"RUIObjectModel"24^Q32
v32@0:8@"RemoteUIController"16@"NSMutableURLRequest"24
v52@0:8@16@24@32B40@?44
@"AKBasicLoginAlertController"
@"UINavigationController"
@"RemoteUIController"
@"AKAppleIDServerUIContextController"
@"<AKAppleIDAuthenticationInAppContextDelegate>"
@"<AKAppleIDAuthenticationInAppContextAlertDelegate>"
@"<AKAppleIDAuthenticationInAppContextPasswordDelegate>"
v40@0:8@"WKWebView"16@"WKNavigationAction"24@?<v@?q>32
v40@0:8@"WKWebView"16@"WKNavigationResponse"24@?<v@?q>32
v32@0:8@"WKWebView"16@"WKNavigation"24
v40@0:8@"WKWebView"16@"WKNavigation"24@"NSError"32
v40@0:8@"WKWebView"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"WKWebView"16
@"AKURLRequestApprover"
@"<AKIDPHandlerDelegate>"
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
AKTVSignInViewController cannot be used without an authentication action.
APPLE_ID_ALERT_PLACEHOLDER
Localizable
APPLE_ID_SIGN_IN_HEADER
CONTINUE
PASSWORD_ALERT_PLACEHOLDER
APPLE_ID_PASSWORD_HEADER
DEFAULT_PLACEHOLDER_AUTHENTICATION_REASON
SIGN_IN
SIGNING_IN_TITLE
childViewController
T@"UIViewController",&,N,V_childViewController
menuRecognizer
T@"UITapGestureRecognizer",&,N,V_menuRecognizer
state
Tq,N,V_state
didPerformAction
TB,N,V_didPerformAction
username
T@"NSString",C,N,V_username
password
T@"NSString",C,N,V_password
reason
T@"NSString",C,N,V_reason
signInButtonString
T@"NSString",C,N,V_signInButtonString
signInDelegate
T@"<AKTVSignInViewControllerDelegate>",W,N,V_signInDelegate
isUsernameEditable
TB,N,V_isUsernameEditable
ak_cancelAction
T@?,C,N,V_ak_cancelAction
ak_authenticateAction
T@?,C,N,V_ak_authenticateAction
TVTextEntryController
/System/Library/PrivateFrameworks/TVKit.framework/TVKit
TVTextEntryHeaderView
TVTextEntryFooterView
TVActivityIndicatorViewController
TVThemeManager
V:|[generatorLabel]|
generatorLabel
codeGeneratorLabel%d
GROUP_SEPARATOR_SPACING
DIGIT_SPACING
|[codeGeneratorLabel0]-(DIGIT_SPACING)-[codeGeneratorLabel1]-(DIGIT_SPACING)-[codeGeneratorLabel2]-(GROUP_SEPARATOR_SPACING)-[codeGeneratorLabel3]-(DIGIT_SPACING)-[codeGeneratorLabel4]-(DIGIT_SPACING)-[codeGeneratorLabel5]|
generatedCode
autocapitalizationType
Tq,N
autocorrectionType
spellCheckingType
smartQuotesType
smartDashesType
smartInsertDeleteType
keyboardType
keyboardAppearance
returnKeyType
enablesReturnKeyAutomatically
TB,N
secureTextEntry
TB,N,GisSecureTextEntry
textContentType
T@"NSString",C,N
hasText
TB,R,N
generatorFields
T@"NSArray",&,N,V_generatorFields
activeConstraints
T@"NSArray",&,N,V_activeConstraints
firstGeneratorField
T@"UILabel",R,N
stringValue
VERIFICATION_HEADER
ENTER_VERIFICATION_CODE
transform
shake
codeGeneratorView
T@"AKCodeEntryView",&,N,V_codeGeneratorView
titleHeaderViewController
T@"AKBasicLoginContentViewController",&,N,V_titleHeaderViewController
authenticationContext
T@"AKAppleIDAuthenticationContext",&,N,V_authenticationContext
T@"NSString",R,N
AKSecondFactorCodeEntryContentViewControllerDidEnterCodeNotification
_titleLabel,_messageLabel
_titleLabel
H_MARGIN
H:|-(H_MARGIN)-[_titleLabel]-(H_MARGIN)-|
H:|-(H_MARGIN)-[_messageLabel]-(H_MARGIN)-|
AppleID
bannerView
T@"UIImageView",&,N,V_bannerView
titleLabel
T@"UILabel",&,N,V_titleLabel
messageLabel
T@"UILabel",&,N,V_messageLabel
bannerImage
T@"UIImage",&,N,V_bannerImage
titleText
T@"NSString",C,N,V_titleText
messageText
T@"NSString",C,N,V_messageText
contentContainerView
T@"AKBasicLoginContentViewControllerContainerView",R,N
AKInlineSignInViewController_iOS
SIGN_IN_BUTTON_TITLE
IFORGOT_BUTTON_TITLE
CREATE_APPLE_ID_BUTTON_TITLE
Call -init instead of -initWithNibName:bundle:
APPLE_ID
EMAIL_PLACEHOLDER
CAPITALIZED_PASSWORD
PASSWORD_PLACEHOLDER
EMAIL_OR_PHONE_PLACEHOLDER
v8@?0
v12@?0B8
loginFieldsContainer
T@"UIView",&,V_loginFieldsContainer
appleIDField
T@"AKTextField",&,V_appleIDField
passwordField
T@"AKTextField",&,V_passwordField
signInButton
T@"UIButton",&,V_signInButton
iforgotButton
T@"UIButton",&,V_iforgotButton
createAppleIDButton
T@"UIButton",&,V_createAppleIDButton
spinner
T@"UIActivityIndicatorView",&,V_spinner
wantsAuthenticationProgress
TB,V_wantsAuthenticationProgress
blurEffectStyle
usesVibrancy
primaryButtonTitle
T@"NSString",R,V_primaryButtonTitle
secondaryButtonTitle
T@"NSString",C
tertiaryButtonTitle
fieldBackgroundColor
T@"UIColor",&,N,V_fieldBackgroundColor
you must set a delegate before the button is pressed
v24@?0@"NSDictionary"8@"NSError"16
authInProgress
TB,N,GisAuthInProgress,V_authInProgress
usesDarkMode
TB,N,V_usesDarkMode
context
T@"AKAppleIDAuthenticationInAppContext",&,V_context
delegate
T@"<AKSignInViewControllerDelegate>",W,V_delegate
authenticationController
T@"AKAppleIDAuthenticationController",R
Unknown text field style!
@"UIImage"24@?0q8q16
_backgroundImageView
V:|[_backgroundImageView]|
|[_backgroundImageView]|
backgroundView
V:|[backgroundView]|
|[backgroundView]|
containingView,_entryDescription,_entryField
_leadingToEntryDescription
_entryDescriptionMinWidth
_entryDescriptionMaxWidth
_entryDescriptionToEntryField
_entryFieldToTrailing
|-_leadingToEntryDescription-[_entryDescription(>=_entryDescriptionMinWidth,<=_entryDescriptionMaxWidth)]-(_entryDescriptionToEntryField)-[_entryField]-_entryFieldToTrailing-|
containingView,_entryField
|-_leadingToEntryDescription-[_entryField]-_entryFieldToTrailing-|
%llu-%llu-%@
visualEffectView
T@"UIVisualEffectView",&,N,V_visualEffectView
backgroundImageView
T@"UIImageView",&,N,V_backgroundImageView
constraints
T@"NSMutableArray",&,N,V_constraints
entryDescription
T@"UILabel",R,N,V_entryDescription
entryField
T@"UITextField",R,N,V_entryField
textFieldStyle
Tq,N,V_textFieldStyle
rowIdentifier
Tq,N,V_rowIdentifier
TB,N,V_usesVibrancy
Tq,N,V_blurEffectStyle
enabled
TB,N,GisEnabled
LockIcon
com.apple.AuthKitUI
webView
T@"WKWebView",R,N
idpHandler
T@"AKIDPHandler",&,N,V_idpHandler
secureIconView
T@"UIImageView",&,N,V_secureIconView
titleStackView
T@"UIStackView",&,N,V_titleStackView
T@"WKWebView",R,N,V_webView
Username must not be nil for pre-filled alert style
v24@?0@"NSString"8@"NSString"16
v16@?0@"UIAlertAction"8
v16@?0@"NSString"8
CANCEL
TRY_AGAIN
signInViewController
T@"AKTVSignInViewController",&,N,V_signInViewController
X-Apple-ServerUI-Action
push
showModal
serverUIDelegate
T@"AKAppleIDServerResourceLoadDelegate",R,N,V_serverUIDelegate
serverDataHarvester
T@"AKAppleIDServerUIDataHarvester",R,N,V_serverDataHarvester
initiatingURL
T@"NSURL",R,C,N,V_initiatingURL
DIDNT_GET_A_CODE
pinViewController
T@"TVDigitEntryViewController",R,N,V_pinViewController
codeEntryObserver
T@,&,N,V_codeEntryObserver
ak_regenerateCodeAction
T@?,C,N,V_ak_regenerateCodeAction
ak_codeEnteredAction
T@?,C,N,V_ak_codeEnteredAction
TVDigitEntryViewController
ALERT_CANCEL
%username%
B8@?0
v16@?0@"UITextField"8
PASSCODE_ALERT_PLACEHOLDER
USE_APPLE_ID
CREATE_APPLE_ID
FORGOT_APPLE_ID
FORGOT_PASSWORD_ALERT
FORGOT_TITLE
FORGOT_DESCRIPTION
v16@?0@"NSNotification"8
jiggle
T@"NSString",C,N,V_ak_username
T@"NSString",C,N,V_ak_password
authenticateTitle
T@"NSString",C,N,V_ak_title
T@"NSString",C,N,V_ak_reason
authenticateButtonTitle
T@"NSString",C,N,V_ak_authenticateButtonTitle
T@"NSString",C,N,V_generatedCode
alertStyle
authenticateAction
createIDAction
T@?,C,N,V_ak_createIDAction
useIDAction
T@?,C,N,V_ak_useIDAction
forgotIDAction
T@?,C,N,V_ak_forgotIDAction
forgotPasswordAction
T@?,C,N,V_ak_forgotPasswordAction
regenerateCodeAction
codeEnteredAction
T@"<AKBasicLoginAlertControllerDelegate>",W,N,V_delegate
appleIdRowId
appleIdRowPrefixId
appleIdRowSuffixId
appleIdServerInfoId
appleIdServerInfoSuffixId
passwordRowId
newPasswordRowId
X-Apple-AK-Recovery-URL-Key
(******)
harvestedData
T@"NSDictionary",R,C,N
v24@?0@"NSString"8@"NSError"16
v20@?0B8@"NSError"12
AKAppleIDAuthenticationInAppContext cannot be used without a presentingViewController
username must not be nil for pre-filled alert style
FORGOT_PASSWORD_ALERT_MESSAGE
FORGOT_PASSWORD_ALERT_TITLE
FORGOT_PASSWORD_ALERT_OK_BUTTON
KEEP_USING_ALERT_TITLE
KEEP_USING_ALERT_YES_BUTTON
KEEP_USING_ALERT_NO_BUTTON
KEEP_USING_ALERT_CANCEL_BUTTON
v32@?0@"RUIObjectModel"8@"RUIElement"16@"NSDictionary"24
v32@?0@"NSHTTPURLResponse"8@"NSDictionary"16@"NSError"24
v32@?0@"NSString"8@"NSString"16^B24
VERIFICATION_FAILED
SERVER_ERROR
GENERIC_BACK_BUTTON
alertDelegate
T@"<AKAppleIDAuthenticationInAppContextAlertDelegate>",W,N,V_alertDelegate
_passwordDelegate
T@"<AKAppleIDAuthenticationInAppContextPasswordDelegate>",W,N,S_setPasswordDelegate:,V__passwordDelegate
forceInlinePresentation
TB,N,V_forceInlinePresentation
presentingViewController
T@"UIViewController",W,N,V_presentingViewController
T@"<AKAppleIDAuthenticationInAppContextDelegate>",W,N,V_delegate
v24@?0@8@"NSError"16
 (function () {                                         var result = {};                                         var forms = document.getElementsByTagName('form');                                         for(var i = 0; i < forms.length; i++) {                                             if (forms[i].action.startsWith(`%@`)) {                                                 var nodeList = forms[i].querySelectorAll('input[type=hidden]');                                                 for(var i = 0; i < nodeList.length; i++) {                                                     result[nodeList[i].name] = nodeList[i].value;                                                 }                                                 break;                                             }                                         }                                         return result;                                     })();
completion
T@?,C,N,V_completion
configuration
T@"AKServerRequestConfiguration",R,N,V_configuration
T@"<AKIDPHandlerDelegate>",W,N,V_delegate
333333
ffffff
?333333
o@@(#)PROGRAM:AuthKitUI  PROJECT:AuthKit-1
