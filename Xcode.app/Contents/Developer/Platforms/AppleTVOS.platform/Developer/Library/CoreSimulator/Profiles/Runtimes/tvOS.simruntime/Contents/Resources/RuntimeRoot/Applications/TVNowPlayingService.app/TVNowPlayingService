I@333333
initWithFrame:
alloc
setContentMode:
addSubview:
init
bounds
setFrame:
setProgress:animated:
_focusedProgressColor
setTintColor:
whiteColor
setBackgroundColor:
layer
setCornerRadius:
setShadowPath:
blackColor
CGColor
setShadowColor:
setShadowOffset:
setShadowOpacity:
setShadowRadius:
_menuPressed
initWithTarget:action:
numberWithInteger:
arrayWithObjects:count:
setAllowedPressTypes:
addGestureRecognizer:
_panUpdated:
_setHysteresis:
layoutSubviews
frame
_progressCenter
convertPoint:fromView:
setCenter:
setValue:animated:
minimumValue
maximumValue
setProgress:
setNeedsLayout
layoutIfNeeded
animateWithDuration:animations:
setImage:
state
locationInView:
value
setValue:
isContinuous
sendActionsForControlEvents:
initWithWhite:alpha:
canBecomeFocused
intrinsicContentSize
sizeThatFits:
setMinimumValueImage:
setMaximumValueImage:
shouldTrack
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
_unfocusedProgressColor
.cxx_destruct
setMinimumValue:
setMaximumValue:
minimumValueImage
maximumValueImage
progressBarView
setContinuous:
minValueIconView
maxValueIconView
thumbView
lastThumbLocation
_continuous
_value
_minimumValue
_maximumValue
_minimumValueImage
_maximumValueImage
_progressBarView
_minValueIconView
_maxValueIconView
_thumbView
_lastThumbLocation
initWithEndpointRoute:
_configureWithEndpointRoute:
description
stringWithFormat:
isEqual:
endpoint
deregisterMetadataUpdateHandler:
proxyForLocalDevice
proxyForExternalDevice:
mainScreen
scale
setArtworkSize:
_metadataDidChange:forKeys:
registerMetadataUpdateHandler:
isPaired
routeUID
tvnp_deviceType
initWithGroupRoute:outputDeviceRoute:
initWithDataSource:
setDelegate:
isVolumeControlAvailable
isDeviceRoute
volumeValue
numberWithFloat:
currentDevice
name
routeName
willChangeValueForKey:
copy
didChangeValueForKey:
floatValue
setVolumeValue:
playPause
connectAndPair
_updateVolume
containsObject:
_updateMetadataWithProxy:updateArtwork:
title
album
artist
length
class
playbackState
_playbackStateForMRPlaybackState:
artworkData
imageWithData:
setTitle:
setSubtitle:
setPlaybackState:
setPaired:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
volumeController:volumeControlAvailableDidChange:
volumeController:volumeControlLabelDidChange:
volumeController:volumeValueDidChange:
volumeController:mutedStateDidChange:
volumeController:volumeWarningStateDidChange:
volumeController:EUVolumeLimitDidChange:
volumeController:EUVolumeLimitEnforcedDidChange:
setIsCurrentDestination:
setVolumeLevel:
togglePlayPause
endpointRoute
externalDevice
originProxy
volumeController
originProxyObserverToken
metadataUpdateQueue
_endpointRoute
_externalDevice
_originProxy
_volumeController
_originProxyObserverToken
_metadataUpdateQueue
initWithNibName:bundle:
initialFetchGroup
initWithOutputContextUID:initalFetchCompletion:
objectForKeyedSubscript:
outputContextUID
setOutputContextUID:
presentationEnded
routingController
initWithRoutingController:
presentViewController:animated:completion:
dismissViewControllerAnimated:completion:
viewServiceBeginPresentationWithOptions:
viewServiceEndPresentationWithOptions:completion:
_exportedInterface
viewServiceUpdatePresentationWithOptions:
viewServiceHandleMessage:reply:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
dismissWithResult:
_remoteViewControllerProxy
_remoteViewControllerInterface
viewControllerDidRequestDismissal:
setInitialFetchGroup:
setPresentationEnded:
_presentationEnded
_initialFetchGroup
_routingController
initWithCollectionViewLayout:
sharedConnection
bulletinServiceProxy
defaultCenter
volumeUp:
addObserver:selector:name:object:suspensionBehavior:
volumeDown:
currentDestination
volumeLevel
removeObserver:forKeyPath:context:
removeObserver:name:object:
sharedInstance
disableCustomVolumeButtonNotifications
setObservingChanges:
dealloc
viewDidLoad
collectionView
setContentInsetAdjustmentBehavior:
setIndexDisplayMode:
registerClass:forCellWithReuseIdentifier:
setClipsToBounds:
viewWillAppear:
allowsDestinationSelection
availableDestinations
uniqueIdentifier
indexOfObjectPassingTest:
objectAtIndexedSubscript:
setCurrentDestination:
collectionViewLayout
indexPathForRow:inSection:
setFocusedIndexPath:
viewDidLayoutSubviews
focusedIndexPath
targetContentOffsetForIndexPath:
setContentOffset:animated:
addObserver:forKeyPath:options:context:
tvnp_changesForResultingArray:
count
tvnp_applyChanges:inSection:
performBatchUpdates:completion:
_presentVolumeBulletinForDestination:
observeValueForKeyPath:ofObject:change:context:
dequeueReusableCellWithReuseIdentifier:forIndexPath:
item
setDestination:
useFocusedAppearance
didUpdateFocusInContext:withAnimationCoordinator:
nextFocusedIndexPath
animateWithDuration:delay:options:animations:completion:
objectAtIndex:
enableCustomVolumeButtonNotifications
targetDestination:
systemServiceProxy
viewControllerDelegate
presentNowPlayingWithOptions:completion:
setVolumeBulletin:
destinationName
numberWithUnsignedInteger:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
volumeBulletin
message
setMessage:
setViewControllerClassName:
setServiceIdentifier:
presentBulletin:withCompletion:
xpcUpdateBulletin:withMessage:withCompletion:
bulletinService:didDismissBulletin:withReason:
initWithCollectionViewLayout:routingController:
numberOfSectionsInCollectionView:
collectionView:numberOfItemsInSection:
collectionView:cellForItemAtIndexPath:
collectionView:didUpdateFocusInContext:withAnimationCoordinator:
collectionView:targetContentOffsetForProposedContentOffset:
collectionView:didSelectItemAtIndexPath:
indexPathForPreferredFocusedViewInCollectionView:
setViewControllerDelegate:
shouldFocusInitialIndex
initialFocusIndex
observingChanges
destinationForVolume
setDestinationForVolume:
volumeUpdateQueue
setVolumeUpdateQueue:
_shouldFocusInitialIndex
_observingChanges
_viewControllerDelegate
_initialFocusIndex
_destinationForVolume
_volumeBulletin
_volumeUpdateQueue
setRoute:
prepareForReuse
setTitleText:
deviceType
setDeviceType:
selectionState
setSelectionState:
_updateMusicBarState
destination
isCurrentDestination
setMusicBarState:
route
_route
isEqualToString:
automaticallyNotifiesObserversForKey:
initWithOutputContextUID:
initWithKeyOptions:valueOptions:capacity:
initWithDataSource:name:
setRoutingContextUID:
setDiscoveryMode:
fetchAvailableRoutesWithCompletionHandler:
_updateAvailableRoutes
setEndpointRoute:
_updateWithAvailableEndpoints:outputDevices:
pickedRoutes
pendingPickedRoutes
supportsMultipleSelection
firstObject
isSmartAudio
anyObject
outputDeviceRoute
isPicked
addPickedRoute:
pickRoute:
removePickedRoute:
setActiveRoute:completion:
_setNeedsDisplayedRoutesUpdate
countByEnumeratingWithState:objects:count:
objectForKey:
addObject:
removeAllObjects
setObject:forKey:
logicalLeaderOutputDevice
keyEnumerator
updateWithOutputDevice:selectionState:destination:
localizedCompare:
sortDescriptorWithKey:ascending:selector:
compare:
sortUsingDescriptors:
reverseObjectEnumerator
removeObject:
insertObject:atIndex:
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
pickRoute:forDestination:
unpickRoute:forDestination:
discoveryMode
currentRoutes
availableRoutes
endpointRoutingDataSource
outputDeviceRoutingDataSource
endpointRoutingController
outputDeviceRoutingController
outputDeviceIdentifiersToRoutes
endpointsToDestinations
allOutputDevices
allEndpoints
currentEndpointRoute
updateQueue
numberOfUpdates
needsAvailableRoutesUpdate
multipleSelectionEnabled
_allowsDestinationSelection
_needsAvailableRoutesUpdate
_multipleSelectionEnabled
_availableDestinations
_availableRoutes
_currentDestination
_currentRoutes
_discoveryMode
_outputContextUID
_endpointRoutingDataSource
_outputDeviceRoutingDataSource
_endpointRoutingController
_outputDeviceRoutingController
_outputDeviceIdentifiersToRoutes
_endpointsToDestinations
_allOutputDevices
_allEndpoints
_currentEndpointRoute
_updateQueue
_numberOfUpdates
UUID
UUIDString
imageKeyForObject:
errorWithDomain:code:userInfo:
cancelLoad:
loadImageForObject:scaleToSize:cropToFit:completionHandler:
loadImageForObject:scaleToSize:cropToFit:imageDirection:completionHandler:
setImageData:
imageIdentifier
imageData
_decodedImage
_imageIdentifier
_imageData
subtitle
image
setDestinationName:
setUniqueIdentifier:
effectiveDeviceType
_title
_subtitle
_image
_destinationName
_isCurrentDestination
_playbackState
_effectiveDeviceType
_uniqueIdentifier
_volumeLevel
_paired
initWithName:
stopped
dictionary
invalidate
_callElapsedTimeObserversDueToTimeJump:
changeMediaInDirection:reason:
scanning
playing
play
pause
paused
postNotificationName:object:
stop
setElapsedTime:
elapsedTimeObserverBlocks
removeObjectForKey:
initWithMediaItems:index:isCollection:
setPlaylist:
currentMediaItem
postNotificationName:object:userInfo:
_rateForState:
rateUsedForPlayback
date
timeIntervalSinceDate:
rate
elapsedTime
setObject:forKeyedSubscript:
_updateElapsedTimeTimer
setLastElapsedTime:atTimestamp:
_fireElapsedTimeUpdate:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
changeMediaInDirection:
continueLoadingCurrentItem
playIgnoringDelegate:
pauseIgnoringDelegate:
pauseWithVolumeRampDuration:
scanWithRate:
stopWithVolumeRampDuration:
setElapsedTime:precise:
setElapsedTime:seekPrecision:
setElapsedTime:seekPrecision:ignoreDelegate:
addElapsedTimeObserver:
removeElapsedTimeObserverWithToken:
addBoundaryTimeObserverForTimes:withHandler:
addBoundaryTimeObserverForDates:withHandler:
removeBoundaryTimeObserverWithToken:
skipToNextChapterInDirection:
setSelectedSubtitleOption:setGlobalPreference:
updateSubtitleOptions
currentMediaItemSupportsScrubbingUsingPlayer
delegate
asyncDelegate
setAsyncDelegate:
playlist
setCurrentMediaItem:
currentMediaItemPreparedForLoading
currentMediaItemInitialLoadingComplete
currentMediaItemHasVideoContent
currentMediaItemIsStreaming
currentMediaItemPresentationSize
currentMediaItemHasDates
errorBehavior
setErrorBehavior:
interactive
setInteractive:
setRateUsedForPlayback:
waitsAfterPreparingMediaItems
setWaitsAfterPreparingMediaItems:
playbackDate
setPlaybackDate:
duration
isLive
muted
setMuted:
volume
setVolume:
chapterCollections
currentChapterCollection
setCurrentChapterCollection:
currentChapter
currentInterstitial
bufferedTimeRange
seekableTimeRange
seekableDateRange
forwardPlaybackEndTime
reversePlaybackEndTime
mediaItemEndAction
setMediaItemEndAction:
audioOptions
selectedAudioOption
setSelectedAudioOption:
subtitleOptions
selectedSubtitleOption
setSelectedSubtitleOption:
maximumBitRate
setMaximumBitRate:
preventsSleepDuringVideoPlayback
setPreventsSleepDuringVideoPlayback:
updatesMediaRemoteInfoAutomatically
setUpdatesMediaRemoteInfoAutomatically:
limitReadAhead
setLimitReadAhead:
changeToMediaAtIndex:reason:
setState:
setDuration:
lastChangeDirection
setLastChangeDirection:
initiatedSkip
setInitiatedSkip:
setElapsedTimeObserverBlocks:
isScanningForward
setIsScanningForward:
_lastUpdateTimestamp
_lastElapsedTime
_elapsedTimeTimer
_muted
_interactive
_waitsAfterPreparingMediaItems
_currentMediaItemHasDates
_currentMediaItemInitialLoadingComplete
_currentMediaItemPreparedForLoading
_preventsSleepDuringVideoPlayback
_updatesMediaRemoteInfoAutomatically
_isLive
_limitReadAhead
_initiatedSkip
_isScanningForward
_volume
_name
_rate
_rateUsedForPlayback
_playlist
_state
_duration
_errorBehavior
_playbackDate
_chapterCollections
_currentChapter
_bufferedTimeRange
_seekableDateRange
_currentChapterCollection
_mediaItemEndAction
_audioOptions
_selectedAudioOption
_subtitleOptions
_selectedSubtitleOption
_maximumBitRate
_delegate
_asyncDelegate
_seekableTimeRange
_currentInterstitial
_forwardPlaybackEndTime
_reversePlaybackEndTime
_lastChangeDirection
_elapsedTimeObserverBlocks
_currentMediaItemPresentationSize
initWithOrigin:externalDevice:
_setNeedsUpdateMediaRemoteInfoForReason:
handleMediaRemoteUpdate:
addObserver:selector:name:object:
userInfo
_updateMediaRemoteInfoIfNeeded
performSelector:withObject:afterDelay:
cancelPreviousPerformRequestsWithTarget:selector:object:
_updateMediaRemoteInfoForChangeReasons:
enumerateObjectsUsingBlock:
allValues
nowPlayingPID
artworkSize
nowPlayingApplicationName
origin
observerTokensToHandlers
updatingMediaRemoteInfo
changeReasons
accessQueue
hasContent
artworkIdentifier
connectionState
_updatingMediaRemoteInfo
_hasContent
_nowPlayingPID
_connectionState
_artist
_album
_artworkData
_nowPlayingApplicationName
_origin
_observerTokensToHandlers
_changeReasons
_accessQueue
_artworkIdentifier
_artworkSize
setClipsSubviews:
setBorderWidth:
tintColorDidChange
tintColor
colorWithAlphaComponent:
setBorderColor:
getWhite:alpha:
setAlpha:
progress
outlineView
fillView
_progress
_outlineView
_fillView
_init
setRouteUID:
isLocal
setLocal:
canBeGrouped
setCanBeGrouped:
_routeUID
_deviceType
_local
_canBeGrouped
_selectionState
_destination
_configureFloatingContentViewAppearance
setTranslatesAutoresizingMaskIntoConstraints:
contentView
colorWithWhite:alpha:
_iconImageForDeviceType:focused:
initWithImage:
initWithActivityIndicatorStyle:
preferredFontForTextStyle:
setFont:
_volumeImage:
setHidden:
addLayoutGuide:
_addInitialConstraints
_configureAppearanceForControlState:withAnimationCoordinator:
setNeedsUpdateConstraints
updateFocusIfNeeded
nextFocusedView
isDescendantOfView:
_controlStateForCell
setHighlighted:
updateConstraints
subtitleText
musicBarState
firstBaselineAnchor
topAnchor
constraintEqualToAnchor:constant:
isEqualToArray:
deactivateConstraints:
activateConstraints:
traitCollectionDidChange:
displayScale
traitCollection
controlState
applyLayoutAttributes:
setText:
_checkmarkImage:focused:
startAnimating
stopAnimating
appearanceWhenContainedInInstancesOfClasses:
configurationWithStyle:
setFocusAnimationConfiguration:
leadingAnchor
constraintEqualToAnchor:
trailingAnchor
bottomAnchor
widthAnchor
constraintEqualToConstant:
constraintLessThanOrEqualToAnchor:
heightAnchor
centerYAnchor
centerXAnchor
lastBaselineAnchor
isSelected
isHighlighted
setTextColor:
setColor:
setControlState:withAnimationCoordinator:
addCoordinatedAnimations:completion:
setControlState:animated:
tvnp_imageNameForDeviceType:
tintedImageWithName:tintColor:
setSelected:
setSubtitleText:
titleText
floatingContentView
backgroundColorView
iconView
checkmarkView
spinnerView
musicBarsView
titleLabel
subtitleLabel
volumeSliderView
layoutGuide
volatileContraints
_isFocused
_titleText
_subtitleText
_musicBarState
_floatingContentView
_backgroundColorView
_iconView
_checkmarkView
_spinnerView
_musicBarsView
_titleLabel
_subtitleLabel
_volumeSliderView
_layoutGuide
_volatileContraints
initWithCapacity:
setAnchorPoint:
willMoveToWindow:
_updateInternalState
_removeAnimations
_setSubviewsHidden:
_setBarHeights:
_addAnimationsWithRepeatCount:
setInternalState:
valueWithCGRect:
setKeyPath:
setValues:
setKeyTimes:
setSpeed:
setRepeatCount:
addAnimation:forKey:
removeAllAnimations
canAnimate
setCanAnimate:
internalState
barViews
_canAnimate
_internalState
_barViews
setMediaItemMetadata:forProperty:
removeMediaItemMetadataForProperty:
mediaItemMetadataForProperty:
imageLoader
initWithObject:imageLoader:groupType:
setCacheOnLoad:
setWriteToAssetLibrary:
replaceMediaItemMetadata:forProperty:
setImageLoader:
_imageLoader
_destinationLayout
_routesLayout
setModalPresentationStyle:
view
setTextAlignment:
_updateTitleView
addChildViewController:
didMoveToParentViewController:
didPressMenu:
setNumberOfTapsRequired:
didPressPlayPause:
preferredFocusEnvironments
requestDismissal
isViewLoaded
setScrollDirection:
setItemSize:
setMinimumInteritemSpacing:
setMinimumLineSpacing:
itemSize
setSectionInset:
setEstimatedItemSize:
setTopGradientHeight:
setBottomGradientHeight:
titleView
hintView
destinationsCollectionViewController
routesCollectionViewController
_titleView
_hintView
_destinationsCollectionViewController
_routesCollectionViewController
routeType
avRouteDescription
boolValue
isAppleTVRoute
routeSubtype
isStereoPair
isHomePodRoute
isAirpodsRoute
isPowerbeatsRoute
isBeatsSoloRoute
isBeatsXRoute
tvnp_shouldShowRoute
tvnp_largeImageNameForDeviceType:
targetContentOffsetForProposedContentOffset:withScrollingVelocity:
minimumLineSpacing
targetContentOffsetForProposedContentOffset:
_focusedIndexPath
topGradientHeight
bottomGradientHeight
_topGradientHeight
_bottomGradientHeight
mask
_gradientMask
setMask:
estimatedItemSize
sectionInset
setColors:
setLocations:
collectionView:layout:sizeForItemAtIndexPath:
indexPathByAddingIndex:
enumerateIndexesWithOptions:usingBlock:
changeType
destinationIndexes
indexPathWithIndex:
tvnp_indexPathsForIndexSet:withOptions:prefix:
insertItemsAtIndexPaths:
sourceIndexes
deleteItemsAtIndexPaths:
firstIndex
indexPathForItem:inSection:
moveItemAtIndexPath:toIndexPath:
setVolumeAudioCategory:
startObserving
stopObserving
_nameForAVRoute:
setOutputDeviceRoute:
_outputDeviceRoute
updateWithAVRoute:
avRoute
setAvRoute:
_avRoute
mainBundle
bundleIdentifier
initializeLoggingWithDomain:persistentComponents:
_setSpeedBumpEdges:
_setCornerRadius:
setMinificationFilter:
setMarqueeEnabled:
setMarqueeRunning:
setArtworkImage:
setShowDeviceImage:
artworkImage
showDeviceImage
artworkView
deviceView
shadowView
_showDeviceImage
_artworkImage
_artworkView
_deviceView
_shadowView
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
window
setWindow:
_window
indexSetWithIndex:
arrayChangeInsert:
arrayChangeDelete:
arrayChangeMove:toIndex:
_changeType
_sourceIndexes
_destinationIndexes
_deletionChangeForResultingArray:
_insertionChangeForResultingArray:
containsIndex:
addIndex:
initWithArray:
mutableCopy
minusSet:
indexesOfObjectsWithOptions:passingTest:
setPlayer:
_registerAsObserver
_updateNowPlayingInfo:
_updateNowPlayingProcessWithPid:
_deregisterAsObserver
player
trackIdentifierForInfo:
tvs_stringForKey:
tvs_numberForKey:
_updatePlayerTimeWithInfo:
tvs_dataForKey:
performMediaItemMetadataTransactionWithBlock:
doubleValue
loading
_updateTimeStampFromAirtunesd:
_nowPlayingProcessDidChange:
_nowPlayingInfoDidChange:
tvs_dateForKey:
prepareForPlayback
reset
_isObserving
_airtunesIsPlaying
_airtunesTimeData
_lastTrackIdentifier
_player
stringWithUTF8String:
_menuPressed:
setViewServiceActive:
mediaRemoteObserver
initWithPlayer:
setSingleCoverOnly:
wallpaperViewForVariant:
animateWithDuration:animations:completion:
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
musicViewController
setMusicViewController:
setMediaRemoteObserver:
menuGestureRecognizer
setMenuGestureRecognizer:
nowPlayingWallPaper
setNowPlayingWallPaper:
_musicViewController
_mediaRemoteObserver
_menuGestureRecognizer
_nowPlayingWallPaper
imageNamed:
_flatImageWithColor:
imageCache
_imageCache
_updateNowPlayingInfo
localizedStringForKey:value:table:
v8@?0
minValueIconView
T@"UIImageView",R,N,V_minValueIconView
maxValueIconView
T@"UIImageView",R,N,V_maxValueIconView
thumbView
T@"UIView",R,N,V_thumbView
lastThumbLocation
T{CGPoint=dd},R,N,V_lastThumbLocation
value
Tf,N,V_value
minimumValue
Tf,N,V_minimumValue
maximumValue
Tf,N,V_maximumValue
minimumValueImage
T@"UIImage",&,N,V_minimumValueImage
maximumValueImage
T@"UIImage",&,N,V_maximumValueImage
progressBarView
T@"TVNPNowPlayingProgressView",R,N,V_progressBarView
continuous
TB,N,GisContinuous,V_continuous
com.apple.TVNPEndpointRoutingDestination.metadata
%@: Endpoint:%@
v16@?0@"NSSet"8
destinationName
volumeLevel
artworkData
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
externalDevice
T^v,R,N,V_externalDevice
originProxy
T@"TVNPExternalDeviceProxy",R,N,V_originProxy
volumeController
T@"MPVolumeController",R,N,V_volumeController
originProxyObserverToken
T@"<NSCopying>",R,N,V_originProxyObserverToken
metadataUpdateQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_metadataUpdateQueue
isCurrentDestination
TB,D,N
endpointRoute
T@"MPAVEndpointRoute",R,N,V_endpointRoute
initialFetchGroup
T@"NSObject<OS_dispatch_group>",&,N,V_initialFetchGroup
routingController
T@"TVNPGroupableRoutingController",R,N,V_routingController
presentationEnded
TB,N,V_presentationEnded
com.apple.TVNowPlayingService.VolumeUpdateQueue
v16@?0^{__CFString=}8
B32@?0@"TVNPRoutingDestination"8Q16^B24
availableDestinations
v12@?0B8
v20@?0B8@"NSError"12
v28@?0@"PBSBulletin"8B16@"NSError"20
shouldFocusInitialIndex
TB,R,N,V_shouldFocusInitialIndex
initialFocusIndex
TQ,R,N,V_initialFocusIndex
observingChanges
TB,N,V_observingChanges
destinationForVolume
T@"TVNPRoutingDestination",N,V_destinationForVolume
volumeBulletin
T@"PBSBulletin",&,N,V_volumeBulletin
volumeUpdateQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_volumeUpdateQueue
T@"NSObject<TVNPRoutingController>",R,N,V_routingController
viewControllerDelegate
T@"<TVNPRoutingDestinationsCollectionViewControllerDelegate>",W,N,V_viewControllerDelegate
title
deviceType
selectionState
destination.isCurrentDestination
destination.playbackState
route
T@"TVNPRoute",&,N,V_route
currentDestination
com.apple.TVNowPlayingService.TVNPGroupableRoutingController
enableWHA
com.apple.Music
TVNP-Endpoint
TVNP-OutputDevice
v16@?0@"NSArray"8
Dock Connector
B32@?0@8Q16^B24
routeUID
local
availableRoutes
currentRoutes
discoveryMode
TQ,N
T@"TVNPRoutingDestination",&,N
T@"NSArray",R,C,N
allowsDestinationSelection
TB,R,N
endpointRoutingDataSource
T@"MPAVEndpointRoutingDataSource",R,N,V_endpointRoutingDataSource
outputDeviceRoutingDataSource
T@"MPAVOutputDeviceRoutingDataSource",R,N,V_outputDeviceRoutingDataSource
endpointRoutingController
T@"MPAVRoutingController",R,N,V_endpointRoutingController
outputDeviceRoutingController
T@"MPAVRoutingController",R,N,V_outputDeviceRoutingController
outputDeviceIdentifiersToRoutes
T@"NSMutableDictionary",R,C,N,V_outputDeviceIdentifiersToRoutes
endpointsToDestinations
T@"NSMapTable",R,C,N,V_endpointsToDestinations
allOutputDevices
T@"NSArray",R,C,N,V_allOutputDevices
allEndpoints
T@"NSArray",R,C,N,V_allEndpoints
currentEndpointRoute
T@"MPAVEndpointRoute",R,C,N,V_currentEndpointRoute
updateQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_updateQueue
numberOfUpdates
TQ,R,N,V_numberOfUpdates
needsAvailableRoutesUpdate
TB,R,N,V_needsAvailableRoutesUpdate
multipleSelectionEnabled
TB,R,N,V_multipleSelectionEnabled
outputContextUID
T@"NSString",C,N,V_outputContextUID
TQ,N,V_discoveryMode
T@"TVNPRoutingDestination",&,N,V_currentDestination
T@"NSArray",R,C,N,V_currentRoutes
T@"NSArray",R,C,N,V_availableDestinations
T@"NSArray",R,C,N,V_availableRoutes
TB,R,N,V_allowsDestinationSelection
TVServicesErrorDomain
imageIdentifier
T@"NSString",R,N,V_imageIdentifier
imageData
T@"NSData",&,N,V_imageData
T@"NSString",C,N,V_title
subtitle
T@"NSString",C,N,V_subtitle
image
T@"UIImage",&,N,V_image
T@"NSString",C,N,V_destinationName
uniqueIdentifier
T@"NSString",C,N,V_uniqueIdentifier
TB,N,V_isCurrentDestination
playbackState
TQ,N,V_playbackState
paired
TB,N,GisPaired,V_paired
effectiveDeviceType
TQ,R,N,V_effectiveDeviceType
T@"NSNumber",C,N,V_volumeLevel
rate
name
T@"NSString",R,N
delegate
T@"<TVPPlaybackDelegate>",W,N
asyncDelegate
T@"<TVPASyncPlaybackDelegate>",W,N
playlist
T@"TVPPlaylist",&,N
currentMediaItem
T@"NSObject<TVPMediaItem>",&,N
currentMediaItemPreparedForLoading
currentMediaItemInitialLoadingComplete
currentMediaItemHasVideoContent
currentMediaItemIsStreaming
currentMediaItemPresentationSize
T{CGSize=dd},R,N
currentMediaItemHasDates
state
T@"TVPPlaybackState",R,N
errorBehavior
Tq,N
interactive
TB,N
Td,R,N
rateUsedForPlayback
Td,N
waitsAfterPreparingMediaItems
elapsedTime
playbackDate
T@"NSDate",C,N
duration
isLive
muted
volume
Tf,N
chapterCollections
T@"NSArray",R,N
currentChapterCollection
T@"TVPChapterCollection",&,N
currentChapter
T@"TVPChapter",R,N
currentInterstitial
T@"TVPInterstitial",R,N
bufferedTimeRange
T@"TVPTimeRange",R,N
seekableTimeRange
seekableDateRange
T@"TVPDateRange",R,N
forwardPlaybackEndTime
reversePlaybackEndTime
mediaItemEndAction
audioOptions
selectedAudioOption
T@"TVPAudioOption",&,N
subtitleOptions
selectedSubtitleOption
T@"TVPSubtitleOption",&,N
maximumBitRate
preventsSleepDuringVideoPlayback
updatesMediaRemoteInfoAutomatically
limitReadAhead
lastChangeDirection
Tq,N,V_lastChangeDirection
initiatedSkip
TB,N,V_initiatedSkip
elapsedTimeObserverBlocks
T@"NSMutableDictionary",&,N,V_elapsedTimeObserverBlocks
isScanningForward
TB,N,V_isScanningForward
Td,N,V_duration
T@"TVPPlaybackState",&,N,V_state
T@"NSString",R,N,V_name
T@"<TVPPlaybackDelegate>",W,N,V_delegate
T@"<TVPASyncPlaybackDelegate>",W,N,V_asyncDelegate
T@"TVPPlaylist",&,N,V_playlist
TB,R,N,V_currentMediaItemPreparedForLoading
TB,R,N,V_currentMediaItemInitialLoadingComplete
T{CGSize=dd},R,N,V_currentMediaItemPresentationSize
TB,R,N,V_currentMediaItemHasDates
Tq,N,V_errorBehavior
TB,N,V_interactive
Td,R,N,V_rate
Td,N,V_rateUsedForPlayback
TB,N,V_waitsAfterPreparingMediaItems
T@"NSDate",C,N,V_playbackDate
TB,R,N,V_isLive
TB,N,V_muted
Tf,N,V_volume
T@"NSArray",R,N,V_chapterCollections
T@"TVPChapterCollection",&,N,V_currentChapterCollection
T@"TVPChapter",R,N,V_currentChapter
T@"TVPInterstitial",R,N,V_currentInterstitial
T@"TVPTimeRange",R,N,V_bufferedTimeRange
T@"TVPTimeRange",R,N,V_seekableTimeRange
T@"TVPDateRange",R,N,V_seekableDateRange
Td,R,N,V_forwardPlaybackEndTime
Td,R,N,V_reversePlaybackEndTime
Tq,N,V_mediaItemEndAction
T@"NSArray",R,N,V_audioOptions
T@"TVPAudioOption",&,N,V_selectedAudioOption
T@"NSArray",R,N,V_subtitleOptions
T@"TVPSubtitleOption",&,N,V_selectedSubtitleOption
Td,N,V_maximumBitRate
TB,N,V_preventsSleepDuringVideoPlayback
TB,N,V_updatesMediaRemoteInfoAutomatically
TB,N,V_limitReadAhead
_TVNPExternalDeviceProxyIntitialUpdate
_TVNPExternalDeviceProxyConnectionState
com.apple.TVNowPlayingService.TVNPExternalDeviceProxy
com.apple.TVNRoutingDestinationMediaRemoteObserver
v20@?0I8^{__CFError=}12
v20@?0I8^{__CFArray=}12
v24@?0@"NSString"8^B16
album
artist
nowPlayingPID
nowPlayingApplicationName
v32@?0@?<v@?@"NSSet">8Q16^B24
v24@?0^v8^{__CFError=}16
v12@?0I8
origin
T^v,R,N,V_origin
observerTokensToHandlers
T@"NSMutableDictionary",R,N,V_observerTokensToHandlers
updatingMediaRemoteInfo
TB,R,N,V_updatingMediaRemoteInfo
changeReasons
T@"NSMutableSet",R,N,V_changeReasons
accessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_accessQueue
hasContent
TB,R,N,V_hasContent
artworkIdentifier
T@"NSString",R,C,N,V_artworkIdentifier
connectionState
TI,R,N,V_connectionState
TI,R,V_playbackState
Ti,R,V_nowPlayingPID
T@"NSString",R,C,V_nowPlayingApplicationName
T@"NSString",R,C,V_title
T@"NSString",R,C,V_artist
T@"NSString",R,C,V_album
T@"NSData",R,C,V_artworkData
artworkSize
T{CGSize=dd},V_artworkSize
TB,R,GisPaired,V_paired
outlineView
T@"UIView",R,N,V_outlineView
fillView
T@"UIView",R,N,V_fillView
_progressCenter
T{CGPoint=dd},R,N
progress
Tf,N,V_progress
T@"NSString",C,N,V_routeUID
TQ,N,V_deviceType
TB,N,GisLocal,V_local
canBeGrouped
TB,N,V_canBeGrouped
destination
T@"TVNPRoutingDestination",&,N,V_destination
TQ,N,V_selectionState
nowplaying_audiorouting_check_on
nowplaying_audiorouting_check_off
ui_checkmark_dark
glyph_volume
floatingContentView
T@"_UIFloatingContentView",R,N,V_floatingContentView
backgroundColorView
T@"UIView",R,N,V_backgroundColorView
iconView
T@"UIImageView",R,N,V_iconView
checkmarkView
T@"UIImageView",R,N,V_checkmarkView
spinnerView
T@"UIActivityIndicatorView",R,N,V_spinnerView
musicBarsView
T@"TVNPRoutingMusicBarsView",R,N,V_musicBarsView
titleLabel
T@"UILabel",R,N,V_titleLabel
subtitleLabel
T@"UILabel",R,N,V_subtitleLabel
volumeSliderView
T@"TVNPNowPlayingSliderView",R,N,V_volumeSliderView
layoutGuide
T@"UILayoutGuide",R,N,V_layoutGuide
volatileContraints
T@"NSMutableArray",R,N,V_volatileContraints
titleText
T@"NSString",C,N,V_titleText
subtitleText
T@"NSString",C,N,V_subtitleText
musicBarState
TQ,N,V_musicBarState
bounds
BarAnimation_%ld
v32@?0@"UIView"8Q16^B24
canAnimate
TB,N,V_canAnimate
internalState
TQ,N,V_internalState
barViews
T@"NSArray",R,C,N,V_barViews
TQ,N,V_state
imageLoader
T@"TVNPDataImageLoader",&,N,V_imageLoader
currentDestination.destinationName
titleView
T@"UILabel",R,N,V_titleView
hintView
T@"UILabel",R,N,V_hintView
destinationsCollectionViewController
T@"TVNPRoutingDestinationsCollectionViewController",R,N,V_destinationsCollectionViewController
routesCollectionViewController
T@"TVNPRoutingRoutesCollectionViewController",R,N,V_routesCollectionViewController
T@"<TVNPRoutingMainViewControllerDelegate>",W,N,V_delegate
nowplaying_audiorouting_tv
nowplaying_audiorouting_b238
nowplaying_audiorouting_airpods
nowplaying_audiorouting_powerbeats
nowplaying_audiorouting_beatssolo
nowplaying_audiorouting_beatsx
nowplaying_audiorouting_speaker
nowplaying_audiorouting_tv-large
nowplaying_audiorouting_b238-large
nowplaying_audiorouting_airpods-large
nowplaying_audiorouting_powerbeats-large
nowplaying_audiorouting_beatssolo-large
nowplaying_audiorouting_beatsx-large
nowplaying_audiorouting_speaker-large
tvnp_shouldShowRoute
tvnp_deviceType
TQ,R,N
focusedIndexPath
T@"NSIndexPath",C,N,V_focusedIndexPath
topGradientHeight
Td,N,V_topGradientHeight
bottomGradientHeight
Td,N,V_bottomGradientHeight
v24@?0Q8^B16
Audio/Video
com.apple.TVNPLocalRoutingDestination.metadata
%@: MPAVRoute:%@
outputDeviceRoute
T@"MPAVOutputDeviceRoute",&,N,V_outputDeviceRoute
%@: AVRoute:%@
avRoute
T@"MPAVRoute",&,N,V_avRoute
artworkView
T@"UIImageView",R,N,V_artworkView
deviceView
T@"UIImageView",R,N,V_deviceView
shadowView
T@"UIView",R,N,V_shadowView
artworkImage
T@"UIImage",&,N,V_artworkImage
showDeviceImage
TB,N,V_showDeviceImage
window
T@"UIWindow",&,N
T@"UIWindow",&,N,V_window
Insert(%@)
Delete(%@)
Move(%ld, %ld)
changeType
Tq,R,N,V_changeType
sourceIndexes
T@"NSIndexSet",R,C,N,V_sourceIndexes
destinationIndexes
T@"NSIndexSet",R,C,N,V_destinationIndexes
v32@?0@8Q16^B24
airtunesd
TVAirPlayTimeNotificationName
TVNPMetadataPlayer
v16@?0^{__CFDictionary=}8
v12@?0i8
kTVSMediaRemoteNowPlayingInfoRadioAdURLString
player
T@"TVNPMetadataPlayer",&,N,V_player
musicViewController
T@"TVPMusicNowPlayingViewController",&,N,V_musicViewController
mediaRemoteObserver
T@"TVNPMediaRemoteObserver",&,N,V_mediaRemoteObserver
menuGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_menuGestureRecognizer
nowPlayingWallPaper
T@"UIView",&,N,V_nowPlayingWallPaper
color
scale
imageCache
T@"NSCache",R,N,V_imageCache
ChooseMusicTitle
SelectToConnectTitle
TVNPNowPlayingSliderView
TVNPEndpointRoutingDestination
MPVolumeControllerDelegate
NSObject
PBSViewServicePresenter
PBSViewServiceInterface
TVNPRoutingHostViewController
TVNPRoutingMainViewControllerDelegate
TVNPRoutingDestinationsCollectionViewController
PBSBulletinServiceDelegate
TVNPRouteCollectionViewCell
TVNPGroupableRoutingController
MPAVRoutingControllerDelegate
TVNPRoutingController
TVNPDataImageLoader
TVImageLoader
TVNPRoutingDestination
TVNPMetadataPlayer
TVPPlayback
TVNPExternalDeviceProxy
TVNPNowPlayingProgressView
TVNPRoute
TVNPBaseRouteCollectionViewCell
TVNPRoutingMusicBarsView
TVNPMediaItem
TVNPRoutingMainViewController
TVNPRoutingDestinationsCollectionViewControllerDelegate
TVNowPlayingService
TVNPRoutingDestinationsCollectionViewLayout
TVNPRoutingRoutesCollectionViewLayout
TVNPRoutingRoutesCollectionViewController
TVNPLocalRoutingDestination
TVNPOutputDeviceRoute
TVNPLegacyRoute
TVNPBaseRoutingDestinationCollectionViewCell
TVNowPlayingServiceAppDelegate
UIApplicationDelegate
TVNPArrayChange
TVNPMediaRemoteObserver
TVNPViewController
TVNPRoutingTintedImageCache
TVNPRoutingDestinationCollectionViewCell
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B16@0:8
v16@0:8
{CGSize=dd}16@0:8
{CGSize=dd}32@0:8{CGSize=dd}16
v20@0:8f16
v24@0:8f16B20
v24@0:8@16
B32@0:8@16@24
v32@0:8@16@24
@16@0:8
f16@0:8
v20@0:8B16
{CGPoint=dd}16@0:8
@"UIImage"
@"TVNPNowPlayingProgressView"
@"UIImageView"
@"UIView"
{CGPoint="x"d"y"d}
Q20@0:8I16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8@16B24
v28@0:8@16f24
v32@0:8@16q24
v28@0:8@"MPVolumeController"16B24
v32@0:8@"MPVolumeController"16@"NSString"24
v28@0:8@"MPVolumeController"16f24
v32@0:8@"MPVolumeController"16q24
@24@0:8@16
^v16@0:8
@"MPAVEndpointRoute"
@"TVNPExternalDeviceProxy"
@"MPVolumeController"
@"<NSCopying>"
@"NSObject<OS_dispatch_queue>"
v32@0:8@16@?24
v24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@?<v@?>24
@"NSXPCInterface"16@0:8
v32@0:8@"NSDictionary"16@?<v@?@"<NSSecureCoding>"@"NSError">24
v24@0:8@"<NSSecureCoding>"16
v24@0:8@"TVNPRoutingMainViewController"16
@32@0:8@16@24
@"NSObject<OS_dispatch_group>"
@"TVNPGroupableRoutingController"
v40@0:8@16@24Q32
v40@0:8@"<PBSBulletinServiceInterface>"16@"PBSBulletin"24Q32
v48@0:8@16@24@32^v40
q24@0:8@16
q32@0:8@16q24
v40@0:8@16@24@32
{CGPoint=dd}40@0:8@16{CGPoint=dd}24
@"NSObject<TVNPRoutingController>"
@"<TVNPRoutingDestinationsCollectionViewControllerDelegate>"
@"TVNPRoutingDestination"
@"PBSBulletin"
@"TVNPRoute"
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v28@0:8@"MPAVRoutingController"16B24
v24@0:8Q16
v32@0:8@"TVNPRoute"16@"TVNPRoutingDestination"24
v24@0:8@"TVNPRoutingDestination"16
@"TVNPRoutingDestination"16@0:8
@"NSArray"16@0:8
@32@0:8@16@?24
@"NSArray"
@"NSString"
@"MPAVEndpointRoutingDataSource"
@"MPAVOutputDeviceRoutingDataSource"
@"MPAVRoutingController"
@"NSMutableDictionary"
@"NSMapTable"
@52@0:8@16{CGSize=dd}24B40@?44
@60@0:8@16{CGSize=dd}24B40q44@?52
@"NSString"24@0:8@16
@52@0:8@16{CGSize=dd}24B40@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">44
@60@0:8@16{CGSize=dd}24B40q44@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">52
@"TVImage"
@"NSData"
@"NSNumber"
v24@0:8q16
v32@0:8q16@24
v24@0:8d16
v28@0:8d16B24
v48@0:8d16{?=qiIq}24
v52@0:8d16{?=qiIq}24B48
@24@0:8@?16
q16@0:8
d16@0:8
v32@0:8Q16@24
@24@0:8@"NSString"16
v32@0:8q16@"NSString"24
@24@0:8@?<v@?d@"NSDate"dB>16
@32@0:8@"NSArray"16@?<v@?B>24
v28@0:8@"TVPSubtitleOption"16B24
@"<TVPPlaybackDelegate>"16@0:8
v24@0:8@"<TVPPlaybackDelegate>"16
@"<TVPASyncPlaybackDelegate>"16@0:8
v24@0:8@"<TVPASyncPlaybackDelegate>"16
@"TVPPlaylist"16@0:8
v24@0:8@"TVPPlaylist"16
@"NSObject<TVPMediaItem>"16@0:8
v24@0:8@"NSObject<TVPMediaItem>"16
@"TVPPlaybackState"16@0:8
@"NSDate"16@0:8
v24@0:8@"NSDate"16
@"TVPChapterCollection"16@0:8
v24@0:8@"TVPChapterCollection"16
@"TVPChapter"16@0:8
@"TVPInterstitial"16@0:8
@"TVPTimeRange"16@0:8
@"TVPDateRange"16@0:8
@"TVPAudioOption"16@0:8
v24@0:8@"TVPAudioOption"16
@"TVPSubtitleOption"16@0:8
v24@0:8@"TVPSubtitleOption"16
v32@0:8Q16@"NSString"24
v32@0:8d16@24
f24@0:8@16
@"NSDate"
@"NSTimer"
@"TVPPlaylist"
@"TVPPlaybackState"
@"TVPChapter"
@"TVPTimeRange"
@"TVPDateRange"
@"TVPChapterCollection"
@"TVPAudioOption"
@"TVPSubtitleOption"
@"<TVPPlaybackDelegate>"
@"<TVPASyncPlaybackDelegate>"
@"TVPInterstitial"
{CGSize="width"d"height"d}
@24@0:8^v16
@32@0:8^v16^v24
I16@0:8
i16@0:8
v32@0:8{CGSize=dd}16
@"NSMutableSet"
@28@0:8Q16B24
@20@0:8B16
@24@0:8B16B20
@"_UIFloatingContentView"
@"UIActivityIndicatorView"
@"TVNPRoutingMusicBarsView"
@"UILabel"
@"TVNPNowPlayingSliderView"
@"UILayoutGuide"
@"NSMutableArray"
@"TVNPDataImageLoader"
v24@0:8@"TVNPRoutingDestinationsCollectionViewController"16
@"<TVNPRoutingMainViewControllerDelegate>"
@"TVNPRoutingDestinationsCollectionViewController"
@"TVNPRoutingRoutesCollectionViewController"
@24@0:8Q16
{CGPoint=dd}32@0:8{CGPoint=dd}16
{CGPoint=dd}48@0:8{CGPoint=dd}16{CGPoint=dd}32
{CGPoint=dd}24@0:8@16
@"NSIndexPath"
{CGSize=dd}40@0:8@16@24@32
@40@0:8@16Q24@32
v32@0:8@16Q24
v40@0:8@16Q24@32
@"MPAVOutputDeviceRoute"
@"MPAVRoute"
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"UIWindow"
@32@0:8Q16Q24
@"NSIndexSet"
v20@0:8i16
@"NSDictionary"
@"TVNPMetadataPlayer"
@"TVPMusicNowPlayingViewController"
@"TVNPMediaRemoteObserver"
@"UITapGestureRecognizer"
@"NSCache"
ROUTING: Fetching initial endpoints (begin)
ROUTING: Fetching initial endpoints (complete)
Volume up from %f to %f
Volume up not available
Volume down from %f to %f
Volume down not available
ROUTING: Fetch Active Endpoint
ROUTING: Active Endpoint %@
ROUTING: Found Active Endpoint
ROUTING: Initial Focus Index: %ld
Add Picked Route: %@ to Endpoint: %@
Add Picked Route result: %d
Set Picked Route: %@ for Endpoint: %@
Set Picked Route result: %d
Remove Picked Route: %@ from Endpoint: %@
Remove Picked Route result: %d
Retarget to Endpoint: %@
Updated DataSource for %@
 with picked: %@
 pending: %@
(%@) Status Changed to %u for %@ (%@)
(%@) Connect to device %@
(%@) Connect and Pair: %@
(%@) Send Toggle PlayPause, error: %u status: %@
(%@) Handle update: %@
(%@) Update Values - State: %u, Paired: %d, Title: %@
(%@) Changed Keys: %@
(%@) %@: %@
(%@) - Content Item: %@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.appletv.pbs.allow-custom-volume</key>
<true/>
<key>com.apple.appletv.pbs.allow-now-playing-presentation</key>
<true/>
<key>com.apple.appletv.pbs.bulletin-service-access</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.security.exception.process-info</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.Music</string>
</array>
</dict>
</plist>
