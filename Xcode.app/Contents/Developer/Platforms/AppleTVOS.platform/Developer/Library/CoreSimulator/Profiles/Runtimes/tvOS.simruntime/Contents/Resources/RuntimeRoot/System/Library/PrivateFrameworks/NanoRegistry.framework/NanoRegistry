v8@?0
com.apple.nanoregistry.mutableDeviceProperty.dateformatter
MM-dd-yyyy HH:mm:ss.SSS
%@ %ld
%@ 1
unknown
com.apple.nanoregistry.saga.FakeError
Fake Failure for testing
Unable to rollback
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
delegate
T@"<EPTransactionDelegate>",W,N
T@"<EPTransactionDelegate>",W,N,V_delegate
devices
deviceDiff
changeType
[DELETED]
[CREATED]
[UPDATED]
supportsSecureCoding
TB,R
diff
T@"NRDeviceDiff",R,N,V_diff
TQ,R,N,V_changeType
device collection diff type
device collection diff type key
device collection diff type value
q24@?0@"NSUUID"8@"NSUUID"16
diffDeviceDiffs
T@"NSDictionary",R,N,V_diffDeviceDiffs
UUID
secure property UUID
Secure property ID: 
properties
NRSecureDevicePropertyStore property dictionary
%@: is %@
dirty
clean
%@ = %@
TB,R,N,V_dirty
XPC failure
already paired with device
multiple device pairing not supported
device not in idle state- check to make sure you are paired or unpaired as expected, and that NanoRegistry is not busy pairing or unpairing
unknown device
internal error
bluetooth connect timeout
bluetooth pairing failure
lost xpc connection to client
bluetooth turned off
xpc nano pairing request timeout
Nano Registry restarted
bluetooth pair complete timeout
IDS connect timeout
initial property exchange timeout
unpair request from peer via IDS
pair or unpair request via XPC
activation failed
daemon enable failure
pairing aborted by client
entitlement missing
busy pairing or unpairing
initial property send failure
timed out waiting to unpair bluetooth devices
gizmo state change request failed to send
companion version is too old for gizmo
pairing client suspended or terminated
disk full can't write state files
incorrect PIN entered on phone
abort pairing user requested
restriction
passcode entry timeout
bluetooth discovery timeout
IDS local pairing API failure
switch failed due to active assertion
configure state requested when devices are incompatible
paired device not compatible with quick switch
Error managing key
File error
Conditions unmet to allow for a MagicSwitch
error %ld missing error string
com.apple.nanoregistry.pairingerror
englishMessage
ProductName
ProductVersion
Watch OS
watchOS
iPhone OS
index
date
switchIndex
startIndex
history
deviceCollection
%06lld: %@ (switch=%u)
(null)
historyManager
T@"NRDeviceCollectionHistory",W,N,V_historyManager
TQ,N,V_index
T@"NSDate",&,N,V_date
T@"NRDeviceCollectionDiff",&,N,V_diff
TI,N,V_switchIndex
state
T@"NRMutableDeviceCollection",R,N
observer
T@?,C,N,V_observer
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
q24@?0@8@16
TQ,N,V_startIndex
T@"NSMutableArray",&,N,V_history
historyStateCache
T@"NSMutableDictionary",&,N,V_historyStateCache
historyStateCacheMRU
T@"NSMutableArray",&,N,V_historyStateCacheMRU
historyStateCacheIndex
T@"NSMutableArray",&,N,V_historyStateCacheIndex
T@"NRMutableDeviceCollection",R,N,V_deviceCollection
count
TQ,R,N
nextIndex
TI,R,N
btPairingRetryCount
migrationIDSDisconnectCount
migrationAttemptCounter
data
T@"NSMutableDictionary",&,N,V_data
device collection dictionary
device collection dictionary key
device collection dictionary value
T@"NSMutableDictionary",&,N,V_deviceCollection
childMap
T@"NSMutableDictionary",&,N,V_childMap
activeDevice
T@"NRMutableDevice",R,N
activeDeviceID
T@"NSUUID",&,N
isPaired
TB,R,N,Gpaired
device
passcode
OOBKey
error
status
pairingStorePath
compatibilityState
previousDevice
NRDeviceDiscoveryControllerDidDiscoverDevice
NRPairedDeviceRegistryDeviceDidBeginPairingNotification
NRPairedDeviceRegistryDeviceDidPairNotification
NRPairedDeviceRegistryDeviceDidFailToPairNotification
NRPairedDeviceRegistryDeviceDidUnpairNotification
NRPairedDeviceRegistryStatusDidChange
NRPairedDeviceRegistryPairingStorePathDidChangeNotification
NRPairedDeviceRegistryDeviceNeedsPasscode
NRPairedDeviceRegistryDeviceOOBKeyDidChange
NRPairedDeviceRegistryDeviceDidBeginActivation
NRPairedDeviceRegistryRemoteUnpairingDidBeginNotification
NRPairedDeviceRegistryDeviceDidEnterCompatibilityStateNotification
NRPairedDeviceRegistryDevicesDidUpdateNotification
NRPairedDeviceRegistryDeviceDidReceiveBTPairingRequestNotification
NRPairedDeviceRegistryDeviceDidBecomeActive
NRPairedDeviceRegistryDeviceDidBecomeInactive
com.apple.nanoregistry.deviceispairinglinkisup
com.apple.nanoregistry.devicedidpair
com.apple.nanoregistry.devicedidunpair
com.apple.nanoregistry.remoteunpairingbeginning
com.apple.nanoregistry.restarted
com.apple.nanoregistry.paireddevicedidchangeversion
com.apple.nanoregistry.paireddevicedidchangecapabilities
com.apple.nanoregistry.watchdidbecomeactive
pairingID
isConnected
isActive
advertisedName
name
color
bluetoothMACAddress
WIFIMACAddress
totalStorage
systemVersion
serialNumber
productType
chipID
homeButtonType
systemName
marketingProductName
systemBuildVersion
localPairingDataStorePath
localizedModel
regionCode
regionInfo
modelNumber
hwModelStr
buildString
activationInProgress
UDID
screenSize
class
enclosureColor
enclosureMaterial
SEID
additionalSEIDs
Dmin
marketingHardwareBehavior
marketingHardwareBehaviorSubBrand
greenTea
signingFuse
screenScale
pairingCompatibilityVersion
maxPairingCompatibilityVersion
minPairingCompatibilityVersion
deviceNameString
currentUserLocale
preferredLanguages
pairedDate
marketingVersion
IMEI
MEID
mainScreenWidth
mainScreenHeight
isInternalInstall
lastActiveDate
lastInactiveDate
pairedDeviceCount
hasSEP
hasSecureElement
deviceCoverGlassColor
deviceHousingColor
deviceBackingColor
isArchived
migrationConsent
migrationConsentDate
fractionCompleted
basebandRegionSKURadioTechnology
wifiAntennaSKUVersion
statusCode
lastPairingError
bluetoothPaired
remoteUnpairingStarted
bogusDevice
capabilities
migrationKeyRevision
NRPairedDeviceRegistryLaunchedByNanoRegistry
NRPairedDeviceRegistryAbortPairingUserRequested
com.apple.nanoregistry.NRDevicesUpdateCounterNotifyNotification
com.apple.nanoregistry.NRSecurePropertiesUnlockedNotifyNotification
com.apple.nanoregistry.NRDemoModeNotifyNotification
com.apple.nanoregistry.NRIdleNotification
regulatoryModelNumber
_RSSI
_bluetoothIdentifier
_migrationIDSCloudIdentifier
_advertisingIdentifierSeed
_migrationCount
com.apple.nanoregistry.pairedsync.isokaytosync
gizmoPairingVersion
obliterate
brick
_keychainOff
com.apple.NanoRegistry
lastUnpairReason
com.apple.nanoregistry.watchsetuppush
com.apple.nanoregistry.migrationconsentrequested
com.apple.nanoregistry.migrationshowfakesync
com.apple.nanoregistry.migrationconsentexpired
block
T@?,C,N,V_block
desiredIndex
T@"NSNumber",&,N,V_desiredIndex
Tq,N,V_pairingCompatibilityVersion
Tq,N,V_maxPairingCompatibilityVersion
Tq,N,V_minPairingCompatibilityVersion
minQuickSwitchCompatibilityVersion
Tq,N,V_minQuickSwitchCompatibilityVersion
isOverrideActive
TB,N,V_isOverrideActive
%lld
processName
T@"NSString",&,N,V_processName
entitlements
T@"NSArray",&,N,V_entitlements
lastIndexCheckin
TQ,N,V_lastIndexCheckin
com.apple.demo-settings
StoreDemoMode
FProgramNumber
Setup
Bridge
magicswitchd
pairtool
com.apple.nanoregistry.client
com.apple.nanoregistry.internal
v12@?0i8
v16@?0@"NSError"8
v16@?0@"NSDictionary"8
v16@?0@"NRDeviceCollectionHistory"8
v16@?0@"NSArray"8
v32@?0@"NSUUID"8Q16@"<NSObject><NSCopying>"24
previousDeviceID
v16@?0q8
v24@?0@"<NRDiffProtocol>"8@16
with
without
v36@?0@"NRMutableDeviceCollection"8Q16B24@"NRSecureDevicePropertyStore"28
v36@?0@"NRDeviceCollectionDiff"8B16Q20B28B32
v12@?0B8
B16@?0@"NRDevice"8
v24@?0@"NSString"8@"NSUUID"16
com.apple.nanoregistry.pairingorswitchcompletequeue
com.apple.nano.nanoregistry.paireddeviceregistry
watch-companion
v12@?0I8
v24@?0@"NSUUID"8@"NSDate"16
com.apple.nanoregistry.private
submitting server request report
ping request
v28@?0B8d12d20
apply diff
start watch push
get watch push status
stop watch push
lock assertion
mutableDeviceDictionary
T@"NSMutableDictionary",&,N,V_mutableDeviceDictionary
clientQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_clientQueue
internalQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
xpcConnectionInvalidated
TB,N,V_xpcConnectionInvalidated
finishedPairingSemaphores
T@"NSMutableArray",&,N,V_finishedPairingSemaphores
xpcConnection
T@"NSXPCConnection",&,N,V_xpcConnection
hasSomeEntitlements
TB,N,V_hasSomeEntitlements
devicesUpdateCounterNotifyToken
Ti,N,V_devicesUpdateCounterNotifyToken
securePropertiesUnlockedNotifyToken
Ti,N,V_securePropertiesUnlockedNotifyToken
demoModeNotifyToken
Ti,N,V_demoModeNotifyToken
idleNotifyToken
Ti,N,V_idleNotifyToken
devicesUpdateCounter
TQ,N,V_devicesUpdateCounter
hasSecurePropertyEntitlement
TB,N,V_hasSecurePropertyEntitlement
T@"NRMutableDeviceCollection",&,N,V_deviceCollection
deviceCollectionUpdateBlocks
T@"NSMutableArray",&,N,V_deviceCollectionUpdateBlocks
securePropertiesUpdateBlocks
T@"NSMutableArray",&,N,V_securePropertiesUpdateBlocks
waitForDeviceCollectionBlocks
T@"NSMutableArray",&,N,V_waitForDeviceCollectionBlocks
isDeviceCollectionDiffRequested
TB,N,V_isDeviceCollectionDiffRequested
areSecurePropertiesRequested
TB,N,V_areSecurePropertiesRequested
lastStatusSent
TQ,N,V_lastStatusSent
lastCompatibilityStateSent
TS,N,V_lastCompatibilityStateSent
initialLastCompatibilityStateHasBeenSent
TB,N,V_initialLastCompatibilityStateHasBeenSent
initialStatusHasBeenSent
TB,N,V_initialStatusHasBeenSent
isInitialized
TB,N,V_isInitialized
secureDataIsAvailable
TB,N,V_secureDataIsAvailable
needToFetchSecureProperties
TB,N,V_needToFetchSecureProperties
pairingOrSwitchCompleteQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pairingOrSwitchCompleteQueue
T@"NSArray",R,N
v16@?0@"<NRMigratorObserver>"8
set migration consent
start migration
migratingDevice
T@"NRDevice",R,N,V_migratingDevice
apple-internal-install
_ShowInternalAutomationUI
com.apple.nanobuddy.automationhelper
NRPairedDeviceRegistryStatusCode UNKNOWN
NRPairedDeviceRegistryStatusCodeInvalid
NRPairedDeviceRegistryStatusCodeReady
NRPairedDeviceRegistryStatusCodeUnpairing
NRPairedDeviceRegistryStatusCodePairing
NRPairedDeviceRegistryStatusCodeSwitching
NRPairedDeviceRegistryStatusCodeMigrating
com.apple.nanoregistry.pairingcompatibilityversion
(unknown)
requestType
T@"NSString",&,N,V_requestType
timebaseInfo
T{mach_timebase_info=II},N,V_timebaseInfo
startTime
Td,N,V_startTime
submitted
TB,N,V_submitted
value
property value
T@"<NSObject><NSCopying>",&,N,V_value
%@ %@
phoneUDIDHash
T@"NSMutableArray",&,N,V_devices
hasPhoneUDIDHash
TB,R,N
T@"NSData",&,N,V_phoneUDIDHash
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890
NRSHA256
T@"NSData",R,N
framework
daemon
root_daemon
pairing_reporter
magic_switch
device properties dictionary
device property key
device property value
T@"NSMutableDictionary",&,N,V_properties
T@"NSUUID",R,N
migratable
hasID
T@"NSData",&,N,V_iD
hasName
T@"NSString",&,N,V_name
hasAdvertisedName
T@"NSString",&,N,V_advertisedName
compressed
possiblyCompressedData
hasCompressed
TB,N
TB,N,V_compressed
hasPossiblyCompressedData
T@"NSData",&,N,V_possiblyCompressedData
T@"<NSObject><NSCopying>",R,N,V_value
propertyDiff
T@"NRDevicePropertyDiff",R,N,V_diff
device property diff type
device property diff type key
device property diff type property
diffPropertyDiffs
T@"NSDictionary",R,N,V_diffPropertyDiffs
parentDelegate
T@"<NRMutableStateParentDelegate>",W,N
T@"<NRMutableStateParentDelegate>",W,N,V_parentDelegate
failure unarchiving %@
%@ is nil
%@ is class %@ expected one of %@
com.apple.NanoRegistry.NRActiveDeviceAssertion
com.apple.NanoRegistry.NRActiveDeviceAssertionMonitor
observers
T@"NSHashTable",&,N,V_observers
workQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
assertionToken
Ti,N,V_assertionToken
hasActiveAssertion
com.apple.nanoregistry.saga.SleepAfterIDS
Watch1
Watch2
archiveSecureItems
TB,N,V_archiveSecureItems
NRDevice: 
%@="%@" 
T@"NSMutableDictionary",&,N,V_observers
promiscuousObservers
T@"NSPointerArray",&,N,V_promiscuousObservers
changeBlocks
T@"NSMutableDictionary",&,N,V_changeBlocks
promiscuousChangeBlocks
T@"NSMutableArray",&,N,V_promiscuousChangeBlocks
nrQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_nrQueue
deviceID
T@"NSUUID",&,N,V_deviceID
syncDevicesDelegate
T@"<NRFrameworkDeviceDelegate>",W,N,V_syncDevicesDelegate
com.apple.NanoRegistry.NRObjectUniquenessFactory
class=%@ code=%lld domain=%@
class=%@ name=%@ reason=%@
com.apple.nanoregistryd.companionAdvSeed
AdvertisingIdentifierSeed
com.apple.nanoregistry.dropoutcounter
connected
TB,N,V_connected
dropoutCounter
TQ,N,V_dropoutCounter
com.apple.nanoregistry.activeDeviceAssertion.%p
<%@: %p; isActive = %d; identifier = %@; pairingID = %@>
identifier
T@"NSString",&,N,V_identifier
TB,N,V_isActive
T@"NRDevice",&,N,V_device
componentsSeparatedByString:
stringByAppendingString:
length
stringByPaddingToLength:withString:startingAtIndex:
countByEnumeratingWithState:objects:count:
substringFromIndex:
isEqualToString:
alloc
init
setDateFormat:
stringFromDate:
mutableCopy
count
objectAtIndexedSubscript:
integerValue
lastObject
removeObject:
componentsJoinedByString:
stringWithFormat:
containsObject:
prefixLinesWithString:withText:
dateFormatter:
nameCounter:
errors
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
addObject:
delegate
transactionDidComplete:
queue
persist
canRollback
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
beginTransactionWithRoutingSlipEntry:serviceRegistry:
beginRollbackWithRoutingSlipEntry:serviceRegistry:
setDelegate:
.cxx_destruct
_delegate
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeObject:forKey:
encodeInteger:forKey:
allocWithZone:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
initWithDiff:andChangeType:
diff
changeType
_diff
_changeType
objectForKeyedSubscript:
allKeys
arrayWithObjects:count:
setWithArray:
decodeObjectOfClasses:forKey:
unarchivingVerifyObjectIsNotNil:name:owner:
setWithObject:
unarchivingVerifyObjectClasses:name:classes:owner:
UUIDString
compare:options:
sortedArrayUsingComparator:
diffCollectionDiffForPairingID:
initWithDeviceCollectionDiffDeviceDiffs:
allPairingIDs
diffDeviceDiffs
_diffDeviceDiffs
UUID
initWithUUIDString:
initWithPropertyString:
_uuid
dictionary
setObject:forKeyedSubscript:
removeObjectForKey:
enclosedClassTypes
setByAddingObjectsFromSet:
setByAddingObject:
securePropertyForID:
mutableCopyWithZone:
classTypes
storeSecureProperty:
removeSecureProperty:
allSecurePropertyIDs
dirty
_IDToProperty
_propertyToID
_dirty
numberWithUnsignedInteger:
numberWithInteger:
initWithDomain:code:userInfo:
valueForProperty:
decodeInt64ForKey:
decodeInt32ForKey:
encodeInt64:forKey:
encodeInt32:forKey:
stateAtIndex:
initWithHistory:index:date:diff:switchIndex:
state
index
setIndex:
date
setDate:
setDiff:
switchIndex
setSwitchIndex:
historyManager
setHistoryManager:
_switchIndex
_index
_date
_historyManager
observer
setObserver:
setQueue:
_observer
_queue
array
orderedSet
setParentDelegate:
_truncateHistory
numberWithUnsignedLongLong:
_mostRecentStateBefore:
numberWithLongLong:
longLongValue
applyDiff:
_updateHistoryCachesWithIndex:
indexOfObject:inSortedRange:options:usingComparator:
_findIndexInHistoryStateCache:type:
insertObject:atIndex:
pruneStateCacheItems:
removeLastObject
firstObject
timeIntervalSinceDate:
diffFrom:to:
removeObjectsInRange:
removeAllObjects
applyDiff:upOnly:notifyParent:unconditional:
switchDeviceIDFromDiff:
notifyObserversWithEntry:
value
numberWithBool:
copy
historyEntryAtIndex:
isEqualToHistory:
child:didApplyDiff:
purgeWorkingSet
nextIndex
addObserverQueue:withBlock:
removeObserver:
deviceIDAtSwitchIndex:date:
deviceCollection
startIndex
setStartIndex:
history
setHistory:
historyStateCache
setHistoryStateCache:
historyStateCacheMRU
setHistoryStateCacheMRU:
historyStateCacheIndex
setHistoryStateCacheIndex:
_observers
_deviceCollection
_startIndex
_history
_historyStateCache
_historyStateCacheMRU
_historyStateCacheIndex
setData:
objectForKey:
initWithInt:
intValue
numberWithInt:
setObject:forKey:
createSharedInstance
sharedInstance
incrementCounterForKey:
setValue:forKey:
getValueForKey:
reset
data
_data
activeDeviceID
boolValue
_diffsToChangeActiveDeviceToDeviceID:
diffsToActivate:withDate:
initWithDiffPropertyDiffs:
isPaired
minusSet:
valueWithPointer:
notifyParentWithDiff:
notifyObserversWithDiff:
deviceForPairingID:
setDevice:forPairingID:
parseDiff:forPropertyChange:withBlock:
removeDeviceForPairingID:
deviceForBluetoothID:
activeDevice
setActiveDeviceID:
paired
setDeviceCollection:
childMap
setChildMap:
_childMap
supportsCapability:
block
setBlock:
desiredIndex
setDesiredIndex:
_block
_desiredIndex
valueForToken:
setPairingCompatibilityVersion:
setMinPairingCompatibilityVersion:
setMaxPairingCompatibilityVersion:
setMinQuickSwitchCompatibilityVersion:
setIsOverrideActive:
setValue:forToken:
systemVersions
pairingCompatibilityVersion
maxPairingCompatibilityVersion
minPairingCompatibilityVersion
minQuickSwitchCompatibilityVersion
isOverrideActive
_isOverrideActive
_pairingCompatibilityVersion
_maxPairingCompatibilityVersion
_minPairingCompatibilityVersion
_minQuickSwitchCompatibilityVersion
processName
setProcessName:
entitlements
setEntitlements:
lastIndexCheckin
setLastIndexCheckin:
_processName
_entitlements
_lastIndexCheckin
UTF8String
pairedDevicesSelectorBlock
getDevicesMatching:
_xpcInitializeConnection
getPairedDevices
maxPairedDeviceCount
setActivePairedDevice:isMagicSwitch:operationHasCompleted:
blockUntilDeviceCollectionIsInitialized
shouldBoostProcess
initWithBoost:
initNotifyTokens
requestDeviceCollectionDiffWithForce:
registerNotifyTokenWithName:withQueue:withBlock:
readNotifyToken:
registerNotifyTokenWithName:withBlock:
requestSecureProperties
defaultCenter
postNotificationName:object:userInfo:
xpcConnection
nr_safeDescription
remoteObjectProxyWithErrorHandler:
xpcRetrieveSecureProperties:block:
xpcGetChangeHistoryWithBlock:
xpcClientInfo:
createDevicesFromMutableDevices:andPropertyStore:
initWithQueue:
setDeviceID:
setSyncDevicesDelegate:
_queueSetValue:forProperty:
queueValueForProperty:
postNotification:forDeviceID:withUserInfo:
stringByAppendingPathComponent:
allValues
retrieveSecurePropertiesWithIDs:
stringByDeletingLastPathComponent
lastPathComponent
sendStatusChangeNotification
resumePairingOrSwitchCompleteQueue
code
userInfo
checkStatusAndCompatibilityState
sendDevicesUpdatedNotification
sendCompatibilityStateChangeNotification
supportsPairedDevice
numberWithUnsignedShort:
transitionToCompatibilityState:withBlock:
hasSecurePropertyEntitlement
parseDiffForNRDeviceUpdatesAndPairUnpair:hasSecurePropertyEntitlement:shouldBeQuiet:
fireAllInitialDeviceCollectionBlocksWith:
setupDeviceCollectionObserver
fireAllDeviceCollectionBlocksWithStatus:
_supportsWatch
initializeWithShouldMakeEmptyDeviceCollection:
isDaemonIdle
createDevicesFromMutableDevicesAndPropertyStore:
fireDeviceCollectionBlocksUpUntilIndex:
xpcGetDeviceCollectionWithBlock:
xpcGetDiffSinceIndex:withBlock:
propertyNames
stringByDeletingPathExtension
updateSecurePropertiesWithQueue:withCompletion:
updateDeviceCollectionWithQueue:withCompletion:
invalidate
dealloc
activePairedDeviceSelectorBlock
getAllDevices
unpairWithDevice:withOptions:operationHasBegun:
xpcPairWithSimulator:withCompletion:
xpcUnpairWithSimulator:withCompletion:
xpcSwitchToSimulator:withCompletion:
_findActivePairedDevice
_pairingStorePathPairingID:
waitForActivePairedDevice
pairingStorePathPairingID:
blockAndQueryVersions
initWithMachServiceName:options:
_xpcInvalidationHandler
setInvalidationHandler:
_xpcInterruptionHandler
setInterruptionHandler:
xpcSwitchIndex:
xpcDeviceIDAtSwitchIndex:withBlock:
xpcGetMigrationPairingCharacteristicReadDataWithCompletion:
xpcPutMigrationChallengeCharacteristicWriteData:completion:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
setRemoteObjectInterface:
xpcDeviceID:needsPasscode:
xpcHasNewOOBKey:
setExportedInterface:
setExportedObject:
resume
deviceIDForIDSDevice:
deviceForBTDeviceID:
deviceIDForNRDevice:
nsuuid
_deviceIDAtSwitchIndex:date:
_getSwitchEventsFromIndex:toIndex:inlineCallback:
xpcSubmitServerRequestReportWithRequestType:duration:errorCode:block:
xpcPingActiveGizmoWithPriority:withMessageSize:withBlock:
xpcApplyDiff:block:
xpcStartWatchSetupPushWithBlock:
xpcStopWatchSetupPushWithBlock:
xpcIsWatchSetupPushActiveWithBlock:
xpcSetMigrationConsented:forDeviceID:withBlock:
xpcBeginMigrationWithDeviceID:passcode:withBlock:
xpcGetLastMigrationRequestPhoneNameWithCompletion:
xpcKeepPhoneUnlockedInternalTestSPI:
_privateDaemonConnection
synchronousRemoteObjectProxyWithErrorHandler:
_synchronousPrivateDaemonProxyWithErrorString:
initWithRequestType:
_privateDaemonProxyWithErrorString:
sharedMigrator
setMigrationConsented:forDevice:withBlock:
activeDeviceSelectorBlock
replacementObjectForXPCConnection:encoder:object:
connection:handleInvocation:isReply:
syncDevicesWithDevice:
isKeychainEnabled
pairedDeviceCountIsLessThanMaxPairedDevices
pairedDeviceSupportQuickSwitch
setActivePairedDevice:operationHasCompleted:
setActivePairedDevice:withActiveDeviceAssertionHandler:
_invalidateActiveDeviceAssertionWithIdentifier:
_getChangeHistory
_getClientInfo
status
getDevicesWithBlock:
getDevices
getActivePairedDevice
companionOOBDiscoverAndPairWithName:withOutOfBandPairingKey:withOptions:operationHasBegun:
companionPasscodePairWithDevice:withOptions:operationHasBegun:
gizmoOOBAdvertiseAndPairWithName:operationHasBegun:
gizmoPasscodeAdvertiseAndPairWithName:operationHasBegun:
notifyActivationCompleted:withSuccess:
notifyPasscode:forDevice:
notifyPairingShouldContinue
unpairWithDevice:shouldObliterate:operationHasBegun:
pairWithSimulator:withQueue:withCompletion:
unpairWithSimulator:withQueue:withCompletion:
switchToSimulator:withQueue:withCompletion:
enterCompatibilityState:forDevice:
compatibilityState
waitForPairingStorePathPairingID:
abortPairing
abortPairingWithReason:
suspendPairingClientCrashMonitoring
resumePairingClientCrashMonitoring
pairingStorePath
pairingID
userIsCheckingForUpdate
retriggerUnpairInfoDialog
beginDiscovery
endDiscovery
overrideSignalStrengthLimit:
_recoveryDescription
_triggerRecovery
_setObliterationEnabled:
_addRemoveRecoveryStepDisableDaemons:
_addRemoveRecoveryStepBackup:withPairingDeviceID:
_addRemoveRecoveryStepDeleteAccounts:
_addRemoveRecoveryStepIDSUnpairStart:
_addRemoveRecoveryStepIDSUnpairStartQS:withPairedBTDeviceID:
_addRemoveRecoveryStepRemoteUnpair:withAdvertisedName:andPairedDeviceID:
_addRemoveRecoveryStepDeletePairingStore:withPairingDeviceID:
_addRemoveRecoveryStepUnpairBluetooth:withPairingDeviceID:
_addRemoveRecoveryStepIDSUnpair:withPairingDeviceID:
_addRemoveRecoveryStepStockholmReset:
_addRemoveRecoveryStepICloudDeletePaymentCards:
_addRemoveRecoveryStepResetNVRAM:
_addRemoveRecoveryStepObliterate:withStatePath:
_addRemoveRecoveryStepIDSFinalize:
_addRemoveRecoveryStepIDSFinalizeQS:withPairedBTDeviceID:
_qsRecoveryMigrationWithPairedBTDeviceID:
_submitAlbertPairingReport
_getLocalDeviceCollection
_getSecureProperties:
deviceForIDSDevice:
deviceForNRDevice:fromIDSDevices:
pairingClientDidEnterPhase:
getSwitchEventsFromIndex:inlineCallback:
_getActiveDeviceAssertionsWithInlineBlock:
_submitServerRequestReportWithRequestType:duration:errorCode:
serverRequestReporterWithType:
getMigrationPairingCharacteristicReadDataWithQueue:completion:
putMigrationChallengeCharacteristicWriteData:queue:completion:
_pingActiveGizmoWithPriority:withMessageSize:withBlock:
startWatchSetupPush
isWatchSetupPushActive
stopWatchSetupPush
keepPhoneUnlockedInternalTestSPI:
setXpcConnection:
mutableDeviceDictionary
setMutableDeviceDictionary:
clientQueue
setClientQueue:
internalQueue
setInternalQueue:
xpcConnectionInvalidated
setXpcConnectionInvalidated:
finishedPairingSemaphores
setFinishedPairingSemaphores:
hasSomeEntitlements
setHasSomeEntitlements:
devicesUpdateCounterNotifyToken
setDevicesUpdateCounterNotifyToken:
securePropertiesUnlockedNotifyToken
setSecurePropertiesUnlockedNotifyToken:
demoModeNotifyToken
setDemoModeNotifyToken:
idleNotifyToken
setIdleNotifyToken:
devicesUpdateCounter
setDevicesUpdateCounter:
setHasSecurePropertyEntitlement:
deviceCollectionUpdateBlocks
setDeviceCollectionUpdateBlocks:
securePropertiesUpdateBlocks
setSecurePropertiesUpdateBlocks:
waitForDeviceCollectionBlocks
setWaitForDeviceCollectionBlocks:
isDeviceCollectionDiffRequested
setIsDeviceCollectionDiffRequested:
areSecurePropertiesRequested
setAreSecurePropertiesRequested:
lastStatusSent
setLastStatusSent:
lastCompatibilityStateSent
setLastCompatibilityStateSent:
initialLastCompatibilityStateHasBeenSent
setInitialLastCompatibilityStateHasBeenSent:
initialStatusHasBeenSent
setInitialStatusHasBeenSent:
isInitialized
setIsInitialized:
secureDataIsAvailable
setSecureDataIsAvailable:
needToFetchSecureProperties
setNeedToFetchSecureProperties:
pairingOrSwitchCompleteQueue
setPairingOrSwitchCompleteQueue:
_xpcConnectionInvalidated
_hasSomeEntitlements
_hasSecurePropertyEntitlement
_isDeviceCollectionDiffRequested
_areSecurePropertiesRequested
_initialLastCompatibilityStateHasBeenSent
_initialStatusHasBeenSent
_isInitialized
_secureDataIsAvailable
_needToFetchSecureProperties
_lastCompatibilityStateSent
_devicesUpdateCounterNotifyToken
_securePropertiesUnlockedNotifyToken
_demoModeNotifyToken
_idleNotifyToken
_xpcConnection
_mutableDeviceDictionary
_clientQueue
_internalQueue
_finishedPairingSemaphores
_devicesUpdateCounter
_deviceCollectionUpdateBlocks
_securePropertiesUpdateBlocks
_waitForDeviceCollectionBlocks
_lastStatusSent
_pairingOrSwitchCompleteQueue
compare:
begin
devices
pointerArrayWithOptions:
migratorDidUpdate
enumerateObservers:
addPointer:
pointerAtIndex:
removePointerAtIndex:
compact
deviceID
setMigrationConsented:forDeviceID:withBlock:
addObserver:
beginMigrationWithDevice:passcode:withBlock:
beginMigrationWithDevice:withCompletion:
enterPreMigrationMode
migratingDevice
_migrating
_migratingDevice
valueForKey:
archived
canMigrate
migrationError
migrationConfirmed
stringWithUTF8String:
setRequestType:
abs_to_seconds:
setStartTime:
timebaseInfo
abs_to_nanos:
startTime
requestCompletedWithErrorCode:andDuration:
submitted
setSubmitted:
requestType
requestCompletedWithErrorCode:
requestTimedOut
setTimebaseInfo:
_submitted
_requestType
_timebaseInfo
_startTime
getUniqueObject:
initWithValue:
deallocObject:
setWithObjects:
setValue:
_value
objectAtIndex:
dictionaryRepresentation
initWithCapacity:
addDevices:
devicesCount
clearDevices
devicesAtIndex:
setPhoneUDIDHash:
devicesType
hasPhoneUDIDHash
readFrom:
writeTo:
copyTo:
mergeFrom:
setDevices:
phoneUDIDHash
_devices
_phoneUDIDHash
substringWithRange:
rangeOfString:
dataWithLength:
bytes
NRSHA256:
dataWithBytes:length:
NRSHA256
dataWithRandomBytesOfSize:
timeIntervalSinceNow
propertyForName:
setProperty:forName:
diffsToPair:withDate:
diffsToSetStatusCode:andCompatibilityState:
diffsToClearStatusCodeAndCompatibilityState
removePropertyForName:
allPropertyNames
isActive
isArchived
migratable
properties
setProperties:
_properties
setID:
setName:
setAdvertisedName:
hasID
hasName
hasAdvertisedName
name
advertisedName
_advertisedName
_name
setPossiblyCompressedData:
setCompressed:
setHasCompressed:
hasCompressed
hasPossiblyCompressedData
compressed
possiblyCompressedData
_possiblyCompressedData
_compressed
_has
diffPropertyDiffForName:
diffPropertyDiffs
_diffPropertyDiffs
parentDelegate
_parentDelegate
raise:format:
weakObjectsHashTable
_init
startObservingToken
stopObservingToken
notifyObserversWithTokenValue:
activeDeviceAssertionStateDidChange
hasActiveAssertion
observers
setObservers:
workQueue
setWorkQueue:
assertionToken
setAssertionToken:
_assertionToken
_workQueue
archiveSecureItems
setArchiveSecureItems:
_archiveSecureItems
setWithSet:
unionSet:
weakObjectsPointerArray
stringByAppendingFormat:
queueDescription
queueAddPropertyObserver:forPropertyChanges:
queueRemovePropertyObserver:forPropertyChanges:
_setValue:forProperty:
_queueFirePropertyObserversForProperty:fromValue:
device:propertyDidChange:fromValue:
changeBlocks
queueMergeWithDevice:
queueRegisterForPropertyChanges:withBlock:
queueUnregisterForPropertyChanges:withBlock:
addPropertyObserver:forPropertyChanges:
removePropertyObserver:forPropertyChanges:
setValue:forProperty:
_firePropertyObserversForProperty:fromValue:
initWithDevice:queue:withSecureProperties:
mergeWithDevice:
registerForPropertyChanges:withBlock:
unregisterForPropertyChanges:withBlock:
promiscuousObservers
setPromiscuousObservers:
setChangeBlocks:
promiscuousChangeBlocks
setPromiscuousChangeBlocks:
nrQueue
setNrQueue:
_promiscuousObservers
_changeBlocks
_promiscuousChangeBlocks
_nrQueue
initWithDevice:deviceID:queue:
_valueForProperty:
syncDevicesDelegate
_deviceID
_syncDevicesDelegate
member:
anyObject
_uniqueObjects
_uniqueObjectsQueue
domain
reason
companionSeedQueue
companionSeed
clearCompanionSeed
_readConnectivityStatus
dropoutCounter
connected
getDropoutCounter:
setConnected:
setDropoutCounter:
_connected
_dropoutCounter
_invalidate
initWithDevice:identifier:
device
identifier
setIdentifier:
setIsActive:
setDevice:
_isActive
_identifier
_device
NRTextFormattingUtilities
EPSagaTransactionFakeError
EPTransaction
NSObject
NRDeviceDiffType
NSCopying
NSSecureCoding
NSCoding
NRDeviceCollectionDiff
NSFastEnumeration
NRSecureDevicePropertyID
NRSecureDevicePropertyStore
NRDeviceCollectionHistoryEntry
NRDeviceCollectionHistoryObserverWrapper
NRDeviceCollectionHistory
NRMutableStateParentDelegate
NRDataCollector
NRMutableDeviceCollection
NRDeviceCapabilities
NRDeviceCollectionUpdateBlock
NRBlockQueueWrapper
NRPairingCompatibilityVersionInfo
NRClientInfo
NRPairedDeviceRegistryXPCDaemonDelegate
NRPairedDeviceRegistryXPCFrameworkDelegate
NanoRegistryPrivateDaemonDelegate
NRPairedDeviceRegistry
NSXPCConnectionDelegate
NRFrameworkDeviceDelegate
NRDeviceDiscoveryController
NRMigrator
migration
NRServerRequestReporter
NRMutableDeviceProperty
NRPBMigrationDevices
NRUtils
NRMutableDevice
NRPBMigrationDeviceInfo
NRPBCompressedData
NRDevicePropertyDiff
NRDevicePropertyDiffType
NRDeviceDiff
NRMutableStateBaseObserverWrapper
NRMutableStateBase
NRMutableStateProtocol
NRMutableStateObserverProtocol
NRMutableStateParentProtocol
NRDiffBase
NRDiffProtocol
NRUnarchivedObjectVerifier
NRActiveDeviceAssertionMonitor
EPSagaTransactionSleepAfterIDS
NRKeyedArchiver
NRKeyedUnarchiver
NRDevice
NRFrameworkDevice
NRObjectUniquenessFactory
NRSafeDescription
NRMagicSwitchHelper
NRConnectivitySubscriber
NRActiveDeviceAssertion
@32@0:8@16@24
@24@0:8@16
B16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v24@0:8@16
v32@0:8@"EPRoutingSlipEntry"16@"<EPServiceRegistry>"24
@"<EPTransactionDelegate>"16@0:8
v24@0:8@"<EPTransactionDelegate>"16
v16@0:8
@"<EPTransactionDelegate>"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16Q24
@"NRDeviceDiff"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@"NSDictionary"
@"NSUUID"
@"NSMutableDictionary"
@52@0:8@16Q24@32@40I48
v24@0:8Q16
I16@0:8
v20@0:8I16
@"NSDate"
@"NRDeviceCollectionDiff"
@"NRDeviceCollectionHistory"
@?16@0:8
v24@0:8@?16
@"NSObject<OS_dispatch_queue>"
v32@0:8@"<NRMutableStateProtocol>"16@"<NRDiffProtocol>"24
@24@0:8Q16
Q32@0:8@16Q24
@32@0:8@16@?24
@28@0:8I16^@20
@"NSMutableOrderedSet"
@"NRMutableDeviceCollection"
@"NSMutableArray"
v40@0:8@16@24@?32
@36@0:8@16B24B28B32
@"NSNumber"
Q20@0:8i16
v28@0:8Q16i24
v24@0:8q16
q16@0:8
v20@0:8B16
@"NSString"
@"NSArray"
v32@0:8Q16@?24
v32@0:8@16@?24
v28@0:8I16@?20
v24@0:8@?<v@?@"NRMutableDeviceCollection"QB@"NRSecureDevicePropertyStore">16
v32@0:8Q16@?<v@?@"NRDeviceCollectionDiff"BQBB>24
v32@0:8@"NSSet"16@?<v@?@"NSDictionary">24
v24@0:8@?<v@?@"NRDeviceCollectionHistory">16
v24@0:8@?<v@?I>16
v28@0:8I16@?<v@?@"NSUUID"@"NSDate">20
v24@0:8@?<v@?@"NSArray">16
v32@0:8@"NSUUID"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSData">16
v32@0:8@"NSData"16@?<v@?B>24
v32@0:8@"NSUUID"16@"NSNumber"24
v24@0:8@"NSData"16
v44@0:8@16d24I32@?36
v40@0:8q16Q24@?32
v36@0:8B16@20@?28
v44@0:8@"NSString"16d24I32@?<v@?>36
v40@0:8q16Q24@?<v@?Bdd>32
v32@0:8@"NRDeviceCollectionDiff"16@?<v@?>24
v24@0:8@?<v@?>16
v24@0:8@?<v@?B>16
v36@0:8B16@"NSUUID"20@?<v@?>28
v40@0:8@"NSUUID"16@"NSString"24@?<v@?>32
v24@0:8@?<v@?@"NSString">16
@40@0:8@16@24@32
v36@0:8@16@24B32
@"<NSSecureCoding>"40@0:8@"NSXPCConnection"16@"NSXPCCoder"24@32
v36@0:8@"NSXPCConnection"16@"NSInvocation"24B32
v24@0:8@"NRFrameworkDevice"16
v36@0:8@16B24@?28
@20@0:8B16
i32@0:8@16@?24
i40@0:8@16@24@?32
v40@0:8@16@24@32
v32@0:8@16B24B28
v32@0:8q16@?24
@24@0:8@?16
v48@0:8@16@24@32@?40
v28@0:8@16B24
v28@0:8S16@20
S16@0:8
v28@0:8B16@20
v36@0:8B16@20@28
v32@0:8I16I20@?24
v36@0:8@16d24I32
i16@0:8
v20@0:8i16
v20@0:8S16
@"NSXPCConnection"
@"NSPointerArray"
@"NRDevice"
Q24@0:8Q16
d24@0:8Q16
v28@0:8I16d20
{mach_timebase_info=II}16@0:8
v24@0:8{mach_timebase_info=II}16
d16@0:8
v24@0:8d16
{mach_timebase_info="numer"I"denom"I}
@"<NSObject><NSCopying>"
@"NSData"
v24@0:8[32C]16
@28@0:8B16@20
@28@0:8Q16S24
{?="compressed"b1}
@"NRDevicePropertyDiff"
@32@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?@"<NRDiffProtocol>"@>24
@"<NRMutableStateParentDelegate>"16@0:8
v24@0:8@"<NRMutableStateParentDelegate>"16
@"<NRDiffProtocol>"24@0:8@"<NRDiffProtocol>"16
@"<NRDiffProtocol>"36@0:8@"<NRDiffProtocol>"16B24B28B32
@"<NRDiffProtocol>"32@0:8@"<NRMutableStateProtocol>"16@"<NRMutableStateProtocol>"24
@"NSMutableSet"
@"<NRMutableStateParentDelegate>"
v48@0:8@16@24@32@40
@"NSHashTable"
B32@0:8@16@24
@36@0:8@16@24B32
@"<NRFrameworkDeviceDelegate>"
B24@0:8^Q16
Failed to get version notify token with result %d
Failed to set version notify token with result %d
Engaging NanoRegistry BOOST!!!!
Failed to register block and get notify token for %@
Updated token notification received
Requesting some secure properties %{public}@ from daemon
XPC error retrieving secure properties %{public}@ %{public}@
Received secure properties response for %{public}@
XPC error retrieving change history %{public}@
XPC error retrieving clientInfo %{public}@
Device became active+paired, resuming PSP/PID queue
Device became paired+active, resuming PSP/PID queue
NanoRegistry error: status missing from active device!
Requesting update from server (full)
XPC error %{public}@
Full update response received (%ld- %@ secure properties)
Requesting update from server (delta %ld)
Update response received (delta %ld)
Requesting secure properties from server
Secure properties response received
Blocking until paired
Woke up, checked for PSP/PID and they were not available. Going to sleep again.
Returning PID=%{public}@ PSP=%{public}@ 
returning %ld
Daemon exited. This is expected if the daemon is idle.
%u %u
Private daemon connection invalidated
Private daemon connection interrupted
XPC error "%@": %{public}@
Received request for characteristic read data- not implemented on phone side
beginMigrationWithDevice: %@
Failed to register for version notify token
Invalid Advertising Payload %@ - %@ %@ %@ %@
Invalid Advertising Payload %@
Tried to get rep of string rather than string-character
Failed to register short lived token with status: (%u)
Failed to query token value with status: (%u)
Failed to unregister short lived token with status: (%u)
Failed to register observer with status: (%u)
Failed to unregister observer with status: (%u)
Sleeping after IDS connect to allow metric testing
IMPORTANT! Unsupported ProductType (%@) falling back to generic size (which won't behave correctly in UI)!
Class %{public}@ %p registered for properties %{public}@
Class %{public}@ %p unregistered for properties %{public}@
Notification of change for property name %{public}@ will be sent to class %{public}@ %p
Notification of change for property name %{public}@ will be sent to block %p
Block %p registered for properties %{public}@
Block %p unregistered for properties %{public}@
Generated and persisted new companion seed: (%@); ret: (%u)
Cleared Advertising Identifier Seed; ret: (%u)
Failed to register block and get notify token for %s
Failed to read notify token in %@
