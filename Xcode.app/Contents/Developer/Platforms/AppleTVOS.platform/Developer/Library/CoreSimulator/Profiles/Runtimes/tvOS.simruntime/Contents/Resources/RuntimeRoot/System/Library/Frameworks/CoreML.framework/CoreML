validateClassifierInterfaceWithError:
initWithInterface:metadata:
predictionFromFeatures:classifier:options:error:
genericErrorWithString:
predictionFromFeatures:error:
predictionFromFeatures:options:error:
batchPredict:error:
modelDescription
interface
metadata
classLabels
classify:options:error:
initWithInterface:metadata:error:
init
alloc
initWithKeyType:
isUndefined
dictionaryValue
featureTypeErrorWithString:
type
class
countByEnumeratingWithState:objects:count:
isKindOfClass:
descriptionForType:
allocWithZone:
constraintWithStringKeys
constraintWithInt64Keys
isAllowedValue:error:
copyWithZone:
keyType
_keyType
initWithFilePath:inputLayerNames:outputLayerNames:parameters:
objectForKeyedSubscript:
floatValue
boolValue
initWithFeatureDescriptions:inputDesc:outputDesc:outputLayerNames:parameters:
allKeys
specFromFilePath:inputLayerNames:outputLayerNames:parameters:
specFromFeatureDescriptions:inputDesc:outputDesc:outputLayerNames:parameters:
.cxx_destruct
modelFilePath
setModelFilePath:
inputLayerNames
outputLayerNames
name
setName:
inputDescription
setInputDescription:
outputDescription
setOutputDescription:
precision
setPrecision:
engine
setEngine:
setQos:
isOrderedBgr
setOrderedBgr:
isGrayScale
setIsGrayScale:
blueBias
setBlueBias:
greenBias
setGreenBias:
redBias
setRedBias:
grayBias
setGrayBias:
scale
setScale:
_orderedBgr
_isGrayScale
_precision
_engine
_qos
_blueBias
_greenBias
_redBias
_grayBias
_scale
_modelFilePath
_inputLayerNames
_outputLayerNames
_name
_inputDescription
_outputDescription
predictedFeatureName
evaluate:error:
count
classifyTopK
classScoreVectorName
featureValueForName:
multiArrayValue
sortClassProbabilitiesWithMultiArray:classLabels:
objectAtIndexedSubscript:
label
probability
setObject:forKeyedSubscript:
resultWithStringClassProbability:additionalFeatures:
resultWithIntClassProbability:additionalFeatures:
resultWithValue:
serializeMetadataAndInterfaceFromSpecification:archive:error:
stringWithUTF8String:
versionInfoWithhMajor:minor:patch:variant:
deserializeMetadataAndInterfaceFromArchive:error:
dictionary
UTF8String
numberWithBool:
numberWithFloat:
initWithSpec:classScoreVectorName:classLabels:error:
loadEngineFromCompiledArchive:error:
processInfo
globallyUniqueString
stringByAppendingPathComponent:
fileURLWithPath:isDirectory:
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
defaultOptions
fileSystemRepresentation
compileSpecification:toArchive:options:error:
compiledVersionForSpecification:options:error:
loadModelFromCompiledArchive:versionInfo:error:
useCPUOnly
globalSettings
restrictNeuralNetworksToUseCPUOnly
_deallocContextAndPlan
_setupContextAndPlanWithForceCPU:error:
_matchEngineToOptions:error:
initWithSpec:classScoreVectorName:classLabels:forceCPU:error:
coreChannel
setRestrictNeuralNetworksToUseCPUOnly:
numInputs
evaluateNoAutoRelease:error:
featureNames
inputDescriptionsByName
objectForKey:
stringWithFormat:
multiArrayConstraint
shape
integerValue
numberWithUnsignedLong:
imageConstraint
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
setValue:forKey:
isOptional
initWithShape:dataType:error:
numberWithDouble:
fillWithNumber:
initWithDictionary:error:
resetSizes:error:
imageBufferValue
arrayWithObjects:count:
initWithDataPointer:shape:dataType:strides:deallocator:error:
copyIntoMultiArray:error:
initWithCapacity:
outputDescriptionsByName
_pixelBufferFromEbuf:description:error:
featureValueWithPixelBuffer:
arrayByAddingObjectsFromArray:
arrayWithArray:
numberWithInt:
setObject:atIndexedSubscript:
mutableCopy
descriptionMismatchErrorWithString:
imageWidth
imageHeight
pixelType
pixelBufferGray8FromMultiArrayHW:error:
pixelBufferBGRA8FromMultiArrayCHW:channelOrderIsBGR:error:
dealloc
resetSizesNoAutoRelease:error:
numberWithUnsignedInt:
plan
network
loadModelFromSpecification:error:
neuralNetworkFromSpec:error:
neuralNetworkFromSpec:classScoreVectorName:classLabels:error:
regress:options:error:
.cxx_construct
setClassLabels:
setClassScoreVectorName:
inputLayers
outputLayers
numOutputs
inputBuffers
setInputBuffers:
outputBuffers
setOutputBuffers:
usingCPU
setUsingCPU:
context
setContext:
setPlan:
setNetwork:
params
setParams:
batchSize
setBatchSize:
seqSize
setSeqSize:
names
setNames:
widths
setWidths:
heights
setHeights:
setKs:
batches
setBatches:
sequences
setSequences:
_usingCPU
_batchSize
_seqSize
_classLabels
_classScoreVectorName
_inputLayers
_outputLayers
_numInputs
_numOutputs
_context
_plan
_network
_params
_inputBuffers
_outputBuffers
_names
_widths
_heights
_batches
_sequences
resultWithOutputFiles:
numberWithLongLong:
addObject:
stringForDataType:
initWithShape:dataType:storageOrder:error:
indexVectorFromArray:
dataType
intValue
doubleValue
numberAtOffset:
setNumber:atOffset:
offsetForKeyedSubscript:
arrayWithCapacity:
unsignedIntegerValue
string
appendString:
componentsJoinedByString:
appendFormat:
numberWithUnsignedInteger:
arrayFromIndexVector:
dataPointer
description
strides
_pArray
_managingData
_deallocator
_shape
_strides
cppStorageOrder:
numberOfBytesPerElement
isManagingData
isContiguous
isContiguousInOrder:
isEqualToMultiArray:
doublePointer
vectorizeIntoMultiArray:storageOrder:error:
numberWithInteger:
doubleMultiArrayWithCopyOfMultiArray:
doubleVectorWithValues:
doubleMultiArrayWithShape:valueArray:error:
doubleMatrixWithValues:error:
initWrappingMultiArray:
setRangeWithRawData:destIndex:error:
numberArray
objectAtIndex:
multiArray
setMultiArray:
_multiArray
debugQuickLookObject
dictionaryWithCapacity:
predictedValue
featureValueWithMultiArray:
featureValueWithDouble:
asFeatureDictionaryWithPredictedValueDescription:
predictedValueFeatureDescription
predictionFromFeatures:regressor:options:error:
initWithSVMModel:freeOnDealloc:isInputSizeLowerBoundOnly:inputSize:
allocSVMNodeVector:
fillSVMNodeVector:values:count:
deallocSVMNodeVector:
initWithLibSVMFile:
predict:
isInputSizeLowerBoundOnly
inputSize
model
setModel:
freeModelOnDealloc
setFreeModelOnDealloc:
_isInputSizeLowerBoundOnly
_freeModelOnDealloc
_inputSize
_model
numberWithLong:
initWithFormat:arguments:
errorWithCode:format:args:
errorWithCode:string:
IOErrorWithString:
initWithSpecification:error:
initWithEngine:interface:metadata:error:
initDescriptionOnlyWithSpecification:error:
retrieveFinalModel:
conformsToProtocol:
predictUntilFinalModelWithSample:options:error:
initWithEngine:interface:metadata:classLabels:error:
validateRegressorInterfaceWithError:
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
featureFrameFromDictionary:error:
featureFrameFromFeatureArrayMap:frameDescription:error:
featureFrameFromFeatureDictionary:frameDescription:error:
sampleCount
featureFrameByAddingFrame:error:
featureFrameByAddingFeatureArray:featureDescription:error:
initWithhMajor:minor:patch:variant:
versionNumberString
versionString
majorVersion
minorVersion
patchVersion
variantString
_majorVersion
_minorVersion
_patchVersion
_variantString
initWithSVMModel:freeOnDealloc:isInputSizeLowerBoundOnly:inputSize:classLabels:
initWithLibSVMFile:classLabels:
numberOfClasses
hasProbabilityPredictionEnabled
predictProbabilities:probabilities:
setIsInputSizeLowerBoundOnly:
setInputSize:
int64Value
canVectorizeFeatureWithDescription:
vectorizeFeatureDictionary:featureNames:error:
isVectorizableFeatureFrameDescription:
serializeInterfaceAndMetadata:toArchive:error:
initInterfaceAndMetadataWithCompiledArchive:error:
vectorizeInput:error:
numberWithUnsignedLongLong:
_model_data
scalarRegress:error:
scalarRegress:
_mmapped_model
_cached_model
num_dimensions
output_classes
substringToIndex:
uppercaseString
substringFromIndex:
deserializeInterfaceFormat:archive:error:
initWithInterfaceFormat:error:
initWithMetadataFormat:error:
serializeInterfaceFormat:archive:error:
constraintForBGRImageWithWidth:height:
constraintForRGBImageWithWidth:height:
constraintForGrayImageWithWidth:height:
initWithWidth:height:pixelType:
osType:isAcceptedForPixelType:
_stringForAllowedOSTypes
_stringForOSType:
constraintWithWidth:height:osType:
osType
_pixelType
_imageWidth
_imageHeight
initWithURL:error:
URLByAppendingPathComponent:
modelAssetWithSpecificationURL:error:
compileSpecificationAtURL:toURL:options:error:
URLByDeletingPathExtension
lastPathComponent
URLWithString:relativeToURL:
URLByAppendingPathExtension:
fileExistsAtPath:
loadModelFromAssetAtURL:error:
modelWithError:
load:
classifierWithError:
regressorWithError:
modelAssetWithURL:error:
modelAssetWithSpecification:error:
classifier
regressor
compiledURL
ranLoad
setRanLoad:
asset
setAsset:
_ranLoad
_compiledURL
_asset
longLongValue
initWithUndefinedValueAndType:
initWithValue:type:
undefinedFeatureValueWithType:
featureTypeForObject:
featureValueWithDictionary:error:
value
isEqualToNumber:
isEqualToString:
isEqualToDictionary:
featureValueWithInt64:
featureValueWithString:
featureValueOfType:fromObject:error:
stringValue
objectValue
isEqualToFeatureValue:
setValue:
setObjectValue:
_undefined
_value
_type
_objectValue
defaultCStringEncoding
cStringUsingEncoding:
stringByDeletingPathExtension
sharedInstance
classForLoadingModelType:
classForCompilingModelType:
_setSingleArrayLookupField
resultWithStringClassProbability:
_buildClassificationClasses:topk:error:
_classes_by_string
_classes_by_int64_t
_class_values
_single_array_key
loadModelFromArchive:error:
deserializeVersionInfoFromArchive:error:
loadFromModelSpecificationInArchive:withClass:versionInfo:error:
inputDescriptionFromInterface:
outputDescriptionFromInterface:
orderedFeatureNamesFromInterface:forInput:
length
modelInterfaceWithInputDescription:orderedInputFeatureNames:outputDescription:orderedOutputFeatureNames:predictedFeatureName:predictedProbabilitiesName:
initWithFeatureArrayMap:frameDescription:sampleCount:
featureArrayWithArray:error:
featureDescriptionWithName:consistentWithFeatureArray:error:
sampleAtIndex:
dictionaryWithValuesForKeys:
addEntriesFromDictionary:
featureCount
subsetWithFeaturesNamed:
setDescription:
features
setFeatures:
_sampleCount
_description
_features
initWithName:type:optional:contraints:
allValues
featureDescriptionWithName:type:optional:constraints:
isAllowedValue:
dictionaryConstraint
allowsValuesWithDescription:
valueContraints
setValueContraints:
setMultiArrayConstraint:
setImageConstraint:
setDictionaryConstraint:
_optional
_valueContraints
_multiArrayConstraint
_imageConstraint
_dictionaryConstraint
array
fileURLWithPath:
compileWithModels:toArchive:options:error:
stringWithString:
_batchPredict:start_idx:end_idx:error:
setObject:forKey:
null
_predictionFromFeatures:options:start_idx:end_idx:error:
lastObject
initModelFromMetadataAndArchive:versionInfo:interface:metadata:error:
models
_models
inputFeatureNames
featureTypeForValuesInArray:error:
convertToFeatureValues:ofType:error:
initWithFeatureValues:
valueArray
featureArrayWithArray:description:error:
_values
initWithLRSpec:error:
intercept
weights
postEvalTransForm
m_spec
setFrameworkVersionNumber:
frameworkVersionNumber
getInternalFrameworkVersion
_frameworkVersionNumber
_init
set_attributes:
set_objectStore:
_objectStore
containsObject:
_attributes
indexOfObject:
predicateFormat
characterAtIndex:
archivedDataWithRootObject:
writeToURL:options:error:
initWithContentsOfURL:options:error:
unarchiveObjectWithData:
dictionaryWithDictionary:
predictedClassString
_initWithFlattenedTree:
_saveModelAssetWithModelToPath:withError:
_loadModelAssetWithModelAtPath:withError:
_makeInferenceFromAnswers:withError:
_trc
_treeClassifier
__attributes
__objectStore
initWithInputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:predictedFeatureName:predictedProbabilitiesName:
firstObject
setWithSet:
setWithArray:
minusSet:
validateSingleFeatureInDescription:withSet:
predictedProbabilitiesName
outputFeatureNames
_predictedFeatureName
_predictedProbabilitiesName
_inputFeatureNames
_outputFeatureNames
predictedClassFeatureDescription
classProbabilityFeatureDescription
isValidRegressorInterface
isValidClassifierInterface
dataWithJSONObject:options:error:
localizedDescription
bytes
dryRun
setDryRun:
platform
setPlatform:
platformVersion
setPlatformVersion:
_dryRun
_platform
_platformVersion
setOutputFiles:
outputFiles
_outputFiles
stringByAppendingPathExtension:
versionInfo
serializeVersionInfo:archive:error:
serializeSpecification:toArchive:error:
versionForSerializedSpecification:options:error:
compiledVersionForSpecificationAtURL:options:error:
predictedClassFeatureType
classStringProbability
intClassProbability
additionalFeatures
initWithFeatureProvider:
predictedClassFeatureValue
classProbabilitiesWithTypedClass
asFeatureDictionaryWithPredictedClassDescription:classProbabilityDescription:
initWithLabel:probability:
compare:
sortedArrayUsingSelector:
sortClassProbabilitiesWithArray:classLabels:
setLabel:
setProbability:
_label
_probability
license
author
shortDescription
initWithInputDescriptions:outputDescriptions:predictedFeatureName:predictedProbabilitiesName:metadata:
initWithName:
batchPredict:model:error:
modelWithContentsOfURL:error:
initWithDescription:
initWithName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
setModelDescription:
_interface
_metadata
_modelDescription
initWithValue:
_predictedValue
constraintWithShape:dataType:
exceptionWithName:reason:userInfo:
setDictionary:
_dictionary
initWithFeatureProvider:featureNames:
_inputDescriptionsByName
_outputDescriptionsByName
featureValueWithObject:
resultWithIntClassProbability:
initWithStringClassProbability:classFeatureType:additionalFeatures:
_predictedClassString
_classStringProbability
_predictedClassFeatureType
_additionalFeatures
initWithName:shortDescription:versionString:author:license:
predictionFromFeatures:model:error:
initWithUseCPUOnly:
setUseCPUOnly:
setClassifyTopK:
_useCPUOnly
_classifyTopK
orderedSetWithArray:
initWith:imputeValue:replaceValue:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
imputeValueFrom:replaceValue:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
imputeValueFrom:replaceValue:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
imputeValue
replaceValue
_imputeValue
_replaceValue
populateConstraintsForFeatureDescription:
descriptionFromProto:
orderedNamesFromProto:
stringWithCString:encoding:
calculateClassProbability:input:error:
classify:error:
classify:topK:error:
classType
classEncoding
debugDescription
_shortDescription
_versionString
_author
_license
initWith:dimensionEncoding:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
replaceObjectAtIndex:withObject:
vectorizeOneHotEncoderDict:index:error:
columnNameEncoding
dimensionEncoding
_output_array_shape
index_mapping
_columnNameEncoding
_dimensionEncoding
initWith:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
initWithArray:
constructDictionary:error:
categoryName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
categoryName:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
categoryName
_categoryName
initWith:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
computeSingleNorm:lastValue:
inputDescriptionFrom:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
normFrom:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
normFrom:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
norm
_norm
columnMapping:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
columnMapping:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
columnMapping
_columnMapping
initWith:scaleValue:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
shiftValue
scaleValue
_shiftValue
_scaleValue
initWith:dataTransformerName:ouputSparse:handleUnknown:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
encodeFeatureValue:
encodeFeatureValueIntString:
handleUnknown
unknownDenseVector
featureEncoderFrom:inputDescription:orderedInputFeatureNames:
featureEncoderFrom:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
featureEncoderFrom:dataTransformerName:ouputSparse:handleUnknown:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
featureEncoding
ouputSparse
_ouputSparse
_handleUnknown
_featureEncoding
_restrictNeuralNetworksToUseCPUOnly
initWithShape:dataType:
isAllowedShape:error:
isAllowedDataType:error:
_dataType
initWithUTF8String:
initWith:indices:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
extractArrayElement:indices:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
extractArrayElement:indices:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
arrayColumnName
extractIndices
outputType
_arrayColumnName
_extractIndices
_outputType
clasify:topK:error be implemented by derived class!
modelDescription
T@"MLModelDescription",R,N
interface
T@"MLModelInterface",R
metadata
T@"MLModelMetadata",R
WARNING: using -h 0 may be faster
WARNING: reaching max number of iterations
optimization finished, #iter = %d
WARNING: training data in only one class. See README for details.
WARNING: class label %d specified in weight is not found
Total nSV = %d
WARNING: # folds > # data. Will use # folds = # data instead (i.e., leave-one-out cross validation)
Model doesn't contain information for SVR probability inference
svm_type %s
kernel_type %s
degree %d
gamma %g
coef0 %g
nr_class %d
total_sv %d
label
probA
probB
nr_sv
%.16g 
0:%d 
%d:%.8g 
%80s
svm_type
unknown svm type.
kernel_type
unknown kernel function.
degree
gamma
coef0
nr_class
total_sv
unknown text in model file: [%s]
ERROR: fscanf failed to read model
unknown svm type
unknown kernel type
gamma < 0
degree of polynomial kernel < 0
cache_size <= 0
eps <= 0
C <= 0
nu <= 0 or nu > 1
p < 0
shrinking != 0 and shrinking != 1
probability != 0 and probability != 1
one-class SVM probability output not supported yet
specified nu is infeasible
Prob. model for test data: target value = predicted value + z,
z: Laplace distribution e^(-|z|/sigma)/(2sigma),sigma= %g
obj = %f, rho = %f
nSV = %d, nBSV = %d
nu = %f
C = %f
epsilon = %f
Line search fails in two-class probability estimates
Reaching maximal iterations in two-class probability estimates
Exceeds max_iter in multiclass_prob
c_svc
nu_svc
one_class
epsilon_svr
nu_svr
linear
polynomial
sigmoid
precomputed
MLDictionaryConstraint cannot check undefined values
MLDictionaryConstraint only allows Dictionary values
Dicitonary keys are not all expected type %@
keyType
Tq,R,V_keyType
MLModelDescriptionKey
MLModelVersionStringKey
MLModelAuthorKey
MLModelUserDefinedKey
MLModelLicenseKey
isOrderedBgr
isGrayScale
blueBias
greenBias
redBias
grayBias
scale
precision
Ti,N,V_precision
engine
Ti,N,V_engine
Ti,N,V_qos
orderedBgr
TB,N,GisOrderedBgr,V_orderedBgr
TB,N,V_isGrayScale
Tf,N,V_blueBias
Tf,N,V_greenBias
Tf,N,V_redBias
Tf,N,V_grayBias
Tf,N,V_scale
modelFilePath
T@"NSString",&,N,V_modelFilePath
inputLayerNames
T@"NSArray",R,N,V_inputLayerNames
outputLayerNames
T@"NSArray",R,N,V_outputLayerNames
name
T@"NSString",&,N,V_name
inputDescription
T@"NSDictionary",&,N,V_inputDescription
outputDescription
T@"NSDictionary",&,N,V_outputDescription
Classify called on non-classifier neural network model.
Class labels are empty
Dimensions of layer '%@' is not the same size as the number of class labels.
Regress called on non-regressor neural network model.
Attempted to compile a non-neural-network model as a neural network.
Encountered an unexpected error while compiling a neural network model.
Encountered an error while compiling a neural network model: %@
generic
model
.espresso.net
Model .net file not found.
Error in declaring network.
Error declaring input for NN engine.
Error declaring output for NN engine.
Error allocating buffer space for NN.
The model expects input feature %@ to be an array, but the input is of type %ld.
Input feature %@ was presented as a vector of length %@, but the model expects an input of length %@.
Input feature %@ was presented as a batch  (length %@) of sequences (length %@) of vectors of length %@, but the model expects vectors of length %@.
Input feature %@ was given as a batch (size %@) of sequences (length %@), but evaluations of batches of sequences are not currently supported.
Input %@ is an array of rank %@, but this model only supports single vector inputs (rank 1) or a sequence of batches of vectors (rank 3).
Input feature %@ was presented as an array of size (%@, %@, %@), but the model expects an input of size (%@, %@, %@).
Input feature %@ was presented as a batch  (length %@) of sequences (length %@) of arrays of size (%@, %@, %@), but the model expects arrays of size (%@, %@, %@).
Input %@ is an array of rank %@, but this model only supports image-like inputs (rank 3) or a sequence of batches of image-like inputs (rank 5).
Invalid model input shape in model description. VALIDATOR SHOULD HAVE CAUGHT THIS -- FILE A RADAR.
The model expects input feature %@ to be an image, but the input is of type %ld.
Input image feature %@ does not match model description
Required input feature not passed to neural network.
Image inputs are not supported on watchOS.
Failed to lock pixel buffer
Error binding image input buffer %@.
Error binding input buffer %@.
Error passing input %s to NN engine.
Unsupported input type for neural network.
Error binding output buffer.
Error computing NN outputs.
Image value is nil.
Image output %@ is missing width, height, and pixel info in its description
Batch or sequence image output is unsupported for image output %@
output expected to be %@ x %@, %@ channel image, but is %@ x %@, %@
Failed to convert output %@ to image
Passing empty input dictionary for resetSizes.
Incorrect input number of dimensions (must be between 1, 3, or 5 dimensions.
Different batch numbers for input features.
Cannot evaluate a batch of size %@, which is larger than maximum of %@.
Cannot evaluate a sequence of length %@, which is longer than maximum of %@.
Failure setting up to dynamically allocate for sequence size.
Failure dynamically resizing for sequence length.
Error in re-declaring input %@.
Error in declaring output %@.
Error in re-allocating network for longer sequences.
numInputs
TQ,R,N,V_numInputs
numOutputs
TQ,R,N,V_numOutputs
inputBuffers
T{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_inputBuffers
outputBuffers
T{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_outputBuffers
usingCPU
TB,N,V_usingCPU
context
T^v,N,V_context
plan
T^v,N,V_plan
network
T{?=^vi},N,V_network
params
T{?=ffffB},N,V_params
batchSize
TI,N,V_batchSize
seqSize
TI,N,V_seqSize
names
T{vector<const char *, std::__1::allocator<const char *> >=^*^*{__compressed_pair<const char **, std::__1::allocator<const char *> >=^*}},N,V_names
widths
T{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}},N,V_widths
heights
T{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}},N,V_heights
T{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}},N,V_ks
batches
T{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}},N,V_batches
sequences
T{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}},N,V_sequences
classLabels
T@"NSArray",&,N,V_classLabels
classScoreVectorName
T@"NSString",&,N,V_classScoreVectorName
inputLayers
T@"NSArray",R,N,V_inputLayers
outputLayers
T@"NSArray",R,N,V_outputLayers
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
map::at:  key not found
MLMultiArrayDataTypeDouble
MLMultiArrayDataTypeFloat32
MLMultiArrayDataTypeInt32
MLMultiArrayDataTypeInvalid (%d)
Float32
Int32
Double
 vector
 matrix
 array
dataPointer
T^v,R,N
dataType
Tq,R,N
shape
T@"NSArray",R,N,V_shape
strides
T@"NSArray",R,N,V_strides
count
numberOfBytesPerElement
TQ,R,N
managingData
TB,R,N,GisManagingData
contiguous
TB,R,N,GisContiguous
Unable to copy %@ into %@
Unable to vectorize %@ into %@
value count (%@) does not match array count (%@)
Inconsistent row size
setRangeWithRawData: range out of bounds.
setRangeWithRawData: non-contiguous destination unsupported
setRangeWithRawData: failed to vectorize source
multiArray
T@"MLMultiArray",&,V_multiArray
T^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii},V_model
freeModelOnDealloc
TB,V_freeModelOnDealloc
isInputSizeLowerBoundOnly
TB,R,V_isInputSizeLowerBoundOnly
inputSize
TQ,R,V_inputSize
Internal error: support vectors not set.
Invalid array shape %@ for converting to gray image
Failed to create temporary buffer for conversion to image
Failed to create gray image %@ x %@
Failed to convert planar to BGRAX888: Code=%@
Failed to create BGRA image %@ x %@
Final model is not a classifier.
T@"MLPipeline",&,V_engine
Error: Attempted multiple write-open of data blob 
.DAT
non-directory file already exists at archive path
error creating directory: %@
Error creating directory.
coremldata.bin
Number of samples do not match
%lld.%lld.%lld
%@%@
majorVersion
Tq,R,V_majorVersion
minorVersion
Tq,R,V_minorVersion
patchVersion
Tq,R,V_patchVersion
variantString
T@"NSString",R,V_variantString
versionNumberString
T@"NSString",R,N
versionString
TB,V_isInputSizeLowerBoundOnly
TQ,V_inputSize
numberOfClasses
SVM has invalid number of support vectors or clases
Feature %@ not present in input dictionary.
Feature %@ not vectorizable.
Internal programming error.
Interface type is not an TreeEnsembleRegressor
Could not construct tree ensemble compiler.
Internal error: model too large to be compiled.
Dimension must equal one when using scalarRegress.
.swift
import CoreML
/// Construct a model with explicit path to mlmodel file
init(contentsOf url: URL) throws
/// Construct a model that automatically loads the model from the app's bundle
convenience override init()
convenience init()
/// Make a prediction using the convenience interface
/// - parameters:
///     - 
/// - returns: the result of the prediction as 
/// Make a prediction using the structured interface
/// - parameters:  
///    - input: the input to the prediction as 
func 
) throws -> 
(input: 
@objc 
:NSObject
/// Class for model loading and prediction
class 
var model: MLModel
self.model = try MLModel(contentsOf: url)
let bundle = Bundle(for: 
.self)
let assetPath = bundle.url(forResource: "
", withExtension:"mlmodelc")
try! self.init(contentsOf: assetPath!)
let outFeatures = try model.prediction(from: input)
let result = 
outFeatures.featureValue(for: "
")!.
 as! [
Int64
String
 : Double]
return result
let input_ = 
return try self.
(input: input_)
var featureNames: Set<String>
return [
func featureValue(for featureName: String) -> MLFeatureValue?
if (featureName == "
return 
try! 
 == nil ? nil : 
MLFeatureValue(
 as [NSObject : NSNumber]
return nil
init(
 = nil
self.
/// Model Prediction Input Type
 : MLFeatureProvider
/// 
var 
let 
prediction
pixelBuffer
int64
double
string
dictionary
INVALID
MLMultiArray
[String : Double]
[Int64 : Double]
CVPixelBuffer
32-RGBA
32-BGRA
32-ARGB
8-Gray
24-RGB
24-BGRA
Unsupported (%@)
32-BGRA or 32-ARGB
Image constraint can not accept missing values
Image is not valid width %@, instead is %@
Image is not valid height %@, instead is %@
Image is not expected type %@, instead is %@
imageHeight
TQ,R,V_imageHeight
imageWidth
TQ,R,V_imageWidth
pixelType
TQ,R,V_pixelType
osType
TI,R
model.mlmodel
mlmodelc
%@ does not exist
%@ %@
(Loaded)
(Failed Load)
(Not loaded)
Model is not a classifier.
MLModelAsset: classifierWithError: load failed.
Model is not a regressor.
ranLoad
TB,V_ranLoad
asset
T@"NSObject<MLModeling>",&,V_asset
compiledURL
T@"NSURL",R,V_compiledURL
T@"<MLModeling>",R,N
regressor
T@"<MLRegressor>",R,N
classifier
T@"<MLClassifier>",R,N
%@ : %@
Dictionary keys must be NSStrings or NSNumbers.
Object not consistent with type supplied
value
T@,&,V_value
objectValue
T@"NSObject",&,N,V_objectValue
type
Tq,R,N,V_type
undefined
TB,R,N,GisUndefined,V_undefined
int64Value
doubleValue
Td,R,N
stringValue
T@"NSString",R,C,N
multiArrayValue
T@"MLMultiArray",R,N
dictionaryValue
T@"NSDictionary",R,N
imageBufferValue
T^{__CVBuffer=},R,N
nullable 
- (nullable instancetype)initWithContentsOfURL:(NSURL *)url error:(NSError * _Nullable * _Nullable)error
- (nullable instancetype)init
/// @param 
/// @param error If an error occurs, upon return contains an NSError object that describes the problem. If you are not interested in possible errors, pass in NULL.
/// @return the prediction as 
/// Make a prediction using the standard interface
/// @param input an instance of 
 to predict from
predictionFrom
 error:(NSError * _Nullable * _Nullable)error
)input error:(NSError * _Nullable * _Nullable)error
@interface 
 : NSObject<MLFeatureProvider>
@end
- (instancetype)init NS_UNAVAILABLE;
- (instancetype)
/// Model Prediction Output Type
@property (readwrite, nonatomic
, nullable
#import <Foundation/Foundation.h>
#import <CoreML/CoreML.h>
#include <stdint.h>
NS_ASSUME_NONNULL_BEGIN
 : NSObject
@property (readonly, nonatomic, nullable) MLModel * model;
NS_ASSUME_NONNULL_END
@implementation 
self = [super init];
if (!self) { return nil; }
_model = [MLModel modelWithContentsOfURL:url error:error];
if (_model == nil) { return nil; }
return self;
NSString *assetPath = [[NSBundle bundleForClass:[self class]] pathForResource:@"
" ofType:@"mlmodelc"];
return [self initWithContentsOfURL:[NSURL fileURLWithPath:assetPath] error:nil];
id<MLFeatureProvider> outFeatures = [_model predictionFromFeatures:input error:error];
 * result = [[
 alloc] initWith
return result;
 *input_ = [[
return [self 
:input_ error:error];
if (self)
- (NSSet<NSString *> *)featureNames
return [NSSet setWithArray:@[
- (nullable MLFeatureValue *)featureValueForName:(NSString *)featureName
if ([featureName isEqualToString:@"
[MLFeatureValue 
 error:nil
.longLongValue
.doubleValue
return nil;
#import "
MLMultiArray *
NSDictionary<NSNumber *, NSNumber *> *
NSDictionary<NSString *, NSNumber *> *
NSNumber *
CVPixelBufferRef
int64_t
NSString *
predictionFromFeatures
(NSDictionary<NSNumber *, NSNumber *> *)
(NSDictionary<NSString *, NSNumber *> *)
[outFeatures featureValueForName:@"
featureValueWithPixelBuffer
featureValueWithInt64
featureValueWithDouble
featureValueWithString
featureValueWithDictionary
featureValueWithMultiArray
/dev/null
error
input_
Class
_Bool
_Imaginary
__COLUMN__
__FUNCTION__
associativity
atomic
break
bycopy
byref
class
const
convenience
default
deinit
didSet
dynamic
dynamicType
extension
extern
fallthrough
false
final
float
import
infix
inline
inout
nonatomic
nonmutating
oneway
postfix
precedence
prefix
private
public
retain
return
right
short
signed
sizeof
static
struct
subscript
super
switch
typealias
typedef
union
unowned
where
while
// This file was automatically generated and should not be edited.
Input
Output
Invalid
 as 
Unknown type
dictionary of strings to doubles
dictionary of 64-bit integers to doubles
double value
grayscale 
RGB 
BGR 
image buffer, 
 pixels wide by 
 pixels high
integer value
string value
vector of 
 by 
 matrix of 
 3-dimensional array of 
 4-dimensional array of 
 5-dimensional array of 
32-bit integers
doubles
floats
v8@?0
Interface type is not an TreeEnsembleClassifier
Could not construct tree ensemble regressor.
INTERNAL ERROR -- feature not present that should have been.
Incorrect number of classes given (TreeEnsembleClassifier).
URL has nil fileSystemRepresentation
Nothing found at %@
Unable to extract model type from stream in compiled model: %@
No known class for loading model type %@
Loading class must conform to serializable protocols
MLModelType_pipelineClassifier
MLModelType_pipelineRegressor
MLModelType_pipeline
MLModelType_glmRegressor
MLModelType_supportVectorRegressor
MLModelType_treeEnsembleRegressor
MLModelType_neuralNetworkRegressor
MLModelType_glmClassifier
MLModelType_supportVectorClassifier
MLModelType_treeEnsembleClassifier
MLModelType_neuralNetworkClassifier
MLModelType_neuralNetwork
MLModelType_oneHotEncoder
MLModelType_imputer
MLModelType_featureVectorizer
MLModelType_dictVectorizer
MLModelType_scaler
MLModelType_categoricalMapping
MLModelType_normalizer
MLModelType_arrayFeatureExtractor
MLModelType_identity
Could not find required feature
Inconsistent # of samples across features
Not all described features found in sample
Feature value %@ inconsistent with description
description
T@"NSDictionary",&,N,V_description
features
T@"NSDictionary",&,N,V_features
Expected feature of type %@ but got %@
Feature description does not allow missing %@ values
%@ : %@%@
valueContraints
T@"NSDictionary",&,V_valueContraints
multiArrayConstraint
T@"MLMultiArrayConstraint",&,N,V_multiArrayConstraint
imageConstraint
T@"MLImageConstraint",&,N,V_imageConstraint
dictionaryConstraint
T@"MLDictionaryConstraint",&,N,V_dictionaryConstraint
T@"NSString",R,C,N,V_name
optional
TB,R,N,GisOptional,V_optional
.model%lluv%@
Final model requested from empty pipeline.
models
T@"NSArray",R,V_models
Input feature length mismatch. Got features of length %d expected length of at least %d
Input feature length mismatch. Got features of length %d expected length of %d
T@"MLSVREngine",&,V_engine
value types inconsistent with description
valueArray
T@"NSArray",R,V_values
Input feature length mismatch. Got features of length %d expected length %d
frameworkVersionNumber
T@"NSNumber",C,N,V_frameworkVersionNumber
strides must be 
 elements for shape
Shape must have at least one element
action
probabilities
ClassificationTree
GKDecisionTree->CoreML
attribute
children
branch
branchValue
model.pb
attributes.gk
model.mlmodelc
_attributes
T@"NSMutableArray",&,N,V__attributes
_objectStore
T@"NSMutableOrderedSet",&,N,V__objectStore
featureCount
TQ,R
sampleCount
validateDataTransformDescription: Invalid FeatureType %@
T@"NSDictionary",R,V_inputDescription
T@"NSDictionary",R,V_outputDescription
inputFeatureNames
T@"NSOrderedSet",R,V_inputFeatureNames
outputFeatureNames
T@"NSOrderedSet",R,V_outputFeatureNames
predictedFeatureName
T@"NSString",R,V_predictedFeatureName
predictedProbabilitiesName
T@"NSString",R,V_predictedProbabilitiesName
predictedValueFeatureDescription
T@"MLFeatureDescription",R
predictedClassFeatureDescription
classProbabilityFeatureDescription
Regressor must specify predictedValueOutput.
Classifier must specify predictedClassOutput and/or probabilityOutput
validRegressorInterface
TB,R,GisValidRegressorInterface
validClassifierInterface
TB,R,GisValidClassifierInterface
modelType
generatedClassName
method
predict
shortDescription
version
license
author
specificationVersion
outputSchema
inputSchema
{"error":"unknown error"}
structure
dryRun
TB,V_dryRun
platform
T@"NSString",&,V_platform
platformVersion
T@"NSString",&,V_platformVersion
outputFiles
T@"NSArray",&,V_outputFiles
compiler error: 
Error reading protobuf spec. %s
%@ No known class for compiling model type %@
%@ Invalid compiling class %@ for model type %@
%@ Error reading protobuf spec. %s
No known class for compiling model type %@
Invalid compiling class %@ for model type %@
T@"<NSCopying>",&,N,V_label
probability
T@"NSNumber",&,N,V_probability
core
com.apple.coreml
Missing predictionFromFeatures:error implementation
MLModel : %@ modelDescription: %@
T@"MLModelDescription",&,N,V_modelDescription
T@"MLModelInterface",R,V_interface
T@"MLModelMetadata",R,V_metadata
com.apple.CoreML
predictedValue
T@"MLMultiArray",R,V_predictedValue
regress:error must be implemented by derived class!
Inconsistent value types in array
Cannot form description from nothing
Inconsistent value constraints in array
Array
Dictionary
Image
UnknownValue
Illegal value in MLFeatureType enum
featureNames
T@"NSSet",R,N
T@"NSDictionary",&,N,V_dictionary
MLModelDescription : %@ inputDescriptionsByName: %@ outputDescriptionsByName: %@ predictedFeatureName: %@ predictedProbabilitiesName: %@ metadata: %@
inputDescriptionsByName
T@"NSDictionary",R,N,V_inputDescriptionsByName
outputDescriptionsByName
T@"NSDictionary",R,N,V_outputDescriptionsByName
T@"NSString",R,C,N,V_predictedFeatureName
T@"NSString",R,C,N,V_predictedProbabilitiesName
T@"NSDictionary",R,N,V_metadata
T@"MLSVMEngine",&,V_engine
predictedClassString
T@"NSString",R,V_predictedClassString
classStringProbability
T@"NSDictionary",R,V_classStringProbability
predictedClassFeatureType
Tq,R,V_predictedClassFeatureType
additionalFeatures
T@"<MLFeatureProvider>",R,V_additionalFeatures
Invalid model type found in compiled pipeline model.
Input frame description does not match model's input description.
unexpectedly got nil results for feature %@
unexpectedly got nil feature description for feature %@
Error opening file stream: 
File 
 already opened as stream attempted to open as mmapped file.
Error reading from archive.
Error writing to archive.
classifyTopK
TQ,V_classifyTopK
useCPUOnly
TB,V_useCPUOnly
Interface type is not an Support Vector Classifier
Execution Profile not recognized.
Only integer values with magnitude less than 2^48 are supported in the imputer.
imputer
MLimputer
imputed feature value not set.
Invalid combination of input/output/feature value types.
Invalid combination of replace value type and input/output/feature value types.
imputeValue
T@"MLFeatureValue",R,N,V_imputeValue
replaceValue
T@"MLFeatureValue",R,N,V_replaceValue
spec
unable to deserialize object
unable to serialize object
Error opening file 
Error reading file statistics of 
: not a regular file.
: error opening mmap: 
: error unmapping memory; msg=
: Error closing file; msg=
name: %@, version: %@ author: %@ description : %@
T@"NSString",R,V_name
T@"NSString",R,V_shortDescription
T@"NSString",R,V_versionString
T@"NSString",R,V_author
T@"NSString",R,V_license
feature vectorizer
Expected value for feature '%@'.
MLFeatureVectorizer: Array length incorrect.
MLFeatureVectorizer: Dictionary key type must be NSNumber.
MLFeatureVectorizer: Dictionary index out of range.
MLFeatureVectorizer: Incorrect Type.
MLFeatureVectorizer: Dict key type must be NSNumber.
MLFeatureVectorizer: Dict idx out of range.
columnNameEncoding
T@"NSArray",R,N,V_columnNameEncoding
dimensionEncoding
T@"NSArray",R,N,V_dimensionEncoding
dict vectorizer
MLDictVectorizer
Invalid input description.
Invalid output description.
Expected input column '%@ not present.
Type of input not dictionary as expected.
categoryName
T@"NSOrderedSet",R,N,V_categoryName
normalizer
MLNormalizer
norm
Ti,R,N,V_norm
categorical mapping
MLCategoricalMapping
MLMLCategoricalMapping: Incorrect type.
columnMapping
T@"NSDictionary",R,N,V_columnMapping
scaler
shiftValue
T@"MLFeatureValue",R,N,V_shiftValue
scaleValue
T@"MLFeatureValue",R,N,V_scaleValue
one hot encoder
MLOneHotEncoder
%@: Output description type must be MLTypeDictionary (ouputSparse On) or                       MLFeatureTypeMultiArray (ouputSparse Off) 
MLOneHotEncoder: unknown category %@, expected one of %@
featureEncoding
T@"NSOrderedSet",R,N,V_featureEncoding
ouputSparse
TB,R,N,V_ouputSparse
handleUnknown
TB,R,N,V_handleUnknown
restrictNeuralNetworksToUseCPUOnly
TB,V_restrictNeuralNetworksToUseCPUOnly
Input shape is %@-d, but %@-d is expected
Size of dimension %@ should be %@ not %@
MultiArray dataType should be %@ but is %@
MultiArrayConstraint cannot check undefined values
MultiArrayConstraint only allows MultiArrays
T@"NSArray",R,V_shape
Tq,R,V_dataType
array feature extractor
arrayFeatureExtractor
got nil array input to MLArrayFeatureExtractor predict:error:
Lossy cast to integer by ArrayFeatureExtractor; use double as output type.
Invalid output type of ArrayFeatureExtractor.
arrayColumnName
T@"NSString",R,N,V_arrayColumnName
extractIndices
T@"NSArray",R,N,V_extractIndices
outputType
Tq,R,N,V_outputType
Type of input feature does not match the output type feature.
Only 1 dimensional arrays input features are supported by the imputer.
Shape of output array does not match shape of input array.
Shape of imputed array value does not match shape of input array.
Imputer parameter must be set.
Type of input feature "
" is not compatible with given imputed value type.
Type of given replace value not compatible with input feature type.
Int64 class labels must be supplied for SVM classifier.
coefficient array must be size numberOfClasses - 1 (
). Instead it is size 
Must specify sparse or dense support vectors
numberOfSupportVectoresPerClass array must be size numberOfClasses 
 instead it is size 
sum of numberOfSupportVectorsPerClass 
 must sum to total number of support vectors 
Incorrect number of coefficients: There should be 
 not 
probA and probB must be same size
Expected length of probA is number of class pairs: 
The number of coefficients must match the number of support vectors.
Gamma must be greater than or equal to zero
Degree must be greater than or equal to zero
You must specify a supported kernel type
Input type Int64 must output to Int64 or Double.
Only 1 dimensional arrays input features are supported by the scaler.
For input type array, specified shift values must be empty, a scalar, or a vector of the matching length.
For input type array, specified scale values must be empty, a scalar, or a vector of the matching length.
For a scalar imput type, specified shift value must be empty or a scalar.
For input type array, specified scale values must be empty or a scalar.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/MLModel/build/format/Model.pb.cc
CoreML.Specification.Pipeline
CoreML.Specification.PipelineClassifier
CoreML.Specification.PipelineRegressor
CoreML.Specification.FeatureDescription.name
CoreML.Specification.FeatureDescription.shortDescription
CoreML.Specification.FeatureDescription
CoreML.Specification.Metadata.shortDescription
CoreML.Specification.Metadata.versionString
CoreML.Specification.Metadata.author
CoreML.Specification.Metadata.license
CoreML.Specification.Metadata.UserDefinedEntry.key
CoreML.Specification.Metadata.UserDefinedEntry.value
CoreML.Specification.Metadata
CoreML.Specification.ModelDescription.predictedFeatureName
CoreML.Specification.ModelDescription.predictedProbabilitiesName
CoreML.Specification.ModelDescription
CoreML.Specification.Model
Model is not a tree ensemble.
Given output dimension equals 0.
Tree Node with TreeID=
and NodeID=
 duplicated in specification.
False child and parent have same ID (TreeID=
, NodeID=
In TreeID=
, false child of NodeID=
 is already the child of node NodeID=
True child and parent have same ID (TreeID=
, true child of NodeID=
Tree TreeID=
 has multiple root nodes: 
NodeID=
Internal error: null child node; likely specification error.
Node detected that are not connected to any single root node. Note: 
(TreeID=
Dimension of default value array (
) does not match specified output dimension (
Specified output dimension (
) does not match the given number of classes (
Error(s) in tree structure: 
FATAL: 
  FATAL: maximum number of errors reached; aborting processing.
Errors encountered during processing tree model:
Branch mode hit bad value -- this is confusing; error in validator?
Leaf Node (TreeID=
) has no evaluation value(s) specified.
) specifies evaluation value applied to dimension 
; which is out of range. Dimension must be less than 
) specifies multipule evaluation values applied to dimension 
 and NodeID=
 referenced but not declared in specification.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/MLModel/build/format/GLMClassifier.pb.cc
CoreML.Specification.GLMClassifier.DoubleArray
CoreML.Specification.GLMClassifier
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/MLModel/build/format/OneHotEncoder.pb.cc
CoreML.Specification.OneHotEncoder
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/MLModel/build/format/FeatureVectorizer.pb.cc
CoreML.Specification.FeatureVectorizer.InputColumn.inputColumn
CoreML.Specification.FeatureVectorizer.InputColumn
CoreML.Specification.FeatureVectorizer
CategoricalMapping direction mapping not set
Weights and offsets must be the same size.
All weight coefficients must be the same size.
Invalid post evaluation transform
Invalid class encoding
The number of DoubleArrays in weights must be greater than zero
The number of DoubleArrays in weights must match number of offsets
With ReferenceClass encoding the number of DoubleArrays in weights must be one less than number of classes
When using OneVsRest encoding for only two classes, the number of DoubleArrays in weights must be one
With OneVsRest encoding the number of DoubleArrays in weights must equal the number of classes
Probit post evaluation transform is only supported for binary classification
Weight DoubleArrays must have nonzero length
Weight DoubleArrays must have the same length
Classifier models must provide class labels.
Specification is missing classifier predictedClassOutput and/or probabilityOutput
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/MLModel/build/format/Normalizer.pb.cc
CoreML.Specification.Normalizer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/MLModel/build/format/TreeEnsemble.pb.cc
CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo
CoreML.Specification.TreeEnsembleParameters.TreeNode
CoreML.Specification.TreeEnsembleParameters
CoreML.Specification.TreeEnsembleClassifier
CoreML.Specification.TreeEnsembleRegressor
NormalizerValidator normLx invalid
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/MLModel/build/format/NeuralNetwork.pb.cc
CoreML.Specification.NeuralNetwork
CoreML.Specification.NeuralNetworkImageScaler
CoreML.Specification.NeuralNetworkMeanImage
CoreML.Specification.NeuralNetworkPreprocessing.featureName
CoreML.Specification.NeuralNetworkPreprocessing
CoreML.Specification.ActivationReLU
CoreML.Specification.ActivationLeakyReLU
CoreML.Specification.ActivationTanh
CoreML.Specification.ActivationScaledTanh
CoreML.Specification.ActivationSigmoid
CoreML.Specification.ActivationLinear
CoreML.Specification.ActivationSigmoidHard
CoreML.Specification.ActivationPReLU
CoreML.Specification.ActivationELU
CoreML.Specification.ActivationThresholdedReLU
CoreML.Specification.ActivationSoftsign
CoreML.Specification.ActivationSoftplus
CoreML.Specification.ActivationParametricSoftplus
CoreML.Specification.ActivationParams
CoreML.Specification.NeuralNetworkLayer.name
CoreML.Specification.NeuralNetworkLayer.input
CoreML.Specification.NeuralNetworkLayer.output
CoreML.Specification.NeuralNetworkLayer
CoreML.Specification.BorderAmounts.EdgeSizes
CoreML.Specification.BorderAmounts
CoreML.Specification.ValidPadding
CoreML.Specification.SamePadding
CoreML.Specification.WeightParams
CoreML.Specification.ConvolutionLayerParams
CoreML.Specification.InnerProductLayerParams
CoreML.Specification.EmbeddingLayerParams
CoreML.Specification.BatchnormLayerParams
CoreML.Specification.PoolingLayerParams.ValidCompletePadding
CoreML.Specification.PoolingLayerParams
CoreML.Specification.PaddingLayerParams.PaddingConstant
CoreML.Specification.PaddingLayerParams.PaddingReflection
CoreML.Specification.PaddingLayerParams.PaddingReplication
CoreML.Specification.PaddingLayerParams
CoreML.Specification.ConcatLayerParams
CoreML.Specification.LRNLayerParams
CoreML.Specification.SoftmaxLayerParams
CoreML.Specification.SplitLayerParams
CoreML.Specification.AddLayerParams
CoreML.Specification.MultiplyLayerParams
CoreML.Specification.UnaryFunctionLayerParams
CoreML.Specification.UpsampleLayerParams
CoreML.Specification.BiasLayerParams
CoreML.Specification.ScaleLayerParams
CoreML.Specification.LoadConstantLayerParams
CoreML.Specification.L2NormalizeLayerParams
CoreML.Specification.FlattenLayerParams
CoreML.Specification.ReshapeLayerParams
CoreML.Specification.PermuteLayerParams
CoreML.Specification.ReduceLayerParams
CoreML.Specification.CropLayerParams
CoreML.Specification.AverageLayerParams
CoreML.Specification.MaxLayerParams
CoreML.Specification.MinLayerParams
CoreML.Specification.DotProductLayerParams
CoreML.Specification.MeanVarianceNormalizeLayerParams
CoreML.Specification.SequenceRepeatLayerParams
CoreML.Specification.SimpleRecurrentLayerParams
CoreML.Specification.GRULayerParams
CoreML.Specification.LSTMParams
CoreML.Specification.LSTMWeightParams
CoreML.Specification.UniDirectionalLSTMLayerParams
CoreML.Specification.BiDirectionalLSTMLayerParams
CoreML.Specification.NeuralNetworkClassifier
CoreML.Specification.NeuralNetworkRegressor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/MLModel/build/format/CategoricalMapping.pb.cc
CoreML.Specification.CategoricalMapping
OneHotEncoder parameter incorrect type
Feature descriptions exceeded 
Pipeline must contain one or more models.
unordered_map::at: key not found
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/MLModel/build/format/Scaler.pb.cc
CoreML.Specification.Scaler
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/MLModel/build/format/Identity.pb.cc
CoreML.Specification.Identity
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/MLModel/build/format/DictVectorizer.pb.cc
CoreML.Specification.DictVectorizer
Model specification version field missing or corrupt.
Model specification version 
 not supported by this version of CoreML framework. Expected version 
 or earlier.
Model did not specify a valid model-parameter type.
unable to open file for read
unable to open file for write
Spec version: 
Model type: 
Interface:
Inputs:
Outputs:
Predicted feature name: 
Predicted probability name: 
Neural Networks only return arrays as outputs.
Interface specifies output: 
, but no node in the network produces it.
Neural networks require at least one input.
Neural networks produce at least one output.
Neural networks require at least one non-optional input.
Neural Networks only accept arrays or images as inputs.
__input
Invalid image color space.
Input arrays to neural networks must be rank 1 (single vectors) or rank 3 (image-like arrays).
Layer 
 consumes a data blob named 
 which is not an input and not produced by a blob reached yet.
 produces a data blob named 
 which was already given as being produced by layer 
 of type 
 has 
 inputs, but needs exactly 
 inputs, but needs at least 
 inputs, but requires at least 
 outputs, but needs exactly 
 outputs, but needs at least 
 outputs, but requires at least 
 has incorrect bias vector size 
 (expected 
Bias vector being ignored since "hasBias" flag not set.
Incorrect weight matrix size 
 for inner product of size 
In layer 
: incorrect gamma size 
: incorrect beta size 
: incorrect mean size 
: incorrect variance size 
Unsupported nonlinearity type 
 provided to layer activation.
MLActivationParamsNonlinearityType_linear
MLActivationParamsNonlinearityType_ReLU
MLActivationParamsNonlinearityType_leakyReLU
MLActivationParamsNonlinearityType_thresholdedReLU
MLActivationParamsNonlinearityType_PReLU
MLActivationParamsNonlinearityType_tanh
MLActivationParamsNonlinearityType_scaledTanh
MLActivationParamsNonlinearityType_sigmoid
MLActivationParamsNonlinearityType_sigmoidHard
MLActivationParamsNonlinearityType_ELU
MLActivationParamsNonlinearityType_softsign
MLActivationParamsNonlinearityType_softplus
MLActivationParamsNonlinearityType_parametricSoftplus
Incorrect bias layer (name: 
). Have bias vector of length 
 but expected length  
). Has shape vector of length 
 but requires 1,2, or 3 elements.
Reshape layer 
 requires a target shape exactly 3 or 4 elements.
Permute layer 
 requires axis parameter of length 4.
Load constant layer 
 requires a shape array of length 3.
Incorrect load constant layer (name: 
). Have data buffer of length 
Incorrect scale layer (name: 
Simple Recurrent layer 
 expects input matrix of size 
 but provides 
 expects recursion matrix of size 
 has bias vector of size 
 but expects size 
 provided to recurrent activation.
GRU layer 
 expects update gate weight matrix of size 
 expects reset gate matrix of size 
 expects output gate matrix of size 
 expects update gate recursion matrix of size 
 expects reset gate recursion matrix of size 
 expects output gate recursion matrix of size 
 has update bias vector of size 
 has reset bias vector of size 
 has output bias vector of size 
Unknown Layer type.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/MLModel/build/format/ArrayFeatureExtractor.pb.cc
CoreML.Specification.ArrayFeatureExtractor
Invalid dictionary key type. Expected one of: {int64, string}.
MultiArray<
Dictionary<
Image<
Grayscale
Setup routine not called yet for node with treeId=
, nodeID=
Setup routine called multiple times for treeId=
Dimension size must be greater tha zero.
validator error: 
not an error
Type mismatch for "
". Expected 
found 
Feature type invariant violation. Expected feature type 
 to be one of: 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/MLModel/build/format/Imputer.pb.cc
CoreML.Specification.Imputer.imputedStringValue
CoreML.Specification.Imputer.replaceStringValue
CoreML.Specification.Imputer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/MLModel/build/format/FeatureTypes.pb.cc
CoreML.Specification.Int64FeatureType
CoreML.Specification.DoubleFeatureType
CoreML.Specification.StringFeatureType
CoreML.Specification.ImageFeatureType
CoreML.Specification.ArrayFeatureType
CoreML.Specification.DictionaryFeatureType
CoreML.Specification.FeatureType
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/protobuf/src/google/protobuf/map.h
CHECK failed: it != end(): 
Model not an array feature extractor.
Exactly one input array column must be specified.
If output type is Double in interface, exactly one extraction index must be specified.
DictVectorizerValidator parameter not set
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/MLModel/build/format/DataStructures.pb.cc
CoreML.Specification.StringToInt64Map.MapEntry.key
CoreML.Specification.StringToInt64Map
CoreML.Specification.Int64ToStringMap.MapEntry.value
CoreML.Specification.Int64ToStringMap
CoreML.Specification.StringToDoubleMap.MapEntry.key
CoreML.Specification.StringToDoubleMap
CoreML.Specification.Int64ToDoubleMap
CoreML.Specification.StringVector.vector
CoreML.Specification.StringVector
CoreML.Specification.Int64Vector
CoreML.Specification.DoubleVector
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/protobuf/src/google/protobuf/map_entry_lite.h
CHECK failed: default_instance_ != NULL: 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/MLModel/build/format/GLMRegressor.pb.cc
CoreML.Specification.GLMRegressor.DoubleArray
CoreML.Specification.GLMRegressor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/MLModel/build/format/SVM.pb.cc
CoreML.Specification.LinearKernel
CoreML.Specification.RBFKernel
CoreML.Specification.PolyKernel
CoreML.Specification.SigmoidKernel
CoreML.Specification.Kernel
CoreML.Specification.SparseNode
CoreML.Specification.SparseVector
CoreML.Specification.SparseSupportVectors
CoreML.Specification.DenseVector
CoreML.Specification.DenseSupportVectors
CoreML.Specification.Coefficients
CoreML.Specification.SupportVectorRegressor
CoreML.Specification.SupportVectorClassifier
Models must have one or more inputs.
Models must have one or more outputs.
Specification is missing regressor predictedFeatureName.
Features cannot be optional to this type of model.
Outputs cannot be optional.
At least one feature for a neural network must NOT be optional.
Expected feature '
' to the model is not present in the model description.
Feature "
" has an unsupported type.
size_t to int conversion
CANCELLED
UNKNOWN
INVALID_ARGUMENT
DEADLINE_EXCEEDED
NOT_FOUND
ALREADY_EXISTS
PERMISSION_DENIED
UNAUTHENTICATED
RESOURCE_EXHAUSTED
FAILED_PRECONDITION
ABORTED
OUT_OF_RANGE
UNIMPLEMENTED
UNAVAILABLE
DATA_LOSS
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/protobuf/src/google/protobuf/stubs/stringpiece.cc
size too big: 
 details: 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/protobuf/src/google/protobuf/stubs/int128.cc
Division or mod by zero: dividend.hi=
, lo=
(cannot determine missing fields for lite message)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/protobuf/src/google/protobuf/message_lite.cc
CHECK failed: !coded_out.HadError(): 
Exceeded maximum protobuf size of 2GB.
parse
Can't 
 message of type "
" because it is missing required fields: 
CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): 
 was modified concurrently during serialization.
CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): 
Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of 
This shouldn't be called if all the sizes are equal.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/protobuf/src/google/protobuf/generated_message_util.cc
CHECK failed: false: 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/protobuf/src/google/protobuf/io/zero_copy_stream.cc
This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/protobuf/src/google/protobuf/stubs/stringprintf.cc
CHECK failed: (v.size()) <= (kStringPrintfVectorMaxArgs): 
StringPrintfVector currently only supports up to 
 arguments. 
Feel free to add support for more if you need it.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/protobuf/src/google/protobuf/stubs/common.cc
This program requires version 
 of the Protocol Buffer runtime library, but the installed version is 
.  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
This program was compiled against version 
 of the Protocol Buffer runtime library, which is not compatible with the installed version (
).  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
%d.%d.%d
INFO
WARNING
ERROR
FATAL
[libprotobuf %s %s:%d] %s
%lld
%llu
pthread_mutex_lock: 
pthread_mutex_unlock: 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/protobuf/src/google/protobuf/io/coded_stream.cc
The total number of bytes read was 
A protocol message was rejected because it was too big (more than 
 bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
Reading dangerously large protocol message.  If the message turns out to be larger than 
 bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
CHECK failed: (buffer_size) >= (0): 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/protobuf/src/google/protobuf/wire_format_lite.cc
CHECK failed: (value.size()) <= (kint32max): 
parsing
serializing
 '%s'
String field
 contains invalid 
UTF-8 data when 
 a protocol 
buffer. Use the 'bytes' type if you intend to send raw 
bytes. 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc
CHECK failed: (last_returned_size_) > (0): 
BackUp() can only be called after a successful Next().
CHECK failed: (count) <= (last_returned_size_): 
CHECK failed: (count) >= (0): 
CHECK failed: target_ != NULL: 
Cannot allocate buffer larger than kint32max for 
StringOutputStream.
CHECK failed: (count) <= (target_->size()): 
'callback' must not be NULL
CHECK failed: backup_bytes_ == 0 && buffer_.get() != NULL: 
 BackUp() can only be called after Next().
CHECK failed: (count) <= (buffer_used_): 
 Can't back up over more bytes than were returned by the last call to Next().
 Parameter to BackUp() can't be negative.
CHECK failed: (backup_bytes_) == (0): 
CHECK failed: (buffer_used_) == (buffer_size_): 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/protobuf/src/google/protobuf/stubs/logging.h
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/protobuf/src/google/protobuf/io/zero_copy_stream_impl.cc
close() failed: 
CHECK failed: !is_closed_: 
Can't BackUp() after failed Next().
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-63.0.0.1.9/deps/protobuf/src/google/protobuf/arena.cc
CHECK failed: (options_.initial_block_size) >= (sizeof(Block)): 
: Initial block size too small for header.
CHECK failed: (n) <= (std::numeric_limits<size_t>::max() - kHeaderSize): 
MLClassifier
MLModeling
MLDictionaryConstraint
MLFeatureValueConstraint
NSCopying
MLNeuralNetworkSpecification
MLNeuralNetworkEngine
MLNeuralNetwork
MLModelSpecificationLoader
MLCompiledModelLoader
MLSpecificationCompiler
MLRegressor
MLMultiArrayUtils
MLMultiArray
Attributes
PrivateConstruction
CopyingAndVectorization
ConvenientConstruction
Filling
MLMultiArrayAsNSArrayWrapper
QuickLook
Utilities
MLSVREngine
ModelConstructible
ImageUtils
MLModelErrorUtils
MLSVRLoader
ModelSpecification
MLPipelineClassifier
Model
InMemoryConstruction
MLIdentity
MLVersionInfo
MLSVMEngine
MLFeatureFrameUtils
MLTreeEnsembleRegressor
ModelAsset
MLImageConstraint
MLModelAsset
MLFeatureValue
MLModelTypeRegistry
MLTreeEnsembleClassifier
MLLoader
MLInMemoryFeatureFrame
MLFeatureDescription
MLPipeline
MLSupportVectorRegressor
MLInMemoryFeatureArray
MLGLMRegression
CoreMLVersion
MLGKDecisionTree
MLFeatureFrame
MLModelInterface
FeatureAccessors
Validation
MLCompilerOptions
MLCompilerResult
MLCompiler
MLClassifierLabelWithProbability
MLLogging
MLModel
MLRegressorResult
MLFeatureTypeUtils
MLDictionaryFeatureProvider
MLFeatureProvider
NSFastEnumeration
FromGenericFeatureProvider
MLPipelineRegressor
MLModelDescription
MLSupportVectorClassifier
MLClassifierResult
MLPipelineLoader
MLFeatureArray
MLPredictionOptions
MLSVMLoader
MLImputer
MLModelIOUtils
MLGLMClassification
MLModelMetadata
MLFeatureVectorizer
MLDictVectorizer
MLNormalizer
MLCategoricalMapping
MLScaler
MLOneHotEncoder
MLInternalSettings
MLMultiArrayConstraint
MLArrayFeatureExtractor
@32@0:8@16^@24
@40@0:8@16@24^@32
@16@0:8
@"<MLFeatureProvider>"32@0:8@"<MLFeatureProvider>"16^@24
@"<MLFeatureProvider>"40@0:8@"<MLFeatureProvider>"16@"MLPredictionOptions"24^@32
@"<MLFeatureFrame>"32@0:8@"<MLFeatureFrame>"16^@24
@"MLModelDescription"16@0:8
@"MLModelInterface"16@0:8
@"MLModelMetadata"16@0:8
@"NSArray"16@0:8
@"MLClassifierResult"40@0:8@"<MLFeatureProvider>"16@"MLPredictionOptions"24^@32
B32@0:8@16^@24
B32@0:8@"MLFeatureValue"16^@24
@24@0:8^{_NSZone=}16
@24@0:8q16
q16@0:8
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
v16@0:8
v24@0:8@16
i16@0:8
v20@0:8i16
B16@0:8
v20@0:8B16
f16@0:8
v20@0:8f16
@"NSString"
@"NSArray"
@"NSDictionary"
@48@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24@32^@40
@40@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16@24^@32
@32@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16^@24
@40@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@24^@32
@32@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^@24
@48@0:8@16@24@32^@40
@"<MLModeling>"32@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^@24
@40@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@"MLVersionInfo"24^@32
@"MLCompilerResult"48@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24@"MLCompilerOptions"32^@40
@"MLVersionInfo"40@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16@"MLCompilerOptions"24^@32
@"MLRegressorResult"40@0:8@"<MLFeatureProvider>"16@"MLPredictionOptions"24^@32
@52@0:8@16@24@32B40^@44
B28@0:8B16^@20
^{__CVBuffer=}40@0:8^{?=^v^v[4Q][4Q]QQQQQQQQQQi}16@24^@32
Q16@0:8
{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16@0:8
v40@0:8{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16
^v16@0:8
v24@0:8^v16
{?=^vi}16@0:8
v32@0:8{?=^vi}16
{?=ffffB}16@0:8
v36@0:8{?=ffffB}16
I16@0:8
v20@0:8I16
{vector<const char *, std::__1::allocator<const char *> >=^*^*{__compressed_pair<const char **, std::__1::allocator<const char *> >=^*}}16@0:8
v40@0:8{vector<const char *, std::__1::allocator<const char *> >=^*^*{__compressed_pair<const char **, std::__1::allocator<const char *> >=^*}}16
{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}16@0:8
v40@0:8{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}16
{?="plan"^v"network_index"i}
{?="bias_r"f"bias_g"f"bias_b"f"scale"f"network_wants_bgr"B}
{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true> >="__first_"Q}}}
{vector<const char *, std::__1::allocator<const char *> >="__begin_"^*"__end_"^*"__end_cap_"{__compressed_pair<const char **, std::__1::allocator<const char *> >="__first_"^*}}
{vector<int, std::__1::allocator<int> >="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::__1::allocator<int> >="__first_"^i}}
@24@0:8r^{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}16
{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}24@0:8@16
@40@0:8@16q24^@32
@64@0:8^v16@24q32@40@?48^@56
@24@0:8Q16
v32@0:8@16Q24
v32@0:8@16q24
Q24@0:8@16
@24@0:8@16
v32@0:8@16@24
^{MultiArrayBuffer=^^?{shared_ptr<unsigned char>=*^{__shared_weak_count}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}iQS}
B24@0:8q16
B24@0:8@16
^d16@0:8
i24@0:8q16
@48@0:8@16q24q32^@40
B40@0:8@16q24^@32
B40@0:8@16Q24^@32
@"MLMultiArray"
@40@0:8^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}16B24B28Q32
^{svm_node=id}24@0:8Q16
v40@0:8^{svm_node=id}16^d24Q32
v24@0:8^{svm_node=id}16
^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}16@0:8
v24@0:8^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}16
^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}
^{__CVBuffer=}32@0:8@16^@24
^{__CVBuffer=}36@0:8@16B24^@28
@40@0:8q16@24[1{__va_list_tag=II^v^v}]32
@32@0:8q16@24
@56@0:8@16@24@32@40^@48
@"MLPipeline"
@32@0:8^{_MLModelSpecification=}16^@24
@"<MLModeling>"32@0:8^{_MLModelSpecification=}16^@24
@48@0:8q16q24q32@40
@32@0:8@16@24
@48@0:8^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}16B24B28Q32@40
v32@0:8@16^d24
v24@0:8Q16
r*16@0:8
d32@0:8@16^@24
d24@0:8^d16
{shared_ptr<Archiver::MMappedFile>="__ptr_"^{MMappedFile}"__cntrl_"^{__shared_weak_count}}
{vector<unsigned char, std::__1::allocator<unsigned char> >="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >="__first_"*}}
B40@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
B28@0:8I16Q20
@36@0:8Q16Q24I32
@32@0:8Q16Q24
@20@0:8I16
@40@0:8Q16Q24Q32
B24@0:8^@16
@24@0:8^@16
@"NSURL"
@"NSObject<MLModeling>"
@24@0:8d16
@24@0:8^{__CVBuffer=}16
@40@0:8q16@24^@32
@32@0:8@16q24
d16@0:8
^{__CVBuffer=}16@0:8
@"NSObject"
#20@0:8i16
@40@0:8^d16Q24^@32
{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >="__begin_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_cap_"{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >="__first_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}
{vector<long long, std::__1::allocator<long long> >="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long long *, std::__1::allocator<long long> >="__first_"^q}}
@32@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16^@24
@40@0:8@16@24Q32
@44@0:8@16q24B32@36
@"MLMultiArrayConstraint"
@"MLImageConstraint"
@"MLDictionaryConstraint"
@48@0:8r^{RepeatedPtrField<CoreML::Specification::Model>=^{Arena}ii^{Rep}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24@32^@40
@56@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@24@32@40^@48
@48@0:8@16Q24Q32^@40
@48@0:8@16@24i32i36^@40
@"MLSVREngine"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
{vector<double, std::__1::allocator<double> >="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::__1::allocator<double> >="__first_"^d}}
{vector<std::__1::vector<double, std::__1::allocator<double> >, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >="__begin_"^{vector<double, std::__1::allocator<double> >}"__end_"^{vector<double, std::__1::allocator<double> >}"__end_cap_"{__compressed_pair<std::__1::vector<double, std::__1::allocator<double> > *, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >="__first_"^{vector<double, std::__1::allocator<double> >}}}
{shared_ptr<CoreML::Specification::Model>="__ptr_"^{Model}"__cntrl_"^{__shared_weak_count}}
@"NSNumber"
B32@0:8@16@24
^{TreeEnsembleClassifier=^^?{shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}{map<std::__1::pair<unsigned long, unsigned long>, int, std::__1::less<std::__1::pair<unsigned long, unsigned long> >, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned long, unsigned long>, int> > >={__tree<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, int>, std::__1::__map_value_compare<std::__1::pair<unsigned long, unsigned long>, std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, int>, std::__1::less<std::__1::pair<unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned long, unsigned long>, std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, int>, std::__1::less<std::__1::pair<unsigned long, unsigned long> >, true> >=Q}}}^{TreeEnsembleParameters}^{TreeEnsembleClassifier}}
@"MLTreeEnsembleClassifier"
@"NSMutableArray"
@"NSMutableOrderedSet"
@"<MLFeatureProvider>"24@0:8Q16
@"<MLFeatureArray>"24@0:8@"NSString"16
@24@0:8@"NSArray"16
@32@0:8@"<MLFeatureFrame>"16^@24
@"NSDictionary"16@0:8
@64@0:8@16@24@32@40@48@56
@"NSOrderedSet"
q24@0:8@16
@"<NSCopying>"
@"MLModelInterface"
@"MLModelMetadata"
@"MLModelDescription"
q32@0:8@16^@24
@"MLFeatureValue"24@0:8@"NSString"16
@"NSSet"16@0:8
@"MLSVMEngine"
@40@0:8@16q24@32
@"<MLFeatureProvider>"
@32@0:8^{_MLModelMetadataSpecification={shared_ptr<CoreML::Specification::Metadata>=^{Metadata}^{__shared_weak_count}}}16^@24
@"MLFeatureValue"24@0:8Q16
@20@0:8B16
@72@0:8@16@24@32@40@48@56^@64
@80@0:8@16@24@32@40@48@56@64^@72
@"MLFeatureValue"
@48@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16#24@32^@40
@40@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
B40@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
B40@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
@24@0:8r^{FeatureDescription=^^?{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{Arena}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{FeatureType}i}16
@24@0:8r^{RepeatedPtrField<CoreML::Specification::FeatureDescription>=^{Arena}ii^{Rep}}16
B40@0:8@16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
@24@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16
@28@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16B24
B40@0:8^d16@24^@32
@40@0:8@16Q24^@32
@72@0:8@16@24@32@40@48@56@64
{vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >="__begin_"^{pair<unsigned long, unsigned long>}"__end_"^{pair<unsigned long, unsigned long>}"__end_cap_"{__compressed_pair<std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >="__first_"^{pair<unsigned long, unsigned long>}}}
@64@0:8@16@24@32@40@48^@56
@52@0:8i16@20@28@36@44
@60@0:8i16@20@28@36@44@52
v32@0:8d16^d24
@40@0:8@16@24@32
@72@0:8@16@24B32B36@40@48@56@64
B32@0:8q16^@24
6Kernel
7QMatrix
6Solver
9Solver_NU
5SVC_Q
11ONE_CLASS_Q
5SVR_Q
NSt3__120__shared_ptr_emplaceIN8Archiver13_OArchiveImplENS_9allocatorIS2_EEEE
NSt3__114basic_ofstreamIcNS_11char_traitsIcEEEE
NSt3__113basic_filebufIcNS_11char_traitsIcEEEE
NSt3__120__shared_ptr_emplaceIN8Archiver13_IArchiveImplENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_pointerIPhZ53-[MLNeuralNetworkEngine evaluateNoAutoRelease:error:]E3$_0NS_9allocatorIhEEEE
Z53-[MLNeuralNetworkEngine evaluateNoAutoRelease:error:]E3$_0
NSt3__120__shared_ptr_pointerIPN8Archiver14_ODataBlobImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN8Archiver14_ODataBlobImplEEE
NSt3__120__shared_ptr_emplaceIN8Archiver14_ODataBlobImplENS_9allocatorIS2_EEEE
N6CoreML18SwiftCodeGeneratorE
NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__120__shared_ptr_emplaceIN6CoreML13Specification8MetadataENS_9allocatorIS3_EEEE
N6CoreML17ObjCCodeGeneratorE
N6CoreML13CodeGeneratorE
NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
?NSt3__120__shared_ptr_emplaceIN6CoreML13Specification5ModelENS_9allocatorIS3_EEEE
N6CoreML16MultiArrayBufferE
NSt3__120__shared_ptr_pointerIPhZN6CoreML16MultiArrayBufferC1ERKNS_6vectorImNS_9allocatorImEEEENS2_10ScalarTypeENS2_12StorageOrderEE3$_0NS5_IhEEEE
ZN6CoreML16MultiArrayBufferC1ERKNSt3__16vectorImNS1_9allocatorImEEEENS_10ScalarTypeENS_12StorageOrderEE3$_0
NSt3__120__shared_ptr_pointerIPhZN6CoreML16MultiArrayBufferC1ES1_RKNS_6vectorImNS_9allocatorImEEEES9_NS2_10ScalarTypeEE3$_1NS5_IhEEEE
ZN6CoreML16MultiArrayBufferC1EPhRKNSt3__16vectorImNS2_9allocatorImEEEES8_NS_10ScalarTypeEE3$_1
NSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
NSt3__120__shared_ptr_pointerIPN8Archiver11MMappedFileENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN8Archiver11MMappedFileEEE
NSt3__120__shared_ptr_pointerIPN8Archiver14_IDataBlobImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN8Archiver14_IDataBlobImplEEE
NSt3__120__shared_ptr_emplaceIN8Archiver14_IDataBlobImplENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6CoreML13Specification16ModelDescriptionENS_9allocatorIS3_EEEE
@(#)PROGRAM:CoreML  PROJECT:CoreML-1
N6CoreML13Specification8PipelineE
N6CoreML13Specification18PipelineClassifierE
N6CoreML13Specification17PipelineRegressorE
N6CoreML13Specification18FeatureDescriptionE
N6CoreML13Specification8MetadataE
N6CoreML13Specification16ModelDescriptionE
N6CoreML13Specification5ModelE
N6google8protobuf8internal12MapFieldLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_LNS1_14WireFormatLite9FieldTypeE9ELSB_9ELi0EEE
N6google8protobuf8hash_mapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS0_7MapPairIS8_S8_EENS0_4hashIS8_EENS2_8equal_toIS8_EENS0_3MapIS8_S8_E12MapAllocatorINS2_4pairIKS8_SB_EEEEEE
NSt3__113unordered_mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN6google8protobuf7MapPairIS6_S6_EENS8_4hashIS6_EENS_8equal_toIS6_EENS8_3MapIS6_S6_E12MapAllocatorINS_4pairIKS6_SB_EEEEEE
N6google8protobuf3MapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_E8InnerMapE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_LNS1_14WireFormatLite9FieldTypeE9ELSB_9ELi0EEE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_LNS1_14WireFormatLite9FieldTypeE9ELSB_9ELi0EE15MapEntryWrapperIS9_S9_LSB_9ELSB_9ELi0EEE
NSt3__120__shared_ptr_emplaceIN6CoreML13TreeEnsembles20_TreeComputationNodeENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6CoreML13TreeEnsembles13_TreeEnsembleENS_9allocatorIS3_EEEE
N6CoreML13Specification25GLMClassifier_DoubleArrayE
N6CoreML13Specification13GLMClassifierE
N6CoreML13Specification13OneHotEncoderE
N6CoreML13Specification29FeatureVectorizer_InputColumnE
N6CoreML13Specification17FeatureVectorizerE
N6CoreML13Specification10NormalizerE
N6CoreML13Specification46TreeEnsembleParameters_TreeNode_EvaluationInfoE
N6CoreML13Specification31TreeEnsembleParameters_TreeNodeE
N6CoreML13Specification22TreeEnsembleParametersE
N6CoreML13Specification22TreeEnsembleClassifierE
N6CoreML13Specification21TreeEnsembleRegressorE
N6CoreML13Specification13NeuralNetworkE
N6CoreML13Specification24NeuralNetworkImageScalerE
N6CoreML13Specification22NeuralNetworkMeanImageE
N6CoreML13Specification26NeuralNetworkPreprocessingE
N6CoreML13Specification14ActivationReLUE
N6CoreML13Specification19ActivationLeakyReLUE
N6CoreML13Specification14ActivationTanhE
N6CoreML13Specification20ActivationScaledTanhE
N6CoreML13Specification17ActivationSigmoidE
N6CoreML13Specification16ActivationLinearE
N6CoreML13Specification21ActivationSigmoidHardE
N6CoreML13Specification15ActivationPReLUE
N6CoreML13Specification13ActivationELUE
N6CoreML13Specification25ActivationThresholdedReLUE
N6CoreML13Specification18ActivationSoftsignE
N6CoreML13Specification18ActivationSoftplusE
N6CoreML13Specification28ActivationParametricSoftplusE
N6CoreML13Specification16ActivationParamsE
N6CoreML13Specification18NeuralNetworkLayerE
N6CoreML13Specification23BorderAmounts_EdgeSizesE
N6CoreML13Specification13BorderAmountsE
N6CoreML13Specification12ValidPaddingE
N6CoreML13Specification11SamePaddingE
N6CoreML13Specification12WeightParamsE
N6CoreML13Specification22ConvolutionLayerParamsE
N6CoreML13Specification23InnerProductLayerParamsE
N6CoreML13Specification20EmbeddingLayerParamsE
N6CoreML13Specification20BatchnormLayerParamsE
N6CoreML13Specification39PoolingLayerParams_ValidCompletePaddingE
N6CoreML13Specification18PoolingLayerParamsE
N6CoreML13Specification34PaddingLayerParams_PaddingConstantE
N6CoreML13Specification36PaddingLayerParams_PaddingReflectionE
N6CoreML13Specification37PaddingLayerParams_PaddingReplicationE
N6CoreML13Specification18PaddingLayerParamsE
N6CoreML13Specification17ConcatLayerParamsE
N6CoreML13Specification14LRNLayerParamsE
N6CoreML13Specification18SoftmaxLayerParamsE
N6CoreML13Specification16SplitLayerParamsE
N6CoreML13Specification14AddLayerParamsE
N6CoreML13Specification19MultiplyLayerParamsE
N6CoreML13Specification24UnaryFunctionLayerParamsE
N6CoreML13Specification19UpsampleLayerParamsE
N6CoreML13Specification15BiasLayerParamsE
N6CoreML13Specification16ScaleLayerParamsE
N6CoreML13Specification23LoadConstantLayerParamsE
N6CoreML13Specification22L2NormalizeLayerParamsE
N6CoreML13Specification18FlattenLayerParamsE
N6CoreML13Specification18ReshapeLayerParamsE
N6CoreML13Specification18PermuteLayerParamsE
N6CoreML13Specification17ReduceLayerParamsE
N6CoreML13Specification15CropLayerParamsE
N6CoreML13Specification18AverageLayerParamsE
N6CoreML13Specification14MaxLayerParamsE
N6CoreML13Specification14MinLayerParamsE
N6CoreML13Specification21DotProductLayerParamsE
N6CoreML13Specification32MeanVarianceNormalizeLayerParamsE
N6CoreML13Specification25SequenceRepeatLayerParamsE
N6CoreML13Specification26SimpleRecurrentLayerParamsE
N6CoreML13Specification14GRULayerParamsE
N6CoreML13Specification10LSTMParamsE
N6CoreML13Specification16LSTMWeightParamsE
N6CoreML13Specification29UniDirectionalLSTMLayerParamsE
N6CoreML13Specification28BiDirectionalLSTMLayerParamsE
N6CoreML13Specification23NeuralNetworkClassifierE
N6CoreML13Specification22NeuralNetworkRegressorE
N6CoreML13Specification18CategoricalMappingE
N6CoreML13Specification6ScalerE
N6CoreML13Specification8IdentityE
N6CoreML13Specification14DictVectorizerE
N6CoreML5ModelE
NSt3__120__shared_ptr_pointerIPN6CoreML13Specification5ModelENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN6CoreML13Specification5ModelEEE
NSt3__120__shared_ptr_pointerIPN6CoreML13Specification8MetadataENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN6CoreML13Specification8MetadataEEE
NSt3__120__shared_ptr_pointerIPN6CoreML13Specification16ModelDescriptionENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN6CoreML13Specification16ModelDescriptionEEE
NSt3__110__function6__funcIPFN6CoreML6ResultERKNS2_13Specification18NeuralNetworkLayerEENS_9allocatorIS9_EES8_EE
NSt3__110__function6__baseIFN6CoreML6ResultERKNS2_13Specification18NeuralNetworkLayerEEEE
PFN6CoreML6ResultERKNS_13Specification18NeuralNetworkLayerEE
FN6CoreML6ResultERKNS_13Specification18NeuralNetworkLayerEE
NSt3__117bad_function_callE
N6CoreML13Specification21ArrayFeatureExtractorE
NSt3__120__shared_ptr_emplaceIN6CoreML13Specification11FeatureTypeENS_9allocatorIS3_EEEE
N6CoreML16TreeEnsembleBaseE
N6CoreML22TreeEnsembleClassifierE
N6CoreML21TreeEnsembleRegressorE
N6CoreML13Specification7ImputerE
N6CoreML13Specification16Int64FeatureTypeE
N6CoreML13Specification17DoubleFeatureTypeE
N6CoreML13Specification17StringFeatureTypeE
N6CoreML13Specification16ImageFeatureTypeE
N6CoreML13Specification16ArrayFeatureTypeE
N6CoreML13Specification21DictionaryFeatureTypeE
N6CoreML13Specification11FeatureTypeE
N6CoreML13Specification16StringToInt64MapE
N6CoreML13Specification16Int64ToStringMapE
N6CoreML13Specification17StringToDoubleMapE
N6CoreML13Specification16Int64ToDoubleMapE
N6CoreML13Specification12StringVectorE
N6CoreML13Specification11Int64VectorE
N6CoreML13Specification12DoubleVectorE
NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__121__basic_string_commonILb1EEE
N6google8protobuf8internal12MapFieldLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEExLNS1_14WireFormatLite9FieldTypeE9ELSB_3ELi0EEE
N6google8protobuf8hash_mapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS0_7MapPairIS8_xEENS0_4hashIS8_EENS2_8equal_toIS8_EENS0_3MapIS8_xE12MapAllocatorINS2_4pairIKS8_SB_EEEEEE
NSt3__113unordered_mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN6google8protobuf7MapPairIS6_xEENS8_4hashIS6_EENS_8equal_toIS6_EENS8_3MapIS6_xE12MapAllocatorINS_4pairIKS6_SB_EEEEEE
N6google8protobuf3MapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEExE8InnerMapE
N6google8protobuf4hashINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEExLNS1_14WireFormatLite9FieldTypeE9ELSB_3ELi0EEE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEExLNS1_14WireFormatLite9FieldTypeE9ELSB_3ELi0EE15MapEntryWrapperIS9_xLSB_9ELSB_3ELi0EEE
N6google8protobuf8internal12MapFieldLiteIxNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEELNS1_14WireFormatLite9FieldTypeE3ELSB_9ELi0EEE
N6google8protobuf8hash_mapIxPNS0_7MapPairIxNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_4hashIxEENS3_8equal_toIxEENS0_3MapIxS9_E12MapAllocatorINS3_4pairIKxSB_EEEEEE
NSt3__113unordered_mapIxPN6google8protobuf7MapPairIxNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS2_4hashIxEENS_8equal_toIxEENS2_3MapIxS9_E12MapAllocatorINS_4pairIKxSB_EEEEEE
N6google8protobuf3MapIxNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE8InnerMapE
N6google8protobuf4hashIxEE
NSt3__14hashIxEE
NSt3__113__scalar_hashIxLm1EEE
NSt3__114unary_functionIxmEE
N6google8protobuf8internal12MapEntryLiteIxNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEELNS1_14WireFormatLite9FieldTypeE3ELSB_9ELi0EEE
N6google8protobuf8internal12MapEntryLiteIxNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEELNS1_14WireFormatLite9FieldTypeE3ELSB_9ELi0EE15MapEntryWrapperIxS9_LSB_3ELSB_9ELi0EEE
N6google8protobuf8internal12MapFieldLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEdLNS1_14WireFormatLite9FieldTypeE9ELSB_1ELi0EEE
N6google8protobuf8hash_mapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS0_7MapPairIS8_dEENS0_4hashIS8_EENS2_8equal_toIS8_EENS0_3MapIS8_dE12MapAllocatorINS2_4pairIKS8_SB_EEEEEE
NSt3__113unordered_mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN6google8protobuf7MapPairIS6_dEENS8_4hashIS6_EENS_8equal_toIS6_EENS8_3MapIS6_dE12MapAllocatorINS_4pairIKS6_SB_EEEEEE
N6google8protobuf3MapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEdE8InnerMapE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEdLNS1_14WireFormatLite9FieldTypeE9ELSB_1ELi0EEE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEdLNS1_14WireFormatLite9FieldTypeE9ELSB_1ELi0EE15MapEntryWrapperIS9_dLSB_9ELSB_1ELi0EEE
N6google8protobuf8internal12MapFieldLiteIxdLNS1_14WireFormatLite9FieldTypeE3ELS4_1ELi0EEE
N6google8protobuf8hash_mapIxPNS0_7MapPairIxdEENS0_4hashIxEENSt3__18equal_toIxEENS0_3MapIxdE12MapAllocatorINS7_4pairIKxS4_EEEEEE
NSt3__113unordered_mapIxPN6google8protobuf7MapPairIxdEENS2_4hashIxEENS_8equal_toIxEENS2_3MapIxdE12MapAllocatorINS_4pairIKxS5_EEEEEE
N6google8protobuf3MapIxdE8InnerMapE
N6google8protobuf8internal12MapEntryLiteIxdLNS1_14WireFormatLite9FieldTypeE3ELS4_1ELi0EEE
N6google8protobuf8internal12MapEntryLiteIxdLNS1_14WireFormatLite9FieldTypeE3ELS4_1ELi0EE15MapEntryWrapperIxdLS4_3ELS4_1ELi0EEE
N6CoreML13Specification24GLMRegressor_DoubleArrayE
N6CoreML13Specification12GLMRegressorE
N6CoreML13Specification12LinearKernelE
N6CoreML13Specification9RBFKernelE
N6CoreML13Specification10PolyKernelE
N6CoreML13Specification13SigmoidKernelE
N6CoreML13Specification6KernelE
N6CoreML13Specification10SparseNodeE
N6CoreML13Specification12SparseVectorE
N6CoreML13Specification20SparseSupportVectorsE
N6CoreML13Specification11DenseVectorE
N6CoreML13Specification19DenseSupportVectorsE
N6CoreML13Specification12CoefficientsE
N6CoreML13Specification22SupportVectorRegressorE
N6CoreML13Specification23SupportVectorClassifierE
N6google8protobuf11MessageLiteE
N6google8protobuf2io19ZeroCopyInputStreamE
N6google8protobuf2io20ZeroCopyOutputStreamE
N6google8protobuf14FatalExceptionE
N6google8protobuf7ClosureE
N6google8protobuf8internal16FunctionClosure0E
N6google8protobuf8internal12FieldSkipperE
N6google8protobuf8internal29CodedOutputStreamFieldSkipperE
N6google8protobuf2io16ArrayInputStreamE
N6google8protobuf2io17ArrayOutputStreamE
N6google8protobuf2io18StringOutputStreamE
N6google8protobuf2io22LazyStringOutputStreamE
N6google8protobuf2io18CopyingInputStreamE
N6google8protobuf2io25CopyingInputStreamAdaptorE
N6google8protobuf2io19CopyingOutputStreamE
N6google8protobuf2io26CopyingOutputStreamAdaptorE
N6google8protobuf2io15FileInputStreamE
N6google8protobuf2io15FileInputStream22CopyingFileInputStreamE
N6google8protobuf2io16FileOutputStreamE
N6google8protobuf2io16FileOutputStream23CopyingFileOutputStreamE
N6google8protobuf2io18IstreamInputStreamE
N6google8protobuf2io18IstreamInputStream25CopyingIstreamInputStreamE
N6google8protobuf2io19OstreamOutputStreamE
N6google8protobuf2io19OstreamOutputStream26CopyingOstreamOutputStreamE
N6google8protobuf2io24ConcatenatingInputStreamE
N6google8protobuf2io19LimitingInputStreamE
Entering NN constructor
Plan created, now adding network
File: %s not found.
Finding model in: %s
Error in adding network %d.
Error in declaring input %d.
inputLayer: %s
Error in declaring output: %d.
outputLayer: %s
Error in building plan %d.
Plan built
Input feature %s was presented as a vector of length %d, but the model expects an input of length %d.
Input feature %s was presented as a batch  (length %d) of sequences (length %d) of vectors of length %d, but the model expects vectors of length %d.
Input %s is an array of rank %d, but this model only supports single vector inputs (rank 1) or a sequence of batches of vectors (rank 3).
Input feature %s was presented as an array of size (%d, %d, %d), but the model expects an input of size (%d, %d, %d).
Input feature %s was presented as a batch  (length %d) of sequences (length %d) of arrays of size (%d, %d, %d), but the model expects arrays of size (%d, %d, %d).
Input %s is an array of rank %d, but this model only supports image-like inputs (rank 3) or a sequence of batches of image-like inputs (rank 5).
Invalid model input shape in model description. VALIDATOR SHOULD HAVE CAUGHT THIS -- FILE A RADAR.
Input feature %s required but not passed to neural network.
Failure in resetSizes.
Error binding image input buffer %s: %d
Error binding input buffer %s: %d
Error passing input to NN engine.
Error: unsupported input type for neural network.
Error binding output buffer %s: %d
Error computing NN outputs %d
Empty input feature dictionary passed to resetSizes.
Incorrect input number of dimensions %lul (must be between 1 and 5 dimensions.
Different batch numbers for input features.
Cannot evaluate a batch of size %d, which is larger than maximum of %d.
Cannot evaluate a sequence of length %d, which is longer than maximum of %d.
Failure setting up to dynamically allocate for sequence size.
Failure dynamically resizing for sequence length.
Error in re-allocating network: %d.
%s thrown on construction
MLModelAsset: load has already been run successfully.
MLModelAsset: load failed with error %@
MLModelAsset: load failed.
MLModelAsset: modelWithError: load failed with error %@
MLModelAsset: classifierWithError: load failed.
MLModelAsset: regressorWithError: load failed.
Incorrect number of classes given (TreeEnsembleClassifier).
Couldn't create os_log_t coreChannel
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
    
