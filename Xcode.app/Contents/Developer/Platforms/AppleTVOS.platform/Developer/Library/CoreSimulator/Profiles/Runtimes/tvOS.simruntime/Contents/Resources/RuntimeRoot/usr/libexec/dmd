sharedConnection
osUpdateServiceProxy
dictionaryWithObjects:forKeys:count:
endOperationWithError:
endOperationWithSuccess
obliterateDataPreservingPaths:withCompletion:
runWithRequest:
setObject:forKeyedSubscript:
copy
platformSpecificValueBlocksByName
class
setWithObject:
arrayWithObjects:count:
whitelistedClassesForRequest
requiredEntitlements
profileData
validateRequest:error:
profileIdentifier
managingProfileIdentifier
destinationName
destinationDeviceID
propertyKeys
dmd_dataWithMappedContentsOfFileHandle:error:
effectiveProfileDataWithError:
secret
setWithArray:
fileDescriptor
bundleIdentifier
iTunesStoreID
appID
manifestURL
initWithRequest:
stringWithFormat:
UTF8String
operationWillStart
operationWillFinish
setTransaction:
operationDidFinish
containsObject:
request
endOperationWithErrorCode:
endOperationWithResultObject:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
isAsynchronous
main
.cxx_destruct
transaction
_transaction
invitationURL
programID
serverName
unlockTokenData
username
language
code
init
alloc
initWithMachServiceName:
_setQueue:
setDelegate:
setName:
setSuspended:
setMaxConcurrentOperationCount:
defaultCenter
_currentLocaleDidChange:
addObserver:selector:name:object:
delegate
serverWillStart
resume
xpcListener
hasAlreadyShutdown
invalidate
operationQueue
taskServer
setHasAlreadyShutdown:
valueForEntitlement:
boolValue
initWithXPCConnection:
connectWithClientTransport:
currentPlatformRequestClasses
_requestClassNamesToOperationClasses
objectForKeyedSubscript:
transport
countByEnumeratingWithState:objects:count:
boolValueForEntitlement:
verboseDescription
addOperation:
addObject:
count
dictionaryWithCapacity:
listener:shouldAcceptNewConnection:
server:clientSession:operationForRequest:error:
server:clientSession:didInterruptWithError:
server:clientSession:shouldConnectWithTransport:
server:clientSession:didReceiveNotificationWithName:userInfo:
server:clientSession:enqueueOperation:
server:clientSessionDidConnect:
server:clientSessionDidDisconnect:
server:clientSessionDidInvalidate:
serverDidInvalidate:
suspend
shutdown
setXpcListener:
setTaskServer:
setOperationQueue:
_hasAlreadyShutdown
_delegate
_xpcListener
_taskServer
_operationQueue
locale
persistentID
name
length
fileHandle
style
currentThread
mainThread
distantFuture
timeIntervalSinceReferenceDate
_timerDidFire:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
timeoutTimer
dealloc
completionBlock
setCompletionBlock:
timeout
dateWithTimeIntervalSinceNow:
setFireDate:
start
cancel
request:didFailWithError:
requestDidFinish:
startWithCompletionBlock:
setRequest:
setTimeoutTimer:
_request
_completionBlock
_timeoutTimer
filterFlags
_profileListWithFilterFlags:
initWithProfiles:
sharedReader
installedProfileIdentifiersWithFilterFlags:
userProfileRestrictions
systemProfileRestrictions
defaultRestrictions
installedProfileWithIdentifier:
dependentsOfParent:inDomain:
signerCertificates
dataWithBytes:length:
filterRestrictionDictionary:toIncludeOnlyRestrictionsThatDifferFromRestrictions:
initWithProfile:isManaged:signerCertificates:restrictions:
systemServiceProxy
topActiveOrActivatingApplicationIdentifierWithReply:
deactivateApplication
frontmostApplicationBundleID
isEqualToString:
suspendFrontmostApplication
suspendFrontmostApplicationIfItHasBundleID:
lookupDictionary
isEncrypted
payloads
type
version
organization
payloadDescription
initWithType:identifier:payloadVersion:displayName:organization:payloadDescription:
UUID
profileDescription
isLocked
removalPasscode
initWithUUID:type:identifier:profileVersion:displayName:organization:profileDescription:isManaged:isLocked:hasRemovalPasscode:isEncrypted:signerCertificates:payloads:restrictions:
sharedHacks
isSetupBuddyDone
_installInteractiveProfile:
_installSilentProfileData:managingProfileIdentifier:type:
numberWithInteger:
installProfileData:options:outError:
profileWithData:outError:
mustInstallProfileNonInteractively:
queueFileDataForAcceptance:originalFileName:outError:
removeProvisioningProfileWithUUID:outError:
initWithPurchases:
delegateWithPurchases:
purchaseRequest:purchaseDidFail:withError:
purchaseRequest:purchaseDidSucceed:
initWithReason:
setRebootType:
sharedService
shutdownWithOptions:
sharedStakeholder
willSwitchUser
inEDUMode
initWithFormat:arguments:
initForOperation:
_retain
_release
isParked
exceptionWithName:reason:userInfo:
setIsParked:
operation
assertionForOperation:
setOperation:
_isParked
_operation
propertyListWithData:options:format:error:
currentLocale
localeIdentifier
availableLocaleIdentifiers
arrayWithCapacity:
initWithLocaleIdentifier:
componentsFromLocaleIdentifier:
knownLanguages
removeObject:
insertObject:atIndex:
userSetLanguage
knownLocales
userSetLocale
setLanguage:outError:
setLocale:outError:
waitForMigrationIncludingPostRestoreMigration:completion:
_bundleIDFromAuditToken:
initWithURLRequest:
response
setResponse:
shouldHideUserPrompts
setShouldHideUserPrompts:
delegateWithURLRequest:
downloadManifestRequest:didReceiveResponse:
_response
initWithItems:
delegateWithItems:
personalizeOffersRequest:didReceiveResponse:
initWithAuthenticationContext:
_storeLoginFailedError
authenticatedAccount
setAuthenticatedAccount:
authenticateResponseType
delegateWithAuthenticationContext:
authenticateRequest:didReceiveResponse:
_authenticatedAccount
isPlaceholder
isAppRemovalAllowed
applicationType
isDeletable
diskUsage
installProgress
fractionCompleted
setFractionCompleted:
installState
setPhase:
installPhase
itemName
bundleVersion
shortVersionString
betaExternalVersionIdentifier
staticUsage
dynamicUsage
onDemandResourcesUsage
isMISAuthorized
isAppUpdate
isBetaApp
fileSharingEnabled
initWithApplicationIdentifier:bundleIdentifier:name:iconData:bundleVersion:shortVersionString:applicationType:adamID:externalVersionIdentifier:betaExternalVersionIdentifier:staticUsage:dynamicUsage:onDemandResourcesUsage:unusedRedemptionCode:attributes:configuration:feedback:state:managementFlags:isManaged:isValidated:isInstalled:isPlaceholder:isAppUpdate:isBetaApp:isRemoveable:fileSharingEnabled:progress:
initWithApplicationProxy:iconData:unusedRedemptionCode:attributes:configuration:feedback:state:managementFlags:isManaged:
currentRestrictions
initWithRestrictions:
applicationProxyForIdentifier:
applicationProxyForItemID:
localizedName
itemID
updateWithMetadataResponse:changeType:success:error:
valueForDownloadProperty:
initWithPurchase:
mutableCopy
bundleID
appendFormat:
localizedAppTitle
setBundleID:
setITunesStoreID:
setLocalizedAppTitle:
setExternalVersionIdentifer:
setPurchase:
setIsRedownload:
setIsRedemptionNeeded:
setHasRetrievedMetadata:
isLicensed
setIsLicensed:
setChangeType:
setSuccess:
setError:
initWithBundleID:iTunesStoreID:
initWithMetadataResponse:iTunesStoreID:changeType:success:error:
initWithPurchase:isRedownload:redemptionNeeded:
hasSufficientInfoForManagementChange
updateWithMetadataPurchase:isRedownload:redemptionNeeded:
externalVersionIdentifer
hasRetrievedMetadata
success
error
changeType
purchase
isRedownload
isRedemptionNeeded
_hasRetrievedMetadata
_isLicensed
_success
_isRedownload
_isRedemptionNeeded
_bundleID
_iTunesStoreID
_externalVersionIdentifer
_localizedAppTitle
_error
_changeType
_purchase
installedProfilesWithFilterFlags:
certificatePersistentID
copyItemWithPersistentID:useSystemKeychain:
initWithCertificateRef:isIdentity:
initWithCertificates:
identifier
setIdentifier:
title
setTitle:
message
setMessage:
defaultButtonText
setDefaultButtonText:
alternateButtonText
setAlternateButtonText:
otherButtonText
setOtherButtonText:
displayOnLockScreen
setDisplayOnLockScreen:
displayInAppWhitelistModes
setDisplayInAppWhitelistModes:
dismissAfterTimeInterval
setDismissAfterTimeInterval:
notification
setNotification:
_displayOnLockScreen
_displayInAppWhitelistModes
_identifier
_title
_message
_defaultButtonText
_alternateButtonText
_otherButtonText
_dismissAfterTimeInterval
_notification
mainQueueDidReceiveAppWhitelistChangedNotification
addObserverForName:object:queue:usingBlock:
removeObserver:
cancelAllNotificationsWithCompletionBlock:
appWhitelistState
removeAllObjects
addObjectsFromArray:
cancelNotificationEntriesMatchingPredicate:completionBlock:
predicateWithBlock:
filteredArrayUsingPredicate:
removeObjectsInArray:
displayUserNotificationWithIdentifier:title:message:defaultButtonText:alternateButtonText:otherButtonText:displayOnLockScreen:displayInAppWhitelistModes:dismissAfterTimeInterval:assertion:completionBlock:
unpark
park
stayAliveThroughHereAtLeast
objectAtIndexedSubscript:
subarrayWithRange:
sharedManager
displayUserNotificationWithTitle:message:defaultButtonText:alternateButtonText:otherButtonText:displayOnLockScreen:displayInAppWhitelistModes:dismissAfterTimeInterval:assertion:completionBlock:
promptUserToLogIntoiTunesWithTitle:message:loginButtonText:cancelButtonText:assertion:completionBlock:
inviteUserToVPPWithTitle:message:continueButtonText:cancelButtonText:assertion:completionBlock:
numberWithBool:
removeObjectAtIndex:
currentDevice
supportsBlockLevelEncryption
supportsFileLevelEncryption
isPasscodeSet
currentPasscodeIsCompliantWithGlobalRestrictionsOutError:
currentPasscodeIsCompliantWithProfileRestrictionsOutError:
effectiveValueForSetting:
unsignedIntegerValue
userValueForSetting:
initWithSupportsBlockLevelEncryption:supportsFileLevelEncryption:passcodeIsSet:passcodeIsCompliantWithGlobalRestrictions:passcodeIsCompliantWithProfileRestrictions:passcodeLockGracePeriodEnforced:passcodeLockGracePeriod:
initWithSecurityInformation:
bundleIdentifiers
validateAppBundleIDs:completion:
typeFilter
stateFilter
excludeIcon
excludeUnmanagedApps
deleteFeedback
_fetchAppByIdentifierFilteredByType:filteredByState:filteredByBundleIdentifiers:excludeIcon:excludeUnmanagedApps:deleteFeedback:
initWithApplicationsByIdentifier:
_proxiesWithBundleIdentifiers:
_proxiesWithType:
_predicateForType:state:
evaluateWithObject:
managedDefaultsForDomain:
_managedFeedbackDictionaryForBundleID:delete:
predicateWithFormat:
predicateWithValue:
firstObject
andPredicateWithSubpredicates:
applicationIsInstalled:
dataContainerURL
arrayWithObject:
deviceClass
numberWithDouble:
floatValue
deviceUniqueIdentifier
deviceSerialNumber
deviceProductName
deviceName
deviceType
deviceHasInternetTetheringCapability
deviceCapacity
deviceAvailableCapacity
deviceLastCloudBackupDate
setDeviceName:outError:
_queue
stringFromNumber:
dataUsingEncoding:
sha1Hash
base64EncodedStringWithOptions:
fileURLWithPath:
defaultManager
path
fileExistsAtPath:
getResourceValue:forKey:error:
setResourceValue:forKey:error:
iTunesAccountHashForUniqueIdentifier:
setSkipBackupAttribute:toItemAtPath:
nextJobSequenceNumber
setNextJobSequenceNumber:
queueIDString
callStackSymbols
jobGroup
jobQueue
executionQueue
enqueueJob:
jobDidFinish
setExecutionQueue:
setJobQueue:
setJobGroup:
setQueueIDString:
_nextJobSequenceNumber
_executionQueue
_jobQueue
_jobGroup
_queueIDString
purchaseMethod
managementChange
initWithBundleIdentifier:appState:
attributes
managementFlags
configuration
installVPPAppMessage
loginButtonText
cancelButtonText
storeAppUpdateMessage
storeAppInstallationMessage
enterpriseAppUpdateMessage
enterpriseAppInstallationMessage
installationFailureMessage
updateFailureMessage
dismissButtonText
installButtonText
_systemGroupContainerPathWithGroupIdentifier:
_systemProfileStorageDirectory
stringByAppendingPathComponent:
purchasedBooksDirectory
_userDirectory
_managedNonStoreBooksSystemGroupContainer
managedNonStoreBooksDirectory
_systemProfileLibraryDirectory
configurationProfilesSystemGroupContainer
stringWithCString:encoding:
appManagementFilePath
purchasedBooksManifest
managedStoreBooksManifestPath
managedNonStoreBooksManifestPath
migrationMetadataPath
systemLostModeRequestPath
defaultStore
activeAccount
promptUserForiTunesAccount:accountNameEditable:canCreateNewAccount:assertion:completionBlock:
initWithAccount:
contextForSignIn
setPromptStyle:
setAccountNameEditable:
setCanCreateNewAccount:
promptUserToLoginToiTunesIfNeededTitle:message:loginButtonText:cancelButtonText:assertion:completionBlock:
inviteUserToCloudVPPProgramURL:title:message:continueButtonText:cancelButtonText:assertion:completionBlock:
bytes
_valueBlocksByName
initWithValuesByPropertyKey:errorsByPropertyKey:
isAwaitingConfiguration
_macAddress
_OSVersion
_buildVersion
_model
_bluetoothMacAddress
addEntriesFromDictionary:
initWithDictionary:copyItems:
items
setItems:
itemLookupRequest:didFindItems:
_items
removeProfileAsyncWithIdentifier:installationType:
initWithManifestPath:
dataWithContentsOfFile:
safePropertyListWithData:options:format:error:
manifest
manifestPath
writeToFile:atomically:
manifestQueue
manifestQueueHasMetadataForBundleID:
manifestQueueCommitManifest
manifestQueueManagedAppMetadataByBundleID
MCDeepCopy
manifestQueueAppStateForBundleID:
manifestQueueSetManagedAppMetadataByBundleID:
rereadManagedAppAttributes
manifestQueueSetMetadata:forBundleID:
manifestQueueMetadataForBundleID:
intValue
numberWithUnsignedInteger:
manifestQueueSetAppState:forBundleID:
cancelAppDownloadForBundleID:
removeObjectForKey:
manifestQueueRemoveBundleID:
setDefaults:forManagedDomain:
defaultWorkspace
applicationIdentifier
installType
isInstalled
enumerateApplicationsOfType:block:
_isBundleID:installedAsApplicationType:
_isBundleIDInstalled:
isAppManaged:
componentsWithURL:resolvingAgainstBaseURL:
setQuery:
_stringForAppState:
sharedConfiguration
isSupervised
startWithPurchaseResponseBlock:completionBlock:
installQueue
_appBundleID:wasInstalledOutIsManaged:
MCVerboseDescription
_displayPromptForAppInstallationWithTitle:message:installButtonText:cancelButtonText:bundleID:isAppStore:isUpdate:assertion:completionBlock:
uniqueIdentifier
accountIdentifier
isEqualToNumber:
setValue:forProperty:
setAccountIdentifier:
getPurchasedItemsForItems:completionBlock:
applicationForBundleIdentifier:
accountDSID
accountWithUniqueIdentifier:reloadIfNecessary:
_displayPromptForStoreAppUpdateIfNeededPurchaserAccount:purchase:title:message:installButtonText:cancelButtonText:bundleID:assertion:completionBlock:
requestWithURL:
downloadingAppIDs
activeDownloadForAppID:
downloadPhaseIdentifier
_appAlreadyQueuedError:
resumeDownloadForBundleID:
_bundleIDAlreadyInstalledError:
_bundleIDIsSystemAppError:
_cannotValidateAppIDError
_lookupItemWithAppIdentifier:iTunesStoreID:completionBlock:
_lookupItemWithAppIdentifier:iTunesStoreID:personalize:completionBlock:
setKeyProfile:
setPersonalizationStyle:
setValue:forRequestParameter:
_cannotValidateAppIDErrorUnderlyingError:
allItems
offers
price
compare:
buyParameters
setBuyParameters:
setValue:forDownloadProperty:
ITunesStoreIdentifier
displayName
externalVersionIdentifier
startWithLookupBlock:
newDefaultInstance
database
predicateWithProperty:equalToValue:
queryWithDatabase:predicate:
enumeratePersistentIDsAndProperties:count:usingBlock:
readUsingTransactionBlock:
_searchPurchaseHistoryForITunesStoreID:appIdentifier:completionBlock:
updateJaliscoAppsLibraryWithReason:completionHandler:
_installOrPromptForManagementOfStoreAppWithMetadata:purchaseMethod:managementFlags:managementChange:attributes:configuration:title:message:installVPPAppMessage:loginButtonText:cancelButtonText:storeAppInstallationMessage:storeAppUpdateMessage:installationFailureMessage:updateFailureMessage:dismissButtonText:installButtonText:assertion:completionBlock:
_SSVInstallVPPAppIfLicensedWithMetadata:managementFlags:managementChange:attributes:configuration:title:message:installVPPAppMessage:loginButtonText:cancelButtonText:storeAppInstallationMessage:storeAppUpdateMessage:installationFailureMessage:updateFailureMessage:dismissButtonText:installButtonText:assertion:completionBlock:
_installiTunesStoreIDIfLicensedToUserWithMetadata:managementFlags:managementChange:attributes:configuration:title:message:installVPPAppMessage:loginButtonText:cancelButtonText:storeAppInstallationMessage:storeAppUpdateMessage:installationFailureMessage:updateFailureMessage:dismissButtonText:installButtonText:assertion:completionBlock:
manifestQueueShouldQueueAppBundleID:forDownloadManagementFlags:resumeDownloadIfNeeded:outRejectionReason:outIsUpdate:outError:
_displayManagementPromptForAppTitle:bundleID:isAppStore:assertion:completionBlock:
_SSVInstallVPPAppWithRetrievedMetadata:managementFlags:attributes:configuration:message:installButtonText:cancelButtonText:assertion:completionBlock:
_licenseNotFoundErrorWithBundleID:
stringValue
_licenseNotFoundErrorWithiTunesStoreID:
_installAppLicensedToUserWithStoreMetadata:managementFlags:attributes:configuration:storeAppInstallationMessage:storeAppUpdateMessage:installationFailureMessage:updateFailureMessage:dismissButtonText:installButtonText:cancelButtonText:assertion:completionBlock:
domain
_appAlreadyQueuedErrorWithiTunesStoreID:
resumeDownloadForBundleID:iTunesStoreID:
_SSVRetrieveStoreLicenseMetadataWithStoreMetadata:managementChange:assertion:completionBlock:
initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:skipDownloads:
startWithMetadataResponseBlock:
initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:
_legacyRetrieveStoreAppMetadataWithiTunesStoreID:appIdentifier:title:message:loginButtonText:cancelButtonText:assertion:completionBlock:
_lookupItemIfNeededPurchaseHistoryPurchase:mustRedownload:iTunesStoreID:appIdentifier:completionBlock:
searchPurchaseHistoryForITunesStoreID:appIdentifier:completionBlock:
setIgnoresForcedPasswordRestriction:
_completePurchaseWithBundleID:error:assertion:
_purchase:assertion:completionBlock:
_displayAppInstallationAlertWithTitle:message:dismissButtonText:assertion:completionBlock:
_promptUserForStoreAppInstallationPurchase:bundleID:requireAuthenticatedAccount:title:message:installButtonText:cancelButtonText:assertion:completionBlock:
_promptUserForStoreAppUpdatePurchase:title:message:installButtonText:cancelButtonText:bundleID:assertion:completionBlock:
sendSynchronousRequest:returningResponse:error:
_invalidManifestErrorWithURL:underlyingError:
manifestQueueAdvanceTransientStatesForBundleID:
_installEnterpriseAppManifestURL:assertion:completionBlock:
_promptUserForEnterpriseAppUpdateManifestURL:title:message:installButtonText:cancelButtonText:bundleID:assertion:completionBlock:
_promptUserForEnterpriseAppInstallationManifestURL:title:message:installButtonText:cancelButtonText:bundleID:assertion:completionBlock:
updateApplicationInstallationStates
advanceTransientStates
removeAllManagedDefaultsFromDomain:
uninstallApplication:outError:
uninstallAppWithBundleID:error:
initWithRedeemCodes:
setAuthenticationContext:
startWithRedeemResponseBlock:
bundleIDsWithFlags:
initWithDownloadKinds:
downloads
valueForProperty:
cancelDownloads:completionBlock:
_advanceTransientStateForBundleID:params:outNewParams:outSetChanged:
allKeys
approvedAppAttributesFromAttributes:
hasMetadataForBundleID:
managedAppMetadataByBundleID
setMetadata:forBundleID:
metadataForBundleID:
appStateForBundleID:
setAppState:forBundleID:
removeBundleID:
cleanUp
installiTunesStoreID:appIdentifier:purchaseMethod:managementFlags:managementChange:attributes:configuration:title:message:installVPPAppMessage:loginButtonText:cancelButtonText:storeAppUpdateMessage:storeAppInstallationMessage:installationFailureMessage:updateFailureMessage:dismissButtonText:installButtonText:assertion:completionBlock:
installManifestURL:managementFlags:managementChange:attributes:configuration:enterpriseAppInstallationMessage:enterpriseAppUpdateMessage:installationFailureMessage:updateFailureMessage:dismissButtonText:installButtonText:cancelButtonText:assertion:completionBlock:
uninstallManagedAppsAccordingToFlagsWithAssertion:completion:
applyRedemptionCode:forBundleID:message:installationFailureMessage:dismissButtonText:installButtonText:cancelButtonText:assertion:outError:
doNotBackupAppIDs
advanceTransientStatesForBundleID:
setManifestPath:
setManifest:
setManifestQueue:
setInstallQueue:
_manifestPath
_manifest
_manifestQueue
_installQueue
addDefaults:toManagedDomain:
removeDefaults:fromManagedDomain:
sendManagedDefaultsChangedNotificationForDomains:
applicationProxyIsMISAuthorizedForBundleID:
initWithCommonName:data:isIdentity:
installProvisioningProfileData:managingProfileIdentifier:outError:
removeItemAtPath:error:
v16@?0@"NSError"8
EthernetMacAddress
WifiAddressData
WifiAddress
@"NSString"8@?0
com.apple.dmd.operation.log-out-user
com.apple.dmd.operation.trigger-diagnostics
com.apple.dmd.operation.install-provisioning-profile
request.profileData
com.apple.dmd.operation.schedule-os-update-scan
com.apple.dmd.operation.remove-provisioning-profile
request.profileIdentifier
request.managingProfileIdentifier
com.apple.dmd.operation.fetch-provisioning-profiles
com.apple.dmd.operation.schedule-os-update
com.apple.dmd.operation.request-airplay-mirroring
com.apple.dmd.operation.enable-lost-mode
com.apple.dmd.operation.install-managed-book
com.apple.dmd.operation.stop-managing-apps
com.apple.dmd.operation.restart-device
com.apple.dmd.operation.set-app-attributes
com.apple.dmd.operation.fetch-device-properties
request.propertyKeys
com.apple.dmd.operation.play-lost-mode-sound
com.apple.dmd.operation.set-maximum-resident-users
com.apple.dmd.operation.open-url
request.url
com.apple.dmd.operation.fetch-unlock-token
request.secret
com.apple.dmd.operation.fetch-profiles
com.apple.dmd.operation.remove-managed-application
request.bundleIdentifier
com.apple.dmd.operation.install-managed-application
com.apple.dmd.operation.set-data-roaming-enabled
request
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
whitelistedClassesForRequest
T@"NSSet",R,N
requiredEntitlements
T@"NSArray",R,N
transaction
T@"NSObject<OS_os_transaction>",&,N,V_transaction
com.apple.dmd.operation.set-passcode-lock-grace-period
com.apple.dmd.operation.disable-lost-mode
com.apple.dmd.operation.invite-to-volume-purchase-program
request.invitationURL
request.programID
com.apple.dmd.operation.fetch-location
request.serverName
com.apple.dmd.operation.clear-device-passcode
request.unlockTokenData
com.apple.dmd.operation.erase-device
com.apple.dmd.operation.set-diagnostic-submission-enabled
com.apple.dmd.operation.set-personal-hotspot-enabled
com.apple.dmd.operation.fetch-restrictions
com.apple.dmd.operation.fetch-available-os-updates
com.apple.dmd.operation.stop-airplay-mirroring
com.apple.dmd.operation.fetch-managed-books
com.apple.dmd.operation.delete-user
request.message
com.apple.dmd.operation.fetch-applications
com.apple.dmd.operation.set-user-language
request.language
com.apple.dmd.operation.stop-managing-books
com.apple.dmd.operation.fetch-os-update-status
com.apple.dmd.operation.set-app-configuration
com.apple.dmd.operation.apply-redemption-code
request.code
com.apple.dmd-access
%@.%p.main
kCATErrorRequestNameKey
v8@?0
xpcListener
T@"NSXPCListener",&,N,V_xpcListener
taskServer
T@"CATTaskServer",&,N,V_taskServer
operationQueue
T@"CATOperationQueue",&,N,V_operationQueue
hasAlreadyShutdown
TB,N,V_hasAlreadyShutdown
delegate
T@"<DMDServerDelegate>",W,N,V_delegate
com.apple.dmd.operation.fetch-activation-lock-bypass-code
com.apple.dmd.operation.set-user-locale
request.locale
com.apple.dmd.operation.validate-applications
com.apple.dmd.operation.remove-managed-book
com.apple.dmd.operation.set-voice-roaming-enabled
com.apple.dmd.operation.open-app
com.apple.dmd.operation.fetch-security-information
com.apple.dmd.operation.remove-profile
com.apple.dmd.operation.lock-device
com.apple.dmd.operation.clear-activation-lock-bypass-code
com.apple.dmd.operation.set-device-name
request.name
com.apple.dmd.operation.set-wallpaper
request.imageURL
com.apple.dmd.operation.shut-down-device
com.apple.dmd.operation.fetch-users
com.apple.dmd.operation.fetch-certificates
com.apple.dmd.operation.clear-restrictions-password
com.apple.dmd.operation.install-profile
request.profileURL
com.apple.dmd.operation.set-app-analytics-enabled
-[DMDSSRequestDelegate initWithRequest:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DeviceManagement_Sim/DeviceManagement-2.34/DMDLibrary - iOS Platforms/DMDSSRequestDelegate.m
-[DMDSSRequestDelegate startWithCompletionBlock:]_block_invoke
!self.completionBlock
-[DMDSSRequestDelegate cancel]_block_invoke
self.completionBlock
T@"SSRequest",C,N,V_request
completionBlock
T@?,C,N,V_completionBlock
timeoutTimer
T@"NSTimer",C,N,V_timeoutTimer
v20@?0@"NSString"8i16
frontmostApplicationBundleID
T@"NSString",R,C,N
version
externalId
externalVersionIdentifier
T@"SSPurchaseRequest",R,C,D,N
dmd restart device
DMDPowerAssertion Queue
unknown
Trying to park a power assertion that's already parked.
Trying to unpark a power assertion that's not parked.
isParked
TB,N,V_isParked
operation
T@"NSString",&,N,V_operation
en_US_POSIX
sr_BA
sr-Latn_BA
sr-Cyrl_BA
knownLanguages
knownLocales
AppleLanguages
AppleLanguagePreferencesChangedNotification
AppleKeyboardsPreferencesChangedNotification
com.apple.language.changed
AppleICUForce24HourTime
AppleICUForce12HourTime
AppleLocale
AppleDatePreferencesChangedNotification
AppleTimePreferencesChangedNotification
AppleNumberPreferencesChangedNotification
response
T@"SSDownloadManifestResponse",&,N,V_response
T@"SSDownloadManifestRequest",R,C,D,N
shouldHideUserPrompts
TB,N
T@"SSPersonalizeOffersResponse",&,N,V_response
T@"SSPersonalizeOffersRequest",R,C,D,N
v24@?0@"NSError"8@"SSAccount"16
authenticatedAccount
T@"SSAccount",&,N,V_authenticatedAccount
T@"SSAuthenticateRequest",R,C,D,N
metadataByBundleID
state
flags
Attributes
iTunesStoreID
SSItem
RedemptionCode
UnusedRedemptionCode
bundleID
softwareVersionExternalIdentifier
bundleDisplayName
Bundle ID: %@
iTunes ID: %@
Localized App Title: %@
T@"NSString",C,N,V_bundleID
T@"NSNumber",C,N,V_iTunesStoreID
externalVersionIdentifer
T@"NSNumber",C,N,V_externalVersionIdentifer
localizedAppTitle
T@"NSString",C,N,V_localizedAppTitle
hasRetrievedMetadata
TB,N,V_hasRetrievedMetadata
changeType
Tq,N,V_changeType
success
TB,N,V_success
error
T@"NSError",C,N,V_error
isLicensed
TB,N,V_isLicensed
isRedownload
TB,N,V_isRedownload
isRedemptionNeeded
TB,N,V_isRedemptionNeeded
purchase
T@"SSPurchase",R,C,N,V_purchase
hasSufficientInfoForManagementChange
TB,R,N
identifier
T@"NSString",&,N,V_identifier
title
T@"NSString",&,N,V_title
message
T@"NSString",&,N,V_message
defaultButtonText
T@"NSString",&,N,V_defaultButtonText
alternateButtonText
T@"NSString",&,N,V_alternateButtonText
otherButtonText
T@"NSString",&,N,V_otherButtonText
displayOnLockScreen
TB,N,V_displayOnLockScreen
displayInAppWhitelistModes
TB,N,V_displayInAppWhitelistModes
dismissAfterTimeInterval
Td,N,V_dismissAfterTimeInterval
notification
T@,&,N,V_notification
v16@?0@"NSNotification"8
B16@?0@"DMDUserNotificationQueueEntry"8
B24@?0@"DMDUserNotificationQueueEntry"8@"NSDictionary"16
v16@?0Q8
sharedManager
T@"DMDUserNotificationManager",R,N
DMDUserNotificationManager Queue
Unknown
Primary button selected
Secondary button selected
Tertiary button selected
Dismissed programatically
isPlaceholder == NO
isPlaceholder == YES
applicationType == %@
DeviceClass
iPhone Simulator
UniqueDeviceID
SerialNumber
ProductType
UserAssignedDeviceName
iPhoneSimulator
iPhone
iPod
iPad
AppleTV
iFPGA
Watch
DMD Lockdown Operation Queue
deviceClass
deviceUniqueIdentifier
deviceSerialNumber
deviceProductName
deviceName
deviceType
TQ,R,N
deviceHasInternetTetheringCapability
deviceCapacity
T@"NSNumber",R,C,N
deviceAvailableCapacity
deviceLastCloudBackupDate
T@"NSDate",R,C,N
DMDJobQueue %d
jobQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_jobQueue
jobGroup
T@"NSObject<OS_dispatch_group>",&,N,V_jobGroup
queueIDString
T@"NSString",&,N,V_queueIDString
nextJobSequenceNumber
TI,V_nextJobSequenceNumber
executionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_executionQueue
v40@?0@"NSError"8@"NSString"16Q24@"NSString"32
DMDInstallManagedApplicationOperation: run
Install Managed App
Install managed app message goes here
Install VPP app
Login
Store app update
Store app installation
Enterprise app update
Enterprise app installation
Installation failed
Update failed
Dismiss
Install
systemgroup.com.apple.configurationprofiles
MDMAppManagement.plist
Purchases.plist
/Media/Books/Purchases
ManagedBooks.plist
Library
Managed.plist
Migration.plist
LostModeRequest.plist
ConfigurationProfiles
systemgroup.com.apple.media.books.managed
configurationProfilesSystemGroupContainer
appManagementFilePath
purchasedBooksManifest
purchasedBooksDirectory
managedStoreBooksManifestPath
managedNonStoreBooksDirectory
managedNonStoreBooksManifestPath
migrationMetadataPath
systemLostModeRequestPath
sha1Hash
T@"NSData",R,C,N
@"NSDate"8@?0
@"NSArray"8@?0
@"NSNumber"8@?0
ProductVersion
BuildVersion
HWModelStr
SecondaryBluetoothMacAddress
platformSpecificValueBlocksByName
T@"NSDictionary",R,D,N
items
T@"NSArray",&,N,V_items
T@"SSItemLookupRequest",R,C,D,N
AppAlreadyInstalled
AppAlreadyQueued
CouldNotVerifyAppID
NotAnApp
SystemApp
UserRejected
LicenseNotFound
com.apple.configuration.managed
com.apple.feedback.managed
com.apple.DMDManagedAppManager.manifestQueue
com.apple.DMDManagedAppManager.installQueue
DMDManagedAppManager: set metadata for bundle ID: %@
v24@?0@"LSBundleProxy"8^B16
App Management Change
Close
Manage
Cancel
v24@?0@"NSArray"8@"NSError"16
v24@?0@"NSError"8@"SSDownloadManifestResponse"16
v24@?0@"SSLookupResponse"8@"NSError"16
v40@?0q8r^@16Q24^B32
B16@?0@"SSAppPurchaseHistoryTransaction"8
v12@?0B8
v24@?0@"NSError"8@"SSPurchase"16
v36@?0B8@"NSDictionary"12q20@"NSError"28
v32@?0@"NSError"8@"SSPurchase"16B24B28
update
install
v24@?0@"NSError"8@"DMDStoreAppMetadata"16
v24@?0Q8@"SSAccount"16
metadata
kind
software
bundle-identifier
AppRemovalErrors
v24@?0@"SSRedeemCodesResponse"8@"NSError"16
Queued
NeedsRedemption
Redeeming
Prompting
PromptingForLogin
ValidatingPurchase
Installing
Managed
ManagedButUninstalled
UserInstalledApp
Failed
PromptingForUpdate
PromptingForUpdateLogin
ValidatingUpdate
Updating
UpdateRejected
PromptingForManagement
ManagementRejected
T@"DMDManagedAppManager",R,N
manifestPath
T@"NSString",C,N,V_manifestPath
manifest
T@"NSMutableDictionary",&,N,V_manifest
manifestQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_manifestQueue
installQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_installQueue
T@"DMDJobQueue",&,N,V_jobQueue
managedAppMetadataByBundleID
T@"NSDictionary",R,C,N
dmd shut down device
DMDStopManagingAppsOperation: run
tvOS
DMDLogOutUserOperation
DMDTriggerDiagnosticsOperation
DMDInstallProvisioningProfileOperation
DMDScheduleOSUpdateScanOperation
DMDRemoveProvisioningProfileOperation
DMDFetchProvisioningProfilesOperation
DMDScheduleOSUpdateOperation
DMDRequestAirPlayMirroringOperation
DMDEnableLostModeOperation
DMDInstallManagedBookOperation
DMDStopManagingAppsOperation
DMDRestartDeviceOperation
DMDSetAppAttributesOperation
DMDFetchDevicePropertiesOperation
DMDPlayLostModeSoundOperation
DMDSetMaximumResidentUsersOperation
DMDMappedMemory
DMDOpenURLOperation
DMDFetchDeviceUnlockTokenOperation
DMDFetchProfilesOperation
DMDRemoveManagedApplicationOperation
DMDInstallManagedApplicationOperation
DMDSetDataRoamingEnabledOperation
DMDTaskOperation
DMDTaskOperationProtocol
NSObject
DMDSetPasscodeLockGracePeriodOperation
DMDDisableLostModeOperation
DMDInviteToVolumePurchaseProgramOperation
DMDFetchLocationOperation
DMDClearDevicePasscodeOperation
DMDEraseDeviceOperation
DMDSetDiagnosticSubmissionEnabledOperation
DMDSetPersonalHotspotEnabledOperation
DMDFetchRestrictionsOperation
DMDFetchAvailableOSUpdatesOperation
DMDStopAirPlayMirroringOperation
DMDFetchManagedBooksOperation
DMDDeleteUserOperation
DMDFetchApplicationsOperation
DMDSetUserLanguageOperation
DMDStopManagingBooksOperation
DMDFetchOSUpdateStatusOperation
DMDSetAppConfigurationOperation
DMDApplyRedemptionCodeOperation
DMDServer
NSXPCListenerDelegate
CATTaskServerDelegate
DMDFetchActivationLockBypassCodeOperation
DMDSetUserLocaleOperation
DMDValidateApplicationsOperation
DMDRemoveManagedBookOperation
DMDSetVoiceRoamingEnabledOperation
DMDOpenAppOperation
DMDFetchSecurityInformationOperation
DMDRemoveProfileOperation
DMDLockDeviceOperation
DMDClearActivationLockBypassCodeOperation
DMDSetDeviceNameOperation
DMDSetWallpaperOperation
DMDShutDownDeviceOperation
DMDFetchUsersOperation
DMDFetchCertificatesOperation
DMDClearRestrictionsPasswordOperation
DMDInstallProfileOperation
DMDSetAppAnalyticsEnabledOperation
DMDSSRequestDelegate
SSRequestDelegate
iOSPlatforms
DMDSpringBoardUtilities
DMDExternalVersionID
MCProfile
DMDSSPurchaseRequestDelegate
SSPurchaseRequestDelegate
MISProfileRef
DMDUserSwitchStakeholder
DMDPowerAssertion
DMDSafeSerialization
DMDLanguageUtilities
DMDiOSPlatformsServer
DMDServerDelegate
DMDSSDownloadManifestRequestDelegate
SSDownloadManifestRequestDelegate
DMDSSPersonalizeOffersRequestDelegate
SSPersonalizeOffersDelegate
DMDSSAuthenticationRequestDelegate
SSAuthenticateRequestDelegate
LSApplicationProxy
DMDStoreAppMetadata
DMDUserNotificationQueueEntry
DMDUserNotificationManager
DMDLockdownUtilities
DMDMDMUtilities
DMDJobQueue
DMDPaths
DMDManagedAssetManager
DMDUtilities
DMDSSItemLookupRequestDelegate
SSItemLookupRequestDelegate
DMDManagedAppManager
DMDMISValidation
SecCertificateRef
v24@0:8@16
@16@0:8
B32@0:8@16^@24
@24@0:8^@16
@32@0:8@16^@24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSSet"16@0:8
@"NSArray"16@0:8
@24@0:8@16
v16@0:8
v24@0:8Q16
@"NSObject<OS_os_transaction>"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@48@0:8@16@24@32^@40
v40@0:8@16@24@32
B40@0:8@16@24@32
v48@0:8@16@24@32@40
v32@0:8@16@24
@"CATTaskOperation"48@0:8@"CATTaskServer"16@"CATTaskSession"24@"CATTaskRequest"32^@40
v40@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSError"32
B40@0:8@"CATTaskServer"16@"CATTaskSession"24@"CATTransport"32
v48@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSString"32@"NSDictionary"40
v40@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSOperation"32
v32@0:8@"CATTaskServer"16@"CATTaskSession"24
v24@0:8@"CATTaskServer"16
v20@0:8B16
@"<DMDServerDelegate>"
@"NSXPCListener"
@"CATTaskServer"
@"CATOperationQueue"
d16@0:8
v32@0:8@"SSRequest"16@"NSError"24
v24@0:8@"SSRequest"16
v24@0:8@?16
@?16@0:8
@"SSRequest"
@"NSTimer"
@20@0:8i16
@44@0:8@16B24@28@36
v40@0:8@16@24Q32
v40@0:8@"SSPurchaseRequest"16@"SSPurchase"24@"NSError"32
v32@0:8@"SSPurchaseRequest"16@"SSPurchase"24
@48@0:8@16Q24^Q32o^@40
@48@0:8{?=[8I]}16
v32@0:8@"SSDownloadManifestRequest"16@"SSDownloadManifestResponse"24
@"SSDownloadManifestResponse"
v32@0:8@"SSPersonalizeOffersRequest"16@"SSPersonalizeOffersResponse"24
@"SSPersonalizeOffersResponse"
v32@0:8@"SSAuthenticateRequest"16@"SSAuthenticateResponse"24
@"SSAccount"
@84@0:8@16@24@32@40@48@56Q64Q72B80
@32@0:8@16@24
@52@0:8@16@24q32B40@44
@32@0:8@16B24B28
v32@0:8@16B24B28
v44@0:8@16q24B32@36
q16@0:8
v24@0:8q16
@"NSNumber"
@"NSError"
@"SSPurchase"
v24@0:8d16
@"NSString"
v32@0:8@?16@?24
v88@0:8@16@24@32@40@48B56B60d64@72@?80
v96@0:8@16@24@32@40@48@56B64B68d72@80@?88
v64@0:8@16@24@32@40@48@?56
@52@0:8Q16Q24@32B40B44B48
@32@0:8Q16Q24
@28@0:8@16B24
B28@0:8B16@20
I16@0:8
v20@0:8I16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_group>"
v48@0:8@16B24B28@32@?40
v72@0:8@16@24@32@40@48@56@?64
v32@0:8@"SSItemLookupRequest"16@"NSArray"24
@"NSArray"
@24@0:8Q16
Q24@0:8@16
v32@0:8Q16@24
B32@0:8@16Q24
B32@0:8@16^B24
v80@0:8@16@24@32@40@48B56B60@64@?72
v52@0:8@16@24B32@36@?44
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v84@0:8@16@24B32@36@44@52@60@68@?76
v88@0:8@16@24@32@40@48@56@64@72@?80
v80@0:8@16@24@32@40@48@56@64@?72
B60@0:8@16Q24B32^@36^B44^@52
v52@0:8@16B24@28@36@?44
v44@0:8@16@24B32@?36
v176@0:8@16@24Q32Q40Q48@56@64@72@80@88@96@104@112@120@128@136@144@152@160@?168
v168@0:8@16Q24Q32Q40@48@56@64@72@80@88@96@104@112@120@128@136@144@152@?160
v160@0:8@16Q24Q32@40@48@56@64@72@80@88@96@104@112@120@128@136@144@?152
v48@0:8@16Q24@32@?40
v88@0:8@16Q24@32@40@48@56@64@72@?80
v120@0:8@16Q24@32@40@48@56@64@72@80@88@96@104@?112
v128@0:8@16Q24Q32@40@48@56@64@72@80@88@96@104@112@?120
v32@0:8@16@?24
B88@0:8@16@24@32@40@48@56@64@72^@80
B48@0:8@16@24^@32^B40
@"NSMutableDictionary"
@"DMDJobQueue"
@28@0:8^{__SecCertificate=}16B24
@(#)PROGRAM:dmd  PROJECT:DeviceManagement-1
Could not get file information
Memory mapping failed
Operation will start: %{public}@
Operation will finish: %{public}@
Operation did finish: %{public}@
Starting...
Shut down.
Shutting down...
Received request: %{public}@, from client: %{public}@
Could not get operation class for request: %{public}@
Connected %{public}@
Disconnected %{public}@
Invalidated %{public}@
Interrupted %{public}@: %{public}@
Notification %{public}@: %{public}@ %{public}@
Add operation: %{public}@
Notified of locale change. Exiting when clean.
Beginning power assertion, operation: %{public}@
Ending power assertion, operation: %{public}@
Could not create property list from data: %{public}@, exception: %{public}@
Looked up bundle ID %{public}@ from audit token using entitlement.
Looked up bundle ID %{public}@ from audit token using Info.plist.
Could not determine bundle ID for %{public}@ from audit token.
Could not look up bundle ID using audit token.
%{public}@ Starting manifest download request.
%{public}@ Received response: %{public}@
%{public}@ Starting personalization request.
%{public}@ received response: %{public}@
Not prompting for iTunes account in limited apps mode.
%{public}@ starting user authentication.
User successfully logged into iTunes account.
User failed to log into iTunes account. Reason code: %ld
Dismissing notification because we entered limited apps mode.
Canceling %d pending notifications because we entered limited apps mode.
Not displaying notification in limited apps mode.
An iTunes login prompt is already shown. Not showing another prompt.
Calling completions for %lu iTunes login events.
An invitation prompt is already shown. Not showing another one.
Calling completions for %lu invitation prompts
Displaying alert: %{public}@ - %{public}@ [%{public}@] [%{public}@] [%{public}@]
Scheduling automatic alert dismissal after %0.0f seconds.
Automatically dismissing alert.
Cannot display alert: can't create run loop source.
Cannot create alert. Error: %d
Alert dismissed with response: %{public}@
Rejecting feedback from app 
%{public}@
 because the feedback is not a dictionary.
Unknown device type %{private}@
Error excluding %{public}@ from backup. Path does not exist.
Error excluding %{public}@ from backup %{public}@
DMDJobQueue: Destroying %{public}@
DMDJobQueue: %{public}@, enqueueing job block %{public}@, stack:
%{public}@
DMDJobQueue: %{public}@, dispatching to execution queue, job block %{public}@
DMDJobQueue: %{public}@, executing job block %{public}@ on main queue
DMDJobQueue: %{public}@, job finished, stack:
%{public}@
Failed to get profiles system group container
Failed to get managed books system group container
System group container for %{public}@ path is %{public}s
Error getting system group container for %{public}@: %llu
%{public}@ Starting item lookup.
%{public}@ Found %lu items.
Cannot read manifest. Error: %{public}@
Received an unexpected bundle proxy type when checking if %{public}@ is installed.
The app 
%{public}@
 is installed
Looking for managed app states to clean up
App 
%{public}@
 state changed from %{public}@ to %{public}@.
Prompting user for installation of the app 
%{public}@
. Is app store app: %{public}@. Is update: %{public}@
User accepted installation of 
%{public}@
User rejected installation of 
%{public}@
Installation prompt for 
%{public}@
 dismissed programmatically.
Installation prompt for 
%{public}@
 yielded an unrecognized response: %lu. Assuming dismissed programmatically.
Not asking user for permission to install app 
%{public}@
Prompting user for management of app 
%{public}@
. Is supervised: %{public}@. Is frontmost: %{public}@
User accepted management of 
%{public}@
User rejected management of 
%{public}@
Management prompt for 
%{public}@
 dismissed programmatically.
Management prompt for 
%{public}@
 yielded an unrecognized response: %lu. Assuming dismissed programmatically.
Not asking user for permission to manage app 
%{public}@
Prompting user for installation of App Store app 
%{public}@
The user installed the app 
%{public}@
 while we weren't looking. Not even prompting the user.
Prompting user for iTunes account to install App Store app 
%{public}@
The user did not log in to their iTunes account. Error: %{public}@
Now installing App Store app 
%{public}@
The user installed the app 
%{public}@
 while we weren't looking.
Redownloading App Store app 
%{public}@
User rejected installation of App Store app 
%{public}@
Prompting user for update of App Store app 
%{public}@
Prompting user to log in to iTunes account %{public}@
User 
%{public}@
 failed to log in. Aborting installation of 
%{public}@
Checking if user account %{public}@ has purchased item 
%{public}@
Could not look up purchase history for App Store app 
%{public}@
, error: %{public}@
Lookup completed. Result: %{public}@
User has not purchased the App Store app 
%{public}@
, and cannot update it.
User rejected update of App Store app 
%{public}@
The user deleted the App Store app 
%{public}@
Cannot retrieve the account used to install the App Store app 
%{public}@
. Aborting update.
App Store app 
%{public}@
 is not managed and cannot be updated.
App Store app 
%{public}@
 is not installed and cannot be updated. Not even prompting.
Starting installation of enterprise app at URL %{public}@
Installation of enterprise app completed with error: %{public}@
Installation of enterprise app completed.
Prompting user for installation of Enterprise app 
%{public}@
The user installed the managed app 
%{public}@
 while we weren't looking.
Now installing enterprise app 
%{public}@
User rejected installation of Enterprise app 
%{public}@
Prompting user for update of Enterprise app 
%{public}@
Now updating enterprise app 
%{public}@
User rejected update of enterprise app 
%{public}@
Update of enterprise app 
%{public}@
 dismissed programmatically.
The prompt to update enterprise app 
%{public}@
 returned an unknown response.
Enterprise app 
%{public}@
 is not managed. Not updating.
Enterprise app 
%{public}@
 is not installed. Not even prompting for update.
App 
%{public}@
 is installed.
App 
%{public}@
 is not installed.
App Store is already downloading app 
%{public}@
 with current download phase %{public}@.
App 
%{public}@
 is not currently downloading. Currently downloading apps: %{public}@
App 
%{public}@
 is already queued for installation.
App Store is already downloading app 
%{public}@
The user is already installing the app 
%{public}@
The user has already installed the app 
%{public}@
The app 
%{public}@
 is not installed as a user app
Looking up app information on iTunes Store.
Info found for app 
%{public}@
Could not find app information.
Searching purchase history for app with iTunes Store ID %{public}@
Searching purchase history for app with bundle ID 
%{public}@
Found the app 
%{public}@
 in the user's purchase history.
The app is not in the user's purchase history.
Refreshing purchase history
Attempting management with installed app %{public}@ using store metadata: %{public}@
Incomplete store metadata was provided to install/prompt for store app installation: %{public}@
Prompting user for management for store app %{public}@
User consented to management of app %{public}@
Could not find iTunes Store ID for newly managed app
Could not find localized app title for newly managed app
User didn't consent to management of app %{public}@
iTunes Store reports no license found
iTunes Store reported error on license check with error: %{public}@
Legacy installing as app not installed
App 
%{public}@
 is already being installed by iTunes Store.
App with iTunes Store ID %{public}@ is already being installed by iTunes Store.
No iTunes Store ID given for app %{public}@. Retrieving information from iTunes
iTunes Store lookup error occurred on app %{public}@.  Error: %{public}@
Could not find metadata in iTunes Store for app %{public}@
Failed to find iTunes Store ID for app %{public}@
Retrieving metadata from iTunes Store for iTunes Store ID %{public}@
Final VPP app installation attempted without checking license & retrieving metadata
Attempted to try installation though metadata indicates no VPP license is available
Could not validate store app ID
Could not validate store app bundle ID
Could not validate store app localized title
Prompting user for store app installation of %{public}@.  Is update: %d
User consented to %{public}@ of app %{public}@
Attempting to perform SSV install request for Adam ID %{public}@
Failed to validate & install iTunes ID %{public}@ through SSVInstall (Change Type: %ld). Error: %{public}@
Successfully started install iTunes ID %{public}@ through SSV (Change Type: %ld)
User didn't consent to %{public}@ of app %{public}@
Failed to retrieve iTunes Store metadata via legacy calls with error: %{public}@
Could not retrieve metadata for the app. Error: %{public}@
Could not retrieve item from purchase history.
Purchase of App Store app 
%{public}@
 failed. Ignored. Error: %{public}@
Legacy app install called for user-licensed app with incomplete metadata: %{public}@
Final legacy app installation attempted without checking license & retrieving metadata
Purchase of free App Store app 
%{public}@
 starting.
User rejected download of App Store app 
%{public}@
App Store 
%{public}@
 installation failed. Telling user.
App store 
%{public}@
 installation failed. Not telling user.
Update of App Store app 
%{public}@
 failed. Error: %{public}@
Update of App Store app 
%{public}@
 succeeded.
Update of App Store app 
%{public}@
 failed. Telling user.
Update of App Store app 
%{public}@
 failed. Not telling user.
Prompting user for management of enterprise app %{public}@
User consented to management of enterprise app %{public}@
User didn't consent to management of enterprise app %{public}@
User installed the enterprise app 
%{public}@
 unmanaged while we were prompting
Update of enterprise app 
%{public}@
 failed. Error: %{public}@
Updating enterprise app 
%{public}@
Update of enterprise app 
%{public}@
 failed. Telling user.
Update of enterprise app 
%{public}@
 failed. Not telling user.
Installation of enterprise app 
%{public}@
 failed. Error: %{public}@
Installing enterprise app 
%{public}@
User rejected installation of enterprise app 
%{public}@
Installation of enterprise app 
%{public}@
 failed. Teling user.
Installation of enterprise app 
%{public}@
 failed. Not telling user.
Enterprise app installation failed. Error: %{public}@
Removing app 
%{public}@
 from management
Removing app 
%{public}@
 due to management flags
The user installed the app 
%{public}@
 while we weren't looking
User did not successfully sign in to iTunes account. Error: %{public}@
Redeeming code for 
%{public}@
Could not redeem code. Error: %{public}@
Successfully redeemed code.
Code redemption rejected.
Failed to apply redemption code for App Store app 
%{public}@
. Error: %{public}@
Canceling download of app %{public}@
Resuming download for app %{public}@
Resuming download for app with iTunes Store ID %{public}@
Received an unexpected bundle proxy while enumerating managed apps.
Rejecting app attribute 
%{public}@
 because it has the wrong value type.
Rejecting unknown app attribute 
%{public}@
Could not remove app management metadata, error: %{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>16B2657</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>dmd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.dmd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundlePackageType</key>
<string>com.apple.product-type.tool</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>AppleTVSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string></string>
<key>DTPlatformName</key>
<string>appletvsimulator</string>
<key>DTPlatformVersion</key>
<string>11.0</string>
<key>DTSDKBuild</key>
<string>15J5283k</string>
<key>DTSDKName</key>
<string>appletvsimulator11.0</string>
<key>DTXcode</key>
<string>0900</string>
<key>DTXcodeBuild</key>
<string>9M121p</string>
<key>MinimumOSVersion</key>
<string>11.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>3</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>Apple Certification Authority.com.apple.dmd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.MobileInternetSharing.allow</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.AutoWake.xml</string>
<string>preferences.plist</string>
</array>
<key>com.apple.aosnotification.aosnotifyd-access</key>
<true/>
<key>com.apple.appletv.pbs.allow-active-application</key>
<true/>
<key>com.apple.appletv.pbs.osupdate-service-access</key>
<true/>
<key>com.apple.appstored.install-apps</key>
<true/>
<key>com.apple.apsd.ios-device-push-token</key>
<true/>
<key>com.apple.bulletinboard.settings</key>
<true/>
<key>com.apple.frontboard.shutdown</key>
<true/>
<key>com.apple.frontboard.wipedevice</key>
<true/>
<key>com.apple.ibooks.BLService.private</key>
<true/>
<key>com.apple.icloud.FindMyDevice.FindMyDeviceHelperXPCService.access</key>
<true/>
<key>com.apple.icloud.findmydeviced.access</key>
<true/>
<key>com.apple.itunesstored.metrics</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.escrow.create</key>
<true/>
<key>com.apple.locationd.authorizeapplications</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.lsapplicationproxy.deviceidentifierforvendor</key>
<true/>
<key>com.apple.managedconfiguration.mdmd-access</key>
<true/>
<key>com.apple.managedconfiguration.mdmuserd-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled.configurationprofiles</key>
<array>
<string>Inspection</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>SilentNonUIInstallation</string>
<string>UIInstallation</string>
<string>CloudLockedRemoval</string>
</array>
<key>com.apple.managedconfiguration.profiled.get</key>
<array>
<string>MachineInfo</string>
<string>ManagedApplications</string>
<string>NetworkExtension</string>
<string>WiFiNetworks</string>
</array>
<key>com.apple.managedconfiguration.profiled.provisioningprofiles</key>
<array>
<string>Installation</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>Validation</string>
</array>
<key>com.apple.managedconfiguration.profiled.set</key>
<array>
<string>ActivationLock</string>
<string>ActivationRecord</string>
<string>Certificates</string>
<string>ClientRestrictions</string>
<string>CloudConfiguration</string>
<string>Passcode</string>
<string>Safari</string>
<string>UserSettings</string>
</array>
<key>com.apple.managedconfiguration.profiled.usercompliance</key>
<true/>
<key>com.apple.managedconfiguration.teslad-access</key>
<true/>
<key>com.apple.mkb.usersession.delete</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.mkb.usersession.loginwindow</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.bubblepop</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/ActivationPrivateKey</string>
<string>NULL/DevicePrivateKey</string>
<string>NULL/DeviceCertificate</string>
<string>NULL/DeviceName</string>
<string>com.apple.mobile.backup/LastCloudBackupDate</string>
</array>
<key>com.apple.private.lockdown.finegrained-set</key>
<array>
<string>com.apple.mobile.user_preferences/UserSetLanguage</string>
<string>com.apple.mobile.user_preferences/UserSetLocale</string>
<string>NULL/DeviceName</string>
</array>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>Uninstall</string>
<string>Lookup</string>
<string>CopyDiskUsageForLaunchServices</string>
<string>UninstallForLaunchServices</string>
<string>InstallForLaunchServices</string>
</array>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
<string>systemgroup.com.apple.media.books.managed</string>
</array>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.wipedevice</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
</array>
</dict>
</plist>
