@(#)PROGRAM:dmd  PROJECT:DeviceManagement-25.6
dmf_installSynthesizedProfileRequestWithAssetProviders:error:
dmf_removeSynthesizedProfileRequestWithError:
synthesizeProfileOutUUIDs:withOldUUIDs:assetProviders:
setProfile:
filterQueryForScope
dmfKeyFromDeviceInfoKey:
setPropertyKeys:
valuesByPropertyKey
errorsByPropertyKey
deviceInfoKeyFromDMFKey:
payloadQueries
minusSet:
addRMDSpecificResultsToDictionary:errors:
deviceInfoDeviceChannelKeys
deviceInfoUserChannelKeys
intersectSet:
deviceInfoSupervisedKeys
deviceInfoRMDKeys
payloadMessage
payloadPhoneNumber
setPhoneNumber:
fontURL
dataWithContentsOfURL:
init
class
setWithObjects:
decodeObjectOfClasses:forKey:
encodeObject:forKey:
supportsSecureCoding
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
encodeWithCoder:
initWithCoder:
urlRepresentation
dataRepresentation
stringRepresentation
numberRepresentation
.cxx_destruct
setFontURL:
_fontURL
resolver
resolveAssetWithContext:
fontDeclaration
declarationIdentifier
declarationServerHash
stringWithFormat:
payloadDescriptor
payloadReference
isExecuting
endOperationWithError:
dmd_userFontDatabaseDirectoryURL
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
assetIdentifier
UUID
URLByAppendingPathComponent:
copyItemAtURL:toURL:error:
endOperationWithResultObject:
assetResolutionDidSucceedWithAssetURL:
assetResolutionFailedWithError:
assetDescriptor
assetReference
initWithFontDeclaration:resolver:
isAsynchronous
main
setFontDeclaration:
setResolver:
_fontDeclaration
_resolver
installMetadata
path
fileExistsAtPath:
removeItemAtURL:error:
initWithFontDeclaration:installMetadata:
setInstallMetadata:
_installMetadata
alloc
dmf_installAssetOperationWithReferenceResolver:error:
dmf_removeAssetOperationWithInstallMetadata:error:
imageURL
setImageURL:
_imageURL
imageDeclaration
dmd_userImageDatabaseDirectoryURL
initWithImageDeclaration:resolver:
setImageDeclaration:
_imageDeclaration
initWithImageDeclaration:installMetadata:
payloadEcho
payloadReturnStatus
payloadMode
payloadApps
payloadCategories
payloadHostnames
payloadRatingRegion
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
accountProperties
primaryAppleID
usageBudget
usageMonitor
checkStatusOfBudgets:error:
stopMonitoringBudgets:completionHandler:
payloadMonitor
_usageBudgetTypeForString:
_validBudgetedIdentifiers:forBudgetType:
payloadTimeBudget
payloadDays
payloadSeconds
initWithType:items:schedule:calendarIdentifier:identifier:
setUsageBudget:
numberWithLongLong:
longLongValue
startMonitoringBudgets:darwinNotificationName:notificationTimes:error:
setUsageMonitor:
_usageBudget
_usageMonitor
initWithDelegate:uniqueIdentifier:predicate:
_extractComponentsFromPredicate:
_registerPredicateObserver
calendarIdentifier
calendarForIdentifier:
startDay
startHour
startMinute
startSecond
_nextDateAfter:matchingWeekday:hour:minute:second:inCalendar:
endDay
endHour
endMinute
endSecond
expiredNotificationTimes
removeAllObjects
notificationTimes
countByEnumeratingWithState:objects:count:
doubleValue
dateByAddingTimeInterval:
compare:
addObject:
setLastPredicateEvaluationValue:
predicateType
uniqueIdentifier
lastPredicateEvaluationValue
numberWithBool:
scheduledAlarmIdentifiers
UTF8String
invalidate
metadata
sortedArrayUsingSelector:
count
dictionaryWithObjects:forKeys:count:
setObject:forKeyedSubscript:
payloadCalendarIdentifier
setCalendarIdentifier:
payloadNotificationTimes
setWithArray:
setNotificationTimes:
setFormatOptions:
timeZone
setTimeZone:
payloadStartTime
dateFromString:
components:fromDate:
hour
setStartHour:
minute
setStartMinute:
second
setStartSecond:
payloadEndTime
setEndHour:
setEndMinute:
setEndSecond:
payloadStartDay
integerValue
setStartDay:
payloadEndDay
setEndDay:
maximumRangeOfUnit:
_datesForNextCurfewBoundary
timeIntervalSince1970
copy
setWeekday:
setHour:
setMinute:
setSecond:
nextDateAfterDate:matchingComponents:options:
initWithDelegate:uniqueIdentifier:curfewPredicate:
evaluatePredicateWithError:
updateObserverRegistration
setExpiredNotificationTimes:
setScheduledAlarmIdentifiers:
_calendarIdentifier
_notificationTimes
_expiredNotificationTimes
_scheduledAlarmIdentifiers
_startDay
_startHour
_startMinute
_startSecond
_endDay
_endHour
_endMinute
_endSecond
aa_primaryAppleAccount
aa_personID
DSID
payloadDSID
setDSID:
_DSID
endDate
payloadDateTime
setEndDate:
timeIntervalSinceDate:
_endDate
status
outgoingPayloadMetadataReferences
serverHash
installed
sortUsingComparator:
predicatePayloadMetadata
addEntriesFromDictionary:
setStateDictionary:
fetchRequestForActivationsFromOrganizationWithIdentifier:
updateStateDictionaryIfNeeded
subPredicateObservers
boolValue
arrayWithCapacity:
reportActivationPredicateObserverDidTrigger
initWithDelegate:uniqueIdentifier:subPredicateObservers:predicate:
_subPredicateObservers
subPredicateObserver
setSubPredicateObserver:
_subPredicateObserver
calendarWithIdentifier:
_lastPredicateEvaluationValue
_predicateType
_uniqueIdentifier
_setupNotificationHandlers
_teardownNotificationHandlers
dealloc
activationPredicateObserversByIdentifier
objectForKeyedSubscript:
_predicateObserverForPredicate:withUniqueIdentifier:
_reportChangeToObserver:
stringWithUTF8String:
isEqualToString:
activationPredicateObserverForIdentifier:
_updateAllActivationPredicateObserverRegistrations
delegate
activationPredicateObserverManager:didObserveChangeForPredicateWithIdentifier:
enumerateKeysAndObjectsUsingBlock:
initWithDelegate:uniqueIdentifier:budgetPredicate:
initWithDelegate:uniqueIdentifier:oneTimePredicate:
initWithDelegate:uniqueIdentifier:iCloudAccountPredicate:
payloadPredicate
initWithDelegate:uniqueIdentifier:subPredicateObserver:predicate:
payloadPredicates
_subPredicateObserversForCompoundSubPredicates:withUniqueIdentifier:
activationPredicateObserverDidTrigger:
initWithDelegate:
addActivationPredicateObserverForPredicate:withUniqueIdentifier:
removeActivationPredicateObserverWithUniqueIdentifier:
notifydMatchingEventStreamBudgetToken
setNotifydMatchingEventStreamBudgetToken:
setActivationPredicateObserversByIdentifier:
_notifydMatchingEventStreamBudgetToken
_delegate
_activationPredicateObserversByIdentifier
name
cancel
endOperationIfNeeded
setTransaction:
runConcurrently
runOnMainThread
transaction
_transaction
_outputContextForSessionType:
setCurrentlyPickedDestinationName:
setCurrentlyPickedDestinationDeviceID:
currentlyPickedDestinationDeviceID
containsString:
_discoverDeviceWithDestinationDeviceID:scanWaitTime:error:
currentlyPickedDestinationName
_discoverDeviceWithDestinationName:scanWaitTime:sessionType:
_setOutputDevices:forSessionType:password:error:
objectAtIndexedSubscript:
_promptUserToMirrorOnDisplayNamed:withCompletion:
setValue:forKey:
methodForSelector:
dataWithBytes:length:
bytes
mDeviceIDIsMAC
_currentlyPickedDestinationName
_currentlyPickedDestinationDeviceID
initPrivate
metadataPath
dataWithContentsOfFile:
propertyListWithData:options:format:error:
mutableCopy
_cleanUpStaleManagementStatesAndStartObservingApps
manifest
initWithQueue:name:stateHandlerBlock:
_metadataByBundleIdentifier
host
_getEnterpriseAppMetadataForManifestURL:completion:
getBundleIdentifierForStoreItemIdentifier:completion:
manifestURL
getBundleIdentifierForManifestURL:completion:
getMetadataForNonEnterpriseAppRequest:completion:
_metadataForBundleIdentifier:
unsignedIntegerValue
setState:
setOptions:
setRedemptionCode:
setUnusedRedemptionCode:
_newMetadataDictionary
state
numberWithUnsignedInteger:
options
redemptionCode
unusedRedemptionCode
_setMetadata:forBundleIdentifier:error:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
_applyChangeInLifeCycle:stateMap:
didFailInstallingForLifeCycle:
didFinishUpdatingForLifeCycle:
queue
allKeys
setVPNUUIDString:forBundleIdentifier:error:
setConfiguration:forBundleIdentifier:error:
managementInformationForBundleIdentifier:
setManagementInformation:forBundleIdentifier:error:
stringForState:
managedBundleIdentifiers
setState:forBundleIdentifier:error:
predicateWithFormat:
filteredArrayUsingPredicate:
firstObject
stateForBundleIdentifier:
writeManagementInformationToDiskWithError:
dictionaryWithCapacity:
requestWithURL:
ephemeralSessionConfiguration
sessionWithConfiguration:
_getEnterpriseAppMetadataFromData:completion:
dataTaskWithRequest:completionHandler:
sharedController
willStartInstallingForLifeCycle:
didStartInstallingForLifeCycle:
didChangeInstallingProgressForLifeCycle:
didPauseInstallingForLifeCycle:
didResumeInstallingForLifeCycle:
didCancelInstallingForLifeCycle:
didFinishInstallingForLifeCycle:
willStartUpdatingForLifeCycle:
didStartUpdatingForLifeCycle:
didChangeUpdatingProgressForLifeCycle:
didPauseUpdatingForLifeCycle:
didResumeUpdatingForLifeCycle:
didCancelUpdatingForLifeCycle:
didFailUpdatingForLifeCycle:
willStartUninstallingForLifeCycle:
didFailUninstallingForLifeCycle:
didFinishUninstallingForLifeCycle:
foregroundBundleIdentifiers
getBundleIdentifierForAppRequest:completion:
getMetadataForAppRequest:completion:
VPNUUIDStringForBundleIdentifier:
configurationForBundleIdentifier:
feedbackForBundleIdentifier:
setFeedback:forBundleIdentifier:error:
handleFetchRequest:completion:
startInstallingEnterpriseAppWithManifestURL:completion:
startInstallingNonEnterpriseAppForRequest:completion:
startRedeemingAppWithCode:completion:
cancelAppInstallationWithBundleIdentifier:completion:
resumeAppInstallationWithBundleIdentifier:completion:
startUpdatingAppForRequest:metadata:completion:
cancelAppUpdateWithBundleIdentifier:completion:
resumeAppUpdateWithBundleIdentifier:completion:
startUninstallingAppWithBundleIdentifier:completion:
setVPNUUIDString:configuration:options:forBundleIdentifier:
advanceTransientStates
stateHandler
_queue
_manifest
_stateHandler
storeItemID
bundleID
_allPropertyKeys
arrayByAddingObject:
initWithJob:hasUpdateAvailable:propertyKeys:
initWithApplicationProxy:hasUpdateAvailable:propertyKeys:
enumerateApplicationsOfType:block:
getJobsUsingBlock:
getUpdatesWithCompletionBlock:
getManagedUpdatesWithCompletionBlock:
initWithURL:
setShouldHideUserPrompts:
startWithCompletionBlock:
_installUserAppForRequest:completion:
_installDeviceLicensedAppForRequest:completion:
resumeJobsWithIDs:completionBlock:
_downloadAppForRequest:type:completion:
allowFreePurchases
_updateForegroundBundleIdentifiers
initWithDisplayType:handler:
_foregroundBundleIdentifiers
setShouldFilterExternalOriginatedDownloads:
initWithOptions:
bundleIDsToAssertions
setBundleIDsToAssertions:
defaultStore
activeAccount
initWithAccount:
contextForSignIn
setPromptStyle:
setAccountNameEditable:
setCanCreateNewAccount:
initWithAuthenticationContext:
authenticatedAccount
startWithAuthenticateResponseBlock:
initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:skipDownloads:
setRequestType:
sendRequestWithCompletionBlock:
initWithBundleID:
startWithErrorHandler:
sharedConnection
rereadManagedAppAttributes
managedAppsManifest
_getMetadataForBundleIdentifier:storeItemIdentifier:completion:
applicationProxyForSystemPlaceholder:
itemID
localizedName
itemName
_managedDefaultsForBundleIdentifier:
_dataContainerPathForBundleIdentifier:
arrayWithObject:
dictionaryWithContentsOfFile:
dataContainerURL
_applyStoreDictionary:toAppMetadata:
sendAppRequestWithBundleIdentifier:storeItemIdentifier:type:skipDownloads:completion:
isMainThread
layoutMonitor
currentLayout
elements
set_foregroundBundleIdentifiers:
jobManager
updatesStore
addTerminationAssertion:forBundleIdentifier:
removeTerminationAssertionForBundleIdentifier:
userIsSignedIn
promptUserToSignInWithCompletion:
installSystemAppWithBundleIdentifier:completion:
singleAppModeBundleIndentifier
setSingleAppModeBundleIndentifier:
setLayoutMonitor:
_singleAppModeBundleIndentifier
_bundleIDsToAssertions
_layoutMonitor
__foregroundBundleIdentifiers
initWithRedeemCodes:
setAuthenticationContext:
startWithRedeemResponseBlock:
cancelJobsWithIDs:completionBlock:
_uninstallAppWithBundleIdentifier:completion:
initWithBundleIdentifier:efficacy:name:withHandler:
uninstallAppWithBundleID:requestUserConfirmation:completion:
_startUpdatingAppForRequest:metadata:completion:
_updateEndedForLifeCycle:
setLicenseType:
sharedService
openApplication:options:withResult:
_lifeCycleByBundleIdentifier
weakObjectsPointerArray
initWithTarget:
stringForInstallationState:
addStateWithName:
addTransitionToState:triggeringEvent:
stateWithName:
setInitialState:
setLogLevel:
start
stateMachine
eventWithTrigger:context:
transitionWithTriggeringEvent:
observers
addPointer:
pointerAtIndex:
removePointerAtIndex:
_removeLifeCycleForBundleIdentifier:
waitUntilAllOperationsAreFinished
cancelAndWaitUntilAllOperationsAreFinished
setObservers:
setStateMachine:
_progress
_observers
_stateMachine
applicationProxyForIdentifier:
appState
isInstalled
installType
installProgress
installState
initWithBundleIdentifier:currentState:
defaultWorkspace
addObserver:
removeObserver:
proxyProgress
currentState
willStartInstalling
willStartUpdating
_findProxyInProxies:andCallBlock:
didStartInstalling
didStartUpdating
didChangeInstallingProgress
didChangeUpdatingProgress
didPauseInstalling
didPauseUpdating
didResumeInstalling
didResumeUpdating
didCancelInstalling
didCancelUpdating
didFailInstalling
didFailUpdating
didFinishInstalling
didFinishUpdating
willStartUninstalling
didFailUninstalling
didFinishUninstalling
bundleIdentifier
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
initWithBundleIdentifier:
progress
setProxyProgress:
_proxyProgress
lifeCycleForBundleIdentifier:
lifeCycle
setBundleIdentifier:
storeItemIdentifier
setStoreItemIdentifier:
displayName
setDisplayName:
isStoreApp
setIsStoreApp:
isFree
setIsFree:
isUserLicensed
setIsUserLicensed:
needsRedownload
setNeedsRedownload:
_isStoreApp
_isFree
_isUserLicensed
_needsRedownload
_bundleIdentifier
_storeItemIdentifier
_displayName
payloadMetadataObjectID
objectWithID:
payload
payloadDictionary
declarationForPayload:error:
verboseDescription
endOperationMarkingPayloadMetadata:failedWithError:
unknownPayloadKeys
allObjects
addStatusEntriesFromDictionary:
assetResolver
taskOperationProvider
database
prepareToRunOperation:withContext:withDatabase:
installOperationDidFinish:asset:
addTarget:selector:forOperationEvents:userInfo:
enqueueOperation:
performBackgroundContextBlock:
error
resultObject
setInstalled:
endOperationWithPayloadMetadata:
setAssetResolver:
_assetResolver
removeOperationDidFinish:asset:
initWithUUID:
UUIDsToTransactions
setBlock:
block
blockOperationWithBlock:
_block
unlockTokenData
secret
dmf_executeRequestWithContext:error:
dmf_executeOperationWithContext:error:
dmf_requestExecutesWithoutReturning
operationDidFinish:userInfo:
fetchRequestForCommandsFromOrganizationWithIdentifier:matchingPredicate:
fetchRequestForCommandsFromOrganizationWithIdentifier:
commandForPayload:error:
supportedConfigurationTypes
supportedAssetTypes
supportedActivationTypes
supportedCommandTypes
supportedDeclarationTypes
supportedEventTypes
supportedPredicateTypes
supportedMessageTypes
bundleForClass:
URLForResource:withExtension:
initWithContentsOfURL:
newBackgroundContext
fetchRequest
execute:
performBlockAndWait:
setType:
setURL:
dmd_systemConfigurationDatabaseURL
descriptionForSQLiteStoreWithDatabaseURL:
setPersistentStoreDescriptions:
dmd_userConfigurationDatabaseURL
managedObjectModel
initWithName:managedObjectModel:
performBackgroundTask:
newSystemDatabase
newUserDatabase
setName:
setMaxConcurrentOperationCount:
setSuspended:
setDatabase:
initWithCapacity:
eventStatusMessageWithPayloadIdentifier:
sendEvents:organizationIdentifier:completionHandler:
setEventsHandler:
databaseInitializationOperationDidFinish
initializationOperationDidFinish:
addTarget:selector:forOperationEvents:
addDependency:
addOperation:
mainQueue
operations
organizationControllerByIdentifier
databaseInitializationOperation
setDeviceStateProvider:
delegateDidResume
enqueueDeclarationProcessingOperationIfNeeded
setQueuePriority:
delegateWillSuspend
initializationError
setRequest:
organizationDisplayName
enqueueDatabaseModificationOperation:completionHandler:
allValues
organization
valueForKey:
initWithObjects:forKeys:
setOrganizationsByIdentifier:
addOperationWithBlock:
eventSubscriptionManager
startDate
eventStatusesByPayloadIdentifierSinceStartDate:organizationIdentifier:
eventIdentifiers
containsObject:
setEventStatuses:
setClientIdentifier:
setDelegate:
setCompletionHandler:
fetchRequestMatchingConfigurationOrganizationWithIdentifier:
fetchRequestForFailedDeclarationsFromOrganizationWithIdentifier:
executeFetchRequest:error:
setFailed:
save:
initWithContext:
fetchRequestForActiveDeclarationFromOrganizationWithIdentifier:withIdentifier:serverHash:
setPayloadMetadata:
payloadMetadata
payloadEvents
setEvents:
payloadSchedule
setSchedule:
updateEventSubscriptions
performSelectorOnMainThread:withObject:waitUntilDone:
fetchRequestMatchingRegistrationFromOrganizationWithIdentifier:payloadIdentifier:
deleteObject:
setOrganization:
setPayloadIdentifier:
setEventType:
setDate:
setDetails:
defaultCenter
postNotificationName:object:
initializationOperation
setInitializationOperation:
setDatabaseInitializationOperation:
userInfo
removeObjectForKey:
domain
code
setInitializationError:
cancelAllOperations
updateOrganizationControllers
_cleanupOrphanedPolicies
_updateOrganizationControllers
addObserver:selector:name:object:
declarationModificationOperationDidFinish:completionHandler:
deviceStateProvider
setTaskOperationProvider:
activationPredicateObserverManager
setActivationPredicateObserverManager:
enqueueOperations:
addOperations:waitUntilFinished:
viewContext
initWithOrganization:delegate:
removeObject:
setRelationshipKeyPathsForPrefetching:
setEventSubscriptionRegistrations:error:
setPropertiesToFetch:
setResultType:
valueForKeyPath:
initWithObjects:
policyPersistence
componentsJoinedByString:
removeOrphanedPoliciesNotBelongingToExistingOrganizationIdentifiers:completionHandler:
removeOrphanedPoliciesNotBelongingToExistingDeclarationIdentifiersByOrganizationIdentifier:completionHandler:
fetchRequestForPayloadMetadatasPendingStatusUpdateFromOrganizationWithIdentifier:
stateDictionary
stateChangeTimestamp
objectID
setPredicate:
setLastStatusReportTimestamp:
fetchRequestMatchingEventsFromOrganizationWithIdentifier:
dictionaryRepresentation
refreshObject:mergeChanges:
configurationSourceWithIdentifier:
registerConfigurationSource:
updateWithConfigurationSource:
configurationEngineDidResume:
configurationEngineWillSuspend:
configurationSourceController:fetchStatusUpdatesWithCompletionHandler:
configurationSourceController:fetchEventsWithCompletionHandler:
engineProcessingOperation:enqueuedOperationsForOrganizationWithIdentifier:
engineProcessingOperation:assetResolverForOrganizationWithIdentifier:
registerConfigurationSourceOperation:didUpdateRegistrationForConfigurationSource:
initWithDatabase:policyPersistence:
suspend
handleCreateConfigurationOrganizationRequest:completionHandler:
handleDeactivateConfigurationOrganizationRequest:completionHandler:
handleFetchConfigurationOrganizationsRequest:completionHandler:
handleFetchStreamEvents:completionHandler:
handleConfigurationSourceRegistrationRequest:clientIdentifier:completionHandler:
handleSetDeclarationsRequest:completionHandler:
handleUpdateDeclarationsRequest:completionHandler:
handleFetchDeclarationsRequest:completionHandler:
processDeclarationsForOrganizationWithIdentifier:completionHandler:
processStatusForOrganizationWithIdentifier:completionHandler:
refreshStatusForOrganizationWithIdentifier:completionHandler:
handleUpdateCommandsRequest:completionHandler:
handleInstallSubscriptionRequest:completionHandler:
handleRemoveSubscriptionRequest:completionHandler:
setQueue:
setOrganizationControllerByIdentifier:
setEventSubscriptionManager:
_policyPersistence
_deviceStateProvider
_taskOperationProvider
_activationPredicateObserverManager
_database
_initializationError
_databaseInitializationOperation
_initializationOperation
_organizationControllerByIdentifier
_eventSubscriptionManager
installationOperationDidFinish:userInfo:
isInserted
isDeleted
didSave
fetchRequestMatchingConfigurationOrganizationsOfType:
updateWithOrganization:
type
persistentConfigurationSources
persistentConfigurationSourceControllersByIdentifier
initWithConfigurationSource:delegate:
setIdentifier:
configurationSourceControllers
configurationSource
setRegisteredConfigurationSources:
addObjectsFromArray:
ephemeralConfigurationSources
ephemeralConfigurationSourceControllersByIdentifier
unregisterConfigurationSource:
setPersistentConfigurationSourceControllersByIdentifier:
setEphemeralConfigurationSourceControllersByIdentifier:
_type
_persistentConfigurationSourceControllersByIdentifier
_ephemeralConfigurationSourceControllersByIdentifier
andPredicateWithSubpredicates:
fetchRequestForAvailableConfigurationsFromOrganizationWithIdentifier:
fetchRequestForAvailableConfigurationsFromOrganizationWithIdentifier:payloadIdentifiers:
fetchRequestForConfigurationsPendingInstallFromOrganizationWithIdentifier:
fetchRequestForConfigurationsPendingRemoveFromOrganizationWithIdentifier:
fetchRequestForConfigurationsPendingInactiveFromOrganizationWithIdentifier:
dmf_installRequestWithContext:error:
dmf_replaceRequestWithContext:error:
dmf_removeRequestWithContext:error:
dmf_statusForResult:context:
payloadContext
setAssetProvidersByPayloadIdentifier:
operationClassForRequest:error:
initWithRequest:
removalOperationDidFinish:userInfo:
setMachServiceName:
setListenerEndpoint:
reportingRequirements
setReportingRequirements:
context
configurationEngineRequestedAsset:completion:
setContext:
_context
setSource:
updateStatusChangeListener
statusForSourceDidChange:
eventsForSourceDidChange:
object
updateCoalescenceInterval
reportStatus
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
reportStatusTimeout
reportEvents
reportEventsTimeout
_source
configurationEventsDidChange:completion:
initWithConfigurationSource:
_machServiceName
_listenerEndpoint
_reportingRequirements
configurationStatusDidChange:completion:
source
listenerEndpoint
initWithListenerEndpoint:
machServiceName
initWithMachServiceName:options:
anonymousConnection
namedConnection
tryConnectingToConnection:completion:
errorWithDomain:code:userInfo:
setRemoteObjectInterface:
resume
remoteObjectProxyWithErrorHandler:
probe:
initWithController:
fetchRemoteProxy:
controller
setController:
_controller
_anonymousConnection
_namedConnection
organizationType
setServerHash:
descriptiveProperties
arrayByAddingObjectsFromArray:
metadataWithPayloadDictionary:organizationIdentifier:context:error:
fetchRequestForDeclarationsFromOrganizationWithIdentifier:matchingPredicate:
fetchRequestForPayloadMetadatasFromOrganizationWithIdentifier:matchingPredicate:
declarationsWithDictionaries:organizationIdentifier:context:error:
fetchRequestForDeclarationsFromOrganizationWithIdentifier:
fetchRequestForDeclarationsFromOrganizationWithIdentifier:withIdentifiers:
fetchRequestForActiveDeclarationsFromOrganizationWithIdentifier:
fetchRequestForActiveDeclarationsFromOrganizationWithIdentifier:withIdentifiers:
fetchRequestForDeclarationsPendingDeleteFromOrganizationWithIdentifier:
applyPayloadDictionary:
username
currentDevicePropertyKeys
propertyNameForKey:
valueForKey:error:
setErrorsForKeys:
currentDevice
sharedConfiguration
isAwaitingConfiguration
iTunesAccountHashForUniqueIdentifier:
isSupervised
deviceName
isInSingleAppMode
iTunesStoreAccountHash
iTunesStoreAccountIsActive
model
modelName
osVersion
productName
lastCloudBackupDate
initWithData:encoding:
destinationIdentifier
networkDidChange
keybagLockStateDidChange
setIsKeychainUnlocked:
setHasKeychainUnlockedSinceBoot:
isNetworkTethered
setIsNetworkTethered:
hasKeychainUnlockedSinceBoot
isKeychainUnlocked
startObservingChanges
stopObservingChanges
mKeychainFirstUnlockNotificationToken
mKeychainLockStateNotificationToken
mNetworkChangeNotificationToken
_hasKeychainUnlockedSinceBoot
_isKeychainUnlocked
_isNetworkTethered
echo
resultStatus
setEcho:
setResultStatus:
endOperationWithDMFErrorCode:
removeObserver:forKeyPath:context:
isReady
observeValueForKeyPath:ofObject:change:context:
addObserver:forKeyPath:options:context:
operationWillStart
destroyLegacyDatabaseIfNeeded
fixupDatabaseWithCompletionHandler:
loadPersistentStoresWithCompletionHandler:
dmd_legacyUserConfigurationEngineDatabaseURL
checkResourceIsReachableAndReturnError:
stringByAppendingString:
fileURLWithPath:isDirectory:
persistentStoreDescriptions
setResourceValue:forKey:error:
persistentStoreCoordinator
persistentStores
metadataForPersistentStore:
updateMetadataForManagedObjectContext:error:
destroyPersistentStoresWithError:
setMetadata:forPersistentStore:
destroyPersistentStoreAtURL:withType:options:error:
lastPathComponent
performDatabaseModificationOperationWithManagedObjectContext:
active
payloadMetadatas
preprocessDatabaseInContext:forOrganization:error:
arrayWithArray:
processCommandPayloadsInContext:forOrganization:enqueuedOperations:assetResolver:error:
processDeclarationPayloadsInContext:forOrganization:enqueuedOperations:assetResolver:error:
mutableSetValueForKey:
assetReferences
payloadIdentifier
fetchRequestForCommandsPendingExecutionFromOrganizationWithIdentifier:
initWithDatabase:payloadMetadataObjectID:payloadIdentifier:
requiresNetworkTether
setRequiresNetworkTether:
requiresUnlockedKeychain
setRequiresUnlockedKeychain:
fetchRequestForCommandsPendingRemovalFromOrganizationWithIdentifier:
fetchRequestForCommandsPendingDeleteFromOrganizationWithIdentifier:
setPredicatePayloadMetadata:
available
setOutgoingPayloadMetadataReferences:
payloadStandardConfigurations
initWithArray:
dependencies
setActive:
setAvailable:
payloadIdentifiers
completionHandler
includePayloadContents
includeInternalState
null
_completionHandler
request
clientIdentifier
length
configurationSourceName
delegateUpdatedDeclarationSourceAndEndOperation:
_request
_clientIdentifier
declarations
addCommands
commandsWithPayloadDictionaries:organizationIdentifier:context:error:
removeDeclarations
upsertDeclarations
osUpdateServiceProxy
obliterateDataPreservingPaths:withCompletion:
identifier
schedule
payloadFrequency
caseInsensitiveCompare:
shared
isAppleInternal
payloadLocalTime
payloadSpread
numberWithInt:
payloadDay
frequency
localTime
spread
numberWithInteger:
scheduledTimerWithTimeInterval:repeats:block:
setTimer:
initWithScheduleRegistration:
startWithScheduleElapsedHandler:
timer
_identifier
_frequency
_localTime
_spread
_day
_timer
eventType
timestamp
details
initWithEventType:details:
_eventType
_details
_timestamp
eventSubscriptionsByIdentifier
eventsHandler
initWithSubscriptionRegistration:streamEventsHandler:
updateWithSubscriptionRegistration:
eventStatusesSinceStartDate:
setEventSubscriptionsByIdentifier:
_eventsHandler
_eventSubscriptionsByIdentifier
automaticallyNotifiesObserversOfPayloadMetadata
events
_updateEventStreams:
eventStreamByEventType
payloadType
lowercaseString
streamEventsHandler
lastDateScheduleElapsed
setLastDateScheduleElapsed:
setEventStreamByEventType:
_schedule
_eventStreamByEventType
_streamEventsHandler
_lastDateScheduleElapsed
initWithAppsByBundleIdentifier:
fetchAppsForRequest:completion:
_fetchAppsForBundleIdentifier:type:completion:
managedAppsOnly
bundleIdentifiers
setInstallationState:
setVPNUUIDString:
setConfiguration:
setFeedback:
setManagementInformation:
managementInformation
deleteFeedback
setBundleIdentifiers:
initWithUpdate:
installedProfilesWithFilterFlags:
payloads
certificatePersistentID
copyItemWithPersistentID:useSystemKeychain:
initWithCertificateRef:isIdentity:
initWithCertificates:
setWithObject:
arrayWithObjects:count:
whitelistedClassesForRequest
requiredEntitlements
setSupportedCommands:
setSupportedAssets:
setSupportedConfigurations:
setSupportedEvents:
setSupportedActivations:
setSupportedPredicates:
setSupportedMessages:
setPayloadDescriptions:
propertyKeys
deviceWithKeys:
dictionaryWithValuesForKeys:
allKeysForObject:
removeObjectsForKeys:
errorsForKeys
initWithValuesByPropertyKey:errorsByPropertyKey:
sharedServer
initWithStateDescription:
productKeyOrDefaultFromStatus:
_downloadStatusAndPercentComplete:fromStatus:
initWithProductKey:status:downloadPercentComplete:
isInstalling
isDownloading
downloadPercentComplete
filterFlags
_profileListWithFilterFlags:
initWithProfiles:
sharedReader
sharedManager
installedProfileIdentifiersWithFilterFlags:
userProfileRestrictions
systemProfileRestrictions
defaultRestrictions
installedProfileWithIdentifier:
dependentsOfParent:inDomain:
signerCertificates
filterRestrictionDictionary:toIncludeOnlyRestrictionsThatDifferFromRestrictions:
initWithProfile:isManaged:signerCertificates:restrictions:
currentRestrictions
initWithRestrictions:
supportsBlockLevelEncryption
supportsFileLevelEncryption
isPasscodeSet
currentPasscodeIsCompliantWithGlobalRestrictionsOutError:
currentPasscodeIsCompliantWithProfileRestrictionsOutError:
effectiveValueForSetting:
userValueForSetting:
initWithSupportsBlockLevelEncryption:supportsFileLevelEncryption:passcodeIsSet:passcodeIsCompliantWithGlobalRestrictions:passcodeIsCompliantWithProfileRestrictions:passcodeLockGracePeriodEnforced:passcodeLockGracePeriod:
initWithSecurityInformation:
configurationEngine
licenseType
setMetadata:
_runWithRequest:
_resumeInstallationForRequest:
installAppForRequest:
_metadata
profile
queueGroup
_installProfile:withRequest:error:
_installRestrictionsPayload:withRequest:error:
_rollbackProfile:withRequest:completion:
installProfileData:options:outError:
removeProfileAsyncWithIdentifier:installationType:completion:
_mapMCRestrictionsFromPayload:error:
_applyHeuristicsToRestrictions:error:
applyRestrictionDictionary:clientType:clientUUID:localizedClientDescription:localizedWarningMessage:outRestrictionChanged:outEffectiveSettingsChanged:outError:
dictionary
MCMutableDeepCopy
_intersectionFeatureForPayloadRestrictionKey:
restrictionsAfterApplyingRestrictionsDictionary:toRestrictionsDictionary:outChangeDetected:outError:
sharedHacks
_applyHeuristicsToRestrictions:forProfile:outError:
_intersectionAliasToFeatures
originator
managingProfileIdentifier
style
isSetupBuddyDone
_installSilentProfileData:managingProfileIdentifier:
_installInteractiveProfile:
profileWithData:outError:
mustInstallProfileNonInteractively:
queueFileDataForAcceptance:originalFileName:outError:
profileData
installProvisioningProfileData:managingProfileIdentifier:outError:
deviceLastCloudBackupDate
setDeviceName:outError:
stringFromNumber:
dataUsingEncoding:
dmd_sha1Hash
base64EncodedStringWithOptions:
fileURLWithPath:
getResourceValue:forKey:error:
setSkipBackupAttribute:toItemAtPath:
_redeemAppWithRedemptionCode:
_installEnterpriseAppForRequest:
_installSystemAppWithBundleIdentifier:
_installStoreAppForRequest:
_setRedemptionCode:
_storeAppFormat
_setState:
_setUnusedRedemptionCode:
_showInstallationFailurePromptIfNeeded
_promptIfNeededWithMessageFormat:success:
_applyManagementPiecesForRequest:
_redownloadDeviceAppForRequest:
_redownloadUserAppForRequest:
_promptToSignInAndInstallAppForRequest:
_purchaseFreeAppForRequest:
_attemptSINFSwapForRequest:completion:
_downloadStoreAppForRequest:type:
_showStorePromptToSignInAndInstallAppForRequest:
_canManageBundleIdentifier:
_updateManagementInfoWithBlock:
_manageApp
_attemptSINFSwap
deviceClass
floatValue
numberWithDouble:
deviceType
hasAppleInternalInstallCapability
productType
buildVersion
marketingName
serialNumber
modelNumber
uniqueDeviceID
userAssignedDeviceName
dataCapacity
dataAvailable
ethernetMacAddress
bluetoothAddress
wifiAddress
wifiAddressData
hasTelephonyCapability
hasCellularDataCapability
hasPersonalHotspotCapability
phoneNumber
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
_systemGroupContainerPathWithGroupIdentifier:
configurationProfilesSystemGroupContainer
_userDirectory
_systemProfileStorageDirectory
stringByAppendingPathComponent:
purchasedBooksDirectory
_managedNonStoreBooksSystemGroupContainer
managedNonStoreBooksDirectory
_systemProfileLibraryDirectory
stringWithCString:encoding:
systemGroupContainerPath
homeDirectoryPath
purchasedBooksManifest
managedStoreBooksManifestPath
managedNonStoreBooksManifestPath
systemLostModeRequestPath
removeObserver:forKeyPath:
subOperations
setSubOperations:
sharedDeclarationOperationQueue
incomingPayloadMetadataReferences
managedObjectContext
setPayloadContext:
_requiresNetworkTether
_requiresUnlockedKeychain
_payloadMetadataObjectID
_payloadIdentifier
_payloadContext
_subOperations
_stateDictionary
assetProvidersByPayloadIdentifier
_assetProvidersByPayloadIdentifier
hasPrefix:
isSubclassOfClass:
entity
initWithEntity:insertIntoManagedObjectContext:
setPayload:
setPayloadDictionary:
validateProperties:
setPendingStatusUpdate:
primitiveValueForKey:
willChangeValueForKey:
setStateChangeTimestamp:
setPrimitiveValue:forKey:
didChangeValueForKey:
lastStatusReportTimestamp
changedValues
validateForInsert:
validateForUpdate:
validateForDelete:
fetchRequestForActivePayloadMetadatasFromOrganizationWithIdentifier:withIdentifier:
keyPathsForValuesAffectingStatus
automaticallyNotifiesObserversOfStateDictionary
automaticallyNotifiesObserversOfLastStatusReportTimestamp
setNeedsRefreshStatus
willSave
dmd_userEffectivePoliciesDatabaseURL
initWithPersistentStoreDescriptions:
setShouldAddStoreAsynchronously:
setOption:forKey:
initWithKeyOptions:valueOptions:capacity:
persistentContainer
isPersistentContainerLoaded
isEqualToNumber:
setIsPersistentContainerLoaded:
setInternalContext:
addPersistentStoreWithDescription:completionHandler:
currentConnection
objectForKey:
setObject:forKey:
internalContext
performBlock:
policyTypes
setPolicyTypes:
setModificationDate:
_performBackgroundTask:
sortDescriptorWithKey:ascending:
setSortDescriptors:
policy
priority
initWithType:defaultPolicy:currentPoliciesByIdentifier:defaultPriority:prioritiesByIdentifier:
_upsertPolicy:forType:identifier:priority:organizationIdentifier:declarationIdentifier:policyToUpdate:managedObjectContext:
_notifyClientsRegisteredForPolicyType:
setPolicy:
setPriority:
_removeOrphanedPoliciesFromFetchRequest:managedObjectContext:completionHandler:
orPredicateWithSubpredicates:
hasChanges
setEffectivePolicy:forType:identifiers:priority:organizationIdentifier:declarationIdentifier:completionHandler:
removeEffectivePolicyFromOrganizationIdentifier:declarationIdentifier:completionHandler:
setPersistentContainer:
_contextsByXPCConnection
_isPersistentContainerLoaded
_internalContext
_persistentContainer
addRegistration:replyHandler:
requestPoliciesForTypes:replyHandler:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
initWithPolicyPersistence:
sharedStakeholder
willSwitchUser
inEDUMode
initWithFormat:arguments:
initForOperation:
_retain
_release
isParked
exceptionWithName:reason:userInfo:
setIsParked:
operation
assertionForOperation:
stayAliveThroughHereAtLeast
park
unpark
setOperation:
_isParked
_operation
eSIMServerURL
scheme
setNumberOfUpdates:
clientBundleIdentifier
_removeRestrictionsWithRequest:error:
_removeProfile:withRequest:completion:
setDeclarationIdentifier:
_declarationIdentifier
organizationIdentifier
setOrganizationIdentifier:
subscriptionDeclaration
setSubscriptionDeclaration:
_organizationIdentifier
_subscriptionDeclaration
validateRequest:error:
persistentID
iTunesStoreID
removeProfileWithIdentifier:installationType:completion:
removeProtectedProfileAsyncWithIdentifier:installationType:completion:
profileIdentifier
removeProvisioningProfileWithUUID:outError:
destinationName
destinationDeviceID
password
scanWaitInterval
force
startAirPlaySessionWithDestinationName:destinationDeviceID:password:scanWaitTime:sessionType:force:error:
initWithReason:
setRebootType:
shutdownWithOptions:
initWithAction:productKey:error:
sharedInstallTask
currentStatusWithError:
action
isDownloadComplete
productKey
productKeyFromStatus:
defaultProductKey
endOperationWithWrongProductKey:action:
productVersion
useDelay
availableUpdateWithVersion:useDelay:error:
startDownloadWithError:
startInstallWithError:
runWithRequest:
inReplyTo
initWithMachServiceName:
_setQueue:
taskServerDelegate
policyServerListenerDelegate
taskOperationServiceListener
policyServerListener
currentRunLoop
taskServerListenerDelegate
_taskServerDelegate
_taskOperationServiceListener
_taskServerListenerDelegate
_policyServerListenerDelegate
_policyServerListener
configuration
UUIDString
syncToken
identifiers
decodeObjectOfClass:forKey:
setIdentifiers:
_policy
_priority
_identifiers
fileHandle
stopAirPlaySessionOfType:error:
removeAppMetadataForBundleIdentifier:error:
removeAppWithBundleIdentifier:completion:
runWithRequest:bundleIdentifier:
date
productBuildVersion
_dmfStatusErrorFromSUStatusError:
removeUpdateWithError:
download
isDone
normalizedPercentComplete
descriptor
setDownload:
_download
setClient:
setMDMUseDelayPeriod:
setRequestedPMV:
client
scanForUpdates:withResult:
lastDownload
initWithDescriptor:
currentDownload:
setLastDownload:
startDownload:
_dmfDownloadErrorFromSUDownloadError:
installUpdate:withOptions:withResult:
_dmfInstallErrorFromSUInstallError:
purgeDownload:
client:scanRequestDidStartForOptions:
client:scanRequestDidFinishForOptions:update:error:
client:scanDidCompleteWithNewUpdateAvailable:error:
client:automaticDownloadDidFailToStartForNewUpdateAvailable:withError:
client:downloadWasInvalidatedForNewUpdateAvailable:
client:downloadDidStart:
client:downloadProgressDidChange:
client:downloadDidFail:withError:
client:downloadDidFinish:
client:installDidStart:
client:installDidFail:withError:
client:installDidFinish:
operationWillFinish
operationDidFinish
setConfigurationEngine:
_configurationEngine
setClientBundleIdentifier:
setUid:
runAsUser
setRunAsUser:
_runAsUser
_uid
_clientBundleIdentifier
_nameForOperationGroup:
_currentLocaleDidChange:
concurrentOperationQueue
serialOperationQueuesByGroup
appendFormat:
deviceStateObserver
boolValueForEntitlement:
effectiveUserIdentifier
regularExpressionWithPattern:options:error:
firstMatchInString:options:range:
rangeAtIndex:
substringWithRange:
_specialCasedRequestNamesToOperationNames
isPermittedOnCurrentPlatform
clientUserInfo
transport
intValue
processIdentifier
operationForRequest:targetUID:appleID:transport:error:
server:clientSession:operationForRequest:error:
server:clientSession:didInterruptWithError:
server:clientSession:shouldConnectWithTransport:
server:clientSession:didReceiveNotificationWithName:userInfo:
server:clientSession:enqueueOperation:
server:clientSessionDidConnect:
server:clientSessionDidDisconnect:
server:clientSessionDidInvalidate:
serverDidInvalidate:
_concurrentOperationQueue
_serialOperationQueuesByGroup
_deviceStateObserver
isMigrationFinished
setIsMigrationFinished:
waitForMigrationIncludingPostRestoreMigration:completion:
_isMigrationFinished
valueForEntitlement:
initWithXPCConnection:
taskServer
connectWithClientTransport:
listener:shouldAcceptNewConnection:
initWithTaskServer:
_taskServer
_testEvent
updateEvent:
startNotificationStreamWithEventsHandler:
eventStatusRollupSinceStartDate:
appleID
isFinished
_runWithRequest:metadata:
_endOperationWithBundleIdentifier:
_resumeUpdateForBundleIdentifier:
_promptIfNeededAndUpdateAppForRequest:metadata:
_startUpdateAppForRequest:metadata:
setDidPromptUser:
_setState:forBundleIdentifier:
localizedStringForKey:value:table:
showNotification:completion:
_showUpdateFailurePromptIfNeededForRequest:metadata:
VPNUUIDString
managementOptions
didPromptUser
localizedStringWithFormat:
initWithBundleIdentifier:state:
_didPromptUser
notificationRef
setNotificationRef:
header
setHeader:
message
setMessage:
defaultButtonTitle
setDefaultButtonTitle:
alternateButtonTitle
setAlternateButtonTitle:
otherButtonTitle
setOtherButtonTitle:
displayWhenLocked
setDisplayWhenLocked:
timeout
setTimeout:
_notificationRef
_displayWhenLocked
_header
_message
_defaultButtonTitle
_alternateButtonTitle
_otherButtonTitle
_timeout
notifications
completionsByIdentifier
_showNextNotification
_dictFromNotification:
_completeNotification:response:
_notificationRef:wasDismissedWithFlags:
_notifications
_completionsByIdentifier
validateAppBundleIDs:completion:
initWithBundleIdentifier:propertyKeys:
setIsAppStoreVendable:
setHasUpdateAvailable:
applicationType
externalVersionIdentifier
setExternalVersionIdentifier:
bundleVersion
setVersion:
shortVersionString
setShortVersion:
diskUsage
staticUsage
setStaticUsage:
dynamicUsage
setDynamicUsage:
onDemandResourcesUsage
setOnDemandResourcesUsage:
sharedUsage
setSharedUsage:
isPlaceholder
setIsPlaceholder:
isRestricted
setIsRestricted:
isBlocked
setIsBlocked:
vppStateFlagsWithProxy:
setIsUserBasedVPP:
setIsLicenseExpired:
setIsLicenseRevoked:
hasMIDBasedSINF
isDeviceBasedVPP
setIsDeviceBasedVPP:
profileValidated
setIsUPP:
_proxyIsValidated:
setIsValidated:
isAppStoreVendable
isBetaApp
setIsBetaApp:
isAdHocCodeSigned
setIsAdHocCodeSigned:
initWithCommonName:data:isIdentity:
_productKeyFromBuild:
humanReadableUpdateName
productSystemName
downloadSize
installationSize
initWithProductKey:humanReadableName:productName:version:build:downloadSize:installSize:isCritical:restartRequired:allowsInstallLater:
isEncrypted
version
payloadDescription
initWithType:identifier:payloadVersion:displayName:organization:payloadDescription:
profileDescription
isLocked
removalPasscode
initWithUUID:type:identifier:profileVersion:displayName:organization:profileDescription:isManaged:isLocked:hasRemovalPasscode:isEncrypted:signerCertificates:payloads:restrictions:
fileDescriptor
dmd_dataWithMappedContentsOfFileHandle:error:
localizedDescription
URLByAppendingPathComponent:isDirectory:
dmd_homeDirectoryURL
dmd_systemLibraryURL
dmd_userLibraryURL
dmd_systemDMDLibraryURL
dmd_userDMDLibraryURL
dmd_systemConfigurationEngineLibraryURL
dmd_userConfigurationEngineLibraryURL
Code
ErrorChain
Not Allowed
Not Supported
Failed
QueryResponses
ErrorResponses
fontURL
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
supportsSecureCoding
TB,R
T@"NSURL",C,N,V_fontURL
%@-%@
assetIdentifier
T@"NSString",R,C,N
assetDescriptor
T@"CEMAssetBaseDescriptor",R,C,N
assetReference
T@"CEMAssetBaseReference",R,C,N
fontDeclaration
T@"CEMFontDeclaration",&,N,V_fontDeclaration
resolver
T@"<DMDRemoteAssetResolver>",&,N,V_resolver
installMetadata
T@"CEMFontAssetInstallMetadata",&,N,V_installMetadata
imageURL
T@"NSURL",C,N,V_imageURL
imageDeclaration
T@"CEMImageDeclaration",&,N,V_imageDeclaration
T@"CEMImageAssetInstallMetadata",&,N,V_installMetadata
Installed
Pending
Echo
Executed
countryCode
SBParentalControlsMCContentRestrictions
com.apple.springboard
appleId
primaryAccount
primaryAppleID
com.apple.dmd.budget.didChange
ScreenTime
WebSites
usageBudget
T@"USBudget",&,N,V_usageBudget
usageMonitor
T@"USUsageMonitor",&,N,V_usageMonitor
%@-%ld
calendarIdentifier
T@"NSString",C,N,V_calendarIdentifier
notificationTimes
T@"NSSet",&,N,V_notificationTimes
expiredNotificationTimes
T@"NSMutableArray",&,N,V_expiredNotificationTimes
scheduledAlarmIdentifiers
T@"NSMutableArray",&,N,V_scheduledAlarmIdentifiers
startDay
Tq,N,V_startDay
startHour
Tq,N,V_startHour
startMinute
Tq,N,V_startMinute
startSecond
Tq,N,V_startSecond
endDay
Tq,N,V_endDay
endHour
Tq,N,V_endHour
endMinute
Tq,N,V_endMinute
endSecond
Tq,N,V_endSecond
DSID
T@"NSString",C,N,V_DSID
endDate
T@"NSDate",&,N,V_endDate
ActivatedConfigurations
Install
Remove
q24@?0@"NSDictionary"8@"NSDictionary"16
%K = %@
organization.identifier
predicatePayloadMetadata
T@"NSDictionary",&,D,N
subPredicateObservers
T@"NSArray",R,C,N,V_subPredicateObservers
subPredicateObserver
T@"DMDActivationPredicateObserver",&,N,V_subPredicateObserver
com.apple.notifyd.matching
com.apple.alarm
Date
ShouldWake
buddhist
chinese
coptic
ethiopic-amete-alem
ethiopic-amete-mihret
gregorian
hebrew
indian
islamic
islamic-civil
islamic-tbla
islamic-umalqura
iso8601
japanese
persian
T@"<DMDActivationPredicateObserverDelegate>",W,N,V_delegate
lastPredicateEvaluationValue
TB,N,V_lastPredicateEvaluationValue
predicateType
T@"NSString",R,C,N,V_predicateType
T@"NSString",R,C,N,V_uniqueIdentifier
SignificantTimeChangeNotification
v16@?0@"NSObject<OS_xpc_object>"8
v12@?0i8
v8@?0
v32@?0@"NSString"8@"DMDActivationPredicateObserver"16^B24
notifydMatchingEventStreamBudgetToken
Ti,N,V_notifydMatchingEventStreamBudgetToken
activationPredicateObserversByIdentifier
T@"NSMutableDictionary",&,N,V_activationPredicateObserversByIdentifier
delegate
T@"<DMDActivationPredicateObserverManagerDelegate>",R,W,N,V_delegate
request.name
com.apple.dmd-access
transaction
T@"NSObject<OS_os_transaction>",&,N,V_transaction
AVOutputContextSetOutputDevicePasswordKey
avOutputContext
applicationProcessID
avOutputDevice
setOutputDevice:options:
AirPlay
Display
iPod's screen
iPad's screen
iPhone's screen
Apple TV's output
Mac's screen
device
v32@?0^{__CFArray=}8^v16^{__CFError=}24
v16@?0^{__CFArray=}8
shared
T@"DMDAirPlayManager",R,N
currentlyPickedDestinationName
T@"NSString",C,N,V_currentlyPickedDestinationName
currentlyPickedDestinationDeviceID
T@"NSString",C,N,V_currentlyPickedDestinationDeviceID
metadataByBundleID
state
flags
RedemptionCode
UnusedRedemptionCode
Attributes
VPNUUID
com.apple.dmd.%@.%p
Apps
@8@?0
<%@: %p; Apps: %@>
v24@?0@"DMDAppMetadata"8@"NSError"16
self == %@
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
items
metadata
kind
software
bundle-identifier
title
sharedController
T@"DMDAppController",R,N
metadataPath
T@"NSString",R,N
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
manifest
T@"NSMutableDictionary",R,N,V_manifest
stateHandler
T@"DMFOSStateHandler",R,N,V_stateHandler
foregroundBundleIdentifiers
T@"NSArray",R,C,N
managedBundleIdentifiers
com.apple.
B24@?0@"NSString"8@"NSNumber"16
B16@?0@"ASDJob"8
managementInformation
v24@?0@"LSBundleProxy"8^B16
externalVersionIdentifier
version
shortVersion
staticUsage
dynamicUsage
onDemandResourcesUsage
sharedUsage
installationState
isPlaceholder
isRestricted
isBlocked
isUserBasedVPP
isDeviceBasedVPP
isLicenseExpired
isLicenseRevoked
isUPP
isValidated
isAppStoreVendable
isBetaApp
isAdHocCodeSigned
hasUpdateAvailable
VPNUUIDString
configuration
feedback
v28@?0B8@"NSArray"12@"NSError"20
com.apple.configuration.managed
com.apple.feedback.managed
v16@?0@"FBSDisplayLayout"8
v24@?0@"SSAuthenticateResponse"8@"NSError"16
any user license
existing user license
device license
Undefined
v36@?0B8@"NSDictionary"12q20@"NSError"28
non-nil
mobile
v32@?0@"NSDictionary"8q16@"NSError"24
bundleIDsToAssertions
T@"NSMutableDictionary",&,N,V_bundleIDsToAssertions
layoutMonitor
T@"FBSDisplayLayoutMonitor",&,N,V_layoutMonitor
_foregroundBundleIdentifiers
T@"NSArray",&,N,V__foregroundBundleIdentifiers
singleAppModeBundleIndentifier
T@"NSString",C,N,V_singleAppModeBundleIndentifier
userIsSignedIn
TB,R,N
jobManager
T@"ASDJobManager",R,C,N
updatesStore
T@"ASDSoftwareUpdatesStore",R,C,N
v24@?0@"SSRedeemCodesResponse"8@"NSError"16
v24@?0@"SSAccount"8@"NSError"16
com.apple.dmd.remove-foreground-app
com.apple.dmd.update-foreground-app
com.apple.dmd.%@.%p(%@).queue
observers
T@"NSPointerArray",&,N,V_observers
T@"NSOperationQueue",&,N,V_queue
stateMachine
T@"CATStateMachine",&,N,V_stateMachine
T@"NSString",R,C,N,V_bundleIdentifier
currentState
progress
T@"NSProgress",R,N,V_progress
v16@?0@"LSApplicationProxy"8
proxyProgress
T@"NSProgress",&,N,V_proxyProgress
bundleIdentifier
T@"NSString",C,N,V_bundleIdentifier
storeItemIdentifier
T@"NSNumber",C,N,V_storeItemIdentifier
displayName
T@"NSString",C,N,V_displayName
isStoreApp
TB,N,V_isStoreApp
isFree
TB,N,V_isFree
isUserLicensed
TB,N,V_isUserLicensed
needsRedownload
TB,N,V_needsRedownload
lifeCycle
T@"DMDAppLifeCycle",R,N
request.bundleIdentifier
v16@?0@"NSManagedObjectContext"8
assetResolver
T@"<DMDRemoteAssetResolver>",W,N,V_assetResolver
com.apple.dmd.operation.begin-transaction
block
T@?,C,N,V_block
com.apple.dmd.operation.clear-activation-lock-bypass-code
com.apple.dmd.operation.clear-device-passcode
request.unlockTokenData
request.secret
com.apple.dmd.operation.clear-restrictions-password
com.apple.command.device.information
com.apple.command.device.lock
com.apple.command.device.restart
com.apple.command.management.test
com.apple.command.management.refresh.status
com.apple.asset.font
com.apple.asset.image
com.apple.configuration.account.settings
com.apple.configuration.account.webclip
com.apple.configuration.application.lock
com.apple.configuration.application.settings
com.apple.configuration.application.store
com.apple.configuration.application.store.macos
com.apple.configuration.device.conferenceroomdisplay
com.apple.configuration.event.subscription
com.apple.configuration.legacy.restrictions.apps
com.apple.configuration.management.test
com.apple.configuration.media.settings
com.apple.configuration.network.cellular.settings
com.apple.configuration.passcode.settings
com.apple.configuration.policy.application
com.apple.configuration.policy.category
com.apple.configuration.policy.icloud.account
com.apple.configuration.policy.screentime
com.apple.configuration.policy.website
com.apple.configuration.security.settings
com.apple.configuration.system.airdrop
com.apple.configuration.system.camera
com.apple.configuration.system.carplay
com.apple.configuration.system.dateandtime
com.apple.configuration.system.donotdisturb
com.apple.configuration.system.font
com.apple.configuration.system.gamecenter
com.apple.configuration.system.icloud
com.apple.configuration.system.keyboard
com.apple.configuration.system.music
com.apple.configuration.system.ratings
com.apple.configuration.system.search
com.apple.configuration.system.siri
com.apple.configuration.system.tvprovider
com.apple.configuration.system.web
com.apple.configuration.system.web.contentfilter.basic
com.apple.event.management.test
com.apple.activations.basic
com.apple.activations.simple
com.apple.predicate.not
com.apple.predicate.all
com.apple.predicate.any
com.apple.predicate.weeklytimerange
com.apple.predicate.onetime
com.apple.predicate.budget
com.apple.predicate.icloudaccount
com.apple.message.management.test
DMDConfigurationDatabaseModel
momd
<%@: %p
DMDConfigurationOrganizationsDidChangeNotification
DMDConfigurationSourceStatusDidChange
DMDConfigurationSourceEventsDidChange
%@.%p.configuration-engine
v32@?0@"NSString"8@"NSString"16@"NSArray"24
Database:
Engine operations:
Organizations:
Deactivate organization for %@
v32@?0@"NSString"8@"NSArray"16^B24
Process Declarations for %@
Send Events for %@
payloadMetadata.organization
com.apple.dmd.policy.cleanup.org
com.apple.dmd.policy.cleanup.declaration
organization
v16@?0@"NSArray"8
self IN %@
database
T@"DMDConfigurationDatabase",&,N,V_database
T@"CATOperationQueue",&,N,V_queue
initializationError
T@"NSError",&,V_initializationError
databaseInitializationOperation
T@"DMDEngineDatabaseInitializationOperation",&,N,V_databaseInitializationOperation
initializationOperation
T@"CATOperation",&,N,V_initializationOperation
organizationControllerByIdentifier
T@"NSMutableDictionary",&,N,V_organizationControllerByIdentifier
eventSubscriptionManager
T@"DMDEventSubscriptionManager",&,N,V_eventSubscriptionManager
policyPersistence
T@"DMDPolicyPersistence",R,V_policyPersistence
T@"<DMDConfigurationEngineDelegate>",W,N,V_delegate
deviceStateProvider
T@"NSObject<DMDDeviceStateProvider>",&,N,V_deviceStateProvider
taskOperationProvider
T@"NSObject<DMDTaskOperationProvider>",&,N,V_taskOperationProvider
activationPredicateObserverManager
T@"DMDActivationPredicateObserverManager",&,N,V_activationPredicateObserverManager
type
T@"NSString",C,D,N
active
TB,D,N
persistentConfigurationSources
T@"NSArray",C,D,N
payloadMetadatas
T@"NSString",C,N,V_type
persistentConfigurationSourceControllersByIdentifier
T@"NSMutableDictionary",&,N,V_persistentConfigurationSourceControllersByIdentifier
ephemeralConfigurationSourceControllersByIdentifier
T@"NSMutableDictionary",&,N,V_ephemeralConfigurationSourceControllersByIdentifier
configurationSourceControllers
ephemeralConfigurationSources
T@"DMFConfigurationOrganization",R,N
T@"<DMDConfigurationOrganizationControllerDelegate>",W,N,V_delegate
available
identifier IN %@
installed
failed
SUBQUERY(incomingPayloadMetadataReferences, $ref, ($ref.available == YES) && ($ref.predicatePayloadMetadata.%K.boolValue == YES)).@count > 0
SUBQUERY(incomingPayloadMetadataReferences, $ref, $ref.predicatePayloadMetadata.%K.boolValue == YES).@count == 0
%K != %@
status
SUBQUERY(incomingPayloadMetadataReferences, $ref, $ref.available == YES).@count = 0
machServiceName
reportingRequirements
T@"NSString",C,N
listenerEndpoint
T@"NSXPCListenerEndpoint",&,N
T@"DMFReportingRequirements",&,N
T@"DMDConfigurationOrganization",&,D,N
T@"NSXPCListenerEndpoint",&,D,N
T@"DMFReportingRequirements",&,D,N
v24@?0@"NSURL"8@"NSError"16
context
T@"<DMDRemoteAssetResolutionContext>",&,N,V_context
source
T@"CATSerialOperationQueue",&,N,V_queue
T@"DMDConfigurationSourceRepresentation",&,N,V_source
T@"<DMDConfigurationSourceControllerDelegate>",R,W,N,V_delegate
configurationSource
T@"DMFConfigurationSource",R,N
v32@?0@"NSDictionary"8@"NSError"16@?<v@?@"NSError">24
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_machServiceName
T@"NSXPCListenerEndpoint",&,N,V_listenerEndpoint
T@"DMFReportingRequirements",&,N,V_reportingRequirements
v24@?0@"<DMFConfigurationSourceClientInterface>"8@"NSError"16
v16@?0@"NSError"8
controller
T@"DMDConfigurationSourceController",W,N,V_controller
anonymousConnection
T@"NSXPCConnection",R,N,V_anonymousConnection
namedConnection
T@"NSXPCConnection",R,N,V_namedConnection
com.apple.dmd.operation.create-configuration-organization
request.organizationDisplayName
request.organizationType
com.apple.dmd.operation.deactivate-configuration-organization
serverHash
pendingStatusUpdate
uniqueIdentifier
com.apple.dmd.operation.delete-user
request.message
T@"DMDDeviceController",R,N
currentDevice
T@"DMFDevice",R,N
hasKeychainUnlockedSinceBoot
isKeychainUnlocked
isNetworkTethered
com.apple.system.config.network_change
TB,N,V_hasKeychainUnlockedSinceBoot
TB,N,V_isKeychainUnlocked
TB,N,V_isNetworkTethered
com.apple.dmd.operation.disable-lost-mode
com.apple.dmd.operation.echo
request.echo
request.resultStatus
declarationIdentifier
policy
Tq,D,N
priority
com.apple.dmd.operation.enable-lost-mode
request.UUID
com.apple.dmd.operation.end-transaction
T@"DMFCreateConfigurationOrganizationRequest",&,N,V_request
DMDEngineDatabaseFixedDigitalHealthUsageEventMetadataKey
isReady
-wal
-shm
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
DMDEngineDatabaseInitializationOperationContext
outgoingPayloadMetadataReferences
T@"<DMDEngineDatabaseProcessingOperationDelegate>",W,N,V_delegate
T@"<DMDTaskOperationProvider>",&,N,V_taskOperationProvider
T@"DMFDeactivateConfigurationOrganizationRequest",&,N,V_request
Debug
T@"DMFFetchDeclarationsRequest",&,N,V_request
completionHandler
T@?,C,N,V_completionHandler
T@"NSString",&,N,V_organizationIdentifier
(null)
%@:%@
T@"<DMDEngineRegisterConfigurationSourceOperationDelegate>",W,N,V_delegate
request
T@"DMFRegisterConfigurationSourceRequest",&,N,V_request
clientIdentifier
T@"NSString",C,N,V_clientIdentifier
T@"DMFSetDeclarationsRequest",&,N,V_request
T@"DMFUpdateEnqueuedCommandsRequest",&,N,V_request
self != %@
T@"DMFUpdateDeclarationsRequest",&,N,V_request
com.apple.dmd.operation.erase-device
Immediate
Minutely
Hourly
Weekly
Daily
00:00
frequency
localTime
spread
v16@?0@"NSTimer"8
timer
T@"NSTimer",&,N,V_timer
identifier
T@"NSString",R,C,N,V_identifier
Tq,R,N,V_frequency
T@"NSString",R,C,N,V_localTime
T@"NSNumber",R,N,V_spread
T@"NSNumber",R,N,V_day
eventType
timestamp
T@"NSString",R,C,N,V_eventType
details
T@"NSDictionary",R,C,N,V_details
T@"NSDate",R,N,V_timestamp
v32@?0@"NSString"8@"DMDEventSubscriptionRegistrationController"16^B24
eventSubscriptionsByIdentifier
T@"NSMutableDictionary",&,N,V_eventSubscriptionsByIdentifier
eventsHandler
T@?,C,N,V_eventsHandler
payloadMetadata
payloadMetadata.organization.identifier = %@ AND payloadMetadata.identifier = %@
events
T@"NSArray",&,D,N
schedule
T@"CEMEventSubscriptionDeclaration_Schedule",&,D,N
v32@?0@"NSString"8@"<DMDEventTypeStream>"16^B24
T@"DMDEventReportingSchedule",&,N,V_schedule
eventStreamByEventType
T@"NSMutableDictionary",&,N,V_eventStreamByEventType
streamEventsHandler
T@?,R,N,V_streamEventsHandler
lastDateScheduleElapsed
T@"NSDate",&,N,V_lastDateScheduleElapsed
T@"NSString",R,C,N,V_organizationIdentifier
com.apple.dmd.operation.fetch-activation-lock-bypass-code
com.apple.dmd.operation.fetch-apps
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
com.apple.dmd.operation.fetch-available-os-updates
default
com.apple.dmd.operation.fetch-certificates
com.apple.dmd.operation.fetch-classroom-instructor-endpoint
com.apple.dmd.operation.fetch-declaration-capabilities
com.apple.dmd.operation.set-declarations
v24@?0@"NSArray"8@"NSError"16
request.configurationSource
com.apple.dmd.operation.fetch-device-properties
request.propertyKeys
com.apple.dmd.operation.fetch-unlock-token
com.apple.dmd.operation.fetch-debug-state
Server:
Apps:
com.apple.dmd.operation.fetch-location
com.apple.dmd.operation.fetch-managed-books
com.apple.dmd.operation.fetch-organizations
v24@?0@"DMFFetchConfigurationOrganizationsResultObject"8@"NSError"16
com.apple.dmd.operation.fetch-os-update-status
com.apple.dmd.operation.fetch-profiles
com.apple.dmd.operation.fetch-provisioning-profiles
com.apple.dmd.operation.fetch-restrictions
com.apple.dmd.operation.fetch-safari-bookmarks
com.apple.dmd.operation.fetch-security-information
com.apple.dmd.operation.fetch-stream-events
v24@?0@"DMFFetchStreamEventsResultObject"8@"NSError"16
request.organizationIdentifier
request.startDate
com.apple.dmd.operation.fetch-users
request.licenseType
com.apple.dmd.operation.install-app
T@"DMDAppMetadata",&,N,V_metadata
com.apple.dmd.operation.install-configuration
request.profile
PayloadContent
PayloadType
com.apple.applicationaccess
PayloadIdentifier
%@-restrictions
com.apple.dmd
whitelistedAppBundleIDs
request.subscriptionDeclaration
com.apple.dmd.operation.install-managed-book
request.originator
com.apple.dmd.operation.install-profile
request.managingProfileIdentifier
com.apple.dmd.operation.install-provisioning-profile
request.profileData
com.apple.dmd.operation.invite-user-to-vpp
request.URL
com.apple.dmd.operation.lock-device
v16@?0q8
deviceLastCloudBackupDate
T@"NSDate",R,C,N
com.apple.dmd.operation.log-out-user
App Installation
Sign in to iTunes to allow %1$@ to manage and install apps.
Sign In
v16@?0@"DMFAppManagementInformation"8
com.apple.dmd.operation.start-managing-app
App Management Change
Manage
iPhone
iPod
iPad
AppleTV
Watch
AudioAccessory
apple-internal-install
DeviceClass
ProductType
ProductVersion
BuildVersion
marketing-name
SerialNumber
ModelNumber
UniqueDeviceID
UserAssignedDeviceName
DiskUsage
EthernetMacAddress
BluetoothAddress
WifiAddress
WifiAddressData
telephony
cellular-data
personal-hotspot
PhoneNumber
MobileSubscriberCountryCode
MobileSubscriberNetworkCode
deviceType
TQ,R,N
hasAppleInternalInstallCapability
deviceClass
productType
productVersion
buildVersion
marketingName
serialNumber
modelNumber
uniqueDeviceID
userAssignedDeviceName
dataCapacity
T@"NSNumber",R,C,N
dataAvailable
ethernetMacAddress
bluetoothAddress
wifiAddress
wifiAddressData
T@"NSData",R,C,N
hasTelephonyCapability
hasCellularDataCapability
hasPersonalHotspotCapability
phoneNumber
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
com.apple.dmd.operation.open-app
com.apple.dmd.operation.open-url
request.url
systemgroup.com.apple.configurationprofiles
MDMAppManagement.plist
Purchases.plist
/Media/Books/Purchases
ManagedBooks.plist
Library
Managed.plist
LostModeRequest.plist
ConfigurationProfiles
systemgroup.com.apple.media.books.managed
systemGroupContainerPath
homeDirectoryPath
managedAppsManifest
purchasedBooksManifest
purchasedBooksDirectory
managedStoreBooksManifestPath
managedNonStoreBooksDirectory
managedNonStoreBooksManifestPath
systemLostModeRequestPath
Identifier
objectID
payloadDictionary
T@"DMDPayloadMetadata",&,D,N
DMDPayloadActionOperationObservationContext
payloadContext
T@"DMDPayloadContext",&,N,V_payloadContext
subOperations
T@"NSMutableArray",&,N,V_subOperations
T@"NSMutableDictionary",&,N,V_stateDictionary
TB,N,V_requiresNetworkTether
TB,N,V_requiresUnlockedKeychain
T@"DMDConfigurationDatabase",R,N,V_database
payloadMetadataObjectID
T@"NSManagedObjectID",R,C,N,V_payloadMetadataObjectID
T@"NSString",R,C,N,V_payloadIdentifier
assetProvidersByPayloadIdentifier
T@"NSDictionary",C,N,V_assetProvidersByPayloadIdentifier
com.apple.command
com.apple.activation
com.apple.asset
com.apple.configuration
com.apple.configuration.policy
requiresNetworkTether
requiresUnlockedKeychain
lastStatusReportTimestamp
stateChangeTimestamp
stateDictionary
payload
T@"DMDPayload",&,D,N
T@"NSDate",&,D,N
T@"NSDictionary",C,D,N
T@"NSDate",C,D,N
T@"NSSet",C,D,N
incomingPayloadMetadataReferences
T@,&,D,N
com.apple.dmd.operation.play-lost-mode-sound
DMDEffectivePolicies
EffectivePolicies
identifier == %@
v24@?0@"NSManagedObjectContext"8@"NSError"16
type == %@
(identifier IN %@) AND (organizationIdentifier == %@) AND (declarationIdentifier == %@)
(identifier == nil) AND (organizationIdentifier == %@) AND (declarationIdentifier == %@)
(organizationIdentifier == %@) AND (declarationIdentifier == %@)
NOT (organizationIdentifier IN %@)
(organizationIdentifier == %@) AND NOT (declarationIdentifier IN %@)
isPersistentContainerLoaded
TB,N,V_isPersistentContainerLoaded
internalContext
T@"NSManagedObjectContext",&,V_internalContext
persistentContainer
T@"NSPersistentContainer",&,V_persistentContainer
modificationDate
policyTypes
com.apple.private.dmd.policy
T@"DMDPolicyPersistence",R,N,V_policyPersistence
DMDPowerAssertion Queue
unknown
Trying to park a power assertion that's already parked.
Trying to unpark a power assertion that's not parked.
isParked
TB,N,V_isParked
operation
T@"NSString",&,N,V_operation
com.apple.dmd.operation.refresh-cellular-plans
http
https
request.eSIMServerURL
v24@?0@"NSNumber"8@"NSError"16
request.configurationSourceName
com.apple.dmd.operation.register-user-agent
request.listenerEndpoint
com.apple.dmd.operation.remove-app
com.apple.dmd.operation.remove-configuration
request.declarationIdentifier
T@"NSString",C,N,V_declarationIdentifier
organizationIdentifier
T@"NSString",C,N,V_organizationIdentifier
subscriptionDeclaration
T@"CEMEventSubscriptionDeclaration",&,N,V_subscriptionDeclaration
com.apple.dmd.operation.remove-managed-book
com.apple.dmd.operation.remove-os-update
com.apple.dmd.operation.remove-profile
com.apple.dmd.operation.remove-protected-profile
com.apple.dmd.operation.remove-provisioning-profile
request.profileIdentifier
com.apple.dmd.operation.request-airplay-mirroring
com.apple.dmd.operation.restart-device
dmd restart device
com.apple.dmd.operation.schedule-os-update
com.apple.dmd.operation.send-event
request.inRepyTo
request.eventType
Task Server: %@
Policy Server: %@
sharedServer
T@"DMDServer",R,N
taskServerListenerDelegate
T@"DMDTaskServerListenerDelegate",R,N,V_taskServerListenerDelegate
policyServerListenerDelegate
T@"DMDPolicyServerListenerDelegate",R,N,V_policyServerListenerDelegate
policyServerListener
T@"NSXPCListener",R,N,V_policyServerListener
taskServerDelegate
T@"DMDTaskServerDelegate",R,N,V_taskServerDelegate
taskOperationServiceListener
T@"NSXPCListener",R,N,V_taskOperationServiceListener
com.apple.dmd.operation.set-app-analytics-enabled
com.apple.dmd.operation.set-app-configuration
com.apple.dmd.operation.set-app-vpn-uuid
com.apple.dmd.operation.set-bluetooth-enabled
com.apple.dmd.operation.set-data-roaming-enabled
request.syncToken
com.apple.dmd.operation.set-device-name
com.apple.dmd.operation.set-diagnostic-submission-enabled
request.type
identifiers
Tq,N,V_policy
TQ,N,V_priority
T@"NSArray",C,N,V_identifiers
com.apple.dmd.operation.set-maximum-resident-users
com.apple.dmd.operation.set-passcode-lock-grace-period
com.apple.dmd.operation.set-personal-hotspot-enabled
com.apple.dmd.operation.set-voice-roaming-enabled
com.apple.dmd.operation.set-wallpaper
request.imageURL
com.apple.dmd.operation.shut-down-device
dmd shut down device
com.apple.dmd.operation.stop-airplay-mirroring
com.apple.dmd.operation.stop-managing-app
com.apple.dmd.operation.stop-managing-books
organization.identifier = %@
payloadIdentifier
date
OSUpdate
defaultProductKey
sharedInstallTask
T@"DMDSUManagerInstallTask",R,N
com.apple.mdm
download
T@"PBSOSUpdateDownload",&,N,V_download
isInstalling
isDownloading
isDownloadComplete
downloadPercentComplete
Td,R,N
productBuildVersion
tvOSUpdate
v24@?0@"PBSOSUpdateDescriptor"8@"NSError"16
v24@?0@"PBSOSUpdateDownload"8@"NSError"16
v20@?0B8@"NSError"12
client
T@"PBSOSUpdateManagerClient",&,N,Vclient
lastDownload
T@"PBSOSUpdateDownload",&,N,VlastDownload
queueGroup
runConcurrently
runOnMainThread
T@"DMDTaskOperationContext",&,N
configurationEngine
T@"DMDConfigurationEngine",&,N
whitelistedClassesForRequest
T@"NSSet",R,N
requiredEntitlements
T@"NSArray",R,N
T@"DMDTaskOperationContext",&,N,V_context
T@"DMDConfigurationEngine",&,N,V_configurationEngine
clientBundleIdentifier
T@"NSString",C,N,V_clientBundleIdentifier
TI,N,V_uid
runAsUser
TB,N,V_runAsUser
%@.%p.concurrent
%@.%p.serial.%@
v32@?0@"NSNumber"8@"CATSerialOperationQueue"16^B24
Group: %@
Device state:
DMD serial operations:%@
DMD concurrent operations:
Configuration engine:
DMFServerErrors
application-identifier
^DM[DF](\w+)Request$
DMD%@Operation
FetchConfigurationOrganizations
FetchOrganizations
FetchGlobalRestrictions
FetchRestrictions
FetchInstalledCertificates
FetchCertificates
FetchInstalledProfiles
FetchProfiles
FetchInstalledProvisioningProfiles
FetchProvisioningProfiles
LogoutUser
LogOutUser
MDMv1UpdateApp
UpdateApp
declaration
unspecified
concurrentOperationQueue
T@"CATOperationQueue",R,N,V_concurrentOperationQueue
serialOperationQueuesByGroup
T@"NSDictionary",R,N,V_serialOperationQueuesByGroup
deviceStateObserver
T@"DMDDeviceStateObserver",R,N,V_deviceStateObserver
T@"DMDConfigurationEngine",R,N,V_configurationEngine
isMigrationFinished
TB,N,V_isMigrationFinished
taskServer
T@"CATTaskServer",R,N,V_taskServer
com.apple.dmd.operation.trigger-diagnostics
com.apple.dmd.operation.unregister-user-agent
request.appleID
com.apple.dmd.operation.update-app
DMFNotifications
App Update
Update
Cancel
v16@?0Q8
Dismiss
didPromptUser
TB,N,V_didPromptUser
com.apple.dmd.operation.enqueue-commands
T@"NSUUID",R,C,N,V_identifier
header
T@"NSString",C,N,V_header
message
T@"NSString",C,N,V_message
defaultButtonTitle
T@"NSString",C,N,V_defaultButtonTitle
alternateButtonTitle
T@"NSString",C,N,V_alternateButtonTitle
otherButtonTitle
T@"NSString",C,N,V_otherButtonTitle
displayWhenLocked
TB,N,V_displayWhenLocked
timeout
Td,N,V_timeout
T@"DMDUserNotificationController",R,N
T@"CATOperationQueue",R,N,V_queue
notifications
T@"NSMutableArray",R,N,V_notifications
completionsByIdentifier
T@"NSMutableDictionary",R,N,V_completionsByIdentifier
com.apple.dmd.operation.validate-applications
%@%@
dmd_sha1Hash
ConfigurationEngine
Database
Policies
Images
Font
Configurations
CEMFontAssetInstallMetadata
CEMAssetProvider
NSObject
NSSecureCoding
NSCoding
CEMFontInstallOperation
DMDRemoteAssetResolutionContext
CEMFontRemoveOperation
DMDAdditions
DMDOperationProvidingAsset
CEMImageAssetInstallMetadata
CEMImageInstallOperation
CEMImageRemoveOperation
DMDAccountUtilities
DMDActivationBudgetObserver
DMDActivationCurfewObserver
DMDActivationiCloudAccountObserver
DMDActivationOneTimeObserver
DMDActivationPayloadMetadata
DMDActivationPredicateAll
DMDActivationPredicateAny
DMDActivationPredicateCompound
DMDActivationPredicateFalse
DMDActivationPredicateNot
DMDActivationPredicateObserver
DMDActivationPredicateObserverManager
DMDActivationPredicateObserverDelegate
DMDActivationPredicateTrue
DMDActivityTransactionOperation
DMDAirPlayManager
DMDAppController
DMDAppLifeCycleObserving
Fetch
Install
DMDiphoneOSAppController
Redeem
Remove
Update
DMDAppLifeCycle
DMDiphoneOSAppLifeCycle
LSApplicationWorkspaceObserverProtocol
DMDAppMetadata
DMDAppOperation
DMDAssetActionOperation
DMDAssetInstallOperation
DMDAssetPayloadMetadata
DMDAssetRemoveOperation
DMDBeginTransactionOperation
DMDBlockOperation
DMDClearActivationLockBypassCodeOperation
DMDClearDevicePasscodeOperation
DMDClearRestrictionsPasswordOperation
DMDCommandActionOperation
DMDRequestProvidingCommand
DMDCommandExecuteOperation
DMDCommandPayloadMetadata
DMDCommandRemoveOperation
DMDConfigurationActionOperation
DMDConfigurationCapabilities
DMDConfigurationDatabase
DMDConfigurationEngine
DMDActivationPredicateObserverManagerDelegate
DMDConfigurationOrganizationControllerDelegate
DMDConfigurationSourceControllerDelegate
DMDEngineDatabaseProcessingOperationDelegate
DMDEngineRegisterConfigurationSourceOperationDelegate
DMDConfigurationInstallOperation
DMDConfigurationOrganization
DMDConfigurationOrganizationController
DMDRemoteAssetResolver
DMDConfigurationPayloadMetadata
DMDRequestProvidingConfiguration
DMDConfigurationRemoveOperation
DMDConfigurationReplaceOperation
DMDConfigurationSource
DMDConfigurationSourceAssetResolveOperation
DMDConfigurationSourceController
DMDConfigurationSourceEventsOperation
DMDConfigurationSourceRepresentation
DMDConfigurationSourceStatusUpdateOperation
DMDConfigurationSourceTaskOperation
DMDCreateConfigurationOrganizationOperation
DMDDeactivateConfigurationOrganizationOperation
DMDDeclarationActionOperation
DMDDeclarationPayloadMetadata
DMDDeleteUserOperation
DMDDeviceController
DMDiphoneOSDeviceController
DMDtvOSDeviceController
DMDDeviceStateObserver
DMDDeviceStateProvider
DMDDisableLostModeOperation
DMDEchoOperation
DMDEffectivePolicy
DMDEnableLostModeOperation
DMDEndTransactionOperation
DMDEngineCreateConfigurationOrganizationOperation
DMDEngineDatabaseInitializationOperation
DMDEngineDatabaseOperation
DMDEngineDatabaseProcessingOperation
DMDEngineDeactivateConfigurationOrganizationOperation
DMDEngineFetchDeclarationsOperation
DMDEngineProcessStatusOperation
DMDEngineRefreshStatusOperation
DMDEngineRegisterConfigurationSourceOperation
DMDEngineSetDeclarationsOperation
DMDEngineUpdateCommandsOperation
DMDEngineUpdateDeclarationsOperation
DMDEraseDeviceOperation
tvOS
DMDEventReportingSchedule
DMDEventStreamEvent
DMDEventSubscriptionManager
DMDEventSubscriptionRegistration
DMDEventSubscriptionRegistrationController
DMDFetchActivationLockBypassCodeOperation
DMDFetchAppsOperation
DMDFetchAvailableOSUpdatesOperation
DMDFetchCertificatesOperation
iphoneOS
DMDFetchClassroomInstructorEndpointOperation
DMDFetchConfigurationSourceSyncTokenOperation
DMDFetchDeclarationCapabilitiesOperation
DMDFetchDeclarationsOperation
DMDFetchDevicePropertiesOperation
DMDFetchDeviceUnlockTokenOperation
DMDFetchDMDStateOperation
DMDFetchLocationOperation
DMDFetchManagedBooksOperation
DMDFetchOrganizationsOperation
DMDFetchOSUpdateStatusOperation
DMDFetchProfilesOperation
DMDFetchProvisioningProfilesOperation
DMDFetchRestrictionsOperation
DMDFetchSafariBookmarksOperation
DMDFetchSecurityInformationOperation
DMDFetchStreamEventsOperation
DMDFetchUsersOperation
DMDInstallAppOperation
DMDInstallConfigurationOperation
DMDInstallEventSubscriptionOperation
DMDInstallEventSubscriptionRequest
DMDInstallManagedBookOperation
DMDInstallProfileOperation
DMDInstallProvisioningProfileOperation
DMDInviteUserToVPPOperation
DMDLockDeviceOperation
DMDLockdownUtilities
DMDLogOutUserOperation
DMDMDMUtilities
DMDMDMv1InstallAppOperation
DMDMDMv1StartManagingAppOperation
iphoneOS_watchOS
DMDMobileGestalt
DMDNetworkTetherUtilities
DMDOpenAppOperation
DMDOpenURLOperation
DMDPaths
DMDPayload
DMDPayloadActionOperation
DMDPayloadContext
DMDPayloadMetadata
DMDPlayLostModeSoundOperation
DMDPolicyPersistence
DMDPolicyRegistration
DMFPolicyRemoteInterface
DMDPolicyServerListenerDelegate
DMDUserSwitchStakeholder
DMDPowerAssertion
DMDProcessDeclarationsOperation
DMDProcessStatusOperation
DMDRefreshCellularPlansOperation
DMDRefreshStatusOperation
DMDRegisterConfigurationSourceOperation
DMDRegisterUserAgentOperation
DMDRemoveAppOperation
DMDRemoveConfigurationOperation
DMDRemoveEffectivePolicyOperation
DMDRemoveEffectivePolicyRequest
DMDRemoveEventSubscriptionOperation
DMDRemoveEventSubscriptionRequest
DMDRemoveManagedBookOperation
DMDRemoveOSUpdateOperation
DMDRemoveProfileOperation
DMDRemoveProtectedProfileOperation
DMDRemoveProvisioningProfileOperation
DMDRequestAirPlayMirroringOperation
DMDRestartDeviceOperation
DMDScheduleOSUpdateOperation
DMDSendEventOperation
DMDServer
DMDSetAppAnalyticsEnabledOperation
DMDSetAppConfigurationOperation
DMDSetAppVPNUUIDOperation
DMDSetBluetoothEnabledOperation
DMDSetDataRoamingEnabledOperation
DMDSetDeclarationsOperation
DMDSetDeviceNameOperation
DMDSetDiagnosticSubmissionEnabledOperation
DMDSetEffectivePolicyOperation
DMDSetEffectivePolicyRequest
DMDSetMaximumResidentUsersOperation
DMDSetPasscodeLockGracePeriodOperation
DMDSetPersonalHotspotEnabledOperation
DMDSetVoiceRoamingEnabledOperation
DMDSetWallpaperOperation
DMDShutDownDeviceOperation
DMDStopAirPlayMirroringOperation
DMDStopManagingAppOperation
DMDStopManagingBooksOperation
DMDSubscriptionEvent
DMDSUManagerInstallTask
DMDSUStatus
DMDSUManagerInstallTask_tvOS
PBSOSUpdateManagerClientDelegate
DMDTaskOperation
DMDTaskOperationProtocol
DMDTaskOperationContext
DMDTaskServerDelegate
DMDConfigurationEngineDelegate
CATTaskServerDelegate
DMDTaskOperationProvider
DMDiPhoneOSTaskServerDelegate
DMDTaskServerListenerDelegate
NSXPCListenerDelegate
DMDTestEventStream
DMDEventTypeStream
DMDTriggerDiagnosticsOperation
DMDUnregisterUserAgentOperation
DMDUpdateAppOperation
DMDUpdateDeclarationsOperation
DMDUpdateEnqueuedCommandsOperation
DMDUserNotification
DMDUserNotificationController
DMDValidateApplicationsOperation
ASDJob
BundleIdentifier
LSApplicationProxy
SecCertificateRef
SUDescriptor
MCProfile
MISProfileRef
DMDMappedMemory
DMDUtilities
DMDLegacy
B16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSURL"16@0:8
@"NSData"16@0:8
@"NSNumber"16@0:8
v16@0:8
@"NSURL"
v24@0:8@"NSURL"16
v24@0:8@"NSError"16
@"CEMAssetBaseDescriptor"16@0:8
@"CEMAssetBaseReference"16@0:8
@32@0:8@16@24
@"CEMFontDeclaration"
@"<DMDRemoteAssetResolver>"
@"CEMFontAssetInstallMetadata"
@32@0:8@16^@24
@"CATOperation"32@0:8@"<DMDRemoteAssetResolver>"16^@24
@"CATOperation"32@0:8@"NSDictionary"16^@24
@"CEMImageDeclaration"
@"CEMImageAssetInstallMetadata"
@"USBudget"
@"USUsageMonitor"
@40@0:8@16@24@32
@24@0:8^@16
@64@0:8@16q24q32q40q48@56
q16@0:8
v24@0:8q16
@"NSString"
@"NSSet"
@"NSMutableArray"
@48@0:8@16@24@32@40
@"NSArray"
@"DMDActivationPredicateObserver"
@"<DMDActivationPredicateObserverDelegate>"
v24@0:8@"DMDActivationPredicateObserver"16
i16@0:8
v20@0:8i16
@"<DMDActivationPredicateObserverManagerDelegate>"
@"NSMutableDictionary"
@"NSObject<OS_os_transaction>"
B68@0:8@16@24@32d40Q48B56^@60
B32@0:8Q16^@24
^v24@0:8Q16
B48@0:8@16Q24@32^@40
@40@0:8@16d24^@32
@40@0:8@16d24Q32
v24@0:8@"DMDAppLifeCycle"16
B40@0:8@16@24^@32
B24@0:8^@16
v40@0:8@16@24@?32
v48@0:8@16@24Q32@40
Q24@0:8@16
B40@0:8Q16@24^@32
@"NSObject<OS_dispatch_queue>"
@"DMFOSStateHandler"
v40@0:8@16q24@?32
v52@0:8@16@24q32B40@?44
@"FBSDisplayLayoutMonitor"
@32@0:8@16Q24
@"NSPointerArray"
@"NSOperationQueue"
@"CATStateMachine"
v32@0:8@16@24
v20@0:8B16
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
@"NSProgress"
@24@0:8@?16
@?16@0:8
@"CATOperation"32@0:8@"DMDPayloadContext"16^@24
v32@0:8@"DMDActivationPredicateObserverManager"16@"NSString"24
v32@0:8@"DMDConfigurationSourceController"16@?<v@?@"NSDictionary"@"NSError"@?<v@?@"NSError">>24
@"NSArray"32@0:8@"DMDEngineDatabaseProcessingOperation"16@"NSString"24
@"<DMDRemoteAssetResolver>"32@0:8@"DMDEngineDatabaseProcessingOperation"16@"NSString"24
v32@0:8@"DMDEngineRegisterConfigurationSourceOperation"16@"<DMDConfigurationSource>"24
@"DMDPolicyPersistence"
@"<DMDConfigurationEngineDelegate>"
@"NSObject<DMDDeviceStateProvider>"
@"NSObject<DMDTaskOperationProvider>"
@"DMDActivationPredicateObserverManager"
@"DMDConfigurationDatabase"
@"CATOperationQueue"
@"NSError"
@"DMDEngineDatabaseInitializationOperation"
@"CATOperation"
@"DMDEventSubscriptionManager"
v24@0:8@"<DMDRemoteAssetResolutionContext>"16
@"<DMDConfigurationOrganizationControllerDelegate>"
@"CATTaskRequest"32@0:8@"DMDPayloadContext"16^@24
@"NSDictionary"32@0:8@"CATTaskResultObject"16@"DMDPayloadContext"24
v24@0:8@"NSString"16
@"NSXPCListenerEndpoint"16@0:8
v24@0:8@"NSXPCListenerEndpoint"16
@"DMFReportingRequirements"16@0:8
v24@0:8@"DMFReportingRequirements"16
@"<DMDRemoteAssetResolutionContext>"
@"<DMDConfigurationSourceControllerDelegate>"
@"CATSerialOperationQueue"
@"DMDConfigurationSourceRepresentation"
@"NSXPCListenerEndpoint"
@"DMFReportingRequirements"
v24@0:8@?16
v32@0:8@16@?24
@"DMDConfigurationSourceController"
@"NSXPCConnection"
@48@0:8@16@24@32^@40
@"DMFCreateConfigurationOrganizationRequest"
v48@0:8@16@24@32^v40
@56@0:8@16@24@32@40^@48
@"<DMDEngineDatabaseProcessingOperationDelegate>"
@"<DMDTaskOperationProvider>"
@"DMFDeactivateConfigurationOrganizationRequest"
@"DMFFetchDeclarationsRequest"
@"<DMDEngineRegisterConfigurationSourceOperationDelegate>"
@"DMFRegisterConfigurationSourceRequest"
@"DMFSetDeclarationsRequest"
@"DMFUpdateEnqueuedCommandsRequest"
@"DMFUpdateDeclarationsRequest"
@"NSNumber"
@"NSTimer"
@"NSDictionary"
@"NSDate"
@32@0:8@16@?24
@"DMDEventReportingSchedule"
v40@0:8@16Q24@?32
Q32@0:8^d16@24
@20@0:8i16
@"DMDAppMetadata"
B32@0:8@16^@24
B28@0:8B16@20
v32@0:8@16q24
@"NSManagedObjectID"
@"DMDPayloadContext"
v72@0:8q16@24@32Q40@48@56@?64
B80@0:8q16@24@32Q40@48@56@64@72
@"NSMapTable"
@"NSManagedObjectContext"
@"NSPersistentContainer"
v32@0:8@"DMFPolicyRegistration"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
@"CEMEventSubscriptionDeclaration"
v32@0:8@16Q24
@"DMDTaskServerDelegate"
@"NSXPCListener"
@"DMDTaskServerListenerDelegate"
@"DMDPolicyServerListenerDelegate"
v24@0:8Q16
@36@0:8@16B24^@28
@"PBSOSUpdateDownload"
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v32@0:8@"PBSOSUpdateManagerClient"16@"PBSOSUpdateScanOptions"24
v48@0:8@"PBSOSUpdateManagerClient"16@"PBSOSUpdateScanOptions"24@"PBSOSUpdateDescriptor"32@"NSError"40
v40@0:8@"PBSOSUpdateManagerClient"16@"PBSOSUpdateDescriptor"24@"NSError"32
v32@0:8@"PBSOSUpdateManagerClient"16@"PBSOSUpdateDescriptor"24
v32@0:8@"PBSOSUpdateManagerClient"16@"PBSOSUpdateDownload"24
v40@0:8@"PBSOSUpdateManagerClient"16@"PBSOSUpdateDownload"24@"NSError"32
@"PBSOSUpdateManagerClient"
@"DMDTaskOperationContext"16@0:8
v24@0:8@"DMDTaskOperationContext"16
@"DMDConfigurationEngine"16@0:8
v24@0:8@"DMDConfigurationEngine"16
@"NSSet"16@0:8
@"NSArray"16@0:8
@"DMDTaskOperationContext"
@"DMDConfigurationEngine"
I16@0:8
v20@0:8I16
B40@0:8@16@24@32
@"CATTaskOperation"48@0:8@"CATTaskServer"16@"CATTaskSession"24@"CATTaskRequest"32^@40
v40@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSError"32
B40@0:8@"CATTaskServer"16@"CATTaskSession"24@"CATTransport"32
v48@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSString"32@"NSDictionary"40
v40@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSOperation"32
v32@0:8@"CATTaskServer"16@"CATTaskSession"24
v24@0:8@"CATTaskServer"16
#32@0:8@16^@24
#32@0:8@"CATTaskRequest"16^@24
v40@0:8@"CATOperation"16@"DMDTaskOperationContext"24@"DMDConfigurationDatabase"32
@52@0:8@16I24@28@36^@44
@24@0:8Q16
@"DMDDeviceStateObserver"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"CATTaskServer"
v24@0:8@"CEMEventBase"16
v24@0:8@?<v@?@"NSArray">16
@"DMDEventStreamEvent"24@0:8@"NSDate"16
v32@0:8Q16@24
^{__CFUserNotification=}16@0:8
v24@0:8^{__CFUserNotification=}16
d16@0:8
v24@0:8d16
^{__CFUserNotification=}
@"NSUUID"
v32@0:8^{__CFUserNotification=}16Q24
@36@0:8@16B24@28
@28@0:8^{__SecCertificate=}16B24
@44@0:8@16B24@28@36
Request validation failed for installing profile: %{public}@
Request validation failed for removing profile: %{public}@
font asset data is nil
image asset data is nil
Request validation failed for setting policy: %{public}@
Request validation failed for removing policy: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ failed checking status of Usage Tracking monitor with budget identifier: %{public}@, error: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ succeeded checking status of Usage Tracking monitor with budget identifier %{public}@, expired notification times: %{public}@, remaining time: %{public}@ seconds
Predicate type: %{public}@ with unique identifier: %{public}@ evaluated predicate: %{public}@ for Usage Tracking monitor with identifier: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ failed stopping Usage Tracking monitor with budget identifier: %{public}@, error: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ succeeded stopping Usage Tracking monitor with budget identifier: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ failed extracting budget type from budget type identifier: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ cannot have budget type: %{public}@ and budgeted identifiers count: %lu
Predicate type: %{public}@ with unique identifier: %{public}@ cannot have multiple budgets for day: %{public}@ 
Predicate type: %{public}@ with unique identifier: %{public}@ extracted calendar identifier: %{public}@, budget type: %{public}@, budgeted identifiers: %{public}@, notification times: %{public}@, budget schedule: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ failed starting usage monitor with budget identifier: %{public}@, error: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ succeeded starting usage monitor with budget identifier: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ evaluated predicate: %d, expired notification times: %{public}@, next start date: %{public}@, next end date: %{public}@, now: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ failed to extract predicate with payload calendar identifier: %{public}@, payload notifications times: %{public}@, payload start day: %{public}@, payload start time: %{public}@, payload end day: %{public}@, payload end time: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ extracted calendar identifier: %{public}@, notifications times: %{public}@, start day: %ld, start hour: %ld, start minute: %ld, start second: %ld, end day: %ld, end hour: %ld, end minute: %ld, end second: %ld
Predicate type: %{public}@ with unique identifier: %{public}@ will schedule alarm with identifier: %{public}@ to fire at date: %{public}@, epoch time in nano seconds: %lld
Predicate type: %{public}@ with unique identifier: %{public}@ failed to calculate the next curfew boundary date for next start date: %{public}@, next end date: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ evaluated predicate: %d, DSID %{public}@, primary account DSID %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ extracted DSID: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ evaluated predicate: %d, end date: %{public}@, now: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ failed extracting: %{public}@ into a valid end date
Predicate type: %{public}@ with unique identifier: %{public}@ must have an end date
Predicate type: %{public}@ with unique identifier: %{public}@ extracted seconds: %f, end time string: %{public}@, end date: %{public}@, now: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ will schedule alarm to fire at date: %{public}@, epoch time in nano seconds: %lld, now: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ cannot scheduled alarm to fire at date: %{public}@, now: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ evaluated predicate: %d
Received xpc event stream notification (notify matching) with name: %{public}s
Received notifyd budget notification %{public}@
Failed to register for notifyd budget notification %{public}@
Received xpc event stream notification (alarm) with name: %{public}s
Received iCloud account did change notification
Could not read app management plist at path: %{public}@, error: %{public}@
Get bundle identifier for manifest URL from: %{public}@
Get bundle identifier for request: %{public}@
Get bundle identifier for store item identifier: %{public}@
Get metadata for non-enterprise app request: %{public}@
Could not write app management plist, error: %{public}@
Could not write app management plist, unknown error
Set VPN UUID for bundle identifier: %{public}@
Set VPN UUID, configuration, and management information for bundle identifier: %{public}@
Could not set VPN UUID for app: %{public}@, error: %{public}@
Could not set configuration for app: %{public}@, error: %{public}@
Could not set management options for bundle identifier: %{public}@, error: %{public}@
Set state: %{public}@, for bundle identifier: %{public}@
Advance transient app states
Could not remove management information for bundle identifier: %{public}@, error: %{public}@
Could not set state to %{public}@ for bundle identifier: %{public}@, error: %{public}@
Could not set management information for bundle identifier: %{public}@, error: %{public}@
Clean up stale app states
Observed change in life cycle of bundle identifier: %{public}@
Could not set new state: %{public}@, for bundle identifier: %{public}@, error: %{public}@
Set metadata for bundle identifier: %{public}@
Could not write management info to disk for bundle identifier: %{public}@
Get metadata for manifest URL from: %{public}@
Resume app installation for bundle identifier: %{public}@
Install device licensed app for request: %{public}@
Install user licensed app for request: %{public}@
Install free app for request: %{public}@
Add termination assertion for bundle identifier: %{public}@
Remove termination assertion for bundle identifier: %{public}@
Send app store request for bundle identifier: %{public}@, store item identifier: %{public}@, type: %{public}@, download: %{public}@
Set configuration: %{public}@, for bundle identifier: %{public}@
Feedback is not a dictionary for bundle identifier: %{public}@
Set feedback: %{public}@, for bundle identifier: %{public}@
Get metadata for bundle identifier: %{public}@, store item identifier: %{public}@
Get metadata with device lookup for bundle identifier: %{public}@, store item identifier: %{public}@
Could not get metadata: %{public}@
Update foreground bundle identifiers
Updating foreground app for request: %{public}@, so will take termination assertion
We will need to restart the app after updating bundle identifier: %{public}@
Start updating enterprise app with manifest URL from: %{public}@
Start updating non-enterprise app for request: %{public}@, new install request: %{public}@
Update ended for bundle identifier: %{public}@
Restart app with bundle identifier: %{public}@
Could not restart app: %{public}@, error: %{public}@
App requests must have only one of bundle identifier, store item identifier, or manifest URL
%{public}@: Failed to initialize configuration payload for asset: %{public}@
%{public}@: Asset class (%{public}@) does not implement %{public}@
%{public}@: Failed to initialize install operation for asset payload: %{public}@
%{public}@: Asset will install
%{public}@: Asset install operation failed: %{public}@
%{public}@: Installed asset successfully
%{public}@: Uninstalled asset did remove successfully
%{public}@: Failed to initialize remove operation for installed asset payload: %{public}@
%{public}@: Installed asset will be removed
%{public}@: Failed to remove asset: %{public}@
%{public}@: Removed asset successfully
DMFBeginTransactionRequest is deprecated please use DMDActivityTransactionOperation instead
%{public}@: Failed to initialize configuration payload for command: %{public}@
%{public}@: Failed to create operation from request for command execution: %{public}@
%{public}@: Failed to create request for command execution: %{public}@
%{public}@: Execute command will start
%{public}@: Execute command failed: %{public}@
%{public}@: Executed command successfully
Failed to initialize command payload for command removal %{public}@: %{public}@
Command did remove successfully %{public}@
Failed to send %lu events from subscription manager
Successfully sent %lu events from subscription manager
Engine did resume
Engine will suspend
Engine enqueuing operation to set declarations from %{public}@
Engine enqueuing operation to update declarations from %{public}@
Engine enqueuing operation to fetch declarations for %{public}@
Failed to clear failed state for existing declarations: %{public}@
process status operation failed with error: %{public}@
Failed to fetch payload metadata corresponding to %{public}@
Failed to save subscription to database %{public}@
Failed to fetch registration corresponding to %{public}@
Failed to delete subscription from database %{public}@
Could not fetch organizations from database: %{public}@
Could not find organization with identifier: %{public}@
Failed to save event in database: %{public}@
Engine will suspend due to error: %{public}@
Engine enqueuing operation to process pending declarations in database
Database processing operation failed with error: %{public}@
Failed to load organizations from database: %{public}@
Failed to update subscription registrations: %{public}@
Failed to load organizations from database while scrubbing policy orphans: %{public}@
Failed to fetch declarations while scrubbing policy orphans %{public}@
Declaration %{public}@ does not belong to an organization
Found policies orphaned from any known organization. Removed identifiers %{public}@
Found policies orphaned from any known declarations. Removed identifiers %{public}@
failed to fetch declarations pending status update %{public}@
failed to update status %{public}@
failed to fetch declarations to update their lastStatusUpdateTimestamp %{public}@
failed to save last updated timestamp in database %{public}@
declaration update operation failed with error: %{public}@
status update operation failed with error: %{public}@
Failed to fetch queued events for organization '%{public}@': %{public}@
failed to send event %{public}@
failed to delete events from database: %{public}@
Registering new configuration source %{public}@
Re-registering configuration source %{public}@
%{public}@: Failed to initialize configuration payload for configuration install: %{public}@
%{public}@: Failed to create request for configuration install: %{public}@
%{public}@: Failed to create operation from request for configuration install for %{public}@
%{public}@: Configuration will install
%{public}@: Configuration failed install: %{public}@
%{public}@: Configuration did install successfully 
%{public}@ does not respond to %{public}@
%{public}@: Failed to initialize configuration payload for configuration remove: %{public}@
%{public}@: %{public}@ does not conform to %{public}@
%{public}@: Uninstalled configuration did remove successfully
%{public}@: Failed to create request for installed configuration remove: %{public}@
%{public}@: Installed configuration did remove successfully
%{public}@: Failed to create operation from request for installed configuration removal: %{public}@
%{public}@: Installed configuration will remove
%{public}@: Configuration failed remove: %{public}@
%{public}@: Configuration did remove successfully
%{public}@: Failed to initialize configuration payload for configuration replace: %{public}@
%{public}@: Failed to create request for configuration replace: %{public}@
%{public}@: Failed to create configuration replace operation for request: %{public}@
%{public}@: Configuration will replace
%{public}@: Configuration failed replace: %{public}@
%{public}@: Configuration did replace successfully
%{public}@ failed to initate connection to resolve asset %{public}@: %{public}@
%{public}@ failed to resolve asset %{public}@: %{public}@
%{public}@ successfully resolved asset %{public}@
Reporting status to %{public}@
Reporting events to %{public}@
delegate does not conform to %{public}@
%{public}@ failed to fetch events %{public}@
%{public}@ skipping events because there are no updates to report
%{public}@ failed to send events remote proxy could not be created: %{public}@
%{public}@ failed to send events: %{public}@
%{public}@ successfully sent events
%{public}@ failed to fetch status update %{public}@
%{public}@ skipping status update because there are no updates to report
%{public}@ failed to send status updates remote proxy coun't be created: %{public}@
%{public}@ failed to send status updates: %{public}@
%{public}@ successfully sent status updates
Connected successfully to anonymous connection
Connected successfully to named connection
Detected network change
DMFEndTransactionRequest is deprecated please use DMDActivityTransactionOperation instead
failed to fetch organizations of type 
%{public}@
: %{public}@
failed to fetch existing organizations with identifier 
%{public}@
: %{public}@
organization of type %{public}@ already exists
failed to load persistent stores: %{public}@
successfully loaded configuration database
removing legacy database...
failed to remove legacy database: %{public}@
deleted legacy database
unable to load persistent store %{public}@: %{public}@
successfully loaded persistent store: %{public}@
failed exclude persistent store from backup %{public}@: %{public}@
persistent store %{public}@ has not been fixed up yet
checking database for deprecated class
configuration database has been deprecated, destroying persistent stores and reloading
unable to remove persistent store %{public}@: %{public}@
%{public}@ failed to fetch configuration organizations: %{public}@
Deleting deactivated organization %@
%{public}@ preprocessing failed: %{public}@
Processing operation failed to commit changes: %{public}@
Failed to preproccess database while fetching all payloads: %{public}@
%{public}@: Failed to deserialize configuration engine model: %{public}@
Failed to fetch asset with identifier (%{public}@): %{public}@
Processing: Failed to fetch commands to execute %{public}@
%{public}@: Cancelling enqueued %{public}@ so we can enqueue an execute command operation
Processing: Failed to fetch commands to remove %{public}@
%{public}@: Cancelling enqueued %{public}@ so we can enqueue an remove command operation
Processing: Failed to fetch commands to delete %{public}@
--- Commands pending execution ---
--- Commands pending removal ---
--- Commands pending deletion ---
%{public}@
--- Enqueued command action operations ---
Failed to process activations: %{public}@
Failed to parse activation payload (%{public}@): %{public}@
Activation predicate with unique identifier %{public}@ for organization (%{public}@) is nil
Failed to evaluate activation predicate with unique identifier %{public}@ for organization (%{public}@): %{public}@ using last predicate evaluation %d
Failed to create activation predicate observer with unique identifier %{public}@ for organization (%{public}@) using last predicate evaluation %d
Failed to fetch available configurations for organization (%{public}@): %{public}@
Unknown activation type: %{public}@
Processing: Failed to fetch declarations pending removal %{public}@
Remove %{public}@: Declaration remove operation already enqueued, skipping
Remove %{public}@: Cancelling enqueued %{public}@ so we can enqueue a remove operation
Enqueued remove operation: %{public}@
Install %{public}@: Declaration install operation already enqueued, skipping
Install %{public}@: Cancelling enqueued %{public}@ so we can enqueue an install operation
Enqueued configuration install operation: %{public}@
Install %{public}@: Cancelling enqueued %{public}@ so we can enqueue an asset install operation
Enqueued asset install operation: %{public}@
Processing: Failed to fetch declarations pending install %{public}@
Processing: Failed to fetch declarations pending delete %{public}@
--- Declarations pending install ---
--- Declarations pending removal ---
--- Declarations pending deletion ---
--- Enqueued declaration action operations ---
Failed to fetch payload metadata for organization %{public}@
Refreshed %lu status items for organization %{public}@
Failed to fetch existing declarations: %{public}@
Failed to initialize declarations: %{public}@
Start set declarations for %{public}@
Declaration already present, skipping: %{public}@
Failed to save changes: %{public}@
Failed to instantiate payload metadata from payload dictionary: %{public}@
Failed to fetch existing declarations for removal: %{public}@
Marking configuration for removal: %{public}@
Failed to fetch existing declarations for update: %{public}@
Failed to initialize declarations for update: %{public}@
Declaration already installed, skipping: %{public}@
Unknown event stream frequency %{public}@, defaulting to Daily
Unknown event stream type %{public}@, skipping
Could not delete feedback for bundle identifier: %{public}@
fetch-available-os-updates starting
fetch-available-os-updates: product version = %@, use delay = %@
fetch-available-os-updates done
fetch-os-update-status starting
fetch-os-update-status done
Start installing enterprise app with manifest URL from: %{public}@
Start installing non-enterprise app for request: %{public}@
Could not serialize profile: %{public}@
Could not retrieve restrictions dictionary from payload: %{public}@
Could not process restriction heuristics for payload: %{public}@
Could not apply restrictions: %{public}@
Error excluding %{public}@ from backup. Path does not exist.
Error excluding %{public}@ from backup %{public}@
Start redeeming app with bundle identifier: %{public}@
Start installing system app with bundle identifier: %{public}@
Error attempting SINF swap: %{public}@
Error getting app: %{public}@, %{public}@
Prompting user to install app: %{public}@
Show our prompt to sign in
Show store prompt to sign in
Show user installation failure prompt
Set redemption code for bundle identifier: %{public}@
Set unused redemption code for bundle identifier: %{public}@
Update management information for bundle identifier: %{public}@
Could not update management info for bundle identifier: %{public}@, error: %{public}@
Unknown device type %{private}@
Failed to get profiles system group container
Failed to get managed books system group container
System group container for %{public}@ path is %{public}s
Error getting system group container for %{public}@: %llu
Payload has invalid type prefix (%{public}@) defaulting to generic payload metadata
Failed to fetch organization matching identifier (%{public}@): %{public}@
Could not load effective policy persistent store, the device is locked, unlock it and this should never happen again.
Could not load effective policy persistent store, will destroy and try a clean store: %{public}@
Failed to load persistent store %{public}@: %{public}@
Failed to destroy persistent store %{public}@: %{public}@
Could not exclude persistent store from backup: %{public}@
Error fetching existing policy registration: %{public}@
Updating existing registration %{public}@ with identifier %{public}@
Adding new registration %{public}@ with identifier %{public}@
Error saving policy registration %{public}@: %{public}@
Error fetching existing policy value: %{public}@
Error fetching existing policies: %{public}@
Error saving policies: %{public}@
Updating existing policy %{public}@ of type %{public}@ identifier %{public}@
Adding new policy %{public}@ of type %{public}@
Successfully removed policy types %{public}@ for declaration %{public}@
Could not remove policies types %{public}@ for declaration %{public}@: %{public}@
Error fetching orphanied policies: %{public}@
Removing orphaned policy %{public}@ in organization %{public}@
Successfully removed orphaned policy types %{public}@ for declarations %{public}@
Could not remove orphaned policies types %{public}@ for declarations %{public}@: %{public}@
Posting notification for registration %{public}@
Error fetching registrations to notify: %{public}@
Client %@ does not have required com.apple.private.dmd.policy entitlement
Beginning power assertion, operation: %{public}@
Ending power assertion, operation: %{public}@
unable to register configuration source because client doesn't have a valid entitlement for application-identifier
Could not remove VPN UUID for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove configuration for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove management information for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Remove app with bundle identifier: %{public}@
Cancel app installation with bundle identifier: %{public}@
Start uninstalling app with bundle identifier: %{public}@
Cancel app update with bundle identifier: %{public}@
Could not remove restrictions: %{public}@
remove-os-update starting
remove-os-update done
schedule-os-update starting, request = %{public}@
schedule-os-update done, result = %@
Shut down.
available-os-updates requested=%@ useDelay=%@
available-os-updates no prior download. Cannot provide specific product key.
could not get current software update status: %{public}@
remove software update started
remove software update failed: %{public}@
remove software update failed: no error returned
Operation will start: %{public}@
Operation will finish: %{public}@
Operation did finish: %{public}@
Starting
Could not get operation class for request: %{public}@
Received request: %{public}@, from client: %{public}@
Connected %{public}@
Disconnected %{public}@
Invalidated %{public}@
Interrupted %{public}@: %{public}@
Notification %{public}@: %{public}@ %{public}@
Add operation: %{public}@
Declaration engine did resume
Declaration engine did suspend
Notified of locale change. Exiting when clean.
Resume update for bundle identifier: %{public}@
Start updating app for request: %{public}@
Show user update failure prompt
Could not mark app state as %{public}@ for bundle identifier: %{public}@
Not displaying notification in limited app mode
Start user notification: %{public}@
Adding user notification: %{public}@
Could not get notification ref for user notification.
Could not get run loop source for user notification: %{public}@
User notification started: %{public}@
Removing user notification: %{public}@
User notification ended: %{public}@
Could not get file information
Memory mapping failed
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>17A405001</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleDisplayName</key>
<string>dmd</string>
<key>CFBundleExecutable</key>
<string>dmd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.dmd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundlePackageType</key>
<string>com.apple.product-type.tool</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>AppleTVSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>25.6</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string></string>
<key>DTPlatformName</key>
<string>appletvsimulator</string>
<key>DTPlatformVersion</key>
<string>12.2</string>
<key>DTSDKBuild</key>
<string>16L200</string>
<key>DTSDKName</key>
<string>appletvsimulator12.2</string>
<key>DTXcode</key>
<string>1020</string>
<key>DTXcodeBuild</key>
<string>10P70r</string>
<key>MinimumOSVersion</key>
<string>12.2</string>
<key>NSAppTransportSecurity</key>
<dict>
<key>NSAllowsArbitraryLoads</key>
<false/>
</dict>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
<integer>3</integer>
<integer>4</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>application-identifier</key>
<string>com.apple.dmd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.BTServer.allowRestrictedServices</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
<string>vinyl-standalone</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.GAX.SPI</key>
<true/>
<key>com.apple.MobileInternetSharing.allow</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.AutoWake.xml</string>
<string>preferences.plist</string>
</array>
<key>com.apple.appletv.pbs.allow-active-application</key>
<true/>
<key>com.apple.appletv.pbs.osupdate-service-access</key>
<true/>
<key>com.apple.appstored.install-apps</key>
<true/>
<key>com.apple.appstored.private</key>
<true/>
<key>com.apple.appstored.xpc.updates</key>
<true/>
<key>com.apple.apsd.ios-device-push-token</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.bulletinboard.settings</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboard.shutdown</key>
<true/>
<key>com.apple.frontboard.wipedevice</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.ibooks.BLService.private</key>
<true/>
<key>com.apple.icloud.FindMyDevice.FindMyDeviceHelperXPCService.access</key>
<true/>
<key>com.apple.icloud.findmydeviced.access</key>
<true/>
<key>com.apple.itunesstored.metrics</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.escrow.create</key>
<true/>
<key>com.apple.locationd.authorizeapplications</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.lsapplicationproxy.deviceidentifierforvendor</key>
<true/>
<key>com.apple.managedconfiguration.mdmd-access</key>
<true/>
<key>com.apple.managedconfiguration.mdmuserd-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled.configurationprofiles</key>
<array>
<string>Inspection</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>SilentNonUIInstallation</string>
<string>UIInstallation</string>
<string>CloudLockedRemoval</string>
</array>
<key>com.apple.managedconfiguration.profiled.get</key>
<array>
<string>MachineInfo</string>
<string>ManagedApplications</string>
<string>NetworkExtension</string>
<string>WiFiNetworks</string>
</array>
<key>com.apple.managedconfiguration.profiled.provisioningprofiles</key>
<array>
<string>Installation</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>Validation</string>
</array>
<key>com.apple.managedconfiguration.profiled.set</key>
<array>
<string>ActivationLock</string>
<string>ActivationRecord</string>
<string>Certificates</string>
<string>ClientRestrictions</string>
<string>CloudConfiguration</string>
<string>Passcode</string>
<string>Safari</string>
<string>UserSettings</string>
</array>
<key>com.apple.managedconfiguration.profiled.usercompliance</key>
<true/>
<key>com.apple.managedconfiguration.teslad-access</key>
<true/>
<key>com.apple.mkb.usersession.delete</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.mkb.usersession.loginwindow</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.bubblepop</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>DeviceClass</string>
<string>ProductType</string>
<string>ProductVersion</string>
<string>BuildVersion</string>
<string>SerialNumber</string>
<string>ModelNumber</string>
<string>UniqueDeviceID</string>
<string>UserAssignedDeviceName</string>
<string>DiskUsage</string>
<string>TelephonyCapability</string>
<string>CellularDataCapability</string>
<string>PersonalHotspotCapability</string>
<string>PhoneNumber</string>
<string>EthernetMacAddress</string>
<string>BluetoothAddress</string>
<string>WifiAddress</string>
<string>WifiAddressData</string>
<string>MobileSubscriberCountryCode</string>
<string>MobileSubscriberNetworkCode</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.donotdisturb.state.request.client-identifiers</key>
<string>com.apple.dmd</string>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/ActivationPrivateKey</string>
<string>NULL/DevicePrivateKey</string>
<string>NULL/DeviceCertificate</string>
<string>NULL/DeviceName</string>
<string>com.apple.mobile.backup/LastCloudBackupDate</string>
</array>
<key>com.apple.private.lockdown.finegrained-set</key>
<array>
<string>NULL/DeviceName</string>
</array>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>Uninstall</string>
<string>Lookup</string>
<string>CopyDiskUsageForLaunchServices</string>
<string>UninstallForLaunchServices</string>
<string>InstallForLaunchServices</string>
</array>
<key>com.apple.private.sysdiagnose</key>
<true/>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.usage-tracking</key>
<true/>
<key>com.apple.remotemanagementd.management-state</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
<string>systemgroup.com.apple.media.books.managed</string>
</array>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.wipedevice</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
<string>com.apple.preferences</string>
</array>
</dict>
</plist>
