init
middleware
controller
playerRequest
tracklistRange
rangeFromTracklistRange:
playQueueIdentifiersForRange:
setPlayQueueIdentifiersFuture:
playQueueIdentifiersFuture
onInvalid:
arrayWithObjects:count:
isCancelled
finish
count
arrayWithCapacity:
contentItemForIdentifier:
addObject:
stringByAppendingString:
replaceObjectAtIndex:withObject:
MPCErrorWithDomain:code:debugDescription:
onCompletion:
enumerateObjectsUsingBlock:
arrayByAddingObject:
qualityOfService
MPCErrorWithDomain:code:underlyingError:debugDescription:
onSuccess:
onFailure:
playingIdentifier
setPlayingIdentifierFuture:
playingIdentifierFuture
cancel
finishWithError:
alloc
firstObject
appendSection:
objectAtIndexedSubscript:
collectionIdentifier
isEqualToString:
collectionInfo
isEqualToDictionary:
appendItem:
setQueueContentItems:
identifier
setPlayingIndexPath:
enumerateItemsUsingBlock:
_loadPlayingIdentifierWithCompletion:
_loadItemsWithCompletion:
stringWithFormat:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
error
invalidationHandler
setInvalidationHandler:
invalidationObservers
timeoutDescription
initWithMiddleware:playerRequest:
execute
.cxx_destruct
setMiddleware:
setPlayerRequest:
_invalidationHandler
_invalidationObservers
_middleware
_playerRequest
_playQueueIdentifiersFuture
_playingIdentifierFuture
isValidReportingEvent
reportingEventType
setError:
setupDuration
setSetupDuration:
_error
_setupDuration
flattenedGenericObject
copy
_createStoreRequestContext
defaultCenter
removeObserver:name:object:
endAutomaticallyRefreshingLease
sharedController
stopLeaseSession:completion:
dealloc
mainTitle
type
song
album
title
artist
name
tvEpisode
season
show
identifiers
storeAdamID
storePurchasedAdamID
storeSubscriptionAdamID
volumeNormalization
setSoundCheckVolumeNormalization:
setLoudnessInfoVolumeNormalization:
composer
copyrightText
duration
movie
_shouldRememberBookmarkTime
storeItemInt64ID
genre
isAssetLoaded
playerItem
status
_playerItemDurationIfAvailable
isExplicitSong
isRadioPlayback
itemError
hasCommonIdentifierWithIdentifierSet:
_storeRequestContext
_householdID
homeSharingAsset
localFileAsset
storeAsset
hasVideo
isArtistUploadedContent
identityStore
identity
getPropertiesForUserIdentity:completionHandler:
delegatedIdentity
DSID
unsignedLongLongValue
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
isDelegated
setItemError:
initWithInitialItemType:
newHierarchyTokenFromParentToken:
sharedStatusController
getSubscriptionStatusForUserIdentity:withCompletionHandler:
initWithICSubscriptionStatus:
shouldUseLease
setStoreDialogResponseHandler:
copyWithBlock:
getLeaseSessionWithRequestContext:completionHandler:
endpointType
preferredNetworkPolicyType
setAllowsHLSContent:
setPrefersVideoContent:
setAssetCacheProvider:
setFileAsset:
setGenericObject:
setItemIdentifiers:
setPrefersHighQualityContent:
setRadioPlayback:
setStoreAsset:
setAccountID:
setHouseholdID:
assetSourceStoreFrontID
setAssetSourceStorefrontID:
storefrontIdentifier
setStorefrontID:
setHomeSharingAsset:
setDelegatedAccountID:
setMaxConcurrentOperationCount:
setName:
setQualityOfService:
setAssetLoadProperties:
setRequirePreferredAssetQuality:
setResponseHandler:
addOperation:
assetURL
hasValidAsset
accountID
delegatedAccountID
storefrontID
setRequestType:
setStoreRadioAdamID:
sharedCache
cachedResponseForRequest:
assetLoadResultWithStoreAssetPlaybackResponse:assetLoadProperties:error:
sharedBagProvider
mediaTypeNetworkConstraintsFromURLBag:
objectForKey:
getBagForRequestContext:withCompletionHandler:
setNetworkConstraints:
isSubscriptionRequired
hasPlaybackCapability
setRequestContext:
shouldUseAccountLessStreaming
setOperationType:
setSubscriptionLeaseSession:
assetProtectionType
purchaseBundleDictionary
setObject:forKey:
protectedContentSupportStorageFileURL
isHLSAsset
isCloudStreamingAsset
numberWithBool:
isHomeSharingAsset
storeCloudID
numberWithUnsignedLongLong:
numberWithLongLong:
initWithCapacity:
redownloadParameters
userAgent
accountIdentifier
leaseStatus
hasOnlinePlaybackKeys
hasOfflinePlaybackKeys
requestContext
initWithRequestContext:
performPlaybackRequest:completionHandler:
assetQualityType
allowsAssetCaching
isFileURL
assetPathExtension
getPlaybackAssetCacheDestinationURL:purchaseBundleDestinationURL:forGenericObject:assetQualityType:pathExtension:
_rtcReportingServiceIdentifierWithAssetURL:
URLAssetWithURL:options:
dataWithPropertyList:format:options:error:
writeToURL:options:error:
initWithBlock:
relativePath
setFilePath:
setQualityType:
setNonPurgeable:
setProtectionType:
setPurchaseBundleFilePath:
initWithIdentifiers:block:
setPlaybackAssetCacheFileAsset:forGenericObject:withCompletionHandler:
defaultManager
removeItemAtURL:error:
mpc_addDownloadCompletionHandler:
resourceLoader
setDelegate:queue:
playerItemWithAsset:
metadataIdentifiers
initWithIdentifiers:
addOutput:
setPlayerItem:
willBecomeActivePlayerItemHandler
streamingKeyCertificateURL
streamingKeyServerURL
isiTunesStoreStream
_subscriptionLeaseStatusDidChangeNotification:
addObserver:selector:name:object:
_updateAutomaticSubscriptionLeaseRefresh
suzeLeaseID
initWithRequestContext:leaseID:mediaType:
startLeaseSessionWithConfiguration:completion:
_suzeLeaseSessionRenewDidFailNotification:
startEnforcementWithPlayerItem:fromAVItem:
userInfo
mutableCopy
domain
code
persistentID
mediaLibrary
itemWithPersistentID:verifyExistence:
deviceLibraryPersistentID
cloudUniversalLibraryID
storeCloudAlbumID
notePlaybackFinishedByHittingEnd
durationIfAvailable
_handlePlaybackFinishedTime:didFinishByHittingEnd:
flushNowPlayingCaches
shouldShowComposer
isMainThread
shouldPlaybackRequireOnlineKeys
setShouldRequireLeaseAcquisition:
serverError
reevaluateType
_applyLoudnessInfo
shouldReportPlayEvents
_radioStation
allowsItemLiking
performWithoutEnforcement:
radioStationID
radioStationHash
radioStationStringID
lyrics
text
hasStoreLyrics
queueIdentifier
playbackInfoForIdentifier:
_startTime
_stopTime
numberWithDouble:
doubleValue
durationFromExternalMetadata
_bookmarkTime
addEntriesFromDictionary:
userRating
_updateBookmarkTime:isCheckpoint:
setPlaybackCheckpointCurrentTime:
setPlaybackFinishedTime:
sharedApplication
endBackgroundTask:
beginBackgroundTaskWithExpirationHandler:
_updateHasBeenPlayedWithElapsedTime:completion:
setPlaybackStoppedTime:
_currentPlaybackRateDidChange:
stationAllowsItemLiking
stationID
setStationID:
stationHash
setStationHash:
stationStringID
setStationStringID:
setStoreAdamID:
setLikeState:
performWithResponseHandler:
tasteTypeForModel:
_willBecomeActivePlayerItem
beginAutomaticallyRefreshingLease
_willResignActivePlayerItem
artworkCatalog
equivalencySourceAdamID
initWithPlaybackRequestEnvironment:
jingleTimedMetadata
requestingBundleIdentifier
requestingBundleVersion
isAlwaysLive
shouldReportPlayEventsToStore
isPrivateListeningEnabled
isSiriInitiated
didAttemptToLoadAsset
date
setShouldIncludeDeviceGUID:
setCertificateURL:
setKeyServerURL:
setLeaseActionType:
configureUsingAssetResourceLoadingRequest:
setITunesStoreRequest:
setRentalID:
setSkippedRentalCheckout:
initWithObjectsAndKeys:
finishAssetResourceLoadingRequest:withError:
postNotificationName:object:userInfo:
urlForBagKey:
resourceLoader:shouldWaitForLoadingOfRequestedResource:
_reloadTimedMetadataRequest
_updateJingleTimedMetadata
_postInvalidationNotifications
initWithGenericObject:timedMetadataGroups:storeRequestContext:
setPreviousResponse:
setItemProperties:
_timedMetadataResponseDidInvalidateNotification:
results
firstItem
feeder
generateContentIDForItem:
anyObject
length
setSong:
initWithIdentifier:userInfo:
initWithLyrics:userProvided:token:
newOperationWithResponseHandler:
deviceMediaLibrary
_setNeedsPersistedLikedStateUpdate
object
_updatePreventionStatusWithLeaseSession:
asset
statusOfValueForKey:error:
loudnessInfoVolumeNormalization
numberWithFloat:
tracks
countByEnumeratingWithState:objects:count:
isEnabled
assetTrack
mediaType
setLoudnessInfo:
_modelPlaybackPosition
bookmarkTime
setUserSkippedPlayback:
_storeUbiquitousIdentifier
playbackInfo
_expectedStartTimeWithPlaybackInfo:
_expectedStopTimeWithPlaybackInfo:
initWithUbiquitousIdentifier:
setBookmarkTimestamp:
shouldIncrementPlayCountForElapsedTime:startTime:stopTime:
setBookmarkTime:
hasNominalAmountBeenPlayedForElapsedTime:startTime:stopTime:
setHasBeenPlayed:
sharedUbiquitousPlaybackPositionController
persistPlaybackPositionMetadataEntity:isCheckpoint:completion:
initWithModel:
setMediaLibrary:
_utilitySerialQueue
householdIdentifier
playbackPosition
postNotificationName:object:
modelPlayEvent
itemType
radioStation
isRedownloadable
filePath
isNonPurgeable
shouldRememberBookmarkTime
startTime
stopTime
storeUbiquitousIdentifier
_currentPlaybackRate
userSkippedPlayback
items
keySpace
extraAttributes
dataValue
isEqualToData:
hasPendingLeaseAcquisition
leaseState
shouldPreventPlayback
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
outputSequenceWasFlushed:
metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:
leasePlaybackPreventionState
rtcReportingParentHierarchyToken
rtcReportingServiceIdentifier
rtcReportingAssetType
initWithGenericObject:itemProperties:playbackRequestEnvironment:
albumArtist
albumStoreID
artistStoreID
allowsEQ
applyVolumeNormalizationWithSoundCheckEnabled:
externalContentIdentifier
isAssetURLValid
isExplicitTrack
isLikedStateEnabled
isRadioItem
isStreamable
isValidPlayerSubstituteForItem:
loadAssetAndPlayerItem
mediaItem
modelGenericObject
cloudID
cloudAlbumID
albumPersistentID
albumArtistPersistentID
artistPersistentID
genrePersistentID
composerPersistentID
prefersSeekOverSkip
prepareForRate:completionHandler:
stationName
supportsLikedState
libraryLyrics
useEmbeddedChapterData
allowsAirPlayFromCloud
allowsExternalPlayback
resolvePlaybackError:withCompletion:
_handleUpdatedLikedState:completion:
_persistedLikedState
artworkCatalogForPlaybackTime:
mpcReporting_equivalencySourceAdamID
mpcReporting_householdID
mpcReporting_identityPropertiesLoader
mpcReporting_jingleTimedMetadata
mpcReporting_requestingBundleIdentifier
mpcReporting_requestingBundleVersion
mpcReporting_shouldUseRelativeTimePositions
mpcReporting_shouldReportPlayEventsToStore
mpcReporting_privateListeningEnabled
mpcReporting_siriInitiated
nowPlayingInfoCenter:lyricsForContentItem:completion:
supportsRadioTrackActions
setSupportsRadioTrackActions:
assetCacheProvider
setAssetSourceStoreFrontID:
setEquivalencySourceAdamID:
genericObject
setPrivateListeningEnabled:
setSiriInitiated:
playbackRequestEnvironment
stationItemLikedState
setStationItemLikedState:
_accessQueue
_allowsAirPlayFromCloud
_subscriptionLeaseSession
_shouldAutomaticallyRefreshSubscriptionLease
_requiresSubscriptionLeaseForPlayback
_shouldUseSubscriptionLease
_suzeLeaseSession
_isAutomaticallyRefreshingSuzeLeaseSession
_firstBecomeActivePlayerItemBlock
_currentGlobalTimedMetadataGroups
_flattenedGenericObject
_flattenedMetadataGenericObject
_metadataGenericObject
_itemProperties
_identityPropertiesLoader
_timedMetadataRequest
_timedMetadataResponse
_isHLSAsset
_isiTunesStoreStream
_streamingKeyCertificateURL
_streamingKeyServerURL
_rtcReportingParentHierarchyToken
_rtcReportingServiceIdentifier
_networkPolicyHandler
_radioPlayback
_leasePlaybackPreventionState
_assetCacheProvider
_assetSourceStoreFrontID
_equivalencySourceAdamID
_genericObject
_jingleTimedMetadata
_mediaLibrary
_privateListeningEnabled
_siriInitiated
_playbackRequestEnvironment
_stationItemLikedState
_downloadCompleteSuccessNotification:
_downloadCompleteFailedNotification:
_notifyCompletionHandlerWithSuccess:error:
completionHandler
setCompletionHandler:
initWithAsset:
_asset
_completionHandler
initWithWritingStyle:
setShouldReportPlayActivityEvents:
setShouldReportAggregateTimePlayActivityEvents:
initWithPlayer:reportingController:
sharedMonitor
addObserver:
networkType
setOffline:
setSBEnabled:
beginObservingSubscriptionStatus
_cloudServiceControllerSubscriptionStatusDidChangeNotification:
removeObserver:
endObservingSubscriptionStatus
modelSong
emptyIdentifierSet
setItemGenericObject:
lyricsID
setLyricsID:
setModelPlayEvent:
featureName
setFeatureName:
recommendationData
setRecommendationData:
newPlayActivityEvent
setEventType:
visibleDuration
setItemEndTime:
recordPlayActivityEvents:forEventSource:
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeTelephonyStatus:
recordLyricsViewEvent:
jinglePlayActivityReportingController
setJinglePlayActivityReportingController:
reportingPlaybackObserver
setReportingPlaybackObserver:
_jinglePlayActivityReportingController
_reportingPlaybackObserver
initWithRequest:
setResults:
_personalizationResponseDidInvalidateNotification:
isValid
_invalidate
initWithRequest:personalizationResponse:
adamIDData
setAdamIDData:
streamFields
setStreamFields:
unpersonalizedContentDescriptors
setUnpersonalizedContentDescriptors:
_personalizationResponse
_adamIDData
_streamFields
_unpersonalizedContentDescriptors
setTitle:
setArtist:
setAlbum:
isExplicitContent
setExplicitContent:
artworkDictionaries
setArtworkDictionaries:
_explicitContent
_title
_artist
_album
_artworkDictionaries
allowsHLSContent
hlsAssetInfo
playlistURL
setAssetURL:
keyServerURL
setStreamingKeyServerURL:
keyCertificateURL
setStreamingKeyCertificateURL:
setITunesStoreStream:
setIsHLSAsset:
setAllowsAssetInfoCaching:
setIsCloudStreamingAsset:
prefersHighQualityContent
prefersVideoContent
numberWithInteger:
fileAssetInfoList
flavorType
indexOfObject:
sortUsingComparator:
setAssetQualityType:
fileExtension
setAssetPathExtension:
fairPlayInfoList
purchaseBundleSinfDictionary
protectionType
setAssetProtectionType:
setSuzeLeaseID:
setPurchaseBundleDictionary:
setAllowsAssetCaching:
updateForPlaybackOfFileAsset:fromResponse:
setWillBecomeActivePlayerItemHandler:
allowsAssetInfoCaching
setIsHomeSharingAsset:
setProtectedContentSupportStorageFileURL:
_allowsAssetCaching
_allowsAssetInfoCaching
_isHomeSharingAsset
_isCloudStreamingAsset
_iTunesStoreStream
_assetPathExtension
_assetProtectionType
_assetQualityType
_assetURL
_protectedContentSupportStorageFileURL
_purchaseBundleDictionary
_suzeLeaseID
_willBecomeActivePlayerItemHandler
defaultStore
activeAccount
uniqueIdentifier
setStoreAccountID:
currentDevice
storeFrontIdentifier
setStoreFrontID:
sharedLoader
loadReportingIdentityPropertiesWithCompletionHandler:
_calloutQueue
_serialWorkQueue
defaultInfo
initWithClientInfo:
deviceInfo
deviceGUID
setDeviceGUID:
setDeviceName:
systemReleaseType
setSystemReleaseType:
setRequestUserAgent:
defaultTimeZone
setTimeZoneName:
currentDeviceDelegateInfo
staticAssets
sharedNetworkPlayabilityMonitor
_allowsCellularPlayback
mediaClip
_currentPreferredStaticAsset
setMediaClip:
previewArtworkCatalog
propertySetWithProperties:
initWithProperties:relationships:
_isVideoAsset
sharedNetworkObserver
isVideoCellularStreamingAllowed
isMusicCellularStreamingAllowed
effectiveNetworkTypeForPlayback
standardUserDefaults
preferredVideosAssetQualityOnWifi
preferredVideosAssetQualityOnCellular
allowsHighQualityMusicStreamingOnCellular
requiredMediaClipProperties
initWithMediaClip:
isCloudItem
_modelGenericObject
_mediaClip
addEngineObserver:
playerID
initWithPlayerID:
setPlaybackQueueDataSource:
setPlaybackEngine:
setLyricsDelegate:
_durationAvailableNotification:
_likedStateChangedNotification:
sharedCommandCenter
becomeActive
isEngineRestoringState
hasInitializedSupportedCommands
_performCommandEvent:completion:
playCommand
hasTargets
removeTarget:action:
addTarget:action:
pauseCommand
stopCommand
togglePlayPauseCommand
nextTrackCommand
previousTrackCommand
playItemInQueueCommand
setPlaybackQueueCommand
registerSupportedQueueType:
registerSupportedCustomQueueIdentifier:
insertIntoPlaybackQueueCommand
removeFromPlaybackQueueCommand
createRadioStationCommand
skipForwardCommand
numberWithInt:
setPreferredIntervals:
skipBackwardCommand
likeCommand
bundleWithIdentifier:
localizedStringForKey:value:table:
setLocalizedTitle:
setLocalizedShortTitle:
dislikeCommand
setInitializedSupportedCommands:
_updateSupportedCommands
registerSpecializedQueueIdentifier:localizedName:queueType:queueParameters:
unregisterSpecializedQueueIdentifier:
invalidatePlaybackQueue
setPlaybackState:
changeRepeatModeCommand
setCurrentRepeatType:
changeShuffleModeCommand
setCurrentShuffleType:
startDate
token
endDate
timeIntervalSinceDate:
playbackEngine
implementation
_playlistManager
itemForContentItemID:
setModelSong:
setVisibleDuration:
reportingController
currentItem
canSeekItem:
changePlaybackPositionCommand
seekForwardCommand
seekBackwardCommand
setCanBeControlledByScrubbing:
canSkipToPreviousItemForItem:
setEnabled:
canSkipItem:
userCanChangeShuffleAndRepeatType
advanceRepeatModeCommand
advanceShuffleModeCommand
preventsHardQueueModificationsForItem:
supportsAddToQueue
setSupportedInsertionPositions:
disableQueueModifications
reorderQueueCommand
setPresentationStyle:
likedState
setActive:
command
mediaRemoteCommandType
contentItemID
play
pause
togglePlayback
isAd
indexForContentItemID:
playItemAtIndex:withOptions:
isRequestingDefermentToPlaybackQueuePosition
changePlaybackIndexBy:deltaType:ignoreElapsedTime:
beginSeek:
endSeek
positionTime
setCurrentTime:
playbackQueue
contextID
setSiriReferenceIdentifier:
insertionPosition
addPlaybackContext:toQueueWithInsertionType:completionHandler:
stringWithUTF8String:
getPlaybackContextWithCompletion:
insertAfterContextItemID
moveItemAtPlaybackIndex:toPlaybackIndex:intoHardQueue:
repeatType
setRepeatType:
preservesRepeatMode
setMusicRepeatType:
activeRepeatType
shuffleType
setShuffleType:
preservesShuffleMode
setMusicShuffleType:
activeShuffleType
removeItemAtPlaybackIndex:
verifyWithError:
endPlayback
reloadWithPlaybackContext:completionHandler:
durationIsValid
durationInSeconds
interval
currentTime
isNegative
setLikedState:
engine:didChangeToState:
engine:willChangeToItem:fromItem:
engine:didChangeToItem:
engine:willResetQueueWithPlaybackContext:
engine:didResetQueueWithPlaybackContext:error:
engine:didChangeQueueWithReason:
engine:didChangeShuffleType:
engine:didChangeRepeatType:
engineWillBeginStateRestoration:
engineDidEndStateRestoration:
initWithPlaybackEngine:
publishIfNeeded
addSupportedSpecializedQueueIdentifier:localizedName:queueType:queueParameters:
removeSupportedSpecializedQueueIdentifier:
nowPlayingInfoCenter:didBeginLyricsEvent:
nowPlayingInfoCenter:didEndLyricsEvent:
setEngineRestoringState:
infoCenter
commandCenter
_initializedSupportedCommands
_engineRestoringState
_playbackEngine
_infoCenter
_commandCenter
currentIndex
contentItemIDForPlaylistIndex:
isPlaceholderItemForContentItemID:
itemForPlaylistIndex:
_contentItemForMPAVItem:
setWithArray:
containsObject:
initWithIdentifier:
contentItemForOffset:
displayIndexForItem:
displayCountForItem:
contentItem
dictionaryWithCapacity:
numberWithUnsignedInteger:
setObject:forKeyedSubscript:
setNowPlayingInfo:
nowPlayingContentItemForIdentifier:
nowPlayingContentItemsForRequest:range:
childContentItemAtIndex:ofItem:
requestedProperties
initWithRequestedProperties:
relationships
properties
storePlatformMetadata
genericObjectForStorePlatformMetadata:
setContentItemID:
offerWithType:
setStoreSubscriptionAdamID:
setShouldRememberBookmarkTime:
setUserPlayCount:
setStartTime:
setStopTime:
setStoreUbiquitousIdentifier:
setPlaybackPosition:
copyWithIdentifiers:block:
genericObjectForRadioStationTrack:contentItemID:
_storePlatformBuilder
_requestedSongProperties
_requestedProperties
assetLoadProperties
fileAsset
qualityType
itemIdentifiers
initWithFileAsset:sourceItemIdentifiers:
setSourceItemIdentifiers:
purchaseBundleFilePath
fileExistsAtPath:isDirectory:
fileURLWithPath:isDirectory:
pathExtension
initWithContentsOfFile:
propertyListWithData:options:format:error:
isNSDictionary__
clearPlaybackAssetCacheFileAssetForGenericObject:withCompletionHandler:
requirePreferredAssetQuality
responseHandler
_requirePreferredAssetQuality
_assetLoadProperties
_responseHandler
setStoreID:
_radioStationMatchMetadata
setMatchMetadata:
_shouldMatchArtist
setShouldMatchArtist:
radioStationMatchContext
setKind:
setAlbumName:
setArtistName:
setComposerName:
setCopyright:
discNumber
setDiscCount:
setGenreName:
isCompilation
setCompilation:
setDuration:
trackNumber
setTrackNumber:
trackCount
setTrackCount:
year
setYear:
setStoreCloudID:
hasLoadedValueForKey:
setArtistStoreID:
setRepresentativeCloudID:
setAlbumStoreID:
load
_initWithMediaLibrary:
populateLocationPropertiesWithPath:assetProtectionType:completionBlock:
_highQualityCachedAssetDestinationDirectory
_lowQualityCachedAssetDestinationDirectory
UUID
UUIDString
lowercaseString
stringByAppendingPathComponent:
stringByAppendingPathExtension:
setWithObjects:
valuesForProperties:
boolValue
setShouldLibraryAdd:
pathForResourceFileOrFolder:
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
deviceLibraryProvider
decodeInt64ForKey:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeInt64:forKey:
encodeObject:forKey:
encodeInteger:forKey:
_copyWithClass:zone:
allocWithZone:
initWithStoreAccountID:deviceGUID:
copyWithZone:
supportsSecureCoding
mutableCopyWithZone:
encodeWithCoder:
initWithCoder:
storeAccountID
deviceName
requestUserAgent
timeZone
_deviceGUID
_deviceName
_systemReleaseType
_requestUserAgent
_storeAccountID
_timeZone
setTimeZone:
valueTransformer
setValueTransformer:
_valueTransformer
relationshipModelClass
translatorForMPModelClass:
entityTranslator
setRelationshipModelClass:
_relationshipModelClass
_translatorForMPModelClass:create:
mapPropertyKey:toValueTransformer:
valueForKey:
objectForKeyedSubscript:
objectForPropertySet:contentItem:middleware:baseTranslator:prependKeyPath:
_valueForKeyPath:forContentItem:middleware:
MPModelClass
setValue:forKey:
enumerateKeysAndObjectsUsingBlock:
_propertyTranslatorForKeyPath:
lastObject
subarrayWithRange:
_translatorForMPModelClass:
mapIdentifierCreationBlock:
mapPropertyKey:toMPContentItemSelector:
mapRelationshipKey:toModelClass:
objectForPropertySet:contentItem:middleware:
identifiersForContentItem:middleware:
_propertiesToTranslators
_relationshipsToTranslators
_MPModelClass
initWithKeyOptions:valueOptions:capacity:
insertString:atIndex:
tracklistDataSourceForSource:
tracklistDataSource
getPlaybackContextForIntent:withCompletion:
getRemotePlaybackQueueForIntent:playerPath:withCompletion:
referenceWithMPModelObject:
setSeedContentReference:
setTracklistSource:
setTracklistToken:
setStationName:
setRadioStationPlaybackMetadata:
initWithStationStringID:
setStationURL:
radioPlaybackIntentFromAlbum:
radioPlaybackIntentFromArtist:
radioPlaybackIntentFromSong:
radioPlaybackIntentWithStation:
radioPlaybackIntentWithStationStringID:
radioPlaybackIntentWithStationURL:
getRemotePlaybackQueueRepresentationWithPlayerPath:completion:
localizedTitle
tracklistSource
tracklistToken
shuffleMode
setShuffleMode:
playActivityFeatureName
setPlayActivityFeatureName:
playActivityRecommendationData
setPlayActivityRecommendationData:
_resolvedTracklistDataSource
_localizedTitle
_tracklistSource
_tracklistToken
_shuffleMode
_playActivityFeatureName
_playActivityRecommendationData
setRadioStationStringID:
setRadioStationHash:
setRadioStationID:
setBeats1:
descriptionText
setEditorNotes:
setShortEditorNotes:
setHasExplicitContent:
artworkInfo
responseDictionary
responseArray
artworkURL
absoluteString
artworkRequestTokenForStorePlatformArtworkValue:
sharedStoreArtworkDataSource
initWithToken:dataSource:
setArtworkCatalogBlock:
setAllowsItemLiking:
modelRadioStationForMetadata:
_requestedRadioStationProperties
setMediaRemoteMuxer:
_registerForPlayer:
_setActivePlayer:
_unregisterForPlayer:
stopMediaRemoteSync
_removeSupportedCommands
_updateSupportedCommandsForPlayer:
null
integerValue
parentAppBundleID
_updateParentApplication:
stopSyncingNowPlayingInfo
startSyncingNowPlayingInfo
updateSupportedCommandsForCommandCenter:muxer:action:
_activeCommands
removeTarget:
mediaRemoteOptions
performCommandEvent:completion:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
initWithSystemPlayer:
invalidateSupportedCommandsForPlayer:
setApplicationPlayer:
observeValueForKeyPath:ofObject:change:context:
systemPlayer
applicationPlayer
_activePlayer
_systemPlayer
_applicationPlayer
inputOperations
resolvedPlayerPath
isInProcess
playerPath
infoCenterForPlayerID:
initWithObject:keyPath:options:handler:
inputsProtocols
outputProtocols
setInputOperations:
_inputOperations
lastRecordedPlayEvent
playlist
currentRepeatType
setPlayEvent:
setAllowsStoreContainerImport:
operationQueue
setOperationQueue:
setLastRecordedPlayEvent:
_operationQueue
_lastRecordedPlayEvent
_currentRepeatType
playbackState
setPlaybackStateFuture:
playbackStateFuture
setPlayerState:
_playbackStateFuture
requestWithCommandRequests:
performWithCompletion:
initWithCommandRequests:
options
blockOperationWithBlock:
initWithCommandRequest:options:
addDependency:
performRequest:completion:
setOptions:
commands
setCommands:
_options
_commands
initWithMediaRemoteCommand:options:controller:
_command
_controller
dependencies
request
sendCommand:options:completion:
_request
deviceActivePlayerPath
stringByReplacingCharactersInRange:withString:
responseClass
setPlayerPath:
middlewareClasses
setTracklistRange:
playingItemProperties
setPlayingItemProperties:
queueSectionProperties
setQueueSectionProperties:
queueItemProperties
setQueueItemProperties:
_playerPath
_playingItemProperties
_queueSectionProperties
_queueItemProperties
_tracklistRange
controller:chain:
playerState:chain:
playerRepeatType:chain:
playerShuffleType:chain:
playerLastChangeDirection:chain:
playerNumberOfSections:chain:
playerNumberOfItems:inSection:chain:
playerItemDuration:atIndexPath:chain:
playerItemEditingStyleFlags:atIndexPath:chain:
playerModelObject:propertySet:atIndexPath:chain:
playerPlayingItemIndexPath:chain:
playerPlayingItemGlobalIndex:chain:
playerGlobalItemCount:chain:
playerCommandSupported:command:chain:
playerCommandEnabled:command:chain:
playerCommandOptionValue:forKey:command:chain:
playerVideoView:chain:
initWithRequest:middleware:
initWithResponse:
builder
chain
state
_commandRequestForMediaRemoteCommand:
builderProtocol
stop
tracklist
videoView
setVideoView:
_tracklist
_state
_videoView
response
setResponse:
_response
defaultRequestEnvironment
descriptionComponents
queueFeederClass
prefixItem
setPrefixItem:
setPlaybackRequestEnvironment:
nowPlayingContentReference
setNowPlayingContentReference:
seedContentReference
stationURL
_prefixItem
_nowPlayingContentReference
_seedContentReference
_stationHash
_stationName
_stationStringID
_stationID
_stationURL
kindWithVariants:
kindWithSongKind:
kindWithKinds:
kindWithVariants:playlistEntryKind:options:
kindWithRelationshipKinds:
setItemKind:
setSectionKind:
initWithRequest:responseHandler:
decodeBoolForKey:
decodeObjectOfClasses:forKey:
objectAtIndex:
isNSString__
isSubclassOfClass:
isNSArray__
encodeBool:forKey:
numberOfSections
enumerateItemsInSectionAtIndex:usingBlock:
enumerateSectionsUsingBlock:
wantsDetailedKeepLocalRequestableResponse
setWantsDetailedKeepLocalRequestableResponse:
rtcReportingPlayQueueSourceIdentifier
previousResponse
clientIdentifier
allowsMultipleResponseHandlerCalls
setAllowsMultipleResponseHandlerCalls:
allowLocalEquivalencies
setAllowLocalEquivalencies:
setClientIdentifier:
sectionedModelObjects
setSectionedModelObjects:
storeIDs
setStoreIDs:
_allowsMultipleResponseHandlerCalls
_wantsDetailedKeepLocalRequestableResponse
_allowLocalEquivalencies
_previousResponse
_clientIdentifier
_sectionedModelObjects
_storeIDs
MPC_contentItemIdentifierCollection
layer
player
presentationSize
isReadyForDisplay
videoGravity
setScaleMode:
preferredContentSize
setVideoGravity:
keyPathsForValuesAffectingReadyForDisplay
keyPathsForValuesAffectingPreferredContentSize
operationsForPlayerRequest:
operationsForRequest:
setInvalidationObservers:
nextObject
_MPCErrorWithDomain:code:underlyingError:debugDescriptionFormat:arguments:
initWithFormat:arguments:
initWithOptions:
weakToWeakObjectsMapTable
sharedInstance
setCategory:error:
avPlayer
_player
setVolume:
beginUsingVideoLayer
setMpcPlayer:
setManagesAirPlayBehaviors:
setShouldResetQueueWhenReachingEnd:
initWithPlayer:
addPlayer:
_playerDidPauseForPlaybackPreventionNotification:
registerPlayer:
setCommandCenter:
_availableRoutesDidChangeNotification:
_currentItemChangedNotification:
_playbackStateChangedNotification:
_repeatShuffleTypeChangedNotification:
_contentsDidChangeNotification:
_playerPlaybackErrorNotification:
_soundCheckEnabledChangedNotification:
setIAmTheiPod:
_displayPlaybackState
playbackIntentObservers
player:willAddPlaybackIntent:withOptions:
player:didAddPlaybackIntent:withOptions:error:
setShouldStartPlayback:
setShouldRestartPlayback:
playlistFeeder
initWithQueueFeeder:
_reloadPlayerWithPlaybackContext:completionHandler:
_adjustedPlaybackContextForContext:
jumpToItemWithContentID:
_handleInsertIntoQueueCommandEvent:completionHandler:
_indexForStringIdentifier:
_handleCreateRadioStationCommandEvent:completionHandler:
_handleSetQueueCommandEvent:completionHandler:
dispatchCommandEvent:completion:
preservePlaybackStateImmediately
shouldRestorePlaybackState
supportsStateRestoration
initForWritingWithMutableData:
encodedData
setPlaylistManagerUUID:
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:
stringForKey:
playlistManagerUUID
integerForKey:
setInteger:forKey:
synchronize
initWithContentsOfURL:options:error:
dataForKey:
initForReadingWithData:
decodeObjectForKey:
finishDecoding
initWithUUIDString:
setPlaylistManager:
setAutoPlayWhenLikelyToKeepUp:
finalizeStateRestorationWithCompletionHandler:
setFallbackPlaybackContext:
videoLayer
routingController
pickedRoute
isDeviceRoute
routeName
sharedAVSystemController
setAttribute:forKey:error:
_refreshIAmTheiPod
hardQueuePlaylistIndexRange
_shouldVendContentItemForOffset:
_nowplayingContentItemForIndex:
_nowplayingContentItemIdentifierForIndex:
softQueueFeeder
isRadioQueueFeeder
softQueuePlaylistIndexRange
createPlaybackContextWithCompletion:
isRequestingImmediatePlayback
_getPlaybackContextForPlaybackQueue:withCompletionHandler:
isRequestingPlaybackInitialization
_updateSupportedCommandsForCommandCenter:target:action:
mediaRemoteMuxer
canSeek
setDelegate:
willChangeValueForKey:
didChangeValueForKey:
_notifySupportedCommandsChanged
avItem
queueFeeder
_currentItemInvalidedCommandsNotification:
schedulePlaybackStatePreservation
initWithAVItem:
setContainer:
playbackErrorObservers
playerDidPauseForLeaseEnd:
_playerItemForAVItem:
player:didFailToPlayItem:error:
query
setLegacyMediaQuery:
setRequest:
startIndex
setStartIndex:
shouldStartPlayback
shouldRestartPlayback
siriReferenceIdentifier
updateForSoundCheckDefaultsChange
isSupported
queueRequestOperationClass
remoteCommand:isSupportedForContentItemIdentifier:
remoteCommand:isEnabledForContentItemIdentifier:
currentContainer
addPlaybackIntent:withOptions:completion:
clearPlaybackQueueWithCompletion:
pictureInPictureSupported
setPictureInPictureSupported:
registerWithPlaybackLeaseController:
isRestoringPlaybackState
restorePlaybackStateCompletionHandler:
setFallbackPlaybackIntent:
isMediaRemoteSyncing
isSyncingNowPlayingInfo
activeRouteName
avController
startPictureInPicture
hardQueueItemCount
contentItemIdentifierForOffset:
_playerDidPausePlaybackForLeaseEndNotification:
startMediaRemoteSync
fallbackPlaybackIntent
setPlayer:
playerObserver
setPlayerObserver:
setReportingController:
iAmTheiPod
_avItemToPlayerItemWeakMap
_currentContainer
_currentItem
_hasScheduledPlaybackStatePreservation
_isRestoringPlaybackState
_hasReceivedAddPlaybackIntent
_mediaRemoteSync
_stateRestorationSerialQueue
_iAmTheiPod
_fallbackPlaybackIntent
_playerObserver
_reportingController
initWithController:
addChildReportingController:
processInfo
processName
defaultClientVersion
initWithPlayer:clientName:clientType:clientVersion:
_cloudServiceControllerCloudLibraryEnabledDidChangeNotification:
beginObservingSubscriptionLease
beginObservingCloudLibraryEnabled
preheatSubscriptionLeaseRequestsWithCompletionHandler:
endObservingSubscriptionLease
endObservingCloudLibraryEnabled
_rtcReportingController
_playbackUserDefaultsEQPresetDidChangeNotification:
_setState:
playWithOptions:
_connectAVPlayer
musicEQPreset
_setEQPreset:
_registerForPlaylistManager:
_queueModificationsDidChangeNotification
_unregisterForPlaylistManager:
defaultItemEQPresetType
setupEQPresetWithDefaultPreset:
playlistManagerClass
fallbackPlaybackContext
mpcPlayer
_fallbackPlaybackContext
_mpcPlayer
_playlistManagerUUID
_allowsExplicitContentDidChangeNotification:
sharedRestrictionsMonitor
newOperationForDetailedKeepLocalStatusConfigurationForSectionAtIndex:responseHandler:
timeIntervalSinceNow
equivalencySourceStoreAdamIDForLocalStoreAdamID:
_invalidateWithUpdatedResponse:
_setEquivalencySourceStoreAdamID:forLocalStoreAdamID:
setInvalidationDate:
_updatedResponse
isFinalResponse
setFinalResponse:
invalidationDate
_invalidationTimer
_localAdamIDToEquivalencySourceAdamIDMap
_finalResponse
_invalidationDate
_commonInit
sourceContexts
restoreState:
indexSet
setDisableQueueModifications:
strongToWeakObjectsMapTable
setPlaybackContextUniqueIdentifier:
_handleConfiguredQueueFeeder:fromPlaybackContext:
itemCount
setQueueFeeder:
identifierAtIndex:queueFeeder:
setItemIdentifier:
_softQueuePlaylistIndexRangeIncludingCurrentItem:
_hardQueuePlaylistIndexRangeIncludingCurrentItem:
_insertSoftQueueSourceContext:atIndex:
playlistIdentifier
_playlistIndexOfItemIdentifier:
indexSetWithIndexesInRange:
insertObjects:atIndexes:
addObjectsFromArray:
_prepareToQueuePlaybackIndex:selectionDirection:
queueCoordinator
reloadItemsKeepingCurrentItem:
_notifyQueueFeederContentsChanged
reloadWithPlaybackContext:requireFinalTracklist:completionHandler:
_removeHardQueueItems
_itemIsSoftQueueItem:
itemIdentifier
indexOfItemWithIdentifier:
_playlistIterationForQueueFeeder:withMaxQueueIndexToPreload:
removeObjectAtIndex:
setCount:
_itemIsHardQueueItem:
_hardQueueIndexForIndex:
_removeSoftQueueSourceContextAtIndex:
insertObject:atIndex:
_removeSourceContextAtIndex:
playlistIndexOfItem:
_sourceContextForPlaylistIndex:
handlePlaybackFailureForItem:
indexOfItemWithIdentifier:queueFeeder:
addIndex:
delegate
playlistManager:didFailLoadingAllItemsForQueueFeeder:
_itemForPlaylistIndex:
sectionIdentifier
itemForItemID:
queueIdentifierForItemID:
isPlaceholderItemForQueueIdentifier:
contentItemIDAtIndex:
playlistIndexOfQueueIdentifier:inPlaylistFeeder:
_metadataItemForSourceContext:
_invalidateCachedMusicPlayerControllerQueue
removeObject:
applyVolumeNormalizationForItem:
player:currentItemWillChangeFromItem:
player:currentItemDidChangeToItem:
_softQueueSourceContextForIndex:
playlistIndexOfItemIdentifier:
removeObjectsInRange:
removeAllObjects
clearHardQueue
removeAllIndexes
setPlaylistFeeder:startIndex:keepPlaying:
repeatMode
setRepeatMode:
_playbackIndexForDelta:fromIndex:ignoreElapsedTime:totalItemCount:didReachEnd:
replaceObjectsInRange:withObjectsFromArray:
playlistIndexOfIndex:inPlaylistFeeder:
_updateMaximumQueueDepthForItemIndex:inQueueFeeder:
queueFeederDidInvalidateRealShuffleType:
_willFinishReloadWithQueueFeeder:fromPlaybackContext:
containsIndex:
uuid
_updateMusicPlayerControllerQueueWithCompletionHandler:
removals
_indexOfMediaItem:
queueDescriptorsToPrepend
playbackContext
queueInsertions
allKeys
reverseObjectEnumerator
mediaItemForIdentifier:
valueForProperty:
initWithMediaItems:uuid:
_softQueueIndexForIndex:
_itemForSourceContext:
_queueFeeder:itemForIdentifier:
setPlaylistIdentifier:
metadataItemForIdentifier:
setSourceContexts:
indexToFaultIn
setIndexToFaultIn:
itemForIdentifier:
removeObjectAtIndex:returningRemovedObject:
hasItemForIndex:
unsignedIntegerValue
keyForObject:
identifierAtIndex:
supportsUniqueRepeatingItems
allowsUserVisibleUpcomingItems
canSkipToPreviousItem
playbackMode
clearSoftQueue
metadataItemForPlaylistIndex:
player:currentItemDidChangeFromItem:toItem:
playlistFeederForPlaylistIndex:
setCurrentIndex:selectionDirection:
playlistIndexWithDelta:fromIndex:ignoreElapsedTime:didReachEnd:
playlistItemCount
queueFeeder:didChangeContentsWithPreferredStartIndex:error:
queueFeeder:didChangeContentsWithReplacementPlaybackContext:
queueCoordinator:itemToFollowItem:
currentQueueUUID
musicPlayerControllerQueueForUUID:
requestMusicPlayerControllerQueueWithCompletionHandler:
setMusicPlayerControllerQueue:withCompletionHandler:
setSoftQueueFeeder:
hardQueueSourceContexts
setHardQueueSourceContexts:
lastPlayedSoftQueueItem
setLastPlayedSoftQueueItem:
nextCurrentIndex
setNextCurrentIndex:
hardQueueInsertionIndex
setHardQueueInsertionIndex:
repeatPlaylistIdentifer
setRepeatPlaylistIdentifer:
softQueueModifications
setSoftQueueModifications:
_ignoreNextIndexChanges
_disableSoftQueueFaulting
_ignoreSoftQueueInvalidation
_ignoreHardQueueInvalidation
_maximumModifiedPlaylistIterationIndex
_minimumPlaylistIndex
_maximumPlaylistIndex
_failedSoftQueueIndexes
_identifiersToIndexes
_musicPlayerControllerAccessQueue
_currentMusicPlayerControllerQueue
_queueFeederLookup
_disableQueueModifications
_softQueueFeeder
_hardQueueSourceContexts
_lastPlayedSoftQueueItem
_nextCurrentIndex
_hardQueueInsertionIndex
_repeatPlaylistIdentifer
_softQueueModifications
_itemIdentifier
_queueFeeder
iterationIndex
setIterationIndex:
_sourceContexts
_iterationIndex
_count
_indexToFaultIn
assetSourceStorefrontID
householdID
_allowsHLSContent
_prefersVideoContent
_prefersHighQualityContent
_assetSourceStorefrontID
_fileAsset
_homeSharingAsset
_itemIdentifiers
_storeAsset
_accountID
_delegatedAccountID
_storefrontID
controllerForPlayerPath:
setControllerFuture:
controllerFuture
setController:
_controllerFuture
_artworkDidChangeNotification:
_titlesDidChangeNotification:
_durationAvailablityDidChangeNotification:
_modelGenericObjectDidChangeNotification:
_explicitDidChangeNotification:
_timeDidJumpNotification:
_rateDidChangeNotification:
modelGenericObjectRepresentation
playlistEntry
_updateSnapshot
rate
timeIntervalSinceReferenceDate
timeOfSeekableStart
timeOfSeekableEnd
defaultPlaybackRate
durationSnapshot
albumName
artistName
isExplicit
composerName
_snapshot
_avItem
supportedCommands
setSupportedCommandsFuture:
supportedCommandsFuture
setSupportedCommands:
_supportedCommandsFuture
registerReturnType:returnValueBlock:
queueContentItems
playingIndexPath
playerState
_queueContentItems
_supportedCommands
_playingIndexPath
_playerState
_supportedCommands:infoValueForKey:
numberOfItemsInSection:
itemAtIndexPath:
elapsedTimeTimestamp
elapsedTime
_playbackRateForContentItem:
isAlwaysLiveItem
editingStyleFlags
section
sectionAtIndex:
_sectionGenericObjectPropertySetForContentItem:propertySet:
_itemGenericObjectPropertySetForContentItem:propertySet:
auxiliaryNowPlayingInfo
numberWithUnsignedInt:
playbackRate
_mediaRemoteContentItem
operationType
subscriptionLeaseSession
isDelegatedLeaseSession
setStorePurchasedAdamID:
setCloudUniversalLibraryID:
_handlePlaybackResponse:withPlaybackCacheRequest:error:
initWithRequestContext:storeSubscriptionAdamID:
assetExpirationDate
setExpirationDate:
dialog
setDialogDictionary:
fileAssets
initWithiTunesCloudStoreFileAssetInfo:
setFileAssetInfoList:
hlsAsset
initWithiTunesCloudStoreHLSAssetInfo:
setHlsAssetInfo:
addCachedResponse:forRequest:
_operationType
_requestContext
startItem
setDeviceLibraryPersistentID:
setStartItemIdentifiers:
startItemID
longLongValue
startTimes
setStartTimeModifications:
endTimes
setEndTimeModifications:
playParametersQueue
decodePlayParam:results:
startItemIdentifier
contentItemCollectionInfo
_createNowPlayingInfoForItem:completionHandler:
setDataSource:
itemKind
modelClass
_reloadForInitialRequest
soundCheckEnabled
_hasPlaceholderItemAtIndex:
_songShuffledIndexForIndex:
_modelObjectAtIndex:
_genericObjectForModelObject:
itemProperties
_equivalencySourceAdamIDForIdentifierSet:
weakObjectsHashTable
totalItemCount
_identifierSetAtIndex:
_indexOfItemWithIdentifier:shouldIgnoreShuffle:
initWithModelObject:
intValue
itemIndexForShuffledIndex:
dictionary
musicRepeatType
realRepeatType
musicShuffleType
realShuffleType
startItemIdentifiers
label
setLabel:
setActiveShuffleType:
startTimeModifications
endTimeModifications
assetStoreFronts
invalidate
shuffleWithStartingIndex:
shuffle
contentsDidChangeWithPreferredStartIndex:error:
shouldExcludeNonShuffleItems
setShouldExcludeNonShuffleItems:
_reloadModelRequestForInvalidation
firstSection
setPlaylist:
enumerateItemIdentifiersUsingBlock:
invalidateAssets
invalidateRealRepeatType
invalidateRealShuffleType
mqf_requiredPlaybackProperties
indexPathForItemWithIdentifiersIntersectingSet:
globalIndexForIndexPath:
setPlaylistEntry:
setMovie:
setTvEpisode:
indexPathForGlobalIndex:
identifiersForItemAtIndexPath:
setShouldIncludeContentItemID:
sectionKind
sectionProperties
propertySetByCombiningWithPropertySet:
setSectionProperties:
_responseDidInvalidateNotification:
mediaPlayerBundle
setMainTitle:
setSupportsLikedState:
setLikedStateEnabled:
_currentPreferredStartIndexWithFinalResponse:
_handleFinalResponseWithPreferredStartIndex:
_reloadModelRequestWithCompletionHandler:
_newModelRequest
_unregisterNotificationsForResponse:
_registerNotificationsForResponse:
hasSameContentAsSectionedCollection:
shuffledIndexForItemIndex:
requiredPropertiesForStaticMediaClips
rtcReportingSessionAdditionalUserInfo
itemCountForShuffleController:
shuffleController:identifierForItemAtIndex:
shuffleController:countOfItemIdentifier:withMaximumCount:
audioSessionModeForItemAtIndex:
copyRawItemAtIndex:
hasValidItemAtIndex:
initialPlaybackQueueDepthForStartingIndex:
itemClass
itemTypeForIndex:
mediaItemAtIndex:
indexOfMediaItem:
playerPreparesItemsForPlaybackAsynchronously
shouldReuseQueueFeederForPlaybackContext:
shuffleItemsWithAnchor:
_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:
_playbackUserDefaultsMusicRepeatTypeDidChangeNotification:
_playbackUserDefaultsMusicShuffleTypeDidChangeNotification:
.cxx_construct
_activeModelGenericAVItems
_assetStoreFronts
_currentRevisionID
_endTimeModifications
_finalTracklistLoadingCompletionHandler
_hasFoundStartItem
_hasLoadedFinalResponse
_placeholderAVItem
_rtcReportingPlayQueueSourceIdentifier
_shuffleController
_isSiriInitiated
_startItemIdentifiers
_retrievedIndexToIdentifiers
_startTimeModifications
emptyPropertySet
mqf_newPlaybackItemMetadata
mqf_configurePlaybackItemMetadata:
mqf_playbackItemMetadataModelObject
requiredProperties
setEpisode:
episode
_init
_playbackStateDidChangeNotification:
_supportedCommandsDidChangedNotification:
_playbackQueueContentItemsChangedNotification:
_playbackQueueChangedNotification:
initWithQueue:
setDebugLabel:
finishWithValue:
result
commandCenterForPlayerID:
_copySupportedCommands
initWithPlaybackContext:
initWithCommand:playbackQueue:
removeObjectForKey:
initWithCommand:playbackQueue:options:
unsignedIntValue
_pushMediaRemoteCommand:withOptions:completion:
playQueueIdentifiersCacheStateForRange:
valueWithBytes:objCType:
isInvalid
_onQueue_identifiersForRange:
playbackQueueDataSource
_shim_nowPlayingContentItemsForRequest:dataSource:range:
valueForKeyPath:
beginObservingChangesForContentItemIDs:
performSuppressingChangeNotifications:
_onQueue_mergeMPContentItems:queueRange:
playingIdentifierCacheState
contentItemCacheStateForIdentifier:
maximumCapacity
setMaximumCapacity:
_isRemote
contentItemArtworkCacheStateForIdentifier:size:
contentItemArtworkForIdentifier:size:
identifierForIdentifierType:
predicateWithProperty:equalToInt64:
_MPC_ML3QueryWithEntityClass:predicate:options:
hasEntities
predicateWithProperty:equalToInteger:
predicateMatchingPredicates:
anyEntityPersistentID
predicateWithProperty:equalToValue:
enumeratePersistentIDsAndProperties:ordered:usingBlock:
playlistWithPersistentID:
collectionWithPersistentID:groupingType:verifyExistence:
libraryDataProvider
library
queryWithLibrary:predicate:orderingTerms:usingSections:options:
MPC_entityWithContentItemIdentifierCollection:options:
initWithRadioStationTracks:
kindWithModelClass:
requiredStoreLibraryPersonalizationProperties
MSVBase64UUIDString
initWithModel:personalizationStyle:
initWithUnpersonalizedRequest:unpersonalizedContentDescriptors:
setRepresentedObjects:
initWithStartHandler:
_radioStationTracks
representedObjectResults
setRadioStationTracks:
radioStationTracks
playbackStateCacheState
supportedCommandsCacheState
invalidateAllTokens
_playQueueIdentifiersForRangeFuture
_contentItemForIdentifierFuture
_contentItemArtworkForIdentifierFuture
initWithModelGenericObject:response:
remove
metadataObject
_metadataObject
initWithRoute:bundleID:playerID:
pathWithRoute:bundleID:playerID:
route
bundleID
appendFormat:
appendString:
mainBundle
bundleIdentifier
processIdentifier
pathWithRoute:mediaRemotePlayerPath:
connection
externalDevice
connectWithCompletion:
systemMusicPathWithRoute:playerID:
resolveWithCompletion:
mediaRemotePlayerPath
_defaultConstraints
_bundleID
_playerID
_mediaRemotePlayerPath
_route
mpc_radioContentReference
initWithICRadioContentReference:
ICRadioContentReference
_ICRadioContentReference
setRepresentativeCloudIdentifier:
setStoreIdentifier:
setAlbumArtistName:
discCount
setDiscNumber:
fileSize
setFileSize:
setStoreAdamIdentifier:
setStoreCloudIdentifier:
playbackIntentWithStartItemIdentifiers:
setParentReportingController:
_recordReportingEvents:
parentReportingController
childReportingControllers
recordReportingEvents:
removeChildReportingController:
_childReportingControllers
_parentReportingController
future
setFuture:
_future
array
weakToStrongObjectsMapTable
_onQueue_finalize
objectEnumerator
allObjects
isFinalized
debugLabel
accessQueue
calloutQueue
successBlocks
failureBlocks
completionBlocks
invalidBlocks
_finalized
_invalid
_result
_debugLabel
_successBlocks
_failureBlocks
_completionBlocks
_invalidBlocks
_applicationWillTerminateNotification:
playActivityEvent
eventType
shouldReportToStore
eventDate
_captureNonCatalogAggregatePlayActivityEventWithNonCatalogAggregateEndTime:
storeFrontID
isSBEnabled
isOffline
sourceType
endReasonType
itemEndTime
itemStartTime
sharedBagLoadingController
reasonHintType
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
requestAccessToBagUsingBlock:
recordPlayActivityEvents:withCompletionHandler:
_clearNonCatalogAggregatePlayActivityEventData
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
setEventDate:
setItemDuration:
setItemType:
setSourceType:
acquirePendingPlayActivityEventsForStoreAccountID:completionHandler:
playActivityController
shouldReportAggregateTimePlayActivityEvents
shouldReportPlayActivityEvents
_accessSerialQueue
_nonCatalogAggregatePlayDuration
_nonCatalogAggregateStartTime
_nonCatalogDeviceName
_nonCatalogOffline
_nonCatalogSBEnabled
_nonCatalogSourceType
_nonCatalogStoreAccountID
_nonCatalogStoreFrontID
_shouldReportAggregateTimePlayActivityEvents
_shouldReportPlayActivityEvents
_playActivityController
subscriptionStatus
MP_capabilities
isCloudLibraryEnabled
_handleDidEnterBackgroundNotification:
_handleDidReceiveMemoryWarningNotification:
_handleWillEnterForegroundNotification:
artworks
scaledFittingSize
bestArtworkForPixelSize:
representationSize
pixelSize
cachedImageDataForRadioArtwork:MIMEType:
destinationScale
mainScreen
scale
imageWithData:scale:
representationWithSize:image:
_cacheArtworkRepresentation:forKey:
requestWithURL:
_initWithData:immediateLoadWithMaxSize:scale:renderingIntent:
CGImage
loadImageForRadioArtwork:withCompletionHandler:
isSuspendedUnderLock
_setCacheSize:preserveExisting:
_clearCache
initWithMaximumCapacity:
sharedRadioArtworkDataSource
areRepresentationsAvailableForCatalog:
isRepresentation:bestRepresentationForArtworkCatalog:
existingRepresentationForArtworkCatalog:
requestForCatalog:size:
loadRepresentationForArtworkCatalog:completionHandler:
cancelLoadingRepresentationForArtworkCatalog:
visualIdenticalityIdentifierForCatalog:
_backgroundCacheSize
_cacheSize
_cachedArtworkRepresentations
_cachedArtworkRepresentationsAccessQueue
_resumeToForegroundCacheSize
variants
kindWithVariants:options:
initWithResponse:playingItemIndexPath:
initWithDataSource:
setSupportsSetQueueCommand:
setSupportedSpecializedQueues:
setSupportedQueueTypes:
setSupportedCustomDataQueueIdentifiers:
setSupportsChangeRepeat:
setSupportsAdvanceRepeat:
setSupportedRepeatTypes:
setSupportsChangeShuffle:
setSupportsAdvanceShuffle:
setSupportedShuffleTypes:
setSupportsPreviousItem:
setSupportsPreviousSection:
setSupportsPreviousChapter:
setSupportsNextItem:
setSupportsNextSection:
setSupportsNextChapter:
setSupportsJumpToItem:
resetCommand
insertCommand
reorderCommand
repeatCommand
shuffleCommand
changeItemCommand
lastChangeDirection
playingItemIndexPath
playingItemGlobalIndex
globalItemCount
_lastChangeDirection
_repeatType
_shuffleType
_items
_playingItemIndexPath
_playingItemGlobalIndex
_globalItemCount
indexPathWithIndex:
initWithModelGenericObject:indexPath:response:
sectionIndexTitles
optionalSectionIndexTitlesRange
indexOfSectionForSectionIndexTitleAtIndex:
hasSameContentAsDataSource:
setPlayingItemIndexPath:
supportedQueueTypes
supportsSetQueueCommand
supportedCustomDataQueueIdentifiers
clear
replaceWithPlaybackIntent:
specializedIntents
supportedSpecializedQueues
_supportsSetQueueCommand
_supportedSpecializedQueues
_supportedQueueTypes
_supportedCustomDataQueueIdentifiers
supportedInsertionPositions
_isSupportedPlaybackIntent:forRemotePlayer:atInsertionPosition:
insertAfterPlayingItemWithPlaybackIntent:
insertPlaybackIntent:afterItem:
insertAtEndOfTracklistWithPlaybackIntent:
_supportedInsertionPositions
indexPath
canMoveItem:
moveItem:afterItem:
supportsChangeRepeat
supportsAdvanceRepeat
advance
supportedRepeatTypes
_supportsChangeRepeat
_supportsAdvanceRepeat
_supportedRepeatTypes
supportsChangeShuffle
supportsAdvanceShuffle
supportedShuffleTypes
_supportsChangeShuffle
_supportsAdvanceShuffle
_supportedShuffleTypes
supportsPreviousItem
supportsPreviousSection
supportsPreviousChapter
supportsNextItem
supportsNextSection
supportsNextChapter
supportsJumpToItem
previousItem
previousSection
previousChapter
nextItem
nextSection
nextChapter
changeToSection:
changeToItem:
_supportsPreviousItem
_supportsPreviousSection
_supportsPreviousChapter
_supportsNextItem
_supportsNextSection
_supportsNextChapter
_supportsJumpToItem
setDelegatedIdentity:
storefrontHeaderSuffix
setIdentity:
delegationProperties
setBuildVersion:
setEnqueuerProperties:
storeID
storeSubscriptionID
deviceSpecificUserInfo
setStoreCloudAlbumID:
isExplicitItem
floatValue
artworkDataSource
storeAlbumID
setGlobalPlaylistID:
albumArtistName
storeArtistID
trackArtistName
genreName
episodeNumber
seasonNumber
radioStationStringIdentifier
radioStationName
_playbackErrorNotification:
eventObserver
setAllowsNewPlaybackErrorItem:
engine:didFailToPlayItem:withError:
engine:didFailToPlayFirstItem:withError:
firstPlaybackErrorItem
isSystemMusicApplication
_itemWillChange:
_itemDidChange:
allowsNewPlaybackErrorItem
setFirstPlaybackErrorItem:
_contentsChanged
_allowsNewPlaybackErrorItem
_firstPlaybackErrorItem
mpcReporting_isQuickPlay
setSupportsBeginFastForward:
setSupportsEndFastForward:
setSupportsBeginRewind:
setSupportsEndRewind:
setSupportsSkipForward:
setSupportsSkipBackward:
setSupportsSeekToPlaybackPosition:
supportsSkipForward
setPreferredForwardJumpIntervals:
supportsSkipBackward
setPreferredBackwardJumpIntervals:
preferredBackwardJumpIntervals
setPrefersNegativeBackwardSkipIntervals:
setSupportedPlaybackRates:
_feedbackCommandWithMediaRemoteCommand:
setMinimumValue:
setMaximumValue:
initWithResponse:mediaRemoteCommand:
setValue:
seekCommand
playbackRateCommand
wishlistCommand
rateCommand
contentItemIdentifier
revision
_contentItemIdentifier
_revision
_indexPath
_duration
_contentItemID
supportsBeginFastForward
_seekCommandWithMediaRemoteCommand:options:
supportsBeginRewind
supportsEndFastForward
supportsEndRewind
prefersNegativeBackwardSkipIntervals
supportsSeekToPlaybackPosition
beginSeekWithDirection:
jumpByInterval:
changePositionToElapsedInterval:
preferredForwardJumpIntervals
_supportsBeginFastForward
_supportsEndFastForward
_supportsBeginRewind
_supportsEndRewind
_supportsSkipForward
_supportsSkipBackward
_prefersNegativeBackwardSkipIntervals
_supportsSeekToPlaybackPosition
_preferredBackwardJumpIntervals
_preferredForwardJumpIntervals
supportedPlaybackRates
setPlaybackRate:
_supportedPlaybackRates
changeValue:
localizedShortTitle
presentationStyle
value
_value
_localizedShortTitle
_presentationStyle
minimumValue
maximumValue
_minimumValue
_maximumValue
_itemReportingJingleTimedMetadataDidChangeNotification:
_playerItemDidChangeNotification:
_playerItemWillChangeNotification:
_playerPlaybackStateDidChangeNotification:
_playerDidReloadWithPlaybackContextNotification:
_playerWillReloadWithPlaybackContextNotification:
_playerDidSetCurrentTimeNotification:
_playerWillSetCurrentTimeNotification:
systemTimeZone
setEventTimeZone:
identityPropertiesLoader
eventDuration
itemGenericObject
overrideItemType
trackInfo
originalIdentifierSet
setAdamID:
setCloudAlbumID:
globalPlaylistID
setCloudPlaylistID:
cloudVersionHash
setPlaylistVersionHash:
setSubscriptionAdamID:
setRadioAdamID:
setPurchasedAdamID:
subscriptionAdamID
purchasedAdamID
setCloudID:
setTrackInfo:
setRequestingBundleIdentifier:
setRequestingBundleVersion:
setMediaType:
setContainerType:
setContainerIDs:
setItemIDs:
setTimedMetadata:
enqueuerProperties
_newReportingPlaybackActivityEventForPlayActivityEvent:eventSource:
_reportPlaybackEndedForTimeoutWithItem:
_itemStartTimeForItem:
setItemStartTime:
_itemEndTimeForItem:withProposedEndTime:
_setLastPlayEventEndTimeForCurrentItem:
mpcReporting_isValidReportingItem
setEndReasonType:
initialPlaybackStartTime
userChangedItemsDuringPlayback
setReasonHintType:
setPlayActivityEvent:
setShouldReportToStore:
didHitPlaybackTimeoutEndingPlayback:withCurrentItem:
didTransitionItemForBan:
willHitPlaybackTimeoutEndingPlayback:withCurrentItem:
willTransitionItemForBan:
_currentJingleReportingTimedMetadata
_hasPendingContainerChange
_hasSetLastPlayEventTimeStamp
_isReloadingWithPlaybackContext
_isScrubbing
_itemForCurrentTimeChange
_recordEventOperationQueue
_lastPlayEventEndTimeForCurrentItem
_lastPlayEventTimeStamp
_shouldReportAsPlaying
_startTimeForCurrentTimeChange
_offline
_SBEnabled
_storeFrontID
mpcReporting_itemType
mpcReporting_trackInfo
setIdentityPropertiesLoader:
setEventDuration:
setOverrideItemType:
setShouldReportPlayEventsToStore:
setJingleTimedMetadata:
_shouldReportPlayEventsToStore
_eventDuration
_overrideItemType
_lyricsID
_itemGenericObject
_trackInfo
_modelPlayEvent
_featureName
_recommendationData
_requestingBundleIdentifier
_requestingBundleVersion
resolvedPlayerPathForPlayerPath:
setInvalidationToken:
setResolvedPlayerPath:
_mediaRemotePlaybackQueue
initWithName:
dateWithTimeIntervalSinceNow:
sharedService
addAssertion:
_onQueue_mergeContentItems:queueRange:
imageWithData:
_initWithMediaRemoteContentItem:
allValues
_onQueue_setOptimisticPlaybackState:
_onQueue_updateOptimisticStateForCommand:options:
setAccessQueue:
setCalloutQueue:
invalidationToken
_playbackStateCacheState
_supportedCommandsCacheState
_playingIdentifierCacheState
_playingItemIdentifier
_maximumLoadedRange
_contentItemIDs
_contentItems
_contentItemArtwork
_playingItemIdentifierFuture
_contentItemIDsFutures
_contentItemFutures
_contentItemArtworkFutures
_resolvedPlayerPath
_artworkDataSource
_invalidationToken
commandInfoForCommand:
_isMusicCellularStreamingAllowedDidChangeNotification:
_updateState
_updatePlayerItemProperties
_avItemTypeDidChangeNotification:
_applyNetworkPolicyToPlayerItem
preferredPeakBitRate
setPreferredPeakBitRate:
sizeLimitForNetworkType:
changePlaybackIndexBy:deltaType:
loadedTimeRanges
CMTimeRangeValue
_fileSize
shouldAllowDataForNetworkType:
_prefersHighQualityVideoContentForNetworkType:
_prefersHighQualityAudioContentForNetworkType:
networkConstraints
_hasFinishedLoadingPlayerItem
_itemType
_networkConstraints
_networkType
_playerItemFileSize
_playerItemLoadedTimeRangesObserver
_playerItem
_preferredNetworkPolicyType
radioStationPlaybackMetadata
nowPlayingContext
setNowPlayingContext:
stationMatchContext
setStationMatchContext:
_radioStationPlaybackMetadata
_nowPlayingContext
_stationMatchContext
modelPlayEventRepresentation
currentThread
sharedStoreItemMetadataRequestController
initWithRequest:shouldLibraryPersonalize:
appendMetadataResponse:forRequestSectionedModelObjects:
appendMetadataResponse:forRequestStoreIdentifiers:
allowsExplicitMusic
equivalencyMapping
earliestExpirationDate
allowsExplicitContent
getStoreItemMetadataForRequest:responseHandler:
_getShouldLibraryPersonalizeRequest:completionHandler:
autoupdatingActiveAccount
_modelObjectWithStoreItemMetadata:
_addEquivalencyForMetadata:requestStoreIdentifier:
_eligibilityForItem:
_addAnonymousContainerSection
setShouldUsePlaylistEntry:
_addItemsForChildrenOfMetadata:
storeItemMetadataForItemIdentifier:
appendMetadata:requestStoreIdentifier:
storeItemMetadataRequestItemIdentifierForIdentifiers:
appendEmptySectionForMetadata:requestStoreIdentifier:
childStoreItemMetadatas
stringByAppendingFormat:
modelObjectWithStoreItemMetadata:
_allowsExplicitMusic
_defaultPersonalizationStyle
_equivalencyMapping
_genericObjectBuilder
_looseItemNeedsSection
_storeIDToOccurrenceCount
_unknownEndpointPersonalizationStyle
setReason:
setTimeoutInterval:
storeItemMetadataRequestNeedsPersonalizationForIdentifiers:
setPersonalizationStyle:
clientInfo
setClientInfo:
setDelegatedUserIdentity:
setUserIdentity:
setUserIdentityStore:
supportsKeepLocalStatusObservation
requiredKeepLocalStatusObservationProperties
initWithRequestedPropertySet:
dictionaryRepresentation
addItem:
mergeFrom:
setIdentifierSet:
containerType
setHasContainerType:
hasContainerType
hasIdentifierSet
clearItems
itemsCount
itemAtIndex:
readFrom:
writeTo:
identifierSet
setItems:
_containerType
_identifierSet
_has
setStorePlaylistGlobalID:
setStorePlaylistVersionHash:
setCloudCollectionID:
setDelegateInfoID:
setHasDelegateInfoID:
hasDelegateInfoID
setHasStoreAdamID:
hasStoreAdamID
hasStorePlaylistGlobalID
hasStorePlaylistVersionHash
setHasCloudID:
hasCloudID
hasCloudCollectionID
hasRadioStationID
hasCloudUniversalLibraryID
delegateInfoID
storePlaylistGlobalID
storePlaylistVersionHash
cloudCollectionID
_cloudID
_delegateInfoID
_storeAdamID
_cloudCollectionID
_cloudUniversalLibraryID
_radioStationID
_storePlaylistGlobalID
_storePlaylistVersionHash
setUuid:
setHasAccountID:
hasAccountID
hasUuid
hasDeviceGUID
hasDeviceName
setHasSystemReleaseType:
hasSystemReleaseType
hasRequestUserAgent
hasTimeZoneName
timeZoneName
_timeZoneName
_uuid
setHasMediaType:
hasMediaType
setExcludeFromShuffle:
setHasExcludeFromShuffle:
hasExcludeFromShuffle
excludeFromShuffle
_mediaType
_excludeFromShuffle
hasContentItemID
setHasStoreSubscriptionAdamID:
hasStoreSubscriptionAdamID
setPurchaseHistoryID:
setHasPurchaseHistoryID:
hasPurchaseHistoryID
purchaseHistoryID
_purchaseHistoryID
_storeSubscriptionAdamID
setLibraryAlbumContentReference:
setLibraryArtistContentReference:
setLibraryItemContentReference:
setStoreContentReference:
hasLibraryAlbumContentReference
hasLibraryArtistContentReference
hasLibraryItemContentReference
hasStoreContentReference
libraryAlbumContentReference
libraryArtistContentReference
libraryItemContentReference
storeContentReference
_libraryAlbumContentReference
_libraryArtistContentReference
_libraryItemContentReference
_storeContentReference
hasAlbumName
setRepresentativeItemCloudID:
setHasRepresentativeItemCloudID:
hasRepresentativeItemCloudID
representativeItemCloudID
_representativeItemCloudID
_albumName
hasArtistName
_artistName
setCopyrightText:
hasAlbumArtistName
hasComposerName
contentType
setContentType:
setHasContentType:
hasContentType
hasCopyrightText
setAlbumDiscCount:
setHasAlbumDiscCount:
hasAlbumDiscCount
setHasDiscNumber:
hasDiscNumber
setHasFileSize:
hasFileSize
hasGenreName
setIsCompilation:
setHasIsCompilation:
hasIsCompilation
setHasDuration:
hasDuration
hasTitle
setAlbumTrackCount:
setHasAlbumTrackCount:
hasAlbumTrackCount
setHasTrackNumber:
hasTrackNumber
setHasYear:
hasYear
albumDiscCount
albumTrackCount
_albumArtistName
_albumDiscCount
_albumTrackCount
_composerName
_contentType
_copyrightText
_discNumber
_genreName
_trackNumber
_year
_isCompilation
setRadioStationURLString:
setAccountInfo:
hasRadioStationURLString
hasSeedContentReference
hasNowPlayingContentReference
hasAccountInfo
radioStationURLString
accountInfo
_accountInfo
_radioStationURLString
addAccountInfo:
addContainer:
setStartingItemIndexPath:
accountInfoType
clearAccountInfos
accountInfosCount
accountInfoAtIndex:
clearContainers
containersCount
containerAtIndex:
hasStartingItemIndexPath
accountInfos
setAccountInfos:
containers
setContainers:
startingItemIndexPath
_accountInfos
_containers
_startingItemIndexPath
setContainerIndex:
setHasContainerIndex:
hasContainerIndex
setItemIndex:
setHasItemIndex:
hasItemIndex
containerIndex
itemIndex
_containerIndex
_itemIndex
initWithRequestContext:redownloadParametersString:
setRedownloadParameters:
setPlaybackRequest:
performRequestWithResponseHandler:
beginBackgroundTaskWithName:expirationHandler:
reasonType
initWithGetTracksRequest:playActivityController:
playActitySessionToken
playActivityEvents
_runStep:withFinishHandler:
flattenedTracksWithTracks:
delegatedIdentityProperties
identityProperties
expirationDate
isFinished
tracklistActionType
_cacheTracksForStep:
appendItems:
initWithTracks:tracklistAction:
performWithCompletionHandler:
tracklistAction
_tracklistAction
_tracks
stationMetadata
data
initWithData:
siriRecommendationIdentifier
dataUsingEncoding:
_getPlaybackRequestEnvironmentWithBaseEnvironment:completion:
URLWithString:
mediaQuery
trackIdentifiers
firstTrackIdentifier
seedTrack
_createPlaybackContextWithRecommendedContentWithSeedAdamID:completion:
stringByRemovingPercentEncoding
initWithBase64EncodedString:options:
initWithMultiverseIdentifier:
initWithPersistentID:
sharedCloudController
isGeniusEnabled
_createPlaybackContextFromCloudControllerWithSeedItem:completion:
_createPlaybackContextFromMediaLibraryWithSeedItem:completion:
fetchRecommendedContentWithSeedTrackID:seedTrackIDType:count:completion:
songsQuery
predicateWithPersistentIDs:count:shouldContain:
addFilterPredicate:
geniusItemsForSeedItem:completion:
predicateWithProperty:values:
loadGeniusItemsForSagaID:completionHandler:
initWithMediaRemotePlaybackQueue:
shouldOverrideManuallyCuratedQueue
_playbackContext
defaultIdentityStore
specificAccountWithDSID:
identityAllowingDelegation:
setDelegated:
timeZoneWithName:
setDelegationProperties:
addDelegationUUIDs:forUserIdentity:completionHandler:
insertPropertiesForUserIdentity:usingBlock:completionHandler:
_createRemoteCommandWithConcreteClass:mediaRemoteType:
startPictureInPictureCommand
mpc_remotePlaybackQueueRequiredProperties
mpc_protoContainerRepresentation
mpc_protoItemRepresentation
getDelegationUUIDsForUserIdentity:completionHandler:
initWithIdentifier:data:
setRequestingImmediatePlayback:
shouldExcludeFromShuffle
proxyForObjects:protocol:
_restorePlaybackStateWithCompletion:
endUsingVideoLayer
objects
hasScheduledPlaybackStatePreservation
setScheduledPlaybackStatePreservation:
_preservePlaybackStateImmediately
isStateRestorationSupported
archiveRootObject:toFile:
removeItemAtPath:error:
unarchiveObjectWithFile:
start
restoreStateWithCompletion:
setVideoSupported:
removeEngineObserver:
setSystemMusicApplication:
_playerForMusicPlayerServer
isPictureInPictureSupported
isVideoSupported
setStateRestorationSupported:
mediaRemotePublisher
leaseManager
_pictureInPictureSupported
_videoSupported
_stateRestorationSupported
_scheduledPlaybackStatePreservation
_systemMusicApplication
_delegate
_eventObserver
_implementation
_mediaRemotePublisher
_leaseManager
routeConnectionDidInvalidateNotification:
nowPlayingApplicationDidChangeNotification:
nowPlayingPlayerDidChangeNotification:
_onQueue_invalidateForNotificationName:
activeOriginDidChangeNotification:
playerPathResolutions
invalidatablePlayerPaths
_playerPathResolutions
_invalidatablePlayerPaths
leaseID
initWithConfiguration:
initWithICLeaseSession:
strongToStrongObjectsMapTable
clientCount
setClientCount:
icLeaseSession
mpcLeaseSession
startLeaseSessionWithCompletionHandler:
icSuzeLeaseSession
configuration
stopLeaseSessionWithCompletionHandler:
suzeLeaseSession:leaseRenewalDidFailWithError:
_leaseIDToLeaseSessionInfo
initWithICSuzeLeaseSession:
shouldStopWhenFinished
setShouldStopWhenFinished:
_shouldStopWhenFinished
_clientCount
_icLeaseSession
_mpcLeaseSession
setShouldRestorePlaybackState:
addPointer:
pointerAtIndex:
removePointerAtIndex:
registerPlaybackErrorObserver:
registerPlaybackIntentObserver:
unregisterPlaybackErrorObserver:
unregisterPlaybackIntentObserver:
setState:
setCurrentItem:
setCurrentContainer:
setParentAppBundleID:
_playbackErrorObservers
_playbackIntentObservers
_shouldRestorePlaybackState
_restoringPlaybackState
_syncingNowPlayingInfo
_videoLayer
_activeRouteName
_mediaRemoteMuxer
_parentAppBundleID
_modelSong
_visibleDuration
initWithPlaylistManager:
initWithRequest:avController:
playlistManager
item
_hardQueueRange
_softQueueRange
_controllerContentsDidChangeNotification:
_controllerDidChangeItemNotification:
UTF8String
loadStoreBagWithOptions:completionHandler:
sharedQueue
loadRadioConfigurationWithCompletionBlock:
_serialQueue
initWithStorePlatformDictionary:
_enumerateStoreItemMetadataItemsWithMetadata:block:
childrenStoreIDs
childStorePlatformDictionaryForStoreID:
initWithStorePlatformDictionary:parentStoreItemMetadata:
initWithLookupDictionaries:
enumerateContainerItemsUsingBlock:
_lookupDictionaries
_icSuzeLeaseSession
engineDidPauseForLeaseEnd:
_enqueuerProperties
setClientVersion:
currentDeviceInfo
setHouseholdIdentifier:
setAssetStoreFronts:
_shouldReportToStore
_playActivityEvent
_finishChangeRequestOperationWithError:
playEvent
itemExistsInDatabaseWithPersistentID:
playbackHistoryPlaylist
removeItems:atFilteredIndexes:completionBlock:
appendItems:completion:
recordPlayEventForAlbumPersistentID:
allowsStoreContainerImport
setModelObjects:
recordPlayEventForPlaylistPersistentID:
representativeCloudIdentifier
storeIdentifier
copyright
kind
storeAdamIdentifier
storeCloudIdentifier
storeItemWithIdentifier:
assistantAnalyticsController
setAssistantAnalyticsController:
rtcReportingController
setRtcReportingController:
playbackHistoryController
setPlaybackHistoryController:
lyricsReportingController
setLyricsReportingController:
_assistantAnalyticsController
_playbackHistoryController
_lyricsReportingController
playbackItemMetadata
enumerateIdentifiersUsingBlock:
_setIdentifier:forIdentifierType:
_copyWithZone:class:
initWithItemType:
isNSNumber__
identifierCount
_identifierTypeToIdentifier
setIdentifier:forIdentifierType:
initWithPreviousStep:
_performDefaultHandlingForButtonAction:
_presentServerDialog:completionHandler:
handleButtonAction:usingRequestContext:withCompletionHandler:
initWithStoreDialog:
setAllowInCar:
createCFUserNotification
action
initWithCFUserNotification:
showWithCompletionHandler:
nextStepWithError:
_fireAndForgetServerDialog:
_delegatedIdentityProperties
_finished
_identityProperties
_playActivitySessionToken
_playActitySessionToken
setInteractionLevel:
initWithVerificationContext:
getVerificationContextForUserIdentity:completionHandler:
nextStepWithIdentityProperties:delegatedIdentityProperties:
setPlayActivityEvents:
nextStepWithResponse:error:
actionDictionary
setAdditionalRequestParameters:
nextStepByPerformingButtonAction:
buttons
playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler:
playableContentManager:initializePlaybackQueueWithCompletionHandler:
playableContentManager:initializePlaybackQueueWithContentItems:completionHandler:
playableContentManager:didUpdateContext:
isAvailable
clientVersion
_copyWithPlaybackRequestEnvironmentClass:
setIdentityStore:
_clientVersion
_delegationProperties
_householdIdentifier
sectionWithAVItem:
placeholderSectionWithStationName:
initWithObjects:
identifiersIdentifyRadioStation:
_indexPathForGlobalIndex:
AVItemAtIndex:
AVItemQueueIdentifierAtIndex:
numberOfItems
isExplicitItemAtIndex:
indexOfObjectIdenticalTo:
trackForItemAtIndex:
trackType
indexPathForItem:inSection:
_globalIndexForIndexPath:
playbackHistory
removeExplicitItems
savePlaybackHistoryWithUpdates:completionHandler:
initWithIdentityStore:
stationIdentifier
currentTrack
setCurrentTrack:
numberOfSkips
setNumberOfSkips:
setTracks:
updateHistoryForStationWithIdentifier:userIdentity:usingBlock:completionHandler:
trackModels
setRadioStation:
updateWithPersonalizedResponse:
indexOfItemWithAVItemQueueIdentifier:
isPlaceholderAVItem:
needsMoreTracksForPlaybackIndex:
savePlaybackHistoryWithUpdates:
tracksByApplyingTracksResponse:currentIndex:
_originalStationName
_placeholderItemSection
_playbackHistoryStore
_prefixItemSection
_sections
_stationTracksSection
setQueueIdentifier:
_item
initWithStationIdentifier:
initWithIndexesInRange:
removeTracksAtIndexes:
initWithTrack:
addTrack:
likeState
parentTrack
_playbackHistory
_trackModels
raise:format:
container
setUserInfo:
_explicit
_container
_userInfo
_modelPlayEventRepresentation
setRepresentations:
comparePlaybackOrder:
_modelGenericObjectRepresentation
_durationSnapshot
newItem
insertItem:afterEntity:
removeItem:
removeAllItems
storeBagDictionary
initWithBagDictionary:
initWithURLBagDictionary:
objectsAtIndexes:
initWithPlatformContext:
setKeyProfile:
setValue:forRequestParameter:
storeFrontSuffix
setStoreFrontSuffix:
setResponseBlock:
setStoreBagDictionary:
_storeBagDictionary
initWithInteger:
model
_station
artworkCollection
sharedModel
stationWithID:
stationWithStationStringID:
stationWithHash:
initWithStation:
stationDictionary
isEffectivelyEqualStationWithPlaybackMetadata:
station
_artworkCollection
_hasSetArtworkCollection
_hasSetStationHash
_hasSetStationID
_hasSetStationName
_hasSetStationStringID
_hasValidRadioStation
setArtworkCollection:
newStationWithDictionary:
_allowsStoreContainerImport
_playEvent
userAdvancedDuringPlayback
setSkipDate:
replaceTrackAtIndex:withTrack:
_loadAdditionalItemsIfNeeded
bufferingState
_endObservingIdentityStoreForSignOut
_startPlaybackRequestWithPlaybackContext:
setReasonType:
_loadTracksWithRequest:
setPlaybackContext:
getHistoryForStationWithIdentifier:userIdentity:completionHandler:
isSkippable
_detectSignOutForIdentityStore:
_responseDidInvalidate
_detectSignOutForIdentityStoreChangeNotification:
setAllowsExplicitContent:
setShouldResponseContainStationMetadata:
_defaultGetTracksRequestWithContext:radioStation:
_failAfterRequest:withError:
_observePersonalizationResponse:
_savePlaybackHistoryWithCurrentIndex:
contentsDidChangeWithPreferredStartIndex:
_beginObservingIdentityStoreForSignOut
_indexOfAVItem:
_removeRestrictedTracks
_repersonalizeCurrentTracks
synchronizeWithCompletionHandler:
setPreservingCurrentlyPlayingItem:
canReorder
player:shouldContinuePlaybackForNetworkType:returningError:
_lastCleanPlayedIdentifier
_lastPlayedIdentifier
_lastResponse
_loadingOperationDepth
_loadingOperationQueue
_mayHaveRestrictedContent
_observedIdentityStore
_playbackQueue
_queueGeneration
existingArtworkEffectResultForEffectType:catalog:options:
loadArtworkEffectResultForEffectType:catalog:options:systemEffectHandler:completionHandler:
hasExistingRepresentationOnDiskForArtworkCatalog:
getExportableArtworkURLForCatalog:completionHandler:
timedMetadataGroups
stringValue
getBytes:length:
charValue
scannerWithString:
scanString:intoString:
scanUpToString:intoString:
isAtEnd
initWithLookupDictionary:
setLookupItemArtworks:
setExplicitSong:
setTimedMetadataData:
storeRequestContext
setStoreRequestContext:
allStorePlatformMetadata
_timedMetadataGroups
Play Queue Identifiers Changed
v8@?0
Item Changed: 
Content item completed without error or value: %@
v24@?0@"MPNowPlayingContentItem"8@"NSError"16
v32@?0@"NSString"8Q16^B24
Failed to get play queue identifers
v16@?0@"NSArray"8
v16@?0@"NSError"8
Playing Identifier Changed
Failed to get playing identifer
v24@?0@"NSString"8@"NSError"16
v32@?0@"MPNowPlayingContentItem"8@"NSIndexPath"16^B24
v24@?0@"NSArray"8@"NSError"16
playQueueIdentifiersFuture=%@ playingIdentifierFuture=%@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
error
T@"NSError",R,N
invalidationHandler
T@?,C,N
invalidationObservers
T@"NSArray",R,N
middleware
T@"MPCMediaRemoteMiddleware",&,N,V_middleware
playerRequest
T@"MPCPlayerRequest",&,N,V_playerRequest
playQueueIdentifiersFuture
T@"MPCFuture",&,N,V_playQueueIdentifiersFuture
playingIdentifierFuture
T@"MPCFuture",&,N,V_playingIdentifierFuture
T@?,C,N,V_invalidationHandler
T@"NSArray",R,N,V_invalidationObservers
<%@ %p setupDuration:%f error:%@>
T@"NSError",&,N,V_error
setupDuration
Td,N,V_setupDuration
MPCModelGenericAVItemJingleTimedMetadataDidChangeNotification
MPCModelGenericAVItemPlaybackPreventionStateDidChangeNotification
movie
musicvideo
uploadedaudio
uploadedvideo
tvshow
music
com.apple.MediaPlayer.MPCModelGenericAVItem.accessQueue
%@ %@
%lli
v24@?0@"ICUserIdentityProperties"8@"NSError"16
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
v16@?0@"ICStoreRequestContext"8
v24@?0@"ICMusicSubscriptionLeaseSession"8@"NSError"16
com.apple.MediaPlayer.MPCModelGenericAVItem.assetLoadOperationQueue
v24@?0@"MPCModelGenericAVItemAssetLoadResult"8@"NSError"16
v24@?0@"ICURLBag"8@"NSError"16
match
purchaseHistory
v24@?0@"ICMusicSubscriptionPlaybackResponse"8@"NSError"16
successfully
with error: %@
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.sCompletionSerialQueue
v16@?0@"MPIdentifierSet"8
v16@?0@"MPModelFileAsset"8
v20@?0B8@"NSError"12
v24@?0@"MPCSuzeLeaseSession"8@"NSError"16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-3423.1.1/MediaPlaybackCore/MPCModelGenericAVItem.m
v24@?0@"ICRadioLikeResponse"8@"NSError"16
v24@?0@"ICSecureKeyDeliveryResponse"8@"NSError"16
v24@?0@"MPCModelGenericAVItemTimedMetadataResponse"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.LyricsOperationQueue
v24@?0@"MPModelSong"8@"NSError"16
tracks
v12@?0B8
app.music.tilt.stream-track
app.music.tilt.track
app.music.uploaded-content
app.music.match
app.music.purchase
app.music.subscription
app.music.synced
.cloud
info
com.apple.radio.ping.jingle
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.utilitySerialQueue
leasePlaybackPreventionState
Tq,R,N
rtcReportingParentHierarchyToken
T@,R,N
rtcReportingServiceIdentifier
T@"NSString",R,C,N
rtcReportingAssetType
assetCacheProvider
T@"<MPCModelPlaybackAssetCacheProviding>",&,N,V_assetCacheProvider
assetSourceStoreFrontID
T@"NSString",C,N,V_assetSourceStoreFrontID
equivalencySourceAdamID
Tq,N,V_equivalencySourceAdamID
genericObject
T@"MPModelGenericObject",&,N,V_genericObject
jingleTimedMetadata
T@"NSData",R,C,N,V_jingleTimedMetadata
mediaLibrary
T@"MPMediaLibrary",&,N,V_mediaLibrary
privateListeningEnabled
T@"NSNumber",C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
siriInitiated
T@"NSNumber",C,N,GisSiriInitiated,V_siriInitiated
radioPlayback
TB,N,GisRadioPlayback,V_radioPlayback
shouldReportPlayEventsToStore
TB,R,N
playbackRequestEnvironment
T@"MPCPlaybackRequestEnvironment",R,C,N,V_playbackRequestEnvironment
stationItemLikedState
Tq,N,V_stationItemLikedState
supportsRadioTrackActions
TB,N,VsupportsRadioTrackActions
Tq,R,N,V_leasePlaybackPreventionState
asset
T@"AVURLAsset",R,W,N,V_asset
completionHandler
T@?,C,N,V_completionHandler
v16@?0@"MPModelGenericObject"8
jinglePlayActivityReportingController
T@"MPCJinglePlayActivityReportingController",&,N,V_jinglePlayActivityReportingController
reportingPlaybackObserver
T@"MPCReportingPlaybackObserver",&,N,V_reportingPlaybackObserver
adamIDData
T@"NSData",C,N,V_adamIDData
streamFields
T@"MPCModelGenericAVItemTimedMetadataStreamFields",&,N,V_streamFields
unpersonalizedContentDescriptors
T@"MPSectionedCollection",C,N,V_unpersonalizedContentDescriptors
title
T@"NSString",C,N,V_title
artist
T@"NSString",C,N,V_artist
album
T@"NSString",C,N,V_album
explicitContent
TB,N,GisExplicitContent,V_explicitContent
artworkDictionaries
T@"NSArray",C,N,V_artworkDictionaries
DeviceSupports1080p
DeviceSupports720p
q24@?0@"MPStoreFileAssetInfo"8@"MPStoreFileAssetInfo"16
allowsAssetCaching
TB,N,V_allowsAssetCaching
allowsAssetInfoCaching
TB,N,V_allowsAssetInfoCaching
assetPathExtension
T@"NSString",C,N,V_assetPathExtension
assetProtectionType
Tq,N,V_assetProtectionType
assetQualityType
Tq,N,V_assetQualityType
assetURL
T@"NSURL",C,N,V_assetURL
isHomeSharingAsset
TB,N,V_isHomeSharingAsset
isHLSAsset
TB,N,V_isHLSAsset
isCloudStreamingAsset
TB,N,V_isCloudStreamingAsset
protectedContentSupportStorageFileURL
T@"NSURL",C,N,V_protectedContentSupportStorageFileURL
purchaseBundleDictionary
T@"NSDictionary",C,N,V_purchaseBundleDictionary
streamingKeyCertificateURL
T@"NSURL",C,N,V_streamingKeyCertificateURL
streamingKeyServerURL
T@"NSURL",C,N,V_streamingKeyServerURL
suzeLeaseID
T@,&,N,V_suzeLeaseID
iTunesStoreStream
TB,N,GisiTunesStoreStream,V_iTunesStoreStream
willBecomeActivePlayerItemHandler
T@?,C,N,V_willBecomeActivePlayerItemHandler
hasValidAsset
com.apple.MediaPlaybackCore.MPCReportingDeviceIdentityPropertiesLoader.serialWorkQueue
com.apple.MediaPlaybackCore.MPCReportingDeviceIdentityPropertiesLoader.calloutQueue
sharedLoader
T@"MPCReportingDeviceIdentityPropertiesLoader",R
HierarchyToken
app.music.media-clip
AlwaysUse64kbpsQuality
com.apple.mobileipod
AlwaysUse256kbpsQuality
mediaClip
T@"MPModelMediaClip",R,N,V_mediaClip
com.apple.MediaPlaybackCore
REMOTE_CONTROL_LIKE_TRACK_RADIO
Radio
REMOTE_CONTROL_LIKE_TRACK_SHORT
REMOTE_CONTROL_DISLIKE_TRACK_RADIO
REMOTE_CONTROL_DISLIKE_TRACK_SHORT
now_playing
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]_block_invoke
v16@?0q8
v24@?0@"MPQueueFeeder"8@"NSError"16
v24@?0@"MPPlaybackContext"8@"NSError"16
initializedSupportedCommands
TB,N,GhasInitializedSupportedCommands,V_initializedSupportedCommands
engineRestoringState
TB,N,GisEngineRestoringState,V_engineRestoringState
infoCenter
T@"MPNowPlayingInfoCenter",R,N,V_infoCenter
commandCenter
T@"MPRemoteCommandCenter",R,N,V_commandCenter
playbackEngine
T@"MPCPlaybackEngine",R,W,N,V_playbackEngine
v16@?0@"MPModelPlaybackPosition"8
v16@?0@"MPModelSong"8
requestedProperties
T@"MPPropertySet",R,C,N,V_requestedProperties
assetLoadProperties
T@"MPCModelGenericAVItemAssetLoadProperties",&,N,V_assetLoadProperties
requirePreferredAssetQuality
TB,N,V_requirePreferredAssetQuality
responseHandler
T@?,C,N,V_responseHandler
MediaRemote
MediaRemote-Oversize
Middleware
Middleware-Oversize
Playback
Playback-Oversize
Queue
Queue-Oversize
Reporting
Reporting-Oversize
com.apple.amp.mediaplaybackcore
MPCMediaLibraryPlaybackAssetCacheProviderErrorDomain
plist
deviceLibraryProvider
T@"MPCMediaLibraryPlaybackAssetCacheProvider",R
storeAccountID
deviceGUID
deviceName
requestUserAgent
systemReleaseType
timeZone
supportsSecureCoding
TB,R
TQ,R,N,V_storeAccountID
T@"NSString",R,C,N,V_deviceGUID
T@"NSString",R,C,N,V_deviceName
Tq,R,N,V_systemReleaseType
T@"NSString",R,C,N,V_requestUserAgent
T@"NSTimeZone",R,C,N,V_timeZone
TQ,D,N
T@"NSString",C,D,N
Tq,D,N
T@"NSTimeZone",C,D,N
valueTransformer
T@?,C,N,V_valueTransformer
relationshipModelClass
T#,N,V_relationshipModelClass
entityTranslator
T@"MPCMediaRemoteEntityTranslator",R,N
_identifiers
@24@?0@"MPNowPlayingContentItem"8@"MPCMediaRemoteMiddleware"16
__%@__PROPERTY
v32@?0@"NSString"8@"MPPropertySet"16^B24
v16@?0@"MPModelObject"8
MPModelClass
T#,R,N,V_MPModelClass
 source=%@
tracklistDataSource
T@"<MPCPlaybackIntentDataSource>",R,N
localizedTitle
T@"NSString",C,N,V_localizedTitle
tracklistSource
Tq,N,V_tracklistSource
tracklistToken
T@"<NSSecureCoding>",&,N,V_tracklistToken
shuffleMode
Tq,N,V_shuffleMode
playActivityFeatureName
T@"NSString",C,N,V_playActivityFeatureName
playActivityRecommendationData
T@"NSData",C,N,V_playActivityRecommendationData
@"MPArtworkCatalog"16@?0@"MPModelRadioStation"8
v16@?0@"MPModelRadioStation"8
currentItem
state
parentAppBundleID
systemPlayer
T@"MPCPlayer",R,N,V_systemPlayer
applicationPlayer
T@"MPCPlayer",&,N,V_applicationPlayer
controller
T@"MPCMediaRemoteController",R,N
implementation.currentItem.type
PlaybackEngine.implementation.currentItem.type didChange
v24@?0@"MPCPlaybackEngine"8@"NSDictionary"16
inputsProtocols
outputProtocols
inputOperations
T@"NSMapTable",&,N
T@"MPCPlaybackEngineMiddleware",&,N,V_middleware
T@"NSMapTable",&,N,V_inputOperations
com.apple.MediaPlaybackCore.MPCPlaybackHistoryController.operationQueue
operationQueue
T@"NSOperationQueue",&,N,V_operationQueue
lastRecordedPlayEvent
T@"MPModelPlayEvent",&,N,V_lastRecordedPlayEvent
currentRepeatType
Tq,N,V_currentRepeatType
Playback State Changed
v16@?0@?<I@?>8
Failed to get playback state
playbackStateFuture=%@
playbackStateFuture
T@"MPCFuture",&,N,V_playbackStateFuture
MPCPlayerCommandRequestMediaRemoteOptionPlaybackIntent
commands
T@"NSArray",&,N,V_commands
options
TQ,N,V_options
command
TI,R,N,V_command
T@"NSDictionary",R,C,N,V_options
T@"MPCMediaRemoteController",R,N,V_controller
Failed to send command %d
request
T@"MPCPlayerCommandRequest",R,N,V_request
TQ,R,N,V_options
com.apple.music.playbackqueue.tracklist
com.apple.music.playbackqueue.radio
MPCPlayerRequestErrorDomain
 playerPath=%@
v24@?0@8@"NSError"16
playerPath
T@"MPCPlayerPath",&,N,V_playerPath
playingItemProperties
T@"MPPropertySet",C,N,V_playingItemProperties
queueSectionProperties
T@"MPPropertySet",C,N,V_queueSectionProperties
queueItemProperties
T@"MPPropertySet",C,N,V_queueItemProperties
tracklistRange
T{?=qq},N,V_tracklistRange
builder
T@"<MPCPlayerResponseBuilder>",R,D,N
videoView
T@"UIView<MPCVideoView>",&,N,V_videoView
tracklist
T@"MPCPlayerResponseTracklist",R,N,V_tracklist
Tq,R,N,V_state
response
T@"MPCPlayerResponse",&,N,V_response
nowPlaying
seed
stationHash
stationName
stationStringID
stationURL
prefixItem
T@"MPAVItem",&,N,V_prefixItem
T@"MPCPlaybackRequestEnvironment",C,N,V_playbackRequestEnvironment
nowPlayingContentReference
T@"MPCModelRadioContentReference",C,N,V_nowPlayingContentReference
seedContentReference
T@"MPCModelRadioContentReference",C,N,V_seedContentReference
T@"NSString",C,N,V_stationHash
T@"NSString",C,N,V_stationName
T@"NSString",C,N,V_stationStringID
stationID
Tq,N,V_stationID
T@"NSURL",C,N,V_stationURL
app.music.queue-source.catalog
MPCModelStorePlaybackItemsRequestAllowLocalEquivalencies
MPCModelStorePlaybackItemsRequestAllowsMultipleResponseHandlerCalls
MPCModelStorePlaybackItemsRequestClientIdentifier
MPCModelStorePlaybackItemsRequestWantsDetailedKeepLocalRequestableResponse
MPCModelStorePlaybackItemsRequestPlaybackRequestEnvironment
MPCModelStorePlaybackItemsRequestStoreIDs
MPCModelStorePlaybackItemsRequestSectionedModelObjects
v32@?0@"MPModelObject"8q16^B24
T@"MPCPlaybackRequestEnvironment",C,N
wantsDetailedKeepLocalRequestableResponse
TB,N
rtcReportingPlayQueueSourceIdentifier
previousResponse
T@"MPModelResponse",&,N
T@"MPModelResponse",&,N,V_previousResponse
allowsMultipleResponseHandlerCalls
TB,N,V_allowsMultipleResponseHandlerCalls
TB,N,V_wantsDetailedKeepLocalRequestableResponse
allowLocalEquivalencies
TB,N,V_allowLocalEquivalencies
clientIdentifier
T@"NSString",C,N,V_clientIdentifier
sectionedModelObjects
T@"MPSectionedCollection",C,N,V_sectionedModelObjects
storeIDs
T@"NSArray",C,N,V_storeIDs
MPCQueueFeederContentItemIdentifierCollectionDidChangeNotification
MPC_contentItemIdentifierCollection
T@"MPCContentItemIdentifierCollection",R,N
layer.readyForDisplay
layer.player.currentItem.presentationSize
readyForDisplay
TB,R,N,GisReadyForDisplay
preferredContentSize
T{CGSize=dd},R,N
videoGravity
T@"NSString",&,N
T@"NSArray",&,N
T@"MPCPlaybackEngine",&,N,V_playbackEngine
T@"NSArray",&,N,V_invalidationObservers
MediaPlaybackCoreErrorDomain
MPCErrorUserInfoKeyStoreDialogDictionary
NSDebugDescription
com.apple.MediaPlaybackCore.MPCMediaPlayerLegacyPlayer.stateRestorationSerialQueue
SIM_VOLUME
v24@?0@"MPCPlayerItemContainer"8@"NSError"16
playback_archive
MPCPlayerStateRestorationPlaylistManagerID
MPCPlayerStateRestorationPreviousAttemptPlaylistManagerID
MPCPlayerRestorationPreviousAttemptCount
MPCPlayerStateRestorationPlaylistManagerCoderData
activeRouteName
currentContainer
player
T@"MPCMediaPlayerLegacyAVController",&,N,V_player
playerObserver
T@"MPCMediaPlayerLegacyNowPlayingObserver",&,N,V_playerObserver
reportingController
T@"MPCMediaPlayerLegacyReportingController",&,N,V_reportingController
avController
T@"MPAVController",R,N
iAmTheiPod
TB,N,V_iAmTheiPod
hardQueueItemCount
TQ,R,N
pictureInPictureSupported
fallbackPlaybackIntent
T@"MPCPlaybackIntent",&,N,V_fallbackPlaybackIntent
mediaRemoteSync
TB,R,N,GisMediaRemoteSyncing
T@"MPCMediaPlayerLegacyPlayer",W,N,V_player
fallbackPlaybackContext
T@"MPPlaybackContext",&,N,V_fallbackPlaybackContext
mpcPlayer
T@"MPCMediaPlayerLegacyPlayer",W,N,V_mpcPlayer
playlistManagerUUID
T@"NSUUID",&,N,V_playlistManagerUUID
_personalizationResponse
T@"MPStoreLibraryPersonalizationResponse",R,N,V_personalizationResponse
_updatedResponse
T@"MPCModelStorePlaybackItemsResponse",R,N,G_updatedResponse,V_updatedResponse
finalResponse
TB,N,GisFinalResponse,V_finalResponse
invalidationDate
T@"NSDate",C,N,V_invalidationDate
MPCAVPlaylistManagerDisableQueueModificationsDidChange
playlistManagerArchiveVersion
hardQueueSourceContexts
hardQueueInsertionIndex
repeatPlaylistIdentifier
softQueueFeeder
disableSoftQueueFaulting
maximumModifiedPlaylistIterationIndex
ignoreSoftQueueInvalidation
ignoreHardQueueInvalidation
softQueueModifications
v32@?0@"_MPCAVItemSourceContext"8Q16^B24
com.apple.MediaPlaybackCore.MPCMediaPlayerLegacyPlaylistManager.accessQueue
com.apple.MediaPlaybackCore.MPCMediaPlayerLegacyPlaylistManager.musicPlayerControllerAccessQueue
ignoreUpNextDisabled
com.apple.Music
UpNextDisabled
-[MPCMediaPlayerLegacyPlaylistManager addPlaybackContext:toQueueWithInsertionType:completionHandler:]
Could not add tracks to Up Next
v24@?0Q8@"NSError"16
-[MPCMediaPlayerLegacyPlaylistManager clearHardQueue]
-[MPCMediaPlayerLegacyPlaylistManager clearSoftQueue]
-[MPCMediaPlayerLegacyPlaylistManager moveItemAtPlaybackIndex:toPlaybackIndex:intoHardQueue:]
-[MPCMediaPlayerLegacyPlaylistManager removeItemAtPlaybackIndex:]
keepingCurrentItem because currentItem was found after invalidation at index %lu.
not keepingCurrentItem because currentItem was not found in active queue feeder.
keepingCurrentItem because preferredStartIndex (%lu) was still currentItem.
not keepingCurrentItem because currentItem was not at the preferredStartIndex (%lu).
keepingCurrentItem because queue changes were not for the active queue feeder.
v16@?0@"MPMusicPlayerControllerQueue"8
allowsUserVisibleUpcomingItems
canSeek
canSkipToPreviousItem
playbackMode
userCanChangeShuffleAndRepeatType
T@"MPQueueFeeder",&,N,V_softQueueFeeder
T@"NSMutableArray",&,N,V_hardQueueSourceContexts
lastPlayedSoftQueueItem
T@"MPAVItem",&,N,V_lastPlayedSoftQueueItem
nextCurrentIndex
Tq,N,V_nextCurrentIndex
Tq,N,V_hardQueueInsertionIndex
repeatPlaylistIdentifer
T@"_MPCAVItemSourceContext",C,N,V_repeatPlaylistIdentifer
T@"_MPCAVPlaylistIteration",&,N,V_softQueueModifications
disableQueueModifications
TB,N,V_disableQueueModifications
hardQueuePlaylistIndexRange
T{_NSRange=QQ},R,N
softQueuePlaylistIndexRange
queueFeeder
identifier
%@ queueFeeder:%@ itemIdentifier:%@
itemIdentifier
T@"<MPAVItemQueueIdentifier>",&,N,V_itemIdentifier
T@"MPQueueFeeder",&,N,V_queueFeeder
sourceContexts
iterationIndex
count
indexToFaultIn
T@"MPSparseArray",&,N,V_sourceContexts
TQ,N,V_iterationIndex
TQ,N,V_count
TQ,N,V_indexToFaultIn
allowsHLSContent
TB,N,V_allowsHLSContent
assetSourceStorefrontID
T@"NSString",C,N,V_assetSourceStorefrontID
prefersVideoContent
TB,N,V_prefersVideoContent
fileAsset
T@"MPModelFileAsset",&,N,V_fileAsset
homeSharingAsset
T@"MPModelHomeSharingAsset",&,N,V_homeSharingAsset
itemIdentifiers
T@"MPIdentifierSet",&,N,V_itemIdentifiers
prefersHighQualityContent
TB,N,V_prefersHighQualityContent
storeAsset
T@"MPModelStoreAsset",&,N,V_storeAsset
accountID
TQ,N,V_accountID
delegatedAccountID
TQ,N,V_delegatedAccountID
householdID
T@"NSString",C,N,V_householdID
storefrontID
T@"NSString",C,N,V_storefrontID
Controller Invalidated
v16@?0@"MPCMediaRemoteController"8
controllerFuture=%@
controllerFuture
T@"MPCFuture",&,N,V_controllerFuture
artworkCatalog
durationSnapshot
explicit
modelGenericObjectRepresentation
composerName
avItem
T@"MPAVItem",R,N,V_avItem
Supported Commands Changed
v16@?0@"<MPCSupportedCommands>"8
Failed to get supported commands
supportedCommandsFuture=%@
supportedCommandsFuture
T@"MPCFuture",&,N,V_supportedCommandsFuture
{?=dddddffB}
{?=dddddffB}72@?0@8{?=dddddffB}16
T@"MPCMediaRemoteController",&,N,V_controller
queueContentItems
T@"MPSectionedCollection",&,N,V_queueContentItems
supportedCommands
T@"<MPCSupportedCommands>",&,N,V_supportedCommands
playingIndexPath
T@"NSIndexPath",N,V_playingIndexPath
playerState
Tq,N,V_playerState
operationType
Tq,N,V_operationType
requestContext
T@"ICStoreRequestContext",C,N,V_requestContext
subscriptionLeaseSession
T@"ICMusicSubscriptionLeaseSession",&,N,V_subscriptionLeaseSession
v16@?0@"MPModelAlbum"8
v16@?0@"MPModelPlaylist"8
v36@?0@"MPIdentifierSet"8B16@"NSString"20@"NSString"28
v16@?0@"NSDictionary"8
com.apple.MediaPlayer.MPCModelQueueFeeder.PlaceholderItemIdentifier
shuffleController
startTimeModifications
endTimeModifications
assetStoreFronts
v24@?0q8@"NSError"16
v32@?0@"MPIdentifierSet"8@"NSNumber"16^B24
com.apple.MediaPlayer.MPCModelQueueFeeder: 
shouldExcludeNonShuffleItems
v16@?0@"MPModelPlayEvent"8
v32@?0@"NSIndexPath"8@"MPIdentifierSet"16^B24
LOADING_AUDIO_LABEL
MediaPlayer
v24@?0B8B12@"NSError"16
com.apple.MediaPlayer.MPCModelQueueFeeder.operationQueue
v24@?0@"MPModelResponse"8@"NSError"16
rtcReportingSessionAdditionalUserInfo
T@"NSDictionary",R,C,N
requiredPropertiesForStaticMediaClips
T@"MPPropertySet",R,N
com.apple.MediaPlayer.MPCModelQueueFeeder.accessQueue
playbackState [was nil before]
I8@?0
playbackState [optimistic state was wrong, reset]
supportedCommands [was nil before]
Failed to create playback context from playback intent %@
Unsupported queue command %d
Failed to send command %d (MRMediaRemoteCommandHandlerStatus = %d)
{_MSVSignedRange=qq}
playbackState [from notification]
v40@?0q8r^@16Q24^B32
v32@?0@"ICRadioStationTrack"8q16^B24
v32@?0@"MPModelRadioStation"8q16^B24
v24@?0@"MPStoreLibraryPersonalizationResponse"8@"NSError"16
v16@?0@"MPAsyncBlockOperation"8
radioStationTracks
T@"MPSectionedCollection",C,N,V_radioStationTracks
results
T@"MPSectionedCollection",R,C,D,N
T@"MPCPlayerResponse",R,W,N,V_response
metadataObject
T@"MPModelGenericObject",R,N,V_metadataObject
<%@:
 route=%@
 [system media app]
 bundleID=%@
 playerID=%@
 local active
v24@?0^v8^{__CFError=}16
v16@?0^v8
mediaRemotePlayerPath
T^v,R,N,V_mediaRemotePlayerPath
route
T@"MPAVRoute",R,N,V_route
bundleID
T@"NSString",R,C,N,V_bundleID
playerID
T@"NSString",R,C,N,V_playerID
inProcess
TB,R,N,GisInProcess
MPCModelPlaybackIntentTracklistTokenRequest
MPCModelPlaybackIntentTracklistTokenStartItemIdentifiers
T@"MPModelRequest",C,N,V_request
startItemIdentifiers
T@"MPIdentifierSet",C,N,V_startItemIdentifiers
ICRadioContentReference
T@"ICRadioContentReference",R,N,V_ICRadioContentReference
com.apple.MediaPlayer.MPCReportingController.accessQueue
parentReportingController
T@"MPCReportingController",W,N
childReportingControllers
T@"NSArray",R,C,N
future
T@"MPCFuture",&,N,V_future
com.apple.MediaPlaybackCore/MPCFuture.accessQueue
<%@ %p:
 debugLabel=%@
 finalized=YES
 invalid=YES
 error=%@
accessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_accessQueue
calloutQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_calloutQueue
successBlocks
T@"NSMutableArray",R,N,V_successBlocks
failureBlocks
T@"NSMutableArray",R,N,V_failureBlocks
completionBlocks
T@"NSMutableArray",R,N,V_completionBlocks
invalidBlocks
T@"NSMapTable",R,N,V_invalidBlocks
result
T@,R,N,V_result
T@"NSError",R,N,V_error
finalized
TB,R,N,GisFinalized,V_finalized
invalid
TB,R,N,GisInvalid,V_invalid
debugLabel
T@"NSString",C,N,V_debugLabel
MPCJinglePlayActivityReportingControllerDidFlushEventsNotification
MPCJinglePlayActivityReportingControllerUserInfoKeyDidIncludeContainerChangeEvent
com.apple.MPCFoundation.MPCJinglePlayActivityReportingController.accessSerialQueue
play-activity-feed-post-all-play-starts
v24@?0@"NSDictionary"8@"NSError"16
playActivityController
T@"SSVPlayActivityController",R,N,V_playActivityController
shouldReportAggregateTimePlayActivityEvents
TB,N,V_shouldReportAggregateTimePlayActivityEvents
shouldReportPlayActivityEvents
TB,N,V_shouldReportPlayActivityEvents
com.apple.MediaPlaybackCore.MPCRadioArtworkDataSouce.cachedArtworkRepresentationsAccessQueue
image/jpeg
v32@?0@"NSData"8@"NSString"16@"NSError"24
v32@?0@"<NSCopying><NSObject>"8@"MPArtworkRepresentation"16^B24
app.music.queue-source.library
items
T@"MPSectionedCollection",R,C,N,V_items
playingItemIndexPath
T@"NSIndexPath",R,C,N,V_playingItemIndexPath
playingItemGlobalIndex
Tq,R,N,V_playingItemGlobalIndex
globalItemCount
Tq,R,N,V_globalItemCount
lastChangeDirection
Tq,R,N,V_lastChangeDirection
repeatType
Tq,R,N,V_repeatType
shuffleType
Tq,R,N,V_shuffleType
T@"NSIndexPath",&,N,V_playingItemIndexPath
specializedIntents
supportedSpecializedQueues
T@"NSDictionary",&,N,V_supportedSpecializedQueues
supportsSetQueueCommand
TB,N,V_supportsSetQueueCommand
supportedQueueTypes
T@"NSSet",&,N,V_supportedQueueTypes
supportedCustomDataQueueIdentifiers
T@"NSSet",&,N,V_supportedCustomDataQueueIdentifiers
supportedInsertionPositions
T@"NSSet",&,N,V_supportedInsertionPositions
supportedRepeatTypes
T@"NSArray",&,N,V_supportedRepeatTypes
supportsChangeRepeat
TB,N,V_supportsChangeRepeat
supportsAdvanceRepeat
TB,N,V_supportsAdvanceRepeat
supportedShuffleTypes
T@"NSArray",&,N,V_supportedShuffleTypes
supportsChangeShuffle
TB,N,V_supportsChangeShuffle
supportsAdvanceShuffle
TB,N,V_supportsAdvanceShuffle
supportsPreviousItem
TB,N,V_supportsPreviousItem
supportsPreviousSection
TB,N,V_supportsPreviousSection
supportsPreviousChapter
TB,N,V_supportsPreviousChapter
supportsNextItem
TB,N,V_supportsNextItem
supportsNextSection
TB,N,V_supportsNextSection
supportsNextChapter
TB,N,V_supportsNextChapter
supportsJumpToItem
TB,N,V_supportsJumpToItem
v24@?0@"MPCReportingIdentityProperties"8@"NSError"16
v24@?0@"MPNowPlayingContentItem"8@"MPIdentifierSet"16
@"MPArtworkCatalog"16@?0@"MPModelObject"8
Queue Controller Contents Changed
allowsNewPlaybackErrorItem
TB,N,V_allowsNewPlaybackErrorItem
firstPlaybackErrorItem
T@"MPAVItem",&,N,V_firstPlaybackErrorItem
mpcReporting_quickPlay
TB,R,N,GmpcReporting_isQuickPlay
indexPath
T@"NSIndexPath",R,N,V_indexPath
contentItemIdentifier
T@"NSString",R,N,V_contentItemIdentifier
revision
Tq,R,N,V_revision
duration
T{?=dddddffB},R,N,V_duration
contentItemID
T@"NSString",C,N,V_contentItemID
preferredBackwardJumpIntervals
preferredForwardJumpIntervals
supportsBeginFastForward
TB,N,V_supportsBeginFastForward
supportsEndFastForward
TB,N,V_supportsEndFastForward
supportsBeginRewind
TB,N,V_supportsBeginRewind
supportsEndRewind
TB,N,V_supportsEndRewind
supportsSkipForward
TB,N,V_supportsSkipForward
supportsSkipBackward
TB,N,V_supportsSkipBackward
prefersNegativeBackwardSkipIntervals
TB,N,V_prefersNegativeBackwardSkipIntervals
supportsSeekToPlaybackPosition
TB,N,V_supportsSeekToPlaybackPosition
T@"NSArray",C,N,V_preferredBackwardJumpIntervals
T@"NSArray",C,N,V_preferredForwardJumpIntervals
supportedPlaybackRates
T@"NSArray",C,N,V_supportedPlaybackRates
localizedShortTitle
presentationStyle
value
T@"NSString",C,N,V_localizedShortTitle
Tq,N,V_presentationStyle
TB,N,V_value
minimumValue
Tf,R,N
maximumValue
Tf,N,V_minimumValue
Tf,N,V_maximumValue
com.apple.MediaPlaybackCore.MPCReportingPlaybackObserver.recordEventOperationQueue
T@"MPAVController",R,N,V_player
offline
TB,N,GisOffline,V_offline
T@"MPCReportingController",R,N,V_reportingController
SBEnabled
TB,N,GisSBEnabled,V_SBEnabled
TQ,N,V_storeAccountID
storeFrontID
T@"NSString",C,N,V_storeFrontID
identityPropertiesLoader
T@"<MPCReportingIdentityPropertiesLoading>",&,N,V_identityPropertiesLoader
eventDuration
Td,N,V_eventDuration
overrideItemType
TQ,N,V_overrideItemType
lyricsID
T@"NSString",C,N,V_lyricsID
itemGenericObject
T@"MPModelGenericObject",&,N,V_itemGenericObject
TB,N,V_shouldReportPlayEventsToStore
trackInfo
T@"NSData",C,N,V_trackInfo
modelPlayEvent
T@"MPModelPlayEvent",&,N,V_modelPlayEvent
featureName
T@"NSString",C,N,V_featureName
T@"NSData",C,N,V_jingleTimedMetadata
recommendationData
T@"NSData",C,N,V_recommendationData
requestingBundleIdentifier
T@"NSString",C,N,V_requestingBundleIdentifier
requestingBundleVersion
T@"NSString",C,N,V_requestingBundleVersion
SSVMutablePlayActivityEvent
Unable to find class %s
/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
com.apple.MPCMediaRemoteController/access
future controller
v16@?0@"MPCPlayerPath"8
com.apple.MediaPlaybackCore/MPCMediaRemoteController
com.apple.MediaPlaybackCore/MPCMediaRemoteController.callout
v12@?0I8
v24@?0^{__CFArray=}8^{__CFError=}16
Failed to send command %d (MRSendCommandError = %d)
v20@?0I8^{__CFArray=}12
Failed to create playback queue from playback intent %@
Failed to create external representation from playback queue %@
com.apple.MediaPlaybackCore.performRemoteQueueCommand-%@
v24@?0@"MPRemotePlaybackQueue"8@"NSError"16
Requested content item %@ state does not exist.
Got error from MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got nil items for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got zero items for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got a different artwork identifier from remote artwork loading than whan we requested %@ -> %@
Got no image data for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got invalid image data for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
playbackState [optimistic state]
resolvedPlayerPath
T@"MPCPlayerPath",&,N,V_resolvedPlayerPath
artworkDataSource
T@"<MPArtworkDataSource>",R,N,V_artworkDataSource
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_calloutQueue
invalidationToken
T@,&,N,V_invalidationToken
playbackStateCacheState
Tq,R,N,V_playbackStateCacheState
playbackState
T@"MPCFuture",R,N
supportedCommandsCacheState
Tq,R,N,V_supportedCommandsCacheState
playingIdentifierCacheState
Tq,R,N,V_playingIdentifierCacheState
playingIdentifier
com.apple.MediaPlaybackCore.MPCAVItemNetworkPolicyHandler.accessQueue
loadedTimeRanges
v24@?0@"AVPlayerItem"8@"NSDictionary"16
preferredNetworkPolicyType
networkConstraints
T@"ICNetworkConstraints",C,N
MPCRadioPlaybackIntentTracklistToken
radioStationPlaybackMetadata
T@"MPCRadioStationPlaybackMetadata",C,N,V_radioStationPlaybackMetadata
nowPlayingContext
T@"RadioStationMatchContext",&,N,V_nowPlayingContext
stationMatchContext
T@"RadioStationMatchContext",&,N,V_stationMatchContext
T@"MPQueueFeeder",R,N,V_queueFeeder
com.apple.MediaPlayer.MPCModelStorePlaybackItemsRequestOperation.operationQueue
v32@?0@"NSString"8@"NSString"16^B24
v24@?0@"MPStoreItemMetadataResponse"8@"NSError"16
T@"MPCModelStorePlaybackItemsRequest",R,C,N,V_request
T@?,R,C,N,V_responseHandler
v32@?0@8q16^B24
v32@?0@"MPStoreItemMetadata"8Q16^B24
--%li
allowsExplicitMusic
TB,R,N,V_allowsExplicitMusic
equivalencyMapping
T@"NSDictionary",R,N,V_equivalencyMapping
T@"MPSectionedCollection",R,N,V_unpersonalizedContentDescriptors
containerType
identifierSet
item
hasContainerType
Ti,N,V_containerType
hasIdentifierSet
T@"_MPCProtoContainerIdentifierSet",&,N,V_identifierSet
T@"NSMutableArray",&,N,V_items
delegateInfoID
storeAdamID
storePlaylistGlobalID
storePlaylistVersionHash
cloudID
cloudCollectionID
radioStationID
cloudUniversalLibraryID
hasDelegateInfoID
Tq,N,V_delegateInfoID
hasStoreAdamID
Tq,N,V_storeAdamID
hasStorePlaylistGlobalID
T@"NSString",&,N,V_storePlaylistGlobalID
hasStorePlaylistVersionHash
T@"NSString",&,N,V_storePlaylistVersionHash
hasCloudID
Tq,N,V_cloudID
hasCloudCollectionID
T@"NSString",&,N,V_cloudCollectionID
hasRadioStationID
T@"NSString",&,N,V_radioStationID
hasCloudUniversalLibraryID
T@"NSString",&,N,V_cloudUniversalLibraryID
uuid
timeZoneName
hasAccountID
hasUuid
T@"NSString",&,N,V_uuid
hasDeviceGUID
T@"NSString",&,N,V_deviceGUID
hasDeviceName
T@"NSString",&,N,V_deviceName
hasSystemReleaseType
Ti,N,V_systemReleaseType
hasRequestUserAgent
T@"NSString",&,N,V_requestUserAgent
hasTimeZoneName
T@"NSString",&,N,V_timeZoneName
mediaType
excludeFromShuffle
hasMediaType
Ti,N,V_mediaType
T@"_MPCProtoItemIdentifierSet",&,N,V_identifierSet
hasExcludeFromShuffle
TB,N,V_excludeFromShuffle
storeSubscriptionAdamID
purchaseHistoryID
hasContentItemID
T@"NSString",&,N,V_contentItemID
hasStoreSubscriptionAdamID
Tq,N,V_storeSubscriptionAdamID
hasPurchaseHistoryID
Tq,N,V_purchaseHistoryID
libraryAlbumContentReference
libraryArtistContentReference
libraryItemContentReference
storeContentReference
hasLibraryAlbumContentReference
T@"_MPCProtoRadioContentReferenceLibraryAlbumContentReference",&,N,V_libraryAlbumContentReference
hasLibraryArtistContentReference
T@"_MPCProtoRadioContentReferenceLibraryArtistContentReference",&,N,V_libraryArtistContentReference
hasLibraryItemContentReference
T@"_MPCProtoRadioContentReferenceLibraryItemContentReference",&,N,V_libraryItemContentReference
hasStoreContentReference
T@"_MPCProtoRadioContentReferenceStoreContentReference",&,N,V_storeContentReference
albumName
representativeItemCloudID
hasAlbumName
T@"NSString",&,N,V_albumName
hasRepresentativeItemCloudID
Tq,N,V_representativeItemCloudID
artistName
hasArtistName
T@"NSString",&,N,V_artistName
albumArtistName
contentType
copyrightText
albumDiscCount
discNumber
fileSize
genreName
isCompilation
albumTrackCount
trackNumber
year
hasAlbumArtistName
T@"NSString",&,N,V_albumArtistName
hasComposerName
T@"NSString",&,N,V_composerName
hasContentType
Ti,N,V_contentType
hasCopyrightText
T@"NSString",&,N,V_copyrightText
hasAlbumDiscCount
Ti,N,V_albumDiscCount
hasDiscNumber
Ti,N,V_discNumber
hasFileSize
Td,N,V_fileSize
hasGenreName
T@"NSString",&,N,V_genreName
hasIsCompilation
TB,N,V_isCompilation
hasDuration
Td,N,V_duration
hasTitle
T@"NSString",&,N,V_title
hasAlbumTrackCount
Ti,N,V_albumTrackCount
hasTrackNumber
Ti,N,V_trackNumber
hasYear
Ti,N,V_year
radioStationURLString
accountInfo
hasRadioStationURLString
T@"NSString",&,N,V_radioStationURLString
hasSeedContentReference
T@"_MPCProtoRadioContentReference",&,N,V_seedContentReference
hasNowPlayingContentReference
T@"_MPCProtoRadioContentReference",&,N,V_nowPlayingContentReference
hasAccountInfo
T@"_MPCProtoDelegateInfo",&,N,V_accountInfo
container
startingItemIndexPath
accountInfos
T@"NSMutableArray",&,N,V_accountInfos
containers
T@"NSMutableArray",&,N,V_containers
hasStartingItemIndexPath
T@"_MPCProtoTracklistIndexPath",&,N,V_startingItemIndexPath
containerIndex
itemIndex
hasContainerIndex
Tq,N,V_containerIndex
hasItemIndex
Tq,N,V_itemIndex
v24@?0@"ICMediaRedownloadResponse"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelRadioGetTracksOperation
v32@?0@"MPCModelRadioGetTracksStep"8@"MPCModelRadioGetTracksResponse"16@"NSError"24
v16@?0@"MPCModelRadioGetTracksStep"8
tracklistAction
Tq,R,N,V_tracklistAction
T@"MPSectionedCollection",R,C,N,V_tracks
v32@?0@"_MPCProtoItem"8Q16^B24
v32@?0@"_MPCProtoContainer"8Q16^B24
v24@?0@"MPCPlaybackRequestEnvironment"8@"NSError"16
Missing tracklist data in playback queue.
Missing creation properties data in playback queue.
Unknown queue identifier: %@
Cannot play fuse content
Genius is Disabled
Genius is not avialable for this item
<%@: %p, playbackContext=%@>
v20@?0@"ICMutableUserIdentityProperties"8B16
unknown-guid
Failed to create delegated account.
startPictureInPictureCommand
T@"MPRemoteCommand",R,N
com.apple.MediaPlaybackCore.MPCModelPlaybackIntentDataSource.serialQueue
com.apple.MediaPlaybackCore.MPCModelPlaybackIntentDataSource.remotePlaybackQueueResolution
Tracklist token missing model request (nil).
NSKeyedUnarchiver unarchiveObjectWithFile returned nil for archiveFile: %@
scheduledPlaybackStatePreservation
TB,N,GhasScheduledPlaybackStatePreservation,V_scheduledPlaybackStatePreservation
eventObserver
T@"MPProtocolProxy<MPCPlaybackEngineEventObserving>",R,N,V_eventObserver
implementation
T@"_MPCAVController",R,N,V_implementation
mediaRemotePublisher
T@"_MPCMediaRemotePublisher",R,N,V_mediaRemotePublisher
T@"_MPCReportingController",R,N,V_reportingController
leaseManager
T@"_MPCLeaseManager",R,N,V_leaseManager
T@"UIView",R,N
systemMusicApplication
TB,N,GisSystemMusicApplication,V_systemMusicApplication
delegate
T@"<MPCPlaybackEngineDelegate>",W,N,V_delegate
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
videoSupported
TB,N,GisVideoSupported,V_videoSupported
stateRestorationSupported
TB,N,GisStateRestorationSupported,V_stateRestorationSupported
MPNowPlayingInfoCenter_MPCPlaybackEngine
@"MPCPlaybackEngine"8@?0
T@"MPCPlaybackEngine",W,N
playbackengine-%@.archive
playbackengine.archive
com.apple.MediaPlaybackCore/MPCPlayerPathCache
com.apple.MediaPlaybackCore/MPCPlayerPathCache.callout
resolvedPlayerPath and error was nil
v24@?0@"MPCPlayerPath"8@"NSError"16
sharedCache
T@"_MPCPlayerPathCache",R,N
playerPathResolutions
T@"NSMutableDictionary",R,N,V_playerPathResolutions
invalidatablePlayerPaths
T@"NSMutableDictionary",R,N,V_invalidatablePlayerPaths
MPCSuzeLeaseSessionControllerLeaseSessionRenewDidFailNotification
MPCSuzeLeaseControllerUserInfoKeySession
MPCSuzeLeaseControllerUserInfoKeyError
com.apple.MediaPlaybackCore.MPCSuzeLeaseSessionController.accessQueue
com.apple.MediaPlaybackCore.MPCSuzeLeaseSessionController.calloutQueue
sharedController
T@"MPCSuzeLeaseSessionController",R
clientCount
Tq,N,V_clientCount
icLeaseSession
T@"ICSuzeLeaseSession",R,N,V_icLeaseSession
mpcLeaseSession
T@"MPCSuzeLeaseSession",R,N,V_mpcLeaseSession
shouldStopWhenFinished
TB,N,V_shouldStopWhenFinished
T@"MPRemoteCommandCenter",&,N,V_commandCenter
videoLayer
T@"AVPlayerLayer",R,N,V_videoLayer
T@"NSString",R,C,N,V_activeRouteName
T@"MPCPlayerItemContainer",N,V_currentContainer
T@"MPCPlayerItem",N,V_currentItem
playbackErrorObservers
playbackIntentObservers
shouldRestorePlaybackState
TB,N,V_shouldRestorePlaybackState
restoringPlaybackState
TB,R,N,GisRestoringPlaybackState,V_restoringPlaybackState
syncingNowPlayingInfo
TB,R,N,GisSyncingNowPlayingInfo,V_syncingNowPlayingInfo
mediaRemoteMuxer
T@"MPCMediaRemoteMuxer",W,N,V_mediaRemoteMuxer
T@"NSString",C,N,V_parentAppBundleID
Tq,N,V_state
modelSong
T@"MPModelSong",&,N,V_modelSong
visibleDuration
Td,N,V_visibleDuration
T@"MPCPlayerQueueRequest",C,N
T@"MPCPlayerQueueRequest",C,N,V_request
playlistManager
T@"MPCMediaPlayerLegacyPlaylistManager",R,N,V_playlistManager
MPCRadioOperationErrorDomain
com.apple.MediaPlaybackCore.%@.%p
v24@?0@"RadioStoreBag"8@"NSError"16
T@"RadioRequestContext",C,N,V_requestContext
v24@?0@"MPStoreItemMetadata"8^B16
v32@?0@8@"NSDictionary"16^B24
icSuzeLeaseSession
T@"ICSuzeLeaseSession",R,N,V_icSuzeLeaseSession
enqueuerProperties
T@"SSVPlayActivityEnqueuerProperties",C,N,V_enqueuerProperties
MPCModelPlaybackContextRequest
MPCModelPlaybackContextPlaybackRequestEnvironment
MPCModelPlaybackContextStartItemIdentifiers
MPCModelPlaybackContextStartTimeModifications
MPCModelPlaybackContextEndTimeModifications
MPCModelPlaybackContextAssetStoreFronts
AirMusic
Music
defaultRequestEnvironment
T@"MPCPlaybackRequestEnvironment",R
T@"NSDictionary",C,N,V_startTimeModifications
T@"NSDictionary",C,N,V_endTimeModifications
T@"NSDictionary",C,N,V_assetStoreFronts
<%@ %p shouldReportToStore:%@ playActivityEvent:%@>
playActivityEvent
T@"SSVPlayActivityEvent",C,N,V_playActivityEvent
shouldReportToStore
TB,N,V_shouldReportToStore
com.apple.MediaPlaybackCore.MPCPlaybackHistoryRecordChangeRequestOperation.operationQueue
T@"MPCPlaybackHistoryRecordChangeRequest",C,N,V_request
assistantAnalyticsController
T@"MPAssistantAnalyticsReportingController",&,N,V_assistantAnalyticsController
rtcReportingController
T@"MPRTCReportingController",&,N,V_rtcReportingController
playbackHistoryController
T@"MPCPlaybackHistoryController",&,N,V_playbackHistoryController
lyricsReportingController
T@"MPCLyricsReportingController",&,N,V_lyricsReportingController
T@"MPCPlayer",&,N,V_player
MPCAVItemReportingJingleTimedMetadataDidChangeNotification
mpcReporting_identityPropertiesLoader
T@"<MPCReportingIdentityPropertiesLoading>",R,N
mpcReporting_equivalencySourceAdamID
mpcReporting_householdID
mpcReporting_isValidReportingItem
mpcReporting_itemType
mpcReporting_jingleTimedMetadata
T@"NSData",R,C,N
mpcReporting_privateListeningEnabled
T@"NSNumber",R,C,N
mpcReporting_requestingBundleIdentifier
mpcReporting_requestingBundleVersion
mpcReporting_shouldReportPlayEventsToStore
mpcReporting_shouldUseRelativeTimePositions
mpcReporting_siriInitiated
mpcReporting_trackInfo
<%@ %p itemType:%@
 identifiers: {
%@: %@
v32@?0Q8@16^B24
MPCContentItemIdentifierCollectionItemType
MPCContentItemIdentifierCollectionIdentifierTypeNumberToIdentifier
identifierCount
itemType
TQ,R,N,V_itemType
adamID
globalPlaylistID
mediaLibraryPersistentID
storeCloudID
unknown
album-artist
composer
genre
music-video
playlist
radio-station
song
activity
apple-editor
curator
uploaded-audio
uploaded-video
additionalData
getTracks
v16@?0@"ICStoreDialogResponseButtonAction"8
v32@?0@"MPUserNotification"8Q16@"NSDictionary"24
delegatedIdentityProperties
T@"ICUserIdentityProperties",R,C,N,V_delegatedIdentityProperties
T@"NSError",R,C,N,V_error
finished
TB,R,N,GisFinished,V_finished
identityProperties
T@"ICUserIdentityProperties",R,C,N,V_identityProperties
T@"SSVPlayActivityController",R,C,N,V_playActivityController
playActitySessionToken
TQ,R,N,V_playActitySessionToken
T@"ICRadioGetTracksRequest",R,C,N,V_request
T@"ICRadioGetTracksResponse",R,C,N,V_response
v24@?0@"ICUserVerificationContext"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelRadioGetTracksPrepareIdentityStep
v32@?0@"NSArray"8Q16@"NSError"24
v24@?0@"ICRadioGetTracksResponse"8@"NSError"16
v32@?0@"ICStoreDialogResponseButton"8Q16^B24
clientVersion
delegationProperties
householdIdentifier
T@"NSString",R,C,N,V_clientIdentifier
T@"NSString",R,C,N,V_clientVersion
T@"NSString",R,C,N,V_householdIdentifier
T@"NSString",R,C,N,V_requestingBundleIdentifier
T@"NSString",R,C,N,V_requestingBundleVersion
T@"MPCPlaybackDelegationProperties",R,C,N,V_delegationProperties
T@"MPCPlaybackDelegationProperties",C,D,N
com.apple.MediaPlaybackCore.MPCModelRadioQueueFeeder.PlaceholderItemIdentifier
v32@?0@"<_MPCModelRadioPlaybackQueueSection>"8Q16^B24
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue
v16@?0@"ICMutableRadioPlaybackHistory"8
v32@?0@"ICRadioStationTrack"8@"NSIndexPath"16^B24
numberOfItems
radioStation
T@"MPModelRadioStation",&,N,V_radioStation
playbackHistory
T@"ICRadioPlaybackHistory",R,C,N
trackModels
T@"MPSectionedCollection",R,N
PLACEHOLDER_LOADING_TITLE
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue.prefixSectionItem
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue.accessQueue.StationTracksSection
v32@?0@"MPModelGenericObject"8q16^B24
T@"ICMutableRadioPlaybackHistory",R,N
T@"MPSectionedCollection",R,C,N,V_trackModels
Index out-of-bounds
modelPlayEventRepresentation
T@"MPModelPlayEvent",R,N,V_modelPlayEventRepresentation
T@"MPCPlayerItemContainer",W,N,V_container
userInfo
T@"NSDictionary",C,N,V_userInfo
TB,R,N,GisExplicit,V_explicit
T@"MPModelGenericObject",R,N,V_modelGenericObjectRepresentation
T@"NSString",C,N,V_albumName
T@"NSString",C,N,V_artistName
T@"NSString",C,N,V_composerName
T{?=dddddffB},R,N,V_durationSnapshot
com.apple.MediaPlaybackCore.MPCStoreContentMetadataOperation.accessQueue
com.apple.MediaPlaybackCore.MPCStoreContentMetadataOperation.internalQueue
com.apple.MediaPlaybackCore.MPCStoreContentMetadataOperation.responseQueue
v24@?0@"SSLookupResponse"8@"NSError"16
storeBagDictionary
T@"NSDictionary",C
T@"NSArray",C
T@"MPCStoreContentMetadataResponse",R
MPCRadioPlaybackErrorCategoryKey
ADD_STATION_FAILED_ALBUM_ALERT_MESSAGE
ADD_STATION_FAILED_ARTIST_ALERT_MESSAGE
ADD_STATION_FAILED_ALERT_MESSAGE
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_RESTRICTIONS_%@
EXPLICIT_CONTENT_NOT_ALLOWED_TITLE
EXPLICIT_CONTENT_NOT_ALLOWED_SETTINGS_BUTTON_TITLE
prefs:root=General&path=RESTRICTIONS
ADD_STATION_FAILED_TEMPORARY_ALERT_MESSAGE
ADD_STATION_FAILED_ALERT_TITLE
StationHash
StationID
StationName
StationStringID
StationURL
<%@ %p stationHash:%@ stationID:%lli stationName:%@ stationStringID:%@>
station-hash
station-id
name
radio-station-id
artworkCollection
T@"RadioArtworkCollection",R,N
station
T@"RadioStation",R,N,V_station
stationDictionary
T@"NSURL",R,C,N,V_stationURL
T@"RadioArtworkCollection",&,D,N
T@"NSURL",C,D,N
allowsStoreContainerImport
TB,N,V_allowsStoreContainerImport
playEvent
T@"MPModelPlayEvent",&,N,V_playEvent
Tq,N,V_repeatType
MPCModelRadioQueueFeederErrorDomain
com.apple.MediaPlaybackCore.MPCModelRadioQueueFeeder.loadingOperationQueue
wapi
PLAYBACK_FAILURE_NETWORK_RESTRICTION_TITLE_WLAN
PLAYBACK_FAILURE_NETWORK_RESTRICTION_TITLE_WIFI
cellular-data
PLAYBACK_FAILURE_NETWORK_RESTRICTION_MESSAGE_CELL_WLAN
PLAYBACK_FAILURE_NETWORK_RESTRICTION_MESSAGE_CELL_WIFI
SETTINGS
prefs:root=MUSIC
v24@?0@"ICRadioPlaybackHistory"8@"NSError"16
app.music.queue-source.tilt
RadioStationID
v24@?0@"MPCModelRadioPersonalizationResponse"8@"NSError"16
v24@?0@"MPCModelRadioGetTracksResponse"8@"NSError"16
MPCAVItemContentItemIdentifierCollectionDidChangeNotification
v24@?0@"UIImage"8@"NSError"16
T@"MPCMediaRemoteController",W,N,V_controller
com.apple.radio.adamid
com.apple.radio.explicit
artworkURL_
width
height
v16@?0@"MPModelArtist"8
v16@?0@"MPSectionedCollection"8
v24@?0@"ICRadioFetchMetadataResponse"8@"NSError"16
metadataIdentifiers
T@"NSArray",R
T@"MPCModelGenericAVItemTimedMetadataResponse",&,N,V_previousResponse
T@"MPModelGenericObject",R,N,V_genericObject
storeRequestContext
T@"ICStoreRequestContext",R,C,N,V_storeRequestContext
timedMetadataGroups
T@"NSArray",R,C,N,V_timedMetadataGroups
MPCMediaRemoteMiddlewareMetadataOperation
MPMiddlewareOperation
NSObject
MPCReportingMescalSetupCompletionEvent
MPCReportingEvent
MPCModelGenericAVItem
AVAssetResourceLoaderDelegate
AVPlayerItemMetadataOutputPushDelegate
AVPlayerItemOutputPushDelegate
MPMusicSubscriptionLeasePlaybackParticipating
MPRTCReportingItemSessionCreating
_MPCURLAssetDownloadCompletionObserver
MPCModelPlaybackAssetCacheProvidingInternalAdditions
MPCLyricsReportingController
ICEnvironmentMonitorObserver
MPCModelGenericAVItemTimedMetadataResponse
MPCModelGenericAVItemTimedMetadataStreamFields
MPCModelGenericAVItemAssetLoadResult
MPCReportingDeviceIdentityPropertiesLoader
MPCReportingIdentityPropertiesLoading
MPCAdditions
MPCModelMediaClipAVItem
_MPCMediaRemotePublisher
MPCPlaybackEngineEventObserving
PlaybackQueue
MPNowPlayingPlaybackQueueDataSource_Private
MPNowPlayingPlaybackQueueDataSource
MPNowPlayingInfoLyricsDelegate
MPCModelRadioStationTrackGenericObjectBuilder
MPCModelGenericAVItemLocalFileLoadOperation
RadioStationMatchContext
_MPCLog
MPCMediaLibraryPlaybackAssetCacheProvider
MPCModelPlaybackAssetCacheProviding
MPCPlaybackDelegationProperties
NSCopying
NSMutableCopying
NSSecureCoding
NSCoding
MPCMutablePlaybackDelegationProperties
_MPCMediaRemoteEntityPropertyTranslator
_MPCMediaRemoteEntityRelationshipTranslator
MPCMediaRemoteEntityTranslator
MPCPlaybackIntent
MPCModelRadioStationBuilder
MPCMediaRemoteMuxer
MPCMediaRemoteMiddlewareControllerProviding
MPCPlaybackEngineMiddlewareOperation
MPMiddlewareAutomaticDependencyOperation
MPCPlaybackHistoryController
MPCMediaRemoteMiddlewarePlaybackStateOperation
MPCPlayerChangeRequest
MPCPlayerCommandRequest
MPCMediaRemoteCommandOperation
MPCPlayerRequest
MPCPlayerResponseBuilder
MPCPlayerResponse
_MPCPlayerCommand
MPCModelRadioPlaybackContext
MPCModelStorePlaybackItemsRequest
MPCModelPlaybackRequestEnvironmentConsuming
MPModelRequestDetailedKeepLocalStatusRequesting
MPCModelRequestRTCReporting
MPCModelStorePreviousRequestStoring
MPCContentItemIdentifierCollectionAdditions
MPCPlaybackEngineMiddlewareAdditions
MPCVideoView
MPCPlaybackEngineMiddleware
MPMiddleware
MPCErrorAdditions
MPCMediaPlayerLegacyPlayer
MPRemoteCommandDelegate_Private
MPCMediaPlayerLegacyReportingController
MPCMediaPlayerLegacyAVController
MPCModelStorePlaybackItemsResponse
MPModelStoreEquivalencyMapping
MPModelResponseDetailedKeepLocalStatusRequesting
MPCMediaPlayerLegacyPlaylistManager
MPCQueueBehaviorManaging
MPQueueBehaviorManaging
_MPCAVItemSourceContext
MPAVItemPlaylistIdentifier
MPAVItemQueueIdentifier
_MPCAVPlaylistIteration
MPCModelGenericAVItemAssetLoadProperties
MPCMediaRemoteMiddlewareControllerOperation
ControllerProviding
MPCMediaPlayerLegacyItem
MediaPlayerLegacy
MPCMediaRemoteMiddlewareCommandsOperation
MPCMediaRemoteMiddleware
MPCModelGenericAVItemSubscriptionAssetLoadOperation
MPCModelPlaybackAdditions
MPCMediaPlayerLegacyNowPlayingObserver
MPCModelPlaybackRequesting
MPCModelQueueFeeder
MPRTCReportingItemSessionContaining
MPShuffleControllerDataSource
MPCModelQueueFeederAdditions
_MPCMediaRemoteLocalController
MPCModelRadioPersonalizationRequest
MPCModelRadioPersonalizationResponse
_MPCMediaRemoteNullController
MPCPlayerResponseSection
MPCPlayerPath
MPCModelPlaybackIntentTracklistToken
MPCModelRadioContentReference
ICRadioContentReference
MPCReportingController
MPCFutureInvalidationToken
MPCFuture
MPCJinglePlayActivityReportingController
MPCRadioArtworkDataSource
MPCPlaybackQueue
MPCPlayerResponseTracklist
_MPCPlayerResponseTracklistDataSource
MPLazySectionedCollectionDataSource
_MPCPlayerResetTracklistCommand
MPCPlayerResetTracklistCommand
MPCPlayerCommand
_MPCPlayerInsertItemsCommand
MPCPlayerInsertItemsCommand
_MPCPlayerReorderItemsCommand
MPCPlayerReorderItemsCommand
_MPCPlayerRepeatCommand
MPCPlayerRepeatCommand
_MPCPlayerShuffleCommand
MPCPlayerShuffleCommand
_MPCPlayerChangeItemCommand
MPCPlayerChangeItemCommand
MPCReportingPlaybackEnvironmentPropertiesLoader
_MPModelMediaRemoteItemArtist
_MPCAVController
MPCReportingAdditions
MPCPlayerResponseItem
_MPCPlayerItemCommand
_MPCPlayerSeekCommand
MPCPlayerSeekCommand
_MPCPlayerPlaybackRateCommand
MPCPlayerPlaybackRateCommand
_MPCPlayerFeedbackCommand
MPCPlayerFeedbackCommand
_MPCPlayerRateCommand
MPCPlayerRateCommand
MPCReportingPlaybackObserver
MPCReportingPlaybackEventSource
MPCMediaRemoteController
MPCSupportedCommands
MPCAVItemNetworkPolicyHandler
MPCRadioPlaybackIntentTracklistToken
MPCMediaPlayerLegacyItemContainer
MPCModelStorePlaybackItemsRequestOperation
_MPCModelStorePlaybackItemsRequestOperationObjectAccumulator
_MPCProtoContainer
_MPCProtoContainerIdentifierSet
_MPCProtoDelegateInfo
_MPCProtoItem
_MPCProtoItemIdentifierSet
_MPCProtoRadioContentReference
_MPCProtoRadioContentReferenceLibraryAlbumContentReference
_MPCProtoRadioContentReferenceLibraryArtistContentReference
_MPCProtoRadioContentReferenceLibraryItemContentReference
_MPCProtoRadioContentReferenceStoreContentReference
_MPCProtoRadioCreationProperties
_MPCProtoTracklist
_MPCProtoTracklistIndexPath
MPCModelGenericAVItemMediaRedownloadOperation
MPCModelRadioGetTracksOperation
MPCModelRadioGetTracksResponse
MPCPlaybackContextCreating
MPPlaybackContextRemotePlaybackQueue
MPCRemoteQueueAdditions
MPCCustomCommands
MPCModelPlaybackIntentDataSource
MPCPlaybackIntentDataSource
MPCModelPlaybackIntentDataSourceAdditions
MPCPlaybackEngine
_MPCPlayerPathCache
MPCSuzeLeaseSessionController
ICSuzeLeaseSessionDelegate
_MPCSuzeLeaseSessionInfo
MPCPlayer
MPCMediaRemoteMuxerDelegate
MPCReportingLyricsViewEvent
MPCMediaPlayerLegacyQueueRequestOperation
MPCPlayerQueueRequestOperation
MPCMediaPlayerLegacyPlayerQueueLazySectionedCollectionDataSource
MPCMediaPlayerLegacyPlayerQueueResponse
MPCRadioOperationQueue
MPCStoreContentMetadataResponse
MPCSuzeLeaseSession
_MPCLeaseManager
MPCReportingIdentityProperties
MPCModelPlaybackContext
MPCReportingPlaybackActivityEvent
MPCPlaybackHistoryRecordChangeRequestOperation
_MPCReportingController
MPCPlayerQueueRequest
MPCPlayerQueueResponse
MPCRadioPlaybackIntentDataSource
MPCContentItemIdentifierCollection
MPCMutableContentItemIdentifierCollection
MPCModelRadioGetTracksStep
MPCModelRadioGetTracksEstablishAccountStep
MPCModelRadioGetTracksPrepareIdentityStep
MPCModelRadioGetTracksPreparePlayActivityStep
MPCModelRadioGetTracksRequestStep
MPCModelRadioGetTracksRetryDialogStep
MPCPlayableContentDelegate
MPPlayableContentDelegate
MPCModelGenericAVItemHomeSharingLoadOperation
MPCPlaybackRequestEnvironment
MPCMutablePlaybackRequestEnvironment
MPCModelRadioPlaybackQueue
_MPCModelRadioPlaybackQueueAVItemSection
_MPCModelRadioPlaybackQueueSection
_MPCModelRadioPlaybackQueueStationTracksSection
MPCPlayerEntity
MPCPlayerItem
MPCPlayerItemContainer
MPCStoreContentMetadataOperation
MPCRadioStationPlaybackMetadata
MPCMutableRadioStationPlaybackMetadata
MPCPlaybackHistoryRecordChangeRequest
MPCModelRadioQueueFeeder
MPCModelRadioQueueFeederAdditions
MPCMediaRemoteArtworkRemoteDataSource
MPArtworkDataSource
MPCModelGenericAVItemTimedMetadataRequest
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@?16@0:8
v24@0:8@?16
@"NSError"16@0:8
@?<v@?@"NSString">16@0:8
v24@0:8@?<v@?@"NSString">16
@"NSArray"16@0:8
@32@0:8@16@24
v16@0:8
{_MSVSignedRange=qq}32@0:8{?=qq}16
v24@0:8@16
@"NSArray"
@"MPCMediaRemoteMiddleware"
@"MPCPlayerRequest"
@"MPCFuture"
d16@0:8
v24@0:8d16
@"NSError"
B32@0:8@16@24
v32@0:8@16@24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceRenewalRequest"24
v32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v24@0:8@"AVPlayerItemOutput"16
v40@0:8@16@24@32
v40@0:8@"AVPlayerItemMetadataOutput"16@"NSArray"24@"AVPlayerItemTrack"32
q16@0:8
@40@0:8@16@24@32
v20@0:8B16
v28@0:8f16@?20
v20@0:8f16
f16@0:8
v32@0:8@16@?24
v32@0:8q16@?24
@24@0:8d16
v40@0:8@16@24@?32
v28@0:8d16B24
v32@0:8d16@?24
@24@0:8@16
v24@0:8q16
@"NSObject<OS_dispatch_queue>"
@"NSNumber"
@"NSOperationQueue"
@"ICMusicSubscriptionLeaseSession"
@"MPCSuzeLeaseSession"
@"MPModelGenericObject"
@"MPPropertySet"
@"<MPCReportingIdentityPropertiesLoading>"
@"MPCModelGenericAVItemTimedMetadataRequest"
@"MPCModelGenericAVItemTimedMetadataResponse"
@"ICStoreRequestContext"
@"NSURL"
@"NSString"
@"MPCAVItemNetworkPolicyHandler"
@"<MPCModelPlaybackAssetCacheProviding>"
@"NSData"
@"MPMediaLibrary"
@"MPCPlaybackRequestEnvironment"
v28@0:8B16@20
@"AVURLAsset"
v24@0:8@"ICEnvironmentMonitor"16
@"MPCJinglePlayActivityReportingController"
@"MPCReportingPlaybackObserver"
@"MPModelResponse"
@"MPCModelGenericAVItemTimedMetadataStreamFields"
@"MPSectionedCollection"
@40@0:8@16@24^@32
@"NSDictionary"
v24@0:8@?<v@?@"MPCReportingIdentityProperties"@"NSError">16
@"MPModelMediaClip"
v32@0:8@16Q24
v32@0:8@16q24
v32@0:8@"MPCPlaybackEngine"16Q24
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@"MPAVItem"32
v32@0:8@"MPCPlaybackEngine"16@"MPAVItem"24
v32@0:8@"MPCPlaybackEngine"16@"MPPlaybackContext"24
v40@0:8@"MPCPlaybackEngine"16@"MPPlaybackContext"24@"NSError"32
v32@0:8@"MPCPlaybackEngine"16@"NSString"24
v32@0:8@"MPCPlaybackEngine"16q24
v24@0:8@"MPCPlaybackEngine"16
v48@0:8@16@24q32@40
@"MPCPlaybackEngine"
@"MPNowPlayingInfoCenter"
@"MPRemoteCommandCenter"
@24@0:8q16
@32@0:8^v16^{?=qq}24
@32@0:8q16@24
@"MPNowPlayingContentItem"24@0:8q16
@"MPNowPlayingContentItem"32@0:8q16@"MPNowPlayingContentItem"24
@"NSArray"32@0:8^v16^{?=qq}24
@"MPNowPlayingContentItem"24@0:8@"NSString"16
v32@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingInfoLyricsEvent"24
@"MPModelStorePlatformMetadataGenericObjectBuilder"
{?="initialized"b1"playbackPosition"{?="identifiers"b1"bookmarkTime"b1"shouldRememberBookmarkTime"b1"hasBeenPlayed"b1"startTime"b1"stopTime"b1"storeUbiquitousIdentifier"b1"userPlayCount"b1}}
@"MPCModelGenericAVItemAssetLoadProperties"
v56@0:8^@16^@24@32q40@48
v32@0:8@"MPModelGenericObject"16@?<v@?@"NSError">24
v56@0:8^@16^@24@"MPModelGenericObject"32q40@"NSString"48
v40@0:8@"MPModelFileAsset"16@"MPModelGenericObject"24@?<v@?@"NSError">32
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8Q16@24
@32@0:8#16^{_NSZone=}24
@"NSTimeZone"
v24@0:8Q16
v24@0:8#16
@28@0:8#16B24
@24@0:8#16
v32@0:8@16:24
v32@0:8@16#24
@56@0:8@16@24@32@40@48
@"NSMutableDictionary"
@"<MPCPlaybackIntentDataSource>"
@"<NSSecureCoding>"
{?="initialized"b1"beats1"b1"name"b1"editorNotes"b1"shortEditorNotes"b1"explicit"I"artwork"b1"allowsItemLiking"b1}
v48@0:8@16@24@32^v40
@"MPCPlayer"
@"MPCMediaRemoteController"16@0:8
^{NSMapTable=#}16@0:8
v24@0:8^{NSMapTable=#}16
^{NSMapTable=#}
@"MPCPlaybackEngineMiddleware"
@"MPModelPlayEvent"
@36@0:8I16@20@28
I16@0:8
@"MPCMediaRemoteController"
@32@0:8@16Q24
@"MPCPlayerCommandRequest"
@24@0:8@?16
{?=qq}16@0:8
v32@0:8{?=qq}16
@"MPCPlayerPath"
{?="reverseCount"q"forwardCount"q}
q32@0:8q16@24
Q32@0:8Q16@24
Q40@0:8Q16Q24@32
{?=dddddffB}88@0:8{?=dddddffB}16@72@80
q40@0:8q16@24@32
@48@0:8@16@24@32@40
B32@0:8B16I20@24
@44@0:8@16@24I32@36
@"MPCMediaRemoteController"32@0:8@"MPCMediaRemoteController"16@"MPMiddlewareChain"24
q32@0:8q16@"MPMiddlewareChain"24
Q32@0:8Q16@"MPMiddlewareChain"24
Q40@0:8Q16Q24@"MPMiddlewareChain"32
{?=dddddffB}88@0:8{?=dddddffB}16@"NSIndexPath"72@"MPMiddlewareChain"80
q40@0:8q16@"NSIndexPath"24@"MPMiddlewareChain"32
@"MPModelGenericObject"48@0:8@"MPModelGenericObject"16@"MPPropertySet"24@"NSIndexPath"32@"MPMiddlewareChain"40
@"NSIndexPath"32@0:8@"NSIndexPath"16@"MPMiddlewareChain"24
B32@0:8B16I20@"MPMiddlewareChain"24
@44@0:8@16@"NSString"24I32@"MPMiddlewareChain"36
@"UIView<MPCVideoView>"32@0:8@"UIView<MPCVideoView>"16@"MPMiddlewareChain"24
@20@0:8I16
@"MPCPlayerResponseTracklist"
@"UIView<MPCVideoView>"
@"MPCPlayerResponse"
@"MPAVItem"
@"MPCModelRadioContentReference"
@"MPCPlaybackRequestEnvironment"16@0:8
v24@0:8@"MPCPlaybackRequestEnvironment"16
@"MPModelResponse"16@0:8
v24@0:8@"MPModelResponse"16
{CGSize=dd}16@0:8
v24@0:8@"NSString"16
@"NSArray"24@0:8@"MPRequest"16
v24@0:8@"NSArray"16
@40@0:8@16q24@32
@48@0:8@16q24@32@40
@56@0:8@16q24@32@40[1{__va_list_tag=II^v^v}]48
B32@0:8@"MPRemoteCommand"16@"NSString"24
@24@0:8Q16
v40@0:8@16Q24@?32
B24@0:8q16
v40@0:8@16@24:32
@"NSMapTable"
@"MPCMediaPlayerLegacyItemContainer"
@"MPCMediaPlayerLegacyItem"
@"MPCPlaybackIntent"
@"MPCMediaPlayerLegacyAVController"
@"MPCMediaPlayerLegacyNowPlayingObserver"
@"MPCMediaPlayerLegacyReportingController"
@"MPRTCReportingController"
@"MPCMediaPlayerLegacyPlayer"
@"MPPlaybackContext"
@"NSUUID"
@"NSNumber"24@0:8q16
@32@0:8q16@?24
@"NSOperation"32@0:8q16@?<v@?@"MPLibraryKeepLocalStatusObserverConfiguration"@"NSError">24
v32@0:8q16q24
@"NSObject<OS_dispatch_source>"
@"MPStoreLibraryPersonalizationResponse"
@"MPCModelStorePlaybackItemsResponse"
@"NSDate"
B24@0:8@"MPAVItem"16
v40@0:8@16q24@?32
{_NSRange=QQ}16@0:8
v36@0:8q16q24B32
Q24@0:8@16
q24@0:8@16
q32@0:8@16@24
q32@0:8q16q24
B36@0:8@16q24B32
q44@0:8q16q24B32^B36
v40@0:8@16Q24@32
B32@0:8@16@?24
q24@0:8q16
{_NSRange=QQ}20@0:8B16
Q32@0:8@16@24
@"NSMutableIndexSet"
@"MPMutableBidirectionalDictionary"
@"MPMusicPlayerControllerQueue"
@"MPQueueFeeder"
@"NSMutableArray"
@"_MPCAVItemSourceContext"
@"_MPCAVPlaylistIteration"
@"<MPAVItemQueueIdentifier>"
@"MPSparseArray"
@"MPModelFileAsset"
@"MPModelHomeSharingAsset"
@"MPIdentifierSet"
@"MPModelStoreAsset"
{?=dddddffB}16@0:8
{?="snapshotTime"d"startTime"d"endTime"d"duration"d"elapsedDuration"d"rate"f"defaultRate"f"isLiveContent"B}
@"<MPCSupportedCommands>"
@"NSIndexPath"
@28@0:8I16@20
f24@0:8@16
@"NSDictionary"16@0:8
Q40@0:8@16@24Q32
Q24@0:8@"MPShuffleController"16
@32@0:8@"MPShuffleController"16Q24
Q40@0:8@"MPShuffleController"16@24Q32
B24@0:8Q16
Q24@0:8Q16
q24@0:8Q16
v36@0:8@16B24@?28
v24@0:8^Q16
q20@0:8B16
Q28@0:8@16B24
@"NSHashTable"
@"MPPlaceholderAVItem"
@"MPModelRequest"
@"MPShuffleController"
{map<unsigned long, MPIdentifierSet *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, MPIdentifierSet *> > >="__tree_"{__tree<std::__1::__value_type<unsigned long, MPIdentifierSet *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, MPIdentifierSet *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, MPIdentifierSet *> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, MPIdentifierSet *>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, MPIdentifierSet *>, std::__1::less<unsigned long>, true> >="__first_"Q}}}
v36@0:8I16@20@?28
q32@0:8{_MSVSignedRange=qq}16
@32@0:8{_MSVSignedRange=qq}16
q40@0:8@16{CGSize=dd}24
@40@0:8@16{CGSize=dd}24
@40@0:8^v16@24^{?=qq}32
v40@0:8@16{_MSVSignedRange=qq}24
@40@0:8#16@24Q32
@32@0:8@16^v24
^v16@0:8
@"MPAVRoute"
@"ICRadioContentReference"
@"MPCReportingController"
v32@0:8Q16@?24
v48@0:8@16Q24Q32@?40
@"SSVPlayActivityController"
v28@0:8Q16B24
@"CPLRUDictionary"
@24@0:8@"NSIndexPath"16
B24@0:8@"<MPLazySectionedCollectionDataSource>"16
@"MPCPlayerCommandRequest"16@0:8
@"MPCPlayerCommandRequest"24@0:8@"MPCPlaybackIntent"16
@"NSSet"
@"MPCPlayerCommandRequest"32@0:8@"MPCPlaybackIntent"16@"MPCPlayerResponseItem"24
B32@0:8@16B24i28
B24@0:8@"MPCPlayerResponseItem"16
@"MPCPlayerCommandRequest"32@0:8@"MPCPlayerResponseItem"16@"MPCPlayerResponseItem"24
@"MPCPlayerCommandRequest"24@0:8q16
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerResponseSection"16
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerResponseItem"16
@"MPCPlayerCommandRequest"24@0:8d16
@20@0:8f16
@"MPCPlayerCommandRequest"20@0:8f16
@20@0:8B16
@"MPCPlayerCommandRequest"20@0:8B16
@28@0:8@16I24
d32@0:8@16d24
d24@0:8@16
@"MPAVController"
@?20@0:8I16
@?28@0:8I16@20
{_MSVSignedRange="location"q"length"q}
@"MSVLRUDictionary"
@"<MPArtworkDataSource>"
^{_MRMediaRemoteCommandInfo=}20@0:8I16
@"ICNetworkConstraints"
@"MPKeyValueObserver"
@"AVPlayerItem"
@"MPCRadioStationPlaybackMetadata"
@"RadioStationMatchContext"
@32@0:8@16@?24
@"MPCModelStorePlaybackItemsRequest"
@28@0:8@16B24
{MPModelStorePlaybackItemEligibility=Bq}24@0:8@16
@"MPStoreModelGenericObjectBuilder"
@"MPMutableSectionedCollection"
i16@0:8
v20@0:8i16
@"_MPCProtoContainerIdentifierSet"
{?="containerType"b1}
{?="cloudID"b1"delegateInfoID"b1"storeAdamID"b1}
{?="accountID"b1"delegateInfoID"b1"systemReleaseType"b1}
@"_MPCProtoItemIdentifierSet"
{?="mediaType"b1"excludeFromShuffle"b1}
{?="cloudID"b1"delegateInfoID"b1"purchaseHistoryID"b1"storeAdamID"b1"storeSubscriptionAdamID"b1}
@"_MPCProtoRadioContentReferenceLibraryAlbumContentReference"
@"_MPCProtoRadioContentReferenceLibraryArtistContentReference"
@"_MPCProtoRadioContentReferenceLibraryItemContentReference"
@"_MPCProtoRadioContentReferenceStoreContentReference"
{?="representativeItemCloudID"b1"storeAdamID"b1}
{?="cloudID"b1"duration"b1"fileSize"b1"storeAdamID"b1"albumDiscCount"b1"albumTrackCount"b1"contentType"b1"discNumber"b1"trackNumber"b1"year"b1"isCompilation"b1}
{?="storeAdamID"b1}
@"_MPCProtoDelegateInfo"
@"_MPCProtoRadioContentReference"
@"_MPCProtoTracklistIndexPath"
{?="containerIndex"b1"itemIndex"b1}
@"ICRadioGetTracksRequest"
@32@0:8@16q24
v24@0:8@?<v@?@"MPPlaybackContext"@"NSError">16
v32@0:8@"MPCPlaybackIntent"16@?<v@?@"MPPlaybackContext"@"NSError">24
v40@0:8@"MPCPlaybackIntent"16@"MPCPlayerPath"24@?<v@?@"MPRemotePlaybackQueue"@"NSError">32
@"<MPCPlaybackEngineDelegate>"
@"MPProtocolProxy<MPCPlaybackEngineEventObserving>"
@"_MPCAVController"
@"_MPCMediaRemotePublisher"
@"_MPCReportingController"
@"_MPCLeaseManager"
v32@0:8@"ICSuzeLeaseSession"16@"NSError"24
@"ICSuzeLeaseSession"
v40@0:8@"MPRemoteCommandCenter"16@"MPCMediaRemoteMuxer"24:32
@"NSPointerArray"
@"MPCPlayerItem"
@"AVPlayerLayer"
@"MPCPlayerItemContainer"
@"MPCMediaRemoteMuxer"
@"MPModelSong"
@"MPCPlayerQueueRequest"16@0:8
v24@0:8@"MPCPlayerQueueRequest"16
@?<v@?@"MPCPlayerQueueResponse"@"NSError">16@0:8
v24@0:8@?<v@?@"MPCPlayerQueueResponse"@"NSError">16
@"MPCPlayerQueueRequest"
{_NSRange="location"Q"length"Q}
@"MPCMediaPlayerLegacyPlaylistManager"
@"RadioRequestContext"
@"SSVPlayActivityEnqueuerProperties"
@"SSVPlayActivityEvent"
@"MPCPlaybackHistoryRecordChangeRequest"
@"MPAssistantAnalyticsReportingController"
@"MPCPlaybackHistoryController"
@"MPCLyricsReportingController"
@32@0:8^{_NSZone=}16#24
@"ICUserIdentityProperties"
@"ICRadioGetTracksResponse"
v40@0:8@"MPPlayableContentManager"16@"NSIndexPath"24@?<v@?@"NSError">32
v32@0:8@"MPPlayableContentManager"16@?<v@?@"NSError">24
v40@0:8@"MPPlayableContentManager"16@"NSArray"24@?<v@?@"NSError">32
v32@0:8@"MPPlayableContentManager"16@"MPPlayableContentManagerContext"24
@"MPCPlaybackDelegationProperties"
v32@0:8@?16@?24
@"_MPCModelRadioPlaybackQueueAVItemSection"
@"ICRadioPlaybackHistoryStore"
@"MPModelRadioStation"
@"_MPCModelRadioPlaybackQueueStationTracksSection"
@"MPAVItem"24@0:8q16
@"NSString"24@0:8q16
@"ICRadioStationTrack"24@0:8q16
@"ICMutableRadioPlaybackHistory"
@"MPCStoreContentMetadataResponse"
@"RadioArtworkCollection"
@"RadioStation"
B40@0:8@16q24^@32
@"MPCModelRadioPersonalizationResponse"
@"ICUserIdentityStore"
@"MPCModelRadioPlaybackQueue"
@40@0:8q16@24@32
v56@0:8q16@24@32@?40@?48
B24@0:8@"MPArtworkCatalog"16
B32@0:8@"MPArtworkRepresentation"16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"24@0:8@"MPArtworkCatalog"16
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPArtworkRepresentation"@"NSError">24
v24@0:8@"MPArtworkCatalog"16
@"<NSCopying>"24@0:8@"MPArtworkCatalog"16
@40@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32
v56@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32@?<v@?@?<v@?@@"NSError">>40@?<v@?@@"NSError">48
v32@0:8@"MPArtworkCatalog"16@?<v@?@"NSURL"@"NSError">24
@(#)PROGRAM:MediaPlaybackCore  PROJECT:MediaPlayerFramework-1
%{public}@: Starting asset load...
%{public}@: Loading user identity properties...
%{public}@: Finished loading user identity properties: %@
%{public}@: Loading delegated identity properties...
%{public}@: Finished loading delegated identity properties: %@ with error: %{public}@
%{public}@: Returning asset load early with error: %{public}@
%{public}@: Loading subscription status...
%{public}@: Finished loading subscription status: %{public}@ with error: %{public}@
%{public}@: Finished loading subscription status: %{public}@
%{public}@: Timed out loading subscription status
%{public}@: Loading subscription lease session...
%{public}@: Finished loading subscription lease session: %{public}@ with error: %{public}@
%{public}@: Timed out loading subscription lease session
%{public}@: Skipping subscription lease load since the subscription status indicated it shouldn't be used
%{public}@: Using local file asset at path: %{public}@.
%{public}@: Using home sharing asset.
%{public}@: Using existing Radio cached playback response: %{public}@
%{public}@: No cached Radio playback response found.
%{public}@: No local file of appropriate quality, using cloud streaming.
%{public}@: Loading network constraints...
%{public}@: Finished loading network contraints: %{public}@ with error: %{public}@.
%{public}@: Timed out loading network constraints.
%{public}@: Subscription is required, and the user does not have subscription playback capability, setting error to subscription required.
%{public}@: Subscription is required, and we failed to load the subscription status.
%{public}@: Timed out while attempting to load subscription asset.
%{public}@: Timed out while attempting to load media redownload asset.
%{public}@: No valid endpoint type (%ld), skipping streaming redownload.
%{public}@: Network unavailable, skipping streaming.
%{public}@: Cellular restricted, skipping streaming.
%{public}@: Network constraint restricted, skipping streaming.
%{public}@: Unknown error, skipping streaming.
%{public}@: Using iTunes Store Content Info: %@
%{public}@: Protection type is %li, skipping subscription key check.
%{public}@: Not subscription content, skipping playback key check.
%{public}@: Lease session invalid, skipping key loading.
%{public}@: Already have playback keys from lease status: %{public}@, no need to do another request.
%{public}@: Requesting playback keys because the lease status indicates none available: %{public}@
%{public}@: Finished subscription lease request for playback keys with error: %{public}@.
%{public}@: Timed out while attempting to acquire lease for playback keys.
%{public}@: Asset download completed %{public}@.
%{public}@: Finished caching file asset with error: %{public}@.
%{public}@: Removed incomplete download at URL: %{public}@
%{public}@: Failed to remove incomplete downloaded file at URL: %{public}@ with error: %{public}@.
%{public}@: Starting Suze lease session...
%{public}@: Failed to create suze lease with error: %{public}@.
%{public}@: Timed out creating Suze lease session: %{public}@.
%{public}@: Asset load finished.
%{public}@: Preparing for rate: %f.
%{public}@: Finished preparing for rate: %f.
%{public}@: Sending subscription lease request for rate preparation.
%{public}@: Finished sending subscription lease request for rate preparation with error: %{public}@.
%{public}@ Using start time: %f
%{public}@ Using stop time: %f
%{public}@ Using bookmark start time: %f
BackgroundTask: End assertion (%lli) at %{public}s:%d
BackgroundTask: Took assertion (%lli) at %{public}s:%d
No lyrics available. Error: %{public}@, modelObject: %{public}@
Unable to provide lyrics for contentItemID %{public}@, modelObject: %{public}@
%{public}@: Setting loudness info %{public}@ on player item %{public}@
%{public}@: Lease playback prevention state did change to: %li
Invalidating playback queue because %{public}@
Lyrics begin event: %{public}@, Lyrics ID = %{public}@, Info = %{public}@
Lyrics end event: %{public}@ - %{public}@, ID = %{public}@, Info = %{public}@
Lyrics end event: invalid duration for reporting. Duration = %{public}g
Lyrics end event: no song found for contentItemID %{public}@
Lyrics end event: missing lyrics identifier. Token = %{public}@
-[_MPCMediaRemotePublisher _performCommandEvent:]
%{public}s: received MRMediaRemoteCommand type = %{public}@
%{public}s: status = %{public}@
%{public}s: status = MPRemoteCommandHandlerStatusSuccess
InsertIntoPlaybackQueue failed. Could not create playback context. (error = %{public}@)
Add to playback context failed: %ld
MPRemoteCommandHandlerStatus = %ld
Play queue verification failed with error: %ld
Create playback context failed with error: %ld
Reload with playback context failed with error: %ld
Unsupported command: %{public}@
%{public}@: File asset missing file path, finishing.
%{public}@: Writing path %{public}@ for media item: %{public}@
Setting active player: %{public}@
%{public}@ setting parentApplicationBundleID: %{public}@
Skipping playback state preservation for player: %{public}@
Failed to encode playlist manager with exception: %{public}@
Could not open caches url: %{public}@
Failed to write queue archive: %{public}@
Playlist manager has already been restored, skipping restoration
Decoding playlist manager with UUID: %@ [attempt %lu]
Could not open caches url for read: %{public}@
Could not fetch playlist manager archive: %{public}@
Found playlist manager in userDefaults, clearing out
Failed to decode playlist manager with exception: %{public}@
%{public}@ receieved a playback intent while a restore was in flight. Ignoring queue restoration
Failed decoding playlist manager %lu times. Skipping.
Could not find playlist manager data to restore, deferring
InsertIntoPlaybackQueue failed. Inserting a radio context is not supported
Error setting up playback queue with context. %{public}@
Attempting reload with fallback playback context
Failed with fallback reload with error: %{public}@
Setting %@ EQ to %d
Setting up EQ for %@
%{public}@ Beginning queue restoration.
%{public}@ finalizing queue restoration.
%{public}@ did not find any queue feeders that support state restoration.
%{public}@ playbackContext: %{public}@ insertionType: %d
Refusing hard queue insert for currentItem: %{public}@ soft queue: %{public}@
Setting hard queue with insertion type: %d without a soft queue, using %{public}@ to create a soft queue
Could not find index to append to queue
Hard queue insertion index set to %ld
%{public}@
Ignoring disabling Up Next
Setting disable up next to %d
Moving sourceContext:%{public}@ to index: %lu
%{public}@ skipping because queue modifications are disabled
sourceIndex: %ld
destinationIndex: %ld
Removing last hard queue item
ENDING PLAYBACK -- We failed to load assets for all of the items in the queue. Failed index count: %lu soft queue count: %lu
Preparing to queue index: %ld
Skipping past _hardQueueInsertionIndex: %ld
Popping hard queue source context for range %{public}@
Clearing hard queue because we have skipped over the tracks
Adjusting _nextCurrentIndex to %ld
Adjusting _hardQueueInsertionIndex to %ld
Setting min playlist index to %ld
Setting max playlist index to %ld
Invalidating: %{public}@
Invalidating soft queue, dropping iteration modifications
Soft queue invalidated when we're ignorning changes
%{public}@ invalidated with an error or to 0 items: %{public}@
Setting min playlist index to %lu
Setting max playlist index to %lu
Current queue has been invalidated, preparing to queue index: %lu
Reloading queue coordinator %{public}@
ENDING PLAYBACK -- We have failed all items in the queue at least once.
ENDING PLAYBACK -- We have failed to play the item on repeat at least once.
%{public}@ couldn't find an media item for %{public}@
keeping current hard queue item %{public}@
Requesting source context for index >= NSNotFound, returning nil
Queue Feeder: %{public}@ couldn't find item for queue index: %{public}@
Soft queue faulting disabled for playlist index: %ld
%{public}@: Using subscription playback endpoint with operation type: %li
%{public}@: Has subscription lease session, using it.
%{public}@: Using existing cached playback response: %{public}@
%{public}@: Performing subscription playback request...
%{public}@: Finished subscription playback request with response: %{public}@, error: %{public}@
%{public}@: Failed loading subscription asset due to missing lease session.
%{public}@: Performing subscription accountless playback request...
%{public}@: Finished subscription accountless playback request with response: %{public}@, error: %{public}@
Could not restore queue feeder: %{public}@
Restoring queue feeder: %{public}@
Queue feeder: %{public}@ has already restored the queue. Nothing to do here
Beginning intial request for queue feeder: %{public}@
Finished queue restoration for %{public}@ with error: %{public}@
%{public}@ setting override start time: %{public}@ for item with identifier: %{public}@
%{public}@ setting override stop time: %{public}@ for item with identifier: %{public}@
%{public}@ loaded final response with %lu tracks.
Invalid request item class: %{public}@ for %{public}@
Reporting event not recorded due to it being invalid: %{public}@
[MPCReportingController] Recording reporting events: %@
Failed to generate fallback playback context: %{public}@ %{public}@
Failed to load fallback playback context: %{public}@ %{public}@
Unable to set audio session catogory to AVAudioSessionCategoryPlayback: %{public}@
Setting simulator volume to %f
[MPCReportingPlaybackObserver] Item will change from: %@ to: %@
[%{public}@] Setting preferred peak bit rate to %f for item: %{public}@
[%{public}@] Marking as cellular restricted for item: %{public}@
[%{public}@] Marking as network unavailable for item: %{public}@
[%{public}@] Marking as network constraint disabled for item: %{public}@
[%{public}@] Marking as network constraint file size too large for item: %{public}@
[%{public}@] Posting cellular restriction failure for item: %{public}@
%{public}@: Performing media redownload request...
%{public}@: Finished media redownload request with response: %{public}@, error: %{public}@
%{public}@: Missing redownload parameters.
%{public}@: Missing store request context.
[RemotePlaybackQueue] Could not set playback queue. Media query is nil for queue %{public}@
[RemotePlaybackQueue] Could not set playback queue. Missing both station string ID and station ID queue %{public}@
[RemotePlaybackQueue] Attempting to prepare Genius Playlist for store item %{public}@
[RemotePlaybackQueue] Could not set PlaybackContext for GeniusPlaybackQueue. %{public}@. <%{public}@>
-[MPCPlayerEngine setPictureInPictureSupported:] has no effect on non-iOS platforms.
%{public}@: Invalid identifier (%{public}@: %{public}@) provided for type: %{public}@. Undefined results when using this identifier.
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
