{@333333
%@ (readyHandler != ((void *)0))
[%s (%s:%d)]
Assertion failed
+[GKChallengeComposeController composeAndSendFlowForChallenge:selectPlayers:defaultMessage:forcePicker:readyHandler:completionHandler:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-563.125/GameCenterUI/iOS/Framework/Compose/GKChallengeComposeController.m
GameKit Exception
%@ (handler != ((void *)0))
[%s (%s:%d)]
v24@?0@"NSArray"8@"NSError"16
v8@?0
v24@?0@"NSString"8@"NSError"16
v24@?0@"NSArray"8@"NSString"16
TO_LABEL
CHALLENGE_INVITE_DESCRIPTION_START
ENTER_OPTIONAL_MESSAGE
CHALLENGE_INVITATION_TITLE
@24@?0@"GKPlayer"8Q16
v16@?0@?<v@?>8
challengeField
T@"GKComposeHeaderField",&,N,V_challengeField
challenge
T@"GKChallenge",&,N,V_challenge
playersToLoad
T@"NSArray",&,N,V_playersToLoad
v16@?0@"UIViewController"8
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
DONE_BUTTON_TITLE
v16@?0@"NSError"8
GameKit
SERVICE
%s %s:%d | %@
-[GKExtensionViewController hostObjectProxy]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-563.125/GameCenterUI/iOS/Framework/Extensions/GKExtensionViewController.m
error calling host - %@
Error
-[GKExtensionViewController messageFromClient:]
error while decoding messageFromClient archive in GKExtensionViewController:%@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
game
T@"GKGame",&,N
hasInitialData
TB,N,V_hasInitialData
effectView
T@"UIVisualEffectView",N,V_effectView
effectBottomConstraint
T@"NSLayoutConstraint",&,N,V_effectBottomConstraint
effectTopConstraint
T@"NSLayoutConstraint",&,N,V_effectTopConstraint
alwaysShowDoneButton
TB,N,V_alwaysShowDoneButton
statusBarHeight
Td,N,V_statusBarHeight
contentViewController
T@"UIViewController",&,N,V_contentViewController
T@"GKGame",&,N,V_game
hostPID
Ti,N,V_hostPID
adjustTopConstraint
TB,N,V_adjustTopConstraint
-[GKExtensionContext hostApp:grantingAccessExtensionSandbox:replyWithEndpoint:]
NSBundleResourceRequest encountered a sandboxing error (sandbox_extension_consume): %d
sandboxToken
Tq,N,V_sandboxToken
@24@?0@"GKPlayerInternal"8Q16
-[GKChallengeIssueExtensionViewController hostObjectProxy]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-563.125/GameCenterUI/iOS/Framework/Extensions/GKChallengeIssueExtensionViewController.m
defaultMessage
T@"NSString",C,N,V_defaultMessage
players
T@"NSArray",&,N,V_players
forcePicker
TB,N,V_forcePicker
completionHandler
T@?,C,N,V_completionHandler
PLAYER_PICKER_CHALLENGE_TITLE
SEND_BUTTON
CUSTOM_MESSAGE_BUTTON
CANCEL_BUTTON
SEARCH_NO_RESULTS
@"NSString"24@?0@"GKPlayer"8Q16
RECIPIENT_SEPERATOR_AND_WHITESPACE_IN_COMPOSE_FIELD
TO_LABEL_FORMAT
initiallySelectedPlayers
T@"NSArray",&,N,V_initiallySelectedPlayers
shouldIgnoreClearSelection
TB,N,V_shouldIgnoreClearSelection
descriptionLabel
T@"UILabel",N,V_descriptionLabel
sendButton
T@"UIButton",N,V_sendButton
customizeMessageButton
T@"UIButton",N,V_customizeMessageButton
messageField
T@"UITextField",N,V_messageField
scrollingHeader
T@"UIView",N,V_scrollingHeader
scrollingHeaderTopConstraint
T@"NSLayoutConstraint",N,V_scrollingHeaderTopConstraint
scrollingHeaderTopConstraintConstant
Td,N,V_scrollingHeaderTopConstraintConstant
initialInsets
T{UIEdgeInsets=dddd},N,V_initialInsets
shouldApplyInitialOffset
TB,N,V_shouldApplyInitialOffset
customizeMessageBottomConstraint
T@"NSLayoutConstraint",N,V_customizeMessageBottomConstraint
initialCustomizeMessageBottomConstraintConstant
Td,N,V_initialCustomizeMessageBottomConstraintConstant
composeController
T@"UIViewController",&,N,V_composeController
message
T@"NSString",C,N,V_message
CurrentGameKey
LocalPlayerKey
StatusBarHeightKey
HostPIDKey
RTLKey
ChallengeKey
PlayerInternalsKey
MessageKey
ForcePickerKey
MessageCommandKey
PlayerID
ChallengeMessage
playerCell
q24@?0@"GKPlayer"8@"GKPlayer"16
v32@?0@"GKAchievement"8Q16^B24
v32@?0@"NSString"8@"NSArray"16^B24
v24@?0@"NSDictionary"8@"NSError"16
sortName
playerStates
T@"NSMutableDictionary",&,N,V_playerStates
playerAchievementDates
T@"NSMutableDictionary",&,N,V_playerAchievementDates
searchPlayers
T@"NSArray",&,N,V_searchPlayers
selectedPlayers
T@"NSArray",R,N
FRIENDS_SCREEN_TITLE_MANY
FRIENDS_SCREEN_TITLE_ONE
FRIENDS_SCREEN_TITLE_ZERO
stringWithFormat:
stringWithUTF8String:
lastPathComponent
UTF8String
raise:format:
localPlayer
count
friendPickerFlowForChallenge:selectPlayers:defaultMessage:completionHandler:
composeFlowForChallenge:players:defaultMessage:completionHandler:
loadRecentPlayersWithCompletionHandler:
alloc
initWithChallenge:defaultMessage:players:
autorelease
setPlayersToLoad:
players
issueToPlayers:message:
setDoneHandler:
initWithChallenge:initiallySelectedPlayers:
setMessage:
setCompletionHandler:
init
setNameText:
setValueText:
setMaxLineCount:
messageField
setPlaceholderText:
setToField:
setChallengeField:
arrayWithObjects:count:
setComposeHeaderFields:
setChallenge:
setDefaultMessage:
setPlayers:
release
dealloc
updateChallengeText
viewWillAppear:
navigationController
topViewController
navigationItem
cancel
initWithBarButtonSystemItem:target:action:
setLeftBarButtonItem:
composeGoalText
loadView
setTitle:
detailsLoaded
dispatchGroup
setLoadingState:
displayName
_gkMapWithBlock:
toField
setRecipientNameStrings:
loadCompletePlayersForPlayers:completionHandler:
perform:
loadDetailsWithCompletionHandler:
notifyOnMainQueueWithBlock:
intendedFirstResponder
resignFirstResponder
doneHandler
userErrorForCode:underlyingError:
donePressed
composeAndSendFlowForChallenge:selectPlayers:defaultMessage:forcePicker:readyHandler:completionHandler:
challengeField
challenge
playersToLoad
_challengeField
_challenge
_playersToLoad
view
setBackgroundColor:
setOpaque:
setPreferredContentSize:
pushViewController:animated:
initWithRootViewController:
navigationBar
sharedTheme
_gkApplyTheme:navbarStyle:
setModalPresentationStyle:
formSheetSize
setFormSheetSize:
setWantsFullScreenLayout:
_popoverController
delegate
class
isKindOfClass:
presentViewController:animated:completion:
dismissPopoverAnimated:
respondsToSelector:
_gkPresentSendDialogForChallenge:selectPlayers:defaultMessage:complete:
_gkPresentChallengeVC:
presentingViewController
popToViewController:animated:
dismissViewControllerAnimated:completion:
_gkPresentSendDialogForChallenge:selectPlayers:defaultMessage:
mainScreen
bounds
currentDevice
userInterfaceIdiom
copy
initWithCoder:
_setClipUnderlapWhileTransitioning:
_setPositionBarsExclusivelyWithSafeArea:
defaultCenter
willResignActive:
addObserver:selector:name:object:
didBecomeActive:
traitCollection
colorWithWhite:alpha:
setNeedsDisplay
removeObserver:
viewDidLoad
setBarStyle:
setTranslucent:
daemonProxy
setDataUpdateDelegate:
_useBackdropViewForWindowBackground
effectWithStyle:
initWithEffect:
setEffectView:
setFrame:
setTranslatesAutoresizingMaskIntoConstraints:
parentViewController
window
insertSubview:atIndex:
topAnchor
constraintEqualToAnchor:constant:
bottomAnchor
leadingAnchor
constraintEqualToAnchor:
trailingAnchor
addConstraints:
setEffectBottomConstraint:
setEffectTopConstraint:
sharedPalette
viewBackgroundColor
colorWithAlphaComponent:
hasInitialData
contentViewController
constructContentViewController
viewDidDisappear:
setViewControllers:animated:
setContentViewController:
dataUpdateDelegate
willTransitionToTraitCollection:withTransitionCoordinator:
effectTopConstraint
setConstant:
animateAlongsideTransition:completion:
objectForKeyedSubscript:
floatValue
setStatusBarHeight:
integerValue
setHostPID:
setGame:
updateFromLocalPlayer:
boolValue
hostPID
setHasInitialData:
isViewLoaded
configureContentViewController
setClipsToBounds:
systemInteractionColor
setTintColor:
alwaysShowDoneButton
addDoneButtonToViewController:
_gkWantsCustomRightBarButtonItemInViewService
donePressed:
initWithTitle:style:target:action:
setRightBarButtonItem:
countByEnumeratingWithState:objects:count:
extensionIsFinishing
_gkShouldRefreshContentsForDataType:userInfo:
_gkRefreshContentsForDataType:userInfo:
extensionContext
_auxiliaryConnection
localizedDescription
remoteObjectProxyWithErrorHandler:
archivedDataWithRootObject:requiringSecureCoding:error:
hostObjectProxy
messageFromExtension:
numberWithInteger:
dictionaryWithObjects:forKeys:count:
sendMessageToClient:
unarchivedObjectOfClass:fromData:error:
clientDidFinish
clientDidCancel
setEffect:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retain
retainCount
zone
hash
superclass
description
debugDescription
setBadgeCount:forType:
refreshContentsForDataType:userInfo:
friendRequestSelected:
messageFromClient:
setInitialState:withReply:
game
remoteViewControllerDidFinish
remoteViewControllerDidCancel
setValue:forKeyPath:withReply:
nudge
hostApp:grantingAccessExtensionSandbox:replyWithEndpoint:
remoteViewControllerIsCanceling
remoteViewControllerIsFinishing
finish
setToLightBackground
setToDarkBackground
finishAndPlayChallenge:
finishWithTurnBasedMatch:
quitTurnBasedMatch:
dashboardDidChangeToViewState:
dashboardDidChangeToLeaderboardTimeScope:
dashboardDidChangeToLeaderboardIdentifier:
requestDashboardLogoImageWithHandler:
requestImagesForLeaderboardSetsWithHandler:
requestImagesForLeaderboardsInSet:handler:
_statusBarHeightForCurrentInterfaceOrientation
extensionIsCanceling
setAlwaysShowDoneButton:
statusBarHeight
effectView
adjustTopConstraint
setAdjustTopConstraint:
effectBottomConstraint
_alwaysShowDoneButton
_adjustTopConstraint
_hasInitialData
_hostPID
_statusBarHeight
_contentViewController
_game
_effectView
_effectBottomConstraint
_effectTopConstraint
_principalObject
defaultWorkspace
applicationProxyForBundleID:
bundle
_extensionEndpointForMainBundleOfHostApplication:
sandboxToken
setSandboxToken:
_sandboxToken
setForcePicker:
challengeForInternalRepresentation:
canonicalizedPlayerForInternal:
removeFromSuperview
playerID
arrayWithArray:
dictionaryWithDictionary:
setObject:forKeyedSubscript:
isGameCenter
defaultMessage
forcePicker
completionHandler
_forcePicker
_defaultMessage
_players
_completionHandler
challengeIssueServiceViewControllerInterface
challengeIssueHostViewControllerInterface
_extensionAuxiliaryVendorProtocol
_extensionAuxiliaryHostProtocol
awakeFromNib
preferredFontForTextStyle:
titleLabel
setFont:
blackColor
setTitleColor:forState:
_setVisualEffectViewEnabled:backgroundColor:
_setBlurEnabled:
setTitle:forState:
layoutIfNeeded
performWithoutAnimation:
isHidden
canBecomeFocused
addTarget:action:forControlEvents:
removeTarget:action:forControlEvents:
initWithFrame:
setScaleFactor:
setContentOpaque:
setCornerRadius:
setUseShadowImage:
setShadowOpacity:
setShadowExpansion:
setShadowVerticalOffset:
setUnfocusedShadowRadius:
setUnfocusedShadowOpacity:
setUnfocusedShadowVerticalOffset:
setUnfocusedShadowExpansion:
setBackgroundColor:forState:
setContentMotionRotation:translation:
bezierPathWithOvalInRect:
CGPath
_shadowPathForSize:radius:
_gkPlatformNibName
bundleForClass:
initWithNibName:bundle:
setInitiallySelectedPlayers:
initWithChallenge:
setDataSource:
setLoadingIndicatorDelay:
detailGoalText
setText:
collectionView
setToHorizontalLayout:
setAutoWidthUsesTwoColumnsWhenSpace:
collectionViewLayout
setCentersItemsInExcessSpace:
setFocusScaleFactor:
setAlignItemsToTop:
setDelegate:
constant
setScrollingHeaderTopConstraintConstant:
sectionInset
setInitialInsets:
setShouldApplyInitialOffset:
setSectionInset:
send:
adjustCustomizeMessageConstraint
_updateButtonEnableState
viewControllers
cancel:
_gkAddMenuButtonTapGestureRecognizerWithTarget:action:
addSubview:
becomeFirstResponder
leftBarButtonItem
applyInitialContentOffset
setShouldIgnoreClearSelection:
viewDidAppear:
tabBarController
tabBar
viewWillTransitionToSize:withTransitionCoordinator:
dataSource
selectedPlayers
contentOffset
contentInset
setContentOffset:animated:
isEqualToString:
loadData
dataUpdated:withError:
arrayWithCapacity:
indexPathForPlayer:
addObject:
itemCount
searchText
length
indexPathForItem:inSection:
selectPlayersAtIndexPaths:
collectionView:shouldSelectItemAtIndexPath:
selectItemAtIndexPath:animated:scrollPosition:
collectionView:didSelectItemAtIndexPath:
setNeedsFocusUpdate
setupNoContentView:withError:
isEnabled
preferredFocusEnvironments
clearSelection
_gkRemoveViewController:animated:
_gkViewFromNib
setInputAccessoryView:
setReturnKeyType:
componentsJoinedByString:
subtitleLabel
descriptionLabel
text
setEnabled:
isUnderage
setSearchText:
collectionView:didDeselectItemAtIndexPath:
textFieldShouldBeginEditing:
textFieldDidBeginEditing:
textFieldShouldEndEditing:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textField:shouldChangeCharactersInRange:replacementString:
textFieldShouldClear:
textFieldShouldReturn:
positionForBar:
searchBarShouldBeginEditing:
searchBarTextDidBeginEditing:
searchBarShouldEndEditing:
searchBarTextDidEndEditing:
searchBar:textDidChange:
searchBar:shouldChangeTextInRange:replacementText:
searchBarSearchButtonClicked:
searchBarBookmarkButtonClicked:
searchBarCancelButtonClicked:
searchBarResultsListButtonClicked:
searchBar:selectedScopeButtonIndexDidChange:
addMessage:
scrollViewDidScroll:
message
initiallySelectedPlayers
shouldIgnoreClearSelection
setDescriptionLabel:
sendButton
setSendButton:
customizeMessageButton
setCustomizeMessageButton:
setMessageField:
scrollingHeader
setScrollingHeader:
scrollingHeaderTopConstraint
setScrollingHeaderTopConstraint:
scrollingHeaderTopConstraintConstant
initialInsets
shouldApplyInitialOffset
customizeMessageBottomConstraint
setCustomizeMessageBottomConstraint:
initialCustomizeMessageBottomConstraintConstant
setInitialCustomizeMessageBottomConstraintConstant:
composeController
setComposeController:
_shouldIgnoreClearSelection
_shouldApplyInitialOffset
_message
_initiallySelectedPlayers
_descriptionLabel
_sendButton
_customizeMessageButton
_messageField
_scrollingHeader
_scrollingHeaderTopConstraint
_scrollingHeaderTopConstraintConstant
_customizeMessageBottomConstraint
_initialCustomizeMessageBottomConstraintConstant
_composeController
_initialInsets
updateFont
fontTextStyle
setUseStandardHeaders:
setupCollectionView:
_gkNib
registerNib:forCellWithReuseIdentifier:
setAllowsMultipleSelection:
initWithName:
sortName
compare:
sortedArrayUsingComparator:
dictionaryWithCapacity:
referenceKey
numberWithUnsignedInteger:
setPlayerStates:
achievement
identifier
internal
initWithInternalRepresentation:
player
setPlayerAchievementDates:
array
isCompleted
indexOfObject:
objectAtIndexedSubscript:
lastReportedDate
isReplayable
enumerateObjectsUsingBlock:
enumerateKeysAndObjectsUsingBlock:
removeObjectsInArray:
addObjectsFromArray:
loadAchievementsForGameV2:players:includeUnreported:includeHidden:withCompletionHandler:
getFriendPlayersForAchievement:handler:
currentPlayers
preferredCollectionHeight
playerForIndexPath:
item
allKeys
objectForKey:
searchMatchesItem:inSection:
setSearchPlayers:
dequeueReusableCellWithReuseIdentifier:forIndexPath:
setPlayer:
setSelectable:
setSelected:
isSelectable
maximumPoints
setStatusWithAchievementEarnedPoints:andDate:
defaultSize
loadDataWithCompletionHandler:
sectionHeaderText
itemForIndexPath:
searchKeyForSection:
searchTextHasChanged
numberOfSectionsInCollectionView:
collectionView:cellForItemAtIndexPath:
collectionView:layout:sizeForItemAtIndexPath:
playerStates
playerAchievementDates
searchPlayers
_playerStates
_playerAchievementDates
_searchPlayers
GKChallengeComposeController
GKChallengeAdditions
GKExtensionViewController
GKDaemonProxyDataUpdateDelegate
NSObject
GKExtensionProtocol
GKExtensionHostProtocol
GKDashboardServiceInterface
GKServiceViewControllerInformalDelegateProtocol
GKExtensionContext
GKChallengeIssueExtensionViewController
GKChallengeIssueServiceProtocol
GKChallengeIssueExtensionContext
GKDashboardFocusButton
GKDashboardFloatingCircleView
GKDashboardChallengePlayerPickerViewController
UITextFieldDelegate
UISearchBarDelegate
UIBarPositioningDelegate
GKComposeControllerDelegate
GKDashboardLabel
GKDashboardLabelTitle1
GKDashboardLabelTitle2
GKDashboardLabelTitle3
GKDashboardLabelSubtitle1
GKDashboardLabelSubtitle2
GKDashboardLabelCallout
GKDashboardChallengePlayerPickerDataSource
v60@0:8@16@24@32B40@?44@?52
@48@0:8@16@24@32@?40
@16@0:8
@40@0:8@16@24@32
v16@0:8
v20@0:8B16
v24@0:8@16
@"GKComposeHeaderField"
@"GKChallenge"
@"NSArray"
v40@0:8@16@24@32
v48@0:8@16@24@32@?40
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8Q16Q24
v28@0:8I16@20
v28@0:8I16@"NSDictionary"20
v24@0:8@"GKFriendRequestInternal"16
v32@0:8@16@?24
v40@0:8@16@24@?32
v24@0:8@"NSData"16
v32@0:8@"NSDictionary"16@?<v@?B>24
@"GKGame"16@0:8
v24@0:8@"GKGame"16
v40@0:8@"NSObject"16@"NSString"24@?<v@?B>32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSXPCListenerEndpoint">32
v24@0:8q16
v24@0:8@?16
v24@0:8@"GKChallenge"16
v24@0:8@"GKTurnBasedMatch"16
v24@0:8@"NSString"16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSString"16@?<v@?@"NSError">24
@24@0:8@16
v32@0:8@16@24
v28@0:8@16B24
d16@0:8
v24@0:8d16
i16@0:8
v20@0:8i16
@"UIViewController"
@"GKGame"
@"UIVisualEffectView"
@"NSLayoutConstraint"
q16@0:8
@?16@0:8
@"NSString"
v32@0:8@16Q24
v40@0:8@16:24Q32
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
^{CGPath=}40@0:8{CGSize=dd}16d32
v32@0:8@16q24
B48@0:8@16{_NSRange=QQ}24@40
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
q24@0:8@16
q24@0:8@"<UIBarPositioning>"16
B24@0:8@"UISearchBar"16
v24@0:8@"UISearchBar"16
v32@0:8@"UISearchBar"16@"NSString"24
B48@0:8@"UISearchBar"16{_NSRange=QQ}24@"NSString"40
v32@0:8@"UISearchBar"16q24
@32@0:8@16@24
v40@0:8{CGSize=dd}16@32
v28@0:8B16@20
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
@"UILabel"
@"UIButton"
@"UITextField"
@"UIView"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@24@0:8q16
{CGSize=dd}40@0:8@16@24@32
B32@0:8@16@24
@"NSMutableDictionary"
%{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>DataProtectionClass</key>
<string>NSFileProtectionComplete</string>
<key>com.apple.accounts.facebook.defaultaccess</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.developer.game-center</key>
<array>
<string>Account</string>
<string>Scores</string>
<string>Achievements</string>
<string>Challenges</string>
<string>Multiplayer</string>
<string>TurnBasedMultiplayer</string>
</array>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.mobile.deleted.AllowFreeSpace</key>
<true/>
<key>com.apple.private.canGetAppLinkInfo</key>
<true/>
<key>com.apple.private.canModifyAppLinkPermissions</key>
<true/>
<key>com.apple.private.contactsui</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.game-center</key>
<array>
<string>Account</string>
<string>Authenticate</string>
<string>Profile</string>
<string>Friends</string>
<string>Games</string>
<string>Scores</string>
<string>Achievements</string>
<string>Challenges</string>
<string>Multiplayer</string>
<string>TurnBasedMultiplayer</string>
<string>GameStats</string>
</array>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.ak.auth.xpc</string>
<string>com.apple.cdp.daemon</string>
<string>com.apple.mobile.keybagd.xpc</string>
</array>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.openurlinbackground</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
</dict>
</plist>
