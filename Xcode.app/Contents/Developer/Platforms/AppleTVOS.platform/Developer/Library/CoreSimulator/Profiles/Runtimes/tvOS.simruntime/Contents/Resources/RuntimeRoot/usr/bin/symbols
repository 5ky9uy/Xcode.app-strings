NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
NSt3__113basic_filebufIcNS_11char_traitsIcEEEE
@(#)PROGRAM:symbols  PROJECT:SamplingTools-63051.1
3333c
plist
strings
dfont
Failed to read signature %s: %s
v16@?0r*8
recursive_scan_path: lstat [%s] failed with errno %d (%s)
no symbolOwnerName
%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx
%s/symbols_%s.csv
%s/lines_%s.csv
%s/paths_%s.csv
__TEXT
__DATA
different slide detected
Not able to write the symbol file %s
Not able to write the line file %s
Not able to write the path file %s
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
uuid|%s|arch|%s|slide|%llu|symbols|%d|lines|%d|file|%s|symowner|%s|size|%llu|bundle_id|%s|bundle_version|%s|bundle_short_version_string|%s|source_version|%s
arch
slide
size
symbols_cnt
lines_cnt
file
symowner
symdump_ver
bundle_id
bundle_version
bundle_short_version_string
source_version
info_%s.plist
unknown
arm64
v24@?0{_CSTypeRef=QQ}8
Unhandled notification type %d
v44@?0I8{_CSNotificationData={_CSTypeRef=QQ}(?={Ping=I}{DyldLoad={_CSTypeRef=QQ}}{DyldUnload={_CSTypeRef=QQ}})}12
failed to create taskExitSemaphore 
You must specify at least one file, pid, or task.
com.apple.%s
CoreSymbolication
symbols version:
CoreSymbolication.framework version:
int main(int, const char **)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SamplingTools_Sim/SamplingTools-63051.1/symbols/symbols.mm
<Unknown File>
Cache not empty
/usr/lib/dyld
Null symbolicator
Cache should not be empty
Cache should be empty after flush
dyld_shared_cache
SIGNATURE
Unable to find file, pid, task or signature matching: %@
%@: (NULL)
...%s
ERROR: Did not find dSYM for %s
PROT, 
AOUT, 
DYLIB-STUB, 
DYLD, 
BUNDLE, 
OBJECT, 
KEXT-BUNDLE, 
dSYM_v1, 
dSYM_v2, 
dSYM_v3, 
dSYM_v???, 
DYLDSHAREDCACHE, 
ObjC-RR, 
ObjC-GC, 
SLID, 
PIE, 
RESTRICTED, 
STATIC-LIB, 
FaultedFromDisk, 
FaultedFromTask, 
FaultedFromSelfDyldSharedCache, 
FaultedFromDiskDyldSharedCache, 
Found-dSYM, 
Found-Binary-via-dSYM-colocation, 
Found-Binary-via-dSYM-plist, 
MMap32, 
MMap64, 
FUNC, 
DYLD-STUB, 
OBJC, 
OMIT-FP, 
EXT, 
PEXT, 
LENGTH, 
NameNList, 
NameDwarf, 
NameDwarfMIPSLinkage, 
MangledNameNList, 
MangledNameDwarf, 
MangledNameDwarfMIPSLinkage, 
Merged, 
DebugMap, 
FunctionStarts, 
char *doIndentAndAddress(int, CSRange, BOOL, char *)
Location out of range for 32 bit
Length out of range for 32 bit
0x%llx
0x%016llx (%8s)
0x%08llx (%8s)
%@ [%s, %f seconds]
...%s:
shared_cache: %s
symbols matching [%s]:
symbol at 0x%016llx:
symbol at 0x%08llx: 
  SymbolOwners: %zd (%u dSYMs found, %u MMap, %u Raw)
  Segments:      %zd
  Sections:      %zd
  Symbols:      %zd
  SourceInfos:  %zd
Unable to extract a signature from %@: %@
%@ does not contain enough data to be a valid signature
NSString *readSignatureFromPath(NSString *__strong)
Attempting to set begin twice
invalid string length
CFDataRef createSignatureFromString(const char *)
Sanity
 signature 
%02hhX
The path %s already exists.
Could not open %s for writing
error: No UUID for %s
error: Could not load symbol information for %s.  Symbols file will contain no data.
%@/%@.symbols
Failed to write %s: %s
Failed to read package %s: %s
self ENDSWITH '.symbols'
null-uuid                           
%-8s 
%s %s%s %s
    %s
    %s...
[0x%016llx 0x%016llx] 
%s %s%s%s %s %s
 %s %s
 %s:%d
-cpuType
-cpuType requires an argument
-cpuSubtype
-cpuSubtype requires an argument
-arch
-arch requires an argument
-help
-symdump
only one symdump version allowed
-symdumpV2
-noHeaders
-uuid
-noRegions
-noSections
-noSegments
-noSymbols
-noSources
-printSignature
-saveSignature
The signature save path has been set more than once
-saveSignature requires a path
-symbolsPackageDir
The symbols package directory has been set more than once
-symbolsPackageDir requires a path
-deepSignature
-fullSourcePath
-noDemangling
-lazy
-lookup
-lookup requires an argument
0X%llx
%lld
Unhandled argument %@ to -lookup
-noCacheInit
-printCache
-asyncCacheCleanup
-syncCacheCleanup
-cacheMemoryLimit
-cacheMemoryLimit requires an argument
-iterations
-iterations requires an argument
-waitUntilExit
-printNotifications
-noNotifications
-trackDyld
-hangOnDyldLoad
-hangOnDyldUnload
-printMergedSymbols
-printDsymPaths
-printSummary
-failIfMissingDsym
-noNListData
-noDwarfData
-noDebugMapData
-noDsymData
-noFuncStartsData
-onlyNListData
-onlyDwarfData
-onlyDebugMapData
-onlyDsymData
-onlyFuncStartsData
-noDiskFaults
-noTaskFaults
-noSelfDyldSharedCacheFaults
-noSelfDSCFaults
-noDiskDyldSharedCacheFaults
-noDiskDSCFaults
-safeMachVMReads
-noPathRewriting
-privateData
-alwaysAllowMMapLookup
-noTRawSOD
-noMMapSOD
-noDaemon
-noSourceInfoInSOD
-noTextInSOD
.signature
The signature contained in %@ is not valid
Unable to read signature from %@
kCSNotificationFini
kCSNotificationTimeout
kCSNotificationTaskExit
kCSNotificationDyldUnload
kCSNotificationDyldLoad
kCSNotificationInitialized
kCSNotificationPing
symbols  [-help]
         [-arch (all | any | $arch_name)]
         [-cpuType #] [-cpuSubtype #]
         [-saveSignature path]
         [-symbolsPackageDir path]
         [-lookup (0x1234 | "symname")...] symname may use wildcards
         [-cacheMemoryLimit #]
         [-iterations #]
         files... file-signatures... signatures... pids... tasks...
If no arch is specified, symbols defaults to the current architecture.
The search order is file, file-signature, signature, pid, task.
A file-signature is a file name ending in ".signature" and containing a
single ascii signature.
-help               print this message
-uuid               print uuids
-noHeaders          do not print the headers
-noRegions          do not print the regions
-noSymbols          do not print the symbols
-noSources          do not print source line info
-noDemangling       do not print symbol names readably
-lazy               allow symbolicators to be lazy
-printSignature     print each symbolicator's signature
-deepSignature      created signatures will be "deep"
-fullSourcePath     print source line info with full path
-w                  force output to wide format
-v                  print version info
-arch               set the preferred architecture symbolically
-cpuType            set the preferred architecture cpu type
-cpuSubtype         set the preferred architecture cpu subtype
-lookup             a list of addrs or symbols to lookup in each target
-printCache         print cache data at exit
-noCacheInit        do not hide cache initialization time
-asyncCacheCleanup  cache cleans on a separate thread
-syncCacheCleanup   cache cleans on deallocating thread
-cacheMemoryLimit   set the cache memory limit (in MB)
-iterations         iterate # times for each file, pid, or task
-trackDyld          track dyld load/unload activity in target
-hangOnDyldLoad     hang when receiving dyld load notice
-hangOnDyldUnload   hang when receiving dyld unload notice
-waitUntilExit      wait for target task exit notification
-noNotifications    do not print notifications for each target
-printNotifications print notifications for each target
-printDsymPaths     print each symbol owner's dsym path
-printMergedSymbols print info on each symbol before it is merged
-printSummary       print summary of each targets contents
-noNListData        do not use nlist data for symbols/source infos
-noDwarfData        do not use dwarf data for symbols/source infos
-noDebugMapData     do not use debug map data for symbols/source infos
-noDsymData         do not use dsym data for symbols/source infos
-noFuncStartsData   do not use LC_FUNCTION_STARTS data for symbols
-onlyNListData      only use nlist data for symbols/source infos
-onlyDwarfData      only use dwarf data for symbols/source infos
-onlyDebugMapData   only use debug map data for symbols/source infos
-onlyDsymData       only use dsym data for symbols/source infos
-onlyFuncStartsData only use LC_FUNCTION_STARTS data for symbols
-noDiskFaults       do not fault in symbol owners from disk
-noTaskFaults       do not fault in symbol owners from tasks
-noSelfDSCFaults    do not fault in from our dyld shared cache
-noDiskDSCFaults    do not fault from the on disk dyld shared cache
-safeMachVMReads    catch errors caused by missing backing pages
-noPathRewriting    do not update B&I dsym source info paths
-privateData        symbolicators do not share data in the SOD cache
-noTRawSOD          do not allow TRaw style SOD when faulting
-noMMapSOD          do not allow MMap style SOD when faulting
-noDaemon           do not read/write from the storage daemon
-noSourceInfoInSOD  do not include file name and line number data in SOD
-noTextInSOD        do not include instruction data in SOD
-failIfMissingDsym  exit with error code if any target does not have a dSYM
Cache should have been empty after final flush. Instead, it contains:
WARNING: You currently do not have task_for_pid() privileges.
%s[%d]: [fatal] unable to suspend target process: %s
%s[%d]: task_stop_peeking failed. (%s)
Command args:    %@
Target process:  %s [%u]
Parent process:  %s [%u]
Parent process:  unable to determine
DYLD_INSERT_LIBRARIES=/usr/lib/libLeaksAtExit.dylib
SAMPLING_TOOLS_TARGET_PID
%s[%d]: [fatal] error acquiring target task port from parent.
%s[%d]: %s cannot find any existing process %s a name like '%s'%s.
you have access to which has
with
; try running with `sudo`
%s[%d]: cannot examine itself.
%s[%d]: Unable to deallocate target task port: %d (%s)
/usr/lib/system/libsystem_kernel.dylib
task_generate_corpse
%s[%d]: [fatal] Fail to generate corpse from the task, exiting
DYLD_ROOT_PATH
SIMULATOR_UDID
DT_NO_RESPAWN
%s[%d]: [fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
DYLD_FRAMEWORK_PATH
DYLD_SHARED_REGION
avoid
x86_64
i386
posix_spawnattr_init
posix_spawnattr_setbinpref_np
%s[%d]: [fatal] 'mach_ports_register' failed: %s (%d)
__check_mach_ports_lookup
__check_parent_tool_v1
-atExit
%s[%d]: [fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
%s[%d]: [fatal]  child process status could not be determined; exit code unavailable.
v8@?0
v20@?0I8I12I16
v12@?0I8
i24@?0r^v8r^v16
%s[%d]: [fatal] unable to parse json header: %s
%s[%d]: [fatal] invalid IPS header
length
%s[%d]: [fatal] IPS length is invalid
bug_type
%s[%d]: [fatal] invalid IPS bug type
: terminated; resuming target task
: interrupted; resuming target task
%s[%d]: [fatal] 'pid_for_task' failed: %s (%d)
for unknown reasons
for unknown reasons, even though it appears to exist
because it no longer appears to be running
because the process does not exist
because you do not have appropriate privileges to examine it
%s[%d]: %s cannot examine process %d (%s) %s%s.
%s[%d]: %s cannot examine process %d (with name like '%s') %s.
%s[%d]: %s cannot examine process %d %s.
%s/usr/bin/%s
%s%s
stringWithFormat:
dataWithContentsOfFile:options:error:
UTF8String
localizedDescription
stringWithUTF8String:
numberWithUnsignedLongLong:
numberWithInt:
dictionaryWithObjects:forKeys:count:
writeToFile:atomically:
array
processInfo
arguments
count
bundleWithIdentifier:
objectForInfoDictionaryKey:
description
currentHandler
handleFailureInFunction:file:lineNumber:description:
objectAtIndex:
caseInsensitiveCompare:
hasSuffix:
rangeOfString:options:
substringToIndex:
length
substringFromIndex:
countByEnumeratingWithState:objects:count:
class
isKindOfClass:
unsignedLongLongValue
stringWithContentsOfFile:usedEncoding:error:
substringWithRange:
writeToFile:options:error:
defaultManager
contentsOfDirectoryAtPath:error:
predicateWithFormat:
filteredArrayUsingPredicate:
stringByAppendingPathComponent:
arrayWithCapacity:
intValue
characterAtIndex:
addObject:
string
arrayWithArray:
objectAtIndexedSubscript:
lastPathComponent
setObject:atIndexedSubscript:
componentsJoinedByString:
appendFormat:
appendString:
alloc
initWithTask:getBinariesList:
is64Bit
valueForEnvVar:
stringValue
bytes
subdataWithRange:
JSONObjectWithData:options:error:
objectForKey:
isEqualToString:
%s[%d]: [error] 'mach_port_allocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_insert_right' failed: %s (%d)
%s[%d]: [error] 'mach_port_mod_refs' failed: %s (%d)
%s[%d]: [error] 'mach_msg_send' failed: %s (%d)
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleIdentifier</key>
<string>com.apple.SamplingTools</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>SamplingTools</string>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>SecTaskAccess</key>
<array>
<string>allowed</string>
<string>debug</string>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>Apple Certification Authority.</string>
<key>com.apple.private.kernel.get-kext-info</key>
<true/>
<key>task_for_pid-allow</key>
<true/>
</dict>
</plist>
zPLR
zPLR
zPLR
