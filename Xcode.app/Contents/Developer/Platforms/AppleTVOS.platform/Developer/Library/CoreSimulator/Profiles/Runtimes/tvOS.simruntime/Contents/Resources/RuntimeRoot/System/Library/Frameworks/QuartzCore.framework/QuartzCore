UUUUUU
?UUUUUU
ffffff
@ffffff
@ffffff
MbP?
MbP?
?UUUUUU
?UUUUUU
?UUUUUU
Mb0?
@""""""
contentsCenter
?333333
MbP?
UUUUUU
@ffffff
Mb`?
?Z*+
;?t%6
5@t%6?6L
@+0du
@Y>)F
"@UUUUUU
UUUUUU
MbP?
?UUUUUU
o@es-8R
?^8U)zj
ffffff
ffffff
Mb0?{
Affffff
@ffffff
y?xwwwww
@333333
?ffffff
AZ*+@
@33s?
Q1~:7
333@+z4@
@Q1~
@xyzw
?ffffff
MbP?-C
]r2<
 9^;Q
vH7B
W4vC
9Y>)F$
ARGB
555Lyuv2svuy
800A800LABGR
AhGRAfGR
80AL
1555r46l
61C2h0C2
r01lk01Rr03wa04w8a3b
)c|@
='F=<
{V>3+
veTD6* 
udSD6* 
ucSD6* 
tcRC6*
sbRC5)
raQB4)
p`PA4(
~n^N@3'
{k[L>1&
vgXI;/%
qbTF9-#
xj\OB5+!
|pcVI=2(
|rf[OC8.$
xpf\RG=2)!
~{vqjc[RH?6-$
vuutsrpnkgb\VOG?7/' 
edccba`^[XTOIC=6/(!
TSSRRQPNLIFB=82-'!
DDDCCBA@>;952.)$ 
666654431/-+($!
****))('&%#!

uX='
|eL5"
ueR>+
mljgaXL>/!
LKJHC=5+!
00/-+'"
\YO;"
?nil
array
backdrop-group
backdrop-layer
backdrop-state
basic-animation
cf-object
compressed-image
context
distance-field-layer
dynamics-behavior
emitter-behavior
emitter-cell
emitter-layer
emitter-state
filter
force-field
function
gradient-layer
group-animation
handle
image
image-provider
image-queue
interpolator
keyframe-animation
key-value
layer
layer-host
match-move-animation
mesh-transform
asynchronous-state
path
pattern
pixel-buffer
plugin-layer
portal-layer
portal-state
presentation-modifier
proxy
proxy-layer
replicator-layer
shape-image
shape-layer
shmem
spring
spring-animation
string
subpixel-mask-layer
surface
timing
transition
transition-animation
vector
 $'*-0257:<>@BDFGIKMNPQSTVWYZ\]^`abdefgijklmopqrstuvwyz{|}~
~}|{zyxwutsrqponmljihgfedcba`_^\[ZYXWVUTSRQPONMLKJIHHGFEDCBA@?>==<;:9887654332100/.--,++*)(('&&%$$##"!!  

DDDD
lowp vec2 radialCoord(highp vec2 uv) {
  highp float t = dot(uv, uv) + 1e-6;
  return vec2(t * inversesqrt(t), .5);
lowp vec4 mixLin(lowp vec4 D, lowp vec4 S, lowp vec4 M) {
  D.rgb = D.rgb / max(D.a, .005);
  D.rgb = D.rgb*D.rgb;
  S.rgb = S.rgb / max(S.a, .005);
  S.rgb = S.rgb*S.rgb;
  lowp vec4 R = mix(D, S, M);
  R.rgb = sqrt(max(R.rgb, 0.))*R.a;
  return R;
lowp vec4 vibrantLightenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = 1. - dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorDodge(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  R.rgb += mix(S.aaa, D.rgb*S.a*S.a/max(S.a - S.rgb, .005),
               step(.005, S.a - S.rgb));
  R.a += D.a*S.a;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantDark(lowp vec4 s0, lowp vec4 d0) {
  return vibrantLightenSover(s0 * blend_color1,
                             vibrantColorDodge(s0 * blend_color0, d0));
lowp vec4 vibrantDarkReversed(lowp vec4 s0, lowp vec4 d0) {
  return vibrantColorDodge(s0 * blend_color0,
                           vibrantLightenSover(s0 * blend_color1, d0));
lowp vec4 vibrantDarkenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorBurn(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  lowp float dasa = D.a*S.a;
  R.rgb += step(.005, S.rgb)
           * (dasa - S.a*S.a*(D.a - D.rgb)/max(S.rgb, .005));
  R.a += dasa;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantLight(lowp vec4 s0, lowp vec4 d0) {
  return vibrantDarkenSover(s0 * blend_color1,
                            vibrantColorBurn(s0 * blend_color0, d0));
lowp vec4 vibrantLightReversed(lowp vec4 s0, lowp vec4 d0) {
  return vibrantColorBurn(s0 * blend_color0,
                          vibrantDarkenSover(s0 * blend_color1, d0));
lowp vec3 colorSort(lowp vec3 c) {
  lowp vec3 cs = (c.r > c.g) ? c : c.grb;
  cs = (cs.g > cs.b) ? cs : cs.rbg;
  cs = (cs.r > cs.g) ? cs : cs.grb;
  return cs;
lowp float lum(lowp vec3 c) {
  return dot(c, vec3(0.3, 0.59, 0.11));
lowp vec3 clipColor(lowp vec3 c) {
  lowp float l = lum(c);
  lowp vec3 cs = colorSort(c);
  c = cs.b < 0.0 ? l + (c - l) * (l / (l - cs.b)) : c;
  c = cs.r > 1.0 ? l + (c - l) * ((1.0 - l) / (cs.r - l)) : c;
  return c;
lowp vec3 setLum(lowp vec3 c, lowp float l) {
  lowp float d = l - lum(c);
  return clipColor(c + d);
lowp float sat(lowp vec3 c) {
  lowp vec3 cs = colorSort(c);
  return cs.r - cs.b;
lowp vec3 setSat(lowp vec3 c, lowp float s) {
  lowp vec3 cs = colorSort(c);
  lowp vec3 fmax = cs.r == c.r ? vec3(1.,0.,0.) :    cs.r == c.g ? vec3(0.,1.,0.) : vec3(0.,0.,1.);
  c = c - fmax * c;
  lowp vec3 fmid = cs.g == c.r ? vec3(1.,0.,0.) :    cs.g == c.g ? vec3(0.,1.,0.) : vec3(0.,0.,1.);
  c = cs.r > cs.b ? fmax * s + fmid * ((cs.g - cs.b) * s / (cs.r - cs.b)) :    vec3(0.0);
  return c;
lowp vec4 precompLin(lowp vec4 d, lowp vec4 b, lowp vec4 S, lowp vec4 M) {
  lowp vec4 D = d + b * (1. - d.a);
  R = mixLin(D, R, M);
  lowp float x = max(max(M.r, M.g), M.b);
  R = max(R - D * (1. - x), 0.);
  R = R + d * (1. - R.a);
  return R;
lowp vec4 colorMatrix4x4Bias(lowp vec4 s) {
  s.rgb = s.rgb / max(s.a, .005);
  s = s.r * color_matrix[0] + s.g * color_matrix[1]
    + s.b * color_matrix[2] + s.a * color_matrix[3]
    + color_matrix[4];
  s.rgb = s.rgb * s.a;
  return s;
lowp vec4 colorMatrix4x4BiasDivideAlpha(lowp vec4 s) {
  s = vec4(s.rgb / s.a, 1.0);
  s = s.r * color_matrix[0] + s.g * color_matrix[1]
    + s.b * color_matrix[2] + color_matrix[3]
    + color_matrix[4];
  return s;
lowp vec4 perlinBias(lowp vec4 s, lowp float a) {
  s.rgb = s.rgb / (a * (s.a - s.rgb) + s.a);
  return s;
lowp vec4 vibrantLightenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = 1. - dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorDodge(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  R.rgb += mix(S.aaa, D.rgb*S.a*S.a/max(S.a - S.rgb, .005),
               step(.005, S.a - S.rgb));
  R.a += D.a*S.a;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantDark(lowp vec4 s0, lowp vec4 d0) {
  if (reversed != 0.0)
    return vibrantColorDodge(s0 * color_dodge,
                               vibrantLightenSover(s0 * color_lighten, d0));
  else
    return vibrantLightenSover(s0 * color_lighten,
                               vibrantColorDodge(s0 * color_dodge, d0));
lowp vec4 vibrantDarkenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorBurn(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  lowp float dasa = D.a*S.a;
  R.rgb += step(.005, S.rgb)
           * (dasa - S.a*S.a*(D.a - D.rgb)/max(S.rgb, .005));
  R.a += dasa;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantLight(lowp vec4 s0, lowp vec4 d0) {
  if (reversed != 0.0)
    return vibrantColorBurn(s0 * color_burn,
                              vibrantDarkenSover(s0 * color_darken, d0));
  else
    return vibrantDarkenSover(s0 * color_darken,
                              vibrantColorBurn(s0 * color_burn, d0));
lowp vec4 soverLin(lowp vec4 S, lowp vec4 D, lowp vec4 M) {
  S = S + D*(1. - S.a);
  return mixLin(D, S, M);
lowp vec4 soverLinGray(lowp vec4 S, lowp vec4 D, lowp vec4 M) {
  S = S*M.a*M.a;
  return S + D*(1. - S.a);
lowp vec4 darkenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 lightenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = 1. - dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
    mediump float ll = dot(velocity, velocity);
    mediump float rl = inversesqrt(max(ll, 1e-4));
    lowp vec4 mv = vec4(velocity*rl*.5+.5, min(ll*rl*.004, 1.), 1.);
    gl_FragData[1] = mv * gl_FragData[0].a;
lowp vec4 squareImage(mediump vec2 uv) {
  mediump vec2 d, w, s;
  w = max(fwidth(uv), 1e-4);
  s = clamp((w * .5 + (1. - abs(uv))) / w, 0., 1.);
  mediump float l = s.x * s.y;
  return vec4(l);
lowp vec4 circleImage(mediump vec2 uv) {
  mediump vec2 dudv; mediump float d, w, s;
  d = max(dot(uv, uv), 1e-4);
  d = d * inversesqrt(d);
  dudv = max(fwidth(uv), 1e-4);
  w = max(dudv.x, dudv.y);
  mediump float l = clamp((w * .5 + (1. - d)) / w, 0., 1.);
  return vec4(l);
lowp vec4 supercircleImage(highp vec2 uv) {
  highp float d, w;
  uv = max(abs(uv) * 1.199 - vec2(0.199), 0.0);  d = pow(uv.x, 2.68) + pow(uv.y, 2.68);
  w = max(fwidth(d), 1e-4);
  mediump float l = clamp((w * .5 + (1. - d)) / w, 0., 1.);
  return vec4(l);
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump float e = (render_state.z - d)/fwidth(d);
  return vec4(clamp(e+.5, 0., 1.));
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump float e = (render_state.z - d)/render_state.y;
  e = clamp(e+.5, 0., 1.);
  return vec4((e * -2. + 3.) * e * e);
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump vec2 e = (render_state.zw - d)/fwidth(d);
  e = clamp(e+.5, 0., 1.);
  return vec4((1. - e.x) * e.y);
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump vec2 e = (render_state.zw - d)/render_state.y;
  e = clamp(e+.5, 0., 1.);
  e = (e * -2. + 3.) * e * e;
  return vec4((1. - e.x) * e.y);
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
void main () {
  lowp vec4 q0, q1, q2, q3;
  mediump vec4 acc;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  acc = q0 * weight.x;
  acc = q1 * weight.y + acc;
  acc = q2 * weight.z + acc;
  acc = q3 * weight.w + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec3 weight;
varying highp vec2 texcoord0, texcoord1, texcoord2;
varying highp vec2 texcoord3, texcoord4, texcoord5;
void main () {
  lowp vec4 q0, q1, q2, q3, q4, q5;
  mediump vec4 acc;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  acc = (q2 + q3) * weight.x;
  acc = (q1 + q4) * weight.y + acc;
  acc = (q0 + q5) * weight.z + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform highp vec4 texmat0;
uniform highp vec2 axis;
varying highp vec2 texcoord0;
void main () {
  highp vec2 d = texcoord0;
  highp vec2 c = mix(d, floor(d), axis);
  highp float x = dot(floor(d) - d, axis) + 1.0;
  highp float y = 1.0 - x;
  highp vec4 xy = vec4(x, y, x, y);
  highp vec4 w = vec4(-0.29216512, -0.41086841, -0.41086841, -0.29216512);
  w = w*xy + vec4(1.02524562, 0.78286595, 0.78286595, 1.02524562);
  w = w*xy + vec4(-0.52422910, 1.04059357, 1.04059357, -0.52422910);
  w = w*xy + vec4(-0.20885140, -2.41189213, -2.41189213, -0.20885140);
  w = w*xy*xy + vec4(0.0, 1.0, 1.0, 0.0);
  mediump vec4 weight = w;
  highp vec2 p = c * texmat0.xy + texmat0.zw;
  highp vec2 pdelta = axis * texmat0.xy;
  lowp vec4 q0, q1, q2, q3;
  mediump vec4 acc;
  q0 = texture2DRect(texture0, p - 0.5*pdelta);
  q1 = texture2DRect(texture0, p + 0.5*pdelta);
  q2 = texture2DRect(texture0, p + 1.5*pdelta);
  q3 = texture2DRect(texture0, p + 2.5*pdelta);
  acc = q0 * weight.x;
  acc = q1 * weight.y + acc;
  acc = q2 * weight.z + acc;
  acc = q3 * weight.w + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6;
void main() {
  lowp vec4 q0, q1, q2, q3, q4, q5, q6;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  mediump vec4 acc;
  acc = q3 * weight.x;
  acc = q2 * weight.y + acc;
  acc = q4 * weight.y + acc;
  acc = q1 * weight.z + acc;
  acc = q5 * weight.z + acc;
  acc = q0 * weight.w + acc;
  acc = q6 * weight.w + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12;
void main() {
  lowp vec4 q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  q12 = texture2DRect(texture0, texcoord12);
  mediump vec4 acc;
  acc = q6 * weight[0].x;
  acc = q5 * weight[0].y + acc;
  acc = q7 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q8 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q9 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q10 * weight[1].x + acc;
  acc = q1 * weight[1].y + acc;
  acc = q11 * weight[1].y + acc;
  acc = q0 * weight[1].z + acc;
  acc = q12 * weight[1].z + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q5, q6, q7, q8;
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q4, q5, q6, q7, q8, q9;
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q3, q4, q5, q6, q7, q8, q9, q10;
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q2, q3, q4, q5, q6, q7, q8, q9, q10, q11;
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q11 * weight[1].x + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12;
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  q12 = texture2DRect(texture0, texcoord12);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q11 * weight[1].x + acc;
  acc = q1 * weight[1].y + acc;
  acc = q12 * weight[1].y + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  q12 = texture2DRect(texture0, texcoord12);
  q13 = texture2DRect(texture0, texcoord13);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q11 * weight[1].x + acc;
  acc = q1 * weight[1].y + acc;
  acc = q12 * weight[1].y + acc;
  acc = q0 * weight[1].z + acc;
  acc = q13 * weight[1].z + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
const int samples = MOTION_BLUR_SAMPLES;
uniform highp vec4 texmat0;
uniform lowp sampler2DRect texture0;
uniform lowp sampler2DRect texture1;
varying highp vec2 texcoord0_0;
varying lowp vec4 color0;
void main() {
  lowp vec4 mv = texture2DRect(texture1, texcoord0_0);
  mv.xyz /= max(mv.w, .005);
  if (!(mv.z > 0.)) {
    gl_FragData[0] = texture2DRect(texture0, texcoord0_0);
    return;
  highp vec2 v = 250. * mv.z * (2. * mv.xy - 1.) * texmat0.xy;
  highp vec2 texcoord_lo = texcoord0_0 - v * .5;
  mediump vec4 acc = vec4(0.);
  for (int i = 0; i < samples; i++)
    acc = texture2DRect(texture0, texcoord_lo + v * (float(i)/float(samples))) + acc;
  gl_FragData[0] = acc / float(samples) * color0;
uniform lowp sampler2DRect texture0;
uniform highp vec2 minmax;
uniform lowp vec4 bgcolor;
varying highp vec2 texcoord0_0;
varying lowp vec4 color0;
void main() {
  lowp vec4 p = texture2DRect(texture0, texcoord0_0);
  p = texcoord0_0.x < minmax.x || texcoord0_0.x > minmax.y ? bgcolor : p;
  gl_FragData[0] = p * color0;
uniform lowp sampler2DRect texture0;
uniform lowp sampler2D texture1;
uniform highp vec2 minmax;
uniform lowp vec4 bgcolor;
uniform highp vec4 map;
varying highp vec2 texcoord0_0;
varying lowp vec4 color0;
void main() {
  highp float t = dot(texcoord0_0, texcoord0_0);
  t = t * inversesqrt(t + 1e-6) * map.x + map.y;
  lowp vec4 p = texture2DRect(texture0, vec2(min(t, map.w), map.z));
  lowp vec3 n = texture2D(texture1, gl_FragCoord.xy * (1.0/32.0)).rgb;
  p.rgb += (n - .5) * 2.0/255.0 * p.a;
  p = t < minmax.x || t > minmax.y ? bgcolor : p;
  gl_FragData[0] = p * color0;
uniform lowp sampler2DRect texture0;
uniform lowp sampler2D texture1;
uniform highp vec2 minmax;
uniform lowp vec4 bgcolor;
uniform highp vec4 map;
uniform highp vec2 dir;
uniform highp vec4 args;
varying highp vec2 texcoord0_0;
varying lowp vec4 color0;
void main() {
  highp float frag_l_sq = dot(texcoord0_0, texcoord0_0);
  highp float r = args.x;
  highp float r_sq = r * r;
  highp float r_sgn = args.y;
  highp float dir_l = args.z;
  highp float dir_l_sq = dir_l * dir_l;
  highp float t_denom = args.w;
  highp float par_l = dot(texcoord0_0, dir);
  highp float t;
  highp float in_b;
  if (map.w != 0.0) {
    t = (frag_l_sq - r_sq) / (2.0 * (r + par_l));
    in_b = step(minmax.x, t) - step(minmax.y, t);
    in_b *= step(-r_sgn * r, r_sgn * t);
  } else {
    highp float perp_l_sq = frag_l_sq - par_l * par_l;
    highp float d = frag_l_sq + dir_l_sq * (r_sq - perp_l_sq) +                    2.0 * par_l * dir_l * r;
    highp float d_m = step(0.0, d);
    highp float sqrt_d = sqrt(d * d_m);
    highp float b = par_l * dir_l + r;
    highp float t1 = (b - sqrt_d) * t_denom;
    highp float t2 = (b + sqrt_d) * t_denom;
    highp float t1_v = step(minmax.x, t1) - step(minmax.y, t1);
    highp float t2_v = step(minmax.x, t2) - step(minmax.y, t2);
    t1_v *= step(-r_sgn * r, r_sgn * t1);
    t2_v *= step(-r_sgn * r, r_sgn * t2);
    in_b = step(0.5, t1_v + t2_v) * d_m;
    t = mix(t1 * t1_v + t2 * t2_v, max(t1, t2), step(1.5, t1_v + t2_v));
  t = clamp(t, 0.0, 1.0) * map.x + map.y;
  lowp vec4 p = texture2DRect(texture0, vec2(t, map.z));
  lowp vec3 n = texture2D(texture1, gl_FragCoord.xy * (1.0/32.0)).rgb;
  p.rgb += (n - .5) * 2.0/255.0 * p.a;
  gl_FragData[0] = mix(bgcolor, p, in_b) * color0;
?uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
uniform highp vec2 offset[4];
void main () {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 + offset[0] * texmat0.xy;
  texcoord1 = t0 + offset[1] * texmat0.xy;
  texcoord2 = t0 + offset[2] * texmat0.xy;
  texcoord3 = t0 + offset[3] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2;
varying highp vec2 texcoord3, texcoord4, texcoord5;
uniform highp vec2 offset[3];
void main () {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[2] * texmat0.xy;
  texcoord1 = t0 - offset[1] * texmat0.xy;
  texcoord2 = t0 - offset[0] * texmat0.xy;
  texcoord3 = t0 + offset[0] * texmat0.xy;
  texcoord4 = t0 + offset[1] * texmat0.xy;
  texcoord5 = t0 + offset[2] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec2 axis;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0;
void main () {
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = vertex_texcoord0 - 0.5 * axis;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6;
uniform highp vec2 offset[3];
void main() {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[2] * texmat0.xy;
  texcoord1 = t0 - offset[1] * texmat0.xy;
  texcoord2 = t0 - offset[0] * texmat0.xy;
  texcoord3 = t0;
  texcoord4 = t0 + offset[0] * texmat0.xy;
  texcoord5 = t0 + offset[1] * texmat0.xy;
  texcoord6 = t0 + offset[2] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12;
uniform highp vec2 offset[6];
void main() {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[5] * texmat0.xy;
  texcoord1 = t0 - offset[4] * texmat0.xy;
  texcoord2 = t0 - offset[3] * texmat0.xy;
  texcoord3 = t0 - offset[2] * texmat0.xy;
  texcoord4 = t0 - offset[1] * texmat0.xy;
  texcoord5 = t0 - offset[0] * texmat0.xy;
  texcoord6 = t0;
  texcoord7 = t0 + offset[0] * texmat0.xy;
  texcoord8 = t0 + offset[1] * texmat0.xy;
  texcoord9 = t0 + offset[2] * texmat0.xy;
  texcoord10 = t0 + offset[3] * texmat0.xy;
  texcoord11 = t0 + offset[4] * texmat0.xy;
  texcoord12 = t0 + offset[5] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
uniform highp vec2 offset[7];
void main() {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[6] * texmat0.xy;
  texcoord1 = t0 - offset[5] * texmat0.xy;
  texcoord2 = t0 - offset[4] * texmat0.xy;
  texcoord3 = t0 - offset[3] * texmat0.xy;
  texcoord4 = t0 - offset[2] * texmat0.xy;
  texcoord5 = t0 - offset[1] * texmat0.xy;
  texcoord6 = t0 - offset[0] * texmat0.xy;
  texcoord7 = t0 + offset[0] * texmat0.xy;
  texcoord8 = t0 + offset[1] * texmat0.xy;
  texcoord9 = t0 + offset[2] * texmat0.xy;
  texcoord10 = t0 + offset[3] * texmat0.xy;
  texcoord11 = t0 + offset[4] * texmat0.xy;
  texcoord12 = t0 + offset[5] * texmat0.xy;
  texcoord13 = t0 + offset[6] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute highp float vertex_texcoord0;
attribute highp float vertex_point_size;
attribute lowp vec4 vertex_color;
varying lowp vec4 color0;
void main() {
  gl_Position = vertex_matrix * vertex_position;
  gl_PointSize = vertex_point_size;
  color0 = vertex_color;
SSSSSSSSSSSSSS
SSSSSSSSSSSSSS
actionForLayer:forKey:
displayLayer:
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
_layoutSublayersOfLayer:
animationDidStart:
animationDidStop:finished:
contents
opacity
zPosition
anchorPoint
anchorPointZ
motionBlurAmount
contentsScale
transform
sublayerTransform
contentsTransform
contentsRect
cornerContents
cornerContentsCenter
filters
backgroundFilters
compositingFilter
meshTransform
behaviors
magnificationFilter
minificationFilter
minificationFilterBias
name
backgroundColor
cornerRadius
borderWidth
borderColor
isDoubleSided
contentsMultiplyColor
contentsSwizzle
velocityStretch
mass
momentOfInertia
coefficientOfRestitution
shouldRasterize
preloadsCache
rasterizationPrefersDisplayCompositing
rasterizationScale
allowsEdgeAntialiasing
allowsGroupOpacity
allowsDisplayCompositing
allowsGroupBlending
wantsExtendedDynamicRangeContent
cornerContentsMasksEdges
allowsHitTesting
hitTestsAsOpaque
literalContentsCenter
contentsContainsSubtitles
continuousCorners
inheritsTiming
definesDisplayRegionOfInterest
shadowOpacity
shadowColor
shadowOffset
shadowRadius
shadowPath
invertsShadow
shadowPathIsBounds
aqua
?black
blue
?fuchsia
?gray
?green
lime
maroon
navy
?olive
purple
?red
silver
?teal
?white
?yellow
size
sprite
radius
resize
redRange
single
strokeStart
name
sizeRequisition
endProgress
circle
screen
surface
none
resizeAspect
strokeColor
simpleAttractor
renderMode
screenBlendMode
rasterizationScale
oldestFirst
onOrderIn
cube
cornerContents
commitTime
oldestLast
removedOnCompletion
onOrderOut
center
cornerContentsMasksEdges
cornerContentsCenter
coneAngle
contents
constraints
compositingFilter
continuousCorners
contentsCenter
contentsFrameMode
contentsRect
cubic
scale
strokeEnd
tableRows
redSpeed
contentsFrameCount
discrete
start
statisticsType
contentsScale
discretizesTime
dest
contentsContainsSubtitles
contentsFormat
rectangle
sharpness
scrollMode
opaque
rectangles
direction
nearest
startAngle
startProgress
directionLatitude
directionLongitude
line
darkenSourceOver
darkenBlendMode
sphere
destIn
resizeAspectFill
borderColor
reactsToCollisions
startPoint
subtractD
endPoint
linear
birthRate
scaleRange
exclusionBlendMode
normalBlendMode
completionBlock
cumulative
lanczos
ambient
spin
lanczosResize
linearBurnBlendMode
stiffness
lineJoin
emitterPosition
tensionValues
cornerRadius
coneEdgeSoftness
emitterDuration
instanceRedOffset
style
contentsFramesPerSecond
enabled
trilinear
bias
emitterRects
instanceGreenOffset
middle
instanceColor
emitterZPosition
instanceCount
mass
origin
spot
backdropRect
fade
force
contentsDither
orientationRange
statisticsInterval
orientationLatitude
orientationLongitude
image
margin
radial
colors
color
luminance
subtype
anchorPoint
disableActions
additive
cullRect
timeStep
targetsSuperlayer
duration
backToFront
colorDodgeBlendMode
cuboid
emitterMode
font
sequential
clear
subtractBlendMode
spinRange
emitterShape
colorOverDistance
tableColumns
translation
colorOverLife
cubicPaced
transitionFlags
colorContrast
disablesOccludedBackdropBlurs
emitterCells
trackingMode
timeOffset
animations
tableColumn
transition
contentsOpaque
colorHueRotate
cheapColorDodge
anchorPointZ
clearsContext
contentsTransform
animationDelegate
mask
spinBias
colorInvert
animatesFromModelValues
plane
cheapAdditive
instanceBlueOffset
instanceAlphaOffset
backgroundFilters
backgroundColorPhase
animationDuration
backgroundColor
biasValues
drawableProperties
seed
speed
planar
massRange
shouldRasterize
imageRotation
destAtop
emissionLongitude
tracksLuma
maskedCorners
endAngle
foregroundColor
colorBurnBlendMode
springs
type
locations
tileSize
emitterSize
colorAdd
aligned
imageNormalAngle
alignToMotion
allowsFontSubpixelQuantization
momentOfInertia
distanceField
overlayBlendMode
points
down
alignedCube
contentsSwizzle
animationTimingFunction
wantsExtendedDynamicRangeContent
shapeTransform
point
position
axial
lineDashPattern
behaviors
contentsFramesPerRow
needsDisplayOnBoundsChange
calculationMode
tableRow
bleedAmount
instanceTransform
fontSize
imageBlendMode
offset
repeatCount
paced
colorMonochrome
sourceLayer
sourceOut
sourceIn
sourceOver
cullMaxZ
collisionInterval
delegate
function
divideBlendMode
sourcePoints
shadowOffset
emissionRange
rasterizationPrefersDisplayCompositing
emissionLatitude
disableUpdateMask
timingFunctions
contextId
luminanceToAlpha
levelsOfDetailBias
wrappedDirection
drawingEnabled
flattened
roundsToInteger
sublayers
shadowColor
timingFunction
zPosition
justification
forceFields
cullMinZ
random
filters
sortsSublayers
zAcceleration
proxyProperties
filter
layoutManager
fromLeft
coefficientOfRestitution
appliesY
toValue
appliesX
earliestAutomaticCommitTime
fillMode
lineCap
gradient
differenceBlendMode
contentsScaling
spacing
vibrantDarkSourceOver
fillColor
subtractS
frozen
springScale
left
damping
outline
continuityValues
options
definesDisplayRegionOfInterest
superlayer
contentsGravity
wrapped
keyTimes
appliesRotation
bounds
compressLuminance
repeatDuration
sourceLayerRenderId
array
justified
frameInterval
inputDither
destOver
right
sourceContextId
alphaRange
linearDodgeBlendMode
xAcceleration
inputEndAngle
inputAngle
inputColor1
inputColor
hidden
inputHardEdges
inputPoint1
minificationFilterBias
moveIn
minificationFilter
opacity
reveal
contentsMultiplyColor
truncationMode
levelsOfDetail
vibrantDark
inputPosition
inputBias
inputColor0
drag
vertical
shadowRadius
byValue
inputPoint0
inputAmount
inputTime
fromValue
transform
softLightBlendMode
inputAddColor
autoreverses
wrappedOrigin
destOut
invertsShape
updateInterval
actions
vibrantDarkSourceOverReversed
groupName
inputBackColor1
appliesScale
instanceDelay
colorMap
ambientIntensity
colorSaturate
cachesInputImage
luminanceMap
wave
inputAspectRatio
doubleSided
inputBackColor0
attractor
canDrawConcurrently
colorSubtract
value
volume
fromRight
flip
values
topLeft
blueRange
alignmentMode
rotation
plusD
lifetime
cheapScreen
plusL
presentationModifiers
inputNormalizeEdges
rotationMode
lightenBlendMode
light
borderWidth
pluginType
inputFrontColor
inputLinear
flipsHorizontalAxis
scaleSpeed
alignedFlip
valueOverDistance
greenRange
valueOverLife
inputBounds
yAcceleration
particleType
attractorType
inputReversed
inputBackEnabled
sublayerTransform
linearLightBlendMode
beginTime
meteor
multiplyColor
emitterBehaviors
preloadsCache
drawsAsynchronously
preferredFramesPerSecond
meshTransform
emitterPath
matchesPosition
falloffDistance
fromTop
height
allowsEdgeAntialiasing
layoutFlags
miterLimit
motionBlurAmount
hardLightBlendMode
string
rotationRange
literalContentsCenter
push
pinLightBlendMode
inputFrontEnabled
pluginId
needsLayoutOnGeometryChange
topRight
lifetimeRange
edgeAntialiasingMask
masksToBounds
inputColorMap
stoppedVelocity
marginWidth
allowsHitTesting
valueFunction
unordered
lineDashPhase
multiplyBlendMode
horizontal
copy
colorMatrix
bottomLeft
lineWidth
appliesAlpha
width
beginTimeMode
autoresizingMask
inputColorMatrix
keyPath
colorBrightness
geometryFlipped
allowsInPlaceFiltering
blueSpeed
cheapMaximum
vibrantLight
vibrantLightSourceOver
inputSize
inputScale
sourceAtop
inheritsSecurity
shadowOpacity
inputStartAngle
rendersAsynchronously
homeAffordanceBase
inputShadowBounds
velocityRange
inputShadowColor
frequency
invertsShadow
diffuseIntensity
hidesSourceLayer
emitterDepth
fillRule
minimum
fromBottom
truncationString
allowsDisplayCompositing
falloff
shadowPathIsBounds
captureOnly
identity
vibrantLightSourceOverReversed
usesGlobalGroupNamespace
inheritsTiming
floating
hitTestsAsOpaque
bottom
preservesDepth
magnificationFilter
fontSmoothingStyle
matchesTransform
stoppedAngularVelocity
pluginFlags
intensity
alphaSpeed
inputRadius
restLength
gaussianBlur
windowServerAware
inputAddWhite
multiply
both
inputQuality
inputOverlayOpacity
inputDensity
horizontally
inputIntermediateBitDepth
lightenSourceOver
attachmentPointA
minimumTimeStep
greenSpeed
attachmentPointB
allowsGroupBlending
velocity
path
matchesOpacity
allowsGroupOpacity
maximumTileScale
angularDrag
lowLatency
vertically
maximum
velocityStretch
bottomRight
pageCurl
shadowPath
pluginGravity
@(#)PROGRAM:QuartzCore  PROJECT:QuartzCore-584.39
setValue:forKey:
CAMLParser:setValue:forKey:
UTF8String
CAMLTypeForKey:
CAMLParserEndElement:
release
CAMLParserEndElement:content:
initWithBytes:length:encoding:
alloc
CAMLParserStartElement:
valueWithPoint:
valueWithSize:
valueWithRect:
setTransformStruct:
init
valueWithCATransform3D:
valueWithCAPoint3D:
valueWithCAColorMatrix:
instancesRespondToSelector:
class
respondsToSelector:
defaultValueForKey:
CA_automaticallyNotifiesObservers:
didChangeValueForKey:
reloadValueForKeyPath:
implicitAnimationForKeyPath:
_copyRenderLayer:layerFlags:commitFlags:
_colorSpaceDidChange
_renderLayerDefinesProperty:
_renderLayerPropertyAnimationFlags:
emitterCells
setEmitterCells:
birthRate
setBirthRate:
lifetime
setLifetime:
emitterShape
setEmitterShape:
emitterMode
setEmitterMode:
emitterPosition
setEmitterPosition:
emitterZPosition
setEmitterZPosition:
emitterSize
setEmitterSize:
emitterDepth
setEmitterDepth:
velocity
scale
spin
setSpin:
renderMode
setRenderMode:
preservesDepth
setPreservesDepth:
seed
setSeed:
updateInterval
rectValue
countByEnumeratingWithState:objects:count:
count
emitterRects
emitterPath
emitterBehaviors
cullMaxZ
cullMinZ
cullRect
spinBias
emitterDuration
substringToIndex:
rangeOfString:
isEqualToString:
numberWithDouble:
numberWithInt:
setEmitterPath:
setEmitterRects:
setEmitterBehaviors:
setEmitterDuration:
setUpdateInterval:
setSpinBias:
setCullRect:
setCullMinZ:
setCullMaxZ:
valueWithBytes:objCType:
getValue:
_controller
_layer
_transition
_beginTime
_duration
_speed
_masterKey
_animations
debugDescription
self
performSelector:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
retain
retainCount
zone
hash
removeAnimationFromLayer:forKey:
invalidate
dealloc
layer
transition
stateController:transitionDidStop:completed:
delegate
_removeTransition:layer:
removeAnimationForKey:
CAStateControllerTransition
animationForKey:
addObject:
autorelease
_impl
_allowsVirtualModes
_initWithDisplay:
_invalidate
update
name
deviceName
displayId
connectionSeed
uniqueId
availableModes
currentMode
setCurrentMode:
preferredMode
colorMode
setColorMode:
frame
safeBounds
processId
isSupported
isExternal
refreshRate
heartbeatRate
minimumFrameDuration
isOverscanned
overscanAmount
overscanAmounts
overscanAdjustment
setOverscanAdjustment:
isCloned
isCloningSupported
nativeOrientation
supportsExtendedColors
externalDisplayAttributes
allowsVirtualModes
setAllowsVirtualModes:
_initWithAttributes:
_edid_attributes
dolbyVision
pqEOTF
hdrStaticMetadataType1
bt2020YCC
.cxx_construct
willChangeValueForKey:
stringWithFormat:
_setWidth:height:
_displayModeWithMode:display:
_mode
_dpy
_width
_height
_initWithMode:display:
_display
width
height
pixelAspectRatio
isVirtual
hdrMode
colorGamut
internalRepresentation
preferredScale
isKindOfClass:
raise:format:
array
mainDisplay
TVOutDisplay
automaticallyNotifiesObserversForKey:
copy
_initWithDisplayLinkItem:
addToRunLoop:forMode:
removeFromRunLoop:forMode:
timestamp
setPaused:
isPaused
targetTimestamp
setPreferredFramesPerSecond:
preferredFramesPerSecond
actualFramesPerSecond
getCFRunLoop
displayLinkWithTarget:selector:
displayLinkWithDisplay:target:selector:
setUserInfo:
maximumRefreshRate
boolValue
shortValue
unsignedShortValue
intValue
unsignedIntValue
longValue
unsignedLongValue
longLongValue
unsignedLongLongValue
floatValue
doubleValue
transformStruct
copyWithZone:
charValue
unsignedCharValue
supportsSecureCoding
initWithObject:
decodedObject
_array
objectAtIndex:
initWithCapacity:
decodeObjectOfClasses:forKey:
CA_supportedClasses
encodeObject:forKey:
_dict
setObject:forKey:
objectForKey:
nextObject
keyEnumerator
_path
addToCGPath:
initWithCGPathElement:
_type
_points
decodeDoubleForKey:
decodeIntForKey:
encodeDouble:forKey:
encodeInt:forKey:
_pattern
CA_decodeObjectForKey:
CA_decodeCGFloatArray:count:forKey:
decodeObjectOfClass:forKey:
CA_encodeObject:forKey:conditional:
CA_encodeCGFloatArray:count:forKey:
_image
unarchiver:didReadData:forImage:
initWithObjectsAndKeys:
archiver:formatForImage:
archiver:dataForImage:
_color
decodeFloatForKey:
encodeFloat:forKey:
_kind
containsValueForKey:
CAColorMatrixValue
CAPoint3DValue
CATransform3DValue
sizeValue
pointValue
objCType
conformsToProtocol:
_initWithReference:
superclass
bundleForClass:
archiver:willEncodeObject:
archiver:didEncodeObject:
archiver:willReplaceObject:withObject:
archiverWillFinish:
archiverDidFinish:
isSubclassOfClass:
_resource_dir
_serial
_image_format
_image_encode_options
initWithResourceDir:
image_format
setImage_format:
image_encode_options
setImage_encode_options:
URLWithString:
description
URLWithString:relativeToURL:
fileURLWithPath:
setObject:forKeyedSubscript:
objectAtIndexedSubscript:
objectForKeyedSubscript:
setWithObjects:
encodeConditionalObject:forKey:
unarchiver:didDecodeObject:
initWithString:
scanDouble:
defaultManager
removeItemAtPath:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToFile:atomically:
dictionaryWithCapacity:
dataWithPropertyList:format:options:error:
initRequiringSecureCoding:
lock
setDelegate:
contentsAreFlipped
numberWithBool:
dictionaryWithObjects:forKeys:count:
encodedData
unlock
initWithUTF8String:
writerWithData:
encodeObject:
_next
_state
_elements
_transitions
next
state
transitions
setTransitions:
parseBytes:length:
parseString:
parseData:
parseContentsOfURL:
error
result
didFailToLoadResourceFromURL:
initWithFormat:arguments:
stringWithUTF8String:
errorWithDomain:code:userInfo:
initWithContentsOfURL:options:error:
length
bytes
_name
_flags
_attr
_cache
initWithType:
type
setName:
isEnabled
enabled
setEnabled:
cachesInputImage
setCachesInputImage:
isAccessibility
setAccessibility:
setDefaults
CA_copyRenderValue
endElement
beginPropertyElement:
setElementAttribute:forKey:
decodeBoolForKey:
encodeBool:forKey:
allocWithZone:
isEqual:
filterTypes
filterWithType:
filterWithName:
parserError:
setElementValue:
attributeForKey:remove:
_basedOn
_nextDelay
_previousDelay
_enabled
_locked
_initial
removeElement:
foreachLayer:
setBasedOn:
setNextDelay:
setPreviousDelay:
isLocked
setLocked:
setInitial:
mutableCopy
removeObjectIdenticalTo:
_normalization
_subdivisionSteps
_init
initWithVertexCount:vertices:faceCount:faces:depthNormalization:
_initWithMeshTransform:
vertexCount
vertexAtIndex:
faceCount
faceAtIndex:
depthNormalization
subdivisionSteps
_constructWithData:
_data
_subdivideToDepth:
_interp
bounds
setElementContent:
initWithData:encoding:
initWithFormat:
URLStringForResource:
dataUsingEncoding:
setDepthNormalization:
setSubdivisionSteps:
replaceVertexAtIndex:withVertex:
addVertex:
removeVertexAtIndex:
replaceFaceAtIndex:withFace:
addFace:
removeFaceAtIndex:
meshTransformWithVertexCount:vertices:faceCount:faces:depthNormalization:
elementValue
didLoadResource:fromURL:
initWithContentsOfURL:
willLoadResourceFromURL:
initWithString:relativeToURL:
baseURL
_string
_initWithName:
apply:result:
functionWithName:
appendString:
_priv
initWithControlPoints::::
_getPoints:
getControlPointAtIndex:values:
initWithCoder:
_index
classForCoder
functionWithControlPoints::::
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
characterAtIndex:
parserWarning:
_key
matches:
encodeWithCAMLWriter:
encodeWithCoder:
setKey:
setTarget:
addElement:
setSource:
setAnimation:
target
getObjects:andKeys:count:
fadeDuration
shouldArchiveValueForKey:
setNeedsDisplayInRect:
setContents:
invalidateContents
_dealloc
_canDisplayConcurrently
levelsOfDetail
setLevelsOfDetail:
levelsOfDetailBias
setLevelsOfDetailBias:
tileSize
setTileSize:
contents
maximumTileScale
fillColor
prefetchedTiles
canDrawConcurrently
isOpaque
contentsScale
drawInContext:
canDrawRect:levelOfDetail:
valueForKey:
isDrawingEnabled
setContentsChanged
setNeedsDisplay
shouldDrawOnMainThread
initWithInt:
setNeedsDisplayInRect:levelOfDetail:options:
tiledLayer:canDrawRect:levelOfDetail:
begin
numberWithUnsignedInt:
commit
setNeedsDisplayInRect:levelOfDetail:
displayInRect:levelOfDetail:options:
setFillColor:
setMaximumTileScale:
setDrawingEnabled:
_createStringDict
_retainTypesetter
_createTruncationToken
isTruncated
_applyLinesToFunction:info:
_applyLinesToFunction:info:truncated:
_drawLine:inContext:atPoint:
string
setString:
fontSize
setFontSize:
font
setFont:
foregroundColor
setForegroundColor:
isWrapped
setWrapped:
truncationMode
setTruncationMode:
alignmentMode
setAlignmentMode:
allowsFontSubpixelQuantization
setAllowsFontSubpixelQuantization:
restoreGraphicsState
size
setCurrentContext:
graphicsContextWithGraphicsPort:flipped:
saveGraphicsState
userInterfaceLayoutDirection
sharedApplication
truncationString
setNeedsLayout
superlayer
setSizeRequisition:
initWithCharacters:length:
initWithFloat:
wrapped
setTruncationString:
insertState:atIndex:
states
insertObject:atIndex:
setStates:
indexOfObjectIdenticalTo:
removeObjectAtIndex:
stateTransitions
fromState
toState
addState:
removeState:
stateWithName:
dependentStatesOfState:
stateTransitionFrom:to:
basedOn
scrollToPoint:
scrollToRect:
_scrollPoint:fromLayer:
_scrollRect:fromLayer:
_visibleRectOfLayer:
scrollMode
setScrollMode:
convertRect:toLayer:
convertRect:fromLayer:
convertPoint:fromLayer:
setBounds:
scrollPoint:
scrollRectToVisible:
visibleRect
_fromState
_toState
setFromState:
setToState:
setElements:
beginTime
animation
duration
repeatDuration
autoreverses
repeatCount
timeOffset
fillMode
speed
setTimeOffset:
setRepeatCount:
setRepeatDuration:
setAutoreverses:
style
setStyle:
lifetimeRange
setLifetimeRange:
emissionLatitude
setEmissionLatitude:
emissionLongitude
setEmissionLongitude:
emissionRange
setEmissionRange:
velocityRange
setVelocityRange:
xAcceleration
setXAcceleration:
yAcceleration
setYAcceleration:
zAcceleration
setZAcceleration:
scaleRange
setScaleRange:
scaleSpeed
setScaleSpeed:
orientationLatitude
setOrientationLatitude:
orientationLongitude
setOrientationLongitude:
orientationRange
setOrientationRange:
rotation
setRotation:
rotationRange
setRotationRange:
spinRange
setSpinRange:
color
setColor:
redRange
setRedRange:
redSpeed
setRedSpeed:
greenRange
setGreenRange:
greenSpeed
setGreenSpeed:
blueRange
setBlueRange:
blueSpeed
setBlueSpeed:
alphaRange
setAlphaRange:
alphaSpeed
setAlphaSpeed:
contentsRect
setContentsRect:
setContentsScale:
magnificationFilter
setMagnificationFilter:
minificationFilter
setMinificationFilter:
minificationFilterBias
setMinificationFilterBias:
appendFormat:
contentsFrameMode
contentsFramesPerSecond
contentsFramesPerRow
contentsFrameCount
massRange
mass
particleType
emitterCell
properties
setParticleType:
setMass:
setMassRange:
setContentsFrameMode:
setContentsFrameCount:
setContentsFramesPerRow:
setContentsFramesPerSecond:
lightWithType:
setSpecularIntensity:
specularIntensity
_refcount
_uid
retainWeakReference
allowsWeakReference
_setCARenderBehavior:
behaviorDidStop:
behavior
resolveInstanceMethod:
springs
setSprings:
forceFields
setForceFields:
timeStep
setTimeStep:
minimumTimeStep
setMinimumTimeStep:
stoppedVelocity
setStoppedVelocity:
stoppedAngularVelocity
setStoppedAngularVelocity:
collisionInterval
setCollisionInterval:
springScale
setSpringScale:
drag
setDrag:
angularDrag
setAngularDrag:
reactsToCollisions
setReactsToCollisions:
springDidStop:
_animation
addAnimation:forKey:
drawableProperties
setDrawableProperties:
_win
nativeWindow
_didCommitLayer:
presentsWithTransaction
setPresentsWithTransaction:
flush
lowLatency
setInputTime:
setLowLatency:
maximumDrawableCount
isMainThread
inputTime
setPresentationHandler:
isDrawableAvailableInternal
isDrawableAvailable
discardContents
setAsynchronous:
isAsynchronous
setMaximumDrawableCount:
CAMLParser:didFailToLoadResourceFromURL:
CAMLParser:didLoadResource:fromURL:
CAMLParser:resourceForURL:
CAMLParser:evaluateScriptElement:sourceURL:lineNumber:
absoluteString
initWithContentsOfURL:encoding:error:
CAMLParser:didFailToFindClassWithName:
CAMLParser:formatErrorString:arguments:lineNumber:
CAMLParser:formatWarningString:arguments:lineNumber:
CAMLParser:evaluateScriptValue:sourceURL:lineNumber:
_currentState
_undoStack
_nextTimer
_nextState
_nextSpeed
undoStack
_keyPath
_object
_beforeObject
keyPath
setKeyPath:
object
setObject:
beforeObject
setBeforeObject:
objectById:
setValue:forKeyPath:
willAddLayer:
valueForKeyPath:
_target
setBeginTime:
setDuration:
setContentsFormat:
drawInLinearMaskContext:
drawLayer:inLinearMaskContext:
_hasRenderLayerSubclass
defaultActionForKey:
initWithLayer:
setPosition:
zPosition
setZPosition:
transform
setTransform:
affineTransform
setAffineTransform:
setFrame:
isGeometryFlipped
setGeometryFlipped:
convertPoint:toLayer:
convertTime:toLayer:
hitTest:
containsPoint:
edgeAntialiasingMask
setEdgeAntialiasingMask:
disableUpdateMask
setDisableUpdateMask:
contentsFormat
contentsGravity
setContentsGravity:
contentsScaling
setContentsScaling:
sublayers
setSublayers:
mask
setMask:
removeFromSuperlayer
insertSublayer:atIndex:
addSublayer:
insertSublayer:below:
insertSublayer:above:
replaceSublayer:with:
actionForKey:
removeAllAnimations
animationKeys
_scheduleAnimationTimer
_cancelAnimationTimer
presentationLayer
modelLayer
needsDisplay
displayIfNeeded
renderInContext:
_renderBackgroundInContext:
_renderForegroundInContext:
_renderSublayersInContext:
_renderBorderInContext:
display
_retainColorSpace
_contentsFormatDidChange:
needsLayout
_preferredSize
preferredFrameSize
layoutIfNeeded
layoutSublayers
maskedCorners
setMaskedCorners:
setFillMode:
anchorPoint
setAnchorPoint:
anchorPointZ
setAnchorPointZ:
cornerContents
setCornerContents:
isHidden
setHidden:
isDoubleSided
setDoubleSided:
setOpaque:
needsDisplayOnBoundsChange
setNeedsDisplayOnBoundsChange:
sublayerTransform
setSublayerTransform:
contentsCenter
setContentsCenter:
cornerContentsCenter
setCornerContentsCenter:
continuousCorners
setContinuousCorners:
cornerContentsMasksEdges
setCornerContentsMasksEdges:
contentsContainsSubtitles
setContentsContainsSubtitles:
opacity
setOpacity:
backgroundColor
setBackgroundColor:
masksToBounds
setMasksToBounds:
filters
setFilters:
backgroundFilters
setBackgroundFilters:
compositingFilter
setCompositingFilter:
actions
setActions:
borderColor
setBorderColor:
borderWidth
setBorderWidth:
cornerRadius
setCornerRadius:
contentsMultiplyColor
setContentsMultiplyColor:
contentsSwizzle
setContentsSwizzle:
shadowOpacity
setShadowOpacity:
shadowColor
setShadowColor:
shadowOffset
setShadowOffset:
shadowRadius
setShadowRadius:
setShadowPath:
shadowPath
shouldRasterize
setShouldRasterize:
rasterizationPrefersDisplayCompositing
setRasterizationPrefersDisplayCompositing:
rasterizationScale
setRasterizationScale:
drawsAsynchronously
setDrawsAsynchronously:
allowsEdgeAntialiasing
setAllowsEdgeAntialiasing:
allowsGroupOpacity
setAllowsGroupOpacity:
runActionForKey:object:arguments:
needsLayoutOnGeometryChange
performSelector:withObject:
layoutSublayersOfLayer:
_layoutSublayersOfLayer:
ancestorSharedWithLayer:
applyForTime:presentationObject:modelObject:
setBeginTimeMode:
beginTimeMode
CA_addValue:multipliedBy:
additive
value
sizeRequisition
drawLayer:inContext:
integerValue
drawsMipmapLevels
clearsContext
acceleratesDrawing
_prepareContext:
layerWillDraw:
displayLayer:
literalContentsCenter
contentsTransform
arrayWithObjects:count:
_propertyFlagsForLayer:
isRemovedOnCompletion
setTimingFunction:
animationDidStop:finished:
animationDidStart:
setDefaultDuration:
_implicitAnimationForLayer:keyPath:
actionForLayer:forKey:
layerDidBecomeVisible:
_defersDidBecomeVisiblePostCommit
initWithLayers:count:retain:
sortsSublayers
allowsHitTesting
ignoresHitTesting
substringFromIndex:
instanceMethodForSelector:
infoDictionary
mainBundle
initWithUnsignedInt:
initWithDouble:
setMomentOfInertia:
setCoefficientOfRestitution:
getRendererInfo:size:
beginElement:
_renderImageCopyFlags
CA_prepareRenderValue
removeObject:
_copyRenderAnimationForLayer:
performSelectorOnMainThread:withObject:waitUntilDone:
setFromValue:
meshTransformForLayer:
isDescendantOf:
motionBlurAmount
meshTransform
behaviors
backgroundColorPhase
velocityStretch
momentOfInertia
coefficientOfRestitution
preloadsCache
allowsDisplayCompositing
wantsExtendedDynamicRangeContent
allowsGroupBlending
hitTestsAsOpaque
inheritsTiming
definesDisplayRegionOfInterest
invertsShadow
shadowPathIsBounds
hasBeenCommitted
clearHasBeenCommitted
setMeshTransform:
regionBeingDrawn
layoutIsActive
layoutBelowIfNeeded
layerBeingDrawn
layerAtTime:
addPresentationModifier:
removePresentationModifier:
presentationModifiers
setPresentationModifiers:
hidden
opaque
doubleSided
isFlipped
setFlipped:
allowsContentsRectCornerMasking
setAllowsContentsRectCornerMasking:
setAllowsHitTesting:
setHitTestsAsOpaque:
setLiteralContentsCenter:
setCanDrawConcurrently:
setClearsContext:
isFrozen
setFrozen:
setNeedsLayoutOnGeometryChange:
setSortsSublayers:
flipsHorizontalAxis
setFlipsHorizontalAxis:
setInvertsShadow:
setShadowPathIsBounds:
setContentsTransform:
contentsDither
setContentsDither:
contentsOpaque
setContentsOpaque:
setInheritsTiming:
setMotionBlurAmount:
setPreloadsCache:
setAllowsDisplayCompositing:
setWantsExtendedDynamicRangeContent:
setAllowsGroupBlending:
setBackgroundColorPhase:
setAcceleratesDrawing:
setDefinesDisplayRegionOfInterest:
lights
setLights:
setBehaviors:
setVelocityStretch:
_value
initWithArray:
_ivars
getObjects:
initWithObjects:count:
_mirroringEnabled
addDisplay:
removeDisplay:
removeAllDisplays
displayWithName:
displayWithDisplayId:
displayWithUniqueId:
_detectDisplays
_initializeBrightnessNotifications
displays
setRendererFlags:
rendererFlags
setSecure:
isSecure
secureModeViolations
insecureProcessIds
clientPortOfContextId:
taskPortOfContextId:
taskNamePortOfContextId:
contextIdHostingContextId:
isMirroringEnabled
setMirroringEnabled:
containsObject:
_initWithCADisplayServer:
setScale:
contextIdAtPosition:
contextIdAtPosition:excludingContextIds:
clientPortAtPosition:
convertPoint:toContextId:
convertPoint:fromContextId:
clones
addClone:options:
addClone:
removeClone:
removeAllClones
cloneMaster
setBlanked:
isBlanked
willUnblank
setOrientation:
orientation
setOverscanAmount:
setOverscanAmounts:
setInvertsColors:
invertsColors
setAllowsExtendedDynamicRange:
allowsExtendedDynamicRange
setGrayscale:
isGrayscale
setColorMatrix:scale:rampDuration:
setNits:
setAccessibilityColorMatrix:scale:
setContrast:
contrast
setMaximumBrightness:
maximumBrightness
setMinimumRefreshRate:
minimumRefreshRate
setMaximumRefreshRate:
setIdealRefreshRate:
idealRefreshRate
setUsesPreferredModeRefreshRate:
usesPreferredModeRefreshRate
setTag:
setProcessId:
setTVMode:
TVMode
setTVSignalType:
TVSignalType
freeze
setDisablesUpdates:
disablesUpdates
setDisabled:
disabled
contextWithOptions:
server
serverWithOptions:
serverIfRunning
firstObject
localContextWithOptions:
remoteContextWithOptions:
_source
targetName
save
source
_function
function
setFunction:
forceField
_shmem
_capacity
_count
nextSlot
resetBitMask
markWritten:
shmem
capacity
groupWithCapacity:
_group
initWithKeyPath:initialValue:additive:
initWithKeyPath:initialValue:additive:group:
group
setValue:
write
CA_copyNumericValue:
_setCARenderAnimation:layer:
removedOnCompletion
timingFunction
discretizesTime
frameInterval
setType:
subtype
setSubtype:
startProgress
setStartProgress:
endProgress
setEndProgress:
filter
setFilter:
transitionFlags
CA_copyRenderKeyValueArray
options
animations
setAnimations:
_solveForInput:
calculationMode
setCalculationMode:
keyTimes
setKeyTimes:
timingFunctions
setTimingFunctions:
values
setValues:
path
setPath:
tensionValues
setTensionValues:
continuityValues
setContinuityValues:
biasValues
setBiasValues:
rotationMode
setRotationMode:
CA_interpolateValues:::interpolator:
CA_interpolateValue:byFraction:
isAdditive
apply:result:parameterFunction:context:
outputCount
inputCount
valueFunction
isCumulative
CA_distanceToValue:
setAdditive:
setCumulative:
setValueFunction:
cumulative
animationWithKeyPath:
fromValue
toValue
setToValue:
byValue
setByValue:
_timeFunction:
CA_roundToIntegerFromValue:
roundsToInteger
endAngle
startAngle
settlingDuration
stiffness
setStiffness:
damping
setDamping:
setInitialVelocity:
initialVelocity
setVelocity:
durationForEpsilon:
sourceLayer
setSourceLayer:
sourceLayerRenderId
setSourceLayerRenderId:
sourceContextId
setSourceContextId:
sourcePoints
setSourcePoints:
targetsSuperlayer
setTargetsSuperlayer:
appliesX
setAppliesX:
appliesY
setAppliesY:
appliesScale
setAppliesScale:
appliesRotation
setAppliesRotation:
contextId
context
position
setFrameInterval:
setDiscretizesTime:
setRoundsToInteger:
setStartAngle:
setEndAngle:
setOptions:
setTransitionFlags:
getObjects:range:
fillRule
setFillRule:
strokeColor
setStrokeColor:
strokeStart
setStrokeStart:
strokeEnd
setStrokeEnd:
lineWidth
setLineWidth:
miterLimit
setMiterLimit:
lineJoin
setLineJoin:
lineCap
setLineCap:
lineDashPattern
setLineDashPattern:
lineDashPhase
setLineDashPhase:
setContextId:
inheritsSecurity
setInheritsSecurity:
rendersAsynchronously
setRendersAsynchronously:
hidesSourceLayer
setHidesSourceLayer:
matchesOpacity
setMatchesOpacity:
matchesPosition
setMatchesPosition:
matchesTransform
setMatchesTransform:
instanceCount
setInstanceCount:
instanceDelay
setInstanceDelay:
instanceTransform
setInstanceTransform:
instanceColor
setInstanceColor:
instanceRedOffset
setInstanceRedOffset:
instanceGreenOffset
setInstanceGreenOffset:
instanceBlueOffset
setInstanceBlueOffset:
instanceAlphaOffset
setInstanceAlphaOffset:
sharegroup
getMacroContextPrivate
setParameter:to:
initWithAPI:properties:
needsDisplayForKey:
fontSmoothingStyle
setFontSmoothingStyle:
_initWithContentsOfURL:type:options:error:
_initWithData:type:options:error:
substitutedClasses
_addClassSubstitutions:
_readFromArchiveData:options:error:
_readFromCAMLData:type:options:error:
_readFromCAMLURL:type:options:error:
rootLayer
publishedObjectNames
publishedObjectWithName:
unarchiver:cannotDecodeObjectOfClassName:originalClasses:
allKeys
dictionary
propertyListWithData:options:format:error:
stringByAppendingPathComponent:
fileURLWithPath:isDirectory:
setBaseURL:
URLByDeletingLastPathComponent
parser
reason
finishDecoding
initForReadingFromData:error:
setClass:forClassName:
packageWithContentsOfURL:type:options:error:
packageWithData:type:options:error:
animationDuration
setAnimationDuration:
animationTimingFunction
setAnimationTimingFunction:
completionBlock
setCompletionBlock:
completionItem
addCommitHandler:forPhase:
pushAnimator:
popAnimator
animator
setCommitHandler:
currentPhase
setPresentationHandler:queue:
activate
activateBackground:
synchronize
animatesFromModelValues
setAnimatesFromModelValues:
earliestAutomaticCommitTime
setEarliestAutomaticCommitTime:
disableRunLoopObserverCommits
setDisableRunLoopObserverCommits:
generateSeed
assertInactive
statisticsValues
groupName
setGroupName:
usesGlobalGroupNamespace
setUsesGlobalGroupNamespace:
backdropRect
setBackdropRect:
marginWidth
setMarginWidth:
captureOnly
setCaptureOnly:
allowsInPlaceFiltering
setAllowsInPlaceFiltering:
disablesOccludedBackdropBlurs
setDisablesOccludedBackdropBlurs:
statisticsType
setStatisticsType:
statisticsInterval
setStatisticsInterval:
numberWithFloat:
invertsShape
setInvertsShape:
offset
setOffset:
sharpness
setSharpness:
behaviorTypes
behaviorWithType:
_layerA
_layerB
_attachmentPointA
_attachmentPointB
_stiffness
_damping
_restLength
_delegate
layerA
setLayerA:
layerB
setLayerB:
attachmentPointA
setAttachmentPointA:
attachmentPointB
setAttachmentPointB:
restLength
setRestLength:
spring
initWithData:
encodeObject:conditionally:
_writeElementTree:
stringByAddingPercentEncodingWithAllowedCharacters:
URLPathAllowedCharacterSet
pathWithComponents:
subarrayWithRange:
pathComponents
isFileURL
relativePath
CAMLWriter:URLForResource:
CAMLType
CAMLWriter:typeForObject:
CAMLWriter:IDForObject:
allObjects
compare:
sortedArrayUsingSelector:
willSuspend:
numberWithChar:
numberWithLong:
CA_shouldArchiveValueForKey:ofObject:
CA_CAMLPropertyForKey:
numberWithUnsignedLong:
numberWithLongLong:
CA_setterForProperty:
CA_getterForProperty:
CA_encodesPropertyConditionally:type:
numberWithUnsignedLongLong:
raise:format:arguments:
isSuspended
needsLayoutForKey:
methodForSelector:
numberWithUnsignedChar:
hasPrefix:
setScanLocation:
scanInt:
scanLocation
replaceObjectAtIndex:withObject:
mutableCopyWithZone:
defaultCenter
addObserver:selector:name:object:
numberWithShort:
numberWithUnsignedShort:
valueForUndefinedKey:
setValue:forUndefinedKey:
initWithOptions:localContext:
initRemoteWithOptions:
commitPriority
setCommitPriority:
colorMatchUntaggedContent
setColorMatchUntaggedContent:
orderAbove:
orderBelow:
setLevel:
level
setDesiredDynamicRange:
desiredDynamicRange
valid
createFencePort
setFencePort:
setFencePort:commitHandler:
setFence:count:
invalidateFences
createSlot
createImageSlot:hasAlpha:
createImageSlot:hasAlpha:extendedColors:
deleteSlot:
setObject:forSlot:
_desiredDynamicRange
allContexts
remoteContext
setClientPort:
objectForSlot:
initWithName:
_proxy
colors
setColors:
locations
setLocations:
startPoint
setStartPoint:
endPoint
setEndPoint:
colorMap
setColorMap:
stateOfLayer:
setState:ofLayer:transitionSpeed:
setState:ofLayer:
setInitialStatesOfLayer:transitionSpeed:
setInitialStatesOfLayer:
removeAllStateChanges
restoreStateChanges:
cancelTimers
_nextStateTimer:
_addAnimation:forKey:target:undo:
_applyTransition:layer:undo:speed:
_applyTransitionElement:layer:undo:speed:
setSpeed:
convertTime:fromLayer:
commitTime
removeTransition:
stateController:transitionDidStart:speed:
addTransition:
elements
setCAStateControllerTransition:
setCommitTime:
addAnimation:
initWithLayer:key:
setRemovedOnCompletion:
userInfo
currentState
isInitial
stateController:didSetStateOfLayer:
addTimer:forMode:
mainRunLoop
timerWithTimeInterval:target:selector:userInfo:repeats:
previousDelay
nextDelay
setCurrentState:
setState:
apply:
setDisableActions:
disableActions
_initWithOptions:
_initWithEAGLContext:options:
setLayer:
beginFrameAtTime:timeStamp:
updateBounds
addUpdateRect:
nextFrameTime
hasMissingContent
render
endFrame
currentContext
renderContext
rendererDidChange:
colorSpace
setColorSpace:
localContext
rendererWithEAGLContext:options:
setContext:
cStringUsingEncoding:
Undefined script value `%s'
null
bool
integer
real
NSArray
NSSet
NSDictionary
string
NSURL
CGPoint
CGSize
CGRect
CGAffineTransform
CATransform3D
CAPoint3D
CAColorMatrix
CGColor
CGImage
CGPath
CGPDFDocument
CGFont
unordered
oldestFirst
oldestLast
backToFront
additive
screen
maximum
cheapColorDodge
point
line
rectangle
cuboid
circle
sphere
path
rectangles
points
outline
surface
volume
sequential
emitterCells
T@"NSArray",C
lifetime
emitterPosition
T{CGPoint=dd}
emitterZPosition
emitterSize
T{CGSize=dd}
emitterDepth
emitterShape
T@"NSString",C
emitterMode
renderMode
preservesDepth
velocity
seed
emitterBehaviors
emitterPath
Tr^{CGPath=}
emitterRects
emitterDuration
spinBias
cullRect
T{CGRect={CGPoint=dd}{CGSize=dd}}
cullMinZ
cullMaxZ
updateInterval
CA_DISABLE_PARALLEL_CG
CA_DISABLE_ASYNC
CATransform3DValue
T{CATransform3D=dddddddddddddddd},R
(interpolator (factor %g)
(o%d 
layer
T@"CALayer",R,N,V_layer
T@"CAStateTransition",R,N,V_transition
beginTime
Td,R,N,V_beginTime
duration
Td,R,N,V_duration
speed
Tf,R,N,V_speed
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
CAStateControllerTransition
T@"CAStateControllerTransition",W,D
auto
YCbCr444LimitedRange
YCbCr422LimitedRange
YCbCr420LimitedRange
RGBLimitedRange
RGBFullRange
DolbyVision
DolbyVisionLowLatency
HDR10_422LimitedRange
HDR10_420LimitedRange
none
scaleContent
insetBounds
rot0
rot90
rot180
rot270
Dolby
HDR10
gamut_SRGB
gamut_P3
gamut_BT2020
availableModes
T@"NSArray",R,N
currentMode
T@"CADisplayMode",&,N
preferredMode
T@"CADisplayMode",R,N
colorMode
T@"NSString",C,N
allowsVirtualModes
TB,V_allowsVirtualModes
bounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
safeBounds
name
T@"NSString",R,N
deviceName
displayId
TI,R
connectionSeed
uniqueId
T@"NSString",R
supported
TB,R,GisSupported
Tq,R
processId
Ti,R
external
TB,R,GisExternal
refreshRate
Td,R
heartbeatRate
minimumFrameDuration
overscanned
TB,R,GisOverscanned
overscanAdjustment
overscanAmount
overscanAmounts
T{CGSize=dd},R
cloned
TB,R,GisCloned
cloningSupported
TB,R,GisCloningSupported
nativeOrientation
supportsExtendedColors
TB,R
externalDisplayAttributes
T@"CADisplayAttributes",R
dolbyVision
pqEOTF
hdrStaticMetadataType1
bt2020YCC
CoreAnimation: GetDisplayInfo returned 0x%x
<CADisplay:%@ %@>
CoreAnimation: [CADisplay setColorMode:] is deprecated!
CoreAnimation: [CADisplay colorMode] is deprecated!
width
TQ,R,N
height
pixelAspectRatio
Td,R,N
isVirtual
TB,R,N
T@"NSString",R,C,N
preferredScale
hdrMode
colorGamut
internalRepresentation
<CADisplayMode %d x %d fmt:%s range:%s>
limited
undefined
full
dolby_tunneled
dolby_vision_low_latency
y420
y422
y444
hdr10_ycbcr_422_tunneled
hdr10_ycbcr_420_tunneled
dolby_native
<CADisplayMode %d x %d internal_panel (fixed)>
main-screen-class
DeviceClassNumber
mode %@ is not valid for display %@
CAInvalidDisplayMode
Failed to register for CADisplay change notifications: 0x%x
com.apple.CoreAnimation.CAWindowServer.DisplayPower
Failed to register for CADisplay power notifications: 0x%x
v12@?0i8
TVOut
timestamp
targetTimestamp
paused
TB,N,GisPaused
frameInterval
Tq,N
preferredFramesPerSecond
%@: already added to runloop %p, cannot also be added to %p
CADisplayLink
display
T@"CADisplay",R,N
userInfo
T@,&,N
maximumRefreshRate
Tq,R,N
{CGAffineTransform=dddddd}
{?=dddddd}
public.png
supportsSecureCoding
array
dict
LKCGPathSegments
LKCGPathPoint2_y
LKCGPathPoint2_x
LKCGPathPoint1_y
LKCGPathPoint1_x
LKCGPathPoint0_y
LKCGPathPoint0_x
LKCGPathType
CGPatternImage
CGPatternColored
CGPatternTiling
CGPatternStep
CGPatternBounds
CGPatternMatrix
tiling
CGPatternType
data
CGColorPattern
kind
CoreAnimation: unable to encode NSValue of type %s
image_format
T@"NSString",C,V_image_format
image_encode_options
T@"NSDictionary",C,V_image_encode_options
CAML: Failed to encode image: %s
assets/image%d.%@
CACodingUserInfo
CACodingImageFormat
CACodingImageOptions
-[NSCoder(CACoderAdditions) CA_decodeObjectForKey:]
%s: ignoring exception %@
root
rootLayer
CAMLEncodeLayerTreeToPathWithOptions failed to create output dirs at %s
CAMLEncodeLayerTreeToPathWithOptions options must be a CFDictionary
main.caml
index.xml
rootDocument
%@/%s
%@/assets
(image [%d %d] [%d] %s
null_image_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-image.cpp
(uintptr_t)data % alignsize == 0
Failed to validate rowbytes: %zu, levels: %u height: %u
Failed to decode_data_async, size: %zu
Failed to decode shmem.
Failed to re-create data_size, encoded: %zu,calculated: %zu
Image failed to decode! Using null image instead.
next
T@"CAStateControllerUndo",R,V_next
state
T@"CAState",&,N,V_state
elements
T@"NSMutableArray",&,N,V_elements
transitions
T@"NSMutableArray",&,N,V_transitions
CABackingStoreBeginUpdate_
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/utilities/CABackingStore.cpp
!b->update_ctx
CoreAnimation: triple buffered backing store %p
CABackingStoreBeginUpdate
!CABackStoreIsUpdating_ (b)
levels == 1
CABackingStoreEndUpdate
CABackStoreIsUpdating_ (b)
CABackingStore
 volatile
 (buffer [%d %d] %s%s)
<CABackingStore %p
<CABackingStore %p>
baseURL
T@"NSURL",&
delegate
T@"<CAMLParserDelegate>",W
error
T@"NSError",R
result
T@,R
Unable to load CAPackage from URL: %@
Error while parsing CoreAnimation XML document %@: %@
(currentTexture 
(blendedTextures
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-image-queue.cpp
CoreAnimation: copied CGImageRef %p - mask size
CoreAnimation: copied CGImageRef %p - color matching
CoreAnimation: copied CGImageRef %p - needs color matching
CoreAnimation: copied CGImageRef %p - non-RGB color model
CoreAnimation: ignored CGImageRef %p - bad grayscale 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - decode or mask
CoreAnimation: copied CGImageRef %p - bad grayscale image format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - non-native format (%d)
CoreAnimation: copied CGImageRef %p - format not supported by hardware
CoreAnimation: copied CGImageRef %p - no data pointer
CoreAnimation: copied CGImageRef %p - bad image alignment
CoreAnimation: copied CGImageRef %p - bad row alignment
CoreAnimation: copied CGImageRef %p - mipmap generation
CoreAnimation: copied CGImageRef %p - RGB mask (bug!)
CoreAnimation: ignored CGImageRef %p - bad RGB 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - bad RGB image format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - bad decode array
CoreAnimation: copied CGImageRef %p - bad mask
CoreAnimation: copied CGImageRef %p - bad mask image format (%d bpp, %d bpc)
CoreAnimation: warning, CGImageProvider returned multiple blocks
CG image cache at time %f:
mipmaps 
mask 
transient 
unmatched 
partial 
  %p deadline %f %s%s%s%s%s
multiplyColor
colorAdd
colorSubtract
colorMonochrome
colorMatrix
colorHueRotate
colorSaturate
colorBrightness
colorContrast
colorInvert
compressLuminance
meteor
homeAffordanceBase
bias
distanceField
gaussianBlur
luminanceMap
lanczosResize
clear
copy
sourceOver
sourceIn
sourceOut
sourceAtop
destOver
destIn
destOut
destAtop
plusL
subtractS
subtractD
multiply
minimum
plusD
normalBlendMode
multiplyBlendMode
screenBlendMode
overlayBlendMode
darkenBlendMode
lightenBlendMode
colorDodgeBlendMode
colorBurnBlendMode
softLightBlendMode
hardLightBlendMode
differenceBlendMode
exclusionBlendMode
subtractBlendMode
divideBlendMode
linearBurnBlendMode
linearDodgeBlendMode
linearLightBlendMode
pinLightBlendMode
pageCurl
vibrantDark
vibrantLight
darkenSourceOver
lightenSourceOver
enabled
TB,GisEnabled
cachesInputImage
accessibility
TB,GisAccessibility
CAFilterInputs
CAFilterEnabled
CAFilterName
CAFilterType
CAFilter requires `filter' attribute
T@"NSString",C,N,V_name
basedOn
T@"NSString",C,V_basedOn
TB,GisEnabled,V_enabled
T@"NSArray",C,N
nextDelay
Td,V_nextDelay
previousDelay
Td,V_previousDelay
locked
TB,N,GisLocked,V_locked
initial
TB,GisInitial,V_initial
 initial
 locked
{%@:%p %@ basedOn %@ %@%s%s}
average
vertexCount
faceCount
depthNormalization
subdivisionSteps
meshData
[%@] [%@] f 
[%@] [%@] v 
Invalid mesh operator: %c
Invalid number of arguments to 'f' mesh operator
Invalid number of arguments to 'v' mesh operator
Invalid number of numeric values in mesh
%@: trying to remove non-existent face %ld
CAMeshTransform
%@: trying to replace non-existent face %ld
%@: trying to remove non-existent vertex %ld
%@: trying to replace non-existent vertex %ld
(force-field
(layer 0x%lx)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-force-field.cpp
Unsupported image format '%s' for default colorspace
ARGB8888
BGRA8888
XRGB8888
BGRX8888
XRGB1555
BGRX5551
CbYCrY8
YCbYCr8
RGBA8
RGBX8
RGBAh
RGBAf
ABGR8
XBGR8
RGBXh
RGBA5
RGBA16
RGBX16
LA16
BGR10
RGB10
RGB10_XR
ARGB10_XR
RGB10A8_2P_XR
CoreAnimation: rendering error %s
(replicatorLayer %d)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-replicator-layer.cpp
CAValueFunctionName
Unknown function: %@
com.apple.coreanimation.display.%s
com.apple.coreanimation.display
easeIn
easeOut
easeInEaseOut
default
(%g %g; %g %g)
no timing function control point with index: %d
CAMediaTimingFunctionInvalidControlPoint
index
unknown timing function name: %@
CAMediaTimingFunctionInvalid
CAMediaTimingFunction
Ignoring trailing characters
Unknown timing function: %@
No timing function data
(shmem %lu bytes)
CoreAnimation: failed to allocate %ld bytes
Data %p with size %zu underflow
CoreAnimation: failed to query region %p (%zu bytes)
Failed to map %ld bytes with port = %u, protection = %u, err = 0x%x
Shmem port is MACH_PORT_NULL!
Failed to decode shmem from data ptr: %p, len: %zu
Failed to decode shmem data
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-shmem.cpp
%a %b %e %H:%M:%S %Z %Y
** Log started %s **
X_LOG_FILE_OPEN
open '%s'
 command: %s
stdout
stderr
X_LOG_TRUNCATE
Unable to open log file for writing: %s
QUARTZCORE_LOG_FILE
X_LOG_FILE
CADebug
Metal
Pipelines
OpenGL
Render
States
Utilities
WindowServer
exported [%d %d] buffer to %s
T@"NSString",C,N,V_key
{%@:%p %@:%p %@}
animations.%@
transform-
(%slayer [%.10g %.10g %.10g] [%.10g %.10g %.10g %.10g] [%g %g %g]
[%d pass%s
(name 
(hidden true)
(masksToBounds true)
(geometryFlipped true)
(edgeAntialiasingMask %x)
(disableUpdateMask %x)
(contentsGravity %s)
(contentsOpaque true)
(contentsDither false)
(contentsMultiplyColor %.3g %.3g %.3g %.3g)
(contentsSwizzle %s)
(motionBlurAmount %g)
transform
sublayerTransform
(doubleSided false)
(sortsSublayers false)
(flipsHorizontalAxis true)
(opacity %g)
(cornerRadius %g)
(backgroundColor 
(backgroundColor (%.3g %.3g %.3g %.0g))
(borderWidth %g)
(borderColor 
(borderColor (%.3g %.3g %.3g %.0g))
(cornerContents 
(continuousCorners true)
(cornerContentsMasksEdges true)
(maskedCorners %x)
backingStore 
(contents %s
(contentsScaling repeat)
(magnificationFilter %s)
(minificationFilter %s)
(lodBias %g)
(inheritsTiming false)
(definesDisplayRegionOfInterest true)
(contentsContainsSubtitles true)
contentsTransform
(contentsRect 
(contentsCenter 
(cornerContentsCenter 
(literalContentsCenter true)
(contentsScale %g)
(shouldRasterize true)
(rasterizationPrefersDisplayCompositing true)
(rasterizationScale %g)
(preloadsCache true)
(allowsDisplayCompositing true)
(allowsEdgeAntialiasing true)
(wantsExtendedDynamicRangeContent true)
(allowsGroupOpacity true)
(allowsGroupBlending false)
(allowsHitTesting false)
(hitTestsAsOpaque true)
(shadowColor (%.3g %.3g %.3g %.0g))
(shadowOpacity %g)
(shadowRadius %g)
(shadowOffset [%g %g])
(shadowPath 
(invertsShadow true)
(shadowPathIsBounds true)
(mask 
(sublayers 
(filters 
(backgroundFilters 
(compositingFilter 
(meshTransform 
(animations 
(behaviors 
(modifiers 
(subclass 
RGBA
AAAA
 (group-flags [
compositing-filters
bg-filters
blend-modes
filters
sover
rasterize
cache
mesh
emitter
 (offscreen-flags [
shadow
pattern
tiled-image
backdrop-copy
blending
transition
filter
mask
group
scaling
plugin
motion-blur
dest-copy
asynchronous
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-layer.cpp
%s - meshTransform = %p
(filter %s
(inputs 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-filter.cpp
(%s 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-key-value.cpp
Surface %d detach failed: !(contents->is_opaque () || (g.filter_bits () & OGL_FILTER_ALPHA_NONE))
Surface %d detach failed: !c.get_color ().is_white ()
Surface %d detach failed: c.nested_rendering_p ()
Surface %d detach failed: c.render_state () != 0
Surface %d detach failed: !s.screen_space
Surface %d detach failed: s.clip_planes
Surface %d detach failed: !h
Surface %d detach failed: !(l->node->flags & Render::kLayerNodeCanonicalLayer)
Surface %d detach failed: g.has_center ()
Surface %d detach failed: (g.filter_bits () & OGL_FILTER_MIX_TEXCOORDS)
Surface %d detach failed: (l->edge_mask & kAllOuterEdges) != 0 && (g.filter_bits () & OGL_FILTER_SUB)
Surface %d detach failed: l->layer_features & (OGL_MASK_LAYER | OGL_OPACITY | OGL_COMPOSITE_NOT_SOVER)
Surface %d detach failed: !r.update ()->allows_display_compositing ()
Surface %d detach failed: CAGetDebugOption (kCADebugOptionDisableDetached)
Surface %d detach failed: !surface
Surface %d detach failed: !g.transform ().is_affine_2d ()
Surface %d detach failed: "rotation"
Surface %d detach failed: !srcR.is_integral ((Real) 1e-6)
Surface %d detach failed: !l->node->clear_above_and_black_below (cloned)
Surface %d detach failed: !dpy->detach_layer (h, l->node->instance_index, contents, surface, &srcR, &dstR, flags, &copied)
render_contents_background
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/ogl/ogl-layer.cpp
!(l->node->flags & Render::kLayerNodeIgnoreContents)
vibrantLightSourceOverReversed
vibrantDarkSourceOverReversed
vibrantLightSourceOver
vibrantDarkSourceOver
(subpixel-mask-layer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-subpixel-mask-layer.cpp
uncollectable
disableFade
onlyIfNull
removeImmediately
levelsOfDetail
levelsOfDetailBias
tileSize
CATiledLayerFlags
contents
contentsAreFlipped
fillColor
T^{CGColor=}
maximumTileScale
drawingEnabled
TB,GisDrawingEnabled
T@"<CATiledLayerDelegate><CALayerDelegate>",W
CoreAnimation: failed to add monotonic cube ((%g, %g) (%g, %g) (%g, %g) (%g, %g))
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-behavior.cpp
Basic
Blurs
PerfStates
Frame Duration
render_for_time
Display EDR
Render EDR
Display nits
Offscreen Passes
Dirty Area
Update
Frame Delay
Backdrop Count
Blur Count
Emitter Count
Particle Count
CPU Freq
GPU Freq
SoC Freq
DRAM Freq
Battery Drain
CPU Power
GPU Power
SoC Power
DRAM Power
v16@?0^{pstate_monitor=}8
/usr/local/lib/libpstatemonitor.dylib
pstate_monitor_connect
pstate_monitor_destroy
pstate_monitor_get_CPU_pstate
pstate_monitor_get_GPU_pstate
pstate_monitor_get_SOC_pstate
pstate_monitor_get_DRAM_pstate
pstate_monitor_get_CPU_watts
pstate_monitor_get_GPU_watts
pstate_monitor_get_SOC_watts
pstate_monitor_get_DRAM_watts
pstate_monitor_get_BatteryDrain_watts
apple-internal-install
CoreAnimation: surface %d x %d is too large
CoreAnimation: %d by %d image is too large for GPU, ignoring
CoreAnimation: image stride is too large for GPU, ignoring
CoreAnimation: unsupported graphics hardware
; need three or more texture units
CA_DISABLE_WORKAROUNDS
CA_MAX_TEXTURE_UNITS
CA_MAX_TEXTURE_SIZE
Apple
GL_APPLE_fence
GL_APPLE_texture_filter_cubic
GL_APPLE_texture_ycbcr_basic_formats
GL_APPLE_texture_ycbcr_extended_formats
GL_APPLE_texture_xr
GL_APPLE_tile_order_rot
GL_EXT_shader_framebuffer_fetch
GL_EXT_texture_filter_anisotropic
GL_EXT_texture_lod_bias
GL_OES_standard_derivatives
GL_OES_texture_half_float
GL_OES_texture_half_float_linear
GL_OES_texture_float
GL_OES_texture_float_linear
GL_IMG_texture_compression_pvrtc
GL_KHR_texture_compression_astc_ldr
CoreAnimation: maximum %d texture units
CoreAnimation: maximum texture %d pixels
#define NOISE_SIZE %d
pop_surface
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/ogl/ogl-context.cpp
_current_surface != 0
TMPDIR
/tmp
%s/ca-image-%03d-%s-%d.%s
error: failed to export [%d %d] buffer to %s
push_surface
surf != nullptr
_current_surface != surf
[%u]
, memoryless
 s:[%u x %u] b:[%u x %u] need-clear:%d%s
 s:framebuffer
0x%x
~Context
current_surface () == nullptr
CA_DISABLE_COLOR_MATCHING
DisableColorMatching
dest
surf
(shape-layer
(fillColor %.3g %.3g %.3g %.3g)
(strokeColor 
(strokeColor %.3g %.3g %.3g %.3g)
(strokeStart %g)
(strokeEnd %g)
(miterLimit %g)
(dashPhase %g)
(dashPattern 
(fillRule evenOdd)
round
bevel
(lineJoin %s)
square
(lineCap %s)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-shape-layer.cpp
start
middle
natural
left
right
center
justified
T@,C
font
Tr^v
fontSize
foregroundColor
wrapped
TB,GisWrapped
truncationMode
alignmentMode
allowsFontSubpixelQuantization
NSGraphicsContext
UIApplication
NSFont
Helvetica
truncationString
truncated
TB,R,GisTruncated
states
T@"NSArray",C,D
stateTransitions
vertically
horizontally
scrollMode
visibleRect
T{CGRect={CGPoint=dd}{CGSize=dd}},R
Unattached contexts:
  %x: pid %d [%s]%s%s
 (requested headroom: %f)
; colorspace "
== context %x%s%s%s; pid %d [%s] %sat time %f ==
Context %x (pid %d [%s]):
  slot %u:
secure
displayable
ignoresHitTest
enablePixelQuadrupling
enablePixelDoubling
disableEdgeAA
disableGroupOpacity
will_commit
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-context.cpp
!_locked_host_ctx || _locked_host_ctx == host_ctx
siblingId
above
CoreAnimation: missing mask layer %p
CoreAnimation: missing sublayer %p
fromState
T@"NSString",C,N,V_fromState
toState
T@"NSString",C,N,V_toState
T@"NSArray",C,N,V_elements
<CAStateTransition fromState=%@ toState=%@ %@>
pageUnCurl
<unknown>
(%s)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-object.cpp
(%s [%g %g %g %g; %g %g %g %g; %g %g %g %g; %g %g %g %g])
(%s [%g %g %g %g %g %g])
** Render objects at time %f **
%20s %s
TYPE
COUNT
%20s %d
com.apple.CoreAnimation.CAWindowServer.DisplayChanged
LK_BENCHMARK
CoreAnimation: LayerHost trying to host itself or one of its ancestors (context id %d)
(layer-host %x
(inherits-security true)
CoreAnimation: context hosting changed while locked!
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-layer-host.cpp
removed
extended
mode
modeDisplay
modeLayer
includeContextList
excludeContextList
stopAfterContextList
destination
displayName
originX
originY
timeOffset
reuseBackdrops
enforceSecureMode
ignoreAccessibility
contextId
layerId
contextList
sizeWidth
sizeHeight
formatWideGamut
formatOpaque
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/ogl/ogl-debug-renderer.cpp
add_vertex
_vertices_cur < _vertices_end
sprite
plane
single
random
lifetimeRange
emissionLatitude
emissionLongitude
emissionRange
velocityRange
xAcceleration
yAcceleration
zAcceleration
scaleRange
spinRange
color
redRange
greenRange
blueRange
alphaRange
redSpeed
greenSpeed
blueSpeed
alphaSpeed
T@,&
contentsRect
contentsScale
minificationFilter
magnificationFilter
minificationFilterBias
style
T@"NSDictionary",C
autoreverses
fillMode
<%@:%p; 
particleType
orientationLatitude
orientationLongitude
orientationRange
rotationRange
massRange
contentsFrameMode
contentsFrameCount
contentsFramesPerRow
contentsFramesPerSecond
high
medium
LinearBlurs
innerStroke
outerStroke
allowsRecursiveScreenCapture
CoreAnimation: insecure context %x - pid %u [%s].
Cannot host %x in context %x - pid %u [%s].
com.apple.CoreAnimation.CAWindowServer.SecureModeViolation
** Render tree at time %f (bounds %d,%d %dx%d) **
CAMachPort
<CAMachPort %p mach_port = %u>
<CAMachPort %p>
CARenderObject
<CARenderObject %p>
QuartzCore
unable to register with server: 0x%x
task_name_for_pid failed: 0x%x
CoreAnimation: NULL color space set on context (%x)
_colorSpaceDidChange
_contentsFormatDidChange:
grad
skewX
skewY
shearXY
shearYZ
shearXZ
perspective
Invalid transform: %s (position %d)
saturate
hueRotate
luminanceToAlpha
Invalid color matrix: %s (position %d)
Invalid number of numeric values in path: %s
Invalid number of arguments to 'm' path operator: %s
Invalid number of arguments to 'l' path operator: %s
Invalid number of arguments to 'c' path operator: %s
Invalid number of arguments to 'v' path operator: %s
Invalid number of arguments to 'q' path operator: %s
Invalid number of arguments to 't' path operator: %s
Invalid number of arguments to 'y' path operator: %s
Invalid number of arguments to 'h' path operator: %s
Invalid number of arguments to 're' path operator: %s
Invalid path operator: %s
Ignoring trailing characters: %s
true
Failed to create pattern from image
Failed to open image
opacity
Incorrect number of color components (need %d)
Failed to load image
Unable to open pdf document
pdfDocument element must specify src attribute
cannot create font from name: %s
(portal-layer 0x%lx
(sourceContext %x)
(hidesSourceLayer true)
(matchesOpacity true)
(matchesPosition true)
(matchesTransform true)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-portal-layer.cpp
ambient
directional
spot
specularIntensity
position
T{CAPoint3D=ddd}
T@"<CABehaviorDelegate>",W
springs
forceFields
timeStep
minimumTimeStep
stoppedVelocity
stoppedAngularVelocity
springScale
drag
angularDrag
reactsToCollisions
collisionInterval
CoreAnimation: user defined spring-functions are unimplemented.
(dynamics-behavior
(springs 
(forceFields 
(springScale %g)
(drag %g)
(angularDrag %g)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-dynamics.cpp
CoreAnimation: %d by %d image is too large for software renderer, ignoring
CoreAnimation: invalid commit handler phase! Defaulting to pre-commit.
CoreAnimation: warning, deleted thread with uncommitted CATransaction; created by:
CoreAnimation: warning, deleted thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
CA_DEBUG_TRANSACTIONS
CA_ASSERT_MAIN_THREAD_TRANSACTIONS
CoreAnimation: CA_ASSERT_MAIN_THREAD_TRANSACTIONS is set and an implicit transaction wasn't created on a main thread.
UITrackingRunLoopMode
Started implicit transaction for thread %p
CoreAnimation: new transaction fence disabling existing low latency hint.
cannot add commit handler to this phase!
CATransaction
CoreAnimation: warning, encountered thread with uncommitted CATransaction; created by:
CoreAnimation: warning, encountered thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
animation
T@"CAAnimation",&,N,V_animation
{%@:%p %@:%p %@ %@}
CAAnimation
drawableProperties
presentsWithTransaction
CoreAnimation: ignoring exception: %@
nativeWindow
T^{_EAGLWindowObject=^?^?^?},R
TB,GisAsynchronous
inputTime
[CAEAGLLayer setInputTime:] - non-zero time already exists!
maximumDrawableCount
T@"NSString",R,N,V_key
(backdrop-layer %ld
(group "%s")
(usesGlobalGroupNamespace true)
(scale %g)
(marginWidth %g)
(backdropRect [%g %g; %g %g])
(captureOnly true)
(allowsInPlaceFiltering true)
(disablesOccludedBackdropBlurs true)
(buffer [%d x %d] scale %g)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-backdrop-layer.cpp
collected backdrop group %p buffer %p
Filter merging aborted: layer.bounds == blur.inputBounds
(transition %s
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-transition.cpp
Delegate does not support <script>.
Null <script> contents
Unable to open script: %s
No such class `%s'
CAML error:%d: 
CAML warning:%d: 
create_builtin_types
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/api/CAMLObjCContext.mm
!_builtin_types
NSString
Delegate does not support script values.
CA:Render:Server:port_set (): mach_port_mod_refs () returned error 0x%x
unable to find bootstrap server: %x
unable to register bootstrap port %s: %x
com.apple.coreanimation.render-server
CoreAnimation: mach_msg returned 0x%x, server exiting
(pixel-buffer %c%c%c%c [%d %d])
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-pixel-buffer.cpp
oglFlip
(image-provider [%d %d] [%d %d] [%d %d]
(fillColor 
(fillColor #%08x 
CAImageProvider: %.3gMB cached (%.3gMB purgeable); idle %.3gs -> %.3gs
defaultDisplay
CARenderServerBuffer
<CARenderServerBuffer %p>
CARenderServerBufferRef is now a CF type. Please use CFRetain/CFRelease instead of CARenderServerDestroyBuffer!
com.apple.CARenderServer
%s display:
Total Frames:
Skipped Frames:
Total Cloned Frames:
Skipped Cloned Frames:
(spring
(layerA 0x%lx)
(layerB 0x%lx)
(attachmentPointA [%g %g])
(attachmentPointB [%g %g])
(restLength %g)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-spring.cpp
<script> element not supported
CAML
message
colorspace
sRGB
Unable to create colorspace: %s
kCGColorSpace%s
create_sax_vtable
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/utilities/CAMLContext.cpp
!_sax_vtable
http://www.apple.com/CoreAnimation/1.0
Unknown namespace URI: %s
script
Ignoring element `%s'
caml
Root element must be `caml'
type
Unknown type `%s'
Invalid type `%s' (need `%s')
object
Unknown value element `%s'
`o' element must have `type' attribute
Ignoring untyped attribute `%s'
Unknown object id: `%s'
Undefined property value for key `%s'
@index(
@index(%d)
%f %x "%s" (%p): replacing %p (eval %u; frames %u):
%f %x "%s" (%p): adding %p:
%f %x "%s" (%p): not adding %p:
%f %x "%s" (%p): removing all:
%p (eval %u; frames %u):
%f %x "%s" (%p): removing %p (eval %u; frames %u):
%f %x "%s" (%p): collecting %p (t %f; speed %g; eval %u; frames %u):
(path
%g %g m
%g %g l
%g %g %g %g q
%g %g %g %g %g %g c
CoreAnimation: ignoring invalid path
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-path.cpp
(function %s)
springForce
rubberBandForce
rotateX
rotateY
rotateZ
scaleX
scaleY
scaleZ
scaleXY
scaleXYZ
translate
translateX
translateY
translateZ
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-function.cpp
%s - _values = NULL
InterpolatedFunction
CAImageProvider
<CAImageProvider %p: %u x %u>
T@"CALayer",R,V_layer
currentState
T@"CAState",&,N,V_currentState
undoStack
T@"CAStateControllerUndo",R,V_undoStack
keyPath
T@"NSString",C,N,V_keyPath
T@,&,N,V_object
beforeObject
T@,&,N,V_beforeObject
{%@:%p %@:%p %@ %@ before %@}
beforeObjectId
objectId
sublayers
init_alignment
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/utilities/CADeviceInfo.cpp
alignment_values[kCAAlignmentPropertyImageBytes] >= alignment_values[kCAAlignmentPropertyNeededImageBytes]
alignment_values[kCAAlignmentPropertyRowBytes] >= alignment_values[kCAAlignmentPropertyNeededRowBytes]
ChipID
EnableDeepFramebuffer
Aixt/MEN2O2B7f+8m4TxUA
CA_FORCE_P3_TRACKING
CADisableMinimumFrameDuration
com.apple
com.apple.coreanimation
ji56BO1mUeT7Qg9RO7Er9w
failed to receive purple reply message: %x
failed to send purple message: %x
PurpleFBTVOutServer
PurpleFBServer
IOS_FRAMEBUFFER_PREFIX
%s%s
PurpleMain
PurpleTVOut
%08x %08x vertex shader:
%s%s---
2DRect
%08x %08x fragment shader:
%s%s---
vertex_matrix
texture%d
vertex_velocity_matrix
texmatD
noise_scale
texmatW
render_state
color_matrix
offset
weight
axis
divide
minmax
bgcolor
args
color_dodge
color_lighten
reversed
color_burn
color_darken
function_arg
chroma_matrix0
chroma_matrix1
chroma_matrix2
ycbcr_bias0
ycbcr_bias1
ycbcr_bias2
ycbcr_matrix0
ycbcr_matrix1
ycbcr_matrix2
colorP0
colorP1
colorP2
texmat0
texmat1
texmat2
blend_color0
blend_color1
vertex_position
vertex_color0
vertex_color1
vertex_texcoord0
vertex_texcoord1
vertex_texcoord2
vertex_point_size
mediump
lowp
#extension GL_OES_standard_derivatives : require
#extension GL_EXT_shader_framebuffer_fetch : require
uniform highp vec4 texmat0, texmat1, texmat2;
uniform lowp vec4 function_arg;
uniform mediump float noise_scale;
uniform %s sampler%s texture%d;
uniform lowp sampler%s texture%d;
uniform lowp vec4 blend_color0;
uniform lowp vec4 blend_color1;
uniform mediump vec4 colorP%d[%d];
uniform mediump mat3 ycbcr_matrix%d;
uniform mediump vec3 ycbcr_bias%d;
uniform mediump vec4 render_state;
uniform lowp vec3 color_matrix[3];
uniform lowp vec3 color_matrix[4];
uniform lowp vec4 color_matrix[5];
uniform lowp vec4 color_dodge;
uniform lowp vec4 color_lighten;
uniform lowp float reversed;
uniform lowp vec4 color_burn;
uniform lowp vec4 color_darken;
varying lowp vec4 color0;
varying lowp vec4 color1;
varying highp vec2 texcoord%d_%d;
varying highp vec3 texcoordD;
varying highp vec3 texcoordN;
varying mediump vec2 velocity;
void main(void) {
CA_EMPTY_SHADERS
  gl_FragData[0] = vec4(0.0);
  gl_FragData[1] = vec4(0.0);
  return;
highp vec2 texcoord0_0 = vec2(gl_PointCoord.s, 1.0 - gl_PointCoord.t);
  lowp vec4 d%d = texture%sProj(texture%d, texcoordD);
  lowp vec4 d%d = gl_LastFragData[%d];
texcoord
  mediump vec2 tc%d_%d = radialCoord(texcoord%d_%d);
assemble_fragment_shader
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/ogl/ogl-gl.cpp
i > 0
key->function.f.image_func[i - 1] == OGL_IMAGE_IDENTITY || key->function.f.image_func[i - 1] == OGL_IMAGE_DEST
tlum
  mediump vec2 tlum%d_%d = vec2(dot(%c%d.rgb, vec3(.2125, .7154, .0721)) * texcoord%d_%d.y + texcoord%d_%d.x, 0.5);
  %s vec4 %c%d = texture%s(texture%d, %s%d_%d);
  %s vec4 %c%d;
    highp vec4 f;
    f.xy = fract(%s%d_0 / texmat%d.xy);
    f.xy = fract(%s%d_0);
    f.zw = vec2(1.) - f.xy;
    f = f.xzxz * f.yyww;
    %c%d = texture%s (texture%d, %s%d_%d) * f.w;
    %c%d = texture%s (texture%d, %s%d_%d) * f.z + %c%d;
    %c%d = texture%s (texture%d, %s%d_%d) * f.y + %c%d;
    %c%d = texture%s (texture%d, %s%d_%d) * f.x + %c%d;
  lowp vec4 s%d = vec4(t%d.rgb, 1.);
  lowp vec4 s%d = t%d.yxwz;
  lowp vec4 s%d = vec4(t%d.yxw, 1.);
  lowp vec4 s%d = t%d.zyxw;
  lowp vec4 s%d = vec4(t%d.zyx, 1.);
  lowp vec4 s%d = t%d.wzyx;
  lowp vec4 s%d = vec4(t%d.wzy, 1.);
  lowp vec4 s%d = vec4(0., 0., 0., t%d.a);
  lowp vec4 s%d = squareImage(%s%d_0);
  lowp vec4 s%d = circleImage(%s%d_0);
  lowp vec4 s%d = supercircleImage(%s%d_0);
  lowp vec4 s%d = vec4(0.);
  lowp vec4 s%d = vec4(t%d.r);
  lowp vec4 s%d = vec4(t%d.a);
  lowp vec4 s%d = vec4(clamp(ycbcr_matrix%d * vec3(t%d.r + ycbcr_bias%d.x, t%d.ba + ycbcr_bias%d.yz), 0., 1.), 1.);
  lowp vec4 s%d = t%d*vec4(2.0) + vec4(-0.75);
  s%d = vec4(s%d.zyx, 1.0);
  lowp vec4 s%d = t%d; s%d.rgb = t%d.rgb * t%d.a;
  lowp vec4 s%d = renderImage(t%d.r);
  lowp vec4 s%d = vec4(1.) - t%d;
  lowp vec4 s%d = vec4(t%d.rrr, 1.h);
  lowp vec4 s%d = t%d.rrrg;
  lowp vec4 s%d = vec4(1.0);
  lowp vec4 s%d = t%d.gggg;
  lowp vec4 s%d = t%d.bbbb;
  lowp vec4 s%d = d0;
  lowp vec4 s1 = color0;
  lowp vec4 s2;
    lowp vec4 S = s1, D = d0;
    s2 = R; s1 = d0;
  gl_FragData[0] = %s;
    lowp vec4 S = gl_FragData[%d];
    lowp vec4 D = d%d;
    gl_FragData[%d] = R;
    mediump vec3 n = texture%sProj(texture%d, texcoordN).xyz;
    n = (n - .5) * noise_scale;
    lowp vec3 c = gl_FragData[0].rgb + n*gl_FragData[0].a;
    gl_FragData[0].rgb = clamp(c, 0., gl_FragData[0].a);
gl_FragData[0] = %s;
gl_FragData[0].aaaa
inline_color_shader
opaque && "4DLUT must be opaque!"
    lowp vec4 c = s%d, t;
    lowp vec3 c = s%d.rgb, t;
    c = c / max(s%d.a, .005);
    c = c.r * colorP%d[%d].rgb + c.g * colorP%d[%d].rgb + c.b * colorP%d[%d].rgb + colorP%d[%d].rgb;
    t = abs(c);
    t = pow(t, colorP%d[%d].rgb);
    t = pow(t, colorP%d[%d].rgba);
    c.a = c.a < 0.0 ? t.a * -1.0 : t.a;
    c.r = c.r < 0.0 ? t.r * -1.0 : t.r; c.g = c.g < 0.0 ? t.g * -1.0 : t.g; c.b = c.b < 0.0 ? t.b * -1.0 : t.b;
    t.r = t.r < -colorP%d[%d].r / colorP%d[%d].r ? 0.0 : pow (colorP%d[%d].r * t.r + colorP%d[%d].r, colorP%d[%d].r)
    t.g = t.g < -colorP%d[%d].g / colorP%d[%d].g ? 0.0 : pow (colorP%d[%d].g * t.g + colorP%d[%d].g, colorP%d[%d].g)
    t.b = t.b < -colorP%d[%d].b / colorP%d[%d].b ? 0.0 : pow (colorP%d[%d].b * t.b + colorP%d[%d].b, colorP%d[%d].b)
    t.a = t.a < -colorP%d[%d].a / colorP%d[%d].a ? 0.0 : pow (colorP%d[%d].a * t.a + colorP%d[%d].a, colorP%d[%d].a)
    c.r = c.r < 0.0 ? t.r * -1.0: t.r; c.g = c.g < 0.0 ? t.g * -1.0 : t.g; c.b = c.b < 0.0 ? t.b * -1.0 : t.b;
    t.r = t.r < -colorP%d[%d].r / colorP%d[%d].r ? colorP%d[%d].r : pow (colorP%d[%d].r * t.r + colorP%d[%d].r, colorP%d[%d].r) + colorP%d[%d].r
    t.g = t.g < -colorP%d[%d].g / colorP%d[%d].g ? colorP%d[%d].g : pow (colorP%d[%d].g * t.g + colorP%d[%d].g, colorP%d[%d].g) + colorP%d[%d].g
    t.b = t.b < -colorP%d[%d].b / colorP%d[%d].b ? colorP%d[%d].b : pow (colorP%d[%d].b * t.b + colorP%d[%d].b, colorP%d[%d].b) + colorP%d[%d].b
    t.a = t.a < -colorP%d[%d].a / colorP%d[%d].a ? colorP%d[%d].a : pow (colorP%d[%d].a * t.a + colorP%d[%d].a, colorP%d[%d].a) + colorP%d[%d].a
    t.r = t.r < colorP%d[%d].r ? colorP%d[%d].r * t.r : pow(colorP%d[%d].r * t.r + colorP%d[%d].r,colorP%d[%d].r);
    t.g = t.g < colorP%d[%d].g ? colorP%d[%d].g * t.g : pow(colorP%d[%d].g * t.g + colorP%d[%d].g,colorP%d[%d].g);
    t.b = t.b < colorP%d[%d].b ? colorP%d[%d].b * t.b : pow(colorP%d[%d].b * t.b + colorP%d[%d].b,colorP%d[%d].b);
    t.a = t.a < colorP%d[%d].a ? colorP%d[%d].a * t.a : pow(colorP%d[%d].a * t.a + colorP%d[%d].a,colorP%d[%d].a);
    t.r = t.r < colorP%d[%d].r ? colorP%d[%d].r * t.r + colorP%d[%d].r : pow (colorP%d[%d].r * t.r + colorP%d[%d].r, colorP%d[%d].r) + colorP%d[%d].r;
    t.g = t.g < colorP%d[%d].g ? colorP%d[%d].g * t.g + colorP%d[%d].g : pow (colorP%d[%d].g * t.g + colorP%d[%d].g, colorP%d[%d].g) + colorP%d[%d].g;
    t.b = t.b < colorP%d[%d].b ? colorP%d[%d].b * t.b + colorP%d[%d].b : pow (colorP%d[%d].b * t.b + colorP%d[%d].b, colorP%d[%d].b) + colorP%d[%d].b;
    t.a = t.a < colorP%d[%d].a ? colorP%d[%d].a * t.a + colorP%d[%d].a : pow (colorP%d[%d].a * t.a + colorP%d[%d].a, colorP%d[%d].a) + colorP%d[%d].a;
    c.%c = texture2D(texture%d, vec2(c.%c*colorP%d[%d].%c, colorP%d[%d].%c)).r;
    mediump vec2 c_st = vec2(c.r * colorP%d[%d].x + colorP%d[%d].y, 0.5);
    c = texture2D(texture%d, c_st).rgb;
    c = c * colorP%d[%d].x + colorP%d[%d].y;
    c = texture3D(texture%d, c).rgb;
    c.b = c.b * colorP%d[%d].z;
    lowp float b_mix = fract(c.b);
    c.b = floor(c.b) * colorP%d[%d].w;
    mediump vec2 c_st = vec2(c.r, c.g);
    c_st.r = c_st.r * colorP%d[%d].x + colorP%d[%d].y;
    c_st.g = c_st.g * colorP%d[%d].x * colorP%d[%d].w + colorP%d[%d].y * colorP%d[%d].w + c.b;
    lowp vec3 c0 = texture2D(texture%d, c_st).rgb;
    lowp vec3 c1 = texture2D(texture%d, c_st + vec2(0., colorP%d[%d].w)).rgb;
    c = mix(c0, c1, b_mix);
    mediump vec3 c_stp = c.rgb;
    c.a = c.a * colorP%d[%d].z;
    lowp float a_mix = fract(c.a);
    c.a = floor(c.a) * colorP%d[%d].w;
    c_stp.r = c_stp.r * colorP%d[%d].x + colorP%d[%d].y;
    c_stp.g = c_stp.g * colorP%d[%d].x + colorP%d[%d].y;
    c_stp.b = c_stp.b * colorP%d[%d].x * colorP%d[%d].w + colorP%d[%d].y * colorP%d[%d].w + c.a;
    lowp vec3 c0 = texture3D(texture%d, c_stp).rgb;
    lowp vec3 c1 = texture3D(texture%d, c_stp + vec3(0., 0., colorP%d[%d].w)).rgb;
    c = vec4(mix(c0, c1, a_mix), 1.);
    s%d.rgb = c * s%d.a;
    s%d = vec4(c.rgb, 1.);
%Wlowp vec4 R = %s;
%Wlowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
%Wlowp float DaSa = D.a*S.a;
%WS = S/max(S.a, 0.005);
%WD = D/max(D.a, 0.005);
%WR.rgb += %s * DaSa;
%WR.rgb += %s;
%WR.a += DaSa;
%WR.rgb = min(R.rgb, R.a);
vec4(0.)
S + D*(1. - S.a)
S*D.a
S*(1. - D.a)
S*D.a + D*(1. - S.a)
S*(1. - D.a) + D
D*S.a
D*(1. - S.a)
S*(1. - D.a) + D*S.a
S*(1. - D.a) + D*(1. - S.a)
S + D
D - S
S - D
S + D*(1 - S)
min(S, D)
max(S, D)
D.rgb*S.a + S.rgb*D.a
D.rgb*S.a + S.rgb*(D.a - 2.*D.rgb)
S + D;
R.a = min(1., R.a);
R.rgb = R.a - S.a - D.a + R.rgb
mixLin(D, blend_color0, S)
soverLin(blend_color0, D, S)
soverLinGray(blend_color0, D, S)
D*(1. - S.a) + S*(1. - D.a) + D*S
mix(2.*D.rgb*S.rgb, 2.*(S.rgb*D.a + D.rgb*(S.a - S.rgb)) - S.a*D.a, step(.5*D.a, D.rgb))
min(D.rgb*S.a, S.rgb*D.a)
max(D.rgb*S.a, S.rgb*D.a)
mix(S.aaa, D.rgb*S.a*S.a/max(S.a - S.rgb, .005), step(.005, S.a - S.rgb))
step(.005, S.rgb) * (D.a*S.a - S.a*S.a*(D.a - D.rgb)/max(S.rgb, .005))
2.*D.rgb*S.rgb - (D.rgb / max(D.a, .005))*D.rgb*(2.*S.rgb - S.a)
mix(2.*D.rgb*S.rgb, S.a*D.a - 2.*(D.a - D.rgb)*(S.a - S.rgb), step(.5*S.a, S.rgb))
abs(D.rgb*S.a - S.rgb*D.a)
S.rgb*D.a - D.rgb*S.a
S.rgb*D.a / max(D.rgb*S.a, .005)
D.rgb*S.a - D.a*(S.a - S.rgb)
D.rgb*S.a - D.a*(S.a - 2.*S.rgb)
mix(min(D.rgb*S.a, 2.*S.rgb*D.a), max(D.rgb*S.a, 2.*S.rgb*D.a - D.a*S.a), step(.5*S.a, S.rgb))
vibrantDark(S, D)
vibrantLight(S, D)
vibrantDarkReversed(S, D)
vibrantLightReversed(S, D)
darkenSover(S, D)
lightenSover(S, D)
setLum(setSat(S.rgb, sat(D.rgb)), lum(D.rgb))
setLum(setSat(D.rgb, sat(S.rgb)), lum(D.rgb))
setLum(S.rgb, lum(D.rgb))
setLum(D.rgb, lum(S.rgb))
color0
s0 / s0.a
color0 * s0
color0 * (s0 / s0.a)
color0 * s0 * s1.a
color0 * s0 * (1.0 - s1.a)
mix(s1, s0, color0.a)
mix(color0, s0, function_arg.x)
mix(color0 * s0.a, s0, function_arg.x)
mix(s1, s0, s2.a)
mix(s1, s0, clamp(s2.a*function_arg.x, 0., 1.))
color0 * s0.a
color0 * (1.0 - s0.a)
vec4(color0.rgb * color0.a, color0.a)
mix(s1, d0, s0.a)
mix(s1, s2, s0.a)
mixLin(s1, s2, vec4(s0.aaa, s0.a*s0.a))
mixLin(s1, s2, vec4(s0.rgb, s0.g*s0.g))
mixLin(s1, s2, vec4(s0.rgb, (s0.r + s0.g + s0.b) / 3.0))
precompLin(d0, color1, color0, vec4(s0.aaa, s0.a*s0.a))
precompLin(d0, color1, color0, vec4(s0.rgb, s0.g*s0.g))
precompLin(d0, color0, s1, vec4(s0.rgb, s0.g*s0.g))
vec4(s0.r * color_matrix[0] + s0.g * color_matrix[1] + s0.b * color_matrix[2], s0.a)
vec4(s0.r * color_matrix[0] + s0.g * color_matrix[1] + s0.b * color_matrix[2] + s0.a * color_matrix[3], s0.a)
colorMatrix4x4Bias(s0)
vec4((s0.r / s0.a) * color_matrix[0] + (s0.g / s0.a) * color_matrix[1] + (s0.b / s0.a) * color_matrix[2], 1.)
vec4((s0.r / s0.a) * color_matrix[0] + (s0.g / s0.a) * color_matrix[1] + (s0.b / s0.a) * color_matrix[2] + color_matrix[3], 1.)
colorMatrix4x4BiasDivideAlpha(s0)
perlinBias(s0, function_arg.x)
vec4(color0.rgb + s0.rgb * (1.0 - color0.a), color0.a + s0.a * (1.0 - color0.a))
vibrantDark(s0, d0)
vibrantLight(s0, d0)
mix(s0, s1, function_arg)
uniform highp mat4 vertex_matrix;
uniform highp mat4 vertex_velocity_matrix;
uniform highp vec4 texmatD;
uniform highp vec4 texmatW;
uniform highp vec4 chroma_matrix%d;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color0, vertex_color1;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
attribute mediump vec3 vertex_normal;
varying highp vec2 texcoord%d_0;
void main() {
  gl_Position = vertex_matrix * vertex_position;
  highp vec4 vp1 = vertex_position;
  highp vec4 vp0 = vertex_velocity_matrix * vertex_position;
  velocity = (vp1.xy / vp1.w) - (vp0.xy / vp0.w);
  color0 = vertex_color0;
  color1 = vertex_color1;
  texcoord%d_0 = vertex_texcoord%d * texmat%d.xy + texmat%d.zw;
  texcoord%d_%d = texcoord%d_0 * chroma_matrix%d.xy + chroma_matrix%d.zw;
  texcoord%d_%d = texcoord%d_0;
  texcoord%d_%d = (vertex_texcoord%d + vec2(%g, %g)) * texmat%d.xy + texmat%d.zw;
  texcoordD = vec3(gl_Position.xy * texmatD.xy + texmatD.zw * gl_Position.w, gl_Position.w);
  texcoordN = vec3(gl_Position.xy * texmatW.xy + texmatW.zw * gl_Position.w, gl_Position.w * float(NOISE_SIZE));
GL_INVALID_FRAMEBUFFER_OPERATION;
GL_OUT_OF_MEMORY
GL_STACK_UNDERFLOW
GL_STACK_OVERFLOW
GL_INVALID_OPERATION
GL_INVALID_VALUE
GL_INVALID_ENUM
GL_NO_ERROR
CA_DISABLED_EXTENSIONS
CoreAnimation: disabling OpenGL extension %s
target
T@"CALayer",W,N,V_target
Td,N
<CAStateTransitionElement target=<%@: %p> key=%@ %@>
targetId
CALayer
(cfobject %p)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-cfobject.cpp
"%s"
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-string.cpp
v16@?0Q8
position.x
position.y
position.z
velocity.x
velocity.y
velocity.z
mass
rotation
spin
scale
scaleSpeed
birthRate
color.red
color.green
color.blue
color.alpha
(emitter-behavior %s
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-emitter-layer.cpp
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/ogl/ogl-performance-hud.cpp
group_index < _num_groups
register_counter
counter_index < _num_counters
counter_type != kCounterTypeNone
draw_string
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/ogl/ogl-debug-renderer.h
text
draw_graph2d
_history
to_string
%.2fms
%lld
0x%llx
<1%%
%lld%%
%.2fW
%lldmW
%.2f
0 && "unsupported counter type!"
(match-move-animation
(sourceLayer 0x%lx)
(sourcePoints 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-match-move.cpp
T@"<CALinearMaskLayerDelegate><CALayerDelegate>",W,D
B104@?0{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMLUTData}}8q88q96
Stage = %ld, %zux%zu LUT, %zu grid points
%zux%zu LUT not supported.
unsupported NxM LUT data format
CA_PRINT_COLOR_PROGRAMS
Stage = %ld matrix %ld
    %g %g %g %g
    %g %g %g %g
    %g %g %g %g
B112@?0{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMLUTData}}8q88q96^q104
Stage = %ld, %ld TRCs
TRCs are not the same for each color channel, falling back to cube LUT
lut_index_from_trc_index
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/utilities/CAColorProgram.cpp
lut_index >= 0
    TRC channel %d --> TRCs[%ld], Table: entries = %zu
    TRC channel %d --> TRCs[%ld], Type0: Y = X^%f 
    TRC channel %d --> TRCs[%ld], Type1: Y = (%g*X+%g)^%g [X >= %g],  Y = 0 [X < %g]
    TRC channel %d --> TRCs[%ld], Type2: Y = (%g*X+%g)^%g + %f [X >= %g],  Y = %g [X < %g]
    TRC channel %d --> TRCs[%ld], Type3: Y = (%g*X+%g)^%g [X >= %g],  Y = %g*X [X < %g]
    TRC channel %d --> TRCs[%ld], Type4: Y = (%g*X+%g)^%g + %g [X >= %g], Y = %g*X + %g [X < %g]
B96@?0{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMLUTData}}8^{__CFDictionary=}88
Color matching limited to 3-stage compact format (TRC -> NxM/LUT -> TRC), falling back to cube LUT
No support for more than one NxM LUT, falling back to cube LUT
CGColorConverter:
    %d stages
    %d input components
    %d output components
    %d TRCs
    %d Matrices
    %d NxM LUTs
Failed to iterate CGColorConverter 
'%s' --> '%s'
(compressed-image [%d %d] [%d] %s
UNKNOWN
PVRTC_2
PVRTC_4
ASTC_4x4
ASTC_5x4
ASTC_5x5
ASTC_6x5
ASTC_6x6
ASTC_8x5
ASTC_8x6
ASTC_8x8
ASTC_10x5
ASTC_10x6
ASTC_10x8
ASTC_10x10
ASTC_12x10
ASTC_12x12
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-image-compressed.mm
value
RGBA10XR
Gray8
bottom
topLeft
topRight
bottomLeft
bottomRight
resize
resizeAspect
resizeAspectFill
nearest
trilinear
lanczos
stretch
repeat
onOrderIn
onOrderOut
zPosition
anchorPoint
anchorPointZ
T{CATransform3D=dddddddddddddddd}
TB,GisHidden
TB,GisDoubleSided
TB,GisGeometryFlipped
superlayer
T@"CALayer",R
T@"CALayer",&
contentsGravity
contentsCenter
contentsFormat
TB,GisOpaque
edgeAntialiasingMask
backgroundColor
cornerRadius
maskedCorners
borderWidth
borderColor
compositingFilter
backgroundFilters
rasterizationScale
shadowColor
shadowOpacity
shadowOffset
shadowRadius
shadowPath
actions
T@"<CALayerDelegate>",W
%@ - changing property %@ in transform-only layer, will have no effect
hidden
opaque
needsDisplayOnBoundsChange
needsLayoutOnGeometryChange
masksToBounds
clearsContext
geometryFlipped
doubleSided
invertsShadow
shadowPathIsBounds
shouldRasterize
rasterizationPrefersDisplayCompositing
preloadsCache
sortsSublayers
flipsHorizontalAxis
canDrawConcurrently
frozen
allowsHitTesting
allowsDisplayCompositing
wantsExtendedDynamicRangeContent
allowsGroupBlending
allowsEdgeAntialiasing
allowsGroupOpacity
drawsAsynchronously
contentsDither
continuousCorners
cornerContentsMasksEdges
contentsOpaque
hitTestsAsOpaque
literalContentsCenter
contentsContainsSubtitles
inheritsTiming
definesDisplayRegionOfInterest
attempting to modify read-only layer %@
CALayerReadOnly
onLayout
B8@?0
context
onDraw
%s (CALayer)
-[%@ display]: Ignoring bogus layer size (%f, %f), contentsScale %f, backing store size (%f, %f)
layer %@ is a part of cycle in its layer tree
replaced layer %@ is not a sublayer of %@
CALayerInvalid
expecting model layer not copy: %@
CALayerInvalidTree
may only -hitTest: a layer or its presentation layer
%@ - calling -hitTest: on transform-only layer
CoreAnimation: zPosition should be within (-FLT_MAX, FLT_MAX) range.
CALayerInvalidGeometry
CALayer position contains NaN: [%g %g]
CALayer bounds contains NaN: [%g %g; %g %g]
CALayerAnimationKeys
CALayerAnimations
%@=%@
; animations = [
%s = %s; 
mask = %@; 
%s%@
sublayers = (
contents = %@; 
delegate = %@; 
bounds = CGRect (%g %g; %g %g); 
position = CGPoint (%g %g); 
-[CALayer _initWithReference:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/api/CALayer.mm
[layer isKindOfClass:[self class]]
CALAYER_ALLOWS_GROUP_OPACITY
CALAYER_ALLOWS_EDGE_ANTIALIASING
CALayerAllowsEdgeAntialiasing
CALayerAllowsGroupOpacity
UIViewEdgeAntialiasing
UIViewGroupOpacity
momentOfInertia
coefficientOfRestitution
meshTransform
T@"CAMeshTransform",C
acceleratesDrawing
TB,GisFrozen
allowsContentsRectCornerMasking
contentsScaling
T{CGAffineTransform=dddddd}
contentsMultiplyColor
contentsSwizzle
cornerContents
cornerContentsCenter
motionBlurAmount
disableUpdateMask
sizeRequisition
backgroundColorPhase
presentationModifiers
behaviors
velocityStretch
[CALayer setAllowsContentsRectCornerMasking:] is deprecated!
[CALayer allowsContentsRectCornerMasking] is deprecated!
animations
cornerContents must be a CGImageRef for now!
cannot add layer to one context while visible in another
layer %@ has a superlayer; so cannot be added to a context
CoreAnimation: Message::send_message() returned 0x%x
Failed to allocate %zu bytes, requested = %zu, old size = %zu
encode_data_async
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-coding.cpp
len > 0
CoreAnimation: Decoder has no context!
CoreAnimation: Context ID mismatch!
CoreAnimation: Context is destroyed!
%s - _buffer_point = %p, _buffer_end = %p
decode_int64
%s (%u) : %s
decode_int32
%s : %d
%s - _buffer_point = %p, len = %zu, _buffer_end = %p
decode_bytes
decode_int8
decode_int16
%s - max_size = %zu, tag = %zu
decode_data
%s - buf = NULL
%s - _attach_list = %p, type = %u
%s - max_size = %zu, size = %zu
decode_data_async
decode_port
%s - ptr = NULL
decode_atom
%s - string = NULL
%s - data = NULL
decode_cfobject
%s - value = NULL
%s - key = %p, value = %p
%s - code = %d
decode_colorspace
%s - atoms = NULL
decode_keypath
%s - ptr = NULL, required_type = %u, type = %u, id = %llu
decode_object
%s - required_type = %u, type = %u
unable to decode object of type %d
%s - ptr == NULL, type = %u
%s - type = %u
decode_array_object
CA_BENCHMARK
CoreAnimation: invalid command
CoreAnimation: serialization error from context %x
CoreAnimation: unhandled combiner function: %d
CA_LOG_IMAGE_QUEUE_FRAMES
CAImageQueue %p: frame %f (%llx) used %d: %f (%llx)
Collectable client message err=0x%x
 async
 protected
 changed
(image-queue%s%s%s
(generation 0x%08x)
(rotationFlags %d)
(edr-deadline %f)
(samples
unknown
buffer
iosurface
flushed
consumed
displayed
unconsumed
 opaque
 flipped
(0x%llx %s 0x%x, [%d %d; rot %d] %f (generation 0x%08x) %s%s%s)
Composite client message err=0x%x
CAImageQueue
<CAImageQueue %p>
CoreAnimation: Warning! CAImageQueueSetOwner() is deprecated and does nothing. Please stop calling this method.
portrait
portraitUpsideDown
landscapeLeft
landscapeRight
NTSC_M
PAL_BGHID
composite
component
digital
YCbCr
captureDisplay
disableScaling
disableRotation
disableOverscan
disableYUV
replayContexts
noReplayScaling
kCADisplayName
kCADisplayDeviceName
kCADisplayId
kCADisplayFrameCount
kCADisplaySkippedFrameCount
kCADisplayClonedFrameCount
kCADisplaySkippedClonedFrameCount
hostProcessId
hostContextId
disableUpdatesOnMainDisplay
displays
T@"NSArray",R
mirroringEnabled
TB,GisMirroringEnabled,V_mirroringEnabled
rendererFlags
TB,GisSecure
[CAWindowServer taskPortOfContextId:] is deprecated! Use [CAWindowServer taskNamePortOfContextId:] instead.
<CAWindowServer:%p %@>
[CAWindowServer isSecure] is deprecated! Please call isSecure on the specific CAWindowServerDisplay!
[CAWindowServer setSecure:] is deprecated! Please call setSecure: on the specific CAWindowServerDisplay!
clones
T@"NSSet",R
cloneMaster
T@"CAWindowServerDisplay",R
blanked
TB,GisBlanked
orientation
invertsColors
allowsExtendedDynamicRange
grayscale
TB,GisGrayscale
contrast
maximumBrightness
idealRefreshRate
usesPreferredModeRefreshRate
TVMode
TVSignalType
disablesUpdates
disabled
<CAWindowServerDisplay:%p %@ %gx%g>
%@: Ignoring call to setTVSignalType: in simulator.
%@: TVMode is deprecated!
%@: setTVMode: is deprecated!
[CAWindowServerDisplay setAllowsVirtualModes:] is deprecated!
[CAWindowServerDisplay allowsVirtualModes] is deprecated!
CoreAnimation: [CAWindowServerDisplay setColorMode:] is deprecated!
[CAWindowServerDisplay usesPreferredModeRefreshRate] is deprecated!
[CAWindowServerDisplay setUsesPreferredModeRefreshRate:] is deprecated!
[CAWindowServerDisplay idealRefreshRate] is deprecated!
[CAWindowServerDisplay setIdealRefreshRate:] is deprecated!
[CAWindowServerDisplay maximumRefreshRate] is deprecated!
[CAWindowServerDisplay setMaximumRefreshRate:] is deprecated!
[CAWindowServerDisplay minimumRefreshRate] is deprecated!
[CAWindowServerDisplay setMinimumRefreshRate:] is deprecated!
[CAWindowServerDisplay overscanAmount] - horizontal and vertical overscan amounts are not equal!
[CAWindowServerDisplay overscanAmount] is deprecated. Please use -overscanAmounts!
[CAWindowServerDisplay setOverscanAmount:] is deprecated. Please use -setOverscanAmounts:!
%@: %@ is not our clone
%@: can't remove a nil clone display
CAWindowServerDisplay
%@: %@ is already a clone
%@: can't clone a display that's a clone
%@: can't clone a display to itself
%@: can't clone a display to nil
[CAWindowServerDisplay taskPortOfContextId:] is deprecated! Use [CAWindowServerDisplay taskNamePortOfContextId:] instead.
B16@?0@"CAWindowServerDisplay"8
CA_CLONE_DISPLAY
CA_MAIN_DISPLAY_SCALE
CA_EXTERNAL_DISPLAY_SCALE
Type `%s' has no property setter
source
T@"CAStateElement",&,N,V_source
function
T@"CAValueFunction",&
CAValueFunction
CAForceFieldFunction
CAForceFieldLayer
CAForceFieldEnabled
CAForceFieldName
non-zero
absolute
relative
paced
autoReverse
fade
moveIn
push
reveal
fromRight
fromLeft
fromTop
fromBottom
capacity
count
%@: attempted to add modifier past group's capacity
CAPresentationModifierGroup
%@: cannot create group with 0 capacity
T@"CAPresentationModifierGroup",R
%@: value can't be nil
CAPresentationModifier
<%@:%p; keyPath = %@; additive = %d>
timingFunction
T@"CAMediaTimingFunction",&
T@"<CAAnimationDelegate>",&
removedOnCompletion
TB,GisRemovedOnCompletion
attempting to modify read-only animation %@
CAAnimationImmutable
subtype
startProgress
endProgress
values
keyTimes
timingFunctions
calculationMode
tensionValues
continuityValues
biasValues
rotationMode
unknown animation calculation mode: %@
TB,GisAdditive
cumulative
TB,GisCumulative
valueFunction
fromValue
toValue
byValue
stiffness
damping
initialVelocity
settlingDuration
CoreAnimation: damping must be greater than or equal to 0.
CoreAnimation: stiffness must be greater than 0.
CoreAnimation: mass must be greater than 0.
sourceLayer
T@"CALayer",W
sourceLayerRenderId
sourceContextId
targetsSuperlayer
sourcePoints
appliesX
appliesY
appliesScale
appliesRotation
beginTimeMode
discretizesTime
roundsToInteger
startAngle
endAngle
options
transitionFlags
v40@?0@8{CAPoint3D=ddd}16
{CAPoint3D=ddd}16@?0@8
v64@?0@8{CGAffineTransform=dddddd}16
{CGAffineTransform=dddddd}16@?0@8
v144@?0@8{CATransform3D=dddddddddddddddd}16
{CATransform3D=dddddddddddddddd}16@?0@8
v48@?0@8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@?0@8
v32@?0@8{CGSize=dd}16
{CGSize=dd}16@?0@8
v32@?0@8{CGPoint=dd}16
{CGPoint=dd}16@?0@8
v24@?0@8d16
d16@?0@8
v20@?0@8f16
f16@?0@8
v24@?0@8Q16
Q16@?0@8
v24@?0@8q16
q16@?0@8
v20@?0@8I16
I16@?0@8
v20@?0@8i16
i16@?0@8
v20@?0@8S16
S16@?0@8
v20@?0@8s16
s16@?0@8
v20@?0@8C16
C16@?0@8
v20@?0@8c16
c16@?0@8
v20@?0@8B16
B16@?0@8
v24@?0@8r^v16
r^v16@?0@8
CoreAnimation: updates deferred for too long
com.apple.CoreAnimation.CAWindowServer.Performance
LayerTree
RenderShaderCompiles
RenderOffscreenPasses
UpdatePrepareLayer0Count
UpdatePrepareLayerCount
UpdateRenderTime
UpdateCreationTime
UpdateInputDelay
UpdateInputTime
UpdateTime
WarningTime
PerfOffscreenThreshold
PerfInputDelayThreshold
PerfTimeThreshold
PerfWarnings
** Render #%d tree at time %f **
~Server
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/windowserver/windowserver-server.cpp
_shutdown_called
 (secure)
%s display%s:
 (visible)
  %x: level %g; pid %d [%s]%s%s
(secure) 
== context %x; level %g; pid %d [%s] %sat time %f ==
  <null>
Server: %s
CoreAnimation: timed out freeze semaphore
(meshTransform [invalid])
(meshTransform
(vertex %d (%g %g) (%g %g %g))
(face %d (%d %d %d %d) (%d %d %d %d) (%g %g %g %g))
(normal %d (%g %g %g))
CoreAnimation: invalid mesh transform - too few edges
CoreAnimation: invalid mesh transform - vertex index
CoreAnimation: invalid mesh transform - paired edge
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-mesh-transform.cpp
display_timer_callback: unexpected state (now:%llx < expected:%llx)
CADisplayTimer
<CADisplayTimer %p>
even-odd
miter
butt
fillRule
strokeColor
strokeStart
strokeEnd
lineWidth
miterLimit
lineCap
lineJoin
lineDashPhase
lineDashPattern
(surface 0x%x [%d %d] 
 colormatching-disabled
 (colorspace "%s")
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-surface.cpp
(beginTime %f)
(duration %f)
(autoreverses true)
forwards
both
backwards
(fillMode %s)
(speed %f)
(timeOffset %f)
repeatCount
repeatDuration
(%s %f)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-timing.cpp
kCADebugOptionsDidChange
CA_IQ_INTERPOLATION
CA_DUMP_SURFACES
CA_DISPLAY_HYSTERESIS_NITS
CA_ENABLE_UBERSHADER
CA_COLOR_ACTIVE_REGIONS
CA_DISABLE_LOW_LATENCY
CA_PERF_HUD
CA_VSYNC_SIGNPOST
CA_FORCE_RESOURCE_SYNC
CA_EMIT_DEBUG_SIGNPOSTS
CA_DISABLE_COLORMATCH_UNTAGGED
CA_DUMP_SURFACES_PER_DRAW
CA_PRINT_OFFSCREENS
CA_PRINT_SHADERS
CA_COLOR_BACKDROPS
CA_PRINT_BACKDROPS
CA_COLOR_UNTAGGED
CA_COLOR_MATCHED
CA_PRINT_ANIMATIONS
CA_DISABLE_DETACHED
CA_COLOR_CACHED
CA_COLOR_DETACHED
CA_COLOR_OFFSCREEN
CA_ALWAYS_RENDER
CA_DISABLE_RENDER
CA_COLOR_SUBPIXEL
CA_LOG_TRIPLE_BUFFERING
CA_DISABLE_DIRTY_REGIONS
CA_DISABLE_OCCLUSION_CULLING
CA_PRINT_PERF
CA_LOG_IMAGE_COPIES
CA_LOG_MEMORY_USAGE
CA_LOG_IMPLICIT_TRANSACTIONS
CA_PRINT_OBJECTS
CA_PRINT_TREE
CA_AUTO_FLUSH
CA_COLOR_NO_WAIT
CA_COLOR_OPAQUE
CA_COLOR_COPY
CA_COLOR_FLUSH
%d transactions
frame
frames
pass
passes
; %d %s (%.3gs duration, %.3gfps frame rate, %.3g %s, %.2gs gap)
; %d cache miss%s
; %.3g MP area
; %.3g MP drawn (%.3g overdraw)
; %.3g MB uploaded
CoreAnimation buffers: currently %.3gMB; maximum %.3gMB
inheritsSecurity
rendersAsynchronously
hidesSourceLayer
matchesOpacity
matchesPosition
matchesTransform
(distance-field-layer
(renderMode %s)
(invertsShape true)
(foregroundColor #%08x)
(offset %g)
(sharpness %g)
(lineWidth %g)
fill
stroke
inner-stroke
outer-stroke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-distance-field-layer.cpp
instanceCount
instanceDelay
instanceTransform
instanceColor
instanceRedOffset
instanceGreenOffset
instanceBlueOffset
instanceAlphaOffset
90cw
90ccw
180cw
180ccw
rotate
fontSmoothingStyle
<undefined>
CATransform3D (%g %g %g %g; %g %g %g %g; %g %g %g %g; %g %g %g %g)
CGAffineTransform (%g %g; %g %g; %g %g)
CAPoint3D (%g %g %g)
CGRect (%g %g; %g %g)
CGSize (%g %g)
CGPoint (%g %g)
%llu
%@ = 
hw.cpu64bit_capable
com.apple.coreanimation-archive
com.apple.coreanimation-bundle
com.apple.coreanimation-xml
TB,R,GisGeometryFlipped
publishedObjectNames
Expected CALayer at root.
stylesDocument
Unable to parse CAPackage from URL: %@
assets
Unable to parse CAPackage: %@
Expected CALayer at root
-[CAPackage _readFromArchiveData:options:error:]
%s: exception %@
publishedObjects
LKStateTransitionElement
LKStateTransition
LKStateSetProperty
LKStateSetValue
LKStateRemoveElement
LKStateRemoveAnimation
LKStateElement
LKStateAddElement
LKStateAddAnimation
LKState
backdrop 0x%lx; update %d; group %p "%s" size %zu; [%d %d; %d x %d]:
  copying to surface [%d %d; %d x %d] scale %g:
backdrop 0x%lx rect [%d %d; %d x %d]
backdrop 0x%lx complete
  applying %d merged group filters (lst %p)
(vector
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-vector.cpp
disableActions
animationDuration
animationTimingFunction
animationDelegate
commitTime
earliestAutomaticCommitTime
completionBlock
animatesFromModelValues
setAnimationDuration:
setAnimationTimingFunction:
setCompletionBlock:
setDisableActions:
setAnimatesFromModelValues:
setCommitTime:
setEarliestAutomaticCommitTime:
setInputTime:
setLowLatency:
lowLatency
+[CATransaction synchronize] called within transaction
May not mark the main thread as a background transaction
CATransactionInvalidThread
@"CAAnimation"24@?0@"CALayer"8@"NSString"16
(frameInterval %f)
(discretizesTime true)
(timingFunction 
(enabled false)
(additive true)
(cumulative true)
(removedOnCompletion false)
(keyPath 
(function 
(from 
(to 
(by 
(calculationMode %s)
(values 
(keyTimes 
(timingFunctions 
(path 
(type %s)
(subtype %s)
(filter 
(options 
(mass %g)
(stiffness %g)
(damping %g)
(velocity %g)
discrete
linear
linearPaced
cubic
cubicPaced
(modifier
(values
 %.10g
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-animation.cpp
type1
time
redAverage
greenAverage
blueAverage
luminanceStandardDeviation
groupName
usesGlobalGroupNamespace
backdropRect
marginWidth
disablesOccludedBackdropBlurs
captureOnly
allowsInPlaceFiltering
T@"<CABackdropLayerDelegate><CALayerDelegate>",W,D
statisticsType
statisticsInterval
invertsShape
sharpness
wave
alignToMotion
valueOverLife
colorOverLife
light
attractor
simpleAttractor
behavior
enablde
CAEmitterBehavior requires `behavior' attribute
(array
%s - null_pointer? %d, n_types %zu, types[0] = %d
decode
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-array.cpp
~ContextState
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/ogl/ogl-context.h
!next && "Imbalanced ContextState push/pop"
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-texture.cpp
v8@?0
CoreAnimation: failed to send fence reply: %x
CoreAnimation: timed out fence %x
CoreAnimation: attempt to check-in to unknown fence port: %x
CoreAnimation: failed to receive fence reply: %x
layerA
layerB
attachmentPointA
attachmentPointB
restLength
T@"<CASpringDelegate>",W
CASpringRestLength
CASpringDamping
CASpringStiffness
CASpringDelegate
CASpringFunction
CASpringAttachmentPointB
CASpringAttachmentPointA
CASpringLayerB
CASpringLayerA
CASpringEnabled
CASpringName
cameraIris
cameraIrisHollowOpen
cameraIrisHollowClose
T@"<CAMLWriterDelegate>",W
 %S="%S"%s
<%S%s
</%S>
&lt;
&gt;
&quot;
&apos;
&amp;
<?xml version="1.0" encoding="UTF-8"?>
xmlns
{CAColorMatrix=ffffffffffffffffffff}
scale(%g, %g, %g) 
scale(%g) 
shearXY(%gdeg) 
shearXZ(%gdeg) 
shearYZ(%gdeg) 
rotate(%gdeg, 1, 0, 0) 
rotate(%gdeg, 0, 1, 0) 
rotate(%gdeg) 
translate(%g, %g, %g) 
perspective(%g) 
matrix(%@)
NSValue
%@ %c
CGImageSource
CoreAnimationErrorDomain
CA_LOG_CLASS_DESCRIPTIONS
creating class description for %s
  %s: %s
    type %d: %s flags 0x%x
classDescription_locked
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/api/CAObject.mm
info != NULL
unhandled getter type: %d
unhandled setter type: %d
{CGPoint=dd}
{CGSize=dd}
{CGRect={CGPoint=dd}{CGSize=dd}}
{CATransform3D=dddddddddddddddd}
{CAPoint3D=ddd}
[%@ initWithCoder]: ignoring exception %@
sublayers array %@ contains non-layer %@
__CACodingContents
v@:^v
^v@:
v@:@
v@:@?
@?@:
v@:B
v@:c
v@:C
v@:s
v@:S
v@:i
v@:I
v@:l
v@:L
v@:q
v@:Q
v@:f
v@:d
v@:{CGPoint=dd}
{CGPoint=dd}@:
v@:{CGSize=dd}
{CGSize=dd}@:
v@:{CGRect={CGPoint=dd}{CGSize=dd}}
{CGRect={CGPoint=dd}{CGSize=dd}}@:
v@:{CATransform3D=dddddddddddddddd}
{CATransform3D=dddddddddddddddd}@:
v@:{CGAffineTransform=dddddd}
{CGAffineTransform=dddddd}@:
v@:{CAPoint3D=ddd}
{CAPoint3D=ddd}@:
translation.z
translation.y
translation.x
translation
scale.z
scale.y
scale.x
scale.xy
rotation.y
rotation.x
rotation.z
size.height
size.width
origin.y
origin.x
size
origin
UIApplicationDidEnterBackgroundNotification
suckEffect
(proxy %d 0x%llx)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-proxy.cpp
port_name
port_number
client_port_number
definesDisplayBounds
displayFilter
bitsPerComponentHint
CoreAnimation: [CAContext setFence:count:] is deprecated. Ignoring!
TI,R,D
T@"CALayer",&,D
colorSpace
T^{CGColorSpace=},D
commitPriority
TI,D
colorMatchUntaggedContent
TB,D
T@"NSString",C,D
T@"NSDictionary",R,D
level
Tf,D
TB,D,GisSecure
desiredDynamicRange
Tf,V_desiredDynamicRange
valid
TB,R,D
(pattern [%g %g %g %g] [%g %g]
matrix
(cell 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-pattern.cpp
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/render/render-gradient-layer.cpp
axial
radial
colors
locations
startPoint
endPoint
colorMap
T@"NSObject<CAStateControllerDelegate>",W
"%@" "%@"
trying to set state not in given layer.
trying to set state of nil layer.
trying to read state of nil layer.
rippleEffect
CGBitmapContextSetData failed, bpc %zu, bpp %zu, info %u
CAGetColorSpace
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-584.39/LayerKit/utilities/CACGUtil.cpp
false
rgb(
kCARendererColorSpace
kCARendererDeepBuffers
kCARendererFlags
T@"CAContext",&
T@"<CARendererDelegate>",W
<nil>
CAEmitterLayer
CAEmitterLayerPrivate
CATransform3DAdditions
CAStateControllerTransition
CAAnimationDelegate
NSObject
CAStateController
CADisplay
CADisplayAttributes
CADisplayMode
CADisplayLink
CADisplayLinkPrivate
NSCoding
NSSecureCoding
CACodingProxy
LKNSArrayCodingProxy
LKNSDictionaryCodingProxy
CACGPathCodingProxy
CACGPathCodingSegment
CACGPatternCodingProxy
LKCGImageCodingProxy
LKCGColorCodingProxy
LKNSValueCodingProxy
CADebuggingArchiverDelegate
NSKeyedArchiverDelegate
CAIOSurfaceCodingProxy
CACodingCAMLWriterDelegate
CAMLWriterDelegate
CACoderAdditions
CAStateControllerUndo
CAStateRecorder
CAMLParser
CAFilter
NSMutableCopying
NSCopying
CAState
CAMeshTransform
CAMeshInterpolator
CAMutableMeshTransform
CAValueFunction
CAMediaTimingFunction
CAMediaTimingFunctionBuiltin
CAMediaTimingFunctionPrivate
CAStateRemoveAnimation
CARenderValue
CATiledLayer
CATiledLayerPrivate
CAColorMatrixAdditions
CATextLayer
CATextLayerPrivate
CAScrollLayer
CALayerScrolling
CAStateTransition
CAEmitterCell
CAMediaTiming
CAPropertyInfo
CAEmitterCellPrivate
CALight
CABehavior
CADynamicsBehavior
CAStateAddAnimation
CAEAGLLayer
EAGLDrawable
CAEAGLLayerPrivate
CAStateControllerAnimation
CAPoint3DAdditions
CAStateControllerLayer
CAStateAddElement
CAStateTransitionElement
CALinearMaskLayer
CALayer
CAAction
CALayerFunctions
CAActionAdditions
CALayerPrivate
CAStateSetValue
CALayerArray
CAWindowServer
CAWindowServerDisplay
CATransformLayer
CAStateElement
CAForceField
CAPresentationModifierGroup
CAPresentationModifier
CAAnimation
CATransition
CAAnimationGroup
CAKeyframeAnimation
CAPropertyAnimation
CABasicAnimation
CASpringAnimation
CAMatchMoveAnimation
CAAnimatableValue
CAAnimationPrivate
CAShapeLayer
CALayerHost
CAPortalLayer
CAReplicatorLayer
CASmoothedTextLayer
CAPackage
CATransaction
CATransactionCompletionItem
CATransactionPrivate
CATransactionInternal
CABackdropLayer
CADistanceFieldLayer
CAEmitterBehavior
CASpring
CAMLWriter
CASuspendNotification
_CAObjectInternal
CAContextImpl
CAContext
CASlotProxy
CAStateRemoveElement
CAGradientLayer
CAGradientLayerPrivate
CARenderer
CARendererPrivate
@24@0:8@16
B16@0:8
B24@0:8#16
v24@0:8@16
^{Layer=^^?{Atomic={?=i}}{Data={Vec4<float>=ffff}CCCCb3b3b4b4b4b4b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1{Vec2<double>=dd}{Rect=dddd}}{Ref<CA::Render::Object>=^{Object}}{Ref<CA::Render::TypedArray<CA::Render::Layer> >=^{TypedArray<CA::Render::Layer>}}^{Layer}{Ref<CA::Render::Layer::Ext>=^{Ext}}{Ref<CA::Render::TypedArray<CA::Render::Animation> >=^{TypedArray<CA::Render::Animation>}}{Ref<CA::Render::Handle>=^{Handle}}}36@0:8^{Transaction=^{Shared}i^{HashTable<CA::Layer *, unsigned int *>}^{SpinLock}I^{Level}^{List<void (^)()>}^{Command}^{Deleted}^{List<const void *>}^{Context}^{HashTable<CA::Layer *, CA::Layer *>}^{__CFRunLoop}^{__CFRunLoopObserver}^{LayoutList}^{List<CA::Layer *>}{Atomic={?=i}}b1b1b1b1b1}16I24^I28
v16@0:8
B20@0:8I16
I20@0:8I16
@16@0:8
f16@0:8
v20@0:8f16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
d16@0:8
v24@0:8d16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
v20@0:8B16
I16@0:8
v20@0:8I16
v24@0:8^{CGPath=}16
r^{CGPath=}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CATransform3D=dddddddddddddddd}16@0:8
@144@0:8{CATransform3D=dddddddddddddddd}16
@"CAStateController"
@"CALayer"
@"CAStateTransition"
@"NSString"
@"NSMutableArray"
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
v28@0:8@16B24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v32@0:8@16@24
@24@0:8^{Display=^^?@^{__CFString}^{__CFString}III^{__CFString}{ModeSet={vector<CA::WindowServer::Display::Mode, std::__1::allocator<CA::WindowServer::Display::Mode> >=^{Mode}^{Mode}{__compressed_pair<CA::WindowServer::Display::Mode *, std::__1::allocator<CA::WindowServer::Display::Mode> >=^{Mode}}}}{Mode=(?={?=b16b16b24b1b4b2}Q)}{Mode=(?={?=b16b16b24b1b4b2}Q)}{Bounds=iiii}{Bounds=iiii}{Vec2<float>=ff}iIiddI{DisplayShmemInfo=^^?{SpinLock={?=i}}^{Shmem}^{DisplayTimings}}I{EDIDAttributes=iiii}b1b1b1b1b1b1b1b1}16
q16@0:8
i16@0:8
{EDIDAttributes="dolbyVision"i"pqEOTF"i"bt2020YCC"i"hdrStaticMetadataType1"i}
@32@0:8{EDIDAttributes=iiii}16
{Mode="u"(?="s"{?="width"b16"height"b16"refresh_rate"b24"is_virtual"b1"pixel_format"b4"color_range"b2}"uint64"Q)}
@"CADisplay"
@32@0:8{Mode=(?={?=b16b16b24b1b4b2}Q)}16@24
{Mode=(?={?=b16b16b24b1b4b2}Q)}16@0:8
v32@0:8Q16Q24
@24@0:8^{DisplayLinkItem=^{Display}^v:^vii{Mutex={_opaque_pthread_mutex_t=q[56c]}}{Condition={_opaque_pthread_cond_t=q[40c]}}^{_opaque_pthread_t}@{Ref<CA::Display::DisplayLink>=^{DisplayLink}}^{List<const __CFString *>}QQQQQ{Atomic={?=i}}b1b1}16
v24@0:8q16
@32@0:8@16:24
@40@0:8@16@24:32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSArray"
@"NSDictionary"
^{CGPath=}
[3{CGPoint="x"d"y"d}]
@24@0:8r^{CGPathElement=i^{CGPoint}}16
^{CGPattern=}
^{CGImage=}
^{CGColor=}
(?="point"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}"rect"{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}"transform"{CATransform3D="m11"d"m12"d"m13"d"m14"d"m21"d"m22"d"m23"d"m24"d"m31"d"m32"d"m33"d"m34"d"m41"d"m42"d"m43"d"m44"d}"point3d"{CAPoint3D="x"d"y"d"z"d}"color_matrix"{CAColorMatrix="m11"f"m12"f"m13"f"m14"f"m15"f"m21"f"m22"f"m23"f"m24"f"m25"f"m31"f"m32"f"m33"f"m34"f"m35"f"m41"f"m42"f"m43"f"m44"f"m45"f})
@32@0:8@"NSKeyedArchiver"16@24
v32@0:8@"NSKeyedArchiver"16@24
v40@0:8@"NSKeyedArchiver"16@24@32
v24@0:8@"NSKeyedArchiver"16
@32@0:8@16@24
v40@0:8@16@24@32
@"NSString"32@0:8@"CAMLWriter"16@24
@"NSURL"32@0:8@"CAMLWriter"16@24
v36@0:8@16@24B32
v40@0:8r^d16Q24@32
B40@0:8^d16Q24@32
@"CAStateControllerUndo"
@"CAState"
v24@0:8@"CAStateElement"16
v24@0:8@"CALayer"16
^{_CAMLParserData=}
B32@0:8r*16Q24
@28@0:8@16B24
@24@0:8^{_NSZone=}16
^{Object=^^?{Atomic={?=i}}}16@0:8
v24@0:8@?16
@56@0:8Q16r^{CAMeshVertex={CGPoint=dd}{CAPoint3D=ddd}}24Q32r^{CAMeshFace=[4I][4f]}40@48
{CAMeshVertex={CGPoint=dd}{CAPoint3D=ddd}}24@0:8Q16
{CAMeshFace=[4I][4f]}24@0:8Q16
@24@0:8q16
@28@0:8@16f24
@48@0:8@16@24@32r^{ValueInterpolator=dddddddddB}40
d24@0:8@16
^{Interpolator=^^?{Atomic={?=i}}{Ref<CA::Render::Object>=^{Object}}{Ref<CA::Render::Object>=^{Object}}{Ref<CA::Render::Object>=^{Object}}{Ref<CA::Render::Object>=^{Object}}{ValueInterpolator=dddddddddB}}
v20@0:8i16
v64@0:8Q16{CAMeshVertex={CGPoint=dd}{CAPoint3D=ddd}}24
v56@0:8{CAMeshVertex={CGPoint=dd}{CAPoint3D=ddd}}16
v24@0:8Q16
v56@0:8Q16{CAMeshFace=[4I][4f]}24
v48@0:8{CAMeshFace=[4I][4f]}16
@20@0:8i16
B32@0:8r^d16^d24
B48@0:8r^d16^d24^?32^v40
^{CAMediaTimingFunctionPrivate=[2f][2f]}
@32@0:8f16f20f24f28
v24@0:8^d16
v32@0:8Q16[2f]24
f20@0:8f16
Q24@0:8[20d]16
^{KeyValueArray=^^?{Atomic={?=i}}I[1^{Object}]}16@0:8
v60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48@52
v52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48
B52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48
^{CGColor=}16@0:8
v24@0:8^{CGColor=}16
{CAColorMatrix=ffffffffffffffffffff}16@0:8
@96@0:8{CAColorMatrix=ffffffffffffffffffff}16
^{CATextLayerPrivate=}
^{__CTTypesetter=}16@0:8
^{__CTLine=}16@0:8
v32@0:8^?16^v24
v40@0:8^?16^v24^B32
v48@0:8^{__CTLine=}16^{CGContext=}24{CGPoint=dd}32
v24@0:8^{CGContext=}16
r^v16@0:8
v24@0:8^v16
v28@0:8@16I24
v40@0:8{CGPoint=dd}16@32
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
[2^v]
v24@0:8@"NSString"16
@"NSArray"16@0:8
v40@0:8{CAPoint3D=ddd}16
{CAPoint3D=ddd}16@0:8
v24@0:8^{Behavior=^^?{Atomic={?=i}}I{Ref<CA::Render::String>=^{String}}IIb8b8{Ref<const CA::Render::Behavior>=^{Behavior}}}16
^?24@0:8r^{_CAPropertyInfo=I[2:]b16b16*^{__CFString}}16
@"CAAnimation"
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
^{_CAEAGLNativeWindow={_EAGLWindowObject=^?^?^?}^{CAEAGLBuffer}IQ{Atomic={?=i}}{Atomic={?=i}}{SpinLock={?=i}}^{_CAImageQueue}@d^{x_list_struct}I^{CAEAGLBuffer}^{CAEAGLBuffer}III^{CAEAGLBuffer}@{Atomic={?=i}}Q{Mutex={_opaque_pthread_mutex_t=q[56c]}}@?b1b1b1b1}
^{_EAGLWindowObject=^?^?^?}16@0:8
v24@0:8^{Transaction=^{Shared}i^{HashTable<CA::Layer *, unsigned int *>}^{SpinLock}I^{Level}^{List<void (^)()>}^{Command}^{Deleted}^{List<const void *>}^{Context}^{HashTable<CA::Layer *, CA::Layer *>}^{__CFRunLoop}^{__CFRunLoopObserver}^{LayoutList}^{List<CA::Layer *>}{Atomic={?=i}}b1b1b1b1b1}16
@40@0:8{CAPoint3D=ddd}16
@"NSTimer"
v24@0:8^{CALinearMaskContext=}16
^{CGColorSpace=}16@0:8
{_CALayerIvars="refcount"i"magic"I"layer"^v}
v144@0:8{CATransform3D=dddddddddddddddd}16
{CGAffineTransform=dddddd}16@0:8
v64@0:8{CGAffineTransform=dddddd}16
{CGPoint=dd}40@0:8{CGPoint=dd}16@32
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
d32@0:8d16@24
@32@0:8{CGPoint=dd}16
B32@0:8{CGPoint=dd}16
v40@0:8@"NSString"16@24@"NSDictionary"32
B32@0:8^{_CARenderRendererInfo=iII}16Q24
^v16@0:8
@24@0:8d16
{_CALayerArrayIvars="layers"^@"count"Q"capacity"Q"mutations"Q"retained"B}
@36@0:8^@16Q24B32
@24@0:8Q16
v24@0:8^@16
v40@0:8^@16{_NSRange=QQ}24
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
^{CAWindowServerImpl=^{__CFArray}I}
@20@0:8I16
^{CAWindowServerDisplayImpl={Mutex={_opaque_pthread_mutex_t=q[56c]}}^{Server}}
@24@0:8^{Server=^^?{SpinLock={?=i}}{Mutex={_opaque_pthread_mutex_t=q[56c]}}@^{Display}^{__CFString}^{ContextItem}QQ^{ContextItem}Q{SpinLock={?=i}}^{PendingOperation}^{Context}^{Shape}I^{Context}^{Renderer}ddd^{__CFDictionary}b1b1b1b1b1b1b1b1b1}16
I32@0:8{CGPoint=dd}16
I40@0:8{CGPoint=dd}16@32
{CGPoint=dd}36@0:8{CGPoint=dd}16I32
v36@0:8^f16f24d28
v28@0:8^f16f24
@"CAStateElement"
@"CAValueFunction"
^{Shmem=^^?{Atomic={?=i}}Q^vI{Atomic={?=i}}^?^v}16@0:8
@36@0:8@16@24B32
@44@0:8@16@24B32@36
B32@0:8^{Animation=^^?{Atomic={?=i}}f{Ref<CA::Render::Timing>=^{Timing}}{Ref<CA::Render::Vector>=^{Vector}}^{__CFString}QIIII}16@24
I24@0:8@16
B24@0:8I16i20
^{Animation=^^?{Atomic={?=i}}f{Ref<CA::Render::Timing>=^{Timing}}{Ref<CA::Render::Vector>=^{Vector}}^{__CFString}QIIII}24@0:8@16
v40@0:8d16@24@32
d24@0:8d16
@28@0:8@16i24
^{_CAPackageData=@@@BB@@}
@48@0:8@16@24@32^@40
v40@0:8@16@24^@32
v48@0:8@16@24@32^@40
#40@0:8@16@24@32
#32@0:8@16@24
@?16@0:8
v28@0:8@?16i24
v32@0:8@?16@24
{CGPoint="x"d"y"d}
^{_CAMLWriterPriv=^{__CFData}^{__CFURL}@^{_CAMLWriterElement}^{__CFString}^{__CFSet}ib1b1b1}
v24@0:8^{_CAMLWriterElement=^{_CAMLWriterElement}^{_CAMLWriterElement}^{_CAMLWriterElement}^^{_CAMLWriterElement}^v^{__CFString}^{_CAMLWriterAttribute}^^{_CAMLWriterAttribute}^{__CFString}I}16
^{Context=I^{Context}{Mutex={_opaque_pthread_mutex_t=q[56c]}}{Weak<const void *>=@B}III@^{Context}^{CGColorSpace}i^{__CFDictionary}IIII^{ObjectCache}@If^{Commit}{Generic=^^?^{Context}}b1b1b1b1b1}
v24@0:8^{CGColorSpace=}16
v28@0:8I16@?20
v24@0:8I16I20
I36@0:8{CGSize=dd}16B32
I40@0:8{CGSize=dd}16B32B36
^{Context=}16@0:8
^{Proxy=^^?{Atomic={?=i}}Q}
^{_CAStateControllerData=@^{__CFDictionary}@@}
v36@0:8@16@24f32
v28@0:8@16f24
v48@0:8@16@24@32@40
v44@0:8@16@24@32f40
^{CARendererPriv=@{Weak<id>=@}@^{Context}^{Renderer}{CGRect={CGPoint=dd}{CGSize=dd}}^{CGColorSpace}^{Update}I[2I][2I]Ib8Q[0c]}
v32@0:8d16^{?=IiqQdq{CVSMPTETime=ssIIIssss}QQ}24
(interpolator (factor %g)
(o%d 
CoreAnimation: GetDisplayInfo returned 0x%x
Failed to register for CADisplay change notifications: 0x%x
Failed to register for CADisplay power notifications: 0x%x
CAML: Failed to encode image: %s
CAMLEncodeLayerTreeToPathWithOptions failed to create output dirs at %s
CAMLEncodeLayerTreeToPathWithOptions options must be a CFDictionary
(image [%d %d] [%d] %s
 colormatching-disabled
 (colorspace "%s")
Failed to validate rowbytes: %zu, levels: %u height: %u
Failed to decode_data_async, size: %zu
Failed to decode shmem.
Image failed to decode! Using null image instead.
CoreAnimation: triple buffered backing store %p
(currentTexture 
(blendedTextures
CoreAnimation: copied CGImageRef %p - mask size
CoreAnimation: copied CGImageRef %p - color matching
CoreAnimation: copied CGImageRef %p - needs color matching
CoreAnimation: copied CGImageRef %p - non-RGB color model
CoreAnimation: ignored CGImageRef %p - bad grayscale 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - bad grayscale image format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - non-native format (%d)
CoreAnimation: copied CGImageRef %p - format not supported by hardware
CoreAnimation: copied CGImageRef %p - no data pointer
CoreAnimation: copied CGImageRef %p - bad image alignment
CoreAnimation: copied CGImageRef %p - bad row alignment
CoreAnimation: copied CGImageRef %p - RGB mask (bug!)
CoreAnimation: ignored CGImageRef %p - bad RGB 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - decode or mask
CoreAnimation: copied CGImageRef %p - bad RGB image format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - bad decode array
CoreAnimation: copied CGImageRef %p - bad mask
CoreAnimation: copied CGImageRef %p - bad mask image format (%d bpp, %d bpc)
CoreAnimation: warning, CGImageProvider returned multiple blocks
CoreAnimation: copied CGImageRef %p - mipmap generation
CG image cache at time %f:
  %p deadline %f %s%s%s%s%s
(force-field
(layer 0x%lx)
Unsupported image format '%s' for default colorspace
CoreAnimation: rendering error %s
(replicatorLayer %d)
(shmem %lu bytes)
CoreAnimation: failed to allocate %ld bytes
Data %p with size %zu underflow
CoreAnimation: failed to query region %p (%zu bytes)
Failed to map %ld bytes with port = %u, protection = %u, err = 0x%x
exported [%d %d] buffer to %s
(%slayer [%.10g %.10g %.10g] [%.10g %.10g %.10g %.10g] [%g %g %g]
[%d pass%s
(name 
(hidden true)
(masksToBounds true)
(geometryFlipped true)
(edgeAntialiasingMask %x)
(disableUpdateMask %x)
(contentsGravity %s)
(contentsOpaque true)
(contentsDither false)
(contentsMultiplyColor %.3g %.3g %.3g %.3g)
(contentsSwizzle %s)
(motionBlurAmount %g)
(doubleSided false)
(sortsSublayers false)
(flipsHorizontalAxis true)
(opacity %g)
(cornerRadius %g)
(backgroundColor 
(backgroundColor (%.3g %.3g %.3g %.0g))
(borderWidth %g)
(borderColor 
(borderColor (%.3g %.3g %.3g %.0g))
(cornerContents 
(continuousCorners true)
(cornerContentsMasksEdges true)
(maskedCorners %x)
(contents %s
(contentsScaling repeat)
(magnificationFilter %s)
(minificationFilter %s)
(lodBias %g)
(inheritsTiming false)
(definesDisplayRegionOfInterest true)
(contentsContainsSubtitles true)
(contentsRect 
(contentsCenter 
(cornerContentsCenter 
(literalContentsCenter true)
(contentsScale %g)
(shouldRasterize true)
(rasterizationPrefersDisplayCompositing true)
(rasterizationScale %g)
(preloadsCache true)
(allowsDisplayCompositing true)
(allowsEdgeAntialiasing true)
(wantsExtendedDynamicRangeContent true)
(allowsGroupOpacity true)
(allowsGroupBlending false)
(allowsHitTesting false)
(hitTestsAsOpaque true)
(shadowColor (%.3g %.3g %.3g %.0g))
(shadowOpacity %g)
(shadowRadius %g)
(shadowOffset [%g %g])
(shadowPath 
(invertsShadow true)
(shadowPathIsBounds true)
(mask 
(sublayers 
(filters 
(backgroundFilters 
(compositingFilter 
(meshTransform 
(animations 
(behaviors 
(modifiers 
(subclass 
 (group-flags [
%s%s
 (offscreen-flags [
(filter %s
(enabled false)
(inputs 
(%s 
Surface %d detach failed: !(contents->is_opaque () || (g.filter_bits () & OGL_FILTER_ALPHA_NONE))
Surface %d detach failed: !c.get_color ().is_white ()
Surface %d detach failed: c.nested_rendering_p ()
Surface %d detach failed: c.render_state () != 0
Surface %d detach failed: !s.screen_space
Surface %d detach failed: s.clip_planes
Surface %d detach failed: !h
Surface %d detach failed: !(l->node->flags & Render::kLayerNodeCanonicalLayer)
Surface %d detach failed: g.has_center ()
Surface %d detach failed: (g.filter_bits () & OGL_FILTER_MIX_TEXCOORDS)
Surface %d detach failed: (l->edge_mask & kAllOuterEdges) != 0 && (g.filter_bits () & OGL_FILTER_SUB)
Surface %d detach failed: l->layer_features & (OGL_MASK_LAYER | OGL_OPACITY | OGL_COMPOSITE_NOT_SOVER)
Surface %d detach failed: !r.update ()->allows_display_compositing ()
Surface %d detach failed: CAGetDebugOption (kCADebugOptionDisableDetached)
Surface %d detach failed: !surface
Surface %d detach failed: !g.transform ().is_affine_2d ()
Surface %d detach failed: "rotation"
Surface %d detach failed: !srcR.is_integral ((Real) 1e-6)
Surface %d detach failed: !l->node->clear_above_and_black_below (cloned)
Surface %d detach failed: !dpy->detach_layer (h, l->node->instance_index, contents, surface, &srcR, &dstR, flags, &copied)
(subpixel-mask-layer
(foregroundColor #%08x)
CoreAnimation: failed to add monotonic cube ((%g, %g) (%g, %g) (%g, %g) (%g, %g))
CoreAnimation: surface %d x %d is too large
CoreAnimation: %d by %d image is too large for GPU, ignoring
CoreAnimation: image stride is too large for GPU, ignoring
CoreAnimation: unsupported graphics hardware
; need three or more texture units
CoreAnimation: maximum %d texture units
CoreAnimation: maximum texture %d pixels
error: failed to export [%d %d] buffer to %s
[%u]
 s:[%u x %u] b:[%u x %u] need-clear:%d%s
 s:framebuffer
(shape-layer
(fillColor 
(fillColor %.3g %.3g %.3g %.3g)
(strokeColor 
(strokeColor %.3g %.3g %.3g %.3g)
(strokeStart %g)
(strokeEnd %g)
(lineWidth %g)
(miterLimit %g)
(dashPhase %g)
(dashPattern 
(fillRule evenOdd)
(lineJoin %s)
(lineCap %s)
== context %x%s%s%s; pid %d [%s] %sat time %f ==
  slot %u:
CoreAnimation: missing mask layer %p
CoreAnimation: missing sublayer %p
(%s)
(%s [%g %g %g %g; %g %g %g %g; %g %g %g %g; %g %g %g %g])
(%s [%g %g %g %g %g %g])
** Render objects at time %f **
%20s %s
%20s %d
CoreAnimation: LayerHost trying to host itself or one of its ancestors (context id %d)
(layer-host %x
(inherits-security true)
CoreAnimation: context hosting changed while locked!
CoreAnimation: insecure context %x - pid %u [%s].
Cannot host %x in context %x - pid %u [%s].
** Render tree at time %f (bounds %d,%d %dx%d) **
CoreAnimation: NULL color space set on context (%x)
(portal-layer 0x%lx
(sourceLayer 0x%lx)
(sourceContext %x)
(hidesSourceLayer true)
(matchesOpacity true)
(matchesPosition true)
(matchesTransform true)
CoreAnimation: user defined spring-functions are unimplemented.
(dynamics-behavior
(springs 
(forceFields 
(springScale %g)
(drag %g)
(angularDrag %g)
CoreAnimation: %d by %d image is too large for software renderer, ignoring
CoreAnimation: invalid commit handler phase! Defaulting to pre-commit.
CoreAnimation: warning, deleted thread with uncommitted CATransaction; created by:
CoreAnimation: warning, deleted thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
CoreAnimation: new transaction fence disabling existing low latency hint.
CoreAnimation: warning, encountered thread with uncommitted CATransaction; created by:
CoreAnimation: warning, encountered thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
(backdrop-layer %ld
(group "%s")
(usesGlobalGroupNamespace true)
(scale %g)
(marginWidth %g)
(backdropRect [%g %g; %g %g])
(captureOnly true)
(allowsInPlaceFiltering true)
(disablesOccludedBackdropBlurs true)
(buffer [%d x %d] scale %g)
collected backdrop group %p buffer %p
Filter merging aborted: layer.bounds == blur.inputBounds
(transition %s
CAML error:%d: 
CAML warning:%d: 
CA:Render:Server:port_set (): mach_port_mod_refs () returned error 0x%x
unable to find bootstrap server: %x
unable to register bootstrap port %s: %x
(pixel-buffer %c%c%c%c [%d %d])
(image-provider [%d %d] [%d %d] [%d %d]
(fillColor #%08x 
CAImageProvider: %.3gMB cached (%.3gMB purgeable); idle %.3gs -> %.3gs
CARenderServerBufferRef is now a CF type. Please use CFRetain/CFRelease instead of CARenderServerDestroyBuffer!
(spring
(layerA 0x%lx)
(layerB 0x%lx)
(attachmentPointA [%g %g])
(attachmentPointB [%g %g])
(stiffness %g)
(restLength %g)
%f %x "%s" (%p): replacing %p (eval %u; frames %u):
%f %x "%s" (%p): adding %p:
%f %x "%s" (%p): not adding %p:
%f %x "%s" (%p): removing all:
%p (eval %u; frames %u):
%f %x "%s" (%p): removing %p (eval %u; frames %u):
%f %x "%s" (%p): collecting %p (t %f; speed %g; eval %u; frames %u):
(path
%g %g m
%g %g l
%g %g %g %g q
%g %g %g %g %g %g c
CoreAnimation: ignoring invalid path
(function %s)
failed to receive purple reply message: %x
failed to send purple message: %x
%08x %08x vertex shader:
%s%s---
%08x %08x fragment shader:
%s%s---
CoreAnimation: disabling OpenGL extension %s
(cfobject %p)
"%s"
(emitter-behavior %s
(values 
(match-move-animation
(timingFunction 
(sourcePoints 
Stage = %ld, %zux%zu LUT, %zu grid points
%zux%zu LUT not supported.
unsupported NxM LUT data format
Stage = %ld matrix %ld
    %g %g %g %g
    %g %g %g %g
    %g %g %g %g
Stage = %ld, %ld TRCs
TRCs are not the same for each color channel, falling back to cube LUT
    TRC channel %d --> TRCs[%ld], Table: entries = %zu
    TRC channel %d --> TRCs[%ld], Type0: Y = X^%f 
    TRC channel %d --> TRCs[%ld], Type1: Y = (%g*X+%g)^%g [X >= %g],  Y = 0 [X < %g]
    TRC channel %d --> TRCs[%ld], Type2: Y = (%g*X+%g)^%g + %f [X >= %g],  Y = %g [X < %g]
    TRC channel %d --> TRCs[%ld], Type3: Y = (%g*X+%g)^%g [X >= %g],  Y = %g*X [X < %g]
    TRC channel %d --> TRCs[%ld], Type4: Y = (%g*X+%g)^%g + %g [X >= %g], Y = %g*X + %g [X < %g]
Color matching limited to 3-stage compact format (TRC -> NxM/LUT -> TRC), falling back to cube LUT
No support for more than one NxM LUT, falling back to cube LUT
CGColorConverter:
    %d stages
    %d input components
    %d output components
    %d TRCs
    %d Matrices
    %d NxM LUTs
Failed to iterate CGColorConverter 
'%s' --> '%s'
(compressed-image [%d %d] [%d] %s
cornerContents must be a CGImageRef for now!
CoreAnimation: Message::send_message() returned 0x%x
CoreAnimation: Decoder has no context!
CoreAnimation: Context ID mismatch!
CoreAnimation: Context is destroyed!
%s (%u) : %s
unable to decode object of type %d
CoreAnimation: serialization error from context %x
CoreAnimation: unhandled combiner function: %d
CAImageQueue %p: frame %f (%llx) used %d: %f (%llx)
Collectable client message err=0x%x
(image-queue%s%s%s
(generation 0x%08x)
(rotationFlags %d)
(edr-deadline %f)
(samples
(0x%llx %s 0x%x, [%d %d; rot %d] %f (generation 0x%08x) %s%s%s)
Composite client message err=0x%x
CoreAnimation: Warning! CAImageQueueSetOwner() is deprecated and does nothing. Please stop calling this method.
CoreAnimation: updates deferred for too long
** Render #%d tree at time %f **
== context %x; level %g; pid %d [%s] %sat time %f ==
CoreAnimation: timed out freeze semaphore
(meshTransform [invalid])
(meshTransform
(vertex %d (%g %g) (%g %g %g))
(face %d (%d %d %d %d) (%d %d %d %d) (%g %g %g %g))
(normal %d (%g %g %g))
CoreAnimation: invalid mesh transform - too few edges
CoreAnimation: invalid mesh transform - vertex index
CoreAnimation: invalid mesh transform - paired edge
display_timer_callback: unexpected state (now:%llx < expected:%llx)
(surface 0x%x [%d %d] 
(beginTime %f)
(duration %f)
(autoreverses true)
(fillMode %s)
(speed %f)
(timeOffset %f)
(%s %f)
CoreAnimation buffers: currently %.3gMB; maximum %.3gMB
(distance-field-layer
(renderMode %s)
(invertsShape true)
(offset %g)
(sharpness %g)
backdrop 0x%lx; update %d; group %p "%s" size %zu; [%d %d; %d x %d]:
  copying to surface [%d %d; %d x %d] scale %g:
backdrop 0x%lx rect [%d %d; %d x %d]
backdrop 0x%lx complete
  applying %d merged group filters (lst %p)
(vector
(frameInterval %f)
(discretizesTime true)
(additive true)
(cumulative true)
(removedOnCompletion false)
(keyPath 
(function 
(from 
(to 
(by 
(calculationMode %s)
(keyTimes 
(timingFunctions 
(path 
(type %s)
(subtype %s)
(filter 
(options 
(mass %g)
(damping %g)
(velocity %g)
(modifier
(values
 %.10g
(array
CoreAnimation: failed to send fence reply: %x
CoreAnimation: timed out fence %x
CoreAnimation: attempt to check-in to unknown fence port: %x
CoreAnimation: failed to receive fence reply: %x
creating class description for %s
  %s: %s
    type %d: %s flags 0x%x
(proxy %d 0x%llx)
(pattern [%g %g %g %g] [%g %g]
(cell 
CGBitmapContextSetData failed, bpc %zu, bpp %zu, info %u
