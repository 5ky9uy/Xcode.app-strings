`ff @UUUU=
?ffffff
3333
?333333
pB33
Bff.B
@ff6A
$@M-[
N@\r
++MJ
?|'f
i@r3
 l@a
pw@L7
 |@)?
@gDio
?33333S7
MbP?
ffffff
@333333
init
release
dealloc
weakReference
delegateWeakReference
didPropagateContents
filters
thumbnailSize
class
initSubclass
alloc
initWithReferencedObject:
copy
bumpChangeSeed
autorelease
referencedObject
notificationDispatcherForCMNotificationCenter:
addListenerWithWeakReference:callback:name:object:flags:
attachSafelyToFigCaptureSession:
removeListenerWithWeakReference:callback:name:object:
detachSafelyFromFigCaptureSession:
_signalInvalidationOfPropagatedContentsIfNecessary
safelyHandleServerConnectionDeathForFigCaptureSession:
arrayWithObjects:count:
videoThumbnailOutputWillEndRenderingThumbnails:
respondsToSelector:
isEqualToString:
objectForKeyedSubscript:
videoThumbnailOutput:willBeginRenderingThumbnailsWithContents:
intValue
objectForSlot:
initialize
contentsRectForFilterAtIndex:thumbnailSize:filterCount:
setFilters:
setThumbnailSize:
setThumbnailContentsDelegate:
thumbnailContentsDelegate
connectionMediaTypes
_handleNotification:payload:
_internal
delegateStorage
delegateOverrideStorage
bufferQueue
remoteQueueMutex
remoteQueueReceiver
exceptionWithName:reason:userInfo:
willChangeValueForKey:
setDelegate:queue:
didChangeValueForKey:
delegate
delegateQueue
supportedAssetWriterOutputFileTypes
containsObject:
stringWithFormat:
connectionWithMediaType:
isLive
recommendedOutputSettingsForConnection:sourceSettings:videoCodecType:fileType:
connections
count
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retain
retainCount
zone
hash
superclass
description
debugDescription
setDelegateOverride:delegateOverrideCallbackQueue:
delegateOverride
setSampleBufferDelegate:queue:
sampleBufferDelegate
sampleBufferCallbackQueue
audioSettings
setAudioSettings:
recommendedAudioSettingsForAssetWriterWithOutputFileType:
canAddConnectionForMediaType:
setWithArray:
inputs
minusSet:
outputs
weakObjectsHashTable
countByEnumeratingWithState:objects:count:
addObject:
videoPreviewLayers
minusHashTable:
initWithConfigurationID:inputs:outputs:videoPreviewLayers:connections:
uniqueInputs:
uniqueOutputs:
uniqueConnections:
uniqueVideoPreviewLayers:
configurationID
_configurationID
_inputs
_outputs
_videoPreviewLayers
_connections
_initWithArray:completionHandler:
uniqueID
initWithArray:copyItems:
preparedPhotoSettingsArrayRequestWithArray:completionHandler:
requestID
_setRequestID:
photoSettingsArray
completionHandler
isCompleted
setCompleted:
_requestID
_photoSettingsArray
_completionHandler
_completed
loopingPlayer
loopingItem
loopingItemCopies
loopRange
loopCount
ivarAccessQueue
playerOriginalActionAtItemEnd
forwardPlaybackStartTime
lastEnqueuedLoopingItem
waitingForLastLoopingCopyToFinish
status
error
playerCurrentItemKVOInvoker
loopingItemStatusKVOInvokers
listeningForItemFailedToPlayToEndTime
initWithPlayer:templateItem:timeRange:
initWithCapacity:
asset
dispatchQueue
statusOfValueForKey:error:
_setupLoopingReturningError:
_changeStatusToFailedWithError:
loadValuesAsynchronouslyForKeys:completionHandler:
removeItem:
setActionAtItemEnd:
_turnOffLooping
arrayWithArray:
setReversePlaybackEndTime:
setForwardPlaybackEndTime:
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
duration
dictionaryWithObjects:forKeys:count:
_calculateNumberOfCopiesNeeded
arrayWithCapacity:
copyWithZone:
addObjectsFromArray:
rate
setRate:
actionAtItemEnd
currentItem
_configureLoopingItem:
insertItem:afterItem:
sharedKVODispatcher
startObservingObject:weakObserver:forKeyPath:options:context:
_isWaitingForLastCopyToFinishSet
cancelCallbacks
objectForKey:
null
indexOfObjectIdenticalTo:
_cleanupAfterPlayingLastLoopingCopy
playerLooperWithPlayer:templateItem:timeRange:
playerLooperWithPlayer:templateItem:
disableLooping
loopingPlayerItems
observeValueForKeyPath:ofObject:change:context:
_looper
connection
getAvgAudioLevelForChannel:
getPeakAudioLevelForChannel:
initWithConnection:
invalidate
averagePowerLevel
peakHoldLevel
volume
setVolume:
isEnabled
setEnabled:
_enabled
_volume
inputPorts
sourceDevice
outputWeakReference
videoPreviewLayerWeakReference
hasActiveObservers
active
enabled
changeSeed
audioInputPort
audioChannels
audioChannelLevels
lastGetAudioLevelsTime
videoInputPort
metadataInputPort
metadataItemInputPort
depthDataInputPort
videoMirroringSupported
automaticallyAdjustsVideoMirroring
videoMirrored
videoOrientationSupported
videoOrientation
videoMinFrameDuration
videoMaxFrameDuration
videoMaxScaleAndCropFactor
videoScaleAndCropFactor
videoRetainedBufferCountHint
preferredVideoStabilizationMode
videoStabilizationEnabled
activeVideoStabilizationMode
hasVideoMinFrameDurationObserver
connectionID
cameraIntrinsicMatrixDeliverySupported
cameraIntrinsicMatrixDeliveryEnabled
debugMetadataSidecarFileEnabled
initWithInputPorts:output:
initWithInputPort:videoPreviewLayer:
mediaType
input
device
output
videoPreviewLayer
sourcesFromFrontFacingCamera
activeFormat
formatDescription
updateAudioChannelsArray
isVideoStabilizationSupported
isVideoStabilizationModeSupported:
initWithArray:
setupInternalStorage
initWithObjects:
teardownObservers
makeObjectsPerformSelector:
isActive
session
defaultCenter
inputPortFormatDescriptionChanged:
addObserver:selector:name:object:
addObserver:forKeyPath:options:context:
_updatePropertiesForFormat:
removeObserver:
removeObserver:forKeyPath:context:
firstObject
sourceID
performFigCaptureSessionOperationSafelyUsingBlock:
updateAudioLevelsArray
indexOfObject:
objectAtIndexedSubscript:
floatValue
lastObject
removeLastObject
isVideoMirroringSupported
_recordingInProgress
numberWithBool:
isVideoOrientationSupported
numberWithInteger:
activeVideoMinFrameDuration
_videoMinFrameDuration
lowestSupportedVideoFrameDuration
highestSupportedVideoFrameDuration
defaultActiveMinFrameDuration
_setActiveVideoMinFrameDuration:
_setVideoMinFrameDuration:
activeVideoMaxFrameDuration
_videoMaxFrameDuration
defaultActiveMaxFrameDuration
_setActiveVideoMaxFrameDuration:
_updateCameraIntrinsicMatrixDeliverySupported
_resolveActiveVideoStabilizationMode:format:
_updateActiveVideoStabilizationMode:bumpChangeSeed:
isCameraIntrinsicMatrixDeliverySupported
videoSupportedFrameRateRanges
maxFrameRate
isVideoRetainedBufferCountHintSupported
position
getValue:
isActiveVideoMinFrameDurationSet
isConnected
_metadataIdentifiers
setMetadataIdentifiers:
rectOfInterest
setMetadataRectOfInterest:
setFormatDescription:
clock
setClock:
setSourceSubType:
ports
setConnectionID:
setMediaType:
figCaptureSourceConfigurationForSessionPreset:
setSourceConfiguration:
supportsQuadraHighResolutionStillImageOutput
isHighResolutionStillImageOutputEnabled
setQuadraHighResCaptureEnabled:
setVideoStabilizationMethod:
videoSettings
setOutputWidth:
setOutputHeight:
unsignedIntValue
setOutputFormat:
setOrientation:
setMirroringEnabled:
setRetainedBufferCount:
sessionPreset
setCameraIntrinsicMatrixDeliveryEnabled:
alwaysDiscardsLateVideoFrames
setDiscardsLateVideoFrames:
usesPreviewSizedBuffers
setDerivedFromPreview:
activeDepthDataFormat
alwaysDiscardsLateDepthData
setDiscardsLateDepthData:
isFilteringEnabled
setFilteringEnabled:
isLivePhotoCaptureEnabled
setIrisMovieCaptureEnabled:
irisMovieCaptureEnabled
livePhotoMovieDuration
setIrisMovieDuration:
livePhotoMovieVideoFrameDuration
setIrisMovieVideoFrameDuration:
isLivePhotoAutoTrimmingEnabled
setIrisMovieAutoTrimMethod:
livePhotoMovieDimensions
figCaptureIrisPreparedSettings
setIrisPreparedSettings:
optimizesImagesForOfflineVideoStabilization
setOptimizesImagesForOfflineVideoStabilization:
isHighResolutionCaptureEnabled
isDepthDataDeliveryEnabled
setDepthDataDeliveryEnabled:
isFilterRenderingEnabled
setFilterRenderingEnabled:
isDualCameraDualPhotoDeliveryEnabled
setBravoDualPhotoDeliveryEnabled:
sinkID
setSinkID:
videoPreviewFilters
setSinkConfiguration:
_updateMaxScaleAndCropFactorForFormat:
connectionWithInputPorts:output:
connectionWithInputPort:videoPreviewLayer:
setupObservers
_setActive:
isVideoMirrored
setVideoMirrored:
_setVideoMirrored:
setAutomaticallyAdjustsVideoMirroring:
setVideoOrientation:
isVideoMinFrameDurationSupported
isVideoMinFrameDurationSet
setVideoMinFrameDuration:
isVideoMaxFrameDurationSupported
isVideoMaxFrameDurationSet
setVideoMaxFrameDuration:
setVideoScaleAndCropFactor:
isVideoStabilizationEnabled
enablesVideoStabilizationWhenAvailable
setEnablesVideoStabilizationWhenAvailable:
setPreferredVideoStabilizationMode:
isCameraIntrinsicMatrixDeliveryEnabled
setVideoRetainedBufferCountHint:
isDebugMetadataSidecarFileEnabled
setDebugMetadataSidecarFileEnabled:
figCaptureConnectionConfigurationForSessionPreset:
isVideoFieldModeSupported
videoFieldMode
setVideoFieldMode:
_supportsVideoFieldMode
_videoFieldMode
isPhotoFormat
openRefCount
configLockRefCount
configLockPid
usingDevice
activeInput
_filterConnectedDevices:withDeviceTypes:mediaType:position:
hasMediaType:
deviceType
predicateWithBlock:
filterUsingPredicate:
numberWithUnsignedInteger:
compare:
sortUsingComparator:
_legacyDevicesWithMediaType:
mutableCopy
_filterConnectedLegacyDevices:
array
_devicesWithDeviceTypes:mediaType:position:
_checkTCCAccess
localizedName
numberWithInt:
_startUsingDevice:
_stopUsingDevice
isOpen
startUsingDevice:
stopUsingDevice
devicesWithMediaType:
devices
defaultDeviceWithMediaType:
defaultDeviceWithDeviceType:mediaType:position:
deviceWithUniqueID:
_devices
_reconnectDevices:
authorizationStatusForMediaType:
requestAccessForMediaType:completionHandler:
modelID
supportsAVCaptureSessionPreset:
isSubjectAreaChangeMonitoringEnabled
setSubjectAreaChangeMonitoringEnabled:
isFaceDetectionSupported
isFaceDetectionDuringVideoPreviewSupported
isFaceDetectionDrivenImageProcessingEnabled
setFaceDetectionDrivenImageProcessingEnabled:
faceRectangle
faceRectangleAngle
providesStortorgetMetadata
setProvidesStortorgetMetadata:
deviceSourceOrigin
isHighDynamicRangeSceneDetectionSupported
isHighDynamicRangeSceneDetectionEnabled
setHighDynamicRangeSceneDetectionEnabled:
isHighDynamicRangeScene
_isHighDynamicRangeScene
_setPhotoSettingsForSceneMonitoring:
setCachesFigCaptureSourceConfigurationChanges:
cachesFigCaptureSourceConfigurationChanges
_setVideoHDREnabled:
_setStillImageStabilizationAutomaticallyEnabled:
isLensStabilizationSupported
isMachineReadableCodeDetectionSupported
isInUseByAnotherApplication
formats
setActiveFormat:
setActiveDepthDataFormat:
activeDepthDataMinFrameDuration
setActiveDepthDataMinFrameDuration:
setActiveVideoMinFrameDuration:
setActiveVideoMaxFrameDuration:
isActiveVideoMaxFrameDurationSet
deviceClock
isLockedForConfiguration
lockForConfiguration:
unlockForConfiguration
open:
close
hasFlash
isFlashAvailable
isFlashActive
isFlashModeSupported:
flashMode
setFlashMode:
_isFlashScene
isFlashSceneDetectedForPhotoOutput
hasTorch
torchLevel
isTorchModeSupported:
isTorchAvailable
isTorchActive
torchMode
setTorchMode:
setTorchModeOnWithLevel:error:
isFocusModeSupported:
focusMode
setFocusMode:
isFocusPointOfInterestSupported
focusPointOfInterest
isAdjustingFocus
setFocusPointOfInterest:
isAutoFocusRangeRestrictionSupported
autoFocusRangeRestriction
setAutoFocusRangeRestriction:
isSmoothAutoFocusSupported
isSmoothAutoFocusEnabled
setSmoothAutoFocusEnabled:
lensPosition
isLockingFocusWithCustomLensPositionSupported
setFocusModeLockedWithLensPosition:completionHandler:
lensAperture
isExposureModeSupported:
exposureMode
setExposureMode:
isExposurePointOfInterestSupported
exposurePointOfInterest
setExposurePointOfInterest:
exposureDuration
ISODigitalThreshold
setExposureModeCustomWithDuration:ISO:completionHandler:
exposureTargetOffset
exposureTargetBias
minExposureTargetBias
maxExposureTargetBias
setExposureTargetBias:completionHandler:
isAdjustingExposure
isWhiteBalanceModeSupported:
whiteBalanceMode
setWhiteBalanceMode:
isAdjustingWhiteBalance
deviceWhiteBalanceGains
grayWorldDeviceWhiteBalanceGains
maxWhiteBalanceGain
isLockingWhiteBalanceWithCustomDeviceGainsSupported
setWhiteBalanceModeLockedWithDeviceWhiteBalanceGains:completionHandler:
chromaticityValuesForDeviceWhiteBalanceGains:
deviceWhiteBalanceGainsForChromaticityValues:
temperatureAndTintValuesForDeviceWhiteBalanceGains:
deviceWhiteBalanceGainsForTemperatureAndTintValues:
isImageControlModeSupported:
automaticallyAdjustsImageControlMode
setAutomaticallyAdjustsImageControlMode:
imageControlMode
setImageControlMode:
automaticallyAdjustsVideoHDREnabled
setAutomaticallyAdjustsVideoHDREnabled:
isVideoHDREnabled
setVideoHDREnabled:
activeColorSpace
setActiveColorSpace:
isWideColorSupported
videoZoomFactor
setVideoZoomFactor:
rampToVideoZoomFactor:withRate:
rampExponentiallyToVideoZoomFactor:withDuration:
isRampingVideoZoom
cancelVideoZoomRamp
dualCameraSwitchOverVideoZoomFactor
minAvailableVideoZoomFactor
maxAvailableVideoZoomFactor
isHDRSupported
isRawStillImageCaptureSupported
isLowLightBoostSupported
isLowLightBoostEnabled
automaticallyEnablesLowLightBoostWhenAvailable
setAutomaticallyEnablesLowLightBoostWhenAvailable:
supportedMetadataObjectIdentifiers
isEyeDetectionSupported
isEyeClosedDetectionSupported
isSmileDetectionSupported
setEyeDetectionEnabled:
setEyeClosedDetectionEnabled:
setSmileDetectionEnabled:
eyeDetectionEnabled
eyeClosedDetectionEnabled
smileDetectionEnabled
availableBoxedMetadataFormatDescriptions
AVVideoSettingsForSessionPreset:
maxH264PhotoDimensions
maxH264VideoDimensions
minMacroblocksForHighProfileUpTo30fps
minMacroblocksForHighProfileAbove30fps
usesQuantizationScalingMatrix_H264_Steep_16_48
hevcTurboModeVersion
isHEVCRelaxedAverageBitRateTargetSupported
isHEVCSupported
isHEVCPreferred
isHEIFSupported
bravoCameraSelectionBehavior
setBravoCameraSelectionBehavior:
_isDepthDataDeliveryEnabled
_setDepthDataDeliveryEnabled:
manufacturer
transportType
isSuspended
linkedDevices
inputSources
activeInputSource
setActiveInputSource:
_suspended
_transportType
_manufacturer
_linkedDevices
_inputSources
_activeInputSource
_initWithDeviceTypes:mediaType:position:
stringWithString:
length
appendString:
appendFormat:
discoverySessionWithDeviceTypes:mediaType:position:
_deviceTypes
_position
_mediaType
ready
deviceOpenCallbackInvoker
initWithDevice:error:
_authorizedToUseDeviceAndRequestIfNecessary:
observationBlockForWeakObserver:passedToBlock:
startObservingValueAtKeyPath:ofObject:options:usingBlock:
setOwner:
makeObjectsPerformSelector:withObject:
_setClock:
_sourceFormatDidChange:
notifiesOnMainThread
isRunning
portWithInput:mediaType:formatDescription:enabled:
sharedInstance
_setFormatDescription:
deviceInputWithDevice:error:
notReadyError
unifiedAutoExposureDefaultsEnabled
setUnifiedAutoExposureDefaultsEnabled:
_unifiedAutoExposureDefaultsEnabled
_initWithFigCaptureSource:
_reconnectToFigCaptureSource:
_setFigCaptureSource:
_copyFigCaptureSourceProperty:
audioInputDevicesDidChangeHandler:
sharedAVSystemController
audioInputDeviceLocalizedNameDidChangeHandler:
postNotificationName:object:
figCaptureSource
figCaptureSourceAudioSettingsForSessionPreset:
_fcsQueue
_fcs
_attributes
_levelMeteringEnabled
_isConnected
_localizedName
_weakReference
attributeForKey:
boolValue
_newFigCaptureSources
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
_cameraAccessIsEnabled
_copyFormatsArray
isDefaultActiveFormat
videoMaxZoomFactor
supportedDepthDataFormats
minFrameDuration
_incrementObserverCountForHighFrequencyProperty:
_decrementObserverCountForHighFrequencyProperty:
removeObserver:forKeyPath:
setObject:forKeyedSubscript:
getBytes:length:
_updateFigCaptureSourceObserverCounts
_setFigCaptureSourceProperty:withValue:
_drainManualControlRequestQueues
_performBlockOnMainThread:
isStreamingDisparitySupported
isStreamingDepthSupported
isStillImageDisparitySupported
isStillImageDepthSupported
AVCaptureSessionPresets
_setActiveFormat:resetVideoZoomFactorAndMinMaxFrameDurations:
videoMinZoomFactorForDepthDataDelivery
videoMaxZoomFactorForDepthDataDelivery
supportedColorSpaces
integerValue
_setMinAvailableVideoZoomFactor:
_setMaxAvailableVideoZoomFactor:
numberWithDouble:
_setFigCaptureSourceProperty:withValue:cacheOnly:
_setActiveVideoMaxFrameDurationInternal:
includesFrameDuration:
_setActiveVideoMinFrameDurationInternal:
dictionary
numberWithFloat:
_setFocusWithMode:lensPosition:requestID:
_hasKeyValueObserversForHighFrequencyProperty:
deviceControlRequestWithCompletionBlock:
enqueueRequest:
setErrorCode:
_handleManualControlCompletionForRequestQueue:withPayload:
_setExposureWithMode:duration:ISO:requestID:newMaxFrameDuration:
minExposureDuration
maxExposureDuration
minISO
maxISO
setFakeBias:
setFakeBiasCompletionTime:
_setWhiteBalanceWithMode:gains:requestID:
bytes
doubleValue
dataWithBytes:length:
_ensureWhiteBalanceCalibrationUnpacked
_whiteBalanceMixingFactorForTemperature:
_predictedTempForGains:
_chromaticityValuesForDeviceWhiteBalanceGains:atMix:
_deviceWhiteBalanceGainsForChromaticityValues:temperature:
_setFlashActive:
_setTorchMode:withLevel:
isDiagnosticsTestSupported:
HDRMode
isAutoStillImageStabilizationEnabled
automaticallyNotifiesObserversForKey:
_rampToVideoZoomFactor:withRate:duration:rampType:
_setVideoZoomFactor:
isVideoHDRSupported
allValues
_supportedOptionalFaceDetectionFeaturesDictionary
setEyeDetectionEnabled
_setFaceDetectionFeatureEnabled:enabledState:
setEyeClosedDetectionEnabled
setSmileDetectionEnabled
_faceDetectionConfigurationDictionary
valueForKeyPath:
enumerateKeysAndObjectsUsingBlock:
initWithFigCaptureSourceFormat:
_restoreFigCaptureSourceProperties
_setAdjustingFocus:
_setAdjustingExposure:
minFrameRate
_setAdjustingWhiteBalance:
_setFlashSceneDetectedForPhotoOutput:
_setHighDynamicRangeScene:
_setIsStillImageStabilizationScene:
_setFlashAvailable:
_setTorchActive:
_setTorchAvailable:
_setTorchLevel:
_setImageControlMode:
_setBravoCameraSelectionBehavior:
head
errorCode
completionBlock
fakeBias
fakeBiasCompletionTime
dequeue
_drainManualControlRequestQueue:
_orderInDevicesArray
_whiteBalanceTemperatureForMixingFactor:
_isWBSeedEnabled
_setWBSeedEnabled:
_wbTemperatureIterations
runDiagnosticsWithTestType:
isStillImageStabilizationScene
_isStillImageStabilizationScene
videoZoomRampAcceleration
setVideoZoomRampAcceleration:
videoZoomDrawOverlay
setVideoZoomDrawOverlay:
videoZoomDownscaleStageHint
setVideoZoomDownscaleStageHint:
videoZoomUpscaleStageHint
setVideoZoomUpscaleStageHint:
isSISSupported
deviceFormatForSessionPreset:videoFormat:
_fcsAttributes
_devicePropsQueue
_fcsUID
_origin
_formats
_activeFormat
_activeDepthDataFormat
_activeDepthDataMinFrameDuration
_activeMinFrameDuration
_activeMinFrameDurationSetByClient
_activeMaxFrameDuration
_activeMaxFrameDurationSetByClient
_cachesFigCaptureSourceConfigurationChanges
_focusMode
_focusPointOfInterest
_lensPositionKVO
_adjustingFocus
_autoFocusRangeRestriction
_smoothAutoFocusEnabled
_cameraOption9
_cameraOption10
_cameraFaceResult29
_cameraFaceResult30
_exposureMode
_exposureDurationKVO
_ISOKVO
_exposureTargetBias
_exposureTargetOffsetKVO
_exposurePointOfInterest
_adjustingExposure
_waitingForExposureAdjustmentBeforeLocking
_wbMode
_deviceWhiteBalanceGainsKVO
_grayWorldDeviceWhiteBalanceGainsKVO
_adjustingWB
_wbCalibrationCount
_wbCalibrationTemperatures
_wbCalibrationMatrices
_wbLastPredictedTemp
_wbSeedTemp
_wbSeedEnabled
_providesStortorgetMetadata
_automaticallyAdjustsImageControlMode
_manualFocusControlRequests
_manualExposureControlRequests
_biasedExposureControlRequests
_manualWhiteBalanceControlRequests
_lastCustomExposureDuration
_lastCustomExposureISO
_imageControlMode
_flashMode
_avcaptureDeviceAutoFlashEnabled
_photoOutputFlashSceneEnabled
_flashActive
_flashSceneDetectedForPhotoOutput
_flashAvailable
_torchMode
_torchActive
_torchLevel
_torchAvailable
_subjectMonitoringEnabled
_faceDetectionDrivenImageProcessingEnabled
_faceRectangle
_faceRectangleAngle
_automaticallyEnablesLowLightBoostWhenAvailable
_lowLightBoostEnabled
_highDynamicRangeSceneDetectionEnabled
_automaticallyAdjustsVideoHDREnabled
_videoHDREnabled
_sceneIsHighDynamicRange
_activeColorSpace
_videoZoomDownscaleStageHint
_videoZoomUpscaleStageHint
_videoZoomFactor
_videoZoomRampTarget
_videoZoomRampCounter
_videoZoomRampAcceleration
_videoZoomDrawOverlay
_minAvailableVideoZoomFactor
_maxAvailableVideoZoomFactor
_depthDataDeliveryEnabled
_bravoCameraSelectionBehavior
_captureSourceSupportedMetadata
_supportedOptionalFaceDetectionFeatures
_eyeDetectionEnabled
_eyeClosedDetectionEnabled
_smileDetectionEnabled
_availableBoxedMetadataFormatDescriptions
_sessionPresetCompressionSettings
_h264EncoderLimitations
_hevcEncoderSettings
_observedHighFrequencyPropertiesQueue
_observedHighFrequencyPropertyCounts
_propertyToFigCaptureSourcePropertyMap
_cachedFigCaptureSourceProperties
trackOutput
initWithAssetReaderTrackOutput:
_isAttachedToAdaptor
_status
_setAttachedAdaptor:
finalize
track
trackID
_copyNextSampleBufferForAdaptor
initWithSampleBuffer:
assetReaderOutputMetadataAdaptorWithAssetReaderTrackOutput:
addExtractionForOutput:figAssetReader:options:withOutputExtactionID:
assetReaderTrackOutput
nextTimedMetadataGroup
initWithURL:delegate:settingsID:connections:
wrapperWithURL:delegate:settingsID:connections:
settingsID
outputFileURL
metadata
setMetadata:
isRecording
setRecording:
isPaused
setPaused:
_recording
_paused
_settingsID
_outputFileURL
_metadata
_delegateStorage
maxRecordedDuration
maxRecordedFileSize
minFreeDiskSpaceLimit
pausesRecordingOnInterruption
startRecordingToOutputFileURL:recordingDelegate:
stopRecording
isRecordingPaused
pauseRecording
resumeRecording
setPausesRecordingOnInterruption:
recordedDuration
recordedFileSize
setMaxRecordedDuration:
setMaxRecordedFileSize:
setMinFreeDiskSpaceLimit:
setDelegate:
_fileOutputInternal
_delegate
figCaptureSessionSyncQueue
figCaptureSession
setSession:
attachToFigCaptureSession:
detachFromFigCaptureSession:
_inputInternal
initWithInput:mediaType:formatDescription:enabled:
initWithFormat:
valueForUndefinedKey:
initWithSource:
setSourceID:
figCaptureSourceVideoFormat
setRequiredFormat:
setRequiredMaxFrameRate:
setRequiredMinFrameRate:
setApplyMaxExposureDurationFrameworkOverrideWhenAvailable:
requiredFormat
isSIFRSupported
setHighlightRecoveryEnabled:
setSensorHDREnabled:
setColorSpace:
setFaceDetectionConfiguration:
figCaptureSourceDepthDataFormat
setDepthDataFormat:
setDepthDataMaxFrameRate:
initWithSourceType:
automaticallyNotifiesObserversOfClock
keyEnumerator
nextObject
mfo_addEntriesFromDictionaryWithRecursion:
setObject:forKey:
recordingDelegatesArray
connectionsThatRecordVideoOrientationAndMirroringChangesAsMetadataTrack
movieFragmentInterval
availableVideoCodecs
videoCodec
videoCompressionProperties
sendLastVideoPreviewFrame
recording
paused
bravoCameraSelectionBehaviorForRecording
addConnection:error:
_updateAvailableVideoCodecTypesForSourceDevice:
removeObject:
removeConnection:
isFileURL
liveConnections
nextMovieFileSettingsID
_startRecording:
_stopRecording
setWithObject:
allKeys
availableVideoCodecTypes
_videoOutputSettingsWithVideoSettingsDictionary:exceptionReason:
compatibleMediaTypes
outputSettingsDictionary
previewDimensions
_figMetadataPropertyFromMetadataItems:
errorWithDomain:code:userInfo:
numberWithLongLong:
valueWithCMTime:
outputSizeForSourceFormat:
handleDidStopRecordingNotificationForWrapper:withPayload:demoof:addMetadata:
initWithObjectsAndKeys:
postNotificationName:object:userInfo:
performBlockOnSessionNotifyingThread:
consolidateMovieFragmentsInFile:error:
updateMovieMetadataInFile:withMetadata:error:
_avErrorUserInfoDictionaryForError:wrapper:payload:
_removeRecordingDelegateWrapper:
captureOutput:didFinishRecordingToOutputFileAtURL:debugMetadataSidecarFileURL:fromConnections:error:
fileURLWithPath:
captureOutput:didFinishRecordingToOutputFileAtURL:fromConnections:error:
invokeDelegateCallbackWithBlock:
longLongValue
captureOutput:didStartRecordingToOutputFileAtURL:fromConnections:
captureOutput:didPauseRecordingToOutputFileAtURL:fromConnections:
captureOutput:didResumeRecordingToOutputFileAtURL:fromConnections:
setSettingsID:
setOutputURL:
setOutputFileType:
setMaxDuration:
setMaxFileSize:
setMovieFragmentInterval:
setMovieLevelMetadata:
setSendPreviewIOSurface:
recordsVideoOrientationAndMirroringChangesAsMetadataTrackForConnection:
setRecordVideoOrientationAndMirroringChanges:
outputSettingsForConnection:
setVideoSettings:
availableVideoCodecTypesForSourceDevice:sourceFormat:outputDimensions:fileType:videoCodecTypesWhiteList:
setSendsLastVideoPreviewFrame:
sendsLastVideoPreviewFrame
setBravoCameraSelectionBehaviorForRecording:
setOutputSettings:forConnection:
setRecordsVideoOrientationAndMirroringChanges:asMetadataTrackForConnection:
handleNotification:payload:
metadataTransform
rollAdjustment
physicallyMirrorsVideo
hasRequiredOutputFormatForConnection:
_inputForConnection:
originalMetadataObject
derivedMetadataObjectFromMetadataObject:withTransform:isVideoMirrored:rollAdjustment:
sensorDimensions
vtScalingMode
appliesMirroringWithPhysicalFlipForConnection:
appliesOrientationWithPhysicalRotationForConnection:
updateMetadataTransformForSourceFormat:
supportsHighProfileH264
removeObjectForKey:
isIrisVideoStabilizationSupported
numberWithUnsignedInt:
addEntriesFromDictionary:
category
inputNumberOfChannels
usesApplicationAudioSession
automaticallyConfiguresApplicationAudioSession
sampleRate
_recommendedVideoOutputSettingsForConnection:sourceSettings:videoCodec:
_recommendedAudioOutputSettingsForConnection:sourceSettings:fileType:
insertObject:atIndex:
dataDroppedReasonFromSampleBuffer:
handleServerConnectionDeathForFigCaptureSession:
requiredOutputFormatForConnection:
transformedMetadataObjectForMetadataObject:connection:
metadataOutputRectOfInterestForRect:
rectForMetadataOutputRectOfInterest:
firstEnabledConnectionForMediaType:
_outputInternal
impl
discoveryMode
_recentlyUsedDevices
_otherDevices
initWithDeviceFeatures:
outputDeviceDiscoverySessionFactory
outputDeviceDiscoverySessionOfClass:withDeviceFeatures:
setParentOutputDeviceDiscoverySession:
targetAudioSession
setTargetAudioSession:
outputDeviceDiscoverySessionDidChangeDiscoveryMode:
availableOutputDevicesObject
recentlyUsedDevices
otherDevices
name
localizedStandardCompare:
devicePresenceDetected
notificationWithName:object:userInfo:
postNotification:
outputDeviceDiscoverySessionImplDidChangeAvailableOutputDevices:
initWithOutputDeviceDiscoverySessionImpl:
setDiscoveryMode:
availableOutputDevices
outputDeviceDiscoverySessionImpl:didExpireWithReplacement:
_outputDeviceDiscoverySession
allDevices
initWithOutputDeviceDiscoverySessionAvailableOutputDevicesImpl:
isEqualToArray:
frecencyScore
sharedLocalDevice
_loadOutputDevices
_availableOutputDevices
adjustingDeviceActiveFormat
beginConfigRefCount
sessionConfig
figCaptureSessionRunning
figCaptureSessionStarted
committedAVCaptureSessionConfigurations
liveAVCaptureSessionConfiguration
stopError
running
interrupted
automaticallyConfiguresCaptureDeviceForWideColor
runLoopCondition
waitingForFigCaptureSessionToStart
waitingForFigCaptureSessionToStop
waitingForFigCaptureSessionConfigurationToBecomeLive
masterClock
adjustingVideoDeviceHDREnabled
resetVideoZoomFactorAndMinMaxFrameDurations
authorizedToUseCameraInMultipleForegroundAppLayout
initWithString:
_createFigCaptureSession
valueWithNonretainedObject:
signal
_beginConfiguration
removeInput:
removeOutput:
_makeConfigurationLive:
_teardownFigCaptureSession
stringWithCapacity:
metadataObjectsDelegate
string
metadataObjectTypes
_metadataConstantValueToName:
date
setDateFormat:
nonretainedObjectValue
mainBundle
infoDictionary
stringFromDate:
allSessionPresets
canSetSessionPreset:
_commitConfiguration
sessionVideoCaptureDevices
_buildAndRunGraph
_determineMasterClock
dotString
_setMasterClock:
indexOfObjectPassingTest:
_canAddInput:failureReason:
_addInputWithNoConnections:exceptionReason:
_connectionsForNewInputPort:
_addConnection:exceptionReason:
_removeInput:
_removeConnectionsForInputPort:
_canAddOutput:failureReason:
_addOutputWithNoConnections:exceptionReason:
_connectionsForNewOutput:
_removeConnection:
_canAddVideoPreviewLayer:failureReason:
_removeAllPreviewLayers
beginConfiguration
_connectionsForNewVideoPreviewLayer:
canAddConnection:
commitConfiguration
_canAddConnection:failureReason:
dictionaryWithObjectsAndKeys:
isBeingConfigured
writeToFile:atomically:encoding:error:
_setRunning:
_stopError
lock
dateWithTimeIntervalSinceNow:
waitUntilDate:inMode:
unlock
code
_postRuntimeError:
_stopFigCaptureSession
prefersVideoHDREnabledForSessionPreset:
_rebuildGraph
videoHDREnabledForDevice:format:sessionPreset:
setSessionPreset:
_isActiveColorSpaceBeingConfiguredForDevice:
setConfigurationID:
setUsesAppAudioSession:
setConfiguresAppAudioSession:
setAllowedToRunInWindowedLayout:
addConnectionConfiguration:
_updateDeviceActiveFormatsAndActiveConnections
_updateDepthDataDeliveryEnabledForAllConnectedSourceDevices
_figCaptureSessionConfiguration
_startFigCaptureSession
_stopAndTearDownGraph
_notifySessionStopped
_outputWithClass:forSourceDevice:
unsupportedCaptureOutputClasses
_beginConfiguringActiveColorSpaceForDevice:
_finishConfiguringActiveColorSpaceForDevice:
_updateDepthDataDeliveryEnabledForSourceDevice:
_setInterrupted:withReason:
_notifySessionStarted
_notifyMediaServerdDied
_handleDidStartRunningNotificationWithPayload:
_handleDidStopRunningNotificationWithPayload:
_handleConfigurationCommittedNotificationWithPayload:
_handleConfigurationDidBecomeLiveNotificationWithPayload:
initWithKeyOptions:valueOptions:capacity:
timeIntervalSinceReferenceDate
automaticallyNotifiesObserversOfMasterClock
automaticallyNotifiesObserversOfRunning
canAddInput:
addInput:
addInputWithNoConnections:
canAddOutput:
addOutput:
addOutputWithNoConnections:
_addVideoPreviewLayer:exceptionReason:
_addVideoPreviewLayerWithNoConnection:exceptionReason:
_removeVideoPreviewLayer:
addConnection:
isInterrupted
setUsesApplicationAudioSession:
setAutomaticallyConfiguresApplicationAudioSession:
setAutomaticallyConfiguresCaptureDeviceForWideColor:
startRunning
stopRunning
cancelForegroundAutoResumeAfterDate:
pixelBuffer
version
quality
filtered
accuracy
calibrationData
depthBlurEffectSimulatedAperture
depthBlurEffectRenderingParameters
portraitScoreIsHigh
portraitScore
depthDataType
_allSupportedDepthDataPixelFormatTypes
numberWithUnsignedLong:
initWithPixelBuffer:auxiliaryMetadata:
cameraCalibrationDataWithExifOrientation:
initWithPixelBuffer:depthMetadataDictionary:
availableDepthDataTypes
_copyPixelBufferRepresentationWithPixelFormatType:
cameraCalibrationData
depthDataVersionMajor
depthDataVersionMinor
depthDataQuality
isDepthDataFiltered
depthDataAccuracy
depthDataMap
dataWithLength:
mutableBytes
copyAuxiliaryMetadata
auxiliaryImageType
initWithAuxiliaryMetadata:
initWithBase64EncodedString:options:
initWithDepthMetadataDictionary:
base64EncodedStringWithOptions:
depthDataFromDictionaryRepresentation:error:
depthDataByApplyingExifOrientation:
depthDataByConvertingToDepthDataType:
depthDataByReplacingDepthDataMapWithPixelBuffer:error:
dictionaryRepresentationForAuxiliaryDataType:
request
sbufCompletionBlock
setSbufCompletionBlock:
iosurfaceCompletionBlock
setIosurfaceCompletionBlock:
bracketedCaptureCompletionBlock
setBracketedCaptureCompletionBlock:
shutterSoundID
setShutterSoundID:
bracketedSettings
setBracketedSettings:
_sbufCompletionBlock
_iosurfaceCompletionBlock
_bracketedCaptureCompletionBlock
_shutterSoundID
_bracketedSettings
_initWithCompletionBlock:settings:
prepareBracketRequestWithCompletionBlock:settings:
settings
_completionBlock
_settings
stillImageRequests
squareCropEnabled
previewImageSize
imageDataFormatType
jpegQuality
jpegQualitySpecified
HDRCaptureMode
EV0CaptureEnabled
noiseReductionEnabled
suspendsVideoProcessingDuringCapture
outputSettings
isCapturingPhoto
rawCaptureEnabled
SISSupported
SISEnabled
SISActive
highResStillEnabled
preparedBracket
prepareRequests
maxBracketedCaptureCount
lensStabilizationDuringBracketedCaptureSupported
lensStabilizationDuringBracketedCaptureEnabled
bravoImageFusionSupported
updateSISSupportedForSourceDevice:
automaticallyEnablesStillImageStabilizationWhenAvailable
_updateMaxBracketedStillImageCaptureCountForSourceFormat:
_updateLensStabilizationDuringBracketedCaptureSupportedForDevice:
dictionaryWithDictionary:
initWithDictionary:
availableImageDataCVPixelFormatTypes
availableImageDataCodecTypes
clearPreparedBracketIfNeeded
isRawCaptureEnabled
isStillImageStabilizationSupported
highResolutionStillImageOutputEnabledChangeCausesCaptureSessionRestart
isRawCaptureSupported
supportsHighResolutionStillImageOutput
outputFormat
setSquareCropEnabled:
setOutputMirroring:
setOutputOrientation:
setPreviewEnabled:
previewEnabled
outputWidth
outputHeight
highResolutionStillImageDimensions
setPreviewWidth:
setPreviewHeight:
setPreviewFormat:
outputMirroring
setPreviewMirroring:
outputOrientation
setPreviewOrientation:
setNoiseReductionEnabled:
setScaleFactor:
setShutterSound:
setWideColorMode:
setBravoImageFusionMode:
setHDRMode:
setProvidesOriginalImage:
setSISMode:
setVtCompressionProperties:
_figCaptureStillImageSettingsForConnection:
setPayloadType:
isLensStabilizationDuringBracketedCaptureSupported
maxBracketedCaptureStillImageCount
_bracketedSettingsAreValid:fromConnection:exceptionReason:
_figCaptureStillImageSettingsForBracketedCaptureSettingsArray:fromConnection:
_preparedForBracketedCaptureWithSettings:
bracketImageCount
isLensStabilizationDuringBracketedCaptureEnabled
setLensStabilizationDuringBracketEnabled:
setBracketType:imageCount:
exposureDurations
ISOs
exposureTargetBiases
handleNotificationForRequest:withPayload:imageIsEV0:
removeAllObjects
unsignedIntegerValue
removeObjectAtIndex:
handleNotificationForPrepareRequest:withPayload:
_copyAttachmentsAndPropagateFaceRegionsToExifAuxDictionaryForSampleBuffer:
maxStillImageJPEGDataSize
jpegStillImageNSDataRepresentation:
jpegStillImageNSDataRepresentationForSurface:size:metadata:
setOutputSettings:
setPreviewImageSize:
isEV0CaptureEnabled
setEV0CaptureEnabled:
isStillImageStabilizationActive
setAutomaticallyEnablesStillImageStabilizationWhenAvailable:
setHighResolutionStillImageOutputEnabled:
isNoiseReductionEnabled
setRawCaptureEnabled:
shutterSound
suspendsVideoProcessingDuringStillImageCapture
setSuspendsVideoProcessingDuringStillImageCapture:
resumeVideoProcessing
isCapturingStillImage
firstActiveConnection
captureStillImageAsynchronouslyFromConnection:completionHandler:
captureStillImageSurfaceAsynchronouslyFromConnection:completionHandler:
setLensStabilizationDuringBracketedCaptureEnabled:
prepareToCaptureStillImageBracketFromConnection:withSettingsArray:completionHandler:
captureStillImageBracketAsynchronouslyFromConnection:withSettingsArray:completionHandler:
deprecatedMinFrameDuration
videoSettingsDimensionsOverrideEnabled
queueMutex
localQueue
videoOutputSettingsWithVideoSettingsDictionary:
outputScalingModeForSourceFormat:
vettedVideoSettingsForSettingsDictionary:
setWithObjects:
supportedVideoSettingsKeys
setWithSet:
intersectSet:
allObjects
availableVideoCVPixelFormatTypes
_setMinFrameDuration:
isVideoSettingsDimensionsOverrideEnabled
setVideoSettingsDimensionsOverrideEnabled:
recommendedVideoSettingsForAssetWriterWithOutputFileType:
availableVideoCodecTypesForAssetWriterWithOutputFileType:
recommendedVideoSettingsForVideoCodecType:assetWriterOutputFileType:
setMinFrameDuration:
setAlwaysDiscardsLateVideoFrames:
pixelFormatType
_allSupportedPortraitEffectsMattePixelFormatTypes
initWithPixelBuffer:portraitEffectsMatteMetadataDictionary:
mattingImage
portraitEffectsMatteFromDictionaryRepresentation:error:
portraitEffectsMatteByApplyingExifOrientation:
portraitEffectsMatteByReplacingPortraitEffectsMatteWithPixelBuffer:error:
versionMajor
versionMinor
sublayer
sensorSize
sensorToPreviewVTScalingMode
imageQueueSlot
previewSize
previewRotationDegrees
gravity
disableActions
orientation
automaticallyAdjustsMirroring
mirrored
isPresentationLayer
visible
chromaNoiseReductionEnabled
captureDeviceTransform
depthDataDeliverySupported
depthDataDeliveryEnabled
filterRenderingEnabled
unoptimizedFilterRenderingEnabled
oddScreenWidth
oddScreenScale
bounds
setPosition:
initWithSession:
initWithSessionWithNoConnection:
_initWithSession:makeConnection:
begin
setValue:forKey:
setMasksToBounds:
setVideoGravity:
setEdgeAntialiasingMask:
setInheritsTiming:
setAllowsDisplayCompositing:
addSublayer:
setContentsGravity:
centerSublayer:
commit
setSessionWithNoConnection:
initWithLayer:
videoGravity
_orientation
_automaticallyAdjustsMirroring
_isMirrored
isDepthDataDeliverySupported
isUnoptimizedFilterRenderingEnabled
setBounds:
setDisableActions:
animationForKey:
setAnimationDuration:
timingFunction
setAnimationTimingFunction:
_updatePreviewTransforms
layoutSublayers
_updateDepthDataDeliverySupported
isMirroringSupported
isChromaNoiseReductionSupported
_setVideoPreviewFilters:checkForExceptionalInput:exceptionReason:
_filtersAreOptimized:exceptionReason:
layerDidBecomeVisible:
_setSensorAndEstimatedPreviewSizes
_updateCaptureDeviceTransform
_input
setTransform:
optimizedVideoPreviewFilterNames
setWithCapacity:
setContents:
layerWithSession:
layerWithSessionWithNoConnection:
isOrientationSupported
setAutomaticallyAdjustsMirroring:
isMirrored
setMirrored:
isChromaNoiseReductionEnabled
setChromaNoiseReductionEnabled:
setVideoPreviewFilters:
setUnoptimizedFilterRenderingEnabled:
captureDevicePointOfInterestForPoint:
pointForCaptureDevicePointOfInterest:
transformedMetadataObjectForMetadataObject:
hudLayer
serialQueue
isReadyForDisplayMutex
configurationQueue
subtitleGravity
dependencyManager
player
pixelBufferAttributes
lanczosDownscalingEnabled
lanczosDownscalingFactor
shouldObservePlayer
maskLayer
videoLayer
subtitleLayer
closedCaptionLayer
isReadyForDisplay
playerBeingObserved
KVOInvokers
latestAppliedPresentationSize
playerCurrentItemHasVideoFrameEnqueuedKVOInvoker
setPlayer:
makeClosedCaptionLayer
setHidden:
hudEnabled
setPlayerLayer:
startDispatchTimer
currentItemChanged
currentItemTracksChanged
readHudSettingsAndCallCompletionHandler:
setName:
setBackgroundColor:
setBorderColor:
setBorderWidth:
_setSubtitleGravity:
setSubtitleGravityNonObscuring:
initWithDependencyHost:
dependencyHostIsFullyInitialized
_getMaskLayer:videoLayer:subtitleLayer:closedCaptionLayer:
_playerCurrentItemPresentationSize
activateBackground:
setFrame:
setViewport:
setShouldResizeVideoLayer:
setNeedsLayout
_compactDescription
frame
setVideosize:
updateBounds:
setSublayerTransform:
isLanczosFilterDownscalingEnabled
_videoLayer
sublayers
setMinificationFilter:
_updateClosedCaptionLayerBounds:
_notifyPlayerOfDisplaySize
setContentsScale:
isAdditive
setKeyPath:
addAnimation:forKey:
sizeValue
valueWithPoint:
rectValue
setFromValue:
setToValue:
valueWithCATransform3D:
_maskLayer
_addBoundsAnimationToLayer:usingAnimation:forKey:
_addPositionAnimationToLayer:usingAnimation:forKey:
_closedCaptionLayer
sublayerTransform
_addSublayerTransformAnimationToLayer:fromTransform:usingAnimation:gravity:presentationSize:forKey:
keyPath
animations
_forBoundsAnimations:applyBlock:
_addAnimationsForMaskLayer:forKey:
_addAnimationsForVideoLayer:size:gravity:forKey:
_addAnimationsForClosedCaptionLayer:gravity:forKey:
addAnimations:forKey:
removeAnimationForKey:
removeAnimationsForKey:
removeAllAnimations
addCallbackToCancel:
cancelAllCallbacks
_removeLayer:
contentsScale
context
convertRect:toLayer:
_displaySize
_evaluateDisplaySizeOfAllAttachedLayers
valueForKey:dependsOnValueAtKeyPath:
_cachedPresentationSizeOfCurrentItem
_subtitleLayer
_applyCurrentItemPresentationSizeChangeAndForceUpdate:
_cachedNonForcedSubtitleDisplayEnabledForCurrentItem
updateNonForcedSubtitleDisplayEnabled:
startObservingObject:weakObserver:forTwoPartKeyPath:options:context:
contentsAreFlipped
setGeometryFlipped:
clear
_hasEnqueuedVideoFrame
_stopObservingPlayer:
_startObservingPlayer:
_syncToPlayer:
_addLayer:
insertSublayer:atIndex:
insertSublayer:above:
removeFromSuperlayer
animation
needsLayout
_pixelBufferAttributesDidChangeForLayer:
isOverscanSubtitleSupportEnabled
setOverscanSubtitleSupportEnabled:
playerLayerWithPlayer:
keyPathsForValuesAffectingVideoRect
declareKeyPathDependenciesWithRegistry:
addCallbackToCancelDuringDeallocation:
_subtitleGravity
setPixelBufferAttributes:
setLanczosFilterDownscalingEnabled:
lanczosFilterDownscaleFactor
setLanczosFilterDownscaleFactor:
videoRect
_videoRectForBounds:
_playerLayer
fromValue
toValue
byValue
setByValue:
values
setValues:
allocWithZone:
charValue
unsignedCharValue
shortValue
unsignedShortValue
longValue
unsignedLongValue
unsignedLongLongValue
CMTimeValue
allowsKeyedCoding
decodeCMTimeForKey:
encodeCMTime:forKey:
supportsSecureCoding
objCType
isEqualToValue:
initWithCoder:
encodeWithCoder:
classForCoder
_time
CMTimeRangeValue
valueWithCMTimeRange:
decodeCMTimeRangeForKey:
encodeCMTimeRange:forKey:
_timeRange
CMTimeMappingValue
valueWithCMTimeMapping:
decodeCMTimeMappingForKey:
encodeCMTimeMapping:forKey:
_timeMapping
encodeObject:forKey:
decodeObjectOfClasses:forKey:
objectAtIndex:
_attachTimerSourceToTimebase
invalidated
_reallyInvalidate
_removeTimebaseFromTimerSource
_stopObservingTimebaseNotifications
_startObservingTimebaseNotifications
_effectiveRateChanged
initWithTimebase:queue:
timebase
_resetNextFireTime
_handleTimeDiscontinuity
_finishInitialization
_timerQueue
_timerSource
_timebase
_lastRate
_currentRate
_invalid
_fireBlockForTime:
drain
initWithTimebase:interval:queue:block:
_intervalRequested
_lastIntervalUsed
_lastPeriodicFireTime
_lastNonperiodicFireTime
_lastStopTime
_sequenceNum
_block
sortedArrayUsingComparator:
_fireBlock
_nextFiringTimeAfterTime:
_previousFiringTimeBeforeTime:
initWithTimebase:times:queue:block:
_times
initWithTimebase:fireTime:queue:block:
didFire
_fireTime
_didFire
identifier
metadataItemsFromArray:filteredByIdentifiers:
identifiers
classifyingLabels
mostRecentlyModifiedMetadataGroupTimestamp
weakReferenceToPlayerItem
initWithIdentifiers:classifyingLabels:
initWithTimeIntervalSinceReferenceDate:
_metadataCollectorInternal
indexSet
_initWithTaggedRangeMetadataDictionary:items:
classifyingLabel
modificationTimestamp
items
setItems:
discoveryTimestamp
addIndex:
_getFilteredMetadataGroups:fromIdentifiers:andClassifyingLabels:modifiedIndexesOut:newIndexesOut:
_isAttachedToPlayerItem
metadataCollector:didCollectDateRangeMetadataGroups:indexesOfNewGroups:indexesOfModifiedGroups:
_attachToPlayerItem:
_detatchFromPlayerItem
_updateTaggedRangeMetadataArray:
initWithDelegate:settings:lensStabilizationSupported:
_resolveExpectedPhotoManifest
captureOutput:didFinishProcessingPhoto:error:
captureOutput:didFinishProcessingPhotoSampleBuffer:previewPhotoSampleBuffer:resolvedSettings:bracketSettings:error:
captureOutput:didFinishProcessingRawPhotoSampleBuffer:previewPhotoSampleBuffer:resolvedSettings:bracketSettings:error:
captureOutput:didFinishProcessingLivePhotoToMovieFileAtURL:debugMetadataSidecarFileURL:duration:photoDisplayTime:resolvedSettings:error:
photoManifest
formatFourCC
rawPhotoPixelFormatType
embedsDepthDataInPhoto
isBurstQualityCaptureEnabled
isEV0PhotoDeliveryEnabled
photoFilters
replaceObjectAtIndex:withObject:
adjustedPhotoFilters
requestWithDelegate:settings:lensStabilizationSupported:
resolvedSettings
expectedPhotoCount
setResolvedSettings:
photoCallbackFlavor
unresolvedSettings
expectedPhotoManifest
firedCallbackFlags
setFiredCallbackFlags:
firedPhotoCallbacksCount
setFiredPhotoCallbacksCount:
previewSurface
setPreviewSurface:
previewSampleBuffer
setPreviewSampleBuffer:
thumbnailSurface
setThumbnailSurface:
delegateSupportsDebugMetadataSidecarFile
lensStabilizationSupported
_photoCallbackFlavor
_unresolvedSettings
_resolvedSettings
_expectedPhotoManifest
_firedCallbackFlags
_firedPhotoCallbacksCount
_previewSurface
_previewSampleBuffer
_thumbnailSurface
_delegateSupportsDebugMetadataSidecarFile
_lensStabilizationSupported
bundleIdentifier
defaultManager
path
fileExistsAtPath:
expirationDate
priority
setExpirationDate:
setPriority:
sharedDownloadStorageManager
setStorageManagementPolicy:forURL:
storageManagementPolicyForURL:
_setPolicyDictionary:
_policyDictionary
isEqualToDictionary:
mutableCopyWithZone:
_storageManagementPolicy
policyDictionary
format
processedFileType
rawFileType
EV0PhotoDeliveryEnabled
autoStillImageStabilizationEnabled
autoDualCameraFusionEnabled
dualCameraDualPhotoDeliveryEnabled
highResolutionPhotoEnabled
depthDataFiltered
cameraCalibrationDataDeliveryEnabled
livePhotoMovieFileURL
livePhotoMovieFileURLForOriginalPhoto
livePhotoVideoCodecType
livePhotoMovieMetadata
livePhotoMovieMetadataForOriginalPhoto
previewPhotoFormat
embeddedThumbnailPhotoFormat
turboModeEnabled
burstQualityCaptureEnabled
userInitiatedPhotoRequestTime
livePhotoContentIdentifier
livePhotoContentIdentifierForOriginalPhoto
_initWithFormat:processedFileType:rawPixelFormatType:rawFileType:burstQualityCaptureEnabled:uniqueID:exceptionReason:
setAutoStillImageStabilizationEnabled:
setAutoDualCameraFusionEnabled:
validateVideoSettings:allowingFeatures:validPixelKeys:validPixelFormats:validCodecKeys:validCodecs:exceptionReason:
maxLivePhotoMovieDimensions
setDualCameraDualPhotoDeliveryEnabled:
setHighResolutionPhotoEnabled:
setEmbedsDepthDataInPhoto:
setDepthDataFiltered:
setCameraCalibrationDataDeliveryEnabled:
setLivePhotoMovieFileURL:
setLivePhotoVideoCodecType:
setLivePhotoMovieMetadata:
setPreviewPhotoFormat:
setEmbeddedThumbnailPhotoFormat:
setEV0PhotoDeliveryEnabled:
setLivePhotoMovieFileURLForOriginalPhoto:
setLivePhotoMovieMetadataForOriginalPhoto:
setPhotoFilters:
setAdjustedPhotoFilters:
setTurboModeEnabled:
setUserInitiatedPhotoRequestTime:
setLivePhotoContentIdentifier:
setLivePhotoContentIdentifierForOriginalPhoto:
lastPathComponent
embeddedThumbnailFormatFourCC
validMetadataTopLevelCGImagePropertiesKeys
UUID
UUIDString
setKeySpace:
setKey:
setValue:
_sanitizedLivePhotoMovieMetadataForArray:exceptionReason:
keySpace
value
availablePreviewPhotoPixelFormatTypes
availableEmbeddedThumbnailPhotoCodecTypes
photoSettings
photoSettingsWithFormat:
photoSettingsWithRawPixelFormatType:
photoSettingsWithRawPixelFormatType:processedFormat:
photoSettingsWithRawPixelFormatType:rawFileType:processedFormat:processedFileType:
burstQualityPhotoSettings
photoSettingsFromPhotoSettings:
isTurboModeEnabled
isAutoDualCameraFusionEnabled
isHighResolutionPhotoEnabled
isCameraCalibrationDataDeliveryEnabled
isSquareCropEnabled
previewFormatFourCC
previewCGSize
embeddedThumbnailCGSize
isAutoRedEyeReductionEnabled
setAutoRedEyeReductionEnabled:
isPortraitEffectsMatteDeliveryEnabled
setPortraitEffectsMatteDeliveryEnabled:
embedsPortraitEffectsMatteInPhoto
setEmbedsPortraitEffectsMatteInPhoto:
availableRawEmbeddedThumbnailPhotoCodecTypes
rawEmbeddedThumbnailPhotoFormat
setRawEmbeddedThumbnailPhotoFormat:
_autoRedEyeReductionEnabled
_portraitEffectsMatteDeliveryEnabled
_embedsPortraitEffectsMatteInPhoto
_availableRawEmbeddedThumbnailPhotoCodecTypes
_rawEmbeddedThumbnailPhotoFormat
lensStabilizationEnabled
_initWithFormat:processedFileType:rawPixelFormatType:rawFileType:bracketedSettings:uniqueID:exceptionReason:
photoBracketSettingsWithRawPixelFormatType:processedFormat:bracketedSettings:
photoBracketSettingsWithRawPixelFormatType:rawFileType:processedFormat:processedFileType:bracketedSettings:
isLensStabilizationEnabled
setLensStabilizationEnabled:
_bracketSettingsInternal
photoDimensions
rawPhotoDimensions
embeddedThumbnailDimensions
livePhotoMovieEnabled
flashEnabled
HDREnabled
adjustedPhotoFiltersEnabled
stillImageStabilizationEnabled
dualCameraFusionEnabled
_initWithUniqueID:photoDimensions:rawPhotoDimensions:previewDimensions:embeddedThumbnailDimensions:livePhotoMovieEnabled:livePhotoMovieDimensions:turboModeEnabled:flashEnabled:HDREnabled:adjustedPhotoFiltersEnabled:EV0PhotoDeliveryEnabled:stillImageStabilizationEnabled:dualCameraFusionEnabled:squareCropEnabled:photoManifest:
resolvedSettingsWithUniqueID:photoDimensions:rawPhotoDimensions:previewDimensions:embeddedThumbnailDimensions:livePhotoMovieEnabled:livePhotoMovieDimensions:turboModeEnabled:flashEnabled:HDREnabled:adjustedPhotoFiltersEnabled:EV0PhotoDeliveryEnabled:stillImageStabilizationEnabled:dualCameraFusionEnabled:squareCropEnabled:photoManifest:
isFlashEnabled
isHDREnabled
isAdjustedPhotoFilterRenderingEnabled
isStillImageStabilizationEnabled
isDualCameraFusionEnabled
rawEmbeddedThumbnailDimensions
portraitEffectsMatteDimensions
isRedEyeReductionEnabled
_redEyeReductionEnabled
_rawEmbeddedThumbnailDimensions
_portraitEffectsMatteDimensions
reader
itemIndex
commonKey
locale
extendedLanguageTag
languageCode
time
startDate
dataType
extras
faceID
hasRollAngle
rollAngle
hasYawAngle
yawAngle
_extractPropertiesFromDictionary:
_valueFromCFType:
JSONObjectWithData:options:error:
identifierForKey:keySpace:
localeWithLocaleIdentifier:
_updateCommonKey
_makeValueReady
_makePropertiesReady
_updateIdentifier
_updateLanguageInformationFromLocale:
_updateLanguageInformationFromExtendedLanguageTag:
_keyAsString
stringValue
absoluteString
setLocale:
numberFromString:
dataWithPropertyList:format:options:error:
numberValue
dateValue
dataValue
imageValue
localeIdentifier
metadataItemsFromArray:filteredAndSortedAccordingToPreferredLanguages:
canonicalLocaleIdentifierFromString:
unicodeLanguageIdentifier
unicodeLanguageCode
indexesOfObjectsPassingTest:
containsIndex:
enumerateIndexesUsingBlock:
addIndexes:
keySpaceForIdentifier:
keyForIdentifier:
metadataItemsFromArray:withKey:keySpace:
objectsAtIndexes:
whitelist
valueForKey:
_metadataItemWithFigMetadataDictionary:containerURL:securityOptions:
_initWithFigMetadataDictionary:valueLoadingHandler:
_initWithFigMetadataDictionary:
_figMetadataDictionary
intrinsicAttributesOfExtraAttributes:
extraAttributes
_areExtraAttributesOf:comparableToExtraAttributesOf:
_copyValueAsCFTypeWithFormatDescription:error:
_figMetadataDictionaryWithValue:diviningValueDataType:
_serializationDataType
_conformingDataTypes
pointValue
_createJSONEncodedDataFromValue:error:
isValidJSONObject:
dataWithJSONObject:options:error:
_clientExpectsISOUserDataKeysInQuickTimeUserDataKeySpace
_isoUserDataKeysRequiringKeySpaceConversion
_replaceQuickTimeUserDataKeySpaceWithISOUserDataKeySpaceIfRequired:
_figMetadataFormat
fastestEncoding
dataTypeForValue:
metadataItemsFromArray:withLocale:
metadataItemsFromArray:filteredByIdentifier:
metadataItemsFromArray:withStringValue:
metadataItemsFromArray:filteredByMetadataItemFilter:
_metadataItemWithFigMetadataDictionary:
_initWithReader:itemIndex:
_figMetadataSpecificationReturningError:
cancelLoading
_priv
setExtraAttributes:
metadataItem
keyPathsForValuesAffectingIdentifier
setIdentifier:
setExtendedLanguageTag:
setTime:
setDuration:
setStartDate:
setDataType:
_mutablePriv
valueRequest
valueLoadingHandler
valueStatus
valueLoadingError
loadingCompletionHandlers
readWriteQueue
metadataItemValueRequestWithMetadataItem:
_valueForKeyDependsOnMetadataValue:
_valueStatus
arrayWithObject:
_waitForLoadingOfValueDependentKey:
metadataItemWithPropertiesOfMetadataItem:valueLoadingHandler:
_valueRequestDidFinish
_lazyMetadataItem
weakReferenceToMetadataItem
initWithMetadataItem:
respondWithValue:dataType:
respondWithValue:
respondWithError:
_valueRequest
figAsset
chapterGroupIndex
chapterIndex
chapterType
chapterDataType
valueErrorCode
completions
_initWithAsset:chapterGroupIndex:chapterIndex:chapterType:extendedLanguageTag:languageCode:chapterDataType:time:duration:
_figAsset
_addFigAssetNotifications
_removeFigAssetNotifications
_ensureValueLoadedSync
_setValueStatus:figErrorCode:
_takeValueFrom:
_chapterGroupIndex
_chapterIndex
_privChapter
addKeySpace:key:toWhitelistDictionary:
addIdentifier:toWhitelistDictionary:
metadataItemFilterForSharing
_itemFilterInternal
initWithFaceID:hasRollAngle:rollAngle:hasYawAngle:yawAngle:time:duration:bounds:
rangeOfString:options:
URLWithString:
URLWithString:relativeToURL:
dictionaryWithObject:forKey:
sharedSession
scheme
statusCode
MIMEType
dataTaskWithURL:completionHandler:
resume
type
setType:
setInput:
setOriginalMetadataObject:
_duration
_bounds
_type
_originalMetadataObject
initWithType:time:duration:bounds:originalMetadataObject:sourceCaptureInput:
initDerivedMetadataObjectFromMetadataObject:withTransform:isVideoMirrored:rollAdjustment:
_objectInternal
setFaceID:
setHasRollAngle:
setRollAngle:
setHasYawAngle:
setYawAngle:
hasLeftEyeClosedConfidence
setHasLeftEyeClosedConfidence:
leftEyeClosedConfidence
setLeftEyeClosedConfidence:
hasRightEyeClosedConfidence
setHasRightEyeClosedConfidence:
rightEyeClosedConfidence
setRightEyeClosedConfidence:
hasSmileConfidence
setHasSmileConfidence:
smileConfidence
setSmileConfidence:
hasLeftEyeBounds
setHasLeftEyeBounds:
leftEyeBounds
setLeftEyeBounds:
hasRightEyeBounds
setHasRightEyeBounds:
rightEyeBounds
setRightEyeBounds:
_faceID
_hasRollAngle
_rollAngle
_hasYawAngle
_yawAngle
_hasLeftEyeClosedConfidence
_leftEyeClosedConfidence
_hasRightEyeClosedConfidence
_rightEyeClosedConfidence
_hasSmileConfidence
_smileConfidence
_hasLeftEyeBounds
_leftEyeBounds
_hasRightEyeBounds
_rightEyeBounds
initWithFaceID:hasRollAngle:rollAngle:hasYawAngle:yawAngle:time:duration:bounds:optionalInfoDict:originalMetadataObject:sourceCaptureInput:
payload
setPayload:
_payload
initWithTime:faceKitDictionary:input:
trackedFacesWithTime:faceKitDictionary:input:
_trackedFacesObjectInternal
initWithTime:motionDictionary:input:
offlineVideoStabilizationMotionObjectWithTime:motionDictionary:input:
_offlineVISMotionObjectInternal
corners
setCorners:
setStringValue:
basicDescriptor
setBasicDescriptor:
decoded
setDecoded:
descriptor
setDescriptor:
initWithFigEmbeddedCaptureDeviceMachineReadableCodeDictionary:input:
machineReadableCodeObjectWithFigEmbeddedCaptureDeviceMachineReadableCodeDictionary:input:
assetProxyWithPropertyList:
_assetInspector
propertyListForProxy
makePropertyListForProxyWithOptions:
loader
tracks
makeTracksArrayOnce
numberWithShort:
initWithPropertyList:
initWithFigAsset:forAsset:
_formatReader
assetInspector
_classForTrackInspectors
trackCount
_initWithAsset:trackIndex:
makePropertyListForMovieProxyHeader:name:
_playbackItem
_assetInspectorLoader
_assetProxy
loadChapterInfoOnce
chapterGroupInfo
anchorChapterType
availableChapterLanguages
availableCanonicalizedChapterLanguages
availableChapterLocales
loggingIdentifier
URLAssetWithURL:options:
initWithURL:options:
initWithURL:playbackItem:trackIDs:dynamicBehavior:
initWithData:contentType:options:
makeAssetLoggingIdentifier
_isStreaming
loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:
_mindsFragments
_fragmentMindingInterval
_setFragmentMindingInterval:
_setIsAssociatedWithFragmentMinder:
preferredRate
preferredVolume
preferredSoundCheckVolumeNormalization
preferredTransform
maximumVideoResolution
availableVideoDynamicRanges
preferredDisplayCriteria
_ensureAllDependenciesOfKeyAreLoaded:
tracksWithMediaType:
naturalSize
naturalTimeScale
providesPreciseDurationAndTiming
alternateTrackGroups
initWithAsset:trackIDs:
trackGroups
trackIDs
trackWithTrackID:
_firstTrackGroupWithMediaTypes:
_mediaSelectionGroupDictionaries
mediaSelectionGroupWithAsset:dictionary:
_plistHasOptionIdentifier:
mediaSelectionOptionWithPropertyList:
_initWithAsset:
preferredMediaSelection
availableMediaCharacteristicsWithMediaSelectionOptions
mediaSelectionGroupForMediaCharacteristic:
options
selectMediaOption:inMediaSelectionGroup:
trackReferences
creationDate
lyrics
commonMetadata
availableMetadataFormats
arrayByAddingObject:
metadataForFormat:
arrayByAddingObjectsFromArray:
_initWithAsset:trackID:
initWithAsset:mediaType:
tracksWithMediaCharacteristics:
initWithAsset:mediaCharacteristics:
hasProtectedContent
isPlayable
isExportable
isReadable
isComposable
isCompatibleWithSavedPhotosAlbum
isCompatibleWithAirPlayVideo
canContainFragments
containsFragments
overallDurationHint
supportsAnalysisReporting
_assetAnalysisMessages
assetWithURL:
assetWithURL:figPlaybackItem:trackIDs:dynamicBehavior:
assetWithData:contentType:options:
expectsPropertyRevisedNotifications
supportsPlayerItems
_setLoggingIdentifier:
_nameForLogging
_comparisonToken
statusOfValueForKey:
_loadValuesSynchronouslyForKeys:trackKeys:
_absoluteURL
_mutableComposition
_needsLegacyChangeNotifications
referenceRestrictions
audioAlternatesTrackGroup
subtitleAlternatesTrackGroup
mediaSelectionGroupForPropertyList:mediaSelectionOption:
allMediaSelections
_ID3Metadata
_tracksWithClass:
_tracksDidChange
tracksWithMediaCharacteristic:
compatibleTrackForCompositionTrack:
_hasResourceLoaderDelegate
_handleURLRequest:
_asset
figChapterGroupInfo
figChapters
initWithLocaleIdentifier:
_loadChapterInfo
timeRange
canonicalLanguageIdentifierFromString:
_chapterDataTypeForMediaSubType:
initWithItems:timeRange:
_addChapterMetadataItem:timeRange:toChapters:fromIndex:
_chapterMetadataGroupsWithFigChapterGroups:titleLanguage:containingItemsWithCommonKeys:
_availableCanonicalizedChapterLanguages
_chapterMetadataGroupsWithTitleLanguage:containingItemsWithCommonKeys:
_chapterMetadataGroupsBestMatchingPreferredLanguages:containingItemsWithCommonKeys:
chapterMetadataGroupsBestMatchingPreferredLanguages:
chapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:
formatDescriptions
resolvedURL
_chapterTracks
_containsAtLeastOnePlayableAudioTrack
_containsAtLeastOnePlayableVideoTrack
_exportURL
moovAtomSize
URLRequestHelper
customURLBridgeForNSURLProtocol
customURLAuthenticationUsingKeychain
resourceLoader
makeOneResourceLoaderOnly
assetCache
makeOneAssetDownloadCacheOnly
tracksAccessQueue
initializationOptions
hasInstanceIdentifierMapping
sessionReference
propertyList:isValidForFormat:
_figFileMIMETypes
unionSet:
_figStreamingMIMETypes
_figStreamingUTIs
_figFileUTIs
_figFilePathExtensions
allFileTypeIdentifiers
_fileUTTypes
_streamingUTTypes
_UTTypes
_figMIMETypes
audiovisualMIMETypes
_avfValidationPlist
_getFigAssetiTunesStoreContentInfoFromURLAssetiTunesStoreContentInfo:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
componentsSeparatedByString:
properties
initWithAsset:
_classForFigAssetInspectorLoader
initWithFigError:userInfo:
_setAssetInspectorLoader:
_getFigAssetCreationOptionsFromURLAssetInitializationOptions:figAssetCreationFlags:error:
userInfo
reason
initWithURL:figAssetCreationFlags:figAssetCreationOptions:forAsset:
initWithFigAsset:
_errorForFigNotificationPayload:key:
UTF8String
_removeUserInfoObject
setFigAssetProvider:
_classForAssetTracks
absoluteURL
_figHFSFileTypes
audiovisualTypes
isPlayableExtendedMIMEType:
_ensureAssetDownloadCache
creationOptions
_URLAsset
_managedAssetCache
shouldMatchDataInCacheByURLPathComponentOnly
shouldMatchDataInCacheByURLWithoutQueryComponent
identifyingTagClass
identifyingTag
_instanceIdentifier
originalNetworkContentURL
downloadToken
SHA1Digest
cacheKey
downloadDestinationURL
_shouldOptimizeAccessForLinearMoviePlayback
initWithURLRequestHelper:asset:
_onUnhandledContentKeyRequest:
removeObserver:name:object:
_stopHandlingURLRequestsFromRequestOriginator:
_startHandlingURLRequestsFromRequestOriginator:
processContentKeyRequestWithIdentifier:initializationData:options:
object
_resourceLoader
URLAsset
contentKeySession
_requestDictionary
_handleRequestForAsset:contentKeySession:request:identifier:
URLRequestOriginator
setURLRequestOriginator:
setResourceLoader:
_finishLoadingCustomURLProviderRequestWithResponseProperties:context:
handleURLRequest:
figAssetProvider
_weakReferenceToSelf
_weakReferenceToAsset
_figNotificationDispatcher
_URLRequestOriginator
_figAssetProvider
_weakReferenceToResourceLoader
_setUserInfoObject:
instanceIdentifierMapTable
userInfoObjectForURLAssetInstanceIdentifier:
setUserInfoObject:forURLAsset:
userInfoObjectForURLAsset:
_dataLengthLimit
_getFigAssetCreationOptionsFromDataAssetInitializationOptions:figAssetCreationFlags:
initWithData:contentType:
_initializationOptions
_loader
_allocateTracksOnceOnly
_tracks
objectEnumerator
setMediaCharacteristics:
hasMediaCharacteristics:
trackEnumeratorWithAsset:
_mediaCharacteristics
_enumerator
_figContentKeySession
createAndInstallCustomURLHandlerForAsset:outHandler:
_setContentKeySessionCustomURLHandler:
isInternal
mayRequireContentKeysForMediaDataProcessing
_attachToContentKeySession:failedSinceAlreadyAttachedToAnotherSession:
_attachedToExternalContentKeySession
expire
setMaxConcurrentOperationCount:
setUnderlyingQueue:
sessionWithConfiguration:delegate:delegateQueue:
_installHandlerForNSURLSessionConfiguration:queue:
_audioEffect
initWithMinimumCutOffFrequency:maximumCutOffFrequency:bypassThreshold:sweepValue:
sweepFilterEffectParametersWithMinimumCutOffFrequency:maximumCutOffFrequency:bypassThreshold:sweepValue:
sweepValue
minimumCutOffFrequency
maximumCutOffFrequency
bypassThreshold
sweepFilterEffectWithSweepValue:
_sweepFilterAudioEffect
generator
appliesPreferredTrackTransform
maximumSize
apertureMode
requestedTimeToleranceBefore
requestedTimeToleranceAfter
requests
requestsQueue
nextRequestID
videoComposition
customVideoCompositorSession
imageRequestQueue
cancelledRequestIDThreshold
_NSErrorForError:
renderSize
_scaledSizeForRenderSize:
_videoSettingWithSize:
assetReaderWithAsset:error:
assetReaderVideoCompositionOutputWithVideoTracks:videoSettings:
_setVideoComposition:customVideoCompositorSession:
setVideoComposition:
assetReaderTrackOutputWithTrack:outputSettings:
setAppliesPreferredTrackTransform:
_makeAutoreleasedAssetReader
_copyCGImageAtTime:usingAssetReader:error:
_optionsDictionary
_ensureFigAssetImageGeneratorReturningError:
_isValidReturningExceptionReason:
renderScale
_copyFigVideoCompositor:andSession:recyclingSession:forFigRemaker:error:
customVideoCompositor
_requestWithRequestID:
setTimeRange:
_setReadSingleSample:
startReading
copyNextSampleBuffer
cancelReading
assetImageGeneratorWithAsset:
copyCGImageAtTime:actualTime:error:
generateCGImagesAsynchronouslyForTimes:completionHandler:
cancelAllCGImageGeneration
setMaximumSize:
setApertureMode:
setRequestedTimeToleranceBefore:
setRequestedTimeToleranceAfter:
_didGenerateCGImage:
_failedToGenerateCGImage:
_serverDied
weakReferenceToSelf
trackInspector
assetWeakReference
figAssetTrackNotificationListenerWeakReference
figAssetTrackNotificationSource
arrayWithObjects:
_figAssetTrack
assetTrackInspectorWithAsset:trackID:trackIndex:
_startListeningToFigAssetTrackNotifications
_initWithAsset:trackID:trackIndex:
_stopListeningToFigAssetTrackNotifications
_figTrackReader
isDecodable
playabilityValidationResult
isSelfContained
totalSampleDataLength
mediaCharacteristics
hasMediaCharacteristic:
mediaPresentationTimeRange
mediaDecodeTimeRange
requiresFrameReordering
estimatedDataRate
dimensions
layer
loudnessInfo
nominalFrameRate
minSampleDuration
mediaCharacteristicsForMediaTypes
segments
segmentForTrackTime:
samplePresentationTimeForTrackTime:
alternateGroupID
defaultAlternateGroupID
provisionalAlternateGroupID
isExcludedFromAutoselectionInTrackGroup
associatedTracksOfType:
_firstAssociatedTrackWithAssociationType:
_trackReferences
_assetTrackInspector
keyPathsForValuesAffectingTimeRange
_subtitleFormatDescriptionMatchesTextDisplayFlags:flagsMask:
_fallbackTrack
_followingTrackAmongTracks:
_pairedForcedOnlySubtitlesTrack
availableTrackAssociationTypes
_track
timeMapping
_hasMultipleEdits
_hasScaledEdits
_hasEmptyEdits
_hasMultipleDistinctFormatDescriptions
_firstFormatDescriptionIsLPCM
initWithDataOutput:
dataOutput
synchronizedDataQueue
timestampAdjustmentsDataQueue
setTimestampAdjustmentsDataQueue:
mdoTimeStampHistoryQueue
setMdoTimeStampHistoryQueue:
_dataOutput
_synchronizedDataQueue
_timestampAdjustmentsDataQueue
_mdoTimeStampHistoryQueue
dataOutputQueue
dataOutputs
dataOutputsStorageMutex
dataOutputsStorage
masterSynchronizedDataQueueMaxDepth
synchronizingVideoAndDepth
_computedMasterSynchronizedDataQueueMaxDepthForDataOutputs:
_assignTimestampAdjustmentQueueToDataOutputStorageWithCommonProvenance
_createTimestampHistoryQueuesForMetadataOutputStoragesWithNoTimestampAdjustmentQueues
_overrideDataOutputDelegatesForDelegateCallbackQueue:
_initWithSampleBuffer:sampleBufferWasDropped:
_appendSynchronizedData:forCaptureOutput:
_initWithMetadataObjects:
_initWithDepthData:timestamp:depthDataWasDropped:droppedReason:
timestamp
setAdjustedTimestamp:
adjustedTimestamp
_dispatchRipenedSynchronizedData
_adjustSynchronizedDataTimestamps
_earliestSlaveSynchronizedDataQueueTimestamp
_dispatchSynchronizedDataWithTimestamp:
_allSlaveSynchronizedDataOutputsContainTimestampEqualToOrGreaterThanMasterTimestamp:
hasCorrespondingDepthData
_initWithPossibleDataOutputs:
_setSynchronizedData:forCaptureOutput:
dataOutputSynchronizer:didOutputSynchronizedDataCollection:
captureOutput:didOutputSampleBuffer:fromConnection:
captureOutput:didDropSampleBuffer:fromConnection:
captureOutput:didOutputMetadataObjects:fromConnection:
depthDataOutput:didOutputDepthData:timestamp:connection:
depthDataOutput:didDropDepthData:timestamp:connection:reason:
initWithDataOutputs:
delegateCallbackQueue
propertyStorage
pixelBufferAttributeMediator
stateDispatchQueue
figConfigurationQueue
layerInteractionQueue
currentItemPropertyUpdateQueue
layersQ
proxyTimebase
logPerformanceData
audioSessionMediaPlayerOnly
IAPDCallbackToken
prerollIDMutex
lastItem
queueModifications
pendingFigPlayerProperties
audioSession
vibrationPattern
outputContext
IOwnTheFigPlayer
allowsVideoPlaybackWhileInBackground
handlersToCallWhenReadyToPlay
shouldReduceResourceUsage
playerRole
externalPlaybackVideoGravity
userVolume
minRateForAudioPlayback
maxRateForAudioPlayback
autoSwitchStreamVariants
preparesItemsForPlaybackAsynchronously
allowsOutOfBandTextTrackRendering
muted
closedCaptionDisplayEnabled
appliesMediaSelectionCriteriaAutomatically
dynamicallyChoosesInitialVariant
limitsBandwidthForCellularAccess
usesAudioOnlyModeForExternalPlayback
allowsPixelBufferPoolSharing
disallowsAMRAudio
disallowsHardwareAcceleratedVideoDecoder
layerDestinationIsTVOut
preventsDisplaySleepDuringVideoPlayback
disallowsVideoLayerDisplayCompositing
allowsExternalPlayback
usesExternalPlaybackWhileExternalScreenIsActive
captionPipelineStrategy
audioOutputDeviceUniqueID
clientName
multichannelAudioStrategy
clientPriority
PIPModePossible
isDisplayingClosedCaptions
externalPlaybackActive
airPlayVideoActive
isConnectedToPhysicalSecondScreen
outputObscuredDueToInsufficientExternalProtection
ancillaryPerformanceInformationForDisplay
automaticallyWaitsToMinimizeStalling
usesLegacyAutomaticWaitingBehavior
timeControlStatus
reasonForWaitingToPlay
currentItemPresentationSize
currentItemNonForcedSubtitlesEnabled
videoLayers
subtitleLayers
closedCaptionLayers
avPlayerLayers
nextPrerollIDToGenerate
pendingPrerollID
prerollCompletionHandler
currentItemSuppressesVideoLayersCallbackInvoker
currentItemPreferredPixelBufferAttributesCallbackInvoker
figPlayer
figPlaybackItemToIdentifyNextCurrentItem
needsToCreateFigPlayer
cachedFigMediaSelectionCriteriaProperty
itemsInFigPlayQueue
expectedAssetTypes
reevaluateBackgroundPlayback
hostApplicationInForeground
hadAssociatedOnscreenPlayerLayerWhenSuspended
figMasterClock
captionRenderingStrategy
displaysUsedForPlayback
preferredVideoDecoderGPURegistryID
registerForScreenConnectionChanges
initWithURL:
initWithPlayerItem:
_attachToPlayer:
_addItemToLinkedList_invokeOnIvarAccessQueue:afterItem:
_runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:modificationBlock:
playerItemWithURL:
propertyStorageCachePolicy
initWithCachePolicy:keysRequiringExplicitPerThreadSignal:
makePlayerLoggingIdentifier
setAllowsExternalPlayback:
setAppliesMediaSelectionCriteriaAutomatically:
setAutomaticallyWaitsToMinimizeStalling:
processInfo
processIdentifier
applicationInfoForPID:
_didFinishSuspension:
_willEnterForeground:
sharedCallbackContextRegistry
registerCallbackContextObject:
_addFPListeners
initWithFigPlayer:
unregisterCallbackContextForToken:
_removeFPListeners
_stopObservingPropertiesOfCurrentItem:
_removeAllLayers
_stateDispatchQueue
setMasterClock:
setValue:forUndefinedKey:
_items
_playerChangeStatusToFailedWithError:
_rateDidChangeNotificationPayloadForAVFRateChangeReason:rateChangeIdentifier:
_copyFigPlayer
removeRequestedPixelBufferAttributesAttributesForKey:
_preferredPixelBufferAttributes
_suppressesVideoLayers
setRequestedPixelBufferAttributes:forKey:
setLayersAreSuppressed:
mediatedPixelBufferAttributes
_updateDecoderPixelBufferAttributes:onFigPlayer:
_startObservingPropertiesOfCurrentItem:
_isReadyForInspectionOfPresentationSize
_getCachedPresentationSize:
_getCachedNonForcedSubtitleEnabled:
_copyProxyTimebase
_playerWillAccessCurrentItemKeypaths
_playerDidAccessCurrentItemKeypaths
_synchronizeWithNewCurrentItem
_updateCurrentItemPreferredPixelBufferAttributesAndVideoLayerSuppression
_inferredTimeControlStatusAndWaitingReason:forRate:
_removeItem:
_applyPlayQueueChangesToFigPlayerWithCompletionHandler:
_updateProxyTimebaseFromNewCurrentItem
_itemOkayToPlayWhileTransitioningToBackground:
pause
_removeItemFromLinkedList_invokeOnIvarAccessQueue:
_items_invokeOnIvarAccessQueue
_makeReadyForEnqueueingWithCompletionHandler:
_createAndConfigureFigPlayerWithType:completionHandler:
_createFigPlayerWithType:player:
_isAirPlayVideoActive
isExternalPlaybackActive
_pendingFigPlayerPropertyForKey:
_setPendingFigPlayerProperty:forKey:
_pendingFigPlayerProperties
_isVideoPlaybackAllowedWhileInBackground
_attachVideoLayersToFigPlayer
_attachClosedCaptionLayersToFigPlayer
_attachFigPlayerToSubtitleLayers
_setNeroVideoGravityOnFigPlayer
_addToPlayQueueOfFigPlayerOfPlayer:afterFigPlaybackItemOfItem:
_applyLinkedListOfItemsToFigPlayerUsingBlock:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_insertAfterItem:
_setCurrentItem:
modificationForInsertingItem:afterItem:
_enqueuePlayQueueModification_invokeOnIvarAccessQueue:
item
modificationType
afterItem
_removeFromPlayQueueOfFigPlayerOfAttachedPlayer
_nextItem
_previousItem
_removeFromItems
modificationForRemovingItem:
_enumerateItemsUsingBlock:
_rateDidChangeNotificationPayloadForFigRateChangeReason:rateChangeIdentifier:
setRate:withVolumeRampDuration:playImmediately:rateChangeReason:
_usesLegacyAutomaticWaitingBehavior
_timeControlStatusAndWaitingReason:forPlaybackState:
_timeControlStatusAndWaitingReason:
currentTime
seekToDate:completionHandler:
seekToTime:completionHandler:
_createPrerollID
_cancelPendingPrerollAndRegisterPrerollCompletionHandler:
_unregisterAndReturnRetainedPrerollCompletionHandler
playerAVAudioSession
getVolume:forCategory:
figPlayerActionForActionAtItemEnd:
_setActionAtItemEnd:allowingAdvance:
contextID
_detachVideoLayersFromFigPlayer:
_detachClosedCaptionLayersFromFigPlayer:
_detachFigPlayerFromSubtitleLayers
_closedCaptionLayers
_avPlayerLayers
opacity
_maximumAVPlayerLayerDisplaySize
_subtitleLayers
_videoLayers
_isIAPDExtendedModeActive
setCaptionRenderingStrategy:
_externalPlaybackVideoGravity
_fpNotificationNames
_copyPerformanceDataForCurrentItem
availableHDRModes
fireAvailableHDRModesDidChangeNotification
playerWithURL:
playerWithPlayerItem:
playerWithFigPlayer:
automaticallyNotifiesObserversOfCurrentItem
automaticallyNotifiesObserversOfRate
automaticallyNotifiesObserversOfUsesLegacyAutomaticWaitingBehavior
automaticallyNotifiesObserversOfUserVolume
automaticallyNotifiesObserversOfVibrationPattern
keyPathsForValuesAffectingVolume
keyPathsForValuesAffectingMuted
keyPathsForValuesAffectingActionAtItemEnd
keyPathsForValuesAffectingClosedCaptionDisplayEnabled
automaticallyNotifiesObserversOfExternalPlaybackActive
automaticallyNotifiesObserversOfUsesAudioOnlyModeForExternalPlayback
automaticallyNotifiesObserversOfAirPlayVideoActive
automaticallyNotifiesObserversOfUsesAirPlayVideoWhileAirPlayScreenIsActive
checkForAvailableHDRModesChanges
initWithDispatchQueue:
_propertyStorage
_noteNewPresentationSizeForPlayerItem:
_noteNewNonForcedSubtitleDisplayEnabledForPlayerItem:
_itemIsReadyToPlay:
_advanceCurrentItemAccordingToFigPlaybackItem:
_advanceToNextItem
prepareItem:withCompletionHandler:
_insertItem:afterItem:
setExpectedAssetTypes:
_setAncillaryPerformanceInformationForDisplay:
_ancillaryPerformanceInformationForDisplay
replaceCurrentItemWithPlayerItem:
_removeAllItems
_rate
setRate:withVolumeRampDuration:
playImmediatelyAtRate:
_timeControlStatus
_reasonForWaitingToPlay
_setUsesLegacyAutomaticWaitingBehavior:
seekToDate:
seekToTime:
seekToTime:toleranceBefore:toleranceAfter:
setRate:time:atHostTime:
prerollAtRate:completionHandler:
cancelPendingPrerolls
prerollOperationDidComplete:notificationPayload:
_userVolume
_setUserVolume:
setVibrationPattern:
_playerVolume
_isMuted
isMuted
setMuted:
isClosedCaptionDisplayEnabled
setClosedCaptionDisplayEnabled:
_isDisplayingClosedCaptions
setShouldReduceResourceUsage:
setPlayerRole:
setUsesExternalPlaybackWhileExternalScreenIsActive:
_externalPlaybackActive
externalPlaybackType
setUsesAudioOnlyModeForExternalPlayback:
setOutputContext:
allowsAirPlayVideo
setAllowsAirPlayVideo:
_airPlayVideoActive
isAirPlayVideoActive
usesAirPlayVideoWhileAirPlayScreenIsActive
setUsesAirPlayVideoWhileAirPlayScreenIsActive:
play
addPeriodicTimeObserverForInterval:queue:usingBlock:
addBoundaryTimeObserverForTimes:queue:usingBlock:
removeTimeObserver:
_pixelBufferAttributeMediator
setExternalPlaybackVideoGravity:
_setFigPlaybackItemToMakeCurrent:
_shouldLogPerformanceData
_logPerformanceDataForPreviousItem
_logPerformanceDataForCurrentItem
_setDynamicallyChoosesInitialVariant:
_dynamicallyChoosesInitialVariant
_setLimitsBandwidthForCellularAccess:
_limitsBandwidthForCellularAccess
_setAllowsVideoPlaybackWhileInBackground:
_allowsVideoPlaybackWhileInBackground
_player
setPreventsDisplaySleepDuringVideoPlayback:
_extractFPExternalProtectionStatus:
allKeysForObject:
_externalProtectionStatus
_playbackDisplaysForFigPlayer
_displaysUsedForPlayback
_setDisplaysUsedForPlayback:
_outputObscuredDueToInsufficientExternalProtection
removeAudioPlaybackRateLimits
isAudioPlaybackEnabledAtAllRates
setMinRateForAudioPlayback:
setMaxRateForAudioPlayback:
sharedApplication
isSuspendedUnderLock
currentCarPlayExternalDevice
_CALayerDestinationIsTVOut
_hasAssociatedAVPlayerLayerInPIPMode
_carplayIsActive
_applicationHasExternallyDisplayedAVPlayerLayerAndIsUnderDeviceLock
assetTrack
_hasAssociatedOnscreenAVPlayerLayer
_shouldDetachVideoLayersFromFigPlayer
_clientName
_hasEnabledVideo
setActive:error:
isIAPDExtendedModeActive
_setCALayerDestinationIsTVOut:
_setWantsVolumeChangesWhenPausedOrInactive:
_setEQPreset:
_setStoppingFadeOutDuration:
_setClientName:
_clientPriority
_setClientPriority:
_setPreventsSleepDuringVideoPlayback:
_preventsSleepDuringVideoPlayback
_setPreferredLanguageList:
_resumePlayback:error:
setAllowsPixelBufferPoolSharing:
setDisallowsAMRAudio:
setDisallowsHardwareAcceleratedVideoDecoder:
figDictionary
initWithFigDictionary:
setMediaSelectionCriteria:forMediaCharacteristic:
mediaSelectionCriteriaForMediaCharacteristic:
defaultMediaSelectionCriteriaForMediaCharacteristic:
setAudioOutputDeviceUniqueID:
setAutoSwitchStreamVariants:
setPreparesItemsForPlaybackAsynchronously:
automaticallyNotifiesObserversOfAutoSwitchStreamVariants
setAllowsOutOfBandTextTrackRendering:
setMultichannelAudioStrategy:
setCaptionPipelineStrategy:
setAudioSession:
initWithModificationType:item:afterItem:
_modificationType
_item
_afterItem
setPreferredVideoDecoderGPURegistryID:
setLoggingIdentifier:
handleFailureInFunction:file:lineNumber:description:
_copyFigPlaybackItem
_setTimedMetadata:
cancelPendingSeeks
callbackContextForToken:
audioTimePitchAlgorithm
mediaDataRequester
scheduledAudioParameters
readOnlyControlTimebase
weakReferenceToSynchronizer
figAudioRenderer
startRequestingMediaData
_initializeTimebase
setAudioTimePitchAlgorithm:
_installNotificationHandlers
_uninstallNotificationHandlers
_transitionToStatus:error:
_audioVolumeCurve
_transitionToFailedStatusWithOSStatus:
initWithMediaDataConsumer:requestQueue:requestBlock:
sampleBufferAudioRenderer
isReadyForMoreMediaData
copyFigSampleBufferAudioRenderer:
setRenderSynchronizer:error:
enqueueSampleBuffer:
flush
requestMediaDataWhenReadyOnQueue:usingBlock:
stopRequestingMediaData
_triggerMediaRequestCallback
_wasFlushedAutomaticallyAtTime:
setScheduledAudioParameters:
flushFromSourceTime:completionHandler:
_audioRendererInternal
initWithAssetWriterInput:
sourceFormatHint
assetWriterInput
_createSerializedRepresentationWithFormatDescription:error:
_appendSampleBuffer:error:
_tellAssetWriterToTransitionToFailedStatusWithError:
assetWriterInputMetadataAdaptorWithAssetWriterInput:
appendTimedMetadataGroup:
externalProtectionState
_monitor
setAnchorPoint:
setFont:
setTruncationMode:
setWrapped:
setAlignmentMode:
setForegroundColor:
mainDisplay
getHudSetting
_hudUpdate
getVideoRange:
runningAnInternalBuild
isHidden
superlayer
accessLog
setColor:
setOpacity:
setFontSize:
events
playbackSessionID
getTrackFormatDesc:
currentVideoFrameRate
presentationSize
observedBitrate
convertBitrate:
averageVideoBitrate
averageAudioBitrate
indicatedBitrate
indicatedAverageBitrate
variantIndex
numberOfStalls
numberOfDroppedVideoFrames
loadedTimeRanges
setString:
getScaleFactorForDisplaySize:
valueLoadedForKey:onObject:
.cxx_destruct
playerLayer
_hudTimer
_showHud
_colorId
_opacity
_fontSizeInt
_updateUISettings
_hudXoffset
_hudYoffset
_hudUpdateInterval
_showCompleteURI
_prevVariantIdx
_prevStallCount
_totalStallCount
_loadingStatusCache
figPlaybackItemAccessorQueue
seekQueue
seekIDMutex
automaticallyLoadedAssetKeys
wasInitializedWithURL
figPlaybackItem
cachedTracks
syncLayers
itemOutputs
itemVideoOutputs
itemLegibleOutputsForKeys
itemMetadataOutputsForKeys
suppressesVideoLayers
loopingTimebase
figTimebase
didBecomeReadyForInspectionOfTracks
didBecomeReadyForInspectionOfPresentationSize
didBecomeReadyForInspectionOfDuration
didBecomeReadyForInspectionOfMediaSelectionOptions
assetWithFigPlaybackItem
trackIDsForAssetWithFigPlaybackItem
needTimedMetadataNotification
didBecomeReadyForBasicInspection
audioMix
forwardPlaybackEndTime
reversePlaybackEndTime
seekingWaitsForVideoCompositionRendering
textStyleRules
initialFigTimePitchAlgorithm
canUseNetworkResourcesForLiveStreamingWhilePaused
maximumForwardBufferDuration
maximumTrailingBufferDuration
preferredPeakBitRate
itemCollectors
itemMetadataCollectors
RTCReportingFlags
gaplessInfo
soundCheckVolumeNormalization
volumeAdjustment
initialLimitReadAhead
restrictions
mediaKind
reversesMoreVideoFramesInMemory
reversesMoreVideoFramesInMemoryWasSet
aggressivelyCachesVideoFrames
aggressivelyCachesVideoFramesWasSet
initialContinuesPlayingDuringPrerollForSeek
initialContinuesPlayingDuringPrerollForRateChange
usesIFrameOnlyPlaybackForHighRateScaledEditsWasSet
usesIFrameOnlyPlaybackForHighRateScaledEdits
minimumIntervalForIFrameOnlyPlayback
minimumIntervalForIFrameOnlyPlaybackWasSet
speedThresholdForIFrameOnlyPlayback
speedThresholdForIFrameOnlyPlaybackWasSet
initialDate
initialEstimatedDate
requiresAccessLog
suppressesAudioOnlyVariants
imageQueueInterpolationCurve
imageQueueInterpolationCurveWasSet
blendsVideoFrames
blendsVideoFramesWasSet
videoApertureMode
usesMinimalLatencyForVideoCompositionRendering
initialAlwaysMonitorsPlayability
initialPlaybackLikelyToKeepUpTrigger
savesDownloadedDataToDiskWhenDone
networkUsuallyExceedsMaxBitRate
allowProgressiveSwitchUp
allowProgressiveStartup
allowProgressiveResume
IFramePrefetchTargetDimensions
AVKitData
preferredMaximumResolution
canPlayFastForward
canPlayFastReverse
canPlayReverse
canPlaySlowReverse
canPlaySlowForward
canStepForward
canStepBackward
playbackBufferEmpty
playbackBufferFull
playbackLikelyToKeepUp
nonForcedSubtitlesEnabled
hasEnabledVideo
hasVideo
hasEnabledAudio
hasEnqueuedVideoFrame
externalProtectionRequested
seekableTimeRanges
seekableTimeRangesLastModifiedTime
loopTimeRange
needToSeekAfterCreatingFigPlaybackItem
initialTime
initialSetTimeFlags
initialMinSnapTime
initialMaxSnapTime
nextSeekIDToGenerate
pendingSeekID
seekCompletionHandler
previousItem
nextItem
playerConnection
initialWillNeverSeekBackwardsHint
decodesAllFramesDuringOrdinaryPlayback
decodesAllFramesDuringOrdinaryPlaybackWasSet
clientsOriginalVideoComposition
figVideoCompositor
eqPreset
rampInOutInfo
audibleDRMInfo
initialVariantIndex
mediaOptionsSelectedByClient
serviceIdentifier
timedMetadata
handlersToCallWhenReadyForEnqueueing
haveInitialSamples
haveCPEProtector
didInformObserversAboutAvailabilityOfTracks
didFireKVOForAssetForNonStreamingItem
mostRecentlyAppliedAudioMix
playerReference
didSetAssetToAssetWithFigPlaybackItem
figCPEProtector
videoEnhancementMode
initWithAsset:automaticallyLoadedAssetKeys:
_hasOverrideForSelector:
makeDerivedIdentifier
_setURL:
_setAsset:
_removeFAListeners
_removeLoopingTBListeners
setAudioMix:
setTextStyleRules:
setImageQueueInterpolationCurve:
setBlendsVideoFrames:
setReversesMoreVideoFramesInMemory:
setAggressivelyCachesVideoFrames:
setDecodesAllFramesDuringOrdinaryPlayback:
setServiceIdentifier:
setSoundCheckVolumeNormalization:
setVolumeAdjustment:
setMediaKind:
setRestrictions:
setAVKitData:
continuesPlayingDuringPrerollForRateChange
setContinuesPlayingDuringPrerollForRateChange:
continuesPlayingDuringPrerollForSeek
setContinuesPlayingDuringPrerollForSeek:
setUsesIFrameOnlyPlaybackForHighRateScaledEdits:
setMinimumIntervalForIFrameOnlyPlayback:
setSpeedThresholdForIFrameOnlyPlayback:
isNonForcedSubtitleDisplayEnabled
setNonForcedSubtitleDisplayEnabled:
currentMediaSelection
selectedMediaOptionInMediaSelectionGroup:
setVideoEnhancementMode:
_URL
_isExternalProtectionRequiredForPlayback
willAccessKVOForKey:
didAccessKVOForKey:
willAccessKVOForAllKeys
didAccessKVOForAllKeys
_willAccessKVOForKey:
_didAccessKVOForKey:
_mapAssetKeys:toFigAssetPropertySet:figAssetTrackPropertySet:callerName:
setSavesDownloadedDataToDiskWhenDone:
_updateLoopTimeRangeOnFigPlaybackItem
_updateForwardPlaybackEndTimeOnFigPlaybackItem
_updateReversePlaybackEndTimeOnFigPlaybackItem
_updateImageQueueInterpolationCurveOnFigPlaybackItem
_updateBlendsVideoFramesOnFigPlaybackItem
_updateReversesMoreVideoFramesInMemoryOnFigPlaybackItem
_updateAggressivelyCachesVideoFramesOnFigPlaybackItem
_quietlySetDecodesAllFramesDuringOrdinaryPlayback:
_updateContinuesPlayingDuringPrerollForSeekOnFigPlaybackItem
_updateContinuesPlayingDuringPrerollForRateChangeOnFigPlaybackItem
_updateUsesIFrameOnlyPlaybackForHighRateScaledEditsOnFigPlaybackItem
_updateMinimumIntervalForIFrameOnlyPlaybackOnFigPlaybackItem
_updateSpeedThresholdForIFrameOnlyPlaybackOnFigPlaybackItem
_updateCanUseNetworkResourcesForLiveStreamingWhilePausedOnFigPlaybackItem
frameDuration
_setVideoCompositionFrameDuration:
sourceTrackIDForFrameTiming
_setVideoCompositionSourceTrackIDForFrameTiming:
_setVideoCompositionRenderSize:
_setVideoCompositionRenderScale:
_configureVideoCompositionColorProperties
_serializableInstructions
_setVideoCompositionInstructions:
_setVideoCompositor:
_applyCurrentAudioMix
_updateSeekingWaitsForVideoCompositionRenderingOnFigPlaybackItem
_quietlySetEQPreset:
_updatePlaybackPropertiesOnFigPlaybackItem
_quietlySetVariantIndex:
_updateSoundCheckVolumeNormalizationOnFigPlaybackItem
_updateVolumeAdjustmentOnFigPlaybackItem
_updateFigTimePitchAlgorithmOnFigPlaybackItem
_applyMediaSelectionOptions
_updateTextStyleRulesOnFigPlaybackItem
_updateMediaKindOnFigPlaybackItem
_updateRestrictionsOnFigPlaybackItem
_quietlySetServiceIdentifier:
_setSyncLayersOnFigPlaybackItem:
_updateTimebase
_updateIFramePrefetchTargetDimensionsOnFigPlaybackItem
_updatePreferredPeakBitRateOnFigPlaybackItem
_updatePreferredMaximumResolutionOnFigPlaybackItem
_updateMaximumTrailingBufferDurationOnFigPlaybackItem
_updateMaximumForwardBufferDurationOnFigPlaybackItem
_updateVideoApertureModeOnFigPlaybackItem
_updateRTCReportingFlagsOnFigPlaybackItem
_metadataCollectors
_updateVideoEnhancementModeOnFigPlaybackItem
_createFigPlaybackItemForFigPlayer:asset:URL:flags:playbackItem:
_configurePlaybackItem
_updateLimitReadAheadOnFigPlaybackItem
playbackLikelyToKeepUpTrigger
_updatePlaybackLikelyToKeepUpTriggerOnFigPlaybackItem
willNeverSeekBackwardsHint
_updateWillNeverSeekBackwardsHintOnFigPlaybackItem
alwaysMonitorsPlayability
_updateAlwaysMonitorsPlayabilityOnFigPlaybackItem
_updateNonForcedSubtitleDisplayEnabledOnFigPlaybackItem
_updateUsesMinimalLatencyForVideoCompositionRenderingOnFigPlaybackItem
_cachedTracks
_attachToFigPlaybackItemOfPlayerItem:
_evaluateVideoOutputs
_evaluateLegibleOutputs
_evaluateMetadataOutputs
_respondToBecomingReadyForBasicInspection
_attachToFigPlayer
initWithWeakReferenceToPlayer:weakReferenceToPlayerItem:
addItemToPlayQueueAfterPlaybackItemOfItem:
removeItemFromPlayQueue
_addFAListeners
_isReadyForInspectionOfDuration
_markAsReadyForInspectionOfDuration
_markAsReadyForInspectionOfTracks
_forStreamingItemsVendAssetWithFigPlaybackItem
_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection
_presentationSize
errorLog
domain
_ensureAssetWithFigPlaybackItemWithTrackIDs:
playerItemTrackWithFigPlaybackItem:readyForInspection:trackID:asset:playerItem:
_isReadyForInspectionOfTracks
_tracksWithFPTrackIDArray:fromFigPlaybackItem:
_tracksFromAssetTrackIDs
_copyLoopingTimebase
_respondToBecomingReadyForBasicInspectionWithDuration:
_markAsReadyForInspectionOfMediaSelectionOptions
_informObserversAboutAvailabilityOfDuration:
_markAsReadyForBasicInspection
_markAsReadyForInspectionOfPresentationSize
_removeMediaOptionsSelectedByClient
_respondToFigPlaybackItemBecomingReadyForInpection
_kickAssetObserversIfAppropriate
_informObserversAboutAvailabilityOfTracks
_informObserversAboutAvailabilityOfPresentationSize
_isReadyForBasicInspection
_invokeReadyForEnqueueingHandlers
_canStepForward
_CreateSeekID
playerItem:shouldSeekToTime:toleranceBefore:toleranceAfter:
_cancelPendingSeekAndRegisterSeekCompletionHandler:
_unregisterInvokeAndReleasePendingSeekCompletionHandlerForSeekID:finished:
_copyTimebaseFromFigPlaybackItem:
_addLoopingTBListeners
limitReadAhead
setMaximumForwardBufferDuration:
inputParameters
_audioMixInputParametersForTrackID:
audioMixInputParameters
setTrackID:
_setAudioCurvesAccordingToInputParameters:forTrackID:
audioTapProcessor
_setAudioTapProcessor:forTrackID:
_setAudioTimePitchAlgorithm:forTrackID:
effectParameters
_setAudioEffectParameters:forTrackID:
_copyStateDispatchQueue
animationTool
_changeSeed
_deepCopy
detachVideoComposition
propertyListForTextStyleRules:
_seekableTimeRangesFromFPSeekableTimeIntervals:
_loadedTimeRangesFromFPPlaybableTimeIntervals:
_playbackProperties
_mediaOptionsSelectedByClient
_selectMediaOption:inMediaSelectionGroup:cacheIfAppropriate:
_isStreamingGroup
_setMediaOptionsSelectedByClient:forKey:
allowsEmptySelection
_mediaOptionsSelectedByClientForKey:
_groupMediaType
_groupID
_matchesGroupID:mediaType:
_selectMediaOption:usingFigSelectedMediaArrayObtainedFromGroup:
_cacheMediaSelectionOption:forMediaSelectionGroup:
_selectMediaOption:inStreamingGroup:cacheIfAppropriate:
_selectMediaOption:inNonStreamingGroup:cacheIfAppropriate:
_allowSelectMediaOptionsAutomaticallyUsingFigSelectedMediaArrayObtainedFromGroup:
_clearCachedMediaSelectionGroup:
_isReadyForInspectionOfMediaSelectionOptions
_propertyListForSelectedMediaOptionUsingFigSelectedMediaArrayObtainedFromGroup:
_hasSelectionInCachedMediaSelectionGroup:
defaultOption
_initWithAsset:selectedMediaArray:
getAndClearClientError
suppressesPlayerRendering
_suppressionForOutputs:
_setSuppressesVideoLayers:
setPreferredPeakBitRate:
setPreferredMaximumResolution:
_videoOutputs
_legibleOutputsForKeys
_updateVideoSuppressionOnFigPlaybackItem:basedOnOutputs:
_updateLegibleSuppressionOnFigPlaybackItem:basedOnOutputs:
_canPlayFastForward
_canPlayReverse
_canPlayFastReverse
_canStepBackward
playerItemWithAsset:
playerItemWithAsset:automaticallyLoadedAssetKeys:
automaticallyNotifiesObserversOfSavesDownloadedDataToDiskWhenDone
automaticallyNotifiesObserversOfUsesMinimalLatencyForVideoCompositionRendering
automaticallyNotifiesObserversOfVariantIndex
automaticallyNotifiesObserversOfHasEnabledVideo
automaticallyNotifiesObserversOfHasEnabledAudio
automaticallyNotifiesObserversOfNetworkUsuallyExceedsMaxBitRate
automaticallyNotifiesObserversOfAllowProgressiveSwitchUp
automaticallyNotifiesObserversOfAllowProgressiveStartup
automaticallyNotifiesObserversOfAllowProgressiveResume
automaticallyNotifiesObserversOfStatus
automaticallyNotifiesObserversOfAsset
automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp
automaticallyNotifiesObserversOfPlaybackBufferEmpty
automaticallyNotifiesObserversOfPlaybackBufferFull
automaticallyNotifiesObserversOfSeekableTimeRanges
automaticallyNotifiesObserversOfLoadedTimeRanges
automaticallyNotifiesObserversOfPresentationSize
automaticallyNotifiesObserversOfTracks
valueForKeyForKVO:
_playerConnection
_markAsNeedingNewAssetWithFigPlaybackItem
_setAssetToAssetWithFigPlaybackItemIfAppropriate
_markAssetWithFigPlaybackItemAsNeedingNewTracks
_trackWithTrackID:
_enabledTrackFormatDescriptions
_isAFileBasedItemThatsReadyToPlay
currentDate
setInitialDate:
currentEstimatedDate
setInitialEstimatedDate:
stepByCount:
_copyTimebase
setRTCReportingFlags:
setLimitReadAhead:
allowsExtendedReadAhead
setAllowsExtendedReadAhead:
preferredForwardBufferDuration
setPreferredForwardBufferDuration:
setMaximumTrailingBufferDuration:
setAlwaysMonitorsPlayability:
setPlaybackLikelyToKeepUpTrigger:
setWillNeverSeekBackwardsHint:
_setVideoCompositionColorPrimaries:
_setVideoCompositionColorYCbCrMatrix:
_setVideoCompositionColorTransferFunction:
setSeekingWaitsForVideoCompositionRendering:
setUsesMinimalLatencyForVideoCompositionRendering:
isPlaybackLikelyToKeepUp
isPlaybackBufferFull
isPlaybackBufferEmpty
progressTowardsPlaybackLikelyToKeepUp
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
playabilityMetrics
setLoopTimeRange:
_seekableTimeRanges
_loadedTimeRanges
setGaplessInfo:
liveUpdateInterval
setVariantIndex:
selectMediaOptionAutomaticallyInMediaSelectionGroup:
playerAppliesAutomaticMediaSelectionToGroup:
_isNonForcedSubtitleDisplayEnabled
_figCPEProtector
_removeSyncLayer:
_addSyncLayer:
_playbackItemNotificationPayloadToError:
_hasEnabledAudio
setNetworkUsuallyExceedsMaxBitRate:
setAllowProgressiveSwitchUp:
setAllowProgressiveStartup:
setAllowProgressiveResume:
setIFramePrefetchTargetDimensions:
maximumBitRate
setMaximumBitRate:
preferredPeakPresentationSize
setPreferredPeakPresentationSize:
_renderingSuppressionDidChangeForOutput:
setRequiresAccessLog:
setSuppressesAudioOnlyVariants:
setVideoApertureMode:
_updateCanPlayAndCanStepPropertiesWhenReadyToPlayWithNotificationPayload:
_playerItem
isAuthorizationRequiredForPlayback
isApplicationAuthorizedForPlayback
isContentAuthorizedForPlayback
_isExternalProtectionRequiredForPlaybackInternal
_setExternalProtectionRequiredForPlayback:
_isRental
_rentalStartDate
_rentalExpirationDate
_isRentalPlaybackStarted
_rentalPlaybackStartedDate
_rentalPlaybackExpirationDate
_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:withOptions:
_uninitializeProtectedContentPlaybackSupportSession:
initWithLogArray:
playerItem
_playerReference
_playerItemReference
_error
_setRampInOutInfo:
_setAudibleDRMInfo:
_fileSize
_availableFileSize
_visualContext
dictionaryWithCapacity:
_figLegibleOutputsDictionaryOptions
_metadataOutputsForKeys
_figMetadataOutputsDictionaryOptions
videoCompositionOutputColorPropertiesWithCustomCompositor:formatDescriptions:colorPrimaries:transferFunction:yCbCrMatrix:
_pixelBufferAttributes
_addVideoOutput:
_addLegibleOutput:
_addMetadataOutput:
_setTimebase:
_detachFromPlayerItem
_removeVideoOutput:
_removeLegibleOutput:
_removeMetadataOutput:
_addMetadataCollector:
_removeMetadataCollector:
mediaDataCollectors
addMediaDataCollector:
removeMediaDataCollector:
_updateTaggedMetadataArray:
_legibleOutputForKey:
_pushAttributedStrings:andSampleBuffers:atItemTime:
_signalFlush
_figPlaybackItem:didOutputAttributedStrings:nativeSampleBuffers:atItemTime:withLegibleOutputsDictionaryKey:
_figPlaybackItem:didFlushLegibleOutputWithDictionaryKey:
_metadataOutputForKey:
_pushTimedMetadataGroups:fromPlayerItemTrack:
_figPlaybackItem:didOutputSampleBuffers:fromTrackWithID:forMetadataOutputWithDictionaryKey:
_figPlaybackItem:didFlushMetadataOutputWithDictionaryKey:
pathWithComponents:
notificationWithName:object:
figPlaybackItemIsReadyForInspection
videoEnhancementFilterOptions
enabledWasSet
disableColorMatching
disableColorMatchingWasSet
activeHapticChannelIndex
activeHapticChannelIndexWasSet
hapticVolume
hapticVolumeWasSet
_initWithFigPlaybackItem:readyForInspection:trackID:asset:playerItem:
_weakReferenceToPlayerItem
_transferEnabledToFig
_transferLoudnessInfoToFig
_transferVideoEnhancementOptionsToFig
_transferDisableColorMatchingToFig
_transferActiveHapticChannelIndexToFig
_transferHapticVolumeToFig
_transferCachedValuesToFig
fallbackTrack
setLoudnessInfo:
setVideoEnhancementFilterOptions:
setDisableColorMatching:
setActiveHapticChannelIndex:
setHapticVolume:
_playerItemTrack
initWithItems:
queuePlayerWithItems:
_defaultActionAtItemEnd
advanceToNextItem
canInsertItem:afterItem:
removeAllItems
_queuePlayer
identifierName
derivedIdentifierCounter
characterAtIndex:
initWithSpecifiedName:
_specifiedLoggingIdentifier
initWithCString:encoding:
mutableComposition
formatReaderInitializationOnce
assetInspectorInitializationOnce
tracksInitializationOnce
formatReader
assetInspectorLoader
URLAssetInitializationOptions
figAssetInitializationOnce
_createEmptyMutableCompositionIfNeeded
_initWithComposition:
initWithFormatReader:
initWithAssetInspector:
_loadAssetInspectorAndLoaderOnce
_newTrackForIndex:
_mutableTracks
_clientProvidesNaturalSize
_setNaturalSize:
_setURLAssetInitializationOptions:error:
_notifyTracksThatSegmentsWillChange:
_notifyTracksThatSegmentsDidChange:successfully:
composition
compositionWithURLAssetInitializationOptions:
setNaturalSize:
insertTimeRange:ofAsset:atTime:error:
insertEmptyTimeRange:
removeTimeRange:
scaleTimeRange:toDuration:
addMutableTrackWithMediaType:preferredTrackID:
removeTrack:
mutableTrackCompatibleWithTrack:
decodeObjectOfClass:forKey:
setSegments:
setNaturalTimeScale:
setLanguageCode:
setPreferredTransform:
setPreferredVolume:
getCString:maxLength:encoding:
componentsFromLocaleIdentifier:
stringByReplacingOccurrencesOfString:withString:
compare:options:
coreMotionMetadataInput
metadataIdentifiers
accumulationQueue
weakReferenceToHost
advanceInterval
accumulatedMetadataGroups
initWithIdentifiers:
_collectUncollectables
advanceIntervalForDelegateInvocation
setAdvanceIntervalForDelegateInvocation:
_metadataOutputInternal
outputSequenceWasFlushed:
metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:
_notifyAssetThatDurationWillChange
_notifyAssetThatDurationDidChangeWithSuccess:
sourceURL
sourceTrackID
_notifySelfThatSegmentsWillChange
_notifySelfThatSegmentsDidChangeWithSuccess:
_setTrackReaderPropertyValue:forKey:
_updateTrackAssociationToTrack:type:operation:
insertTimeRange:ofTrack:atTime:error:
insertTimeRanges:ofTracks:atTime:error:
validateTrackSegments:error:
setAlternateGroupID:
addTrackAssociationToTrack:type:
removeTrackAssociationToTrack:type:
style
formatTemplate
isFullWidth
isRightToLeft
cachedDateFormatterFormat
cachedDateFormatterTemplate
numberFormatterWithOneMinimumIntegerDigits
numberFormatterWithTwoMinimumIntegerDigits
decodeIntegerForKey:
decodeBoolForKey:
decodeDoubleForKey:
encodeInteger:forKey:
encodeBool:forKey:
encodeDouble:forKey:
setStyle:
setFullWidth:
setFormatTemplate:
stringFromSeconds:
stringFromTimeInterval:
currentLocale
setCachedDateFormatterFormat:
setCachedDateFormatterTemplate:
setNumberFormatterWithOneMinimumIntegerDigits:
setMinimumIntegerDigits:
setNumberStyle:
setNumberFormatterWithTwoMinimumIntegerDigits:
stringByAppendingFormat:
stringByAppendingString:
dateFormatFromTemplate:options:locale:
whitespaceAndNewlineCharacterSet
stringFromNumber:
stringFromCMTime:
stringForObjectValue:
getObjectValue:forString:errorDescription:
setIsRightToLeft:
editAssetURL
editAssetTrackID
initWithURL:trackID:sourceTimeRange:targetTimeRange:
initWithTimeRange:
_initWithTimeMapping:
isEmpty
decodeInt32ForKey:
encodeInt32:forKey:
compositionTrackSegmentWithURL:trackID:sourceTimeRange:targetTimeRange:
compositionTrackSegmentWithTimeRange:
_initManualExposureSettingsWithExposureDuration:ISO:
manualExposureSettingsWithExposureDuration:ISO:
_exposureDuration
_ISO
_initAutoExposureSettingsWithExposureTargetBias:
autoExposureSettingsWithExposureTargetBias:
figAssetReader
readSingleSample
outputFinishedCallbackInvokers
errorThatOccurredBeforeStartReading
statusReadWriteQueue
initWithAsset:error:
_errorForOSStatus:
_tearDownFigAssetReader
_transitionToStatus:failureError:
_canAddOutput:exceptionReason:
_attachToWeakReferenceToAssetReader:
_outputDidFinish:
_isFinished
_prepareForReadingReturningError:
_readSingleSample
_cancelReading
_failWithError:
_figAssetReader
alwaysCopiesSampleData
supportsRandomAccess
currentTimeRanges
weakReferenceToAssetReader
extractionID
sampleBufferAvailabilityCondition
currentConfigurationIsFinal
extractionCompleteForCurrentConfiguration
finished
maximizePowerEfficiency
_setFigAssetReader:
_weakReferenceToAssetReader
_trimsSampleDurations
videoScalingProperties
colorPropertiesConsideringFormatDescriptions:colorPrimaries:transferFunction:ycbcrMatrix:
enumerateObjectsUsingBlock:
_extractionID
_enableTrackExtractionReturningError:
_markAsFinished
markConfigurationAsFinal
_updateTimeRangesOnFigAssetReaderReturningError:
_figAssetReaderVideoScalingPropertiesFromVideoSettings:withFormatDescription:
setAlwaysCopiesSampleData:
setMaximizePowerEfficiency:
setSupportsRandomAccess:
_setExtractionID:
_figAssetReaderExtractionOptions
_figAssetReaderSampleBufferDidBecomeAvailableForExtractionID:
resetForReadingTimeRanges:
_figAssetReaderDecodeError
_figAssetReaderFailed
weakReferenceToAttachedAdaptor
initWithTrack:outputSettings:
_outputSettingsWithOutputSettingsDictionary:mediaType:exceptionReason:
willYieldCompressedSamples
componentsJoinedByString:
frameRateConversionAlgorithm
fieldMode
videoCodecType
width
height
videoEncoderSpecification
pixelTransferProperties
minimumFrameDuration
_formatDescriptions
getAudioStreamBasicDescription:forAudioFileTypeID:sourceFormatDescription:
copyAudioChannelLayoutForSourceFormatDescription:audioChannelLayoutSize:
audioOptions
_getUniformMediaSubtypeIfExists
_attachedAdaptor
_trackOutputInternal
audioTracks
audioVolumeCurvesForTracks
audioTimePitchAlgorithmsForTracks
audioTapProcessorsForTracks
audioOutputSettings
initWithAudioTracks:audioSettings:
_audioOutputSettingsWithAudioSettingsDictionary:exceptionReason:
audioSettingsDictionary
_setAudioVolumeCurve:forTrack:
_setAudioTimePitchAlgorithm:forTrack:
_setAudioTapProcessor:forTrack:
_audioVolumeCurveForTrack:
_audioTimePitchAlgorithmForTrack:
_audioTapProcessorForTrack:
assetReaderAudioMixOutputWithAudioTracks:audioSettings:
_audioMixOutputInternal
videoTracks
videoOutputSettings
initWithVideoTracks:videoSettings:
videoSettingsDictionary
_setVideoComposition:
_copyFigVideoCompositor
isValidForAsset:timeRange:validationDelegate:
_videoCompositionProcessorColorProperties
_hasLayerAsAuxiliaryTrack
_auxiliaryTrackLayer
_hasPostProcessingLayers
_postProcessingRootLayer
_auxiliaryTrackID
_postProcessingVideoLayers
_videoCompositionOutputInternal
initWithTrack:
assetReaderSampleReferenceOutputWithTrack:
_sampleReferenceOutputInternal
setURL:
mediaFileType
setMediaFileType:
setOverallDurationHint:
shouldOptimizeForNetworkUse
setShouldOptimizeForNetworkUse:
directoryForTemporaryFiles
setDirectoryForTemporaryFiles:
metadataItems
setMetadataItems:
movieTimeScale
setMovieTimeScale:
setPreferredRate:
singlePassFileSize
setSinglePassFileSize:
singlePassMediaDataSize
setSinglePassMediaDataSize:
setInputs:
inputGroups
setInputGroups:
_mediaFileType
_movieFragmentInterval
_overallDurationHint
_shouldOptimizeForNetworkUse
_directoryForTemporaryFiles
_metadataItems
_movieTimeScale
_preferredTransform
_preferredVolume
_preferredRate
_singlePassFileSize
_singlePassMediaDataSize
_inputGroups
helper
helperReadWriteQueue
keyPathDependencyManager
finishWritingDelegate
initWithURL:fileType:error:
_mediaFileTypeWithFileTypeIdentifier:exceptionReason:
initWithURL:fileType:
setWeakReferenceToAssetWriter:
outputURL
outputFileType
_setHelper:ifCurrentHelper:withBlock:
_helper
availableMediaTypes
supportsSampleReferences
canApplyOutputSettings:forMediaType:
canAddInputGroup:
addInputGroup:
startWriting
startSessionAtSourceTime:
endSessionAtSourceTime:
cancelWriting
finishWriting
finishWritingWithCompletionHandler:
transitionToFailedStatusWithError:
assetWriterWithURL:fileType:error:
_setHelper:ifCurrentHelper:
_supportsSampleReferencesReturningError:
setWritesSinglePassUsingPredeterminedFileSize:mediaDataSize:
setFinishWritingDelegate:
_transitionToFailedStatusWithError:
initWithConfigurationState:
configurationState
_outputSettingsObject
_canApplyOutputSettings:forMediaType:sourceFormat:exceptionReason:
_canApplyTrackReferences:exceptionReason:
_canAddInput:exceptionReason:
weakReferenceToAssetWriter
_setWeakReferenceToAssetWriter:
provisionalInputs
intersectsSet:
_canAddInputGroup:exceptionReason:
defaultInput
setMarksOutputTrackAsEnabled:
_setAlternateGroupID:
_setProvisionalAlternateGroupID:
initWithConfigurationState:error:
_transitionToClientInitiatedTerminalStatus:
_alternateGroupID
_weakReferenceToDelegate
_setWeakReferenceToDelegate:
_teardownNotificationHandlers
didReceiveFigAssetWriterNotificationWithSuccess:error:
_callDelegateIfNotCalledWithSuccess:error:
initWithFigAssetWriter:
_handleCompletedWritingNotification
_handleFailedNotificationWithError:
_figAssetWriter
_didNotCallDelegate
_notificationHandlersAreRegistered
pathExtension
figFormatReaderFileFormat
expectsMediaDataInRealTime
_prepareForWritingWithFigAssetWriter:mediaFileType:error:
figTrackReferences
outputTrackID
_retainedFigAssetWriter
_didStartInitialSession
_prepareToEndSession
removeItemAtURL:error:
currentThread
mainThread
initWithBlock:
_makeFinishWritingOperationsWithCustomFigAssetWriterFinishOperation:
_transitionToFinishWritingHelperWithFinishWritingOperations:
addOperations:waitUntilFinished:
addOperation:
waitUntilFinished
defaultQueue
setCompletionBlock:
enqueueOperation:
finishWritingDelegateOperationWithAssetWriter:andFigAssetWriter:andDelegate:
prepareInputsOperationsWithInputs:
finalStepWorkaroundOperationWithFigAssetWriter:
addDependency:
initWithConfigurationState:finishWritingOperations:
transitionToTerminalStatusOperation
_prepareToFinishWritingReturningError:
assetWriterInput:shouldReplaceFormatDescription:replacementFormatDescription:
_figAssetWriterAccessQueue
_startSessionCalled
_notificationHandler
dependencies
isFinished
isReady
_finishWritingOperationsDidFinish
blockOperationWithBlock:
statusOfOperations:error:
cancel
_finishWritingOperations
_transitionToTerminalStatusOperation
evaluateDependenciesAndMarkAsExecuting
markAsCancelled
markAsFailedWithError:
markAsCompleted
isAsynchronous
start
didEnterTerminalState
initWithConfigurationState:terminalError:
_terminalError
initWithConfigurationState:terminalStatus:
_terminalStatus
supportedMediaTypes
supportsFormat:
supportsOutputSettings:reason:
_transitionToTerminalStatus:
_configurationState
_weakReferenceToAssetWriter
initWithInputs:defaultInput:
_startObservingInputPropertiesThatMayChangeValueOfOptions
_stopObservingInputPropertiesThatMayChangeValueOfOptions
assetWriterInputSelectionOptionWithAssetWriterInput:displaysNonForcedSubtitles:
assetWriterInputSelectionOptionWithAssetWriterInput:
initWithInputs:provisionalInputs:defaultInput:
assetWriterInputGroupWithInputs:defaultInput:
assetWriterInputGroupWithInputs:provisionalInputs:defaultInput:
initWithAssetWriterInput:displaysNonForcedSubtitles:
marksOutputTrackAsEnabled
_hasEqualValueForKey:asObject:
_taggedCharacteristics
_ancillaryDescription
mediaSubTypes
_isAuxiliaryContent
_isDesignatedDefault
associatedMediaSelectionOptionInMediaSelectionGroup:
propertyList
displaysNonForcedSubtitles
_outputSettings
_sourceFormatHint
_languageCode
_extendedLanguageTag
_displaysNonForcedSubtitles
setParentAuthorizationSession:
outputDeviceAuthorizationSession:didProvideAuthorizationRequest:
outputDeviceAuthorizationSession:shouldRetryAuthorizationRequest:reason:
sharedAuthorizationSession
initWithOutputDeviceAuthorizationSessionImpl:
outputDeviceAuthorizationSessionImpl:didProvideAuthorizationRequest:
outputDeviceAuthorizationSessionImpl:shouldRetryAuthorizationRequest:reason:
outputDeviceAuthorizationSessionImplDidExpireWithReplacementImpl:
_ivars
outputDevice
authorizationTokenType
respondWithAuthorizationToken:completionHandler:
initWithOutputDeviceAuthorizationRequestImpl:
setSourceFormatHint:
sourcePixelBufferAttributes
setSourcePixelBufferAttributes:
transform
mediaTimeScale
setMediaTimeScale:
setExpectsMediaDataInRealTime:
setLayer:
setProvisionalAlternateGroupID:
setTrackReferences:
performsMultiPassEncodingIfSupported
setPerformsMultiPassEncodingIfSupported:
preferredMediaChunkDuration
setPreferredMediaChunkDuration:
preferredMediaChunkAlignment
setPreferredMediaChunkAlignment:
preferredMediaChunkSize
setPreferredMediaChunkSize:
mediaDataLocation
setMediaDataLocation:
sampleReferenceBaseURL
setSampleReferenceBaseURL:
_trackID
_sourcePixelBufferAttributes
_transform
_mediaTimeScale
_expectsMediaDataInRealTime
_naturalSize
_marksOutputTrackAsEnabled
_layer
_provisionalAlternateGroupID
_performsMultiPassEncodingIfSupported
_chunkDuration
_chunkAlignment
_chunkSize
_mediaDataLocation
_sampleReferenceBaseURL
_maximizePowerEfficiency
helperQueue
numberOfAppendFailures
appendFailureReadWriteQueue
passDescriptionResponder
initWithMediaType:outputSettings:
initWithMediaType:outputSettings:sourceFormatHint:
canFullySpecifyOutputFormatReturningReason:
setWeakReferenceToAssetWriterInput:
pixelBufferPool
encoderIsAvailableOnCurrentSystemReturningError:
formatSpecificationWithOutputSettings:sourceFormatDescription:
assetWriterTrackWithFigAssetWriter:mediaType:mediaFileType:formatSpecification:sourcePixelBufferAttributes:multiPass:attachedAdaptor:error:
setSampleBufferCoalescingInterval:
initWithConfigurationState:assetWriterTrack:error:
_setHelper:
didStartInitialSession
prepareToEndSession
prepareToFinishWritingReturningError:
transitionToAndReturnTerminalHelperWithTerminalStatus:
canPerformMultiplePasses
currentPassDescription
canStartRespondingToEachPassDescriptionReturningReason:
initWithCallbackQueue:block:
shouldRespondToInitialPassDescription
respondToNewPassDescription:
appendSampleBuffer:error:
appendPixelBuffer:withPresentationTime:
stopRespondingToPassDescriptions
markAsFinished
markCurrentPassAsFinished
canAddTrackAssociationWithTrackOfInput:type:
addTrackAssociationWithTrackOfInput:type:
associatedInputsWithTrackAssociationType:
assetWriterInputWithMediaType:outputSettings:
assetWriterInputWithMediaType:outputSettings:sourceFormatHint:
writesMediaDataToBeginningOfFile
setWritesMediaDataToBeginningOfFile:
_pixelBufferPool
_setSourcePixelBufferAttributes:
respondToEachPassDescriptionOnQueue:usingBlock:
appendSampleBuffer:
_appendPixelBuffer:withPresentationTime:
_validateLanguageCode:
_canAddTrackAssociationWithTrackOfInput:type:exceptionReason:
keyPathsForValuesAffectingCanPerformMultiplePasses
setFormatDescriptions:
setFigMetadata:
setExcludeFromAutoSelection:
setFigTrackMatrix:
setFigDimensions:
setTrackVolume:
setPreferredChunkDuration:
setPreferredChunkAlignment:
setPreferredChunkSize:
initWithTimeRanges:
_assetWriterTrack
encoderSupportsMultiPass
isAboveHighWaterLevel
initWithRequestQueue:requestBlock:
_attachToMediaDataRequester:
_nudgeMediaDataRequesterIfAppropriate
requestQueue
requestMediaDataIfNecessary
weakReferenceToAssetWriterInput
beginPassIfAppropriate
beginPassReturningError:
transitionAssetWriterAndAllInputsToFailedStatusWithError:
addSampleBuffer:error:
addPixelBuffer:atPresentationTime:error:
markEndOfDataReturningError:
_detachFromMediaDataRequester:
initWithWritingHelper:
startPassAnalysis
markAsFinishedAndTransitionCurrentHelper:
requestMediaDataOnceIfNecessaryWithMediaDataRequester:
mediaDataRequesterShouldRequestMediaData:
setCurrentPassDescription:
_mediaDataRequester
_observingSelf
_currentPassDescription
_keyPathDependencyManager
endPassWithCompletionHandler:
_writingHelper
_initialPassDescription
_didRequestMediaDataOnce
_weakReferenceToAssetWriterInput
initWithAssetWriterInput:sourcePixelBufferAttributes:
assetWriterInputPixelBufferAdaptorWithAssetWriterInput:sourcePixelBufferAttributes:
initWithFigAssetWriter:mediaType:mediaFileType:formatSpecification:sourcePixelBufferAttributes:multiPass:error:
_attachToFigAssetWriterUsingFormatSpecification:sourcePixelBufferAttributes:multiPass:error:
_refreshAboveHighWaterLevel
figAssetWriter
initWithFigAssetWriter:trackID:
descriptionForNextPass
_figAssetWriterDidDropBelowLowWaterLevelForTrackID:
sampleBufferCoalescingInterval
_aboveHighWaterLevelQueue
_aboveHighWaterLevel
_sampleBufferCoalescingInterval
_operationQueue
sourceFormatDescription
audioFileTypeID
_flushPendingSampleBuffersReturningError:
_pendingAudioSampleBuffers
_collectUncollectables_invokedFromDeallocAndFinalize
_requestQueue
_requestBlock
_ivarAccessQueue
_hasStoppedResponding
_releaseAndClearCallbackBlock_invokeOnSerializationQueue
_callbackQueue
_stoppedResponding
_serializationQueue
_hasRespondedAtLeastOnce
_mostRecentPassDescription
_callbackBlock
_notifyWhetherMorePassesAreNeeded:timeRanges:forTrackWithID:
_nextPassDescription
timeRanges
sourceTimeRanges
backgroundColor
layerInstructions
enablePostProcessing
setVersion:
setEnablePostProcessing:
_setValuesFromDictionary:
dictionaryRepresentation
setLayerInstructions:
dictionaryRepresentationWithTimeRange:
_setValuesFromDictionary:timeRange:
containsTweening
requiredSourceTrackIDs
passthroughTrackID
_instruction
videoCompositionInstruction
_mutableInstruction
transformRamps
opacityRamps
cropRectangleRamps
_setTransformRamps:
_setOpacityRamps:
_setCropRectangleRamps:
_setTransformRampFromStartTransform:toEndTransform:timeRange:selector:
_setOpacityRampFromStartOpacity:toEndOpacity:timeRange:selector:
_setCropRectangleRampFromStartCropRectangle:toEndCropRectangle:timeRange:selector:
setTransform:atTime:
setOpacity:atTime:
setCropRectangle:atTime:
setTransformRampFromStartTransform:toEndTransform:timeRange:
setOpacityRampFromStartOpacity:toEndOpacity:timeRange:
setCropRectangleRampFromStartCropRectangle:toEndCropRectangle:timeRange:
getTransformRampForTime:startTransform:endTransform:timeRange:
getOpacityRampForTime:startOpacity:endOpacity:timeRange:
getCropRectangleRampForTime:startCropRectangle:endCropRectangle:timeRange:
_layerInstruction
videoCompositionLayerInstructionWithAssetTrack:
videoCompositionLayerInstruction
_mutableLayerInstruction
builtInCompositorName
customCompositorClass
colorPrimaries
colorYCbCrMatrix
colorTransferFunction
instructions
auxiliaryTrackLayerSetLast
videoCompositionWithPropertiesOfAsset:
videoCompositionWithPropertiesOfAsset:videoGravity:
setBuiltInCompositorName:
customVideoCompositorClass
setCustomVideoCompositorClass:
setFrameDuration:
setSourceTrackIDForFrameTiming:
setRenderSize:
setRenderScale:
setColorPrimaries:
setColorYCbCrMatrix:
setColorTransferFunction:
setInstructions:
setAnimationTool:
sessionWithVideoComposition:recyclingSession:
videoComposition:shouldContinueValidatingAfterFindingInvalidValueForKey:
renderContextChanged:
startVideoCompositionRequest:
requiredPixelBufferAttributesForRenderContext
cancelAllPendingVideoCompositionRequests
supportsWideColorSourceFrames
videoComposition:shouldContinueValidatingAfterFindingEmptyTimeRange:
videoComposition:shouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction:
videoComposition:shouldContinueValidatingAfterFindingInvalidTrackIDInInstruction:layerInstruction:asset:
_bumpChangeSeed
_postProcessingVideoLayer
instructionForFigInstruction:
_setFrameDurationForFrameRate:sourceTrackIDForFrameTiming:
_videoComposition
initWithTimeRange:sourceTrackIDs:handler:
setSourceTrackPreferredTransform:
_mutableVideoCompositionWithAsset:applyingCIFiltersWithHandler:
videoCompositionWithAsset:applyingCIFiltersWithHandler:
sortedArrayUsingFunction:context:
_mutableVideoComposition
initWithMagicTrackID:animationLayer:videoLayers:
videoCompositionCoreAnimationToolWithAdditionalLayer:asTrackID:
videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayer:inLayer:
videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayers:inLayer:
_videoCompositionTool
animationLayer
auxiliaryTrackID
postProcessingVideoLayers
unusedTrackID
figExportSession
metadataItemFilter
handler
initWithAsset:presetName:
presetName
allExportPresets
exportPresetsCompatibleWithAsset:
determineCompatibilityOfExportPreset:withAsset:outputFileType:completionHandler:
exportSessionWithAsset:presetName:
maximumDurationForPreset:properties:
estimatedOutputFileLengthForPreset:duration:properties:
keyPathsForValuesAffectingEstimatedOutputFileLength
supportedFileTypes
determineCompatibleFileTypesWithCompletionHandler:
progress
AVExportSessionExportAsynchronouslyCompletionHandler
exportAsynchronouslyWithCompletionHandler:
cancelExport
maxDuration
setMinVideoFrameDuration:
minVideoFrameDuration
setVideoFrameRateConversionAlgorithm:
videoFrameRateConversionAlgorithm
setPreserveSyncFrames:
preserveSyncFrames
estimatedOutputFileLength
setMetadataItemFilter:
fileLengthLimit
setFileLengthLimit:
canPerformMultiplePassesOverSourceMediaData
setCanPerformMultiplePassesOverSourceMediaData:
_exportSession
_requestMediaDataIfReady
requestBlock
_mediaDataConsumer
isVisible
setPlayerItem:
synchronizedLayerWithPlayerItem:
_syncLayer
synchronizedData
creationTime
possibleDataOutputs
_shortStringForDataOutput:syncedData:
sampleBufferWasDropped
droppedReason
_shortStringForDataDroppedReason:
metadataObjects
depthDataWasDropped
synchronizedDataForCaptureOutput:
deviceSubType
serialNumber
firmwareVersion
MACAddress
deviceFeatures
initWithOutputDeviceImpl:
identifyingMACAddress
setParentOutputDevice:
deviceID
batteryLevel
airPlayProperties
isInUseByPairedDevice
connectedPairedDevices
requiresAuthorization
automaticallyAllowsConnectionsFromPeersInHomeGroup
onlyAllowsConnectionsFromPeersInHomeGroup
canAccessRemoteAssets
canAccessAppleMusic
canAccessiCloudMusicLibrary
supportsBufferedAirPlay
setSecondDisplayEnabled:
canSetVolume
canBeGrouped
groupID
canBeGroupLeader
isGroupLeader
participatesInGroupPlayback
groupContainsGroupLeader
logicalDeviceID
isLogicalDeviceLeader
canCommunicateWithAllLogicalDeviceMembers
canRelayCommunicationChannel
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
configureUsingBlock:options:completionHandler:
updateFrecencyListForDeviceID:
frecencyScoreForDeviceID:
hasBatteryLevel
modelSpecificInformation
outputDeviceImplDidChangeVolume:
outputDeviceImplDidChangeCanChangeVolume:
configureUsingBlock:completionHandler:
updateFrecencyScore
_outputDevice
timeIntervalSinceDate:
publicKey
isAdmin
initWithID:publicKey:hasAdministratorPrivileges:
peerID
isEqualToData:
hasAdministratorPrivileges
playing
productName
pairedDeviceID
pairedDevicesConnectedToOutputDevice:
initWithName:ID:modelID:playing:productName:
isPlaying
parentOutputDevice
caseBatteryLevel
leftBatteryLevel
rightBatteryLevel
_parentDevice
filteringEnabled
depthDataQueue
setDelegate:callbackQueue:
setAlwaysDiscardsLateDepthData:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
stringWithCString:encoding:
isMainThread
stringByDeletingPathExtension
stringByAppendingPathExtension:
subarrayWithRange:
_web_errorWithDomain:code:URL:
initWithMetadataReader:
initWithArray:key:keySpace:locale:
initWithMetadataReader:array:key:keySpace:locale:
_setMetadataReader:
_setArrayEnumerator:
_setKey:
_setKeySpace:
_setLocale:
metadataEnumeratorWithMetadataReader:
metadataEnumeratorWithArray:key:keySpace:locale:
_reader
_arrayEnumerator
_key
_keySpace
_locale
_count
_index
initWithFigEndpoint:
figEndpoint
_figEndpointPropertyValueForKey:
sharedExecutionEnvironment
platformIdentifier
numberWithUnsignedLongLong:
processName
_volumeDidChangeForEndpointWithID:
_canSetEndpointVolumeDidChangeForEndpointWithID:
_weakObserver
_figEndpoint
figEndpointOutputImpl
outputDeviceWithFigEndpoint:
outputDeviceWithFigEndpoint:routingContextFactory:
initWithRequest:id:
requestWithRequest:id:
customURLRequest
setCustomURLRequest:
customURLResponse
setCustomURLResponse:
_customURLRequest
_customURLResponse
caseInsensitiveCompare:
setValue:forHTTPHeaderField:
dataTaskWithRequest:
_registerRequest:id:forDataTask:
_unregisterRequestForDataTask:
_lookupRequestForDataTask:
allHeaderFields
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
_handleRequest:requestID:canHandleRequestOut:
_cancelRequestID:
_taskToRequest
_session
_handler
setConnection:
bridge
setBridge:
_bridge
_connection
_handleRequest:requestID:
_didFinish:error:
_willSendRequest:request:redirectionResponse:
_didReceiveResponse:response:
_didReceiveData:data:
_requestIDToDownload
copyKeychainCredentialForUrl:
sendAuthResponse:requestID:disposition:credential:authHandler:
host
lowercaseString
port
initWithData:encoding:
initWithUser:password:persistence:
_handleAuthChallenge:requestID:
expectedContentLength
scannerWithString:
scanString:intoString:
scanUnsignedLongLong:
characterSetWithCharactersInString:
scanCharactersFromSet:intoString:
isAtEnd
threadDictionary
shouldUsePropertyStorageCacheForKey:
objectForKey:defaultObjectBlock:
_storageAccessWorkQueue
_keysRequiringExplicitPerThreadSignal
_cachePolicy
setInputParameters:
_audioMix
_mutableAudioMix
_volumeCurveAsString
_setScheduledAudioParameters:
setAudioTapProcessor:
setEffectParameters:
setVolumeRampFromStartVolume:toEndVolume:timeRange:
setVolume:atTime:
_setVolumeRampFromStartVolume:toEndVolume:timeRange:
_setVolume:atTime:
getVolumeRampForTime:startVolume:endVolume:timeRange:
_inputParameters
audioMixInputParametersWithTrack:
_mutableInputParameters
outputDeviceFeatures
applicationPID
communicationChannelDelegate
defaultOutputContextImplClass
platformDependentScreenOrVideoContext
initWithOutputContextImpl:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClass:fromData:error:
sharedAudioPresentationOutputContext
auxiliaryOutputContext
sharedSystemAudioContext
sharedSystemScreenContext
iTunesAudioContext
outputContextImplForControllingOutputDeviceGroupWithID:options:
outputContextForControllingOutputDeviceGroupWithID:options:
outputContextImplForID:
setParentOutputContext:
allOutputContextImplClasses
outputContextType
outputContextDidChangeApplicationProcessID:
associatedAudioDeviceID
supportsMultipleOutputDevices
setOutputDevice:options:completionHandler:
resetOutputDeviceForAllOutputContexts
outputContextExistsWithRemoteOutputDevice
outputDevices
setOutputDevices:
addOutputDevice:options:completionHandler:
removeOutputDevice:
providesControlForAllVolumeFeatures
pausePlaybackOnAllOutputDevicesWithCompletionHandler:
muteAllOutputDevicesWithCompletionHandler:
outgoingCommunicationChannel
openCommunicationChannelWithOptions:error:
outputContextOutgoingCommunicationChannelDidBecomeAvailable:
outputContext:didReceiveData:fromCommunicationChannel:
outputContext:didCloseCommunicationChannel:
outputContextImplDidChangeOutputDevice:
outputContextImplDidChangeOutputDevices:
outputContextImplDidChangeGlobalOutputDeviceConfiguration:
outputContextForControllingOutputDeviceGroupWithID:
outputContextForID:
applicationProcessID
setApplicationProcessID:
deviceName
setOutputDevice:forFeatures:
setOutputDevice:options:
outputContextImpl:didInitiateDestinationChange:
addOutputDevice:
outputContextImplDidChangeProvidesControlForAllVolumeFeatures:
outputContextImplDidChangeVolume:
outputContextImplDidChangeCanSetVolume:
setCommunicationChannelDelegate:
outputContextImplOutgoingCommunicationChannelDidBecomeAvailable:
outputContextImpl:didReceiveData:fromCommunicationChannel:
outputContextImpl:didCloseCommunicationChannel:
outputContextImpl:didExpireWithReplacement:
_outputContext
setParentCommunicationChannel:
sendData:completionHandler:
initWithOutputContextCommunicationChannelImpl:
cancellationReason
_setStatus:cancellationReason:
markAsInProgress
markAsFailed
markAsCancelledWithReason:
setParentOutputContextManager:
outputContextManagerForAllOutputContexts
initWithOutputContextManagerImpl:
outputContextManagerImpl:observedFailureToConnectToOutputDevice:reason:
outputContextManagerImplDidExpireWithReplacementImpl:
initWithRunLoop:
runLoopStateWithRunLoop:
runLoop
signalSource
setSignalSource:
signaled
setSignaled:
_runLoop
_signalSource
_signaled
waitInMode:
_waitInMode:untilDate:
timeIntervalSinceNow
_signalRunLoopWithState:
wait
waitUntilDate:
broadcast
_runLoopStateList
_setFormatReader:
_timeForProperty:
_floatForProperty:defaultValue:
_affineTransformForProperty:
_SInt32ForProperty:
_booleanForProperty:
_nonNilArrayForProperty:
_dictionaryForProperty:
_stringForProperty:
_hasQTSaveRestriction
_valueAsCFTypeForProperty:
didCheckForSaveRestriction
hasSaveRestriction
_setPlaybackItem:
_arrayForProperty:
initWithPlaybackItem:trackIDs:
_trackIDs
_nonNilDictionaryForProperty:
_tollFreeBridgedObjectForProperty:
_dataForProperty:
_nameForProxy
_sizeForProperty:
initWithRefreshRate:videoDynamicRange:
_formatReaderOnce
_checkIsStreamingOnce
_makeDisplayCriteriaOnce
_displayCriteria
ramps
_setRamps:
_ramps
_scheduledParametersInternal
_mutableScheduledParametersInternal
_setStatus:error:resultingStatus:failureReason:
isCancelled
isExecuting
unfinishedOperations
operations
initWithFundamentalOperation:
_fundamentalOperation
initWithMonitoringObject:
attachDepartureAnnouncingObjectMonitorToObject:monitoringObject:
_weakReferenceToMonitoringObject
_registerForObjectNotifications
_balanceMonitoringIsFinishedSemaphore
_unregisterForObjectNotifications
_signalMonitoringIsFinishedIfNeeded
_waitUntilFinishedIfNeeded
monitoredObjectHasDeparted
initWithObject:notificationNames:
_monitoredObject
main
_weakReferenceToMonitoredObject
_operationStateSerializationQueue
_monitoringIsFinishedSemaphore
_notificationNames
_registeredForObjectNotifications
_started
_finished
getRetainedDelegate:retainedDelegateQueue:
_setDelegateViaWeakReference:
_delegateReadWriteQueue
_delegateQueue
isAssociatedWithFragmentMinder
_createAVErrorForError:andFigErrorCode:
_setStatus:figErrorCode:
_copyFormatReaderFromFigObjectWithFigErrorCode:
_dictionaryOfSpecialGettersForKeyValueStatus
_statusOfValueWhileMutexLockedForKey:error:
_statusOfValuesIsTerminalWhileMutexLockedForKeys:
removeObjectsInArray:
_inspectionRequiresAFormatReader
_updateStatusWhileMutexLocked:figErrorCode:
_getAndPruneCompletionsWhileMutexLocked
_dictionaryOfSpecialLoadingMethodsForKeys
_loadValuesUsingDefaultLoadingMethodWhileMutexLockedForKeys:
_loadValuesWhileMutexLockedForKeys:
_loadingMutex
_providesAccurateTiming
_statusOfValueForKeyThatIsAlwaysLoaded
_keysAwaitingCompletion
_basicInspectionFailureCode
_addFigObjectNotifications
_removeFigObjectNotifications
objectsForKeys:notFoundMarker:
_playbackItemPropertiesForKeys:
_shouldCacheDuration
_cachedDuration
_figAssetPropertiesForKeys
_loadStatusForProperty:figAsset:error:
_figAssetTrackPropertiesForKeys
_completionHandlerQueue
_loadingBatches
_invokeCompletionHandlerForLoadingBatches:
_figAssetCreationStatus
_assetInspectorOnce
_loadingCanceled
_registeredForFigAssetNotifications
_fragmentMinderAssociationCount
_figError
_figErrorUserInfo
value:withObjCType:
removeObjectsAtIndexes:
_figMediaType
_synthesizeMediaCharacteristicsOnce
_cachedMediaCharacteristics
decodabilityValidationResult
_longLongForProperty:
_floatForProperty:
_sizeForProperty:defaultValue:
_SInt16ForProperty:
_timeForProperty:defaultValue:
_trackReader
_addFigNotifications
_removeFigNotifications
_loadStatusForFigAssetTrackProperty:error:
_figFormatReader
_timeRangeForProperty:
_copyFigFormatReaderOnce
_copyFigTrackReaderOnce
_figMutableComposition
raise:format:
apertureFocalRatio
setApertureFocalRatio:
minimumApertureFocalRatio
setMinimumApertureFocalRatio:
maximumApertureFocalRatio
setMaximumApertureFocalRatio:
luminanceNoiseAmplitude
setLuminanceNoiseAmplitude:
faceOrientation
setFaceOrientation:
faceObservationsData
setFaceObservationsData:
indexesOfShallowDepthOfFieldObservations
setIndexesOfShallowDepthOfFieldObservations:
focusRectangle
setFocusRectangle:
indexSetWithIndexesInRange:
initWithInternal:
decodeIntForKey:
decodeFloatForKey:
containsValueForKey:
encodeInt:forKey:
encodeFloat:forKey:
initWithPortraitMetadataDictionary:
metadataPort
desc
emptyBoxedMetadata
initWithFormatDescription:clock:
metadataInputWithFormatDescription:clock:
appendTimedMetadataGroup:error:
localizedStringForKey:value:table:
bundleWithIdentifier:
_cachedReferencedObjectDescription
_weakStorage
valueWithBytes:objCType:
valueWithPointer:
_contextsForTokens
_currentToken
_readWriteQueue
_collectorInternal
initWithCMNotificationCenter:
initWithWeakReferenceToListener:callback:
_callbackContextRegistry
setCallbackContextToken:
_addListenerAndCallback:forWeakReferenceToListener:callback:name:object:
CMNotificationCenter
_copyAndRemoveListenerAndCallbackForWeakReferenceToListener:callback:name:object:
callbackContextToken
listenerKeyWithWeakReferenceToListener:callback:name:object:
_cmNotificationCenter
_listenerObjectsPassedToFig
_listenerObjectsQueue
listener
callback
_weakReferenceToListener
_callback
_callbackContextToken
initWithWeakReferenceToListener:callback:name:object:
_name
_object
initWithFormat:arguments:
markEventAsCompleted
waitUntilEventIsCompleted
_condition
_eventCompleted
assetComparisonToken
_assetComparisonToken
_assetTrackGroup
photoSurface
photoSurfaceSize
photoPixelBuffer
previewPixelBuffer
embeddedThumbnailSourcePixelBuffer
depthData
didTryToDecodeDepthData
isRawPhoto
bracketSettings
sequenceCount
photoCount
sourceDeviceType
expectedPhotoProcessingFlags
actualPhotoProcessingFlags
portraitMetadata
lensStabilizationStatus
_fileDataRepresentationWithReplacementMetadata:replacementEmbeddedThumbnailPhotoFormat:replacementEmbeddedThumbnailPixelBuffer:replacementDepthData:exceptionReason:
replacementMetadataForPhoto:
replacementEmbeddedThumbnailPixelBufferWithPhotoFormat:forPhoto:
replacementDepthDataForPhoto:
fileDataRepresentation
initWithTimestamp:photoSurface:photoSurfaceSize:previewPhotoSurface:embeddedThumbnailSourceSurface:metadata:depthDataSurface:depthMetadataDictionary:captureRequest:bracketSettings:sequenceCount:photoCount:expectedPhotoProcessingFlags:sourceDeviceType:
fileDataRepresentationWithReplacementMetadata:replacementEmbeddedThumbnailPhotoFormat:replacementEmbeddedThumbnailPixelBuffer:replacementDepthData:
fileDataRepresentationWithCustomizer:
CGImageRepresentation
previewCGImageRepresentation
photoProcessingFlags
_embeddedThumbnailSourcePixelBuffer
portraitEffectsMatte
_portraitEffectsMatte
copyFormatDescription
backingSBuf
_timedMetadataGroupInternal
endDate
extraFigProperties
initWithItems:startDate:endDate:
_taggedRangeMetadataDictionary
_extractPropertiesFromTaggedRangeMetadataDictionary:
_figMetadataArrayForMetadataItems:
dateByAddingTimeInterval:
_metadataItemsForFigMetadataArray:
_dateRangeMetadataGroupInternal
setEndDate:
assetCacheWithURL:
_init
mediaSelectionOptionsInMediaSelectionGroup:
isPlayableOffline
maxSize
maxEntrySize
currentSize
removeEntryForKey:
sizeOfEntryForKey:
lastModifiedDateOfEntryForKey:
setMaxSize:
setMaxEntrySize:
assetCacheInspector
currentPlatformIdentifier
setPlatformIdentifier:forQueue:
resetPlatformIdentifierForQueue:
logArray
_common_init
extendedLogData
extendedLogDataStringEncoding
canBeConvertedToEncoding:
dataUsingEncoding:allowLossyConversion:
_accessLogArray
_playerItemAccessLog
dict
numberOfMediaRequests
numberOfSegmentsDownloaded
playbackStartDate
serverAddress
numberOfServerAddressChanges
playbackStartOffset
segmentsDownloadedDuration
durationWatched
numberOfBytesTransferred
transferDuration
currentObservedBitrate
startupTime
downloadOverdue
entryReasonCode
observedMaxBitrate
observedMinBitrate
observedBitrateStandardDeviation
playbackType
mediaRequestsWWAN
switchBitrate
_playerItemAccessLogEvent
_errorLogArray
_playerItemErrorLog
errorStatusCode
errorDomain
errorComment
_playerItemErrorLogEvent
isAppAudioSession
mode
activationContext
usingLongFormAudio
setActive:withFlags:error:
setApplicationAudioSession:
setCategory:error:
setMode:error:
setActivationContext:error:
setUsingLongFormAudio:error:
setPreferredHardwareSampleRate:error:
setPreferredIOBufferDuration:error:
preferredHardwareSampleRate
preferredIOBufferDuration
inputIsAvailable
currentHardwareSampleRate
currentHardwareInputNumberOfChannels
currentHardwareOutputNumberOfChannels
isApplicationAudioSession
canEnterPIPMode
_audioSession
beginInterruptionFromInterruptor:
beginInterruption
rangeOfString:
endInterruptionFromInterruptor:category:flags:
endInterruptionWithFlags:
endInterruption
initWithAsset:dictionary:
mediaSelectionOptionsFromArray:filteredAndSortedAccordingToPreferredLanguages:
playableMediaSelectionOptionsFromArray:
mediaSelectionOptionsFromArray:withLocale:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
_groupMediaCharacteristics
_optionWithID:displaysNonForcedSubtitles:
_mediaSelectionGroup
mediaSelectionOptionForAsset:group:dictionary:hasUnderlyingTrack:
optionID
fallbackIDs
outOfBandIdentifier
outOfBandSource
_optionWithID:identifier:source:displaysNonForcedSubtitles:
_dictionary
_options
_defaultOption
_displayName
_displayNameLocaleIdentifier
_optionMediaCharacteristics
initWithAsset:group:dictionary:
initWithGroup:
group
_title
_taggedMediaCharacteristics
associatedExtendedLanguageTag
preferredLanguages
associatedPersistentIDs
_isMainProgramContent
_preferredMetadataTitleAccordingToPreferredLanguages:fallingBackToMatchingEmptyLocale:
displayNameForKey:value:
_displayNameWithLocale:fallingBackToMatchingUndeterminedAndMultilingual:
associatedUnicodeLanguageIdentifier
displayNameWithLocale:
displayName
_mediaSelectionOption
_weakReferenceToGroup
_optionMediaType
displayNameForLanguage:displayLanguage:context:
intrinsicMatrix
intrinsicMatrixReferenceDimensions
extrinsicMatrix
pixelSize
lensDistortionCoefficients
inverseLensDistortionCoefficients
lensDistortionCenter
lensDistortionLookupTable
inverseLensDistortionLookupTable
_distortionLookupTableFromCoefficients:distortionCenter:pixelSize:referenceDimensions:lookupTableLength:
initWithLength:
_initEmpty
dataWithData:
registeredOutputSettingsClasses
eligibleOutputSettingsDictionaryKeys
_validateOutputSettingsDictionary:compatibilityDescription:
supportsEmptyOutputSettingsDictionary
defaultAudioOutputSettings
defaultVideoOutputSettings
initWithOutputSettingsDictionary:exceptionReason:
validateOutputSettingsDictionary:
outputSettingsWithOutputSettingsDictionary:mediaType:
defaultOutputSettingsForMediaType:
validateUsingOutputSettingsValidator:reason:
_outputSettingsDictionary
initWithOutputSettings:sourceFormatDescription:
_sourceFormatDescription
initWithFileTypeIdentifier:exceptionReason:
mediaFileOutputSettingsValidatorForFileType:
mediaFileTypeWithFileTypeIdentifier:
isoFileTypes
defaultFileExtension
_uti
_supportsSampleReferencesOnce
_supportsSampleReferences
initWithFileType:
fileType
validateAudioOutputSettings:reason:
validateVideoOutputSettings:reason:
_fileType
initWithTrustedAVAudioSettingsDictionary:
audioOutputSettingsWithAudioSettingsDictionary:
audioOutputSettingsWithTrustedAudioSettingsDictionary:
audioConverterPropertiesForAudioSettingsDictionary:
initWithAudioSettingsDictionary:exceptionReason:
initWithAVAudioSettingsDictionary:exceptionReason:
setInputPropertiesFromASBD:
setOutputFormatFlags:
setOutputBitsPerChannel:
setOutputSampleRate:
setOutputChannelCount:
setOutputDataRate:
availableOutputChannelCountForDesiredChannelCount:rounding:
applicableOutputSampleRateForDesiredSampleRate:rounding:
initWithTrustedPixelBufferAttributes:
initWithTrustedAVVideoSettingsDictionary:
allowWideColor
_validValuesForScalingMode
videoOutputSettingsWithTrustedVideoSettingsDictionary:
initWithVideoSettingsDictionary:exceptionReason:
pixelAspectRatioDictionary
cleanApertureDictionary
dimensionsAreBoundingBox
setByAddingObjectsFromSet:
initWithPixelBufferAttributes:exceptionReason:
dictionaryWithValuesForKeys:
_VTPixelAspectRatioDictionary
_VTCleanApertureDictionary
initWithAVVideoSettingsDictionary:exceptionReason:
_validateVideoCompressionProperties:againstSupportedPropertyDictionary:forCodecType:exceptionReason:
_adaptedVideoCompressionProperties
minimum
_buildAudioConverter
_fetchApplicableOutputDataRates
_buildAvailableSampleRates
_buildApplicableDataRatesForSampleRates
_bringUpToDate
outputDataRate
_getAvailableOutputSampleRateFor:rounding:
float64RangeWithMinimum:maximum:
outputSampleRate
outputFormatFlags
outputBitsPerChannel
outputChannelCount
_inputASBD
_outputASBD
_audioConverter
_outputDataRate
_needNewConverter
_needAvailableSampleRates
_needApplicableParameters
_availableOutputSampleRates
_availableOutputDataRates
_applicableOutputSampleRatesForDataRate
_applicableOutputDataRatesForSampleRate
initWithMinimum:maximum:
initWithAudioValueRange:
maximum
float64RangeWithAudioValueRange:
_minimum
_maximum
_initWithTimestamp:
_synchronizedDataInternal
sampleBuffer
playbackItem
destinationURL
cachePrimingDownloadTokenNum
assetDownloader
_setFileFigAsset:
_transitionToTerminalStatus:error:
_selectMediaOptionsFromMediaSelection:
_addFigAssetListeners
_addFigAssetDownloaderListeners
_createDuplicateFigAssetFromAVAsset:
_removeFigAssetListeners
_removeFigPlaybackItemListeners
_removeFigAssetDownloaderListeners
initWithURL:destinationURL:options:
initWithDownloadToken:
initWithAsset:destinationURL:options:
_verifyDownloadConfigurationForAssetType
_primeCache
_readyForInspection
availableFileSize
_loadedTimeRangesFromFigLoadedTimeRanges:
assetDownloadSessionWithURL:destinationURL:options:
assetDownloadSessionWithDownloadToken:
assetDownloadSessionWithAsset:destinationURL:options:
stop
startLoadingMetadata
fileSize
countOfBytesReceived
resolvedMediaSelection
_addFigPlaybackItemListeners
_selectedMediaArray
_figAssetNotificationNames
_figPlaybackItemNotificationNames
_figAssetDownloaderNotificationNames
_primeCacheOnDispatchQueue
_errorFromAssetNotificationPayload:
_forwardLoadedTimeRangesChangedNotification:
timebaseReadWriteQueue
_itemTimeForHostTimeAsCMTime:
itemTimeForHostTime:
itemTimeForMachAbsoluteTime:
setSuppressesPlayerRendering:
currentRate
playerItemWeakReference
pixelBufferConformer
stateQueue
delegateWakeupSource
advanceWakeUpInterval
advanceWakeUpIntervalIsValid
wakeUpImageTime
immediateWakeUp
clientStateOnRequestedMediaDataChangeNotification
shouldTagBuffersWithInfo
_dispatchOutputMediaDataWillChange
initWithPixelBufferAttributes:
setUpWithOutputSettings:outputSettingsArePixelBufferAttributes:withExceptionReason:
_respondToPlayerItemFormatDescriptionsChange
hasNewPixelBufferForItemTime:
_copyPixelBufferForItemTimeWithOptions:itemTimeForDisplay:options:
_stopObservingTimebaseNotificationsForTimebase:
_startObservingTimebaseNotificationsForTimebase:
outputMediaDataWillChange:
initWithOutputSettings:
earliestAvailablePixelBufferItemTime
requestNotificationOfMediaDataChangeWithAdvanceInterval:
requestNotificationOfMediaDataChangeAsSoonAsPossible
copyPixelBufferForItemTime:itemTimeForDisplay:
copyPixelBufferForItemTime:remove:itemTimeForDisplay:
_setTagBuffersWithConversionInformation
_dispatchOutputSequenceWasFlushed
_videoOutputInternal
sourceFormat
videoFieldOfView
isVideoBinned
supportedStabilizationMethod
videoZoomFactorUpscaleThreshold
autoFocusSystem
isExperimental
_stringForMediaType:formatDescription:frameRateRanges:
minSupportedFrameRate
maxSupportedFrameRate
frameRateRangeWithMinRate:maxFrameRate:
maxFrameDuration
isBinned
fieldOfView
maxZoomFactor
zoomFactorUpscaleThreshold
minZoomFactorForDepthDataDelivery
maxZoomFactorForDepthDataDelivery
isStabilizationModeSupported:
hasSensorHDRCompanionIndex
highResStillImageDimensions
isHighResStillImageSupported
prefersSensorHDREnabled
isZoomDynamicSensorCropSupported
isStereoFusionSupported
isIrisSupported
rawBitDepth
supportsDynamicCrop
isHighResPhotoFormat
isHighProfileH264Supported
needsPreviewDPCC
formatIndex
defaultMaxFrameRate
defaultMinFrameRate
isQuadraHighResStillImageSupported
supportedRawPixelFormat
videoHDRFlavor
videoZoomSupportedDownscaleStages
videoZoomSupportedUpscaleStages
needsPhotoPreviewDPCC
supportedFormatsArrayIndex
optimizedPhotoFilterNames
initWithMinFrameRate:maxFrameRate:
includesFrameRate:
fragmentedAssetWithURL:options:
_fragmentedAsset
assets
accessSerializer
mindingInterval
initWithAsset:mindingInterval:
setMindingInterval:
addFragmentedAsset:
_setMindingInterval:removeAllAssets:
_throwsWhenAlreadyMindedAssetIsAdded
fragmentedAssetMinderWithAsset:mindingInterval:
removeFragmentedAsset:
_fragmentedAssetMinder
_fragmentedAssetTrack
faceTrackingMetadataObjectTypesAvailable
offlineVideoStabilizationMotionMetadataObjectTypesAvailable
objectQueue
availableMetadataObjectTypes
isFaceTrackingSupported
setMetadataObjectTypes:
isOfflineVideoStabilizationMotionMetadataSupported
setMetadataObjectsDelegate:queue:
metadataObjectsCallbackQueue
setRectOfInterest:
isFaceTrackingMetadataObjectTypesAvailable
setFaceTrackingMetadataObjectTypesAvailable:
isOfflineVideoStabilizationMotionMetadataObjectTypesAvailable
setOfflineVideoStabilizationMotionMetadataObjectTypesAvailable:
_mediator
defaultActionForKey:
actionForKey:
contentLayer
videoQueue
outputObscured
isRequestingMediaData
aboveHighWaterLevel
addedToSynchronizer
controlTimebaseSetByUserIsInUse
controlTimebaseSetByUser
readOnlyVideoQueueTimebase
readOnlyRenderingTimebase
flushCallbackListQueue
flushCallbackQueue
flushCallbacks
_updateLayerTreeGeometryWithVideoGravity:bounds:presentationSize:
_setStatus:error:
_setControlTimebase:
_setSynchronizerTimebase:error:
_initializeTimebases
_createVideoQueue
_updatePresentationSize:
_resetStatusWithOSStatus:
_setOutputObscuredDueToInsufficientExternalProtection:
_addFigVideoQueueListeners
_removeFigVideoQueueListeners
setAdditive:
_transformToAbsoluteAnimationOfBounds:
_addAnimationsForContentLayer:size:gravity:
automaticallyNotifiesObserversOfError
setControlTimebase:
controlTimebase
_sampleBufferDisplayLayerInternal
flushWithRemovalOfDisplayedImage:completionHandler:
flushAndRemoveImage
_flushComplete
_metricsDictionary
totalNumberOfVideoFrames
numberOfCorruptedVideoFrames
totalFrameDelay
_performanceMetricsInternal
videoPerformanceMetrics
initWithAuthenticationChallenge:sender:requestDictionary:
initWithAuthenticationChallenge:sender:
resourceLoader:didCancelAuthenticationChallenge:
sender
cancelAuthenticationChallenge:
_selectorForInformingDelegateOfCancellationByFig
_requestInfo
_performCancellationByClient
_shouldInformDelegateOfFigCancellation
initWithAuthenticationChallenge:sender:requestInfo:requestID:
initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:
weakReferenceToAsset
weakReferenceToDelegate
customURLLoader
customURLHandler
authHandler
contentKeySessionCustomURLHandler
loadingCancelled
pendingRequests
contentInformationCachingQueue
contentInformationCache
preloadsEligibleContentKeys
makeResourceLoaderURLSessionSupportStuffOnlyOnce
URLSession
bridgeBetweenHandlerAndSession
URLSessionOperationQueue
_setDelegateOnStateQueue:
_getDelegateOnStateQueue
_performDelegateCallbackSynchronouslyIfCurrentDelegateQueueIsQueue:delegateCallbackBlock:
instanceMethodSignatureForSelector:
invocationWithMethodSignature:
setSelector:
setTarget:
setArgument:atIndex:
invoke
methodReturnLength
getReturnValue:
_performDelegateSelector:withObject:representingNewRequest:key:fallbackHandler:
_cancelRequestWithKey:fallbackHandler:
initWithResourceLoader:requestDictionary:
_issueLoadingRequestWithKey:loadingRequest:isRenewalRequest:fallbackHandler:
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:shouldWaitForLoadingOfRequestedResource:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
initForReadingFromData:error:
finishDecoding
_poseAuthenticationChallengeWithKey:challenge:fallbackHandler:
performDefaultHandlingForAuthenticationChallenge:
initWithResourceLoader:requestInfo:requestID:
_authHandler
_customURLHandler
_customURLLoader
_cancelRequestWithKey:requestDictionary:fallbackHandler:
_cancelRequest:requestID:
_issueLoadingRequestWithKey:requestDictionary:fallbackHandler:
_poseAuthenticationChallengeWithKey:data:requestDictionary:fallbackHandler:
_poseAuthenticationChallengeWithRequestInfo:requestID:challenge:
_noteFinishingOfRequest:
_handleRequest:requestID:willHandleRequest:
_contentKeySessionCustomURLHandler
setPreloadsEligibleContentKeys:
_sendAuthResponseForChallenge:disposition:credential:error:
useCredential:forAuthenticationChallenge:
continueWithoutCredentialForAuthenticationChallenge:
rejectProtectionSpaceAndContinueWithChallenge:
cacheContentInformation:forURL:
cachedContentInformationForURL:
URLSessionDataDelegate
URLSessionDataDelegateQueue
setURLSession:
contentType
allowedContentTypes
contentLength
byteRangeAccessSupported
renewalDate
diskCachingPermitted
initWithLoadingRequest:allowedContentTypes:
isByteRangeAccessSupported
isDiskCachingPermitted
setContentType:
setContentLength:
setByteRangeAccessSupported:
setRenewalDate:
setDiskCachingPermitted:
_contentInformationRequest
requestedOffset
requestedLength
currentOffset
dataResponseQueue
requestsAllDataToEndOfResource
canSupplyIncrementalDataImmediately
weakReferenceToLoadingRequest
initWithLoadingRequest:requestedOffset:requestedLength:requestsAllDataToEndOfResource:canSupplyIncrementalDataImmediately:
_loadingRequest
_sendDataToCustomURLHandler:
_sendDataIncrementally:data:
_appendToCachedData:
respondWithData:
_dataRequest
weakReferenceToResourceLoader
requestInfo
responseInfoSentOnceToken
requestDictionary
URLRequest
response
redirect
dataCachingQueue
cachedData
cachedContentInformation
contentInformationRequest
dataRequest
cancelled
sentContentInfo
figImageGenerator
streamingKeyRequestCompletionHandler
figCryptor
requestor
cryptorKeyRequestID
initWithResourceLoader:URL:httpRequestHeaders:requestOffset:requestLength:allowedContentTypes:figCryptor:cryptorKeyRequestID:figPlaybackItem:figAssetImageGenerator:
setAllHTTPHeaderFields:
_setContentInformationRequest:
_setDataRequest:
_tryToMarkAsCancelled
resourceLoader:didCancelLoadingRequest:
finishLoadingWithError:
appendData:
_isRequestForContentKey
_canSetOrUseCachedContentInformation
allHTTPHeaderFields
_sendResponseInfoToCustomURLHandler
_ensureResponseInfoSentToCustomURLHandler
_cacheContentInformation:
_sendFinishLoadingToCustomURLHandlerWithError:
_sendDictionaryForURLRequest:context:
_contentKeySessionIsAttached
forwardRequestToContentKeySession
_getAndClearCachedData
_sendFinishLoadingToCustomURLHandler
setResponse:
setRedirect:
finishLoading
createKeyRequestDataUsingCryptorForApp:contentIdentifier:options:performAsync:error:
initWithRequestInfo:
serializableRepresentation
finishLoadingWithResponse:data:redirect:
streamingContentKeyRequestDataForApp:contentIdentifier:options:error:
generateStreamingContentKeyRequestDataAsynchronouslyForApp:contentIdentifier:options:completionHandler:
persistentContentKeyFromKeyVendorResponse:options:error:
providesExpiredSessionReports
_requestor
weakObserver
readOnlyTimebase
rateQueue
mostRecentlySetTime
rendererListQueue
renderers
timedRenderRemovals
figSynchronizerAccessQueue
figSynchronizer
currentFigRenderSynchronizerFactory
createRenderSynchronizerWithAllocator:options:error:
setRate:time:
_rendererConfigurationIsValid:
_updateRateFromTimebase
_synchronizerInternal
_canAddRendererInternal:error:
_addRenderer:error:
_performRendererRemoval:
_getTimebaseObserverForRenderer:
_getClientCompletionHandlerForRenderer:
_removeTimebaseObserverForRenderer:
_createOnceTimebaseObserverForRemovalOfRenderer:atTime:
_storeObserver:clientCompletionHandler:forRenderer:
removeRenderer:atTime:completionHandler:
_scheduleTimedRendererRemovalAtTime:atTime:withClientCompletionHandler:
addRenderer:
removeRenderer:atTime:withCompletionHandler:
_multipleAudioRenderersDisallowed
_addedAudioRendererCountInternal
_addedAudioRendererCount
routeSharingPolicy
setFigRenderSynchronizerFactory:forQueue:
URLByAppendingPathComponent:
data
writeToURL:options:error:
textSelector
textMarkupAttributes
_dictionaryPlistRepresentation
textStyleRuleWithTextMarkupAttributes:textSelector:
initWithTextMarkupAttributes:textSelector:
textStyleRulesFromPropertyList:
textStyleRuleWithTextMarkupAttributes:
initWithTextMarkupAttributes:
_textStyleRule
initWithPreferredLanguages:preferredMediaCharacteristics:
initWithPreferredLanguages:preferredMediaCharacteristics:preferredMediaSubTypes:precludedMediaSubTypes:
preferredMediaCharacteristics
preferredMediaSubTypes
precludedMediaSubTypes
preferMultichannelAudio
precludeMultichannelAudio
initWithPreferredLanguages:preferredMediaCharacteristics:preferredMediaSubTypes:precludedMediaSubTypes:preferMultichannelAudio:precludeMultichannelAudio:
initWithPreferredLanguages:preferredMediaCharacteristics:fallbackPreferredLanguages:fallbackPreferredMediaCharacteristics:captionDisplayType:
_criteriaInternal
_willDeallocOrFinalize
compositingRequest
setCompositingRequest:
cancellationTest
setCancellationTest:
defaultCIContextProvider
setDefaultCIContextProvider:
setCompletionHandler:
sourceCIImage
setSourceCIImage:
sourcePBuf
setSourcePBuf:
_compositingRequest
_cancellationTest
_defaultCIContextProvider
_sourceCIImage
_sourcePBuf
renderContext
size
colorWithRed:green:blue:
imageWithColor:
sourceTrackPreferredTransform
extent
imageByApplyingTransform:
renderTransform
colorSpace
compositionTime
newPixelBuffer
render:toCVPixelBuffer:
finishWithComposedVideoFrame:
finishCancelledRequest
finishWithError:
initUsingCompositingRequest:sourceFrame:cancellationTest:defaultCIContextProvider:completionHandler:
sourceImage
finishWithImage:context:
_requiredSourceTrackIDs
_sourceTrackPreferredTransform
shouldCancelAllRequests
sourceTrackIDs
sourceFrameByTrackID:
defaultCIContext
filteringRequestsInFlight
setShouldCancelAllRequests:
_filteringRequestsInFlight
_shouldCancelAllRequests
_defaultCIContextThreadSafety
_defaultCIContext
imageWithCVPixelBuffer:
playerItemOutputHostForPlayerItem:
dependencyFactory
nativeRepresentationSubtypes
textStylingResolution
initWithMediaSubtypesForNativeRepresentation:
initWithDependencyFactory:mediaSubtypesForNativeRepresentation:
legibleOutput:didOutputAttributedStrings:nativeSampleBuffers:forItemTime:
setTextStylingResolution:
_legibleOutputInternal
baseSettingsProvider
videoSettingsAdjuster
sourceVideoFormat
sourceAudioFormat
sourceVideoAverageFrameDuration
sourceVideoMinFrameDuration
_allOutputSettingsPresets
baseSettingsProviderForPreset:
initWithPreset:
videoSettingsAdjusterForPreset:
baseAudioSettings
baseVideoSettings
averageBitRateForSourceDimensions:andTargetFrameRate:
videoEncoderCapabilities
averageNonDroppableFrameIntervalIsSupportedByDefaultEncoderForVideoCodec:
colorSpaceFromSourceFormatDescriptions:andRendererColorSpace:
validatesSourceVideoMinFrameDuration
availableOutputSettingsPresets
outputSettingsAssistantWithPreset:
setSourceAudioFormat:
setSourceVideoFormat:
setSourceVideoAverageFrameDuration:
setSourceVideoMinFrameDuration:
initWithOutputSettingsPreset:
_exportSettings
_outputSettingsPresetIdentifier
_initWithCompletionBlock:
_errorCode
_fakeBias
_fakeBiasCompletionTime
_serialQueue
_mutableArray
groupDictionaries
selectedMediaArray
_groupDictionaries
_propertyListForSelectedMediaOptionInMediaSelectionGroup:
initWithAsset:propertyList:
mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup:
_mediaSelection
_validatedGroupIdentifierKey:
_isValidMediaSelectionOption:forMediaSelectionGroup:
weakReferenceToExternalDevice
screenID
inputMode
_externalDevice
_figEndpointHIDInputMode
initWithExternalDeviceAndHIDDictionary:hidDictionary:
setInputMode:
_externalDeviceHID
_size
_data
_prerendered
imageData
isPrerendered
_externalDeviceIcon
_HIDs
_makeHIDsOnlyOnce
_MFiCertSerial
_queue
_oemIcons
_screenInfo
_viewAreasQueue
_currentViewAreas
_makeIconsOnlyOnce
initWithExternalDevice:client:reason:
client
_client
_reason
initWithExternalDevice:
screenIDs
setViewAreaIndex:andAdjacentViewAreas:forScreenID:
valueWithRect:
externalDeviceHIDs
OEMIcons
requestCarUIForURL:withUUID:
currentExternalDevice
screenViewAreas
screenSafeAreas
screenInputCapabilities
screenPrimaryInputDevices
externalDeviceHIDWithUUID:
OEMIcon
OEMIconLabel
OEMIconVisible
modelName
nightMode
nightModeSupported
rightHandDrive
limitedUIElements
limitedUI
ownsTurnByTurnNavigation
ownsScreen
recognizingSpeech
supportedFeatures
electronicTollCollection
navigationAidedDriving
MFiCertificateSerialNumber
requestCarUI
requestCarUIForURL:
requestViewArea:forScreenID:
requestTurnByTurnNavigationOwnership
borrowScreenForClient:reason:
takeScreenForClient:reason:
takeScreenForConnection
sendCommand:withParameters:
_triggerFakeNotificationNamed:withPayload:
iOSUIRequestedForApplicationURL:
siriRequestedWithAction:
_configureFigEndpointPickerWithFeature:
parentOutputDeviceDiscoverySession
_removeFigEndpointPickerNotifications
outputDeviceDiscoverySessionAvailableOutputDevicesWithAvailableFigEndpoints:
_addFigEndpointPickerNotifications
_handlePickerServerConnectionDiedNotification
_parentSession
_pickerQueue
_endpointPicker
_features
initWithAvailableFigEndpoints:
_figEndpoints
initWithVideoComposition:
_setupFigCallbacks
_cleanupFigCallbacks
_colorPropertiesAreSetInVideoComposition:
compositionFrame:didFinishWithComposedPixelBuffer:
compositionFrame:didFinishWithError:
compositionFrameDidCancel:
_figCustomCompositor
_hasRegisteredFigCustomCompositorCallbacks
_clientRequiredPixelBufferAttributes
_weakSelf
_videoCompositionQ
_videoCompositionDidChange
_clientCustomCompositorQ
_clientCustomCompositor
_clientErrorQ
_clientError
_renderContextQ
_renderContext
_finishedRequestQ
initWithFigVideoCompositor:clientRequiredPixelBufferAttributes:videoComposition:pixelBufferPool:
initUsingSession:withRenderContext:compositionFrame:atTime:usingSources:instruction:
hasEqualPropertiesToFigVideoCompositor:
_compositionFrame:atTime:requiresRenderUsingSources:withInstruction:
_customCompositorShouldCancelPendingFrames
_customCompositorFigPropertyDidChange
videoDynamicRange
refreshRate
initWithDescriptionOfHowAllObservedPropertyChangesAreSerializedWithDispatcherDeallocation:
initWithCallbackContextRegistry:observer:object:keyPath:options:block:
initForObservingValueAtKeyPath:onObject:
initWithObservedObject:realNotifier:
callbackDidFireWithChangeDictionary:
startObservingValueAtTwoPartKeyPath:ofObject:options:usingBlock:
startObservingValueAtKeyPath:withoutKeepingAliveObservedObject:options:usingBlock:
weakObservationBlockForWeakObserver:passedToBlock:
observedObject
_observer
_keyPath
_weakReferenceToObject
_unsafeUnretainedObject
_callbackRegistrations
keyPathString
initializationIsCompleteForObject:
initWithObject:thatHasPropertyWithKey:whoseValueDependsOnValueAtKeyPath:
_weakReferenceToDependencyHost
_callbackCancellationHelper
_keyPathDependencies
topLevelPropertyKey
_reactToTopLevelPropertyChange:
_startObservingSecondLevelPropertyOnNewCurrentValueForTopLevelDependencyProperty:
secondLevelPropertyKey
_reactToSecondLevelPropertyChange:
_subObjectRegistrationQueue
_KVODispatcher
_dependentKey
_dependencyKeyPath
_leafPropertyChangeNotifier
initWithTopLevelPropertyKey:secondLevelPropertyKey:
_topLevelKey
_secondLevelKey
topLevelDependencyProperty
dependentProperty
_dependencyManager
_observedObject
_realNotifier
setRenderContext:
compositionFrame
setCompositionFrame:
setCompositionTime:
sourcesByTrackID
setSourcesByTrackID:
sourceTrackIDsInClientOrder
setSourceTrackIDsInClientOrder:
instruction
setInstruction:
setIsFinished:
_compositionFrame
_compositionTime
_sourcesByTrackID
_sourceTrackIDsInClientOrder
multipleRoutesDetected
outputDeviceDiscoverySession
_updateMultipleRoutesDetected
isRouteDetectionEnabled
setRouteDetectionEnabled:
_routeDetectorInternal
_basisProperties
_renderTransform
_renderScale
_pixelAspectRatio
_edgeWidths
_highQualityRendering
_destinationDesiredPixelBufferAttributes
_destinationDesiredPixelBufferYCbCrMatrix
_destinationDesiredPixelBufferColorPrimaries
_destinationDesiredPixelBufferTransferFunction
pixelFormatFamily
_pixelAspectRatioDict
_cleanApertureDict
_destinationPixelBufferDimensions
_pixelBufferPoolQ
isBufferYCbCr:
pixelAspectRatio
edgeWidths
highQualityRendering
renderContextPropertiesFromFigCompositor:
lastSettingsUniqueID
availablePhotoPixelFormatTypes
availablePhotoCodecTypes
availableRawPhotoPixelFormatTypes
availablePhotoFileTypes
availableRawPhotoFileTypes
stillImageStabilizationSupported
dualCameraFusionSupported
dualCameraDualPhotoDeliverySupported
supportedHDRModes
supportedFlashModes
highResolutionCaptureEnabled
maxBracketedCapturePhotoCount
livePhotoCaptureSupported
livePhotoCaptureEnabled
livePhotoAutoTrimmingEnabled
availableLivePhotoVideoCodecTypes
livePhotoCaptureSuspended
imageOptimizationForOfflineVideoStabilizationSupported
optimizedImageDimensionsForOfflineStabilization
livePhotoMovieProcessingSuspended
sceneDetectionObserversDispatchQueue
flashSceneObserverCount
HDRSceneObserverCount
stillImageStabilizationSceneObserverCount
isFlashScene
isHDRScene
photoSettingsForSceneMonitoring
requestsLock
beginEndIrisMovieCaptureHostTimeQueue
beginEndIrisMovieCaptureHostTimeDispatchGroup
_incrementObserverCountForKeyPath:
_decrementObserverCountForKeyPath:
_figCaptureIrisStillImageSettingsForAVCapturePhotoSettings:delegate:connections:
_dispatchFailureCallbacksForSettings:toDelegate:withError:
_figCaptureIrisPreparedSettingsForRequest:
_handlePreparationCompleteNotificationWithPayload:settingsID:
isDualCameraDualPhotoDeliverySupported
_updateSceneMonitoringForSourceDevice:
isLivePhotoCaptureSupported
setFigCaptureSessionSectionProperty:withHostTime:settingStateVaribleToNoOnFailure:
_updateSupportedPropertiesForSourceDevice:
_resetLivePhotoMovieProcessingSuspended
_resetLivePhotoCaptureSuspended
_dispatchFailureCallbacks:forRequest:withError:cleanupRequest:
_updateSupportedHDRModesForSourceDevice:
_updateLivePhotoCaptureSupportedForSourceDevice:
_updateLivePhotoMovieDimensionsForSourceDevice:
_updateAvailableLivePhotoVideoCodecTypesForSourceDevice:
_updateAvailableRawPhotoPixelFormatTypesForSourceDevice:
_setIsFlashScene:firingKVO:
_setIsHDRScene:firingKVO:
_setIsStillImageStabilizationScene:firingKVO:
_updateAvailablePhotoPixelFormatTypesForSourceDevice:
_updateAvailablePhotoCodecTypesForSourceDevice:
_updateAvailablePhotoFileTypesForSourceDevice:
_updateAvailableRawPhotoFileTypesForSourceDevice:
_updateStillImageStabilizationSupportedForSourceDevice:
_updateDualCameraFusionSupportedForSourceDevice:
_updateDualCameraDualPhotoDeliverySupportedForSourceDevice:
_updateSupportedFlashModesForSourceDevice:
_updateMaxBracketedCapturePhotoCountForSourceDevice:
_updateLensStabilizationDuringBracketedCaptureSupportedForSourceDevice:
_updateOfflineVISSupportedForSourceDevice:
_updateDepthDataDeliverySupportedForSourceDevice:
_HEVCAndHEIFAreAvailableForSourceDevice:
_sanitizedSettingsForSettings:
setMovieMode:
setIrisRecording:
setMovieRecordingSettings:
setSettingsProvider:
setRawOutputFormat:
setRawOutputFileType:
setThumbnailEnabled:
thumbnailEnabled
setThumbnailWidth:
setThumbnailHeight:
setThumbnailFormat:
setBurstQualityCaptureEnabled:
setEmbedsDepthDataInImage:
setOriginalImageFilters:
setProcessedImageFilters:
providesOriginalImage
setMovieURLForOriginalImage:
setMovieLevelMetadataForOriginalImage:
setBravoDualImageDeliveryEnabled:
setStillImageUserInitiatedRequestTime:
bracketedImageCount
setBracketedImageCount:
processedOutputFormat
setProcessedOutputFormat:
captureOutput:willBeginCaptureForResolvedSettings:
captureOutput:willCapturePhotoForResolvedSettings:
captureOutput:didCapturePhotoForResolvedSettings:
captureOutput:didFinishRecordingLivePhotoMovieForEventualFileAtURL:resolvedSettings:
captureOutput:didFinishProcessingLivePhotoToMovieFileAtURL:duration:photoDisplayTime:resolvedSettings:error:
captureOutput:didFinishCaptureForResolvedSettings:error:
_photoRequestForUniqueID:
_handleWillBeginCaptureNotificationWithPayload:forRequest:
_handleWillCaptureStillImageNotificationWithPayload:forRequest:
_handleDidCaptureStillImageNotificationWithPayload:forRequest:
_handleStillImageCompleteNotificationWithPayload:forRequest:
_handleDidRecordIrisMovieNotificationWithPayload:forRequest:
_handleDidFinishRecordingIrisMovieNotificationWithPayload:forRequest:
_errorForFigCaptureSessionNotificationPayloadErrorStatus:userInfo:
_handleDidFinishCaptureNotificationWithPayload:forRequest:
_avErrorUserInfoDictionaryForError:request:payload:isOriginalMovie:
JPEGPhotoDataRepresentationForJPEGSampleBuffer:previewPhotoSampleBuffer:
DNGPhotoDataRepresentationForRawSampleBuffer:previewPhotoSampleBuffer:
maxLivePhotoDataSize
capturePhotoWithSettings:delegate:
preparedPhotoSettingsArray
setPreparedPhotoSettingsArray:completionHandler:
supportedPhotoPixelFormatTypesForFileType:
supportedPhotoCodecTypesForFileType:
supportedRawPhotoPixelFormatTypesForFileType:
isDualCameraFusionSupported
isCameraCalibrationDataDeliverySupported
setPhotoSettingsForSceneMonitoring:
setHighResolutionCaptureEnabled:
setLivePhotoCaptureEnabled:
isLivePhotoCaptureSuspended
setLivePhotoCaptureSuspended:
setLivePhotoAutoTrimmingEnabled:
isLivePhotoMovieProcessingSuspended
setLivePhotoMovieProcessingSuspended:
isImageOptimizationForOfflineVideoStabilizationSupported
userInitiatedCaptureRequestAtTime:
isAutoRedEyeReductionSupported
_autoRedEyeReductionSupported
sinfDefaultKeyIdentifier
initializationData
customURLProviderContext
responseInfoSent
providesPersistableKey
preloadingRequestOptions
customURLRequestID
cryptorUUID
keySystem
_validateProtocolVersionList:
_validateHLSEncryptionMethod:
_extractAndStoreDefualtKeyIDFromInitializationData:
_keySystem
initWithContentKeySession:identifier:initializationData:preloadingRequestOptions:providesPersistableKey:
_copyAndStoreCryptorUUID
_clearContext
_prepareCryptor:forRenewal:andReturnKeyRequestID:
_setStatus:
_sendDictionaryForURLRequest:
contentKeySession:contentKeyRequest:didFailWithError:
_invokeDelegateCallbackWithBlock:synchronouslyWhenDelegateQueueIsNULL:
_getRetryReasonForError:
contentKeySession:shouldRetryContentKeyRequest:reason:
_setError:
contentKeySession:contentKeyRequestDidSucceed:
createDecryptorIfNecessaryForIdentifier:initializationData:formatDescription:hlsMethod:error:
setAppIdentifier:
_mergePreloadingRequestOptions:withCreateKeyRequestOptions:
_setCryptorWithFormatDescription:error:
createProtectorSessionIdentifierIfNecessary
contentKeyRequestDataForApp:contentIdentifier:options:error:
_setContentKeyRequest:forCryptorUUID:cryptorKeyRequestID:
processContentKeyResponseData:
_handleKeyResponseError:
renewExpiringResponseDataForContentKeyRequest:
clientCanReceivePersistableContentKeyRequest
_canRespondByRequestingPersistableContentKeyRequest
issueContentKeyRequestWithCustomURLHandler:identifier:requestInfo:requestID:providesPersistableKey:
issueContentKeyRequestWithCustomURLProviderContext:identifier:initializationData:providesPersistableKey:
issueContentKeyRequestWithPreloadingRequestOptions:identifier:initializationData:providesPersistableKey:
respondByRequestingPersistableContentKeyRequestAndReturnError:
initWithContentKeySession:customURLProviderContext:identifier:initializationData:providesPersistableKey:
initWithContentKeySession:customURLHandler:identifier:requestInfo:requestID:providesPersistableKey:
_prepareForKeyRenewal
canProvidePersistableContentKey
_handleKeyResponseSuccess
makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:completionHandler:
processContentKeyResponse:
processContentKeyResponseError:
renewExpiringContentKeyResponseData
respondByRequestingPersistableContentKeyRequest
_contentKeyRequest
persistableContentKeyFromKeyVendorResponse:options:error:
initWithKeySystem:
initWithKeyData:
_keyData
initWithKeyData:initializationVector:
_initializationVector
contentKeyResponseWithFairPlayStreamingKeyResponseData:
contentKeyResponseWithClearKeyData:initializationVector:
_keyResponse
_storageURL
_appIdentifier
_isExpired
_threadSafetyQ
_protectorSessionIdentifier
_contentKeyRecipients
_cryptorsList
keyRequestsByRequestID
contentKeySessionWithKeySystem:
initWithKeySystem:storageDirectoryAtURL:
copyDecryptorForIdentifier:initializationData:
contentKeySession:didProvideRenewingContentKeyRequest:
copyDefaultSecureStopManagerForAppIdentifier:storageDirectoryAtURL:
contentKeySessionWithKeySystem:storageDirectoryAtURL:
initWithStorageDirectoryAtURL:
storageURL
addContentKeyRecipient:
removeContentKeyRecipient:
contentKeyRecipients
contentProtectionSessionIdentifier
makeSecureTokenForExpirationDateOfPersistableContentKey:completionHandler:
contentKeySessionDidGenerateExpiredSessionReport:
_handleSecureStopDidFinalizeRecordCallback
pendingExpiredSessionReportsWithAppIdentifier:storageDirectoryAtURL:
removePendingExpiredSessionReports:withAppIdentifier:storageDirectoryAtURL:
_uniqueIDForCyptorUUID:cryptorKeyRequestID:
_internalQueue
_contentKeyRequestForCryptorUUID:cryptorKeyRequestID:
_removeContentKeyRequestForCryptorUUID:cryptorKeyRequestID:
contentKeySessionContentProtectionSessionIdentifierDidChange:
contentKeySession:didProvidePersistableContentKeyRequest:
contentKeySession:didProvideContentKeyRequest:
issueContentKeyRequest:
createCryptorOptionsForIdentifier:initializationData:formatDescription:hlsMethod:
_sendFinishLoadingForPreloadedKeyRequest:withRequestID:fromHandler:
initWithKeySystem:storageDirectoryAtURL:internal:
hasProtector
issueContentKeyRequestForInitializationData:
_handleRequest:withRequestID:fromHandler:willHandleRequest:
_handleUpdateToPersistentKey:forKeyIdentifier:
_handleKeyResponseError:forCryptorUUID:andCryptorKeyRequestID:
_handleKeyResponseSuccessfullyProcessedForCryptorUUID:andCryptorKeyRequestID:
dataUsingEncoding:
initWithBase64EncodedData:options:
flashlight
available
overheated
flashlightLevel
serverReconnectQueue
hasFlashlight
_setupFlashlight
_teardownFlashlight
isAvailable
isOverheated
turnPowerOnWithError:
turnPowerOff
setFlashlightLevel:withError:
_reconnectToServer
initWithContextUUID:
initWithFeature:options:
initWithUUIDString:
_configureFigEndpointPickerWithFeature:options:
endpointPickerUUID
parentOutputContext
copySystemVideoPicker
_parentContext
_featureForCurrentPicker
_contextUUID
_isSystemPicker
initWithTargetFrameDuration:dataProvider:destinationBufferPool:stabilizationEnabled:
_teardownVISProcessor
_copyStabilizedSampleBuffer:
copySourceStabilizationMetadataForFrameNumber:outputSampleTime:stabilizer:
_validateStabilizationMetadata:withSampleTime:isEndOfData:
copySourcePixelBufferForFrameNumber:outputSampleTime:stabilizer:
_validateSourcePixelBuffer:withSampleTime:metadata:isEndOfData:
_createSampleBufferWithPixelBuffer:sampleTime:futureMetadata:status:
_setupGVSProcessorWithMetadataArray:
offlineVideoStabilizerWithTargetFrameDuration:dataProvider:destinationBufferPool:stabilizationEnabled:
copyStabilizedSampleBuffer:
preferredSourcePixelBufferPrimingFrameCount
preferredSourceStabilizationMetadataPrimingCount
outputSampleBuffers
_targetFrameDuration
_metadataPrimingCount
_dataProviderWeakReference
_clientMarkedEndOfVideoData
_videoOutputFrameNumber
_cachedVideoFormatDescription
_cachedInputBufferAttributes
_outputSampleBuffers
_clientMarkedEndOfMetadata
_metadataOutputFrameNumber
_futureFrameMetadataDicts
_requiredMetadataKeys
_optionalMetadataKeys
_gvsProcessor
_stabilizationEnabled
AVCaptureVideoThumbnailOutputInternal
AVCaptureVideoThumbnailOutput
AVCaptureAudioDataOutputInternal
AVCaptureAudioDataOutput
AVCaptureDataOutputDelegateOverride
NSObject
AVCaptureSessionConfiguration
AVCapturePreparedPhotoSettingsArrayRequest
AVPlayerLooperInternal
AVPlayerLooper
AVCaptureAudioChannelInternal
AVCaptureAudioChannel
AVCaptureConnectionInternal
AVCaptureConnection
AVCaptureDeviceInternal
AVCaptureDevice
AVCaptureDeviceDiscoverySession
AVCaptureDeviceInputInternal
AVCaptureDeviceInput
AVCaptureFigAudioDevice
AVCaptureFigVideoDevice
AVAssetReaderOutputMetadataAdaptorInternal
AVAssetReaderOutputMetadataAdaptor
AVAssetReaderOutputAdaptor
AVCaptureFileOutputDelegateWrapper
AVCaptureFileOutputInternal
AVCaptureFileOutput
AVCaptureInputInternal
AVCaptureInput
AVCaptureInputPortInternal
AVCaptureInputPort
AVCaptureMovieFileOutputAdditions
AVCaptureMovieFileOutputInternal
AVCaptureMovieFileOutput
AVCaptureOutputInternal
AVCaptureOutput
AVOutputDeviceDiscoverySessionInternal
AVOutputDeviceDiscoverySessionAvailableOutputDevicesInternal
AVOutputDeviceDiscoverySession
AVEmptyOutputDeviceDiscoverySessionAvailableOutputDevices
AVOutputDeviceDiscoverySessionAvailableOutputDevicesImpl
AVOutputDeviceDiscoverySessionAvailableOutputDevices
AVCaptureSessionInternal
AVCaptureSession
AVDepthDataInternal
AVDepthData
AVCaptureStillImageRequest
AVCapturePrepareBracketRequest
AVCaptureStillImageOutputInternal
AVCaptureStillImageOutput
AVCaptureVideoDataOutputInternal
AVCaptureVideoDataOutput
AVPortraitEffectsMatteInternal
AVPortraitEffectsMatte
AVCaptureVideoPreviewLayerInternal
AVCaptureVideoPreviewLayer
AVPlayerLayerIntermediateLayer
AVPlayerLayerInternal
AVPlayerLayer
AVKeyPathDependencyHost
AVWeakObservable
CMTimeAsValue
CMTimeRangeAsValue
CMTimeMappingAsValue
NSValueCMTimeExtensions
AVTimeCoding
AVTimebaseObserver
AVPeriodicTimebaseObserver
AVOccasionalTimebaseObserver
AVOnceTimebaseObserver
AVPlayerItemMetadataCollectorMetadataItemFiltering
AVPlayerItemMetadataCollectorInternal
AVPlayerItemMetadataCollector
AVPlayerItemMediaDataCollector_Internal
AVCapturePhotoRequest
AVAssetDownloadStorageManager
AVAssetDownloadStorageManagementPolicy
NSCopying
NSMutableCopying
AVMutableAssetDownloadStorageManagementPolicy
AVAssetDownloadStorageManagementPolicyInternal
AVCapturePhotoSettingsInternal
AVCapturePhotoSettings
AVCapturePhotoBracketSettingsInternal
AVCapturePhotoBracketSettings
AVCaptureResolvedPhotoSettingsInternal
AVCaptureResolvedPhotoSettings
AVMetadataItemInternal
AVMetadataItem_Local
AVMetadataItemTypeCoercion
AVMetadataItem
AVAsynchronousKeyValueLoading
AVMutableMetadataItem
AVLazyValueLoadingMetadataItemInternal
AVLazyValueLoadingMetadataItem
AVMetadataItemValueRequestInternal
AVMetadataItemValueRequest
AVMetadataItemLazyValueLoading
AVChapterMetadataItemInternal
AVChapterMetadataItem
AVMetadataItemFilterForSharing
AVMetadataItemFilterInternal
AVMetadataItemFilter
AVMetadataObjectInternal
AVMetadataObject
AVMetadataFaceObjectInternal
AVMetadataFaceObject
AVMetadataTrackedFacesObjectInternal
AVMetadataTrackedFacesObject
AVMetadataOfflineVideoStabilizationMotionObjectInternal
AVMetadataOfflineVideoStabilizationMotionObject
AVMetadataMachineReadableCodeObjectInternal
AVMetadataMachineReadableCodeObject
AVMetadataMachineReadableCodeDescriptor
AVAssetProxy
AVAssetProxyInternal
AVAssetInternal
AVAsset
AVAssetChapterInspection
AVAsset_ExportAndSerializationSupport
AVAssetMovieAtomInfo_Private
AVURLAssetInternal
AVURLAsset
AVAssetCache
AVURLAssetCache_Private
AVURLAssetURLHandling
AVAssetClientURLRequestHelper
AVAssetURLLoading_Private
AVURLAssetInstanceIdentiferMapping
AVDataAsset
AVAssetTrackEnumerator
AVURLAssetContentKeyEligibility
AVContentKeyRecipient
AVURLAssetCustomURLHandling
AVURLAssetLoggingIdentifier
AVAudioMixEffectParameters
AVAudioMixSweepFilterEffectParameters
AVAudioMixSweepFilterEffectParametersInternal
AVAssetImageGeneratorInternal
AVAssetImageGenerator
AVAssetTrackInternal
AVAssetTrack
AVAssetTrack_ExportAndSerializationSupport
AVCDOSDataOutputStorage
AVCaptureDataOutputSynchronizerInternal
AVCaptureDataOutputSynchronizer
AVCaptureVideoDataOutputSampleBufferDelegate
AVCaptureAudioDataOutputSampleBufferDelegate
AVCaptureMetadataOutputObjectsDelegate
AVCaptureDepthDataOutputDelegate
AVPlayerInternal
AVPlayer
AVPlayerVideoDisplaySleepPrevention
AVPlayerProtectedContentPrivate
AVPlayerAudioPlaybackRateLimits
AVPlayerMultitaskSupport
AVPlayerSupportForMediaPlayer
AVAudioSessionMediaPlayerOnly
AVPlayerPixelBufferPoolSharing
AVPlayerFormatRestrictions
AVPlayerAutomaticMediaSelection
AVPlayerAutomaticMediaSelectionPrivate
AVPlayerAudioDeviceSupport
AVPlayerOutOfBandTextTrackRendering
AVPlayerMultichannelAudioStrategy
AVPlayerCaptionStrategySelection
AVPlayerAudioSessionParticipant
AVAudioSessionParticipant
AVPlayerQueueModificationDescription
AVPlayerVideoDecoderGPUSupport
AVPlayerLoggingIdentifier
AVSampleBufferAudioRendererInternal
AVSampleBufferAudioRenderer
AVMediaDataRequesterConsumer
AVQueuedSampleBufferRenderingInternal
AVQueuedSampleBufferRendering
AVAssetWriterInputMetadataAdaptorInternal
AVAssetWriterInputMetadataAdaptor
AVExternalProtectionMonitorInternal
AVExternalProtectionMonitor
AVNetworkPlaybackPerfHUDLayer
AVCaptureVideoSettingsValidator
AVPlayerItemInternal
AVPlayerItem
AVPlayerItemProtectedContent
AVPlayerItemProtectedContentPrivate
AVPlayerItemLogging
AVPlayerConnection
AVPlayerItemSupportForMediaPlayer
AVPlayerItemOutputs
AVPlayerItemMediaDataCollectors
AVPlayerItemServiceIdentifier_Private
LegibleOutputSupport
MetadataOutputSupport
AVPlayerItemAVKit
AVPlayerItemVideoEnhancement
AVPlayerItemTrackInternal
AVPlayerItemTrack
AVQueuePlayer
AVQueuePlayerInternal
AVSpecifiedLoggingIdentifierInternal
AVSpecifiedLoggingIdentifier
AVLoggingIdentifier
AVLoggingDerivedIdentifier
AVAssetLoggingIdentifierInternal
AVAssetLoggingIdentifier
AVPlayerLoggingIdentifierInternal
AVCompositionInternal
AVComposition
AVMutableCompositionInternal
AVMutableComposition
AVCompositionFormatReaderInspector
AVComposition_NSCoding
NSSecureCoding
NSCoding
AVCaptureCoreMotionMetadataInputInternal
AVCaptureCoreMotionMetadataInput
AVPlayerItemMetadataOutputInternal
AVPlayerItemMetadataOutput
AVPlayerItemMetadataOutput_Internal
AVCompositionTrackInternal
AVCompositionTrack
AVMutableCompositionTrackInternal
AVMutableCompositionTrack
AVTimeFormatterInternal
AVTimeFormatter
AVCompositionTrackSegmentInternal
AVCompositionTrackSegment
AVCaptureBracketedStillImageSettings
AVCaptureManualExposureBracketedStillImageSettings
AVCaptureAutoExposureBracketedStillImageSettings
AVAssetReaderInternal
AVAssetReader
AVAssetReaderOutputInternal
AVAssetReaderOutput
AVAssetReaderTrackOutputInternal
AVDecodedVideoSettingsForFig
AVAssetReaderTrackOutput
AVAssetReaderAudioMixOutputInternal
AVAssetReaderAudioMixOutput
AVAssetReaderVideoCompositionOutputInternal
AVAssetReaderVideoCompositionOutput
AVAssetReaderSampleReferenceOutputInternal
AVAssetReaderSampleReferenceOutput
AVAssetWriterConfigurationState
AVAssetWriterInternal
AVAssetWriter
AVAssetWriterUnknownHelper
AVAssetWriterFigAssetWriterNotificationHandler
AVAssetWriterWritingHelper
AVAssetWriterFigAssetWriterNotificationHandlerDelegate
AVWorkaroundNSBlockOperation
AVAssetWriterFinishWritingHelper
AVFigAssetWriterFinishWritingAsyncOperation
AVAssetWriterTerminalHelper
AVAssetWriterFailedTerminalHelper
AVAssetWriterClientInitiatedTerminalHelper
AVAssetWriterHelper
AVAssetWriterInputGroupInternal
AVAssetWriterInputGroup
AVAssetWriterInputSelectionOption
AVOutputDeviceAuthorizationSessionInternal
AVOutputDeviceAuthorizationSession
AVOutputDeviceAuthorizationRequestInternal
AVOutputDeviceAuthorizationRequest
AVAssetWriterInputConfigurationState
AVAssetWriterInputInternal
AVAssetWriterInput
AVAssetWriterInputUnknownHelper
AVAssetWriterInputWritingHelper
AVAssetWriterInputMediaDataRequesterDelegate
AVAssetWriterInputInterPassAnalysisHelper
AVAssetWriterInputNoMorePassesHelper
AVAssetWriterInputTerminalHelper
AVAssetWriterInputHelper
AVAssetWriterInputPixelBufferAdaptorInternal
AVAssetWriterInputPixelBufferAdaptor
AVFigAssetWriterTrack
AVFigAssetWriterAudioTrack
AVFigAssetWriterVideoTrack
AVFigAssetWriterGenericTrack
AVAssetWriterInputMediaDataRequester
AVAssetWriterInputPassDescriptionResponder
AVAssetWriterInputFigAssetWriterEndPassOperation
AVAssetWriterInputPassDescriptionInternal
AVAssetWriterInputPassDescription
AVVideoCompositionInstructionInternal
AVVideoCompositionInstruction
AVMutableVideoCompositionInstruction
AVVideoCompositionLayerInstructionInternal
AVVideoCompositionLayerInstruction
AVMutableVideoCompositionLayerInstruction
AVVideoCompositionInternal
AVVideoCompositing
AVVideoComposition
AVVideoCompositionColorimetery
AVVideoCompositionColorimeteryUtilities
AVVideoCompositionFiltering
AVMutableVideoComposition
AVVideoCompositionCoreAnimationTool
AVVideoCompositionCoreAnimationToolInternal
AVAssetVideoCompositionUtility
AVAssetExportSessionInternal
AVAssetExportSession
AVMediaDataRequester
AVSynchronizedLayerInternal
AVSynchronizedLayer
AVCaptureSynchronizedDataCollectionInternal
AVCaptureSynchronizedDataCollection
NSFastEnumeration
AVOutputDeviceInternal
AVOutputDevice
AVOutputDeviceFrecencyManager
AVOutputDeviceAuthorizedPeerInternal
AVOutputDeviceAuthorizedPeer
AVPairedDeviceInternal
AVPairedDevice
AVLocalOutputDeviceImpl
AVOutputDeviceImpl
AVCaptureDepthDataOutputInternal
AVCaptureDepthDataOutput
AVMetadataEnumerator
AVFigEndpointOutputDeviceImpl
AVOutputDeviceFigEndpointImplFetching
AVAssetCustomURLRequest
AVAssetCustomURLBridgeForNSURLSession
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
AVNSURLProtocolRequest
AVAssetCustomURLBridgeForNSURLProtocol
AVAssetCustomURLAuthentication
AVAssetTrackSegment
AVPropertyStorage
AVAudioMix
AVMutableAudioMix
AVAudioMixInternal
AVAudioMixInputParameters
AVAudioMixInputParametersInternal
AVMutableAudioMixInputParameters
AVOutputContextInternal
AVOutputContext
AVOutputContextCommunicationChannelInternal
AVOutputContextCommunicationChannel
AVOutputContextDestinationChangeInternal
AVOutputContextDestinationChange
AVOutputContextManagerInternal
AVOutputContextManager
AVRunLoopConditionRunLoopState
AVRunLoopCondition
AVAssetInspector
AVFormatReaderInspector
AVPlaybackItemInspector
AVStreamingResourceInspector
AVFigAssetInspector
AVScheduledAudioParametersInternal
AVScheduledAudioParameters
AVScheduledAudioParameters_Internal
AVMutableScheduledAudioParameters
AVOperation
ArrayOfOperations
AVBlockOperation
AVGlobalOperationQueue
AVOperationQueueWithFundamentalDependency
AVDepartureAnnouncingObjectMonitor
AVWaitForNotificationOrDeallocationOperation
AVObjectMonitoring
AVWeakReferencingDelegateStorage
AVDelegateStorage
AVAssetInspectorLoader
AVAssetSynchronousInspectorLoader
AVAssetMakeReadyForInspectionLoader
AVPlaybackItemInspectorLoader
AVFigAssetInspectorLoader
AVUnreachableAssetInspectorLoader
AVAssetTrackInspector
AVTrackReaderInspector
AVFigAssetTrackInspector
AVCompositionTrackReaderInspector
AVPlaybackItemTrackInspector
AVApplePortraitMetadataInternal
AVApplePortraitMetadata
AVCaptureMetadataInputInternal
AVCaptureMetadataInput
AVWeakReference
AVRetainReleaseWeakReference
AVCallbackContextRegistry
AVPlayerItemMediaDataCollectorInternal
AVPlayerItemMediaDataCollector
AVCMNotificationDispatcher
AVCMNotificationDispatcherListenerAndCallback
AVCMNotificationDispatcherListenerKey
AVEventWaiter
AVAssetTrackGroupInternal
AVAssetTrackGroup
AVCapturePhotoInternal
AVCapturePhoto
AVMetadataGroup
AVMetadataGroupSerializationSupport
AVMetadataGroupIdentification
AVTimedMetadataGroupInternal
AVTimedMetadataGroup
AVTimedMetadataGroupSerializationSupport
AVMutableTimedMetadataGroup
AVDateRangeMetadataGroupInternal
AVDateRangeMetadataGroup
AVDateRangeMetadataGroup_Private
AVDateRangeMetadataGroup_Internal
AVDateRangeMetadataGroup_Local
AVMutableDateRangeMetadataGroup
AVManagedAssetCacheInternal
AVManagedAssetCache
AVAssetDownloadCacheInternal
AVAssetDownloadCache
AVExecutionEnvironment
AVPlayerItemAccessLogInternal
AVPlayerItemAccessLog
AVPlayerItemAccessLogEventInternal
AVPlayerItemAccessLogEvent
AVPlayerItemAccessLogEventServiceIdentifier_Private
AVPlayerItemErrorLogInternal
AVPlayerItemErrorLog
AVPlayerItemErrorLogEventInternal
AVPlayerItemErrorLogEvent
AVAudioSessionMediaPlayerOnlyInternal
AVMediaSelectionGroupInternal
AVMediaSelectionGroup
AVAssetMediaSelectionGroup
AVMediaSelectionOptionInternal
AVMediaSelectionOption
AVMediaSelectionTrackOption
AVMediaSelectionKeyValueOption
AVCameraCalibrationDataInternal
AVCameraCalibrationData
AVFigObjectInspector
AVOutputSettings
AVFormatSpecification
AVMediaFileType
AVMediaFileOutputSettingsValidator
AVOutputSettingsValidation
AVWAVEOutputSettingsValidator
AVAIFFOutputSettingsValidator
AVAIFCOutputSettingsValidator
AVISOOutputSettingsValidator
AVGenericMediaFileOutputSettingsValidator
AVAudioOutputSettings
AVAVAudioSettingsAudioOutputSettings
AVReencodedAudioSettingsForFig
AVDecodedAudioSettingsForFig
AVVideoOutputSettings
AVPixelBufferAttributesVideoOutputSettings
AVAVVideoSettingsVideoOutputSettings
AVReencodedVideoSettingsForFig
AVAudioSettingsValueConstrainer
AVFloat64Range
AVCaptureSynchronizedDataInternal
AVCaptureSynchronizedData
AVCaptureSynchronizedSampleBufferDataInternal
AVCaptureSynchronizedSampleBufferData
AVCaptureSynchronizedMetadataObjectDataInternal
AVCaptureSynchronizedMetadataObjectData
AVCaptureSynchronizedDepthDataInternal
AVCaptureSynchronizedDepthData
AVAggregateAssetDownloadTask
AVAssetDownloadSessionInternal
AVAssetDownloadSession
AVAssetDownloadSession_Local
AVPlayerItemOutputInternal
AVPlayerItemOutput
AVPlayerItemVideoOutputInternal
AVPlayerItemVideoOutput
AVCaptureDeviceFormatInternal
AVCaptureDeviceFormat
AVFrameRateRangeInternal
AVFrameRateRange
AVFragmentedAssetInternal
AVFragmentedAsset
AVFragmentMinding
AVFragmentedAssetMinderInternal
AVFragmentedAssetMinder
AVFragmentedAssetTrackInternal
AVFragmentedAssetTrack
AVCaptureMetadataOutputInternal
AVCaptureMetadataOutput
AVPixelBufferAttributeMediator
AVSampleBufferDisplayLayerContentLayer
AVSampleBufferDisplayLayerInternal
AVSampleBufferDisplayLayer_Local
AVSampleBufferDisplayLayer
AVSampleBufferDisplayLayerQueueManagement
AVSampleBufferDisplayLayerMultitaskSupport
AVVideoPerformanceMetricsInternal
AVVideoPerformanceMetrics
VideoPerformanceMetrics
ProtectedContent
AVURLAuthenticationChallenge
AVAssetResourceLoaderRequest
AVAssetResourceLoaderInternal
AVAssetResourceLoader
AVAssetResourceLoaderContentKeySupport
AVAssetResourceLoaderURLAuthenticationChallengeSender
NSURLAuthenticationChallengeSender
AVAssetResourceLoaderContentInformationCache
AVAssetResourceLoaderURLSessionSupport
AVAssetResourceLoadingContentInformationRequestInternal
AVAssetResourceLoadingContentInformationRequest
AVAssetResourceLoadingDataRequestInternal
AVAssetResourceLoadingDataRequest
AVAssetResourceLoadingRequestInternal
AVAssetResourceLoadingRequest
AVAssetResourceLoadingRequestorInternal
AVAssetResourceRenewalRequest
AVAssetResourceLoadingRequestor
AVSampleBufferRenderSynchronizerInternal
AVSampleBufferRenderSynchronizer
AVSampleBufferRenderSynchronizerRendererManagement
AVSampleBufferRenderSynchronizerRendererRestrictions
AVSampleBufferRenderSynchronizerTimeObservation
Simulation
AVLocalFigSampleBufferRenderSynchronizerFactory
AVFigSampleBufferRenderSynchronizerFactory
AVTextStyleRuleInternal
AVTextStyleRule
AVPlayerMediaSelectionCriteria
FigDictionaryRepresentation
AVAsynchronousCIImageFilteringRequestInternal
AVAsynchronousCIImageFilteringRequest
AVCoreImageFilterVideoCompositionInstruction
AVCoreImageFilterCustomVideoCompositor
AVPlayerItemLegibleOutputRealDependencyFactory
AVPlayerItemLegibleOutputDependencyFactory
AVPlayerItemLegibleOutputInternal
AVPlayerItemLegibleOutput
AVOutputSettingsAssistantInternal
AVOutputSettingsAssistant
Dependencies
AVExportSettingsOutputSettingsAssistantBaseSettings
AVOutputSettingsAssistantBaseSettingsProvider
AVExportSettingsOutputSettingsAssistantVideoSettingsAdjuster
AVOutputSettingsAssistantVideoSettingsAdjuster
AVIOKitOutputSettingsAssistantVideoEncoderCapabilities
AVOutputSettingsAssistantVideoEncoderCapabilities
AVCaptureDeviceControlRequest
AVCaptureDeviceFakeBiasControlRequest
AVCaptureDeviceControlRequestQueue
AVMediaSelectionInternal
AVMediaSelection_Local
AVMediaSelection
AVMutableMediaSelection
AVExternalDeviceHIDInternal
AVExternalDeviceHID
AVExternalDeviceIconInternal
AVExternalDeviceIcon
AVExternalDeviceInternal
AVExternalDeviceScreenBorrowToken
AVExternalDeviceTurnByTurnToken
AVExternalDevice
AVFigEndpointPickerOutputDeviceDiscoverySessionImpl
AVOutputDeviceDiscoverySessionImpl
AVFigEndpointPickerOutputDeviceDiscoverySessionFactory
AVOutputDeviceDiscoverySessionFactory
AVFigEndpointOutputDeviceDiscoverySessionAvailableOutputDevicesImpl
AVOutputDeviceDiscoverySessionAvailableOutputDevices_FigEndpointImpl
AVCustomVideoCompositorSession
AVCustomVideoCompositorSession_FigCallbackHandling
AVDisplayCriteriaInternal
AVDisplayCriteria
_AVDisplayCriteriaPrivateMethods
AVKVODispatcher
AVObservationBlockFactory
AVWeakObservationBlockFactory
AVClientBlockKVONotifier
AVKVONotifier
AVCallbackCancellation
AVKVOIntrospection
AVWeaklyObservedObjectClientBlockKVONotifier
AVWeakObservableCallbackCancellationHelper
LegacyCallbackMethod
AVKeyPathDependencyManager
AVKeyPathDependencyRegistration
AVKeyPathDependency
AVTwoPartKeyPath
AVKeyPath
AVKeyPathFlattener
AVKeyPathFlattenerKVOIntrospectionShim
AVAsynchronousVideoCompositionRequestInternal
AVAsynchronousVideoCompositionRequest
Internal
AVRouteDetectorInternal
AVRouteDetector
AVVideoCompositionRenderContextInternal
AVVideoCompositionRenderContext
AVCapturePhotoOutputInternal
AVCapturePhotoOutput
AVContentKeyRequestInternal
AVContentKeyRequest
AVPersistableContentKeyRequest
AVContentKeyResponseFairPlayStreaming
AVContentKeyResponseClearKey
AVContentKeyResponseInternal
AVContentKeyResponse
AVContentKeySessionInternal
AVContentKeySession
AVContentKeySessionPendingExpiredSessionReports
AVContentKeySessionPrivateUtilities
AVContentKeyRequestSupport
AVContentKeySession_Internal
AVFlashlightInternal
AVFlashlight
AVFigEndpointPickerOutputContextImpl
AVOutputContextImpl
AVOfflineVideoStabilizer
@16@0:8
v16@0:8
@"AVWeakReference"
@"NSArray"
{CGSize="width"d"height"d}
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8Q16{CGSize=dd}24Q40
v24@0:8@16
v32@0:8{CGSize=dd}16
{CGSize=dd}16@0:8
v24@0:8^{OpaqueFigCaptureSession=}16
v32@0:8@16@24
@"AVCaptureVideoThumbnailOutputInternal"
@"AVWeakReferencingDelegateStorage"
@"NSObject<OS_dispatch_queue>"
^{OpaqueFigSimpleMutex=}
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@"NSObject<OS_dispatch_queue>"24
@24@0:8@16
@"AVCaptureAudioDataOutputInternal"
@56@0:8q16@24@32@40@48
q16@0:8
@"NSHashTable"
@32@0:8@16@?24
v24@0:8Q16
@?16@0:8
v20@0:8B16
@"AVQueuePlayer"
@"AVPlayerItem"
@"NSMutableArray"
{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}
{?="value"q"timescale"i"flags"I"epoch"q}
@"NSError"
@"<AVCallbackCancellation>"
@80@0:8@16@24{?={?=qiIq}{?=qiIq}}32
@32@0:8@16@24
i16@0:8
B24@0:8^@16
v48@0:8@16@24@32^v40
@"AVPlayerLooperInternal"
@"AVCaptureConnection"
f16@0:8
v20@0:8f16
@"AVCaptureAudioChannelInternal"
@"AVCaptureDevice"
@"AVCaptureInputPort"
@"NSString"
f24@0:8@16
v24@0:8q16
{?=qiIq}16@0:8
v40@0:8{?=qiIq}16
d16@0:8
v24@0:8d16
v20@0:8i16
v28@0:8q16B24
q32@0:8q16@24
@"AVCaptureConnectionInternal"
@"AVCaptureDeviceInput"
v48@0:8@16@24@32q40
@40@0:8@16@24q32
q24@0:8@16
v32@0:8@16@?24
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
^{OpaqueCMClock=}16@0:8
B24@0:8q16
B28@0:8f16^@20
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
v28@0:8f16@?20
v52@0:8{?=qiIq}16f40@?44
{?=fff}16@0:8
v36@0:8{?=fff}16@?28
{?=ff}28@0:8{?=fff}16
{?=fff}24@0:8{?=ff}16
v28@0:8d16f24
v28@0:8f16d20
{?=ii}16@0:8
@"AVCaptureDeviceInternal"
@"AVCaptureDeviceInputSource"
@32@0:8@16^@24
v24@0:8^{opaqueCMFormatDescription=}16
@"AVCaptureDeviceInputInternal"
@24@0:8^{OpaqueFigCaptureSource=}16
^{OpaqueFigCaptureSource=}16@0:8
v24@0:8^{OpaqueFigCaptureSource=}16
@24@0:8^{__CFString=}16
v32@0:8^{__CFString=}16@24
^{OpaqueFigCaptureSource=}
@"NSDictionary"
v48@0:8@16@24Q32^v40
v40@0:8@16@24^v32
v28@0:8@16B24
i40@0:8{?=qiIq}16
i32@0:8q16f24i28
i64@0:8q16{?=qiIq}24f48i52^{?=qiIq}56
i40@0:8q16{?=fff}24i36
d24@0:8d16
{?=fff}32@0:8{?=ff}16d24
d28@0:8{?=fff}16
{?=ff}36@0:8{?=fff}16d28
i28@0:8q16f24
v40@0:8d16f24d28i36
i28@0:8B16^B20
@28@0:8@16I24
i36@0:8^{__CFString=}16@24B32
i32@0:8^{__CFString=}16@24
v24@0:8@?16
@"AVCaptureDeviceFormat"
{CGPoint="x"d"y"d}
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
{?="redGain"f"greenGain"f"blueGain"f}
^{?=ff}
@"AVCaptureDeviceControlRequestQueue"
@"NSMutableDictionary"
@"AVAssetReaderTrackOutput"
i48@0:8@16^{OpaqueFigAssetReader=}24@32^i40
i48@0:8@"AVAssetReaderTrackOutput"16^{OpaqueFigAssetReader=}24@"NSDictionary"32^i40
@"AVAssetReaderOutputMetadataAdaptorInternal"
@48@0:8@16@24q32@40
@"NSURL"
@"AVCaptureFileOutputInternal"
@"<AVCaptureFileOutputDelegate>"
@"AVCaptureSession"
^{OpaqueFigCaptureSession=}
@"AVCaptureInputInternal"
@"AVCaptureInput"
^{opaqueCMFormatDescription=}
^{OpaqueCMClock=}
@44@0:8@16@24^{opaqueCMFormatDescription=}32B40
r^{opaqueCMFormatDescription=}16@0:8
v24@0:8^{OpaqueCMClock=}16
@"AVCaptureInputPortInternal"
B40@0:8@16@24^@32
B32@0:8@16^@24
v28@0:8B16@20
@36@0:8i16@20@28
{CGSize=dd}24@0:8@16
v40@0:8@16@24B32B36
@"AVCaptureMovieFileOutputInternal"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
@56@0:8@16@24{?=ii}32@40@48
q24@0:8^{opaqueCMSampleBuffer=}16
I24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@40@0:8@16@24@32
@48@0:8@16@24@32@40
@"AVCaptureOutputInternal"
@"<AVOutputDeviceDiscoverySessionImpl>"
@"<AVOutputDeviceDiscoverySessionAvailableOutputDevicesImpl>"
@24@0:8Q16
@"AVOutputDeviceDiscoverySessionInternal"
@"NSArray"16@0:8
@"AVOutputDeviceDiscoverySessionAvailableOutputDevicesInternal"
@"FigCaptureSessionConfiguration"
@"AVCaptureSessionConfiguration"
@"AVRunLoopCondition"
v24@0:8B16i20
B40@0:8@16@24@32
@32@0:8#16@24
@"AVCaptureSessionInternal"
^{__CVBuffer=}
@"AVCameraCalibrationData"
@"NSData"
@20@0:8I16
@32@0:8^{__CVBuffer=}16^@24
@24@0:8^@16
I16@0:8
^{__CVBuffer=}16@0:8
s16@0:8
@32@0:8^{__CVBuffer=}16^{CGImageMetadata=}24
@32@0:8^{__CVBuffer=}16@24
^{CGImageMetadata=}16@0:8
^{__CFString=}16@0:8
^{__CVBuffer=}20@0:8I16
@"AVDepthDataInternal"
v20@0:8I16
@"AVCaptureBracketedStillImageSettings"
@32@0:8@?16@24
@"FigCaptureStillImageSettings"
{?="imageCount"I"outputFormat"i"outputWidth"I"outputHeight"I}
@24@0:8^{opaqueCMSampleBuffer=}16
@40@0:8^v16Q24@32
^{__CFDictionary=}24@0:8^{opaqueCMSampleBuffer=}16
v40@0:8@16@24@?32
v40@0:8@16@24^B32
@"AVCaptureStillImageOutputInternal"
@"AVCaptureVideoDataOutputInternal"
r^{CGImageMetadata=}16@0:8
r^{__CFString=}16@0:8
@"AVPortraitEffectsMatteInternal"
@"CALayer"
@28@0:8@16B24
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGPoint=dd}32@0:8{CGPoint=dd}16
B36@0:8@16B24^@28
@"AVCaptureVideoPreviewLayerInternal"
@"AVNetworkPlaybackPerfHUDLayer"
@"AVKeyPathDependencyManager"
@"AVPlayer"
@"FigBaseCALayer"
@"FigVideoContainerLayer"
@"FigSubtitleCALayer"
@"NSSet"
v24@0:8@"<AVKeyPathDependencyRegistration>"16
v24@0:8@"<AVCallbackCancellation>"16
v40@0:8@16@24@32
v192@0:8@16{CATransform3D=dddddddddddddddd}24@152@160{CGSize=dd}168@184
v56@0:8@16{CGSize=dd}24@40@48
v48@0:8^@16^@24^@32^@40
@"AVPlayerLayerInternal"
@40@0:8{?=qiIq}16
v24@0:8^v16
r*16@0:8
c16@0:8
C16@0:8
S16@0:8
@24@0:8^{_NSZone=}16
@64@0:8{?={?=qiIq}{?=qiIq}}16
{?={?=qiIq}{?=qiIq}}16@0:8
@112@0:8{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}16
{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}16@0:8
{?="source"{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}"target"{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}}
v48@0:8{?=qiIq}16@40
{?=qiIq}24@0:8@16
v72@0:8{?={?=qiIq}{?=qiIq}}16@64
{?={?=qiIq}{?=qiIq}}24@0:8@16
v120@0:8{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}16@112
{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}24@0:8@16
@32@0:8^{OpaqueCMTimebase=}16@24
^{OpaqueCMTimebase=}16@0:8
@"NSObject<OS_dispatch_source>"
^{OpaqueCMTimebase=}
@64@0:8^{OpaqueCMTimebase=}16{?=qiIq}24@48@?56
@48@0:8^{OpaqueCMTimebase=}16@24@32@?40
{?=qiIq}40@0:8{?=qiIq}16
@"NSDate"
@"AVPlayerItemMetadataCollectorInternal"
@56@0:8@16@24@32^@40^@48
@36@0:8@16@24B32
^v16@0:8
^{opaqueCMSampleBuffer=}16@0:8
v24@0:8^{opaqueCMSampleBuffer=}16
@"AVCapturePhotoSettings"
@"AVCaptureResolvedPhotoSettings"
^{opaqueCMSampleBuffer=}
@"AVAssetDownloadStorageManagementPolicyInternal"
@28@0:8I16@20
@44@0:8I16@20@28@36
@64@0:8@16@24I32@36B44q48^@56
@"AVCapturePhotoSettingsInternal"
@36@0:8I16@20@28
@52@0:8I16@20@28@36@44
@68@0:8@16@24I32@36@44q52^@60
@"AVCapturePhotoBracketSettingsInternal"
{?="width"i"height"i}
@108@0:8q16{?=ii}24{?=ii}32{?=ii}40{?=ii}48B56{?=ii}60B68B72B76B80B84B88B92B96@100
@"AVCaptureResolvedPhotoSettingsInternal"
^{OpaqueFigMetadataReader=}
@"<NSObject><NSCopying>"
@"NSLocale"
@24@0:8^v16
^{CGImage=}16@0:8
@36@0:8@16@24I32
q32@0:8@16^@24
q32@0:8@"NSString"16^@24
v32@0:8@"NSArray"16@?<v@?>24
@32@0:8^{OpaqueFigMetadataReader=}16q24
B32@0:8@16@24
@24@0:8B16B20
^v32@0:8^{opaqueCMFormatDescription=}16^@24
@"AVMetadataItemInternal"
@"AVMutableMetadataItemInternal"
@"AVMetadataItemValueRequest"
@"AVLazyValueLoadingMetadataItemInternal"
@"AVMetadataItemValueRequestInternal"
^{OpaqueFigAsset=}
@120@0:8@16q24q32@40@48@56@64{?=qiIq}72{?=qiIq}96
v28@0:8q16i24
@"AVChapterMetadataItemInternal"
@"AVMetadataItemFilterInternal"
@"AVMetadataObject"
@84@0:8@16{CGAffineTransform=dddddd}24B72d76
@120@0:8@16{?=qiIq}24{?=qiIq}48{CGRect={CGPoint=dd}{CGSize=dd}}72@104@112
@"AVMetadataObjectInternal"
@128@0:8q16B24d28B36d40{?=qiIq}48{?=qiIq}72{CGRect={CGPoint=dd}{CGSize=dd}}96
@152@0:8q16B24d28B36d40{?=qiIq}48{?=qiIq}72{CGRect={CGPoint=dd}{CGSize=dd}}96@128@136@144
@"AVMetadataFaceObjectInternal"
@56@0:8{?=qiIq}16@40@48
@"AVMetadataTrackedFacesObjectInternal"
@"AVMetadataOfflineVideoStabilizationMotionObjectInternal"
@"CIBarcodeDescriptor"
@"AVMetadataMachineReadableCodeObjectInternal"
@"AVAssetInspectorLoader"
^{OpaqueFigAsset=}16@0:8
^{OpaqueFigFormatReader=}16@0:8
^{OpaqueFigPlaybackItem=}16@0:8
@"AVAssetProxyInternal"
@"<AVLoggingIdentifier>"
@44@0:8@16^{OpaqueFigPlaybackItem=}24@32B40
^{OpaqueFigMutableComposition=}16@0:8
{CGAffineTransform=dddddd}16@0:8
@24@0:8#16
@20@0:8i16
@"AVAssetInternal"
Q88@0:8@16{?={?=qiIq}{?=qiIq}}24@72Q80
@"AVAssetClientURLRequestHelper"
@"AVAssetCustomURLBridgeForNSURLProtocol"
@"AVAssetCustomURLAuthentication"
@"AVAssetResourceLoader"
@"AVAssetCache"
@40@0:8@16^Q24^@32
@32@0:8^{__CFDictionary=}16^{__CFString=}24
@"AVURLAssetInternal"
r^{OpaqueFigAsset=}16@0:8
r^v16@0:8
v48@0:8@16@24@32@40
@"AVCMNotificationDispatcher"
@32@0:8@16^Q24
@"NSEnumerator"
i32@0:8@16^B24
@"AVAudioMixEffectParametersInternal"
@32@0:8I16I20f24f28
@20@0:8f16
@"AVAudioMixSweepFilterEffectParametersInternal"
^{OpaqueFigAssetImageGenerator=}
@"AVAsset"
@"AVVideoComposition"
@"AVCustomVideoCompositorSession"
@32@0:8{CGSize=dd}16
^{CGImage=}56@0:8{?=qiIq}16^{?=qiIq}40^@48
{CGSize=dd}32@0:8{CGSize=dd}16
^{CGImage=}56@0:8{?=qiIq}16@40^@48
@"AVAssetImageGeneratorInternal"
@"AVAssetTrackInspector"
^{OpaqueFigAssetTrack=}
@36@0:8@16i24q28
@28@0:8@16i24
@32@0:8@16q24
^{OpaqueFigTrackReader=}16@0:8
^{OpaqueFigAssetTrack=}16@0:8
B24@0:8I16I20
@"AVAssetTrackInternal"
@"AVCaptureOutput<AVCaptureDataOutputDelegateOverride>"
v40@0:8@16^{opaqueCMSampleBuffer=}24@32
v40@0:8@"AVCaptureOutput"16^{opaqueCMSampleBuffer=}24@"AVCaptureConnection"32
v40@0:8@"AVCaptureOutput"16@"NSArray"24@"AVCaptureConnection"32
v64@0:8@16@24{?=qiIq}32@56
v72@0:8@16@24{?=qiIq}32@56q64
v64@0:8@"AVCaptureDepthDataOutput"16@"AVDepthData"24{?=qiIq}32@"AVCaptureConnection"56
v72@0:8@"AVCaptureDepthDataOutput"16@"AVDepthData"24{?=qiIq}32@"AVCaptureConnection"56q64
i24@0:8@16
B40@0:8{?=qiIq}16
@"AVCaptureDataOutputSynchronizerInternal"
@"AVPropertyStorage"
@"AVPixelBufferAttributeMediator"
@"AVAudioSessionMediaPlayerOnly"
@"NSMutableSet"
@"AVAudioSession"
@"AVOutputContext"
^{__CFDictionary=}
@"<AVCallbackCancellation><AVKVOIntrospection>"
^{OpaqueFigPlayer=}
^{OpaqueFigPlaybackItem=}
@24@0:8^{OpaqueFigPlayer=}16
i32@0:8q16^^{OpaqueFigPlayer}24
^{OpaqueFigPlayer=}16@0:8
v32@0:8@16^{OpaqueFigPlayer=}24
v32@0:8@?16@?24
v24@0:8^{OpaqueFigPlaybackItem=}16
v32@0:8q16@?24
@28@0:8i16@20
v52@0:8f16{?=qiIq}20B44i48
v44@0:8f16{?=qiIq}20
q28@0:8^@16i24
q28@0:8^@16f24
q24@0:8^@16
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
v48@0:8{?=qiIq}16@?40
v96@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64@?88
v68@0:8f16{?=qiIq}20{?=qiIq}44
i24@0:8@?16
v28@0:8B16^{__CFDictionary=}20
^{__CFString=}24@0:8q16
@56@0:8{?=qiIq}16@40@?48
@40@0:8@16@24@?32
v24@0:8^{OpaqueFigPlayer=}16
@"AVPlayerInternal"
B32@0:8d16^@24
@"AVAudioSession"16@0:8
v24@0:8@"AVAudioSession"16
@40@0:8q16@24@32
{?="mutex"^{OpaqueFigSimpleMutex}"requester"@"AVMediaDataRequester"}
@"AVScheduledAudioParameters"
^{OpaqueFigSampleBufferAudioRenderer=}
v24@0:8^^{OpaqueFigSampleBufferAudioRenderer}16
B32@0:8@"AVSampleBufferRenderSynchronizer"16^@24
v32@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?>24
v32@0:8q16@24
@"AVSampleBufferAudioRendererInternal"
@"AVAssetWriterInput"
@"AVAssetWriterInputMetadataAdaptorInternal"
@"AVExternalProtectionMonitorInternal"
@24@0:8d16
f32@0:8{CGSize=dd}16
@24@0:8^{opaqueCMFormatDescription=}16
@"AVPlayerLayer"
B72@0:8@16Q24@32@40@48@56^@64
^{OpaqueVTPixelBufferAttributesMediator=}
@"<AVPlayerItemDelegate>"
@"AVAudioMix"
^{__CFString=}
@"AVPlayerConnection"
^{OpaqueFigCPEProtector=}
i52@0:8^{OpaqueFigPlayer=}16@24@32I40^^{OpaqueFigPlaybackItem}44
^{OpaqueCMTimebase=}24@0:8^{OpaqueFigPlaybackItem=}16
B24@0:8^{CGSize=dd}16
B24@0:8^B16
@32@0:8@16^{OpaqueFigPlaybackItem=}24
v24@0:8i16B20
B32@0:8@16@?24
v28@0:8@16i24
v28@0:8^{opaqueMTAudioProcessingTap=}16i24
v64@0:8{?={?=qiIq}{?=qiIq}}16
v36@0:8@16@24B32
^{OpaqueFigCPEProtector=}16@0:8
@24@0:8^{__CFDictionary=}16
v32@0:8^{OpaqueFigPlaybackItem=}16@24
@"AVPlayerItemInternal"
v72@0:8^{OpaqueFigPlaybackItem=}16@24@32{?=qiIq}40@64
v44@0:8^{OpaqueFigPlaybackItem=}16@24i32@36
@48@0:8^{OpaqueFigPlaybackItem=}16B24i28@32@40
@"AVPlayerItemTrackInternal"
@"AVQueuePlayerInternal"
@"AVSpecifiedLoggingIdentifierInternal"
@"AVAssetLoggingIdentifierInternal"
@"AVPlayerLoggingIdentifierInternal"
^{OpaqueFigMutableComposition=}
^{OpaqueFigFormatReader=}
@"AVAssetInspector"
@24@0:8q16
@"AVCompositionInternal"
B104@0:8{?={?=qiIq}{?=qiIq}}16@64{?=qiIq}72^@96
v88@0:8{?={?=qiIq}{?=qiIq}}16{?=qiIq}64
@"AVMutableCompositionInternal"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"AVCaptureCoreMotionMetadataInputInternal"
@"AVPlayerItemMetadataOutputInternal"
@"AVCompositionTrackInternal"
B64@0:8@16@24{?=qiIq}32^@56
v32@0:8^v16^{__CFString=}24
v64@0:8{CGAffineTransform=dddddd}16
v40@0:8@16@24q32
@"AVMutableCompositionTrackInternal"
@"NSNumberFormatter"
B40@0:8o^@16@24o^@32
@"AVTimeFormatterInternal"
@124@0:8@16i24{?={?=qiIq}{?=qiIq}}28{?={?=qiIq}{?=qiIq}}76
@"AVCompositionTrackSegmentInternal"
@44@0:8{?=qiIq}16f40
^{OpaqueFigAssetReader=}
^{OpaqueFigAssetReader=}16@0:8
@"AVAssetReaderInternal"
v24@0:8^{OpaqueFigAssetReader=}16
@"AVAssetReaderOutputInternal"
@"AVAssetTrack"
@"AVOutputSettings"
@"NSDictionary"16@0:8
@"AVAssetReaderTrackOutputInternal"
@"AVAudioOutputSettings"
^{opaqueMTAudioProcessingTap=}24@0:8@16
v32@0:8^{opaqueMTAudioProcessingTap=}16@24
@"AVAssetReaderAudioMixOutputInternal"
@"AVVideoOutputSettings"
@"AVAssetReaderVideoCompositionOutputInternal"
@"AVAssetReaderSampleReferenceOutputInternal"
@"AVMediaFileType"
@"AVAssetWriterHelper"
@"<AVAssetWriterFinishWritingDelegate>"
@40@0:8@16@24^@32
B40@0:8@16@24@?32
v32@0:8q16q24
@"AVAssetWriterInternal"
@24@0:8^{OpaqueFigAssetWriter=}16
^{OpaqueFigAssetWriter=}
@40@0:8@16^{OpaqueFigAssetWriter=}24@32
v28@0:8B16@"NSError"20
^{OpaqueFigAssetWriter=}16@0:8
@"AVAssetWriterFigAssetWriterNotificationHandler"
@"NSOperation"
B48@0:8@16@24^{opaqueCMFormatDescription=}32^@40
@"AVAssetWriterConfigurationState"
@"AVAssetWriterInputGroupInternal"
^{opaqueCMFormatDescription=}16@0:8
@"<AVOutputDeviceAuthorizationSessionDelegate>"
@"<AVOutputDeviceAuthorizationSessionImpl>"
@"AVOutputDeviceAuthorizationSessionInternal"
@"<AVOutputDeviceAuthorizationRequestImpl>"
@"AVOutputDeviceAuthorizationRequestInternal"
v20@0:8s16
@"AVAssetWriterInputHelper"
@"AVAssetWriterInputPassDescriptionResponder"
@40@0:8@16@24^{opaqueCMFormatDescription=}32
^{__CVPixelBufferPool=}16@0:8
B40@0:8^{OpaqueFigAssetWriter=}16@24^@32
q32@0:8^{opaqueCMSampleBuffer=}16^@24
B24@0:8^{opaqueCMSampleBuffer=}16
B48@0:8^{__CVBuffer=}16{?=qiIq}24
@"AVAssetWriterInputInternal"
B24@0:8@"AVAssetWriterInputMediaDataRequester"16
@"AVFigAssetWriterTrack"
@"AVAssetWriterInputMediaDataRequester"
^{__CVPixelBufferPool=}
@"AVAssetWriterInputPassDescription"
@"AVAssetWriterInputWritingHelper"
@"AVAssetWriterInputConfigurationState"
@"AVAssetWriterInputPixelBufferAdaptorInternal"
@76@0:8^{OpaqueFigAssetWriter=}16@24@32@40@48B56@60^@68
@68@0:8^{OpaqueFigAssetWriter=}16@24@32@40@48B56^@60
B32@0:8^{opaqueCMSampleBuffer=}16^@24
B56@0:8^{__CVBuffer=}16{?=qiIq}24^@48
i44@0:8@16@24B32^@36
@"NSOperationQueue"
@28@0:8^{OpaqueFigAssetWriter=}16i24
v32@0:8B16@20i28
@"AVAssetWriterInputPassDescriptionInternal"
^{CGColor=}
^{CGColor=}16@0:8
v24@0:8^{CGColor=}16
@"AVVideoCompositionInstructionInternal"
@"AVMutableVideoCompositionInstructionInternal"
v168@0:8{CGAffineTransform=dddddd}16{CGAffineTransform=dddddd}64{?={?=qiIq}{?=qiIq}}112:160
v88@0:8{CGAffineTransform=dddddd}16{?=qiIq}64
v160@0:8{CGAffineTransform=dddddd}16{CGAffineTransform=dddddd}64{?={?=qiIq}{?=qiIq}}112
B64@0:8{?=qiIq}16^{CGAffineTransform=dddddd}40^{CGAffineTransform=dddddd}48^{?={?=qiIq}{?=qiIq}}56
v80@0:8f16f20{?={?=qiIq}{?=qiIq}}24:72
v72@0:8f16f20{?={?=qiIq}{?=qiIq}}24
B64@0:8{?=qiIq}16^f40^f48^{?={?=qiIq}{?=qiIq}}56
v136@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{?={?=qiIq}{?=qiIq}}80:128
v72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{?=qiIq}48
v128@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{?={?=qiIq}{?=qiIq}}80
B64@0:8{?=qiIq}16^{CGRect={CGPoint=dd}{CGSize=dd}}40^{CGRect={CGPoint=dd}{CGSize=dd}}48^{?={?=qiIq}{?=qiIq}}56
v72@0:8@16{?={?=qiIq}{?=qiIq}}24
@"AVVideoCompositionLayerInstructionInternal"
@"AVMutableVideoCompositionLayerInstructionInternal"
@"AVVideoCompositionCoreAnimationTool"
v24@0:8@"AVVideoCompositionRenderContext"16
v24@0:8@"AVAsynchronousVideoCompositionRequest"16
v24@0:8#16
B52@0:8r^^v16^@24@32B40^@44
B80@0:8@16{?={?=qiIq}{?=qiIq}}24@72
v24@0:8f16i20
@"AVVideoCompositionInternal"
v56@0:8@16@24^@32^@40^@48
@"AVMutableVideoCompositionInternal"
@"AVVideoCompositionCoreAnimationToolInternal"
^{OpaqueFigAssetExportSession=}
@"AVMetadataItemFilter"
v48@0:8@16@24@32@?40
{?=qiIq}32@0:8@16@24
q56@0:8@16{?=qiIq}24@48
@"AVAssetExportSessionInternal"
@"<AVMediaDataRequesterConsumer>"
@"AVSynchronizedLayerInternal"
[4@"AVCaptureOutput"]
[4@"AVCaptureSynchronizedData"]
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@"AVCaptureSynchronizedDataCollectionInternal"
@"<AVOutputDeviceImpl>"
v40@0:8@?16@24@?32
@"AVOutputDeviceInternal"
d24@0:8@16
@"AVOutputDeviceAuthorizedPeerInternal"
@52@0:8@16@24@32B40@44
@"AVPairedDeviceInternal"
v40@0:8@?<v@?@"<AVOutputDeviceConfigurationModification>">16@"NSDictionary"24@?<v@?i@"<AVOutputDeviceConfigurationRetrieval>"@"NSString"@"NSError">32
@"AVOutputDevice"16@0:8
v24@0:8@"AVOutputDevice"16
@"NSData"16@0:8
@"NSNumber"16@0:8
@"AVOutputDevice"
@"AVCaptureDepthDataOutputInternal"
@24@0:8^{OpaqueFigMetadataReader=}16
@56@0:8^{OpaqueFigMetadataReader=}16@24@32@40@48
v24@0:8^{OpaqueFigMetadataReader=}16
@24@0:8^{OpaqueFigEndpoint=}16
^{OpaqueFigEndpoint=}16@0:8
v24@0:8^{__CFString=}16
^{OpaqueFigEndpoint=}
@32@0:8^{OpaqueFigEndpoint=}16@24
@32@0:8^{__CFDictionary=}16Q24
^{__CFDictionary=}16@0:8
v24@0:8^{__CFDictionary=}16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v40@0:8^{__CFDictionary=}16Q24@32
i40@0:8^{__CFDictionary=}16Q24^B32
i24@0:8Q16
@24@0:8^{OpaqueFigAsset=}16
@"NSURLSession"
^{OpaqueFigCustomURLHandler=}
^{_CFURLConnection=}16@0:8
v24@0:8^{_CFURLConnection=}16
^{_CFURLConnection=}
^{__CFError=}
i32@0:8^{__CFDictionary=}16Q24
v32@0:8@16^{__CFError=}24
B40@0:8@16^{_CFURLRequest=}24^{_CFURLResponse=}32
v32@0:8@16^{_CFURLResponse=}24
v32@0:8@16^{__CFData=}24
i56@0:8^{__CFDictionary=}16Q24q32@40^{OpaqueFigCustomURLHandler=}48
@32@0:8q16@24
@"AVAudioMixInternal"
@"AVMutableAudioMixInternal"
r^{opaqueMTAudioProcessingTap=}16@0:8
v24@0:8^{opaqueMTAudioProcessingTap=}16
@"AVAudioMixInputParametersInternal"
@"AVMutableScheduledAudioParameters"
^{opaqueMTAudioProcessingTap=}
@"AVAudioMixEffectParameters"
@"AVMutableAudioMixInputParametersInternal"
@"<AVOutputContextImpl>"
@"<AVOutputContextCommunicationChannelDelegate>"
B32@0:8@16Q24
@"AVOutputContextInternal"
@"<AVOutputContextCommunicationChannelImpl>"
@"AVOutputContextCommunicationChannelInternal"
@"AVOutputContextDestinationChangeInternal"
@"<AVOutputContextManagerImpl>"
@"AVOutputContextManagerInternal"
@24@0:8^{__CFRunLoop=}16
^{__CFRunLoop=}16@0:8
^{__CFRunLoopSource=}16@0:8
v24@0:8^{__CFRunLoopSource=}16
^{__CFRunLoop=}
^{__CFRunLoopSource=}
@24@0:8^{OpaqueFigFormatReader=}16
v24@0:8^{OpaqueFigFormatReader=}16
^v24@0:8^{__CFString=}16
@32@0:8^{OpaqueFigPlaybackItem=}16@24
@"AVDisplayCriteria"
@"AVScheduledAudioParametersInternal"
@"AVMutableScheduledAudioParametersInternal"
B48@0:8q16@24^q32^@40
@24@0:8@?16
@"NSObject<OS_dispatch_semaphore>"
v32@0:8^@16^@24
^{OpaqueFigSimpleMutex=}16@0:8
^{OpaqueFigFormatReader=}24@0:8^i16
B28@0:8q16i24
@48@0:8@16Q24@32@40
@32@0:8^{OpaqueFigAsset=}16@24
q40@0:8@16^{OpaqueFigAsset=}24^@32
^{OpaqueFigTrackReader=}
@"NSIndexSet"
@"AVApplePortraitMetadataInternal"
^{OpaqueCMBlockBuffer=}
@32@0:8^{opaqueCMFormatDescription=}16^{OpaqueCMClock=}24
@"AVCaptureMetadataInputInternal"
^v24@0:8@16
@"AVPlayerItemMediaDataCollectorInternal"
@24@0:8^{opaqueCMNotificationCenter=}16
^{opaqueCMNotificationCenter=}16@0:8
v52@0:8@16^?24^{__CFString=}32r^v40I48
v48@0:8@16^?24^{__CFString=}32r^v40
v56@0:8@16@24^?32^{__CFString=}40r^v48
@48@0:8@16^?24^{__CFString=}32r^v40
^{opaqueCMNotificationCenter=}
@"AVCallbackContextRegistry"
@32@0:8@16^?24
^?16@0:8
@48@0:8@16^?24@32r^v40
@"NSCondition"
@"AVAssetTrackGroupInternal"
@"AVDepthData"
@"AVApplePortraitMetadata"
@140@0:8{?=qiIq}16^v40Q48^v56^v64@72^v80@88@96@104Q112Q120I128@132
@48@0:8@16@24^{__CVBuffer=}32@40
@56@0:8@16@24^{__CVBuffer=}32@40^@48
@"AVCapturePhotoInternal"
@"AVPortraitEffectsMatte"
@72@0:8@16{?={?=qiIq}{?=qiIq}}24
@"AVTimedMetadataGroupInternal"
^{opaqueCMSampleBuffer=}32@0:8^{opaqueCMFormatDescription=}16^@24
@"AVDateRangeMetadataGroupInternal"
@"AVManagedAssetCacheInternal"
^{CMBaseObject=}
@"AVAssetDownloadCacheInternal"
@"AVPlayerItemAccessLogInternal"
@"AVPlayerItemAccessLogEventInternal"
@"AVPlayerItemErrorLogInternal"
@"AVPlayerItemErrorLogEventInternal"
@"<AVAudioSessionDelegateMediaPlayerOnly>"
B28@0:8B16^@20
B36@0:8B16q20^@28
@"AVAudioSessionMediaPlayerOnlyInternal"
@"AVMediaSelectionGroupInternal"
@44@0:8@16@24@32B40
@"AVMediaSelectionOption"
@"AVMediaSelectionOptionInternal"
{?="columns"[3]}
{?="columns"[4]}
{?=[3]}16@0:8
{?=[4]}16@0:8
@24@0:8^{CGImageMetadata=}16
@64@0:8@16{CGPoint=dd}24f40{CGSize=dd}44i60
@"AVCameraCalibrationDataInternal"
{?=qiIq}48@0:8^{__CFString=}16{?=qiIq}24
{?=qiIq}24@0:8^{__CFString=}16
{?={?=qiIq}{?=qiIq}}24@0:8^{__CFString=}16
f28@0:8^{__CFString=}16f24
f24@0:8^{__CFString=}16
s24@0:8^{__CFString=}16
i24@0:8^{__CFString=}16
q24@0:8^{__CFString=}16
C24@0:8^{__CFString=}16
{CGSize=dd}40@0:8^{__CFString=}16{CGSize=dd}24
{CGSize=dd}24@0:8^{__CFString=}16
{CGAffineTransform=dddddd}24@0:8^{__CFString=}16
Q24@0:8@16
Q32@0:8@16^@24
@32@0:8@16^{opaqueCMFormatDescription=}24
B24@0:8^{opaqueCMFormatDescription=}16
B32@0:8@"AVAudioOutputSettings"16^@24
B32@0:8@"AVVideoOutputSettings"16^@24
v36@0:8^{AudioStreamBasicDescription=dIIIIIIII}16I24^{opaqueCMFormatDescription=}28
^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}32@0:8^{opaqueCMFormatDescription=}16^Q24
v48@0:8@16^@24^@32^@40
B48@0:8@16@24@32^@40
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
f28@0:8f16q20
I28@0:8I16q20
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
^{OpaqueAudioConverter=}
@32@0:8d16d24
@32@0:8{AudioValueRange=dd}16
@"AVCaptureSynchronizedDataInternal"
@28@0:8^{opaqueCMSampleBuffer=}16B24
@"AVCaptureSynchronizedSampleBufferDataInternal"
@"AVCaptureSynchronizedMetadataObjectDataInternal"
@60@0:8@16{?=qiIq}24B48q52
@"AVCaptureSynchronizedDepthDataInternal"
@"NSNumber"
@"AVURLAsset"
@"AVAssetDownloadSessionInternal"
i24@0:8^{OpaqueFigAsset=}16
^{OpaqueFigAsset=}24@0:8@16
{?=qiIq}24@0:8d16
{?=qiIq}24@0:8q16
v24@0:8^{OpaqueCMTimebase=}16
@"AVPlayerItemOutputInternal"
^{OpaqueFigVisualContext=}
^{OpaqueVTPixelBufferConformer=}
@"<AVPlayerItemOutputPullDelegate>"
^{__CVBuffer=}52@0:8{?=qiIq}16^{?=qiIq}40I48
^{__CVBuffer=}48@0:8{?=qiIq}16^{?=qiIq}40
^{__CVBuffer=}52@0:8{?=qiIq}16B40^{?=qiIq}44
^{OpaqueFigVisualContext=}16@0:8
@"AVPlayerItemVideoOutputInternal"
@"FigCaptureSourceFormat"
@36@0:8I16^{opaqueCMFormatDescription=}20@28
@"AVCaptureDeviceFormatInternal"
@24@0:8i16i20
B24@0:8d16
@"AVFrameRateRangeInternal"
@"AVFragmentedAssetInternal"
@32@0:8@16d24
v28@0:8d16B24
@"AVFragmentedAssetMinderInternal"
@"AVFragmentedAssetTrackInternal"
@"AVCaptureMetadataOutputInternal"
^{OpaqueFigVideoQueue=}
@"AVMediaDataRequester"
B32@0:8^{OpaqueCMTimebase=}16^@24
v72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGSize=dd}56
v48@0:8@16{CGSize=dd}24@40
@"AVSampleBufferDisplayLayerInternal"
v28@0:8B16@?20
@"AVVideoPerformanceMetricsInternal"
:16@0:8
@"AVWeakReference"16@0:8
@48@0:8@16@24^{__CFDictionary=}32^Q40
@64@0:8@16@24q32@40@48@56
^{OpaqueFigCustomURLLoader=}
@"AVAssetCustomURLBridgeForNSURLSession"
^{OpaqueFigCustomURLHandler=}16@0:8
^{OpaqueFigCustomURLLoader=}16@0:8
v52@0:8:16@24B32@36@?44
v32@0:8^{__CFDictionary=}16Q24
v44@0:8@16@24B32@?36
v40@0:8^{__CFDictionary=}16Q24^B32
v24@0:8^{OpaqueFigCustomURLHandler=}16
@"AVAssetResourceLoaderInternal"
v48@0:8@16q24@32@40
v32@0:8@"NSURLCredential"16@"NSURLAuthenticationChallenge"24
v24@0:8@"NSURLAuthenticationChallenge"16
@"AVAssetResourceLoadingContentInformationRequestInternal"
@48@0:8@16q24q32B40B44
@"AVAssetResourceLoadingDataRequestInternal"
@"NSMutableURLRequest"
@"NSURLResponse"
@"NSURLRequest"
@"NSMutableData"
@"AVAssetResourceLoadingContentInformationRequest"
@"AVAssetResourceLoadingDataRequest"
^{OpaqueFigCPECryptor=}
@"AVAssetResourceLoadingRequestor"
@40@0:8@16^{__CFDictionary=}24Q32
@96@0:8@16@24@32@40@48@56^{OpaqueFigCPECryptor=}64Q72^{OpaqueFigPlaybackItem=}80^{OpaqueFigAssetImageGenerator=}88
@52@0:8@16@24@32B40^@44
@48@0:8@16@24@32^@40
@"AVAssetResourceLoadingRequestInternal"
@"AVAssetResourceLoadingRequestorInternal"
^{OpaqueFigSampleBufferRenderSynchronizer=}
@"AVSampleBufferRenderSynchronizerInternal"
@?24@0:8@16
v40@0:8@16@?24@32
@48@0:8@16{?=qiIq}24
B56@0:8@16{?=qiIq}24@?48
v56@0:8@16{?=qiIq}24@?48
^{OpaqueFigSampleBufferRenderSynchronizer=}40@0:8r^{__CFAllocator=}16r^{__CFDictionary=}24^@32
@"AVTextStyleRuleInternal"
@56@0:8@16@24@32@40B48B52
@56@0:8@16@24@32@40q48
v24@0:8^{__CVBuffer=}16
@"AVAsynchronousVideoCompositionRequest"
@"CIImage"
@56@0:8@16^{__CVBuffer=}24@?32@?40@?48
@"AVAsynchronousCIImageFilteringRequestInternal"
@80@0:8{?={?=qiIq}{?=qiIq}}16@64@?72
@"NSObject<OS_dispatch_group>"
@"CIContext"
@"<AVPlayerItemOutputHost>"24@0:8@"AVPlayerItem"16
@"<AVPlayerItemLegibleOutputDependencyFactory>"
v56@0:8@16@24{?=qiIq}32
@"AVPlayerItemLegibleOutputInternal"
@"<AVOutputSettingsAssistantBaseSettingsProvider>"
@"<AVOutputSettingsAssistantVideoSettingsAdjuster>"
@"AVOutputSettingsAssistantInternal"
q36@0:8{CGSize=dd}16f32
@"NSDictionary"32@0:8@"NSArray"16@"NSDictionary"24
B24@0:8@"NSString"16
@"AVMediaSelectionInternal"
@"AVExternalDeviceHIDInternal"
@"AVExternalDeviceIconInternal"
@"<AVExternalDeviceDelegate>"
@"AVExternalDevice"
@"AVExternalDeviceInternal"
v24@0:8@"AVOutputDeviceDiscoverySession"16
@"AVOutputDeviceDiscoverySession"16@0:8
@"AVOutputDeviceDiscoverySessionAvailableOutputDevices"16@0:8
@"AVOutputDeviceDiscoverySession"
^{OpaqueFigEndpointPicker=}
@32@0:8#16Q24
@"AVOutputDeviceDiscoverySession"32@0:8#16Q24
^{OpaqueFigVideoCompositor=}16@0:8
v32@0:8^{OpaqueFigVideoCompositorFrame=}16^{__CVBuffer=}24
v32@0:8^{OpaqueFigVideoCompositorFrame=}16@24
v24@0:8^{OpaqueFigVideoCompositorFrame=}16
^{OpaqueFigVideoCompositor=}
@"<AVVideoCompositing>"
@"AVVideoCompositionRenderContext"
i64@0:8^{OpaqueFigVideoCompositorFrame=}16{?=qiIq}24@48^v56
@24@0:8f16i20
@"AVDisplayCriteriaInternal"
@48@0:8@16@24Q32@?40
@?32@0:8@16@?24
v24@0:8@"NSDictionary"16
@"NSObject"16@0:8
@64@0:8@16@24@32@40Q48@?56
@"NSObject"
@"NSObject<AVWeakObservable>"
@56@0:8@16@24@32Q40^v48
v32@0:8@"NSString"16@"AVTwoPartKeyPath"24
@"AVWeakObservableCallbackCancellationHelper"
@"AVKVODispatcher"
@"AVTwoPartKeyPath"
@"<AVKVOIntrospection><AVCallbackCancellation>"
^{OpaqueFigVideoCompositorFrame=}16@0:8
^{OpaqueFigVideoCompositorFrame=}
@"<AVVideoCompositionInstruction>"
^{__CVBuffer=}20@0:8i16
@"AVAsynchronousVideoCompositionRequestInternal"
@80@0:8@16@24^{OpaqueFigVideoCompositorFrame=}32{?=qiIq}40@64@72
@"AVRouteDetectorInternal"
{?="horizontalSpacing"q"verticalSpacing"q}
{?="left"d"top"d"right"d"bottom"d}
{?=qq}16@0:8
{?=dddd}16@0:8
@"AVVideoCompositionRenderContextInternal"
@48@0:8^{OpaqueFigVideoCompositor=}16@24@32^{__CVPixelBufferPool=}40
B24@0:8^{OpaqueFigVideoCompositor=}16
B24@0:8^{__CVBuffer=}16
@24@0:8^{OpaqueFigVideoCompositor=}16
@32@0:8^{opaqueCMSampleBuffer=}16^{opaqueCMSampleBuffer=}24
v24@0:8B16B20
v40@0:8I16@20@28B36
v32@0:8@16q24
v56@0:8^{__CFString=}16{?=qiIq}24^B48
@40@0:8i16@20@28B36
@"AVCapturePhotoOutputInternal"
@"AVContentKeySession"
i36@0:8^{OpaqueFigCPECryptor=}16B24^Q28
@52@0:8@16@24@32@40B48
@60@0:8@16^{OpaqueFigCustomURLHandler=}24@32^{__CFDictionary=}40Q48B56
^{OpaqueFigCPECryptor=}16@0:8
^{OpaqueFigCPECryptor=}32@0:8^{opaqueCMFormatDescription=}16^@24
@"AVContentKeyRequestInternal"
@"AVContentKeyResponseInternal"
^{__CFData=}
^{OpaqueFigContentKeySession=}
^{OpaqueFigSecureStopManager=}32@0:8@16@24
@"AVContentKeySessionInternal"
v40@0:8@16@24Q32
@32@0:8@16Q24
v32@0:8@16Q24
v28@0:8@?16B24
v44@0:8@16@24@32B40
v52@0:8^{OpaqueFigCustomURLHandler=}16@24^{__CFDictionary=}32Q40B48
@48@0:8@16@24^{opaqueCMFormatDescription=}32@40
r^{OpaqueFigCPECryptor=}56@0:8@16@24^{opaqueCMFormatDescription=}32@40^@48
r^{OpaqueFigCPECryptor=}32@0:8@16@24
r^{OpaqueFigContentKeySession=}16@0:8
v40@0:8^{__CFDictionary=}16Q24^{OpaqueFigCustomURLHandler=}32
v48@0:8^{__CFDictionary=}16Q24^{OpaqueFigCustomURLHandler=}32^B40
i32@0:8@16^^{OpaqueFigCustomURLHandler}24
^{OpaqueFigFlashlight=}
@"AVFlashlightInternal"
^{OpaqueFigEndpointPicker=}16@0:8
v40@0:8@"AVOutputDevice"16@"NSDictionary"24@?<v@?@"AVOutputContextDestinationChange">32
v24@0:8@"AVOutputContext"16
v24@0:8@"NSArray"16
v24@0:8@?<v@?@"NSError">16
@"AVOutputContextCommunicationChannel"32@0:8@"NSDictionary"16^@24
@"AVOutputContext"16@0:8
@"AVOutputContextCommunicationChannel"16@0:8
@32@0:8@"NSString"16@"NSDictionary"24
@24@0:8@"NSString"16
@32@0:8Q16@24
i32@0:8Q16@24
@60@0:8{?=qiIq}16@40^{__CVPixelBufferPool=}48B56
^{opaqueCMSampleBuffer=}24@0:8^@16
i56@0:8@16{?=qiIq}24^B48
i64@0:8^{__CVBuffer=}16{?=qiIq}24@48^B56
^{opaqueCMSampleBuffer=}64@0:8^{__CVBuffer=}16{?=qiIq}24@48^i56
^{OpaqueFigSampleBufferProcessor=}
avcapturevideothumbnailoutput_trace
com.apple.avfoundation
-[AVCaptureVideoThumbnailOutput _handleNotification:payload:]
<<<< AVCaptureVideoThumbnailOutput >>>> %s: %@ received notification %@
thumbnailContentsDelegate
T@"<AVCaptureVideoThumbnailContentsDelegate>",N
filters
T@"NSArray",C,N
thumbnailSize
T{CGSize=dd},N
vto_notificationHandler
<<<< AVCaptureVideoThumbnailOutput >>>> %s: %@
com.apple.avfoundation.audiodataoutput.bufferqueue
avcaptureaudiodataoutput_trace
NULL sampleBufferCallbackQueue passed
sampleBufferDelegate
-[AVCaptureAudioDataOutput setSampleBufferDelegate:queue:]
<<<< AVCaptureAudioDataOutput >>>> %s: (%p) setting sampleBufferDelegate to %@ (%p)
Invalid file type UTI - available file types are: %@
NULL queue passed
-[AVCaptureAudioDataOutput setDelegateOverride:delegateOverrideCallbackQueue:]
<<<< AVCaptureAudioDataOutput >>>> %s: (%p) setting delegateOverride to %@ (%p)
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
delegateOverride
T@,R,N
T@"<AVCaptureAudioDataOutputSampleBufferDelegate>",R,N
sampleBufferCallbackQueue
T@"NSObject<OS_dispatch_queue>",R,N
audioSettings
T@"NSDictionary",C,N
configurationID
Tq,R,V_configurationID
inputs
T@"NSArray",R,V_inputs
outputs
T@"NSArray",R,V_outputs
videoPreviewLayers
T@"NSHashTable",R,V_videoPreviewLayers
connections
T@"NSArray",R,V_connections
requestID
photoSettingsArray
T@"NSArray",R
completionHandler
T@?,R,V_completionHandler
completed
TB,N,GisCompleted,V_completed
avplayerlooper_trace
-[AVPlayerLooper initWithPlayer:templateItem:timeRange:]
<<<< AVPlayerLooper >>>> %s: Create with player %p and item %p
invalid parameter not satisfying: %s
player != nil
itemToLoop != nil
! CMTIMERANGE_IS_EMPTY(loopRange)
! CMTIMERANGE_IS_INDEFINITE(loopRange)
CMTIME_COMPARE_INLINE(loopRange.start, >=, kCMTimeZero)
<<<< AVPlayerLooper >>>> %s: AVPlayerLooperInternal allocation failed
com.apple.avplayerlooper.ivars
<<<< AVPlayerLooper >>>> %s: ivarAccessQueue allocation failed
<<<< AVPlayerLooper >>>> %s: loopingItemCopies allocation failed
duration
-[AVPlayerLooper initWithPlayer:templateItem:timeRange:]_block_invoke_2
<<<< AVPlayerLooper >>>> %s: Couldn't set up for looping. Change status to Failed
-[AVPlayerLooper initWithPlayer:templateItem:timeRange:]_block_invoke
<<<< AVPlayerLooper >>>> %s: Couldn't load asset duration. Change status to Failed
v8@?0
-[AVPlayerLooper _changeStatusToFailedWithError:]
<<<< AVPlayerLooper >>>> %s: Change to Failed status with error %@
-[AVPlayerLooper _changeStatusToFailedWithError:]_block_invoke
<<<< AVPlayerLooper >>>> %s: Already in Failed state so not updating error
-[AVPlayerLooper _calculateNumberOfCopiesNeeded]
<<<< AVPlayerLooper >>>> %s: Time range duration is %1.3f
<<<< AVPlayerLooper >>>> %s: Loop item duration is %1.3f
<<<< AVPlayerLooper >>>> %s: Using loop duration of %1.3f
<<<< AVPlayerLooper >>>> %s: Looping item duration is 0. Can't loop
<<<< AVPlayerLooper >>>> %s: Loop duration is less than minimum so capped number of copies to %d
<<<< AVPlayerLooper >>>> %s: Need %d copies for looping
<<<< AVPlayerLooper >>>> %s: The minimum number of copies (%d) is sufficient for looping
-[AVPlayerLooper _setupLoopingReturningError:]
<<<< AVPlayerLooper >>>> %s: Loop time range starts past item duration
Loop range must start within [0, item duration]
<<<< AVPlayerLooper >>>> %s: Loop time range end is past item duration
Loop range must be within [0, item duration]
<<<< AVPlayerLooper >>>> %s: Need to create %d item copies
<<<< AVPlayerLooper >>>> %s: Can't loop with 0 item copies
Template AVPlayerItem's duration must not be 0
<<<< AVPlayerLooper >>>> %s: Failed to allocate item copy
<<<< AVPlayerLooper >>>> %s: Pausing player (current rate: %1.1f) during set up
<<<< AVPlayerLooper >>>> %s: Changing player's action-at-end to Advance
-[AVPlayerLooper _setupLoopingReturningError:]_block_invoke
<<<< AVPlayerLooper >>>> %s: In Failed or cancelled state so cannot advance to Ready
currentItem
AVPlayerLooperObservationCurrentItemContext
AVPlayerLooperObservationItemStatusContext
<<<< AVPlayerLooper >>>> %s: Restoring player rate(%1.1f)
-[AVPlayerLooper observeValueForKeyPath:ofObject:change:context:]
<<<< AVPlayerLooper >>>> %s: observeValueForKeyPath:ofObject:change:context: called for %@
<<<< AVPlayerLooper >>>> %s: Looping turned off and not waiting for looping copy to finish so ignoring
<<<< AVPlayerLooper >>>> %s: Looping item(%p) failed to become ready so disabling looping
<<<< AVPlayerLooper >>>> %s: Unknown context(%p). Ignoring
status
Tq,R
error
T@"NSError",R
loopCount
loopingPlayerItems
T@"NSArray",R,N
_avplLoopingItemFailedToPlayToEndTimeNotificationHandler
<<<< AVPlayerLooper >>>> %s: [%p]Disabling looping since item(%p) failed to play to end with error %@
averagePowerLevel
Tf,R,N
peakHoldLevel
volume
Tf,N,V_volume
enabled
TB,N,GisEnabled,V_enabled
avcaptureconnection_trace
-[AVCaptureConnection dealloc]
<<<< AVCaptureConnection >>>> %s: We should not remove the observers in dealloc. see [17229521]
<%@: %p [type:%@][enabled:%u][active:%u]>
activeFormat
activeVideoMinFrameDuration
v16@?0^{OpaqueFigCaptureSession=}8
Not supported - use -isVideoMirroringSupported
Cannot be set when automaticallyAdjustsVideoMirroring is YES
videoOrientation cannot be set because it is not supported by this connection.  Use -isVideoOrientationSupported
WARNING: -[<%@: 0x%x> %@] is deprecated. Please use %@
AVCaptureDevice activeFormat.videoSupportedFrameRateRanges
videoMinFrameDuration is not supported by this connection.  Use -isVideoMinFrameDurationSupported
AVCaptureDevice activeVideoMinFrameDuration
videoMinFrameDuration cannot be set because it is not supported by this connection.  Use -isVideoMinFrameDurationSupported
-[AVCaptureConnection _setVideoMinFrameDuration:]
<<<< AVCaptureConnection >>>> %s: Specified max frame rate (%f) is too high, changing it to %f
<<<< AVCaptureConnection >>>> %s: Specified max frame rate (%f) is too low, changing it to %f
AVCaptureDevice setActiveVideoMinFrameDuration
-[AVCaptureConnection setVideoMinFrameDuration:]
<<<< AVCaptureConnection >>>> %s: %lld / %d
videoMaxFrameDuration is not supported by this connection.  Use -isVideoMaxFrameDurationSupported
AVCaptureDevice activeVideoMaxFrameDuration
AVCaptureDevice setActiveVideoMaxFrameDuration
-[AVCaptureConnection setVideoMaxFrameDuration:]
videoMaxFrameDuration cannot be set because it is not supported by this connection.  Use -isVideoMaxFrameDurationSupported
<<<< AVCaptureConnection >>>> %s: Specified min frame rate (%f) is too low, changing it to %f
<<<< AVCaptureConnection >>>> %s: Specified min frame rate (%f) is too high, changing it to %f
videoScaleAndCropFactor cannot be set to a value less than 1.0.
videoScaleAndCropFactor cannot be set to a value greater than -videoMaxScaleAndCropFactor.
-[AVCaptureConnnection activeVideoStabilizationMode]
-[AVCaptureConnnection preferredVideoStabilizationMode]
-[AVCaptureConnnection setPreferredVideoStabilizationMode:]
enablesVideoStabilizationWhenAvailable cannot be set because it is not supported by this connection.  Use -isVideoStabilizationSupported
-[AVCaptureConnection setEnablesVideoStabilizationWhenAvailable:]
<<<< AVCaptureConnection >>>> %s: %p preferredVideoStabilizationMode for connection to %@ is: %@
Supplied preferredVideoStabilizationMode (%ld) is outside of the range of AVCaptureVideoStabilizationMode.
-[AVCaptureConnection setPreferredVideoStabilizationMode:]
<<<< AVCaptureConnection >>>> %s: %p activeVideoStabilizationMode for connection to %@ is: %@ -> %@ (preferred: %@)
Not supported - use -isCameraIntrinsicMatrixDeliverySupported
videoRetainedBufferCountHint is not supported by this connection.  Use -isVideoRetainedBufferCountHintSupported
setVideoRetainedBufferCountHint is not supported by this connection.  Use -isVideoRetainedBufferCountHintSupported
-[AVCaptureConnection figCaptureConnectionConfigurationForSessionPreset:]
<<<< AVCaptureConnection >>>> %s: Output class is not AVCaptureMetadataOutput?
<<<< AVCaptureConnection >>>> %s: Input class is not AVCaptureMetadataInput or AVCaptureCoreMotionMetadataInput?
changeSeed
-[AVCaptureConnection _updateActiveVideoStabilizationMode:bumpChangeSeed:]
<<<< AVCaptureConnection >>>> %s: %@ cannot be set as the active video stabilization mode.
-[AVCaptureConnection _updatePropertiesForFormat:]
<<<< AVCaptureConnection >>>> %s: %p activeVideoStabilizationMode for connection to %@ is: %@ -> %@
inputPorts
output
T@"AVCaptureOutput",R,N
videoPreviewLayer
T@"AVCaptureVideoPreviewLayer",R,N
TB,N,GisEnabled
active
TB,R,N,GisActive
audioChannels
supportsVideoMirroring
TB,R,N,GisVideoMirroringSupported
videoMirrored
TB,N,GisVideoMirrored
automaticallyAdjustsVideoMirroring
TB,N
supportsVideoOrientation
TB,R,N,GisVideoOrientationSupported
videoOrientation
Tq,N
supportsVideoFieldMode
TB,R,N,GisVideoFieldModeSupported,V_supportsVideoFieldMode
videoFieldMode
Tq,N,V_videoFieldMode
supportsVideoMinFrameDuration
TB,R,N,GisVideoMinFrameDurationSupported
videoMinFrameDuration
T{?=qiIq},N
supportsVideoMaxFrameDuration
TB,R,N,GisVideoMaxFrameDurationSupported
videoMaxFrameDuration
videoMaxScaleAndCropFactor
Td,R,N
videoScaleAndCropFactor
Td,N
preferredVideoStabilizationMode
activeVideoStabilizationMode
Tq,R,N
supportsVideoStabilization
TB,R,N,GisVideoStabilizationSupported
videoStabilizationEnabled
TB,R,N,GisVideoStabilizationEnabled
enablesVideoStabilizationWhenAvailable
cameraIntrinsicMatrixDeliverySupported
TB,R,N,GisCameraIntrinsicMatrixDeliverySupported
cameraIntrinsicMatrixDeliveryEnabled
TB,N,GisCameraIntrinsicMatrixDeliveryEnabled
avcaptureVideoStabilizationModeToFigCaptureVideoStabilizationMethod
<<<< AVCaptureConnection >>>> %s: AVCaptureVideoStabilizationModeAuto does not map to a FigCaptureVideoStabilizationMethod.  Turning off.
AVCaptureDeviceWasConnectedNotification
AVCaptureDeviceWasDisconnectedNotification
AVCaptureDeviceFormatsWillChangeNotification
AVCaptureDeviceFormatsDidChangeNotification
AVCaptureDeviceDidStartRunningNotification
AVCaptureDeviceSubjectAreaDidChangeNotification
AVCaptureDeviceFaceDetectionDebugMetadataNotification
AVCaptureDeviceShallowDepthOfFieldStatusChangedNotification
AVCaptureDeviceShallowDepthOfFieldStatusChangedKeyEffectStatus
AVCaptureDeviceShallowDepthOfFieldStatusChangedKeyStagePreviewStatus
AVCaptureDeviceTypeBuiltInMicrophone
AVCaptureDeviceTypeBuiltInWideAngleCamera
AVCaptureDeviceTypeBuiltInTelephotoCamera
AVCaptureDeviceTypeBuiltInDualCamera
AVCaptureDeviceTypeBuiltInTrueDepthCamera
AVCaptureBravoCameraSelectionBehaviorUnsupported
AVCaptureBravoCameraSelectionBehaviorEvaluatesContinuously
AVCaptureBravoCameraSelectionBehaviorEvaluatesOnZoomChange
AVCaptureBravoCameraSelectionBehaviorEvaluatesNever
AVCaptureDeviceDiagnosticsTestTypeAutoFocusPositionSensorCalibration
Result
StatusCode
B24@?0@"AVCaptureDevice"8@"NSDictionary"16
q24@?0@"AVCaptureDevice"8@"AVCaptureDevice"16
The deviceType cannot be nil
This is not supported on the base AVCaptureDevice class.
+[AVCaptureDevice authorizationStatusForMediaType:]
<<<< AVCaptureDevice >>>> %s: Called with media type '%@'
<<<< AVCaptureDevice >>>> %s: Camera access is restricted: %s
The passed media type '%@' is not supported
<<<< AVCaptureDevice >>>> %s: Missing tccServiceName for media type '%@'
<<<< AVCaptureDevice >>>> %s: TCCAccessPreflight result was kTCCAccessPreflightUnknown for media type '%@'
<<<< AVCaptureDevice >>>> %s: TCCAccessPreflight result was kTCCAccessPreflightDenied for media type '%@'
<<<< AVCaptureDevice >>>> %s: TCCAccessPreflight result was kTCCAccessPreflightGranted for media type '%@'
<<<< AVCaptureDevice >>>> %s: Running in mediaserverd=%d or xctest=%d; access granted to media type '%@'
+[AVCaptureDevice requestAccessForMediaType:completionHandler:]
<<<< AVCaptureDevice >>>> %s: Called with media type '%@', handler %p
+[AVCaptureDevice requestAccessForMediaType:completionHandler:]_block_invoke
v12@?0C8
The passed media type %@ is not supported
avcapturedevice_trace
<%@: %p [%@][%@]>
Unknown Device
AVCaptureDeviceNames
Not supported by this device - use -isFaceDetectionSupported
Not supported by this device
Not supported by this device - use -isHighDynamicRangeSceneDetectionSupported
Not supported by this device - use -formats to discover valid formats
Not supported by this device - use activeFormat.supportedDepthDataFormats to discover valid formats
Not supported by this device - use activeFormat.videoSupportedFrameRateRanges to discover valid frame duration ranges
open
Not supported by this device - use -isFlashModeSupported: to discover valid flash modes
Not supported by this device -use -isTorchModeSupported: to discover valid torch modes
Not supported by this device - use -isTorchModeSupported:AVCaptureTorchModeOn
Not supported by this device - use -isFocusModeSupported: to discover valid focus modes
Not supported by this device -use -isFocusPointOfInterestSupported
Not supported by this device - use -isAutoFocusRangeRestrictionSupported
Not supported by this device - use -isSmoothAutoFocusSupported
Not supported by this device - use -isExposureModeSupported: to discover valid exposure modes
Not supported by this device - use -isExposurePointOfInterestSupported
Not supported by this device - use -isWhiteBalanceModeSupported: to discover valid white balance modes
Not supported by this device - use -isImageControlModeSupported
Not supported by this receiver
Not supported by this receiver - use activeFormat.supportedColorSpaces
Not supported by this receiver - use -isLowLightBoostSupported
Not supported -use -isEyeDetectionSupported
Not supported - use -isEyeClosedDetectionSupported
Not supported -use -isSmileDetectionSupported
uniqueID
T@"NSString",R,N
modelID
localizedName
manufacturer
T@"NSString",R,N,V_manufacturer
transportType
Ti,R,N,V_transportType
connected
TB,R,N,GisConnected
inUseByAnotherApplication
TB,R,N,GisInUseByAnotherApplication
suspended
TB,R,N,GisSuspended,V_suspended
linkedDevices
T@"NSArray",R,N,V_linkedDevices
formats
T@"AVCaptureDeviceFormat",&,N
activeVideoMaxFrameDuration
inputSources
T@"NSArray",R,N,V_inputSources
activeInputSource
T@"AVCaptureDeviceInputSource",&,N,V_activeInputSource
-[AVCaptureDeviceDiscoverySession init] - Cannot directly instantiate an AVCaptureDeviceDiscoverySession object.
<%@: %p device types: [%@], media type: %@, position: %@>
devices
T@"NSArray",R,N,V_devices
AVCaptureFigVideoDevice
AVCaptureFigAudioDevice
WideAngleCamera
TelephotoCamera
DualCamera
TrueDepthCamera
Microphone
Unspecified
Back
Front
<Unknown>
avcapturedeviceinput_trace
v24@?0@"AVCaptureDeviceInput"8@"NSDictionary"16
notReadyError
<%@: %p [%@]>
*** AVCaptureDeviceInput warning: The device "%@" was closed while still being used in a capture session. Make sure that the session is not running before closing any devices it is using. To remove a device from a session while the session is still running, remove the device input before closing the device.
-[AVCaptureDeviceInput _authorizedToUseDeviceAndRequestIfNecessary:]
<<<< AVCaptureDeviceInput >>>> %s: called (%p)
<<<< AVCaptureDeviceInput >>>> %s: Expecting either audio or video for device %@
<<<< AVCaptureDeviceInput >>>> %s: AVAuthorizationStatus result was AVAuthorizationStatusNotDetermined for media type '%@'; firing off async query to UI
v12@?0B8
<<<< AVCaptureDeviceInput >>>> %s: Authorized to use AVCaptureDevice %p: %s
-[AVCaptureDeviceInput _handleNotification:payload:]
<<<< AVCaptureDeviceInput >>>> %s: Disregarding notification %@ since sourceIDs don't match
<<<< AVCaptureDeviceInput >>>> %s: %@ : %@
device
T@"AVCaptureDevice",R,N
unifiedAutoExposureDefaultsEnabled
TB,N,V_unifiedAutoExposureDefaultsEnabled
avcapturefigaudiodevice_trace
-[AVCaptureDevice init] - Cannot directly instantiate a AVCaptureDevice object.
com.apple.avfoundation.audiocapturedevice.source_queue
-[AVCaptureFigAudioDevice _initWithFigCaptureSource:]
<<<< AVCaptureFigAudioDevice >>>> %s: (%p)
-[AVCaptureFigAudioDevice _copyFigCaptureSourceProperty:]_block_invoke
<<<< AVCaptureFigAudioDevice >>>> %s: (%p) Copy(%@) failed (%d)
fad_figCaptureSourceNotificationHandler_block_invoke
<<<< AVCaptureFigAudioDevice >>>> %s: (%p) %@
avcapturefigvideodevice_trace
_orderInDevicesArray
position
com.apple.avfoundation.videocapturedevice.source_queue
com.apple.avfoundation.videocapturedevice.state_queue
lensPosition
exposureDuration
exposureTargetOffset
deviceWhiteBalanceGains
grayWorldDeviceWhiteBalanceGains
com.apple.avfoundation.videocapturedevice.observed_properties_queue
-[AVCaptureFigVideoDevice _initWithFigCaptureSource:]
<<<< AVCaptureFigVideoDevice >>>> %s: (%p) with fcs: %@
-[AVCaptureFigVideoDevice _incrementObserverCountForHighFrequencyProperty:]_block_invoke_2
<<<< AVCaptureFigVideoDevice >>>> %s: Unexpected white balance gains size! Expected %lu, actual %d
-[AVCaptureFigVideoDevice _incrementObserverCountForHighFrequencyProperty:]_block_invoke
<<<< AVCaptureFigVideoDevice >>>> %s: Unable to copy property %@ into cache
-[AVCaptureFigVideoDevice localizedName]
<<<< AVCaptureFigVideoDevice >>>> %s: Could not get localized name for internal device
-[AVCaptureFigVideoDevice deviceType]
<<<< AVCaptureFigVideoDevice >>>> %s: Encountered unknown device.
-[AVCaptureFigVideoDevice supportsAVCaptureSessionPreset:]
<<<< AVCaptureFigVideoDevice >>>> %s: (%p) %@
-[AVCaptureFigVideoDevice lockForConfiguration:]
<<<< AVCaptureFigVideoDevice >>>> %s: (%p)
-[AVCaptureFigVideoDevice unlockForConfiguration]
May not be called without first successfully gaining exclusive ownership of the device using -lockForConfiguration:
Unsupported format - use -formats to discover valid formats
-[AVCaptureFigVideoDevice _setActiveFormat:resetVideoZoomFactorAndMinMaxFrameDurations:]_block_invoke
<<<< AVCaptureFigVideoDevice >>>> %s: Current activeMinFrameDuration (%lld/%d) is out of range for the new activeFormat, whose minSupportedDuration is (%lld/%d). Clamping!
<<<< AVCaptureFigVideoDevice >>>> %s: Current activeMaxFrameDuration (%lld/%d) is out of range for the new activeFormat, whose maxSupportedDuration is (%lld/%d). Clamping!
<<<< AVCaptureFigVideoDevice >>>> %s: Current videoZoomFactor (%f) exceeds the new activeFormat's max zoom factor (%f). Clamping!
<<<< AVCaptureFigVideoDevice >>>> %s: Current videoZoomFactor (%f) is less than the new activeFormat's min zoom factor (%f). Clamping!
activeColorSpace
activeDepthDataFormat
Unsupported depth data format - use activeFormat.supportedDepthDataFormats to discover valid formats
activeDepthDataMinFrameDuration is smaller than the active depth format's min frame duration.
activeDepthDataMinFrameDuration cannot be set when activeDepthDataFormat is nil.
-[AVCaptureFigVideoDevice _setActiveVideoMinFrameDurationInternal:]
<<<< AVCaptureFigVideoDevice >>>> %s: activeVideoMinFrameDuration changing in custom exposure mode, so sending a new custom exposure request to update frame rate
-[AVCaptureFigVideoDevice setActiveVideoMinFrameDuration:]
<<<< AVCaptureFigVideoDevice >>>> %s: %lld / %d
-[AVCaptureFigVideoDevice setActiveVideoMinFrameDuration:]_block_invoke
<<<< AVCaptureFigVideoDevice >>>> %s: Changing kCMTimeInvalid to %.2f max fps
Unsupported frame duration - use -activeFormat.videoSupportedFrameRateRanges to discover valid ranges
-[AVCaptureFigVideoDevice _setActiveVideoMinFrameDuration:]
<<<< AVCaptureFigVideoDevice >>>> %s: (%p) failed (%d)
-[AVCaptureFigVideoDevice _setActiveVideoMaxFrameDurationInternal:]_block_invoke
<<<< AVCaptureFigVideoDevice >>>> %s: ss is too low for new min frame rate %f, increasing ss.
-[AVCaptureFigVideoDevice _setActiveVideoMaxFrameDurationInternal:]
<<<< AVCaptureFigVideoDevice >>>> %s: activeVideoMaxFrameDuration is changing in custom exposure mode, so sending custom exposure request (if ss is out of range, it will change to the min frame rate)
-[AVCaptureFigVideoDevice setActiveVideoMaxFrameDuration:]
-[AVCaptureFigVideoDevice setActiveVideoMaxFrameDuration:]_block_invoke
<<<< AVCaptureFigVideoDevice >>>> %s: Changing kCMTimeInvalid to %f min fps
-[AVCaptureFigVideoDevice _setActiveVideoMaxFrameDuration:]
-[AVCaptureFigVideoDevice _setFocusWithMode:lensPosition:requestID:]
<<<< AVCaptureFigVideoDevice >>>> %s: focus operation: mode %d, lensPosition %f, %@
Unsupported focusMode - use -isFocusModeSupported: to discover valid focus modes
Not supported - use -isFocusPointOfInterestSupported:
Not supported - use -isAutoFocusRangeRestrictionSupported
Unsupported focusMode - use -isFocusModeSupported: to discover valid focus modes.
Unsupported - use -[isLockingFocusWithCustomLensPositionSupported]
The passed lensPosition %f is out-of-range [0, 1]
focusMode
-[AVCaptureFigVideoDevice setFocusModeLockedWithLensPosition:completionHandler:]_block_invoke
<<<< AVCaptureFigVideoDevice >>>> %s: Enqueued manual focus request %d with error %d
Not supported - use -isSmoothAutoFocusSupported to discover if smooth autofocus is supported
-[AVCaptureFigVideoDevice _setAdjustingExposure:]_block_invoke
<<<< AVCaptureFigVideoDevice >>>> %s: adjustingExposure %d -> %d
<<<< AVCaptureFigVideoDevice >>>> %s: AutoExpose adjustment finished. Transitioning to locked
-[AVCaptureFigVideoDevice _setAdjustingExposure:]
<<<< AVCaptureFigVideoDevice >>>> %s: Setting exposureMode = Locked after one-shot Auto-Expose or transition from Custom -> Locked Exposure
-[AVCaptureFigVideoDevice _setExposureWithMode:duration:ISO:requestID:newMaxFrameDuration:]
<<<< AVCaptureFigVideoDevice >>>> %s: Leaving custom exposure, so restoring min/max rates %.2f/%.2f
<<<< AVCaptureFigVideoDevice >>>> %s: exposure operation: %@
Not supported - use -isExposureModeSupported: to discover valid exposure modes.
-[AVCaptureFigVideoDevice setExposureMode:]_block_invoke
<<<< AVCaptureFigVideoDevice >>>> %s: Enqueued custom exposure request %d with error %d
Unsupported - use -[isExposureModeSupported:AVCaptureExposureModeCustom]
The passed exposure duration %lld:%d is outside the supported range - use activeFormat.minExposureDuration and activeFormat.maxExposureDuration
The passed ISO value %f is outside the supported range - use activeFormat.minISO and activeFormat.maxISO
exposureMode
-[AVCaptureFigVideoDevice setExposureModeCustomWithDuration:ISO:completionHandler:]_block_invoke
The passed bias %f is outside the supported range - use -minExposureTargetBias and -maxExposureTargetBias
-[AVCaptureFigVideoDevice setExposureTargetBias:completionHandler:]_block_invoke
<<<< AVCaptureFigVideoDevice >>>> %s: Enqueued fake bias request %d
<<<< AVCaptureFigVideoDevice >>>> %s: Enqueueing bias request %d with error %d
Unsupported - use -isExposurePointOfInterestSupported:
The passed whiteBalanceMode %d is not supported by this device - use -isWhiteBalanceModeSupported:
-[AVCaptureFigVideoDevice deviceWhiteBalanceGains]
<<<< AVCaptureFigVideoDevice >>>> %s: Unexpected white balance gains size! Expected %d, actual %d
-[AVCaptureFigVideoDevice grayWorldDeviceWhiteBalanceGains]
<<<< AVCaptureFigVideoDevice >>>> %s: Unexpected gray world white balance gains size! Expected %d, actual %d
Not supported - use -[isWhiteBalanceModeSupported:AVCaptureWhiteBalanceModeLocked]
Unsupported - use -[isLockingWhiteBalanceWithCustomDeviceGainsSupported]
whiteBalanceGains contain an out-of-range value - red, green, and blue gains must be in the [1, maxWhiteBalanceGain] range
whiteBalanceMode
-[AVCaptureFigVideoDevice setWhiteBalanceModeLockedWithDeviceWhiteBalanceGains:completionHandler:]_block_invoke
<<<< AVCaptureFigVideoDevice >>>> %s: Enqueued manual wb request %d with error %d
-[AVCaptureFigVideoDevice _setWhiteBalanceWithMode:gains:requestID:]
<<<< AVCaptureFigVideoDevice >>>> %s: white-balance operation: %@
-[AVCaptureFigVideoDevice chromaticityValuesForDeviceWhiteBalanceGains:]
<<<< AVCaptureFigVideoDevice >>>> %s: Iterations used: %d (HIT ITER LIMIT) for gains (%a %a %a) start %a
chromaticityValues contain an out-of-range value - x and y must be [0, 1]
The passed flashMode %d is not supported - use -isFlashModeSupported: to discover valid flash modes.
torchMode
-[AVCaptureFigVideoDevice setTorchMode:]
<<<< AVCaptureFigVideoDevice >>>> %s: (%p) called with %d
The passed torchMode %d is not supported - use -isTorchModeSupported: to discover valid torch modes
-[AVCaptureFigVideoDevice setTorchModeOnWithLevel:error:]
<<<< AVCaptureFigVideoDevice >>>> %s: (%p) called with level %f
The passed torchLevel %f is not supported - use -isTorchModeSupported: to discover valid torch modes
The passed torchLevel %f is invalid
The passed imageControlMode %d is not supported - use -isImageControlModeSupported:
automaticallyAdjustsImageControlMode must be set to NO before setting imageControlMode
The passed diagnostic test type %@ is not supported
Unsupported - use -isFaceDetectionSupported
-[AVCaptureFigVideoDevice faceRectangle]_block_invoke
<<<< AVCaptureFigVideoDevice >>>> %s: (%p) faceRectangle <x:%f, y:%f>, [w:%f, h:%f]
Unsupported - use -isHighDynamicRangeSceneDetectionSupported
-[AVCaptureFigVideoDevice setVideoZoomDrawOverlay:]
<<<< AVCaptureFigVideoDevice >>>> %s: UNIMPLEMENTED
-[AVCaptureFigVideoDevice setVideoZoomDownscaleStageHint:]
-[AVCaptureFigVideoDevice setVideoZoomUpscaleStageHint:]
videoZoomFactor
minAvailableVideoZoomFactor
maxAvailableVideoZoomFactor
The passed videoZoomFactor %lf is out-of-range [1, activeFormat.videoMaxZoomFactor]
rampingVideoZoom
May not be called with a duration of 0s.
May not be called while automaticallyAdjustsVideoHDREnabled is YES
Not supported - use activeFormat.isVideoHDRSupported
videoHDREnabled
Not supported - use activeFormat.supportedColorSpaces
-[AVCaptureFigVideoDevice supportedMetadataObjectIdentifiers]
<<<< AVCaptureFigVideoDevice >>>> %s: _captureSourceSupportedMetadata: %@
%@ is not available.  Use %@.
-[AVCaptureFigVideoDevice availableBoxedMetadataFormatDescriptions]
<<<< AVCaptureFigVideoDevice >>>> %s: CMMetadataFormatDescriptionCreateWithMetadataSpecifications returned error %d
Photo.MaxWidth
Photo.MaxHeight
Video.MaxWidth
Video.MaxHeight
MinMacroblocksForHighProfileUpTo30fps
MinMacroblocksForHighProfileAbove30fps
UsesQuantizationScalingMatrix_H264_Steep_16_48
TurboModeVersion
RelaxAverageBitRateTarget
-[AVCaptureFigVideoDevice _copyFigCaptureSourceProperty:]_block_invoke
<<<< AVCaptureFigVideoDevice >>>> %s: (%p) Copy(%@) failed (%d)
-[AVCaptureFigVideoDevice _setFigCaptureSourceProperty:withValue:cacheOnly:]_block_invoke
<<<< AVCaptureFigVideoDevice >>>> %s: Caching FigCaptureSource %@ to %@
<<<< AVCaptureFigVideoDevice >>>> %s: Setting FigCaptureSource %@ to %@
<<<< AVCaptureFigVideoDevice >>>> %s: (%p) Set(%@) failed (%d)
v32@?0@8@16^B24
-[AVCaptureFigVideoDevice _handleNotification:payload:]_block_invoke
<<<< AVCaptureFigVideoDevice >>>> %s: Custom exposure duration changed to %lld/%d (%f) (as rate + .05 = %f), setting min frame rate %f -> %f
<<<< AVCaptureFigVideoDevice >>>> %s: Custom exposure duration changed to %lld/%d (%f) (as rate + .05 = %f), cur min frame rate %f is lower, so NOT changing.
exposureTargetBias
-[AVCaptureFigVideoDevice _handleNotification:payload:]
<<<< AVCaptureFigVideoDevice >>>> %s: Received DeviceWhiteBalanceGains notification with a bad payload. Expected size = %d, actual = %d
<<<< AVCaptureFigVideoDevice >>>> %s: Received GrayWorldDeviceWhiteBalanceGains notification with a bad payload. Expected size = %d, actual = %d
<<<< AVCaptureFigVideoDevice >>>> %s: State inconsistency: ramp %d notified completion but invalid ramping target %g
<<<< AVCaptureFigVideoDevice >>>> %s: Invalid notification payload!
faceRectangle
faceRectangleAngle
-[AVCaptureFigVideoDevice _handleManualControlCompletionForRequestQueue:withPayload:]
<<<< AVCaptureFigVideoDevice >>>> %s: Called with queue %p
<<<< AVCaptureFigVideoDevice >>>> %s: 
Firing completion handler %p with kCMTimeInvalid due to error %d (cur=%d/completed=%d)
<<<< AVCaptureFigVideoDevice >>>> %s: 
Firing completion handler %p for fake bias request with time %f (cur=%d/completed=%d)
<<<< AVCaptureFigVideoDevice >>>> %s: 
Firing completion handler %p for EXACT MATCH request with time %f (cur=%d/completed=%d)
<<<< AVCaptureFigVideoDevice >>>> %s: 
Firing completion handler %p for earlier (coalesced?) request with time %f (cur=%d/completed=%d)
<<<< AVCaptureFigVideoDevice >>>> %s: 
Not dequeueing request -- it's in the future (cur=%d/completed=%d)
<<<< AVCaptureFigVideoDevice >>>> %s: Exiting for queue %p
-[AVCaptureFigVideoDevice _drainManualControlRequestQueue:]
<<<< AVCaptureFigVideoDevice >>>> %s: draining request %d from queue %@
-[AVCaptureFigVideoDevice _checkTCCAccess]_block_invoke
<<<< AVCaptureFigVideoDevice >>>> %s: No FigCaptureSource
fvd_figCaptureSourceNotificationHandler_block_invoke
trackOutput != nil
[[trackOutput mediaType] isEqualToString:AVMediaTypeMetadata]
Cannot initialize an instance of %@ with a track output which was used to initialize another instance of %@
Cannot initialize an instance of %@ with a track output which has already progressed beyond AVAssetReaderStatusUnknown
cannot call method until the track output is attached to an asset reader and -startReading has been called on that asset reader
assetReaderTrackOutput
T@"AVAssetReaderTrackOutput",R,N
settingsID
Tq,R,V_settingsID
outputFileURL
T@"NSURL",R,V_outputFileURL
metadata
T@"NSArray",&,V_metadata
delegateStorage
T@"AVWeakReferencingDelegateStorage",R,V_delegateStorage
recording
TB,N,GisRecording,V_recording
paused
TB,N,GisPaused,V_paused
avcapturefileoutput_trace
delegate
T@"<AVCaptureFileOutputDelegate>",N,V_delegate
T@"NSURL",R,N
TB,R,N,GisRecording
recordingPaused
TB,R,N,GisRecordingPaused
recordedDuration
T{?=qiIq},R,N
recordedFileSize
maxRecordedDuration
maxRecordedFileSize
minFreeDiskSpaceLimit
AVCaptureInputPortFormatDescriptionDidChangeNotification
capture.input.FigCaptureSessionSyncQueue
avcaptureinput_trace
-[AVCaptureInput attachToFigCaptureSession:]
<<<< AVCaptureInput >>>> %s: %@ %@
-[AVCaptureInput attachToFigCaptureSession:]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Aspen/AVCaptureInput.m
_inputInternal->figCaptureSession == NULL
-[AVCaptureInput detachFromFigCaptureSession:]
-[AVCaptureInput detachFromFigCaptureSession:]_block_invoke
figCaptureSession == _inputInternal->figCaptureSession
ports
<%@ %p>
<%@: %p (%@: %p) %@ %.4s %s>
disabled
input
T@"AVCaptureInput",R,N
mediaType
formatDescription
Tr^{opaqueCMFormatDescription=},R,N
clock
T^{OpaqueCMClock=},R,N
AVCaptureOutputNotificationInfoVideoPreviewFrameSurface
AVCaptureOutputNotificationInfoVideoPreviewFrameSurfaceSize
AVCaptureMovieFileOutputRecordingCompletedNotification
avcapturemoviefileoutput_trace
Can't pause recording because the capture session is not running.
Nil URL passed
Cannot record to URL %@ because it is not a file URL
Nil delegate passed
No active/enabled connections
Interval must be a positive number or kCMTimeInvalid
Bravo camera selection behavior %@ is unsupported
Video source passthru is unsupported
The only supported keys are %@ - the following keys are illegal: %@
%@ is unsupported given the current configuration - use -availableVideoCodecTypes
Output settings must match supplied media type
Invalid connection passed
*** -[%@ setRecordsVideoOrientationAndMirroringChanges:asMetadataTrackForConnection:] - passed connection must not be nil
*** -[%@ setRecordsVideoOrientationAndMirroringChanges:asMetadataTrackForConnection:] - connection %@ does not connect to the receiver
*** -[%@ setRecordsVideoOrientationAndMirroringChanges:asMetadataTrackForConnection:] - connection %@ is not for video media
*** -[%@ setRecordsVideoOrientationAndMirroringChanges:asMetadataTrackForConnection:] - connection %@ does not support video orientation.  Use -isVideoOrientationSupported
*** -[%@ setRecordsVideoOrientationAndMirroringChanges:asMetadataTrackForConnection:] - connection %@ does not support video mirroring.  Use -isVideoMirroringSupported
com.apple.avfoundation.capture.moviefileoutput.cleanupQueue
-[AVCaptureMovieFileOutput safelyHandleServerConnectionDeathForFigCaptureSession:]_block_invoke
<<<< AVCaptureMovieFileOutput >>>> %s: Cleaning up unfinished movie recordings since mediaserverd died
-[AVCaptureMovieFileOutput handleDidStopRecordingNotificationForWrapper:withPayload:demoof:addMetadata:]
<<<< AVCaptureMovieFileOutput >>>> %s: posting AVCaptureMovieFileOutputRecordingCompletedNotification
<<<< AVCaptureMovieFileOutput >>>> %s: NOT posting AVCaptureMovieFileOutputRecordingCompletedNotification because no thumbnail
<<<< AVCaptureMovieFileOutput >>>> %s: consolidateMovieFragmentsInFile:%@ failed (%@)
<<<< AVCaptureMovieFileOutput >>>> %s: updateMovieMetadataInFile:%@ failed (%@)
-[AVCaptureMovieFileOutput handleDidStopRecordingNotificationForWrapper:withPayload:demoof:addMetadata:]_block_invoke
<<<< AVCaptureMovieFileOutput >>>> %s: calling from main thread [%@ captureOutput:%@ didFinishRecordingToOutputFileAtURL:%@ debugMetadataSidecarFileURL:%@ fromConnections:blah error:%@] (recording = %d, paused = %d)
<<<< AVCaptureMovieFileOutput >>>> %s: calling from main thread [%@ captureOutput:%@ didFinishRecordingToOutputFileAtURL:%@ fromConnections:blah error:%@] (recording = %d, paused = %d)
v16@?0@8
-[AVCaptureMovieFileOutput handleNotification:payload:]
<<<< AVCaptureMovieFileOutput >>>> %s: Disregarding notification %@ since sinkIDs don't match
<<<< AVCaptureMovieFileOutput >>>> %s: Disregarding notification %@ since its settingsID doesn't match any I know about
<<<< AVCaptureMovieFileOutput >>>> %s: Received duplicate _DidStartRecording message from FigCaptureSession! BAD!!!
-[AVCaptureMovieFileOutput handleNotification:payload:]_block_invoke
<<<< AVCaptureMovieFileOutput >>>> %s: calling [%@ captureOutput:%@ didStartRecordingToOutputFileAtURL:%@ fromConnections:%@]
<<<< AVCaptureMovieFileOutput >>>> %s: Received _DidPauseRecording message without first receiving a _DidStartRecording.  That can't be good.
<<<< AVCaptureMovieFileOutput >>>> %s: Received _DidResumeRecording message without first receiving a _DidStartRecording.  That can't be good.
<<<< AVCaptureMovieFileOutput >>>> %s: Received _DidResumeRecording message without first receiving a _DidPauseRecording.  That can't be good.
availableVideoCodecTypes
movieFragmentInterval
AVCaptureAnyMediaType
capture.output.FigCaptureSessionSyncQueue
avcaptureoutput_trace
-[AVCaptureOutput attachToFigCaptureSession:]
<<<< AVCaptureOutput >>>> %s: %@ %@
-[AVCaptureOutput attachToFigCaptureSession:]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Aspen/AVCaptureOutput.m
_outputInternal->figCaptureSession == NULL
-[AVCaptureOutput detachFromFigCaptureSession:]
-[AVCaptureOutput detachFromFigCaptureSession:]_block_invoke
figCaptureSession == _outputInternal->figCaptureSession
-[AVCaptureOutput handleServerConnectionDeathForFigCaptureSession:]
requiredOutputFormatForConnection: failed since this output has no required output format for that connection.
transformedMetadataObjectForMetadataObject:connection: unrecognized connection passed.
-[AVCaptureOutput updateMetadataTransformForSourceFormat:]
<<<< AVCaptureOutput >>>> %s: sensor:{%fx%f} scaled:{%fx%f} vt:%@ front:%d applyRot:%d rotDegs:%f orient:%d applyMirr:%d isMirr:%d
-[AVCaptureOutput _recommendedVideoOutputSettingsForConnection:sourceSettings:videoCodec:]
<<<< AVCaptureOutput >>>> %s: NOT using AVCaptureSession.plist video settings, since max frame rate is changed
AVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification
outputdevicediscoverysession_trace
-[AVOutputDeviceDiscoverySession initWithOutputDeviceDiscoverySessionImpl:]
<<<< AVOutputDeviceDiscoverySession >>>> %s: called (self=%p, impl=%@)
com.apple.avfoundation.avodds.ivars
q24@?0@8@16
-[AVOutputDeviceDiscoverySession availableOutputDevices]
<<<< AVOutputDeviceDiscoverySession >>>> %s: Available output devices: %@
discoveryMode
targetAudioSession
T@"AVAudioSession",&,N
availableOutputDevices
availableOutputDevicesObject
T@"AVOutputDeviceDiscoverySessionAvailableOutputDevices",R,N
devicePresenceDetected
TB,R,N
allDevices
recentlyUsedDevices
otherDevices
AVCaptureSessionRuntimeErrorNotification
AVCaptureSessionErrorKey
AVCaptureSessionDidStartRunningNotification
AVCaptureSessionDidStopRunningNotification
AVCaptureSessionWasInterruptedNotification
AVCaptureSessionInterruptionReasonKey
AVCaptureSessionInterruptionSystemPressureStateKey
AVCaptureSessionInterruptionEndedNotification
AVCapturePrewarmUserInteractionAbsoluteTimeKey
AVCapturePrewarmUserInteractionContinuousTimeKey
AVCapturePrewarmReasonKey
HomeScreen
Spotlight
AppSwitcher
NotificationCenter
ControlCenter
Banner
LockScreen
Siri
Stark
Continuity
SystemGesture
NonInteractiveSystemGesture
FBSystemService
Rotation
Breadcrumb
CommandTab
ExternalDisplay
Widget
HomeButton
Test
StatusBar
LockScreenPlugin
FloatingDock
FloatingDockSuggestions
FloatingApplication
DragAndDrop
StarkSiri
Startup
AVCaptureSessionPresetCommon
avcapturesession_trace
-[AVCaptureSession init]
<<<< AVCaptureSession >>>> %s: (%p)
-[AVCaptureSession dealloc]
<<<< AVCaptureSession >>>> %s: (%p) (pthread %p)SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
%@ -> %@
@"NSString"16@?0@8
@"NSString"16@?0@"NSString"8
audio
video
metadata objects
metadata items
depth data
@16@?0@"AVCaptureOutput"8
@"NSMutableArray"16@?0@"NSArray"8
@"NSMutableString"16@?0@"AVCaptureInput"8
%@\n%p
\n(%@)
@"NSMutableString"16@?0@"AVCaptureOutput"8
yyyy-MM-dd    HH:mm:ss.SSS
CFBundleDisplayName
digraph %@ {
label="%@\n%@";
ranksep=1.5;nodesep=1;
%@ [shape=box,label="%@",color=black];
%@ [shape=circle,label="%@\n%p",color=black];
%@ [shape=box,label="%@\n%p",color=%@];
black
%@ -> %@ [label="%@\nenabled: %s\nactive: %s",color=%s];
green
%@ -> %@ [label="delegate",style=dotted];
%@ -> %@ [label="delegateOverride",style=dotted];
-[AVCaptureSession setSessionPreset:]
<<<< AVCaptureSession >>>> %s: (%p) %@ (current: %@)
%@ is not a supported preset
-[AVCaptureSession beginConfiguration]
-[AVCaptureSession commitConfiguration]
-[AVCaptureSession _commitConfiguration]
<<<< AVCaptureSession >>>> %s: dot file string:
Can't add a nil AVCaptureInput
An AVCaptureInput instance may not be added to more than one session
<%@> is an unsupported AVCaptureInput type
An AVCaptureInput instance may not be added more than once to a session
B32@?0@8Q16^B24
Multiple audio/video AVCaptureInputs are not currently supported
Cannot mix capture devices of different source origins
Can't add %@ because the device does not support %@ - Use -[AVCaptureDevice supportsAVCaptureSessionPreset:]
-[AVCaptureSession _canAddInput:failureReason:]
<<<< AVCaptureSession >>>> %s: (%p)failureReason = %@
-[AVCaptureSession addInput:]
<<<< AVCaptureSession >>>> %s: (%p) %@
automaticallyAdjustsVideoHDREnabled
-[AVCaptureSession removeInput:]
Can't add a nil AVCaptureOutput
An AVCaptureOutput instance may not be added to more than one session
An AVCaptureOutput instance may not be added more than once to a session
Cannot add output %@ to capture session %@ because more than one output of the same type is unsupported
AVCapturePhotoOutput and AVCaptureStillImageOutput may not both be used in a session
-[AVCaptureSession _canAddOutput:failureReason:]
-[AVCaptureSession addOutput:]
-[AVCaptureSession removeOutput:]
Cannot add a nil video preview layer to a session
-[AVCaptureSession _canAddVideoPreviewLayer:failureReason:]
-[AVCaptureSession _addVideoPreviewLayer:exceptionReason:]
-[AVCaptureSession _addVideoPreviewLayerWithNoConnection:exceptionReason:]
-[AVCaptureSession _removeVideoPreviewLayer:]
<%@: %p> already exists in this session
<%@: %p> references an output unknown to this session
<%@: %p> cannot be added to the session because the source and destination media types are incompatible
<%@: %p> references a video preview layer unknown to this session
<%@: %p> references an invalid port
<%@: %p> references an input unknown to this session
-[AVCaptureSession _canAddConnection:failureReason:]
<<<< AVCaptureSession >>>> %s: failureReason = %@
connection
interrupted
VideoDeviceNotAvailableInBackground
AudioDeviceInUseByAnotherClient
VideoDeviceInUseByAnotherClient
VideoDeviceNotAvailableWithMultipleForegroundApps
-[AVCaptureSession _setInterrupted:withReason:]
<<<< AVCaptureSession >>>> %s: Interrupted with unexpected fig interruption reason (%d)
<<<< AVCaptureSession >>>> %s: (%p) posting %@ (reason: %@)
-[AVCaptureSession startRunning]
<<<< AVCaptureSession >>>> %s: (%p) (pthread:%p)
startRunning may not be called between calls to beginConfiguration and commitConfiguration
%@AVCaptureSession
-%.0f.dot
<<<< AVCaptureSession >>>> %s: AVCaptureSession.dot file written to %@ string:
-[AVCaptureSession stopRunning]
stopRunning may not be called between calls to beginConfiguration and commitConfiguration
-[AVCaptureSession _startFigCaptureSession]
<<<< AVCaptureSession >>>> %s: called while session is not running.
-[AVCaptureSession _stopFigCaptureSession]
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) locking to call FigCaptureSessionStop
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) WAITING FOR STOP--------------------------------------->
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) BACK FROM WAITING FOR STOP timedOut = %d, stillWaiting = %d (should be 0)<-------------------------------------------------
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) unlocking
running
-[AVCaptureSession _setRunning:]
<<<< AVCaptureSession >>>> %s: (%p) posting AVCaptureSessionDidStartRunningNotification
<<<< AVCaptureSession >>>> %s: (%p) NOT posting AVCaptureSessionDidStartRunningNotification, we are interrupted.
<<<< AVCaptureSession >>>> %s: (%p) NOT posting AVCaptureSessionDidStartRunningNotification due to _buildAndRunGraph failure
<<<< AVCaptureSession >>>> %s: (%p) posting AVCaptureSessionDidStopRunningNotification
<<<< AVCaptureSession >>>> %s: (%p) _stopFigCaptureSession failure
masterClock
-[AVCaptureSession observeValueForKeyPath:ofObject:change:context:]
disconnected
<<<< AVCaptureSession >>>> %s: (%p)*** Device just became %s.
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Triggering buildAndRunGraph while preset = InputPriority for change %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Ignoring active format change while preset = InputPriority (I didn't do it, but nothing's changed) %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Setting preset to input priority for change %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Setting preset to input priority *WITHOUT triggering buildAndRunGraph* (because nothing really changed) for change %@
sessionPreset
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Ignoring active format change %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Triggering buildAndRunGraph for client-initiated activeDepthDataFormat change %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Ignoring active depth data format change (it didn't really change) %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Ignoring active depth data format change %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Triggering buildAndRunGraph for client-initiated videoHDREnabled change %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Triggering buildAndRunGraph for activeColorSpace change %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Ignoring active color space change (device.activeFormat just changed to a non wide-color format) %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Ignoring active color space change (a session is configuring it automatically) %@
-[AVCaptureSession _createFigCaptureSession]
<<<< AVCaptureSession >>>> %s: %p Creating new FigCaptureSession (local!)
<<<< AVCaptureSession >>>> %s: failed (%d)
-[AVCaptureSession _postRuntimeError:]
<<<< AVCaptureSession >>>> %s: (%p) posting AVCaptureSessionRuntimeErrorNotification with %@
-[AVCaptureSession _makeConfigurationLive:]
<<<< AVCaptureSession >>>> %s: %@
-[AVCaptureSession _buildAndRunGraph]
<<<< AVCaptureSession >>>> %s: (%p)called
<<<< AVCaptureSession >>>> %s: New fcs config: %@
<<<< AVCaptureSession >>>> %s: Old fcs config: %@
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) locking
<<<< AVCaptureSession >>>> %s: Setting fcs config(%lld) %@
<<<< AVCaptureSession >>>> %s: Starting fig capture session
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) WAITING FOR START--------------------------------------->
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) BACK FROM WAITING FOR START timedOut = %d, stillWaiting = %d (should be 0)<-------------------------------------------------
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) not calling waitInMode:, since FigCaptureSession won't be sending any notifications
-[AVCaptureSession _stopAndTearDownGraph]
<<<< AVCaptureSession >>>> %s: (%p)Stopping and uninitializing graph
-[AVCaptureSession _updateDeviceActiveFormatsAndActiveConnections]
<<<< AVCaptureSession >>>> %s: Picked a different activeFormat for wide color: %@
<<<< AVCaptureSession >>>> %s: updating %@ to %@
<<<< AVCaptureSession >>>> %s: resetting the active min/max frame rate to the default values
<<<< AVCaptureSession >>>> %s: Aggregate connection max frame rate (%f) is too high, changing it to %f
<<<< AVCaptureSession >>>> %s: Aggregate connection max frame rate (%f) is too low, changing it to %f
<<<< AVCaptureSession >>>> %s: Aggregate connection min frame rate (%f) is too low, changing it to %f
<<<< AVCaptureSession >>>> %s: Aggregate connection min frame rate (%f) is too high, changing it to %f
<<<< AVCaptureSession >>>> %s: Altering default video frame rate range to %lld-%d to maximize depth frame rate (%d)
-[AVCaptureSession _notifySessionStarted]
-[AVCaptureSession _handleDidStartRunningNotificationWithPayload:]
<<<< AVCaptureSession >>>> %s: Started running while interrupted, so ending interruption: (%d, %d)
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) locking for DidStartRunning
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) signalling for DidStartRunning
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) unlocking for DidStartRunning
-[AVCaptureSession _notifySessionStopped]
-[AVCaptureSession _handleDidStopRunningNotificationWithPayload:]
<<<< AVCaptureSession >>>> %s: Got interrupted: %d
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) locking for DidStopRunning
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) signalling for DidStopRunning
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) unlocking for DidStopRunning
-[AVCaptureSession _handleConfigurationCommittedNotificationWithPayload:]
<<<< AVCaptureSession >>>> %s: Removing orphaned AVCaptureSessionConfiguration with configID %lld
<<<< AVCaptureSession >>>> %s: Not removing AVCaptureSessionConfiguration with configID %lld, since the commit operation failed with err %d, and the app may restart with the same config.
<<<< AVCaptureSession >>>> %s: Couldn't find an AVCaptureSessionConfiguration for committed config with id %lld
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) locking for ConfigurationCommitted (configID = %lld)
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) signalling for ConfigurationCommitted (configID = %lld)
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) unlocking for ConfigurationCommitted (configID = %lld)
-[AVCaptureSession _handleConfigurationDidBecomeLiveNotificationWithPayload:]
<<<< AVCaptureSession >>>> %s: (%p) posting AVCaptureDeviceDidStartRunningNotification for %@
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) locking for ConfigurationDidBecomeLive (configID = %lld)
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) signalling for ConfigurationDidBecomeLive (configID = %lld)
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) unlocking for ConfigurationDidBecomeLive (configID = %lld)
T@"NSString",C,N
TB,R,N,GisRunning
TB,R,N,GisInterrupted
usesApplicationAudioSession
automaticallyConfiguresApplicationAudioSession
automaticallyConfiguresCaptureDeviceForWideColor
_internal
*** Not supported when runing outside of mediaserverd
*** Can't pass a nil AVCaptureSession
AVCaptureSessionSetClientIsAVConference
<<<< AVCaptureSession >>>> %s: %@ is missing a FigCaptureSessionRef
avcaptureFigCaptureSessionNotification
avdepthdata_trace
 (unfiltered)
high
 calibration:{%@}
%@ %zux%zu (%@/%@)%@%@
<%@: %p %@>
+[AVDepthData depthDataFromDictionaryRepresentation:error:]
<<<< AVDepthData >>>> %s: CVPixelBufferCreate failed (%d)
Unsupported Exif orientation
-[AVDepthData depthDataByApplyingExifOrientation:]
<<<< AVDepthData >>>> %s: Failed to create rotated pixel buffer
<<<< AVDepthData >>>> %s: FigDepthRotateBuffer reported failure (%d)
Unsupported depth data type
-[AVDepthData dictionaryRepresentationForAuxiliaryDataType:]
<<<< AVDepthData >>>> %s: CVPixelBufferLockBaseAddress failed (%d)
absolute
relative
-[AVDepthData _copyPixelBufferRepresentationWithPixelFormatType:]
<<<< AVDepthData >>>> %s: Pixel buffer copy failed (%d)
<<<< AVDepthData >>>> %s: FigDepthConvertBuffer failed (%d)
availableDepthDataTypes
depthDataType
TI,R
depthDataMap
T^{__CVBuffer=},R
depthDataQuality
depthDataFiltered
TB,R,GisDepthDataFiltered
depthDataAccuracy
cameraCalibrationData
T@"AVCameraCalibrationData",R
sbufCompletionBlock
T@?,C,V_sbufCompletionBlock
iosurfaceCompletionBlock
T@?,C,V_iosurfaceCompletionBlock
bracketedCaptureCompletionBlock
T@?,C,V_bracketedCaptureCompletionBlock
Tq,V_settingsID
shutterSoundID
TI,V_shutterSoundID
bracketedSettings
T@"AVCaptureBracketedStillImageSettings",&,V_bracketedSettings
settings
T@"FigCaptureStillImageSettings",R,V_settings
completionBlock
T@?,R,V_completionBlock
avcapturestillimageoutput_trace
HDRCaptureMode
%@ (%d) is not a supported pixel format type - use -availableImageDataCVPixelFormatTypes
%@ is not a supported AVVideoCodecKey - use -availableImageDataCodecTypes
AVVideoQualityKey must be an NSNumber
AVVideoQualityKey is only supported for JPEG
AVVideoQualityKey must be in the range of 0.0-1.0
Not supported - use -isHDRSupported
-[AVCaptureStillImageOutput setAutomaticallyEnablesStillImageStabilizationWhenAvailable:]
<<<< AVCaptureStillImageOutput >>>> %s: %d
Not supported - use -stillImageStabilizationSupported
Not supported - use -isRawCaptureSupported
App lacks proper entitlements
Nil completion handler
Inactive/invalid connection passed
Inconsistent state
Not supported - use -isLensStabilizationDuringBracketedCaptureSupported
-[AVCaptureStillImageOutput prepareToCaptureStillImageBracketFromConnection:withSettingsArray:completionHandler:]
<<<< AVCaptureStillImageOutput >>>> %s: called with %@
<<<< AVCaptureStillImageOutput >>>> %s: isPrepared = %d
Bracketed capture settings array exceeds -maxBracketedCaptureStillImageCount
Bracketed capture settings array contains 0 elements
Bracketed capture settings array may only contain AVCaptureBracketedStillImageSettings objects
All elements in the bracketed capture settings array must be of the same class
%@ contains an out of range ISO value. Use AVCaptureDeviceFormat -minISO / -maxISO
%@ contains an out of range exposure duration. Use AVCaptureDeviceFormat -minExposureDuration / -maxExposureDuration
Source device does not support manual exposure bracketed capture. Use AVCaptureDevice -isExposureModeSupported: with AVCaptureExposureModeCustom
%@ contains an out of range exposure target bias. Use AVCaptureDevice -minExposureTargetBias / -maxExposureTargetBias
maxBracketedCaptureStillImageCount
-[AVCaptureStillImageOutput _setStillImageStabilizationAutomaticallyEnabled:]
<<<< AVCaptureStillImageOutput >>>> %s: :%s
lensStabilizationDuringBracketedCaptureSupported
lensStabilizationDuringBracketedCaptureEnabled
-[AVCaptureStillImageOutput handleNotificationForRequest:withPayload:imageIsEV0:]
<<<< AVCaptureStillImageOutput >>>> %s: Still image capture error: (%d, %d)
<<<< AVCaptureStillImageOutput >>>> %s: Image CustomRendered tag is %d
<<<< AVCaptureStillImageOutput >>>> %s: *** no image data sbuf found -- we were expecting one, assuming out of memory ***
<<<< AVCaptureStillImageOutput >>>> %s: calling sbufCompletionBlock with %@, error: %@
<<<< AVCaptureStillImageOutput >>>> %s: *** no jpeg surface returned, must have run out of memory! ***
<<<< AVCaptureStillImageOutput >>>> %s: calling iosurfaceCompletionBlock with %@, %d, %@, %d, %@, error: %@
<<<< AVCaptureStillImageOutput >>>> %s: calling bracketedCaptureCompletionBlock with %@, error: %@
-[AVCaptureStillImageOutput handleNotificationForPrepareRequest:withPayload:]
<<<< AVCaptureStillImageOutput >>>> %s: Still image prepare bracket error: (%d, %d)
-[AVCaptureStillImageOutput handleNotification:payload:]
<<<< AVCaptureStillImageOutput >>>> %s: Disregarding notification %@ since sinkIDs don't match
<<<< AVCaptureStillImageOutput >>>> %s: Still image capture error invalid settingsID %lld
<<<< AVCaptureStillImageOutput >>>> %s: Bracket preparation error invalid settingsID %lld
+[AVCaptureStillImageOutput maxStillImageJPEGDataSize]_block_invoke
<<<< AVCaptureStillImageOutput >>>> %s: #### maxDataSize reported as 0 ####
NULL sample buffer.
Not a jpeg sample buffer.
sample buffer contains no data buffer.
+[AVCaptureStillImageOutput jpegStillImageNSDataRepresentation:]
<<<< AVCaptureStillImageOutput >>>> %s: CMBlockBufferCreateContiguous failed (%d)
<<<< AVCaptureStillImageOutput >>>> %s: CMBlockBufferGetDataPointer failed (%d)
+[AVCaptureStillImageOutput jpegStillImageNSDataRepresentationForSurface:size:metadata:]
<<<< AVCaptureStillImageOutput >>>> %s: called
invalid surface or size.
FaceRegions
outputSettings
availableImageDataCVPixelFormatTypes
availableImageDataCodecTypes
stillImageStabilizationSupported
TB,R,N,GisStillImageStabilizationSupported
automaticallyEnablesStillImageStabilizationWhenAvailable
stillImageStabilizationActive
TB,R,N,GisStillImageStabilizationActive
highResolutionStillImageOutputEnabled
TB,N,GisHighResolutionStillImageOutputEnabled
capturingStillImage
TB,R,GisCapturingStillImage
com.apple.avfoundation.videodataoutput.bufferqueue
avcapturevideodataoutput_trace
-[AVCaptureVideoDataOutput setSampleBufferDelegate:queue:]
<<<< AVCaptureVideoDataOutput >>>> %s: (%p) setting sampleBufferDelegate to %@ (%p)
*** -[AVCaptureVideoDataOutput setVideoSettings:] - videoSettings dictionary contains one or more unsupported (ignored) keys: %@
Unsupported pixel format type - use -availableVideoCVPixelFormatTypes
Unsupported AVVideoCodecKey - use -availableVideoCodecTypes
Width must be an even number
Height must be an even number
When customizing video settings, you must override both width and height
Video settings overrides must maintain the source device activeFormat's aspect ratio 
Invalid video codec type - available video codec types are: %@
-[AVCaptureVideoDataOutput setMinFrameDuration:]
<<<< AVCaptureVideoDataOutput >>>> %s: %lld / %d (%f fps)
-[AVCaptureVideoDataOutput setDelegateOverride:delegateOverrideCallbackQueue:]
<<<< AVCaptureVideoDataOutput >>>> %s: (%p) setting delegateOverride to %@ (%p)
T@"<AVCaptureVideoDataOutputSampleBufferDelegate>",R,N
videoSettings
availableVideoCVPixelFormatTypes
minFrameDuration
alwaysDiscardsLateVideoFrames
avportraiteffectsmatte_trace
 v.%d.%d
%@ %zux%zu%@
+[AVPortraitEffectsMatte portraitEffectsMatteFromDictionaryRepresentation:error:]
<<<< AVPortraitEffectsMatte >>>> %s: CVPixelBufferCreate failed (%d)
-[AVPortraitEffectsMatte portraitEffectsMatteByApplyingExifOrientation:]
<<<< AVPortraitEffectsMatte >>>> %s: Failed to create rotated pixel buffer
<<<< AVPortraitEffectsMatte >>>> %s: VTImageRotationSessionCreate failed (%d)
<<<< AVPortraitEffectsMatte >>>> %s: VTImageRotationSessionTransferImage failed (%d)
-[AVPortraitEffectsMatte dictionaryRepresentationForAuxiliaryDataType:]
<<<< AVPortraitEffectsMatte >>>> %s: CVPixelBufferLockBaseAddress failed (%d)
pixelFormatType
mattingImage
avpem_rotationDegreesAndMirroringFromExifOrientation
<<<< AVPortraitEffectsMatte >>>> %s: exifOrientation (%d) is invalid. Returning 0 degrees/not mirrored
AVCaptureVideoPreviewLayerDidStartRunningNotification
avcapturevideopreviewlayer_trace
-[AVCaptureVideoPreviewLayer centerSublayer:]
<<<< AVCaptureVideoPreviewLayer >>>> %s: NOT centering sublayer because it's already centered
-[AVCaptureVideoPreviewLayer _initWithSession:makeConnection:]
<<<< AVCaptureVideoPreviewLayer >>>> %s: (%p) %@
capture.videopreview.FigCaptureSessionSyncQueue
screen-dimensions
main-screen-width
main-screen-scale
-[AVCaptureVideoPreviewLayer initWithLayer:]
<<<< AVCaptureVideoPreviewLayer >>>> %s: (%p) (pthread %p)
-[AVCaptureVideoPreviewLayer dealloc]
<<<< AVCaptureVideoPreviewLayer >>>> %s: (%p) (pthread %p)PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
-[AVCaptureVideoPreviewLayer setSession:]
-[AVCaptureVideoPreviewLayer layoutSublayers]
<<<< AVCaptureVideoPreviewLayer >>>> %s: called
bounds
bounds.size
bounds.origin
-[AVCaptureVideoPreviewLayer observeValueForKeyPath:ofObject:change:context:]
<<<< AVCaptureVideoPreviewLayer >>>> %s: previewMirrored changed %d -> %d
mirrored
-[AVCaptureVideoPreviewLayer setVideoGravity:]
AVCaptureConnection's -isVideoOrientationSupported
AVCaptureConnection's -videoOrientation
AVCaptureConnection's -setVideoOrientation:
AVCaptureConnection's -isVideoMirroringSupported
AVCaptureConnection's -automaticallyAdjustsVideoMirroring
AVCaptureConnection's -setAutomaticallyAdjustsVideoMirroring:
AVCaptureConnection's -isVideoMirrored
AVCaptureConnection's -setVideoMirrored:
setMirrored is unsupported on this device - Use -isMirroringSupported
setMirrored cannot be set when automaticallyAdjustsMirroring is true
-[AVCaptureVideoPreviewLayer setPaused:]
<<<< AVCaptureVideoPreviewLayer >>>> %s: %d
setChromaNoiseReduction is not supported on this platform
setDepthDataDeliveryEnabled cannot be set to YES unless depthDataDeliverySupported is YES
-[AVCaptureVideoPreviewLayer layerDidBecomeVisible:]
-[AVCaptureVideoPreviewLayer attachToFigCaptureSession:]
<<<< AVCaptureVideoPreviewLayer >>>> %s: %@ %@
-[AVCaptureVideoPreviewLayer attachToFigCaptureSession:]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Aspen/AVCaptureVideoPreviewLayer.m
_internal->figCaptureSession == NULL
-[AVCaptureVideoPreviewLayer detachFromFigCaptureSession:]
-[AVCaptureVideoPreviewLayer detachFromFigCaptureSession:]_block_invoke
figCaptureSession == _internal->figCaptureSession
-[AVCaptureVideoPreviewLayer captureDevicePointOfInterestForPoint:]
<<<< AVCaptureVideoPreviewLayer >>>> %s: %@->%@
-[AVCaptureVideoPreviewLayer pointForCaptureDevicePointOfInterest:]
-[AVCaptureVideoPreviewLayer _setSensorAndEstimatedPreviewSizes]
<<<< AVCaptureVideoPreviewLayer >>>> %s: Invalid source dimensions
<<<< AVCaptureVideoPreviewLayer >>>> %s: Output size: %d, %d. Estimated preview size: %d, %d;
-[AVCaptureVideoPreviewLayer _updateCaptureDeviceTransform]
<<<< AVCaptureVideoPreviewLayer >>>> %s: update sensor:%@ preview:%@ vt:%@ front:%d orientation:%d bounds:%@ gravity:%@ mirrored:%d
depthDataDeliverySupported
depthDataDeliveryEnabled
The following filters are unsupported: %@
videoPreviewFilters must be a non-nil value (empty array is permissible)
-[AVCaptureVideoPreviewLayer _handleNotification:payload:]
<<<< AVCaptureVideoPreviewLayer >>>> %s: Disregarding notification %@ since sinkIDs don't match
<<<< AVCaptureVideoPreviewLayer >>>> %s: %@ received notification %@
<<<< AVCaptureVideoPreviewLayer >>>> %s: %@ posting AVCaptureVideoPreviewLayerDidStartRunningNotification
<<<< AVCaptureVideoPreviewLayer >>>> %s: new preview format: %@
imageQueueSlot
session
T@"AVCaptureSession",&,N
T@"AVCaptureConnection",R,N
videoGravity
T@"NSString",C
orientationSupported
TB,R,N,GisOrientationSupported
orientation
mirroringSupported
TB,R,N,GisMirroringSupported
automaticallyAdjustsMirroring
TB,N,GisMirrored
vpl_figCaptureSessionNotification
<<<< AVCaptureVideoPreviewLayer >>>> %s: %@
vpl_transformForPlacement
<<<< AVCaptureVideoPreviewLayer >>>> %s: Return CATransform3DIdentity because previewSize is CGSizeZero
<<<< AVCaptureVideoPreviewLayer >>>> %s: previewSize = %@, containerSize = %@, scaleX = %f, scaleY = %f
<<<< AVCaptureVideoPreviewLayer >>>> %s: originalRotationDegrees:%i previewRotationDegrees:%i finalRotationDegrees:%i isMirrored:%i
<<<< AVCaptureVideoPreviewLayer >>>> %s: returnTransform [ %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f ]
(%g,%g,%gx%g)
(%g,%g)
(%gx%g)
AVLayerSubtitleGravityPreferPlacementNonObscuring
avplayerlayer_trace
AVPlayerLayerQueue
com.apple.avfoundation.playerlayer.configuration
AVPlayerLayer <%p>
AVPlayerLayer <%p> (videoLayer)
AVPlayerLayer <%p> (closedCaptionLayer)
FigSubtitleCALayer
-[AVPlayerLayer init]
<<<< AVPlayerLayer >>>> %s: Hiding video layer since the presentation size is 0x0
contentsAreFlipped
AVPlayerLayerContentsAreFlippedObservationContext
<AVPlayerLayer %p%@>
, player %p
-[AVPlayerLayer layoutSublayers]
<<<< AVPlayerLayer >>>> %s: called (self=%p)
<<<< AVPlayerLayer >>>> %s: %@ frame is { %f, %f }
<<<< AVPlayerLayer >>>> %s: Unhiding video layer since the presentation size is { %f, %f }
<<<< AVPlayerLayer >>>> %s: Setting closed caption layer bounds to %@
<<<< AVPlayerLayer >>>> %s: Using box filter downscale
-[AVPlayerLayer setBounds:]
<<<< AVPlayerLayer >>>> %s: Called (self=%p, bounds=%@)
@16@?0@8
sublayerTransform.scale.x
sublayerTransform.scale.y
%@_x
%@_y
sublayerTransform
AVPlayerLayer_MaskLayer_Bounds_%@
AVPlayerLayer_MaskLayer_Position_%@
AVPlayerLayer_ClosedCaptionLayer_Position_%@
AVPlayerLayer_ClosedCaptionLayer_SublayerTransform_%@
AVPlayerLayer_VideoLayer_Position_%@
AVPlayerLayer_VideoLayer_SublayerTransform_%@
v16@?0@"CAPropertyAnimation"8
AVPlayerLayer_VideoLayer_SublayerTransform_%@_x
AVPlayerLayer_VideoLayer_SublayerTransform_%@_y
AVPlayerLayer_ClosedCaptionLayer_SublayerTransform_%@_x
AVPlayerLayer_ClosedCaptionLayer_SublayerTransform_%@_y
-[AVPlayerLayer _notifyPlayerOfDisplaySize]
<<<< AVPlayerLayer >>>> %s: %p notifying player %p about new display size %@
playerCurrentItemPresentationSize
player
cachedPresentationSizeOfCurrentItem
-[AVPlayerLayer _applyCurrentItemPresentationSizeChangeAndForceUpdate:]
<<<< AVPlayerLayer >>>> %s: Called (self=%p)
-[AVPlayerLayer _applyCurrentItemPresentationSizeChangeAndForceUpdate:]_block_invoke
<<<< AVPlayerLayer >>>> %s: %p size needs update from { %f, %f } to { %f, %f } (force=%s)
<<<< AVPlayerLayer >>>> %s: %p size needs no update using cached value { %f, %f }
-[AVPlayerLayer _syncToPlayer:]
<<<< AVPlayerLayer >>>> %s: called (self=%p, player=%p)
-[AVPlayerLayer _startObservingPlayer:]
<<<< AVPlayerLayer >>>> %s: %@ commence player <%p> observation over currentItem.presentationSize
presentationSize
AVPlayerLayerPlayerCurrentItemPresentationSizeObservationContext
tracks
nonForcedSubtitleDisplayEnabled
<<<< AVPlayerLayer >>>> %s: %p Observing isDisplayingClosedCaptions on player %p
isDisplayingClosedCaptions
-[AVPlayerLayer _stopObservingPlayer:]
<<<< AVPlayerLayer >>>> %s: %@ resign player <%p> observation over currentItem.presentationSize
<<<< AVPlayerLayer >>>> %s: Did cancel all observation of old player
-[AVPlayerLayer observeValueForKeyPath:ofObject:change:context:]
<<<< AVPlayerLayer >>>> %s: called (keyPath=%@, object=%@, change=%@, context=%p
<<<< AVPlayerLayer >>>> %s: %@ AVPlayerLayer's net flip status does not match CoreAnimation default; adding a flip at videoLayer
<<<< AVPlayerLayer >>>> %s: %@ AVPlayerLayer's net flip status does match CoreAnimation default
-[AVPlayerLayer observeValueForKeyPath:ofObject:change:context:]_block_invoke
<<<< AVPlayerLayer >>>> %s: Not applying new value of AVPlayer.currentItem.nonForcedSubtitleDisplayEnabled for player %p not currently being observed (expected %p)
<<<< AVPlayerLayer >>>> %s: Not applying new value of AVPlayer.isDisplayingClosedCaptions for player %p not currently being observed (expected %p)
-[AVPlayerLayer observeValueForKeyPath:ofObject:change:context:]_block_invoke_2
Showing
Hiding
<<<< AVPlayerLayer >>>> %s: %@ closed caption layer
<<<< AVPlayerLayer >>>> %s: called (self=%p, item=%p, readyForDisplay=%d)
readyForDisplay
-[AVPlayerLayer setPlayer:]
<<<< AVPlayerLayer >>>> %s: %@ setting player to <%p>
<<<< AVPlayerLayer >>>> %s: Setting readyForDisplay to NO due to detaching from player %@ (self=%p)
<<<< AVPlayerLayer >>>> %s: %p Observing currentItem.hasEnqueuedVideoFrame on player %p
hasEnqueuedVideoFrame
<<<< AVPlayerLayer >>>> %s: %@ setting self on player <%p>
-[AVPlayerLayer layerDidBecomeVisible:]
<<<< AVPlayerLayer >>>> %s: called
<<<< AVPlayerLayer >>>> %s: %@ visibility became YES
<<<< AVPlayerLayer >>>> %s: %@ visibility became NO
<<<< AVPlayerLayer >>>> %s: finished
-[AVPlayerLayer pixelBufferAttributes]
<<<< AVPlayerLayer >>>> %s: requesting the pixelBufferAttributes property on a presentation layer is invalid
-[AVPlayerLayer setLanczosFilterDownscaleFactor:]
<<<< AVPlayerLayer >>>> %s: scalingFactor(%d) is not between 2 and 8
T@"AVPlayer",&,N
TB,R,N,GisReadyForDisplay
videoRect
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
pixelBufferAttributes
AVPlayerLayerTransformForPlacement
<<<< AVPlayerLayer >>>> %s: Return CATransform3DIdentity because presentationSize is CGSizeZero
{?=qiIq}
CMTime: %@
[coder allowsKeyedCoding]
CMTime
{?={?=qiIq}{?=qiIq}}
CMTimeRange: %@
CMTimeRange
{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}
CMTimeMapping: {%@, %@}
CMTimeMapping
avtimebaseobserver_trace
timebase
A time observer token object was released without first being removed from the object it was created from using -removeTimeObserver:
-[AVTimebaseObserver _finishInitialization]
<<<< AVTimebaseObserver >>>> %s: engage timebase <%p> notifications for <%p>
weakReference
T@"AVWeakReference",R,N,G_weakReference,V_weakReference
T^{OpaqueCMTimebase=},R
invalidated
((Boolean)(((interval).flags & (kCMTimeFlags_Valid | kCMTimeFlags_ImpliedValueFlagsMask)) == kCMTimeFlags_Valid))
((Boolean)(CMTimeCompare(interval, kCMTimeZero) > 0))
block != ((void *)0)
-[AVPeriodicTimebaseObserver _fireBlockForTime:]
<<<< AVTimebaseObserver >>>> %s: firing at time == %@
-[AVPeriodicTimebaseObserver _effectiveRateChanged]
<<<< AVTimebaseObserver >>>> %s: timebase rate change from [%f] to [%f]
<<<< AVTimebaseObserver >>>> %s: Playback stopped. Observe immediate.
<<<< AVTimebaseObserver >>>> %s: Playback resumed. Observe immediate.
-[AVPeriodicTimebaseObserver _resetNextFireTime]
<<<< AVTimebaseObserver >>>> %s: rescheduling after non-periodic firing near time == %@
<<<< AVTimebaseObserver >>>> %s: rescheduling after periodic firing at time == %@
<<<< AVTimebaseObserver >>>> %s: scheduling for == %@
-[AVPeriodicTimebaseObserver _handleTimeDiscontinuity]
<<<< AVTimebaseObserver >>>> %s: Periodic Observer <%p>: Detected stop time jump to the last time where rate fell to zero and have winnowed this event
<<<< AVTimebaseObserver >>>> %s: Periodic Observer <%p> Jumped to time [%f]
[times count] > 0
-[AVOccasionalTimebaseObserver _effectiveRateChanged]
<<<< AVTimebaseObserver >>>> %s: Playback direction did change. Resetting timer
-[AVOccasionalTimebaseObserver _resetNextFireTime]
<<<< AVTimebaseObserver >>>> %s: Occasional timebase observer <%p> with source <%p> at current time [%f] nextfire [%f]
block
-[AVOnceTimebaseObserver _resetNextFireTime]_block_invoke
<<<< AVTimebaseObserver >>>> %s: Absolute timebase observer <%p> with source <%p> at current time [%f] nextfire [%f]
didFire
AVTimebaseObserver_figTimebaseGetTime
<<<< AVTimebaseObserver >>>> %s: Timebase returned time(%@), clamped from time(%@)
<<<< AVTimebaseObserver >>>> %s: Timebase returned time(%@)
<<<< AVTimebaseObserver >>>> %s: Timebase returned non-numeric time (%lld/%d/%#x/%lld)) so setting to kCMTimeZero
<<<< AVTimebaseObserver >>>> %s: Timebase returned time with non-zero epoch(%lld) so setting to kCMTimeZero
avplayeritemmetadatacollector_trace
com.apple.avplayeritemmetadatacollector.ivars
newDelegateQueue == NULL
newDelegateQueue != NULL
T@"<AVPlayerItemMetadataCollectorPushDelegate>",R,W,N
delegateQueue
playerItem != nil
photoCallbackFlavor
TI,R,V_photoCallbackFlavor
unresolvedSettings
T@"AVCapturePhotoSettings",R,V_unresolvedSettings
resolvedSettings
T@"AVCaptureResolvedPhotoSettings",&,N
expectedPhotoManifest
T@"NSArray",R,N,V_expectedPhotoManifest
expectedPhotoCount
TQ,R,N
firedCallbackFlags
TI,N,V_firedCallbackFlags
firedPhotoCallbacksCount
TQ,N,V_firedPhotoCallbacksCount
delegateSupportsDebugMetadataSidecarFile
TB,R,V_delegateSupportsDebugMetadataSidecarFile
lensStabilizationSupported
TB,R,V_lensStabilizationSupported
previewSurface
T^v,&,N,V_previewSurface
previewSampleBuffer
T^{opaqueCMSampleBuffer=},&,N,V_previewSampleBuffer
thumbnailSurface
T^v,&,N,V_thumbnailSurface
comn
title
creator
subject
publisher
contributor
creationDate
lastModifiedDate
type
format
identifier
source
language
relation
location
copyrights
albumName
author
artist
artwork
make
model
software
com.apple.quicktime.udta
udta
@alb
@arg
@ART
@aut
@chp
@cmt
@com
@cpy
@day
@des
@dir
@dis
@enc
@nam
@gen
@hst
@inf
@key
@mak
@mod
@ope
@fmt
@src
@prf
@prd
@pub
@PRD
@swr
@req
@trk
@wrn
@wrt
@url
@xyz
tnam
@phg
name
tagc
org.mp4ra
uiso
cprt
date
auth
perf
gnre
yrrc
loci
titl
dscp
coll
urat
thmb
albm
kywd
clsf
rtng
com.apple.quicktime.mdta
mdta
com.apple.quicktime.author
com.apple.quicktime.comment
com.apple.quicktime.copyright
com.apple.quicktime.creationdate
com.apple.quicktime.director
com.apple.quicktime.displayname
com.apple.quicktime.information
com.apple.quicktime.keywords
com.apple.quicktime.producer
com.apple.quicktime.publisher
com.apple.quicktime.album
com.apple.quicktime.artist
com.apple.quicktime.artwork
com.apple.quicktime.description
com.apple.quicktime.software
com.apple.quicktime.year
com.apple.quicktime.genre
info.ixml.xml
com.apple.quicktime.location.ISO6709
com.apple.quicktime.make
com.apple.quicktime.model
com.apple.quicktime.arranger
com.apple.quicktime.encodedby
com.apple.quicktime.originalartist
com.apple.quicktime.performer
com.apple.quicktime.composer
com.apple.quicktime.credits
com.apple.quicktime.phonogramrights
com.apple.quicktime.camera.identifier
com.apple.quicktime.camera.framereadouttimeinmicroseconds
com.apple.quicktime.live-photo.video-stabilization-crop-percentage-numerator
com.apple.quicktime.live-photo.video-stabilization-crop-percentage-denominator
com.apple.quicktime.is-montage
com.apple.quicktime.title
com.apple.quicktime.collection.user
com.apple.quicktime.rating.user
com.apple.quicktime.location.name
com.apple.quicktime.location.body
com.apple.quicktime.location.note
com.apple.quicktime.location.role
com.apple.quicktime.location.date
com.apple.quicktime.direction.facing
com.apple.quicktime.direction.motion
com.apple.quicktime.content.identifier
com.apple.itunes
itsk
itlk
covr
@st3
@too
aART
akID
apID
atID
cnID
cpil
disk
geID
grup
plID
tmpo
trkn
@ard
@lyr
@cak
@con
@equ
@lnt
@sne
@sol
@thx
@xpd
org.id3
AENC
APIC
ASPI
COMM
COMR
ENCR
EQUA
EQU2
ETCO
GEOB
GRID
IPLS
LINK
MCDI
MLLT
OWNE
PRIV
PCNT
POPM
POSS
RBUF
RVAD
RVA2
RVRB
SEEK
SIGN
SYLT
SYTC
TALB
TBPM
TCOM
TCON
TCOP
TDAT
TDEN
TDLY
TDOR
TDRC
TDRL
TDTG
TENC
TEXT
TFLT
TIME
TIPL
TIT1
TIT2
TIT3
TKEY
TLAN
TLEN
TMCL
TMED
TMOO
TOAL
TOFN
TOLY
TOPE
TORY
TOWN
TPE1
TPE2
TPE3
TPE4
TPOS
TPRO
TPUB
TRCK
TRDA
TRSN
TRSO
TSIZ
TSOA
TSOP
TSOT
TSRC
TSSE
TSST
TYER
TXXX
UFID
USER
USLT
WCOM
WCOP
WOAF
WOAR
WOAS
WORS
WPAY
WPUB
WXXX
StreamTitle
StreamUrl
com.apple.quicktime.HLS
lsdr
m3u8
NAME
caaf
public.unknown
HREF
dataType
dataTypeNamespace
pictureType
baseURL
info
important
default
avassetstoragemanager_trace
storageManagementPolicy != nil
downloadStorageURL != nil
bundleIdentifier != nil
Not a fileURL %@
No file at %@
-[AVAssetDownloadStorageManager setStorageManagementPolicy:forURL:]
<<<< AVAssetDownloadStorageManager >>>> %s: Set storageManagementPolicy %@ for asset at URL %@
-[AVAssetDownloadStorageManager storageManagementPolicyForURL:]
<<<< AVAssetDownloadStorageManager >>>> %s: StorageManagementPolicy for asset at URL %@ is  %@ 
<%@: %p, ExpirationDate: %@ Priority: %@>
ExpirationDate
Priority
priority
T@"NSString",R,C,N
expirationDate
T@"NSDate",R,C,N
T@"NSDate",C,N
Unrecognized raw pixel format type
%@%@
(%@)
(null)
 raw:%@%@
 flash:%d
 dual-photo:ON
 auto-dual-fusion:ON
-%@, content-id:%@
 (EV0:1%@)
 HDR:%d
 auto-sis:ON
 square-crop:ON
 high-res:ON
 depth:ON%s%s
(not embedded)
(unfiltered)
 turbo:ON
 burst:ON
 prev:ON
 thumb:ON
 custom-shutter:%d
 mov:{%@, %@, content-id:%@}
 photo-filters:[%@]
 adjusted-filters:[%@]
uid:%lld %@:{%@%@%@%@%@%@%@%@%@%@ }%@%@%@%@%@%@%@%@%@%@%@
Unsupported when capturing RAW
metadata may not be set to nil
Invalid top-level keys passed in metadata: %@
livePhotoVideoCodecType may not be set to nil
photoFilters must be a non-nil value (empty array is permissible)
photoFilters must only contain CIFilter instances
adjustedPhotoFilters must be a non-nil value (empty array is permissible)
adjustedPhotoFilters must only contain CIFilter instances
Array must only contain AVMetadataItems
com.apple.camera
com.apple.camera.CameraMessagesApp
com.apple.mobileslideshow
AVMetadataKeySpaceQuickTimeMetadata/AVMetadataQuickTimeMetadataKeyContentIdentifier must not be specified
T@"NSDictionary",R,C
processedFileType
T@"NSString",R
rawPhotoPixelFormatType
rawFileType
flashMode
autoRedEyeReductionEnabled
TB,N,GisAutoRedEyeReductionEnabled,V_autoRedEyeReductionEnabled
autoStillImageStabilizationEnabled
TB,N,GisAutoStillImageStabilizationEnabled
autoDualCameraFusionEnabled
TB,N,GisAutoDualCameraFusionEnabled
dualCameraDualPhotoDeliveryEnabled
TB,N,GisDualCameraDualPhotoDeliveryEnabled
highResolutionPhotoEnabled
TB,N,GisHighResolutionPhotoEnabled
TB,N,GisDepthDataDeliveryEnabled
embedsDepthDataInPhoto
TB,N,GisDepthDataFiltered
cameraCalibrationDataDeliveryEnabled
TB,N,GisCameraCalibrationDataDeliveryEnabled
portraitEffectsMatteDeliveryEnabled
TB,N,GisPortraitEffectsMatteDeliveryEnabled,V_portraitEffectsMatteDeliveryEnabled
embedsPortraitEffectsMatteInPhoto
TB,N,V_embedsPortraitEffectsMatteInPhoto
livePhotoMovieFileURL
T@"NSURL",C,N
livePhotoVideoCodecType
livePhotoMovieMetadata
availablePreviewPhotoPixelFormatTypes
previewPhotoFormat
availableEmbeddedThumbnailPhotoCodecTypes
embeddedThumbnailPhotoFormat
availableRawEmbeddedThumbnailPhotoCodecTypes
T@"NSArray",R,N,V_availableRawEmbeddedThumbnailPhotoCodecTypes
rawEmbeddedThumbnailPhotoFormat
T@"NSDictionary",C,N,V_rawEmbeddedThumbnailPhotoFormat
bracketedSettings may not be nil
 lensStab:ON
%@ bracket:%d%@
Flash capture is unsupported when doing a bracketed capture
HDR capture is unsupported when doing a bracketed capture
Unsupported when doing a bracketed capture
lensStabilizationEnabled
TB,N,GisLensStabilizationEnabled
 flash:ON
 HDR:ON
 filters:ON
 (EV0:ON)
 SIS:ON
 dual-fusion:ON
 square:ON
 expected photos:%d
 photo:{%dx%d%@%@%@%@%@%@%@%@%@%@}
 raw:{%dx%d}
 prev:{%dx%d}
 thumb:{%dx%d}
 mov:{%dx%d}
uid:%lld %@%@%@%@%@%@%@
photoDimensions
T{?=ii},R
rawPhotoDimensions
previewDimensions
embeddedThumbnailDimensions
rawEmbeddedThumbnailDimensions
T{?=ii},R,V_rawEmbeddedThumbnailDimensions
portraitEffectsMatteDimensions
T{?=ii},R,V_portraitEffectsMatteDimensions
livePhotoMovieDimensions
flashEnabled
TB,R,GisFlashEnabled
redEyeReductionEnabled
TB,R,GisRedEyeReductionEnabled,V_redEyeReductionEnabled
stillImageStabilizationEnabled
TB,R,GisStillImageStabilizationEnabled
dualCameraFusionEnabled
TB,R,GisDualCameraFusionEnabled
JFIF
TIFF
HEIF
HEIC
AVCI
Unknown
MIMEtype
languageCode
Metadata value is an instance of %@, but there is no format description
Metadata value is an instance of %@, but format description does not properly describe face data
-[AVMetadataItem(AVMetadataItem_Local) _valueFromCFType:]
<<<< AVMetadataItem >>>> %s: Value %p does not conform to NSObject and/or NSCopying
-[AVMetadataItem(AVMetadataItem_Local) _extractPropertiesFromDictionary:]
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Keyspace must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Key must conform to NSObject and NSCopying
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Locale must be an instance of NSLocale
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_ExtendedLanguageTag must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_LanguageCode must be an instance of NSString or of NSNumber
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Value must be CMBoxedMetadata or conform to NSObject and NSCopying
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_DataTypeNamespace must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_ConformingDataTypes must be an instance of NSArray
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_DataLength must be an instance of NSNumber
<<<< AVMetadataItem >>>> %s: Identifier value %@ must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Timestamp must be an instance of CFDictionary
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Duration must be an instance of CFDictionary
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Date must be an instance of NSDate
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_DiscoveryTimestamp must be an instance of NSDate
stringValue
numberValue
T@"NSNumber",R,N
dateValue
T@"NSDate",R,N
dataValue
T@"NSData",R,N
avmetadataitem_trace
+[AVMetadataItem metadataItemsFromArray:filteredAndSortedAccordingToPreferredLanguages:]
<<<< AVMetadataItem >>>> %s: *** Could not canonicalize language: %@. ***
v24@?0Q8^B16
v16@?0@"AVMetadataItemValueRequest"8
 length=%lu
<%@: %p, identifier=%@, keySpace=%@, key class = %@, key=%@, commonKey=%@, extendedLanguageTag=%@, dataType=%@, time=%@, duration=%@, startDate=%@, extras=%@, value class=%@, value%@>
Metadata item %p has no data type
Metadata item %p has no identifier.  If the item was given a key and key space, use +[%@ %@] to check whether an identifier can be made from that key and key space
+[NSJSONSerialization isValidJSONObject:] returned NO for the AVMetadataItem's value
extendedLanguageTag
locale
T@"NSLocale",R,C,N
time
value
T@"<NSObject><NSCopying>",R,C,N
extraAttributes
T@"NSDictionary",R,C,N
Bad identifier. Identifier should be of the form "<keySpace>/<key>". Try using +%@ to generate an identifier from key and keySpace.
keySpace
T@"NSLocale",C,N
T@"<NSObject><NSCopying>",C,N
com.apple.avfoundation.avmetadataitem
-[AVLazyValueLoadingMetadataItem loadValuesAsynchronouslyForKeys:completionHandler:]_block_invoke_2
<<<< AVMetadataItem >>>> %s: <%p> initiating asynchronous loading of lazily-loaded metadata value
-[AVLazyValueLoadingMetadataItem loadValuesAsynchronouslyForKeys:completionHandler:]_block_invoke
<<<< AVMetadataItem >>>> %s: <%p> completed asynchronous loading of lazily-loaded metadata value
metadataItem
T@"AVMetadataItem",R,W
com.apple.avfoundation.avchaptermetadataitem
<%@: %p, chapterType=%@, locale identifier=%@, value=%@, time=%@, duration=%@, extras=%@>
extraAtributes
+[AVMetadataItemFilterForSharing addIdentifier:toWhitelistDictionary:]
<<<< AVMetadataItem >>>> %s: keyspace not found %@
<<<< AVMetadataItem >>>> %s: key not found %@
com.apple.iTunes.iTunSMPB
com.apple.iTunes.iTunNORM
ludt
whitelist
T@"NSDictionary",R
%s signalled err=%d (%s) (%s) at %s:%d
kFigMetadataReaderError_AllocationFailed
Failed to allocate buffer for FigBoxedMetadata -> CFData conversion
AVMetadataItemMakeDataFromBoxedMetadata
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVMetadataItem.m
Value
http
https
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
face
trackedFaces
offlineVideoStabilizationMotion
org.gs1.UPC-E
org.iso.Code39
org.iso.Code39Mod43
org.gs1.EAN-13
org.gs1.EAN-8
com.intermec.Code93
org.iso.Code128
org.iso.QRCode
org.iso.PDF417
org.iso.Aztec
org.ansi.Interleaved2of5
org.gs1.ITF14
org.iso.DataMatrix
T{?=qiIq},V_time
T{?=qiIq},V_duration
T{CGRect={CGPoint=dd}{CGSize=dd}},V_bounds
T@"NSString",&,V_type
T@"AVCaptureInput",&,V_input
originalMetadataObject
T@"AVMetadataObject",&,V_originalMetadataObject
T{?=qiIq},R
T{CGRect={CGPoint=dd}{CGSize=dd}},R
faceID
Tq,N,V_faceID
hasRollAngle
TB,N,V_hasRollAngle
rollAngle
Td,N,V_rollAngle
hasYawAngle
TB,N,V_hasYawAngle
yawAngle
Td,N,V_yawAngle
hasLeftEyeClosedConfidence
TB,N,V_hasLeftEyeClosedConfidence
leftEyeClosedConfidence
Ti,N,V_leftEyeClosedConfidence
hasRightEyeClosedConfidence
TB,N,V_hasRightEyeClosedConfidence
rightEyeClosedConfidence
Ti,N,V_rightEyeClosedConfidence
hasSmileConfidence
TB,N,V_hasSmileConfidence
smileConfidence
Ti,N,V_smileConfidence
hasLeftEyeBounds
TB,N,V_hasLeftEyeBounds
leftEyeBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_leftEyeBounds
hasRightEyeBounds
TB,N,V_hasRightEyeBounds
rightEyeBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_rightEyeBounds
<%@: %p, faceID=%d, bounds={%.1f,%.1f %.1fx%.1f}, rollAngle=%.1f, yawAngle=%.1f
, time=%lld
Not available - use -hasRollAngle
Not available - use -hasYawAngle
Not available - use -hasLeftEyeClosedConfidence
Not available - use -hasRightEyeClosedConfidence
Not available - use -hasSmileConfidence
Not available - use -hasLeftEyeBounds
Not available - use -hasRightEyeBounds
TB,R
Td,R
payload
T@"NSDictionary",&,N,V_payload
<%@: %p
tracked_faces
face_id
, faceID=%d
<%@: %p %@, time=%lld>
corners
T@"NSArray",&,Vcorners
T@"NSString",&,VstringValue
basicDescriptor
T@"NSDictionary",&,VbasicDescriptor
decoded
TB,Vdecoded
descriptor
T@"CIBarcodeDescriptor",&,Vdescriptor
<%@: %p, type="%@", bounds={ %.1f,%.1f %.1fx%.1f }>
corners { 
%.1f,%.1f 
}, time %lld, stringValue "%@"
T@"CIBarcodeDescriptor",R
propertyListForProxy
isProxy
moop
mpvr
AVURLAssetPreferPreciseDurationAndTimingKey
AVURLAssetReferenceRestrictionsKey
AVURLAssetTypeKey
AVURLAssetClientBundleIdentifierKey
AVURLAssetClientAuditTokenKey
AVURLAssetAlternativeConfigurationOptionsKey
ServiceIdentifier
HierarchyToken
AVURLAssetInspectorLoaderKey
AVURLAssetProtectedContentSupportStorageURLKey
AVURLAssetCacheKey
AVURLAssetShouldMatchDataInCacheByURLPathComponentOnlyKey
AVURLAssetShouldMatchDataInCacheByURLWithoutQueryComponentKey
AVURLAssetOutOfBandMIMETypeKey
AVURLAssetHTTPHeaderFieldsKey
AVURLAssetHTTPCookiesKey
AVURLAssetAllowsCellularAccessKey
AVURLAssetVideoNotEligibleForAppRecordingKey
AVURLAssetRequiresCustomURLLoadingKey
AVURLAssetUseClientURLLoadingExclusively
AVURLAssetCacheUseNonPurgeableMemoryKey
AVURLAssetCacheNonPurgeableMemoryLimitKey
AVURLAssetUsesNoPersistentCacheKey
AVURLAssetPreloadDurationWhenNextItemKey
AVURLAssetDownloadDestinationURLKey
AVURLAssetDownloadIsLowPriorityKey
AVURLAssetPurchaseBundleKey
AVURLAssetAirPlayAuthorizationInfoKey
AVURLAssetMaxSizeAllowedForCellularAccessKey
AVURLAssetNetworkProbeRequestDisabledKey
AVURLAssetReadAheadOnByteStreamCreationEnabledKey
AVURLAssetSSLPropertiesKey
AVURLAssetNetworkLatencyMitigationKeyPodcastsOnly
AVURLAssetDownloadCompleteSuccessNotification
AVURLAssetDownloadCompleteFailedNotification
AVURLAssetDownloadCompleteNotificationErrorKey
AVURLAssetDownloadTokenKey
AVURLAssetBoundNetworkInterfaceName
AVURLAssetUseAppleWirelessDirectLinkKey
AVURLAssetInheritURIQueryComponentFromReferencingURIKey
AVURLAssetAllowedHTTPProtocolTypesKey
AVURLAssetApplicationTransportSecurityKey
AVURLAssetOptimizeAccessForLinearMoviePlaybackKey
AVURLAssetiTunesStoreContentInfoKey
AVURLAssetiTunesStoreContentIDKey
AVURLAssetiTunesStoreContentTypeKey
AVURLAssetiTunesStoreContentUserAgentKey
AVURLAssetiTunesStoreContentDownloadParametersKey
AVURLAssetiTunesStoreContentDSIDKey
AVURLAssetiTunesStoreContentPurchasedMediaKindKey
AVURLAssetiTunesStoreContentRentalIDKey
AVURLAssetiTunesStoreContentAlternateContentInfoKey
AVURLAssetiTunesStoreContentAlternateContentInfoAssetURLStringKey
AVURLAssetiTunesStoreContentHLSAssetURLStringKey
AVAssetPreferPreciseDurationAndTimingKey
AVAssetReferenceRestrictionsKey
AVAssetMediaServicesWereResetNotification
AVAssetMediaServicesWereResetErrorKey
AVAssetPrepareForIncrementalFragmentsKey
chap
tmcd
ssrc
fall
sbtl
forc
cdsc
folw
AVURLAssetOutOfBandAlternateTracksKey
MediaSelectionOptionsName
MediaSelectionOptionsExtendedLanguageTag
MediaSelectionOptionsIsDefault
MediaSelectionOptionsTaggedMediaCharacteristics
MediaSelectionOptionsClientIdentifier
MediaSelectionOptionsURL
AVMetadataFormatTypedID3Metadata
AVPropertyListForProxyCreationOption_ReduceMetadataForPhotoLibrary
AVAssetDurationDidChangeNotification
AVAssetChapterMetadataGroupsDidChangeNotification
AVAssetMediaSelectionGroupsDidChangeNotification
AVAssetContainsFragmentsDidChangeNotification
AVAssetWasDefragmentedNotification
AVURLAssetEnableQUICKey
AVURLAssetForceQUICKey
AVURLAssetWhitelistQUICKey
AVURLAssetLoggingIdentifier
contentType != nil
[data length] > 0
avasset_trace
streaming
naturalSize
availableMediaCharacteristicsWithMediaSelectionOptions
-[AVAsset mediaSelectionGroupForPropertyList:mediaSelectionOption:]
<<<< AVAsset >>>> %s: <%p> called for property list %@, mediaSelectionOptionOut = <%p>
<<<< AVAsset >>>> %s: <%p> resolved to group %@ and option %@
availableMetadataFormats
preferredRate
preferredVolume
preferredTransform
T{CGAffineTransform=dddddd},R,N
T{CGSize=dd},R,N
preferredDisplayCriteria
T@"AVDisplayCriteria",R,N
AVChapterGroupTypeKey
AVChapterGroupLanguageCodeKey
AVChapterGroupExtendedLanguageTagKey
AVChapterGroupPerChapterInfoKey
AVChapterGroupChaptersKey
-[AVAsset(AVAssetChapterInspection) _chapterMetadataGroupsBestMatchingPreferredLanguages:containingItemsWithCommonKeys:]
<<<< AVAsset >>>> %s: *** Could not canonicalize language: %@. ***
availableChapterLocales
moovAtomSize
com.apple.MediaToolbox
MediaValidator.plist
+[AVURLAsset _avfValidationPlist]_block_invoke
<<<< AVAsset >>>> %s: *** MediaValidator.plist was not loaded for this platform! Defaulting to no video support. ***
public.playlist
AVURLAssetMaxSizeAllowedForCellularAccessKey and AVURLAssetAllowsCellularAccessKey options are incompatible
AVURLAssetDownloadDestinationURLKey and AVURLAssetUsesNoPersistentCacheKey options are incompatible
com.apple.avurlasset.tracks
-[AVURLAsset initWithURL:options:]
<<<< AVAsset >>>> %s: %@ <%p> FigAssetCopyAssetWithDownloadToken for downloadToken %llu returned %d
<<<< AVAsset >>>> %s: creating AVAssetInspectorLoader
<<<< AVAsset >>>> %s: using custom AVAssetInspectorLoader
Cannot honor specified AVURLAsset initialization options for AVURLAsset <%p>%@
: %@
<<<< AVAsset >>>> %s: %@ creating AVFigAssetInspectorLoader
<<<< AVAsset >>>> %s: %@ Created %p
-[AVURLAsset _ensureAssetDownloadCache]_block_invoke
<<<< AVAsset >>>> %s: Cannot create AVAssetDownloadCahe when an AVManagedAssetCache is already present.
figLoaderNotificationHandler
<<<< AVAsset >>>> %s: %@ Received notification for %@
*** SHOULD NOT receive kFigAssetNotification_PropertyRevised / kFigStdAssetProperty_Duration notification from %s, if you see this message please file a radar with logs and repro steps and assign it to AVFoundation ***
<<<< AVAsset >>>> %s: %s
<%@: %p, URL = %@>
^{OpaqueFigAsset=}8@?0
T@"NSURL",R,C,N
shouldMatchDataInCacheByURLPathComponentOnly
shouldMatchDataInCacheByURLWithoutQueryComponent
cacheKey
-[AVURLAsset(AVURLAssetURLHandling) resourceLoader]_block_invoke
<<<< AVAsset >>>> %s: _URLAsset->resourceLoader was unexpectedly non-nil
resourceLoader
T@"AVAssetResourceLoader",R,N
AVSendResponseDictionaryToFigPlaybackItem
<<<< AVAsset >>>> %s: Ignoring ResponseForClientHandledURLRequest because no FigPlaybackItem was available to receive it
AVSendResponseDictionaryToFigAsset
<<<< AVAsset >>>> %s: Ignoring ResponseForClientHandledURLRequest because no FigAsset was available to receive it
AVSendResponseDictionaryToFigAssetImageGenerator
<<<< AVAsset >>>> %s: Ignoring ResponseForClientHandledURLRequest because no FigAssetImageGenerator was available to receive it
figAssetProvider
T@?,C,N,V_figAssetProvider
URLRequestOriginator
Tr^v,&,N
T@"AVAssetResourceLoader",W,N
figAsset
Tr^{OpaqueFigAsset=},R,N
com.apple.avfoundation.avurlasset.instanceIdentifierMapping
Data length cannot exceed %llu bytes
mayRequireContentKeysForMediaDataProcessing
loggingIdentifier
T@"<AVLoggingIdentifier>",R,&,N
AVAssetClientHandlerHandleURLRequest
<<<< AVAsset >>>> %s: No payload or payload not a dictionary for kFigAssetClientHandledURLRequestNotificationKey_RequestDictionary
minimumCutOffFrequency < maximumCutOffFrequency
0. <= bypassThreshold && bypassThreshold <= 1.
0. <= sweepValue && sweepValue <= 1.
minimumCutOffFrequency
Ti,R,N
maximumCutOffFrequency
bypassThreshold
sweepValue
CleanAperture
ProductionAperture
EncodedPixels
aig_trace
com.apple.avfoundation.requestsqueue
com.apple.avfoundation.imagerequestqueue
-[AVAssetImageGenerator _ensureFigAssetImageGeneratorReturningError:]
<<<< AVAssetImageGenerator >>>> %s: Creating FigAssetImageGenerator from FigAsset
-[AVAssetImageGenerator copyCGImageAtTime:actualTime:error:]
<<<< AVAssetImageGenerator >>>> %s: called
<<<< AVAssetImageGenerator >>>> %s: composition => using AVAssetReader
<<<< AVAssetImageGenerator >>>> %s: not a composition => using FigAssetImageGenerator
<<<< AVAssetImageGenerator >>>> %s: calling FigAssetImageGeneratorCopyCGImageAtTime time %.3f options %@
<<<< AVAssetImageGenerator >>>> %s: no FigAssetImageGenerator instance!
-[AVAssetImageGenerator generateCGImagesAsynchronouslyForTimes:completionHandler:]
handler != nil
RequestID
RequestedTime
CompletionHandler
Self
-[AVAssetImageGenerator generateCGImagesAsynchronouslyForTimes:completionHandler:]_block_invoke
<<<< AVAssetImageGenerator >>>> %s: calling FigAssetImageGeneratorRequestCGImageAtTimeAsync time %.3f options %@
<<<< AVAssetImageGenerator >>>> %s: calling handler with failed status, error %@
-[AVAssetImageGenerator cancelAllCGImageGeneration]
AVAssetImageGenerator can't use a video composition with a renderScale other than 1.0
-[AVAssetImageGenerator _didGenerateCGImage:]
<<<< AVAssetImageGenerator >>>> %s: calling handler with succeeded status, actualTime %.3f
-[AVAssetImageGenerator _failedToGenerateCGImage:]
<<<< AVAssetImageGenerator >>>> %s: calling handler with cancelled status
<<<< AVAssetImageGenerator >>>> %s: calling handler with failed status, error %d
asset
T@"AVAsset",R,N
appliesPreferredTrackTransform
maximumSize
apertureMode
videoComposition
T@"AVVideoComposition",C,N
customVideoCompositor
T@"<AVVideoCompositing>",R,N
requestedTimeToleranceBefore
requestedTimeToleranceAfter
aig_handleURLRequest
<<<< AVAssetImageGenerator >>>> %s: URL response required
<<<< AVAssetImageGenerator >>>> %s: No payload or payload not a dictionary for kFigAssetImageGeneratorNotification_URLResponseRequired
AVAssetTrackTimeRangeDidChangeNotification
AVAssetTrackSegmentsDidChangeNotification
AVAssetTrackTrackAssociationsDidChangeNotification
<%@: %p, trackID = %d, mediaType = %@>
segments
T@"AVAsset",R,W,N
trackID
assetTrackNotificationHandler
*** SHOULD NOT receive kFigAssetTrackNotification_PropertyRevised / kFigStdTrackProperty_TimeRange notification from %s, if you see this message please file a radar with logs and repro steps and assign it to AVFoundation ***
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVAssetTrack.m %s: %s
*** SHOULD NOT receive kFigAssetTrackNotification_PropertyRevised / kFigAssetTrackProperty_EditSegmentData notification from %s, if you see this message please file a radar with logs and repro steps and assign it to AVFoundation ***
dataOutput
T@"AVCaptureOutput<AVCaptureDataOutputDelegateOverride>",R,N,V_dataOutput
synchronizedDataQueue
T@"NSMutableArray",R,N,V_synchronizedDataQueue
live
TB,R,N,GisLive
timestampAdjustmentsDataQueue
T@"NSMutableArray",&,N,V_timestampAdjustmentsDataQueue
mdoTimeStampHistoryQueue
T@"NSMutableArray",&,N,V_mdoTimeStampHistoryQueue
avcapturedataoutputsynchronizer_trace
dataOutputs may not be nil
dataOutputs array must contain at least one data output
Unsupported AVCaptureOutput in dataOutputs - %@
dataOutputs must be added to an AVCaptureSession before initializing a data output synchronizer
dataOutputs must all be added to the same AVCaptureSession in order to synchronize their output
dataOutputs must all contain a valid connection
dataOutputs must all support overriding delegate callbacks
com.apple.avfoundation.dataoutputsynchronizer.queue
NULL delegateCallbackQueue passed
-[AVCaptureDataOutputSynchronizer setDelegate:queue:]
<<<< AVCaptureDataOutputSynchronizer >>>> %s: (%p) setting delegate to %@ (%p)
com.apple.avfoundation.dataoutputsynchronizer.dataoutputqueue_%@
-[AVCaptureDataOutputSynchronizer _appendSynchronizedData:forCaptureOutput:]
<<<< AVCaptureDataOutputSynchronizer >>>> %s: %*s%d] %lld
<<<< AVCaptureDataOutputSynchronizer >>>> %s: %*s%d]A%lld
<<<< AVCaptureDataOutputSynchronizer >>>> %s: Received data callback from an unknown capture output %@, dropping data on the floor
-[AVCaptureDataOutputSynchronizer _dispatchRipenedSynchronizedData]
<<<< AVCaptureDataOutputSynchronizer >>>> %s: Aging out master data with time %lld / %d
-[AVCaptureDataOutputSynchronizer _adjustSynchronizedDataTimestamps]
<<<< AVCaptureDataOutputSynchronizer >>>> %s: prevMaster:%lld (~%lld) -> slave:%lld -> (~%lld) nextMaster:%lld. Picked %lld
-[AVCaptureDataOutputSynchronizer _dispatchSynchronizedDataWithTimestamp:]
<<<< AVCaptureDataOutputSynchronizer >>>> %s: dataOutput[%d](%p) No synchronized datas. Skipping.
<<<< AVCaptureDataOutputSynchronizer >>>> %s: dataOutput[%d](%p) ts %lld / %d matches. Dispatching.
<<<< AVCaptureDataOutputSynchronizer >>>> %s: dataOutput[%d](%p) ts %lld / %d != %lld / %d. Off by %lld / %d. Not dispatching
-[AVCaptureDataOutputSynchronizer _dispatchSynchronizedDataWithTimestamp:]_block_invoke
<<<< AVCaptureDataOutputSynchronizer >>>> %s: (%p) Emitting %@
dataOutputs
T@"NSArray",R,&
T@"<AVCaptureDataOutputSynchronizerDelegate>",R,N
delegateCallbackQueue
AVPlayerWaitingToMinimizeStallsReason
AVPlayerWaitingWhileEvaluatingBufferingRateReason
AVPlayerWaitingWithNoItemToPlayReason
An AVPlayerItem can occupy only one position in a player's queue at a time.
AVPlayerCurrentItemDidChangeNotification
ReasonForCurrentItemDidChange
ReasonAddToPlayQueue
ReasonRemoveFromPlayqueue
ReasonAdvanceAtEnd
ReasonAdvanceDueToError
ReasonUnknown
AVPlayerAvailableHDRModesDidChangeNotification
AVPlayerPlaybackWasInterruptedNotification
MatchMultichannelTrackPreferenceToAudioDevice
PreferStereo
PreferAC3ViaExclusivePassthrough
CoreTextSubtitleRenderer
CaptionDisplayService
CFAttributedStrings
FigCaptions
AVPlayerRateDidChangeNotification
AVPlayerRateDidChangeReasonKey
AVPlayerRateDidChangeRateChangeIdentifierKey
AVPlayerRateDidChangeAudioSessionInterruptedReason
AVPlayerRateDidChangeRouteChangedReason
AVPlayerRateDidChangeSetRateCalledReason
AVPlayerRateDidChangeSetRateFailedReason
AVPlayerRateDidChangePlaybackResumedReason
AVPlayerRateDidChangeAppBackgroundedReason
AVPlayerRateDidChangePlaybackStalledReason
AVPlayerRateDidChangePauseAtItemEndReason
AVPlayerRateDidChangeStatusChangedReason
Scanning
avplayer_trace
EmbraceFigPlayerCopyProperty
Item must be an instance of AVPlayerItem.
B8@?0
com.apple.avplayer.figplayer
com.apple.avplayer.playerlayer
com.apple.avplayer.ivars
com.apple.avplayer.current-item-properties
com.apple.avplayer.configuration
com.apple.avplayer.layers
avplayer_logperformance
AVPlayer %p deallocated while a pending preroll is still in progress; leaking completion handler. Use -cancelPendingPrerolls to deallocate an AVPlayer safely while a preroll is still pending.
%@ is not compatible with deprecated garbage collection
rate
-[AVPlayer _changeStatusToFailedWithError:]
<<<< AVPlayer >>>> %s: Posting AVPlayerRateDidChangeNotification for status change
-[AVPlayer _updateDecoderPixelBufferAttributes:onFigPlayer:]
<<<< AVPlayer >>>> %s: called on <%@>. Setting attributes on decoder to:
<%@>
-[AVPlayer _setCurrentItem:]
<<<< AVPlayer >>>> %s: %@ called (self = %@, new current item = %@)
timeControlStatus
reasonForWaitingToPlay
-[AVPlayer _runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:modificationBlock:]
<<<< AVPlayer >>>> %s: dispatching call to -_applyPlayQueueChangesToFigPlayerWithCompletionHandler: (self=%p)
v16@?0@"NSArray"8
suppressesVideoLayers
v24@?0@"AVPlayer"8@"NSDictionary"16
preferredPixelBufferAttributes
-[AVPlayer _itemIsReadyToPlay:]
<<<< AVPlayer >>>> %s: Item <%p> Now ReadyToPlay. Reevaluting if okay to play while transition to background.
<<<< AVPlayer >>>> %s: Item <%p> Reevalution complete. Not okay to play while transition to background. Pausing.
-[AVPlayer _advanceCurrentItemAccordingToFigPlaybackItem:]
<<<< AVPlayer >>>> %s: %@ called (self = %@, FigPlaybackItem = %p
<<<< AVPlayer >>>> %s: The FigPlaybackItem that posted ItemBecameCurrent has already been removed from the queue; fall back to identifying the current item using FigPlayerCopyPlayQueueItem
<<<< AVPlayer >>>> %s: Handling removal of item %@ (self = %@)
<<<< AVPlayer >>>> %s: %@ New current item: %@ %@ (self = %@)
-[AVPlayer _advanceToNextItem]
<<<< AVPlayer >>>> %s: %@ called (self = %@)
<<<< AVPlayer >>>> %s: removed current item, now have %@
<<<< AVPlayer >>>> %s: no change
Item must be a non-nil instance of AVPlayerItem.
-[AVPlayer prepareItem:withCompletionHandler:]
v16@?0q8
-[AVPlayer _insertItem:afterItem:]
<<<< AVPlayer >>>> %s: %@ called (self = %@, item = %@ %@, afterItem = %@ %@)
<<<< AVPlayer >>>> %s: now have %@
surrogate_player_disabled
+[AVPlayer _createFigPlayerWithType:player:]
<<<< AVPlayer >>>> %s: Surrogate player enabled = %d
FigPlayer_File
FigPlayer_Stream
<<<< AVPlayer >>>> %s: Creating instance of %s
-[AVPlayer _createAndConfigureFigPlayerWithType:completionHandler:]
<<<< AVPlayer >>>> %s: %@ called (self=%p)
<<<< AVPlayer >>>> %s: %@ Dispatching FigPlayer copy property block (self=%p) to a background queue if necessary
-[AVPlayer _createAndConfigureFigPlayerWithType:completionHandler:]_block_invoke
<<<< AVPlayer >>>> %s: Dispatching FigPlayer configuration block (self=%p) to state dispatch queue
-[AVPlayer _createAndConfigureFigPlayerWithType:completionHandler:]_block_invoke_2
<<<< AVPlayer >>>> %s: %@ Will update status (self=%p)
<<<< AVPlayer >>>> %s: %@ setting up FigPlayer <%p>
airPlayVideoActive
externalPlaybackActive
AVPlayer_FigPlayerProperty_Rate
AVPlayer_FigPlayerProperty_RateOptions
<<<< AVPlayer >>>> %s: underlying FigPlayer did not implement SetRateWithOptions. Fall back to SetRateWithFade
<<<< AVPlayer >>>> %s: underlying FigPlayer did neither implement SetRateWithOptions nor SetRateWithFade. Fall back to SetRate
<<<< AVPlayer >>>> %s: Failed adding playback item of %@ to play queue immediately (self = %@), will remove item
v24@?0@"NSArray"8@"NSArray"16
<<<< AVPlayer >>>> %s: figplayer creation failed [%d]
<<<< AVPlayer >>>> %s: %@ Did update status to %d (self=%p)
-[AVPlayer setExpectedAssetTypes:]
<<<< AVPlayer >>>> %s: setExpectedAssetTypes %@
AVPlayer's expectedAssetTypes can't be after any AVPlayerItems have been enqueued or after the AVPlayer's status changes from AVPlayerStatusUnknown.
<<<< AVPlayer >>>> %s: sawFileType = %d, sawStreamingType = %d
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVPlayer.m
<Unknown File>
Invalid parameter not satisfying: %@
item != nil
-[AVPlayer _applyPlayQueueChangesToFigPlayerWithCompletionHandler:]
-[AVPlayer _applyPlayQueueChangesToFigPlayerWithCompletionHandler:]_block_invoke
-[AVPlayer _removeItem:]
<<<< AVPlayer >>>> %s: %@ called (self = %@, item = %@ %@)
<<<< AVPlayer >>>> %s: %@ removed %@ %@, now have %@
-[AVPlayer replaceCurrentItemWithPlayerItem:]
v24@?0@"AVPlayerItem"8^B16
-[AVPlayer setRate:withVolumeRampDuration:playImmediately:rateChangeReason:]
<<<< AVPlayer >>>> %s: %@ called. Rate is now [%f], changed because %s
<<<< AVPlayer >>>> %s: Posting AVPlayerRateDidChangeNotification with payload %@
-[AVPlayer _setUsesLegacyAutomaticWaitingBehavior:]
<<<< AVPlayer >>>> %s: %@ _setUsesLegacyAutomaticWaitingBehavior: %s
AVPlayer's _usesLegacyAutomaticWaitingBehavior can't be set after any AVPlayerItems have been enqueued or after the AVPlayer's status changes from AVPlayerStatusUnknown.
AVPlayer cannot service a synchronized playback request via setRate:time:atHostTime: until its status is AVPlayerStatusReadyToPlay.
AVPlayer cannot service a synchronized playback request via setRate:time:atHostTime: when automaticallyWaitsToMinimizeStalling is YES
AVPlayer cannot service a preroll request until its status is AVPlayerStatusReadyToPlay.
-[AVPlayer _userVolume]
<<<< AVPlayer >>>> %s: Obtaining volume for category [%@]
AVPlayerActionAtItemEndAdvance is not allowed for a player of class %@
%d is not a valid actionAtItemEnd for a player of class %@
-[AVPlayer setShouldReduceResourceUsage:]
<<<< AVPlayer >>>> %s: %@ setting to %d
-[AVPlayer setPlayerRole:]
<<<< AVPlayer >>>> %s: setting to %@
<<<< AVPlayer >>>> %s: Unrecognized player role %@
-[AVPlayer setOutputContext:]
<<<< AVPlayer >>>> %s: %@ Trying to set picker id : %@
<<<< AVPlayer >>>> %s: No figPlayer found, cannot set picker id
block != nil
v32@?0{?=qiIq}8
-[AVPlayer removeTimeObserver:]
<<<< AVPlayer >>>> %s: %@ called (self = <%p>, time observer = <%p>)
An instance of AVPlayer cannot remove a time observer that was added by a different instance of AVPlayer.
You did not supply a reference to an object returned by either -addPeriodicTimeObserverForInterval:queue:usingBlock: or -addBoundaryTimeObserverForTimes:queue:usingBlock:
-[AVPlayer _closedCaptionLayers]
<<<< AVPlayer >>>> %s: closedCaptionLayers array snapshot:%@
-[AVPlayer _evaluateDisplaySizeOfAllAttachedLayers]
<<<< AVPlayer >>>> %s: %@ dispatching (self = %p)
-[AVPlayer _evaluateDisplaySizeOfAllAttachedLayers]_block_invoke
<<<< AVPlayer >>>> %s: %@ maximumLayerDisplaySize = %@ (self = %p)
-[AVPlayer _addLayer:]
<<<< AVPlayer >>>> %s: %@ AVPlayerLayer(%p) and its closedCaptionLayer(%p)
-[AVPlayer _addLayer:]_block_invoke
<<<< AVPlayer >>>> %s: %@ updating video layers due to adding layer %p (self=%@)
<<<< AVPlayer >>>> %s: %@ not updating video layers, despite adding layer %p (self=%@)
++++++++++++++++++++++++++++++++++++++++++
------------------------------------------
com.apple.avfoundation.allow-video-playback-in-background
-[AVPlayer _setAllowsVideoPlaybackWhileInBackground:]
<<<< AVPlayer >>>> %s: Entitlement not available to set allowsVideoPlaybackWhileInBackground property
+[AVPlayer fireAvailableHDRModesDidChangeNotification]
<<<< AVPlayer >>>> %s: Posting AVPlayerAvailableHDRModesDidChangeNotification
+[AVPlayer availableHDRModes]
<<<< AVPlayer >>>> %s: availableHDRModes returning %d
T@"NSError",R,N
preventsDisplaySleepDuringVideoPlayback
_displaysUsedForPlayback
T@"NSArray",C,N,S_setDisplaysUsedForPlayback:
_externalProtectionStatus
audioPlaybackEnabledAtAllRates
TB,R,N,GisAudioPlaybackEnabledAtAllRates
minRateForAudioPlayback
Tf,N
maxRateForAudioPlayback
-[AVPlayer(AVPlayerMultitaskSupport) _hasAssociatedAVPlayerLayerInPIPMode]
<<<< AVPlayer >>>> %s: Returning hasAVPlayerLayerInPIPMode: %s
UIApplication
-[AVPlayer(AVPlayerMultitaskSupport) _applicationHasExternallyDisplayedAVPlayerLayerAndIsUnderDeviceLock]
<<<< AVPlayer >>>> %s: Found non-LCD CAContext so externally displayed
<<<< AVPlayer >>>> %s: isExternalPlaybackActive is YES
<<<< AVPlayer >>>> %s: Not suspended under lock
com.apple.iapd.notify.extendedMode
-[AVPlayer(AVPlayerMultitaskSupport) _itemOkayToPlayWhileTransitioningToBackground:]
No associated video layers
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ %@ ]
MMP SPI says so
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as an associated AVPlayerLayer is in PIP mode
CarPlay is active
Under device lock and playing to external display
IAP extended mode is active
AllowsVideoPlaybackWhileInBackground set
No enabled video
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background: %d
-[AVPlayer(AVPlayerMultitaskSupport) _shouldDetachVideoLayersFromFigPlayer]
<<<< AVPlayer >>>> %s: %@ PIP mode is active
<<<< AVPlayer >>>> %s: %@ Under device lock and has external display active
<<<< AVPlayer >>>> %s: %@ Extended mode is active
<<<< AVPlayer >>>> %s: %@ Allows video in background property set
<<<< AVPlayer >>>> %s: %@ Host application is in foreground
<<<< AVPlayer >>>> %s: %@ Should Detach: [%@]
-[AVPlayer(AVPlayerMultitaskSupport) _didFinishSuspension:]
<<<< AVPlayer >>>> %s: called
-[AVPlayer(AVPlayerMultitaskSupport) _didFinishSuspension:]_block_invoke
<<<< AVPlayer >>>> %s: Item <%@ %p> Pausing since cannot transition to background
<<<< AVPlayer >>>> %s: Item <%@ %p> Unable to evaluate if okay to play while transition to background. Will reevaluate when ReadyToPlay
MusicPlayer
allowsPixelBufferPoolSharing
disallowsAMRAudio
appliesMediaSelectionCriteriaAutomatically
audioOutputDeviceUniqueID
allowsOutOfBandTextTrackRendering
multichannelAudioStrategy
captionRenderingStrategy
captionPipelineStrategy
audioSession != nil
audioSession
T@"AVAudioSession",&
Not available.  Use %@ or %@ instead
modificationType
Tq,R,N,V_modificationType
item
T@"AVPlayerItem",R,N,V_item
afterItem
T@"AVPlayerItem",R,N,V_afterItem
preferredVideoDecoderGPURegistryID
TQ,N
T@"<AVLoggingIdentifier>",&,N
AVPlayerItem *AVPlayerFindItemMatchingFigPlaybackItem(NSArray *, FigPlaybackItemRef, NSArray **)
<Unknown Function>
figPlaybackItemToFind != NULL
AVPlayerGetFigPlayerTypeForAsset
<<<< AVPlayer >>>> %s: called (asset=%p)
avplayer_fpNotificationCallback
<<<< AVPlayer >>>> %s: %@ called (self = %@, inNotificationName = %@, inNotificationPayload = %@)
avplayer_fpNotificationCallback_block_invoke
<<<< AVPlayer >>>> %s: %@ called (self = %@, inNotificationName = %@)
AVController_Volume
_AVPlayer_Volume
<<<< AVPlayer >>>> %s: Posting _AVPlayer_VolumeDidChangeNotification with payload %@
_AVPlayer_VolumeDidChangeNotification
<<<< AVPlayer >>>> %s: %@ kFigPlayerNotification_MutedDidChange (self = %@ value [%d])
muted
<<<< AVPlayer >>>> %s: Posting AVPlayerCurrentItemDidChangeNotification with reason %@
<<<< AVPlayer >>>> %s: %@ kFigPlayerNotification_CurrentItemDidChange (self = %@, FigPlaybackItem = %p
<<<< AVPlayer >>>> %s: %@ kFigPlayerNotification_CurrentItemDidChange due to AddTo/RemoveFrom-PlayQueue. No need to advance current item to match Fig
<<<< AVPlayer >>>> %s: %@ player <%p> failed to create fig sub item (error: %@)
outputObscuredDueToInsufficientExternalProtection
<<<< AVPlayer >>>> %s: Posting AVPlayerPlaybackWasInterruptedNotification
avplayer_iapdNotificationCallback
<<<< AVPlayer >>>> %s: %@ called (self = %@, notification = %@)
avplayer_iapdNotificationCallback_block_invoke
<<<< AVPlayer >>>> %s: %@ AVPlayer <%p>: iapd extended mode has changed. Conditions to maintain videoLayer->figPlayer don't hold. Detaching.
<<<< AVPlayer >>>> %s: %@ AVPlayer <%p>: iapd extended mode has changed. Conditions to maintain videoLayer->figPlayer do hold. Attaching.
<<<< AVPlayer >>>> %s: %@ AVPlayer <%p>: has no layers or no figPlayer. Nothing to attach/detach for iapd
com.apple.avfoundation.avplayer.iapd
AVSampleBufferAudioRendererWasFlushedAutomaticallyNotification
AVSampleBufferAudioRendererFlushTimeKey
-[AVSampleBufferAudioRenderer _installNotificationHandlers]
<<<< AVSampleBufferAudioRenderer >>>> %s: adding notification listener to %p with listener %p
-[AVSampleBufferAudioRenderer _uninstallNotificationHandlers]
<<<< AVSampleBufferAudioRenderer >>>> %s: removing notification listener to %p with listener %p
avsamplebufferaudiorenderer_trace
-[AVSampleBufferAudioRenderer init]
<<<< AVSampleBufferAudioRenderer >>>> %s: called
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] created
-[AVSampleBufferAudioRenderer dealloc]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p]
-[AVSampleBufferAudioRenderer _transitionToStatus:error:]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] Transitioning to status: %d
-[AVSampleBufferAudioRenderer status]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called
-[AVSampleBufferAudioRenderer error]
-[AVSampleBufferAudioRenderer setAudioOutputDeviceUniqueID:]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %@
audioOutputDeviceUniqueID != nil
-[AVSampleBufferAudioRenderer audioOutputDeviceUniqueID]
-[AVSampleBufferAudioRenderer setAudioTimePitchAlgorithm:]
newAudioTimePitchAlgorithm != nil
-[AVSampleBufferAudioRenderer audioTimePitchAlgorithm]
-[AVSampleBufferAudioRenderer setVolume:]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %1.3f
-[AVSampleBufferAudioRenderer volume]
-[AVSampleBufferAudioRenderer setScheduledAudioParameters:]
-[AVSampleBufferAudioRenderer scheduledAudioParameters]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called:
-[AVSampleBufferAudioRenderer setMuted:]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %d
-[AVSampleBufferAudioRenderer isMuted]
-[AVSampleBufferAudioRenderer timebase]
-[AVSampleBufferAudioRenderer copyFigSampleBufferAudioRenderer:]
-[AVSampleBufferAudioRenderer setRenderSynchronizer:error:]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] trying to add to a synchronizer (%p) when we already are added to a synchronizer (%p).
The AudioRenderer cannot be added to a Synchronizer when it has already been added to a Synchronizer.
-[AVSampleBufferAudioRenderer enqueueSampleBuffer:]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %p
sampleBuffer != NULL
Sample buffer has media type '%@' instead of '%@'
-[AVSampleBufferAudioRenderer flush]
completionHandler != nil
-[AVSampleBufferAudioRenderer flushFromSourceTime:completionHandler:]
-[AVSampleBufferAudioRenderer isReadyForMoreMediaData]
-[AVSampleBufferAudioRenderer requestMediaDataWhenReadyOnQueue:usingBlock:]
queue != NULL
-[AVSampleBufferAudioRenderer stopRequestingMediaData]
T^{OpaqueCMTimebase=},R,&
readyForMoreMediaData
TB,R,GisReadyForMoreMediaData
audioTimePitchAlgorithm
assetwriterinputmetadataadaptor_trace
input != nil
[[input mediaType] isEqual:AVMediaTypeMetadata]
Cannot create a new metadata adaptor with an asset writer input that is already attached to a metadata adaptor
Cannot create a new metadata adaptor with an asset writer input that has already started writing
Cannot create a new metadata adaptor with an asset writer that does not carry a source format hint
%@ only knows how to produce data with media subtype '%@', so it must be initialized with an instance of AVAssetWriterInput that is expecting data in that format
<%@: %p, assetWriterInput = %@>
group != nil
CMTIME_IS_NUMERIC([group timeRange].start)
! CMTIME_IS_NEGATIVE_INFINITY([group timeRange].duration)
Cannot invoke method before the attached asset writer input has been added to an asset writer and -startWriting has been called on that asset writer
-[AVAssetWriterInputMetadataAdaptor appendTimedMetadataGroup:]
<<<< AVAssetWriterInputMetadataAdaptor >>>> %s: Unrecognized asset writer status %d
Cannot write to file timed metadata group %p%@
assetWriterInput
T@"AVAssetWriterInput",R,N
AVExternalProtectionMonitorExternalProtectionStateChangedNotification
externalProtectionState
InternalBuild
Helvetica-Bold
enable
interval
color
opacity
fontsize
show_complete_uri
xoffset
yoffset
formatDescriptions
nominalFrameRate
estimatedDataRate
kbps
Mbps
%0.2f%@
HDR10
DolbyVision
video format desc 
audio format desc 
(%@) 
- codec:%.4s 
video-range:%@
, bit-depth:%@
, channels:%u
, sample-rate:%uHz
unknown
streaming (HLS)
local file
progressive download (CRABS)
custom-loaded
asset type:%@
session-id:%@
video display-size:%0.0f x %0.0f  
video display-size:-  
natural-size:%0.0f x %0.0f
current frame rate:%0.2f
nominal frame rate:%0.2f
network bandwidth:%@
average bitrate 
video:%@  
audio:%@
video:
audio:
%@  
indicated bitrate 
peak:%@  
avg:%@
stalls total:%ld  current-variant:%ld
frame drops 
total:%ld  
decode:%d  
imageQ:%d
buffered video before:%0.1fs  
after:%0.1fs
T@"AVPlayer",W,V_player
playerLayer
T@"AVPlayerLayer",W,V_playerLayer
com.apple.avfoundation.videoperformancehud
source passthru (empty dictionary) is not supported
not a dictionary
kCVPixelBufferPixelFormatTypeKey and AVVideoCodecKey may not both be specified
Either kCVPixelBufferPixelFormatTypeKey or AVVideoCodecKey must be specified
Unsupported keys specified: %@. Supported keys are %@
Unsupported pixel format type specified: %@. Supported pixel format types are %@
Unsupported AVVideoCompressionProperties specified: %@. Supported keys are %@
AVVideoQualityKey is present at the top level instead of inside the AVVideoCompressionPropertiesKey sub-dictionary
Unsupported codec specified: %@. Supported codecs are %@
kCVPixelBufferPixelFormatTypeKey is unsupported
AVVideoCodecKey is unsupported
nil settings
AVPlayerItemTimebaseChangedNotification
GaplessInfoHeuristicInfoKey
GaplessInfoEncodingDelayInFramesKey
GaplessInfoEncodingDrainInFramesKey
GaplessInfoDurationInFramesKey
GaplessInfoLastPacketsResyncKey
RampInOutInfoInDuration
RampInOutInfoOutDuration
AudibleDRMInfoGroupID
AVPlayerItemTimeJumpedNotification
AVPlayerItemDidPlayToEndTimeNotification
AVPlayerItemFailedToPlayToEndTimeNotification
AVPlayerItemFailedToPlayToEndTimeErrorKey
AVPlayerItemPlaybackStalledNotification
AVPlayerItemNewAccessLogEntry
AVPlayerItemNewErrorLogEntry
AVPlayerItemMediaSelectionDidChangeNotification
AVProtectedContentProviderFairPlay
AVInitializeProtectedContentPlaybackSupportStorageURLKey
AVInitializeProtectedContentPlaybackSupportVideoKey
AVInitializeProtectedContentPlaybackSupportExternalProtectionKey
AVPlayerItemBecameCurrentNotification
AVPlayerItemStoppedBeingCurrentNotification
AVPlayerItemVariantChangedNotification
SessionID
PlayInfo
avplayeritem_trace
%@ does not support playback via AVPlayer
com.apple.avplayeritem.ivars
com.apple.avplayeritem.figplaybackitem
com.apple.avplayeritem.figplaybackitem.accessor
com.apple.avplayeritem.seek
-[AVPlayerItem initWithAsset:automaticallyLoadedAssetKeys:]
<<<< AVPlayerItem >>>> %s: %@ AVPlayerItem <%p> created with asset at URL [%@], automatically loaded asset keys %@
AVPlayerItem %p deallocated while a pending seek is still in progress; leaking completion handler. Use -cancelPendingSeeks to deallocate an AVPlayerItem safely while a seek operation is still pending.
<%@: %p, %@>
asset = %@
URL = %@
with no asset and no URL
_externalProtectionRequiredForPlayback
timedMetadata
-[AVPlayerItem _configurePlaybackItem]
<<<< AVPlayerItem >>>> %s: %@ Requesting automatic loading of FigAsset properties %@
<<<< AVPlayerItem >>>> %s: %@ Requesting automatic loading of FigAssetTrack properties %@
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItemSeekToDate() failed for initial date
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItemSetProperty() failed witih %d for initial estimated date
-[AVPlayerItem _attachToPlayer:]
<<<< AVPlayerItem >>>> %s: %@ called (self = %@)
An AVPlayerItem cannot be associated with more than one instance of AVPlayer
+[AVPlayerItem _createFigPlaybackItemForFigPlayer:asset:URL:flags:playbackItem:]
<<<< AVPlayerItem >>>> %s: We have neither a FigAsset, URL, nor FigFormatReader, so cannot create a FigPlaybackItem
-[AVPlayerItem _attachToFigPlayer]
-[AVPlayerItem _addToPlayQueueOfFigPlayerOfPlayer:afterFigPlaybackItemOfItem:]
<<<< AVPlayerItem >>>> %s: %@ Adding playback item of %@ to play queue immediately (player = %@)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVPlayerItem.m
previousItem != nil
%@, 
See -[AVPlayerItem errorLog] for %d events
-[AVPlayerItem _changeStatusToFailedWithError:]
<<<< AVPlayerItem >>>> %s: %@ item <%p> status changing to AVPlayerItemStatusFailed with error %@
-[AVPlayerItem _tracks]
<<<< AVPlayerItem >>>> %s: %@ Item <%p> is fetching TrackIDArray
-[AVPlayerItem _invokeReadyForEnqueueingHandlers]
<<<< AVPlayerItem >>>> %s: %@ called (self = %@) to invoke %d handlers
-[AVPlayerItem _makeReadyForEnqueueingWithCompletionHandler:]
<<<< AVPlayerItem >>>> %s: %@ basics already ready
<<<< AVPlayerItem >>>> %s: %@ initialSamples already ready
<<<< AVPlayerItem >>>> %s: %@ CPEProtector already ready
<<<< AVPlayerItem >>>> %s: Either everything necessary is already ready, or making it all ready has failed
<<<< AVPlayerItem >>>> %s: Copying completion handler for later invocation in response to readiness notifications
-[AVPlayerItem _presentationSize]
<<<< AVPlayerItem >>>> %s: %@ Item <%p> is fetching its dimensions
-[AVPlayerItem _cancelPendingSeekAndRegisterSeekCompletionHandler:]
<<<< AVPlayerItem >>>> %s: Invoking completion handler for cancelled seek %d
-[AVPlayerItem _unregisterInvokeAndReleasePendingSeekCompletionHandlerForSeekID:finished:]
<<<< AVPlayerItem >>>> %s: Invoking seek completion handler for seek id %d
Seeking is not possible to time %@
toleranceBefore seekToTime must be valid
toleranceBefore seekToTime may not be negative
toleranceAfter seekToTime must be valid
toleranceAfter seekToTime may not be negative
-[AVPlayerItem seekToTime:toleranceBefore:toleranceAfter:completionHandler:]
<<<< AVPlayerItem >>>> %s: %@ Item <%p> Seek to time %@ with tolerance <%@, %@>
<<<< AVPlayerItem >>>> %s: %@ Using seek ID %d
-[AVPlayerItem seekToDate:completionHandler:]
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItemSeekToDateWithID() failed
-[AVPlayerItem _updateTimebase]_block_invoke
<<<< AVPlayerItem >>>> %s: can't create looping timebase! item will not loop.
preferredForwardBufferDuration >= 0.0
-[AVPlayerItem _setAudioEffectParameters:forTrackID:]
<<<< AVPlayerItem >>>> %s: Unknown AVAudioMixEffectParameters type.
AVVideoCompositions using AVVideoCompositionCoreAnimationTool cannot be used with AVPlayerItem. AVVideoCompositionCoreAnimationTool is for offline rendering only.
-[AVPlayerItem _setVideoCompositionInstructions:]
<<<< AVPlayerItem >>>> %s: %@ setting video composition instructions to %@
BytesStillNeededToEnd
DurationFromNowToEnd
CurrentMeasuredBytesPerSecond
RawMeasuredBytesPerSecond
BandwidthSlopFactor
EstimatedTimeToLikelyToKeepUp
RemoteIPAddress
-[AVPlayerItem _selectMediaOption:usingFigSelectedMediaArrayObtainedFromGroup:]
<<<< AVPlayerItem >>>> %s: %@ called (self=%p, option=%@, group=%@)
-[AVPlayerItem _selectMediaOption:inStreamingGroup:cacheIfAppropriate:]
<<<< AVPlayerItem >>>> %s: Neither applied nor cached media option. Selection will be discarded.
-[AVPlayerItem selectMediaOption:inMediaSelectionGroup:]
<<<< AVPlayerItem >>>> %s: %@ <%p> with asset <%p> called for media selection option %@ in group %@
-[AVPlayerItem selectMediaOptionAutomaticallyInMediaSelectionGroup:]
<<<< AVPlayerItem >>>> %s: %@ <%p> with asset <%p> called for media selection group %@
canPlaySlowForward
canPlayFastForward
canPlayReverse
canPlaySlowReverse
canPlayFastReverse
canStepForward
canStepBackward
authorizationRequiredForPlayback
TB,R,N,GisAuthorizationRequiredForPlayback
applicationAuthorizedForPlayback
TB,R,N,GisApplicationAuthorizedForPlayback
contentAuthorizedForPlayback
TB,R,N,GisContentAuthorizedForPlayback
AVPlayerItem does not support the specified protected content provider
AVPlayerItem could not uninitialize the specified protected content support session
AVPlayerItem._externalProtectionRequiredForPlayback can only be set to YES
Cannot get rental expiration date information from an AVPlayerItem that does not contain rental content
Cannot get rental playback date information from an AVPlayerItem that does not contain rental content or when rental playback has not started
TB,N,G_isExternalProtectionRequiredForPlayback,S_setExternalProtectionRequiredForPlayback:
_rental
TB,R,N,G_isRental
_rentalStartDate
_rentalExpirationDate
_rentalPlaybackStarted
TB,R,N,G_isRentalPlaybackStarted
_rentalPlaybackStartedDate
_rentalPlaybackExpirationDate
playerReference != nil
playerItemReference != nil
<%@: %p, player = %@, playerItem = %@>
Player connections are one-shot objects.  Cannot connect a player connection that was already disconnected.  To re-connect an AVPlayerItem to an AVPlayer, create a new player AVPlayerConnection object
Cannot connect a player connection that is already connected
-[AVPlayerConnection addItemToPlayQueueAfterPlaybackItemOfItem:]
<<<< AVPlayerItem >>>> %s: Not calling FigPlayerAddToPlayQueue because item's status is the failure status (item = %@ %@, previous item = %@ %@, FigPlaybackItem = %p)
<<<< AVPlayerItem >>>> %s: Calling FigPlayerAddToPlayQueue (item = %@ %@, previous item = %@ %@, FigPlaybackItem = %p)
Cannot disconnect a player connection that was already disconnected
-[AVPlayerItem(AVPlayerItemOutputs) _evaluateMetadataOutputs]_block_invoke
<<<< AVPlayerItem >>>> %s: Failed to set kFigPlaybackItemProperty_MetadataOutputsDictionary
Cannot attach an output that is already attached
Cannot attach a collector that is already attached
mediaDataCollectors
serviceIdentifier
newAVKitData == nil || [newAVKitData conformsToProtocol:@protocol(NSObject)]
newAVKitData == nil || [newAVKitData conformsToProtocol:@protocol(NSCopying)]
AVKitData
T@"<NSObject><NSCopying>",&,N
None
Adaptive
LivePhoto
DigitalZoom
-[AVPlayerItem(AVPlayerItemVideoEnhancement) setVideoEnhancementMode:]
<<<< AVPlayerItem >>>> %s: Video Enhancement mode is not valid
cmTimebaseNotificationCallback_TimeJumped
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemTimeJumpedNotification
AVFigPlaybackItemNotificationCallback_URLResponseRequired
<<<< AVPlayerItem >>>> %s: URL response required
<<<< AVPlayerItem >>>> %s: No payload or payload not a dictionary for kFigPlaybackItemNotification_URLResponseRequired
basics
avplayeritem_fpItemNotificationCallback_block_invoke
<<<< AVPlayerItem >>>> %s: %@ item <%p> ready for inspection of %@
<<<< AVPlayerItem >>>> %s: %@ item <%p> ready for playback
hasEnabledAudio
hasEnabledVideo
hasVideo
<<<< AVPlayerItem >>>> %s: %@ item <%p> status changing to AVPlayerItemStatusReadyToPlay
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemTimebaseChangedNotification
playback
inspection
<<<< AVPlayerItem >>>> %s: %@ item <%p> failed to become ready for %@ (error: %@)
<<<< AVPlayerItem >>>> %s: %@ item <%p> failed to create fig sub item (error: %@)
<<<< AVPlayerItem >>>> %s: %@ stream likely to keep up: YES
playbackLikelyToKeepUp
<<<< AVPlayerItem >>>> %s: %@ stream likely to keep up: NO
<<<< AVPlayerItem >>>> %s: %@ stream buffer empty: YES
playbackBufferEmpty
<<<< AVPlayerItem >>>> %s: %@ stream buffer full: YES
playbackBufferFull
<<<< AVPlayerItem >>>> %s: %@ playback stalled
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemPlaybackStalledNotification
<<<< AVPlayerItem >>>> %s: %@ seekable ranges changed
seekableTimeRanges
seekableTimeRangesLastModifiedTime
<<<< AVPlayerItem >>>> %s: %@ playback buffer Full: NO
<<<< AVPlayerItem >>>> %s: %@ playback buffer empty: NO
<<<< AVPlayerItem >>>> %s: %@ loaded ranges changed
loadedTimeRanges
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemDidPlayToEndTimeNotification
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemFailedToPlayToEndTimeNotification with error %@
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemNewAccessLogEntryNotification
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemNewErrorLogEntryNotification
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> became the FigPlayer's current item
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> stopped being the FigPlayer's current item
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> was removed from the FigPlayer's item queue
AVPlayerItemWasRemovedFromPlayQueueNotification
<<<< AVPlayerItem >>>> %s: %@ alternate stream changed
<<<< AVPlayerItem >>>> %s: %@ Chosen tracks changed
<<<< AVPlayerItem >>>> %s: %@ Display non-forced subtitles changed
<<<< AVPlayerItem >>>> %s: %@ ExternalProtectionRequiredForPlayback changed
<<<< AVPlayerItem >>>> %s: %@ item <%p> hasEnabledAudio changed
<<<< AVPlayerItem >>>> %s: %@ item <%p> hasEnabledVideo changed
<<<< AVPlayerItem >>>> %s: %@ item <%p> hasVideo changed to YES
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemMediaSelectionDidChangeNotification
<%@: %p, assetTrack = %@>
VideoEnhancementFilterOptions
DisableColorMatching
ActiveHapticChannelIndex
Volume
assetTrack
T@"AVAssetTrack",R,N
currentVideoFrameRate
avqueueplayer_trace
-[AVQueuePlayer insertItem:afterItem:]
<<<< AVQueuePlayer >>>> %s: called (self = %@, item = %@, afterItem = %@
-[AVQueuePlayer removeItem:]
<<<< AVQueuePlayer >>>> %s: called (self = %@, item = %@)
-[AVQueuePlayer removeAllItems]
<<<< AVQueuePlayer >>>> %s: called (self = %@)
-[AVSpecifiedLoggingIdentifier initWithSpecifiedName:]
<<<< AVLoggingIdentifier >>>> %s: nil specifiedName
Identifier name must be 6 chars or less
Identifier name must not contain more than one period
Identifier name must not contain non-numeric character after period
avloggingidentifier_trace
<<<< AVLoggingIdentifier >>>> %s: Identifier string is %@
%@.%02d
I/%@
-[AVAssetLoggingIdentifier init]
P/%@
-[AVPlayerLoggingIdentifier init]
ABCDEFGHIJKLMNOPQRSTUVWXYZ
makeRandomCharacterString
<<<< AVLoggingIdentifier >>>> %s: Failed to allocate char string of length %d
composition_trace
-[AVComposition _initWithComposition:]
<<<< AVComposition >>>> %s: [%p] called
<%@: %p tracks = %@>
-[AVComposition mutableCopyWithZone:]
URLAssetInitializationOptions
Cannot honor specified AVURLAsset initialization options for AVMutableComposition <%p>%@
-[AVMutableComposition insertTimeRange:ofAsset:atTime:error:]
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p asset: %p timeRange.start: %.3f timeRange.duration: %.3f startTime: %.3f
-[AVMutableComposition insertEmptyTimeRange:]
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p timeRange.start: %.3f timeRange.duration: %.3f
-[AVMutableComposition removeTimeRange:]
-[AVMutableComposition scaleTimeRange:toDuration:]
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p timeRange.start: %.3f timeRange.duration: %.3f duration: %.3f
-[AVMutableComposition addMutableTrackWithMediaType:preferredTrackID:]
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p mediaType: %@ preferredTrackID: %d
-[AVMutableComposition removeTrack:]
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p track: %p trackID: %d
-[AVMutableComposition mutableTrackCompatibleWithTrack:]
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p track: %p trackAssetURL: %@ trackID: %d
<<<< AVComposition >>>> %s: AVAsset with nil _absoluteURL and NULL _mutableComposition
naturalTimeScale
supportsSecureCoding
%c%c%c
root
avcapturecoremotionmetadatainput_trace
-[AVCaptureCoreMotionMetadataInput ports]
<<<< AVCaptureCoreMotionMetadataInput >>>> %s: CMMetadataFormatDescriptionCreateWithMetadataSpecifications returned error %d
sourceID
avplayeritemmetadataoutput_trace
[identifiers count] > 0
com.apple.avplayeritemmetadataoutput.ivars
com.apple.avplayeritemmetadataoutput.accumulationqueue
T@"<AVPlayerItemMetadataOutputPushDelegate>",R,W,N
advanceIntervalForDelegateInvocation
-[AVPlayerItemMetadataOutput(AVPlayerItemMetadataOutput_Internal) _signalFlush]_block_invoke
<<<< AVPlayerItemMetadataOutput >>>> %s: metadata output flushed
-[AVPlayerItemMetadataOutput(AVPlayerItemMetadataOutput_Internal) _signalFlush]_block_invoke_3
<<<< AVPlayerItemMetadataOutput >>>> %s: Notifying delegate of a flush
-[AVPlayerItemMetadataOutput(AVPlayerItemMetadataOutput_Internal) _pushTimedMetadataGroups:fromPlayerItemTrack:]_block_invoke_3
<<<< AVPlayerItemMetadataOutput >>>> %s: Invoking metadata delegate %p with %@ dictionary from %@ item track
-[AVPlayerItemMetadataOutput(AVPlayerItemMetadataOutput_Internal) _pushTimedMetadataGroups:fromPlayerItemTrack:]_block_invoke
figMetadataOutputsDictionaryOptions
T@"NSDictionary",R,N,G_figMetadataOutputsDictionaryOptions
<%@: %p trackID = %d, mediaType = %@, editCount = %d>
T@"NSArray",R,C,N
-[AVMutableCompositionTrack setSegments:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVCompositionTrack.m %s: [%p] called
-[AVMutableCompositionTrack insertTimeRange:ofTrack:atTime:error:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVCompositionTrack.m %s: [%p] called mutableComposition: %p destTrackID: %d track: %p timeRange.start: %.3f timeRange.duration: %.3f startTime: %.3f
kFigBaseObjectError_ParamErr
Invalid asset track
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVCompositionTrack.m
Count of timeRanges array and count of tracks array do not match.
-[AVMutableCompositionTrack insertTimeRanges:ofTracks:atTime:error:]
-[AVMutableCompositionTrack insertEmptyTimeRange:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVCompositionTrack.m %s: [%p] called mutableComposition: %p destTrackID: %d timeRange.start: %.3f timeRange.duration: %.3f
-[AVMutableCompositionTrack removeTimeRange:]
-[AVMutableCompositionTrack scaleTimeRange:toDuration:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVCompositionTrack.m %s: [%p] called mutableComposition: %p destTrackID: %d timeRange.start: %.3f timeRange.duration: %.3f duration: %.3f
-[AVMutableCompositionTrack validateTrackSegments:error:]
Ti,N
T{CGAffineTransform=dddddd},N
MediaUIStyle
MediaUIFullWidth
MediaUIFormatTemplate
arab
-[AVTimeFormatter stringFromTimeInterval:]: unsupported style
%@+%@
-[AVTimeFormatter setStyle:]: unsupported style
style
formatTemplate
fullWidth
TB,N,GisFullWidth
AVCrackTime
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVTimeFormatter.m
time >= 0.0
<%@: %p timeRange [%.3f,+%.3f] 
is empty
from trackID %d of asset %@ sourceTimeRange [%.3f,+%.3f]
empty
TB,R,N,GisEmpty
sourceURL
sourceTrackID
%@:%@
AVAuxiliaryMetadataArrayTagWithPrefixedKey
<<<< AVAuxiliaryMetadata >>>> %s: Unpacked metadata: %@ value: %@
<<<< AVAuxiliaryMetadata >>>> %s: Absent metadata: %@
AVAuxiliaryMetadataStringTagWithPrefixedKey
AVAuxiliaryMetadataAddValue
<<<< AVAuxiliaryMetadata >>>> %s: Auxiliary metadata: '%@' : %@
[ISO:%.2f dur:%.4f]
T{?=qiIq},R,V_exposureDuration
Tf,R,V_ISO
[bias:%.2f]
Tf,R,V_exposureTargetBias
asset != nil
%@ status read/write queue
Cannot initialize an instance of %@ with an asset at non-local URL '%@'
formatReader
<%@: %p, asset = %@, outputs = %@>
cannot be called after reading has started
cannot add an output that has already been added to the receiver
cannot add an output after reading has started
cannot add an output that has already been added to another AVAssetReader
output != nil
finished
v24@?0@"AVAssetReader"8@"NSDictionary"16
cannot be called again after reading has already started
figAssetReader
T^{OpaqueFigAssetReader=},R,N,G_figAssetReader
readSingleSample
TB,N,G_readSingleSample,S_setReadSingleSample:
T@"AVAsset",R,&,N
timeRange
T{?={?=qiIq}{?=qiIq}},N
assetreaderoutput_trace
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVAssetReaderOutput.m
The receiver cannot already be attached to an AVAssetReader.
v32@?0@8Q16^B24
cannot copy next sample buffer before adding this output to an instance of AVAssetReader (using -addOutput:) and calling -startReading on that asset reader
-[AVAssetReaderOutput copyNextSampleBuffer]
<<<< AVAssetReaderOutput >>>> %s: FigAssetReaderExtractAndRetainNextSampleBuffer returned %d, extractionComplete=%d, sampleBuffer=%p, self=%p
timeRanges != nil
Each entry in timeRanges must be an instance of %@
Start time of each time range must be numeric - see CMTIME_IS_NUMERIC
Duration of each time range must be nonnegative & numeric or positive infinity - see CMTIME_IS_NUMERIC
Start time of each time range must be greater than or equal to the end time of the previous time range
cannot be called before reading has started
cannot be called until all samples have been read (i.e. %@ returns NULL)
cannot be called without setting %@ to YES
cannot be called after calling %@
weakReferenceToAssetReader
T@"AVWeakReference",R,N,G_weakReferenceToAssetReader
extractionID
Ti,N,G_extractionID,S_setExtractionID:
figAssetReaderExtractionOptions
T@"NSDictionary",R,N,G_figAssetReaderExtractionOptions
trimsSampleDurations
TB,R,N,G_trimsSampleDurations
alwaysCopiesSampleData
track != nil
%@ does not currently support AVVideoCleanApertureKey or AVVideoPixelAspectRatioKey
%@ does not currently support AVVideoScalingModeKey
Output settings are not compatible with media type %@
AVAssetReaderOutput does not currently support compressed output
AVAssetReaderOutput does not support AVSampleRateConverterAudioQualityKey
<%@: %p, track = %@, outputSettings = %@>
audioTimePitchAlgorithm must be one of: %@
cannot copy sample buffers when attached to an adaptor
T@"NSDictionary",R,N
fieldMode
attachedToAdaptor
TB,R,N,G_isAttachedToAdaptor
track
audioTracks != nil
[audioTracks count] >= 1
tracks must all have media type AVMediaTypeAudio
tracks must all be part of the same AVAsset
<%@: %p, audioTracks = %@, audioSettings = %@>
track must be one of the tracks used to create the receiver
audioTracks
audioMix
T@"AVAudioMix",C,N
videoTracks != nil
[videoTracks count] >= 1
tracks must all have media type AVMediaTypeVideo
%@ does not currently support AVVideoDecompressionPropertiesKey
<%@: %p, videoTracks = %@>
AVAssetReaderVideoCompositionOutput can't use a video composition with a renderScale other than 1.0
*** AVAssetReaderVideoCompositionOutput.videoComposition needs to be set
videoTracks
<%@: %p, track = %@>
figAssetReaderSampleBufferDidBecomeAvailable
<<<< AVAssetReaderOutput >>>> %s: %p received %@, extractionID=%d
figAssetReaderDecodeError
<<<< AVAssetReaderOutput >>>> %s: %p received %@
figAssetReaderFailed
T@"NSURL",C,N,V_URL
mediaFileType
T@"AVMediaFileType",C,N,V_mediaFileType
T{?=qiIq},N,V_movieFragmentInterval
overallDurationHint
T{?=qiIq},N,V_overallDurationHint
shouldOptimizeForNetworkUse
TB,N,V_shouldOptimizeForNetworkUse
directoryForTemporaryFiles
T@"NSURL",C,N,V_directoryForTemporaryFiles
metadataItems
T@"NSArray",C,N,V_metadataItems
movieTimeScale
Ti,N,V_movieTimeScale
T{CGAffineTransform=dddddd},N,V_preferredTransform
Tf,N,V_preferredVolume
Tf,N,V_preferredRate
singlePassFileSize
Tq,N,V_singlePassFileSize
singlePassMediaDataSize
Tq,N,V_singlePassMediaDataSize
T@"NSArray",C,N,V_inputs
inputGroups
T@"NSArray",C,N,V_inputGroups
assetwriter_trace
outputURL != nil
[outputURL isFileURL]
outputFileType != nil
%@ helper read/write queue
<%@: %p, outputURL = %@, outputFileType = %@>
CMTIME_COMPARE_INLINE(interval, >=, kCMTimeZero)
(CMTIME_IS_NUMERIC(hint) && CMTIME_COMPARE_INLINE(hint, >=, kCMTimeZero)) || CMTIME_IS_INVALID(hint)
movieTimeScale >= 0
fileSize > 0
mediaDataSize > 0
-[AVAssetWriter addInput:]
<<<< AVAssetWriter >>>> %s: called (self=%p)
inputGroup != nil
-[AVAssetWriter addInputGroup:]
-[AVAssetWriter startWriting]
CMTIME_IS_NUMERIC(startTime)
-[AVAssetWriter startSessionAtSourceTime:]
CMTIME_IS_NUMERIC(endTime)
-[AVAssetWriter endSessionAtSourceTime:]
-[AVAssetWriter cancelWriting]
-[AVAssetWriter finishWriting]
-[AVAssetWriter finishWritingWithCompletionHandler:]
helper
T@"AVAssetWriterHelper",R,&,G_helper
outputURL
outputFileType
availableMediaTypes
[configurationState URL] != nil
[configurationState mediaFileType] != nil
[configurationState inputs] != nil
[configurationState inputGroups] != nil
[configurationState metadataItems] != nil
The output file type %@ does not support mutually exclusive relationships among tracks.
At least one AVAssetWriterInput in the given inputGroup is also present in an inputGroup already added.
At least one provisional AVAssetWriterInput in the given inputGroup is also present as a provisional input in an inputGroup already added.
weakReferenceToDelegate
T@"AVWeakReference",&,G_weakReferenceToDelegate,S_setWeakReferenceToDelegate:,V_weakReferenceToDelegate
T@"<AVAssetWriterFigAssetWriterNotificationHandlerDelegate>",W
-[AVAssetWriterWritingHelper initWithConfigurationState:error:]
<<<< AVAssetWriter >>>> %s: invalid file extension in outputURL
com.apple.avfoundation.avassetwriter.writing.assetwriteraccessqueue
Cannot end a session without first starting a session
-[AVAssetWriterWritingHelper cancelWriting]
<<<< AVAssetWriter >>>> %s: -[NSFileManager removeItemAtURL:] failed: %s
WARNING: -finishWriting should not be called on the main thread.
-[AVAssetWriterWritingHelper finishWriting]_block_invoke
<<<< AVAssetWriter >>>> %s: Calling FigAssetWriterFinish
<<<< AVAssetWriter >>>> %s: FigAssetWriterFinish failed: %d
q16@?0^@8
com.apple.avfoundation.assetwriter.finishwriting
-[AVAssetWriterWritingHelper finishWritingWithCompletionHandler:]_block_invoke
<<<< AVAssetWriter >>>> %s: calling completion handler
Finish writing file at %@, initiated by %@
Prepare for finishing input %@
assetWriter != nil
figAssetWriter != NULL
Call finish-writing delegate
+[AVAssetWriterWritingHelper finalStepWorkaroundOperationWithFigAssetWriter:]_block_invoke
<<<< AVAssetWriter >>>> %s: Invalidating FigAssetWriter, to ensure that audio files are finalized properly
Invalidate FigAssetWriter, to ensure that audio files are finalized properly
-[AVAssetWriterFinishWritingHelper initWithConfigurationState:finishWritingOperations:]_block_invoke
<<<< AVAssetWriter >>>> %s: "Transition to terminal status" operation invoked
Transition to terminal status
-[AVAssetWriterFinishWritingHelper _finishWritingOperationsDidFinish]
transitionToTerminalStatusOperation
T@"NSOperation",R,N,V_transitionToTerminalStatusOperation
Not available.  Use %@ instead.
-[AVFigAssetWriterFinishWritingAsyncOperation start]
<<<< AVAssetWriter >>>> %s: calling FigAssetWriterFinishAsync (self=%p)
<<<< AVAssetWriter >>>> %s: FigAssetWriterFinishAsync showed cancellation (self=%p)
<<<< AVAssetWriter >>>> %s: FigAssetWriterFinishAsync failed: %d
-[AVFigAssetWriterFinishWritingAsyncOperation cancel]
<<<< AVAssetWriter >>>> %s: called, self=%p
-[AVFigAssetWriterFinishWritingAsyncOperation didEnterTerminalState]
<<<< AVAssetWriter >>>> %s: Unexpected terminal status %d
-[AVFigAssetWriterFinishWritingAsyncOperation didReceiveFigAssetWriterNotificationWithSuccess:error:]
<<<< AVAssetWriter >>>> %s: called, success=%d, error=%@ (self=%p)
terminalError != nil
(terminalStatus == AVAssetWriterStatusCompleted) || (terminalStatus == AVAssetWriterStatusCancelled)
configurationState != nil
Cannot call method when status is %d
media type %@ is not allowed for this asset writer
In order to perform passthrough to file type %@, please provide a format hint in the AVAssetWriterInput initializer
AVAssetWriter does not support passthrough for media type %@ to file type %@.
  Please specify a non-nil output settings dictionary.
AVAssetWriter does not support passthrough of media with type '%@' and subtype '%@' to file type %@
AVAssetWriter currently does not support writing uncompressed video in a specific format.
Output settings must match supplied media type.  Media type %@ is not compatible with output settings %@.
output file type %@ does not support track associations
configurationState
T@"AVAssetWriterConfigurationState",R,N,V_configurationState
weakReferenceToAssetWriter
T@"AVWeakReference",&,V_weakReferenceToAssetWriter
T@"AVMediaFileType",R,N
inputs != nil
[inputs count] > 0
defaultInput == nil || [inputs containsObject:defaultInput]
options
! [[NSSet setWithArray:inputs] intersectsSet:[NSSet setWithArray:provisionalInputs]]
[inputs count] > 0 || [provisionalInputs count] > 0
provisionalInputs
defaultInput
T@"NSString",R,N,V_mediaType
T@"NSDictionary",R,N,V_outputSettings
sourceFormatHint
T^{opaqueCMFormatDescription=},R,N,V_sourceFormatHint
T@"NSString",R,N,V_languageCode
T@"NSString",R,N,V_extendedLanguageTag
T@"NSArray",R,N,V_metadata
trackReferences
T@"NSDictionary",R,N,V_trackReferences
displaysNonForcedSubtitles
TB,R,N,V_displaysNonForcedSubtitles
T@"AVAssetWriterInput",R,N,V_input
AVAssetWriterFigAssetWriterHandleCompletedNotification
<<<< AVAssetWriter >>>> %s: called with payload %@
AVAssetWriterFigAssetWriterHandleFailedNotification
AVAssetWriterInputGroupOptionsChangedContext
UnsafeUnretainedPointerData
AVOutputDeviceAuthorizationRequestRetryReasonIncorrectAuthorizationToken
AVOutputDeviceAuthorizationTokenTypePassword
AVOutputDeviceAuthorizationTokenTypePIN
outputdeviceauthorizationsession_trace
-[AVOutputDeviceAuthorizationSession initWithOutputDeviceAuthorizationSessionImpl:]
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (self=%p)
com.apple.avfoundation.outputdeviceauthorizationsession.ivars
-[AVOutputDeviceAuthorizationSession setDelegate:]
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (self=%p, delegate=%@)
-[AVOutputDeviceAuthorizationSession outputDeviceAuthorizationSessionImpl:didProvideAuthorizationRequest:]
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (self=%p, request=%@)
-[AVOutputDeviceAuthorizationSession outputDeviceAuthorizationSessionImpl:shouldRetryAuthorizationRequest:reason:]
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (self=%p, request=%@, reason=%@)
-[AVOutputDeviceAuthorizationSession outputDeviceAuthorizationSessionImplDidExpireWithReplacementImpl:]
<<<< AVOutputDeviceAuthorizationSession >>>> %s: self=%p, impl=%@, replacementImpl=%@
T@"<AVOutputDeviceAuthorizationSessionDelegate>",W
com.apple.avfoundation.output-device-auth-session.ivars
<%@: %p, ID=%@, outputDevice=%@, tokenType=%@>
-[AVOutputDeviceAuthorizationRequest respondWithAuthorizationToken:completionHandler:]
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (self=%p, authorizationToken=%@)
v24@?0q8@"NSError"16
-[AVOutputDeviceAuthorizationRequest cancel]
outputDevice
T@"AVOutputDevice",R,N
authorizationTokenType
AVAssetWriterInputMediaDataLocationInterleavedWithMainMediaData
AVAssetWriterInputMediaDataLocationBeforeMainMediaDataNotInterleaved
T@"NSString",C,N,V_mediaType
T@"AVOutputSettings",C,N,V_outputSettings
T^{opaqueCMFormatDescription=},&,N,V_sourceFormatHint
Ti,N,V_trackID
sourcePixelBufferAttributes
T@"NSDictionary",C,N,V_sourcePixelBufferAttributes
transform
T{CGAffineTransform=dddddd},N,V_transform
mediaTimeScale
Ti,N,V_mediaTimeScale
expectsMediaDataInRealTime
TB,N,V_expectsMediaDataInRealTime
T{CGSize=dd},N,V_naturalSize
T@"NSString",C,N,V_languageCode
T@"NSString",C,N,V_extendedLanguageTag
marksOutputTrackAsEnabled
TB,N,V_marksOutputTrackAsEnabled
layer
Tq,N,V_layer
alternateGroupID
Ts,N,V_alternateGroupID
provisionalAlternateGroupID
Ts,N,V_provisionalAlternateGroupID
T@"NSDictionary",C,N,V_trackReferences
performsMultiPassEncodingIfSupported
TB,N,V_performsMultiPassEncodingIfSupported
preferredMediaChunkDuration
T{?=qiIq},N,V_chunkDuration
preferredMediaChunkAlignment
Tq,N,V_chunkAlignment
preferredMediaChunkSize
Tq,N,V_chunkSize
mediaDataLocation
T@"NSString",C,N,V_mediaDataLocation
sampleReferenceBaseURL
T@"NSURL",C,N,V_sampleReferenceBaseURL
maximizePowerEfficiency
TB,N,V_maximizePowerEfficiency
assetwriterinput_trace
mediaType != nil
The media type of sourceFormatHint must match mediaType
Width and height of video format hint must be positive
AVAssetWriterInput does not currently support AVVideoScalingModeFit
AVAssetWriterInput does not support AVSampleRateConverterAudioQualityKey
AVAssetWriterInput does not support AVVideoDecompressionPropertiesKey
<%@: %p> helper queue
<%@: %p> "number of append failures" read/write queue
currentPassDescription
<%@: %p, mediaType = %@, outputSettings = %@>
-[AVAssetWriterInput _setHelper:]_block_invoke
<<<< AVAssetWriterInput >>>> %s: called, old=%@ new=%@
mediaTimeScale >= 0
naturalSize.width >= 0.0 && naturalSize.height >= 0.0
Cannot set marksOutputTrackAsEnabled of the receiver in an input group
media chunk duration must be numeric.  See CMTIME_IS_NUMERIC
media chunk duration must be a positive value
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVAssetWriterInput.m
preferredMediaChunkAlignment >= 0
preferredMediaChunkSize >= 0
-[AVAssetWriterInput _prepareToFinishWritingReturningError:]
<<<< AVAssetWriterInput >>>> %s: called, self=%p
canPerformMultiplePasses
pixelBufferPool
-[AVAssetWriterInput respondToEachPassDescriptionOnQueue:usingBlock:]
<<<< AVAssetWriterInput >>>> %s: called (self=%p, queue=%p, block=%p)
cannot be called more than once.
<<<< AVAssetWriterInput >>>> %s: Informing pass description responder to respond to initial pass description
<<<< AVAssetWriterInput >>>> %s: Not responding to initial pass description, per helper %@
-[AVAssetWriterInput requestMediaDataWhenReadyOnQueue:usingBlock:]
<<<< AVAssetWriterInput >>>> %s: called (self=%p)
-[AVAssetWriterInput appendSampleBuffer:]
Media type of sample buffer must match receiver's media type ("%@")
Cannot append sample buffer: %@
<<<< AVAssetWriterInput >>>> %s: Client will see -appendSampleBuffer: fail with error %@
-[AVAssetWriterInput markAsFinished]
-[AVAssetWriterInput markCurrentPassAsFinished]
trackAssociationType != nil
numberOfAppendFailures
T@"AVAssetWriterInputHelper",&,N,G_helper,S_setHelper:
T@"NSDictionary",C,N,G_sourcePixelBufferAttributes,S_setSourcePixelBufferAttributes:
T^{__CVPixelBufferPool=},R,N,G_pixelBufferPool
outputSettingsObject
T@"AVOutputSettings",R,N,G_outputSettingsObject
Tq,R,N,G_status
T@"AVWeakReference",&,N,G_weakReferenceToAssetWriter,S_setWeakReferenceToAssetWriter:
Ts,N,G_alternateGroupID,S_setAlternateGroupID:
Ts,N,G_provisionalAlternateGroupID,S_setProvisionalAlternateGroupID:
T@"NSDictionary",R,N,G_trackReferences
TB,R,N,GisReadyForMoreMediaData
[configurationState trackReferences] != nil
Cannot set a non-default media time scale on an asset writer input with media type AVMediaTypeAudio
languageCode %@ does not conform to the ISO 639-2/T language code
extendedLanguageTag %@ does not conform to the IETF BCP 47 (RFC 4646) language identifier
Associations of type AVTrackAssociationTypeForcedSubtitlesOnly are supported only between tracks with media type AVMediaTypeSubtitle or AVMediaTypeText.
Associations of type AVTrackAssociationTypeSelectionFollower are supported only between AVMediaTypeAudio and AVMediaTypeSubtitle tracks.
Associations of type AVTrackAssociationTypeChapterList are supported only between (AVMediaTypeVideo/AVMediaTypeAudio) and (AVMediaTypeVideo/AVMediaTypeMetadata/AVMediaTypeText) tracks.
Associations of type AVTrackAssociationTypeMetadataReferent are supported only between tracks of mediaType AVMediaTypeMetadata and other tracks.
trackAssociationType %@ must be 4 characters long.
cannot be called before attaching to an instance of AVAssetWriter and calling -startWriting on this attached asset writer
assetWriterTrack != nil
assetWriterTrack
aboveHighWaterLevel
-[AVAssetWriterInputWritingHelper observeValueForKeyPath:ofObject:change:context:]
<<<< AVAssetWriterInput >>>> %s: called (keyPath=%@, object=%@, change=%@, contect=%p)
-[AVAssetWriterInputWritingHelper appendSampleBuffer:error:]
<<<< AVAssetWriterInput >>>> %s: called (self = %p)
readyForMoreMediaData is NO.
-[AVAssetWriterInputWritingHelper appendPixelBuffer:withPresentationTime:]
A pixel buffer cannot be appended when readyForMoreMediaData is NO.
<<<< AVAssetWriterInput >>>> %s: Client will see -appendPixelBuffer: fail with error %@
-[AVAssetWriterInputWritingHelper transitionToAndReturnTerminalHelperWithTerminalStatus:]
<<<< AVAssetWriterInput >>>> %s: Transitioning to terminal status %d (self = %p)
<<<< AVAssetWriterInput >>>> %s: Dispatching request block one extra time, to make sure client sees the failure
A pixel buffer pool cannot be created with the receiver's sourcePixelBufferAttributes. The pixel buffer attributes must specify a width, height, and either a pixel format or a pixel format description.
T@"AVFigAssetWriterTrack",R,N,G_assetWriterTrack,V_assetWriterTrack
T@"AVAssetWriterInputPassDescription",&,N,V_currentPassDescription
writingHelper != nil
-[AVAssetWriterInputInterPassAnalysisHelper startPassAnalysis]_block_invoke
<<<< AVAssetWriterInput >>>> %s: end pass operation succeeded, nextPassDescription=%@
v28@?0B8@"AVAssetWriterInputPassDescription"12@"NSError"20
cannot be called between the invocation of %@ and the beginning of the next pass
not allowed between the invocation of %@ and the beginning of the next pass
Cannot call %@ more than once for the same pass
cannot be called when no media data is being requested.  Check the value of %@.
not allowed when no media data is being requested.  Check the value of %@.
cannot be called after the final pass
(terminalStatus == AVAssetWriterStatusCompleted) || (terminalStatus == AVAssetWriterStatusCancelled) || (terminalStatus == AVAssetWriterStatusFailed)
cannot be called after canceling or finishing writing
-[AVAssetWriterInputTerminalHelper appendSampleBuffer:error:]
<<<< AVAssetWriterInput >>>> %s: Client will see -appendSampleBuffer: return NO due to input already having transitioned to terminal status
-[AVAssetWriterInputTerminalHelper appendPixelBuffer:withPresentationTime:]
<<<< AVAssetWriterInput >>>> %s: Client will see -appendPixelBuffer: return NO due to input already having transitioned to terminal status
<%@: %p, status=%d>
T@"AVAssetWriterInputConfigurationState",R,N,V_configurationState
weakReferenceToAssetWriterInput
T@"AVWeakReference",&,V_weakReferenceToAssetWriterInput
T@"AVOutputSettings",R,N
T^{opaqueCMFormatDescription=},R,N
Ts,N
T@"AVAssetWriterInputPassDescription",R,N
shouldRespondToInitialPassDescription
T^{__CVPixelBufferPool=},R,N
[[input mediaType] isEqual:AVMediaTypeVideo]
Cannot create a new pixel buffer adaptor with an asset writer input that is already attached to a pixel buffer adaptor
Cannot create a new pixel buffer adaptor with an asset writer input that has already started writing
<%@: %p, assetWriterInput = %@, sourcePixelBufferAttributes = %@>
pixelBuffer != NULL
CMTIME_IS_NUMERIC(presentationTime)
mediaFileType != nil
<%@: %p> water level queue
com.apple.avfoundation.assetwriterinput
-[AVFigAssetWriterTrack _refreshAboveHighWaterLevel]_block_invoke
<<<< AVAssetWriterInput >>>> %s: FigAssetWriterIsTrackQueueAboveHighWaterLevel returned %d (self=%p)
Input buffer must be in an uncompressed format when outputSettings is not nil
First input buffer must have an appropriate kCMSampleBufferAttachmentKey_TrimDurationAtStart since the codec has encoder delay
Must start a session (using -[AVAssetWriter startSessionAtSourceTime:) first
Must start a session (using -[AVAssetWriter startSessionAtSourceTime:) before appending pixel buffers
-[AVFigAssetWriterTrack endPassWithCompletionHandler:]
com.apple.avfoundation.assetwriterinput.endpass
-[AVFigAssetWriterTrack setFormatDescriptions:]
<<<< AVAssetWriterInput >>>> %s: setting kFigFormatWriterTrackProperty_FormatDescriptionArray to %@
figAssetWriter
T^{OpaqueFigAssetWriter=},R,N,V_figAssetWriter
T@"AVMediaFileType",R,N,V_mediaFileType
Ti,R,N,V_trackID
encoderSupportsMultiPass
TB,R,GisAboveHighWaterLevel
sampleBufferCoalescingInterval
T{?=qiIq},N,V_sampleBufferCoalescingInterval
com.apple.avfoundation.mediadatarequester.ivars
-[AVAssetWriterInputMediaDataRequester requestMediaDataIfNecessary]
<<<< AVAssetWriterInput >>>> %s: Invoking request block normally
<<<< AVAssetWriterInput >>>> %s: Client exited request block
<<<< AVAssetWriterInput >>>> %s: Dispatching request block because previous request block invocation returned before filling the buffer queue or marking input finished (delegate = %@)
<<<< AVAssetWriterInput >>>> %s: We thought we might want to invoke the request block, but we are not actually going to
requestQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_requestQueue
T@"<AVAssetWriterInputMediaDataRequesterDelegate>",W
AVAssetWriterInputPassDescriptionResponder serialization queue
-[AVAssetWriterInputPassDescriptionResponder respondToNewPassDescription:]
-[AVAssetWriterInputPassDescriptionResponder respondToNewPassDescription:]_block_invoke
-[AVAssetWriterInputPassDescriptionResponder respondToNewPassDescription:]_block_invoke_2
<<<< AVAssetWriterInput >>>> %s: will invoke per-pass block (self=%p)
<<<< AVAssetWriterInput >>>> %s: did invoke per-pass block (self=%p)
trackID != kCMPersistentTrackID_Invalid
-[AVAssetWriterInputFigAssetWriterEndPassOperation dealloc]
-[AVAssetWriterInputFigAssetWriterEndPassOperation finalize]
-[AVAssetWriterInputFigAssetWriterEndPassOperation start]
<<<< AVAssetWriterInput >>>> %s: registering for kFigAssetWriterNotification_PassFinished on FigAssetWriter %p
<<<< AVAssetWriterInput >>>> %s: Calling FigAssetWriterEndPass
-[AVAssetWriterInputFigAssetWriterEndPassOperation _notifyWhetherMorePassesAreNeeded:timeRanges:forTrackWithID:]
<<<< AVAssetWriterInput >>>> %s: called (self=%p, trackID=%d)
<<<< AVAssetWriterInput >>>> %s: unregistering from kFigAssetWriterNotification_PassFinished
descriptionForNextPass
T@"AVAssetWriterInputPassDescription",R,N,V_nextPassDescription
<%@: %p, sourceTimeRanges=%@>
sourceTimeRanges
AVAssetWriterInputCurrentPassDescriptionChangeContext
AVAssetWriterInputWritingHelperNudgeMediaDataRequesterObservationContext
*** Ignoring exception during posting of notification: %@
AVAssetWriterInputFigAssetWriterEndPassOperationPassFinished
<<<< AVAssetWriterInput >>>> %s: Received kFigAssetWriterNotification_PassFinished
VideoCompositor_DeviceSpecific
VideoCompositor_Basic
VideoCompositor_OpenGL
StartTime
EndTime
BackgroundColorARGB
BackgroundColorICCProfile
LayerStack
ContainsTweening
InstructionIdentifier
SourceVideoTrackID
ConstantOpacity
TweenedOpacity
ConstantAffineMatrix
TweenedAffineMatrix
EnablePostProcessing
RequiredVideoTrackIDArray
PassthroughSourceVideoTrackID
AVVideoCompositionInstruction
TweenedCropRectangle
-[AVVideoCompositionInstruction dictionaryRepresentation]
<<<< AVVideoComposition >>>> %s: dictionaryRepresentation only accepts RGB color space for backgroundColor
AVVideoCompositionInstruction %@
T{?={?=qiIq}{?=qiIq}},R,N
enablePostProcessing
containsTweening
requiredSourceTrackIDs
passthroughTrackID
backgroundColor
T^{CGColor=},R,&,N
layerInstructions
T^{CGColor=},&,N
AVVideoCompositionLayerTrackID
AVVideoCompositionLayerTransformRamps
AVVideoCompositionLayerOpacityRamps
AVVideoCompositionLayerCropRectangleRamps
The timeRange of a transform ramp must not overlap the timeRange of an existing transform ramp.
StartTransform
EndTransform
The time of a transform setting must be numeric.
The timeRange of a transform ramp must have a numeric start time and a numeric duration.
The timeRange of an opacity ramp must not overlap the timeRange of an existing opacity ramp.
The time of an opacity setting must be numeric.
The timeRange of an opacity ramp must have a numeric start time and a numeric duration.
The timeRange of a crop rectangle ramp must not overlap the timeRange of an existing crop rectangle ramp.
StartCropRectangle
EndCropRectangle
The time of a crop rectangle setting must be numeric.
The timeRange of a crop rectangle ramp must have a numeric start time and a numeric duration.
ConstantCropRectangle
avvideocomposition_trace
-[AVVideoComposition init]
<<<< AVVideoComposition >>>> %s: Using video compositor: %@
-[AVVideoComposition _copyFigVideoCompositor:andSession:recyclingSession:forFigRemaker:error:]
<<<< AVVideoComposition >>>> %s: Unknown video compositor name for FigRemaker: %@
video composition must have a positive renderSize
video composition must have a positive renderScale
video composition must have a positive frameDuration
video composition must have a positive sourceTrackIDForFrameTiming
requiredPixelBufferAttributesForRenderContext
supportsWideColorSourceFrames
customVideoCompositorClass
renderSize
renderScale
frameDuration
sourceTrackIDForFrameTiming
instructions
T#,R,N
animationTool
T@"AVVideoCompositionCoreAnimationTool",R,&,N
colorPrimaries
colorYCbCrMatrix
colorTransferFunction
handler
T#,&,N
T@"AVVideoCompositionCoreAnimationTool",&,N
AVAssetExportPresetLowQuality
AVAssetExportPresetMediumQuality
AVAssetExportPresetHighestQuality
AVAssetExportPreset640x480
AVAssetExportPreset1280x720
AVAssetExportPreset960x540
AVAssetExportPreset1920x1080
AVAssetExportPreset3840x2160
AVAssetExportPresetHEVCHighestQuality
AVAssetExportPresetHEVC1280x720
AVAssetExportPresetHEVC1920x1080
AVAssetExportPresetHEVC3840x2160
AVAssetExportPresetAppleM4A
AVAssetExportPresetPassthrough
AVAssetExportPresetPhotoStream
AVAssetExportPresetPhotoStreamHD
AVAssetExportPresetICPL
AVAssetExportPresetICPLHD
AVAssetExportPresetICPLHEVC1920x1080
AVAssetExportPresetICPLProxy
AVAssetExportPresetICPLProxyHD
AVAssetExportPresetICPLAux
AVAssetExportPresetICPLAuxHD
AVAssetExportPresetAuxSmall
AVAssetExportPresetMMS
AVAssetExportPreset3GPRelease6MMS
AVAssetExportPresetAudioOnlyMMS
AVAssetExportPresetYouTube
AVAssetExportPresetYouTube_16x9
AVAssetExportPresetYouTubeHD
AVAssetExportPresetFacebook
AVAssetExportPresetFacebook_16x9
AVAssetExportPresetMobileMe
AVAssetExportPresetMobileMe_16x9
AVAssetExportPresetMobileMeHD
AVAssetExportPresetMail
AVAssetExportPresetMail_16x9
AVAssetExportPresetMessage
AVAssetExportPresetMessageAudio
AVAssetExportPresetMessageAux
handler cannot be nil
avexport_trace
<%@: %p, asset = %@, presetName = %@, outputFileType = %@
Cannot alter output file type attribute on an AVAssetExportSession after an export has started.
Cannot set outputFileType to nil
Invalid output file type
Cannot alter output URL attribute on an AVAssetExportSession after an export has started.
Cannot set outputURL to nil
-[AVAssetExportSession AVExportSessionExportAsynchronouslyCompletionHandler]
<<<< AVAssetExportSession >>>> %s: ignoring exception thrown by exportAsynchronouslyWithCompletion Handler
Cannot call exportAsynchronouslyWithCompletionHandler: more than once.
outputURL cannot be nil
-[AVAssetExportSession exportAsynchronouslyWithCompletionHandler:]
outputFileType cannot be nil
Cannot alter time range attribute on an AVAssetExportSession after an export has started.
Cannot alter min frame duration attribute on an AVAssetExportSession after an export has started.
Cannot set non-numeric min video frame duration.
Min video frame duration must be greater than zero.
Cannot alter max frame duration attribute on an AVAssetExportSession after an export has started.
Invalid frame rate conversion algorithm.
Cannot alter preserve sync frame attribute on an AVAssetExportSession after an export has started.
Cannot alter metadata attribute on an AVAssetExportSession after an export has started.
Cannot alter metadataItemFilter attribute on an AVAssetExportSession after an export has started.
Cannot alter output file length limit attribute on an AVAssetExportSession after an export has started.
-[AVAssetExportSession setFileLengthLimit:]
<<<< AVAssetExportSession >>>> %s: fileLengthLimit: %lld
-[AVAssetExportSession setMaximizePowerEfficiency:]
<<<< AVAssetExportSession >>>> %s: maximize power efficiency %s
Cannot alter audio time pitch algorithm attribute on an AVAssetExportSession after an export has started.
Cannot alter audio mix attribute on an AVAssetExportSession after an export has started.
Cannot alter video composition attribute on an AVAssetExportSession after an export has started.
video composition must have composition instructions
renderScale must be 1.0 when used with AVAssetExportSession.
Cannot alter optimize for network use attribute on an AVAssetExportSession after an export has started.
Cannot alter canPerformMultiplePassesOverSourceMediaData attribute on an AVAssetExportSession after an export has started.
Cannot alter directoryForTemporaryFiles attribute on an AVAssetExportSession after an export has started.
presetName
progress
mediaDataConsumer != nil
requestQueue != NULL
requestBlock != nil
[mediaDataConsumer respondsToSelector:@selector(isReadyForMoreMediaData)]
requestBlock
T@?,R,N,V_requestBlock
AVSynchronizedLayerQueue
playerItem
T@"AVPlayerItem",&,N
 %*lld, 
                , 
} (Latency:%f)
Max collection size exceeded
VDO[%s%@]:
VDO[--]:
ADO[  ]:
ADO[--]:
MDO[%*d]:
MDO[--]:
DDO[%s%@]:
DDO[--]:
???[--]:
count
common/title
common/creator
common/subject
common/description
common/publisher
common/contributor
common/creationDate
common/lastModifiedDate
common/type
common/format
common/identifier
common/source
common/language
common/relation
common/location
common/copyrights
common/albumName
common/author
common/artist
common/artwork
common/make
common/model
common/software
udta/%A9alb
udta/%A9arg
udta/%A9ART
udta/%A9aut
udta/%A9chp
udta/%A9cmt
udta/%A9com
udta/%A9cpy
udta/%A9day
udta/%A9des
udta/%A9dir
udta/%A9dis
udta/%A9enc
udta/%A9nam
udta/%A9gen
udta/%A9hst
udta/%A9inf
udta/%A9key
udta/%A9mak
udta/%A9mod
udta/%A9ope
udta/%A9fmt
udta/%A9src
udta/%A9prf
udta/%A9prd
udta/%A9pub
udta/%A9PRD
udta/%A9swr
udta/%A9req
udta/%A9trk
udta/%A9wrn
udta/%A9wrt
udta/%A9url
udta/%A9xyz
udta/tnam
udta/%A9phg
udta/name
udta/tagc
uiso/cprt
uiso/date
uiso/tagc
uiso/auth
uiso/perf
uiso/gnre
uiso/yrrc
uiso/loci
uiso/titl
uiso/dscp
uiso/coll
uiso/urat
uiso/thmb
uiso/albm
uiso/kywd
uiso/clsf
uiso/rtng
mdta/com.apple.quicktime.author
mdta/com.apple.quicktime.comment
mdta/com.apple.quicktime.copyright
mdta/com.apple.quicktime.creationdate
mdta/com.apple.quicktime.director
mdta/com.apple.quicktime.displayname
mdta/com.apple.quicktime.information
mdta/com.apple.quicktime.keywords
mdta/com.apple.quicktime.producer
mdta/com.apple.quicktime.publisher
mdta/com.apple.quicktime.album
mdta/com.apple.quicktime.artist
mdta/com.apple.quicktime.artwork
mdta/com.apple.quicktime.description
mdta/com.apple.quicktime.software
mdta/com.apple.quicktime.year
mdta/com.apple.quicktime.genre
mdta/info.ixml.xml
mdta/com.apple.quicktime.location.ISO6709
mdta/com.apple.quicktime.make
mdta/com.apple.quicktime.model
mdta/com.apple.quicktime.arranger
mdta/com.apple.quicktime.encodedby
mdta/com.apple.quicktime.originalartist
mdta/com.apple.quicktime.performer
mdta/com.apple.quicktime.composer
mdta/com.apple.quicktime.credits
mdta/com.apple.quicktime.phonogramrights
mdta/com.apple.quicktime.camera.identifier
mdta/com.apple.quicktime.camera.framereadouttimeinmicroseconds
mdta/com.apple.quicktime.title
mdta/com.apple.quicktime.collection.user
mdta/com.apple.quicktime.rating.user
mdta/com.apple.quicktime.location.name
mdta/com.apple.quicktime.location.body
mdta/com.apple.quicktime.location.note
mdta/com.apple.quicktime.location.role
mdta/com.apple.quicktime.location.date
mdta/com.apple.quicktime.direction.facing
mdta/com.apple.quicktime.direction.motion
mdta/com.apple.quicktime.detected-face
mdta/com.apple.quicktime.preferred-affine-transform
mdta/com.apple.quicktime.video-orientation
mdta/com.apple.quicktime.content.identifier
mdta/com.apple.quicktime.core-motion
mdta/com.apple.quicktime.camera-debug-info
mdta/com.apple.quicktime.live-photo.video-stabilization-crop-percentage-numerator
mdta/com.apple.quicktime.live-photo.video-stabilization-crop-percentage-denominator
mdta/com.apple.quicktime.is-montage
mdta/com.apple.quicktime.live-photo.auto
mdta/com.apple.quicktime.live-photo.vitality-score
mdta/com.apple.quicktime.live-photo.vitality-scoring-version
itsk/%A9alb
itsk/%A9ART
itsk/%A9cmt
itsk/covr
itsk/cprt
itsk/%A9day
itsk/%A9enc
itsk/gnre
itsk/%A9gen
itsk/%A9nam
itsk/%A9st3
itsk/%A9too
itsk/%A9wrt
itsk/aART
itsk/akID
itsk/apID
itsk/atID
itsk/cnID
itsk/cpil
itsk/disk
itsk/geID
itsk/grup
itsk/plID
itsk/rtng
itsk/tmpo
itsk/trkn
itsk/%A9ard
itsk/%A9arg
itsk/%A9aut
itsk/%A9lyr
itsk/%A9cak
itsk/%A9con
itsk/%A9des
itsk/%A9dir
itsk/%A9equ
itsk/%A9lnt
itsk/%A9mak
itsk/%A9ope
itsk/%A9phg
itsk/%A9prd
itsk/%A9prf
itsk/%A9pub
itsk/%A9sne
itsk/%A9sol
itsk/%A9src
itsk/%A9thx
itsk/%A9url
itsk/%A9xpd
id3/AENC
id3/APIC
id3/ASPI
id3/COMM
id3/COMR
id3/ENCR
id3/EQUA
id3/EQU2
id3/ETCO
id3/GEOB
id3/GRID
id3/IPLS
id3/LINK
id3/MCDI
id3/MLLT
id3/OWNE
id3/PRIV
id3/PCNT
id3/POPM
id3/POSS
id3/RBUF
id3/RVAD
id3/RVA2
id3/RVRB
id3/SEEK
id3/SIGN
id3/SYLT
id3/SYTC
id3/TALB
id3/TBPM
id3/TCOM
id3/TCON
id3/TCOP
id3/TDAT
id3/TDEN
id3/TDLY
id3/TDOR
id3/TDRC
id3/TDRL
id3/TDTG
id3/TENC
id3/TEXT
id3/TFLT
id3/TIME
id3/TIPL
id3/TIT1
id3/TIT2
id3/TIT3
id3/TKEY
id3/TLAN
id3/TLEN
id3/TMCL
id3/TMED
id3/TMOO
id3/TOAL
id3/TOFN
id3/TOLY
id3/TOPE
id3/TORY
id3/TOWN
id3/TPE1
id3/TPE2
id3/TPE3
id3/TPE4
id3/TPOS
id3/TPRO
id3/TPUB
id3/TRCK
id3/TRDA
id3/TRSN
id3/TRSO
id3/TSIZ
id3/TSOA
id3/TSOP
id3/TSOT
id3/TSRC
id3/TSSE
id3/TSST
id3/TYER
id3/TXXX
id3/UFID
id3/USER
id3/USLT
id3/WCOM
id3/WCOP
id3/WOAF
id3/WOAR
id3/WOAS
id3/WORS
id3/WPAY
id3/WPUB
id3/WXXX
icy/StreamTitle
icy/StreamUrl
m3u8/NAME
AVOutputDeviceBatteryLevelCaseKey
AVOutputDeviceBatteryLevelLeftKey
AVOutputDeviceBatteryLevelRightKey
AVOutputDeviceVolumeDidChangeNotification
AVOutputDeviceCanSetVolumeDidChangeNotification
AVOutputDeviceConfigurationOptionCancelConfigurationIfAuthRequired
AVOutputDeviceConfigurationCancellationReasonAuthorizationSkipped
outputdevice_trace
Not available
-[AVOutputDevice initWithOutputDeviceImpl:]
<<<< AVOutputDevice >>>> %s: called (self=%p, impl=%@)
%@: %@
-[AVOutputDevice setSecondDisplayEnabled:]
<<<< AVOutputDevice >>>> %s: called (self=%p, enabled=%d)
-[AVOutputDevice configureUsingBlock:options:completionHandler:]
<<<< AVOutputDevice >>>> %s: called (self=%p, configuratorBlock=%@, options=%@, completionHandler=%@)
-[AVOutputDevice configureUsingBlock:completionHandler:]
<<<< AVOutputDevice >>>> %s: called (self=%p, configuratorBlock=%@, completionHandler=%@)
v36@?0i8@"<AVOutputDeviceConfigurationRetrieval>"12@"NSString"20@"NSError"28
deviceID
deviceType
deviceSubType
serialNumber
firmwareVersion
identifyingMACAddress
com.apple.avfoundation.frecents
FrecencyScore
LastUsedTimestamp
peerID
publicKey
hasAdministratorPrivileges
pairedDeviceID
playing
TB,R,N,GisPlaying
productName
My Device
parentOutputDevice
T@"AVOutputDevice",W
T@"NSData",R,C,N
batteryLevel
caseBatteryLevel
leftBatteryLevel
rightBatteryLevel
airPlayProperties
inUseByPairedDevice
TB,R,N,GisInUseByPairedDevice
connectedPairedDevices
deviceFeatures
requiresAuthorization
automaticallyAllowsConnectionsFromPeersInHomeGroup
onlyAllowsConnectionsFromPeersInHomeGroup
canAccessRemoteAssets
canAccessAppleMusic
canAccessiCloudMusicLibrary
supportsBufferedAirPlay
Tf,R
canSetVolume
canBeGrouped
groupID
canBeGroupLeader
isGroupLeader
participatesInGroupPlayback
groupContainsGroupLeader
logicalDeviceID
isLogicalDeviceLeader
canCommunicateWithAllLogicalDeviceMembers
canRelayCommunicationChannel
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
T@"AVOutputDevice",W,V_parentDevice
com.apple.avfoundation.depthdataoutput.depthdataqueue
avcapturedepthdataoutput_trace
NULL callback queue passed
-[AVCaptureDepthDataOutput setDelegate:callbackQueue:]
<<<< AVCaptureDepthDataOutput >>>> %s: (%p) setting delegate to %@ (%p)
-[AVCaptureDepthDataOutput setDelegateOverride:delegateOverrideCallbackQueue:]
<<<< AVCaptureDepthDataOutput >>>> %s: (%p) setting delegateOverride to %@ (%p)
T@"<AVCaptureDepthDataOutputDelegate>",R,N
alwaysDiscardsLateDepthData
filteringEnabled
TB,N,GisFilteringEnabled
_UIApplicationDidFinishSuspensionSnapshotNotification
UIApplicationWillEnterForegroundNotification
adts
avutilities_trace
AVSerializeOnQueueAsyncIfNecessary
<<<< AVUtilities >>>> %s: called (queue=%p, currentQueue=%p, dispatch_get_main_queue()=%p, NSThread isMainThread=%d)
<<<< AVUtilities >>>> %s: running block synchronously
<<<< AVUtilities >>>> %s: dispatching block to queue
AVEnsureNotOnMainThread
<<<< AVUtilities >>>> %s: dispatching to background queue
<%@: %p %lld>
AVFoundationErrorDomain
AVErrorDeviceKey
AVErrorTimeKey
AVErrorFileSizeKey
AVErrorPIDKey
AVErrorRecordingSuccessfullyFinishedKey
AVErrorDiscontinuityFlagsKey
AVErrorMediaTypeKey
AVErrorMediaSubTypeKey
AVErrorPresentationTimeStampKey
AVErrorPersistentTrackIDKey
AVErrorFileTypeKey
AVErrorExceptionKey
AVErrorFourCharCode
AVError
_Description
_FailureReason
_RecoverySuggestion
AVLocalizedError
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVError.m %s: Could not load localized failure reason for %@ %ld (%@)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVError.m %s: Could not load localized description for %@ %ld (%@)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVError.m %s: Could not load localized recovery suggestion or failure reason for %@ %ld (%@)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVError.m %s: Could not load localized recovery suggestion for %@ %ld (%@)
'%@'
Source frame missing
Render dimensions unknown
Source frame unsupported format
Destination frame unsupported format
Invalid parameter
Invalid composition instruction
Blitting failed
No output callback
Frame was cancelled
No custom callbacks
Custom compositor failed with client NSError
Media format - invalid parameter
Media format - sample description is invalid (e.g. invalid size)
Media format - format description is invalid (e.g. invalid size)
Media format - format description has an incompatible format (e.g. unknown format / incompatible atom)
Media format - sample description is unsupported for the specified format flavor
Media format - slice has an invalid value
Media writing - no such property
Media writing - read only property
Media writing - no such track
Media writing - invalid timestamp
Media writing - invalid format
Media writing - invalid edit
Media writing - predetermined file size too small
Media writing - predetermined media data size too small
Cannot append media data after ending session
JSON format error
iTT requires languageCode or extendedLanguageTag property to be set
AVErrorUnknown
AVErrorOutOfMemory
AVErrorSessionNotRunning
AVErrorDeviceAlreadyUsedByAnotherSession
AVErrorNoDataCaptured
AVErrorSessionConfigurationChanged
AVErrorDiskFull
AVErrorDeviceWasDisconnected
AVErrorMediaChanged
AVErrorMaximumDurationReached
AVErrorMaximumFileSizeReached
AVErrorMediaDiscontinuity
AVErrorMaximumNumberOfSamplesForFileFormatReached
AVErrorDeviceNotConnected
AVErrorDeviceInUseByAnotherApplication
AVErrorDeviceLockedForConfigurationByAnotherProcess
AVErrorSessionWasInterrupted
AVErrorMediaServicesWereReset
AVErrorRecordingNotAllowedWhenMultipleAppsAreForeground
AVErrorExportFailed
AVErrorDecodeFailed
AVErrorInvalidSourceMedia
AVErrorFileAlreadyExists
AVErrorCompositionTrackSegmentsNotContiguous
AVErrorInvalidCompositionTrackSegmentDuration
AVErrorInvalidCompositionTrackSegmentSourceStartTime
AVErrorInvalidCompositionTrackSegmentSourceDuration
AVErrorFileFormatNotRecognized
AVErrorFileFailedToParse
AVErrorMaximumStillImageCaptureRequestsExceeded
AVErrorContentIsProtected
AVErrorNoImageAtTime
AVErrorDecoderNotFound
AVErrorEncoderNotFound
AVErrorContentIsNotAuthorized
AVErrorApplicationIsNotAuthorized
AVErrorDeviceIsNotAvailableInBackground
AVErrorFileChecksumFailed
AVErrorOperationNotSupportedForAsset
AVErrorDecoderTemporarilyUnavailable
AVErrorEncoderTemporarilyUnavailable
AVErrorInvalidVideoComposition
AVErrorReferenceForbiddenByReferencePolicy
AVErrorInvalidFileAtDownloadDestinationURL
AVErrorInvalidOutputURLPathExtension
AVErrorTorchLevelUnavailable
AVErrorOperationInterrupted
AVErrorIncompatibleAsset
AVErrorFailedToLoadMediaData
AVErrorServerIncorrectlyConfigured
AVErrorApplicationIsNotAuthorizedToUseDevice
AVErrorFailedToParse
AVErrorFileTypeDoesNotSupportSampleReferences
AVErrorUndecodableMediaData
AVErrorClientProgrammingError
AVErrorAirPlayControllerRequiresInternet
AVErrorAirPlayReceiverRequiresInternet
AVErrorVideoCompositorFailed
AVErrorRecordingAlreadyInProgress
AVErrorUnsupportedOutputSettings
AVErrorOperationNotAllowed
AVErrorContentIsUnavailable
AVErrorFileWritingExceededPredeterminedSize
AVErrorMediaDataWritingExceededPredeterminedSize
AVErrorFormatUnsupported
AVErrorMalformedDepth
AVErrorIncorrectPIN
AVErrorIncorrectPassword
AVErrorContentNotUpdated
AVErrorNoLongerPlayable
AVErrorNoCompatibleAlternatesForExternalDisplay
AVErrorNoSourceTrack
AVErrorExternalPlaybackNotSupportedForAsset
AVVideoCodecKey
avc1
jpeg
ap4h
apcn
hvc1
AVVideoWidthKey
AVVideoHeightKey
AVVideoPixelAspectRatioKey
AVVideoPixelAspectRatioHorizontalSpacingKey
AVVideoPixelAspectRatioVerticalSpacingKey
AVVideoCleanApertureKey
AVVideoCleanApertureWidthKey
AVVideoCleanApertureHeightKey
AVVideoCleanApertureHorizontalOffsetKey
AVVideoCleanApertureVerticalOffsetKey
AVVideoScalingModeKey
AVVideoScalingModeFit
AVVideoScalingModeResize
AVVideoScalingModeResizeAspect
AVVideoScalingModeResizeAspectFill
AVVideoColorPropertiesKey
ColorPrimaries
ITU_R_709_2
EBU_3213
SMPTE_C
DCI_P3
P3_D65
ITU_R_2020
TransferFunction
SMPTE_240M_1995
SMPTE_ST_428_1
SMPTE_ST_2084_PQ
ITU_R_2100_HLG
YCbCrMatrix
ITU_R_601_4
AVVideoAllowWideColorKey
AVVideoCompressionPropertiesKey
AverageBitRate
Quality
MaxKeyFrameInterval
MaxKeyFrameIntervalDuration
ProfileLevel
H264_Baseline_3_0
H264_Baseline_3_1
H264_Baseline_4_1
H264_Baseline_AutoLevel
H264_Main_3_0
H264_Main_3_1
H264_Main_3_2
H264_Main_4_1
H264_Main_AutoLevel
H264_High_4_0
H264_High_4_1
H264_High_AutoLevel
HEVC_Main_AutoLevel
H264EntropyMode
CAVLC
CABAC
ExpectedFrameRate
AllowFrameReordering
AverageNonDroppableFrameRate
AVVideoDecompressionPropertiesKey
AVVideoEncoderSpecificationKey
EnableHardwareAcceleratedVideoEncoder
AVVideoMinimumFrameDuration
AVVideoFrameRateConversionAlgorithm
AVVideoFrameRateConversionAlgorithmFast
AVVideoFrameRateConversionAlgorithmPrecise
PerceptualQualityOptimization
AVVideoEmitSequencesAtSyncFramesOnly
AVVideoMinimumIntervalForSyncFrames
AVCaptureSessionPresetPhoto
AVCaptureSessionPresetPhoto2592x1936
AVCaptureSessionPresetHigh
AVCaptureSessionPresetHigh60
AVCaptureSessionPresetMedium
AVCaptureSessionPresetLow
AVCaptureSessionPreset352x288
AVCaptureSessionPreset640x480
AVCaptureSessionPreset1280x720
AVCaptureSessionPreset1280x720p60
AVCaptureSessionPreset1920x1080
AVCaptureSessionPreset3840x2160
AVCaptureSessionPresetiFrame960x540
AVCaptureSessionPresetiFrame1280x720
AVCaptureSessionPresetInputPriority
AVCaptureSessionPresetVoicemailGreeting
-[AVFigEndpointOutputDeviceImpl initWithFigEndpoint:]
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (self=%p, figEndpoint=%@)
figEndpoint != NULL
-[AVFigEndpointOutputDeviceImpl _figEndpointPropertyValueForKey:]
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Endpoint property '%@' not supported
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Endpoint property '%@' has value: %@
-[AVFigEndpointOutputDeviceImpl deviceType]
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  Only a subset of possible device types can be communicated by FigEndpoint
-[AVFigEndpointOutputDeviceImpl deviceSubType]
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  There is no way to discover detailed device subtype for most devices from FigEndpoint
-[AVFigEndpointOutputDeviceImpl isInUseByPairedDevice]
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  There is no way to discover connected paired devices from FigEndpoint
-[AVFigEndpointOutputDeviceImpl connectedPairedDevices]
Output device %@ screen %@
disable
-[AVFigEndpointOutputDeviceImpl _volumeDidChangeForEndpointWithID:]
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (self=%p, ID=%@, endpointID=%@)
-[AVFigEndpointOutputDeviceImpl _canSetEndpointVolumeDidChangeForEndpointWithID:]
-[AVFigEndpointOutputDeviceImpl configureUsingBlock:options:completionHandler:]
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (self=%p, configuratorBlock=%@, options=%@, completionHandler=%@)
FigRoutingContext is not available on this platform
+[AVOutputDevice(AVOutputDeviceFigEndpointImplFetching) outputDeviceWithFigEndpoint:]
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (endpoint=%@)
+[AVOutputDevice(AVOutputDeviceFigEndpointImplFetching) outputDeviceWithFigEndpoint:routingContextFactory:]
AVOutputDeviceGetFigEndpoint
<<<< AVOutputDevice (FigEndpoint) >>>> %s: AVOutputDevice %@ already bound to incompatible impl %@
request
TQ,R,N,V_requestID
B32@?0@"NSString"8Q16^B24
Accept
identity
Accept-Encoding
Keep-Alive
Connection
bytes=%llu-
Range
bytes=%llu-%llu
v32@?0@"NSURLSessionDataTask"8@"AVAssetCustomURLRequest"16^B24
com.apple.avfoundation.customurl.nsurlsession
T@"NSURLSession",&,N,V_session
bridge
T@"AVAssetCustomURLBridgeForNSURLProtocol",W,N,V_bridge
T^{_CFURLConnection=},N
com.apple.avfoundation.customurl.cfurlconnection
User-Agent
com.apple.avfoundation.authkeychain.callback
com.apple.avfoundation.authkeychain
Content-Range
bytes
Content-Length
timeMapping
T{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}},R,N,V_timeMapping
AVPropertyStorage queue for <%p>
AVPropertyStorageKeysWithValuesToGetFromPropertyStorageCacheOnThreadKey
AVPropertyStorageShouldUsePropertyStorageCacheOnThreadForAllKeysNotRequiringExplicitSignalKey
AVProperty storage must be provided with a block to obtain a default value
<%@: %p, input parameters = %@>
inputParameters
<%@: %p, track ID = %d, volume mix: %@>
effectParameters == nil || [effectParameters isMemberOfClass:[AVAudioMixSweepFilterEffectParameters class]]
The timeRange of a volume ramp must have a numeric start time and a numeric duration.
The time of a volume setting must be numeric.
audioTapProcessor
Tr^{opaqueMTAudioProcessingTap=},R,&,N
Tr^{opaqueMTAudioProcessingTap=},&,N
AVOutputContextDeviceGroupControlOptionCancelAddDeviceIfAuthRequired
AVOutputContextDestinationChangeInitiatedNotification
AVOutputContextDestinationChangeKey
AVOutputContextOutputDeviceDidChangeNotification
AVOutputContextGlobalOutputDeviceConfigurationDidChangeNotification
AVOutputContextOutputDevicesDidChangeNotification
AVOutputContextSetOutputDevicePasswordKey
AVOutputContextSetOutputDeviceCancelIfAuthRequiredKey
AVOutputContextAddOutputDeviceOptionAuthorizationToken
AVOutputContextAddOutputDeviceCancelIfAuthRequiredKey
AVOutputContextManagerOutputContextDidFailToConnectToOutputDeviceNotification
AVOutputContextManagerOutputDeviceKey
AVOutputContextManagerFailureReasonKey
AVOutputContextDeviceConnectionFailureReasonDeviceInUse
AVOutputContextDeviceConnectionFailureReasonDeviceOutOfRange
AVOutputContextDeviceConnectionFailureReasonNotAPeerInHomeGroup
AVOutputContextTypeSharedSystemAudio
AVOutputContextTypeSharedSystemScreen
AVOutputContextTypeSharedAudioPresentation
AVOutputContextTypeAudio
AVOutputContextTypeVideo
AVOutputContextTypeScreen
AVOutputContextTypeGroupControl
AVOutputContextProvidesControlForAllVolumeFeaturesDidChangeNotification
AVOutputContextVolumeDidChangeNotification
AVOutputContextCanSetVolumeDidChangeNotification
AVOutputContextCommunicationChannelOptionControlType
AVOutputContextCommunicationChannelControlTypeDirect
AVOutputContextCommunicationChannelControlTypeRelayed
AVOutputContextDestinationChangeCancellationReasonAuthorizationSkipped
outputcontext_trace
+[AVOutputContext defaultOutputContextImplClass]
<<<< AVOutputContext >>>> %s: Defaulting to AVOutputContext impl %@
com.apple.avfoundation.allow-system-wide-context
-[AVOutputContext initWithOutputContextImpl:]
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@)
com.apple.avfoundation.outputcontext.ivars
AVOutputContext_Impl
-[AVOutputContext setApplicationProcessID:]
<<<< AVOutputContext >>>> %s: called (self=%p, pid=%d)
-[AVOutputContext outputDevice]
<<<< AVOutputContext >>>> %s: returning device %@ (self=%p)
<<<< AVOutputContext >>>> %s: *** Fetching single output device from multi-select output context! ***
-[AVOutputContext setOutputDevice:options:completionHandler:]
<<<< AVOutputContext >>>> %s: called (self=%p, outputDevice=%@, options=%@, completionHandler=%@)
-[AVOutputContext setOutputDevice:options:completionHandler:]_block_invoke
<<<< AVOutputContext >>>> %s: Result: %@
v16@?0@"AVOutputContextDestinationChange"8
-[AVOutputContext setOutputDevice:forFeatures:]
<<<< AVOutputContext >>>> %s: called (self=%p, outputDevice=%@, features=%d)
-[AVOutputContext setOutputDevice:options:]
<<<< AVOutputContext >>>> %s: called (self=%p, outputDevice=%@, options=%@)
+[AVOutputContext resetOutputDeviceForAllOutputContexts]
<<<< AVOutputContext >>>> %s: called
-[AVOutputContext outputContextImpl:didInitiateDestinationChange:]
<<<< AVOutputContext >>>> %s: Posting %@ (self=%p, impl=%@) with payload %@
-[AVOutputContext outputContextImplDidChangeOutputDevice:]
<<<< AVOutputContext >>>> %s: Posting %@ (self=%p, impl=%@)
-[AVOutputContext outputContextImplDidChangeGlobalOutputDeviceConfiguration:]
-[AVOutputContext outputContextImplDidChangeOutputDevices:]
-[AVOutputContext setOutputDevices:]
<<<< AVOutputContext >>>> %s: called (self=%p, devices=%@)
-[AVOutputContext addOutputDevice:options:completionHandler:]
<<<< AVOutputContext >>>> %s: called (self=%p, device=%@, completionHandler=%@)
-[AVOutputContext addOutputDevice:options:completionHandler:]_block_invoke
-[AVOutputContext addOutputDevice:]
<<<< AVOutputContext >>>> %s: called (self=%p, device=%@)
-[AVOutputContext removeOutputDevice:]
-[AVOutputContext outputContextImplDidChangeProvidesControlForAllVolumeFeatures:]
-[AVOutputContext outputContextImplDidChangeVolume:]
-[AVOutputContext outputContextImplDidChangeCanSetVolume:]
-[AVOutputContext pausePlaybackOnAllOutputDevicesWithCompletionHandler:]
<<<< AVOutputContext >>>> %s: called (self=%p, completionHandler=%@
-[AVOutputContext pausePlaybackOnAllOutputDevicesWithCompletionHandler:]_block_invoke
<<<< AVOutputContext >>>> %s: pause finished (error=%@)
v16@?0@"NSError"8
-[AVOutputContext muteAllOutputDevicesWithCompletionHandler:]
-[AVOutputContext muteAllOutputDevicesWithCompletionHandler:]_block_invoke
-[AVOutputContext setCommunicationChannelDelegate:]
<<<< AVOutputContext >>>> %s: called (self=%p, delegate=%@)
-[AVOutputContext outputContextImplOutgoingCommunicationChannelDidBecomeAvailable:]
-[AVOutputContext outputContextImpl:didReceiveData:fromCommunicationChannel:]
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@, data=%@, channel=%@)
-[AVOutputContext outputContextImpl:didCloseCommunicationChannel:]
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@, channel=%@)
-[AVOutputContext outputContextImpl:didExpireWithReplacement:]
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@, replacementImpl=%@)
deviceName
-[AVOutputContextCommunicationChannel sendData:completionHandler:]
<<<< AVOutputContext >>>> %s: called (self=%p, data=%@, completionHandler=%@)
impl
T@"<AVOutputContextCommunicationChannelImpl>",R,N
com.apple.avfoundation.outputcontext.destinationchange
<%@: %p, status=%d, cancellationReason=%@>
-[AVOutputContextDestinationChange _setStatus:cancellationReason:]
<<<< AVOutputContext >>>> %s: called (self=%p, status=%d)
cancellationReason
com.apple.avfoundation.outputcontextmanager.ivars
-[AVOutputContextManager outputContextManagerImpl:observedFailureToConnectToOutputDevice:reason:]
runLoop
T^{__CFRunLoop=},R,N,V_runLoop
signalSource
T^{__CFRunLoopSource=},N,V_signalSource
signaled
TB,N,V_signaled
AVRunLoopConditionSignalRunLoopMode
AVLayerVideoGravityResize
AVLayerVideoGravityResizeAspect
AVLayerVideoGravityResizeAspectFill
vide
soun
text
clcp
meta
mobj
muxx
hapt
dpth
AVMediaCharacteristicVisual
AVMediaCharacteristicAudible
AVMediaCharacteristicLegible
AVMediaCharacteristicFrameBased
public.uses-wide-gamut-color-space
public.main-program-content
public.auxiliary-content
public.subtitles.forced-only
public.accessibility.transcribes-spoken-dialog
public.accessibility.describes-music-and-sound
public.easy-to-read
public.accessibility.describes-video
public.translation
public.translation.dubbed
public.translation.voice-over
com.apple.quicktime-movie
public.mpeg-4
com.apple.m4v-video
com.apple.m4a-audio
public.3gpp
public.3gpp2
com.apple.coreaudio-format
com.microsoft.waveform-audio
public.aiff-audio
public.aifc-audio
org.3gpp.adaptive-multi-rate-audio
public.ac3-audio
public.enhanced-ac3-audio
public.au-audio
public.mp3
com.apple.itunes-timed-text
com.scenarist.closed-caption
public.jpeg
com.adobe.raw-image
public.heic
public.avci
public.heif
public.tiff
com.apple.streamingkeydelivery.contentkey
com.apple.streamingkeydelivery.persistentcontentkey
preferredSoundCheckVolumeNormalization
providesPreciseDurationAndTiming
trackCount
trackIDs
alternateTrackGroups
mediaSelectionGroupDictionaries
T@"NSArray",R,N,G_mediaSelectionGroupDictionaries
T@"AVMetadataItem",R,N
lyrics
commonMetadata
playable
TB,R,N,GisPlayable
exportable
TB,R,N,GisExportable
readable
TB,R,N,GisReadable
composable
TB,R,N,GisComposable
compatibleWithSavedPhotosAlbum
TB,R,N,GisCompatibleWithSavedPhotosAlbum
compatibleWithAirPlayVideo
TB,R,N,GisCompatibleWithAirPlayVideo
SHA1Digest
canContainFragments
containsFragments
identifyingTagClass
identifyingTag
maximumVideoResolution
availableVideoDynamicRanges
instanceIdentifier
T@"NSString",R,N,G_instanceIdentifier
supportsAnalysisReporting
assetAnalysisMessages
T@"NSArray",R,N,G_assetAnalysisMessages
assetinspector_trace
T^{OpaqueFigFormatReader=},&,N,G_formatReader,S_setFormatReader:
playbackItem
T^{OpaqueFigPlaybackItem=},&,N,G_playbackItem,S_setPlaybackItem:
T^{OpaqueFigAsset=},R,N,G_figAsset
T^{OpaqueFigFormatReader=},R,N,G_formatReader
figChapterGroupInfo
figChapters
resolvedURL
originalNetworkContentURL
hasProtectedContent
TB,R,N,G_isStreaming
downloadToken
<%@: %p, volume mix: %@>
The timeRange of a volume ramp must not overlap the timeRange of an existing volume ramp.
ramps
T@"NSArray",C,N,G_ramps,S_setRamps:
through
, changing instantaneously to 
, holding steady at 
, interpolated linearly to 
volume %1.3f %@ time %1.3f%@
avoperation_trace
com.apple.avfoundation.avoperation.ivars
-[AVOperation evaluateDependenciesAndMarkAsExecuting]
<<<< AVOperation >>>> %s: already cancelled (self=%p)
<<<< AVOperation >>>> %s: marking as failed due to previous failure in dependency (self=%@)
<<<< AVOperation >>>> %s: marking as cancelled due to cancellation of dependency (self=%@)
requestedStatus != AVOperationStatusUnknown
isExecuting
isFinished
-[AVOperation _setStatus:error:resultingStatus:failureReason:]_block_invoke
<<<< AVOperation >>>> %s: advancing status from %d to %d (self=%p)
-[AVOperation didEnterTerminalState]
<<<< AVOperation >>>> %s: called (self=%@)
-[AVOperation markAsCompleted]
-[AVOperation markAsFailedWithError:]
<<<< AVOperation >>>> %s: called (self=%@, error=%@)
-[AVOperation markAsCancelled]
+[AVOperation(ArrayOfOperations) statusOfOperations:error:]
<<<< AVOperation >>>> %s: Got unrecognized status %d
-[AVBlockOperation start]
<<<< AVOperation >>>> %s: called (self=%p)
<<<< AVOperation >>>> %s: Client block cancelled with status %d (self=%p)
-[AVBlockOperation cancel]
<<<< AVOperation >>>> %s: called (self=%p, name=%@)
com.apple.avfoundation.globaloperationqueue.%p
<%@: %p, unfinishedOperations=%@>
unfinishedOperations
T@"NSArray",R,C
AVDepartureAnnouncingObjectMonitorKey
com.apple.avfoundation.waitForNotificationOrDeallocationOperation
AVOperationStatusResolveOldAndNew
<<<< AVOperation >>>> %s: Ignoring attempt to cancel before execution has begun.  The expectation is that the implementation will notice the cancelled state as part of normal execution
Cannot enter a terminal state until the receiver starts executing
Cannot regress from a terminal state %d to a non-terminal state %d
<<<< AVOperation >>>> %s: ignoring attempt to move from terminal status %d to status %d
delegateutils_trace
<%@: %p> delegate serialization queue
-[AVWeakReferencingDelegateStorage setDelegate:queue:]
<<<< AVDelegateUtilities >>>> %s: called (newDelegate=%@, newDelegateQueue=%p
AVPerformDelegateCallbackSynchronouslyForDelegateStorageIfCurrentDelegateQueueIsQueueElseDispatchToCurrentDelegateQueue
<<<< AVDelegateUtilities >>>> %s: called (delegateStorage = %@, expectedDelegateQueue = %p, delegateCallbackBlock = %p)
<<<< AVDelegateUtilities >>>> %s: current delegate: %@, current delegate queue: %p
<<<< AVDelegateUtilities >>>> %s: Invoking delegate callback synchronously
<<<< AVDelegateUtilities >>>> %s: Dispatching to queue %p
assetinspectorloader_trace
T@"AVWeakReference",R,N,G_weakReference
T^{OpaqueFigPlaybackItem=},R,N,G_playbackItem
classForTrackInspectors
T#,R,N,G_classForTrackInspectors
associatedWithFragmentMinder
TB,R,N,GisAssociatedWithFragmentMinder
fragmentMindingInterval
Td,N,G_fragmentMindingInterval,S_setFragmentMindingInterval:
keys
AVAsynchronousLoadingPropertyBatchIDKey
AVAsynchronousLoadingCompletionHandlerKey
com.apple.avfoundation.avasset.completionsQueue
-[AVFigAssetInspectorLoader _loadStatusForProperty:figAsset:error:]
<<<< AVAssetInspectorLoader >>>> %s: <%p> FigAssetGetStatusOfValueForProperty for property <%@> returned %d and load error %d - %@
-[AVFigAssetInspectorLoader statusOfValueForKey:error:]
<<<< AVAssetInspectorLoader >>>> %s: <%p> status requested for key %@ after loading was canceled
-[AVAsset statusOfValueForKey:error:] invoked with unrecognized key %@.
v24@?0@8^B16
%@ invoked with unrecognized keys %@.
(keys == nil) || [keys isKindOfClass:[NSArray class]]
[keysForCollectionKeys isKindOfClass:[NSDictionary class]]
[[keysForCollectionKeys objectForKey:thisKey] isKindOfClass:[NSArray class]]
-[AVFigAssetInspectorLoader loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:]
<<<< AVAssetInspectorLoader >>>> %s: <%p> loadValuesAsynchronouslyForKeys:%@ keysForCollectionKeys:%@ completionHandler:<%p>
-[AVAsset loadValuesAsynchronouslyForKeys:completionHandler:]
-[AVAsset loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:] invoked with unrecognized AVAssetTrack keys %@.
<<<< AVAssetInspectorLoader >>>> %s: <%p> FigAssetLoadValuesAsyncForProperties for properties %@ returned %d with loaded == %@ and batchID == %ld
<<<< AVAssetInspectorLoader >>>> %s: <%p> FigAssetLoadValuesAsyncForTrackProperties for properties %@ returned %d with loaded == %@ and batchID == %ld
AVAsynchronousLoadingTrackPropertyBatchIDKey
<<<< AVAssetInspectorLoader >>>> %s: <%p> storing completion handler [%p] for later invocation
<<<< AVAssetInspectorLoader >>>> %s: <%p> storing loading batch [%p] with %@
<<<< AVAssetInspectorLoader >>>> %s: <%p> invoking completion handler [%p] immediately
-[AVFigAssetInspectorLoader _invokeCompletionHandlerForLoadingBatches:]
<<<< AVAssetInspectorLoader >>>> %s: <%p> dispatching completion handler [%p]
assetCache
downloadDestinationURL
referenceRestrictions
ID3Metadata
preferredMediaSelection
trackGroups
audioAlternatesTrackGroup
subtitleAlternatesTrackGroup
canContainMovieFragments
containsMovieFragments
createFigAsset
<<<< AVAssetInspectorLoader >>>> %s: FigAssetCreateWithURL for URL <%@> returned %d
handleAndReflectFigAssetNotification
<<<< AVAssetInspectorLoader >>>> %s: <%p> got notification <%@>
handleFigAssetLoadingNotification
<<<< AVAssetInspectorLoader >>>> %s: <%p> got notification <%@> for batchID %@
handleFigAssetLoadingNotification_block_invoke
<<<< AVAssetInspectorLoader >>>> %s: <%p> loading batch [%p] has count of %d on entry
<<<< AVAssetInspectorLoader >>>> %s: <%p> loading batch [%p] has count of %d on exit with %@
+[AVAssetTrackInspector assetTrackInspectorWithAsset:trackID:trackIndex:]
<<<< AVAssetTrackInspector >>>> %s: Created track inspector of class %@ 
assettrackinspector_trace
figMediaType
TI,R,N,G_figMediaType
figTrackReader
T^{OpaqueFigTrackReader=},R,N,G_figTrackReader
figAssetTrack
T^{OpaqueFigAssetTrack=},R,N,G_figAssetTrack
decodable
TB,R,N,GisDecodable
TB,R,N,GisEnabled
selfContained
TB,R,N,GisSelfContained
totalSampleDataLength
mediaPresentationTimeRange
mediaDecodeTimeRange
requiresFrameReordering
mediaCharacteristics
T@"NSLocale",R,N
loudnessInfo
minSampleDuration
defaultAlternateGroupID
excludedFromAutoselectionInTrackGroup
TB,R,N,GisExcludedFromAutoselectionInTrackGroup
dimensions
playabilityValidationResult
-[AVTrackReaderInspector _initWithAsset:trackID:trackIndex:]
<<<< AVAssetTrackInspector >>>> %s: can't get FigTrackReader; invalid trackID and negative trackIndex
%c%c%c%c
containsMixedSubtitles
containsOnlyForcedSubtitles
fallbackTrack
associatedSubtitleTrack
pairedForcedOnlySubtitlesTrack
availableTrackAssociationTypes
-[AVFigAssetTrackInspector _initWithAsset:trackID:trackIndex:]
<<<< AVAssetTrackInspector >>>> %s: can't get FigAssetTrack; invalid trackID and negative trackIndex
com.apple.avfoundation.avassettrack.completionsQueue
-[AVFigAssetTrackInspector _loadStatusForFigAssetTrackProperty:error:]
<<<< AVAssetTrackInspector >>>> %s: FigAssetTrackGetStatusOfValueForProperty for property <%@> returned %d and load error %d - %@
-[AVAssetTrack statusOfValueForKey:error:] invoked with unrecognized key %@.
-[AVAssetTrack loadValuesAsynchronouslyForKeys:completionHandler:] invoked with unrecognized keys %@.
-[AVFigAssetTrackInspector loadValuesAsynchronouslyForKeys:completionHandler:]
<<<< AVAssetTrackInspector >>>> %s: FigAssetTrackLoadValuesAsyncForProperties for properties %@ returned %d with loaded == %@ and batchID == %d
<<<< AVAssetTrackInspector >>>> %s: storing completion handler [%p] for later invocation
<<<< AVAssetTrackInspector >>>> %s: storing loading batch [%p] with %@
-[AVFigAssetTrackInspector _invokeCompletionHandlerForLoadingBatches:]
<<<< AVAssetTrackInspector >>>> %s: dispatching completion handler [%p]
-[AVCompositionTrackReaderInspector segments]
<<<< AVAssetTrackInspector >>>> %s: [%p] called
mutableComposition
T^{OpaqueFigMutableComposition=},R,N,G_mutableComposition
handleFigAssetTrackNotification
<<<< AVAssetTrackInspector >>>> %s: got notification <%@> for batchID %@
handleFigAssetTrackNotification_block_invoke
<<<< AVAssetTrackInspector >>>> %s: loading batch [%p] has count of %d on entry
<<<< AVAssetTrackInspector >>>> %s: loading batch [%p] has count of %d on exit with %@
%c[%@ %@]
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
*** -%@ only defined for abstract class.  Define %@!
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
{ApplePortrait}
version
Ti,N,Vversion
apertureFocalRatio
Tf,N,VapertureFocalRatio
minimumApertureFocalRatio
Tf,N,VminimumApertureFocalRatio
maximumApertureFocalRatio
Tf,N,VmaximumApertureFocalRatio
luminanceNoiseAmplitude
Tf,N,VluminanceNoiseAmplitude
faceOrientation
Ti,N,VfaceOrientation
faceObservationsData
T@"NSData",&,N,VfaceObservationsData
indexesOfShallowDepthOfFieldObservations
T@"NSIndexSet",&,N,VindexesOfShallowDepthOfFieldObservations
focusRectangle
T{CGRect={CGPoint=dd}{CGSize=dd}},N,VfocusRectangle
Ti,R
T@"NSData",R
T@"NSIndexSet",R
Format description is required.
Clock is required.
Framework not configured for AVCaptureMetadataInput.
Metadata is required
Must have a valid start time
xxxxDefaultValuexxxx
AVLocalizedStringFromTableWithLocale
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/Utilities/AVBundleResources.m %s: AVLocalizedStringFromTableWithLocale unable to find a localized string; returning an empty string
AVGQCaptureMFOSupportsPhotoFormats
AVGQCaptureMFOVideoSettingsSupportCompressionProperties
AVGQCapturePhotoSettingsSupportRawEmbeddedThumbnailFormat
AVGQCaptureDevicesShouldBeSortedByDeviceType
AVGQCaptureAppsMayUseHEVC
AVGQCaptureADOSupportsAudioCaptureWithPhotoFormats
AVGQCaptureConnectionAlwaysSelectsStandardVISFor720p30
AVGQCaptureConnectionCinematicVISAwareAPIsAreAvailable
AVGQCaptureConnectionFrameRatePropertiesAreDeprecated
AVGQCaptureSessionUsesAppAudioSessionByDefault
AVGQCaptureMetadataOutputCapturesFacesByDefault
AVGQCaptureVPLOrientationAndMirroringPropertiesAreDeprecated
AVGQCaptureMFOStabilizationIsAlwaysOn
AVGQCaptureVDOFrameRatePropertiesAreDeprecated
AVGestaltGetBoolAnswer
<<<< AVGestalt >>>> %s: *** No such key: %@, returning NO
avgestalt_trace
referencedObject
T@,R,W
<%@: %p>
<%@: %p, referencedObject = %@>
{CGPoint=dd}
{CGRect={CGPoint=dd}{CGSize=dd}}
{CGSize=dd}
ccr_trace
%@ read/write queue
callbackContext != nil
-[AVCallbackContextRegistry registerCallbackContextObject:]_block_invoke
<<<< AVCallbackContextRegistry >>>> %s: registering observer %p (token %p), new observer count %d (self=%p)
callbackContextToken != AVCallbackContextTokenInvalid
-[AVCallbackContextRegistry unregisterCallbackContextForToken:]_block_invoke
<<<< AVCallbackContextRegistry >>>> %s: unregistering callback context token %p, new observer count %d (self=%p)
Cannot unregister token %p that was not vended by %@.  Break on AVCallbackContextRegistryUnrecognizedTokenBreak() to debug.
Cannot look up token %p that was not vended by %@.  Break on AVCallbackContextRegistryUnrecognizedTokenBreak() to debug.
avplayeritemmediadatacollector_trace
%@ global read/write queue
cmNotificationCenter != NULL
%@ serial queue
Cannot remove a listener %@ (callback %p) for %@ from object %p that was never added.  Break on AVCMNotificationDispatcherUnbalancedUnregistrationBreak() to debug.
callbackContextRegistry
T@"AVCallbackContextRegistry",R,N,G_callbackContextRegistry
CMNotificationCenter
T^{opaqueCMNotificationCenter=},R,N
listener
callback
T^?,R,N,V_callback
callbackContextToken
T^v,N,V_callbackContextToken
%@ %@
*** %@
 (raw)
 bracket:%d/%d lens:%d %@
pts:%f %d/%d%@%@ settings:%@
-[AVCapturePhoto sourceDeviceType]
<<<< AVCapturePhoto >>>> %s: focal length didn't match the lens aperture of either wide or tele! (%f)
customizer must be non nil
-[AVCapturePhoto CGImageRepresentation]
<<<< AVCapturePhoto >>>> %s: avcp_copyCGImageForCompressedData failed
-[AVCapturePhoto previewCGImageRepresentation]
<<<< AVCapturePhoto >>>> %s: Can't make a preview CGImage because no preview photo was requested
timestamp
rawPhoto
TB,R,GisRawPhoto
pixelBuffer
previewPixelBuffer
depthData
T@"AVDepthData",R
portraitEffectsMatte
T@"AVPortraitEffectsMatte",R,V_portraitEffectsMatte
T@"AVCaptureResolvedPhotoSettings",R
photoCount
sourceDeviceType
avcp_copyCGImageForUncompressedBuffer
<<<< AVCapturePhoto >>>> %s: Nil pixelBuffer
<<<< AVCapturePhoto >>>> %s: VTCreateCGImageFromCVPixelBuffer failed (%d)
avcp_copyCGImageForCompressedData
<<<< AVCapturePhoto >>>> %s: nil data passed
<<<< AVCapturePhoto >>>> %s: CGImageSourceCreateWithData failed
<<<< AVCapturePhoto >>>> %s: CGImageSourceCreateImageAtIndex failed
avcp_copyFirstAuxiliaryImageOfType
<<<< AVCapturePhoto >>>> %s: FigPhotoDecompressionSessionCreate failed (%d)
<<<< AVCapturePhoto >>>> %s: FigPhotoDecompressionSessionCreateContainer failed (%d)
<<<< AVCapturePhoto >>>> %s: FigPhotoDecompressionContainerGetImageCount failed (%d) or has no images
<<<< AVCapturePhoto >>>> %s: FigPhotoDecompressionContainerGetAuxiliaryImageCountForIndex failed (%d) or has no aux images
<<<< AVCapturePhoto >>>> %s: Found auxiliary image of type %d at index 0/%d
<<<< AVCapturePhoto >>>> %s: FigPhotoDecompressionContainerCreateAuxiliaryImageForIndex failed (%d)
<<<< AVCapturePhoto >>>> %s: FigPhotoDecompressionContainerCopyAuxiliaryImageMetadataForIndex failed (%d) - carrying on anyway
avtimedmetadatagroup_trace
items
Cannot create format description for metadata group %p%@
classifyingLabel
<%@: %p, timeRange=%@, items=%@>
timedMetadataGroupInternal
T@"AVTimedMetadataGroupInternal",R,N,G_timedMetadataGroupInternal
<%@: %p, startDate=%@, endDate=%@ classifyingLabel=%@ uniqueID=%@ items=%@>
startDate
endDate
[propertyList isKindOfClass:[NSDictionary class]]
discoveryTimestamp
modificationTimestamp
-[AVDateRangeMetadataGroup(AVDateRangeMetadataGroup_Local) _extractPropertiesFromTaggedRangeMetadataDictionary:]
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_StartDate must be an instance of NSDate
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_Duration must be an instance of NSDate
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_MetadataArray must be an instance of NSDate
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_Class must be an instance of NSDate
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_ID must be an instance of NSDate
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_DiscoveryTimestamp must be an instance of NSDate
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_ModificationTimestamp must be an instance of NSDate
dateRangeMetadataGroupInternal
T@"AVDateRangeMetadataGroupInternal",R,N,G_dateRangeMetadataGroupInternal
The identifier for one or more of the following items is invalid: %@.  See +[%@ %@] for a way to construct a valid identifier from a key and key space
Data type "%@" does not conform to any built-in data type.  See CMMetadataDataTypeRegistryRegisterDataType.
Metadata item %p has no value
No entry in format description %p for metadata item %p with identifier %@, data type %@ and extended language tag %@.  If you created this format description using -[%@ %@], make sure the instance of %@ used to create the format description contains a representative sample of metadata items which includes an item with the same combination of identifier, dataType, and extended language tag as this one
Value "%@" of class %@ in metadata item %p is not compatible with base data type %@
playableOffline
TB,R,N,GisPlayableOffline
avassetcache_trace
-[AVManagedAssetCache initWithURL:]
<<<< AVAssetCache >>>> %s: Initialized with URL %@
-[AVManagedAssetCache setMaxSize:]
<<<< AVAssetCache >>>> %s: Set maxSize = %lld
-[AVManagedAssetCache setMaxEntrySize:]
<<<< AVAssetCache >>>> %s: Set maxEntrySize = %lld
-[AVManagedAssetCache removeEntryForKey:]
<<<< AVAssetCache >>>> %s: Remove entry with key = %@
B32@?0@"AVMediaSelectionOption"8Q16^B24
AVPlatformIdentifierMacOS
AVPlatformIdentifierIOS
AVPlatformIdentifierWatchOS
AVPlatformIdentifierTVOS
platformutilities_trace
platformIdentifier
AVExecutionEnvironmentCurrentPlatformIdentifierKey
extendedLogDataStringEncoding
events
numberOfSegmentsDownloaded
numberOfMediaRequests
playbackStartDate
serverAddress
numberOfServerAddressChanges
playbackSessionID
playbackStartOffset
segmentsDownloadedDuration
durationWatched
numberOfStalls
numberOfBytesTransferred
transferDuration
observedBitrate
indicatedBitrate
indicatedAverageBitrate
averageVideoBitrate
averageAudioBitrate
numberOfDroppedVideoFrames
startupTime
downloadOverdue
observedMaxBitrate
observedMinBitrate
observedBitrateStandardDeviation
playbackType
mediaRequestsWWAN
switchBitrate
errorStatusCode
errorDomain
errorComment
Audio/Video
UserInterfaceSoundEffects
LiveAudio
Ringtone
RingtonePreview
PhoneCall
TTYCall
AVAudioSessionMediaPlayerOnlyModeMoviePlayback
AVAudioSessionMediaPlayerOnlyModeSpokenAudio
FindMyPhone
AVAudioSessionPickableRoutesDidChangeNotification
AVAudioSessionCanEnterPIPModeDidChangeNotification
avaudiosessionmediaplayeronly_trace
-[AVAudioSessionMediaPlayerOnly setActive:withFlags:error:]
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: <%p> setActive figPlayer <%p>
-[AVAudioSessionMediaPlayerOnly setCategory:error:]
 from
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: <%p> called with category = %@%@
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: audio category set %@
property
-[AVAudioSessionMediaPlayerOnly setMode:error:]
 from
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: <%p> called with mode = %@%@
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: mode set %@
-[AVAudioSessionMediaPlayerOnly _attachToPlayer:]
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: Attempt to attach AVAudioSessionMediaPlayerOnly to AVPlayer <%p> with no FigPlayer
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: set category failed
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: set mode failed
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: Attempt to attach AVAudioSessionMediaPlayerOnly to AVPlayer <%p> when already attached
T@"<AVAudioSessionDelegateMediaPlayerOnly>"
category
mode
preferredHardwareSampleRate
preferredIOBufferDuration
inputIsAvailable
currentHardwareSampleRate
currentHardwareInputNumberOfChannels
currentHardwareOutputNumberOfChannels
canEnterPIPMode
avaudiosession_fpNotificationCallback
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: called (self = %@, inNotificationName = %@)
non-resumable
avmediaselectiongroup_trace
<%@: %p, options = %@, allowsEmptySelection = %@>
+[AVMediaSelectionGroup mediaSelectionOptionsFromArray:filteredAndSortedAccordingToPreferredLanguages:]
<<<< AVMediaSelectionGroup >>>> %s: *** Could not canonicalize language: %@. ***
defaultOption
T@"AVMediaSelectionOption",R,N
allowsEmptySelection
AVMediaSelectionTrackOptionCharacteristicsKey
-[AVAssetMediaSelectionGroup mediaSelectionOptionWithPropertyList:]
<<<< AVMediaSelectionGroup >>>> %s: <%p> called with property list %@
AVMediaSelectionTrackOptionTrackIDKey
AVMediaSelectionTrackOptionSettingsKey
AVMediaSelectionKeyValueOptionMediaTypeKey
AVMediaSelectionKeyValueOptionGroupIDKey
<<<< AVMediaSelectionGroup >>>> %s: <%p> resolved to option %@
<%@: %p, language = %@%@>
, title = %@
, associated language = %@
, tagged media characteristics = {%@}
, default = YES
, auxiliary = YES
, fallback track or variant IDs = {%@}
, forced subtitles only
, associated forced-only option = <%@: %p>
'%c%c%c%c'
, mediaSubTypes = {%@}
, mediaType = '%@'%@%@%@%@%@%@%@
SUBTITLE_TRACK_DISPLAY_FORMAT
AVMediaSelectionOption
SDH_SUBTITLE_FORMAT
FORCEDONLY_SUBTITLE_FORMAT
EASYTOREAD_SUBTITLE_FORMAT
CC_SUBTITLE_FORMAT
DESCRIBESVIDEO_AUDIO_FORMAT
VOICEOVERTRANSLATION_AUDIO_FORMAT
AUDIOENCODING_AUDIO_FORMAT
UNKNOWN_LANGUAGE
displayNameWithLocale requires an NSLocale
unicodeLanguageIdentifier
unicodeLanguageCode
mediaSubTypes
displayName
[%.2f %.2f %.2f | %.2f %.2f %.2f | %.2f %.2f %.2f], pixelSize:%.3f mm%@, ref:{%.0fx%.0f}
, distortionCenter:{%.2f,%.2f}
intrinsicMatrix
T{?=[3]},R,N
intrinsicMatrixReferenceDimensions
extrinsicMatrix
T{?=[4]},R,N
pixelSize
lensDistortionLookupTable
inverseLensDistortionLookupTable
lensDistortionCenter
T{CGPoint=dd},R,N
inspector_trace
Output settings dictionary is empty and valid
Output settings dictionary is valid
Output settings dictionary contains one or more invalid keys: %@
outputSettingsDictionary != nil
Output settings dictionary does not contain any recognized keys
<%@: %p, outputSettingsDictionary=%@>
supportsEmptyOutputSettingsDictionary
compatibleMediaTypes
T@"NSSet",R,N
willYieldCompressedSamples
outputSettingsDictionary
T@"NSDictionary",R,N,V_outputSettingsDictionary
UTI != nil
Invalid file type UTI.  Available file types are: %@
<%@: %p, UTI = %@>
formatDesc != NULL
defaultFileExtension
supportedMediaTypes
supportsSampleReferences
figFormatReaderFileFormat
audioFileTypeID
TI,R,N
fileType != nil
Format ID '%@' is not compatible with file type %@
Cannot write non-interleaved audio to a file
fileType
[[fileType UTI] isEqualToString:AVFileTypeWAVE]
WAVE files cannot contain floating-point LPCM
WAVE files cannot contain big-endian LPCM
[[fileType UTI] isEqualToString:AVFileTypeAIFF]
AIFF files cannot contain floating-point LPCM
AIFF files cannot contain little-endian LPCM
[[fileType UTI] isEqualToString:AVFileTypeAIFC]
AIFC files cannot contain little-endian LPCM
The video codec %@ is not compatible with file type %@
Uncompressed video is not allowed for file type %@
not implemented
audioSettingsDictionary
avAudioSettingsDictionary != nil
AVAudioSettings dictionary must contain AVFormatIDKey
Cannot specify both AVEncoderBitRateKey and AVEncoderBitRatePerChannelKey
If one of AVLinearPCMIsFloatKey and AVLinearPCMBitDepthKey is specified, both must be specified
Bit depth can only be one of: %@
Bit depth hint can only be one of: %@
Bit rate strategy can only be one of: %@
Value for AVEncoderAudioQualityForVBRKey must be an instance of %@
Cannot specify a value for AVEncoderAudioQualityForVBRKey without also specifying AVAudioBitRateStrategy_Variable for AVEncoderBitRateStrategyKey
Floating-point LPCM must be 32-bit
Channel count must be positive
AudioChannelLayout is invalid
AudioChannelLayout channel count must be positive
AudioChannelLayout channel count does not match AVNumberOfChannelsKey channel count
Invalid value %.2f for AVSampleRateKey; sample rate must be between 8.0 and 192.0 kHz inclusive
Value for AVSampleRateConverterAlgorithmKey must be an instance of NSString
Unrecognized value "%@" for AVSampleRateConverterAlgorithmKey
The following keys are not allowed when format ID is '%@': %@
%g Hz is not a valid sample rate for Format ID '%@'.  Use kAudioFormatProperty_AvailableEncodeSampleRates (<AudioToolbox/AudioFormat.h>) to enumerate available rates for a given format.
%d is not a valid channel count for Format ID '%@'.  Use kAudioFormatProperty_AvailableEncodeNumberChannels (<AudioToolbox/AudioFormat.h>) to enumerate available channel counts for a given format.
Channel layout is not valid for Format ID '%@'.  Use kAudioFormatProperty_AvailableEncodeChannelLayoutTags (<AudioToolbox/AudioFormat.h>) to enumerate available channel layout tags for a given format.
Missing required key %@
-[AVAVAudioSettingsAudioOutputSettings getAudioStreamBasicDescription:forAudioFileTypeID:sourceFormatDescription:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/Utilities/AVAudioOutputSettings.m %s: Need to either provide fully-formed dictionary or source format description
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/Utilities/AVAudioOutputSettings.m %s: Invalid source format flags - not one of the supported lossless bit depths
Unrecognized bit rate strategy
Unrecognized value for %@: %@
width
height
cleanApertureDictionary
pixelAspectRatioDictionary
pixelTransferProperties
videoScalingProperties
dimensionsAreBoundingBox
minimumFrameDuration
frameRateConversionAlgorithm
allowWideColor
videoSettingsDictionary
Pixel buffer attributes width and height must be nonnegative
Value for AVVideoScalingModeKey must be one of: %@
Value for kCVPixelBufferMetalCompatibilityKey must be an NSNumber wrapping a BOOL
Compression property %@ is not supported for video codec type %@
Video codec type %@ expects a value for compression property %@ in a particular numeric range, but property value %@ is not numeric
Video codec type %@ does not allow values for %@ that are numerically less than %@
Video codec type %@ does not allow values for %@ that are numerically greater than %@
For compression property %@, video codec type %@ only allows the following values: %@
av_kVTPropertyInitialValueKey
For compression property %@, video codec type %@ only allows the value %@
avVideoSettingsDictionary != nil
AVVideoSettings dictionary must contain AVVideoCodecKey
AVVideoSettings dictionary must specify a height if it specifies a width
AVVideoSettings dictionary must specify a width if it specifies a height
AVVideoSettings dictionary must specify a positive width
AVVideoSettings dictionary must specify a positive height
AVVideoCompressionPropertiesKey dictionary must specify a positive value for AVVideoAverageBitRateKey
AVVideoCompressionPropertiesKey dictionary must specify a value between 0.0 and 1.0 for AVVideoQualityKey
AVVideoCompressionPropertiesKey dictionary must specify a non-negative value for AVVideoMaxKeyFrameIntervalDurationKey
AVVideoCompressionPropertiesKey dictionary must specify a positive value for AVVideoMaxKeyFrameIntervalKey
Value for AVVideoH264EntropyModeKey must be an instance of NSString
Value for AVVideoExpectedSourceFrameRateKey must be an instance of NSNumber
Value for AVVideoAllowFrameReorderingKey must be an instance of NSNumber
Value for AVVideoAverageNonDroppableFrameRateKey must be an instance of NSNumber
videoCodecType
videoEncoderSpecification
videoCompressionProperties
Dictionary for AVVideoPixelAspectRatioKey contains one or more unrecognized keys: %@
Value for AVVideoPixelAspectRatioKey must be an instance of NSDictionary
Dictionary for AVVideoPixelAspectRatioKey must specify a positive value for AVVideoPixelAspectRatioHorizontalSpacingKey
Dictionary for AVVideoPixelAspectRatioKey must specify a positive value for AVVideoPixelAspectRatioVerticalSpacingKey
Dictionary for AVVideoPixelAspectRatioKey must contain NSNumber values for both AVVideoPixelAspectRatioHorizontalSpacingKey and AVVideoPixelAspectRatioVerticalSpacingKey
Dictionary for AVVideoCleanApertureKey contains one or more unrecognized keys: %@
Clean aperture region must be contained within the bounds specified by width & height
Value for AVVideoCleanApertureKey must be an instance of NSDictionary
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureWidthKey
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureHeightKey
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureHorizontalOffsetKey
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureVerticalOffsetKey
Value for AVVideoCleanApertureWidthKey must be an instance of NSNumber
Value for AVVideoCleanApertureHeightKey must be an instance of NSNumber
Value for AVVideoCleanApertureHorizontalOffsetKey must be an instance of NSNumber
Value for AVVideoCleanApertureVerticalOffsetKey must be an instance of NSNumber
Dictionary for AVVideoCleanApertureKey must specify a positive value for AVVideoCleanApertureWidthKey
Dictionary for AVVideoCleanApertureKey must specify a positive value for AVVideoCleanApertureHeightKey
Dictionary for AVVideoColorPropertiesKey must contain all three color keys (AVVideoColorPrimariesKey, AVVideoTransferFunctionKey, AVVideoYCbCrMatrixKey) and it may not contain any other keys
Value for AVVideoColorPrimariesKey must be one of: %@
Value for AVVideoTransferFunctionKey must be one of: %@
Value for AVVideoYCbCrMatrixKey must be one of: %@
Dictionary for AVVideoColorPropertiesKey must be an NSDictionary
Dictionary for AVVideoAllowWideColorKey must be an NSNumber
AVVideoMinimumFrameDuration must be numeric
AVVideoMinimumFrameDuration must be greater than kCMTimeZero
Dictionary for AVVideoMinimumFrameDuration must be an NSDictionary
AVVideoFrameRateConversionAlgorithm must be either AVVideoFrameRateConversionAlgorithmFast or AVVideoFrameRateConversionAlgorithmPrecise
String for AVVideoFrameRateConversionAlgorithm must be an NSString
kVTDecompressionPropertyKey_FieldMode must be one of: kVTDecompressionProperty_FieldMode_BothFields, kVTDecompressionProperty_FieldMode_TopFieldOnly, kVTDecompressionProperty_FieldMode_BottomFieldOnly, kVTDecompressionProperty_FieldMode_SingleField, or kVTDecompressionProperty_FieldMode_DeinterlaceFields
String for kVTDecompressionPropertyKey_FieldMode must be an NSString
AVVideoEmitSequencesAtSyncFramesOnly must be greater than zero
AVVideoEmitSequencesAtSyncFramesOnly must be an NSNumber
AVVideoPixelAspectRatioKey can only be specified at the top level of the dictionary or in the AVVideoCompressionPropertiesKey sub-dictionary, not both
Pixel aspect ratio can only be specified once
Value for pixel aspect ratio must be an instance of NSDictionary
AVVideoCleanApertureKey can only be specified at the top level of the dictionary or in the AVVideoCompressionPropertiesKey sub-dictionary, not both
Clean aperture can only be specified once
Value for clean aperture must be an instance of NSDictionary
outputSampleRate
outputFormat
TI,N
outputFormatFlags
outputBitsPerChannel
outputChannelCount
outputDataRate
<%@: %p, minimum = %f, maximum = %f>
minimum
Td,R,N,V_minimum
maximum
Td,R,N,V_maximum
sampleBuffer may not be nil
sampleBuffer
T^{opaqueCMSampleBuffer=},R
sampleBufferWasDropped
droppedReason
metadataObjects may not be nil
metadataObjects
depthData may not be nil
depthDataWasDropped
AVAssetDownloadSessionDownloadSucceededNotification
AVAssetDownloadSessionDownloadFailedNotification
AVAssetDownloadSessionFileSizeAvailableNotification
AVAssetDownloadSessionLoadedTimeRangesChangedNotification
AVAssetDownloadSessionCurrentLoadedTimeRangesKey
AVAssetDownloadSessionNewlyLoadedTimeRangeKey
AVAssetDownloadSessionDidResolveMediaSelectionNotification
AVAssetDownloadSessionPriorityKey
AVAssetDownloadSessionProtectedContentSupportStorageURLKey
AVAssetDownloadSessionPurchaseBundleKey
AVAssetDownloadSessionAirPlayAuthorizationInfoKey
AVAssetDownloadSessionCachePrimingDownloadTokenKey
AVAssetDownloadSessioniTunesStoreContentInfoKey
AVAssetDownloadSessioniTunesStoreContentIDKey
AVAssetDownloadSessioniTunesStoreContentTypeKey
AVAssetDownloadSessioniTunesStoreContentUserAgentKey
AVAssetDownloadSessioniTunesStoreContentDownloadParametersKey
AVAssetDownloadSessioniTunesStoreContentDSIDKey
AVAssetDownloadSessioniTunesStoreContentPurchasedMediaKindKey
AVAssetDownloadSessionHTTPCookiesKey
AVAssetDownloadSessionClientBundleIdentifierKey
AVAssetDownloadSessionHTTPHeaderFieldsKey
AVAssetDownloadSessionClientAuditTokenKey
AVAssetDownloadSessionMaxSizeAllowedForCellularAccessKey
AVAssetDownloadSessionAllowsCellularAccessKey
AVAssetDownloadSessionMinimumRequiredMediaBitrateKey
AVAssetDownloadSessionMediaSelectionKey
AVAssetDownloadSessionDeleteDownloadWhenAssetFinalizesKey
AVAssetDownloadSessionLinkAssetURLToDestinationURLKey
AVAssetDownloadSessionShouldStoreEligibleContentKeysKey
AVAssetDownloadSessionAssetNameKey
AVAssetDownloadSessionAssetImageDataKey
AVAssetDownloadSessionOptimizeAccessForLinearMoviePlaybackKey
AVAssetDownloadSessionAlternativeConfigurationOptionsKey
AVAssetDownloadTaskMinimumRequiredMediaBitrateKey
AVAssetDownloadTaskMediaSelectionKey
AVAssetDownloadTaskShouldStoreEligibleContentKeysKey
AVAssetDownloadTaskDestinationURLKey
AVAssetDownloadTaskMinimumRequiredPresentationSizeKey
AVAssetDownloadTaskAllowHighDynamicRangeKey
download_trace
<%@: %p> read/write queue
URL != nil
[destinationURL isFileURL]
-[AVAssetDownloadSession initWithURL:destinationURL:options:]
<<<< AVAssetDownloadSession >>>> %s: [%p] Download from %@ to %@
AVAssetDownloadSessionMaxSizeAllowedForCellularAccessKey and AVAssetDownloadSessionAllowsCellularAccessKey options are incompatible
<<<< AVAssetDownloadSession >>>> %s: [%p] FigAssetCreateWithURL for URL <%@> returned %d
downloadToken > 0
-[AVAssetDownloadSession initWithDownloadToken:]
<<<< AVAssetDownloadSession >>>> %s: [%p] Called with %lld
[asset isKindOfClass:[AVURLAsset class]]
-[AVAssetDownloadSession initWithAsset:destinationURL:options:]
<<<< AVAssetDownloadSession >>>> %s: [%p] Called with asset:%@ destinationURL:%@
-[AVAssetDownloadSession start]_block_invoke
<<<< AVAssetDownloadSession >>>> %s: [%p] Start download
<<<< AVAssetDownloadSession >>>> %s: [%p] Going from paused to start download
-[AVAssetDownloadSession start]
<<<< AVAssetDownloadSession >>>> %s: Failed to start - %@
-[AVAssetDownloadSession pause]_block_invoke
<<<< AVAssetDownloadSession >>>> %s: [%p] Pause download
-[AVAssetDownloadSession stop]_block_invoke
<<<< AVAssetDownloadSession >>>> %s: [%p] Stop download
destinationURL
fileSize
availableFileSize
countOfBytesReceived
resolvedMediaSelection
T@"AVMediaSelection",R,N
NULL figAsset
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _setFileFigAsset:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVAssetDownloadSession.m
figAsset already set
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _transitionToTerminalStatus:error:]_block_invoke
failed
<<<< AVAssetDownloadSession >>>> %s: [%p] Download %s
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _primeCacheOnDispatchQueue]
<<<< AVAssetDownloadSession >>>> %s: [%p] Called
<<<< AVAssetDownloadSession >>>> %s: Failed to prime cache - %@
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _primeCache]
<<<< AVAssetDownloadSession >>>> %s: [%p] Priming cache with download token %@
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _readyForInspection]
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _verifyDownloadConfigurationForAssetType]
<<<< AVAssetDownloadSession >>>> %s: Must initialize AVAssetDownloadSession with initWithAsset:destinationURL:options: for streaming assets.
avAssetDownloadSession_figAssetNotificationCallback
<<<< AVAssetDownloadSession >>>> %s: [%p] called with notification name %@
<<<< AVAssetDownloadSession >>>> %s: Failed to load property %@ - %@
<<<< AVAssetDownloadSession >>>> %s: Failed to download to destination - %@
avAssetDownloadSession_figPlaybackItemNotificationCallback
<<<< AVAssetDownloadSession >>>> %s: [%p] called with notification name %@ payload %@
<<<< AVAssetDownloadSession >>>> %s: Failed to make ready for inspection - %@
avAssetDownloadSession_figAssetDownloaderNotificationCallback
avplayeritemoutput_trace
<%@: %p> timebase read/write queue
-[AVPlayerItemOutput _itemTimeForHostTimeAsCMTime:]
<<<< AVPlayerItemOutput >>>> %s: Unable to convert host time stamp to item time. Client sees kCMTimeInvalid.
suppressesPlayerRendering
AVPlayerItemVideoOutput does not support compressed output
-[AVPlayerItemVideoOutput setUpWithOutputSettings:outputSettingsArePixelBufferAttributes:withExceptionReason:]
<<<< AVPlayerItemOutput >>>> %s: FigVisualContextCreateBasic failed: %d
<<<< AVPlayerItemOutput >>>> %s: FigVisualContextSetImageAvailableSequentialCallback failed: %d
AVPlayerItemOutput queue
-[AVPlayerItemVideoOutput requestNotificationOfMediaDataChangeWithAdvanceInterval:]_block_invoke
<<<< AVPlayerItemOutput >>>> %s:  Error: requestNotificationOfMediaDataChangeAsSoonAsPossible was valid when requesting requestNotificationOfMediaDataChangeWithAdvanceInterval. requestNotificationOfMediaDataChangeAsSoonAsPossible has been deactivated
<<<< AVPlayerItemOutput >>>> %s: scheduled wakeup for now
<<<< AVPlayerItemOutput >>>> %s: scheduled wakeup in %.3f s
-[AVPlayerItemVideoOutput requestNotificationOfMediaDataChangeAsSoonAsPossible]_block_invoke
<<<< AVPlayerItemOutput >>>> %s:  Error: requestNotificationOfMediaDataChangeWithAdvanceInterval was valid when requesting requestNotificationOfMediaDataChangeAsSoonAsPossible. requestNotificationOfMediaDataChangeWithAdvanceInterval is deactivated
-[AVPlayerItemVideoOutput _copyPixelBufferForItemTimeWithOptions:itemTimeForDisplay:options:]
<<<< AVPlayerItemOutput >>>> %s: Unable to copy next image from visual context. Bailing.
<<<< AVPlayerItemOutput >>>> %s: FigVisualContextCopyImageForTime2 did not provide a imageOriginalTimeOut value. Bailing.
-[AVPlayerItemVideoOutput _dispatchOutputSequenceWasFlushed]
<<<< AVPlayerItemOutput >>>> %s: Dispatching -outputSequenceWasFlushed:
-[AVPlayerItemVideoOutput _dispatchOutputSequenceWasFlushed]_block_invoke
<<<< AVPlayerItemOutput >>>> %s: Sending -outputSequenceWasFlushed: to delegate
T@"<AVPlayerItemOutputPullDelegate>",R,N
AVPlayerItemVideoOutput_timebaseNotificationCallback_block_invoke
AVPlayerItemVideoOutput_figVCSequentialAvailable_block_invoke
avcapturedeviceformat_trace
'%@'/'%@' 
%4dx%4d, {%2d-%3d fps}
, HRSI:%4dx%4d
, fov:%2.3f
, binned
, supports vis
, max zoom:%2.2f (upscales @%2.2f)
, AF System:%d
, ISO:%.1f-%.1f
, SS:%f-%f
, supports HDR
, supports wide color
, *EXPERIMENTAL*
, supports depth
, supports still image only depth
, supports streaming-only depth
SR=%0.0f,FF=%u,BPP=%u,FPP=%u,BPF=%u,CH=%u,BPC=%u
-[AVCaptureDeviceFormat isVideoStabilizationModeSupported:]
CIPhotoEffectChrome
CIPhotoEffectFade
CIPhotoEffectInstant
CIPhotoEffectMono
CIPhotoEffectNoir
CIPhotoEffectProcess
CIPhotoEffectTonal
CIPhotoEffectTransfer
CIPhotoEffect3DVivid
CIPhotoEffect3DVividWarm
CIPhotoEffect3DVividCool
CIPhotoEffect3DDramatic
CIPhotoEffect3DDramaticWarm
CIPhotoEffect3DDramaticCool
CIPhotoEffect3DSilverplate
CIPhotoEffect3DNoir
CIDepthEffect
CIPhotoEffect3DCommercial
CIPortraitEffectLight
CIPortraitEffectCommercial
CIPortraitEffectContour
CIPortraitEffectBlack
CIPortraitEffectBlackoutMono
videoSupportedFrameRateRanges
videoFieldOfView
videoBinned
TB,R,N,GisVideoBinned
videoStabilizationSupported
videoMaxZoomFactor
videoZoomFactorUpscaleThreshold
minExposureDuration
maxExposureDuration
minISO
maxISO
videoHDRSupported
TB,R,N,GisVideoHDRSupported
highResolutionStillImageDimensions
T{?=ii},R,N
autoFocusSystem
supportedColorSpaces
videoMinZoomFactorForDepthDataDelivery
videoMaxZoomFactorForDepthDataDelivery
supportedDepthDataFormats
unsupportedCaptureOutputClasses
AVCaptureVideoStabilizationModeOff
AVCaptureVideoStabilizationModeStandard
AVCaptureVideoStabilizationModeCinematic
AVCaptureVideoStabilizationModeAuto
<%@: %p %d - %d>
minFrameRate
maxFrameRate
maxFrameDuration
com.apple.avfoundation.avfragmentedassetminder
An %@ cannot mind fragmented assets more frequently than once per millisecond (requested interval was %f)
An %@ cannot mind instances of %@
%@ cannot add an %@ that's already being minded by another fragment minder
*** -[%@ addFragmentedAsset:] specifies an asset that's already associated with a fragment minder. Ignoring.
mindingInterval
assets
com.apple.avfoundation.metadataoutput.objectqueue
avcapturemetadataoutput_trace
NULL objectsCallbackQueue passed
metadataObjectsDelegate
-[AVCaptureMetadataOutput setMetadataObjectsDelegate:queue:]
<<<< AVCaptureMetadataOutput >>>> %s: (%p) setting metadataObjectsDelegate to %@ (%p)
mdta/com.apple.quicktime.detected-machine-readable-code.UPCE
mdta/com.apple.quicktime.detected-machine-readable-code.Code39
mdta/com.apple.quicktime.detected-machine-readable-code.Code39Checksum
mdta/com.apple.quicktime.detected-machine-readable-code.EAN13
mdta/com.apple.quicktime.detected-machine-readable-code.EAN8
mdta/com.apple.quicktime.detected-machine-readable-code.Code93
mdta/com.apple.quicktime.detected-machine-readable-code.Code128
mdta/com.apple.quicktime.detected-machine-readable-code.QR
mdta/com.apple.quicktime.detected-machine-readable-code.PDF417
mdta/com.apple.quicktime.detected-machine-readable-code.Aztec
mdta/com.apple.quicktime.detected-machine-readable-code.DataMatrix
mdta/com.apple.quicktime.detected-machine-readable-code.I2of5
mdta/com.apple.quicktime.detected-machine-readable-code.ITF14
Unsupported type found - use -availableMetadataObjectTypes
-[AVCaptureMetadataOutput setMetadataObjectTypes:]
<<<< AVCaptureMetadataOutput >>>> %s: metadata object types: %@
Unsupported - use -isFaceTrackingSupported
availableMetadataObjectTypes
Unsupported - use -isOfflineVideoStabilizationMotionMetadataSupported
AVMetadataObjectTypeFace
AVMetadataObjectTypeTrackedFaces
AVMetadataObjectTypeUPCECode
AVMetadataObjectTypeCode39Code
AVMetadataObjectTypeCode39Mod43Code
AVMetadataObjectTypeEAN13Code
AVMetadataObjectTypeEAN8Code
AVMetadataObjectTypeCode93Code
AVMetadataObjectTypeCode128Code
AVMetadataObjectTypeQRCode
AVMetadataObjectTypePDF417Code
AVMetadataObjectTypeAztecCode
AVMetadataObjectTypeDataMatrixCode
AVMetadataObjectTypeInterleaved2of5Code
AVMetadataObjectTypeITF14Code
-[AVCaptureMetadataOutput setDelegateOverride:delegateOverrideCallbackQueue:]
<<<< AVCaptureMetadataOutput >>>> %s: (%p) setting delegateOverride to %@ (%p)
T@"<AVCaptureMetadataOutputObjectsDelegate>",R,N
metadataObjectsCallbackQueue
metadataObjectTypes
rectOfInterest
T{CGRect={CGPoint=dd}{CGSize=dd}},N
AVPixelBufferAttributeMediatorPixelBufferAttributesDidChangeNotification
avpixelbufferattributemediator_trace
AVSampleBufferDisplayLayerFailedToDecodeNotification
AVSampleBufferDisplayLayerFailedToDecodeNotificationErrorKey
The control timebase can not be changed after the display layer has been added to a synchronizer
The display layer cannot be added to a synchronizer if the control timebase has already been set.
-[AVSampleBufferDisplayLayer(AVSampleBufferDisplayLayer_Local) _createVideoQueue]
<<<< AVSampleBufferDisplayLayer >>>> %s: failed to create video queue: %d
-[AVSampleBufferDisplayLayer(AVSampleBufferDisplayLayer_Local) _updateLayerTreeGeometryWithVideoGravity:bounds:presentationSize:]
<<<< AVSampleBufferDisplayLayer >>>> %s: FigVideoQueueSetProperty returned %d
avsamplebufferdisplaylayer_trace
AVSampleBufferDisplayLayerQueue
AVSampleBufferDisplayLayerCallbackListQueue
AVSampleBufferDisplayLayerFlushCallbackQueue
AVSampleBufferDisplayLayer <%p>
AVSampleBufferDisplayLayer <%p> (content layer)
-[AVSampleBufferDisplayLayer init]
<<<< AVSampleBufferDisplayLayer >>>> %s: [%p] created
-[AVSampleBufferDisplayLayer dealloc]
<<<< AVSampleBufferDisplayLayer >>>> %s: [%p]
An AVSampleBufferDisplayLayer object, configured to request more media data via requestMediaDataWhenReadyOnQueue:usingBlock:, was released without first having been messaged stopRequestingMediaData:.
AVSampleBufferDisplayLayer_ContentLayer_SublayerTransform
AVSampleBufferDisplayLayer_ContentLayer_Position
-[AVSampleBufferDisplayLayer _transformToAbsoluteAnimationOfBounds:]_block_invoke
<<<< AVSampleBufferDisplayLayer >>>> %s: boundsAnimation: currentPresentationSize(w=%g, h=%g), deltaSize(w=%g, h=%g) ---> targetSize(w=%g, h=%g)
-[AVSampleBufferDisplayLayer setRenderSynchronizer:error:]
<<<< AVSampleBufferDisplayLayer >>>> %s: [%p] trying to add to a synchronizer (%p) when we already are added to a synchronizer (%p).
The DisplayLayer cannot be added to a Synchronizer when it has already been added to a Synchronizer.
controlTimebase
T^{OpaqueCMTimebase=},&
Ignoring enqueueSampleBuffer: because status is "failed"
AVSampleBufferDisplayLayer: No formatDescription found in sampleBuffer
-[AVSampleBufferDisplayLayer(AVSampleBufferDisplayLayerQueueManagement) flushWithRemovalOfDisplayedImage:completionHandler:]
<<<< AVSampleBufferDisplayLayer >>>> %s: FigVideoQueueFlush returned %d
-[AVSampleBufferDisplayLayer(AVSampleBufferDisplayLayerQueueManagement) _flushComplete]
<<<< AVSampleBufferDisplayLayer >>>> %s: flush completed but no pending callback block found
-[AVVideoPerformanceMetrics numberOfDroppedVideoFrames]
<<<< AVSampleBufferDisplayLayer >>>> %s: droppedVideoFrames %lu = %lu droppedFromImageQueue + %lu rejectedByImageQueue + %lu droppedByVideoDecoder
totalNumberOfVideoFrames
numberOfCorruptedVideoFrames
totalFrameDelay
AVSampleBufferDisplayLayerTransformForPlacement
<<<< AVSampleBufferDisplayLayer >>>> %s: Return CATransform3DIdentity because presentationSize or container.size is CGSizeZero
_figVideoQueueDecodeError
<<<< AVSampleBufferDisplayLayer >>>> %s: Received decode error from video queue, %@
_figVideoQueueFailed
<<<< AVSampleBufferDisplayLayer >>>> %s: [%p] handling VideoQueueFailed with error (%d).
enqueueSample
<<<< AVSampleBufferDisplayLayer >>>> %s: enqueueFrame failed returned %d
StreamingContentKeyRequestRequiresPersistentKey
StreamingContentKeyRequiresiTunesProvisioningKey
AVAssetResourceLoadingRequestGotUnhandledContentKeyRequestNotification
_requestID
_requestInfo
T^{__CFDictionary=},R,N,V_requestInfo
avassetresourceloader_trace
com.apple.avfoundation.avassetresourceloader.state
com.apple.avfoundation.avassetresourceloader.contentInformationCaching
com.apple.avfoundation.avassetresourceloader.handler
AVAssetResourceLoader
com.apple.avfoundation.avassetresourceloader.authhandler
AVAssetResourceLoader-authentication
NULL delegateQueue passed
-[AVAssetResourceLoader _performDelegateSelector:withObject:representingNewRequest:key:fallbackHandler:]_block_invoke
<<<< AVAssetResourceLoader >>>> %s: AVAssetResourceLoader delegate does not respond to selector %@
v16@?0@"<AVAssetResourceLoaderDelegate>"8
T@"<AVAssetResourceLoaderDelegate>",R,W,N
preloadsEligibleContentKeys
The specified challenge must be an instance of NSURLAuthenticationChallenge previously provided by AVAssetResourceLoader
The specified credential must be an instance of NSURLCredential
URLSessionDataDelegate
T@"<NSURLSessionDataDelegate>",R,N
URLSessionDataDelegateQueue
T@"NSOperationQueue",R,N
URLSession
T@"NSURLSession",&,N
<%@: %p, content type = "%@", content length = %lld, byte range access supported = %@, disk caching permitted = %@, renewal date = %@>
Accept-Ranges
no-cache
Content-Type
contentType
allowedContentTypes
contentLength
byteRangeAccessSupported
TB,N,GisByteRangeAccessSupported
renewalDate
com.apple.avfoundation.avassetresourceloadingdatarequest
<%@: %p, requested offset = %lld, requested length = %lld, requests all data to end of resource = %@, current offset = %lld>
-[AVAssetResourceLoadingDataRequest respondWithData:]
<<<< AVAssetResourceLoader >>>> %s: data for current offset %lld of length %lld provided to %@
requestedOffset
requestedLength
requestsAllDataToEndOfResource
currentOffset
com.apple.avfoundation.avassetresourceloadingrequest.dataCaching
bytes=%lld-%lld
AVAssetResourceLoadingRequest %p deallocated while a streaming content key request is still being generated; leaking completion handler. Either keep a retain of the AVAssetResourceLoadingRequest in -generateStreamingContentKeyRequestDataAsynchronouslyForApp's completionHandler or wait until completionHandler is called before calling -finishLoading/-finishLoadingWithError:.
<%@: %p, URL request = %@, request ID = %llu, content information request = %@, data request = %@>
-[AVAssetResourceLoadingRequest _appendToCachedData:]
<<<< AVAssetResourceLoader >>>> %s: caching data for current offset %lld of length %lld that was provided to %@
-[AVAssetResourceLoadingRequest _appendToCachedData:]_block_invoke
<<<< AVAssetResourceLoader >>>> %s: cached data has grown to length %lld for %@
Already have a cachedContentInformation
-[AVAssetResourceLoadingRequest _sendResponseInfoToCustomURLHandler]
<<<< AVAssetResourceLoader >>>> %s: swallowing sendResponseInfo for cancelled request %@
-[AVAssetResourceLoadingRequest _sendDataToCustomURLHandler:]
<<<< AVAssetResourceLoader >>>> %s: swallowing sendData with data of len %lu for cancelled request %@
-[AVAssetResourceLoadingRequest _sendFinishLoadingToCustomURLHandlerWithError:]
<<<< AVAssetResourceLoader >>>> %s: swallowing finishLoading for cancelled request %@
should never be called for FigCustomURLLoader initiated requests.
-[AVAssetResourceLoadingRequest _sendDictionaryForURLRequest:context:]
<<<< AVAssetResourceLoader >>>> %s: swallowing dictionary response %@ for cancelled request %@
no contentKeySession
-[AVAssetResourceLoadingRequest finishLoading]
<<<< AVAssetResourceLoader >>>> %s: called on %@
*** -[AVAssetResourceLoadingRequest finishLoading] was sent to an instance of AVAssetResourceLoadingRequest that was already finished. Ignoring.
Must respond with a contentType contained in AVAssetResourceLoadingContentInformationRequest.allowedContentTypes.
<<<< AVAssetResourceLoader >>>> %s: [AVAssetResourceLoadingRequest finishLoading] is called for a content key request while an AVContentKeySession instance is attached to AVURLAsset. Generating event
Location
-[AVAssetResourceLoadingRequest finishLoadingWithError:]
<<<< AVAssetResourceLoader >>>> %s: called with error %@ on %@
*** -[AVAssetResourceLoadingRequest finishLoadingWithError:] was sent to an instance of AVAssetResourceLoadingRequest that was already finished. Ignoring.
StreamingContentKeyIsForAirPlayKey
kFigCPEError_InvalidState
Cryptor is not available to create key request.
-[AVAssetResourceLoadingRequest createKeyRequestDataUsingCryptorForApp:contentIdentifier:options:performAsync:error:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVAssetResourceLoader.m
Cannot generate content key request when AVAsset is attached to AVContentKeySession
appIdentifier != nil
contentIdentifier != nil
A streaming content key request is already being generated on this AVAssetResourceLoadingRequest.
keyVendorResponse != NULL
-[AVAssetResourceLoadingRequest persistentContentKeyFromKeyVendorResponse:options:error:]
T@"NSURLRequest",R,N
TB,R,N,GisFinished
cancelled
TB,R,N,GisCancelled
contentInformationRequest
T@"AVAssetResourceLoadingContentInformationRequest",R,N
dataRequest
T@"AVAssetResourceLoadingDataRequest",R,N
response
T@"NSURLResponse",C,N
redirect
T@"NSURLRequest",C,N
requestor
T@"AVAssetResourceLoadingRequestor",R,N
providesExpiredSessionReports
customURLHandlerHandleRequestCallback
<<<< AVAssetResourceLoader >>>> %s: called with handlingClient: %@, handler: %@, requestInfo: <%p>, requestID %llu
not an AVAssetResourceLoader
mismatched handler
customURLHandlerRequestCancelled
customURLAuthHandlerHandleRequestCallback
customURLAuthHandlerRequestCancelled
AVSampleBufferRenderSynchronizerRateDidChangeNotification
avsamplebufferrendersynchronizer_trace
-[AVSampleBufferRenderSynchronizer init]
<<<< AVSampleBufferRenderSynchronizer >>>> %s: called
com.apple.avfoundation.avsamplebufferrendersynchronizer.ratequeue
com.apple.avfoundation.avsamplebufferrendersynchronizer.synchronizeraccessqueue
com.apple.avfoundation.avsamplebufferrendersynchronizer.rendererlistqueue
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Failed to create FigSampleBufferRenderSynchronizer: %@
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] created (internal: %p)
-[AVSampleBufferRenderSynchronizer dealloc]
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] dealloc
newRate >= 0.0
Invalid renderer configuration; forcing rate to 0. rather than %1.3f
-[AVSampleBufferRenderSynchronizer setRate:time:]
<<<< AVSampleBufferRenderSynchronizer >>>> %s: error: %@
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] rate: %1.3f; time: %1.3f; fig error: %d
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) _addRenderer:error:]
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Setting self as render synchronizer on renderer (%p) failed
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) _addRenderer:error:]_block_invoke
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Error adding an AudioRenderer to the FigSynchronizer: %d
invalid renderer
Cannot add renderer %p %@
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) addRenderer:]
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Failed to add Renderer %@; error returned from _addRenderer: %@
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) _createOnceTimebaseObserverForRemovalOfRenderer:atTime:]_block_invoke
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] removalBlock called; weakToSelf: %p; weakToRenderer: %p
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) _scheduleTimedRendererRemovalAtTime:atTime:withClientCompletionHandler:]
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] called for renderer %p; time: %1.3f
<<<< AVSampleBufferRenderSynchronizer >>>> %s: unknown renderer: %p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] old once observer already fired before we could invalidate it (renderer: %p)
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] invalidated old scheduled removal of renderer %p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] successfully scheduled removal of renderer %p at time %1.3f
renderers
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererRestrictions) _canAddRendererInternal:error:]
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Trying to add a renderer (%p) to same synchronizer
The SampleBufferRenderer cannot be added to a Synchronizer more than once.
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Trying to add multiple audio renderers when disallowed
Multiple AudioRenderers not allowed when using Long Form Routing Policy.
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererRestrictions) _rendererConfigurationIsValid:]
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Too many audio renderers
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerTimeObservation) removeTimeObserver:]
<<<< AVSampleBufferRenderSynchronizer >>>> %s: called (self = <%p>, time observer = <%p>)
An instance of AVSampleBufferRenderSynchronizer cannot remove a time observer that was added by a different instance of AVSampleBufferRenderSynchronizer.
avrendersynchronizer_timebaseRateChanged
<<<< AVSampleBufferRenderSynchronizer >>>> %s: called (center=%@, listener=%p, name=%@, object=%p, payload=%@)
renderer
onceTimebaseObserver
clientCompletionHandler
avrendersynchronize_cleanUpAllAddedRenderers
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Cleaning-up renderer %p for synchronizerInternal %p
AVSampleBufferRenderSynchronizerFigFactoryKey
BOOL AVCanWriteFilesToDirectoryAtURL(NSURL *, NSError **)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/Utilities/AVFileSystemUtilities.m
directoryURL != nil
filesystemutilities_trace
TemporaryFileForAVFoundation
AVCanWriteFilesToDirectoryAtURL
<<<< AVFileSystemUtilities >>>> %s: Failed to remove temporary file at %@: %@
AVCGColorAttributes
Not available.  Use %@ instead
textMarkupAttributes
textSelector
AVPlayerMediaSelectionCriteria is not compatible with deprecated garbage collection
<%@: %p, preferredLanguages = %@, preferredMediaCharacteristics = %@
, preferredMediaSubTypes = %@
, precludedMediaSubTypes = %@
, preferMultichannelAudio
, precludeMultichannelAudio
preferredLanguages
preferredMediaCharacteristics
preferredLanguages must contain only items of type NSString
preferredMediaCharacteristics must contain only items of type NSString
preferredMediaSubTypes must contain only items of type NSNumber
precludedMediaSubTypes must contain only items of type NSNumber
compositingRequest
T@"AVAsynchronousVideoCompositionRequest",&,N,V_compositingRequest
cancellationTest
T@?,C,N,V_cancellationTest
defaultCIContextProvider
T@?,C,N,V_defaultCIContextProvider
T@?,C,N,V_completionHandler
sourceCIImage
T@"CIImage",&,N,V_sourceCIImage
sourcePBuf
T^{__CVBuffer=},&,N,V_sourcePBuf
-[AVAsynchronousCIImageFilteringRequest sourceImage]
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: source CIImage %@ (colorSpace %@) from CVPixelBuffer %@ (attachments %@)
-[AVAsynchronousCIImageFilteringRequest finishWithImage:context:]
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called with CIImage %@
filteredImage != nil
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: CIImage %@ (colorSpace %@) already has a CVPixelBuffer %@ (attachments %@)
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: rendered CIImage %@ (colorSpace %@) to CVPixelBuffer %@ (attachments %@)
-[AVAsynchronousCIImageFilteringRequest finishWithError:]
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called with error %@
compositionTime
sourceImage
T@"CIImage",R,N
T@?,R,N,V_handler
sourceTrackPreferredTransform
T{CGAffineTransform=dddddd},N,V_sourceTrackPreferredTransform
T{?={?=qiIq}{?=qiIq}},R,N,V_timeRange
TB,R,D,N
T@"NSArray",R,N,V_requiredSourceTrackIDs
Ti,R,D,N
avcifilter_trace
com.apple.AVStorylineCustomVideoCompositor._renderContextQ
-[AVCoreImageFilterCustomVideoCompositor renderContextChanged:]
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called
-[AVCoreImageFilterCustomVideoCompositor startVideoCompositionRequest:]
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called with request %@
Expecting video composition to contain only AVCoreImageFilterVideoCompositionInstruction
@"CIContext"8@?0
-[AVCoreImageFilterCustomVideoCompositor cancelAllPendingVideoCompositionRequests]
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: cancelling begin
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: cancelling done
shouldCancelAllRequests
TB,V_shouldCancelAllRequests
filteringRequestsInFlight
T@"NSObject<OS_dispatch_group>",R,V_filteringRequestsInFlight
AVPlayerItemLegibleOutputTextStylingResolutionDefault
AVPlayerItemLegibleOutputTextStylingResolutionSourceAndRulesOnly
avplayeritemlegibleoutput_trace
subtypes != nil
com.apple.avplayeritemlegibleoutput.ivars
[mediaSubtypeObject isKindOfClass:[NSNumber class]]
integerValueAppearsToBeAFourCC
Native representation is not available for media subtype 'c608'
"%@"
-[AVPlayerItemLegibleOutput _pushAttributedStrings:andSampleBuffers:atItemTime:]_block_invoke
<<<< AVPlayerItemLegibleOutput >>>> %s: Invoking legible delegate %p with %d attributed string(s) and %d native sample(s) at time %f:%@
-[AVPlayerItemLegibleOutput _signalFlush]
<<<< AVPlayerItemLegibleOutput >>>> %s: called
-[AVPlayerItemLegibleOutput _signalFlush]_block_invoke
<<<< AVPlayerItemLegibleOutput >>>> %s: Notifying delegate of a flush
Invalid text styling resolution %@
T@"<AVPlayerItemLegibleOutputPushDelegate>",R,W,N
AVOutputSettingsPreset640x480
AVOutputSettingsPreset960x540
AVOutputSettingsPreset1280x720
AVOutputSettingsPreset1920x1080
AVOutputSettingsPreset3840x2160
AVOutputSettingsPresetHEVC1920x1080
AVOutputSettingsPresetHEVC3840x2160
CMTIME_IS_NUMERIC(sourceVideoAverageFrameDuration)
CMTIME_COMPARE_INLINE(sourceVideoAverageFrameDuration, >, kCMTimeZero)
CMTIME_IS_NUMERIC(sourceVideoMinFrameDuration)
CMTIME_COMPARE_INLINE(sourceVideoMinFrameDuration, >, kCMTimeZero)
baseAudioSettings
baseVideoSettings
T@?,R,C,N,V_completionBlock
Ti,R,N,V_requestID
errorCode
Ti,N,V_errorCode
fakeBias
Tf,N,V_fakeBias
fakeBiasCompletionTime
T{?=qiIq},N,V_fakeBiasCompletionTime
com.apple.avfoundation.capturedevice.controlrequestqueue
[propertyList isKindOfClass:[NSArray class]]
com.apple.avfoundation.allow-still-image-capture-shutter-sound-manipulation
com.apple.avfoundation.allow-offline-video-stabilization
com.apple.avfoundation.allow-capture-filter-rendering
%s%@
CIPortraitEffect
-[AVExternalDeviceHID _figEndpointHIDInputMode]
<<<< AVExternalDevice >>>> %s: Endpoint HID input mode: %@
-[AVExternalDeviceHID initWithExternalDeviceAndHIDDictionary:hidDictionary:]
<<<< AVExternalDevice >>>> %s: called with externalDevice %p hidDictionary %@
-[AVExternalDeviceHID setInputMode:]
<<<< AVExternalDevice >>>> %s: Endpoint HID Setting inputMode to %@
UUID
screenID
inputMode
-[AVExternalDeviceIcon initWithDictionary:]
<<<< AVExternalDevice >>>> %s: called with dictionary %@
widthPixels
heightPixels
imageData
prerendered
TB,R,N,GisPrerendered
Knobs
LowFidelityTouch
HighFidelityTouch
Touchpad
softKeyboard
softPhoneKeypad
nonMusicLists
musicLists
japanMaps
ExternalDevice_ScreenBecameAvailable
ExternalDevice_ScreenBecameUnavailable
ExternalDevice_NightModeChangedNotification
ExternalDevice_LimitedUIChangedNotification
ExternalDevice_OwnsTurnByTurnNavigationChangedNotification
ExternalDevice_PerformanceReportNotificationPosted
ExternalDevice_MFiCertificateSerialNumberChangedNotification
ExternalDevice_ElectronicTollCollectionChangedNotification
ExternalDevice_NavigationAidedDrivingChangedNotification
enhancedRequestCarUI
-[AVExternalDeviceScreenBorrowToken initWithExternalDevice:client:reason:]
<<<< AVExternalDevice >>>> %s: called with externalDevice %p client %@ reason %@
-[AVExternalDeviceScreenBorrowToken dealloc]
-[AVExternalDeviceScreenBorrowToken finalize]
client
T@"NSString",R,N,V_client
reason
T@"NSString",R,N,V_reason
-[AVExternalDeviceTurnByTurnToken initWithExternalDevice:]
<<<< AVExternalDevice >>>> %s: called with externalDevice %p
-[AVExternalDeviceTurnByTurnToken dealloc]
-[AVExternalDeviceTurnByTurnToken finalize]
externaldevice_trace
com.apple.AVFoundation.AVExternalDevice
com.apple.AVFoundation.AVExternalDevice.ViewAreas
viewAreaIndex
adjacentViewAreas
-[AVExternalDevice _figEndpointPropertyValueForKey:]
<<<< AVExternalDevice >>>> %s: Endpoint property '%@' not supported
<<<< AVExternalDevice >>>> %s: Endpoint property '%@' has value: %@
-[AVExternalDevice screenIDs]
<<<< AVExternalDevice >>>> %s: Endpoint screen IDs: %@
-[AVExternalDevice screenInputCapabilities]
<<<< AVExternalDevice >>>> %s: Endpoint capabilities: %@
-[AVExternalDevice screenPrimaryInputDevices]
-[AVExternalDevice externalDeviceHIDs]_block_invoke
<<<< AVExternalDevice >>>> %s: adding endpointDeviceHID: %@
com.apple.springboard
InitialCarPlayConnection
TestTakeScreenAway
TestNotification
T@"<AVExternalDeviceDelegate>",N
screenIDs
screenInputCapabilities
screenPrimaryInputDevices
screenViewAreas
screenSafeAreas
OEMIcon
OEMIcons
OEMIconLabel
OEMIconVisible
modelName
externalDeviceHIDs
nightMode
nightModeSupported
rightHandDrive
limitedUIElements
limitedUI
ownsScreen
ownsTurnByTurnNavigation
recognizingSpeech
supportedFeatures
electronicTollCollection
navigationAidedDriving
MFiCertificateSerialNumber
figEndpointNotificationCallback
<<<< AVExternalDevice >>>> %s: Invalid Siri Requested Action: %@
uuid
-[AVFigEndpointPickerOutputDeviceDiscoverySessionImpl initWithDeviceFeatures:]
<<<< AVOutputDeviceDiscoverySession (FigEndpointPicker) >>>> %s: called (self=%p, features=%d)
com.apple.avfoundation.outputdevicediscoverysession.queue
-[AVFigEndpointPickerOutputDeviceDiscoverySessionImpl targetAudioSession]
<<<< AVOutputDeviceDiscoverySession (FigEndpointPicker) >>>> %s: Target audio session not supported by FigEndpointPicker
-[AVFigEndpointPickerOutputDeviceDiscoverySessionImpl setTargetAudioSession:]
-[AVFigEndpointPickerOutputDeviceDiscoverySessionImpl outputDeviceDiscoverySessionDidChangeDiscoveryMode:]_block_invoke
<<<< AVOutputDeviceDiscoverySession (FigEndpointPicker) >>>> %s: Setting device discovery mode to %@ (client: %@)
parentOutputDeviceDiscoverySession
T@"AVOutputDeviceDiscoverySession",W
T@"AVOutputDeviceDiscoverySession",W,V_parentSession
-[AVFigEndpointPickerOutputDeviceDiscoverySessionFactory outputDeviceDiscoverySessionOfClass:withDeviceFeatures:]
<<<< AVOutputDeviceDiscoverySession (FigEndpointPicker) >>>> %s: called (self=%@, class=%@, deviceFeatures=%u)
AVOutputDeviceDiscoverySessionFigEndpointPickerNotificationCallback
<<<< AVOutputDeviceDiscoverySession (FigEndpointPicker) >>>> %s: Received %@ notification
avcc_trace
-[AVCustomVideoCompositorSession initWithVideoComposition:]
<<<< AVCustomCompositor >>>> %s: videoComposition %p
<<<< AVCustomCompositor >>>> %s: creating instance of "%@"
AVVideoCompositing sourcePixelBufferAttributes must not be nil.
AVVideoCompositing sourcePixelBufferAttributes must contain kCVPixelBufferPixelFormatTypeKey.
Value of kCVPixelBufferPixelFormatTypeKey in AVVideoCompositing sourcePixelBufferAttributes must contain at least one item.
Value of kCVPixelBufferPixelFormatTypeKey in AVVideoCompositing sourcePixelBufferAttributes must be either an NSArray or a NSNumber.
<<<< AVCustomCompositor >>>> %s: src pixel buffer attributes %@
com.apple.avcustomvideocompositorsession.clientcustomcompositorq
com.apple.avcustomvideocompositorsession.rendercontextq
com.apple.avcustomvideocompositorsession.clienterrorq
com.apple.avcustomvideocompositorsession.videocompositionq
com.apple.avcustomvideocompositorsession.finishedrequestq
-[AVCustomVideoCompositorSession(AVCustomVideoCompositorSession_FigCallbackHandling) _compositionFrame:atTime:requiresRenderUsingSources:withInstruction:]_block_invoke
<<<< AVCustomCompositor >>>> %s: intializing new render context (videoCompositionDidChange %d
-[AVCustomVideoCompositorSession(AVCustomVideoCompositorSession_FigCallbackHandling) _customCompositorFigPropertyDidChange]_block_invoke
<<<< AVCustomCompositor >>>> %s: render context no longer suitable, need to create a new one
refreshRate
videoDynamicRange
This instance is never deallocated
observedObject != nil
keyPath != nil
dependentProperty
-[AVKVODispatcher observeValueForKeyPath:ofObject:change:context:]
<<<< AVKVODispatcher >>>> %s: called (self=%p, keyPath=%@, object=%@, change=%@, context=%p)
v16@?0@"NSDictionary"8
v24@?0@"NSObject<AVWeakObservable>"8@"NSDictionary"16
callbackContextRegistry != nil
observer != nil
object != nil
-[AVClientBlockKVONotifier dealloc]
<<<< AVKVODispatcher >>>> %s: %p no longer observing %@ with observer %@, for key path %@, and context %p
-[AVClientBlockKVONotifier start]
<<<< AVKVODispatcher >>>> %s: %p observing %@ with observer %@, for key path %@, options %d, and context %p
-[AVClientBlockKVONotifier cancelCallbacks]
observedObject
T@"NSObject",R,N
*** Weakly-observed object %p was deallocated without cancelling outstanding registration %p.  You are most likely about to get an exception from KVO.  To fix, make sure that %p properly implements the %@ protocol
-[AVWeaklyObservedObjectClientBlockKVONotifier start]
*** Received KVO for object %p that is being deallocated.  This can cause other objects to get a reference to %p while it is in an inconsistent state.  Break on AVKVODispatcherKVODuringObjectTeardownBreak() to debug
-[AVWeaklyObservedObjectClientBlockKVONotifier cancelCallbacks]
v24@?0@"NSObject"8@"NSDictionary"16
Cannot safely use %@ with %@ or its subclasses, due to rdar://problem/26865139, until we
 stop supporting legacy versions of iWork apps
kvodispatcher_trace
dependentPropertyKey != nil
dependencyKeyPath != nil
com.apple.avfoundation.keypathdependency.registration
<%@: %p, target=%@, dependentKey="%@", dependencyKeyPath="%@">
<deallocated>
Must invoke with object passed to initializer
v32@?0@"AVKeyPathDependency"8@"NSObject<AVWeakObservable>"16@"NSDictionary"24
-[AVKeyPathDependency _startObservingSecondLevelPropertyOnNewCurrentValueForTopLevelDependencyProperty:]
<<<< AVKVODispatcher >>>> %s: Registering for %@ (self = %@)
v24@?0@"AVKeyPathDependency"8@"NSDictionary"16
-[AVKeyPathDependency _reactToTopLevelPropertyChange:]
<<<< AVKVODispatcher >>>> %s: Calling -willChange for %@.%@, in response to top-level property change (self=%p)
-[AVKeyPathDependency _reactToTopLevelPropertyChange:]_block_invoke
<<<< AVKVODispatcher >>>> %s: cancelling second-level observation
-[AVKeyPathDependency _reactToSecondLevelPropertyChange:]
<<<< AVKVODispatcher >>>> %s: Calling -willChange for %@.%@, in response to second-level property change (self=%p)
<<<< AVKVODispatcher >>>> %s: Calling -didChange for %@.%@, in response to second-level property change (self=%p)
%@.%@
keyPathString
topLevelPropertyKey
T@"NSString",R,N,V_topLevelKey
secondLevelPropertyKey
T@"NSString",R,N,V_secondLevelKey
topLevelDependencyProperty
T@"AVWeakReference",&,N,V_session
renderContext
T@"AVVideoCompositionRenderContext",&,N,V_renderContext
compositionFrame
T^{OpaqueFigVideoCompositorFrame=},N,V_compositionFrame
T{?=qiIq},N,V_compositionTime
sourcesByTrackID
T@"NSDictionary",&,N,V_sourcesByTrackID
sourceTrackIDsInClientOrder
T@"NSArray",&,N,V_sourceTrackIDsInClientOrder
instruction
T@"<AVVideoCompositionInstruction>",&,N,V_instruction
TB,N,V_isFinished
unfinished AVAsynchronousVideoCompositionRequest deallocated - should have called finishWithComposedVideoFrame:, finishWithError: or finishCancelledRequest
finishWithComposedVideoFrame requires a CVPixelBuffer
ignored -[AVAsynchronousVideoCompositionRequest finishWithComposedVideoFrame:] because already finished
T@"AVVideoCompositionRenderContext",R,N
sourceTrackIDs
videoCompositionInstruction
T@"<AVVideoCompositionInstruction>",R,N
AVRouteDetectorMultipleRoutesDetectedDidChangeNotification
routedetector_trace
com.apple.avfoundation.avroutedetector.ivars
routeDetectionEnabled
TB,GisRouteDetectionEnabled
multipleRoutesDetected
-[AVVideoCompositionRenderContext newPixelBuffer]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: CVPixelBufferPoolCreatePixelBufferWithAuxAttributes failed (error %d)
size
renderTransform
pixelAspectRatio
T{?=qq},R,N
edgeWidths
T{?=dddd},R,N
highQualityRendering
T@"AVVideoComposition",R,N
-[AVVideoCompositionRenderContext(Internal) initWithFigVideoCompositor:clientRequiredPixelBufferAttributes:videoComposition:pixelBufferPool:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: initializing
com.apple.avvideocompositionrendercontext.pixelbufferpoolq
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderDimensions = %d %d
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderScale = %f
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderPixelAspectRatio = %d %d
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderEdgeProcessingPixels = %f %f %f %f
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_HighQualityRendering = %d
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredAttributes = %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredYCbCrMatrix = %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredColorPrimaries = %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredTransferFunction = %@
AVVideoCompositing requiredPixelBufferAttributesForRenderContext must not be nil.
AVVideoCompositing requiredPixelBufferAttributesForRenderContext must contain kCVPixelBufferPixelFormatTypeKey.
Value of kCVPixelBufferPixelFormatTypeKey in AVVideoCompositing requiredPixelBufferAttributesForRenderContext must contain at least one item.
Value of kCVPixelBufferPixelFormatTypeKey in AVVideoCompositing requiredPixelBufferAttributesForRenderContext must be either an NSArray or a NSNumber.
-[AVVideoCompositionRenderContext(Internal) pixelBufferPool]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: Failed to resolve pixel buffer attributes (error %d), required client attributes %@, desired destination attributes %@
avcapturephotooutput_trace
RegionalBehaviorShutterClick
com.apple.avfoundation.photooutput.observed_scene_detection_queue
avcapturephotooutput-begin-end-iris-movie-capture-host-time-queue
-[AVCapturePhotoOutput dealloc]
<<<< AVCapturePhotoOutput >>>> %s: timed out waiting for Live Photos begin/end movie capture hosttime group to empty
-[AVCapturePhotoOutput capturePhotoWithSettings:delegate:]
<<<< AVCapturePhotoOutput >>>> %s: called with %@
Nil delegate
No active and enabled video connection
-[AVCapturePhotoOutput capturePhotoWithSettings:delegate:]_block_invoke
<<<< AVCapturePhotoOutput >>>> %s: Calling StillImageSinkCaptureImage with %@
-[AVCapturePhotoOutput setPreparedPhotoSettingsArray:completionHandler:]
<<<< AVCapturePhotoOutput >>>> %s: called with preparedPhotoSettingsArray:%@ completionHandler:%p
Nil preparedPhotoSettingsArray
<<<< AVCapturePhotoOutput >>>> %s: New IrisPreparedSettings is equal to old. Overriding request ID from %lld -> %lld to match old settings.
-[AVCapturePhotoOutput setPreparedPhotoSettingsArray:completionHandler:]_block_invoke
<<<< AVCapturePhotoOutput >>>> %s: Calling FigCaptureSessionIrisStillImageSinkPrepareToCapture with %@
-[AVCapturePhotoOutput setDualCameraDualPhotoDeliveryEnabled:]
<<<< AVCapturePhotoOutput >>>> %s: called with %d
Dual Camera dual photo delivery is not supported in this configuration
photoSettingsForSceneMonitoring must be an instance of AVCapturePhotoSettings
isHDRScene
-[AVCapturePhotoOutput setLivePhotoCaptureEnabled:]
Live Photo movie capture is not supported on this device
-[AVCapturePhotoOutput setLivePhotoCaptureSuspended:]
<<<< AVCapturePhotoOutput >>>> %s: called with %d at %fs
Live Photo capture may not be suspended unless livePhotoCaptureEnabled is YES
May not be set unless isLivePhotoCaptureSupported = YES
-[AVCapturePhotoOutput setLivePhotoMovieProcessingSuspended:]
Live Photo movie processing may not be suspended unless livePhotoCaptureEnabled is YES
-[AVCapturePhotoOutput setLivePhotoMovieProcessingSuspended:]_block_invoke
<<<< AVCapturePhotoOutput >>>> %s: Set livePhotoMovieProcessingSuspended failed %d
<<<< AVCapturePhotoOutput >>>> %s: Not setting livePhotoMovieProcessingSuspended since there is no FigCaptureSession instance
-[AVCapturePhotoOutput setDepthDataDeliveryEnabled:]
Depth data delivery is not supported in the current configuration
NULL sample buffer
Not a jpeg sample buffer
sample buffer contains no data buffer
+[AVCapturePhotoOutput JPEGPhotoDataRepresentationForJPEGSampleBuffer:previewPhotoSampleBuffer:]
<<<< AVCapturePhotoOutput >>>> %s: CMBlockBufferCreateContiguous failed (%d)
<<<< AVCapturePhotoOutput >>>> %s: CMBlockBufferGetDataPointer failed (%d)
Image optimization for offline video stabilization is not supported on this device
-[AVCapturePhotoOutput setOptimizesImagesForOfflineVideoStabilization:]
<<<< AVCapturePhotoOutput >>>> %s: Aspect ratio mismatch between Original and Optimized Image output dimensions
-[AVCapturePhotoOutput userInitiatedCaptureRequestAtTime:]_block_invoke
<<<< AVCapturePhotoOutput >>>> %s: Set %@ failed %d
<<<< AVCapturePhotoOutput >>>> %s: Cannot set %@ since there is no FigCaptureSession instance
flashSceneDetectedForPhotoOutput
highDynamicRangeScene
-[AVCapturePhotoOutput safelyHandleServerConnectionDeathForFigCaptureSession:]
<<<< AVCapturePhotoOutput >>>> %s: called
supportedHDRModes
HDRSupported
flashSupported
imageOptimizationForOfflineVideoStabilizationSupported
optimizesImagesForOfflineVideoStabilization
-[AVCapturePhotoOutput _updateOfflineVISSupportedForSourceDevice:]
<<<< AVCapturePhotoOutput >>>> %s: Overscan percentage for offline vis: %f (Front: %@)
optimizedImageDimensionsForOfflineStabilization
<<<< AVCapturePhotoOutput >>>> %s: Optimized dimensions: %d x %d
livePhotoMovieProcessingSuspended
-[AVCapturePhotoOutput _dispatchFailureCallbacks:forRequest:withError:cleanupRequest:]
<<<< AVCapturePhotoOutput >>>> %s: called with flags:%x request:%@, error: %@
-[AVCapturePhotoOutput _dispatchFailureCallbacks:forRequest:withError:cleanupRequest:]_block_invoke
<<<< AVCapturePhotoOutput >>>> %s: calling %@ willBeginCaptureForResolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: Not calling, delegate %@ doesn't respond to willBeginCaptureForResolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: calling %@ willCapturePhotoForResolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: Not calling, delegate %@ doesn't respond to willCapturePhotoForResolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: calling %@ didCapturePhotoForResolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: Not calling, delegate %@ doesn't respond to didCapturePhotoForResolvedSettings:%@
(original) 
<<<< AVCapturePhotoOutput >>>> %s: calling %@%@ didFinishProcessingPhoto:%@error:%@ for photo with processing flags "%@"
<<<< AVCapturePhotoOutput >>>> %s: [%d]calling %@ didFinishProcessingRawPhotoSampleBuffer:(null) previewPhotoSampleBuffer:(null) resolvedSettings:%@ bracketSettings:%@ error:%@
<<<< AVCapturePhotoOutput >>>> %s: [%d]calling %@ didFinishProcessingPhotoSampleBuffer:(null) previewPhotoSampleBuffer:(null) resolvedSettings:%@ bracketSettings:%@ error:%@
<<<< AVCapturePhotoOutput >>>> %s: [***For Original ***] calling %@ didFinishRecordingLivePhotoMovieForEventualFileAtURL:%@ resolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: [***For Original ***] Not calling, delegate %@ doesn't respond to didFinishRecordingLivePhotoMovieForEventualFileAtURL:%@ resolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: calling %@ didFinishRecordingLivePhotoMovieForEventualFileAtURL:%@ resolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: Not calling, delegate %@ doesn't respond to didFinishRecordingLivePhotoMovieForEventualFileAtURL:%@ resolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: [***For Original ***] calling %@ didFinishProcessingLivePhotoToMovieFileAtURL:%@ duration:nans photoDisplayTime:nans resolvedSettings:%@ error:%@
<<<< AVCapturePhotoOutput >>>> %s: calling %@ didFinishProcessingLivePhotoToMovieFileAtURL:%@ duration:nans photoDisplayTime:nans resolvedSettings:%@ error:%@
<<<< AVCapturePhotoOutput >>>> %s: calling %@ didFinishCaptureForResolvedSettings:%@ error:%@
<<<< AVCapturePhotoOutput >>>> %s: Not calling, delegate %@ doesn't respond to didFinishCaptureForSettings:%@ error:%@
-[AVCapturePhotoOutput _handleNotification:payload:]
<<<< AVCapturePhotoOutput >>>> %s: %@:%@
<<<< AVCapturePhotoOutput >>>> %s: Disregarding notification %@ since sinkIDs don't match
<<<< AVCapturePhotoOutput >>>> %s: ***%@: Couldn't find a paired request for uniqueID %lld
-[AVCapturePhotoOutput _handlePreparationCompleteNotificationWithPayload:settingsID:]
<<<< AVCapturePhotoOutput >>>> %s: Received PreparationComplete notification for settingsID %lld
<<<< AVCapturePhotoOutput >>>> %s: PreparationComplete error: (%d, %d)
<<<< AVCapturePhotoOutput >>>> %s: Received a PreparationCompleteNotification from the past (mine=%lld, theirs=%lld)!!!
<<<< AVCapturePhotoOutput >>>> %s: Handling cancelled request: %@
<<<< AVCapturePhotoOutput >>>> %s: Handling matchingRequest request: %@
<<<< AVCapturePhotoOutput >>>> %s: Discarding old requests: %@
-[AVCapturePhotoOutput _handleWillBeginCaptureNotificationWithPayload:forRequest:]_block_invoke
-[AVCapturePhotoOutput _handleWillCaptureStillImageNotificationWithPayload:forRequest:]_block_invoke
-[AVCapturePhotoOutput _handleDidCaptureStillImageNotificationWithPayload:forRequest:]_block_invoke
-[AVCapturePhotoOutput _handleStillImageCompleteNotificationWithPayload:forRequest:]
<<<< AVCapturePhotoOutput >>>> %s: ***StillImageComplete error: (%d, %d)
<<<< AVCapturePhotoOutput >>>> %s: Already received %d notifications for still image capture with settings ID %lld; ignoring.
<<<< AVCapturePhotoOutput >>>> %s: *** no photo surface returned, must have run out of memory! ***
-[AVCapturePhotoOutput _handleStillImageCompleteNotificationWithPayload:forRequest:]_block_invoke
<<<< AVCapturePhotoOutput >>>> %s: calling %@ didFinishProcessingPhoto:%@ bracketSettings:%@ error:%@ for photo with processing flags "%@"
<<<< AVCapturePhotoOutput >>>> %s: *** no photo sample buffer returned, errorStatus = %d ***
<<<< AVCapturePhotoOutput >>>> %s: calling %@ didFinishProcessingRawPhotoSampleBuffer:%p previewPhotoSampleBuffer:%p resolvedSettings:%@ bracketSettings:%@ error:%@
<<<< AVCapturePhotoOutput >>>> %s: calling %@ didFinishProcessingPhotoSampleBuffer:%p previewPhotoSampleBuffer:%p resolvedSettings:%@ bracketSettings:%@ error:%@
-[AVCapturePhotoOutput _handleDidRecordIrisMovieNotificationWithPayload:forRequest:]_block_invoke
<<<< AVCapturePhotoOutput >>>> %s: [***For EV0***] calling %@ didFinishRecordingLivePhotoMovieForEventualFileAtURL:%@ resolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: [***For EV0***] Not calling, delegate %@ doesn't respond to didFinishRecordingLivePhotoMovieForEventualFileAtURL:%@ resolvedSettings:%@
-[AVCapturePhotoOutput _handleDidFinishRecordingIrisMovieNotificationWithPayload:forRequest:]
<<<< AVCapturePhotoOutput >>>> %s: ***DidFinishRecordingIrisMovie error: (%@, %d)
-[AVCapturePhotoOutput _handleDidFinishRecordingIrisMovieNotificationWithPayload:forRequest:]_block_invoke
[***FOR ORIGINAL***] 
<<<< AVCapturePhotoOutput >>>> %s: %scalling %@ didFinishProcessingLivePhotoToMovieFileAtURL:%@ debugMetadataSidecarFileURL:%@ duration:%fs photoDisplayTime:%fs resolvedSettings:%@ error:%@
<<<< AVCapturePhotoOutput >>>> %s: %scalling %@ didFinishProcessingLivePhotoToMovieFileAtURL:%@ duration:%fs photoDisplayTime:%fs resolvedSettings:%@ error:%@
-[AVCapturePhotoOutput setFigCaptureSessionSectionProperty:withHostTime:settingStateVaribleToNoOnFailure:]_block_invoke
<<<< AVCapturePhotoOutput >>>> %s: Set(%@) failed %d
<<<< AVCapturePhotoOutput >>>> %s: Not setting(%@) since there is no FigCaptureSession instance
-[AVCapturePhotoOutput _handleDidFinishCaptureNotificationWithPayload:forRequest:]
<<<< AVCapturePhotoOutput >>>> %s: ***DidFinishCapture error: (%d, %d)
-[AVCapturePhotoOutput _handleDidFinishCaptureNotificationWithPayload:forRequest:]_block_invoke
preparedPhotoSettingsArray
availablePhotoPixelFormatTypes
availablePhotoCodecTypes
availableRawPhotoPixelFormatTypes
availablePhotoFileTypes
availableRawPhotoFileTypes
isStillImageStabilizationScene
dualCameraFusionSupported
TB,R,N,GisDualCameraFusionSupported
dualCameraDualPhotoDeliverySupported
TB,R,N,GisDualCameraDualPhotoDeliverySupported
cameraCalibrationDataDeliverySupported
TB,R,N,GisCameraCalibrationDataDeliverySupported
supportedFlashModes
autoRedEyeReductionSupported
TB,R,N,GisAutoRedEyeReductionSupported,V_autoRedEyeReductionSupported
isFlashScene
photoSettingsForSceneMonitoring
T@"AVCapturePhotoSettings",C,N
highResolutionCaptureEnabled
TB,N,GisHighResolutionCaptureEnabled
maxBracketedCapturePhotoCount
TB,R,N,GisLensStabilizationDuringBracketedCaptureSupported
livePhotoCaptureSupported
TB,R,N,GisLivePhotoCaptureSupported
livePhotoCaptureEnabled
TB,N,GisLivePhotoCaptureEnabled
livePhotoCaptureSuspended
TB,N,GisLivePhotoCaptureSuspended
livePhotoAutoTrimmingEnabled
TB,N,GisLivePhotoAutoTrimmingEnabled
availableLivePhotoVideoCodecTypes
Nil settings
Settings may not be re-used
settings.processedFileType must be present in self.availablePhotoFileTypes
settings.rawFileType must be present in self.availableRawPhotoFileTypes
settings.rawPhotoPixelFormatType must be present in self.availableRawPhotoPixelFormatTypes
settings.rawPhotoPixelFormatType must be present in [self supportedRawPhotoPixelFormatTypesForFileType:settings.rawFileType]
When specifying raw capture, settings.HDRMode must be set to AVCaptureHDRModeOff
When specifying raw capture, settings.autoStillImageStabilizationEnabled must be set to NO
When specifying raw capture, the videoZoomFactor of the video device must be set to 1.0
When specifying raw capture, the videoScaleAndCropFactor of the photo output's video connection must be set to 1.0
When specifying raw capture, settings.autoDualCameraFusionEnabled must be set to NO
If you specify a non-nil raw pixel format type in your settings, your delegate must respond to the selector captureOutput:didFinishProcessingPhoto:error: or the deprecated captureOutput:didFinishProcessingRawPhotoSampleBuffer:previewPhotoSampleBuffer:resolvedSettings:bracketSettings:error:
The CVPixelBufferPixelFormatTypeKey format must be present in self.availablePhotoPixelFormatTypes
The CVPixelBufferFormatTypeKey format must be present in [self supportedPhotoPixelFormatTypesForFileType:settings.processedFileType]
The AVVideoCodecKey format must be present in self.availablePhotoCodecTypes
The AVVideoCodecKey format must be present in [self supportedPhotoCodecTypesForFileType:settings.processedFileType]
In order to capture HEIF containerized photos, your delegate must respond to the selector captureOutput:didFinishProcessingPhoto:error:
If you specify a non-nil format dictionary in your settings, your delegate must respond to the selector captureOutput:didFinishProcessingPhoto:error:, or the deprecated captureOutput:didFinishProcessingPhotoSampleBuffer:previewPhotoSampleBuffer:resolvedSettings:bracketSettings:error:
HDRMode must be set to a value present in the supportedHDRModes array
EV0PhotoDeliveryEnabled must be set to NO if HDRMode is AVCaptureHDRModeOff
If you specify EV0PhotoDeliveryEnabled=YES in your settings, your delegate must respond to the selector captureOutput:didFinishProcessingPhoto:error:
flashMode must be set to a value present in the supportedFlashModes array
livePhotoMovieFileURL must be nil if self.livePhotoCaptureEnabled is NO
livePhotoMovieFileURL must be a file url
If you specify a non-nil livePhotoMovieFileURL, your delegate must respond to the selector captureOutput:didFinishProcessingLivePhotoToMovieFileAtURL:duration:photoDisplayTime:resolvedSettings:error:
livePhotoMovieFileURLForOriginalPhoto may not be the same as livePhotoMovieFileURL
livePhotoMovieFileURLForOriginalPhoto must be a file url
Live Photos may not be captured while livePhotoCaptureSuspended is YES
livePhotoVideoCodecType must be present in self.availableLivePhotoVideoCodecTypes
If you specify a non-nil livePhotoMovieFileURLForOriginalPhoto, you must also provide a non-nil livePhotoMovieFileURL
settings.highResolutionPhotoEnabled may not be YES unless self.highResolutionCaptureEnabled is YES
Square crop must be NO when livePhotoMovieFileURL is non-nil
HDR mode must not be on when flash mode is on
You are not authorized to use custom shutter sounds
settings.depthDataDeliveryEnabled must be NO if self.isDepthDataDeliveryEnabled is NO
Your delegate must respond to the selector captureOutput:didFinishProcessingPhoto:error: if you set depthDataDeliveryEnabled to YES
settings.photoFilters must be empty if self.isFilterRenderingEnabled is NO
settings.adjustedPhotoFilters must be empty if self.isFilterRenderingEnabled is NO
settings.dualCameraDualPhotoDeliveryEnabled may not be set to YES unless self.dualCameraDualPhotoDeliveryEnabled is YES
settings.adjustedPhotoFilters must not contain any portrait filters if settings.dualCameraDualPhotoDeliveryEnabled is YES
Your delegate must respond to the selector captureOutput:didFinishProcessingPhoto:error: if you set dualCameraDualPhotoDeliveryEnabled to YES
settings.cameraCalibrationDataDeliveryEnabled may not be set to YES unless self.cameraCalibrationDataDeliverySupported is YES
Your delegate must respond to the selector captureOutput:didFinishProcessingPhoto:error: if you set cameraCalibrationDataDeliveryEnabled to YES
bracketedSettings array exceeds -maxBracketedCapturePhotoCount
settings.lensStabilizationEnabled may only be set to YES if self.lensStabilizationDuringBracketedCaptureSupported is YES
%@ contains an out of range ISO value. Use AVCaptureDeviceFormat -minISO
%@ contains an out of range ISO value. Use AVCaptureDeviceFormat -maxISO
%@ contains an out of range exposure duration. Use AVCaptureDeviceFormat -minExposureDuration
%@ contains an out of range exposure duration. Use AVCaptureDeviceFormat -maxExposureDuration
%@ contains an out of range exposure target bias. Use AVCaptureDevice -minExposureTargetBias
%@ contains an out of range exposure target bias. Use AVCaptureDevice -maxExposureTargetBias
LowQualityZeroLatency
TimeDomain
Spectral
Varispeed
FairPlayStreaming
ClearKeySystem
ProtocolVersionsKey
CreateDecryptorUsingFormatDescription
ContextKey
ReceivedKeyResponseAfterSPCTimedOut
ReceivedKeyResponseWithExpiredLease
ReceivedObsoleteKeyResponse
%@ does not support key persistence
HLSMethodKey
Cryptor is not ready to start key loading process at this time.
+[AVContentKeyRequest _prepareCryptor:forRenewal:andReturnKeyRequestID:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVContentKeySession.m
v16@?0@"<AVContentKeySessionDelegate>"8
-[AVContentKeyRequest _handleKeyResponseError:]_block_invoke
<<<< AVContentKeySession >>>> %s: %p retrying content key request because %@
<<<< AVContentKeySession >>>> %s: %p content key request failed since the client did not retry
-[AVContentKeyRequest _handleKeyResponseSuccess]_block_invoke
<<<< AVContentKeySession >>>> %s: content key request %@ did succeed
-[AVContentKeyRequest _setCryptorWithFormatDescription:error:]
<<<< AVContentKeySession >>>> %s: cryptor is NULL
value against AVContentKeyRequestProtocolVersionsKey should be an array of NSNumber objects
ISO_23001_7
value against AVContentKeyRequestHLSMethodKey is not recognized
-[AVContentKeyRequest contentKeyRequestDataForApp:contentIdentifier:options:error:]
<<<< AVContentKeySession >>>> %s: %p creating key request for appid %@, contentID %@, options %@
<<<< AVContentKeySession >>>> %s: set AppIdentifier
valid completionHandler is required
valid appIdentifier is required
key request was already cancelled or failed
%@ does not support this operation
valid contentKeyResponseData is required
key request cannot accept response at this time
-[AVContentKeyRequest processContentKeyResponseData:]
<<<< AVContentKeySession >>>> %s: %p setting content key response %@
Could not set KeyResponseReceived state on cryptor.
valid keyResponse is required
contentKeySession's keySystem does not match with that of keyResponse's
keyResponse should be an object of AVContentKeyResponseFairPlayStreaming class
valid FPS key response data is required
keyResponse should be an object of AVContentKeyResponseClearKey class
valid ClearKey key data is required
%@ does not support key renewal
client's delegate should respond to contentKeySession:didProvidePersistableContentKeyRequest: method in order to be able to request persistable content key request
T@,R
initializationData
canProvidePersistableContentKey
valid keyVendorResponse is required
persistable content key cannot be created at this time
-[AVPersistableContentKeyRequest persistableContentKeyFromKeyVendorResponse:options:error:]
<<<< AVContentKeySession >>>> %s: %p getting persistable key response from %@
FairPlay Streaming is not supported on simulators
+[AVContentKeySession copyDefaultSecureStopManagerForAppIdentifier:storageDirectoryAtURL:]
<<<< AVContentKeySession >>>> %s: failed to copy default secure stop manager due to error: %d
Use %@ instead.
avcontentkeysession_trace
-[AVContentKeySession initWithKeySystem:storageDirectoryAtURL:]
<<<< AVContentKeySession >>>> %s: called
input keySystem is not supported
%@ does not support storage URL
<<<< AVContentKeySession >>>> %s: init with %@
com.apple.AVContentKeySession._threadSafetyQ
-[AVContentKeySession dealloc]
<<<< AVContentKeySession >>>> %s: dealloc
valid delegateQueue is required
cannot add this object as an AVContentKeyRecipient
-[AVContentKeySession addContentKeyRecipient:]_block_invoke
<<<< AVContentKeySession >>>> %s: added content key recipient %@, now have: %@
Content key session is already expired or failed
Can't add object as an AVContentKeyRecipient after it has established its own content protection
Content key recipient cannot be associated with more than one instance of AVContentKeySession
-[AVContentKeySession addContentKeyRecipient:]
<<<< AVContentKeySession >>>> %s: Failed to add object as a AVContentKeyRecipient [error: %@]
-[AVContentKeySession removeContentKeyRecipient:]_block_invoke
<<<< AVContentKeySession >>>> %s: removed content key recipient %@, now have %@
-[AVContentKeySession expire]
<<<< AVContentKeySession >>>> %s: expiring recipient %@
identifier or initializationData must be valid
content key session is already expired or failed
%@ does not support preloading keys
valid contentKeyRequest is required
can't initiate renewal while waiting for key response
-[AVContentKeySession renewExpiringResponseDataForContentKeyRequest:]
<<<< AVContentKeySession >>>> %s: %p failed to issue content key request because delegate's already gone
<<<< AVContentKeySession >>>> %s: %p renewing key request %@
<<<< AVContentKeySession >>>> %s: %p errored out trying to renew key request %@
valid completion handler is required
valid persistableContentKeyData is required
T@"<AVContentKeySessionDelegate>",R,W
T@"NSObject<OS_dispatch_queue>",R
storageURL
T@"NSURL",R
keySystem
contentProtectionSessionIdentifier
valid storageURL is required
kFigSSMError_InvalidState
failed to query records due to an internal error
+[AVContentKeySession(AVContentKeySessionPendingExpiredSessionReports) pendingExpiredSessionReportsWithAppIdentifier:storageDirectoryAtURL:]
<<<< AVContentKeySession >>>> %s: appIdentifier %@ = %@
+[AVContentKeySession(AVContentKeySessionPendingExpiredSessionReports) removePendingExpiredSessionReports:withAppIdentifier:storageDirectoryAtURL:]
<<<< AVContentKeySession >>>> %s: appIdentifier %@, removing %@
expiredSessionReports should be an array of NSData objects
failed to remove records due to an internal error
%@_%llu
appIdentifier can't change once set
-[AVContentKeySession(AVContentKeyRequestSupport) setAppIdentifier:]
<<<< AVContentKeySession >>>> %s: setting appIdentifier failed due to err=%d
-[AVContentKeySession(AVContentKeyRequestSupport) issueContentKeyRequest:]
<<<< AVContentKeySession >>>> %s: %p failed to issue content key request due to an internal error
-[AVContentKeySession(AVContentKeyRequestSupport) issueContentKeyRequestWithCustomURLProviderContext:identifier:initializationData:providesPersistableKey:]
<<<< AVContentKeySession >>>> %s: %p initializing content key request with identifier %@ and initialization data %@
persistable content keys are supported only on iOS
-[AVContentKeySession(AVContentKeyRequestSupport) issueContentKeyRequestWithCustomURLHandler:identifier:requestInfo:requestID:providesPersistableKey:]
<<<< AVContentKeySession >>>> %s: %p initializing content key request with identifier %@
-[AVContentKeySession(AVContentKeyRequestSupport) issueContentKeyRequestWithPreloadingRequestOptions:identifier:initializationData:providesPersistableKey:]
valid delegate is required to deliver a key request
-[AVContentKeySession(AVContentKeySession_Internal) issueContentKeyRequestForInitializationData:]
-[AVContentKeySession(AVContentKeySession_Internal) createCryptorOptionsForIdentifier:initializationData:formatDescription:hlsMethod:]
<<<< AVContentKeySession >>>> %s: creating cryptor using sinfs
<<<< AVContentKeySession >>>> %s: creating cryptor using format description
mpts
<<<< AVContentKeySession >>>> %s: Invalid key system used in AVContentKeySystem
no figAsset
-[AVContentKeySession(AVContentKeySession_Internal) createAndInstallCustomURLHandlerForAsset:outHandler:]
com.apple.avfoundation.avcontentkeysession.handler
AVContentKeySession
internal
TB,R,N,GisInternal
initializationData is nil
avcks_decodeInitializationDataAndCopyInformation
failed to convert initializationData to a JSON object
sinf
codc
mtyp
cont
expected initialization data to be a JSON dictionary containing an array of SINF data
badly formatted key request init data - sinf array not found
badly formatted key request init data - codecType not valid
badly formatted key request init data - mediaType not valid
badly formatted key request init data - containerType not valid
<<<< AVContentKeySession >>>> %s: badly formatted key request init data (encoded sinf not UTF8)
<<<< AVContentKeySession >>>> %s: badly formatted key request init data (encoded sinf not base64)
<<<< AVContentKeySession >>>> %s: called with handlingClient: %@, handler: %@, requestInfo: %@, requestID %llu
not an AVContentKeySession
avcks_keyResponseErrorCallback
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@, cryptorUUID: %@, cryptorRequestID: %llu, keyResponseError: %@
avcks_keyResponseSuccessfullyProcessedCallback
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@, cryptorUUID: %@, cryptorRequestID: %llu
avcks_persistentKeyUpdatedCallback
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@, cryptKeyIdentifier: %@, updatedPersistentKey: %@
avcks_secureStopDidFinalizeRecordCallback
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@
avflashlight_trace
camera-flash
+[AVFlashlight hasFlashlight]
<<<< AVFlashlight >>>> %s: Called (%p), returning %d
-[AVFlashlight _setupFlashlight]
<<<< AVFlashlight >>>> %s: Called (%p)
-[AVFlashlight _teardownFlashlight]
*** -AVFlashlight cannot be instantiated on this platform because [AVFlashlight hasFlashlight] is false.
-[AVFlashlight init]
com.apple.avfoundation.avflashlight-server-reconnect
-[AVFlashlight dealloc]
-[AVFlashlight isAvailable]
<<<< AVFlashlight >>>> %s: called (%p), returning %d
-[AVFlashlight isOverheated]
-[AVFlashlight turnPowerOnWithError:]
<<<< AVFlashlight >>>> %s: called (%p)
<<<< AVFlashlight >>>> %s: failed to turn power on (%d)
-[AVFlashlight turnPowerOff]
<<<< AVFlashlight >>>> %s: failed to turn power off (%d)
-[AVFlashlight setFlashlightLevel:withError:]
<<<< AVFlashlight >>>> %s: called (%p) level %g
<<<< AVFlashlight >>>> %s: failed to set level (%d)
<<<< AVFlashlight >>>> %s: %p setting level from %g to %g
-[AVFlashlight flashlightLevel]
<<<< AVFlashlight >>>> %s: called (%p), returning %g
-[AVFlashlight _handleNotification:payload:]
<<<< AVFlashlight >>>> %s: %p setting available from %d to %d
<<<< AVFlashlight >>>> %s: %p setting overheated from %d to %d
available
TB,R,N,GisAvailable
overheated
TB,R,N,GisOverheated
flashlightLevel
avflashlightNotification
<<<< AVFlashlight >>>> %s: %@:%@
+[AVFigEndpointPickerOutputContextImpl sharedAudioPresentationOutputContext]
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Audio presentation output context not supported by FigEndpointPicker
+[AVFigEndpointPickerOutputContextImpl auxiliaryOutputContext]
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Auxiliary output context not supported by FigEndpointPicker
+[AVFigEndpointPickerOutputContextImpl outputContextImplForControllingOutputDeviceGroupWithID:options:]
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: FigEndpointPicker does not support controlling output device groups
com.apple.avfoundation.outputcontext.queue
AVOutputContext_ContextUUID
-[AVFigEndpointPickerOutputContextImpl _handlePickerServerConnectionDiedNotification]
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Creating a new picker with options %@
-[AVFigEndpointPickerOutputContextImpl outputContextDidChangeApplicationProcessID:]
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: called(self=%@, outputContext=%@)
-[AVFigEndpointPickerOutputContextImpl setOutputDevice:options:completionHandler:]
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: called(self=%@, outputDevice=%@, options=%@)
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Creating a new picker with context %@
-[AVFigEndpointPickerOutputContextImpl setOutputDevice:options:completionHandler:]_block_invoke
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Set current output device to %@ for context %@ and feature %@
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: FigEndpointPicker does not support completion handlers, so just calling completion handler immediately (though route change has likely not yet finished)
+[AVFigEndpointPickerOutputContextImpl resetOutputDeviceForAllOutputContexts]
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Resetting global video output device selection
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Cannot reset all output contexts from an unentitled process
+[AVFigEndpointPickerOutputContextImpl outputContextExistsWithRemoteOutputDevice]
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Cannot examine all output contexts from an unentitled process
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Output context exists with associated remote output device
-[AVFigEndpointPickerOutputContextImpl setOutputDevices:]
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: FigEndpointPicker does not support multiple output devices
-[AVFigEndpointPickerOutputContextImpl addOutputDevice:options:completionHandler:]
-[AVFigEndpointPickerOutputContextImpl removeOutputDevice:]
-[AVFigEndpointPickerOutputContextImpl volume]
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: FigEndpointPicker does not support volume control
-[AVFigEndpointPickerOutputContextImpl setVolume:]
FigEndpointPicker does not support emergency commands
-[AVFigEndpointPickerOutputContextImpl outgoingCommunicationChannel]
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: FigEndpointPicker does not support communication channels
FigEndpointPicker does not support communication channels
parentOutputContext
T@"AVOutputContext",W
outputContextType
associatedAudioDeviceID
supportsMultipleOutputDevices
outputDevices
providesControlForAllVolumeFeatures
outgoingCommunicationChannel
T@"AVOutputContextCommunicationChannel",R,N
T@"AVOutputContext",W,V_parentContext
AVOutputContextFigEndpointPickerNotificationCallback
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Received %@ notification
avofflinevideostabilizer_trace
targetFrameDuration must be valid and positive
dataProvider must be non-nil
destinationBufferPool must be non-nil
-[AVOfflineVideoStabilizer _copyStabilizedSampleBuffer:]
<<<< AVOfflineVideoStabilizer >>>> %s: Client provided bad metadata (%d)
<<<< AVOfflineVideoStabilizer >>>> %s: Client only provided %d frames of priming metadata instead of the desired %d
<<<< AVOfflineVideoStabilizer >>>> %s: Client provided a bad pixel buffer (%d)
<<<< AVOfflineVideoStabilizer >>>> %s: gvs processor failed to finish pending processing (%d)
<<<< AVOfflineVideoStabilizer >>>> %s: The head of the output sbuf queue contained an error: %d
GyroVideoStabilization
-[AVOfflineVideoStabilizer _setupGVSProcessorWithMetadataArray:]
<<<< AVOfflineVideoStabilizer >>>> %s: Failed creating processor (%d)
<<<< AVOfflineVideoStabilizer >>>> %s: Failed setting output callback (%d)
<<<< AVOfflineVideoStabilizer >>>> %s: Failed setting PixelBufferPool (%d)
<<<< AVOfflineVideoStabilizer >>>> %s: Failed setting vis disabled to true
<<<< AVOfflineVideoStabilizer >>>> %s: Could not preload metadata (%d)
Metadata sample time is invalid
-[AVOfflineVideoStabilizer _validateStabilizationMetadata:withSampleTime:isEndOfData:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Aspen/AVOfflineVideoStabilizer.m
<<<< AVOfflineVideoStabilizer >>>> %s: Rejecting metadata dictionary since it contains keys we don't understand: %@
<<<< AVOfflineVideoStabilizer >>>> %s: Rejecting metadata dictionary since it is missing the following required keys: %@
-[AVOfflineVideoStabilizer _validateSourcePixelBuffer:withSampleTime:metadata:isEndOfData:]
<<<< AVOfflineVideoStabilizer >>>> %s: Source pixel buffer sample time doesn't match the metadata sample time for the same frame number
-[AVOfflineVideoStabilizer _createSampleBufferWithPixelBuffer:sampleTime:futureMetadata:status:]
<<<< AVOfflineVideoStabilizer >>>> %s: CMVideoFormatDescriptionCreateForImageBuffer failed (%d)
<<<< AVOfflineVideoStabilizer >>>> %s: CMSampleBufferCreateForImageBuffer failed (%d)
outputSampleBuffers
T@"NSMutableArray",R,N,V_outputSampleBuffers
preferredSourcePixelBufferPrimingFrameCount
preferredSourceStabilizationMetadataPrimingCount
CinematicFutureOutputFramePTSValue
_gvsProcessorOutputReadyCallback
<<<< AVOfflineVideoStabilizer >>>> %s: err == 0, but no sample buffer was returned
<<<< AVCaptureVideoThumbnailOutput >>>> %s: %@ received notification %@
<<<< AVCaptureVideoThumbnailOutput >>>> %s: %@
<<<< AVCaptureAudioDataOutput >>>> %s: (%p) setting sampleBufferDelegate to %@ (%p)
<<<< AVCaptureAudioDataOutput >>>> %s: (%p) setting delegateOverride to %@ (%p)
<<<< AVPlayerLooper >>>> %s: Create with player %p and item %p
<<<< AVPlayerLooper >>>> %s: AVPlayerLooperInternal allocation failed
<<<< AVPlayerLooper >>>> %s: ivarAccessQueue allocation failed
<<<< AVPlayerLooper >>>> %s: loopingItemCopies allocation failed
<<<< AVPlayerLooper >>>> %s: Couldn't set up for looping. Change status to Failed
<<<< AVPlayerLooper >>>> %s: Couldn't load asset duration. Change status to Failed
<<<< AVPlayerLooper >>>> %s: Change to Failed status with error %@
<<<< AVPlayerLooper >>>> %s: Already in Failed state so not updating error
<<<< AVPlayerLooper >>>> %s: Time range duration is %1.3f
<<<< AVPlayerLooper >>>> %s: Loop item duration is %1.3f
<<<< AVPlayerLooper >>>> %s: Using loop duration of %1.3f
<<<< AVPlayerLooper >>>> %s: Looping item duration is 0. Can't loop
<<<< AVPlayerLooper >>>> %s: Loop duration is less than minimum so capped number of copies to %d
<<<< AVPlayerLooper >>>> %s: Need %d copies for looping
<<<< AVPlayerLooper >>>> %s: The minimum number of copies (%d) is sufficient for looping
<<<< AVPlayerLooper >>>> %s: Loop time range starts past item duration
<<<< AVPlayerLooper >>>> %s: Loop time range end is past item duration
<<<< AVPlayerLooper >>>> %s: Need to create %d item copies
<<<< AVPlayerLooper >>>> %s: Can't loop with 0 item copies
<<<< AVPlayerLooper >>>> %s: Failed to allocate item copy
<<<< AVPlayerLooper >>>> %s: Pausing player (current rate: %1.1f) during set up
<<<< AVPlayerLooper >>>> %s: Changing player's action-at-end to Advance
<<<< AVPlayerLooper >>>> %s: In Failed or cancelled state so cannot advance to Ready
<<<< AVPlayerLooper >>>> %s: Restoring player rate(%1.1f)
<<<< AVPlayerLooper >>>> %s: observeValueForKeyPath:ofObject:change:context: called for %@
<<<< AVPlayerLooper >>>> %s: Looping turned off and not waiting for looping copy to finish so ignoring
<<<< AVPlayerLooper >>>> %s: Looping item(%p) failed to become ready so disabling looping
<<<< AVPlayerLooper >>>> %s: Unknown context(%p). Ignoring
<<<< AVPlayerLooper >>>> %s: [%p]Disabling looping since item(%p) failed to play to end with error %@
<<<< AVCaptureConnection >>>> %s: We should not remove the observers in dealloc. see [17229521]
<<<< AVCaptureConnection >>>> %s: Specified max frame rate (%f) is too high, changing it to %f
<<<< AVCaptureConnection >>>> %s: Specified max frame rate (%f) is too low, changing it to %f
<<<< AVCaptureConnection >>>> %s: %lld / %d
<<<< AVCaptureConnection >>>> %s: Specified min frame rate (%f) is too low, changing it to %f
<<<< AVCaptureConnection >>>> %s: Specified min frame rate (%f) is too high, changing it to %f
<<<< AVCaptureConnection >>>> %s: %p preferredVideoStabilizationMode for connection to %@ is: %@
<<<< AVCaptureConnection >>>> %s: %p activeVideoStabilizationMode for connection to %@ is: %@ -> %@ (preferred: %@)
<<<< AVCaptureConnection >>>> %s: Output class is not AVCaptureMetadataOutput?
<<<< AVCaptureConnection >>>> %s: Input class is not AVCaptureMetadataInput or AVCaptureCoreMotionMetadataInput?
<<<< AVCaptureConnection >>>> %s: %@ cannot be set as the active video stabilization mode.
<<<< AVCaptureConnection >>>> %s: %p activeVideoStabilizationMode for connection to %@ is: %@ -> %@
<<<< AVCaptureConnection >>>> %s: AVCaptureVideoStabilizationModeAuto does not map to a FigCaptureVideoStabilizationMethod.  Turning off.
<<<< AVCaptureDevice >>>> %s: Called with media type '%@'
<<<< AVCaptureDevice >>>> %s: Camera access is restricted: %s
<<<< AVCaptureDevice >>>> %s: Missing tccServiceName for media type '%@'
<<<< AVCaptureDevice >>>> %s: TCCAccessPreflight result was kTCCAccessPreflightUnknown for media type '%@'
<<<< AVCaptureDevice >>>> %s: TCCAccessPreflight result was kTCCAccessPreflightDenied for media type '%@'
<<<< AVCaptureDevice >>>> %s: TCCAccessPreflight result was kTCCAccessPreflightGranted for media type '%@'
<<<< AVCaptureDevice >>>> %s: Running in mediaserverd=%d or xctest=%d; access granted to media type '%@'
<<<< AVCaptureDevice >>>> %s: Called with media type '%@', handler %p
<<<< AVCaptureDeviceInput >>>> %s: called (%p)
<<<< AVCaptureDeviceInput >>>> %s: Expecting either audio or video for device %@
<<<< AVCaptureDeviceInput >>>> %s: AVAuthorizationStatus result was AVAuthorizationStatusNotDetermined for media type '%@'; firing off async query to UI
<<<< AVCaptureDeviceInput >>>> %s: Authorized to use AVCaptureDevice %p: %s
<<<< AVCaptureDeviceInput >>>> %s: Disregarding notification %@ since sourceIDs don't match
<<<< AVCaptureDeviceInput >>>> %s: %@ : %@
<<<< AVCaptureFigAudioDevice >>>> %s: (%p)
<<<< AVCaptureFigAudioDevice >>>> %s: (%p) Copy(%@) failed (%d)
<<<< AVCaptureFigAudioDevice >>>> %s: (%p) %@
<<<< AVCaptureFigVideoDevice >>>> %s: (%p) with fcs: %@
<<<< AVCaptureFigVideoDevice >>>> %s: Unexpected white balance gains size! Expected %lu, actual %d
<<<< AVCaptureFigVideoDevice >>>> %s: Unable to copy property %@ into cache
<<<< AVCaptureFigVideoDevice >>>> %s: Could not get localized name for internal device
<<<< AVCaptureFigVideoDevice >>>> %s: Encountered unknown device.
<<<< AVCaptureFigVideoDevice >>>> %s: (%p) %@
<<<< AVCaptureFigVideoDevice >>>> %s: (%p)
<<<< AVCaptureFigVideoDevice >>>> %s: Current activeMinFrameDuration (%lld/%d) is out of range for the new activeFormat, whose minSupportedDuration is (%lld/%d). Clamping!
<<<< AVCaptureFigVideoDevice >>>> %s: Current activeMaxFrameDuration (%lld/%d) is out of range for the new activeFormat, whose maxSupportedDuration is (%lld/%d). Clamping!
<<<< AVCaptureFigVideoDevice >>>> %s: Current videoZoomFactor (%f) exceeds the new activeFormat's max zoom factor (%f). Clamping!
<<<< AVCaptureFigVideoDevice >>>> %s: Current videoZoomFactor (%f) is less than the new activeFormat's min zoom factor (%f). Clamping!
<<<< AVCaptureFigVideoDevice >>>> %s: activeVideoMinFrameDuration changing in custom exposure mode, so sending a new custom exposure request to update frame rate
<<<< AVCaptureFigVideoDevice >>>> %s: %lld / %d
<<<< AVCaptureFigVideoDevice >>>> %s: Changing kCMTimeInvalid to %.2f max fps
<<<< AVCaptureFigVideoDevice >>>> %s: (%p) failed (%d)
<<<< AVCaptureFigVideoDevice >>>> %s: ss is too low for new min frame rate %f, increasing ss.
<<<< AVCaptureFigVideoDevice >>>> %s: activeVideoMaxFrameDuration is changing in custom exposure mode, so sending custom exposure request (if ss is out of range, it will change to the min frame rate)
<<<< AVCaptureFigVideoDevice >>>> %s: Changing kCMTimeInvalid to %f min fps
<<<< AVCaptureFigVideoDevice >>>> %s: focus operation: mode %d, lensPosition %f, %@
<<<< AVCaptureFigVideoDevice >>>> %s: Enqueued manual focus request %d with error %d
<<<< AVCaptureFigVideoDevice >>>> %s: adjustingExposure %d -> %d
<<<< AVCaptureFigVideoDevice >>>> %s: AutoExpose adjustment finished. Transitioning to locked
<<<< AVCaptureFigVideoDevice >>>> %s: Setting exposureMode = Locked after one-shot Auto-Expose or transition from Custom -> Locked Exposure
<<<< AVCaptureFigVideoDevice >>>> %s: Leaving custom exposure, so restoring min/max rates %.2f/%.2f
<<<< AVCaptureFigVideoDevice >>>> %s: exposure operation: %@
<<<< AVCaptureFigVideoDevice >>>> %s: Enqueued custom exposure request %d with error %d
<<<< AVCaptureFigVideoDevice >>>> %s: Enqueued fake bias request %d
<<<< AVCaptureFigVideoDevice >>>> %s: Enqueueing bias request %d with error %d
<<<< AVCaptureFigVideoDevice >>>> %s: Unexpected white balance gains size! Expected %d, actual %d
<<<< AVCaptureFigVideoDevice >>>> %s: Unexpected gray world white balance gains size! Expected %d, actual %d
<<<< AVCaptureFigVideoDevice >>>> %s: Enqueued manual wb request %d with error %d
<<<< AVCaptureFigVideoDevice >>>> %s: white-balance operation: %@
<<<< AVCaptureFigVideoDevice >>>> %s: Iterations used: %d (HIT ITER LIMIT) for gains (%a %a %a) start %a
<<<< AVCaptureFigVideoDevice >>>> %s: (%p) called with %d
<<<< AVCaptureFigVideoDevice >>>> %s: (%p) called with level %f
<<<< AVCaptureFigVideoDevice >>>> %s: (%p) faceRectangle <x:%f, y:%f>, [w:%f, h:%f]
<<<< AVCaptureFigVideoDevice >>>> %s: UNIMPLEMENTED
<<<< AVCaptureFigVideoDevice >>>> %s: _captureSourceSupportedMetadata: %@
<<<< AVCaptureFigVideoDevice >>>> %s: CMMetadataFormatDescriptionCreateWithMetadataSpecifications returned error %d
<<<< AVCaptureFigVideoDevice >>>> %s: (%p) Copy(%@) failed (%d)
<<<< AVCaptureFigVideoDevice >>>> %s: Caching FigCaptureSource %@ to %@
<<<< AVCaptureFigVideoDevice >>>> %s: Setting FigCaptureSource %@ to %@
<<<< AVCaptureFigVideoDevice >>>> %s: (%p) Set(%@) failed (%d)
<<<< AVCaptureFigVideoDevice >>>> %s: Custom exposure duration changed to %lld/%d (%f) (as rate + .05 = %f), setting min frame rate %f -> %f
<<<< AVCaptureFigVideoDevice >>>> %s: Custom exposure duration changed to %lld/%d (%f) (as rate + .05 = %f), cur min frame rate %f is lower, so NOT changing.
<<<< AVCaptureFigVideoDevice >>>> %s: Received DeviceWhiteBalanceGains notification with a bad payload. Expected size = %d, actual = %d
<<<< AVCaptureFigVideoDevice >>>> %s: Received GrayWorldDeviceWhiteBalanceGains notification with a bad payload. Expected size = %d, actual = %d
<<<< AVCaptureFigVideoDevice >>>> %s: State inconsistency: ramp %d notified completion but invalid ramping target %g
<<<< AVCaptureFigVideoDevice >>>> %s: Invalid notification payload!
<<<< AVCaptureFigVideoDevice >>>> %s: Called with queue %p
<<<< AVCaptureFigVideoDevice >>>> %s: 
Firing completion handler %p with kCMTimeInvalid due to error %d (cur=%d/completed=%d)
<<<< AVCaptureFigVideoDevice >>>> %s: 
Firing completion handler %p for fake bias request with time %f (cur=%d/completed=%d)
<<<< AVCaptureFigVideoDevice >>>> %s: 
Firing completion handler %p for EXACT MATCH request with time %f (cur=%d/completed=%d)
<<<< AVCaptureFigVideoDevice >>>> %s: 
Firing completion handler %p for earlier (coalesced?) request with time %f (cur=%d/completed=%d)
<<<< AVCaptureFigVideoDevice >>>> %s: 
Not dequeueing request -- it's in the future (cur=%d/completed=%d)
<<<< AVCaptureFigVideoDevice >>>> %s: Exiting for queue %p
<<<< AVCaptureFigVideoDevice >>>> %s: draining request %d from queue %@
<<<< AVCaptureFigVideoDevice >>>> %s: No FigCaptureSource
<<<< AVCaptureInput >>>> %s: %@ %@
<<<< AVCaptureMovieFileOutput >>>> %s: Cleaning up unfinished movie recordings since mediaserverd died
<<<< AVCaptureMovieFileOutput >>>> %s: posting AVCaptureMovieFileOutputRecordingCompletedNotification
<<<< AVCaptureMovieFileOutput >>>> %s: NOT posting AVCaptureMovieFileOutputRecordingCompletedNotification because no thumbnail
<<<< AVCaptureMovieFileOutput >>>> %s: consolidateMovieFragmentsInFile:%@ failed (%@)
<<<< AVCaptureMovieFileOutput >>>> %s: updateMovieMetadataInFile:%@ failed (%@)
<<<< AVCaptureMovieFileOutput >>>> %s: calling from main thread [%@ captureOutput:%@ didFinishRecordingToOutputFileAtURL:%@ debugMetadataSidecarFileURL:%@ fromConnections:blah error:%@] (recording = %d, paused = %d)
<<<< AVCaptureMovieFileOutput >>>> %s: calling from main thread [%@ captureOutput:%@ didFinishRecordingToOutputFileAtURL:%@ fromConnections:blah error:%@] (recording = %d, paused = %d)
<<<< AVCaptureMovieFileOutput >>>> %s: Disregarding notification %@ since sinkIDs don't match
<<<< AVCaptureMovieFileOutput >>>> %s: Disregarding notification %@ since its settingsID doesn't match any I know about
<<<< AVCaptureMovieFileOutput >>>> %s: Received duplicate _DidStartRecording message from FigCaptureSession! BAD!!!
<<<< AVCaptureMovieFileOutput >>>> %s: calling [%@ captureOutput:%@ didStartRecordingToOutputFileAtURL:%@ fromConnections:%@]
<<<< AVCaptureMovieFileOutput >>>> %s: Received _DidPauseRecording message without first receiving a _DidStartRecording.  That can't be good.
<<<< AVCaptureMovieFileOutput >>>> %s: Received _DidResumeRecording message without first receiving a _DidStartRecording.  That can't be good.
<<<< AVCaptureMovieFileOutput >>>> %s: Received _DidResumeRecording message without first receiving a _DidPauseRecording.  That can't be good.
<<<< AVCaptureOutput >>>> %s: %@ %@
<<<< AVCaptureOutput >>>> %s: sensor:{%fx%f} scaled:{%fx%f} vt:%@ front:%d applyRot:%d rotDegs:%f orient:%d applyMirr:%d isMirr:%d
<<<< AVCaptureOutput >>>> %s: NOT using AVCaptureSession.plist video settings, since max frame rate is changed
<<<< AVOutputDeviceDiscoverySession >>>> %s: called (self=%p, impl=%@)
<<<< AVOutputDeviceDiscoverySession >>>> %s: Available output devices: %@
<<<< AVCaptureSession >>>> %s: (%p)
<<<< AVCaptureSession >>>> %s: (%p) (pthread %p)SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
<<<< AVCaptureSession >>>> %s: (%p) %@ (current: %@)
<<<< AVCaptureSession >>>> %s: dot file string:
<<<< AVCaptureSession >>>> %s: (%p)failureReason = %@
<<<< AVCaptureSession >>>> %s: (%p) %@
<<<< AVCaptureSession >>>> %s: failureReason = %@
<<<< AVCaptureSession >>>> %s: Interrupted with unexpected fig interruption reason (%d)
<<<< AVCaptureSession >>>> %s: (%p) posting %@ (reason: %@)
<<<< AVCaptureSession >>>> %s: (%p) (pthread:%p)
<<<< AVCaptureSession >>>> %s: AVCaptureSession.dot file written to %@ string:
<<<< AVCaptureSession >>>> %s: called while session is not running.
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) locking to call FigCaptureSessionStop
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) WAITING FOR STOP--------------------------------------->
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) BACK FROM WAITING FOR STOP timedOut = %d, stillWaiting = %d (should be 0)<-------------------------------------------------
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) unlocking
<<<< AVCaptureSession >>>> %s: (%p) posting AVCaptureSessionDidStartRunningNotification
<<<< AVCaptureSession >>>> %s: (%p) NOT posting AVCaptureSessionDidStartRunningNotification, we are interrupted.
<<<< AVCaptureSession >>>> %s: (%p) NOT posting AVCaptureSessionDidStartRunningNotification due to _buildAndRunGraph failure
<<<< AVCaptureSession >>>> %s: (%p) _stopFigCaptureSession failure
<<<< AVCaptureSession >>>> %s: (%p) posting AVCaptureSessionDidStopRunningNotification
<<<< AVCaptureSession >>>> %s: (%p)*** Device just became %s.
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Triggering buildAndRunGraph while preset = InputPriority for change %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Ignoring active format change while preset = InputPriority (I didn't do it, but nothing's changed) %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Setting preset to input priority for change %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Setting preset to input priority *WITHOUT triggering buildAndRunGraph* (because nothing really changed) for change %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Ignoring active format change %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Triggering buildAndRunGraph for client-initiated activeDepthDataFormat change %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Ignoring active depth data format change (it didn't really change) %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Ignoring active depth data format change %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Triggering buildAndRunGraph for client-initiated videoHDREnabled change %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Triggering buildAndRunGraph for activeColorSpace change %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Ignoring active color space change (device.activeFormat just changed to a non wide-color format) %@
<<<< AVCaptureSession >>>> %s: (Session %p, thread %p) Ignoring active color space change (a session is configuring it automatically) %@
<<<< AVCaptureSession >>>> %s: %p Creating new FigCaptureSession (local!)
<<<< AVCaptureSession >>>> %s: failed (%d)
<<<< AVCaptureSession >>>> %s: (%p) posting AVCaptureSessionRuntimeErrorNotification with %@
<<<< AVCaptureSession >>>> %s: (%p)called
<<<< AVCaptureSession >>>> %s: New fcs config: %@
<<<< AVCaptureSession >>>> %s: Old fcs config: %@
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) locking
<<<< AVCaptureSession >>>> %s: Setting fcs config(%lld) %@
<<<< AVCaptureSession >>>> %s: Starting fig capture session
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) WAITING FOR START--------------------------------------->
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) BACK FROM WAITING FOR START timedOut = %d, stillWaiting = %d (should be 0)<-------------------------------------------------
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) not calling waitInMode:, since FigCaptureSession won't be sending any notifications
<<<< AVCaptureSession >>>> %s: (%p)Stopping and uninitializing graph
<<<< AVCaptureSession >>>> %s: Picked a different activeFormat for wide color: %@
<<<< AVCaptureSession >>>> %s: updating %@ to %@
<<<< AVCaptureSession >>>> %s: resetting the active min/max frame rate to the default values
<<<< AVCaptureSession >>>> %s: Aggregate connection max frame rate (%f) is too high, changing it to %f
<<<< AVCaptureSession >>>> %s: Aggregate connection max frame rate (%f) is too low, changing it to %f
<<<< AVCaptureSession >>>> %s: Aggregate connection min frame rate (%f) is too low, changing it to %f
<<<< AVCaptureSession >>>> %s: Aggregate connection min frame rate (%f) is too high, changing it to %f
<<<< AVCaptureSession >>>> %s: Altering default video frame rate range to %lld-%d to maximize depth frame rate (%d)
<<<< AVCaptureSession >>>> %s: Started running while interrupted, so ending interruption: (%d, %d)
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) locking for DidStartRunning
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) signalling for DidStartRunning
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) unlocking for DidStartRunning
<<<< AVCaptureSession >>>> %s: Got interrupted: %d
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) locking for DidStopRunning
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) signalling for DidStopRunning
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) unlocking for DidStopRunning
<<<< AVCaptureSession >>>> %s: Removing orphaned AVCaptureSessionConfiguration with configID %lld
<<<< AVCaptureSession >>>> %s: Not removing AVCaptureSessionConfiguration with configID %lld, since the commit operation failed with err %d, and the app may restart with the same config.
<<<< AVCaptureSession >>>> %s: Couldn't find an AVCaptureSessionConfiguration for committed config with id %lld
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) locking for ConfigurationCommitted (configID = %lld)
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) signalling for ConfigurationCommitted (configID = %lld)
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) unlocking for ConfigurationCommitted (configID = %lld)
<<<< AVCaptureSession >>>> %s: (%p) posting AVCaptureDeviceDidStartRunningNotification for %@
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) locking for ConfigurationDidBecomeLive (configID = %lld)
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) signalling for ConfigurationDidBecomeLive (configID = %lld)
<<<< AVCaptureSession >>>> %s: (%p)(pthread:%p) unlocking for ConfigurationDidBecomeLive (configID = %lld)
<<<< AVCaptureSession >>>> %s: %@ is missing a FigCaptureSessionRef
<<<< AVCaptureSession >>>> %s: %@
<<<< AVDepthData >>>> %s: CVPixelBufferCreate failed (%d)
<<<< AVDepthData >>>> %s: Failed to create rotated pixel buffer
<<<< AVDepthData >>>> %s: FigDepthRotateBuffer reported failure (%d)
<<<< AVDepthData >>>> %s: CVPixelBufferLockBaseAddress failed (%d)
<<<< AVDepthData >>>> %s: Pixel buffer copy failed (%d)
<<<< AVDepthData >>>> %s: FigDepthConvertBuffer failed (%d)
<<<< AVCaptureStillImageOutput >>>> %s: %d
<<<< AVCaptureStillImageOutput >>>> %s: called with %@
<<<< AVCaptureStillImageOutput >>>> %s: isPrepared = %d
<<<< AVCaptureStillImageOutput >>>> %s: :%s
<<<< AVCaptureStillImageOutput >>>> %s: Still image capture error: (%d, %d)
<<<< AVCaptureStillImageOutput >>>> %s: calling sbufCompletionBlock with %@, error: %@
<<<< AVCaptureStillImageOutput >>>> %s: Image CustomRendered tag is %d
<<<< AVCaptureStillImageOutput >>>> %s: *** no jpeg surface returned, must have run out of memory! ***
<<<< AVCaptureStillImageOutput >>>> %s: calling iosurfaceCompletionBlock with %@, %d, %@, %d, %@, error: %@
<<<< AVCaptureStillImageOutput >>>> %s: *** no image data sbuf found -- we were expecting one, assuming out of memory ***
<<<< AVCaptureStillImageOutput >>>> %s: calling bracketedCaptureCompletionBlock with %@, error: %@
<<<< AVCaptureStillImageOutput >>>> %s: Still image prepare bracket error: (%d, %d)
<<<< AVCaptureStillImageOutput >>>> %s: Disregarding notification %@ since sinkIDs don't match
<<<< AVCaptureStillImageOutput >>>> %s: Still image capture error invalid settingsID %lld
<<<< AVCaptureStillImageOutput >>>> %s: Bracket preparation error invalid settingsID %lld
<<<< AVCaptureStillImageOutput >>>> %s: #### maxDataSize reported as 0 ####
<<<< AVCaptureStillImageOutput >>>> %s: CMBlockBufferCreateContiguous failed (%d)
<<<< AVCaptureStillImageOutput >>>> %s: CMBlockBufferGetDataPointer failed (%d)
<<<< AVCaptureStillImageOutput >>>> %s: called
<<<< AVCaptureVideoDataOutput >>>> %s: (%p) setting sampleBufferDelegate to %@ (%p)
<<<< AVCaptureVideoDataOutput >>>> %s: %lld / %d (%f fps)
<<<< AVCaptureVideoDataOutput >>>> %s: (%p) setting delegateOverride to %@ (%p)
<<<< AVPortraitEffectsMatte >>>> %s: CVPixelBufferCreate failed (%d)
<<<< AVPortraitEffectsMatte >>>> %s: Failed to create rotated pixel buffer
<<<< AVPortraitEffectsMatte >>>> %s: VTImageRotationSessionCreate failed (%d)
<<<< AVPortraitEffectsMatte >>>> %s: VTImageRotationSessionTransferImage failed (%d)
<<<< AVPortraitEffectsMatte >>>> %s: CVPixelBufferLockBaseAddress failed (%d)
<<<< AVPortraitEffectsMatte >>>> %s: exifOrientation (%d) is invalid. Returning 0 degrees/not mirrored
<<<< AVCaptureVideoPreviewLayer >>>> %s: NOT centering sublayer because it's already centered
<<<< AVCaptureVideoPreviewLayer >>>> %s: (%p) %@
<<<< AVCaptureVideoPreviewLayer >>>> %s: (%p) (pthread %p)
<<<< AVCaptureVideoPreviewLayer >>>> %s: (%p) (pthread %p)PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
<<<< AVCaptureVideoPreviewLayer >>>> %s: called
<<<< AVCaptureVideoPreviewLayer >>>> %s: previewMirrored changed %d -> %d
<<<< AVCaptureVideoPreviewLayer >>>> %s: %d
<<<< AVCaptureVideoPreviewLayer >>>> %s: %@ %@
<<<< AVCaptureVideoPreviewLayer >>>> %s: %@->%@
<<<< AVCaptureVideoPreviewLayer >>>> %s: Invalid source dimensions
<<<< AVCaptureVideoPreviewLayer >>>> %s: Output size: %d, %d. Estimated preview size: %d, %d;
<<<< AVCaptureVideoPreviewLayer >>>> %s: update sensor:%@ preview:%@ vt:%@ front:%d orientation:%d bounds:%@ gravity:%@ mirrored:%d
<<<< AVCaptureVideoPreviewLayer >>>> %s: Disregarding notification %@ since sinkIDs don't match
<<<< AVCaptureVideoPreviewLayer >>>> %s: %@ received notification %@
<<<< AVCaptureVideoPreviewLayer >>>> %s: %@ posting AVCaptureVideoPreviewLayerDidStartRunningNotification
<<<< AVCaptureVideoPreviewLayer >>>> %s: new preview format: %@
<<<< AVCaptureVideoPreviewLayer >>>> %s: %@
<<<< AVCaptureVideoPreviewLayer >>>> %s: Return CATransform3DIdentity because previewSize is CGSizeZero
<<<< AVCaptureVideoPreviewLayer >>>> %s: previewSize = %@, containerSize = %@, scaleX = %f, scaleY = %f
<<<< AVCaptureVideoPreviewLayer >>>> %s: originalRotationDegrees:%i previewRotationDegrees:%i finalRotationDegrees:%i isMirrored:%i
<<<< AVCaptureVideoPreviewLayer >>>> %s: returnTransform [ %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f ]
<<<< AVPlayerLayer >>>> %s: Hiding video layer since the presentation size is 0x0
<<<< AVPlayerLayer >>>> %s: called (self=%p)
<<<< AVPlayerLayer >>>> %s: %@ frame is { %f, %f }
<<<< AVPlayerLayer >>>> %s: Unhiding video layer since the presentation size is { %f, %f }
<<<< AVPlayerLayer >>>> %s: Setting closed caption layer bounds to %@
<<<< AVPlayerLayer >>>> %s: Using box filter downscale
<<<< AVPlayerLayer >>>> %s: Called (self=%p, bounds=%@)
<<<< AVPlayerLayer >>>> %s: %p notifying player %p about new display size %@
<<<< AVPlayerLayer >>>> %s: Called (self=%p)
<<<< AVPlayerLayer >>>> %s: %p size needs update from { %f, %f } to { %f, %f } (force=%s)
<<<< AVPlayerLayer >>>> %s: %p size needs no update using cached value { %f, %f }
<<<< AVPlayerLayer >>>> %s: called (self=%p, player=%p)
<<<< AVPlayerLayer >>>> %s: %@ commence player <%p> observation over currentItem.presentationSize
<<<< AVPlayerLayer >>>> %s: %p Observing isDisplayingClosedCaptions on player %p
<<<< AVPlayerLayer >>>> %s: %@ resign player <%p> observation over currentItem.presentationSize
<<<< AVPlayerLayer >>>> %s: Did cancel all observation of old player
<<<< AVPlayerLayer >>>> %s: called (keyPath=%@, object=%@, change=%@, context=%p
<<<< AVPlayerLayer >>>> %s: %@ AVPlayerLayer's net flip status does not match CoreAnimation default; adding a flip at videoLayer
<<<< AVPlayerLayer >>>> %s: %@ AVPlayerLayer's net flip status does match CoreAnimation default
<<<< AVPlayerLayer >>>> %s: Not applying new value of AVPlayer.currentItem.nonForcedSubtitleDisplayEnabled for player %p not currently being observed (expected %p)
<<<< AVPlayerLayer >>>> %s: Not applying new value of AVPlayer.isDisplayingClosedCaptions for player %p not currently being observed (expected %p)
<<<< AVPlayerLayer >>>> %s: %@ closed caption layer
<<<< AVPlayerLayer >>>> %s: called (self=%p, item=%p, readyForDisplay=%d)
<<<< AVPlayerLayer >>>> %s: %@ setting player to <%p>
<<<< AVPlayerLayer >>>> %s: Setting readyForDisplay to NO due to detaching from player %@ (self=%p)
<<<< AVPlayerLayer >>>> %s: %p Observing currentItem.hasEnqueuedVideoFrame on player %p
<<<< AVPlayerLayer >>>> %s: %@ setting self on player <%p>
<<<< AVPlayerLayer >>>> %s: called
<<<< AVPlayerLayer >>>> %s: %@ visibility became YES
<<<< AVPlayerLayer >>>> %s: %@ visibility became NO
<<<< AVPlayerLayer >>>> %s: finished
<<<< AVPlayerLayer >>>> %s: requesting the pixelBufferAttributes property on a presentation layer is invalid
<<<< AVPlayerLayer >>>> %s: scalingFactor(%d) is not between 2 and 8
<<<< AVPlayerLayer >>>> %s: Return CATransform3DIdentity because presentationSize is CGSizeZero
<<<< AVTimebaseObserver >>>> %s: engage timebase <%p> notifications for <%p>
<<<< AVTimebaseObserver >>>> %s: firing at time == %@
<<<< AVTimebaseObserver >>>> %s: timebase rate change from [%f] to [%f]
<<<< AVTimebaseObserver >>>> %s: Playback stopped. Observe immediate.
<<<< AVTimebaseObserver >>>> %s: Playback resumed. Observe immediate.
<<<< AVTimebaseObserver >>>> %s: rescheduling after non-periodic firing near time == %@
<<<< AVTimebaseObserver >>>> %s: rescheduling after periodic firing at time == %@
<<<< AVTimebaseObserver >>>> %s: scheduling for == %@
<<<< AVTimebaseObserver >>>> %s: Periodic Observer <%p>: Detected stop time jump to the last time where rate fell to zero and have winnowed this event
<<<< AVTimebaseObserver >>>> %s: Periodic Observer <%p> Jumped to time [%f]
<<<< AVTimebaseObserver >>>> %s: Playback direction did change. Resetting timer
<<<< AVTimebaseObserver >>>> %s: Occasional timebase observer <%p> with source <%p> at current time [%f] nextfire [%f]
<<<< AVTimebaseObserver >>>> %s: Absolute timebase observer <%p> with source <%p> at current time [%f] nextfire [%f]
<<<< AVTimebaseObserver >>>> %s: Timebase returned time(%@), clamped from time(%@)
<<<< AVTimebaseObserver >>>> %s: Timebase returned time(%@)
<<<< AVTimebaseObserver >>>> %s: Timebase returned non-numeric time (%lld/%d/%#x/%lld)) so setting to kCMTimeZero
<<<< AVTimebaseObserver >>>> %s: Timebase returned time with non-zero epoch(%lld) so setting to kCMTimeZero
<<<< AVAssetDownloadStorageManager >>>> %s: Set storageManagementPolicy %@ for asset at URL %@
<<<< AVAssetDownloadStorageManager >>>> %s: StorageManagementPolicy for asset at URL %@ is  %@ 
<<<< AVMetadataItem >>>> %s: Value %p does not conform to NSObject and/or NSCopying
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Keyspace must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Key must conform to NSObject and NSCopying
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Locale must be an instance of NSLocale
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_ExtendedLanguageTag must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_LanguageCode must be an instance of NSString or of NSNumber
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Value must be CMBoxedMetadata or conform to NSObject and NSCopying
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_DataTypeNamespace must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_ConformingDataTypes must be an instance of NSArray
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_DataLength must be an instance of NSNumber
<<<< AVMetadataItem >>>> %s: Identifier value %@ must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Timestamp must be an instance of CFDictionary
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Duration must be an instance of CFDictionary
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Date must be an instance of NSDate
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_DiscoveryTimestamp must be an instance of NSDate
<<<< AVMetadataItem >>>> %s: *** Could not canonicalize language: %@. ***
<<<< AVMetadataItem >>>> %s: <%p> initiating asynchronous loading of lazily-loaded metadata value
<<<< AVMetadataItem >>>> %s: <%p> completed asynchronous loading of lazily-loaded metadata value
<<<< AVMetadataItem >>>> %s: keyspace not found %@
<<<< AVMetadataItem >>>> %s: key not found %@
<<<< AVAsset >>>> %s: <%p> called for property list %@, mediaSelectionOptionOut = <%p>
<<<< AVAsset >>>> %s: <%p> resolved to group %@ and option %@
<<<< AVAsset >>>> %s: *** Could not canonicalize language: %@. ***
<<<< AVAsset >>>> %s: *** MediaValidator.plist was not loaded for this platform! Defaulting to no video support. ***
<<<< AVAsset >>>> %s: %@ <%p> FigAssetCopyAssetWithDownloadToken for downloadToken %llu returned %d
<<<< AVAsset >>>> %s: creating AVAssetInspectorLoader
<<<< AVAsset >>>> %s: using custom AVAssetInspectorLoader
<<<< AVAsset >>>> %s: %@ creating AVFigAssetInspectorLoader
<<<< AVAsset >>>> %s: %@ Created %p
<<<< AVAsset >>>> %s: Cannot create AVAssetDownloadCahe when an AVManagedAssetCache is already present.
<<<< AVAsset >>>> %s: %@ Received notification for %@
<<<< AVAsset >>>> %s: %s
<<<< AVAsset >>>> %s: _URLAsset->resourceLoader was unexpectedly non-nil
<<<< AVAsset >>>> %s: Ignoring ResponseForClientHandledURLRequest because no FigPlaybackItem was available to receive it
<<<< AVAsset >>>> %s: Ignoring ResponseForClientHandledURLRequest because no FigAsset was available to receive it
<<<< AVAsset >>>> %s: Ignoring ResponseForClientHandledURLRequest because no FigAssetImageGenerator was available to receive it
<<<< AVAsset >>>> %s: No payload or payload not a dictionary for kFigAssetClientHandledURLRequestNotificationKey_RequestDictionary
<<<< AVAssetImageGenerator >>>> %s: Creating FigAssetImageGenerator from FigAsset
<<<< AVAssetImageGenerator >>>> %s: called
<<<< AVAssetImageGenerator >>>> %s: composition => using AVAssetReader
<<<< AVAssetImageGenerator >>>> %s: not a composition => using FigAssetImageGenerator
<<<< AVAssetImageGenerator >>>> %s: calling FigAssetImageGeneratorCopyCGImageAtTime time %.3f options %@
<<<< AVAssetImageGenerator >>>> %s: no FigAssetImageGenerator instance!
<<<< AVAssetImageGenerator >>>> %s: calling FigAssetImageGeneratorRequestCGImageAtTimeAsync time %.3f options %@
<<<< AVAssetImageGenerator >>>> %s: calling handler with failed status, error %@
<<<< AVAssetImageGenerator >>>> %s: calling handler with succeeded status, actualTime %.3f
<<<< AVAssetImageGenerator >>>> %s: calling handler with cancelled status
<<<< AVAssetImageGenerator >>>> %s: calling handler with failed status, error %d
<<<< AVAssetImageGenerator >>>> %s: URL response required
<<<< AVAssetImageGenerator >>>> %s: No payload or payload not a dictionary for kFigAssetImageGeneratorNotification_URLResponseRequired
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVAssetTrack.m %s: %s
<<<< AVCaptureDataOutputSynchronizer >>>> %s: (%p) setting delegate to %@ (%p)
<<<< AVCaptureDataOutputSynchronizer >>>> %s: %*s%d] %lld
<<<< AVCaptureDataOutputSynchronizer >>>> %s: %*s%d]A%lld
<<<< AVCaptureDataOutputSynchronizer >>>> %s: Received data callback from an unknown capture output %@, dropping data on the floor
<<<< AVCaptureDataOutputSynchronizer >>>> %s: Aging out master data with time %lld / %d
<<<< AVCaptureDataOutputSynchronizer >>>> %s: prevMaster:%lld (~%lld) -> slave:%lld -> (~%lld) nextMaster:%lld. Picked %lld
<<<< AVCaptureDataOutputSynchronizer >>>> %s: dataOutput[%d](%p) No synchronized datas. Skipping.
<<<< AVCaptureDataOutputSynchronizer >>>> %s: dataOutput[%d](%p) ts %lld / %d matches. Dispatching.
<<<< AVCaptureDataOutputSynchronizer >>>> %s: dataOutput[%d](%p) ts %lld / %d != %lld / %d. Off by %lld / %d. Not dispatching
<<<< AVCaptureDataOutputSynchronizer >>>> %s: (%p) Emitting %@
<<<< AVPlayer >>>> %s: Posting AVPlayerRateDidChangeNotification for status change
<<<< AVPlayer >>>> %s: called on <%@>. Setting attributes on decoder to:
<%@>
<<<< AVPlayer >>>> %s: %@ called (self = %@, new current item = %@)
<<<< AVPlayer >>>> %s: dispatching call to -_applyPlayQueueChangesToFigPlayerWithCompletionHandler: (self=%p)
<<<< AVPlayer >>>> %s: Item <%p> Now ReadyToPlay. Reevaluting if okay to play while transition to background.
<<<< AVPlayer >>>> %s: Item <%p> Reevalution complete. Not okay to play while transition to background. Pausing.
<<<< AVPlayer >>>> %s: %@ called (self = %@, FigPlaybackItem = %p
<<<< AVPlayer >>>> %s: The FigPlaybackItem that posted ItemBecameCurrent has already been removed from the queue; fall back to identifying the current item using FigPlayerCopyPlayQueueItem
<<<< AVPlayer >>>> %s: Handling removal of item %@ (self = %@)
<<<< AVPlayer >>>> %s: %@ New current item: %@ %@ (self = %@)
<<<< AVPlayer >>>> %s: %@ called (self = %@)
<<<< AVPlayer >>>> %s: removed current item, now have %@
<<<< AVPlayer >>>> %s: no change
<<<< AVPlayer >>>> %s: %@ called (self = %@, item = %@ %@, afterItem = %@ %@)
<<<< AVPlayer >>>> %s: now have %@
<<<< AVPlayer >>>> %s: Surrogate player enabled = %d
<<<< AVPlayer >>>> %s: Creating instance of %s
<<<< AVPlayer >>>> %s: %@ called (self=%p)
<<<< AVPlayer >>>> %s: %@ Dispatching FigPlayer copy property block (self=%p) to a background queue if necessary
<<<< AVPlayer >>>> %s: Dispatching FigPlayer configuration block (self=%p) to state dispatch queue
<<<< AVPlayer >>>> %s: %@ Will update status (self=%p)
<<<< AVPlayer >>>> %s: %@ setting up FigPlayer <%p>
<<<< AVPlayer >>>> %s: underlying FigPlayer did not implement SetRateWithOptions. Fall back to SetRateWithFade
<<<< AVPlayer >>>> %s: underlying FigPlayer did neither implement SetRateWithOptions nor SetRateWithFade. Fall back to SetRate
<<<< AVPlayer >>>> %s: Failed adding playback item of %@ to play queue immediately (self = %@), will remove item
<<<< AVPlayer >>>> %s: figplayer creation failed [%d]
<<<< AVPlayer >>>> %s: %@ Did update status to %d (self=%p)
<<<< AVPlayer >>>> %s: setExpectedAssetTypes %@
<<<< AVPlayer >>>> %s: sawFileType = %d, sawStreamingType = %d
<<<< AVPlayer >>>> %s: %@ called (self = %@, item = %@ %@)
<<<< AVPlayer >>>> %s: %@ removed %@ %@, now have %@
<<<< AVPlayer >>>> %s: %@ called. Rate is now [%f], changed because %s
<<<< AVPlayer >>>> %s: Posting AVPlayerRateDidChangeNotification with payload %@
<<<< AVPlayer >>>> %s: %@ _setUsesLegacyAutomaticWaitingBehavior: %s
<<<< AVPlayer >>>> %s: Obtaining volume for category [%@]
<<<< AVPlayer >>>> %s: %@ setting to %d
<<<< AVPlayer >>>> %s: setting to %@
<<<< AVPlayer >>>> %s: Unrecognized player role %@
<<<< AVPlayer >>>> %s: %@ Trying to set picker id : %@
<<<< AVPlayer >>>> %s: No figPlayer found, cannot set picker id
<<<< AVPlayer >>>> %s: %@ called (self = <%p>, time observer = <%p>)
<<<< AVPlayer >>>> %s: closedCaptionLayers array snapshot:%@
<<<< AVPlayer >>>> %s: %@ dispatching (self = %p)
<<<< AVPlayer >>>> %s: %@ maximumLayerDisplaySize = %@ (self = %p)
<<<< AVPlayer >>>> %s: %@ AVPlayerLayer(%p) and its closedCaptionLayer(%p)
<<<< AVPlayer >>>> %s: %@ updating video layers due to adding layer %p (self=%@)
<<<< AVPlayer >>>> %s: %@ not updating video layers, despite adding layer %p (self=%@)
<<<< AVPlayer >>>> %s: Entitlement not available to set allowsVideoPlaybackWhileInBackground property
<<<< AVPlayer >>>> %s: Posting AVPlayerAvailableHDRModesDidChangeNotification
<<<< AVPlayer >>>> %s: availableHDRModes returning %d
<<<< AVPlayer >>>> %s: Returning hasAVPlayerLayerInPIPMode: %s
<<<< AVPlayer >>>> %s: Found non-LCD CAContext so externally displayed
<<<< AVPlayer >>>> %s: isExternalPlaybackActive is YES
<<<< AVPlayer >>>> %s: Not suspended under lock
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as an associated AVPlayerLayer is in PIP mode
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ %@ ]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background: %d
<<<< AVPlayer >>>> %s: %@ PIP mode is active
<<<< AVPlayer >>>> %s: %@ Under device lock and has external display active
<<<< AVPlayer >>>> %s: %@ Extended mode is active
<<<< AVPlayer >>>> %s: %@ Allows video in background property set
<<<< AVPlayer >>>> %s: %@ Host application is in foreground
<<<< AVPlayer >>>> %s: %@ Should Detach: [%@]
<<<< AVPlayer >>>> %s: called
<<<< AVPlayer >>>> %s: Item <%@ %p> Pausing since cannot transition to background
<<<< AVPlayer >>>> %s: Item <%@ %p> Unable to evaluate if okay to play while transition to background. Will reevaluate when ReadyToPlay
<<<< AVPlayer >>>> %s: called (asset=%p)
<<<< AVPlayer >>>> %s: %@ called (self = %@, inNotificationName = %@, inNotificationPayload = %@)
<<<< AVPlayer >>>> %s: %@ called (self = %@, inNotificationName = %@)
<<<< AVPlayer >>>> %s: Posting _AVPlayer_VolumeDidChangeNotification with payload %@
<<<< AVPlayer >>>> %s: %@ kFigPlayerNotification_MutedDidChange (self = %@ value [%d])
<<<< AVPlayer >>>> %s: Posting AVPlayerCurrentItemDidChangeNotification with reason %@
<<<< AVPlayer >>>> %s: %@ kFigPlayerNotification_CurrentItemDidChange (self = %@, FigPlaybackItem = %p
<<<< AVPlayer >>>> %s: %@ kFigPlayerNotification_CurrentItemDidChange due to AddTo/RemoveFrom-PlayQueue. No need to advance current item to match Fig
<<<< AVPlayer >>>> %s: %@ player <%p> failed to create fig sub item (error: %@)
<<<< AVPlayer >>>> %s: Posting AVPlayerPlaybackWasInterruptedNotification
<<<< AVPlayer >>>> %s: %@ called (self = %@, notification = %@)
<<<< AVPlayer >>>> %s: %@ AVPlayer <%p>: iapd extended mode has changed. Conditions to maintain videoLayer->figPlayer don't hold. Detaching.
<<<< AVPlayer >>>> %s: %@ AVPlayer <%p>: iapd extended mode has changed. Conditions to maintain videoLayer->figPlayer do hold. Attaching.
<<<< AVPlayer >>>> %s: %@ AVPlayer <%p>: has no layers or no figPlayer. Nothing to attach/detach for iapd
<<<< AVSampleBufferAudioRenderer >>>> %s: adding notification listener to %p with listener %p
<<<< AVSampleBufferAudioRenderer >>>> %s: removing notification listener to %p with listener %p
<<<< AVSampleBufferAudioRenderer >>>> %s: called
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] created
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] Transitioning to status: %d
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %@
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %1.3f
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called:
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %d
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] trying to add to a synchronizer (%p) when we already are added to a synchronizer (%p).
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %p
<<<< AVAssetWriterInputMetadataAdaptor >>>> %s: Unrecognized asset writer status %d
<<<< AVPlayerItem >>>> %s: %@ AVPlayerItem <%p> created with asset at URL [%@], automatically loaded asset keys %@
<<<< AVPlayerItem >>>> %s: %@ Requesting automatic loading of FigAsset properties %@
<<<< AVPlayerItem >>>> %s: %@ Requesting automatic loading of FigAssetTrack properties %@
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItemSeekToDate() failed for initial date
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItemSetProperty() failed witih %d for initial estimated date
<<<< AVPlayerItem >>>> %s: %@ called (self = %@)
<<<< AVPlayerItem >>>> %s: We have neither a FigAsset, URL, nor FigFormatReader, so cannot create a FigPlaybackItem
<<<< AVPlayerItem >>>> %s: %@ Adding playback item of %@ to play queue immediately (player = %@)
<<<< AVPlayerItem >>>> %s: %@ item <%p> status changing to AVPlayerItemStatusFailed with error %@
<<<< AVPlayerItem >>>> %s: %@ Item <%p> is fetching TrackIDArray
<<<< AVPlayerItem >>>> %s: %@ called (self = %@) to invoke %d handlers
<<<< AVPlayerItem >>>> %s: %@ basics already ready
<<<< AVPlayerItem >>>> %s: %@ initialSamples already ready
<<<< AVPlayerItem >>>> %s: %@ CPEProtector already ready
<<<< AVPlayerItem >>>> %s: Either everything necessary is already ready, or making it all ready has failed
<<<< AVPlayerItem >>>> %s: Copying completion handler for later invocation in response to readiness notifications
<<<< AVPlayerItem >>>> %s: %@ Item <%p> is fetching its dimensions
<<<< AVPlayerItem >>>> %s: Invoking completion handler for cancelled seek %d
<<<< AVPlayerItem >>>> %s: Invoking seek completion handler for seek id %d
<<<< AVPlayerItem >>>> %s: %@ Item <%p> Seek to time %@ with tolerance <%@, %@>
<<<< AVPlayerItem >>>> %s: %@ Using seek ID %d
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItemSeekToDateWithID() failed
<<<< AVPlayerItem >>>> %s: can't create looping timebase! item will not loop.
<<<< AVPlayerItem >>>> %s: Unknown AVAudioMixEffectParameters type.
<<<< AVPlayerItem >>>> %s: %@ setting video composition instructions to %@
<<<< AVPlayerItem >>>> %s: %@ called (self=%p, option=%@, group=%@)
<<<< AVPlayerItem >>>> %s: Neither applied nor cached media option. Selection will be discarded.
<<<< AVPlayerItem >>>> %s: %@ <%p> with asset <%p> called for media selection option %@ in group %@
<<<< AVPlayerItem >>>> %s: %@ <%p> with asset <%p> called for media selection group %@
<<<< AVPlayerItem >>>> %s: Not calling FigPlayerAddToPlayQueue because item's status is the failure status (item = %@ %@, previous item = %@ %@, FigPlaybackItem = %p)
<<<< AVPlayerItem >>>> %s: Calling FigPlayerAddToPlayQueue (item = %@ %@, previous item = %@ %@, FigPlaybackItem = %p)
<<<< AVPlayerItem >>>> %s: Failed to set kFigPlaybackItemProperty_MetadataOutputsDictionary
<<<< AVPlayerItem >>>> %s: Video Enhancement mode is not valid
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemTimeJumpedNotification
<<<< AVPlayerItem >>>> %s: URL response required
<<<< AVPlayerItem >>>> %s: No payload or payload not a dictionary for kFigPlaybackItemNotification_URLResponseRequired
<<<< AVPlayerItem >>>> %s: %@ item <%p> ready for inspection of %@
<<<< AVPlayerItem >>>> %s: %@ item <%p> ready for playback
<<<< AVPlayerItem >>>> %s: %@ item <%p> status changing to AVPlayerItemStatusReadyToPlay
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemTimebaseChangedNotification
<<<< AVPlayerItem >>>> %s: %@ item <%p> failed to become ready for %@ (error: %@)
<<<< AVPlayerItem >>>> %s: %@ item <%p> failed to create fig sub item (error: %@)
<<<< AVPlayerItem >>>> %s: %@ stream likely to keep up: YES
<<<< AVPlayerItem >>>> %s: %@ stream likely to keep up: NO
<<<< AVPlayerItem >>>> %s: %@ stream buffer empty: YES
<<<< AVPlayerItem >>>> %s: %@ stream buffer full: YES
<<<< AVPlayerItem >>>> %s: %@ playback stalled
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemPlaybackStalledNotification
<<<< AVPlayerItem >>>> %s: %@ seekable ranges changed
<<<< AVPlayerItem >>>> %s: %@ playback buffer Full: NO
<<<< AVPlayerItem >>>> %s: %@ playback buffer empty: NO
<<<< AVPlayerItem >>>> %s: %@ loaded ranges changed
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemDidPlayToEndTimeNotification
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemFailedToPlayToEndTimeNotification with error %@
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemNewAccessLogEntryNotification
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemNewErrorLogEntryNotification
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> became the FigPlayer's current item
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> stopped being the FigPlayer's current item
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> was removed from the FigPlayer's item queue
<<<< AVPlayerItem >>>> %s: %@ alternate stream changed
<<<< AVPlayerItem >>>> %s: %@ Chosen tracks changed
<<<< AVPlayerItem >>>> %s: %@ Display non-forced subtitles changed
<<<< AVPlayerItem >>>> %s: %@ ExternalProtectionRequiredForPlayback changed
<<<< AVPlayerItem >>>> %s: %@ item <%p> hasEnabledAudio changed
<<<< AVPlayerItem >>>> %s: %@ item <%p> hasEnabledVideo changed
<<<< AVPlayerItem >>>> %s: %@ item <%p> hasVideo changed to YES
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemMediaSelectionDidChangeNotification
<<<< AVQueuePlayer >>>> %s: called (self = %@, item = %@, afterItem = %@
<<<< AVQueuePlayer >>>> %s: called (self = %@, item = %@)
<<<< AVQueuePlayer >>>> %s: called (self = %@)
<<<< AVLoggingIdentifier >>>> %s: nil specifiedName
<<<< AVLoggingIdentifier >>>> %s: Identifier string is %@
<<<< AVLoggingIdentifier >>>> %s: Failed to allocate char string of length %d
<<<< AVComposition >>>> %s: [%p] called
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p asset: %p timeRange.start: %.3f timeRange.duration: %.3f startTime: %.3f
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p timeRange.start: %.3f timeRange.duration: %.3f
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p timeRange.start: %.3f timeRange.duration: %.3f duration: %.3f
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p mediaType: %@ preferredTrackID: %d
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p track: %p trackID: %d
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p track: %p trackAssetURL: %@ trackID: %d
<<<< AVComposition >>>> %s: AVAsset with nil _absoluteURL and NULL _mutableComposition
<<<< AVCaptureCoreMotionMetadataInput >>>> %s: CMMetadataFormatDescriptionCreateWithMetadataSpecifications returned error %d
<<<< AVPlayerItemMetadataOutput >>>> %s: metadata output flushed
<<<< AVPlayerItemMetadataOutput >>>> %s: Notifying delegate of a flush
<<<< AVPlayerItemMetadataOutput >>>> %s: Invoking metadata delegate %p with %@ dictionary from %@ item track
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVCompositionTrack.m %s: [%p] called
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVCompositionTrack.m %s: [%p] called mutableComposition: %p destTrackID: %d track: %p timeRange.start: %.3f timeRange.duration: %.3f startTime: %.3f
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVCompositionTrack.m %s: [%p] called mutableComposition: %p destTrackID: %d timeRange.start: %.3f timeRange.duration: %.3f
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVCompositionTrack.m %s: [%p] called mutableComposition: %p destTrackID: %d timeRange.start: %.3f timeRange.duration: %.3f duration: %.3f
<<<< AVAuxiliaryMetadata >>>> %s: Unpacked metadata: %@ value: %@
<<<< AVAuxiliaryMetadata >>>> %s: Absent metadata: %@
<<<< AVAuxiliaryMetadata >>>> %s: Auxiliary metadata: '%@' : %@
<<<< AVAssetReaderOutput >>>> %s: FigAssetReaderExtractAndRetainNextSampleBuffer returned %d, extractionComplete=%d, sampleBuffer=%p, self=%p
<<<< AVAssetReaderOutput >>>> %s: %p received %@, extractionID=%d
<<<< AVAssetReaderOutput >>>> %s: %p received %@
<<<< AVAssetWriter >>>> %s: called (self=%p)
<<<< AVAssetWriter >>>> %s: invalid file extension in outputURL
<<<< AVAssetWriter >>>> %s: -[NSFileManager removeItemAtURL:] failed: %s
<<<< AVAssetWriter >>>> %s: Calling FigAssetWriterFinish
<<<< AVAssetWriter >>>> %s: FigAssetWriterFinish failed: %d
<<<< AVAssetWriter >>>> %s: calling completion handler
<<<< AVAssetWriter >>>> %s: Invalidating FigAssetWriter, to ensure that audio files are finalized properly
<<<< AVAssetWriter >>>> %s: "Transition to terminal status" operation invoked
<<<< AVAssetWriter >>>> %s: calling FigAssetWriterFinishAsync (self=%p)
<<<< AVAssetWriter >>>> %s: FigAssetWriterFinishAsync showed cancellation (self=%p)
<<<< AVAssetWriter >>>> %s: FigAssetWriterFinishAsync failed: %d
<<<< AVAssetWriter >>>> %s: called, self=%p
<<<< AVAssetWriter >>>> %s: Unexpected terminal status %d
<<<< AVAssetWriter >>>> %s: called, success=%d, error=%@ (self=%p)
<<<< AVAssetWriter >>>> %s: called with payload %@
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (self=%p)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (self=%p, delegate=%@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (self=%p, request=%@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (self=%p, request=%@, reason=%@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: self=%p, impl=%@, replacementImpl=%@
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (self=%p, authorizationToken=%@)
<<<< AVAssetWriterInput >>>> %s: called, old=%@ new=%@
<<<< AVAssetWriterInput >>>> %s: called, self=%p
<<<< AVAssetWriterInput >>>> %s: called (self=%p, queue=%p, block=%p)
<<<< AVAssetWriterInput >>>> %s: Informing pass description responder to respond to initial pass description
<<<< AVAssetWriterInput >>>> %s: Not responding to initial pass description, per helper %@
<<<< AVAssetWriterInput >>>> %s: called (self=%p)
<<<< AVAssetWriterInput >>>> %s: Client will see -appendSampleBuffer: fail with error %@
<<<< AVAssetWriterInput >>>> %s: called (keyPath=%@, object=%@, change=%@, contect=%p)
<<<< AVAssetWriterInput >>>> %s: called (self = %p)
<<<< AVAssetWriterInput >>>> %s: Client will see -appendPixelBuffer: fail with error %@
<<<< AVAssetWriterInput >>>> %s: Transitioning to terminal status %d (self = %p)
<<<< AVAssetWriterInput >>>> %s: Dispatching request block one extra time, to make sure client sees the failure
<<<< AVAssetWriterInput >>>> %s: end pass operation succeeded, nextPassDescription=%@
<<<< AVAssetWriterInput >>>> %s: Client will see -appendSampleBuffer: return NO due to input already having transitioned to terminal status
<<<< AVAssetWriterInput >>>> %s: Client will see -appendPixelBuffer: return NO due to input already having transitioned to terminal status
<<<< AVAssetWriterInput >>>> %s: FigAssetWriterIsTrackQueueAboveHighWaterLevel returned %d (self=%p)
<<<< AVAssetWriterInput >>>> %s: setting kFigFormatWriterTrackProperty_FormatDescriptionArray to %@
<<<< AVAssetWriterInput >>>> %s: Invoking request block normally
<<<< AVAssetWriterInput >>>> %s: Client exited request block
<<<< AVAssetWriterInput >>>> %s: Dispatching request block because previous request block invocation returned before filling the buffer queue or marking input finished (delegate = %@)
<<<< AVAssetWriterInput >>>> %s: We thought we might want to invoke the request block, but we are not actually going to
<<<< AVAssetWriterInput >>>> %s: will invoke per-pass block (self=%p)
<<<< AVAssetWriterInput >>>> %s: did invoke per-pass block (self=%p)
<<<< AVAssetWriterInput >>>> %s: registering for kFigAssetWriterNotification_PassFinished on FigAssetWriter %p
<<<< AVAssetWriterInput >>>> %s: Calling FigAssetWriterEndPass
<<<< AVAssetWriterInput >>>> %s: called (self=%p, trackID=%d)
<<<< AVAssetWriterInput >>>> %s: unregistering from kFigAssetWriterNotification_PassFinished
<<<< AVAssetWriterInput >>>> %s: Received kFigAssetWriterNotification_PassFinished
<<<< AVVideoComposition >>>> %s: dictionaryRepresentation only accepts RGB color space for backgroundColor
<<<< AVVideoComposition >>>> %s: Using video compositor: %@
<<<< AVVideoComposition >>>> %s: Unknown video compositor name for FigRemaker: %@
<<<< AVAssetExportSession >>>> %s: ignoring exception thrown by exportAsynchronouslyWithCompletion Handler
<<<< AVAssetExportSession >>>> %s: fileLengthLimit: %lld
<<<< AVAssetExportSession >>>> %s: maximize power efficiency %s
<<<< AVOutputDevice >>>> %s: called (self=%p, impl=%@)
<<<< AVOutputDevice >>>> %s: called (self=%p, enabled=%d)
<<<< AVOutputDevice >>>> %s: called (self=%p, configuratorBlock=%@, options=%@, completionHandler=%@)
<<<< AVOutputDevice >>>> %s: called (self=%p, configuratorBlock=%@, completionHandler=%@)
<<<< AVCaptureDepthDataOutput >>>> %s: (%p) setting delegate to %@ (%p)
<<<< AVCaptureDepthDataOutput >>>> %s: (%p) setting delegateOverride to %@ (%p)
<<<< AVUtilities >>>> %s: called (queue=%p, currentQueue=%p, dispatch_get_main_queue()=%p, NSThread isMainThread=%d)
<<<< AVUtilities >>>> %s: running block synchronously
<<<< AVUtilities >>>> %s: dispatching block to queue
<<<< AVUtilities >>>> %s: dispatching to background queue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVError.m %s: Could not load localized description for %@ %ld (%@)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVError.m %s: Could not load localized recovery suggestion or failure reason for %@ %ld (%@)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVError.m %s: Could not load localized recovery suggestion for %@ %ld (%@)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVError.m %s: Could not load localized failure reason for %@ %ld (%@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (self=%p, figEndpoint=%@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Endpoint property '%@' not supported
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Endpoint property '%@' has value: %@
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  Only a subset of possible device types can be communicated by FigEndpoint
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  There is no way to discover detailed device subtype for most devices from FigEndpoint
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  There is no way to discover connected paired devices from FigEndpoint
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (self=%p, ID=%@, endpointID=%@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (self=%p, configuratorBlock=%@, options=%@, completionHandler=%@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (endpoint=%@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: AVOutputDevice %@ already bound to incompatible impl %@
<<<< AVOutputContext >>>> %s: Defaulting to AVOutputContext impl %@
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@)
<<<< AVOutputContext >>>> %s: called (self=%p, pid=%d)
<<<< AVOutputContext >>>> %s: returning device %@ (self=%p)
<<<< AVOutputContext >>>> %s: *** Fetching single output device from multi-select output context! ***
<<<< AVOutputContext >>>> %s: called (self=%p, outputDevice=%@, options=%@, completionHandler=%@)
<<<< AVOutputContext >>>> %s: Result: %@
<<<< AVOutputContext >>>> %s: called (self=%p, outputDevice=%@, features=%d)
<<<< AVOutputContext >>>> %s: called (self=%p, outputDevice=%@, options=%@)
<<<< AVOutputContext >>>> %s: called
<<<< AVOutputContext >>>> %s: Posting %@ (self=%p, impl=%@) with payload %@
<<<< AVOutputContext >>>> %s: Posting %@ (self=%p, impl=%@)
<<<< AVOutputContext >>>> %s: called (self=%p, devices=%@)
<<<< AVOutputContext >>>> %s: called (self=%p, device=%@, completionHandler=%@)
<<<< AVOutputContext >>>> %s: called (self=%p, device=%@)
<<<< AVOutputContext >>>> %s: called (self=%p, completionHandler=%@
<<<< AVOutputContext >>>> %s: pause finished (error=%@)
<<<< AVOutputContext >>>> %s: called (self=%p, delegate=%@)
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@, data=%@, channel=%@)
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@, channel=%@)
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@, replacementImpl=%@)
<<<< AVOutputContext >>>> %s: called (self=%p, data=%@, completionHandler=%@)
<<<< AVOutputContext >>>> %s: called (self=%p, status=%d)
<<<< AVOperation >>>> %s: already cancelled (self=%p)
<<<< AVOperation >>>> %s: marking as failed due to previous failure in dependency (self=%@)
<<<< AVOperation >>>> %s: marking as cancelled due to cancellation of dependency (self=%@)
<<<< AVOperation >>>> %s: advancing status from %d to %d (self=%p)
<<<< AVOperation >>>> %s: called (self=%@)
<<<< AVOperation >>>> %s: called (self=%@, error=%@)
<<<< AVOperation >>>> %s: Got unrecognized status %d
<<<< AVOperation >>>> %s: called (self=%p)
<<<< AVOperation >>>> %s: Client block cancelled with status %d (self=%p)
<<<< AVOperation >>>> %s: called (self=%p, name=%@)
<<<< AVOperation >>>> %s: Ignoring attempt to cancel before execution has begun.  The expectation is that the implementation will notice the cancelled state as part of normal execution
<<<< AVOperation >>>> %s: ignoring attempt to move from terminal status %d to status %d
<<<< AVDelegateUtilities >>>> %s: called (newDelegate=%@, newDelegateQueue=%p
<<<< AVDelegateUtilities >>>> %s: called (delegateStorage = %@, expectedDelegateQueue = %p, delegateCallbackBlock = %p)
<<<< AVDelegateUtilities >>>> %s: current delegate: %@, current delegate queue: %p
<<<< AVDelegateUtilities >>>> %s: Invoking delegate callback synchronously
<<<< AVDelegateUtilities >>>> %s: Dispatching to queue %p
<<<< AVAssetInspectorLoader >>>> %s: <%p> FigAssetGetStatusOfValueForProperty for property <%@> returned %d and load error %d - %@
<<<< AVAssetInspectorLoader >>>> %s: <%p> status requested for key %@ after loading was canceled
<<<< AVAssetInspectorLoader >>>> %s: <%p> loadValuesAsynchronouslyForKeys:%@ keysForCollectionKeys:%@ completionHandler:<%p>
<<<< AVAssetInspectorLoader >>>> %s: <%p> FigAssetLoadValuesAsyncForProperties for properties %@ returned %d with loaded == %@ and batchID == %ld
<<<< AVAssetInspectorLoader >>>> %s: <%p> FigAssetLoadValuesAsyncForTrackProperties for properties %@ returned %d with loaded == %@ and batchID == %ld
<<<< AVAssetInspectorLoader >>>> %s: <%p> storing completion handler [%p] for later invocation
<<<< AVAssetInspectorLoader >>>> %s: <%p> storing loading batch [%p] with %@
<<<< AVAssetInspectorLoader >>>> %s: <%p> invoking completion handler [%p] immediately
<<<< AVAssetInspectorLoader >>>> %s: <%p> dispatching completion handler [%p]
<<<< AVAssetInspectorLoader >>>> %s: FigAssetCreateWithURL for URL <%@> returned %d
<<<< AVAssetInspectorLoader >>>> %s: <%p> got notification <%@>
<<<< AVAssetInspectorLoader >>>> %s: <%p> got notification <%@> for batchID %@
<<<< AVAssetInspectorLoader >>>> %s: <%p> loading batch [%p] has count of %d on entry
<<<< AVAssetInspectorLoader >>>> %s: <%p> loading batch [%p] has count of %d on exit with %@
<<<< AVAssetTrackInspector >>>> %s: Created track inspector of class %@ 
<<<< AVAssetTrackInspector >>>> %s: can't get FigTrackReader; invalid trackID and negative trackIndex
<<<< AVAssetTrackInspector >>>> %s: can't get FigAssetTrack; invalid trackID and negative trackIndex
<<<< AVAssetTrackInspector >>>> %s: FigAssetTrackGetStatusOfValueForProperty for property <%@> returned %d and load error %d - %@
<<<< AVAssetTrackInspector >>>> %s: FigAssetTrackLoadValuesAsyncForProperties for properties %@ returned %d with loaded == %@ and batchID == %d
<<<< AVAssetTrackInspector >>>> %s: storing completion handler [%p] for later invocation
<<<< AVAssetTrackInspector >>>> %s: storing loading batch [%p] with %@
<<<< AVAssetTrackInspector >>>> %s: dispatching completion handler [%p]
<<<< AVAssetTrackInspector >>>> %s: [%p] called
<<<< AVAssetTrackInspector >>>> %s: got notification <%@> for batchID %@
<<<< AVAssetTrackInspector >>>> %s: loading batch [%p] has count of %d on entry
<<<< AVAssetTrackInspector >>>> %s: loading batch [%p] has count of %d on exit with %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/Utilities/AVBundleResources.m %s: AVLocalizedStringFromTableWithLocale unable to find a localized string; returning an empty string
<<<< AVGestalt >>>> %s: *** No such key: %@, returning NO
<<<< AVCallbackContextRegistry >>>> %s: registering observer %p (token %p), new observer count %d (self=%p)
<<<< AVCallbackContextRegistry >>>> %s: unregistering callback context token %p, new observer count %d (self=%p)
<<<< AVCapturePhoto >>>> %s: focal length didn't match the lens aperture of either wide or tele! (%f)
<<<< AVCapturePhoto >>>> %s: avcp_copyCGImageForCompressedData failed
<<<< AVCapturePhoto >>>> %s: Can't make a preview CGImage because no preview photo was requested
<<<< AVCapturePhoto >>>> %s: Nil pixelBuffer
<<<< AVCapturePhoto >>>> %s: VTCreateCGImageFromCVPixelBuffer failed (%d)
<<<< AVCapturePhoto >>>> %s: nil data passed
<<<< AVCapturePhoto >>>> %s: CGImageSourceCreateWithData failed
<<<< AVCapturePhoto >>>> %s: CGImageSourceCreateImageAtIndex failed
<<<< AVCapturePhoto >>>> %s: FigPhotoDecompressionSessionCreate failed (%d)
<<<< AVCapturePhoto >>>> %s: FigPhotoDecompressionSessionCreateContainer failed (%d)
<<<< AVCapturePhoto >>>> %s: FigPhotoDecompressionContainerGetImageCount failed (%d) or has no images
<<<< AVCapturePhoto >>>> %s: FigPhotoDecompressionContainerGetAuxiliaryImageCountForIndex failed (%d) or has no aux images
<<<< AVCapturePhoto >>>> %s: Found auxiliary image of type %d at index 0/%d
<<<< AVCapturePhoto >>>> %s: FigPhotoDecompressionContainerCreateAuxiliaryImageForIndex failed (%d)
<<<< AVCapturePhoto >>>> %s: FigPhotoDecompressionContainerCopyAuxiliaryImageMetadataForIndex failed (%d) - carrying on anyway
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_StartDate must be an instance of NSDate
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_Duration must be an instance of NSDate
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_MetadataArray must be an instance of NSDate
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_Class must be an instance of NSDate
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_ID must be an instance of NSDate
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_DiscoveryTimestamp must be an instance of NSDate
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_ModificationTimestamp must be an instance of NSDate
<<<< AVAssetCache >>>> %s: Initialized with URL %@
<<<< AVAssetCache >>>> %s: Set maxSize = %lld
<<<< AVAssetCache >>>> %s: Set maxEntrySize = %lld
<<<< AVAssetCache >>>> %s: Remove entry with key = %@
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: <%p> setActive figPlayer <%p>
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: <%p> called with category = %@%@
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: audio category set %@
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: <%p> called with mode = %@%@
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: mode set %@
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: Attempt to attach AVAudioSessionMediaPlayerOnly to AVPlayer <%p> with no FigPlayer
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: set category failed
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: set mode failed
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: Attempt to attach AVAudioSessionMediaPlayerOnly to AVPlayer <%p> when already attached
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: called (self = %@, inNotificationName = %@)
<<<< AVMediaSelectionGroup >>>> %s: *** Could not canonicalize language: %@. ***
<<<< AVMediaSelectionGroup >>>> %s: <%p> called with property list %@
<<<< AVMediaSelectionGroup >>>> %s: <%p> resolved to option %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/Utilities/AVAudioOutputSettings.m %s: Need to either provide fully-formed dictionary or source format description
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/Utilities/AVAudioOutputSettings.m %s: Invalid source format flags - not one of the supported lossless bit depths
<<<< AVAssetDownloadSession >>>> %s: [%p] Download from %@ to %@
<<<< AVAssetDownloadSession >>>> %s: [%p] FigAssetCreateWithURL for URL <%@> returned %d
<<<< AVAssetDownloadSession >>>> %s: [%p] Called with %lld
<<<< AVAssetDownloadSession >>>> %s: [%p] Called with asset:%@ destinationURL:%@
<<<< AVAssetDownloadSession >>>> %s: [%p] Start download
<<<< AVAssetDownloadSession >>>> %s: [%p] Going from paused to start download
<<<< AVAssetDownloadSession >>>> %s: Failed to start - %@
<<<< AVAssetDownloadSession >>>> %s: [%p] Pause download
<<<< AVAssetDownloadSession >>>> %s: [%p] Stop download
<<<< AVAssetDownloadSession >>>> %s: [%p] Download %s
<<<< AVAssetDownloadSession >>>> %s: [%p] Called
<<<< AVAssetDownloadSession >>>> %s: Failed to prime cache - %@
<<<< AVAssetDownloadSession >>>> %s: [%p] Priming cache with download token %@
<<<< AVAssetDownloadSession >>>> %s: Must initialize AVAssetDownloadSession with initWithAsset:destinationURL:options: for streaming assets.
<<<< AVAssetDownloadSession >>>> %s: [%p] called with notification name %@
<<<< AVAssetDownloadSession >>>> %s: Failed to load property %@ - %@
<<<< AVAssetDownloadSession >>>> %s: Failed to download to destination - %@
<<<< AVAssetDownloadSession >>>> %s: [%p] called with notification name %@ payload %@
<<<< AVAssetDownloadSession >>>> %s: Failed to make ready for inspection - %@
<<<< AVPlayerItemOutput >>>> %s: Unable to convert host time stamp to item time. Client sees kCMTimeInvalid.
<<<< AVPlayerItemOutput >>>> %s: FigVisualContextCreateBasic failed: %d
<<<< AVPlayerItemOutput >>>> %s: FigVisualContextSetImageAvailableSequentialCallback failed: %d
<<<< AVPlayerItemOutput >>>> %s:  Error: requestNotificationOfMediaDataChangeAsSoonAsPossible was valid when requesting requestNotificationOfMediaDataChangeWithAdvanceInterval. requestNotificationOfMediaDataChangeAsSoonAsPossible has been deactivated
<<<< AVPlayerItemOutput >>>> %s: scheduled wakeup for now
<<<< AVPlayerItemOutput >>>> %s: scheduled wakeup in %.3f s
<<<< AVPlayerItemOutput >>>> %s:  Error: requestNotificationOfMediaDataChangeWithAdvanceInterval was valid when requesting requestNotificationOfMediaDataChangeAsSoonAsPossible. requestNotificationOfMediaDataChangeWithAdvanceInterval is deactivated
<<<< AVPlayerItemOutput >>>> %s: Unable to copy next image from visual context. Bailing.
<<<< AVPlayerItemOutput >>>> %s: FigVisualContextCopyImageForTime2 did not provide a imageOriginalTimeOut value. Bailing.
<<<< AVPlayerItemOutput >>>> %s: Dispatching -outputSequenceWasFlushed:
<<<< AVPlayerItemOutput >>>> %s: Sending -outputSequenceWasFlushed: to delegate
<<<< AVCaptureMetadataOutput >>>> %s: (%p) setting metadataObjectsDelegate to %@ (%p)
<<<< AVCaptureMetadataOutput >>>> %s: metadata object types: %@
<<<< AVCaptureMetadataOutput >>>> %s: (%p) setting delegateOverride to %@ (%p)
<<<< AVSampleBufferDisplayLayer >>>> %s: failed to create video queue: %d
<<<< AVSampleBufferDisplayLayer >>>> %s: FigVideoQueueSetProperty returned %d
<<<< AVSampleBufferDisplayLayer >>>> %s: [%p] created
<<<< AVSampleBufferDisplayLayer >>>> %s: [%p]
<<<< AVSampleBufferDisplayLayer >>>> %s: boundsAnimation: currentPresentationSize(w=%g, h=%g), deltaSize(w=%g, h=%g) ---> targetSize(w=%g, h=%g)
<<<< AVSampleBufferDisplayLayer >>>> %s: [%p] trying to add to a synchronizer (%p) when we already are added to a synchronizer (%p).
<<<< AVSampleBufferDisplayLayer >>>> %s: FigVideoQueueFlush returned %d
<<<< AVSampleBufferDisplayLayer >>>> %s: flush completed but no pending callback block found
<<<< AVSampleBufferDisplayLayer >>>> %s: droppedVideoFrames %lu = %lu droppedFromImageQueue + %lu rejectedByImageQueue + %lu droppedByVideoDecoder
<<<< AVSampleBufferDisplayLayer >>>> %s: Return CATransform3DIdentity because presentationSize or container.size is CGSizeZero
<<<< AVSampleBufferDisplayLayer >>>> %s: Received decode error from video queue, %@
<<<< AVSampleBufferDisplayLayer >>>> %s: [%p] handling VideoQueueFailed with error (%d).
<<<< AVSampleBufferDisplayLayer >>>> %s: enqueueFrame failed returned %d
<<<< AVAssetResourceLoader >>>> %s: AVAssetResourceLoader delegate does not respond to selector %@
<<<< AVAssetResourceLoader >>>> %s: data for current offset %lld of length %lld provided to %@
<<<< AVAssetResourceLoader >>>> %s: caching data for current offset %lld of length %lld that was provided to %@
<<<< AVAssetResourceLoader >>>> %s: cached data has grown to length %lld for %@
<<<< AVAssetResourceLoader >>>> %s: swallowing sendResponseInfo for cancelled request %@
<<<< AVAssetResourceLoader >>>> %s: swallowing sendData with data of len %lu for cancelled request %@
<<<< AVAssetResourceLoader >>>> %s: swallowing finishLoading for cancelled request %@
<<<< AVAssetResourceLoader >>>> %s: swallowing dictionary response %@ for cancelled request %@
<<<< AVAssetResourceLoader >>>> %s: called on %@
<<<< AVAssetResourceLoader >>>> %s: [AVAssetResourceLoadingRequest finishLoading] is called for a content key request while an AVContentKeySession instance is attached to AVURLAsset. Generating event
<<<< AVAssetResourceLoader >>>> %s: called with error %@ on %@
<<<< AVAssetResourceLoader >>>> %s: called with handlingClient: %@, handler: %@, requestInfo: <%p>, requestID %llu
<<<< AVSampleBufferRenderSynchronizer >>>> %s: called
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Failed to create FigSampleBufferRenderSynchronizer: %@
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] created (internal: %p)
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] dealloc
<<<< AVSampleBufferRenderSynchronizer >>>> %s: error: %@
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] rate: %1.3f; time: %1.3f; fig error: %d
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Setting self as render synchronizer on renderer (%p) failed
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Error adding an AudioRenderer to the FigSynchronizer: %d
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Failed to add Renderer %@; error returned from _addRenderer: %@
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] removalBlock called; weakToSelf: %p; weakToRenderer: %p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] called for renderer %p; time: %1.3f
<<<< AVSampleBufferRenderSynchronizer >>>> %s: unknown renderer: %p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] old once observer already fired before we could invalidate it (renderer: %p)
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] invalidated old scheduled removal of renderer %p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] successfully scheduled removal of renderer %p at time %1.3f
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Trying to add a renderer (%p) to same synchronizer
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Trying to add multiple audio renderers when disallowed
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Too many audio renderers
<<<< AVSampleBufferRenderSynchronizer >>>> %s: called (self = <%p>, time observer = <%p>)
<<<< AVSampleBufferRenderSynchronizer >>>> %s: called (center=%@, listener=%p, name=%@, object=%p, payload=%@)
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Cleaning-up renderer %p for synchronizerInternal %p
<<<< AVFileSystemUtilities >>>> %s: Failed to remove temporary file at %@: %@
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: source CIImage %@ (colorSpace %@) from CVPixelBuffer %@ (attachments %@)
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called with CIImage %@
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: CIImage %@ (colorSpace %@) already has a CVPixelBuffer %@ (attachments %@)
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: rendered CIImage %@ (colorSpace %@) to CVPixelBuffer %@ (attachments %@)
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called with error %@
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called with request %@
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: cancelling begin
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: cancelling done
<<<< AVPlayerItemLegibleOutput >>>> %s: Invoking legible delegate %p with %d attributed string(s) and %d native sample(s) at time %f:%@
<<<< AVPlayerItemLegibleOutput >>>> %s: called
<<<< AVPlayerItemLegibleOutput >>>> %s: Notifying delegate of a flush
<<<< AVExternalDevice >>>> %s: Endpoint HID input mode: %@
<<<< AVExternalDevice >>>> %s: called with externalDevice %p hidDictionary %@
<<<< AVExternalDevice >>>> %s: Endpoint HID Setting inputMode to %@
<<<< AVExternalDevice >>>> %s: called with dictionary %@
<<<< AVExternalDevice >>>> %s: called with externalDevice %p client %@ reason %@
<<<< AVExternalDevice >>>> %s: called with externalDevice %p
<<<< AVExternalDevice >>>> %s: Endpoint property '%@' not supported
<<<< AVExternalDevice >>>> %s: Endpoint property '%@' has value: %@
<<<< AVExternalDevice >>>> %s: Endpoint screen IDs: %@
<<<< AVExternalDevice >>>> %s: Endpoint capabilities: %@
<<<< AVExternalDevice >>>> %s: adding endpointDeviceHID: %@
<<<< AVExternalDevice >>>> %s: Invalid Siri Requested Action: %@
<<<< AVOutputDeviceDiscoverySession (FigEndpointPicker) >>>> %s: called (self=%p, features=%d)
<<<< AVOutputDeviceDiscoverySession (FigEndpointPicker) >>>> %s: Target audio session not supported by FigEndpointPicker
<<<< AVOutputDeviceDiscoverySession (FigEndpointPicker) >>>> %s: Setting device discovery mode to %@ (client: %@)
<<<< AVOutputDeviceDiscoverySession (FigEndpointPicker) >>>> %s: called (self=%@, class=%@, deviceFeatures=%u)
<<<< AVOutputDeviceDiscoverySession (FigEndpointPicker) >>>> %s: Received %@ notification
<<<< AVCustomCompositor >>>> %s: videoComposition %p
<<<< AVCustomCompositor >>>> %s: creating instance of "%@"
<<<< AVCustomCompositor >>>> %s: src pixel buffer attributes %@
<<<< AVCustomCompositor >>>> %s: intializing new render context (videoCompositionDidChange %d
<<<< AVCustomCompositor >>>> %s: render context no longer suitable, need to create a new one
<<<< AVKVODispatcher >>>> %s: called (self=%p, keyPath=%@, object=%@, change=%@, context=%p)
<<<< AVKVODispatcher >>>> %s: %p no longer observing %@ with observer %@, for key path %@, and context %p
<<<< AVKVODispatcher >>>> %s: %p observing %@ with observer %@, for key path %@, options %d, and context %p
<<<< AVKVODispatcher >>>> %s: Registering for %@ (self = %@)
<<<< AVKVODispatcher >>>> %s: Calling -willChange for %@.%@, in response to top-level property change (self=%p)
<<<< AVKVODispatcher >>>> %s: cancelling second-level observation
<<<< AVKVODispatcher >>>> %s: Calling -willChange for %@.%@, in response to second-level property change (self=%p)
<<<< AVKVODispatcher >>>> %s: Calling -didChange for %@.%@, in response to second-level property change (self=%p)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: CVPixelBufferPoolCreatePixelBufferWithAuxAttributes failed (error %d)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: initializing
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderDimensions = %d %d
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderScale = %f
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderPixelAspectRatio = %d %d
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderEdgeProcessingPixels = %f %f %f %f
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_HighQualityRendering = %d
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredAttributes = %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredYCbCrMatrix = %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredColorPrimaries = %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredTransferFunction = %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedAVFoundation_Sim/EmbeddedAVFoundation-1542.8/Fig/AVVideoCompositionRenderContext.m %s: Failed to resolve pixel buffer attributes (error %d), required client attributes %@, desired destination attributes %@
<<<< AVCapturePhotoOutput >>>> %s: timed out waiting for Live Photos begin/end movie capture hosttime group to empty
<<<< AVCapturePhotoOutput >>>> %s: called with %@
<<<< AVCapturePhotoOutput >>>> %s: Calling StillImageSinkCaptureImage with %@
<<<< AVCapturePhotoOutput >>>> %s: called with preparedPhotoSettingsArray:%@ completionHandler:%p
<<<< AVCapturePhotoOutput >>>> %s: New IrisPreparedSettings is equal to old. Overriding request ID from %lld -> %lld to match old settings.
<<<< AVCapturePhotoOutput >>>> %s: Calling FigCaptureSessionIrisStillImageSinkPrepareToCapture with %@
<<<< AVCapturePhotoOutput >>>> %s: called with %d
<<<< AVCapturePhotoOutput >>>> %s: called with %d at %fs
<<<< AVCapturePhotoOutput >>>> %s: Set livePhotoMovieProcessingSuspended failed %d
<<<< AVCapturePhotoOutput >>>> %s: Not setting livePhotoMovieProcessingSuspended since there is no FigCaptureSession instance
<<<< AVCapturePhotoOutput >>>> %s: CMBlockBufferCreateContiguous failed (%d)
<<<< AVCapturePhotoOutput >>>> %s: CMBlockBufferGetDataPointer failed (%d)
<<<< AVCapturePhotoOutput >>>> %s: Aspect ratio mismatch between Original and Optimized Image output dimensions
<<<< AVCapturePhotoOutput >>>> %s: Set %@ failed %d
<<<< AVCapturePhotoOutput >>>> %s: Cannot set %@ since there is no FigCaptureSession instance
<<<< AVCapturePhotoOutput >>>> %s: called
<<<< AVCapturePhotoOutput >>>> %s: Overscan percentage for offline vis: %f (Front: %@)
<<<< AVCapturePhotoOutput >>>> %s: Optimized dimensions: %d x %d
<<<< AVCapturePhotoOutput >>>> %s: called with flags:%x request:%@, error: %@
<<<< AVCapturePhotoOutput >>>> %s: calling %@ willBeginCaptureForResolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: Not calling, delegate %@ doesn't respond to willBeginCaptureForResolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: calling %@ willCapturePhotoForResolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: Not calling, delegate %@ doesn't respond to willCapturePhotoForResolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: calling %@ didCapturePhotoForResolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: Not calling, delegate %@ doesn't respond to didCapturePhotoForResolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: calling %@%@ didFinishProcessingPhoto:%@error:%@ for photo with processing flags "%@"
<<<< AVCapturePhotoOutput >>>> %s: [%d]calling %@ didFinishProcessingRawPhotoSampleBuffer:(null) previewPhotoSampleBuffer:(null) resolvedSettings:%@ bracketSettings:%@ error:%@
<<<< AVCapturePhotoOutput >>>> %s: [%d]calling %@ didFinishProcessingPhotoSampleBuffer:(null) previewPhotoSampleBuffer:(null) resolvedSettings:%@ bracketSettings:%@ error:%@
<<<< AVCapturePhotoOutput >>>> %s: [***For Original ***] calling %@ didFinishRecordingLivePhotoMovieForEventualFileAtURL:%@ resolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: [***For Original ***] Not calling, delegate %@ doesn't respond to didFinishRecordingLivePhotoMovieForEventualFileAtURL:%@ resolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: calling %@ didFinishRecordingLivePhotoMovieForEventualFileAtURL:%@ resolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: Not calling, delegate %@ doesn't respond to didFinishRecordingLivePhotoMovieForEventualFileAtURL:%@ resolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: [***For Original ***] calling %@ didFinishProcessingLivePhotoToMovieFileAtURL:%@ duration:nans photoDisplayTime:nans resolvedSettings:%@ error:%@
<<<< AVCapturePhotoOutput >>>> %s: calling %@ didFinishProcessingLivePhotoToMovieFileAtURL:%@ duration:nans photoDisplayTime:nans resolvedSettings:%@ error:%@
<<<< AVCapturePhotoOutput >>>> %s: calling %@ didFinishCaptureForResolvedSettings:%@ error:%@
<<<< AVCapturePhotoOutput >>>> %s: Not calling, delegate %@ doesn't respond to didFinishCaptureForSettings:%@ error:%@
<<<< AVCapturePhotoOutput >>>> %s: %@:%@
<<<< AVCapturePhotoOutput >>>> %s: Disregarding notification %@ since sinkIDs don't match
<<<< AVCapturePhotoOutput >>>> %s: ***%@: Couldn't find a paired request for uniqueID %lld
<<<< AVCapturePhotoOutput >>>> %s: Received PreparationComplete notification for settingsID %lld
<<<< AVCapturePhotoOutput >>>> %s: PreparationComplete error: (%d, %d)
<<<< AVCapturePhotoOutput >>>> %s: Received a PreparationCompleteNotification from the past (mine=%lld, theirs=%lld)!!!
<<<< AVCapturePhotoOutput >>>> %s: Handling cancelled request: %@
<<<< AVCapturePhotoOutput >>>> %s: Handling matchingRequest request: %@
<<<< AVCapturePhotoOutput >>>> %s: Discarding old requests: %@
<<<< AVCapturePhotoOutput >>>> %s: ***StillImageComplete error: (%d, %d)
<<<< AVCapturePhotoOutput >>>> %s: Already received %d notifications for still image capture with settings ID %lld; ignoring.
<<<< AVCapturePhotoOutput >>>> %s: *** no photo surface returned, must have run out of memory! ***
<<<< AVCapturePhotoOutput >>>> %s: calling %@ didFinishProcessingPhoto:%@ bracketSettings:%@ error:%@ for photo with processing flags "%@"
<<<< AVCapturePhotoOutput >>>> %s: *** no photo sample buffer returned, errorStatus = %d ***
<<<< AVCapturePhotoOutput >>>> %s: calling %@ didFinishProcessingRawPhotoSampleBuffer:%p previewPhotoSampleBuffer:%p resolvedSettings:%@ bracketSettings:%@ error:%@
<<<< AVCapturePhotoOutput >>>> %s: calling %@ didFinishProcessingPhotoSampleBuffer:%p previewPhotoSampleBuffer:%p resolvedSettings:%@ bracketSettings:%@ error:%@
<<<< AVCapturePhotoOutput >>>> %s: [***For EV0***] calling %@ didFinishRecordingLivePhotoMovieForEventualFileAtURL:%@ resolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: [***For EV0***] Not calling, delegate %@ doesn't respond to didFinishRecordingLivePhotoMovieForEventualFileAtURL:%@ resolvedSettings:%@
<<<< AVCapturePhotoOutput >>>> %s: ***DidFinishRecordingIrisMovie error: (%@, %d)
<<<< AVCapturePhotoOutput >>>> %s: %scalling %@ didFinishProcessingLivePhotoToMovieFileAtURL:%@ debugMetadataSidecarFileURL:%@ duration:%fs photoDisplayTime:%fs resolvedSettings:%@ error:%@
<<<< AVCapturePhotoOutput >>>> %s: %scalling %@ didFinishProcessingLivePhotoToMovieFileAtURL:%@ duration:%fs photoDisplayTime:%fs resolvedSettings:%@ error:%@
<<<< AVCapturePhotoOutput >>>> %s: Set(%@) failed %d
<<<< AVCapturePhotoOutput >>>> %s: Not setting(%@) since there is no FigCaptureSession instance
<<<< AVCapturePhotoOutput >>>> %s: ***DidFinishCapture error: (%d, %d)
<<<< AVContentKeySession >>>> %s: %p retrying content key request because %@
<<<< AVContentKeySession >>>> %s: %p content key request failed since the client did not retry
<<<< AVContentKeySession >>>> %s: content key request %@ did succeed
<<<< AVContentKeySession >>>> %s: cryptor is NULL
<<<< AVContentKeySession >>>> %s: %p creating key request for appid %@, contentID %@, options %@
<<<< AVContentKeySession >>>> %s: set AppIdentifier
<<<< AVContentKeySession >>>> %s: %p setting content key response %@
<<<< AVContentKeySession >>>> %s: %p getting persistable key response from %@
<<<< AVContentKeySession >>>> %s: failed to copy default secure stop manager due to error: %d
<<<< AVContentKeySession >>>> %s: called
<<<< AVContentKeySession >>>> %s: init with %@
<<<< AVContentKeySession >>>> %s: dealloc
<<<< AVContentKeySession >>>> %s: added content key recipient %@, now have: %@
<<<< AVContentKeySession >>>> %s: Failed to add object as a AVContentKeyRecipient [error: %@]
<<<< AVContentKeySession >>>> %s: removed content key recipient %@, now have %@
<<<< AVContentKeySession >>>> %s: expiring recipient %@
<<<< AVContentKeySession >>>> %s: %p failed to issue content key request because delegate's already gone
<<<< AVContentKeySession >>>> %s: %p renewing key request %@
<<<< AVContentKeySession >>>> %s: %p errored out trying to renew key request %@
<<<< AVContentKeySession >>>> %s: appIdentifier %@ = %@
<<<< AVContentKeySession >>>> %s: appIdentifier %@, removing %@
<<<< AVContentKeySession >>>> %s: setting appIdentifier failed due to err=%d
<<<< AVContentKeySession >>>> %s: %p failed to issue content key request due to an internal error
<<<< AVContentKeySession >>>> %s: %p initializing content key request with identifier %@ and initialization data %@
<<<< AVContentKeySession >>>> %s: %p initializing content key request with identifier %@
<<<< AVContentKeySession >>>> %s: creating cryptor using sinfs
<<<< AVContentKeySession >>>> %s: creating cryptor using format description
<<<< AVContentKeySession >>>> %s: Invalid key system used in AVContentKeySystem
<<<< AVContentKeySession >>>> %s: badly formatted key request init data (encoded sinf not UTF8)
<<<< AVContentKeySession >>>> %s: badly formatted key request init data (encoded sinf not base64)
<<<< AVContentKeySession >>>> %s: called with handlingClient: %@, handler: %@, requestInfo: %@, requestID %llu
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@, cryptorUUID: %@, cryptorRequestID: %llu, keyResponseError: %@
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@, cryptorUUID: %@, cryptorRequestID: %llu
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@, cryptKeyIdentifier: %@, updatedPersistentKey: %@
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@
<<<< AVFlashlight >>>> %s: Called (%p), returning %d
<<<< AVFlashlight >>>> %s: Called (%p)
<<<< AVFlashlight >>>> %s: called (%p), returning %d
<<<< AVFlashlight >>>> %s: called (%p)
<<<< AVFlashlight >>>> %s: failed to turn power on (%d)
<<<< AVFlashlight >>>> %s: failed to turn power off (%d)
<<<< AVFlashlight >>>> %s: called (%p) level %g
<<<< AVFlashlight >>>> %s: failed to set level (%d)
<<<< AVFlashlight >>>> %s: %p setting level from %g to %g
<<<< AVFlashlight >>>> %s: called (%p), returning %g
<<<< AVFlashlight >>>> %s: %p setting available from %d to %d
<<<< AVFlashlight >>>> %s: %p setting overheated from %d to %d
<<<< AVFlashlight >>>> %s: %@:%@
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Audio presentation output context not supported by FigEndpointPicker
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Auxiliary output context not supported by FigEndpointPicker
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: FigEndpointPicker does not support controlling output device groups
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Creating a new picker with options %@
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: called(self=%@, outputContext=%@)
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: called(self=%@, outputDevice=%@, options=%@)
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Creating a new picker with context %@
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Set current output device to %@ for context %@ and feature %@
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: FigEndpointPicker does not support completion handlers, so just calling completion handler immediately (though route change has likely not yet finished)
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Resetting global video output device selection
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Cannot reset all output contexts from an unentitled process
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Cannot examine all output contexts from an unentitled process
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Output context exists with associated remote output device
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: FigEndpointPicker does not support multiple output devices
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: FigEndpointPicker does not support volume control
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: FigEndpointPicker does not support communication channels
<<<< AVOutputContext (FigEndpointPicker) >>>> %s: Received %@ notification
<<<< AVOfflineVideoStabilizer >>>> %s: Client provided bad metadata (%d)
<<<< AVOfflineVideoStabilizer >>>> %s: Client only provided %d frames of priming metadata instead of the desired %d
<<<< AVOfflineVideoStabilizer >>>> %s: Client provided a bad pixel buffer (%d)
<<<< AVOfflineVideoStabilizer >>>> %s: gvs processor failed to finish pending processing (%d)
<<<< AVOfflineVideoStabilizer >>>> %s: The head of the output sbuf queue contained an error: %d
<<<< AVOfflineVideoStabilizer >>>> %s: Failed creating processor (%d)
<<<< AVOfflineVideoStabilizer >>>> %s: Failed setting output callback (%d)
<<<< AVOfflineVideoStabilizer >>>> %s: Failed setting PixelBufferPool (%d)
<<<< AVOfflineVideoStabilizer >>>> %s: Failed setting vis disabled to true
<<<< AVOfflineVideoStabilizer >>>> %s: Could not preload metadata (%d)
<<<< AVOfflineVideoStabilizer >>>> %s: Rejecting metadata dictionary since it contains keys we don't understand: %@
<<<< AVOfflineVideoStabilizer >>>> %s: Rejecting metadata dictionary since it is missing the following required keys: %@
<<<< AVOfflineVideoStabilizer >>>> %s: Source pixel buffer sample time doesn't match the metadata sample time for the same frame number
<<<< AVOfflineVideoStabilizer >>>> %s: CMVideoFormatDescriptionCreateForImageBuffer failed (%d)
<<<< AVOfflineVideoStabilizer >>>> %s: CMSampleBufferCreateForImageBuffer failed (%d)
<<<< AVOfflineVideoStabilizer >>>> %s: err == 0, but no sample buffer was returned
