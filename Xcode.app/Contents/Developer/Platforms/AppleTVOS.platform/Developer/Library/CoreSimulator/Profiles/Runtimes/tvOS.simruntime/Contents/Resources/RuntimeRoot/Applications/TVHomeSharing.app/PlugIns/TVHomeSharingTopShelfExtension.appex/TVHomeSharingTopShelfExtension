stopObserving
dealloc
defaultCenter
_nowPlayingAppDidChange:
addObserver:selector:name:object:
_nowPlayingAppIsPlayingDidChange:
_nowPlayingInfoDidChange:
_updateNowPlayingApp
_updateNowPlayingInfo
_updateIsPlaying
removeObserver:
setPlaybackState:
setPlayingAudio:
setMediaType:
setNowPlayingAppBundleID:
setNowPlayingInfo:
nowPlayingAppBundleID
isEqualToString:
tvs_stringForKey:
_updateAudioPlayingState
delegate
mediaRemoteObserver:nowPlayingInfoDidChange:
respondsToSelector:
isHomeSharingAppPlaying
mediaRemoteObserverIsHomeSharingAppPlayingDidChange:
_isPlayingOrPaused
mediaType
mediaRemoteObserverIsPlayingAudioDidChange:
playbackState
startObserving
.cxx_destruct
isPlayingAudio
nowPlayingInfo
setDelegate:
_playingAudio
_playbackState
_nowPlayingInfo
_delegate
_mediaType
_nowPlayingAppBundleID
init
alloc
initWithName:initialState:mode:
_setupStateMachine
_stopObservingMediaEntityServer:
setSemaphore:
stateMachine
postEvent:
cancel
mediaItemsSortedByAddedDateFetchController
mediaItemsSortedByPlayedDateFetchController
userInfo
postEvent:withContext:userInfo:
_registerStateMachineHandlers
setShouldAcceptEvents:
setLoggingComponent:
currentState
numInflightFetches
setNumInflightFetches:
_coalesceMediaItems
mediaItems
count
_startImageLoading
_completeOperation
sharedInstance
setAllowsCaching:
startManagementWithCompletionHandler:
registerHandlerForEvent:onState:withBlock:
_updateFromMostModifiedAccessedMediaServer
mediaEntityServer
mediaEntityServers
countByEnumeratingWithState:objects:count:
isConnectable
setMediaEntityServer:
setMediaCategoryType:
connectionState
_fetchMediaItems
connect
tvs_numberForKey:
unsignedIntegerValue
stop
_cancelImageLoading
registerDefaultHandlerForEvent:withBlock:
_startObservingMediaEntityServer:
mostRecentlyModifiedMediaServer
mediaServerIdentifier
mediaEntityServerForMediaServerIdentifier:
mediaCategoryType
_mediaItemsSortedByAddedDateFecthRequest
initWithMediaEntityServer:fetchRequest:
start
setMediaItemsSortedByAddedDateFetchController:
_mediaItemsSortedByPlayedDateFecthRequest
setMediaItemsSortedByPlayedDateFetchController:
_mediaItemsFetchRequest
sortDescriptorWithKey:ascending:
arrayWithObjects:count:
setSortDescriptors:
mediaItemsFetchRequestWithMediaCategoryType:
addObject:
setProperties:
setRange:
numberWithBool:
dictionaryWithObjects:forKeys:count:
setOptions:
defaultLogObject
mediaEntities
addObjectsFromArray:
addedDate
lastPlayedDate
laterDate:
descendingDateSortComparatorWithBlock:
sortedArrayUsingComparator:
_filterdMediaItems:
subarrayWithRange:
setMediaItems:
firstObject
type
showTitle
objectForKey:
setObject:forKey:
albumIdentifier
copy
imageIdentifier
imageLoadMediaItems
_startLoadingNextImage
removeObjectAtIndex:
initWithObject:imageLoader:groupType:
initWithScaleToSize:
setDecorator:
setCompletionHandler:
fileURLWithPath:
imageFileURLs
setWriteCompletionHandler:
setImageProxy:
load
imageProxy
removeAllObjects
initWithIdentifier:container:
initWithContentIdentifier:
displayName
setTitle:
_contentItemImageShape
initWithMediaEntityServer:
stringWithFormat:
_contentItemTitleForMediaItem:
_contentItemUTI
setContentUTI:
_contentItemImageURLForMediaItem:
setImageURL:
setImageShape:
playURLForMediaItem:
setPlayURL:
displayURLForMediaItem:
setDisplayURL:
enumerateObjectsUsingBlock:
setTopShelfItems:
title
albumTitle
tvs_URLForKey:
_handleMediaServerConnectionStateDidChangeNotification:
removeObserver:name:object:
_mediaEntityServerBrowseSectionItem
setTopShelfItem:
semaphore
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
controller:fetchRequest:didCompleteWithResult:
controller:fetchRequest:didFailWithError:
controller:shouldRefetchForContentsChange:
main
topShelfItem
setStateMachine:
setImageLoadMediaItems:
setImageFileURLs:
_topShelfItem
_mediaEntityServer
_stateMachine
_semaphore
_mediaCategoryType
_mediaItemsSortedByAddedDateFetchController
_mediaItemsSortedByPlayedDateFetchController
_numInflightFetches
_mediaItems
_imageLoadMediaItems
_imageFileURLs
_imageProxy
mainBundle
bundleIdentifier
initializeLoggingWithDomain:persistentComponents:
stringByAppendingPathComponent:
initializeAssetLibraryWithCachePath:
setupNetworkMonitoring
_startObservingManager
_startObservingSettings
_handlePhysicalNetworkStateDidChangeNotification:
_handleAssetDidWriteNotification:
_stopObservingManager
_stopObservingSettings
setCompletionBlock:
operationQueue
addOperation:
nowPlayingContentItem
tvs_addObjectIfNotNil:
_handlePlaybackStateChange
_notfyTopShelfItemsDidChange
observeValueForKeyPath:ofObject:change:context:
object
pendingNowPlayingArtworkAssetKey
setNowPlayingArtworkAssetKey:
pendingNowPlayingInfo
setPendingNowPlayingArtworkAssetKey:
setPendingNowPlayingInfo:
_updateNowPlayingContentItem
protocol
localizedStringForKey:value:table:
_nowPlayingArtworkImageURL
_nowPlayingContentUTI
setNowPlayingContentItem:
mediaRemoteObserver
tvs_dataForKey:
_artworkAssetKeyWithArtworkData:
assetPathForKey:inGroupOfType:
imageWithData:
setImageAsset:forKey:inGroupOfType:expiryDate:
tvs_MD5Digest
tvs_lowercaseHexString
nowPlayingArtworkAssetKey
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
_handleMediaServerContentsDidChangeNotification:
setMaxConcurrentOperationCount:
setName:
postNotificationName:object:
topShelfStyle
topShelfItems
setOperationQueue:
setMediaRemoteObserver:
_operationQueue
_mediaRemoteObserver
_nowPlayingArtworkAssetKey
_pendingNowPlayingInfo
_pendingNowPlayingArtworkAssetKey
_nowPlayingContentItem
com.apple.TVHomeSharing
v16@?0^{__CFDictionary=}8
v12@?0I8
v16@?0^{__CFString=}8
playbackState
TI,N,V_playbackState
playingAudio
TB,N,GisPlayingAudio,V_playingAudio
mediaType
T@"NSString",C,N,V_mediaType
nowPlayingInfo
T@"NSDictionary",C,N,V_nowPlayingInfo
nowPlayingAppBundleID
T@"NSString",C,N,V_nowPlayingAppBundleID
homeSharingAppPlaying
TB,R,N,GisHomeSharingAppPlaying
delegate
T@"<TVHMediaRemoteObserverDelegate>",W,N,V_delegate
Idle
Starting Home Sharing Manager
Connecting Media Entity Server
Fetching Media Entities
Loading Images
Cancelled
Done
Start
Cancel
Home Sharing Manager Did Start
Media Entity Server Connection Did Change
Fetch Media Items Sorted By Added Date Did Complete
Fetch Media Items Sorted By Added Date Did Fail
Fetch Media Items Sorted By Played Date Did Complete
Fetch Media Items Sorted By Played Date Did Fail
Image Loading Done
TVHTopShelfItemOperation State Machine
v8@?0
TVHTopShelfItemsOperation
@"NSString"8@?0
v20@?0B8@"NSError"12
@"NSString"40@?0@"TVSStateMachine"8@"NSString"16@24@"NSDictionary"32
addedDate
lastPlayedDate
title
identifier
type
imageIdentifier
duration
albumTitle
albumIdentifier
showTitle
seasonNumber
@"NSDate"16@?0@8
v28@?0@"TVImage"8@"NSError"16B24
v28@?0@"NSString"8@"NSError"16B24
section-browse
item-%lu
v32@?0@"TVHKMediaItem"8Q16^B24
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
topShelfItem
T@"TVContentItem",C,N,V_topShelfItem
mediaEntityServer
T@"TVHKMediaEntityServer",&,N,V_mediaEntityServer
stateMachine
T@"TVSStateMachine",&,N,V_stateMachine
semaphore
T@"NSObject<OS_dispatch_semaphore>",&,N,V_semaphore
mediaCategoryType
TQ,N,V_mediaCategoryType
mediaItemsSortedByAddedDateFetchController
T@"TVHKMediaEntityFetchController",&,N,V_mediaItemsSortedByAddedDateFetchController
mediaItemsSortedByPlayedDateFetchController
T@"TVHKMediaEntityFetchController",&,N,V_mediaItemsSortedByPlayedDateFetchController
numInflightFetches
TQ,N,V_numInflightFetches
mediaItems
T@"NSArray",C,N,V_mediaItems
imageLoadMediaItems
T@"NSMutableArray",&,N,V_imageLoadMediaItems
imageFileURLs
T@"NSMutableDictionary",&,N,V_imageFileURLs
imageProxy
T@"TVImageProxy",&,N,V_imageProxy
NowPlaying_
AssetLibrary
section-nowplaying
NOW_PLAYING_TITLE
item-nowplaying
%@%@
mediaServers
mediaEntityServers
topShelfStyle
Tq,R
topShelfItems
T@"NSArray",R
operationQueue
T@"NSOperationQueue",C,N,V_operationQueue
mediaRemoteObserver
T@"TVHMediaRemoteObserver",&,N,V_mediaRemoteObserver
nowPlayingArtworkAssetKey
T@"NSString",C,N,V_nowPlayingArtworkAssetKey
pendingNowPlayingInfo
T@"NSDictionary",C,N,V_pendingNowPlayingInfo
pendingNowPlayingArtworkAssetKey
T@"NSString",C,N,V_pendingNowPlayingArtworkAssetKey
nowPlayingContentItem
T@"TVContentItem",C,N,V_nowPlayingContentItem
TVHMediaRemoteObserver
TVHTopShelfItemOperation
TVHKMediaEntityFetchControllerDelegate
NSObject
TVHTopShelfProvider
TVHMediaRemoteObserverDelegate
TVTopShelfProvider
v16@0:8
B16@0:8
v24@0:8@16
v20@0:8B16
@16@0:8
I16@0:8
v20@0:8I16
@"NSDictionary"
@"<TVHMediaRemoteObserverDelegate>"
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@32
Q32@0:8@16@24
v40@0:8@"TVHKMediaEntityFetchController"16@"TVHKMediaEntityFetchRequest"24@"TVHKMediaEntityFetchControllerResult"32
v40@0:8@"TVHKMediaEntityFetchController"16@"TVHKMediaEntityFetchRequest"24@"NSError"32
Q32@0:8@"TVHKMediaEntityFetchController"16@"TVHSMediaServerContentsChange"24
@24@0:8@16
q16@0:8
v24@0:8Q16
@"TVContentItem"
@"TVHKMediaEntityServer"
@"TVSStateMachine"
@"NSObject<OS_dispatch_semaphore>"
@"TVHKMediaEntityFetchController"
@"NSArray"
@"NSMutableArray"
@"NSMutableDictionary"
@"TVImageProxy"
v32@0:8@16@24
v24@0:8@"TVHMediaRemoteObserver"16
v32@0:8@"TVHMediaRemoteObserver"16@"NSDictionary"24
@"NSArray"16@0:8
v48@0:8@16@24@32^v40
@"NSOperationQueue"
@"TVHMediaRemoteObserver"
Coalescing media items
Filtering media items (%u) [%@]
Filtered media items (%u) [%@]
!#! Starting image loading for %lu items
!#! Looking for image identifier for %@
!#! Found image identifier (%@) for %@
!#! Finished all image loading
!#! Image proxy LOAD finished for %@ (Image = %@) (Error = %@) (Finished = %@)
!#! Image proxy WRITE finished for %@ (Path = %@) (Error = %@) (Finished = %@)
Finished writing image for %@ at %@
!#! Added image URL to cache for %@
!#! Starting image proxy load for %@
Building Browse section item
Have media items : [%lu]
!#! Adding image URL %@ for %@
Getting topShelfItems
Returning topShelfItems (%lu)
_handleAssetDidWriteNotification: Asset written (key = %@)
_handleAssetDidWriteNotification: Asset written is the pending now playing artwork (key = %@)
_handleAssetDidWriteNotification: Now playing artwork written successfully so updating top shelf. (key = %@)
Have now playing info for - %@
_handlePlaybackStateChange: isHomeSharingAppPlaying = %@, isPlayingAudio = %@
_handlePlaybackStateChange: Now Playing Info - %@
_handlePlaybackStateChange: Now playing artwork not in the cache. (key = %@)
_handlePlaybackStateChange: Now playing artwork already being written to cache. (key = %@)
_handlePlaybackStateChange: Now playing artwork not being written to cache. Starting write. (key = %@)
_handlePlaybackStateChange: Updating now playing info
Sending notification
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.atvcached</string>
<string>com.apple.tvhomesharingd.xpc</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.TVHomeSharing.TVHomeSharingTopShelfExtension</string>
<string>com.apple.TVHomeSharing</string>
</array>
<key>com.apple.tvhomesharingd.client</key>
<true/>
</dict>
</plist>
