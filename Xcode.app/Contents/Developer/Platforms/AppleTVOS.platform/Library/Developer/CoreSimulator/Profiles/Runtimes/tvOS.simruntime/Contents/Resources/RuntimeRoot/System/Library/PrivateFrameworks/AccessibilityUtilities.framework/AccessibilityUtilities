v8@?0
string
com.apple.springboard
com.apple.CarPlayApp
com.apple.SpringBoard.ControlCenter
com.apple.Spotlight
com.apple.camera
com.apple.backboardd
assistivetouchd
com.apple.accessibility.AccessibilityUIServer
com.apple.mobilesafari
com.apple.purplebuddy
com.apple.PreBoard
com.apple.CheckerBoard
com.apple.quicklook.quicklookd
com.apple.MobileSMS
com.apple.iBooks
com.apple.siri
com.apple.mobilemail
com.apple.MailCompositionService
com.apple.UIKit
com.apple.TVMLKit
com.apple.ControlCenterUI
com.apple.ControlCenterUIKit
TVIdleScreen
CommandAndControl
com.apple.Bridge
com.apple.VoiceShortcuts
com.apple.shortcuts
com.apple.AccessibilityUtilities.AXSettingsShortcuts
com.apple.facetime
com.apple.FullKeyboardAccess
com.apple.news
com.apple.sidecar
com.apple.HeadBoard
com.apple.chronod
com.apple.ClipViewService
accessibilityutilitiesbundle
com.apple.TVSettings
com.apple.PineBoard
com.apple.TVAirPlay
com.apple.nanobuddy
com.apple.Carousel
com.apple.clockface
com.apple.SketchBoard
function luminance(color) {  if (color.length == 4 && color[3] == 0) { return 1; } for (var k = 0; k < 3; k++) { var adjusted = 0;  var value = color[k] / 255;  if (value < 0.03928) {        value = value / 12.92;    } else {        value = (value + .055) / 1.055;        value = Math.pow(value, 2.4); } color[k] = value;   } return (color[0] * .2126) + (color[1] * .7152) + (color[2] * .0722); }
function dm() { var supportedSchemes = document.head.querySelector("meta[name='supported-color-schemes']");
var supportedSchemesDM = (supportedSchemes && supportedSchemes.content && supportedSchemes.content.includes('dark'));
var colorSchemes = document.head.querySelector("meta[name='color-scheme']");
var colorSchemesDM = (supportedSchemes && supportedSchemes.content && supportedSchemes.content.includes('dark'));
var classListDM = document.documentElement.classList.contains('apple-mail-implicit-dark-support');
var bgColor = document.body && window.getComputedStyle(document.body).getPropertyValue('background-color');
bgColor = bgColor.replace(/[^\d,]/g, '').split(',');
var luma = bgColor ? luminance(bgColor) : .99;
return (supportedSchemesDM || colorSchemesDM || classListDM || (luma < .3)) }
dm();
UIApplication
sharedApplication
applicationState
SBMachServices
com.apple.uikit.viewservice
AXInPreBoardScenarioUpdatedNotification
AXInCheckerBoardScenarioUpdatedNotification
user named '%s'
user with identifier '%lu'
ProductVersion
v32@?0@"NSString"8Q16^B24
apple-internal-install
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35
AccessibilityFrameworks-
1234567890.-
Accessibility
Release Root
AccessibilityFrameworks-SHA__
_Frameworks_Accessibility
ATP Root: %@
GetJob
SetupDone
ForceNoBuddy
/System/Library/PrivateFrameworks/AccessibilityDebuggerTarget.framework
Error: Unable to load AccessibilityDebuggerTarget framework: %@ 
Principal class :%@. does not respond to expected 'target' class method
AppleInternal
CoreServices
hidden
q24@?0@8@16
AXPreBoardQueue
mobile
ask.sheet.option.GuidedAccess.on
ask.sheet.option.AssistiveTouch.on
ask.sheet.option.SwitchOver.on
ask.sheet.option.WhiteOnBlack.on
ask.sheet.option.VoiceOver.on
ask.sheet.option.Zoom.on
ask.sheet.option.HearingAidControl.on
ask.sheet.option.reduce.white.point.on
ask.sheet.option.DisplayFiltersColor.on
ask.sheet.option.grayscale.on
ask.sheet.option.touch.accommodations
ask.sheet.option.magnifier.on
Loc Caption Panel
AX Development Tools
ask.sheet.option.temporarily.undo.double.invert
ask.sheet.option.reduce.transparency
ask.sheet.option.reduce.motion
ask.sheet.option.left.right.balance
ask.sheet.option.increase.contrast
ask.sheet.option.command.and.control.on
ask.sheet.option.full.keyboard.access.on
B24@?0@"NSNumber"8Q16
AXPISystemActionHelper
Class getAXPISystemActionHelperClass(void)_block_invoke
AXTripleClickHelpers.m
Unable to find class %s
void *AccessibilityPhysicalInteractionLibrary(void)
/System/Library/PrivateFrameworks/AccessibilityPhysicalInteraction.framework/AccessibilityPhysicalInteraction
/System/Library/PrivateFrameworks/AccessibilityPhysicalInteraction.framework/Contents/MacOS/AccessibilityPhysicalInteraction
eventType
initialFingerCount
currentFingerCount
swipe
systemGesturePossible
paths
handIdentity
handIndex
handPosition
handEventMask
{CGPoint=dd}
  Hand Info
    Type:                    %@
    Initial Finger Count:    %i
    Current Finger Count:    %i
    Swipe:                   %i
    System Gesture Possible: %i
    Hand Paths:
 - eventType %@, initialFingerCount %i, currentFingerCount %i, swipe %i, systemGesturePossible %i, isStylus %i, 
paths %@
com.apple.MobileAsset.MacinTalkVoiceAssets
com.apple.MobileAsset.VoiceServices.CustomVoice
com.apple.MobileAsset.VoiceServices.GryphonVoice
com.apple.MobileAsset.VoiceServices.CombinedVocalizerVoices
FormatVersion
VoiceVersion
VoiceId
q24@?0@"MAAsset"8@"MAAsset"16
 (%@)
female
male
v16@?0@"NSArray"8
macintalk-xml-queue
Alex
Victoria
B32@?0@"TTSVoiceAsset"8Q16^B24
fr-FR
fr_FR
en-IN
en_IN
nicky
yushu
v16@?0q8
VSVoiceAsset
Class getVSVoiceAssetClass(void)_block_invoke
AXSpeechUtilities.m
void *VoiceServicesLibrary(void)
/System/Library/PrivateFrameworks/VoiceServices.framework/VoiceServices
/System/Library/PrivateFrameworks/VoiceServices.framework/Contents/MacOS/VoiceServices
AXSettingsVoiceAssetManager
Class getAXSettingsVoiceAssetManagerClass(void)_block_invoke
void *AXSpeechAssetServicesLibrary(void)
/System/Library/PrivateFrameworks/AXSpeechAssetServices.framework/AXSpeechAssetServices
/System/Library/PrivateFrameworks/AXSpeechAssetServices.framework/Contents/MacOS/AXSpeechAssetServices
VSSpeechSynthesizer
Class getVSSpeechSynthesizerClass(void)_block_invoke
|%@:%lu %s|
%@%@
%{public}@
%{public}s
%{private}@
{redacted}
%{private}s
axprintln
_AXLogThresholdQueue
repeatCount
time
(repeated %@ times(s)): %@
U.S.
en_US
AXIPCErrorDomain
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXIPCMessage.m
-[AXIPCMessage dealloc]
%s: Failure deallocating right %llx: %d! This probably means there is a port right overrelease somewhere!
Error unarchiving object. %{public}@
Swallowing decoder exception of %@, treating as null data
Message otherwise as: %@ - %@
AXHearingAidMode
payload
Trying to serialize an AXIPC payload that does not support secure coding: %@
%@. Client port: %ld. Key: %d. Payload: %@ (%@)
-[AXIPCMessage setClientPort:]
AXValidation Error
See syslog
_installSafeCategoryOnClassNamed
Value for key %@ on object <%@: %p> is not an %@; class: %@; value: %@
expected type encodings
", "%s
expected type encoding
Value for key %@ on object <%@: %p> doesn't encapsulate the right type; value: %@; actual type encoding: "%s"; %s: "%s".
{_NSRange=QQ}
{CGSize=dd}
{CGRect={CGPoint=dd}{CGSize=dd}}
UIView
Caught exception '%@' while performing safe block; reason: '%@'. Stacktrace: %@.
@"NSString"8@?0
AXCArrayArchivingKeyArray
AXCArrayArchivingKeyElementSize
AXCArrayArchivingKeyCursor
AXCArrayArchivingKeyInitialCapacity
%@.%@
v24@?0@"NSString"8@?<v@?@"NSString">16
v16@?0@"NSString"8
Q16@?0@"NSString"8
v24@?0Q8@"NSString"16
AXCArray
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXDisplayLinkManager.m
-[AXDisplayLinkManager beginRequiringWarmUpMode]
Unexpectedly has updated target actions even though not handling display refresh.
-[AXDisplayLinkManager endRequiringWarmUpMode]
 - fullWord %@, textToInsert %@, prefix %@, range to replace %@
v40@?0@"NSString"8{_NSRange=QQ}16^B32
v28@?0I8d12^B20
q24@?0@"AXTypingPrediction"8@"AXTypingPrediction"16
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
v48@?0r^I8q16d24q32^B40
GuidedAccessEventTap
GuidedAccessHIDEventTap
EventTap: %d - %@
AXEventTapManager <%p>. Taps:
%@. Priority:%d
v32@?0@"AXEventTapPair"8Q16^B24
B32@?0@"AXEventTapPair"8Q16^B24
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXEventTapManager.m
-[AXEventTapManager sendHIDSystemEvent:repostCreatorHIDEvent:senderID:]
we tried to make a HID event and send it but it wasn't there: %@
AXEventTapManager
B32@?0@"AXEventPathInfoRepresentation"8Q16^B24
q24@?0@"AXEventTapPair"8@"AXEventTapPair"16
-[AXEventTapManager _setEventTapPriority:priority:]
Where's my system client?
DeviceUsagePage
DeviceUsage
v32@?0^v8^v16^{__IOHIDServiceClient=}24
-[AXEventTapManager _removeHIDEventTapFilter:]
Pair had a system client, but was not the right type!
-[AXEventTapManager _runMatchingServiceHandler:]
Should not have asked to run the matching service handler for an event tap that did not have one.
com.apple.accessibility.AXAssistiveTouchServer
com.apple.accessibility.AXBackBoardServer
com.apple.accessibility.AXSpringBoardServer
com.apple.accessibility.AXCarouselServer
com.apple.accessibility.AXSBHearingAidServer
com.apple.accessibility.AXVoiceOverServer
AXPerformanceTestReportingServer
AXSBServerDidShowTripleClick
com.apple.accessibility.speech.asset.updater
com.apple.InCallService
com.apple.conversationController.HUD
com.apple.accessibility.RTTUI.RTTNotifications
AXGuidedAccessActiveStatusDidChangeBroadcastNotification
DisplayFilterUIServer
com.apple.zoomtouch.showalertbuddy
com.apple.accessibility.AXSytemReplyServer
AXServer Assertion Type
AXServer Assertion Holder ID
AXAssistiveTouchPayloadKeyDictionaryElementIndex
AXAssistiveTouchPayloadKeyDictionaryElementIndexes
AXAssistiveTouchPayloadKeyDictionaryElements
AXAssistiveTouchPayloadKeyDictionaryElementValue
AXGuidedAccessPayloadKeyRequestingAppIsSelfLockedToGAX
AXGuidedAccessPayloadKeyRequestingAppSetGAXEnabled
AXGuidedAccessPayloadKeyIsTemporaryFailure
AXGuidedAccessPayloadKeyGAXConfiguration
AXGuidedAccessPayloadKeyGAXMode
AXGuidedAccessPayloadKeySessionApp
AXGuidedAccessPayloadKeyAppSetIndex
com.apple.accessibility.voiceover.vibration.exercise
com.apple.accessibility.voiceover.swipe.exercise
com.apple.accessibility.statusbarchanged
UIAXZoomAdjustmentChange
voiceToAdd
voiceToRemove
voiceLanguage
UsagePage
Keycode
KeyState
AXContainerManagerMessageKeyData
AXContainerManagerMessageKeyPath
AXContainerManagerMessageKeyError
LoginSessionNote.plist
AXLoginSessionNoteVoiceOverWasEnabledKey
AXLoginSessionNoteZoomWasEnabledKey
speakTypingCharacters
speakTypingWords
speakTypingPrediction
com.apple.VoiceOverTouch.drag.xpc
com.apple.assistivetouchd.drag.xpc
com.apple.commandandcontrol.drag.xpc
com.apple.fullkeyboardaccess.drag.xpc
BackTapClientIDSystem
BackTapClientIDSwitchControl
BackTapClientIDVoiceOver
BackTapClientRegistrationKeyPolicy
76,8194
76,8207
76,8206
76,8203
76,8204
76,8202
AXAssertionCoordinator-AssertionQueue
v16@?0@"BSSimpleAssertion"8
com.apple.accessibility.AXSideStorageQueue
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXSideStorage_Implementation.m
-[NSProxy(AXSideStorage) _accessibilitySetValue:forKey:storageMode:]
value is not a wrapper class: %@
pressed
buttonIndex
location
AXRedirectedEventDetector
typing.feedback.opening.single.quotation.mark
typing.feedback.closing.single.quotation.mark
com.apple.accessibility.AXServer.assertion
%@-%d-%d
result
v16@?0@8
v24@?0@"AXIPCMessage"8@"NSError"16
Asked to send nil message asynchronously
acquire
relinquish
AXAssistiveTouchIconLocationTopLeft
AXAssistiveTouchIconLocationTopMiddle
AXAssistiveTouchIconLocationTopRight
AXAssistiveTouchIconLocationMidLeft
AXAssistiveTouchIconLocationMidMiddle
AXAssistiveTouchIconLocationMidRight
AXAssistiveTouchIconLocationBottomLeft
AXAssistiveTouchIconLocationBottomMiddle
AXAssistiveTouchIconLocationBottomRight
AXAssistiveTouchIconTypeNotificationCenter
AXAssistiveTouchIconTypeCustom
AXAssistiveTouchIconTypeDevice
AXAssistiveTouchIconTypeSiri
AXAssistiveTouchIconTypeHome
AXAssistiveTouchIconTypeControlCenter
AXAssistiveTouchIconTypeLockScreen
AXAssistiveTouchIconTypeRotateScreen
AXAssistiveTouchIconTypeVolumeUp
AXAssistiveTouchIconTypeVolumeDown
AXAssistiveTouchIconTypeMute
AXAssistiveTouchIconTypeGestures
AXAssistiveTouchIconTypeTripleClick
AXAssistiveTouchIconTypeShake
AXAssistiveTouchIconTypeMultitasking
AXAssistiveTouchIconTypeScreenshot
AXAssistiveTouchIconTypeOrientation
AXAssistiveTouchIconTypeVoiceControl
AXAssistiveTouchIconTypeCommandAndControl
AXAssistiveTouchIconTypePinch
AXAssistiveTouchIconTypeRotate
AXAssistiveTouchIconTypePinchAndRotate
AXAssistiveTouchIconTypeDoubleTap
AXAssistiveTouchIconTypeLongPress
AXAssistiveTouchIconTypeDragAndDrop
AXAssistiveTouchIconTypeMoveMenu
AXAssistiveTouchIconTypeSpotlight
AXAssistiveTouchIconTypeSysdiagnose
AXAssistiveTouchIconTypeSOS
AXAssistiveTouchIconTypeRebootDevice
AXAssistiveTouchIconTypeToggleDock
AXAssistiveTouchIcontTypeArmApplePay
AXAssistiveTouchIconTypeReachability
AXAssistiveTouchIconTypeSpeakScreen
AXAssistiveTouchIconTypeOpenMenu
AXAssistiveTouchIconTypePassThroughToApp
AXAssistiveTouchIconTypeDwell
AXAssistiveTouchIconTypeDwellResume
AXAssistiveTouchIconTypeDwellPause
AXAssistiveTouchIconTypeDwellPauseToggle
AXAssistiveTouchIconTypeDwellClick
AXAssistiveTouchIconTypeDwellLock
AXAssistiveTouchIconTypeDwellUnlock
AXAssistiveTouchIconTypeDwellLockToggle
AXAssistiveTouchIconTypeDwellIncreaseTime
AXAssistiveTouchIconTypeDwellDecreaseTime
AXAssistiveTouchIconTypeScroll
AXAssistiveTouchIconTypeScrollUp
AXAssistiveTouchIconTypeScrollDown
AXAssistiveTouchIconTypeScrollLeft
AXAssistiveTouchIconTypeScrollRight
AXAssistiveTouchIconTypeScrollToTop
AXAssistiveTouchIconTypeScrollToBottom
AXAssistiveTouchIconTypeCamera
AXAssistiveTouchIconTypeTorch
AXAssistiveTouchIconTypeForceTap
AXAssistiveTouchIconTypeMousePrimaryClick
AXAssistiveTouchIconTypeSideApp
AXAssistiveTouchIconTypeSiriShortcuts
SiriShortcut
CustomGesture
AXAssistiveTouchIconTypeAssistiveTouch
AXAssistiveTouchIconTypeVoiceOver
AXAssistiveTouchIconTypeClassicInvert
AXAssistiveTouchIconTypeColorFilters
AXAssistiveTouchIconTypeSmartInvert
AXAssistiveTouchIconTypeZoom
AXAssistiveTouchIconTypeZoomController
AXAssistiveTouchIconTypeMagnifier
AXAssistiveTouchIconTypeSwitchControl
AXAssistiveTouchIconTypeFullKeyboardAccess
__empty%d__%@
UIReachability
CustomGesture-%@
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXAssistiveTouchSettings.m
CGPoint _AXAssitiveTouchPositionForDefault8(NSString *__strong)
We should not have been asked this location: %@
CGPoint _AXAssitiveTouchPositionForDefault6(NSString *__strong)
CGPoint _AXAssitiveTouchPositionForDefault4(NSString *__strong)
CGPoint _AXAssitiveTouchPositionForDefault1(NSString *__strong)
__NONE__
pointerX
pointerY
pointerZ
pointerAccelX
pointerAccelY
pointerAccelZ
isPointerMove
pointerButtonMask
pointerButtonNumber
pointerButtonClickCount
pointerButtonPressure
pointerIsAbsolute
 Pointer Info:
   X: %.2f
   Y: %.2f
   Z: %.2f
   accelX: %.2f
   accelY: %.2f
   accelZ: %.2f
   isMove: %@
   Button Mask: %.2f
   Button Number: %.2f
   Click Count: %.2f
   Pressure: %.2f
   isAbsolute: %@
%@ - %@
AXInternalInPreBoardModeUpdatedNotification
AXInternalInCheckerBoardModeUpdatedNotification
AXInternalSessionIsLoginSessionChangedNotification
AXBackboardServerShouldToggleGuidedAccessNotification
adjustment
enabled
inPreboardMode
inCheckerBoardMode
AXBackBoardServerInstance
backBoardServerInstanceIfExists
%@ did not conform to %s! This is a bad bug! Things will go wrong when AXBackBoard asks itself stuff!
sesionIsLoginSession
record
namedTaps
afterNamedTap
systemEvent
displayPoint
contextId
fromContextId
toContextId
frame
could not convert frame %@ from context %lu to context %lu: %@
%@ did not conform to %s like it should! Bailing from %s!
-[AXBackBoardServer convertFrame:fromContextId:]
point
preference
value
notification
rect
Couldn't get zoom initial focus rect: %@
command
error
availability
Could not reset accessibility features: %@
filterData
visible
deviceOrientation
Disable System Gestures
Disable Speak This! Gesture
Disable Notification Center gesture
Disable Control Center gesture
Disable Dashboard gestures
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXAssertion.m
-[AXAssertion _notifyServerAssertionWasAcquired]
Handing of assertion type:(%@) was not implemented
-[AXAssertion _notifyServerAssertionWasRelinquished]
AXAssertion:<%p> Type:%@ ClientID:%@
_AXAssertionServer:<%p> Held Assertions:
  %@
v32@?0@"NSString"8@"NSArray"16^B24
Trying to add assertion holder ID:(%@) with type:(%@), but that ID is already in the holders list: (%@). Something is out of wack
Trying to remove assertion holder ID:(%@) with type:(%@), but that ID is not in the holders list: (%@). Something is out of wack
v16@?0@"NSNotification"8
[-()\s]
AccessibilityDisableIdleTimer
AXUserEventTimer-AssertionQueue
language
skipsUnpronounceable
v32@?0{_NSRange=QQ}8^B24
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXIPCServer.m
-[AXIPCServerClientRegistration initWithPort:identifier:]_block_invoke
%@. Serivce Name:%@. Running:%@ Server Port:%d. Clients:%@. Entitlements:%@. RunLoopSource:%p
-[AXIPCServer setServiceRunLoopSource:]
Why are you setting this? it's too late!
@"AXIPCMessage"16@?0@"AXIPCMessage"8
A message was received that could not be understood: %@
AXIPCMessageHandlerException
Cannot start server. It is already running.
Cannot start server. Service name was empty
Cannot stop server. It is not running.
v32@?0@8@16^B24
B24@?0@8^B16
identifier
v16@?0@"NSData"8
B32@?0@"AXIPCDelayedMessage"8Q16^B24
B12@?0B8
Error: %@
v16@?0@"AXIPCMessage"8
PID:%@
kern_return_t __AXXIPCSendData(mach_port_t, mach_port_t, mach_port_t, ax_bytes_t, mach_msg_type_number_t, ax_bytes_t *, mach_msg_type_number_t *, security_token_t, audit_token_t)_block_invoke
__AXXIPCSendData_block_invoke
kern_return_t __AXXIPCSimpleSendData(mach_port_t, mach_port_t, ax_bytes_t, mach_msg_type_number_t, security_token_t, audit_token_t)
__AXXIPCSimpleSendData
kern_return_t __AXXIPCSimpleSendDataWithFencePort(mach_port_t, mach_port_t, mach_port_t, ax_bytes_t, mach_msg_type_number_t, security_token_t, audit_token_t)_block_invoke
__AXXIPCSimpleSendDataWithFencePort_block_invoke
kern_return_t __AXXIPCSendDataWithAsyncReply(mach_port_t, mach_port_t, mach_port_t, ax_bytes_t, mach_msg_type_number_t, security_token_t, audit_token_t)_block_invoke
__AXXIPCSendDataWithAsyncReply_block_invoke
UIWindow
Class getUIWindowClass(void)_block_invoke
AXIPCServer.m
void *UIKitLibrary(void)
/System/Library/Frameworks/UIKit.framework/UIKit
/System/Library/Frameworks/UIKit.framework/Contents/MacOS/UIKit
AXIPCErrorKeyMachError
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXIPCClient.m
-[AXIPCOutstandingAsyncRequest initWithReplyPort:handlerQueue:handler:]
Must give a valid mach port.
-[AXIPCOutstandingAsyncRequest dealloc]
Got %x (%s) from mach_port_mod_refs in %s. Possible port right overrelease! name=%x
reply send-once right was destroyed, so this async request (%@) will never receive a reply.
connection
-[AXIPCClient dealloc]
AXIPCClient:<%p> Service:%@ ID:%@ connected:%@
Couldn't register as connection did not exist
client identifer was NULL
Could not find server for service: %@. bootstrap error: %s
Could not make mach port
Client could not connect. It is already connected
Client could not connect. Was initialized with an empty service name.
Client could not disconnect. It is already disconnected
Could not verify connection. server port was nil
Could not verify connection. client is not connected
Could not send simple message (%@). server port is NULL [%@]
Could not send simple message (%@). Port:%d. Error:%d (0x%x). 
B24@?0I8I12@"NSData"16
Reply data could not be converted into a message
Could not send message (%@). Port:%d. Error:%d (0x%x). Timeout:%f(%d). 
-[AXIPCClient sendMessage:withError:]
Should not have a reply in the failure case
Could not allocate reply port: %d
Could not send message (%@). Port:%d. Error:%@.  %@
-[AXIPCClient sendAsyncMessage:replyOnQueue:replyHandler:]
If we did not succeed sending the message we should have an error here.
-[AXIPCClient _attemptToEstablishConnection]
%s has to run in a writing block of the connection queue.
MACH_MSG_SUCCESS
MACH_MSG_MASK
MACH_MSG_IPC_SPACE
MACH_MSG_VM_SPACE
MACH_MSG_IPC_KERNEL
MACH_MSG_VM_KERNEL
MACH_SEND_IN_PROGRESS
MACH_SEND_INVALID_DATA
MACH_SEND_INVALID_DEST
MACH_SEND_TIMED_OUT
MACH_SEND_INTERRUPTED
MACH_SEND_MSG_TOO_SMALL
MACH_SEND_INVALID_REPLY
MACH_SEND_INVALID_RIGHT
MACH_SEND_INVALID_NOTIFY
MACH_SEND_INVALID_MEMORY
MACH_SEND_NO_BUFFER
MACH_SEND_TOO_LARGE
MACH_SEND_INVALID_TYPE
MACH_SEND_INVALID_HEADER
MACH_SEND_INVALID_TRAILER
MACH_SEND_INVALID_RT_OOL_SIZE
MACH_RCV_IN_PROGRESS
MACH_RCV_TIMED_OUT
MACH_RCV_INTERRUPTED
MACH_RCV_PORT_CHANGED
MACH_RCV_INVALID_NOTIFY
MACH_RCV_INVALID_DATA
MACH_RCV_PORT_DIED
MACH_RCV_IN_SET
MACH_RCV_HEADER_ERROR
MACH_RCV_BODY_ERROR
MACH_RCV_INVALID_TYPE
MACH_RCV_SCATTER_SMALL
MACH_RCV_INVALID_TRAILER
MACH_RCV_IN_PROGRESS_TIMED
Unknown mach error :%d (0x%x)
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AXDeviceMonitor.m
-[AXDeviceMonitor dealloc]
attempt to deallocate device monitor in state %d
-[AXDeviceMonitor copyDevices]
attempt to copy devices from device monitor in state %d
-[AXDeviceMonitor begin]
attempt to start device monitor in state %d
-[AXDeviceMonitor invalidate]
attempt to invalidate device monitor in state %d
UniqueID
Transport
Bluetooth
PrimaryUsage
Couldn't find target class name for safe category class %@
Couldn't find target class named %@ for safe category class %@
Failed to cast object <%@: %p> as safe category %@ %@
Failed to cast object <%@: %p> as class %@ %@
Failed to cast object <%@: %p> as protocol %@ %@
<MSHRunLoopSource %p> {port = %x, callback = %p}
%d: badly generated MIG reply for port %x
EventTap
UserInterfaceService
SpeechAssetDownloader
Zoom
AVSpeechSynthesis
VOTiCloud
VOTAudio
BrailleGestures
VisualAlerts
AudioRouting
LocCaptionPanel
SpeakSelection
SpeakTyping
SpeakThis
ContextKit
SCElementNav
Pronunciations
SCPauseResume
BrailleHardware
SwitchControlHardware
VoiceOverIAP
VoiceOverLifeCycle
Magnifier
MagnifierBright
VoiceOver
AXNotifications
AXVectorKit
AXCharacterVoices
AXAggregateLogging
MagicTapToggle
BrokenHomeButton
DataMigrator
InvertColors
AXSettings
AXUIViewService
BBServer
SBServer
SpeakFingerManager
AXCustomizableMouse
AXSoundBoard
<AXMIDIDeviceEntityEndpoint:%p parent:%@>
kMIDIPropertyName
kMIDIPropertyManufacturer
kMIDIPropertyModel
kMIDIPropertyUniqueID
kMIDIPropertyTransmitChannels
kMIDIPropertyIsEmbeddedEntity
kMIDIPropertyIsBroadcast
kMIDIPropertyOffline
kMIDIPropertyPrivate
kMIDIPropertyDriverOwner
midi_channel
midi_type
midi_note
midi_pressure
midi_control
midi_controlvalue
midi_program
midi_pitchbend
Unknown
Note Off. note:%@ (%@) pressure:%@
Note On. note:%@ (%@) pressure:%@
AfterTouch. note:%@ (%@) pressure:%@
Control Change. control:%@ value:%@
Program Change. program:%@
Channel AfterTouch. pressure:%@
Pitch Bend. value:%@
System Exclusive
MIDIEvent<%p>: channel:%@ type:%@
%@-%@
v24@?0@"NSDictionary"8@"NSString"16
gesture
argument
userInfo
timeout
RotorNames
<AXMIDIDevice:%p [%@]>
AXMIDIDevice<%p>
 Name: %@
 Manufacturer: %@
 Model: %@
 Driver: %@
 Unique ID: %@
 Device ID: %@
 Is Offline: %@
 Is Private: %@
 Supports General MIDI: %@
 Supports MMC: %@
 Entities: %@
  Entity %@ of %@
   Name: %@
   Driver: %@
   Unique ID: %@
   Device ID: %@
   Is Embedded: %@
   Is Broadcast: %@
   Is Offline: %@
   Is Private: %@
   Supports General MIDI: %@
   Supports MMC: %@
   Sources: %@
    Source %@ of %@
     Name: %@
     Manufacturer: %@
     Model: %@
     Driver: %@
     Unique ID: %@
     Receive Channels: %@
     Transmit Channels: %@
     Is Embedded: %@
     Is Broadcast: %@
     Is Offline: %@
     Is Private: %@
   Destinations: %@
    Destination %@ of %@
kMIDIPropertyDeviceID
kMIDIPropertySupportsGeneralMIDI
kMIDIPropertySupportsMMC
AXBinaryMonitorQueue
_resolvedPath
%@.bundle
.bundle
%@.framework
.dylib
%@.dylib
.appex
%@.appex
.app
%@.app
not adding handler, block was null
not adding handler, binary name was nil
.framework
bundle
Bundle
framework
appex
dylib
AXDateFormatter
jjmm
seconds.format.integer
seconds.format.float
minutes.format
hours.format
days.format
AX_SUB_SECOND_ABBREVIATION
Incoming date is nil
time.ago
time.with.seconds.format
jjmma
com.apple.accessibility.unmanaged.asam.uuid
builtIn
uuid
name
textualContext
appIdentifier
punctuationGroup
voiceIdentifier
speechRate
volume
soundMuted
speechMuted
audioDucking
modifierKeys
brailleTable
brailleStatusCellGeneral
brailleStatusCellText
tableHeaders
tableRowAndColumn
speakEmojis
imageDescriptions
containerFeedback
numberFeedback
brailleOutput
brailleInput
brailleAutoAdvanceDuration
hints
textualContexts
%@: name: %@, apps: %@, voice: %@, punctuation: %@, volume: %@, rate: %@
Siri Semantic Context
ADTarget
target
%@ (generic symbols)
(DELAYED) 
(Build as DEBUG) 
validating %d items and Installing AX Safe Categories on 
validating 
, In process: %@
****************** Finished %@. Success! *****************
********************************************************************
* AX: Failed %@. %lu errors:
********************************************************************
* AX: %lu warning%s generated while %@:
* %@
Class Not Present: %@
%@: %@ is not a kind of %@
NSInteger
NSUInteger
BOOL
CGFloat
@"%@"
%@: %@ : Ivar does not exist: %@
%@: %@ : Ivar is not the right type: %@ [AX: %@ MAINLINE: %s]
v24@?0^{objc_method=}8^B16
%@: %@ %@ method not present: %@
Class
Instance
Method does not exist
Unable to determine return type.
Incorrect return type: expected:%@ actual:%@
Incorrect argument count: expected:%@ actual:%@
Actual arg not found at position:%@ expected:%@
Incorrect argument at position:%@
 expected:%@
 actual:%@
%@: %@ method: (%@) on class: %@.
%@: %@ Property not present: %@
%@: %@ Property missing type information: %@
%@: %@ Property: (%@) had wrong type:(%s) expected: (%s)
%@: %@ Property: (%@) has unexpected custom getter: (%s)
%@: %@ Property: (%@) has unexpected custom setter: (%s)
%@: %@ Property: (%@) does not have custom getter: (%@)
%@: %@ Property: (%@) has unexpected custom getter: (%s) expected:(%@)
%@: %@ Property: (%@) does not have custom setter: (%@)
%@: %@ Property: (%@) has unexpected custom setter: (%s) expected:(%@)
%@: Class:%@ Does not conform to Protocol:%@
%@: %@ Protocol does not conform to protocol: %@
%@: %@ Protocol %@ %@ method not present: %@
required
optional
instance
class
(null)
%@: %@ method: (%@) on class: %@ has the following more specific variants:
B24@?0@"NSString"8@"NSString"16
AX Safe Category class not found: %@
Class=%@
axbundle
AX Safe category class:%@ in wrong AX bundle '%@' should be with '%@'
%@ is not an accessibility class!
-[NSObject(AXSideStorage) _accessibilitySetValue:forKey:storageMode:]
pathIndex
pathIdentity
pathProximity
pathPressure
pathMajorRadius
pathMajorRadiusTolerance
pathLocation
pathWindowContextID
pathWindow
pathTwist
pathMinorRadius
pathQuality
pathDensity
pathEventMask
orbValue
transducerType
altitude
azimuth
barrelPressure
willUpdateMask
didUpdateMask
      Path Index:        %i
      Identity:          %i
      Proximity:         %i
      Pressure:          %f
      Major Radius:      %f
      Location:          x: %f y: %f
      Window Context ID: %u
      Window:            %p
 - pathIndex %i, pathIdentity %i, pathProximity %i, pathPressure %f, pathMajorRadius %f, pathLocation.x %f, pathLocation.y %f, pathWindowContextID %u, pathWindow %p
{[,]}
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXCodeLoader.m
-[AXCodeLoader initWithImageMonitor:]
Unknown platform
AXCodeLoader
Must use designated initializer initWithImageMonitor:
B16@?0@"AXCodeItem"8
v40@?0@"AXCodeItem"8@"NSBundle"16@"NSError"24@?<v@?>32
v32@?0q8Q16@?<v@?>24
v24@?0@"AXCodeItem"8@"AXCodeItem"16
v24@?0@"AXCodeItem"8^B16
mainbundles.axbundlemap
tvbundles.axbundlemap
mossdeepbundles.axbundlemap
B24@?0@"AXCodeItem"8^B16
@16@?0@"AXCodeItem"8
q24@?0@"AXCodeItem"8@"AXCodeItem"16
AXBundleLoadQueue
v32@?0@"AXCodeItem"8@"NSBundle"16@"NSError"24
B24@?0@"NSBundle"8^B16
@16@?0@"NSBundle"8
%@%@.%@ <%p> %@
AX-BUNDLE 
[LOADED]
type
%@ [%f %f %f]
AXTrampoline:<%p>. caller:%@ target:%@
No method signature to act on. Ignoring this invocation
An IMP could not be found for the invocation with selector:%@. caller:%@ target:%@
A methodSignature could not be found for selector:%@, on caller:%@. You probably should not be trampolining this method
AXCarouselServerShowHearingControlsNotification
v16@?0r^{CGPathElement=i^{CGPoint}}8
v44@?0i8^{CGPoint=dd}12Q20Q28^B36
MoveToPoint
AddLineToPoint
AddQuadCurveToPoint
AddCurveToPoint
CloseSubpath
Unhandled path element type
%f, %f
elementTypes
singlePoints
doublePoints
triplePoints
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/CGPath+AXExtensions.m
-[AXPathWrapper initWithCoder:]
Out of bounds access to <AXCArrayRef: %p>; number of elements in the array: %lu; index: %ld
Wired Headphones
route: %{public}@, ports: %{public}@
portUID
channelNumber
compare: %{public}@[%{public}@] - result %{public}@
saved channels %{public}@: 
returnedChannels channels %{public}@
ChannelLayout_Left
ChannelLayout_Right
ChannelLayout_Center
ChannelLayout_LeftCenter
ChannelLayout_RightCenter
ChannelLayout_RearLeft
ChannelLayout_RearRight
%d - Unknown channel name - file a bug
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXOrator.m
void AXAssertMainThreadCallback()
We should have been called back on the main thread!
AXOratorErrorDomain
QuickSpeak.bundle
quickspeak.sample.message
QuickSpeak
-[AXOrator _respeakUtteranceIfNeeded]
We said we enqueued the last speech sequence item, but there were no speech sequence items
v32@?0@8Q16^B24
Fast forwarding...
Rewind...
-[AXOrator _skipByUnit:boundary:]
We shouldn't even have been able to set the speaking content to something that would have no tokens, as we check length in startSpeaking
Could not find token for currently speaking range %@, token ranges %@
fast forwarding
rewinding
fast forward
rewind
-[AXOrator speechSynthesizer:willSpeakRangeOfSpeechString:utterance:]
Somehow the synthesizer was able to speak range %@ that was outside of what we had last tracked to be the entire utterance's range (%@).
AXApp<%p>: PID:%@ BundleID:%@ Primary:%@ FullScrModal:%@
bundleID
layoutRole
eQd5mlz0BN0amTp/2ccMoA
cBy4BcYs5YWtFHbBpt4C6A
JwLB44/jEB8aFDpXQ16Tuw
8olRm6C1xqr7AJGpLRnpSw
assistant
ringer-switch
yhHcB0iH0d1XzPO/CFd3ow
PencilAndPaper
SystemNoteTaking
main-screen-class
screen-dimensions
main-screen-pitch
main-screen-width
main-screen-height
device-name-localized
ipad
arm64
main-screen-scale
PKPassLibrary
Class getPKPassLibraryClass(void)_block_invoke
AXDevice.m
void *PassKitCoreLibrary(void)
/System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
/System/Library/PrivateFrameworks/PassKitCore.framework/Contents/MacOS/PassKitCore
%@_%@
IPAD
IPOD
IPHONE
_IPHONE
_IPAD
_IPOD
_NHB
GeneralAccessibility
SwitchControl
-iOS
ATV~appletv
@"NSString"24@?0@"NSString"8Q16
CURSOR_COLOR_DEFAULT
CURSOR_COLOR_BLUE
CURSOR_COLOR_GRAY
CURSOR_COLOR_WHITE
CURSOR_COLOR_GREEN
CURSOR_COLOR_YELLOW
CURSOR_COLOR_RED
CURSOR_COLOR_ORANGE
did not recognize cursor color: %@
search.rotor.typing.mode
search.rotor.slide.to.type
search.rotor.textselection
search.rotor.character
search.rotor.word
search.rotor.line
search.rotor.header
search.rotor.link
search.rotor.formelement
search.rotor.visitedlink
search.rotor.nonvisitedlink
search.rotor.image
search.rotor.statictext
search.rotor.zoom
search.rotor.table
search.rotor.list
search.rotor.landmark
search.rotor.article
search.rotor.button
search.rotor.textfield
search.rotor.searchfield
search.rotor.same
search.rotor.allitems
search.rotor.hints
search.rotor.rate
search.rotor.punctuation
search.rotor.sounds
search.rotor.volume
search.rotor.audio.ducking
search.rotor.handwriting
search.rotor.braille.gesture
search.rotor.container
search.rotor.vertical.navigation
search.rotor.navigation.direction
search.rotor.languages
search.rotor.braille.languages
search.rotor.auto.advance.speed
search.rotor.audio.destination
search.rotor.activities
search.rotor.exploration.mode
search.rotor.image.descriptions
search.rotor.tv.silence.announcements
search.rotor.tv.speak.nonfocusable.elements.after.delay
search.rotor.tv.explore.focus.affects.native.focus
/System/Library/CoreServices/VoiceOverTouch.app
VOTLocalizedStrings
%@.settings
%@.visual
VOTLocalizedStringsATV~appletv
described.media.none
described.media.speech
described.media.braille
described.media.speech.and.braille
VOTOutputPunctuation
UnicodeHex.
UnicodeHex.Math.
strings
stringsdict
%@%08x
%@%04x
Missing a localized version for the following Unicode Character (UnicodeHex.%x)
v20@?0q8S16
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXLocalization.m
UTF32Char AXUnicodeCodePointForCharacterString(NSString *__strong)
Unicode only supports up to 32 bits per code point AFAIK
AXAirPods-B494
SCRCPunctuationVerboseness
Class getSCRCPunctuationVerbosenessClass(void)_block_invoke
AXLocalization.m
void *ScreenReaderCoreLibrary(void)
/System/Library/PrivateFrameworks/ScreenReaderCore.framework/ScreenReaderCore
/System/Library/PrivateFrameworks/ScreenReaderCore.framework/Contents/MacOS/ScreenReaderCore
_AXDyldImageMonitor
__AXStringForVariablesSentinel
DISTANCE_DESCRIPTION
ARDescriptionFormatting
VISIBILITY_PERCENTAGE
COVERAGE_PERCENTAGE
langMap
 AltLangs:
AXLang <%p>. LangID:%@%@ western:%@ ambiguous:%@
Dialects:
Preferred Dialect:%@
SwitchRegistrar will begin filtering events
SwitchRegistrar will end filtering events
v24@?0@"AXSwitch"8^B16
PrimaryUsagePage
Could not create event system client
Could not open HID manager: %d
AXEventRegistrar
v40@?0@"AXMIDIEvent"8@"AXMIDIDevice"16@"AXMIDIDeviceEntity"24@"AXMIDIDeviceEntityEndpoint"32
Matched MFi device: %@
Could not open MFi device: %d
AccessibilityUnitTestingException
CenterTap
RightToLeftSwipe
LeftToRightSwipe
HoldAtPoint
Gesture
Exit
Select
TurnPages
TapPoint
HoldPoint
Action
LongPressAction
LongPressGesture
HoldPointX
HoldPointY
Optional
SwitchUUID
SwitchOriginalAction
Mappings
Timeout
Name
UnlocalizedName
UUID
MenuIconIdentifier
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXSwitchRecipe.m
+[AXSwitchRecipeMapping recipeMappingWithDictionaryRepresentation:]
Should always have encoded both x and y for hold point, but had %@, %@
Every switch recipe mapping must have an associated switch original action (in case we can't find a switch with a matching UUID.)
-[AXSwitchRecipeMapping dictionaryRepresentation]
Every switch recipe mapping must have an action.
Every switch recipe gesture mapping must have a gesture dictionary.
Every swipe recipe long press point mapping must have a point to press.
Action: %@
Gesture: %@
Switch UUID: %@
Switch Original Action: %@
-[AXSwitchRecipe dictionaryRepresentation]
Every switch recipe needs a UUID so it can be referenced.
Name: %@
UUID: %@
Mappings: %@
Timeout: %@
Hant-
Hans-
%@AXDialect <%p>. Voice:%@. LocaleID:%@ LangID:%@
hanjaToHangul
plist
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXDialectMap.m
-[AXDialectMap _stringByTransliterationHanjaToHangul:]
Hanja to hangul transliteration tabler should only contain equal length mappings
AXDialectMap.m
collation
NSString *_icuDisplayName(const ULocaleDisplayNames *, NSString *__strong, NSString *__strong)
Unsupported key type %@
%@ (%@)
System/Library/PreferenceBundles/AccessibilitySettings.bundle
RegionNamesNonLocalized
~!@#*$%&+|=(){}[]<>,./?;:'_-"\
DNTTerms
\pause=350\ 
AXLanguageManager:<%p>. %lu lang maps
    USER-PREF %@
    %@
system Lang dialect: %@
system current locale dialect: %@
system current region dialect: %@
Dialect for system language was nil!
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXLanguageManager.m
-[AXLanguageManager dialectForLanguageID:]
LanguageID was nil!
B32@?0@"AXDialectMap"8Q16^B24
B16@?0@"AXDialectMap"8
en-US
UIKeyboardInputModeController
sharedInputModeController
enabledInputModeIdentifiers
SynthesizerLanguageMap
languageMaps
languageID
alternateLanguageIDs
ambiguousWithLanguages
isAmbiguous
isWestern
isRTL
localeLanguageMaps
localeID
voiceName
speakableCharacterRanges
supplementaryCharacterRanges
secondaryLanguageRange
AccessibilityLanguages
Languages
locale
localName
currentName
supportedBySystem
supportedByVoiceOver
nb-NO
id-MS
TVSInternationalization
Class getTVSInternationalizationClass(void)_block_invoke
AXLanguageManager.m
void *TVServicesLibrary(void)
/System/Library/Frameworks/TVServices.framework/TVServices
/System/Library/Frameworks/TVServices.framework/Contents/MacOS/TVServices
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXLanguageTaggedContent.m
-[AXLanguageTag contentSubstring]
The range of the tagged chunk is greater than the content. Something went awry %@
AXTaggedContent:<%p>. tags:
zh-Hans
zh-Hant
B32@?0@"NSTextCheckingResult"8Q16^B24
v40@?0{?={?=qq}Q}8^B32
-[AXLanguageTaggedContent _addLanguageTagForCurrentChunk]
The current chunk is too long, we are out of bounds. Our bookkeeping got out of sync somewhere. Please file a radar with the exact text you tried to speak.
v40@?0^{__EmojiTokenWrapper=}8{?=qq}16^B32
-[AXLanguageTaggedContent _addTag]
Why was current dialects nil?
Null
Touched
Moved
Chord Changed
Lifted
Canceled
In Range
In Range Lift
Update to previous event
Just an empty hand event
keyCode
usagePage
keyDown
unmodifiedInput
modifiedInput
shiftModifiedInput
backupUnmodifiedInput
backupModifiedInput
backupShiftModifiedInput
modifierState
gsModifierState
alternativeKeyCode
keyCode:%hu usagePage:%u down:%u modState:%u unmodIn:%@ modIn:%@ shftIn:%@
UIKeyboardImpl
sharedInstance
setInputModeFromPreferences
Class getUIKeyboardInputModeControllerClass(void)_block_invoke
AXEventKeyInfoRepresentation.m
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXEventRepresentation.m
-[AXEventRepresentation pathIndexMask]
Can't get path index masks from non-digitizer events!
+[AXEventRepresentation _digitizerRepresentation:hidStreamIdentifier:]
This hand event has a null hand info.. problems will ensue: %@
touch: %ld initial %ld inRange: %d
Could not create AX Event from HID Event:
%{public}@
Stream ID:%{public}@
originalType
subtype
windowLocation
window
flags
isRedirectEvent
isSystemDrag
handInfo
keyInfo
gameInfo
pointerInfo
accelerometerInfo
data
iosmacPointerInfo
clientId
taskPort
HIDTime
HIDAttributeData
additionalFlags
displayId
HIDSenderId
isBuiltIn
isDisplayIntegrated
generationCount
isGeneratedEvent
scrollAmount
scrollAccelAmount
auxiliaryData
%@<%p>
  Type:             %u (orig:%u)
  Subtype:          %d
  Location:         x:%f y:%f
  Window Location:  x:%f y:%f
  Window:           %p
  Flags:            %d
  PID:              %d
  Time:             %llu
  HIDTime:          %llu
  Data:             %@
  Task Port:        %d
  client ID:        %@
  context ID:       %u
%@. type:%u subtype:%d loc:[x:%f y:%f] windowLoc:[x:%f y:%f] window:%p flags:%d pid:%d time:%llu HIDTime:%llu taskPort:%d client:%@ ctxtID:%u sender:%@ data:[%lu bytes]
AXData: %@
Hand Info: %@
Key Info: %@
AccessibilityPhysicalInteraction
ZoomWindow
Automation
Unknown (ID:0x%04llx)
-[AXEventRepresentation _applyAccessibilityDataToRealEvent:]
Unexpectedly received accessibility event. Should have received real event
Real event already has accessibility data applied. It is an error to apply new data
No data found on ax event
LEDFlashOnRingerSwitchSilent
LimitDisplayRefreshRate
SpeakMedicalPreamble
TTYMedicalPreamble
SOSMedicalPreamble
LocCaptionShowFilePath
LocCaptionShowUSString
LocCaptionShowLocalizedString
AssistiveTouchAlwaysShowMenu
AssistiveTouchOpenMenuSwaggle
AssistiveTouchMouseKeys
AssistiveTouchMouseKeysOptionToggle
AssistiveTouchMouseKeysUseMainKeyboardKeys
AssistiveTouchMouseKeysDelay
AssistiveTouchMouseAlwaysShowSoftwareKeyboard
AssistiveTouchMouseAllowAppleBluetoothDevicesPairing
AssistiveTouchMouseKeysMaxSpeed
AssistiveTouchSpeed
AssistiveTouchCustomGestures
AssistiveTouchRecentGestures
AssistiveTouchSavedGestures
AssistiveTouchScanningModePreference
AssistiveTouchPreferredPointPickerPreference
AssistiveTouchScanShouldGroupElements
AssistiveTouchScanShouldUseCompactMenu
AssistiveTouchScannerMenuLabelsEnabled
AssistiveTouchStepInterval
AssistiveTouchScanCyclesPreference
AssistiveTouchScannerScanTimeout
AssistiveTouchScannerScanTimeoutEnabled
AssistiveTouchScannerSoundEnabled
AssistiveTouchScannerSpeechEnabled
AssistiveTouchScannerSpeechRatePreference
AssistiveTouchSwitchesPreference
AssistiveTouchCursorHighVisibilityPreference
AssistiveTouchSpeechInterruptedByScanningPreference
AssistiveTouchSpeechShouldSpeakTraitsPreference
AssistiveTouchInputCoalescingDurationPreference
AssistiveTouchInputCoalescingEnabledPreference
AssistiveTouchInputHoldDurationPreference
AssistiveTouchLongPressDurationPreference
AssistiveTouchInputHoldEnabledPreference
AssistiveTouchLongPressDurationEnabledPreference
AssistiveTouchLongPressPauseScanningEnabledPreference
AssistiveTouchDelayAfterInputPreference
AssistiveTouchDelayAfterInputEnabledPreference
AssistiveTouchAxisSweepSpeed
AssistiveTouchAutoAddedTCItem
AssistiveTouchActionRepeatIntervalPreference
AssistiveTouchActionRepeatEnabledPreference
AssistiveTouchCursorColorPreference
AssistiveTouchMousePointerColorPreference
AssistiveTouchMousePointerSizeMultiplierPreference
AssistiveTouchMousePointerTimeoutEnabledPreference
AssistiveTouchMousePointerTimeoutPreference
AssistiveTouchMouseDwellControlEnabledPreference
AssistiveTouchMouseDwellControlAutorevertEnabledPreference
AssistiveTouchMouseDwellControlAutorevertActionPreference
AssistiveTouchMouseDwellControlActivationTimeoutPreference
AssistiveTouchMouseDwellControlMovementToleranceRadiusPreference
kAXSAssistiveTouchMouseDwellControlCornerCustomizationPreference
AXSAssistiveTouchMouseDwellControlMutatedMenuPreference
AssistiveTouchMouseDwellControlShowPromptPreference
AssistiveTouchMouseZoomPanningStylePreference
AssistiveTouchHeadMovementSensitivityPreference
AXSAssistiveTouchSwitchUsageConfirmedPreference
AssistiveTouchPointPickerDefaultsToRescanPreference
AXSAssistiveTouchOrbPreference
AXSAssistiveTouchSingleTapAction
AXSAssistiveTouchDoubleTapAction
AXSAssistiveTouchLongPressAction
AXSAssistiveTouchLongPressActionDuration
AXSAssistiveTouchDoubleTapActionTimeout
AXSAssistiveTouchMouseCustomizedClickActionsPreference
AXSAssistiveTouchMainScreenCustomizationPreference
AXSAssistiveTouchIdleOpacityPreference
AXSAssitiveTouchGameControllerPreference
SCRecipes
SCLaunchRecipeUUID
SCTopLevelMenuItems
SCGesturesTopLevelMenuItems
SCDeviceTopLevelMenuItems
SCSettingsTopLevelMenuItems
SCMediaControlsTopLevelMenuItems
SCShouldUseShortFirstPage
SCGesturesMenuItems
SCDeviceMenuItems
SCSettingsMenuItems
SCMediaControlsMenuItems
SCScanningStyle
SCDwellTime
SCTapBehaviorPreference
AssistiveTouchScannerSelectTimeout
SCShouldAlwaysActivateKeyboardKeys
SCIsEnabledAsReceiver
SCScanAfterTapLocation
SCRestartScanningAtCurrentKey
SCShouldDisallowUSBRestrictedMode
SCUserDidReadUSBRestrictedModeAlert
SCSwitchControlPointPickerSelectionStyle
AXSAssistiveTouchScannerMenuIncludeHomeItem
AXSAssistiveTouchScannerMenuIncludeScrollItem
AXSAssistiveTouchScannerMenuIncludeDeviceItem
AXSAssistiveTouchScannerMenuIncludeGesturesItem
AXSAssistiveTouchScannerMenuIncludeSettingsItem
AssistiveTouchAutoScanningEnabled
AssistiveTouchScannerSelectTimeoutEnabled
VoiceOverTouchPitchCompactVoice
SCSwitchControlPointPickerHighPrecisionEnabled
ZoomPreferencesWereInitialized
ZoomWindowFrame
DockSize
ZoomScale
ZoomPanOffset
ZoomSlugPosition
ZoomCurrentLensEffect
ZoomCurrentLensMode
ZoomInStandby
ZoomShowedBanner
ZoomShouldFollowFocus
ZoomShouldShowSlug
ZoomPeekZoomEnabled
ZoomPeekZoomEverEnabled
ZoomSlugSingleTapAction
ZoomSlugDoubleTapAction
ZoomSlugTripleTapAction
ZoomSlugTapAndSlideToAdjustZoomLevel
ZoomAlwaysUseWindowZoomForTyping
ZoomPreferredLensMode
ZoomPreferredDockPosition
ZoomPreferredMaximumZoomScale
ZoomPreferredLensModes
ZoomPreferredDockPositions
ZoomIdleSlugOpacity
ZoomControllerColorPreference
ZoomAudioDestination
ZoomShouldAllowFullscreenAutopanning
ZoomShouldUseKeyboardShortcutsPreference
ZoomAdjustZoomLevelKeyboardShortcutEnabledPreference
ZoomToggleZoomKeyboardShortcutEnabledPreference
ZoomPanZoomKeyboardShortcutEnabledPreference
ZoomResizeZoomWindowKeyboardShortcutEnabledPreference
ZoomSwitchZoomModeKeyboardShortcutEnabledPreference
ZoomTempToggleZoomKeyboardShortcutEnabledPreference
ZoomScrollWheelKeyboardShortcutEnabledPreference
ZoomAutopannerShouldPanWithAccelerationPreference
ZoomDebugDisableZoomLensScaleTransform
ZoomDebugShowExternalFocusRectPreference
GuidedAccessUsageCount
kAXSGuidedAccessAXFeaturesEnabled
GuidedAccessAllowsUnlockWithTouchID
GuidedAccessToneIdentifierForTimeRestrictionEvent
GuidedAccessSpeakForTimeRestrictionEvent
kAXSGuidedAccessOverrideIdleTimePreference
GuidedAccessAutoLockTimeInSeconds
GAXInternalSettingUserAppProfile
GAXInternalSettingUserGlobalProfile
GAXGlobalProfileSavedAXFeatures
GAXGlobalProfileSavedAXTripleClickOptions
GAXGlobalProfileUserConfiguredAppIds
GAXGlobalProfileActiveAppOrientation
GAXGlobalProfileActiveAppID
GAXInternalSettingTimeRestrictionHasExpired
AXGAXInternalSettingIsActiveAppSelfLocked
GAXGlobalProfileSystemDidRestartDueToLowBattery
GAXGlobalProfileECID
GAXGlobalProfileProductBuildVersion
GAXGlobalProfileLastActivationDate
GAXGlobalProfileLastPasscodeSetDate
AssistiveTouchCameraSwitchPreviewEnabledPreference
AssistiveTouchInternalOnlyHiddenNubbitModeEnabledPreference
AssistiveTouchInternalOnlyPearlTrackingEnabledPreference
FullKeyboardAccessShouldShowDebugKeyCommandsViewPreference
InternalLoggingColorThemePreference
ValidateSecondPartyApps
IncludeBacktraceInLogs
IgnoreAXAsserts
IgnoreAXServerEntitlements
LogAXNotificationPosting
UseNewAXBundleLoader
shouldPerformValidationsAtRuntime
InternalEnableVOHearingAidRouting
InternalSkipHearingAidMFiAuth
InternalEnableHearingAidReporter
AXSInternalGuidedAccessDisallowDirectInactiveToActiveTransition
AXSInternalGuidedAccessOverrideTimeRestrictionDuration
AXSInternalGuidedAccessEnableExperimentalUI
SpeakCorrectionsEnabled
AXSTripleClickUserOrderedPreference
LetterFeedbackEnabled
PhoneticFeedbackEnabled
QuickTypeWordFeedback
WordFeedbackEnabled
CharacterFeedbackDelayPreference
ShowSpeechController
SpeechControllerIdleOpacity
SpeechControllerLongPressAction
SpeechControllerDoubleTapAction
QuickSpeakRate
QuickSpeakLanguageSpeakingRate
QuickSpeakHighlightChoice
AXSQuickSpeakWordHighlightColorPreference
AXSQuickSpeakSentenceHighlightColorPreference
QuickSpeakUnderlineSentence
QuickSpeakVolume
QuickSpeakSentenceHighlight
QuickSpeakNubbitNormalizedPosition
SpeechVoiceIdentifierForLanguage
UserDidSelectVoiceForLanguage
CustomPronunciationSubstitutions
SiriAutoUpdateListInitializedPreference
AXSVoiceOverSpeaksOverTelephoneCalls
com.apple.voiceovertouch.cursors.style
VoiceOverTouchHelpModePreference
NavigateImagesPreference
VoiceOverTouchPhoneticsEnabledPreference
VoiceOverTouchTypingHardwareFeedback
VoiceOverTouchTypingFeedback
VoiceOverTouchTypingBrailleGesturesFeedback
VoiceOverTouchHintsEnabled
VoiceOverTouchAudioDuckingEnabled
VoiceOverSelectedLanguage
VoiceOverAudioFollowsHDMIAudio
VoiceOverTouchPitchChangePreference
VoiceOverPitchPreference
VoiceOverUseSoundEffects
VoiceOverLanguageDetectionEnabled
VoiceOverHapticsEnabled
VoiceOverSoundVolume
VoiceOverAdjustSoundVolumeIndependently
VoiceOverHapticIntensity
VoiceOverVerbosityEmojiSuffixEnabledPreference
VoiceOverVerbosityEmojiFeedbackPreference
SpeakingRateInRotorEnabled
SpeakNotificationInLockScreen
VoiceOverTouchRotorItemsPreference
VoiceOverEditAppsActionEnabledPreference
VoiceOverSpeakActionConfirmationPreference
voiceOverBrailleTableIdentifier
voiceOverAlwaysUseNemethCodeForMathEnabled
VoiceOverLanguageSpeakingRate
VoiceOverHandwritingWasNativeAutocorrectEnabled
VOActivationWorkaround
VoiceOverShowSWKeyboardWithBraille
VoiceOverShowGrade2AutoTranslate
VoiceOverOutputToHearingAid
AXSVoiceOverTouchBraillePanningAutoTurnsReadingContent
AXSVoiceOverTouchSingleLetterQuickNavPreference
VoiceOverQuickNavAnnouncementFeedback
AXSVoiceOverSpeakTableColumnRowInformationPreference
AXSVoiceOverSpeakTableHeadersPreference
AXSVoiceOverCapitalLetterFeedbackPreference
AXSVoiceOverDeletionFeedbackPreference
AXSVoiceOverLinkFeedbackPreference
AXSVoiceOverActionsFeedbackPreference
AXSVoiceOverContainerOutputFeedbackPreference
AXSVoiceOverMoreContentOutputFeedbackPreference
VoiceOverDiscoveredSensitiveContentFeedback
AXSVoiceOverPunctuationLevelPreference
AXSVoiceOverPunctuationGroupPreference
AXSVoiceOverDefaultPunctuationGroupPreference
AXSVoiceOverTouchBrailleDisplayInputMode
AXSVoiceOverTouchBrailleDisplayOutputMode
AXSVoiceOverTouchBrailleGesturesInputMode
VoiceOverCaptionPanelEnabled
VoiceOverPronunciationCloudKitSyncingEnabled
VoiceOverBrailleGesturesShouldUseLockedConfiguration
VoiceOverBrailleGesturesLockedOrientation
VoiceOverBrailleGesturesLockedTypingMode
VoiceOverBrailleGesturesDidPlayCalibrationHint
VoiceOverBrailleDisplayAlertDuration
AXSVoiceOverBrailleAlertsEnabled
VoiceOverBrailleKeyDebounceTimeout
VoiceOverBrailleWordWrapEnabled
VoiceOverBrailleAutoAdvanceDuration
AXSVoiceOverTouchShouldReverseDots
AXSVoiceOverTouchBrailleShowTextStyleStatus
AXSVoiceOverTouchBrailleShowGeneralStatus
AXSVoiceOverTouchUpdateBrailleWithoutConnectedDisplay
AXSVoiceOverTouchBraillePreferredTableIdentifiers
AXSVoiceOverShouldSpeakDiscoveredTextPreference
AXSVoiceOverSpeakDiscoveredTextFeedbackPreference
AXSVoiceOverAutomaticButtonLabelsPreference
VoiceOverSoundsAndHaptics
VoiceOverDoubleTapInterval
VoiceOverNavigationDirectionMode
AXSVoiceOverKeyboardModifierChoicePreference
AXSVoiceOverKeyboardContinuousPathStartTimeoutPreference
AXSVoiceOverActivitiesPreference
AXSVoiceOverSelectedActivityPreference
AXSVoiceOverUseTVToggleStyleNavigation
AXSVoiceOverContentDescriptionLevel
AXSVoiceOverNumberFeedback
AXSImageCaptioningDisabledApps
AXSSceneDescriptions
AXSVoiceOverDirectTouchEnabledApps
TapToSpeakTimeEnabled
TapToSpeakTimeAvailability
VoiceOverTapticTimeMode
VoiceOverTapticTimeEncoding
VoiceOverTapticTimeSpeed
VoiceOverTapticChimesEnabled
VoiceOverTapticChimesAvailability
VoiceOverTapticChimesFrequencyEncoding
VoiceOverTapticChimesSoundType
TapticTimeInternalFlashScreenEnabled
VoiceOverUseActiveSiriVoice
VoiceOverUseDigitalCrownNavigation
AXSVoiceOverWatchBrailleInputMode
AXSVoiceOverWatchGrade2AutoTranslate
AXSVoiceOverWatchBrailleOutputMode
AXSVoiceOverWatchBrailleWordWrap
AXSVoiceOverWatchBrailleAlertDisplayDuration
AXSVoiceOverWatchBrailleTableIdentifier
VoiceOverTouchImageCaptionsEnabled
VisionEngineCaptureDiagnosticsToDisk
VoiceOverSpeakNonfocusableElementsAfterDelay
VoiceOverSilenceAnnouncements
VoiceOverTouchTVInteractionMode
VoiceOverTouchTVPrefersFollowFocusNavigationStyle
VoiceOverExploreFocusAffectsNativeFocus
VoiceOverTouchDescribedMedia
VoiceOverCustomCammndProfile
VoiceOverShouldDisallowUSBRestrictedMode
VoiceOverUserDidReadUSBRestrictedModeAlert
HearingAidEarIndependencePreference
HearingAidControlAvailableOnLockScreen
HearingAidStreamToLeft
HearingAidStreamToRight
LeftRightBalanceEnabled
LeftRightBalanceValue
AXSAlexLocalAssetURL
AllAvailableVoicesPreference
AXSExtantVoicesPreference
AXSDataMigratorRequestedVoiceCacheRefresh
AXSAudioHardwareChannelLayoutsPreference
AXSUltronRunningStatus
AXSUltronEnabled
AXSEnabledSoundDetectionState
AXSEnabledSoundDetectionTypes
AXSSoundDetectionSnoozeDictionary
AXSSoundDetectionSupportedTypes
GizmoApplicationAccessibilityEnabled
GizmoAutoSpeakComplicationsPreference
VoiceOverSpeakSecondsEncoding
StickyKeysEnabled
StickyKeysShiftToggleEnabled
StickyKeysBeepEnabled
MagnifierEnabled
MagnifierShouldAdjustFiltersForAmbientLight
MagnifierShouldUseVideoStabilization
MagnifierLiveZoomLevel
MagnifierFilterSetIdentifier
MagnifierFilterInverted
MagnifierContrast
MagnifierBrightness
AXSAppValidatingTestingPreference
kAXSupportsAdvancedDisplayFiltersPreference
AXSClassicInvertColorsPreference
CommandMapData
FocusRingTimeout
FocusRingTimeoutEnabled
FullKeyboardAccessLargeFocusRingEnabled
FullKeyboardAccessFocusRingHighContrastEnabled
FullKeyboardAccessFocusRingColor
ShouldShowTextEditingModeInstructions
lastAssistiveTouchTimeResetCount
assistiveTouchUsageCount
magnifierUsageCount
tapticTimeUsageCount
switchControlPlatformSwitchedCount
voiceOverBSIUsageCount
brokenHomeButtonCount
guidedAccessTimeLimitsUsageCount
characterVoicesUsageCount
hearingAidControlPanelCount
hearingAidHandOffCount
lastPlatformSwitchTimeResetCount
lastCharacterVoiceTimeResetCount
lastMagnifierResetCount
lastHearingAidHandoffTimeResetCount
lastHearingAidControlPanelTimeResetCount
lastTapticTimeResetCount
lastBrailleScreenInputTimeResetCount
lastGuidedAccessTimeLimitResetCount
lastGuidedAccessTimeResetCount
AXSLastSmartInvertColorsEnablement
AXSDidTriggerSOSToday
CallAudioRoutingAutoAnswerPreference
CallAudioRoutingAutoAnswerEnabledPreference
AssistiveTouchScannerPrefersCompactForLanguagePreference
AssistiveTouchScannerAlternativeVoiceForLanguagePreference
AXSAssistiveTouchDefaultDialectPreference
QuickSpeakPrefersCompactForLanguage
QuickSpeakAlternativeVoiceForLanguage
AXSVoiceOverAlternativeVoicesPreference
AXSVoiceOverCompactVoicePreference
com.apple.voiceovertouch.default.dialect
AXSDidResetD22Preferences
TouchAccommodationsEnabledPreference
TouchAccommodationsUsageConfirmedPreference
AXSTouchAccommodationsTripleClickConfirmedPreference
TouchAccommodationsHoldDurationEnabledPreference
TouchAccommodationsHoldDurationPreference
TouchAccommodationsAllowsSwipeGesturesToBypassPreference
TouchAccommodationsHoldDurationSwipeGestureMinimumDistancePreference
TouchAccommodationsIgnoreRepeatEnabledPreference
TouchAccommodationsIgnoreRepeatDurationPreference
TouchAccommodationsTapActivationMethodPreference
TouchAccommodationsTapActivationTimeOutPreference
TouchAccommodationsHoldDurationSwipeGestureSensitivityPreference
TouchAccommodationsHoldDurationAllowsSwipeGesturesToBypassPreference
guidedAccessUsageCount
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXSettings.m
-[AXSettings _domainForPreferenceKey:]_block_invoke
Can not locate domain associated with %@ preference key in PreferenceKeyToDomainMap
-[AXSettings preferenceKeyForSelector:]_block_invoke
Can not locate preference key associated with %@ selector in SelectorToPreferenceKeyMap
-[AXSettings _domainNameForDomain:]
No domain name for domain: %d
-[AXSettings _gesturesForPreferenceKeyMigratingIfNecessary:]
Unexpected format for legacy gesture: %@
Unexpected format for gestures: %@
SwitchControlDefaultRecipes
B32@?0@"NSDictionary"8Q16^B24
Zoomed
ZoomLevel
B32@?0@"AXVoiceOverActivity"8Q16^B24
00000000-0000-0000-0000-000000000001
VO_ACTIVITY_PROGRAMMING
AXSettings: Exception was thrown during secure decoding of voiceOverActivities. %@
AVSpeechSynthesisVoice
AXSettings: Exception was thrown during secure decoding of allAvailableVoices. Falling back to secure unarchiving.
Exception: %@
Voices: %@
-[AXSettings setVoiceOverKeyboardModifierChoice:]
We tried to set something invalid
AppleLanguages
zh-HK
zh-TW
zh-CN
RotorItem
Enabled
v32@?0@"NSDictionary"8Q16^B24
en_CA
soundEnabled
hapticEnabled
SBIconVisibility
com.apple.springboard.appIconVisibilityPreferencesChanged
com.apple.scrod.braille.table.duxbury.eng-xueb
com.apple.scrod.braille.table.duxbury.eng-xna
com.apple.scrod.braille.table.duxbury.eng-xuk00
SpeechRate
Volume
Handwriting
BrailleGesture
Hints
AudioDucking
TextSelection
Character
Word
Line
Header
Link
FormElement
TableStart
ListStart
VisitedLink
NonVisitedLink
Same
Image
StaticText
Landmarks
Button
TextField
SearchField
Containers
VerticalNavigation
Punctuation
Sounds
TypingMode
ContinuousPath
NavigationDirection
Language
BrailleLanguage
BrailleAutoAdvance
Article
AudioDestination
Activities
ImageDescriptions
DirectTouchMode
SilenceTVAnnouncements
SpeakNonfocusableElementsAfterDelay
ExploreFocusAffectsNativeFocus
kTopLeftHotCorner
kTopRightHotCorner
kBottomLeftHotCorner
kBottomRightHotCorner
IncrementDecrement
ElementSpecificActions
Scroll
Home
SideApp
Gestures
Edit
Escape
RefineSelection
NavigationMode
Device
Settings
MediaControls
Recipes
ItemMenu
LockItemMenu
ToggleDictation
SiriShortcuts
Multitasking
NotificationCenter
ControlCenter
LockScreen
RotateScreen
Mute
VolumeUpDown
SpotlightSearch
SiriVoiceControl
TripleClick
Shake
Screenshot
IncreaseDecreaseZoom
SpeakScreen
InterDevice
Sysdiagnose
RebootDevice
Dock
ApplePay
Flick
Pinch
TapAndHold
Drag
HoldAndDrag
DoubleTap
Freehand
Fingers
Saved
ForceTouch
SpeedUpDown
MoveMenu
SpeechOnOff
SoundOnOff
GroupsOnOff
PlayPause
PreviousTrack
NextTrack
SkipForward
SkipBackward
Rewind
FastForward
ATVRemoteMenu
Type
None
BlackAndWhite
BlackAndWhiteInverted
HueAdjust
LowLight
Window
Docked
Fullscreen
Left
Right
Bottom
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/NSArray+AXExtensions.m
-[NSArray(AXExtensions) axMapObjectsUsingBlock:]_block_invoke
Result was nil in mapping block!
NSArray
%@, Alternative Voice Identifier: %@
siri.male
siri.female
compact
siri.and.type
%@_%@_%@
premium
Received 0 packets
Received 0-length packet
Expected packet to be %@ bytes, was actually %@ bytes. type: %@
AXCodeItemAccess
executable
assistantUIBundle
siriUIBundle
siriUIPresentationBundle
uibundle
qldisplay
fpenroll
servicebundle
lockbundle
XPCServices
wkbundle
healthplugin
AXCodeItem<%p> [Rank:%u] %@ [AXBundle name:%@] [Platforms and Targets:%@ %@]
AXCodeItem<%p> [type:%@ name:%@] %@
<Uninitialized>
SpringBoard
Carousel
PineBoard
AXLoading
Code item path was empty
URL does not exist: %@
URL is not a directory as expected: %@
Could not create bundle from URL: %@
dlopen strategy not inplemented
Uninitialized
Dylib
Framework
Executable
App Extension
AssistantUIBundle
SiriUIBundle
SiriUIPresentationBundle
SpringBoardBundle
QuickLookBunle
FPenroll
AXBundle
LockBundle
XPC Service
WebKit bundle
ServiceBundle
Health Plugin
Unexpected!
AXGeneric
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXLoggingSubsystem.m
+[AXLoggingSubsystem willLog]
Should not be relying on this anymore. Logging is always enabled.
AllEvents
Version
ArePointsDeviceRelative
IsLeftToRightSwipe
HasLocalizableName
ShouldPerformAtOriginalLocation
Time
Forces
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXReplayableGesture.m
-[AXReplayableGesture pointForFingerIdentifier:atEventIndex:]
Should not have asked for the point for a finger identifier (%@) that did not exist at this event index (%lu)
 - device relative: %i, data: %@
-[AXMutableReplayableGesture addPointsByFingerIdentifier:forces:atTime:]
Pass in empty dictionaries, not nil, to signify that no fingers are touched down.
-[AXNamedReplayableGesture gestureShiftedByOffset:]
Shifting device relative gestures is not yet supported.
Points
Times
IsDoubleTap
+[AXNamedReplayableGesture gestureWithLegacyFormatDictionary:]
Double taps should always have been created using the gesture factory.
v32@?0@"NSArray"8Q16^B24
indexes
values
v32@?0@"NSNumber"8Q16^B24
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AXIndexMap.m
-[AXIndexMap encodeWithCoder:]
nil value for an index returned from _createIndexesWithSize, this should never happen
AXIndexMap:
%lu (0x%lx) -> %@
items
loadOrder
platforms
tvOS
watchOS
iosmac
AXLoader
Could not load ax bundle map: %@
Could not decode ax bundle map JSON: %@
Could not load ax bundle map: Expected rootObject to be NSDictionary
Could not load ax bundle map: Expected rootObject.items to be NSArray
Could not load bundle map item. expected NSDictionary
Could not load bundle map item. name is missing
Could not load bundle map item. target expected to be NSDictionary
Could not load bundle map item. target name is missing
Could not load bundle map item named '%@'. target type is missing
Could not load bundle map item named '%@'. target type is unknown '%@'
Could not load bundle map item named '%@'. supportedPlatforms expected to be an array
Could not load bundle map item named '%@'. supportedPlatforms item '%@' expected to be a string
If loadOrder is specified, it must be a number
com.apple.accessibility.AXRunloopCoalescer
MIDIClient
v16@?0r^{MIDINotification=iI}8
Error creating MIDI client with identifier: %@
Input
v24@?0r^{MIDIPacketList=I[1{MIDIPacket=QS[256C]}]}8^v16
Error creating MIDI client input port with identifier: %@
Error disposing MIDI client with identifier: %@
Other
Entity
Source
Destination
External Device
External Entity
External Source
External Destination
MIDI Notification: MIDI I/O error. Device: %@
Could not connect end point to input port
UNTITLED_RECIPE
RECIPE_CREATED_FROM_HOLD_POINT
RECIPE_CREATED_FROM_POINT
EXIT_RECIPE
SELECT_ITEM_AUTOSCANNING
CUSTOM_GESTURE
CENTER_TAP
RIGHT_TO_LEFT_SWIPE
LEFT_TO_RIGHT_SWIPE
HOLD_POINT
[%@] String: %@, Original String: %@, Braille String: %@, variants: %@
com.apple.accessibility.system.app.server.ready
AXSystemAppServerDiedNotification
directionPadUp
directionPadDown
directionPadLeft
directionPadRight
faceButtonA
faceButtonB
faceButtonX
faceButtonY
shoulderButtonL1
shoulderButtonL2
shoulderButtonR1
shoulderButtonR2
leftJoystickX
leftJoystickY
leftJoystickButton
rightJoystickX
rightJoystickY
rightJoystickButton
menuButton
viewButton
homeButton
 Game Info:
   D-pad Up: %.2f
   D-pad Down: %.2f
   D-pad Left: %.2f
   D-pad Right: %.2f
   Left Stick X: %.2f
   Left Stick Y: %.2f
   Right Stick X: %.2f
   Right Stick Y: %.2f
   A: %.2f
   B: %.2f
   X: %.2f
   Y: %.2f
   L1: %.2f
   L2: %.2f
   R1: %.2f
   R2: %.2f
   Left Stick Button: %.2f
   Right Stick Button: %.2f
   Menu Button: %.2f
   View Button: %.2f
   Home Button: %.2f
UIServer
AssistiveTouch
AXEventData. Sender:%@
[1;30m
[31m
[1;31m
[32m
[1;32m
[33m
[1;33m
[34m
[1;34m
[35m
[1;35m
[36m
[1;36m
[37m
[30m
%s%@%s
AXLogColorizer:<%p>. active:%@ managed:%@ preferDarkColors:%@
AXReplayer
Exhausted retry attempts for block: %@
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXReplayer.m
-[AXReplayer replayWithName:attempts:interval:async:queue:replayBlock:completion:]
must provide a replayBlock
NotSupported
Use initWithHIDTapIdentifier:HIDEventTapPriority:systemEventTapIdentifier:systemEventTapPriority:
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXEventProcessor.m
-[AXEventProcessor initWithHIDTapIdentifier:HIDEventTapPriority:systemEventTapIdentifier:systemEventTapPriority:]
Cannot install an event tap for system events if not running in the sytem process.
%@-HIDEventReceive
-[AXEventProcessor dealloc]
The thread needs to be stopped with the cleanup call before we can dealloc properly
-[AXEventProcessor beginHandlingHIDEventsForReason:]
AXEventProcessor was not initialized to handle HID events
-[AXEventProcessor beginHandlingSystemEventsForReason:]
AXEventProcessor was not initialized to handle system events
This reason already exists among reasons for tapping system events. Unbalanced. Could be trouble, but might be ok. %@
This reason does not exist among reasons for tapping system events. Unbalanced. %@
B16@?0@"AXEventRepresentation"8
AXSOSVersion
AXSModel
AXSHasHomeButton
AXSUsesExtendedRange
accessibilityOptions
preferredContentSizeCategoryName
axOSVersion
axModel
usesExtendedSlider
DeviceClass
<AXMIDIDeviceEntity:%p parent:%@>
    
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/NSObject+AXCollectionsExtensions.m
-[NSObject(AXCollectionsExtensions) _ax_appendPrettyDescriptionToString:indentationString:visitedCollections:]
accumulatorString <%@: %p> was supposed to be a mutable string
indentationString <%@: %p> was supposed to be a mutable string
visitedCollections <%@: %p> was supposed to be a mutable set
<%@: %p>
GAXTimeRestrictionManager<%p>. active:%@ paused:%@
  start time:%@ s (absolute:%@ s)
  expiration duration:%@ s (absolute:%@ s)
  alarm:%@ s (absolute:%@ s)
AXVoiceOverDidEnableGesturedTextInputNotification
AXVoiceOverDidDisableGesturedTextInputNotification
AXVoiceOverHandwritingAttributePreferredCharacterSet
AXVoiceOverHandwritingAttributeAllowedCharacterSets
AXVoiceOverHandwritingAttributeCanDeleteCharacter
AXVoiceOverHandwritingAttributeShouldEchoCharacter
AXVoiceOverHandwritingAttributeAcceptsRawInput
AXVoiceOverHandwritingAttributeShouldPlayKeyboardSecureClickSound
AXVoiceOverHandwritingAttributeAcceptsContractedBraille
AXVoiceOverHandwritingAttributeLanguage
AXCharacterVoiceIdentifierMickey
AXCharacterVoiceIdentifierMinnie
SwitchActionKey
SwitchNameKey
SwitchSourceKey
SwitchTypeKey
SwitchKeyCodeKey
SwitchButtonNumberKey
SwitchHeadSwitch
SwithProductName
SwithManufacturerName
SwitchLongPressAction
SwitchRemoteSwitchIdentifier
SwitchRemoteDeviceName
SwitchRemoteDeviceIdentifier
SwitchMidiEvent
SwitchAccessibilityEventUsagePage
SwitchAccessibilityEventUsage
SwitchAccessibilityEventModifierFlags
SCREEN_SWITCH_NAME
SWITCH_SOURCE_CAMERA_LABEL
SWITCH_SOURCE_EXTERNAL_LABEL
SWITCH_SOURCE_MFI_LABEL
SWITCH_SOURCE_SCREEN_LABEL
Apple TV Remote
SWITCH_SOURCE_REMOTE_LABEL
SWITCH_SOURCE_MIDI_LABEL
SWITCH_SOURCE_ACCESSIBILITY
SWITCH_SOURCE_GAMEPAD
[%@ (%p)]
Action: %@ 
Name: %@ 
Source: %@ 
Long Press action: %@ 
Type: %@ 
Key code: %hu
Button Number: %d
Head Switch: %d
Product Name: %@
Manufacturer: %@
UUID: %@
Remote device identifier: %@
Remote device name: %@
Remote switch identifier: %@
MIDI Event: %@
SWITCH_NAME_PREFIX
SwitchSourceCamera
SwitchSourceKeyboard
SwitchSourceMFI
SwitchSourceScreen
SwitchSourceATVRemote
SwitchSourceRemote
SwitchSourceMIDI
SwitchSourceGamepad
SCATSwitchSourceAccessibility
SwitchTypeOptional
SwitchTypeRequired
activate
menu
select
step next
step previous
stop
app switcher
home
notifications
control center
siri
volume down
volume up
3d touch
toggle dictation
accessibility shortcut
voice shortcuts
ATV Select
ATV Menu
ATV Home
ATV Play/Pause
ATV Up
ATV Down
ATV Left
ATV Right
unknown
SWITCH_ACTION_ACTIVATE_LABEL
SWITCH_ACTION_MENU_LABEL
SWITCH_ACTION_RUN_LABEL
SWITCH_ACTION_SELECT_LABEL
SWITCH_ACTION_STEP_NEXT_LABEL
SWITCH_ACTION_STEP_PREVIOUS_LABEL
SWITCH_ACTION_STOP_LABEL
SWITCH_ACTION_APP_SWITCHER_LABEL
SWITCH_ACTION_HOME_LABEL
SWITCH_ACTION_NOTIFICATION_CENTER_LABEL
SWITCH_ACTION_CONTROL_CENTER_LABEL
SWITCH_ACTION_SIRI_LABEL
SWITCH_ACTION_VOLUME_DOWN_LABEL
CUSTOMIZE_MENU_ForceTouch
SWITCH_ACTION_VOLUME_UP_LABEL
SWITCH_ACTION_DICTATE_LABEL
SWITCH_ACTION_TRIPLE_CLICK
SWITCH_ACTION_VOICE_SHORTCUTS_MENU_LABEL
SWITCH_ACTION_ATV_REMOTE_SELECT_LABEL
SWITCH_ACTION_ATV_REMOTE_MENU_LABEL
SWITCH_ACTION_ATV_REMOTE_HOME_LABEL
SWITCH_ACTION_ATV_REMOTE_PLAY_PAUSE_LABEL
SWITCH_ACTION_ATV_REMOTE_UP_LABEL
SWITCH_ACTION_ATV_REMOTE_DOWN_LABEL
SWITCH_ACTION_ATV_REMOTE_LEFT_LABEL
SWITCH_ACTION_ATV_REMOTE_RIGHT_LABEL
Could not return action string for unknown action
B24@?0@"AXSwitch"8^B16
ProductID
VendorID
AX MIDI
CreateClient
DisposeClient
ParseError
AX MIDI Error: %@ - %@
 [Underlying Error: %@]
 [MIDI Error: kMIDIInvalidClient]
 [MIDI Error: kMIDIInvalidPort]
 [MIDI Error: kMIDIWrongEndpointType]
 [MIDI Error: kMIDINoConnection]
 [MIDI Error: kMIDIUnknownEndpoint]
 [MIDI Error: kMIDIUnknownProperty]
 [MIDI Error: kMIDIWrongPropertyType]
 [MIDI Error: kMIDINoCurrentSetup]
 [MIDI Error: kMIDIMessageSendErr]
 [MIDI Error: kMIDIServerStartErr]
 [MIDI Error: kMIDISetupFormatErr]
 [MIDI Error: kMIDIWrongThread]
 [MIDI Error: kMIDIObjectNotFound]
 [MIDI Error: kMIDIIDNotUnique]
 [MIDI Error: kMIDINotPermitted]
Error fetching MIDI property '%@'
Unable to find entity for endpoint
Unable to find device for entity
AXPhonetics/
%@@phonetics
AXPhonemes/
%@@phonemes
%@.plist
_ESC_
default
AXResourceLoader
Bundle was nil. Tried ID:%@ and Path:%@
com.apple.QuickSpeak
AXPineBoardServerInstance.framework
AXPineBoardServer.framework
AXDictionaryElementKeyHint
AXDictionaryElementKeyIndex
AXDictionaryElementKeyIsKeyboardKey
AXDictionaryElementKeyLabel
AXDictionaryElementKeyLanguage
AXDictionaryElementKeyTraits
AXDictionaryElementKeyTraitsDescription
AXDictionaryElementKeyValue
?333333
333333
MbP?
b@ffffffC@
?@33333
8@fffff
A@333333<@
ffffff9@ffffff9@
333333
?ffffff
?;;;;;;
?333333
?333333
?;;;;;;
?VVVVVV
?}}}}}}
softlink:r:path:/System/Library/PrivateFrameworks/AccessibilityPhysicalInteraction.framework/AccessibilityPhysicalInteraction
softlink:r:path:/System/Library/PrivateFrameworks/SiriTTS.framework/SiriTTS
softlink:r:path:/System/Library/PrivateFrameworks/VoiceServices.framework/VoiceServices
softlink:r:path:/System/Library/PrivateFrameworks/AXSpeechAssetServices.framework/AXSpeechAssetServices
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
softlink:r:path:/System/Library/PrivateFrameworks/ScreenReaderCore.framework/ScreenReaderCore
softlink:r:path:/System/Library/Frameworks/TVServices.framework/TVServices
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/PrivateFrameworks/VoiceServices.framework/VoiceServices
MAAssetQuery error fetching results (for %{public}@) - %{public}@ (remote: %d)
Catalog downloaded for assetType %@: %@
%@ : %@
Error locating symbol %{public}@
UIAccessibility Error. Could not safe access iVar: %{public}@ on class: %{public}@
Error (%{public}@): Undefined key: %{public}@, for class %{public}@ [%{public}@]
%{public}@
Failed to handle event in time for event tap: %@
AXAssertionCoordinator: Now start tracking assertion for reason: %@
AXAssertionCoordinator: Stop tracking assertion for reason: %@
AX Storage Error: Attempting to access a value with a nil key. Self:%{public}@.
Backtrace:
%{public}@.
AX Storage Error: Attempting to store a value with a nil key. Value:%p.
Self:%{public}@.
Backtrace:
%{public}@.
couldn't get async result for message %@: %@
Timed out trying to %@ assertion with type: %@ identifier: error: %@. will retry.
Couldn't %@ assertion with type: %@ identifier: %@ error: %@. Giving up!
AX SystemApp: Error: %{public}@
not connecting to server, no client yet
not connecting to server, no client callback port yet
failed to start ipc server due to: %@
Registering FKA pid: %d
Could not ask backboard server about GAX Availability: %{public}@
Could not ask backboard server to set Guided Access enabled by requesting app: %{public}@
Attempting to request session again after temporary failure. Attempts remaining: %lu
Could not ask backboard server if GAX is self locked to app. %{public}@
Could not ask if GAX self lock is active and unmanaged: %{public}@
Toggle Guided Access
Could not get last set color filter: %@
bogus length of color filter description %zu
AX SystemApp Assertions not implemented on this platform
Assertion acquired: %@, %@
Assertion released: %@, %@
Error unarchiving command map: %@
Creating new command map because none was saved in preferences
Unable to encode command map: %@
AXUserEventTimer: Now disabling idle timer for reason: %@
AXUserEventTimer: No longer disabling idle timer for reason: %@
AX: %{public}@
(slow path) error getting entitlements for task %{public}@: %@
We don't have a record of this client being registered. Strange that we got an invalidation.
Cleaned up cached validation entitlement for %{public}@ = %{public}@
Client disconnected %{public}@
could not set custom queue size to %u: 0x%08x
Starting server (%{public}@) on thread (%{public}@:name:%{public}@:main:%{public}@)
Could not start server thread. Could not allocate mach port. self:%{public}@
Could not start server thread. Error performing mach_port_insert_right. self:%{public}@
Could not start server thread. Could not register mach port. self:%{public}@
Could not start server thread. Could not checkin or register server port. self:%{public}@
Could not start server thread. server runloop source was NULL. self:%{public}@
someone tried to register with a bogus client port (%llx)
Clients only need to register once!
Server could not handle received message.  inData could not be unarchived to a message object
Not privileged to communicate
Warning: no handler was for message key: (%d). Falling back to default handler
ERROR: %{public}@
Did not find server for server port %d
Message handled more than one, error state
reply to message failed: %{public}s
Reply port was invalid, name: 0x%x
async reply to message failed: %{public}s
Setting client identifier %{public}@
Why are you setting the client identifier twice? Old: %{public}@, New: %{public}@
AX Asked for client callback port but we had not yet registered
Client (%{public}@) registering with server on thread (%{public}@:name:%{public}@:main:%{public}@). UsesMainThreadRunloop:%{public}@
Could not create a server source for the client to register with the server
Could not register with server: %{public}@
Could not register with server with client identifier: %{public}@
Could not register with server for %{public}@. %d tries remaining: %{public}@
Exhausted registration attempts for %{public}@: %{public}@
client could not connect to new service: %{public}@ %{public}@
Connected to server: %{public}@ %d
A connection to the server could not be made after %{public}@s. Calling timeout blocks
AX IPC Client: %{public}@
Client went invalid
Removing entity: %@
Did add entity: %@
Target=%@
Validations
InstallSafeCategories
AX Safe category class '%@' was not found!
AX Safe category class:%@ in wrong AX bundle '%@' should be with '%@'!
Begin tracking with AXCodeLoaderTrackingModeDisabled is invalid
UpdateAXCodeItemDefs
Trying to associate an axBundle code with another axBundle makes no sense!
(%lu) Decoding errors found with axbundlemap:
  %@
No code items decoded from URL %s
Will reevaluate code items and load any needed ax code items now
found %lu axbundle(s) requiring load
Failed to load item %@. error: %@
Finished loading ax code items
AXCodeLoader State:
  -> %@
-------------------------------------------------
WARNING: The following AX Bundles are loaded but
were not in our definitions! This means the old
loader knows how to load some bundles that we do
not, and we have more compile-time work to do
--------------------------------------------
*** Assertion failure in %s, %@:%lu: %@
%{public}@
saving channels: %{public}@ %{public}@
Unable to continue speaking from synthesizer.
Our substring range was greater than speaking content! (%lu,%lu) %@
Changing speaking rate to %f...
Respeaking utterance.  Last spoken substring range was %{private}@
Last utterance language tag is %{private}@
The last utterance is already on the queue, so we need to remove it first.
Paused, so leaving the last utterance on the queue
Did not need to respeak utterance.
Finished all content, so picking the last token. %ld
We tried to skip a unit in the currently spoken text, but hadn't tried to speak a substring yet.  This is possible but probably requires extremely fast timing.  If not, something may be wrong
Last spoken substring range was %{private}@.
Skipped to boundary.
Next speech sequence item was %{private}@.
%{public}@...
Speaking content ranges were %{private}@.
Current token index was %ld.
Succeeded at %{public}@.
Failed to %{public}@.
Synthesizer will speak range %{private}@ of %{private}@, but we did not track the last utterance range.  It could be that we tried to stop speaking before getting this callback.
Spoke range %{private}@.
Finished speaking for utterance %{private}@, but last utterance was %{private}@
AXDeviceSizeMM() screen class is invalid
AXDeviceSizeMM() result is invalid
Using physical device dimensions: [%.2fmm x %.2fmm]
Unexpected display values returned from MG. Falling back to legacy calculations
Using (fallback!) physical device dimensions: [%.2fmm x %.2fmm]
Had raw value %f, but should not have gotten here if the asset was not on screen at all
Unable to get view bounds: %@ or object frame: %@
We passed in %@ to TTSPreferencesCopyDefaultOutputLanguageIdentifierForLanguage and got back nil
Override language {%@} detection to be ja-JP
Running language detection on chunk: %@
Adding secondary tag %@ with probability %f for chunk: %@
Tagger chose tag %@ with probability %f for chunk: %@
Couldn't find dialect for tag %@, manually tagging
Tagger couldn't find a language for current chunk. Manually tagging.
token found[%@]:%{private}@ %@ %@
  add last chunk %@ %@
Combining tags. Old tags were: %{private}@. New tags are: %{private}@
Finished Tagging. %@ %@ %@
token NOT found:%{private}@ : %@ %@
char:%{private}@  %@ %@
  is common, skipping  %@ %@
  is common, skipping %@ %@
  curLang was nil %@ %@
  add to exisiting %@ %@
  **unspeakable %@ %@
  start new chunk %@ %@
checking if touched point is contained in ignored path:
 touch (%f, %f), %@
nuking all AX settings!
extantVoices was called from a process that isn't AXUIServer, and we don't have any voices yet. Process name: %@
Unexpected object type for preference key: %@
Name: %@ for language: %@ and asset: %@
Will create MIDI client with identifier: %@
MIDI system change occurred. change type: %@
Unhandled MIDI notification: %@
Dispatching event: %@
Will dispose of MIDI client with identifier: %@
%@ attached devices
Device %@ of %@:
MIDI Notification: add object: %@
Unhandled Object added: %@
MIDI Notification: Remove object: %@
Unhandled Object removed: %@
MIDI Notification: Property Changed: %@ - %@
MIDI Notification: Thru Connections Changed
MIDI Notification: Serial Port Owner Changed
Removing device: %@
Did add device: %@
Did attempt to connect inputPort to source: %@. result: %@
Did attempt to disconnect inputPort from source: %@. result: %@
validation error: %{public}@
UIAccessibility validation error: see log output above.
Expected length:(%@) to be size of AXEventDataStorage: (%@)
EventProcessor: This reason already exists among reasons for tapping HID events. Unbalanced. %@
EventProcessor: This reason does not exist among reasons for tapping HID events. Unbalanced. %@
Using test data mode settings: %@
Setting test data mode settings: %@
Applying saved settings: %@
Error archiving data blob for buddy: %@
Archived data blob for buddy with size %lu
Error unarchiving data blob from buddy: %@
Unarchived data blob for buddy
Removing source: %@
Removing destination: %@
Did add source endpoint: %@
Did add destination endpoint: %@
This code must execute in a writing block on AXAccessQueue: %@
This code must execute in a reading (or writing) block on AXAccessQueue: %@
Can't begin time restriction, it's already active
Can't begin time restriction, specified duration is too short: %{public}@
App Time restriction is being overridden with internal value: %{public}@
  TimeRestrictions: Was Asked to Start: %{public}@
  TimeRestrictions: Was Asked to Cancel: %{public}@
  TimeRestrictions: Was Asked to Pause: %{public}@
  TimeRestrictions: Was Asked to Resume: %{public}@
Loading resource: %@
AXPerformanceTestReportingServer
AXUtilsPrivate
AXUtilitiesCommonStringRuntimeOverrides
AXTripleClickHelpers
AXEventHandInfoRepresentation
AXEventRepresentationDescription
NSObject
NSSecureCoding
NSCoding
NSCopying
Speaking
AXIPCMessage
UIAccessibilitySafeCategory_Private
UIAccessibilitySafeCategory
AXDisplayLinkManagerTargetAction
AXDisplayLinkManager
AXTypingPrediction
AXPredictiveTypingModel
AXEventTapPair
AXEventTapManager
AXMIDIExtras
AXAssertionCoordinator
AXSideStorage
AXEventIOSMACPointerInfoRepresentation
AXRedirectedEventDetector
UnitTesting
AXFirstResponderValueChangeManager
AXAssertionWorkItem
AXServer
AXEventPointerInfoRepresentation
AXBackBoardServerInstance
AXBackBoardServerInstanceDelegate
AXBackBoardServer
AXAssertion
_AXAssertionServer
FKAAvailableCommands
AXValueChangeUtilities
AXUserEventTimer
AXOutputRequest
AXExtensions
AXIPCDelayedMessage
AXIPCServerClientRegistration
AXIPCServerMessageHandlerContext
AXIPCServer
AXIPCServerClientRegistrationDelegate
AXPostConnectionTask
AXIPCOutstandingAsyncRequest
AXIPCClient
AXDeviceMonitor
AXSubsystemEventTap
AXSubsystemUserInterfaceService
AXSubsystemSpeechAssetDownloader
AXSubsystemZoom
AXSubsystemAVSpeechSynthesis
AXSubsystemVOTiCloud
AXSubsystemVOTAudio
AXSubsystemBrailleGestures
AXSubsystemVisualAlerts
AXSubsystemAudioRouting
AXSubsystemLocCaptionPanel
AXSubsystemSpeakSelection
AXSubsystemSpeakTyping
AXSubsystemSpeakThis
AXSubsystemContextKit
AXSubsystemSCElementNav
AXSubsystemPronunciations
AXSubsystemSCPauseResume
AXSubsystemBrailleHardware
AXSubsystemSwitchControlHardware
AXSubsystemVoiceOverIAP
AXSubsystemVoiceOverLifeCycle
AXSubsystemMagnifier
AXSubsystemMagnifierBright
AXSubsystemVoiceOver
AXSubsystemAXNotifications
AXSubsystemAXVectorKit
AXSubsystemAXCharacterVoices
AXSubsystemAXAggregateLogging
AXSubsystemMagicTapToggle
AXSubsystemBrokenHomeButton
AXSubsystemDataMigrator
AXSubsystemInvertColors
AXSubsystemAXSettings
AXSubsystemAXUIViewService
AXSubsystemBBServer
AXSubsystemSBServer
AXSubsystemIPC
AXSubsystemSpeakFingerManager
AXSubsystemAXCustomizableMouse
AXSubsystemAXSoundBoard
AXMIDIDeviceEntityEndpoint
AXAssertionHelpers
AXMIDIEvent
AXVoiceOverServer
AXMIDIDevice
AXMIDIDeviceEntityDelegate
AXBinaryMonitor
AXMobileConfigurationInterface
AXVoiceOverActivity
AXValidationManager
AXEventPathInfoRepresentation
AXEventPathInfoRepresentationExtension
AXGeometryExtensions
AXCodeLoader
AXImageMonitorObserver
ExtendedCodeInfo
AXEventAccelerometerInfoRepresentation
AXTrampoline
AXTrmpoline
AXPathWrapper
AXAudioHardwareManager
AXOrator
AVSpeechSynthesizerDelegate
AXAppRepresentation
AXGameControllerEvent
AXSideStorageHelpers
NonRetainedObjectContainer
_AXDyldImageMonitor
AXImageMonitor
AXARDescriptionFormatting
AXLangMap
AXSwitchRegistrar
AXEventRepresentation
AXSwitchRecipeMapping
AXSwitchRecipe
AXDialectMap
AXLanguageManager
AXLanguageTag
AXLanguageTaggedContent
AXThreadTimerTask
AXThreadTimer
AXAccessQueueTimer
AXEventKeyInfoRepresentation
AXSettings
AccessibilitySupportFacade
AXUtilsExtensions
AXAlternativeSpeech
AXAlternativeSpeechSynthesisVoice
AXAlternativeVoices
AVAlexSpeechSynthesisVoice
AVSiriMaleSpeechSynthesisVoice
AVSiriFemaleSpeechSynthesisVoice
AXMIDIParser
AXCodeItem
AXLoggingSubsystem
AXReplayableGesture
AXMutableReplayableGesture
AXCenterTapReplayableGesture
AXPageTurningReplayableGesture
AXNamedReplayableGesture
AXIndexMap
_AXCodeItemDecoder
AXUpdateElementVisualsCoalescer
AXActionCoalescer
AXMIDIManager
AXMIDIDeviceProtocol
AXOutputAction
AXSystemAppServer
AXEventGameControllerInfoRepresentation
AXEventData
AXLogColorizer
_AXReplayInstance
AXReplayer
AXEventProcessor
AXBuddyDataPackage
AXMIDIDeviceEntity
NSFastEnumeration
AXCollectionsExtensions
GAXTimeRestrictionManager
AXSwitch
AXCharacterSoundMap
AXResourceLoader
_connectIfNecessary
initWithKey:payload:
sendSimpleMessage:
dictionaryWithObjects:forKeys:count:
server
_serviceName
voiceOverTouchDidLaunch
assistiveTouchDidLaunch
voiceOverDidSpeak:
_accessibilityInterposesAsSystemApplication
setupProcessName
isEqualToString:
safeValueForKey:
integerValue
mainBundle
infoDictionary
objectForKey:
countByEnumeratingWithState:objects:count:
containsString:
inPreboardMode
inCheckerBoardMode
processInfo
processName
copy
bundleIdentifier
stringWithFormat:
hasPrefix:
preferredLanguages
objectAtIndex:
characterDirectionForLanguage:
enumerateObjectsUsingBlock:
lastPathComponent
rangeOfString:
substringFromIndex:
characterSetWithCharactersInString:
invertedSet
rangeOfCharacterFromSet:
hasSuffix:
length
substringWithRange:
count
UTF8String
defaultManager
fileExistsAtPath:
bundleWithPath:
isLoaded
loadAndReturnError:
principalClass
target
performSelector:
bundleForClass:
addObject:
enumeratorWithOptions:
nextObject
pathComponents
isLaunchProhibited
containsObject:
appTags
localizedName
caseInsensitiveCompare:
sortUsingComparator:
supportsAccessibilityDisplayFilters
isGuidedAccessActive
sharedInstance
touchAccommodationsEnabled
localizationQACaptionMode
classicInvertColors
leftRightBalanceEnabled
setClassicInvertColors:
setLastSmartInvertColorsEnablement:
zoomEnabled
setZoomEnabled:
assistiveTouchEnabled
setAssistiveTouchEnabled:
setAssistiveTouchUIEnabled:
guidedAccessEffectiveAppBundleIdentifier
defaultWorkspace
openApplicationWithBundleID:
toggleGuidedAccess
_toggleVoiceOver
_toggleSmartInvertColorsOffMainThread
performSelectorInBackground:withObject:
toggleColorFilter
_toggleZoomOffMainThread
_toggleAssistiveTouch
switchControlEnabled
setSwitchControlEnabled:
setTouchAccommodationsEnabled:
toggleGuidedAccessFromControlCenter
enhanceBackgroundContrastEnabled
setEnhanceBackgroundContrastEnabled:
setLeftRightBalanceEnabled:
reduceMotionEnabled
setReduceMotionEnabled:
toggleFullKeyboardAccess
startMagnifier
_availableFeatures
intValue
_shouldShowFeatureInShortcutsControlCenterModule:includeGuidedAccess:
titleForTripleClickOption:
axFilterObjectsUsingBlock:
valueForTripleClickOption:
_promptToDisableBrightnessFilters:data:
toggleTripleClickOption:
tripleClickOptionsForAccessibilityShortcutControlCenterModuleIncludingGuidedAccess:
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
eventType
setEventType:
initialFingerCount
setInitialFingerCount:
currentFingerCount
setCurrentFingerCount:
swipe
setSwipe:
systemGesturePossible
setSystemGesturePossible:
paths
initWithArray:copyItems:
setPaths:
handIdentity
setHandIdentity:
handPosition
setHandPosition:
handIndex
setHandIndex:
handEventMask
setHandEventMask:
init
decodeInt32ForKey:
setWithObjects:
decodeObjectOfClasses:forKey:
decodeObjectOfClass:forKey:
getValue:
encodeInt32:forKey:
encodeObject:forKey:
valueWithBytes:objCType:
appendString:
accessibilityEventRepresentationTabularDescription
appendFormat:
firstObject
transducerType
description
isStylus
stringByAppendingFormat:
supportsSecureCoding
isEqual:
class
self
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
encodeWithCoder:
initWithCoder:
TB,R
copyWithZone:
additionalHandEventFlagsForGeneratedEvents
setAdditionalHandEventFlagsForGeneratedEvents:
.cxx_destruct
_systemGesturePossible
_swipe
_initialFingerCount
_currentFingerCount
_eventType
_handIdentity
_handIndex
_handEventMask
_additionalHandEventFlagsForGeneratedEvents
_paths
_length
_handPosition
TC,N,V_swipe
TI,N,V_eventType
TS,N,V_initialFingerCount
TS,N,V_currentFingerCount
T@"NSArray",&,N,V_paths
TC,N,V_systemGesturePossible
TI,N,V_handIdentity
TI,N,V_handIndex
T{CGPoint=dd},N,V_handPosition
TB,R,N
TI,N,V_handEventMask
TI,N,V_additionalHandEventFlagsForGeneratedEvents
TQ,R,N,V_length
attributes
compare:options:
sortedArrayUsingComparator:
_voiceFromInternalVoiceListWithIdentifier:
extantVoices
identifier
isSiriVoiceIdentifier:
nameForVoiceIdentifier:
language
dialectForLanguageID:
localeNameInCurrentLocale
name
isVocalizerVoiceIdentifier:
setGender:
lowercaseString
setName:
stringByReplacingOccurrencesOfString:withString:
arrayWithObjects:count:
setLanguages:
isNeuralSiriVoiceIdentifier:
setType:
languages
type
isAssetManagedBySiriForVoiceId:
array
voice
clientID
getAllAutoDownloadedVoiceAssets:
selectedSpeechVoiceIdentifiers
returnTypes:
queryMetaDataSync
results
queryParams
numberWithUnsignedInt:
getLocalFileUrl
setAlexLocalAssetURL:
setObject:forKey:
initWithType:
setDoNotBlockBeforeFirstUnlock:
addKeyValuePair:with:
assetsForLanguage:voiceType:
arrayByAddingObjectsFromArray:
neural
ax_filteredArrayUsingBlock:
state
setAllowsCellularAccess:
setDiscretionary:
startCatalogDownload:options:then:
defaultColorizer
errorString:
warningString:
debugString:
infoString:
initWithUTF8String:
initWithFormat:
callStackSymbols
initWithFormat:arguments:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
redString:
greenString:
yellowString:
blueString:
cyanString:
magentaString:
initWithTargetSerialQueue:
includeBacktraceInLogs
registerUpdateBlock:forRetrieveSelector:withListener:
cancel
removeAllObjects
afterDelay:processBlock:
timeIntervalSinceReferenceDate
dictionary
numberWithDouble:
unsignedIntegerValue
doubleValue
numberWithUnsignedInteger:
accessibilitySpeakableDisplayValueWithStyle:
currentLocale
localeIdentifier
_accessibilitySpeakableDisplayValueWithStyle:isUSKeyboard:
displayValueWithStyle:isUSKeyboard:
axAttributedStringWithString:
setAttribute:forKey:
accessibilitySpeakableDisplayValue
fkaSpeakableDisplayValue
T@"AXAttributedString",R,N
initWithBytes:length:encoding:
fileURLWithPath:
path
initWithPath:
setKey:
setPayload:
setUniqueID:
dealloc
initForReadingFromData:error:
ignoreLogging
unarchivedObjectOfClass:fromData:error:
senderBundleId
payload
auditToken
clientPort
uniqueID
numberWithUnsignedLongLong:
archivedMessageFromData:
initWithKey:
initWithKey:payload:keyDebugInfo:
setClientPort:
setAuditToken:
processedMessage
setProcessedMessage:
_processedMessage
_key
_clientPort
_payload
_uniqueID
_auditToken
Ti,N,V_key
T@"NSDictionary",C,N,V_payload
TI,N,V_clientPort
T{?=[8I]},N,V_auditToken
TQ,N,V_uniqueID
T@"NSString",R,C,N
TB,N,V_processedMessage
raise:format:
appValidationTestingMode
shouldPerformValidationsAtRuntime
_safeValidatedValueForKey:expectedClass:possibleExpectedTypeEncodings:
sendExceptionForSafeValueKey:onTarget:overrideProcessName:
objCType
_safeValidatedValueForKey:expectedClass:expectedTypeEncoding:
sendExceptionForSafeIVarKey:onTarget:overrideProcessName:
boolValue
unsignedIntValue
floatValue
safeDoubleForKey:
rangeValue
pointValue
sizeValue
rectValue
__axValueForKey:
_accessibilityPerformSafeValueKeyBlock:withKey:onClass:
valueForKey:
valueForKeyPath:
safeIvarForKey:
safeBoolForKey:
safeIntForKey:
safeUnsignedIntForKey:
safeIntegerForKey:
safeUnsignedIntegerForKey:
safeFloatForKey:
safeTimeIntervalForKey:
safeRangeForKey:
safeCGFloatForKey:
safeCGPointForKey:
safeCGSizeForKey:
safeCGRectForKey:
safeStringForKey:
safeArrayForKey:
safeSetForKey:
safeDictionaryForKey:
safeUIViewForKey:
safeValueForKeyPath:
safeIntegerForIvarKey:onClass:
handleFailoversForClassNamed:
reason
sendExceptionForSafeBlock:overrideProcessName:
containsValueForKey:
decodeBytesForKey:returnedLength:
encodeBytes:length:forKey:
encodeInt64:forKey:
setTarget:
setActionSelector:
actionSelector
displayDidRefreshCount
methodForSelector:
setDisplayDidRefreshCount:
initWithTarget:actionSelector:
displayDidRefresh:
_target
_actionSelector
_displayDidRefreshCount
T@,&,N,V_target
T:,N,V_actionSelector
TQ,N,V_displayDidRefreshCount
currentThread
threadDictionary
removeObjectForKey:
setActiveTargetActions:
setUpdatedTargetActions:
storedDisplayLink
isPaused
duration
timestamp
_displayDidRefresh:
displayLinkWithTarget:selector:
currentRunLoop
addToRunLoop:forMode:
setPaused:
setStoredDisplayLink:
invalidate
isHandlingDisplayRefresh
_prepareUpdatedTargetActionsForModification
activeTargetActions
_didAddFirstTargetAction
removeObject:
_didRemoveLastTargetAction
updatedTargetActions
hasUpdatedTargetActions
setHasUpdatedTargetActions:
displayLink
isWarmUpModeEnabled
setDisplayLink:
_releaseCurrentDisplayLinkManager
warmUpModeRequirementsCount
setWarmUpModeRequirementsCount:
setHandlingDisplayRefresh:
currentDisplayLinkManager
addTarget:selector:
removeTarget:selector:
beginRequiringWarmUpMode
endRequiringWarmUpMode
_hasUpdatedTargetActions
_handlingDisplayRefresh
_storedDisplayLink
_activeTargetActions
_updatedTargetActions
_warmUpModeRequirementsCount
T@"CADisplayLink",&,N
T@"CADisplayLink",&,N,V_storedDisplayLink
T@"NSMutableSet",&,N,V_activeTargetActions
T@"NSMutableSet",&,N,V_updatedTargetActions
TB,N,V_hasUpdatedTargetActions
handlingDisplayRefresh
TB,N,GisHandlingDisplayRefresh,V_handlingDisplayRefresh
TQ,N,V_warmUpModeRequirementsCount
warmUpModeEnabled
TB,R,N,GisWarmUpModeEnabled
paused
TB,R,N,GisPaused
Td,R,N
fullWord
setFullWord:
textToInsert
setTextToInsert:
prefix
setPrefix:
rangeToReplace
setRangeToReplace:
probability
setProbability:
_fullWord
_textToInsert
_prefix
_probability
_rangeToReplace
T@"NSString",C,N,V_fullWord
T@"NSString",C,N,V_textToInsert
T@"NSString",C,N,V_prefix
T{_NSRange=QQ},N,V_rangeToReplace
Td,N,V_probability
localeWithLocaleIdentifier:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
enumerateTokensForText:usingBlock:
objectAtIndexedSubscript:
_newContextForText:includeLastToken:length:
arrayWithCapacity:
stringByAppendingString:
subarrayWithRange:
characterAtIndex:
enumerateSubstringsInRange:options:usingBlock:
punctuationCharacterSet
characterIsMember:
_lastPartialWordForText:orEndOfSentence:
_completionPredictionsForPrefix:entireText:desiredNumber:
_nextWordPredictionsForText:desiredNumber:
predictionsForText:desiredNumber:
predictionsForText:
_wordModel
priority
handler
setHandler:
setIdentifier:
setPriority:
systemClient
setSystemClient:
matchingServiceHandler
setMatchingServiceHandler:
failedToHandleInTime
setFailedToHandleInTime:
_type
_systemClient
_matchingServiceHandler
_failedToHandleInTime
T@?,C,N,Vhandler
T@"NSString",C,N,Videntifier
Ti,N,Vpriority
Ti,N,V_type
T^{__IOHIDEventSystemClient=},&,N,V_systemClient
T@?,C,N,V_matchingServiceHandler
T@?,C,N,V_failedToHandleInTime
lock
_enumerateEventTapPairsUsingBlock:
unlock
insertObject:atIndex:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
_reorderEventTaps
_setHIDEventTapCallback:
sendHIDSystemEvent:repostCreatorHIDEvent:senderID:
creatorHIDEvent
newHIDEventRef
contextId
_copyCurrentEventTapPairs
representationWithHIDEvent:hidStreamIdentifier:clientID:taskPort:
handInfo
pathIndex
indexOfObjectPassingTest:
_setEventTapPriority:priority:
_installHIDFilter:skipDeviceMatching:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:wantsMouseEvents:wantsAccessibilityEvents:
_installSystemEventTap:
_hidFilterListForPair:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:wantsMouseEvents:wantsAccessibilityEvents:
installEventTap:identifier:type:skipDeviceMatching:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:wantsMouseEvents:wantsAccessibilityEvents:
installEventTap:identifier:type:skipDeviceMatching:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:wantsMouseEvents:wantsAccessibilityEvents:matchingServiceHandler:
_installEventTap:skipDeviceMatching:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:wantsMouseEvents:wantsAccessibilityEvents:
_removeHIDEventTapFilter:
_runMatchingServiceHandler:
sharedManager
sendHIDSystemEvent:senderID:
sendEvent:afterTap:useGSEvent:namedTaps:options:
_handleTestIOHIDEvent:
_processHIDEvent:taskPort:bundleId:
setFailedToProcessInTimeCallback:callback:
setEventTapPriority:priority:
_passivelyPeakAtHIDEventWithTarget:tapPair:sender:event:axEventRep:didHandle:
installEventTap:identifier:type:
installKeyboardEventTap:identifier:matchingServiceHandler:
removeEventTap:
runMatchingServiceHandlerForEventTap:
installationGSCallback
setInstallationGSCallback:
installationHIDCallback
setInstallationHIDCallback:
installationEventRepPost
setInstallationEventRepPost:
_eventTaps
_addedEventTapPairs
_removedEventTapIdentifiers
_isEnumeratingEventTaps
_shouldReorderEventTaps
_installationGSCallback
_installationHIDCallback
_eventTapLock
_ioSystemPostBackClient
_installationEventRepPost
T@?,C,N,V_installationGSCallback
T@?,C,N,V_installationHIDCallback
T@?,C,N,V_installationEventRepPost
representationWithHIDEvent:serviceClient:hidStreamIdentifier:
MIDIObject
MIDIDevice
MIDIEntity
MIDIEndpoint
setWithArray:
setAssertionQueue:
setDelegate:
_stopTrackingPoorMansAssertion:
initWithIdentifier:forReason:invalidationBlock:
_startTrackingPoorMansAssertion:
assertionQueue
assertions
hashTableWithOptions:
setAssertions:
delegate
assertionCoordinator:assertionsDidBecomeActive:
initWithIdentifier:delegate:
acquireAssertionWithReason:
_delegate
_identifier
_assertionQueue
_assertions
T@"<AXAssertionCoordinatorDelegate>",W,N,V_delegate
T@"NSString",&,N,V_identifier
T@"NSObject<OS_dispatch_queue>",&,N,V_assertionQueue
T@"NSHashTable",&,N,V_assertions
_axDictionaryQueue
_axIsWrappedPointer
nonretainedObjectValue
_accessibilityValueForKey:
_accessibilitySetValue:forKey:storageMode:
numberWithBool:
_accessibilitySetRetainedValue:forKey:
initWithInteger:
initWithUnsignedInteger:
valueWithNonretainedObject:
_axSetIsWrappedPointer:
_accessibilityBoolValueForKey:
_accessibilityIntegerValueForKey:
_accessibilityUnsignedIntegerValueForKey:
_accessibilitySetBoolValue:forKey:
_accessibilitySetIntegerValue:forKey:
_accessibilitySetUnsignedIntegerValue:forKey:
_accessibilityRemoveValueForKey:
_accessibilitySetAssignedValue:forKey:
pressed
encodeBool:forKey:
buttonIndex
encodeInteger:forKey:
location
valueWithPoint:
decodeBoolForKey:
setPressed:
decodeIntegerForKey:
setButtonIndex:
setLocation:
_pressed
_buttonIndex
_location
TB,N,V_pressed
Tq,N,V_buttonIndex
T{CGPoint=dd},N,V_location
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
recentEvents
_flushEventsIfNecessary
flushEventsTimer
afterDelay:processBlock:cancelBlock:
clientId
HIDTime
_elapsedTimeFrom:to:
addEvent:
isRedirectedEvent:
setRecentEvents:
setFlushEventsTimer:
_queue
_recentEvents
_flushEventsTimer
T@"NSMutableArray",&,N,V_recentEvents
T@"AXDispatchTimer",&,N,V_flushEventsTimer
flushEvents
setFlushEventsTimerDelay:
outputValueChangeForNewValue:oldValue:selectedTextRange:oldSelectedTextRange:shouldEchoDeletion:isSingleInsert:feedbackType:lastKeyboardKeyPress:
_outputValueChangeForNewValue:oldValue:isFirstResponderValid:selectedTextRange:oldSelectedTextRange:shouldEchoDeletion:optionalValueChangeType:derivedValueChangeType:didHitBorder:isBreakSpaceCharacter:isSingleInsert:selectionDeleted:feedbackType:textOperationOccurred:lastKeyboardKeyPress:isSingleCharacterInsertOrDelete:singleInsertDeleteAttString:singleInsertDeleteString:isSingleCharacterUpdate:wordRangeToFindMisspelled:pasteOperationSucceeded:shouldOutputSingleCharactersOnly:clientType:
outputValueChangeForNewValue:oldValue:isFirstResponderValid:selectedTextRange:oldSelectedTextRange:shouldEchoDeletion:optionalValueChangeType:derivedValueChangeType:didHitBorder:isBreakSpaceCharacter:isSingleInsert:selectionDeleted:feedbackType:textOperationOccurred:lastKeyboardKeyPress:isSingleCharacterInsertOrDelete:singleInsertDeleteAttString:singleInsertDeleteString:isSingleCharacterUpdate:wordRangeToFindMisspelled:pasteOperationSucceeded:clientType:
string
isAXAttributedString
attributesAtIndex:effectiveRange:
phoneNumberWithoutFormattingCharacters:
handleValueChangeForPhoneDeletionWithOldString:newString:
findLocationOfDifferenceInOldString:withNewString:
decomposedStringWithCanonicalMapping
rangeOfComposedCharacterSequenceAtIndex:
wordBreakSet
whitespaceCharacterSet
initWithCharacters:length:
attribute:atIndex:effectiveRange:
mutableCopy
setAttributes:
substringToIndex:
_handleApostropheIfNeeded:
_handleAttributedApostropheIfNeeded:
replaceString:
wordBreakCharacterSet
removeCharactersInString:
outputValueChangeForNewValue:oldValue:selectedTextRange:shouldEchoDeletion:isSingleInsert:feedbackType:lastKeyboardKeyPress:
outputValueChangeForNewValue:oldValue:selectedTextRange:shouldEchoDeletion:isSingleInsert:feedbackType:lastKeyboardKeyPress:shouldOutputSingleCharactersOnly:
initWithType:identifier:isAcquisition:
acquire
retries
setRetries:
_acquire
_retries
T@"NSString",R,N,V_type
T@"NSString",R,N,V_identifier
TB,R,N,V_acquire
TQ,N,V_retries
setAssertionWorkQueue:
_willClearServer
client
setPortDeathHandler:
sendSimpleMessage:enqueueError:
sendSimpleMessage:withError:
sendSimpleMessageWithObjectResult:
sendMessage:withError:
_sendMessage:error:
sendAsynchronousMessage:replyOnQueue:objectResultHandler:
ax_nonRedundantDescription
sendAsynchronousMessage:replyOnQueue:handler:
sendAsyncMessage:replyOnQueue:replyHandler:
assertionWorkBacklog
userInfo
assertionRetryTimer
_processAssertionBacklog
setAssertionWorkBacklog:
assertionWorkQueue
setAssertionRetryTimer:
_initializeAssertionBookkeeping
initWithServiceName:
shouldRegisterClientCallbackSourceOnMainRunloop
setShouldRegisterCallbackSourceOnMainRunloop:
setTimeout:
setClient:
isConnected
connectWithError:
serverIdentifier
setClientIdentifier:
_wasDisconnectedFromClient
stopServerWithError:
setServer:
_didConnectToClient
isRunning
clientCallbackPort
clientCallbackSource
initWithPort:serviceRunLoopSource:
startServerWithError:
_didConnectToServer
sendSimpleMessageWithResult:
sendMessage:
sendAsynchronousMessage:replyOnQueue:boolResultHandler:
acquireAssertionWithType:identifier:
relinquishAssertionWithType:identifier:
_connectServerIfNecessary
_ensureAssertionsHaveBeenProcessedWithCompletion:
setServerIdentifier:
setShouldRegisterClientCallbackSourceOnMainRunloop:
_shouldRegisterClientCallbackSourceOnMainRunloop
_server
_client
_serverIdentifier
_assertionWorkBacklog
_assertionRetryTimer
_assertionWorkQueue
T@"NSString",C,N,V_serverIdentifier
T@"NSMutableArray",&,N,V_assertionWorkBacklog
T@"AXDispatchTimer",&,N,V_assertionRetryTimer
T@"NSObject<OS_dispatch_queue>",&,N,V_assertionWorkQueue
T@"AXIPCClient",&,N,V_client
T@"AXIPCServer",&,N,V_server
TB,N,V_shouldRegisterClientCallbackSourceOnMainRunloop
UUID
UUIDString
removeObjectAtIndex:
assistiveTouchCustomGestures
decodeDoubleForKey:
setPointerX:
setPointerY:
setPointerZ:
setPointerAccelX:
setPointerAccelY:
setPointerAccelZ:
setIsPointerMove:
setPointerButtonMask:
setPointerButtonNumber:
setPointerButtonClickCount:
setPointerButtonPressure:
setPointerIsAbsolute:
pointerX
pointerY
pointerZ
pointerAccelX
pointerAccelY
pointerAccelZ
isPointerMove
pointerButtonMask
pointerButtonNumber
pointerButtonClickCount
pointerButtonPressure
pointerIsAbsolute
encodeDouble:forKey:
_isPointerMove
_pointerIsAbsolute
_pointerX
_pointerY
_pointerZ
_pointerAccelX
_pointerAccelY
_pointerAccelZ
_pointerButtonMask
_pointerButtonNumber
_pointerButtonClickCount
_pointerButtonPressure
Td,N,V_pointerX
Td,N,V_pointerY
Td,N,V_pointerZ
Td,N,V_pointerAccelX
Td,N,V_pointerAccelY
Td,N,V_pointerAccelZ
TB,N,V_isPointerMove
Td,N,V_pointerButtonMask
Td,N,V_pointerButtonNumber
Td,N,V_pointerButtonClickCount
Td,N,V_pointerButtonPressure
TB,N,V_pointerIsAbsolute
registerSiriViewServicePID:
numberWithInt:
registerAccessibilityUIServicePID:
registerHearingAidServerPID:
setInPreboardMode:
setInCheckerBoardMode:
_inPreBoardMode
_inCheckerBoardMode
_sessionIsLoginSession
disableBrightnessFilters
brightnessFiltersEnabled
blueLightStatusEnabled
restoreCachedBrightnessFilters
adaptationEnabled
supportsAdaptation
forceLoadGAXBundle
resetAccessibilityFeatures
colorFilterFromLastUpdate
backBoardServerInstanceIfExists
_shouldDispatchLocally
backboardServiceInstance
setSessionIsLoginSession:
registerAssistiveTouchPID:
dictionaryWithObject:forKey:
convertFrame:fromContextId:displayId:
convertFrame:toContextId:displayId:
convertPoint:fromContextId:displayId:
convertPoint:toContextId:displayId:
contextIdHosterForContextId:
contextIdForDisplayPoint:
postEvent:systemEvent:afterNamedTap:namedTaps:
userEventOccurred
setDisableSystemGestureRecognitionInEvents:
registerEventListener:
setAssistiveTouchPid:
accessibilityAssistiveTouchPid
setAccessibilityUIServerPid:
accessibilityUIServerPid
setFullKeyboardAccessDaemonPID:
accessibilityFullKeyboardAccessDaemonPid
setSiriViewServicePid:
hearingAidServerPid
setHearingAidServerPid:
zoomListenerRegistered
setLockScreenDimTimerEnabled:
setCapsLockLightOn:
setIsSpeakScreenHighlightVisible:
null
_springboardParametersForGuidedAccessAvailability
_sendRequestGuidedAccessSessionMessage:numberOfRetryAttempts:completion:
sendAsyncMessage:withReplyHandler:
bytes
numberWithInteger:
registerGestureConflictWithZoom:
adjustSystemZoom:
accessibilityAssistiveTouchPID
accessibilityFullKeyboardAccessDaemonPID
accessibilityUIServicePID
registerFullKeyboardAccessDaemonPID:
hearingAidServerPID
sessionIsLoginSessionWithResult:
invertColorsEnabled
setInvertColorsEnabled:
postEvent:afterNamedTap:includeTaps:
postEvent:systemEvent:
contextIdForPosition:
contextIdHostingContextId:
convertFrame:fromContextId:toContextId:
convertFrame:toContextId:
convertFrame:fromContextId:
convertPoint:fromContextId:
convertPoint:toContextId:
setHearingAidControlIsVisible:
setSwitchControlRendersDeviceUnusable:
setSwitchControlHasScreenSwitch:
accessibilityPreferenceAsMobile:
setAccessibilityPreferenceAsMobile:value:notification:
setZoomInitialFocusRect:fromContext:
zoomInitialFocusRectWithQueryingContext:
tripleClickHomeButtonPress
homeClickSwallowedForGuidedAccess
isGuidedAccessInWorkspace
guidedAccessEffectiveAppBundleIdentifier:
performGuidedAccessAutomationCommand:error:
guidedAccessAvailability
requestGuidedAccessSessionStartWithConfigurationDictionary:completion:
requestGuidedAccessSessionEndWithCompletion:
isGuidedAccessSelfLockedToApp:
isGuidedAccessUnmanagedSelfLocked
isRestrictedForAAC
guidedAccessIgnoredRegions
currentGuidedAccessModeAndSessionApp:
jetsamThirdPartyApps
loadGAXBundleForUnmanagedASAM
setDeviceOrientation:
_overrideGestureRecognition
_eventListeners
_zoomAttributeListeners
TB,D,N
TB,N
initWithType:identifier:
setAssertionType:
_notifyServerAssertionWasAcquired
_notifyServerAssertionWasRelinquished
initWithArray:
assertionType
_hasValidAssertionType
assertionWithType:identifier:
ensureAssertionsHaveBeenProcessedWithCompletion:
_assertionType
T@"NSString",&,N,V_assertionType
setHeldAssertionMap:
heldAssertionMap
enumerateKeysAndObjectsUsingBlock:
assertionWasAcquiredHandler
assertionWasReleasedHandler
allObjects
addHeldAssertionOfType:byClient:
removeHeldAssertionOfType:byClient:
clientsHoldingAssertionOfType:
setAssertionWasAcquiredHandler:
setAssertionWasReleasedHandler:
_assertionWasAcquiredHandler
_assertionWasReleasedHandler
_heldAssertionMap
T@"NSMutableDictionary",&,N,V_heldAssertionMap
T@?,C,N,V_assertionWasAcquiredHandler
T@?,C,N,V_assertionWasReleasedHandler
tokensToUpdateBlocks
fullKeyboardAccessCommandMapData
defaultCenter
mainQueue
addObserverForName:object:queue:usingBlock:
removeObserver:
commandWithStandardCommandIdentifier:
commands
allCategoriesForAvailableCommands:
setAvailableCommands:
archivedDataWithRootObject:requiringSecureCoding:error:
setFullKeyboardAccessCommandMapData:
setTokensToUpdateBlocks:
T@"FKAAvailableCommands",R,N
categories
commandMap
setCommandMap:
registerUpdateBlock:
unregisterUpdateBlockWithToken:
siriShortcutsDidChangeObserverToken
setSiriShortcutsDidChangeObserverToken:
forceTouchEnabledDidChangeObserverToken
setForceTouchEnabledDidChangeObserverToken:
_siriShortcutsDidChangeObserverToken
_forceTouchEnabledDidChangeObserverToken
_tokensToUpdateBlocks
T@"NSString",&,N,V_siriShortcutsDidChangeObserverToken
T@,&,N,V_forceTouchEnabledDidChangeObserverToken
T@"NSMutableDictionary",&,N,V_tokensToUpdateBlocks
T@"NSSet",R,N
T@"NSArray",R,N
T@"AXSSKeyboardCommandMap",&,N
arrayByAddingObject:
stringByReplacingOccurrencesOfString:withString:options:range:
_canUseIdleTimerServices
acquireAssertionToDisableIdleTimerWithReason:
initWithString:brailleString:
setWasDivided:
setObject:forVariant:
processString:brailleString:breakWords:withLanguage:atIndex:category:
axSafelyAddObjectsFromArray:
setString:
rangeOfString
indexSet
addIndexesInRange:
enumerateRangesUsingBlock:
numberWithFloat:
processStringsAndLanguages:brailleString:breakWords:withLanguage:atIndex:category:
addAttributesToAction:fromDictionary:
addEntriesFromDictionary:
axSafelyAddEntriesFromDictionary:
initWithMessage:completion:
message
setMessage:
completion
setCompletion:
_message
_completion
T@"AXIPCMessage",&,N,V_message
T@?,C,N,V_completion
serverClientRegistrationInvalidated:
port
initWithPort:identifier:
invalidationSource
_port
_invalidationSource
TI,R,N,V_port
T@"NSObject<OS_dispatch_source>",R,N,V_invalidationSource
T@"<AXIPCServerClientRegistrationDelegate>",W,N,V_delegate
initWithHandler:
initWithTarget:selector:async:
selector
async
_async
_handler
_selector
T@?,R,N,V_handler
T@,R,W,N,V_target
T:,R,N,V_selector
TB,R,N,V_async
setServiceName:
setHandlers:
setPerPidService:
setDelayedMessages:
initWithServiceName:perPidService:
serviceName
exceptionWithName:reason:userInfo:
_startServerThread
_handleErrorWithMessage:outError:
setRunning:
initWithInt:
handlers
removeHandlerForKey:
addPossibleRequiredEntitlement:forMessageWithKey:
setHandlerWithTarget:selector:async:forKey:
_registerContext:forKey:
setHandlerWithTarget:selector:forKey:
_addPossibleRequiredEntitlementsToMessageWithKey:first:vothers:
_clientIdentificationForAuditToken:
_applyCustomQueueSize
objectsPassingTest:
anyObject
isMainThread
perPidService
_handleClientInvalidation:
delayedMessages
_processValidatedMessage:completion:
_clientHasEntitlementWithPort:auditToken:message:completion:
_handleClientRegistration:
defaultHandler
errorWithDescription:
setServiceRunLoopSource:
setDefaultHandler:
clientInvalidationCallback
setClientInvalidationCallback:
setHandler:forKey:
setHandlerWithTarget:selector:forKey:possibleRequiredEntitlements:
setHandlerWithTarget:selector:async:forKey:possibleRequiredEntitlements:
removeAllHandlersForTarget:
removePossibleRequiredEntitlement:forMessageWithKey:
__slowpath__clientWithAuditToken:hasRequiredEntitlementFromSet:
setQueueSize:
_handleIncomingMessage:securityToken:auditToken:clientPort:completion:
machPort
_defaultHandler
_serverRunLoopSource
_serverPort
_connectedClients
_clientInvalidationHandler
_entitlements
_validSecurityTokens
_assignedServerPort
_customQueueSize
_running
_perPidService
_handlers
_delayedMessages
running
TB,N,GisRunning,V_running
T@"NSString",&,N,V_serviceName
T@"NSMutableDictionary",&,N,V_handlers
T@?,C,N
T@"NSMutableArray",&,N,V_delayedMessages
TB,N,V_perPidService
TI,R,N,V_serverPort
dataWithBytes:length:
_synchronizeDrawingAcrossProcessesOverPort:
setPostConnectionBlock:
initWithTargetAccessQueue:
setTimeoutTimer:
timeoutTimer
setDidTimeout:
_performTask
afterDelay:processWritingBlock:
postConnectionBlock
didTimeout
initWithConnectBlock:timeout:accessQueue:
performTask
_didTimeout
_postConnectionBlock
_timeoutTimer
T@?,C,N,V_postConnectionBlock
T@"AXAccessQueueTimer",&,N,V_timeoutTimer
TB,N,V_didTimeout
initialize
replyPort
registerOutstandingRequest:
replyMachPortSource
unregisterByPort:
replyQueue
replyHandler
_responseReceived:
lookupByPort:
initWithReplyPort:handlerQueue:handler:
registerAndListenForResponse
rawResponseReceived:
sendOnceRightDestroyed
initialSendAborted
_replyPort
_replyQueue
_replyHandler
_replyMachPortSource
T@"NSObject<OS_dispatch_queue>",R,N,V_replyQueue
TI,R,N,V_replyPort
T@?,R,N,V_replyHandler
T^{__CFRunLoopSource=},R,N,V_replyMachPortSource
weakObjectsPointerArray
addPointer:
setPostConnectionTasks:
initWithParentClass:description:appendUUIDToLabel:
setConnectionQueue:
_commonInit
compact
allClients
serverPort
clientIdentifier
_registerWithServer
shouldRegisterCallbackSourceOnMainRunloop
_sendRegistrationMessageWithRetries:
verifyConnectionExists
ax_errorWithDomain:description:
usesPerPidLookup
setConnected:
_handleErrorWithMessage:machError:outError:
_verifyConnectionWithError:
sendSimpleMessage:synchronizationPort:error:
_prepareToSendMessage:withError:prepSuccessHandler:
_createRegistrationWithReplyMachPort:forAsyncReplyOnQueue:responseHandler:
portDeathAccessQueue
mainAccessQueue
portDeathHandler
performAsynchronousWritingBlock:
connectionQueue
canWriteInCurrentExecutionThread
postConnectionTasks
_attemptToEstablishConnection
performSynchronousWritingBlock:
domain
code
errorWithDomain:code:userInfo:
initWithPort:
serviceMachPort
disconnectWithError:
_serverDied
establishConnectionWithTimeout:completion:
_descriptionForMachError:
setServerPort:
timeout
setUsesPerPidLookup:
setPid:
setPortDeathAccessQueue:
_serverPortLock
_assignedServerMachPort
_clientIdentifierLock
_portDeathHandler
_timeout
_clientIdentifier
_clientSource
_connectionAttempts
_outstandingAsyncRequests
_connected
_usesPerPidLookup
_pid
_postConnectionTasks
_connectionQueue
_portDeathAccessQueue
connected
TB,N,GisConnected,V_connected
T@"NSString",C,N,V_serviceName
T^{__CFMachPort=},N,V_serverPort
T@"NSMutableArray",&,N,V_postConnectionTasks
T@"AXAccessQueue",&,N,V_connectionQueue
TB,N,V_usesPerPidLookup
Ti,N,V_pid
TI,R,N
T@?,C,N,V_portDeathHandler
T@"AXAccessQueue",&,N,V_portDeathAccessQueue
Tf,N,V_timeout
T@"NSString",C,N,V_clientIdentifier
TI,R,N,VclientCallbackPort
T^{__CFRunLoopSource=},R,N,VclientCallbackSource
TB,N,VshouldRegisterCallbackSourceOnMainRunloop
_commonInitWithRunLoop:
getCFRunLoop
_existingDevicesForDevice:
informDelegate
minusSet:
deviceMonitorDidDetectDeviceEvent:
bluetoothKeyboardDevices
initWithMatchingDictionary:callbackRunLoop:
initWithMatchingMultiple:callbackRunLoop:
copyDevices
begin
didAddDevice:
didRemoveDevice:
_targetRunLoop
_hidManager
_state
_devices
_devicesLock
T@"<AXDeviceMonitorDelegate>",W,N,V_delegate
safeCategoryTargetClassName
entity
initWithMIDIEndpoint:entity:
manufacturer
model
receiveChannels
transmitChannels
isEmbedded
isBroadcast
isOffline
isPrivate
driverName
midiEndpoint
setMidiEndpoint:
setEntity:
_midiEndpoint
_entity
TI,N,V_midiEndpoint
T@"AXMIDIDeviceEntity",W,N,V_entity
T@"NSString",R,N
T@"NSNumber",R,N
_accessibilityIsSpeakThisTemporarilyDisabled
_accessibilitySetSpeakThisTemporarilyDisabled:
channel
setChannel:
note
setNote:
pressure
setPressure:
control
setControl:
controlValue
setControlValue:
program
setProgram:
pitchBend
setPitchBend:
numberWithUnsignedChar:
noteDescription
numberWithUnsignedShort:
ordinalChannel
noteValue
noteOctave
isDownEvent
isOmniChannel
_note
_pressure
_control
_controlValue
_program
_channel
_pitchBend
TS,N,V_channel
Tq,R,N
omniChannel
TB,R,N,GisOmniChannel
Tq,N,V_type
downEvent
TB,R,N,GisDownEvent
TC,N,V_note
TC,R,N
TC,N,V_pressure
TC,N,V_control
TC,N,V_controlValue
TC,N,V_program
TS,N,V_pitchBend
performAutomationTestingCommand:userInfo:timeout:completion:
lastSpokenPhrases
clearLastSpokenPhrases:
lastSpokenContents
lastSoundsPlayed
currentRotorName
lastScreenChange
currentFocusedElement
triggerGesture:
triggerCommand:
triggerCommand:withArgument:
isBrailleInputUIShowing
isHandwritingInputUIShowing
isBluetoothBrailleDisplayConnected
isScreenCurtainEnabled
TB,R,N,GisScreenCurtainEnabled
deviceID
supportsGeneralMIDI
supportsMMC
entities
numberWithLong:
sources
destinations
_entityForMidiEntity:addIfNeeded:
setDevice:
device:didRemoveEntity:
addMidiSource:
removeMidiSource:
addMidiDestination:
removeMidiDestination:
midiEntity
initWithMIDIEntity:device:
resetAndDetectEndpoints
device:didAddEntity:
device:entity:didAddSource:
device:entity:didRemoveSource:
device:entity:didAddDestination:
device:entity:didRemoveDestination:
entity:didAddSource:
entity:didRemoveSource:
entity:didAddDestination:
entity:didRemoveDestination:
initWithMIDIDevice:delegate:
fullDescription
supportsGeneralMMC
resetAndDetectEntities
addMidiEntity:
removeMidiEntity:
midiDevice
setMidiDevice:
setEntities:
_midiDevice
_supportsMMC
_entities
TI,N,V_midiDevice
T@"NSMutableSet",&,N,V_entities
T@"<AXMIDIDeviceProtocol>",W,N,V_delegate
T@"NSNumber",R,N,V_supportsMMC
setBundleHandlerMap:
setFrameworkHandlerMap:
setDylibHandlerMap:
setAppHandlerMap:
setAppExtensionHandlerMap:
setBinaryMonitorQueue:
allFrameworks
allBundles
bundlePath
axSafelyAddObject:
_handleLoadedImagePath:
_addHandler:withName:toMap:
pathExtension
binaryMonitorQueue
stringByDeletingLastPathComponent
_bundleNameAndType:
reverseObjectEnumerator
_loadImageIsFramework:
_frameworkNameForImage:
frameworkHandlerMap
_applyHandlerBlocks:handlerMap:
_loadImageIsBundle:
_bundleNameForImage:
bundleHandlerMap
_loadImageIsDylib:
_dylibNameForImage:
dylibHandlerMap
_loadImageIsAppExtension:
_appExtensionNameForImage:
appExtensionHandlerMap
_loadImageIsApp:
_appNameForImage:
appHandlerMap
evaluateExistingBinaries
addHandler:forBundleID:
addHandler:forBundleName:
addHandler:forFramework:
addHandler:forDylib:
addHandler:forAppExtension:
addHandler:forApp:
_bundleHandlerMap
_frameworkHandlerMap
_dylibHandlerMap
_appHandlerMap
_appExtensionHandlerMap
_binaryMonitorQueue
T@"NSMutableDictionary",&,N,V_bundleHandlerMap
T@"NSMutableDictionary",&,N,V_frameworkHandlerMap
T@"NSMutableDictionary",&,N,V_dylibHandlerMap
T@"NSMutableDictionary",&,N,V_appHandlerMap
T@"NSMutableDictionary",&,N,V_appExtensionHandlerMap
T@"NSObject<OS_dispatch_queue>",&,N,V_binaryMonitorQueue
stringWithCString:encoding:
setDateFormat:
dateFromString:
autoupdatingCurrentLocale
dateFormatFromTemplate:options:locale:
stringFromDate:
setTimeZone:
setZeroFormattingBehavior:
setUnitsStyle:
setAllowedUnits:
stringFromTimeInterval:
componentsSeparatedByString:
componentsJoinedByString:
localizedStringWithFormat:
setSecond:
second
setNanosecond:
stringFromDateComponents:
autoupdatingCurrentCalendar
date
components:fromDate:toDate:options:
hour
month
year
localizedStringFromDateComponents:unitsStyle:
currentCalendar
component:fromDate:
setByAddingObjectsFromSet:
secureUnarchiveData:withExpectedClass:otherAllowedClasses:
activeRestrictionIdentifiers
setNumberStyle:
stringFromNumber:
setUuid:
builtIn
uuid
textualContexts
appIdentifiers
punctuationGroup
voiceIdentifier
speechRate
volume
soundMuted
speechMuted
audioDucking
modifierKeys
brailleTable
brailleStatusCellGeneral
brailleStatusCellText
tableHeaders
tableRowAndColumn
speakEmojis
imageDescriptions
containerFeedback
numberFeedback
brailleOutput
brailleInput
brailleAutoAdvanceDuration
hints
setTextualContexts:
setAppIdentifiers:
setPunctuationGroup:
setVoiceIdentifier:
setSpeechRate:
setVolume:
setSoundMuted:
setSpeechMuted:
setAudioDucking:
setModifierKeys:
setBrailleStatusCellGeneral:
setBrailleStatusCellText:
setBrailleTable:
setSpeakEmojis:
setImageDescriptions:
setContainerFeedback:
setNumberFeedback:
setTableRowAndColumn:
setTableHeaders:
setBrailleOutput:
setBrailleInput:
setBrailleAutoAdvanceDuration:
setHints:
setBuiltIn:
identicalProperty:property2:
observerKeys
isIdenticalTo:
_builtIn
_name
_uuid
_textualContexts
_appIdentifiers
_punctuationGroup
_tableHeaders
_tableRowAndColumn
_speakEmojis
_containerFeedback
_imageDescriptions
_hints
_numberFeedback
_voiceIdentifier
_speechRate
_volume
_speechMuted
_soundMuted
_audioDucking
_modifierKeys
_brailleStatusCellGeneral
_brailleStatusCellText
_brailleTable
_brailleOutput
_brailleInput
_brailleAutoAdvanceDuration
T@"NSString",&,N,V_name
T@"NSUUID",&,N,V_uuid
T@"NSSet",&,N,V_textualContexts
T@"NSSet",&,N,V_appIdentifiers
T@"NSUUID",&,N,V_punctuationGroup
T@"NSNumber",&,N,V_tableHeaders
T@"NSNumber",&,N,V_tableRowAndColumn
T@"NSNumber",&,N,V_speakEmojis
T@"NSNumber",&,N,V_containerFeedback
T@"NSNumber",&,N,V_imageDescriptions
T@"NSNumber",&,N,V_hints
T@"NSNumber",&,N,V_numberFeedback
T@"NSString",&,N,V_voiceIdentifier
T@"NSNumber",&,N,V_speechRate
T@"NSNumber",&,N,V_volume
T@"NSNumber",&,N,V_speechMuted
T@"NSNumber",&,N,V_soundMuted
T@"NSNumber",&,N,V_audioDucking
T@"NSNumber",&,N,V_modifierKeys
T@"NSNumber",&,N,V_brailleStatusCellGeneral
T@"NSNumber",&,N,V_brailleStatusCellText
T@"NSString",&,N,V_brailleTable
T@"NSNumber",&,N,V_brailleOutput
T@"NSNumber",&,N,V_brailleInput
T@"NSNumber",&,N,V_brailleAutoAdvanceDuration
TB,N,V_builtIn
setValidationReportingServices:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
_resetState
shouldPerformValidationChecks
validationTargetName
setValidationTargetName:
numberOfValidationErrors
overrideProcessName
sendValidationSuccessForProcessName:
_printConsoleReport:isDelayed:
_clearState
setOverrideProcessName:
setShouldPerformValidationChecks:
setNumberOfValidationErrors:
setNumberOfValidationWarnings:
setForceDoNotReport:
setDebugBuild:
setNumberOfValidations:
setShouldLogToConsole:
setShouldCrashOnError:
setShouldReportToServer:
setConsoleErrorMessages:
setConsoleWarningMessages:
isDebugBuild
numberOfValidations
stringWithString:
consoleErrorMessages
numberOfValidationWarnings
consoleWarningMessages
client:validateClass:
sendValidateExceptionForClass:errorMessage:overrideProcessName:
client:validateClass:isKindOfClass:
sendValidateExceptionForClass:isKindOfClass:errorMessage:overrideProcessName:
client:validateClass:hasInstanceVariable:withType:
sendValidateExceptionForClass:hasInstanceVariable:errorMessage:overrideProcessName:
_iterateMethodsOfType:onClass:block:
sendValidateExceptionForClass:hasInstanceMethod:errorMessage:overrideProcessName:
sendValidateExceptionForClass:hasClassMethod:errorMessage:overrideProcessName:
_client:validateClass:hasClassMethod:withFullSignature:argList:
_client:validateClass:hasMethod:methodType:returnType:arguments:
client:validateClass:hasInstanceMethod:withFullSignature:argList:
client:validateClass:hasProperty:customGetter:customSetter:withType:
sendValidateExceptionForClass:hasProperty:errorMessage:overrideProcessName:
client:validateClass:conformsToProtocol:
sendValidateExceptionForClass:conformsToProtocol:errorMessage:overrideProcessName:
client:validateProtocol:conformsToProtocol:
sendValidateExceptionForProtocol:conformsToProtocol:errorMessage:overrideProcessName:
client:validateProtocol:hasMethod:isInstanceMethod:isRequired:
sendValidateExceptionForProtocol:hasMethod:errorMessage:overrideProcessName:
client:validateProtocol:hasOptionalInstanceMethod:
client:validateProtocol:hasRequiredInstanceMethod:
addObjectsFromArray:
_generateWarningsForMethodType:onClass:superclassMethods:numberOfSuperclassMethods:
_nameForMethod:
_generateWarningsForPrefixedMethodNames:client:methodType:methodName:className:
installSafeCategory:canInteractWithTargetClass:
_installSafeCategoryValidationMethod
axTrampolineForClass:
_accessibilityPerformValidations:
defaultLoader
codeItemForBundle:
associatedAccessibilityCodeItem
_initializeSafeCategoryFromValidationManager
_generateWarningsOnSafeCategoryClass:
sendExceptionForSafeCategoryOnWrongTarget:targetBundle:expectedBundle:overrideProcessName:
sendExceptionForInstallingSafeCategory:onTarget:overrideProcessName:
validationReportingServices
sendExceptionForSafeValueKey:onTarget:overrideProcessName:backtrace:
sendGenericReport:withTag:overrideProcessName:
sendValidateExceptionForProtocol:hasProperty:errorMessage:overrideProcessName:
sendFailedAssertionWithErrorMessage:overrideProcessName:
sendFailedTestCase:withTag:overrideProcessName:
performValidations:withPreValidationHandler:postValidationHandler:
installSafeCategories:afterDelay:validationTargetName:overrideProcessName:
validateClass:
validateClass:isKindOfClass:
validateClass:hasInstanceVariable:withType:
_client:validateClass:hasMethod:methodType:
validateClass:hasClassMethod:withFullSignature:
client:validateClass:hasClassMethod:withFullSignature:
client:validateClass:hasInstanceMethod:withFullSignature:
validateClass:hasInstanceMethod:withFullSignature:
validateClass:hasProperty:withType:
validateClass:hasProperty:customGetter:customSetter:withType:
client:validateClass:hasProperty:withType:
validateClass:conformsToProtocol:
validateProtocol:conformsToProtocol:
validateProtocol:hasMethod:isInstanceMethod:isRequired:
validateProtocol:hasOptionalInstanceMethod:
validateProtocol:hasRequiredInstanceMethod:
validateProtocol:hasOptionalClassMethod:
client:validateProtocol:hasOptionalClassMethod:
validateProtocol:hasRequiredClassMethod:
client:validateProtocol:hasRequiredClassMethod:
installSafeCategory:
shouldLogToConsole
shouldCrashOnError
shouldReportToServer
forceDoNotReport
_shouldLogToConsole
_shouldCrashOnError
_shouldReportToServer
_forceDoNotReport
_debugBuild
_shouldPerformValidationChecks
_numberOfValidationErrors
_validationTargetName
_overrideProcessName
_consoleErrorMessages
_validationReportingServices
_numberOfValidations
_numberOfValidationWarnings
_consoleWarningMessages
TB,N,V_shouldPerformValidationChecks
TB,N,V_shouldLogToConsole
TB,N,V_shouldCrashOnError
TB,N,V_shouldReportToServer
TQ,N,V_numberOfValidations
TQ,N,V_numberOfValidationErrors
T@"NSMutableArray",&,N,V_consoleErrorMessages
TQ,N,V_numberOfValidationWarnings
T@"NSMutableArray",&,N,V_consoleWarningMessages
T@"<AXValidationReportingServices>",&,N,V_validationReportingServices
TB,N,V_forceDoNotReport
T@"NSString",C,N,V_validationTargetName
T@"NSString",C,N,V_overrideProcessName
debugBuild
TB,N,GisDebugBuild,V_debugBuild
setPathIndex:
setPathIdentity:
setPathProximity:
setPathPressure:
setPathMajorRadius:
setPathLocation:
setPathWindowContextID:
setPathWindow:
pathIdentity
pathProximity
pathPressure
pathMajorRadius
pathLocation
pathWindowContextID
pathWindow
pathMajorRadiusTolerance
setPathMajorRadiusTolerance:
pathTwist
setPathTwist:
pathMinorRadius
setPathMinorRadius:
pathQuality
setPathQuality:
pathDensity
setPathDensity:
pathEventMask
setPathEventMask:
orbValue
setOrbValue:
setTransducerType:
altitude
setAltitude:
azimuth
setAzimuth:
barrelPressure
setBarrelPressure:
willUpdateMask
setWillUpdateMask:
didUpdateMask
setDidUpdateMask:
decodeFloatForKey:
decodeInt64ForKey:
encodeFloat:forKey:
representationWithPathInfo:
writeToPathInfo:
shouldSetTouchFlag
setShouldSetTouchFlag:
_pathIndex
_pathIdentity
_pathProximity
_shouldSetTouchFlag
_pathWindowContextID
_pathPressure
_pathMajorRadius
_pathMinorRadius
_pathMajorRadiusTolerance
_pathTwist
_pathQuality
_pathDensity
_pathEventMask
_orbValue
_transducerType
_altitude
_azimuth
_barrelPressure
_willUpdateMask
_didUpdateMask
_pathWindow
_pathLocation
T^v,N,V_pathWindow
TC,N,V_pathIndex
TC,N,V_pathIdentity
T{CGPoint=dd},N,V_pathLocation
TI,N,V_pathWindowContextID
TC,N,V_pathProximity
Tf,N,V_pathPressure
Tf,N,V_pathMajorRadius
Tf,N,V_pathMinorRadius
Tf,N,V_pathMajorRadiusTolerance
Tf,N,V_pathTwist
Tf,N,V_pathQuality
Tf,N,V_pathDensity
TI,N,V_pathEventMask
Tf,N,V_orbValue
TI,N,V_transducerType
Tf,N,V_altitude
Tf,N,V_azimuth
Tf,N,V_barrelPressure
TI,N,V_willUpdateMask
TI,N,V_didUpdateMask
TB,N,V_shouldSetTouchFlag
firstPath
T@"AXEventPathInfoRepresentation",R,N
axCGPointValue
axCGSizeValue
axCGRectValue
axValueWithCGPoint:
axValueWithCGSize:
axValueWithCGRect:
initWithImageMonitor:
_platformKeyForPlatform:
_loadAccessibilityCodeItems
shouldLoadAccessibilityCodeItemBlock
didLoadAccessibilityCodeItemBlock
loadEventWillOccurBlock
loadEventDidOccurBlock
isTrackingLoadedCodeItems
_updateAccessibilityCodeItemDefinitionsIfNeeded
addImageMonitorObserver:
removeImageMonitorObserver:
trackingMode
member:
setIsLoaded:
isAccessibilityBundle
_associateAccessibilityCodeItemWithLoadedCodeItem:
setWithCapacity:
loadedImagePaths
initWithPath:isDyldOpened:
enumerateLoadedImagePaths:
_queue_loadedCodeItemsUsingTrackedItemsIfAvailable:
_consumeBeginTrackingCompletionHandlerIfNeeded
shouldAutoloadAccessibilityCodeItems
_accessibilityBundleMapURLs
_createAccessibilityCodeItemsFromBundleMapURLs:
_reconcileTrackedCodeItemsWithAccessibilityCodeItemDefinitions
_initializeCodeItemMappings
platformToTarget
targetType
stringValue
setPlatformToTarget:
setTargetType:
loadOrder
setLoadOrder:
ax_replaceWithMatchingObject:updatingWithBlock:
_associateAccessibilityCodeItemsWithAllTrackedCodeItems
_accessibilityCodeItemMatchingName:type:path:
setAssociatedAccessibilityCodeItem:
setTargetCodeItem:
fileURLWithPathComponents:
decodedCodeItemsFromURL:decodingErrors:
setWithSet:
intersectSet:
addPlatformToTargetEntries:
unionSet:
_validLoadEventWillOccurBlock
_validShouldLoadAccessibilityCodeItemBlock
ax_filteredSetUsingBlock:
ax_flatMappedSetUsingBlock:
orderedSetWithSet:
_validDidLoadAccessibilityCodeItemBlock
loadWithStrategy:onQueue:completion:
_validLoadEventDidOccurBlock
loadedAtTimestamp
_addTrackedCodeItem:
_scheduleDyldImageActivityTimerWithDelay:
loadedCodeItemsUsingTrackedItemsIfAvailable:
imageMonitor:didAddImage:
iterateInitialImageListForImageMonitor:
isInitialLoadFinished
beginTrackingLoadedCodeItemsWithMode:completion:targetQueue:
endTrackingLoadedCodeItemsWithCompletion:targetQueue:
loadedCodeItemPathsUsingTrackedItemsIfAvailable:
setAccessibilityCodeItemsNeedLoaded
_cancelDyldImageActivityTimer
prewarmAccessibilityCodeItemDefinitionsWithCompletion:targetQueue:
queryAccessibilityBundleIsLoadedWithName:completion:
setTrackingMode:
setShouldAutoloadAccessibilityCodeItems:
setShouldLoadAccessibilityCodeItemBlock:
setDidLoadAccessibilityCodeItemBlock:
setLoadEventWillOccurBlock:
setLoadEventDidOccurBlock:
_imageMonitor
_loadAccessibilityCodeItemsSource
_dyldImageActivityCoalesceTimer
_monitoredLoadTriggeringImageCountSinceLastLoad
_trackedCodeItems
_accessibilityCodeItems
_codeItemsByNameType
_beginTrackingCompletion
_beginTrackingCompletionQueue
_initialLoadHasOccurred
_initialLoadHasFinished
_currentPlatformKey
_shouldAutoloadAccessibilityCodeItems
_trackingMode
_shouldLoadAccessibilityCodeItemBlock
_didLoadAccessibilityCodeItemBlock
_loadEventWillOccurBlock
_loadEventDidOccurBlock
Tq,N,V_trackingMode
TB,N,V_shouldAutoloadAccessibilityCodeItems
T@?,C,N,V_shouldLoadAccessibilityCodeItemBlock
T@?,C,N,V_didLoadAccessibilityCodeItemBlock
T@?,C,N,V_loadEventWillOccurBlock
T@?,C,N,V_loadEventDidOccurBlock
debugCodeTypeDescription
targetCodeItem
_stateDescForItem:
recomputedCodeItemsForAllFrameworks
recomputedCodeItemsForLoadedAccessibilityBundles
accessibilityCodeItemDefinitions
logLoaderState
trackedCodeItems
rogueAccessibilityCodeItems
setX:
setY:
setZ:
TI,N,V_type
Tf,N,V_x
Tf,N,V_y
Tf,N,V_z
initWithCaller:targetClass:
methodDoesNotExistSentinal
methodSignatureForSelector:
caller
targetClass
methodSignature
methodNotFoundSentinal
warnAboutUnknownSelectors
_findIMPForSelector:
invokeUsingIMP:
callerIsClass
trampolineWithCaller:targetClass:
forwardInvocation:
setCaller:
setTargetClass:
setWarnAboutUnknownSelectors:
_warnAboutUnknownSelectors
_caller
_targetClass
T@,W,N,V_caller
T#,W,N,V_targetClass
TB,N,V_warnAboutUnknownSelectors
axSuperTrampoline
currentSharedInstance
setPath:
_path
T^{CGPath=},N,V_path
raise:format:arguments:
ignoreAXAsserts
sleepForTimeInterval:
outputs
portType
owningPortUID
category
setCategory:withOptions:error:
currentRoute
audioFormats
updateTestingChannels
enableMultiroute
channels
disableMultiroute
channelWithChannel:
defaultPort
channelsForPort:
compare:
_audioHardwareChannelLayout
_savedIdForRouteDescription:
channelNumber
_handleSurroundSoundDefaults:returnedChannels:port:source:
channelLabel
_setAudioHardwareChannelLayout:
channelsAreAirplay:route:
channelsAreWiredHeadphones:
setDefaultPortChannels:
setDefaultRouteDescription:
defaultRouteDescription
defaultPortChannels
setDefaultPort:
isDolbyAtmosConfigured
savedChannelsForOutput:forSource:
setSavedChannels:forOutput:forSource:
setLastUtteranceSubstringRange:
setLastSpokenSubstringRange:
setSpeakingContext:
setAdditionalContentToProcess:
_respeakUtteranceIfNeeded
quickSpeakSpeakingRate
selectedContent
content
setSelectedContent:
stringByReplacingFatWidthCharactersWithBasicCharacters:
initWithContent:
tagContent
_canSpeakTaggedContent:
isProcessingContentForSpeech
tags
additionalContentToProcess
appendLanguageTaggedContent:
speechSequenceItems
_getLangCodeForItem:
dialectForSystemLanguage
specificLanguageID
lastUtteranceLanguageCode
speechVoiceIdentifierForLanguage:source:exists:
setSupportsAccurateWordCallbacks:
setSkipLuthorRules:
startSpeakingWithPreferredLanguage:delayBeforeStart:error:
setCurrentLanguageCode:
setPreferredLanguageWasSpecified:
primaryUnambiguousDialect
primaryAmbiguousDialect
speechSynthesizer
setSpeechSynthesizer:
setIsInternalSynth:
setUsesApplicationAudioSession:
supportsAccurateWordCallbacks
skipLuthorRules
_updateAudioSessionCategory
setUserPreferredLangID:
_startSpeakingSequence
speakingContent
isSpeaking
pauseSpeakingAtBoundary:
_successWithCode:error:
lastUtterance
_clearAllContentState
setLastUtterance:
stopSpeakingAtBoundary:
resumeSpeakingAfterDelay:error:
shouldSpeakNextItemOnResume
setShouldSpeakNextItemOnResume:
_speakNextItemInSequence
oratorDidResumeSpeaking:
continueSpeaking
_useLanguageSpecificSpeakingRate
quickSpeakSpeakingRateForLanguage:
_changeSpeakingSpeed:usingLanugageSpecificRate:
currentSpeechRateForAdjustment
_skipByUnit:boundary:
stringByAppendingPathComponent:
speechUtteranceWithString:
setVoice:
voiceWithLanguage:
systemLanguageID
audioSession
setRate:
speakUtterance:
setSpeakingContent:
setSpeakingContentTokenRanges:
setSpeechSequenceItems:
_updateSequenceForSpellOutBehavior
spellOutContent
range
setRange:
preferredLanguageWasSpecified
userPreferredLangID
canBeSpokenByLanguage:
dialect
wasPredicted
_processAdditionalContentInPreparationForSpeech
oratorShouldFetchNextElements:shouldScrollOpaqueProviderIfNecessary:
oratorDidFinishSpeaking:
currentLanguageCode
createdFromNewline
contentSubstring
newlineCharacterSet
setUseMonarchStyleSpeechRate:
setProcessEmoticons:
setLastUtteranceLanguageCode:
setLastUtteranceLanguageTag:
rate
oratorDidChangeSpeakingRate:
setQuickSpeakSpeakingRate:forLanguage:
setQuickSpeakSpeakingRate:
lastSpokenSubstringRange
lastUtteranceLanguageTag
lastUtteranceSubstringRange
speakingContentTokenRanges
enumerateObjectsWithOptions:usingBlock:
numberOfTokensToSkip
_speechSequenceItemsStartingAtContentLocation:
_tokenizeContentIfNeeded
_currentTokenIndex:
_speakNextTokenFromCurrentTokenIndex:forward:boundary:
lastObject
valueWithRange:
setNumberOfTokensToSkip:
setAudioSessionInactiveTimeout:
setIsProcessingContentForSpeech:
speakingContext
setSetActiveOptions:
setAudioSessionCategory:
setAudioSessionCategoryOptions:
ambiguousLangMaps
unambiguousLangMaps
oratorDidPauseSpeaking:
oratorDidStartSpeaking:
oratorDidCancelSpeaking:
orator:willSpeakRange:ofContent:
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:didCancelSpeechUtterance:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
setContent:
addAdditionalContentToSpeechQueue:
currentVoiceIdentifier
startSpeakingWithPreferredLanguage:error:
pauseSpeaking:
stopSpeaking:
resumeSpeaking:
setSpeakingRate:
speakFaster
speakSlower
fastForwardWithBoundary:
rewindWithBoundary:
speakStatusWithLanguage:rate:
contentIsSpeakable
canResumeWithContent:
clearSelectedContent
setSpellOutContent:
audioSessionInactiveTimeout
_statusUtterance
_contentIsSpeakable
_audioSessionTimer
_spellOutContent
_supportsAccurateWordCallbacks
_skipLuthorRules
_shouldSpeakNextItemOnResume
_preferredLanguageWasSpecified
_isProcessingContentForSpeech
_speakingContext
_selectedContent
_audioSessionInactiveTimeout
_speakingContent
_speakingContentTokenRanges
_numberOfTokensToSkip
_speechSynthesizer
_speechSequenceItems
_lastUtteranceLanguageCode
_lastUtterance
_lastUtteranceLanguageTag
_currentLanguageCode
_additionalContentToProcess
_lastSpokenSubstringRange
_lastUtteranceSubstringRange
T@"AXLanguageTaggedContent",&,N,V_selectedContent
T@"AXLanguageTaggedContent",&,N,V_speakingContent
T@"NSArray",&,N,V_speakingContentTokenRanges
TQ,N,V_numberOfTokensToSkip
T@"AVSpeechSynthesizer",&,N,V_speechSynthesizer
T@"NSMutableArray",&,N,V_speechSequenceItems
T@"NSString",&,N,V_lastUtteranceLanguageCode
T{_NSRange=QQ},N,V_lastUtteranceSubstringRange
T{_NSRange=QQ},N,V_lastSpokenSubstringRange
T@"AVSpeechUtterance",&,N,V_lastUtterance
T@"AXLanguageTag",&,N,V_lastUtteranceLanguageTag
TB,N,V_shouldSpeakNextItemOnResume
T@"NSString",&,N,V_currentLanguageCode
TB,N,V_preferredLanguageWasSpecified
TB,N,V_isProcessingContentForSpeech
T@"NSMutableArray",&,N,V_additionalContentToProcess
T@"<AXOratorDelegate>",W,N,V_delegate
T@"NSString",C,N
Tq,N,V_speakingContext
TB,N,V_spellOutContent
TB,N,V_supportsAccurateWordCallbacks
TB,N,V_skipLuthorRules
Td,N,V_audioSessionInactiveTimeout
setBundleIdentifier:
setLayoutRole:
isLayoutPrimary
isLayoutFullscreenModal
layoutRole
appWithPID:bundleID:
_bundleIdentifier
_layoutRole
T@"NSString",&,N,V_bundleIdentifier
Tq,N,V_layoutRole
setDirectionPadUp:
setDirectionPadDown:
setDirectionPadLeft:
setDirectionPadRight:
setFaceButtonA:
setFaceButtonB:
setFaceButtonX:
setFaceButtonY:
setShoulderButtonL1:
setShoulderButtonL2:
setShoulderButtonR1:
setShoulderButtonR2:
setLeftJoystickX:
setLeftJoystickY:
setRightJoystickX:
setRightJoystickY:
setLeftJoystickButton:
setRightJoystickButton:
setMenuButton:
setViewButton:
setHomeButton:
axGameControllerKeyCodeForEvent:
axGameControllerInfoRepresentationFromEvent:
contactlessInterfaceCanBePresentedFromSource:
sharedPreferences
assistantIsEnabled
TB,N,S_axSetIsWrappedPointer:
setNonRetainedObject:
initWithObject:
nonRetainedObject
_nonRetainedObject
T@,W,N,V_nonRetainedObject
longValue
initWithDouble:
valueWithRect:
localizedStringForKey:value:table:
arrayWithObject:
axMapObjectsUsingBlock:
URLForResource:withExtension:subdirectory:localization:
dictionaryWithContentsOfURL:
allKeys
setObject:forIndex:
verbosenessDictionaryForLevel:
punctuationDictionaryForLevel:
objectForIndex:
getCharacters:range:
stringWithCharacters:length:
defaultCStringEncoding
initWithCString:encoding:
weakObjectsHashTable
_dyldDidAddImage:
queue
_imageMonitorObservers
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
_descriptionForDistance:
_visibilityDescriptionForObjectFrame:viewBounds:
setUnitStyle:
setUnitOptions:
numberFormatter
setMaximumFractionDigits:
meters
initWithDoubleValue:unit:
stringFromMeasurement:
_valueForPercentageFromRawValue:
descriptionForDistance:objectFrame:viewBounds:
setWestern:
setAmbiguous:
setRtl:
setGeneralLanguageID:
setAlternateLanguageIDs:
setDialects:
setAssociatedAmbiguousLanguages:
generalLanguageID
dialects
setValue:forKey:
locale
setUserPreferredDialect:
basicDescription
alternateLanguageIDs
isWestern
isAmbiguous
userPreferredDialect
userLocale
userLocaleDialect
initWithLanguageID:isWestern:isAmbiguous:isRTL:dialects:alternateLanguageIDs:associatedAmbiguousLanguages:
defaultDialect
dialectWithLocaleIdentifier:
associatedAmbiguousLanguages
isRTL
_western
_ambiguous
_rtl
_dialects
_generalLanguageID
_userPreferredDialect
_alternateLanguageIDs
_associatedAmbiguousLanguages
western
TB,N,GisWestern,V_western
TB,N,GisRTL,V_rtl
ambiguous
TB,N,GisAmbiguous,V_ambiguous
T@"NSString",C,N,V_generalLanguageID
T@"NSArray",&,N,V_alternateLanguageIDs
T@"NSArray",&,N,V_dialects
T@"NSArray",&,N,V_associatedAmbiguousLanguages
T@"AXDialectMap",R,N
T@"AXDialectMap",R,N,VuserLocaleDialect
T@"AXDialectMap",W,N,V_userPreferredDialect
switchWithAction:name:source:type:
setASwitch:
_filterEvents:
_isSwitchWithSource:keyCode:buttonNumber:ATVRemoteButtonUsage:midiEvent:
assistiveTouchSwitches
source
keyCode
buttonNumber
midiEvent
switchRegistrarShouldFilterEvents:
switchRegistrarShouldProcessKeyboardKeyEvent:
addLongPressSwitch
_isKeyboardSwitchWithKeyCode:longPress:
switchRegistrarKeyboardKeyAlreadyInUseForSwitch:
aSwitch
setKeyCode:
setSource:
switchRegistrar:didUpdateSwitch:
switchRegistrarShouldProcessGamepadEvent:
_isGamepadSwitchWithKeyCode:longPress:
switchRegistrarGamepadSourceAlreadyInUseForSwitch:
switchRegistrarShouldProcessMIDIEvent:
_isMIDISwitchWithMidiEvent:
switchRegistrarMIDISourceAlreadyInUseForSwitch:
setMidiEvent:
_isATVRemoteButtonSwitchWithUsage:longPress:
switchRegistrarMFIButtonAlreadyInUseForSwitch:
setButtonNumber:
switchRegistrarShouldProcessMFIButtonEvent:
_isMFISwitchWithButtonNumber:longPress:
device
eventSystemClient
manager
setEventSystemClient:
_mfiMatching
setManager:
_handleMIDIEvent:device:entity:source:
initWithIdentifier:eventHandler:
setMidiManager:
beginFilteringEvents
endFilteringEvents
isSwitchWithName:
firstAvailableName
_handleApplicationDidBecomeActive:
_handleApplicationWillResignActive:
_handleKeyboardKeyDownEvent:
_handleGamepadButtonPressedEvent:
_handleATVRemoteButtonDownEvent:
_handleMFIButtonDownValue:
_keyboardMatching
_atvRemoteMatching
_gamepadMatching
setAddLongPressSwitch:
midiManager
_addLongPressSwitch
_aSwitch
_device
_eventSystemClient
_manager
_midiManager
T@"AXSwitch",&,N,V_aSwitch
T^{__IOHIDDevice=},&,N,V_device
T^{__IOHIDEventSystemClient=},&,N,V_eventSystemClient
T^{__IOHIDManager=},&,N,V_manager
T@"AXMIDIManager",&,N,V_midiManager
T@"<AXSwitchRegistrarDelegate>",W,N,V_delegate
TB,N,V_addLongPressSwitch
keyInfo
unmodifiedInput
modifierState
keyChordWithKeys:
keys
keyChordByUpdatingModifiersFromEvent:
keyChordWithEvent:
setAction:
setLongPressAction:
setGesture:
setLongPressGesture:
setHoldPoint:
setOptional:
initWithUUIDString:
setSwitchUUID:
setSwitchOriginalAction:
dictionaryWithCapacity:
action
longPressAction
gesture
holdPoint
longPressGesture
switchUUID
isOptional
switchOriginalAction
recipeMappingWithDictionaryRepresentation:
dictionaryRepresentation
_optional
_action
_longPressAction
_gesture
_longPressGesture
_switchUUID
_switchOriginalAction
_holdPoint
T@"NSString",C,N,V_action
T@"NSString",C,N,V_longPressAction
T@"AXReplayableGesture",&,N,V_gesture
T@"AXReplayableGesture",&,N,V_longPressGesture
T{CGPoint=dd},N,V_holdPoint
optional
TB,N,GisOptional,V_optional
T@"NSUUID",C,N,V_switchUUID
Tq,N,V_switchOriginalAction
setUnlocalizedName:
setMappings:
setMenuIconIdentifier:
unlocalizedName
mappings
menuIconIdentifier
recipeWithDictionaryRepresentation:
shouldContinueScanning
_mappings
_unlocalizedName
_menuIconIdentifier
T@"NSArray",&,N,V_mappings
Td,N,V_timeout
T@"NSString",&,N,V_unlocalizedName
T@"NSString",C,N,V_menuIconIdentifier
setLocale:
setVoiceName:
setSpeakableCharacters:
setSecondaryLanguageRange:
setSpecificLanguageID:
langMap
voiceName
langManager
languageCode
displayNameForKey:value:
capitalizedStringWithLocale:
componentsFromLocaleIdentifier:
nonlocalizedNameForLanguage:
secondaryLanguageRange
canSpeakCharacter:allowTransliteration:
speakableCharacters
speakingRequiresTransliteration
_transliteratedSpeechCharacters
longCharacterIsMember:
canSpeakString:allowsTransliteration:
isCharacterCommon:
languageIdentifier
_languageIsKorean
_stringByTransliterationHanjaToHangul:
_hanjaCharacterSet
pathForResource:ofType:
dictionaryWithContentsOfFile:
_hanjaToHangulMap
stringByReplacingCharactersInRange:withString:
handleFailureInMethod:object:file:lineNumber:description:
initWithLocale:voiceName:specificLanguageID:speakableCharacters:secondaryLanguageRange:
regionID
languageNameInCurrentLocale
languageNameInNativeLocale
languageNameAndLocaleInCurrentLocale
languageNameAndLocaleInNativeLocale
isDialectSecondaryForCharacter:
canSpeakCharacter:
canSpeakLongCharacter:
canSpeakString:
transliteratedStringForString:
setLangMap:
_langMap
_voiceName
_locale
_specificLanguageID
_speakableCharacters
_secondaryLanguageRange
T@"AXLangMap",W,N,V_langMap
T@"NSLocale",&,N,V_locale
T@"NSString",C,N,V_voiceName
T@"NSCharacterSet",&,N,V_speakableCharacters
T@"NSString",C,N,V_specificLanguageID
T@"AXLanguageManager",R,N
T@"NSCharacterSet",&,N,V_secondaryLanguageRange
dataWithLength:
mutableBytes
localizedStringForLanguage:context:
arrayWithContentsOfFile:
stringByReplacingEmojiCharactersWithEmojiDescriptions:stringForPauses:language:rangeReplacements:appendEmojiSuffix:
characterSetWithRange:
setUserLocale:
_handleUserLocaleDidChange:
addObserver:selector:name:object:
formUnionWithCharacterSet:
controlCharacterSet
setCommonCharacters:
dialectForCurrentLocale
dialectForCurrentRegion
_loadLangMaps
updateCachedDialects
outputLanguageIdentifierForLanguage:
langMaps
dialectsThatCanSpeakCharacter:overridePreferredLanguages:allowTransliteration:
dialectsThatCanSpeak:dialectIsSecondary:overridePreferredLanguages:
dialectsThatCanSpeakString:overridePreferredLanguages:
preferredLanguageIDsFromUserSelectedKeyboards
commonCharacters
rangeOfCharacterFromSet:options:range:
setDialectForSystemLanguage:
setDialectForCurrentLocale:
setDialectForCurrentRegion:
descriptionOfWord:forLanguage:
addCharactersInRange:
initWithLocaleIdentifier:
characterSetForRanges:
set_unitTest_didUpdateForLocaleChange:
_unitTest_didUpdateForLocaleChange
voiceOverSupportedInCurrentLanguage
commonPunctuationCharacters
doNotTranslateWords
stringByReplacingEmojiCharactersWithEmojiDescriptions:
nameForAlternativeVoiceIdentifier:
dialectForAlternativeVoiceIdentifier:
dialectForUserLocale
dialectsThatCanSpeakCharacter:
dialectsThatCanSpeakCharacter:overridePreferredLanguages:
dialectsThatCanSpeakString:
dialectThatCanSpeakCharacter:
ambiguousDialectsFromUserKeyboardPreferences
isStringComposedByCommonCharacters:
didUpdateForLocaleChange
setLangMaps:
_dialectForSystemLanguage
_dialectForCurrentLocale
_dialectForCurrentRegion
_languageFallbackLock
_languageFallbacks
__unitTest_didUpdateForLocaleChange
_langMaps
_commonCharacters
_userLocale
T@"NSArray",&,N,V_langMaps
T@"NSLocale",C,N,V_userLocale
T@"NSCharacterSet",&,N,V_commonCharacters
T@"AXDialectMap",W,N
TB,N,V__unitTest_didUpdateForLocaleChange
T@"AXDialectMap",R,W,N
displayNameForLanguage:
displayNameForLanguage:displayLanguage:
availableSystemLanguages
axLanguageCode
axIsRegionalLanguageCode
contentsOfDirectoryAtPath:error:
setWasPredicted:
addAmbiguousDialect:
addUnambiguousDialect:
ambiguousDialects
unambiguousDialects
preferredUnambiguousDialect
preferredAmbiguousDialect
setUnambiguousDialects:
setAmbiguousDialects:
predictedSecondaryDialects
setPredictedSecondaryDialects:
unionOrderedSet:
canBeSpokenByDialect:
allocWithZone:
mutableCopyWithZone:
tagWithDialects:range:content:predictedByTagger:
hasAmbigiousDialects
addAmbiguousDialects:
addPredictedSecondaryDialects:
setCreatedFromNewline:
_wasPredicted
_createdFromNewline
_content
_unambiguousDialects
_ambiguousDialects
_predictedSecondaryDialects
_range
T{_NSRange=QQ},N,V_range
T@"NSString",W,N,V_content
T@"NSMutableOrderedSet",&,N,V_unambiguousDialects
T@"NSMutableOrderedSet",&,N,V_ambiguousDialects
T@"NSMutableOrderedSet",&,N,V_predictedSecondaryDialects
T@"NSString",R,W,N
TB,N,V_wasPredicted
TB,N,V_createdFromNewline
setContentString:
contentString
unpredictedAmbiguousLangMaps
predictedSecondaryLangMaps
currentDialects
setCurrentDialects:
isTagged
setTagged:
_allLangIDs
dataDetectorWithTypes:error:
shortMonthSymbols
shortWeekdaySymbols
matchesInString:options:range:
setShorthandDateMatches:
shorthandDateMatches
resultType
nextShorthandDateIndex
setNextShorthandDateIndex:
_addTag
_isNamedEntity:
_addLanguageTagForDateIfNecessary
langIDforLangCode:
_languageHintsEvenlyDistributedWithProbability:excludingHints:
orderedSet
langCodeForlangId:
_overrideLanguageDetection:
setTags:
_searchForShorthandDates
_manuallyProcessContentWithRange:
_addLanguageTagForCurrentChunk
significantAmbiguousLangMapsForUserKeyboards
_isStringCombinationOfCommonAndEmoji:
setUnpredictedAmbiguousLangMaps:
setPredictedSecondaryLangMaps:
enumerateUnpredictedTags:
enumeratePredictedTags:
langMapIsSignificant:
significantAmbiguousLangMaps
hasOnlyWesternLangMaps
hasOnlyNonWesternLangMaps
updateTagsForLocalePrefChange
_currentDialects
_currentChunk
_predictedByTagger
_nlTagger
_namedEntityTagger
_tagged
_tags
_unpredictedAmbiguousLangMaps
_userPreferredLangID
_predictedSecondaryLangMaps
_contentString
_shorthandDateMatches
_nextShorthandDateIndex
T@"NSMutableString",&,N,V_contentString
tagged
TB,N,GisTagged,V_tagged
T@"NSMutableArray",&,N,V_tags
T@"NSMutableOrderedSet",&,N,V_unpredictedAmbiguousLangMaps
T@"NSMutableOrderedSet",&,N,V_predictedSecondaryLangMaps
T@"NSArray",&,N,V_currentDialects
T@"NSArray",&,N,V_shorthandDateMatches
TQ,N,V_nextShorthandDateIndex
T@"NSString",C,N,V_userPreferredLangID
isCancelled
setFinished:
setActive:
performSelector:withObject:afterDelay:
setBlock:
runAfterDelay:
block
setCancel:
isFinished
isActive
finished
active
_block
T@?,C,N,V_block
TB,N,GisCancelled,Vcancel
TB,N,GisFinished,Vfinished
TB,N,GisActive,Vactive
task
automaticallyCancelPendingBlockUponSchedulingNewBlock
setTask:
_runAfterDelay:
performSelector:onThread:withObject:waitUntilDone:
isPending
TB,R,N,GisActive
pending
TB,R,N,GisPending
initWithThread:
_thread
_cancelBlock
_automaticallyCancelPendingBlockUponSchedulingNewBlock
_task
T@"AXThreadTimerTask",&,N,V_task
cancelled
TB,R,N,GisCancelled
TB,N,V_automaticallyCancelPendingBlockUponSchedulingNewBlock
setUsagePage:
setKeyDown:
setUnmodifiedInput:
setModifiedInput:
setShiftModifiedInput:
setBackupUnmodifiedInput:
setBackupModifiedInput:
setBackupShiftModifiedInput:
setModifierState:
setGsModifierState:
setAlternativeKeyCode:
shiftModifiedInput
gsModifierState
modifiedInput
usagePage
alternativeKeyCode
keyDown
backupUnmodifiedInput
backupShiftModifiedInput
backupModifiedInput
_getUIKitKeyboardRef
_getUSUIKitKeyboardRef
_getIOHIDKeyboardTypeForGSKeyboardType:
sharedInputModeController
hardwareInputMode
automaticHardwareLayout
prepareForKeycodeTranslation
translateStringToKeycode
translateKeycode
_keyDown
_keyCode
_alternativeKeyCode
_usagePage
_modifierState
_gsModifierState
_unmodifiedInput
_modifiedInput
_shiftModifiedInput
_backupUnmodifiedInput
_backupModifiedInput
_backupShiftModifiedInput
TS,N,V_keyCode
TS,N,V_alternativeKeyCode
TI,N,V_usagePage
TB,N,V_keyDown
T@"NSString",C,N,V_unmodifiedInput
T@"NSString",C,N,V_modifiedInput
T@"NSString",C,N,V_shiftModifiedInput
TI,N,V_modifierState
T@"NSString",C,N,V_backupUnmodifiedInput
T@"NSString",C,N,V_backupModifiedInput
T@"NSString",C,N,V_backupShiftModifiedInput
TI,N,V_gsModifierState
pathAttributes
locus
userIdentifier
setSubtype:
setTime:
setWindowLocation:
setHandInfo:
setIsGeneratedEvent:
setIsDisplayIntegrated:
setSenderID:
systemGesturesPossible
setContextId:
generationCount
setOriginalType:
setKeyInfo:
_appendKeyInfoToMediaKey:usage:downEvent:
setFlags:
setScrollAmount:
setScrollAccelAmount:
setGameControllerInfo:
setPointerControllerInfo:
_HIDEventIsAccessibilityEvent:
representationWithType:subtype:time:location:windowLocation:handInfo:
representationWithHIDEvent:serviceClient:hidStreamIdentifier:clientID:taskPort:
_digitizerRepresentation:hidStreamIdentifier:
_keyboardButtonEvent:
_gameKeyboardControllerEvent:
_wheelEvent:
_gameControllerEvent:
_pointerControllerEvent:hidStreamIdentifier:
_vendorDefinedAccessibilityEvent:
setClientId:
setTaskPort:
setHIDAttributeData:
setIsBuiltIn:
setGenerationCount:
setHIDTime:
setCreatorHIDEvent:
setCreatorHIDServiceClient:
_accessibilityDataFromRealEvent:
setAccessibilityData:
setRedirectEvent:
setSystemDrag:
setAccelerometerInfo:
setIosmacPointerInfo:
accessibilityEventRepresentationWithSender:usagePage:usage:modifierFlags:
accessibilityEventRepresentationWithSender:usagePage:usage:modifierFlags:eventValue1:eventValue2:
dataWithSender:page:usage:modifierFlags:eventValue1:eventValue2:
touchRepresentationWithHandType:location:
setIsTouchPadEvent:
originalType
_newHandHIDEventRef
_newIOSMACPointerRef
_newButtonHIDEventRefWithType:
_newKeyboardHIDEventRef
_newAccelerometerHIDEventRef
_newAccessibilityHIDEventRef
isBuiltIn
_applyAccessibilityDataToRealEvent:
useOriginalHIDTime
_machTimeForHIDEventRef
accelerometerInfo
senderID
flags
accessibilityData
dataBytes
dataLength
iosmacPointerInfo
isGeneratedEvent
isTouchPadEvent
screenEdgeForPoint:
isDisplayIntegrated
subtype
windowLocation
window
setWindow:
time
data
setData:
taskPort
HIDAttributeData
additionalFlags
setAdditionalFlags:
displayId
setDisplayId:
scrollAmount
scrollAccelAmount
isRedirectEvent
isSystemDrag
gameControllerInfo
pointerControllerInfo
auxiliaryData
setAuxiliaryData:
getValue:size:
_senderNameForID
_accessibilityEventFromRealEvent:
representationWithData:
cancelEventForPathIndexMask:
_motionGestureTapEvent:serviceClient:hidStreamIdentifier:clientID:taskPort:
representationWithLocation:windowLocation:handInfo:
representationWithHIDEvent:hidStreamIdentifier:
accelerometerRepresentation:
keyRepresentationWithType:
buttonRepresentationWithType:
iosmacPointerRepresentationWithTypeWithPointerInfo:
gestureRepresentationWithHandType:locations:
accessibilityEventRepresentationWithSender:usagePage:usage:
touchPadRepresentationWithHandType:normalizedLocation:
pathIndexMask
resetInitialTouchCountValueForHidStreamIdentifier:
isUpdate
willBeUpdated
dataRepresentation
normalizedEventRepresentation:scale:
fakeTouchScaleEventRepresentation:
modifyPoints:
neuterUpdates
denormalizedEventRepresentation:descale:
firstPathContextId
fingerCount
isTouchDown
isMove
isChordChange
isLift
isInRange
isInRangeLift
isCancel
applyAccessibilityDataToCreatorHIDEvent
setUseOriginalHIDTime:
creatorHIDServiceClient
_isBuiltIn
_isDisplayIntegrated
_isTouchPadEvent
_isGeneratedEvent
_useOriginalHIDTime
_redirectEvent
_systemDrag
_originalType
_subtype
_flags
_taskPort
_contextId
_displayId
_time
_senderID
_handInfo
_keyInfo
_accelerometerInfo
_gameControllerInfo
_pointerControllerInfo
_iosmacPointerInfo
_clientId
_HIDTime
_HIDAttributeData
_scrollAmount
_scrollAccelAmount
_additionalFlags
_generationCount
_creatorHIDEvent
_creatorHIDServiceClient
_auxiliaryData
_accessibilityData
_window
_data
_windowLocation
T^v,N,V_window
T@"NSData",&,N,V_data
T^{__IOHIDEvent=},&,N,V_creatorHIDEvent
T^{__IOHIDServiceClient=},&,N,V_creatorHIDServiceClient
TI,N,V_originalType
Ti,N,V_subtype
T{CGPoint=dd},N,V_windowLocation
TQ,N,V_time
Ti,N,V_flags
TQ,N,V_senderID
T@"AXEventHandInfoRepresentation",&,N,V_handInfo
T@"AXEventKeyInfoRepresentation",&,N,V_keyInfo
T@"AXEventAccelerometerInfoRepresentation",&,N,V_accelerometerInfo
T@"AXEventGameControllerInfoRepresentation",&,N,V_gameControllerInfo
T@"AXEventPointerInfoRepresentation",&,N,V_pointerControllerInfo
T@"AXEventIOSMACPointerInfoRepresentation",&,N,V_iosmacPointerInfo
T@"NSString",&,N,V_clientId
TI,N,V_taskPort
TQ,N,V_HIDTime
T@"NSData",&,N,V_HIDAttributeData
Tq,N,V_scrollAmount
Tq,N,V_scrollAccelAmount
TQ,N,V_additionalFlags
TI,N,V_contextId
TI,N,V_displayId
TB,N,V_isBuiltIn
TB,N,V_isDisplayIntegrated
Tq,N,V_generationCount
TB,N,V_isTouchPadEvent
TB,N,V_isGeneratedEvent
TB,N,V_useOriginalHIDTime
TQ,R,N
redirectEvent
TB,N,GisRedirectEvent,V_redirectEvent
systemDrag
TB,N,GisSystemDrag,V_systemDrag
T@"NSDictionary",&,N,V_auxiliaryData
T@"AXEventData",&,N,V_accessibilityData
token
_identifierOfCAContext
assistiveTouchAlwaysShowMenuEnabled
assistiveTouchOpenMenuSwaggleEnabled
assistiveTouchMouseKeysEnabled
assistiveTouchMouseKeysOptionToggleEnabled
assistiveTouchMouseKeysUseMainKeyboardKeys
assistiveTouchMouseKeysDelay
assistiveTouchMouseAlwaysShowSoftwareKeyboardEnabled
assistiveTouchMouseAllowAppleBluetoothDevicesPairing
assistiveTouchMouseKeysMaxSpeed
assistiveTouchSpeed
assistiveTouchRecentGestures
assistiveTouchSavedGestures
assistiveTouchScanningMode
assistiveTouchPreferredPointPicker
assistiveTouchAutoScanningEnabled
assistiveTouchGroupElementsEnabled
assistiveTouchScannerCompactMenuEnabled
assistiveTouchScannerMenuLabelsEnabled
assistiveTouchStepInterval
assistiveTouchScanCycles
assistiveTouchScanTimeout
assistiveTouchScannerSoundEnabled
assistiveTouchScannerSpeechEnabled
assistiveTouchScannerSpeechRate
assistiveTouchScannerCursorHighVisibilityEnabled
assistiveTouchScannerSpeechIsInterruptedByScanning
assistiveTouchScannerSpeechShouldSpeakTraits
assistiveTouchInputCoalescingDuration
assistiveTouchInputCoalescingEnabled
assistiveTouchInputHoldDuration
assistiveTouchLongPressDuration
assistiveTouchInputHoldEnabled
assistiveTouchLongPressEnabled
assistiveTouchLongPressPauseScanningEnabled
assistiveTouchDelayAfterInput
assistiveTouchDelayAfterInputEnabled
assistiveTouchAxisSweepSpeed
assistiveTouchActionRepeatInterval
assistiveTouchActionRepeatEnabled
assistiveTouchScanTimeoutEnabled
assistiveTouchCursorColor
assistiveTouchMousePointerColor
assistiveTouchMousePointerSizeMultiplier
assistiveTouchMousePointerTimeoutEnabled
assistiveTouchMousePointerTimeout
assistiveTouchMouseDwellControlEnabled
assistiveTouchMouseDwellControlAutorevertEnabled
assistiveTouchMouseDwellControlAutorevertAction
assistiveTouchMouseDwellControlActivationTimeout
assistiveTouchMouseDwellControlMovementToleranceRadius
assistiveTouchMouseDwellControlCornerCustomization
assistiveTouchMouseDwellControlMutatedMenu
assistiveTouchMouseDwellControlShowPrompt
assistiveTouchMouseZoomPanningStyle
assistiveTouchHeadMovementSensitivity
assistiveTouchSwitchUsageConfirmed
assistiveTouchCameraSwitchPreviewEnabled
assistiveTouchInternalOnlyHiddenNubbitModeEnabled
assistiveTouchInternalOnlyPearlTrackingEnabled
assistiveTouchScannerAddedTripleClickAutomatically
assistiveTouchMainScreenCustomization
assistiveTouchOrbAction
assistiveTouchSingleTapAction
assistiveTouchDoubleTapAction
assistiveTouchLongPressAction
assistiveTouchLongPressActionDuration
assistiveTouchDoubleTapActionTimeout
assistiveTouchMouseCustomizedClickActions
assistiveTouchIdleOpacity
assistiveTouchGameControllerEnabled
switchControlRecipes
switchControlLaunchRecipeUUID
switchControlTopLevelMenuItems
switchControlGesturesTopLevelMenuItems
switchControlDeviceTopLevelMenuItems
switchControlSettingsTopLevelMenuItems
switchControlMediaControlsTopLevelMenuItems
switchControlShouldUseShortFirstPage
switchControlGesturesMenuItems
switchControlDeviceMenuItems
switchControlSettingsMenuItems
switchControlMediaControlsMenuItems
switchControlScanningStyle
switchControlDwellTime
switchControlTapBehavior
switchControlAutoTapTimeout
switchControlShouldAlwaysActivateKeyboardKeys
switchControlIsEnabledAsReceiver
switchControlScanAfterTapLocation
switchControlRestartScanningAtCurrentKey
switchControlPointPickerSelectionStyle
switchControlShouldDisallowUSBRestrictedMode
switchControlUserDidReadUSBRestrictedModeAlert
dataMigratorRequestedVoiceCacheRefresh
supportsAdvancedDisplayFilters
zoomPreferencesWereInitialized
zoomWindowFrame
dockSize
zoomScale
zoomPanOffset
zoomSlugNormalizedPosition
zoomCurrentLensEffect
zoomCurrentLensMode
zoomPeekZoomEnabled
zoomPeekZoomEverEnabled
zoomShouldFollowFocus
zoomShouldShowSlug
zoomSlugSingleTapAction
zoomSlugDoubleTapAction
zoomSlugTripleTapAction
zoomSlugTapAndSlideToAdjustZoomLevelEnabled
zoomAlwaysUseWindowedZoomForTyping
zoomPreferredCurrentLensMode
zoomPreferredCurrentDockPosition
zoomPreferredMaximumZoomScale
zoomPreferredLensModes
zoomPreferredDockPositions
zoomIdleSlugOpacity
zoomControllerColor
zoomPreferredAudioDestination
zoomShouldAllowFullscreenAutopanning
zoomInStandby
zoomShowedBanner
zoomKeyboardShortcutsEnabled
zoomAdjustZoomLevelKbShortcutEnabled
zoomToggleZoomKbShortcutEnabled
zoomPanZoomKbShortcutEnabled
zoomResizeZoomWindowKbShortcutEnabled
zoomSwitchZoomModeKbShortcutEnabled
zoomTempToggleZoomKbShortcutEnabled
zoomScrollWheelKbShortcutEnabled
zoomAutopannerShouldPanWithAcceleration
zoomDebugDisableZoomLensScaleTransform
zoomDebugShowExternalFocusRect
guidedAccessUsageCount
guidedAccessAXFeaturesEnabled
guidedAccessAllowsUnlockWithTouchID
guidedAccessToneIdentifierForTimeRestrictionEvents
guidedAccessShouldSpeakForTimeRestrictionEvents
guidedAccessOverrideIdleTime
guidedAccessAutoLockTimeInSeconds
gaxInternalSettingsUserAppProfile
gaxInternalSettingsUserGlobalProfile
gaxInternalSettingsSavedAccessibilityFeatures
gaxInternalSettingsSavedAccessibilityTripleClickOptions
gaxInternalSettingsUserConfiguredAppIDs
gaxInternalSettingsActiveAppOrientation
gaxInternalSettingsActiveAppID
gaxInternalSettingsIsActiveAppSelfLocked
gaxInternalSettingsTimeRestrictionHasExpired
gaxInternalSettingsSystemDidRestartDueToLowBattery
gaxInternalSettingsECID
gaxInternalSettingsProductBuildVersion
gaxInternalSettingsLastActivationDate
gaxInternalSettingsLastPasscodeSetDate
internalLoggingColorTheme
validateSecondPartyApps
ignoreAXServerEntitlements
logAXNotificationPosting
useNewAXBundleLoader
voiceOverHearingAidRoutingEnabled
skipHearingAidMFiAuth
enableHearingAidReporter
guidedAccessDisallowDirectInactiveToActiveTransition
guidedAccessOverrideTimeRestrictionDuration
guidedAccessEnableExperimentalUI
speakCorrectionsEnabled
tripleClickOrderedOptions
showSpeechController
speechControllerIdleOpacity
speechControllerLongPressAction
speechControllerDoubleTapAction
quickSpeakHighlightOption
quickSpeakWordHighlightColor
quickSpeakSentenceHighlightColor
quickSpeakUnderlineSentence
quickSpeakVolume
quickSpeakSentenceHighlightOption
speechVoiceIdentifierForLanguage
userDidSelectVoiceForLanguage
quickSpeakNubbitNormalizedPosition
siriAutoUpdateListInitialized
letterFeedbackEnabled
phoneticFeedbackEnabled
quickTypeWordFeedbackEnabled
wordFeedbackEnabled
characterFeedbackDelayDuration
voiceOverContentDescriptionLevel
voiceOverLargeCursorEnabled
voiceOverHelpMode
voiceOverNavigateImagesOption
voiceOverPhoneticsFeedback
voiceOverHardwareTypingFeedback
voiceOverSoftwareTypingFeedback
voiceOverBrailleGesturesTypingFeedback
voiceOverCompactVoiceEnabled
voiceOverHintsEnabled
voiceOverPitchChangeEnabled
voiceOverPitch
voiceOverSoundEffectsEnabled
voiceOverLanguageDetectionEnabled
voiceOverHapticsEnabled
voiceOverSoundVolume
voiceOverAdjustSoundVolumeIndependently
voiceOverHapticIntensity
voiceOverVerbosityEmojiSuffixEnabled
voiceOverVerbosityEmojiFeedback
voiceOverSpeakingRateInRotorEnabled
voiceOverSpeakNotificationsEnabled
voiceOverRotorItems
voiceOverEditAppsActionEnabled
voiceOverSpeakActionConfirmation
voiceOverQuickNavAnnouncementFeedback
voiceOverBrailleTableIdentifier
voiceOverAlwaysUseNemethCodeForMathEnabled
voiceOverDefaultDialect
voiceOverHandwritingWasNativeAutocorrectEnabled
voiceOverSpeakingRateForLanguage:
voiceOverActivationWorkaround
voiceOverShowSoftwareKeyboardWithBraille
voiceOverBrailleGradeTwoAutoTranslateEnabled
voiceOverSilenceAnnouncements
voiceOverPreferredTVInteractionMode
voiceOverPrefersFollowFocusNavigationStyle
voiceOverDescribedMedia
voiceOverCustomCommandProfile
voiceOverSpeakNonfocusableElementsAfterDelay
voiceOverExploreFocusAffectsNativeFocus
voiceOverShouldOutputToHearingAid
customPronunciationSubstitutions
voiceOverAlternativeVoiceIdentifier:
voiceOverPrefersCompact:
voiceOverTouchBraillePanningAutoTurnsReadingContent
voiceOverAudioDuckingEnabled
voiceOverSelectedLanguage
voiceOverAudioFollowsHDMIAudio
voiceOverTouchBrailleDisplayInputMode
voiceOverTouchBrailleGesturesInputMode
voiceOverTouchBrailleDisplayOutputMode
voiceOverBrailleWordWrapEnabled
voiceOverBrailleAutoAdvanceDuration
enableVoiceOverCaptions
syncPronunciationsWithCloudKit
voiceOverImageCaptionsEnabled
shouldCaptureVisionEngineDiagnosticsToDisk
voiceOverSpeaksOverTelephoneCalls
voiceOverUseActiveSiriVoice
voiceOverUseDigitalCrownNavigation
didTriggerSOSToday
voiceOverSpeakTableColumnRowInformation
voiceOverSpeakTableHeaders
voiceOverTouchBrailleGesturesShouldUseLockedConfiguration
voiceOverTouchBrailleGesturesLockedOrientation
voiceOverTouchBrailleGesturesLockedTypingMode
voiceOverTouchBrailleGesturesDidPlayCalibrationHint
voiceOverDoubleTapInterval
voiceOverBrailleAlertDisplayDuration
voiceOverBrailleAlertsEnabled
voiceOverBrailleKeyDebounceTimeout
voiceOverNavigationDirectionMode
voiceOverKeyboardModifierChoice
voiceOverContinuousPathKeyboardStartTimeout
voiceOverTouchBrailleShouldReverseDots
voiceOverTouchBrailleShowTextStyleStatus
voiceOverTouchBrailleShowGeneralStatus
voiceOverTouchUpdateBrailleWithoutConnectedDisplay
voiceOverTouchPreferredBrailleTableIdentifiers
voiceOverShouldSpeakDiscoveredText
voiceOverNeuralElementFeedback
voiceOverNumberFeedback
voiceOverAutomaticButtonLabels
voiceOverSoundAndHapticPreferences
tapToSpeakTimeEnabled
tapToSpeakTimeAvailability
voiceOverTapticTimeMode
voiceOverTapticTimeEncoding
voiceOverTapticTimeSpeed
tapticTimeInternalFlashScreenEnabled
voiceOverTapticChimesEnabled
voiceOverTapticChimesAvailability
voiceOverTapticChimesFrequencyEncoding
voiceOverTapticChimesSoundType
voiceOverSpeakSecondsEncoding
voiceOverCapitalLetterFeedback
voiceOverDeletionFeedback
voiceOverPunctuationLevel
voiceOverPunctuationGroup
voiceOverDefaultPunctuationGroup
voiceOverLinkFeedback
voiceOverActionsFeedback
voiceOverContainerOutputFeedback
voiceOverMoreContentOutputFeedback
voiceOverDiscoveredSensitiveContentFeedback
voiceOverShouldDisallowUSBRestrictedMode
voiceOverUserDidReadUSBRestrictedModeAlert
voiceOverActivities
voiceOverSelectedActivity
voiceOverUseTVToggleStyleNavigation
imageCaptioningDisabledApps
voiceOverDirectTouchEnabledApps
voiceOverSceneDescriptionsEnabled
allowHearingAidControlOnLockScreen
shouldStreamToLeftAid
shouldStreamToRightAid
independentHearingAidSettings
shouldFlashForAlertInSilentMode
shouldSpeakMedicalPreamble
shouldTTYMedicalPreamble
medicalPreamble
shouldLimitDisplayRefreshRate
didResetD22Preferences
leftRightBalanceValue
localizationQACaptionShowFilePath
localizationQACaptionShowUSString
localizationQACaptionShowLocalizedString
alexLocalAssetURL
currentVoices
touchAccommodationsUsageConfirmed
touchAccommodationsTripleClickConfirmed
touchAccommodationsHoldDurationEnabled
touchAccommodationsHoldDuration
touchAccommodationsAllowsSwipeGesturesToBypass
touchAccommodationsHoldDurationAllowsSwipeGesturesToBypass
touchAccommodationsHoldDurationSwipeGestureSensitivity
touchAccommodationsSwipeGestureMinimumDistance
touchAccommodationsIgnoreRepeatEnabled
touchAccommodationsIgnoreRepeatDuration
touchAccommodationsTapActivationMethod
touchAccommodationsTapActivationTimeout
stickyKeysEnabled
stickyKeysShiftToggleEnabled
stickyKeysBeepEnabled
magnifierEnabled
magnifierShouldAdjustFiltersForAmbientLight
magnifierShouldUseVideoStabilization
magnifierZoomLevel
magnifierFilterSetIdentifier
magnifierFilterInverted
magnifierContrast
magnifierBrightness
fullKeyboardAccessFocusRingTimeout
fullKeyboardAccessFocusRingTimeoutEnabled
fullKeyboardAccessLargeFocusRingEnabled
fullKeyboardAccessFocusRingHighContrastEnabled
fullKeyboardAccessFocusRingColor
fullKeyboardAccessShouldShowTextEditingModeInstructions
fullKeyboardAccessShouldShowDebugKeyCommandsView
callAudioRoutingAutoAnswerDelay
callAudioRoutingAutoAnswerEnabled
initWithObjects:
_domainForPreferenceKey:
_domainNameForDomain:
setValue:forPreferenceKey:
_handleVoiceUnarchivedCache:
valueForPreferenceKey:
_migratePreferenceIfNecessary:
_listenForAccessibilitySupportPassthroughs
nukePrefsForDomains:numDomains:
postNotificationForPreferenceKey:
unarchivedObjectOfClasses:fromData:error:
gestureWithLegacyFormatDictionary:
_setGestures:forPreferenceKey:
_gesturesForPreferenceKeyMigratingIfNecessary:
setWithObject:
initWithCapacity:
assistiveTouchMainScreenDefaultCustomization
setAssistiveTouchMainScreenCustomization:
setSwitchControlRecipes:
_switchControlMigratePreMonarchIncludedMenuItemsForNewTypes:
_switchControlHasEmptyTopLevelMenuItems:
_allSubmenuKeys
indexOfObject:
topLevelKeys
_switchControlMenuItemsForPreferenceKey:allTypes:enabledByDefault:topLevel:
gestureKeys
deviceKeys
settingsKeys
mediaControlsKeys
axArrayWithPossiblyNilArrays:
_switchControlMenuItemPreferences
initWithBytes:length:
orderedSetWithArray:
programmingActivity
_setVoiceArray:forKey:
_retrieveVoices:
availableVoices
standardUserDefaults
isDefault
quality
isFallbackDefault
remapVoiceIdentifier:
allValues
_removeSpeakingRatePreferenceForLanguage:
_voiceOverRotorItemEnabled:
_localeChange:
replaceObjectAtIndex:withObject:
setVoiceOverRotorItems:
setZoomShouldShowSlug:
setZoomScale:
setZoomInStandby:
anyUserPreferredLangaugeIsRTL
voiceOverEnabled
tapticTimeIsAvailable
setVoiceOverTouchPreferredBrailleTableIdentifiers:
_voiceOverSoundOrHapticValueForPreference:outputEvent:
_voiceOverSetSoundOrHapticValue:forPreference:outputEvent:
_updateTouchAccommodationsTripleClickSetting
setMagnifierEnabled:changeTripleClickMenu:
gizmoGetWatchFaceAutoSpeakPreferences
T@"AXSettings",R,N
keysToIgnoreDuringBuddyTransfer
domainNameForPreferenceKey:
allDomainNamesForPreferenceKey:
preferenceKeyForSelector:
willPostNotificationForPreferenceKey:value:
willPerformUpdateBlocksForPreferenceKey:
nukeAll
setAssistiveTouchAlwaysShowMenuEnabled:
setSupportsAdvancedDisplayFilters:
setAssistiveTouchOpenMenuSwaggleEnabled:
setAssistiveTouchMouseKeysEnabled:
setAssistiveTouchMouseKeysOptionToggleEnabled:
setAssistiveTouchMouseKeysUseMainKeyboardKeys:
setAssistiveTouchMouseKeysDelay:
setAssistiveTouchMouseAlwaysShowSoftwareKeyboardEnabled:
setAssistiveTouchMouseAllowAppleBluetoothDevicesPairing:
setAssistiveTouchMouseKeysMaxSpeed:
setAssistiveTouchSpeed:
setAssistiveTouchCustomGestures:
setAssistiveTouchRecentGestures:
setAssistiveTouchSavedGestures:
setAssistiveTouchPreferredPointPicker:
setAssistiveTouchScannerSpeechIsInterruptedByScanning:
setAssistiveTouchScannerSpeechShouldSpeakTraits:
setAssistiveTouchScannerCursorHighVisibilityEnabled:
setAssistiveTouchScanningMode:
setAssistiveTouchGroupElementsEnabled:
setAssistiveTouchScannerCompactMenuEnabled:
setAssistiveTouchScannerMenuLabelsEnabled:
setAssistiveTouchAxisSweepSpeed:
setAssistiveTouchActionRepeatInterval:
setAssistiveTouchActionRepeatEnabled:
setAssistiveTouchDelayAfterInput:
setAssistiveTouchDelayAfterInputEnabled:
setAssistiveTouchInputHoldDuration:
setAssistiveTouchInputHoldEnabled:
setAssistiveTouchLongPressDuration:
setAssistiveTouchLongPressEnabled:
setAssistiveTouchLongPressPauseScanningEnabled:
setAssistiveTouchInputCoalescingDuration:
setAssistiveTouchInputCoalescingEnabled:
setAssistiveTouchStepInterval:
setAssistiveTouchScanTimeoutEnabled:
setAssistiveTouchScanTimeout:
setAssistiveTouchScanCycles:
setAssistiveTouchScannerSoundEnabled:
setAssistiveTouchScannerSpeechEnabled:
setAssistiveTouchScannerSpeechRate:
setAssistiveTouchSwitches:
setAssistiveTouchCursorColor:
setAssistiveTouchMousePointerColor:
setAssistiveTouchMousePointerSizeMultiplier:
setAssistiveTouchMousePointerTimeoutEnabled:
setAssistiveTouchMousePointerTimeout:
setAssistiveTouchMouseDwellControlEnabled:
setAssistiveTouchMouseDwellControlAutorevertEnabled:
setAssistiveTouchMouseDwellControlAutorevertAction:
setAssistiveTouchMouseDwellControlActivationTimeout:
setAssistiveTouchMouseDwellControlMovementToleranceRadius:
setAssistiveTouchMouseDwellControlCornerCustomization:
setAssistiveTouchMouseDwellControlMutatedMenu:
setAssistiveTouchMouseDwellControlShowPrompt:
setAssistiveTouchMouseZoomPanningStyle:
setAssistiveTouchHeadMovementSensitivity:
setAssistiveTouchSwitchUsageConfirmed:
setAssistiveTouchScannerAddedTripleClickAutomatically:
setAssistiveTouchScannerPrefersCompact:forLanguage:
assistiveTouchScannerPrefersCompact:
setAssistiveTouchSingleTapAction:
setAssistiveTouchDoubleTapAction:
setAssistiveTouchDoubleTapActionTimeout:
setAssistiveTouchLongPressActionDuration:
setAssistiveTouchLongPressAction:
setAssistiveTouchOrbAction:
assistiveTouchCustomizationEnabled
setAssistiveTouchIdleOpacity:
setAssistiveTouchGameControllerEnabled:
setSwitchControlLaunchRecipeUUID:
setSwitchControlTopLevelMenuItems:
switchControlHasEmptyTopLevelMenu
setSwitchControlShouldUseShortFirstPage:
setSwitchControlGesturesMenuItems:
setSwitchControlGesturesTopLevelMenuItems:
setSwitchControlDeviceMenuItems:
setSwitchControlDeviceTopLevelMenuItems:
setSwitchControlSettingsMenuItems:
setSwitchControlSettingsTopLevelMenuItems:
setSwitchControlMediaControlsMenuItems:
setSwitchControlMediaControlsTopLevelMenuItems:
switchControlShouldUseExtendedKeyboardPredictions
setSwitchControlShouldUseExtendedKeyboardPredictions:
setSwitchControlRestartScanningAtCurrentKey:
setSwitchControlPointPickerSelectionStyle:
setSwitchControlScanningStyle:
setSwitchControlDwellTime:
setSwitchControlTapBehavior:
setSwitchControlAutoTapTimeout:
setSwitchControlShouldAlwaysActivateKeyboardKeys:
setSwitchControlIsEnabledAsReceiver:
setSwitchControlScanAfterTapLocation:
_switchControlClearMenuItemPreferences
_switchControlClearMenuItemMigrationTracking
setZoomPreferencesWereInitialized:
setZoomWindowFrame:
setDockSize:
setZoomPanOffset:
setZoomSlugNormalizedPosition:
setZoomCurrentLensEffect:
setZoomShowedBanner:
setZoomCurrentLensMode:
setZoomShouldFollowFocus:
setZoomPeekZoomEnabled:
setZoomPeekZoomEverEnabled:
setZoomSlugSingleTapAction:
setZoomSlugDoubleTapAction:
setZoomSlugTripleTapAction:
setZoomSlugTapAndSlideToAdjustZoomLevelEnabled:
setZoomAlwaysUseWindowedZoomForTyping:
setZoomPreferredCurrentLensMode:
setZoomPreferredCurrentDockPosition:
setZoomPreferredMaximumZoomScale:
setZoomPreferredLensModes:
setZoomPreferredDockPositions:
setZoomIdleSlugOpacity:
setZoomControllerColor:
setZoomShouldAllowFullscreenAutopanning:
setZoomKeyboardShortcutsEnabled:
setZoomAdjustZoomLevelKbShortcutEnabled:
setZoomToggleZoomKbShortcutEnabled:
setZoomPanZoomKbShortcutEnabled:
setZoomResizeZoomWindowKbShortcutEnabled:
setZoomSwitchZoomModeKbShortcutEnabled:
setZoomTempToggleZoomKbShortcutEnabled:
setZoomScrollWheelKbShortcutEnabled:
setZoomAutopannerShouldPanWithAcceleration:
zoomUserHadLegacyZoomEnabled:wasZoomedIn:withScale:
setZoomDebugDisableZoomLensScaleTransform:
setZoomDebugShowExternalFocusRect:
setGuidedAccessAXFeaturesEnabled:
setGuidedAccessAllowsUnlockWithTouchID:
setGuidedAccessToneIdentifierForTimeRestrictionEvents:
guidedAccessDefaultToneIdentifierForTimeRestrictionEvents
setGuidedAccessShouldSpeakForTimeRestrictionEvents:
setGuidedAccessAutoLockTimeInSeconds:
guidedAccessAllowsMultipleWindows
setGaxInternalSettingsUserAppProfile:
setGaxInternalSettingsUserGlobalProfile:
setGaxInternalSettingsSavedAccessibilityFeatures:
setGaxInternalSettingsSavedAccessibilityTripleClickOptions:
setGaxInternalSettingsUserConfiguredAppIDs:
setGaxInternalSettingsActiveAppOrientation:
setGaxInternalSettingsActiveAppID:
setGaxInternalSettingsTimeRestrictionHasExpired:
setGaxInternalSettingsIsActiveAppSelfLocked:
setGaxInternalSettingsSystemDidRestartDueToLowBattery:
setGaxInternalSettingsECID:
setGaxInternalSettingsProductBuildVersion:
setGaxInternalSettingsLastActivationDate:
setGaxInternalSettingsLastPasscodeSetDate:
setAssistiveTouchCameraSwitchPreviewEnabled:
setAssistiveTouchInternalOnlyHiddenNubbitModeEnabled:
assistiveTouchInternalOnlyHiddenNubbitMode
setAssistiveTouchInternalOnlyPearlTrackingEnabled:
setValidateSecondPartyApps:
setIncludeBacktraceInLogs:
setIgnoreAXAsserts:
setIgnoreAXServerEntitlements:
setLogAXNotificationPosting:
setUseNewAXBundleLoader:
setShouldPerformValidationsAtRuntime:
setInternalLoggingColorTheme:
setEnableVoiceOverCaptions:
setSyncPronunciationsWithCloudKit:
setDidTriggerSOSToday:
didTriggerSOSValueSet
setVoiceOverContentDescriptionLevel:
setVoiceOverUseActiveSiriVoice:
setVoiceOverUseDigitalCrownNavigation:
voiceOverShowBrailleWatchSettings
setVoiceOverImageCaptionsEnabled:
setShouldCaptureVisionEngineDiagnosticsToDisk:
setVoiceOverSelectedActivity:
setVoiceOverActivities:
setVoiceOverUseTVToggleStyleNavigation:
setTestingExtantVoices:
testingExtantVoices
setExtantVoices:
extantVoicesExist
currentVoicesExist
setCurrentVoices:
setDataMigratorRequestedVoiceCacheRefresh:
setVoiceOverContinuousPathKeyboardStartTimeout:
setVoiceOverKeyboardModifierChoice:
setVoiceOverHearingAidRoutingEnabled:
setSkipHearingAidMFiAuth:
setEnableHearingAidReporter:
setGuidedAccessDisallowDirectInactiveToActiveTransition:
setGuidedAccessOverrideTimeRestrictionDuration:
setGuidedAccessEnableExperimentalUI:
setTripleClickOrderedOptions:
setSpeakCorrectionsEnabled:
setLetterFeedbackEnabled:
setPhoneticFeedbackEnabled:
setCharacterFeedbackDelayDuration:
setQuickTypeWordFeedbackEnabled:
setWordFeedbackEnabled:
setShowSpeechController:
setSpeechControllerIdleOpacity:
setSpeechControllerLongPressAction:
setSpeechControllerDoubleTapAction:
setQuickSpeakVolume:
setQuickSpeakUnderlineSentence:
setQuickSpeakSentenceHighlightOption:
setQuickSpeakWordHighlightColor:
setQuickSpeakSentenceHighlightColor:
setQuickSpeakHighlightOption:
userDidSelectVoiceForLanguage:source:
setSpeechVoiceIdentifier:forLanguage:source:
setUserDidSelectVoiceForLanguage:source:
selectedSpeechVoiceIdentifiersWithLanguageSource
setSelectedSpeechVoiceIdentifiersWithLanguageSource:
selectedSpeechVoiceIdentifiersForSource:
_clearWhitetailMigrationSettings
_voiceOverDefaultDialect
_switchControlScannerDefaultDialect
_switchControlPrefersCompact
_switchControlAltVoices
_voiceOverAlternativeVoiceIdentifiers
_voiceOverPrefersCompactByLanguage
_quickSpeakPrefersCompact
_quickSpeakAltVoices
_quickSpeakSpeakingRateLanguages
setSiriAutoUpdateListInitialized:
setQuickSpeakNubbitNormalizedPosition:
setCustomPronunciationSubstitutions:
setVoiceOverTouchBraillePanningAutoTurnsReadingContent:
setVoiceOverTouchBrailleDisplayInputMode:
setVoiceOverTouchBrailleDisplayOutputMode:
setVoiceOverTouchBrailleGesturesInputMode:
setVoiceOverDefaultPunctuationGroup:
setVoiceOverPunctuationGroup:
setVoiceOverPunctuationLevel:
setVoiceOverLinkFeedback:
setVoiceOverDeletionFeedback:
setVoiceOverCapitalLetterFeedback:
setVoiceOverMoreContentOutputFeedback:
setVoiceOverContainerOutputFeedback:
setVoiceOverActionsFeedback:
setVoiceOverDiscoveredSensitiveContentFeedback:
setVoiceOverTouchSingleLetterQuickNavEnabled:
voiceOverTouchSingleLetterQuickNavEnabled
setVoiceOverQuickNavAnnouncementFeedback:
setVoiceOverSpeaksOverTelephoneCalls:
setVoiceOverSpeakTableHeaders:
setVoiceOverSpeakTableColumnRowInformation:
setVoiceOverLargeCursorEnabled:
setVoiceOverHelpMode:
setVoiceOverNavigateImagesOption:
setVoiceOverPhoneticsFeedback:
setVoiceOverHardwareTypingFeedback:
setVoiceOverSoftwareTypingFeedback:
setVoiceOverBrailleGesturesTypingFeedback:
setVoiceOverActivationWorkaround:
voiceOverHandwritingEnabled
voiceOverBrailleGesturesEnabled
setVoiceOverBrailleWordWrapEnabled:
setVoiceOverBrailleAutoAdvanceDuration:
setVoiceOverHintsEnabled:
setVoiceOverSelectedLanguage:
setVoiceOverAudioDuckingEnabled:
setVoiceOverAudioFollowsHDMIAudio:
setVoiceOverPitch:
setVoiceOverPitchChangeEnabled:
setVoiceOverSoundEffectsEnabled:
setVoiceOverLanguageDetectionEnabled:
setVoiceOverVerbosityEmojiFeedback:
setVoiceOverVerbosityEmojiSuffixEnabled:
setVoiceOverSoundVolume:
setVoiceOverAdjustSoundVolumeIndependently:
setVoiceOverHapticsEnabled:
setVoiceOverSpeakingRateInRotorEnabled:
setVoiceOverSpeakNotificationsEnabled:
setVoiceOverSpeakActionConfirmation:
setVoiceOverEditAppsActionEnabled:
setVoiceOverBrailleTableIdentifier:
setVoiceOverBrailleLanguageRotorItems:
voiceOverBrailleLanguageRotorItems
setVoiceOverAlwaysUseNemethCodeForMathEnabled:
setVoiceOverHandwritingWasNativeAutocorrectEnabled:
setVoiceOverBrailleGradeTwoAutoTranslateEnabled:
setVoiceOverShowSoftwareKeyboardWithBraille:
setVoiceOverSpeakNonfocusableElementsAfterDelay:
setVoiceOverSilenceAnnouncements:
setVoiceOverPreferredTVInteractionMode:
setVoiceOverPrefersFollowFocusNavigationStyle:
setVoiceOverExploreFocusAffectsNativeFocus:
setVoiceOverDescribedMedia:
setVoiceOverCustomCommandProfile:
setVoiceOverShouldDisallowUSBRestrictedMode:
setSwitchControlShouldDisallowUSBRestrictedMode:
setVoiceOverUserDidReadUSBRestrictedModeAlert:
setSwitchControlUserDidReadUSBRestrictedModeAlert:
addRotorOptionsForLoginSession
configureZoomForLoginSession
clearVoicePrefersCompactSettings
setVoiceOverAlternativeVoiceIdentifier:forLanguage:
_voiceOverTouchSpeakingRateLanguages
setVoiceOverSpeakingRate:forLanguage:
setVoiceOverShouldOutputToHearingAid:
setVoiceOverTouchBrailleGesturesShouldUseLockedConfiguration:
setVoiceOverTouchBrailleGesturesLockedOrientation:
setVoiceOverTouchBrailleGesturesLockedTypingMode:
setVoiceOverTouchBrailleGesturesDidPlayCalibrationHint:
setVoiceOverBrailleAlertsEnabled:
setVoiceOverBrailleAlertDisplayDuration:
setVoiceOverBrailleKeyDebounceTimeout:
setVoiceOverDoubleTapInterval:
setVoiceOverNavigationDirectionMode:
setTapToSpeakTimeEnabled:
setTapToSpeakTimeAvailability:
setVoiceOverTapticTimeMode:
setVoiceOverTapticTimeEncoding:
setVoiceOverTapticTimeSpeed:
setVoiceOverTapticChimesEnabled:
setTapticTimeInternalFlashScreenEnabled:
setVoiceOverTapticChimesAvailability:
setVoiceOverTapticChimesFrequencyEncoding:
setVoiceOverTapticChimesSoundType:
setVoiceOverTouchBrailleShouldReverseDots:
setVoiceOverTouchBrailleShowTextStyleStatus:
setVoiceOverTouchUpdateBrailleWithoutConnectedDisplay:
preferredBrailleTableIdentifierForKeyboardLanguage:keyboardLayout:
setPreferredBrailleTableIdentifier:forKeyboardLanguage:keyboardLayout:
setVoiceOverTouchBrailleShowGeneralStatus:
setVoiceOverShouldSpeakDiscoveredText:
setVoiceOverNeuralElementFeedback:
setVoiceOverNumberFeedback:
setVoiceOverAutomaticButtonLabels:
setVoiceOverSoundAndHapticPreferences:
voiceOverSoundEnabledForEvent:
voiceOverSetSoundEnabled:forEvent:
voiceOverHapticEnabledForEvent:
voiceOverSetHapticEnabled:forEvent:
voiceOverResetSoundAndHapticPreferences
setIndependentHearingAidSettings:
setAllowHearingAidControlOnLockScreen:
setShouldStreamToLeftAid:
setLeftRightBalanceValue:
setShouldStreamToRightAid:
touchAccommodationsAreConfigured
setTouchAccommodationsTripleClickConfirmed:
setTouchAccommodationsUsageConfirmed:
setTouchAccommodationsHoldDurationEnabled:
setTouchAccommodationsHoldDuration:
setTouchAccommodationsAllowsSwipeGesturesToBypass:
setTouchAccommodationsSwipeGestureMinimumDistance:
setTouchAccommodationsIgnoreRepeatEnabled:
setTouchAccommodationsIgnoreRepeatDuration:
setTouchAccommodationsTapActivationMethod:
setTouchAccommodationsTapActivationTimeout:
setStickyKeysEnabled:
setStickyKeysShiftToggleEnabled:
setStickyKeysBeepEnabled:
setMagnifierEnabled:
setMagnifierShouldAdjustFiltersForAmbientLight:
setMagnifierShouldUseVideoStabilization:
setMagnifierZoomLevel:
setMagnifierFilterSetIdentifier:
setMagnifierFilterInverted:
setMagnifierContrast:
setMagnifierBrightness:
setFullKeyboardAccessFocusRingTimeout:
setFullKeyboardAccessFocusRingTimeoutEnabled:
setFullKeyboardAccessLargeFocusRingEnabled:
setFullKeyboardAccessFocusRingHighContrastEnabled:
setFullKeyboardAccessFocusRingColor:
setFullKeyboardAccessShouldShowTextEditingModeInstructions:
setFullKeyboardAccessShouldShowDebugKeyCommandsView:
setAppValidationTestingMode:
gizmoApplicationAccessibilityEnabled
setGizmoApplicationAccessibilityEnabled:
gizmoSetAutoSpeakEnabledForComplication:slot:face:toggle:
gizmoGetAutoSpeakEnabledForComplication:slot:face:
setVoiceOverSpeakSecondsEncoding:
setVoiceOverDirectTouchEnabledApps:
setImageCaptioningDisabledApps:
setVoiceOverSceneDescriptionsEnabled:
setLocalizationQACaptionShowFilePath:
setLocalizationQACaptionShowUSString:
setLocalizationQACaptionShowLocalizedString:
setLocalizationQACaptionMode:
setShouldFlashForAlertInSilentMode:
setShouldSpeakMedicalPreamble:
setShouldTTYMedicalPreamble:
setMedicalPreamble:
setShouldLimitDisplayRefreshRate:
lastMagnifierResetCount
setLastMagnifierResetCount:
lastSmartInvertColorsEnablement
lastHearingAidHandoffTimeResetCount
setlastHearingAidHandoffTimeResetCount:
lastHearingAidControlPanelTimeResetCount
setlastHearingAidControlPanelTimeResetCount:
lastBrailleScreenInputTimeResetCount
setLastBrailleScreenInputTimeResetCount:
lastTapticTimeResetCount
setLastTapticTimeResetCount:
lastGuidedAccessTimeResetCount
setlastGuidedAccessTimeResetCount:
lastGuidedAccessTimeLimitResetCount
setlastGuidedAccessTimeLimitResetCount:
lastPlatformSwitchTimeResetCount
setlastPlatformSwitchTimeResetCount:
lastCharacterVoiceTimeResetCount
setLastCharacterVoiceTimeResetCount:
lastAssistiveTouchTimeResetCount
setLastAssistiveTouchTimeResetCount:
assistiveTouchUsageCount
setAssistiveTouchUsageCount:
magnifierUsageCount
setMagnifierUsageCount:
tapticTimeUsageCount
setTapticTimeUsageCount:
switchControlPlatformSwitchedCount
setSwitchControlPlatformSwitchedCount:
hearingAidHandOffCount
setHearingAidHandOffCount:
hearingAidControlPanelCount
setHearingAidControlPanelCount:
characterVoicesUsageCount
setCharacterVoicesUsageCount:
guidedAccessTimeLimitsUsageCount
setGuidedAccessTimeLimitsUsageCount:
brokenHomeButtonCount
setBrokenHomeButtonCount:
voiceOverBSIUsageCount
setVoiceOverBSIUsageCount:
setGuidedAccessUsageCount:
setDidResetD22Preferences:
reachabilityEnabled
setReachabilityEnabled:
setCallAudioRoutingAutoAnswerDelay:
setCallAudioRoutingAutoAnswerEnabled:
switchControlCombinedTopLevelMenuItems
setSwitchControlCombinedTopLevelMenuItems:
writeAXLogsToFile
setWriteAXLogsToFile:
setVoiceOverHapticIntensity:
voiceOverVerbositySpeakCustomActionsHint
setVoiceOverVerbositySpeakCustomActionsHint:
setTouchAccommodationsHoldDurationAllowsSwipeGesturesToBypass:
reduceWhitePointLevel
setReduceWhitePointLevel:
setLastPlatformSwitchTimeResetCount:
setLastGuidedAccessTimeLimitResetCount:
setLastGuidedAccessTimeResetCount:
setLastHearingAidControlPanelTimeResetCount:
setLastHearingAidHandoffTimeResetCount:
_migratedSwitchControlMenuItemsPreferenceKeys
_unarchivedVoiceCache
_assistiveTouchInternalOnlyHiddenNubbitModeEnabled
_writeAXLogsToFile
_voiceOverVerbositySpeakCustomActionsHint
_touchAccommodationsHoldDurationAllowsSwipeGesturesToBypass
_reduceWhitePointLevel
_switchControlCombinedTopLevelMenuItems
_voiceOverHapticIntensity
_lastPlatformSwitchTimeResetCount
_lastGuidedAccessTimeLimitResetCount
_lastGuidedAccessTimeResetCount
_lastHearingAidControlPanelTimeResetCount
_lastHearingAidHandoffTimeResetCount
Td,N
T@"NSDictionary",R,N
T@"NSDictionary",&,N
T@"NSString",&,N
T@"NSArray",&,N
Tq,N
T@"NSSet",&,N
T@"NSUUID",&,N
T@"NSArray",&,N,V_switchControlCombinedTopLevelMenuItems
T{CGRect={CGPoint=dd}{CGSize=dd}},N
T{CGPoint=dd},N
T@"NSOrderedSet",&,N
T@"NSNumber",C,N
T@"NSDate",&,N
TQ,N
TB,N,V_assistiveTouchInternalOnlyHiddenNubbitModeEnabled
TB,N,V_writeAXLogsToFile
T@"NSNumber",&,N
T@"NSArray",C,N
T@"NSDictionary",C,N
T@"NSURL",&,N
Tf,N
Td,N,V_voiceOverHapticIntensity
TB,N,V_voiceOverVerbositySpeakCustomActionsHint
T@"NSUUID",C,N
T@"NSData",&,N
T@"AXVoiceOverActivity",&,N
TB,N,V_touchAccommodationsHoldDurationAllowsSwipeGesturesToBypass
Tf,N,V_reduceWhitePointLevel
Td,N,V_lastPlatformSwitchTimeResetCount
Td,N,V_lastGuidedAccessTimeLimitResetCount
Td,N,V_lastGuidedAccessTimeResetCount
Td,N,V_lastHearingAidControlPanelTimeResetCount
Td,N,V_lastHearingAidHandoffTimeResetCount
accessibilityEnabled
applicationAccessibilityEnabled
setApplicationAccessibilityEnabled:
tripleClickOptions
setTripleClickOptions:
appleTVRemoteClickpadTapsForDirectionalNavigationEnabled
setAppleTVRemoteClickpadTapsForDirectionalNavigationEnabled:
assistiveTouchHardwareEnabled
setAssistiveTouchHardwareEnabled:
assistiveTouchUIEnabled
inspectorEnabled
setInspectorEnabled:
automationEnabled
setAutomationEnabled:
automationLocalizedStringLookupInfoEnabled
setAutomationLocalizedStringLookupInfoEnabled:
automationPreferredLocalization
automationFauxCollectionViewCellsEnabled
automationFauxTableViewCellsEnabled
setAutomationFauxCollectionViewCellsEnabled:
setAutomationFauxTableViewCellsEnabled:
automationHitpointWarpingEnabled
setAutomationHitpointWarpingEnabled:
siriSemanticContextEnabled
setSiriSemanticContextEnabled:
setVoiceOverEnabled:
voiceOverSpeakingRate
setVoiceOverSpeakingRate:
voiceOverVolume
setVoiceOverVolume:
voiceOverUsageConfirmed
setVoiceOverUsageConfirmed:
voiceOverEnabledThroughAccessory
setVoiceOverEnabledThroughAccessory:
voiceOverScreenCurtainEnabled
setVoiceOverScreenCurtainEnabled:
voiceOverUIEnabled
setVoiceOverUIEnabled:
voiceOverLanguageRotorItems
setVoiceOverLanguageRotorItems:
voiceOverLanguageRotorItemsExist
voiceOverTypingMode
setVoiceOverTypingMode:
voiceOverBrailleBluetoothDisplay
setVoiceOverBrailleBluetoothDisplay:
voiceOverTouchBrailleTableIdentifier
setVoiceOverTouchBrailleTableIdentifier:
voiceOverBrailleVirtualStatusAlignment
setVoiceOverBrailleVirtualStatusAlignment:
voiceOverBrailleMasterStatusCellIndex
setVoiceOverBrailleMasterStatusCellIndex:
voiceOverBrailleStatusCellPreference
setVoiceOverBrailleStatusCellPreference:
voiceOverBrailleContractionMode
setVoiceOverBrailleContractionMode:
voiceOverBrailleEightDotMode
setVoiceOverBrailleEightDotMode:
zoomToggledByPreferenceSwitch
setZoomToggledByPreferenceSwitch:
zoomToggledByVoiceOver
setZoomToggledByVoiceOver:
zoomSmoothScalingEnabled
setZoomSmoothScalingEnabled:
enhanceTextLegibilityEnabled
setEnhanceTextLegibilityEnabled:
enhanceTextTrackingEnabled
setEnhanceTextTrackingEnabled:
reduceMotionAutoplayVideoPreviewsEnabled
setReduceMotionAutoplayVideoPreviewsEnabled:
increaseButtonLegibilityEnabled
setIncreaseButtonLegibilityEnabled:
buttonShapesEnabled
setButtonShapesEnabled:
reduceWhitePointEnabled
setReduceWhitePointEnabled:
highContrastFocusIndicatorsEnabled
setHighContrastFocusIndicatorsEnabled:
monoAudioEnabled
setMonoAudioEnabled:
audioLeftRightBalance
setAudioLeftRightBalance:
T@"NSArray",&
T@"NSString",R
T@"NSDictionary",C
T@"NSString",C
integerValueForPreferenceKey:defaultValue:
doubleValueForPreferenceKey:defaultValue:
boolValueForPreferenceKey:defaultValue:
objectValueForPreferenceKey:ofClass:defaultValue:
componentsSeparatedByCharactersInSet:
rangeOfString:options:
axContainsString:options:
axIsGenericLanguageCode
letterCharacterSet
uppercaseString
axContainsString:
axIsLanguageCode
axRegionCode
axCapitalizeFirstLetter
sortDescriptorWithKey:ascending:selector:
sortUsingDescriptors:
axUniqueArrayWithPredicate:
axIsEqualToOrderedArray:withPredicate:
axSafeObjectAtIndex:
axArrayByIgnoringNilElementsWithCount:
supportsSiri
supportsAlex
setVoiceClassesMap:
setVoiceNameMap:
voiceClassesMap
voiceNameMap
isOldSiriVoiceIdentifier:
isThemisABEnabled
outputVoiceColorDescriptorForOutputLanguageCode:voiceName:
localizedOutputVoiceColor
localizedCapitalizedString
_siriBaseIdentifierFromIdentifier:
setLanguage:
setQuality:
setInUnitTestMode:
inUnitTestMode
isAlternativeVoice:
isCompactVocalizerVoiceIdentifier:
isCombinedVocalizerVoiceIdentifier:
isAlexAvailableForLanguage:
voiceForVoiceIdentifier:forLanguage:
_siriIdentifierFromBaseIdentifier:language:quality:
_voiceClassesMap
_voiceNameMap
T@"NSMutableDictionary",&,N,V_voiceClassesMap
T@"NSMutableDictionary",&,N,V_voiceNameMap
nameWithoutQuality
_channelForStatusByte:
_eventTypeForStatusByte:
_expectedPacketLengthForEventType:
numberWithUnsignedLong:
parse:error:
_cacheLazyProperties
_isSystemAppAccessibilityBundle
stringByDeletingPathExtension
_codeItemQueue
fileExistsAtPath:isDirectory:
bundleWithURL:
prepareBackingBundleIfNeeded:
codeItemTypeFromString:
initAccessibilityCodeItemWithPath:targetType:platformToTarget:loadOrder:
cachedBundle
_cachedBundle
_loadedAtTimestamp
_loadOrder
_platformToTarget
_associatedAccessibilityCodeItem
_targetType
_targetCodeItem
T@"NSString",&,N,V_path
T@"NSMutableDictionary",&,N,V_platformToTarget
Tq,N,V_targetType
TS,N,V_loadOrder
T@"AXCodeItem",W,N,V_associatedAccessibilityCodeItem
T@"AXCodeItem",W,N,V_targetCodeItem
T@"NSBundle",R,N
initializeSubsytem
_errorWithMessage:underlyingError:
subsystems
wrapError:description:
shouldIncludeBacktraceInLogs
shouldIncludeFileLineAndFunctionInLogs
shouldProcessMessageForLogs
threshold
defaultLogLevel
willLog
willLogInfo
willLogDebug
setIgnoreLogging:
_ignoreLogging
addPointsByFingerIdentifier:forces:atTime:
isEqualToArray:
tapGestureForInterfaceOrientedPoint:
numberOfEvents
fingerIdentifiersAtEventIndex:
timeAtEventIndex:
pointForFingerIdentifier:atEventIndex:
forceForFingerIdentifier:atEventIndex:
arePointsDeviceRelative
updateForLandscape:
_allEvents
_arePointsDeviceRelative
setObject:atIndexedSubscript:
addPointsFromReplayableGesture:
_addPoint:force:forFingerIdentifier:atTime:
_addPoint:force:forFingerIdentifier:atEventIndex:
_removeFingersAtEventIndex:
_pointsByFingerIdentifierAtEventIndex:
_forcesByFingerIdentifierAtEventIndex:
isLeftToRightSwipe
initForLeftToRightSwipe:
setIsLeftToRightSwipe:
isLandscape
setIsLandscape:
_isLeftToRightSwipe
_isLandscape
TB,N,V_isLeftToRightSwipe
TB,N,V_isLandscape
hasLocalizableName
setHasLocalizableName:
shouldPerformAtOriginalLocation
setShouldPerformAtOriginalLocation:
gestureWithPoints:times:forces:
_fingerIdentifierForFingerAtIndex:
gestureShiftedByOffset:
_hasLocalizableName
_shouldPerformAtOriginalLocation
TB,N,V_hasLocalizableName
TB,N,V_shouldPerformAtOriginalLocation
_createIndexesWithSize:
_initWithIndexMap:
_initAndDeepCopyIndexMap:
unsignedLongValue
addIndex:
initWithObjects:andIndexes:count:
deepCopyWithZone:
removeObjectForIndex:
indexes
addObjectsFromIndexMap:
_map
dataWithContentsOfURL:options:error:
JSONObjectWithData:options:error:
timer
updateVisualsSequenceDidBeginHandler
setTimer:
_timerDidFire:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
updateVisualsSequenceInProgressHandler
updateVisualsSequenceDidFinishHandler
notifyUpdateElementVisualsEventDidOccur
setThreshold:
progressInterval
setProgressInterval:
setUpdateVisualsSequenceDidBeginHandler:
setUpdateVisualsSequenceDidFinishHandler:
setUpdateVisualsSequenceInProgressHandler:
lastProgressTime
setLastProgressTime:
_threshold
_progressInterval
_updateVisualsSequenceDidBeginHandler
_updateVisualsSequenceDidFinishHandler
_updateVisualsSequenceInProgressHandler
_timer
_lastProgressTime
T@"NSTimer",&,N,V_timer
Td,N,V_lastProgressTime
Td,N,V_threshold
Td,N,V_progressInterval
T@?,C,N,V_updateVisualsSequenceDidBeginHandler
T@?,C,N,V_updateVisualsSequenceDidFinishHandler
T@?,C,N,V_updateVisualsSequenceInProgressHandler
initWithQueue:block:
mainQueueCoalescerWithBlock:
performCoalescedAsynchronously
_targetQueue
_consistencyQueue
_coalescing
setEventHandler:
_handleObjectAddedNotification:
_handleObjectRemovedNotification:
_handlePropertyChangedNotification:
_handleThruConnectionsChangedNotification:
_handleSerialPortOwnerChangedNotification:
_handleIOErrorNotification:
parser
eventHandler
_resetAndDetectDevices
devices
_nameForMidiObjectType:
_deviceForMidiDevice:addIfNeeded:
_addMidiEntity:
_addMidiSource:
_addMidiDestination:
_removeMidiDevice:
_removeMidiEntity:
_removeMidiSource:
_removeMidiDestination:
printAttachedDevices
setParser:
setDevices:
midiClientRef
setMidiClientRef:
midiInputPortRef
setMidiInputPortRef:
_midiClientRef
_midiInputPortRef
_eventHandler
_parser
T@"AXMIDIParser",&,N,V_parser
T@"NSString",&,N,V_clientIdentifier
T@"NSMutableSet",&,N,V_devices
TI,N,V_midiClientRef
TI,N,V_midiInputPortRef
T@?,C,N,V_eventHandler
supportsLongPress
_switchWithAction:excludedUUIDs:needsToSupportLongPress:
_hasSwitchWithUUID:
_switchWithAnyActionExcludingUUIDs:needsToSupportLongPress:
updateRecipe:
_updateWithoutSavingExistingRecipe:allRecipes:
_assignDefaultTitleIfNeededToRecipe:
_createAndSaveRecipeForInterfaceOrientedPoint:forHold:
saveRecipe:
validateAndUpdateRecipeIfNeeded:
isNewRecipe:
createAndSaveRecipeForInterfaceOrientedPoint:
createAndSaveRecipeForInterfaceOrientedHoldPoint:
switchForUUID:
brailleString
outputVariants
performPunctuationTranslation
replaceCommas
outputActionID
newOutputActionID
initWithAXAction:
initWithString:
_rangeOfString
setString:overrideOriginalString:
objectForVariant:
removeObjectForVariant:
setBrailleString:
originalString
generatesBraille
setGeneratesBraille:
setPerformPunctuationTranslation:
setReplaceCommas:
wasDivided
_generatesBraille
_performPunctuationTranslation
_replaceCommas
_wasDivided
_variants
_string
_brailleString
_originalString
_outputActionID
T@"NSString",&,N,V_string
T@"NSString",&,N,V_brailleString
T@"NSString",R,N,V_originalString
T{_NSRange=QQ},R,N,V_rangeOfString
TB,N,V_generatesBraille
TB,N,V_performPunctuationTranslation
TB,N,V_replaceCommas
TB,N,V_wasDivided
T@"AXIndexMap",R,N,V_variants
TQ,R,N,V_outputActionID
loadResource:principalClass:error:
directionPadUp
directionPadDown
directionPadLeft
directionPadRight
faceButtonA
faceButtonB
faceButtonX
faceButtonY
shoulderButtonL1
shoulderButtonL2
shoulderButtonR1
shoulderButtonR2
leftJoystickX
leftJoystickY
leftJoystickButton
rightJoystickX
rightJoystickY
rightJoystickButton
menuButton
viewButton
homeButton
rightJoystickActive
leftJoystickActive
isJoystickPressed
isDirectionPadPressed
isFaceButtonPressed
isShoulderButtonPressed
isKeyboardTypeButtonPressed
_directionPadUp
_directionPadDown
_directionPadLeft
_directionPadRight
_faceButtonA
_faceButtonB
_faceButtonX
_faceButtonY
_shoulderButtonR1
_shoulderButtonR2
_shoulderButtonL1
_shoulderButtonL2
_leftJoystickX
_leftJoystickY
_leftJoystickButton
_rightJoystickX
_rightJoystickY
_rightJoystickButton
_menuButton
_viewButton
_homeButton
Td,N,V_directionPadUp
Td,N,V_directionPadDown
Td,N,V_directionPadLeft
Td,N,V_directionPadRight
Td,N,V_faceButtonA
Td,N,V_faceButtonB
Td,N,V_faceButtonX
Td,N,V_faceButtonY
Td,N,V_shoulderButtonR1
Td,N,V_shoulderButtonR2
Td,N,V_shoulderButtonL1
Td,N,V_shoulderButtonL2
Td,N,V_leftJoystickX
Td,N,V_leftJoystickY
Td,N,V_leftJoystickButton
Td,N,V_rightJoystickX
Td,N,V_rightJoystickY
Td,N,V_rightJoystickButton
Td,N,V_menuButton
Td,N,V_viewButton
Td,N,V_homeButton
eventSenderIdentifier
dataWithSender:
page
usage
modifierFlags
eventValue1
eventValue2
wasPostedByAccessibility
_storage
Tf,R,N
T*,R,N
_initAndManageWithSettings:
ansiColorSeqForAXLogColor:
coloredString:withColor:
setManagedBySettings:
_updateSettingsFromUserPrefs
defaultLightColorsTheme
setColorTheme:
setPreferDarkColors:
defaultDarkColorsTheme
isManagedBySettings
preferDarkColors
colorTheme
colorizeStringIfEnabled:withColor:
whiteOrBlackString:
greyString:
_active
_managedBySettings
_preferDarkColors
_colorTheme
managedBySettings
TB,N,GisManagedBySettings,V_managedBySettings
T{AXLogColorTheme=qqqq},N,V_colorTheme
TB,N,GisActive,V_active
TB,N,V_preferDarkColors
setReplayBlock:
setCompletionBlock:
setAttemptsRemaining:
setMaxAttempts:
setInterval:
setAsync:
setQueue:
_dispatchAsynchronously
_dispatchSynchronously
replayBlock
setUnderlyingResult:
setUnderlyingError:
interval
underlyingError
_genericFailError
completionBlock
underlyingResult
replayBlock:name:attempts:interval:async:queue:completion:
dispatch
maxAttempts
attemptsRemaining
didSucceed
setDidSucceed:
_didSucceed
_replayBlock
_completionBlock
_interval
_maxAttempts
_attemptsRemaining
_underlyingError
_underlyingResult
T@?,C,N,V_replayBlock
T@?,C,N,V_completionBlock
Td,N,V_interval
Tq,N,V_maxAttempts
Tq,N,V_attemptsRemaining
TB,N,V_async
T@"NSObject<OS_dispatch_queue>",W,N,V_queue
TB,N,V_didSucceed
T@"NSError",&,N,V_underlyingError
T@,&,N,V_underlyingResult
replayer
replayWithName:attempts:interval:async:queue:replayBlock:completion:
initWithHIDTapIdentifier:HIDEventTapPriority:systemEventTapIdentifier:systemEventTapPriority:
setHIDEventTapIdentifier:
setHIDEventTapPriority:
setHIDEventFilterMask:
setSystemEventTapIdentifier:
setSystemEventTapPriority:
setHidActualEventTapEnabledReasons:
setSystemActualEventTapEnabledReasons:
_runHIDEventReceiveThread
initWithBlock:
start
hidActualEventTapEnabledReasons
_uninstallHIDEventFilter
HIDEventTapIdentifier
isHandlingHIDEvents
setHandlingHIDEvents:
_installHIDEventFilter
HIDEventTapPriority
systemActualEventTapEnabledReasons
systemEventTapIdentifier
isHandlingSystemEvents
setHandlingSystemEvents:
_installSystemEventFilter
_uninstallSystemEventFilter
systemEventTapPriority
addPort:forMode:
distantFuture
runMode:beforeDate:
HIDEventFilterMask
shouldNotifyUserEventOccurred
backgroundAccessQueue
performAsynchronousReadingBlock:
HIDEventHandler
failedToHandleEventInTime
systemEventHandler
hidEventTapEnabledReasons
_threadStop
cleanup
beginHandlingHIDEventsForReason:
endHandlingHIDEventsForReason:
raiseHIDEventTapPriorityToMaximum
restoreHIDEventTapPriorityToDefault
systemEventTapEnabledReasons
beginHandlingSystemEventsForReason:
endHandlingSystemEventsForReason:
raiseSystemEventTapPriorityToMaximum
restoreSystemEventTapPriorityToDefault
setShouldNotifyUserEventOccurred:
HIDEventReceiveThread
setHIDEventReceiveThread:
setHIDEventHandler:
setFailedToHandleEventInTime:
setSystemEventHandler:
ignoreAllSystemEvents
setIgnoreAllSystemEvents:
_shouldRunHIDReceiveThreadRunloop
_shouldNotifyUserEventOccurred
_handlingHIDEvents
_ignoreAllSystemEvents
_handlingSystemEvents
_HIDEventTapPriority
_systemEventTapPriority
_HIDEventTapIdentifier
_HIDEventReceiveThread
_HIDEventHandler
_HIDEventFilterMask
_failedToHandleEventInTime
_systemEventTapIdentifier
_systemEventHandler
_hidActualEventTapEnabledReasons
_systemActualEventTapEnabledReasons
T@"NSString",&,N,V_HIDEventTapIdentifier
Ti,N,V_HIDEventTapPriority
T@"NSThread",&,N,V_HIDEventReceiveThread
handlingHIDEvents
TB,N,GisHandlingHIDEvents,V_handlingHIDEvents
T@"NSMutableArray",&,N,V_hidActualEventTapEnabledReasons
T@"NSString",&,N,V_systemEventTapIdentifier
Ti,N,V_systemEventTapPriority
handlingSystemEvents
TB,N,GisHandlingSystemEvents,V_handlingSystemEvents
T@"NSMutableArray",&,N,V_systemActualEventTapEnabledReasons
TB,N,V_shouldNotifyUserEventOccurred
T@?,C,N,V_HIDEventHandler
TQ,N,V_HIDEventFilterMask
T@?,C,N,V_failedToHandleEventInTime
T@?,C,N,V_systemEventHandler
TB,N,V_ignoreAllSystemEvents
T@"NSArray",R,W,N
decodePropertyListForKey:
setAccessibilityOptions:
setAxPreferredContentSizeCategoryName:
setAxOSVersion:
setAxModel:
setUsesExtendedSlider:
accessibilityOptions
axPreferredContentSizeCategoryName
axOSVersion
axModel
usesExtendedSlider
removeObjectsForKeys:
testData
productVersionForBuddy
deviceClassForBuddy
setTestData:
processDomainDictionary:
dataPackageForCurrentSettings
applySavedSettings
setTestData:forModel:hasHomeButton:largeTextUsesExtendedRange:
dataBlobForBuddy
restoreDataBlobForBuddy:
_usesExtendedSlider
_accessibilityOptions
_axOSVersion
_axModel
_axPreferredContentSizeCategoryName
T@"NSDictionary",&,N,V_accessibilityOptions
T@"NSString",&,N,V_axOSVersion
T@"NSString",&,N,V_axModel
T@"NSString",&,N,V_axPreferredContentSizeCategoryName
TB,N,V_usesExtendedSlider
_sourceForMidiEndpoint:addIfNeeded:
_destinationForMidiEndpoint:addIfNeeded:
setSources:
setDestinations:
setMidiEntity:
_midiEntity
_sources
_destinations
TI,N,V_midiEntity
T@"NSMutableSet",&,N,V_sources
T@"NSMutableSet",&,N,V_destinations
T@"AXMIDIDevice",W,N,V_device
ax_prettyDescription
_ax_appendPrettyDescriptionToString:indentationString:visitedCollections:
deleteCharactersInRange:
label
setAssertedAccessQueue:
setAlarmTimers:
setAlarmDurationsInSeconds:
startTime
expirationDurationInSeconds
alarmDurationsInSeconds
assertedAccessQueue
canReadInCurrentExecutionThread
timeIntervalSinceNow
setExpirationDurationInSeconds:
_addAlarmForDuration:
_scheduleTimers
timeRestrictionWasCancelled:
_removeAllTimers
setStartTime:
timeDidExpireForTimeRestriction:
setExpirationTimer:
timeAlarmDidOccurForTimeRestriction:
alarmTimers
_removeAllAlarmTimers
_removeExpirationTimer
expirationTimer
initWithAssertedAccessQueue:
remainingTimeInSeconds
beginWithDuration:
pause
resume
_paused
_expirationDurationInSeconds
_alarmDurationsInSeconds
_startTime
_assertedAccessQueue
_expirationTimer
_alarmTimers
TB,N,GisPaused,V_paused
T@"NSDate",&,N,V_startTime
Tq,N,V_expirationDurationInSeconds
T@"AXAccessQueueTimer",&,N,V_expirationTimer
T@"NSMutableSet",&,N,V_alarmDurationsInSeconds
T@"NSMutableArray",&,N,V_alarmTimers
T@"<GAXTimeRestrictionManagerDelegate>",W,N,V_delegate
T@"AXAccessQueue",&,N,V_assertedAccessQueue
headSwitch
productName
manufacturerName
remoteSwitchIdentifier
remoteDeviceName
remoteDeviceIdentifier
accessibilityEventUsagePage
accessibilityEventUsage
accessibilityEventModifierFlags
unsignedShortValue
initWithAction:name:source:type:
hasLongPressAction
localizedSourceDescription
setProductName:
setManufacturerName:
setHeadSwitch:
setAccessibilityEventUsagePage:
setAccessibilityEventUsage:
setAccessibilityEventModifierFlags:
setRemoteSwitchIdentifier:
setRemoteDeviceName:
setRemoteDeviceIdentifier:
_source
_productName
_manufacturerName
_buttonNumber
_headSwitch
_midiEvent
_accessibilityEventUsagePage
_accessibilityEventUsage
_accessibilityEventModifierFlags
_remoteSwitchIdentifier
_remoteDeviceName
_remoteDeviceIdentifier
Tq,N,V_action
Tq,N,V_longPressAction
T@"NSString",C,N,V_name
T@"NSString",&,N,V_source
T@"NSString",&,N,V_type
T@"NSString",C,N,V_productName
T@"NSString",C,N,V_manufacturerName
Tq,N,V_buttonNumber
Tq,N,V_headSwitch
T@"AXMIDIEvent",&,N,V_midiEvent
Tq,N,V_accessibilityEventUsagePage
Tq,N,V_accessibilityEventUsage
Tq,N,V_accessibilityEventModifierFlags
T@"NSString",C,N,V_remoteSwitchIdentifier
T@"NSString",C,N,V_remoteDeviceName
T@"NSString",C,N,V_remoteDeviceIdentifier
arrayWithArray:
_linguisticStringForCharacter:language:linguisticType:andVoiceIdentifier:
setIPASpeechPhonemes:
phonemeStringForCharacter:forLanguage:andVoiceIdentifier:
phoneticStringForCharacter:forLanguage:andVoiceIdentifier:
phDictionaries
setPhDictionaries:
_phDictionaries
T@"NSMutableDictionary",&,N,V_phDictionaries
bundleWithIdentifier:
_path:bundleID:forRescource:
loadImageWithIdentifier:orPath:principalClass:error:
pathWithComponents:
@16@0:8
v16@0:8
v24@0:8@16
B16@0:8
@20@0:8i16
B20@0:8i16
v32@0:8@?16@24
v20@0:8i16
B24@0:8i16B20
@20@0:8B16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
I16@0:8
v20@0:8I16
S16@0:8
v20@0:8S16
C16@0:8
v20@0:8C16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
@"NSArray"
{CGPoint="x"d"y"d}
@24@0:8q16
@28@0:8q16B24
@28@0:8i16@20
@36@0:8i16@20@28
i16@0:8
{?=[8I]}16@0:8
v48@0:8{?=[8I]}16
v24@0:8Q16
v20@0:8B16
@"NSDictionary"
{?="val"[8I]}
@40@0:8@16#24r*32
^v24@0:8@16
i24@0:8@16
I24@0:8@16
q24@0:8@16
Q24@0:8@16
f24@0:8@16
d24@0:8@16
{_NSRange=QQ}24@0:8@16
{CGPoint=dd}24@0:8@16
{CGSize=dd}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
q32@0:8@16#24
v40@0:8@?16@24#32
@32@0:8@16:24
:16@0:8
v24@0:8:16
d16@0:8
v32@0:8@16:24
@"CADisplayLink"
@"NSMutableSet"
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
v24@0:8d16
@"NSString"
{_NSRange="location"Q"length"Q}
v32@0:8@16@?24
^I36@0:8@16B24^q28
@40@0:8@16@24Q32
@32@0:8@16^B24
@32@0:8@16Q24
@?16@0:8
v24@0:8@?16
^{__IOHIDEventSystemClient=}16@0:8
v24@0:8^{__IOHIDEventSystemClient=}16
^{__IOHIDEventSystemClient=}
v24@0:8^v16
v32@0:8@16Q24
v36@0:8@16B24Q28
v52@0:8@16@24B32@36Q44
v24@0:8^{__IOHIDEvent=}16
B36@0:8^{__IOHIDEvent=}16I24@28
v28@0:8@16i24
v60@0:8^v16@24^v32^{__IOHIDEvent=}40@48B56
v52@0:8@16B24B28B32B36B40B44B48
@48@0:8@16B24B28B32B36B40B44
@36@0:8@?16@24i32
@64@0:8@?16@24i32B36B40B44B48B52B56B60
@72@0:8@?16@24i32B36B40B44B48B52B56B60@?64
@40@0:8@?16@24@?32
@"NSMutableArray"
@"NSRecursiveLock"
@32@0:8@16@24
@"<AXAssertionCoordinatorDelegate>"
@"NSObject<OS_dispatch_queue>"
@"NSHashTable"
v36@0:8@16@24i32
v32@0:8@16@24
v28@0:8B16@20
v32@0:8q16@24
v32@0:8Q16@24
q16@0:8
v24@0:8q16
d32@0:8Q16Q24
@"AXDispatchTimer"
@72@0:8@16@24{_NSRange=QQ}32B48B52Q56d64
@76@0:8@16@24{_NSRange=QQ}32B48B52Q56d64B72
@88@0:8@16@24{_NSRange=QQ}32{_NSRange=QQ}48B64B68Q72d80
@192@0:8@16@24B32{_NSRange=QQ}36{_NSRange=QQ}52B68Q72^Q80^B88^B96B104B108Q112^B120d128^B136^@144^@152^B160^{_NSRange=QQ}168^B176q184
@196@0:8@16@24B32{_NSRange=QQ}36{_NSRange=QQ}52B68Q72^Q80^B88^B96B104B108Q112^B120d128^B136^@144^@152^B160^{_NSRange=QQ}168^B176B184q188
@36@0:8@16@24B32
B32@0:8@16^@24
@32@0:8@16^@24
v40@0:8@16@24@?32
@"AXIPCServer"
@"AXIPCClient"
{AXBColorFilterDescription=[3[3d]]}16@0:8
@"<AXBackBoardServerInstanceDelegate>"16@0:8
@"<AXBackBoardServerInstance>"16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16I48I52
{CGPoint=dd}40@0:8{CGPoint=dd}16I32I36
I20@0:8I16
I32@0:8{CGPoint=dd}16
v44@0:8@16B24@28@36
v44@0:8@"AXEventRepresentation"16B24@"NSString"28@"NSArray"36
v40@0:8@16@24@32
v28@0:8@16B24
{CGRect={CGPoint=dd}{CGSize=dd}}52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16I48
{CGPoint=dd}36@0:8{CGPoint=dd}16I32
v52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16I48
{CGRect={CGPoint=dd}{CGSize=dd}}20@0:8I16
v40@0:8@16Q24@?32
Q24@0:8^@16
@"NSMutableDictionary"
@24@0:8@?16
q32@0:8@16@24
@60@0:8@16@24B32@36q44@52
@32@0:8@16@?24
@"AXIPCMessage"
@28@0:8I16@20
@"NSObject<OS_dispatch_source>"
@"<AXIPCServerClientRegistrationDelegate>"
@36@0:8@16:24B32
v24@0:8@"AXIPCServerClientRegistration"16
@28@0:8@16B24
@28@0:8I16^{__CFRunLoopSource=}20
v24@0:8^{__CFRunLoopSource=}16
B24@0:8^@16
v28@0:8@?16i24
v36@0:8i16@20[1{__va_list_tag=II^v^v}]28
v36@0:8@16:24i32
v40@0:8@16:24B32i36
v44@0:8@16:24i32@36
v48@0:8@16:24B32i36@40
B68@0:8I16{?=[8I]}20@52@?60
B56@0:8{?=[8I]}16@48
v76@0:8@16{?=[2I]}24{?=[8I]}32I64@?68
@48@0:8{?=[8I]}16
^{__CFRunLoopSource=}
@40@0:8@?16d24@32
@"AXAccessQueueTimer"
@20@0:8I16
@36@0:8I16@20@?28
^{__CFRunLoopSource=}16@0:8
B40@0:8@16^@24@?32
B36@0:8@16I24^@28
B32@0:8@16@?24
B40@0:8@16@24@?32
v32@0:8d16@?24
B36@0:8@16i24^@28
^{__CFMachPort=}16@0:8
v24@0:8^{__CFMachPort=}16
f16@0:8
v20@0:8f16
^{__CFMachPort=}
@"NSLock"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"AXAccessQueue"
v24@0:8^{__IOHIDDevice=}16
@24@0:8^{__IOHIDDevice=}16
@"NSRunLoop"
^{__IOHIDManager=}
@"<AXDeviceMonitorDelegate>"
@"AXMIDIDeviceEntity"
B24@0:8q16
B32@0:8q16@24
v48@0:8@16@24d32@?40
v32@0:8@"AXMIDIDeviceEntity"16@"AXMIDIDeviceEntityEndpoint"24
@24@0:8I16B20
@"<AXMIDIDeviceProtocol>"
@"NSNumber"
v40@0:8@?16@24^@32
@40@0:8@16#24@32
B32@0:8@16@24
@"NSUUID"
@"NSSet"
v40@0:8@?16@?24@?32
v48@0:8@?16@?24@?32@?40
v48@0:8@?16d24@32@40
v24@0:8B16B20
B40@0:8@16@24@32
B40@0:8@16@24r*32
B48@0:8@16@24@32r*40
B44@0:8@16@24@32i40
B60@0:8@16@24@32i40@44@52
B56@0:8@16@24@32r*40[1{__va_list_tag=II^v^v}]48
B56@0:8@16@24@32@40r*48
B64@0:8@16@24@32@40@48r*56
B40@0:8@16@24B32B36
B48@0:8@16@24@32B40B44
v36@0:8i16#20@?28
@24@0:8^{objc_method=}16
v52@0:8@16@24i32@36@44
v24@0:8#16
v40@0:8i16#20^^{objc_method}28I36
B28@0:8@16B24
v48@0:8@16@24@32@40
@"<AXValidationReportingServices>"
@24@0:8^{?=CCCff{CGPoint=dd}I^v}16
v24@0:8^{?=CCCff{CGPoint=dd}I^v}16
^v16@0:8
{CGSize=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@32@0:8{CGPoint=dd}16
@32@0:8{CGSize=dd}16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8@"<AXImageMonitor>"16@"NSString"24
v24@0:8@"<AXImageMonitor>"16
v40@0:8q16@?24@32
@40@0:8@16q24@32
@"<AXImageMonitor>"
@32@0:8@16#24
^?24@0:8:16
@24@0:8#16
v24@0:8^{CGPath=}16
^{CGPath=}16@0:8
^{CGPath=}
@32@0:8@16q24
v48@0:8@16@24@32q40
v40@0:8@16@24q32
v48@0:8@16{_NSRange=QQ}24@40
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
B40@0:8@16d24^@32
B32@0:8d16^@24
B24@0:8d16
B24@0:8Q16
B28@0:8d16B24
@24@0:8Q16
q20@0:8B16
v36@0:8q16B24Q28
B28@0:8B16Q20
B32@0:8q16^@24
@"AVSpeechUtterance"
@"<AXOratorDelegate>"
@"AXLanguageTaggedContent"
@"AVSpeechSynthesizer"
@"AXLanguageTag"
S24@0:8^{__IOHIDEvent=}16
@24@0:8^{__IOHIDEvent=}16
v24@0:8@?<v@?@"NSString">16
@"NSSet"16@0:8
v24@0:8@"<AXImageMonitorObserver>"16
@84@0:8f16{CGRect={CGPoint=dd}{CGSize=dd}}20{CGRect={CGPoint=dd}{CGSize=dd}}52
@20@0:8f16
d24@0:8d16
@80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
@60@0:8@16B24B28B32@36@44@52
@"AXDialectMap"
B24@0:8S16B20
B24@0:8I16B20
B28@0:8q16B24
B48@0:8@16S24I28q32@40
v24@0:8^{__IOHIDValue=}16
^{__IOHIDDevice=}16@0:8
^{__IOHIDManager=}16@0:8
v24@0:8^{__IOHIDManager=}16
@"<AXSwitchRegistrarDelegate>"
@"AXSwitch"
^{__IOHIDDevice=}
@"AXMIDIManager"
@"AXReplayableGesture"
@56@0:8@16@24@32@40@48
B20@0:8S16
B20@0:8I16
@"AXLangMap"
@"NSLocale"
@"NSCharacterSet"
@20@0:8S16
@28@0:8S16@20
@40@0:8@?16@?24@32
@32@0:8S16@20B28
@52@0:8@16{_NSRange=QQ}24@40B48
@"NSMutableOrderedSet"
^{?=if}28@0:8f16@20
@"NSMutableString"
v32@0:8d16@?<v@?>24
v40@0:8d16@?24@?32
@"NSThread"
@"AXThreadTimerTask"
^{__GSKeyboard=}16@0:8
C20@0:8C16
@72@0:8I16i20Q24{CGPoint=dd}32{CGPoint=dd}48@64
@32@0:8^{__IOHIDEvent=}16@24
v36@0:8@16q24B32
@52@0:8^{__IOHIDEvent=}16^{__IOHIDServiceClient=}24@32@40I48
@56@0:8{CGPoint=dd}16{CGPoint=dd}32@48
@40@0:8^{__IOHIDEvent=}16^{__IOHIDServiceClient=}24@32
@44@0:8^{__IOHIDEvent=}16@24@32I40
@36@0:8I16{CGPoint=dd}20
@40@0:8q16q24q32
@48@0:8q16q24q32q40
@56@0:8q16q24q32q40f48f52
B24@0:8^{__IOHIDEvent=}16
^{__IOHIDEvent=}16@0:8
^{__IOHIDEvent=}20@0:8I16
@24@0:8B16B20
C32@0:8{CGPoint=dd}16
^{__IOHIDEvent=}24@0:8^{__IOHIDEvent=}16
^{__IOHIDServiceClient=}16@0:8
v24@0:8^{__IOHIDServiceClient=}16
@"AXEventHandInfoRepresentation"
@"AXEventKeyInfoRepresentation"
@"AXEventAccelerometerInfoRepresentation"
@"AXEventGameControllerInfoRepresentation"
@"AXEventPointerInfoRepresentation"
@"AXEventIOSMACPointerInfoRepresentation"
@"NSData"
^{__IOHIDEvent=}
^{__IOHIDServiceClient=}
@"AXEventData"
^{__CFString=}20@0:8i16
v32@0:8^i16Q24
@40@0:8@16@24B32B36
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v40@0:8^B16^B24^d32
@40@0:8@16q24^B32
B32@0:8@16q24
v32@0:8@16q24
v28@0:8f16@20
v44@0:8@16@24@32B40
@40@0:8@16@24q32
@32@0:8r^{MIDIPacketList=I[1{MIDIPacket=QS[256C]}]}16^@24
q20@0:8C16
Q24@0:8q16
S20@0:8C16
@44@0:8@16q24@32S40
@24@0:8^@16
v40@0:8q16@24@?32
@"NSBundle"
{?="isDyldOpened"b1}
@"AXCodeItem"
d24@0:8Q16
{CGPoint=dd}32@0:8@16Q24
d32@0:8@16Q24
v40@0:8@16@24d32
v56@0:8{CGPoint=dd}16d32@40d48
v56@0:8{CGPoint=dd}16d32@40Q48
@40@0:8@16@24@32
@40@0:8^@16^Q24Q32
^Q24@0:8^Q16
^{__CFDictionary=}
@"NSTimer"
v32@0:8@"AXMIDIDevice"16@"AXMIDIDeviceEntity"24
v40@0:8@"AXMIDIDevice"16@"AXMIDIDeviceEntity"24@"AXMIDIDeviceEntityEndpoint"32
v24@0:8^{MIDIObjectAddRemoveNotification=iIIiIi}16
v24@0:8^{MIDIObjectPropertyChangeNotification=iIIi^{__CFString}}16
v24@0:8^{MIDIIOErrorNotification=iIIi}16
@"AXMIDIParser"
@36@0:8q16@24B32
@36@0:8{CGPoint=dd}16B32
@"AXIndexMap"
@32@0:8*16q24
*16@0:8
{_AXEventDataStorage="eventSenderIdentifier"q"page"q"usage"q"modifierFlags"q"eventValue1"f"eventValue2"f}
{AXLogColorTheme=qqqq}16@0:8
*24@0:8q16
v48@0:8{AXLogColorTheme=qqqq}16
{AXLogColorTheme="errorColor"q"warningColor"q"infoColor"q"debugColor"q}
@68@0:8@?16@24q32d40B48@52@?60
@"NSError"
v68@0:8@16q24d32B40@44@?52@?60
@40@0:8@16i24@28i36
v40@0:8@16@24B32B36
@"AXMIDIDevice"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@"NSDate"
@"<GAXTimeRestrictionManagerDelegate>"
@48@0:8q16@24@32@40
@"AXMIDIEvent"
@48@0:8@16@24q32@40
@48@0:8@16@24^#32^@40
@40@0:8Q16^#24^@32
v40@0:8^@16^@24Q32
?ffffff
?333333
v8@?0
string
com.apple.springboard
com.apple.CarPlayApp
com.apple.SpringBoard.ControlCenter
com.apple.Spotlight
com.apple.camera
com.apple.backboardd
assistivetouchd
com.apple.accessibility.AccessibilityUIServer
com.apple.mobilesafari
com.apple.purplebuddy
com.apple.PreBoard
com.apple.CheckerBoard
com.apple.quicklook.quicklookd
com.apple.MobileSMS
com.apple.iBooks
com.apple.siri
com.apple.mobilemail
com.apple.MailCompositionService
com.apple.UIKit
com.apple.TVMLKit
com.apple.ControlCenterUI
com.apple.ControlCenterUIKit
TVIdleScreen
CommandAndControl
com.apple.Bridge
com.apple.VoiceShortcuts
com.apple.shortcuts
com.apple.AccessibilityUtilities.AXSettingsShortcuts
com.apple.facetime
com.apple.FullKeyboardAccess
com.apple.news
com.apple.sidecar
com.apple.HeadBoard
com.apple.chronod
com.apple.ClipViewService
accessibilityutilitiesbundle
com.apple.TVSettings
com.apple.PineBoard
com.apple.TVAirPlay
com.apple.nanobuddy
com.apple.Carousel
com.apple.clockface
com.apple.SketchBoard
function luminance(color) {  if (color.length == 4 && color[3] == 0) { return 1; } for (var k = 0; k < 3; k++) { var adjusted = 0;  var value = color[k] / 255;  if (value < 0.03928) {        value = value / 12.92;    } else {        value = (value + .055) / 1.055;        value = Math.pow(value, 2.4); } color[k] = value;   } return (color[0] * .2126) + (color[1] * .7152) + (color[2] * .0722); }
function dm() { var supportedSchemes = document.head.querySelector("meta[name='supported-color-schemes']");
var supportedSchemesDM = (supportedSchemes && supportedSchemes.content && supportedSchemes.content.includes('dark'));
var colorSchemes = document.head.querySelector("meta[name='color-scheme']");
var colorSchemesDM = (supportedSchemes && supportedSchemes.content && supportedSchemes.content.includes('dark'));
var classListDM = document.documentElement.classList.contains('apple-mail-implicit-dark-support');
var bgColor = document.body && window.getComputedStyle(document.body).getPropertyValue('background-color');
bgColor = bgColor.replace(/[^\d,]/g, '').split(',');
var luma = bgColor ? luminance(bgColor) : .99;
return (supportedSchemesDM || colorSchemesDM || classListDM || (luma < .3)) }
dm();
UIApplication
sharedApplication
applicationState
SBMachServices
com.apple.uikit.viewservice
AXInPreBoardScenarioUpdatedNotification
AXInCheckerBoardScenarioUpdatedNotification
user named '%s'
user with identifier '%lu'
ProductVersion
v32@?0@"NSString"8Q16^B24
apple-internal-install
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35
AccessibilityFrameworks-
1234567890.-
Accessibility
Release Root
AccessibilityFrameworks-SHA__
_Frameworks_Accessibility
ATP Root: %@
GetJob
SetupDone
ForceNoBuddy
/System/Library/PrivateFrameworks/AccessibilityDebuggerTarget.framework
Error: Unable to load AccessibilityDebuggerTarget framework: %@ 
Principal class :%@. does not respond to expected 'target' class method
AppleInternal
CoreServices
hidden
q24@?0@8@16
AXPreBoardQueue
mobile
ask.sheet.option.GuidedAccess.on
ask.sheet.option.AssistiveTouch.on
ask.sheet.option.SwitchOver.on
ask.sheet.option.WhiteOnBlack.on
ask.sheet.option.VoiceOver.on
ask.sheet.option.Zoom.on
ask.sheet.option.HearingAidControl.on
ask.sheet.option.reduce.white.point.on
ask.sheet.option.DisplayFiltersColor.on
ask.sheet.option.grayscale.on
ask.sheet.option.touch.accommodations
ask.sheet.option.magnifier.on
Loc Caption Panel
AX Development Tools
ask.sheet.option.temporarily.undo.double.invert
ask.sheet.option.reduce.transparency
ask.sheet.option.reduce.motion
ask.sheet.option.left.right.balance
ask.sheet.option.increase.contrast
ask.sheet.option.command.and.control.on
ask.sheet.option.full.keyboard.access.on
B24@?0@"NSNumber"8Q16
AXPISystemActionHelper
Class getAXPISystemActionHelperClass(void)_block_invoke
AXTripleClickHelpers.m
Unable to find class %s
void *AccessibilityPhysicalInteractionLibrary(void)
/System/Library/PrivateFrameworks/AccessibilityPhysicalInteraction.framework/AccessibilityPhysicalInteraction
/System/Library/PrivateFrameworks/AccessibilityPhysicalInteraction.framework/Contents/MacOS/AccessibilityPhysicalInteraction
eventType
initialFingerCount
currentFingerCount
swipe
systemGesturePossible
paths
handIdentity
handIndex
handPosition
handEventMask
{CGPoint=dd}
  Hand Info
    Type:                    %@
    Initial Finger Count:    %i
    Current Finger Count:    %i
    Swipe:                   %i
    System Gesture Possible: %i
    Hand Paths:
 - eventType %@, initialFingerCount %i, currentFingerCount %i, swipe %i, systemGesturePossible %i, isStylus %i, 
paths %@
com.apple.MobileAsset.MacinTalkVoiceAssets
com.apple.MobileAsset.VoiceServices.CustomVoice
com.apple.MobileAsset.VoiceServices.GryphonVoice
com.apple.MobileAsset.VoiceServices.CombinedVocalizerVoices
FormatVersion
VoiceVersion
VoiceId
q24@?0@"MAAsset"8@"MAAsset"16
 (%@)
female
male
v16@?0@"NSArray"8
macintalk-xml-queue
Alex
Victoria
B32@?0@"TTSVoiceAsset"8Q16^B24
fr-FR
fr_FR
en-IN
en_IN
nicky
yushu
v16@?0q8
VSVoiceAsset
Class getVSVoiceAssetClass(void)_block_invoke
AXSpeechUtilities.m
void *VoiceServicesLibrary(void)
/System/Library/PrivateFrameworks/VoiceServices.framework/VoiceServices
/System/Library/PrivateFrameworks/VoiceServices.framework/Contents/MacOS/VoiceServices
AXSettingsVoiceAssetManager
Class getAXSettingsVoiceAssetManagerClass(void)_block_invoke
void *AXSpeechAssetServicesLibrary(void)
/System/Library/PrivateFrameworks/AXSpeechAssetServices.framework/AXSpeechAssetServices
/System/Library/PrivateFrameworks/AXSpeechAssetServices.framework/Contents/MacOS/AXSpeechAssetServices
VSSpeechSynthesizer
Class getVSSpeechSynthesizerClass(void)_block_invoke
|%@:%lu %s|
%@%@
%{public}@
%{public}s
%{private}@
{redacted}
%{private}s
axprintln
_AXLogThresholdQueue
repeatCount
time
(repeated %@ times(s)): %@
U.S.
en_US
AXIPCErrorDomain
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXIPCMessage.m
-[AXIPCMessage dealloc]
%s: Failure deallocating right %llx: %d! This probably means there is a port right overrelease somewhere!
Error unarchiving object. %{public}@
Swallowing decoder exception of %@, treating as null data
Message otherwise as: %@ - %@
AXHearingAidMode
payload
Trying to serialize an AXIPC payload that does not support secure coding: %@
%@. Client port: %ld. Key: %d. Payload: %@ (%@)
-[AXIPCMessage setClientPort:]
AXValidation Error
See syslog
_installSafeCategoryOnClassNamed
Value for key %@ on object <%@: %p> is not an %@; class: %@; value: %@
expected type encodings
", "%s
expected type encoding
Value for key %@ on object <%@: %p> doesn't encapsulate the right type; value: %@; actual type encoding: "%s"; %s: "%s".
{_NSRange=QQ}
{CGSize=dd}
{CGRect={CGPoint=dd}{CGSize=dd}}
UIView
Caught exception '%@' while performing safe block; reason: '%@'. Stacktrace: %@.
@"NSString"8@?0
AXCArrayArchivingKeyArray
AXCArrayArchivingKeyElementSize
AXCArrayArchivingKeyCursor
AXCArrayArchivingKeyInitialCapacity
%@.%@
v24@?0@"NSString"8@?<v@?@"NSString">16
v16@?0@"NSString"8
Q16@?0@"NSString"8
v24@?0Q8@"NSString"16
AXCArray
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXDisplayLinkManager.m
-[AXDisplayLinkManager beginRequiringWarmUpMode]
Unexpectedly has updated target actions even though not handling display refresh.
-[AXDisplayLinkManager endRequiringWarmUpMode]
 - fullWord %@, textToInsert %@, prefix %@, range to replace %@
v40@?0@"NSString"8{_NSRange=QQ}16^B32
v28@?0I8d12^B20
q24@?0@"AXTypingPrediction"8@"AXTypingPrediction"16
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
v48@?0r^I8q16d24q32^B40
GuidedAccessEventTap
GuidedAccessHIDEventTap
EventTap: %d - %@
AXEventTapManager <%p>. Taps:
%@. Priority:%d
v32@?0@"AXEventTapPair"8Q16^B24
B32@?0@"AXEventTapPair"8Q16^B24
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXEventTapManager.m
-[AXEventTapManager sendHIDSystemEvent:repostCreatorHIDEvent:senderID:]
we tried to make a HID event and send it but it wasn't there: %@
AXEventTapManager
B32@?0@"AXEventPathInfoRepresentation"8Q16^B24
q24@?0@"AXEventTapPair"8@"AXEventTapPair"16
-[AXEventTapManager _setEventTapPriority:priority:]
Where's my system client?
DeviceUsagePage
DeviceUsage
v32@?0^v8^v16^{__IOHIDServiceClient=}24
-[AXEventTapManager _removeHIDEventTapFilter:]
Pair had a system client, but was not the right type!
-[AXEventTapManager _runMatchingServiceHandler:]
Should not have asked to run the matching service handler for an event tap that did not have one.
com.apple.accessibility.AXAssistiveTouchServer
com.apple.accessibility.AXBackBoardServer
com.apple.accessibility.AXSpringBoardServer
com.apple.accessibility.AXCarouselServer
com.apple.accessibility.AXSBHearingAidServer
com.apple.accessibility.AXVoiceOverServer
AXPerformanceTestReportingServer
AXSBServerDidShowTripleClick
com.apple.accessibility.speech.asset.updater
com.apple.InCallService
com.apple.conversationController.HUD
com.apple.accessibility.RTTUI.RTTNotifications
AXGuidedAccessActiveStatusDidChangeBroadcastNotification
DisplayFilterUIServer
com.apple.zoomtouch.showalertbuddy
com.apple.accessibility.AXSytemReplyServer
AXServer Assertion Type
AXServer Assertion Holder ID
AXAssistiveTouchPayloadKeyDictionaryElementIndex
AXAssistiveTouchPayloadKeyDictionaryElementIndexes
AXAssistiveTouchPayloadKeyDictionaryElements
AXAssistiveTouchPayloadKeyDictionaryElementValue
AXGuidedAccessPayloadKeyRequestingAppIsSelfLockedToGAX
AXGuidedAccessPayloadKeyRequestingAppSetGAXEnabled
AXGuidedAccessPayloadKeyIsTemporaryFailure
AXGuidedAccessPayloadKeyGAXConfiguration
AXGuidedAccessPayloadKeyGAXMode
AXGuidedAccessPayloadKeySessionApp
AXGuidedAccessPayloadKeyAppSetIndex
com.apple.accessibility.voiceover.vibration.exercise
com.apple.accessibility.voiceover.swipe.exercise
com.apple.accessibility.statusbarchanged
UIAXZoomAdjustmentChange
voiceToAdd
voiceToRemove
voiceLanguage
UsagePage
Keycode
KeyState
AXContainerManagerMessageKeyData
AXContainerManagerMessageKeyPath
AXContainerManagerMessageKeyError
LoginSessionNote.plist
AXLoginSessionNoteVoiceOverWasEnabledKey
AXLoginSessionNoteZoomWasEnabledKey
speakTypingCharacters
speakTypingWords
speakTypingPrediction
com.apple.VoiceOverTouch.drag.xpc
com.apple.assistivetouchd.drag.xpc
com.apple.commandandcontrol.drag.xpc
com.apple.fullkeyboardaccess.drag.xpc
BackTapClientIDSystem
BackTapClientIDSwitchControl
BackTapClientIDVoiceOver
BackTapClientRegistrationKeyPolicy
76,8194
76,8207
76,8206
76,8203
76,8204
76,8202
AXAssertionCoordinator-AssertionQueue
v16@?0@"BSSimpleAssertion"8
com.apple.accessibility.AXSideStorageQueue
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXSideStorage_Implementation.m
-[NSProxy(AXSideStorage) _accessibilitySetValue:forKey:storageMode:]
value is not a wrapper class: %@
pressed
buttonIndex
location
AXRedirectedEventDetector
typing.feedback.opening.single.quotation.mark
typing.feedback.closing.single.quotation.mark
com.apple.accessibility.AXServer.assertion
%@-%d-%d
result
v16@?0@8
v24@?0@"AXIPCMessage"8@"NSError"16
Asked to send nil message asynchronously
acquire
relinquish
AXAssistiveTouchIconLocationTopLeft
AXAssistiveTouchIconLocationTopMiddle
AXAssistiveTouchIconLocationTopRight
AXAssistiveTouchIconLocationMidLeft
AXAssistiveTouchIconLocationMidMiddle
AXAssistiveTouchIconLocationMidRight
AXAssistiveTouchIconLocationBottomLeft
AXAssistiveTouchIconLocationBottomMiddle
AXAssistiveTouchIconLocationBottomRight
AXAssistiveTouchIconTypeNotificationCenter
AXAssistiveTouchIconTypeCustom
AXAssistiveTouchIconTypeDevice
AXAssistiveTouchIconTypeSiri
AXAssistiveTouchIconTypeHome
AXAssistiveTouchIconTypeControlCenter
AXAssistiveTouchIconTypeLockScreen
AXAssistiveTouchIconTypeRotateScreen
AXAssistiveTouchIconTypeVolumeUp
AXAssistiveTouchIconTypeVolumeDown
AXAssistiveTouchIconTypeMute
AXAssistiveTouchIconTypeGestures
AXAssistiveTouchIconTypeTripleClick
AXAssistiveTouchIconTypeShake
AXAssistiveTouchIconTypeMultitasking
AXAssistiveTouchIconTypeScreenshot
AXAssistiveTouchIconTypeOrientation
AXAssistiveTouchIconTypeVoiceControl
AXAssistiveTouchIconTypeCommandAndControl
AXAssistiveTouchIconTypePinch
AXAssistiveTouchIconTypeRotate
AXAssistiveTouchIconTypePinchAndRotate
AXAssistiveTouchIconTypeDoubleTap
AXAssistiveTouchIconTypeLongPress
AXAssistiveTouchIconTypeDragAndDrop
AXAssistiveTouchIconTypeMoveMenu
AXAssistiveTouchIconTypeSpotlight
AXAssistiveTouchIconTypeSysdiagnose
AXAssistiveTouchIconTypeSOS
AXAssistiveTouchIconTypeRebootDevice
AXAssistiveTouchIconTypeToggleDock
AXAssistiveTouchIcontTypeArmApplePay
AXAssistiveTouchIconTypeReachability
AXAssistiveTouchIconTypeSpeakScreen
AXAssistiveTouchIconTypeOpenMenu
AXAssistiveTouchIconTypePassThroughToApp
AXAssistiveTouchIconTypeDwell
AXAssistiveTouchIconTypeDwellResume
AXAssistiveTouchIconTypeDwellPause
AXAssistiveTouchIconTypeDwellPauseToggle
AXAssistiveTouchIconTypeDwellClick
AXAssistiveTouchIconTypeDwellLock
AXAssistiveTouchIconTypeDwellUnlock
AXAssistiveTouchIconTypeDwellLockToggle
AXAssistiveTouchIconTypeDwellIncreaseTime
AXAssistiveTouchIconTypeDwellDecreaseTime
AXAssistiveTouchIconTypeScroll
AXAssistiveTouchIconTypeScrollUp
AXAssistiveTouchIconTypeScrollDown
AXAssistiveTouchIconTypeScrollLeft
AXAssistiveTouchIconTypeScrollRight
AXAssistiveTouchIconTypeScrollToTop
AXAssistiveTouchIconTypeScrollToBottom
AXAssistiveTouchIconTypeCamera
AXAssistiveTouchIconTypeTorch
AXAssistiveTouchIconTypeForceTap
AXAssistiveTouchIconTypeMousePrimaryClick
AXAssistiveTouchIconTypeSideApp
AXAssistiveTouchIconTypeSiriShortcuts
SiriShortcut
CustomGesture
AXAssistiveTouchIconTypeAssistiveTouch
AXAssistiveTouchIconTypeVoiceOver
AXAssistiveTouchIconTypeClassicInvert
AXAssistiveTouchIconTypeColorFilters
AXAssistiveTouchIconTypeSmartInvert
AXAssistiveTouchIconTypeZoom
AXAssistiveTouchIconTypeZoomController
AXAssistiveTouchIconTypeMagnifier
AXAssistiveTouchIconTypeSwitchControl
AXAssistiveTouchIconTypeFullKeyboardAccess
__empty%d__%@
UIReachability
CustomGesture-%@
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXAssistiveTouchSettings.m
CGPoint _AXAssitiveTouchPositionForDefault8(NSString *__strong)
We should not have been asked this location: %@
CGPoint _AXAssitiveTouchPositionForDefault6(NSString *__strong)
CGPoint _AXAssitiveTouchPositionForDefault4(NSString *__strong)
CGPoint _AXAssitiveTouchPositionForDefault1(NSString *__strong)
__NONE__
pointerX
pointerY
pointerZ
pointerAccelX
pointerAccelY
pointerAccelZ
isPointerMove
pointerButtonMask
pointerButtonNumber
pointerButtonClickCount
pointerButtonPressure
pointerIsAbsolute
 Pointer Info:
   X: %.2f
   Y: %.2f
   Z: %.2f
   accelX: %.2f
   accelY: %.2f
   accelZ: %.2f
   isMove: %@
   Button Mask: %.2f
   Button Number: %.2f
   Click Count: %.2f
   Pressure: %.2f
   isAbsolute: %@
%@ - %@
AXInternalInPreBoardModeUpdatedNotification
AXInternalInCheckerBoardModeUpdatedNotification
AXInternalSessionIsLoginSessionChangedNotification
AXBackboardServerShouldToggleGuidedAccessNotification
adjustment
enabled
inPreboardMode
inCheckerBoardMode
AXBackBoardServerInstance
backBoardServerInstanceIfExists
%@ did not conform to %s! This is a bad bug! Things will go wrong when AXBackBoard asks itself stuff!
sesionIsLoginSession
record
namedTaps
afterNamedTap
systemEvent
displayPoint
contextId
fromContextId
toContextId
frame
could not convert frame %@ from context %lu to context %lu: %@
%@ did not conform to %s like it should! Bailing from %s!
-[AXBackBoardServer convertFrame:fromContextId:]
point
preference
value
notification
rect
Couldn't get zoom initial focus rect: %@
command
error
availability
Could not reset accessibility features: %@
filterData
visible
deviceOrientation
Disable System Gestures
Disable Speak This! Gesture
Disable Notification Center gesture
Disable Control Center gesture
Disable Dashboard gestures
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXAssertion.m
-[AXAssertion _notifyServerAssertionWasAcquired]
Handing of assertion type:(%@) was not implemented
-[AXAssertion _notifyServerAssertionWasRelinquished]
AXAssertion:<%p> Type:%@ ClientID:%@
_AXAssertionServer:<%p> Held Assertions:
  %@
v32@?0@"NSString"8@"NSArray"16^B24
Trying to add assertion holder ID:(%@) with type:(%@), but that ID is already in the holders list: (%@). Something is out of wack
Trying to remove assertion holder ID:(%@) with type:(%@), but that ID is not in the holders list: (%@). Something is out of wack
v16@?0@"NSNotification"8
[-()\s]
AccessibilityDisableIdleTimer
AXUserEventTimer-AssertionQueue
language
skipsUnpronounceable
v32@?0{_NSRange=QQ}8^B24
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXIPCServer.m
-[AXIPCServerClientRegistration initWithPort:identifier:]_block_invoke
%@. Serivce Name:%@. Running:%@ Server Port:%d. Clients:%@. Entitlements:%@. RunLoopSource:%p
-[AXIPCServer setServiceRunLoopSource:]
Why are you setting this? it's too late!
@"AXIPCMessage"16@?0@"AXIPCMessage"8
A message was received that could not be understood: %@
AXIPCMessageHandlerException
Cannot start server. It is already running.
Cannot start server. Service name was empty
Cannot stop server. It is not running.
v32@?0@8@16^B24
B24@?0@8^B16
identifier
v16@?0@"NSData"8
B32@?0@"AXIPCDelayedMessage"8Q16^B24
B12@?0B8
Error: %@
v16@?0@"AXIPCMessage"8
PID:%@
kern_return_t __AXXIPCSendData(mach_port_t, mach_port_t, mach_port_t, ax_bytes_t, mach_msg_type_number_t, ax_bytes_t *, mach_msg_type_number_t *, security_token_t, audit_token_t)_block_invoke
__AXXIPCSendData_block_invoke
kern_return_t __AXXIPCSimpleSendData(mach_port_t, mach_port_t, ax_bytes_t, mach_msg_type_number_t, security_token_t, audit_token_t)
__AXXIPCSimpleSendData
kern_return_t __AXXIPCSimpleSendDataWithFencePort(mach_port_t, mach_port_t, mach_port_t, ax_bytes_t, mach_msg_type_number_t, security_token_t, audit_token_t)_block_invoke
__AXXIPCSimpleSendDataWithFencePort_block_invoke
kern_return_t __AXXIPCSendDataWithAsyncReply(mach_port_t, mach_port_t, mach_port_t, ax_bytes_t, mach_msg_type_number_t, security_token_t, audit_token_t)_block_invoke
__AXXIPCSendDataWithAsyncReply_block_invoke
UIWindow
Class getUIWindowClass(void)_block_invoke
AXIPCServer.m
void *UIKitLibrary(void)
/System/Library/Frameworks/UIKit.framework/UIKit
/System/Library/Frameworks/UIKit.framework/Contents/MacOS/UIKit
AXIPCErrorKeyMachError
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXIPCClient.m
-[AXIPCOutstandingAsyncRequest initWithReplyPort:handlerQueue:handler:]
Must give a valid mach port.
-[AXIPCOutstandingAsyncRequest dealloc]
Got %x (%s) from mach_port_mod_refs in %s. Possible port right overrelease! name=%x
reply send-once right was destroyed, so this async request (%@) will never receive a reply.
connection
-[AXIPCClient dealloc]
AXIPCClient:<%p> Service:%@ ID:%@ connected:%@
Couldn't register as connection did not exist
client identifer was NULL
Could not find server for service: %@. bootstrap error: %s
Could not make mach port
Client could not connect. It is already connected
Client could not connect. Was initialized with an empty service name.
Client could not disconnect. It is already disconnected
Could not verify connection. server port was nil
Could not verify connection. client is not connected
Could not send simple message (%@). server port is NULL [%@]
Could not send simple message (%@). Port:%d. Error:%d (0x%x). 
B24@?0I8I12@"NSData"16
Reply data could not be converted into a message
Could not send message (%@). Port:%d. Error:%d (0x%x). Timeout:%f(%d). 
-[AXIPCClient sendMessage:withError:]
Should not have a reply in the failure case
Could not allocate reply port: %d
Could not send message (%@). Port:%d. Error:%@.  %@
-[AXIPCClient sendAsyncMessage:replyOnQueue:replyHandler:]
If we did not succeed sending the message we should have an error here.
-[AXIPCClient _attemptToEstablishConnection]
%s has to run in a writing block of the connection queue.
MACH_MSG_SUCCESS
MACH_MSG_MASK
MACH_MSG_IPC_SPACE
MACH_MSG_VM_SPACE
MACH_MSG_IPC_KERNEL
MACH_MSG_VM_KERNEL
MACH_SEND_IN_PROGRESS
MACH_SEND_INVALID_DATA
MACH_SEND_INVALID_DEST
MACH_SEND_TIMED_OUT
MACH_SEND_INTERRUPTED
MACH_SEND_MSG_TOO_SMALL
MACH_SEND_INVALID_REPLY
MACH_SEND_INVALID_RIGHT
MACH_SEND_INVALID_NOTIFY
MACH_SEND_INVALID_MEMORY
MACH_SEND_NO_BUFFER
MACH_SEND_TOO_LARGE
MACH_SEND_INVALID_TYPE
MACH_SEND_INVALID_HEADER
MACH_SEND_INVALID_TRAILER
MACH_SEND_INVALID_RT_OOL_SIZE
MACH_RCV_IN_PROGRESS
MACH_RCV_TIMED_OUT
MACH_RCV_INTERRUPTED
MACH_RCV_PORT_CHANGED
MACH_RCV_INVALID_NOTIFY
MACH_RCV_INVALID_DATA
MACH_RCV_PORT_DIED
MACH_RCV_IN_SET
MACH_RCV_HEADER_ERROR
MACH_RCV_BODY_ERROR
MACH_RCV_INVALID_TYPE
MACH_RCV_SCATTER_SMALL
MACH_RCV_INVALID_TRAILER
MACH_RCV_IN_PROGRESS_TIMED
Unknown mach error :%d (0x%x)
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AXDeviceMonitor.m
-[AXDeviceMonitor dealloc]
attempt to deallocate device monitor in state %d
-[AXDeviceMonitor copyDevices]
attempt to copy devices from device monitor in state %d
-[AXDeviceMonitor begin]
attempt to start device monitor in state %d
-[AXDeviceMonitor invalidate]
attempt to invalidate device monitor in state %d
UniqueID
Transport
Bluetooth
PrimaryUsage
Couldn't find target class name for safe category class %@
Couldn't find target class named %@ for safe category class %@
Failed to cast object <%@: %p> as safe category %@ %@
Failed to cast object <%@: %p> as class %@ %@
Failed to cast object <%@: %p> as protocol %@ %@
<MSHRunLoopSource %p> {port = %x, callback = %p}
%d: badly generated MIG reply for port %x
EventTap
UserInterfaceService
SpeechAssetDownloader
Zoom
AVSpeechSynthesis
VOTiCloud
VOTAudio
BrailleGestures
VisualAlerts
AudioRouting
LocCaptionPanel
SpeakSelection
SpeakTyping
SpeakThis
ContextKit
SCElementNav
Pronunciations
SCPauseResume
BrailleHardware
SwitchControlHardware
VoiceOverIAP
VoiceOverLifeCycle
Magnifier
MagnifierBright
VoiceOver
AXNotifications
AXVectorKit
AXCharacterVoices
AXAggregateLogging
MagicTapToggle
BrokenHomeButton
DataMigrator
InvertColors
AXSettings
AXUIViewService
BBServer
SBServer
SpeakFingerManager
AXCustomizableMouse
AXSoundBoard
<AXMIDIDeviceEntityEndpoint:%p parent:%@>
kMIDIPropertyName
kMIDIPropertyManufacturer
kMIDIPropertyModel
kMIDIPropertyUniqueID
kMIDIPropertyTransmitChannels
kMIDIPropertyIsEmbeddedEntity
kMIDIPropertyIsBroadcast
kMIDIPropertyOffline
kMIDIPropertyPrivate
kMIDIPropertyDriverOwner
midi_channel
midi_type
midi_note
midi_pressure
midi_control
midi_controlvalue
midi_program
midi_pitchbend
Unknown
Note Off. note:%@ (%@) pressure:%@
Note On. note:%@ (%@) pressure:%@
AfterTouch. note:%@ (%@) pressure:%@
Control Change. control:%@ value:%@
Program Change. program:%@
Channel AfterTouch. pressure:%@
Pitch Bend. value:%@
System Exclusive
MIDIEvent<%p>: channel:%@ type:%@
%@-%@
v24@?0@"NSDictionary"8@"NSString"16
gesture
argument
userInfo
timeout
RotorNames
<AXMIDIDevice:%p [%@]>
AXMIDIDevice<%p>
 Name: %@
 Manufacturer: %@
 Model: %@
 Driver: %@
 Unique ID: %@
 Device ID: %@
 Is Offline: %@
 Is Private: %@
 Supports General MIDI: %@
 Supports MMC: %@
 Entities: %@
  Entity %@ of %@
   Name: %@
   Driver: %@
   Unique ID: %@
   Device ID: %@
   Is Embedded: %@
   Is Broadcast: %@
   Is Offline: %@
   Is Private: %@
   Supports General MIDI: %@
   Supports MMC: %@
   Sources: %@
    Source %@ of %@
     Name: %@
     Manufacturer: %@
     Model: %@
     Driver: %@
     Unique ID: %@
     Receive Channels: %@
     Transmit Channels: %@
     Is Embedded: %@
     Is Broadcast: %@
     Is Offline: %@
     Is Private: %@
   Destinations: %@
    Destination %@ of %@
kMIDIPropertyDeviceID
kMIDIPropertySupportsGeneralMIDI
kMIDIPropertySupportsMMC
AXBinaryMonitorQueue
_resolvedPath
%@.bundle
.bundle
%@.framework
.dylib
%@.dylib
.appex
%@.appex
.app
%@.app
not adding handler, block was null
not adding handler, binary name was nil
.framework
bundle
Bundle
framework
appex
dylib
AXDateFormatter
jjmm
seconds.format.integer
seconds.format.float
minutes.format
hours.format
days.format
AX_SUB_SECOND_ABBREVIATION
Incoming date is nil
time.ago
time.with.seconds.format
jjmma
com.apple.accessibility.unmanaged.asam.uuid
builtIn
uuid
name
textualContext
appIdentifier
punctuationGroup
voiceIdentifier
speechRate
volume
soundMuted
speechMuted
audioDucking
modifierKeys
brailleTable
brailleStatusCellGeneral
brailleStatusCellText
tableHeaders
tableRowAndColumn
speakEmojis
imageDescriptions
containerFeedback
numberFeedback
brailleOutput
brailleInput
brailleAutoAdvanceDuration
hints
textualContexts
%@: name: %@, apps: %@, voice: %@, punctuation: %@, volume: %@, rate: %@
Siri Semantic Context
ADTarget
target
%@ (generic symbols)
(DELAYED) 
(Build as DEBUG) 
validating %d items and Installing AX Safe Categories on 
validating 
, In process: %@
****************** Finished %@. Success! *****************
********************************************************************
* AX: Failed %@. %lu errors:
********************************************************************
* AX: %lu warning%s generated while %@:
* %@
Class Not Present: %@
%@: %@ is not a kind of %@
NSInteger
NSUInteger
BOOL
CGFloat
@"%@"
%@: %@ : Ivar does not exist: %@
%@: %@ : Ivar is not the right type: %@ [AX: %@ MAINLINE: %s]
v24@?0^{objc_method=}8^B16
%@: %@ %@ method not present: %@
Class
Instance
Method does not exist
Unable to determine return type.
Incorrect return type: expected:%@ actual:%@
Incorrect argument count: expected:%@ actual:%@
Actual arg not found at position:%@ expected:%@
Incorrect argument at position:%@
 expected:%@
 actual:%@
%@: %@ method: (%@) on class: %@.
%@: %@ Property not present: %@
%@: %@ Property missing type information: %@
%@: %@ Property: (%@) had wrong type:(%s) expected: (%s)
%@: %@ Property: (%@) has unexpected custom getter: (%s)
%@: %@ Property: (%@) has unexpected custom setter: (%s)
%@: %@ Property: (%@) does not have custom getter: (%@)
%@: %@ Property: (%@) has unexpected custom getter: (%s) expected:(%@)
%@: %@ Property: (%@) does not have custom setter: (%@)
%@: %@ Property: (%@) has unexpected custom setter: (%s) expected:(%@)
%@: Class:%@ Does not conform to Protocol:%@
%@: %@ Protocol does not conform to protocol: %@
%@: %@ Protocol %@ %@ method not present: %@
required
optional
instance
class
(null)
%@: %@ method: (%@) on class: %@ has the following more specific variants:
B24@?0@"NSString"8@"NSString"16
AX Safe Category class not found: %@
Class=%@
axbundle
AX Safe category class:%@ in wrong AX bundle '%@' should be with '%@'
%@ is not an accessibility class!
-[NSObject(AXSideStorage) _accessibilitySetValue:forKey:storageMode:]
pathIndex
pathIdentity
pathProximity
pathPressure
pathMajorRadius
pathMajorRadiusTolerance
pathLocation
pathWindowContextID
pathWindow
pathTwist
pathMinorRadius
pathQuality
pathDensity
pathEventMask
orbValue
transducerType
altitude
azimuth
barrelPressure
willUpdateMask
didUpdateMask
      Path Index:        %i
      Identity:          %i
      Proximity:         %i
      Pressure:          %f
      Major Radius:      %f
      Location:          x: %f y: %f
      Window Context ID: %u
      Window:            %p
 - pathIndex %i, pathIdentity %i, pathProximity %i, pathPressure %f, pathMajorRadius %f, pathLocation.x %f, pathLocation.y %f, pathWindowContextID %u, pathWindow %p
{[,]}
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXCodeLoader.m
-[AXCodeLoader initWithImageMonitor:]
Unknown platform
AXCodeLoader
Must use designated initializer initWithImageMonitor:
B16@?0@"AXCodeItem"8
v40@?0@"AXCodeItem"8@"NSBundle"16@"NSError"24@?<v@?>32
v32@?0q8Q16@?<v@?>24
v24@?0@"AXCodeItem"8@"AXCodeItem"16
v24@?0@"AXCodeItem"8^B16
mainbundles.axbundlemap
tvbundles.axbundlemap
mossdeepbundles.axbundlemap
B24@?0@"AXCodeItem"8^B16
@16@?0@"AXCodeItem"8
q24@?0@"AXCodeItem"8@"AXCodeItem"16
AXBundleLoadQueue
v32@?0@"AXCodeItem"8@"NSBundle"16@"NSError"24
B24@?0@"NSBundle"8^B16
@16@?0@"NSBundle"8
%@%@.%@ <%p> %@
AX-BUNDLE 
[LOADED]
type
%@ [%f %f %f]
AXTrampoline:<%p>. caller:%@ target:%@
No method signature to act on. Ignoring this invocation
An IMP could not be found for the invocation with selector:%@. caller:%@ target:%@
A methodSignature could not be found for selector:%@, on caller:%@. You probably should not be trampolining this method
AXCarouselServerShowHearingControlsNotification
v16@?0r^{CGPathElement=i^{CGPoint}}8
v44@?0i8^{CGPoint=dd}12Q20Q28^B36
MoveToPoint
AddLineToPoint
AddQuadCurveToPoint
AddCurveToPoint
CloseSubpath
Unhandled path element type
%f, %f
elementTypes
singlePoints
doublePoints
triplePoints
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/CGPath+AXExtensions.m
-[AXPathWrapper initWithCoder:]
Out of bounds access to <AXCArrayRef: %p>; number of elements in the array: %lu; index: %ld
Wired Headphones
route: %{public}@, ports: %{public}@
portUID
channelNumber
compare: %{public}@[%{public}@] - result %{public}@
saved channels %{public}@: 
returnedChannels channels %{public}@
ChannelLayout_Left
ChannelLayout_Right
ChannelLayout_Center
ChannelLayout_LeftCenter
ChannelLayout_RightCenter
ChannelLayout_RearLeft
ChannelLayout_RearRight
%d - Unknown channel name - file a bug
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXOrator.m
void AXAssertMainThreadCallback()
We should have been called back on the main thread!
AXOratorErrorDomain
QuickSpeak.bundle
quickspeak.sample.message
QuickSpeak
-[AXOrator _respeakUtteranceIfNeeded]
We said we enqueued the last speech sequence item, but there were no speech sequence items
v32@?0@8Q16^B24
Fast forwarding...
Rewind...
-[AXOrator _skipByUnit:boundary:]
We shouldn't even have been able to set the speaking content to something that would have no tokens, as we check length in startSpeaking
Could not find token for currently speaking range %@, token ranges %@
fast forwarding
rewinding
fast forward
rewind
-[AXOrator speechSynthesizer:willSpeakRangeOfSpeechString:utterance:]
Somehow the synthesizer was able to speak range %@ that was outside of what we had last tracked to be the entire utterance's range (%@).
AXApp<%p>: PID:%@ BundleID:%@ Primary:%@ FullScrModal:%@
bundleID
layoutRole
eQd5mlz0BN0amTp/2ccMoA
cBy4BcYs5YWtFHbBpt4C6A
JwLB44/jEB8aFDpXQ16Tuw
8olRm6C1xqr7AJGpLRnpSw
assistant
ringer-switch
yhHcB0iH0d1XzPO/CFd3ow
PencilAndPaper
SystemNoteTaking
main-screen-class
screen-dimensions
main-screen-pitch
main-screen-width
main-screen-height
device-name-localized
ipad
arm64
main-screen-scale
PKPassLibrary
Class getPKPassLibraryClass(void)_block_invoke
AXDevice.m
void *PassKitCoreLibrary(void)
/System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
/System/Library/PrivateFrameworks/PassKitCore.framework/Contents/MacOS/PassKitCore
%@_%@
IPAD
IPOD
IPHONE
_IPHONE
_IPAD
_IPOD
_NHB
GeneralAccessibility
SwitchControl
-iOS
ATV~appletv
@"NSString"24@?0@"NSString"8Q16
CURSOR_COLOR_DEFAULT
CURSOR_COLOR_BLUE
CURSOR_COLOR_GRAY
CURSOR_COLOR_WHITE
CURSOR_COLOR_GREEN
CURSOR_COLOR_YELLOW
CURSOR_COLOR_RED
CURSOR_COLOR_ORANGE
did not recognize cursor color: %@
search.rotor.typing.mode
search.rotor.slide.to.type
search.rotor.textselection
search.rotor.character
search.rotor.word
search.rotor.line
search.rotor.header
search.rotor.link
search.rotor.formelement
search.rotor.visitedlink
search.rotor.nonvisitedlink
search.rotor.image
search.rotor.statictext
search.rotor.zoom
search.rotor.table
search.rotor.list
search.rotor.landmark
search.rotor.article
search.rotor.button
search.rotor.textfield
search.rotor.searchfield
search.rotor.same
search.rotor.allitems
search.rotor.hints
search.rotor.rate
search.rotor.punctuation
search.rotor.sounds
search.rotor.volume
search.rotor.audio.ducking
search.rotor.handwriting
search.rotor.braille.gesture
search.rotor.container
search.rotor.vertical.navigation
search.rotor.navigation.direction
search.rotor.languages
search.rotor.braille.languages
search.rotor.auto.advance.speed
search.rotor.audio.destination
search.rotor.activities
search.rotor.exploration.mode
search.rotor.image.descriptions
search.rotor.tv.silence.announcements
search.rotor.tv.speak.nonfocusable.elements.after.delay
search.rotor.tv.explore.focus.affects.native.focus
/System/Library/CoreServices/VoiceOverTouch.app
VOTLocalizedStrings
%@.settings
%@.visual
VOTLocalizedStringsATV~appletv
described.media.none
described.media.speech
described.media.braille
described.media.speech.and.braille
VOTOutputPunctuation
UnicodeHex.
UnicodeHex.Math.
strings
stringsdict
%@%08x
%@%04x
Missing a localized version for the following Unicode Character (UnicodeHex.%x)
v20@?0q8S16
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXLocalization.m
UTF32Char AXUnicodeCodePointForCharacterString(NSString *__strong)
Unicode only supports up to 32 bits per code point AFAIK
AXAirPods-B494
SCRCPunctuationVerboseness
Class getSCRCPunctuationVerbosenessClass(void)_block_invoke
AXLocalization.m
void *ScreenReaderCoreLibrary(void)
/System/Library/PrivateFrameworks/ScreenReaderCore.framework/ScreenReaderCore
/System/Library/PrivateFrameworks/ScreenReaderCore.framework/Contents/MacOS/ScreenReaderCore
_AXDyldImageMonitor
__AXStringForVariablesSentinel
DISTANCE_DESCRIPTION
ARDescriptionFormatting
VISIBILITY_PERCENTAGE
COVERAGE_PERCENTAGE
langMap
 AltLangs:
AXLang <%p>. LangID:%@%@ western:%@ ambiguous:%@
Dialects:
Preferred Dialect:%@
SwitchRegistrar will begin filtering events
SwitchRegistrar will end filtering events
v24@?0@"AXSwitch"8^B16
PrimaryUsagePage
Could not create event system client
Could not open HID manager: %d
AXEventRegistrar
v40@?0@"AXMIDIEvent"8@"AXMIDIDevice"16@"AXMIDIDeviceEntity"24@"AXMIDIDeviceEntityEndpoint"32
Matched MFi device: %@
Could not open MFi device: %d
AccessibilityUnitTestingException
CenterTap
RightToLeftSwipe
LeftToRightSwipe
HoldAtPoint
Gesture
Exit
Select
TurnPages
TapPoint
HoldPoint
Action
LongPressAction
LongPressGesture
HoldPointX
HoldPointY
Optional
SwitchUUID
SwitchOriginalAction
Mappings
Timeout
Name
UnlocalizedName
UUID
MenuIconIdentifier
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXSwitchRecipe.m
+[AXSwitchRecipeMapping recipeMappingWithDictionaryRepresentation:]
Should always have encoded both x and y for hold point, but had %@, %@
Every switch recipe mapping must have an associated switch original action (in case we can't find a switch with a matching UUID.)
-[AXSwitchRecipeMapping dictionaryRepresentation]
Every switch recipe mapping must have an action.
Every switch recipe gesture mapping must have a gesture dictionary.
Every swipe recipe long press point mapping must have a point to press.
Action: %@
Gesture: %@
Switch UUID: %@
Switch Original Action: %@
-[AXSwitchRecipe dictionaryRepresentation]
Every switch recipe needs a UUID so it can be referenced.
Name: %@
UUID: %@
Mappings: %@
Timeout: %@
Hant-
Hans-
%@AXDialect <%p>. Voice:%@. LocaleID:%@ LangID:%@
hanjaToHangul
plist
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXDialectMap.m
-[AXDialectMap _stringByTransliterationHanjaToHangul:]
Hanja to hangul transliteration tabler should only contain equal length mappings
AXDialectMap.m
collation
NSString *_icuDisplayName(const ULocaleDisplayNames *, NSString *__strong, NSString *__strong)
Unsupported key type %@
%@ (%@)
System/Library/PreferenceBundles/AccessibilitySettings.bundle
RegionNamesNonLocalized
~!@#*$%&+|=(){}[]<>,./?;:'_-"\
DNTTerms
\pause=350\ 
AXLanguageManager:<%p>. %lu lang maps
    USER-PREF %@
    %@
system Lang dialect: %@
system current locale dialect: %@
system current region dialect: %@
Dialect for system language was nil!
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXLanguageManager.m
-[AXLanguageManager dialectForLanguageID:]
LanguageID was nil!
B32@?0@"AXDialectMap"8Q16^B24
B16@?0@"AXDialectMap"8
en-US
UIKeyboardInputModeController
sharedInputModeController
enabledInputModeIdentifiers
SynthesizerLanguageMap
languageMaps
languageID
alternateLanguageIDs
ambiguousWithLanguages
isAmbiguous
isWestern
isRTL
localeLanguageMaps
localeID
voiceName
speakableCharacterRanges
supplementaryCharacterRanges
secondaryLanguageRange
AccessibilityLanguages
Languages
locale
localName
currentName
supportedBySystem
supportedByVoiceOver
nb-NO
id-MS
TVSInternationalization
Class getTVSInternationalizationClass(void)_block_invoke
AXLanguageManager.m
void *TVServicesLibrary(void)
/System/Library/Frameworks/TVServices.framework/TVServices
/System/Library/Frameworks/TVServices.framework/Contents/MacOS/TVServices
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXLanguageTaggedContent.m
-[AXLanguageTag contentSubstring]
The range of the tagged chunk is greater than the content. Something went awry %@
AXTaggedContent:<%p>. tags:
zh-Hans
zh-Hant
B32@?0@"NSTextCheckingResult"8Q16^B24
v40@?0{?={?=qq}Q}8^B32
-[AXLanguageTaggedContent _addLanguageTagForCurrentChunk]
The current chunk is too long, we are out of bounds. Our bookkeeping got out of sync somewhere. Please file a radar with the exact text you tried to speak.
v40@?0^{__EmojiTokenWrapper=}8{?=qq}16^B32
-[AXLanguageTaggedContent _addTag]
Why was current dialects nil?
Null
Touched
Moved
Chord Changed
Lifted
Canceled
In Range
In Range Lift
Update to previous event
Just an empty hand event
keyCode
usagePage
keyDown
unmodifiedInput
modifiedInput
shiftModifiedInput
backupUnmodifiedInput
backupModifiedInput
backupShiftModifiedInput
modifierState
gsModifierState
alternativeKeyCode
keyCode:%hu usagePage:%u down:%u modState:%u unmodIn:%@ modIn:%@ shftIn:%@
UIKeyboardImpl
sharedInstance
setInputModeFromPreferences
Class getUIKeyboardInputModeControllerClass(void)_block_invoke
AXEventKeyInfoRepresentation.m
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXEventRepresentation.m
-[AXEventRepresentation pathIndexMask]
Can't get path index masks from non-digitizer events!
+[AXEventRepresentation _digitizerRepresentation:hidStreamIdentifier:]
This hand event has a null hand info.. problems will ensue: %@
touch: %ld initial %ld inRange: %d
Could not create AX Event from HID Event:
%{public}@
Stream ID:%{public}@
originalType
subtype
windowLocation
window
flags
isRedirectEvent
isSystemDrag
handInfo
keyInfo
gameInfo
pointerInfo
accelerometerInfo
data
iosmacPointerInfo
clientId
taskPort
HIDTime
HIDAttributeData
additionalFlags
displayId
HIDSenderId
isBuiltIn
isDisplayIntegrated
generationCount
isGeneratedEvent
scrollAmount
scrollAccelAmount
auxiliaryData
%@<%p>
  Type:             %u (orig:%u)
  Subtype:          %d
  Location:         x:%f y:%f
  Window Location:  x:%f y:%f
  Window:           %p
  Flags:            %d
  PID:              %d
  Time:             %llu
  HIDTime:          %llu
  Data:             %@
  Task Port:        %d
  client ID:        %@
  context ID:       %u
%@. type:%u subtype:%d loc:[x:%f y:%f] windowLoc:[x:%f y:%f] window:%p flags:%d pid:%d time:%llu HIDTime:%llu taskPort:%d client:%@ ctxtID:%u sender:%@ data:[%lu bytes]
AXData: %@
Hand Info: %@
Key Info: %@
AccessibilityPhysicalInteraction
ZoomWindow
Automation
Unknown (ID:0x%04llx)
-[AXEventRepresentation _applyAccessibilityDataToRealEvent:]
Unexpectedly received accessibility event. Should have received real event
Real event already has accessibility data applied. It is an error to apply new data
No data found on ax event
LEDFlashOnRingerSwitchSilent
LimitDisplayRefreshRate
SpeakMedicalPreamble
TTYMedicalPreamble
SOSMedicalPreamble
LocCaptionShowFilePath
LocCaptionShowUSString
LocCaptionShowLocalizedString
AssistiveTouchAlwaysShowMenu
AssistiveTouchOpenMenuSwaggle
AssistiveTouchMouseKeys
AssistiveTouchMouseKeysOptionToggle
AssistiveTouchMouseKeysUseMainKeyboardKeys
AssistiveTouchMouseKeysDelay
AssistiveTouchMouseAlwaysShowSoftwareKeyboard
AssistiveTouchMouseAllowAppleBluetoothDevicesPairing
AssistiveTouchMouseKeysMaxSpeed
AssistiveTouchSpeed
AssistiveTouchCustomGestures
AssistiveTouchRecentGestures
AssistiveTouchSavedGestures
AssistiveTouchScanningModePreference
AssistiveTouchPreferredPointPickerPreference
AssistiveTouchScanShouldGroupElements
AssistiveTouchScanShouldUseCompactMenu
AssistiveTouchScannerMenuLabelsEnabled
AssistiveTouchStepInterval
AssistiveTouchScanCyclesPreference
AssistiveTouchScannerScanTimeout
AssistiveTouchScannerScanTimeoutEnabled
AssistiveTouchScannerSoundEnabled
AssistiveTouchScannerSpeechEnabled
AssistiveTouchScannerSpeechRatePreference
AssistiveTouchSwitchesPreference
AssistiveTouchCursorHighVisibilityPreference
AssistiveTouchSpeechInterruptedByScanningPreference
AssistiveTouchSpeechShouldSpeakTraitsPreference
AssistiveTouchInputCoalescingDurationPreference
AssistiveTouchInputCoalescingEnabledPreference
AssistiveTouchInputHoldDurationPreference
AssistiveTouchLongPressDurationPreference
AssistiveTouchInputHoldEnabledPreference
AssistiveTouchLongPressDurationEnabledPreference
AssistiveTouchLongPressPauseScanningEnabledPreference
AssistiveTouchDelayAfterInputPreference
AssistiveTouchDelayAfterInputEnabledPreference
AssistiveTouchAxisSweepSpeed
AssistiveTouchAutoAddedTCItem
AssistiveTouchActionRepeatIntervalPreference
AssistiveTouchActionRepeatEnabledPreference
AssistiveTouchCursorColorPreference
AssistiveTouchMousePointerColorPreference
AssistiveTouchMousePointerSizeMultiplierPreference
AssistiveTouchMousePointerTimeoutEnabledPreference
AssistiveTouchMousePointerTimeoutPreference
AssistiveTouchMouseDwellControlEnabledPreference
AssistiveTouchMouseDwellControlAutorevertEnabledPreference
AssistiveTouchMouseDwellControlAutorevertActionPreference
AssistiveTouchMouseDwellControlActivationTimeoutPreference
AssistiveTouchMouseDwellControlMovementToleranceRadiusPreference
kAXSAssistiveTouchMouseDwellControlCornerCustomizationPreference
AXSAssistiveTouchMouseDwellControlMutatedMenuPreference
AssistiveTouchMouseDwellControlShowPromptPreference
AssistiveTouchMouseZoomPanningStylePreference
AssistiveTouchHeadMovementSensitivityPreference
AXSAssistiveTouchSwitchUsageConfirmedPreference
AssistiveTouchPointPickerDefaultsToRescanPreference
AXSAssistiveTouchOrbPreference
AXSAssistiveTouchSingleTapAction
AXSAssistiveTouchDoubleTapAction
AXSAssistiveTouchLongPressAction
AXSAssistiveTouchLongPressActionDuration
AXSAssistiveTouchDoubleTapActionTimeout
AXSAssistiveTouchMouseCustomizedClickActionsPreference
AXSAssistiveTouchMainScreenCustomizationPreference
AXSAssistiveTouchIdleOpacityPreference
AXSAssitiveTouchGameControllerPreference
SCRecipes
SCLaunchRecipeUUID
SCTopLevelMenuItems
SCGesturesTopLevelMenuItems
SCDeviceTopLevelMenuItems
SCSettingsTopLevelMenuItems
SCMediaControlsTopLevelMenuItems
SCShouldUseShortFirstPage
SCGesturesMenuItems
SCDeviceMenuItems
SCSettingsMenuItems
SCMediaControlsMenuItems
SCScanningStyle
SCDwellTime
SCTapBehaviorPreference
AssistiveTouchScannerSelectTimeout
SCShouldAlwaysActivateKeyboardKeys
SCIsEnabledAsReceiver
SCScanAfterTapLocation
SCRestartScanningAtCurrentKey
SCShouldDisallowUSBRestrictedMode
SCUserDidReadUSBRestrictedModeAlert
SCSwitchControlPointPickerSelectionStyle
AXSAssistiveTouchScannerMenuIncludeHomeItem
AXSAssistiveTouchScannerMenuIncludeScrollItem
AXSAssistiveTouchScannerMenuIncludeDeviceItem
AXSAssistiveTouchScannerMenuIncludeGesturesItem
AXSAssistiveTouchScannerMenuIncludeSettingsItem
AssistiveTouchAutoScanningEnabled
AssistiveTouchScannerSelectTimeoutEnabled
VoiceOverTouchPitchCompactVoice
SCSwitchControlPointPickerHighPrecisionEnabled
ZoomPreferencesWereInitialized
ZoomWindowFrame
DockSize
ZoomScale
ZoomPanOffset
ZoomSlugPosition
ZoomCurrentLensEffect
ZoomCurrentLensMode
ZoomInStandby
ZoomShowedBanner
ZoomShouldFollowFocus
ZoomShouldShowSlug
ZoomPeekZoomEnabled
ZoomPeekZoomEverEnabled
ZoomSlugSingleTapAction
ZoomSlugDoubleTapAction
ZoomSlugTripleTapAction
ZoomSlugTapAndSlideToAdjustZoomLevel
ZoomAlwaysUseWindowZoomForTyping
ZoomPreferredLensMode
ZoomPreferredDockPosition
ZoomPreferredMaximumZoomScale
ZoomPreferredLensModes
ZoomPreferredDockPositions
ZoomIdleSlugOpacity
ZoomControllerColorPreference
ZoomAudioDestination
ZoomShouldAllowFullscreenAutopanning
ZoomShouldUseKeyboardShortcutsPreference
ZoomAdjustZoomLevelKeyboardShortcutEnabledPreference
ZoomToggleZoomKeyboardShortcutEnabledPreference
ZoomPanZoomKeyboardShortcutEnabledPreference
ZoomResizeZoomWindowKeyboardShortcutEnabledPreference
ZoomSwitchZoomModeKeyboardShortcutEnabledPreference
ZoomTempToggleZoomKeyboardShortcutEnabledPreference
ZoomScrollWheelKeyboardShortcutEnabledPreference
ZoomAutopannerShouldPanWithAccelerationPreference
ZoomDebugDisableZoomLensScaleTransform
ZoomDebugShowExternalFocusRectPreference
GuidedAccessUsageCount
kAXSGuidedAccessAXFeaturesEnabled
GuidedAccessAllowsUnlockWithTouchID
GuidedAccessToneIdentifierForTimeRestrictionEvent
GuidedAccessSpeakForTimeRestrictionEvent
kAXSGuidedAccessOverrideIdleTimePreference
GuidedAccessAutoLockTimeInSeconds
GAXInternalSettingUserAppProfile
GAXInternalSettingUserGlobalProfile
GAXGlobalProfileSavedAXFeatures
GAXGlobalProfileSavedAXTripleClickOptions
GAXGlobalProfileUserConfiguredAppIds
GAXGlobalProfileActiveAppOrientation
GAXGlobalProfileActiveAppID
GAXInternalSettingTimeRestrictionHasExpired
AXGAXInternalSettingIsActiveAppSelfLocked
GAXGlobalProfileSystemDidRestartDueToLowBattery
GAXGlobalProfileECID
GAXGlobalProfileProductBuildVersion
GAXGlobalProfileLastActivationDate
GAXGlobalProfileLastPasscodeSetDate
AssistiveTouchCameraSwitchPreviewEnabledPreference
AssistiveTouchInternalOnlyHiddenNubbitModeEnabledPreference
AssistiveTouchInternalOnlyPearlTrackingEnabledPreference
FullKeyboardAccessShouldShowDebugKeyCommandsViewPreference
InternalLoggingColorThemePreference
ValidateSecondPartyApps
IncludeBacktraceInLogs
IgnoreAXAsserts
IgnoreAXServerEntitlements
LogAXNotificationPosting
UseNewAXBundleLoader
shouldPerformValidationsAtRuntime
InternalEnableVOHearingAidRouting
InternalSkipHearingAidMFiAuth
InternalEnableHearingAidReporter
AXSInternalGuidedAccessDisallowDirectInactiveToActiveTransition
AXSInternalGuidedAccessOverrideTimeRestrictionDuration
AXSInternalGuidedAccessEnableExperimentalUI
SpeakCorrectionsEnabled
AXSTripleClickUserOrderedPreference
LetterFeedbackEnabled
PhoneticFeedbackEnabled
QuickTypeWordFeedback
WordFeedbackEnabled
CharacterFeedbackDelayPreference
ShowSpeechController
SpeechControllerIdleOpacity
SpeechControllerLongPressAction
SpeechControllerDoubleTapAction
QuickSpeakRate
QuickSpeakLanguageSpeakingRate
QuickSpeakHighlightChoice
AXSQuickSpeakWordHighlightColorPreference
AXSQuickSpeakSentenceHighlightColorPreference
QuickSpeakUnderlineSentence
QuickSpeakVolume
QuickSpeakSentenceHighlight
QuickSpeakNubbitNormalizedPosition
SpeechVoiceIdentifierForLanguage
UserDidSelectVoiceForLanguage
CustomPronunciationSubstitutions
SiriAutoUpdateListInitializedPreference
AXSVoiceOverSpeaksOverTelephoneCalls
com.apple.voiceovertouch.cursors.style
VoiceOverTouchHelpModePreference
NavigateImagesPreference
VoiceOverTouchPhoneticsEnabledPreference
VoiceOverTouchTypingHardwareFeedback
VoiceOverTouchTypingFeedback
VoiceOverTouchTypingBrailleGesturesFeedback
VoiceOverTouchHintsEnabled
VoiceOverTouchAudioDuckingEnabled
VoiceOverSelectedLanguage
VoiceOverAudioFollowsHDMIAudio
VoiceOverTouchPitchChangePreference
VoiceOverPitchPreference
VoiceOverUseSoundEffects
VoiceOverLanguageDetectionEnabled
VoiceOverHapticsEnabled
VoiceOverSoundVolume
VoiceOverAdjustSoundVolumeIndependently
VoiceOverHapticIntensity
VoiceOverVerbosityEmojiSuffixEnabledPreference
VoiceOverVerbosityEmojiFeedbackPreference
SpeakingRateInRotorEnabled
SpeakNotificationInLockScreen
VoiceOverTouchRotorItemsPreference
VoiceOverEditAppsActionEnabledPreference
VoiceOverSpeakActionConfirmationPreference
voiceOverBrailleTableIdentifier
voiceOverAlwaysUseNemethCodeForMathEnabled
VoiceOverLanguageSpeakingRate
VoiceOverHandwritingWasNativeAutocorrectEnabled
VOActivationWorkaround
VoiceOverShowSWKeyboardWithBraille
VoiceOverShowGrade2AutoTranslate
VoiceOverOutputToHearingAid
AXSVoiceOverTouchBraillePanningAutoTurnsReadingContent
AXSVoiceOverTouchSingleLetterQuickNavPreference
VoiceOverQuickNavAnnouncementFeedback
AXSVoiceOverSpeakTableColumnRowInformationPreference
AXSVoiceOverSpeakTableHeadersPreference
AXSVoiceOverCapitalLetterFeedbackPreference
AXSVoiceOverDeletionFeedbackPreference
AXSVoiceOverLinkFeedbackPreference
AXSVoiceOverActionsFeedbackPreference
AXSVoiceOverContainerOutputFeedbackPreference
AXSVoiceOverMoreContentOutputFeedbackPreference
VoiceOverDiscoveredSensitiveContentFeedback
AXSVoiceOverPunctuationLevelPreference
AXSVoiceOverPunctuationGroupPreference
AXSVoiceOverDefaultPunctuationGroupPreference
AXSVoiceOverTouchBrailleDisplayInputMode
AXSVoiceOverTouchBrailleDisplayOutputMode
AXSVoiceOverTouchBrailleGesturesInputMode
VoiceOverCaptionPanelEnabled
VoiceOverPronunciationCloudKitSyncingEnabled
VoiceOverBrailleGesturesShouldUseLockedConfiguration
VoiceOverBrailleGesturesLockedOrientation
VoiceOverBrailleGesturesLockedTypingMode
VoiceOverBrailleGesturesDidPlayCalibrationHint
VoiceOverBrailleDisplayAlertDuration
AXSVoiceOverBrailleAlertsEnabled
VoiceOverBrailleKeyDebounceTimeout
VoiceOverBrailleWordWrapEnabled
VoiceOverBrailleAutoAdvanceDuration
AXSVoiceOverTouchShouldReverseDots
AXSVoiceOverTouchBrailleShowTextStyleStatus
AXSVoiceOverTouchBrailleShowGeneralStatus
AXSVoiceOverTouchUpdateBrailleWithoutConnectedDisplay
AXSVoiceOverTouchBraillePreferredTableIdentifiers
AXSVoiceOverShouldSpeakDiscoveredTextPreference
AXSVoiceOverSpeakDiscoveredTextFeedbackPreference
AXSVoiceOverAutomaticButtonLabelsPreference
VoiceOverSoundsAndHaptics
VoiceOverDoubleTapInterval
VoiceOverNavigationDirectionMode
AXSVoiceOverKeyboardModifierChoicePreference
AXSVoiceOverKeyboardContinuousPathStartTimeoutPreference
AXSVoiceOverActivitiesPreference
AXSVoiceOverSelectedActivityPreference
AXSVoiceOverUseTVToggleStyleNavigation
AXSVoiceOverContentDescriptionLevel
AXSVoiceOverNumberFeedback
AXSImageCaptioningDisabledApps
AXSSceneDescriptions
AXSVoiceOverDirectTouchEnabledApps
TapToSpeakTimeEnabled
TapToSpeakTimeAvailability
VoiceOverTapticTimeMode
VoiceOverTapticTimeEncoding
VoiceOverTapticTimeSpeed
VoiceOverTapticChimesEnabled
VoiceOverTapticChimesAvailability
VoiceOverTapticChimesFrequencyEncoding
VoiceOverTapticChimesSoundType
TapticTimeInternalFlashScreenEnabled
VoiceOverUseActiveSiriVoice
VoiceOverUseDigitalCrownNavigation
AXSVoiceOverWatchBrailleInputMode
AXSVoiceOverWatchGrade2AutoTranslate
AXSVoiceOverWatchBrailleOutputMode
AXSVoiceOverWatchBrailleWordWrap
AXSVoiceOverWatchBrailleAlertDisplayDuration
AXSVoiceOverWatchBrailleTableIdentifier
VoiceOverTouchImageCaptionsEnabled
VisionEngineCaptureDiagnosticsToDisk
VoiceOverSpeakNonfocusableElementsAfterDelay
VoiceOverSilenceAnnouncements
VoiceOverTouchTVInteractionMode
VoiceOverTouchTVPrefersFollowFocusNavigationStyle
VoiceOverExploreFocusAffectsNativeFocus
VoiceOverTouchDescribedMedia
VoiceOverCustomCammndProfile
VoiceOverShouldDisallowUSBRestrictedMode
VoiceOverUserDidReadUSBRestrictedModeAlert
HearingAidEarIndependencePreference
HearingAidControlAvailableOnLockScreen
HearingAidStreamToLeft
HearingAidStreamToRight
LeftRightBalanceEnabled
LeftRightBalanceValue
AXSAlexLocalAssetURL
AllAvailableVoicesPreference
AXSExtantVoicesPreference
AXSDataMigratorRequestedVoiceCacheRefresh
AXSAudioHardwareChannelLayoutsPreference
AXSUltronRunningStatus
AXSUltronEnabled
AXSEnabledSoundDetectionState
AXSEnabledSoundDetectionTypes
AXSSoundDetectionSnoozeDictionary
AXSSoundDetectionSupportedTypes
GizmoApplicationAccessibilityEnabled
GizmoAutoSpeakComplicationsPreference
VoiceOverSpeakSecondsEncoding
StickyKeysEnabled
StickyKeysShiftToggleEnabled
StickyKeysBeepEnabled
MagnifierEnabled
MagnifierShouldAdjustFiltersForAmbientLight
MagnifierShouldUseVideoStabilization
MagnifierLiveZoomLevel
MagnifierFilterSetIdentifier
MagnifierFilterInverted
MagnifierContrast
MagnifierBrightness
AXSAppValidatingTestingPreference
kAXSupportsAdvancedDisplayFiltersPreference
AXSClassicInvertColorsPreference
CommandMapData
FocusRingTimeout
FocusRingTimeoutEnabled
FullKeyboardAccessLargeFocusRingEnabled
FullKeyboardAccessFocusRingHighContrastEnabled
FullKeyboardAccessFocusRingColor
ShouldShowTextEditingModeInstructions
lastAssistiveTouchTimeResetCount
assistiveTouchUsageCount
magnifierUsageCount
tapticTimeUsageCount
switchControlPlatformSwitchedCount
voiceOverBSIUsageCount
brokenHomeButtonCount
guidedAccessTimeLimitsUsageCount
characterVoicesUsageCount
hearingAidControlPanelCount
hearingAidHandOffCount
lastPlatformSwitchTimeResetCount
lastCharacterVoiceTimeResetCount
lastMagnifierResetCount
lastHearingAidHandoffTimeResetCount
lastHearingAidControlPanelTimeResetCount
lastTapticTimeResetCount
lastBrailleScreenInputTimeResetCount
lastGuidedAccessTimeLimitResetCount
lastGuidedAccessTimeResetCount
AXSLastSmartInvertColorsEnablement
AXSDidTriggerSOSToday
CallAudioRoutingAutoAnswerPreference
CallAudioRoutingAutoAnswerEnabledPreference
AssistiveTouchScannerPrefersCompactForLanguagePreference
AssistiveTouchScannerAlternativeVoiceForLanguagePreference
AXSAssistiveTouchDefaultDialectPreference
QuickSpeakPrefersCompactForLanguage
QuickSpeakAlternativeVoiceForLanguage
AXSVoiceOverAlternativeVoicesPreference
AXSVoiceOverCompactVoicePreference
com.apple.voiceovertouch.default.dialect
AXSDidResetD22Preferences
TouchAccommodationsEnabledPreference
TouchAccommodationsUsageConfirmedPreference
AXSTouchAccommodationsTripleClickConfirmedPreference
TouchAccommodationsHoldDurationEnabledPreference
TouchAccommodationsHoldDurationPreference
TouchAccommodationsAllowsSwipeGesturesToBypassPreference
TouchAccommodationsHoldDurationSwipeGestureMinimumDistancePreference
TouchAccommodationsIgnoreRepeatEnabledPreference
TouchAccommodationsIgnoreRepeatDurationPreference
TouchAccommodationsTapActivationMethodPreference
TouchAccommodationsTapActivationTimeOutPreference
TouchAccommodationsHoldDurationSwipeGestureSensitivityPreference
TouchAccommodationsHoldDurationAllowsSwipeGesturesToBypassPreference
guidedAccessUsageCount
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXSettings.m
-[AXSettings _domainForPreferenceKey:]_block_invoke
Can not locate domain associated with %@ preference key in PreferenceKeyToDomainMap
-[AXSettings preferenceKeyForSelector:]_block_invoke
Can not locate preference key associated with %@ selector in SelectorToPreferenceKeyMap
-[AXSettings _domainNameForDomain:]
No domain name for domain: %d
-[AXSettings _gesturesForPreferenceKeyMigratingIfNecessary:]
Unexpected format for legacy gesture: %@
Unexpected format for gestures: %@
SwitchControlDefaultRecipes
B32@?0@"NSDictionary"8Q16^B24
Zoomed
ZoomLevel
B32@?0@"AXVoiceOverActivity"8Q16^B24
00000000-0000-0000-0000-000000000001
VO_ACTIVITY_PROGRAMMING
AXSettings: Exception was thrown during secure decoding of voiceOverActivities. %@
AVSpeechSynthesisVoice
AXSettings: Exception was thrown during secure decoding of allAvailableVoices. Falling back to secure unarchiving.
Exception: %@
Voices: %@
-[AXSettings setVoiceOverKeyboardModifierChoice:]
We tried to set something invalid
AppleLanguages
zh-HK
zh-TW
zh-CN
RotorItem
Enabled
v32@?0@"NSDictionary"8Q16^B24
en_CA
soundEnabled
hapticEnabled
SBIconVisibility
com.apple.springboard.appIconVisibilityPreferencesChanged
com.apple.scrod.braille.table.duxbury.eng-xueb
com.apple.scrod.braille.table.duxbury.eng-xna
com.apple.scrod.braille.table.duxbury.eng-xuk00
SpeechRate
Volume
Handwriting
BrailleGesture
Hints
AudioDucking
TextSelection
Character
Word
Line
Header
Link
FormElement
TableStart
ListStart
VisitedLink
NonVisitedLink
Same
Image
StaticText
Landmarks
Button
TextField
SearchField
Containers
VerticalNavigation
Punctuation
Sounds
TypingMode
ContinuousPath
NavigationDirection
Language
BrailleLanguage
BrailleAutoAdvance
Article
AudioDestination
Activities
ImageDescriptions
DirectTouchMode
SilenceTVAnnouncements
SpeakNonfocusableElementsAfterDelay
ExploreFocusAffectsNativeFocus
kTopLeftHotCorner
kTopRightHotCorner
kBottomLeftHotCorner
kBottomRightHotCorner
IncrementDecrement
ElementSpecificActions
Scroll
Home
SideApp
Gestures
Edit
Escape
RefineSelection
NavigationMode
Device
Settings
MediaControls
Recipes
ItemMenu
LockItemMenu
ToggleDictation
SiriShortcuts
Multitasking
NotificationCenter
ControlCenter
LockScreen
RotateScreen
Mute
VolumeUpDown
SpotlightSearch
SiriVoiceControl
TripleClick
Shake
Screenshot
IncreaseDecreaseZoom
SpeakScreen
InterDevice
Sysdiagnose
RebootDevice
Dock
ApplePay
Flick
Pinch
TapAndHold
Drag
HoldAndDrag
DoubleTap
Freehand
Fingers
Saved
ForceTouch
SpeedUpDown
MoveMenu
SpeechOnOff
SoundOnOff
GroupsOnOff
PlayPause
PreviousTrack
NextTrack
SkipForward
SkipBackward
Rewind
FastForward
ATVRemoteMenu
Type
None
BlackAndWhite
BlackAndWhiteInverted
HueAdjust
LowLight
Window
Docked
Fullscreen
Left
Right
Bottom
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/NSArray+AXExtensions.m
-[NSArray(AXExtensions) axMapObjectsUsingBlock:]_block_invoke
Result was nil in mapping block!
NSArray
%@, Alternative Voice Identifier: %@
siri.male
siri.female
compact
siri.and.type
%@_%@_%@
premium
Received 0 packets
Received 0-length packet
Expected packet to be %@ bytes, was actually %@ bytes. type: %@
AXCodeItemAccess
executable
assistantUIBundle
siriUIBundle
siriUIPresentationBundle
uibundle
qldisplay
fpenroll
servicebundle
lockbundle
XPCServices
wkbundle
healthplugin
AXCodeItem<%p> [Rank:%u] %@ [AXBundle name:%@] [Platforms and Targets:%@ %@]
AXCodeItem<%p> [type:%@ name:%@] %@
<Uninitialized>
SpringBoard
Carousel
PineBoard
AXLoading
Code item path was empty
URL does not exist: %@
URL is not a directory as expected: %@
Could not create bundle from URL: %@
dlopen strategy not inplemented
Uninitialized
Dylib
Framework
Executable
App Extension
AssistantUIBundle
SiriUIBundle
SiriUIPresentationBundle
SpringBoardBundle
QuickLookBunle
FPenroll
AXBundle
LockBundle
XPC Service
WebKit bundle
ServiceBundle
Health Plugin
Unexpected!
AXGeneric
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXLoggingSubsystem.m
+[AXLoggingSubsystem willLog]
Should not be relying on this anymore. Logging is always enabled.
AllEvents
Version
ArePointsDeviceRelative
IsLeftToRightSwipe
HasLocalizableName
ShouldPerformAtOriginalLocation
Time
Forces
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXReplayableGesture.m
-[AXReplayableGesture pointForFingerIdentifier:atEventIndex:]
Should not have asked for the point for a finger identifier (%@) that did not exist at this event index (%lu)
 - device relative: %i, data: %@
-[AXMutableReplayableGesture addPointsByFingerIdentifier:forces:atTime:]
Pass in empty dictionaries, not nil, to signify that no fingers are touched down.
-[AXNamedReplayableGesture gestureShiftedByOffset:]
Shifting device relative gestures is not yet supported.
Points
Times
IsDoubleTap
+[AXNamedReplayableGesture gestureWithLegacyFormatDictionary:]
Double taps should always have been created using the gesture factory.
v32@?0@"NSArray"8Q16^B24
indexes
values
v32@?0@"NSNumber"8Q16^B24
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AXIndexMap.m
-[AXIndexMap encodeWithCoder:]
nil value for an index returned from _createIndexesWithSize, this should never happen
AXIndexMap:
%lu (0x%lx) -> %@
items
loadOrder
platforms
tvOS
watchOS
iosmac
AXLoader
Could not load ax bundle map: %@
Could not decode ax bundle map JSON: %@
Could not load ax bundle map: Expected rootObject to be NSDictionary
Could not load ax bundle map: Expected rootObject.items to be NSArray
Could not load bundle map item. expected NSDictionary
Could not load bundle map item. name is missing
Could not load bundle map item. target expected to be NSDictionary
Could not load bundle map item. target name is missing
Could not load bundle map item named '%@'. target type is missing
Could not load bundle map item named '%@'. target type is unknown '%@'
Could not load bundle map item named '%@'. supportedPlatforms expected to be an array
Could not load bundle map item named '%@'. supportedPlatforms item '%@' expected to be a string
If loadOrder is specified, it must be a number
com.apple.accessibility.AXRunloopCoalescer
MIDIClient
v16@?0r^{MIDINotification=iI}8
Error creating MIDI client with identifier: %@
Input
v24@?0r^{MIDIPacketList=I[1{MIDIPacket=QS[256C]}]}8^v16
Error creating MIDI client input port with identifier: %@
Error disposing MIDI client with identifier: %@
Other
Entity
Source
Destination
External Device
External Entity
External Source
External Destination
MIDI Notification: MIDI I/O error. Device: %@
Could not connect end point to input port
UNTITLED_RECIPE
RECIPE_CREATED_FROM_HOLD_POINT
RECIPE_CREATED_FROM_POINT
EXIT_RECIPE
SELECT_ITEM_AUTOSCANNING
CUSTOM_GESTURE
CENTER_TAP
RIGHT_TO_LEFT_SWIPE
LEFT_TO_RIGHT_SWIPE
HOLD_POINT
[%@] String: %@, Original String: %@, Braille String: %@, variants: %@
com.apple.accessibility.system.app.server.ready
AXSystemAppServerDiedNotification
directionPadUp
directionPadDown
directionPadLeft
directionPadRight
faceButtonA
faceButtonB
faceButtonX
faceButtonY
shoulderButtonL1
shoulderButtonL2
shoulderButtonR1
shoulderButtonR2
leftJoystickX
leftJoystickY
leftJoystickButton
rightJoystickX
rightJoystickY
rightJoystickButton
menuButton
viewButton
homeButton
 Game Info:
   D-pad Up: %.2f
   D-pad Down: %.2f
   D-pad Left: %.2f
   D-pad Right: %.2f
   Left Stick X: %.2f
   Left Stick Y: %.2f
   Right Stick X: %.2f
   Right Stick Y: %.2f
   A: %.2f
   B: %.2f
   X: %.2f
   Y: %.2f
   L1: %.2f
   L2: %.2f
   R1: %.2f
   R2: %.2f
   Left Stick Button: %.2f
   Right Stick Button: %.2f
   Menu Button: %.2f
   View Button: %.2f
   Home Button: %.2f
UIServer
AssistiveTouch
AXEventData. Sender:%@
[1;30m
[31m
[1;31m
[32m
[1;32m
[33m
[1;33m
[34m
[1;34m
[35m
[1;35m
[36m
[1;36m
[37m
[30m
%s%@%s
AXLogColorizer:<%p>. active:%@ managed:%@ preferDarkColors:%@
AXReplayer
Exhausted retry attempts for block: %@
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXReplayer.m
-[AXReplayer replayWithName:attempts:interval:async:queue:replayBlock:completion:]
must provide a replayBlock
NotSupported
Use initWithHIDTapIdentifier:HIDEventTapPriority:systemEventTapIdentifier:systemEventTapPriority:
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/AXEventProcessor.m
-[AXEventProcessor initWithHIDTapIdentifier:HIDEventTapPriority:systemEventTapIdentifier:systemEventTapPriority:]
Cannot install an event tap for system events if not running in the sytem process.
%@-HIDEventReceive
-[AXEventProcessor dealloc]
The thread needs to be stopped with the cleanup call before we can dealloc properly
-[AXEventProcessor beginHandlingHIDEventsForReason:]
AXEventProcessor was not initialized to handle HID events
-[AXEventProcessor beginHandlingSystemEventsForReason:]
AXEventProcessor was not initialized to handle system events
This reason already exists among reasons for tapping system events. Unbalanced. Could be trouble, but might be ok. %@
This reason does not exist among reasons for tapping system events. Unbalanced. %@
B16@?0@"AXEventRepresentation"8
AXSOSVersion
AXSModel
AXSHasHomeButton
AXSUsesExtendedRange
accessibilityOptions
preferredContentSizeCategoryName
axOSVersion
axModel
usesExtendedSlider
DeviceClass
<AXMIDIDeviceEntity:%p parent:%@>
    
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.4.35/Source/AccessibilityUtilities/NSObject+AXCollectionsExtensions.m
-[NSObject(AXCollectionsExtensions) _ax_appendPrettyDescriptionToString:indentationString:visitedCollections:]
accumulatorString <%@: %p> was supposed to be a mutable string
indentationString <%@: %p> was supposed to be a mutable string
visitedCollections <%@: %p> was supposed to be a mutable set
<%@: %p>
GAXTimeRestrictionManager<%p>. active:%@ paused:%@
  start time:%@ s (absolute:%@ s)
  expiration duration:%@ s (absolute:%@ s)
  alarm:%@ s (absolute:%@ s)
AXVoiceOverDidEnableGesturedTextInputNotification
AXVoiceOverDidDisableGesturedTextInputNotification
AXVoiceOverHandwritingAttributePreferredCharacterSet
AXVoiceOverHandwritingAttributeAllowedCharacterSets
AXVoiceOverHandwritingAttributeCanDeleteCharacter
AXVoiceOverHandwritingAttributeShouldEchoCharacter
AXVoiceOverHandwritingAttributeAcceptsRawInput
AXVoiceOverHandwritingAttributeShouldPlayKeyboardSecureClickSound
AXVoiceOverHandwritingAttributeAcceptsContractedBraille
AXVoiceOverHandwritingAttributeLanguage
AXCharacterVoiceIdentifierMickey
AXCharacterVoiceIdentifierMinnie
SwitchActionKey
SwitchNameKey
SwitchSourceKey
SwitchTypeKey
SwitchKeyCodeKey
SwitchButtonNumberKey
SwitchHeadSwitch
SwithProductName
SwithManufacturerName
SwitchLongPressAction
SwitchRemoteSwitchIdentifier
SwitchRemoteDeviceName
SwitchRemoteDeviceIdentifier
SwitchMidiEvent
SwitchAccessibilityEventUsagePage
SwitchAccessibilityEventUsage
SwitchAccessibilityEventModifierFlags
SCREEN_SWITCH_NAME
SWITCH_SOURCE_CAMERA_LABEL
SWITCH_SOURCE_EXTERNAL_LABEL
SWITCH_SOURCE_MFI_LABEL
SWITCH_SOURCE_SCREEN_LABEL
Apple TV Remote
SWITCH_SOURCE_REMOTE_LABEL
SWITCH_SOURCE_MIDI_LABEL
SWITCH_SOURCE_ACCESSIBILITY
SWITCH_SOURCE_GAMEPAD
[%@ (%p)]
Action: %@ 
Name: %@ 
Source: %@ 
Long Press action: %@ 
Type: %@ 
Key code: %hu
Button Number: %d
Head Switch: %d
Product Name: %@
Manufacturer: %@
UUID: %@
Remote device identifier: %@
Remote device name: %@
Remote switch identifier: %@
MIDI Event: %@
SWITCH_NAME_PREFIX
SwitchSourceCamera
SwitchSourceKeyboard
SwitchSourceMFI
SwitchSourceScreen
SwitchSourceATVRemote
SwitchSourceRemote
SwitchSourceMIDI
SwitchSourceGamepad
SCATSwitchSourceAccessibility
SwitchTypeOptional
SwitchTypeRequired
activate
menu
select
step next
step previous
stop
app switcher
home
notifications
control center
siri
volume down
volume up
3d touch
toggle dictation
accessibility shortcut
voice shortcuts
ATV Select
ATV Menu
ATV Home
ATV Play/Pause
ATV Up
ATV Down
ATV Left
ATV Right
unknown
SWITCH_ACTION_ACTIVATE_LABEL
SWITCH_ACTION_MENU_LABEL
SWITCH_ACTION_RUN_LABEL
SWITCH_ACTION_SELECT_LABEL
SWITCH_ACTION_STEP_NEXT_LABEL
SWITCH_ACTION_STEP_PREVIOUS_LABEL
SWITCH_ACTION_STOP_LABEL
SWITCH_ACTION_APP_SWITCHER_LABEL
SWITCH_ACTION_HOME_LABEL
SWITCH_ACTION_NOTIFICATION_CENTER_LABEL
SWITCH_ACTION_CONTROL_CENTER_LABEL
SWITCH_ACTION_SIRI_LABEL
SWITCH_ACTION_VOLUME_DOWN_LABEL
CUSTOMIZE_MENU_ForceTouch
SWITCH_ACTION_VOLUME_UP_LABEL
SWITCH_ACTION_DICTATE_LABEL
SWITCH_ACTION_TRIPLE_CLICK
SWITCH_ACTION_VOICE_SHORTCUTS_MENU_LABEL
SWITCH_ACTION_ATV_REMOTE_SELECT_LABEL
SWITCH_ACTION_ATV_REMOTE_MENU_LABEL
SWITCH_ACTION_ATV_REMOTE_HOME_LABEL
SWITCH_ACTION_ATV_REMOTE_PLAY_PAUSE_LABEL
SWITCH_ACTION_ATV_REMOTE_UP_LABEL
SWITCH_ACTION_ATV_REMOTE_DOWN_LABEL
SWITCH_ACTION_ATV_REMOTE_LEFT_LABEL
SWITCH_ACTION_ATV_REMOTE_RIGHT_LABEL
Could not return action string for unknown action
B24@?0@"AXSwitch"8^B16
ProductID
VendorID
AX MIDI
CreateClient
DisposeClient
ParseError
AX MIDI Error: %@ - %@
 [Underlying Error: %@]
 [MIDI Error: kMIDIInvalidClient]
 [MIDI Error: kMIDIInvalidPort]
 [MIDI Error: kMIDIWrongEndpointType]
 [MIDI Error: kMIDINoConnection]
 [MIDI Error: kMIDIUnknownEndpoint]
 [MIDI Error: kMIDIUnknownProperty]
 [MIDI Error: kMIDIWrongPropertyType]
 [MIDI Error: kMIDINoCurrentSetup]
 [MIDI Error: kMIDIMessageSendErr]
 [MIDI Error: kMIDIServerStartErr]
 [MIDI Error: kMIDISetupFormatErr]
 [MIDI Error: kMIDIWrongThread]
 [MIDI Error: kMIDIObjectNotFound]
 [MIDI Error: kMIDIIDNotUnique]
 [MIDI Error: kMIDINotPermitted]
Error fetching MIDI property '%@'
Unable to find entity for endpoint
Unable to find device for entity
AXPhonetics/
%@@phonetics
AXPhonemes/
%@@phonemes
%@.plist
_ESC_
default
AXResourceLoader
Bundle was nil. Tried ID:%@ and Path:%@
com.apple.QuickSpeak
AXPineBoardServerInstance.framework
AXPineBoardServer.framework
AXDictionaryElementKeyHint
AXDictionaryElementKeyIndex
AXDictionaryElementKeyIsKeyboardKey
AXDictionaryElementKeyLabel
AXDictionaryElementKeyLanguage
AXDictionaryElementKeyTraits
AXDictionaryElementKeyTraitsDescription
AXDictionaryElementKeyValue
?333333
"2$222&
>333333
MbP?
b@ffffffC@33333
8@fffff
A@333333<@
`h@ffffff9@
!$'*-0369<?BEHKNQTWZ]`cfilorux{~
333333
(,/36
?ffffff
"%(+.147
;;;;;;
?;;;;;;
?VVVVVV
?}}}}}}
!$'*-0369

69<?BE
&),/258;>
 #&),
softlink:r:path:/System/Library/PrivateFrameworks/AccessibilityPhysicalInteraction.framework/AccessibilityPhysicalInteraction
softlink:r:path:/System/Library/PrivateFrameworks/SiriTTS.framework/SiriTTS
softlink:r:path:/System/Library/PrivateFrameworks/VoiceServices.framework/VoiceServices
softlink:r:path:/System/Library/PrivateFrameworks/AXSpeechAssetServices.framework/AXSpeechAssetServices
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
softlink:r:path:/System/Library/PrivateFrameworks/ScreenReaderCore.framework/ScreenReaderCore
softlink:r:path:/System/Library/Frameworks/TVServices.framework/TVServices
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/PrivateFrameworks/VoiceServices.framework/VoiceServices
MAAssetQuery error fetching results (for %{public}@) - %{public}@ (remote: %d)
Catalog downloaded for assetType %@: %@
%{public}@
%@ : %@
Error locating symbol %{public}@
UIAccessibility Error. Could not safe access iVar: %{public}@ on class: %{public}@
Error (%{public}@): Undefined key: %{public}@, for class %{public}@ [%{public}@]
%{public}@
Failed to handle event in time for event tap: %@
AXAssertionCoordinator: Now start tracking assertion for reason: %@
AXAssertionCoordinator: Stop tracking assertion for reason: %@
AX Storage Error: Attempting to access a value with a nil key. Self:%{public}@.
Backtrace:
%{public}@.
AX Storage Error: Attempting to store a value with a nil key. Value:%p.
Self:%{public}@.
Backtrace:
%{public}@.
couldn't get async result for message %@: %@
Timed out trying to %@ assertion with type: %@ identifier: error: %@. will retry.
Couldn't %@ assertion with type: %@ identifier: %@ error: %@. Giving up!
AX SystemApp: Error: %{public}@
not connecting to server, no client yet
not connecting to server, no client callback port yet
failed to start ipc server due to: %@
Registering FKA pid: %d
Could not ask backboard server about GAX Availability: %{public}@
Could not ask backboard server to set Guided Access enabled by requesting app: %{public}@
Attempting to request session again after temporary failure. Attempts remaining: %lu
Could not ask backboard server if GAX is self locked to app. %{public}@
Could not ask if GAX self lock is active and unmanaged: %{public}@
Toggle Guided Access
Could not get last set color filter: %@
bogus length of color filter description %zu
AX SystemApp Assertions not implemented on this platform
Assertion acquired: %@, %@
Assertion released: %@, %@
Error unarchiving command map: %@
Creating new command map because none was saved in preferences
Unable to encode command map: %@
AXUserEventTimer: Now disabling idle timer for reason: %@
AXUserEventTimer: No longer disabling idle timer for reason: %@
AX: %{public}@
(slow path) error getting entitlements for task %{public}@: %@
We don't have a record of this client being registered. Strange that we got an invalidation.
Cleaned up cached validation entitlement for %{public}@ = %{public}@
Client disconnected %{public}@
could not set custom queue size to %u: 0x%08x
Starting server (%{public}@) on thread (%{public}@:name:%{public}@:main:%{public}@)
Could not start server thread. Could not allocate mach port. self:%{public}@
Could not start server thread. Error performing mach_port_insert_right. self:%{public}@
Could not start server thread. Could not register mach port. self:%{public}@
Could not start server thread. Could not checkin or register server port. self:%{public}@
Could not start server thread. server runloop source was NULL. self:%{public}@
someone tried to register with a bogus client port (%llx)
Clients only need to register once!
Server could not handle received message.  inData could not be unarchived to a message object
Not privileged to communicate
Warning: no handler was for message key: (%d). Falling back to default handler
ERROR: %{public}@
Did not find server for server port %d
Message handled more than one, error state
reply to message failed: %{public}s
Reply port was invalid, name: 0x%x
async reply to message failed: %{public}s
Setting client identifier %{public}@
Why are you setting the client identifier twice? Old: %{public}@, New: %{public}@
AX Asked for client callback port but we had not yet registered
Client (%{public}@) registering with server on thread (%{public}@:name:%{public}@:main:%{public}@). UsesMainThreadRunloop:%{public}@
Could not create a server source for the client to register with the server
Could not register with server: %{public}@
Could not register with server with client identifier: %{public}@
Could not register with server for %{public}@. %d tries remaining: %{public}@
Exhausted registration attempts for %{public}@: %{public}@
client could not connect to new service: %{public}@ %{public}@
Connected to server: %{public}@ %d
A connection to the server could not be made after %{public}@s. Calling timeout blocks
AX IPC Client: %{public}@
Client went invalid
Removing entity: %@
Did add entity: %@
Validations
Target=%@
InstallSafeCategories
AX Safe category class '%@' was not found!
AX Safe category class:%@ in wrong AX bundle '%@' should be with '%@'!
Begin tracking with AXCodeLoaderTrackingModeDisabled is invalid
UpdateAXCodeItemDefs
Trying to associate an axBundle code with another axBundle makes no sense!
(%lu) Decoding errors found with axbundlemap:
  %@
No code items decoded from URL %s
Will reevaluate code items and load any needed ax code items now
found %lu axbundle(s) requiring load
Failed to load item %@. error: %@
Finished loading ax code items
AXCodeLoader State:
  -> %@
-------------------------------------------------
WARNING: The following AX Bundles are loaded but
were not in our definitions! This means the old
loader knows how to load some bundles that we do
not, and we have more compile-time work to do
--------------------------------------------
*** Assertion failure in %s, %@:%lu: %@
saving channels: %{public}@ %{public}@
Unable to continue speaking from synthesizer.
Our substring range was greater than speaking content! (%lu,%lu) %@
Changing speaking rate to %f...
Respeaking utterance.  Last spoken substring range was %{private}@
Last utterance language tag is %{private}@
The last utterance is already on the queue, so we need to remove it first.
Paused, so leaving the last utterance on the queue
Did not need to respeak utterance.
Finished all content, so picking the last token. %ld
We tried to skip a unit in the currently spoken text, but hadn't tried to speak a substring yet.  This is possible but probably requires extremely fast timing.  If not, something may be wrong
Last spoken substring range was %{private}@.
Skipped to boundary.
Next speech sequence item was %{private}@.
%{public}@...
Speaking content ranges were %{private}@.
Current token index was %ld.
Succeeded at %{public}@.
Failed to %{public}@.
Synthesizer will speak range %{private}@ of %{private}@, but we did not track the last utterance range.  It could be that we tried to stop speaking before getting this callback.
Spoke range %{private}@.
Finished speaking for utterance %{private}@, but last utterance was %{private}@
AXDeviceSizeMM() screen class is invalid
AXDeviceSizeMM() result is invalid
Using physical device dimensions: [%.2fmm x %.2fmm]
Unexpected display values returned from MG. Falling back to legacy calculations
Using (fallback!) physical device dimensions: [%.2fmm x %.2fmm]
Had raw value %f, but should not have gotten here if the asset was not on screen at all
Unable to get view bounds: %@ or object frame: %@
We passed in %@ to TTSPreferencesCopyDefaultOutputLanguageIdentifierForLanguage and got back nil
Override language {%@} detection to be ja-JP
Running language detection on chunk: %@
Adding secondary tag %@ with probability %f for chunk: %@
Tagger chose tag %@ with probability %f for chunk: %@
Couldn't find dialect for tag %@, manually tagging
Tagger couldn't find a language for current chunk. Manually tagging.
token found[%@]:%{private}@ %@ %@
  add last chunk %@ %@
Combining tags. Old tags were: %{private}@. New tags are: %{private}@
Finished Tagging. %@ %@ %@
token NOT found:%{private}@ : %@ %@
char:%{private}@  %@ %@
  is common, skipping  %@ %@
  is common, skipping %@ %@
  curLang was nil %@ %@
  add to exisiting %@ %@
  **unspeakable %@ %@
  start new chunk %@ %@
checking if touched point is contained in ignored path:
 touch (%f, %f), %@
nuking all AX settings!
extantVoices was called from a process that isn't AXUIServer, and we don't have any voices yet. Process name: %@
Unexpected object type for preference key: %@
Name: %@ for language: %@ and asset: %@
Will create MIDI client with identifier: %@
MIDI system change occurred. change type: %@
Unhandled MIDI notification: %@
Dispatching event: %@
Will dispose of MIDI client with identifier: %@
%@ attached devices
Device %@ of %@:
MIDI Notification: add object: %@
Unhandled Object added: %@
MIDI Notification: Remove object: %@
Unhandled Object removed: %@
MIDI Notification: Property Changed: %@ - %@
MIDI Notification: Thru Connections Changed
MIDI Notification: Serial Port Owner Changed
Removing device: %@
Did add device: %@
Did attempt to connect inputPort to source: %@. result: %@
Did attempt to disconnect inputPort from source: %@. result: %@
validation error: %{public}@
UIAccessibility validation error: see log output above.
Expected length:(%@) to be size of AXEventDataStorage: (%@)
EventProcessor: This reason already exists among reasons for tapping HID events. Unbalanced. %@
EventProcessor: This reason does not exist among reasons for tapping HID events. Unbalanced. %@
Using test data mode settings: %@
Setting test data mode settings: %@
Applying saved settings: %@
Error archiving data blob for buddy: %@
Archived data blob for buddy with size %lu
Error unarchiving data blob from buddy: %@
Unarchived data blob for buddy
Removing source: %@
Removing destination: %@
Did add source endpoint: %@
Did add destination endpoint: %@
This code must execute in a writing block on AXAccessQueue: %@
This code must execute in a reading (or writing) block on AXAccessQueue: %@
Can't begin time restriction, it's already active
Can't begin time restriction, specified duration is too short: %{public}@
App Time restriction is being overridden with internal value: %{public}@
  TimeRestrictions: Was Asked to Start: %{public}@
  TimeRestrictions: Was Asked to Cancel: %{public}@
  TimeRestrictions: Was Asked to Pause: %{public}@
  TimeRestrictions: Was Asked to Resume: %{public}@
Loading resource: %@
AXPerformanceTestReportingServer
AXUtilsPrivate
AXUtilitiesCommonStringRuntimeOverrides
AXTripleClickHelpers
AXEventHandInfoRepresentation
AXEventRepresentationDescription
NSObject
NSSecureCoding
NSCoding
NSCopying
Speaking
AXIPCMessage
UIAccessibilitySafeCategory_Private
UIAccessibilitySafeCategory
AXDisplayLinkManagerTargetAction
AXDisplayLinkManager
AXTypingPrediction
AXPredictiveTypingModel
AXEventTapPair
AXEventTapManager
AXMIDIExtras
AXAssertionCoordinator
AXSideStorage
AXEventIOSMACPointerInfoRepresentation
AXRedirectedEventDetector
UnitTesting
AXFirstResponderValueChangeManager
AXAssertionWorkItem
AXServer
AXEventPointerInfoRepresentation
AXBackBoardServerInstance
AXBackBoardServerInstanceDelegate
AXBackBoardServer
AXAssertion
_AXAssertionServer
FKAAvailableCommands
AXValueChangeUtilities
AXUserEventTimer
AXOutputRequest
AXExtensions
AXIPCDelayedMessage
AXIPCServerClientRegistration
AXIPCServerMessageHandlerContext
AXIPCServer
AXIPCServerClientRegistrationDelegate
AXPostConnectionTask
AXIPCOutstandingAsyncRequest
AXIPCClient
AXDeviceMonitor
AXSubsystemEventTap
AXSubsystemUserInterfaceService
AXSubsystemSpeechAssetDownloader
AXSubsystemZoom
AXSubsystemAVSpeechSynthesis
AXSubsystemVOTiCloud
AXSubsystemVOTAudio
AXSubsystemBrailleGestures
AXSubsystemVisualAlerts
AXSubsystemAudioRouting
AXSubsystemLocCaptionPanel
AXSubsystemSpeakSelection
AXSubsystemSpeakTyping
AXSubsystemSpeakThis
AXSubsystemContextKit
AXSubsystemSCElementNav
AXSubsystemPronunciations
AXSubsystemSCPauseResume
AXSubsystemBrailleHardware
AXSubsystemSwitchControlHardware
AXSubsystemVoiceOverIAP
AXSubsystemVoiceOverLifeCycle
AXSubsystemMagnifier
AXSubsystemMagnifierBright
AXSubsystemVoiceOver
AXSubsystemAXNotifications
AXSubsystemAXVectorKit
AXSubsystemAXCharacterVoices
AXSubsystemAXAggregateLogging
AXSubsystemMagicTapToggle
AXSubsystemBrokenHomeButton
AXSubsystemDataMigrator
AXSubsystemInvertColors
AXSubsystemAXSettings
AXSubsystemAXUIViewService
AXSubsystemBBServer
AXSubsystemSBServer
AXSubsystemIPC
AXSubsystemSpeakFingerManager
AXSubsystemAXCustomizableMouse
AXSubsystemAXSoundBoard
AXMIDIDeviceEntityEndpoint
AXAssertionHelpers
AXMIDIEvent
AXVoiceOverServer
AXMIDIDevice
AXMIDIDeviceEntityDelegate
AXBinaryMonitor
AXMobileConfigurationInterface
AXVoiceOverActivity
AXValidationManager
AXEventPathInfoRepresentation
AXEventPathInfoRepresentationExtension
AXGeometryExtensions
AXCodeLoader
AXImageMonitorObserver
ExtendedCodeInfo
AXEventAccelerometerInfoRepresentation
AXTrampoline
AXTrmpoline
AXPathWrapper
AXAudioHardwareManager
AXOrator
AVSpeechSynthesizerDelegate
AXAppRepresentation
AXGameControllerEvent
AXSideStorageHelpers
NonRetainedObjectContainer
_AXDyldImageMonitor
AXImageMonitor
AXARDescriptionFormatting
AXLangMap
AXSwitchRegistrar
AXEventRepresentation
AXSwitchRecipeMapping
AXSwitchRecipe
AXDialectMap
AXLanguageManager
AXLanguageTag
AXLanguageTaggedContent
AXThreadTimerTask
AXThreadTimer
AXAccessQueueTimer
AXEventKeyInfoRepresentation
AXSettings
AccessibilitySupportFacade
AXUtilsExtensions
AXAlternativeSpeech
AXAlternativeSpeechSynthesisVoice
AXAlternativeVoices
AVAlexSpeechSynthesisVoice
AVSiriMaleSpeechSynthesisVoice
AVSiriFemaleSpeechSynthesisVoice
AXMIDIParser
AXCodeItem
AXLoggingSubsystem
AXReplayableGesture
AXMutableReplayableGesture
AXCenterTapReplayableGesture
AXPageTurningReplayableGesture
AXNamedReplayableGesture
AXIndexMap
_AXCodeItemDecoder
AXUpdateElementVisualsCoalescer
AXActionCoalescer
AXMIDIManager
AXMIDIDeviceProtocol
AXOutputAction
AXSystemAppServer
AXEventGameControllerInfoRepresentation
AXEventData
AXLogColorizer
_AXReplayInstance
AXReplayer
AXEventProcessor
AXBuddyDataPackage
AXMIDIDeviceEntity
NSFastEnumeration
AXCollectionsExtensions
GAXTimeRestrictionManager
AXSwitch
AXCharacterSoundMap
AXResourceLoader
_connectIfNecessary
initWithKey:payload:
sendSimpleMessage:
dictionaryWithObjects:forKeys:count:
server
_serviceName
voiceOverTouchDidLaunch
assistiveTouchDidLaunch
voiceOverDidSpeak:
_accessibilityInterposesAsSystemApplication
setupProcessName
isEqualToString:
safeValueForKey:
integerValue
mainBundle
infoDictionary
objectForKey:
countByEnumeratingWithState:objects:count:
containsString:
inPreboardMode
inCheckerBoardMode
processInfo
processName
copy
bundleIdentifier
stringWithFormat:
hasPrefix:
preferredLanguages
objectAtIndex:
characterDirectionForLanguage:
enumerateObjectsUsingBlock:
lastPathComponent
rangeOfString:
substringFromIndex:
characterSetWithCharactersInString:
invertedSet
rangeOfCharacterFromSet:
hasSuffix:
length
substringWithRange:
count
UTF8String
defaultManager
fileExistsAtPath:
bundleWithPath:
isLoaded
loadAndReturnError:
principalClass
target
performSelector:
bundleForClass:
addObject:
enumeratorWithOptions:
nextObject
pathComponents
isLaunchProhibited
containsObject:
appTags
localizedName
caseInsensitiveCompare:
sortUsingComparator:
supportsAccessibilityDisplayFilters
isGuidedAccessActive
sharedInstance
touchAccommodationsEnabled
localizationQACaptionMode
classicInvertColors
leftRightBalanceEnabled
setClassicInvertColors:
setLastSmartInvertColorsEnablement:
zoomEnabled
setZoomEnabled:
assistiveTouchEnabled
setAssistiveTouchEnabled:
setAssistiveTouchUIEnabled:
guidedAccessEffectiveAppBundleIdentifier
defaultWorkspace
openApplicationWithBundleID:
toggleGuidedAccess
_toggleVoiceOver
_toggleSmartInvertColorsOffMainThread
performSelectorInBackground:withObject:
toggleColorFilter
_toggleZoomOffMainThread
_toggleAssistiveTouch
switchControlEnabled
setSwitchControlEnabled:
setTouchAccommodationsEnabled:
toggleGuidedAccessFromControlCenter
enhanceBackgroundContrastEnabled
setEnhanceBackgroundContrastEnabled:
setLeftRightBalanceEnabled:
reduceMotionEnabled
setReduceMotionEnabled:
toggleFullKeyboardAccess
startMagnifier
_availableFeatures
intValue
_shouldShowFeatureInShortcutsControlCenterModule:includeGuidedAccess:
titleForTripleClickOption:
axFilterObjectsUsingBlock:
valueForTripleClickOption:
_promptToDisableBrightnessFilters:data:
toggleTripleClickOption:
tripleClickOptionsForAccessibilityShortcutControlCenterModuleIncludingGuidedAccess:
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
eventType
setEventType:
initialFingerCount
setInitialFingerCount:
currentFingerCount
setCurrentFingerCount:
swipe
setSwipe:
systemGesturePossible
setSystemGesturePossible:
paths
initWithArray:copyItems:
setPaths:
handIdentity
setHandIdentity:
handPosition
setHandPosition:
handIndex
setHandIndex:
handEventMask
setHandEventMask:
init
decodeInt32ForKey:
setWithObjects:
decodeObjectOfClasses:forKey:
decodeObjectOfClass:forKey:
getValue:
encodeInt32:forKey:
encodeObject:forKey:
valueWithBytes:objCType:
appendString:
accessibilityEventRepresentationTabularDescription
appendFormat:
firstObject
transducerType
description
isStylus
stringByAppendingFormat:
supportsSecureCoding
isEqual:
class
self
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
encodeWithCoder:
initWithCoder:
TB,R
copyWithZone:
additionalHandEventFlagsForGeneratedEvents
setAdditionalHandEventFlagsForGeneratedEvents:
.cxx_destruct
_systemGesturePossible
_swipe
_initialFingerCount
_currentFingerCount
_eventType
_handIdentity
_handIndex
_handEventMask
_additionalHandEventFlagsForGeneratedEvents
_paths
_length
_handPosition
TC,N,V_swipe
TI,N,V_eventType
TS,N,V_initialFingerCount
TS,N,V_currentFingerCount
T@"NSArray",&,N,V_paths
TC,N,V_systemGesturePossible
TI,N,V_handIdentity
TI,N,V_handIndex
T{CGPoint=dd},N,V_handPosition
TB,R,N
TI,N,V_handEventMask
TI,N,V_additionalHandEventFlagsForGeneratedEvents
TQ,R,N,V_length
attributes
compare:options:
sortedArrayUsingComparator:
_voiceFromInternalVoiceListWithIdentifier:
extantVoices
identifier
isSiriVoiceIdentifier:
nameForVoiceIdentifier:
language
dialectForLanguageID:
localeNameInCurrentLocale
name
isVocalizerVoiceIdentifier:
setGender:
lowercaseString
setName:
stringByReplacingOccurrencesOfString:withString:
arrayWithObjects:count:
setLanguages:
isNeuralSiriVoiceIdentifier:
setType:
languages
type
isAssetManagedBySiriForVoiceId:
array
voice
clientID
getAllAutoDownloadedVoiceAssets:
selectedSpeechVoiceIdentifiers
returnTypes:
queryMetaDataSync
results
queryParams
numberWithUnsignedInt:
getLocalFileUrl
setAlexLocalAssetURL:
setObject:forKey:
initWithType:
setDoNotBlockBeforeFirstUnlock:
addKeyValuePair:with:
assetsForLanguage:voiceType:
arrayByAddingObjectsFromArray:
neural
ax_filteredArrayUsingBlock:
state
setAllowsCellularAccess:
setDiscretionary:
startCatalogDownload:options:then:
defaultColorizer
errorString:
warningString:
debugString:
infoString:
initWithUTF8String:
initWithFormat:
callStackSymbols
initWithFormat:arguments:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
redString:
greenString:
yellowString:
blueString:
cyanString:
magentaString:
initWithTargetSerialQueue:
includeBacktraceInLogs
registerUpdateBlock:forRetrieveSelector:withListener:
cancel
removeAllObjects
afterDelay:processBlock:
timeIntervalSinceReferenceDate
dictionary
numberWithDouble:
unsignedIntegerValue
doubleValue
numberWithUnsignedInteger:
accessibilitySpeakableDisplayValueWithStyle:
currentLocale
localeIdentifier
_accessibilitySpeakableDisplayValueWithStyle:isUSKeyboard:
displayValueWithStyle:isUSKeyboard:
axAttributedStringWithString:
setAttribute:forKey:
accessibilitySpeakableDisplayValue
fkaSpeakableDisplayValue
T@"AXAttributedString",R,N
initWithBytes:length:encoding:
fileURLWithPath:
path
initWithPath:
setKey:
setPayload:
setUniqueID:
dealloc
initForReadingFromData:error:
ignoreLogging
unarchivedObjectOfClass:fromData:error:
senderBundleId
payload
auditToken
clientPort
uniqueID
numberWithUnsignedLongLong:
archivedMessageFromData:
initWithKey:
initWithKey:payload:keyDebugInfo:
setClientPort:
setAuditToken:
processedMessage
setProcessedMessage:
_processedMessage
_key
_clientPort
_payload
_uniqueID
_auditToken
Ti,N,V_key
T@"NSDictionary",C,N,V_payload
TI,N,V_clientPort
T{?=[8I]},N,V_auditToken
TQ,N,V_uniqueID
T@"NSString",R,C,N
TB,N,V_processedMessage
raise:format:
appValidationTestingMode
shouldPerformValidationsAtRuntime
_safeValidatedValueForKey:expectedClass:possibleExpectedTypeEncodings:
sendExceptionForSafeValueKey:onTarget:overrideProcessName:
objCType
_safeValidatedValueForKey:expectedClass:expectedTypeEncoding:
sendExceptionForSafeIVarKey:onTarget:overrideProcessName:
boolValue
unsignedIntValue
floatValue
safeDoubleForKey:
rangeValue
pointValue
sizeValue
rectValue
__axValueForKey:
_accessibilityPerformSafeValueKeyBlock:withKey:onClass:
valueForKey:
valueForKeyPath:
safeIvarForKey:
safeBoolForKey:
safeIntForKey:
safeUnsignedIntForKey:
safeIntegerForKey:
safeUnsignedIntegerForKey:
safeFloatForKey:
safeTimeIntervalForKey:
safeRangeForKey:
safeCGFloatForKey:
safeCGPointForKey:
safeCGSizeForKey:
safeCGRectForKey:
safeStringForKey:
safeArrayForKey:
safeSetForKey:
safeDictionaryForKey:
safeUIViewForKey:
safeValueForKeyPath:
safeIntegerForIvarKey:onClass:
handleFailoversForClassNamed:
reason
sendExceptionForSafeBlock:overrideProcessName:
containsValueForKey:
decodeBytesForKey:returnedLength:
encodeBytes:length:forKey:
encodeInt64:forKey:
setTarget:
setActionSelector:
actionSelector
displayDidRefreshCount
methodForSelector:
setDisplayDidRefreshCount:
initWithTarget:actionSelector:
displayDidRefresh:
_target
_actionSelector
_displayDidRefreshCount
T@,&,N,V_target
T:,N,V_actionSelector
TQ,N,V_displayDidRefreshCount
currentThread
threadDictionary
removeObjectForKey:
setActiveTargetActions:
setUpdatedTargetActions:
storedDisplayLink
isPaused
duration
timestamp
_displayDidRefresh:
displayLinkWithTarget:selector:
currentRunLoop
addToRunLoop:forMode:
setPaused:
setStoredDisplayLink:
invalidate
isHandlingDisplayRefresh
_prepareUpdatedTargetActionsForModification
activeTargetActions
_didAddFirstTargetAction
removeObject:
_didRemoveLastTargetAction
updatedTargetActions
hasUpdatedTargetActions
setHasUpdatedTargetActions:
displayLink
isWarmUpModeEnabled
setDisplayLink:
_releaseCurrentDisplayLinkManager
warmUpModeRequirementsCount
setWarmUpModeRequirementsCount:
setHandlingDisplayRefresh:
currentDisplayLinkManager
addTarget:selector:
removeTarget:selector:
beginRequiringWarmUpMode
endRequiringWarmUpMode
_hasUpdatedTargetActions
_handlingDisplayRefresh
_storedDisplayLink
_activeTargetActions
_updatedTargetActions
_warmUpModeRequirementsCount
T@"CADisplayLink",&,N
T@"CADisplayLink",&,N,V_storedDisplayLink
T@"NSMutableSet",&,N,V_activeTargetActions
T@"NSMutableSet",&,N,V_updatedTargetActions
TB,N,V_hasUpdatedTargetActions
handlingDisplayRefresh
TB,N,GisHandlingDisplayRefresh,V_handlingDisplayRefresh
TQ,N,V_warmUpModeRequirementsCount
warmUpModeEnabled
TB,R,N,GisWarmUpModeEnabled
paused
TB,R,N,GisPaused
Td,R,N
fullWord
setFullWord:
textToInsert
setTextToInsert:
prefix
setPrefix:
rangeToReplace
setRangeToReplace:
probability
setProbability:
_fullWord
_textToInsert
_prefix
_probability
_rangeToReplace
T@"NSString",C,N,V_fullWord
T@"NSString",C,N,V_textToInsert
T@"NSString",C,N,V_prefix
T{_NSRange=QQ},N,V_rangeToReplace
Td,N,V_probability
localeWithLocaleIdentifier:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
enumerateTokensForText:usingBlock:
objectAtIndexedSubscript:
_newContextForText:includeLastToken:length:
arrayWithCapacity:
stringByAppendingString:
subarrayWithRange:
characterAtIndex:
enumerateSubstringsInRange:options:usingBlock:
punctuationCharacterSet
characterIsMember:
_lastPartialWordForText:orEndOfSentence:
_completionPredictionsForPrefix:entireText:desiredNumber:
_nextWordPredictionsForText:desiredNumber:
predictionsForText:desiredNumber:
predictionsForText:
_wordModel
priority
handler
setHandler:
setIdentifier:
setPriority:
systemClient
setSystemClient:
matchingServiceHandler
setMatchingServiceHandler:
failedToHandleInTime
setFailedToHandleInTime:
_type
_systemClient
_matchingServiceHandler
_failedToHandleInTime
T@?,C,N,Vhandler
T@"NSString",C,N,Videntifier
Ti,N,Vpriority
Ti,N,V_type
T^{__IOHIDEventSystemClient=},&,N,V_systemClient
T@?,C,N,V_matchingServiceHandler
T@?,C,N,V_failedToHandleInTime
lock
_enumerateEventTapPairsUsingBlock:
unlock
insertObject:atIndex:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
_reorderEventTaps
_setHIDEventTapCallback:
sendHIDSystemEvent:repostCreatorHIDEvent:senderID:
creatorHIDEvent
newHIDEventRef
contextId
_copyCurrentEventTapPairs
representationWithHIDEvent:hidStreamIdentifier:clientID:taskPort:
handInfo
pathIndex
indexOfObjectPassingTest:
_setEventTapPriority:priority:
_installHIDFilter:skipDeviceMatching:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:wantsMouseEvents:wantsAccessibilityEvents:
_installSystemEventTap:
_hidFilterListForPair:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:wantsMouseEvents:wantsAccessibilityEvents:
installEventTap:identifier:type:skipDeviceMatching:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:wantsMouseEvents:wantsAccessibilityEvents:
installEventTap:identifier:type:skipDeviceMatching:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:wantsMouseEvents:wantsAccessibilityEvents:matchingServiceHandler:
_installEventTap:skipDeviceMatching:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:wantsMouseEvents:wantsAccessibilityEvents:
_removeHIDEventTapFilter:
_runMatchingServiceHandler:
sharedManager
sendHIDSystemEvent:senderID:
sendEvent:afterTap:useGSEvent:namedTaps:options:
_handleTestIOHIDEvent:
_processHIDEvent:taskPort:bundleId:
setFailedToProcessInTimeCallback:callback:
setEventTapPriority:priority:
_passivelyPeakAtHIDEventWithTarget:tapPair:sender:event:axEventRep:didHandle:
installEventTap:identifier:type:
installKeyboardEventTap:identifier:matchingServiceHandler:
removeEventTap:
runMatchingServiceHandlerForEventTap:
installationGSCallback
setInstallationGSCallback:
installationHIDCallback
setInstallationHIDCallback:
installationEventRepPost
setInstallationEventRepPost:
_eventTaps
_addedEventTapPairs
_removedEventTapIdentifiers
_isEnumeratingEventTaps
_shouldReorderEventTaps
_installationGSCallback
_installationHIDCallback
_eventTapLock
_ioSystemPostBackClient
_installationEventRepPost
T@?,C,N,V_installationGSCallback
T@?,C,N,V_installationHIDCallback
T@?,C,N,V_installationEventRepPost
representationWithHIDEvent:serviceClient:hidStreamIdentifier:
MIDIObject
MIDIDevice
MIDIEntity
MIDIEndpoint
setWithArray:
setAssertionQueue:
setDelegate:
_stopTrackingPoorMansAssertion:
initWithIdentifier:forReason:invalidationBlock:
_startTrackingPoorMansAssertion:
assertionQueue
assertions
hashTableWithOptions:
setAssertions:
delegate
assertionCoordinator:assertionsDidBecomeActive:
initWithIdentifier:delegate:
acquireAssertionWithReason:
_delegate
_identifier
_assertionQueue
_assertions
T@"<AXAssertionCoordinatorDelegate>",W,N,V_delegate
T@"NSString",&,N,V_identifier
T@"NSObject<OS_dispatch_queue>",&,N,V_assertionQueue
T@"NSHashTable",&,N,V_assertions
_axDictionaryQueue
_axIsWrappedPointer
nonretainedObjectValue
_accessibilityValueForKey:
_accessibilitySetValue:forKey:storageMode:
numberWithBool:
_accessibilitySetRetainedValue:forKey:
initWithInteger:
initWithUnsignedInteger:
valueWithNonretainedObject:
_axSetIsWrappedPointer:
_accessibilityBoolValueForKey:
_accessibilityIntegerValueForKey:
_accessibilityUnsignedIntegerValueForKey:
_accessibilitySetBoolValue:forKey:
_accessibilitySetIntegerValue:forKey:
_accessibilitySetUnsignedIntegerValue:forKey:
_accessibilityRemoveValueForKey:
_accessibilitySetAssignedValue:forKey:
pressed
encodeBool:forKey:
buttonIndex
encodeInteger:forKey:
location
valueWithPoint:
decodeBoolForKey:
setPressed:
decodeIntegerForKey:
setButtonIndex:
setLocation:
_pressed
_buttonIndex
_location
TB,N,V_pressed
Tq,N,V_buttonIndex
T{CGPoint=dd},N,V_location
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
recentEvents
_flushEventsIfNecessary
flushEventsTimer
afterDelay:processBlock:cancelBlock:
clientId
HIDTime
_elapsedTimeFrom:to:
addEvent:
isRedirectedEvent:
setRecentEvents:
setFlushEventsTimer:
_queue
_recentEvents
_flushEventsTimer
T@"NSMutableArray",&,N,V_recentEvents
T@"AXDispatchTimer",&,N,V_flushEventsTimer
flushEvents
setFlushEventsTimerDelay:
outputValueChangeForNewValue:oldValue:selectedTextRange:oldSelectedTextRange:shouldEchoDeletion:isSingleInsert:feedbackType:lastKeyboardKeyPress:
_outputValueChangeForNewValue:oldValue:isFirstResponderValid:selectedTextRange:oldSelectedTextRange:shouldEchoDeletion:optionalValueChangeType:derivedValueChangeType:didHitBorder:isBreakSpaceCharacter:isSingleInsert:selectionDeleted:feedbackType:textOperationOccurred:lastKeyboardKeyPress:isSingleCharacterInsertOrDelete:singleInsertDeleteAttString:singleInsertDeleteString:isSingleCharacterUpdate:wordRangeToFindMisspelled:pasteOperationSucceeded:shouldOutputSingleCharactersOnly:clientType:
outputValueChangeForNewValue:oldValue:isFirstResponderValid:selectedTextRange:oldSelectedTextRange:shouldEchoDeletion:optionalValueChangeType:derivedValueChangeType:didHitBorder:isBreakSpaceCharacter:isSingleInsert:selectionDeleted:feedbackType:textOperationOccurred:lastKeyboardKeyPress:isSingleCharacterInsertOrDelete:singleInsertDeleteAttString:singleInsertDeleteString:isSingleCharacterUpdate:wordRangeToFindMisspelled:pasteOperationSucceeded:clientType:
string
isAXAttributedString
attributesAtIndex:effectiveRange:
phoneNumberWithoutFormattingCharacters:
handleValueChangeForPhoneDeletionWithOldString:newString:
findLocationOfDifferenceInOldString:withNewString:
decomposedStringWithCanonicalMapping
rangeOfComposedCharacterSequenceAtIndex:
wordBreakSet
whitespaceCharacterSet
initWithCharacters:length:
attribute:atIndex:effectiveRange:
mutableCopy
setAttributes:
substringToIndex:
_handleApostropheIfNeeded:
_handleAttributedApostropheIfNeeded:
replaceString:
wordBreakCharacterSet
removeCharactersInString:
outputValueChangeForNewValue:oldValue:selectedTextRange:shouldEchoDeletion:isSingleInsert:feedbackType:lastKeyboardKeyPress:
outputValueChangeForNewValue:oldValue:selectedTextRange:shouldEchoDeletion:isSingleInsert:feedbackType:lastKeyboardKeyPress:shouldOutputSingleCharactersOnly:
initWithType:identifier:isAcquisition:
acquire
retries
setRetries:
_acquire
_retries
T@"NSString",R,N,V_type
T@"NSString",R,N,V_identifier
TB,R,N,V_acquire
TQ,N,V_retries
setAssertionWorkQueue:
_willClearServer
client
setPortDeathHandler:
sendSimpleMessage:enqueueError:
sendSimpleMessage:withError:
sendSimpleMessageWithObjectResult:
sendMessage:withError:
_sendMessage:error:
sendAsynchronousMessage:replyOnQueue:objectResultHandler:
ax_nonRedundantDescription
sendAsynchronousMessage:replyOnQueue:handler:
sendAsyncMessage:replyOnQueue:replyHandler:
assertionWorkBacklog
userInfo
assertionRetryTimer
_processAssertionBacklog
setAssertionWorkBacklog:
assertionWorkQueue
setAssertionRetryTimer:
_initializeAssertionBookkeeping
initWithServiceName:
shouldRegisterClientCallbackSourceOnMainRunloop
setShouldRegisterCallbackSourceOnMainRunloop:
setTimeout:
setClient:
isConnected
connectWithError:
serverIdentifier
setClientIdentifier:
_wasDisconnectedFromClient
stopServerWithError:
setServer:
_didConnectToClient
isRunning
clientCallbackPort
clientCallbackSource
initWithPort:serviceRunLoopSource:
startServerWithError:
_didConnectToServer
sendSimpleMessageWithResult:
sendMessage:
sendAsynchronousMessage:replyOnQueue:boolResultHandler:
acquireAssertionWithType:identifier:
relinquishAssertionWithType:identifier:
_connectServerIfNecessary
_ensureAssertionsHaveBeenProcessedWithCompletion:
setServerIdentifier:
setShouldRegisterClientCallbackSourceOnMainRunloop:
_shouldRegisterClientCallbackSourceOnMainRunloop
_server
_client
_serverIdentifier
_assertionWorkBacklog
_assertionRetryTimer
_assertionWorkQueue
T@"NSString",C,N,V_serverIdentifier
T@"NSMutableArray",&,N,V_assertionWorkBacklog
T@"AXDispatchTimer",&,N,V_assertionRetryTimer
T@"NSObject<OS_dispatch_queue>",&,N,V_assertionWorkQueue
T@"AXIPCClient",&,N,V_client
T@"AXIPCServer",&,N,V_server
TB,N,V_shouldRegisterClientCallbackSourceOnMainRunloop
UUID
UUIDString
removeObjectAtIndex:
assistiveTouchCustomGestures
decodeDoubleForKey:
setPointerX:
setPointerY:
setPointerZ:
setPointerAccelX:
setPointerAccelY:
setPointerAccelZ:
setIsPointerMove:
setPointerButtonMask:
setPointerButtonNumber:
setPointerButtonClickCount:
setPointerButtonPressure:
setPointerIsAbsolute:
pointerX
pointerY
pointerZ
pointerAccelX
pointerAccelY
pointerAccelZ
isPointerMove
pointerButtonMask
pointerButtonNumber
pointerButtonClickCount
pointerButtonPressure
pointerIsAbsolute
encodeDouble:forKey:
_isPointerMove
_pointerIsAbsolute
_pointerX
_pointerY
_pointerZ
_pointerAccelX
_pointerAccelY
_pointerAccelZ
_pointerButtonMask
_pointerButtonNumber
_pointerButtonClickCount
_pointerButtonPressure
Td,N,V_pointerX
Td,N,V_pointerY
Td,N,V_pointerZ
Td,N,V_pointerAccelX
Td,N,V_pointerAccelY
Td,N,V_pointerAccelZ
TB,N,V_isPointerMove
Td,N,V_pointerButtonMask
Td,N,V_pointerButtonNumber
Td,N,V_pointerButtonClickCount
Td,N,V_pointerButtonPressure
TB,N,V_pointerIsAbsolute
registerSiriViewServicePID:
numberWithInt:
registerAccessibilityUIServicePID:
registerHearingAidServerPID:
setInPreboardMode:
setInCheckerBoardMode:
_inPreBoardMode
_inCheckerBoardMode
_sessionIsLoginSession
disableBrightnessFilters
brightnessFiltersEnabled
blueLightStatusEnabled
restoreCachedBrightnessFilters
adaptationEnabled
supportsAdaptation
forceLoadGAXBundle
resetAccessibilityFeatures
colorFilterFromLastUpdate
backBoardServerInstanceIfExists
_shouldDispatchLocally
backboardServiceInstance
setSessionIsLoginSession:
registerAssistiveTouchPID:
dictionaryWithObject:forKey:
convertFrame:fromContextId:displayId:
convertFrame:toContextId:displayId:
convertPoint:fromContextId:displayId:
convertPoint:toContextId:displayId:
contextIdHosterForContextId:
contextIdForDisplayPoint:
postEvent:systemEvent:afterNamedTap:namedTaps:
userEventOccurred
setDisableSystemGestureRecognitionInEvents:
registerEventListener:
setAssistiveTouchPid:
accessibilityAssistiveTouchPid
setAccessibilityUIServerPid:
accessibilityUIServerPid
setFullKeyboardAccessDaemonPID:
accessibilityFullKeyboardAccessDaemonPid
setSiriViewServicePid:
hearingAidServerPid
setHearingAidServerPid:
zoomListenerRegistered
setLockScreenDimTimerEnabled:
setCapsLockLightOn:
setIsSpeakScreenHighlightVisible:
null
_springboardParametersForGuidedAccessAvailability
_sendRequestGuidedAccessSessionMessage:numberOfRetryAttempts:completion:
sendAsyncMessage:withReplyHandler:
bytes
numberWithInteger:
registerGestureConflictWithZoom:
adjustSystemZoom:
accessibilityAssistiveTouchPID
accessibilityFullKeyboardAccessDaemonPID
accessibilityUIServicePID
registerFullKeyboardAccessDaemonPID:
hearingAidServerPID
sessionIsLoginSessionWithResult:
invertColorsEnabled
setInvertColorsEnabled:
postEvent:afterNamedTap:includeTaps:
postEvent:systemEvent:
contextIdForPosition:
contextIdHostingContextId:
convertFrame:fromContextId:toContextId:
convertFrame:toContextId:
convertFrame:fromContextId:
convertPoint:fromContextId:
convertPoint:toContextId:
setHearingAidControlIsVisible:
setSwitchControlRendersDeviceUnusable:
setSwitchControlHasScreenSwitch:
accessibilityPreferenceAsMobile:
setAccessibilityPreferenceAsMobile:value:notification:
setZoomInitialFocusRect:fromContext:
zoomInitialFocusRectWithQueryingContext:
tripleClickHomeButtonPress
homeClickSwallowedForGuidedAccess
isGuidedAccessInWorkspace
guidedAccessEffectiveAppBundleIdentifier:
performGuidedAccessAutomationCommand:error:
guidedAccessAvailability
requestGuidedAccessSessionStartWithConfigurationDictionary:completion:
requestGuidedAccessSessionEndWithCompletion:
isGuidedAccessSelfLockedToApp:
isGuidedAccessUnmanagedSelfLocked
isRestrictedForAAC
guidedAccessIgnoredRegions
currentGuidedAccessModeAndSessionApp:
jetsamThirdPartyApps
loadGAXBundleForUnmanagedASAM
setDeviceOrientation:
_overrideGestureRecognition
_eventListeners
_zoomAttributeListeners
TB,D,N
TB,N
initWithType:identifier:
setAssertionType:
_notifyServerAssertionWasAcquired
_notifyServerAssertionWasRelinquished
initWithArray:
assertionType
_hasValidAssertionType
assertionWithType:identifier:
ensureAssertionsHaveBeenProcessedWithCompletion:
_assertionType
T@"NSString",&,N,V_assertionType
setHeldAssertionMap:
heldAssertionMap
enumerateKeysAndObjectsUsingBlock:
assertionWasAcquiredHandler
assertionWasReleasedHandler
allObjects
addHeldAssertionOfType:byClient:
removeHeldAssertionOfType:byClient:
clientsHoldingAssertionOfType:
setAssertionWasAcquiredHandler:
setAssertionWasReleasedHandler:
_assertionWasAcquiredHandler
_assertionWasReleasedHandler
_heldAssertionMap
T@"NSMutableDictionary",&,N,V_heldAssertionMap
T@?,C,N,V_assertionWasAcquiredHandler
T@?,C,N,V_assertionWasReleasedHandler
tokensToUpdateBlocks
fullKeyboardAccessCommandMapData
defaultCenter
mainQueue
addObserverForName:object:queue:usingBlock:
removeObserver:
commandWithStandardCommandIdentifier:
commands
allCategoriesForAvailableCommands:
setAvailableCommands:
archivedDataWithRootObject:requiringSecureCoding:error:
setFullKeyboardAccessCommandMapData:
setTokensToUpdateBlocks:
T@"FKAAvailableCommands",R,N
categories
commandMap
setCommandMap:
registerUpdateBlock:
unregisterUpdateBlockWithToken:
siriShortcutsDidChangeObserverToken
setSiriShortcutsDidChangeObserverToken:
forceTouchEnabledDidChangeObserverToken
setForceTouchEnabledDidChangeObserverToken:
_siriShortcutsDidChangeObserverToken
_forceTouchEnabledDidChangeObserverToken
_tokensToUpdateBlocks
T@"NSString",&,N,V_siriShortcutsDidChangeObserverToken
T@,&,N,V_forceTouchEnabledDidChangeObserverToken
T@"NSMutableDictionary",&,N,V_tokensToUpdateBlocks
T@"NSSet",R,N
T@"NSArray",R,N
T@"AXSSKeyboardCommandMap",&,N
arrayByAddingObject:
stringByReplacingOccurrencesOfString:withString:options:range:
_canUseIdleTimerServices
acquireAssertionToDisableIdleTimerWithReason:
initWithString:brailleString:
setWasDivided:
setObject:forVariant:
processString:brailleString:breakWords:withLanguage:atIndex:category:
axSafelyAddObjectsFromArray:
setString:
rangeOfString
indexSet
addIndexesInRange:
enumerateRangesUsingBlock:
numberWithFloat:
processStringsAndLanguages:brailleString:breakWords:withLanguage:atIndex:category:
addAttributesToAction:fromDictionary:
addEntriesFromDictionary:
axSafelyAddEntriesFromDictionary:
initWithMessage:completion:
message
setMessage:
completion
setCompletion:
_message
_completion
T@"AXIPCMessage",&,N,V_message
T@?,C,N,V_completion
serverClientRegistrationInvalidated:
port
initWithPort:identifier:
invalidationSource
_port
_invalidationSource
TI,R,N,V_port
T@"NSObject<OS_dispatch_source>",R,N,V_invalidationSource
T@"<AXIPCServerClientRegistrationDelegate>",W,N,V_delegate
initWithHandler:
initWithTarget:selector:async:
selector
async
_async
_handler
_selector
T@?,R,N,V_handler
T@,R,W,N,V_target
T:,R,N,V_selector
TB,R,N,V_async
setServiceName:
setHandlers:
setPerPidService:
setDelayedMessages:
initWithServiceName:perPidService:
serviceName
exceptionWithName:reason:userInfo:
_startServerThread
_handleErrorWithMessage:outError:
setRunning:
initWithInt:
handlers
removeHandlerForKey:
addPossibleRequiredEntitlement:forMessageWithKey:
setHandlerWithTarget:selector:async:forKey:
_registerContext:forKey:
setHandlerWithTarget:selector:forKey:
_addPossibleRequiredEntitlementsToMessageWithKey:first:vothers:
_clientIdentificationForAuditToken:
_applyCustomQueueSize
objectsPassingTest:
anyObject
isMainThread
perPidService
_handleClientInvalidation:
delayedMessages
_processValidatedMessage:completion:
_clientHasEntitlementWithPort:auditToken:message:completion:
_handleClientRegistration:
defaultHandler
errorWithDescription:
setServiceRunLoopSource:
setDefaultHandler:
clientInvalidationCallback
setClientInvalidationCallback:
setHandler:forKey:
setHandlerWithTarget:selector:forKey:possibleRequiredEntitlements:
setHandlerWithTarget:selector:async:forKey:possibleRequiredEntitlements:
removeAllHandlersForTarget:
removePossibleRequiredEntitlement:forMessageWithKey:
__slowpath__clientWithAuditToken:hasRequiredEntitlementFromSet:
setQueueSize:
_handleIncomingMessage:securityToken:auditToken:clientPort:completion:
machPort
_defaultHandler
_serverRunLoopSource
_serverPort
_connectedClients
_clientInvalidationHandler
_entitlements
_validSecurityTokens
_assignedServerPort
_customQueueSize
_running
_perPidService
_handlers
_delayedMessages
running
TB,N,GisRunning,V_running
T@"NSString",&,N,V_serviceName
T@"NSMutableDictionary",&,N,V_handlers
T@?,C,N
T@"NSMutableArray",&,N,V_delayedMessages
TB,N,V_perPidService
TI,R,N,V_serverPort
dataWithBytes:length:
_synchronizeDrawingAcrossProcessesOverPort:
setPostConnectionBlock:
initWithTargetAccessQueue:
setTimeoutTimer:
timeoutTimer
setDidTimeout:
_performTask
afterDelay:processWritingBlock:
postConnectionBlock
didTimeout
initWithConnectBlock:timeout:accessQueue:
performTask
_didTimeout
_postConnectionBlock
_timeoutTimer
T@?,C,N,V_postConnectionBlock
T@"AXAccessQueueTimer",&,N,V_timeoutTimer
TB,N,V_didTimeout
initialize
replyPort
registerOutstandingRequest:
replyMachPortSource
unregisterByPort:
replyQueue
replyHandler
_responseReceived:
lookupByPort:
initWithReplyPort:handlerQueue:handler:
registerAndListenForResponse
rawResponseReceived:
sendOnceRightDestroyed
initialSendAborted
_replyPort
_replyQueue
_replyHandler
_replyMachPortSource
T@"NSObject<OS_dispatch_queue>",R,N,V_replyQueue
TI,R,N,V_replyPort
T@?,R,N,V_replyHandler
T^{__CFRunLoopSource=},R,N,V_replyMachPortSource
weakObjectsPointerArray
addPointer:
setPostConnectionTasks:
initWithParentClass:description:appendUUIDToLabel:
setConnectionQueue:
_commonInit
compact
allClients
serverPort
clientIdentifier
_registerWithServer
shouldRegisterCallbackSourceOnMainRunloop
_sendRegistrationMessageWithRetries:
verifyConnectionExists
ax_errorWithDomain:description:
usesPerPidLookup
setConnected:
_handleErrorWithMessage:machError:outError:
_verifyConnectionWithError:
sendSimpleMessage:synchronizationPort:error:
_prepareToSendMessage:withError:prepSuccessHandler:
_createRegistrationWithReplyMachPort:forAsyncReplyOnQueue:responseHandler:
portDeathAccessQueue
mainAccessQueue
portDeathHandler
performAsynchronousWritingBlock:
connectionQueue
canWriteInCurrentExecutionThread
postConnectionTasks
_attemptToEstablishConnection
performSynchronousWritingBlock:
domain
code
errorWithDomain:code:userInfo:
initWithPort:
serviceMachPort
disconnectWithError:
_serverDied
establishConnectionWithTimeout:completion:
_descriptionForMachError:
setServerPort:
timeout
setUsesPerPidLookup:
setPid:
setPortDeathAccessQueue:
_serverPortLock
_assignedServerMachPort
_clientIdentifierLock
_portDeathHandler
_timeout
_clientIdentifier
_clientSource
_connectionAttempts
_outstandingAsyncRequests
_connected
_usesPerPidLookup
_pid
_postConnectionTasks
_connectionQueue
_portDeathAccessQueue
connected
TB,N,GisConnected,V_connected
T@"NSString",C,N,V_serviceName
T^{__CFMachPort=},N,V_serverPort
T@"NSMutableArray",&,N,V_postConnectionTasks
T@"AXAccessQueue",&,N,V_connectionQueue
TB,N,V_usesPerPidLookup
Ti,N,V_pid
TI,R,N
T@?,C,N,V_portDeathHandler
T@"AXAccessQueue",&,N,V_portDeathAccessQueue
Tf,N,V_timeout
T@"NSString",C,N,V_clientIdentifier
TI,R,N,VclientCallbackPort
T^{__CFRunLoopSource=},R,N,VclientCallbackSource
TB,N,VshouldRegisterCallbackSourceOnMainRunloop
_commonInitWithRunLoop:
getCFRunLoop
_existingDevicesForDevice:
informDelegate
minusSet:
deviceMonitorDidDetectDeviceEvent:
bluetoothKeyboardDevices
initWithMatchingDictionary:callbackRunLoop:
initWithMatchingMultiple:callbackRunLoop:
copyDevices
begin
didAddDevice:
didRemoveDevice:
_targetRunLoop
_hidManager
_state
_devices
_devicesLock
T@"<AXDeviceMonitorDelegate>",W,N,V_delegate
safeCategoryTargetClassName
entity
initWithMIDIEndpoint:entity:
manufacturer
model
receiveChannels
transmitChannels
isEmbedded
isBroadcast
isOffline
isPrivate
driverName
midiEndpoint
setMidiEndpoint:
setEntity:
_midiEndpoint
_entity
TI,N,V_midiEndpoint
T@"AXMIDIDeviceEntity",W,N,V_entity
T@"NSString",R,N
T@"NSNumber",R,N
_accessibilityIsSpeakThisTemporarilyDisabled
_accessibilitySetSpeakThisTemporarilyDisabled:
channel
setChannel:
note
setNote:
pressure
setPressure:
control
setControl:
controlValue
setControlValue:
program
setProgram:
pitchBend
setPitchBend:
numberWithUnsignedChar:
noteDescription
numberWithUnsignedShort:
ordinalChannel
noteValue
noteOctave
isDownEvent
isOmniChannel
_note
_pressure
_control
_controlValue
_program
_channel
_pitchBend
TS,N,V_channel
Tq,R,N
omniChannel
TB,R,N,GisOmniChannel
Tq,N,V_type
downEvent
TB,R,N,GisDownEvent
TC,N,V_note
TC,R,N
TC,N,V_pressure
TC,N,V_control
TC,N,V_controlValue
TC,N,V_program
TS,N,V_pitchBend
performAutomationTestingCommand:userInfo:timeout:completion:
lastSpokenPhrases
clearLastSpokenPhrases:
lastSpokenContents
lastSoundsPlayed
currentRotorName
lastScreenChange
currentFocusedElement
triggerGesture:
triggerCommand:
triggerCommand:withArgument:
isBrailleInputUIShowing
isHandwritingInputUIShowing
isBluetoothBrailleDisplayConnected
isScreenCurtainEnabled
TB,R,N,GisScreenCurtainEnabled
deviceID
supportsGeneralMIDI
supportsMMC
entities
numberWithLong:
sources
destinations
_entityForMidiEntity:addIfNeeded:
setDevice:
device:didRemoveEntity:
addMidiSource:
removeMidiSource:
addMidiDestination:
removeMidiDestination:
midiEntity
initWithMIDIEntity:device:
resetAndDetectEndpoints
device:didAddEntity:
device:entity:didAddSource:
device:entity:didRemoveSource:
device:entity:didAddDestination:
device:entity:didRemoveDestination:
entity:didAddSource:
entity:didRemoveSource:
entity:didAddDestination:
entity:didRemoveDestination:
initWithMIDIDevice:delegate:
fullDescription
supportsGeneralMMC
resetAndDetectEntities
addMidiEntity:
removeMidiEntity:
midiDevice
setMidiDevice:
setEntities:
_midiDevice
_supportsMMC
_entities
TI,N,V_midiDevice
T@"NSMutableSet",&,N,V_entities
T@"<AXMIDIDeviceProtocol>",W,N,V_delegate
T@"NSNumber",R,N,V_supportsMMC
setBundleHandlerMap:
setFrameworkHandlerMap:
setDylibHandlerMap:
setAppHandlerMap:
setAppExtensionHandlerMap:
setBinaryMonitorQueue:
allFrameworks
allBundles
bundlePath
axSafelyAddObject:
_handleLoadedImagePath:
_addHandler:withName:toMap:
pathExtension
binaryMonitorQueue
stringByDeletingLastPathComponent
_bundleNameAndType:
reverseObjectEnumerator
_loadImageIsFramework:
_frameworkNameForImage:
frameworkHandlerMap
_applyHandlerBlocks:handlerMap:
_loadImageIsBundle:
_bundleNameForImage:
bundleHandlerMap
_loadImageIsDylib:
_dylibNameForImage:
dylibHandlerMap
_loadImageIsAppExtension:
_appExtensionNameForImage:
appExtensionHandlerMap
_loadImageIsApp:
_appNameForImage:
appHandlerMap
evaluateExistingBinaries
addHandler:forBundleID:
addHandler:forBundleName:
addHandler:forFramework:
addHandler:forDylib:
addHandler:forAppExtension:
addHandler:forApp:
_bundleHandlerMap
_frameworkHandlerMap
_dylibHandlerMap
_appHandlerMap
_appExtensionHandlerMap
_binaryMonitorQueue
T@"NSMutableDictionary",&,N,V_bundleHandlerMap
T@"NSMutableDictionary",&,N,V_frameworkHandlerMap
T@"NSMutableDictionary",&,N,V_dylibHandlerMap
T@"NSMutableDictionary",&,N,V_appHandlerMap
T@"NSMutableDictionary",&,N,V_appExtensionHandlerMap
T@"NSObject<OS_dispatch_queue>",&,N,V_binaryMonitorQueue
stringWithCString:encoding:
setDateFormat:
dateFromString:
autoupdatingCurrentLocale
dateFormatFromTemplate:options:locale:
stringFromDate:
setTimeZone:
setZeroFormattingBehavior:
setUnitsStyle:
setAllowedUnits:
stringFromTimeInterval:
componentsSeparatedByString:
componentsJoinedByString:
localizedStringWithFormat:
setSecond:
second
setNanosecond:
stringFromDateComponents:
autoupdatingCurrentCalendar
date
components:fromDate:toDate:options:
hour
month
year
localizedStringFromDateComponents:unitsStyle:
currentCalendar
component:fromDate:
setByAddingObjectsFromSet:
secureUnarchiveData:withExpectedClass:otherAllowedClasses:
activeRestrictionIdentifiers
setNumberStyle:
stringFromNumber:
setUuid:
builtIn
uuid
textualContexts
appIdentifiers
punctuationGroup
voiceIdentifier
speechRate
volume
soundMuted
speechMuted
audioDucking
modifierKeys
brailleTable
brailleStatusCellGeneral
brailleStatusCellText
tableHeaders
tableRowAndColumn
speakEmojis
imageDescriptions
containerFeedback
numberFeedback
brailleOutput
brailleInput
brailleAutoAdvanceDuration
hints
setTextualContexts:
setAppIdentifiers:
setPunctuationGroup:
setVoiceIdentifier:
setSpeechRate:
setVolume:
setSoundMuted:
setSpeechMuted:
setAudioDucking:
setModifierKeys:
setBrailleStatusCellGeneral:
setBrailleStatusCellText:
setBrailleTable:
setSpeakEmojis:
setImageDescriptions:
setContainerFeedback:
setNumberFeedback:
setTableRowAndColumn:
setTableHeaders:
setBrailleOutput:
setBrailleInput:
setBrailleAutoAdvanceDuration:
setHints:
setBuiltIn:
identicalProperty:property2:
observerKeys
isIdenticalTo:
_builtIn
_name
_uuid
_textualContexts
_appIdentifiers
_punctuationGroup
_tableHeaders
_tableRowAndColumn
_speakEmojis
_containerFeedback
_imageDescriptions
_hints
_numberFeedback
_voiceIdentifier
_speechRate
_volume
_speechMuted
_soundMuted
_audioDucking
_modifierKeys
_brailleStatusCellGeneral
_brailleStatusCellText
_brailleTable
_brailleOutput
_brailleInput
_brailleAutoAdvanceDuration
T@"NSString",&,N,V_name
T@"NSUUID",&,N,V_uuid
T@"NSSet",&,N,V_textualContexts
T@"NSSet",&,N,V_appIdentifiers
T@"NSUUID",&,N,V_punctuationGroup
T@"NSNumber",&,N,V_tableHeaders
T@"NSNumber",&,N,V_tableRowAndColumn
T@"NSNumber",&,N,V_speakEmojis
T@"NSNumber",&,N,V_containerFeedback
T@"NSNumber",&,N,V_imageDescriptions
T@"NSNumber",&,N,V_hints
T@"NSNumber",&,N,V_numberFeedback
T@"NSString",&,N,V_voiceIdentifier
T@"NSNumber",&,N,V_speechRate
T@"NSNumber",&,N,V_volume
T@"NSNumber",&,N,V_speechMuted
T@"NSNumber",&,N,V_soundMuted
T@"NSNumber",&,N,V_audioDucking
T@"NSNumber",&,N,V_modifierKeys
T@"NSNumber",&,N,V_brailleStatusCellGeneral
T@"NSNumber",&,N,V_brailleStatusCellText
T@"NSString",&,N,V_brailleTable
T@"NSNumber",&,N,V_brailleOutput
T@"NSNumber",&,N,V_brailleInput
T@"NSNumber",&,N,V_brailleAutoAdvanceDuration
TB,N,V_builtIn
setValidationReportingServices:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
_resetState
shouldPerformValidationChecks
validationTargetName
setValidationTargetName:
numberOfValidationErrors
overrideProcessName
sendValidationSuccessForProcessName:
_printConsoleReport:isDelayed:
_clearState
setOverrideProcessName:
setShouldPerformValidationChecks:
setNumberOfValidationErrors:
setNumberOfValidationWarnings:
setForceDoNotReport:
setDebugBuild:
setNumberOfValidations:
setShouldLogToConsole:
setShouldCrashOnError:
setShouldReportToServer:
setConsoleErrorMessages:
setConsoleWarningMessages:
isDebugBuild
numberOfValidations
stringWithString:
consoleErrorMessages
numberOfValidationWarnings
consoleWarningMessages
client:validateClass:
sendValidateExceptionForClass:errorMessage:overrideProcessName:
client:validateClass:isKindOfClass:
sendValidateExceptionForClass:isKindOfClass:errorMessage:overrideProcessName:
client:validateClass:hasInstanceVariable:withType:
sendValidateExceptionForClass:hasInstanceVariable:errorMessage:overrideProcessName:
_iterateMethodsOfType:onClass:block:
sendValidateExceptionForClass:hasInstanceMethod:errorMessage:overrideProcessName:
sendValidateExceptionForClass:hasClassMethod:errorMessage:overrideProcessName:
_client:validateClass:hasClassMethod:withFullSignature:argList:
_client:validateClass:hasMethod:methodType:returnType:arguments:
client:validateClass:hasInstanceMethod:withFullSignature:argList:
client:validateClass:hasProperty:customGetter:customSetter:withType:
sendValidateExceptionForClass:hasProperty:errorMessage:overrideProcessName:
client:validateClass:conformsToProtocol:
sendValidateExceptionForClass:conformsToProtocol:errorMessage:overrideProcessName:
client:validateProtocol:conformsToProtocol:
sendValidateExceptionForProtocol:conformsToProtocol:errorMessage:overrideProcessName:
client:validateProtocol:hasMethod:isInstanceMethod:isRequired:
sendValidateExceptionForProtocol:hasMethod:errorMessage:overrideProcessName:
client:validateProtocol:hasOptionalInstanceMethod:
client:validateProtocol:hasRequiredInstanceMethod:
addObjectsFromArray:
_generateWarningsForMethodType:onClass:superclassMethods:numberOfSuperclassMethods:
_nameForMethod:
_generateWarningsForPrefixedMethodNames:client:methodType:methodName:className:
installSafeCategory:canInteractWithTargetClass:
_installSafeCategoryValidationMethod
axTrampolineForClass:
_accessibilityPerformValidations:
defaultLoader
codeItemForBundle:
associatedAccessibilityCodeItem
_initializeSafeCategoryFromValidationManager
_generateWarningsOnSafeCategoryClass:
sendExceptionForSafeCategoryOnWrongTarget:targetBundle:expectedBundle:overrideProcessName:
sendExceptionForInstallingSafeCategory:onTarget:overrideProcessName:
validationReportingServices
sendExceptionForSafeValueKey:onTarget:overrideProcessName:backtrace:
sendGenericReport:withTag:overrideProcessName:
sendValidateExceptionForProtocol:hasProperty:errorMessage:overrideProcessName:
sendFailedAssertionWithErrorMessage:overrideProcessName:
sendFailedTestCase:withTag:overrideProcessName:
performValidations:withPreValidationHandler:postValidationHandler:
installSafeCategories:afterDelay:validationTargetName:overrideProcessName:
validateClass:
validateClass:isKindOfClass:
validateClass:hasInstanceVariable:withType:
_client:validateClass:hasMethod:methodType:
validateClass:hasClassMethod:withFullSignature:
client:validateClass:hasClassMethod:withFullSignature:
client:validateClass:hasInstanceMethod:withFullSignature:
validateClass:hasInstanceMethod:withFullSignature:
validateClass:hasProperty:withType:
validateClass:hasProperty:customGetter:customSetter:withType:
client:validateClass:hasProperty:withType:
validateClass:conformsToProtocol:
validateProtocol:conformsToProtocol:
validateProtocol:hasMethod:isInstanceMethod:isRequired:
validateProtocol:hasOptionalInstanceMethod:
validateProtocol:hasRequiredInstanceMethod:
validateProtocol:hasOptionalClassMethod:
client:validateProtocol:hasOptionalClassMethod:
validateProtocol:hasRequiredClassMethod:
client:validateProtocol:hasRequiredClassMethod:
installSafeCategory:
shouldLogToConsole
shouldCrashOnError
shouldReportToServer
forceDoNotReport
_shouldLogToConsole
_shouldCrashOnError
_shouldReportToServer
_forceDoNotReport
_debugBuild
_shouldPerformValidationChecks
_numberOfValidationErrors
_validationTargetName
_overrideProcessName
_consoleErrorMessages
_validationReportingServices
_numberOfValidations
_numberOfValidationWarnings
_consoleWarningMessages
TB,N,V_shouldPerformValidationChecks
TB,N,V_shouldLogToConsole
TB,N,V_shouldCrashOnError
TB,N,V_shouldReportToServer
TQ,N,V_numberOfValidations
TQ,N,V_numberOfValidationErrors
T@"NSMutableArray",&,N,V_consoleErrorMessages
TQ,N,V_numberOfValidationWarnings
T@"NSMutableArray",&,N,V_consoleWarningMessages
T@"<AXValidationReportingServices>",&,N,V_validationReportingServices
TB,N,V_forceDoNotReport
T@"NSString",C,N,V_validationTargetName
T@"NSString",C,N,V_overrideProcessName
debugBuild
TB,N,GisDebugBuild,V_debugBuild
setPathIndex:
setPathIdentity:
setPathProximity:
setPathPressure:
setPathMajorRadius:
setPathLocation:
setPathWindowContextID:
setPathWindow:
pathIdentity
pathProximity
pathPressure
pathMajorRadius
pathLocation
pathWindowContextID
pathWindow
pathMajorRadiusTolerance
setPathMajorRadiusTolerance:
pathTwist
setPathTwist:
pathMinorRadius
setPathMinorRadius:
pathQuality
setPathQuality:
pathDensity
setPathDensity:
pathEventMask
setPathEventMask:
orbValue
setOrbValue:
setTransducerType:
altitude
setAltitude:
azimuth
setAzimuth:
barrelPressure
setBarrelPressure:
willUpdateMask
setWillUpdateMask:
didUpdateMask
setDidUpdateMask:
decodeFloatForKey:
decodeInt64ForKey:
encodeFloat:forKey:
representationWithPathInfo:
writeToPathInfo:
shouldSetTouchFlag
setShouldSetTouchFlag:
_pathIndex
_pathIdentity
_pathProximity
_shouldSetTouchFlag
_pathWindowContextID
_pathPressure
_pathMajorRadius
_pathMinorRadius
_pathMajorRadiusTolerance
_pathTwist
_pathQuality
_pathDensity
_pathEventMask
_orbValue
_transducerType
_altitude
_azimuth
_barrelPressure
_willUpdateMask
_didUpdateMask
_pathWindow
_pathLocation
T^v,N,V_pathWindow
TC,N,V_pathIndex
TC,N,V_pathIdentity
T{CGPoint=dd},N,V_pathLocation
TI,N,V_pathWindowContextID
TC,N,V_pathProximity
Tf,N,V_pathPressure
Tf,N,V_pathMajorRadius
Tf,N,V_pathMinorRadius
Tf,N,V_pathMajorRadiusTolerance
Tf,N,V_pathTwist
Tf,N,V_pathQuality
Tf,N,V_pathDensity
TI,N,V_pathEventMask
Tf,N,V_orbValue
TI,N,V_transducerType
Tf,N,V_altitude
Tf,N,V_azimuth
Tf,N,V_barrelPressure
TI,N,V_willUpdateMask
TI,N,V_didUpdateMask
TB,N,V_shouldSetTouchFlag
firstPath
T@"AXEventPathInfoRepresentation",R,N
axCGPointValue
axCGSizeValue
axCGRectValue
axValueWithCGPoint:
axValueWithCGSize:
axValueWithCGRect:
initWithImageMonitor:
_platformKeyForPlatform:
_loadAccessibilityCodeItems
shouldLoadAccessibilityCodeItemBlock
didLoadAccessibilityCodeItemBlock
loadEventWillOccurBlock
loadEventDidOccurBlock
isTrackingLoadedCodeItems
_updateAccessibilityCodeItemDefinitionsIfNeeded
addImageMonitorObserver:
removeImageMonitorObserver:
trackingMode
member:
setIsLoaded:
isAccessibilityBundle
_associateAccessibilityCodeItemWithLoadedCodeItem:
setWithCapacity:
loadedImagePaths
initWithPath:isDyldOpened:
enumerateLoadedImagePaths:
_queue_loadedCodeItemsUsingTrackedItemsIfAvailable:
_consumeBeginTrackingCompletionHandlerIfNeeded
shouldAutoloadAccessibilityCodeItems
_accessibilityBundleMapURLs
_createAccessibilityCodeItemsFromBundleMapURLs:
_reconcileTrackedCodeItemsWithAccessibilityCodeItemDefinitions
_initializeCodeItemMappings
platformToTarget
targetType
stringValue
setPlatformToTarget:
setTargetType:
loadOrder
setLoadOrder:
ax_replaceWithMatchingObject:updatingWithBlock:
_associateAccessibilityCodeItemsWithAllTrackedCodeItems
_accessibilityCodeItemMatchingName:type:path:
setAssociatedAccessibilityCodeItem:
setTargetCodeItem:
fileURLWithPathComponents:
decodedCodeItemsFromURL:decodingErrors:
setWithSet:
intersectSet:
addPlatformToTargetEntries:
unionSet:
_validLoadEventWillOccurBlock
_validShouldLoadAccessibilityCodeItemBlock
ax_filteredSetUsingBlock:
ax_flatMappedSetUsingBlock:
orderedSetWithSet:
_validDidLoadAccessibilityCodeItemBlock
loadWithStrategy:onQueue:completion:
_validLoadEventDidOccurBlock
loadedAtTimestamp
_addTrackedCodeItem:
_scheduleDyldImageActivityTimerWithDelay:
loadedCodeItemsUsingTrackedItemsIfAvailable:
imageMonitor:didAddImage:
iterateInitialImageListForImageMonitor:
isInitialLoadFinished
beginTrackingLoadedCodeItemsWithMode:completion:targetQueue:
endTrackingLoadedCodeItemsWithCompletion:targetQueue:
loadedCodeItemPathsUsingTrackedItemsIfAvailable:
setAccessibilityCodeItemsNeedLoaded
_cancelDyldImageActivityTimer
prewarmAccessibilityCodeItemDefinitionsWithCompletion:targetQueue:
queryAccessibilityBundleIsLoadedWithName:completion:
setTrackingMode:
setShouldAutoloadAccessibilityCodeItems:
setShouldLoadAccessibilityCodeItemBlock:
setDidLoadAccessibilityCodeItemBlock:
setLoadEventWillOccurBlock:
setLoadEventDidOccurBlock:
_imageMonitor
_loadAccessibilityCodeItemsSource
_dyldImageActivityCoalesceTimer
_monitoredLoadTriggeringImageCountSinceLastLoad
_trackedCodeItems
_accessibilityCodeItems
_codeItemsByNameType
_beginTrackingCompletion
_beginTrackingCompletionQueue
_initialLoadHasOccurred
_initialLoadHasFinished
_currentPlatformKey
_shouldAutoloadAccessibilityCodeItems
_trackingMode
_shouldLoadAccessibilityCodeItemBlock
_didLoadAccessibilityCodeItemBlock
_loadEventWillOccurBlock
_loadEventDidOccurBlock
Tq,N,V_trackingMode
TB,N,V_shouldAutoloadAccessibilityCodeItems
T@?,C,N,V_shouldLoadAccessibilityCodeItemBlock
T@?,C,N,V_didLoadAccessibilityCodeItemBlock
T@?,C,N,V_loadEventWillOccurBlock
T@?,C,N,V_loadEventDidOccurBlock
debugCodeTypeDescription
targetCodeItem
_stateDescForItem:
recomputedCodeItemsForAllFrameworks
recomputedCodeItemsForLoadedAccessibilityBundles
accessibilityCodeItemDefinitions
logLoaderState
trackedCodeItems
rogueAccessibilityCodeItems
setX:
setY:
setZ:
TI,N,V_type
Tf,N,V_x
Tf,N,V_y
Tf,N,V_z
initWithCaller:targetClass:
methodDoesNotExistSentinal
methodSignatureForSelector:
caller
targetClass
methodSignature
methodNotFoundSentinal
warnAboutUnknownSelectors
_findIMPForSelector:
invokeUsingIMP:
callerIsClass
trampolineWithCaller:targetClass:
forwardInvocation:
setCaller:
setTargetClass:
setWarnAboutUnknownSelectors:
_warnAboutUnknownSelectors
_caller
_targetClass
T@,W,N,V_caller
T#,W,N,V_targetClass
TB,N,V_warnAboutUnknownSelectors
axSuperTrampoline
currentSharedInstance
setPath:
_path
T^{CGPath=},N,V_path
raise:format:arguments:
ignoreAXAsserts
sleepForTimeInterval:
outputs
portType
owningPortUID
category
setCategory:withOptions:error:
currentRoute
audioFormats
updateTestingChannels
enableMultiroute
channels
disableMultiroute
channelWithChannel:
defaultPort
channelsForPort:
compare:
_audioHardwareChannelLayout
_savedIdForRouteDescription:
channelNumber
_handleSurroundSoundDefaults:returnedChannels:port:source:
channelLabel
_setAudioHardwareChannelLayout:
channelsAreAirplay:route:
channelsAreWiredHeadphones:
setDefaultPortChannels:
setDefaultRouteDescription:
defaultRouteDescription
defaultPortChannels
setDefaultPort:
isDolbyAtmosConfigured
savedChannelsForOutput:forSource:
setSavedChannels:forOutput:forSource:
setLastUtteranceSubstringRange:
setLastSpokenSubstringRange:
setSpeakingContext:
setAdditionalContentToProcess:
_respeakUtteranceIfNeeded
quickSpeakSpeakingRate
selectedContent
content
setSelectedContent:
stringByReplacingFatWidthCharactersWithBasicCharacters:
initWithContent:
tagContent
_canSpeakTaggedContent:
isProcessingContentForSpeech
tags
additionalContentToProcess
appendLanguageTaggedContent:
speechSequenceItems
_getLangCodeForItem:
dialectForSystemLanguage
specificLanguageID
lastUtteranceLanguageCode
speechVoiceIdentifierForLanguage:source:exists:
setSupportsAccurateWordCallbacks:
setSkipLuthorRules:
startSpeakingWithPreferredLanguage:delayBeforeStart:error:
setCurrentLanguageCode:
setPreferredLanguageWasSpecified:
primaryUnambiguousDialect
primaryAmbiguousDialect
speechSynthesizer
setSpeechSynthesizer:
setIsInternalSynth:
setUsesApplicationAudioSession:
supportsAccurateWordCallbacks
skipLuthorRules
_updateAudioSessionCategory
setUserPreferredLangID:
_startSpeakingSequence
speakingContent
isSpeaking
pauseSpeakingAtBoundary:
_successWithCode:error:
lastUtterance
_clearAllContentState
setLastUtterance:
stopSpeakingAtBoundary:
resumeSpeakingAfterDelay:error:
shouldSpeakNextItemOnResume
setShouldSpeakNextItemOnResume:
_speakNextItemInSequence
oratorDidResumeSpeaking:
continueSpeaking
_useLanguageSpecificSpeakingRate
quickSpeakSpeakingRateForLanguage:
_changeSpeakingSpeed:usingLanugageSpecificRate:
currentSpeechRateForAdjustment
_skipByUnit:boundary:
stringByAppendingPathComponent:
speechUtteranceWithString:
setVoice:
voiceWithLanguage:
systemLanguageID
audioSession
setRate:
speakUtterance:
setSpeakingContent:
setSpeakingContentTokenRanges:
setSpeechSequenceItems:
_updateSequenceForSpellOutBehavior
spellOutContent
range
setRange:
preferredLanguageWasSpecified
userPreferredLangID
canBeSpokenByLanguage:
dialect
wasPredicted
_processAdditionalContentInPreparationForSpeech
oratorShouldFetchNextElements:shouldScrollOpaqueProviderIfNecessary:
oratorDidFinishSpeaking:
currentLanguageCode
createdFromNewline
contentSubstring
newlineCharacterSet
setUseMonarchStyleSpeechRate:
setProcessEmoticons:
setLastUtteranceLanguageCode:
setLastUtteranceLanguageTag:
rate
oratorDidChangeSpeakingRate:
setQuickSpeakSpeakingRate:forLanguage:
setQuickSpeakSpeakingRate:
lastSpokenSubstringRange
lastUtteranceLanguageTag
lastUtteranceSubstringRange
speakingContentTokenRanges
enumerateObjectsWithOptions:usingBlock:
numberOfTokensToSkip
_speechSequenceItemsStartingAtContentLocation:
_tokenizeContentIfNeeded
_currentTokenIndex:
_speakNextTokenFromCurrentTokenIndex:forward:boundary:
lastObject
valueWithRange:
setNumberOfTokensToSkip:
setAudioSessionInactiveTimeout:
setIsProcessingContentForSpeech:
speakingContext
setSetActiveOptions:
setAudioSessionCategory:
setAudioSessionCategoryOptions:
ambiguousLangMaps
unambiguousLangMaps
oratorDidPauseSpeaking:
oratorDidStartSpeaking:
oratorDidCancelSpeaking:
orator:willSpeakRange:ofContent:
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:didCancelSpeechUtterance:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
setContent:
addAdditionalContentToSpeechQueue:
currentVoiceIdentifier
startSpeakingWithPreferredLanguage:error:
pauseSpeaking:
stopSpeaking:
resumeSpeaking:
setSpeakingRate:
speakFaster
speakSlower
fastForwardWithBoundary:
rewindWithBoundary:
speakStatusWithLanguage:rate:
contentIsSpeakable
canResumeWithContent:
clearSelectedContent
setSpellOutContent:
audioSessionInactiveTimeout
_statusUtterance
_contentIsSpeakable
_audioSessionTimer
_spellOutContent
_supportsAccurateWordCallbacks
_skipLuthorRules
_shouldSpeakNextItemOnResume
_preferredLanguageWasSpecified
_isProcessingContentForSpeech
_speakingContext
_selectedContent
_audioSessionInactiveTimeout
_speakingContent
_speakingContentTokenRanges
_numberOfTokensToSkip
_speechSynthesizer
_speechSequenceItems
_lastUtteranceLanguageCode
_lastUtterance
_lastUtteranceLanguageTag
_currentLanguageCode
_additionalContentToProcess
_lastSpokenSubstringRange
_lastUtteranceSubstringRange
T@"AXLanguageTaggedContent",&,N,V_selectedContent
T@"AXLanguageTaggedContent",&,N,V_speakingContent
T@"NSArray",&,N,V_speakingContentTokenRanges
TQ,N,V_numberOfTokensToSkip
T@"AVSpeechSynthesizer",&,N,V_speechSynthesizer
T@"NSMutableArray",&,N,V_speechSequenceItems
T@"NSString",&,N,V_lastUtteranceLanguageCode
T{_NSRange=QQ},N,V_lastUtteranceSubstringRange
T{_NSRange=QQ},N,V_lastSpokenSubstringRange
T@"AVSpeechUtterance",&,N,V_lastUtterance
T@"AXLanguageTag",&,N,V_lastUtteranceLanguageTag
TB,N,V_shouldSpeakNextItemOnResume
T@"NSString",&,N,V_currentLanguageCode
TB,N,V_preferredLanguageWasSpecified
TB,N,V_isProcessingContentForSpeech
T@"NSMutableArray",&,N,V_additionalContentToProcess
T@"<AXOratorDelegate>",W,N,V_delegate
T@"NSString",C,N
Tq,N,V_speakingContext
TB,N,V_spellOutContent
TB,N,V_supportsAccurateWordCallbacks
TB,N,V_skipLuthorRules
Td,N,V_audioSessionInactiveTimeout
setBundleIdentifier:
setLayoutRole:
isLayoutPrimary
isLayoutFullscreenModal
layoutRole
appWithPID:bundleID:
_bundleIdentifier
_layoutRole
T@"NSString",&,N,V_bundleIdentifier
Tq,N,V_layoutRole
setDirectionPadUp:
setDirectionPadDown:
setDirectionPadLeft:
setDirectionPadRight:
setFaceButtonA:
setFaceButtonB:
setFaceButtonX:
setFaceButtonY:
setShoulderButtonL1:
setShoulderButtonL2:
setShoulderButtonR1:
setShoulderButtonR2:
setLeftJoystickX:
setLeftJoystickY:
setRightJoystickX:
setRightJoystickY:
setLeftJoystickButton:
setRightJoystickButton:
setMenuButton:
setViewButton:
setHomeButton:
axGameControllerKeyCodeForEvent:
axGameControllerInfoRepresentationFromEvent:
contactlessInterfaceCanBePresentedFromSource:
sharedPreferences
assistantIsEnabled
TB,N,S_axSetIsWrappedPointer:
setNonRetainedObject:
initWithObject:
nonRetainedObject
_nonRetainedObject
T@,W,N,V_nonRetainedObject
longValue
initWithDouble:
valueWithRect:
localizedStringForKey:value:table:
arrayWithObject:
axMapObjectsUsingBlock:
URLForResource:withExtension:subdirectory:localization:
dictionaryWithContentsOfURL:
allKeys
setObject:forIndex:
verbosenessDictionaryForLevel:
punctuationDictionaryForLevel:
objectForIndex:
getCharacters:range:
stringWithCharacters:length:
defaultCStringEncoding
initWithCString:encoding:
weakObjectsHashTable
_dyldDidAddImage:
queue
_imageMonitorObservers
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
_descriptionForDistance:
_visibilityDescriptionForObjectFrame:viewBounds:
setUnitStyle:
setUnitOptions:
numberFormatter
setMaximumFractionDigits:
meters
initWithDoubleValue:unit:
stringFromMeasurement:
_valueForPercentageFromRawValue:
descriptionForDistance:objectFrame:viewBounds:
setWestern:
setAmbiguous:
setRtl:
setGeneralLanguageID:
setAlternateLanguageIDs:
setDialects:
setAssociatedAmbiguousLanguages:
generalLanguageID
dialects
setValue:forKey:
locale
setUserPreferredDialect:
basicDescription
alternateLanguageIDs
isWestern
isAmbiguous
userPreferredDialect
userLocale
userLocaleDialect
initWithLanguageID:isWestern:isAmbiguous:isRTL:dialects:alternateLanguageIDs:associatedAmbiguousLanguages:
defaultDialect
dialectWithLocaleIdentifier:
associatedAmbiguousLanguages
isRTL
_western
_ambiguous
_rtl
_dialects
_generalLanguageID
_userPreferredDialect
_alternateLanguageIDs
_associatedAmbiguousLanguages
western
TB,N,GisWestern,V_western
TB,N,GisRTL,V_rtl
ambiguous
TB,N,GisAmbiguous,V_ambiguous
T@"NSString",C,N,V_generalLanguageID
T@"NSArray",&,N,V_alternateLanguageIDs
T@"NSArray",&,N,V_dialects
T@"NSArray",&,N,V_associatedAmbiguousLanguages
T@"AXDialectMap",R,N
T@"AXDialectMap",R,N,VuserLocaleDialect
T@"AXDialectMap",W,N,V_userPreferredDialect
switchWithAction:name:source:type:
setASwitch:
_filterEvents:
_isSwitchWithSource:keyCode:buttonNumber:ATVRemoteButtonUsage:midiEvent:
assistiveTouchSwitches
source
keyCode
buttonNumber
midiEvent
switchRegistrarShouldFilterEvents:
switchRegistrarShouldProcessKeyboardKeyEvent:
addLongPressSwitch
_isKeyboardSwitchWithKeyCode:longPress:
switchRegistrarKeyboardKeyAlreadyInUseForSwitch:
aSwitch
setKeyCode:
setSource:
switchRegistrar:didUpdateSwitch:
switchRegistrarShouldProcessGamepadEvent:
_isGamepadSwitchWithKeyCode:longPress:
switchRegistrarGamepadSourceAlreadyInUseForSwitch:
switchRegistrarShouldProcessMIDIEvent:
_isMIDISwitchWithMidiEvent:
switchRegistrarMIDISourceAlreadyInUseForSwitch:
setMidiEvent:
_isATVRemoteButtonSwitchWithUsage:longPress:
switchRegistrarMFIButtonAlreadyInUseForSwitch:
setButtonNumber:
switchRegistrarShouldProcessMFIButtonEvent:
_isMFISwitchWithButtonNumber:longPress:
device
eventSystemClient
manager
setEventSystemClient:
_mfiMatching
setManager:
_handleMIDIEvent:device:entity:source:
initWithIdentifier:eventHandler:
setMidiManager:
beginFilteringEvents
endFilteringEvents
isSwitchWithName:
firstAvailableName
_handleApplicationDidBecomeActive:
_handleApplicationWillResignActive:
_handleKeyboardKeyDownEvent:
_handleGamepadButtonPressedEvent:
_handleATVRemoteButtonDownEvent:
_handleMFIButtonDownValue:
_keyboardMatching
_atvRemoteMatching
_gamepadMatching
setAddLongPressSwitch:
midiManager
_addLongPressSwitch
_aSwitch
_device
_eventSystemClient
_manager
_midiManager
T@"AXSwitch",&,N,V_aSwitch
T^{__IOHIDDevice=},&,N,V_device
T^{__IOHIDEventSystemClient=},&,N,V_eventSystemClient
T^{__IOHIDManager=},&,N,V_manager
T@"AXMIDIManager",&,N,V_midiManager
T@"<AXSwitchRegistrarDelegate>",W,N,V_delegate
TB,N,V_addLongPressSwitch
keyInfo
unmodifiedInput
modifierState
keyChordWithKeys:
keys
keyChordByUpdatingModifiersFromEvent:
keyChordWithEvent:
setAction:
setLongPressAction:
setGesture:
setLongPressGesture:
setHoldPoint:
setOptional:
initWithUUIDString:
setSwitchUUID:
setSwitchOriginalAction:
dictionaryWithCapacity:
action
longPressAction
gesture
holdPoint
longPressGesture
switchUUID
isOptional
switchOriginalAction
recipeMappingWithDictionaryRepresentation:
dictionaryRepresentation
_optional
_action
_longPressAction
_gesture
_longPressGesture
_switchUUID
_switchOriginalAction
_holdPoint
T@"NSString",C,N,V_action
T@"NSString",C,N,V_longPressAction
T@"AXReplayableGesture",&,N,V_gesture
T@"AXReplayableGesture",&,N,V_longPressGesture
T{CGPoint=dd},N,V_holdPoint
optional
TB,N,GisOptional,V_optional
T@"NSUUID",C,N,V_switchUUID
Tq,N,V_switchOriginalAction
setUnlocalizedName:
setMappings:
setMenuIconIdentifier:
unlocalizedName
mappings
menuIconIdentifier
recipeWithDictionaryRepresentation:
shouldContinueScanning
_mappings
_unlocalizedName
_menuIconIdentifier
T@"NSArray",&,N,V_mappings
Td,N,V_timeout
T@"NSString",&,N,V_unlocalizedName
T@"NSString",C,N,V_menuIconIdentifier
setLocale:
setVoiceName:
setSpeakableCharacters:
setSecondaryLanguageRange:
setSpecificLanguageID:
langMap
voiceName
langManager
languageCode
displayNameForKey:value:
capitalizedStringWithLocale:
componentsFromLocaleIdentifier:
nonlocalizedNameForLanguage:
secondaryLanguageRange
canSpeakCharacter:allowTransliteration:
speakableCharacters
speakingRequiresTransliteration
_transliteratedSpeechCharacters
longCharacterIsMember:
canSpeakString:allowsTransliteration:
isCharacterCommon:
languageIdentifier
_languageIsKorean
_stringByTransliterationHanjaToHangul:
_hanjaCharacterSet
pathForResource:ofType:
dictionaryWithContentsOfFile:
_hanjaToHangulMap
stringByReplacingCharactersInRange:withString:
handleFailureInMethod:object:file:lineNumber:description:
initWithLocale:voiceName:specificLanguageID:speakableCharacters:secondaryLanguageRange:
regionID
languageNameInCurrentLocale
languageNameInNativeLocale
languageNameAndLocaleInCurrentLocale
languageNameAndLocaleInNativeLocale
isDialectSecondaryForCharacter:
canSpeakCharacter:
canSpeakLongCharacter:
canSpeakString:
transliteratedStringForString:
setLangMap:
_langMap
_voiceName
_locale
_specificLanguageID
_speakableCharacters
_secondaryLanguageRange
T@"AXLangMap",W,N,V_langMap
T@"NSLocale",&,N,V_locale
T@"NSString",C,N,V_voiceName
T@"NSCharacterSet",&,N,V_speakableCharacters
T@"NSString",C,N,V_specificLanguageID
T@"AXLanguageManager",R,N
T@"NSCharacterSet",&,N,V_secondaryLanguageRange
dataWithLength:
mutableBytes
localizedStringForLanguage:context:
arrayWithContentsOfFile:
stringByReplacingEmojiCharactersWithEmojiDescriptions:stringForPauses:language:rangeReplacements:appendEmojiSuffix:
characterSetWithRange:
setUserLocale:
_handleUserLocaleDidChange:
addObserver:selector:name:object:
formUnionWithCharacterSet:
controlCharacterSet
setCommonCharacters:
dialectForCurrentLocale
dialectForCurrentRegion
_loadLangMaps
updateCachedDialects
outputLanguageIdentifierForLanguage:
langMaps
dialectsThatCanSpeakCharacter:overridePreferredLanguages:allowTransliteration:
dialectsThatCanSpeak:dialectIsSecondary:overridePreferredLanguages:
dialectsThatCanSpeakString:overridePreferredLanguages:
preferredLanguageIDsFromUserSelectedKeyboards
commonCharacters
rangeOfCharacterFromSet:options:range:
setDialectForSystemLanguage:
setDialectForCurrentLocale:
setDialectForCurrentRegion:
descriptionOfWord:forLanguage:
addCharactersInRange:
initWithLocaleIdentifier:
characterSetForRanges:
set_unitTest_didUpdateForLocaleChange:
_unitTest_didUpdateForLocaleChange
voiceOverSupportedInCurrentLanguage
commonPunctuationCharacters
doNotTranslateWords
stringByReplacingEmojiCharactersWithEmojiDescriptions:
nameForAlternativeVoiceIdentifier:
dialectForAlternativeVoiceIdentifier:
dialectForUserLocale
dialectsThatCanSpeakCharacter:
dialectsThatCanSpeakCharacter:overridePreferredLanguages:
dialectsThatCanSpeakString:
dialectThatCanSpeakCharacter:
ambiguousDialectsFromUserKeyboardPreferences
isStringComposedByCommonCharacters:
didUpdateForLocaleChange
setLangMaps:
_dialectForSystemLanguage
_dialectForCurrentLocale
_dialectForCurrentRegion
_languageFallbackLock
_languageFallbacks
__unitTest_didUpdateForLocaleChange
_langMaps
_commonCharacters
_userLocale
T@"NSArray",&,N,V_langMaps
T@"NSLocale",C,N,V_userLocale
T@"NSCharacterSet",&,N,V_commonCharacters
T@"AXDialectMap",W,N
TB,N,V__unitTest_didUpdateForLocaleChange
T@"AXDialectMap",R,W,N
displayNameForLanguage:
displayNameForLanguage:displayLanguage:
availableSystemLanguages
axLanguageCode
axIsRegionalLanguageCode
contentsOfDirectoryAtPath:error:
setWasPredicted:
addAmbiguousDialect:
addUnambiguousDialect:
ambiguousDialects
unambiguousDialects
preferredUnambiguousDialect
preferredAmbiguousDialect
setUnambiguousDialects:
setAmbiguousDialects:
predictedSecondaryDialects
setPredictedSecondaryDialects:
unionOrderedSet:
canBeSpokenByDialect:
allocWithZone:
mutableCopyWithZone:
tagWithDialects:range:content:predictedByTagger:
hasAmbigiousDialects
addAmbiguousDialects:
addPredictedSecondaryDialects:
setCreatedFromNewline:
_wasPredicted
_createdFromNewline
_content
_unambiguousDialects
_ambiguousDialects
_predictedSecondaryDialects
_range
T{_NSRange=QQ},N,V_range
T@"NSString",W,N,V_content
T@"NSMutableOrderedSet",&,N,V_unambiguousDialects
T@"NSMutableOrderedSet",&,N,V_ambiguousDialects
T@"NSMutableOrderedSet",&,N,V_predictedSecondaryDialects
T@"NSString",R,W,N
TB,N,V_wasPredicted
TB,N,V_createdFromNewline
setContentString:
contentString
unpredictedAmbiguousLangMaps
predictedSecondaryLangMaps
currentDialects
setCurrentDialects:
isTagged
setTagged:
_allLangIDs
dataDetectorWithTypes:error:
shortMonthSymbols
shortWeekdaySymbols
matchesInString:options:range:
setShorthandDateMatches:
shorthandDateMatches
resultType
nextShorthandDateIndex
setNextShorthandDateIndex:
_addTag
_isNamedEntity:
_addLanguageTagForDateIfNecessary
langIDforLangCode:
_languageHintsEvenlyDistributedWithProbability:excludingHints:
orderedSet
langCodeForlangId:
_overrideLanguageDetection:
setTags:
_searchForShorthandDates
_manuallyProcessContentWithRange:
_addLanguageTagForCurrentChunk
significantAmbiguousLangMapsForUserKeyboards
_isStringCombinationOfCommonAndEmoji:
setUnpredictedAmbiguousLangMaps:
setPredictedSecondaryLangMaps:
enumerateUnpredictedTags:
enumeratePredictedTags:
langMapIsSignificant:
significantAmbiguousLangMaps
hasOnlyWesternLangMaps
hasOnlyNonWesternLangMaps
updateTagsForLocalePrefChange
_currentDialects
_currentChunk
_predictedByTagger
_nlTagger
_namedEntityTagger
_tagged
_tags
_unpredictedAmbiguousLangMaps
_userPreferredLangID
_predictedSecondaryLangMaps
_contentString
_shorthandDateMatches
_nextShorthandDateIndex
T@"NSMutableString",&,N,V_contentString
tagged
TB,N,GisTagged,V_tagged
T@"NSMutableArray",&,N,V_tags
T@"NSMutableOrderedSet",&,N,V_unpredictedAmbiguousLangMaps
T@"NSMutableOrderedSet",&,N,V_predictedSecondaryLangMaps
T@"NSArray",&,N,V_currentDialects
T@"NSArray",&,N,V_shorthandDateMatches
TQ,N,V_nextShorthandDateIndex
T@"NSString",C,N,V_userPreferredLangID
isCancelled
setFinished:
setActive:
performSelector:withObject:afterDelay:
setBlock:
runAfterDelay:
block
setCancel:
isFinished
isActive
finished
active
_block
T@?,C,N,V_block
TB,N,GisCancelled,Vcancel
TB,N,GisFinished,Vfinished
TB,N,GisActive,Vactive
task
automaticallyCancelPendingBlockUponSchedulingNewBlock
setTask:
_runAfterDelay:
performSelector:onThread:withObject:waitUntilDone:
isPending
TB,R,N,GisActive
pending
TB,R,N,GisPending
initWithThread:
_thread
_cancelBlock
_automaticallyCancelPendingBlockUponSchedulingNewBlock
_task
T@"AXThreadTimerTask",&,N,V_task
cancelled
TB,R,N,GisCancelled
TB,N,V_automaticallyCancelPendingBlockUponSchedulingNewBlock
setUsagePage:
setKeyDown:
setUnmodifiedInput:
setModifiedInput:
setShiftModifiedInput:
setBackupUnmodifiedInput:
setBackupModifiedInput:
setBackupShiftModifiedInput:
setModifierState:
setGsModifierState:
setAlternativeKeyCode:
shiftModifiedInput
gsModifierState
modifiedInput
usagePage
alternativeKeyCode
keyDown
backupUnmodifiedInput
backupShiftModifiedInput
backupModifiedInput
_getUIKitKeyboardRef
_getUSUIKitKeyboardRef
_getIOHIDKeyboardTypeForGSKeyboardType:
sharedInputModeController
hardwareInputMode
automaticHardwareLayout
prepareForKeycodeTranslation
translateStringToKeycode
translateKeycode
_keyDown
_keyCode
_alternativeKeyCode
_usagePage
_modifierState
_gsModifierState
_unmodifiedInput
_modifiedInput
_shiftModifiedInput
_backupUnmodifiedInput
_backupModifiedInput
_backupShiftModifiedInput
TS,N,V_keyCode
TS,N,V_alternativeKeyCode
TI,N,V_usagePage
TB,N,V_keyDown
T@"NSString",C,N,V_unmodifiedInput
T@"NSString",C,N,V_modifiedInput
T@"NSString",C,N,V_shiftModifiedInput
TI,N,V_modifierState
T@"NSString",C,N,V_backupUnmodifiedInput
T@"NSString",C,N,V_backupModifiedInput
T@"NSString",C,N,V_backupShiftModifiedInput
TI,N,V_gsModifierState
pathAttributes
locus
userIdentifier
setSubtype:
setTime:
setWindowLocation:
setHandInfo:
setIsGeneratedEvent:
setIsDisplayIntegrated:
setSenderID:
systemGesturesPossible
setContextId:
generationCount
setOriginalType:
setKeyInfo:
_appendKeyInfoToMediaKey:usage:downEvent:
setFlags:
setScrollAmount:
setScrollAccelAmount:
setGameControllerInfo:
setPointerControllerInfo:
_HIDEventIsAccessibilityEvent:
representationWithType:subtype:time:location:windowLocation:handInfo:
representationWithHIDEvent:serviceClient:hidStreamIdentifier:clientID:taskPort:
_digitizerRepresentation:hidStreamIdentifier:
_keyboardButtonEvent:
_gameKeyboardControllerEvent:
_wheelEvent:
_gameControllerEvent:
_pointerControllerEvent:hidStreamIdentifier:
_vendorDefinedAccessibilityEvent:
setClientId:
setTaskPort:
setHIDAttributeData:
setIsBuiltIn:
setGenerationCount:
setHIDTime:
setCreatorHIDEvent:
setCreatorHIDServiceClient:
_accessibilityDataFromRealEvent:
setAccessibilityData:
setRedirectEvent:
setSystemDrag:
setAccelerometerInfo:
setIosmacPointerInfo:
accessibilityEventRepresentationWithSender:usagePage:usage:modifierFlags:
accessibilityEventRepresentationWithSender:usagePage:usage:modifierFlags:eventValue1:eventValue2:
dataWithSender:page:usage:modifierFlags:eventValue1:eventValue2:
touchRepresentationWithHandType:location:
setIsTouchPadEvent:
originalType
_newHandHIDEventRef
_newIOSMACPointerRef
_newButtonHIDEventRefWithType:
_newKeyboardHIDEventRef
_newAccelerometerHIDEventRef
_newAccessibilityHIDEventRef
isBuiltIn
_applyAccessibilityDataToRealEvent:
useOriginalHIDTime
_machTimeForHIDEventRef
accelerometerInfo
senderID
flags
accessibilityData
dataBytes
dataLength
iosmacPointerInfo
isGeneratedEvent
isTouchPadEvent
screenEdgeForPoint:
isDisplayIntegrated
subtype
windowLocation
window
setWindow:
time
data
setData:
taskPort
HIDAttributeData
additionalFlags
setAdditionalFlags:
displayId
setDisplayId:
scrollAmount
scrollAccelAmount
isRedirectEvent
isSystemDrag
gameControllerInfo
pointerControllerInfo
auxiliaryData
setAuxiliaryData:
getValue:size:
_senderNameForID
_accessibilityEventFromRealEvent:
representationWithData:
cancelEventForPathIndexMask:
_motionGestureTapEvent:serviceClient:hidStreamIdentifier:clientID:taskPort:
representationWithLocation:windowLocation:handInfo:
representationWithHIDEvent:hidStreamIdentifier:
accelerometerRepresentation:
keyRepresentationWithType:
buttonRepresentationWithType:
iosmacPointerRepresentationWithTypeWithPointerInfo:
gestureRepresentationWithHandType:locations:
accessibilityEventRepresentationWithSender:usagePage:usage:
touchPadRepresentationWithHandType:normalizedLocation:
pathIndexMask
resetInitialTouchCountValueForHidStreamIdentifier:
isUpdate
willBeUpdated
dataRepresentation
normalizedEventRepresentation:scale:
fakeTouchScaleEventRepresentation:
modifyPoints:
neuterUpdates
denormalizedEventRepresentation:descale:
firstPathContextId
fingerCount
isTouchDown
isMove
isChordChange
isLift
isInRange
isInRangeLift
isCancel
applyAccessibilityDataToCreatorHIDEvent
setUseOriginalHIDTime:
creatorHIDServiceClient
_isBuiltIn
_isDisplayIntegrated
_isTouchPadEvent
_isGeneratedEvent
_useOriginalHIDTime
_redirectEvent
_systemDrag
_originalType
_subtype
_flags
_taskPort
_contextId
_displayId
_time
_senderID
_handInfo
_keyInfo
_accelerometerInfo
_gameControllerInfo
_pointerControllerInfo
_iosmacPointerInfo
_clientId
_HIDTime
_HIDAttributeData
_scrollAmount
_scrollAccelAmount
_additionalFlags
_generationCount
_creatorHIDEvent
_creatorHIDServiceClient
_auxiliaryData
_accessibilityData
_window
_data
_windowLocation
T^v,N,V_window
T@"NSData",&,N,V_data
T^{__IOHIDEvent=},&,N,V_creatorHIDEvent
T^{__IOHIDServiceClient=},&,N,V_creatorHIDServiceClient
TI,N,V_originalType
Ti,N,V_subtype
T{CGPoint=dd},N,V_windowLocation
TQ,N,V_time
Ti,N,V_flags
TQ,N,V_senderID
T@"AXEventHandInfoRepresentation",&,N,V_handInfo
T@"AXEventKeyInfoRepresentation",&,N,V_keyInfo
T@"AXEventAccelerometerInfoRepresentation",&,N,V_accelerometerInfo
T@"AXEventGameControllerInfoRepresentation",&,N,V_gameControllerInfo
T@"AXEventPointerInfoRepresentation",&,N,V_pointerControllerInfo
T@"AXEventIOSMACPointerInfoRepresentation",&,N,V_iosmacPointerInfo
T@"NSString",&,N,V_clientId
TI,N,V_taskPort
TQ,N,V_HIDTime
T@"NSData",&,N,V_HIDAttributeData
Tq,N,V_scrollAmount
Tq,N,V_scrollAccelAmount
TQ,N,V_additionalFlags
TI,N,V_contextId
TI,N,V_displayId
TB,N,V_isBuiltIn
TB,N,V_isDisplayIntegrated
Tq,N,V_generationCount
TB,N,V_isTouchPadEvent
TB,N,V_isGeneratedEvent
TB,N,V_useOriginalHIDTime
TQ,R,N
redirectEvent
TB,N,GisRedirectEvent,V_redirectEvent
systemDrag
TB,N,GisSystemDrag,V_systemDrag
T@"NSDictionary",&,N,V_auxiliaryData
T@"AXEventData",&,N,V_accessibilityData
token
_identifierOfCAContext
assistiveTouchAlwaysShowMenuEnabled
assistiveTouchOpenMenuSwaggleEnabled
assistiveTouchMouseKeysEnabled
assistiveTouchMouseKeysOptionToggleEnabled
assistiveTouchMouseKeysUseMainKeyboardKeys
assistiveTouchMouseKeysDelay
assistiveTouchMouseAlwaysShowSoftwareKeyboardEnabled
assistiveTouchMouseAllowAppleBluetoothDevicesPairing
assistiveTouchMouseKeysMaxSpeed
assistiveTouchSpeed
assistiveTouchRecentGestures
assistiveTouchSavedGestures
assistiveTouchScanningMode
assistiveTouchPreferredPointPicker
assistiveTouchAutoScanningEnabled
assistiveTouchGroupElementsEnabled
assistiveTouchScannerCompactMenuEnabled
assistiveTouchScannerMenuLabelsEnabled
assistiveTouchStepInterval
assistiveTouchScanCycles
assistiveTouchScanTimeout
assistiveTouchScannerSoundEnabled
assistiveTouchScannerSpeechEnabled
assistiveTouchScannerSpeechRate
assistiveTouchScannerCursorHighVisibilityEnabled
assistiveTouchScannerSpeechIsInterruptedByScanning
assistiveTouchScannerSpeechShouldSpeakTraits
assistiveTouchInputCoalescingDuration
assistiveTouchInputCoalescingEnabled
assistiveTouchInputHoldDuration
assistiveTouchLongPressDuration
assistiveTouchInputHoldEnabled
assistiveTouchLongPressEnabled
assistiveTouchLongPressPauseScanningEnabled
assistiveTouchDelayAfterInput
assistiveTouchDelayAfterInputEnabled
assistiveTouchAxisSweepSpeed
assistiveTouchActionRepeatInterval
assistiveTouchActionRepeatEnabled
assistiveTouchScanTimeoutEnabled
assistiveTouchCursorColor
assistiveTouchMousePointerColor
assistiveTouchMousePointerSizeMultiplier
assistiveTouchMousePointerTimeoutEnabled
assistiveTouchMousePointerTimeout
assistiveTouchMouseDwellControlEnabled
assistiveTouchMouseDwellControlAutorevertEnabled
assistiveTouchMouseDwellControlAutorevertAction
assistiveTouchMouseDwellControlActivationTimeout
assistiveTouchMouseDwellControlMovementToleranceRadius
assistiveTouchMouseDwellControlCornerCustomization
assistiveTouchMouseDwellControlMutatedMenu
assistiveTouchMouseDwellControlShowPrompt
assistiveTouchMouseZoomPanningStyle
assistiveTouchHeadMovementSensitivity
assistiveTouchSwitchUsageConfirmed
assistiveTouchCameraSwitchPreviewEnabled
assistiveTouchInternalOnlyHiddenNubbitModeEnabled
assistiveTouchInternalOnlyPearlTrackingEnabled
assistiveTouchScannerAddedTripleClickAutomatically
assistiveTouchMainScreenCustomization
assistiveTouchOrbAction
assistiveTouchSingleTapAction
assistiveTouchDoubleTapAction
assistiveTouchLongPressAction
assistiveTouchLongPressActionDuration
assistiveTouchDoubleTapActionTimeout
assistiveTouchMouseCustomizedClickActions
assistiveTouchIdleOpacity
assistiveTouchGameControllerEnabled
switchControlRecipes
switchControlLaunchRecipeUUID
switchControlTopLevelMenuItems
switchControlGesturesTopLevelMenuItems
switchControlDeviceTopLevelMenuItems
switchControlSettingsTopLevelMenuItems
switchControlMediaControlsTopLevelMenuItems
switchControlShouldUseShortFirstPage
switchControlGesturesMenuItems
switchControlDeviceMenuItems
switchControlSettingsMenuItems
switchControlMediaControlsMenuItems
switchControlScanningStyle
switchControlDwellTime
switchControlTapBehavior
switchControlAutoTapTimeout
switchControlShouldAlwaysActivateKeyboardKeys
switchControlIsEnabledAsReceiver
switchControlScanAfterTapLocation
switchControlRestartScanningAtCurrentKey
switchControlPointPickerSelectionStyle
switchControlShouldDisallowUSBRestrictedMode
switchControlUserDidReadUSBRestrictedModeAlert
dataMigratorRequestedVoiceCacheRefresh
supportsAdvancedDisplayFilters
zoomPreferencesWereInitialized
zoomWindowFrame
dockSize
zoomScale
zoomPanOffset
zoomSlugNormalizedPosition
zoomCurrentLensEffect
zoomCurrentLensMode
zoomPeekZoomEnabled
zoomPeekZoomEverEnabled
zoomShouldFollowFocus
zoomShouldShowSlug
zoomSlugSingleTapAction
zoomSlugDoubleTapAction
zoomSlugTripleTapAction
zoomSlugTapAndSlideToAdjustZoomLevelEnabled
zoomAlwaysUseWindowedZoomForTyping
zoomPreferredCurrentLensMode
zoomPreferredCurrentDockPosition
zoomPreferredMaximumZoomScale
zoomPreferredLensModes
zoomPreferredDockPositions
zoomIdleSlugOpacity
zoomControllerColor
zoomPreferredAudioDestination
zoomShouldAllowFullscreenAutopanning
zoomInStandby
zoomShowedBanner
zoomKeyboardShortcutsEnabled
zoomAdjustZoomLevelKbShortcutEnabled
zoomToggleZoomKbShortcutEnabled
zoomPanZoomKbShortcutEnabled
zoomResizeZoomWindowKbShortcutEnabled
zoomSwitchZoomModeKbShortcutEnabled
zoomTempToggleZoomKbShortcutEnabled
zoomScrollWheelKbShortcutEnabled
zoomAutopannerShouldPanWithAcceleration
zoomDebugDisableZoomLensScaleTransform
zoomDebugShowExternalFocusRect
guidedAccessUsageCount
guidedAccessAXFeaturesEnabled
guidedAccessAllowsUnlockWithTouchID
guidedAccessToneIdentifierForTimeRestrictionEvents
guidedAccessShouldSpeakForTimeRestrictionEvents
guidedAccessOverrideIdleTime
guidedAccessAutoLockTimeInSeconds
gaxInternalSettingsUserAppProfile
gaxInternalSettingsUserGlobalProfile
gaxInternalSettingsSavedAccessibilityFeatures
gaxInternalSettingsSavedAccessibilityTripleClickOptions
gaxInternalSettingsUserConfiguredAppIDs
gaxInternalSettingsActiveAppOrientation
gaxInternalSettingsActiveAppID
gaxInternalSettingsIsActiveAppSelfLocked
gaxInternalSettingsTimeRestrictionHasExpired
gaxInternalSettingsSystemDidRestartDueToLowBattery
gaxInternalSettingsECID
gaxInternalSettingsProductBuildVersion
gaxInternalSettingsLastActivationDate
gaxInternalSettingsLastPasscodeSetDate
internalLoggingColorTheme
validateSecondPartyApps
ignoreAXServerEntitlements
logAXNotificationPosting
useNewAXBundleLoader
voiceOverHearingAidRoutingEnabled
skipHearingAidMFiAuth
enableHearingAidReporter
guidedAccessDisallowDirectInactiveToActiveTransition
guidedAccessOverrideTimeRestrictionDuration
guidedAccessEnableExperimentalUI
speakCorrectionsEnabled
tripleClickOrderedOptions
showSpeechController
speechControllerIdleOpacity
speechControllerLongPressAction
speechControllerDoubleTapAction
quickSpeakHighlightOption
quickSpeakWordHighlightColor
quickSpeakSentenceHighlightColor
quickSpeakUnderlineSentence
quickSpeakVolume
quickSpeakSentenceHighlightOption
speechVoiceIdentifierForLanguage
userDidSelectVoiceForLanguage
quickSpeakNubbitNormalizedPosition
siriAutoUpdateListInitialized
letterFeedbackEnabled
phoneticFeedbackEnabled
quickTypeWordFeedbackEnabled
wordFeedbackEnabled
characterFeedbackDelayDuration
voiceOverContentDescriptionLevel
voiceOverLargeCursorEnabled
voiceOverHelpMode
voiceOverNavigateImagesOption
voiceOverPhoneticsFeedback
voiceOverHardwareTypingFeedback
voiceOverSoftwareTypingFeedback
voiceOverBrailleGesturesTypingFeedback
voiceOverCompactVoiceEnabled
voiceOverHintsEnabled
voiceOverPitchChangeEnabled
voiceOverPitch
voiceOverSoundEffectsEnabled
voiceOverLanguageDetectionEnabled
voiceOverHapticsEnabled
voiceOverSoundVolume
voiceOverAdjustSoundVolumeIndependently
voiceOverHapticIntensity
voiceOverVerbosityEmojiSuffixEnabled
voiceOverVerbosityEmojiFeedback
voiceOverSpeakingRateInRotorEnabled
voiceOverSpeakNotificationsEnabled
voiceOverRotorItems
voiceOverEditAppsActionEnabled
voiceOverSpeakActionConfirmation
voiceOverQuickNavAnnouncementFeedback
voiceOverBrailleTableIdentifier
voiceOverAlwaysUseNemethCodeForMathEnabled
voiceOverDefaultDialect
voiceOverHandwritingWasNativeAutocorrectEnabled
voiceOverSpeakingRateForLanguage:
voiceOverActivationWorkaround
voiceOverShowSoftwareKeyboardWithBraille
voiceOverBrailleGradeTwoAutoTranslateEnabled
voiceOverSilenceAnnouncements
voiceOverPreferredTVInteractionMode
voiceOverPrefersFollowFocusNavigationStyle
voiceOverDescribedMedia
voiceOverCustomCommandProfile
voiceOverSpeakNonfocusableElementsAfterDelay
voiceOverExploreFocusAffectsNativeFocus
voiceOverShouldOutputToHearingAid
customPronunciationSubstitutions
voiceOverAlternativeVoiceIdentifier:
voiceOverPrefersCompact:
voiceOverTouchBraillePanningAutoTurnsReadingContent
voiceOverAudioDuckingEnabled
voiceOverSelectedLanguage
voiceOverAudioFollowsHDMIAudio
voiceOverTouchBrailleDisplayInputMode
voiceOverTouchBrailleGesturesInputMode
voiceOverTouchBrailleDisplayOutputMode
voiceOverBrailleWordWrapEnabled
voiceOverBrailleAutoAdvanceDuration
enableVoiceOverCaptions
syncPronunciationsWithCloudKit
voiceOverImageCaptionsEnabled
shouldCaptureVisionEngineDiagnosticsToDisk
voiceOverSpeaksOverTelephoneCalls
voiceOverUseActiveSiriVoice
voiceOverUseDigitalCrownNavigation
didTriggerSOSToday
voiceOverSpeakTableColumnRowInformation
voiceOverSpeakTableHeaders
voiceOverTouchBrailleGesturesShouldUseLockedConfiguration
voiceOverTouchBrailleGesturesLockedOrientation
voiceOverTouchBrailleGesturesLockedTypingMode
voiceOverTouchBrailleGesturesDidPlayCalibrationHint
voiceOverDoubleTapInterval
voiceOverBrailleAlertDisplayDuration
voiceOverBrailleAlertsEnabled
voiceOverBrailleKeyDebounceTimeout
voiceOverNavigationDirectionMode
voiceOverKeyboardModifierChoice
voiceOverContinuousPathKeyboardStartTimeout
voiceOverTouchBrailleShouldReverseDots
voiceOverTouchBrailleShowTextStyleStatus
voiceOverTouchBrailleShowGeneralStatus
voiceOverTouchUpdateBrailleWithoutConnectedDisplay
voiceOverTouchPreferredBrailleTableIdentifiers
voiceOverShouldSpeakDiscoveredText
voiceOverNeuralElementFeedback
voiceOverNumberFeedback
voiceOverAutomaticButtonLabels
voiceOverSoundAndHapticPreferences
tapToSpeakTimeEnabled
tapToSpeakTimeAvailability
voiceOverTapticTimeMode
voiceOverTapticTimeEncoding
voiceOverTapticTimeSpeed
tapticTimeInternalFlashScreenEnabled
voiceOverTapticChimesEnabled
voiceOverTapticChimesAvailability
voiceOverTapticChimesFrequencyEncoding
voiceOverTapticChimesSoundType
voiceOverSpeakSecondsEncoding
voiceOverCapitalLetterFeedback
voiceOverDeletionFeedback
voiceOverPunctuationLevel
voiceOverPunctuationGroup
voiceOverDefaultPunctuationGroup
voiceOverLinkFeedback
voiceOverActionsFeedback
voiceOverContainerOutputFeedback
voiceOverMoreContentOutputFeedback
voiceOverDiscoveredSensitiveContentFeedback
voiceOverShouldDisallowUSBRestrictedMode
voiceOverUserDidReadUSBRestrictedModeAlert
voiceOverActivities
voiceOverSelectedActivity
voiceOverUseTVToggleStyleNavigation
imageCaptioningDisabledApps
voiceOverDirectTouchEnabledApps
voiceOverSceneDescriptionsEnabled
allowHearingAidControlOnLockScreen
shouldStreamToLeftAid
shouldStreamToRightAid
independentHearingAidSettings
shouldFlashForAlertInSilentMode
shouldSpeakMedicalPreamble
shouldTTYMedicalPreamble
medicalPreamble
shouldLimitDisplayRefreshRate
didResetD22Preferences
leftRightBalanceValue
localizationQACaptionShowFilePath
localizationQACaptionShowUSString
localizationQACaptionShowLocalizedString
alexLocalAssetURL
currentVoices
touchAccommodationsUsageConfirmed
touchAccommodationsTripleClickConfirmed
touchAccommodationsHoldDurationEnabled
touchAccommodationsHoldDuration
touchAccommodationsAllowsSwipeGesturesToBypass
touchAccommodationsHoldDurationAllowsSwipeGesturesToBypass
touchAccommodationsHoldDurationSwipeGestureSensitivity
touchAccommodationsSwipeGestureMinimumDistance
touchAccommodationsIgnoreRepeatEnabled
touchAccommodationsIgnoreRepeatDuration
touchAccommodationsTapActivationMethod
touchAccommodationsTapActivationTimeout
stickyKeysEnabled
stickyKeysShiftToggleEnabled
stickyKeysBeepEnabled
magnifierEnabled
magnifierShouldAdjustFiltersForAmbientLight
magnifierShouldUseVideoStabilization
magnifierZoomLevel
magnifierFilterSetIdentifier
magnifierFilterInverted
magnifierContrast
magnifierBrightness
fullKeyboardAccessFocusRingTimeout
fullKeyboardAccessFocusRingTimeoutEnabled
fullKeyboardAccessLargeFocusRingEnabled
fullKeyboardAccessFocusRingHighContrastEnabled
fullKeyboardAccessFocusRingColor
fullKeyboardAccessShouldShowTextEditingModeInstructions
fullKeyboardAccessShouldShowDebugKeyCommandsView
callAudioRoutingAutoAnswerDelay
callAudioRoutingAutoAnswerEnabled
initWithObjects:
_domainForPreferenceKey:
_domainNameForDomain:
setValue:forPreferenceKey:
_handleVoiceUnarchivedCache:
valueForPreferenceKey:
_migratePreferenceIfNecessary:
_listenForAccessibilitySupportPassthroughs
nukePrefsForDomains:numDomains:
postNotificationForPreferenceKey:
unarchivedObjectOfClasses:fromData:error:
gestureWithLegacyFormatDictionary:
_setGestures:forPreferenceKey:
_gesturesForPreferenceKeyMigratingIfNecessary:
setWithObject:
initWithCapacity:
assistiveTouchMainScreenDefaultCustomization
setAssistiveTouchMainScreenCustomization:
setSwitchControlRecipes:
_switchControlMigratePreMonarchIncludedMenuItemsForNewTypes:
_switchControlHasEmptyTopLevelMenuItems:
_allSubmenuKeys
indexOfObject:
topLevelKeys
_switchControlMenuItemsForPreferenceKey:allTypes:enabledByDefault:topLevel:
gestureKeys
deviceKeys
settingsKeys
mediaControlsKeys
axArrayWithPossiblyNilArrays:
_switchControlMenuItemPreferences
initWithBytes:length:
orderedSetWithArray:
programmingActivity
_setVoiceArray:forKey:
_retrieveVoices:
availableVoices
standardUserDefaults
isDefault
quality
isFallbackDefault
remapVoiceIdentifier:
allValues
_removeSpeakingRatePreferenceForLanguage:
_voiceOverRotorItemEnabled:
_localeChange:
replaceObjectAtIndex:withObject:
setVoiceOverRotorItems:
setZoomShouldShowSlug:
setZoomScale:
setZoomInStandby:
anyUserPreferredLangaugeIsRTL
voiceOverEnabled
tapticTimeIsAvailable
setVoiceOverTouchPreferredBrailleTableIdentifiers:
_voiceOverSoundOrHapticValueForPreference:outputEvent:
_voiceOverSetSoundOrHapticValue:forPreference:outputEvent:
_updateTouchAccommodationsTripleClickSetting
setMagnifierEnabled:changeTripleClickMenu:
gizmoGetWatchFaceAutoSpeakPreferences
T@"AXSettings",R,N
keysToIgnoreDuringBuddyTransfer
domainNameForPreferenceKey:
allDomainNamesForPreferenceKey:
preferenceKeyForSelector:
willPostNotificationForPreferenceKey:value:
willPerformUpdateBlocksForPreferenceKey:
nukeAll
setAssistiveTouchAlwaysShowMenuEnabled:
setSupportsAdvancedDisplayFilters:
setAssistiveTouchOpenMenuSwaggleEnabled:
setAssistiveTouchMouseKeysEnabled:
setAssistiveTouchMouseKeysOptionToggleEnabled:
setAssistiveTouchMouseKeysUseMainKeyboardKeys:
setAssistiveTouchMouseKeysDelay:
setAssistiveTouchMouseAlwaysShowSoftwareKeyboardEnabled:
setAssistiveTouchMouseAllowAppleBluetoothDevicesPairing:
setAssistiveTouchMouseKeysMaxSpeed:
setAssistiveTouchSpeed:
setAssistiveTouchCustomGestures:
setAssistiveTouchRecentGestures:
setAssistiveTouchSavedGestures:
setAssistiveTouchPreferredPointPicker:
setAssistiveTouchScannerSpeechIsInterruptedByScanning:
setAssistiveTouchScannerSpeechShouldSpeakTraits:
setAssistiveTouchScannerCursorHighVisibilityEnabled:
setAssistiveTouchScanningMode:
setAssistiveTouchGroupElementsEnabled:
setAssistiveTouchScannerCompactMenuEnabled:
setAssistiveTouchScannerMenuLabelsEnabled:
setAssistiveTouchAxisSweepSpeed:
setAssistiveTouchActionRepeatInterval:
setAssistiveTouchActionRepeatEnabled:
setAssistiveTouchDelayAfterInput:
setAssistiveTouchDelayAfterInputEnabled:
setAssistiveTouchInputHoldDuration:
setAssistiveTouchInputHoldEnabled:
setAssistiveTouchLongPressDuration:
setAssistiveTouchLongPressEnabled:
setAssistiveTouchLongPressPauseScanningEnabled:
setAssistiveTouchInputCoalescingDuration:
setAssistiveTouchInputCoalescingEnabled:
setAssistiveTouchStepInterval:
setAssistiveTouchScanTimeoutEnabled:
setAssistiveTouchScanTimeout:
setAssistiveTouchScanCycles:
setAssistiveTouchScannerSoundEnabled:
setAssistiveTouchScannerSpeechEnabled:
setAssistiveTouchScannerSpeechRate:
setAssistiveTouchSwitches:
setAssistiveTouchCursorColor:
setAssistiveTouchMousePointerColor:
setAssistiveTouchMousePointerSizeMultiplier:
setAssistiveTouchMousePointerTimeoutEnabled:
setAssistiveTouchMousePointerTimeout:
setAssistiveTouchMouseDwellControlEnabled:
setAssistiveTouchMouseDwellControlAutorevertEnabled:
setAssistiveTouchMouseDwellControlAutorevertAction:
setAssistiveTouchMouseDwellControlActivationTimeout:
setAssistiveTouchMouseDwellControlMovementToleranceRadius:
setAssistiveTouchMouseDwellControlCornerCustomization:
setAssistiveTouchMouseDwellControlMutatedMenu:
setAssistiveTouchMouseDwellControlShowPrompt:
setAssistiveTouchMouseZoomPanningStyle:
setAssistiveTouchHeadMovementSensitivity:
setAssistiveTouchSwitchUsageConfirmed:
setAssistiveTouchScannerAddedTripleClickAutomatically:
setAssistiveTouchScannerPrefersCompact:forLanguage:
assistiveTouchScannerPrefersCompact:
setAssistiveTouchSingleTapAction:
setAssistiveTouchDoubleTapAction:
setAssistiveTouchDoubleTapActionTimeout:
setAssistiveTouchLongPressActionDuration:
setAssistiveTouchLongPressAction:
setAssistiveTouchOrbAction:
assistiveTouchCustomizationEnabled
setAssistiveTouchIdleOpacity:
setAssistiveTouchGameControllerEnabled:
setSwitchControlLaunchRecipeUUID:
setSwitchControlTopLevelMenuItems:
switchControlHasEmptyTopLevelMenu
setSwitchControlShouldUseShortFirstPage:
setSwitchControlGesturesMenuItems:
setSwitchControlGesturesTopLevelMenuItems:
setSwitchControlDeviceMenuItems:
setSwitchControlDeviceTopLevelMenuItems:
setSwitchControlSettingsMenuItems:
setSwitchControlSettingsTopLevelMenuItems:
setSwitchControlMediaControlsMenuItems:
setSwitchControlMediaControlsTopLevelMenuItems:
switchControlShouldUseExtendedKeyboardPredictions
setSwitchControlShouldUseExtendedKeyboardPredictions:
setSwitchControlRestartScanningAtCurrentKey:
setSwitchControlPointPickerSelectionStyle:
setSwitchControlScanningStyle:
setSwitchControlDwellTime:
setSwitchControlTapBehavior:
setSwitchControlAutoTapTimeout:
setSwitchControlShouldAlwaysActivateKeyboardKeys:
setSwitchControlIsEnabledAsReceiver:
setSwitchControlScanAfterTapLocation:
_switchControlClearMenuItemPreferences
_switchControlClearMenuItemMigrationTracking
setZoomPreferencesWereInitialized:
setZoomWindowFrame:
setDockSize:
setZoomPanOffset:
setZoomSlugNormalizedPosition:
setZoomCurrentLensEffect:
setZoomShowedBanner:
setZoomCurrentLensMode:
setZoomShouldFollowFocus:
setZoomPeekZoomEnabled:
setZoomPeekZoomEverEnabled:
setZoomSlugSingleTapAction:
setZoomSlugDoubleTapAction:
setZoomSlugTripleTapAction:
setZoomSlugTapAndSlideToAdjustZoomLevelEnabled:
setZoomAlwaysUseWindowedZoomForTyping:
setZoomPreferredCurrentLensMode:
setZoomPreferredCurrentDockPosition:
setZoomPreferredMaximumZoomScale:
setZoomPreferredLensModes:
setZoomPreferredDockPositions:
setZoomIdleSlugOpacity:
setZoomControllerColor:
setZoomShouldAllowFullscreenAutopanning:
setZoomKeyboardShortcutsEnabled:
setZoomAdjustZoomLevelKbShortcutEnabled:
setZoomToggleZoomKbShortcutEnabled:
setZoomPanZoomKbShortcutEnabled:
setZoomResizeZoomWindowKbShortcutEnabled:
setZoomSwitchZoomModeKbShortcutEnabled:
setZoomTempToggleZoomKbShortcutEnabled:
setZoomScrollWheelKbShortcutEnabled:
setZoomAutopannerShouldPanWithAcceleration:
zoomUserHadLegacyZoomEnabled:wasZoomedIn:withScale:
setZoomDebugDisableZoomLensScaleTransform:
setZoomDebugShowExternalFocusRect:
setGuidedAccessAXFeaturesEnabled:
setGuidedAccessAllowsUnlockWithTouchID:
setGuidedAccessToneIdentifierForTimeRestrictionEvents:
guidedAccessDefaultToneIdentifierForTimeRestrictionEvents
setGuidedAccessShouldSpeakForTimeRestrictionEvents:
setGuidedAccessAutoLockTimeInSeconds:
guidedAccessAllowsMultipleWindows
setGaxInternalSettingsUserAppProfile:
setGaxInternalSettingsUserGlobalProfile:
setGaxInternalSettingsSavedAccessibilityFeatures:
setGaxInternalSettingsSavedAccessibilityTripleClickOptions:
setGaxInternalSettingsUserConfiguredAppIDs:
setGaxInternalSettingsActiveAppOrientation:
setGaxInternalSettingsActiveAppID:
setGaxInternalSettingsTimeRestrictionHasExpired:
setGaxInternalSettingsIsActiveAppSelfLocked:
setGaxInternalSettingsSystemDidRestartDueToLowBattery:
setGaxInternalSettingsECID:
setGaxInternalSettingsProductBuildVersion:
setGaxInternalSettingsLastActivationDate:
setGaxInternalSettingsLastPasscodeSetDate:
setAssistiveTouchCameraSwitchPreviewEnabled:
setAssistiveTouchInternalOnlyHiddenNubbitModeEnabled:
assistiveTouchInternalOnlyHiddenNubbitMode
setAssistiveTouchInternalOnlyPearlTrackingEnabled:
setValidateSecondPartyApps:
setIncludeBacktraceInLogs:
setIgnoreAXAsserts:
setIgnoreAXServerEntitlements:
setLogAXNotificationPosting:
setUseNewAXBundleLoader:
setShouldPerformValidationsAtRuntime:
setInternalLoggingColorTheme:
setEnableVoiceOverCaptions:
setSyncPronunciationsWithCloudKit:
setDidTriggerSOSToday:
didTriggerSOSValueSet
setVoiceOverContentDescriptionLevel:
setVoiceOverUseActiveSiriVoice:
setVoiceOverUseDigitalCrownNavigation:
voiceOverShowBrailleWatchSettings
setVoiceOverImageCaptionsEnabled:
setShouldCaptureVisionEngineDiagnosticsToDisk:
setVoiceOverSelectedActivity:
setVoiceOverActivities:
setVoiceOverUseTVToggleStyleNavigation:
setTestingExtantVoices:
testingExtantVoices
setExtantVoices:
extantVoicesExist
currentVoicesExist
setCurrentVoices:
setDataMigratorRequestedVoiceCacheRefresh:
setVoiceOverContinuousPathKeyboardStartTimeout:
setVoiceOverKeyboardModifierChoice:
setVoiceOverHearingAidRoutingEnabled:
setSkipHearingAidMFiAuth:
setEnableHearingAidReporter:
setGuidedAccessDisallowDirectInactiveToActiveTransition:
setGuidedAccessOverrideTimeRestrictionDuration:
setGuidedAccessEnableExperimentalUI:
setTripleClickOrderedOptions:
setSpeakCorrectionsEnabled:
setLetterFeedbackEnabled:
setPhoneticFeedbackEnabled:
setCharacterFeedbackDelayDuration:
setQuickTypeWordFeedbackEnabled:
setWordFeedbackEnabled:
setShowSpeechController:
setSpeechControllerIdleOpacity:
setSpeechControllerLongPressAction:
setSpeechControllerDoubleTapAction:
setQuickSpeakVolume:
setQuickSpeakUnderlineSentence:
setQuickSpeakSentenceHighlightOption:
setQuickSpeakWordHighlightColor:
setQuickSpeakSentenceHighlightColor:
setQuickSpeakHighlightOption:
userDidSelectVoiceForLanguage:source:
setSpeechVoiceIdentifier:forLanguage:source:
setUserDidSelectVoiceForLanguage:source:
selectedSpeechVoiceIdentifiersWithLanguageSource
setSelectedSpeechVoiceIdentifiersWithLanguageSource:
selectedSpeechVoiceIdentifiersForSource:
_clearWhitetailMigrationSettings
_voiceOverDefaultDialect
_switchControlScannerDefaultDialect
_switchControlPrefersCompact
_switchControlAltVoices
_voiceOverAlternativeVoiceIdentifiers
_voiceOverPrefersCompactByLanguage
_quickSpeakPrefersCompact
_quickSpeakAltVoices
_quickSpeakSpeakingRateLanguages
setSiriAutoUpdateListInitialized:
setQuickSpeakNubbitNormalizedPosition:
setCustomPronunciationSubstitutions:
setVoiceOverTouchBraillePanningAutoTurnsReadingContent:
setVoiceOverTouchBrailleDisplayInputMode:
setVoiceOverTouchBrailleDisplayOutputMode:
setVoiceOverTouchBrailleGesturesInputMode:
setVoiceOverDefaultPunctuationGroup:
setVoiceOverPunctuationGroup:
setVoiceOverPunctuationLevel:
setVoiceOverLinkFeedback:
setVoiceOverDeletionFeedback:
setVoiceOverCapitalLetterFeedback:
setVoiceOverMoreContentOutputFeedback:
setVoiceOverContainerOutputFeedback:
setVoiceOverActionsFeedback:
setVoiceOverDiscoveredSensitiveContentFeedback:
setVoiceOverTouchSingleLetterQuickNavEnabled:
voiceOverTouchSingleLetterQuickNavEnabled
setVoiceOverQuickNavAnnouncementFeedback:
setVoiceOverSpeaksOverTelephoneCalls:
setVoiceOverSpeakTableHeaders:
setVoiceOverSpeakTableColumnRowInformation:
setVoiceOverLargeCursorEnabled:
setVoiceOverHelpMode:
setVoiceOverNavigateImagesOption:
setVoiceOverPhoneticsFeedback:
setVoiceOverHardwareTypingFeedback:
setVoiceOverSoftwareTypingFeedback:
setVoiceOverBrailleGesturesTypingFeedback:
setVoiceOverActivationWorkaround:
voiceOverHandwritingEnabled
voiceOverBrailleGesturesEnabled
setVoiceOverBrailleWordWrapEnabled:
setVoiceOverBrailleAutoAdvanceDuration:
setVoiceOverHintsEnabled:
setVoiceOverSelectedLanguage:
setVoiceOverAudioDuckingEnabled:
setVoiceOverAudioFollowsHDMIAudio:
setVoiceOverPitch:
setVoiceOverPitchChangeEnabled:
setVoiceOverSoundEffectsEnabled:
setVoiceOverLanguageDetectionEnabled:
setVoiceOverVerbosityEmojiFeedback:
setVoiceOverVerbosityEmojiSuffixEnabled:
setVoiceOverSoundVolume:
setVoiceOverAdjustSoundVolumeIndependently:
setVoiceOverHapticsEnabled:
setVoiceOverSpeakingRateInRotorEnabled:
setVoiceOverSpeakNotificationsEnabled:
setVoiceOverSpeakActionConfirmation:
setVoiceOverEditAppsActionEnabled:
setVoiceOverBrailleTableIdentifier:
setVoiceOverBrailleLanguageRotorItems:
voiceOverBrailleLanguageRotorItems
setVoiceOverAlwaysUseNemethCodeForMathEnabled:
setVoiceOverHandwritingWasNativeAutocorrectEnabled:
setVoiceOverBrailleGradeTwoAutoTranslateEnabled:
setVoiceOverShowSoftwareKeyboardWithBraille:
setVoiceOverSpeakNonfocusableElementsAfterDelay:
setVoiceOverSilenceAnnouncements:
setVoiceOverPreferredTVInteractionMode:
setVoiceOverPrefersFollowFocusNavigationStyle:
setVoiceOverExploreFocusAffectsNativeFocus:
setVoiceOverDescribedMedia:
setVoiceOverCustomCommandProfile:
setVoiceOverShouldDisallowUSBRestrictedMode:
setSwitchControlShouldDisallowUSBRestrictedMode:
setVoiceOverUserDidReadUSBRestrictedModeAlert:
setSwitchControlUserDidReadUSBRestrictedModeAlert:
addRotorOptionsForLoginSession
configureZoomForLoginSession
clearVoicePrefersCompactSettings
setVoiceOverAlternativeVoiceIdentifier:forLanguage:
_voiceOverTouchSpeakingRateLanguages
setVoiceOverSpeakingRate:forLanguage:
setVoiceOverShouldOutputToHearingAid:
setVoiceOverTouchBrailleGesturesShouldUseLockedConfiguration:
setVoiceOverTouchBrailleGesturesLockedOrientation:
setVoiceOverTouchBrailleGesturesLockedTypingMode:
setVoiceOverTouchBrailleGesturesDidPlayCalibrationHint:
setVoiceOverBrailleAlertsEnabled:
setVoiceOverBrailleAlertDisplayDuration:
setVoiceOverBrailleKeyDebounceTimeout:
setVoiceOverDoubleTapInterval:
setVoiceOverNavigationDirectionMode:
setTapToSpeakTimeEnabled:
setTapToSpeakTimeAvailability:
setVoiceOverTapticTimeMode:
setVoiceOverTapticTimeEncoding:
setVoiceOverTapticTimeSpeed:
setVoiceOverTapticChimesEnabled:
setTapticTimeInternalFlashScreenEnabled:
setVoiceOverTapticChimesAvailability:
setVoiceOverTapticChimesFrequencyEncoding:
setVoiceOverTapticChimesSoundType:
setVoiceOverTouchBrailleShouldReverseDots:
setVoiceOverTouchBrailleShowTextStyleStatus:
setVoiceOverTouchUpdateBrailleWithoutConnectedDisplay:
preferredBrailleTableIdentifierForKeyboardLanguage:keyboardLayout:
setPreferredBrailleTableIdentifier:forKeyboardLanguage:keyboardLayout:
setVoiceOverTouchBrailleShowGeneralStatus:
setVoiceOverShouldSpeakDiscoveredText:
setVoiceOverNeuralElementFeedback:
setVoiceOverNumberFeedback:
setVoiceOverAutomaticButtonLabels:
setVoiceOverSoundAndHapticPreferences:
voiceOverSoundEnabledForEvent:
voiceOverSetSoundEnabled:forEvent:
voiceOverHapticEnabledForEvent:
voiceOverSetHapticEnabled:forEvent:
voiceOverResetSoundAndHapticPreferences
setIndependentHearingAidSettings:
setAllowHearingAidControlOnLockScreen:
setShouldStreamToLeftAid:
setLeftRightBalanceValue:
setShouldStreamToRightAid:
touchAccommodationsAreConfigured
setTouchAccommodationsTripleClickConfirmed:
setTouchAccommodationsUsageConfirmed:
setTouchAccommodationsHoldDurationEnabled:
setTouchAccommodationsHoldDuration:
setTouchAccommodationsAllowsSwipeGesturesToBypass:
setTouchAccommodationsSwipeGestureMinimumDistance:
setTouchAccommodationsIgnoreRepeatEnabled:
setTouchAccommodationsIgnoreRepeatDuration:
setTouchAccommodationsTapActivationMethod:
setTouchAccommodationsTapActivationTimeout:
setStickyKeysEnabled:
setStickyKeysShiftToggleEnabled:
setStickyKeysBeepEnabled:
setMagnifierEnabled:
setMagnifierShouldAdjustFiltersForAmbientLight:
setMagnifierShouldUseVideoStabilization:
setMagnifierZoomLevel:
setMagnifierFilterSetIdentifier:
setMagnifierFilterInverted:
setMagnifierContrast:
setMagnifierBrightness:
setFullKeyboardAccessFocusRingTimeout:
setFullKeyboardAccessFocusRingTimeoutEnabled:
setFullKeyboardAccessLargeFocusRingEnabled:
setFullKeyboardAccessFocusRingHighContrastEnabled:
setFullKeyboardAccessFocusRingColor:
setFullKeyboardAccessShouldShowTextEditingModeInstructions:
setFullKeyboardAccessShouldShowDebugKeyCommandsView:
setAppValidationTestingMode:
gizmoApplicationAccessibilityEnabled
setGizmoApplicationAccessibilityEnabled:
gizmoSetAutoSpeakEnabledForComplication:slot:face:toggle:
gizmoGetAutoSpeakEnabledForComplication:slot:face:
setVoiceOverSpeakSecondsEncoding:
setVoiceOverDirectTouchEnabledApps:
setImageCaptioningDisabledApps:
setVoiceOverSceneDescriptionsEnabled:
setLocalizationQACaptionShowFilePath:
setLocalizationQACaptionShowUSString:
setLocalizationQACaptionShowLocalizedString:
setLocalizationQACaptionMode:
setShouldFlashForAlertInSilentMode:
setShouldSpeakMedicalPreamble:
setShouldTTYMedicalPreamble:
setMedicalPreamble:
setShouldLimitDisplayRefreshRate:
lastMagnifierResetCount
setLastMagnifierResetCount:
lastSmartInvertColorsEnablement
lastHearingAidHandoffTimeResetCount
setlastHearingAidHandoffTimeResetCount:
lastHearingAidControlPanelTimeResetCount
setlastHearingAidControlPanelTimeResetCount:
lastBrailleScreenInputTimeResetCount
setLastBrailleScreenInputTimeResetCount:
lastTapticTimeResetCount
setLastTapticTimeResetCount:
lastGuidedAccessTimeResetCount
setlastGuidedAccessTimeResetCount:
lastGuidedAccessTimeLimitResetCount
setlastGuidedAccessTimeLimitResetCount:
lastPlatformSwitchTimeResetCount
setlastPlatformSwitchTimeResetCount:
lastCharacterVoiceTimeResetCount
setLastCharacterVoiceTimeResetCount:
lastAssistiveTouchTimeResetCount
setLastAssistiveTouchTimeResetCount:
assistiveTouchUsageCount
setAssistiveTouchUsageCount:
magnifierUsageCount
setMagnifierUsageCount:
tapticTimeUsageCount
setTapticTimeUsageCount:
switchControlPlatformSwitchedCount
setSwitchControlPlatformSwitchedCount:
hearingAidHandOffCount
setHearingAidHandOffCount:
hearingAidControlPanelCount
setHearingAidControlPanelCount:
characterVoicesUsageCount
setCharacterVoicesUsageCount:
guidedAccessTimeLimitsUsageCount
setGuidedAccessTimeLimitsUsageCount:
brokenHomeButtonCount
setBrokenHomeButtonCount:
voiceOverBSIUsageCount
setVoiceOverBSIUsageCount:
setGuidedAccessUsageCount:
setDidResetD22Preferences:
reachabilityEnabled
setReachabilityEnabled:
setCallAudioRoutingAutoAnswerDelay:
setCallAudioRoutingAutoAnswerEnabled:
switchControlCombinedTopLevelMenuItems
setSwitchControlCombinedTopLevelMenuItems:
writeAXLogsToFile
setWriteAXLogsToFile:
setVoiceOverHapticIntensity:
voiceOverVerbositySpeakCustomActionsHint
setVoiceOverVerbositySpeakCustomActionsHint:
setTouchAccommodationsHoldDurationAllowsSwipeGesturesToBypass:
reduceWhitePointLevel
setReduceWhitePointLevel:
setLastPlatformSwitchTimeResetCount:
setLastGuidedAccessTimeLimitResetCount:
setLastGuidedAccessTimeResetCount:
setLastHearingAidControlPanelTimeResetCount:
setLastHearingAidHandoffTimeResetCount:
_migratedSwitchControlMenuItemsPreferenceKeys
_unarchivedVoiceCache
_assistiveTouchInternalOnlyHiddenNubbitModeEnabled
_writeAXLogsToFile
_voiceOverVerbositySpeakCustomActionsHint
_touchAccommodationsHoldDurationAllowsSwipeGesturesToBypass
_reduceWhitePointLevel
_switchControlCombinedTopLevelMenuItems
_voiceOverHapticIntensity
_lastPlatformSwitchTimeResetCount
_lastGuidedAccessTimeLimitResetCount
_lastGuidedAccessTimeResetCount
_lastHearingAidControlPanelTimeResetCount
_lastHearingAidHandoffTimeResetCount
Td,N
T@"NSDictionary",R,N
T@"NSDictionary",&,N
T@"NSString",&,N
T@"NSArray",&,N
Tq,N
T@"NSSet",&,N
T@"NSUUID",&,N
T@"NSArray",&,N,V_switchControlCombinedTopLevelMenuItems
T{CGRect={CGPoint=dd}{CGSize=dd}},N
T{CGPoint=dd},N
T@"NSOrderedSet",&,N
T@"NSNumber",C,N
T@"NSDate",&,N
TQ,N
TB,N,V_assistiveTouchInternalOnlyHiddenNubbitModeEnabled
TB,N,V_writeAXLogsToFile
T@"NSNumber",&,N
T@"NSArray",C,N
T@"NSDictionary",C,N
T@"NSURL",&,N
Tf,N
Td,N,V_voiceOverHapticIntensity
TB,N,V_voiceOverVerbositySpeakCustomActionsHint
T@"NSUUID",C,N
T@"NSData",&,N
T@"AXVoiceOverActivity",&,N
TB,N,V_touchAccommodationsHoldDurationAllowsSwipeGesturesToBypass
Tf,N,V_reduceWhitePointLevel
Td,N,V_lastPlatformSwitchTimeResetCount
Td,N,V_lastGuidedAccessTimeLimitResetCount
Td,N,V_lastGuidedAccessTimeResetCount
Td,N,V_lastHearingAidControlPanelTimeResetCount
Td,N,V_lastHearingAidHandoffTimeResetCount
accessibilityEnabled
applicationAccessibilityEnabled
setApplicationAccessibilityEnabled:
tripleClickOptions
setTripleClickOptions:
appleTVRemoteClickpadTapsForDirectionalNavigationEnabled
setAppleTVRemoteClickpadTapsForDirectionalNavigationEnabled:
assistiveTouchHardwareEnabled
setAssistiveTouchHardwareEnabled:
assistiveTouchUIEnabled
inspectorEnabled
setInspectorEnabled:
automationEnabled
setAutomationEnabled:
automationLocalizedStringLookupInfoEnabled
setAutomationLocalizedStringLookupInfoEnabled:
automationPreferredLocalization
automationFauxCollectionViewCellsEnabled
automationFauxTableViewCellsEnabled
setAutomationFauxCollectionViewCellsEnabled:
setAutomationFauxTableViewCellsEnabled:
automationHitpointWarpingEnabled
setAutomationHitpointWarpingEnabled:
siriSemanticContextEnabled
setSiriSemanticContextEnabled:
setVoiceOverEnabled:
voiceOverSpeakingRate
setVoiceOverSpeakingRate:
voiceOverVolume
setVoiceOverVolume:
voiceOverUsageConfirmed
setVoiceOverUsageConfirmed:
voiceOverEnabledThroughAccessory
setVoiceOverEnabledThroughAccessory:
voiceOverScreenCurtainEnabled
setVoiceOverScreenCurtainEnabled:
voiceOverUIEnabled
setVoiceOverUIEnabled:
voiceOverLanguageRotorItems
setVoiceOverLanguageRotorItems:
voiceOverLanguageRotorItemsExist
voiceOverTypingMode
setVoiceOverTypingMode:
voiceOverBrailleBluetoothDisplay
setVoiceOverBrailleBluetoothDisplay:
voiceOverTouchBrailleTableIdentifier
setVoiceOverTouchBrailleTableIdentifier:
voiceOverBrailleVirtualStatusAlignment
setVoiceOverBrailleVirtualStatusAlignment:
voiceOverBrailleMasterStatusCellIndex
setVoiceOverBrailleMasterStatusCellIndex:
voiceOverBrailleStatusCellPreference
setVoiceOverBrailleStatusCellPreference:
voiceOverBrailleContractionMode
setVoiceOverBrailleContractionMode:
voiceOverBrailleEightDotMode
setVoiceOverBrailleEightDotMode:
zoomToggledByPreferenceSwitch
setZoomToggledByPreferenceSwitch:
zoomToggledByVoiceOver
setZoomToggledByVoiceOver:
zoomSmoothScalingEnabled
setZoomSmoothScalingEnabled:
enhanceTextLegibilityEnabled
setEnhanceTextLegibilityEnabled:
enhanceTextTrackingEnabled
setEnhanceTextTrackingEnabled:
reduceMotionAutoplayVideoPreviewsEnabled
setReduceMotionAutoplayVideoPreviewsEnabled:
increaseButtonLegibilityEnabled
setIncreaseButtonLegibilityEnabled:
buttonShapesEnabled
setButtonShapesEnabled:
reduceWhitePointEnabled
setReduceWhitePointEnabled:
highContrastFocusIndicatorsEnabled
setHighContrastFocusIndicatorsEnabled:
monoAudioEnabled
setMonoAudioEnabled:
audioLeftRightBalance
setAudioLeftRightBalance:
T@"NSArray",&
T@"NSString",R
T@"NSDictionary",C
T@"NSString",C
integerValueForPreferenceKey:defaultValue:
doubleValueForPreferenceKey:defaultValue:
boolValueForPreferenceKey:defaultValue:
objectValueForPreferenceKey:ofClass:defaultValue:
componentsSeparatedByCharactersInSet:
rangeOfString:options:
axContainsString:options:
axIsGenericLanguageCode
letterCharacterSet
uppercaseString
axContainsString:
axIsLanguageCode
axRegionCode
axCapitalizeFirstLetter
sortDescriptorWithKey:ascending:selector:
sortUsingDescriptors:
axUniqueArrayWithPredicate:
axIsEqualToOrderedArray:withPredicate:
axSafeObjectAtIndex:
axArrayByIgnoringNilElementsWithCount:
supportsSiri
supportsAlex
setVoiceClassesMap:
setVoiceNameMap:
voiceClassesMap
voiceNameMap
isOldSiriVoiceIdentifier:
isThemisABEnabled
outputVoiceColorDescriptorForOutputLanguageCode:voiceName:
localizedOutputVoiceColor
localizedCapitalizedString
_siriBaseIdentifierFromIdentifier:
setLanguage:
setQuality:
setInUnitTestMode:
inUnitTestMode
isAlternativeVoice:
isCompactVocalizerVoiceIdentifier:
isCombinedVocalizerVoiceIdentifier:
isAlexAvailableForLanguage:
voiceForVoiceIdentifier:forLanguage:
_siriIdentifierFromBaseIdentifier:language:quality:
_voiceClassesMap
_voiceNameMap
T@"NSMutableDictionary",&,N,V_voiceClassesMap
T@"NSMutableDictionary",&,N,V_voiceNameMap
nameWithoutQuality
_channelForStatusByte:
_eventTypeForStatusByte:
_expectedPacketLengthForEventType:
numberWithUnsignedLong:
parse:error:
_cacheLazyProperties
_isSystemAppAccessibilityBundle
stringByDeletingPathExtension
_codeItemQueue
fileExistsAtPath:isDirectory:
bundleWithURL:
prepareBackingBundleIfNeeded:
codeItemTypeFromString:
initAccessibilityCodeItemWithPath:targetType:platformToTarget:loadOrder:
cachedBundle
_cachedBundle
_loadedAtTimestamp
_loadOrder
_platformToTarget
_associatedAccessibilityCodeItem
_targetType
_targetCodeItem
T@"NSString",&,N,V_path
T@"NSMutableDictionary",&,N,V_platformToTarget
Tq,N,V_targetType
TS,N,V_loadOrder
T@"AXCodeItem",W,N,V_associatedAccessibilityCodeItem
T@"AXCodeItem",W,N,V_targetCodeItem
T@"NSBundle",R,N
initializeSubsytem
_errorWithMessage:underlyingError:
subsystems
wrapError:description:
shouldIncludeBacktraceInLogs
shouldIncludeFileLineAndFunctionInLogs
shouldProcessMessageForLogs
threshold
defaultLogLevel
willLog
willLogInfo
willLogDebug
setIgnoreLogging:
_ignoreLogging
addPointsByFingerIdentifier:forces:atTime:
isEqualToArray:
tapGestureForInterfaceOrientedPoint:
numberOfEvents
fingerIdentifiersAtEventIndex:
timeAtEventIndex:
pointForFingerIdentifier:atEventIndex:
forceForFingerIdentifier:atEventIndex:
arePointsDeviceRelative
updateForLandscape:
_allEvents
_arePointsDeviceRelative
setObject:atIndexedSubscript:
addPointsFromReplayableGesture:
_addPoint:force:forFingerIdentifier:atTime:
_addPoint:force:forFingerIdentifier:atEventIndex:
_removeFingersAtEventIndex:
_pointsByFingerIdentifierAtEventIndex:
_forcesByFingerIdentifierAtEventIndex:
isLeftToRightSwipe
initForLeftToRightSwipe:
setIsLeftToRightSwipe:
isLandscape
setIsLandscape:
_isLeftToRightSwipe
_isLandscape
TB,N,V_isLeftToRightSwipe
TB,N,V_isLandscape
hasLocalizableName
setHasLocalizableName:
shouldPerformAtOriginalLocation
setShouldPerformAtOriginalLocation:
gestureWithPoints:times:forces:
_fingerIdentifierForFingerAtIndex:
gestureShiftedByOffset:
_hasLocalizableName
_shouldPerformAtOriginalLocation
TB,N,V_hasLocalizableName
TB,N,V_shouldPerformAtOriginalLocation
_createIndexesWithSize:
_initWithIndexMap:
_initAndDeepCopyIndexMap:
unsignedLongValue
addIndex:
initWithObjects:andIndexes:count:
deepCopyWithZone:
removeObjectForIndex:
indexes
addObjectsFromIndexMap:
_map
dataWithContentsOfURL:options:error:
JSONObjectWithData:options:error:
timer
updateVisualsSequenceDidBeginHandler
setTimer:
_timerDidFire:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
updateVisualsSequenceInProgressHandler
updateVisualsSequenceDidFinishHandler
notifyUpdateElementVisualsEventDidOccur
setThreshold:
progressInterval
setProgressInterval:
setUpdateVisualsSequenceDidBeginHandler:
setUpdateVisualsSequenceDidFinishHandler:
setUpdateVisualsSequenceInProgressHandler:
lastProgressTime
setLastProgressTime:
_threshold
_progressInterval
_updateVisualsSequenceDidBeginHandler
_updateVisualsSequenceDidFinishHandler
_updateVisualsSequenceInProgressHandler
_timer
_lastProgressTime
T@"NSTimer",&,N,V_timer
Td,N,V_lastProgressTime
Td,N,V_threshold
Td,N,V_progressInterval
T@?,C,N,V_updateVisualsSequenceDidBeginHandler
T@?,C,N,V_updateVisualsSequenceDidFinishHandler
T@?,C,N,V_updateVisualsSequenceInProgressHandler
initWithQueue:block:
mainQueueCoalescerWithBlock:
performCoalescedAsynchronously
_targetQueue
_consistencyQueue
_coalescing
setEventHandler:
_handleObjectAddedNotification:
_handleObjectRemovedNotification:
_handlePropertyChangedNotification:
_handleThruConnectionsChangedNotification:
_handleSerialPortOwnerChangedNotification:
_handleIOErrorNotification:
parser
eventHandler
_resetAndDetectDevices
devices
_nameForMidiObjectType:
_deviceForMidiDevice:addIfNeeded:
_addMidiEntity:
_addMidiSource:
_addMidiDestination:
_removeMidiDevice:
_removeMidiEntity:
_removeMidiSource:
_removeMidiDestination:
printAttachedDevices
setParser:
setDevices:
midiClientRef
setMidiClientRef:
midiInputPortRef
setMidiInputPortRef:
_midiClientRef
_midiInputPortRef
_eventHandler
_parser
T@"AXMIDIParser",&,N,V_parser
T@"NSString",&,N,V_clientIdentifier
T@"NSMutableSet",&,N,V_devices
TI,N,V_midiClientRef
TI,N,V_midiInputPortRef
T@?,C,N,V_eventHandler
supportsLongPress
_switchWithAction:excludedUUIDs:needsToSupportLongPress:
_hasSwitchWithUUID:
_switchWithAnyActionExcludingUUIDs:needsToSupportLongPress:
updateRecipe:
_updateWithoutSavingExistingRecipe:allRecipes:
_assignDefaultTitleIfNeededToRecipe:
_createAndSaveRecipeForInterfaceOrientedPoint:forHold:
saveRecipe:
validateAndUpdateRecipeIfNeeded:
isNewRecipe:
createAndSaveRecipeForInterfaceOrientedPoint:
createAndSaveRecipeForInterfaceOrientedHoldPoint:
switchForUUID:
brailleString
outputVariants
performPunctuationTranslation
replaceCommas
outputActionID
newOutputActionID
initWithAXAction:
initWithString:
_rangeOfString
setString:overrideOriginalString:
objectForVariant:
removeObjectForVariant:
setBrailleString:
originalString
generatesBraille
setGeneratesBraille:
setPerformPunctuationTranslation:
setReplaceCommas:
wasDivided
_generatesBraille
_performPunctuationTranslation
_replaceCommas
_wasDivided
_variants
_string
_brailleString
_originalString
_outputActionID
T@"NSString",&,N,V_string
T@"NSString",&,N,V_brailleString
T@"NSString",R,N,V_originalString
T{_NSRange=QQ},R,N,V_rangeOfString
TB,N,V_generatesBraille
TB,N,V_performPunctuationTranslation
TB,N,V_replaceCommas
TB,N,V_wasDivided
T@"AXIndexMap",R,N,V_variants
TQ,R,N,V_outputActionID
loadResource:principalClass:error:
directionPadUp
directionPadDown
directionPadLeft
directionPadRight
faceButtonA
faceButtonB
faceButtonX
faceButtonY
shoulderButtonL1
shoulderButtonL2
shoulderButtonR1
shoulderButtonR2
leftJoystickX
leftJoystickY
leftJoystickButton
rightJoystickX
rightJoystickY
rightJoystickButton
menuButton
viewButton
homeButton
rightJoystickActive
leftJoystickActive
isJoystickPressed
isDirectionPadPressed
isFaceButtonPressed
isShoulderButtonPressed
isKeyboardTypeButtonPressed
_directionPadUp
_directionPadDown
_directionPadLeft
_directionPadRight
_faceButtonA
_faceButtonB
_faceButtonX
_faceButtonY
_shoulderButtonR1
_shoulderButtonR2
_shoulderButtonL1
_shoulderButtonL2
_leftJoystickX
_leftJoystickY
_leftJoystickButton
_rightJoystickX
_rightJoystickY
_rightJoystickButton
_menuButton
_viewButton
_homeButton
Td,N,V_directionPadUp
Td,N,V_directionPadDown
Td,N,V_directionPadLeft
Td,N,V_directionPadRight
Td,N,V_faceButtonA
Td,N,V_faceButtonB
Td,N,V_faceButtonX
Td,N,V_faceButtonY
Td,N,V_shoulderButtonR1
Td,N,V_shoulderButtonR2
Td,N,V_shoulderButtonL1
Td,N,V_shoulderButtonL2
Td,N,V_leftJoystickX
Td,N,V_leftJoystickY
Td,N,V_leftJoystickButton
Td,N,V_rightJoystickX
Td,N,V_rightJoystickY
Td,N,V_rightJoystickButton
Td,N,V_menuButton
Td,N,V_viewButton
Td,N,V_homeButton
eventSenderIdentifier
dataWithSender:
page
usage
modifierFlags
eventValue1
eventValue2
wasPostedByAccessibility
_storage
Tf,R,N
T*,R,N
_initAndManageWithSettings:
ansiColorSeqForAXLogColor:
coloredString:withColor:
setManagedBySettings:
_updateSettingsFromUserPrefs
defaultLightColorsTheme
setColorTheme:
setPreferDarkColors:
defaultDarkColorsTheme
isManagedBySettings
preferDarkColors
colorTheme
colorizeStringIfEnabled:withColor:
whiteOrBlackString:
greyString:
_active
_managedBySettings
_preferDarkColors
_colorTheme
managedBySettings
TB,N,GisManagedBySettings,V_managedBySettings
T{AXLogColorTheme=qqqq},N,V_colorTheme
TB,N,GisActive,V_active
TB,N,V_preferDarkColors
setReplayBlock:
setCompletionBlock:
setAttemptsRemaining:
setMaxAttempts:
setInterval:
setAsync:
setQueue:
_dispatchAsynchronously
_dispatchSynchronously
replayBlock
setUnderlyingResult:
setUnderlyingError:
interval
underlyingError
_genericFailError
completionBlock
underlyingResult
replayBlock:name:attempts:interval:async:queue:completion:
dispatch
maxAttempts
attemptsRemaining
didSucceed
setDidSucceed:
_didSucceed
_replayBlock
_completionBlock
_interval
_maxAttempts
_attemptsRemaining
_underlyingError
_underlyingResult
T@?,C,N,V_replayBlock
T@?,C,N,V_completionBlock
Td,N,V_interval
Tq,N,V_maxAttempts
Tq,N,V_attemptsRemaining
TB,N,V_async
T@"NSObject<OS_dispatch_queue>",W,N,V_queue
TB,N,V_didSucceed
T@"NSError",&,N,V_underlyingError
T@,&,N,V_underlyingResult
replayer
replayWithName:attempts:interval:async:queue:replayBlock:completion:
initWithHIDTapIdentifier:HIDEventTapPriority:systemEventTapIdentifier:systemEventTapPriority:
setHIDEventTapIdentifier:
setHIDEventTapPriority:
setHIDEventFilterMask:
setSystemEventTapIdentifier:
setSystemEventTapPriority:
setHidActualEventTapEnabledReasons:
setSystemActualEventTapEnabledReasons:
_runHIDEventReceiveThread
initWithBlock:
start
hidActualEventTapEnabledReasons
_uninstallHIDEventFilter
HIDEventTapIdentifier
isHandlingHIDEvents
setHandlingHIDEvents:
_installHIDEventFilter
HIDEventTapPriority
systemActualEventTapEnabledReasons
systemEventTapIdentifier
isHandlingSystemEvents
setHandlingSystemEvents:
_installSystemEventFilter
_uninstallSystemEventFilter
systemEventTapPriority
addPort:forMode:
distantFuture
runMode:beforeDate:
HIDEventFilterMask
shouldNotifyUserEventOccurred
backgroundAccessQueue
performAsynchronousReadingBlock:
HIDEventHandler
failedToHandleEventInTime
systemEventHandler
hidEventTapEnabledReasons
_threadStop
cleanup
beginHandlingHIDEventsForReason:
endHandlingHIDEventsForReason:
raiseHIDEventTapPriorityToMaximum
restoreHIDEventTapPriorityToDefault
systemEventTapEnabledReasons
beginHandlingSystemEventsForReason:
endHandlingSystemEventsForReason:
raiseSystemEventTapPriorityToMaximum
restoreSystemEventTapPriorityToDefault
setShouldNotifyUserEventOccurred:
HIDEventReceiveThread
setHIDEventReceiveThread:
setHIDEventHandler:
setFailedToHandleEventInTime:
setSystemEventHandler:
ignoreAllSystemEvents
setIgnoreAllSystemEvents:
_shouldRunHIDReceiveThreadRunloop
_shouldNotifyUserEventOccurred
_handlingHIDEvents
_ignoreAllSystemEvents
_handlingSystemEvents
_HIDEventTapPriority
_systemEventTapPriority
_HIDEventTapIdentifier
_HIDEventReceiveThread
_HIDEventHandler
_HIDEventFilterMask
_failedToHandleEventInTime
_systemEventTapIdentifier
_systemEventHandler
_hidActualEventTapEnabledReasons
_systemActualEventTapEnabledReasons
T@"NSString",&,N,V_HIDEventTapIdentifier
Ti,N,V_HIDEventTapPriority
T@"NSThread",&,N,V_HIDEventReceiveThread
handlingHIDEvents
TB,N,GisHandlingHIDEvents,V_handlingHIDEvents
T@"NSMutableArray",&,N,V_hidActualEventTapEnabledReasons
T@"NSString",&,N,V_systemEventTapIdentifier
Ti,N,V_systemEventTapPriority
handlingSystemEvents
TB,N,GisHandlingSystemEvents,V_handlingSystemEvents
T@"NSMutableArray",&,N,V_systemActualEventTapEnabledReasons
TB,N,V_shouldNotifyUserEventOccurred
T@?,C,N,V_HIDEventHandler
TQ,N,V_HIDEventFilterMask
T@?,C,N,V_failedToHandleEventInTime
T@?,C,N,V_systemEventHandler
TB,N,V_ignoreAllSystemEvents
T@"NSArray",R,W,N
decodePropertyListForKey:
setAccessibilityOptions:
setAxPreferredContentSizeCategoryName:
setAxOSVersion:
setAxModel:
setUsesExtendedSlider:
accessibilityOptions
axPreferredContentSizeCategoryName
axOSVersion
axModel
usesExtendedSlider
removeObjectsForKeys:
testData
productVersionForBuddy
deviceClassForBuddy
setTestData:
processDomainDictionary:
dataPackageForCurrentSettings
applySavedSettings
setTestData:forModel:hasHomeButton:largeTextUsesExtendedRange:
dataBlobForBuddy
restoreDataBlobForBuddy:
_usesExtendedSlider
_accessibilityOptions
_axOSVersion
_axModel
_axPreferredContentSizeCategoryName
T@"NSDictionary",&,N,V_accessibilityOptions
T@"NSString",&,N,V_axOSVersion
T@"NSString",&,N,V_axModel
T@"NSString",&,N,V_axPreferredContentSizeCategoryName
TB,N,V_usesExtendedSlider
_sourceForMidiEndpoint:addIfNeeded:
_destinationForMidiEndpoint:addIfNeeded:
setSources:
setDestinations:
setMidiEntity:
_midiEntity
_sources
_destinations
TI,N,V_midiEntity
T@"NSMutableSet",&,N,V_sources
T@"NSMutableSet",&,N,V_destinations
T@"AXMIDIDevice",W,N,V_device
ax_prettyDescription
_ax_appendPrettyDescriptionToString:indentationString:visitedCollections:
deleteCharactersInRange:
label
setAssertedAccessQueue:
setAlarmTimers:
setAlarmDurationsInSeconds:
startTime
expirationDurationInSeconds
alarmDurationsInSeconds
assertedAccessQueue
canReadInCurrentExecutionThread
timeIntervalSinceNow
setExpirationDurationInSeconds:
_addAlarmForDuration:
_scheduleTimers
timeRestrictionWasCancelled:
_removeAllTimers
setStartTime:
timeDidExpireForTimeRestriction:
setExpirationTimer:
timeAlarmDidOccurForTimeRestriction:
alarmTimers
_removeAllAlarmTimers
_removeExpirationTimer
expirationTimer
initWithAssertedAccessQueue:
remainingTimeInSeconds
beginWithDuration:
pause
resume
_paused
_expirationDurationInSeconds
_alarmDurationsInSeconds
_startTime
_assertedAccessQueue
_expirationTimer
_alarmTimers
TB,N,GisPaused,V_paused
T@"NSDate",&,N,V_startTime
Tq,N,V_expirationDurationInSeconds
T@"AXAccessQueueTimer",&,N,V_expirationTimer
T@"NSMutableSet",&,N,V_alarmDurationsInSeconds
T@"NSMutableArray",&,N,V_alarmTimers
T@"<GAXTimeRestrictionManagerDelegate>",W,N,V_delegate
T@"AXAccessQueue",&,N,V_assertedAccessQueue
headSwitch
productName
manufacturerName
remoteSwitchIdentifier
remoteDeviceName
remoteDeviceIdentifier
accessibilityEventUsagePage
accessibilityEventUsage
accessibilityEventModifierFlags
unsignedShortValue
initWithAction:name:source:type:
hasLongPressAction
localizedSourceDescription
setProductName:
setManufacturerName:
setHeadSwitch:
setAccessibilityEventUsagePage:
setAccessibilityEventUsage:
setAccessibilityEventModifierFlags:
setRemoteSwitchIdentifier:
setRemoteDeviceName:
setRemoteDeviceIdentifier:
_source
_productName
_manufacturerName
_buttonNumber
_headSwitch
_midiEvent
_accessibilityEventUsagePage
_accessibilityEventUsage
_accessibilityEventModifierFlags
_remoteSwitchIdentifier
_remoteDeviceName
_remoteDeviceIdentifier
Tq,N,V_action
Tq,N,V_longPressAction
T@"NSString",C,N,V_name
T@"NSString",&,N,V_source
T@"NSString",&,N,V_type
T@"NSString",C,N,V_productName
T@"NSString",C,N,V_manufacturerName
Tq,N,V_buttonNumber
Tq,N,V_headSwitch
T@"AXMIDIEvent",&,N,V_midiEvent
Tq,N,V_accessibilityEventUsagePage
Tq,N,V_accessibilityEventUsage
Tq,N,V_accessibilityEventModifierFlags
T@"NSString",C,N,V_remoteSwitchIdentifier
T@"NSString",C,N,V_remoteDeviceName
T@"NSString",C,N,V_remoteDeviceIdentifier
arrayWithArray:
_linguisticStringForCharacter:language:linguisticType:andVoiceIdentifier:
setIPASpeechPhonemes:
phonemeStringForCharacter:forLanguage:andVoiceIdentifier:
phoneticStringForCharacter:forLanguage:andVoiceIdentifier:
phDictionaries
setPhDictionaries:
_phDictionaries
T@"NSMutableDictionary",&,N,V_phDictionaries
bundleWithIdentifier:
_path:bundleID:forRescource:
loadImageWithIdentifier:orPath:principalClass:error:
pathWithComponents:
@16@0:8
v16@0:8
v24@0:8@16
B16@0:8
@20@0:8i16
B20@0:8i16
v32@0:8@?16@24
v20@0:8i16
B24@0:8i16B20
@20@0:8B16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
I16@0:8
v20@0:8I16
S16@0:8
v20@0:8S16
C16@0:8
v20@0:8C16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
@"NSArray"
{CGPoint="x"d"y"d}
@24@0:8q16
@28@0:8q16B24
@28@0:8i16@20
@36@0:8i16@20@28
i16@0:8
{?=[8I]}16@0:8
v48@0:8{?=[8I]}16
v24@0:8Q16
v20@0:8B16
@"NSDictionary"
{?="val"[8I]}
@40@0:8@16#24r*32
^v24@0:8@16
i24@0:8@16
I24@0:8@16
q24@0:8@16
Q24@0:8@16
f24@0:8@16
d24@0:8@16
{_NSRange=QQ}24@0:8@16
{CGPoint=dd}24@0:8@16
{CGSize=dd}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
q32@0:8@16#24
v40@0:8@?16@24#32
@32@0:8@16:24
:16@0:8
v24@0:8:16
d16@0:8
v32@0:8@16:24
@"CADisplayLink"
@"NSMutableSet"
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
v24@0:8d16
@"NSString"
{_NSRange="location"Q"length"Q}
v32@0:8@16@?24
^I36@0:8@16B24^q28
@40@0:8@16@24Q32
@32@0:8@16^B24
@32@0:8@16Q24
@?16@0:8
v24@0:8@?16
^{__IOHIDEventSystemClient=}16@0:8
v24@0:8^{__IOHIDEventSystemClient=}16
^{__IOHIDEventSystemClient=}
v24@0:8^v16
v32@0:8@16Q24
v36@0:8@16B24Q28
v52@0:8@16@24B32@36Q44
v24@0:8^{__IOHIDEvent=}16
B36@0:8^{__IOHIDEvent=}16I24@28
v28@0:8@16i24
v60@0:8^v16@24^v32^{__IOHIDEvent=}40@48B56
v52@0:8@16B24B28B32B36B40B44B48
@48@0:8@16B24B28B32B36B40B44
@36@0:8@?16@24i32
@64@0:8@?16@24i32B36B40B44B48B52B56B60
@72@0:8@?16@24i32B36B40B44B48B52B56B60@?64
@40@0:8@?16@24@?32
@"NSMutableArray"
@"NSRecursiveLock"
@32@0:8@16@24
@"<AXAssertionCoordinatorDelegate>"
@"NSObject<OS_dispatch_queue>"
@"NSHashTable"
v36@0:8@16@24i32
v32@0:8@16@24
v28@0:8B16@20
v32@0:8q16@24
v32@0:8Q16@24
q16@0:8
v24@0:8q16
d32@0:8Q16Q24
@"AXDispatchTimer"
@72@0:8@16@24{_NSRange=QQ}32B48B52Q56d64
@76@0:8@16@24{_NSRange=QQ}32B48B52Q56d64B72
@88@0:8@16@24{_NSRange=QQ}32{_NSRange=QQ}48B64B68Q72d80
@192@0:8@16@24B32{_NSRange=QQ}36{_NSRange=QQ}52B68Q72^Q80^B88^B96B104B108Q112^B120d128^B136^@144^@152^B160^{_NSRange=QQ}168^B176q184
@196@0:8@16@24B32{_NSRange=QQ}36{_NSRange=QQ}52B68Q72^Q80^B88^B96B104B108Q112^B120d128^B136^@144^@152^B160^{_NSRange=QQ}168^B176B184q188
@36@0:8@16@24B32
B32@0:8@16^@24
@32@0:8@16^@24
v40@0:8@16@24@?32
@"AXIPCServer"
@"AXIPCClient"
{AXBColorFilterDescription=[3[3d]]}16@0:8
@"<AXBackBoardServerInstanceDelegate>"16@0:8
@"<AXBackBoardServerInstance>"16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16I48I52
{CGPoint=dd}40@0:8{CGPoint=dd}16I32I36
I20@0:8I16
I32@0:8{CGPoint=dd}16
v44@0:8@16B24@28@36
v44@0:8@"AXEventRepresentation"16B24@"NSString"28@"NSArray"36
v40@0:8@16@24@32
v28@0:8@16B24
{CGRect={CGPoint=dd}{CGSize=dd}}52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16I48
{CGPoint=dd}36@0:8{CGPoint=dd}16I32
v52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16I48
{CGRect={CGPoint=dd}{CGSize=dd}}20@0:8I16
v40@0:8@16Q24@?32
Q24@0:8^@16
@"NSMutableDictionary"
@24@0:8@?16
q32@0:8@16@24
@60@0:8@16@24B32@36q44@52
@32@0:8@16@?24
@"AXIPCMessage"
@28@0:8I16@20
@"NSObject<OS_dispatch_source>"
@"<AXIPCServerClientRegistrationDelegate>"
@36@0:8@16:24B32
v24@0:8@"AXIPCServerClientRegistration"16
@28@0:8@16B24
@28@0:8I16^{__CFRunLoopSource=}20
v24@0:8^{__CFRunLoopSource=}16
B24@0:8^@16
v28@0:8@?16i24
v36@0:8i16@20*28
v36@0:8@16:24i32
v40@0:8@16:24B32i36
v44@0:8@16:24i32@36
v48@0:8@16:24B32i36@40
B68@0:8I16{?=[8I]}20@52@?60
B56@0:8{?=[8I]}16@48
v76@0:8@16{?=[2I]}24{?=[8I]}32I64@?68
@48@0:8{?=[8I]}16
^{__CFRunLoopSource=}
@40@0:8@?16d24@32
@"AXAccessQueueTimer"
@20@0:8I16
@36@0:8I16@20@?28
^{__CFRunLoopSource=}16@0:8
B40@0:8@16^@24@?32
B36@0:8@16I24^@28
B32@0:8@16@?24
B40@0:8@16@24@?32
v32@0:8d16@?24
B36@0:8@16i24^@28
^{__CFMachPort=}16@0:8
v24@0:8^{__CFMachPort=}16
f16@0:8
v20@0:8f16
^{__CFMachPort=}
@"NSLock"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"AXAccessQueue"
v24@0:8^{__IOHIDDevice=}16
@24@0:8^{__IOHIDDevice=}16
@"NSRunLoop"
^{__IOHIDManager=}
@"<AXDeviceMonitorDelegate>"
@"AXMIDIDeviceEntity"
B24@0:8q16
B32@0:8q16@24
v48@0:8@16@24d32@?40
v32@0:8@"AXMIDIDeviceEntity"16@"AXMIDIDeviceEntityEndpoint"24
@24@0:8I16B20
@"<AXMIDIDeviceProtocol>"
@"NSNumber"
v40@0:8@?16@24^@32
@40@0:8@16#24@32
B32@0:8@16@24
@"NSUUID"
@"NSSet"
v40@0:8@?16@?24@?32
v48@0:8@?16@?24@?32@?40
v48@0:8@?16d24@32@40
v24@0:8B16B20
B40@0:8@16@24@32
B40@0:8@16@24r*32
B48@0:8@16@24@32r*40
B44@0:8@16@24@32i40
B60@0:8@16@24@32i40@44@52
B56@0:8@16@24@32r*40*48
B56@0:8@16@24@32@40r*48
B64@0:8@16@24@32@40@48r*56
B40@0:8@16@24B32B36
B48@0:8@16@24@32B40B44
v36@0:8i16#20@?28
@24@0:8^{objc_method=}16
v52@0:8@16@24i32@36@44
v24@0:8#16
v40@0:8i16#20^^{objc_method}28I36
B28@0:8@16B24
v48@0:8@16@24@32@40
@"<AXValidationReportingServices>"
@24@0:8^{?=CCCff{CGPoint=dd}I^v}16
v24@0:8^{?=CCCff{CGPoint=dd}I^v}16
^v16@0:8
{CGSize=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@32@0:8{CGPoint=dd}16
@32@0:8{CGSize=dd}16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8@"<AXImageMonitor>"16@"NSString"24
v24@0:8@"<AXImageMonitor>"16
v40@0:8q16@?24@32
@40@0:8@16q24@32
@"<AXImageMonitor>"
@32@0:8@16#24
^?24@0:8:16
@24@0:8#16
v24@0:8^{CGPath=}16
^{CGPath=}16@0:8
^{CGPath=}
@32@0:8@16q24
v48@0:8@16@24@32q40
v40@0:8@16@24q32
v48@0:8@16{_NSRange=QQ}24@40
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
B40@0:8@16d24^@32
B32@0:8d16^@24
B24@0:8d16
B24@0:8Q16
B28@0:8d16B24
@24@0:8Q16
q20@0:8B16
v36@0:8q16B24Q28
B28@0:8B16Q20
B32@0:8q16^@24
@"AVSpeechUtterance"
@"<AXOratorDelegate>"
@"AXLanguageTaggedContent"
@"AVSpeechSynthesizer"
@"AXLanguageTag"
S24@0:8^{__IOHIDEvent=}16
@24@0:8^{__IOHIDEvent=}16
v24@0:8@?<v@?@"NSString">16
@"NSSet"16@0:8
v24@0:8@"<AXImageMonitorObserver>"16
@84@0:8f16{CGRect={CGPoint=dd}{CGSize=dd}}20{CGRect={CGPoint=dd}{CGSize=dd}}52
@20@0:8f16
d24@0:8d16
@80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
@60@0:8@16B24B28B32@36@44@52
@"AXDialectMap"
B24@0:8S16B20
B24@0:8I16B20
B28@0:8q16B24
B48@0:8@16S24I28q32@40
v24@0:8^{__IOHIDValue=}16
^{__IOHIDDevice=}16@0:8
^{__IOHIDManager=}16@0:8
v24@0:8^{__IOHIDManager=}16
@"<AXSwitchRegistrarDelegate>"
@"AXSwitch"
^{__IOHIDDevice=}
@"AXMIDIManager"
@"AXReplayableGesture"
@56@0:8@16@24@32@40@48
B20@0:8S16
B20@0:8I16
@"AXLangMap"
@"NSLocale"
@"NSCharacterSet"
@20@0:8S16
@28@0:8S16@20
@40@0:8@?16@?24@32
@32@0:8S16@20B28
@52@0:8@16{_NSRange=QQ}24@40B48
@"NSMutableOrderedSet"
^{?=if}28@0:8f16@20
@"NSMutableString"
v32@0:8d16@?<v@?>24
v40@0:8d16@?24@?32
@"NSThread"
@"AXThreadTimerTask"
^{__GSKeyboard=}16@0:8
C20@0:8C16
@72@0:8I16i20Q24{CGPoint=dd}32{CGPoint=dd}48@64
@32@0:8^{__IOHIDEvent=}16@24
v36@0:8@16q24B32
@52@0:8^{__IOHIDEvent=}16^{__IOHIDServiceClient=}24@32@40I48
@56@0:8{CGPoint=dd}16{CGPoint=dd}32@48
@40@0:8^{__IOHIDEvent=}16^{__IOHIDServiceClient=}24@32
@44@0:8^{__IOHIDEvent=}16@24@32I40
@36@0:8I16{CGPoint=dd}20
@40@0:8q16q24q32
@48@0:8q16q24q32q40
@56@0:8q16q24q32q40f48f52
B24@0:8^{__IOHIDEvent=}16
^{__IOHIDEvent=}16@0:8
^{__IOHIDEvent=}20@0:8I16
@24@0:8B16B20
C32@0:8{CGPoint=dd}16
^{__IOHIDEvent=}24@0:8^{__IOHIDEvent=}16
^{__IOHIDServiceClient=}16@0:8
v24@0:8^{__IOHIDServiceClient=}16
@"AXEventHandInfoRepresentation"
@"AXEventKeyInfoRepresentation"
@"AXEventAccelerometerInfoRepresentation"
@"AXEventGameControllerInfoRepresentation"
@"AXEventPointerInfoRepresentation"
@"AXEventIOSMACPointerInfoRepresentation"
@"NSData"
^{__IOHIDEvent=}
^{__IOHIDServiceClient=}
@"AXEventData"
^{__CFString=}20@0:8i16
v32@0:8^i16Q24
@40@0:8@16@24B32B36
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v40@0:8^B16^B24^d32
@40@0:8@16q24^B32
B32@0:8@16q24
v32@0:8@16q24
v28@0:8f16@20
v44@0:8@16@24@32B40
@40@0:8@16@24q32
@32@0:8r^{MIDIPacketList=I[1{MIDIPacket=QS[256C]}]}16^@24
q20@0:8C16
Q24@0:8q16
S20@0:8C16
@44@0:8@16q24@32S40
@24@0:8^@16
v40@0:8q16@24@?32
@"NSBundle"
{?="isDyldOpened"b1}
@"AXCodeItem"
d24@0:8Q16
{CGPoint=dd}32@0:8@16Q24
d32@0:8@16Q24
v40@0:8@16@24d32
v56@0:8{CGPoint=dd}16d32@40d48
v56@0:8{CGPoint=dd}16d32@40Q48
@40@0:8@16@24@32
@40@0:8^@16^Q24Q32
^Q24@0:8^Q16
^{__CFDictionary=}
@"NSTimer"
v32@0:8@"AXMIDIDevice"16@"AXMIDIDeviceEntity"24
v40@0:8@"AXMIDIDevice"16@"AXMIDIDeviceEntity"24@"AXMIDIDeviceEntityEndpoint"32
v24@0:8^{MIDIObjectAddRemoveNotification=iIIiIi}16
v24@0:8^{MIDIObjectPropertyChangeNotification=iIIi^{__CFString}}16
v24@0:8^{MIDIIOErrorNotification=iIIi}16
@"AXMIDIParser"
@36@0:8q16@24B32
@36@0:8{CGPoint=dd}16B32
@"AXIndexMap"
@32@0:8*16q24
*16@0:8
{_AXEventDataStorage="eventSenderIdentifier"q"page"q"usage"q"modifierFlags"q"eventValue1"f"eventValue2"f}
{AXLogColorTheme=qqqq}16@0:8
*24@0:8q16
v48@0:8{AXLogColorTheme=qqqq}16
{AXLogColorTheme="errorColor"q"warningColor"q"infoColor"q"debugColor"q}
@68@0:8@?16@24q32d40B48@52@?60
@"NSError"
v68@0:8@16q24d32B40@44@?52@?60
@40@0:8@16i24@28i36
v40@0:8@16@24B32B36
@"AXMIDIDevice"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@"NSDate"
@"<GAXTimeRestrictionManagerDelegate>"
@48@0:8q16@24@32@40
@"AXMIDIEvent"
@48@0:8@16@24q32@40
@48@0:8@16@24^#32^@40
@40@0:8Q16^#24^@32
v40@0:8^@16^@24Q32
?ffffff
?333333
