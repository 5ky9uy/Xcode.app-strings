>333333
viewWillTransitionToSize:withTransitionCoordinator:
view
layer
transform
setSublayerTransform:
sublayers
countByEnumeratingWithState:objects:count:
bounds
setPosition:
animateAlongsideTransition:completion:
_shouldForwardViewWillTransitionToSize
shouldAutorotate
initWithCaptureStore:shouldCreateViewController:
initWithCaptureStore:
initWithNibName:bundle:
setBackgroundColor:
setOpaque:
mainScreen
setFrame:
scale
setContentsScale:
addSublayer:
setBounds:
setProperties:forLayer:
deleteLayer:
newLayer
_applyInterfaceOrientationToTransform:
setTransform:
_setupLayer:contentRect:contentsScale:properties:isCoreAnimationSurface:
count
setDisableActions:
setAnimationDuration:
setHidden:
contentsScale
layerHasSameProperties:layer:
removeFromSuperlayer
layerForID:
_convertToCATransform3D:
_convertToCGPoint:
setAnchorPoint:
doesNotRecognizeSelector:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
createLayerWithID:contentRect:contentsScale:properties:isCoreAnimationSurface:
updateLayer:contentRect:contentsScale:properties:
currentTopLayer
setTransform:forLayerID:withScreenToLayerScale:
setPosition:forLayerID:
setAnchorPoint:forLayerID:
setInterfaceOrientation:
boundsForCurrentInterfaceOrientation
defaultContentsScale
resetLayersVisibility
prepareLayerForPresent:
applyLayersVisibility
viewController
.cxx_destruct
.cxx_construct
_viewController
_hostLayer
_hostLayerSublayersVisibilityMap
_layerMap
_coreAnimationLayerMap
_screenCenter
_topLayer
_interfaceOrientation
animationTimingFunction
animationDuration
disableActions
completionBlock
copy
flush
setAnimationTimingFunction:
setCompletionBlock:
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
-[DYiOSPlaybackEngine initWithCaptureStore:shouldCreateViewController:]
pthread_main_np()
-[DYiOSPlaybackEngine createLayerWithID:contentRect:contentsScale:properties:isCoreAnimationSurface:]
contentsScale != 0.0
-[DYiOSPlaybackEngine prepareLayerForPresent:]
layer
-[DYiOSPlaybackEngine updateLayer:contentRect:contentsScale:properties:]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
viewController
T@"UIViewController",R,N,V_viewController
DYPlaybackViewController
DYiOSPlaybackEngine
DYLayerManager
NSObject
B16@0:8
v40@0:8{CGSize=dd}16@32
{CATransform3D=dddddddddddddddd}24@0:8r^{Argument=^vIIISS}16
{CGPoint=dd}24@0:8r^{Argument=^vIIISS}16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@76@0:8Q16{CGRect={CGPoint=dd}{CGSize=dd}}24d56@64B72
v72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24d56@64
@24@0:8Q16
v24@0:8Q16
v40@0:8r^{Argument=^vIIISS}16Q24r^{pair<double, double>=}32
v32@0:8r^{Argument=^vIIISS}16Q24
v20@0:8i16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
d16@0:8
v16@0:8
v24@0:8@16
@"CALayer"76@0:8Q16{CGRect={CGPoint=dd}{CGSize=dd}}24d56@"NSDictionary"64B72
v72@0:8@"CALayer"16{CGRect={CGPoint=dd}{CGSize=dd}}24d56@"NSDictionary"64
@"CALayer"24@0:8Q16
@"CALayer"16@0:8
v24@0:8@"CALayer"16
@24@0:8@16
@28@0:8@16B24
v76@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24d56@64B72
B32@0:8@16@24
v32@0:8@16@24
{CATransform3D=dddddddddddddddd}144@0:8{CATransform3D=dddddddddddddddd}16
@"UIViewController"
@"CALayer"
{map<CALayer *__unsafe_unretained, bool, std::__1::less<CALayer *__unsafe_unretained>, std::__1::allocator<std::__1::pair<CALayer *const __unsafe_unretained, bool> > >="__tree_"{__tree<std::__1::__value_type<CALayer *__unsafe_unretained, bool>, std::__1::__map_value_compare<CALayer *__unsafe_unretained, std::__1::__value_type<CALayer *__unsafe_unretained, bool>, std::__1::less<CALayer *__unsafe_unretained>, true>, std::__1::allocator<std::__1::__value_type<CALayer *__unsafe_unretained, bool> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<CALayer *__unsafe_unretained, bool>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<CALayer *__unsafe_unretained, std::__1::__value_type<CALayer *__unsafe_unretained, bool>, std::__1::less<CALayer *__unsafe_unretained>, true> >="__value_"Q}}}
{map<unsigned long long, CALayer *, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, CALayer *> > >="__tree_"{__tree<std::__1::__value_type<unsigned long long, CALayer *>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, CALayer *>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, CALayer *> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, CALayer *>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, CALayer *>, std::__1::less<unsigned long long>, true> >="__value_"Q}}}
{map<CALayer *, bool, std::__1::less<CALayer *>, std::__1::allocator<std::__1::pair<CALayer *const, bool> > >="__tree_"{__tree<std::__1::__value_type<CALayer *, bool>, std::__1::__map_value_compare<CALayer *, std::__1::__value_type<CALayer *, bool>, std::__1::less<CALayer *>, true>, std::__1::allocator<std::__1::__value_type<CALayer *, bool> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<CALayer *, bool>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<CALayer *, std::__1::__value_type<CALayer *, bool>, std::__1::less<CALayer *>, true> >="__value_"Q}}}
{CGPoint="x"d"y"d}
