I@333333
P@333333
T@333333
initWithFrame:
setContentMode:
addSubview:
init
bounds
setFrame:
setProgress:animated:
_focusedProgressColor
setTintColor:
whiteColor
setBackgroundColor:
layer
setCornerRadius:
setShadowPath:
blackColor
CGColor
setShadowColor:
setShadowOffset:
setShadowOpacity:
setShadowRadius:
_panUpdated:
initWithTarget:action:
_setHysteresis:
addGestureRecognizer:
layoutSubviews
minValueIconView
maxValueIconView
semanticContentAttribute
userInterfaceLayoutDirectionForSemanticContentAttribute:
frame
_progressCenter
convertPoint:fromView:
setCenter:
setValue:animated:
minimumValue
maximumValue
setProgress:
setNeedsLayout
layoutIfNeeded
animateWithDuration:animations:
setImage:
state
locationInView:
effectiveUserInterfaceLayoutDirection
value
setValue:
isContinuous
sendActionsForControlEvents:
initWithWhite:alpha:
canBecomeFocused
intrinsicContentSize
sizeThatFits:
setMinimumValueImage:
setMaximumValueImage:
setMaxBarWidth:
maxBarWidth
shouldTrack
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
_menuPressed
_unfocusedProgressColor
.cxx_destruct
setMinimumValue:
setMaximumValue:
minimumValueImage
maximumValueImage
progressBarView
setContinuous:
thumbView
lastThumbLocation
_maxBarWidth
_continuous
_value
_minimumValue
_maximumValue
_minimumValueImage
_maximumValueImage
_progressBarView
_minValueIconView
_maxValueIconView
_thumbView
_lastThumbLocation
initWithEndpointRoute:
initWithRoute:
routeConnection
_metadataDidChange:forKeys:
registerMetadataUpdateHandler:
connectionState
addObserver:forKeyPath:options:context:
isDeviceRoute
routeUID
tvnp_deviceType
initWithGroupRoute:outputDeviceRoute:
initWithDataSource:
setDelegate:
isConnected
isVolumeControlAvailable
isDeviceSpeakerRoute
volumeValue
numberWithFloat:
refreshPropertiesWithRoute:
removeObserver:forKeyPath:context:
deregisterMetadataUpdateHandler:
dealloc
description
stringWithFormat:
isPaired
setWithObject:
copy
floatValue
setVolumeValue:
routeName
currentDevice
name
setRoute:
isEqual:
willChangeValueForKey:
didChangeValueForKey:
_updateVolume
playPause
connectAndPair
setConnectionState:
observeValueForKeyPath:ofObject:change:context:
title
album
artist
length
setTitle:
setSingleLineTitle:
setSubtitle:
containsObject:
artworkImage
playbackState
_playbackStateForMPCPlaybackState:
setPlaybackState:
bundleID
isEqualToString:
setNowPlayingBundleIdentifier:
keyPathsForValuesAffectingConnected
keyPathsForValuesAffectingDisconnected
keyPathsForValuesAffectingPaired
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
volumeController:volumeControlAvailableDidChange:
volumeController:volumeControlCapabilitiesDidChange:
volumeController:volumeControlLabelDidChange:
volumeController:volumeValueDidChange:
volumeController:mutedStateDidChange:
volumeController:volumeWarningStateDidChange:
volumeController:EUVolumeLimitDidChange:
volumeController:EUVolumeLimitEnforcedDidChange:
setIsCurrentDestination:
isDisconnected
setVolumeLevel:
togglePlayPause
endpointRoute
volumeController
routeConnectionObserverToken
_endpointRoute
_routeConnection
_volumeController
_routeConnectionObserverToken
_connectionState
initWithNibName:bundle:
initialFetchGroup
initWithOutputContextUID:allowsRetargeting:initalFetchCompletion:
view
window
makeKeyWindow
objectForKeyedSubscript:
boolValue
setAllowsRetargeting:
presentationEnded
routingController
initWithRoutingController:options:
presentViewController:animated:completion:
dismissViewControllerAnimated:completion:
viewServiceBeginPresentationWithOptions:
viewServiceEndPresentationWithOptions:completion:
_exportedInterface
viewServiceBeginPresentationWithOptions:completion:
viewServiceUpdatePresentationWithOptions:
viewServiceHandleMessage:reply:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
dismissWithResult:
_remoteViewControllerProxy
_remoteViewControllerInterface
viewControllerDidRequestDismissal:cancelled:
setInitialFetchGroup:
setPresentationEnded:
_presentationEnded
_initialFetchGroup
_routingController
initWithCollectionViewLayout:
initWithIdentifier:
currentDestination
volumeLevel
numberWithDouble:
relinquish
setObservingChanges:
setConnectingRoutingDestination:
viewDidLoad
collectionView
setContentInsetAdjustmentBehavior:
setIndexDisplayMode:
registerClass:forCellWithReuseIdentifier:
setClipsToBounds:
viewWillAppear:
sharedConnection
bulletinServiceProxy
allowsDestinationSelection
availableDestinations
uniqueIdentifier
indexOfObjectPassingTest:
objectAtIndexedSubscript:
setCurrentDestination:
viewDidDisappear:
viewDidLayoutSubviews
indexPathForItem:inSection:
collectionViewLayout
targetContentOffsetForIndexPath:
setContentOffset:animated:
count
addObject:
setEnabled:
invalidateItemsAtIndexPaths:
invalidateLayoutWithContext:
_animateUsingDefaultTimingWithOptions:animations:completion:
bundleForClass:
localizedStringForKey:value:table:
destinationName
localizedStringWithFormat:
alertControllerWithTitle:message:preferredStyle:
actionWithTitle:style:handler:
addAction:
availableRoutes
countByEnumeratingWithState:objects:count:
selectionState
tvnp_changesForResultingArray:
tvnp_applyChanges:inSection:
performBatchUpdates:completion:
acquire
valueForKey:
null
currentRoutes
_ignoreVolumeChangesWhilePendingSelection
_presentVolumeBulletinForDestination:
_showConnectionFailedAlertControllerForRoutingDestination:
dequeueReusableCellWithReuseIdentifier:forIndexPath:
item
setDestination:
useFocusedAppearance
didUpdateFocusInContext:withAnimationCoordinator:
nextFocusedIndexPath
animateWithDuration:delay:options:animations:completion:
objectAtIndex:
_indexPathForCurrentDestination
targetDestination:
isMainThread
viewControllerDelegate
sharedApplication
URLWithString:
openURL:options:completionHandler:
systemServiceProxy
presentNowPlayingWithOptions:completion:
numberWithBool:
initWithObjectsAndKeys:
nowPlayingBundleIdentifier
setObject:forKey:
setVolumeBulletin:
numberWithUnsignedInteger:
numberWithInteger:
dictionaryWithObjects:forKeys:count:
volumeBulletin
message
setMessage:
setViewControllerClassName:
setServiceIdentifier:
presentBulletin:withCompletion:
xpcUpdateBulletin:withMessage:withCompletion:
indexOfObject:
bulletinService:didDismissBulletin:withReason:
initWithCollectionViewLayout:routingController:options:initialUIDProvider:
handleVolumeUp
handleVolumeDown
setVolumeEditingInProgress:
numberOfSectionsInCollectionView:
collectionView:numberOfItemsInSection:
collectionView:cellForItemAtIndexPath:
collectionView:didUpdateFocusInContext:withAnimationCoordinator:
collectionView:targetContentOffsetForProposedContentOffset:
collectionView:didSelectItemAtIndexPath:
indexPathForPreferredFocusedViewInCollectionView:
setViewControllerDelegate:
volumeEditingInProgress
volumeAssertion
shouldFocusInitialIndex
initialFocusIndex
observingChanges
initiatedByPicker
destinationForVolume
setDestinationForVolume:
volumeUpdateQueue
setVolumeUpdateQueue:
connectingRoutingDestination
initialUIDProvider
setInitialUIDProvider:
_volumeEditingInProgress
_shouldFocusInitialIndex
_observingChanges
_initiatedByPicker
_viewControllerDelegate
_volumeAssertion
_initialFocusIndex
_destinationForVolume
_volumeBulletin
_volumeUpdateQueue
_connectingRoutingDestination
_initialUIDProvider
prepareForReuse
setTitleText:
deviceType
setDeviceType:
setDisplayAsSelected:
_updateMusicBarState
_updateVolumeState
_updateMultiSelectionState
destination
isCurrentDestination
canBeGrouped
setMusicBarState:
singleLineTitle
setSubtitleText:
setAllowsGrouping:
volumeSliderValueChanged:
route
_route
automaticallyNotifiesObserversForKey:
initWithOutputContextUID:allowsRetargeting:
sharedInstance
reloadHomeConfiguration
initWithDataSource:name:
setRoutingContextUID:
setDiscoveryMode:
fetchAvailableRoutesWithCompletionHandler:
_updateAvailableRoutes
setEndpointRoute:
_updateWithAvailableEndpoints:outputDevices:
_updateAllowsDestinationSelection
pickedRoutes
pendingPickedRoutes
supportsMultipleSelection
firstObject
supportsGrouping
anyObject
localAccessory
room
hmRoom
accessories
mediaProfile
outputDeviceRoute
isPicked
selectRoute:operation:completion:
pickRoute:
setActiveRoute:completion:
_setNeedsDisplayedRoutesUpdate
objectForKey:
endpoint
removeAllObjects
isLocal
securityType
logicalLeaderOutputDevice
updateWithOutputDevice:selectionState:destination:
localizedCompare:
sortDescriptorWithKey:ascending:selector:
compare:
arrayWithObjects:count:
sortUsingDescriptors:
canModifyGroupMembership
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
pickRoute:forDestination:
unpickRoute:forDestination:
discoveryMode
setOutputContextUID:
outputContextUID
allowsRetargeting
endpointRoutingDataSource
outputDeviceRoutingDataSource
endpointRoutingController
outputDeviceRoutingController
outputDeviceIdentifiersToRoutes
endpointIdentifiersToDestinations
allOutputDevices
allEndpoints
currentEndpointRouteUID
updateQueue
numberOfUpdates
needsAvailableRoutesUpdate
multipleSelectionEnabled
_allowsDestinationSelection
_allowsRetargeting
_needsAvailableRoutesUpdate
_multipleSelectionEnabled
_availableDestinations
_availableRoutes
_currentDestination
_currentRoutes
_discoveryMode
_outputContextUID
_endpointRoutingDataSource
_outputDeviceRoutingDataSource
_endpointRoutingController
_outputDeviceRoutingController
_outputDeviceIdentifiersToRoutes
_endpointIdentifiersToDestinations
_allOutputDevices
_allEndpoints
_currentEndpointRouteUID
_updateQueue
_numberOfUpdates
alloc
UUID
UUIDString
imageKeyForObject:
imageWithData:
errorWithDomain:code:userInfo:
cancelLoad:
URLForObject:
hasImageCache
loadImageForObject:scaleToSize:cropToFit:completionHandler:
loadImageForObject:scaleToSize:cropToFit:imageDirection:completionHandler:
loadImageForObject:scaleToSize:cropToFit:imageDirection:requestLoader:completionHandler:
setImageData:
imageIdentifier
imageData
_decodedImage
_imageIdentifier
_imageData
subtitle
image
setDestinationName:
setUniqueIdentifier:
effectiveDeviceType
_title
_subtitle
_singleLineTitle
_image
_destinationName
_isCurrentDestination
_local
_playbackState
_effectiveDeviceType
_uniqueIdentifier
_volumeLevel
_nowPlayingBundleIdentifier
_paired
_connected
_disconnected
initWithName:
stopped
dictionary
invalidate
_callElapsedTimeObserversDueToTimeJump:
changeMediaInDirection:reason:
commandDelegate
metadataPlayerSentCommand:withOptions:
scanning
playing
play
pause
paused
defaultCenter
postNotificationName:object:
stop
setElapsedTime:
elapsedTimeObserverBlocks
removeObjectForKey:
initWithMediaItems:index:isCollection:
setPlaylist:
currentMediaItem
postNotificationName:object:userInfo:
_rateForState:
rateUsedForPlayback
date
timeIntervalSinceDate:
rate
elapsedTime
setObject:forKeyedSubscript:
_updateElapsedTimeTimer
setLastElapsedTime:atTimestamp:
_fireElapsedTimeUpdate:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
changeMediaInDirection:
continueLoadingCurrentItem
playIgnoringDelegate:
pauseIgnoringDelegate:
pauseWithVolumeRampDuration:
scanWithRate:
stopWithVolumeRampDuration:
setElapsedTime:precise:
setElapsedTime:seekPrecision:
setElapsedTime:seekPrecision:ignoreDelegate:
addElapsedTimeObserver:
removeElapsedTimeObserverWithToken:
addBoundaryTimeObserverForTimes:withHandler:
addBoundaryTimeObserverForDates:withHandler:
removeBoundaryTimeObserverWithToken:
skipToNextChapterInDirection:
setSelectedSubtitleOption:setGlobalPreference:
updateSubtitleOptions
currentMediaItemSupportsScrubbingUsingPlayer
delegate
asyncDelegate
setAsyncDelegate:
playlist
setCurrentMediaItem:
currentMediaItemPreparedForLoading
currentMediaItemInitialLoadingComplete
currentMediaItemHasVideoContent
currentMediaItemIsStreaming
currentMediaItemPresentationSize
currentMediaItemHasDates
errorBehavior
setErrorBehavior:
interactive
setInteractive:
setRateUsedForPlayback:
waitsAfterPreparingMediaItems
setWaitsAfterPreparingMediaItems:
playbackDate
setPlaybackDate:
duration
isLive
muted
setMuted:
volume
setVolume:
chapterCollections
currentChapterCollection
setCurrentChapterCollection:
currentChapter
currentInterstitial
bufferedTimeRange
seekableTimeRange
seekableDateRange
forwardPlaybackEndTime
reversePlaybackEndTime
mediaItemEndAction
setMediaItemEndAction:
audioOptions
selectedAudioOption
setSelectedAudioOption:
subtitleOptions
selectedSubtitleOption
setSelectedSubtitleOption:
maximumBitRate
setMaximumBitRate:
preventsSleepDuringVideoPlayback
setPreventsSleepDuringVideoPlayback:
updatesMediaRemoteInfoAutomatically
setUpdatesMediaRemoteInfoAutomatically:
limitReadAhead
setLimitReadAhead:
changeToMediaAtIndex:reason:
setState:
setDuration:
setCommandDelegate:
lastChangeDirection
setLastChangeDirection:
initiatedSkip
setInitiatedSkip:
setElapsedTimeObserverBlocks:
isScanningForward
setIsScanningForward:
_lastUpdateTimestamp
_lastElapsedTime
_elapsedTimeTimer
_muted
_interactive
_waitsAfterPreparingMediaItems
_currentMediaItemHasDates
_currentMediaItemInitialLoadingComplete
_currentMediaItemPreparedForLoading
_preventsSleepDuringVideoPlayback
_updatesMediaRemoteInfoAutomatically
_isLive
_limitReadAhead
_initiatedSkip
_isScanningForward
_volume
_name
_rate
_rateUsedForPlayback
_playlist
_state
_duration
_errorBehavior
_playbackDate
_chapterCollections
_currentChapter
_bufferedTimeRange
_seekableDateRange
_currentChapterCollection
_mediaItemEndAction
_audioOptions
_selectedAudioOption
_subtitleOptions
_selectedSubtitleOption
_maximumBitRate
_delegate
_asyncDelegate
_seekableTimeRange
_currentInterstitial
_forwardPlaybackEndTime
_reversePlaybackEndTime
_commandDelegate
_lastChangeDirection
_elapsedTimeObserverBlocks
_currentMediaItemPresentationSize
setOpaque:
_fillSize
tintColor
tintColorDidChange
setNeedsDisplay
progress
drawRect:
_progress
_init
setRouteUID:
setLocal:
setSelectionState:
setCanBeGrouped:
isSilentPrimary
setSilentPrimary:
_routeUID
_deviceType
_canBeGrouped
_selectionState
_destination
_silentPrimary
_configureFloatingContentViewAppearance
setContentMotionRotation:translation:
setTranslatesAutoresizingMaskIntoConstraints:
contentView
colorWithWhite:alpha:
_iconImageForDeviceType:focused:
initWithImage:
preferredFontForTextStyle:
setFont:
setContentHuggingPriority:forAxis:
setHidden:
_volumeImage:
addTarget:action:forControlEvents:
addLayoutGuide:
_addInitialConstraints
_configureAppearanceForControlState:withAnimationCoordinator:
setNeedsUpdateConstraints
updateFocusIfNeeded
alpha
setShowingVolumeSlider:
nextFocusedView
isDescendantOfView:
_controlStateForCell
setHighlighted:
updateConstraints
subtitleText
musicBarState
firstBaselineAnchor
topAnchor
constraintEqualToAnchor:constant:
centerXAnchor
constraintEqualToAnchor:
leadingAnchor
trailingAnchor
constraintLessThanOrEqualToAnchor:constant:
addObjectsFromArray:
constraintGreaterThanOrEqualToAnchor:constant:
widthAnchor
constraintEqualToConstant:
heightAnchor
centerYAnchor
isEqualToArray:
deactivateConstraints:
activateConstraints:
traitCollectionDidChange:
displayScale
traitCollection
controlState
applyLayoutAttributes:
isEnabled
isShowingVolumeSlider
setNeedsFocusUpdate
setText:
_checkmarkImage:focused:
setAlpha:
appearanceWhenContainedInInstancesOfClasses:
configurationWithStyle:
setFocusAnimationConfiguration:
setContinuousCornerEnabled:
bottomAnchor
constraintLessThanOrEqualToAnchor:
lastBaselineAnchor
isSelected
isHighlighted
displayAsSelected
setTextColor:
setControlState:withAnimationCoordinator:
addCoordinatedAnimations:completion:
setControlState:animated:
text
setMarqueeEnabled:
setMarqueeRunning:
tvnp_imageNameForDeviceType:
tintedImageWithName:tintColor:
imageFlippedForRightToLeftLayoutDirection
preferredFocusEnvironments
setSelected:
titleText
allowsGrouping
floatingContentView
backgroundColorView
iconView
checkmarkView
musicBarsView
titleLabel
subtitleLabel
volumeProgressView
volumeSliderView
layoutGuide
volatileContraints
_isFocused
_allowsGrouping
_displayAsSelected
_showingVolumeSlider
_enabled
_titleText
_subtitleText
_musicBarState
_floatingContentView
_backgroundColorView
_iconView
_checkmarkView
_musicBarsView
_titleLabel
_subtitleLabel
_volumeProgressView
_volumeSliderView
_layoutGuide
_volatileContraints
initWithCapacity:
setAnchorPoint:
willMoveToWindow:
_updateInternalState
_removeAnimations
_setSubviewsHidden:
_setBarHeights:
_addAnimationsWithRepeatCount:
setInternalState:
valueWithCGRect:
setKeyPath:
setValues:
setKeyTimes:
setSpeed:
setRepeatCount:
addAnimation:forKey:
enumerateObjectsUsingBlock:
removeAllAnimations
canAnimate
setCanAnimate:
internalState
barViews
_canAnimate
_internalState
_barViews
setMediaItemMetadata:forProperty:
removeMediaItemMetadataForProperty:
mediaItemMetadataForProperty:
imageLoader
initWithObject:imageLoader:groupType:
setCacheOnLoad:
setWriteToAssetLibrary:
replaceMediaItemMetadata:forProperty:
setImageLoader:
_imageLoader
_destinationLayout
_routesLayout
initWithCollectionViewLayout:routingController:
setModalPresentationStyle:
addObserver:selector:name:object:
removeObserver:name:object:
setTextAlignment:
_updateTitleView
addChildViewController:
didMoveToParentViewController:
_baselineOffsetFromBottom
didPressMenu:
setAllowedPressTypes:
setNumberOfTapsRequired:
didPressPlayPause:
viewDidAppear:
viewWillDisappear:
_updateHintText
isViewLoaded
focusedRoute
imageNamed:inBundle:compatibleWithTraitCollection:
initWithData:ofType:
stringWithCharacters:length:
initWithString:attributes:
numberWithInt:
rangeOfString:
replaceCharactersInRange:withAttributedString:
string
mutableCopy
replaceCharactersInRange:withString:
setAttributedText:
setScrollDirection:
setItemSize:
setMinimumInteritemSpacing:
setMinimumLineSpacing:
mainScreen
itemSize
setSectionInset:
setEstimatedItemSize:
setTopGradientHeight:
setBottomGradientHeight:
routingViewControllerWillBeginEditingVolume:
routingViewControllerWillEndEditingVolume:
editingVolume
playPauseAssertion
titleView
hintView
destinationsCollectionViewController
routesCollectionViewController
_editingVolume
_playPauseAssertion
_titleView
_hintView
_destinationsCollectionViewController
_routesCollectionViewController
routeType
avRouteDescription
isAppleTVRoute
routeSubtype
isStereoPair
isHomePodRoute
isAirpodsRoute
isPowerbeatsRoute
isBeatsSoloRoute
isBeatsXRoute
tvnp_shouldShowRoute
tvnp_largeImageNameForDeviceType:
minimumLineSpacing
section
numberOfItemsInSection:
layoutAttributesForElementsInRect:
layoutAttributesForItemAtIndexPath:
layoutAttributesClass
invalidationContextClass
copyWithZone:
invalidateVolumeSliderLayoutAttributes
array
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
collectionView:shouldHighlightItemAtIndexPath:
collectionView:didHighlightItemAtIndexPath:
collectionView:didUnhighlightItemAtIndexPath:
collectionView:shouldSelectItemAtIndexPath:
collectionView:shouldDeselectItemAtIndexPath:
collectionView:didDeselectItemAtIndexPath:
collectionView:willDisplayCell:forItemAtIndexPath:
collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:
collectionView:didEndDisplayingCell:forItemAtIndexPath:
collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:
collectionView:shouldShowMenuForItemAtIndexPath:
collectionView:canPerformAction:forItemAtIndexPath:withSender:
collectionView:performAction:forItemAtIndexPath:withSender:
collectionView:transitionLayoutForOldLayout:newLayout:
collectionView:canFocusItemAtIndexPath:
collectionView:shouldUpdateFocusInContext:
collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:
collectionView:shouldSpringLoadItemAtIndexPath:withContext:
collectionView:shouldBeginMultipleSelectionInteractionAtIndexPath:
collectionView:didBeginMultipleSelectionInteractionAtIndexPath:
collectionViewDidEndMultipleSelectionInteraction:
collectionView:contextMenuConfigurationForItemAtIndexPath:point:
collectionView:previewForHighlightingContextMenuWithConfiguration:
collectionView:previewForDismissingContextMenuWithConfiguration:
collectionView:willPerformPreviewActionForMenuWithConfiguration:animator:
collectionView:willCommitMenuWithAnimator:
collectionView:layout:sizeForItemAtIndexPath:
collectionView:layout:insetForSectionAtIndex:
collectionView:layout:minimumLineSpacingForSectionAtIndex:
collectionView:layout:minimumInteritemSpacingForSectionAtIndex:
collectionView:layout:referenceSizeForHeaderInSection:
collectionView:layout:referenceSizeForFooterInSection:
indexPathForVolumeSliderInCollectionView:layout:
prepareLayout
indexPath
size
setSize:
topGradientHeight
bottomGradientHeight
volumeSliderIndexPath
setVolumeSliderIndexPath:
_topGradientHeight
_bottomGradientHeight
_volumeSliderIndexPath
setInvalidateFlowLayoutAttributes:
setInvalidateVolumeSliderLayoutAttributes:
_invalidateVolumeSliderLayoutAttributes
setInstallsStandardGestureForInteractiveMovement:
longPressSelect:
handleEndVolumeControl:
mask
_gradientMask
setMask:
_cleanupRouteForVolumeIfNeeded
estimatedItemSize
indexPathForRow:inSection:
setFocusedRoute:
routeForVolume
setRouteForVolume:
sectionInset
setColors:
setLocations:
longPressRecognizer
setLongPressRecognizer:
menuRecognizer
setMenuRecognizer:
selectRecognizer
setSelectRecognizer:
_focusedRoute
_routeForVolume
_longPressRecognizer
_menuRecognizer
_selectRecognizer
indexPathByAddingIndex:
enumerateIndexesWithOptions:usingBlock:
changeType
destinationIndexes
indexPathWithIndex:
tvnp_indexPathsForIndexSet:withOptions:prefix:
insertItemsAtIndexPaths:
sourceIndexes
deleteItemsAtIndexPaths:
firstIndex
moveItemAtIndexPath:toIndexPath:
_nameForAVRoute:
isProxyGroupPlayer
setVolume:withNoticationDelay:
isGroupLeader
setOutputDeviceRoute:
setVolumeController:
_outputDeviceRoute
_setSpeedBumpEdges:
_setContinuousCornerRadius:
setMinificationFilter:
bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:
CGPath
constraintEqualToAnchor:multiplier:
setArtworkImage:
setShowDeviceImage:
showDeviceImage
artworkView
deviceView
shadowView
boundsUsedForArtworkShadow
setBoundsUsedForArtworkShadow:
_showDeviceImage
_artworkImage
_artworkView
_deviceView
_shadowView
_boundsUsedForArtworkShadow
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
setWindow:
_window
indexSetWithIndex:
arrayChangeInsert:
arrayChangeDelete:
arrayChangeMove:toIndex:
_changeType
_sourceIndexes
_destinationIndexes
_deletionChangeForResultingArray:
_insertionChangeForResultingArray:
containsIndex:
addIndex:
initWithArray:
minusSet:
removeObject:
indexesOfObjectsWithOptions:passingTest:
systemRouteWithContextUID:
prepareForPlaybackWithEndpoint:
setPlayer:
_registerAsObserver
_nowPlayingInfoDidChange:
_deregisterAsObserver
sendCommand:options:
contentItemIdentifier
_updateMediaItemMetadata:routeConnection:
player
lastUpdate
dateWithTimeIntervalSinceReferenceDate:
tvs_numberForKey:
doubleValue
tvs_dateForKey:
defaultPlaybackRate
loading
_updateTimeStampFromAirtunesd:
isArtworkVisuallyIdenticalToCatalog:
trackNumber
totalNumberOfTracks
artworkCatalog
performMediaItemMetadataTransactionWithBlock:
userInfo
prepareForPlayback
reset
_isObserving
_airtunesIsPlaying
_airtunesTimeData
_lastTrackIdentifier
_player
_menuPressed:
setViewServiceActive:
mediaRemoteObserver
initWithPlayer:
setSingleCoverOnly:
setMusicViewController:
wallpaperViewForVariant:
setNowPlayingWallPaper:
animateWithDuration:animations:completion:
getActiveRouteWithCompletion:
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
musicViewController
setMediaRemoteObserver:
menuGestureRecognizer
setMenuGestureRecognizer:
nowPlayingWallPaper
_musicViewController
_mediaRemoteObserver
_menuGestureRecognizer
_nowPlayingWallPaper
scale
_imageThatSuppressesAccessibilityHairlineThickening
_flatImageWithColor:
imageCache
_imageCache
_updateNowPlayingInfo
setCacheLimit:forCacheIdentifier:requestingContext:
_createRequestController
_reloadPlayerPathWithRoute:
_connectPairingIfNeeded:
playerPath
response
request
_setWantsPlaybackMetadata:
connection
sendMediaRemoteCommand:withOptions:completionHandler:
_updateMetadata
_updateAutomaticResponseLoading
beginAutomaticResponseLoading
endAutomaticResponseLoading
pathWithRoute:bundleID:playerID:
setPlayerPath:
setNeedsReload
_connectionDidInvalidate:
_updateState
propertySetWithProperties:
initWithProperties:relationships:
setTracklistRange:
setPlayingItemProperties:
setRequest:
tracklist
playingItemIndexPath
items
itemAtIndexPath:
metadataObject
song
timeIntervalSinceReferenceDate
trackCount
setFittingSize:
setDestinationScale:
setCacheIdentifier:forRequestingContext:
_preloadArtwork
allValues
requestImageWithCompletionHandler:
_placeholderArtwork
isInvalidated
setAttemptingConnection:
connectWithOptions:completion:
_setAutomaticResponseLoading:
isAttemptingConnection
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
_automaticResponseLoading
_wantsPlaybackMetadata
artworkSize
setArtworkSize:
requestController
observerTokensToHandlers
_attemptingConnection
_defaultPlaybackRate
_artist
_album
_artworkCatalog
_trackNumber
_totalNumberOfTracks
_contentItemIdentifier
_elapsedTime
_lastUpdate
_requestController
_observerTokensToHandlers
_artworkSize
v8@?0
minValueIconView
T@"UIImageView",R,N,V_minValueIconView
maxValueIconView
T@"UIImageView",R,N,V_maxValueIconView
thumbView
T@"UIView",R,N,V_thumbView
lastThumbLocation
T{CGPoint=dd},R,N,V_lastThumbLocation
value
Tf,N,V_value
minimumValue
Tf,N,V_minimumValue
maximumValue
Tf,N,V_maximumValue
minimumValueImage
T@"UIImage",&,N,V_minimumValueImage
maximumValueImage
T@"UIImage",&,N,V_maximumValueImage
progressBarView
T@"TVNPNowPlayingProgressView",R,N,V_progressBarView
continuous
TB,N,GisContinuous,V_continuous
v16@?0@"NSSet"8
connectionState
%@: Endpoint:%@
destinationName
local
volumeLevel
artworkImage
playbackState
com.apple.Music
com.apple.TVMusic
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
routeConnection
T@"TVNPEndpointRouteConnection",R,N,V_routeConnection
volumeController
T@"MPVolumeController",R,N,V_volumeController
routeConnectionObserverToken
T@"<NSCopying>",R,N,V_routeConnectionObserverToken
TQ,N,V_connectionState
isCurrentDestination
TB,D,N
endpointRoute
T@"MPAVEndpointRoute",R,N,V_endpointRoute
initialFetchGroup
T@"NSObject<OS_dispatch_group>",&,N,V_initialFetchGroup
routingController
T@"TVNPGroupableRoutingController",R,N,V_routingController
presentationEnded
TB,N,V_presentationEnded
com.apple.TVNowPlayingService.VolumeUpdateQueue
B32@?0@"TVNPRoutingDestination"8Q16^B24
availableDestinations
connected
disconnected
ConnectionFailedAlertTitle
ConnectionFailedAlertButton
com.apple.TVMusic://
v12@?0B8
v20@?0B8@"NSError"12
v28@?0@"PBSBulletin"8B16@"NSError"20
volumeAssertion
T@"PBSAssertion",R,N,V_volumeAssertion
shouldFocusInitialIndex
TB,R,N,V_shouldFocusInitialIndex
initialFocusIndex
TQ,R,N,V_initialFocusIndex
observingChanges
TB,N,V_observingChanges
initiatedByPicker
TB,R,N,V_initiatedByPicker
destinationForVolume
T@"TVNPRoutingDestination",&,N,V_destinationForVolume
volumeBulletin
T@"PBSBulletin",&,N,V_volumeBulletin
volumeUpdateQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_volumeUpdateQueue
connectingRoutingDestination
T@"TVNPRoutingDestination",&,N,V_connectingRoutingDestination
initialUIDProvider
T@?,C,N,V_initialUIDProvider
T@"NSObject<TVNPRoutingController>",R,N,V_routingController
viewControllerDelegate
T@"<TVNPRoutingDestinationsCollectionViewControllerDelegate>",W,N,V_viewControllerDelegate
volumeEditingInProgress
TB,N,V_volumeEditingInProgress
title
deviceType
selectionState
canBeGrouped
destination.isCurrentDestination
destination.playbackState
destination.singleLineTitle
route
T@"TVNPRoute",&,N,V_route
currentDestination
com.apple.TVNowPlayingService.TVNPGroupableRoutingController
TVNP-Endpoint
TVNP-OutputDevice
v16@?0@"NSArray"8
B32@?0@"HMAccessory"8Q16^B24
v16@?0@"NSError"8
Dock Connector
B32@?0@8Q16^B24
routeUID
uniqueIdentifier
availableRoutes
currentRoutes
discoveryMode
TQ,N
T@"TVNPRoutingDestination",&,N
T@"NSArray",R,C,N
allowsDestinationSelection
TB,R,N
endpointRoutingDataSource
T@"MPAVEndpointRoutingDataSource",R,N,V_endpointRoutingDataSource
outputDeviceRoutingDataSource
T@"MPAVOutputDeviceRoutingDataSource",R,N,V_outputDeviceRoutingDataSource
endpointRoutingController
T@"MPAVRoutingController",R,N,V_endpointRoutingController
outputDeviceRoutingController
T@"MPAVRoutingController",R,N,V_outputDeviceRoutingController
outputDeviceIdentifiersToRoutes
T@"NSMutableDictionary",R,C,N,V_outputDeviceIdentifiersToRoutes
endpointIdentifiersToDestinations
T@"NSMutableDictionary",R,C,N,V_endpointIdentifiersToDestinations
allOutputDevices
T@"NSArray",R,C,N,V_allOutputDevices
allEndpoints
T@"NSArray",R,C,N,V_allEndpoints
currentEndpointRouteUID
T@"NSString",R,C,N,V_currentEndpointRouteUID
updateQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_updateQueue
numberOfUpdates
TQ,R,N,V_numberOfUpdates
needsAvailableRoutesUpdate
TB,R,N,V_needsAvailableRoutesUpdate
multipleSelectionEnabled
TB,R,N,V_multipleSelectionEnabled
outputContextUID
T@"NSString",C,N,V_outputContextUID
allowsRetargeting
TB,N,V_allowsRetargeting
TQ,N,V_discoveryMode
T@"TVNPRoutingDestination",&,N,V_currentDestination
T@"NSArray",R,C,N,V_currentRoutes
T@"NSArray",R,C,N,V_availableDestinations
T@"NSArray",R,C,N,V_availableRoutes
TB,R,N,V_allowsDestinationSelection
TVServicesErrorDomain
imageIdentifier
T@"NSString",R,N,V_imageIdentifier
imageData
T@"NSData",&,N,V_imageData
T@"NSString",C,N,V_title
subtitle
T@"NSString",C,N,V_subtitle
singleLineTitle
T@"NSString",C,N,V_singleLineTitle
image
T@"UIImage",&,N,V_image
T@"NSString",C,N,V_destinationName
T@"NSString",C,N,V_uniqueIdentifier
TB,N,V_isCurrentDestination
TQ,N,V_playbackState
nowPlayingBundleIdentifier
T@"NSString",C,N,V_nowPlayingBundleIdentifier
TB,R,N,GisLocal,V_local
effectiveDeviceType
TQ,R,N,V_effectiveDeviceType
T@"NSNumber",C,N,V_volumeLevel
paired
TB,R,N,GisPaired,V_paired
TB,R,N,GisConnected,V_connected
TB,R,N,GisDisconnected,V_disconnected
rate
name
T@"NSString",R,N
delegate
T@"<TVPPlaybackDelegate>",W,N
asyncDelegate
T@"<TVPASyncPlaybackDelegate>",W,N
playlist
T@"TVPPlaylist",&,N
currentMediaItem
T@"NSObject<TVPMediaItem>",&,N
currentMediaItemPreparedForLoading
currentMediaItemInitialLoadingComplete
currentMediaItemHasVideoContent
currentMediaItemIsStreaming
currentMediaItemPresentationSize
T{CGSize=dd},R,N
currentMediaItemHasDates
state
T@"TVPPlaybackState",R,N
errorBehavior
Tq,N
interactive
TB,N
Td,R,N
rateUsedForPlayback
Td,N
waitsAfterPreparingMediaItems
elapsedTime
playbackDate
T@"NSDate",C,N
duration
isLive
muted
volume
Tf,N
chapterCollections
T@"NSArray",R,N
currentChapterCollection
T@"TVPChapterCollection",&,N
currentChapter
T@"TVPChapter",R,N
currentInterstitial
T@"TVPInterstitial",R,N
bufferedTimeRange
T@"TVPTimeRange",R,N
seekableTimeRange
seekableDateRange
T@"TVPDateRange",R,N
forwardPlaybackEndTime
reversePlaybackEndTime
mediaItemEndAction
audioOptions
selectedAudioOption
T@"TVPAudioOption",&,N
subtitleOptions
selectedSubtitleOption
T@"TVPSubtitleOption",&,N
maximumBitRate
preventsSleepDuringVideoPlayback
updatesMediaRemoteInfoAutomatically
limitReadAhead
lastChangeDirection
Tq,N,V_lastChangeDirection
initiatedSkip
TB,N,V_initiatedSkip
elapsedTimeObserverBlocks
T@"NSMutableDictionary",&,N,V_elapsedTimeObserverBlocks
isScanningForward
TB,N,V_isScanningForward
commandDelegate
T@"<TVNPMetadataPlayerCommandDelegate>",W,N,V_commandDelegate
Td,N,V_duration
T@"TVPPlaybackState",&,N,V_state
T@"NSString",R,N,V_name
T@"<TVPPlaybackDelegate>",W,N,V_delegate
T@"<TVPASyncPlaybackDelegate>",W,N,V_asyncDelegate
T@"TVPPlaylist",&,N,V_playlist
TB,R,N,V_currentMediaItemPreparedForLoading
TB,R,N,V_currentMediaItemInitialLoadingComplete
T{CGSize=dd},R,N,V_currentMediaItemPresentationSize
TB,R,N,V_currentMediaItemHasDates
Tq,N,V_errorBehavior
TB,N,V_interactive
Td,R,N,V_rate
Td,N,V_rateUsedForPlayback
TB,N,V_waitsAfterPreparingMediaItems
T@"NSDate",C,N,V_playbackDate
TB,R,N,V_isLive
TB,N,V_muted
Tf,N,V_volume
T@"NSArray",R,N,V_chapterCollections
T@"TVPChapterCollection",&,N,V_currentChapterCollection
T@"TVPChapter",R,N,V_currentChapter
T@"TVPInterstitial",R,N,V_currentInterstitial
T@"TVPTimeRange",R,N,V_bufferedTimeRange
T@"TVPTimeRange",R,N,V_seekableTimeRange
T@"TVPDateRange",R,N,V_seekableDateRange
Td,R,N,V_forwardPlaybackEndTime
Td,R,N,V_reversePlaybackEndTime
Tq,N,V_mediaItemEndAction
T@"NSArray",R,N,V_audioOptions
T@"TVPAudioOption",&,N,V_selectedAudioOption
T@"NSArray",R,N,V_subtitleOptions
T@"TVPSubtitleOption",&,N,V_selectedSubtitleOption
Td,N,V_maximumBitRate
TB,N,V_preventsSleepDuringVideoPlayback
TB,N,V_updatesMediaRemoteInfoAutomatically
TB,N,V_limitReadAhead
progressCenter
T{CGPoint=dd},R,N,G_progressCenter
progress
Tf,N,V_progress
T@"NSString",C,N,V_routeUID
TQ,N,V_deviceType
TB,N,GisLocal,V_local
TB,N,V_canBeGrouped
destination
T@"TVNPRoutingDestination",&,N,V_destination
silentPrimary
TB,N,GisSilentPrimary,V_silentPrimary
TQ,N,V_selectionState
nowplaying_audiorouting_check_on
nowplaying_audiorouting_check_off
ui_checkmark_dark
nowplaying_volumeslider-dwn
nowplaying_volumeslider-up
floatingContentView
T@"_UIFloatingContentView",R,N,V_floatingContentView
backgroundColorView
T@"UIView",R,N,V_backgroundColorView
iconView
T@"UIImageView",R,N,V_iconView
checkmarkView
T@"UIImageView",R,N,V_checkmarkView
musicBarsView
T@"TVNPRoutingMusicBarsView",R,N,V_musicBarsView
titleLabel
T@"UILabel",R,N,V_titleLabel
subtitleLabel
T@"UILabel",R,N,V_subtitleLabel
volumeProgressView
T@"TVNPNowPlayingProgressView",R,N,V_volumeProgressView
volumeSliderView
T@"TVNPNowPlayingSliderView",R,N,V_volumeSliderView
layoutGuide
T@"UILayoutGuide",R,N,V_layoutGuide
showingVolumeSlider
TB,N,GisShowingVolumeSlider,V_showingVolumeSlider
enabled
TB,N,GisEnabled,V_enabled
volatileContraints
T@"NSMutableArray",R,N,V_volatileContraints
titleText
T@"NSString",C,N,V_titleText
subtitleText
T@"NSString",C,N,V_subtitleText
allowsGrouping
TB,N,V_allowsGrouping
displayAsSelected
TB,N,V_displayAsSelected
musicBarState
TQ,N,V_musicBarState
bounds
BarAnimation
v32@?0@"UIView"8Q16^B24
canAnimate
TB,N,V_canAnimate
internalState
TQ,N,V_internalState
barViews
T@"NSArray",R,C,N,V_barViews
TQ,N,V_state
imageLoader
T@"TVNPDataImageLoader",&,N,V_imageLoader
v16@?0^v8
@"NSString"8@?0
currentDestination.destinationName
focusedRoute.volumeLevel
@@MINUS@@
nowplaying_volumebtn-dwn
@@PLUS@@
nowplaying_volumebtn-up
MasterVolumeText
PressAndHoldForVolumeText
editingVolume
TB,R,N,V_editingVolume
playPauseAssertion
T@"PBSAssertion",R,N,V_playPauseAssertion
titleView
T@"MPRouteLabel",R,N,V_titleView
hintView
T@"UILabel",R,N,V_hintView
destinationsCollectionViewController
T@"TVNPRoutingDestinationsCollectionViewController",R,N,V_destinationsCollectionViewController
routesCollectionViewController
T@"TVNPRoutingRoutesCollectionViewController",R,N,V_routesCollectionViewController
T@"<TVNPRoutingMainViewControllerDelegate>",W,N,V_delegate
nowplaying_audiorouting_tv
nowplaying_audiorouting_b238_pair
nowplaying_audiorouting_b238
nowplaying_audiorouting_airpods
nowplaying_audiorouting_airport
nowplaying_audiorouting_powerbeats
nowplaying_audiorouting_beatssolo
nowplaying_audiorouting_beatsx
nowplaying_audiorouting_generic_tv
nowplaying_audiorouting_speaker
nowplaying_audiorouting_tv-large
nowplaying_audiorouting_b238_pair-large
nowplaying_audiorouting_b238-large
nowplaying_audiorouting_airpods-large
nowplaying_audiorouting_airport-large
nowplaying_audiorouting_powerbeats-large
nowplaying_audiorouting_beatssolo-large
nowplaying_audiorouting_beatsx-large
nowplaying_audiorouting_generic_tv-large
nowplaying_audiorouting_speaker-large
tvnp_shouldShowRoute
tvnp_deviceType
TQ,R,N
volumeSliderIndexPath
T@"NSIndexPath",&,N,V_volumeSliderIndexPath
topGradientHeight
Td,N,V_topGradientHeight
bottomGradientHeight
Td,N,V_bottomGradientHeight
invalidateVolumeSliderLayoutAttributes
TB,N,V_invalidateVolumeSliderLayoutAttributes
RoutingHijackNagTitle
RoutingHijackNagMessage
RoutingHijackNagCancel
RoutingHijackNagConfirm
v16@?0@"UIAlertAction"8
focusedRoute
T@"TVNPRoute",&,N,V_focusedRoute
routeForVolume
T@"TVNPRoute",&,N,V_routeForVolume
longPressRecognizer
T@"UILongPressGestureRecognizer",&,N,V_longPressRecognizer
menuRecognizer
T@"UITapGestureRecognizer",&,N,V_menuRecognizer
selectRecognizer
T@"UITapGestureRecognizer",&,N,V_selectRecognizer
T@"<TVNPRoutingRoutesCollectionViewControllerDelegate>",W,N,V_delegate
v24@?0Q8^B16
%@: MPAVRoute:%@
outputDeviceRoute
-[TVNPOutputDeviceRoute _updateVolume]
T@"MPVolumeController",&,N,V_volumeController
T@"MPAVOutputDeviceRoute",&,N,V_outputDeviceRoute
artworkView
T@"UIImageView",R,N,V_artworkView
deviceView
T@"UIImageView",R,N,V_deviceView
shadowView
T@"UIView",R,N,V_shadowView
TB,R,N,GisEnabled,V_enabled
boundsUsedForArtworkShadow
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_boundsUsedForArtworkShadow
T@"UIImage",&,N,V_artworkImage
showDeviceImage
TB,N,V_showDeviceImage
window
T@"UIWindow",&,N
T@"UIWindow",&,N,V_window
Insert(%@)
Delete(%@)
Move(%ld, %ld)
changeType
Tq,R,N,V_changeType
sourceIndexes
T@"NSIndexSet",R,C,N,V_sourceIndexes
destinationIndexes
T@"NSIndexSet",R,C,N,V_destinationIndexes
v32@?0@8Q16^B24
airtunesd
TVAirPlayTimeNotificationName
TVNPMetadataPlayer
v24@?0@"NSString"8@16
player
T@"TVNPMetadataPlayer",&,N,V_player
v16@?0@"MPAVEndpointRoute"8
v16@?0@"MPAVRoute"8
musicViewController
T@"TVPMusicNowPlayingViewController",&,N,V_musicViewController
mediaRemoteObserver
T@"TVNPMediaRemoteObserver",&,N,V_mediaRemoteObserver
menuGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_menuGestureRecognizer
nowPlayingWallPaper
T@"UIView",&,N,V_nowPlayingWallPaper
color
scale
imageCache
T@"NSCache",R,N,V_imageCache
ChooseMusicTitle
Localizable
SelectToConnectTitle
TVNPEndpointRouteConnectionArtworkCacheIdentifier
com.apple.TVNowPlayingService.TVNPEndpointRouteConnection
%@ (%@)
v16@?0^{__CFArray=}8
artworkCatalog
v16@?0@"UIImage"8
artist
album
defaultPlaybackRate
lastUpdate
contentItemIdentifier
trackNumber
totalNumberOfTracks
Placeholder-Album
com.apple.podcasts
PreloadAsset-Podcast
PreloadAsset-Music
attemptingConnection
TB,N,GisAttemptingConnection,V_attemptingConnection
_wantsPlaybackMetadata
TB,N,S_setWantsPlaybackMetadata:,V_wantsPlaybackMetadata
_automaticResponseLoading
TB,N,S_setAutomaticResponseLoading:,V_automaticResponseLoading
requestController
T@"MPRequestResponseController",R,N,V_requestController
observerTokensToHandlers
T@"NSMutableDictionary",R,N,V_observerTokensToHandlers
T@"MPAVEndpointRoute",&,N
bundleID
T@"NSString",R,C,N
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_artist
T@"NSString",R,C,N,V_album
T@"UIImage",R,N,V_artworkImage
T@"MPArtworkCatalog",R,N,V_artworkCatalog
artworkSize
T{CGSize=dd},N,V_artworkSize
T@"NSNumber",R,C,N,V_trackNumber
T@"NSNumber",R,C,N,V_totalNumberOfTracks
T@"NSString",R,C,N,V_contentItemIdentifier
Tq,R,N,V_playbackState
Td,R,N,V_duration
Td,R,N,V_elapsedTime
Tf,R,N,V_rate
Tf,R,N,V_defaultPlaybackRate
Td,R,N,V_lastUpdate
TQ,R,N,V_connectionState
TB,R,N,GisPaired
TVNPNowPlayingSliderView
TVNPEndpointRoutingDestination
MPVolumeControllerDelegate
NSObject
PBSViewServicePresenter
PBSViewServiceInterface
TVNPRoutingHostViewController
TVNPRoutingMainViewControllerDelegate
TVNPRoutingDestinationsCollectionViewController
PBSBulletinServiceDelegate
TVNPRouteCollectionViewCell
TVNPGroupableRoutingController
MPAVRoutingControllerDelegate
TVNPRoutingController
TVNPDataImageLoader
TVImageLoader
TVNPRoutingDestination
TVNPMetadataPlayer
TVPPlayback
TVNPNowPlayingProgressView
TVNPRoute
TVNPBaseRouteCollectionViewCell
TVNPRoutingMusicBarsView
TVNPMediaItem
TVNPRoutingMainViewController
TVNPRoutingDestinationsCollectionViewControllerDelegate
TVNPRoutingRoutesCollectionViewControllerDelegate
TVNowPlayingService
TVNPRoutingDestinationsCollectionViewLayout
TVNPRoutingDestinationsCollectionViewLayoutAttributes
TVNPRoutingDestinationsCollectionViewLayoutInvalidationContext
TVNPRoutingRoutesCollectionViewLayoutDelegate
UICollectionViewDelegateFlowLayout
UICollectionViewDelegate
UIScrollViewDelegate
TVNPRoutingRoutesCollectionViewLayout
TVNPRoutingRoutesCollectionViewLayoutAttributes
TVNPRoutingRoutesCollectionViewLayoutInvalidationContext
TVNPRoutingRoutesCollectionViewController
TVNPOutputDeviceRoute
TVNPBaseRoutingDestinationCollectionViewCell
TVNowPlayingServiceAppDelegate
UIApplicationDelegate
TVNPArrayChange
TVNPMediaRemoteObserver
TVNPMetadataPlayerCommandDelegate
TVNPViewController
TVNPRoutingTintedImageCache
TVNPRoutingDestinationCollectionViewCell
TVNPEndpointRouteConnection
MPRequestResponseControllerDelegate
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B16@0:8
v16@0:8
{CGSize=dd}16@0:8
{CGSize=dd}32@0:8{CGSize=dd}16
v20@0:8f16
v24@0:8f16B20
v24@0:8@16
v24@0:8d16
d16@0:8
B32@0:8@16@24
v32@0:8@16@24
@16@0:8
f16@0:8
v20@0:8B16
{CGPoint=dd}16@0:8
@"UIImage"
@"TVNPNowPlayingProgressView"
@"UIImageView"
@"UIView"
{CGPoint="x"d"y"d}
Q24@0:8q16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8@16B24
v28@0:8@16I24
v28@0:8@16f24
v32@0:8@16q24
v28@0:8@"MPVolumeController"16B24
v28@0:8@"MPVolumeController"16I24
v32@0:8@"MPVolumeController"16@"NSString"24
v28@0:8@"MPVolumeController"16f24
v32@0:8@"MPVolumeController"16q24
@24@0:8@16
v48@0:8@16@24@32^v40
v24@0:8Q16
@"MPAVEndpointRoute"
@"TVNPEndpointRouteConnection"
@"MPVolumeController"
@"<NSCopying>"
v32@0:8@16@?24
v24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@?<v@?>24
@"NSXPCInterface"16@0:8
v32@0:8@"NSDictionary"16@?<v@?@"<NSSecureCoding>"@"NSError">24
v24@0:8@"<NSSecureCoding>"16
v28@0:8@"TVNPRoutingMainViewController"16B24
@32@0:8@16@24
@"NSObject<OS_dispatch_group>"
@"TVNPGroupableRoutingController"
v40@0:8@16@24Q32
v40@0:8@"<PBSBulletinServiceInterface>"16@"PBSBulletin"24Q32
@48@0:8@16@24@32@?40
q24@0:8@16
q32@0:8@16q24
v40@0:8@16@24@32
{CGPoint=dd}40@0:8@16{CGPoint=dd}24
@?16@0:8
v24@0:8@?16
@"NSObject<TVNPRoutingController>"
@"<TVNPRoutingDestinationsCollectionViewControllerDelegate>"
@"PBSAssertion"
@"TVNPRoutingDestination"
@"PBSBulletin"
@"NSObject<OS_dispatch_queue>"
@"TVNPRoute"
v64@0:8@16@24q32@40@48@?56
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
v32@0:8@"TVNPRoute"16@"TVNPRoutingDestination"24
v24@0:8@"TVNPRoutingDestination"16
@"TVNPRoutingDestination"16@0:8
@"NSArray"16@0:8
@28@0:8@16B24
@36@0:8@16B24@?28
@"NSArray"
@"NSString"
@"MPAVEndpointRoutingDataSource"
@"MPAVOutputDeviceRoutingDataSource"
@"MPAVRoutingController"
@"NSMutableDictionary"
@52@0:8@16{CGSize=dd}24B40@?44
@60@0:8@16{CGSize=dd}24B40q44@?52
@68@0:8@16{CGSize=dd}24B40q44@52@?60
@"NSString"24@0:8@16
@"NSURL"24@0:8@16
@52@0:8@16{CGSize=dd}24B40@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">44
@60@0:8@16{CGSize=dd}24B40q44@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">52
@68@0:8@16{CGSize=dd}24B40q44@"<IKNetworkRequestLoader>"52@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">60
@"TVImage"
@"NSData"
@"NSNumber"
v24@0:8q16
v32@0:8q16@24
v28@0:8d16B24
v48@0:8d16{?=qiIq}24
v52@0:8d16{?=qiIq}24B48
@24@0:8@?16
@32@0:8@16@?24
q16@0:8
v32@0:8Q16@24
@24@0:8@"NSString"16
v32@0:8q16@"NSString"24
@24@0:8@?<v@?d@"NSDate"dB>16
@32@0:8@"NSArray"16@?<v@?B>24
v28@0:8@"TVPSubtitleOption"16B24
@"<TVPPlaybackDelegate>"16@0:8
v24@0:8@"<TVPPlaybackDelegate>"16
@"<TVPASyncPlaybackDelegate>"16@0:8
v24@0:8@"<TVPASyncPlaybackDelegate>"16
@"TVPPlaylist"16@0:8
v24@0:8@"TVPPlaylist"16
@"NSObject<TVPMediaItem>"16@0:8
v24@0:8@"NSObject<TVPMediaItem>"16
@"TVPPlaybackState"16@0:8
@"NSDate"16@0:8
v24@0:8@"NSDate"16
@"TVPChapterCollection"16@0:8
v24@0:8@"TVPChapterCollection"16
@"TVPChapter"16@0:8
@"TVPInterstitial"16@0:8
@"TVPTimeRange"16@0:8
@"TVPDateRange"16@0:8
@"TVPAudioOption"16@0:8
v24@0:8@"TVPAudioOption"16
@"TVPSubtitleOption"16@0:8
v24@0:8@"TVPSubtitleOption"16
v32@0:8Q16@"NSString"24
v32@0:8d16@24
f24@0:8@16
@"NSDate"
@"NSTimer"
@"TVPPlaylist"
@"TVPPlaybackState"
@"TVPChapter"
@"TVPTimeRange"
@"TVPDateRange"
@"TVPChapterCollection"
@"TVPAudioOption"
@"TVPSubtitleOption"
@"<TVPPlaybackDelegate>"
@"<TVPASyncPlaybackDelegate>"
@"TVPInterstitial"
@"<TVNPMetadataPlayerCommandDelegate>"
{CGSize="width"d"height"d}
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@28@0:8Q16B24
@20@0:8B16
@24@0:8B16B20
@"_UIFloatingContentView"
@"TVNPRoutingMusicBarsView"
@"UILabel"
@"TVNPNowPlayingSliderView"
@"UILayoutGuide"
@"NSMutableArray"
@"TVNPDataImageLoader"
v28@0:8@"TVNPRoutingDestinationsCollectionViewController"16B24
v24@0:8@"TVNPRoutingRoutesCollectionViewController"16
@"<TVNPRoutingMainViewControllerDelegate>"
@"MPRouteLabel"
@"TVNPRoutingDestinationsCollectionViewController"
@"TVNPRoutingRoutesCollectionViewController"
@24@0:8Q16
{CGPoint=dd}24@0:8@16
@24@0:8^{_NSZone=}16
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v48@0:8@16@24@32@40
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
@40@0:8@16@24@32
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
B32@0:8@"UICollectionView"16@"NSIndexPath"24
v32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"UICollectionViewCell"24@"NSIndexPath"32
v48@0:8@"UICollectionView"16@"UICollectionReusableView"24@"NSString"32@"NSIndexPath"40
B48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
v48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
@"UICollectionViewTransitionLayout"40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"UICollectionViewLayout"32
B32@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24
v40@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
{CGPoint=dd}40@0:8@"UICollectionView"16{CGPoint=dd}24
B40@0:8@"UICollectionView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UICollectionView"16
@"UIContextMenuConfiguration"48@0:8@"UICollectionView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UICollectionView"16@"UIContextMenuConfiguration"24
v40@0:8@"UICollectionView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionCommitAnimating>"32
v32@0:8@"UICollectionView"16@"<UIContextMenuInteractionCommitAnimating>"24
{CGSize=dd}40@0:8@16@24@32
{UIEdgeInsets=dddd}40@0:8@16@24q32
d40@0:8@16@24q32
{CGSize=dd}40@0:8@16@24q32
{CGSize=dd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"NSIndexPath"32
{UIEdgeInsets=dddd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
d40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
{CGSize=dd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
@"NSIndexPath"32@0:8@"UICollectionView"16@"UICollectionViewLayout"24
@"NSIndexPath"
@"<TVNPRoutingRoutesCollectionViewControllerDelegate>"
@"UILongPressGestureRecognizer"
@"UITapGestureRecognizer"
@40@0:8@16Q24@32
v32@0:8@16Q24
v40@0:8@16Q24@32
@"MPAVOutputDeviceRoute"
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
B48@0:8@16@24@32@40
v40@0:8@16q24d32
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
Q32@0:8@16@24
B40@0:8@16@24@?32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"UIWindow"
@32@0:8Q16Q24
@"NSIndexSet"
v28@0:8I16@20
v28@0:8I16@"NSDictionary"20
@"NSDictionary"
@"TVNPMetadataPlayer"
@"TVPMusicNowPlayingViewController"
@"TVNPMediaRemoteObserver"
@"NSCache"
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
v32@0:8{CGSize=dd}16
@"MPArtworkCatalog"
@"MPRequestResponseController"
ROUTING: Fetching initial endpoints (begin)
ROUTING: Fetching initial endpoints (complete)
Volume up from %f to %f
Volume up not available
Volume down from %f to %f
Volume down not available
ROUTING: Active Endpoint UID %{public}@
ROUTING: Found Active Endpoint
ROUTING: No Matching Active Endpoint
ROUTING: Initial Focus Index: %ld
ShouldUseGrouping: %d CanUseGrouping: %d RouteIsInRoom: %d AlwaysPickRatherThanAdd: %d
Add Picked Route: %{public}@ to Endpoint: %{public}@
Add Picked Route result: %{public}@
Set Picked Route: %{public}@ for Endpoint: %{public}@
Set Picked Route result: %d
Remove Picked Route: %{public}@ from Endpoint: %{public}@
Remove Picked Route result: %{public}@
Retarget to Endpoint: %{public}@
Can't create destination, no MRAVEndpointRef. {endpointRoute_ptr=%p, endpointRoute=%{public}@}
No destination for endpoint route. {endpointRoute_ptr=%p, endpointRoute=%{public}@}
No route for output device. {routeUID=%{public}@, outputDevice_ptr=%p, outputDevice=%{public}@}
Should show routes. {shouldShowRoutes=%{bool}d, multipleSelectionEnabled=%{bool}d, controllerCanGroup=%{bool}d, canModifyGroupMembership=%{bool}d, currentDestinationIsLocalDestination=%{bool}d, endpointRoute_ptr=%p, endpointRoute=%{public}@}
Update Routing DataSource. {availableDestinations_input=%ld, availableDestinations_output=%ld, availableRoutes_input=%ld, availableRoutes_output=%ld, shouldShowRoutes=%{bool}d, allowsDestinationSelection=%{bool}d, endpointRoute_ptr=%p, endpointRoute=%{public}@}
Firing elapsed time observer after setting last elapsed time / timestamp
Firing elapsed time observer after changing state / rate: %{public}@.
ROUTING: Fetch Active Endpoint
ROUTING: Fetch Active Endpoint Complete: %{public}@
%s: Update output device route volume. title: %{public}@, isConnected: %d, isVolumeControlAvailable: %d, isGroupLeaderAppleTV: %d, isLocalHDMI: %d
(%{public}@) Send %{public}@ to system route, status: %{public}@
(%{public}@) Send %{public}@, status: %{public}@
METADATA: (%{public}@) update with song: %{public}@
METADATA: (%{public}@) apply update artwork with image: %{public}@
METADATA: (%{public}@) artwork catalog changed to nil
METADATA: (%{public}@) using placeholder image for app: %{public}@
METADATA: (%{public}@) no song, clearing out data
METADATA: (%{public}@) apply updates with changed keys: %{public}@
Connection did invalidate: %{public}@
(%{public}@) Connect to %{public}@ and Pair: %d
connectWithOptions->MPAVRouteConnectionConnectOptionsNone (completion): %{public}@ error: %{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.appletv.pbs.allow-custom-playpause</key>
<true/>
<key>com.apple.appletv.pbs.allow-custom-volume</key>
<true/>
<key>com.apple.appletv.pbs.allow-now-playing-presentation</key>
<true/>
<key>com.apple.appletv.pbs.bulletin-service-access</key>
<true/>
<key>com.apple.appletv.pbs.now-playing-view-service</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.itunescloud.delegate-account-store</key>
<true/>
<key>com.apple.itunescloud.delegation-provider</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.homekit</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServiceWillow</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.itunescloud.delegation-provider</string>
<string>com.apple.itunescloud.delegate-account-store</string>
</array>
<key>com.apple.security.exception.process-info</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.Music</string>
<string>com.apple.airplay</string>
</array>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>appleaccount</string>
</array>
</dict>
</plist>
