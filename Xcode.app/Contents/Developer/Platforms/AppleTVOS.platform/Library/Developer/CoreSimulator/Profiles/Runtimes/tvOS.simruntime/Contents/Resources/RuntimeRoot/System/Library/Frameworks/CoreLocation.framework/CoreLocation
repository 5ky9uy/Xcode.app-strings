NSt3__120__shared_ptr_emplaceI19CLConnectionMessageNS_9allocatorIS1_EEEE
@<@A
15CLNameValuePair
10BasicMutex
5Mutex
11NonCopyable
N13CLPreferences10OtherPrefsE
13CLPreferences
14CLPlatformInfo
16CLDaemonSettings
NSt3__120__shared_ptr_pointerIP16CLDaemonSettingsN12_GLOBAL__N_112null_deleterENS_9allocatorIS1_EEEE
N12_GLOBAL__N_112null_deleterE
5CLLog
NSt3__120__shared_ptr_pointerIP19CLCircularLogBufferNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI19CLCircularLogBufferEE
@10CLSettings
p@f@
MbP?
sA-C
Zw+?
Zwk?
9CLLogBase
@(#)PROGRAM:CoreLocation  PROJECT:CoreLocation-2384
non-matching retain (%p) and release (%p) functions in context, ignoring
Failed to initilize fHeadingCalibrationDisplayMutex, error code: %{public}d
CL: CLClientCreateWithBundleIdentifierAndPath
{"msg%{public}.0s":"CLClientCreateWithBundleIdentifierAndPath", "event":%{public, location:escape_only}s, "effectiveBundleIdentifier":%{public, location:escape_only}@, "effectiveBundlePath":%{public, location:escape_only}@}
{"msg%{public}.0s":"client allocated", "client":"%{public}p"}
Location manager created on a dispatch queue exectuing on non-main thread, notifying client
{"msg%{public}.0s":"client about to be destroyed", "client":"%{public}p"}
{"msg%{public}.0s":"client->fContext should be NULL", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Location callback block not executed in a timely manner!
Discarding message for event %{private}d because of too many unprocessed messages
received client will resign active notification
received client did become active notification
Missing UsageDescription key for requested authorization: %{public}d
Invalid requested authorization: %{public}d
CL: CLClientIsLocationServicesEnabled
{"msg%{public}.0s":"CLClientIsLocationServicesEnabled", "event":%{public, location:escape_only}s}
#Warning CLInternalGetLocationServicesEnabled failed: could not reach daemon
CL: CLClientIsAuthorizationPromptMapDisplayEnabled
{"msg%{public}.0s":"CLClientIsAuthorizationPromptMapDisplayEnabled", "event":%{public, location:escape_only}s}
#Warning CLInternalGetAuthorizationPromptMapDisplayEnabled failed: could not reach daemon
{"msg%{public}.0s":"invalidating client", "client":"%{public}p"}
CLClient is deprecated. Will be obsolete soon. (%{public}s)
{"msg%{public}.0s":"CLClientShowHeadingCalibration", "showHeadingCal":%{public}hhd, "isHeadingCalibrated":%{public}hhd, "isApplicationActive":%{public}hhd, "isUpdatingHeading":%{public}hhd}
Application inactive, will not show heading calibration
Fence: CLClientRequestRegionState, unsupported fence type
Invalid call to CLClientGetAutopauseState
malformed message: kCLConnectionMessageAutopauseStatus
CL: _CLClientCreateConnection
{"msg%{public}.0s":"_CLClientCreateConnection", "event":%{public, location:escape_only}s, "client":"%{public}p"}
CL: CLClientInterruptionHandler
{"msg%{public}.0s":"CLClientInterruptionHandler", "event":%{public, location:escape_only}s, "client":"%{public}p"}
Got unhandled message %s from daemon
{"msg%{public}.0s":"Already in a transaction. LocationManager threading bug?", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "new":%{public, location:_CLLocationManagerStateTrackerState}.*P}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":"%{public}p", "new":"%{public}p"}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":"%{public}f", "new":"%{public}f"}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public}hhd, "new":%{public}hhd}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:CLClientAuthorizationStatus}lld, "new":%{public, location:CLClientAuthorizationStatus}lld}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:CLActivityType}lld, "new":%{public, location:CLActivityType}lld}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:CLAutoPause}lld, "new":%{public, location:CLAutoPause}lld}
{"msg%{public}.0s":"state transition", "event":%{public, location:escape_only}s, "state":%{public, location:escape_only}s, "id":"%{public}p", "property":%{public, location:escape_only}s, "old":%{public, location:_CLLocationManagerStateTrackerState}.*P, "new":%{public, location:_CLLocationManagerStateTrackerState}.*P}
{"msg%{public}.0s":"state dump failure", "expected_size":%{public}lld, "provided_size":%{public}lld}
#Warning Has lingering peer ranging request
CL: CLLocationManager
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "identifier":%{public, location:escape_only}@, "bundle":%{public, location:escape_only}@}
initializing CLLocationManager with a nil identifier
{"msg%{public}.0s":"delegate and queue must not be nil", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
initializing CLLocationManager with a nil bundle
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "delegate":"%{public}p"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "distance":"%{public}f"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "accuracy":"%{public}f"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "pausesLocationUpdatesAutomatically":%{public}hhd}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "allows":%{public}hhd}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "shows":%{public}hhd}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "supportInfo":%{public}hhd}
Obsolete
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "privateMode":%{public}hhd}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "purpose":%{private, location:escape_only}@}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "activityType":%{public, location:CLActivityType}lld}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "bundleID":%{public, location:escape_only}s}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "bundlePath":%{public, location:escape_only}s}
Canceling requestLocation
Ignoring requestLocation due to ongoing location.
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "distance":"%{public}f", "timeout_s":"%{public}.09f"}
Canceling requestLocation.
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "filter":"%{public}f"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "orientation":%{public, location:CLDeviceOrientation}lld}
heading, %{private}s
Start updating heading. HeadingFilter, %{public}.2f
Stop updating heading
Dismissing Compass Calibration HUD
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "region":%{private, location:escape_only}@}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "constraint":%{private, location:escape_only}@}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "peers":%{private, location:escape_only}@, "timeout_s":"%{public}.09f"}
WRTT: received requestRangingToPeers, timeout, %{public}lf
#Warning Ignoring requestRangingToPeers due to ongoing ranging
WRTT: received respondToRangingFromPeers, timeout, %{public}lf
#Warning Ignoring respondToRangingFromPeers due to ongoing ranging.
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "peers":%{private, location:escape_only}@, "interval":%{public}lld}
WRTT: received startRangingToPeers, interval, %{public}lu
#Warning Ignoring startRangingToPeers due to ongoing ranging
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "peers":%{private, location:escape_only}@}
WRTT: received stopRangingToPeers
WRTT: received startRangingFromPeers
#Warning Ignoring startRangingFromPeers due to ongoing ranging
WRTT: received stopRangingFromPeers
delivering locations to client's delegate
{"msg%{public}.0s":"-onClientEvent:supportInfo:", "event":%{public, location:CLClientEvent}lld, "data":%{private, location:escape_only}@}
could not get updated authorization status
Location event received with empty payload
New location is identical to old location; discarding
New location predates old location, and the event types differ; discarding
could not get updated heading
CL: Invoking Compass Calibration HUD
Could not show heading calibration
in onClientEventPlaceInference for CLPlaceInferenceSubscription
{"msg%{public}.0s":"Got place inference result without a handler block"}
{"msg%{public}.0s":"Got a place inference without an error code or a result!?"}
could not get error
could not get region monitoring event
{"msg%{public}.0s":"Fence: onClientEventRegion, unknown region type", "regionType":%{public, location:CLClientRegionType}lld}
Delivering region monitoring event to client's delegate
Delivering region monitoring event, no delegate
Delivering region monitoring state to client's delegate
Delivering region monitoring state, no delegate
could not get the region state
{"msg%{public}.0s":"Fence: onClientEventRegionState, unknown region type", "regionType":%{public, location:CLClientRegionType}lld}
{"msg%{public}.0s":"#Warning Fence: onClientEventRegionState, unknown state", "regionState":%{public, location:CLClientRegionState}lld}
Delivering region monitoring state request to client's delegate
Delivering region monitoring state request, no delegate
{"msg%{public}.0s":"Fence: onClientEventRegionError, unknown region type", "regionType":%{public, location:CLClientRegionType}lld}
Delivering region monitoring error to client's delegate
could not get ranged beacons
Client beacon is invalid (count,%lu).
Delivering range results to client's delegate
could not get ranging error
Delivering range error to client's delegate
WRTT: received onClientEventPeerRanging
WRTT: received onClientEventPeerRangingRequestProcessed
WRTT: received onClientEventPeerRangingError
{"msg%{public}.0s":"Client region type is not supported.
", "regionType":%{public, location:CLClientRegionType}lld}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "notification":%{private, location:escape_only}@}
could not get updated paused state
could not get batch result
Finished deferred updates: %s
could not get updated vehicle speed
could not get updated vehicle heading
{"msg%{public}.0s":"Requesting when in use authorization"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "SEL":%{public, location:escape_only}s}
{"msg%{public}.0s":"Requesting always authorization"}
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "enabled":%{public}hhd}
{"msg%{public}.0s":"must pass handler to dumpDiagnosticFilesWithHandler", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
dumpDiagnosticFiles called, trying to make an xpc call
#diagnosticManager failed to get remoteObjectProxy with error %@
#diagnosticManager error copying files: %@
{"msg%{public}.0s":"CLLocationManager", "event":%{public, location:escape_only}s, "_cmd":%{public, location:escape_only}@, "self":"%{public}p", "isActuallyAWatchKitExtension":%{public}hhd}
Start updating vehicle speed
Stop updating vehicle speed
Start updating vehicle heading
Stop updating vehicle heading
#Warning Changing CLCommon's runloop after it was already established
#Warning Setting CLCommon's runloop after it was already established
CLCommonSetRunLoop, %p
cannot open source file: %{public}s, errno %{public}d
cannot open target file: %{public}s, errno %{public}d
error reading source file: %{public}s
error writing target file: %{public}s
cannot open compression stream: %{public}s, bzerror %{public}d
error writing target file: %{public}s, bzerror: %{public}d
error closing target file: %{public}s, bzerror: %{public}d
CLCommonCompareLocationEqualityClient compared two coordinates that were identical other than their reference frames: (%lf, %lf, %d) (%lf, %lf, %d)
{"msg%{public}.0s":"Could not serialize _CLLSLHeadingEstimation", "error":%{public, location:escape_only}@}
{"msg%{public}.0s":"-initWithMachServiceName:options: is declared to return nonnull but failed to return an object", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
processed %p %d to (%s)
could not create new mutable dictionary
could not deserialize property list from %{public}s
file %s does not exist... clearing, error, %s
#Warning Error reading file %{public}s: %{public}s
Could not create NSURL for file: %{public}s
Could not write data to disk %{public}s, %{public}s
Could not serialize data for file %{public}s
key %{public}s does not have element %{public}d in array of size %{public}ld
key %{public}s does not have element %{public}d in non-array type %{public}lu
Unsupported type at %@:%@ (domain:key)
type IDs do not match for key %{public}s - %{public}lu vs %{public}lu
specified index is out of range for key %{public}s (%{public}d of %{public}ld)
specified index %{public}d not applicable to type %{public}lu for key %{public}s
could not create cf type for key %{public}s
could not create write stream
could not open write stream
could not write data, error code, %{public}ld, error domain, %{public}s
could not create intermediate property list - %{public}ld (%{public}s)
%s = <dictionary (%ld entries)>:
%s = %s
%s = %0.6f
%s = %d
%s = <unhandled value type %lu>
could not get value
type IDs do not match - %{public}lu vs %{public}lu
could not convert to C string
can't convert %{public}u data bytes
#Warning type IDs do not match - %{public}lu
Unable to load CompassUI framework
Could not load CUICalibrationClass from CompassUI framework
{"msg%{public}.0s":"CSI assertion failed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
***not supported***
<empty>
Attempt to set key %{public}s for read-only preferences %{public}s/%{public}s!
{"msg%{public}.0s":"Assertion failed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
unknown hardware type %{private}d
Unsupported HW type %d; file a radar to Purple Motion Framework
no mutable store path for type, %{public}d
could not get mutable store path for type, %{public}d
this SPI is obsolete and will be removed in the future
{"msg%{public}.0s":"getDaemonProxy called"}
{"msg%{public}.0s":"no existing connection, trying to get one"}
Simulation connection interrupted
Simulation connection invalidated
Error fetching remoteObjectProxy
{"msg%{public}.0s":"Do we have a proxy?", "proxy":%{public, location:escape_only}@, "connection":%{public, location:escape_only}@}
Failed parse os_log format specifier for shimming:missing closing brace,format,%{public}s
{"msg%{public}.0s":"Do not use CLGeocoder when GeoServices is missing", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
#Warning Geocode error: %{private}@
#Spi, Interrupted
#Spi, Invalidated
#Spi, Error with proxy, error: %@
#Spi, Key is NULL!
#Spi, Couldn't set location default!
{"msg%{public}.0s":"#Spi, getLocationDefaultForKey, ", "error":%{public, location:escape_only}@}
#Spi, setPrivateMode failed
#Spi, CLInternalSetLocationServicesEnabled failed
#Spi, CLInternalSetAuthorizationPromptMapDisplayEnabled failed
#Spi, CLInternalSetGestureServiceEnabled failed
#Spi, _CLInternalPerformMigration failed
#Spi, _CLShutdownDaemon failed
#Spi, _CLDisplayStatistics failed
#Spi, _CLDumpLogs failed
#Spi, Exceeded max number of route hint road segments (%d > %d)
#Spi,RouteHint,LocationInternal,Received route hint road segments,%d
#Spi, Couldn't set map-matching route hint!
#Spi, _CLCopyLastLog failed
{"msg%{public}.0s":"#Spi, Setting status bar enabled for entity class failed", "entityClass":%{public, location:CLLocationDictionaryUtilitiesEntityClass}lld}
{"msg%{public}.0s":"Getting status bar enabled for entity class failed", "entityClass":%{public, location:CLLocationDictionaryUtilitiesEntityClass}lld}
CL: CLInternalSetAuthorizationStatus
{"msg%{public}.0s":"CLInternalSetAuthorizationStatus", "event":%{public, location:escape_only}s}
CL: CLCopyAppsUsingLocation
{"msg%{public}.0s":"CLCopyAppsUsingLocation", "event":%{public, location:escape_only}s}
CL: CLSetLocationDefault
{"msg%{public}.0s":"CLSetLocationDefault", "event":%{public, location:escape_only}s, "key":%{public, location:escape_only}@}
CL: CLCopyTechnologiesInUse
{"msg%{public}.0s":"CLCopyTechnologiesInUse", "event":%{public, location:escape_only}s}
CL: CLGetLocationDefault
{"msg%{public}.0s":"CLGetLocationDefault", "event":%{public, location:escape_only}s, "key":%{public, location:escape_only}@}
CL: CLGetPipelinedCaches
{"msg%{public}.0s":"CLGetPipelinedCaches", "event":%{public, location:escape_only}s}
CL: CLGetMotionSensorLogs
{"msg%{public}.0s":"CLGetMotionSensorLogs", "event":%{public, location:escape_only}s}
CL: CLGetAccessoryMotionSensorLogs
{"msg%{public}.0s":"CLGetAccessoryMotionSensorLogs", "event":%{public, location:escape_only}s}
CL: CLApplyArchivedAuthorizationDecisions
{"msg%{public}.0s":"CLApplyArchivedAuthorizationDecisions", "event":%{public, location:escape_only}s}
CL: CLGetArchivedAuthorizationDecisions
{"msg%{public}.0s":"CLGetArchivedAuthorizationDecisions", "event":%{public, location:escape_only}s}
CL: CLTimeZoneAtLocation
{"msg%{public}.0s":"CLTimeZoneAtLocation", "event":%{public, location:escape_only}s}
CL: CLStartStopAdvertisingBeacon
{"msg%{public}.0s":"CLStartStopAdvertisingBeacon", "event":%{public, location:escape_only}s, "region":%{private, location:escape_only}@, "power":%{public, location:escape_only}@}
CL: CLPingDaemon
{"msg%{public}.0s":"CLPingDaemon", "event":%{public, location:escape_only}s}
CL: CLPassKitNotifyPassUsage
{"msg%{public}.0s":"CLPassKitNotifyPassUsage", "event":%{public, location:escape_only}s}
CL: CLInternalGetAuthorizationStatus
{"msg%{public}.0s":"CLInternalGetAuthorizationStatus", "event":%{public, location:escape_only}s}
CL: CLInternalPerformMigration
{"msg%{public}.0s":"CLInternalPerformMigration", "event":%{public, location:escape_only}s}
CL: CLGetStatusBarIconState
{"msg%{public}.0s":"CLGetStatusBarIconState", "event":%{public, location:escape_only}s}
CL: CLSetMapMatchingRouteHint
{"msg%{public}.0s":"CLSetMapMatchingRouteHint", "event":%{public, location:escape_only}s}
RouteHints,CLSetMapMatchingRouteHint,received,%lu,type,%d
CL: CLSetRouteHintsForMapMatching
{"msg%{public}.0s":"CLSetRouteHintsForMapMatching", "event":%{public, location:escape_only}s}
RouteHints,CLSetRouteHintsForMapMatching,received,%lu,type,%d
CL: CLInternalSetAuthorizationStatusByType
{"msg%{public}.0s":"CLInternalSetAuthorizationStatusByType", "event":%{public, location:escape_only}s}
CL: CLInternalSetTemporaryAuthorizationGranted
{"msg%{public}.0s":"CLInternalSetTemporaryAuthorizationGranted", "event":%{public, location:escape_only}s}
{"msg%{public}.0s":"Could not serialize _CLARSessionState"}
{"msg%{public}.0s":"Do not use CLPlaceMark when GeoServices is missing", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
CLHarvester invalidation handler
CLHarvester interruption handler
CLHarvester synchronous remote proxy invalidated
CLHarvester fetchState reply block called
{"msg%{public}.0s":"Could not serialize _CLVIOEstimation", "error":%{public, location:escape_only}@}
{"msg%{public}.0s":"Subclass should have overriden this", "class":%{public, location:escape_only}s, "SEL":%{public, location:escape_only}s}
#Warning refAlt < %.1lf,refAlt,%.1lf,using the min
#Warning refAlt > %.1lf,refAlt,%.1lf,using the max
Reductive filtering: Sum of weights <= 0 after at least one point added.
{"msg%{public}.0s":"Reductive filtering", "input":%{private}d, "outliers":%{private}d, "used":%{private}d, "lat":"%{private}f", "lon":"%{private}f", "hunc":"%{private}f", "timestamp":%{public, location:escape_only}s}
CLClientRef CLClientAllocate(CFAllocatorRef, CLClientCallback, const CLClientContext *)
CoreLocation: non-matching retain (%p) and release (%p) functions in context, ignoring
CoreLocation: Failed to initilize fHeadingCalibrationDisplayMutex, error code: %{public}d
com.apple.CoreLocation.%p
UIApplicationWillResignActiveNotification
UIApplicationDidBecomeActiveNotification
activity
CLClient-runloop
A location manager (%p) was created on a dispatch queue executing on a thread other than the main thread.  It is the developer's responsibility to ensure that there is a run loop running on the thread on which the location manager object is allocated.  In particular, creating location managers in arbitrary dispatch queues (not attached to the main queue) is not supported and will result in callbacks not being received.
CLClientRef CLClientCreateWithBundleIdentifierAndPathOnSilo(CFAllocatorRef, CLClientCallback, const CLClientContext *, CFStringRef, CFStringRef, CLSilo *)
CoreLocation: Location manager created on a dispatch queue exectuing on non-main thread, notifying client
UIBackgroundModes
location
assert
!client->fContext.info
%s:%d: assertion failure in %s
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2384/Framework/CLClient.mm
_CLClientDestroy
<CLClient %p [%p]>
CLClient
void CLClientInvokeCallback(CLClientRef, CLClientEvent, id)
CoreLocation: Location callback block not executed in a timely manner!
CoreLocation: Discarding message for event %{private}d because of too many unprocessed messages
v8@?0
void CLClientHandleWillResignActiveNotification(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)
CoreLocation: received client will resign active notification
void CLClientHandleDidBecomeActiveNotification(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)_block_invoke
CoreLocation: received client did become active notification
kCLConnectionMessagePurposeKey
kCLConnectionMessagePurpose
void CLClientRequestAuthorization(CLClientRef, CLClientAuthorizationStatus)
CoreLocation: Missing UsageDescription key for requested authorization: %{public}d
CoreLocation: Invalid requested authorization: %{public}d
kCLConnectionMessageStatusKey
kCLConnectionMessageRequestAuthorization
Boolean CLClientIsLocationServicesEnabled(CLClientRef)
CoreLocation: #Warning CLInternalGetLocationServicesEnabled failed: could not reach daemon
Boolean CLClientIsAuthorizationPromptMapDisplayEnabled()
CoreLocation: #Warning CLInternalGetAuthorizationPromptMapDisplayEnabled failed: could not reach daemon
mach-lookup
com.apple.locationd.registration
CLClientShutdownDaemon
Boolean CLClientShutdownDaemon(CLClientRef)
CoreLocation: CLClient is deprecated. Will be obsolete soon. (%{public}s)
CLClientLogDump
Boolean CLClientLogDump(CLClientRef, const char *, Boolean)
kCLConnectionMessageSubscribeKey
kCLConnectionMessageDesiredAccuracyKey
kCLConnectionMessageDistanceFilterKey
kCLConnectionMessageDynamicAccuracyReductionKey
kCLConnectionMessageAlteredAccessoryLocationsKey
kCLConnectionMessageLocation
kCLConnectionMessageEnabledKey
kCLConnectionMessageIsActuallyAWatchKitExtension
kCLConnectionMessageProxyForRemoteClient
kCLConnectionMessageHeadingFilterKey
kCLConnectionMessageHeading
Boolean CLClientShowHeadingCalibration(CLClientRef, Boolean)
CoreLocation: Application inactive, will not show heading calibration
kCLConnectionMessageSLCDistanceKey
kCLConnectionMessageSLCPowerBudgetKey
kCLConnectionMessageSignificantLocationChange
kCLConnectionMessagePlaceInferenceFidelityPolicyKey
kCLConnectionMessagePlaceInference
kCLConnectionMessageSignificantLocationVisitTypeKey
kCLConnectionMessageSignificantLocationVisit
kCLConnectionMessageNameKey
kCLConnectionMessageOnBehalfOfKey
kCLConnectionMessageNotifyOnEntryKey
kCLConnectionMessageNotifyOnExitKey
kCLConnectionMessageConservativeEntry
kCLConnectionMessageRegionTypeKey
kCLConnectionMessageLatitudeKey
kCLConnectionMessageLongitudeKey
kCLConnectionMessageRadiusKey
kCLConnectionMessageReferenceFrameKey
kCLConnectionMessageMonitoringNearby
kCLConnectionMessageRegionDefinitionKey
kCLConnectionMessageProximityUUIDKey
kCLConnectionMessageMajorKey
kCLConnectionMessageMinorKey
kCLConnectionMessageNotifyEntryStateOnDisplayKey
kCLConnectionMessageRegionMonitoring
Boolean CLClientRequestRegionState(CLClientRef, CLClientRegion *)
CoreLocation: Fence: CLClientRequestRegionState, unsupported fence type
kCLConnectionMessageRegionState
kCLConnectionMessageBeaconRegionKey
kCLConnectionMessageCircularRegionKey
kCLConnectionMessageRangingPeersKey
kCLConnectionMessageRangingPeerTimeoutKey
kCLConnectionMessageRangingPeerInitiatorKey
kCLConnectionMessagePeerRanging
IsFitnessMatch
kCLConnectionMessageErrorKey
kCLConnectionMessageEventKey
kCLConnectionMessageErrorKey
kCLConnectionMessageAlternateRegionKey
kCLConnectionMessageIdentifierKey
kCLConnectionMessageRegionsKey
kCLConnectionMessageRanging
kCLConnectionMessageBeaconsKey
kCLConnectionMessageMatchInfoEnabled
kCLConnectionMessageGroundAltitudeEnabled
kCLConnectionMessageAllowsLocationPrompts
kCLConnectionMessageShowLocationPrompt
kCLConnectionMessageMarkAsHavingReceivedLocation
kCLConnectionMessageARSessionState
kCLConnectionMessageVIOEstimation
kCLConnectionMessageLSLHeadingEstimation
kCLConnectionMessageActivityTypeKey
kCLConnectionMessageActivityType
kCLConnectionMessagePausesLocationUpdatesAutomaticallyKey
kCLConnectionMessagePausesLocationUpdatesAutomatically
Boolean CLClientGetAutopauseState(CFDictionaryRef, Boolean *, Boolean *)
CoreLocation: Invalid call to CLClientGetAutopauseState
kCLConnectionMessageAutopauseStatusKey
kCLConnectionMessageAutopauseOverrideKey
CoreLocation: malformed message: kCLConnectionMessageAutopauseStatus
kCLConnectionMessageAllowsBackgroundLocationUpdatesKey
kCLConnectionMessageAllowsBackgroundLocationUpdates
kCLConnectionMessageShowsBackgroundLocationIndicatorKey
kCLConnectionMessageShowsBackgroundLocationIndicator
kCLConnectionMessageBatchAllowedKey
kCLConnectionMessageBatchDistanceKey
kCLConnectionMessageBatchTimeoutKey
kCLConnectionMessageBatch
kCLConnectionMessageAllowsMapCorrectionKey
kCLConnectionMessageAllowsMapCorrection
kCLConnectionMessageRegisterAsLocationClient
kCLConnectionMessageVehicleSpeedKey
kCLConnectionMessageVehicleHeadingKey
kCLConnectionMessageVehicleSpeed
kCLConnectionMessageVehicleHeading
com.apple.locationd.Core
Client
Generic
ClientsCohortWorkLoop
v24@?0{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}8
kCLClientEventKey
void _CLClientHandleMessage(CLClientRef, std::shared_ptr<CLConnectionMessage>)
CoreLocation: Got unhandled message %s from daemon
LocationManager/kCLConnectionMessageRegistration
kCLConnectionMessageError
kCLConnectionMessageLocationUnavailable
kCLConnectionMessageRegionMonitoringError
kCLConnectionMessageRangingError
kCLConnectionMessageRegionMonitoringResponseDelayed
kCLConnectionMessageRegionMonitoringSetupCompleted
kCLConnectionMessageAuthorizationStatus
kCLConnectionMessageAutopauseStatus
kCLConnectionMessagePeerRangingRequestProcessed
kCLConnectionMessagePeerRangingError
kCLConnectionMessageHeadingDataKey
kCLConnectionMessageBundleIdentifierKey
kCLConnectionMessageBundlePathKey
kCLConnectionMessageClientSDKKey
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2384/Framework/CoreLocation/CLLocationManagerRoutine.m
<Unknown File>
Invalid parameter not satisfying: %@
queue
locationManagerRoutine
com.apple.locationd.routine
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Connection Interrupted, serviceName, %@
Connection Invalidated, serviceName %@
connection
T@"NSXPCConnection",&,N,V_connection
delegate
T@"<CLLocationManagerDelegate>",N,V_delegate
T@"CLLocationManagerRoutine",N,V_locationManagerRoutine
updating
TB,N,V_updating
_CLLocationManagerRoutineProxy, %p
delegate must respond to selector locationManager:didUpdateLocations:
locationManagerRoutineProxy
T@"_CLLocationManagerRoutineProxy",&,N,V_locationManagerRoutineProxy
T@"<CLLocationManagerDelegate>",N
kCLConnectionMessagePurposeKey
EmergencyEnablementAssertion/kCLConnectionMessage
!_inTransaction
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2384/Framework/CoreLocation/CLLocationManager.m
-[CLLocationManagerStateTracker initWithQueue:identifier:state:]
state_transition
LocationManager
init
lifecycle
distanceFilter
desiredAccuracy
updatingLocation
requestingLocation
requestingRanging
updatingRanging
updatingHeading
headingFilter
allowsLocationPrompts
allowsAlteredAccessoryLocations
dynamicAccuracyReductionEnabled
previousAuthorizationStatusValid
previousAuthorizationStatus
activityType
pausesLocationUpdatesAutomatically
paused
allowsBackgroundLocationUpdates
showsBackgroundLocationIndicator
allowsMapCorrection
batchingLocation
updatingVehicleSpeed
updatingVehicleHeading
matchInfoEnabled
groundAltitudeEnabled
courtesyPromptNeeded
-[CLLocationManagerStateTracker updateState:]
allStates
_CLLocationManagerStateTrackerState
Td,N
TB,N
Ti,N
Tq,N
v16@?0@"CLLocationManagerStateTracker"8
-[CLLocationManagerInternal hasLingeringRangingRequest]
CoreLocation: #Warning Has lingering peer ranging request
rangedRegions
T@"NSMutableSet",R,N,VfRangedRegions
rangedConstraints
T@"NSMutableSet",R,N,VfRangedConstraints
T@"<CLLocationManagerDelegate>",W,N,VfDelegate
manager
T@"CLLocationManager",W,N,VfManager
CLLocationManager-runloop
-[CLLocationManager initWithEffectiveBundleIdentifier:]
CoreLocation: initializing CLLocationManager with a nil identifier
-[CLLocationManager initWithEffectiveBundleIdentifier:delegate:onQueue:]
delegate && queue
-[CLLocationManager initWithEffectiveBundle:]
CoreLocation: initializing CLLocationManager with a nil bundle
-[CLLocationManager initWithEffectiveBundle:delegate:onQueue:]
-[CLLocationManager _initWithDelegate:onQueue:]
Non-UI clients cannont be autopaused
!stayUp || CLClientIsBackgroundable(internal->fClient) || _CFMZEnabled()
-[CLLocationManager setSupportInfo:]
CoreLocation: Obsolete
-[CLLocationManager startUpdatingLocation]
CoreLocation: Canceling requestLocation
Delegate must respond to locationManager:didUpdateLocations:
Delegate must respond to locationManager:didFailWithError:
-[CLLocationManager requestLocation]
CoreLocation: Ignoring requestLocation due to ongoing location.
-[CLLocationManager allowDeferredLocationUpdatesUntilTraveled:timeout:]
CoreLocation: Canceling requestLocation.
Application must support the location background mode (in app's Info.plist, {UIBackgroundModes=(location);}
-[CLLocationManager heading]
CoreLocation: heading, %{private}s
-[CLLocationManager startUpdatingHeading]
CoreLocation: Start updating heading. HeadingFilter, %{public}.2f
-[CLLocationManager stopUpdatingHeading]
CoreLocation: Stop updating heading
-[CLLocationManager dismissHeadingCalibrationDisplay]
CoreLocation: Dismissing Compass Calibration HUD
region != nil
region.onBehalfOfBundleId.length == 0
v24@?0@8^B16
constraint
constraint != nil
-[CLLocationManager requestRangingToPeers:timeoutSeconds:]
CoreLocation: WRTT: received requestRangingToPeers, timeout, %{public}lf
peers != nil
peers.count > 0
timeout > 0.0
timeout < kCLPeerRangingRequestTimeoutSecondsMax
Delegate must respond to locationManager:didRangePeers:
Delegate must respond to locationManager:rangingDidFailForPeer:withError:
CoreLocation: #Warning Ignoring requestRangingToPeers due to ongoing ranging
-[CLLocationManager respondToRangingFromPeers:timeoutSeconds:]
CoreLocation: WRTT: received respondToRangingFromPeers, timeout, %{public}lf
CoreLocation: #Warning Ignoring respondToRangingFromPeers due to ongoing ranging.
-[CLLocationManager startRangingToPeers:intervalSeconds:]
CoreLocation: WRTT: received startRangingToPeers, interval, %{public}lu
CoreLocation: #Warning Ignoring startRangingToPeers due to ongoing ranging
-[CLLocationManager stopRangingToPeers:]
CoreLocation: WRTT: received stopRangingToPeers
-[CLLocationManager startRangingFromPeers:]
CoreLocation: WRTT: received startRangingFromPeers
CoreLocation: #Warning Ignoring startRangingFromPeers due to ongoing ranging
-[CLLocationManager stopRangingFromPeers:]
CoreLocation: WRTT: received stopRangingFromPeers
-[CLLocationManager onLocationRequestTimeout]
CoreLocation: delivering locations to client's delegate
ForceMapMatching
-[CLLocationManager onClientEventAuthStatus:]
CoreLocation: could not get updated authorization status
-[CLLocationManager onClientEventLocation:forceMapMatching:type:]
CoreLocation: Location event received with empty payload
CoreLocation: New location is identical to old location; discarding
CoreLocation: New location predates old location, and the event types differ; discarding
-[CLLocationManager onClientEventHeading:]
CoreLocation: could not get updated heading
-[CLLocationManager onClientEventHeadingCalibration:]
CoreLocation: CL: Invoking Compass Calibration HUD
CoreLocation: Could not show heading calibration
-[CLLocationManager onClientEventPlaceInference:]
CoreLocation: in onClientEventPlaceInference for CLPlaceInferenceSubscription
kCLConnectionMessagePlaceInferencePlaceInferenceKey
-[CLLocationManager onClientEventError:]
CoreLocation: could not get error
-[CLLocationManager onClientEventRegion:]
CoreLocation: could not get region monitoring event
CoreLocation: Delivering region monitoring event to client's delegate
CoreLocation: Delivering region monitoring event, no delegate
CoreLocation: Delivering region monitoring state to client's delegate
CoreLocation: Delivering region monitoring state, no delegate
-[CLLocationManager onClientEventRegionState:]
CoreLocation: could not get the region state
CoreLocation: Delivering region monitoring state request to client's delegate
CoreLocation: Delivering region monitoring state request, no delegate
-[CLLocationManager onClientEventRegionError:]
CoreLocation: Delivering region monitoring error to client's delegate
-[CLLocationManager onClientEventRanging:]
CoreLocation: could not get ranged beacons
-[CLLocationManager onClientEventRanging:]_block_invoke
CoreLocation: Client beacon is invalid (count,%lu).
v32@?0@8Q16^B24
proximity
accuracy
CoreLocation: Delivering range results to client's delegate
-[CLLocationManager onClientEventRangingError:]
CoreLocation: could not get ranging error
CoreLocation: Delivering range error to client's delegate
-[CLLocationManager onClientEventPeerRanging:]
CoreLocation: WRTT: received onClientEventPeerRanging
kCLConnectionMessageRangingPeersKey
-[CLLocationManager onClientEventPeerRangingRequestProcessed:]
CoreLocation: WRTT: received onClientEventPeerRangingRequestProcessed
kCLConnectionMessageSubscribeKey
-[CLLocationManager onClientEventPeerRangingError:]
CoreLocation: WRTT: received onClientEventPeerRangingError
kCLConnectionMessageErrorsKey
[peers count] == [errors count]
-[CLLocationManager onClientEventRegionResponseDelayed:]
-[CLLocationManager onClientEventRegionSetupCompleted:]
-[CLLocationManager onClientEventAutopauseStatus:]
CoreLocation: could not get updated paused state
-[CLLocationManager onClientEventBatch:]
CoreLocation: could not get batch result
success
CoreLocation: Finished deferred updates: %s
-[CLLocationManager onClientEventVehicleSpeed:]
CoreLocation: could not get updated vehicle speed
-[CLLocationManager onClientEventVehicleHeading:]
CoreLocation: could not get updated vehicle heading
kCLConnectionMessageSignificantLocationVisitKey
handler
+[CLLocationManager dumpDiagnosticFilesWithHandler:]
CoreLocation: dumpDiagnosticFiles called, trying to make an xpc call
com.apple.locationd.diagnostic
+[CLLocationManager dumpDiagnosticFilesWithHandler:]_block_invoke
CoreLocation: #diagnosticManager failed to get remoteObjectProxy with error %@
v16@?0@"NSError"8
CoreLocation: #diagnosticManager error copying files: %@
v24@?0@"NSArray"8@"NSError"16
privateMode
locationServicesAvailable
TB,R,N
locationServicesApproved
expectedGpsUpdateInterval
Td,R,N
supportInfo
internalClient
T^{__CLClient=},R,N
locationServicesPreferencesDialogEnabled
TB,N,GisLocationServicesPreferencesDialogEnabled
TB,N,GisDynamicAccuracyReductionEnabled
T@"<CLLocationManagerDelegate>",W,N
locationServicesEnabled
purpose
T@"NSString",C,N
T@"CLLocation",R,C,N
headingAvailable
headingOrientation
heading
T@"CLHeading",R,C,N
maximumRegionMonitoringDistance
monitoredRegions
T@"NSSet",R,C,N
rangedBeaconConstraints
-[CLLocationManager(VehicleData) startUpdatingVehicleSpeed]
CoreLocation: Start updating vehicle speed
-[CLLocationManager(VehicleData) stopUpdatingVehicleSpeed]
CoreLocation: Stop updating vehicle speed
-[CLLocationManager(VehicleData) startUpdatingVehicleHeading]
CoreLocation: Start updating vehicle heading
-[CLLocationManager(VehicleData) stopUpdatingVehicleHeading]
CoreLocation: Stop updating vehicle heading
TB,N,GisMatchInfoEnabled
placeInferenceHandler
Core
com.apple.locationd.Position
Proximity
LocationCount
Locations
LocationsPrivate
ERROR
WARNING
STATUS
INFO
VERBOSE
NONE
com.apple.locationd
LocationServicesAvailable
com.apple.locationd.DumpDiagnostics
com.apple.carrier
NSLocationUsageDescription
NSLocationAlwaysUsageDescription
NSLocationWhenInUseUsageDescription
NSLocationAlwaysAndWhenInUseUsageDescription
WKWatchOnly
WKRunsIndependentlyOfCompanionApp
void CLCommonSetRunLoop(CFRunLoopRef)
CoreLocation: #Warning Changing CLCommon's runloop after it was already established
CoreLocation: #Warning Setting CLCommon's runloop after it was already established
CoreLocation: CLCommonSetRunLoop, %p
mobile
int CLCommonCopyFile(const char *, const char *)
CoreLocation: cannot open source file: %{public}s, errno %{public}d
CoreLocation: cannot open target file: %{public}s, errno %{public}d
CoreLocation: error reading source file: %{public}s
CoreLocation: error writing target file: %{public}s
int CLCommonBzipFile(const char *, const char *)
CoreLocation: cannot open compression stream: %{public}s, bzerror %{public}d
CoreLocation: error writing target file: %{public}s, bzerror: %{public}d
CoreLocation: error closing target file: %{public}s, bzerror: %{public}d
compress:%@
%.1f
Boolean CLCommonCompareLocationEqualityClientWithTimeCheck(const CLClientLocation *, const CLClientLocation *, bool)
CoreLocation: CLCommonCompareLocationEqualityClient compared two coordinates that were identical other than their reference frames: (%lf, %lf, %d) (%lf, %lf, %d)
com.apple.locationd.Legacy
Generic_deprecated
__TEXT
Binary Images:
armv6
armv7
unknown
%16p - %lld %c%s %s <
%02X
> %s
kCLLocationCodingKeyGroundAltitudeEstimate
kCLLocationCodingKeyGroundAltitudeUncertainty
supportsSecureCoding
TB,R
estimate
Td,R,N,V_estimate
uncertainty
Td,R,N,V_uncertainty
_CLLocationSmootherProxy, %p
com.apple.locationd.smoother
T@"<CLLocationSmootherDelegate>",N,V_delegate
locationManagerSmoother
T@"CLLocationSmoother",N,V_locationManagerSmoother
CLSmootherErrorDomain
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2384/Framework/CoreLocation/CLLocationSmoother.mm
-[CLLocationSmoother smoothLocations:handler:]
locationManagerSmootherProxy
T@"_CLLocationSmootherProxy",R,&,N
T@"<CLLocationManagerDelegateInternal>",N
kCLLocationMatchInfoCodingKeyMatchQuality
kCLLocationMatchInfoCodingKeyMatchCoordinateLatitude
kCLLocationMatchInfoCodingKeyMatchCoordinateLongitude
kCLLocationMatchInfoCodingKeyMatchCourse
kCLLocationMatchInfoCodingKeyMatchFormOfWay
kCLLocationMatchInfoCodingKeyMatchRoadClass
kCLLocationMatchInfoCodingKeyMatchShifted
kCLLocationMatchInfoCodingKeyMatchDataArray
matchQuality %ld matchCoordinate <%+.8f,%+.8f> matchCourse %.2f matchFormOfWay %d matchRoadClass %d matchShifted %d
%ld <%+.8f,%+.8f> %.2f %d %d %d
matchQuality
Tq,R,N
matchCoordinate
T{CLLocationCoordinate2D=dd},R,N
matchCourse
matchFormOfWay
Ti,R,N
matchRoadClass
matchShifted
TB,R,N,GisMatchShifted
matchDataArray
T@"NSData",R,C,N
UIApplication
static bool CLNameValuePair::encodeBase64(const void *, unsigned long, std::string &)
CoreLocation: processed %p %d to (%s)
CLNameValuePair::CLNameValuePair()
CoreLocation: could not create new mutable dictionary
CLNameValuePair::CLNameValuePair(CFDictionaryRef)
Memory
virtual bool CLNameValuePair::loadFromFile(const char *)
CoreLocation: could not deserialize property list from %{public}s
CoreLocation: file %s does not exist... clearing, error, %s
CoreLocation: #Warning Error reading file %{public}s: %{public}s
bool CLNameValuePair::writeDataToFile(const char *, CFDataRef, CLNameValuePair::CLNVPDataProtection) const
CoreLocation: Could not create NSURL for file: %{public}s
CoreLocation: Could not write data to disk %{public}s, %{public}s
virtual bool CLNameValuePair::saveToFile(const char *) const
CoreLocation: Could not serialize data for file %{public}s
virtual bool CLNameValuePair::saveToBinaryFile(const char *, CLNameValuePair::CLNVPDataProtection) const
virtual void CLNameValuePair::clearInternal(const CFStringRef, int)
CoreLocation: key %{public}s does not have element %{public}d in array of size %{public}ld
CoreLocation: key %{public}s does not have element %{public}d in non-array type %{public}lu
virtual bool CLNameValuePair::get(CFStringRef, bool &, int) const
CoreLocation: Unsupported type at %@:%@ (domain:key)
virtual bool CLNameValuePair::get(CFStringRef, uint16_t &, int) const
virtual bool CLNameValuePair::get(CFStringRef, short &, int) const
virtual bool CLNameValuePair::get(CFStringRef, uint32_t &, int) const
virtual bool CLNameValuePair::get(CFStringRef, int64_t &, int) const
virtual bool CLNameValuePair::get(CFStringRef, int &, int) const
virtual bool CLNameValuePair::get(CFStringRef, long &, int) const
virtual bool CLNameValuePair::get(CFStringRef, double &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CLNameValuePair &, int) const
virtual bool CLNameValuePair::get(CFStringRef, std::string &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CFArrayRef &) const
CoreLocation: type IDs do not match for key %{public}s - %{public}lu vs %{public}lu
virtual bool CLNameValuePair::get(CFStringRef, CFDataRef &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CFStringRef &, int) const
virtual bool CLNameValuePair::get(CFStringRef, const char *&, unsigned int &, int) const
virtual bool CLNameValuePair::copyInternal(CFStringRef, CFTypeRef &, int) const
CoreLocation: specified index is out of range for key %{public}s (%{public}d of %{public}ld)
CoreLocation: specified index %{public}d not applicable to type %{public}lu for key %{public}s
virtual bool CLNameValuePair::set(CFStringRef, const bool &)
CoreLocation: could not create cf type for key %{public}s
virtual bool CLNameValuePair::set(CFStringRef, const uint16_t &)
virtual bool CLNameValuePair::set(CFStringRef, const short &)
virtual bool CLNameValuePair::set(CFStringRef, const uint32_t &)
virtual bool CLNameValuePair::set(CFStringRef, const int64_t &)
virtual bool CLNameValuePair::set(CFStringRef, const int &)
virtual bool CLNameValuePair::set(CFStringRef, const long &)
virtual bool CLNameValuePair::set(CFStringRef, const double &)
virtual bool CLNameValuePair::set(CFStringRef, const char *)
virtual bool CLNameValuePair::set(CFStringRef, const CLNameValuePair &)
virtual bool CLNameValuePair::insert(CFStringRef, const bool &)
virtual bool CLNameValuePair::insert(CFStringRef, const uint16_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const short &)
virtual bool CLNameValuePair::insert(CFStringRef, const uint32_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const int64_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const int &)
virtual bool CLNameValuePair::insert(CFStringRef, const long &)
virtual bool CLNameValuePair::insert(CFStringRef, const double &)
virtual bool CLNameValuePair::insert(CFStringRef, const char *)
virtual bool CLNameValuePair::insert(CFStringRef, const CLNameValuePair &)
virtual bool CLNameValuePair::serializeBinary(CFDataRef *) const
CoreLocation: could not create write stream
CoreLocation: could not open write stream
unknown error
CoreLocation: could not write data, error code, %{public}ld, error domain, %{public}s
virtual bool CLNameValuePair::deserialize(const CFDataRef)
CoreLocation: could not create intermediate property list - %{public}ld (%{public}s)
virtual void CLNameValuePair::print() const
CoreLocation: %s
<empty>
static void CLNameValuePair::printKeyValue(const void *, const void *, void *)
CoreLocation: 
%s = <dictionary (%ld entries)>:
CoreLocation: 
%s = %s
CoreLocation: 
%s = %0.6f
CoreLocation: 
%s = %d
CoreLocation: 
%s = <unhandled value type %lu>
type ID does not match - %lu vs %lu
%s = <dictionary (%ld entries)>:
%s = %s
%s = %0.6f
%s = %d
%s = <unhandled value type %lu>
%s[%d]
static bool CLNameValuePair::fromCfType(const CFTypeRef, short &)
CoreLocation: could not get value
static bool CLNameValuePair::fromCfType(const CFTypeRef, int64_t &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, int &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, long &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, double &)
CoreLocation: type IDs do not match - %{public}lu vs %{public}lu
static bool CLNameValuePair::fromCfType(const CFTypeRef, std::string &)
CoreLocation: could not convert to C string
CoreLocation: can't convert %{public}u data bytes
CoreLocation: #Warning type IDs do not match - %{public}lu
static bool CLNameValuePair::fromCfType(const CFTypeRef, const char *&, unsigned int &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, CLNameValuePair &)
Direct_deprecated
/System/Library/PrivateFrameworks/CompassUI.framework/CompassUI
void CLClientLoadCompassUIIfNecessary(void)
CoreLocation: Unable to load CompassUI framework
CUICalibration
CoreLocation: Could not load CUICalibrationClass from CompassUI framework
error == 0
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2384/Daemon/Core/CSI/CLMachThreadSupport.mm
lock
info->fCount >= 0
(info->fCount == 0) || (info->fOwner == curThread)
(info->fCount > 0) || (info->fOwner == __null)
info->fCount > 0
unlock
kCLHeadingCodingKeyMagneticHeading
kCLHeadingCodingKeyTrueHeading
kCLHeadingCodingKeyAccuracy
kCLHeadingCodingKeyX
kCLHeadingCodingKeyY
kCLHeadingCodingKeyZ
kCLHeadingCodingKeyTimestamp
magneticHeading %.2f trueHeading %.2f accuracy %.2f x %+.3f y %+.3f z %+.3f @ %@
magneticHeading
trueHeading
headingAccuracy
timestamp
T@"NSDate",R,C,N
virtual bool CLPreferences::serialize(CFDataRef *) const
CoreLocation: ***not supported***
virtual bool CLPreferences::serializeBinary(CFDataRef *) const
virtual bool CLPreferences::deserialize(const CFDataRef)
virtual void CLPreferences::print() const
CoreLocation: 
<empty>
virtual void CLPreferences::merge(const CLPreferences &, bool)
virtual bool CLPreferences::loadFromFile(const char *)
virtual bool CLPreferences::saveToFile(const char *) const
virtual bool CLPreferences::saveToBinaryFile(const char *) const
virtual void CLPreferences::setInternal(const CFStringRef, const CFTypeRef)
CoreLocation: Attempt to set key %{public}s for read-only preferences %{public}s/%{public}s!
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2384/Daemon/Shared/Utilities/CLPreferences.mm
containsInternal
OtherPref
kCLErrorDomain
kCLErrorDomainPrivate
kCLErrorUserInfoAlternateRegionKey
IsSimulator
<null>
<name>
<version>
<build>
hw.model
IOPlatformExpertDevice
IOPlatformSerialNumber
CLPlatformInfo::Provider CLPlatformInfo::getProviders()_block_invoke
CoreLocation: unknown hardware type %{private}d
locationd
static CLPlatformInfo::MotionProviders CLPlatformInfo::motionProviders()
CoreLocation: Unsupported HW type %d; file a radar to Purple Motion Framework
com.apple.locationd.Utility
Utility
/Library/Caches/locationd/
root
static std::string CLPersistentStore::getMutableStorePath(CLPersistentStoreType)
CoreLocation: no mutable store path for type, %{public}d
CoreLocation: could not get mutable store path for type, %{public}d
/System/Library/Frameworks/CoreLocation.framework/Support/
/System/Library/Frameworks/CoreLocation.framework
SIMULATOR_ROOT
(Unspecified)
kCLConnectionMessageAssertionLevelKey
InUseAssertion/kCLConnectionMessage
kCLRegionCodingKeyCenterLatitude
kCLRegionCodingKeyCenterLongitude
kCLRegionCodingKeyRadius
kCLRegionCodingKeyIdentifier
kCLRegionCodingKeyOnBehalfOfBundleId
kCLRegionCodingKeyNotifyOnEntry
kCLRegionCodingKeyNotifyOnExit
kCLRegionCodingKeyConservativeEntry
reserved
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2384/Framework/CoreLocation/CLRegion.m
onBehalfOfConversion == true
CLRegion (identifier:'%@', center:<%+.8f,%+.8f>, radius:%.2fm)
clientRegion
T{?=[512c][512c]iBBB(?={?=[512c]SSiB}{?={?=dd}ddiB})},R,N
onBehalfOfBundleId
conservativeEntry
referenceFrame
center
radius
identifier
T@"NSString",R,C,N
notifyOnEntry
notifyOnExit
kCLCircularRegionCodingKeyCenterLatitude
kCLCircularRegionCodingKeyCenterLongitude
kCLCircularRegionCodingKeyRadius
kCLCircularRegionCodingKeyMonitoringNearby
CLCircularRegion (identifier:'%@', center:<%+.8f,%+.8f>, radius:%.2fm)
CLBeaconRegionAnyIdentifier
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2384/Framework/CoreLocation/CLBeaconRegion.m
beaconIdentityConstraint
kCLBeaconRegionCodingKeyProximityUUID
kCLBeaconRegionCodingKeyMajor
kCLBeaconRegionCodingKeyMinor
kCLBeaconRegionNotifyEntryStateOnDisplay
CLBeaconRegion (identifier:'%@', uuid:%@, major:%@, minor:%@)
T@"CLBeaconIdentityConstraint",R,C,N
UUID
T@"NSUUID",R,C,N
proximityUUID
major
T@"NSNumber",R,C,N
minor
notifyEntryStateOnDisplay
kCLBeaconCodingKeyTimestamp
kCLBeaconCodingKeyProximityUUID
kCLBeaconCodingKeyMajor
kCLBeaconCodingKeyMinor
kCLBeaconCodingKeyProximity
kCLBeaconCodingKeyAccuracy
kCLBeaconCodingKeyRSSI
CLBeacon (uuid:%@, major:%@, minor:%@, proximity:%d +/- %.2fm, rssi:%ld, timestamp:%@)
rssi
com.apple.locationd.appreset
com.apple.locationd.appstatus
com.apple.locationd.techstatus
com.apple.locationd.started
com.apple.locationd.statusbar
com.apple.locationd.authorization
Locations
LocationCount
%+08.4lf%+09.4lf/
%+08.4lf%+09.4lf%+08.3lf/
SimulationScenarios
Couldn't get list of location simulation scenarios
plist
Selected location simulation scenario is not a file URL
Selected location simulation scenario does not exist
Selected location simulation scenario is not a property list
CLSimulation: Object passed to appendSimulatedLocation is not a CLLocation!
-[CLSimulationManager clearSimulatedCells]
CoreLocation: this SPI is obsolete and will be removed in the future
-[CLSimulationManager setSimulatedCell:]
-[CLSimulationManager startCellSimulation]
-[CLSimulationManager stopCellSimulation]
-[CLSimulationManager setSimulatedCellRegistrationStatus:]
-[CLSimulationManager setWifiScanResults:]
-[CLSimulationManager startWifiSimulation]
-[CLSimulationManager stopWifiSimulation]
-[CLSimulationManager setSimulatedWifiPower:]
-[CLSimulationManager flush]
com.apple.locationd.simulation
-[CLSimulationManager daemonProxy]_block_invoke
CoreLocation: Simulation connection interrupted
CoreLocation: Simulation connection invalidated
CoreLocation: Error fetching remoteObjectProxy
daemonProxy
T@"<CLSimulationXPCServerInterface>",R
locationDeliveryBehavior
TC,N,V_locationDeliveryBehavior
locationDistance
Td,N,V_locationDistance
locationInterval
Td,N,V_locationInterval
locationSpeed
Td,N,V_locationSpeed
locationRepeatBehavior
TC,N,V_locationRepeatBehavior
Simulation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2384/Framework/CoreLocation/CLBeaconIdentityConstraint.m
The UUID parameter is required
[decoder allowsKeyedCoding]
kCLBeaconIdentityConstraintUUID
kCLBeaconIdentityConstraintMajor
kCLBeaconIdentityConstraintMinor
[encoder allowsKeyedCoding]
CLBeaconIdentityConstraint (uuid:%@, major:%@, minor:%@)
T@"NSUUID",C,N,V_UUID
T@"NSNumber",R,C,N,V_major
T@"NSNumber",R,C,N,V_minor
LogFile
LogFileDirectory
LogFilePrefix
LogFileFlush
ShowError
LogFence
LogBufferSize
LogShowUI
LogFileLevel
LogBufferLevel
LogConsoleLevel
LogStackLevel
.log
com.apple.locationd.log.compression
vlog
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2384/Shared/Logging/CLLog.mm
newFullContentLength == fullContentLength
'\n' == buffer[fullContentLength - 1]
%s,%s,Time,%08.3f,Function,"%s",
%s,%s,Time,%08.3f,
%s,%s,logging locations to %s%s
NOTICE
CLLog
 and flushing immediately
 no flush
%s,%s,logging locations to an internal buffer with capacity %d
.bz2
%s,%s,Failed to move aside log file %s (%d)
ERROR
.log.bz2
%s/%s
Failed to delete log
%s,%s,Rotation path is too long, could not delete old logs.
C16@?0r*8
%s,%s,Failed to write %s
%s,%s,could not open locations log %s, errno %d
Unplugged!
void CLLog::logHeader()
CoreLocation-%s
locationd was compiled on %s at %s
Jul  7 2019
22:16:54
%s @ system model %s / version %s
/usr/libexec/locationd @ system model %s / version %s
IOPlatformSerialNumber: %s
Begin settings dump (read at construction of CLSettings or upon darwin notification 'com.apple.locationd/prefs')
End settings dump
com.apple.timed
%s,%s,dumping internal buffer
LogNatalimetry
LogCalorimetry
userinfo
.plist
cache
.plist.log
%s,%s,could not copy %s log
WARNING
%s,%s,could not dump log file
%s,%s,Time,%08.3f,%d
0x%08lx %s + %lu
STATUS
STACK
%s,%s,Time,%08.3f,%d
0x%08lx 0x%08lx + %lu
%s,%s,Time,%08.3f,%d
0x%08lx
kCLVehicleHeadingCodingKeyTrueHeading
kCLVehicleHeadingCodingKeyTimestamp
trueHeading %.2f @ %@
%.2f
T@"NSDate",R,N
kCLVehicleSpeedCodingKeySpeed
kCLVehicleSpeedCodingKeyTimestamp
speed %.2f mps @ %@
%.0fmph
speed
CLCircularLogBuffer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2384/Framework/CoreLocation/CLVisit.m
kCLVisitCodingKeyLatitude
kCLVisitCodingKeyLongitude
kCLVisitCodingKeyHorizontalAccuracy
kCLVisitCodingKeyArrivalDate
kCLVisitCodingKeyDepartureDate
kCLVisitCodingKeyDetectionDate
<%+.8f,%+.8f> +/- %.2fm (%@ to %@)
hasArrivalDate
hasDepartureDate
detectionDate
T@"NSDate",R,C,N,V_detectionDate
arrivalDate
T@"NSDate",R,C,N,V_arrivalDate
departureDate
T@"NSDate",R,C,N,V_departureDate
coordinate
T{CLLocationCoordinate2D=dd},R,N,V_coordinate
horizontalAccuracy
Td,R,N,V_horizontalAccuracy
[GEOMapService class]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2384/Framework/CoreLocation/CLGeocoder.m
-[CLGeocoder init]
CLGeocoder
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
-[CLGeocoder _ticket:didReturnError:partialResultForLocation:]_block_invoke
CoreLocation: #Warning Geocode error: %{private}@
geocoding
TB,R,N,GisGeocoding
Thoroughfare
SubLocality
City
SubAdministrativeArea
State
Country
CountryCode
com.apple.locationd.synchronous
-[CLLocationInternalClient synchronousRemoteObject]_block_invoke
CoreLocation: #Spi, Interrupted
CoreLocation: #Spi, Invalidated
CoreLocation: #Spi, Error with proxy, error: %@
v24@?0@"NSError"8@"NSData"16
com.apple.locationd.internalservice.errorDomain
v24@?0@"NSError"8@"NSDictionary"16
v24@?0@"NSError"8@"NSArray"16
-[CLLocationInternalClient setLocationDefaultForKey:value:]
CoreLocation: #Spi, Key is NULL!
-[CLLocationInternalClient setLocationDefaultForKey:value:]_block_invoke
CoreLocation: #Spi, Couldn't set location default!
-[CLLocationInternalClient timeZoneAtLocation:]
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2384/Framework/LocationInternal.m
nil != location
v24@?0@"NSError"8@"NSString"16
-[CLLocationInternalClient setPrivateMode:]_block_invoke
CoreLocation: #Spi, setPrivateMode failed
v20@?0@"NSError"8B16
-[CLLocationInternalClient setLocationServicesEnabled:]_block_invoke
CoreLocation: #Spi, CLInternalSetLocationServicesEnabled failed
v20@?0@"NSError"8i16
-[CLLocationInternalClient setAuthorizationPromptMapDisplayEnabled:]_block_invoke
CoreLocation: #Spi, CLInternalSetAuthorizationPromptMapDisplayEnabled failed
-[CLLocationInternalClient setGestureServiceEnabled:]_block_invoke
CoreLocation: #Spi, CLInternalSetGestureServiceEnabled failed
-[CLLocationInternalClient performMigration]
CoreLocation: #Spi, _CLInternalPerformMigration failed
-[CLLocationInternalClient shutdownDaemon]
CoreLocation: #Spi, _CLShutdownDaemon failed
-[CLLocationInternalClient displayStatistics]
CoreLocation: #Spi, _CLDisplayStatistics failed
-[CLLocationInternalClient dumpLogs:]
CoreLocation: #Spi, _CLDumpLogs failed
v180@?0@"NSError"8{?=ii{?=dd}ddddddddddidi{?=dd}diIiii}16
-[CLLocationInternalClient setMapMatchingRouteHint:count:routingType:]
CoreLocation: #Spi, Exceeded max number of route hint road segments (%d > %d)
CoreLocation: #Spi,RouteHint,LocationInternal,Received route hint road segments,%d
-[CLLocationInternalClient setMapMatchingRouteHint:count:routingType:]_block_invoke
CoreLocation: #Spi, Couldn't set map-matching route hint!
-[CLLocationInternalClient copyLastLog]
CoreLocation: #Spi, _CLCopyLastLog failed
v32@?0@"NSError"8Q16Q24
void CLSetMapMatchingRouteHint(uint64_t *, int)
CoreLocation: RouteHints,CLSetMapMatchingRouteHint,received,%lu,type,%d
void CLSetRouteHintsForMapMatching(CLClientLocationRouteHintType, CLMapsRouteHint *, int)
CoreLocation: RouteHints,CLSetRouteHintsForMapMatching,received,%lu,type,%d
[GEOLocation class]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2384/Framework/CoreLocation/CLPlacemark.m
-[CLPlacemarkInternal init]
<%+.8f,%+.8f> radius %.2f
kCLPlacemarkCodingKeyLocation
kCLPlacemarkCodingKeyAddress
kCLPlacemarkCodingKeyRegion
kCLPlacemarkCodingKeyAreasOfInterest
kCLPlacemarkCodingKeyGEOMapItem
Name
SubThoroughfare
Street
FormattedAddressLines
InlandWater
Ocean
<%+.8f,%+.8f> +/- %.2fm
, region 
region
T@"CLRegion",R,C,N
timeZone
T@"NSTimeZone",R,C,N
addressDictionary
T@"NSDictionary",R,C,N
name
thoroughfare
subThoroughfare
locality
subLocality
administrativeArea
subAdministrativeArea
postalCode
ISOcountryCode
country
inlandWater
ocean
areasOfInterest
T@"NSArray",R,C,N
postalAddress
T@"CNPostalAddress",R,N
CNPostalAddressStreetKey
/System/Library/Frameworks/Contacts.framework/Contacts
CNPostalAddressSubLocalityKey
CNPostalAddressCityKey
CNPostalAddressSubAdministrativeAreaKey
CNPostalAddressStateKey
CNPostalAddressPostalCodeKey
CNPostalAddressCountryKey
CNPostalAddressISOCountryCodeKey
CNPostalAddress
com.apple.locationd.harvester
CLPPoiHarvest
-[CLHarvester connect]_block_invoke
CoreLocation: CLHarvester invalidation handler
CoreLocation: CLHarvester interruption handler
-[CLHarvester currentStateDictionary]_block_invoke
CoreLocation: CLHarvester synchronous remote proxy invalidated
CoreLocation: CLHarvester fetchState reply block called
v16@?0@"NSDictionary"8
Harvester
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
UnknownStateTracker
T^v,R,N
BundleId
BundlePath
RemoteUsage
Authorization
Authorized
SupportedAuthorizationMask
CorrectiveCompensationEnabled
BackgroundIndicatorEnabled
LocationTimeStarted
LocationTimeStopped
FenceTimeStarted
FenceTimeStopped
SignificantTimeStarted
SignificantTimeStopped
VisitTimeStarted
VisitTimeStopped
RangeTimeStarted
RangeTimeStopped
BeaconRegionTimeStarted
BeaconRegionTimeStopped
ReceivingLocationInformationTimeStarted
ReceivingLocationInformationTimeStopped
NonPersistentSignificantTimeStarted
NonPersistentSignificantTimeStopped
Registered
CLBundleKeyValueCache
CLSystemService
CLIsFindMyiPhone
CLIsCoreRoutine
CLEmergencyService
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2384/Framework/CoreLocation/CLPlaceInference.m
kCLPlaceInferenceUserType
kCLPlaceInferencePlaceType
kCLPlaceInferencePlacemark
kCLPlaceInferenceReferenceLocation
kCLPlaceInferenceConfidence
kCLPlaceInferencePreferredName
CLPlaceInference, ref, <%f,%f> +/- %f, userType, %lu, placeType, %lu, placemark, %@, preferredName, %@, confidence, %f
userType
TQ,R,N,V_userType
placeType
TQ,R,N,V_placeType
placemark
T@"CLPlacemark",R,N,V_placemark
referenceLocation
T@"CLLocation",R,N,V_referenceLocation
confidence
Td,R,N,V_confidence
preferredName
T@"NSString",R,N,V_preferredName
double CLDistanceCalc::calculateDistance(const CLDaemonLocation &, const CLDaemonLocation &)
CoreLocation: #Warning refAlt < %.1lf,refAlt,%.1lf,using the min
CoreLocation: #Warning refAlt > %.1lf,refAlt,%.1lf,using the max
kCLLocationCodingKeyCoordinateLatitude
kCLLocationCodingKeyCoordinateLongitude
kCLLocationCodingKeyHorizontalAccuracy
kCLLocationCodingKeyAltitude
kCLLocationCodingKeyVerticalAccuracy
kCLLocationCodingKeySpeed
kCLLocationCodingKeySpeedAccuracy
kCLLocationCodingKeyCourse
kCLLocationCodingKeyTimestamp
kCLLocationCodingKeyType
kCLLocationCodingKeyLifespan
kCLLocationCodingKeyMatchInfo
kCLLocationCodingKeyFloor
kCLLocationCodingKeyIntegrity
kCLLocationCodingKeyGroundAltitude
level
Tq,R,N,Vlevel
<%+.8f,%+.8f> +/- %.2fm (speed %.2f mps / course %.2f) @ %@
suitability
latitude
longitude
altitude
verticalAccuracy
course
courseAccuracy
lifespan
type
rawLatitude
rawLongitude
rawReferenceFrame
signalEnvironment
clientLocation
T{?=ii{?=dd}ddddddddddidi{?=dd}diIiii},R,N
iso6709Notation
T@"NSString",R,N
rawCoordinate
rawCourse
integrity
TI,R,N
trustedTimestamp
speedAccuracy
floor
T@"CLFloor",R,C,N
matchInfo
T@"CLLocationMatchInfo",R,N
_groundAltitude
T@"_CLLocationGroundAltitude",R,N
+[CLLocation(ReductiveFiltering) locationByReductivelyFilteringLocations:]
CoreLocation: Reductive filtering: Sum of weights <= 0 after at least one point added.
yyyy-MM-dd HH:mm:ss.SSSS
Position
CLAssertionInternalQueue
CLLogBase
yyyy-MM-dd_HH-mm-ss
/Library/Logs/CrashReporter/com.apple.locationd
mobile
Library
Caches
Logs
CrashReporter
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2384/Framework/CoreLocation/CLRangingPeer.m
(macAddress & 0xFFFF000000000000) == 0
[aDecoder allowsKeyedCoding]
[aCoder allowsKeyedCoding]
Peer:%@ hasKey:%s
(len >= 11) && (len <= 17)
%02X:%02X:%02X:%02X:%02X:%02X
macAddress
TQ,R,N
secureRangingKeyID
distance
Peer: %@ time:%@ distance[m]:%.02f accuracy[m]:%.02f unlock:%s secure:%s initiator:%s
peer
T@"_CLRangingPeer",R,C,N
date
distanceMeters
accuracyMeters
initiator
TB,R,N,GisInitiator,V_initiator
shouldUnlock
kCLCodingKeyRangingPeerMacAddress
kCLCodingKeyRangingPeerSecureRangingKeyID
kCLCodingKeyRangingPeerDistancePeer
kCLCodingKeyRangingPeerDistanceTimestamp
kCLCodingKeyRangingPeerDistanceDistance
kCLCodingKeyRangingPeerDistanceAccuracy
kCLCodingKeyRangingPeerDistanceInitiator
kCLCodingKeyRangingPeerDistanceUnlock
LocationIndependenceAssertion/kCLConnectionMessage
<_CLLSLLocationCoordinate: %p> { .latitude = %f, .longitude = %f }
Td,N,V_latitude
Td,N,V_longitude
<_CLLSLLocation: %p> {
%@.coordinate = %@,
%@.altitude = %f,
%@.timestamp = %f
T@"_CLLSLLocationCoordinate",C,N,V_coordinate
Td,N,V_altitude
Td,N,V_timestamp
roadID
polylines
<NSArray: %p> {
%@%@%@
<_CLLSLMapRoadSegment: %p> {
%@.roadID = %llu,
%@.polylines = %@
TQ,N,V_roadID
T@"NSArray",C,N,V_polylines
roadSegment
<_CLLSLHeadingSupplInfo: %p> {
%@.roadSegment = %@
T@"_CLLSLMapRoadSegment",C,N,V_roadSegment
rotationFromGlobalToDeviceFrame
rotationFromGlobalToCameraFrame
rotationalAccuracyInRadians
globalReferenceFrame
supplemantaryInfo
<_CLLSLHeading: %p> {
%@.timestamp = %f,
%@.rotationFromGlobalToDeviceFrame = [%f, %f, %f; %f, %f, %f; %f, %f, %f],
%@.rotationFromGlobalToCameraFrame = [%f, %f, %f; %f, %f, %f; %f, %f, %f],
%@.rotationalAccuracyInRadians = [%f, %f, %f],
%@.confidence = %f,
%@.globalReferenceFrame = %zu,
%@.location = %@,
%@.supplemantryInfo = %@
T{?=[3]},N,V_rotationFromGlobalToDeviceFrame
T{?=[3]},N,V_rotationFromGlobalToCameraFrame
T,N,V_rotationalAccuracyInRadians
Td,N,V_confidence
TQ,N,V_globalReferenceFrame
T@"_CLLSLLocation",C,N,V_location
T@"_CLLSLHeadingSupplInfo",C,N,V_supplemantaryInfo
status
headings
<_CLLSLHeadingEstimation: %p> {
%@.status = %d,
%@.headings = %@
Ti,N,V_status
T@"NSArray",C,N,V_headings
trackingState
originTimestamp
inertialStateInfo
inertialState
inertialCovarianceInfo
inertialCovariance
cameraPose
cameraIntrinsics
cameraImageResolutionKey
{CGSize=dd}
<_CLVIOEstimation: %p> {
%@.trackingState = %d,
%@.originTimestamp = %f,
%@.timestamp = %f,
%@.inertialStateInfo = { .stateLengthInbytes = %lu, .stateLength = %d, ... },
%@.inertialState = <NSData: %p> %@,
%@.inertialCovarianceInfo = { .covarianceSizeInbytes = %lu, .covariance = %d, ... },
%@.inertialCovariance = <NSData: %p> %@,
%@.cameraPose = [%f, %f, %f, %f; %f, %f, %f, %f; %f, %f, %f, %f; ... ],
%@.cameraIntrinsics = [%f, %f, %f; %f, %f, %f; %f, %f, %f],
%@.cameraImageResolution = [%f, %f]
Ti,N,V_trackingState
Td,N,V_originTimestamp
T{?=QCCCCCCCCCCC},N,V_inertialStateInfo
T@"NSData",C,N,V_inertialState
T{?=QCCCCCCCCCCC},N,V_inertialCovarianceInfo
T@"NSData",C,N,V_inertialCovariance
T{?=[4]},N,V_cameraPose
T{?=[3]},N,V_cameraIntrinsics
cameraImageResolution
T{CGSize=dd},N,V_cameraImageResolution
CLLocationManagerRoutineClientInterface
NSObject
CLLocationManagerRoutineServerInterface
_CLLocationManagerRoutineProxy
CLLocationManagerRoutine
CLEmergencyEnablementAssertion
CLLocationManagerStateTracker
CLLocationManagerInternal
CLDiagnosticManagerXPCServerInterface
CLLocationManager
VehicleData
MatchInfo
GroundAltitude
CLVisitExtensions
_CLPlaceInferenceExtensions
_CLLSLExtension
_CLLocationGroundAltitude
NSCopying
NSSecureCoding
NSCoding
CLLocationSmootherClientInterface
CLLocationSmootherServerInterface
_CLLocationSmootherProxy
CLLocationSmoother
CLLocationMatchInfoInternal
CLLocationMatchInfo
CLHeadingInternal
CLHeading
CLInUseAssertion
DeprecatedMethods
CLRegionInternal
CLRegion
CLCircularRegion
CLBeaconRegion
CLBeaconInternal
CLBeacon
CLSimulationXPCServerInterface
CLSimulationLocationProtocol
CLSimulationManager
CLBeaconIdentityConstraint
CLVehicleHeadingInternal
CLVehicleHeading
CLVehicleSpeedInternal
CLVehicleSpeed
CLVisit
CLGeocoderExtras
CLGeocoderInternal
CLGeocoder
ContactsAdditions
CLLocationInternalServiceProtocol
CLLocationInternalClient
_CLARExtension
CLPlacemarkInternal
CLPlacemark
CLHarvesterServerInterface
CLHarvester
_CLVIOExtension
CLStateTracker
CLLocationManagerAuthorization
_CLPlaceInference
CLLocationInternal
CLFloor
CLLocation
ReductiveFiltering
CLAssertion
_CLRangingPeerInternal
_CLRangingPeerDistanceInternal
_CLRangingPeer
_CLRangingPeerDistance
CLLocationIndependenceAssertion
_CLLSLLocationCoordinate
_CLLSLLocation
_CLLSLMapRoadSegment
_CLLSLHeadingSupplInfo
_CLLSLHeading
_CLLSLHeadingEstimation
_CLVIOEstimation
initWithCurrentRunLoopAndIdentifier:
runloop
getCFRunLoop
UTF8String
cStringUsingEncoding:
async:
mainBundle
objectForInfoDictionaryKey:
objectForKey:
intValue
newTimer
setHandler:
setNextFireDelay:
invalidate
setWithObjects:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
init
createConnection
setLocationManagerRoutine:
setDelegate:
setConnection:
dealloc
delegate
locationManager:didUpdateLocations:
locationManagerRoutine
initWithMachServiceName:options:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
didUpdateLocations:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
exportedInterface
setClasses:forSelector:argumentIndex:ofReply:
startUpdatingLocation
stopUpdatingLocation
setRemoteObjectInterface:
serviceName
setInterruptionHandler:
setInvalidationHandler:
resume
updating
connection
remoteObjectProxy
initWithQueue:locationManagerRoutine:
setUpdating:
_queue
_updating
_connection
_delegate
_locationManagerRoutine
stringWithFormat:
initWithQueue:
locationManagerRoutineProxy
setLocationManagerRoutineProxy:
_locationManagerRoutineProxy
dictionaryWithObjects:forKeys:count:
initWithRegistrationMessageName:messageDictionary:
copy
bundlePath
newAssertionWithReason:
newAssertionForBundleIdentifier:withReason:
newAssertionForBundle:withReason:
initInSilo:withIdentifier:state:
assertInside
queue
initWithQueue:identifier:state:
identifier
trackerStateSize
trackerStateTypeName
initInSilo:withIdentifier:
initWithQueue:identifier:
distanceFilter
setDistanceFilter:
desiredAccuracy
setDesiredAccuracy:
updatingLocation
setUpdatingLocation:
requestingLocation
setRequestingLocation:
requestingRanging
setRequestingRanging:
updatingRanging
setUpdatingRanging:
updatingHeading
setUpdatingHeading:
headingFilter
setHeadingFilter:
allowsLocationPrompts
setAllowsLocationPrompts:
allowsAlteredAccessoryLocations
setAllowsAlteredAccessoryLocations:
dynamicAccuracyReductionEnabled
setDynamicAccuracyReductionEnabled:
previousAuthorizationStatusValid
setPreviousAuthorizationStatusValid:
previousAuthorizationStatus
setPreviousAuthorizationStatus:
activityType
setActivityType:
pausesLocationUpdatesAutomatically
setPausesLocationUpdatesAutomatically:
paused
setPaused:
allowsBackgroundLocationUpdates
setAllowsBackgroundLocationUpdates:
showsBackgroundLocationIndicator
setShowsBackgroundLocationIndicator:
allowsMapCorrection
setAllowsMapCorrection:
batchingLocation
setBatchingLocation:
updatingVehicleSpeed
setUpdatingVehicleSpeed:
updatingVehicleHeading
setUpdatingVehicleHeading:
matchInfoEnabled
setMatchInfoEnabled:
groundAltitudeEnabled
setGroundAltitudeEnabled:
courtesyPromptNeeded
setCourtesyPromptNeeded:
updateState:
dumpState:withSize:hints:
_state
_identifier
_inTransaction
hasLingeringRangingRequest
cancelRangingRequest
errorWithDomain:code:userInfo:
initWithInfo:bundleIdentifier:bundle:delegate:silo:
PausesLocationUpdatesAutomatically
stopUpdatingLocationAutoPaused
cancelLocationRequest
cancelLingeringRangingRequest
performCourtesyPromptIfNeeded
.cxx_destruct
rangedRegions
rangedConstraints
manager
setManager:
fClient
fDelegate
fManager
fState
fLocation
fLocationEventType
fLocationRequestTimer
fLocationRequestTimeout
fRangingRequestTimer
fLastRangingRequestTimeout
fLastRangingRequestMachTime
fHeadingOrientation
fRangedRegions
fRangedConstraints
fPlaceInferenceHandler
fFidelityPolicy
onClientEvent:supportInfo:
defaultCenter
onDidBecomeActive:
addObserver:selector:name:object:
initWithEffectiveBundleIdentifier:bundle:delegate:silo:
initWithUnderlyingQueue:
removeObserver:
locationServicesEnabled
initWithClientLocation:
_authorizationStatus
locationManagerDidResumeLocationUpdates:
locationManager:didFailWithError:
onLocationRequestTimeout
initWithClientHeading:
startMonitoringForRegion:
clientRegion
UUID
locationManager:monitoringDidFailForRegion:withError:
initWithCapacity:
initWithClientRegion:
addObject:
onBehalfOfBundleId
length
removeObject:
count
enumerateObjectsUsingBlock:
locationManager:rangingBeaconsDidFailForRegion:withError:
initWithBeaconIdentityConstraint:identifier:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didRangePeers:
locationManager:rangingDidFailForPeer:withError:
countByEnumeratingWithState:objects:count:
onRangingRequestTimeout
setWithArray:
arrayWithObject:
onClientEventAuthStatus:
objectForKeyedSubscript:
boolValue
onClientEventLocation:forceMapMatching:type:
onClientEventLocationUnavailable:
onClientEventHeading:
onClientEventHeadingCalibration:
onClientEventError:
onClientEventRegion:
onClientEventRegionState:
onClientEventRegionError:
onClientEventRanging:
onClientEventRangingError:
onClientEventPeerRanging:
onClientEventPeerRangingRequestProcessed:
onClientEventPeerRangingError:
onClientEventRegionResponseDelayed:
onClientEventRegionSetupCompleted:
onClientEventAutopauseStatus:
onClientEventBatch:
onClientEventInterrupted:
onClientEventVehicleSpeed:
onClientEventVehicleHeading:
onClientEventSignificantLocationVisit:
onClientEventPlaceInference:
locationManager:didReceiveApproval:
locationManager:didChangeAuthorizationStatus:
unmatch
makeObjectsPerformSelector:
lastObject
clientLocation
isEqualToString:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:didRangeBeacons:satisfyingConstraint:
objectAtIndex:
initWithUUIDString:
integerValue
doubleValue
shortValue
initWithUUID:major:minor:proximity:accuracy:rssi:timestamp:
sortDescriptorWithKey:ascending:
arrayWithObjects:
sortUsingDescriptors:
beaconIdentityConstraint
containsObject:
initForReadingFromData:error:
decodeObjectOfClasses:forKey:
finishDecoding
locationManager:didStartRangingForPeer:
locationManager:didStopRangingForPeer:
objectAtIndexedSubscript:
code
dictionaryWithObject:forKey:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
name
resumeLocationUpdates
pauseLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didUpdateVehicleSpeed:
initWithClientVehicleSpeed:
locationManager:didUpdateVehicleHeading:
initWithClientVehicleHeading:
locationManager:didVisit:
initWithCoder:
_authorizationStatusForBundleIdentifier:bundle:
requestWhenInUseAuthorization
copyRegisteredFilesWithHandler:
remoteObjectProxyWithErrorHandler:
sharedManager
locationServicesEnabled:
setLocationServicesEnabled:
setAuthorizationPromptMapDisplayEnabled:
authorizationPromptMapDisplayEnabled
headingAvailable
significantLocationChangeMonitoringAvailable
isMonitoringAvailableForClass:
regionMonitoringAvailable
regionMonitoringEnabled
isRangingAvailable
mapCorrectionAvailable
_checkAndExerciseAuthorizationForBundleID:error:
_checkAndExerciseAuthorizationForBundle:error:
deferredLocationUpdatesAvailable
isPeerRangingAvailable
_archivedAuthorizationDecisionsWithError:
_applyArchivedAuthorizationDecisions:
authorizationStatusForBundleIdentifier:
authorizationStatusForBundle:
authorizationStatus
setAuthorizationStatus:forBundleIdentifier:
setAuthorizationStatus:forBundle:
setAuthorizationStatusByType:forBundleIdentifier:
setAuthorizationStatusByType:forBundle:
setAuthorizationStatusByType:withCorrectiveCompensation:forBundleIdentifier:
setAuthorizationStatusByType:withCorrectiveCompensation:forBundle:
setTemporaryAuthorizationGranted:forBundleIdentifier:
setTemporaryAuthorizationGranted:forBundle:
setBackgroundIndicatorEnabled:forBundleIdentifier:
setBackgroundIndicatorEnabled:forBundle:
setDefaultEffectiveBundleIdentifier:
setDefaultEffectiveBundle:
dumpLogsWithMessage:
dumpDiagnosticFilesWithHandler:
shutdownDaemon
bundleSupported:
advertiseAsBeacon:withPower:
initWithEffectiveBundleIdentifier:
initWithEffectiveBundleIdentifier:delegate:onQueue:
initWithEffectiveBundle:
initWithEffectiveBundle:delegate:onQueue:
_initWithDelegate:onQueue:
location
locationServicesAvailable
locationServicesApproved
expectedGpsUpdateInterval
setSupportInfo:
supportInfo
internalClient
setPrivateMode:
privateMode
setPurpose:
purpose
markAsHavingReceivedLocation
startUpdatingLocationWithPrompt
requestLocation
allowDeferredLocationUpdatesUntilTraveled:timeout:
disallowDeferredLocationUpdates
setHeadingOrientation:
headingOrientation
heading
startUpdatingHeading
stopUpdatingHeading
dismissHeadingCalibrationDisplay
startAppStatusUpdates
stopAppStatusUpdates
startTechStatusUpdates
stopTechStatusUpdates
startMonitoringSignificantLocationChanges
_startMonitoringSignificantLocationChangesOfDistance:withPowerBudget:
stopMonitoringSignificantLocationChanges
startMonitoringForRegion:desiredAccuracy:
stopMonitoringForRegion:
requestStateForRegion:
maximumRegionMonitoringDistance
monitoredRegions
startRangingBeaconsInRegion:
stopRangingBeaconsInRegion:
startRangingBeaconsSatisfyingConstraint:
stopRangingBeaconsSatisfyingConstraint:
rangedBeaconConstraints
requestRangingToPeers:timeoutSeconds:
respondToRangingFromPeers:timeoutSeconds:
startRangingToPeers:intervalSeconds:
stopRangingToPeers:
startRangingFromPeers:
stopRangingFromPeers:
resetApps
appsUsingLocation
appsUsingLocationWithDetails
technologiesInUse
requestWhenInUseAuthorizationWithPrompt
requestAlwaysAuthorization
isLocationServicesPreferencesDialogEnabled
setLocationServicesPreferencesDialogEnabled:
isDynamicAccuracyReductionEnabled
registerAsLocationClient
setIsActuallyAWatchKitExtension:
_internal
startUpdatingVehicleSpeed
stopUpdatingVehicleSpeed
startUpdatingVehicleHeading
stopUpdatingVehicleHeading
isMatchInfoEnabled
_isGroundAltitudeEnabled
_setGroundAltitudeEnabled:
startMonitoringVisits
stopMonitoringVisits
_startLeechingVisits
_fetchPlaceInferencesWithFidelityPolicy:handler:
bytes
initWithClientLocation:clientLocationPrivate:
lastPathComponent
boolForKey:defaultValue:
hasValueForKey:
archivedDataWithRootObject:requiringSecureCoding:error:
_updateLSLHeadingEstimation:
allowsKeyedCoding
encodeValueOfObjCType:at:
encodeDouble:forKey:
decodeValueOfObjCType:at:
decodeDoubleForKey:
initWithEstimate:uncertainty:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
estimate
uncertainty
_estimate
_uncertainty
setLocationManagerSmoother:
locationManagerSmoother
locationManager:didSmoothLocations:ofType:
didSmoothLocations:ofType:
smoothLocations:useType:
smoothLocations:handler:
initWithCLLocationSmoother:
_locationManagerSmoother
locationManagerSmootherProxy
numberWithInt:
array
remoteObjectInterface
smoothLocations:
_locationManagerSmootherProxy
allocWithZone:
initWithMatchQuality:matchCoordinate:matchCourse:matchFormOfWay:matchRoadClass:matchShifted:matchDataArray:
fMatchQuality
fMatchCoordinate
fMatchCourse
fMatchFormOfWay
fMatchRoadClass
fMatchShifted
fMatchDataArray
decodeIntegerForKey:
decodeInt32ForKey:
decodeBoolForKey:
decodeObjectOfClass:forKey:
encodeInteger:forKey:
encodeInt32:forKey:
encodeBool:forKey:
encodeObject:forKey:
initWithMatchQuality:matchCoordinate:matchCourse:matchFormOfWay:matchRoadClass:matchShifted:
shortDescription
matchQuality
matchCoordinate
matchCourse
matchFormOfWay
matchRoadClass
isMatchShifted
matchDataArray
sharedApplication
applicationState
fileURLWithPath:isDirectory:
dataWithContentsOfURL:options:error:
domain
writeToURL:options:error:
showCalibrationAlert
dismissCalibrationAlert
fHeading
timestamp
dateWithTimeIntervalSinceReferenceDate:
magneticHeading
trueHeading
headingAccuracy
mutableCopy
addEntriesFromDictionary:
processInfo
processName
compare:
defaultManager
currentDirectoryPath
stringByAppendingString:
silo
newAssertionForBundleIdentifier:bundlePath:reason:level:
newAssertionForBundleIdentifier:withReason:level:
newAssertionForBundle:withReason:level:
_clientRegion
initWithIdentifier:
getCString:maxLength:encoding:
decodeObject
decodeObjectForKey:
containsValueForKey:
decodeIntForKey:
encodeObject:
encodeInt:forKey:
center
radius
initCircularRegionWithCenter:radius:identifier:
_initWithCoder:
_encodeWithCoder:
referenceFrame
setReferenceFrame:
setOnBehalfOfBundleId:
notifyOnEntry
setNotifyOnEntry:
notifyOnExit
setNotifyOnExit:
containsCoordinate:
setConservativeEntry:
conservativeEntry
initWithCenter:radius:identifier:
initNearbyAllowedWithCenter:radius:identifier:
initWithUTF8String:
numberWithUnsignedShort:
UUIDString
unsignedShortValue
setGutsWithProximityUUID:major:minor:notifyOnDisplay:
initWithUUID:identifier:
initWithUUID:major:identifier:
numberWithShort:
initWithUUID:major:minor:identifier:
major
minor
getUUIDBytes:
charValue
_measuredPowerForDevice
dataWithCapacity:
appendBytes:length:
_initWithUUID:major:minor:
proximityUUID
initWithProximityUUID:identifier:
initWithProximityUUID:major:identifier:
initWithProximityUUID:major:minor:identifier:
peripheralDataWithMeasuredPower:
notifyEntryStateOnDisplay
setNotifyEntryStateOnDisplay:
proximity
accuracy
rssi
initWithProximityUUID:major:minor:proximity:accuracy:rssi:
stringByAppendingPathComponent:
scenariosPath
contentsOfDirectoryAtPath:error:
stringByDeletingPathExtension
stringByAppendingPathExtension:
fileURLWithPath:
loadScenarioFromURL:
isFileURL
path
fileExistsAtPath:
pathExtension
daemonProxy
setSimulationScenario:
setLocationDeliveryBehavior:
setIntermediateLocationDistance:
setLocationInterval:
setLocationTravellingSpeed:
setLocationRepeatBehavior:
clearSimulatedLocations
appendSimulatedLocations:
startLocationSimulation
stopLocationSimulation
simulateVisit:
simulateSignificantLocationChange:
getFencesForBundleID:withReply:
simulateFenceWithBundleID:andFenceID:eventType:atLocation:
simulateBeaconWithProximityUUID:major:minor:eventType:
availableScenarios
localizedNameForScenario:
selectScenario:
setLocationDistance:
setLocationSpeed:
appendSimulatedLocation:
getFencesForBundleID:withHandler:
clearSimulatedCells
setSimulatedCell:
startCellSimulation
stopCellSimulation
setSimulatedCellRegistrationStatus:
setWifiScanResults:
startWifiSimulation
stopWifiSimulation
setSimulatedWifiPower:
flush
locationDeliveryBehavior
locationDistance
locationInterval
locationSpeed
locationRepeatBehavior
_locationDistance
_locationInterval
_locationSpeed
_locationRepeatBehavior
_locationDeliveryBehavior
doesNotRecognizeSelector:
initWithUUID:
initWithUUID:major:
initWithUUID:major:minor:
setUUID:
_UUID
_major
_minor
localizedStringFromDate:dateStyle:timeStyle:
fSpeed
speed
initWithCoordinate:horizontalAccuracy:arrivalDate:departureDate:detectionDate:
coordinate
horizontalAccuracy
arrivalDate
departureDate
detectionDate
distantFuture
distantPast
hasArrivalDate
hasDepartureDate
_arrivalDate
_departureDate
_horizontalAccuracy
_detectionDate
_coordinate
reverseObjectEnumerator
objectEnumerator
setSouthLat:
setWestLng:
setNorthLat:
setEastLng:
_initWithCLRegion:
_geocodeCompletionHandler
_ticket
reverseGeocodeLocation:preferredLocale:heading:localResultsOnly:completionHandler:
isGeocoding
_notifyNoResult
sharedService
defaultTraits
clearDeviceDisplayLanguages
localeIdentifier
canonicalLanguageIdentifierFromString:
addDeviceDisplayLanguage:
_initWithCLClientLocation:
setHeading:
_cl_ticketForReverseGeocodeLocation:traits:
_ticket:didReturnError:partialResultForLocation:
_ticket:didReturnGeoMapItems:
submitWithHandler:networkActivity:
_ensureMainThreadExecutionContextForBlock:
geocodeAddressDictionary:preferredLocale:completionHandler:
_cl_ticketForForwardGeocodeAddressDictionary:maxResults:traits:
_ticket:didReturnError:
submitWithRefinedHandler:networkActivity:
geocodeAddressString:inRegion:preferredLocale:completionHandler:
setDeviceLocation:
setMapRegion:
_cl_ticketForForwardGeocodeString:maxResults:traits:
cancel
_notifyCancel
placemarkWithGEOMapItem:
_notifyResult:
_notifyError:
_notifyResult:error:
_timeZoneAtLocation:
reverseGeocodeLocation:localResultsOnly:completionHandler:
reverseGeocodeLocation:completionHandler:
reverseGeocodeLocation:preferredLocale:completionHandler:
reverseGeocodeLocation:heading:completionHandler:
reverseGeocodeLocation:heading:localResultsOnly:completionHandler:
geocodeAddressDictionary:completionHandler:
geocodeAddressString:completionHandler:
geocodeAddressString:inRegion:completionHandler:
cancelGeocode
_notifyPartialResult:
initWithGEOCoordinate:
setTimestamp:
setAltitude:
setHorizontalAccuracy:
setVerticalAccuracy:
setSpeed:
setCourse:
geocodePostalAddress:preferredLocale:completionHandler:
street
setObject:forKey:
subLocality
city
subAdministrativeArea
state
postalCode
country
ISOCountryCode
geocodePostalAddress:completionHandler:
getTechnologiesInUseWithReplyBlock:
getAppsUsingLocationWithReplyBlock:
setLocationDefaultForKey:andValue:replyBlock:
getLocationDefaultForKey:replyBlock:
timeZoneForLocation:replyBlock:
setGestureServiceEnabled:replyBlock:
performMigrationWithReplyBlock:
shutdownDaemonWithReplyBlock:
setAuthorizationStatus:withCorrectiveCompensation:forBundleID:orBundlePath:replyBlock:
setPrivateMode:replyBlock:
getPrivateMode:
setLocationServicesEnabled:replyBlock:
getLocationServicesEnabledWithReplyBlock:
setAuthorizationPromptMapDisplayEnabled:replyBlock:
getAuthorizationPromptMapDisplayEnabledWithReplyBlock:
getGestureServiceEnabledWithReplyBlock:
pingDaemonWithReplyBlock:
getAuthorizationStatusForBundleID:orBundlePath:replyBlock:
displayStatisticsWithReplyBlock:
dumpLogsWithDescription:replyBlock:
copyLastLogWithReplyBlock:
getMonitoredRegionsForBundleID:orBundlePath:replyBlock:
checkAndExerciseAuthorizationForBundleID:orBundlePath:services:replyBlock:
getLocationForBundleID:orBundlePath:dynamicAccuracyReductionEnabled:allowsAlteredAccessoryLocations:replyBlock:
resetAllClientsWithReplyBlock:
applyArchivedAuthorizationDecisions:withConfirmationToken:replyBlock:
getArchivedAuthorizationDecisionsWithReplyBlock:
setStatusBarIconEnabledForEntityClass:enabled:replyBlock:
getStatusBarIconEnabledForEntityClass:replyBlock:
getStatusBarIconState:
setMapMatchingRouteHint:routingType:replyBlock:
getPipelinedCacheWithReply:
getActivitiesWithReplyBlock:
setAuthorizationStatusByType:withCorrectiveCompensation:forBundleID:orBundlePath:replyBlock:
setTemporaryAuthorizationGranted:forBundleID:orBundlePath:replyBlock:
gyroCalibrationDatabaseSupportsMiniCalibrationWithReplyBlock:
setBackgroundIndicatorEnabled:forBundleID:orBundlePath:replyBlock:
getOscarTimeSyncWithReplyBlock:
notifyPassKitPayment:transaction:info:
synchronousRemoteObjectProxyWithErrorHandler:
synchronousRemoteObject
initWithDomain:code:userInfo:
dataWithPropertyList:format:options:error:
propertyListWithData:options:format:error:
handleFailureInFunction:file:lineNumber:description:
initWithName:
dataWithBytes:length:
sharedServiceClient
setAuthorizationStatus:withCorrectiveCompensation:forBundleID:orBundlePath:
clearLocationAuthorizations
getArchivedAuthorizationDecisionsWithError:
applyArchivedAuthorizationDecisions:
copyAppsUsingLocation
copyTechnologiesInUse
setLocationDefaultForKey:value:
getLocationDefaultForKey:
timeZoneAtLocation:
getPrivateMode
pingDaemon
getLocationServicesEnabled:
getAuthorizationPromptMapDisplayEnabled:
setGestureServiceEnabled:
getGestureServiceEnabled:
getAuthorizationStatus:forBundleID:orBundlePath:
performMigration
displayStatistics
dumpLogs:
copyMonitoredRegionsForBundleIdentifier:orBundlePath:
checkAndExerciseAuthorizationForBundleID:orBundlePath:services:error:
getLocationForBundleID:orBundlePath:dynamicAccuracyReductionEnabled:allowsAlteredAccessoryLocations:location:
setMapMatchingRouteHint:count:routingType:
copyLastLog
setStatusBarIconEnabled:forEntityClass:
getStatusBarIconEnabled:forEntityClass:
getStatusBarIconState
getPipelinedCache
getMotionSensorLogs
getAccessoryMotionSensorLogs
copyActivityAlarms
setAuthorizationStatusByType:withCorrectiveCompensation:forBundleID:orBundlePath:
setTemporaryAuthorizationGranted:forBundleID:orBundlePath:
setBackgroundIndicatorForBundleID:orBundlePath:enabled:
gyroCalibrationDatabaseSupportsMiniCalibration:
timeSyncMachTimeStamp:oscarTimeStamp:
_updateARSessionState:
addressDictionary
region
areasOfInterest
geoMapItemStorage
timeZone
mapItemStorageForGEOMapItem:
geoFenceMapRegion
hasNorthLat
hasSouthLat
hasEastLng
hasWestLng
northLat
southLat
westLng
eastLng
date
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
timezone
_initWithGeoMapItem:
initWithLocation:addressDictionary:region:areasOfInterest:
initWithPlacemark:
stringWithString:
appendString:
formattedAddressLines
isValid
thoroughfare
subThoroughfare
locality
administrativeArea
ISOcountryCode
fullThoroughfare
inlandWater
ocean
_geoMapItem
setObject:forKeyedSubscript:
postalAddressWithDictionaryRepresentation:
postalAddress
submitSample:
fetchStateWithReply:
setClass:forSelector:argumentIndex:ofReply:
connect
currentStateDictionary
_updateVIOEstimation:
_handle
primaryEntityClassForLocationDictionary:
activeLocationServiceTypesForLocationDictionary:
isEntityAuthorizedForLocationDictionary:
entityAuthorizationForLocationDictionary:
bundleWithPath:
setEntityAuthorization:withCorrectiveCompensation:forLocationDictionary:
setStatusBarIconEnabled:forLocationEntityClass:
isStatusBarIconEnabledForLocationEntityClass:
entityClassesForLocationDictionary:
isLocationActiveForLocationDictionary:
dateLocationLastUsedForLocationDictionary:
hasUsedBackgroundLocationServices:
allowableAuthorizationForLocationDictionary:
correctiveCompensationStatusForLocationDictionary:
setEntityAuthorized:forLocationDictionary:
setEntityAuthorization:forLocationDictionary:
backgroundIndicatorEnabledForLocationDictionary:
setBackgroundIndicatorEnabled:forLocationDictionary:
timeIntervalSinceReferenceDate
earlierDate:
laterDate:
unsignedIntegerValue
initWithUserType:placeType:placemark:referenceLocation:confidence:preferredName:
numberWithUnsignedInteger:
referenceLocation
userType
placeType
placemark
preferredName
confidence
_userType
_placeType
_placemark
_referenceLocation
_confidence
_preferredName
initWithClientLocation:matchInfo:trustedTimestamp:groundAltitude:
fMatchInfo
fGroundAltitude
fTrustedTimestamp
initWithLevel:
level
initWithLatitude:longitude:
_initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:floor:
numberWithUnsignedInt:
numberWithDouble:
distanceFromLocation:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:
jsonObject
rawCoordinate
altitude
verticalAccuracy
speedAccuracy
course
rawCourse
integrity
trustedTimestamp
type
signalEnvironmentType
floor
getDistanceFrom:
snapToResolution:
propagateLocationToTime:
iso6709Notation
initWithClientLocation:matchInfo:trustedTimestamp:
initWithClientLocation:matchInfo:
matchInfo
_groundAltitude
setDateFormat:
stringFromDate:
locationByReductivelyFilteringLocations:
arrayWithObjects:count:
componentsJoinedByString:
initWithMacAddressAsUInt:secureRangingKeyID:
_macAddress
_secureRangingKeyID
initWithPeer:date:distanceMeters:accuracyMeters:initiator:shouldUnlock:
_peer
_date
_distanceMeters
_accuracyMeters
_initiator
_shouldUnlock
uintMacAddressFromString:
getBytes:length:
initWithMacAddressAsString:secureRangingKeyID:
macAddress
hexStringMacAddressFromUInt:
decodeInt64ForKey:
encodeInt64:forKey:
getMacAddressAsString
secureRangingKeyID
isEqualToData:
isEqualToPeer:
getCharacters:range:
scannerWithString:
scanHexInt:
initWithMacAddressAsData:secureRangingKeyID:
initWithPeer:date:distanceMeters:accuracyMeters:initiator:
floatValue
initWithPeer:timestamp:distanceMeters:accuracyMeters:initiator:
peer
distanceMeters
accuracyMeters
shouldUnlock
initiator
isInitiator
latitude
longitude
initWithCoordinate:
setLatitude:
setLongitude:
_latitude
_longitude
initWithCoordinate:altitude:timetamp:
descriptionWithMemberIndent:endIndent:
initWithLatitude:longitude:altitude:timetamp:
setCoordinate:
_altitude
_timestamp
polylines
roadID
setRoadID:
setPolylines:
_roadID
_polylines
roadSegment
setRoadSegment:
_roadSegment
rotationFromGlobalToDeviceFrame
rotationFromGlobalToCameraFrame
rotationalAccuracyInRadians
globalReferenceFrame
supplemantaryInfo
setRotationFromGlobalToDeviceFrame:
setRotationFromGlobalToCameraFrame:
setRotationalAccuracyInRadians:
setConfidence:
setGlobalReferenceFrame:
setLocation:
setSupplemantaryInfo:
_globalReferenceFrame
_location
_supplemantaryInfo
_rotationalAccuracyInRadians
_rotationFromGlobalToDeviceFrame
_rotationFromGlobalToCameraFrame
headings
status
setStatus:
setHeadings:
_status
_headings
objCType
getValue:
value:withObjCType:
trackingState
originTimestamp
inertialStateInfo
inertialState
inertialCovarianceInfo
inertialCovariance
cameraPose
cameraIntrinsics
cameraImageResolution
setTrackingState:
setOriginTimestamp:
setInertialStateInfo:
setInertialState:
setInertialCovarianceInfo:
setInertialCovariance:
setCameraPose:
setCameraIntrinsics:
setCameraImageResolution:
_trackingState
_originTimestamp
_inertialState
_inertialCovariance
_cameraImageResolution
_inertialStateInfo
_inertialCovarianceInfo
_cameraIntrinsics
_cameraPose
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"NSArray"16
v16@0:8
@32@0:8@16@24
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"<CLLocationManagerDelegate>"
@"CLLocationManagerRoutine"
@24@0:8@16
@"_CLLocationManagerRoutineProxy"
r*16@0:8
@32@0:8@16^v24
@40@0:8@16^v24@?32
d16@0:8
v24@0:8d16
i16@0:8
v20@0:8i16
q16@0:8
v24@0:8q16
v24@0:8@?16
B40@0:8^v16Q24^{os_state_hints_s=I*II}32
^v16@0:8
{_CLLocationManagerStateTrackerState="distanceFilter"d"desiredAccuracy"d"updatingLocation"B"requestingLocation"B"requestingRanging"B"updatingRanging"B"updatingHeading"B"headingFilter"d"allowsLocationPrompts"B"allowsAlteredAccessoryLocations"B"dynamicAccuracyReductionEnabled"B"previousAuthorizationStatusValid"B"previousAuthorizationStatus"i"activityType"q"pausesLocationUpdatesAutomatically"i"paused"B"allowsBackgroundLocationUpdates"B"showsBackgroundLocationIndicator"B"allowsMapCorrection"B"batchingLocation"B"updatingVehicleSpeed"B"updatingVehicleHeading"B"matchInfoEnabled"B"groundAltitudeEnabled"B"courtesyPromptNeeded"B}
@56@0:8@16@24@32@40@48
^{__CLClient=}
@"CLLocationManager"
@"CLLocationManagerStateTracker"
{?="padding1"i"suitability"i"coordinate"{?="latitude"d"longitude"d}"horizontalAccuracy"d"altitude"d"verticalAccuracy"d"padding2"d"padding3"d"speed"d"speedAccuracy"d"course"d"courseAccuracy"d"timestamp"d"confidence"i"lifespan"d"type"i"rawCoordinate"{?="latitude"d"longitude"d}"rawCourse"d"floor"i"integrity"I"referenceFrame"i"rawReferenceFrame"i"signalEnvironmentType"i}
@"NSString"
@"CLTimer"
@"NSMutableSet"
v24@0:8@?<v@?@"NSArray"@"NSError">16
B20@0:8B16
@20@0:8B16
B32@0:8@16^@24
@24@0:8^@16
i32@0:8@16@24
i24@0:8@16
v28@0:8B16@20
v28@0:8i16@20
v32@0:8i16i20@24
B32@0:8@16@24
@48@0:8@16@24@32@40
@40@0:8@16@24@32
^{__CLClient=}16@0:8
v32@0:8d16d24
v28@0:8d16i24
v32@0:8@16d24
v32@0:8@16Q24
v36@0:8@16B24@28
v32@0:8Q16@?24
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8d16d24
v32@0:8@16@24
v32@0:8@"NSArray"16@"NSNumber"24
v32@0:8@16@?24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
@"<CLLocationSmootherDelegate>"
@"CLLocationSmoother"
@"_CLLocationSmootherProxy"
@68@0:8q16{CLLocationCoordinate2D=dd}24d40i48i52B56@60
{CLLocationCoordinate2D="latitude"d"longitude"d}
@"NSData"
@60@0:8q16{CLLocationCoordinate2D=dd}24d40i48i52B56
{CLLocationCoordinate2D=dd}16@0:8
@104@0:8{?=ddddddddddi}16
{?="x"d"y"d"z"d"magneticHeading"d"trueHeading"d"accuracy"d"timestamp"d"temperature"d"magnitude"d"inclination"d"calibration"i}
@44@0:8@16@24@32i40
@36@0:8@16@24i32
{?="identifier"[512c]"onBehalfOfIdentifier"[512c]"type"i"notifyOnEntry"B"notifyOnExit"B"conservativeEntry"B""(?="beaconAttributes"{?="proximityUUID"[512c]"major"S"minor"S"definitionMask"i"notifyEntryStateOnDisplay"B}"circularAttributes"{?="center"{?="latitude"d"longitude"d}"radius"d"desiredAccuracy"d"referenceFrame"i"allowMonitoringWhileNearby"B})}
@1576@0:8{?=[512c][512c]iBBB(?={?=[512c]SSiB}{?={?=dd}ddiB})}16
@48@0:8{CLLocationCoordinate2D=dd}16d32@40
B32@0:8{CLLocationCoordinate2D=dd}16
{?=[512c][512c]iBBB(?={?=[512c]SSiB}{?={?=dd}ddiB})}16@0:8
@"CLRegionInternal"
v44@0:8@16@24@32B40
@36@0:8@16S24@28
@40@0:8@16S24S28@32
c16@0:8
@"NSUUID"
@"NSNumber"
@64@0:8@16@24@32q40d48q56
@72@0:8@16@24@32q40d48q56d64
@"CLBeaconInternal"
v20@0:8C16
v44@0:8@16@24C32@36
v44@0:8@16q24q32C40
v24@0:8@"NSURL"16
v24@0:8@"CLVisit"16
v24@0:8@"CLLocation"16
v32@0:8@"NSString"16@?<v@?@"NSDictionary">24
v44@0:8@"NSString"16@"NSString"24C32@"CLLocation"36
v44@0:8@"NSString"16q24q32C40
C16@0:8
@28@0:8@16S24
@32@0:8@16S24S28
@32@0:8{?=dd}16
{?="trueHeading"d"timestamp"d}
@48@0:8{?=dddd}16
{?="speed"d"timestamp"d"machContinuousTime"d"machAbsoluteTime"d}
@64@0:8{CLLocationCoordinate2D=dd}16d32@40@48@56
@"NSDate"
@"<GEOMapServiceTicket>"
v36@0:8@16B24@?28
v40@0:8@16@24@?32
v40@0:8@16d24@?32
v44@0:8@16d24B32@?36
v52@0:8@16@24d32B40@?44
v48@0:8@16@24@32@?40
v40@0:8@16@24@32
@"CLGeocoderInternal"
@24@0:8r^{?=ii{?=dd}ddddddddddidi{?=dd}diIiii}16
v188@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiii}16@?180
v28@0:8B16@?20
v48@0:8B16i20@24@32@?40
v48@0:8@16@24Q32@?40
v48@0:8@16@24B32B36@?40
v32@0:8I16B20@?24
v28@0:8I16@?20
v36@0:8@16i24@?28
v48@0:8i16i20@24@32@?40
v44@0:8B16@20@28@?36
v24@0:8@?<v@?@"NSError"@"NSArray">16
v24@0:8@?<v@?@"NSError"@"NSDictionary">16
v40@0:8@"NSString"16@"NSData"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError"@"NSData">24
v188@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiii}16@?<v@?@"NSError"@"NSString">180
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?@"NSError">16
v48@0:8B16i20@"NSString"24@"NSString"32@?<v@?@"NSError">40
v24@0:8@?<v@?@"NSError"B>16
v24@0:8@?<v@?@"NSError"i>16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"i>32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"@"NSDictionary">32
v48@0:8@"NSString"16@"NSString"24Q32@?<v@?@"NSError"B>40
v48@0:8@"NSString"16@"NSString"24B32B36@?<v@?@"NSError"{?=ii{?=dd}ddddddddddidi{?=dd}diIiii}>40
v40@0:8@"NSData"16@"NSUUID"24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSError"@"NSData">16
v32@0:8I16B20@?<v@?@"NSError">24
v28@0:8I16@?<v@?@"NSError"B>20
v36@0:8@"NSData"16i24@?<v@?@"NSError">28
v48@0:8i16i20@"NSString"24@"NSString"32@?<v@?@"NSError">40
v44@0:8B16@"NSString"20@"NSString"28@?<v@?@"NSError">36
v24@0:8@?<v@?@"NSError"QQ>16
v40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
C40@0:8C16C20r^{__CFString=}24r^{__CFString=}32
r^{__CFDictionary=}16@0:8
r^{__CFArray=}16@0:8
v32@0:8r^{__CFString=}16r^v24
r^v24@0:8r^{__CFString=}16
C24@0:8*16
@20@0:8C16
C40@0:8^i16r^{__CFString=}24r^{__CFString=}32
C24@0:8r^{__CFString=}16
r^{__CFDictionary=}32@0:8r^{__CFString=}16r^{__CFString=}24
B48@0:8@16@24Q32^@40
C48@0:8r^{__CFString=}16r^{__CFString=}24C32C36^{?=ii{?=dd}ddddddddddidi{?=dd}diIiii}40
v32@0:8^{?=Qdddd}16i24i28
C24@0:8B16I20
C28@0:8^B16I24
C40@0:8i16C20r^{__CFString=}24r^{__CFString=}32
C36@0:8C16r^{__CFString=}20r^{__CFString=}28
C36@0:8r^{__CFString=}16r^{__CFString=}24C32
C24@0:8^i16
C32@0:8^Q16^Q24
v24@0:8Q16
@"CLLocation"
@"NSDictionary"
@"CLRegion"
@"NSArray"
@"GEOMapItemStorage"
@"NSTimeZone"
@"CLPlacemarkInternal"
v24@0:8@"PBCodable"16
v24@0:8@?<v@?@"NSDictionary">16
v28@0:8B16Q20
B24@0:8Q16
Q24@0:8@16
v32@0:8Q16@24
v36@0:8Q16B24@28
@64@0:8Q16Q24@32@40d48@56
@"CLPlacemark"
@180@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiii}16
@404@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiii}16{?=dddddfffBi{?=dd}diiB{?=ddBB}{?=dd}f{?=dd}ddiBdddd}180
@204@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiii}16@180d188@196
@"CLLocationMatchInfo"
@"_CLLocationGroundAltitude"
@24@0:8q16
@84@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64@72i80
@64@0:8{CLLocationCoordinate2D=dd}16d32d40d48@56
@80@0:8{CLLocationCoordinate2D=dd}16d32d40d48d56d64@72
{?=ii{?=dd}ddddddddddidi{?=dd}diIiii}16@0:8
I16@0:8
d24@0:8@16
@24@0:8d16
@188@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiii}16@180
@196@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiii}16@180d188
@32@0:8r*16@24
^{CLAssertionInternal=@^{CLConnectionClient}}
@32@0:8Q16@24
@56@0:8@16@24@32@40B48B52
@"_CLRangingPeer"
@24@0:8Q16
@52@0:8@16@24@32@40B48
@32@0:8{CLLocationCoordinate2D=dd}16
@48@0:8d16d24d32d40
@40@0:8@16d24d32
@"_CLLSLLocationCoordinate"
@"_CLLSLMapRoadSegment"
{?=[3]}16@0:8
v112@0:8{?=[3]}16
16@0:8
v48@0:816
@"_CLLSLLocation"
@"_CLLSLHeadingSupplInfo"
{?="columns"[3]}
{?=QCCCCCCCCCCC}16@0:8
v40@0:8{?=QCCCCCCCCCCC}16
{?=[4]}16@0:8
v80@0:8{?=[4]}16
v64@0:8{?=[3]}16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
{?="stateLengthInBytes"Q"stateLength"C"orientationOffset"C"orientationLength"C"gyroBiasOffset"C"gyroBiasLength"C"velocityOffset"C"velocityLength"C"accelBiasOffset"C"accelBiasLength"C"positionOffset"C"positionLength"C}
{?="covarianceSizeInBytes"Q"covarianceSize"C"orientationCovOffset"C"orientationDof"C"gyroBiasCovOffset"C"gyroBiasDof"C"velocityCovOffset"C"velocityDof"C"accelBiasCovOffset"C"accelBiasDof"C"positionCovOffset"C"positionDof"C}
{?="columns"[4]}
