apple-id
password
first-name
last-name
email-choice
security-question
security-answer
birthday
country
language
timezone
delegates
client-id
v32@?0@"AARequest"8@"AAResponse"16@"NSError"24
urlConfigurationQueue
v8@?0
authenticationRequestQueue
v44@?0B8@"NSString"12@"NSString"20@"AAResponse"28@"NSError"36
createAppleIDQueue
com.apple.appleaccount
updateAppleIDQueue
setupDelegateAccountsQueue
loginDelegatesQueue
v32@?0@"AAResponse"8@"NSData"16@"NSError"24
upgradeTermsQueue
appleID
T@"NSString",C,N,V_appleID
T@"NSString",C,N,V_password
emailChoice
T@"NSString",C,N,V_emailChoice
/System/Library/Frameworks/GameCenterFoundation.framework/GameCenterFoundation
/System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation
/AppleInternal/Library/Frameworks/GameCenterFoundation.framework/GameCenterFoundation
GKPlayerInternal
Unable to find class %s
GKPreferences
account
accountStore
com.apple.gamecenter
player-id
dsid
altDSID
alternate-dsid
auth-token
v20@?0B8@"NSError"12
v16@?0@"AAResponse"8
com.apple.AppleAccountUI.AAUIFollowUpExtension
com.apple.Preferences
com.apple.purplebuddy
com.apple.SharingViewService
com.apple.syncdefaultsd
syncdefaultsd
v24@?0@"ACAccount"8@"NSError"16
The application is not permitted to verify GameCenter accounts
Unsupported account type provided to -discoverPropertiesForAccount:accountStore:options:completion:
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
v24@?0q8@"NSError"16
v16@?0@"NSString"8
PASSWORD_ENTRY_REQUIRED_TITLE
Localizable
PASSWORD_ENTRY_REQUIRED_MESSAGE
PASSWORD_ENTRY_DISMISS_BUTTON
v28@?0B8@"NSObject<NSCoding>"12@"NSError"20
The application is not permitted to renew GameCenter account credentials.
NEW_ICLOUD_TOS_TITLE
NEW_ICLOUD_TOS_MESSAGE_APPLETV
VIEW_TERMS_BUTTON
NOT_NOW_BUTTON
v24@?0^{__CFUserNotification=}8Q16
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE
AARenewShouldPostFollowUp
v24@?0@"NSURL"8@"NSError"16
%llu
status
status-message
alias
firstName
lastName
v32@?0@"ACAccount"8Q16^B24
<gone>
GKCredentialScope-%@
GKEnvToken-%@
GKCredentialScope-%@-mod-date
altDSID-%@
altDSID-%@-mod-date
playerID
GKPlayerSelectedEnvironment
Sandbox
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
gamecenter
setFlushCache:
performRequestWithHandler:
init
copy
username
credential
password
dealloc
urlConfiguration
initWithAccount:
addProvisioningInfoToAARequest:
appleID
initWithUsername:password:
setCookieStorage:
error
createAppleIDWithParameters:handlerWithResponse:
mutableCopy
setValue:forKey:
appleIDClientIdentifier
_signingSession
initWithAccount:withAppleIDParameters:signingSession:
aa_personID
statusCode
errorWithDomain:code:userInfo:
status
intValue
personID
statusMessage
dictionary
setObject:forKey:
emailChoice
initWithAccount:withSetupParameters:signingSession:
responseParameters
initWithAccount:parameters:signingSession:
dictionaryWithObjects:forKeys:count:
upgradeiCloudTermsIfNecessaryWithCustomHeaders:handler:
setCustomHeaders:
xmlUIData
upgradeStatus
boolValue
responseDictionary
date
timeIntervalSinceDate:
signingSessionCertURL
signingSessionURL
establishedSessionWithCertURL:sessionURL:error:
initWithDSID:
setCookieStorageRef:
provisionDeviceWithData:
synchronizeProvisioningWithData:
eraseProvisioning
resetURLConfiguration
initWithAppleID:password:
downloadURLConfiguration:
authenticateWithHandler:
createAppleIDWithParameters:handler:
updateAppleIDWithParameters:handler:
setupDelegateAccountsWithParameters:handler:
loginDelegatesWithParameters:completion:
upgradeiCloudTermsIfNecessaryWithHandler:
shouldPresentUpgradeFlowWithCompletion:
_doHSADeviceProvisioningWithDSID:data:
_doHSADeviceProvisioningSynchronizationWithDSID:data:
_doHSADeviceReprovisioningWithDSID:
setAppleID:
setPassword:
setEmailChoice:
.cxx_destruct
_requesterQueue
_appleID
_password
_emailChoice
_account
_cookieStorage
_signingSessionCreationDate
hasEntitlement:
cancelAllOperations
credentialForAccount:clientID:
token
initWithAccount:token:
aa_updateWithProvisioningResponse:
aa_setNeedsToVerifyTerms:
saveVerifiedAccount:withCompletionHandler:
initWithRequest:handler:
addOperation:
aa_isSuspended
dictionaryWithObjectsAndKeys:
initWithArray:
_clientHasEntitlement:
credentialForAccount:clientID:error:
accountType
accountTypeDescription
client
_doesRelyOnCompanionAccounts
identifier
containsObject:
objectForKeyedSubscript:
setServerFriendlyDescription:
setUniqueDeviceIdentifier:
setLinkType:
_loginWithAccount:store:companionDevice:options:completion:
_fetchTokenForAccount:accountStore:withHandler:
aa_altDSID
_tryPasswordLoginWithAccount:store:services:completion:
_beginPETBasedLoginWithAccount:PET:store:completion:
allKeys
count
setWithArray:
isSubsetOfSet:
_silentlyAuthenticateAppleID:altDSID:companionDevice:services:completion:
credentialItemForKey:
_convertPasswordToPETForAppleID:altDSID:password:services:completion:
_parametersForProxiedAuthentication
setAltDSID:
setCompanionDevice:
setIsUsernameEditable:
setAuthenticationType:
setShouldUpdatePersistentServiceTokens:
setServiceIdentifiers:
setUsername:
authenticateWithContext:completion:
_setPassword:
_setProxyingForApp:
currentDevice
serializedData
aa_setPassword:
_handleRenewFailure:forAccount:accountStore:options:completion:
_renewCredentialsForAccount:accountStore:options:errorMessage:completion:
_getPasswordFromCompanionForAccount:store:options:completion:
addObject:
bundleForClass:
localizedStringForKey:value:table:
addEntriesFromDictionary:
remoteDeviceProxy
removeObject:
sendCommand:withAccount:options:completion:
_isAccountInGrayMode:
code
_authenticateAccount:inStore:options:errorMessage:completion:
_frontmostApplicationId
isEqualToString:
aa_needsToVerifyTerms
_presentGrayModeAlertWithCompletion:
_isAccountReallyInGrayMode:accountStore:completion:
_handleCallbackFromGrayModeAlert:withResponse:
_showUserAlertWithTitle:message:cancelButtonTitle:otherButtonTitle:textFieldTitle:withCompletionBlock:
URLWithString:
defaultWorkspace
openSensitiveURL:withOptions:
deviceWithSerializedData:
integerValue
isAuthenticated
setReason:
setDSID:
setAnticipateEscrowAttempt:
_aa_rawPassword
name
_setProxiedAppName:
_setProxiedAppBundleID:
bundleID
setProxiedDevice:
setClientInfo:
setServiceType:
_authController
_aa_clearRawPassword
ak_isServiceError
dismissFollowUpWithIdentifier:forAccount:completion:
_userInfoForRenewCredentialsFollowUpWithAccountStore:proxiedDevice:
postFollowUpWithIdentifier:forAccount:userInfo:completion:
_handleAuthenticationResults:error:forAccount:inStore:resetAuthenticatedOnAlertFailure:completion:
setAuthenticated:
saveAccount:withHandler:
initWithCapacity:
adamOrDisplayID
setObject:forKeyedSubscript:
clientInfo
proxiedDevice
credentialWithPassword:
setCredential:
_aa_setRawPassword:
ak_isAuthenticationErrorWithCode:
_updateDSID:withRawPassword:suggestedAccount:store:completion:
ak_isUserCancelError
longLongValue
stringWithFormat:
aa_appleAccountWithPersonID:
initWithAccount:parameters:
objectID
dirtyProperties
refresh
_processAuthenticationResponseParameters:accountStore:account:completion:
shared
isAccountModificationRestricted
isGameCenterRestricted
isProfileModificationRestricted
_processAccountParameters:accountStore:account:completion:
_environmentForString:
accountsWithAccountTypeIdentifier:
accountPropertyForKey:
enumerateObjectsUsingBlock:
numberWithInteger:
unsignedIntegerValue
accountTypeWithIdentifier:
initWithAccountType:
currentPersona
isGuestPersona
userPersonaUniqueString
setAccountProperty:forKey:
shortDebugName
setToken:
accountProperties
setAccountDescription:
_gkPlayerInternal
setAlias:
setFirstName:
setLastName:
compositeNameForFirstName:lastName:
setCompositeName:
setAccountName:
_gkSetPlayerInternal:
setAppleIDWithAltDSID:inUse:forService:
numberWithLongLong:
setAppleIDWithDSID:inUse:forService:
saveAccount:verify:dataclassActions:completion:
countByEnumeratingWithState:objects:count:
setDelegate:
_grayModeWhitelist
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:completion:
verifyCredentialsForAccount:accountStore:options:completion:
renewCredentialsForAccount:accountStore:options:completion:
isPushSupportedForAccount:
credentialForAccount:client:store:error:
renewalIDForAccount:
renewalIDsForAccount:accountStore:options:
discoverPropertiesForAccount:accountStore:options:completion:
renewCredentialsForAccount:accountStore:reason:completion:
verifyCredentialsForAccount:client:withHandler:
credentialForAccount:client:
credentialForAccount:client:error:
verifyCredentialsForAccount:accountStore:completion:
_serviceIdentifier
_accountsAwaitingRemotePasswordEntry
_followUpController
createAppleIDWithParameters start
createAppleIDWithParameters calling handler with success %d error %@
updateAppleIDWithParameters start
updateAppleIDWithParameters calling handler with success %d error %@
setupDelegateAccountsWithParameters start
setupDelegateAccountsWithParameters calling handler with error %@
loginDelegatesWithParameters start
loginDelegatesWithParameters calling completion handler with error %@
We got the new iCloud Terms from the server
Fetching iCloud Terms failed with error: %@
Error: No AppleAccount set on AASetupAssistant Service
shouldPresentUpgradeFlowWithCompletion start
We got the upgrade status from the server
Fetching upgrade status failed with error: %@ response: %@
Fetching upgrade status got no response and error: %@
shared signing session expired. creating a new signing session.
Failed to create a shared signing session: %@
using shared signing session %@
Device provisioning failed
Device provisioning completed sucessfully
Device provisioning sync failed
Device provisioning sync completed successfully
Something went wrong when trying to erase the device provisioning: %d
"Checking if client (%@) is entitled."
Make a quick round-trip to the server to see if we really need to accept new terms
We timed out waiting on the server
Got an error, may still be in Gray Mode. %@
Server auth was successful, not in Gray Mode anymore
Failed to save account after marking it as not in gray mode anymore. %@
Something went wrong and we couldn't contact the server. %@
Unable to get credential for %@ account! Error = %@
"AAGKAuthenticationPlugin is withholding the credential for account %@."
Device relies on companion auth, proceeding...
Warning! verifyCredentials is ignoring request for account %@ because we are waiting for a password for that account from ACRemoteDeviceProxy
AAGKAuthenticationPlugin will use provided options for login.
Logging in with account %@....
Device suppoprts standalone auth, proceeding...
Trying password-less login with account %@ with the help of Companion's Anisette data.
Oops, something went wrong with password-less auth! %@
Password-less auth succeeded! Time for login with Apple ID %@...
Password-less auth returned all the requested tokens!
Password-less auth appeared to succeed, but auth results do not have a value for AKAuthenticationPasswordKey or AKAuthenticationIDMSTokenKey!
Missing rp for account, checking in pk...
Trying password-based login for account %@...
Both password-less and password auth have failed. Login has officially failed. Error: %@
_tryPasswordLoginWithAccount: we do not have a password for %@. Login has officially failed.
Oops, something went wrong with password-based auth! %@
Password-based auth succeeded! Time for login with Apple ID %@...
Failed to encode AKDevice! Proxied auth is doomed.
AAGKAuthenticationPlugin: could not silently obtain PET for account %@
AAGKAuthenticationPlugin: Exchanging raw password from companion for PET...
AAGKAuthenticationPlugin: Password from companion was successfully exchanged for PET. Logging in...
Can't get password from companion, told to avoid UI
CFUserNotificationCreate in renewCredentials!
Showing renew-credentials prompt...
Asking ACRemoteDeviceProxy to obtain password for account %@ with options: %@
Dismissing renew-credentials prompt.
Failed to obtain a password from ACRemoteDeviceProxy for account %@! Error: %@
ACRemoteDeviceProxy reports that renewCredentials succeeded, but no password is in the response!
ACRemoteDeviceProxy reports that renewCredentials succeeded, but response is not a string! %@
ACRemoteDeviceProxy successfully provided us with a password for %@
Auth was bad, re-authenticate...
Got a 409/403, the account really is in Gray Mode
Present Grey Mode dialog
Error! Invalid value type for key %@ in renewCredentials options: %@.
AppleIDAuthenticationPlugin: will try auth with cached password first...
AAGKAuthenticationPlugin: will request GS service tokens resulting from auth: %@.
Calling out to AKAppleIDAuthenticationController...
AppleIDAuthenticationPlugin: auth with cached password failed %@. Clearing and retrying...
Renew was successful, dismissing renew follow up for account: %@
Failed to renew credentials, posting renew follow up for account: %@
Adding proxied device identifier to renew follow up user info.
AAGKAuthenticationPlugin: will not fetch token, because we are missing critical info.
AAGKAuthenticationPlugin: will not fetch token, because this is a proxied device authentication.
AAGKAuthenticationPlugin: will attempt to fetch token
AAGKAuthenticationPlugin: will set raw password for account %@ so that we can fetch token.
AAGKAuthenticationPlugin: fetch token failed with error: %@
AAGKAuthenticationPlugin: fetch token succeeded!
Error: AAGKAuthenticationPlugin did not get raw password back from AuthKit.
AAGKAuthenticationPlugin: Looking for iCloud account with DSID %@ for raw password update.
AAGKAuthenticationPlugin setting raw password for account %@
AAGKAuthenticationPlugin: saving raw password result was %d. Error: %@
AAGKAuthenticationPlugin setting raw password for iCloud account %@
AAGKAuthenticationPlugin about to refresh to pick up changes made by auth delegates, but the account already has the following dirty properties, which might spell t-r-o-u-b-l-e: %@ %@
Completed storing tokens
Not creating/modifying account if device/account is restricted
Failed to process account parameters: %@
Not creating/modifying account if incoming account is not of type AppleAccount
Processing account (%@) with parameters (%@).
Did not receive the required parameters. Apple ID: %@ DSID: %@ playerID: %@ token: %@
Looking for GC account with username: %@
Will populate existing account '%@' with production token
Found a gamecenter ACAccount (%@) with same altDSID than incoming account:%@
Found a gamecenter ACAccount (%@) with same dsid than incoming account:%@
Existing primary production account '%@'
Looked at the existing account. We want to create a new GC account (%@), and existingPrimaryAccount is %@
If an existing primary was found, the new account will not be active
Updating token for account %@
Non production environment, set account property
All account properties: %@
GKAuth:telling authkit account is in use using altDSID:%@
GKAuth:telling authkit account is in use using DSID:%@
Saving the game center account %@ failed. Error: %@
Saving the game center account %@ succeeded.
Existing Game Center account did not match the Apple ID
AASetupAssistantService
AAGKAuthenticationPlugin
AKAppleIDAuthenticationDelegate
NSObject
ACDAccountAuthenticationPlugin
@16@0:8
v16@0:8
@32@0:8@16@24
@24@0:8@16
v24@0:8^{OpaqueCFHTTPCookieStorage=}16
v24@0:8@?16
v32@0:8@16@?24
v32@0:8@16@24
v24@0:8@16
@"NSOperationQueue"
@"NSString"
@"ACAccount"
^{OpaqueCFHTTPCookieStorage=}
@"AASigningSession"
@"NSDate"
B16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B48@0:8@16@24@32@40
v56@0:8@16@24@32@40@?48
B48@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40
v56@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40@?<v@?B>48
v48@0:8@16@24@32@?40
@48@0:8@16@24@32^@40
@40@0:8@16@24@32
v40@0:8@16@24@?32
@40@0:8@16@24^@32
v48@0:8@"ACAccount"16@"ACDAccountStore"24@"NSDictionary"32@?<v@?@"ACAccount"@"NSError">40
v48@0:8@"ACAccount"16@"ACDAccountStore"24@"NSDictionary"32@?<v@?q@"NSError">40
B24@0:8@"ACAccount"16
@"ACAccountCredential"48@0:8@"ACAccount"16@"ACDClient"24@"ACDAccountStore"32^@40
@"NSString"24@0:8@"ACAccount"16
@"NSArray"40@0:8@"ACAccount"16@"ACDAccountStore"24@"NSDictionary"32
v48@0:8@"ACAccount"16@"ACDAccountStore"24@"NSString"32@?<v@?q@"NSError">40
v40@0:8@"ACAccount"16@"ACDClient"24@?<v@?@"ACAccount"@"NSError">32
@"ACAccountCredential"32@0:8@"ACAccount"16@"ACDClient"24
@"ACAccountCredential"40@0:8@"ACAccount"16@"ACDClient"24^@32
v40@0:8@"ACAccount"16@"ACDAccountStore"24@?<v@?@"ACAccount"@"NSError">32
v64@0:8@16@24@32@40@48@?56
v32@0:8^{__CFUserNotification=}16Q24
v60@0:8@16@24@32@40B48@?52
q24@0:8@16
@"NSMutableSet"
@"AKAppleIDAuthenticationController"
@"AAFollowUpController"
softlink:r:fw:GameCenterFoundation
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.developer.game-center</key>
<array>
<string>Account</string>
<string>Scores</string>
<string>Achievements</string>
<string>Challenges</string>
<string>Multiplayer</string>
<string>TurnBasedMultiplayer</string>
</array>
<key>com.apple.private.game-center</key>
<array>
<string>Account</string>
<string>Authenticate</string>
<string>Profile</string>
<string>Friends</string>
<string>Games</string>
<string>Scores</string>
<string>Achievements</string>
<string>Challenges</string>
<string>Multiplayer</string>
<string>TurnBasedMultiplayer</string>
<string>GameStats</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.ak.anisette.xpc</string>
<string>com.apple.cdp.daemon</string>
<string>com.apple.mobile.keybagd.xpc</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.gamecenter</string>
<string>com.apple.demo-settings</string>
</array>
</dict>
</plist>
