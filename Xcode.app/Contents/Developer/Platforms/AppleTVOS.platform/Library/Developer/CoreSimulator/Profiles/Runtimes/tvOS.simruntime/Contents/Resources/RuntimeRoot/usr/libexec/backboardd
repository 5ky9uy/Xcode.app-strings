<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BSServiceDomains</key>
<dict>
<key>BKSHIDServices</key>
<dict>
<key>MachName</key>
<string>com.apple.backboard.hid-services.xpc</string>
<key>Services</key>
<dict>
<key>BKHIDEventDeliveryObserver</key>
<dict/>
<key>BKTouchDeliveryObservation</key>
<dict/>
</dict>
</dict>
<key>BKSSystemShell</key>
<dict>
<key>MachName</key>
<string>com.apple.backboard.system-app-server</string>
<key>Services</key>
<dict>
<key>Control</key>
<dict/>
<key>Shell</key>
<dict/>
</dict>
</dict>
</dict>
<key>BuildMachineOSBuild</key>
<string>20A241115</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleIdentifier</key>
<string>com.apple.backboardd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>AppleTVSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>19J5268p</string>
<key>DTPlatformName</key>
<string>appletvsimulator</string>
<key>DTPlatformVersion</key>
<string>15.0</string>
<key>DTSDKBuild</key>
<string>19J5268p</string>
<key>DTSDKName</key>
<string>appletvsimulator15.0.internal</string>
<key>DTXcode</key>
<string>1300</string>
<key>DTXcodeBuild</key>
<string>13A6139f</string>
<key>MinimumOSVersion</key>
<string>15.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>3</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.QuartzCore.displayable-context</key>
<true/>
<key>com.apple.QuartzCore.global-capture</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.RootedSimulatorPath</key>
<true/>
<key>com.apple.afk.user</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.backboardd</key>
<true/>
<key>com.apple.backboardd.replacesystemapp</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.developer.ubiquity-kvstore-identifier</key>
<string>com.apple.backboardd</string>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.gasgauge.user-access-device</key>
<true/>
<key>com.apple.hid.manager.user-access-custom-queue-size</key>
<true/>
<key>com.apple.hid.manager.user-access-device</key>
<true/>
<key>com.apple.hid.manager.user-access-keyboard</key>
<true/>
<key>com.apple.hid.multitouch.user-access</key>
<true/>
<key>com.apple.hid.system.user-access-service</key>
<true/>
<key>com.apple.hid.transport.user-access</key>
<true/>
<key>com.apple.idle-timer-services</key>
<true/>
<key>com.apple.internal.display-params-access-privileged</key>
<true/>
<key>com.apple.iohideventsystem.server</key>
<true/>
<key>com.apple.keystore.fdr-access</key>
<true/>
<key>com.apple.keystore.sik.access</key>
<true/>
<key>com.apple.locationd.activity</key>
<true/>
<key>com.apple.private.IOSurface.protected-access</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>CoverglassSerialNumber</string>
<string>AmbientLightSensorSerialNumber</string>
<string>BootManifestHash</string>
<string>UniqueChipID</string>
<string>SysCfgDict</string>
<string>WirelessBoardSnum</string>
<string>BatterySerialNumber</string>
<string>RoswellChipID</string>
</array>
<key>com.apple.private.accessories.showallconnections</key>
<true/>
<key>com.apple.private.aea.haptics.user-access</key>
<true/>
<key>com.apple.private.allow-explicit-graphics-priority</key>
<true/>
<key>com.apple.private.applepearl.allow</key>
<true/>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.cecd.control</key>
<true/>
<key>com.apple.private.cecd.observer</key>
<true/>
<key>com.apple.private.graphics-restart-no-kill</key>
<true/>
<key>com.apple.private.hid.client.event-dispatch</key>
<true/>
<key>com.apple.private.hid.client.event-filter</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.hid.manager.client</key>
<true/>
<key>com.apple.private.iokit.rootdomain-set-property</key>
<true/>
<key>com.apple.private.kernel.work-interval</key>
<true/>
<key>com.apple.private.mobile_storage.allowedSPI</key>
<array>
<string>CopyDevices</string>
</array>
<key>com.apple.private.ppm.client</key>
<true/>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.private.ubiquity-kvstore-access</key>
<array>
<string>com.apple.springboard</string>
<string>com.apple.Accessibility</string>
<string>com.apple.Accessibility.SwitchControl</string>
<string>com.apple.Accessibility.TouchAccommodations</string>
<string>com.apple.AssistiveTouch</string>
<string>com.apple.HearingAids</string>
<string>com.apple.SpeakSelection</string>
<string>com.apple.VoiceOverTouch</string>
<string>com.apple.ZoomTouch</string>
</array>
<key>com.apple.private.xpc.launchd.app-server</key>
<true/>
<key>com.apple.runningboard.primitiveattribute</key>
<true/>
<key>com.apple.runningboard.terminatemanagedprocesses</key>
<true/>
<key>com.apple.runningboard.terminateprocess</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.frontboard.systemappservices</string>
<string>com.apple.backlightd</string>
<string>com.apple.accessories.transport-server</string>
<string>com.apple.accessories.connection-info-server</string>
</array>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.sensorkit.writer.allow</key>
<array>
<string>com.apple.private.SensorKit.PPG</string>
<string>com.apple.private.SensorKit.ECG</string>
<string>com.apple.SensorKit.onWristState</string>
</array>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>com.apple.tailspin.dump-output</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.springboard</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>backboardd</string>
</array>
</dict>
</plist>
(knN
MbP?
A333333
d@-C
 @-C
333333
?333333
?333333
BKDirectTouchPerDisplayInfo
BSDescriptionStreamable
NSObject
BKDisplayLink
BSInvalidatable
BKDisplayRenderOverlaySpinny
BKDisplayController
BKEventSenderUsagePairDictionary
BKSystemShellServiceListener
BSServiceConnectionListenerDelegate
BKSSystemShellServerInterface
BKSSystemShellClientInterface
BKDigitizerEventSchedulerWithPostponementToNextVSync
BKTouchPadInfo
BKTouchPadManager
BKHIDEventProcessor
BKIOHIDServiceDisappearanceObserver
BKIOHIDServiceMatchObserver
BKDigitizerEventSchedulerWithDisplayLink
BKDisplayBootUIRenderOverlay
CAAnimationDelegate
BKButtonHIDEventProcessor
BKSystemAppHeartbeat
_BKDisplayBlankingContext
BKFirstBootKernelSemaphoreToken
BKFirstBootTokenProviding
BKTouchDeliveryObservationManager
BKSTouchDeliveryObservationService_IPC
_BKDisplayInfo
_BKButtonEventRecord
BKDisplayRenderOverlayImage
BKDisplayAnnotationStyle
BKDisplayAnnotationStyleSheet
BKDisplayAnnotationCanceledStyle
BKDisplayAnnotationMinimalStyle
BKDisplayAnnotationEmphasizedStyle
BKDisplayAnnotationTextBackgroundStyle
BKDisplayAnnotationEllipseStyle
BKDisplayAnnotationRectangleStyle
BKDisplayAnnotationPointerStyle
BKDisplayAnnotationTextStyle
BKDisplayAnnotationColorVariationStyle
BKDisplayAnnotationCrosshatchedBackgroundStyle
BKColorAdditions
BKAlternateSystemApp
BKDisplayRenderOverlay
BSDescriptionProviding
BKSDisplayRenderOverlayDescribing
BKMainDisplayObserver
BKHIDDisplayChangeObserving
BKTouchAnnotationController
BKTouchLifecycleObserver
BKWatchdogService
BKGSEventSystem
_BKDisplayRenderOverlayPersistenceData
NSSecureCoding
NSCoding
BKEntitlementCachePerProcessEntry
BKSecurityManager
BKImageSequence
BKGenericClientEventRecord
BKHIDProximityEventProcessor
BKDisplayAnnotationRenderer
BKDisplayAnnotationNullRenderer
BKAccelerometerClientBKSAccelerometer
BKHumanPresenceHIDEventProcessor
BKUserEventTimer
BKHIDUserEventNotifying
BKFirstBootDetector
_BKKeyboardDestination
BKKeyboardHIDEventProcessor
BKDisplayBlankingObserver
_BKTouchAuthenticationSlotRecord
BKHIDDirectTouchEventProcessor
BKDigitizerEventSchedulerBase
BKDigitizerEventSchedulerImmediate
BKAccelerometerInterface
BKOrientationManagerObserver
BKHIDEventClientDelegate
BKDisplayAnnotationContent
BKDisplayAnnotationShapeContent
BKDisplayAnnotationStringContent
BKAlternateSystemAppManager
BKAlternateSystemAppDelegate
BKTetherController
BKTVOutController
_BKCloneMirroringClientDelegate
BKTouchDeliveryGenericGestureFocusObserver
BKHIDEventDispatcher
BKSecureDrawingMonitor
BKDisplayRenderOverlayPinkForTesting
BKDisplayAnnotationController
BKDisplayAnnotationContainedSubnodeRenderer
BKAccessibility
BKSystemShellClient
BKAccelerometerClient
BKIntegerEventStatistic
BKEventStatistic
NSCopying
BKAverageTimeIntervalEventStatistic
BKHexadecimalIntegerEventStatistic
BKMRUEventStatistics
BKEventStatisticsLoggingController
BKSystemShellSentinelState
BKSystemShellSentinel
BKSSystemShellControlServerInterface
BKDisplayBrightnessUpdateTransaction
BKDisplayBrightnessUpdateTransactionManager
BKKeyboardInfo
BKKeyboardPerKeyCodeDestinationDictionary
BKAccelerometerClientUIApp
BKMutableSystemShellDescriptor
BKSystemShellDescriptor
NSMutableCopying
BKTouchDeliveryObservationServiceListener
BKSTouchDeliveryObserving_IPC
BKSmartCoverHIDEventProcessor
_BKUpdateEventClient
_BKEventUpdateGeneration
BKDirectTouchState
BKDisplayRenderOverlayAppleLogo
BKCADisplayMonitor
_BKCloneMirroringClient
_BKHIDHumanPresenceSensorRecord
BKDigitizerTouchStreamAggregate
BKAlternateSystemAppServer
BKSAlternateSystemAppServerProtocol
NSXPCListenerDelegate
BKSAlternateSystemAppClientProtocol
BKMigrator
BKBacklightClient
BKDisplayBrightnessController
BKOrientationManager
BKDigitizerTouchStreamClient
BKTouchDeliveryStatisticsLoggingObserver
BKDisplayAnnotationLocation
BKDisplayRenderOverlayPersistenceCoordinator
BKDisplayAnnotation
BKBootUIOverlayVendor
BKDisplayRenderOverlayManager
BKBootUIPresenter
BKFirstBootObserver
BKSystemShellControlServiceListener
BKSSystemShellControlClientInterface
BKNamespaceNode
BKHIDKeyboardSignpostEventProcessor
BKHIDSystemInterface
BKHIDSystemInterfacing
BKIOHIDServiceMatcherDataProviding
BKHIDSystemDelegate
BKHIDEventDispatcherProviding
_MockHitTestContext
_MockBKDisplayController
BKTouchDeliveryPolicyServer
BKSTouchDeliveryPolicyServerInterface
NSXPCConnectionDelegate
T@"NSMutableDictionary",&,N,V_serviceToDigitizer
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
_displayController
_display
_touchStreams
_touchStatisticsLoggingObserver
_hitTestRegions
_serviceToDigitizer
appendDescriptionToFormatter:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
dealloc
serviceToDigitizer
setServiceToDigitizer:
.cxx_destruct
appendObject:withName:
allValues
appendProem:block:
setObject:forKeyedSubscript:
objectForKeyedSubscript:
removeObjectForKey:
count
displayUUID
_displayLinkClass
_displayLink
_target
_action
_thread
_runLoop
_invalid
invalidate
initWithDisplayLinkClass:target:action:
_thread_displayLinkFired
_thread_startRunLoop
addToRunLoop:forMode:
displayLinkWithTarget:selector:
currentRunLoop
performBlock:
performSelector:onThread:withObject:waitUntilDone:modes:
arrayWithObjects:count:
initWithTarget:selector:object:
TQ,N,V_background
_background
_imageSequence
_animation
initWithOverlayDescriptor:level:
_startAnimating
_stopAnimating
_prepareContentLayerForPresentation:
_cleanUpContentLayer
_setScale:
descriptionBuilderWithMultilinePrefix:
_spinnyImageSequence
_unloadSpinnyImageSequence
_useLightBackground
_assetPrefix
background
setBackground:
bundleForClass:
appendUnsignedInteger:withName:
setValues:
removeAllAnimations
setContents:
setPosition:
uniqueId
addAnimation:forKey:
setDuration:
setRepeatCount:
setCalculationMode:
setKeyPath:
overlayWithLevel:display:
setLockBacklight:
initWithName:display:
_observerAssertion
displayIsBlanked:
addDisplayBlankingObserver:
contextIDAtCAScreenLocation:displayUUID:options:results:
convertReferenceLocation:toCAScreenLocationForDisplayUUID:
convertCAScreenLocation:toContextID:displayUUID:
hostContextIDForEmbeddedContextID:displayUUID:
taskPortForContextID:displayUUID:
display:didBlank:
countByEnumeratingWithState:objects:count:
CATransform3DValue
floatValue
boolValue
unsignedIntValue
hitTestAtPosition:options:
displayWithUniqueId:
serverIfRunning
acquireForReason:withContext:
assertionWithIdentifier:
sharedInstance
setCumulativeLayerTransform:
setCumulativeContentsTransform:
setBackgroundMaximum:
setBackgroundAverage:
setBackgroundStandardDeviation:
setValidMask:
setCumulativeOpacity:
setHasInsecureFilter:
setDetectedOcclusion:
setBackgroundMinimum:
_usagePairsPerSenderID
objectForSenderID:page:usage:
setObject:forSenderID:page:usage:
_removeObjectFromDictionary:senderIDKey:usagePairKey:
removeObjectForSenderID:page:usage:
removeAllObjectsForSenderID:
enumerateObjectsForSenderID:usingBlock:
enumerateAllObjectsUsingBlock:
popObjectForSenderID:page:usage:
succinctDescription
succinctDescriptionBuilder
descriptionWithMultilinePrefix:
build
enumerateKeysAndObjectsUsingBlock:
appendBodySectionWithName:multilinePrefix:block:
stringWithFormat:
unsignedLongLongValue
builderWithObject:
numberWithUnsignedInt:
numberWithUnsignedLongLong:
allKeys
_connectionListener
_systemShellSentinel
_queue
listener:didReceiveConnection:withContext:
initWithSentinel:
activate
decodeInt64ForKey:
decodeDoubleForKey:
decodeStringForKey:
configureConnection:
setInvalidationHandler:
setInterruptionHandler:
setTargetQueue:
setInterfaceTarget:
setInterface:
setServiceQuality:
userInitiated
interfaceWithServer:client:
checkInAndWaitForDataMigration:completionBlock:
finishedLaunching
restartWithOptions:
setWatchdogMonitoringEnabled:
protocolForProtocol:
collectiveWatchdogPing
hasEntitlement:
remoteProcess
listenerWithConfigurator:
setDomain:
serviceClass:
serial
Td,N,V_currentTime
_blocks
_dispatchingTouchesOnDisplayLink
_currentTime
init
currentTime
_thread_positionWithinCurrentFrameAtTime:duration:
_thread_shouldDispatchUsingDisplayLinkAtTime:
_thread_dispatchEventBlockAtNextVSync:
_thread_dispatchPendingEvents:
_thread_dispatchEventBlockImmediately:
_thread_displayLinkFired:
_thread_scheduleEventWithBlock:event:clientTaskPort:
setCurrentTime:
isPaused
removeAllObjects
setPaused:
addObject:
duration
timestamp
execute:
initForAllManagedWithReason:
T@"BKIOHIDService",&,N,V_service
T@"<BKHIDEventDispatcher>",&,N,V_eventDispatcher
T@"NSSet",&,N,V_currentDestinations
TI,N,V_pathIndexInRangeMask
TI,N,V_pathIndexTouchingMask
Tf,N,V_maxForce
T{CGSize=dd},N,V_digitizerSurfaceDimensions
_pathIndexInRangeMask
_pathIndexTouchingMask
_maxForce
_service
_eventDispatcher
_currentDestinations
_digitizerSurfaceDimensions
initWithService:
resetForCancel
service
setService:
eventDispatcher
setEventDispatcher:
currentDestinations
setCurrentDestinations:
pathIndexInRangeMask
setPathIndexInRangeMask:
pathIndexTouchingMask
setPathIndexTouchingMask:
maxForce
setMaxForce:
digitizerSurfaceDimensions
setDigitizerSurfaceDimensions:
appendString:withName:
appendInteger:withName:
integerValue
propertyOfClass:forKey:
_touchPadQueue
_queue_currentTouchPads
_touchPadMatcher
initWithContext:
processEvent:sender:dispatcher:
serviceDidDisappear:
matcher:servicesDidMatch:
sendCancelEventForDisplay:
sendCancelEventForAllDisplays
_queue_touchPadRemoved:
_queue_touchPadsDetected:
_queue_sendEvent:fromTouchPad:toDestination:dispatcher:
_queue_handleEvent:fromTouchPad:dispatcher:
_queue_sendCancelEventForTouchPad:
senderID
setDigitizerSurfaceSize:
setSource:
eventSource
setMaximumForce:
setToken:
setEnvironment:
environment
enumerateObjectsUsingBlock:
addDisappearanceObserver:queue:
setObject:forKey:
addSenderInfo:
objectForKey:
firstObject
startObserving:queue:
initWithMatchingDictionary:dataProvider:
dictionaryWithObjects:forKeys:count:
T@"CADisplayLink",R,N,V_displayLink
_performBlock:
performAsync:
performSync:
scheduleEvent:fromDigitizer:toClient:
displayLink
copy
runMode:beforeDate:
distantFuture
displayLinkClass
decodeObjectOfClass:fromData:error:
setKeyCommandDispatchingRules:forClientWithPID:
length
encodeObject:error:
setWithArray:
bs_secureObjectFromData:ofClasses:
eventProcessorOfClass:
initWithPort:
isUsable
tokenFromAuditToken:
processHandleForAuditToken:
monitorSendRight:withHandler:
isValid
transformFromLayerId:inContextId:
numberWithDouble:
authenticationOriginator
validateMessage:
setWithObjects:
bs_secureDecodedFromData:withAdditionalClasses:
setDispatchingRuleSets:forClientWithPID:
setWithObject:
mutableCopy
setDeferringRules:forClientWithPID:
initWithBytesNoCopy:length:freeWhenDone:
stringWithUTF8String:
displayWithHardwareIdentifier:
builtinDisplay
tokenForIdentifierOfCAContext:
setKeyCommandsRegistrations:forClientWithPID:
bs_secureDecodedFromData:
descriptionOfResolutionPathForEventDescriptor:senderDescriptor:
bs_secureEncoded
bs_bytesForMIG
bs_lengthForMIG
T@"CALayer",R,N,V_contentLayer
lightBackground
TB,R,N,G_useLightBackground,V_lightBackground
bounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,G_bounds,S_setBounds:
_backgroundLayer
_outstandingAnimationsCount
_lightBackground
_context
_contentLayer
animationDidStart:
animationDidStop:finished:
_bounds
_setBounds:
disablesDisplayUpdates
_presentWithAnimationSettings:
_dismissWithAnimationSettings:
_freeze
_cleanup
_animationForContentLayerCrossfading:
_animationForBackgroundLayerCrossfading:
observeValueForKeyPath:ofObject:change:context:
contentLayer
isEqualToString:
contextId
setFillMode:
setBeginTime:
setBeginTimeMode:
setToValue:
setFromValue:
applyToCAAnimation:
animationWithKeyPath:
removeObserver:forKeyPath:
keyPath
setOpacity:
addSublayer:
setBackgroundColor:
remoteContextWithOptions:
dictionary
addObserver:forKeyPath:options:context:
UTF8String
deviceClass
TQ,N,V_ringerState
_eventRecords
_keyboardEventProcessor
_ringerState
cancelButtonForSenderID:uagePage:usage:
_postEvent:sender:dispatcher:destination:cancelled:
_processRingerSwitchEvent:down:sender:dispatcher:
ringerState
setRingerState:
timeIntervalSinceReferenceDate
systemInterface
_timer
_firedCount
_numberOfTimesToFire
_interval
initWithFireCount:interval:
_handleTimer:
start
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
_blankingContext
initForDisplay:
blank
clear
_updateBounds
_wrapInCATransaction:
commit
displayId
_semaphoreExists
isTokenSet
unsetToken
_revertToFirstBoot
appendBool:withName:
token
T@"NSObject<OS_dispatch_queue>",R,N
_serviceListener
_touchIdentifierToPIDs
_globalTouchObserverPIDs
_pidToConnections
setObservesAllTouches:
setObservesTouch:withIdentifier:
noteTouchDetached:context:clientPort:
noteTouchUpOccurred:detached:tapToWake:transducerType:context:displayUUID:clientPort:
_queue_postUpdate:forTouchIdentifier:
queue
addConnection:forPID:
_queue_removeConnectionForPID:
_pidForClientPort:
clientForTaskPort:
enumerateWithBlock:
removeIndex:
remoteTarget
setTouchIdentifier:
removeIndexes:
enumerateIndexesUsingBlock:
addIndex:
indexSet
currentContext
setIsDetached:
setType:
T@"CAWindowServerDisplay",&,N,V_windowServerDisplay
T{CGSize=dd},N,V_size
Td,N,V_scale
Td,N,V_orientation
external
TB,N,GisExternal,V_external
_windowServerDisplay
_size
_scale
_orientation
_external
windowServerDisplay
setWindowServerDisplay:
size
setSize:
scale
setScale:
orientation
setOrientation:
isExternal
setExternal:
willUnblank
disabled
setDisabled:
isFlipBookEnabled
setFlipBookEnabled:
convertPoint:toContextId:
convertPoint:fromContextId:
contextIdHostingContextId:
taskNamePortOfContextId:
currentHandler
handleFailureInFunction:file:lineNumber:description:
flush
synchronize
displayWithName:
serverWithOptions:
setRendererFlags:
displayWithDisplayId:
currentMode
preferredScale
localDefaults
forceMirroredOrientation
numberWithUnsignedLong:
dictionaryWithObjectsAndKeys:
mainDisplay
setBlanked:
T@"<BKHIDEventSenderInfo>",&,N,V_senderInfo
T@"NSSet",&,N,V_destinations
Td,N,V_firstDownTime
TB,N,V_didReceiveBeganPhase
TB,N,V_didReceiveEndedPhase
TB,N,V_didReceiveUpEvent
_didReceiveBeganPhase
_didReceiveEndedPhase
_didReceiveUpEvent
_senderInfo
_destinations
_firstDownTime
conciseDescription
applyEventPhase:down:
senderInfo
setSenderInfo:
destinations
setDestinations:
firstDownTime
setFirstDownTime:
didReceiveBeganPhase
setDidReceiveBeganPhase:
didReceiveEndedPhase
setDidReceiveEndedPhase:
didReceiveUpEvent
setDidReceiveUpEvent:
bs_map:
anyObject
appendDouble:withName:decimalPrecision:
T^{CGImage=},R,N
_imageRef
_initWithPersistenceData:
image
_persistenceData
_animationForKeyPath:withSettings:
_applyProgressIndicatorPropertiesToKernelIfNecessary
position
style
isSpringAnimation
CGColor
blackColor
setHidden:
setFrame:
sizeLayer:toFitAtScale:
applyToLayer:forContent:
T@"<BKDisplayAnnotationStyle>",&,N,V_baseStyle
T@"<BKDisplayAnnotationStyle>",&,N,V_styleModifier
T@"<BKDisplayAnnotationStyle>",&,N,V_subnodeStyleModifier
_baseStyle
_styleModifier
_subnodeStyleModifier
subnodeStyleModifier
newLayerForContent:scale:
baseStyle
setBaseStyle:
styleModifier
setStyleModifier:
setSubnodeStyleModifier:
setContentsFormat:
setRasterizationScale:
setContentsScale:
stringByAppendingString:
applyAppearanceToShapeLayer:
applyAppearanceToTextLayer:
setNeedsDisplay
bk_setBackgroundColorRed:green:blue:alpha:
bk_setForegroundColorRed:green:blue:alpha:
setLineWidth:
setLineDashPattern:
setFontSize:
setFont:
setPath:
preferredFrameSize
initWithRed:green:blue:
colorVariationWithIndex:
setFillColor:
minimalStyle
ellipseStyle
rectangleStyle
pointerStyle
textStyle
textBackgroundStyle
emphasizedStyle
crosshatchedBackgroundStyle
canceledStyle
colorVariationStyleWithIndex:
setForegroundColor:
setStrokeColor:
dataWithBytesNoCopy:length:freeWhenDone:
_classesRequiredToDecode
bs_each:
initWithAuditToken:
ignoreTetheringPreferences
isSteveNoteRotationEnabled
objectAtIndex:
T@"NSString",C,N,V_bundleID
T@"NSDictionary",C,N,V_options
T@"RBSProcessHandle",&,N,V_processHandle
T@"RBSAssertion",&,N,V_visibilityAssertion
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"<BKAlternateSystemAppDelegate>",W,N,V_delegate
_bundleID
_delegate
_options
_processHandle
_visibilityAssertion
initWithBundleId:options:queue:
launch
terminate
_noteLaunchFailed
_noteLaunchSucceeded
_noteExitedWithContext:
bundleID
setBundleID:
delegate
setDelegate:
options
setOptions:
processHandle
setProcessHandle:
visibilityAssertion
setVisibilityAssertion:
setQueue:
initWithPredicate:context:
predicateMatchingIdentifier:
numberWithInt:
setMaximumTerminationResistance:
setReportType:
initWithExplanation:
acquireWithError:
initWithExplanation:target:attributes:
grantWithResistance:
grant
grantWithUserInteractivity
grantWithForegroundPriority
grantWithNamespace:endowment:
targetWithPid:environmentIdentifier:
monitorForDeath:
execute:assertion:error:
_setAdditionalMachServices:
_setAdditionalEnvironment:
environmentRepresentation
_setOverrideExecutablePath:
setSpawnType:
contextWithIdentity:
identityForEmbeddedApplicationIdentifier:
bs_safeStringForKey:
bs_safeDictionaryForKey:
infoDictionary
setService:forAlias:
executablePath
initWithPath:
path
bundleURL
isInstalled
appState
applicationProxyForIdentifier:
URLWithString:
bundleInfoOverrides
TB,R,N,V_frozen
persistenceCoordinator
T@"BKDisplayRenderOverlayPersistenceCoordinator",&,N,G_persistenceCoordinator,S_setPersistenceCoordinator:,V_persistenceCoordinator
Tq,N,S_setType:,V_type
Td,N,G_scale,S_setScale:,V_scale
T@"BKSDisplayRenderOverlayDescriptor",R,N,V_descriptor
Tf,R,N,V_level
TB,R,N,V_disablesDisplayUpdates
TB,N,V_animates
T@"NSString",R,C,N
T@"CADisplay",R,&,N
Tq,R,N
TB,R,N
T@"BKSDisplayProgressIndicatorProperties",R,N
interstitial
TB,R,N,GisInterstitial
_descriptor
_persistenceCoordinator
_type
_level
_visible
_disablesDisplayUpdates
_animates
_frozen
name
display
interfaceOrientation
lockBacklight
progressIndicatorProperties
isInterstitial
setAnimates:
presentWithAnimationSettings:
freeze
dismissWithAnimationSettings:
descriptor
level
type
_setType:
animates
isFrozen
_setPersistenceCoordinator:
appendFloat:withName:decimalPrecision:
T@?,C,N,V_displayChangedHandler
T@"BKSHIDEventDisplay",R,N
_displayChangedHandler
T@?,C,N
displayChangedHandler
setDisplayChangedHandler:
unsignedCharValue
numberWithFloat:
T@"BKDisplayAnnotationController",&,N,V_displayAnnotationController
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
_shouldVisualizeTouches
_shouldVisualizeHitTestRegions
_displayAnnotationController
_workQueue
touch:downAtPoint:eventMask:transducerType:
touch:didAlwaysRouteToContext:clientPort:
touch:didHitTestToContextID:clientPort:hostingChainIndex:
touchDidDetach:
touch:didMoveToPoint:eventMask:
touch:upAtPoint:
touchDidHIDCancel:
touchDidSoftCancel:
touchWillStartProcessingTouchCollection
touchDidFinishProcessingTouchCollection
hitTestRegionsDidChange:
initWithDisplayUUID:
shouldVisualizeTouches
shouldVisualizeHitTestRegions
setShouldVisualizeTouches:
setShouldVisualizeHitTestRegions:
annotateTouch:withUniqueString:
annotateTouch:withString:uniqueIdentifier:
annotateTouch:withString:uniqueIdentifier:fromPID:
_queue_annotateTouch:withUniqueString:
_queue_annotateTouch:withString:uniqueIdentifier:fromPID:
_stringDescribingPID:
_stringDescribingContextID:clientPort:
_keyPathForTouchIdentifier:
_queue_setCenter:forTouchIdentifier:
_queue_touchWasHardCanceled:
_queue_touchWasSoftCanceled:
displayAnnotationController
setDisplayAnnotationController:
workQueue
setWorkQueue:
stringByAppendingFormat:
stringByReplacingOccurrencesOfString:withString:options:range:
_exclusiveTouchNormalizedSubRectInReferenceSpace
rect
T@"BKSystemShellSentinel",&,N,V_systemAppSentinel
T@"BKHIDSystemInterface",&,N,V_hidSystem
_systemAppSentinel
_hidSystem
registerClientsForMonitoring
isAlive
systemAppSentinel
setSystemAppSentinel:
hidSystem
setHidSystem:
_handleEvent:
Tf,N,V_level
Tq,N,V_overlayType
T@"BKSDisplayRenderOverlayDescriptor",&,N,V_descriptor
T^{CGImage=},N,V_image
_overlayType
_image
_imageData
TB,R
supportsSecureCoding
encodeWithCoder:
initWithCoder:
_initWithDescriptor:overlayType:imageData:level:
setImage:
overlayType
setOverlayType:
setDescriptor:
setLevel:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
decodeFloatForKey:
encodeObject:forKey:
encodeInteger:forKey:
encodeFloat:forKey:
classesRequiredToDecode
setWithSet:
T@"NSMutableDictionary",&,N,V_entitlementCache
T@"BSProcessDeathWatcher",&,N,V_deathWatcher
_entitlementCache
_deathWatcher
entitlementCache
setEntitlementCache:
deathWatcher
setDeathWatcher:
_lock
_lock_vpidToCacheEntry
hasEntitlement:forAuditToken:
_lock_hasEntitlement:usingCacheForAuditToken:
_processDidTerminate:
numberWithLongLong:
numberWithBool:
initWithPID:queue:deathHandler:
hasEntitlement:forConnection:
T@"NSPointerArray",&,N,V_images
T@"NSBundle",&,N,V_bundle
T@"NSString",C,N,V_basename
T@"NSString",&,N,V_idiomSuffix
Tq,R,N,V_maximumImageCount
Td,R,N,V_scale
_maximumImageCount
_images
_bundle
_basename
_idiomSuffix
initWithBasename:bundle:imageCount:scale:
imageAtIndex:
allImages
_createImageForIndex:basename:scale:idiom:bundle:
_imageAtIndex:
_loadAllImages
maximumImageCount
images
setImages:
bundle
setBundle:
basename
setBasename:
idiomSuffix
setIdiomSuffix:
replacePointerAtIndex:withPointer:
pointerAtIndex:
URLForResource:withExtension:
allObjects
setCount:
pointerArrayWithOptions:
objectWithinProximity
TB,R,N,GisObjectWithinProximity
proximityDetectionActive
TB,R,N,GisProximityDetectionActive
_objectWithinProximity
_proximityDetectionActive
_detectionMode
_detectionMask
_eventClients
_sensorModeChangeObserverToken
isObjectWithinProximity
isProximityDetectionActive
_locked_postEventWithDetectionMask:toDestinations:dispatcher:
_locked_setObjectWithinProximity:notify:
minusSet:
removeObject:
unionSet:
T@"BKDisplayAnnotation",W,N,V_annotation
T@"CALayer",&,N,V_layer
_shouldReapplyStyles
_annotation
_layer
shouldRenderWithSupernode
didAddAnnotation
locationDidChange
didRemoveAnnotation
didRemoveSubannotations
styleSheetDidChange
layer
sizeLayerToFitAtScale:
regenerateLayerTree
annotation
setAnnotation:
setLayer:
removeFromSuperlayer
superlayer
rasterizationScale
convertPoint:fromLayer:
setAnchorPoint:
setDisableActions:
_deathByPid
_deathBySendRight
_queue_invalidate
handleAccelerometerEventWithTimestamp:x:y:z:samplingInterval:
handleOrientationEvent:orientationLocked:
accessPort:
sendRight
T@"NSMutableDictionary",&,N,V_queue_displayUUIDToSensorRecords
T@"BKIOHIDServiceMatcher",&,N,V_presenceServiceMatcher
T@"BKIOHIDServiceMatcher",&,N,V_proximityServiceMatcher
_queue_displayUUIDToSensorRecords
_presenceServiceMatcher
_proximityServiceMatcher
_setProximityInCentimeters:forDisplayUUID:
_setPresence:forDisplayUUID:
getStatus:presence:proximityInCentimeters:forDisplayUUID:
displayUUIDToSensorRecords
setDisplayUUIDToSensorRecords:
presenceServiceMatcher
setPresenceServiceMatcher:
proximityServiceMatcher
setProximityServiceMatcher:
initWithUsagePage:usage:builtIn:dataProvider:
_currentTimeout
_lastUserEvent
_lastResetTimerRequest
_isIdle
_currentMode
_shouldNotify
_safeToResetIdleTimer
_stateCaptureAssertion
userEventOccurredOnDisplay:
lastUserEventTime
resetTimer:mode:
notifyOnNextUserEvent
isSafeToResetIdleTimer
_queue_postNotification:
_queue_userEventOccurredInIdleMode
_queue_userEventOccurredInPresenceMode
_queue_scheduleTimerWithTimeInterval:
_queue_clearTimer
cancel
schedule
initWithFireInterval:queue:handler:
appendTimeInterval:withName:decomposeUnits:
handleFailureInMethod:object:file:lineNumber:description:
addObserverForName:object:queue:usingBlock:
mainQueue
defaultCenter
containsObject:
T@"BKAlternateSystemAppManager",&,N,V_alternateSystemAppManager
firstBoot
TB,R,N,GisFirstBoot
_firstBootToken
_alternateSystemAppManager
_queue_observers
initWithSystemAppSentinel:firstBootToken:alternateSystemAppManager:
isFirstBoot
addObserver:
removeObserver:
_systemAppDidFinishLaunching:
_queue_finishBootingIfNecessaryAndTellObservers:
alternateSystemAppManager
setAlternateSystemAppManager:
addObserver:selector:name:object:
initWithOptions:capacity:
T@"BKSHIDEventDeferringResolution",&,N,V_destination
T@"BKSHIDAuthenticatedKeyCommandSpecification",N,V_authenticationSpecification
Tq,N,V_versionedPID
_destination
_authenticationSpecification
_versionedPID
destination
setDestination:
authenticationSpecification
setAuthenticationSpecification:
versionedPID
setVersionedPID:
appendVersionedPID:withName:
appendObject:withName:skipIfNil:
T@"BKIOHIDServiceMatcher",&,N,V_keyboardServiceMatcher
T@"<BKHIDSystemInterfacing>",&,N,V_eventSystemInterface
T@"<BKHIDEventProcessorRegistering>",&,N,V_eventProcessorRegistry
T@"BKDisplayController",&,N,V_displayController
T@"BKKeyboardInfo",&,N,V_primaryKeyboardInfo
TB,N,V_systemAppConsumesAllKeyboardEvents
Tq,R
T@"NSString",&
T@"NSSet",C
capsLockLightOn
TB,GisCapsLockLightOn
_allKeyboardsBySenderID
_usableKeyboards
_eventRecognizers
_keyCommandsToAuthenticate
_keyboardLayout
_keyboardObserverAssertion
_globalActiveModifiers
_displayBlankingObservationAssertion
_countOfKeyboardsRequiringAllSmartCoverHESDisengagedForOpen
_keyCodesDownPerSenderID
_senderIDsWithModifiersOnly
_systemAppConsumesAllKeyboardEvents
_keyboardServiceMatcher
_eventSystemInterface
_eventProcessorRegistry
_primaryKeyboardInfo
display:didBecomeBlank:
eventSourceForSender:
setCapsLockLightOn:
keyboardLayout
setKeyboardLayout:
activeModifiers
addGlobalKeyboardObserver:
setKeyCommandsToAuthenticate:
keyboardLanguageForSenderID:
setKeyboardLayout:forSenderID:
setRomanCapsLockSwitchModeActive:forSenderID:
setCapsLockDelayOverride:forSenderID:
isCapsLockLightOnForSenderID:
devicePropertiesForSenderID:
setRomanCapsLockSwitchModeActive:
setCapsLockDelayOverride:
isCapsLockLightOn
capsLockKeyHasLanguageSwitchLabel
keyCommandsToAuthenticate
_lock_updateGlobalModifierState
_lock_activeModifiers
_lock_anyKeyboardHasCapsLockActive
_lock_setKeyboardLightsSuspended:
_lock_keyboardsDetected:
_lock_keyboardRemoved:
_lock_setPrimaryKeyboard:
_lock_usableKeyboardAttached:
_lock_usableKeyboardDetached:
_lock_cancelKeyDownEvents:
_lock_keyEventDestinationsFromDeliveryDestinations:authenticationSpecification:dispatcher:
_lock_destinationsForKeyboardEvent:keyboard:senderInfo:dispatcher:
_eventSourceForKeyboardInfo:sender:
_lock_handleUnicodeEvent:fromSender:dispatcher:
_lock_applyDeliveryInformation:eventSource:seenModifiersOnly:toEvent:
_lock_handleKeyEvent:fromSender:dispatcher:
_lock_watchForGestures:
_lock_stopWatchingForGestures:
smartKeyboardAttachmentStateDidChange:
_lock_smartKeyboardAttachmentStateDidChange:
_smartKeyboardAttachmentStateDidChangeForSenderID:
keyboardServiceMatcher
setKeyboardServiceMatcher:
eventSystemInterface
setEventSystemInterface:
eventProcessorRegistry
setEventProcessorRegistry:
displayController
setDisplayController:
primaryKeyboardInfo
setPrimaryKeyboardInfo:
systemAppConsumesAllKeyboardEvents
setSystemAppConsumesAllKeyboardEvents:
appendCustomFormatWithName:block:
appendString:
primaryUsage
primaryUsagePage
bs_compactMap:
removeRecognizer:
addRecognizer:recognitionBlock:
setShouldConsumeEvents:
recognizerForEventDescriptor:
descriptionForRootObject:
keyCommandForEvent:gsKeyboard:activeModifiers:
_shouldMatchKeyCommandsForEvent:gsKeyboard:
_isModifierKeyWithPage:usage:
setAuthenticationMessage:
buildMessage:
setRegistrantEntitled:
setOriginIdentifier:
setEventType:
baseAttributesFromResolution:
_hardwareIdentifier
isAuthenticated
describes:
keyCommand
destinationsForKeyCommand:sender:
senderDescriptor
versionedPIDForPID:
numberWithUnsignedChar:
numberWithLong:
bs_reduce:block:
globalKeyboardModifiersDidChange:
setStandardType:
setCapsLockKeyHasLanguageSwitchLabel:
setLanguage:
setLayout:
bs_containsObjectPassingTest:
accessibilityHIDServices
serviceMatcherDataProvider
_registrantEntitled
slotID
T@"BKIOHIDService",R,&
TB,N
_scheduler
_digitizerMatcher
_digitizerAOPMatcher
_pencilDigitizerMatcher
_queue_mainDisplayDigitizerService
_queue_mainDisplayAOPDigitizerService
_queue_mainDisplayPencilDigitizerService
_queue_startMainDisplayDigitizerMatchingTime
_queue_mainDisplayDigitizerSentinelTimer
_queue_mainDigitizerServiceProperties
_queue_interfaceOrientation
_queue_perDisplayInfo
_queue_referenceToTouchStreamClient
_queue_previousVendedTouchStreamReference
_queue_slotIDToSlotRecord
_lock_shouldIgnoreTouchesWhileObjectInProximity
_initWithContext:scheduler:
mainDisplayDigitizerService
mainDisplayAOPDigitizerService
mainDisplayPencilDigitizerService
cancelTouchesWithIdentifiers:
cancelTouchesOnDisplay:
cancelTouchesOnMainDisplay
cancelTouchesOnAllDisplays
setHitTestRegions:forDisplay:
addTouchStreamForContextID:display:identifier:shouldSendAmbiguityRecommendations:
invalidateTouchStreamReference:
setEventDispatchMode:ambiguityRecommendation:lastTouchTimestamp:forTouchStreamIdentifier:
detachTouchIdentifiers:count:assignUserIdentifier:policy:offset:
setRoutingPolicy:forTouchesWithUserIdentifier:
setOffset:forTouchesWithUserIdentifier:
postTouchAnnotations:sourcePID:
shouldIgnoreTouchesWhileObjectInProximity
setShouldIgnoreTouchesWhileObjectInProximity:
setMultitouchHand:
setMultitouchWristState:
setBuiltInDisplayInterfaceOrientation:
authenticationSpecificationForSlotID:registrantEntitled:
addTouchAuthenticationSpecifications:registrantEntitled:
authenticationMessageForTouchAtScreenPoint:displayUUID:eventType:excludeContextIDs:
_queue_windowServerDidDeleteSlotID:
_queue_enumerateDigitizersForDisplay:usingBlock:
_queue_enumerateDigitizersForAllDisplaysUsingBlock:
_queue_enumerateTouchStreamsForAllDisplaysUsingBlock:
addDigitizerStateForService:
digitizerStateForService:
sync
_queue_displayInfoForDisplay:createIfNeeded:
_queue_addDigitizerStateForService:
_queue_digitizerStateForService:
_queue_touchStreamInfoForDisplayUUID:createIfNeeded:
_queue_addTouchStreamClient:toDisplayUUID:
_queue_touchStreamClientForReference:
_applyPropertiesToMainDisplayMultitouchService:
_queue_slotRecordForSlotID:
_handleDirectTouchEvent:service:
_determineServiceForEvent:sender:fromTouchPad:
_setMainDigitizerServiceProperty:forKey:
_displayInfoForDisplayUUID:createIfNeeded:
isPencilDigitizer
setProperties:
digitizerVisualizeHitTestRegions
digitizerVisualizeTouches
isBuiltIn
unsignedIntegerValue
setSlotDeletionCallback:
observeDefaults:onQueue:withBlock:
isDigitizerSignpostsEnabled
observeDefault:onQueue:withBlock:
sendEvent:toClient:
T@"NSMutableArray",&,N,V_enqueuedEventBlocks
_enqueuedEventBlocks
_sendEvent:toClient:
enqueueEvent:fromDigitizer:toClient:
dispatchEnqueuedEvents
enqueuedEventBlocks
setEnqueuedEventBlocks:
_lock_accelerometerClients
_lock_systemAppOrientationClient
_lock_orientationManager
_lock_samplingInterval
orientationManager:deviceOrientationMayHaveChanged:changeSource:isDeviceOrientationLocked:
orientationManager:userInterfaceOrientationMayHaveChanged:isDeviceOrientationLocked:
clientDied:
bksAccelerometerClientRequestedAccelerometerEvents:updateInterval:xThreshold:yThreshold:zThreshold:auditToken:
bksAccelerometerClientRequestedOrientationEvents:enabled:passiveEvents:auditToken:
systemAppSetOrientationEventsClient:wantsOrientationEvents:auditToken:
_handleAccelerometerRequestForPort:auditToken:updateBlock:
_updateSettings
_lock_existingClientForSendRight:
_lock_clearSystemAppOrientationClient
_lock_systemAppSetOrientationEventsClient:wantsOrientationEvents:auditToken:
unlock
unknownSenderInfo
lock
initWithPid:sendRight:
pidForBundleID:
matchesPortOfRight:
contentWithSize:
setShapeSize:
T{CGSize=dd},N,V_shapeSize
_shapeSize
shapeSize
appendSize:withName:
contentWithString:
setString:
T@"NSString",&,N,V_string
_string
string
T@"NSString",C,N,V_openBundleId
T@?,C,N,V_pendingOpenResultBlock
T@?,C,N,V_pendingExitBlock
T@"BKAlternateSystemApp",&,N,V_alternateSystemApp
blockingSystemApp
TB,N,GisBlockingSystemApp,S_setBlockingSystemApp:,V_blockingSystemApp
_blockingSystemApp
_alternateSystemApp
_openBundleId
_pendingOpenResultBlock
_pendingExitBlock
alternateSystemAppDidFailToLaunch:
alternateSystemAppDidLaunch:
alternateSystemAppExited:withContext:
blockSystemAppForAlternateSystemAppWithCompletion:
openAlternateSystemApp:options:withResult:andExitBlock:
terminateAlternateSystemApp:forReason:andReport:withDescription:completion:
terminateAnyAlternateSystemApp
unblockSystemAppForAlternateSystemAppWithCompletion:
_queue_cleanupAfterApp
_setBlockingSystemApp:
isBlockingSystemApp
alternateSystemApp
setAlternateSystemApp:
openBundleId
setOpenBundleId:
pendingOpenResultBlock
setPendingOpenResultBlock:
pendingExitBlock
setPendingExitBlock:
postNotificationName:object:
orientationNotificationDisabled
TB,N,GisOrientationNotificationDisabled,V_orientationNotificationsDisabled
_tetherState
_lastOrientationCode
_orientationNotificationsDisabled
_postDisplayPortNotificationCode:
_setTetherState:
isTethered
usesDisplayPortTethering
_handleDemoModeChanged
noteInterfaceOrientationChangedWithInterfaceOrientation:
setDitheringEnabled:
_serviceExists:
_reverseTetheringActive
updatePreferencesIfNeeded
isOrientationNotificationDisabled
setOrientationNotificationDisabled:
initWithFormat:
isDitheringEnabled
Ti,V_tvOutMode
T@"NSSet",&,N
_queue_replayCloneContextIDs
_queue_currentVirtualDisplayClientPID
_queue_currentCloneMirroringClient
_queue_cloneRotationDisabled
_queue_forceTVOutMode
_queue_tvOutDisplayHasAvailableModes
_queue_systemAppHasCheckedIn
_tvOutMode
cloneMirroringClientDidExit:
setBlanked:forDisplay:
_queue_availableModesDidChangeForPurpleTVOutDisplay:windowServerDisplay:mainWindowServerDisplay:
_queue_forceRemoveClone:fromMainWindowServerDisplay:
_queue_availableModesDidChangeForWirelessDisplay:windowServerDisplay:mainWindowServerDisplay:
_queue_availableModesDidChangeForDisplay:isWirelessDisplay:isPurpleTVOutDisplay:
_queue_currentModeDidChangeForDisplay:
_collectWirelessDisplays:tvOutDisplay:makeImmutable:
_supportsDisplayMirroring
_queue_addClone:
_queue_updateClonedDisplays
_systemAppDidCheckin
updateSettings
_queue_updateLayerKitSettings
_queue_setInitialTVModeIfNeeded
setCloneRotationDisabled:
setCloneMirroringModeFromClient:
setVirtualDisplayClientPID:
setReplayCloneContextIDs:
replayCloneContextIDs
_handleIapServerConnectionDied
_tetherSettingChanged:
startListeningForSettingsChanges
stopListeningForSettingsChanges
tvOutMode
setTvOutMode:
removeObserver:name:object:
performSelectorOnMainThread:withObject:waitUntilDone:
removeClone:
clones
setProcessId:
setTag:
forceCloneMirroring
addClone:options:
disableCAYUV
disableCAScaling
isSteveNoteOverscanEnabled
disableCAOverscan
disableCloneMirroring
immutableCopy
hasPrefix:
height
width
availableModes
server
screenIDs
currentCarPlayExternalDevice
dictionaryWithContentsOfFile:
fileExistsAtPath:
defaultManager
processInfo
TVOutDisplay
T@"BKHIDSystemInterface",&,N,V_HIDSystem
_lock_destinationPerDisplayUUID
_HIDSystem
destinationsForEvent:fromSender:
postEvent:toDestination:
postEvent:fromSender:
initWithHIDSystem:
eventDestinationForDisplayUUID:
setEventDestination:forDisplayUUID:
HIDSystem
setHIDSystem:
destinationsStartingFromPID:deferringPredicate:
keyboardFocusEnvironment
secureModeEnabled
TB,GisSecureModeEnabled,V_secureModeEnabled
_reportingQueue
_secureModeEnabled
startMonitoringSecureDrawing
reportAndKillInsecureProcesses
isSecureModeEnabled
setSecureModeEnabled:
sendActions:withResult:
initWithSecureModeViolations:
systemApplicationBundleIdentifier
setLayerNamesByContext:
bs_filter:
initWithProcessId:contextIds:
addObjectsFromArray:
intValue
doItShowKernel
doItShow
doItHide
setProgressIndicatorProperties:
progressIndicatorWithStyle:position:
T@"NSMutableArray",&,N,V_annotations
T@"BKNamespaceNode",&,N,V_rootNode
T@"CADisplay",&,N,V_display
T@"CAContext",&,N,V_context
T@"CALayer",&,N,V_rootLayer
T@"CALayer",&,N,V_transformLayer
_annotations
_rootNode
_rootLayer
_transformLayer
initWithDisplay:
annotationForKeyPath:
allAnnotationsForKeyPath:
setAnnotation:forKeyPath:
removeAnnotationsForKeyPath:
removeAnnotationsForKeyPath:afterDelay:
performSynchronized:
performSynchronizedWithCATransaction:
_locked_supernodeForRenderingAtKeyPath:
_locked_CATransaction:
_locked_removeAnnotation:
_locked_locationDidChanges
_locked_updateTransform
annotations
setAnnotations:
rootNode
setRootNode:
setDisplay:
context
setContext:
rootLayer
setRootLayer:
transformLayer
setTransformLayer:
setAffineTransform:
array
setSecure:
annotationControllerForDisplay:
performBlockForEveryAnnotationController:
T@"CALayer",&,N,V_backgroundLayer
T@"NSMutableDictionary",&,N,V_sectionTitleAnnotations
T@"NSArray",&,N,V_subannotations
_sectionTitleAnnotations
_subannotations
_getFrames:ofAnnotations:fixSuperlayer:scale:
layoutAnnotationStack:
backgroundLayer
setBackgroundLayer:
sectionTitleAnnotations
setSectionTitleAnnotations:
subannotations
setSubannotations:
insertSublayer:atIndex:
orderedSetWithCapacity:
frame
_accessibilityProcessExternHIDEvent:
_accessibilitySetEventTapCallback:
_accessibilityEventTapCallback
_accessibilitySetHIDEventTapCallback:
_accessibilityHIDEventTapCallback
_displayConvertFromCAScreen:
_displayConvertToCAScreen:
_displayConvertFromCAScreen:withDisplayIntegerId:
_displayConvertToCAScreen:withDisplayIntegerId:
_authenticationMessageForLocationInCAScreenCoordinates:eventType:excludeContextIDsFromHitTest:
_isDisplayBacklightOff
_eventRoutingClientConnectionManager
_setCapsLockLightOn:
stringByAppendingPathComponent:
bundleWithPath:
load
principalClass
initialize
_pendingCheckIn
_checkedIn
_finishedStartup
_isAlternateShell
_wasAlive
_connection
_connectDate
appendBool:withName:ifEqualTo:
lastAccelerometerEventTimestamp
Td,N,G_lastAccelerometerEventTimestamp,S_setLastAccelerometerEventTimestamp:,V_lastAccelerometerEventTimestamp
TB,N,V_wantsAccelerometerEvents
Td,N,V_accelerometerUpdateInterval
Tf,N,V_xThreshold
Tf,N,V_yThreshold
Tf,N,V_zThreshold
TB,N,V_passiveOrientationEvents
TB,N,V_wantsOrientationEvents
_xThreshold
_yThreshold
_zThreshold
_passiveOrientationEvents
_wantsOrientationEvents
_wantsAccelerometerEvents
_accelerometerUpdateInterval
_lastAccelerometerEventTimestamp
accelerometerUpdateInterval
_passesThresholdForX:y:z:
_shouldSendSampleEventWithTimestamp:samplingInterval:
xThreshold
setXThreshold:
yThreshold
setYThreshold:
zThreshold
setZThreshold:
passiveOrientationEvents
setPassiveOrientationEvents:
wantsOrientationEvents
setWantsOrientationEvents:
wantsAccelerometerEvents
setWantsAccelerometerEvents:
setAccelerometerUpdateInterval:
_setLastAccelerometerEventTimestamp:
Tq,N,V_value
_value
reset
setValue:
increment
copyWithZone:
value
label
numberWithInteger:
T@"NSString",C,N,V_label
T@"NSArray",C,N,V_associatedStatistics
_updatedSinceReset
_label
_associatedStatistics
setLabel:
associatedStatistics
setAssociatedStatistics:
statisticWithLabel:
appendCollection:withName:itemBlock:
statisticWithLabel:scale:
Td,N,V_value
_startInterval
_count
_cumulativeInterval
begin
TQ,N,V_value
appendUnsignedInteger:withName:format:
statisticsWithLabel:capacity:
_statistics
_capacity
pushStatistics:
removeObjectAtIndex:
T@"NSArray",C,N,V_statistics
_logCategory
_transactionAssertion
_startCoalescingTime
_resetStartTime
_needsFlush
initWithLabel:logCategory:
beginTransactionForReason:
updateStatistics:
statistics
setStatistics:
scheduleWithFireInterval:leewayInterval:queue:handler:
initWithIdentifier:
isActive
acquireForReason:
assertionWithIdentifier:stateDidChangeHandler:
_waitingForAlternateShellsToFinish
_primarySystemShell
_systemShells
_shellsFinishedStartup
T@"NSString",C
T@"BKSystemShellDescriptor",R,C,N
T@"NSArray",R,C,N
T@"NSSet",R,C,N
_shellListener
_controlListener
_heartbeat
_lock_systemApp
_lock_pidToClient
_lock_connectedSystemApps
_lock_shellsFinishedStartup
_lock_checkinCompletionsBySystemApp
_lock_migratorDidComplete
_lock_systemAppBlocked
_lock_activeAlternateSystemAppBundleIdentifier
_lock_activeAlternateSystemAppJobLabel
_overrideConnectionPID
terminateShellWithJobLabel:
auditTokenRepresentsSystemApp:
setActiveAlternateSystemAppBundleIdentifier:
activeAlternateSystemAppBundleIdentifier
primarySystemShell
systemShells
shellsFinishedStartup
systemShellState
startSystemAppCheckInServer
dataMigratorDidComplete
pingSystemShellForCollectiveWatchdog:
blockSystemApp
unblockSystemApp
systemShellDidConnect:connection:
systemShellDidTerminate:
systemApplications
systemApp
_lock_currentConnectionShell
_lock_bootstrapSystemApp
_lock_updatePrimarySystemApp
_lock_handleRelaunchRequestFromSystemApp:withOptions:
_lock_blockSystemApp
_lock_unblockSystemApp
setHideAppleLogoOnLaunch:
timeIntervalSinceNow
date
objectEnumerator
appendArraySection:withName:skipIfEmpty:
strongToStrongObjectsMapTable
_identifier
_transactionManager
_expirationTime
_invalidated
initWithIdentifier:transactionManager:
_queue_setTimerWithTimeIntervalSinceNow:
_queue_updateExpirationTimeWithIntervalSinceNow:
_endUpdateTransaction:
_beginUpdateTransaction:
_sharedQueue
beginImplicitTransaction
_numPendingTransactions
_systemDisplayBrightness
_suppressBrightnessNotifications
_brightnessController
_commitPending
_shouldRestoreSystemBrightness
_initWithBrightnessController:
synchronizeALSPreferencesAndSystemDisplayBrightness
setDisplayBrightness:permanently:
systemDisplayBrightness
restoreSystemDisplayBrightness
_lock_commitDisplayBrightness
setBrightness:
springBoardDefaults
externalDefaults
brightness
Tq,N,V_activeModifiers
capsLockOn
TB,N,GisCapsLockOn,V_capsLockOn
TB,N,V_capsLockRomanSwitchMode
TB,R,N,V_capsLockKeyHasLanguageSwitchLabel
TC,N,V_countryCode
TI,N,V_keyboardType
Tq,N,V_subinterfaceID
T@"NSString",C,N,V_keyboardLayout
T@"NSString",C,N,V_keyboardLanguage
T@"NSString",C,N,V_transport
gsKeyboard
T^{__GSKeyboard=},R,N,G_gsKeyboard,V_gsKeyboard
TB,R,N,V_shouldActivateByGesture
keyboardActive
TB,R,N,GisKeyboardActive
T@"BKSHIDEventDescriptor",R,N
T@"BKHIDEventSequenceRecognizer",&,N,V_eventRecognizer
_capsLockOn
_capsLockRomanSwitchMode
_capsLockKeyHasLanguageSwitchLabel
_countryCode
_shouldActivateByGesture
_keyboardType
_activeModifiers
_subinterfaceID
_keyboardLanguage
_transport
_gsKeyboard
_eventRecognizer
_keyboardActivationEventDescriptor
isKeyboardActive
keyboardActivationChangeEventDescriptor
setCapsLockOn:
setCapsLockLEDOn:
setCapsLockRomanSwitchMode:
setActiveModifiers:
isCapsLockOn
capsLockRomanSwitchMode
countryCode
setCountryCode:
keyboardType
setKeyboardType:
subinterfaceID
setSubinterfaceID:
keyboardLanguage
setKeyboardLanguage:
transport
setTransport:
shouldActivateByGesture
eventRecognizer
setEventRecognizer:
setElementValue:forUsagePage:usage:
descriptorByAddingSenderIDToMatchCriteria:
descriptorForHIDEventType:page:usage:
appendPointer:withName:
appendInt:withName:
keyboardInfoWithIOHIDService:
TQ,R,N
T@"BSMutableIntegerMap",R,N,V_keyCodeDownPerDestination
_keyCodeDownPerDestination
keyDownCount
destinationsForDownKeyCode:
setDestinations:forDownKeyCode:
addDestination:forDownKeyCode:
removeDestinationsForKeyCode:
keyCodeDownPerDestination
appendBodySectionWithOpenDelimiter:closeDelimiter:block:
keyboardDefaults
modifierKeyRemapping
_lastOrientation
initWithPid:sendRight:queue:
arrayWithObject:
ALSEpoch
setALSEpoch:
setALSEnabled:
ALSUserPreferences
null
setALSUserPreferences:
ALSDelayOnUnlock
bundleIdentifier
T@"NSString",C,D,N
bundlePath
jobLabel
Ti,D,N
systemIdleSleepInterval
Td,D,N
watchdogType
Tq,D,N
setBundleIdentifier:
setBundlePath:
setJobLabel:
setPid:
setSystemIdleSleepInterval:
setWatchdogType:
Ti,R,N
Td,R,N
_bundleIdentifier
_bundlePath
_jobLabel
_pid
_systemIdleSleepInterval
_watchdogType
mutableCopyWithZone:
build:
_manager
initWithObservationManager:
observeTouchEventDeliveryDidOccur:
TQ,N,V_supportedSensors
TQ,N,V_disengagedSensors
TQ,N,V_sensorsRequiredForOpenState
TQ,N,V_sensorsRequiredForAmbiguousState
attached
TB,N,GisAttached,V_attached
unknownState
TB,N,GisUnknownState,V_unknownState
Tq,N,V_state
smartCoverClosed
TB,R,N,GisSmartCoverClosed
TB,N,V_attachedCoverRequiresWorkaroundForOpenState
_attachedCoverRequiresWorkaroundForOpenState
_attached
_unknownState
_supportedSensors
_disengagedSensors
_sensorsRequiredForOpenState
_sensorsRequiredForAmbiguousState
_state
initWithSupportedHES:disengagedHES:attached:unknownState:
_currentMaskForUsage:HIDSystem:mask:maskIfEngaged:
setAttachedCoverRequiresWorkaroundForOpenState:
_smartCoverSensorsDidEngage:
_smartCoverSensorsDidDisengage:
isSmartCoverClosed
addSmartCoverObserver:
attachedCoverRequiresWorkaroundForOpenState
supportedSensors
setSupportedSensors:
disengagedSensors
setDisengagedSensors:
sensorsRequiredForOpenState
setSensorsRequiredForOpenState:
sensorsRequiredForAmbiguousState
setSensorsRequiredForAmbiguousState:
isAttached
setAttached:
isUnknownState
setUnknownState:
state
setState:
smartCoverStateDidChange:
isSmartCoverSupported
smartCoverSupported
TB,R,N,GisSmartCoverSupported
_clientPort
_contextID
_pathIDMask
_remainingUpdateMaskData
_generationCount
_clients
_eventProcessor
_displayInfo
_touchDeliveryPolicyServer
_touchLifecycleObservers
_annotationController
_initialTouchTimestamp
_touchInfo
_pathZGradientInfos
_perContextHandInfo
_centroidPerUserIdentifier
_latentSystemGestureClients
_pathsTouchingSet
_pathsDetachedSet
_interfaceOrientation
_touchStreamsPathsTouchingSet
_lastSystemGestureTouchTimestamp
_initialTouchStreamTouchTimestamp
_updateGenerations
_determinedMaxForce
_supportsPreciseLocations
_displayIntegrated
_builtIn
.cxx_construct
stringByTrimmingCharactersInSet:
whitespaceCharacterSet
appendFormat:
appendUInt64:withName:format:
appendString:withName:skipIfEmpty:
hardwareType
stringByReplacingOccurrencesOfString:withString:
touchIdentifier
text
shouldAvoidHitTesting
setUpdateMask:forPathIndex:
inspectChangesWithOldPolicy:newPolicy:usingBlock:
authenticationMessageForTouchAtScreenPoint:eventType:excludeContextIDs:
hitTestInformationMask
contextIDsToAlwaysSendTouches
contextIDsToExcludeFromHitTesting
valueForKey:
objectAtIndexedSubscript:
removeObjectIdenticalTo:
setHitTestInformationFromStartEvent:
setHitTestInformationFromEndEvent:
authenticationMessageContext
setPathIndex:
setUserIdentifier:
setZGradient:
setLocus:
setHitTestLocation:
setPreciseLocation:
initWithHIDService:eventProcessor:displayInfo:scheduler:statisticsObserver:deliveryPolicyServer:eventSystemInteface:
setInitialTouchTimestamp:
setSystemGesturesPossible:
setPathAttributes:
hasOrbCapability
updateMaskForPathIndex:
uniqueIdentifier
_puiProgressWindow
setVisible:
setDisableUpdateMask:
disableUpdateMask
initWithProgressBarVisibility:createContext:contextLevel:appearance:
T@"NSArray",R,C,N,V_displays
_displayUUIDToImmutableCADisplay
_isInvalid
_displays
initWithDisplays:
immutableDisplayForUUID:
activeDisplays
displays
displayUUIDDidChange:
displayCurrentModeDidChange:
displayAvailableModesDidChange:
removeObserver:forKeyPath:context:
T@"<_BKCloneMirroringClientDelegate>",W,N,V_delegate
TQ,R,N,V_mode
Tq,R,N,V_versionedPID
_mirroringModePortSentinel
_mirroringModePortWatcher
_mode
initWithMode:port:auditToken:
mode
activateWithHandler:
initWithSendRight:
defaultClient
T@"NSMutableArray",&,N,V_services
TQ,N,V_status
Td,N,V_proximityInCentimeters
TB,N,V_humanIsPresent
_humanIsPresent
_status
_proximityInCentimeters
_services
_resetServiceStatus
setProximityInCentimeters:
setHumanIsPresent:
addService:
removeService:
status
setStatus:
proximityInCentimeters
humanIsPresent
services
setServices:
appendFloat:withName:
_displayUUID
T@"NSXPCListener",&,N,V_xpcListener
T@"NSXPCConnection",&,N,V_clientConnection
_xpcListener
_clientConnection
blockSystemAppForAlternateSystemApp
openAlternateSystemAppWithBundleID:
terminateAlternateSystemAppWithBundleID:
unblockSystemAppForAlternateSystemApp
listener:shouldAcceptNewConnection:
_handleInterruptedOrInvalidatedConnection
_queue_listener:shouldAcceptNewConnection:
xpcListener
setXpcListener:
clientConnection
setClientConnection:
alternateSystemAppWithBundleIDDidTerminate:
remoteObjectProxy
alternateSystemAppWithBundleID:didExitWithContext:
alternateSystemAppWithBundleIDDidOpen:
alternateSystemAppWithBundleID:failedToOpenWithResult:
errorWithDomain:code:userInfo:
didUnblockSystemAppForAlternateSystemApp
didBlockSystemAppForAlternateSystemApp
resume
setExportedObject:
setExportedInterface:
setRemoteObjectInterface:
interfaceWithProtocol:
auditToken
initWithMachServiceName:
migrateIfNecessary
_migrateBackBoard
_removeUnusedFiles
_moveRestoredFileAtPath:
moveItemAtPath:toPath:error:
removeItemAtPath:error:
stringByDeletingPathExtension
stringByExpandingTildeInPath
arrayWithObjects:
fileSystemRepresentation
migrateDefaultsIfNecessary
_backlightFeatures
Tf,R,N
Ti,N
_brightnessLevel
_brightnessLevelCurve
_previousDarwinNotificationBrightnessLevel
_previousBrightnessLevelOptions
_previousBrightnessLevelKey
_previousBrightnessLevelValue
_notificationToken
_backlightClientPerPID
_brightnessSystem
_suppressClientNotificationsAssertion
_initWithBrightnessSystem:
suppressBrightnessNotificationsForReason:
backlightArchitectureVersion
setMinimumBrightnessLevel:fadeDuration:
brightnessLevel
setBrightnessLevel:reason:options:
isALSSupported
setAutoBrightnessEnabled:
setDisplayBrightnessCurve:
displayBrightnessCurve
propertyForKey:
setProperty:forKey:
setBacklightLocked:forReason:
setBacklightFeatures:forPID:
fixedBrightnessLevelWhileDisabled
fixedBrightnessNitsWhileDisabled
disableFeatures
copyPropertyForKey:
setBrightnessCurve:
isAlsSupported
componentsJoinedByString:
registerNotificationBlock:
brightnessCurve
queue_HIDService
T@"BKIOHIDService",&,N,G_queue_HIDService,S_queue_setHIDService:,V_queue_HIDService
Tf,N
Td,N
orientationEventsEnabled
TB,N,GisOrientationEventsEnabled
Tq,N
_observerCalloutQueue
_queue_processDeathWatchers
_queue_updateInterval
_queue_interruptEventThresholds
_queue_isOrientationEventsEnabled
_queue_lastUnambiguousRawAccelerometerDeviceOrientation
_queue_currentUserInterfaceOrientation
_queue_currentRawAccelerometerDeviceOrientation
_queue_lastEffectiveInterfaceOrientation
_queue_effectiveDeviceOrientation
_queue_orientationLocksEnabled
_queue_ignoreAccelerometerAndOrientationEventsForTesting
_queue_orientationManagerOperationQueue
_queue_orientationManager
_queue_HIDService
_queue_HIDServiceMatcher
_notifyQueue
_initWithDeviceOrientationManager:
interruptEventThresholds
setInterruptEventThresholds:
updateInterval
setUpdateInterval:
isOrientationEventsEnabled
setOrientationEventsEnabled:
currentUserInterfaceOrientation
setCurrentUserInterfaceOrientation:
lastEffectiveInterfaceOrientation
currentRawAccelerometerDeviceOrientation
effectiveDeviceOrientation
isDeviceOrientationLocked
isDeviceOrientationLocked:
isDeviceOrientationLockedForType:
lockDeviceOrientation:deviceOrientation:versionedPID:
unlockDeviceOrientation:versionedPID:
updateDeviceOrientation:changeSource:
refreshEffectiveDeviceOrientation
_systemAppDidCheckin:
_queue_setInterruptEventThresholds:
_queue_setUpdateInterval:
_queue_isOrientationLocked
_queue_setOrientationEventsEnabled:
_queue_resetDeviceOrientation
_queue_setCurrentUserInterfaceOrientation:
_queue_setEffectiveDeviceOrientation:affectingLastEffectiveInterfaceOrientation:
_queue_setCurrentRawAccelerometerDeviceOrientation:
_queue_setLastUnambiguousDeviceOrientation:
_queue_updateDeviceOrientationSynchronously
_queue_updateDeviceOrientationWithTemporaryManager
_queue_updateDeviceOrientationFromCoreMotion:
_queue_updateDeviceOrientation:changeSource:
_queue_noteEffectiveOrRawDeviceOrientationDidChange:changeSource:
_queue_noteUserInterfaceOrientationDidChange:
_queue_postDeviceOrientationLockChangedNotification
_queue_invalidateEntryForSystemLockProcess:
_queue_lockDeviceOrientation:deviceOrientation:versionedPID:
_queue_isDeviceLockedForAllTypes:
_queue_isDeviceLockedForAtLeastOneType:
_queue_unlockDeviceOrientationForType:versionedPID:
_queue_postUpdatedOrientation:
_queue_postUpdatedRawAccelerometerDeviceOrientation:
_queue_postUpdatedLastUnambiguousDeviceOrientation:
_queue_postDeviceOrientationLockChangedNotification:
_queue_setHIDService:
numberWithUnsignedInteger:
stopDeviceOrientationUpdates
deviceOrientationBlocking
startDeviceOrientationUpdatesToQueue:withHandler:
ignoreAccelerometerAndOrientationEvents
hashTableWithWeakObjects
setUnderlyingQueue:
_touchStreamIdentifier
_shouldSendAmbiguityRecommendations
_dispatchMode
_ambiguityRecommendation
_valid
_reference
_taskPort
_parent
_portDeathSentinel
initWithCopyOfPort:
_loggingController
_touchUpCount
_touchDownCount
_hardCancelCount
_softCancelCount
_tapToWakeCount
_stylusTouchCount
_detachedTouchCount
_fromEdgeCount
_touchProcessingTimeAverage
_lastTouchID
_lastContextID
_lastPID
_recentTouches
_logTransaction
_touchProcessingCumulativeTimeUS
_touchProcessingCollectionCount
_touchProcessingCollectionStartTime
TB,N,V_inhibitRotation
TB,N,V_shouldAutoposition
T{CGPoint=dd},N,V_superBias
T{CGPoint=dd},N,V_point
_inhibitRotation
_shouldAutoposition
_superBias
_point
inhibitRotation
setInhibitRotation:
shouldAutoposition
setShouldAutoposition:
superBias
setSuperBias:
point
setPoint:
controlledBySupernode
centerAtPoint:
relativeToTopLeftOfSuper:
relativeToBottomLeftOfSuper:
relativeToBottomMiddleOfSuper:
_rootPersistencePath
rebuildPersistentOverlays
saveOverlay:
destroyOverlay:
_filePathForOverlay:
_fileNameForOverlay:
stringByAppendingPathExtension:
createFileAtPath:contents:attributes:
setResourceValue:forKey:error:
fileURLWithPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileExistsAtPath:isDirectory:
initWithContentsOfFile:options:error:
hasSuffix:
enumeratorAtPath:
T@"<BKDisplayAnnotationContent>",&,N,V_content
T@"BKDisplayAnnotationController",W,N,V_annotationController
T@"BKDisplayAnnotationStyleSheet",&,N,V_styleSheet
T@"BKNamespaceNode",W,N,V_namespaceNode
T@"BKDisplayAnnotationLocation",&,N,V_location
T@"BKDisplayAnnotationRenderer",&,N,V_renderer
T@"NSString",C,N,V_section
Tq,N,V_subnodeScreenEdgeTreatment
_location
_renderer
_section
_subnodeScreenEdgeTreatment
_content
_styleSheet
_namespaceNode
_init
setRenderer:
setContent:
setLocation:
modifyStyleSheet:
location
renderer
section
setSection:
subnodeScreenEdgeTreatment
setSubnodeScreenEdgeTreatment:
content
annotationController
setAnnotationController:
styleSheet
setStyleSheet:
namespaceNode
setNamespaceNode:
annotationWithString:
subannotationWithString:
annotationWithEllipseSize:
annotationWithRectangleSize:
_firstBootDetector
initWithFirstBootDetector:
currentOverlayWithLevel:
T@"NSMutableSet",R,N,V_activeOverlays
T@"NSMutableSet",R,N,V_overlaysDisablingUpdates
Tq,R,N,V_lockedOrientation
TB,R,N,V_backlightLocked
_windowServer
_orientationManager
_backlightManager
_activeOverlays
_overlaysDisablingUpdates
_lockedOrientation
_backlightLocked
_frozenDisplayIDs
_initWithPersistenceCoordinator:orientationManager:backlightManager:windowServer:
activeOverlayWithDescriptor:
activeOverlays
applyOverlay:withAnimationSettings:
removeOverlay:withAnimationSettings:
freezeOverlay:
prepareForRestart
isShowingNonBootUIOverlays
_queue_setOverlaysDisablingUpdates:
_queue_freezeOverlay:
_queue_updateStateForActiveOverlayChange
_queue_setLockedOrientation:
_queue_setBacklightLocked:
_updateWindowServerUpdatesForOverlays:
overlaysDisablingUpdates
backlightLocked
lockedOrientation
setDisablesUpdates:
disablesUpdates
containsIndex:
showingBootUI
TB,R,N,GisShowingBootUI
_bootUIOverlayVendor
_renderOverlayManager
_underlay
_overlay
_screenOwnerPID
_screenOwnerBundleIdentifier
_isOverlaySustained
firstBootDetectorDidFinishFirstBoot:
initWithSystemAppSentinel:alternateSystemAppManager:firstBootDetector:bootUIOverlayVendor:renderOverlayManager:
isShowingBootUI
dismissOverlayWithAnimationSettings:requstedByPID:
sustainOverlayForReason:
_systemAppFinishedLaunching:
_systemAppChanged:
_systemAppExited:
_sync
_queue_setScreenOwnerPID:
_queue_updateOverlayForReason:
_queue_removeOverlayWithAnimationSettings:
_queue_addOverlayForReason:
_queue_addUnderlay
_queue_removeUnderlay
hideAppleLogoOnLaunch
_setInterstitial:
T@"NSString",C,N,V_name
T@"NSObject",&,N,V_object
T@"NSMutableOrderedSet",&,N,V_subnodes
_name
_object
_subnodes
removeNodeAtKeyPath:
nodeAtKeyPath:
objectAtKeyPath:
setObject:atKeyPath:
enumerateNodesWithOptions:usingBlock:
enumerateKeyPathNodes:options:ifFound:ifMissing:
dumpNodeTree
_enumerateNodesWithOptions:usingBlock:
_enumerateKeyPathNodesByComponent:options:ifFound:ifMissing:
_dumpNodeTree:level:
setName:
object
setObject:
subnodes
setSubnodes:
lastObject
member:
componentsSeparatedByString:
descriptionForObject:
appendArraySection:withName:multilinePrefix:skipIfEmpty:objectTransformer:
activeMultilinePrefix
T@"NSObject<OS_dispatch_mach>",&,GHIDSystemChannel,V_HIDSystemChannel
T@"BKHIDSystem",R,N,V_system
T@"BKHIDEventDeliveryManager",R
T@"BKHIDEventSenderCache",R
T@"BKHIDClientConnectionManager",R
_HIDSystemChannel
_system
systemPropertyForKey:
setSystemProperty:forKey:
injectHIDEvent:
injectGSEvent:
systemEventOfType:matchingEvent:options:
deliveryManager
senderCache
clientConnectionManager
IOHIDServicesMatching:
unregisterIOHIDServicesCallback:matchingDictionary:target:refCon:
registerIOHIDServicesCallback:matchingDictionary:target:refCon:
hidSystem:receivedUpdatedDeviceOrientation:
dispatcherForEventType:
startHIDSystem
startEventRouting
startEventProcessing
startServer
registerWatchdog
HIDSystemChannel
setHIDSystemChannel:
system
destinationsForEvent:sender:
startServerWithChannel:
startEventProcessor:mainDisplayObserver:deliveryManager:dispatcherProvider:
initWithObserverService:
setServiceMatcherDataProvider:
setSystemInterface:
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_bounds
TI,N,V_contextID
setBounds:
contextID
setContextID:
contextWithBounds:contextID:
T@"NSArray",C,N,V_hitTestContexts
T@"NSArray",C,N,V_hostingChain
_hitTestContexts
_hostingChain
hitTestContexts
setHitTestContexts:
hostingChain
setHostingChain:
initWithIdentifier:forReason:invalidationBlock:
T@"BKSTouchDeliveryPolicy",&,S_queue_setPolicy:,V_policy
_listener
_assertionConnections
_policy
ipc_addPolicy:
replacementObjectForXPCConnection:encoder:object:
connection:handleInvocation:isReply:
shouldDeliverToIndexedContextIDs:count:
shouldDeliverTouchesToContextIds:count:
shouldCancelTouchesDeliveredToContextId:withInitialTouchTimestamp:
_queue_setPolicy:
reducePolicyToObjectWithBlock:
matchSharingTouchesPolicy:orCancelTouchesPolicy:orCombinedPolicy:
setObject:atIndexedSubscript:
indexSetWithIndex:
policyIncludingPolicy:
policyExcludingPolicyIdenticalTo:
assertionEndpoint
invoke
_xpcConnection
getArgument:atIndex:
selector
_setQueue:
policyByCombiningPolicies:
sharedServer
@"BKDisplayController"
@"BKSHIDEventDisplay"
@"BKDigitizerTouchStreamAggregate"
@"BKTouchDeliveryStatisticsLoggingObserver"
@"NSArray"
@"NSMutableDictionary"
v24@0:8@"<BSDescriptionFormatting>"16
v24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v16@0:8
@"CADisplayLink"
@"NSThread"
@"NSRunLoop"
@40@0:8#16@24:32
@"BKImageSequence"
@"CAKeyframeAnimation"
@28@0:8@16f24
@24@0:8@16
v24@0:8d16
v24@0:8Q16
@28@0:8f16@20
@"BSCompoundAssertion"
B56@0:8{CGPoint=dd}16@32@40o^{?=IIIQf{CATransform3D=dddddddddddddddd}{CATransform3D=dddddddddddddddd}BBffff}48
{CGPoint=dd}40@0:8{CGPoint=dd}16@32
{CGPoint=dd}44@0:8{CGPoint=dd}16I32@36
I28@0:8I16@20
v28@0:8@16B24
@32@0:8Q16S24S28
v40@0:8@16Q24S32S36
v40@0:8@16@24@32
v32@0:8Q16S24S28
v32@0:8Q16@?24
v24@0:8@?16
@"BSServiceConnectionListener"
@"BKSystemShellSentinel"
@"NSObject<OS_dispatch_queue>"
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
v32@0:8@"NSNumber"16@?<v@?@"NSError">24
Vv24@0:8@"NSNumber"16
v32@0:8@16@?24
Vv24@0:8@16
@"NSMutableArray"
d16@0:8
d32@0:8d16^d24
B24@0:8d16
v36@0:8@?16^{__IOHIDEvent=}24I32
@"BKIOHIDService"
@"<BKHIDEventDispatcher>"
@"NSSet"
{CGSize="width"d"height"d}
I16@0:8
v20@0:8I16
f16@0:8
v20@0:8f16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"BKIOHIDServiceMatcher"
q40@0:8N^^{__IOHIDEvent}16@"<BKHIDEventSenderInfo>"24@"<BKHIDEventDispatcher>"32
@24@0:8@"BKHIDEventProcessorCreationContext"16
q40@0:8N^^{__IOHIDEvent}16@24@32
v24@0:8@"BKIOHIDService"16
v32@0:8@"BKIOHIDServiceMatcher"16@"NSArray"24
v32@0:8@16@24
v48@0:8^{__IOHIDEvent=}16@24@32@40
v40@0:8^{__IOHIDEvent=}16@24@32
v36@0:8^{__IOHIDEvent=}16@24I32
@"CALayer"
@"CAContext"
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8@16@24@32^v40
@"BKEventSenderUsagePairDictionary"
@"BKKeyboardHIDEventProcessor"
v52@0:8^{__IOHIDEvent=}16@24@32@40B48
v44@0:8^{__IOHIDEvent=}16B24@28@36
@"NSTimer"
@32@0:8Q16d24
@"CAWindowServerDisplay"
@"BKTouchDeliveryObservationServiceListener"
@"BSMutableIntegerMap"
@"NSMutableIndexSet"
Vv32@0:8@"NSNumber"16@"NSNumber"24
Vv32@0:8@16@24
v28@0:8I16I20I24
v48@0:8I16B20B24I28I32@36I44
v28@0:8@16I24
v28@0:8@16i24
v20@0:8i16
i20@0:8I16
v20@0:8B16
@"<BKHIDEventSenderInfo>"
v24@0:8S16B20
^{CGImage=}
^{CGImage=}16@0:8
@32@0:8@16@24
v32@0:8@"CALayer"16@"<BKDisplayAnnotationContent>"24
v32@0:8@"CALayer"16d24
v32@0:8@16d24
@"<BKDisplayAnnotationStyle>"
@32@0:8@16d24
@40@0:8d16d24d32
@24@0:8q16
v48@0:8d16d24d32d40
@"NSString"
@"<BKAlternateSystemAppDelegate>"
@"NSDictionary"
@"RBSProcessHandle"
@"RBSAssertion"
@40@0:8@16@24@32
@"BKSDisplayRenderOverlayDescriptor"
@"BKDisplayRenderOverlayPersistenceCoordinator"
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
@"CADisplay"16@0:8
q16@0:8
@"BKSDisplayProgressIndicatorProperties"16@0:8
v24@0:8q16
@?<v@?@"BKSHIDEventDisplay">16@0:8
v24@0:8@?<v@?@"BKSHIDEventDisplay">16
@"BKSHIDEventDisplay"16@0:8
@?16@0:8
@"BKDisplayAnnotationController"
v44@0:8I16{CGPoint=dd}20I36I40
v36@0:8I16I20I24q28
v40@0:8I16{CGPoint=dd}20I36
v36@0:8I16{CGPoint=dd}20
v24@0:8@"NSArray"16
v28@0:8I16@20
v36@0:8I16@20@28
v40@0:8I16@20@28i36
@20@0:8i16
@24@0:8I16I20
@20@0:8I16
v36@0:8{CGPoint=dd}16I32
@"BKHIDSystemInterface"
v24@0:8^{__GSEvent=}16
@"NSData"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@44@0:8@16q24@32f40
v24@0:8^{CGImage=}16
@"BSProcessDeathWatcher"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
B32@0:8@16^{?=[8I]}24
B32@0:8@16@24
@"NSPointerArray"
@"NSBundle"
@48@0:8@16@24q32d40
^{CGImage=}24@0:8q16
^{CGImage=}56@0:8Q16@24d32@40@48
@"<NSObject>"
@"NSMutableSet"
@"<BSInvalidatable>"
v24@0:8B16B20
@"BKDisplayAnnotation"
v44@0:8d16f24f28f32d36
v28@0:8q16B24
v32@0:8d16@24
v28@0:8B16@20
v48@0:8^Q16^B24^d32@40
@"BSTimer"
v24@0:8@"NSString"16
v28@0:8d16i24
v24@0:8^{__CFString=}16
@"<BKFirstBootTokenProviding>"
@"BKAlternateSystemAppManager"
@"NSHashTable"
@"BKSHIDEventDeferringResolution"
@"BKSHIDAuthenticatedKeyCommandSpecification"
@"<BKHIDSystemInterfacing>"
@"<BKHIDEventProcessorRegistering>"
@"BKKeyboardInfo"
v28@0:8@"NSString"16B24
i24@0:8@16
@24@0:8Q16
v32@0:8@16Q24
v28@0:8B16Q20
v32@0:8d16Q24
B24@0:8Q16
@48@0:8^{__IOHIDEvent=}16@24@32@40
i32@0:8@16@24
v40@0:8@16i24B28^{__IOHIDEvent=}32
@"BKSTouchAuthenticationSpecification"
@"BKDigitizerEventSchedulerBase"
@"BSContinuousMachTimer"
I36@0:8I16@20I28B32
v36@0:8C16C20d24I32
B60@0:8^I16q24I32@36{CGPoint=dd}44
@28@0:8I16o^B20
@52@0:8{CGPoint=dd}16@32I40@44
@28@0:8@16B24
I32@0:8@16@24
v32@0:8^{__IOHIDEvent=}16@24
@40@0:8^{__IOHIDEvent=}16@24^B32
v28@0:8^{__IOHIDEvent=}16I24
@"NSLock"
@"BKAccelerometerClient"
@"BKOrientationManager"
v44@0:8@"BKOrientationManager"16q24q32B40
v36@0:8@"BKOrientationManager"16q24B32
v44@0:8@16q24q32B40
v36@0:8@16q24B32
v24@0:8@"BKHIDEventClient"16
v52@0:8@16d24f32f36f40r^{?=[8I]}44
v40@0:8@16B24B28r^{?=[8I]}32
v36@0:8@16B24r^{?=[8I]}28
v40@0:8@16r^{?=[8I]}24@?32
@32@0:8{CGSize=dd}16
@"BKAlternateSystemApp"
v24@0:8@"BKAlternateSystemApp"16
v32@0:8@"BKAlternateSystemApp"16@"RBSProcessExitContext"24
v48@0:8@16@24@?32@?40
v48@0:8@16i24B28@32@?40
B24@0:8^{__CFString=}16
@"_BKCloneMirroringClient"
@"_BKDisplayBlankingContext"
v24@0:8@"_BKCloneMirroringClient"16
v32@0:8@16B24B28
v36@0:8^@16^@24B32
i16@0:8
@"NSSet"32@0:8^{__IOHIDEvent=}16@"<BKHIDEventSenderInfo>"24
v32@0:8^{__IOHIDEvent=}16@"BKSHIDEventDeferringResolution"24
v32@0:8^{__IOHIDEvent=}16@"<BKHIDEventSenderInfo>"24
@32@0:8^{__IOHIDEvent=}16@24
@"BKNamespaceNode"
@"CADisplay"
{CGSize=dd}48@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16@24@32d40
v24@0:8^{__IOHIDEvent=}16
v24@0:8^?16
^?16@0:8
{CGPoint=dd}32@0:8{CGPoint=dd}16
{CGPoint=dd}36@0:8{CGPoint=dd}16I32
@44@0:8{CGPoint=dd}16I32@36
@"BKSystemShellDescriptor"
@"BSServiceConnection<BSServiceConnectionHost>"
@"NSDate"
B28@0:8f16f20f24
B32@0:8d16d24
@24@0:8^{_NSZone=}16
@32@0:8@16q24
@"NSMutableOrderedSet"
@"NSObject<OS_os_log>"
@"BSAbsoluteMachTimer"
@"BKSystemShellServiceListener"
@"BKSystemShellControlServiceListener"
@"BKSystemAppHeartbeat"
@"BKSystemShellClient"
@"NSMapTable"
B24@0:8^{?=[8I]}16
@"BKDisplayBrightnessUpdateTransactionManager"
@"BKDisplayBrightnessController"
v24@0:8f16B20
^{__GSKeyboard=}
@"BKHIDEventSequenceRecognizer"
@"BKSHIDEventDescriptor"
C16@0:8
v20@0:8C16
^{__GSKeyboard=}16@0:8
v32@0:8@16q24
@36@0:8i16@20@28
@24@0:8@?16
@"BKTouchDeliveryObservationManager"
v24@0:8@"BKSTouchDeliveryUpdate"16
@40@0:8Q16Q24B32B36
Q44@0:8I16@20^Q28^Q36
i24@0:8Q16
[30I]
@"BKHIDDirectTouchEventProcessor"
@"BKDirectTouchPerDisplayInfo"
@"BKTouchDeliveryPolicyServer"
{DynamicArray<id<BKTouchLifecycleObserver>, 4>="_itemPointer"^@"_itemCount"Q"_itemCapacity"Q"_initialBuffer"[4@"<BKTouchLifecycleObserver>"]"_shouldFreeItemPointer"B}
@"BKTouchAnnotationController"
[30{BKTouchEventInfo="hitTestRegion"{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}"exclusiveHitTestRegion"{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}"touchIdentifier"I"userIdentifier"I"slotID"I"transducerType"I"normalLocation"{CGPoint="x"d"y"d}"denormalizedLocation"{BKPointTriple="locationsAreValid"B"hitTestIsShifted"B"preciseLocationCalculated"B"location"{CGPoint="x"d"y"d}"hitTestLocation"{CGPoint="x"d"y"d}"preciseLocation"{CGPoint="x"d"y"d}}"routingPolicy"@"BKSHIDTouchRoutingPolicy""hitTestInformationAtDown"@"BKSHIDEventHitTestLayerInformation""offset"{CGPoint="x"d"y"d}"contextsWaitingForTouchUp"{DynamicArray<BKDigitizerContext, 10>="_itemPointer"^{BKDigitizerContext}"_itemCount"Q"_itemCapacity"Q"_initialBuffer"[10{BKDigitizerContext="contextID"I"clientPort"I}]"_shouldFreeItemPointer"B}"hostingChain"{DynamicArray<BKDigitizerContext, 10>="_itemPointer"^{BKDigitizerContext}"_itemCount"Q"_itemCapacity"Q"_initialBuffer"[10{BKDigitizerContext="contextID"I"clientPort"I}]"_shouldFreeItemPointer"B}"shouldConsiderHitTesting"B"avoidHitTesting"B"prepareForHitTestingAvoidance"B"touchDetached"B"tapToWake"B}]
[30{?="previousTimestamp"d"previousQuality"d"zGradient"d}]
{Dictionary<BKDigitizerContext, BKPerContextHandInfo>="_nodes"{DynamicArray<BKDigitizer::Dictionary<BKDigitizerContext, BKPerContextHandInfo>::Node, 10>="_itemPointer"^{Node}"_itemCount"Q"_itemCapacity"Q"_initialBuffer"[10{Node="_key"{BKDigitizerContext="contextID"I"clientPort"I}"_value"{BKPerContextHandInfo="pathsTouchingSet"{BKPathIndexSet="_mask"I}}"_valid"B}]"_shouldFreeItemPointer"B}"_validItemCount"Q}
{Dictionary<unsigned int, BKCentroidCalculator>="_nodes"{DynamicArray<BKDigitizer::Dictionary<unsigned int, BKCentroidCalculator>::Node, 10>="_itemPointer"^{Node}"_itemCount"Q"_itemCapacity"Q"_initialBuffer"[10{Node="_key"I"_value"{BKCentroidCalculator="_count"q"_location"{CGPoint="x"d"y"d}}"_valid"B}]"_shouldFreeItemPointer"B}"_validItemCount"Q}
{DynamicArray<BKDigitizerContext, 10>="_itemPointer"^{BKDigitizerContext}"_itemCount"Q"_itemCapacity"Q"_initialBuffer"[10{BKDigitizerContext="contextID"I"clientPort"I}]"_shouldFreeItemPointer"B}
{BKPathIndexSet="_mask"I}
@"PUIProgressWindow"
@"BSPortDeathSentinel"
@"NSObject<OS_dispatch_source>"
@"<_BKCloneMirroringClientDelegate>"
@40@0:8Q16@24@32
@"NSXPCListener"
@"NSXPCConnection"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@"NSString"16@"NSError"24
v32@0:8@"NSString"16@"RBSProcessExitContext"24
@"BKSBacklightFeatures"
@"BrightnessSystem"
v24@0:8f16f20
v36@0:8f16@20Q28
@"NSOperationQueue"
@"CMDeviceOrientationManager"
B24@0:8^q16
v40@0:8Q16q24q32
v32@0:8Q16q24
v32@0:8q16q24
@"BKEventStatisticsLoggingController"
@"BKIntegerEventStatistic"
@"BKAverageTimeIntervalEventStatistic"
@"BKHexadecimalIntegerEventStatistic"
@"BKMRUEventStatistics"
{CGPoint="x"d"y"d}
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
@32@0:8{CGPoint=dd}16
@"BKDisplayAnnotationLocation"
@"BKDisplayAnnotationRenderer"
@"<BKDisplayAnnotationContent>"
@"BKDisplayAnnotationStyleSheet"
@"BKFirstBootDetector"
@20@0:8f16
@"CAWindowServer"
@48@0:8@16@24@32@40
@"BKBootUIOverlayVendor"
@"BKDisplayRenderOverlayManager"
@"BKDisplayRenderOverlay"
v24@0:8@"BKFirstBootDetector"16
@56@0:8@16@24@32@40@48
@"NSObject"
v32@0:8q16@?24
@48@0:8@16q24@?32@?40
@"NSObject<OS_dispatch_mach>"
@"BKHIDSystem"
@24@0:8@"NSString"16
v32@0:8@16@"NSString"24
^{__IOHIDEvent=}32@0:8I16^{__IOHIDEvent=}20I28
@"BKHIDEventDeliveryManager"16@0:8
@"BKHIDEventSenderCache"16@0:8
@"BKHIDClientConnectionManager"16@0:8
@"NSArray"24@0:8@"NSDictionary"16
v48@0:8^?16@"NSDictionary"24^v32^v40
v48@0:8^?16@24^v32^v40
v32@0:8@"BKHIDSystem"16q24
@"<BKHIDEventDispatcher>"20@0:8I16
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16I48
@"BKSTouchDeliveryPolicy"
v24@0:8@"BKSTouchDeliveryPolicy"16
@"<NSSecureCoding>"40@0:8@"NSXPCConnection"16@"NSXPCCoder"24@32
v36@0:8@"NSXPCConnection"16@"NSInvocation"24B32
v36@0:8@16@24B32
@32@0:8^I16q24
B28@0:8I16d20
hitTestRegions
touchStreams
digitizers
gear
_background
contents
hitTestBackgroundStandardDeviation
hitTestBackgroundAverage
hitTestBackgroundMaximum
hitTestBackgroundMinimum
hitTestInsecureFiltered
NSValue
NSNumber
backboardd.display-blanking
v16@?0@"BKSMutableHIDEventHitTestLayerInformation"8
v32@?0@"NSNumber"8@"NSMutableDictionary"16^B24
v32@?0@"NSNumber"8@16^B24
page:0x%X usage:0x%X
0x%llX
v24@?0S8S12@"NSObject"16
v16@?0@"BKMutableSystemShellDescriptor"8
<unknown:%lX>
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
com.apple.backboard.systemshell
com.apple.backboardd
com.apple.backboardd.migration
%s respawn
dispatcher
service
currentDestinations
maxForce
pathIndexTouchingMask
pathIndexInRangeMask
Height
Width
SurfaceDimensions
v32@?0@"BKIOHIDService"8Q16^B24
v32@?0@"NSNumber"8@"BKTouchPadInfo"16^B24
DeviceUsagePairs
DeviceUsage
DeviceUsagePage
BKTouchPadQueue
v12@?0B8
-[BKDigitizerEventSchedulerWithDisplayLink scheduleEvent:fromDigitizer:toClient:]_block_invoke
BKDigitizerEventSchedulerWithDisplayLink.m
_BKHIDXXGetBacklightFactor
_BKHIDXXSetBacklightFactorPending
_BKHIDXXSetBacklightFactorWithFadeDuration
_BKHIDXXSetBacklightFactorWithFadeDurationAsync
_BKHIDXXSetMinimumBrightnessLevelWithFadeDuration
_BKHIDXXSetBacklightFeatures
_BKHIDXXAmbientLightSensorExists
_BKHIDXXAmbientLightSensorDisableAutoBrightness
_BKHIDXXAmbientLightSensorEnableAutoBrightness
_BKHIDXXSetObjectInProximityIgnoresTouches
_BKHIDXXSetDiscreteDispatchingRules
v32@?0@"NSString"8@"NSArray"16^B24
NSDictionary
v32@?0@"BKSHIDEventDeferringRule"8Q16^B24
NSArray
v24@?0@"BKSHIDEventKeyCommandsRegistration"8^B16
NSSet
_BKHIDXXGetEventResolutionDescription
_BKHIDXXSetKeyCommandsDispatchingRules
v32@?0@"NSString"8@"BKSHIDEventKeyCommandsDispatchingRule"16^B24
_BKHIDXXSetAuthenticatedKeyCommands
_BKHIDXXCancelTouchesOnAllDisplays
_BKHIDXXCancelTouchesOnDisplay
_BKHIDXXCancelTouchesWithIdentifiers
_BKHIDXXSetHitTestRegionsForDisplay
_BKHIDXXApplyButtonDefinitions
_BKHIDXXPlayHaptic
_BKHIDXXPostTouchAnnotations
_BKHIDXXTouchStreamCreate
_BKHIDXXTouchStreamSetEventDispatchMode
_BKHIDXXTouchStreamInvalidate
_BKHIDXXDigitizerTouchDetach
_BKHIDXXDigitizerTouchDetach_block_invoke
_BKHIDXXDigitizerTouchSetOffset
_BKHIDXXDigitizerTouchSetRoutingPolicy
_BKHIDXXDigitizerTouchSetRoutingPolicy_block_invoke
_BKHIDXXResetUserEventTimer
_BKHIDXXNotifyOnNextUserEvent
_BKHIDXXGetLastUserEventTime
_BKHIDXXSetDeviceInterfaceOrientation
_BKHIDXXSetDeviceOrientationForAutomation
_BKHIDXXSetOrientationClient
_BKHIDXXLockOrientation
_BKHIDXXUnlockOrientation
_BKHIDXXIsOrientationLockedWithOrientation
%@:%d
_BKHIDXXSetDisplayBrightnessValue
_BKHIDXXSetDisplayBrightnessCurveValue
_BKHIDXXRestoreSystemDisplayBrightness
_BKHIDXXSetAutoDisplayBrightnessEnabled
_BKHIDXXSetTouchHand
_BKHIDXXSetWristState
_BKHIDXXGetCALayerTransform
_BKHIDXXTouchAddAuthenticationSpecifications
BKSTouchAuthenticationSpecification
_BKHIDXXVerifyEventAuthenticationMessage
bounds
contextID
%x (%u)
opacity
Couldn't create remote context
Content layer not set
BKDisplayBootUIRenderOverlay.m
Already have a context
DeviceColorMapPolicy
[_bs_assert_object isKindOfClass:BKSDisplayRenderOverlayDescriptorClass]
_bs_assert_object != nil
Invalid condition not satisfying: %@
BKSDisplayRenderOverlayDescriptor
silent
tone1
unknown:%lX
com.apple.backboard.systemAppHeartbeat
_BKDisplayBlankingContext.m
backboardd.firstboot_check
isTokenSet
v32@?0q8@"NSMutableIndexSet"16^B24
v24@?0Q8^B16
v20@?0i8@"BKSTouchDeliveryUpdate"12
com.apple.backboard.BKTouchDeliveryObservationManager
CAWindowServerDisplay:%p size:{%g,%g} scale:%g orientation:%g external:%d
BKDisplayServices MiG Server
com.apple.backboard.display.services
v16@?0@"_BKDisplayInfo"8
v32@?0@"CADisplay"8Q16^B24
MainDisplayRotation
com.apple.springboard.hasBlankedScreen
com.apple.backboardd.libnotify-workaround
TVOut
BKDisplayIsDisabled
BKDisplaySetDisabled
BKDisplayIsFlipBookEnabled
BKDisplaySetFlipBookEnabled
BKDisplayResetFlipBookEnabled
BOOL BKDisplayIsHeadless(void)_block_invoke
please invoke BKDisplayStartWindowServer before BKDisplayIsHeadless
BKDisplay.m
CGFloat BKMainDisplayScaleFromMobileGestalt(void)_block_invoke
MainScreenScale is not valid: %f
main-screen-scale
screen-dimensions
CGImageRef BKDisplayCaptureImage(CADisplay *__strong)
BKDisplayCaptureImage
[_bs_assert_object isKindOfClass:CADisplayClass]
CADisplay
firstDown:%.3gs ago b%ue%uu%u destinations:%@
<none>
didReceiveUpEvent
didReceiveEndedPhase
didReceiveBeganPhase
firstDownTime
destinations
eventDispatcher
senderInfo
BKDisplayRenderOverlayImage:%@
BKDisplayRenderOverlayImage.m
_context == nil
Shape annotation
Text annotation: 
Helvetica
Helvetica-Bold
BKDisplayAnnotationShapeContent
CAShapeLayer
_BKDisplayXXSetScreenBlanked
_BKDisplayXXWillUnblank
_BKDisplayXXIsFlipBookEnabled
_BKDisplayXXSetFlipBookEnabled
_BKDisplayXXSetCalibrationPhase
_BKDisplayXXIsDisabled
_BKDisplayXXSetDisabled
_BKDisplayXXSetReplayCloneContextIDs
v16@?0@"NSNumber"8
_BKDisplayXXSetCloneMirroringMode
_BKDisplayXXSetVirtualDisplayClientPID
_BKDisplayXXDisplayIsTethered
_BKDisplayXXTetherPrefsNeedImmediateUpdate
_BKDisplayXXSetTetheredOrientationNotificationsDisabled
_BKDisplayXXUpdateTetheredDisplayOrientationIfNecessaryWithInterfaceOrientation
_BKDisplayXXUpdateMirroredDisplayOrientationWithInterfaceOrientation
_BKDisplayXXApplyRenderOverlay
_BKDisplayXXRemoveRenderOverlay
_BKDisplayXXFreezeRenderOverlay
_BKDisplayXXRenderOverlay
_BKDisplayXXDismissInterstitialRenderOverlay
pid %d
_BKDisplayXXSetSecureMode
options
bundleID
-[BKAlternateSystemApp _noteExitedWithContext:]
-[BKAlternateSystemApp _noteLaunchSucceeded]
Alternate system app termination requested.
-[BKAlternateSystemApp launch]
Alternate system app
com.apple.frontboard.visibility
com.apple.backboard.alternateSystemApp
v24@?0@"RBSProcessHandle"8@"RBSProcessExitContext"16
AlternateMachServices
MachServices
BKSLaunchdPlist
com.apple.frontboard.workspace
com.apple.frontboard.systemappservices
.jail.
OverrideAppType
OverrideURL
System
file:///Applications/PreBoard.app
com.apple.PreBoard
descriptor
visible
level
BKDisplayRenderOverlay.m
Can't freeze a hidden overlay
Must dismiss before releasing
BKHIDKVOWindowServerDisplayUUID
uniqueId
DisplayBrightnessFactor
DisplayBrightnessFactorPending
com.apple.backboardd.backlight.changed
DisplayBrightnessFactorWithFade
DisplayBrightnessFadePeriod
DisplayBackLightArchitecture
.ctx
touch.%X
ctx:%X
ctx:%X -- %@
 (%d)
com.apple.
touch.%X.%@
hit-test-rgns.%d.exclusive
hit-test-rgns.%d.full
hit-test-rgns
always-ctx.%X
always %@
detached
ctx.%d
swipe right
swipe down
swipe left
swipe up
swipe-pending
swipe-locked
from edge
touch.%X.id
touch
BKTouchAnnotationController
imageData
overlayType
LICreateUncompressedBitmapDataFromImageWithOptions
CFDataRef soft_LICreateUncompressedBitmapDataFromImageWithOptions(CGImageRef, LIUncompressedBitmapDataOptions)
_BKDisplayRenderOverlayPersistenceData.m
/System/Library/PrivateFrameworks/MobileIcons.framework/MobileIcons
/System/Library/PrivateFrameworks/MobileIcons.framework/Contents/MacOS/MobileIcons
void *MobileIconsLibrary(void)
LICreateImageFromUncompressedBitmapData
CGImageRef soft_LICreateImageFromUncompressedBitmapData(CFDataRef)
BKImageSequence.m
imageIndex < _maximumImageCount
.png
@%dx
%@%d%@%@
com.apple.backboard.proximity.changed
testDisplay
mainDisplay
sensors
com.apple.BKHumanPresenceHIDEventProcessor
_safeToResetIdleTimer
_shouldNotify
_isIdle
lastResetTimerRequestTime
lastUserEventTime
currentTimeout
currentMode
this object should never deallocate
BKUserEventTimer.m
BKUserEventTimer
v16@?0@"NSNotification"8
com.apple.backboardd.idletimer
_firstBootToken
vpid
authSpec
destination
globalActiveModifiers
v16@?0@"<BSDescriptionStringAppendTarget>"8
keyCodesDownperSenderID
StrictWakeHallEffectSensors
usableKeyboards
primaryKeyboard
keyboardLayout
@16@?0@"BKIOHIDService"8
Product
Manufacturer
Trackpad
DeviceTypeHint
@16@?0@"BKSHIDEventDeferringResolution"8
v32@?0q8@"NSSet"16^B24
vendorID
productID
StrictWakeKeyboardCases
ProductID
VendorID
v32@?0@"BKKeyboardInfo"8Q16^B24
@24@?0@"NSNumber"8@"BKKeyboardInfo"16
v16@?0@"BKSMutableHIDKeyboardDeviceProperties"8
B16@?0@"BKHIDAccessibilitySender"8
BKKeyboardHIDEventProcessor.m
keyboardLayout != ((void *)0)
backboardd.keyboards.global-observers
v32@?0@"BKHIDEventSequenceRecognizer"8Q16^B24
BKKeyboards
<nil>
<main>
BKIOHIDService
-[BKHIDDirectTouchEventProcessor _handleDirectTouchEvent:service:]
must have a service here
BKHIDDirectTouchEventProcessor.mm
QuantizationDPI
v32@?0@"NSString"8@"BKDirectTouchPerDisplayInfo"16^B24
v16@?0@"BKDirectTouchState"8
GraphicsOrientation
defer
process
ignoring
stealing
sending
unspecified
<unknown>
perDisplayInfo
scheduler
BKDigitizerInfoArbiterDispatchQueue
digitizerSignpostsEnabled
digitizerVisualizeTouches
digitizerVisualizeHitTestRegions
v12@?0I8
BKDirectTouch
@8@?0
BootUI
Button
DisplayAnnotations
IdleTimer
Keyboard
RenderOverlay
TouchEvents
TouchDeliveryPolicy
Accelerometer
KeyPresses
-[BKDigitizerEventSchedulerBase scheduleEvent:fromDigitizer:toClient:]
BKDigitizerEventScheduler.m
event
digitizer
MACH_PORT_VALID(clientTaskPort)
v24@?0@"BKAccelerometerClient"8^B16
systemAppOrientationClient
clients
eventsEnabled
v16@?0@"BKAccelerometerClient"8
BKAccelerometerInterface.m
this object should not be deallocated
shapeSize
string
BKAlternateSystemAppManagerDidBlockSystemApp
BKAlternateSystemAppManagerDidUnblockSystemApp
dealloc'ing without calling the open result block
BKAlternateSystemAppManager.m
dealloc'ing without calling the exit block
com.apple.backboardd.altsysapp
BKTetherControllerTetherStateChangedNotification
displayport
com.apple.backboardd.deviceinterfaceorientation
com.apple.mobile.demo.mode-%d
com.apple.mobile.demo_mode_changed
kIAPDServerDiedNotification
com.apple.iapd.videoout.SettingsChanged
Wireless
display-mirroring
PurpleTVOut
availableModes
stark
SIMULATOR_EXTENDED_DISPLAY_PROPERTIES
com.apple.backboardd.BKTVOutController.workQueue
FBSOpenApplicationOptionKeyActions
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
### Failed to Soft Linked: /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
FBSSystemService
v32@?0@"NSNumber"8@"NSMutableArray"16^B24
B24@?0@"NSNumber"8@"NSMutableSet"16
v32@?0@"NSDictionary"8Q16^B24
com.apple.CoreAnimation.CAWindowServer.SecureModeViolation
com.apple.backboardd.secure-drawing-monitor
kern.progressoptions
Already have a _context
BKDisplayRenderOverlayPinkForTesting.m
Testing
q16@?0@"BKNamespaceNode"8
v24@?0@"BKNamespaceNode"8@"BKNamespaceNode"16
<root>
v32@?0@"NSString"8@"BKDisplayAnnotationController"16^B24
System/Library/AccessibilityBundles/BackBoard.axbundle
wasAlive
isAlternateShell
finishedStartup
pendingCheckIn
checkedIn
connection
wantsAccelerometerEvents
passiveEvents
wantsOrientationEvents
BKIntegerEventStatistic
v16@?0@"BKEventStatistic"8
BSDescriptionStream
B16@?0@"BKEventStatistic"8
 (ms)
 (s)
BKAverageTimeIntervalEventStatistic
BKHexadecimalIntegerEventStatistic
capacity > 0
Invalid parameter not satisfying: %@
BKEventStatisticsLoggingController.m
@16@?0@"BKEventStatistic"8
v16@?0@"NSArray"8
@16@?0@"NSArray"8
v16@?0@"BSAbsoluteMachTimer"8
BKEventStatisticsLogging
v16@?0@"<BSCompoundAssertionState>"8
BKEventStatistics-
com.apple.backboard.BKEventStatistics
BKSystemShellSentinelConnectedSystemAppsDidChangeNotification
BKSystemApplicationDidFinishLaunchingNotification
@"BKSystemShellDescriptor"16@?0@"BKSystemShellClient"8
@16@?0@"BKSystemShellClient"8
connectedSystemApps
systemApp
systemAppBlocked
identifier
BKDisplayBrightnessUpdateTransaction
BKDisplayBrightnessUpdateTransactionManager.m
_invalidated == YES
(implicit)
commitDisplayBrightness
There shouldn't be a negative number of pending transactions
update-transaction
setDisplayBrightness (transient)
setDisplayBrightness (permanent)
synchronizeALSPreferencesAndDisplayBrightness
CapsLockDelayOverride
HIDCapsLockLEDInhibit
HIDCapsLockState
Usage
UsagePage
EventType
KeyboardEnabledEvent
KeyboardEnabled
gsKeyboard
capsLockKeyHasLanguageSwitchLabel
capsLockRomanSwitchMode
capsLockOn
subinterfaceID
keyboardType
countryCode
keyboardLanguage
transport
shouldActivateByGesture
v32@?0q8@16^B24
v16@?0@"BKSMutableHIDEventDeferringResolution"8
lastOrientation
v32@?0@"NSString"8Q16^B24
ALSUserPreference
ALSResetCurve
ALSEnabled
ALSInternalSettings
BKHIDALSInternalSettings
DisplayBrightnessFadeSlope
BKALSFadeSlope
LogLevel
BKHIDSessionLogLevel
ALSIntPeriodOrientationPortraitInv
BKALSIntPeriodOrientationPortraitInv
ALSIntPeriodOrientationPortrait
BKALSIntPeriodOrientationPortrait
ALSIntPeriodOrientationLandscape
BKALSIntPeriodOrientationLandscape
ALSIntPeriodOrientationEnabled
BKALSIntPeriodOrientationEnabled
ALSIntPeriod
BKALSIntPeriod
DisplayBrightnessAutoWeightMin
BKALSWeightMin
DisplayBrightnessAutoWeightMax
BKALSWeightMax
DisplayBrightnessAuto
UserInteractedWithUI
DisplayAutoBrightnessStatus
DisplayAutoBrightnessDelay
DisplayAutoBrightnessActive
_wrapRunLoopWithAutoreleasePoolHandler
BKAutoreleasePoolRunLoopSupport.m
count > 0
com.apple.backboard.client
com.apple.backboardd.replacesystemapp
com.apple.backboard.displaybrightness
com.apple.backboardd.lastUserEventTime
com.apple.backboardd.setDeviceOrientation
com.apple.backboardd.fastHaptic.play
com.apple.backboardd.layerTransformLookup
com.apple.backboardd.eventAuthenticationKey
com.apple.backboardd.eventAuthenticationVerification
com.apple.backboardd.setAuthenticatedKeyCommands
com.apple.backboardd.setAuthenticatedTouches
com.apple.backboardd.eventResolution
com.apple.backboardd.hostCanRequireTouchesFromHostedContent
com.apple.backboardd.cancelsTouchesInHostedContent
com.apple.backboardd.touchStreams
com.apple.backboardd.detachTouches
com.apple.backboardd.cancelTouches
com.apple.backboardd.virtualDisplay
com.apple.backboardd.disableDisplays
com.apple.backboardd.replayClone
com.apple.backboardd.touchDeliveryObservation
BKSystemShellDescriptor.m
[_bs_assert_object isKindOfClass:NSStringClass]
NSString
watchdogType
BackBoard
shell
systemIdleSleepInterval
jobLabel
bundlePath
bundleIdentifier
BKSystemShellDescriptor cannot be subclassed
cannot directly allocate BKSystemShellDescriptor
v16@?0@"BSServiceConnection"8
state
unset
<invalid:%d>
unknownState
closed
open
sensorsRequiredForAmbiguousState
flap3
flap2
flap1
sensorsRequiredForOpenState
supportedSensors
disengagedSensors
backboardd.smart-cover-observer
BKSmartCover
hall-effect-sensor
v16@?0@"BKDigitizerTouchStreamClient"8
v24@?0r^{BKDigitizerContext=II}8r^v16
v32@?0r^{BKDigitizerContext=II}8^{__IOHIDEvent=}16r^v24
v24@?0r^{BKDigitizerContext=II}8r^{BKPerContextHandInfo={BKPathIndexSet=I}}16
pathsDetached
pathsTouching
{%@}
senderID
displayUUID
authenticated
preciseLocations
(unknown digitizer usage: %X)
puck
stylus
freeSpaceWand
multiplePointDigitizer
armature
articulatedArm
stereoPlotter
3DDigitizer
coordinateMeasuringMachine
whiteBoard
touchPad
touchScreen
lightPen
bad usage pair
(0x%X / 0x%X)
BKDirectTouchState.mm
Subclasses not allowed
%d >= 32
from-client.pid-%d
from-client.pid-%d.%@
v24@?0r^{ContextWithUserIdentifier={BKDigitizerContext=II}I}8r^v16
v28@?0r^{BKDigitizerContext=II}8I16r^v20
v16@?0@"BKSMutableHIDEventAuthenticationMessage"8
-[BKDirectTouchState _determineHitTestContextsForPathCollection:contextMap:]
operator[]
BKDigitizerDynamicArray.h
idx < _itemCount
_policy
v32@?0@"BKSHitTestRegion"8Q16^B24
v24@?0r^{BKDigitizerContext=II}8r^{TransformedPathLocation=q{BKPointTriple=BBB{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}}i}16
shouldn't be hit testing an update subevent
v24@?0r^{BKDigitizerContext=II}8r^{BKPathIndexSet=I}16
v16@?0Q8
eventType == kIOHIDEventTypeDigitizer
-[BKDirectTouchState _saveWillUpdateEvents:port:contextID:]
pending/removed items don't match: %@/%@
this is Unix, that can't happen
CFIndex BKDigitizerUpdateGenerationCount(IOHIDEventRef)
passing a NULL IOHIDEventRef is not recommended
must be a digitizer event
-[BKDirectTouchState _handleDidUpdateEvent:]
puiProgressWindow
B16@?0@"CADisplay"8
backboardd.CADisplayMonitor
BKCADisplayMonitor.m
must invoke -invalidate before deallocating BKCADisplayMonitor
init is unsupported, use initWithDisplays: instead
new is unsupported, use initWithDisplays: instead
com.apple.backboard.watchdog
humanIsPresent
proximityInCentimeters
status
v16@?0@"RBSProcessExitContext"8
v12@?0i8
com.apple.backboard.altsysappserver
com.apple.backboard.altsysapp
~/Library/Preferences/com.apple.springboard.plist.restored
~/Library/SpringBoard/IconState.plist.restored
~/Library/AddressBook/AddressBookImages.sqlitedb.restored
~/Library/AddressBook/AddressBook.sqlitedb.restored
~/Library/Calendar/Calendar.sqlitedb.restored
/tmp/RestoreRunning
CoreBrightnessFeaturesDisabled
FixBrightness
FixBrightnessNits
Status
v32@?0q8@"BKBacklightClient"16^B24
FreezeBrightness
FreezeBrightnessPeriod
FreezeBrightnessRequestors
FreezeBrightnessEnable
BrightnessCurveLevel
UIBacklightLevelChangedNotification
DisplayInitialBrightness
DisplayBrightness
Commit
Brightness
none
setInitialLevel
notifyBrightnessSystem
notifyClients
commit
BrightnessMinPhysical
BrightnessMinPhysicalWithFade
v24@?0@"NSString"8@16
BrightnessSystemDidChange
BKDisplayBrightnessController suppress-darwin-notifications
com.apple.backboardd.orientationlock
com.apple.backboardd.unambiguousOrientation
com.apple.backboardd.rawOrientation
com.apple.backboardd.orientation
(%@)
overlay
system
user
v8@?0
v24@?0@"CMDeviceOrientation"8@"NSError"16
ReportInterval
Shake
ThresholdPeriod
ThresholdZ
ThresholdY
ThresholdX
com.apple.backboardd.orientationManager
com.apple.backboardd.orientationManagerNotify
com.apple.backboardd.orientationManager.observerCallout
ambiguityRecommendation
dispatchMode
isValid
clientPort
BKDigitizerTouchStreamClient.m
dealloc without previous -invalidate
processing touches
BKTouchDeliveryStatisticsLoggingObserver.m
precondition: should have invalidated and cleared any previous transactions
touch (%@)
recentHitTestContexts
touchID
averageProcessingTime
fromEdge
pencil
tapToWake
soft cancel
HID cancel
down
%@|%@
main
libitmap
TMPDIR
/tmp
BKDisplayAnnotation.m
_content == ((void *)0)
section
content
use one of the factory methods
v32@?0@"CAWindowServerDisplay"8Q16^B24
v24@?0@"BKDisplayRenderOverlay"8^B16
activeOverlays
persistenceCoordinator
orientationManager
backlightManager
BKDisplayRenderOverlayManager.m
windowServer
shell exited (%@)
shell changed (%@)
shell launched (%@)
didFinishFirstBoot
_underlay
_overlay
BKBootUIPresenter.m
Must dismiss overlay / underlay before releasing
hideAppleLogoOnLaunch
init 2
init
v16@?0@"<BSServiceConnectionConfiguring>"8
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
com.apple.backboard.systemshell-control
                                
@"BKNamespaceNode"28@?0@"NSString"8@"BKNamespaceNode"16B24
@16@?0@8
subnodes
object
name
BKHIDSystem MiG server
com.apple.backboard.hid.services
v16@?0@"BSSimpleAssertion"8
doing nothing
hello
@16@?0@"BKSTouchDeliveryPolicy"8
@16@?0I8I12
@20@?0I8d12
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.backboardd.TouchDeliveryPolicyServer
Cleaning up objects for display %{public}@ since there are no digitizers left
cannot set event router thread priority (error %d)
%p unload spinny
%p load spinny
got a connection! -- %{public}@ pid:%d
dropping connection with junk pid (%d) -- %{public}@, 
missing jobLabel
missing bundlePath
missing bundleIdentifier
we don't handle this watchdogType:%{public}@
'%{public}@' is not a system shell
invalidated connection pid:%d
interrupted connection pid:%d
starting %{public}s...
clearing the board for %{public}@
starting HID system...
starting window server...
starting GSEvents...
starting HID event processing...
starting ALS...
starting display server...
%{public}s exiting...
failed to clear the board for %{public}@ : %@
touchpad: Cancel (%{public}@)
touches:%X ranges:%X then:%{BOOL}u now:%{BOOL}u
touchpad %{public}@
Found a new touchpad %{public}@
TouchPad was removed: %{public}@
unknown touch pad sender 0x%llX
cannot decode backlight features mode: %{public}@
bad size for mode data
RequestEstimatedProximityEvents ignored on this OS
equestProximityStatusEvent ignored on this OS
ResetProximityCalibration ignored on this OS
RequestUISensorMode ignored on this OS
Error unarchiving dispatching rules
bad size for rule data
Error unarchiving deferring rules
ClaimGenericGestureFocus: could not convert UUID to UTF-8
Error unarchiving command registration rules
_BKHIDXXGetEventResolutionDescription: cannot encode %{public}@
_BKHIDXXGetEventResolutionDescription: failed to decode event descriptor
_BKHIDXXGetEventResolutionDescription: no event descriptor
Error unarchiving key command dispatching rules
cannot encode: %{public}@
no keyboard with senderID:%llX
cannot decode authenticated key commands: %{public}@
bad size for authenticated key command data
Error unarchiving touchIdentifiers
Error unarchiving hittestRegions
%s: Error unarchiving touch annotations
%s: no data received
%s: Error unarchiving policy
%s: no policy data received
Beginning explicit brightness transaction on behalf of %{public}@
Ignoring explicit brightness transaction request because sender is invalid: %{public}@
Ignoring implicit brightness transaction request because sender is invalid: %{public}@
GetCALayerTransform: transform out areguments are nil
GetCALayerTransform failed to encode transform value
%s: nil authspec data
%s: invalid authentication spec data received
%s: error corrupt authspec structure (%{public}@)
pid:%{public}@ adding (entitled:%{BOOL}u) slot registrations %{public}@
GetUISensorCharacteristics ignored on this OS
%s: Error decoding message (%{public}@)
%s: Cannot create data from message (%{public}@)
Entitlement %{public}@ required to use %{public}s; ignoring request from pid %d
Only system apps with entitlement %{public}@ may use %{public}s; ignoring request from pid %d
Only system apps with entitlement %{public}@ or processes with entitlement %{public}@ may use %{public}s; ignoring request from pid %d
-----------> %p: bounds of display changed: size.width: %f size.height: %f, updating overlay position
Cleaning up %@ - Destroying context: %@
%p dismiss
%p present
midBounds:%g,%g
failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@
ringer state changed to:%{public}@
 0x%X/0x%X/%llX soft cancel: %{public}@
0x%X/0x%X/%llX soft cancel: no event found, ignoring request
 0x%X/0x%X/%llX began: %{public}@
 0x%X/0x%X/%llX finished: %{public}@
initial ringer state:%{public}@
%@ - clearing blanked display: %@
%@ - blanking display: %@
Failed to delete semaphore %{public}s for first boot token. Error = %d
Failed to create semaphore %{public}s for first boot token. Error = %d
terminate pid:%d
pid:%d remote target: %{public}@
cannot get remote target for connection %{public}@
touch %X sent to destination pid:%d
post update for touch:%X to pid:%d
pid:%d observes touch:%{BOOL}u identifier:%X
process:%{public}@ (ctx:%{public}@) observes all touches:%{BOOL}u
Setting main screen size to %{public}@ and scale to %{public}@
Actually swapping the size because the display orientation is %f radians - new size:  %{public}@
Set Blanked: %@
will unblank
%{public}s: unknown displayUUID:%{public}@ 
BKDisplaySetFlipBookEnabled setFlipBookEnabled:%{BOOL}u
BKDisplayResetFlipBookEnabled flipBookIsEnabled:%{BOOL}u
StartWindowServer: disabling framebuffer changes on display (%d) at boot until we are ready for them.
StartWindowServer: MG scale:%g display preferredScale:%g
StartWindowServer: Invalid scale from MG: %g; assuming 1.0
StartWindowServer: initial main screen size:%{public}@ scale:%{public}@
StartWindowServer: main display info:%{public}@ -- display:%{public}@ serverDisplay:%{public}@
StartWindowServer: headless (display:%{BOOL}u/server:%{BOOL}u)
failure in %{public}@ (%{public}@:%i) : %{public}@
%s Unable to create CGImageRef from IOSurface!
%s Unable to create IOSurface with properties: %{public}@
Setting progress indicator (style = %d) for overlay at position (%u, %u).
Unable to apply kernel progress indicator - error %d.
Successfully applied kernel progress indicator.
[BKDisplayRenderOverlay] No CADisplay found for UUID: %{public}@
[BKDisplayRenderOverlay] Unable to capture display image for display! %{public}@
No image
Decoded contextIDs contains malformatted elements: %{public}@
Error unarchiving contextIDs
UpdateMirroredDisplayOrientationWithInterfaceOrientation:%{public}@ 
ignoring mirrored display orientation update to %{public}@ because (tethered:%{BOOL}u displayPortTethering:%{BOOL}u stevenoteRotationEnabled:%{BOOL}u)
ignoring mirrored display orientation update to %{public}@ because (forceMirroredOrientation:YES)
Updating external display interface orientation from %{public}@ to %{public}@
Ignoring request to update to same display interface orientation (%{public}@)
Ignoring request to update to same display interface orientation because there are no CADisplays
GetRenderOverlayDismissActions failed to encode actions
GetRenderOverlayDismissActions: nothing to do
%s: self = %{public}@ exitContext = %{public}@
Alternate system app launch failed for %{public}@
Failed to terminate %{public}@ with error: %{public}@
%s: app = %{public}@
Using built-in information for bundle ID %{public}@: URL="%{public}@" appType="%{public}@"
%s: launch failed: app not installed %{public}@
%s: launch failed: no executable path for bundle at path %{public}@
[%@] Registering alternate mach service "%@" in place of "%@".
[%{public}@] Ignoring alternate mach service for "%{public}@" because mapped service "%{public}@" does not exist.
%s: launch failed: %{public}@
%s: launch succeeded but app was not made visible: %{public}@
Dismissing render overlay %{public}@ with animation settings: %{public}@
Freezing overlay: %{public}@
Presenting overlay: %{public}@ with animation settings: %{public}@
_mainDisplay changed:%{public}@
Setting backlight factor pending: %f
Update last requested backlight factor: %g permanently:YES
Setting CoreBrightness backlight factor:%f with fade duration:%f
touchIdentifier:%X annotation:%{public}@ pid:%d
touchIdentifier %X does not exist; dropping annotation:%{public}@
Ignoring call to deprecated GSEventResetIdleTimer received from %d
_handleEvent: Ignoring GSEvent type:%d.
missing image index:%d basename:%{public}@ scale:%g
loading image:%d for basename:%{public}@ scale:%g idiom:%{public}@
Can't find requested image: %{public}@ in %{public}@
Loaded: %{public}@
send prox event:%{public}@ to %{public}@
-> %{public}@
Ignoring %{public}@
%{public}@: human presence event %g
%{public}@: human proximity event %g
%{public}@: missing sensor record for displayUUID %{public}@
%{public}@: removing %{public}@
%{public}@: found %{public}@
Disabling timer because scheduled interval exceeds 'forever' threshold
Checkpoint after interval: %gs
Rescheduling checkpoint with new interval: %gs (last user event was %gs ago)
postNotification: %{public}@
reset timer to mode:%{public}@ duration:%gs
First boot is finished
Ignoring service with secondary keyboard usage: %{public}@/%{public}@/%{public}@
smartKeyboardAttachmentStateDidChange:%{public}@
%{public}@
system app is no longer consuming all events
keys down: %{public}@
invalid audit token for destination:%{public}@
Unicode: %{public}@ destinations: %{public}@
Usable keyboard detached: %{public}@
Usable keyboard attached: %{public}@
Hardware keyboard attached (countryCode:%d type:%d layout:%{public}@) GS:%p
Keyboard detached: %{public}@
Keyboard not found for IOHIDService: %{public}@
Unfamiliar MG query result format: %{public}@
Keyboard requires HES workaround for open
Keyboard attached: %{public}@
Pencil AX event, but pencil digitizer is missing
Not supported: accessibility digitizer for external display (%{public}@)
*** unknown digitizer %{public}@ -- initializing now
create touch stream contextID:%X
invalidate touch stream contextID:%X
digitizer detached (sender %llX) builtIn:%d
*** lost main display digitizer ***
*** lost pencil digitizer ***
cancel -- digitizer did disappear:%{public}@
digitizer attached (sender %llX) service:%{public}@
*** already have a main display digitizer
*** acquired main display digitizer (after %gs)
*** already have an AOP digitizer
*** acquired AOP digitizer
*** already have a pencil digitizer
*** acquired pencil digitizer
*** unexpected digitizer usage pair 0x%X
ignoring digitizer event from non-digitizer sender (%{public}@):%{public}@
ignoring digitizer event for display %{public}@ from unsupported service: (%{public}@):%{public}@
CA didDeleteSlot:%X
cannot replace authSpec from entitled registrant from an unentitled process
cannot alter touch offset for zero userIdentifer
cannot alter routing policy for touches with zero userIdentifer
sg transition (%{public}@, %{public}@) -> (%{public}@, %{public}@) somethingDidChange:%{BOOL}u didNotify:%{BOOL}u
BKDigitizerTouchStreamCreate: invalid taskPort (0x%X) for contextID:0x%X (touchstreamIdentifier:%{public}@)
soft cancel on all displays
soft cancel on display:%{public}@
too many touch identifiers passed to CancelTouchesWithIdentifiers (%d)
cancel touches with identifiers: %{public}@
using %{public}@
send %{public}@
systemAppSetOrientationEventsClient:%{public}@ currentOrientation:%{public}@ orientationLocked:%{BOOL}u
Acc (type %d): %f %f %f
systemAppSetOrientationEventsClient:%{public}@ wantsOrientationEvents:%{BOOL}u
[Manager] Alternate system app with bundleID: %{public}@ exited with context: %{public}@
[Manager] Alternate system app with bundleID: %{public}@ did launch
[Manager] Alternate system app with bundleID: %{public}@ did fail to launch
[Manager] Unblocking the system app
[Manager] Terminating alternate system app with bundleID: %{public}@
[Manager] Open alternate system app with bundleID: %{public}@
[Manager] Blocking the system app
DEMO MODE NOTIFICATION: %d
Ignoring request to set mirroring mode to %lu, current setting %lu is owned by vpid %{public}@
Can't clone the main display to CarPlay %{public}@ 
Can't clone display %{public}@ to itself
Add display clone %{public}@ to %{public}@
We seeem to be headless
Tagging unknown display %{public}@ with available modes
%{public}@ changed on %{public}@ -> %{public}@
Current mode changed on %{public}@ -> %{public}@
preferredScale is %{public}@, using 1.0 instead
Available modes changed on %{public}@; clones:%{public}@
Available modes changed on %{public}@; no clones
Unknown display with available modes
There are no available modes, clearing the tag of %{public}@
Setting up Main Car display
Setting up Car Instruments display
Removing clone %{public}@
Making display 'PurpleTVOut' a car display for the simulator...............
Making display 'PurpleTVOut' a tvOut display for the simulator............
set focus-follows-touch destination:%{public}@ for display:%{public}@
ROT normal
ROT upside down
ROT landscape left
ROT landscape right
remove %{public}@
  remove %{public}@
set %{public}@ to %{public}@
%{public}@ events starting %gs ago: %{public}@
Disable watchdog for job label: %{public}@
Shell exists; will terminate %{public}@
System shell "%{public}@" finished startup after %.2fs.
checkInAndWaitForDataMigration:%{BOOL}u %{public}@
checkInAndWaitForDataMigration: Telling "%{public}@" that it can start immediately
Pending "%{public}@"
Unblocking system apps.
Blocking system apps.
Killing %{public}@.
Handling exit request from %{public}@ with options: %{public}@
Updating primary system app to: %{public}@
Updating primary system the alternate system app: %{public}@
Updating primary system to nil because we are waiting for the alternate system app to launch
Updating primary system app to the old _systemApp: %{public}@
Updating primary system first app: %{public}@
Now monitoring "%{public}@"
No system apps remain. Waiting for one to spawn...
System app disconnected: %{public}@
No more system apps
Alternate system shell connected: %{public}@
System shell connected: %{public}@
watchdog ping: %{public}@
%{public}@ reported not alive, which is fairly unusual
watchdogPing: system app claims it's no longer alive
watchdogPing: system app is now alive
Ending transaction: %{public}@; %d remain
Begin transaction: %{public}@; %d now exist
setCapsLockDelayOverride called with invalid interval %d
keyboardActivationChangeEventDescriptor: unsupported KeyboardEnabledEvent:EventType %d (%{public}@)
remove all destinations for keycode:%lX
add keycode:%lX destination:%{public}@
set keycode:%lX destinations:%{public}@
Sending orientation: %{public}@ event to %{public}@
BKAccelerometerClientUIApp doesn't support accelerometer events
resetting ALS curve
Resetting ALS preferences on upgrade from epoch %ld to %ld
BKAmbientLightSensorEnableAutoBrightness userInteractedWithUI:%{BOOL}u %{public}@
BKAmbientLightSensorDisableAutoBrightness
'%{public}@' is not entitled to observe touches
dropping smart cover event because we don't have any HES sensors
SmartCover event usage:%X engage:%{BOOL}u -> disengaged:%{public}@ all:%{public}@ trig:%{public}@ maybe:%{public}@ -> change:%{public}@
SmartCover StateUnknown:%{BOOL}u
Sending BKSHIDEventSmartCoverAmbiguousOpen
Recovering from unknown smart cover state; Sending BKSHIDEventSmartCoverClosed
SmartCover attach:%{BOOL}u
SmertCover unknown usage: %X down:%{BOOL}u
HES required for open state is now:%x
SmartCover sensor count:%d available:%{public}@ disengaged:%{public}@ trigger:%{public}@; effective state:%{public}@
No SmartCover sensors detected
invalidate: %{public}@
annotations enabled for %{public}@
annotations disabled for %{public}@
array:%p exceeded capacity:%d; moving to heap
Cancel (<%p> - %{public}@) causedByTouchStream: %{public}@
init: %{public}@
detaching:%X
tried to detach a touch (%d) that was already detached
synth and post:%X
TDPS said this context should cancel: %X
Allocate: %X
bad path count:%d
-------> Skipping %d for %X
-------> Should send cancel due to client change to contextID: 0x%x
-------> Should send begin due to client change to contextID: 0x%x
failed to find %X, %X
-------> hand cancel contextID: 0x%X (canceled:%X prevTouching:%X nowTouching:%X)
auth spec contextID down/up match:%X
auth spec context mismatch between down:%X up:%X
ignoring auth spec: slotID changed between down:%X and up:%X
using centroid %{public}@
slotID mismatch between down hit tests: %X vs %X
reached maximum supported embedded context depth at contextID:%X
invalid port (%X) for contextID:%X
policies: %{public}@
examining %x policy response %d
Touch moved from this region: %{public}@ to this region: %{public}@
Touch entered exclusive touch region of this touch region: %{public}@ exclusiveHitTestRegion: %{public}@, so no longer a candidate for hit testing
skipping subevent of type %{public}s
%d < 0
%d >= MAX_PATH_COUNT
Setting hittest regions to: %{public}@ for digitizer: %{public}@
digitizer event ignored because object is within proximity (%{public}@)
cancel received from HID
touch event ignored for idle timer
no events for regular clients
[%d] digitizer:%p contextID:%X clientPort:%X touches:{%{public}@} - %{public}@
Began touching context: %X
remove ctx:%X
Sending no longer possible to latent client: %x
Assuming system gestures are possible (%{public}@)
Assuming system gestures are not possible (lost race with SpringBoard) (%{public}@)
touchstreams: start sending isFirstDown:%{bool}u lifted:%{bool}u
stop tracking:%d
reset:%d
received cancel without child paths from senderID:0x%llX
BKDigitizer: got an event update with generation:%ld but I can't find any pending items waiting for an update: %{public}@
remainingUpdatesMask for path %ld is zero, but we got updates:%lX
cancel clients due to system gesture stealing the touches
System gestures no longer possible (<%p> - %{public}@) causedByTouchStream: %{public}@
BKDigitizerTouchStreamInvalidate: invalid taskPort (0x%X) for contextID:0x%X (touchstreamIdentifier:%{public}@)
[Server] Received request to terminate alternate system app "%{public}@"
[Server] Sent notification that alternate system app "%{public}@" did terminate
[Server] Received request to open alternate system app "%{public}@"
[Server] Sent notification that alternate system app "%{public}@" did exit with reason %{public}@
[Server] Sent notification that alternate system app "%{public}@" did open
[Server] Sent notification that alternate system app "%{public}@" failed to open with error %{public}@
[Server] Received request to unblock primary system app for alternate system app
[Server] Sent notification that system app is no longer blocked for alternate system app
[Server] Received request to block primary system app for alternate system app
[Server] Sent notification that system app is blocked for alternate system app
[Server] Got a connection request on listener %{public}@: connection %{public}@
[Server] Entitlement %{public}@ required to open alternate system app.
[Server] Rejecting BKAlternateSystemAppServer connection because we already have one
[Server] Accepted connection request
Moving restored file into place from %{public}@ to %{public}@
Unable to move file at path %{public}@ to %{public}@: %{public}@
A restore is currently running. Waiting to move restored preferences into place until later
Migration complete (if performed). (Elapsed time: %.2f seconds)
Set BrightnessSystem property:%{public}@ to:%{public}@
effective backlight features:%{public}@ clients:(%{public}@)
Locking backlight to current value: %@ for reason: %{public}@
brightness change:%g reason:%{public}@ options:%@
Setting minimum brightness level: %f with fade duration %f
property change handler arguments seem bogus: %{public}@
Last unambiguous device orientation changed to: %{public}@
Current raw accelerometer device orientation changed to: %{public}@
Effective device orientation changed to: %{public}@
Unlocking device orientation for lock type: %{public}@
Locking device orientation for lock type: %{public}@ to: %{public}@
Locked device orientation for lock type: %{public}@ to: %{public}@
Last system shell with an orientation lock exited -- unlocking system device orientation
Updating device orientation from CoreMotion to: %{public}@
Fetching effective device orientation with temporary manager: %{public}@
WARNING: Attempting synchronous device orientation update while events disabled!
Last effective interface orientation changed to: %{public}@
Current user interface orientation is changing from %{public}@ to %{public}@
Resetting device orientation.
Turning on orientation events.
Turning off orientation events.
setUpdateInterval:%g
missing accel HID service plugin (setUpdateInterval:%g)
setInterruptEventThresholds:%g
missing accel HID service plugin (setInterruptEventThresholds:%g)
Updating device orientation for system app boot
[BKDisplayRenderOverlayPersistenceCoordinator] Persisting overlay: %{public}@
[BKDisplayRenderOverlayPersistenceCoordinator] Unable to create path: %{public}@: %{public}@
[BKDisplayRenderOverlayPersistenceCoordinator] Unable to exclude path from backups: %{public}@: %{public}@
[BKDisplayRenderOverlayPersistenceCoordinator] Unable to save temporary snapshot to disk at %{public}@
[BKDisplayRenderOverlayPersistenceCoordinator] Wrote overlay to file: %{public}@
[BKDisplayRenderOverlayPersistenceCoordinator] Unable to move temporary file (%{public}@) to real location in the shared container (%{public}@): %{public}@
[BKDisplayRenderOverlayPersistenceCoordinator] Loaded overlay from persistence: %{public}@ from location: %{public}@
Current bootUI is an Apple Logo
Current bootUI is the spinny, level %@
Enabling framebuffer changes on display (%d) because we have don't have any overlays that require disabled updates.
Disabling framebuffer changes on display (%d) because we have overlays that require disabled updates.
Conflicting choices for orientation lock, choosing orientation for this overlay: %{public}@
Freezing overlay:%{public}@
Freezing display: %{public}@
Display %d previously frozen; ignoring freeze request for overlay:%{public}@
Requested freezing of an already frozen overlay; ignoring freeze request for overlay:%{public}@
_queue_removeUnderlay: Removing the underlay
addUnderlay: Not showing the boot UI underlay because we were told to hide it
addUnderlay:  Adding the underlay
addUnderlay: Underlay already in place
addOverlay: Not showing the boot UI overlay because we were told to hide it
addOverlay: Adding the overlay: %{public}@
addOverlay: Overlay already in place: %{public}@: 
removeOverlayWithAnimationSettings: Removing the overlay
updateOverlay: Waiting for alternate shells -- (%{public}@) is temporary screen owner
updateOverlay: pid:%d still exists (%{public}@)
updateOverlay: New instance of owner shell (%{public}@)
updateOverlay: Screen owner missing (expected:%{public}@) got:%{public}@
updateOverlay: No explicit screen owner
updateOverlay: pid:%d explicitlyDismissed:%{BOOL}u finishedStartup:%{BOOL}u
updateOverlay: Dismissing overlay: %{public}@ 
updateOverlay: Not dismissing because overlay has been sustained by the system app: %{public}@ 
screen owner is now pid:%d (%{public}@)
_systemAppExited - %{public}@
_systemAppChanged - %{public}@
_systemAppFinishedLaunching - %{public}@
Re-evalutate - firstBootDetectorDidFinishFirstBoot - %{public}@
Toggling underlay.
Sustaining the boot logo: %{public}@
Can't persist a boot overlay that isn't there yet: %{public}@
Dismissing boot logo (pid:%d)
Cannot dismiss nonexistent boot logo (pid:%d)
shell control connection -- %{public}@ pid:%d
'%{public}@' is not appropriately entitled
%.*s%p %{public}@ %{public}@
starting HID server...
Got new policy %{public}@, [self _policy] is now %{public}@
Received policy invalidation on the server side %{public}@
Policy was %{public}@
Policy is %{public}@
not allowing %{public}@ to include policies because it does not have appropriate permissions
TDPS got a connection %{public}@
softlink:r:path:/System/Library/PrivateFrameworks/MobileIcons.framework/MobileIcons
UIKit
UIKitCore
ARGB
