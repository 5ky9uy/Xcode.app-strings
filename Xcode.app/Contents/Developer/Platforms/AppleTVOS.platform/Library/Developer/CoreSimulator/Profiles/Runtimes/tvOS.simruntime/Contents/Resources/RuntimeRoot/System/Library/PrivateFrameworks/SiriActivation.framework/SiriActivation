%s #activation invalidating BSServiceConnection %@
%s #activation old availability: %@, new availability: %@
%s Button Down Event absent. Artifically update timestamp.
%s #activation cancelPreparation
%s #SiriPocketStateManager: Querying Pocket State
%s #SiriPocketStateManager: Failed to query for pocket state: %@
%s #SiriPocketStateManager: Pocket state query successful with state: %@
%s #SiriPocketStateManager: PocketState changed to %@
%s setCanceledByMyriad: %d
%s BTLE lift time delta %f, adjusting by %d
%s BTLE connected to carplay, adjusting by %d
%s BTLE Myriad voice trigger advertising while isVisible
%s BTLE Alert firing voice trigger advertising needed [isTimerFiring = %d, isAlarmFiring = %d]
%s BTLE Myriad voice trigger advertising needed adjusted by lt=%d + cp=%d + rtw=%d = %d
%s BTLE Myriad direct trigger advertising needed
%s BTLE CarPlay delayed for Myriad decision, evt = %ld
%s BTLE timed out waiting for Myriad decision, sem=%ld
%s BTLE CarPlay Myriad decision. Not activating Siri.
%s BTLE CarPlay Myriad decision. Activating Siri.
%s BTLE Myriad ignoring advertisement [isVoiceTrigger %d, isVisible %d]
%s BTLE Myriad voice trigger advertising while is visible [isVoiceTrigger %d]
%s BTLE observerCalled transition=%@
%s BTLE wake gesture noted
%s Alarm did fire: %@
%s Firing alarm did dismiss: %@
%s Alarm snapshot updated %@ -> %@
%s Timer did fire: %@
%s Firing timer did dismiss: %@
%s Timer snapshot updated %@ -> %@
%s %p
%s %p #activation Unable to establish connection to un-entitled remote process: %@
%s Unexpectedly attempted to assign a new connection to the activation server with an existing connection: %{public}@
%s %p #activation registerPresentationIdentifier:%@
%s %p #activation unregisterPresentationIdentifier:%@
%s %p #activation willDismiss
%s %p #activation didDismiss
%s %p #activation Shell indicates Siri is presented
%s %p #activation Shell indicates Siri presentation failed : %@
%s #activation Shell indicates that speech request was started via Siri orb
%s #activation Shell indicates that speech request was cancelled via Siri orb
%s #activation allBulletins
%s #activation bulletinsOnLockScreen
%s #activation bulletinForIdentifier: %@
%s #activation markBulletinWithIdentifier:%@read:%@
%s #activation old requestState: %@, new requestState: %@
%s #activation _updateCanActivateFromDirectActionSource
%s #activation setCanActivateFromDirectActionSource: %@
%s Registration of '%@' when it is already connected. Removing.
%s #activation Cancel preheat on preheated presentation %@ due to new registered presentation %@
%s Unregister request of '%@' when it is not connected.
%s #activation cancelling preheat on %@ because of %@ unregistering.
%s #activation Unregister request of '%@' when it is an active presentation. Dismissing Siri.
%s #activation '%@' was the last active presentation. Setting request state to off.
%s #activation '%@' was not the last active presentation. Dismissing Siri.
%s #activation '%@' was preparing presentation. Setting request state to off.
%s #activation SiriActivationService not resetting requestState or dismissalTimer, self.activePresentations is not empty. Contents of self.activePresentations:%@
%s #activation Registration of '%@' when it is already registered. Removing
%s #activation Registering '%@'
%s #activation Unregister request of '%@' when it is not registered.
%s #activation Unregistering '%@'
%s #activation B188ActivationEvent with Siri state %@. Activating.
%s #activation B188ActivationEvent with Siri state %@. Deactivating.
%s #activation SiriButtonIdentifierLongPressBTHeadset, context %@, but Siri state is %@. Treating as button long press.
%s activationRequestFromButtonIdentifier:%@, with Siri state %@. Activating.
%s activationRequestFromButtonIdentifier:%@, with Siri state %@. Ignoring.
%s deactivationRequestFromButtonIdentifier:%@, with Siri state %@. Deactivating.
%s #activation %@ button prewarm request, current request state: %@
%s #activation Cancelling prewarm from %@
%s #activation Tried to cancel prewarm but we're not warming.
%s #activation Cancelled prewarm for presentation: %@.
%s #activation buttonDownFromButtonIdentifier:%@
%s #activation buttonUpFromButtonIdentifier:%@
%s #activation buttonTapFromButtonIdentifier:%@
%s buttonTapFromButtonIdentifier:%@, with Siri state %@. Ignoring.
%s #activation buttonLongPressFromButtonIdentifier:%@, with Siri state %@, context %@. Activating.
%s #activation buttonLongPressFromButtonIdentifier:%@, context %@, but Siri state is %@. Ignoring.
%s #activation buttonLongPressFromButtonIdentifier:%@, context %@, but Siri state is %@ and we are in CarPlay. Ignoring because we should also be getting a button down/up.
%s #activation buttonLongPressFromButtonIdentifier:%@, context %@, but Siri state is %@. Passing to the Presentation Shell.
%s #activation buttonLongPressFromButtonIdentifier:%@, with Siri state %@, context: %@. Ignoring
%s buttonUpTimestamp: %f, buttonDownTimestamp: %f
%s #activation synthesizing button tap
%s #activation button tap occurred, but Siri is not yet up. Not synthesizing tap event.
%s #activation activationRequestFromDirectActionEvent:%@
%s #activation activationRequestFromContinuityWithContext
%s #activation activationRequestFromVoiceTriggerWithContext
%s #activation activationRequestFromBreadcrumb
%s #activation activationRequestFromSimpleActivation:%@
%s #activation activationRequestFromSpotlightWithContext
%s #activation activationRequestFromVoiceTrigger
%s #activation activationRequestFromTestingWithContext
%s #activation speech request state did change (state = %ld)
%s %s: activationRequest = %@
%s #activation presentation decision : %@
%s #activation _activatePresentation %@
%s #activation _dismissSiri
%s #activation: Ignoring request to dismiss while the current request state is %@
%s #activation _cancelTTS
%s #activation _preheatPresentations
%s #activation preheating %@
%s #activation _attachToTether
%s #activation _cancelActivationPreparationIfNecessary
%s #activation _cancelActivationPreparationForSetup
%s #activation _cancelPendingActivationEventWithReason:%@
%s #activation activating in design mode
%s #activation defrost; request state = %@
%s #activation preheat; request state = %@
%s BTLE Device should abort session
%s BTLE Device continues to interact
%s Starting a new watchdog timer when one already exists.
%s Activation timed out, cleaning up
%s #activation presentation watchdog timer request starting
%s #activation presentation watchdog timer request stopping
%s #activation presentation watchdog timer request stop, but not needed
%s #activation starting a new dismissal watchdog timer when one already exists.
%s Dismissal timed out, cleaning up
%s #activation dismissal watchdog timer request starting
%s #activation dismissal watchdog timer request stopping
%s #activation dismissal watchdog timer request stopping, but not needed
%s #activation callStateChangedToIsActive: %@ isOutgoing: %@
%s #activation BSServiceConnection Invalidated %@
%s #activation BSServiceConnection Interrupted %@
%s #activation BSServiceConnection Activated %@
%s #Activation SASPresentationDecision deciding between: %@
%s ERROR: Multiple connected presentations, but none of them have precedence. Taking the first object, %@
%s #activation BSServiceConnection Interrupted, re-activating %@
%s #activation BSServiceConnection Activated strongSelf=%p connection=%@
%s #activation %@ didRecognizeLongPress
%s Deallocated SiriActivityAssertion (identifier=%@, reason=%@) before it was properly invalidated.
%s Failed getting waketime mib %{public}s
%s Device wants Home Button ZLL, checking wake time
%s Failed looking up waketime %{public}s
%s Wake time was %lf seconds ago
%s Button down time was %lf seconds ago
%s Wake -> Button down delta is %lf
%s Using Wake Time
%s Using Button Down Time
%s button down timestamp sent in format where absolute time conversion is invalid
%s Bulletin with identifier: %@ not found in cache with bulletinIDs: %@
%s %@ added to lock screen feed
%s ACAssistantBBObserver: Trying to modify a bulletin %@ that I don't already have.
%s %@ removed from lock screen feed
%s ACAssistantBBObserver: Asked to remove a bulletin from lock screen %@ that I don't already have.
%s ACAssistantBBObserver: Asked to remove a bulletin %@ that I don't already have.
%s ERROR: attempted to create SiriButtonIdentifier from '%@'.
%s info=%@
%s Received VoiceTrigger activation request, already pending for possible future activation
%s Received VoiceTrigger activation request, but currently blocking VoiceTrigger activations
%s Received VoiceTrigger activation request, no restrictions, activating
%s pending voice trigger activation timer fired, %@
%s Handling remote request dismissal, reason=%@, options=%@, analyticsContext=%@
%s %s count at beginning: %@, hasPendingTrigger: %@
%s count is zero after being decremented, activating from pending
%s Cannot set requestSource to SASRequestSourceKeyboard when keyboard input is disabled
%s %i
%s %s Enabled: %@
%s #activation NO: Siri is not supported. Language code: %@
%s #activation NO: Siri is restricted by profile
%s #activation NO: Siri voice activation is disabled until first unlock.
%s #activation NO: voicetrigger because the device is face down on table
%s #activation NO: There is an existing HoldToTalk trigger.
%s #activation NO: Siri is disabled because an iPad Smart Cover is closed which blocks home button or Hey Siri
%s #activation NO: Siri is disabled because an iPhone Smart Cover is closed which blocks home button or Hey Siri
%s #activation NO: "Press Home/Side For Siri" is disabled in Settings
%s #activation NO: Siri state is %@. Ignoring activationRequest %@.
%s #activation NO: Siri is disabled while passcode locked
%s requestSource:SASRequestSourceBluetoothHeadset isTemporaryDevice:%i
%s #activation NO: Blocking wireless splitter guest that's using B188 / bluetooth device
%s event:%@ isTemporaryDevice:%i
%s #activation NO: Blocking wireless splitter guest that's using B288 %@
%s #activation NO: Siri is disabled because the device is blocked
%s #activation NO: user is in an active call
%s #activation YES: source:%@
%s #activation NO: Siri is restricted by profile.
%s #activation NO: Siri Setup is disabled while passcode locked
%s Bulletin cache is being asked to insert a bulletin with no ID; ignoring the request because bulletin lookup is ID-based and so there's no reason to store a bulletin with no ID (bulletin: %@; bbBulletin: %@)
%s Bulletin cache contains a bulletin with a nil identifier; not including the bulletin as part of the return value of -allBulletins (bulletin: %@; bbBulletin: %@)
%s #activation canActivateChangedTo: %@
%s SASSignalConnectionListener: Unable to assign new incoming connection to a process because the remote was unknown : connection=%@
%s #activation Button identifier %@ with uuid '%@' registered by %@
%s #activation Button identifier %@ with uuid '%@' unregistered by %@
%s #activation Non-button source of type %@ with uuid '%@' registered by %@
%s #activation Non-button source of type %@ with uuid '%@' unregistered by %@
%s #activation activationRequestFromButtonIdentifier:%@ context:%@
%s #activation deactivationRequestFromButtonIdentifier:%@ context:%@
%s #activation _activationRequestFromDirectActionEvent:%@ context:%@
%s #activation activationRequestFromDirectActionEvent payload missing bundleId, using connection bundle id:%@
%s #activation activationRequestFromContinuityWithContext:%@
%s #activation activationRequestFromSimpleActivation
%s #activation activationRequestFromSpotlightWithContext:%@
%s #activation activationRequestFromTestingWithContext:%@
%s prewarmFromButtonIdentifier:%@
%s cancelPrewarmFromButtonIdentifier:%@
%s buttonDownFromButtonIdentifier:%@ timestamp:%@
%s buttonUpFromButtonIdentifier:%@ timestamp:%@
%s buttonTapFromButtonIdentifier:%@
%s buttonLongPressFromButtonIdentifier:%@ context:%@
%s SASPresentationConnectionListener: Unable to assign new incoming connection to a process because the remote was unknown : connection=%@
-[SiriActivationSource invalidate]
-[SiriActivationSource activeChangedTo:]
identifier
T@"NSString",&,N,V_identifier
com.apple.siri.activation.service
-[SASRequestOptionsBuilder _createRequestOptionsForRequest:withDataSource:]
__supportsCarFullScreen
__bundleId
AssistantDirectActionEventKey
systemState
T@"SASSystemState",&,N,V_systemState
presentationIdentifier
Tq,N,V_presentationIdentifier
contextOverride
T@"SiriContextOverride",&,N,V_contextOverride
SiriButtonIdentifierLongPressUndefined
SiriButtonIdentifierLongPressHomeButton
SiriButtonIdentifierLongPressLockButton
SiriButtonIdentifierLongPressBTHeadset
SiriButtonIdentifierLongPressWiredMic
SiriButtonIdentifierLongPressCarPlayAppDockButton
SiriButtonIdentifierLongPressCarPlaySteeringWheelButton
SiriButtonIdentifierLongPressCarPlaySiriButton
SiriButtonIdentifierMockShellButton
SiriButtonIdentifierMockSteeringWheelButton
SiriButtonIdentifierTestingShellButton
<unknown siri button identifier : %li>
SpeechRecognition
v8@?0
-[SASHeater cancelPreparation]
com.apple.siri.false_positive.0ms_to_150ms
com.apple.siri.false_positive.150ms_to_250ms
com.apple.siri.false_positive.250ms_to_350ms
com.apple.siri.false_positive.350ms_and_up
com.apple.siri.false_positive.activation_duration
preparationStartTime
Td,N,G_preparationStartTime,S_setPreparationStartTime:,V_preparationStartTime
predictedRecordRouteIsZLL
TB,N,V_predictedRecordRouteIsZLL
defrostTimer
T@"NSTimer",&,N,V_defrostTimer
preheatTimer
T@"NSTimer",&,N,V_preheatTimer
delegate
T@"<SASHeaterDelegate>",W,N,V_delegate
-[SASSiriPocketStateManager queryForPocketStateWithCompletion:]
-[SASSiriPocketStateManager queryForPocketStateWithCompletion:]_block_invoke
v24@?0q8@"NSError"16
-[SASSiriPocketStateManager _updateForPocketState:]
CMPocketStateTypeOutOfPocket
CMPocketStateTypeInPocket
CMPocketStateTypeFaceDown
CMPocketStateTypeFaceDownOnTable
CMPocketStateTypeMax
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
pocketStateManager
T@"CMPocketStateManager",&,N,G_pocketStateManager,S_setPocketStateManager:,V_pocketStateManager
currentPocketState
Tq,N,G_currentPocketState,S_setCurrentPocketState:,V_currentPocketState
pocketStateShouldPreventVoiceTrigger
TB,N,G_pocketStateShouldPreventVoiceTrigger,S_setPocketStateShouldPreventVoiceTrigger:,V_pocketStateShouldPreventVoiceTrigger
bundleIdentifier
T@"NSString",C,N,V_bundleIdentifier
T@"NSURL",C,N,V_url
punchoutStyle
Tq,N,V_punchoutStyle
com.apple.siri.SASAnalyticsEventQueue
shouldLogAnalyticsEvents
TB,N,V_shouldLogAnalyticsEvents
pendingAnalyticsEventQueue
T@"NSMutableArray",&,N,V_pendingAnalyticsEventQueue
v16@?0@"CMMotionActivity"8
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
-[SASMyriadController setCanceledByMyriad:]
-[SASMyriadController activateForRequest:visible:]
-[SASMyriadController activateForInTaskRequest:isVisible:]
-[SASMyriadController _updateRaiseToWakeTimeForTransition:]
-[SASMyriadController clockAlarmObserver:alarmDidFire:]
-[SASMyriadController clockAlarmObserver:alarmDidDismiss:]
-[SASMyriadController clockAlarmObserver:snapshotDidUpdateFrom:to:]
-[SASMyriadController clockTimerObserver:timerDidFire:]
-[SASMyriadController clockTimerObserver:timerDidDismiss:]
-[SASMyriadController clockTimerObserver:snapshotDidUpdateFrom:to:]
canceledByMyriad
TB,N,V_canceledByMyriad
SiriContextOverrideKey
currentSpokenLanguageCode
unlockedSinceBoot
deviceIsBlocked
deviceIsPasscodeLocked
smartCoverClosed
accessibilityShortcutEnabled
carDNDActive
connectedToCarPlay
connectedToTrustedCarPlay
siriIsEnabled
siriIsRestricted
siriIsSupported
supportsSecureCoding
TB,R
T@"NSString",&,N,V_currentSpokenLanguageCode
T@"NSNumber",&,N,V_unlockedSinceBoot
T@"NSNumber",&,N,V_deviceIsBlocked
T@"NSNumber",&,N,V_deviceIsPasscodeLocked
T@"NSNumber",&,N,V_pocketStateShouldPreventVoiceTrigger
T@"NSNumber",&,N,V_pad
T@"NSNumber",&,N,V_smartCoverClosed
T@"NSNumber",&,N,V_accessibilityShortcutEnabled
T@"NSNumber",&,N,V_carDNDActive
T@"NSNumber",&,N,V_connectedToCarPlay
T@"NSNumber",&,N,V_connectedToTrustedCarPlay
T@"NSNumber",&,N,V_siriIsEnabled
T@"NSNumber",&,N,V_siriIsRestricted
T@"NSNumber",&,N,V_siriIsSupported
v16@?0@"BSServiceConnection"8
v16@?0@"<BSServiceConnectionConfiguring>"8
-[SASPresentationServer init]
-[SASPresentationServer dealloc]
<SASPresentationServer connection:%@, presentationIdentifier:%@>
-[SASPresentationServer _setConnection:]
-[SASPresentationServer registerPresentationIdentifier:]
-[SASPresentationServer unregisterPresentationIdentifier:]
-[SASPresentationServer willDismiss]
-[SASPresentationServer didDismiss]
-[SASPresentationServer didPresentSiri]
-[SASPresentationServer failedToPresentSiriWithError:]
-[SASPresentationServer speechRequestStartedFromSiriOrb]_block_invoke
-[SASPresentationServer speechRequestCancelledFromSiriOrb]_block_invoke
-[SASPresentationServer allBulletins]
-[SASPresentationServer bulletinsOnLockScreen]
-[SASPresentationServer bulletinForIdentifier:]
-[SASPresentationServer handleMarkBulletinWithIdentifier:asRead:]
workspaceServiceInjector
T@"BSServiceConnectionEndpointInjector",&,N,V_workspaceServiceInjector
connection
T@"BSServiceConnection<BSServiceConnectionHost>",&,N,V_connection
invalidated
TB,N,V_invalidated
waitForConnectBlocks
T@"NSMutableArray",&,N,V_waitForConnectBlocks
weak_delegate
T@"<SASPresentationServerDelegate>",W,N,V_weak_delegate
BT_KEY_SIRI_EYESFREE_MODE
com.apple.siri.activation
com.apple.siri.activation.presentation
com.apple.siri.activation.signal
machServiceIdentifier
T@"NSString",&,N,V_machServiceIdentifier
presentationDomain
T@"NSString",&,N,V_presentationDomain
T@"NSString",&,N,V_presentationIdentifier
signalDomain
T@"NSString",&,N,V_signalDomain
signalIdentifier
T@"NSString",&,N,V_signalIdentifier
<SiriVoiceTriggerContext contextOverride:%@, speechRequestOptions:%@, requestInfo:%@, userActivity:%@>
com.apple.siri.EyesFree
com.apple.siri.Siriland
com.apple.siri.CarDisplay
com.apple.siri.UIFree
v12@?0B8
Siri activation/dismissal watchdog queue
-[SiriActivationService setRequestState:]
-[SiriActivationService _updateCanActivateFromDirectActionSource]
-[SiriActivationService setCanActivateFromDirectActionSource:]
-[SiriActivationService registerSiriPresentation:withIdentifier:]
-[SiriActivationService unregisterSiriPresentationIdentifier:]
-[SiriActivationService siriPresentationDismissedWithIdentifier:]
-[SiriActivationService siriPresentationFailureWithIdentifier:error:]
-[SiriActivationService registerActivationSource:withIdentifier:]
-[SiriActivationService unregisterActivationSourceIdentifier:]
-[SiriActivationService _B188ActivationEvent:context:options:]_block_invoke_2
-[SiriActivationService _B188ActivationEvent:context:options:]_block_invoke
v16@?0@"NSTimer"8
-[SiriActivationService activationRequestFromButtonIdentifier:context:]
-[SiriActivationService deactivationRequestFromButtonIdentifier:context:options:]
-[SiriActivationService prewarmFromButtonIdentifier:longPressInterval:]
activationEvent
eventSource
interval
-[SiriActivationService cancelPrewarmFromButtonIdentifier:]
-[SiriActivationService buttonDownFromButtonIdentifier:timestamp:]
v16@?0@"NSString"8
-[SiriActivationService buttonUpFromButtonIdentifier:timestamp:]
-[SiriActivationService buttonTapFromButtonIdentifier:]
-[SiriActivationService buttonLongPressFromButtonIdentifier:context:]
-[SiriActivationService _handleTapSynthesisIfNeededForButtonIdentifier:buttonUpTimestamp:]
-[SiriActivationService activationRequestFromDirectActionEvent:context:completion:]
-[SiriActivationService activationRequestFromContinuityWithContext:]
-[SiriActivationService activationRequestFromVoiceTriggerWithContext:]
-[SiriActivationService activationRequestFromBreadcrumb]
-[SiriActivationService activationRequestFromSimpleActivation:]
-[SiriActivationService activationRequestFromSpotlightWithContext:]
-[SiriActivationService activationRequestFromVoiceTrigger]
-[SiriActivationService activationRequestFromTestingWithContext:]
-[SiriActivationService speechRequestStateDidChange:]
isDeviceUnlocked
clockTime
-[SiriActivationService handleActivationRequest:systemState:]
-[SiriActivationService _activatePresentation:requestOptions:analyticsContext:]
-[SiriActivationService _dismissSiri:]
-[SiriActivationService _cancelTTS]
-[SiriActivationService _preheatPresentation]
-[SiriActivationService _attachToTether]
-[SiriActivationService _cancelActivationPreparationIfNecessary]
-[SiriActivationService _cancelActivationPreparationForSetup]
-[SiriActivationService _cancelPendingActivationEventWithReason:]
-[SiriActivationService _handleDesignModeRequest]
com.apple.siri.internal.activation
-[SiriActivationService heaterSuggestsDefrosting:]
-[SiriActivationService heaterSuggestsPreheating:]
-[SiriActivationService shouldAbortAnotherDeviceBetter:]
-[SiriActivationService shouldContinue:]
-[SiriActivationService _watchdogQueue_startActivationWatchdogTimerForPresentationServer:]
-[SiriActivationService _watchdogQueue_startActivationWatchdogTimerForPresentationServer:]_block_invoke
-[SiriActivationService _watchdogQueue_stopActivationWatchdogTimerIfNeeded]
-[SiriActivationService _watchdogQueue_startDismissalWatchdogTimer]
-[SiriActivationService _watchdogQueue_startDismissalWatchdogTimer]_block_invoke
-[SiriActivationService _watchdogQueue_stopDismissalWatchdogTimerIfNeeded]
-[SiriActivationService callStateChangedToIsActive:isOutgoing:]
afPreferences
T@"AFPreferences",&,N,V_afPreferences
lockStateMonitor
T@"SASLockStateMonitor",&,N,V_lockStateMonitor
xcTestingActive
TB,N,V_xcTestingActive
presentations
T@"NSMutableDictionary",&,N,V_presentations
activePresentations
T@"NSMutableSet",&,N,V_activePresentations
preparingPresentations
T@"NSMutableDictionary",&,N,V_preparingPresentations
requestState
Tq,N,V_requestState
sources
T@"NSMutableDictionary",&,N,V_sources
heater
T@"SASHeater",&,N,V_heater
siriTether
T@"AFSiriTether",&,N,V_siriTether
siriTetherIsAttached
TB,N,V_siriTetherIsAttached
preparationTimestamp
Td,N,V_preparationTimestamp
activationTimestamp
Td,N,V_activationTimestamp
voiceTriggerNotifyTokenIsValid
TB,N,V_voiceTriggerNotifyTokenIsValid
bulletinManager
T@"SASBulletinManager",&,N,V_bulletinManager
remoteRequestManager
T@"SASRemoteRequestManager",&,N,V_remoteRequestManager
testingInputController
T@"SASTestingInputController",&,N,V_testingInputController
activationTimer
T@"AFWatchdogTimer",&,N,V_activationTimer
dismissalTimer
T@"AFWatchdogTimer",&,N,V_dismissalTimer
avExternalButtonEvents
T@"NSMutableDictionary",&,N,V_avExternalButtonEvents
buttonDownHasOccurredSinceActivation
TB,N,V_buttonDownHasOccurredSinceActivation
canActivateFromDirectActionSource
TB,N,V_canActivateFromDirectActionSource
pocketStateFetchingInProgressForHeadsetActivation
TB,N,G_pocketStateFetchingInProgressForHeadsetActivation,S_setPocketStateFetchingInProgressForHeadsetActivation:,V_pocketStateFetchingInProgressForHeadsetActivation
SASRequestStateOff
SASRequestStateWarming
SASRequestStateStarting
SASRequestStateActive
SASRequestStateStopping
-[SiriSpotlightSource configureConnection]_block_invoke_2
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
-[SiriSpotlightSource configureConnection]_block_invoke
<SiriDirectActionContext contextOverride:%@, payload:%@, bulletin:%@, notification:%@, directActionEvent:%@, bundleId:%@>
com.apple.MobileSMS
SendMessageIntent
SearchForMessagesIntent
SBSAssistantActivationContextBundleID
payload
bulletin
notification
T@"NSDictionary",R,N,V_payload
T@"BBBulletin",R,N,V_bulletin
T@"UNNotification",R,N,V_notification
deactivationOptions:%lu, animated:%@, request cancellation reason %ld
deactivationOptions
animated
requestCancellationReason
TQ,R,N,V_deactivationOptions
TB,R,N,V_animated
reason
Tq,R,N,V_reason
+[SASPresentationDecision activationPresentationForPresentationIdentifiers:systemState:]
context
T@"SiriContext",&,D,N
-[SiriSimpleActivationSource configureConnection]_block_invoke_2
-[SiriSimpleActivationSource configureConnection]_block_invoke
-[SiriTestingSource configureConnection]_block_invoke_2
-[SiriTestingSource configureConnection]_block_invoke
testName
SiriTestingContextRecognitionStringKey
SiriTestingContextAudioInputKey
<SiriTestingContext contextOverride:%@, testingContext:%@>
testingContext
T@"NSDictionary",R,N,V_testingContext
-[SiriLongPressButtonSource configureConnection]_block_invoke_2
-[SiriLongPressButtonSource configureConnection]_block_invoke
prepare
speechInteraction
v24@?0@"<SiriAssertion>"8d16
-[SiriLongPressButtonSource didRecognizeLongPress]
longPressInterval
Td,N,V_longPressInterval
buttonIdentifier
Tq,N,V_buttonIdentifier
lock_activityAssertions
T@"NSMutableArray",&,N,V_lock_activityAssertions
T@"SiriLongPressButtonContext",&,N,V_context
SiriPresentationInvalidIdentifier
SiriPresentationSpringBoardMainScreenIdentifier
SiriPresentationCarPlayHeadUnitIdentifier
SiriPresentationMockIdentifier
<unknown siri presentation identifier : %li>
SiriPresentationActivationCancelReasonShellEvent
SiriPresentationActivationCancelReasonSiriNotEnabled
SiriPresentationActivationCancelReasonLongPressDisabledInAccessibility
SiriPresentationActivationCancelReasonPreheatedWithoutActivation
SiriPresentationActivationCancelReasonPreviousPendingActivation
SiriPresentationActivationCancelReasonIncomingPhoneCall
-[SiriActivityAssertion dealloc]
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_reason
reference
T@"NSString",R,C,N,V_reference
timestamp
Td,R,N,V_timestamp
valid
TB,R,D,N,GisValid
SiriActivationEventTypeButton
SiriActivationEventTypeVoiceTrigger
SiriActivationEventTypeDirectAction
SiriActivationEventTypeContinuity
SiriActivationEventTypeBreadcrumb
SiriActivationEventTypeSimpleActivation
SiriActivationEventTypeSpotlight
SiriActivationEventTypeTesting
AFActivationEventUnspecified
AFActivationEventRemoteRequest
AFActivationEventDirectAction
AFActivationEventContinuity
AFActivationEventCorrectedText
AFActivationEventKeyboard
AFActivationEventSpokenNotification
AFActivationEventExternalRequest
AFActivationEventTestAutomation
AFDirectActionEventUnknown
AFDirectActionEventMessagesAmbiguous
AFDirectActionEventMessagesCompose
AFDirectActionEventMessagesComposeNewThread
AFDirectActionEventMessagesRead
AFDirectActionEventMessagesReply
AFDirectActionEventMapsSearch
AFDirectActionEventMusicSearch
AFDirectActionEventGuideUpdate
AFDirectActionEventCalendar
AFDirectActionEventWeather
AFDirectActionEventNews
AFDirectActionEventPhoneAmbiguous
AFDirectActionEventPhoneCall
AFDirectActionEventPhoneVoicemail
AFDirectActionEventAppLaunch
event = %@; source = %@; context: %@
kern.waketime
-[SASActivationRequest computedActivationTime]
-[SASActivationRequest buttonDownTimestamp]
requestSource
Tq,N,V_requestSource
activationType
Tq,N,V_activationType
Tq,N,V_activationEvent
T@"SiriContext",&,N,V_context
activationTime
Td,N,V_activationTime
buttonDownTime
Td,N,V_buttonDownTime
com.apple.cmas
-[SASBulletinManager bulletinForIdentifier:]
-[SASBulletinManager addBulletinCompletionWithBulletin:forFeed:]
-[SASBulletinManager observer:modifyBulletin:]
-[SASBulletinManager observer:removeBulletin:forFeed:]
-[SASBulletinManager observer:purgeReferencesToBulletinID:]
T@"<SASBulletinManagerDelegate>",W,N,V_delegate
SASButtonIdentifierTransport:%@
-[SASButtonIdentifierTransport siriButtonIdentifier]
SASDirectActionEventTransport:%@
event
T@"NSNumber",&,N,V_event
SASTimeIntervalTransport:%@
transport
T@"NSNumber",&,N,V_transport
SiriPresentationIdentifierTransport:%@
T@"NSNumber",&,N,V_identifier
SiriPresentationActivationCancelReason:%@
SiriUILockStateTransport:%@
-[SASRemoteRequestManager _handleRemotePrewarmWithInfo:]
-[SASRemoteRequestManager _handleNewRemoteRequestWithInfo:]
-[SASRemoteRequestManager _handleRequestWatcherVoiceTriggerRequestWithInfo:]
-[SASRemoteRequestManager _processPendingVoiceTriggerActivationsWithInfo:delay:]_block_invoke
with %@ pending activations
no pending activations
-[SASRemoteRequestManager _handleRemoteRequestDismissalWithReason:options:analyticsContext:]
inSpokenNotification
-[SASRemoteRequestManager _handlePendingVoiceTriggerActivationsWithInfo:]
-[SASRemoteRequestManager _handlePendingVoiceTriggerActivationsWithInfo:]_block_invoke
remoteRequestWatcher
T@"AFRemoteRequestWatcher",&,N,V_remoteRequestWatcher
currentVoiceTriggerRestriction
TQ,N,V_currentVoiceTriggerRestriction
pendingVoiceTriggerRestrictionCount
TQ,N,V_pendingVoiceTriggerRestrictionCount
hasPendingVoiceTriggerActivation
TB,N,V_hasPendingVoiceTriggerActivation
T@"CMPocketStateManager",&,N,V_pocketStateManager
Tq,N,V_currentPocketState
SASRequestOptionsSourceCodingKey
SASRequestOptionsActivationDeviceIdentifierCodingKey
SASRequestOptionsBulletinCodingKey
SASRequestOptionsAppBundleIdentifierCodingKey
SASRequestOptionsDirectActionEventCodingKey
SASRequestOptionsMessagesDirectActionDictionaryCodingKey
SASRequestOptionsCheckForGuideUpdateContextCodingKey
SASRequestOptionsServerCommandAceIdentifierCodingKey
SASRequestOptionsPronunciationRequestCodingKey
SASRequestOptionsPronunciationContextCodingKey
SASRequestOptionsTextCodingKey
SASRequestOptionsSpeechFileURLCodingKey
SASRequestOptionsTimestampCodingKey
SASRequestOptionsExpectedTimestampCodingKey
SASRequestOptionsButtonDownTimestampCodingKey
SASRequestOptionsIsInitialBringUpKey
SASRequestOptionsUseAutomaticEndpointingKey
SASRequestOptionsUseStreamingDictationKey
SASRequestOptionsAcousticIdEnabledKey
SASRequestOptionsReleaseAudioSessionOnRecordingCompletionKey
SASRequestHomeButtonUpFromBeepKey
SASRequestContinuityDataKey
SASRequestRequestInfoKey
SASRequestSpeechRequestOptionsKey
SASRequestPredictedRecordRouteIsZLL
SASRequestOptionsUIPresentationIdentifierCodingKey
SASRequestOptionsContextAppInfosForSiriViewControllerKey
SASRequestOptionsTestingContextKey
SASRequestOptionsIsConnectedToCarPlayCodingKey
SASRequestOptionsIsForCarDNDCodingKey
SASRequestOptionsCarDNDStatusCodingKey
SASRequestOptionsCurrentLockStateCodingKey
SASRequestOptionsCurrentCarPlaySupportedOEMAppIdListKey
-[SASRequestOptions setRequestSource:]
<%@ %p; requestSource=%ld, activationDeviceIdentifier=%@, bulletin=%@, appBundleIdentifier=%@, checkForGuideUpdateContext:%@, directActionEvent=%ld serverCommandId=%@, isPronunciationRequest=%@, pronunciationContext=%@, text=%@, speechFileURL=%@, expectedTimestamp=%f, timestamp=%f, buttonDownTimestamp:%f, isInitialBringUp=%@, autoendpoint=%@ streamdict=%@ acousticId=%@ releaseAudioSessionORC=%@ predictedZLL:%@ uiPresentationIdentifier:%@ contextAppInfosForSVC:%@, testingContext:%@, is(speech:%@, stark:%@, CPconnected:%@, dnd:%@), carPlayStatus:%ld, homeButtonUpFromBeep:%@, continuityInfo:%@, requestInfo:%@, speechRequestOptions:%@, currentLockState:%ld, messagesDirectActionDictionary:%@, carPlayOEMList:%@
Tq,N
activationDeviceIdentifier
T@"NSString",C,N,V_activationDeviceIdentifier
T@"AFBulletin",&,N,V_bulletin
appBundleIdentifier
T@"NSString",C,N,V_appBundleIdentifier
messagesDirectActionContext
T@"NSDictionary",C,N,V_messagesDirectActionContext
checkForGuideUpdateContext
T@"SAGuidanceCheckForGuideUpdateContext",C,N,V_checkForGuideUpdateContext
directActionEvent
Tq,N,V_directActionEvent
serverCommandId
T@"NSString",C,N,V_serverCommandId
pronunciationRequest
TB,N,GisPronunciationRequest,V_pronunciationRequest
pronunciationContext
T@"SASPronunciationContext",&,N,V_pronunciationContext
text
T@"NSString",C,N,V_text
speechFileURL
T@"NSURL",C,N,V_speechFileURL
expectedTimestamp
Td,N,V_expectedTimestamp
Td,N,V_timestamp
buttonDownTimestamp
Td,N,V_buttonDownTimestamp
forStark
TB,R,N,GisForStark
currentCarPlaySupportedOEMAppIdList
T@"NSArray",&,N,V_currentCarPlaySupportedOEMAppIdList
messagesDirectAction
TB,R,N,GisMessagesDirectAction
isForCarDND
TB,N,V_isForCarDND
isConnectedToCarPlay
TB,N,V_isConnectedToCarPlay
carDNDStatus
TQ,N,V_carDNDStatus
forSpeechRequest
TB,R,N,GisForSpeechRequest
initialBringUp
TB,N,GisInitialBringUp,V_initialBringUp
useAutomaticEndpointing
TB,N,V_useAutomaticEndpointing
useStreamingDictation
TB,N,V_useStreamingDictation
homeButtonUpFromBeep
T@"NSNumber",&,N,V_homeButtonUpFromBeep
continuityInfo
T@"NSDictionary",C,N,V_continuityInfo
requestInfo
T@"AFRequestInfo",&,N,V_requestInfo
speechRequestOptions
T@"AFSpeechRequestOptions",&,N,V_speechRequestOptions
acousticIdEnabled
TB,N,V_acousticIdEnabled
releaseAudioSessionOnRecordingCompletion
TB,N,V_releaseAudioSessionOnRecordingCompletion
uiPresentationIdentifier
T@"NSString",&,N,V_uiPresentationIdentifier
contextAppInfosForSiriViewController
T@"NSArray",&,N,V_contextAppInfosForSiriViewController
T@"NSDictionary",&,N,V_testingContext
currentLockState
TQ,N,V_currentLockState
SASRequestSourceNotSpecified
SASRequestSourceHomeButton
SASRequestSourceLockButton
SASRequestSourceVirtualButton
SASRequestSourceWiredMicrophone
SASRequestSourceBluetoothHeadset
SASRequestSourceMotionUpGesture
SASRequestSourceMotionDownGesture
SASRequestSourceVoice
SASRequestSourceServerCommand
SASRequestSourceStark
SASRequestSourceStarkPhoneHome
SASRequestSourceStarkVoiceTrigger
SASRequestSourceStarkNotification
SASRequestSourceStarkAppProxy
SASRequestSourceTVRemote
SASRequestSourceTesting
SASRequestSourceStarkSiriButton
SASRequestSourceAccessory
SASRequestSourceContinuity
SASRequestSourceSiriSetup
SASRequestSourceBreadcrumb
SASRequestSourceGuideUpdate
SASRequestSourceKeyboard
SASRequestSourceSpotlightQuerySuggestion
SASRequestSourceSpotlightAskSiriButton
SASRequestSourceTriggerless
SASRequestSourceAssistiveTouch
SASRequestSourceVoiceCommandButton
SASRequestSourceControlCenterRemoteUI
SASRequestSourceRemoteApp
SASRequestSourceNonAppleRemote
-[SiriBreadcrumbSource configureConnection]_block_invoke_2
-[SiriBreadcrumbSource configureConnection]_block_invoke
-[SiriContinuitySource configureConnection]_block_invoke_2
-[SiriContinuitySource configureConnection]_block_invoke
lockState
TQ,N,V_lockState
unlockedByTouchID
TB,N,V_unlockedByTouchID
assistantIsEnabled
T@"NSNumber",&,N,V_assistantIsEnabled
T@"<SASLockStateMonitorDelegate>",W,N,V_delegate
com.apple.siri.ActivationService.SystemState
com.apple.bluetooth.WirelessSplitterOn
com.apple.bluetooth.GuestConnected
-[SASSystemState isWirelessSplitterOn]
-[SASSystemState isGuestConnected]
-[SASSystemState _updateAccessibilityState]
carPlayConnectionState
Ti,N,V_carPlayConnectionState
TB,N,V_accessibilityShortcutEnabled
applicationStateHelper
T@"SUICApplicationStateHelper",&,N,V_applicationStateHelper
enabled
TB,N,V_enabled
listeners
T@"NSHashTable",&,N,V_listeners
observerWirelessSplitter
T@"AFNotifyObserver",&,N,V_observerWirelessSplitter
observerBluetoothGuestConnected
T@"AFNotifyObserver",&,N,V_observerBluetoothGuestConnected
request
T@"SASActivationRequest",&,N,V_request
buttonTriggerStateActive
TB,N,V_buttonTriggerStateActive
T@"SASSiriPocketStateManager",&,N,V_pocketStateManager
preferences
T@"AFPreferences",&,N,V_preferences
analyticsContext
T@"NSDictionary",&,N,V_analyticsContext
+[SASActivationDecision canActivateForCondition:]
Hey Siri
Double-Tap
+[SASActivationDecision _shouldSiriActivateForSiriSetupWithSystemState:]
<SiriContext contextOverride:%@>
<SiriLongPressButtonContext contextOverride:%@, utteranceText:%@, source:%@>
utteranceText
source
T@"NSString",C,N,V_utteranceText
Tq,N,V_source
UnknownSiriSpotlightContextSource
SiriSpotlightContextSourceQuerySuggestion
SiriSpotlightContextSourceAskSiriButton
SBTestingConfigureNextAssistantRecognitionStrings
SBTestingConfigureNextVoiceRecognitionAudioInputPathsNotification
preloadedTestingInput
T@"SiriTestingContext",R,N,V_preloadedTestingInput
previousNode
T@"SASBulletinCacheNode",&,N,V_previousNode
nextNode
T@"SASBulletinCacheNode",&,N,V_nextNode
-[SASBulletinCache insertBulletin:fromFeed:]
-[SASBulletinCache allBulletins]
v24@?0@"NSNumber"8@"NSError"16
-[SiriDirectActionSource configureConnection]_block_invoke_2
-[SiriDirectActionSource configureConnection]_block_invoke
-[SiriDirectActionSource canActivateChangedTo:]
T@"<SiriDirectActionSourceDelegate>",W,N,V_delegate
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
-[SASSignalConnectionListener listener:didReceiveConnection:withContext:]
listener
T@"BSServiceConnectionListener",&,N,V_listener
<SiriLongPressButtonContext contextOverride:%@ buttonDownTimestamp:%@>
wakeScreen%@, hideOtherWindowsDuringAppearance:%@
wakeScreen
hideOtherWindowsDuringAppearance
TB,N,V_wakeScreen
TB,N,V_hideOtherWindowsDuringAppearance
T@"SiriBluetoothContext",&,N,V_context
type
recordedSpeechURL
Text
RecordedSpeechURL
Unspecified
<%@ %p; %@ - '%@'>
Tq,N,V_type
T@"NSURL",C,N,V_recordedSpeechURL
-[SASSignalServer _setConnection:]
-[SASSignalServer registerButtonIdentifier:withUUID:]
-[SASSignalServer unregisterButtonIdentifier:withUUID:]
-[SASSignalServer registerNonButtonSourceWithType:withUUID:]
-[SASSignalServer unregisterNonButtonSourceWithType:withUUID:]
-[SASSignalServer activationRequestFromButtonIdentifier:context:]
-[SASSignalServer deactivationRequestFromButtonIdentifier:context:options:]
-[SASSignalServer _activationRequestFromDirectActionEvent:context:completion:]
-[SASSignalServer activationRequestFromContinuityWithContext:]
-[SASSignalServer activationRequestFromBreadcrumb]
-[SASSignalServer activationRequestFromSimpleActivation:]
-[SASSignalServer activationRequestFromSpotlightWithContext:]
-[SASSignalServer activationRequestFromTestingWithContext:]
-[SASSignalServer prewarmFromButtonIdentifier:]
-[SASSignalServer prewarmFromButtonIdentifier:longPressInterval:]
-[SASSignalServer cancelPrewarmFromButtonIdentifier:]
-[SASSignalServer buttonDownFromButtonIdentifier:timestamp:]
-[SASSignalServer buttonUpFromButtonIdentifier:timestamp:]
-[SASSignalServer buttonTapFromButtonIdentifier:]
-[SASSignalServer buttonLongPressFromButtonIdentifier:context:]
T@"<SASSignalServerDelegate>",W,N,V_weak_delegate
-[SASPresentationConnectionListener listener:didReceiveConnection:withContext:]
<SiriContinuityContext contextOverride:%@ isTemporaryDevice:%@ speechRequestOptions:%@ requestInfo:%@ userActivity:%@>
isTemporaryDevice
userActivity
T@"AFSpeechRequestOptions",R,N
T@"AFRequestInfo",R,N,V_requestInfo
T@"NSDictionary",R,N,V_userActivity
<SiriBluetoothContext contextOverride:%@ isTemporaryDevice:%@ isEyesFree:%@ address:%@>
isEyesFree
address
T@"NSString",R,N,V_address
333333
333333
?ffffff
?333333
@(#)PROGRAM:SiriActivation  PROJECT:AssistantUI-1
SiriActivationSource
SASRequestOptionsBuilder
SASOverriddenSystemState
SiriButtonIdentifier
SASHeater
SASSiriPocketStateManager
CMPocketStateDelegate
NSObject
SiriPunchoutRequest
NSCopying
SASAnalytics
SASMyriadController
AFClockAlarmListening
AFClockTimerListening
SiriContextOverride
NSSecureCoding
NSCoding
SASPresentationClientInterface
SASPresentationServerInterface
SASPresentationServer
SiriClientAdditions
SASBoardServicesConfiguration
SiriVoiceTriggerContext
SiriActivationService
SASRequestOptionsBuilderDataSource
SASRequestOptionsBuilderDataSourceForTesting
SASHeaterDelegate
AFMyriadDelegate
SASLockStateMonitorDelegate
SASBulletinManagerDelegate
SASStateChangeListener
SiriSpotlightSource
SiriDirectActionContext
SiriDismissalOptions
SASPresentationDecision
Testing
SiriSimpleActivationSource
SiriTestingSource
SiriTestingContext
SiriLongPressButtonSource
SiriButtonSource
SiriActivationSourceContext
SiriPresentationIdentifier
SiriPresentationActivationCancelReason
SiriActivityAssertion
SiriAssertion
SiriActivationEventType
SASActivationRequest
SASButtonActvationRequest
SASBulletinManager
BBObserverDelegate
SASButtonIdentifierTransport
SASDirectActionEventTransport
SASTimeIntervalTransport
SiriPresentationIdentifierTransport
SiriPresentationActivationCancelReasonTransport
SiriUILockStateTransport
SASRemoteRequestManager
SASRequestOptions
SiriBreadcrumbSource
SiriContinuitySource
SASLockStateMonitor
SASSystemState
SASActivationCondition
SASActivationDecision
SiriContext
SiriSpotlightContext
SASTestingInputController
SASBulletinCacheNode
SASBulletinCache
SiriDirectActionSource
SASSignalConnectionListener
BSServiceConnectionListenerDelegate
SiriLongPressButtonContext
SiriPresentationOptions
SiriBluetoothDeviceSource
SASTestingInput
SASSignalClientInterface
SASSignalServerInterface
SASSignalServer
SASPresentationConnectionListener
SiriContinuityContext
SiriBluetoothContext
init
UUID
UUIDString
invalidate
dealloc
sharedSystemState
siriIsSupported
siriIsEnabled
numberWithBool:
boolValue
isEnabled
isActive
activeChangedTo:
.cxx_destruct
identifier
setIdentifier:
_connection
_lock
_active
_knowsIfActive
_identifier
isMainThread
processInfo
systemUptime
_siriIsEnabled
setPresentationIdentifier:
_createRequestOptionsForRequest:withDataSource:
presentationIdentifier
requestOptionsBuilder:uiPresentationIdentifierWithActivation:activationPresentation:
requestSource
initWithRequestSource:uiPresentationIdentifier:
requestOptionsBuilder:isPredictedRecordRouteIsZLLWithActiviation:
setPredictedRecordRouteIsZLL:
isButtonRequest
buttonDownTimestamp
systemState
accessibilityShortcutEnabled
isForStark
setButtonDownTimestamp:
computedActivationTime
setTimestamp:
requestOptionsBuilder:isRequestInitialWithActiviation:
setInitialBringUp:
requestOptionsBuilder:shouldRequestUseAutomaticEndpointingWithActiviation:
setUseAutomaticEndpointing:
requestOptionsBuilder:isAcousticIdAllowedWithActiviation:
setAcousticIdEnabled:
isConnectedToCarPlay
setIsConnectedToCarPlay:
carDNDActive
setIsForCarDND:
isDirectActionRequest
context
directActionEvent
setDirectActionEvent:
payload
mutableCopy
allKeys
containsObject:
removeObjectForKey:
objectForKey:
setAppBundleIdentifier:
setMessagesDirectActionContext:
bulletin
setBulletin:
bundleId
notification
setNotification:fromSourceApp:
appBundleIdentifier
isBluetoothRequest
address
setActivationDeviceIdentifier:
isContinuityRequest
requestInfo
setRequestInfo:
userActivity
setContinuityInfo:
isSpotlightRequest
utteranceText
setText:
isTestingRequest
requestOptionsBuilder:optionsForOverriding:withActiviation:
foregroundAppInfosForPresentationIdentifier:
setContextAppInfosForSiriViewController:
requestOptionsBuilder:currentLockStateForActivation:
setCurrentLockState:
siriIsRestricted
buildOptionsWithRequest:presentationIdentifier:dataSource:
setSystemState:
_systemState
_presentationIdentifier
setContextOverride:
lockStateMonitor
setLockStateMonitor:
contextOverride
currentSpokenLanguageCodeForSystemState:
hasUnlockedSinceBootForSystemState:
deviceIsBlockedForSystemState:
deviceIsPasscodeLockedForSystemState:
pocketStateShouldPreventVoiceTriggerForSystemState:
isPadForSystemState:
smartCoverClosedForSystemState:
accessibilityShortcutEnabledForSystemState:
carDNDActiveForSystemState:
isConnectedToCarPlayForSystemState:
isConnectedToTrustedCarPlayForSystemState:
siriIsEnabledForSystemState:
siriIsRestrictedForSystemState:
siriIsSupportedForSystemState:
initWithSystemState:contextOverride:
currentSpokenLanguageCode
hasUnlockedSinceBoot
deviceIsBlocked
deviceIsPasscodeLocked
pocketStateShouldPreventVoiceTrigger
isPad
smartCoverClosed
isConnectedToTrustedCarPlay
_contextOverride
stringWithFormat:
stringWithSiriButtonIdentifier:
_setPreparationStartTime:
_cancelPreparation
_suggestPreheat
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setPreheatTimer:
_suggestDefrost
setDefrostTimer:
_preparationStartTime
preheatTimer
defrostTimer
delegate
heaterSuggestsDefrosting:
heaterSuggestsPreheating:
_updatePredictedRouteIsZLL
sharedAVSystemController
pickableRoutesForCategory:andMode:
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
isEqualToString:
prepareForUseAfterTimeInterval:
cancelPreparation
setDelegate:
predictedRecordRouteIsZLL
_predictedRecordRouteIsZLL
_delegate
_defrostTimer
_preheatTimer
_init
_setPocketStateManager:
_pocketStateManager
_setPocketStateShouldPreventVoiceTrigger:
_updateForPocketState:
_stringForPocketState:
queryStateOntoQueue:andMonitorFor:withTimeout:andHandler:
_currentPocketState
_pocketStateShouldPreventVoiceTrigger
_setCurrentPocketState:
sharedManager
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
pocketStateManager:didUpdateState:
queryForPocketStateWithCompletion:
currentPocketState
bundleIdentifier
setBundleIdentifier:
setUrl:
punchoutStyle
setPunchoutStyle:
copyWithZone:
_bundleIdentifier
_url
_punchoutStyle
service
xcTestingActive
_enqueueAnalyticsEvent:
shouldLogAnalyticsEvents
flushPendingAnalyticsEventQueue
sharedAnalytics
logEvent:
pendingAnalyticsEventQueue
initWithCapacity:
setPendingAnalyticsEventQueue:
count
removeObjectsInRange:
addObject:
copy
logEvents:
analytics
enqueueCurrentAnalyticsEventWithType:context:
setShouldLogAnalyticsEvents:
_analyticsEventQueue
_shouldLogAnalyticsEvents
_pendingAnalyticsEventQueue
isActivityAvailable
mainQueue
_handleCMMotionActivity:
startActivityUpdatesToQueue:withHandler:
configurationForDefaultMainDisplayMonitor
_updateRaiseToWakeTimeForTransition:
setTransitionHandler:
monitorWithConfiguration:
addListener:
removeListener:
currentCoordinator
isVoiceRequest
speechRequestOptions
isVoiceTrigger
myriadContext
setCanceledByMyriad:
startAdvertisingFromInTaskTriggerWithContext:
startAdvertisingFromInTaskVoiceTrigger
startAdvertisingFromAlertFiringVoiceTrigger
startAdvertisingFromVoiceTriggerAdjusted:withContext:
startAdvertisingFromVoiceTriggerAdjusted:
startAdvertisingFromDirectTriggerWithContext:
startAdvertisingFromDirectTrigger
activationEvent
transitionReasons
stationary
currentController
clockAlarmObserver:alarmDidFire:
clockAlarmObserver:alarmDidDismiss:
clockAlarmObserver:snapshotDidUpdateFrom:to:
clockTimerObserver:timerDidFire:
clockTimerObserver:timerDidDismiss:
clockTimerObserver:snapshotDidUpdateFrom:to:
activateForRequest:visible:
activateForInTaskRequest:isVisible:
canceledByMyriad
_myriadFinishedSemaphore
_activityManager
_isLifted
_liftEndTime
_isLocked
_lockStateMonitor
_displayMonitor
_raiseToWakeTime
_mobileClockObserver
_canceledByMyriad
setCurrentSpokenLanguageCode:
setUnlockedSinceBoot:
setDeviceIsBlocked:
setDeviceIsPasscodeLocked:
setPocketStateShouldPreventVoiceTrigger:
setPad:
setSmartCoverClosed:
setAccessibilityShortcutEnabled:
setCarDNDActive:
setConnectedToTrustedCarPlay:
setConnectedToCarPlay:
setSiriIsEnabled:
setSiriIsRestricted:
setSiriIsSupported:
unlockedSinceBoot
connectedToCarPlay
connectedToTrustedCarPlay
decodeObjectOfClass:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
overrideCurrentSpokenLanguageCode:
overrideHasUnlockedSinceBoot:
overrideDeviceIsBlocked:
overrideDeviceIsPasscodeLocked:
overridePocketStateShouldPreventVoiceTrigger:
overrideIsPad:
overrideSmartCoverClosed:
overrideAccessibilityShortcutEnabled:
overrideCarDNDActive:
overrideConnectedToTrustedCarPlay:
overrideConnectedToCarPlay:
overrideSiriIsEnabled:
overrideSiriIsRestricted:
overrideSiriIsSupported:
_currentSpokenLanguageCode
_unlockedSinceBoot
_deviceIsBlocked
_deviceIsPasscodeLocked
_pad
_smartCoverClosed
_accessibilityShortcutEnabled
_carDNDActive
_connectedToCarPlay
_connectedToTrustedCarPlay
_siriIsRestricted
_siriIsSupported
initWithKeyOptions:valueOptions:capacity:
setObject:forKey:
_unregisterConnection:
setInvalidationHandler:
configureConnection:
_setConnection:
unregisterSiriPresentationIdentifier:
connection
stringWithSiriPresentationIdentifier:
remoteProcess
hasEntitlement:
invalidated
setConnection:
serviceQuality
setServiceQuality:
interface
setInterface:
setInterfaceTarget:
serverDidInvalidateConnection:
activate
waitForConnectBlocks
setWaitForConnectBlocks:
remoteTarget
registerPresentationIdentifier:
unregisterPresentationIdentifier:
willDismiss
didDismiss
didPresentSiri
failedToPresentSiriWithError:
allBulletins
bulletinsOnLockScreen
bulletinForIdentifier:
handleMarkBulletinWithIdentifier:asRead:
speechRequestStartedFromSiriOrb
speechRequestCancelledFromSiriOrb
protocolForProtocol:
presentationRequestedWithPresentationOptions:requestOptions:
presentationDismissalRequestedWithOptions:
handleRequestWithOptions:
presentationisIdleAndQuiet
cancelTTS
preheat
cancelPreheat
cancelPendingActivationEventWithReason:
turnOnScreenAfterPocketStateFetch
handleTestingActivation:
handleButtonDownFromButtonIdentifier:timestamp:
handleButtonUpFromButtonIdentifier:timestamp:
handleButtonTapFromButtonIdentifier:
handleButtonLongPressFromButtonIdentifier:timestamp:
updateCurrentLockState:
updateActiveInterfaceOrientation:willAnimationWithDuration:
bulletinManagerDidChangeBulletins
interfaceWithServer:client:
userInteractive
siriPresentationIdentifier
registerSiriPresentation:withIdentifier:
siriPresentationWillDismissWithIdentifier:
siriPresentationDismissedWithIdentifier:
siriPresentationDisplayedWithIdentifier:
siriPresentationFailureWithIdentifier:error:
speechRequestStateDidChange:
markBulletinWithIdentifier:asRead:
serverForConnection:
workspaceServiceInjector
setWorkspaceServiceInjector:
setInvalidated:
weak_delegate
setWeak_delegate:
_invalidated
_workspaceServiceInjector
_waitForConnectBlocks
_weak_delegate
getServiceSetting:key:
isServiceSupported:
device
ac_isEyesFree
setMachServiceIdentifier:
setPresentationDomain:
setSignalDomain:
setSignalIdentifier:
presentationDomain
signalDomain
signalIdentifier
configuration
domainForService:
identifierForService:
machServiceIdentifier
_machServiceIdentifier
_presentationDomain
_signalDomain
_signalIdentifier
setSources:
setPreparingPresentations:
setXcTestingActive:
setPresentations:
setActivePresentations:
setRequestState:
setHeater:
heater
setSiriTetherIsAttached:
setSiriTether:
siriTether
setAttachmentStatusChangedHandler:
initWithDelegate:
manager
setRemoteRequestManager:
addStateChangeListener:
setBulletinManager:
bulletinManager
_registerForVoiceTrigger
setAvExternalButtonEvents:
setButtonDownHasOccurredSinceActivation:
removeStateChangeListener:
_shouldRejectNewActivations:
_notifySourcesOfActiveChange:
_updateCanActivateFromDirectActionSource
sources
allValues
initWithPayload:
initWithDirectActionEvent:context:
setRequest:
setButtonTriggerStateActive:
setPocketStateManager:
afPreferences
setPreferences:
requestState
canActivateForCondition:
setCanActivateFromDirectActionSource:
_notifySourcesOfCanActivateFromDirectActionSourceChange:
canActivateChangedTo:
presentations
activePresentations
removeObject:
preparingPresentations
removeAllObjects
initWithDeactivationOptions:
_dismissSiri:
stopActivationWatchdogTimerIfNeeded
stopDismissalWatchdogTimerIfNeeded
initWithDeactivationOptions:animated:
allObjects
sharedInstance
connectedDevices
productId
vendorId
isValid
presentationsAreIdleAndQuiet
initWithButtonIdentifier:context:
handleActivationRequest:
dismissSiriWithOptions:
scheduledTimerWithTimeInterval:repeats:block:
isConnectedTo188
_B188ActivationEvent:context:options:
initWithContextOverride:
buttonLongPressFromButtonIdentifier:context:
sharedPreferences
assistantIsEnabled
stringWithSiriActivationEventType:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
setPreparationTimestamp:
_cancelTTS
initWithSiriButtonIdentifier:
initWithTimeInterval:
_performOrEnqueueButtonAction:
_recordTimeIfNeededForButtonIdentifier:buttonDownTimestamp:
_handleTapSynthesisIfNeededForButtonIdentifier:buttonUpTimestamp:
_cancelPendingActivationEventWithReason:
activationRequestFromButtonIdentifier:context:
_buttonIsAVExternalButton:
buttonDownHasOccurredSinceActivation
avExternalButtonEvents
doubleValue
activationTimestamp
buttonTapFromButtonIdentifier:
stringWithAFDirectActionEvent:
designModeIsEnabled
_handleDesignModeRequest
initWithContinuityContext:
initWithVoiceTriggerContext:
initWithBreadcrumbRequest
initWithSimpleActivation:
initWithSpotlightContext:
initWithVoiceTriggerRequest
initWithTestingContext:
handleActivationRequest:systemState:
activationType
eventSource
date
timeIntervalSince1970
_cancelActivationPreparationIfNecessary
_cancelActivationPreparationForSetup
activationPresentationForPresentationIdentifiers:systemState:
testingInputController
dequeuePreloadedTestingContext
testingContext
setTestingContext:
_activatePresentation:requestOptions:analyticsContext:
_handlePocketStateFetchForScreenWakeForPresentationServer:requestOptions:presentationOptions:
isHTTRequestSource
setActivationTimestamp:
startActivationWatchdogTimerForPresentationServer:
uiPresentationIdentifier
setWakeScreen:
_pocketStateFetchingInProgressForHeadsetActivation
_setPocketStateFetchingInProgressForHeadsetActivation:
startDismissalWatchdogTimer
attach:
stringWithSiriPresentationActivationCancelReason:
initWithSiriPresentationActivationCancelReason:
_isInitialRequest
isEyesFreeRequestSource
isUIFreeRequestSource
lockState
_attachToTether
_preheatPresentation
initWithDeactivationOptions:animated:requestCancellationReason:
initWithSiriUILockState:
_watchdogQueue_startActivationWatchdogTimerForPresentationServer:
activationTimer
setActivationTimer:
initWithTimeoutInterval:onQueue:timeoutHandler:
start
_watchdogQueue_stopActivationWatchdogTimerIfNeeded
cancelIfNotAlreadyCanceled
_watchdogQueue_startDismissalWatchdogTimer
dismissalTimer
setDismissalTimer:
_watchdogQueue_stopDismissalWatchdogTimerIfNeeded
shouldAbortAnotherDeviceBetter:
shouldContinue:
shouldUnduck:
shouldHandleEmergency:
advertisingDidBegin:
advertisingDidEnd:
listeningDidBegin:
listeningDidEnd:
didChangeLockState:
bulletinManagerDidChangeBulletins:
callStateChangedToIsActive:isOutgoing:
registerActivationSource:withIdentifier:
unregisterActivationSourceIdentifier:
deactivationRequestFromButtonIdentifier:context:options:
prewarmFromButtonIdentifier:longPressInterval:
cancelPrewarmFromButtonIdentifier:
buttonDownFromButtonIdentifier:timestamp:
buttonUpFromButtonIdentifier:timestamp:
activationRequestFromDirectActionEvent:context:completion:
activationRequestFromContinuityWithContext:
activationRequestFromVoiceTriggerWithContext:
activationRequestFromBreadcrumb
activationRequestFromSimpleActivation:
activationRequestFromSpotlightWithContext:
activationRequestFromVoiceTrigger
activationRequestFromTestingWithContext:
activationRequestFromTestRunnerWithContext:
_unregisterForVoiceTrigger
setAfPreferences:
siriTetherIsAttached
preparationTimestamp
voiceTriggerNotifyTokenIsValid
setVoiceTriggerNotifyTokenIsValid:
remoteRequestManager
setTestingInputController:
canActivateFromDirectActionSource
_buttonTrigger
_preheatedPresentation
_voiceTriggerNotifyToken
_myriad
_voiceTriggerDispatchQueue
_watchdogQueue
_B188ActivationTimer
_myriadController
_xcTestingActive
_siriTetherIsAttached
_voiceTriggerNotifyTokenIsValid
_buttonDownHasOccurredSinceActivation
_canActivateFromDirectActionSource
_afPreferences
_presentations
_activePresentations
_preparingPresentations
_requestState
_sources
_heater
_siriTether
_preparationTimestamp
_activationTimestamp
_bulletinManager
_remoteRequestManager
_testingInputController
_activationTimer
_dismissalTimer
_avExternalButtonEvents
configureConnection
endpointForMachName:service:instance:
connectionWithEndpoint:
numberWithInteger:
unregisterNonButtonSourceWithType:withUUID:
setInterruptionHandler:
registerNonButtonSourceWithType:withUUID:
setActivationHandler:
activateWithContext:
integerValue
compare:options:
intentIDs
intentIdentifiers
containsString:
valueForKey:
sectionID
setWithObjects:
decodeObjectOfClasses:forKey:
initWithBBBulletin:
initWithUNNotification:
isMessagingDirectAction
_payload
_bulletin
_notification
deactivationOptions
animated
reason
decodeIntegerForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeBool:forKey:
_animated
_deactivationOptions
_reason
firstObject
setContext:
activateFromSource:
initWithPPTContext:siriContextOverride:
initWithRecognitionStrings:siriContextOverride:
initWithAudioInput:siriContextOverride:
initWithPPTContext:
initWithRecognitionStrings:
initWithAudioInput:
containsPPT
containsRecognitionStrings
containsAudioInput
_testingContext
_initWithButtonIdentifier:
setLongPressInterval:
setButtonIdentifier:
setLock_activityAssertions:
buttonIdentifier
unregisterButtonIdentifier:withUUID:
registerButtonIdentifier:withUUID:
lock_activityAssertions
reference
initWithString:
longPressInterval
timestamp
initWithIdentifier:reference:reason:timestamp:invalidationBlock:
longPressButtonForIdentifier:
prepareForActivation
speechInteractionActivityWithTimestamp:
didRecognizeButtonSinglePressUp
didRecognizeLongPress
_longPressInterval
_buttonIdentifier
_lock_activityAssertions
_context
cancelReason
invalidatedAtTimestamp:
_reference
_timestamp
_invalidationBlock
stringWithAFActivationEvent:
setActivationTime:
setButtonDownTime:
setActivationType:
requestSourceForButtonIdentifier:
setRequestSource:
activationEventTime
setActivationEvent:
source
isDeviceButtonRequest
activationTime
isEyesFree
isHoldToTalkSource
buttonDownTime
_waketimeMIB
_waketimeMIBSize
_activationType
_activationEvent
_activationTime
_buttonDownTime
_requestSource
_setupObserver
setObserverFeed:
length
title
cachedBulletinForID:
setRead:
_bulletinsDidChange
_displayNameForBulletin:
setDisplayName:
addBulletinCompletionWithBulletin:forFeed:
bulletinID
availableOnLockScreen
setAvailableOnLockScreen:
bbBulletin
insertBulletin:fromFeed:
removeBulletinForID:
modifyBulletinCompletionWithBulletin:
observer:purgeReferencesToBulletinID:
observer:addBulletin:forFeed:playLightsAndSirens:withReply:
observer:addBulletin:forFeed:
observer:modifyBulletin:forFeed:
observer:modifyBulletin:
observer:removeBulletin:forFeed:
observer:removeBulletin:
observer:updateSectionInfo:
observer:removeSection:
observer:updateGlobalSettings:
observer:noteSectionParametersChanged:forSectionID:
observer:noteInvalidatedBulletinIDs:
observer:noteServerConnectionStateChanged:
observer:noteServerReceivedResponseForBulletin:
observer:prepareAttachment:beforeDeliveringBulletin:withCompletionHandler:
observerShouldFetchAttachmentImageBeforeBulletinDelivery:
observerShouldFetchAttachmentSizeBeforeBulletinDelivery:
observer:thumbnailSizeConstraintsForAttachment:bulletin:
observer:thumbnailSizeConstraintsForAttachmentType:
observer:processData:forAttachment:bulletin:completionHandler:
observer:composedImageFromThumbnailData:forAttachment:bulletin:completionHandler:
observer:composedImageSizeForAttachment:bulletin:thumbnailSize:
observer:composedAttachmentImageForType:thumbnailData:key:
observer:composedAttachmentSizeForType:thumbnailWidth:height:key:
_observer
_bulletinCache
_bulletinsOnLockScreen
_identifierMatchesSiriButtonIdentifier:
alloc
siriButtonIdentifier
decodeObjectForKey:
setEvent:
event
intValue
initWithAFDirectActionEvent:
_event
setTransport:
transport
timeInterval
_transport
longValue
initWithSiriPresentationIdentifier:
numberWithUnsignedInteger:
unsignedIntegerValue
SiriUILockState
setRemoteRequestWatcher:
_requestWatcherVoiceActivationEnabled
_startFetchingPocketStateUpdates
_handleRequestWatcherVoiceTriggerRequestWithInfo:
initWithRequestInfo:
setHasPendingVoiceTriggerActivation:
currentVoiceTriggerRestriction
setCurrentVoiceTriggerRestriction:
pendingVoiceTriggerRestrictionCount
_handlePendingVoiceTriggerActivationsWithInfo:
logEventWithType:context:
setPendingVoiceTriggerRestrictionCount:
hasPendingVoiceTriggerActivation
_handleRemotePrewarmWithInfo:
_handleNewRemoteRequestWithInfo:
_processPendingVoiceTriggerActivationsWithInfo:delay:
_handleRemoteRequestDismissalWithReason:options:analyticsContext:
remoteRequestWatcher
pocketStateManager
setCurrentPocketState:
_hasPendingVoiceTriggerActivation
_remoteRequestWatcher
_currentVoiceTriggerRestriction
_pendingVoiceTriggerRestrictionCount
_configureStreamingDictationForSource:
setUseStreamingDictation:
activationDeviceIdentifier
messagesDirectActionContext
checkForGuideUpdateContext
setCheckForGuideUpdateContext:
serverCommandId
setServerCommandId:
isPronunciationRequest
setPronunciationRequest:
pronunciationContext
setPronunciationContext:
text
speechFileURL
setSpeechFileURL:
expectedTimestamp
setExpectedTimestamp:
isInitialBringUp
useAutomaticEndpointing
useStreamingDictation
homeButtonUpFromBeep
setHomeButtonUpFromBeep:
continuityInfo
setSpeechRequestOptions:
acousticIdEnabled
releaseAudioSessionOnRecordingCompletion
setReleaseAudioSessionOnRecordingCompletion:
contextAppInfosForSiriViewController
isForCarDND
carDNDStatus
setCarDNDStatus:
currentLockState
currentCarPlaySupportedOEMAppIdList
setCurrentCarPlaySupportedOEMAppIdList:
decodePropertyListForKey:
decodeDoubleForKey:
encodeDouble:forKey:
isForSpeechRequest
isB288Activation
absoluteString
_isTypeToSiriPermittedAndEnabledForRequestOptions
initWithRequestSource:
isMessagesDirectAction
setUiPresentationIdentifier:
_pronunciationRequest
_isForCarDND
_isConnectedToCarPlay
_initialBringUp
_useAutomaticEndpointing
_useStreamingDictation
_acousticIdEnabled
_releaseAudioSessionOnRecordingCompletion
_activationDeviceIdentifier
_appBundleIdentifier
_messagesDirectActionContext
_checkForGuideUpdateContext
_directActionEvent
_serverCommandId
_pronunciationContext
_text
_speechFileURL
_expectedTimestamp
_buttonDownTimestamp
_currentCarPlaySupportedOEMAppIdList
_carDNDStatus
_homeButtonUpFromBeep
_continuityInfo
_requestInfo
_speechRequestOptions
_uiPresentationIdentifier
_contextAppInfosForSiriViewController
_currentLockState
setLockState:
isBlocked
isScreenOn
unlockedByTouchID
setUnlockedByTouchID:
setAssistantIsEnabled:
_unlockedByTouchID
_lockState
_assistantIsEnabled
_updateAccessibilityState
monitorCarSessions
setApplicationStateHelper:
weakObjectsHashTable
setListeners:
initWithName:options:queue:delegate:
listeners
languageCode
bestSupportedLanguageCodeForLanguageCode:
applicationStateHelper
foregroundAppInfosForCarPlay
foregroundAppInfos
state
setEnabled:
enabled
isCurrentLocaleNativelySupported
isInActiveCall
isWirelessSplitterOn
isGuestConnected
carPlayConnectionState
setCarPlayConnectionState:
observerWirelessSplitter
setObserverWirelessSplitter:
observerBluetoothGuestConnected
setObserverBluetoothGuestConnected:
_enabled
_carPlayConnectionState
_applicationStateHelper
_listeners
_observerWirelessSplitter
_observerBluetoothGuestConnected
request
buttonTriggerStateActive
preferences
analyticsContext
setAnalyticsContext:
_buttonTriggerStateActive
_request
_preferences
_analyticsContext
_shouldSiriActivateForSiriSetupWithSystemState:
disableAssistantWhilePasscodeLocked
isTemporaryDevice
stringWithSiriSpotlightContextSource:
setUtteranceText:
setSource:
_utteranceText
_source
_registerForTestingNotifications
defaultCenter
_testingStringsDidChange:
addObserver:selector:name:object:
_testingAudioInputPathsDidChange:
removeObserver:
object
preloadedTestingInput
_preloadedTestingInput
previousNode
setPreviousNode:
nextNode
setNextNode:
_previousNode
_nextNode
_isFeedRelevant:
_findNodeForBulletinID:
_deleteNode:
_purgeOldestNodes
dictionary
_count
_oldestNode
_newestNode
activationRequestFromDirectActionEvent:context:
activateWithContext:completion:
setDomain:
setService:
listenerWithConfigurator:
setListener:
listener
listener:didReceiveConnection:withContext:
_listener
wakeScreen
hideOtherWindowsDuringAppearance
setHideOtherWindowsDuringAppearance:
_wakeScreen
_hideOtherWindowsDuringAppearance
initWithBluetoothDevice:
bluetoothDeviceForIdentifier:bluetoothDevice:
deactivate
setType:
setRecordedSpeechURL:
type
recordedSpeechURL
_type
_recordedSpeechURL
prewarmFromButtonIdentifier:
_registerSourceForIdentifier:
_unregisterSourceForIdentifier:
_activationRequestFromDirectActionEvent:context:completion:
setValue:forKey:
initWithUUIDString:
deviceFromIdentifier:
numberWithInt:
initWithSpeechRequestOptions:
initWithUserActivity:
_isTemporaryDevice
_userActivity
_isEyesFree
_address
@16@0:8
v16@0:8
B16@0:8
Vv24@0:8@16
v24@0:8@16
@"BSServiceConnection"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSString"
@40@0:8@16q24@32
@32@0:8@16@24
q16@0:8
v24@0:8q16
@"SASSystemState"
@"SiriContextOverride"
@24@0:8q16
v24@0:8d16
d16@0:8
v20@0:8B16
@"<SASHeaterDelegate>"
@"NSTimer"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16q24
v32@0:8@"CMPocketStateManager"16q24
v24@0:8@?16
@"CMPocketStateManager"
@24@0:8^{_NSZone=}16
@"NSURL"
v32@0:8q16@24
@"NSObject<OS_dispatch_queue>"
@"NSMutableArray"
v32@0:8@16@24
v40@0:8@16@24@32
v32@0:8@"AFClockAlarmObserver"16@"NSUUID"24
v40@0:8@"AFClockAlarmObserver"16@"AFClockAlarmSnapshot"24@"AFClockAlarmSnapshot"32
v32@0:8@"AFClockTimerObserver"16@"NSUUID"24
v40@0:8@"AFClockTimerObserver"16@"AFClockTimerSnapshot"24@"AFClockTimerSnapshot"32
B28@0:8@16B24
v24@0:8B16B20
@"NSObject<OS_dispatch_semaphore>"
@"CMMotionActivityManager"
@"SASLockStateMonitor"
@"FBSDisplayLayoutMonitor"
{?="alarmObserver"@"AFClockAlarmObserver""timerObserver"@"AFClockTimerObserver""isAlarmFiring"B"isTimerFiring"B}
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSNumber"
Vv32@0:8@16@24
Vv24@0:8@"SiriPresentationIdentifierTransport"16
Vv24@0:8@"NSError"16
@"NSDictionary"16@0:8
@"AFBulletin"24@0:8@"NSString"16
Vv32@0:8@"NSString"16@"NSNumber"24
Vv32@0:8@"SiriPresentationOptions"16@"SASRequestOptions"24
Vv24@0:8@"SiriDismissalOptions"16
Vv24@0:8@"SASRequestOptions"16
Vv24@0:8@"SiriPresentationActivationCancelReasonTransport"16
B24@0:8@"SASActivationRequest"16
Vv32@0:8@"SASButtonIdentifierTransport"16@"SASTimeIntervalTransport"24
Vv24@0:8@"SASButtonIdentifierTransport"16
Vv24@0:8@"SiriUILockStateTransport"16
Vv32@0:8@"NSNumber"16@"SASTimeIntervalTransport"24
@"BSServiceConnectionEndpointInjector"
@"BSServiceConnection<BSServiceConnectionHost>"
@"<SASPresentationServerDelegate>"
@40@0:8@16@24@32
@"SASRequestOptions"40@0:8@"SASRequestOptionsBuilder"16@"SASRequestOptions"24@"SASActivationRequest"32
B32@0:8@16@24
@40@0:8@16@24q32
Q32@0:8@16@24
B32@0:8@"SASRequestOptionsBuilder"16@"SASActivationRequest"24
@"NSString"40@0:8@"SASRequestOptionsBuilder"16@"SASActivationRequest"24q32
Q32@0:8@"SASRequestOptionsBuilder"16@"SASActivationRequest"24
v24@0:8@"SASHeater"16
v24@0:8@"AFMyriadCoordinator"16
v24@0:8Q16
v24@0:8@"SASBulletinManager"16
B24@0:8q16
v40@0:8q16@24@32
v32@0:8q16d24
v40@0:8q16@24@?32
v28@0:8@16B24
@"AFMyriadCoordinator"
@"SASMyriadController"
@"AFPreferences"
@"NSMutableDictionary"
@"NSMutableSet"
@"SASHeater"
@"AFSiriTether"
@"SASBulletinManager"
@"SASRemoteRequestManager"
@"SASTestingInputController"
@"AFWatchdogTimer"
@"NSDictionary"
@"BBBulletin"
@"UNNotification"
@24@0:8Q16
@28@0:8Q16B24
@36@0:8Q16B24q28
q32@0:8@16@24
@"SiriContext"16@0:8
@24@0:8d16
@"<SiriAssertion>"16@0:8
@"<SiriAssertion>"24@0:8d16
@"SiriLongPressButtonContext"
@56@0:8@16@24@32d40@?48
q24@0:8q16
@32@0:8q16@24
[12i]
@"SiriContext"
v52@0:8@16@24Q32B40@?44
v40@0:8@16@24Q32
v48@0:8@16@24@32@?40
@32@0:8@16q24
v56@0:8@16@24@32@40@?48
{CGSize=dd}56@0:8@16@24@32{CGSize=dd}40
@48@0:8@16q24@32@40
{CGSize=dd}48@0:8@16q24f32f36@40
v52@0:8@"BBObserver"16@"BBBulletin"24Q32B40@?<v@?B>44
v40@0:8@"BBObserver"16@"BBBulletin"24Q32
v32@0:8@"BBObserver"16@"BBBulletin"24
v32@0:8@"BBObserver"16@"BBSectionInfo"24
v32@0:8@"BBObserver"16@"NSString"24
v32@0:8@"BBObserver"16@"BBGlobalSettings"24
v40@0:8@"BBObserver"16@"BBSectionParameters"24@"NSString"32
v32@0:8@"BBObserver"16@"NSSet"24
v28@0:8@"BBObserver"16B24
v48@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32@?<v@?Q>40
B24@0:8@"BBObserver"16
@"BBThumbnailSizeConstraints"40@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32
@"BBThumbnailSizeConstraints"32@0:8@"BBObserver"16q24
v56@0:8@"BBObserver"16@"NSData"24@"BBAttachmentMetadata"32@"BBBulletin"40@?<v@?@"NSData">48
v56@0:8@"BBObserver"16@"NSData"24@"BBAttachmentMetadata"32@"BBBulletin"40@?<v@?@"UIImage">48
{CGSize=dd}56@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32{CGSize=dd}40
@"UIImage"48@0:8@"BBObserver"16q24@"NSData"32@"NSString"40
{CGSize=dd}48@0:8@"BBObserver"16q24f32f36@"NSString"40
v32@0:8@16Q24
@"BBObserver"
@"SASBulletinCache"
@"<SASBulletinManagerDelegate>"
v32@0:8@16d24
v40@0:8q16Q24@32
@"AFRemoteRequestWatcher"
@"AFBulletin"
@"SAGuidanceCheckForGuideUpdateContext"
@"SASPronunciationContext"
@"NSArray"
@"AFRequestInfo"
@"AFSpeechRequestOptions"
@"<SASLockStateMonitorDelegate>"
i16@0:8
v20@0:8i16
@"SUICApplicationStateHelper"
@"NSHashTable"
@"AFNotifyObserver"
@"SASActivationRequest"
@"SASSiriPocketStateManager"
@"SiriTestingContext"
@"SASBulletinCacheNode"
B24@0:8Q16
v32@0:8@16@?24
@"<SiriDirectActionSourceDelegate>"
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
@"BSServiceConnectionListener"
@"SiriBluetoothContext"
Vv40@0:8@16@24@?32
Vv40@0:8@16@24@32
Vv32@0:8@"SASButtonIdentifierTransport"16@"NSString"24
Vv32@0:8@"NSNumber"16@"NSString"24
Vv32@0:8@"SASButtonIdentifierTransport"16@"SiriContext"24
Vv32@0:8@"SASDirectActionEventTransport"16@"SiriDirectActionContext"24
Vv40@0:8@"SASDirectActionEventTransport"16@"SiriDirectActionContext"24@?<v@?@"NSNumber"@"NSError">32
Vv24@0:8@"SiriContinuityContext"16
Vv24@0:8@"NSNumber"16
Vv24@0:8@"SiriSpotlightContext"16
Vv24@0:8@"SiriTestingContext"16
Vv32@0:8@"SASButtonIdentifierTransport"16@"SiriLongPressButtonContext"24
Vv40@0:8@"SASButtonIdentifierTransport"16@"SiriContext"24@"SiriDismissalOptions"32
v40@0:8@16@24@?32
@"<SASSignalServerDelegate>"
