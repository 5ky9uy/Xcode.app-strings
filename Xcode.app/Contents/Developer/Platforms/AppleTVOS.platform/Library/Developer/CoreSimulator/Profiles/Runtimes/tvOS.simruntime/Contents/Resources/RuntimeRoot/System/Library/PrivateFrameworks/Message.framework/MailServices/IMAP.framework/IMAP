(UID FLAGS BODY.PEEK[HEADER.FIELDS (content-class)])
 content-class
content-class
urn:content-classes:message
urn:content-classes:appointment
BODYSTRUCTURE
BODY
.PEEK
HEADER
bodyDataConsumer
T@"<MFDataConsumer>",&,N,V_bodyDataConsumer
consumerSection
T@"NSString",&,N,V_consumerSection
fetchItem
T@"NSString",C,N,V_fetchItem
TI,N,V_uid
IMAPMailboxAttributes
DELETED
Source UIDS
Destination UIDS
\All
\Archive
\Drafts
\Flagged
\Junk
\Sent
\Trash
XAPPLEPUSHSERVICE
v8@?0
en_US_POSIX
d-MMM-yyyy
(){ %*\"
    supports IDLE: %@
    using IDLE: %@ (seq=%lu)
STARTTLS
LITERAL+
LITERAL-
UIDPLUS
CHILDREN
IDLE
QUOTA
NAMESPACE
MULTIAPPEND
UNSELECT
LOGINDISABLED
XLIST
COMPRESS=DEFLATE
ESEARCH
CONDSTORE
SASL-IR
XYMHIGHESTMODSEQ
X-GM-EXT-1
MOVE
SPECIAL-USE
LIST-STATUS
"%@"
"%@ (%@)"
"name"
"version"
"os"
"iOS"
"os-version"
%@%@
aps-version
aps-account-id
aps-device-token
aps-subtopic
mailboxes
mailbox
aps-topic
DEFLATE
FAILED_FETCH_TITLE
Cannot Get Mail
Delayed
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-9998.6/MessageStores.subproj/IMAP.subproj/IMAPConnection.m
<Unknown File>
Invalid parameter not satisfying: %@
outNonSynchronizingLiteral
{%lu%s}
%lu 
v40@?0r^v8{_NSRange=QQ}16^B32
B32@?0r*8Q16B24B28
IMAP_OPEN_FAILED_MSG_FORMAT
IMAP_COMMAND_FAILED_FORMAT1
DisableESEARCH
DisableCOMPRESS
DisableCONDSTORE
FAILED_LOGIN
STATUS %@
RETURN (%@)
@"NSNull"16@?0^@8
*** Server doesn't support UIDPLUS
(NOT A CRASH) see <rdar://problem/26633447> : term should be an NSString, but is %@
MESSAGE-ID
+FLAGS.SILENT
-FLAGS.SILENT
(\Deleted)
BEFORE
uids
RFC822.SIZE
BODY.PEEK[HEADER]
(BODY.PEEK[HEADER.FIELDS (MESSAGE-ID)])
(UID X-GM-MSGID)
MinFetchChunkSize
MaxFetchChunkSize
FetchDeltaTarget
%d:*
%d:%d
%lu:%lu
%lu:*
%lu:%u
TLS_NOT_SUPPORTED_FORMAT
TLS_FAILED_FORMAT
Disconnected
Non-authenticated
Authenticated
Selected
<%@:%p> [%@%s] delegate=%p mailbox=<%@>
, Fetching
<%@:%p> [%@%s] delegate=%p
(UID FLAGS)
-[MFIMAPConnection _fetchArgumentForMessageSkeletonsWithHeaders:]
requiredHeaders
(INTERNALDATE UID RFC822.SIZE FLAGS 
MODSEQ 
X-GM-MSGID 
BODY.PEEK[HEADER.FIELDS (
%@:%@
idleCommandSequenceNumber
TQ,N,V_idleCommandSequenceNumber
idleSubscriptionCancelable
T@"<MFCancelable>",&,N,V_idleSubscriptionCancelable
delegate
T@"<MFIMAPConnectionDelegate>",W,N
Ti,N,V_tag
connectTime
Td,R,N,V_connectTime
gotBadResponse
TB,R,N,V_gotBadResponse
additionalHeadersForFetch
T@"NSArray",C
valid
TB,R,N,GisValid
idle
TB,R,N,GisIdle
<%@: %p>
%@ set %@
%@ unset %@
mask
TQ,R,N,V_mask
searchTerms
T@"NSArray",R,N,V_searchTerms
isPositiveMatch
TB,R,N,V_isPositiveMatch
CAPABILITY
NOOP
LOGOUT
AUTHENTICATE
LOGIN
LIST
LSUB
STATUS
EXAMINE
CREATE
DELETE
RENAME
SELECT
SUBSCRIBE
UNSUBSCRIBE
EXPUNGE
UID EXPUNGE
CLOSE
APPEND
FETCH
UID FETCH
UID STORE
UID COPY
UID SEARCH
GETQUOTAROOT
GETQUOTA
DONE
SEARCH
XDELIVER
COMPRESS
UID MOVE
"dd-MMM-yyyy HH:mm:ss ZZ"
mainConsumer
T@"MFBaseFilterDataConsumer",R,N,V_mainConsumer
TEXT
BODY.PEEK[
-[MFIMAPFetchResult envelope]
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-9998.6/MessageStores.subproj/IMAP.subproj/IMAPFetchResult.m
Invalid item type %d
-[MFIMAPFetchResult setEnvelope:]
-[MFIMAPFetchResult internalDate]
-[MFIMAPFetchResult setInternalDate:]
-[MFIMAPFetchResult fetchData]
-[MFIMAPFetchResult setFetchData:]
-[MFIMAPFetchResult messageSize]
-[MFIMAPFetchResult setMessageSize:]
-[MFIMAPFetchResult bodyStructure]
-[MFIMAPFetchResult setBodyStructure:]
-[MFIMAPFetchResult startOffset]
-[MFIMAPFetchResult setStartOffset:]
-[MFIMAPFetchResult section]
-[MFIMAPFetchResult setSection:]
-[MFIMAPFetchResult uid]
-[MFIMAPFetchResult setUid:]
-[MFIMAPFetchResult uniqueRemoteId]
-[MFIMAPFetchResult setUniqueRemoteId:]
-[MFIMAPFetchResult flagsArray]
-[MFIMAPFetchResult setFlagsArray:]
-[MFIMAPFetchResult setMessageFlags:]
-[MFIMAPFetchResult setCustomFlagsArray:]
-[MFIMAPFetchResult customFlagsArray]
* INVALID *
ENVELOPE %@
INTERNALDATE
RFC822.SIZE %u
BODYSTRUCTURE %@
BODY[%@]<%lu> {%lu}...
BODY[%@] {%lu}...
UID %u
X-GM-MSGID %llu
FLAGS (%@)
MODSEQ %d
<%@: %p, uid: %@>
%s%u
temp-
multipart
boundary
%@: Unexpected byte %x at position %lu
attempt to create an invalid offline operation of type %d with no mailbox name %p
attempt to create an invalid store-flags offline operation: %lu true flags, %lu false flags, %lu uids
attempt to create an invalid copy-message offline operation: %lu srcUids, %lu dstUids, dstMailbox=%p (%lu)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-9998.6/MessageStores.subproj/IMAP.subproj/IMAPOperation.m
Invalid method for type %d
CREATE [%@]
DELETE [%@]
[%@] STORE 
 ** expunged **
 <+FLAGS.SILENT%@>
 <-FLAGS.SILENT%@> 
APPEND [%@] %@ {%u}
COPY [%@] [%@]
PERFORMING_PENDED_OPERATIONS_TASK_NAME
Performing pended operations
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
operations
RECENT
MESSAGES
EXISTS
_IMAPNameQuotaKey
_IMAPCurrentUsageQuotaKey
_IMAPMaxUsageQuotaKey
_IMAPNamespacePrefixKey
_IMAPNamespaceDelimiterKey
_IMAPNamespaceExtensionsKey
CHARSET=
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-9998.6/MessageStores.subproj/IMAP.subproj/IMAPResponse.m
%@ is invalid for %s
%@ is invalid for response type %d
-[MFIMAPResponse fetchResults]
_responseType == IMAPFetchResponse && "Invalid response type for fetchResults"
%llu
(%@)
%@ %@
 ==> (%@)
 "%@"
 (%@ %@/%@)
 %@ %c%@
*nil*
("%@" 
 "%@" ("%@")
v32@?0@"NSString"8@"NSArray"16^B24
v16@?0@"NSArray"8
responseConsumer
T@"MFIMAPResponseConsumer",&,N,V_responseConsumer
privateNamespaces
T@"NSArray",C,N
publicNamespaces
sharedNamespaces
<null>
should not register multiple consumers for the same section: %@
--Not Set--
PREAUTH
FLAGS
QUOTAROOT
--OTHER--
X-UID-FLAGS
Expected space
ALERT
UNAVAILABLE
AUTHENTICATIONFAILED
AUTHORIZATIONFAILED
EXPIRED
PRIVACYREQUIRED
CONTACTADMIN
NOPERM
INUSE
EXPUNGEISSUED
CORRUPTION
SERVERBUG
CANNOT
LIMIT
OVERQUOTA
ALREADYEXISTS
NONEXISTENT
BADCHARSET
NEWNAME
PARSE
READ-ONLY
READ-WRITE
TRYCREATE
UIDNEXT
HIGHESTMODSEQ
UIDVALIDITY
NOMODSEQ
UNSEEN
PERMANENTFLAGS
APPENDUID
COPYUID
CLIENTBUG
Expected ]
INBOX
Expected list or NIL
\Noinferiors
\Noselect
\Marked
\Unmarked
\HasChildren
\HasNoChildren
\NonExistent
Invalid FETCH response
Couldn't parse FETCH: no space character in input
ENVELOPE
X-GM-MSGID
RFC822
RFC822.HEADER
RFC822.TEXT
MODSEQ
BODY[
HEADER.
Unable to parse header keys array
Couldn't parse FETCH: no square brace character in input
Expected number
Expected >
Unrecognized FETCH key
Expected a right paren
couldn't parse NAMESPACE: unexpected atom
couldn't parse namespace response: prefix and/or delimiter were not strings
couldn't parse namespace response extensions: invalid key or value
couldn't parse namespace response extensions: not enough values for keys
@"NSArray"8@?0
--EXTENSION--
\Seen
\Deleted
\Answered
\Recent
\Draft
$Forwarded
$Junk
$NotJunk
Forwarded
Junk
NotJunk
Redirected
Incomplete response
Junk at end of response
dataHolder
T@"MFDataHolder",&,N,V_dataHolder
@"MFMailMessage"8@?0
-[MFBaseSyncResponseQueue sequenceIdentifierForItem:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-9998.6/MessageStores.subproj/IMAP.subproj/LibraryIMAPStore.m
[item isKindOfClass:[NSArray class]]
indexSet
T@"NSIndexSet",R,&,N,VindexSet
SupportsCustomFlags
CachedConnectionLock
DOWNLOADING_STATUS_FORMAT
Downloading %@ of %@
SEEN
FLAGGED
ANSWERED
KEYWORD
v16@?0@"MFIMAPConnection"8
store and connection mailboxes differ
UNDELETED
@"MFMessageCriterion"16@?0@"MFMessageCriterion"8
LibraryIMAPStoreErrorDomain
v32@?0Q8@"NSIndexSet"16@"NSError"24
IMAP_COMPACT_FAILED
@"NSString"12@?0I8
temp-%lu
v40@?0@"MFIMAPConnection"8@"NSArray"16{_NSRange=QQ}24
B16@?0@"MFLibraryMessage"8
@"NSArray"16@?0@"MFMailMessage"8
messageToTransfer
destinationMailbox
Unknown MoveResult (%ld)
operation
We should never pass a batchUIDs that is nil (might be interpreted as all messages)
@"NSNumber"16@?0@8
@"NSNumber"16@?0@"MFNetworkController"8
@"NSNumber"16@?0@"MFPowerController"8
@"NSNumber"16@?0@"MFLockStateMonitor"8
@"NSNumber"16@?0@"MFAppStateMonitor"8
@"NSNumber"16@?0@"NSArray"8
com.apple.message.imap (IDLE)
v16@?0@"NSError"8
v16@?0@"NSNumber"8
DeletedSearchLimit
shouldUseIDLE
TB,V_shouldUseIDLE
cancelationToken
T@"MFCancelationToken",&,N,V_cancelationToken
q24@?0@8@16
CHARSET
UTF-8
v16@?0@"NSString"8
SUBJECT
Message-ID
fetchArgumentsForCriterion
0 && "Message ID header criterion must have a MessageRuleIsEqualTo qualifier"
FROM
(OR TO
NOT 
NSArray *fetchArgumentsForCriterion(MFMessageCriterion *, BOOL)
could not map expression to flag: %@
SINCE
0 && "Need to handle criterion for IMAP headers"
(OR FROM
(OR SUBJECT
(OR CC
aol.com
%@-%@
Sent
Trash
Drafts
Spam
aolAccountIcon
Exchange
StoreDraftsOnServer
StoreSentMessagesOnServer
Sent Items
Deleted Items
Contacts
Calendar
Journal
Notes
Tasks
OS X Server
OSXServerIMAPErrorDomain
EmailAccountName
EmailAddresses
EmailAddress
EmailDomain
%@@%@
IncomingMailServerAuthentication
EmailAuthCRAMMD5
EmailAuthNTLM
EmailAuthHTTPMD5
OutgoingMailServerAuthentication
EmailAuthNone
mailAccount
T@"MFOSXServerIMAPAccount",&,N,GmailAccountIfAvailable,V_mailAccount
parentAccountMailProperties
T@"NSDictionary",R,N
\Important
\Starred
\AllMail
\Spam
RegionalBehaviorGoogleMail
cellular-data
com.apple.carrier
UseGoogleMail
googlemail.com
gmail.com
Google Mail
Gmail
Your account is not enabled for IMAP use.
IDToken
gmailAccountIcon
VERIFICATION_REQUIRED_TITLE
Verification Required
WEBLOGIN_PROMPT_FORMAT
Log in to your %@ account
MailErrorHandlerDoNotSanitize
xwebalert
webalert
EnableSchema
EnableHost
EnablePath
apple
POST
%@ (%@)
GMAIL_ALL_MAIL_SPECIAL_MAILBOX_NAME
All Mail
self
GMAIL_DELIVERY_HOSTNAME
Gmail SMTP Server
T@"GmailAccount",&,N,GmailAccountIfAvailable,V_account
IMAPAccountOfflineOperationQueued
ServerPathPrefix
CompactWhenClosingMailboxes
ListsSubscribedOnly
DaysBetweenSyncs
DateOfLastSync
PreventDismemberment
PushedMailboxes
NotesPushedMailboxes
NotesNotificationPrefix
urls
T@"NSArray",C,Vurls
paths
T@"NSArray",C,Vpaths
account
T@"IMAPAccount",&,Vaccount
path
T@"NSString",R,Vpath
TI,R,Vuid
changes
T@"NSDictionary",R,Vchanges
commitTime
Td,VcommitTime
connectionTag
TI,VconnectionTag
flagChangesLock
connectionLock
separator
namespace
capabilities
push-service-level
push-registered-mailboxes
163AccountIcon
126AccountIcon
qqAccountIcon
imapmbox
imap
imaps
IMAP
IMAP_SERVER_ALERT_FORMAT
WARNING_TITLE
Warning
DeleteInPlace
IMAP_OPEN_FAILED_TITLE_FORMAT
MailboxName
Apple Mail To Do
IMAPAccount
method
_releaseAllConnectionsAndCallSuper
edgeOnly
IMAP account %@ (%@)
com.apple.mail.imap.offlinestatuschange
INBOX%@INBOX
-[IMAPAccount _newMailboxWithParent:name:attributes:dictionary:withCreationOption:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-9998.6/Accounts.subproj/IMAPAccount.m
creationOption == MailboxCreationOptionDefault
SYNCHRONIZING_WITH_SERVER_FORMAT
Synchronizing with server
CHECKING_FOR_MAIL
Main
v32@?0@"NSString"8@"NSDictionary"16^B24
B16@?0@"MFMailboxUid"8
@16@?0@"MFMailboxUid"8
IMAP_REMOVING_CACHE_FILES
Removing old cache files...
MAILBOX_NAME_INCLUDES_PATH_SEPARATOR
NO_OFFLINE_MAILBOX_RENAMING
.OfflineCache
Account
RelativePath
v32@?0@"NSString"8@"NSString"16^B24
.%@.%@
v20@?0B8@"NSError"12
RelatedMessagesShouldIncludeDrafts
could not create mailbox names for: %@, pushed mailboxes: %@ (sep: %@ prefix: %@)
not 
is NOT
    topic: %@
    known capabilities: %@
    negotiated push service level: %@
    last push registration time: %@
<never>
    mailboxes registered for push: %@
StoreTrashOnServer
StoreArchiveOnServer
<unavailable>
<unknown>
version 1
version 2
_pushServiceLevelName
0 && "unknown push service level"
XOAUTH2
MESSAGE_AUTH_OAUTH2TOKEN
OAuth 2.0 Token
user=%@
auth=Bearer %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-9998.6/MessageStores.subproj/IMAP.subproj/MFIMAPConnection+Move.m
mailboxName
command == _IMAPCommandUidMove || command == _IMAPCommandMove
B16@?0@"MFIMAPResponse"8
yahoo.com
YahooAllowSSL
YahooIMAPPort
Draft
Bulk Mail
%@@yahoo.com
Inbox
ymail://?fid=%@&mid=%@
yahoo.co.jp
ybb.ne.jp
yahooAccountIcon
YAHOO_DELIVERY_HOSTNAME
Yahoo! SMTP Server
T@"YahooAccount",&,N,GmailAccountIfAvailable,V_account
MFAPSManagerDeviceTokenChangedNote
com.apple.message.apsManager
System/Library/PrivateFrameworks/ApplePushService.framework
APSConnection
development
production
MFUseAPSDevelopmentEnvironment
com.apple.mobilemail.dummyTopicToForceServerConnection
com.apple.mobilemail.push.
com.apple.mail.
account-id
==== MFAPSManager ====
  push service: %@
  watched topics: {%@}
  ignored topics: {%@}
  device token (%@): '%@'
waiting for token
has token
_tokenConditionString
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-9998.6/Accounts.subproj/MFAPSManager.m
0 && "unknown token condition"
IMAPESearchMinKey
IMAPESearchMaxKey
IMAPESearchAllKey
IMAPESearchCountKey
IMAPESearchTagKey
-[MFIMAPConnection(ESearch) eSearchIDSet:areMessageSequenceNumbers:arguments:success:returning:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-9998.6/MessageStores.subproj/IMAP.subproj/ESearch.m
returning && "Should have at least one return request on an esearch command."
RETURN
Expected number for minimum result
Expected number for maximum result
COUNT
Expected number for count result
Did not find a valid search return.
Expected right paren
PLAIN-CLIENTTOKEN
MESSAGE_AUTH_GMAIL_CLIENTTOKEN
Gmail Client Token
-[MFIMAPParseContext setStart:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-9998.6/MessageStores.subproj/IMAP.subproj/IMAPParseContext.m
start >= _originalStart && "Should not put the start before the original start."
-[MFIMAPParseContext setEnd:]
end <= _originalEnd && "Should not put the end past the original end."
Error while parsing IMAP response %@: %@
Remaining text: <%@>
Expected number in literal
Expected right curly brace
Expected end-of-line
Read failure
Ignoring extra bytes read during literal
d-MMM-yyyy H:mm:ss ZZZ
Can't parse array contents
In-Reply-To:
References:
BODY[HEADER.FIELDS (REFERENCES IN-REPLY-TO)]
v32@?0@"NSString"8Q16^B24
(CHANGEDSINCE %@)
(FLAGS)
ATOKEN
MESSAGE_AUTH_ATOKEN
Apple Token
castleAccount
T@"CastleIMAPAccount",&,N,V_castleAccount
CASTLE_SMTP_SERVER
iCloud SMTP Server
icloud.com
iCloud-%@
iCloud
%@-%p
com.apple.message.icloud.alias-update
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-9998.6/Accounts.subproj/CastleIMAPAccount.m
nil != _appleAccountLock
CastleIMAPErrorDomain
Username
mac.com
me.com
dotMacMailSupported
FullUserName
imapHostname
imapPort
imapRequiresSSL
Mailbox is over quota
smtpHostname
smtpPort
smtpRequiresSSL
sendFromAddressJSONURL
X-MobileMe-AuthToken %@
aliases
fullName
emails
address
canSendFrom
name
email
EEE, dd MMM yyyy HH:mm:ss zzz
-[CastleIMAPAccount _updateEmailAddressAndAliases]
![NSThread isMainThread] && "This method must be called off the main thread"
Authorization
If-Modified-Since
p99-
jsonrpc
update
params
application/json-rpc; charset=UTF-8
castleAccountIcon
appleAccount
T@"ACAccount",R,N
accountStore
T@"ACAccountStore",R,N
deliveryHostname
T@"NSString",R,N
deliveryPortNumber
TI,R,N
deliveryUsesSSL
TB,R,N
aliasLookupURL
T@"NSURL",R,N
personID
T@"NSString",R,&,N
authToken
sending ID command: %@
server response to ID request: %@
server does not support ID extension
#aps-push not registering for push on unauthenticated connection for account %@
#aps-push connection doesn't support XAPPLEPUSHSERVICE for account %@
#aps-push MCC push settings are not set to push (%d != PCStylePush) for account %@
#aps-push account %@ not registering for push
#aps-push failed to get device token while registering for push on account %@
#aps-push account %@ registering for push: {%@}
#aps-push account %@ will send pushes for mailbox '%@'
#aps-push account %@ (version %@) ignoring invalid version in push response '%@'
#aps-push account %@ (version %@) sent unknown push response %@
#aps-push account %@ will NOT push these mailboxes {%@}
#aps-push account %@ will push all requested mailboxes
#aps-push account %@ specified bad version/topic in response: %@
#aps-push account %@ received mailbox responses but version 1 response, ignoring mailboxes
#aps-push account %@ rejected XAPPLEPUSHSERVICE request: %@
server supports deflate compression, sending COMPRESS request
server rejected our COMPRESS request: %@
*** Failed to read initial response from %@
*** Expected untagged initial response from %@
*** Invalid IMAP command %d
#imap-idle connection <%p> received response while idling: %@
#imap-idle connection <%p> starting IDLE state for delegate %@
#imap-idle connection <%p> failed to enter IDLE state: %@
#imap-idle connection <%p> delegate rejected starting IDLE state: %@
#imap-idle connection <%p> leaving IDLE state for delegate: %@
#imap-idle connection <%p> timer fired for delayed IDLE reset after %0.2fs delay: %@
#imap-idle connection <%p> resetting IDLE state: %@
%{public}@
inconsistent esearch counts detected, ignoring esearch capability
#Warning Invalid response from SEARCH command
#Warning %@ claimed to support initial response data, and didn't supply an initial response
IMAP protocol error: %@
IMAP auth failure: %@
*** Unexpected response during authentication: %@
Unhandled response to command %s: %@
MFIMAPConnection was lost during processing of command %s: %@.
uid of message %@ is 0
Unexpected byte %u at position %lu
deserialized offline operation was invalid - skipping
attempt to create an invalid offline operation of type %d with no mailbox name %p
attempt to create an invalid store-flags offline operation: %lu true flags, %lu false flags, %lu uids
attempt to create an invalid copy-message offline operation: %lu srcUids, %lu dstUids, dstMailbox=%p (%lu)
*** Error while creating %@: %@
**** Failed to append to %@
*** Error while copying messages to %@
replaying %lu operations with connection %@
replaying %@
removing failed operation from offline cache: %@
*** Error while selecting %@: %@
Invalid for response type %d
#Warning caught %@: %@
caught %@: %@
server returned data we don't have a consumer for, might be expected for section %@
We did something bad: we just got back a CLIENTBUG from the server.
#Power [Server Fetch Time] InternalDate=%@
#Power [New Message] subject=%@;
Compacting %lu messages during IMAP sync
[FetchActivity] Search for recent UIDs returned %lu items (success=%@)
[FetchActivity] starting UID sync for %@ (selected mailbox: %@) idRange=%@ limit=%lu topUIDToCompact=%lu topKnownUID=%lu UIDCount=%lu lowUID=%lu highUID=%lu libraryDetailsIndex=%lu libraryDetailsUIDRange=%lu:%lu
[FetchActivity] preserving UID %lu!
[FetchActivity] Compacting %lu (1)
[FetchActivity] Syncing %lu
[FetchActivity] Fetching %lu
[FetchActivity] Compacting %lu (2)
[FetchActivity] _fetchMessagesWithArguments returns %lu
%@: "Connecting..." starting
[FetchActivity] store and connection mailboxes differ: store=%@ connection=%@ (%p, valid: %@)
[FetchActivity] canceling fetch because connection is invalid
[FetchActivity] canceling fetch because mailbox could not be selected
%@: "Connecting..." completed
[FetchActivity] Compacting all messages
[FetchActivity] Compacting messages with UIDs <= %lu
IMAP Account '%@' deleting messages from store: %@ older than %d days using connection: %@
-[MFLibraryIMAPStore _dataForMessage:] bad message data
[FetchActivity] performOperationRequiringConnection: mailbox=%@ connection=%p cached=%@ options=%d
Forcing reload of %@ because of UIDVALIDITY change (old:%lu new:%lu)
#imap-idle error occurred while observing conditions for IDLE: %@
#imap-idle scheduling IDLE transition (should-use-idle %@): %@
-[MFLibraryIMAPStore _setFlagsForMessages:] flagsByMessage contains mixed message types
#IMAPFlagChanges applying pending changes for message %u: %@
#IMAPFlagChanges remaining changes from server (connection %u): %@
#Warning unsupported header criterion type %@
#Warning need to handle criterion for IMAP search: %@
#Warning failed to get client token
*** Unable to determine name for %@
#IMAPFlagChanges %@: removing all changes
#Warning Unselected connection checked back in, mailbox: %@, connection: %@
#Network %@: -[%@ _releaseAllConnectionsAndCallSuper:%@ edgeForcedOnly:%@ ifIdleForTimeInterval:(%.4f) saveOfflineCache:%@]
#Network All connections: %@
#Network EDGE ONLY
#Network Dropping connections: %@
No connection!! What's going on?
Account '%@' deleting messages from mailbox: %@ older than %d days
#IMAPFlagChanges added %@
#IMAPFlagChanges using changes from %@
#IMAPFlagChanges resulting changes are %@
#IMAPFlagChanges removing failed entry %@
#IMAPFlagChanges removing committed entry %@
#IMAPFlagChanges remaining change entries: %@
#IMAPFlagChanges setting commit time %d for change %@
#IMAPFlagChanges setting connection %d for change %@
#aps-push warning, can't find mailbox with name '%@' (%@)
#aps-push failed to generate hash for mailbox named '%@'
#aps-push Setting aps-topic '%@' for account %@
#aps-push account <%@:%p> scheduling push registration connection
#aps-push account %@ forcing push registration connection
#aps-push account %@ will NOT force push registration connection, didRequestPushRegistration: %s, mustRegisterOnNextConnection: %s
#aps-push account %@ has no pushed mailboxes, skipping
#aps-push account %@ last registered for push %.3f seconds ago
#aps-push {mailboxes=%@, topic=%@, version=%d}
#aps-push external push client registration failed: %@
#aps-push %@
#aps-push Received notification for account '%@', will %@handle push
#aps-push warning, %@ got a notification for mailbox %@, but we're not enabled for the appropriate dataclass
#aps-push warning, %@ got a notification for mailbox with hash '%@', but can't find that mailbox.
#aps-push account %@ will NOT start listening for notifications, canRegisterForAPSPush returned NO
#aps-push account %@ will NOT start listening for notifications, battery-saver mode is ON
#aps-push account %@ told to start listening for notifications
#aps-push account %@ did NOT register for push, %s register for push and PCConnectionStyle %s push
#aps-push account %@ told to stop listening for notifications
#aps-push Unable to open ApplePushService at %@
#aps-push Push service already running.
#aps-push Using %@ APS environment.
#aps-push Starting MFAPSManager.
#aps-push Starting MFAPSManager. Waiting for public token.
#aps-push Stopped MFAPSManager.
#aps-push Start watching topic '%@'
#aps-push Stop watching topic '%@'
#aps-push Swapping registered topic '%@' for topic '%@'
#aps-push Received public token '%@'.
#aps-push received notification on topic '%@', userInfo=%@
Got a response, but it was not for our tag.  Throwing out the results.
Got invalid value in sequence set
*** Warning while parsing %@: %@
Remaining text: <%@>
ERROR: UNKNOWN RESULT: %@ %d
#Warning couldn't find our CastleAccount for our sending account: %@
%@ (%@) failed to get auth token: %@
#CloudSync Starting request for aliases for account %@.
#CloudSync Response from new alias %@. Status Code: %lu
Data: %@
#CloudSync Alias Data: %@
Email alias request to [%@] failed with error code [%lu]
Email alias requests configured to use [%@], scheduling reprovision
#CloudSync Unable to push new alias data to server %@. Received response code %lu, with error %@.
JSON:%@
#CloudSync response: %@.
JSON: %@
MFExchangeConnection
MFIMAPCommandPipeline
_MFIMAPFetchUnit
MFIMAPConnection
MFIMAPConnectionFlagSearchResults
MFIMAPConnectionFlagSearchRequest
MFIMAPDownload
MFIMAPSimpleDownload
MFIMAPCompoundDownload
MFIMAPDownloadCache
MFIMAPFetchResult
MFIMAPMessage
MFIMAPMessageDownload
MFIMAPMessageWithCache
IMAPNameEncoding
MFIMAPOperation
MFIMAPOfflineCopyOnStupidServerOperation
MFIMAPOperationCache
MFIMAPConnectionDelegate
NSObject
MFIMAPResponse
MFIMAPResponseConsumer
_MFWholeMessageSection
MFMessageDataSection
MFFetchResponseQueue
MFSearchFetchResponseQueue
MFBaseSyncResponseQueue
MFSyncResponseQueue
MFSearchResponseQueue
MFLibraryIMAPStore
MFIMAPSequenceIdentifierProvider
AOLAccount
ExchangeAccount
MFOSXServerIMAPAccount
MFOSXServerSMTPAccount
GmailAccount
MFOAuth2TokenAuthProtocol
MFClientTokenAuthProtocol
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
MFGmailSMTPAccount
_MFIMAPMailboxDeletionQueueEntry
_MFFlagChangeEntry
IMAPAccount
MFIMAPMailboxListFilter
MFOAuth2TokenAuthScheme
_MFOAuth2TokenAuthenticator
Move
YahooDeliveryAccount
YahooAccount
MFYahooSMTPAccount
MFAPSManager
APSConnectionDelegate
MFDiagnosticsGenerator
ESearch
MFGmailClientTokenAuthScheme
_MFGmailClientTokenAuthenticator
MFIMAPParseContext
ReferenceSearching
CondStore
MFNewcastleAuthScheme
_MFNewcastleAuthenticator
MFNewcastleSMTPAccount
CastleIMAPAccount
_fetchArgumentForMessageSkeletonsWithHeaders:
length
substringFromIndex:
isEqualToString:
stringWithString:
insertString:atIndex:
fetchResultWithType:
fetchData
initWithData:
mf_convertNetworkLineEndingsToUnix
initWithHeaderData:encoding:
firstHeaderForKey:
_fetchArgumentForMessageUidsAndFlags
_isFetchResponseValid:
dealloc
mf_lock
setUid:
setFetchItem:
setBodyDataConsumer:
setConsumerSection:
addObject:
mf_unlock
count
objectAtIndex:
matchesFetchResponse:
removeObjectAtIndex:
fetchItem
bodyDataConsumer
consumerSection
addConsumer:forSection:
insertObject:atIndex:
isEqual:
mutableCopyWithZone:
appendString:
initWithObjects:count:
_responseFromSendingCommands:count:
setReadBufferSizeFromElapsedTime:bytesRead:
countByEnumeratingWithState:objects:count:
isUntagged
responseType
_removeFetchUnitMatchingResponse:
didFinishCommands:count:
copyFailedFetchResponse
replaceObjectAtIndex:withObject:
addFetchCommandForUid:fetchItem:expectedLength:bodyDataConsumer:consumerSection:
expectedSize
setChunkSize:
chunkSize
setFull:
isFull
failureResponsesFromSendingCommandsWithConnection:
isSending
_chunkSize
_expectedSize
_full
_sending
_fetchUnits
caseInsensitiveCompare:
initWithType:
rangeOfString:options:
rangeOfString:options:range:
substringWithRange:
setSection:
hasSuffix:
intValue
setStartOffset:
_setupExpectedFetchResult
fetchResults
type
section
setResponseType:
setNumber:
setFetchResults:
_expectedFetchResult
_uid
_bodyDataConsumer
_consumerSection
_fetchItem
initWithLocaleIdentifier:
setLocale:
setDateFormat:
stringFromDate:
responseCode
responseInfo
objectAtIndexedSubscript:
dictionaryWithObjects:forKeys:count:
stringWithCString:encoding:
setReadSizeParameters
init
initWithCapacity:
cancel
copyDiagnosticInformation
mutableCopy
appendFormat:
isIdle
idleCommandSequenceNumber
reference
weakReferenceWithObject:
retainedReference
willRemoveDelegation:
connection:shouldHandleUntaggedResponse:forCommand:
connection:didReceiveResponse:forCommand:
connectionDidDisconnect:
connection:didBeginBodyLoad:section:
connection:didLoadMoreBodyData:section:
connection:didFinishLoadingBodyData:section:
connectionBodyDataReadChunkSize:
setServerMessageCount:
setHighestModSequence:
shouldStartIdleForConnection:
zone
allocWithZone:
addObjectsFromArray:
containsObject:
capabilities
_addCapabilities:
supportsCapability:
stringWithFormat:
arrayWithObjects:
parenthesizedStringWithObjects:
arrayWithObjects:count:
canRegisterForAPSPush
serverRegisteredMailboxes:withTopic:version:
uniqueIdForPersistentConnection
shouldRegisterForPush
sharedManager
copyDeviceToken
mf_copyHexString
uniqueId
mailboxNamesForPushRegistration
mainBundle
bundleIdentifier
componentsJoinedByString:
serverInfo
objectForKey:
copy
minusSet:
allObjects
removeAllObjects
setLastPushRegistration:
startCompression
userString
disconnectAndNotifyDelegate:
connectUsingAccount:
_copyNextServerResponseForCommand:
remoteHostname
_clearCapabilities
_doBasicConnectionUsingAccount:
usesSSL
securityProtocol
startTLSForAccount:
clientCertificates
setClientCertificates:
setSecurityProtocol:
_updateCapabilitiesForAccount:withAuthenticationResponse:
hostname
credentialAccessibility
inaccessiblePasswordErrorWithTitle:
missingPasswordErrorWithTitle:
currentMonitor
setError:
_tryConnectionUsingAccount:
setEventHandler:
abort
endCompression
setLength:
noop
isValid
isReadable
connectionState
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
locked_finishIdle
mf_appendCString:
UTF8String
hasPrefix:
appendBytes:length:
appendData:
numberOfNewlinesNeedingConversion:
fillLiteralBuffer:count:dataLength:nonSynchronizingLiteral:
writeData:dontLogBytesInRange:
_copyNextTaggedOrContinuationResponseForCommand:
writeBytes:length:dontLogBytesInRange:
enumerateByteRangesUsingBlock:
writeData:
enumerateConvertingNewlinesUsingBlock:
bytes
initWithConnection:responseConsumer:
errorWithDomain:code:localizedDescription:
useGenericDescription:
error
_fetchCapabilities
standardUserDefaults
boolForKey:
timeout
setTimeout:
password
authenticateUsingAccount:
loginDisabled
loginWithAccount:password:
loginDisabledErrorWithTitle:
_sendApplePushForAccountIfSupported:
_sendClientInfoIfSupported
_enableCompressionIfSupported
errorForResponse:
_setCapabilities:
_serverErrorForAccount:response:command:
errorWithDomain:code:localizedDescription:title:userInfo:
setMoreInfo:
username
dataUsingEncoding:allowLossyConversion:
_doIMAPLoginForAccount:quotedUsername:password:
_sendCommands:count:response:
_doListCommand:withReference:mailboxName:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:
copyWithZone:
_doNamespaceCommand
privateNamespaces
firstObject
objectForKeyedSubscript:
arrayWithCapacity:
separatorChar
initWithFormat:
array
mailboxAttributes
mailboxName
separator
componentsSeparatedByString:
lastObject
mf_indexOfMailboxDictionaryWithName:
dictionary
setObject:forKey:
numberWithUnsignedInt:
mf_insertObject:usingSortFunction:context:allowDuplicates:
numberWithUnsignedInteger:
unsignedIntValue
extraAttributes
statusEntries
setObject:forKeyedSubscript:
filterMailboxList:forMailbox:options:
_listingForMailbox:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:withCommand:
close
handleBytesAvailable
mf_invocationWithSelector:target:
addInvocation:
hasBytesAvailable
handleStreamEvent:
null
lazyFutureWithBlock:
delegate
result:
locked_scheduleIdleResetAfterDelay:
idleSubscriptionCancelable
globalAsyncSchedulerWithQualityOfService:
locked_startIdle
afterDelay:performBlock:
setIdleSubscriptionCancelable:
_errorForResponse:commandParams:
messageSetForNumbers:
updateSearchCapability
_sendMailboxCommand:withArguments:
quotas
initWithFloat:
eSearchIDSet:areMessageSequenceNumbers:forTerms:success:returning:
firstIndex
indexGreaterThanIndex:
searchIDSet:forTerms:success:
searchUidSet:forTerms:success:
countForSearchOfIDSet:forTerms:success:
initWithObjects:
searchResults
copyArgumentForSearchTerm:
setFlagsArray:
setUidFlagsChange:
setUids:
setFlagsFetchResult:
storeFlags:state:forMessageSet:
messageSetForRange:
calendarWithIdentifier:
date
dateByAddingUnit:value:toDate:options:
storeFlags:state:forUids:
createMailbox:
_responseFromSendingCommand:andPossiblyCreateMailbox:
arrayByAddingObjectsFromArray:
_headersToFetchIncludingThoseRequiredForRouting:withRecipients:
_doUidFetchWithRange:arguments:validateMessage:responses:
messageSize
copyFirstStringValueForKey:
uniqueRemoteId
numberWithUnsignedLongLong:
readBufferSize
setReadBufferSize:
integerForKey:
floatForKey:
sortUsingFunction:context:
description
integerValue
messageSetForNumbers:range:maxTokens:indexOfLastNumber:
messageSetForNumbers:range:
authScheme
name
arrayWithObject:
supportsInitialClientResponse
responseForServerData:
mf_encodeBase64WithoutLineBreaks
initWithData:encoding:
setAuthenticationState:
authenticationState
userData
base64EncodeResponseData
setData:
justSentPlainTextPassword
securityLayer
setMissingPasswordError
accountTypeString
portNumber
mf_lockWithPriority
readBytesIntoData:desiredLength:
readLineIntoData:
mutableBytes
isEqualToArray:
locked_scheduleIdle
shouldCancel
addItem:
sendResponsesForCommand:toQueue:
fetchArgumentForMessageSkeletonsWithTo:
sendResponsesForUIDFetchForUIDs:fields:toQueue:
sequenceIdentifierForUIDs:
sendResponsesForCondStoreFlagFetchForUIDs:withSequenceIdentifier:toQueue:
flush
setSequenceIdentifier:forUIDs:
sendResponsesForUIDs:fields:flagSearchResults:toQueue:
eSearchIDSet:areMessageSequenceNumbers:arguments:success:returning:
setSearchResults:
searchTerms
mask
isPositiveMatch
cacheStateForUIDs:mask:existenceSetsFlag:
copyResponseForUID:
number
unsignedLongLongValue
initialize
setDelegate:
mailboxListFilter
setMailboxListFilter:
disconnect
logout
serverPathPrefix
listingForMailbox:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:
subscribedListingForMailbox:options:
closeAndLogout
unselect
finishIdle
scheduleIdleReset
expunge
expungeUids:
fetchStatusForMailboxes:args:
examineMailbox:
selectMailbox:
selectedMailbox
deleteMailbox:
renameMailbox:toMailbox:
subscribeMailbox:
unsubscribeMailbox:
getQuotaForRootName:
quotaPercentagesForMailbox:
countForSearchOfUidSet:forTerms:success:
getMailboxIDForUID:
searchUidSet:forNewMessageIDs:
storeFlags:state:forRange:
deleteMessagesOlderThanNumberOfDays:
copyUids:toMailboxNamed:newMessageInfo:
appendData:toMailboxNamed:flags:dateReceived:newMessageInfo:
additionalHeadersForFetch
setAdditionalHeadersForFetch:
fetchTotalSize:andMessageCount:
fetchHeadersForUid:
fetchMessageIdsForUids:
fetchUniqueRemoteIDsForUids:
performCustomCommand:withArguments:
messageSetForRange:butNotNumbers:
authenticateUsingAccount:authenticator:
lock
notifyDelegateOfBodyLoadStart:section:
notifyDelegateOfBodyLoadAppendage:section:
notifyDelegateOfBodyLoadCompletion:section:
literalChunkSize
_readDataOfLength:
sendSkeletonResponsesForUIDs:includeTo:toQueue:
sendUidAndFlagResponsesForUIDs:sequenceIdentifierProvider:flagSearchResults:toQueue:
sendUidResponsesForSearchArguments:toQueue:
searchUIDs:withFlagRequests:
setTag:
connectTime
gotBadResponse
setIdleCommandSequenceNumber:
_mailboxListFilter
_capabilityFlags
_gotBadResponse
_tag
_connectTime
_connectionState
_separatorChar
_serverNamespace
_selectedMailbox
_capabilities
_lastRequiredHeadersArray
_lastRequiredHeaders
_commandNumber
_data
_readBufferSize
_expirationTime
_streamEventQueue
_additionalHeadersForFetch
_noModSequence
_delegateState
_idleCommandSequenceNumber
_idleSubscriptionCancelable
containsIndex:
indexSet
addIndex:
_indexSetFromUIDs:
addIndexes:
removeObjectForKey:
_flagsForUID:
setMessageFlags:
_uidsWithFlagMaskSet
_uidsWithoutFlagMaskSet
alloc
initWithMask:searchTerms:positiveMatch:
requestWithMask:searchTerms:positiveMatch:
_isPositiveMatch
_mask
_searchTerms
compare:
sortUsingSelector:
initWithUid:
expectedLength
isComplete
bytesFetched
data
handleFetchResult:
processResults
addCommandsToPipeline:withCache:
lengthOfDataBeforeLineConversion
mainConsumer
_pendingFetchResults
_countingConsumer
_mainConsumer
initWithConsumers:
initWithUid:section:length:lengthIsKnown:range:consumer:
mf_shouldFailDownload
done
initWithUid:section:estimatedLength:consumer:
initWithUid:section:length:consumer:
initWithUid:section:range:consumer:
_section
_error
_length
_knownLength
_complete
_range
_originalDataLength
_offsetAdjustment
initWithArray:
indexOfObjectIdenticalTo:
removeObjectIdenticalTo:
makeObjectsPerformSelector:
subdownloads
addSubdownload:
removeSubdownload:
_subdownloads
startOffset
initWithMessage:
setAllowsPartialDownloads:
downloadForMessage:
downloadForUid:section:length:consumer:
downloadForUid:section:expectedLength:consumer:
downloadForUid:section:range:consumer:
handleFetchResponse:forUid:
handleFetchResponses:
processResultsForUid:
cleanUpDownloadsForUid:
addCommandsForDownload:toPipeline:
_downloads
consumers
handleFailureInFunction:file:lineNumber:description:
flagsArray
envelope
bodyStructure
setEnvelope:
internalDate
setInternalDate:
setFetchData:
setMessageSize:
setBodyStructure:
setUniqueRemoteId:
messageFlags
setCustomFlagsArray:
customFlagsArray
modSequenceNumber
setModSequenceNumber:
encoding
_itemType
_modSequenceNumber
_typeSpecific
messageID
messageStore
hasValidCacheFileForMessage:
setPreferredEncoding:
stringValue
mailbox
URLString
remoteMailboxURL
initWithFlags:customFlags:size:uid:
compareByNumberWithMessage:
isPartial
setIsPartial:
isMessageContentsLocallyAvailable
hasTemporaryUid
setHasTemporaryUid:
customFlags
remoteID
originalMailboxURL
_size
_customFlags
_uniqueRemoteId
initWithBytes:length:
bodyParameterForKey:
appendDataForMimePart:toData:withPartData:
setMessageData:isPartial:
parseIMAPPropertyList:
getNumberOfAttachments:isSigned:isEncrypted:
initWithConsumer:
message
allowsPartialDownloads
partial
topLevelPart
setTopLevelPart:
setFetchBodyData:
fetchBodyData
_message
_topLevelPart
_allowsPartialDownloads
_usingPartialDownloads
_startedFetch
_fetchingMessageContents
_fetchingBodyText
_doneAddingSubdownloads
_fetchBodyData
_headerFilter
_headerConsumer
_textFilter
_textConsumer
messageData
mf_rangeOfRFC822HeaderData
mf_subdataWithRange:
preferredEncoding
setHeaders:
headers
headerData
headersIfAvailable
_messageData
_headers
mf_encodeModifiedBase64
dataWithBytes:length:
initWithLength:
mf_decodeModifiedBase64
initWithCharacters:length:
mf_encodedIMAPMailboxName
mf_decodedIMAPMailboxName
getBytes:range:
raise:format:
_deserializeOpSpecificValuesFromData:cursor:
_magic
initWithType:mailbox:
timeIntervalSinceReferenceDate
dateWithTimeIntervalSinceReferenceDate:
deserializedCopyFromData:cursor:
serializeIntoData:
initWithMailboxToCreate:
initWithMailboxToDelete:
initWithFlagsToSet:flagsToClear:forUids:inMailbox:
initWithUidsToCopy:fromMailbox:toMailbox:firstNewUid:
initWithAppendedUid:approximateSize:flags:internalDate:mailbox:
isSourceOfTemporaryUid:
actsOnTemporaryUid:
expungeTemporaryUid:
firstTemporaryUid
lastTemporaryUid
operationType
approximateSize
failureCount
setFailureCount:
usesRealUids
setUsesRealUids:
flagsToSet
flagsToClear
uids
flags
sourceUids
destinationUids
destinationMailbox
sourceUidForTemporaryUid:
getMessageId:andInternalDate:forDestinationUid:
setMessageId:andInternalDate:forMessageWithSourceUid:
_type
_failureCount
_temporaryUids
_mailboxName
_opSpecific
messageIds
internalDates
initWithUTF8String:
initWithBytes:length:encoding:
copyRemoteIDForTemporaryUid:
defaultCenter
postNotificationName:object:userInfo:
acquireNetworkAssertion
_queueDeferredOperation:
lastKnownCapabilities
offlineCacheDirectoryPath
requiresDataForOfflineTransfersFromStore:
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:didDownload:
headerDataForMessage:downloadIfNecessary:
stringByAppendingPathComponent:
writeToFile:options:error:
dateReceived
_dataForTemporaryUid:
mailboxUid
userInfoObjectForKey:
setUid:forMessageWithTemporaryUid:
initWithObjects:forKeys:
taskName
setTaskName:
acquireExclusiveAccessKey
_performCreateOperation:withContext:
_performDeleteOperation:withContext:
_performStoreOperation:withContext:
_performAppendOperation:withContext:
_performCopyOperation:withContext:
drain
removeObjectsInRange:
relinquishExclusiveAccessKey:
setShouldFlattenCacheOperations:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
hash
superclass
debugDescription
initWithIMAPAccount:
account
setFlags:andClearFlags:forMessages:
setFlags:andClearFlags:forUids:forMailbox:
firstUidForCopyingMessages:fromMailbox:toMailbox:
uidForAppendingMessageData:withFlags:andInternalDate:toMailbox:
saveChanges
hasPendingOfflineOperations
hasOperationsForMailbox:
performDeferredOperationsWithConnection:
deferredOperations
_account
_handle
_ops
_lastUid
_lastSave
_lastUidValidity
_opsPending
initWithContentsOfFile:options:error:
defaultManager
mf_makeCompletePath:mode:
_mailboxUidForName:
storeForMailboxUid:
isResponseWithCode:
isValidBase64:
mf_decodeBase64
setValue:forKey:
string
allKeys
quotaRootNames
quotaRootName
uidFlagsChange
flagsFetchResult
enumerateKeysAndObjectsUsingBlock:
publicNamespaces
sharedNamespaces
responseName
parameters
setResponseConsumer:
initWithConnection:response:start:end:
reason
isAlertResponse
setUserData:responseCode:responseInfo:
setCapabilities:
setServerInfo:
setFlags:
setMailboxName:statusEntries:
setMailboxAttributes:separator:mailboxName:extraAttributes:
setMailboxName:quotaRootNames:
setQuotaRootName:quotas:
setPrivateNamespaces:
setPublicNamespaces:
setSharedNamespaces:
keyValuePairs
setResponseName:parameters:
initWithString:
responseConsumer
_responseType
_keyValuePairs
_responseConsumer
allValues
appendData:forSection:
consumersBySection
_consumersBySection
parseSpace
emitWarning:
match:
start
match:upToSpecial:
copyArray
copyNumber
setEnd:
setStart:
copyMessageSet
copyStringFrom:to:withCaseOption:
response
copyAString
lookAhead
increment
copyQuotedString
copyAtom
copyNilOrString
mf_addObject:forKey:
compare:options:
emitError:
getNumber:
logReadChars
copyDateTime
literalWithResponseConsumer:section:
copyLiteral
initWithImmutableData:
copyArrayAllowingNulls:
connection
parseESearchResponseWithContext:
copyLiteralString
nextSeparator
partName
dataHolder
setDataHolder:
_dataHolder
initWithMaximumSize:latency:
library
addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:remoteIDs:setFlags:clearFlags:messageFlagsForMessages:copyFiles:addPOPUIDs:dataSectionsByMessage:
insertMessages:
gotNewMessagesState
dateWithTimeIntervalSinceNow:
timeIntervalSince1970
dateReceivedAsTimeIntervalSince1970
conversationFlags
setGotNewMessagesState:
mf_makeImmutable
shouldAddUID:
setDateReceivedTimeIntervalSince1970:
loadCachedHeaderValuesFromHeaders:
setMessageStore:
subject
setCurrentCount:
reset
messageToSyncFlagsForUID:
handleItems:
_store
_connection
_numNewUIDs
_newMessageCount
_highestModSequence
_flags
_isSearching
messageForRemoteID:
uidForItem:
getDetailsForMessagesWithRemoteIDInRange:fromMailbox:
shouldSyncFlags
flagsForItem:
messageWithLibraryID:options:inMailbox:
sequenceIdentifierForItem:
setSequenceIdentifier:forMessageWithLibraryID:
compactMessages:
_url
_currentUID
_missingUIDs
_libraryDetails
_shouldCompact
_shouldFetch
_shouldSyncFlags
setMaximumLatency:
removeIndex:
lastIndex
indexLessThanIndex:
unsignedIntegerValue
limit
initWithMailboxUid:readOnly:
_nameForMailboxUid:
userInfoBoolForKey:
initWithName:andDelegate:
focusedMessageDidChange:
addObserver:selector:name:object:
_observeChangesInIdleConditions
addCancelable:
removeObserver:
checkInConnection:
invocationWithSelector:target:object:taskName:priority:canBeCancelled:
sharedInvocationQueue
setDisplayName:maxCount:
fetchMessagesWithUIDs:connection:newCount:flagsToSet:queueClass:
syncMessagesWithUIDs:connection:libraryDetails:flagSearchResults:
object
unreadCount
_updateSelectedUID:
_searchFlagsForUIDs:usingConnection:
getDetailsForMessages:absoluteBottom:topOfDesiredRange:range:fromMailbox:
_performActionsOnConnection:uidsToFetch:uidsToSync:messagesToCompact:libraryDetails:flagSearchResults:shouldForce:newUIDsToFetch:
mf_insertObject:usingComparator:allowDuplicates:
numberWithBool:
setFlagsLocallyFromDictionary:forMessages:
minID
performOperationRequiringConnection:withOptions:operation:
notificationWithName:object:userInfo:
postNotification:
updateDeletedCountWithNotDeletedCount:
growFetchWindow
setMailbox:
willFetchMessages
setIsFetching:
notifyConnectionEstablished
minimumRemoteIDForMailbox:
maximumRemoteIDForMailbox:
_shouldContinueToPreservedUID:
_searchArgumentsForSynchronize
_fetchMessagesWithArguments:idRange:onConnection:synchronize:limit:topUIDToCompact:topKnownUID:success:examinedRange:fetchableUIDsFound:preserveUID:numFetchedUIDs:
_fetchServerUnreadCountWithConnection:
_fetchStatusCountWithConnection:
postNotificationName:object:
canProvideMinimumRemoteID
shouldUseNonDeletedForUnreadCount
_updateServerUnreadCount:
setServerUnreadOnlyOnServerCount:forMailbox:
setLastSyncAndMostRecentStatusCount:forMailbox:
expression
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
qualifier
mf_isLegalEmailAddress
currentLocale
supportsFastRemoteBodySearch
criterionType
includeRemoteBodyContent
setIncludeRemoteBodyContent:
criterionByApplyingTransform:
messageIsDeletedCriterion:
andCompoundCriterionWithCriteria:
criterionForSQL
_remoteBodySearchForCriterion:
errorWithDomain:code:userInfo:
_newSearchResponseQueueForConnection:limit:
_uidsForMessageIDs:excludeDeleted:
_fetchMessagesMatchingCriterion:limit:withOptions:handler:
addRemoteID:mailbox:
serverMessageCount
allNonDeletedCountIncludingServerSearch:andThreadSearch:
defaultLoadOptions
copyOfAllMessagesWithOptions:
_flushAllMessageData
structureDidChange
setUserInfoObject:forKey:
canCompact
isOffline
doCompact
offlineCacheIfOffline
displayName
deletedMessages
_shouldLogDeleteActivity
messagesForMailbox:olderThanNumberOfDays:
deleteMessages:moveToTrash:
addMessages:newMessagesByOldMessage:
_uidsForMessages:
offlineCache
subarrayWithRange:
_updateLibraryForTransferedMessages:toDestinationMailbox:newMessageInfo:flagsToSet:
addEntriesFromDictionary:
performBatchOperationWithUIDs:requiringConnection:withOptions:operation:
duplicateMessages:newRemoteIDs:forMailbox:setFlags:clearFlags:messageFlagsForMessages:createNewCacheFiles:
_doUidCopy:toStore:newMessages:
canPerformOfflineAppend
messageDataHolder
setMailboxUidValidity:
dictionaryWithObjectsAndKeys:
cachePolicy
setData:forMessage:isPartial:
appendMessages:unsuccessfulOnes:newMessageIDs:newMessages:flagsToSet:customIMAPFlagsToSet:
allowsAppend
replaceObjectsInRange:withObjectsFromArray:
_doAppend:
replaceObjectsInRange:withObjectsFromArray:range:
store
mf_firstObjectPassingTest:
messageIDHeader
indexOfObject:
mf_map:
initWithResultCode:failedMessages:transferedMessage:
setFlagsFromDictionary:forMessages:
moveUIDSet:toMailboxNamed:newMessageInfo:
shouldExpungeMessagesOnDelete
setConnectionTag:forFlagChanges:forMessages:
removeFlagChanges:forMessages:
_synchronouslySetFlags:clearFlags:forMessages:originalChanges:
relativePath
addFlagChanges:forMailboxPath:UID:
flagChangesLock
addFlagChanges:forMessages:
unlock
_setFlagsFromDictionary:forMessages:
setFlagsForAllMessagesFromDictionary:
setPreferredEncoding:forMessage:
dictionaryWithCapacity:
range
mimeBody
partNumber
fetchLimits
fetchMinBytes
minBytesLeft
filterWithConsumer:
initWithData:partial:incomplete:
_cachedBodyDataContainerForMessage:valueIfNotPresent:
_fetchBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:partial:
_dataForMessage:readHeadersOnly:
_downloadForMessageBodyData:
_performBodyDataDownload:usingConnection:isPartial:
shouldRetryEmptyBodyDownloadForMessage:
_fetchHeaderDataForMessage:downloadIfNecessary:
mf_tryLock
connectionForStore:delegate:options:
checkInConnection:destroy:
setWithArray:
handleAlertResponse:
handleOverQuotaResponse:
observableWithResult:
sharedInstance
observableOnDefaultNotificationCenterWithName:object:
startWith:
isBatterySaverModeEnabled
map:
networkObservable
isNetworkUp
isFatPipe
numberWithInt:
powerObservable
isPluggedIn
lockStateObservable
isLocked
appStateObservable
isForeground
combineLatest:
boolValue
canReceiveNewMailNotifications
serialDispatchQueueSchedulerWithName:qualityOfService:
distinctUntilChanged
doOnError:
observeOn:
_idleConditionsObservable
_scheduleIdleTransition:
observerWithResultBlock:
subscribe:
setShouldUseIDLE:
shouldUseIDLE
_setStatusCount:
fileExistsAtPath:
messageWithRemoteID:inRemoteMailbox:
addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:
messagesWereAdded:
criterionForMailboxURL:
messagesMatchingCriterion:options:
_handleFlagsChangedForMessages:flags:oldFlagsByMessage:
keyEnumerator
nextObject
_setFlagsForMessages:
isMainThread
messageForRemoteID:inMailbox:
numberWithUnsignedLong:
isRemoteSearch
updateDeletedCount
accountRelativePath
sequenceIdentifierForMessagesWithRemoteIDs:inMailbox:
setSequenceIdentifier:forMessagesWithRemoteIDs:inMailbox:
libraryIMAPStore:bodyDownloadBeganForUid:data:section:
libraryIMAPStore:bodyDownloadReceivedMoreDataForUid:data:section:
libraryIMAPStore:bodyDownloadCompletedForUid:data:section:
setHandlerForTemporaryUidToRemoteIDMapping:
setAdditionalFetchHeaders:
setAdditionalSynchronizationSearchArguments:
fetchNumMessages:preservingUID:options:
canFetchSearchResults
messageIdRollCall:
fetchMessagesMatchingCriterion:limit:
storeSearchResultMatchingCriterion:limit:error:
canFetchMessageIDs
fetchMessagesWithMessageIDs:andSetFlags:
fetchMessagesWithRemoteIDs:andSetFlags:
removeAllLocalMessages
deleteMessagesOlderThanNumberOfDays:compact:
_addOfflineTransferMessages:
appendMessages:unsuccessfulOnes:newMessageIDs:newMessages:flagsToSet:
moveMessages:toMailbox:markAsRead:
newDictionaryForLocalFlags:serverFlags:existingDictionary:
willSetFlagsFromDictionary:forMessages:
setFlagsCancelled:forMessages:
_fetchDataForMimePart:range:isComplete:consumer:
_fetchFullBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:didDownload:
bodyFetchRequiresNetworkActivity
remoteIDsFromUniqueRemoteIDs:
reselectMailbox
_changedFlagsForMessage:fetchResponse:newFlags:
fetchPipeline
downloadCache
uniqueRemoteIDsForMessages:
setDownloadDelegate:
cancelationToken
setCancelationToken:
_supportsCustomPermanentFlags
_supportsJunkFlag
_supportsDollarJunkFlag
_supportsNotJunkFlag
_supportsDollarNotJunkFlag
_supportsForwardedFlag
_supportsDollarForwardedFlag
_updatingCache
_updateMetadata
_readyToDealloc
_didSynchronizeOldMessages
_recentsExist
_settingServerCount
_reserved
_downloadCache
_fetchPipeline
_serverDeletedCount
_serverUidNext
_lastHighestModSequence
_selectedUID
_currentFetchUid
_relativePath
_additionalSynchronizationSearchArguments
_additionalFetchHeaders
_downloadDelegate
_cachedConnection
_cachedConnectionLock
_shouldUseIDLE
_cancelationToken
flagChangesForMailboxPath:UID:connectTime:
initWithObjectsAndKeys:
criterionIdentifier
criteria
allCriteriaMustBeSatisfied
doubleValue
dateWithTimeIntervalSince1970:
dataUsingEncoding:
mf_boolForKey:
libraryID
stringByAppendingString:
percentDone
enableThroughputMonitoring:
setExpectedLength:
setPercentDone:
displayedAccountTypeString
_defaultSpecialMailboxNameForType:
standardAccountClass:valueForKey:
_usernameWithHostname:
rangeOfString:
emailAddressHostPart
stringByAppendingFormat:
accountPropertiesValueForKey:value:
setUsername:
setUsesSSL:
_deliveryAccountCreateIfNeeded:
deliveryAccountHostname
accountWithHostname:username:
setShouldUseAuthentication:
deliveryAccountUsesSSL
deliveryAccountPortNumber
setPortNumber:
setPassword:
defaultPathNameForAccountWithHostname:username:
isPredefinedAccountType
usernameIsEmailAddress
statisticsKind
setHostname:
emailAddresses
displayUsername
iconString
derivesDeliveryAccountInfoFromMailAccount
shouldFetchACEDBInfoForError:
_filterMailboxList:forMailboxWithPath:iisServer:
connectionClass
_syncOnly_defaultValueForShouldStoreJunkOnServer
storeDraftsOnServer
storeSentMessagesOnServer
_boolForAccountInfoKey:defaultValue:
parentAccount
accountDescription
credentialWithError:
propertiesForDataclass:
isProvisionedForDataclass:
childAccounts
accountType
identifier
userFullName
_authSchemeForAuthenticationMethod:
accountWithProperties:
defaultPathForAccountWithHostname:username:
setPath:
persistentAccount
setParentAccount:
setAuthenticationType:
setMailAccount:
accountTypeIdentifier
primaryDeliveryAccountIsDynamic
newChildAccountWithParentAccount:error:
_credentialCreateIfNecessary:error:
_deliveryAccount
accountForRenewingCredentials
parentAccountMailProperties
preferredAuthScheme
shouldUseAuthentication
mailAccountIfAvailable
_mailAccount
initWithLibrary:persistentAccount:
authSchemesForAccountClass
schemeWithName:
persistentAccountDidChange:previousAccount:
removePasswordForServiceName:accountName:
passwordForServiceName:accountName:synchronizable:error:
sharedAccountStore
persistentStore
_consumeExistingPreAuthToken
UUID
UUIDString
accountStore
addClientToken:forAccount:
clientTokenForAccount:
oauth2Token
archiveDestinationForMailbox:
emptyFrequencyForMailboxType:
previousFailureCount
initWithUser:password:persistence:
sender
useCredential:forAuthenticationChallenge:
statusCode
finishWithResult:
finishWithError:
stringByRemovingPercentEncoding
gmailAuthAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
URLWithString:
_URLFromUncleanString:
_webLoginErrorWithURL:
sharedCredentialStorage
allCredentials
removeCredential:forProtectionSpace:
future
setScheme:
setHost:
initWithURL:
setHTTPMethod:
setValue:forHTTPHeaderField:
ephemeralSessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
dataTaskWithRequest:
resume
resultWithTimeout:error:
_removeCredential:
localizedDescription
mailboxUidOfType:createIfNeeded:
specialUseAttributeForType:
specialUseAttributesForMailbox:
setWithObject:
displayNameUsingSpecialNamesForMailboxUid:
anyObject
initWithKey:ascending:
sortedArrayUsingDescriptors:
imapNotEnabledPrefix
clientToken
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
_deleteHook
shouldArchiveByDefault
supportsArchiving
archiveSentMessages
enableAccount
shouldEnableAfterError:
xListSupportedOnConnection:
allMailMailboxUid
persistentNameForMailbox:
_enablingPromise
_credential
_clientToken
continuationResponses
failureReason
statusString
substringToIndex:
_urlFromResponse:
displayHostname
registerSchemeClass:
urls
setUrls:
paths
setPaths:
setAccount:
initWithPath:UID:changes:
path
changes
commitTime
setCommitTime:
connectionTag
setConnectionTag:
flushOfflineCache
setHandlerForOfflineCacheFlush:
userInfo
primaryMailboxUid
_readCustomInfoFromMailboxCache:
numberWithInteger:
_writeCustomInfoToMailboxCache:
stopWatchingForTopic:
offlineCacheIfExists
saveState
setLastKnownHostname:
_renameLocalSpecialMailboxesToName:
setDisplayName:
compactWhenClosingMailboxes
setAccountProperty:forKey:
_queueAccountInfoDidChange
components:fromDate:toDate:options:
savePersistentAccount
_setChildren:forMailboxUid:
resetSpecialMailboxes
setConnectionError:
deleteInPlaceForAllMailboxes
mf_isUserCancelledError
reportAuthenticationError:authScheme:
_updateSeparatorAndNamespaceWithConnection:
throttledGetMailboxListWithConnection:
setIsOffline:
setCommitTime:forConnectionTag:
setShortDescription:
removeFlagChangesCommittedBefore:
_purgeStaleFlagChanges
powerlog:eventData:
_releaseAllConnectionsAndCallSuper:edgeForcedOnly:ifIdleForTimeInterval:saveOfflineCache:
_invokeBlock:
retainArguments
isCellularConnection
isFetching
lastUsedTime
autofetchAccount:mailboxUid:
releaseAllConnections
releaseAllForcedConnections
_flushOfflineCache
invocationWithSelector:target:taskName:priority:canBeCancelled:
networkAssertionWithIdentifier:
networkChanged
updateMostRecentStatusCount:
_releaseAllConnectionsAndCallSuper:
isActive
rootMailboxUid
_writeMailboxCacheWithPrejudice:
is3GConnection
is4GConnection
setFetchMinBytes:
setMinBytesLeft:
setFetchMaxBytes:
removeObject:
arrayWithArray:
initWithDictionary:
_listingForMailboxUid:listAllChildren:onlySubscribed:statusDataItems:withConnection:statusEntriesByMailbox:
_listingForMailboxUid:listAllChildren:onlySubscribed:
_copyMailboxWithParent:name:attributes:dictionary:
mailboxUidForRelativePath:create:
pathComponents
mf_fileSystemString
_newMailboxWithParent:name:attributes:dictionary:withCreationOption:
_deleteMailbox:
unselectMailbox:
isStore
parent
_listingForMailboxUid:listAllChildren:
_setSpecialMailbox:forType:
setStoreMailboxType:onServer:
storeMailboxTypeOnServer:
_localMailboxNameForType:usingDisplayName:
renameMailbox:newName:parent:
isMailboxLocalForType:
localAccount
descendantWithExtraAttribute:
specialMailboxNameForType:
setRepresentedAccount:
isSpecialMailbox:
intersectSet:
moveMessages:fromMailbox:toMailbox:markAsRead:
_synchronizeAccountWithServer
getMailboxListWithConnection:statusDataItems:statusEntriesByMailbox:
_loadMailboxListingIntoCache:attributes:children:parent:
_mailboxListingChanged
localizedStringForKey:value:table:
isDraftsMailboxType:
allMailboxUids
mf_filter:
nameForMailboxUid:
globalAsyncScheduler
emptyTrash
_copyMailboxUidWithParent:name:attributes:existingMailboxUid:dictionary:
_assignSpecialMailboxToAppropriateIvar:forType:
setName:
setAttributes:
setExtraAttributes:
attributes
_deleteQueuedMailboxes:
_mailboxesWereRemovedFromTree:withFileSystemPaths:
_waitForMailboxListingLoadToComplete
mailboxUidFromActiveAccountsForURL:
deleteMailboxes:account:
newMailboxNameIsAcceptable:reasonForFailure:
_uidNameForPathComponent:
isShared
childWithName:
canMailboxBeDeleted:
serverPathPrefixAccountValue
removeAccountPropertyForKey:
nowWouldBeAGoodTimeToStartBackgroundSynchronization
setServerPathPrefix:shouldSync:
_pathComponentForUidName:
_fileSystemServerPathPrefix
deleteMessagesFromMailboxUid:olderThanNumberOfDays:
setServerPathPrefix:
setValueInAccountProperties:forKey:
removeObserver:name:object:
setLibrary:
messagesAdded:
mf_MD5Digest
startWatchingForTopic:
swapTopic:forNewTopic:
mustRegisterForPushOnNextConnection
authenticatedConnection
pushedMailboxUids
initWithSet:
_externalMailboxUids
unionSet:
setMustRegisterForPushOnNextConnection:
lastPushRegistration
supportedPushServiceLevel
updatePushRegisteredMailboxes:
setSupportedPushServiceLevel:
setAPSTopic:
startListeningForNotifications
_notificationNameForMailbox:withPrefix:
notificationNamesForPrefix:mailboxUids:
setWithCapacity:
setAccountIdentifier:
setNotificationNamePrefix:
setMailboxNames:
registerForPush:
accountPropertyForKey:
localizedCompare:
_copyMailboxListForNames:
resetMailboxTimer
fetchMailboxList
_schedulePushRegistrationConnection
canFetch
isSyncingNotes
_copyMailboxListPreferenceForKey:
isEnabledForDataclass:
supportsUserPushedMailboxes
_copyUserPushedMailboxes
_updatePushedMailboxesAndNotify:
setWithSet:
setValueInAccountInfo:forKey:
_notesPrefix
_copyPushedMailboxesForPrefix:
mailboxesRegisteredForPushByHash
uppercaseString
_apsDeviceTokenChanged:
connect
canAttemptPushRegistration
_registerForDeviceTokenChanges
apsTopic
_unregisterForDeviceTokenChanges
stopListeningForNotifications
descriptionWithLocale:indent:
defaultPortNumber
defaultSecurePortNumber
saslProfileName
csAccountTypeString
legacyKeychainProtocol
mf_lockOrdering
certUIService
greatestInboxUid
minUID
storeClass
mailboxPathExtension
serviceName
secureServiceName
requiresAuthentication
setCompactWhenClosingMailboxes:
needToSynchronizeMailboxCaches
_didSynchronizeMailboxCachesAndFoundChanges:
minimumPartialDownloadSize
deleteInPlaceForMailbox:
connectAndAuthenticate:
checkInConnectionsForStore:
releaseAllConnectionsIdleForTimeInterval:
releaseNetworkAssertion
canGoOffline
_specialMailboxUidWithType:create:
getMailboxListWithConnection:
_synchronouslyLoadListingForParent:
_mailboxPathPrefix
_URLScheme
_infoForMatchingURL:
supportsAppend
supportsRemoteAppend
supportsMailboxEditing
shouldRestoreMessagesAfterFailedDelete
registerPushNotificationPrefix:forMailboxUids:
_registerPushNotificationPrefix:forMailboxNames:
changePushedMailboxUidsAdded:deleted:
handlePushNotificationOnMailboxes:missedNotifications:
transferNotificationSessionToAccount:
_cachedConnections
_mailboxesToSynchronize
_offlineCache
_greatestInboxUid
_timeLastFetchedMailboxList
_flagChangesLock
_recentFlagChanges
_connectionLock
_nextConnectionTag
_packetContextAssertion
_lockOrderingArray
_offlineCacheFlushHandler
_fetchedMailboxList
_isOffline
_lastKnownCapabilities
_lastPushRegistration
_apsTopic
_pushedMailboxUids
_pushRegisteredMailboxes
_supportedPushServiceLevel
_observingPushedFoldersPrefsChanged
_mustRegisterForPushOnNextConnection
_didRequestPushRegistration
_listeningForDeviceTokenChanges
_didUpdateSeparatorAndNamespace
_objectForAccountInfoKey:
_newConnection
isMobileMail
flushCriteria
authenticationMechanisms
authenticatorForAccount:connection:
canAuthenticateAccountClass:connection:
authenticatorClass
humanReadableName
JSONObjectWithData:options:error:
saslName
_sentResponse
_moveMessageSet:toMailboxName:command:newMessageInfo:
_UIDPlusInfoFromIMAPResponses:
moveSequenceSet:toMailboxName:newMessageInfo:
valueForKey:
isSSLEditable
predefinedValueForKey:
emailAddressWithUsername:
defaultAllowedCharacterSet
getConfigurationFromServerForEmail:
shouldDisplayHostnameInErrorMessages
transferDisabledMailboxUids
URLForMessage:
saveSentFolder
initWithCondition:
sharedController
addDiagnosticsGenerator:
removeDiagnosticsGenerator:
bundleWithPath:
classNamed:
APSConnection
initWithEnvironmentName:launchBundleIdOnDemand:queue:
publicToken
connection:didReceivePublicToken:
unlockWithCondition:
_startAPS_nts
setEnabledTopics:ignoredTopics:
countForObject:
lockWhenCondition:beforeDate:
topic
wasFromStorage
accountWithUniqueId:
condition
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
_stopAPS_nts
_queue
_pushService
_watchedTopics
_unwatchedTopics
_deviceTokenLock
_deviceToken
isAtEnd
scanInteger:
scanLocation
characterAtIndex:
setScanLocation:
addIndexesInRange:
parseIndexSetFromSequenceSet:
parseSearchReturn:
isSubclassOfClass:
logReadChars:length:
initWithUnsignedLongLong:
dateFromString:
hadWarningOrError
resetWarningOrError
_response
_start
_end
_originalStart
_originalEnd
_lastLoggedChar
_invalid
whitespaceAndNewlineCharacterSet
_messageIDsFromFetchResultData:
enumerateObjectsUsingBlock:
mf_subarraysOfSize:
_searchUidsForMessageIDs:excludeDeleted:
_getReferencesForMessageSet:
_getFirstLevelMessageIDsForReference:
uidsReferencedBy:
load
requiresPassword
initWithAuthScheme:account:connection:
castleAccount
personID
authToken
dataWithCapacity:
setCastleAccount:
_castleAccount
_resetAppleAccount
isAccountClassEquivalentTo:
isUsernameEquivalentTo:
_accountsChanged:
appleAccount
mf_addressDomain
aa_firstName
setGivenName:
aa_lastName
setFamilyName:
localizedStringFromPersonNameComponents:style:options:
parentAccountIdentifier
_mailPropertyFromAppleAccountForKey:
defaultEmailAddress
aa_personID
authTokenWithError:
aa_authTokenWithError:
mf_isInaccessibleAccountCredentialError
firstEmailAddress
emailAddressesAndAliases
_fromEmailAddressesIncludingDisabled:
emailAddressesDictionary
receiveEmailAliasAddresses
aa_password
initForDataclass:
showWithHandler:
deliveryHostname
deliveryPortNumber
deliveryUsesSSL
setPreferredAuthScheme:
aa_authToken
mf_formattedAddressWithName:email:useQuotes:
setDefaultEmailAddress:
setLocalDefaultEmailAddress:
setEmailAddresses:
setReceiveEmailAliasAddresses:
setLocallyEnabled:forEmailAddress:
_updateEmailAddressAndAliases
aliasLookupURL
requestWithURL:
_aliasAuthorizationHeader
_aliasUserAgent
lastEmailAliasesSyncDate
_headerStringFromDate:
_aliasesFromData:
_emailsFromData:
_defaultEmailAddressFromData:
isEqualToDictionary:
fromEmailAddresses
setLastEmailAliasesSyncDate:
host
aa_updatePropertiesForAppleAccount:completion:
mf_uncommentedAddress
_prepareAliasData
dataWithJSONObject:options:error:
setHTTPBody:
isEquivalentTo:hostname:username:
allowsTrustPrompt
emailAddressesAndAliasesList
fromEmailAddressesIncludingDisabled
setPasswordInKeychain:
_removePasswordInKeychain
passwordFromKeychain
_aliasesFromOldData:
setEnabled:forEmailAddress:
updateEmailAliases
pushUpdateForAliasData
_appleAccountLock
_appleAccount
_readyForPushRegistration
_aliasChanges
_updatedDefaultEmail
_aliasUpdateQueue
@16@0:8
@24@0:8@16
B24@0:8@16
v16@0:8
v52@0:8I16@20Q28@36@44
Q16@0:8
v24@0:8Q16
v20@0:8B16
B16@0:8
v24@0:8@16
@"NSMutableArray"
I16@0:8
v20@0:8I16
@"MFIMAPFetchResult"
@"<MFDataConsumer>"
@"NSString"
i16@0:8
i48@0:8*16Q24Q32^B40
Q40@0:8^{?=i@@Q@}16Q24^@32
@24@0:8^{?=i@@Q@}16
@32@0:8@16^{?=i@@Q@}24
B20@0:8i16
@40@0:8@16@24^{?=i@@Q@}32
v32@0:8@16@24
i40@0:8@16@24@32
B32@0:8@16@24
@60@0:8i16@20@28i36B40@44^@52
@52@0:8@16i24B28@32^@40i48
@48@0:8@16i24B28@32^@40
@28@0:8@16i24
v24@0:8d16
B28@0:8i16@20
@40@0:8@16@24^B32
Q40@0:8@16@24^B32
I20@0:8I16
@32@0:8@16@24
B36@0:8@16B24@28
B36@0:8@16B24{?=II}28
@32@0:8^{?=i@@Q@}16@24
B40@0:8@16@24^@32
B56@0:8@16@24@32@40^@48
@24@0:8B16B20
@20@0:8B16
v32@0:8^Q16^I24
@20@0:8I16
v32@0:8d16Q24
B44@0:8{?=II}16@24B32@36
@24@0:8{?=II}16
@32@0:8{?=II}16@24
@56@0:8@16{_NSRange=QQ}24Q40^Q48
@40@0:8@16{_NSRange=QQ}24
@24@0:8^{_NSZone=}16
@24@0:8q16
@32@0:8^{?=i@@Q@}16Q24
B32@0:8^{?=i@@Q@}16@24
B40@0:8@16@24@32
B48@0:8@16@24@32@40
v32@0:8^{?=i@@Q@}16Q24
v20@0:8i16
d16@0:8
@"<MFIMAPMailboxListFilter>"
@"NSMutableSet"
@"NSArray"
@"NSMutableData"
@"MFInvocationQueue"
{?="holder"@"MFWeakReferenceHolder""delegate"^v"shouldHandleUntaggedResponse"b1"didReceiveResponse"b1"didFinishSelect"b1"didDisconnect"b1"didBeginBodyLoad"b1"didReceiveMoreBodyData"b1"didFinishBodyDataLoad"b1"bodyDataReadSize"b1"setServerMessageCount"b1"setHighestModSequence"b1"willRemoveDelegation"b1"shouldStartIdle"b1}
@"<MFCancelable>"
Q24@0:8Q16
v36@0:8@16Q24B32
@24@0:8Q16
@"NSMutableDictionary"
@36@0:8Q16@24B32
@"MFCountingDataConsumer"
@"MFBaseFilterDataConsumer"
@64@0:8I16@20Q28B36{_NSRange=QQ}40@56
@44@0:8I16@20Q28@36
@52@0:8I16@20{_NSRange=QQ}28@44
@"NSError"
{_NSRange="location"Q"length"Q}
v28@0:8@16I24
@20@0:8i16
(?="envelope"@"NSArray""internalDate"@"NSDate""messageSize"Q"bodyStructure"@"NSArray""bodySectionInfo"{?="section"@"NSString""startOffset"Q"sectionData"@"NSData"}"uid"I"uniqueRemoteId"Q"flags"{?="messageFlags"Q"customFlags"@"NSArray"})
@44@0:8Q16@24Q32I40
q24@0:8@16
@"MFMessage"
@"MFMimePart"
@"<MFCollectingDataConsumer>"
v28@0:8@16B24
@"NSData"
@"MFMessageHeaders"
@32@0:8@16^Q24
C16@0:8
@28@0:8i16@20
@48@0:8@16@24@32@40
@44@0:8@16@24@32I40
@48@0:8I16I20@24@32@40
B20@0:8I16
B36@0:8^@16^@24I32
v36@0:8@16@24I32
(?="store"{?="trueFlags"@"NSArray""falseFlags"@"NSArray""uids"^{__CFArray}}"append"{?="uid"I"flags"@"NSArray""internalDate"i"size"I}"copy"{?="srcUids"^{__CFArray}"dstUids"^{__CFArray}"destinationMailbox"@"NSString"})
^{__CFArray=}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B40@0:8@16@24^{?=i@@Q@}32
v40@0:8@16@24^{?=i@@Q@}32
v40@0:8@16@24@32
I24@0:8@16
B40@0:8@"MFIMAPConnection"16@"MFIMAPResponse"24^{?=i@@Q@}32
v40@0:8@"MFIMAPConnection"16@"MFIMAPResponse"24^{?=i@@Q@}32
v40@0:8@"MFIMAPConnection"16@"NSMutableData"24@"NSString"32
I24@0:8@"MFIMAPConnection"16
v24@0:8@"MFIMAPConnection"16
B24@0:8@"MFIMAPConnection"16
v48@0:8@16@24@32@40
I40@0:8@16@24@32
I48@0:8@16@24@32@40
v32@0:8@16^{?=@@^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}IIi@}24
@"IMAPAccount"
@"NSFileHandle"
v36@0:8@16i24@28
v48@0:8Q16@24@32@40
@"NSDictionary"
(_IMAPResponseData="basic"{?="responseCode"i"responseInfoAndOrUserData"@}"capabilities"@"NSArray""number"Q"flags"@"NSArray""status"{?="mailboxName"@"NSString""entries"@"NSDictionary"}"searchResults"@"NSArray""list"{?="mailboxAttributes"Q"separatorAndOrMboxName"@"extraAttributes"@"NSArray"}"fetch"{?="number"Q"items"@"NSArray""modSeqNumber"Q}"quotaRoot"{?="mailboxName"@"NSString""quotaRootNames"@"NSArray"}"quota"{?="quotaRootName"@"NSString""quotas"@"NSArray"}"uidFlags"{?="uids"@"NSString""flagsFetchResult"@"MFIMAPFetchResult""change"b1}"serverInfo"@"NSDictionary""namespace"{?="private"@"NSArray""public"@"NSArray""shared"@"NSArray"}"other"{?="name"@"NSString""parameters"@"NSArray"})
@"MFIMAPResponseConsumer"
@"MFDataHolder"16@0:8
@"MFDataHolder"
B24@0:8Q16
@"MFLibraryIMAPStore"
@"MFIMAPConnection"
Q24@0:8@16
@"NSMutableIndexSet"
v24@0:8@?16
@"NSString"24@0:8@"NSArray"16
v32@0:8@"NSString"16@"NSArray"24
@28@0:8@16B24
Q56@0:8@16@24Q32Q40#48
Q48@0:8@16@24@32@40
v76@0:8@16^@24^@32^@40@48@56B64^I68
v24@0:8^Q16
Q108@0:8@16@24@32B40Q44Q52Q60^B68^{_NSRange=QQ}76^Q84^Q92^Q100
q40@0:8Q16@24Q32
@28@0:8@16I24
v40@0:8@16I24i28@?32
q28@0:8@16I24
@36@0:8@16I24^@28
q32@0:8@16Q24
v24@0:8i16B20
B40@0:8^{?=@@@@B@@@@II}16@24@32
Q24@0:8^{?=@@@@B@@@@II}16
Q56@0:8@16@24@32@40@48
Q64@0:8@16@24@32@40@48@56
@36@0:8@16@24B32
@40@0:8Q16Q24@32
B28@0:8I16@20
B56@0:8@16{_NSRange=QQ}24^B40@48
@44@0:8@16^@24B32^B36
B32@0:8B16i20@?24
B40@0:8@16B24i28@?32
B40@0:8@16@24^Q32
v24@0:8I16I20
@"MFIMAPDownloadCache"
@"MFIMAPCommandPipeline"
@"NSLock"
@"MFCancelationToken"
v36@0:8@16@24i32
@32@0:8@16^@24
@28@0:8B16^@20
@"DeliveryAccount"
@"MFOSXServerIMAPAccount"
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
i24@0:8@16
i20@0:8i16
@"MFPromise"
@"NSURLCredential"
@"GmailAccount"
@36@0:8@16I24@28
^v16@0:8
v36@0:8@"NSMutableArray"16@"NSString"24i32
@36@0:8@16@24i32
v36@0:8B16B20d24B32
@56@0:8@16B24B28@32@40^@48
@32@0:8@16B24B28
@48@0:8@16@24I32@36i44
v28@0:8@16i24
@24@0:8i16B20
@44@0:8@16@24@32B40
@52@0:8@16@24I32@36@44
B32@0:8@16^@24
@36@0:8@16I24d28
v28@0:8d16I24
v36@0:8I16@20@28
@"MFIMAPOperationCache"
@"NSRecursiveLock"
@"NSSet"
B32@0:8#16@24
q40@0:8@16@24^@32
q44@0:8@16@24i32^@36
@"YahooAccount"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSString"24
@"NSData"16@0:8
@"NSObject<OS_dispatch_queue>"
@"APSConnection"
@"NSCountedSet"
@"NSConditionLock"
@48@0:8@16B24@28^B36i44
@48@0:8@16@24r*32r*40
r*16@0:8
v24@0:8r*16
B24@0:8^Q16
B24@0:8r*16
B32@0:8r*16r*24
^{__CFArray=}20@0:8B16
@36@0:8r*16r*24i32
@"MFIMAPResponse"
B40@0:8@16^@24@32
@40@0:8@16@24@32
@"CastleIMAPAccount"
@24@0:8^@16
v28@0:8B16@20
@"MFLock"
@"ACAccount"
