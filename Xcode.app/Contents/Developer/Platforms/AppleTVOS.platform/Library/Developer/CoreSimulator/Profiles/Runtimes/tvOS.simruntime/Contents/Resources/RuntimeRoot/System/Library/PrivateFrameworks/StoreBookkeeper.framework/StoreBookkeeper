since-version
domain
deflate() failed: %s
deflateInit2() failed: %s
ERROR: unable to zip large data of size ~%.3f GB
%02x
-[SBKStoreClampsController _canScheduleTransactionBasedOnUserCancelledSignIn:error:]
Drop transaction: <%p> -- userCancelledBackOff until: %@ [%fs]
SBK_KVSTORE_CLAMPS_LOG
-[SBKStoreClampsController _canScheduleTransactionBasedOnBackOff:error:]
Drop transaction: <%p> -- BackOff until: %@ [%fs]
-[SBKStoreClampsController _canScheduleTransactionBasedOnAccountIdentifierCheck:error:]
Drop transaction: <%p> -- AccountIdentifierCheck != 0
-[SBKStoreClampsController _canScheduleTransactionBasedOfNetworkingBlocked:error:]
Drop transaction: <%p> -- Networking BlockedUntil: %@
-[SBKStoreClampsController _canScheduleTransactionBasedOnType:error:]
Drop transaction: %@ -- Interval since last request: %f [%fs]
v16@?0@"NSMutableDictionary"8
/Library/Caches/com.apple.xbs/Sources/StoreBookkeeper_Sim/StoreBookkeeper-4019.100.87/StoreBookkeeper/iTMSKeyValueStorage/SBKStoreClampsController.m
[StoreBookkeeper] SBKStoreClampsController - will avoid presenting authentication for %02llu:%02llu:%2f
-[SBKStoreClampsController hasAuthenticatedTooRecentlyForTransaction:error:]
Drop transaction: %@ -- Too soon since last authentication: %f [%fs]
-[SBKStoreClampsController reset]
Reseting Clamps
SBKSyncClamps
com.apple.amp
-[SBKStoreClampsController saveToUserDefaults]_block_invoke
Archiving SBKStoreClampsController resulted in error:%@
SBKStoreClampsController.m
SBKUserCancelledSignInBackOffUntil
SBKNetworkingBlockedUntil
SBKUserAcceptedSyncTimestamp
SBKAuthenticationNeededTimestamp
SBAccountIdentifierCheckTimestamp
SBKTransactionClamps
SBKVersion
Version
Current Date = %@,
accountIdentifierCheckTimestamp = %@,
authenticationNeededTimestamp = %@,
userAcceptedSyncTimestamp = %@,
networkingBlockedUntil = %@,
backOffUntil= %@,
userCancelledSignInBackOffUntil = %@
+[SBKStoreClampsController sharedClampsController]_block_invoke
Unarchiving SBKStoreClampsController resulted in error:%@
%@: key=%@, payload=%@
kvsPayload
kvsKey
-[SBKTransactionController operation:failedWithError:]
-[SBKTransactionController operation:failedWithError:]_block_invoke
[StoreBookkeeper] %@.  Will suppress authentication dialogs for a while.
User cancelled sign-in
User entered wrong credentials
Operation failedWithError: %@ -- inputError = %@
SBK_KVSTORE_LOG
transaction controllers with delegates can not use transaction finish blocks
SBKTransactionController.m
Delegate calls should be done on the main thread
SBKTransactionFinishedBlock
-[SBKTransactionController _onQueue_processOperationOutput:operation:operationAuthenticated:]
/Library/Caches/com.apple.xbs/Sources/StoreBookkeeper_Sim/StoreBookkeeper-4019.100.87/StoreBookkeeper/iTMSKeyValueStorage/SBKTransactionController.m
Not using deserialized responseDictionary because transactions have been cancelled!
Unknown error in response: %@
Validation error indicated by response responseDictionary: %@
Generic error indicated by response responseDictionary: %@
Deserialized server response produced response data: %@
Deserialized server response: %@
Not using deserialized response because it is not a dictionary as expected!
-[SBKTransactionController _onQueue_transactionDidCancel:withError:]_block_invoke
Transaction Failed: %@ -- Error: %@
-[SBKTransactionController _onQueue_currentTransactionDidFinish]
Transaction Finished: %@
No url specified in transaction %@!
No domain specified in transaction %@!
-[SBKTransactionController _onQueue_canScheduleTransaction:error:]
Unable to schedule (due to clamps %@) transaction %@.
-[SBKTransactionController _onQueue_scheduleTransaction:isRetry:]
Holding transaction %@ (due to clamps) %.2f seconds
Scheduling Transaction: %@
-[SBKTransactionController _onQueue_processCurrentTransaction]
Processing Transaction: %@
-[SBKTransactionController _onQueue_processPendingTransactions]
Transaction In progress: %@
No Pending Transactions
-[SBKTransactionController _onQueue_cancelTransaction:error:]
Cancelling transaction: %@ -- isCurrentTransaction: %@
[%@ _beginBackgroundTask]
com.apple.SBKTransactionController
com.apple.SBKTransactionController.operationQueue
version
deleted-ok
put-ok
B24@?0@"NSDictionary"8@"NSString"16
/Library/Caches/com.apple.xbs/Sources/StoreBookkeeper_Sim/StoreBookkeeper-4019.100.87/StoreBookkeeper/iTMSKeyValueStorage/SBKSyncResponseData.m
conflicted
ERROR: server rejected %@ because the payload was too big.
oversize
reason
rejected
puts
deletes
peer-ops
v40@?0@"NSMutableArray"8@"NSString"16@"NSString"24@?<B@?@"NSDictionary"@"NSString">32
value
%@ response: syncAnchor = %@
put-oks(%@), delete-oks(%@), updatedKeys(%@) = %@
conflictedKeys(%@) = %@
deletedKeys(%@) = %@
SBKStoreErrorDomain
SBKStoreErrorUserInfoKeyRetrySeconds
SBKStoreErrorUserInfoKeyCurrentStoreAccountName
SBKStoreErrorUserInfoKeyPreviousStoreAccountName
<%@:%p> "%@"
SBKStoreErrorServerClamp
SBKStoreErrorUserClamp
SBKStoreErrorCodeUnknown
SBKStoreErrorCodeGenericValidationError
SBKStoreErrorCodeGenericBookkeeperServiceError
SBKStoreErrorCodeAuthenticationError
SBKStoreErrorCodeNoStoreAccount
SBKStoreErrorCodeStoreAccountLoggedOut
SBKStoreErrorCodeStoreAccountMismatch
SBKStoreErrorCodeStoreAccountSessionExpired
SBKStoreErrorCodeStoreAccountUserCancelSignIn
SBKStoreErrorCodeStoreAccountUserCredentials
SBKStoreErrorCodeGeneric
SBKStoreErrorCodeValidation
SBKStoreErrorCodeAuthenticationClamp
SBKStoreErrorCodeServerClamp
SBKStoreErrorCodeUserClamp
SBKStoreErrorCodeNetworkingBlocked
SBKStoreErrorCodeKillSwitch
SBKStoreErrorCodeDisabled
SBKStoreErrorCodeKeyBagKillSwitch
SBKStoreErrorCodeKeyBagLoadFailure
SBKStoreErrorCodeMissingURL
SBKStoreErrorCodeMissingDomain
SBKStoreErrorCodeCancelled
SBKStoreErrorCodeDelegateCancelled
SBKStoreErrorCodeTimeout
Error Code = %lld
Error Code = %@ (%d)
SBKStoreErrorCodeGeneric: Request Invalid: It's likely that there is something wrong with the request format (underlyingError = %@).
*** Please file a radar against 'Purple StoreBookkeeper / 1.0'
*** - enable logging in Settings->Internal: iTunes Store->Verbose and iPod->Bookmark Syncing->Verbose
*** - reproduce, then run > 'ituneskvsTool -debug' and attach console and PurplePod output
SBKStoreErrorCodeGeneric: An unspecified server-side error was encountered (underlyingError = %@).
*** Please file a radar against 'Purple StoreBookkeeper / 1.0'
*** - enable logging in Settings->Internal: iTunes Store->Verbose and iPod->Bookmark Syncing->Verbose
*** - reproduce, then run > 'ituneskvsTool -debug' and attach console and PurplePod output
SBKStoreErrorStoreAccountMismatch
SBKStoreErrorStoreAccountLoggedOut
SBKTransactionErorGeneric: An unknown server error occurred. (underlyingError = %@) 
*** Please file a radar against 'Purple StoreBookkeeper / 1.0'
*** - enable logging in Settings->Internal: iTunes Store->Verbose and iPod->Bookmark Syncing->Verbose
*** - reproduce, then run > 'ituneskvsTool -debug' and attach console and PurplePod output
<%@: %p> (PrimaryURL: %@)
-[SBKTransactionURLOperation setShouldAuthenticate:]
[StoreBookkeeper] setting up an authentication context - will FORCE authentication!
/Library/Caches/com.apple.xbs/Sources/StoreBookkeeper_Sim/StoreBookkeeper-4019.100.87/StoreBookkeeper/iTMSKeyValueStorage/SBKTransactionURLOperation.m
SBK_REQUEST_LOG
Use +operationWithRequest:delegate:
SBKTransactionURLOperation.m
ordinal
delete
%lld
none
/Library/Caches/com.apple.xbs/Sources/StoreBookkeeper_Sim/StoreBookkeeper-4019.100.87/StoreBookkeeper/iTMSKeyValueStorage/SBKSyncRequestData.m
-[SBKSyncRequestData serializableRequestBodyPropertyList]
Sync request payload (plist): %@
SBK_KVSTORE_SERIALIZER_LOG
conflict-detection
WARNING: no data was provided for updated key %@, skipping just that item
SBKSync.SyncFailureLastAccountIdentifier
SBKSync.SyncFailureLastAccountName
SBKSync.LastAccountIdentifier
SBKSync.LastAccountName
-[SBKStoreAuthenticationController authenticationErrorsForTransaction:]
AccountIdentifier mismatch: %@ vs %@ [transaction = %@]
No longer logged in Use Alert %@ [transaction = %@]
First Use Alert %@ [transaction = %@]
/Library/Caches/com.apple.xbs/Sources/StoreBookkeeper_Sim/StoreBookkeeper-4019.100.87/StoreBookkeeper/iTMSKeyValueStorage/SBKStoreAuthenticationController.m
SBK_STOREAUTHENTICATION_LOG
-[SBKStoreAuthenticationController isAuthenticationValidForTransaction:error:]
Doesn't matter what the DISD is set to since authentication is forced for transaction: %@
SBKLogFilter
SBKLogRuntimeOverride
SBKLogRuntimeOverridePattern
[StoreBookkeeper] %@
%@ %@[%d:%x] [StoreBookkeeper] %@
YYYY-MM-dd HH:mm:ss.SSS
%s %@
%s <nil>
[%@:%d] %@
[%@:%d] <nil>
, SBK_STOREAUTHENTICATION_LOG
LogAuthEvents
, SBK_KVSTORE_DESERIALIZER_LOG, SBK_KVSTORE_SERIALIZER_LOG, SBK_KVSTORE_REQUEST_LOG
LogSyncEventData
, SBK_UPPSTORE_LOG, SBK_SYNCHANDLER_LOG, SBK_KVSTORE_LOG, SBK_KVSTORE_CLAMPS_LOG, SBK_LOG_TASKS
LogSyncEvents
, %@
/Library/Caches/com.apple.xbs/Sources/StoreBookkeeper_Sim/StoreBookkeeper-4019.100.87/StoreBookkeeper/Utilities/SBKLogger.m
Invalid RegexPattern: %@ -- Error: %@
LogDefaults.v2
LogDefaults.v1
logLevel
%@-%@
%@ domain = %@, PUT: %@, %@, %@
[request: payload-pair=%@, anchor=%@]
[result: payload-pair=%@, anchor=%@]
[client: payload-pair=%@, anchor=%@]
*unversioned*
%@, assertionID = %llu
v16@?0@"NSNotification"8
com.apple.storebookkeeper-%@%@
<%@:%p; held=%@; info='%@', underlying assertion = %@>
void DebugNoteAssertionReleased(NSInteger, NSString *__strong)
[SBKTaskAssertion] %@
released assertion (%@) -- %@, active assertionIDs = %@
%-2lld
**INVALID**
assertionID = %@
( %@ )
Internal Error -- released assertion ID %lld can not be found (debugInfo=%@)
SBKTaskAssertion.m
[SBKTaskAssertion] will invalidate underlying assertion: %@
/Library/Caches/com.apple.xbs/Sources/StoreBookkeeper_Sim/StoreBookkeeper-4019.100.87/StoreBookkeeper/Utilities/SBKTaskAssertion.m
SBK_LOG_TASKS
void DebugNoteAssertionTaken(NSInteger, NSString *__strong)
acquried assertion (%@) -- %@, active assertionIDs = %@
Internal Error -- assertion ID %lld is already in use (debugInfo=%@)
[SBKTaskAssertion] task created underlying assertion: %@
SBKPreferencesDidChangeNotification
com.apple.storebookkeeper
_didRegister-
com.apple.storebookkeeper.defaultschange
UIApplicationBackgroundTaskWillExpireNotification
UIApplication
tstm
plct
hbpl
bktm
<SBKMetadata:%p, id=%-32s, bktm=%@, hbpl=%d, plct=%llu, timestamp=%@>
*** distant past timestamp ***
*** (-) 1904 timestamp ***
*** 1904 timestamp ***
*** (-) 1970 timestamp ***
*** 1970 timestamp ***
no timestamp
(%f) %@
%02llu:%02llu:%.2f
playCount
hasBeenPlayed
bookmarkTime
timestamp
itemIdentifier
test-item-identifier
/Library/Caches/com.apple.xbs/Sources/StoreBookkeeper_Sim/StoreBookkeeper-4019.100.87/StoreBookkeeper/PlaybackPosition/SBKUniversalPlaybackPositionMetadata.m
pver
ERROR: encountered invalid data while unarchiving payload for itemIdentifier: %@
Unarchiving error: %@
v32@?0@"NSString"8@16^B24
%llu
storeItemAdamID
subscriptionStoreItemAdamID
podcastURL
podcastGUID
title
artist
albumTitle
hasBeenPalyed
bookmarkMetadataTimestamp
mediaEntityType
SBKUniversalPlaybackPositionStoreDidSynchronizeNotification
9223372036854775807
-[SBKUniversalPlaybackPositionStore _onQueueSuspendTimer]
suspending update timer
-[SBKUniversalPlaybackPositionStore _onQueueScheduleTimer]_block_invoke
scheduling next timer update at %@
%@ (%@ from now)
%lld minutes, %lld seconds
%.2f seconds
scheduled timer date already passed.  Firing immediately
AutoSyncRateInMinutes
-[SBKUniversalPlaybackPositionStore _onQueueLoadBagContextWithCompletionHandler:]
v24@?0@"SBKStoreURLBagContext"8@"NSError"16
_onQueueLoadBag - load bag operation beginning...
-[SBKUniversalPlaybackPositionStore _onQueueLoadBagContextWithCompletionHandler:]_block_invoke_4
v32@?0@?<v@?>8@16@"NSError"24
 ERROR = '%@'.
_onQueueLoadBag - load bag completed.%@
SBKUPPStore Load Bag
_onQueueLoadBag - load bag already in progress.  pending our completion block to be notified when it completes.
_onQueueLoadBag - skipping bag load: _accountIdentifier=%@ [no valid account identifier]
GET value
v24@?0@"SBKStoreURLBagContext"8@?<v@?B@"NSError">16
-[SBKUniversalPlaybackPositionStore _onQueuePullMetadataItemWithItemIdentifier:completionBlock:]_block_invoke_2
v24@?0B8B12@"NSError"16
_onQueueSync - pull value operation beginning...
v20@?0B8@"NSError"12
PUT value
-[SBKUniversalPlaybackPositionStore _onQueuePushMetadataItem:completionBlock:]_block_invoke
_onQueueSync - push value operation beginning...
-[SBKUniversalPlaybackPositionStore _onQueueSynchronizeImmediatelyWithCompletionHandler:]
synchronize
-[SBKUniversalPlaybackPositionStore _onQueueSynchronizeImmediatelyWithCompletionHandler:]_block_invoke
_onQueueSync - synchronize operation beginning...
_onQueueSync - synchronize already in progress.  pending our completion block to be notified when it completes.
-[SBKUniversalPlaybackPositionStore _onQueueRunTaskWithName:taskCompletionHandler:runTaskBlock:]
-[SBKUniversalPlaybackPositionStore _onQueueRunTaskWithName:taskCompletionHandler:runTaskBlock:]_block_invoke_2
_onQueueSync - %@ completed. %@
SBKUPPStore Synchronize
_onQueueSync - beginning %@ operation...
_onQueueRunTaskWithName %@ - short circuiting. _accountForSyncing=nil
-[SBKUniversalPlaybackPositionStore _onQueueLoadRemoteDomainVersionWithCompletionBlock:]
-[SBKUniversalPlaybackPositionStore _onQueueLoadRemoteDomainVersionWithCompletionBlock:]_block_invoke
v16@?0@"NSError"8
-[SBKUniversalPlaybackPositionStore _onQueueLoadRemoteDomainVersionWithCompletionBlock:]_block_invoke_2
SBKUPPStore LookupDomainVersion
%s - beginning %@...
domain version lookup
%s - %@ already in progress.  pending our completion block to be notified when it completes.
v24@?0@"NSString"8@"NSError"16
-[SBKUniversalPlaybackPositionStore resignActive]_block_invoke
-[SBKUniversalPlaybackPositionStore resignActive]_block_invoke_2
finished synchronizing changes for resignActive
starting synchronizing changes for resignActive
SBKUniversalPlaybackPositionStore.queue
Invalid paramter.  no domain specified
SBKUniversalPlaybackPositionStore.m
-[SBKPlaybackPositionSyncRequestHandler transactionController:transactionDidFinish:]
SBK_REQUEST_HANDLING_LOG
-[SBKPlaybackPositionSyncRequestHandler transactionController:transactionDidFail:error:]
Detected account change.  Getting remote items since version 0 instead of %@
-[SBKPlaybackPositionSyncRequestHandler _signalKVSTransactionCompletion:withError:]
transaction is being canceled.  error = %@
completionConditionLock
-[SBKPlaybackPositionSyncRequestHandler _mergeMetadataItemsFromSyncResponse]
Handled items in response, will save %lld items locally and push back %lld conflict resolutions
keys to save to local db = %@
keys to push to cloud db = %@
i12@?0i8
you can not nest synchronization calls
SBKPlaybackPositionSyncRequestHandler.m
-[SBKPlaybackPositionSyncRequestHandler _synchronize:]
/Library/Caches/com.apple.xbs/Sources/StoreBookkeeper_Sim/StoreBookkeeper-4019.100.87/StoreBookkeeper/PlaybackPosition/SBKPlaybackPositionSyncRequestHandler.m
Finished synchronization
@"SBKUniversalPlaybackPositionMetadata"8@?0
Committing merged items with domainRevision: %@ to local database: %@
WARNING: sent resolved conflict to server, but still received conflicts in the response, saving those for next time...
Sending merged items to server: %@
Performing sync with server using syncAnchor = %@
dataSource transaction context = %@
Gathered local %d items to sync from dataSource: %@
v16@?0@"<SBKUniversalPlaybackPositionMediaItem>"8
ERROR: will skip syncing item with no sync metadataIdentifier: %@
Beginning synchronization
Skipping synchronize: synchronization already in progress
SBKPlaybackPositionSyncRequestHandler.queue
SBKPlaybackPositionSyncRequestHandler.syncOperationQueue
Invalid bag.  no domain specified
invalid parameters - bagContext.domain is required
invalid parameters - bagContext is required
invalid parameters - data source is required
v24@?0@"NSString"8@"NSString"16
%@ domain=%@, enabled=%d, requestURLs = 
%@(%@) = %@
Use +loadBagContextFromURLBag:domain:completionBlock:
SBKStoreURLBagContext.m
kvs-sync-polling-interval-secs
@16@?0@8
pollingIntervalInSeconds
kvs-sync-disabled
domainDisabled
v56@?0@"NSString"8@16@?<@@?@>24@"NSString"32@"NSString"40@"NSDictionary"48
v24@?0@8@"NSError"16
%@.%@
v32@?0@"NSString"8@16@"NSError"24
com.apple.upp-extras
com.apple.upp
kvs-sync
kvs-put
kvs-putall
kvs-get
kvs-getall
syncRequestURL
pushKeyValueRequestURL
pushAllKeyValueRequestURL
pullKeyValueRequestURL
pullAllKeyValueRequestURL
v32@?0@8@16^B24
key bag contents = 
v24@?0@"NSDictionary"8@"NSError"16
%@ domain = %@, GET: key='%@', %@, %@
domain-version
Subclass must implement
SBKRequestData.m
/Library/Caches/com.apple.xbs/Sources/StoreBookkeeper_Sim/StoreBookkeeper-4019.100.87/StoreBookkeeper/iTMSKeyValueStorage/SBKSyncTransaction.m
v12@?0B8
WARNING: Invalid response (%@).  Skipping...
transactions using conflict detection must supply a conflict ordinal
SBKSyncTransaction.m
%@ domain = %@, %@
????
, updates=%@
, deletes=%@
SYNC: anchor=%@
Invalid processor
%lld-%@-%lld
v32@?0@8Q16^B24
[SBKAsynchronousTask] Invoking completion handler for %@, result = %@, error = %@
must have a finish and expiration handler specified
SBKAsynchronousTask.m
[SBKAsynchronousTask] beginTaskOperation %@
[SBKAsynchronousTask] Invoking expiration handler for %@, with cancelType = %d
%@ '%@'
/Library/Caches/com.apple.xbs/Sources/StoreBookkeeper_Sim/StoreBookkeeper-4019.100.87/StoreBookkeeper/Utilities/SBKAsynchronousTask.m
[SBKAsynchronousTask] WARNING: task timed out: %@
B24@?0B8B12@"NSError"16
-[SBKLoadDomainVersionRequestHandler runWithCompletionHandler:]_block_invoke
finished loading domain version: domainVersion = %@%@
/Library/Caches/com.apple.xbs/Sources/StoreBookkeeper_Sim/StoreBookkeeper-4019.100.87/StoreBookkeeper/iTMSKeyValueStorage/SBKLoadDomainVersionRequestHandler.m
, itemCount = %@
subclass must supply key-value pair by implementing the SBKSyncTransactionProcessing protocol
SBKSyncRequestHandler.m
-[SBKSyncRequestHandler transaction:willProcessResponseData:]_block_invoke
will process response with responseDomainVersion = %@
/Library/Caches/com.apple.xbs/Sources/StoreBookkeeper_Sim/StoreBookkeeper-4019.100.87/StoreBookkeeper/iTMSKeyValueStorage/SBKSyncRequestHandler.m
v8@?0
@8@?0
com.apple.storebookkeeper.SBKSyncRequestHandler
64-bit buffer writes not supported.
stream is already closed.
SBKZipDeflateMemoryOutputStream.m
ERROR: deflateEnd() failed: %s
1.2.11
Content-Type
Content-Encoding
Accept-Encoding
gzip
guid
v32@?0@"NSString"8@"NSString"16^B24
/Library/Caches/com.apple.xbs/Sources/StoreBookkeeper_Sim/StoreBookkeeper-4019.100.87/StoreBookkeeper/iTMSKeyValueStorage/SBKRequest.m
ERROR: failed to serialize property list with error = %@
Invalid bodyContentType requested for propertyList
SBKRequest.m
 %@ [%@]
 %@ [%@] URL = %@, shouldAuthenticate = %d, arguments = %@, headers = %@, bodyData = %@ 
application/x-plist
text/xml; charset=UTF-8
text/plain; charset=UTF-8
POST
SBKRequestBodyContentType-EncodeGzip
SBKRequestBodyContentType-TextXML
subclass must implement
 [%ld]: responseDictionary = %@, (%@)
status
SBKBookkeeperRequestErrorDomain
%@ (status = %@)%@
 Please enable logging and file a bug.
The domain specified in the request is locked
The putAll had a version mismatch
The client's user agent is not supported
An unspecified server-side error (type 2) was encountered
Unknown status
The request denied (too many recent request)
The request deniend (punted - server too busy)
The request requires an authenticated weak-token
An unspecified server-side error (type 1) was encountered
The request format was invalid, or referenced an invalid domain
Unknown server initialization error
Success
SBKRequestHandler.m
SBKTransaction.m
base-version
Archiving SBKStoreClampsController resulted in error:%@
Unarchiving SBKStoreClampsController resulted in error:%@
SBKPullValueRequest
SBKAdditions
SBKStoreClampsController
NSSecureCoding
NSCoding
SBKGenericKeyValuePair
SBKKeyValuePayloadPair
NSObject
SBKTransactionController
SBKTransactionURLOperationDelegate
ISStoreURLOperationDelegate
ISURLOperationDelegate
ISOperationDelegate
SBKSyncResponseData
SBKStoreError
SBKPrivate
SBKTransactionURLOperation
SBKSyncRequestData
SBKStoreAuthenticationController
SBKLogger
SBKPushValueTransaction
SBKProcessAssertion
SBKTaskAssertion
SBKPreferences
SBKSimpleTransactionRequestHandler
SBKUniversalPlaybackPositionMetadata
NSCopying
SBKUniversalPlaybackPositionStore
SBKPlaybackPositionSyncRequestHandler
SBKSyncTransactionProcessing
SBKTransactionControllerDelegate
SBKStoreURLBagContext
NSMutableCopying
SBKMutableStoreURLBagContext
SBKPullValueTransaction
SBKPushValueResponse
SBKRequestData
SBKSyncResponse
SBKSyncTransaction
SBKSyncResponseDataKeyEnumerator
SBKAsynchronousTask
SBKLoadDomainVersionRequestHandler
SBKSyncRequestHandler
SBKZipDeflateMemoryOutputStream
SBKRequest
SBKResponse
SBKResponseStatus
SBKSyncRequest
SBKRequestHandler
SBKTransaction
SBKPullValueResponse
SBKPushValueRequest
propertyListBodyWithTransaction:
requestForTransaction:
dictionaryWithObjects:forKeys:count:
canonicalResponseForResponse:
length
bytes
stringWithCapacity:
appendFormat:
dataUsingEncoding:
dataWithBytes:length:
SBKStringFromDigestData:
_SBKDataByInflatingWithNoZipHeader
_SBKDataByDeflatingWithNoZipHeaderWithCompression:
SBKDataByInflatingWithNoZipHeader
SBKDataByDeflatingWithNoZipHeader
SBKDataByInflatingWithGZip
SBKDataByDeflatingWithGZip
SBKStringByMD5HashingString:
appendBytes:length:
initWithCapacity:
T@"NSObject<OS_dispatch_queue>",&,V_queue
T@"NSDictionary",&,V_transactionClamps
Td,V_accountIdentifierCheckTimestamp
Td,V_authenticationNeededTimestamp
Td,V_userAcceptedSyncTimestamp
Td,V_networkingBlockedUntil
Td,V_backOffUntil
Td,V_userCancelledSignInBackOffUntil
Td,V_nextUserCancelBackOffInterval
T@"NSData",&,V_pendingUserDefaultArchivedData
_queue
_transactionClamps
_accountIdentifierCheckTimestamp
_authenticationNeededTimestamp
_userAcceptedSyncTimestamp
_networkingBlockedUntil
_backOffUntil
_userCancelledSignInBackOffUntil
_nextUserCancelBackOffInterval
_pendingUserDefaultArchivedData
TB,R
supportsSecureCoding
encodeWithCoder:
initWithCoder:
init
description
saveToUserDefaults
accessTransactionClampsWithBlock:
canScheduleTransaction:error:
reset
setTimestampForTransaction:
clearTimestampForTransaction:
setAccountIdentifierCheckTimestamp
clearAccountIdentifierCheckTimestamp
setAuthenticationRequest
clearAuthenticationRequest
hasAuthenticatedTooRecentlyForTransaction:error:
setUserAcceptedSyncTimestamp
clearUserAcceptedSyncTimestamp
hasUserRecentlyAcceptedSync
setUserCancelledSignIn
clearUserCancelledSignIn
backOffForTimeInterval:
clearBackOff
setNetworkingBlocked
clearNetworkingBlocked
isNetworkingBlocked
_rightNow
_keyForTransaction:
_canScheduleTransactionBasedOnType:error:
_canScheduleTransactionBasedOfNetworkingBlocked:error:
_canScheduleTransactionBasedOnAccountIdentifierCheck:error:
_canScheduleTransactionBasedOnBackOff:error:
_canScheduleTransactionBasedOnUserCancelledSignIn:error:
queue
setQueue:
transactionClamps
setTransactionClamps:
accountIdentifierCheckTimestamp
setAccountIdentifierCheckTimestamp:
authenticationNeededTimestamp
setAuthenticationNeededTimestamp:
userAcceptedSyncTimestamp
setUserAcceptedSyncTimestamp:
networkingBlockedUntil
setNetworkingBlockedUntil:
backOffUntil
setBackOffUntil:
userCancelledSignInBackOffUntil
setUserCancelledSignInBackOffUntil:
nextUserCancelBackOffInterval
setNextUserCancelBackOffInterval:
pendingUserDefaultArchivedData
setPendingUserDefaultArchivedData:
.cxx_destruct
dateWithTimeIntervalSinceReferenceDate:
timeIntervalSinceNow
valueForKey:
timeIntervalSinceReferenceDate
date
setValue:forKey:
removeAllObjects
mutableCopy
handleFailureInFunction:file:lineNumber:description:
stringWithUTF8String:
currentHandler
archivedDataWithRootObject:requiringSecureCoding:error:
decodeDoubleForKey:
setValuesForKeysWithDictionary:
decodePropertyListForKey:
decodeIntegerForKey:
encodeInteger:forKey:
encodeDouble:forKey:
encodeObject:forKey:
stringWithFormat:
sharedClampsController
unarchivedObjectOfClass:fromData:error:
T@"NSString",R,N,V_kvsKey
T@"NSData",R,N,V_kvsPayload
hash
TQ,R
superclass
T#,R
T@"NSString",R,C
debugDescription
_kvsKey
_kvsPayload
pairWithKVSKey:kvsPayload:
kvsKey
kvsPayload
timestamp
kvsValueDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
initWithKVSKey:kvsPayload:
decodeObjectOfClass:forKey:
T@"NSOperationQueue",&,V_operationQueue
T@"NSMutableArray",&,V_pendingTransactions
T@"SBKTransaction",&,N,V_currentTransaction
TB,V_isResolvingError
T@"SBKTaskAssertion",&,V_backgroundTaskAssertion
T@,W,V_networkTypeObserver
Tq,V_conflictResolutionAttempts
T@"<SBKTransactionControllerDelegate>",W,V_delegate
T@"NSString",R,C,V_domain
T@"NSURL",R,V_requestURL
T@"SSAccount",R,V_account
enabled
TB,R,GisEnabled,V_enabled
idle
TB,R,GisIdle
T@"SBKStoreAuthenticationController",&,V_authenticationController
TB,V_shouldAuthenticateIfNecessary
metricsLoadURLSessionDuration
T@"NSNumber",R,N
metricsLoadURLSamplingPercentage
metricsLoadURLSamplingPercentageCachedResponses
_enabled
_shouldAuthenticateIfNecessary
_isResolvingError
_delegate
_domain
_requestURL
_account
_authenticationController
_currentTransaction
_operationQueue
_pendingTransactions
_backgroundTaskAssertion
_networkTypeObserver
_conflictResolutionAttempts
T@"SSAccount",R
account
operation:didAuthenticateWithDSID:
operation:shouldAuthenticateWithContext:responseHandler:
operation:shouldSetStoreFrontID:
operation:didDiscoverContentLength:
operation:didReceiveResponse:
operation:finishedWithOutput:
operation:needNewBodyStream:
operation:processData:error:
operation:willSendRequest:
operation:sanitizedStringForString:
operation:dispositionForAuthenticationChallenge:
operation:credentialForAuthenticationChallenge:
URLCache
URLCacheID
operation:failedWithError:
operation:updatedProgress:
operationFinished:
operationWillStart:
initWithDomain:requestURL:
initWithDomain:requestURL:forAccount:
dealloc
setDomain:
setRequestURL:
setEnabled:
_networkTypeChangedNotification:
_onQueue_clampsController
_onQueue_isIdle
isIdle
scheduleTransaction:withTransactionFinishedBlock:
scheduleTransaction:
cancelScheduledTransaction:
cancelAllTransactions
cancelAllTransactionsCancelCode:
_enqueueStoreOperation:
_storeOperationDidComplete:
_resolveError:resolution:
_beginBackgroundTask
_endBackgroundTask
_onQueue_beginBackgroundTask
_onQueue_endBackgroundTask
_onQueue_cancelAllPendingTransactions:
_onQueue_cancelTransaction:error:
_onQueue_processPendingTransactions
_onQueue_processCurrentTransaction
_onQueue_scheduleTransaction:isRetry:
_onQueue_addPendingTransaction:
_onQueue_canScheduleTransaction:error:
_onQueue_isEnabledForTransaction:error:
_onQueue_assertIsTransactionValid:error:
_onQueue_clampsCanScheduleTransaction:error:
_onQueue_authenticationCanProcessTransaction:error:
_onQueue_currentTransactionDidFinish
_onQueue_transactionDidFail:withError:
_onQueue_transactionDidCancel:withError:
_processDataInResponse:
_onQueue_processOperationOutput:operation:operationAuthenticated:
_onQueue_resolveError:resolution:
_onQueue_performRetryErrorHandlingForError:
_onQueue_performCancelErrorHandlingForError:
_onQueue_performDefaultErrorHandlingForError:
_delegateShouldScheduleTransaction:error:
_sendFinishedBlockForTransaction:success:cancelled:error:handledAsFinishedBlock:
_delegateTransactionDidFail:withError:
_delegateTransactionDidCancel:withError:
_delegateTransactionDidFinish:
delegate
setDelegate:
domain
requestURL
isEnabled
authenticationController
setAuthenticationController:
shouldAuthenticateIfNecessary
setShouldAuthenticateIfNecessary:
currentTransaction
setCurrentTransaction:
operationQueue
setOperationQueue:
pendingTransactions
setPendingTransactions:
isResolvingError
setIsResolvingError:
backgroundTaskAssertion
setBackgroundTaskAssertion:
networkTypeObserver
setNetworkTypeObserver:
conflictResolutionAttempts
setConflictResolutionAttempts:
requestProperties
code
needsAuthentication
handleFailureInMethod:object:file:lineNumber:description:
isMainThread
response
removeObject:
addObject:
objectAtIndex:
count
insertObject:atIndex:
cancelAllOperations
countByEnumeratingWithState:objects:count:
copy
addOperation:
isEqualToString:
operations
removeObserver:name:object:
sharedInstance
defaultCenter
addObserver:selector:name:object:
setMaxConcurrentOperationCount:
setName:
T@"NSMutableDictionary",&,V_responseOpEntiesByKey
T@"SBKSyncTransaction",R,V_transaction
T@"NSString",R,C,V_syncAnchor
T@"NSArray",R,V_updatedKeys
T@"NSArray",R,V_conflictedKeys
T@"NSArray",R,V_deletedKeys
T@"NSArray",R,V_successfullyUpdatedKeys
T@"NSArray",R,V_successfullyDeletedKeys
_transaction
_syncAnchor
_updatedKeys
_conflictedKeys
_deletedKeys
_successfullyUpdatedKeys
_successfullyDeletedKeys
_responseOpEntiesByKey
initWithTransaction:responseDictionary:response:
payloadDataForUpdateResponseKey:
_deserializeResponseDictionary:response:
transaction
syncAnchor
updatedKeys
conflictedKeys
deletedKeys
successfullyUpdatedKeys
successfullyDeletedKeys
responseOpEntiesByKey
setResponseOpEntiesByKey:
stringValue
containsObject:
objectForKey:
arrayWithObjects:count:
enumerateObjectsUsingBlock:
appendString:
numberWithUnsignedInteger:
array
dictionary
deserializedResponseBodyWithTransaction:responseDictionary:response:
T@"SBKTransaction",&,V_transaction
Td,R
copyWithZone:
isAuthenticationError
isAccountsChangedError
isRecoverableError
isClampError
isTransactionCancelledError
isTransactionMissingInformationError
previousStoreAccountName
currentStoreAccountName
retrySeconds
setTransaction:
doubleValue
localizedDescription
unknownErrorWithTransaction:underlyingError:
keyValueStoreDisabledErrorWithTransaction:underlyingError:
networkingBlockedErrorWithTransaction:underlyingError:
killSwitchErrorWithTransaction:underlyingError:
storeLoggedOutErrorWithPreviousStoreAccountName:transaction:underlyingError:
storeAccountMismatchErrorWithPreviousStoreAccountName:currentStoreAccountName:transaction:underlyingError:
storeGenericErrorWithTransaction:underlyingError:
storeValidationErrorWithTransaction:underlyingError:
userCancelledSignInErrorWithTransaction:underlyingError:
userEnteredWrongCredentialsErrorWithTransaction:underlyingError:
noStoreAccountErrorWithTransaction:underlyingError:
storeAccountSessionExpiredWithTransaction:underlyingError:
transactionMissingDomainErrorWithTransaction:underlyingError:
transactionMissingURLErrorWithTransaction:underlyingError:
transactionTimeoutErrorWithTransaction:underlyingError:
transactionCancelledErrorWithTransaction:underlyingError:
delegateCancelledErrorWithTransaction:underlyingError:
userClampErrorWithTransaction:retrySeconds:underlyingError:
serverClampErrorWithTransaction:retrySeconds:underlyingError:
dictionaryWithObject:forKey:
errorWithDomain:code:userInfo:
keyValueStoreErrorWithCode:localizedDescription:transaction:underlyingError:
mainBundle
localizedStringForKey:value:table:
transactionCancelledErrorWithTransaction:code:underlyingError:
numberWithDouble:
TB,N,V_shouldAuthenticate
T@"SBKRequest",&,N,V_SBKRequest
_shouldAuthenticate
_SBKRequest
_init
setShouldAuthenticate:
shouldAuthenticate
SBKRequest
setSBKRequest:
setAuthenticationContext:
setAllowsSilentAuthentication:
setPromptStyle:
initWithAccount:
activeAccount
defaultStore
setNeedsAuthentication:
operationWithRequest:delegate:
setDataProvider:
setQueuePriority:
setShouldMessageMainThread:
setRequestProperties:
syncTransaction
serializableRequestBodyPropertyList
_serializableConflictDetectionValue
_serializableConflictDetectionOrdinalForKey:
_needsConflictDetection
_serializableUpdateItemPayloadDictionaryForKey:
_serializableDeleteItemPayloadDictionaryForKey:
longLongValue
numberWithInteger:
arrayByAddingObjectsFromArray:
T@"SSAccount",R,V_storeAccount
TB,V_shouldAuthenticate
_storeAccount
initWithStoreAccount:
isAuthenticationValidForTransaction:error:
shouldForceAuthenticationForTransaction:
authenticationErrorsForTransaction:
saveAccountToLastSyncedDefaults
saveAccountToLastFailedSyncDefaults
storeAccount
uniqueIdentifier
accountName
lastSyncedAccountIdentifier
lastSyncedAccountName
clearLastSyncnedAccount
lastFailedSyncAccountIdentifier
lastFailedSyncAccountName
numberWithLongLong:
T@"NSString",C,V_filter
T@"NSString",C,V_runtimeOverride
_auxPath
_fileHandle
_filter
_runtimeOverride
_pid
_procName
_runtimeOverrideRegex
_lock
_updateSettingsFromPreferences:
setAuxPath:
auxPath
shouldOverrideCondition:file:
performLoggingBlock:
logFile:lineNumber:format:
logFunction:format:
logString:
addRuntimeOverride:
removeRuntimeOverride:
filter
setFilter:
runtimeOverride
setRuntimeOverride:
stringByReplacingOccurrencesOfString:withString:
stringByAppendingString:
rangeOfString:
writeData:
initWithFormat:
stringFromDate:
setDateFormat:
setDefaultFormatterBehavior:
initWithFormat:arguments:
lastPathComponent
unlock
lock
rangeOfFirstMatchInString:options:range:
rangeOfString:options:
stringByDeletingPathExtension
fileHandleForWritingAtPath:
createFileAtPath:contents:attributes:
fileExistsAtPath:
closeFile
removeObserver:
stringByAppendingFormat:
standardUserDefaults
environment
processInfo
initWithPattern:options:error:
infoDictionary
verboseLoggingEnabled
debugLoggingEnabled
sharedLogger
integerValue
T@"<SBKKeyValuePayloadPair>",R,V_clientItemPayloadPair
T@"NSString",R,V_clientItemVersionAnchor
T@"<SBKKeyValuePayloadPair>",R,V_requestItemPayloadPair
T@"NSString",R,V_requestItemVersionAnchor
TB,R,V_success
T@"<SBKKeyValuePayloadPair>",R,V_resultItemPayloadPair
T@"NSString",R,V_resultItemVersionAnchor
T@"NSString",R,V_resultDomainVersion
_isRechedulable
_success
_clientItemPayloadPair
_clientItemVersionAnchor
_requestItemPayloadPair
_requestItemVersionAnchor
_resultItemPayloadPair
_resultItemVersionAnchor
_resultDomainVersion
initWithStoreBagContext:clientItemPayloadPair:clientItemVersionAnchor:
clampsKey
newRequest
processDataInResponse:withCompletionHandler:
_resolveConflictBetweenClientPayloadPair:andServerPayloadPair:
clientItemPayloadPair
clientItemVersionAnchor
requestItemPayloadPair
requestItemVersionAnchor
success
resultItemPayloadPair
resultItemVersionAnchor
resultDomainVersion
TQ,R,V_identifier
T@"BKSProcessAssertion",&,V_bkProcessAssertion
T@,&,V_expirationObserver
_expirationBlock
_identifier
_bkProcessAssertion
_expirationObserver
initWithExpirationBlock:debugDescription:
_onQueueSetBkProcessAssertion:
setBkProcessAssertion:
bkProcessAssertion
_expireBackgroundTask
invalidate
identifier
expirationObserver
setExpirationObserver:
setInvalidationHandler:
addObserverForName:object:queue:usingBlock:
initWithPID:flags:reason:name:withHandler:
processName
_expireHandler
_debugInfo
_processAssertion
initWithExpirationHandler:debugInfo:
performExpirationHandler
componentsJoinedByString:
newBackgroundTaskWithExpirationHandler:debugInfo:
_preferencesDidChange
registerDefaultsIfKeyNotSet:registrationBlock:
setObject:forKey:
objectForKey:withDefaultValue:
setBool:forKey:
boolForKey:
numberWithBool:
postNotificationName:object:userInfo:
storeBookkeeperPreferences
T@"SBKTransactionController",R,N,V_transactionController
TB,R,N,V_canceled
_canceled
_transactionController
initWithBagContext:
scheduleTransaction:finishedBlock:
timeout
cancel
cancelWithError:
transactionController
canceled
sharedApplication
T@"NSString",C,V_itemIdentifier
Td,V_timestamp
Td,V_bookmarkTime
TB,V_hasBeenPlayed
TQ,V_playCount
_hasBeenPlayed
_itemIdentifier
_timestamp
_bookmarkTime
_playCount
initAsTestableItem
setTimestamp:
keyValueStorePayload
itemIdentifier
setItemIdentifier:
bookmarkTime
setBookmarkTime:
hasBeenPlayed
setHasBeenPlayed:
playCount
setPlayCount:
dictionaryWithObjects:forKeys:
setDateStyle:
setTimeStyle:
distantPast
UTF8String
encodeBool:forKey:
decodeBoolForKey:
_testableMetadataItem_1
keyValueStoreItemIdentifierForItem:
keyValueStoreItemIdentifierForUniqueStoreID:itemTitle:albumName:itemArtistName:feedURL:feedGUID:
metadataWithValuesFromDataSourceItem:
metadataWithItemIdentifier:bookmarkTime:bookmarkTimestamp:hasBeenPlayed:playCount:
metadataWithItemIdentifier:keyValueStorePayload:
metadataWithItemIdentifier:keyValueStorePayload:failuresOkay:
boolValue
finishDecoding
decodeObjectOfClasses:forKey:
setWithObjects:
setDecodingFailurePolicy:
initForReadingFromData:error:
enumerateValuesForProperties:usingBlock:
setWithArray:
allKeys
initWithObjectsAndKeys:
absoluteString
string
setObject:forKeyedSubscript:
unsignedLongLongValue
dictionaryWithCapacity:
T@"SBKAsynchronousTask",&,V_currentTask
T@"SBKAsynchronousTask",&,V_lookupDomainVersionTask
T@"SBKAsynchronousTask",&,V_bagLookupTask
T@"SBKRequestHandler",&,V_currentTaskRequestHandler
T@"NSDate",&,V_dateToFireNextTimer
T@"NSTimer",&,V_timer
T@"<SBKUniversalPlaybackPositionDataSource>",R,W,V_dataSource
_isActive
_hasLocalChangesToSync
_pendingTaskBlocks
_accountIdentifier
_automaticSynchronizeOptions
_initialAutosyncInterval
_pollingLimitFromBag
_autorefreshInterval
_refreshTimerActive
_accountsObserver
_prefsObserver
_dataSource
_currentTask
_lookupDomainVersionTask
_bagLookupTask
_currentTaskRequestHandler
_dateToFireNextTimer
_timer
deprecated_setDataSource:
initWithDomain:dataSource:automaticSynchronizeOptions:isActive:
initWithDomain:dataSource:automaticSynchronizeOptions:accountIdentifier:isActive:
initWithInitialUpdateDelay:
_onQueueUpdateTimerForActiveChanges
_onQueueUpdateTimerForAutomaticSyncOptionChanges
becomeActive
resignActive
setAutomaticSynchronizeOptions:
automaticSynchronizeOptions
setHasLocalChangesToSync:
hasLocalChangesToSync
setAutomaticallySynchronizeLocalChangesOnResignActive:
_automaticallySynchronizeLocalChangesOnResignActive
automaticallySynchronizeLocalChangesOnResignActive
setAutomaticallySynchronizeOnBecomeActive:
_automaticallySynchronizeOnBecomeActive
automaticallySynchronizeOnBecomeActive
synchronizeImmediatelyWithCompletionHandler:
pushMetadataItem:completionBlock:
pullMetadataItemWithItemIdentifier:completionBlock:
synchronizeImmediatelyWithCompletionBlock:
checkForAvailabilityWithCompletionBlock:
loadRemoteDomainVersionWithCompletionBlock:
loadBagContextWithCompletionBlock:
_onQueueSynchronizeWithAutosynchronizeMask:withCompletionBlock:
_onQueueLoadRemoteDomainVersionWithCompletionBlock:
_onQueueRunNextPendingTaskBlock
_onQueueRunTaskWithName:taskCompletionHandler:runTaskBlock:
_onQueueSynchronizeImmediatelyWithCompletionHandler:
_onQueuePushMetadataItem:completionBlock:
_onQueuePullMetadataItemWithItemIdentifier:completionBlock:
_accountForSyncing
_updateSettingsFromLoadedBagContext:
_onQueueLoadBagContextWithCompletionHandler:
_updateForStoreAccountsChange
_effectiveAutorefreshRate
_updateAutorefreshRateSettingAndRestartTimer:
_timerFired:
_timerIsStopped
_onQueueScheduleTimer
_onQueueSuspendTimer
_onQueueResumeTimer
_onQueueStopTimer
_onQueueStartNewTimer
_onQueueStartNewTimerWithTimeIntervalSinceNow:
dataSource
currentTask
setCurrentTask:
lookupDomainVersionTask
setLookupDomainVersionTask:
bagLookupTask
setBagLookupTask:
currentTaskRequestHandler
setCurrentTaskRequestHandler:
dateToFireNextTimer
setDateToFireNextTimer:
timer
setTimer:
dateWithTimeIntervalSinceNow:
distantFuture
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
isEqualToDate:
floatValue
URLBagForContext:
contextWithBagType:
accountWithUniqueIdentifier:
postNotificationName:object:
removeObjectAtIndex:
firstObject
mainQueue
T@"SBKTransactionController",&,V_kvsController
T@"<SBKUniversalPlaybackPositionDataSource>",&,V_dataSource
T@"<SBKUniversalPlaybackPositionTransactionContext>",&,V_dataSourceTransactionContext
T@"NSMutableDictionary",&,V_metadataItemsFromDataSource
T@"NSDictionary",&,V_metadataItemsToCommitToDataSource
T@"NSDictionary",&,V_metadataItemsToCommitToKVSStorage
T@"NSMutableDictionary",&,V_responseMetadataItemsToCommitToDataSource
T@"NSMutableDictionary",&,V_responseMetadataItemsMergedToCommitBackToKVSStorage
T@"SBKSyncTransaction",&,V_currentKVSTransaction
TB,V_syncInProgress
TB,V_canceled
T@"NSError",&,V_fatalSyncError
T@"NSString",&,V_overrideSyncAnchor
_syncOperationQueue
_syncInProgress
_kvsController
_dataSourceTransactionContext
_metadataItemsFromDataSource
_metadataItemsToCommitToDataSource
_metadataItemsToCommitToKVSStorage
_responseMetadataItemsToCommitToDataSource
_responseMetadataItemsMergedToCommitBackToKVSStorage
_currentKVSTransaction
_fatalSyncError
_overrideSyncAnchor
transaction:syncAnchorForTransactionSyncAnchor:
transaction:keysForTransactionForTransactionKeysToUpdate:
transaction:keysForTransactionForTransactionKeysToDelete:
transaction:conflictDetectionTypeForTransactionDetectionType:
transaction:conflictDetectionOrdinalForKey:
transaction:willProcessResponseData:
transaction:didProcessResponseData:
transaction:processUpdatedKey:data:conflict:isDirty:
transaction:processDeletedKey:isDirty:
transaction:keyValuePairForUpdatedKey:
transactionController:shouldScheduleTransaction:
transactionController:transactionDidFail:error:
transactionController:transactionDidCancel:error:
transactionController:transactionDidFinish:
initWithDataSource:bagContext:
initWithDataSource:bagContext:accountIdentifier:
clearTransactionResponseData
_dataSourceCancelTransaction
_synchronize:
_shouldStop
synchronizeWithCompletionHandler:
_mergeConflictedItemFromSyncResponse:
_mergeMetadataItemsFromSyncResponse
newKVSSyncTransactionWithUpdatedMetadataItemIdentifiers:processConflicts:
_synchronouslyRunKVSTransaction:
_signalKVSTransactionCompletion:
_signalKVSTransactionCompletion:withError:
setDataSource:
kvsController
setKvsController:
dataSourceTransactionContext
setDataSourceTransactionContext:
metadataItemsFromDataSource
setMetadataItemsFromDataSource:
metadataItemsToCommitToDataSource
setMetadataItemsToCommitToDataSource:
metadataItemsToCommitToKVSStorage
setMetadataItemsToCommitToKVSStorage:
responseMetadataItemsToCommitToDataSource
setResponseMetadataItemsToCommitToDataSource:
responseMetadataItemsMergedToCommitBackToKVSStorage
setResponseMetadataItemsMergedToCommitBackToKVSStorage:
currentKVSTransaction
setCurrentKVSTransaction:
syncInProgress
setSyncInProgress:
setCanceled:
fatalSyncError
setFatalSyncError:
overrideSyncAnchor
setOverrideSyncAnchor:
unlockWithCondition:
lockWhenCondition:beforeDate:
initWithCondition:
lastSyncedDomainVersion
removeObjectForKey:
commitUniversalPlaybackPositionTransaction:domainVersion:metadataEnumerationBlock:
nextObject
objectEnumerator
beginTransactionWithItemsToSyncEnumerationBlock:
cancelUniversalPlaybackPositionTransaction:
T@"SSURLBag",&,V_bag
T@"NSString",C,V_domain
T@"NSURL",&,V_syncRequestURL
T@"NSURL",&,V_pushKeyValueRequestURL
T@"NSURL",&,V_pullKeyValueRequestURL
T@"NSURL",&,V_pushAllKeyValueRequestURL
T@"NSURL",&,V_pullAllKeyValueRequestURL
TB,V_domainDisabled
Td,V_pollingIntervalInSeconds
_domainDisabled
_pollingIntervalInSeconds
_syncRequestURL
_pushKeyValueRequestURL
_pullKeyValueRequestURL
_pushAllKeyValueRequestURL
_pullAllKeyValueRequestURL
_bag
mutableCopyWithZone:
_initWithDomain:syncRequestURL:domainDisabled:
initWithBag:domain:
setPollingIntervalInSeconds:
pollingIntervalInSeconds
syncRequestURL
setSyncRequestURL:
pushKeyValueRequestURL
setPushKeyValueRequestURL:
pullKeyValueRequestURL
setPullKeyValueRequestURL:
pushAllKeyValueRequestURL
setPushAllKeyValueRequestURL:
pullAllKeyValueRequestURL
setPullAllKeyValueRequestURL:
domainDisabled
setDomainDisabled:
setBag:
enumerateRequestURLBagKeysWithBlock:
T@"NSString",C,D
T@"NSURL",&,D
TB,D
Td,D
UPPDomainIdentifier
ExtrasDomainIdentifier
_findFirstValueInBag:keyEnumerator:valueTransformer:defaultValue:completionBlock:
loadBagContextFromURLBag:domain:completionBlock:
URLWithString:
loadValueForKey:completionBlock:
enumerateKeysAndObjectsUsingBlock:
loadWithCompletionBlock:
T@"NSString",R,C,V_requestedKey
_requestedKey
initWithStoreBagContext:requestedKey:clientItemPayloadPair:clientItemVersionAnchor:
requestedKey
responseWithResponse:transaction:
deserializeResponseBodyWithTransaction:
T@"NSString",R,V_domainVersion
T@"NSData",R,V_conflictItemValuePayload
T@"NSString",R,V_conflictItemKey
T@"NSString",R,V_conflictItemVersionAnchor
_domainVersion
_conflictItemValuePayload
_conflictItemKey
_conflictItemVersionAnchor
domainVersion
conflictItemValuePayload
conflictItemKey
conflictItemVersionAnchor
objectForKeyedSubscript:
initWithTransaction:
T@"SBKSyncResponseData",R,V_syncResponseData
_syncResponseData
syncResponseData
Tq,R,V_type
Tq,R,V_conflictDetectionType
T@"NSURL",R,V_syncRequestURL
T@"NSArray",R,V_keysToUpdate
T@"NSArray",R,V_keysToDelete
T@"<SBKSyncTransactionProcessing>",W,V_transactionProcessor
_keysToUpdate
_keysToDelete
_conflictDetectionType
_transactionProcessor
_type
initWithSyncRequestURL:domain:syncAnchor:keysToUpdate:keysToDelete:conflictDetectionType:
initWithStoreBagContext:syncAnchor:keysToUpdate:keysToDelete:conflictDetectionType:
_validateTransactionProcessor:
setTransactionProcessor:
transactionProcessor
conflictDetectionOrdinalForKey:
keyValuePairForUpdatedKey:
conflictDetectionType
keysToUpdate
keysToDelete
type
enumerateKeysInResponseForTransaction:completionBlock:
initWithResponseData:
T@"SBKSyncResponseData",&,V_responseData
T@"SBKSyncTransaction",&,V_transaction
T@?,C,V_completionBlock
TB,V_resolvedConflictsNeedSyncToServer
T@"NSEnumerator",&,V_updatedKeysEnumerator
T@"NSEnumerator",&,V_conflictedKeysEnumerator
T@"NSEnumerator",&,V_deletedKeysEnumerator
_resolvedConflictsNeedSyncToServer
_responseData
_completionBlock
_updatedKeysEnumerator
_conflictedKeysEnumerator
_deletedKeysEnumerator
_processUpdatedKey:isConflict:isDirty:
_processDeletedKey:isDirty:
_processNextKey
responseData
setResponseData:
completionBlock
setCompletionBlock:
resolvedConflictsNeedSyncToServer
setResolvedConflictsNeedSyncToServer:
updatedKeysEnumerator
setUpdatedKeysEnumerator:
conflictedKeysEnumerator
setConflictedKeysEnumerator:
deletedKeysEnumerator
setDeletedKeysEnumerator:
T@,&,V_result
T@"NSError",&,V_error
T@"SBKTaskAssertion",&,V_taskAssertion
T@"NSMutableArray",&,V_completions
T@?,C,V_finishedHandler
T@?,C,V_expirationHandler
Ti,V_cancelType
_debugDescription
_handlerQueue
_timeoutTimer
_taskInvalidationDisabled
_timeout
_cancelType
_result
_error
_expirationHandler
_finishedHandler
_taskAssertion
_completions
initWithHandlerQueue:timeout:debugDescription:
_invalidateTimer
setExpirationHandler:
expirationHandler
setFinishedHandler:
finishedHandler
_onQueueFireExpirationHandlerIfNecesary
setCancelType:
cancelType
setResult:
result
setError:
error
beginTaskOperation
finishTaskOperationWithResult:error:
endTaskOperation
_invalidateAssertion:
addTaskCompletionBlock:
invokeTaskCompletionBlocksWithBlock:
taskAssertion
setTaskAssertion:
completions
setCompletions:
TQ,V_itemCount
TB,V_loadsRemoteItemCount
TQ,R,V_responseItemCount
responseDomainVersion
_loadsRemoteItemCount
_responseItemCount
_itemCount
runWithCompletionHandler:
loadsRemoteItemCount
setLoadsRemoteItemCount:
responseItemCount
itemCount
setItemCount:
T@"SBKSyncResponseData",R,V_responseData
T@"SBKTransactionController",R,V_transactionController
T@"NSString",C
T@"NSArray",R,V_responseUpdatedKeys
T@"NSArray",R,V_responseDeletedKeys
T@"NSArray",R,V_responseConflictedKeys
_overrideResponseDomainVersion
_responseUpdatedKeys
_responseDeletedKeys
_responseConflictedKeys
_responseDataByKey
initWithBagContext:accountIdentifier:
setResponseDomainVersion:
responseUpdatedKeys
responseDeletedKeys
responseConflictedKeys
responseDataForResponseKey:
_onQueue_clearTransactionResponseData
startTransactionWithSyncAnchor:keysToUpdate:keysToDelete:finishedBlock:
deflatedData
zstream
_outputBuffer
_bufferingSize
initWithBufferingSize:compressionType:
close
writeBuffer:size:
data
dataByDeflatingData:
T@"SBKTransaction",&,N,V_transaction
concurrent
TB,R,N,GisConcurrent,V_concurrent
Tq,N,V_method
Td,R,N
TB,N,V_includeDeviceGUID
T@"NSData",&,N,V_bodyData
T@"ISDataProvider",&,N,V_responseDataProvider
_action
_bodyData
_bodyContentType
_headers
_arguments
_method
_responseDataProvider
_concurrent
_includeDeviceGUID
initWithRequestURL:
timeoutInterval
descriptionWithoutHeaderFields
setValue:forHeaderField:
setValue:forArgument:
setBodyData:
setBodyDataWithPropertyList:
copyRequestProperties
acceptsGzipEncoding
_defaultHeaderFields
newURLOperation
newURLOperationWithDelegate:
isConcurrent
method
setMethod:
includeDeviceGUID
setIncludeDeviceGUID:
bodyData
responseDataProvider
setResponseDataProvider:
_contentTypeStringForBodyContentType:
bodyContentType
_contentEncodingTypeStringForBodyContentEncodingType:
bodyContentEncodingType
setTimeoutInterval:
setHTTPBody:
setValue:forRequestParameter:
guid
setValue:forHTTPHeaderField:
setHTTPMethod:
_methodStringForMethod:
initWithURL:
dataWithPropertyList:format:options:error:
setShouldTriggerDownloads:
setShouldProcessDialogs:
setShouldPostFooterSectionChanged:
requestWithRequestURL:
raise:format:
T@"NSString",R,N,V_MIMEType
T@"SBKResponseStatus",R,N,V_responseStatus
TQ,R,N,V_responseCode
T@"NSDictionary",R,N,V_responseHeaderFields
T@"NSDictionary",R,N,V_responseDictionary
T@"NSError",R,N,V_error
Tq,R
T@"NSError",R
Td,R,V_retrySeconds
_responseDictionary
_responseCode
_responseHeaderFields
_retrySeconds
_MIMEType
_responseStatus
initWithURLResponse:responseDictionary:
initWithCode:headerFields:responseDictionary:MIMEType:error:
statusCode
consoleDescription
requestError
isSuccess
isRecoverable
isError
shouldFileRadar
isGenericError
isUnsupportedClient
isValidationError
isPuntedError
responseDictionary
responseCode
responseHeaderFields
MIMEType
responseStatus
responseStatusForStatusCodeNumber:
Tq,R,V_statusCode
T@"NSString",R,C,V_consoleDescription
TB,R,V_isRecoverable
TB,R,V_isError
TB,R,V_shouldFileRadar
TB,R,V_isPuntedError
_isRecoverable
_isError
_shouldFileRadar
_isPuntedError
_statusCode
_consoleDescription
initWithStatus:isRecoverable:isError:consoleDescription:shouldFileRadar:
initWithDomain:code:userInfo:
dictionaryWithObjectsAndKeys:
allHeaderFields
responseWithURLResponse:responseDictionary:
responseWithCode:headerFields:responseDictionary:MIMEType:error:
responseWithResponse:
T@"SBKStoreURLBagContext",R,N,V_bagContext
_bagContext
bagContext
T@"NSMutableDictionary",&,V_userInfo
T@"NSURL",&,V_requestURL
T@"SBKRequest",&,V_activeRequest
_activeRequest
_userInfo
setTransactionContext:forKey:
transactionContextForKey:
activeRequest
setActiveRequest:
userInfo
setUserInfo:
accountDSID
musicLibraryForUserAccount:
databasePath
defaultIdentityStore
userIdentitiesForManageableAccountsWithError:
T@"NSString",R,V_itemKey
T@"NSString",R,V_itemVersion
T@"NSData",R,V_itemValuePayload
_itemKey
_itemVersion
_itemValuePayload
itemKey
itemVersion
itemValuePayload
@24@0:8@16
@16@0:8
@24@0:8Q16
@"NSObject<OS_dispatch_queue>"
@"NSDictionary"
@"NSData"
B16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8@16
v16@0:8
v24@0:8@?16
B32@0:8@16^@24
v24@0:8d16
d16@0:8
@"NSString"
@"NSString"16@0:8
@"NSData"16@0:8
@32@0:8@"NSString"16@"NSData"24
@32@0:8@16@24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"<SBKTransactionControllerDelegate>"
@"NSURL"
@"SSAccount"
@"SBKStoreAuthenticationController"
@"SBKTransaction"
@"NSOperationQueue"
@"NSMutableArray"
@"SBKTaskAssertion"
@"SSAccount"16@0:8
v32@0:8@"ISStoreURLOperation"16@"NSNumber"24
v40@0:8@"ISStoreURLOperation"16@"SSAuthenticationContext"24@?<v@?@"SSAuthenticateResponse"@"NSError">32
B32@0:8@"ISStoreURLOperation"16@"NSString"24
v32@0:8@16@24
v40@0:8@16@24@?32
B32@0:8@16@24
v32@0:8@"ISURLOperation"16@"NSNumber"24
v32@0:8@"ISURLOperation"16@"NSURLResponse"24
v32@0:8@"ISURLOperation"16@24
@"NSInputStream"32@0:8@"ISURLOperation"16@"NSURLRequest"24
B40@0:8@"ISURLOperation"16@"NSMutableData"24^@32
v32@0:8@"ISURLOperation"16@"NSMutableURLRequest"24
@"NSString"32@0:8@"ISURLOperation"16@"NSString"24
q32@0:8@"ISURLOperation"16@"NSURLAuthenticationChallenge"24
@"NSURLCredential"32@0:8@"ISURLOperation"16@"NSURLAuthenticationChallenge"24
@"NSURLCache"16@0:8
@"NSNumber"16@0:8
B40@0:8@16@24^@32
q32@0:8@16@24
v32@0:8@"ISOperation"16@"NSError"24
v32@0:8@"ISOperation"16@"SSOperationProgress"24
v24@0:8@"ISOperation"16
@40@0:8@16@24@32
v20@0:8B16
v32@0:8@16@?24
v24@0:8q16
v28@0:8@16i24
v28@0:8@16B24
v32@0:8@16^@24
v36@0:8@16@24B32
B48@0:8@16B24B28@32^B40
q16@0:8
@"SBKSyncTransaction"
@"NSArray"
@"NSMutableDictionary"
@24@0:8^{_NSZone=}16
@48@0:8@16@24@32@40
@40@0:8@16q24@32
@40@0:8@16d24@32
@48@0:8q16@24@32@40
@"SBKRequest"
@"NSFileHandle"
@"NSRegularExpression"
@"NSLock"
v36@0:8r*16i24@28
v32@0:8r*16@24
@"<SBKKeyValuePayloadPair>"
@"BKSProcessAssertion"
@32@0:8@?16@24
@"SBKProcessAssertion"
v28@0:8B16@20
@"SBKTransactionController"
v24@0:8Q16
@64@0:8q16@24@32@40@48@56
@52@0:8@16d24d32B40Q44
@36@0:8@16@24B32
@"NSNumber"
@"<SBKUniversalPlaybackPositionDataSource>"
@"SBKAsynchronousTask"
@"SBKRequestHandler"
@"NSDate"
@"NSTimer"
@44@0:8@16@24Q32B40
@52@0:8@16@24Q32@40B48
@24@0:8d16
v32@0:8Q16@?24
v40@0:8@16@?24@?32
@"<SBKUniversalPlaybackPositionTransactionContext>"
@"NSError"
v32@0:8@"SBKSyncTransaction"16@"SBKSyncResponseData"24
v52@0:8@"SBKSyncTransaction"16@"NSString"24@"NSData"32B40^B44
v40@0:8@"SBKSyncTransaction"16@"NSString"24^B32
@"<SBKKeyValuePayloadPair>"32@0:8@"SBKSyncTransaction"16@"NSString"24
@"NSString"32@0:8@"SBKSyncTransaction"16@"NSString"24
@"NSArray"32@0:8@"SBKSyncTransaction"16@"NSArray"24
q32@0:8@"SBKSyncTransaction"16q24
@"NSNumber"32@0:8@"SBKSyncTransaction"16@"NSString"24
q32@0:8@16q24
v52@0:8@16@24@32B40^B44
v40@0:8@16@24^B32
B40@0:8@"SBKTransactionController"16@"SBKTransaction"24@"SBKStoreError"32
v40@0:8@"SBKTransactionController"16@"SBKTransaction"24@"SBKStoreError"32
v32@0:8@"SBKTransactionController"16@"SBKTransaction"24
B32@0:8@"SBKTransactionController"16@"SBKTransaction"24
B40@0:8@16@24@32
v40@0:8@16@24@32
B24@0:8^@16
i24@0:8@16
@28@0:8@16B24
@"SSURLBag"
v56@0:8@16@24@?32@40@?48
@"SBKSyncResponseData"
@"<SBKSyncTransactionProcessing>"
@64@0:8@16@24@32@40@48q56
@56@0:8@16@24@32@40q48
@"NSEnumerator"
v36@0:8@16B24^B28
v32@0:8@16^B24
@?16@0:8
@"NSObject<OS_dispatch_source>"
v20@0:8i16
i16@0:8
v48@0:8@16@24@32@?40
@"NSMutableData"
{z_stream_s="next_in"*"avail_in"I"total_in"Q"next_out"*"avail_out"I"total_out"Q"msg"*"state"^{internal_state}"zalloc"^?"zfree"^?"opaque"^v"data_type"i"adler"Q"reserved"Q}
@28@0:8i16Q20
B32@0:8r*16Q24
@"ISDataProvider"
@24@0:8q16
@"SBKResponseStatus"
@56@0:8Q16@24@32@40@48
@44@0:8q16B24B28@32B40
@"SBKStoreURLBagContext"
