n}?Rq
?[5"y
?ffffff
?333333
333333
M@333333
v8@?0
%@ may only be initialized by PGPictureInPictureController.
pid: %ui- bundle: %@
v24@?0@"BSProcessHandle"8@"NSError"16
v16@?0@"NSDictionary"8
CFBundleIdentifier
com.apple.pictureinpicture
PIPVisible
TransientTask
+[PGProcessAssertion assertionWithDomainAttribute:forProcessWithIdentifier:explanation:]
%@ - %@
PGProcessAssertion.m
Trying to acquire assertion when we already have one
Initially invalidated, which should not be possible
com.apple.pegasus.assertions
-[PGProcessAssertion acquireWithTarget:domainAttribute:]
-[PGProcessAssertion acquireWithTarget:domainAttribute:]_block_invoke
v24@?0@"RBSAssertion"8@"NSError"16
Released %@ without invalidating first.
-[PGProcessAssertion invalidate]
com.apple.InCallService
com.apple.mediaserverd
com.apple.pegasus.PGPictureInPictureController %p
B16@?0@"PGPictureInPictureRemoteObject"8
B24@?0@"PGPictureInPictureRemoteObject"8^B16
v20@?0B8@"NSError"12
-[PGPictureInPictureController cancelPictureInPictureForApplication:sceneSessionPersistentIdentifier:]
-[PGPictureInPictureController pictureInPictureInterruptionBeganWithReason:attribution:]
-[PGPictureInPictureController pictureInPictureInterruptionEndedWithReason:attribution:]
TelephonyUtilities
expanseEnabled
@16@?0@"PGPictureInPictureRemoteObject"8
-[PGPictureInPictureController _updateAllRemoteObjectsForPIPPossibleAndExemptAttributions]
-[PGPictureInPictureController listener:shouldAcceptNewConnection:]
pictureInPictureApplications
-[PGPictureInPictureController pictureInPictureRemoteObject:willShowPictureInPictureViewController:]
pictureInPictureActive
activePictureInPictureApplication
-[PGPictureInPictureController backgroundPIPService:didGrantBackgroundPIPAuthorizationForActivitySessionWithIdentifier:]
-[PGPictureInPictureController backgroundPIPService:didRevokeBackgroundPIPAuthorizationForActivitySessionWithIdentifier:]
-[PGPictureInPictureController backgroundPIPService:canAuthorizeBackgroundPIPForActivitySessionWithIdentifier:appBundleIdentifier:]
_PGInterruption
%@: %@ - %@
<nil>
PictureInPicture - PGInterruptionAssistant - %p
@8@?0
isInterrupted:%@; interruptions: %@; exempt attribution:%@;
@16@?0@"_PGInterruption"8
B16@?0@"_PGInterruption"8
Unspecified
UILocked
Camera
Prevent Background Audio
Changed Tethering While Stashed
invalid
PGCommand.m
Invalid parameter not satisfying: %@
action != PGSystemActionSendToProxy
action != 0
v32@?0@"NSNumber"8@"NSNumber"16^B24
skipByInterval
skipToLive
setPlaying
setMuted
setSuspended
beginInterruption
endInterruption
skipPreroll
endOrLeaveActivity
setCameraEnabled
setMicrophoneMuted
switchCamera
menuItemSelected
showHUD
playbackAction
faceTimeAction
systemAction
testingAction
associatedBoolValue
associatedDoubleValue
associatedIntegerValue
sendToProxy
sendActionButtonTapped
cancelPIP
restoreFromPIP
toggleVisibility
toggleZoom
startPIP
invalidateFromProxy
v16@?0@"NSError"8
v24@?0@8@"PGDisplayLink"16
AD_PREROLL_LABEL
SPONSORED_PREROLL_LABEL
Sponsored
SKIP_PREROLL_IN_N_SECONDS
'IN N ', as in skip 'IN N' seconds.
SKIP_PREROLL
Skip
forward.end.fill
v16@?0q8
none
acquiring
aquired
pipStarted
refused
revoked
PGBackgroundPIPAuthorization.m
identifier != nil
com.apple.pegasus.background-pip-authorization-request
-[PGBackgroundPIPAuthorization initWithActivitySessionIdentifier:appBundleIdentifier:stateTransitionHandler:]_block_invoke_2
v16@?0@"BSServiceConnection"8
-[PGBackgroundPIPAuthorization initWithActivitySessionIdentifier:appBundleIdentifier:stateTransitionHandler:]_block_invoke
v16@?0@"<BSServiceConnectionConfiguring>"8
-[PGBackgroundPIPAuthorization initWithActivitySessionIdentifier:appBundleIdentifier:stateTransitionHandler:]
-[PGBackgroundPIPAuthorization transitionToState:]
%@ - %@.%@ - %@
Released %@ without revoking it first
Unknown Reason
v16@?0@"BSSimpleAssertion"8
v16@?0@"NSTimer"8
inputRadius
inputNormalizeEdges
inputQuality
inputIntermediateBitDepth
inputColorMatrix
PGCABackdropLayerView.m
[groupLeader _isCaptureOnly] || groupLeader == nil
groupLeader != self
v16@?0@"PGCABackdropLayerView"8
-[_PGBackgroundPIPServiceConnectionTarget transitionToStateIfPossible:]
%@ cxn: %@ activitySessionIdentifier: %@ bundleId: %@ state: %@
v24@?0^{__CFRunLoopObserver=}8Q16
com.apple.pegasus
nVh/gwNpy7Jv1NOk00CMrw
_UIHostedWindowHostingHandle
v24@?0@"PGControlsView"8@"PGDisplayLink"16
PGControlsView.m
You cannot do this, but Xcode thinks you can.
LIVE_INDICATOR_BADGE
LIVE
Common
%@ (%p) %@
Maiden
Initializing
Idle
RequestingAutomaticStart
SettingUpStart
Starting
Active
SettingUpStop
RequestingStop
RequestingTwoStageStop
RequestingCancel
Stopping
Suspended
Invalidating
Invalid
unspecified
uilocked
camera
preventBackgroundAudio
changedTetheringWhileStashed
com.apple.pegasus.PGPictureInPictureRemoteObject %p
PictureInPicture - PGPictureInPictureRemoteObject - %p
%@ is not a valid initializer. You must call -[%@ initWithConnection:].
object
empty
application
sourceSceneSessionPersistentIdentifier
activitySessionIdentifier
controlsStyle
isPictureInPicturePossible
exemptAttribution
isInterrupted
currentState
pictureInPictureShouldStartWhenEnteringBackground
stashed
isInMicroPIP
underLock
com.apple.MissingBundleIdentifier
UIApplicationSceneSettings
B24@?0@"FBScene"8^B16
-[PGPictureInPictureRemoteObject startPictureInPictureEnteringBackgroundAnimated:withCompletionHandler:]
-[PGPictureInPictureRemoteObject sendStartPictureInPictureTestAction]
PGPictureInPictureRemoteObject.m
Tried to BG PIP a remote object %@ that has NO for pip is possible
-[PGPictureInPictureRemoteObject startPictureInPictureFromBackground]
Start PIP from Background
-[PGPictureInPictureRemoteObject pictureInPictureInterruptionBeganWithReason:attribution:]
-[PGPictureInPictureRemoteObject suspend]
-[PGPictureInPictureRemoteObject resume]
-[PGPictureInPictureRemoteObject cancel]
-[PGPictureInPictureRemoteObject invalidate]
-[PGPictureInPictureRemoteObject setCurrentResourcesUsageReductionReasons:]
-[PGPictureInPictureRemoteObject _setUILockedResourcesUsageReductionReasons:]
-[PGPictureInPictureRemoteObject canTetherRemoteObjectAsMicroPIP:]
+[PGPictureInPictureRemoteObject tetherRemoteObject:toRemoteObject:mode:]
tetheredObject != nil || tetheringObject != nil
Failed to tether [%@] to [%@]. isStoppingTethering[%u] canStartTethering[%u]
%@ attempted transition from %@ to %@,  which is not allowed.
-[PGPictureInPictureRemoteObject _setCurrentState:]
Cancel PIP Task Assertion
-[PGPictureInPictureRemoteObject _invalidateAllAssertions]
-[PGPictureInPictureRemoteObject _isAssociatedWithOtherObject:]
Invalidate for failure to start stop or cancel
{CGSize=dd}
-[PGPictureInPictureRemoteObject startPictureInPictureAnimated:completionHandler:]
{CGRect={CGPoint=dd}{CGSize=dd}}
-[PGPictureInPictureRemoteObject stopPictureInPictureAnimated:withFinalInterfaceOrientation:finalLayerFrame:completionHandler:]
-[PGPictureInPictureRemoteObject setPictureInPictureShouldStartWhenEnteringBackground:completionHandler:]
-[PGPictureInPictureRemoteObject updatePlaybackStateWithDiff:]
-[PGPictureInPictureRemoteObject updateMenuItems:]
v16@?0@"PGMenuItem"8
@16@?0@"NSDictionary"8
-[PGPictureInPictureRemoteObject setActivitySessionIdentifier:]_block_invoke
-[PGPictureInPictureRemoteObject stopPictureInPictureAndRestoreUserInterface]
-[PGPictureInPictureRemoteObject setExemptAttribution:]
-[PGPictureInPictureRemoteObject _acquireOrInvalidateProcessAssertionIfNeeded]
PIP Visible Assertion
interruption began assertion
-[PGPictureInPictureRemoteObject pictureInPictureViewControllerDidRequestStop:]
-[PGPictureInPictureRemoteObject pictureInPictureViewControllerDidRequestCancel:]
FBSceneManager
Class getFBSceneManagerClass(void)_block_invoke
Unable to find class %s
void *FrontBoardLibrary(void)
/System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
/System/Library/PrivateFrameworks/FrontBoard.framework/Contents/MacOS/FrontBoard
PGMaterialView.m
view == _contentView || view == _backdropLayerView
com.apple.pegasus.background-pip-service
None
Playback
FaceTime
HomeKitCamera
Minimal
SelfView
Unknown
VideoOnDemand
LiveBroadcast
SecurityCamera
VideoCall
ScreenSharing
PGPictureInPictureViewControllerPrefersIdleTimerDisabledDidChangeNotification
-[_PGPictureInPictureContainerView willMoveToSuperview:]
-[_PGPictureInPictureContainerView didMoveToSuperview]
v12@?0B8
PG-PictureInPictureViewController
%@ is not a valid initializer. You must call -[%@ initWithControlsStyle:].
%@ does not support unarchiving from a nib.
PGPictureInPictureViewController.m
contentContainer[%@] does not implement `-[SBPIPPegasusContainerAdapter notePictureInPictureViewControllerTetheringDidUpdate]` but tethering was initiated.
PGPictureInPictureViewController.AnimationType
PGPictureInPictureViewController.InitialSpringVelocity
not hidden
hidden
v16@?0B8B12
-[PGPictureInPictureViewController viewDidLoad]
Toggle visibility action should not be sent to PictureInPictureViewController.
-[PGPictureInPictureViewController updatePlaybackStateWithDiff:]
-[PGPictureInPictureViewController _insertContentContainerViewIfNeeded]
com.apple.pegasus.PG_dispatch_async_with_timeout
v16@?0@"NSNotification"8
v16@?0@?<v@?>8
PGPlaybackState.m
No invalid key.
Elapsed Time
v32@?0@"NSNumber"8@16^B24
AnchorContentTime
AnchorWallTime
ContentType
ContentDuration
TimeControlStatus
PlaybackRate
Muted
RequiresLinearPlayback
RoutingVideoToHostedWindow
BackgroundAudioPolicy
PrerollAttributes
FaceTime-SupportsActions
FaceTime-CameraActive
FaceTime-MicrophoneMuted
FaceTime-CanSwitchCamera
FaceTime-DisablesLayerCloning
SecurityCam-HasMicrophone
Paused
Playing
WaitingToPlayAtSpecifiedRate
Legacy
Automatic
Pauses
ContinuesIfPossible
requiredLinearPlaybackEndTime
Content Type
preferredTintColor
r: %@ g: %@ b: %@ a: %@
Advertisement
unknown
com.apple.pegasus.backgroundPIPServiceEntitlement
com.apple.pegasus.PGBackgroundPIPService
com.apple.frontboard
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
-[PGBackgroundPIPService listener:didReceiveConnection:withContext:]
-[PGBackgroundPIPService listener:didReceiveConnection:withContext:]_block_invoke_2
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
-[PGBackgroundPIPService listener:didReceiveConnection:withContext:]_block_invoke
v16@?0@"BSServiceConnection<BSServiceConnectionHost>"8
-[PGBackgroundPIPService _handleInvalidatedTarget:]
-[PGBackgroundPIPService _handleInvalidatedTarget:]_block_invoke
-[PGBackgroundPIPService backgroundPIPTargetRequestsAuthorization:]
-[PGBackgroundPIPService backgroundPIPTargetRequestsAuthorization:]_block_invoke
UIView.CornerRadius
PGPictureInPictureProxyPictureInPictureActiveChangedNotification
PGPictureInPictureProxy.m
%@ needs valid viewController!
com.apple.pegasus.PGPictureInPictureProxy %p
%@ is not a valid initializer. You must call -[%@ initWithControlsStyle:viewController:].
shouldShowAlternateActionButtonImage
v28@?0B8@"NSError"12B20B24
resetting internal state
_resetInternalState
-[PGPictureInPictureProxy setPictureInPictureShouldStartWhenEnteringBackground:]
-[PGPictureInPictureProxy preferredContentSizeDidChangeForViewController]
Client Update
-[PGPictureInPictureProxy _viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewControllerWithReason:]
Client request
-[PGPictureInPictureProxy _windowSceneForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewControllerWithReason:]
-[PGPictureInPictureProxy startPictureInPicture]
-[PGPictureInPictureProxy stopPictureInPictureAndRestoreUserInterface:]
-[PGPictureInPictureProxy rotateContentContainer:withCompletionHandler:]
v28@?0B8@"NSError"12@"BKSAnimationFenceHandle"20
v16@?0@"<PGMutablePlaybackStateFaceTimeSupport>"8
Connection was nil and setClientSessionIdentifier called
v16@?0@"<PGMutablePlaybackState>"8
-[PGPictureInPictureProxy setControlsStyle:animated:withCompletionHandler:]
automaticallyInterruptsForLegacyFaceTimeBehaviors == NO
automaticallyInterruptsForLegacyFaceTimeBehaviors changed
-[PGPictureInPictureProxy setScreenSharingTitle:avatar:]
-[PGPictureInPictureProxy _setActivationState:reason:]
_setActivationState: %@
-[PGPictureInPictureProxy _startPictureInPictureAnimated:enteringBackground:reason:withCompletionHandler:]
_startPictureInPictureAnimated: %@
_startPictureInPictureAnimated succeeded
We failed to start, but activation state remained activating and nobody cleaned up after the failure
_startPictureInPictureAnimated failed
-[PGPictureInPictureProxy _startPictureInPictureAnimated:enteringBackground:reason:withCompletionHandler:]_block_invoke
completionHandler != nil
successHandler != nil && failureHandler != nil
-[PGPictureInPictureProxy __setupStartWithAnimationType:initialLayerFrame:successHandler:failureHandler:]
starting two stage stop
two stage stop finalize block
v48@?0{CGRect={CGPoint=dd}{CGSize=dd}}8q40
appActivationError
_stopPictureInPictureAnimated
_stopPictureInPictureAnimated finalize block
B8@?0
-[PGPictureInPictureProxy __actuallyStopAnimated:reason:finalLayerFrame:finalInterfaceOrientation:completionHandler:]
-[PGPictureInPictureProxy __actuallyStopAnimated:reason:finalLayerFrame:finalInterfaceOrientation:completionHandler:]_block_invoke_2
starting deactivating without being PGProxyActivationStateDeactivating
deactivation
begin deactivation
ending deactivating without being PGProxyActivationStateDeactivating
end deactivation
-[PGPictureInPictureProxy setReadyForDisplay:]
_prewarmAndStartAfterTimeout
Prewarming timeout fired
_cancelPrewarming
became ready for display with a non-zero size while prewarming
H:|[view]|
view
V:|[view]|
B16@?0@"UIScene"8
Scene Connection and _sceneSessionPersistentIdentifier is not connected
Scene Disconnection
Attempted to establish connection but %@ already had one
-[PGPictureInPictureProxy _establishConnection]_block_invoke
-[PGPictureInPictureProxy _updatePlaybackStateIfNeeded]
application did become active and no connection
deactivateIfNeededForInterruptedConnection
-[PGPictureInPictureProxy _legacyPictureInPictureInterruptionBegan]
-[PGPictureInPictureProxy _legacyPictureInPictureInterruptionEnded]
-[PGPictureInPictureProxy _setPictureInPictureActive:]
pip active
-[PGPictureInPictureProxy _setPictureInPictureSuspended:]
pictureInPictureSuspended
suspended changed
-[PGPictureInPictureProxy _setPictureInPicturePossible:]
pictureInPicturePossible
-[PGPictureInPictureProxy _setStashedOrUnderLock:reason:]
stashed or underlock
stashed or underlock changed
-[PGPictureInPictureProxy _setInterruptedForDefaultReason:initiatedByRemoteObject:]
default reason initiated by remote
default reason initiated locally
-[PGPictureInPictureProxy pictureInPictureStartRequestedAnimated:withCompletionHandler:]
remote request
-[PGPictureInPictureProxy pictureInPictureStopRequestedAnimated:withCompletionHandler:]
-[PGPictureInPictureProxy beginTwoStagePictureInPictureStopByRestoringUserInterfaceWithCompletionHandler:]
_twoStageStopForPictureInPictureRestoreWithContinueAfterUserInterfaceRestoreBlock completed without error, but a __pipStopFinalStageCompletionHandler was not available
-[PGPictureInPictureProxy endTwoStagePictureInPictureStopWithCompletionBlock:]
-[PGPictureInPictureProxy pictureInPictureCancelRequestedAnimated:withCompletionHandler:]
-[PGPictureInPictureProxy updatePictureInPicturePossible:]
-[PGPictureInPictureProxy pictureInPictureInvalidated]
pictureInPictureInvalidated starting
pictureInPictureInvalidated finished
remote message
-[PGPictureInPictureProxy setResourcesUsageReductionReasons:]
-[PGPictureInPictureProxy _setResourcesUsageReductionReasons:]_block_invoke
-[PGPictureInPictureProxy handleCommand:]
PGSystemActionStartPIP
Received command to end or leave without at least being activated, which should never happen
PG-StashedView
chevron.compact.left
chevron.compact.right
PGPegasusErrorDomain
MobilePIP
Opacity
Radius
Offset X
Offset Y
Continuous Corner Radius
PiP Shadow Settings
Restore Defaults
com.apple.developer.avfoundation.multitasking-camera-access
com.apple.pegasus.canShowScreenSharing
filters.gaussianBlur.inputRadius
gaussianBlur
inputHardEdges
com.apple.pegasus.menuitemprovider
title
symbolName
identifier
xmark
RESTORE_FULLSCREEN
Restore fullscreen
CLOSE_PIP
Close Picture in Picture
mic.fill
UNMUTE
Unmute
MUTE
Mute
play.slash.fill
play.fill
pause.fill
gobackward.15
goforward.15
SKIP_FORWARD_15_SECONDS
Skip forward 15 seconds
SKIP_BACK_15_SECONDS
Skip back 15 seconds
PLAY
Play
PAUSE
Pause
STOP
Stop
stop.fill
controlsShouldAutoHide
restoreButtonAccessibilityIdentifier
cancelButtonAccessibilityIdentifier
actionButtonAccessibilityIdentifier
skipBackButtonAccessibilityIdentifier
skipForwardButtonAccessibilityIdentifier
includesLiveIndicatorBadge
includesRestoreButton
includesCancelButton
includesActionButton
includesSkipBackButton
includesSkipForwardButton
includesContentLoadingIndicator
includesWaitingToPlayIndicator
isSkipBackButtonEnabled
isActionButtonEnabled
isSkipForwardButtonEnabled
includesSingleTapGestureRecognizer
includesDoubleTapGestureRecognizer
includesDoubleDoubleTapGestureRecognizer
includesProgressBar
progressBarShouldUpdate
actionButtonSystemImageName
actionButtonImageTintColor
actionButtonBackgroundTintColor
skipBackButtonImageTintColor
skipBackButtonBackgroundTintColor
skipForwardButtonImageTintColor
skipForwardButtonBackgroundTintColor
cancelButtonImageTintColor
cancelButtonBackgroundTintColor
skipForwardButtonSystemImageName
skipBackButtonSystemImageName
cancelButtonSystemImageName
prerollAttributes
actionButtonsWantBackground
cancelButtonCustomText
cancelButtonCustomImage
pip.exit
%s Will ignore %{public}@ because there wasn't a valid pid
%s %{public}@ target: %{public}@ domain: %{public}@
%s Acquiring %{public}@
%s %{public}@ invalidated
%s Failed to acquire %{public}@
%s Invalidating %{public}@. was valid: %{BOOL}u
%@ needs to be invoked on the main thread!
%s %{public}@ %{public}@
%s Starting PIP for FaceTime Video Call upon unlock
Multiple remote object response for attempted action, desired effect is ambiguous
Could remoteObject{%p} start pip upon backgrounding? %{BOOL}u, since we have at least the following: matchesSceneIdentifier{%{bool}u} shouldStartPictureInPictureEnteringBackground{%{bool}u}
%s Revoking authorization for %{public}@ because the delegate forbids background pip for the app %{public}@
%s Attempting to start backgroundPIP for %{public}@
%s %p %{public}@
%@ may not be invoked on the main thread!
%{public}@ - Connection with PID %d interrupted!
%{public}@ - Connection with PID %d invalidated!
%s Will tether because new object %p can tether %p as micropip
%s Will tether because active object %p can tether %p as micropip
%s New object %p suspending active %p
%s New object %p canceling active %p
%s removing objects for swap
%s %{public}@ %{public}@ canAuthorizeBackgroundPIPForActivitySessionWithIdentifier before checking interruptions %{BOOL}u
%s Controller changed mind and decided to reject auth due for %{public}@ %{public}@ to camera interruption.
%@ - Sending touch delivery policy %@ failed with error: %@
%s Connection Activated: %{public}@
%s Received interruption for connection: %{public}@
%s Received invalidation for connection: %{public}@
%s Authorizing identifier %{public}@
%s %@
%s requestedState: %{public}@ for %{public}@
%s Refusing requestedState: %{public}@ for %{public}@
Remote object(%p) shouldStartPictureInPictureEnteringBackground check result:%{BOOL}u. State: possible(%{BOOL}u) shouldStartEnteringBackground(%{BOOL}u) stateIsActive(%{BOOL}u) isInterrupted(%{BOOL}u) %{public}@
isPictureInPicturePossible - %{public}@ %@
Called endTwoStageStopPictureInPictureWithCompletionBlock on object that hasn't begun.
%s %p: %{public}@ isInterrupted %{BOOL}u 
pictureInPictureInterruptionEndedWithReason: %{public}@ isInterrupted %{BOOL}u %p
%s %p %{public}@ %{BOOL}u || _currentState: %{public}@ [otherObject canStartMicroPIP] %{BOOL}u ![self canStartMicroPIP] %{BOOL}u _tetheredMicroPIP == nil %{BOOL}u [self _isAssociatedWithOtherObject:otherObject] %{BOOL}u
%s %p tether %p to %p for mode %@
%s %p %{public}@ -> %{public}@
Invalidation timeout fired while isStoppingOrCancelling: %{BOOL}u.
%s Associating %p %{public}@ with %p %{public}@ because hasMatchingSessionIdentifierAndBundleIdentifier
%s Associating %p %{public}@ with %p %{public}@ because one of them is a video call and we always associate ICS with itself
%s Associating %p %{public}@ with %p %{public}@ because micropip is active between the objects
%s Associating %p %{public}@ with %p %{public}@ because it has backgroundPIPAuthorization.
%s Associating %p %{public}@ with %p %{public}@ because it has an expanse-like activity session identifier and the facetime video call has an ICS bundle for its activity session identifier.
%@ preferredContentSize:%{public}@
Using default initial preferred content size due to background PIP authorization %@
invalid preferredContentSize %{public}@ %@
invalid initialLayerFrame %{public}@ %@
%s %p %@
*** WARNING: Updating menu without the proper entitlement has no effect. ***
%s %p %{public}@ --> %{public}@
%s %p Acquiring process assertion
%s %p Invalidating process assertion
remote object %p notifying proxy of pictureInPictureInterruptionBegan
remote object %p notifying proxy of pictureInPictureInterruptionEnded shouldResumeSuggestion %{BOOL}u
%s %p canStop: %{BOOL}u
%s %p canCancel: %{BOOL}u
%{public}@ setStashed:%{bool}u [self _isUnderLock]:%{bool}u
%s %p newSuperview is VC's view: %{BOOL}u
%@ may not be called before view is loaded!
[Layout] %{public}@:%d Stash view set %{public}@
[Layout] Removing Stash Tab Views
%{public}@ Preparing animation with initial layer frame: %@
Should have nil _analyticsSessionUUID
%@ %{bool}u
%s %p REMOTE: %{public}@
%s %{public}@
%s Activated connection %{public}@ for target %{public}@
%s Invalidated connection %{public}@ for target: %{public}@
%s Activating connection %{public}@
%s Invalidating unvalidated client %{public}@
%s existingTargetForIdentifier %{public}@
%s BackgroundPIP: Revoking authorization for identifier %{public}@
Refusing authorization for %{public}@ because an authorization request (%{public}@) for this activitySessionIdentifier already exists %{public}@ and has not yet been revoked.
%s BackgroundPIP: Authorizing identifier %{public}@
Refusing authorization for %{public}@ because delegate didn't allow it.
%@ %{public}@
%s %p 
%s %p %ld
%s %p has title %{BOOL}u has avatar: %{BOOL}u
%s %p %{public}@ -> %{public}@ reason: %{public}@
%s %p Not updating activation state because we are no longer activating and it's not our responsibility to maintain activation state.
%{public}@ failed because not inactive.
%{public}@
Failed to setup start with error: %{public}@
[TwoStageStop] Failed to finalize with error %{public}@.
[TwoStageStop] Failed to __setupStopAnimated:::::
Timed out attempting to activate app on PIP stop
Timed out attempting to restore UI on PIP stop, attempt proceeding anyway
%s Skipping deactivation as we are no longer deactivating.
%s Skipping deactivation as our state is not deactivating. Error had been: %{public}@
%@ must be invoked on the main thread!
%s %p Ready for display: %{BOOL}u
PGHostedWindow root view controller *is* now containing: %{public}@[%p]
PGHostedWindow root view controller is *not* anymore containing: %{public}@[%p]
%{public}@ %{public}@
%s %p - Connection interrupted!
%s %p - Connection invalidated
%s %p APP: %{public}@
%s %p %{BOOL}u
%{public}@ Did update stashed or under lock state. stashedOrUnderLock{%{bool}u} reason: %{public}@
%{public}@ Did update _isInterruptedForAnyReason %{BOOL}u --> shouldBeInterruptedForAnyReason %{BOOL}u reason: %{public}@ canBeInterrupted %{BOOL}u _isInterruptedForDefaultReason %{BOOL}u initiatedByRemoteObject: %{BOOL}u
%{public}@ %{bool}u
%s Informing %{public}@ of didUpdateResourcesUsageReductionReasons:%@ oldReasons:%@
%@ oldReasons cannot equal new ones.
%@ %@
%{public}@ isActiveOrStarting: %{BOOL}u handle command %{public}@ should notify: %{BOOL}u
[Layout] progress{%.2f} thresholdedProgress{%.2f} backdropScale{%.2f}
%@ - Acquiring remote object proxy for connection %@ failed with error: %@
updatePlaybackStateWithDiff: %@
playback state after updates: %@
softlink:r:path:/System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
PGVibrancyEffects
PGPictureInPictureApplication
NSCopying
PGGradientView
PGProcessAssertion
Utility
PGPictureInPictureController
NSXPCListenerDelegate
NSObject
PGPictureInPictureRemoteObjectDelegate
PGBackgroundPIPServiceDelegate
PGAdditions
PGDisplayLink
BSInvalidatable
PGHostedWindow
PGHostedWindowHostingHandle
_PGInterruption
PGInterruptionAssistant
PGCommand
PGLayerHostView
_PGBundle
PGPortalView
PGPrerollIndicatorView
PGButtonViewDelegate
PGProgressIndicator
PGVibrantFillView
PGBackgroundPIPAuthorization
PGBackgroundPIPServerToClientInterface
PGControlsContainerView
PGControlsViewModelDelegate
UIGestureRecognizerDelegate
PGCABackdropLayerView
PGCABackdropLayer
PGCABackdropLayerViewSupport
_PGBackgroundPIPServiceConnectionTarget
PGBackgroundPIPClientToServerInterface
PGRunLoopObserver
PGPictureInPictureRemoteObjectInterface
PGPictureInPictureExportedInterface
PGLayoutContainerView
PGControlsView
PGPictureInPictureRemoteObject
PGPictureInPictureViewControllerDelegate
PGCommandHandler
PGMaterialView
PGBackgroundPIPServiceSpecification
_PGPictureInPictureContainerView
PGPictureInPictureViewControllerClippingView
PGPictureInPictureViewControllerBackgroundView
PGHitTestExtendableView
PGPictureInPictureViewController
PTSettingsKeyPathObserver
PGPlaybackStateDiffConsumer
PGPlaybackState
PGMutablePlaybackState
FaceTimeSupport
PGMutablePlaybackStateFaceTimeSupport
SecurityCameraSupport
PGMutablePlaybackStateSecurityCameraSupport
PGPlaybackStatePrerollAttributes
PGBackgroundPIPService
BSServiceConnectionListenerDelegate
_PGBackgroundPIPServiceConnectionTargetDelegate
PGStashedMaskView
PGPictureInPictureProxy
_PGPictureInPictureConnectionExportedObject
PGStashView
__PGView
_PGButton
PGButtonView
PGTransientLocal
PGMobilePIPSettingsDomain
PGMobilePIPSettings
PGMicroPIPButtonView
PGBackdropView
PGMenuItem
BSDescriptionProviding
PGMenuItemWSupport
PGControlsViewModel
PGControlsViewModelValues
getRed:green:blue:alpha:
PG_wantsVibrancyEffect
TB,R,N
renderingMode
tintColor
layer
compositingFilter
isEqualToString:
setCompositingFilter:
PG_recursivelyDisallowGroupBlending
PG_removeVibrancyEffect
setAllowsGroupBlending:
subviews
countByEnumeratingWithState:objects:count:
PG_updateVibrancyEffectForTintColor
_setTextColorFollowsTintColor:
image
setAdjustsImageWhenDisabled:
imageForState:
titleLabel
setTintColor:
imageView
titleForState:
setBackgroundColor:
weakObjectsHashTable
processIdentifier
initWithProcessIdentifier:
addObject:
init
raise:format:
dealloc
bundleIdentifier
isEqualToPGPictureInPictureApplication:
hash
stringWithFormat:
pictureInPictureApplicationWithProcessIdentifier:
copyWithZone:
isEqual:
description
.cxx_destruct
_processIdentifier
_bundleIdentifier
Ti,R,N,V_processIdentifier
T@"NSString",R,N,V_bundleIdentifier
objectForKeyedSubscript:
serviceWithDefaultShellEndpoint
dictionaryWithObjects:forKeys:count:
optionsWithDictionary:
errorWithDomain:code:userInfo:
openApplication:withOptions:completion:
invalidate
applicationInfoForPID:completion:
bundleInfoValueForKey:PID:
initWithFrame:
colorWithWhite:alpha:
CGColor
arrayWithObjects:count:
setColors:
setLocations:
setUserInteractionEnabled:
layerClass
hitTest:withEvent:
T@"CAGradientLayer",R,D,N
attributeWithDomain:name:
transientTaskDomainAttribute
assertionWithDomainAttribute:forProcessWithIdentifier:explanation:
pipVisibleDomainAttribute
initWithExplanation:
targetWithPid:
acquireWithTarget:domainAttribute:
copy
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_isInvalidated
attributeWithCompletionPolicy:
initWithExplanation:target:attributes:
acquireWithInvalidationHandler:
_setInvalidated:
isValid
transientTaskAssertionForProcessWithIdentifier:explanation:
pipVisibleAssertionForProcessWithIdentifier:explanation:
_lock_invalidated
_explanation
_assertion
_queue
_error
_acquired
_lock
sourceSceneSessionPersistentIdentifier
matchesSceneSessionIdentifier:
UTF8String
initWithMachServiceName:
setDelegate:
resume
isStartingStoppingOrCancellingPictureInPicture
bs_containsObjectPassingTest:
pictureInPictureController:didCreatePictureInPictureViewController:
pictureInPictureController:willDestroyPictureInPictureViewController:
pictureInPictureController:willHidePictureInPictureViewController:
pictureInPictureController:didHidePictureInPictureViewController:
pictureInPictureController:shouldCancelPictureInPictureForApplication:whenStartingPictureInPictureForApplication:
pictureInPictureController:shouldDenyNewConnection:
pictureInPictureController:didRequestStopForPictureInPictureViewController:sourceSceneSessionIdentifier:animated:
initialFrameForInteractivePictureInPictureAnimationEnteringBackgroundForApplication:sceneSessionPersistentIdentifier:
preferredContentSizeForInteractivelyEnteringBackgroundForApplication:sceneSessionPersistentIdentifier:
shouldStartPictureInPictureForApplicationEnteringBackground:sceneSessionPersistentIdentifier:
startPictureInPictureForApplicationEnteringBackground:sceneSessionPersistentIdentifier:animated:completionHandler:
stopPictureInPictureForApplication:sceneSessionPersistentIdentifier:animated:completionHandler:
cancelPictureInPictureForApplication:sceneSessionPersistentIdentifier:
_remoteObjectForPictureInPictureApplication:sceneSessionPersistentIdentifier:error:
contentType
_remoteObjectThatShouldStartPictureInPictureEnteringBackgroundForPictureInPictureApplication:sceneSessionPersistentIdentifier:error:
initialLayerFrame
preferredContentSize
pictureInPictureApplication
bs_firstObjectPassingTest:
_remoteObjectsForPictureInPictureApplication:
isMainThread
_remoteObjectForPictureInPictureApplication:passingTest:error:
isStoppingOrCancellingPictureInPicture
_pictureInPictureRemoteObjects
supportsMicroPIP
currentState
canTetherRemoteObjectAsMicroPIP:
startPictureInPictureEnteringBackgroundAnimated:withCompletionHandler:
_remoteObjectThatCanStopPictureInPictureApplication:sceneSessionPersistentIdentifier:error:
stopPictureInPictureAnimated:withCompletionHandler:
beginTwoStageStopPictureInPictureByRestoringUserInterfaceWithCompletionHandler:
_remoteObjectThatCanEndTwoStageStopPictureInPictureApplication:error:
endTwoStageStopPictureInPictureWithCompletionBlock:
_remoteObjectThatCanCancelPictureInPictureApplication:sceneSessionPersistentIdentifier:error:
activitySessionIdentifier
commandForEndOrLeaveActivityRequested
handleCommand:
cancel
pictureInPictureViewController
setCurrentResourcesUsageReductionReasons:
_remoteObjectForTestApplicationWithBundleIdentifier:
sendStartPictureInPictureTestAction
viewModel
handleRestoreButtonTapped
pictureInPictureInterruptionBeganWithReason:attribution:
addReason:attribution:
containsObject:
isInterrupted
pictureInPictureInterruptionEndedWithReason:attribution:
hasInterruptionReason:
removeReason:attribution:
_faceTimeVideoCallRemoteObject
shouldStartPictureInPictureEnteringBackground
pictureInPictureControllerCanBackgroundStartForFaceTimeVideoCall:
startPictureInPictureFromBackground
bs_map:
count
dictionaryWithCapacity:
objectForKey:
array
setObject:forKey:
startListener
objectsPassingTest:
anyObject
canStopPictureInPicture
canCancelPictureInPicture
canEndTwoStageStopPictureInPicture
hasAcquiredAuthorizationForActivitySessionWithIdentifier:appBundleIdentifier:
isVideoCall
isPIPAllowedForCurrentContentType
canPreventOrSuspendRemoteObject:
setPictureInPicturePossible:
setExemptAttribution:
isAssociatedWithRemoteObject:
identifiersForAuthorizedActivitySessions
_hasActiveNonVideoCallRemoteObjectAuthorizedForBackgroundPIP
delegate
pictureInPictureController:shouldAuthorizeBackgroundPIPForAppWithBundleIdentifier:
canStartBackgroundPIPForCurrentActivitySessionIdentifier
revokeAuthorizationActivitySessionWithIdentifier:
removeObject:
willChangeValueForKey:
didChangeValueForKey:
copyWithExemptAttribution:
initWithConnection:interruptionAssistant:
queue
_setQueue:
PG_hasScreenSharingEntitlement
setExportedInterface:
setExportedObject:
connection
setInterruptionHandler:
_removeRemoteObject:
_updateAllRemoteObjectsForPIPPossibleAndExemptAttributions
setInvalidationHandler:
setRemoteObjectInterface:
_addRemoteObject:
analyticsDelegate
setAnalyticsDelegate:
tetherRemoteObject:toRemoteObject:mode:
suspend
setWithCapacity:
minusSet:
pipDidStartForRemoteObject:
pipDidStopForRemoteObject:
cameraInterruptionAttributions
isPictureInPictureSupported
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
pictureInPictureRemoteObjectShouldAcceptSetupRequest:
pictureInPictureRemoteObjectShouldUpdateCancellationPolicyOnStart:
pictureInPictureRemoteObjectShouldCancelActivePictureInPictureOnStart:
pictureInPictureRemoteObject:didRequestPictureInPictureStopForViewController:sourceSceneSessionIdentifier:animated:
pictureInPictureRemoteObject:didCreatePictureInPictureViewController:
pictureInPictureRemoteObject:willShowPictureInPictureViewController:
pictureInPictureRemoteObject:didShowPictureInPictureViewController:
pictureInPictureRemoteObject:willHidePictureInPictureViewController:
pictureInPictureRemoteObject:didHidePictureInPictureViewController:
pictureInPictureRemoteObject:willDestroyPictureInPictureViewController:
pictureInPictureRemoteObjectNeedsActivationAndInterruptionPolicyUpdate:
pictureInPictureRemoteObjectHasBackgroundPIPAuthorization:
backgroundPIPService:canAuthorizeBackgroundPIPForActivitySessionWithIdentifier:appBundleIdentifier:
backgroundPIPService:didGrantBackgroundPIPAuthorizationForActivitySessionWithIdentifier:
backgroundPIPService:didRevokeBackgroundPIPAuthorizationForActivitySessionWithIdentifier:
initialFrameForInteractivePictureInPictureAnimationEnteringBackgroundForApplication:
preferredContentSizeForInteractivePictureInPictureAnimationEnteringBackgroundForApplication:
shouldStartPictureInPictureForApplicationEnteringBackground:
startPictureInPictureForApplicationEnteringBackground:animated:completionHandler:
stopPictureInPictureForApplication:animated:completionHandler:
cancelPictureInPictureForApplication:
contentTypePictureInPictureApplication:sceneSessionPersistentIdentifier:
preferredContentSizeForActivePictureInPictureWithApplication:sceneSessionPersistentIdentifier:
isStoppingOrCancellingPictureInPictureForApplication:sceneSessionPersistentIdentifier:
tetheringModeForSceneSessionPersistentIdentifier:
beginTwoStageStopPictureInPictureForApplication:withSceneSessionPersistentIdentifier:animated:byRestoringUserInterfaceWithCompletionHandler:
endTwoStageStopPictureInPictureForApplication:withSceneSessionPersistentIdentifier:animated:completionHandler:
startPictureInPictureResourcesUsageReductionForApplication:requestingViewController:
stopPictureInPictureResourcesUsageReductionForApplication:requestingViewController:
startPictureInPictureTestActionForApplicationWithBundleIdentifier:
restorePictureInPictureTestActionForApplicationWithBundleIdentifier:
pictureInPictureInterruptionBegan
pictureInPictureInterruptionBeganWithReason:
pictureInPictureInterruptionEnded
pictureInPictureInterruptionEndedWithReason:
existingPictureInPictureApplicationForBundleIdentifier:
activePictureInPictureApplications
suspendedPictureInPictureApplication
activeSceneSessionIdentifiersByApplication
activateBackgroundPIPAuthorizationService
startMicroPIPIfPossibleForVideoCallWithScenePersistenceIdentifier:
pictureInPictureRemoteObjectInterruptionAssistant:
isPictureInPictureActive
pictureInPictureApplications
activePictureInPictureApplication
_lock_pictureInPictureRemoteObjects
_pictureInPictureRemoteObjectsSupportingActiveSessionCancellationOnStart
_listener
_listenerQueue
_activePictureInPictureRemoteObjects
_suspendedPictureInPictureRemoteObject
_backgroundPIPService
_interruptionAssistant
_delegate
_remoteObjectThatRequestedStop
_delegateRespondsTo
_pictureInPictureActive
_pictureInPictureApplications
_activePictureInPictureApplication
_analyticsDelegate
pictureInPictureActive
TB,R,N,GisPictureInPictureActive,V_pictureInPictureActive
T@"NSSet",R,N,V_pictureInPictureApplications
T@"NSSet",R,N
T@"PGPictureInPictureApplication",R,N,V_activePictureInPictureApplication
T@"NSDictionary",R,N
T@"<PGPictureInPictureControllerDelegate>",W,N
T@"<PGPictureInPictureAnalyticsDelegate>",W,N,V_analyticsDelegate
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
setPriority:
PG_constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:
_linkFired:
displayLinkWithTarget:selector:
setPreferredFramesPerSecond:
mainRunLoop
addToRunLoop:forMode:
isPaused
setPaused:
owner
linkFired
initWithOwner:linkFired:
preferredFramesPerSecond
_link
_invalidated
_owner
_linkFired
_preferredFramesPerSecond
T@,R,W,N,V_owner
T@?,R,C,N,V_linkFired
TQ,N,V_preferredFramesPerSecond
hostingHandle
canBecomeFirstResponder
_canBecomeKeyWindow
hostedWindowHostingHandle
T@"PGHostedWindowHostingHandle",R,N
builder
appendInteger:
appendString:
reason
attribution
initWithReason:attribution:
_bs_hash
_reason
_attribution
Tq,R,N,V_reason
T@"NSString",R,C,N,V_attribution
_interruptionsDescription
mutableCopy
_lock_calculateIsInterrupted
allKeys
componentsJoinedByString:
dictionary
integerValue
numberWithLong:
setObject:forKeyedSubscript:
numberWithInteger:
setWithArray:
exemptAttribution
isProxyActive
setProxyActive:
isExemptFromUILockInterruptionsWhenActive
setExemptFromUILockInterruptionsWhenActive:
shouldNotifyProxyOfInterruptionBegan
noteDidNotifyProxyOfInterruptionBegan
shouldNotifyProxyOfInterruptionEnded
noteDidNotifyProxyOfInterruptionEnded
allowsResumingAfterInterruptionEnds
_lock_interruptions
_lock_exemptAttribution
_lock_allowsResumingAfterInterruptionEnds
_lock_isInterrupted
_lock_isInterruptedAccordingToProxy
_lock_isProxyActive
_lock_exemptFromUILockInterruptionsWhenActive
_stateDumpInvalidatable
interrupted
TB,R,GisInterrupted
proxyActive
TB,GisProxyActive
exemptFromUILockInterruptionsWhenActive
TB,GisExemptFromUILockInterruptionsWhenActive
TB,R
initWithDictionary:
numberWithBool:
numberWithDouble:
commandForPlaybackAction:associatedBoolValue:
commandForPlaybackAction:
commandForPlaybackAction:associatedDoubleValue:
commandForSystemAction:
commandForTestingAction:
commandForFaceTimeAction:associatedBoolValue:
commandForFaceTimeAction:
commandForFaceTimeAction:associatedIntegerValue:
dictionaryRepresentation
boolValue
doubleValue
descriptionWithMultilinePrefix:
succinctDescriptionBuilder
build
builderWithObject:
descriptionBuilderWithMultilinePrefix:
appendString:withName:
appendInteger:withName:
appendBool:withName:
appendDouble:withName:decimalPrecision:
appendDescriptionForKey:value:toBuilder:
enumerateKeysAndObjectsUsingBlock:
appendBodySectionWithName:multilinePrefix:block:
commandForSetMuted:
commandForSetPlaying:
commandForSetSuspended:
commandForBeginInterruption
commandForEndInterruptionWithShouldResumeSuggestion:
commandForSkipToLive
commandForSkipPreroll
commandForSkipByInterval:
commandForCancelPIP
commandForRestoreFromPIP
commandForToggleControlsVisibility
commandForSendActionButtonTapped
commandForToggleZoom
commandForStartPIP
commandForInvalidateFromProxy
commandForTestStartPIP
commandForSetCameraEnabled:
commandForSetMicrophoneMuted:
commandForSwitchCamera
commandForMenuItemSelected:
commandForShowHUD
playbackAction
systemAction
faceTimeAction
testingAction
associatedBoolValue
associatedIntegerValue
associatedDoubleValue
succinctDescription
_dictionaryRepresentation
T@"NSDictionary",R,N,V_dictionaryRepresentation
Tq,R,N
Td,R,N
viewWithHostedWindowHostingHandle:
addSubview:
setHostedWindowHostingHandle:
_manageSharingOfTouchesBetweenClientAndHostContext
window
contextID
_contextId
policyRequiringSharingOfTouchesDeliveredToChildContextId:withHostContextId:
endpoint
setAssertionEndpoint:
ipc_addPolicy:
didMoveToWindow
cornerRadiusScale
setCornerRadiusScale:
_remoteView
_touchDeliveryPolicyAssertion
_cornerRadiusScale
T@"PGHostedWindowHostingHandle",&,N
Td,N,V_cornerRadiusScale
bundleForClass:
bundle
localizedStringForKey:value:table:
portalLayer
setSourceLayer:
setMatchesTransform:
setSourceView:
sourceView
_sourceView
T@"UIView",W,N,V_sourceView
updateValues
sizeToFit
values
isPrerollActive
prerollAttributes
setLabelText:
secondsUntilPrerollSkippable
setTimeRemainingText:
setAccessibilityIdentifier:
setHidden:
contentTypeLabel
prerollTintColor
text
labelText
whiteColor
setTextColor:
systemFontOfSize:weight:
setFont:
setCornerCurve:
setCornerRadius:
setTextAlignment:
setClipsToBounds:
setTransform:
setText:
frame
setLabelSize:
_layoutContentTypeLabel
timeRemainingText
buttonWithDelegate:
disabledTintColor
setEnabled:
setGlyphSize:
_setContinuousCornerRadius:
setSystemImageName:
fontDescriptor
fontDescriptorByAddingAttributes:
fontWithDescriptor:size:
isPrerollSkippable
enabledTintColor
_layoutSkipPrerollButton
layoutSubviews
handleSkipPrerollButtonTapped
length
bounds
preferredHeight
labelSize
setFrame:
_subviewTransform
setFrameOrigin:
buttonViewDidReceiveTouchUpInside:
buttonView:imageRectForContentRect:proposedRect:
buttonView:titleRectForContentRect:proposedRect:
buttonView:contentEdgeInsetsForProposedInsets:
initWithFrame:viewModel:
labelWidth
skipPrerollButtonView
displayLink
_viewModel
_contentTypeLabel
_skipPrerollButtonView
_displayLink
_labelSize
T@"PGControlsViewModel",R,N,V_viewModel
T@"UILabel",R,N,V_contentTypeLabel
T@"PGButtonView",R,N,V_skipPrerollButtonView
T@"NSString",C,N
T{CGSize=dd},N,V_labelSize
T@"PGDisplayLink",R,N,V_displayLink
contentView
_updateElapsedTrackTintColor
_performLayout
_updatePulseAnimatorIfNeeded
_setCornerRadius:
progress
customElapsedTrackTintColor
includesWaitingToPlayIndicator
_transitionToPulseStateIfNeeded:
isRunning
isInterruptible
stopAnimation:
finishAnimationAtPosition:
_applyPulseState
initWithDuration:curve:animations:
addCompletion:
startAnimation
setCustomElapsedTrackTintColor:
setProgress:
setIncludesWaitingToPlayIndicator:
_elapsedTrack
_completeTrack
_pulseAnimator
_pulseState
_includesWaitingToPlayIndicator
_progress
_customElapsedTrackTintColor
Td,N,V_progress
T@"UIColor",&,N,V_customElapsedTrackTintColor
TB,N,V_includesWaitingToPlayIndicator
tintColorDidChange
defaultShellMachName
identifier
endpointForMachName:service:instance:
connectionWithEndpoint:
interface
setInterface:
serviceQuality
setServiceQuality:
setTargetQueue:
setInterfaceTarget:
state
_transitionToState:
remoteTarget
grantAuthorizationForActivitySessionWithIdentifier:bundleIdentifier:
setActivationHandler:
activate
revoke
configureConnection:
stateTransitionHandler
revokeAuthorization
transitionToState:
initWithActivitySessionIdentifier:appBundleIdentifier:stateTransitionHandler:
appBundleIdentifier
_connection
_lock_state
_activitySessionIdentifier
_appBundleIdentifier
_stateTransitionHandler
T@?,R,C,V_stateTransitionHandler
T@"NSString",R,C,N,V_activitySessionIdentifier
T@"NSString",R,C,N,V_appBundleIdentifier
setOverrideUserInterfaceStyle:
_handleSingleTapGestureRecognizer:
initWithTarget:action:
addGestureRecognizer:
setDelaysTouchesEnded:
_handleDoubleTapGestureRecognizer:
setNumberOfTapsRequired:
_handleDoubleDoubleTapGestureRecognizer:
setNumberOfTouchesRequired:
setBorderWidth:
setBorderColor:
_updateVisibilityOfView:hidden:animated:existingAnimator:
_setControlsHidden:animated:
_invalidateTimer
prefersControlsHidden
_setPrefersControlsHidden:animated:
commandHandler
includesSingleTapGestureRecognizer
includesDoubleTapGestureRecognizer
includesDoubleDoubleTapGestureRecognizer
viewModelDidUpdateValuesFromOldValues:
_updateHideControlsAfterDelayTimer
playbackState
normalizedProgress
controlsShouldAutoHide
includesContentLoadingIndicator
_continuousCornerRadius
insertSubview:belowSubview:
removeFromSuperview
includesRestoreButton
view
locationInView:
isDescendantOfView:
gestureRecognizerShouldBegin:
handleSingleTap
handleDoubleTap
handleDoubleDoubleTap
isShowingControlsForHoverActive
setShowingControlsForHoverActive:
_controlsShouldAutoHide
_acquirePreventAutoHideOfControlsAssertionWithReason:
UUID
UUIDString
initWithIdentifier:forReason:invalidationBlock:
setPrefersControlsHidden:
updateProgress
performWithoutAnimation:
updateControlsAlpha
coordinatedAnimationsForControlsVisibiity
_performVisibilityTransitionAnimated:existingAnimator:animations:success:
setAlpha:
scheduledTimerWithTimeInterval:repeats:block:
controlsViewModel:valuesChangedFromOldValue:
controlsViewModel:didIssueCommand:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
setControlsContainerHidden:animated:
setInteractivelyResizing:
_handleHoverGestureRecognizer:
PG_acquireAssertionToPreventAutoHideOfControlsWithReason:
setCommandHandler:
showsPictureInPictureUnavailableIndicator
setShowsPictureInPictureUnavailableIndicator:
isInteractivelyResizing
setCoordinatedAnimationsForControlsVisibiity:
_controlsView
_containerViewVisibilityAnimator
_controlsViewVisibilityAnimator
_hidableControlsVisibilityAnimator
_interruptionDimmingView
_singleTapGestureRecognizer
_doubleTapGestureRecognizer
_doubleDoubleTapGestureRecognizer
_hoverGestureRecognizer
_hideControlsAfterDelayTimer
_preventAutoHideOfControlsAssertionIdentifiers
_interactivelyResizing
_showsPictureInPictureUnavailableIndicator
_showingControlsForHoverActive
_commandHandler
_coordinatedAnimationsForControlsVisibiity
T@"<PGCommandHandler>",W,N,V_commandHandler
TB,N,V_showsPictureInPictureUnavailableIndicator
showingControlsForHoverActive
TB,N,GisShowingControlsForHoverActive,V_showingControlsForHoverActive
interactivelyResizing
TB,N,GisInteractivelyResizing,V_interactivelyResizing
T@?,C,N,V_coordinatedAnimationsForControlsVisibiity
filterWithType:
setValue:forKey:
valueWithCAColorMatrix:
colorWithRed:green:blue:alpha:
initWithFrame:captureOnly:
setCaptureOnly:
setGroupName:
defaultCenter
updateEffects
addObserver:selector:name:object:
removeObserver:name:object:
_preferredEffect
_preferredBackgroundColor
materialFilters
_isCaptureOnly
isEnabled
PG_backdropGroupLeader
setGroupLeader:
groupLeader
groupName
scale
setScale:
filters
isEqualToArray:
setFilters:
backgroundColor
_hasAnyDependentsThatWantsCapturedBlur
customBackgroundColor
reducedTransparencyColor
PG_preferredVisibilityForView:
captureOnly
_removeDependent:
_addDependent:
_wantsCapturedBlur
_enumerateDependents:
_ensureDependents
alpha
superview
initWithCoder:
pointInside:withEvent:
setCustomBackgroundColor:
_isTransparentOrHasTransparentAncestor
dependents
_customBackgroundColor
_groupLeader
_dependents
T@"PGCABackdropLayer",R,D,N
T@"PGCABackdropLayerView",W,N,V_groupLeader
T@"NSHashTable",R,N,V_dependents
T@"UIColor",C,N,V_customBackgroundColor
valueForKeyPath:
setValue:forKeyPath:
isConnectionActive
backgroundPIPTargetDidInvalidate:
backgroundPIPTargetRequestsAuthorization:
transitionToStateIfPossible:
initWithConnection:delegate:
_lock_activitySessionIdentifier
_lock_bundleIdentifier
T@"<_PGBackgroundPIPServiceConnectionTargetDelegate>",W,N,V_delegate
connectionActive
TB,R,N,GisConnectionActive
setActions:
actions
setRunLoopObserver:
runLoopObserver
_actions
_runLoopObserver
T^{__CFRunLoopObserver=},N,V_runLoopObserver
T@?,C,N,V_actions
initializePictureInPictureWithControlsStyle:preferredContentSize:completionHandler:
setupStartAnimated:hostedWindowHostingHandle:sceneSessionPersistentIdentifier:preferredContentSize:initialInterfaceOrientation:initialLayerFrame:completionHandler:
startPictureInPictureAnimated:completionHandler:
updateInitialLayerFrameForInteractiveTransitionAnimationUponBackgrounding:withCompletionHandler:
updateSourceSceneSessionPersistentIdentifierForInteractiveTransitionAnimationUponBackgrounding:withCompletionHandler:
updatePreferredContentSize:withCompletionHandler:
checkActivePictureInPictureCancellationPolicyWithCompletion:
rotateContentContainer:withCompletionHandler:
setupStopAnimated:needsApplicationActivation:completionHandler:
stopPictureInPictureAnimated:withFinalInterfaceOrientation:finalLayerFrame:completionHandler:
cleanupWithCompletionHandler:
setPictureInPictureShouldStartWhenEnteringBackground:completionHandler:
updatePlaybackStateWithDiff:
updateMenuItems:
setActivitySessionIdentifier:
stopPictureInPictureAndRestoreUserInterface
setScreenSharingTitle:avatar:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
setWithObject:
pictureInPictureStartRequestedAnimated:withCompletionHandler:
pictureInPictureStopRequestedAnimated:withCompletionHandler:
beginTwoStagePictureInPictureStopByRestoringUserInterfaceWithCompletionHandler:
endTwoStagePictureInPictureStopWithCompletionBlock:
pictureInPictureCancelRequestedAnimated:withCompletionHandler:
updatePictureInPicturePossible:
pictureInPictureInvalidated
updateHostedWindowSize:animationType:initialSpringVelocity:synchronizationFence:
hostedWindowSizeChangeBegan
hostedWindowSizeChangeEnded
actionButtonTapped
setStashedOrUnderLock:
setResourcesUsageReductionReasons:
setCircular:
_progressIndicatorFrameWithScaling:
null
includesSkipBackButton
includesActionButton
includesSkipForwardButton
includesCancelButton
includesLiveIndicatorBadge
isSkipBackButtonEnabled
isActionButtonEnabled
isSkipForwardButtonEnabled
actionButtonsWantBackground
systemWhiteColor
cancelButtonImageTintColor
cancelButtonBackgroundTintColor
skipBackButtonImageTintColor
skipBackButtonBackgroundTintColor
skipForwardButtonImageTintColor
skipForwardButtonBackgroundTintColor
actionButtonImageTintColor
actionButtonBackgroundTintColor
cancelButtonSystemImageName
restoreButtonSystemImageName
skipBackButtonSystemImageName
actionButtonSystemImageName
skipForwardButtonSystemImageName
cancelButtonAccessibilityIdentifier
restoreButtonAccessibilityIdentifier
skipBackButtonAccessibilityIdentifier
actionButtonAccessibilityIdentifier
skipForwardButtonAccessibilityIdentifier
cancelButtonCustomImage
setImage:
setBackdropHidden:
includesProgressBar
isHidden
cancelButtonCustomText
setNeedsLayout
layoutIfNeeded
_showsGradientView
traitCollection
displayScale
recommendedUpdateCadenceForProgressBarWithWidthInPixels:
preferredMinimumWidth
sizeWithAttributes:
origin
_prerollIndicatorFrameWithScaling:
font
setCenter:
center
initWithActivityIndicatorStyle:
insertSubview:atIndex:
darkGrayColor
isAnimating
startAnimating
stopAnimating
_isInAWindow
handleActionButtonTapped
handleSkipBackButtonTapped
handleSkipForwardButtonTapped
handleCancelButtonTapped
updateControlsHidden
_restoreButton
_cancelButton
_skipBackButton
_actionButton
_skipForwardButton
_liveIndicatorBadgeButton
_contentLoadingIndicator
_contentLoadingIndicatorContainerView
_hidableItemsLayoutContainerView
_captureOnlyView
_progressIndicator
_prerollIndicatorView
_gradientView
_allButtons
_groupNameBase
_displayLinkForProgressUpdates
_prefersControlsHidden
TB,N,V_prefersControlsHidden
rangeOfString:
substringToIndex:
substringFromIndex:
_invalidateAllAssertions
deactivateAnalyticsSessionIfNeeded
pictureInPictureDidDestroyAnalyticsSourceWithUUID:
_isUnderLock
pictureInPictureDidCreateAnalyticsSourceWithUUID:bundleIdentifier:contentType:
isPictureInPicturePossible
_canTransitionToState:
isStartingPictureInPicture
PG_appProxyWithDebugMethodAndPointerProem:
sharedInstance
settings
persistenceIdentifier
scenesPassingTest:
_isAppICS
PG_hasMultitaskingCameraAccessEntitlement
_setCurrentState:
notePictureInPictureStartedAutomatically:
PG_appProxyWithDebugMethodAndPointerProem:errorHandler:
_invalidateForFailureToStartStopOrCancel
_setUILockedResourcesUsageReductionReasons:
_notifyProxyOfStashedOrUnderLock:
_updateActiveProxyAndViewControllerOfInterruptionIfNeeded
flashControls
performSuspendAnimationWithCompletionHandler:
performResumeAnimationWithCompletionHandler:
notePictureInPictureWillStopForAppRequest:preferredFullScreenRestore:
parentViewController
_stopTethering
_finishCleanup
performStopAnimated:withFinalInterfaceOrientation:finalLayerFrame:completionHandler:
_setResolvedResourcesUsageReductionReasons:
_isICSVideoCall
canStartMicroPIP
_isAssociatedWithOtherObject:
setTetheringRemoteObject:
stashed
setTetheredRemoteObject:
tetherViewController:toViewController:mode:
_invalidationTimerWithTimeout:block:
_invalidateInterruptionBeganFinishTaskAssertion
pictureInPictureViewController:didTransitionToStashed:
currentConnection
valueWithBytes:objCType:
initWithApplication:sourceSceneSessionPersistentIdentifier:controlsStyle:
setAnalyticsDelegate:analyticsSourceUUID:
setPreferredContentSize:
_isInActivitySession
setInActivitySession:
setScreenSharingTitle:
setScreenSharingAvatar:
setSourceSceneSessionPersistentIdentifier:
prepareStartAnimationWithInitialInterfaceOrientation:initialLayerFrame:completionHandler:
pictureInPictureViewControllerDidRequestStop:
performStartAnimated:withCompletionHandler:
_updatePreferredContentSize:withCompletionHandler:
_synchronizedDrawingFence
performRotateAnimationWithRotation:completionHandler:
prepareStopAnimationWithCompletionHandler:
backgroundAudioPolicy
initWithDictionary:action:
PG_hasMenuItemProviderEntitlement
setMenuItems:
setInterrupted:
_acquireOrInvalidateProcessAssertionIfNeeded
_queue_notifyProxyOfInterruptionBegan
_queue_notifyProxyOfInterruptionEnded
_currentStateAllowsProcessAssertion
_wantsProcessAssertion
pictureInPictureViewController:didReceiveCommand:
pictureInPictureViewControllerDidRequestCancel:
pictureInPictureViewController:updateHostedWindowSize:animationType:initialSpringVelocity:
pictureInPictureViewControllerHostedWindowSizeChangeBegan:
pictureInPictureViewControllerHostedWindowSizeChangeEnded:
pictureInPictureViewControllerWantsStashTabSuppression:
pictureInPictureViewControllerShouldHideTetheredViewControllerAlongsideControls:
_invalidationTimerWithTimeout:
tetheredRemoteObject
tetheringRemoteObject
_queue_outstandingRotationAnimationsCount
_controlsStyle
_currentState
_processAssertion
_startBackgroundPIPAssertion
_interruptionBeganFinishTaskAssertion
_cancelPictureInPictureFinishTaskAssertion
_finishTaskInvalidationUUID
_timerForInvalidatingIfStopOrCancelFails
_analyticsSourceUUID
_shouldNoteStartedAutomaticallyForAnalytics
_isPictureInPicturePossible
_hasPendingCancellationRequest
_hasPendingStopRequest
_pictureInPictureShouldStartWhenEnteringBackground
_shouldShowAlternateActionButtonImage
_shouldShowLoadingIndicator
_menuItems
_playbackState
_hasBegunTwoStageStop
_stashed
_resourcesUsageReductionReasons
_UILockedResourcesUsageReductionReasons
_externalResourcesUsageReductionReasons
_considerStashedPlaybackAsBackgroundAudioTimer
_stateCaptureInvalidatable
_sourceScene
_screenSharingTitle
_screenSharingAvatar
_activitySessionIdentifierForLastActivePIPSession
_pictureInPictureApplication
_pictureInPictureViewController
_tetheredRemoteObject
_tetheringRemoteObject
_sourceSceneSessionPersistentIdentifier
_exemptAttribution
_preferredContentSize
_initialLayerFrame
T@"PGPictureInPictureRemoteObject",&,N,V_tetheredRemoteObject
T@"PGPictureInPictureRemoteObject",&,N,V_tetheringRemoteObject
T@"NSXPCConnection",R,N
T@"NSObject<OS_dispatch_queue>",R,N
T@"PGPictureInPictureApplication",R,N,V_pictureInPictureApplication
T@"PGPictureInPictureViewController",R,N,V_pictureInPictureViewController
T@"<PGPictureInPictureRemoteObjectDelegate>",W,N,V_delegate
Tq,R,N,V_currentState
pictureInPicturePossible
TB,N,GisPictureInPicturePossible
TB,R,N,GisInterrupted
videoCall
TB,R,N,GisVideoCall
pipAllowedForCurrentContentType
TB,R,N,GisPIPAllowedForCurrentContentType
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_initialLayerFrame
T{CGSize=dd},R,N,V_preferredContentSize
T@"NSString",R,N,V_sourceSceneSessionPersistentIdentifier
T@"NSString",R,C,N
T@"NSString",C,N,V_exemptAttribution
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
_cornerRadius
isBackdropHidden
_contentView
_backdropLayerView
_backgroundColor
T@"UIView",R,N
backdropHidden
TB,N,GisBackdropHidden
protocolForProtocol:
interfaceWithServer:client:
userInitiated
T@"BSServiceInterface",R,C,N
T@"BSServiceQuality",R,C,N
willMoveToSuperview:
viewIfLoaded
didMoveToSuperview
vcForDebugging
setVcForDebugging:
_vcForDebugging
T@"PGPictureInPictureViewController",W,N,V_vcForDebugging
ignoreCornerRadiusUpdates
setIgnoreCornerRadiusUpdates:
_ignoreCornerRadiusUpdates
TB,N,V_ignoreCornerRadiusUpdates
convertPoint:toView:
hitTestExtenderView
setHitTestExtenderView:
_hitTestExtenderView
T@"UIView",W,N,V_hitTestExtenderView
initWithNibName:bundle:
rootSettings
addKeyPathObserver:
defaultContentCornerRadius
prefersIdleTimerDisabled
postNotificationName:object:
setStashProgress:
isViewLoaded
_handleTapWhileStashedGestureRecognizer:
removeGestureRecognizer:
_updatePrefersIdleTimerDisabled
pictureInPictureDidChangeStashStateForAnalyticsSessionWithUUID:stashed:
isRoutingVideoToHostedWindow
playbackSourceDidUpdateIsRoutingVideoToHostedWindow:
acquireInterfaceOrientationLock
relinquishInterfaceOrientationLock
handleTapWhileStashedGesture
handleDoubleTapGesture
setStashed:
showChrome:animated:
_insertContentContainerViewIfNeeded
_resetStashTabViewsIfPossible
pictureInPictureDidDeactivateAnalyticsSessionWithUUID:analyticsSourceUUID:appStoppedSession:restoredFullScreen:
pictureInPictureDidDestroyAnalyticsSessionWithUUID:
setMinimumStashTabSize:
setStashedTabWidth:
setTetheredViewController:mode:
setTetheringViewController:mode:
_noteTetheringDidUpdate
_updateCornerRadii
notePictureInPictureViewControllerTetheringDidUpdate
clearColor
_loadShadowViewIfNeeded
_loadTabShadowViewIfNeeded
PG_animateUsingDefaultTimingWithAnimations:completion:
currentContentCornerRadius
PG_animateUsingDefaultDampedSpringWithInitialSpringVelocity:animations:completion:
blurProgress
setBlurProgress:
PG_animateUsingDefaultTimingWithOptions:animations:completion:
animateWithDuration:delay:options:animations:completion:
_updateStashTabStateWithBehavior:
_setStashedTabHidden:left:
_animateUsingSpringBehavior:tracking:animations:completion:
setView:
viewDidLoad
_addMaskViewSubviewIfNeeded
viewWillLayoutSubviews
PG_setAllowsEdgeAntialiasing:
_layoutStashTabViewsIfNeeded
tabViewBounds
setBounds:
position
setPosition:
_setPortalActive:left:
_setStashMaskActive:
setTabHidden:left:
setChevronHidden:left:
maskView
setMaskView:
_updateContentCornerRadiusForMaskActive:
PG_performWithoutRetargetingAnimation:
resetChevronState
preferredContentSizeDidChangeForPictureInPictureViewController
shouldAutorotate
interfaceOrientation
performStartInIsolationWithCompletionHandler:
_performStartAnimationWithCompletionHandler:
pictureInPictureDidCreateAnalyticsSessionWithUUID:bundleIdentifier:contentType:
pictureInPictureDidActivateAnalyticsSessionWithUUID:analyticsSourceUUID:automatically:
sharedApplication
endIgnoringInteractionEvents
beginIgnoringInteractionEvents
performStartAnimationWithCompletionHandler:
_performStopAnimationWithFinalInterfaceOrientation:finalLayerFrame:completionHandler:
performStopInIsolationWithCompletionHandler:
performStopAnimationWithFinalInterfaceOrientation:finalLayerFrame:completionHandler:
updateMenuItems
_updatePointerEffect
disablesLayerCloning
notePictureInPictureViewControllerPrefersHiddenFromClonedDisplayDidChange
setAllowsEdgeAntialiasing:
setShadowPathIsBounds:
_applyShadowSettingsToView:
shadowOffsetX
shadowOffsetY
setShadowOffset:
shadowOpacity
setShadowOpacity:
shadowRadius
setShadowRadius:
shadowContinuousCornerRadius
initWithFrame:minimumStashTabSize:
setTabShadowView:
playbackRate
canStartShowingChrome
animateViewWithAnimationType:initialSpringVelocity:animations:completion:
settings:changedValueForKeyPath:
setContentContainer:
setCanStartShowingChrome:
setContentCornerRadius:animated:
updateHostedWindowSize:
setPrefersStashTabSuppressed:
wantsStashTabSuppression
isStashTabHidden
setStashTabHidden:left:withSpringBehavior:
loadView
contentContainerView
preferredInterfaceOrientationForPresentation
setContentViewHidden:
_newShadowView
setCurrentContentCornerRadius:
application
contentContainer
tetheredViewController
tetheringViewController
tetheringMode
minimumStashTabSize
prefersStashTabSuppressed
menuItems
prefersHiddenFromClonedDisplay
waitForUIFinalizationCompletionBlock
setWaitForUIFinalizationCompletionBlock:
controlsStyle
microPIPSize
setMicroPIPSize:
microPIPHostedWindowHostingHandle
setMicroPIPHostedWindowHostingHandle:
_hostedWindowHostingHandle
_backgroundView
_containerView
_contentClippingView
_controlsContainerView
_shadowView
_tabShadowView
_stashView
_stashMaskView
_leftSideContentPortalView
_rightSideContentPortalView
_initialLayerFrameIsNull
_prefersIdleTimerDisabled
_isSuspended
_stashTabHidden
_stashTabShownLeft
_isShowingChrome
_portalsWereActive
_portalsWereActiveLeft
_isMicroPIP
_stashTabSpringBehavior
_inFlightStashTabAnimationIdentifier
_inFlightStashProgressAnimationIdentifier
_stashedTapGestureRecognizer
_contentContainer
_analyticsSessionUUID
_startedAutomatically
_contentContainerRespondsTo
_settings
_canStartShowingChrome
_prefersStashTabSuppressed
_prefersHiddenFromClonedDisplay
_currentContentCornerRadius
_application
_tetheredViewController
_tetheringViewController
_tetheringMode
_waitForUIFinalizationCompletionBlock
_microPIPHostedWindowHostingHandle
_minimumStashTabSize
_microPIPSize
T@?,C,N,V_waitForUIFinalizationCompletionBlock
Td,N,V_currentContentCornerRadius
Tq,R,N,V_controlsStyle
T{CGSize=dd},N,V_microPIPSize
T@"PGHostedWindowHostingHandle",&,N,V_microPIPHostedWindowHostingHandle
T@"NSArray",C,N,V_menuItems
T@"<PGPictureInPictureViewControllerDelegate>",W,N,V_delegate
TB,N,GisInterrupted
T@"PGControlsViewModel",R,N
T@"PGPictureInPictureApplication",R,W,N,V_application
T@"<PGPictureInPictureViewControllerContentContainer>",W,N,V_contentContainer
TB,N,V_canStartShowingChrome
T@"PGPictureInPictureViewController",R,W,N,V_tetheredViewController
T@"PGPictureInPictureViewController",R,W,N,V_tetheringViewController
Tq,R,N,V_tetheringMode
T{CGSize=dd},N,V_minimumStashTabSize
TB,N,V_stashed
TB,N,V_prefersStashTabSuppressed
TB,R,N,V_prefersHiddenFromClonedDisplay
addObserverForName:object:queue:usingBlock:
removeObserver:
mutableDictionary
_ensureMutableDictionary
addEntriesFromDictionary:
isEqualToDictionary:
elapsedTime
keysForEqualityOfNumberValues
_numberForKey:
isEqualToNumber:
requiredLinearPlaybackEndTime
isEquivalentToPlaybackState:
hasInvalidTiming
contentDuration
_integerForKey:
_doubleForKey:
anchorContentTime
timeControlStatus
anchorWallTime
_boolForKey:
_setInteger:forKey:
_setDouble:forKey:
_setBool:forKey:
_dictionaryForKey:
_setDictionaryOrNotFound:forKey:
defaultValueForKey:
_setStateValue:forKey:
appendString:withName:skipIfEmpty:
setPlaybackRate:elapsedTime:timeControlStatus:
setContentType:
setContentDuration:
isMuted
setMuted:
requiresLinearPlayback
setRequiresLinearPlayback:
setPrerollAttributes:
setRoutingVideoToHostedWindow:
setBackgroundAudioPolicy:
Tq,N
Td,N
muted
TB,N,GisMuted
TB,N
T@"PGPlaybackStatePrerollAttributes",&,N
routingVideoToHostedWindow
TB,N,GisRoutingVideoToHostedWindow
diffFromPlaybackState:
_stringForKey:
_prerollAttributes
_mutableDictionary
T@"NSMutableDictionary",R,N,V_mutableDictionary
TB,R,N,GisMuted
TB,R,N,GisRoutingVideoToHostedWindow
T@"PGPlaybackStatePrerollAttributes",R,N
supportsFaceTimeActions
setSupportsFaceTimeActions:
isCameraActive
setCameraActive:
canSwitchCamera
setCanSwitchCamera:
isMicrophoneMuted
setMicrophoneMuted:
setDisablesLayerCloning:
cameraActive
TB,N,GisCameraActive
microphoneMuted
TB,N,GisMicrophoneMuted
cameraHasMicrophone
setCameraHasMicrophone:
initWithRequiredLinearPlaybackEndTime:preferredTintColor:contentType:
preferredTintColorDescription
prerollAttributesForAdContentWithRequiredLinearPlaybackEndTime:preferredTintColor:
prerollAttributesForSponsoredContentWithRequiredLinearPlaybackEndTime:preferredTintColor:
preferredTintColor
T@"UIColor",R,N
setDomain:
setService:
listenerWithConfigurator:
remoteProcess
auditToken
hasEntitlement:
_handleInvalidatedTarget:
_targetForIdentifier:
listener:didReceiveConnection:withContext:
_connectionListener
_mutableIdentifiersForAuthorizedActivitySessions
_lock_targets
_lock_targetsByActivitySessionIdentifier
_identifiersForAuthorizedActivitySessions
T@"<PGBackgroundPIPServiceDelegate>",W,N,V_delegate
T@"NSSet",R,C,N,V_identifiersForAuthorizedActivitySessions
allowsEdgeAntialiasing
mainScreen
setContentsScale:
allowsGroupBlending
anchorPoint
setAnchorPoint:
disableUpdateMask
begin
setDisableActions:
commit
_performWithoutRetargetingAnimations:
_currentAnimationDuration
setAnimationDuration:
_animateUsingDefaultTimingWithOptions:animations:completion:
_animateUsingDefaultDampedSpringWithDelay:initialSpringVelocity:options:animations:completion:
PG_allowsEdgeAntialiasing
PG_allowsGroupBlending
PG_setAllowsGroupBlending:
PG_anchorPoint
PG_setAnchorPoint:
PG_compositingFilter
PG_setCompositingFilter:
PG_cornerRadius
PG_disablesLayerCloning
PG_performWithoutAnimation:
TB,N,SPG_setAllowsEdgeAntialiasing:
TB,N,SPG_setAllowsGroupBlending:
T{CGPoint=dd},N,SPG_setAnchorPoint:
T@,&,N,SPG_setCompositingFilter:
blackColor
convertPoint:fromView:
containsPoint:
_mainBodyBounds
tabShadowView
_tabHidden
_tabShownLeft
_mainBody
_tab
_tabTopCornerFill
_tabBottomCornerFill
_tabLeftTopCornerDestOut
_tabLeftBottomCornerDestOut
_tabRightTopCornerDestOut
_tabRightBottomCornerDestOut
T@"UIView",W,N,V_tabShadowView
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
initWithControlsStyle:viewController:
_establishConnection
_resetInternalState
_initializeWithControlsStyle:viewController:reason:
_handleSceneConnectionChangedNotification:
_stopObservingWindowSceneActivationState
removeObserver:forKeyPath:context:
_isInCallService
_applicationKeyWindow
_isWindowServerHostingManaged
PG_remoteObjectWithDebugMethodAndPointerProem:
_updatePlaybackStateContentTypeIfNeeded
_updatePlaybackStateIfNeeded
_viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewControllerWithReason:
_updateAutoPIPSettingsAndNotifyRemoteObjectWithReason:
_updateIsInterruptedIfNeededForReason:
setClientSessionIdentifier:
_updateScreenSharingInfoIfNeeded
shouldShowAlternateActionButtonImage
addObserver:forKeyPath:options:context:
setRootViewController:
childViewControllers
willMoveToParentViewController:
removeFromParentViewController
viewDidResize
_setResourcesUsageReductionReasons:
_setPictureInPicturePossible:
_setStashedOrUnderLock:reason:
_setInterruptedForDefaultReason:initiatedByRemoteObject:
_setActivationState:reason:
pictureInPictureProxyInterfaceOrientationForTransitionAnimation:
pictureInPictureProxyViewFrameForTransitionAnimation:
pictureInPictureProxyViewControllerWindowForTransitionAnimation:
pictureInPictureProxy:willStartPictureInPictureWithAnimationType:
pictureInPictureProxy:didStartPictureInPictureWithAnimationType:
pictureInPictureProxy:failedToStartPictureInPictureWithAnimationType:error:
pictureInPictureProxy:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
pictureInPictureProxy:willStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxy:didStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxyPictureInPictureInterruptionBegan:
pictureInPictureProxyPictureInPictureInterruptionEnded:
pictureInPictureProxy:didUpdateStashedOrUnderLockState:
pictureInPictureProxy:didUpdateResourcesUsageReductionReasons:oldReasons:
pictureInPictureProxyWillSetupPictureInPictureStop:
_updateAutoPIPSettingsAndNotifyRemoteObjectIfNeeded
_startBackgroundPIPWhilePrewarmingIfNeeded
_expectedScene
activationState
_viewFrameForTransitionAnimationAssumeApplicationActive:
_addWindowSceneActivationStateObserverIfNeeded:
_windowSceneForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewControllerWithReason:
_bestKnownConnectedSceneSessionPersistentIdentifier
_isInactive
_startPictureInPictureAnimated:enteringBackground:reason:withCompletionHandler:
_activationState
_cancelPrewarming
remoteObjectProxy
_invalidateConnectionForFailure
_stopPictureInPictureAnimated:restoreUserInterface:withCompletionHandler:
PG_remoteObjectWithDebugMethodAndPointerProem:errorHandler:
_systemAnimationFenceExemptQueue
_synchronizeDrawingWithFence:
performAsync:
_updateFaceTimePlaybackStateUsingBlock:
mainBundle
clientSessionIdentifier
updatePlaybackStateUsingBlock:
setControlsStyle:animated:withCompletionHandler:
_setMaybeNeedsUpdatePlaybackState
pictureInPictureProxyContentType:
pictureInPictureProxy:didRequestFaceTimeAction:
observeValueForKeyPath:ofObject:change:context:
willAnimatePictureInPictureStop
_removeViewControllerFromHostedWindowIfNeeded
__coordinateStartAnimated:withCompletionHandler:
__updateCancellationPolicyWithSuccessHandler:failureHandler:
_isViewControllerWindowSceneConsideredActive
__didStartWithAnimationType:completionHandler:
__actuallyStartWithAnimationType:successHandler:failureHandler:
__setupStartWithAnimationType:initialLayerFrame:successHandler:failureHandler:
_interfaceOrientationForTransitionAnimationAssumeApplicationActive:
localizedDescription
_addViewControllerToHostedWindowIfNeeded
didAnimatePictureInPictureStart
_setPictureInPictureActive:
_updatePictureInPictureActive:
__actuallyStopAnimated:reason:finalLayerFrame:finalInterfaceOrientation:completionHandler:
__restoreUserInterfaceAnimated:reason:completionHandler:
__setupStopAnimated:needsApplicationActivation:waitForApplicationActivation:successHandler:failureHandler:
snapshotViewAfterScreenUpdates:
__actuallyStopAnimated:reason:completionHandler:
__setupStopAnimated:needsApplicationActivation:successHandler:failureHandler:
__waitForApplicationActivationWithSuccessHandler:failureHandler:
_beginDeactivatingPictureInPictureWithAnimationType:stopReason:
_endDeactivatingPictureInPictureIfNeededWithAnimationType:stopReason:cleanupHandlerOrNil:
__cleanupWithCompletionHandler:
isReadyForDisplay
setTranslatesAutoresizingMaskIntoConstraints:
addChildViewController:
didMoveToParentViewController:
constraintsWithVisualFormat:options:metrics:views:
activateConstraints:
willAnimatePictureInPictureStart
didAnimatePictureInPictureStop
_executeDelegateCallbackBlock:assumeApplicationActive:
fixedCoordinateSpace
windowScene
session
persistentIdentifier
connectedScenes
_isViewControllerWindowSceneActive
applicationState
name
object
initWithMachServiceName:options:
initWithPictureInPictureProxy:
_deactivateIfNeededForInterruptedOrInvalidatedConnection
_applicationDidBecomeActive
_generatePlaybackStateDiffAndMarkAsSent
_beginDeactivatingPictureInPicture
_endDeactivatingPictureInPictureIfNeededWithAnimationType:stopReason:
pictureInPictureProxy:didReceivePlaybackCommand:
_updateIsInterruptedIfNeededForReason:initiatedByRemoteObject:
_legacyPictureInPictureInterruptionBegan
_legacyPictureInPictureInterruptionEnded
set_pipStopUserInterfaceRestoreContinuationBlock:
_twoStageStopForPictureInPictureRestoreWithContinueAfterUserInterfaceRestoreBlock:completionHandler:
set_pipStopFinalStageCompletionHandler:
viewWillResize
numberWithUnsignedInteger:
_notifyActionButtonTapped
pictureInPictureProxySupportsPrewarming:
_prewarmAndStartAfterTimeout
invokeAction
pictureInPictureProxy:didReceiveTestingCommand:
pictureInPictureProxyCanIssueOptionalCommand:
stopPictureInPictureAndRestoreUserInterface:
_setPictureInPictureSuspended:
skipForwardButtonTappedWithTimeInterval:
pictureInPictureProxyWithControlsStyle:viewController:
isPictureInPictureSuspended
isPictureInPictureInterrupted
pictureInPictureShouldStartWhenEnteringBackground
setPictureInPictureShouldStartWhenEnteringBackground:
pictureInPictureWasStartedWhenEnteringBackground
playbackProgress
loadedTimeRanges
setLoadedTimeRanges:
preferredContentSizeDidChangeForViewController
viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController
windowSceneForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController
startPictureInPicture
setPlaybackProgress:playbackRate:
setControlsStyle:
automaticallyInterruptsForLegacyFaceTimeBehaviors
setAutomaticallyInterruptsForLegacyFaceTimeBehaviors:
setReadyForDisplay:
_canBeShownInMicroPIPMode
viewController
isPictureInPictureStashedOrUnderLock
resourcesUsageReductionReasons
isPictureInPictureStashed
_pipStopUserInterfaceRestoreContinuationBlock
_pipStopFinalStageCompletionHandler
_sceneSessionPersistentIdentifier
_clientSessionIdentifier
_sceneSessionPersistentIdentifierAccordingToRemoteObject
_clientSessionIdentifierAccordingToRemoteObject
_canSendPlaybackState
_automaticallyInterruptsForLegacyFaceTimeBehaviors
_isInterruptedForStash
_isInterruptedForDefaultReason
_isInterruptedForAnyReason
_isPictureInPictureActive
_isPictureInPictureSuspended
_pictureInPictureWasStartedWhenEnteringBackground
_shouldCancelActivePictureInPictureOnStart
_shouldPullCancellationPolicyOnStart
_isObservingViewController
_needsReinitialization
_shouldStopUponActivation
_shouldCancelUponActivation
_windowSceneActivationStateObserver
_playbackProgress
_playbackRate
_loadedTimeRanges
_playbackStateAccordingToRemoteObject
_connectionIfInterrupted
_hostedWindow
_rootViewController
_prewarmingTimeoutTimer
_isHostedWindowSizeChangeDuringPinchGesture
_isInViewService
_readyForDisplay
_pictureInPictureStashedOrUnderLock
_viewController
__pipStopUserInterfaceRestoreContinuationBlock
__pipStopFinalStageCompletionHandler
TB,N,GisPictureInPictureStashed,V_stashed
T@?,C,N,V__pipStopUserInterfaceRestoreContinuationBlock
T@?,C,N,V__pipStopFinalStageCompletionHandler
Tq,N,V_controlsStyle
readyForDisplay
TB,N,GisReadyForDisplay,V_readyForDisplay
T@"UIViewController<PGPictureInPictureViewController>",R,N,V_viewController
T@"<PGPictureInPictureProxyDelegate>",W,N
TB,R,N,GisPictureInPicturePossible
TB,R,N,GisPictureInPictureActive
pictureInPictureSuspended
TB,R,N,GisPictureInPictureSuspended
pictureInPictureInterrupted
TB,R,N,GisPictureInPictureInterrupted
T@"PGPlaybackState",R,N
pictureInPictureStashedOrUnderLock
TB,R,N,GisPictureInPictureStashedOrUnderLock,V_pictureInPictureStashedOrUnderLock
TQ,R,N,V_resourcesUsageReductionReasons
_pictureInPictureProxy
setGaussianBlurRadius:
configurationWithFont:
systemImageNamed:withConfiguration:
imageWithRenderingMode:
initWithImage:
secondaryLabelColor
transform
setBackdropScale:
layoutStashChevrons
stashedTabWidth
_backdropView
_lightTintView
_darkTintView
_leftChevron
_rightChevron
_chevronsHidden
_isChevronShownLeft
_blurProgress
_stashedTabWidth
Td,N,V_blurProgress
Td,N,V_stashedTabWidth
animatedLayerProperties
_shouldAnimatePropertyWithKey:
setAnimatedLayerProperties:
_animatedLayerProperties
T@"NSArray",C,N,V_animatedLayerProperties
hitRect
setTitle:forState:
setImage:forState:
imageRectForContentRect:
buttonView
titleRectForContentRect:
setButtonView:
_buttonView
T@"PGButtonView",W,N,V_buttonView
quaternaryLabelColor
buttonWithType:
setAdjustsImageWhenHighlighted:
_handleTouchUpInside:
addTarget:action:forControlEvents:
_handleTouchDown:
_handleDragEnter:
_handleDragExit:
_handleTouchUpOrCancel:
actualButton
contentEdgeInsets
setContentEdgeInsets:
accessibilityIdentifier
setLineBreakMode:
_updateGlyphConfigurationIfNeeded
_updateForCircularAppearanceIfNeeded
_shouldHitTest
glyphSize
systemImageName
setHighlighted:
isHighlighted
isCircular
setActualButton:
highlightAnimator
setHighlightAnimator:
_currentGlyphSize
_currentGlyphImageName
_currentCustomImage
_preventAutoHideOfControlsAssertion
_circular
_highlighted
_systemImageName
_image
_glyphSize
_actualButton
_highlightAnimator
T@"_PGButton",&,N,V_actualButton
highlighted
TB,N,GisHighlighted,V_highlighted
T@"UIViewPropertyAnimator",W,N,V_highlightAnimator
T@"<PGButtonViewDelegate>",W,N,V_delegate
T@"NSString",C,N,V_systemImageName
T@"UIImage",&,N,V_image
circular
TB,N,GisCircular,V_circular
T@"UIFont",C,N
enabled
TB,N,GisEnabled
Td,N,V_glyphSize
transientLocalSettings
objectForSetting:
pg_hasVisiblePIPContent
setObject:forSetting:
setPg_hasVisiblePIPContent:
domainGroupName
domainName
rootSettingsClass
setDefaultValues
rowWithTitle:valueKeyPath:
minValue:maxValue:
sectionWithRows:title:
actionWithSettingsKeyPath:
rowWithTitle:action:
sectionWithRows:
moduleWithTitle:contents:
settingsControllerModule
setShadowOffsetX:
setShadowOffsetY:
setShadowContinuousCornerRadius:
_shadowOpacity
_shadowRadius
_shadowOffsetX
_shadowOffsetY
_shadowContinuousCornerRadius
Td,N,V_shadowOpacity
Td,N,V_shadowRadius
Td,N,V_shadowOffsetX
Td,N,V_shadowOffsetY
Td,N,V_shadowContinuousCornerRadius
setAllowsHitTesting:
button
_layerHostView
PG_remoteObjectProxyWithDebugMethodAndPointerProem:
PG_remoteObjectProxyWithDebugMethodAndPointerProem:errorHandler:
remoteObjectProxyWithErrorHandler:
valueForEntitlement:
setName:
_updateFilters
arrayWithObject:
gaussianBlurRadius
backdropScale
_gaussianBlurFilter
_averageColorFilter
title
symbolName
initWithTitle:symbolName:action:
action
_action
T@"NSString",R,N
T@?,R,C,N,V_action
_updateViewModelValues
progressBarShouldUpdate
isInActivitySession
systemYellowColor
screenSharingTitle
screenSharingAvatar
_lastKnownElapsedTime
_hasBegun
_interrupted
_inActivitySession
_values
T@"<PGControlsViewModelDelegate>",W,N,V_delegate
T@"PGPlaybackState",R,C,N,V_playbackState
TB,N,GisInterrupted,V_interrupted
inActivitySession
TB,N,GisInActivitySession,V_inActivitySession
T@"NSString",C,N,V_screenSharingTitle
T@"UIImage",&,N,V_screenSharingAvatar
T@"PGControlsViewModelValues",R,C,N,V_values
_objectForKey:
initWithDictionaryRepresentation:
defaultPrerollTintColor
T@"NSMutableDictionary",R,N,V_dictionaryRepresentation
T@"UIImage",R,N
B16@0:8
v16@0:8
@20@0:8i16
@24@0:8^{_NSZone=}16
@16@0:8
B24@0:8@16
Q16@0:8
i16@0:8
@"NSString"
#16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@40@0:8{CGPoint=dd}16@32
@28@0:8i16@20
@36@0:8@16i24@28
@24@0:8@16
v32@0:8@16@24
v20@0:8B16
@"RBSAssertion"
@"NSObject<OS_dispatch_queue>"
@"NSError"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v44@0:8@16@24@32B40
v24@0:8@16
B24@0:8@"PGPictureInPictureRemoteObject"16
v44@0:8@"PGPictureInPictureRemoteObject"16@"PGPictureInPictureViewController"24@"NSString"32B40
v32@0:8@"PGPictureInPictureRemoteObject"16@"PGPictureInPictureViewController"24
v24@0:8@"PGPictureInPictureRemoteObject"16
B40@0:8@16@24@32
B40@0:8@"PGBackgroundPIPService"16@"NSString"24@"NSString"32
v32@0:8@"PGBackgroundPIPService"16@"NSString"24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGSize=dd}24@0:8@16
v36@0:8@16B24@?28
q32@0:8@16@24
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24
{CGSize=dd}32@0:8@16@24
q24@0:8@16
v44@0:8@16@24B32@?36
v24@0:8q16
B32@0:8q16@24
v32@0:8q16@24
@40@0:8@16@?24^@32
@40@0:8@16@24^@32
@32@0:8@16^@24
@"NSMutableSet"
@"NSXPCListener"
@"PGPictureInPictureRemoteObject"
@"PGBackgroundPIPService"
@"PGInterruptionAssistant"
@"<PGPictureInPictureControllerDelegate>"
{?="pictureInPictureController_didCreatePictureInPictureViewController"b1"pictureInPictureController_willDestroyPictureInPictureViewController"b1"pictureInPictureController_willHidePictureInPictureViewController"b1"pictureInPictureController_didHidePictureInPictureViewController"b1"pictureInPictureController_shouldCancelPictureInPictureForApplication_whenStartingPictureInPictureForApplication"b1"pictureInPictureController_shouldDenyNewConnection"b1"pictureInPictureController_didRequestStopForPictureInPictureViewController_sourceSceneSessionIdentifier_animated"b1}
@"NSSet"
@"PGPictureInPictureApplication"
@"<PGPictureInPictureAnalyticsDelegate>"
@76@0:8@16q24q32@40q48d56d64f72
@32@0:8@16@?24
v24@0:8Q16
@?16@0:8
@"CADisplayLink"
@32@0:8q16@24
q16@0:8
B24@0:8q16
@"NSMutableDictionary"
@"<BSInvalidatable>"
@24@0:8q16
@28@0:8q16B24
@32@0:8q16d24
@20@0:8B16
@24@0:8d16
@32@0:8q16q24
d16@0:8
v40@0:8q16@24@32
@"NSDictionary"
v24@0:8d16
@"_UIRemoteView"
@"BKSTouchDeliveryPolicyAssertion"
@"UIView"
{CGRect={CGPoint=dd}{CGSize=dd}}88@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56
{UIEdgeInsets=dddd}56@0:8@16{UIEdgeInsets=dddd}24
v24@0:8@"PGButtonView"16
{CGRect={CGPoint=dd}{CGSize=dd}}88@0:8@"PGButtonView"16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56
{UIEdgeInsets=dddd}56@0:8@"PGButtonView"16{UIEdgeInsets=dddd}24
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{CGAffineTransform=dddddd}16@0:8
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"PGControlsViewModel"
@"UILabel"
@"PGButtonView"
@"PGDisplayLink"
{CGSize="width"d"height"d}
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"PGVibrantFillView"
@"UIViewPropertyAnimator"
@"UIColor"
Vv24@0:8@16
Vv24@0:8@"NSNumber"16
@40@0:8@16@24@?32
@"BSServiceConnection"
v32@0:8@"PGControlsViewModel"16@"PGControlsViewModelValues"24
v32@0:8@"PGControlsViewModel"16@"PGCommand"24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v24@0:8B16B20
@40@0:8@16B24B28@32
@44@0:8B16@20@?28@?36
v24@0:8@?16
@"PGControlsView"
@"UITapGestureRecognizer"
@"UIGestureRecognizer"
@"NSTimer"
@"<PGCommandHandler>"
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
B40@0:8{CGPoint=dd}16@32
@"PGCABackdropLayerView"
@"NSHashTable"
Vv32@0:8@16@24
Vv32@0:8@"NSString"16@"NSString"24
@32@0:8@16@24
@"<_PGBackgroundPIPServiceConnectionTargetDelegate>"
^{__CFRunLoopObserver=}16@0:8
v24@0:8^{__CFRunLoopObserver=}16
^{__CFRunLoopObserver=}
Vv48@0:8q16{CGSize=dd}24@?40
Vv100@0:8B16@20@28{CGSize=dd}36q52{CGRect={CGPoint=dd}{CGSize=dd}}60@?92
Vv28@0:8B16@?20
Vv56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@?48
Vv32@0:8@16@?24
Vv40@0:8{CGSize=dd}16@?32
Vv24@0:8@?16
Vv32@0:8q16@?24
Vv32@0:8B16B20@?24
Vv68@0:8B16q20{CGRect={CGPoint=dd}{CGSize=dd}}28@?60
Vv48@0:8q16{CGSize=dd}24@?<v@?B@"NSError">40
Vv100@0:8B16@"PGHostedWindowHostingHandle"20@"NSString"28{CGSize=dd}36q52{CGRect={CGPoint=dd}{CGSize=dd}}60@?<v@?B@"NSError">92
Vv28@0:8B16@?<v@?B@"NSError">20
Vv56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@?<v@?B@"NSError">48
Vv32@0:8@"NSString"16@?<v@?B@"NSError">24
Vv40@0:8{CGSize=dd}16@?<v@?B@"NSError">32
Vv24@0:8@?<v@?B@"NSError"BB>16
Vv32@0:8q16@?<v@?B@"NSError"@"BKSAnimationFenceHandle">24
Vv32@0:8B16B20@?<v@?B@"NSError">24
Vv68@0:8B16q20{CGRect={CGPoint=dd}{CGSize=dd}}28@?<v@?B@"NSError"@"BKSAnimationFenceHandle">60
Vv24@0:8@?<v@?B@"NSError">16
Vv24@0:8@"NSDictionary"16
Vv24@0:8@"NSArray"16
Vv24@0:8@"NSString"16
Vv32@0:8@"NSString"16@"UIImage"24
Vv20@0:8B16
Vv56@0:8{CGSize=dd}16q32d40@48
Vv24@0:8Q16
Vv56@0:8{CGSize=dd}16q32d40@"BKSAnimationFenceHandle"48
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8d16
@"UIActivityIndicatorView"
@"PGLayoutContainerView"
@"PGProgressIndicator"
@"PGPrerollIndicatorView"
@"NSArray"
v40@0:8@16@24q32
v56@0:8@16{CGSize=dd}24q40d48
v28@0:8@16B24
v56@0:8@"PGPictureInPictureViewController"16{CGSize=dd}24q40d48
v24@0:8@"PGPictureInPictureViewController"16
v32@0:8@"PGPictureInPictureViewController"16@"PGCommand"24
v28@0:8@"PGPictureInPictureViewController"16B24
B24@0:8@"PGPictureInPictureViewController"16
v24@0:8@"PGCommand"16
v28@0:8B16@?20
@32@0:8d16@?24
v40@0:8{CGSize=dd}16@?32
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"NSXPCConnection"
@"PGProcessAssertion"
@"NSUUID"
@"PGPlaybackState"
@"FBScene"
@"UIImage"
@"<PGPictureInPictureRemoteObjectDelegate>"
@"PGPictureInPictureViewController"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v48@0:8q16d24@?32@?40
v32@0:8@"PTSettings"16@"NSString"24
v24@0:8@"NSDictionary"16
@40@0:8@16@24q32
v32@0:8@16q24
v28@0:8d16B24
v32@0:8B16B20@24
v64@0:8q16{CGRect={CGPoint=dd}{CGSize=dd}}24@?56
v68@0:8B16q20{CGRect={CGPoint=dd}{CGSize=dd}}28@?60
v32@0:8q16@?24
@"PGHostedWindowHostingHandle"
@"PGPictureInPictureViewControllerBackgroundView"
@"PGLayerHostView"
@"PGPictureInPictureViewControllerClippingView"
@"PGControlsContainerView"
@"PGStashView"
@"PGStashedMaskView"
@"PGPortalView"
@"<PGPictureInPictureViewControllerContentContainer>"
@"<PGPictureInPictureViewControllerDelegate>"
{?="prepareStopAnimationWithCompletionHandler"b1"acquireInterfaceOrientationLock"b1"relinquishInterfaceOrientationLock"b1"handleTapWhileStashedGesture"b1"handleDoubleTapGesture"b1"performRotateAnimationWithRotation"b1}
@"PGMobilePIPSettings"
v40@0:8d16d24q32
@"PGPlaybackStatePrerollAttributes"16@0:8
v24@0:8@"PGPlaybackStatePrerollAttributes"16
q24@0:8q16
d24@0:8q16
v32@0:8q16q24
v32@0:8d16q24
v28@0:8B16q20
@"PGPlaybackStatePrerollAttributes"
@32@0:8d16@24
@40@0:8d16@24q32
v40@0:8@16@24@32
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
v24@0:8@"_PGBackgroundPIPServiceConnectionTarget"16
@"BSServiceConnectionListener"
@"<PGBackgroundPIPServiceDelegate>"
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
v32@0:8@?16@?24
v40@0:8Q16@?24@?32
v40@0:8d16@?24@?32
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGSize=dd}48
v32@0:8d16d24
v36@0:8q16B24@?28
v48@0:8@16@24@32^v40
v40@0:8B16B20@24@?32
v72@0:8q16{CGRect={CGPoint=dd}{CGSize=dd}}24@?56@?64
v40@0:8q16@?24@?32
v32@0:8B16B20@?24
v40@0:8B16B20@?24@?32
v44@0:8B16B20B24@?28@?36
v36@0:8B16q20@?28
v76@0:8B16q20{CGRect={CGPoint=dd}{CGSize=dd}}28q60@?68
v40@0:8q16q24@?32
q20@0:8B16
{CGRect={CGPoint=dd}{CGSize=dd}}20@0:8B16
v28@0:8@?16B24
v28@0:8B16@20
@"PGRunLoopObserver"
@"PGHostedWindow"
@"UIViewController"
@"<PGPictureInPictureProxyDelegate>"
{?="pictureInPictureProxyInterfaceOrientationForTransitionAnimation"b1"pictureInPictureProxyViewFrameForTransitionAnimation"b1"pictureInPictureProxyViewControllerWindowForTransitionAnimation"b1"pictureInPictureProxy_willStartPictureInPictureWithAnimationType"b1"pictureInPictureProxy_didStartPictureInPictureWithAnimationType"b1"pictureInPictureProxy_failedToStartPictureInPictureWithAnimationType_error"b1"pictureInPictureProxy_restoreUserInterfaceForPictureInPictureStopWithCompletionHandler"b1"pictureInPictureProxy_willStopPictureInPictureWithAnimationType_reason"b1"pictureInPictureProxy_didStopPictureInPictureWithAnimationType_reason"b1"pictureInPictureProxyPictureInPictureInterruptionBegan"b1"pictureInPictureProxyPictureInPictureInterruptionEnded"b1"pictureInPictureProxy_didUpdateStashedOrUnderLockState"b1"pictureInPictureProxy_didUpdateResourcesUsageReductionReasons_oldReasons"b1"pictureInPictureProxyWillSetupPictureInPictureStop"b1}
@"UIViewController<PGPictureInPictureViewController>"
@"PGPictureInPictureProxy"
@"PGBackdropView"
@"UIImageView"
v32@0:8@16Q24
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"<PGButtonViewDelegate>"
@"_PGButton"
@"CAFilter"
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
Q24@0:8d16
@"<PGControlsViewModelDelegate>"
@"PGControlsViewModelValues"
