<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241115</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>itunescloudd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.itunescloudd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>itunescloudd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>AppleTVSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>13A5154d</string>
<key>DTPlatformName</key>
<string>appletvsimulator</string>
<key>DTPlatformVersion</key>
<string>15.0</string>
<key>DTSDKBuild</key>
<string>19J302</string>
<key>DTSDKName</key>
<string>appletvsimulator15.0.internal</string>
<key>DTXcode</key>
<string>1300</string>
<key>DTXcodeBuild</key>
<string>13A5154d</string>
<key>MinimumOSVersion</key>
<string>15.0</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2020 Apple Inc. All rights reserved.</string>
<key>UIDeviceFamily</key>
<array>
<integer>3</integer>
<integer>5</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>409835401</string>
<key>application-identifier</key>
<string>com.apple.itunescloudd</string>
<key>aps-connection-initiate</key>
<true/>
<key>backupd-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>data-allowed-write</string>
<string>spi</string>
</array>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.accounts.inactive.fullaccess</key>
<true/>
<key>com.apple.atc.private</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.networkd.set_source_application</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>CLIENT_ENTITLEMENT</string>
</array>
<key>com.apple.private.FairPlayIOKitUserClient.access</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.cfnetwork.har-capture-amp</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.corewifi</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.itunescloudd</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.itunescloudd</string>
</array>
<key>com.apple.private.ids.prefer-infrawifi</key>
<array>
<string>com.apple.private.alloy.itunescloudd</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.itunescloudd</string>
</array>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.perform-media-downloads</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.Music</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.private.corewifi-xpc</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.amsaccountsd.multiuser</string>
<string>com.apple.xpc.amsaccountsd</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>com.apple.telephony.cupolicy-rw-access</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>fairplay-client</key>
<string>1445028844</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
</dict>
</plist>
@ffffff
Y?ff
ICDPowerEventLogger
ICDCloudMusicLibraryRequestHandler
ICEnvironmentMonitorObserver
NSObject
ICDCloudMusicLibraryJaliscoUpdateTaskHelper
ICDJaliscoSupportedMediaKindsHandler
ICDCloudMusicLibraryProgressObserver
ICDCloudMusicLibraryBackgroundTaskScheduler
ICDCloudMusicLibrarySagaUpdateTaskHelper
CloudServerOptions
ICUpdateResponse
UpdateResponseParserDelegate
DKDAAPParserDelegate
ICUpdateRequest
PrivacyConsciousDescription
SagaLoadBulkContainerArtworkInfoOperation
JaliscoSetItemPropertyOperation
JaliscoDeauthenticateOperation
SagaCreatePlaylistOperation
SagaSDKCreatePlaylistOperation
ICBulkRemoveRequest
ICBulkRemoveItemRequest
ICBulkRemovePlaylistRequest
JaliscoLoadChapterArtworkOperation
ICDDefaults
BaseRequestHandler
ICMusicLibraryRecommendationResult
ICMusicLibraryArtistAffinityAnalyzer
ICBulkSetContainerPropertyRequest
SagaSubscribedPlaylistUpdater
SubscribedContainersUpdateRequiredParserDelegate
ContainerCloudIDsParserDelegate
ICDServerNotificationsManager
CloudAuthenticateOperation
ICDCloudServiceStatusMonitor
NSXPCListenerDelegate
ICCloudServiceStatusRemoteMonitoringService
ICDNetworkAvailabilityService
ICCloudServerAvailabilityServiceProtocol
ICBulkLyricsInfoRequest
ICBulkLyricsInfoResponse
JaliscoImporter
ICDLoggable
SagaPublishPlaylistOperation
PublishPlaylistResponseParserDelegate
CloudUserNotificationController
UNUserNotificationCenterDelegatePrivate
UNUserNotificationCenterDelegate
ICCloudContentTasteUpdateResponse
CloudKeepLocalUtilities
CloudLoadBulkArtworkInfoOperation
ICDSaga
ICSetContainerPropertiesResponse
ICSetContainerPropertiesRequest
SetContainerPropertiesResponseParserDelegate
CloudArtworkOperationQueue
SagaCreateGeniusPlaylistOperation
ICDServer
ICCloudServerListenerEndpointServiceProtocol
ICDServerProtocol
MRAVClusterObserver
ICDHandlerProviding
ICDBackgroundTaskScheduling
ICDServerNotificationsManagerDelegate
ICCloudServerProtocol
JaliscoArtworkImporter
CloudArtistHeroImageImporter
DetermineArtistStoreIDLookupTypeOperation
UpdateArtistStoreIDsByLibraryMatchLookupOperation
UpdateArtistArtworkTokensOperation
DownloadArtistHeroImagesOperation
FinishArtistHeroUpdateOperation
QueueAwareOperation
UpdateArtistStoreIDsByMapOperation
UpdateArtistStoreIDsByBulkLibraryMatchLookupOperation
ICContentTastePendingChangesCoordinator
ICBulkArtworkInfoRequest
ICBulkArtworkInfoResponse
ICBulkItemArtworkInfoRequest
ICBulkPlaylistArtworkInfoRequest
ICDServerOperationsManager
ICCreateGeniusContainerResponse
ICCreateGeniusContainerRequest
ICDJaliscoMediaFilter
ICMusicLibraryContentItemSnapshot
ICDAccountManagerState
NSCopying
GeniusAdditions
AMPMusicFeature
ICMusicLibraryArtistAffinitySnapshot
CloudLibrary
CloudLibraryConcurrentOperation
SagaSetItemPropertyOperation
SagaRequestHandler
CloudLibraryOperation
NSSecureCoding
NSCoding
SagaUpdateSubscribedPlaylistsOperation
SagaGetGeniusItemsOperation
JaliscoUpdateGeniusDataOperation
NSURLSessionTaskDelegate
NSURLSessionDelegate
CloudService
ICAppleMusicAPITokenRequest
CloudGeniusUtilities
CloudGeniusOnlyIfNonZeroIntegerTransform
CloudGeniusDataTransform
CloudGeniusOnlyIfNonZeroDoubleTransform
CloudGeniusOnlyIfNonEmptyStringTransform
CloudGeniusOnlyIfNegatedBooleanTransform
CloudGeniusBooleanTransform
CloudGeniusOnlyIfHasValueTransform
CloudGeniusHasValueTransform
CloudGeniusOnlyIfDoesNotHaveValueTransform
CloudGeniusNegatedBooleanTransform
CloudGeniusDateTransform
CloudMusicSubscriptionStatusServiceListener
ICMusicSubscriptionStatusRemoteRequestingService
ICContentTasteRequestHandler
JaliscoRequestHandler
ICAppleMusicAPITokenResponse
ICDAdditions
ICDResponse
ICDAccountManagerStateChange
ICGetGeniusItemsResponse
ICGetGeniusItemsRequest
JaliscoGeniusOptOutOperation
ICCloudContentTasteUpdateItem
ICMusicLibraryRecommendationsRequest
SagaImporter
SagaLoadLyricsOperation
ICSubscribedContainersRequest
SagaUpdatePlaylistOperation
SagaRemovePlaylistOperation
ICCloudContentTasteResponseCacheManager
SagaUploadItemPlayDataOperation
AMPMusicArtistContent
ICMusicLibraryRecommendationController
ICDAAPPropertyInfo
NSError
JaliscoHideItemOperation
ICBulkSetItemPropertyRequest
CloudArtworkImportOperation
ICDDeleteOnDeallocTemporaryFile
CloudAdditions
CloudPlayActivityRequestListener
ICProcessPlayActivityEventsRequestListener
JaliscoLoadBulkItemArtworkInfoOperation
BooksParserDelegate
JaliscoLoadBooksOperation
MediaLibraryAccessRevocationController
ICMediaLibraryAccessPermissionsHelper
CloudPendingChangesCoordinator
ICFileAdditions
ICAppleMusicAPITokenError
SagaCloudSDKAddOperation
SagaCloudSDKAddItemToPlaylistOperation
ICAppleMusicAPITokenCollection
AMPMusicArtistNewContentResponse
CloudLibraryOptOutOperation
AMPMusicCatalogContent
DisableCloudLibraryOperation
ICDHandlerCoordinator
ICDHandlerCoordinating
CloudLibraryConnection
SagaUploadPlaylistArtworkOperation
CloudRemoteRequestOperationExecutionServiceListener
ICRemoteRequestOperationExecutingService
JaliscoUpdateOperation
SagaLoadBulkItemArtworkInfoOperation
ICCreateContainerResponse
ICCreateContainerRequest
CreateContainerResponseParserDelegate
ICSDKCreateContainerRequest
JaliscoMediaImporter
AMPMusicArtistNewContentRequest
SubscriptionRequestHandler
SagaCloudAddOperation
SagaCloudAddItemOperation
SagaCloudAddPlaylistOperation
SagaCloudAddItemToPlaylistOperation
CloudArtworkImportRequest
CloudArtworkImporter
MPMediaDownloadObserver
_MSVAccountInformationProviding
ICDManageableAccount
ICDPrivacyPromptOperation
ICDCloudPushNotificationAccountRegistrationState
ICDCloudPushNotificationRegistrationState
CloudPushNotificationController
APSConnectionDelegate
ICItemsRequest
ICContainersRequest
ICMusicLibraryContentMetadataDescriptor
ICSetAddToPlaylistBehaviorRequest
SagaLibrary
ICDResponseDataParser
AppleMusicAPITokenIDSService
IDSServiceDelegate
CloudBackgroundTaskManager
CloudUpdateLibraryOperation
ICDAccountManager
ICDAccountManaging
ICCloudContentTasteUpdateOperation
SagaUploadPlaylistPlayDataOperation
ICDRequest
JaliscoMediaUpdateOperation
ICMusicLibraryRecommendationsResponse
CloudSetAddToPlaylistBehaviorOperation
ICDCloudServiceCapabilitiesRequestOperation
SagaArtworkImporter
CloudContentTasteUpdateRequestListener
ICUpdateContentTasteRequestListener
CloudArtworkImportSetupOperation
SagaSetAlbumItemPropertyOperation
SagaAddItemToPlaylistOperation
ICDCloudServiceCapabilitiesRequestContext
JaliscoLibrary
SagaRemoveItemOperation
ArtistImageRequestHandler
ICAddToLibraryResponse
ICAddToLibraryRequest
AddToLibraryResponseParserDelegate
SagaImportController
SagaImportControllerParserDelegate
ICSDKAddToLibraryResponse
ICSDKAddToLibraryRequest
SDKAddToLibraryResponseParserDelegate
ICSDKAddToPlaylistRequest
_ICDBackgroundTask
ICDBackgroundTaskManager
ICDBackgroundTaskManaging
logEvent:payload:
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
_sagaRequestHandler
_jaliscoRequestHandler
_musicSubscriptionCheckStatus
_accessQueue
_calloutQueue
_operationQueue
_retryQueue
_autoEnableFailureCount
_subscriptionStatusFailureCount
_autoRetryCloudAuthenticateFailureCount
_sagaImportFailureCount
_deauthOperationCount
_havePendingSubscriptionStatusCheck
_havePendingAutoEnableICMLCheck
_havePendingCloudUpdateLibraryCheck
_didAdjustMergePreference
_havePendingSagaUpdate
_didManuallyReloadCloudLibrary
_isPendingAuthentication
_isHandlerActive
_syncProgressDictionary
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
shouldIncludeMediaKindSongForJaliscoImport
startingUpdateOperationForLibraryType:isInitialImport:
finishedUpdateOperationForLibraryType:withResponse:
setUpdateProgress:forLibraryType:
scheduleBackgroundTaskToUpdateLibraryType:
initWithConfiguration:
handleMusicAppRemoved
handleMusicAppInstalled
enableCloudLibraryAndStartInitialImport:enableCloudLibraryPolicy:isExplicitUserAction:completionHandler:
disableCloudLibraryWithReason:completionHandler:
isUpdatingCloudLibrary
isUpdatingCloudLibraryWithCompletion:
updateCloudLibraryProgressWithCompletion:
updateSagaLibraryWithReason:allowNoisyAuthPrompt:isExplicitUserAction:completionHandler:
updateJaliscoLibraryWithReason:completionHandler:
addOperation:forLibraryType:priority:
addBackgroundOperation:forLibraryType:priority:
cancelPendingChangesForLibraryType:
updateProgressForLibraryType:completionHandler:
importItemArtworkForSagaID:completionHandler:
importScreenshotForSagaID:completionHandler:
importContainerArtworkForSagaID:completionHandler:
deprioritizeItemArtworkForSagaID:
deprioritizeScreenshotForSagaID:
deprioritizeContainerArtworkForSagaID:
createPlaylistWithPersistentID:properties:trackList:completionHandler:
createPlaylistWithPersistentID:properties:trackList:requestingBundleID:completionHandler:
publishPlaylistWithSagaID:completionHandler:
removeItemsWithSagaIDs:completionHandler:
removePlaylistsWithSagaIDs:completionHandler:
uploadArtworkForPlaylistWithPersistentID:completionHandler:
addGeniusPlaylistWithPersistentID:name:seedItemIDs:itemIDs:completionHandler:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:completionHandler:
addItemWithSagaID:toPlaylistWithPersistentID:completionHandler:
addStoreItemWithOpaqueID:toPlaylistWithPersistentID:requestingBundleID:completionHandler:
addStoreItemWithAdamID:referral:completionHandler:
addStoreItemWithOpaqueID:requestingBundleID:completionHandler:
addStorePlaylistWithGlobalID:completionHandler:
setPlaylistProperties:trackList:forPlaylistPersistentID:completionHandler:
setCloudAddToPlaylistBehavior:completionHandler:
setItemProperties:forSagaID:completionHandler:
setAlbumProperties:forItemsWithAlbumPersistentID:completionHandler:
updateItemPlayDataWithCompletionHandler:
updatePlaylistPlayDataWithCompletionHandler:
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:requestReason:pinnedOnly:completionHandler:
loadGeniusItemsForSagaID:completionHandler:
loadArtworkInfoForSagaIDs:completionHandler:
loadArtworkInfoForContainerSagaIDs:completionHandler:
loadScreenshotInfoForSagaIDs:completionHandler:
loadLastKnownEnableICMLStatusWithCompletionHandler:
importItemArtworkForPurchaseHistoryID:completionHandler:
importScreenshotForPurchaseHistoryID:completionHandler:
deprioritizeItemArtworkForPurchaseHistoryID:
deprioritizeScreenshotForPurchaseHistoryID:
disableJaliscoGeniusWithCompletionHandler:
removeLibraryWithCompletion:
setItemProperties:forPurchaseHistoryID:completionHandler:
setJaliscoGeniusCUID:withCompletionHandler:
loadArtworkInfoForPurchaseHistoryIDs:completionHandler:
loadScreenshotInfoForPurchaseHistoryIDs:completionHandler:
loadIsJaliscoGeniusSupportedWithCompletionHandler:
loadJaliscoGeniusLearnMoreURLWithCompletionHandler:
loadJaliscoGeniusCUIDWithCompletionHandler:
loadJaliscoGeniusOperationStatusWithCompletionHandler:
isMediaKindDisabledForJaliscoLibrary:completion:
enableJaliscoGeniusWithCompletionHandler:
updateJaliscoGeniusDataWithCompletionHandler:
cancelUpdateJaliscoGeniusDataWithCompletionHandler:
loadBooksForStoreIDs:withCompletionHandler:
loadMissingArtwork
hideItemsWithPurchaseHistoryIDs:completionHandler:
becomeActive
becomeInactiveWithDeauthentication:completion:
updateLibraryWithReason:completionHandler:
_deactivateSagaLibraryByDeauthenticating:completionHandler:
_deactivateJaliscoLibraryByDeauthenticating:completionHandler:
_resetInternalCloudLibraryState
_isNativeMusicAppInstalled
_handleMusicSubscriptionStatusDidChangeNotification:
_runSubscriptionStatusCheckOperationWithReason:completionHandler:
_enqueueSubscriptionStatusCheckForReason:
_enqueueCloudUpdateLibraryOperationForReason:
_reloadSubscriptionStatusAndEnableCloudMusicLibraryWithReason:completionHandler:
_retryEnablingCloudMusicLibraryForReason:
_getCurrentSubscriptionStatusForReason:
_canEnableCloudMusicLibraryOnPlatformsWithSideLoadedMediaContentWithProperties:includeLocalContentCheck:
_wasRestoredFromCloudBackup:
_adjustMergePreferenceWithUserIdentityProperties:
_shouldHandleDaemonStartupOrAccountChangedNotificationWithProperties:
_registerDeviceAndPerformInitialImportWithUserIdentityProperties:cloudLibraryEnableReason:completionHandler:
_authenticateAndStartInitialImportWithMergePreference:userIdentityProperties:enableReason:withCompletionHandler:
_tryEnablingICMLOnDevicesSupportingSideLoadedContentWithProperties:reason:withCompletionHandler:
_tryEnablingCloudMusicLibraryForReason:
_runSagaAuthenticateOperationWithMergePreference:allowNoisyPrompt:cloudLibraryEnableReason:completionHandler:
_runDisableCloudLibraryOperationByDeletingDatabase:disableActiveLockerAccount:removeSourcePurchaseHistory:isHandlerDeactivating:completionHandler:
_handleUserIdentityStoreDidChangeNotification:
_performInitialJaliscoImportWithCompletionHandler:
_performJaliscoImportByAddingMediaKind:completionHandler:
_performInitialSagaImportAllowingNoisyAuthPrompt:completionHandler:
_postLibraryUpdateProgressChangedForLibraryType:
_prepareLibraryLoadErrorWithJaliscoError:sagaError:
_handleSagaAuthentication:finishedForReason:explicitUserAction:shouldStartInitialImport:completionHandler:
.cxx_destruct
integerValue
errorWithDomain:code:userInfo:
setObject:forKey:
dictionary
getPropertiesForUserIdentity:completionHandler:
isActiveLocker
sagaOnDiskDatabaseRevision
jaliscoOnDiskDatabaseRevision
getPropertiesForUserIdentity:error:
isMediaSyncingSupported
sharedMonitor
setCompletionBlock:
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
intValue
initWithStartHandler:
isWatch
supportsSideLoadedMediaContent
currentDeviceInfo
sagaAccountID
musicLibraryForUserAccount:
length
sagaCloudLibraryTroveID
sagaCloudLibraryCUID
longLongValue
isEqualToNumber:
sagaLastKnownActiveLockerAccountDSID
DSID
setSagaLastKnownActiveLockerAccountDSID:
clearSagaCloudLibraryCUID
clearSagaCloudLibraryTroveID
setSagaPrefersToMergeWithCloudLibrary:
boolValue
sagaPrefersToMergeWithCloudLibrary
containsObject:
objectForKey:
finishWithError:
shouldTreatSubscriptionStatusCheckAsIncomplete
shouldTreatSubscriptionStatusAsExpired
standardDefaults
getBagForRequestContext:withCompletionHandler:
dateWithTimeIntervalSinceNow:
maxSyncRetryIntervalSeconds
libraryDAAPConfiguration
sharedBagProvider
DSIDForUserIdentity:outError:
objectForKeyedSubscript:
userInfo
copy
stringWithFormat:
removeItemAtURL:error:
defaultManager
defaultCenter
removeObserver:
addObserver:selector:name:object:
isRemoteServerReachable
dictionaryWithObjectsAndKeys:
numberWithFloat:
numberWithInteger:
removeObjectForKey:
numberWithBool:
jaliscoLastExcludedMediaKinds
cloudLibraryStateReason
count
setJaliscoNeedsUpdateForTokens:
ic_updateAutomaticDownloadKindsByAddingMediaKindMusic:error:
ic_storeAccountForStoreAccountID:error:
ic_sharedAccountStore
addObserver:
setUnderlyingQueue:
setQualityOfService:
setMaxConcurrentOperationCount:
handlers
handler
TB,N,V_prohibitLibraryUpload
TB,N,V_prohibitArtworkPrefetch
TB,N,V_supportsAutomaticEnablingiCloudMusicLibrary
_prohibitLibraryUpload
_prohibitArtworkPrefetch
_supportsAutomaticEnablingiCloudMusicLibrary
prohibitLibraryUpload
setProhibitLibraryUpload:
prohibitArtworkPrefetch
setProhibitArtworkPrefetch:
supportsAutomaticEnablingiCloudMusicLibrary
setSupportsAutomaticEnablingiCloudMusicLibrary:
TI,N,V_databaseRevision
TB,N,V_hasAddToPlaylistBehavior
TC,N,V_addToPlaylistBehavior
_hasAddToPlaylistBehavior
_addToPlaylistBehavior
_databaseRevision
databaseRevision
setDatabaseRevision:
hasAddToPlaylistBehavior
setHasAddToPlaylistBehavior:
addToPlaylistBehavior
setAddToPlaylistBehavior:
TI,N,V_serverRevision
_serverRevision
parserDidStart:
parser:didFinishWithState:
parserDidCancel:
parser:didFailWithError:
parser:shouldParseCode:
parser:shouldParseCodeAsContainer:
parser:didStartContainerCode:contentLength:
parser:didParseDataCode:bytes:contentLength:
parser:didEndContainerCode:
serverRevision
setServerRevision:
requestWithDatabaseRevision:
initWithDatabaseRevision:
canonicalResponseForResponse:
_bodyDataForDatabaseRevision:
writeUInt32:withCode:
parse
setDelegate:
initWithStream:
inputStreamWithData:
isInternalBuild
privacyConsciousDictionaryRepresentation
privacyConsciousDescription
useLongIDs
itemKind
_purchaseHistoryID
_properties
initWithPurchaseHistoryID:properties:
initWithConfiguration:purchaseHistoryID:properties:
initWithCoder:
encodeWithCoder:
main
endTransaction
arrayWithObjects:count:
numberWithUnsignedLongLong:
beginTransaction
initWithName:
encodeObject:forKey:
encodeInt64:forKey:
decodeObjectOfClass:forKey:
decodeInt64ForKey:
performDatabaseTransactionWithBlock:
deleteInteractionsWithGroupIdentifiers:bundleID:protectionClass:completionHandler:
clearAllCloudKVSData
setJaliscoIsMusicGeniusUserEnabled:
setJaliscoHasCloudGeniusData:
clearAllGeniusData
jaliscoHasCloudGeniusData
setJaliscoLastGeniusUpdateDate:
distantPast
setStorefrontIdentifier:
clearJaliscoAccountID
setJaliscoOnDiskDatabaseRevision:
removeSource:usingConnection:withCompletionHandler:
TQ,R,N,V_playlistSagaID
_playlistPersistentID
_trackList
_playlistSagaID
initWithPlaylistPersistentID:properties:trackList:
initWithConfiguration:playlistPersistentID:properties:trackList:
requestWithDatabaseID:databaseRevision:playlistProperties:trackList:
isPersistent
playlistSagaID
setValue:forProperty:
unsignedLongValue
mutableCopy
dateWithTimeIntervalSinceReferenceDate:
doubleValue
valueForProperty:
existsInLibrary
newWithPersistentID:inLibrary:
decodeObjectOfClasses:forKey:
setWithObjects:
supportsSecureCoding
_requestingBundleID
initWithPlaylistPersistentID:properties:trackList:requestingBundleID:
initWithConfiguration:playlistPersistentID:properties:trackList:requestingBundleID:
initWithDatabaseID:sagaIDs:itemKind:
_bodyDataForSagaIDs:itemKind:
countByEnumeratingWithState:objects:count:
requestWithDatabaseID:itemID:
requestWithDatabaseID:itemIDs:
numberWithUnsignedInt:
requestWithDatabaseID:containerID:
requestWithDatabaseID:containerIDs:
_chapterArtworkToLoad
_powerAssertionIdentifier
_artworkDownloadSession
_artworkDownloadOperationQueue
initWithDictionary:
initWithConfiguration:dictionary:
cancel
unsignedLongLongValue
artworkTokenForChapterWithItemPID:retrievalTime:
persistentID
unsignedIntValue
anyInLibrary:predicate:options:
predicateWithProperty:equalToInt64:
allKeys
shouldProhibitVideosActionForCurrentNetworkConditions
initWithConfiguration:maxConcurrentRequests:qualityOfService:
setAllowsCellularAccess:
isCellularDataRestrictedForVideos
setHTTPShouldUsePipelining:
ephemeralSessionConfiguration
T@"NSUserDefaults",&,N,V_userDefaults
T@"NSUserDefaults",&,N,V_internalDefaults
T@"NSArray",C,N
T@"NSString",C,N
T@"NSData",&,N
_userDefaults
_internalDefaults
knownAccountDSIDs
setKnownAccountDSIDs:
knownActiveAccountDSID
setKnownActiveAccountDSID:
pendingBackgroundTasksData
setPendingBackgroundTasksData:
_init
_setOrRemoveObject:forKey:
userDefaults
setUserDefaults:
internalDefaults
setInternalDefaults:
initWithSuiteName:
isNSData__
dataForKey:
isNSString__
stringForKey:
isNSArray__
T@"ICDDefaults",R,N
daemonDefaults
T@"ICUserIdentity",R,N,V_userIdentity
T@"ICUserIdentityStore",R,N,V_userIdentityStore
T@"ICConnectionConfiguration",R,N,V_configuration
T@"ML3MusicLibrary",R,N,V_musicLibrary
T@"<ICDBackgroundTaskScheduling>",&,N,V_taskScheduler
_userIdentity
_userIdentityStore
_configuration
_musicLibrary
_taskScheduler
init
performInitialLibraryUpdate
cancellAllOperations
onCalloutQueue:
decreasePriorityForAllOperations
increasePriorityForAllOperations
cancelOperationsWithCompletion:
userIdentity
userIdentityStore
configuration
musicLibrary
taskScheduler
setTaskScheduler:
raise:format:
T@"NSObject<OS_dispatch_queue>",R,N
T@"NSMutableDictionary",R,N
T@"BaseRequestHandler",R,N
TB,R,N
T@"NSArray",R,N
globalSerialQueue
handlerForConfiguration:
deleteHandlerForConfiguration:
managedConfigurations
supportsAccountlessHandling
accountlessHandler
valueForKeyPath:
allValues
setObject:forKeyedSubscript:
UTF8String
array
numberWithLongLong:
addObject:
enumeratePersistentIDsUsingBlock:
setSagaNeedsFullUpdateAfterNextUpdate:
setValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:
predicateWithProperty:mask:value:
executeUpdate:
predicateWithProperty:
emptyAllTables
unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:
deleteAllEntitiesFromLibraryWithDeletionType:
executeQuery:withParameters:
int64ValueForFirstRowAndColumn
libraryContainerPath
defaultRenderer
statementWithPrefix:inParameterCount:
updateBestArtworkTokenForEntityPersistentID:entityType:artworkType:retrievalTime:preserveExistingAvailableToken:usingConnection:
cleanupArtworkWithOptions:usingConnection:
sortJaliscoLastSupportedMediaKinds
setWithObject:
updateJaliscoExcludedMediaKindsWith:excludingMediaKindsInSet:
automaticDownloadsEnabled
deleteAutomaticDownloadsKey
stringByAppendingPathComponent:
ic_activeStoreAccountWithError:
ic_isAutomaticDownloadsEnabledForMediaKindMusic
setAutomaticDownloadsEnabled:
setSagaLastSubscribedContainersUpdateTime:
valueForDatabaseProperty:
unarchivedObjectOfClasses:fromData:error:
specificAccountWithDSID:
defaultIdentityStore
initWithUserIdentity:userIdentityStore:
deleteDatabaseProperty:
removeItemAtPath:error:
setSagaOnDiskDatabaseRevision:
notifyCloudLibraryAvailabilityDidChange
removeSource:withCompletionHandler:
enumeratorAtPath:
nextObject
hasSuffix:
dictionaryWithContentsOfFile:
setValue:forKey:
executeUpdate:withParameters:error:
enumerateKeysAndObjectsUsingBlock:
databaseConnectionAllowingWrites:withBlock:
predicateWithProperty:equalToInteger:
setValue:forDatabaseProperty:
predicateWithProperty:value:comparison:
predicateMatchingPredicates:
queryWithLibrary:predicate:
T@"NSNumber",R,N,V_adamID
T@"NSDate",R,N,V_date
T@"NSNumber",R,N,V_score
_adamID
_date
_score
initWithAdamID:date:score:
adamID
date
score
performLibraryAnalysisFromResponse:withCompletionHandler:
createFeatureProviderDictionaryFromNewContentResponse:withLibraryArtistSnapshots:
performLibraryAnalysisWithCompletionHandler:
aggregateLibraryRecommendationMetricsFromSnapshots:
_requestItemProperties
initWithProperties:relationships:
dictionaryWithObjects:forKeys:count:
propertySetWithProperties:
laterDate:
components:fromDate:
valueForKey:
initWithCalendarIdentifier:
performWithResponseHandler:
enumerateItemsUsingBlock:
results
setItemProperties:
setItemKind:
kindWithVariants:
setLabel:
addEntriesFromDictionary:
numberWithDouble:
setObject:atIndexedSubscript:
initWithShape:dataType:error:
numberWithUnsignedLong:
numberWithInt:
objectAtIndex:
initWithDatabaseID:containerIDs:properties:
_bodyDataForContainerIDs:properties:
enumerateObjectsUsingBlock:
objectAtIndexedSubscript:
requestWithDatabaseID:containerIDs:properties:
T@"NSArray",R,C,N,V_playlistCloudIDs
T@"CloudLibraryConnection",R,N,V_connection
Tq,N,V_requestReason
TB,N,V_ignoreMinRefreshInterval
T@"NSURL",C,N,V_payloadDownloadPathOverride
TB,N,V_pinnedOnly
_ignoreMinRefreshInterval
_pinnedOnly
_playlistCloudIDs
_connection
_requestReason
_payloadDownloadPathOverride
initWithSubscribedPlaylistCloudIDs:cloudLibraryConnection:
performUpdateWithError:
playlistCloudIDs
connection
requestReason
setRequestReason:
ignoreMinRefreshInterval
setIgnoreMinRefreshInterval:
payloadDownloadPathOverride
setPayloadDownloadPathOverride:
pinnedOnly
setPinnedOnly:
updateRequired
TB,R,N,V_updateRequired
_updateRequired
inputStreamWithURL:
performImport:fromSource:withProgressBlock:completionHandler:
sharedMediaLibraryService
setPlaylistsAreLibraryOwnedContent:
setTracksAreLibraryOwnedContent:
initWithLibraryPath:trackData:playlistData:
databasePath
path
fileURLWithPathComponents:
UUIDString
UUID
enumeratePersistentIDsAndProperties:usingBlock:
firstObject
timeIntervalSinceReferenceDate
predicateWithProperty:values:
setWithArray:
arrayWithCapacity:
T@"NSMutableArray",R,N,V_subscribedPlaylistCloudIDs
TI,R,N,V_currentPlaylistCloudID
TC,R,N,V_currentPlaylistKind
_currentPlaylistKind
_currentPlaylistCloudID
_subscribedPlaylistCloudIDs
subscribedPlaylistCloudIDs
currentPlaylistCloudID
currentPlaylistKind
T@"<ICDServerNotificationsManagerDelegate>",R,W,N,V_delegate
_delegate
initWithDelegate:
dealloc
_setupNotifications
_tearDownNotifications
_didReceiveDistributedNotification:withStreamEvent:
_didReceiveDarwinNotification:
_didReceiveTelephonyCenterNotification:
_handleFirstUnlockNotification:
_handleAllowsExplicitContentChangedNotification:
_handleLibraryAuthServiceTokenDidChangeNotification:
_handleCloudAuthenticationDidChangeNotification
_handleApplicationRegistration:notificationName:streamEvent:
_handleFamilyContentDeletionNotification:streamEvent:
delegate
notificationWithName:object:userInfo:
initWithDownloaderAccountID:purchaserAccountID:familyID:
stringWithUTF8String:
isEqualToString:
T@"NSNumber",&,N,V_authenticateFailureCode
T@"NSNumber",N,V_mergeToCloudLibraryPreference
TB,N,V_allowNoisyAuthPrompt
Tq,N,V_enableReason
_allowNoisyAuthPrompt
_mergeToCloudLibraryPreference
_authenticateFailureCode
_enableReason
initWithConfiguration:mergeToCloudLibraryPreference:allowNoisyAuthPrompt:enableLibraryReason:
mergeToCloudLibraryPreference
setMergeToCloudLibraryPreference:
authenticateFailureCode
setAuthenticateFailureCode:
allowNoisyAuthPrompt
setAllowNoisyAuthPrompt:
enableReason
setEnableReason:
setSagaAccountID:
shouldTreatSagaAddComputerCallAsFailed
insertPropertiesForUserIdentity:usingBlock:completionHandler:
setCloudLibraryStateReason:
setActiveLocker:
ic_cloudClientErrorWithCode:userInfo:
_activeObservationTokenToClientConnectionMapping
_cancellableCapabilitiesRequestOperations
_capabilities
_hasValidCapabilities
_capabilitiesRequestContexts
_privilegedCapabilities
_hasValidPrivilegedCapabilities
_storefrontCountryCode
_storefrontCountryCodeRequestCompletionHandlers
_storefrontIdentifier
_storefrontIdentifierRequestCompletionHandlers
_bagObservationToken
_subscriptionStatusObservationToken
_lock
listener:shouldAcceptNewConnection:
beginObservingCloudServiceStatusWithCompletionHandler:
endObservingCloudServiceStatusWithToken:completionHandler:
requestCapabilitiesWithPrivacyPromptPolicy:completionHandler:
requestStorefrontCountryCodeWithCompletionHandler:
requestStorefrontIdentifierWithCompletionHandler:
requestDeveloperTokenWithOptions:clientInfo:completionHandler:
requestUserTokenForDeveloperToken:options:clientInfo:completionHandler:
requestMusicKitTokensWithOptions:clientInfo:completionHandler:
_handleClientConnectionInterrupted:
_handleClientConnectionInvalidated:
_handleClientConnectionSevered:
_handleActiveUserIdentityDidChangeNotification:
_handleUpdatedBag:
_handleUpdatedSubscriptionStatus:
_beginObservingCloudServiceStatus
_endObservingCloudServiceStatus
_notifyObserversForActiveUserIdentityChanged
_refreshCloudServiceStatus
_refreshCapabilitiesWithPrivacyAcknowledgementPolicy:
_refreshStorefrontCountryCode
_refreshStorefrontIdentifier
_updateWithBag:error:
_updateWithCapabilities:error:privacyAcknowledgementPolicy:capabilitiesRequestOperation:
_updateWithStorefrontIdentifier:error:
storefrontIdentifierDidChange:
remoteObjectProxyWithErrorHandler:
_isClientAllowedToRequestRestrictedInformationForConnection:
capabilitiesDidChange:
_isClientAllowedToRequestCapabilitiesForConnection:
removeObject:
_shouldBypassEnforcementOfPrivacyAcknowledgementForClientConnection:forIncomingCloudServiceCapabilitiesRequest:
storefrontCountryCodeDidChange:
valueForBagKey:
msv_description
msv_errorWithDomain:code:debugDescription:
localStoreAccountProperties
storefrontIdentifier
activeAccount
sharedBagMonitor
ic_sharedRequestOperationQueueWithQualityOfService:
currentConnection
activeAccountDidChange
endObservingSubscriptionStatusWithToken:
sharedMonitorForIdentity:
autoupdatingActiveAccount
endObservingBagWithToken:
removeObserver:name:object:
beginObservingSubscriptionStatusWithHandler:
beginObservingBagWithHandler:
removeObjectAtIndex:
resume
setInvalidationHandler:
setInterruptionHandler:
setRemoteObjectInterface:
clientInterface
setExportedInterface:
serviceInterface
setExportedObject:
initWithDeveloperToken:userToken:userTokenFetchingError:
initWithDeveloperToken:clientInfo:options:
_clientInfoForUserTokenRequestWithRequestingApplicationBundleIdentifier:
msv_errorWithDomain:code:underlyingError:debugDescription:
setClientType:
initWithClientInfo:options:
_clientInfoForDeveloperTokenRequestWithRequestingApplicationBundleIdentifier:
_requestingBundleIdentifierForOriginatingClientConnection:clientInfo:error:
bundleIdentifier
auditToken
_clientInfoForCloudDaemonOriginatedMusicKitRequestWithRequestingBundleIdentifier:
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:
valueForEntitlement:
hasProperNetworkConditionsToPlayMediaWithCompletion:
hasProperNetworkConditionsToShowCloudMediaWithCompletion:
isCellularDataRestrictedForMusicWithCompletion:
shouldProhibitMusicActionForCurrentNetworkConditionsWithCompletion:
isCellularDataRestrictedForVideosWithCompletion:
shouldProhibitVideosActionForCurrentNetworkConditionsWithCompletion:
isCellularDataRestrictedForStoreAppsWithCompletion:
shouldProhibitStoreAppsActionForCurrentNetworkConditionsWithCompletion:
canShowCloudDownloadButtonsWithCompletion:
canShowCloudMusicWithCompletion:
canShowCloudVideoWithCompletion:
_canShowCloudDownloadButtonsDidChangeNotification:
_canShowCloudTracksDidChangeNotification:
_isCellularDataRestrictedDidChangeNotification:
canShowCloudVideo
canShowCloudMusic
canShowCloudDownloadButtons
shouldProhibitStoreAppsActionForCurrentNetworkConditions
isCellularDataRestrictedForStoreApps
shouldProhibitMusicActionForCurrentNetworkConditions
isCellularDataRestrictedForMusic
hasProperNetworkConditionsToShowCloudMedia
hasProperNetworkConditionsToPlayMedia
interfaceWithProtocol:
processIdentifier
endObservingNetworkReachability
initWithDatabaseID:itemIDs:useLongIDs:
_bodyDataForItemIDs:useLongIDs:
setLyricsInfoDictionaries:
T@"NSArray",C,N,V_lyricsInfoDictionaries
_lyricsInfoDictionaries
lyricsInfoDictionaries
requestWithDatabaseID:itemIDs:useLongIDs:
TB,R,N,V_isCancelled
Tf,R,N,V_progress
_isCancelled
_progress
T@"NSObject<OS_os_log>",R,N
logCategory
oversizeLogCategory
initWithConnection:
setProgress:
queryFilter
metadataKeys
purchaseTokens
updateLibraryFromRevision:toRevision:withResponse:
onDiskRevision
includeFlavors
includeHiddenItems
includePreorders
needsUpdateForTokens
clearNeedsUpdateForTokens
importTracksUpToRevision:withCompletionHandler:
isCancelled
progress
componentsJoinedByString:
pathWithComponents:
instanceMethodForSelector:
T@"NSString",R,N,V_playlistGlobalID
T@"NSString",R,N,V_playlistShareURL
_sagaID
_playlistGlobalID
_playlistShareURL
initWithSagaID:
initWithConfiguration:sagaID:
playlistGlobalID
playlistShareURL
setValues:forProperties:
initWithBytes:length:encoding:
anyInLibrary:predicate:
T@"UNUserNotificationCenter",&,N,V_center
T@"NSObject<OS_dispatch_queue>",&,N,V_centerQueue
_center
_centerQueue
userNotificationCenter:didChangeSettings:
userNotificationCenter:didOpenApplicationForResponse:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
_createBag
center
setCenter:
centerQueue
setCenterQueue:
bagForProfile:profileVersion:
registerBagKeySet:forProfile:profileVersion:
bagKeySet
initWithSystemApplicationType:
addFinishBlock:
handleNotificationResponse:bag:
shouldHandleNotificationResponse:
notificationCenter:didChangeSettings:bag:
postNotificationName:object:userInfo:
authorizationStatus
requestAuthorizationWithOptions:completionHandler:
setNotificationCategories:
categoryWithIdentifier:actions:intentIdentifiers:options:
setWantsNotificationResponsesDelivered
setPrivateDelegate:
initWithBundleIdentifier:queue:
T@"NSArray",C,N,V_contentTasteItems
T@"NSDate",C,N,V_expirationDate
TQ,N,V_responseRevisionID
cachedResponse
TB,N,GisCachedResponse,V_cachedResponse
_cachedResponse
_contentTasteItems
_expirationDate
_responseRevisionID
initWithContentTasteResponse:
contentTasteItems
setContentTasteItems:
expirationDate
setExpirationDate:
responseRevisionID
setResponseRevisionID:
isCachedResponse
setCachedResponse:
eTagValueFromContentTasteResponse:
lowercaseString
allHeaderFields
downPinCollectionsForClasses:configuration:
rePinCollectionsForClasses:configuration:
trackForeignPersistentID
TB,R,N,V_useLongIDs
TC,R,N,V_itemKind
T@"NSArray",R,N,V_cloudArtworkInfoDictionaries
_cloudIDs
_useLongIDs
_itemKind
_cloudArtworkInfoDictionaries
initWithCloudIDs:
initWithConfiguration:cloudIDs:
cloudArtworkInfoDictionaries
privacyAcknowledgementRequiredForMedia
sharedPrivacyInfo
currentThermalLevel
isCharging
sagaDatabaseUserVersion
setSagaDatabaseUserVersion:
icd_sagaDatabaseUserVersion
icd_setSagaDatabaseUserVersion:
icd_sagaCloudAddToPlaylistBehavior
icd_setSagaCloudAddToPlaylistBehavior:
icd_preferredVideoQuality
icd_setPreferredVideoQuality:
sagaCloudAddToPlaylistBehavior
setSagaCloudAddToPlaylistBehavior:
Tq,N,Sicd_setSagaDatabaseUserVersion:
Tq,N,Sicd_setSagaCloudAddToPlaylistBehavior:
Tq,N,Sicd_setPreferredVideoQuality:
TB,N,V_updateRequired
setUpdateRequired:
initWithDatabaseID:databaseRevision:containerID:trackList:properties:
_bodyDataForDatabaseRevision:containerID:trackList:properties:
enumerateCloudItemIDsUsingBlock:
writeUInt64:withCode:
requestWithDatabaseID:databaseRevision:containerID:trackList:properties:
Tq,R,N,V_sourceType
_sourceType
initWithSourceType:
initWithSourceType:configuration:
addOperation:
addOperations:
_artworkURLForInfoDictionary:
_hasValidUserIdentity:forSourceType:
sourceType
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
maxSupportedSize
sizeInfo
initWithArtworkURL:
URLWithString:
initWithArtworkResponseDictionary:
JSONObjectWithData:options:error:
dataUsingEncoding:
subarraysOfSize:
initWithUserIdentity:
activeLockerAccount
_playlistName
_seedItemIDs
_itemIDs
initWithGeniusPlaylistPersistentID:playlistName:seedItemIDs:itemIDs:
initWithConfiguration:geniusPlaylistPersistentID:playlistName:seedItemIDs:itemIDs:
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_startupQueue
T@"NSOperationQueue",R,N,V_internalOperationQueue
T@"NSMutableDictionary",R,N,V_xpcListeners
T@"ICDCloudServiceStatusMonitor",R,N,V_cloudServiceStatusMonitor
T@"ICDNetworkAvailabilityService",R,N,V_networkAvailabilityService
T@"ICDServerOperationsManager",R,N,V_serverOperationsManager
T@"ICDServerNotificationsManager",R,N,V_serverNotificationsManager
startupSequenceCompleted
TB,N,GisStartupSequenceCompleted,V_startupSequenceCompleted
T@"ICDelegateAccountStoreServiceListener",R,N,V_delegateAccountStoreListener
T@"ICDelegationProviderService",R,N,V_delegationProviderService
T@"CloudPushNotificationController",R,N,V_pushNotificationController
T@"NSUserDefaults",R,N,V_mediaPlaybackDefaults
T@"CloudUserNotificationController",R,N,V_userNotificationController
TQ,R,N,V_stateHandle
TI,R,N,V_outputClusterType
TB,N,V_havePendingOperationToReloadSecondaryAccountLibraries
T@"NSObject<OS_dispatch_source>",R,N,V_sigtermSource
TB,N,V_ignoreAccountChanges
Tq,N,V_preferredVideoQuality
T@"<ICDAccountManaging>",R,N,V_accountManager
T@"<ICDHandlerCoordinating>",R,N,V_handlerCoordinator
T@"<ICDBackgroundTaskManaging>",R,N,V_backgroundTaskManager
_ignoreAccountChanges
_startupSequenceCompleted
_havePendingOperationToReloadSecondaryAccountLibraries
_outputClusterType
_accountManager
_handlerCoordinator
_backgroundTaskManager
_preferredVideoQuality
_pushNotificationController
_serverNotificationsManager
_cloudServiceStatusMonitor
_stateHandle
_serialQueue
_startupQueue
_internalOperationQueue
_xpcListeners
_networkAvailabilityService
_serverOperationsManager
_delegateAccountStoreListener
_delegationProviderService
_mediaPlaybackDefaults
_userNotificationController
_sigtermSource
getListenerEndpointForService:completion:
TB,N
Tq,N
T@"<ICDAccountManaging>",R,N
T@"<ICDHandlerCoordinating>",R,N
T@"<ICDBackgroundTaskManaging>",R,N
start
stop
addOperation:priority:
addBackgroundOperation:priority:
cancelOperationsByClass:
hasOperationsOfClass:
enumerateOperationsUsingBlock:
enumerateBackgroundOperationsUsingBlock:
daemonOptionsForConfiguration:
ignoreAccountChanges
setIgnoreAccountChanges:
preferredVideoQuality
setPreferredVideoQuality:
accountManager
handlerCoordinator
backgroundTaskManager
clusterController:clusterStatusDidChange:
handlerWithType:configuration:error:
scheduleBackgroundUpdateType:forConfiguration:
notificationsManagerDidReceiveAccountChangeDarwinNotification:
notificationsManagerDidReceiveBuddySetupDoneDarwinNotification:
notificationsManagerDidReceiveLibraryImportDidFinishDarwinNotification:
notificationsManagerDidReceiveCellularDataRestrictionDidChangeDarwinNotification:
notificationsManagerDidReceiveCloudAuthenticationDidChangeDarwinNotification:
notificationsManager:didReceiveAllowsExplicitContentDidChangeNotification:
notificationsManager:didReceiveSubscriptionStatusDidChangeNotification:
notificationsManager:didReceiveAuthServiceTokenDidChangeNotification:
notificationsManager:didReceiveFamilyDeletionEventNotification:
notificationsManager:didReceiveApplicationInstallationNotification:
notificationsManagerDidReceiveFirstUnlockNotification:
notificationsManagerDidReceivePhoneNumberChangedNotification:
_stateDump
listCloudServerOperations
_setupXPCListenerForService:
_ICCloudServerSupportedServiceForXPCListener:
observeValueForKeyPath:ofObject:change:context:
_setupInternalQueues
_setupSigtermHandler
_initializeAncillaryServices
_startAncillaryServices
_stopAncillaryServices
_setupKVO
_tearDownKVO
cloudServiceStatusMonitor
isStartupSequenceCompleted
setStartupSequenceCompleted:
_hasCompletedStartupSequence
_canCompleteStartupSequence
_completeStartupSequenceIfNeeded
_migrateToLatestUserVersionForConfigurations:
_setupMPMediaLibraryFilteringForConfigurations:
_updateServerAllowsExplicitContentSettingAutomatically:forConfiguration:
_ensureSubscriptionInformationIsUpToDateForConfiguration:
_ensureMusicSubscriptionKeysAreAvailableForConfiguration:
_handleApplicationRegistrationNotification:
_handleURLBagProviderDidUpdateBagNotification:
_writeURLResolutionCacheFileUsingBag:
_preprocessURLResolutionCacheDictionary:
_secondaryAccountsCloudLibraryLoadingStateWithClusterType:
_libraryManagementPolicyTypeForPlatformWithOutputClusterType:canRetryLoadingSecondaryAccounts:
_retryLoadingCloudLibraryForSecondaryAccountsOnAppleTV
_loadICMLForSecondaryAccountsOnAppleTVWithOutputClusterType:activeAccountConfiguration:
_performPeriodicSubscriptionTasks
_updateEnhancedAudioAvailabilityIfNeeded
_handleFamilyContentDeletionEvent:
_updateAirPlaySettingsForConfiguration:
pushNotificationController
serverNotificationsManager
stateHandle
outputClusterType
havePendingOperationToReloadSecondaryAccountLibraries
setHavePendingOperationToReloadSecondaryAccountLibraries:
serialQueue
startupQueue
internalOperationQueue
xpcListeners
networkAvailabilityService
serverOperationsManager
delegateAccountStoreListener
delegationProviderService
mediaPlaybackDefaults
userNotificationController
sigtermSource
synchronizeWithCompletionHandler:
getSubscriptionStatusWithCompletionHandler:
setBool:forKey:
statusType
sharedStatusController
boolForKey:
removeItemsWithFamilyAccountID:purchaserAccountID:downloaderAccountID:
familyID
downloaderAccountID
purchaserAccountID
enhancedAudioConfiguration
getBagForRequestContext:forceRefetch:withCompletionHandler:
setAuthenticationProvider:
initWithUserInteractionLevel:
setClientInfo:
defaultInfo
setIdentityStore:
setIdentity:
setAllowsExpiredBags:
initWithBlock:
updateURLMappingsWithCompletion:
sharedProvider
waitForAllKeysToProcess
processKeyWithIdentifier:
prefetchSKDs
setAdamID:
setRequestOfflineKeys:
setBypassCache:
initWithRequestContext:
fileExistsAtPath:
enhancedAudioSharedContentKeyPath
hasCapability:
refreshSubscriptionUsingRequestContext:withCompletionHandler:
isAudioAccessory
isAppleTV
subscriptionStatus
performSubscriptionStatusRequest:withCompletionHandler:
setAllowsFallbackToStatusNeedingReload:
setAllowsFallbackToExpiredStatus:
setShouldIgnoreCache:
setCarrierBundleProvisioningStyle:
initWithStoreRequestContext:
userIdentitiesForManageableAccountsWithError:
privacyAcknowledgementRequiredForMusic
serverEnvironment
serverCorrelationKey
int64ValueForBagKey:
addOperationWithBlock:
setShouldReturnLastKnownStatusOnly:
writeToFile:options:error:
dataWithPropertyList:format:options:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByDeletingLastPathComponent
timeIntervalSinceNow
attributesOfItemAtPath:error:
hasOfflinePlaybackKeys
getKeyStatusForAccountUniqueIdentifier:error:
isMac
getSubscriptionStatusForUserIdentity:bypassingCache:withCompletionHandler:
getSubscriptionStatusForUserIdentity:withCompletionHandler:
addDependency:
blockOperationWithBlock:
initWithRequestContext:allowsExplicitContent:isAutomatic:
allowsExplicitContent
sharedRestrictionsMonitor
deviceMediaLibraryWithUserIdentity:
setCloudFilteringType:
defaultMediaLibrary
setFilteringDisabled:
registerObserver:
synchronize
isDeviceClassCUnlocked
sharedSecurityInfo
isDeviceSetupComplete
removeObserver:forKeyPath:
addObserver:forKeyPath:options:context:
sharedManager
stopService
isIPod
isIPhone
performBlockAfterDeviceSetup:
startService
beginObservingNetworkReachability
startSystemXPCService
systemServiceWithRequestContext:
initWithClientInfo:
machServiceListener
clusterType
updateBaseCacheKey
sharedCache
setupInitialSagaPoolingForConfiguration:
setupInitialJaliscoPoolingForConfiguration:
setPreferredVideoQuality:forConfiguration:completion:
isSagaAuthenticatedForConfiguration:completion:
updateJaliscoLibraryWithReason:forConfiguration:completion:
updateSagaLibraryWithReason:forConfiguration:completion:
authenticateForConfiguration:startInitialImport:enableCloudLibraryPolicy:isExplicitUserAction:completion:
deauthenticateForConfiguration:completion:
disableCloudLibraryWithReason:completion:
setCloudAddToPlaylistBehavior:forConfiguration:completion:
removeJaliscoLibraryForConfiguration:completion:
isMediaKindDisabledForJaliscoLibrary:configuration:completion:
loadIsUpdateInProgressForConfiguration:completion:
loadUpdateProgressForConfiguration:completion:
loadIsSagaUpdateInProgressForConfiguration:completion:
loadSagaUpdateProgressForConfiguration:completion:
loadIsJaliscoUpdateInProgressForConfiguration:completion:
loadJaliscoUpdateProgressForConfiguration:completion:
loadLastKnownEnableICMLErrorStatusForConfiguration:completion:
importItemArtworkForPurchaseHistoryID:configuration:completion:
importScreenshotForPurchaseHistoryID:configuration:completion:
importItemArtworkForSagaID:configuration:completion:
importScreenshotForSagaID:configuration:completion:
importContainerArtworkForSagaID:configuration:completion:
importSubscriptionItemArtworkForPersistentID:configuration:completion:
importSubscriptionScreenshotForPersistentID:configuration:completion:
importSubscriptionContainerArtworkForPersistentID:configuration:completion:
importArtistHeroImageForPersistentID:configuration:completion:
importAlbumArtistHeroImageForPersistentID:configuration:completion:
deprioritizeItemArtworkForPurchaseHistoryID:configuration:
deprioritizeScreenshotForPurchaseHistoryID:configuration:
deprioritizeItemArtworkForSagaID:configuration:
deprioritizeScreenshotForSagaID:configuration:
deprioritizeContainerArtworkForSagaID:configuration:
deprioritizeSubscriptionItemArtworkForPersistentID:configuration:
deprioritizeSubscriptionScreenshotForPersistentID:configuration:
deprioritizeSubscriptionContainerArtworkForPersistentID:configuration:
deprioritizeArtistHeroImageForPersistentID:configuration:
deprioritizeAlbumArtistHeroImageForPersistentID:configuration:
loadArtworkInfoForPurchaseHistoryIDs:configuration:completion:
loadScreenshotInfoForPurchaseHistoryIDs:configuration:completion:
loadArtworkInfoForSagaIDs:configuration:completion:
loadArtworkInfoForContainerSagaIDs:configuration:completion:
loadScreenshotInfoForSagaIDs:configuration:completion:
loadArtworkInfoForSubscriptionItemPersistentIDs:configuration:completion:
loadScreenshotInfoForSubscriptionPersistentIDs:configuration:completion:
loadArtworkInfoForSubscriptionContainerPersistentIDs:configuration:completion:
loadMissingArtworkForConfiguration:
loadGeniusItemsForSagaID:configuration:completion:
addGeniusPlaylistWithPersistentID:name:seedItemSagaIDs:itemSagaIDs:configuration:completion:
createPlaylistWithPersistentID:properties:trackList:configuration:completion:
sdk_createPlaylistWithPersistentID:properties:trackList:configuration:completion:
setPlaylistProperties:trackList:forPlaylistPersistentID:configuration:completion:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:configuration:completion:
addItemWithSagaID:toPlaylistWithPersistentID:configuration:completion:
sdk_addStoreItemWithOpaqueID:toPlaylistWithPersistentID:configuration:completion:
publishPlaylistWithSagaID:configuration:completion:
removePlaylistsWithSagaIDs:configuration:completion:
uploadArtworkForPlaylistWithPersistentID:configuration:completion:
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:configuration:completion:
updatePinnedSubscribedPlaylistsWithConfiguration:completion:
addStoreItemWithAdamID:referral:configuration:completion:
sdk_addStoreItemWithOpaqueID:configuration:completion:
addStorePlaylistWithGlobalID:configuration:completion:
removeItemsWithSagaIDs:configuration:completion:
hideItemsWithPurchaseHistoryIDs:configuration:completion:
setItemProperties:forPurchaseHistoryID:configuration:completion:
setItemProperties:forSagaID:configuration:completion:
uploadCloudItemPropertiesForConfiguration:completion:
uploadCloudPlaylistPropertiesForConfiguration:completion:
setAlbumProperties:forAlbumPersistentID:configuration:completion:
updateArtistHeroImagesForConfiguration:
loadIsJaliscoGeniusSupportedForConfiguration:completion:
loadJaliscoGeniusLearnMoreURLForConfiguration:completion:
loadJaliscoGeniusCUIDForConfiguration:completion:
setJaliscoGeniusCUID:forConfiguration:completion:
enableJaliscoGeniusForConfiguration:completion:
updateJaliscoGeniusDataForConfiguration:completion:
cancelUpdateJaliscoGeniusDataForConfiguration:completion:
loadJaliscoGeniusOperationStatusForConfiguration:completion:
disableJaliscoGeniusForConfiguration:completion:
loadBooksForStoreIDs:configuration:completion:
anonymousListener
initWithMachServiceName:
endpoint
initWithCapacity:
shouldForceiPhoneBehaviors
timeIntervalSinceDate:
unregisterObserver:
invalidate
_claimSingleWriterStatus
T@"ICDServer",R,N
server
importAllItemArtworkAndScreenshots
_importOriginalItemArtwork
_importOriginalScreenshots
_cellularDataAllowedForMediaType:
shouldAllowDataForCellularNetworkTypes
constraintsForSystemApplicationType:
enumerateRowsWithBlock:
intForColumnIndex:
int64ForColumnIndex:
stringForColumnIndex:
artworkTokenForSource:
initWithEntity:artworkType:
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
T@"NSOperationQueue",&,N,V_operationQueue
T@"NSString",&,N,V_powerAssertionIdentifier
T@"MSVWatchdog",&,N,V_watchdog
T@"DetermineArtistStoreIDLookupTypeOperation",&,N,V_currentUpdateOpertion
T@"DetermineArtistStoreIDLookupTypeOperation",&,N,V_followupUpdateOpertion
T@"CloudArtworkImporter",&,N,V_artworkImporter
_watchdog
_currentUpdateOpertion
_followupUpdateOpertion
_artworkImporter
artworkImporter
updateArtistHeroImages
updateArtistHeroImagesForArtistsAddedSinceLastUpdate
cancelArtistHeroImageUpdate
cancelArtistHeroImageUpdateAndWaitForOperationToFinish:
importArtistHeroImageForPersistentID:completionHandler:
importAlbumArtistHeroImageForPersistentID:completionHandler:
deprioritizeArtistHeroImageForPersistentID:
deprioritizeAlbumArtistHeroImageForPersistentID:
_synchronouslyLoadArtistUpdatePollingFrequencyFromBag
_artistHeroImageUpdateFinished
_importHeroImageForArtistType:withPersistentID:completionHandler:
accessQueue
setAccessQueue:
operationQueue
setOperationQueue:
powerAssertionIdentifier
setPowerAssertionIdentifier:
watchdog
setWatchdog:
currentUpdateOpertion
setCurrentUpdateOpertion:
followupUpdateOpertion
setFollowupUpdateOpertion:
setArtworkImporter:
suspend
unsignedIntegerValue
waitUntilAllOperationsAreFinished
setAlbumArtistPersistentIDsToUpdate:
albumArtistPersistentIDsToUpdate
setArtistPersistentIDsToUpdate:
removeObjectsInArray:
artistPersistentIDsToUpdate
shouldProcessSpecificArtists
initWithArtworkImporter:operationQueue:artistPersistentIDsToUpdate:albumArtistPersistentIDsToUpdate:
T@"NSURL",&,N,V_artistNameLibraryMatchURL
_artistNameLibraryMatchURL
artistNameLibraryMatchURL
setArtistNameLibraryMatchURL:
_addSpecificStoreArtistIDsToSet:
_addAllStoreArtistIDsToSet:
_imageURLFromArtworkInfo:
setCurrentDatabaseRevision:
Tq,N,V_currentDatabaseRevision
_currentDatabaseRevision
currentDatabaseRevision
importExistingOriginalArtworkWithArtworkToken:artworkType:sourceType:mediaType:
hasOriginalArtworkForRelativePath:
artworkRelativePathFromToken:
artworkTokenForArtistHeroURL:
setUsesFallbackCache:
artworkDataSource
updateBestArtworkTokenForEntityPersistentID:entityType:artworkType:retrievalTime:usingConnection:
importArtworkTokenForEntityPersistentID:entityType:artworkToken:artworkType:sourceType:usingConnection:
metadataDictionary
itemForIdentifier:
setProtocolVersion:
setPersonalizationStyle:
setItemIdentifiers:
setRequestContext:
stringValue
allObjects
cancelRequest:
enqueueDataRequest:withCompletionHandler:
predicateWithProperty:equalToValue:
parsedBodyDictionary
statusCode
urlResponse
defaultSession
initWithURLRequest:requestContext:
setTimeoutInterval:
requestWithURL:
ic_URLByAppendingQueryParameters:
setWithCapacity:
setAllArtistImagesMapURL:
setUpdateIntervalSeconds:
T@"NSNumber",&,N,V_updateIntervalSeconds
T@"NSURL",&,N,V_allArtistImagesMapURL
_updateIntervalSeconds
_allArtistImagesMapURL
_latestAllArtistImagesMap
_fetchAndCacheLatestAllArtistImagesMap
_updateSpecificArtistStoreIDsUsingAllArtistImagesMap:
_updateAllArtistStoreIDsUsingAllArtistImagesMap:
updateIntervalSeconds
allArtistImagesMapURL
writeToURL:atomically:
allArtistImagesMapCacheFilePathURL
dateByAddingTimeInterval:
earlierDate:
dictionaryWithContentsOfURL:
setBulkArtistNameLibraryMatchBatchSize:
setBulkArtistNameLibraryMatchURL:
T@"NSURL",&,N,V_bulkArtistNameLibraryMatchURL
T@"NSNumber",&,N,V_bulkArtistNameLibraryMatchBatchSize
_bulkArtistNameLibraryMatchURL
_bulkArtistNameLibraryMatchBatchSize
bulkArtistNameLibraryMatchURL
bulkArtistNameLibraryMatchBatchSize
setValues:forProperties:usingConnection:
setPercentEncodedQueryItems:
queryItemWithName:value:
stringByAddingPercentEncodingWithAllowedCharacters:
componentsWithURL:resolvingAgainstBaseURL:
removeCharactersInString:
URLQueryAllowedCharacterSet
T@"CloudArtworkImporter",R,N,V_artworkImporter
T@"NSOperationQueue",R,W,N,V_operationQueue
TB,R,N,V_shouldProcessSpecificArtists
T@"NSArray",&,N,V_artistPersistentIDsToUpdate
T@"NSArray",&,N,V_albumArtistPersistentIDsToUpdate
_shouldProcessSpecificArtists
_artistPersistentIDsToUpdate
_albumArtistPersistentIDsToUpdate
enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:forMediaTypes:inUsersLibrary:usingBlock:
revisionTrackingCode
currentRevision
timeIntervalSince1970
setTimeoutCallback:
operations
fileURLWithPath:
_name
_pendingChangesPath
_queue
contentTasteUpdateOperation:finishedByInvalidatingCache:error:
pendingChanges
removePendingChanges
_addPendingChangesForContentTasteUpdateOperation:invalidateLocalCache:
_removePendingChangesForContentTasteUpdateOperation:
_pendingChanges
_savePendingChanges:
writeToFile:atomically:
archivedDataWithRootObject:requiringSecureCoding:error:
dataWithContentsOfFile:
pathForResourceFileOrFolder:
initWithDatabaseID:cloudIDs:itemKind:useLongIDs:
_bodyDataForCloudIDs:itemKind:useLongIDs:
_queryFilterString
stringByReplacingOccurrencesOfString:withString:
writeString:withCode:
setArtworkInfoDictionaries:
T@"NSArray",C,N,V_artworkInfoDictionaries
_artworkInfoDictionaries
artworkInfoDictionaries
T@"NSOperationQueue",R,N,V_operationQueue
T@"NSOperationQueue",R,N,V_backgroundOperationQueue
networkActivityIndicatorVisible
TB,N,GisNetworkActivityIndicatorVisible,V_networkActivityIndicatorVisible
_networkActivityIndicatorVisible
_backgroundOperationQueue
setNetworkActivityIndicatorVisible:
isNetworkActivityIndicatorVisible
backgroundOperationQueue
removeObserver:forKeyPath:context:
operationCount
setQueuePriority:
TI,N,V_containerID
_containerID
containerID
setContainerID:
initWithDatabaseID:playlistName:seedItemIDs:itemIDs:
_bodyDataForPlaylistName:seedItemIDs:itemIDs:
writeData:withCode:
writeUInt8:withCode:
lastObject
requestWithDatabaseID:playlistName:seedItemIDs:itemIDs:
T@"NSArray",R,C,N
T@"NSString",R,C,N
_excludedKinds
_supportedMediaKinds
_supportedMediaKindsHandler
initWithKindsToExclude:supportedMediaKindsHandler:
supportedMediaKinds
daapQueryFilterString
jaliscoGetSortedMediaKinds:
minusSet:
allMediaDownloadLibraryIdentifiers
cancelDownloads:
T@"ICMusicLibraryContentMetadataDescriptor",&,N,V_songMetadataDescriptor
T@"ICMusicLibraryContentMetadataDescriptor",&,N,V_artistMetadataDescriptor
T@"ICMusicLibraryContentMetadataDescriptor",&,N,V_albumMetadataDescriptor
Tq,N,V_playCount
Tq,N,V_skipCount
Tf,N,V_userRating
T@"NSDate",C,N,V_lastPlayedDate
T@"NSDate",C,N,V_libraryAddedDate
TB,N,V_hasArtistAndAlbumData
_hasArtistAndAlbumData
_userRating
_songMetadataDescriptor
_artistMetadataDescriptor
_albumMetadataDescriptor
_playCount
_skipCount
_lastPlayedDate
_libraryAddedDate
initWithSong:
isValid
songMetadataDescriptor
setSongMetadataDescriptor:
artistMetadataDescriptor
setArtistMetadataDescriptor:
albumMetadataDescriptor
setAlbumMetadataDescriptor:
playCount
setPlayCount:
skipCount
setSkipCount:
userRating
setUserRating:
lastPlayedDate
setLastPlayedDate:
libraryAddedDate
setLibraryAddedDate:
hasArtistAndAlbumData
setHasArtistAndAlbumData:
stringByAppendingFormat:
lastDevicePlaybackDate
album
artist
universalStore
identifiers
T@"NSSet",C,N,V_supportedConfigurations
T@"NSSet",C,N,V_supportedConfigurationsDSIDs
T@"ICConnectionConfiguration",C,N,V_activeConfiguration
T@"NSString",C,N,V_activeConfigurationDSID
_supportedConfigurations
_supportedConfigurationsDSIDs
_activeConfiguration
_activeConfigurationDSID
copyWithZone:
save
_initWithAccounts:activeAccount:baseConfiguration:
_updateSupportedConfigurationsWithAccounts:activeConfiguration:
_updateSupportedConfigurationsDSIDs
_userIdentityForAccount:
_configurationForAccount:baseConfiguration:
supportedConfigurations
setSupportedConfigurations:
supportedConfigurationsDSIDs
setSupportedConfigurationsDSIDs:
activeConfiguration
setActiveConfiguration:
activeConfigurationDSID
setActiveConfigurationDSID:
configurationFromSourceConfiguration:userIdentity:
allocWithZone:
isEqualToSet:
restoredStatedWithFallbackAccounts:
stateForAccounts:baseConfiguration:
propertyListWithData:options:format:error:
_startGeniusRequestWithStartDate:retryTimeout:debugName:connectionResponseBlock:
urlRequest
storeRequestContext
maxRetryCount
setMaxRetryCount:
shouldUseMescalSigning
setShouldUseMescalSigning:
startGeniusRequestWithRetryTimeout:debugName:connectionResponseBlock:
T@"NSString",&,N,V_key
TQ,R,N
T^f,R,N
_values
_key
hasKey
valuesCount
values
clearValues
addValue:
valueAtIndex:
setValues:count:
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
mergeFrom:
setKey:
raise
exceptionWithName:reason:userInfo:
T@"NSMutableArray",&,N,V_uniqueSongs
T@"NSMutableArray",&,N,V_uniqueAlbums
T@"NSMutableSet",&,N,V_uniqueDatesWithAddedContent
Tq,N,V_cumulativePlayCount
Tq,N,V_cumulativeSkipCount
Tq,R,N
Td,R,N
_cumulativePlayCount
_cumulativeSkipCount
_uniqueSongs
_uniqueAlbums
_uniqueDatesWithAddedContent
initWithContentItemSnapshot:
artistName
artistAdamID
averagePlaysPerItemAdded
daysSinceLastPlayedDate
legacyScore
cumulativePlayCount
setCumulativePlayCount:
cumulativeSkipCount
setCumulativeSkipCount:
uniqueSongs
setUniqueSongs:
uniqueAlbums
setUniqueAlbums:
uniqueDatesWithAddedContent
setUniqueDatesWithAddedContent:
initWithObjects:
TB,N,V_failedToConnect
T@"CloudLibraryConnection",&,N,V_underlyingConnection
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
T@"NSObject<OS_dispatch_group>",&,N,V_connectionGroup
TB,N,V_loginRequestInFlight
T@"NSObject<OS_dispatch_queue>",&,N,V_asynchronousRequestsAccessQueue
T@?,C,N,V_connectionCompletionHandler
T@"NSString",R,C,N,V_libraryIdentifier
T@"CloudPendingChangesCoordinator",R,N,V_pendingChangesCoordinator
_failedToConnect
_loginRequestInFlight
_libraryIdentifier
_underlyingConnection
_pendingChangesCoordinator
_connectionQueue
_connectionGroup
_asynchronousRequestsAccessQueue
_connectionCompletionHandler
_initWithConfiguration:pendingChangesCoordinator:
cancelAllOperations
_bagKey
_isEnabledWithURLBag:
_performPendingOperations
_enqueueFailedOperation:
_enqueuePendingOperation:
_ensureConnectionWithCompletionHandler:
_connectToLibraryWithCompletionHandler:allowRetry:forceBagReload:
_continueConnectingToLibraryWithCompletionHandler:
_executeBlockForAllOperations:
libraryIdentifier
underlyingConnection
setUnderlyingConnection:
pendingChangesCoordinator
failedToConnect
setFailedToConnect:
connectionQueue
setConnectionQueue:
connectionGroup
setConnectionGroup:
loginRequestInFlight
setLoginRequestInFlight:
asynchronousRequestsAccessQueue
setAsynchronousRequestsAccessQueue:
connectionCompletionHandler
setConnectionCompletionHandler:
setStoreRequestContext:
initWithIdentity:identityStore:clientInfo:
initWithVerificationContext:
setDebugReason:
setInteractionLevel:
getVerificationContextForUserIdentity:error:
setBaseURL:
stringByAppendingString:
baseURL
completionBlock
increasePriority
decreasePriority
setLibraryBagKey:
_executing
_finished
finish
isConcurrent
isAsynchronous
isExecuting
isFinished
didChangeValueForKey:
willChangeValueForKey:
initWithSagaID:properties:
initWithConfiguration:sagaID:properties:
encodeInt32:forKey:
decodeInt32ForKey:
_library
_uploadItemPropertiesQueue
_uploadPlaylistPropertiesQueue
_updateCloudLibraryQueue
_updateCloudLibraryOperation
_updateLibraryCompletionHandlers
_itemPropertiesCoalescingTimer
_playlistPropertiesCoalescingTimer
_updateTaskHelper
initWithConfiguration:progressObserver:
cancelPendingChangesWithCompletion:
cancelPendingChanges
cancelOperationsWithCompletionHandler:
cancelOperations
uploadItemPropertiesWithMinimumTimeInterval:
uploadPlaylistPropertiesWithMinimumTimeInterval:
isUpdateInProgressWithIsInitialImport:
updateProgress
_addLibraryOperation:priority:noLibraryHandler:
updateLibraryWithReason:allowNoisyAuthPrompt:isExplicitUserAction:completionHandler:
_handleCloudLibraryUpdateOperationFinishedWithError:
removeAllObjects
sagaNeedsFullUpdateAfterNextUpdate
albumAdamID
setSagaLastPlaylistPlayDataUploadDate:
waitUntilFinished
sagaLastPlaylistPlayDataUploadDate
setSagaLastItemPlayDataUploadDate:
sagaLastItemPlayDataUploadDate
playDataBatchIntervalInMinutes
T@"CloudLibraryConnection",&,N,V_connection
T@"NSString",C,N,V_libraryIdentifier
persistent
TB,R,N,GisPersistent,V_persistent
Tq,N,V_status
T@"NSError",&,N,V_error
_persistent
_status
_error
TB,R
setConnection:
setLibraryIdentifier:
status
setStatus:
error
setError:
_playlistSagaIDs
initWithSubscribedPlaylistSagaIDs:ignoreMinRefreshInterval:requestReason:
initWithConfiguration:subscribedPlaylistSagaIDs:ignoreMinRefreshInterval:requestReason:
initWithConfiguration:subscribedPlaylistSagaIDs:ignoreMinRefreshInterval:requestReason:pinnedOnly:
T@"NSArray",R,N,V_itemIDs
_seedID
_numberOfItems
initWithSeedID:numberOfItems:
initWithConfiguration:seedID:numberOfItems:
itemIDs
initialImport
TB,N,GisInitialImport,V_initialImport
Tq,R,N,V_geniusOperationStatus
_initialImport
_geniusOperationStatus
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
_updateGeniusData
_prepareMetadataPayloadWithCUID:
_determineUploadURLWithCUID:numberOfItems:
_uploadMetadataWithCUID:toURL:updateID:
_determineResultsURLWhenReadyWithCUID:updateID:
_downloadSimDataFromURL:additionalFieldsFromURL:
_importGeniusData
_itemsToUpload
_simDataDestinationPathURL
_additionalFieldsDestinationPathURL
isInitialImport
setInitialImport:
geniusOperationStatus
countOfEntities
scanHexLongLong:
scannerWithString:
initWithContentsOfURL:options:error:
initWithBytesNoCopy:length:freeWhenDone:
moveItemAtURL:toURL:error:
msv_downloadTaskWithRequest:completionHandler:
setValue:forHTTPHeaderField:
userAgent
sessionWithConfiguration:delegate:delegateQueue:
defaultSessionConfiguration
numberWithUnsignedInteger:
cloudMediaLibraryUID
jaliscoLastGeniusUpdateDate
T@"<ICDHandlerProviding>",R,W,N,V_handlerProvider
T@"NSString",C,N,V_requestingBundleID
_handlerProvider
initWithHandlerProvider:
_updateSagaLibraryWithReason:allowNoisyAuthPrompt:forConfiguration:completionHandler:
requestingBundleID
setRequestingBundleID:
handlerProvider
setJaliscoLastLibraryUpdateTime:
jaliscoLastLibraryUpdateTime
setSagaLastLibraryUpdateTime:
sagaLastSubscribedContainersUpdateTime
sagaLastLibraryUpdateTime
T@"NSString",&,N,V_clientIdentifier
T@"NSString",&,N,V_clientVersion
T@"NSString",&,N,V_bagProfile
T@"NSString",&,N,V_bagProfileVersion
TB,N,V_shouldIgnoreUserTokenCache
TB,N,V_shouldIgnoreDeveloperTokenCache
_bagProfile
_bagProfileVersion
_clientIdentifier
_clientVersion
_shouldIgnoreDeveloperTokenCache
_shouldIgnoreUserTokenCache
_has
hasClientIdentifier
hasClientVersion
hasBagProfile
hasBagProfileVersion
setShouldIgnoreUserTokenCache:
setHasShouldIgnoreUserTokenCache:
hasShouldIgnoreUserTokenCache
setShouldIgnoreDeveloperTokenCache:
setHasShouldIgnoreDeveloperTokenCache:
hasShouldIgnoreDeveloperTokenCache
clientIdentifier
setClientIdentifier:
clientVersion
setClientVersion:
bagProfile
setBagProfile:
bagProfileVersion
setBagProfileVersion:
shouldIgnoreUserTokenCache
shouldIgnoreDeveloperTokenCache
T@"NSArray",&,N,V_allML3TrackPropertiesWithGeniusTrackProperties
T@"NSArray",&,N,V_allGeniusTrackPropertiesWithML3TrackProperties
T@"NSArray",&,N,V_allML3ContainerPropertiesWithGeniusPlaylistProperties
T@"NSArray",&,N,V_allGeniusPlaylistPropertiesWithML3ContainerProperties
_ml3TrackPropertyToGeniusTrackPropertyMap
_ml3TrackPropertyTransformMap
_ml3ContainerPropertyToGeniusPlaylistPropertyMap
_ml3ContainerPropertyTransformMap
_allML3TrackPropertiesWithGeniusTrackProperties
_allGeniusTrackPropertiesWithML3TrackProperties
_allML3ContainerPropertiesWithGeniusPlaylistProperties
_allGeniusPlaylistPropertiesWithML3ContainerProperties
geniusTrackPropertyForML3TrackProperty:
geniusValueForML3TrackProperty:value:
geniusPlaylistPropertyForML3ContainerProperty:
geniusValueForML3ContainerProperty:value:
_initializeMappings
allML3TrackPropertiesWithGeniusTrackProperties
setAllML3TrackPropertiesWithGeniusTrackProperties:
allGeniusTrackPropertiesWithML3TrackProperties
setAllGeniusTrackPropertiesWithML3TrackProperties:
allML3ContainerPropertiesWithGeniusPlaylistProperties
setAllML3ContainerPropertiesWithGeniusPlaylistProperties:
allGeniusPlaylistPropertiesWithML3ContainerProperties
setAllGeniusPlaylistPropertiesWithML3ContainerProperties:
geniusValueForMLValue:
removeFromRunLoop:forMode:
close
URLByAppendingPathExtension:
setHTTPMethod:
setHTTPBody:
handleFailureInFunction:file:lineNumber:description:
fileURLWithPath:isDirectory:
lastPathComponent
URLByAppendingPathComponent:isDirectory:
linkItemAtURL:toURL:error:
URLByDeletingLastPathComponent
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
initWithURL:append:
currentRunLoop
scheduleInRunLoop:forMode:
open
writePropertyList:toStream:format:options:error:
active
TB,R,N,GisActive
_isActive
_serviceListener
performSubscriptionStatusRequest:forUniqueIdentifier:
isActive
performSubscriptionStatusRequest:withStatusHandler:
deliverSubscriptionStatusResponse:forRemoteRequestWithUniqueIdentifier:error:
machServiceName
T@"CloudMusicSubscriptionStatusServiceListener",R,N
sharedMusicSubscriptionStatusServiceListener
_responseExpirationDate
_backOffIndex
_defaultContentTasteRefreshIdentifier
_isHandlerValid
_retryState
updateContentTasteForReason:invalidatingLocalCache:completionHandler:
updateContentTasteForItem:invalidatingLocalCache:completionHandler:
cancelAllOperationsAndClearPendingChangesWithCompletionHandler:
_scheduleUpdatingContentTasteWithNewExpirationDate
_schedulePostingContentTasteForFailedItems
_postPendingContentTasteChangesByAddingChange:completionHandler:
descriptionWithLocale:
currentLocale
T@"JaliscoUpdateGeniusDataOperation",&,N,V_updateGeniusDataOperation
T@"JaliscoLibrary",R,N,V_jaliscoLibrary
T@"JaliscoArtworkImporter",R,N,V_artworkImporter
T@"NSObject<OS_dispatch_queue>",R,N,V_updateLibraryQueue
T@"JaliscoMediaUpdateOperation",&,N,V_updateLibraryOperation
T@"NSOperationQueue",R,N,V_geniusUpdateOperationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_geniusUpdateQueue
T@"NSObject<OS_dispatch_group>",R,N,V_geniusUpdateGroup
T@"NSMutableArray",R,C,N,V_updateLibraryCompletionHandlers
_updateLibraryQueue
_jaliscoLibrary
_updateGeniusDataOperation
_updateLibraryOperation
_geniusUpdateOperationQueue
_geniusUpdateQueue
_geniusUpdateGroup
initWithConfiguration:updateTaskHelper:
jaliscoLibrary
jaliscoLibraryWithReason:
removeLibraryWithCompletionHandler:
updateJaliscoLibraryByAddingMediaKind:completionHandler:
updateJaliscoLibraryByRemovingMediaKind:completionHandler:
isMediaKindDisabledForJaliscoLibrary:completionHandler:
cancelAllOperationsAndWaitForOperationsToFinish:
_updateGeniusDataForInitialImport:completionHandler:
_updateJaliscoLibraryWithCompletion:
_DAAPMediaKindFromJaliscoSupportedMediaKind:
updateGeniusDataOperation
setUpdateGeniusDataOperation:
updateLibraryQueue
updateLibraryOperation
setUpdateLibraryOperation:
geniusUpdateOperationQueue
geniusUpdateQueue
geniusUpdateGroup
updateLibraryCompletionHandlers
setCloudMediaLibraryUID:
clearJaliscoLastExcludedMediaKinds
jaliscoNeedsUpdateForTokens
setJaliscoAccountID:
T@"ICAppleMusicAPITokenCollection",&,N,V_tokenCollection
T@"ICAppleMusicAPITokenError",&,N,V_error
_tokenCollection
hasTokenCollection
hasError
tokenCollection
setTokenCollection:
icd_isConnectionAllowedForService:validationReason:
icd_isConnectionAllowedForService:
T@"NSString",R,N,V_MIMEType
TQ,R,N,V_responseCode
T@"NSDictionary",R,N,V_responseHeaderFields
T@"NSData",R,N,V_responseData
T@"NSURL",C,N,V_responseDataFileURL
T@"NSError",R,N,V_error
_MIMEType
_responseCode
_responseHeaderFields
_responseData
_responseDataFileURL
initWithCode:headerFields:data:MIMEType:error:
MIMEType
responseCode
responseHeaderFields
responseData
responseDataFileURL
setResponseDataFileURL:
responseWithCode:headerFields:data:MIMEType:error:
responseWithResponse:
Tq,R,N,V_computation
T@"ICDAccountManagerState",R,N,V_initialState
T@"ICDAccountManagerState",R,N,V_finalState
_initialState
_finalState
_computation
activeConfigurationChanged
supportedConfigurationsChanged
_initWithInitialState:finalState:computation:
initialState
finalState
computation
stateChangeFromState:toState:computation:
T@"NSArray",C,N,V_itemIDs
setItemIDs:
requestWithDatabaseID:seedID:numberOfItems:
initWithDatabaseID:seedID:numberOfItems:
T@"NSString",C,N,V_cuid
_cuid
initWithCUID:
initWithConfiguration:CUID:
_sendOptOutWithCUID:
cuid
setCuid:
dictionaryWithObject:forKey:
Tq,N,V_storeID
T@"ICConnectionConfiguration",&,N,V_configuration
Tq,N,V_contentTasteType
Tq,N,V_contentTasteItem
T@"NSString",&,N,V_globalPlaylistID
T@"NSDate",&,N,V_updateActionTimeStamp
T@"NSNumber",&,N,V_dsid
_storeID
_contentTasteType
_contentTasteItem
_globalPlaylistID
_updateActionTimeStamp
_dsid
initWithStoreItemID:mediaContentTasteItem:contentTaste:configuration:timeStamp:
initWithGlobalPlaylistID:contentTaste:configuration:
storeID
setStoreID:
setConfiguration:
contentTasteType
setContentTasteType:
contentTasteItem
setContentTasteItem:
globalPlaylistID
setGlobalPlaylistID:
updateActionTimeStamp
setUpdateActionTimeStamp:
dsid
setDsid:
initWithBytesNoCopy:length:encoding:freeWhenDone:
encodeInteger:forKey:
encodeDouble:forKey:
dateWithTimeIntervalSince1970:
decodeDoubleForKey:
decodeObjectForKey:
decodeIntegerForKey:
_storeRequestContext
_response
initWithStoreRequestContext:params:
performRequestWithResponseHandler:
execute
initWithData:
setAnisetteVersion:
setCachePolicy:
initWithURL:
performRequestWithCompletionHandler:
T@"ICUserIdentity",R,C,N,V_userIdentity
importTracksFromRevision:toRevision:withCompletionHandler:
_removeUnavailableSubscriptionAssetsInLibrary:
_importLyricsWithLyricsTokenMap:
_updateGlobalPlaylistsFromContainersPayloadAtPath:downloadPathForSubscribedContainersPayload:
clearLocationFromLibrary:persistentIDs:disableKeepLocal:usingConnection:
enumeratePathsToDeleteFromLibrary:persistentIDs:usingBlock:
notifyContentsDidChange
cancelImportOperation:completionHandler:
_sagaIDs
initWithSagaIDs:
initWithConfiguration:sagaIDs:
stringWithContentsOfURL:encoding:error:
initWithDatabaseID:containerIDs:
_bodyDataForContainerIDs:
addCloudItemID:idType:
initWithPlaylistSagaIDs:
initWithConfiguration:playlistSagaIDs:
decodeArrayOfObjectsOfClass:forKey:
_mediaContentTasteCacheDirectoryPath
getCachedContentTasteResponseForConnectionConfiguration:
setCachedContentTasteUpdateResponse:forConnectionConfiguration:
removeAllCachedContentTasteResponses
removeCachedContentTasteResponseForConnectionConfiguration:
_mediaContentTasteCacheFilePathForAccount:
_prepareArchiveWithContentTasteReponse:
_prepareCachedResponseFromArchiveAtPath:
contentsOfDirectoryAtPath:error:
sharedCloudContentTasteResponseCacheManager
dictionaryWithCapacity:
Tq,N,V_adamId
T@"NSString",&,N,V_name
T@"NSMutableArray",&,N,V_catalogContents
_adamId
_catalogContents
setAdamId:
setHasAdamId:
hasAdamId
hasName
clearCatalogContents
addCatalogContent:
catalogContentsCount
catalogContentAtIndex:
adamId
name
setName:
catalogContents
setCatalogContents:
catalogContentType
_affinityAnalyzer
_userHasOptedIn
_userHasEverToggledOptInSwitch
_subscriptionObservationToken
_isSystemService
_failedToPerformAnalysis
_lastSeenDSID
_lastTimePeriodicXPCFired
_refreshIntervalFromBag
startSystemService
stopSystemService
scheduleRecommendationsRefreshTimer
handleAccountStateChange:
_handleNewArtistContentResponseNotification:
_clearRecommendationsData
_cacheMatchedRecommendations:
_performRecommendationsUpdate
_performRecommendationsRequest
_handleRecommendationsResponseModel:completion:
_computeLibraryRecommendationWithResponse:completionHandler:
_fetchRecommendationsSetAndModelWithCompletionHandler:
_clearMLModelCache
_setupCacheDirectoryStructureWithPath:
_wrapAndCacheResponseModelWithCompiledMLModel:
_getNetworkConstraints
_cacheDirectoryPath
_retrievePreviousRecommendationMatchesFromCache
_cleanupExpiredApplicationMessages
_createApplicationMessagesForResult:artistNewContentResponse:completion:
_optInMessageContentForPriorityMessageContent:
_optInMessageForPriorityMessage:completion:
_updateOptInIfNecessary
_createLocalNotificationDictionaryForRecommendationResult:storePlatformMetadata:recommendationID:identifier:
stringFromDate:
setTimeZone:
timeZoneForSecondsFromGMT:
setLocale:
initWithLocaleIdentifier:
setDateFormat:
compare:
absoluteString
artworkURLWithSize:cropStyle:format:
artworkInfos
localizedStringForKey:value:table:
mediaPlayerBundle
messageEntriesForBundleIdentifier:completion:
addMessageEntry:completion:
removeMessageEntryWithIdentifier:forBundleIdentifier:completion:
downloadResourcesForMessageWithIdentifier:bundleIdentifier:completion:
updateMessageEntry:completion:
addContentPages:
removeLastObject
setEndDate:
endDate
setStartDate:
startDate
contentParameters
contentPages
priority
targets
identifier
applicationMessage
messageEntryWithIdentifier:bundleIdentifier:completion:
initWithApplicationMessage:bundleIdentifier:
addImages:
images
addContentParameters:
subtitle
setValue:
setIdentifier:
setPendingMatch:
trackData
initWithLookupItems:
allItems
setShouldDownloadResources:
setLocalNotification:
setNotification:
base64EncodedStringWithOptions:
dataWithJSONObject:options:error:
setImpressionEvent:
setImpression:
setRecoAlgoId:
setImpressionType:
addMessageActions:
setClickEvent:
addActionDetails:
setTargetType:
setTargetId:
setPageType:
setPageId:
setEventType:
setActionType:
setMessageRemovalPolicy:
setRequiresDelegate:
setURL:
setSubtitle:
setRule:
addSubrules:
setTriggerCondition:
setTriggerValue:
setDataType:
setComparisonType:
setRuleOperator:
setType:
addTarget:
setPriority:
setMessageType:
setMaximumDisplays:
setHasCloseButton:
setCarousel:
setGlobalPresentationPolicyGroup:
setAssetPrefetchStrategy:
shouldForceLibraryRecommendationAnalysis
setKeyProfile:
URLByAppendingPathComponent:
initWithBundleIdentifier:
copyItemAtURL:toURL:error:
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
modelWithContentsOfURL:error:
compileModelAtURL:error:
data
fileExistsAtPath:isDirectory:
allowLowAffinityRecommendations
multiArrayValue
featureValueForName:
predictionFromFeatures:error:
initWithDictionary:error:
getAccountNotificationsWithCompletionHandler:
hasBeenPreviouslyToggled
isToggled
settingsSwitches
isWiFiAssociated
writeToURL:error:
addObjectsFromArray:
initWithBase64EncodedString:options:
stringWithContentsOfFile:encoding:error:
networkType
ic_numberValueForKey:
shouldReduceLibraryRecommendationsXPCInterval
T@"ICMusicLibraryRecommendationController",R,N
sharedLibraryRecommendationController
T@"NSMutableDictionary",&,N,V_codeMap
T@"NSMutableDictionary",&,N,V_valueTypeMap
_codeMap
_valueTypeMap
hasInfoForProperty:
elementCodeForProperty:
valueTypeForProperty:
mapProperty:toCode:valueType:
codeMap
setCodeMap:
valueTypeMap
setValueTypeMap:
T@"ICDAAPPropertyInfo",R,N
sharedItemPropertyInfo
sharedContainerPropertyInfo
initWithNSError:
_itemPurchaseHistoryIDs
initWithItemPurchaseHistoryIDs:
initWithConfiguration:itemPurchaseHistoryIDs:
initWithDatabaseID:itemIDs:properties:useLongIDs:
_bodyDataForItemIDs:properties:useLongIDs:
requestWithDatabaseID:itemIDs:properties:useLongIDs:
T@"ICURLSession",R,N,V_URLSession
TQ,R,N,V_cloudID
T@"NSString",R,N,V_artworkToken
Tq,R,N,V_artworkType
TI,N,V_mediaType
T@"NSURL",C,N,V_assetURL
TB,N,V_allowsCellularData
_completionHandlers
_urlRequest
_allowsCellularData
_mediaType
_URLSession
_cloudID
_artworkToken
_artworkType
_assetURL
initWithURLSession:configuration:cloudID:artworkToken:artworkType:sourceType:
addCompletionHandler:
callCompletionHandlers
_resizedImageDataFromLocation:
URLSession
cloudID
artworkToken
artworkType
mediaType
setMediaType:
assetURL
setAssetURL:
allowsCellularData
setAllowsCellularData:
mainScreenSize
fileSize
enqueueDownloadRequest:toDestination:withCompletionHandler:
importOriginalArtworkFromFileURL:withArtworkToken:artworkType:sourceType:mediaType:
importOriginalArtworkFromImageData:withArtworkToken:artworkType:sourceType:mediaType:
bodyDataURL
_fileURL
initWithTemporaryFileURL:
dataWithContentsOfURL:options:error:
mappedDataWithContentsOfTemporaryFileURL:error:
_listener
_flushOperationQueue
_flushOperationCount
_nextFlushPlayActivityFireSyncInterval
_testNextFlushPlayActivityFireSyncInterval
_playActivityController
acquirePendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
recordPlayActivityEvents:withCompletionHandler:
setCurrentRevision:revisionVersionToken:forEndpointIdentifier:withCompletionHandler:
getHasPendingPlayEventsForEndpointIdentifier:withCompletionHandler:
removePlayActivityEventsUpToRevision:withCompletionHandler:
flushPlayActivityEventsForEndPointIdentifier:withReplyBlock:
acquirePendingPlayActivityEventsForEndpointIdentifier:storeAccountID:shouldFilterStoreAccountID:withReplyBlock:
setRevision:revisionVersionToken:forEndpointIdentifier:withReplyBlock:
removePlayActivityEventsUptoRevision:withReplyBlock:
insertPlayActivityEvents:withReplyBlock:
completePendingPlayActivityEvents:forSessionToken:result:withReplyBlock:
_flushPlayActivityEventsForEndPointIdentifier:withCompletion:
_playActivityControllerEndpointRevisionInformationDidChangeNotification:
_playActivityControllerDidRecordEventsNotification:
_timeIntervalForNextFlushOperationWithReplyBlock:
_criteriaDictionaryForEndPointIdentifier:withPostFrequency:
_isValidTimeInterval:
_scheduleNextPlayActivityFlushOperationWithCriteria:
sharedInstance
initWithPlayActivityController:
setClasses:forSelector:argumentIndex:ofReply:
initWithWritingStyle:
T@"JaliscoLoadBooksOperation",R,N,V_operation
T@"NSMutableArray",R,N,V_parsedBooks
T@"ICBook",&,N,V_currentParsingBook
TB,N,V_shouldParseMetadata
_shouldParseMetadata
_operation
_parsedBooks
_currentParsingBook
initWithOperation:
operation
parsedBooks
currentParsingBook
setCurrentParsingBook:
shouldParseMetadata
setShouldParseMetadata:
setVppOrganizationDisplayName:
setVppOrganizationID:
setVppLicensed:
setRedownloadParameters:
setArtworkURL:
setDatePurchased:
setGenre:
setAuthor:
queryStoreIDs
setPurchaseHistoryID:
setBooks:
setParserSuccess:
parserSuccess
TB,N,V_parserSuccess
T@"NSArray",&,N,V_books
T@"NSArray",&,N,V_queryStoreIDs
_parserSuccess
_queryStoreIDs
_books
_queryFilterEncodedStringForDAAPNameString:
metadataFilter
setQueryStoreIDs:
books
_activeAccountDSID
_cookieHeadersForRevokingMusicUserTokens
_notificationCoalescingTimer
_isObservingNotificationsForDataNeededUponSignOut
_identifiersOfApplicationsWithGrantedAccessToMediaLibraryIncludingTCCAcceptanceDates
_tccAccessChangedNotificationToken
_isObservingTCCAccessChangedNotification
_replyBlocksForPID
validateExpirationForBundleIdentifier:withReplyBlock:
startObservingRevocations
stopObservingRevocations
_identifiersOfApplicationsWithExpiredAccessToMediaLibrary
_checkForRecentRevocations
_displayNotificationForBuilder:withReplyBlock:
_revokeMusicUserTokensForApplicationsWithIdentifiers:
_revokeMusicUserTokensForApplicationWithIdentifier:revokeMusicUserTokenURL:identity:explicitDSID:explicitCookieHeaders:
_registerFailureToRevokeMusicUserTokensForApplicationsWithIdentifiers:error:
_scheduleUpdateOfDataNeededUponSignOut
_notificationCoalescingTimerDidExpire
_startObservingRevocations
_stopObservingRevocations
_updateDataNeededUponSignOut
_storeRequestContextWithIdentity:clientInfo:
setLastCookieHeadersForRevokingMusicUserTokens:
isEqualToDictionary:
setLastActiveAccountDSID:
getCookiesHeadersForURL:userIdentifier:
sharedCookieStore
urlForBagKey:
lastCookieHeadersForRevokingMusicUserTokens
lastActiveAccountDSID
deviceGUID
deviceInfo
setRequestingBundleVersion:
setRequestingBundleIdentifier:
objectForInfoDictionaryKey:
bundleWithIdentifier:
createCFUserNotification
setMediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates:
initWithArray:
_identifiersOfApplicationsWithGrantedAccessToMediaLibrary
mediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates
setAlternateButtonTitle:
setDefaultButtonTitle:
setMessage:
localizedName
applicationProxyForIdentifier:
T@"MediaLibraryAccessRevocationController",R,N
sharedController
T@"ICConnectionConfiguration",R,C,N,V_configuration
_loggable
initWithConfiguration:prefix:loggable:
addPendingChange:
processPendingChangesUsingLibrary:
removeAllPendingChangesWithCompletion:
removeAllPendingChanges
isFileURL
ic_referencesSameFile:
initWithURL:requestContext:
setSagaCloudLibraryCUID:
setSagaCloudLibraryTroveID:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getResourceValue:forKey:error:
sortedArrayUsingComparator:
componentsSeparatedByString:
insertPropertiesForUserIdentity:andPostAccountChangeNotification:usingBlock:completionHandler:
controllerWithUserIdentity:
isEnablingCloudLibraryDestructive
setAlertHeader:
setAlertMessage:
stringByStandardizingPath
setForceModalAlertAppearance:
initWithOptions:
presentWithCompletion:
setStoreDialogResponseHandler:
stringByResolvingSymlinksInPath
T@"NSString",&,N,V_domain
Tq,N,V_code
T@"NSString",&,N,V_localizedDescription
Ti,N,V_phase
_code
_domain
_localizedDescription
_phase
hasDomain
setCode:
setHasCode:
hasCode
hasLocalizedDescription
phase
setPhase:
setHasPhase:
hasPhase
domain
setDomain:
code
localizedDescription
setLocalizedDescription:
T@?,C,N,V_updateCompletionBlock
T@"NSString",C,N,V_opaqueID
_opaqueID
_bundleID
_updateCompletionBlock
initWithOpaqueID:bundleID:
initWithConfiguration:opaqueID:bundleID:
requestWithDatabaseID:databaseRevision:opaqueID:bundleID:
opaqueID
setOpaqueID:
updateCompletionBlock
setUpdateCompletionBlock:
initWithOpaqueID:bundleID:playlistPersistentID:
initWithConfiguration:opaqueID:bundleID:playlistPersistentID:
getValuesForProperties:
T@"NSString",&,N,V_developerToken
T@"NSString",&,N,V_userToken
_developerToken
_userToken
hasDeveloperToken
hasUserToken
developerToken
setDeveloperToken:
userToken
setUserToken:
T@"NSMutableArray",&,N,V_artistContents
T@"NSString",&,N,V_recoId
T@"NSData",&,N,V_model
_artistContents
_model
_recoId
clearArtistContents
addArtistContent:
artistContentsCount
artistContentAtIndex:
hasRecoId
hasModel
artistContents
setArtistContents:
recoId
setRecoId:
model
setModel:
artistContentType
T@"NSString",C,N,V_troveID
_troveID
initWithCUID:troveID:
initWithConfiguration:CUID:troveID:
_sendOptOutWithCUID:troveID:
troveID
setTroveID:
Ti,N,V_contentType
Tq,N,V_canonicalId
Tq,N,V_releaseDate
TB,N,V_isExplicit
T@"NSMutableArray",&,N,V_contentFeatures
_canonicalId
_releaseDate
_contentFeatures
_contentType
_isExplicit
contentType
setContentType:
setHasContentType:
hasContentType
contentTypeAsString:
StringAsContentType:
setCanonicalId:
setHasCanonicalId:
hasCanonicalId
setReleaseDate:
setHasReleaseDate:
hasReleaseDate
setIsExplicit:
setHasIsExplicit:
hasIsExplicit
clearContentFeatures
addContentFeatures:
contentFeaturesCount
contentFeaturesAtIndex:
canonicalId
releaseDate
isExplicit
contentFeatures
setContentFeatures:
contentFeaturesType
TB,N,V_deleteDB
TB,N,V_disableActiveLockerAccount
TB,N,V_removeSourcePurchaseHistoryForMusicTracks
_deleteDB
_disableActiveLockerAccount
_removeSourcePurchaseHistoryForMusicTracks
deleteDB
setDeleteDB:
disableActiveLockerAccount
setDisableActiveLockerAccount:
removeSourcePurchaseHistoryForMusicTracks
setRemoveSourcePurchaseHistoryForMusicTracks:
performMaintenanceTasksForDatabaseAtPath:withCompletionHandler:
rootArtworkCacheDirectory
originalArtworkDirectory
clearSagaPrefersToMergeWithCloudLibrary
clearSagaLastPlaylistPlayDataUploadDate
clearSagaCloudAddToPlaylistBehavior
clearSagaLastItemPlayDataUploadDate
clearSagaLastGeniusUpdateDate
clearSagaCloudAccountID
removeTracksWithPersistentIDs:fromSource:usingConnection:withCompletionHandler:
unrestrictedQueryWithLibrary:predicate:orderingTerms:
enqueueBlockForTransactionCommit:
initWithPersistentID:inLibrary:
setActiveLockerAccountWithDSID:completionHandler:
setupCompleted
TB,N,GisSetupCompleted,V_setupCompleted
Tq,N,V_libraryManagementPolicy
T@"<ICDBackgroundTaskScheduling>",R,W,N,V_taskScheduler
_setupCompleted
_libraryManagementPolicy
initWithLibraryManagementPolicy:backgroundTaskScheduler:
setupHandlersWithAccountStateChange:
updateHandlersWithAccountStateChange:
enumerateHandlersForAccountState:usingBlock:
changeLibraryManagementPolicy:withAccountsStateChange:
setSetupCompleted:
isSetupCompleted
_configurationsToActivateForChange:initialSetup:
_configurationsToRemoveForChange:initialSetup:
_deauthenticateUnsupportedConfigurationsFromChange:initialSetup:completion:
_processSupportedConfigurationsChange:initialSetup:
_processActiveConfigurationChange:initialSetup:
libraryManagementPolicy
setLibraryManagementPolicy:
_managedHandlerClasses
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
TI,R,N,V_databaseID
Tq,R,N,V_connectionState
T@"ICUserIdentity",R,N
T@"ICUserIdentityStore",R,N
_databaseID
_connectionState
sendRequest:withResponseHandler:
_onQueue_sendRequest:withInternalResponseHandler:
connectWithCompletionHandler:
disconnect
databaseID
connectionState
queue
setQueue:
libraryBagKey
initWithData:encoding:
clientInfo
isSandboxed
setCancelOnHTTPErrors:
allHTTPHeaderFields
isPrivateListeningEnabled
standardUserDefaults
familyMemberStoreID
purchaseClientIdentifier
buildIdentifier
Tq,N,V_playlistPersistentID
T@"NSString",&,N,V_cuid
T@"NSString",&,N,V_troveID
T@"NSString",&,N,V_userArtworkToken
T@"NSNumber",&,N,V_containerCloudID
T@"NSURL",&,N,V_assetURL
TQ,N,V_assetFileSize
_userArtworkToken
_containerCloudID
_assetFileSize
initWithPlaylistPersistentID:
initWithConfiguration:playlistPersistentID:
_initiateArtworkUpload
_downloadRequestsFromURL:uploadResponsesURL:
_uploadArtworkAssetWithInfo:uploadResponsesURL:uploadResponseData:postUploadBackOffDelay:followupDownloadRequestsURL:
_uploadArtworkAssetWithInfo:completionHandler:
_responseBodyForRequest:retryTimeout:debugName:
_standardBodyDictionaryWithAdditionalFields:
_requestWithURL:URLBagKey:timeoutInterval:additionalBodyFields:
_bodyDataWithAdditionalBodyFields:
playlistPersistentID
setPlaylistPersistentID:
userArtworkToken
setUserArtworkToken:
containerCloudID
setContainerCloudID:
assetFileSize
setAssetFileSize:
closeFile
writeData:
msv_uploadTaskWithRequest:fromData:completionHandler:
subdataWithRange:
sessionWithConfiguration:
timeZoneWithAbbreviation:
localeWithLocaleIdentifier:
compare:options:
migrateExistingArtworkToken:newArtworkToken:newSourceType:
bytes
originalFileURL
initWithToken:artworkType:musicLibrary:
performRemoteRequestOperationWithExecutionContext:completionHandler:
performRequestOnOperationQueue:withCompletionHandler:
initWithRemoteRequestOperationResponse:remoteRequestOperationError:
response
qualityOfService
_setShadowOperationForRemoteExecution:
remoteRequestOperation
T@"CloudRemoteRequestOperationExecutionServiceListener",R,N
sharedRemoteRequestOperationExecutionServiceListener
TB,R,N,GisInitialImport,V_initialImport
Tf,R,N
T@"NSString",C,N,V_powerEventBeginName
T@"NSString",C,N,V_powerEventEndName
T@"NSDictionary",C,N,V_powerEventPayload
_reason
_importer
_powerEventBeginName
_powerEventEndName
_powerEventPayload
initWithReason:
initWithConfiguration:reason:
setReason:
queryFilterPercentEscaped
localDatabaseRevision
preflightImport
newImporter
handleSuccess:
beginPerformUpdate
endPerformUpdate
_serverDatabaseRevision:
performUpdate
powerEventBeginName
setPowerEventBeginName:
powerEventEndName
setPowerEventEndName:
powerEventPayload
setPowerEventPayload:
systemUptime
processInfo
initWithDomain:code:userInfo:
initWithDatabaseID:databaseRevision:playlistProperties:trackList:
_bodyDataForDatabaseRevision:playlistProperties:trackList:
TI,R,N,V_containerID
initWithDatabaseID:databaseRevision:playlistProperties:trackList:requestingBundleID:
requestWithDatabaseID:databaseRevision:playlistProperties:trackList:requestingBundleID:
_mediaFilter
initWithConnection:supportedMediaKindsHandler:
mediaFilter
_chapterDataFromURL:
_chapterArtworkURLsForData:baseURL:
_importTracksFromRevision:toRevision:withItemsResponse:
_supportedMediaKindsDatabasePropertyValue
setJaliscoLastSupportedMediaKinds:
setStoreAccountID:
floatValue
initWithContentsOfURL:
jaliscoLastSupportedMediaKinds
arrayWithObjects:
setIgnoreSystemFilterPredicates:
jaliscoAccountID
importItemArtworkForPersistentID:completionHandler:
importScreenshotForPersistentID:completionHandler:
importContainerArtworkForPersistentID:completionHandler:
deprioritizeSubscriptionItemArtworkForPersistentID:
deprioritizeSubscriptionScreenshotForPersistentID:
deprioritizeSubscriptionContainerArtworkForPersistentID:
loadArtworkInfoForSubscriptionItemPersistentIDs:completionHandler:
loadArtworkInfoForSubscriptionContainerPersistentIDs:completionHandler:
loadScreenshotInfoForSubscriptionPersistentIDs:completionHandler:
_loadArtworkInfoForSubscriptionPersistentIDs:artworkType:entityType:completionHandler:
_importAllItemArtwork
rangeOfString:
resourceSpecifier
hasEntities
cloudAddRequestWithDatabaseID:
logCloudAddRequestDescription
processAddedItems:
removePendingAddedItemsForPermanentlyFailedOperation
T@"NSDictionary",&,N,V_adamIDToSagaIDMap
_referralAlbumAdamID
_referralPlaylistGlobalID
_adamIDToSagaIDMap
initWithAdamID:
initWithConfiguration:adamID:
initWithConfiguration:adamID:referralAlbumAdamID:
initWithConfiguration:adamID:referralPlaylistGlobalID:
adamIDToSagaIDMap
setAdamIDToSagaIDMap:
notifyEntitiesAddedOrRemoved
incrementRevisionWithLibrary:persistentID:deletionType:revisionType:usingConnection:
allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:
T@"NSDictionary",&,N,V_globalIDToSagaIDMap
_globalIDToSagaIDMap
initWithPlaylistGlobalID:
initWithConfiguration:playlistGlobalID:
globalIDToSagaIDMap
setGlobalIDToSagaIDMap:
deleteFromLibrary
initWithAdamID:playlistPersistentID:
initWithConfiguration:adamID:playlistPersistentID:
initWithConfiguration:adamID:playlistPersistentID:referralAlbumAdamID:
initWithConfiguration:adamID:playlistPersistentID:referralPlaylistGlobalID:
TQ,N,V_cloudID
T@"NSString",C,N,V_token
Tq,N,V_artworkType
T@?,C,N,V_completionHandler
_token
_completionHandler
setCloudID:
token
setToken:
setArtworkType:
completionHandler
setCompletionHandler:
T@"ICURLSession",&,N,V_artworkDownloadSession
T@"NSObject<OS_dispatch_queue>",&,N,V_artworkDownloadAccessQueue
T@"CloudArtworkOperationQueue",&,N,V_artworkDownloadOperationQueue
T@"NSMutableDictionary",&,N,V_artworkDownloadOperationMap
T@"NSString",C,N,V_powerAssertionIdentifier
T@"MSVWatchdog",&,N,V_artworkDownloadWatchdog
T@"MPMediaDownloadManager",&,N,V_downloadManager
_artworkDownloadAccessQueue
_artworkDownloadOperationMap
_artworkDownloadWatchdog
_downloadManager
downloadManager:didEnqueueAssetDownloads:didRemoveAssetDownloads:
downloadManager:didUpdateDownloadProgress:
downloadManager:didFinishAsset:withError:
downloadManager:didCancelAssets:
downloadManager:didChangeDownloadPausedReasonForAssets:
initWithMusicLibrary:sourceType:
initWithConfiguration:sourceType:
importArtworkForCloudID:artworkType:token:mediaType:allowsCellularData:completionHandler:
importCloudArtworkForRequests:
deprioritizeImportArtworkForCloudID:artworkType:
cancelAllImportsAndWaitForOperationsToFinish:
cancelAllImports
_adjustOperationQueueStatusForMediaDownloads
artworkDownloadSession
setArtworkDownloadSession:
artworkDownloadAccessQueue
setArtworkDownloadAccessQueue:
artworkDownloadOperationQueue
setArtworkDownloadOperationQueue:
artworkDownloadOperationMap
setArtworkDownloadOperationMap:
artworkDownloadWatchdog
setArtworkDownloadWatchdog:
downloadManager
setDownloadManager:
setSuspended:
isSuspended
hasActiveDownloads
increaseQualityOfService
decreaseQualityOfService
accountDSID
manageable
TB,R,N,GisManageable
isManageable
ic_DSID
ic_isManageable
T@?,C
_hasInvokedCompletionHandler
_wasCancelled
_privacyIdentifier
initWithPrivacyIdentifier:
_didCompleteWithPrivacyPromptStatus:error:
privacyAcknowledgementRequiredForIdentifier:
T@"NSData",&,N,V_APNSToken
T@"NSArray",&,N,V_mediaKinds
_APNSToken
_mediaKinds
initWithDictionaryRepresentation:
APNSToken
setAPNSToken:
mediaKinds
setMediaKinds:
ic_arrayValueForKey:
ic_dataValueForKey:
_accountRegistrationStates
registrationStateForAccountDSID:
setRegistrationState:forAccountDSID:
ic_dictionaryValueForKey:
T@"<ICDAccountManaging>",W,N,V_accountManager
TB,N,V_sagaEnabledOnDevice
T@"NSString",C,N,V_pushEnvironment
T@"APSConnection",&,N,V_connection
_currentAPNSToken
_currentRegistrationState
_amsPushHandler
_sagaEnabledOnDevice
_pushEnvironment
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
connection:didReceivePublicToken:
initWithAccountManager:
_updatePushNotificationsRegistration
_activeConfigurationsWithCompletion:
_createAPNSConnectionWithCompletion:
_updateRegistrationForConfiguration:completion:
_registerAPNSToken:usingRequestContext:withCompletion:
_registerMediaKinds:usingRequestContext:withCompletion:
_handleSagaPushMessage:withCompletionHandler:
_handleJaliscoPushMessage:withCompletionHandler:
_handleITunesStorePushMessage:withCompletionHandler:
_handleMusicSocialPushMessage:withCompletionHandler:
_handleInAppMessagesUpdatedPushMessage:
_isSupportedJaliscoMediaKind:
_supportedJaliscoMediaKinds
_supportedJaliscoMediaKindsWithSagaEnabled
setAccountManager:
sagaEnabledOnDevice
setSagaEnabledOnDevice:
pushEnvironment
setPushEnvironment:
initWithConfiguration:bag:
setUserNotificationExtensionId:
syncMessagesWithCompletion:
ic_intValueForKey:
apsPayload
handleNotification:
shouldHandleNotification:
moduleIdentifier
invalidateCachedSubscriptionStatusWithCompletionHandler:
actionType
jaliscoChangedMediaTypes
sagaUpdatedSubscribedPlaylistIDs
sagaServerRevision
initWithRequestContext:notificationType:notificationParameters:
initWithRequestContext:token:
setPushNotificationState:
isEqualToArray:
isEqualToData:
scheduleInRunLoop:
mainRunLoop
initWithEnvironmentName:namedDelegatePort:
removeFromRunLoop
publicToken
_setEnabledTopics:
enabledTopics
isCurrentNetworkLinkHighQuality
isRemoteServerLikelyReachable
initWithMessageUserInfo:
pushNotificationState
initWithDatabaseID:metadataFilter:queryFilter:purchaseTokens:includeHiddenItems:includePreorders:paginationToken:
timeoutInterval
_bodyDataForMetadataFilter:queryFilter:purchaseTokens:includeHiddenItems:includePreorders:paginationToken:
requestWithDatabaseID:paginationToken:
requestWithDatabaseID:metadataFilter:queryFilter:purchaseTokens:includeHiddenItems:
requestWithDatabaseID:metadataFilter:queryFilter:purchaseTokens:includeHiddenItems:includePreorders:
requestWithDatabaseID:
initWithDatabaseID:
T@"NSString",C,N,V_title
Tq,N,V_storeAdamID
_title
_storeAdamID
initWithTitle:andStoreAdamID:
title
setTitle:
storeAdamID
setStoreAdamID:
initWithDatabaseID:databaseRevision:addToPlaylistBehavior:
_bodyDataForDatabaseRevision:addToPlaylistBehavior:
requestWithDatabaseID:databaseRevision:addToPlaylistBehavior:
parseErrorInResponseData:
parseResponseData:
enumerateRawItemsInResponseData:usingHandler:
parseItemWithBytes:length:valuesOut:valuesCapacity:
parseItemWithBytes:length:usingHandler:
enumerateItemsInResponseData:usingHandler:
enumerateDeletedItemsInResponseData:usingHandler:
_parseItemPropertyCountWithBytes:length:
_parseResponseCode:bytes:length:usingHandler:
_parseLoginResponseWithBytes:length:
_parseUpdateResponseWithBytes:length:
_parseAuthorizedAccountTokenWithBytes:length:
_parseBulkCloudArtworkInfoResponseWithBytes:length:
_parseBulkCloudLyricsInfoResponseWithBytes:length:
_parseCloudArtworkInfoResponseWithBytes:length:
_parseCloudLyricsInfoResponseWithBytes:length:
_parseControlInterfacesResponseWithBytes:length:
_parseControlPromptResponseWithBytes:length:
_parseDeletedIDListingWithBytes:length:
_parseDictionaryCollectionWithBytes:length:
_parseEditCommandResponseWithBytes:length:
_parseUpdateTypeWithBytes:length:
_parseItemsResponseWithBytes:length:usingHandler:
_parseListingCollectionWithBytes:length:usingHandler:
_parseBrowseListingWithBytes:length:
_parseItemIDArrayWithBytes:length:
_parsePlayStatusResponseWithBytes:length:
_parseErrorResponseWithBytes:length:
_parseListingItemWithBytes:length:usingHandler:
initWithBytes:length:
initWithUnsignedLongLong:
initWithUnsignedLong:
initWithUnsignedShort:
initWithUnsignedChar:
numberWithUnsignedChar:
_service
_serviceName
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
_performTokenRequest:completionHandler:
_start
_stop
removeDelegate:
addDelegate:queue:
sendProtobuf:toDestinations:priority:options:identifier:error:
numberWithLong:
initWithProtobufData:type:isResponse:
initWithService:
T@"AppleMusicAPITokenIDSService",R,N
sharedService
_jobNameToSelectorMap
scheduleSagaDeferredPushUpate
unscheduleSagaDeferredPushUpate
scheduleJaliscoMediaPeriodicPoll
unscheduleJaliscoMediaPeriodicPoll
scheduleJaliscoMediaDeferredPushUpate
unscheduleJaliscoMediaDeferredPushUpate
_handleSagaDeferredPushUpdateJobSatisfied:invalidRequest:
_handleJaliscoMediaPeriodicPollJobSatisfied:invalidRequest:
_handleJaliscoMediaDeferredPushUpdateJobSatisfied:invalidRequest:
_initializeBTAHandlers
_scheduleJobNamed:withStartTime:baseBtaJob:
_unscheduleJobNamed:
_handleJobNamed:satisfied:invalid:
_baseBtaJobForDeferredPush
_baseBtaJobForPeriodicPollCellularDataAllowed:
_setHomeSharingPrefsNumber:forKey:
_homeSharingPrefsNumberForKey:
_throttledDeferredEvaluateKeepLocalTime
_nextEvaluateSyncRulesOperationTimeKey
_nextEvaluateSyncRulesThrottleOperationTimeKey
_nextJaliscoMediaPollTimeKey
_nextJaliscoAppsPollTimeKey
_cellularDataAllowedForJaliscoApps
_cellularDataAllowedForJaliscoMedia
initWithDouble:
sharedTaskManager
Tq,N,V_reason
T@"SagaImporter",&,N,V_importer
T@"ICStoreURLRequest",&,N,V_updateRequest
T@"ICStoreURLRequest",&,N,V_uploadLibraryRequest
T@"ICStoreURLRequest",&,N,V_getResultsRequest
Tq,N,V_uploadResponseStatus
TB,N,V_uploadingLibraryIsSupported
TB,N,V_isExplicitUserAction
initialUpdate
TB,R,N,GisInitialUpdate
_didSubscriptionStatusLapse
_didEncounterFatalErrorImportingPayload
_uploadingLibraryIsSupported
_isExplicitUserAction
_updateRequest
_uploadLibraryRequest
_getResultsRequest
_uploadResponseStatus
initWithConfiguration:reason:updateTaskHelper:
isInitialUpdate
_ensureDeviceIsRegistered
_uploadLibrary
_prepareLibraryForInitialUpdate
_updateLibrary
_determineResultsURLWhenReadyWithUpdateID:retryTimeout:responseStatusCode:
_clearAllCloudIDs
uploadingLibraryIsSupported
setUploadingLibraryIsSupported:
isExplicitUserAction
setIsExplicitUserAction:
reason
importer
setImporter:
updateRequest
setUpdateRequest:
uploadLibraryRequest
setUploadLibraryRequest:
getResultsRequest
setGetResultsRequest:
uploadResponseStatus
setUploadResponseStatus:
shouldTreatInitialSagaImportAsFailed
deleteAllEntitiesFromLibraryWithDeletionType:usingConnection:
containerQueryWithContainer:
dataWithBytes:length:
unsignedCharValue
dictionaryWithSharedKeySet:
endArray
sharedKeySetForKeys:
arrayByAddingObjectsFromArray:
startArrayForKey:
startDictionary
initWithOutputFileHandle:
fileHandleForWritingToURL:error:
createFileAtPath:contents:attributes:
T@"ACAccountStore",R,N,V_accountStore
T@"ICDAccountManagerState",C,N,V_state
T@"ICDAccountManagerStateChange",C,N,V_stateChange
T@"ICConnectionConfiguration",R,C,N
_accountStore
_state
_stateChange
T@"ICDAccountManagerState",R,C,N
T@"ICDAccountManagerStateChange",R,C,N
updateState
changeLibraryManagementPolicy:
state
stateChange
initWithLibraryManagementPolicy:
_buildStateChange
_updateStateWithChange:
accountStore
setState:
setStateChange:
ic_allStoreAccountsWithError:
T@"NSString",R,N
T@"ICCloudContentTasteUpdateItem",R,N
T@"ICCloudContentTasteUpdateResponse",R,N,V_contentTasteUpdateResponse
_workQueue
_invalidateLocalCache
_operationIdentifier
_contentTasteUpdateResponse
initWithContentTasteUpdateItem:invalidateLocalCache:configuration:operationIdentifier:
operationIdentifier
requestItem
_getPBData:includedContentTasteItemUpdates:fromContentTasteUpdateItems:
_contentTasteUpdateResponseWithServerResponse:expirationDate:revisionID:isCachedResponse:
_getStoreAdamIDLikedState:playlistGlobalIDLikedState:
_setCachedContentTasteResponse:
_prepareCachedResponseFromResponse:byAddingResponseTimeIntervalKey:withResponseTimeInterval:
_prepareContentTasteResponse:withContentTasteItems:fromCachedContentTasteResponseItems:includedContentTasteItems:
_updateContentTasteForMediaItems:
_updateContentTasteForGlobalPlaylists:
_setLikedState:forEntity:
contentTasteUpdateResponse
addNonLibraryOwnedPlaylistsWithGlobalIDs:completion:
checkInDatabaseConnection:
subarrayWithRange:
checkoutReaderConnection
addStoreItemIDs:andAddTracksToCloudLibrary:withCompletion:
initWithResponse:data:userInfo:storagePolicy:
storagePolicy
externalId
hasExternalId
actionTimestampMillis
preferenceType
preference
preferences
setPreferences:
setActionTimestampMillis:
setCreatedOffsetMillis:
setPreferenceType:
setPreference:
setExternalId:
T@"NSString",R,N,V_action
concurrent
TB,R,N,GisConcurrent,V_concurrent
Tq,N,V_method
T@"NSData",C,N,V_bodyData
TB,N,V_shouldPromptForAuthentication
T@"NSURL",C,N,V_responseDataDestinationFileURL
Tq,N,V_allowedRetryCount
Tq,N,V_requestPersonalizationStyle
_arguments
_concurrent
_shouldPromptForAuthentication
_action
_method
_bodyData
_responseDataDestinationFileURL
_allowedRetryCount
_requestPersonalizationStyle
initWithAction:
setValue:forArgument:
requestURLForBaseURL:sessionID:
URLRequestForBaseURL:sessionID:
acceptsGzipEncoding
_HTTPMethodStringForICDRequestMethod:
action
method
setMethod:
bodyData
setBodyData:
shouldPromptForAuthentication
setShouldPromptForAuthentication:
responseDataDestinationFileURL
setResponseDataDestinationFileURL:
allowedRetryCount
setAllowedRetryCount:
requestPersonalizationStyle
setRequestPersonalizationStyle:
requestWithURL:cachePolicy:timeoutInterval:
URLWithString:relativeToURL:
appendString:
request
initWithConfiguration:reason:supportedMediaKindsHandler:
T@"AMPMusicArtistNewContentResponse",R,N,V_responseModel
T@"MLModel",R,N,V_mlModel
_responseModel
_mlModel
initWithNewArtistContentResponseModel:andMLModel:
responseModel
mlModel
initWithAddToPlaylistBehavior:
initWithConfiguration:addToPlaylistBehavior:
T@"NSXPCConnection",&
_identity
_identityStore
_privacyAcknowledgementPolicy
_originatingClientConnection
_privacyPromptOperation
_bag
_identityProperties
_subscriptionStatusResponse
initWithIdentity:
privacyAcknowledgementPolicy
setPrivacyAcknowledgementPolicy:
originatingClientConnection
setOriginatingClientConnection:
_performPrivacyPromptOperation
_didCompletePrivacyPromptOperation:withStatus:error:
_handlePrivacyAcknowledgementErrorWithMessage:underlyingError:
_requestBagWithAsynchronousRequestsGroup:
_requestIdentityPropertiesWithAsynchronousRequestsGroup:
_updateWithIdentityProperties:error:
_requestSubscriptionStatusWithAsynchronousRequestsGroup:
_updateWithSubscriptionStatusResponse:error:
_requestCapabilities
_didCompleteAllCapabilitiesAsynchronousRequests
isManagedAppleID
setShouldBypassEnforcementOfPrivacyAcknowledgement:
enqueueChildOperation:
importAllItemArtwork
_importOriginalContainerArtwork
_callbackQueue
_contentTasteRequestHandlerToDSIDMap
_musicAppIsInstalled
handleContentTasteChangedNotification
updateContentTasteForConnectionConfiguration:invalidateLocalCache:withCompletionHandler:
removeContentTasteOperationsForConnectionConfiguration:
setContentTaste:forMediaItem:storeIdentifier:configuration:timeStamp:withCompletionHandler:
setContentTaste:forPlaylistGlobalID:configuration:withCompletionHandler:
setContentTaste:forAlbumStoreID:configuration:withCompletionHandler:
updateContentTasteForMediaItemsAndInvalidateLocalCache:configuration:withCompletionHandler:
_contentTasteRquestHandlerForConfiguration:outError:
_updateContentTasteForItem:invalidatingLocalCache:configuration:withCompletionHandler:
_cancelAllContentTasteRequestHandlers
_postContentTasteChangesForPendingItems
userIdentitiesForAllStoreAccountsWithError:
longValue
sharedContentTasteRequestListener
T@"CloudArtworkImportSetupOperation",R,N
sharedSetupOperation
_albumPersistentID
_albumItemProperties
initWithAlbumPersistentID:albumItemProperties:
initWithConfiguration:albumPersistentID:albumItemProperties:
_itemSagaID
initWithItemSagaID:playlistPersistentID:
initWithConfiguration:itemSagaID:playlistPersistentID:
Tq,N,V_privacyAcknowledgementPolicy
_itemSagaIDs
initWithItemSagaIDs:
initWithConfiguration:itemSagaIDs:
T@"CloudArtistHeroImageImporter",R,N,V_importer
T@"NSDictionary",&,N,V_addedItems
_addedItems
addedItems
setAddedItems:
initWithDatabaseID:databaseRevision:adamID:sagaID:playlistGlobalID:containerID:referralAlbumAdamID:referralPlaylistGlobalID:
_bodyDataForDatabaseRevision:adamID:sagaID:playlistGlobalID:referralAlbumAdamID:referralPlaylistGlobalID:
writeSInt64:withCode:
T@"NSMutableDictionary",R,N,V_addedItems
TQ,R,N,V_currentCloudID
TQ,R,N,V_currentAdamID
T@"NSString",R,N,V_currentGlobalID
_currentCloudID
_currentAdamID
_currentGlobalID
currentCloudID
currentAdamID
currentGlobalID
requestWithDatabaseID:databaseRevision:adamID:referralAlbumAdamID:referralPlaylistGlobalID:
requestWithDatabaseID:databaseRevision:adamID:containerID:referralAlbumAdamID:referralPlaylistGlobalID:
requestWithDatabaseID:databaseRevision:sagaID:containerID:
requestWithDatabaseID:databaseRevision:playlistGlobalID:
T@"NSMutableDictionary",R,N,V_mutableCloudIDToLyricsTokenMap
TB,R,N,V_shouldRestart
TI,R,N,V_totalItemCount
TI,R,N,V_currentItemCount
TI,R,N,V_processedItemCount
T@"NSString",R,N,V_currentPaginationToken
T@"NSDictionary",R,N
_shouldRestart
_totalItemCount
_currentItemCount
_processedItemCount
_currentPaginationToken
_mutableCloudIDToLyricsTokenMap
cloudIDToLyricsTokenMap
processDAAPFileAtURL:
shouldRestart
totalItemCount
currentItemCount
processedItemCount
currentPaginationToken
mutableCloudIDToLyricsTokenMap
setMutableCloudIDToLyricsTokenMap:
Tq,R,N,V_currentCloudID
T@"NSString",R,N,V_currentLyricsToken
T@"NSMutableDictionary",&,N,V_mutableCloudIDToLyricsTokenMap
_currentLyricsToken
currentLyricsToken
initWithAction:databaseID:databaseRevision:opaqueID:bundleID:
_bodyDataForDatabaseRevision:opaqueID:
requestWithDatabaseID:databaseRevision:opaqueID:bundleID:containerID:
T@"NSString",R,C,N,V_name
Tq,R,N,V_type
_type
type
taskWithType:configuration:
T@"NSMutableSet",R,N,V_currentTasks
_currentTasks
initWithAccountManager:handlerCoordinator:
startPeriodicPolling
scheduleTaskOfType:forConfiguration:
_restoreCurrentTasks
_saveCurrentTasks
_startTask:
_stopTask:
_scheduleTask:withStartTime:
_unscheduleTask:
_taskWithName:
_handleTask:completion:
activityCriteriaForTask:startTimeInSeconds:
_cellularDataAllowed
_pollingRefreshIntervalSecondsUsingBag:
_pollingGracePeriodSecondsForRefreshInterval:
_periodicPollingActivityCriteriaWithRefreshInterval:gracePeriod:
_deferredPushGracePeriodSeconds
_deferredPushActivityCriteriaForTask:startTime:gracePeriod:
_handleSagaDeferredPushUpdateTask:completion:
_handleJaliscoDeferredPushUpdateTask:completion:
currentTasks
bypassBagSanityChecks
anyObject
objectsPassingTest:
v32@0:8@16@24
@"SagaRequestHandler"
@"JaliscoRequestHandler"
@"NSObject<OS_dispatch_queue>"
@"NSOperationQueue"
@"NSMutableDictionary"
v24@0:8@"ICEnvironmentMonitor"16
v24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v28@0:8q16B24
v32@0:8q16@"NSDictionary"24
v28@0:8f16q20
v32@0:8q16@24
v24@0:8q16
@24@0:8@16
v16@0:8
v40@0:8B16q20B28@?32
v32@0:8q16@?24
v24@0:8@?16
v40@0:8q16B24B28@?32
v36@0:8@16q24i32
v32@0:8Q16@?24
v24@0:8Q16
v48@0:8q16@24@32@?40
v56@0:8q16@24@32@40@?48
v32@0:8@16@?24
v48@0:8q16@24q32@?40
v40@0:8Q16q24@?32
v48@0:8@16q24@32@?40
v40@0:8q16@24@?32
v40@0:8@16@24@?32
v48@0:8@16@24q32@?40
v40@0:8@16Q24@?32
v40@0:8@16q24@?32
v48@0:8@16B24q28B36@?40
v28@0:8B16@?20
q24@0:8q16
q28@0:8@16B24
q24@0:8@16
v44@0:8@16B24q28@?36
v40@0:8B16B20B24B28@?32
@32@0:8@16@24
v48@0:8@16q24B32B36@?40
v20@0:8B16
I16@0:8
v20@0:8I16
C16@0:8
v20@0:8C16
v24@0:8@"DKDAAPParser"16
v32@0:8@"DKDAAPParser"16q24
v32@0:8@"DKDAAPParser"16@"NSError"24
B28@0:8@"DKDAAPParser"16I24
v32@0:8@"DKDAAPParser"16I24I28
v40@0:8@"DKDAAPParser"16I24*28I36
v28@0:8@"DKDAAPParser"16I24
v32@0:8@16q24
B28@0:8@16I24
v32@0:8@16I24I28
v40@0:8@16I24*28I36
v28@0:8@16I24
@20@0:8I16
@"NSDictionary"
@32@0:8Q16@24
@40@0:8@16Q24@32
@"ICCloudItemIDList"
@40@0:8q16@24@32
@48@0:8@16q24@32@40
@40@0:8I16I20@24@32
@"NSString"
@48@0:8q16@24@32@40
@56@0:8@16q24@32@40@48
@32@0:8I16@20C28
@28@0:8@16C24
@24@0:8I16I20
@28@0:8I16@20
@"ICURLSession"
@"NSUserDefaults"
@"ICUserIdentity"
@"ICUserIdentityStore"
@"ICConnectionConfiguration"
@"ML3MusicLibrary"
@"<ICDBackgroundTaskScheduling>"
@"NSNumber"
@"NSDate"
@40@0:8@16@24@32
@36@0:8I16@20@28
@"NSArray"
@"CloudLibraryConnection"
@"NSURL"
B24@0:8^@16
q16@0:8
@"NSMutableArray"
@"<ICDServerNotificationsManagerDelegate>"
v36@0:8B16@20@28
@44@0:8@16@24B32q36
@"<NSCopying>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B32@0:8@16@24
v24@0:8@?<v@?@"NSUUID">16
v32@0:8@"NSUUID"16@?<v@?>24
v32@0:8q16@?<v@?Q@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v40@0:8Q16@"ICClientInfo"24@?<v@?@"NSString"@"NSError">32
v48@0:8@"NSString"16Q24@"ICClientInfo"32@?<v@?@"NSString"@"NSError">40
v40@0:8Q16@"ICClientInfo"24@?<v@?@"ICMusicKitTokensResponse"@"NSError">32
v40@0:8Q16@24@?32
v48@0:8@16Q24@32@?40
v48@0:8Q16@24q32@40
B28@0:8@16B24
@40@0:8@16@24^@32
v24@0:8@?<v@?B>16
@32@0:8I16@20B28
@28@0:8@16B24
@"NSObject<OS_os_log>"16@0:8
v20@0:8f16
@32@0:8I16I20@24
v28@0:8I16@?20
f16@0:8
@24@0:8Q16
@32@0:8@16Q24
@"UNUserNotificationCenter"
v32@0:8@"UNUserNotificationCenter"16@"UNNotificationSettings"24
v32@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@44@0:8I16I20I24@28@36
@24@0:8q16
@32@0:8q16@24
B32@0:8@16q24
@"<ICDAccountManaging>"
@"<ICDHandlerCoordinating>"
@"<ICDBackgroundTaskManaging>"
@"CloudPushNotificationController"
@"ICDServerNotificationsManager"
@"ICDCloudServiceStatusMonitor"
@"ICDNetworkAvailabilityService"
@"ICDServerOperationsManager"
@"ICDelegateAccountStoreServiceListener"
@"ICDelegationProviderService"
@"CloudUserNotificationController"
@"NSObject<OS_dispatch_source>"
v32@0:8q16@?<v@?@"NSXPCListenerEndpoint"@"NSError">24
v28@0:8@"NSOperation"16i24
v24@0:8@?<v@?@"NSOperation"^B>16
@"CloudServerOptions"24@0:8@"ICConnectionConfiguration"16
@"<ICDAccountManaging>"16@0:8
@"<ICDHandlerCoordinating>"16@0:8
@"<ICDBackgroundTaskManaging>"16@0:8
v28@0:8@16i24
v32@0:8@"MRAVClusterController"16Q24
v32@0:8@16Q24
@"BaseRequestHandler"40@0:8q16@"ICConnectionConfiguration"24^@32
@40@0:8q16@24^@32
v32@0:8q16@"ICConnectionConfiguration"24
v24@0:8@"ICDServerNotificationsManager"16
v32@0:8@"ICDServerNotificationsManager"16@"NSNotification"24
v48@0:8@16@24@32^v40
v28@0:8B16@20
q20@0:8I16
q28@0:8I16^B20
v28@0:8I16@20
v24@0:8@"ICConnectionConfiguration"16
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError"B>24
v48@0:8@"ICConnectionConfiguration"16B24q28B36@?<v@?@"NSError">40
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError">24
v32@0:8q16@?<v@?@"NSError">24
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?B@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?BB>24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError"f>24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8Q16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8Q16@"ICConnectionConfiguration"24
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSError"@"NSArray">32
v40@0:8Q16@"ICConnectionConfiguration"24@?<v@?@"NSArray"@"NSError">32
v64@0:8q16@"NSString"24@"NSArray"32@"NSArray"40@"ICConnectionConfiguration"48@?<v@?Q@"NSError">56
v56@0:8q16@"NSDictionary"24@"ICCloudItemIDList"32@"ICConnectionConfiguration"40@?<v@?Q@"NSError">48
v56@0:8@"NSDictionary"16@"ICCloudItemIDList"24q32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v56@0:8q16@"ICCloudAddReferral"24q32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v48@0:8q16q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v48@0:8@"NSString"16q24@"ICConnectionConfiguration"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?@"NSString"@"NSString"@"NSError">32
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v44@0:8@"NSArray"16B24@"ICConnectionConfiguration"28@?<v@?@"NSError">36
v48@0:8q16@"ICCloudAddReferral"24@"ICConnectionConfiguration"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8@"NSString"16@"ICConnectionConfiguration"24@?<v@?@"NSDictionary"@"NSError">32
v48@0:8@"NSDictionary"16Q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v48@0:8@"NSDictionary"16q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v32@0:8@"ICConnectionConfiguration"16@?<v@?B@"NSError">24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSURL"@"NSError">24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSString"16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?q@"NSError">24
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSArray"@"NSError">32
v32@0:8Q16@24
v64@0:8q16@24@32@40@48@?56
v56@0:8@16@24q32@40@?48
v56@0:8q16@24q32@40@?48
v48@0:8q16q24@32@?40
v44@0:8@16B24@28@?36
B20@0:8I16
@"MSVWatchdog"
@"DetermineArtistStoreIDLookupTypeOperation"
@"CloudArtworkImporter"
v40@0:8q16q24@?32
@48@0:8@16@24@32@40
v36@0:8@16B24@28
v28@0:8@16B24
@36@0:8I16@20C28B32
@32@0:8@16C24B28
@44@0:8I16@20@28@36
@"<ICDJaliscoSupportedMediaKindsHandler>"
@"ICMusicLibraryContentMetadataDescriptor"
@"NSSet"
@24@0:8^{_NSZone=}16
v40@0:8d16@24@?32
v48@0:8@16d24@32@?40
{?="list"^f"count"Q"size"Q}
^f16@0:8
f24@0:8Q16
v32@0:8^f16Q24
@"NSMutableSet"
d16@0:8
@"CloudPendingChangesCoordinator"
@"NSObject<OS_dispatch_group>"
v32@0:8@?16B24B28
@?16@0:8
@36@0:8@16I24@28
@"SagaLibrary"
@"SagaArtworkImporter"
@"CloudUpdateLibraryOperation"
@"<ICDCloudMusicLibrarySagaUpdateTaskHelper>"
v24@0:8d16
B24@0:8^B16
v36@0:8@16i24@?28
@"NSError"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@36@0:8@16B24q28
@48@0:8@16@24B32q36B44
@28@0:8Q16I24
@36@0:8@16Q24I32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v40@0:8@16@24@32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
@"<ICDHandlerProviding>"
v44@0:8q16B24@28@?36
{?="shouldIgnoreDeveloperTokenCache"b1"shouldIgnoreUserTokenCache"b1}
@"NSXPCListener"
v32@0:8@"ICMusicSubscriptionStatusRequest"16@"NSUUID"24
@"ICContentTastePendingChangesCoordinator"
v36@0:8q16B24@?28
v36@0:8@16B24@?28
@"<ICDCloudMusicLibraryJaliscoUpdateTaskHelper>"
@"JaliscoLibrary"
@"JaliscoUpdateGeniusDataOperation"
@"JaliscoArtworkImporter"
@"JaliscoMediaUpdateOperation"
@"ICAppleMusicAPITokenError"
@"ICAppleMusicAPITokenCollection"
B24@0:8q16
B32@0:8q16q24
@"NSData"
@56@0:8Q16@24@32@40@48
@"ICDAccountManagerState"
@40@0:8@16@24q32
@32@0:8I16Q20I28
@56@0:8q16q24q32@40@48
@40@0:8@16q24@32
@"ICStoreRequestContext"
@"AMPMusicArtistNewContentResponse"
v32@0:8I16I20@?24
{?="adamId"b1}
@"ICMusicLibraryArtistAffinityAnalyzer"
I24@0:8@16
v36@0:8@16I24q28
@40@0:8I16@20@28B36
@36@0:8@16@24B32
@"ICURLRequest"
@64@0:8@16@24Q32@40q48q56
@32@0:8@16^@24
@"ICPlayActivityController"
v48@0:8@16Q24Q32@?40
v48@0:8Q16@24@32@?40
v44@0:8@16Q24B32@?36
@32@0:8@16d24
B24@0:8d16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v48@0:8Q16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v44@0:8@"NSString"16Q24B32@?<v@?@"NSArray"Q@"NSError">36
v32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v48@0:8@"NSArray"16Q24Q32@?<v@?@"NSError">40
@"JaliscoLoadBooksOperation"
@"ICBook"
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v56@0:8@16@24@32@40@48
@40@0:8@16@24#32
{?="code"b1"phase"b1}
i16@0:8
v20@0:8i16
@40@0:8i16i20@24@32
@48@0:8@16@24@32q40
{?="adamId"b1"canonicalId"b1"releaseDate"b1"contentType"b1"isExplicit"b1}
@20@0:8i16
i24@0:8@16
@32@0:8q16@"<ICDBackgroundTaskScheduling>"24
v24@0:8@"ICDAccountManagerStateChange"16
v32@0:8@"ICDAccountManagerState"16@?<v@?@"BaseRequestHandler">24
v32@0:8q16@"ICDAccountManagerStateChange"24
@32@0:8@16q24
v52@0:8@16@24@32I40@44
@40@0:8@16d24@32
@48@0:8@16@24d32@40
v32@0:8@"ICRemoteRequestOperationExecutionContext"16@?<v@?@"ICRemoteRequestOperationExecutionResponse">24
@"JaliscoImporter"
I20@0:8I16
@48@0:8I16I20@24@32@40
@"ICDJaliscoMediaFilter"
v48@0:8@16q24q32@?40
@40@0:8@16q24q32
@32@0:8q16q24
@48@0:8@16q24q32q40
@48@0:8@16q24q32@40
@"CloudArtworkOperationQueue"
@"MPMediaDownloadManager"
v40@0:8@"MPMediaDownloadManager"16@"NSArray"24@"NSArray"32
v32@0:8@"MPMediaDownloadManager"16@"NSArray"24
v40@0:8@"MPMediaDownloadManager"16@"NSArray"24@"NSError"32
v56@0:8Q16q24@32I40B44@?48
v32@0:8Q16q24
@"ICDCloudPushNotificationRegistrationState"
@"AMSPushHandler"
@"APSConnection"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v48@0:8@16@24@32@40
@60@0:8I16@20@28@36B44B48@52
@56@0:8@16@24@32B40B44@48
@48@0:8I16@20@28@36B44
@52@0:8I16@20@28@36B44B48
@28@0:8I16I20C24
@24@0:8I16C20
@32@0:8@16@?24
Q48@0:8r*16Q24^{?=I*Qq}32Q40
v40@0:8r*16Q24@?32
Q32@0:8r*16Q24
@44@0:8I16r*20Q28@?36
@32@0:8r*16Q24
@40@0:8r*16Q24@?32
@36@0:8r*16I24@?28
@"IDSService"
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
@"NSMapTable"
v24@0:8B16B20
v40@0:8r*16@24@32
v24@0:8r*16
v32@0:8r*16B24B28
@20@0:8B16
@"SagaImporter"
@"ICStoreURLRequest"
@40@0:8@16d24o^q32
@"ACAccountStore"
@"ICDAccountManagerStateChange"
@"NSArray"16@0:8
@"ICConnectionConfiguration"16@0:8
@"ICDAccountManagerState"16@0:8
@"ICDAccountManagerStateChange"16@0:8
@"ICCloudContentTasteUpdateItem"
@"ICCloudContentTasteUpdateResponse"
@44@0:8@16B24@28@36
v40@0:8^@16^@24@32
@44@0:8@16@24Q32B40
v32@0:8^@16^@24
@36@0:8@16B24@28
v48@0:8^@16^@24@32@40
@28@0:8@16I24
@"MLModel"
@"NSXPCConnection"
@"ICDPrivacyPromptOperation"
@"ICURLBag"
@"ICUserIdentityProperties"
@"ICMusicSubscriptionStatusResponse"
v40@0:8@16q24@32
v64@0:8q16q24q32@40@48@?56
v36@0:8B16@20@?28
v64@0:8q16q24q32@"ICConnectionConfiguration"40@"NSDate"48@?<v@?@"NSError">56
v48@0:8q16@"NSString"24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v36@0:8B16@"ICConnectionConfiguration"20@?<v@?@"NSError">28
@32@0:8Q16q24
@40@0:8@16Q24q32
@"CloudArtistHeroImageImporter"
@68@0:8I16I20q24q32@40I48q52@60
@60@0:8I16q20q28@36q44@52
@48@0:8I16I20q24q32@40
@52@0:8I16I20q24I32q36@44
@36@0:8I16I20q24I32
@48@0:8@16I24I28@32@40
@44@0:8I16I20@24@32I40
@32@0:8@"<ICDAccountManaging>"16@"<ICDHandlerCoordinating>"24
ICDCloudMusicLibraryProgressUpdateOperationStatusKey
ICDCloudMusicLibraryProgressPermanentFailureTypeKey
ICDCloudMusicLibraryProgressTemporaryFialureTypeKey
ICDCloudMusicLibraryProgressRequestReasonKey
ICDCloudMusicLibraryProgressWasInitialImportKey
ICDCloudMusicLibraryProgressWasExplicitUserActionKey
CloudLibraryStateReasonKey
EnableCloudLibraryFailureReasonKey
AutoEnableCloudLibraryFailureReasonKey
AppleMusicSubscriptionStatusCheckFailureKey
MatchSubscriptionStatusCheckFailureKey
ICDCloudLibrarySagaLibraryUpdateErrorKey
ICDCloudLibraryJaliscoLibraryUpdateErrorKey
Jalisco
Unknown
Saga
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.sagaDeauthenticateOperation
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.cloudAuthenticateOperation
Invalid State - We already have a valid SagaRequestHandler
SagaAuthenticateOperation can only return CloudLibraryOperationStatusSuccess OR CloudLibraryOperationStatusPermanentlyFailed
ICDCloudMusicLibraryRequestHandler.m
v16@?0@"CloudAuthenticateOperation"8
v20@?0@"NSError"8B16
com.apple.mobileipod
UserRequestedSubscriptionHidden
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.jaliscoDeauthenticateOperation
com.apple.amp.itunescloudd.JaliscoRequestHandler.%@.deauthenticate
ICDCloudLibrarySyncProgressKey
ICDCloudLibraryIsInitialImportKey
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.accessQueue
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.calloutQueue
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.retryQueue
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.operationQueue
update
%@ %@
userToken
<redacted>
developerToken
POST
JaliscoSetItemPropertyOperation - (purchase_history_id = %llu)
JaliscoSetItemPropertyOperationPropertiesKey
JaliscoSetItemPropertyOperationPurchaseHistoryIDKey
com.apple.Music
PlaybackIntent.Explicit
PlaybackIntent
JaliscoDeauthenticateOperation
SagaCreatePlaylistOperation - (playlist persistent-id = %lld)
SagaCreatePlaylistOperationTrackListKey
SagaCreatePlaylistOperationProperties
SagaCreatePlaylistOperationPlaylistPersistentIDKey
SagaSDKCreatePlaylistOperationRequestingBundleKey
databases/%u/edit
com.apple.itunescloudd.%@
com.apple.itunescloud.daemon.internal
com.apple.itunescloud.daemon
ICDDefaultsKeyPendingBackgroundTasksData
ICDDefaultsKeyKnownActiveAccountDSID
ICDDefaultsKeyKnowAccountDSIDs
%@ %p [dsid=%@]
-init is not supported, use handlerForConfiguration: or initWithConfiguration:
Implement this class property in subclasses supporting accountless handling
Implement this class property in subclasses
com.apple.%@.global.serial.queue
MLAutoEnableICML
MLActiveAccountDSID
MLEnableICMLConfig
DELETE FROM artwork_token WHERE artwork_source_type=%d AND entity_pid
MLArtistHeroImageImportDate
SELECT COUNT() FROM artwork_token WHERE artwork_type = ? AND artwork_token LIKE '%%0x0%%'
UPDATE container SET is_src_remote = 2 WHERE cloud_is_subscribed AND is_src_remote = 0
UPDATE item_store SET store_item_id = ? WHERE item_pid IN (SELECT item_pid FROM item_extra WHERE location = ?)
mediaAssetFilename
com.apple.iTunesStore.downloadInfo
itemId
.plist
/var/mobile/Media/Purchases
MLResetCollectionsOnNextImport
iTunes_Control/iTunes/LatestCloudPlayDataChangesDate.plist
iTunes_Control/iTunes/LatestCloudSkipCountChanges.plist
iTunes_Control/iTunes/LatestCloudPlayDateChanges.plist
iTunes_Control/iTunes/LatestCloudPlayCountChanges.plist
MLCloudNeedsContainerRefetch
MPModelPropertySongUserRating
/System/Library/PrivateFrameworks/MediaPlayer.framework/MediaPlayer
MPModelPropertySongLibraryAddedDate
MPModelPropertySongLastDevicePlaybackDate
MPModelPropertySongSkipCount
MPModelPropertySongPlayCount
MPModelPropertySongTitle
MPModelPropertyAlbumTitle
MPModelRelationshipSongAlbum
MPModelPropertyArtistName
MPPropertySet
MPModelRelationshipSongArtist
%llu
v24@?0@"MPModelLibraryResponse"8@"NSError"16
v32@?0@8@"NSIndexPath"16^B24
MPModelSong
LibraryRecommendationArtistAffinity
MPModelLibraryRequest
-[ICMusicLibraryArtistAffinityAnalyzer createFeatureProviderDictionaryFromNewContentResponse:withLibraryArtistSnapshots:]
ICMusicLibraryArtistAffinityAnalyzer.m
releaseIx.count == daysWithAdds.count
releaseIx.count == albumCount.count
releaseIx.count == playCount.count
releaseIx.count == daysSinceLastPlay.count
releaseIx.count == playsPerItem.count
release_ix
plays_per_item
days_since_last_play
num_plays
num_albums
days_with_adds
persistent-id
kind
has-subscription-drm
item-name
item-id
playlist-name
playlist-id
playlist-artist-name
playlist-artist-id
artist-name
artist-id
composer-name
composer-id
genre-name
genre-id
compilation
year
duration
track-number
track-count
disc-number
disc-count
store-front-id
added-date
modified-date
purchased-date
released-date
copyright
last-played-date
has-been-played
play-count
skip-count
user-rating
album-rating
item-checked
comment
has-lyrics
lacks-cover-art
cloud-only
beats-per-minute
filename
size
sample-rate
bit-rate
format
audio-codec
audio-codec-sub-type
gapless-heuristic
gapless-encoding-drain
gapless-encoding-delay
gapless-duration
gapless-frame-resynch
normalized-volume
playlist-sort-order
playlist-sort-reversed
description
parent-id
playlist-global-id
items
data
genius-seed-tracks
contentFilter
smartInfo
isDefaultSmartPlaylist
external-vendor-identifier
external-vendor-display-name
external-vendor-container-tag
v32@?0@"NSString"8@16^B24
databases/%u/containers/edit
subscribed-containers.daap
com.apple.MediaServices
connection
Invalid parameter not satisfying: %@
SagaSubscribedPlaylistUpdater.m
ICDServerNotificationsManagerFamilyEventKey
ICDServerNotificationsManagerIsApplicationRegistrationKey
ICDServerNotificationsManagerApplicationRegistrationBundleIDsKey
UserInfo
pairs
B24@?0Q8@"NSObject<OS_xpc_object>"16
bundleIDs
isPlaceholder
com.apple.purplebuddy.setupdone
com.apple.itunesstored.autodownloaddefaultschange
com.apple.mobileipod.libraryimportdidfinish
com.apple.itunesstored.accountschanged
com.apple.LaunchServices.applicationUnregistered
com.apple.LaunchServices.applicationRegistered
MPRestrictionsMonitorAllowsExplicitContentDidChangeNotification
CloudAuthenticateOperation
v32@?0@"NSUUID"8@"NSXPCConnection"16^B24
%@: Either storefrontIdentifier or error are expected to be non-nil at this point.
ICDCloudServiceStatusMonitor.m
%@: Either storefrontCountryCode or finalError are expected to be non-nil at this point.
Found nil storefront identifier from local store account.
v16@?0@"ICURLBag"8
v32@?0@"ICDCloudServiceCapabilitiesRequestOperation"8Q16^B24
Failed to fetch developer token.
Both requestingApplicationBundleIdentifier and error are nil. This is unexpected.
Client is not allowed to request MusicKit tokens.
Client is not allowed to request user token.
Client is not allowed to request developer token.
Client is not allowed to request storefront identifier.
Client is not allowed to request storefront country code.
Client is not allowed to request cloud service capabilities.
application-identifier
Failed to retrieve bundle identifier of the requesting application. The requesting application is likely missing the "%@" entitlement.
com.apple.itunesstored.privacy-acknowledged
databases/%u/extra_data/cloud-lyrics-info
JaliscoImporterErrorDomain
revision-id
delta
includeItemFlavors
items.daap
JaliscoImporter.m
JaliscoImporter
Subclass %@ must implement -%@ defined in %@.
SagaPublishPlaylistOperation - (playlist cloud id = %llu)
com.apple.itunescloudd.usernotifications
music-notification-default
ETag
v32@?0q8Q16^B24
%@ - (item count = %lu)
CloudIDs must be an array!
CloudLoadBulkArtworkInfoOperation.m
v40@?0Q8q16Q24^B32
v32@?0@"NSNumber"8@"NSMutableArray"16^B24
com.apple.itunescloudd.CloudArtworkOperation.bulkArtworkInfoOperation
Failed to resolve artwork URL for %@ ID: %@
container cloud (subscription)
cloud (subscription)
container cloud
cloud
purchase history
Unknown sourceType/artworkType pair for CloudArtworkOperationQueue addOperations: %ld/%@
CloudArtworkOperationQueue.m
v32@?0@"CloudArtworkImportOperation"8Q16^B24
Only operations of type CloudArtworkImportOperation are supported
Unknown sourceType for CloudArtworkOperationQueue addOperations: %ld
SagaCreateGeniusPlaylistOperation - (playlist_persistent_id  = %lld / playlist_name = %@)
SagaAddPlaylistOperationPlaylistItemIDsKey
SagaAddPlaylistOperationPlaylistSeedItemIDsKey
SagaAddPlaylistOperationPlaylistNameKey
SagaAddPlaylistOperationPlaylistPersistentIDKey
com.apple.airplay.prefsChanged
cloudLibraryIsOn
isAppleMusicSubscriber
com.apple.airplay
v16@?0@"ICRequestContext"8
EnhancedAudioAvailable
com.apple.itunescloud.subscription_status_refresh
MediaPlayer
Oasis
v24@?0@"ICMediaAPIURLMappingSet"8@"NSError"16
com.apple.itunescloudd.enhancedAudioSharedKeyRefreshOperation
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
_loadICMLForSecondaryAccountsStateOnAppleTVWithOutputDeviceConfiguration is only valid for AppleTV.
ICDServer.m
_secondaryAccountsCloudLibraryLoadingStateWithClusterType: is only valid for AppleTV.
Music
MusicNS
AppleMusicDisabled
AppleMusicUndecided
AppleMusicSubscriber
p2-url-section-name
p2-url-resolution
com.apple.itunesstored.changed-url-resolution
Library/Caches/com.apple.itunesstored/url-resolution.plist
vpp-licensing-invitation-url-pattern
p2-launch-mobilestore-path-patterns
p2-launch-mobilestore-host-patterns
p2-launch-ebookstore-path-patterns
p2-launch-ebookstore-host-patterns
p2-launch-appstore-path-patterns
p2-launch-appstore-host-patterns
p2-launch-apple-store-path-patterns
p2-launch-apple-store-host-patterns
p2-launch-host-suffix-whitelist
v32@?0@"ICConnectionConfiguration"8Q16^B24
uninstalled
installed
com.apple.itunescloudd.CloudServer.keyRefreshOperation
com.apple.itunescloudd.setParentalControlRequestOperation
MLLastUploadedExplicitContentAllowedBoolean
MPRestrictionsMonitor
MPMediaQuery
com.apple.itunescloud.setupcompleted
MPCPlaybackPrivateListeningEnabled
MPStoreDownloadManager
com.apple.itunescloudd.ICDServer.serial.queue
com.apple.itunescloudd.ICDServer.startup.queue
com.apple.itunescloudd.ICDServer.internal.operation.queue
com.apple.itunesstored
AllowAutoDownloadOnCellular
unknown
v32@?0@"NSString"8@"NSXPCListener"16^B24
We should never get here
com.apple.itunescloudd.xpc
ICCloudServiceErrorDomain
Unable to get an anonymous listener for %@[%ld] - This usually indicates an attempt to access itunescloudd without the proper entitlements.
Listen to ICActiveUserIdentityDidChangeNotification and either update ICCloudClient with the new active account or recreate it
An ICCloudClient (or HSCloudClient) instance is using a signed-out user identity.
Attempting to retrieve handler for an unsupported configuration
Attempting to retrieve handler for an unsupported configuration [dsid=%@]
com.apple.itunescloudd.launched
Q8@?0
iTunesCloudService State
^v24@?0^{os_state_hints_s=I*II}8@?<^v@?@"NSDictionary">16
com.apple.mediaplaybackcore
SELECT DISTINCT (fetchable_artwork_token), purchase_history_id, media_type FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN item_store ON entity_pid = item_store.item_pid AND entity_type = 0 JOIN item USING (item_pid) WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
No purchase_history_screenshot_token for purchase_history_id = %llu
No purchase_history_artwork_token for purchase_history_id = %llu
v16@?0@"ML3DatabaseConnection"8
SELECT fetchable_artwork_token, store_id FROM best_artwork_token JOIN album_artist ON entity_pid = album_artist_pid AND entity_type = ? WHERE entity_pid = ?
SELECT fetchable_artwork_token, store_id FROM best_artwork_token JOIN item_artist ON entity_pid = item_artist_pid AND entity_type = ? WHERE entity_pid = ?
min-artist-update-polling-frequency-secs
operationCount
SELECT store_id FROM album_artist LEFT OUTER JOIN artwork_token ON album_artist_pid = entity_pid AND entity_type = ? AND artwork_type = ? AND artwork_source_type = ? WHERE store_id != 0
SELECT store_id FROM item_artist LEFT OUTER JOIN artwork_token ON item_artist_pid = entity_pid AND entity_type = ? AND artwork_type = ? AND artwork_source_type = ? WHERE store_id != 0
v32@?0@"NSNumber"8@"NSString"16^B24
SELECT DISTINCT (fetchable_artwork_token), store_id FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token LEFT OUTER JOIN album_artist ON album_artist_pid = entity_pid WHERE artwork_token IS NULL AND entity_type = ? AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
SELECT DISTINCT (fetchable_artwork_token), store_id FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token LEFT OUTER JOIN item_artist ON item_artist_pid = entity_pid WHERE artwork_token IS NULL AND entity_type = ? AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
v32@?0@"NSArray"8Q16^B24
v24@?0@"<ICStorePlatformResponse>"8@"NSError"16
artwork
v24@?0@"NSString"8^B16
AllArtistImagesMapDataDictionaryKey
AllArtistImagesMapNextUpdateDateKey
required-fields
artist
update-interval-seconds
all-artist-images-map-url
an-batch-size
artist-image-match-bulk-url
library-match-rules
v48@?0q8q16i24i28q32^B40
MLArtistHeroImageImportDatabaseRevision
com.apple.itunescloudd.cloudartistheroimageimporter.accessqueue
com.apple.itunescloudd.cloudartistheroimageimporter
com.apple.itunescloudd.cloudartistheroimageimporter.operationqueue
allArtistImagesMap.plist
ContentTastePendingChangesCoordinatorContentTasteItemKey
ContentTastePendingChangesCoordinatorInvalidateCacheKey
ContentTastePendingChangesCoordinatorPendingChangesKey
ContentTastePendingChangesCoordinatorOperationIdentifierKey
%@.plist
com.apple.itunescloudd.contenttastependingchanges.%ld
%lu-ContentTastePendingChanges
noDSID
(%@)
'%@:%d'
com.apple.itunes.extended-media-kind
databases/%u/extra_data/cloud-artwork-info
ICDServerOperationsManagerOperationNamesKey
ICDServerOperationsManagerBackgroundOperationNamesKey
com.apple.itunescloudd.ICDServerOperationsManager.serial.queue
com.apple.itunescloudd.ICDServerOperationsManager.backgroundOperationQueue
com.apple.itunescloudd.ICDServerOperationsManager.operationQueue
SBSSetStatusBarShowsActivityForApplication
SpringBoardServices
name=%@, object=%p
geniusSeedTrackIDs
dmap.itemid
, lastPlayedDate: %@
%@ - %@ - %@, playCount: %ld
v24@?0@"ICConnectionConfiguration"8^B16
v32@?0@"<ICDManageableAccount>"8Q16^B24
[no supported dsids]
[supported dsids=%@]
[no active dsid]
[active dsid=%@]
ICDAccountManagerState %p:
SSURLConnectionRequestGeniusAdditionsErrorDomain
server-status-code
SSURLConnectionRequest+GeniusAdditions
retry-in-ms
status
value
idx (%lu) is out of range (%lu)
Artist: %@: Score: %f, artistID: %lld, cumulativePlayCount: %ld, cumulativeSkipCount: %ld, playsPerItem: %f, uniqueAlbums: %lu, uniqueSongs: %lu, daysWithAdds: %lu, daysSinceLastPlay: %ld
v24@?0@"NSOperation"8^B16
Connecting to cloud library
base-url
v16@?0@"CloudLibraryConnection"8
%@ Ensure Connection
CloudLibrary has no bag key
v16@?0@"NSOperation"8
com.apple.itunescloudd.asyncrequests
com.apple.itunescloudd.%@.connection
I'm abstract, please instantiate a subclass.
CloudLibrary
CloudLibrary.m
SagaSetItemPropertyOperation - (saga_id = %u)
SagaSetItemPropertyOperationPropertiesKey
SagaSetItemPropertyOperationSagaIDKey
com.apple.itunescloudd.sagaUpdateInProgressChanged
com.apple.itunescloudd.SagaRequestHandler.updateLibraryOperation
com.apple.itunescloudd.SagaRequestHandler.setItemPropertyOperation
daap.songdateadded
daap.incrementskipcount
daap.incrementplaycount
com.apple.itunescloudd.SagaRequestHandler.getGeniusItemsOperation
NSDebugDescription
No saga artwork_token for screenshot item with persistent-id = %lld
com.apple.itunescloudd.SagaRequestHandler.loadArtworkInfoOperation
com.apple.itunescloudd.SagaRequestHandler.setAlbumPropertiesOperation
com.apple.itunescloudd.SagaRequestHandler.setAddToPlaylistBehaviorOperation
com.apple.itunescloudd.SagaRequestHandler.cloudAddOperation
com.apple.itunescloudd.SagaRequestHandler.updateSubscribedPlaylistsOperation
com.apple.itunescloudd.SagaRequestHandler.uploadPlaylistArtworkOperation
com.apple.itunescloudd.SagaRequestHandler.removePlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.removeItemOperation
com.apple.itunescloudd.SagaRequestHandler.publishPlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.updatePlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.addItemToPlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.createGeniusPlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.createPlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.uploadPlayDataOperation
MSVDeviceSupportsMultipleLibraries()
SagaRequestHandler.m
com.apple.itunescloudd.calloutQueue
com.apple.itunescloudd.sagaUpdateLibraryQueue
com.apple.itunescloudd.sagaUploadPlaylistPropertiesQueue
com.apple.itunescloudd.sagaUploadItemPropertiesQueue
@"NSString"16@?0@"NSString"8
-init is not supported, use +handler
%@ %p
configuration
CloudLibraryOperationStatusPending
CloudLibraryOperationStatusSuccess
CloudLibraryOperationStatusFailed
CloudLibraryOperationStatusPermanentlyFailed
CloudLibraryOperationStatusCancelled
Unknown Cloud Library Operation Status
SagaUpdateSubscribedPlaylistsOperation - (saga_id count = %llu)
SagaGetGeniusItemsOperation - (seed_id = %llu)
GeniusAdditionalFieldsData-Jalisco
com.apple.itunescloudd
GeniusSimData-Jalisco
song
%llx
match-id
tracks
INSERT OR REPLACE INTO genius_similarities (genius_id, data) VALUES (?, ?);
INSERT OR REPLACE INTO genius_metadata (genius_id, data) VALUES (?, ?);
INSERT OR REPLACE INTO genius_config (data, version, id, default_num_results, min_num_results) VALUES (?, ?, 0, 25, 2);
v40@?0@"NSURLSessionDownloadTask"8@"NSURL"16@"NSURLResponse"24@"NSError"32
User-Agent
additional-fields-url
sim-url
determineResultsURL
v32@?0@"ICURLResponse"8@"NSDictionary"16@"NSError"24
library-update-check
incremental
auto-update
update-id
cuid
persistent-library-id
%08X%08X
determineUploadURL
library-update-request
num-tracks
JaliscoUpdateGeniusDataOperation
v24@?0B8B12B16B20
Artist images are not supported on this device.
loadBooksForStoreIDs: - Invalid user identity [missing DSID] - userIdentity=%@
v24@?0@"NSURL"8@"NSError"16
update-polling-frequency-secs
update-on-app-focus-enabled
v24@?0Q8@"NSError"16
Missing add to library capabilities in %ld
v24@?0@"NSNumber"8@"NSError"16
v32@?0@"NSString"8@"NSString"16@"NSError"24
subscribed-container-polling-frequency-secs
auto-update-polling-frequency-secs
com.apple.iTunesCloud.CloudService.operationQueue
shouldIgnoreDeveloperTokenCache
shouldIgnoreUserTokenCache
bagProfileVersion
bagProfile
clientVersion
clientIdentifier
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
min-compatible-version
protocol-version
body.plist
Content-Encoding
gzip
Content-Type
application/x-apple-plist
ICStoreURLRequest *_CloudGeniusUtilitiesCreatePostRequest(NSURL *__strong, NSString *__strong, NSTimeInterval, NSInteger, NSMutableDictionary *__strong, BOOL, BOOL)
Must provide either a URL or a URL Bag Key
CloudGeniusUtilities.m
com.apple.itunescloudd.CloudMusicSubscriptionStatusServiceListener.accessQueue
ICContentTasteRequestHandlerRetryTaskIdentifier
PostPendingContentTasteChanges
content taste change to post cannot be nil
ICContentTasteRequestHandler.m
MediaContentTasteResponseExpirationTimeKey
ICContentTasteRequestHandlerUpdateTaskIdentifier
ICContentTasteRequestHandlerPushTaskIdentifier
ICContentTasteRequestHandlerResponseExpiredTaskIdentifier
%@.operationQueue
%@.queue
%@.default
com.apple.amp.iTunesCloud.ICContentTasteRequestHandler-%lu
com.apple.itunescloudd.JaliscoRequestHandler.loadBooksOperation
com.apple.itunescloudd.JaliscoRequestHandler.genniusOptOutOperation
com.apple.itunescloudd.JaliscoRequestHandler.disableJaliscoGenius
ICGeniusOperationStatusNotRunning
ICGeniusOperationStatusOperationEnqueued
ICGeniusOperationStatusVerifyingOperation
ICGeniusOperationStatusPreparingLibraryForUpload
ICGeniusOperationStatusUploadingLibrary
ICGeniusOperationStatusWaitingForResults
ICGeniusOperationStatusDownloadingResults
ICGeniusOperationStatusImportingResults
ICGeniusOperationStatusComplete
genius-learn-more-url
ios-library-update-accepting-requests
JaliscoRequestHandler.m
No purchase history artwork_token for screenshot item with persistent-id = %lld
com.apple.itunescloudd.JaliscoRequestHandler.loadArtworkInfoOperation
com.apple.itunescloudd.JaliscoRequestHandler.setItemPropertyOperation
com.apple.itunescloudd.JaliscoRequestHandler.hideItemOperation
com.apple.itunescloudd.jaliscoUpdateInProgressChanged
com.apple.itunescloudd.JaliscoRequestHandler.updateLibraryOperation
Unable update library [no DSID on user identity] - userIdentity=%@ - properties=%@
JaliscoDisabled
com.apple.homesharing
com.apple.itunescloudd.JaliscoRequestHandler.updateLibraryQueue
com.apple.itunescloudd.JaliscoRequestHandler.calloutQueue
com.apple.itunescloudd.jaliscoGeniusDownloadQueue
error
tokenCollection
TCC not granted
 [%ld]: %ld bytes (%@)
ICDAccountManagerStateChange %p: %@ -> %@ - [active changed=%u] [supported changed=%u]
dmap.longitemid
num-items
seed-id
databases/%u/getgeniusitems
genius-opt-out
void _MSVHasher_SipHash_1_3_Append64(MSVHasherSipHash_1_3 *, uint64_t)
void _MSVHasherAppend64(MSVHasher * _Nonnull, uint64_t)
NSUInteger _MSVHashGetHash(MSVHash)
Cannot obtain hash from unknown hasher algorithm
Cannot finalize unknown hasher algorithm
Cannot append to unknown hasher algorithm
MSVHasher+Algorithms.h
_MSVHasher_SipHash_1_3_Append64: invalid byte count detected [byteCount & 3]: %lld
_MSVHasher_SipHash_1_3_Append64: invalid byte count detected [byteCount & 7, tail == 0]: %lld
MSVHasher+SipHash.h
_ICCloudContentTasteUpdateItemCodingKeyItemTypeKey
_ICCloudContentTasteUpdateItemCodingKeyTasteTypeKey
_ICCloudContentTasteUpdateItemCodingKeyStoreIDKey
_ICCloudContentTasteUpdateItemCodingKeyDSIDKey
_ICCloudContentTasteUpdateItemCodingKeyTimeStampKey
_ICCloudContentTasteUpdateItemCodingKeyGlobalPlaylistIDKey
ICCloudContentTasteUpdateItem (%p) storeID=%lld, DSID=%lld, globalPlaylistID=%@, contentTasteType=%ld, contentTasteItem=%ld, updateTimeStamp=%@
SagaImporterErrorDomain
com.apple.itunescloudd.SagaImporter.loadLyricsOperation
v36@?0@"NSString"8q16B24q28
v12@?0f8
daap.playlistsongs
meta
items_%u.daap
containers.daap
SagaImporter.m
text-url
dmap.dictionary
com.apple.itunescloudd.SagaLoadLyricsOperation
SagaLoadLyricsOperation-bulk (item count = %llu)
databases/%u/subscribed-containers
SagaUpdatePlaylistOperation - (playlist_persistent_id = %lld)
SagaUpdatePlaylistOperationTrackListKey
SagaUpdatePlaylistOperationProperties
SagaUpdatePlaylistOperationPlaylistPersistentIDKey
SagaUpdatePlaylistOperationArchiveVersionKey
SagaUpdatePlaylistOperationcloudItemIDListKey
SagaUpdatePlaylistOperationItemSagaIDsKey
SagaRemovePlaylistOperation - (saga_id count = %llu)
SagaRemovePlaylistOperationPlaylistSagaIDsKey
SagaRemovePlaylistOperationArchiveVersionKey
SagaRemovePlaylistOperationPlaylistSagaIDKey
SyncResponse-%llu
com.apple.amp.iTunesCloud.ICCloudContentTasteResponseCacheManager.accessQueue
Library/Caches/com.apple.itunescloud/MediaContentTaste
-init is not supported, use sharedCloudContentTasteResponseCacheManager
SagaUploadItemPlayDataOperation
catalogContent
name
adamId
serializedRecommendationsResponse
modelDataBlob.bin
compiledMLModel.mlmodelc
com.apple.itunescloud.library_recommendations_refresh
min-refresh-freq-in-seconds
com.apple.itunescloudd.ICMusicLibraryRecommendationsHandleNewArtistContentResponseNotification
com.apple.itunescloudd.ICMusicLibraryRecommendationsClearCacheNotification
ICMusicLibraryRecommendationsHandleNewArtistContentFilePath
musicRecommendationsData
matchedAdamIDs
Library_Recommendation
non-subscriber-notification-content-opt-in
com.apple.amp.inappmessages.private
NonSubsNewContentRelease
notificationSubtype
platformName
platformId
language
isExplicit
notificationRequest
en_US_POSIX
yyyy-MM-dd'T'HH:mm:ssZ
_bid
ams_%@
false
true
content-available
button
AmpMusic.Notifications.NewRelease.Buttons.GoToAlbum
targetId
goToAlbum
NEW_ALBUM_NOTIFICATION_GOTO_BUTTON_TITLE
details
Content
notificationType
xp_amp_notifications
topic
recoId
notification
targetType
notificationId
eventVersion
notificationAction
eventType
actionUrl
actionType
https://itunes.apple.com/album/id%lld?itsct=NonSubsNewContentRelease&itscg=10100
_url
alert
body
title
NEW_ALBUM_NOTIFICATION_BODY_FORMAT
NEW_ALBUM_NOTIFICATION_TITLE
v24@?0@"ICInAppMessageEntry"8@"NSError"16
non-subscriber-opt-in-message
artistName
albumTitle
album-lockup
v24@?0@"ICStorePlatformResponse"8@"NSError"16
MLMediaLibraryService
ML3MutableDatabaseImport
ML3MusicLibrary
ML3StoreItemTrackData
banner
impressions
close-button
LibraryContentBannerNonsubscriber
click
album-detail-segue
explicitContent
subscription-status-context
is-explicit-rule
isExplicitContent
optin-context
isOptedInToNewArtistContent
detail-event
eventType:page|pageId:%lld
page-detail-rule
Caches/com.apple.iTunesCloud/LibraryRecommendations/ResourceCache
v24@?0@"AMPMusicArtistNewContentResponse"8@"NSError"16
propertyKey
v16@?0@"NSMutableDictionary"8
thresholded_score
v16@?0@"ICMusicLibraryRecommendationResult"8
v16@?0@"AMPMusicArtistNewContentResponse"8
v24@?0@"ICMusicAccountNotificationsSettingsResponse"8@"NSError"16
v24@?0@"ICMusicSubscriptionStatusMonitor"8@"ICMusicSubscriptionStatus"16
com.apple.itunescloud.ICMusicLibraryRecommendationController.accessQueue
ML3ContainerPropertyExternalVendorContainerTag
/System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
ML3ContainerPropertyExternalVendorDisplayName
ML3ContainerPropertyExternalVendorIdentifier
ML3ContainerPropertyParentPersistentID
ML3ContainerPropertyCloudAuthorStoreID
ML3ContainerPropertyCloudIsVisible
ML3ContainerPropertyCloudIsPublic
ML3ContainerPropertyLikedState
ML3ContainerPropertyDateCreated
ML3ContainerPropertyDatePlayed
ML3ContainerPropertyDescription
ML3ContainerPropertyName
com.apple.itunes.cloud-artwork-token
ML3TrackPropertyLikedStateChangedDate
ML3TrackPropertyAlbumLikedState
ML3TrackPropertyLikedState
ML3TrackPropertyDateSkipped
ML3TrackPropertyDatePlayed
ML3TrackPropertyHidden
ML3TrackPropertyUserRating
dmap.itemhidden
JaliscoHideItemOperation - (purchase_history_id count = %llu)
JaliscoHideItemOperationItemPurchaseHistoryIDsKey
databases/%u/items/edit
Artwork downloaded successfully, but failed to import.
Original artwork found, but failed to import.
<%@: %p cloud_id=%llu, artworkToken=%@, artworkType=%lld, sourceType=%lld>
_NSDataCloudAdditionsTemporaryFileKey
com.apple.itunescloudd.flushPlayactivityEventsBackgroundTask
CloudPlayActivityListenerNextFlushPlayActivityFireDateKey
CloudPlayActivityListenerNextFlushPlayActivityEndPointKey
play-activity-feed-post-frequency
v16@?0d8
com.apple.itunescloudd.CloudPlayActivityRequestListenerErrorDomain
com.apple.itunescloudd.playactivity
will
will not
com.apple.itunesstored.private
v32@?0@"NSArray"8Q16@"NSError"24
com.apple.itunescloudd.CloudPlayActivityRequestListener.flushOperationQueue
-init is not supported, use +sharedInstance
com.apple.itunes.item-redownload-param-2
com.apple.itunes.item-flavor
com.apple.itunes.item-flavor-listing
com.apple.itunes.store.vpp-org-display-name
com.apple.itunes.store.vpp-org-id
com.apple.itunes.store.vpp-is-licensed
com.apple.itunes.cloud-artwork-url
daap.songdatepurchased
daap.songgenre
daap.songartist
dmap.itemname
com.apple.itunes.itms-songid
dmap.persistentid
('%@:%d')
books.daap
JaliscoLoadBooksOperation
_ICApplicationIdentifierForRevokingAllMusicUserTokens
com.apple.tcc.access.changed
v12@?0i8
v32@?0@"NSString"8@"NSString"16^B24
guid
com.apple.Music.iOS.VPPA.CancelButtonSelected
com.apple.Music.iOS.VPPA.ApprovalButtonSelected
com.apple.Music.iOS.VPPA.UnifiedReconsentDialogShown
TCC_EXPIRATION_REJECT_BUTTON_TITLE
TCC_EXPIRATION_ACCEPT_BUTTON_TITLE
TCC_EXPIRATION_MULTIPLE_APPS_TITLE
TCC_EXPIRATION_SINGLE_APP_TITLE
com.apple.springboard
SBParentalControlsCapabilities
com.apple.itunescloudd.tcchelper
com.apple.itunescloudd.MediaLibraryAccessRevocationController.accessQueue
%@-RemoveAllPendingChanges
%@-ProcessPendingChanges
%@-AddPendingChange
com.apple.itunescloudd.pendingchanges.%@.%@
%@-CloudPendingChanges
unable to create cache directory
ArtworkDownloads
void CloudLibraryUtilitiesShowFailedToEnableCloudLibrarySystemDialog(ICCloudLibraryUtilitiesDisableICMLReason)
Either alertHeader or alertMessage is required.
CloudLibraryUtilities.m
ENABLE_CLOUD_LIBRARY_FAILED_TOO_MANY_ITEMS_MESSAGE_IPHONE
ENABLE_CLOUD_LIBRARY_FAILED_TOO_MANY_ITEMS_MESSAGE_IPOD
ENABLE_CLOUD_LIBRARY_FAILED_TOO_MANY_ITEMS_MESSAGE_IPAD
ENABLE_CLOUD_LIBRARY_FAILED_TOO_MANY_ITEMS_TITLE
DeviceClassNumber
troveid
cloud-info
v16@?0@"ICStoreRequestContext"8
playlist_data_%lu.daap
track_data_%lu.daap
Revision_%u_to_%u
q24@?0@"NSDate"8@"NSDate"16
Initial
DaapDebugging
Cloud
Sync
Purchase
daap_data_%lu.daap
SubscribedContainersResponse_%llu
SubscribedPlaylists
v20@?0@"ICMutableUserIdentityProperties"8B16
MPCloudController
v28@?0@"NSError"8B16B20B24
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
v24@?0B8B12@"NSError"16
phase
localizedDescription
code
domain
MPErrorDomain
UNKNOWN_ERROR
NETWORK_FAILED
model
artistContent
cloud-library-opt-out-url
itunes-match-protocol-version
min-itunes-match-compatible-version
contentFeatures
releaseDate
canonicalId
contentType
Album
Song
Playlist
MusicVideo
ArtistUploadedContent
(unknown: %i)
MLSyncClientHasPendingAssets
MLSyncClientGenerationID
MLSyncClientSyncAnchor
MLSyncClientLastSyncedRevision
com.apple.itunescloudd.DisableCloudLibraryOperation.deauthenticate
DisableCloudLibraryOperation
The method _processActiveConfigurationChange:initialSetup: is only suitable for single user and serial multi user setup.
ICDHandlerCoordinator.m
The method _processSupportedConfigurationsChange:initialSetup: is only suitable for parallel multi user setup.
com.apple.itunescloudd.ICDHandlerCoordinator.changeLibraryManagementPolicy
v16@?0@"ICAsyncBlockOperation"8
The method `setupHandlers` must be call prior to attempting to update handler type
com.apple.itunescloudd.ICDHandlerCoordinator.updateHandlersWithAccountStateChange
The method `setupHandlers` must be call prior to attempting to update active configurations
com.apple.itunescloudd.ICDHandlerCoordinator.setupHandlersWithAccountStateChange
The method `setupHandlers` must only be called once
com.apple.itunescloudd.ICDHandlerCoordinator.operationQueue
CloudLibraryConnectionRequestForbiddenAdditonalErrorCodeKey
database-name
database-id
Cloud library server requested authentication
MPPlaybackUserDefaults
Client-Cloud-DAAP-Request-Reason
X-FM-Dsid
Client-Cloud-Purchase-DAAP-Version
Client-Cloud-Daap-Version
application/x-dmap-tagged
com.apple.itunescloudd.CloudLibraryConnection.serial
updateplaylistasset.XXXXXX
iTunesCloud
Not enough information to upload artwork asset.
v40@?0@"NSURLSessionUploadTask"8@"NSData"16@"NSURLResponse"24@"NSError"32
length
offset
byterange
type
content
EEE',' dd MMM yyyy HH':'mm':'ss 'GMT'
en_US
date
clientGenerated
requiredHeaders
method
endpoint
operations
all-work-completed
download requests phase 2 (fetch work items)
back-off-delay-in-ms
upload responses (report work item responses)
response-data
response-code
assets
upload-playlist
action
actions
cloud-id
payload
dsid
token
v24@?0@"NSURLResponse"8@"NSError"16
upload-info
download requests phase 1 (fetch work items)
download-requests-url
upload-responses-url
initiate asset change
cloud-assets-update
sha256
hash-values
file-size
cloud-ids
Cannot obtain digest from unknown hasher algorithm
v16@?0@"NSData"8
SagaUploadPlaylistArtworkOperationPlaylistPersistentIDKey
com.apple.itunescloudd.CloudRemoteRequestOperationExecutionServiceListener.accessQueue
includeHiddenItems
query
Must Subclass
JaliscoUpdateOperation.m
initial
class
reason
UpdateOperationEnd
UpdateOperationBegin
JaliscoUpdateOperation
com.apple.amp.itunescloudd
Default
Default_Oversize
Accounts
Artwork
Artwork_Oversize
CloudSync
CloudSync_Oversize
Connections
Connections_Oversize
Downloads
Genius
PurchaseSync
PurchaseSync_Oversize
Push
XPC_Oversize
PlayActivity
ContentTaste
ContentTaste_Oversize
BackgroundTasks
LibraryRecommendations
CloudLibraryCoordinator
v32@?0^{?=I*Qq}8Q16^B24
start
images
nominal-image-resolutions
chapter-list
chapters
com.apple.itunes.store.show-composer-as-artist
com.apple.itunes.page-progression
com.apple.itunes.display-publication-version
com.apple.itunes.publication-version
com.apple.itunes.store.is-premium-rental
com.apple.itunes.rental-start
com.apple.itunes.rental-pb-start
com.apple.itunes.rental-pb-duration
com.apple.itunes.rental-duration
com.apple.itunes.store.expected-release-date
com.apple.itunes.store.is-preorder
com.apple.itunes.store.hls-audio-capability
com.apple.itunes.store.audio-capability
com.apple.itunes.store.hls-playback-url
com.apple.itunes.store.hls-video-quality
com.apple.itunes.store.hls-color-capability
com.apple.itunes.store.color-capability
com.apple.itunes.store.ams-episode-sort-order
com.apple.itunes.store.ams-episode-display-label
com.apple.itunes.store.ams-episode-type
com.apple.itunes.store.ams-show-type
com.apple.itunes.store.supports-hls-playback
com.apple.itunes.store.lyrics-available
daap.songmovementnumber
daap.songmovementcount
daap.songmovementname
daap.songwork
com.apple.itunes.store.playback-endpoint
com.apple.itunes.store.subscription-adam-id
com.apple.itunes.mastered-for-itunes
com.apple.itunes.store.playlist-artist-id
com.apple.itunes.store.extras-url
com.apple.itunes.episode-sort
com.apple.itunes.cloud-lyrics-token
com.apple.itunes.collection-description
com.apple.itunes.chapter-metadata-url
com.apple.itunes.episode-num-str
com.apple.itunes.series-name
com.apple.itunes.xid
com.apple.itunes.season-num
com.apple.itunes.flat-chapter-data
com.apple.itunes.has-chapter-data
com.apple.itunes.item-redownload-param
com.apple.itunes.drm-platform-id
com.apple.itunes.drm-versions
com.apple.itunes.drm-key2-id
com.apple.itunes.drm-key1-id
com.apple.itunes.non-drm-user-id
com.apple.itunes.drm-user-id
com.apple.itunes.copyright
com.apple.itunes.is-hd-video
com.apple.itunes.gapless-resy
com.apple.itunes.gapless-dur
com.apple.itunes.gapless-enc-dr
com.apple.itunes.gapless-enc-del
com.apple.itunes.gapless-heur
com.apple.itunes.has-video
com.apple.itunes.norm-volume
com.apple.itunes.item-flavor-id
com.apple.itunes.movie-info-xml
daap.songlongcontentdescription
daap.songcontentdescription
daap.songdataurl
daap.songdatakind
daap.songrelativevolume
daap.songtime
daap.songlongsize
daap.songsize
daap.songformat
daap.songsamplerate
daap.songbeatsperminute
daap.songbitrate
daap.songcodecsubtype
daap.songcodectype
com.apple.itunes.itms-storefrontid
com.apple.itunes.itms-playlistid
com.apple.itunes.itms-genreid
com.apple.itunes.itms-composerid
com.apple.itunes.itms-artistid
com.apple.itunes.content-rating
com.apple.itunes.cloud-purchased-token
com.apple.itunes.store.episode-screenshot
dmap.itemavailable
daap.songuserskipcount
daap.songuserrating
daap.songuserplaycount
daap.songyear
daap.songtracknumber
daap.songtrackcount
daap.songstoptime
daap.songstarttime
daap.sortname
daap.sortcomposer
daap.sortartist
daap.sortalbum
daap.sortalbumartist
daap.songlastskipdate
daap.songgrouping
daap.songexcludefromshuffle
daap.songdiscnumber
daap.songdisccount
daap.songdisabled
daap.songdatereleased
daap.songdateplayed
daap.songdatemodified
daap.songcontentrating
daap.songcomposer
daap.songcompilation
daap.songcomment
daap.songalbumuserrating
daap.songalbum
daap.songalbumartist
SELECT DISTINCT (fetchable_artwork_token), subscription_store_item_id, media_type FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN item_store ON entity_pid = item_store.item_pid AND entity_type = ? JOIN item USING (item_pid) WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
%@ Failed to fetch artwork info lookup for cloud IDs: %@
%@ Unsupported entity type %ld for subscription artwork info
No subscription artwork_token for item with persistent-id = %lld
No subscription screenshot_token for item with persistent-id = %lld
v20@?0B8@"NSError"12
B16@?0@"ML3DatabaseConnection"8
v12@?0B8
v24@?0@"NSNumber"8^B16
UPDATE item SET keep_local = ? WHERE item_pid = ? AND in_my_library = 1 AND media_type IN (8, 1032)
UPDATE item_store set store_saga_id = store_saga_id WHERE item_pid = ?
SagaCloudAddItemOperationAdamIDKey
SagaCloudAddPlaylistOperationPlaylistGlobalIDKey
SagaCloudAddItemToPlaylistOperationPlaylistPersistentIDKey
Suspending
Resuming
ML3ArtworkSourceTypeUnknown
ML3ArtworkSourceTypeCloud
ML3ArtworkSourceTypeSync
ML3ArtworkSourceTypePurchaseHistory
ML3ArtworkSourceTypeStore
ML3ArtworkSourceTypeSubscriptionStoreContent
ML3ArtworkTypeUnknown
ML3ArtworkTypeItem
ML3ArtworkTypeScreenshot
ML3ArtworkTypeChapter
ML3ArtworkTypeArtistHero
ML3ArtworkTypePlaylist
artwork_operation(%llu, %ld, %ld)
Request must be of type %@
CloudArtworkImporter.m
com.apple.itunescloudd.artworkimporter.artworkDownloadAccessQueue
MPMediaDownloadManager
configuration.userIdentity != nil
notNeeded
cancelled
accepted
Prompting the user to acknowledge the latest privacy policy is not supported on the current platform.
mediaKinds
APNSToken
accountStates
v32@?0@"NSNumber"8@"ICDCloudPushNotificationAccountRegistrationState"16^B24
v32@?0@8@16^B24
software
book
tv-episode
feature-movie
music-video
payloadVersion
com.apple.itunesstored.PlaybackLeaseDidEnd
v24@?0@"ICPushNotificationsResponse"8@"NSError"16
media-kinds
v24@?0@"ICUserIdentityProperties"8@"NSError"16
v16@?0@"NSError"8
com.apple.itunescloudd.aps
Push environment changed
connection=nil
environment
com.apple.jalisco
com.apple.sagad
com.apple.music.social
com.apple.music.service
Ignoring push notification [account is not active] - accountDSID=%lld - activeAccountDSID=%lld
com.apple.itunescloudd.NSOperationQueue.CloudPushNotificationController.updatePushNotificationsOperationSyncQueue
com.apple.itunescloudd.NSOperationQueue.CloudPushNotificationController.operationQueue
v32@?0@"NSNumber"8@"NSNumber"16^B24
databases/%u/items
databases/%u/containers
Title: %@, storeAdamID: %lld
library-daap
com.apple.itunes.genius-seed-track-id-listing
dmap.itemidlisting
com.apple.itunes.cloud-connect-status
com.apple.itunes.cloud-match-type
daap.genresyncid
daap.composersyncid
daap.albumartistsyncid
daap.artistsyncid
daap.albumsyncid
daap.syncid
com.apple.itunes.special-playlist
com.apple.jingle.AppIconNeedsShine
com.apple.jingle.newsstandBindingType
com.apple.jingle.newsstandBindingEdge
com.apple.itunes.store.product-url
com.apple.itunes.store.newsstand-artwork-url
com.apple.itunes.supports-genius-control
com.apple.itunes.supported-itunes-extensions
com.apple.itunes.supports-fprap
com.apple.itunes.playlist-sort
com.apple.itunes.playlist-sort-is-reversed
com.apple.itunes.playlist-kind
com.apple.itunes.playlist-data
com.apple.itunes.itunes-machine-id
com.apple.itunes.drm-key-list-id
dmcp.supportsvolumecontrol
dmcp.supportsremotelibraryselection
dmcp.supportsplaystatusupdates
dmcp.supportscontrolpromptrequests
dmcp.supportsbonjoursourcesupdates
dmcp.protocolversion
dmcp.interfacekind
dmap.status
dmap.parentcontainerid
dmap.itemkind
dmap.itemcount
dmap.databasekind
dmap.containeritemid
dmap.containercount
dacp.supports-setuserrating
dacp.supports-speakerselection
dacp.protocolversion
daap.sortseriesname
daap.songpodcasturl
daap.songkeywords
daap.songhasbeenplayed
daap.songgapless
dmap.objectextradata
daap.songextradata
daap.songeqpreset
daap.songdescription
dmap.itemdateplayed
dmap.itemdateadded
daap.songcategory
daap.songbookmark
daap.bookmarkable
daap.songartistid
daap.songalbumid
daap.baseplaylist
dmap.serverrevision
com.apple.itunes.drm-token-data
com.apple.itunes.drm-token-request-status
v32@?0@"NSNumber"8Q16^B24
v24@?0r*8Q16
v24@?0@"NSString"8@"NSError"16
v28@?0@"ICAppleMusicAPITokenCollection"8@"NSError"16i24
requestTokens
v16@?0@"ICAppleMusicAPITokenResponse"8
com.apple.itunescloudd.AppleMusicAPITokenIDSService.accessQueue
com.apple.private.alloy.itunescloudd
NextJaliscoAppsPeriodicPollTime
NextJaliscoLibraryPeriodicPollTime
NextEvaluateSyncRulesThrottleOperationTime
NextEvaluateSyncRulesOperationTime
com.apple.itunescloudd.deferredPushUpdate.jaliscoMedia
com.apple.itunescloudd.periodicPoll.jaliscoMedia
v24@?0@"ICURLBag"8@"NSError"16
forced-refresh-frequency-minutes
purchase-daap
CloudPeriodicPoller - JaliscoMedia - LoadBag
com.apple.itunescloudd.deferredPushUpdate.saga
UPDATE container SET store_cloud_id = 0
UPDATE item_store SET store_saga_id = 0
cloud-library-update-check
com.apple.mobileipod-prefsChanged
SELECT best_artwork_token.entity_pid FROM best_artwork_token JOIN artwork_token ON best_artwork_token.entity_pid = artwork_token.entity_pid AND best_artwork_token.entity_type = artwork_token.entity_type AND best_artwork_token.available_artwork_token=artwork_token.artwork_token WHERE best_artwork_token.entity_type = ? AND best_artwork_token.artwork_type = ? AND artwork_source_type = ? AND available_artwork_token != ''
MusicShowCloudMediaEnabledSetting
Failed to get a database revision during library update operation
v24@?0@"ICDResponse"8@"NSError"16
autoCreatedSmartPlaylistsDeleted
createdBuiltInSmartPlaylists
v28@?0B8@"NSError"12@"NSData"20
CloudLibraryUploadResults.plist
playlists
process-playlists
v40@?0q8r^@16Q24^B32
should-upload
CloudLibraryUpload.plist
libraryUpdateRequest
cloud-library-update-request
ForceLibraryUnification
DisableLibraryUpload
load initial cloud library
load initial cloud library - isInitialImport
subscription lapsed
com.apple.itunescloudd.ICDAccountManager.serial.queue
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@"ML3DatabaseRow"8@"NSError"16^B24
SELECT container_pid, liked_state, cloud_global_id FROM container WHERE cloud_global_id
MPMediaLibrary
/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
v24@?0@"NSArray"8@"NSError"16
SELECT album_pid, liked_state, store_playlist_id, item_store.item_pid, item_store.store_saga_id, item_store.is_subscription FROM album JOIN item_store ON (album.representative_item_pid == item_store.ROWID) WHERE item_store.store_playlist_id
SELECT item_pid, liked_state, store_item_id, subscription_store_item_id, store_saga_id, is_subscription FROM item_store JOIN item_stats USING (item_pid) WHERE 
subscription_store_item_id
store_item_id
longLongValue
NonMediaItemStoreAdamIds
B16@?0@"ICCloudContentTasteUpdateItem"8
_MediaContentTasteUpdateResponseTimeIntervalSinceReferenceDate
v24@?0@"ICURLResponse"8@"NSError"16
application/x-protobuf
If-None-Match
If-Match
com.apple.amp.iTunesCloud.ICUpdateContentTasteOperation.workQueue
-init is not supported, use initWithContentTasteUpdateItems:invalidateLocalCache:dsid
SagaUploadPlaylistPlayDataOperation
Client-iTunes-Sharing-Version
%d.%d
Accept-Encoding
%@=%@
session-id
 %@ [%@]
subclass must implement
CloudSetAddToPlaylistBehaviorOperation - (add to playlist behavior = %@)
CloudSetAddToPlaylistBehaviorOperationBehaviorIDKey
Encountered error while performing privacy prompt operation.
Privacy acknowledgement required, but user did not accept latest privacy policy.
v24@?0q8@"NSError"16
Privacy acknowledgement required, but presenting the privacy prompt is not allowed.
SELECT DISTINCT (fetchable_artwork_token), store_cloud_id FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN container ON entity_pid = container_pid AND entity_type = ? WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
SELECT DISTINCT (fetchable_artwork_token), store_saga_id, media_type FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN item_store ON entity_pid = item_store.item_pid AND entity_type = ? JOIN item USING (item_pid) WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
No cloud_artwork_token for playlist saga id = %llu
No cloud_screenshot_token for item saga id = %llu
No cloud_artwork_token for item saga id = %llu
v32@?0@"NSNumber"8@"ICContentTasteRequestHandler"16^B24
v8@?0
com.apple.amp.iTunesCloud.CloudContentTasteUpdateRequestListener.accessQueue
com.apple.amp.iTunesCloud.CloudContentTasteUpdateRequestListener.callbackQueue
com.apple.itunescloud.contenttaste
SagaSetAlbumItemPropertyOperation - (album_persistent_id = %lld)
SagaSetAlbumItemPropertyOperationAlbumItemPropertiesKey
SagaSetAlbumItemPropertyOperationAlbumPersistentIDKey
SagaAddItemToPlaylistOperation - (saga_id = %llu)
PlaylistPersistentIDKey
ItemSagaIDKey
Jalisco-Media
SagaRemoveItemOperation - (saga_id count = %llu)
SagaRemoveItemOperationItemSagaIDsKey
SagaRemoveItemOperationArchiveVersionKey
SagaRemoveItemOperationItemSagaIDKey
databases/%u/cloud-add
databases/%u/containers/%u/cloud-add
You can not add a playlist-global-id to a container
You can only send one field (adam-id or playlist-global-id
ICAddToLibraryRequest.m
playlist-global-id must be a non-zero length string.
container-id cannot be zero.
saga-id cannot be zero.
cannot specify more than one referral
adam-id cannot be zero.
v16@?0@"DKDAAPWriter"8
config
void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)
MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)
0123456789abcdef
NSString * _Nonnull _MSVHashGetDigest(MSVHash)
%@.%@
com.apple.itunescloudd.deferredPushUpdate.jalisco
task.configuration.userIdentity.accountDSID != nil
ICDBackgroundTaskManager.m
More tasks than expected have the same name
B24@?0@"_ICDBackgroundTask"8^B16
no-name
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.itunescloud.ICDBackgroundTaskManager.periodic-poll-activity
v16@?0@"BaseRequestHandler"8
ICDBackgroundTaskManager - Polling setup - LoadBag
%{public}@ - Will schedule a retry for status=%d, failureCode=%d
%{public}@ - Finished reloading saga library for reason=%d with error=%{public}@
%{public}@ - Finished reloading media purchase history for reason=%d with error=%{public}@
%{public}@ - Finished reloading media purchase history by adding kind=%d for reason=%d with error=%{public}@, _didManuallyReloadCloudLibrary=%{BOOL}u
%{public}@ - Posting JALISCO_UPDATE_IN_PROGRESS_CHANGED for libraryType=%{public}@
%{public}@ - Posting SAGA_UPDATE_IN_PROGRESS_CHANGED for libraryType=%{public}@
%{public}@ - performing initial saga update
%{public}@ - not performing initial saga import. sagaDatabaseVersion=%d, _sagaRequestHandler=%p
%{public}@ - not reloading media purchase history by adding kind=%d, _jaliscoRequestHandler=%p
%{public}@ - Reload media purchase history
%{public}@ - not reloading media purchase history. jaliscoDatabaseVersion=%d, _jaliscoRequestHandler=%p
%{public}@ - ignoring store did change notification
%{public}@ - locker bit is set on the account, creating SagaRequestHandler
%{public}@ - locker bit is not set on the account and we have a valid SagaRequestHandler. Removing it now ....
%{public}@ - We already have a pending deauthentication operation (isHandlerDeactivating=%{BOOL}u, _deauthOperationCount=%d). Will not deauthenticate again.
%{public}@ - Running DisableCloudLibraryOperation deletingDatabase:%{BOOL}u, disableActiveLockerAccount:%{BOOL}u, removeSourcePurchaseHistory=%{BOOL}u, isHandlerDeactivating=%{BOOL}u, _deauthOperationCount=%d
%{public}@ - Cancelling all Jalisco operations.
%{public}@ - Cancelling all Saga operations.
%{public}@ - No valid SagaRequestHandler - not cancelling pending SagaLibrary operations.
%{public}@ - Enqueueing CloudAuthenticateOperation shouldMerge:%d, allowNoisyPrompt:%{BOOL}u
%{public}@ - We already have a pending authentication operation. Will not authenticate again.
%{public}@ - Authentication finished for %{public}@ with error=%{public}@, status=%d, authFailureCode=%{public}@
%{public}@ - CloudAuthenticateOperation is nil. Resetting _isPendingAuthentication=%{BOOL}u
%{public}@ - Trying to enable cloud library for reason=%d, supportsAutoEnablingLibrary=%{BOOL}u
%{public}@ - Native music app is NOT installed. Not enabling Cloud Music Library
%{public}@ - isActiveLockerAccount=%{BOOL}u, subscriptionStatus=%d. Disabling CloudLibrary as the user is no longer a subscriber
%{public}@ - New account [enabling iCML if possible]
%{public}@ - Preparing to enable Cloud Music Library for reason=%d
%{public}@ - Skipping initial import on non standalone watch for reason=%d
%{public}@ - Not enabling iCML on unsupported platform %{public}@
%{public}@ - Platform %{public}@ doesn't support automatically enabling cloud library
%{public}@ - Error %{public}@ loading user identity properties.
%{public}@ - No pending changes to handle. Ignoring reason=%d
%{public}@ - Not enabling ICML (status = %d)
%{public}@ - Will schedule a retry to enable ICML (status = %d)
%{public}@ -  enabling ICML (status = %d)
%{public}@ - Not enabling ICML for reason = %d, status = %d
%{public}@ - Locker bit set, but the account is not active. Enqueuing a SagaDeauth
%{public}@ - Device is already registered with CUID and TroveID
%{public}@ - Initializing SagaRequestHander ....
%{public}@ - We have a valid SagaRequestHander (%p)....
%{public}@ - Enqueuing SagaDeauth as device registration failed.
%{public}@ - previousAccountID=%lld, activeAccountID=%lld, lastKnownActiveLockerAccountID=%lld, currentSagaDatabaseVersion=%d, accountIDWasAdded=%{BOOL}u, accountIDWasChanged=%{BOOL}u
%{public}@ - No changes to process
%{public}@ - Active locker account is different from previous locker account - shouldMergeWithCloudLibrary=%d
%{public}@ - Active locker account is the same as previous locker account - shouldMergeWithCloudLibrary=%d
%{public}@ - Found mergePreference on the active locker account - shouldMerge=%d.
%{public}@ - Updating merge preference from %{BOOL}u to %{BOOL}u
%{public}@ - Clearing TroveID and CUID, setting merge preference to %{BOOL}u
%{public}@ - Will not adjust merge preference.
%{public}@ - currentSagaDatabaseVersion=%d, wasRestoredFromCloudBackup=%{BOOL}u
%{public}@ - Checking if ICML can be enabled. includeLocalContentCheck=%{BOOL}u
%{public}@ - DSID (%lld) is already the active locker account
%{public}@ - Cannot enable ICML as the DSID (%lld) is invalid
%{public}@ - Cannot enable ICML as the user manually disabled it
%{public}@ - Error (%{public}@ determining if user manually disabled iCML. Will schedule a retry.
%{public}@ - Cannot enable ICML as there are local destructive changes
%{public}@ - Can conditionally enable ICML as DSID (%lld) is a preexisting store acount
%{public}@ - We already have a pending enable ICML operation.
%{public}@ - Will retry enabling iCML in %f seconds.
%{public}@ - Starting retry operation to enable ICML.
%{public}@ - NOT retrying to enable cloud library for reason=%d as the handler is not active
%{public}@ - Could not get properties for current user identity - error=%{public}@., _autoEnableFailureCount=%ld
%{public}@ - Finished loading user identity properties with error=%{public}@. account is active=%{BOOL}u. Not loading iCML
%{public}@ - shouldTreatSubscriptionStatusAsExpired is set. Will force subscription status to be expired
%{public}@ - reloading subscription status. Current status=%d, reason=%d
%{public}@ - shouldTreatSubscriptionStatusCheckAsIncomplete is set (_subscriptionStatusFailureCount=%ld). Will force subscription status check to fail with error
%{public}@ - _musicSubscriptionCheckStatus=%d, subscribedToAppleMusic=%{BOOL}u, subscribedToiTunesMatch=%{BOOL}u, setting userRequestedSubscriptionHidden to 0
%{public}@ - subscription status has changed (old=%d, new=%d)
%{public}@ - subscription status has not changed (status=%d)
%{public}@ maxRetryDelaySeconds=%lu
%{public}@ - Scheduling retry to update cloud libary on %{public}@ (failureCount=%lu, retryDelaySeconds=%lu)
%{public}@ - retrying to enable cloud library for reason=%d
%{public}@ - NOT retrying to update cloud library for reason=%d as the handler is not active
%{public}@ - We already have a pending subscription status check operation.
%{public}@ - Not reloading subscription status as the handler is not active.
%{public}@ - Will retry getting subscription status in %f seconds for reason %d, _subscriptionStatusFailureCount=%ld
%{public}@ - Starting operation to refresh subscription status.
%{public}@ - Not refreshing subscription status. isActiveLocker=%{BOOL}u, loading user identity properties finished with error=%{public}@
%{public}@ - Not refreshing subscription status. isActiveAccount=%{BOOL}u, isActiveLocker=%{BOOL}u, loading user identity properties finished with error=%{public}@
%{public}@ - Handling subscription status change notification
%{public}@ - Subscription change notification received for another account [no action to take] - handlerDSID=%@ - notificationDSID=%@
%{public}@ - Ignoring native music app check on platforms that support multiple libraries
%{public}@ - Ignoring native music app check on traditional wOS
%{public}@ - becomeInactiveWithDeauthentication failed [cancelling operations failed] error=%{public}@
%{public}@ - Removing allArtistImagesMapCacheFile due to account change
%{public}@ - Removing purchase history due to account change
%{public}@ - Updating last known active locker account from %lld to %lld
%{public}@ - Store account ID was removed, deauthenticating if allowed.
Updating Jalisco Library with reason=%d
Finished updating Jalisco Library with reason=%d, error=%{public}@
Updating Saga Library with reason=%d
Finished updating Saga Library with reason=%d, error=%{public}@
%{public}@ - becomeInactiveWithDeauthentication, deauthentication=%{BOOL}u, _isHandlerActive=%{BOOL}u
%{public}@ - Finished removing content taste items with error=%{public}@
%{public}@ - Starting to deauthenticate Jalisco library
%{public}@ - Starting to deauthenticate Saga library
%{public}@ - Deauthenticating Saga library finished with error=%{public}@
%{public}@ - finished deauthenticating
%{public}@ - Deauthenticating Jalisco library finished with error=%{public}@
%{public}@ - becomeActive
%{public}@ - initializing JaliscoRequestHandler
%{public}@ - we have a valid JaliscoRequestHandler.
%{public}@ - Start observing subscription status changed notification
%{public}@ - network reachability changed, _musicSubscriptionCheckStatus = %d. Reloading subscription status
%{public}@ finished update operation for %{public}@ library, response=%{public}@
%{public}@ - scheduling initial cloud library update
%{public}@ - Showing system dialog for enable cloud library error code=%d
%{public}@ starting update operation for %{public}@ library, initialImport=%{BOOL}u
%{public}@ includeMediaKindSong=%{BOOL}u on non standalone wOS platform
%{public}@ could not load user identity properties. error=%{public}@
%{public}@ - user is a subscriber and locker bit is set. includeMediaKindSong=%{BOOL}u
%{public}@ - user is a subscriber and locker bit is NOT set. includeMediaKindSong=%{BOOL}u
%{public}@ - user is a NOT a subscriber. includeMediaKindSong=%{BOOL}u
%{public}@ Error %{public}@ loading subscription status. includeMediaKindSong=%{BOOL}u
%{public}@ - ignoring hideItemsWithPurchaseHistoryIDs as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadMissingArtwork as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadBooksForStoreIDs as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring cancelUpdateJaliscoGeniusDataWithCompletionHandler as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring updateJaliscoGeniusDataWithCompletionHandler as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring enableJaliscoGeniusWithCompletionHandler as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring isMediaKindDisabledForJaliscoLibrary as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadJaliscoGeniusOperationStatusWithCompletionHandler as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadJaliscoGeniusCUIDWithCompletionHandler as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadJaliscoGeniusLearnMoreURLWithCompletionHandler as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadIsJaliscoGeniusSupportedWithCompletionHandler as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadScreenshotInfoForPurchaseHistoryIDs as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadArtworkInfoForPurchaseHistoryIDs as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring setJaliscoGeniusCUID as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring setItemProperties as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring removeLibraryWithCompletion as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring disableJaliscoGeniusWithCompletionHandler as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring deprioritizeScreenshotForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring deprioritizeItemArtworkForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring importScreenshotForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring importItemArtworkForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler
%{public}@ - last known error reason enabling iCML=%{public}@
%{public}@ - locker bit is not set, not returning last known error enabling iCML. cloudLibraryStateReason=%{public}@
%{public}@ - could not load user identity properties (error=%{public}@), not returning last known error enabling iCML
%{public}@ - ignoring loadScreenshotInfoForSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring loadArtworkInfoForContainerSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring loadArtworkInfoForSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring loadGeniusItemsForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring updateSubscribedPlaylistsWithSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring updatePlaylistPlayDataWithCompletionHandler as we don't have a valid SagaRequestHandler
%{public}@ - ignoring updateItemPlayDataWithCompletionHandler as we don't have a valid SagaRequestHandler
%{public}@ - ignoring setAlbumProperties as we don't have a valid SagaRequestHandler
%{public}@ - ignoring setItemProperties as we don't have a valid SagaRequestHandler
%{public}@ - ignoring setCloudAddToPlaylistBehavior as we don't have a valid SagaRequestHandler
%{public}@ - ignoring setPlaylistProperties as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addStorePlaylistWithGlobalID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addStoreItemWithOpaqueID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addStoreItemWithAdamID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addItemWithSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addGeniusPlaylistWithPersistentID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring uploadArtworkForPlaylistWithPersistentID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring removePlaylistsWithSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring removeItemsWithSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring publishPlaylistWithSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring createPlaylistWithPersistentID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring deprioritizeContainerArtworkForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring deprioritizeScreenshotForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring deprioritizeItemArtworkForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring importContainerArtworkForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring importScreenshotForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring importItemArtworkForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - updateProgressForLibraryType for libraryType=%{public}@, progress=%f
%{public}@ - updateProgressForLibraryType for libraryType=%{public}@, jaliscoDatabaseVersion=%d, _havePendingSagaUpdate=%{BOOL}u, _didManuallyReloadCloudLibrary=%{BOOL}u, sagaUpdateProgress=%f, progress=%f
%{public}@ - Unsupported request to add background operation (%p) for Jalisco library
%{public}@ - Not updating jalisco library as the handler is nil
%{public}@ - Ignoring request for periodic poll because ICML is not enabled
%{public}@ - Not updating saga library as the handler is nil
%{public}@ - isUpdatingCloudLibraryWithCompletion sagaUpdateInProgress=%{BOOL}u, sagaInitialImport=%{BOOL}u, jaliscoUpdateInProgress=%{BOOL}u, jaliscoInitialImport=%{BOOL}u, _havePendingSagaUpdate=%{BOOL}u
%{public}@ - Starting to disable cloud library for reason=%d
%{public}@ - account with DSID (%lld) does not have ICML enabled
Removing media kind music from automatic downloads finished with error=%{public}@.
Could not get account for DSID=%lld - error=%{public}@. Not removing media kind music from automatic downloads
%{public}@ - Updating Jalisco library for reason=%d
%{public}@ - Updating Jalisco library for reason=%d, Setting jaliscoNeedsUpdateForTokens=YES
%{public}@ - Will not update Jalisco library for reason=%d as the locker bit was not set.
%{public}@ - Will not update Jalisco library for reason=%d _jaliscoRequestHandler=%p
%{public}@ - Finished disablig cloud library for reason=%d
%{public}@ - Starting to enable cloud library, start initial import=%{BOOL}u, enableCloudLibraryPolicy=%d, isExplicitUserAction=%{BOOL}u
%{public}@ - Clearing last known locker account
%{public}@ - ICML is already enabled
%{public}@ - Not enabling cloud library. Could not get properties of %{public}@, error=%{public}@
%{public}@ - Handling music app install
%{public}@ - Handling music app removal
Sending set item properties request <%{public}@: %p method=%{public}@ action=%{public}@> for purchase history id: %llu properties: %{public}@
<%{public}@: %p method=%{public}@ action=%{public}@> received response: <%{public}@: %p code=%ld, length=%{bytes}lu>
JaliscoSetItemPropertyOperation failed with error: %{public}@
Not running JaliscoDeauthenticateOperation on wOS platform
Removing purchase history tracks
Clearing purchase history database revision (%ld)
No purchase history database revision, skipping deauthenticate and clean up.
Cancelling any outstanding jalisco track downloads.
Failed to remove playback intents. err=%{public}@
Translated parent persistent-id %lld to cloud-id %lu
Failed to find parent cloud-id for persistent-id %lld
Updating playlist with persistent-id %lld, setting cloud-id to %llu
Triggering playlist artwork upload in case this playlist has user artwork.
Requesting library update because the response contained update-required flag
Skipping library update because the response did not contain update-required flag
Playlist with pid = %lld is not in the database, skipping save to cloud library.
Loading Chapter Artwork with power assertion: %{public}@
Fetching chapter artwork (purchase history ID = %lld, chapter time = %lld): %{public}@
Loading Chapter Artwork Complete, releasing power assertion: %{public}@
ICDDefaults %p - setPendingBackgroundTasksData: %@
ICDDefaults %p - pendingBackgroundTasksData: %@
ICDDefaults %p - setKnownActiveAccountDSID: %@
ICDDefaults %p - setKnownAccountDSIDs: %@
ICDDefaults %p - knownActiveAccountDSID: %@
BaseRequestHandler %p - Deleting handler %p - class=%{public}@ dsid=%{public}@
Migrating to version %ld, from userVersion=%ld, sagaDatabaseRevision=%ld, jaliscoDatabaseRevision=%ld
Current user version: %ld
-[CloudServer _migrateFromUserVersion0to348294]
-[CloudServer _migrateFromUserVersion348294to348295]
-[CloudServer _migrateFromUserVersion348295to366559]
-[CloudServer _migrateFromUserVersion366559to370000]
-[CloudServer _migrateFromUserVersion370000to370100]
Deleting ML database
-[CloudServer _migrateFromUserVersion370100to370200]
resetting jalisco and saga revisions to zero
-[CloudServer _migrateFromUserVersion370200to370300]
-[CloudServer _migrateFromUserVersion370300to370400]
-[CloudServer _migrateFromUserVersion370400to380000]
-[CloudServer _migrateFromUserVersion380000to380010]
-[CloudServer _migrateFromUserVersion380010to380020]
-[CloudServer _migrateFromUserVersion380020to380030]
-[CloudServer _migrateFromUserVersion380030to380040]
Cloud library is enabled, repairing subscribed containers is_src_remote (if any)
Cloud library is NOT enabled, deleting subscribed containers (if any)
-[CloudServer _migrateFromUserVersion380040to380050]
-[CloudServer _migrateFromUserVersion380050to380060]
-[CloudServer _migrateFromUserVersion380060to380070]
-[CloudServer _migrateFromUserVersion380070to380080]
-[CloudServer _migrateFromUserVersion380080to380090]
-[CloudServer _migrateFromUserVersion380090to380100]
-[CloudServer _migrateFromUserVersion3800100to380110]
-[CloudServer _migrateFromUserVersion3800110to380115]
-[CloudServer _migrateFromUserVersion3800110to380120]
-[CloudServer _migrateFromUserVersion3800120to380130]
-[CloudServer _migrateFromUserVersion380130to380140]
-[CloudServer _migrateFromUserVersion380140to380150]
resetting jalisco revisions to zero to force a reset sync
-[CloudServer _migrateFromUserVersion380150to380160]
resetting jalisco revision to zero to force a reset sync
-[CloudServer _migrateFromUserVersion380160to380170]
-[CloudServer _migrateFromUserVersion380170to390000]
Found Automatic Downloads Key in user defaults
Failed to update automatic download kinds. error=%{public}@
Could not get active store account, error=%{public}@
Automatic Downloads Key does not exist in user defaults
-[CloudServer _migrateFromUserVersion390000to390010]
Automatic Downloads is enabled on the active account. Setting appropriate user defaults
-[CloudServer _migrateFromUserVersion390010to390020]
-[CloudServer _migrateFromUserVersion390020to390030]
Resetting sagaOnDiskDatabaseRevision to 1 to update missing cloud_universal_library_id
-[CloudServer _migrateFromUserVersion390030to390040]
Resetting sagaOnDiskDatabaseRevision to 1 to update missing category_type_mask and grouping_sort_key
-[CloudServer _migrateFromUserVersion390040to390050]
Resetting sagaOnDiskDatabaseRevision to 1 to update missing hls fields
-[CloudServer _migrateFromUserVersion390050to400000]
Will reset date_modified to 0 for playlistPersistenIDs=%{public}@
Resetting sagaOnDiskDatabaseRevision to 1 to update date_modified for subscribed playlists
Setting current user version: %ld
Skipping migration and setting user version to latest: %ld
Error (%{public}@) unarchiving enableICMLConfigData
Found autoEnableICMLConfig=%{public}@
No configuration to determine if iCML should be enabled/disabled
Failed to purge artwork_token for movies and tv shows. err=%{public}@
Detected %lld invalid artist artwork tokens, clearing last artist image import date...
updating track with location '%{public}@' to store_item_id=%lld
failed to update track with location '%{public}@'
RemoveSource error: %{public}@
Removing play data plists
%{public}@ Failed to retrieve library response for artist analysis. err=%{public}@
%{public}@ MLModel inputs: unique days with added content: %{public}@
%{public}@ MLModel inputs: number of unique albums: %{public}@
%{public}@ MLModel inputs: cumulative song play count: %{public}@
%{public}@ MLModel inputs: number of days since last play: %{public}@
%{public}@ MLModel inputs: average plays per item added: %{public}@
%{public}@ Analyzing %lu user library artists.
No DAAP code found for container property: %{public}@
Found %lu subscribed playlists to update for periodic poll.
Received non-200 HTTP code: %lu, skipping import.
No playlists to update (based on min refresh interval).
SagaSubscribedPlaylistUpdater import succeeded: %d
SagaSubscribedPlaylistUpdater import failed: %{public}@
Skipping update for playlist cloud ID: %lu -- time since update = %.fs (min refresh = %llus)
Cloud authentication status has changed - updating client status
handleLibraryAuthServiceTokenDidChangeNotification - posting dynamite state change
Subscription status has changed - updating client status
First unlock has occured
Received telephony center notification %{public}@
Received darwin notification %{public}@
Received unsupported darwin notification %{public}@
Received distributed notification: %{public}@
%{public}@ - Starting authentication - Device registered with CUID and TroveID=%{BOOL}u, canPerformLibraryUpload=%{BOOL}u, requiresDeviceRegistration=%{BOOL}u, enableReason=%d
%{public}@ - Not authenticating ... unable to get properties for specified account
%{public}@ - Not authenticating ... account is not active. DSID=%@
%{public}@ - ICML was manually disabled by the user. Not retrying CloudAuthenticateOperation for reason=%d
%{public}@ - shouldTreatSagaAddComputerCallAsFailed is set. Will force SagaAddComputer call to fail.
%{public}@ - Completed authentication successfully [ICCloudClientIsAuthenticatedDidChangeNotification posted]
%{public}@ - Setting account %{public}@ as the active locker account, dsid=%{public}@, _mergeToCloudLibraryPreference=%d, enableReason=%d finished with error=%{public}@
%{public}@: Could not find valid storefront identifier; error: %{public}@.
%{public}@: Storefront identifier did not change. Skipping invoking observation handlers.
%{public}@: Storefront identifier did change: "%{public}@". About to notify %llu observer%s.
%{public}@: Skipping notification of updated storefront identifier for client with observation token %{public}@: client connection %{public}@ is not allowed to access restricted information.
%{public}@: Notifying client with observation token %{public}@ of updated storefront identifier: "%{public}@".
%{public}@: Failed to obtain remote proxy to notify of updated storefront identifier; error = %{public}@.
%{public}@: Could not find valid cloud service capabilities; error: %{public}@.
%{public}@: Cloud service capabilities did not change. Skipping invoking observation handlers.
%{public}@: Cloud service capabilities did change: %{public}@. About to notify %llu observer%s.
%{public}@: Skipping notification of updated cloud service capabilities for client with observation token %{public}@: client connection %{public}@ is not allowed to access capabilities.
%{public}@: Notifying client with observation token %{public}@ of updated cloud service capabilities: %{public}@.
%{public}@: Failed to obtain remote proxy to notify of updated cloud service capabilities; error = %{public}@.
%{public}@: Could not find storefront country code from bag %{public}@; error: %{public}@.
%{public}@: Storefront country code did not change. Skipping invoking observation handlers.
%{public}@: Storefront country code did change: "%{public}@". About to notify %llu observer%s.
%{public}@: Skipping notification of updated storefront country code for client with observation token %{public}@: client connection %{public}@ is not allowed to access restricted information.
%{public}@: Notifying client with observation token %{public}@ of updated storefront country code: "%{public}@".
%{public}@: Failed to obtain remote proxy to notify of updated storefront country code; error = %{public}@.
%{public}@: Refreshing storefront identifier.
%{public}@: Encountered error getting properties for active account: %{public}@.
%{public}@: %{public}@
%{public}@: Refreshing storefront country code.
%{public}@: No bag was present on the bag monitor.
%{public}@: Requesting bag directly.
%{public}@: Failed to fetch bag with error: %{public}@.
%{public}@: Notifying observers of active account changed.
%{public}@: Active account did change. About to notify %llu observer%s.
%{public}@: Notifying client with observation token %{public}@ of updated active account.
%{public}@: Failed to obtain remote proxy to notify of updated active account; error = %{public}@.
%{public}@: Stopped observing cloud service status.
%{public}@: Beginning to observe cloud service status.
%{public}@: Subscription status was updated: %{public}@.
%{public}@: Bag was updated: %{public}@.
%{public}@: Handling %{public}@.
%{public}@: Found capabilities request operation for severed client connection %{public}@: %{public}@. Cancelling that operation.
%{public}@: Found observation token for severed client connection %{public}@: %{public}@. Forcibly ending observing cloud service status for this observation token.
%{public}@: Client connection was invalidated: %{public}@.
%{public}@: Client connection was interrupted: %{public}@.
%{public}@: Accepted new client connection: %{public}@.
%{public}@: %{public}@ originatingClientConnection = %{public}@.
%{public}@: Tried to remove unknown cloud service status observer with token: %{public}@. Ignoring.
%{public}@: Removed cloud service status observer with token: %{public}@.
%{public}@: Registered new cloud service status observer with token: %{public}@.
%{public}@: Failed to retrieve bundle identifier of the requesting application from the audit_token_t; instead, using bundle identifier from %{public}@, i.e. %{public}@.
%{public}@: Client has %{public}@ entitlement. No need to enforce privacy acknowledgement for cloud service capabilities request.
ICDNetworkAvailabilityService %p - XPC connection from %{public}@[%d]
Sending items request <%{public}@: %p method=%{public}@ action=%{public}@> on connection: <%{public}@ %p>
Fetching tracks failed with error: %{public}@
Playlist with cloud id = %llu is not in the database, skipping publish request.
Received playlist globalID: %{public}@ shareURL: %{public}@
SagaPublishPlaylistOperation failed with error: %{public}@
User notification did change settings
Received user notification authorization response. Granted: %d %{public}@
RePinning collection classes %{public}@ and configuration %{public}@
RePinning %{public}@
Clearing status for %{public}@
DownPinning collection classes %{public}@ and configuration %{public}@
DownPinning %{public}@
Not performing artwork info operation because power is required
Not performing artwork info operation because of elevated thermal levels
%{public}@ Skipping update because privacy acknowledgement is required
[%{public}@] Loading artwork info for %lu cloud IDs
No store account for source_type %ld, canceling %lu requests
Determined %lu operations with artworkType=%{public}@ need to resolve artwork URLs before executing.
Sending bulk artwork info request for %lu %{public}@ IDs.
Received %lu artwork info dictionaries for %{public}@ IDs.
Failed to resolve artwork URL for %{public}@ ID: %llu
Playlist with pid = %lld is not in the database, skipping add to cloud library.
ICDServer %p - _updateAirPlaySettingsForConfiguration - No action [No active configuration]
Updating AirPlay defaults: isAppleMusicSubscriber=%d, cloudLibraryIsOn=%d
ICDServer %p - _handleFamilyContentDeletionEvent - No action [No active configuration]
Received %llu account pairs for family content removal.
Family content removal (purchaser = %lld, downloader = %lld, family = %lld
Updating enhanced audio availability flag since it hasnt been set yet
Failed to fetch the bag to set the enhanced audio availability flag. err=%{public}@
<Key Refresh> - Setting timer to perform periodic subscription tasks for %llds (value from bag: %llds; bag's server correlation key: %{public}@; server environment: %{public}@).
<Key Refresh> - Performing periodic refresh of subscription status
<Key Refresh> - Skipping periodic subscription refresh because privacy acknowledgement is required
<Key Refresh> - Skipping subscription status refresh [issue retrieving user identities] - error=%{public}@ - userIdentities=%{public}@
Updating Media API URL mapping file
Media API URL mapping update completed. err=%{public}@
<Key Refresh> - Refreshing offline HLS keys
<Key Refresh> - Requesting refresh for key %{public}@
<Key Refresh> - Finished refreshing offline HLS keys
<Key Refresh> - Skipping refrshing offline HLS keys because we haven't tried to use them yet
<Key Refresh> - Skipping refreshing offline HLS keys because the user is not a subscriber
<Key Refresh> - Skipping subscription key refresh complete for user identity: %@ - Subscription status: %{public}@
<Key Refresh> - Periodic subscription refresh issue for user identity: %@ - error=%{public}@
<Key Refresh> - Periodic subscription refresh complete for user identity: %@
ICDServer %p - We have a pending operation to reload cloud library for secondary accounts]
ICDServer %p - Setting up operation to reload cloud library for secondary accounts in 10 minutes]
ICDServer %p - Starting operation to reload cloud library for secondary accounts]
ICDServer %p - _libraryManagementPolicyTypeForPlatform=%d, outCanRetryLoadingSecondaryAccounts=%{BOOL}u
Updating resolution cache file
Failed to update URL resolution cache file. err=%{public}@
Successfully updated URL resolution cache file
Handling updated bag notification
Setting cached enhanced audio availability flag to %{BOOL}u
Handling app install changed notification - apps=%{public}@, registration=%{public}@
ICDServer %p - _ensureMusicSubscriptionKeysAreAvailableForConfiguration - No action [No active configuration]
Ensuring that we have off-line music subscription keys if the user has a slot
No account properties - skipping subscription key refresh. err=%{public}@
Failed to get current subscription key status - skipping key refresh. err=%{public}@
Offline subscription keys already present for DSID %llu - skipping key refresh
Failed to obtain subscription status - skipping key refresh. err=%{public}@
Subscription not enabled - skipping key refresh
Subscription not enabled - skipping key refresh. status=%{public}@
Subscription refresh complete. status=%{public}@, err=%{public}@
Subscription refresh complete. status=%{public}@
ICDServer %p - _ensureSubscriptionInformationIsUpToDateForConfiguration - No action [No active configuration]
ICDServer %p - _updateServerAllowsExplicitContentSettingAutomatically - No action [No active configuration]
updating explicit content lastUploadedValue %{public}@, setting allowsExplicitContent %d, automatic %d
parental control settings have not changed - allowExplicitContent %d
User Identity %{public}@ has subscription status %{public}@.
Could not update parental settings to %d - error %{public}@.
ICDServer %p - _setupMPMediaLibraryFilteringForConfigurations - setting filtering type for default media library]
ICDServer %p - _setupMPMediaLibraryFilteringForConfigurations - setting filtering type for configuration=%{public}@]
ICDServer %p - _migrateToLatestUserVersion - Migrating library [dsid=%@]
ICDServer %p - _completeStartupSequenceIfNeeded - Nothing to do [blocked]
ICDServer %p - _completeStartupSequenceIfNeeded - Nothing to do [startup sequence completed]
ICDServer %p - Completing server setup ....
ICDServer %p - Server Setup - 1. Synchronized user identity store...
ICDServer %p - Server Setup - 2. Services initialized...
ICDServer %p - Server Setup - 3. Services started...
ICDServer %p - Server Setup - 4. Migration completed...
ICDServer %p - Server Setup - 5. Explicit content settings updated...
ICDServer %p - Server Setup - 6. Airplay settings updated...
ICDServer %p - Server Setup - 7. Handlers setup...
ICDServer %p - Server Setup - 8. Subscription keys retrieved...
ICDServer %p - Server setup completed
ICDServer %p - Can complete startup sequence [%{BOOL}u] - deviceUnlocked=%{public}u - deviceSetupComplete=%{public}u
ICDServer %p - _startAncillaryServices... 1
ICDServer %p - _startAncillaryServices... 2
ICDServer %p - _startAncillaryServices... 3
ICDServer %p - _startAncillaryServices... 4
ICDServer %p - _startAncillaryServices... 5
ICDServer %p - _startAncillaryServices... 6
ICDServer %p - _startAncillaryServices... 7
ICDServer %p - _startAncillaryServices... 8
ICDServer %p - _startAncillaryServices... 9
ICDServer %p - _startAncillaryServices... 10
ICDServer %p - _startAncillaryServices... 11
ICDServer %p - _startAncillaryServices... 12
ICDServer %p - _startAncillaryServices... 13
ICDServer %p - _startAncillaryServices... 14
ICDServer %p - _startAncillaryServices... 15
Setting up sigterm handler
Handling SIGTERM event
Cluster types changed. _outputClusterType=%d, newType=%d
Private listening changed, notifying assistant.
ICDServer %p - Ignoring notification [Phone number changed - Not ready]
ICDServer %p - Processing notification [Phone number changed]
ICDServer %p - Ignoring notification [First unlock - Not ready]
ICDServer %p - Processing notification [First unlock]
ICDServer %p - Ignoring notification [Application install/removal - Not ready]
ICDServer %p - Processing notification [Application install/removal]
ICDServer %p - Ignoring notification [Family deletion event - Not ready]
ICDServer %p - Processing notification [Family deletion event]
ICDServer %p - Ignoring notification [Auth service token - Not ready]
ICDServer %p - Processing notification [Auth service token]
ICDServer %p - Ignoring notification [Subscription status - Not ready]
ICDServer %p - Processing notification [Subscription status]
ICDServer %p - Ignoring notification [Allows explicit content - Not ready]
ICDServer %p - Processing notification [Allows explicit content]
Failed to remove explicit playback intents. err=%{public}@
ICDServer %p - Ignoring notification [Cloud authentication - Not ready]
ICDServer %p - Processing notification [Cloud authentication]
ICDServer %p - Ignoring notification [Cellular restriction - Not ready]
ICDServer %p - Processing notification [Cellular restriction]
[CellularDataEnabled] An active account exists, updating Purchase History...
[CellularDataEnabled] An active locker account exists, updating iCloud Music Library...
ICDServer %p - Ignoring notification [Import finished - Not ready]
ICDServer %p - Processing notification [Import finished]
Received library import did finish notification, triggering artist hero update.
ICDServer %p - Ignoring notification [Buddy done - Not ready]
ICDServer %p - Processing notification [Buddy done]
ICDServer %p - Ignoring notification [Account change - Not ready]
ICDServer %p - Processing notification [Account change]
ICDServer %p - Refusing XPC connection %{public}@ from %{public}@[%ld] for service %{public}@[%ld]: not ready.
ICDServer %p - Setting XPC connection %{public}@ from %{public}@[%ld] for service %{public}@[%ld].
ICDServer %p - Refusing XPC connection %{public}@ from %{public}@[%ld] for service %{public}@[%ld].
ICDServer %p - No XPC listener [unknown service]
ICDServer %p - Looking up XPC Listener [%{public}@]
ICDServer %p - Retrieved XPC Listener [%{public}@]
ICDServer %p - Unable to get an anonymous listener for %{public}@[%ld] - This usually indicates an attempt to access itunescloudd without the proper entitlements.
ICDServer %p - Attempt to retrieve handler for unsupported configuration [returning nil] - Configuration dsid=%@
Setting options for phone.
Setting options for apple tv.
Setting options for audio accessory.
Setting options for watch.
Setting options for watch. isMediaSyncingSupported=%{BOOL}u, prohibitLibraryUpload=%{BOOL}u, prohibitArtworkPrefetch =%{BOOL}u, supportsAutomaticEnablingiCloudMusicLibrary=%{BOOL}u
Setting options for phone/ipad/ipod.
Could not get ICML state reason, error=%{public}@
Not allowing automatic enabling of iCML notEnabledInBackup=%{BOOL}u, unsupportedDisposition=%{BOOL}u
isEnablingICMLDestructive=%{BOOL}u, cloudLibraryStateReason=%{public}@, supportsAutomaticEnablingiCloudMusicLibrary=%d
Allowing automatic enabling of iCML, isEnablingICMLDestructive=%{BOOL}u
Stopping server...
Stopped server in %f seconds.
Starting server...
Running second artist hero image update
Using polling frequency from bag: %ld
Failed to get polling frequency from the URL bag, using default polling frequency: %ld
Failed to receive response for URL bag, using default polling frequency: %ld
Taking power assertion: %{public}@
Releasing power assertion: %{public}@
Searching for artists added since database revision %lld
Found %lu artist(s) and %lu album artist(s) to update
A follow-up artist hero image update already exists, merging artist persistent ids to update.
A follow-up artist hero image update already exists, it should include the specific artist persistent ids.
Artist hero image update already in progress: scheduling a follow-up update.
The artist hero image update that is already in progress will already update all of the requests artists, skipping a follow-up update.
Found zero new artists and zero new album artists to update
Database revision is the same as the last update.
Cancelled after loading URL bag
'an-batch-size' was not in the bag, defaulting to batches of %lld.
'update-interval-seconds' was not in the bag, defaulting to %lld seconds.
Updating artist store IDs using the bulk artist name lookup service (batch size = %@)
Updating artist store IDs using the allArtistImagesMap
Updating artist store IDs using the single artist name lookup service
Failed to load URL bag, skipping artist hero image update
Failed to resolve an artist name lookup URL from the library match rules bag, skipping artist hero image upate.
Cancelled after looking up artist store ids by name.
Cancelled after gathering artist artwork tokens.
Batching %lu lookup requests in to chunks of size %d.
Cancelled after looking up artist hero image URLs.
Cancelled after updating artist artwork tokens.
Found %lu artist artwork tokens to download
Cancelled after starting downloads for artist hero images.
Enqueued all artist hero images to download.
Updating artist hero images complete.
Creating request for artwork token: %{public}@
Found hero image on disk for artwork token: %{public}@, attempting to import into database...
Inserted artist hero image for artwork token: %{public}@
Noticed cancel flag while downloading artist hero images, stopping...
Import request for artwork token: %{public}@ failed with error: %{public}@
Cancelled while processing artist artwork tokens.
Setting artist hero image artwork_token '%{public}@' for item_artist with pid: %lld (name = %{public}@)
Setting artist hero image artwork_token '%{public}@' for album_artist with pid: %lld (name = %{public}@)
Sending lookup request: %p
Waiting for lookup request: %p
Received response for lookup request: %p
Failed to receive response for lookup request: %p after %d seconds
Noticed cancel flag while looking up artist hero image URLs, stopping...
Failed to receive response for artist id look up request after %d seconds, cancelling request
Noticed cancel flag while looking up artist store ids by name, stopping...
Library match results for '%{public}@': %{public}@
Setting store_id '%lld' for item_artist with name: '%{public}@'
Setting store_id '%lld' for album_artist with name: '%{public}@'
Cancelled after updating artist store ids.
Noticed cancel flag while updating album_artist store ids, stopping...
[Album Artist] Assigned store artist ID %lld to %{public}@
[Album Artist] No store artist id found for: '%{public}@'
Noticed cancel flag while updating artist store ids, stopping...
[Item Artist] Assigned store artist ID %lld to %{public}@
[Item Artist] No store artist id found for: '%{public}@'
Attempting to fetch latest all-artist-images-map
all-artist-images-map-url: %{public}@
Failed to receive response for all-artist-images-map after %d seconds, cancelling request
Failed to get 'all-artist-images-map-url'. Cannot fetch map at this time.
Received all artist images map with %lu artist ids.
Failed to fetch all artist images map [HTTP %ld] - error: %{public}@
allArtistImagesMap.plist (null) needsUpdate: %d
allArtistImagesMap.plist (count = %lu) needsUpdate: %d
Cancelled after getting latest all artist image map data.
Cancelled after updating album_artist store ids.
Failed to resolve bulk artist name lookup URL from the library match rules bag, skipping artist hero image upate.
Batching %lu library match requests in to chunks of size %ld.
Failed to receive response for bulk artist id look up request after %d seconds, cancelling request
Bulk library match results: %{public}@
Last artist update time: %{time_t}zd
Elapsed time since last artist hero image update: %g, minimum: %g
Artist hero image update already in progress: scheduling a maximum of one additional update.
Updating all artist hero images...
Skipping update, not enough time has passed since last update.
Watchdog fired, operation queue contents: %{public}@
Watchdog fired, releasing power assertion: %{public}@
%{public}@ Saving pending changes [%lu], [%{public}@] - path=%@
%{public}@ Failed to encode pending changes. err=%{public}@
%{public}@ Retrieving pending changes - path=%@
%{public}@ Failed to decode pending changes. err=%{public}@
%{public}@ File exists at %{public}@ but we are unable to decode the changes. Clearing all pending changes
%{public}@ Failed to decode pending changes archived file with exception: %@
%{public}@ Removing pending changes for operation with operationIdentifier=%{public}@
%{public}@ Not removing pending changes for operation %p as is no retry identifier
%{public}@ Adding pending changes for operation with operationIdentifier=%{public}@
%{public}@ we already have a pending change for this operation=%p
%{public}@ addOrRemovePendingChange: - path=%@
%{public}@ Creating new pending changes coordinator - path=%@
operations count=%d, backgroundOperations count=%d
cloudServerOperations=%{public}@
%{public}@ Adding background operation %p (name=%{public}@) with priority %d
%{public}@ Adding operation %p (name=%{public}@) with priority %d
%{public}@ - Media importer query filter set to: %{public}@
%{public}@ - Supported media kinds=%{public}@, Disabled media kinds=%{public}@
Cancelling %d downloads
ICDAccountManagerState %p - Supported configurations is active configuration - dsid=%@
ICDAccountManagerState %p - Supported configurations contains %lu configurations
ICDAccountManagerState %p - Saving - %@
ICDAccountManagerState %p - stateForAccounts:baseConfiguration: - activeAccount=%@ - supportedAccounts=%@
ICDAccountManagerState %p - stateForAccounts: active account is not manageable!
ICDAccountManagerState %p - restoredStatedWithAccountStore: - Restoring from known accounts
ICDAccountManagerState %p - restoredStatedWithAccountStore: - Restoring from all accounts [no known accounts]
Sending request for %{public}@ (retryTimeRemaining = %g seconds)
Received error loading %{public}@: %{public}@
Received non-zero status response loading %{public}@: Status=%ld responseURL: %{public}@
Retrying loading %{public}@ in %g seconds
Failed to load %{public}@ after %g seconds
%{public}@ %p -  _executeBlockForAllOperations
%{public}@ %p -  Calling block on one of our background operations [%{public}@ %p]
%{public}@ %p -  Ignoring background operation which is not ours [%{public}@ %p]
%{public}@ %p -  Calling block on one of our operations [%{public}@ %p]
%{public}@ %p -  Ignoring operation which is not ours [%{public}@ %p]
CloudLibrary %p - Connected to library successfully.
CloudLibrary %p - Failed to connect to library with error: %{public}@
CloudLibrary %p - Loading URL bag...
CloudLibrary %p - failed to load url bag. err=%{public}@
CloudLibrary %p - Library Bag: %{public}@
CloudLibrary %p - Determined server URL: %{public}@
CloudLibrary %p - No library URL found, invalidating the URL bag and retrying...
CloudLibrary %p - No library URL found.
CloudLibrary %p - No URL bag found
CloudLibrary %p - Service disabled in URL bag.
CloudLibrary %p - Connected to library
CloudLibrary %p - Enqueuing unserviceable operation to the pending changes coordinator: <%{public}@: %p>
CloudLibrary %p - Calling completion block on non-executing, cancelled operation: <%{public}@: %p>
CloudLibrary %p - Enqueuing failed operation to the pending changes coordinator: <%{public}@: %p>
CloudLibrary %p - Performing pending changes with coordinator: <%{public}@ %p>
%{public}@ %p - cancelAllOperations
%{public}@ %p - Cancelling one of our operations [%{public}@ %p]
%{public}@ %p -  increasePriorityForAllOperations
%{public}@ %p -  Increasing priority of one of our operations [%{public}@ %p]
%{public}@ %p -  decreasePriorityForAllOperations
%{public}@ %p -  Decreasing priority of one of our operations [%{public}@ %p]
CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationStatusSuccess.
CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationStatusFailed.
CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationStatusPermanentlyFailed.
CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationStatusCancelled.
CloudLibrary %p - BACKGROUND OPERATION FAILED TO SET STATUS %{public}@ %p
CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusSuccess.
CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusFailed.
CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusPermanentlyFailed.
CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusCancelled.
CloudLibrary %p - OPERATION FAILED TO SET STATUS %{public}@ %p
CloudLibrary %p - No active account, returning nil library (which will suspend operation queue).
Set item properties response status code: %lu
Set item properties received no response
Set item properties response failed with error: %{public}@
%{public}@ - Posting Saga update in progress changed notification
%{public}@ - Received request to update cloud library (requestReason = %{public}@), allowNoisyAuthPrompt=%{BOOL}u, isExplicitUserAction=%{BOOL}u
%{public}@ - No WiFi connection, skipping update (requestReason = %{public}@)
%{public}@ - Rescheduling push notification triggered update when WiFi becomes available.
%{public}@ - Skipping update because privacy acknowledgement is required
%{public}@ - Could not initialize saga library
%{public}@ - Could not load user identity properties. error=%{public}@
%{public}@ - Locker bit is not set on the account. Will not updateLibrary for reason=%d, allowNoisyAuthPrompt=%{BOOL}u
%{public}@ - CloudIds are different. oldValue=%lld, currentValue=%lld
%{public}@ - Cloud library update already in progress, attaching completion handler.
%{public}@ - Enqueuing update cloud library operation (requestReason = %{public}@)
%{public}@ - Enqueuing cloud library reset update.
%{public}@ - Device is plugged in - checking for artwork to download
%{public}@ - Device was unplugged from power - cancelling artwork downloads
%{public}@ - Updating item properties for sagaID %lld. properties=%{public}@
%{public}@ - Issuing immediate property change: %{public}@
%{public}@ - Get genius items for saga ID: %llu
No saga artwork_token for screenshot item with persistent-id = %lld
%{public}@ - Got load artwork info request for container saga IDs: %{public}@
%{public}@ - Got load artwork info request for saga IDs: %{public}@
%{public}@ - No WiFi connection, skipping artwork info load.
%{public}@ - No active locker account, skipping import container artwork for saga ID: %llu
%{public}@ - No active locker account, skipping import screenshot for saga ID: %llu
%{public}@ - No active locker account, skipping import item artwork for saga ID: %llu
%{public}@ - Setting album properties %{public}@ on items with album persistent ID: %lld
%{public}@ - Setting cloud add to playlist behavior to: %{public}@
%{public}@ - Received request to add store playlist with global ID: %{public}@
%{public}@ - Received request to add store item with opaque ID: %{public}@ from %{public}@
%{public}@ - Received request to add store item with adam ID: %lld (referral albumAdamID = %lld)
%{public}@ - Received request to add store item with adam ID: %lld (referral playlistGlobalID = %{public}@)
%{public}@ - Received request to add store item with adam ID: %lld
%{public}@ - Updating subscribed playlists (reason = %{public}@) with cloud ids = %{public}@
%{public}@ - Setting artwork on saga playlist (pid = %lld)
%{public}@ - Removing playlists with cloud ids = %{public}@
%{public}@ - Removing items with cloud ids = %{public}@
%{public}@ - Publishing playlist with cloud id = %llu.
%{public}@ - Updating cloud playlist (pid = %lld), setting properties: %{public}@
%{public}@ - Adding store item with opaque ID: %{public}@ to cloud playlist (pid = %lld)
%{public}@ - Adding item with saga ID: %llu to cloud playlist (pid = %lld)
%{public}@ - Adding store item with adam ID: %lld to cloud playlist (pid = %lld, referral albumAdamID = %lld)
%{public}@ - Adding store item with adam ID: %lld to cloud playlist (pid = %lld, referral playlistGlobalID = %{public}@)
%{public}@ - Adding store item with adam ID: %lld to cloud playlist (pid = %lld)
%{public}@ - Creating Genius playlist (pid = %lld) with seed ID: %lld
%{public}@ - Creating cloud playlist for %{public}@ with initial properties: %{public}@
%{public}@ - Creating cloud playlist with initial properties: %{public}@
%{public}@ - ... with cloud tracks: %{public}@
%{public}@ - Created timer to update playlist play data
%{public}@ - Postponing playlist play data timer due to continued updates
%{public}@ - Uploading playlist play data since %{time}zd
%{public}@ - Upload playlist play data operation failed with status: %{public}@
%{public}@ - Skipping playlist play data upload (minimum time interval not satisfied (%.0f < %.0f)
%{public}@ - Created timer to update item play data
%{public}@ - Postponing item play data timer due to continued updates
%{public}@ - Uploading item play data since %{time}zd
%{public}@ - Upload item play data operation failed with status: %{public}@
%{public}@ - Skipping item play data upload (minimum time interval not satisfied (%.0f < %.0f)
%{public}@ - Updating playlist play data
%{public}@ = Fetched library DAAP configuration: %{public}@
%{public}@ - Updating item play data
%{public}@ - Fetched library DAAP configuration: %{public}@
%{public}@ - increasePriorityForAllOperations:
%{public}@ - decreasePriorityForAllOperations:
%{public}@ - cancelOperations: - Starting...
%{public}@ - cancelOperations: - Done!
%{public}@ - cancelOperations: - _updateCloudLibraryOperation
%{public}@ - cancelOperationsWithCompletion: - Starting...
%{public}@ - cancelOperationsWithCompletion: - Done!
%{public}@ - cancelPendingChangesWithCompletion: - Library=%@ - PendingChangesCoordinator:%@
%{public}@ - dealloc
No subscribed playlist saga ids to update.
Error updating global playlists: %{public}@
Cleared non Jalisco Genius data
Importing Jalisco Genius sim data for %li tracks
Error: Unable to process Jalisco Genius sim data at index %li (code: %i)
Jalisco Genius sim data import ended.
Error: Unable to open Jalisco Genius sim file at %{public}@
Found %ld tracks to assign global ids for Jalisco Genius
Track: %{public}@
Got global id %lli for persistent id %lli
Warning: No track for persistent id %lli
Error: Unable to open Jalisco Genius additional fields file at %{public}@
Jalisco Genius additional fields data import ended.
Noting date of Jalisco Genius import: %@
Waiting for Jalisco Genius results to download
Failed to download Jalisco Genius sim data with error: %{public}@
Failed to move Jalisco Genius sim data with error: %{public}@
Failed to download Jalisco Genius additional fields data with error: %{public}@
Failed to move Jalisco Genius additional fields data with error: %{public}@
Finished downloading Jalisco Genius additional fields data
Encountered error downloading Jalisco Genius additional fields data: %{public}@. NSURLSessionDownloadTask: %{public}@
Finished downloading Jalisco Genius sim data
Encountered error downloading Jalisco Genius sim data: %{public}@. NSURLSessionDownloadTask: %{public}@
Determine result URLs response: %@
Jalisco Genius metadata upload response: %{public}@
Making initial check for Jalisco Genius results request in %ld milliseconds
Jalisco Genius metadata upload response failed with status code: %ld error: %{public}@
Determine Jalisco Genius upload URL response: %{public}@
Found %lu items to upload for Jalisco Genius.
No items to upload for Jalisco Genius.
Using Jalisco Genius CUID: %{public}@
iCloud Music Library is enabled: skipping Jalisco Genius data update
Last date of Jalisco Genius import: %@
Elapsed time since last Jalisco Genius import: %g
Skipping Jalisco Genius update, time since last update: %g, min: %g
Sending request to update Cloud Library...
Can't update cloud library using current network - skipping
Update Match Library failed with status: %ld
CloudService %p - updatePinnedSubscribedPlaylistsWithConfiguration Unable to service request for cloud library - error=%{public}@
CloudService %p - disableCloudLibraryWithReason (%d) - Unable to service request for cloud library - error=%{public}@
CloudService %p - Starting to run a subscription status check
CloudService %p - authenticateForConfiguration (startInitialImport=%{BOOL}u, enableCloudLibraryPolicy=%d, isExplicitUserAction=%{BOOL}u) - Unable to service request for cloud library - error=%{public}@
CloudService %p - loading subscription status finished with error=%{public}@, not enabling iCML with policy=%d 
loadMissingArtworkForConfiguration: - Sending request to load missing artwork
CloudService %p - loadMissingArtworkForConfiguration: - Unable to service request for subscription - error=%{public}@
CloudService %p - loadMissingArtworkForConfiguration: - Unable to service request for purchases - error=%{public}@
CloudService %p - loadUpdateProgressForConfiguration: - Unable to service purchase request - error=%{public}@
CloudService %p - loadIsUpdateInProgressForConfiguration: - Unable to service purchase request - error=%{public}@
CloudService %p - loadIsUpdateInProgressForConfiguration: Saga [initial import: %{BOOL}u. Update in progress: %{BOOL}u], Jalisco [initial import: %{BOOL}u. Update in progress: %{BOOL}u]
CloudService %p - loadArtworkInfoForSubscriptionContainerPersistentIDs: - Unable to service request for subscription - error=%{public}@
CloudService %p - loadArtworkInfoForSubscriptionContainerPersistentIDs: - Sending subscription container artwork info: %{public}@ - error=%{public}@
CloudService %p - loadScreenshotInfoForSubscriptionPersistentIDs: - Unable to service request for subscription - error=%{public}@
CloudService %p - loadScreenshotInfoForSubscriptionPersistentIDs: - Sending subscription screenshot artwork info: %{public}@ - error=%{public}@
CloudService %p - loadArtworkInfoForSubscriptionItemPersistentIDs: - Unable to service subscription request - error=%{public}@
CloudService %p - loadArtworkInfoForSubscriptionItemPersistentIDs: - Sending subscription item artwork info: %{public}@ - error=%{public}@
CloudService %p - deprioritizeSubscriptionScreenshotForPersistentID: - Unable to service subscription request - error=%{public}@
CloudService %p - deprioritizeSubscriptionItemArtworkForPersistentID: - Unable to service subscription request - error=%{public}@
CloudService %p - %{public}@ - Unable to service subscription request - error=%{public}@
CloudService %p - Skipping album artist hero import (unsupported device) for persistentID: %lld
CloudService %p - %{public}@ - Unable to service artwork request - error=%{public}@
CloudService %p - importArtistHeroImageForPersistentID: - Skipping artist hero import (unsupported device) for persistentID: %lld
CloudService %p - updateArtistHeroImagesForConfiguration: - Unable to service artwork request - error=%{public}@
CloudService %p - updateArtistHeroImagesForConfiguration: - Received request to update artist hero images.
CloudService %p - updateArtistHeroImagesForConfiguration: - Skipping artist hero image update (unsupported device)
CloudService %p - deprioritizeAlbumArtistHeroImageForPersistentID: - Unable to service artist image request - error=%{public}@
CloudService %p - deprioritizeArtistHeroImageForPersistentID: - Unable to service artist image request - error=%{public}@
CloudService %p - setItemProperties: (purchaseHistoryID=%llu, properties=%{public}@) - Unable to service request for purchases - error=%{public}@
CloudService %p - hideItemsWithPurchaseHistoryIDs: (purchaseHistoryIDs=%{public}@) - Unable to service request for purchases - error=%{public}@
CloudService %p - loadBooksForStoreIDs: - Unable to process cloud request [missing DSID]
CloudService %p - loadBooksForStoreIDs %{public}@ - Unable to service request for purchases - error=%{public}@
CloudService %p - loadScreenshotInfoForPurchaseHistoryIDs (%{public}@) Unable to service request for purchases - error=%{public}@
CloudService %p - loadScreenshotInfoForPurchaseHistoryIDs: - Sending purchase history screenshot artwork info: %{public}@ - error=%{public}@
CloudService %p - loadArtworkInfoForPurchaseHistoryIDs (%{public}@) Unable to service request for purchases - error=%{public}@
CloudService %p - Sending purchase history artwork info: %{public}@
CloudService %p - deprioritizeScreenshotForPurchaseHistoryID(%llu) - Unable to service purchase request - error=%{public}@
CloudService %p - deprioritizeItemArtworkForPurchaseHistoryID(%llu) - Unable to service purchase request - error=%{public}@
CloudService %p - importScreenshotForPurchaseHistoryID(%llu): - Unable to service purchase request - error=%{public}@
CloudService %p - importItemArtworkForPurchaseHistoryID(%llu): - Unable to service purchase request - error=%{public}@
CloudService %p - loadJaliscoUpdateProgressForConfiguration: - Unable to service purchase request - error=%{public}@
CloudService %p - loadSagaUpdateProgressForConfiguration: - Jalisco update progress: %f
CloudService %p - loadIsJaliscoUpdateInProgressForConfiguration: - Unable to service purchase request - error=%{public}@
CloudService %p - loadIsJaliscoUpdateInProgressForConfiguration: - Jalisco initial import: %{BOOL}u. Update in progress: %{BOOL}u
CloudService %p - disableJaliscoGeniusForConfiguration Unable to service request for purchases - error=%{public}@
CloudService %p - loadJaliscoGeniusOperationStatusForConfiguration Unable to service request for purchases - error=%{public}@
CloudService %p - cancelUpdateJaliscoGeniusDataForConfiguration Unable to service request for purchases - error=%{public}@
CloudService %p - updateJaliscoGeniusDataForConfiguration Unable to service request for purchases - error=%{public}@
CloudService %p - enableJaliscoGeniusForConfiguration Unable to service request for purchases - error=%{public}@
CloudService %p - setJaliscoGeniusCUID Unable to service request for purchases - error=%{public}@
CloudService %p - loadJaliscoGeniusCUIDForConfiguration Unable to service request for purchases - error=%{public}@
CloudService %p - loadJaliscoGeniusLearnMoreURLForConfiguration Unable to service request for purchases - error=%{public}@
CloudService %p - loadIsJaliscoGeniusSupportedForConfiguration Unable to service request for purchases - error=%{public}@
CloudService %p - isMediaKindDisabledForJaliscoLibrary: - Unable to service purchase request - error=%{public}@
CloudService %p - removeJaliscoLibraryForConfiguration - Unable to service purchase request - error=%{public}@
CloudService %p - [BecomeActive::Jalisco] - Unable to service purchase request - error=%{public}@.
[BecomeActive::Jalisco] Last library update time: %{time_t}zd
[BecomeActive::Jalisco] Elapsed time since last library update: %g, minimum: %g
[BecomeActive::Jalisco] Periodic update on app focus disabled via bag.
[BecomeActive::Jalisco] Updating jalisco library...
CloudService %p - sdk_addStoreItemWithOpaqueID: - Unable to service request for cloud library - error=%{public}@
CloudService %p - sdk_createPlaylistWithPersistentID (%lld, properties=%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - setAlbumProperties: (albumID=%llu, properties=%{public}@) - Unable to service request for purchases - error=%{public}@
CloudService %p - uploadCloudPlaylistPropertiesForConfiguration - Unable to service request for purchases - error=%{public}@
CloudService %p - uploadCloudItemPropertiesForConfiguration - Unable to service request for purchases - error=%{public}@
CloudService %p - setItemProperties: (sagaID=%llu, properties=%{public}@) - Unable to service request for purchases - error=%{public}@
CloudService %p - loadLastKnownEnableICMLErrorStatusForConfiguration - Unable to service request for purchases - error=%{public}@
CloudService %p - removeItemsWithSagaIDs (%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - addStorePlaylistWithGlobalID (%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - addStoreItemWithAdamID (%lld) - Unable to service request for cloud library - error=%{public}@
CloudService %p - updateSubscribedPlaylistsWithSagaIDs (%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - uploadArtworkForPlaylistWithPersistentID (%lld) - Unable to service request for cloud library - error=%{public}@
CloudService %p - removePlaylistsWithSagaIDs (%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - publishPlaylistWithSagaID (%lld) - Unable to service request for cloud library - error=%{public}@
CloudService %p - addItemWithSagaID (sagaID=%lld, persistentID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - addStoreItemWithAdamIDToPlaylistWithPersistentID (adamID=%lld, persistentID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - setPlaylistProperties (properties=%{public}@, forPlaylistPersistentID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - createPlaylistWithPersistentID (%lld, properties=%{public}@): - Unable to service request for cloud library - error=%{public}@
CloudService %p - addGeniusPlaylistWithPersistentID (%lld) - Unable to service request for cloud library - error=%{public}@
CloudService %p - loadGeniusItemsForSagaID (%llu) - Unable to service request for cloud library - error=%{public}@
CloudService %p - loadScreenshotInfoForSagaIDs (%{public}@) - Unable to service cloud library request - error=%{public}@
CloudService %p - loadScreenshotInfoForSagaIDs: - Sending saga screenshot artwork info: %{public}@ - error=%{public}@
CloudService %p - loadArtworkInfoForContainerSagaIDs (%{public}@) - Unable to service cloud library request - error=%{public}@
CloudService %p - loadArtworkInfoForContainerSagaIDs: - Sending saga container artwork info: %{public}@ - error=%{public}@
CloudService %p - loadArtworkInfoForSagaIDs (%{public}@) - Unable to service cloud library request - error=%{public}@
CloudService %p - loadArtworkInfoForSagaIDs: - Sending saga artwork info: %{public}@ - error=%{public}@
CloudService %p - deprioritizeContainerArtworkForSagaID (%llu) - Unable to service cloud library request - error=%{public}@
CloudService %p - deprioritizeScreenshotForSagaID (%llu) - Unable to service cloud library request - error=%{public}@
CloudService %p - deprioritizeItemArtworkForSagaID (%llu) - Unable to service cloud library request - error=%{public}@
CloudService %p - importContainerArtworkForSagaID (sagaID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - importScreenshotForSagaID (sagaID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - importItemArtworkForSagaID (sagaID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - loadSagaUpdateProgressForConfiguration: - Unable to service cloud library request - error=%{public}@
CloudService %p - loadSagaUpdateProgressForConfiguration: - Saga update progress: %f
CloudService %p - loadIsSagaUpdateInProgressForConfiguration: - Unable to service cloud library request - error=%{public}@
CloudService %p - loadIsSagaUpdateInProgressForConfiguration: - Saga initial import: %{BOOL}u. Update in progress: %{BOOL}u
CloudService %p - setCloudAddToPlaylistBehavior (%d) - Unable to service request for purchases - error=%{public}@
CloudService %p - deauthenticateForConfiguration - Unable to service request for purchases - error=%{public}@
CloudService %p - updateJaliscoLibraryWithReason - Unable to service request for purchases/reason=%d - error=%{public}@
CloudService %p - updateSagaLibraryWithReason (%d) - Unable to service request for purchases - error=%{public}@
CloudService %p - [BecomeActive::Cloud] - Unable to service cloud library request - error=%{public}@.
[BecomeActive::Cloud] Could not get properties for user identity: %{public}@ - error=%{public}@.
[BecomeActive::Cloud] Last library update time: %{time_t}zd
[BecomeActive::Cloud] Elapsed time since last library update: %g, minimum: %g
[BecomeActive::Cloud] Last subscribed containers update time: %{time_t}zd
[BecomeActive::Cloud] Elapsed time since last subscribed containers update: %g, minimum: %g
[BecomeActive::Cloud] Subscribed containers periodic update disabled via bag.
[BecomeActive::Cloud] shouldUpdateAllSubscribedContainers=%{BOOL}u, shouldUpdateSubscribedContainersWithNoLastUpdateTimestamp=%{BOOL}u, shouldUpdateLibrary=%{BOOL}u
[BecomeActive::Cloud] Updating cloud library. databaseRevision=%u, allowNoisyAuthPrompts=%{BOOL}u, reason=%d
[BecomeActive::Cloud] Skipped cloud library update, updating all subscribed containers now...
[BecomeActive::Cloud] Skipped cloud library update and skipped updating all subscribed containers. Updating all subscribed containers with no last_update now...
[BecomeActive::Cloud] Update saga library completed successfully, updating all subscribed containers...
[BecomeActive::Cloud] Update saga library completed successfully, skipped updating all subscribed containers. Updating all subscribed containers with no last_update now...
Serializing body dictionary to plist: %{public}@
Compressing plist to path: %{public}@
Failed to serialize body dictionary to plist with error: %{public}@
failed to fetch bag. err=%{public}@
not creating request because url bag key '%{public}@' not found
%{public}@ Delivering response to remote client for request %@
%{public}@ Failed to obtain remote proxy to deliver subscription status response. error = %{public}@.
%{public}@ stopping...
%{public}@ starting up...
%{public}@ handler is no longer valid. Not running operation=%p
%{public}@ change count=%d, contentTasteChange=%{public}@
%{public}@  Operation=%p finished with error=%{public}@
%{public}@  response expiration date changed. previous date = %{public}@, updated date = %{public}@
%{public}@ calling completion handler for task identifier=%{public}@
%{public}@  response expiration date changed. old date = %{public}@, new date = %{public}@
%{public}@  retaining _responseExpirationDate=%{public}@
%{public}@  scheduleRetry=%{BOOL}u, isRetryTask=%{BOOL}u, _backOffIndex=%d
%{public}@  resetting _backOffIndex to 0
%{public}@  setting retryState=%d, _backOffIndex%d, backOffSeconds=%d
%{public}@  we already have a retry operation scheduled
%{public}@  starting retry operation to post content taste change
%{public}@  setting criteria to fire next content taste operation
%{public}@  updating criteria to fire next content taste operation at %{public}@
%{public}@  criteria to fire next content taste operation is unchanged
%{public}@  running default task tp update content taste
%{public}@ - cancelling %d operations and clearing all pending changes
%{public}@ - Requesting content taste for invalid reason=%d
%{public}@ - Need Cloud CUID to update Jalisco Genius
%{public}@ - Starting new update Jalisco Genius operation...
%{public}@ - Update Jalisco Genius operation in progress, attaching completion handler.
%{public}@ - Update Jalisco Genius completed successfully
%{public}@ - Update Jalisco Genius completed with error: %{public}@
%{public}@ - Disabled Jalisco Genius...
%{public}@ - JaliscoUpdateGeniusDataOperation status: %{public}@
%{public}@ - JaliscoUpdateGeniusDataOperation cancelled.
%{public}@ - No WiFi connection, skipping update of Genius data.
%{public}@ - No WiFi connection, cannot enable Genius.
%{public}@ - Setting Genius CUID to: %{public}@
%{public}@ - Returning Genius CUID: %{public}@
%{public}@ - Loading Genius Learn More URL from bag...
%{public}@ - Genius Learn More URL: %{public}@
%{public}@ - Checking URL bag for Genius support...
%{public}@ - URL bag result, Genius supported: %d
%{public}@ - cancelAllOperationsAndWaitForOperationsToFinish - wait=%{BOOL}u
%{public}@ - cancelling _updateLibraryOperation=%p
%{public}@ - cancelling %lu operations in genius update queue, _updateGeniusDataOperation=%p
%{public}@ - Failed to get account properties - DSID=%{public}@ err=%{public}@
%{public}@ - Reload media purchase history by removing media kind %d
%{public}@ - Reload media purchase history by adding media kind %d
%{public}@ - increasePriorityForAllOperations
%{public}@ - decreasePriorityForAllOperations
%{public}@ - cancelOperationsWithCompletion
%{public}@ - Removing purchase history due to user action
No purchase history artwork_token for screenshot item with persistent-id = %lld
%{public}@ - Got load artwork info request for %lu purchase history IDs
%{public}@ - No WiFi connection, skipping artwork load.
%{public}@ - No active account, skipping import screenshot for purchase history ID: %llu
%{public}@ - No active account, skipping import artwork for purchase history ID: %llu
%{public}@ - Received request to update item with purchaseHistoryID %llu properties: %{public}@
%{public}@ - Received request to hide purchaseHistoryIDs %{public}@
%{public}@ - Got update library request with reason %{public}@
%{public}@ - Purchase history import disabled via the preference
%{public}@ - No WiFi connection, skipping update (reason = %{public}@)
%{public}@ - Could not initialize jalisco library
%{public}@ - No account DSID - skipping update
%{public}@ - Updating media purchase history - Reason=%{public}@ - isInitialImport=%{BOOL}u - prefetchArtwork=%{BOOL}u, _updateLibraryOperation=%p
%{public}@ - Posting Jalisco update in progress notification
%{public}@ - Update library operation in progress, attaching completion handler.
%{public}@ - Library update finished.
%{public}@ - Importing artwork and screenshots if relevant [post library update]
%{public}@ - Update Jalisco library completed
%{public}@ - Clearing library for %{public}@
%{public}@ - Clearing library which failed to connect
Incoming XPC connection %{public}@ from %{public}@[%ld] for service %{public}@[%ld].
%{public}@: Client has %{public}@ entitlement. No need to check TCC access for cloud status monitor connection.
Refusing XPC connection %{public}@ from %{public}@[%d] for %{public}@[%ld]: %{public}@.
ICDAccountManagerStateChange %p - supportedConfigurationsChanged: NO [computation option driven]
ICDAccountManagerStateChange %p - Initial configurations [%@] -> Final configurations [%@]
ICDAccountManagerStateChange %p - configurationChanged: NO [computation option driven]
ICDAccountManagerStateChange %p - Initial configuration [%@] -> Final configuration [%@]
Jalisco Genius opt-out request failed with non-2xx status code %ld
Jalisco Genius opt-out request failed with error: %{public}@
Sending opt-out for Jalisco Genius CUID: %{public}@
No Jalisco Genius CUID, skipping opt-out request.
%{public}@ failed to load bag. err=%{public}@
%{public}@ Executing request for AMPMusicArtistNewContentResponse
%{public}@ Failure to find bag key for artist recommendations url. Bag Key: %{public}@
%{public}@ Sync request failed. err=%{public}@
%{public}@ Sync request failed. Artist new content request returned no data %{public}@
%{public}@ failed to decode response object
%{public}@ Beginning request for AMPMusicArtistNewContentResponse
Found %lu unavailable tracks to unlink with asset protection type = %d
Deleting assets with protection type = %d that are no longer cloud available: %{public}@
Failed to clear location for unavailable tracks with asset protection type = %d
Server requested restarting from initial items request, clearing previous pages and trying again...
Failed to remove obsolete items DAAP files with error: %@
Making items request with pagination token: %{public}@
Received non-200 response for items request, failing update from %u to %u
Update from %u to %u was cancelled
Failed to complete items request for update from %u to %u. err=%{public}@
Downloaded items response contains %u tracks -- overall progress = %.0f%% (%u/%u)
Import failed with error = %{public}@
Taking power assertion: com.apple.itunescloudd.SagaLoadLyricsOperation
Fetching lyrics for %ld tracks (batch size = %u)
[Bulk] Received %lu lyrics info dictionaries
[Bulk] Loading lyrics from URL '%{public}@'...
[Bulk] Error getting lyrics from %{public}@: %{public}@
[Bulk] Setting lyrics of length: %lu on track with saga ID %lld
[Bulk] No track found for saga ID %lld when attempting to set lyrics.
Releasing power assertion: com.apple.itunescloudd.SagaLoadLyricsOperation
Translated parent persistent-id %llu to cloud-id %llu
Failed to find parent cloud-id for persistent-id %llu
Updating playlist with cloud-id %u, setting trackList: %{public}@ properties: %{public}@
Playlist with pid = %lld does not have a cloud_id in the database, skipping save to cloud library.
No playlist saga ids to delete.
Sending delete request <%{public}@: %p method=%{public}@ action=%{public}@> for playlist saga ids: %{public}@
SagaRemovePlaylistOperation failed with error: %{public}@
%{public}@ Exception %{public}@ thrown while decoding archive
%{public}@ Exception %{public}@ thrown while encoding archive
%{public}@ Could not get DSID for configuration=%p. error=%{public}@
%{public}@ Cached content taste response at %{public}@ was deleted with status=%{BOOL}u, error=%{public}@ 
%{public}@ Got %lu content taste archives to remove with error %{public}@
%{public}@ Error %{public}@ removing archive at %{public}@
%{public}@ content taste response for %{public}@ was written to %{public}@ with status=%{BOOL}u
%{public}@ Error %{public}@ creating content taste update directory
Sending item property changes: %{public}@
Play data update succeeded for track with persistent ID: %lld
Bulk set item properties response code: %lu
Bulk set item properties response with error: %{public}@
%{public}@ Unable to get message entries for identifier %{public}@. err=%{public}@
%{public}@ Unable to find priority message.
%{public}@ Failed to create opt-in message %{public}@. err=%{public}@
%{public}@ Failed to save application message %{public}@. err=%{public}@
%{public}@ Failed to remove message with identifier %{public}@. err=%{public}@
%{public}@ Failed to download resources for message %{public}@. err=%{public}@
%{public}@ Unable to update opt-in message entry %{public}@.
%{public}@ Unable to retrieve message with identifier %{public}@. err=%{public}@
%{public}@ platform lookup failed. err=%@
%{public}@ Unable to create message. There is no store platform data for AdamID: %@
%{public}@ Creating application message for adamID %lld : %{public}@
%{public}@ Failed to serialize local notification data. err=%{public}@
%{public}@ Created new application message %{public}@ for adamID %lld
%{public}@ Failed to import lookup responses into media library. err=%{public}@
%{public}@ Failed to save application message %{public}@ for adamID %lld. err=%{public}@
%{public}@ Failed to remove expired message %{public}@
%{public}@ Removed expired message %{public}@
%{public}@ Failed to cache or compile MLModel err=%{public}@
%{public}@ failed to create cache directory structure err=%{public}@
%{public}@ Failed to remove cached MLModel. err=%{public}@
%{public}@ Failed to fetch recommendations model. err=%{public}@
%{public}@ Beginning Affininity Analysis using MLModel.
%{public}@ No matched results found
%{public}@ Failed to compute scores. err=%{public}@
%{public}@ Found %lu new recommendations: %{public}@
%{public}@ Generated %lu matches, but zero results scored above the model score threshold.
%{public}@ Received New Release Recommendations response, %lu new release albums, recoID: %@.
%{public}@ No recommendations found.
%{public}@ Matched recommendation already created for AdamID: %llu
%{public}@ Attempting to create new recommendation message for AdamID: %llu
%{public}@ Failed to remove message %{public}@, err=%{public}@
%{public}@ Removing stale messages for new recommendation update. Removed message: %{public}@
%{public}@ Updating recommendations
%{public}@ Skipping update because we failed to load account properties. err=%{public}@
%{public}@ Skipping update because the user is not signed in
%{public}@ Skipping update because we failed to obtain the subscription status. err=%{public}@
%{public}@ Skipping update because the user is a subscriber
%{public}@ No response model from the server - skipping update
%{public}@ Library Recommendations Computation Finished
%{public}@ Will not perform recommendations update. The user has disabled Apple Music.
%{public}@ Performing recommendations update on cellular network
%{public}@ User has opted out of artist and shows notifications; recommendations request is skipped.
%{public}@ Cache Directory URL is nil failed to cache recommendations data with path received: %{public}@
%{public}@ Failed to write to disk the matched recommendations. err=%{public}@
%{public}@ Cache Directory URL is nil failed to clear cached recommendations data with path received: %{public}@
%{public}@ Failed to create NSData blob from filePath=%{public}@ err=%{public}@
%{public}@ Handle new AMPMusicArtistNewContentResponse from notification finished
%{public}@ Forcing library recommendation analysis without a timer.
%{public}@ Scheduling periodic updates every %lld seconds
%{public}@ Stopping system service...
%{public}@ Starting system service...
No item purchase history ids to delete.
Sending hide items request <%{public}@: %p method=%{public}@ action=%{public}@> for purchase history ids: %{public}@
JaliscoHideItemOperation failed with error: %{public}@
No DAAP code found for item property: %{public}@
failed to create image source for resizing image at '%{public}@'
failed to create image destination for resizing image at '%{public}@'
failed to finalize resized image at '%{public}@'
failed to resize image at '%{public}@'
Cannot import artwork without artwork token.
Cannot import artwork without an asset URL.
Cannot import artwork on the watch while its not plugged in
Already have original on disk, attempting to import into database...
Downloading artwork from '%{public}@'
Downloaded artwork successfully from '%{public}@'
Failed to download artwork with HTTP status code %lld (URL = %{public}@)
Failed to download artwork from '%{public}@' with error: %{public}@
%{public}@ Setting criteria to fire the next play activity event on %{public}@
%{public}@ updating current criteria to flush the next play activity event from %{public}@ to %{public}@
%{public}@ Found existing activity to flush play activity events on %{public}@
%{public}@ Loading next play activity flush event to fire on %{public}@
%{public}@ Loading default nextFlushPlayActivityFireSyncInterval to %f
%{public}@ starting xpc activity to flush play activity events for endpoint identifier %s
%{public}@ not starting xpc activity for invalid endpoint identifier
%{public}@ Unknown state
%{public}@ Creating new criteria to fire on %{public}@ with grace period till %{public}@ for endpoint %{public}@
%{public}@ Not creating a new criteria for flush play activity events nextFlushPlayActivityFireSyncInterval (%f), testNextFlushPlayActivityFireSyncInterval (%f)
%{public}@ No active user identity - using default value (%f) to update the criteria to flush play activity events
%{public}@ Found postFrequency %f from bag
%{public}@ Did not find postFrequency from bag using default value (%f)
%{public}@ Responding to play activity controller did record notification, _nextFlushPlayActivityFireSyncInterval=%f, _testNextFlushPlayActivityFireSyncInterval=%f
%{public}@ Responding to endpoint revision info changed notification, _flushOperationCount=%lld
%{public}@ starting operation for flush play activity events for endpoint %{public}@ pendingOperationCount %lld, nextFlushPlayActivityFireSyncInterval %f, _testNextFlushPlayActivityFireSyncInterval %f 
%{public}@ invalid endpoint identifier to flush play activity events
%{public}@ finished flushing play activity events for identifier %{public}@ error %{public}@
%{public}@ Have pending play activity events to flush
%{public}@ pid %i is not entitled to connect to %s
%{public}@ connection from pid %i %s be accepted
%{public}@ connection from pid %i was invalidated
%{public}@ connection from pid %i was interrupted
%{public}@ no play activity events to complete
%{public}@ completed %lu play activity events for sessionToken:%llu with error %{public}@
%{public}@ no play activity events to insert
%{public}@ finished inserting %lu play activity events with error %{public}@
%{public}@ revision should be greater than 0 when removing play activity events
%{public}@ finished remvoving play activity events upto version %llu with error %{public}@
%{public}@ endpoint identifier cannot be nil when setting revision
%{public}@ finished setting revision %llu, revisionVersionToken %{public}@ for endpoint %{public}@ with error %{public}@
%{public}@ endpoint identifier cannot be nil when getting playactivity events
%{public}@ finished acquiring %lu play activity events for endpoint %{public}@ with error %{public}@
%{public}@ finished acquiring %lu play activity events for endpoint %{public}@ storeId %llu with error %{public}@
%{public}@ stopping ....
%{public}@ starting ....
Sending Books ItemsRequest [<%{public}@: %p method=%{public}@ action=%{public}@>] on Connection: [%p]
Books ItemsRequest retrieved a response: <%{public}@: %p code=%ld, length=%{bytes}lu> -- Code: %d
Books ItemsRequest failed with error: %{public}@
Failed to fetch active account DSID; error: %{public}@.
Failed to fetch revokeMusicUserTokenURL as part of updating cookies; error: %{public}@.
Failed to revoke Music User Tokens for applications %{public}@ with error %{public}@.
Failed to create a CFUserNotification to renew media library access for TCC expiration
Can not present dialog for renewing applications, parental controls active
User accepted to renew premissions for all expired bundle identifiers %{public}@
User rejected to renew premissions for all expired bundle identifiers, resetting for %{public}@
%{public}@ connection from pid %i beginning for service %{public}@.
%{public}@ connection from pid %i was invalidated for service %{public}@.
%{public}@ connection from pid %i was interrupted for service %{public}@.
CloudPendingChangesCoordinator %p - Saving pending changes [%lu] - path=%@
Failed to encode pending changes. err=%{public}@
CloudPendingChangesCoordinator %p - Retrieving pending changes - path=%@
Failed to decode pending changes. err=%{public}@
Failed to decode pending changes archived file with exception: %@
CloudPendingChangesCoordinator %p - removeAllPendingChangesWithCompletion - path=%@
CloudPendingChangesCoordinator %p - processPendingChangesUsingLibrary - path=%@ - libraryIdentifier=%@
Processing %lu pending changes...
No pending changes to process.
%lu pending changes failed again, persisting for another time.
CloudPendingChangesCoordinator %p - addPendingChange: - path=%@
CloudPendingChangesCoordinator %p - Creating new coordinator - path=%@
Device is already registered with CUID and TroveID
Failed to load url bag. err=%{public}@
Failed to register device because url bag is missing the 'cloud-add-computer' key
Sending request to register device
Failed to register device. err=%{public}@
Received response (length = %{bytes}lu)
Register device response: %{public}@
Successfully registered device (CUID: %{public}@, TroveID: %{public}@)
Updating mergeToICMLPreference to %d for activeLockerAccount
Invalid CloudLibraryStateReasonType (%d)
_CloudLibraryUtilitiesUpdateUserIdentityWithReason finished updating (cloudLibraryStateReason=%{public}@) for account [%{public}@] with error=%{public}@ in %f seconds
CloudLibraryUtilitiesUpdateAccountRemoveEnableICMLErrorReason finished updating (cloudLibraryStateReason=%{public}@) for %{public}@ with error=%{public}@ in %f seconds
Not updating account with disable iCML reason=%d. wasManuallyDisabled=%{BOOL}u, currentReason=%{public}@
Finished updating cloudLibraryStateReason=%{public}@ for %{public}@ with error=%{public}@ in %f seconds
migratorDisposition=%{public}@
preExistingStoreIdentifiers=%{public}@
Failed to load match status. error=%{public}@
Match is enabled
Account is not subscribed to iTunes Match.
Failed to load subscription status. error=%{public}@
Subscription is enabled
Account is not subscribed to iCloud Music Library.
Unsupported platform or invalid clusterType to call CloudLibraryUtilitiesCanLoadICMLForSecondaryAccounts status=%d, outputClusterType=%d
sagaOnDiskDatabaseRevision=%d. Loading cloud library for secondary accounts status=%d.
jaliscoOnDiskDatabaseRevision=%d. Loading cloud library for secondary accounts status=%d.
Loading cloud library for secondary accounts status=%d.
Sending add item request <%{public}@: %p method=%{public}@ action=%{public}@> for opaqueID: %{public}@
cloud-add permamently failed -- item limit exceeded
SagaCloudSDKAddOperation failed with error: %{public}@
Adding opaqueID %{public}@ to playlist with persistent id %lld (cloud-id %u)
Playlist pid %lld: is_src_remote %d, distinguished_kind %d, created %{public}@
Cloud library opt-out request failed with non-2xx status code %ld
Cloud library opt-out request failed with error: %{public}@
Sending cloud library opt-out for Cloud CUID: %{public}@ TroveID: %{public}@
No Cloud CUID or TroveID, skipping opt-out request.
%{public}@ - Starting operation, deleteDB=%{BOOL}u, disableActiveLockerAccount=%{BOOL}u, removeSourcePurchaseHistoryForMusicTracks=%{BOOL}u
%{public}@ - Not running DisableCloudLibraryOperation on non standalone wOS platform
%{public}@ - DSID=%lld, isActiveLocker=%{BOOL}u
%{public}@ - Disabling active locker account: %lld
%{public}@ - Not disabling active locker account: %lld, _disableActiveLockerAccount=%{BOOL}u, isActiveLocker=%{BOOL}u
%{public}@ - Posting notification [ICCloudClientIsAuthenticatedDidChangeNotification]
%{public}@ - Error (%{public}@) loading account properties. Not removing locker bit from the account
%{public}@ - Deleting database for deauthentication request
%{public}@ - Completed database changes.
%{public}@ - Completed operation.
%{public}@ - Saga on disk revision: %ld
%{public}@ - Clearing cloud ID for %ld visible playlists.
%{public}@ - Removing %ld remote playlists.
%{public}@ - Removing %ld visible playlists.
%{public}@ - Removing %ld genius mixes.
%{public}@ - Removing saga tracks
%{public}@ - Clearing database revision (%ld)
%{public}@ - Clearing sync database properties to force reset sync.
%{public}@ - Removing source purchase history for music and music videos
%{public}@ - Will remove source purchase history for %d tracks
%{public}@ - Cancelling any outstanding saga track downloads.
%{public}@ - Clearing saga database properties.
%{public}@ - Finished removing tracks with source purchase history with status=%{BOOL}u, error=%{public}@
%{public}@ - Posting cloud library availability did change notification (library became unavailable)
%{public}@ - Removing account %lld as the active locker account finished with error=%{public}@
ICDHandlersManager %p - Change processing done [no configurations]
ICDHandlersManager %p - Handler transition: [%p] -> [%p] - class=%{public}@
ICDHandlersManager %p - Activating handler %p - class=%{public}@ dsid=%{public}@
ICDHandlersManager %p - Deactivating handler %p - class=%{public}@ dsid=%{public}@
ICDHandlersManager %p - Unable to deactivate handler - class=%{public}@ dsid=%{public}@ error=%{public}@
ICDHandlersManager %p - Handler is no longer active - class=%{public}@ dsid=%{public}@
ICDHandlersManager %p - Enabling handlers for supported accounts
ICDHandlersManager %p - Deauthenticating handlers for unsupported accounts
ICDHandlersManager %p - Unable to deactivate handler with deauthentication [deleting it anyway] - class=%{public}@ dsid=%{public}@ error=%{public}@
ICDHandlersManager %p - Changing policy type from %d to %d
ICDHandlersManager %p - policy type is unchanged (%d)
ICDHandlersManager %p - updateHandlersWithAccountStateChange
ICDHandlersManager %p - No changes detected - %@
ICDHandlersManager %p - Change detected: %@
ICDHandlersManager %p - Supported configurations changed
ICDHandlersManager %p - Active account changed
ICDHandlersManager %p - setupHandlersWithAccountStateChange
ICDHandlersManager %p - setupHandlers - No account change on startup [restore - [%@]]
ICDHandlersManager %p - setupHandlers - Account change on startup [restore - [%@] -> [%@]]
ICDHandlersManager %p - setupHandlers - Parallel MU setup - State Change=%@
ICDHandlersManager %p - setupHandlers - Single & Sequential MU setups - State Change=%@
Unable to connect, current state: %ld
No library bag key. Failed to determine database ID.
Failed to fetch bag. err=%{public}@
Cloud database: %{public}@ (DatabaseID = %u)
Failed to load database ID, bag library: %{public}@
Sending request: <%{public}@: %p method=%{public}@ action=%{public}@> to URL: %{public}@
Request headers: %{public}@
Downloading response to: %{public}@
Received request %p response: <%{public}@: %p code=%ld, length=%{bytes}lu>
Suppressed authentication dialog for 401 error
Response: (HTTP 403, DMAP 403) - Request forbidden.
Response: (HTTP 403, DMAP %d) - Cloud DAAP Subscription Lapsed.
Response: (HTTP 403, DMAP %d) - Cloud DAAP Client Expired (client DAAP version is less than the minimum version supported by the server).
Response: (HTTP 403, DMAP %d) - Cloud DAAP Item Limit Exceeded (no additional items may be added to the library).
Response: (HTTP 403, DMAP %d) - Cloud DAAP Temporary Disconnect Requested.
Will retry request in %lu seconds
Response: (HTTP 403, DMAP %lu) - Unknown code.
Suppressed authentication dialog for 403 error
Unhandled Response: (HTTP %lu)
Parsed response data as DMAP error: %{public}@
Unhandled Response: (HTTP %lu)
Raw response data: %{public}@
Received no response for request %p, error %{public}@
Request timed out: %{public}@
Presenting one-time forced authentication request due to 403 error
Failed to obtain verification context for re-authentication. err=%{public}@
Skipping one-time forced authentication due to 403 error for sandbox-only account
Forcing authentication request due to 401 error on request: <%{public}@: %p method=%{public}@ action=%{public}@>
Presenting daily authentication request due to 401 error on request: <%{public}@: %p method=%{public}@ action=%{public}@>
Failed to obtain verification context to perform re-authentication. err=%{public}@
Skipping authentication request due to 401 error for sandbox-only account
Failed to send request to %{public}@. err=%{public}@
Failed to write response data to %{public}@. err=%{public}@
Compressing items to upload to path: %{public}@
failed to fetch bag key '%{public}@. err=%{public}@
Received an error loading response for %{public}@: %{public}@
Received response with error: Status-%ld when loading URL: %{public}@
Retrying loading %{public}@ URL in %ld milliseconds
Failed to load %{public}@ URL after %g seconds
Unknown required client generated header: %{public}@
Transmitting image
Not enough information to upload artwork asset.
uploadTask failed: %{public}@. %{public}@
SagaUploadPlaylistArtworkOperation cancelled -- After downloading work items
Uploading artwork asset using info: %{public}@
Artwork upload failed with error: %{public}@
Backing off before sending uploadResponsesRequest for %u ms
Backing off before sending second downloadRequestsRequest for %u ms
Download request phase 2 did not have all-work-completed=true: %{public}@
Received unknown response for download request phase 2: %{public}@
Received http %ld response when uploading artwork asset.
SagaUploadPlaylistArtworkOperation cancelled -- After initiating artwork upload
Received cloudID that does not match the one we initiated the asset upload for: %llu
Work item did not include upload-info and response-data, failing upload
SagaUploadPlaylistArtworkOperation cancelled -- After preparing to initiate artwork upload
Failed to get downloadRequestsURL
Failed to get uploadResponsesURL
Backing off before sending downloadRequestsRequest for %u ms
Playlist with pid = %lld is not in the database, skipping upload of playlist artwork to cloud library.
Playlist with pid = %lld does not have a cloud_id in the database, skipping upload of playlist artwork to cloud library.
Playlist with pid = %lld does not have user set playlist artwork in the database, skipping upload of playlist artwork to cloud library.
SagaUploadPlaylistArtworkOperation failed -- No artwork exists at: %{public}@
SagaUploadPlaylistArtworkOperation failed -- Artwork is zero bytes at: %{public}@
SagaUploadPlaylistArtworkOperation failed -- Missing DSID
SagaUploadPlaylistArtworkOperation failed -- Missing one required parameter: CUID (%{public}@) / TroveID (%{public}@)
%{public}@ Skipping initial import on non standalone wOS platform
%{public}@ - Received error when doing an update request: %{public}@
%{public}@ - On-disk database revision: %u
%{public}@ - Importer: <%{public}@ %p>
%{public}@ - <%{public}@ %p> required: %gs to process
%{public}@ - On-disk database revision is the same as the server revision, skipping update...
%{public}@ - No database revision to update to.
%{public}@ - No library for import.
%{public}@ - Query Filter: %{public}@
%{public}@ - Server database revision: %u
%{public}@ - Cancelling update...
%{public}@ - Import failed with error = %{public}@
%{public}@ - JaliscoNeedsUpdateForTokens is YES, forcing a full token refresh.
%{public}@ - Supported media kinds are different, forcing a full token refresh. lastSupportedMediaKinds=%{public}@, currentSupportedMediaKinds=%{public}@
%{public}@ - Received %lu artwork info lookup dictionaries for lookup operation in  %{public}@ IDs.
%{public}@ - Failed to fetch artwork info lookup in %{public}@ ID: %llu
No subscription artwork_token for item with persistent-id = %lld
%{public}@ - Failed to remove the shared enhanced audio keys. err=%{public}@
%{public}@ - Active account is nil, yet there are subscription tracks in the database... removing source now.
%{public}@ - Remove source failed with error: %{public}@
[%{public}@] Sending cloud-add request <%{public}@: %p method=%{public}@ action=%{public}@>
Unable to create cloud-add request, skipping...
Operation permanently failed, attempting to remove pending library content...
[%{public}@] failed with error: %{public}@
Updating in_my_library for cloud-add failure.
[%{public}@] Found %lu track(s) to update in_my_library (based on album store id)...
[%{public}@] Found %lu track(s) to update in_my_library...
Automatic Downloads are %{BOOL}u.
Could not get account for DSID=%lld. Automatic Downloads are %{BOOL}u
Could not get active account. Treating automatic downloads as disabled
[%{public}@] Updated in_my_library for track with persistent ID %lld
[%{public}@] Failed to update in_my_library for track with persistent ID %lld with error: %{public}@
Found %lu adam ids that didn't map to a track without a cloud-id, attempting with cloud-id now...
The server returned cloud-ids that are not in the database, but should be: %{public}@
Updating in_my_library for cloud-add success.
Found cloud-id already in library: %lld
Updating track with persistent-id %lld, setting cloud-id to %lld
Track with cloud-id %lld is already in the library, no updates needed...
Cloud-add request for adam ID = %lld
Deleted pending playlist with global id: %{public}@
Failed to delete pending playlist with global id: %{public}@
Could not find a pending playlist to delete with global id: %{public}@
Updating playlist with persistent-id %lld, setting cloud-id to %lld
Cloud-add request for playlist global ID = %{public}@
Cloud-add request for adam ID = %lld / container_pid = %lld
[SagaCloudAddItemToPlaylistOperation] Adding adam-id %lld to playlist with persistent id %lld (cloud-id %u)
[SagaCloudAddItemToPlaylistOperation] Playlist pid %lld: is_src_remote %d, distinguished_kind %d, created %{time}zd
%{public}@ %s operations in coordination with media downloads
Decreasing priority of artwork download (identifier = '%{public}@' type = %{public}@ source = %{public}@)
Boosting priority of artwork download (identifier = '%{public}@' type = %{public}@ source = %{public}@)
%{public}@: Request is already finished. Skipping running completion logic a second time.
%{public}@: %{public}@.
%{public}@: Encountered error: %{public}@.
%{public}@: Did complete privacy prompt with status: %{public}@.
%{public}@: Operation was cancelled upon beginning execution. Aborting.
%{public}@ No aps payload - ignoring push %{public}@
%{public}@Received legacy banner sync payload version - ignoring push %{public}@
%{public}@Received inApp messages push - syncing now
%{public}@Received unsupported in-app sync payload version - ignoring push %{public}@
%{public}@Failed to process incoming sync push message. err=%{public}@
Unknown fory-you module identifier %d
%{public}@ Received unsupported store push notification - ignoring. userInfo=%{public}@
%{public}@ Received jalisco push notification with no DSID - using active account. userInfo=%{public}@
%{public}@ Ignoring jalisco push message because we failed to load account properties. err=%{public}@
%{public}@ Ignoring jalisco push message for an inactive account
Received update request to media types: %{public}@
Ignoring push notification since it did not contain any supported media types
%{public}@ Received unhandled jalisco push action. userInfo=%{public}@
%{public}@ Received saga push notification with no DSID - using active account. userInfo=%{public}@
%{public}@ Ignoring saga push message because we failed to load account properties. err=%{public}@
%{public}@ Ignoring saga push message because the account no longer has icml enabled
%{public}@ Ignoring saga push message for an inactive account
%{public}@ Received unhandled saga push action. userInfo=%{public}@
%{public}@ received accounts changed notification - updating push notifications
%{public}@ Registering updated media types: %{public}@
%{public}@ Finished registering push token. err=%{public}@, statusCode=%{public}ld
%{public}@ Registering updated push token %{public}@
%{public}@ Finished registering push token. err=%{public}@, statusCode=%d
%{public}@ Updating push registration for configuration %{public}@
%{public}@ Failed to get properties for user identity %{public}@. err=%{public}@
%{public}@ Not registering for push notifications because privacy acknowledgement is required for media
%{public}@ Push notification registration up to date for configuration %{public}@
%{public}@ Failed to fetch bag configuration. error=%{public}@
%{public}@ Creating new APNS connection. %{public}@
%{public}@ Registering for push notifications. environment=%{public}@
%{public}@ We already have an operation enqueued to handle push registration
%{public}@ Updating push notification registration
%{public}@ No APNS token available - skipping registration for now
%{public}@ Finished push registration
%{public}@ Network reachability changed to available - updating push registration if needed
Push notification came from alternate environment, dropping notification from topic "%{public}@": %{public}@
Received push notification on topic "%{public}@": %{public}@
Ignoring push notification for an account that is not the active account. accountDSID=%lld, activeAccountDSID=%lld
Unknown push topic '%{public}@'
%{public}@ received new token '%{public}@'
Unhandled code in item response: %c%c%c%c (%u bytes long)
Unhandled code in play status response: %c%c%c%c
Unhandled code in item ID array response: %c%c%c%c
Unhandled code in browse listing response: %c%c%c%c
Unhandled code in listing collection response: %c%c%c%c
Authorized DSIDs revision code: %d
Returned count: %d
Unhandled code in items response: %c%c%c%c
Unhandled code in editing command response: %c%c%c%c
Unhandled code in dictionary collection: %c%c%c%c
Unhandled code in deleted item ID listing response: %c%c%c%c
Unhandled code in control prompt response: %c%c%c%c
Unhandled code in control interfaces response: %c%c%c%c
Unhandled code in cloud artwork info response: %c%c%c%c
Unhandled code in bulk cloud lyrics info response: %c%c%c%c
Unhandled code in bulk cloud artwork info response: %c%c%c%c
Unhandled code in authorized account token response: %c%c%c%c
Server revision number: %d
Unhandled code in update response: %c%c%c%c
Login session ID: %lu
Unhandled code in login response: %c%c%c%c
Unhandled code in response: %c%c%c%c
Warning: Invalid response data (code: %08x, length: %lu, encodedLength: %lu)
%{public}@ Stopped IDS service with name %{public}@.
%{public}@ Started IDS service with name %{public}@.
%{public}@ No client identifier or version was specified in the ICAppleMusicAPITokenRequest instance. Falling back to default client identifier for daemon: %{public}@/%{public}@.
%{public}@ Performing token request %{public}@ and %{public}@.
%{public}@ Encountered error trying to request Developer Token: %{public}@.
%{public}@ Successfully retrieved Developer Token.
%{public}@ Encountered error trying to request Music User Token: %{public}@.
%{public}@ Reporting completion for token request %{public}@ with response: %{public}@.
%{public}@ Received IDS message %lu:'%{public}s' from ID %{public}@
%{public}@ Received IDS message of unknown type %lu:'%{public}s' from ID %{public}@
%{public}@ Successfully sent response message; responseMessageIdentifier = %{public}@.
%{public}@ Failed to send response message with error = %{public}@.
No handler for BTA job named: %{public}s
Job Fired: JaliscoMediaDeferredPushUpate (satisfied = %d)
Jalisco media deferred push update job was not satisfied, trying again in an hour.
Jalisco media deferred push update failed with error %{public}@, trying again in an hour.
Job Fired: JaliscoMediaPeriodicPoll (satisfied = %d)
Jalisco media periodic poll update job was not satisfied, trying again tomorrow.
Jalisco media periodic poll update failed with error %{public}@, trying again tomorrow.
Job Fired: SagaDeferredPushUpate (satisfied = %d)
Saga deferred push update job not satisfied, trying again in an hour.
Saga deferred push update failed with error %{public}@, trying again in an hour.
%{public}@ - Uploading is not supported, no temporary cloud ids to clear.
%{public}@ - Clearing temporary item cloud ids.
%{public}@ - Clearing temporary container cloud ids.
%{public}@ - Determine result URLs response: %{public}@
%{public}@ - Failed to determine result URLs with server status code: %ld response: %{public}@
%{public}@ - Failed to determine result URLs with unknown error: %{public}@
%{public}@ - Server response indicates the subscription has lapsed
%{public}@ - Update response contained add to playlist behavior: %{public}@
%{public}@ - Received error when doing a library update request: %{public}@
%{public}@ - Failed to get a non-zero server database revision.
%{public}@ - On-disk database revision is the same as the server database revision, but force update is TRUE.
%{public}@ - On-disk database revision is the same as the server database revision, skipping update.
%{public}@ - shouldTreatInitialSagaImportAsFailed is set. Will force initial import to fail.
%{public}@ - Setting initial user version: %lli
%{public}@ - Posting cloud library availability did change notification (library became available)
%{public}@ - Triggering post-unification playlist artwork upload for playlist persistentID: %lld
%{public}@ - Error importing cloud library payload. Will treat as permanent failure
%{public}@ - Removing %lu items that do not have a cloud id.
%{public}@ - Removing %lu playlists that do not have a cloud id.
%{public}@ - Skipping _uploadLibrary because com.apple.itunescloudd:DisableLibraryUpload is set to YES
%{public}@ - Setting "should-upload" to true because MLCloudLibraryPrefersToMerge is set to YES
%{public}@ - Setting "should-upload" to true because com.apple.itunescloudd:ForceLibraryUnification is set to YES
%{public}@ - Found %lu songs to upload from query: %{public}@
%{public}@ - Error creating updateRequest.
%{public}@ - Sending upload library request: <%{public}@ %p>
%{public}@ - Got upload library response: <%{public}@ %p>
%{public}@ - Upload library response body: %{public}@
%{public}@ - Determined upload URL: %{public}@
%{public}@ - Failed to open file for writing library upload metadata plist with error: %{public}@
%{public}@ - Writing library upload metadata to plist at: %{public}@
%{public}@ - Found %lu playlists to upload from query: %{public}@
%{public}@ - Found zero playlists to upload.
%{public}@ - Determined results URL: %{public}@
%{public}@ - Saved results plist to: %{public}@
%{public}@ - Received empty response when getting match results.
%{public}@ - Failed to import cloud-id mapping.
%{public}@ - Received non-200 response when getting match results: %{public}@ error: %{public}@
%{public}@ - Failed to determined results URL
%{public}@ - Received non-200 response when uploading library: %{public}@ error: %{public}@
%{public}@ - Failed to determined upload URL, skipping upload
%{public}@ - Importing cloud-ids failed with error: %{public}@
%{public}@ - Updating cloud library operation (reason = %{public}@), isInitialImport=%{BOOL}u, isExplicitUserAction=%{BOOL}u
%{public}@ - Skipping initial import on non standalone wOS platform
%{public}@ - Preparing for initial library update...
%{public}@ - Failed to register device, bailing on initial library update
%{public}@ - Cancelled after registering device
%{public}@ - self.uploadResponseStatus=%d, treating as a hard failure
%{public}@ - self.uploadResponseStatus=%d, treating as a temporary failure
%{public}@ - Cancelled after uploading library metadata
%{public}@ - Cancelled after preparing library for cloud import
%{public}@ - finished with status=%d, failureReason=%{public}@
ICDAccountManager %p - Unable to compute state change [Error retrieving store accounts] - error=%{public}@
ICDAccountManager %p - Changing policy type currentValue=%d, newValue=%d
ICDAccountManager %p - policy type is unchanged currentValue=%d
ICDAccountManager %p - Unable to update state [No state change built]
ICDAccountManager %p - No account changes detected - %@
ICDAccountManager %p - No state changes detected - %@
ICDAccountManager %p - init - Unable to retrieve accounts [empty accounts for restoration fallback] - error=%{public}@
ICDAccountManager %p - init - _state=%@
Entity with persistenID: %lld, liked_state: %lld for property: %@ is imported and has the correct liked state
Entity with persistenID: %lld is imported and liked state updated from: %lld to: %lld for property: %@
Entity with persistenID: %lld is imported and liked state could not be updated from: %lld to: %lld for property: %@
Updating liked state for entity with persistenID: %lld of type %@ is not supported
Updating content taste for %lu global playlists
processing playlists with pendingplayListCount: %lu, currentBatchCount: %lu
Playlist Import [Count:(%lu) - Ids:(%@)]
Finished updating media taste for global playlists in %f seconds
Error %{public}@ adding global playlists
global playlist %{public}@ was not imported
Updated liked_state to:%lld for playlist with playlistID:%lld
Error updating liked_state to:%lld for playlist with playlistID:%lld
Container with PlaylistGlobalId: %@, persistentID: %lld, liked_state: %lld is imported and has the correct liked state
Updating content taste for %lu items
Removing [Count:(%lu), items:(%@)] non media items from import list
processing tracks with pendingItemCount: %lu, currentBatchCount: %lu for property: %@
processing albums with pendingItemCount: %lu, currentBatchCount: %lu
updated [tracks:(%lu) albums:(%lu)] new items to import[count:(%lu) items:(%@)]
Finished updating media taste for tracks/albums in %f seconds
Error importing %lu tracks to the library. %@
Imported %lu mediaItems for %lu storeAdamIds
Not updating liked_state for track with persistentID: %lld, storeAdamID: %lld as it has a valid storeSagaID: %lld
StoreAdamIds (%@) are marked as non-importable and will not be retried
Error updating StoreAdamIds (%@) as non-importable
Updated liked_state to:%lld for album with albumPid:%lld
Error updating liked_state to:%lld for album with albumPid:%lld
Album with albumStoreID: %lld, persistenID: %lld will be imported to include subscription data source
Album with storeItemId: %lld, albumPid: %lld, has storeSagaID: %lld and will not be updated
Album with storeItemId: %lld, albumPid: %lld, liked_state: %lld is imported and has the correct liked state
Album with storeItemID: %lld will be imported
Updated liked state to: %lld for track with persistenID:%lld
Error updating liked state to: %lld for track with persistenID:%lld
Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld for property: %@ will be imported to include subscription data source
Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld for property: %@ has a storeSagaID: %lld and will not be updated
Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld, liked_state: %lld for property: %@ is imported and has the correct liked state
Track with storeItemID: %lld will be imported
%{public}@ prepared %{public}@ content taste update items with expiration date %{public}@, revisionID %llu, isCached %d from server response
[71542113: %{public}@] Adding content taste item=%{public}@. actionTimestampMillis=%lld
%{public}@: Skipping content tast update because privacy acknowledgement is required
%{public}@ invalidating cached response
%{public}@ preparing cached response with date %{public}@, revisionID %llu
[%{public}@] Error getting sync url
[%{public}@] Error %{public}@ getting bag for identity %{public}@
[%{public}@] finished with response=%{public}@, error=%{public}@, responseErrorCode %ld
Sending container property changes: %{public}@
Play data update succeeded for container with persistent ID: %lld
Bulk set containers properties response code: %lu
Bulk set containers properties failed with error: %{public}@
Setting initial user version: %lli
Updating using connection: <%{public}@ %p>
Sending request %p to set add to playlist behavior to %{public}@
%p received response status code: %lu
%{public}@: Did complete request with error: %{public}@.
%{public}@: Did complete request; capabilities: %{public}@.
%{public}@: Requesting subscription status using %{public}@.
%{public}@: Did complete %{public}@. Encountered error: %{public}@.
%{public}@: Did complete %{public}@. Received subscription status response %{public}@.
%{public}@: Requesting properties for %{public}@.
%{public}@: Did complete user identity properties request. Encountered error: %{public}@.
%{public}@: Did complete user identity properties request.
%{public}@: Requesting bag using %{public}@.
%{public}@: Did complete bag request. Encountered error: %{public}@.
%{public}@: Did complete bag request. Received bag %{public}@ (serverCorrelationKey: %{public}@; serverEnvironment: %{public}@).
%{public}@: Operation was cancelled right before enqueuing privacy prompt operation: %{public}@. Aborting.
%{public}@: Performing %{public}@.
%{public}@: Bypassing enforcement of privacy acknowledgement.
%{public}@: Cancelling %{public}@.
%{public}@ Found %d user identities, error=%{public}@
%{public}@ not processing pending changes as music app is not installed
%{public}@ Could not get DSID from configuration=%p, error=%{public}@
%{public}@ got connection request from pid %i
%{public}@ pid %i is not entitled to connect to content taste update service
%{public}@ Music app is not installed - not running content taste update operation for playlist %{public}@
%{public}@ Cannot update content taste for item with globalPlaylistID=%{public}@, configuration=%{public}@
%{public}@ Posting content taste for item=%{public}@
%{public}@ Music app is not installed - not running content taste update operation for item %d, id %lld
%{public}@ Cannot update content taste for item type %d with storeId=%lld, configuration=%{public}@
%{public}@ Could not get DSID for configuration=%p, error=%{public}@
%{public}@ updating content taste for media items
%{public}@ Music app is uninstalled - clearing all content taste handlers
%{public}@ Music app is installed - starting a content taste update operation
Setting up artwork cache directory.
Error creating directory. path=%{public}@ error=%{public}@
Error removing item path=%{public}@
Artwork cache setup complete.
No valid album item properties to set, skipping updates to cloud library.
Sending edit request for %lu items
Album with pid = %lld has zero tracks with cloud_ids in the database, skipping updates to cloud library.
Album with pid = %lld has zero tracks in the database, skipping updates to cloud library.
Album with pid = %lld is not in the database, skipping updates to cloud library.
Set album item properties response: %lu
Set album item properties received no response
Set album item properties response with error: %{public}@
Appending cloud-id %lld to playlist with cloud-id %u
Updating playlist with cloud-id %u, setting trackList: %{public}@
No item saga ids to delete.
Sending delete request <%{public}@: %p method=%{public}@ action=%{public}@> for item saga ids: %{public}@
SagaRemoveItemOperation failed with error: %{public}@
Skipping artist hero image update due to insufficient network conditions
Device does not support ArtistImageRequestHandler
ICDBackgroundTaskManager %p - Job Fired: jaliscoDeferredPushUpate [%{public}@]
ICDBackgroundTaskManager %p - jaliscoDeferredPushUpate - Failed - error=%{public}@
ICDBackgroundTaskManager %p - jaliscoDeferredPushUpate - Succeeded
ICDBackgroundTaskManager %p - Job Fired: sagaDeferredPushUpate [%{public}@]
ICDBackgroundTaskManager %p - sagaDeferredPushUpate - Failed - error=%{public}@
ICDBackgroundTaskManager %p - sagaDeferredPushUpate - Succeeded
ICDBackgroundTaskManager %p - startPeriodicPolling -  Adjusting bag refresh interval of %lldmin --> 7 days
ICDBackgroundTaskManager %p - Unregistering task: %@
ICDBackgroundTaskManager %p - scheduleTask - taskName=%@
ICDBackgroundTaskManager %p - scheduleTask - Unable to perform asynchrounous work [%{public}@]
ICDBackgroundTaskManager %p - scheduleTask - Task failed [%{public}@]
ICDBackgroundTaskManager %p - scheduleTask - Task succeeded [%{public}@]
ICDBackgroundTaskManager %p - scheduleTask - Unable to force task termination [%{public}@]
ICDBackgroundTaskManager %p - _saveCurrentTasks - Saving current tasks failed - error=%{public}@
ICDBackgroundTaskManager %p - _saveCurrentTasks - State saved [%lu tasks] - tasks=%@
ICDBackgroundTaskManager %p - _restoreCurrentTasks - No state to restore
ICDBackgroundTaskManager %p - _restoreCurrentTasks - Restoring current tasks failed - error=%{public}@
ICDBackgroundTaskManager %p - _restoreCurrentTasks - State restored [%lu tasks] - tasks=%@
ICDBackgroundTaskManager %p - scheduleTaskOfType:forConfiguration: - newTask=%{public}@ - currentTasks=%@
ICDBackgroundTaskManager %p - scheduleTaskOfType:forConfiguration: - Task already on-going [%{public}@]
ICDBackgroundTaskManager %p - startPeriodicPolling
ICDBackgroundTaskManager %p - startPeriodicPolling - Setting timer to perform periodic poll for %llds (+/- %llds)
ICDBackgroundTaskManager %p - periodicPolling - Ignoring activity [State != Run]
ICDBackgroundTaskManager %p - periodicPolling - Ignoring polling [No configurations]
ICDBackgroundTaskManager %p - periodicPolling - Performing periodic sync
ICDBackgroundTaskManager %p - periodicPolling - Failed to update %@ %p [error] - error=%{public}@
ICDBackgroundTaskManager %p - periodicPolling - Updated %@ %p [no error]
ttsm
CRea
ttsm
stsm
CRea
rsmc
nnac
anac
lnac
spac
hsac
prac
sfac
svac
cvac
saac
raac
efac
evac
uQec
QMec
QNec
iasa
dbmc
sbmc
tbmc
mbmc
gnac
kmmc
csac
tnac
tsac
usac
SGec
pnac
lpac
