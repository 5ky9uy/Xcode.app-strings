?11GfLineSeg2d
10GfMatrix2d
15GfMultiInterval
7GfSize3
8GfRect2i
5GfRay
9GfRange2d
12GfQuaternion
9GfFrustum
N9GfFrustum14ProjectionTypeE
0E7GfPlane
8GfBBox3d
MbP?
?10GfInterval
11GfTransform
6GfLine
9GfRange2f
8GfLine2d
7GfSize2
9GfRange3f
?10GfRotation
9GfRange3d
N8GfCamera10ProjectionE
N8GfCamera12FOVDirectionE
10GfMatrix3f
9GfRange1f
9GfLineSeg
9GfRange1d
8@333333
@UUUUUU
@ffffff
12SdfSpecifier
7TfToken
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v107OObjectENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic3Abc3v107OObjectEE27__shared_ptr_default_deleteIS4_S4_EE
N12_GLOBAL__N_17_Parent5_PrimE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_17_Parent5_PrimENS_10shared_ptrIS3_E27__shared_ptr_default_deleteIS3_S3_EENS_9allocatorIS3_EEEE
NSt3__110shared_ptrIN12_GLOBAL__N_17_Parent5_PrimEE27__shared_ptr_default_deleteIS3_S3_EE
NSt3__110__function6__funcIPFvPN12_GLOBAL__N_118_PrimWriterContextEENS_9allocatorIS6_EES5_EE
NSt3__110__function6__baseIFvPN12_GLOBAL__N_118_PrimWriterContextEEEE
PFvPN12_GLOBAL__N_118_PrimWriterContextEE
FvPN12_GLOBAL__N_118_PrimWriterContextEE
NSt3__13mapId7VtValueNS_4lessIdEENS_9allocatorINS_4pairIKdS1_EEEEEE
N5boost6detail17sp_counted_impl_pI7VtValueEE
N5boost6detail17sp_counted_impl_pINSt3__13mapId7VtValueNS2_4lessIdEENS2_9allocatorINS2_4pairIKdS4_EEEEEEEE
N5boost6detail17sp_counted_impl_pIN18UsdAbc_AlembicUtil17_SampleForAlembic7_HolderEEE
N7Alembic4Util3v109ExceptionE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIaEE
NSt3__110__function6__funcIPFN18UsdAbc_AlembicUtil17_SampleForAlembicERK7VtValueENS_9allocatorIS8_EES7_EE
NSt3__110__function6__baseIFN18UsdAbc_AlembicUtil17_SampleForAlembicERK7VtValueEEE
PFN18UsdAbc_AlembicUtil17_SampleForAlembicERK7VtValueE
FN18UsdAbc_AlembicUtil17_SampleForAlembicERK7VtValueE
11SdfSpecType
NSt3__110__function6__funcINS_6__bindIMN12_GLOBAL__N_17_ParentEKFN7Alembic3Abc3v1017OCompoundPropertyEvEJNS_17reference_wrapperIKS4_EEEEENS_9allocatorISE_EEFS8_vEEE
NSt3__110__function6__baseIFN7Alembic3Abc3v1017OCompoundPropertyEvEEE
NSt3__16__bindIMN12_GLOBAL__N_17_ParentEKFN7Alembic3Abc3v1017OCompoundPropertyEvEJNS_17reference_wrapperIKS2_EEEEE
NSt3__118__weak_result_typeIMN12_GLOBAL__N_17_ParentEKFN7Alembic3Abc3v1017OCompoundPropertyEvEEE
NSt3__114unary_functionIPKN12_GLOBAL__N_17_ParentEN7Alembic3Abc3v1017OCompoundPropertyEEE
N7Alembic3Abc3v1013OSchemaObjectINS_7AbcGeom3v1012OXformSchemaEEE
N7Alembic7AbcGeom3v1012OXformSchemaE
N7Alembic3Abc3v107OSchemaINS_7AbcGeom3v1015XformSchemaInfoEEE
N7Alembic3Abc3v1017OCompoundPropertyE
N7Alembic3Abc3v1014OBasePropertyTINSt3__110shared_ptrINS_15AbcCoreAbstract3v1022CompoundPropertyWriterEEEEE
N7Alembic3Abc3v104BaseE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1012OXformSchemaEEENS_10shared_ptrIS8_E27__shared_ptr_default_deleteIS8_S8_EENS_9allocatorIS8_EEEE
NSt3__110shared_ptrIN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1012OXformSchemaEEEE27__shared_ptr_default_deleteIS8_S8_EE
N12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS2_7AbcGeom3v1012OXformSchemaEEEEE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS4_7AbcGeom3v1012OXformSchemaEEEEENS_10shared_ptrINS2_5_PrimEE27__shared_ptr_default_deleteISF_SC_EENS_9allocatorISC_EEEE
NSt3__110shared_ptrIN12_GLOBAL__N_17_Parent5_PrimEE27__shared_ptr_default_deleteIS3_NS2_9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS7_7AbcGeom3v1012OXformSchemaEEEEEEE
10GfMatrix4d
N7Alembic3Abc3v1013OSchemaObjectINS_7AbcGeom3v1011OSubDSchemaEEE
N7Alembic7AbcGeom3v1011OSubDSchemaE
N7Alembic7AbcGeom3v1015OGeomBaseSchemaINS1_14SubDSchemaInfoEEE
N7Alembic3Abc3v107OSchemaINS_7AbcGeom3v1014SubDSchemaInfoEEE
N7Alembic3Abc3v1013OSchemaObjectINS_7AbcGeom3v1014OFaceSetSchemaEEE
N7Alembic7AbcGeom3v1014OFaceSetSchemaE
N7Alembic7AbcGeom3v1015OGeomBaseSchemaINS1_17FaceSetSchemaInfoEEE
N7Alembic3Abc3v107OSchemaINS_7AbcGeom3v1017FaceSetSchemaInfoEEE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1011OSubDSchemaEEENS_10shared_ptrIS8_E27__shared_ptr_default_deleteIS8_S8_EENS_9allocatorIS8_EEEE
NSt3__110shared_ptrIN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1011OSubDSchemaEEEE27__shared_ptr_default_deleteIS8_S8_EE
N12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS2_7AbcGeom3v1011OSubDSchemaEEEEE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS4_7AbcGeom3v1011OSubDSchemaEEEEENS_10shared_ptrINS2_5_PrimEE27__shared_ptr_default_deleteISF_SC_EENS_9allocatorISC_EEEE
NSt3__110shared_ptrIN12_GLOBAL__N_17_Parent5_PrimEE27__shared_ptr_default_deleteIS3_NS2_9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS7_7AbcGeom3v1011OSubDSchemaEEEEEEE
12Vt_ArrayBase
N7VtArrayIiE9_StreamerE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIiEE
N5boost6detail17sp_counted_impl_pINSt3__16vectorIjNS2_9allocatorIjEEEEEE
N5boost6detail18sp_counted_impl_pdIPfNS_21checked_array_deleterIfEEEE
N5boost21checked_array_deleterIfEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIfEE
N7Alembic3Abc3v1013OSchemaObjectINS_7AbcGeom3v1015OPolyMeshSchemaEEE
N7Alembic7AbcGeom3v1015OPolyMeshSchemaE
N7Alembic7AbcGeom3v1015OGeomBaseSchemaINS1_18PolyMeshSchemaInfoEEE
N7Alembic3Abc3v107OSchemaINS_7AbcGeom3v1018PolyMeshSchemaInfoEEE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1015OPolyMeshSchemaEEENS_10shared_ptrIS8_E27__shared_ptr_default_deleteIS8_S8_EENS_9allocatorIS8_EEEE
NSt3__110shared_ptrIN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1015OPolyMeshSchemaEEEE27__shared_ptr_default_deleteIS8_S8_EE
N12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS2_7AbcGeom3v1015OPolyMeshSchemaEEEEE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS4_7AbcGeom3v1015OPolyMeshSchemaEEEEENS_10shared_ptrINS2_5_PrimEE27__shared_ptr_default_deleteISF_SC_EENS_9allocatorISC_EEEE
NSt3__110shared_ptrIN12_GLOBAL__N_17_Parent5_PrimEE27__shared_ptr_default_deleteIS3_NS2_9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS7_7AbcGeom3v1015OPolyMeshSchemaEEEEEEE
N7Alembic3Abc3v1013OSchemaObjectINS_7AbcGeom3v1013OCurvesSchemaEEE
N7Alembic7AbcGeom3v1013OCurvesSchemaE
N7Alembic7AbcGeom3v1015OGeomBaseSchemaINS1_16CurvesSchemaInfoEEE
N7Alembic3Abc3v107OSchemaINS_7AbcGeom3v1016CurvesSchemaInfoEEE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1013OCurvesSchemaEEENS_10shared_ptrIS8_E27__shared_ptr_default_deleteIS8_S8_EENS_9allocatorIS8_EEEE
NSt3__110shared_ptrIN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1013OCurvesSchemaEEEE27__shared_ptr_default_deleteIS8_S8_EE
N12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS2_7AbcGeom3v1013OCurvesSchemaEEEEE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS4_7AbcGeom3v1013OCurvesSchemaEEEEENS_10shared_ptrINS2_5_PrimEE27__shared_ptr_default_deleteISF_SC_EENS_9allocatorISC_EEEE
NSt3__110shared_ptrIN12_GLOBAL__N_17_Parent5_PrimEE27__shared_ptr_default_deleteIS3_NS2_9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS7_7AbcGeom3v1013OCurvesSchemaEEEEEEE
N5boost6detail18sp_counted_impl_pdIPhNS_21checked_array_deleterIhEEEE
N5boost21checked_array_deleterIhEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIhEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIN7Alembic7AbcGeom3v109BasisTypeEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIN7Alembic7AbcGeom3v109CurveTypeEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIN7Alembic7AbcGeom3v1016CurvePeriodicityEEE
N7Alembic3Abc3v1013OSchemaObjectINS_7AbcGeom3v1013OPointsSchemaEEE
N7Alembic7AbcGeom3v1013OPointsSchemaE
N7Alembic7AbcGeom3v1015OGeomBaseSchemaINS1_16PointsSchemaInfoEEE
N7Alembic3Abc3v107OSchemaINS_7AbcGeom3v1016PointsSchemaInfoEEE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1013OPointsSchemaEEENS_10shared_ptrIS8_E27__shared_ptr_default_deleteIS8_S8_EENS_9allocatorIS8_EEEE
NSt3__110shared_ptrIN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1013OPointsSchemaEEEE27__shared_ptr_default_deleteIS8_S8_EE
N12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS2_7AbcGeom3v1013OPointsSchemaEEEEE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS4_7AbcGeom3v1013OPointsSchemaEEEEENS_10shared_ptrINS2_5_PrimEE27__shared_ptr_default_deleteISF_SC_EENS_9allocatorISC_EEEE
NSt3__110shared_ptrIN12_GLOBAL__N_17_Parent5_PrimEE27__shared_ptr_default_deleteIS3_NS2_9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS7_7AbcGeom3v1013OPointsSchemaEEEEEEE
N5boost6detail18sp_counted_impl_pdIPyNS_21checked_array_deleterIyEEEE
N5boost21checked_array_deleterIyEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIyEE
N7Alembic3Abc3v1013OSchemaObjectINS_7AbcGeom3v1013OCameraSchemaEEE
N7Alembic7AbcGeom3v1013OCameraSchemaE
N7Alembic3Abc3v107OSchemaINS_7AbcGeom3v1016CameraSchemaInfoEEE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1013OCameraSchemaEEENS_10shared_ptrIS8_E27__shared_ptr_default_deleteIS8_S8_EENS_9allocatorIS8_EEEE
NSt3__110shared_ptrIN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1013OCameraSchemaEEEE27__shared_ptr_default_deleteIS8_S8_EE
N12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS2_7AbcGeom3v1013OCameraSchemaEEEEE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS4_7AbcGeom3v1013OCameraSchemaEEEEENS_10shared_ptrINS2_5_PrimEE27__shared_ptr_default_deleteISF_SC_EENS_9allocatorISC_EEEE
NSt3__110shared_ptrIN12_GLOBAL__N_17_Parent5_PrimEE27__shared_ptr_default_deleteIS3_NS2_9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS7_7AbcGeom3v1013OCameraSchemaEEEEEEE
25SdfAbstractDataTypedValueIfE
13SdfValueBlock
25SdfAbstractDataTypedValueI7GfVec2fE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1014OFaceSetSchemaEEENS_10shared_ptrIS8_E27__shared_ptr_default_deleteIS8_S8_EENS_9allocatorIS8_EEEE
NSt3__110shared_ptrIN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1014OFaceSetSchemaEEEE27__shared_ptr_default_deleteIS8_S8_EE
9TfWeakPtrIK15SdfAbstractDataE
15TfWeakPtrFacadeI9TfWeakPtrK15SdfAbstractDataE
NSt3__110__function6__funcIPFvPN12_GLOBAL__N_118_PrimReaderContextEENS_9allocatorIS6_EES5_EE
NSt3__110__function6__baseIFvPN12_GLOBAL__N_118_PrimReaderContextEEEE
PFvPN12_GLOBAL__N_118_PrimReaderContextEE
FvPN12_GLOBAL__N_118_PrimReaderContextEE
NSt3__110__function6__funcIN12_GLOBAL__N_114_CopyAdskColorENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
NSt3__110__function6__baseIFRKN7Alembic15AbcCoreAbstract3v108MetaDataEN12_GLOBAL__N_112_MetaDataTagEEEE
N12_GLOBAL__N_114_CopyAdskColorE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1020ITypedScalarPropertyINS3_11C4fTPTraitsEEEvLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_114_CopyAdskColorENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__baseIFNS_6vectorIdNS_9allocatorIdEEEEN12_GLOBAL__N_115_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_114_CopyAdskColorENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__baseIFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_116_CopyBoundingBoxENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_116_CopyBoundingBoxE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1020ITypedScalarPropertyINS3_13Box3dTPTraitsEEEvLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_116_CopyBoundingBoxENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_116_CopyBoundingBoxENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_115_CopyVisibilityENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_115_CopyVisibilityE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1020ITypedScalarPropertyINS3_12Int8TPTraitsEEEvLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_115_CopyVisibilityENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_115_CopyVisibilityENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
N7Alembic7AbcGeom3v1016ObjectVisibilityE
NSt3__110__function6__funcINS_6__bindIRKNS_8functionIFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS6_15ISampleSelectorERKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyEEEEJS7_SH_RKNS_12placeholders4__phILi2EEERKNSU_ILi1EEEEEENSD_IS11_EEFbSO_SK_EEE
NSt3__16__bindIRKNS_8functionIFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_15ISampleSelectorERKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyEEEEJS5_SF_RKNS_12placeholders4__phILi2EEERKNSS_ILi1EEEEEE
NSt3__118__weak_result_typeINS_8functionIFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_15ISampleSelectorERKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyEEEEEE
NSt3__122__weak_result_type_impINS_8functionIFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_15ISampleSelectorERKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyEEEELb1EEE
NSt3__134__maybe_derive_from_unary_functionINS_8functionIFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_15ISampleSelectorERKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyEEEELb0EEE
NSt3__135__maybe_derive_from_binary_functionINS_8functionIFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_15ISampleSelectorERKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyEEEELb0EEE
N7Alembic3Abc3v1013ISchemaObjectINS_7AbcGeom3v1012IXformSchemaEEE
N7Alembic7AbcGeom3v1012IXformSchemaE
N7Alembic3Abc3v107ISchemaINS_7AbcGeom3v1015XformSchemaInfoEEE
N7Alembic3Abc3v1017ICompoundPropertyE
N7Alembic3Abc3v1014IBasePropertyTINSt3__110shared_ptrINS_15AbcCoreAbstract3v1022CompoundPropertyReaderEEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_110_CopyXformENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_110_CopyXformE
NSt3__110__function6__funcIN12_GLOBAL__N_110_CopyXformENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_110_CopyXformENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_114_CopySyntheticENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_114_CopySyntheticE
NSt3__110__function6__funcIN12_GLOBAL__N_114_CopySyntheticENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_114_CopySyntheticENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_116_CopyOrientationENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_116_CopyOrientationE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1020ITypedScalarPropertyINS3_14StringTPTraitsEEEvLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_116_CopyOrientationENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_116_CopyOrientationENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_11P3fTPTraitsEEE7GfVec3fLb1EEENS_9allocatorISB_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS3_11P3fTPTraitsEEE7GfVec3fLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_11P3fTPTraitsEEE7GfVec3fLb1EEENS_9allocatorISB_EEFNS_6vectorIdNSC_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_11P3fTPTraitsEEE7GfVec3fLb1EEENS_9allocatorISB_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS6_15ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_11V3fTPTraitsEEE7GfVec3fLb1EEENS_9allocatorISB_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS3_11V3fTPTraitsEEE7GfVec3fLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_11V3fTPTraitsEEE7GfVec3fLb1EEENS_9allocatorISB_EEFNS_6vectorIdNSC_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_11V3fTPTraitsEEE7GfVec3fLb1EEENS_9allocatorISB_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS6_15ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_13Int32TPTraitsEEEiLb1EEENS_9allocatorISA_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS3_13Int32TPTraitsEEEiLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_13Int32TPTraitsEEEiLb1EEENS_9allocatorISA_EEFNS_6vectorIdNSB_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_13Int32TPTraitsEEEiLb1EEENS_9allocatorISA_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS6_15ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_122_CopySubdivisionSchemeENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_122_CopySubdivisionSchemeE
NSt3__110__function6__funcIN12_GLOBAL__N_122_CopySubdivisionSchemeENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_122_CopySubdivisionSchemeENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_124_CopyInterpolateBoundaryENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_124_CopyInterpolateBoundaryE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1020ITypedScalarPropertyINS3_13Int32TPTraitsEEEvLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_124_CopyInterpolateBoundaryENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_124_CopyInterpolateBoundaryENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_135_CopyFaceVaryingInterpolateBoundaryENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_135_CopyFaceVaryingInterpolateBoundaryE
NSt3__110__function6__funcIN12_GLOBAL__N_135_CopyFaceVaryingInterpolateBoundaryENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_135_CopyFaceVaryingInterpolateBoundaryENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_15Float32TPTraitsEEEfLb1EEENS_9allocatorISA_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS3_15Float32TPTraitsEEEfLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_15Float32TPTraitsEEEfLb1EEENS_9allocatorISA_EEFNS_6vectorIdNSB_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_15Float32TPTraitsEEEfLb1EEENS_9allocatorISA_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS6_15ISampleSelectorEEEE
N7VtArrayIfE9_StreamerE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011V2fTPTraitsEEE7GfVec2fLb0EEENS_9allocatorISD_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS1_3Abc3v1011V2fTPTraitsEEE7GfVec2fLb0EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011V2fTPTraitsEEE7GfVec2fLb0EEENS_9allocatorISD_EEFNS_6vectorIdNSE_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011V2fTPTraitsEEE7GfVec2fLb0EEENS_9allocatorISD_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS9_15ISampleSelectorEEEE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1016TypedArraySampleINS3_14Uint32TPTraitsEEENS1_15AbcCoreAbstract3v1013TArrayDeleterIjEENS_9allocatorIS6_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIjEE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1016TypedArraySampleINS3_11V2fTPTraitsEEENS1_15AbcCoreAbstract3v1013TArrayDeleterIN9Imath_2_24Vec2IfEEEENS_9allocatorIS6_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIN9Imath_2_24Vec2IfEEEE
7VtArrayI7GfVec2fE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyIndicesIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011V2fTPTraitsEEEEENS_9allocatorISC_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyIndicesIN7Alembic7AbcGeom3v1015ITypedGeomParamINS1_3Abc3v1011V2fTPTraitsEEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyIndicesIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011V2fTPTraitsEEEEENS_9allocatorISC_EEFNS_6vectorIdNSD_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyIndicesIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011V2fTPTraitsEEEEENS_9allocatorISC_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS9_15ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011V2fTPTraitsEEE7GfVec2fLb1EEENS_9allocatorISD_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS1_3Abc3v1011V2fTPTraitsEEE7GfVec2fLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011V2fTPTraitsEEE7GfVec2fLb1EEENS_9allocatorISD_EEFNS_6vectorIdNSE_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011V2fTPTraitsEEE7GfVec2fLb1EEENS_9allocatorISD_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS9_15ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011N3fTPTraitsEEE7GfVec3fLb1EEENS_9allocatorISD_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS1_3Abc3v1011N3fTPTraitsEEE7GfVec3fLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011N3fTPTraitsEEE7GfVec3fLb1EEENS_9allocatorISD_EEFNS_6vectorIdNSE_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011N3fTPTraitsEEE7GfVec3fLb1EEENS_9allocatorISD_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS9_15ISampleSelectorEEEE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1016TypedArraySampleINS3_11N3fTPTraitsEEENS1_15AbcCoreAbstract3v1013TArrayDeleterIN9Imath_2_24Vec3IfEEEENS_9allocatorIS6_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIN9Imath_2_24Vec3IfEEEE
N7Alembic3Abc3v1013ISchemaObjectINS_7AbcGeom3v1014IFaceSetSchemaEEE
N7Alembic7AbcGeom3v1014IFaceSetSchemaE
N7Alembic7AbcGeom3v1015IGeomBaseSchemaINS1_17FaceSetSchemaInfoEEE
N7Alembic3Abc3v107ISchemaINS_7AbcGeom3v1017FaceSetSchemaInfoEEE
NSt3__110__function6__funcIN12_GLOBAL__N_122_CopyFaceSetFamilyTypeENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_122_CopyFaceSetFamilyTypeE
N12_GLOBAL__N_116_CopyFaceSetBaseE
NSt3__110__function6__funcIN12_GLOBAL__N_122_CopyFaceSetFamilyTypeENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_122_CopyFaceSetFamilyTypeENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
N7Alembic7AbcGeom3v1013ICurvesSchemaE
N7Alembic7AbcGeom3v1015IGeomBaseSchemaINS1_16CurvesSchemaInfoEEE
N7Alembic3Abc3v107ISchemaINS_7AbcGeom3v1016CurvesSchemaInfoEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1015Float32TPTraitsEEEfLb1EEENS_9allocatorISC_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS1_3Abc3v1015Float32TPTraitsEEEfLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1015Float32TPTraitsEEEfLb1EEENS_9allocatorISC_EEFNS_6vectorIdNSD_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1015Float32TPTraitsEEEfLb1EEENS_9allocatorISC_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS9_15ISampleSelectorEEEE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1016TypedArraySampleINS3_15Float32TPTraitsEEENS1_15AbcCoreAbstract3v1013TArrayDeleterIfEENS_9allocatorIS6_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIfEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_15Float32TPTraitsEEEdLb1EEENS_9allocatorISA_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS3_15Float32TPTraitsEEEdLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_15Float32TPTraitsEEEdLb1EEENS_9allocatorISA_EEFNS_6vectorIdNSB_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_15Float32TPTraitsEEEdLb1EEENS_9allocatorISA_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS6_15ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_14Uint64TPTraitsEEExLb1EEENS_9allocatorISA_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS3_14Uint64TPTraitsEEExLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_14Uint64TPTraitsEEExLb1EEENS_9allocatorISA_EEFNS_6vectorIdNSB_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_14Uint64TPTraitsEEExLb1EEENS_9allocatorISA_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS6_15ISampleSelectorEEEE
N7VtArrayIxE9_StreamerE
N7Alembic3Abc3v1013ISchemaObjectINS_7AbcGeom3v1013ICameraSchemaEEE
N7Alembic7AbcGeom3v1013ICameraSchemaE
N7Alembic3Abc3v107ISchemaINS_7AbcGeom3v1016CameraSchemaInfoEEE
NSt3__110__function6__funcIN12_GLOBAL__N_122_CopyCameraFocalLengthENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_122_CopyCameraFocalLengthE
N12_GLOBAL__N_115_CopyCameraBaseE
NSt3__110__function6__funcIN12_GLOBAL__N_122_CopyCameraFocalLengthENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_122_CopyCameraFocalLengthENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_129_CopyCameraHorizontalApertureENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_129_CopyCameraHorizontalApertureE
NSt3__110__function6__funcIN12_GLOBAL__N_129_CopyCameraHorizontalApertureENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_129_CopyCameraHorizontalApertureENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_127_CopyCameraVerticalApertureENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_127_CopyCameraVerticalApertureE
NSt3__110__function6__funcIN12_GLOBAL__N_127_CopyCameraVerticalApertureENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_127_CopyCameraVerticalApertureENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_135_CopyCameraHorizontalApertureOffsetENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_135_CopyCameraHorizontalApertureOffsetE
NSt3__110__function6__funcIN12_GLOBAL__N_135_CopyCameraHorizontalApertureOffsetENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_135_CopyCameraHorizontalApertureOffsetENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_133_CopyCameraVerticalApertureOffsetENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_133_CopyCameraVerticalApertureOffsetE
NSt3__110__function6__funcIN12_GLOBAL__N_133_CopyCameraVerticalApertureOffsetENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_133_CopyCameraVerticalApertureOffsetENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_124_CopyCameraClippingRangeENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_124_CopyCameraClippingRangeE
NSt3__110__function6__funcIN12_GLOBAL__N_124_CopyCameraClippingRangeENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_124_CopyCameraClippingRangeENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
23UsdAbcAlembicFileFormat
21Sdf_FileFormatFactoryI23UsdAbcAlembicFileFormatE
25Sdf_FileFormatFactoryBase
8TfRefPtrI18UsdAbc_AlembicDataE
15TfWeakPtrFacadeI9TfWeakPtrK13SdfFileFormatE
18UsdAbc_AlembicData
N5boost6detail17sp_counted_impl_pI24UsdAbc_AlembicDataReaderEE
7VtArrayIbE
N7VtArrayIbE9_StreamerE
7VtArrayI10GfMatrix2dE
7VtArrayI10GfMatrix3dE
7VtArrayI10GfMatrix4dE
7VtArrayI7GfVec2dE
7VtArrayI7GfVec2iE
7VtArrayI7GfVec3dE
7VtArrayI7GfVec3iE
7VtArrayI7GfVec4dE
7VtArrayI7GfVec4fE
7VtArrayI7GfVec4iE
12SdfAssetPath
N5boost14operators_impl21less_than_comparable1I12SdfAssetPathNS0_20equality_comparable1IS2_NS0_16operators_detail10empty_baseIS2_EEEEEE
N5boost14operators_impl20equality_comparable1I12SdfAssetPathNS0_16operators_detail10empty_baseIS2_EEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic7_HolderE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_EmptyHolderE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ErrorHolderE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIbN7Alembic4Util3v106bool_tELm1EEENS_9allocatorIS8_EEFbRKNS4_3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS9_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
NSt3__110__function6__baseIFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_15ISampleSelectorERKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIbN7Alembic4Util3v106bool_tELm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIbN7Alembic4Util3v106bool_tELm1EEENS_9allocatorIS8_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIN7Alembic4Util3v106bool_tEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIbN7Alembic4Util3v106bool_tELm1EEENS_9allocatorIS8_EEFbRKNS4_3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS9_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIbN7Alembic4Util3v106bool_tELm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIbN7Alembic4Util3v106bool_tELm1EEENS_9allocatorIS8_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPN7Alembic4Util3v106bool_tENS_21checked_array_deleterIS5_EEEE
N5boost21checked_array_deleterIN7Alembic4Util3v106bool_tEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIN7Alembic4Util3v106bool_tEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIhhLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIhhLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIhhLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIhEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIhhLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIhhLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIhhLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIiiLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIiiLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIiiLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIiiLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIiiLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIiiLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPiNS_21checked_array_deleterIiEEEE
N5boost21checked_array_deleterIiEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIiEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIjjLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIjjLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIjjLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIjEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIjjLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIjjLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIjjLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPjNS_21checked_array_deleterIjEEEE
N5boost21checked_array_deleterIjEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIjEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIxxLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIxxLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIxxLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIxEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIxxLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIxxLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIxxLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPxNS_21checked_array_deleterIxEEEE
N5boost21checked_array_deleterIxEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIxEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIyyLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIyyLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIyyLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIyEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIyyLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIyyLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIyyLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIN8pxr_half4halfE4halfLm1EEENS_9allocatorIS7_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS8_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIN8pxr_half4halfE4halfLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIN8pxr_half4halfE4halfLm1EEENS_9allocatorIS7_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderI4halfEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIN8pxr_half4halfE4halfLm1EEENS_9allocatorIS7_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS8_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIN8pxr_half4halfE4halfLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIN8pxr_half4halfE4halfLm1EEENS_9allocatorIS7_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIP4halfNS_21checked_array_deleterIS2_EEEE
N5boost21checked_array_deleterI4halfEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderI4halfEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIffLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIffLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIffLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIfEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIffLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIffLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIffLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIddLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIddLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIddLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIdEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIddLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIddLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIddLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPdNS_21checked_array_deleterIdEEEE
N5boost21checked_array_deleterIdEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIdEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_Lm1EEENS7_ISA_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKS9_RKNSE_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_Lm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_Lm1EEENS7_ISA_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_Lm1EEENS7_ISA_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKS9_RKNSE_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_Lm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_Lm1EEENS7_ISA_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_21checked_array_deleterIS8_EEEE
N5boost21checked_array_deleterINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2iiLm2EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2iiLm2EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2iiLm2EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2iiLm2EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2iiLm2EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2iiLm2EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2hN8pxr_half4halfELm2EEENS_9allocatorIS7_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS8_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2hN8pxr_half4halfELm2EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2hN8pxr_half4halfELm2EEENS_9allocatorIS7_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPN8pxr_half4halfENS_21checked_array_deleterIS3_EEEE
N5boost21checked_array_deleterIN8pxr_half4halfEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIN8pxr_half4halfEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2hN8pxr_half4halfELm2EEENS_9allocatorIS7_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS8_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
7VtArrayI7GfVec2hE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2hN8pxr_half4halfELm2EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2hN8pxr_half4halfELm2EEENS_9allocatorIS7_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2ddLm2EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2ddLm2EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2ddLm2EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2ddLm2EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2ddLm2EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2ddLm2EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3iiLm3EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3iiLm3EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3iiLm3EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3iiLm3EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3iiLm3EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3iiLm3EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4iiLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4iiLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4iiLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4iiLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4iiLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4iiLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4hN8pxr_half4halfELm4EEENS_9allocatorIS7_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS8_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4hN8pxr_half4halfELm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4hN8pxr_half4halfELm4EEENS_9allocatorIS7_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4hN8pxr_half4halfELm4EEENS_9allocatorIS7_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS8_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
7VtArrayI7GfVec4hE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4hN8pxr_half4halfELm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4hN8pxr_half4halfELm4EEENS_9allocatorIS7_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4ffLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4ffLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4ffLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4ffLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4ffLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4ffLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4ddLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4ddLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4ddLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4ddLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4ddLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4ddLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfQuatffLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfQuatffLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfQuatffLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfQuatffLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
7VtArrayI7GfQuatfE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfQuatffLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfQuatffLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfQuatddLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfQuatddLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfQuatddLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfQuatddLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
7VtArrayI7GfQuatdE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfQuatddLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfQuatddLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIiaLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIiaLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIiaLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIiaLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIiaLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIiaLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPaNS_21checked_array_deleterIaEEEE
N5boost21checked_array_deleterIaEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIaEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIisLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIisLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIisLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIsEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIisLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIisLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIisLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPsNS_21checked_array_deleterIsEEEE
N5boost21checked_array_deleterIsEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIsEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIjtLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIjtLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIjtLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderItEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIjtLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIjtLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIjtLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPtNS_21checked_array_deleterItEEEE
N5boost21checked_array_deleterItEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderItEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7TfTokenNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEELm1EEENS8_ISB_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKSA_RKNSF_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7TfTokenNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7TfTokenNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEELm1EEENS8_ISB_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7TfTokenNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEELm1EEENS8_ISB_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKSA_RKNSF_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7TfTokenNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7TfTokenNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEELm1EEENS8_ISB_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI10GfMatrix4dfLm16EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI10GfMatrix4dfLm16EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI10GfMatrix4dfLm16EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI10GfMatrix4dfLm16EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI10GfMatrix4dfLm16EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI10GfMatrix4dfLm16EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3hN8pxr_half4halfELm3EEENS_9allocatorIS7_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS8_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3hN8pxr_half4halfELm3EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3hN8pxr_half4halfELm3EEENS_9allocatorIS7_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3hN8pxr_half4halfELm3EEENS_9allocatorIS7_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS8_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
7VtArrayI7GfVec3hE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3hN8pxr_half4halfELm3EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3hN8pxr_half4halfELm3EEENS_9allocatorIS7_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3ffLm3EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3ffLm3EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3ffLm3EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3ffLm3EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3ffLm3EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3ffLm3EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3ddLm3EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3ddLm3EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3ddLm3EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3ddLm3EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3ddLm3EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3ddLm3EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI10GfMatrix4ddLm16EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI10GfMatrix4ddLm16EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI10GfMatrix4ddLm16EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI10GfMatrix4ddLm16EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI10GfMatrix4ddLm16EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI10GfMatrix4ddLm16EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2ffLm2EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2ffLm2EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2ffLm2EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2ffLm2EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2ffLm2EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2ffLm2EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
........
................N5boost14iterator_rangeIPKcEE
N5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27random_access_traversal_tagEEE
N5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27bidirectional_traversal_tagEEE
N5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traversal_tagEEE
N5boost21iterator_range_detail18iterator_range_tagE
N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_16bad_lexical_castEEEEE
N5boost16exception_detail19error_info_injectorINS_16bad_lexical_castEEE
N5boost16bad_lexical_castE
N5boost9exceptionE
16UsdObjFileFormat
21Sdf_FileFormatFactoryI16UsdObjFileFormatE
N12UsdObjStream12SequenceElem8ElemTypeE
29UsdStageCacheContextBlockType
N3tbb10interface626enumerable_thread_specificIN21Tf_StackedStorageTypeI20UsdStageCacheContextLb1EE12_StackHolderENS_23cache_aligned_allocatorIS5_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal8ets_baseILNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafIN21Tf_StackedStorageTypeI20UsdStageCacheContextLb1EE12_StackHolderENS1_20construct_by_defaultIS6_EEEE
N3tbb10interface68internal13callback_baseIN21Tf_StackedStorageTypeI20UsdStageCacheContextLb1EE12_StackHolderEEE
N3tbb10interface68internal20construct_by_defaultIN21Tf_StackedStorageTypeI20UsdStageCacheContextLb1EE12_StackHolderEEE
N9UsdNotice20StageContentsChangedE
N9UsdNotice11StageNoticeE
N9UsdNotice14ObjectsChangedE
N9UsdNotice22StageEditTargetChangedE
11UsdClipsAPI
25SdfAbstractDataTypedValueI9SdfListOpINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
25SdfAbstractDataTypedValueINSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec2dEE
25SdfAbstractDataTypedValueIdE
25SdfAbstractDataTypedValueI9SdfListOpI7TfTokenEE
11UsdModelAPI
N11UsdModelAPI14KindValidationE
15UsdListPosition
13UsdLoadPolicy
16SdfAttributeSpec
16UsdCollectionAPI
NSt3__110__function6__baseIFN5boost8optionalI10SdfPayloadEERKS4_EEE
9SdfListOpI10SdfPayloadE
N5boost14operators_impl15totally_orderedI12SdfReferenceS2_NS0_16operators_detail10empty_baseIS2_EENS3_7false_tEEE
N5boost14operators_impl16totally_ordered1I12SdfReferenceNS0_16operators_detail10empty_baseIS2_EEEE
N5boost14operators_impl16operators_detail10empty_baseI12SdfReferenceEE
10SdfPayload
N5boost14operators_impl21less_than_comparable1I10SdfPayloadNS0_20equality_comparable1IS2_NS0_16operators_detail10empty_baseIS2_EEEEEE
N5boost14operators_impl20equality_comparable1I10SdfPayloadNS0_16operators_detail10empty_baseIS2_EEEE
17SdfVariantSetSpec
14SdfVariantSpec
19SdfRelationshipSpec
NSt3__120__shared_ptr_pointerIPN10UsdZipFile5_ImplENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN10UsdZipFile5_ImplEE27__shared_ptr_default_deleteIS2_S2_EE
30SdfAbstractDataConstTypedValueIbE
25SdfAbstractDataTypedValueIbE
17UsdUsdaFileFormat
21Sdf_FileFormatFactoryI17UsdUsdaFileFormatE
15SdfPropertySpec
13UsdSchemaBase
BN13Usd_CrateFile11TimeSamplesE
N3tbb10strict_ppl16concurrent_queueIN13Usd_CrateFile9CrateFile15_BufferedOutput7_BufferENS_23cache_aligned_allocatorIS5_EEEE
N3tbb10strict_ppl8internal24concurrent_queue_base_v3IN13Usd_CrateFile9CrateFile15_BufferedOutput7_BufferEEE
N3tbb10strict_ppl8internal31concurrent_queue_page_allocatorE
N3tbb10strict_ppl16concurrent_queueIN13Usd_CrateFile9CrateFile15_BufferedOutput8_WriteOpENS_23cache_aligned_allocatorIS5_EEEE
N3tbb10strict_ppl8internal24concurrent_queue_base_v3IN13Usd_CrateFile9CrateFile15_BufferedOutput8_WriteOpEEE
NSt3__110__function6__funcIN16WorkSingularTask6_WakerI19WorkArenaDispatcherNS_6__bindIZN13Usd_CrateFile9CrateFile15_BufferedOutputC1EP7__sFILEEUlvE_JEEEEENS_9allocatorISD_EEFvRNS_6atomicImEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZNK16WorkSingularTask6_WakerIS3_NS6_IZN13Usd_CrateFile9CrateFile15_BufferedOutputC1EP7__sFILEEUlvE_JEEEEclERNS5_6atomicImEEEUlvE_JEEEEEEE
N3tbb8internal9no_assignE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZNK16WorkSingularTask6_WakerI19WorkArenaDispatcherNS2_IZN13Usd_CrateFile9CrateFile15_BufferedOutputC1EP7__sFILEEUlvE_JEEEEclERNS1_6atomicImEEEUlvE_JEEEEE
N16WorkSingularTask6_WakerI19WorkArenaDispatcherNSt3__16__bindIZN13Usd_CrateFile9CrateFile15_BufferedOutputC1EP7__sFILEEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS8_O16TfSafeOutputFileRKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS4_O16TfSafeOutputFileRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS8_O16TfSafeOutputFileRKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEUlvE0_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS4_O16TfSafeOutputFileRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEUlvE0_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS8_O16TfSafeOutputFileRKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEUlvE1_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS4_O16TfSafeOutputFileRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEUlvE1_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS8_O16TfSafeOutputFileRKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEUlvE2_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS4_O16TfSafeOutputFileRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEUlvE2_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS8_O16TfSafeOutputFileRKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEUlvE3_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS4_O16TfSafeOutputFileRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEUlvE3_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS8_O16TfSafeOutputFileRKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEUlvE4_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS4_O16TfSafeOutputFileRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEUlvE4_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIRZN13Usd_CrateFile9CrateFile11_ReadTokensINS8_7_ReaderINS7_11_MmapStreamIPNS8_12_FileMappingEEEEEEEvT_E9MakeTokenJEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIRZN13Usd_CrateFile9CrateFile11_ReadTokensINS4_7_ReaderINS3_11_MmapStreamIPNS4_12_FileMappingEEEEEEEvT_E9MakeTokenJEEEEE
20Work_DetachedInvokerI27Work_AsyncSwapDestroyHelperINSt3__110unique_ptrIcNS1_14default_deleteIA_cEEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS7_21_PathItemHeader_0_0_1ENS8_7_ReaderINS7_11_MmapStreamIPNS8_12_FileMappingEEEEEEEvT0_RS3_7SdfPathEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS3_21_PathItemHeader_0_0_1ENS4_7_ReaderINS3_11_MmapStreamIPNS4_12_FileMappingEEEEEEEvT0_R19WorkArenaDispatcher7SdfPathEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS7_15_PathItemHeaderENS8_7_ReaderINS7_11_MmapStreamIPNS8_12_FileMappingEEEEEEEvT0_RS3_7SdfPathEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS3_15_PathItemHeaderENS4_7_ReaderINS3_11_MmapStreamIPNS4_12_FileMappingEEEEEEEvT0_R19WorkArenaDispatcher7SdfPathEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIRZN13Usd_CrateFile9CrateFile11_ReadTokensINS8_7_ReaderINS7_12_PreadStreamEEEEEvT_E9MakeTokenJEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIRZN13Usd_CrateFile9CrateFile11_ReadTokensINS4_7_ReaderINS3_12_PreadStreamEEEEEvT_E9MakeTokenJEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS7_21_PathItemHeader_0_0_1ENS8_7_ReaderINS7_12_PreadStreamEEEEEvT0_RS3_7SdfPathEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS3_21_PathItemHeader_0_0_1ENS4_7_ReaderINS3_12_PreadStreamEEEEEvT0_R19WorkArenaDispatcher7SdfPathEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS7_15_PathItemHeaderENS8_7_ReaderINS7_12_PreadStreamEEEEEvT0_RS3_7SdfPathEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS3_15_PathItemHeaderENS4_7_ReaderINS3_12_PreadStreamEEEEEvT0_R19WorkArenaDispatcher7SdfPathEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIRZN13Usd_CrateFile9CrateFile11_ReadTokensINS8_7_ReaderINS7_12_AssetStreamEEEEEvT_E9MakeTokenJEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIRZN13Usd_CrateFile9CrateFile11_ReadTokensINS4_7_ReaderINS3_12_AssetStreamEEEEEvT_E9MakeTokenJEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS7_21_PathItemHeader_0_0_1ENS8_7_ReaderINS7_12_AssetStreamEEEEEvT0_RS3_7SdfPathEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS3_21_PathItemHeader_0_0_1ENS4_7_ReaderINS3_12_AssetStreamEEEEEvT0_R19WorkArenaDispatcher7SdfPathEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS7_15_PathItemHeaderENS8_7_ReaderINS7_12_AssetStreamEEEEEvT0_RS3_7SdfPathEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS3_15_PathItemHeaderENS4_7_ReaderINS3_12_AssetStreamEEEEEvT0_R19WorkArenaDispatcher7SdfPathEUlvE_JEEEEE
N13Usd_CrateFile8ValueRepE
20Work_DetachedInvokerI27Work_AsyncSwapDestroyHelperI12SdfPathTableIN13Usd_CrateFile9PathIndexEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile27_BuildDecompressedPathsImplERKNS5_6vectorIjNS5_9allocatorIjEEEERKNS9_IiNSA_IiEEEESI_m7SdfPathRS3_E4$_15JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile27_BuildDecompressedPathsImplERKNS1_6vectorIjNS1_9allocatorIjEEEERKNS5_IiNS6_IiEEEESE_m7SdfPathR19WorkArenaDispatcherE4$_15JEEEEE
7VtArrayIhE
7VtArrayIiE
7VtArrayIjE
7VtArrayIxE
7VtArrayIyE
7VtArrayIN8pxr_half4halfEE
7VtArrayIfE
7VtArrayIdE
7VtArrayINSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE
7VtArrayI7TfTokenE
7VtArrayI12SdfAssetPathE
N5boost14operators_impl15totally_orderedI12SdfAssetPathS2_NS0_16operators_detail10empty_baseIS2_EENS3_7false_tEEE
N5boost14operators_impl16totally_ordered1I12SdfAssetPathNS0_16operators_detail10empty_baseIS2_EEEE
N5boost14operators_impl16operators_detail10empty_baseI12SdfAssetPathEE
7GfQuatf
7VtArrayI7GfQuathE
7GfQuath
7GfVec2d
7GfVec2h
7GfVec2i
7GfVec3d
7GfVec3f
7GfVec3i
7GfVec4d
7GfVec4f
7GfVec4h
9SdfListOpI7TfTokenE
9SdfListOpIiE
9SdfListOpIjE
NSt3__16vectorI7SdfPathNS_9allocatorIS1_EEEE
NSt3__113__vector_baseI7TfTokenNS_9allocatorIS1_EEEE
14SdfVariability
NSt3__16vectorIdNS_9allocatorIdEEEE
NSt3__113__vector_baseIdNS_9allocatorIdEEEE
NSt3__16vectorI14SdfLayerOffsetNS_9allocatorIS1_EEEE
NSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE
NSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE
20SdfUnregisteredValue
N5boost14operators_impl20equality_comparable1I20SdfUnregisteredValueNS0_16operators_detail10empty_baseIS2_EEEE
N5boost14operators_impl16operators_detail10empty_baseI20SdfUnregisteredValueEE
7VtArrayI11SdfTimeCodeE
11SdfTimeCode
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
NSt3__110__function6__baseIFN13Usd_CrateFile8ValueRepERK7VtValueEEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
NSt3__110__function6__baseIFvN13Usd_CrateFile8ValueRepEP7VtValueEEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
N7VtArrayIhE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
N7VtArrayIjE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
N7VtArrayIyE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlRK7VtValueE_NS_9allocatorISA_EEFNS2_8ValueRepES9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISA_EEFvS7_S9_EEE
N7VtArrayIN8pxr_half4halfEE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
N7VtArrayIdE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEvvEUlRK7VtValueE_NS8_ISE_EEFNS2_8ValueRepESD_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS8_ISE_EEFvSB_SD_EEE
N7VtArrayINSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS8_ISE_EEFvSB_SD_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS8_ISE_EEFvSB_SD_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI7TfTokenE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI12SdfAssetPathE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI7GfQuatdE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI7GfQuatfE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI7GfQuathE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI7GfVec2dE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI7GfVec2fE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI7GfVec2hE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI7GfVec2iE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI7GfVec3dE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI7GfVec3fE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI7GfVec3hE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI7GfVec3iE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI7GfVec4dE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI7GfVec4fE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI7GfVec4hE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI7GfVec4iE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI10GfMatrix2dE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI10GfMatrix3dE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI10GfMatrix4dE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlRK7VtValueE_NS_9allocatorISB_EEFNS2_8ValueRepESA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEvvEUlRK7VtValueE_NS9_ISG_EEFNS2_8ValueRepESF_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS9_ISG_EEFvSD_SF_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS9_ISG_EEFvSD_SF_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS9_ISG_EEFvSD_SF_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlRK7VtValueE_NS_9allocatorISB_EEFNS2_8ValueRepESA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlRK7VtValueE_NS_9allocatorISB_EEFNS2_8ValueRepESA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlRK7VtValueE_NS_9allocatorISA_EEFNS2_8ValueRepES9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlRK7VtValueE_NS_9allocatorISA_EEFNS2_8ValueRepES9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlRK7VtValueE_NS_9allocatorISA_EEFNS2_8ValueRepES9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlRK7VtValueE_NS_9allocatorISA_EEFNS2_8ValueRepES9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7SdfPathNS_9allocatorIS6_EEEEEEvvEUlRK7VtValueE_NS7_ISD_EEFNS2_8ValueRepESC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7SdfPathNS2_9allocatorIS4_EEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7SdfPathNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7SdfPathNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7SdfPathNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7SdfPathNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7SdfPathNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7SdfPathNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7TfTokenNS_9allocatorIS6_EEEEEEvvEUlRK7VtValueE_NS7_ISD_EEFNS2_8ValueRepESC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7TfTokenNS2_9allocatorIS4_EEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7TfTokenNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7TfTokenNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7TfTokenNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7TfTokenNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7TfTokenNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7TfTokenNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_NS_4lessISB_EENS9_INS_4pairIKSB_SB_EEEEEEEEvvEUlRK7VtValueE_NS9_ISM_EEFNS2_8ValueRepESL_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_NS2_4lessIS9_EENS7_INS2_4pairIKS9_S9_EEEEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_NS_4lessISB_EENS9_INS_4pairIKSB_SB_EEEEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS9_ISM_EEFvSJ_SL_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_NS2_4lessIS9_EENS7_INS2_4pairIKS9_S9_EEEEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_NS_4lessISB_EENS9_INS_4pairIKSB_SB_EEEEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS9_ISM_EEFvSJ_SL_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_NS2_4lessIS9_EENS7_INS2_4pairIKS9_S9_EEEEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_NS_4lessISB_EENS9_INS_4pairIKSB_SB_EEEEEEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS9_ISM_EEFvSJ_SL_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_NS2_4lessIS9_EENS7_INS2_4pairIKS9_S9_EEEEEEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS2_11TimeSamplesEEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_11TimeSamplesEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS2_11TimeSamplesEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_11TimeSamplesEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS2_11TimeSamplesEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_11TimeSamplesEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS2_11TimeSamplesEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_11TimeSamplesEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorIdNS_9allocatorIdEEEEEEvvEUlRK7VtValueE_NS6_ISC_EEFNS2_8ValueRepESB_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorIdNS2_9allocatorIdEEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorIdNS_9allocatorIdEEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS6_ISC_EEFvS9_SB_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorIdNS2_9allocatorIdEEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorIdNS_9allocatorIdEEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS6_ISC_EEFvS9_SB_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorIdNS2_9allocatorIdEEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorIdNS_9allocatorIdEEEEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS6_ISC_EEFvS9_SB_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorIdNS2_9allocatorIdEEEEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI14SdfLayerOffsetNS_9allocatorIS6_EEEEEEvvEUlRK7VtValueE_NS7_ISD_EEFNS2_8ValueRepESC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI14SdfLayerOffsetNS2_9allocatorIS4_EEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI14SdfLayerOffsetNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI14SdfLayerOffsetNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI14SdfLayerOffsetNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI14SdfLayerOffsetNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI14SdfLayerOffsetNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI14SdfLayerOffsetNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEEEEvvEUlRK7VtValueE_NS9_ISH_EEFNS2_8ValueRepESG_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS9_ISH_EEFvSE_SG_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS9_ISH_EEFvSE_SG_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS9_ISH_EEFvSE_SG_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlRKS5_E_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlRKS2_E_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlNS2_8ValueRepEPS5_E_NS_9allocatorIS8_EEFvS6_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlNS_8ValueRepEPS2_E_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlNS2_8ValueRepEPS5_E0_NS_9allocatorIS8_EEFvS6_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlNS_8ValueRepEPS2_E0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlNS2_8ValueRepEPS5_E1_NS_9allocatorIS8_EEFvS6_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlNS_8ValueRepEPS2_E1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlRK7VtValueE_NS_9allocatorISB_EEFNS2_8ValueRepESA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI10SdfPayloadEEEvvEUlRK7VtValueE_NS_9allocatorISB_EEFNS2_8ValueRepESA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI10SdfPayloadEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI10SdfPayloadEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI10SdfPayloadEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI10SdfPayloadEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI10SdfPayloadEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI10SdfPayloadEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI10SdfPayloadEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI11SdfTimeCodeEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI11SdfTimeCodeEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI11SdfTimeCodeEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI11SdfTimeCodeE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI11SdfTimeCodeEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI11SdfTimeCodeEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI11SdfTimeCodeEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI11SdfTimeCodeEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI11SdfTimeCodeEEvvEUlNS_8ValueRepEP7VtValueE1_
17UsdSchemaRegistry
10TfWeakBase
N5boost12noncopyable_11noncopyableE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN17UsdSchemaRegistry23_FindAndAddPluginSchemaEvE3$_0JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN17UsdSchemaRegistry23_FindAndAddPluginSchemaEvE3$_0JEEEEE
N3tbb10interface98internal9start_forINS_13blocked_rangeImEEZ16WorkParallelForNIZZN17UsdSchemaRegistry23_FindAndAddPluginSchemaEvENK3$_0clEvEUlmmE_EvmOT_mE21Work_ParallelForN_TBBKNS_16auto_partitionerEEE
N3tbb10interface98internal9flag_taskE
9TfWeakPtrI10PlugPluginE
16UsdUsdFileFormat
21Sdf_FileFormatFactoryI16UsdUsdFileFormatE
@25SdfAbstractDataTypedValueI7VtArrayI12SdfAssetPathEE
25SdfAbstractDataTypedValueI12SdfAssetPathE
25SdfAbstractDataTypedValueI12VtDictionaryE
9TfWeakPtrI13PcpLayerStackE
15TfWeakPtrFacadeI9TfWeakPtr13PcpLayerStackE
25SdfAbstractDataTypedValueIiE
25SdfAbstractDataTypedValueI7VtArrayIiEE
25SdfAbstractDataTypedValueI7VtArrayIjEE
25SdfAbstractDataTypedValueI7VtArrayIxEE
25SdfAbstractDataTypedValueIN8pxr_half4halfEE
25SdfAbstractDataTypedValueI7VtArrayIN8pxr_half4halfEEE
25SdfAbstractDataTypedValueI7VtArrayIfEE
25SdfAbstractDataTypedValueI7VtArrayIdEE
25SdfAbstractDataTypedValueI11SdfTimeCodeE
25SdfAbstractDataTypedValueI7VtArrayI11SdfTimeCodeEE
25SdfAbstractDataTypedValueI7VtArrayINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
25SdfAbstractDataTypedValueI7VtArrayI7TfTokenEE
25SdfAbstractDataTypedValueI10GfMatrix2dE
25SdfAbstractDataTypedValueI7VtArrayI10GfMatrix2dEE
25SdfAbstractDataTypedValueI10GfMatrix3dE
25SdfAbstractDataTypedValueI7VtArrayI10GfMatrix3dEE
25SdfAbstractDataTypedValueI10GfMatrix4dE
25SdfAbstractDataTypedValueI7VtArrayI10GfMatrix4dEE
25SdfAbstractDataTypedValueI7GfQuathE
25SdfAbstractDataTypedValueI7VtArrayI7GfQuathEE
25SdfAbstractDataTypedValueI7GfQuatfE
25SdfAbstractDataTypedValueI7VtArrayI7GfQuatfEE
25SdfAbstractDataTypedValueI7GfQuatdE
25SdfAbstractDataTypedValueI7VtArrayI7GfQuatdEE
25SdfAbstractDataTypedValueI7GfVec2hE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec2hEE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec2fEE
25SdfAbstractDataTypedValueI7GfVec2dE
25SdfAbstractDataTypedValueI7GfVec3hE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec3hEE
25SdfAbstractDataTypedValueI7GfVec3fE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec3fEE
25SdfAbstractDataTypedValueI7GfVec3dE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec3dEE
25SdfAbstractDataTypedValueI7GfVec4hE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec4hEE
25SdfAbstractDataTypedValueI7GfVec4fE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec4fEE
25SdfAbstractDataTypedValueI7GfVec4dE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec4dEE
8TfRefPtrI13PcpLayerStackE
25SdfAbstractDataTypedValueINSt3__16vectorI7TfTokenNS0_9allocatorIS2_EEEEE
8TfRefPtrI8SdfLayerE
25SdfAbstractDataConstValue
NSt3__117bad_function_callE
NSt3__110__function6__funcIZNK7UsdPrim25_GetPropertiesInNamespaceERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbE3$_1NS6_ISB_EEFbRK7TfTokenEEE
NSt3__110__function6__baseIFbRK7TfTokenEEE
ZNK7UsdPrim25_GetPropertiesInNamespaceERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbE3$_1
NSt3__110__function6__baseIFvRNS_6atomicImEEEEE
N3tbb10interface78internal13delegate_baseE
N3tbb8internal7no_copyE
N3tbb10empty_taskE
9TfWeakPtrI8SdfLayerE
20UsdInterpolationType
23Usd_UntypedInterpolator
20Usd_InterpolatorBase
20Usd_HeldInterpolatorI7VtValueE
22Usd_LinearInterpolatorIN8pxr_half4halfEE
22Usd_LinearInterpolatorI7VtArrayIN8pxr_half4halfEEE
22Usd_LinearInterpolatorIfE
22Usd_LinearInterpolatorI7VtArrayIfEE
22Usd_LinearInterpolatorIdE
22Usd_LinearInterpolatorI7VtArrayIdEE
22Usd_LinearInterpolatorI11SdfTimeCodeE
22Usd_LinearInterpolatorI7VtArrayI11SdfTimeCodeEE
22Usd_LinearInterpolatorI10GfMatrix2dE
22Usd_LinearInterpolatorI7VtArrayI10GfMatrix2dEE
22Usd_LinearInterpolatorI10GfMatrix3dE
22Usd_LinearInterpolatorI7VtArrayI10GfMatrix3dEE
22Usd_LinearInterpolatorI10GfMatrix4dE
22Usd_LinearInterpolatorI7VtArrayI10GfMatrix4dEE
22Usd_LinearInterpolatorI7GfVec2dE
22Usd_LinearInterpolatorI7VtArrayI7GfVec2dEE
22Usd_LinearInterpolatorI7GfVec2fE
22Usd_LinearInterpolatorI7VtArrayI7GfVec2fEE
22Usd_LinearInterpolatorI7GfVec2hE
22Usd_LinearInterpolatorI7VtArrayI7GfVec2hEE
22Usd_LinearInterpolatorI7GfVec3dE
22Usd_LinearInterpolatorI7VtArrayI7GfVec3dEE
22Usd_LinearInterpolatorI7GfVec3fE
22Usd_LinearInterpolatorI7VtArrayI7GfVec3fEE
22Usd_LinearInterpolatorI7GfVec3hE
22Usd_LinearInterpolatorI7VtArrayI7GfVec3hEE
22Usd_LinearInterpolatorI7GfVec4dE
22Usd_LinearInterpolatorI7VtArrayI7GfVec4dEE
22Usd_LinearInterpolatorI7GfVec4fE
22Usd_LinearInterpolatorI7VtArrayI7GfVec4fEE
22Usd_LinearInterpolatorI7GfVec4hE
22Usd_LinearInterpolatorI7VtArrayI7GfVec4hEE
22Usd_LinearInterpolatorI7GfQuatdE
22Usd_LinearInterpolatorI7VtArrayI7GfQuatdEE
22Usd_LinearInterpolatorI7GfQuatfE
22Usd_LinearInterpolatorI7VtArrayI7GfQuatfEE
22Usd_LinearInterpolatorI7GfQuathE
22Usd_LinearInterpolatorI7VtArrayI7GfQuathEE
N17UsdStageLoadRules4RuleE
17UsdUsdzFileFormat
21Sdf_FileFormatFactoryI17UsdUsdzFileFormatE
20UsdStageCacheRequest
8TfRefPtrI10Tf_RemnantE
8TfRefPtrI8UsdStageE
8UsdTyped
20UsdResolveInfoSource
23USD_CHANGES__DebugCodes
17UsdUsdcFileFormat
21Sdf_FileFormatFactoryI17UsdUsdcFileFormatE
8TfRefPtrI13Usd_CrateDataE
NSt3__120__shared_ptr_pointerIP8Usd_ClipNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI8Usd_ClipE27__shared_ptr_default_deleteIS1_S1_EE
8UsdStage
N8UsdStage14InitialLoadSetE
30SdfAbstractDataConstTypedValueI12SdfSpecifierE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_0JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_0JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_1JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_1JEEEEE
20Work_DetachedInvokerI27Work_AsyncMoveDestroyHelperINSt3__16vectorI7SdfPathNS1_9allocatorIS3_EEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_2JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_2JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_3JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_3JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_4JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_4JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_5JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_5JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_6JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_6JEEEEE
20Work_DetachedInvokerI27Work_AsyncSwapDestroyHelperI9TfHashMapI7SdfPathN5boost13intrusive_ptrI12Usd_PrimDataEENS2_4HashENSt3__18equal_toIS2_EENS8_9allocatorINS8_4pairIKS2_S6_EEEEEEE
20Usd_StageOpenRequest
25SdfAbstractDataTypedValueI9SdfListOpIiEE
25SdfAbstractDataTypedValueI9SdfListOpIxEE
25SdfAbstractDataTypedValueI9SdfListOpIjEE
25SdfAbstractDataTypedValueI9SdfListOpIyEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataPKS8_PK22UsdStagePopulationMaskRK7SdfPathEJPS7_RS9_SB_PSC_SH_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataPKS4_PK22UsdStagePopulationMaskRK7SdfPathEJPS3_RS5_S7_PS8_SD_EEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataPKS8_PK22UsdStagePopulationMaskRK7SdfPathEJPS7_RS9_RSB_RSE_SH_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataPKS4_PK22UsdStagePopulationMaskRK7SdfPathEJPS3_RS5_RS7_RSA_SD_EEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataEJPS7_S9_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataEJPS3_S5_EEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataEJPS7_RS9_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataEJPS3_RS5_EEEEE
N8TfNotice10_DelivererI9TfWeakPtrI8UsdStageES1_I8SdfLayerEMS2_FvRKN9SdfNotice27LayersDidChangeSentPerLayerEES7_EE
N8TfNotice18_StandardDelivererINS_10_DelivererI9TfWeakPtrI8UsdStageES2_I8SdfLayerEMS3_FvRKN9SdfNotice27LayersDidChangeSentPerLayerEES8_EEEE
25SdfAbstractDataTypedValueI12SdfSpecifierE
25SdfAbstractDataTypedValueI14SdfVariabilityE
9TfWeakPtrIK8SdfLayerE
15TfWeakPtrFacadeI9TfWeakPtrK8SdfLayerE
20Usd_HeldInterpolatorIbE
20Usd_HeldInterpolatorIiE
20Usd_HeldInterpolatorI7VtArrayIiEE
30SdfAbstractDataConstTypedValueIiE
30SdfAbstractDataConstTypedValueI7VtArrayIiEE
20Usd_HeldInterpolatorI7VtArrayIjEE
20Usd_HeldInterpolatorI7VtArrayIxEE
20Usd_HeldInterpolatorIfE
20Usd_HeldInterpolatorI7VtArrayIfEE
20Usd_HeldInterpolatorIdE
20Usd_HeldInterpolatorI7VtArrayIdEE
30SdfAbstractDataConstTypedValueI11SdfTimeCodeE
30SdfAbstractDataConstTypedValueI7VtArrayI11SdfTimeCodeEE
20Usd_HeldInterpolatorINSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE
20Usd_HeldInterpolatorI7VtArrayINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
20Usd_HeldInterpolatorI7TfTokenE
20Usd_HeldInterpolatorI7VtArrayI7TfTokenEE
30SdfAbstractDataConstTypedValueI7VtArrayI7TfTokenEE
20Usd_HeldInterpolatorI10GfMatrix4dE
20Usd_HeldInterpolatorI7VtArrayI10GfMatrix4dEE
30SdfAbstractDataConstTypedValueI10GfMatrix4dE
20Usd_HeldInterpolatorI7VtArrayI7GfQuathEE
20Usd_HeldInterpolatorI7VtArrayI7GfQuatfEE
20Usd_HeldInterpolatorI7GfVec2fE
30SdfAbstractDataConstTypedValueI7VtArrayI7GfVec2fEE
20Usd_HeldInterpolatorI7GfVec2dE
20Usd_HeldInterpolatorI7VtArrayI7GfVec3hEE
20Usd_HeldInterpolatorI7VtArrayI7GfVec3fEE
30SdfAbstractDataConstTypedValueI7VtArrayI7GfVec3fEE
30SdfAbstractDataConstTypedValueINSt3__13mapId7VtValueNS0_4lessIdEENS0_9allocatorINS0_4pairIKdS2_EEEEEEE
30SdfAbstractDataConstTypedValueI12VtDictionaryE
16UsdAPISchemaBase
13Usd_CrateData
N3tbb10interface98internal9start_forINS_13blocked_rangeINSt3__111__wrap_iterIP7SdfPathEEEENS1_23quick_sort_pretest_bodyIS8_ZN17Usd_CrateDataImpl4SaveERKNS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEUlRKS6_SL_E_EEKNS_16auto_partitionerEEE
N3tbb10interface98internal9start_forINS1_16quick_sort_rangeINSt3__111__wrap_iterIP7SdfPathEEZN17Usd_CrateDataImpl4SaveERKNS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEUlRKS6_SJ_E_EENS1_15quick_sort_bodyIS8_SK_EEKNS_16auto_partitionerEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE_JEEEEE
N3tbb10interface98internal9start_forINS_13blocked_rangeINSt3__111__wrap_iterIPN13Usd_CrateFile9CrateFile4SpecEEEEENS1_23quick_sort_pretest_bodyISA_ZZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvENKUlvE_clEvEUlRKS8_SG_E_EEKNS_16auto_partitionerEEE
N3tbb10interface98internal9start_forINS1_16quick_sort_rangeINSt3__111__wrap_iterIPN13Usd_CrateFile9CrateFile4SpecEEEZZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvENKUlvE_clEvEUlRKS8_SE_E_EENS1_15quick_sort_bodyISA_SF_EEKNS_16auto_partitionerEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE0_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE0_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE1_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE1_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE2_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE2_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE3_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE3_JEEEEE
N3tbb10interface98internal9start_forINS_13blocked_rangeImEENS_8internal17parallel_for_bodyIZZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvENKUlvE3_clEvEUlmE_mEEKNS_16auto_partitionerEEE
20Work_DetachedInvokerI27Work_AsyncMoveDestroyHelperINSt3__16vectorIN17Usd_CrateDataImpl9_SpecTypeENS1_9allocatorIS4_EEEEEE
20Work_DetachedInvokerI27Work_AsyncMoveDestroyHelperIN5boost9container8flat_mapI7SdfPathN17Usd_CrateDataImpl13_FlatSpecDataENS4_12FastLessThanENS2_13new_allocatorINSt3__14pairIS4_S6_EEEEEEEE
20Work_DetachedInvokerI27Work_AsyncMoveDestroyHelperINSt3__110unique_ptrINS1_13unordered_mapI7SdfPathN17Usd_CrateDataImpl12_MapSpecDataENS4_4HashENS1_8equal_toIS4_EENS1_9allocatorINS1_4pairIKS4_S6_EEEEEENS1_14default_deleteISF_EEEEEE
16Usd_UsdzResolver
N3tbb10interface626enumerable_thread_specificINSt3__16vectorINS2_10shared_ptrIN21Usd_UsdzResolverCache6_CacheEEENS2_9allocatorIS7_EEEENS_23cache_aligned_allocatorISA_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafINSt3__16vectorINS3_10shared_ptrIN21Usd_UsdzResolverCache6_CacheEEENS3_9allocatorIS8_EEEENS1_20construct_by_defaultISB_EEEE
N3tbb10interface68internal13callback_baseINSt3__16vectorINS3_10shared_ptrIN21Usd_UsdzResolverCache6_CacheEEENS3_9allocatorIS8_EEEEEE
N3tbb10interface68internal20construct_by_defaultINSt3__16vectorINS3_10shared_ptrIN21Usd_UsdzResolverCache6_CacheEEENS3_9allocatorIS8_EEEEEE
25Ar_PackageResolverFactoryI16Usd_UsdzResolverE
29Ar_PackageResolverFactoryBase
N12_GLOBAL__N_16_AssetE
NSt3__120__shared_ptr_pointerIPKcZN12_GLOBAL__N_16_Asset9GetBufferEvE8_DeleterNS_9allocatorIS1_EEEE
ZN12_GLOBAL__N_16_Asset9GetBufferEvE8_Deleter
NSt3__110shared_ptrIN21Usd_UsdzResolverCache6_CacheEEE
NSt3__120__shared_ptr_emplaceIN21Usd_UsdzResolverCache6_CacheENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_16_AssetENS_10shared_ptrI7ArAssetE27__shared_ptr_default_deleteIS5_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrI7ArAssetE27__shared_ptr_default_deleteIS1_N12_GLOBAL__N_16_AssetEEE
N17ArResolverContext8_UntypedE
17ArPackageResolver
28AR_RESOLVER_INIT__DebugCodes
7ArAsset
\\\\\\\\
\\\\\\\\\\\\\\\\0
17ArDefaultResolver
18Ar_ResolverFactoryI17ArDefaultResolverE
22Ar_ResolverFactoryBase
N3tbb10interface626enumerable_thread_specificINSt3__16vectorINS2_10shared_ptrIN17ArDefaultResolver6_CacheEEENS2_9allocatorIS7_EEEENS_23cache_aligned_allocatorISA_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafINSt3__16vectorINS3_10shared_ptrIN17ArDefaultResolver6_CacheEEENS3_9allocatorIS8_EEEENS1_20construct_by_defaultISB_EEEE
N3tbb10interface68internal13callback_baseINSt3__16vectorINS3_10shared_ptrIN17ArDefaultResolver6_CacheEEENS3_9allocatorIS8_EEEEEE
N3tbb10interface68internal20construct_by_defaultINSt3__16vectorINS3_10shared_ptrIN17ArDefaultResolver6_CacheEEENS3_9allocatorIS8_EEEEEE
N3tbb10interface626enumerable_thread_specificINSt3__16vectorIPK24ArDefaultResolverContextNS2_9allocatorIS6_EEEENS_23cache_aligned_allocatorIS9_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafINSt3__16vectorIPK24ArDefaultResolverContextNS3_9allocatorIS7_EEEENS1_20construct_by_defaultISA_EEEE
N3tbb10interface68internal13callback_baseINSt3__16vectorIPK24ArDefaultResolverContextNS3_9allocatorIS7_EEEEEE
N3tbb10interface68internal20construct_by_defaultINSt3__16vectorIPK24ArDefaultResolverContextNS3_9allocatorIS7_EEEEEE
NSt3__120__shared_ptr_pointerIP17ArFilesystemAssetNS_10shared_ptrI7ArAssetE27__shared_ptr_default_deleteIS4_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI7ArAssetE27__shared_ptr_default_deleteIS1_17ArFilesystemAssetEE
N17ArResolverContext6_TypedI24ArDefaultResolverContextEE
24ArDefaultResolverContext
NSt3__120__shared_ptr_pointerIPN17ArResolverContext6_TypedI24ArDefaultResolverContextEENS_10shared_ptrINS1_8_UntypedEE27__shared_ptr_default_deleteIS7_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN17ArResolverContext8_UntypedEE27__shared_ptr_default_deleteIS2_NS1_6_TypedI24ArDefaultResolverContextEEEE
NSt3__110shared_ptrIN17ArDefaultResolver6_CacheEEE
NSt3__120__shared_ptr_emplaceIN17ArDefaultResolver6_CacheENS_9allocatorIS2_EEEE
10ArResolver
N12_GLOBAL__N_19_ResolverE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_19_Resolver16_PackageResolverENS_10shared_ptrIS3_E27__shared_ptr_default_deleteIS3_S3_EENS_9allocatorIS3_EEEE
NSt3__110shared_ptrIN12_GLOBAL__N_19_Resolver16_PackageResolverEE27__shared_ptr_default_deleteIS3_S3_EE
NSt3__120__shared_ptr_pointerIP17ArPackageResolverNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI17ArPackageResolverE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__16vectorI7VtValueNS_9allocatorIS1_EEEE
NSt3__113__vector_baseI7VtValueNS_9allocatorIS1_EEEE
NSt3__110__function6__funcIZN12_GLOBAL__N_115_CreateResolverERK6TfTypePNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_1NS9_ISD_EEFvvEEE
NSt3__110__function6__baseIFvvEEE
ZN12_GLOBAL__N_115_CreateResolverERK6TfTypePNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE3$_1
17ArFilesystemAsset
NSt3__120__shared_ptr_pointerIPNS_10unique_ptrIKc13Arch_UnmapperEENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrINS_10unique_ptrIKc13Arch_UnmapperEEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPKcZN17ArFilesystemAsset9GetBufferEvE8_DeleterNS_9allocatorIS1_EEEE
ZN17ArFilesystemAsset9GetBufferEvE8_Deleter
13ArMemoryAsset
NSt3__120__shared_ptr_pointerIPKcZN13ArMemoryAsset9GetBufferEvE13customDeleterNS_9allocatorIS1_EEEE
ZN13ArMemoryAsset9GetBufferEvE13customDeleter
16ArMemoryResolver
18Ar_ResolverFactoryI16ArMemoryResolverE
NSt3__120__shared_ptr_pointerIP13ArMemoryAssetNS_10shared_ptrI7ArAssetE27__shared_ptr_default_deleteIS4_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI7ArAssetE27__shared_ptr_default_deleteIS1_13ArMemoryAssetEE
NSt3__16chrono8durationIxNS_5ratioILl1ELl1000000000EEEEE
@(#)PROGRAM:ModelIO  PROJECT:ModelKit-258.1
NSt3__110__function6__funcIZN7ModelIO6OctreeC1EP8MDLAssetifE3$_1NS_9allocatorIS6_EEFPNS2_13OctreePayloadEvEEE
NSt3__110__function6__baseIFPN7ModelIO13OctreePayloadEvEEE
ZN7ModelIO6OctreeC1EP8MDLAssetifE3$_1
NSt3__110__function6__funcIZN7ModelIO6OctreeC1EP9MDLObjectifE3$_3NS_9allocatorIS6_EEFPNS2_13OctreePayloadEvEEE
ZN7ModelIO6OctreeC1EP9MDLObjectifE3$_3
?GZ*oG8
? D2
?fff?
GZ*oG8
? D2
0CN7ModelIO10RTGeometryE
q=N9mdlio_obj12MDLOBJLoaderE
13MDLLoaderBase
N10OpenSubdiv10v3_0_0_RC23Vtr8internal14QuadRefinementE
;333?
UUU?
@CV
dO@)!x
IESNA:LM-63-2002IESNA:LM-63-1995IESNA:LM-63-1991IESNA:LM-63-1986
ffffff
?ffffff
?ffffff
VUU
VUU
VUU
VUU
VUU
VUU
i\)7.
blnOq
sy2-
i\)7.
blnOq
sy2-
N3tbb8internal3rml14private_serverE
N3tbb8internal3rml10tbb_serverE
N3rml6serverE
N3rml16versioned_objectE
7VtArrayItE
N7VtArrayItE9_StreamerE
N9Imath_2_212ZeroScaleExcE
N3tbb8internal27allowed_parallelism_controlE
N3tbb8internal6paddedINS0_15control_storageELm128EEE
N3tbb8internal11padded_baseINS0_15control_storageELm128ELm32EEE
N3tbb8internal15control_storageE
N3tbb8internal18stack_size_controlE
N10OpenSubdiv10v3_0_0_RC23Vtr8internal13TriRefinementE
NSt3__120__shared_ptr_pointerIPN7ModelIO12SkiplistNodeENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN7ModelIO12SkiplistNodeEE27__shared_ptr_default_deleteIS2_S2_EE
412MDLPLYLoader
NSt3__120__shared_ptr_pointerIPN12MDLPLYLoader6DetailENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN12MDLPLYLoader6DetailEE27__shared_ptr_default_deleteIS2_S2_EE
CC_wCE
CC_wCE
!}j'
CC_wCE
CC_wCE
CC_wCE
?N7ModelIO26RTPhysicallyPlausibleLightE
N7ModelIO7RTLightE
N7ModelIO11RTAreaLightE
N7ModelIO10RTIESLightE
N3tbb10interface78internal14delegated_taskE
NSt3__120__shared_ptr_emplaceIN7ModelIO12RTRenderableENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_pointerIPN7ModelIO12RTRenderableENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN7ModelIO12RTRenderableEE27__shared_ptr_default_deleteIS2_S2_EE
N3tbb14bad_last_allocE
N3tbb12missing_waitE
N3tbb27invalid_multiple_schedulingE
N3tbb13improper_lockE
N3tbb10user_abortE
TBB: VERSION
2017.0
TBB: INTERFACE VERSION
9106
TBB: BUILD_DATE
Fri Apr 24 00:27:39 UTC 2020
TBB: BUILD_HOST
ma0103c-dhcp94 (i386)
TBB: BUILD_OS
Mac OS X version 10.16
TBB: BUILD_KERNEL
Darwin Kernel Version 20.0.0: Wed Feb 12 18:02:59 PST 2020; root:xnu-6761.0.0.0.3~12/DEVELOPMENT_X86_64
TBB: BUILD_CLANG
Apple clang version 11.0.3 (clang-1103.0.27.9) (-macos10.15-objc-selector-opts)
TBB: BUILD_XCODE
Xcode 11.4
TBB: BUILD_TARGET
intel64 on cc_os10.16
TBB: BUILD_COMMAND
clang++ -g -O2 -DUSE_PTHREAD -stdlib=libc++ -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-non-virtual-dtor -Wno-dangling-else -I../../src -I../../src/rml/include -I../../include -I.
TBB: TBB_USE_DEBUG
TBB: TBB_USE_ASSERT
TBB: DO_ITT_NOTIFY
undefined
>J{s
>J{s
>J{s
>J{s
..>F
_??5
_??5
(L?i
_??5
_??5
..>F
O?,e
O?,e
>J{s?
>J{s??W
>J{s?o
>J{s?
J{s?o
J{s??W
J{s?
J{s?!
J{s?
J{s?
7VtArrayI7GfVec3fE
333?
?N7ModelIO8RTCameraE
12MDLUSDLoader
NSt3__120__shared_ptr_pointerIPN12MDLUSDLoader6DetailENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN12MDLUSDLoader6DetailEE27__shared_ptr_default_deleteIS2_S2_EE
N3tbb8internal6marketE
N3tbb8internal3rml10tbb_clientE
N3rml6clientE
7VtArrayI10GfMatrix4fE
N7VtArrayI10GfMatrix4fE9_StreamerE
N7Iex_2_27BaseExcE
N3tbb8internal17generic_schedulerE
N3tbb8internal9schedulerE
N3rml3jobE
N3tbb8internal19intrusive_list_nodeE
N3tbb8internal15scheduler_stateE
N3tbb8internal16custom_schedulerINS0_22DefaultSchedulerTraitsEEE
N3tbb8internal16custom_schedulerINS0_20IntelSchedulerTraitsEEE
P?UUUUUU
fff?
Fd0_
?N7ModelIO22LambertianDistributionE
N7ModelIO43BidirectionalScatteringDistributionFunctionE
N7ModelIO31PhysicallyPlausibleDistributionE
N7ModelIO12RTRenderableE
NSt3__110__function6__funcIZNK7ModelIO12RTRenderable6octreeEvE3$_0NS_9allocatorIS4_EEFPNS2_13OctreePayloadEvEEE
ZNK7ModelIO12RTRenderable6octreeEvE3$_0
vH7B
W4vC
N10OpenSubdiv10v3_0_0_RC23Vtr8internal10RefinementE
=fff?
@-C
i\)7.
blnOq
sy2-
i\)7.
blnOq
sy2-
-;eU
U1(\Q
mSx@
b}$l
~)p$w
11eU%
z^KD
N3tbb13tbb_exceptionE
N3tbb18captured_exceptionE
;N3tbb4taskE
N3tbb10interface58internal9task_baseE
tm<
tm<
tm<
tm<
tm<
tm<
tm<
tm<
18TraceAggregateNode
18TraceAggregateTree
8TfRefPtrI14TraceEventNodeE
N15TraceCollection7VisitorE
27TraceReporterDataSourceBase
23TraceCounterAccumulator
13TraceReporter
14TraceEventNode
14TraceEventTree
N12_GLOBAL__N_121_GlobalReporterHolderE
8TfRefPtrI18TraceAggregateNodeE
8TfRefPtrI18TraceAggregateTreeE
9TfWeakPtrI18TraceAggregateNodeE
15TfWeakPtrFacadeI9TfWeakPtr18TraceAggregateNodeE
8TfRefPtrI14TraceEventTreeE
9TfWeakPtrI13TraceReporterE
15TfWeakPtrFacadeI9TfWeakPtr13TraceReporterE
NSt3__120__shared_ptr_pointerIP15TraceCollectionNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI15TraceCollectionEE
N22Trace_EventTreeBuilder19_CounterAccumulatorE
22Trace_EventTreeBuilder
26Trace_AggregateTreeBuilder
32TraceReporterDataSourceCollector
NSt3__110__function6__funcIPFbvENS_9allocatorIS3_EES2_EE
NSt3__110__function6__baseIFbvEEE
PFbvE
FbvE
N3tbb10strict_ppl16concurrent_queueINSt3__110shared_ptrI15TraceCollectionEENS_23cache_aligned_allocatorIS5_EEEE
N3tbb10strict_ppl8internal24concurrent_queue_base_v3INSt3__110shared_ptrI15TraceCollectionEEEE
N8TfNotice10_DelivererI9TfWeakPtrI32TraceReporterDataSourceCollectorE12TfAnyWeakPtrMS2_FvRK24TraceCollectionAvailableES5_EE
N8TfNotice18_StandardDelivererINS_10_DelivererI9TfWeakPtrI32TraceReporterDataSourceCollectorE12TfAnyWeakPtrMS3_FvRK24TraceCollectionAvailableES6_EEEE
9TfWeakPtrI32TraceReporterDataSourceCollectorE
15TfWeakPtrFacadeI9TfWeakPtr32TraceReporterDataSourceCollectorE
24TraceCollectionAvailable
17TraceReporterBase
NSt3__120__shared_ptr_emplaceI17UsdSkelAnimMapperNS_9allocatorIS1_EEEE
16UsdSkelAnimation
17UsdSkelBlendShape
NSt3__120__shared_ptr_pointerIP17UsdSkel_CacheImplNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI17UsdSkel_CacheImplE27__shared_ptr_default_deleteIS1_S1_EE
17UsdSkelBindingAPI
30UsdSkel_SkelAnimationQueryImpl
21UsdSkel_AnimQueryImpl
8TfRefPtrI21UsdSkel_AnimQueryImplE
15UsdSkelSkeleton
8TfRefPtrI22UsdSkel_SkelDefinitionE
11UsdSkelRoot
22UsdSkel_SkelDefinition
vH7B
W4vC
9Y>)F$
raB3G
)c=H
]rHa
O8Mr
bnMG
.wN9
[*QmU
mr"iR
R$N(
>S}W
-sSO\
T%L9
hGT.
B}T}
=@[V
!a9X
X5AHx
%4xY
Z~$|7
+\0I
2a\|
\ysK
|M$D
pH_r
(:W"
s\ax}?
pc2g
@BXV
tC7Ddx
EydV
d66
eax~Z
ekhHD
@iZb
k0V(
k*do^
:V!2m
RJqn
bzo=
$qE}
XqkY
quAt
Jugm
~B v
STv/N
_w&2
xg^Jp5|
yMzw
{zel#|67
P/};
[@JO
nQ:B
-;eU
U1(\Q
mSx@
b}$l
~)p$w
11eU%
z^KD
NSt3__120__shared_ptr_pointerIPN7JsValue7_HolderENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN7JsValue7_HolderEE27__shared_ptr_default_deleteIS2_S2_EE
12KindRegistry
12PcpErrorBase
16PcpErrorArcCycle
27PcpErrorArcPermissionDenied
32PcpErrorInconsistentPropertyBase
32PcpErrorInconsistentPropertyType
33PcpErrorInconsistentAttributeType
40PcpErrorInconsistentAttributeVariability
23PcpErrorInvalidPrimPath
28PcpErrorInvalidAssetPathBase
24PcpErrorInvalidAssetPath
22PcpErrorMutedAssetPath
22PcpErrorTargetPathBase
33PcpErrorInvalidInstanceTargetPath
33PcpErrorInvalidExternalTargetPath
25PcpErrorInvalidTargetPath
29PcpErrorInvalidSublayerOffset
30PcpErrorInvalidReferenceOffset
32PcpErrorInvalidSublayerOwnership
27PcpErrorInvalidSublayerPath
33PcpErrorOpinionAtRelocationSource
28PcpErrorPrimPermissionDenied
32PcpErrorPropertyPermissionDenied
21PcpErrorSublayerCycle
30PcpErrorTargetPermissionDenied
26PcpErrorUnresolvedPrimPath
12PcpErrorType
NSt3__120__shared_ptr_pointerIP16PcpErrorArcCycleNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI16PcpErrorArcCycleE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP27PcpErrorArcPermissionDeniedNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI27PcpErrorArcPermissionDeniedE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP32PcpErrorInconsistentPropertyTypeNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI32PcpErrorInconsistentPropertyTypeE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP33PcpErrorInconsistentAttributeTypeNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI33PcpErrorInconsistentAttributeTypeE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP40PcpErrorInconsistentAttributeVariabilityNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI40PcpErrorInconsistentAttributeVariabilityE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP23PcpErrorInvalidPrimPathNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI23PcpErrorInvalidPrimPathE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP24PcpErrorInvalidAssetPathNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI24PcpErrorInvalidAssetPathE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP22PcpErrorMutedAssetPathNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI22PcpErrorMutedAssetPathE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP33PcpErrorInvalidInstanceTargetPathNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI33PcpErrorInvalidInstanceTargetPathE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP33PcpErrorInvalidExternalTargetPathNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI33PcpErrorInvalidExternalTargetPathE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP25PcpErrorInvalidTargetPathNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI25PcpErrorInvalidTargetPathE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP29PcpErrorInvalidSublayerOffsetNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI29PcpErrorInvalidSublayerOffsetE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP30PcpErrorInvalidReferenceOffsetNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI30PcpErrorInvalidReferenceOffsetE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP32PcpErrorInvalidSublayerOwnershipNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI32PcpErrorInvalidSublayerOwnershipE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP27PcpErrorInvalidSublayerPathNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI27PcpErrorInvalidSublayerPathE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP33PcpErrorOpinionAtRelocationSourceNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI33PcpErrorOpinionAtRelocationSourceE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP28PcpErrorPrimPermissionDeniedNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI28PcpErrorPrimPermissionDeniedE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP32PcpErrorPropertyPermissionDeniedNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI32PcpErrorPropertyPermissionDeniedE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP21PcpErrorSublayerCycleNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI21PcpErrorSublayerCycleE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP30PcpErrorTargetPermissionDeniedNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI30PcpErrorTargetPermissionDeniedE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__120__shared_ptr_pointerIP26PcpErrorUnresolvedPrimPathNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI26PcpErrorUnresolvedPrimPathE27__shared_ptr_default_deleteIS1_S1_EE
22Pcp_LayerStackRegistry
17PcpDependencyType
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIMN8PcpCache16_ParallelIndexerEFvPK12PcpPrimIndex7SdfPathbEJPS8_RSB_RSC_bEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIMN8PcpCache16_ParallelIndexerEFvPK12PcpPrimIndex7SdfPathbEJPS4_RS7_RS8_bEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIMN8PcpCache16_ParallelIndexerEFvPK12PcpPrimIndex7SdfPathbEJPS8_RSB_SC_RbEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIMN8PcpCache16_ParallelIndexerEFvPK12PcpPrimIndex7SdfPathbEJPS4_RS7_S8_RbEEEEE
20Work_DetachedInvokerI27Work_AsyncMoveDestroyHelperINSt3__16vectorINS1_4pairIPK12PcpPrimIndex7SdfPathEENS1_9allocatorIS8_EEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_0JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_0JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_1JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_1JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_2JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_2JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_3JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_3JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_4JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_4JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_5JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_5JEEEEE
NSt3__110__function6__funcIN8PcpCache32_UntypedIndexingPayloadPredicateENS_9allocatorIS3_EEFbRK7SdfPathEEE
N8PcpCache32_UntypedIndexingPayloadPredicateE
NSt3__120__shared_ptr_pointerIPNS_4pairI7SdfPathS2_EENS_14default_deleteIA_S3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIA_NS_4pairI7SdfPathS2_EEEE
N16PcpMapExpression8VariableE
16Pcp_VariableImpl
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIMN12_GLOBAL__N_17_OpenerEFvNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEERK8TfRefPtrI8SdfLayerERKNS5_3mapISE_SE_NS5_4lessISE_EENSC_INS5_4pairIKSE_SE_EEEEEEEJPS8_N12SdfListProxyI21SdfSubLayerTypePolicyE10_ItemProxyESJ_ST_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIMN12_GLOBAL__N_17_OpenerEFvNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERK8TfRefPtrI8SdfLayerERKNS1_3mapISA_SA_NS1_4lessISA_EENS8_INS1_4pairIKSA_SA_EEEEEEEJPS4_N12SdfListProxyI21SdfSubLayerTypePolicyE10_ItemProxyESF_SP_EEEEE
N12_GLOBAL__N_14Task4TypeE
10PcpArcType
29PcpDynamicFileFormatInterface
8TfRefPtrI18PcpPrimIndex_GraphE
9TfWeakPtrI18PcpPrimIndex_GraphE
15TfWeakPtrFacadeI9TfWeakPtr18PcpPrimIndex_GraphE
8TfRefPtrI22Pcp_LayerStackRegistryE
13PcpLayerStack
8TfRefPtrI12SdfLayerTreeE
9TfWeakPtrI22Pcp_LayerStackRegistryE
15TfWeakPtrFacadeI9TfWeakPtr22Pcp_LayerStackRegistryE
18PcpPrimIndex_Graph
NSt3__120__shared_ptr_pointerIPN18PcpPrimIndex_Graph11_SharedDataENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN18PcpPrimIndex_Graph11_SharedDataEE27__shared_ptr_default_deleteIS2_S2_EE
25SdfAbstractDataTypedValueI9SdfListOpI12SdfReferenceEE
NSt3__110__function6__funcIZL35_PcpComposeSiteReferencesOrPayloadsI12SdfReferenceEvRK7TfTokenRK8TfRefPtrI13PcpLayerStackERK7SdfPathPNS_6vectorIT_NS_9allocatorISG_EEEEPNSF_I16PcpSourceArcInfoNSH_ISL_EEEEEUl13SdfListOpTypeRKS3_E_NSH_ISS_EEFN5boost8optionalIS3_EESP_SR_EEE
NSt3__110__function6__baseIFN5boost8optionalI12SdfReferenceEE13SdfListOpTypeRKS4_EEE
ZL35_PcpComposeSiteReferencesOrPayloadsI12SdfReferenceEvRK7TfTokenRK8TfRefPtrI13PcpLayerStackERK7SdfPathPNSt3__16vectorIT_NSC_9allocatorISE_EEEEPNSD_I16PcpSourceArcInfoNSF_ISJ_EEEEEUl13SdfListOpTypeRKS0_E_
25SdfAbstractDataTypedValueI9SdfListOpI10SdfPayloadEE
NSt3__110__function6__funcIZL35_PcpComposeSiteReferencesOrPayloadsI10SdfPayloadEvRK7TfTokenRK8TfRefPtrI13PcpLayerStackERK7SdfPathPNS_6vectorIT_NS_9allocatorISG_EEEEPNSF_I16PcpSourceArcInfoNSH_ISL_EEEEEUl13SdfListOpTypeRKS3_E_NSH_ISS_EEFN5boost8optionalIS3_EESP_SR_EEE
NSt3__110__function6__baseIFN5boost8optionalI10SdfPayloadEE13SdfListOpTypeRKS4_EEE
ZL35_PcpComposeSiteReferencesOrPayloadsI10SdfPayloadEvRK7TfTokenRK8TfRefPtrI13PcpLayerStackERK7SdfPathPNSt3__16vectorIT_NSC_9allocatorISE_EEEEPNSD_I16PcpSourceArcInfoNSF_ISJ_EEEEEUl13SdfListOpTypeRKS0_E_
25SdfAbstractDataTypedValueI13SdfPermissionE
25SdfAbstractDataTypedValueI9SdfListOpI7SdfPathEE
25SdfAbstractDataTypedValueINSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEEE
NSt3__110__function6__funcINS_6__bindIPFN5boost8optionalI7SdfPathEE13SdfListOpTypeRK7PcpSiteRK10PcpNodeRefRKS5_RK9SdfHandleI15SdfPropertySpecE11SdfSpecTypeP8PcpCachePNS_6vectorINS_10shared_ptrI12PcpErrorBaseEENS_9allocatorISR_EEEESV_EJRKNS_12placeholders4__phILi1EEENS_17reference_wrapperIS9_EESB_RKNSZ_ILi2EEENS13_ISJ_EERKSL_RSN_SV_RSV_EEENSS_IS1D_EEFS6_S7_SF_EEE
NSt3__110__function6__baseIFN5boost8optionalI7SdfPathEE13SdfListOpTypeRKS4_EEE
NSt3__16__bindIPFN5boost8optionalI7SdfPathEE13SdfListOpTypeRK7PcpSiteRK10PcpNodeRefRKS3_RK9SdfHandleI15SdfPropertySpecE11SdfSpecTypeP8PcpCachePNS_6vectorINS_10shared_ptrI12PcpErrorBaseEENS_9allocatorISP_EEEEST_EJRKNS_12placeholders4__phILi1EEENS_17reference_wrapperIS7_EES9_RKNSX_ILi2EEENS11_ISH_EERKSJ_RSL_ST_RST_EEE
NSt3__118__weak_result_typeIPFN5boost8optionalI7SdfPathEE13SdfListOpTypeRK7PcpSiteRK10PcpNodeRefRKS3_RK9SdfHandleI15SdfPropertySpecE11SdfSpecTypeP8PcpCachePNS_6vectorINS_10shared_ptrI12PcpErrorBaseEENS_9allocatorISP_EEEEST_EEE
21SdfHumanReadableValue
13SdfFileFormat
17Sdf_ChangeManager
N3tbb10interface626enumerable_thread_specificIN17Sdf_ChangeManager5_DataENS_23cache_aligned_allocatorIS3_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafIN17Sdf_ChangeManager5_DataENS1_20construct_by_defaultIS4_EEEE
N3tbb10interface68internal13callback_baseIN17Sdf_ChangeManager5_DataEEE
N3tbb10interface68internal20construct_by_defaultIN17Sdf_ChangeManager5_DataEEE
12SdfLayerTree
13SdfSchemaBase
9SdfSchema
14TraceCollector
13SdfLengthUnit
6TfType
N5boost14operators_impl16totally_ordered1I6TfEnumNS0_16operators_detail10empty_baseIS2_EEEE
N5boost14operators_impl21less_than_comparable1I6TfEnumNS0_20equality_comparable1IS2_NS0_16operators_detail10empty_baseIS2_EEEEEE
20SdfDimensionlessUnit
N8TfNotice10_DelivererI9TfWeakPtrI13SdfSchemaBaseE12TfAnyWeakPtrMS2_FvRKN10PlugNotice18DidRegisterPluginsEES6_EE
N8TfNotice18_StandardDelivererINS_10_DelivererI9TfWeakPtrI13SdfSchemaBaseE12TfAnyWeakPtrMS3_FvRKN10PlugNotice18DidRegisterPluginsEES7_EEEE
9TfWeakPtrI13SdfSchemaBaseE
15TfWeakPtrFacadeI9TfWeakPtr13SdfSchemaBaseE
15SdfAbstractData
26SdfAbstractDataSpecVisitor
30SdfAbstractData_IsEmptyChecker
25SdfAbstractData_CopySpecs
34SdfAbstractData_CheckAllSpecsExist
34SdfAbstractData_CheckAllSpecsMatch
35SdfAbstractData_SortedPathCollector
8TfRefPtrI15SdfAbstractDataE
25SdfAbstractDataTypedValueI6TfEnumE
N22SdfNamespaceEditDetail6ResultE
23SdfSpecTypeRegistration
16Sdf_SpecTypeInfo
17SdfTextFileFormat
21Sdf_FileFormatFactoryI17SdfTextFileFormatE
NSt3__110__function6__baseIFN5boost8optionalI7SdfPathEERKS4_EEE
8SdfLayer
ZN8SdfLayer8_SetDataERK9TfWeakPtrI15SdfAbstractDataEE14_SpecsToDelete
ZN8SdfLayer8_SetDataERK9TfWeakPtrI15SdfAbstractDataEE14_SpecsToCreate
ZN8SdfLayer8_SetDataERK9TfWeakPtrI15SdfAbstractDataEE12_SpecUpdater
8TfRefPtrI25SdfLayerStateDelegateBaseE
N5boost6detail17sp_counted_impl_pI22Sdf_SubLayerListEditorEE
8TfRefPtrI7SdfDataE
9TfWeakPtrI15SdfAbstractDataE
15TfWeakPtrFacadeI9TfWeakPtr15SdfAbstractDataE
NSt3__110__function6__baseIFvRK7SdfPathEEE
NSt3__110__function6__funcINS_6__bindIPFvP15SdfAbstractDataRK7SdfPathEJS4_RKNS_12placeholders4__phILi1EEEEEENS_9allocatorISF_EEFvS7_EEE
NSt3__16__bindIPFvP15SdfAbstractDataRK7SdfPathEJS2_RKNS_12placeholders4__phILi1EEEEEE
NSt3__118__weak_result_typeIPFvP15SdfAbstractDataRK7SdfPathEEE
NSt3__115binary_functionIP15SdfAbstractDataRK7SdfPathvEE
7SdfData
20Work_DetachedInvokerI27Work_AsyncSwapDestroyHelperI9TfHashMapI7SdfPathN7SdfData9_SpecDataENS2_4HashENSt3__18equal_toIS2_EENS6_9allocatorINS6_4pairIKS2_S4_EEEEEEE
NSt3__110__function6__funcIPFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEENS5_ISB_EESA_EE
PFvRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE
FvRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE
15SdfMapEditProxyI12VtDictionary34SdfIdentityMapEditProxyValuePolicyIS0_EE
N5boost14operators_impl15totally_orderedI15SdfMapEditProxyI12VtDictionary34SdfIdentityMapEditProxyValuePolicyIS3_EES3_NS0_16operators_detail10empty_baseIS6_EENS7_7false_tEEE
N5boost14operators_impl16totally_ordered2I15SdfMapEditProxyI12VtDictionary34SdfIdentityMapEditProxyValuePolicyIS3_EES3_NS0_16operators_detail10empty_baseIS6_EEEE
N5boost14operators_impl21less_than_comparable2I15SdfMapEditProxyI12VtDictionary34SdfIdentityMapEditProxyValuePolicyIS3_EES3_NS0_20equality_comparable2IS6_S3_NS0_16operators_detail10empty_baseIS6_EEEEEE
N5boost14operators_impl20equality_comparable2I15SdfMapEditProxyI12VtDictionary34SdfIdentityMapEditProxyValuePolicyIS3_EES3_NS0_16operators_detail10empty_baseIS6_EEEE
N5boost14operators_impl16operators_detail10empty_baseI15SdfMapEditProxyI12VtDictionary34SdfIdentityMapEditProxyValuePolicyIS4_EEEE
15SdfMapEditProxyINSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEE34SdfIdentityMapEditProxyValuePolicyISE_EE
N5boost14operators_impl15totally_orderedI15SdfMapEditProxyINSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEE34SdfIdentityMapEditProxyValuePolicyISH_EESH_NS0_16operators_detail10empty_baseISK_EENSL_7false_tEEE
N5boost14operators_impl16totally_ordered2I15SdfMapEditProxyINSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEE34SdfIdentityMapEditProxyValuePolicyISH_EESH_NS0_16operators_detail10empty_baseISK_EEEE
N5boost14operators_impl21less_than_comparable2I15SdfMapEditProxyINSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEE34SdfIdentityMapEditProxyValuePolicyISH_EESH_NS0_20equality_comparable2ISK_SH_NS0_16operators_detail10empty_baseISK_EEEEEE
N5boost14operators_impl20equality_comparable2I15SdfMapEditProxyINSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEE34SdfIdentityMapEditProxyValuePolicyISH_EESH_NS0_16operators_detail10empty_baseISK_EEEE
N5boost14operators_impl16operators_detail10empty_baseI15SdfMapEditProxyINSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4lessISB_EENS9_INS4_4pairIKSB_SB_EEEEEE34SdfIdentityMapEditProxyValuePolicyISI_EEEE
15SdfMapEditProxyINSt3__13mapI7SdfPathS2_NS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S2_EEEEEE31SdfRelocatesMapProxyValuePolicyE
N5boost14operators_impl15totally_orderedI15SdfMapEditProxyINSt3__13mapI7SdfPathS5_NS3_4lessIS5_EENS3_9allocatorINS3_4pairIKS5_S5_EEEEEE31SdfRelocatesMapProxyValuePolicyESD_NS0_16operators_detail10empty_baseISF_EENSG_7false_tEEE
N5boost14operators_impl16totally_ordered2I15SdfMapEditProxyINSt3__13mapI7SdfPathS5_NS3_4lessIS5_EENS3_9allocatorINS3_4pairIKS5_S5_EEEEEE31SdfRelocatesMapProxyValuePolicyESD_NS0_16operators_detail10empty_baseISF_EEEE
N5boost14operators_impl21less_than_comparable2I15SdfMapEditProxyINSt3__13mapI7SdfPathS5_NS3_4lessIS5_EENS3_9allocatorINS3_4pairIKS5_S5_EEEEEE31SdfRelocatesMapProxyValuePolicyESD_NS0_20equality_comparable2ISF_SD_NS0_16operators_detail10empty_baseISF_EEEEEE
N5boost14operators_impl20equality_comparable2I15SdfMapEditProxyINSt3__13mapI7SdfPathS5_NS3_4lessIS5_EENS3_9allocatorINS3_4pairIKS5_S5_EEEEEE31SdfRelocatesMapProxyValuePolicyESD_NS0_16operators_detail10empty_baseISF_EEEE
N5boost14operators_impl16operators_detail10empty_baseI15SdfMapEditProxyINSt3__13mapI7SdfPathS6_NS4_4lessIS6_EENS4_9allocatorINS4_4pairIKS6_S6_EEEEEE31SdfRelocatesMapProxyValuePolicyEEE
18SdfListEditorProxyI16SdfPathKeyPolicyE
18SdfListEditorProxyI22SdfReferenceTypePolicyE
18SdfListEditorProxyI20SdfPayloadTypePolicyE
N5boost6detail17sp_counted_impl_pI32Sdf_RelationshipTargetListEditorEE
N5boost6detail15sp_counted_baseE
N5boost6detail17sp_counted_impl_pI33Sdf_AttributeConnectionListEditorEE
20Sdf_ListOpListEditorI16SdfPathKeyPolicyE
14Sdf_ListEditorI16SdfPathKeyPolicyE
19TfWeakPtrFacadeBase
ZN20Sdf_ListOpListEditorI16SdfPathKeyPolicyE15ModifyItemEditsERKNSt3__18functionIFN5boost8optionalI7SdfPathEERKS6_EEEEUlS9_E_
N5boost6detail17sp_counted_impl_pI20Sdf_ListOpListEditorI16SdfPathKeyPolicyEEE
20Sdf_ListOpListEditorI22SdfReferenceTypePolicyE
14Sdf_ListEditorI22SdfReferenceTypePolicyE
9SdfListOpI12SdfReferenceE
NSt3__110__function6__funcIZN20Sdf_ListOpListEditorI22SdfReferenceTypePolicyE15ModifyItemEditsERKNS_8functionIFN5boost8optionalI12SdfReferenceEERKS8_EEEEUlSB_E_NS_9allocatorISG_EESC_EE
NSt3__110__function6__baseIFN5boost8optionalI12SdfReferenceEERKS4_EEE
ZN20Sdf_ListOpListEditorI22SdfReferenceTypePolicyE15ModifyItemEditsERKNSt3__18functionIFN5boost8optionalI12SdfReferenceEERKS6_EEEEUlS9_E_
12SdfReference
N5boost14operators_impl21less_than_comparable1I12SdfReferenceNS0_20equality_comparable1IS2_NS0_16operators_detail10empty_baseIS2_EEEEEE
N5boost14operators_impl20equality_comparable1I12SdfReferenceNS0_16operators_detail10empty_baseIS2_EEEE
N5boost6detail17sp_counted_impl_pI20Sdf_ListOpListEditorI22SdfReferenceTypePolicyEEE
20Sdf_ListOpListEditorI20SdfPayloadTypePolicyE
14Sdf_ListEditorI20SdfPayloadTypePolicyE
NSt3__110__function6__funcIZN20Sdf_ListOpListEditorI20SdfPayloadTypePolicyE15ModifyItemEditsERKNS_8functionIFN5boost8optionalI10SdfPayloadEERKS8_EEEEUlSB_E_NS_9allocatorISG_EESC_EE
ZN20Sdf_ListOpListEditorI20SdfPayloadTypePolicyE15ModifyItemEditsERKNSt3__18functionIFN5boost8optionalI10SdfPayloadEERKS6_EEEEUlS9_E_
N5boost14operators_impl15totally_orderedI10SdfPayloadS2_NS0_16operators_detail10empty_baseIS2_EENS3_7false_tEEE
N5boost14operators_impl16totally_ordered1I10SdfPayloadNS0_16operators_detail10empty_baseIS2_EEEE
N5boost14operators_impl16operators_detail10empty_baseI10SdfPayloadEE
N5boost6detail17sp_counted_impl_pI20Sdf_ListOpListEditorI20SdfPayloadTypePolicyEEE
20Sdf_VectorListEditorI21SdfNameTokenKeyPolicy7TfTokenE
14Sdf_ListEditorI21SdfNameTokenKeyPolicyE
NSt3__120__vector_base_commonILb1EEE
NSt3__110__function6__funcIZN20Sdf_VectorListEditorI21SdfNameTokenKeyPolicy7TfTokenE15ModifyItemEditsERKNS_8functionIFN5boost8optionalIS4_EERKS4_EEEEUlSB_E_NS_9allocatorISG_EESC_EE
NSt3__110__function6__baseIFN5boost8optionalI7TfTokenEERKS4_EEE
ZN20Sdf_VectorListEditorI21SdfNameTokenKeyPolicy7TfTokenE15ModifyItemEditsERKNSt3__18functionIFN5boost8optionalIS1_EERKS1_EEEEUlS9_E_
N5boost6detail17sp_counted_impl_pI20Sdf_VectorListEditorI21SdfNameTokenKeyPolicy7TfTokenEEE
N3tbb10strict_ppl16concurrent_queueIN8Sdf_PoolI15Sdf_PathPrimTagLj24ELj8ELj16384EE9_FreeListENS_23cache_aligned_allocatorIS5_EEEE
N3tbb10strict_ppl8internal24concurrent_queue_base_v3IN8Sdf_PoolI15Sdf_PathPrimTagLj24ELj8ELj16384EE9_FreeListEEE
N3tbb10strict_ppl16concurrent_queueIN8Sdf_PoolI15Sdf_PathPropTagLj24ELj8ELj16384EE9_FreeListENS_23cache_aligned_allocatorIS5_EEEE
N3tbb10strict_ppl8internal24concurrent_queue_base_v3IN8Sdf_PoolI15Sdf_PathPropTagLj24ELj8ELj16384EE9_FreeListEEE
33Sdf_AttributeConnectionListEditor
24Sdf_ConnectionListEditorI34Sdf_AttributeConnectionChildPolicyE
32Sdf_RelationshipTargetListEditor
24Sdf_ConnectionListEditorI33Sdf_RelationshipTargetChildPolicyE
7SdfSpec
15TfWeakPtrFacadeI9TfWeakPtr8SdfLayerE
NSt3__110__function6__funcIZN20Sdf_ListOpListEditorI16SdfPathKeyPolicyE15ModifyItemEditsERKNS_8functionIFN5boost8optionalI7SdfPathEERKS8_EEEEUlSB_E_NS_9allocatorISG_EESC_EE
N5boost14operators_impl15totally_orderedI7SdfPathS2_NS0_16operators_detail10empty_baseIS2_EENS3_7false_tEEE
N5boost14operators_impl16totally_ordered1I7SdfPathNS0_16operators_detail10empty_baseIS2_EEEE
N5boost14operators_impl16operators_detail10empty_baseI7SdfPathEE
13SdfListOpType
NSt3__16vectorI12SdfReferenceNS_9allocatorIS1_EEEE
NSt3__113__vector_baseI12SdfReferenceNS_9allocatorIS1_EEEE
 !"#$%&'()*+,-./01234567
N5boost7bad_getE
9SdfListOpIxE
9SdfListOpIyE
9SdfListOpINSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE
N5boost14operators_impl19equality_comparableI20SdfUnregisteredValueS2_NS0_16operators_detail10empty_baseIS2_EENS3_7false_tEEE
9SdfListOpI20SdfUnregisteredValueE
9SdfListOpI7SdfPathE
NSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEEE
NSt3__113__vector_baseI7SdfPathNS_9allocatorIS1_EEEE
7SdfPath
N5boost14operators_impl21less_than_comparable1I7SdfPathNS0_20equality_comparable1IS2_NS0_16operators_detail10empty_baseIS2_EEEEEE
N5boost14operators_impl20equality_comparable1I7SdfPathNS0_16operators_detail10empty_baseIS2_EEEE
N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_7bad_getEEEEE
N5boost16exception_detail10clone_baseE
NSt3__113__vector_baseI14SdfLayerOffsetNS_9allocatorIS1_EEEE
13SdfPermission
NSt3__13mapI7SdfPathS1_NS_4lessIS1_EENS_9allocatorINS_4pairIKS1_S1_EEEEEE
6TfEnum
N5boost14operators_impl15totally_orderedI6TfEnumS2_NS0_16operators_detail10empty_baseIS2_EENS3_7false_tEEE
N5boost14operators_impl20equality_comparable1I6TfEnumNS0_16operators_detail10empty_baseIS2_EEEE
N5boost14operators_impl16operators_detail10empty_baseI6TfEnumEE
N5boost3any6holderIiEE
N5boost3any11placeholderE
NSt3__110__function6__funcINS_6__bindIRFvP21Sdf_TextParserContextRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEJS4_RKNS_12placeholders4__phILi1EEEEEENS8_ISK_EEFvSC_EEE
NSt3__110__function6__baseIFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
NSt3__16__bindIRFvP21Sdf_TextParserContextRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEJS2_RKNS_12placeholders4__phILi1EEEEEE
NSt3__118__weak_result_typeIPFvP21Sdf_TextParserContextRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
NSt3__115binary_functionIP21Sdf_TextParserContextRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEvEE
25SdfLayerStateDelegateBase
27SdfSimpleLayerStateDelegate
13Sdf_MapEditorINSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEEE
16Sdf_LsdMapEditorINSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEEE
13Sdf_MapEditorINSt3__13mapI7SdfPathS2_NS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S2_EEEEEEE
16Sdf_LsdMapEditorINSt3__13mapI7SdfPathS2_NS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S2_EEEEEEE
N5boost6detail17sp_counted_impl_pI16Sdf_LsdMapEditorINSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEEEEE
N5boost6detail17sp_counted_impl_pI16Sdf_LsdMapEditorINSt3__13mapI7SdfPathS5_NS3_4lessIS5_EENS3_9allocatorINS3_4pairIKS5_S5_EEEEEEEEE
14SdfLayerOffset
N5boost14operators_impl15totally_orderedI14SdfLayerOffsetS2_NS0_16operators_detail10empty_baseIS2_EENS3_7false_tEEE
N5boost14operators_impl16totally_ordered1I14SdfLayerOffsetNS0_16operators_detail10empty_baseIS2_EEEE
N5boost14operators_impl21less_than_comparable1I14SdfLayerOffsetNS0_20equality_comparable1IS2_NS0_16operators_detail10empty_baseIS2_EEEEEE
N5boost14operators_impl20equality_comparable1I14SdfLayerOffsetNS0_16operators_detail10empty_baseIS2_EEEE
N5boost14operators_impl16operators_detail10empty_baseI14SdfLayerOffsetEE
NSt3__16vectorI10SdfPayloadNS_9allocatorIS1_EEEE
NSt3__113__vector_baseI10SdfPayloadNS_9allocatorIS1_EEEE
N9SdfNotice4BaseE
N9SdfNotice27LayersDidChangeSentPerLayerE
N9SdfNotice19BaseLayersDidChangeE
N9SdfNotice15LayersDidChangeE
N9SdfNotice18LayerInfoDidChangeE
N9SdfNotice20LayerMutenessChangedE
N9SdfNotice24LayerIdentifierDidChangeE
N9SdfNotice22LayerDidReplaceContentE
N9SdfNotice21LayerDidReloadContentE
N9SdfNotice23LayerDidSaveLayerToFileE
N9SdfNotice21LayerDirtinessChangedE
Ulg 
g"BD 
! U@
FG:$#.23%(
&6N)78<P
X+K,
&'()*.
7-::
  !!!!"""""""####$$%%&&''())**
N5boost6detail17sp_counted_impl_pIN22Sdf_FileFormatRegistry5_InfoEEE
NSt3__110__function6__funcINS_6__bindIRF7VtValueRKNS_6vectorIjNS_9allocatorIjEEEERKNS4_IN17Sdf_ParserHelpers5ValueENS5_ISB_EEEERmPNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEEEJRKNS_12placeholders4__phILi1EEERKNSQ_ILi2EEERKNSQ_ILi3EEERKNSQ_ILi4EEEEEENS5_IS13_EESN_EE
NSt3__110__function6__baseIF7VtValueRKNS_6vectorIjNS_9allocatorIjEEEERKNS3_IN17Sdf_ParserHelpers5ValueENS4_ISA_EEEERmPNS_12basic_stringIcNS_11char_traitsIcEENS4_IcEEEEEEE
NSt3__16__bindIRF7VtValueRKNS_6vectorIjNS_9allocatorIjEEEERKNS2_IN17Sdf_ParserHelpers5ValueENS3_IS9_EEEERmPNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEEJRKNS_12placeholders4__phILi1EEERKNSO_ILi2EEERKNSO_ILi3EEERKNSO_ILi4EEEEEE
NSt3__118__weak_result_typeIPF7VtValueRKNS_6vectorIjNS_9allocatorIjEEEERKNS2_IN17Sdf_ParserHelpers5ValueENS3_IS9_EEEERmPNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEEEE
9TfWeakPtrIK13SdfFileFormatE
22Sdf_SubLayerListEditor
20Sdf_VectorListEditorI21SdfSubLayerTypePolicyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE
14Sdf_ListEditorI21SdfSubLayerTypePolicyE
NSt3__110__function6__funcIZN20Sdf_VectorListEditorI21SdfSubLayerTypePolicyNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE15ModifyItemEditsERKNS_8functionIFN5boost8optionalIS9_EERKS9_EEEEUlSG_E_NS7_ISL_EESH_EE
ZN20Sdf_VectorListEditorI21SdfSubLayerTypePolicyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE15ModifyItemEditsERKNS1_8functionIFN5boost8optionalIS7_EERKS7_EEEEUlSE_E_
N3tbb10interface98internal9start_forINS_13blocked_rangeImEEZ16WorkParallelForNIZ28Sdf_ClearPathTableInParallelPPvmPFvS6_EE3$_0EvmOT_mE21Work_ParallelForN_TBBKNS_16auto_partitionerEEE
@14SdfAngularUnit
18Sdf_CleanupTracker
N13SdfChangeList18SubLayerChangeTypeE
11SdfPrimSpec
NSt3__16vectorI9SdfHandleI11SdfPrimSpecENS_9allocatorIS3_EEEE
NSt3__113__vector_baseI9SdfHandleI11SdfPrimSpecENS_9allocatorIS3_EEEE
NSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE9SdfHandleI17SdfVariantSetSpecENS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEE
NSt3__121__basic_string_commonILb1EEE
12VtDictionary
20Sdf_ListOpListEditorI16SdfNameKeyPolicyE
14Sdf_ListEditorI16SdfNameKeyPolicyE
NSt3__110__function6__funcIZN20Sdf_ListOpListEditorI16SdfNameKeyPolicyE15ModifyItemEditsERKNS_8functionIFN5boost8optionalINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEERKSD_EEEEUlSG_E_NSB_ISL_EESH_EE
NSt3__110__function6__baseIFN5boost8optionalINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEERKS9_EEE
ZN20Sdf_ListOpListEditorI16SdfNameKeyPolicyE15ModifyItemEditsERKNSt3__18functionIFN5boost8optionalINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEERKSB_EEEEUlSE_E_
N5boost6detail17sp_counted_impl_pI20Sdf_ListOpListEditorI16SdfNameKeyPolicyEEE
NSt3__16vectorI7TfTokenNS_9allocatorIS1_EEEE
26UsdDeformersDeformableMesh
22UsdDeformersBlendShape
27UsdDeformersSkinDeformerAPI
12UsdGeomScope
13UsdGeomSphere
3>16UsdGeomBoundable
13UsdGeomPoints
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIMN16UsdGeomBBoxCache19_MasterBBoxResolverEFvRKNS7_12_PrimContextEP9TfHashMapIS9_NS8_11_MasterTaskEN5boost4hashIS9_EENS5_8equal_toIS9_EENS5_9allocatorINS5_4pairISA_SD_EEEEEPNS_10interface626enumerable_thread_specificI17UsdGeomXformCacheNS_23cache_aligned_allocatorISR_EELNS_18ets_key_usage_typeE1EEEPS3_EJPS8_SB_SO_SW_SX_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIMN16UsdGeomBBoxCache19_MasterBBoxResolverEFvRKNS3_12_PrimContextEP9TfHashMapIS5_NS4_11_MasterTaskEN5boost4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIS6_S9_EEEEEPN3tbb10interface626enumerable_thread_specificI17UsdGeomXformCacheNSL_23cache_aligned_allocatorISO_EELNSL_18ets_key_usage_typeE1EEEP19WorkArenaDispatcherEJPS4_S7_SK_ST_SV_EEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIMN16UsdGeomBBoxCache19_MasterBBoxResolverEFvRKNS7_12_PrimContextEP9TfHashMapIS9_NS8_11_MasterTaskEN5boost4hashIS9_EENS5_8equal_toIS9_EENS5_9allocatorINS5_4pairISA_SD_EEEEEPNS_10interface626enumerable_thread_specificI17UsdGeomXformCacheNS_23cache_aligned_allocatorISR_EELNS_18ets_key_usage_typeE1EEEPS3_EJPS8_SB_RSO_RSW_RSX_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIMN16UsdGeomBBoxCache19_MasterBBoxResolverEFvRKNS3_12_PrimContextEP9TfHashMapIS5_NS4_11_MasterTaskEN5boost4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIS6_S9_EEEEEPN3tbb10interface626enumerable_thread_specificI17UsdGeomXformCacheNSL_23cache_aligned_allocatorISO_EELNSL_18ets_key_usage_typeE1EEEP19WorkArenaDispatcherEJPS4_S7_RSK_RST_RSV_EEEEE
N3tbb10interface626enumerable_thread_specificI17UsdGeomXformCacheNS_23cache_aligned_allocatorIS2_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafI17UsdGeomXformCacheNS1_20construct_by_defaultIS3_EEEE
N3tbb10interface68internal13callback_baseI17UsdGeomXformCacheEE
N3tbb10interface68internal20construct_by_defaultI17UsdGeomXformCacheEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIN16UsdGeomBBoxCache9_BBoxTaskEJEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIN16UsdGeomBBoxCache9_BBoxTaskEJEEEEE
N5boost6detail18sp_counted_impl_pdIP17UsdAttributeQueryNS_21checked_array_deleterIS2_EEEE
N5boost21checked_array_deleterI17UsdAttributeQueryEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIRKN16UsdGeomBBoxCache9_BBoxTaskEJEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIRKN16UsdGeomBBoxCache9_BBoxTaskEJEEEEE
?11UsdGeomCube
15UsdGeomCylinder
15UsdGeomModelAPI
11UsdGeomMesh
15TfWeakPtrFacadeI9TfWeakPtr8UsdStageE
18UsdGeomPrimvarsAPI
13UsdGeomCamera
N12_GLOBAL__N_117_FunctionRegistryE
N8TfNotice10_DelivererI9TfWeakPtrIN12_GLOBAL__N_117_FunctionRegistryEE12TfAnyWeakPtrMS3_FvRKN10PlugNotice18DidRegisterPluginsEES7_EE
N8TfNotice18_StandardDelivererINS_10_DelivererI9TfWeakPtrIN12_GLOBAL__N_117_FunctionRegistryEE12TfAnyWeakPtrMS4_FvRKN10PlugNotice18DidRegisterPluginsEES8_EEEE
9TfWeakPtrIN12_GLOBAL__N_117_FunctionRegistryEE
15TfWeakPtrFacadeI9TfWeakPtrN12_GLOBAL__N_117_FunctionRegistryEE
12UsdGeomGprim
21UsdGeomPointInstancer
N21UsdGeomPointInstancer19ProtoXformInclusionE
N21UsdGeomPointInstancer15MaskApplicationE
N3tbb10interface98internal9start_forINS_13blocked_rangeImEEZ16WorkParallelForNIRKZN21UsdGeomPointInstancer31ComputeInstanceTransformsAtTimeEP7VtArrayI10GfMatrix4dER9TfWeakPtrI8UsdStageE11UsdTimeCodeRKS7_IiERKS7_I7GfVec3fESM_SF_SM_SM_RKS7_I7GfQuathESM_SF_RKNSt3__16vectorI7SdfPathNSR_9allocatorIST_EEEERKNSS_IbNSU_IbEEEEfE3$_0EvmOT_mE21Work_ParallelForN_TBBKNS_16auto_partitionerEEE
N3tbb10interface98internal9start_forINS_13blocked_rangeImEEZ16WorkParallelForNIRKZNK21UsdGeomPointInstancer28_ComputeExtentFromTransformsEP7VtArrayI7GfVec3fERKS7_IiERKNSt3__16vectorIbNSE_9allocatorIbEEEERK15UsdRelationshipRKNSF_I7SdfPathNSG_ISO_EEEERKS7_I10GfMatrix4dE11UsdTimeCodePKST_E3$_1EvmOT_mE21Work_ParallelForN_TBBKNS_16auto_partitionerEEE
N3tbb10interface98internal12start_reduceINS_13blocked_rangeImEENS_8internal18lambda_reduce_bodyIS4_9GfRange3dZ19WorkParallelReduceNIZNK21UsdGeomPointInstancer28_ComputeExtentFromTransformsEP7VtArrayI7GfVec3fERKSA_IiERKNSt3__16vectorIbNSH_9allocatorIbEEEERK15UsdRelationshipRKNSI_I7SdfPathNSJ_ISR_EEEERKSA_I10GfMatrix4dE11UsdTimeCodePKSW_E3$_2ZNKS9_28_ComputeExtentFromTransformsESD_SG_SN_SQ_SV_SZ_S10_S12_E3$_3S7_ET1_RKS15_mOT_OT0_mE13Work_Body_TBBS14_EEKNS_16auto_partitionerEEE
N3tbb10interface98internal13finish_reduceINS_8internal18lambda_reduce_bodyINS_13blocked_rangeImEE9GfRange3dZ19WorkParallelReduceNIZNK21UsdGeomPointInstancer28_ComputeExtentFromTransformsEP7VtArrayI7GfVec3fERKSA_IiERKNSt3__16vectorIbNSH_9allocatorIbEEEERK15UsdRelationshipRKNSI_I7SdfPathNSJ_ISR_EEEERKSA_I10GfMatrix4dE11UsdTimeCodePKSW_E3$_2ZNKS9_28_ComputeExtentFromTransformsESD_SG_SN_SQ_SV_SZ_S10_S12_E3$_3S7_ET1_RKS15_mOT_OT0_mE13Work_Body_TBBS14_EEEE
14UsdGeomCapsule
N14UsdGeomXformOp4TypeE
N14UsdGeomXformOp9PrecisionE
11UsdGeomCone
16UsdGeomXformable
N5boost16exception_detail19error_info_injectorINS_7bad_getEEE
16UsdGeomMotionAPI
13UsdGeomSubset
16UsdGeomImageable
9TfWeakPtrI8UsdStageE
15TfWeakPtrFacadeI9TfWeakPtr10PlugPluginE
13UsdGeomCurves
17UsdGeomPointBased
N3tbb10interface98internal12start_reduceINS_13blocked_rangeImEENS_8internal18lambda_reduce_bodyIS4_9GfRange3dZ19WorkParallelReduceNIZN17UsdGeomPointBased13ComputeExtentERK7VtArrayI7GfVec3fEPSC_E3$_0ZN12_GLOBAL__N_118_ComputeExtentImplISG_EEbSE_SF_OT_EUlS7_S7_E_S7_ET1_RKSM_mSK_OT0_mE13Work_Body_TBBSL_EEKNS_16auto_partitionerEEE
N3tbb10interface98internal13finish_reduceINS_8internal18lambda_reduce_bodyINS_13blocked_rangeImEE9GfRange3dZ19WorkParallelReduceNIZN17UsdGeomPointBased13ComputeExtentERK7VtArrayI7GfVec3fEPSC_E3$_0ZN12_GLOBAL__N_118_ComputeExtentImplISG_EEbSE_SF_OT_EUlS7_S7_E_S7_ET1_RKSM_mSK_OT0_mE13Work_Body_TBBSL_EEEE
N3tbb10interface98internal12start_reduceINS_13blocked_rangeImEENS_8internal18lambda_reduce_bodyIS4_9GfRange3dZ19WorkParallelReduceNIZN17UsdGeomPointBased13ComputeExtentERK7VtArrayI7GfVec3fERK10GfMatrix4dPSC_E3$_1ZN12_GLOBAL__N_118_ComputeExtentImplISJ_EEbSE_SI_OT_EUlS7_S7_E_S7_ET1_RKSP_mSN_OT0_mE13Work_Body_TBBSO_EEKNS_16auto_partitionerEEE
N3tbb10interface98internal13finish_reduceINS_8internal18lambda_reduce_bodyINS_13blocked_rangeImEE9GfRange3dZ19WorkParallelReduceNIZN17UsdGeomPointBased13ComputeExtentERK7VtArrayI7GfVec3fERK10GfMatrix4dPSC_E3$_1ZN12_GLOBAL__N_118_ComputeExtentImplISJ_EEbSE_SI_OT_EUlS7_S7_E_S7_ET1_RKSP_mSN_OT0_mE13Work_Body_TBBSO_EEEE
17UsdGeomNurbsPatch
12UsdGeomXform
16UsdShadeMaterial
NSt3__110__function6__baseIFbRK7SdfPathEEE
22UsdShadeConnectableAPI
14UsdShadeShader
26UsdShadeMaterialBindingAPI
30SdfAbstractDataConstTypedValueI7TfTokenE
25SdfAbstractDataTypedValueI7TfTokenE
20SdfAbstractDataValue
NSt3__110__function6__funcIZN26UsdShadeMaterialBindingAPI14BindingsAtPrimC1ERK7UsdPrimRK7TfTokenE3$_0NS_9allocatorISA_EEFbS9_EEE
ZN26UsdShadeMaterialBindingAPI14BindingsAtPrimC1ERK7UsdPrimRK7TfTokenE3$_0
17UsdShadeNodeGraph
NSt3__110__function6__funcIZL26_ExtractExternalReferencesRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKN12_GLOBAL__N_124_ReferenceTypesToIncludeEPNS_6vectorIS7_NS5_IS7_EEEESH_SH_E3$_1NS5_ISI_EEFvS9_RKNSA_8_DepTypeEEEE
NSt3__110__function6__baseIFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKN12_GLOBAL__N_18_DepTypeEEEE
ZL26_ExtractExternalReferencesRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKN12_GLOBAL__N_124_ReferenceTypesToIncludeEPNS_6vectorIS5_NS3_IS5_EEEESF_SF_E3$_1
NSt3__110__function6__funcINS_6__bindIMN12_GLOBAL__N_113_FileAnalyzerEFN5boost8optionalI10SdfPayloadEERKS7_EJPS4_RKNS_12placeholders4__phILi1EEEEEENS_9allocatorISJ_EEFS8_SA_EEE
NSt3__16__bindIMN12_GLOBAL__N_113_FileAnalyzerEFN5boost8optionalI10SdfPayloadEERKS5_EJPS2_RKNS_12placeholders4__phILi1EEEEEE
NSt3__118__weak_result_typeIMN12_GLOBAL__N_113_FileAnalyzerEFN5boost8optionalI10SdfPayloadEERKS5_EEE
NSt3__115binary_functionIPN12_GLOBAL__N_113_FileAnalyzerERK10SdfPayloadN5boost8optionalIS4_EEEE
NSt3__110__function6__funcINS_6__bindIMN12_GLOBAL__N_113_FileAnalyzerEFN5boost8optionalI12SdfReferenceEERKS7_EJPS4_RKNS_12placeholders4__phILi1EEEEEENS_9allocatorISJ_EEFS8_SA_EEE
NSt3__16__bindIMN12_GLOBAL__N_113_FileAnalyzerEFN5boost8optionalI12SdfReferenceEERKS5_EJPS2_RKNS_12placeholders4__phILi1EEEEEE
NSt3__118__weak_result_typeIMN12_GLOBAL__N_113_FileAnalyzerEFN5boost8optionalI12SdfReferenceEERKS5_EEE
NSt3__115binary_functionIPN12_GLOBAL__N_113_FileAnalyzerERK12SdfReferenceN5boost8optionalIS4_EEEE
NSt3__110__function6__funcIZN12_GLOBAL__N_115_AssetLocalizerC1ERK12SdfAssetPathRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESE_SE_RKNS_6vectorISC_NSA_ISC_EEEEEUlSE_RK8TfRefPtrI8SdfLayerEbE_NSA_ISP_EEFSC_SE_SO_bEEE
NSt3__110__function6__baseIFNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKS7_RK8TfRefPtrI8SdfLayerEbEEE
ZN12_GLOBAL__N_115_AssetLocalizerC1ERK12SdfAssetPathRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_SC_RKNS4_6vectorISA_NS8_ISA_EEEEEUlSC_RK8TfRefPtrI8SdfLayerEbE_
19VtStreamOutIterator
7VtArrayI10GfMatrix3fE
7VtArrayI10GfMatrix2fE
7VtArrayI9GfRange3fE
7VtArrayI9GfRange3dE
7VtArrayI9GfRange2fE
7VtArrayI9GfRange2dE
7VtArrayI9GfRange1fE
7VtArrayI9GfRange1dE
7VtArrayI10GfIntervalE
7VtArrayI8GfRect2iE
7VtArrayI12GfQuaternionE
7VtArrayIcE
7VtArrayIsE
N7VtArrayI9GfRange1dE9_StreamerE
N7VtArrayI9GfRange1fE9_StreamerE
N7VtArrayI9GfRange2dE9_StreamerE
N7VtArrayI9GfRange2fE9_StreamerE
N7VtArrayI9GfRange3dE9_StreamerE
N7VtArrayI9GfRange3fE9_StreamerE
7VtValue
15Vt_CastRegistry
N5boost7numeric16bad_numeric_castE
N5boost7numeric17negative_overflowE
N5boost7numeric17positive_overflowE
N8pxr_half4halfE
NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
7GfVec4i
7GfVec3h
7GfVec2f
10GfMatrix4f
10GfMatrix2f
10GfMatrix3d
7GfQuatd
N3tbb10strict_ppl16concurrent_queueIPNS_10interface710task_arenaENS_23cache_aligned_allocatorIS4_EEEE
N3tbb10strict_ppl8internal24concurrent_queue_base_v3IPNS_10interface710task_arenaEEE
N3tbb10interface78internal18delegated_functionIKNSt3__16__bindIM14WorkDispatcherFvvEJPS5_EEEEE
10PlugPlugin
N10PlugNotice4BaseE
N10PlugNotice18DidRegisterPluginsE
12PlugRegistry
9TfWeakPtrI12PlugRegistryE
15TfWeakPtrFacadeI9TfWeakPtr12PlugRegistryE
NSt3__110__function6__funcINS_6__bindIM12PlugRegistryFbRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEJPS3_RKNS_12placeholders4__phILi1EEEEEENS7_ISK_EEFbSB_EEE
NSt3__110__function6__baseIFbRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
NSt3__16__bindIM12PlugRegistryFbRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEJPS1_RKNS_12placeholders4__phILi1EEEEEE
NSt3__118__weak_result_typeIM12PlugRegistryFbRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
NSt3__115binary_functionIP12PlugRegistryRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbEE
NSt3__110__function6__funcINS_6__bindIM12PlugRegistryFvRK25Plug_RegistrationMetadataPN3tbb17concurrent_vectorI9TfWeakPtrI10PlugPluginENS7_23cache_aligned_allocatorISB_EEEEEJPS3_RKNS_12placeholders4__phILi1EEESF_EEENS_9allocatorISO_EEFvS6_EEE
NSt3__110__function6__baseIFvRK25Plug_RegistrationMetadataEEE
NSt3__16__bindIM12PlugRegistryFvRK25Plug_RegistrationMetadataPN3tbb17concurrent_vectorI9TfWeakPtrI10PlugPluginENS5_23cache_aligned_allocatorIS9_EEEEEJPS1_RKNS_12placeholders4__phILi1EEESD_EEE
NSt3__118__weak_result_typeIM12PlugRegistryFvRK25Plug_RegistrationMetadataPN3tbb17concurrent_vectorI9TfWeakPtrI10PlugPluginENS5_23cache_aligned_allocatorIS9_EEEEEEE
N3tbb10interface78internal18delegated_functionIKZN12_GLOBAL__N_114_TaskArenaImpl4WaitEvE3$_8EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZ17Plug_ReadPlugInfoRKNSt3__16vectorINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENSA_ISC_EEEERKNS5_8functionIFbRKSC_EEERKNSH_IFvRK25Plug_RegistrationMetadataEEEP14Plug_TaskArenaE3$_0EEEE
N3tbb8internal13function_taskIZ17Plug_ReadPlugInfoRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEERKNS2_8functionIFbRKS9_EEERKNSE_IFvRK25Plug_RegistrationMetadataEEEP14Plug_TaskArenaE3$_0EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZNS3_10_AddPluginEPNS3_12_ReadContextERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEESF_mRK7JsValueE3$_2EEEE
N3tbb8internal13function_taskIZN12_GLOBAL__N_110_AddPluginEPNS2_12_ReadContextERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_mRK7JsValueE3$_2EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZNS3_13_ReadPlugInfoEPNS3_12_ReadContextENSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEE3$_3EEEE
N3tbb8internal13function_taskIZN12_GLOBAL__N_113_ReadPlugInfoEPNS2_12_ReadContextENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE3$_3EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZNS3_26_ReadPlugInfoWithWildcardsEPNS3_12_ReadContextERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEE3$_6EEEE
N3tbb8internal13function_taskIZN12_GLOBAL__N_126_ReadPlugInfoWithWildcardsEPNS2_12_ReadContextERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE3$_6EE
NSt3__120__shared_ptr_pointerIPNS_11basic_regexIcNS_12regex_traitsIcEEEENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrINS_11basic_regexIcNS_12regex_traitsIcEEEEE27__shared_ptr_default_deleteIS4_S4_EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZNS3_26_ReadPlugInfoWithWildcardsEPNS3_12_ReadContextERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEE3$_7EEEE
N3tbb8internal13function_taskIZN12_GLOBAL__N_126_ReadPlugInfoWithWildcardsEPNS2_12_ReadContextERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE3$_7EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZNS3_18_TraverseDirectoryEPNS3_12_ReadContextERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS7_10shared_ptrINS7_11basic_regexIcNS7_12regex_traitsIcEEEEEEE3$_4EEEE
N3tbb8internal13function_taskIZN12_GLOBAL__N_118_TraverseDirectoryEPNS2_12_ReadContextERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_10shared_ptrINS5_11basic_regexIcNS5_12regex_traitsIcEEEEEEE3$_4EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZNS3_18_TraverseDirectoryEPNS3_12_ReadContextERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS7_10shared_ptrINS7_11basic_regexIcNS7_12regex_traitsIcEEEEEEE3$_5EEEE
N3tbb8internal13function_taskIZN12_GLOBAL__N_118_TraverseDirectoryEPNS2_12_ReadContextERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_10shared_ptrINS5_11basic_regexIcNS5_12regex_traitsIcEEEEEEE3$_5EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZ17Plug_ReadPlugInfoRKNSt3__16vectorINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENSA_ISC_EEEERKNS5_8functionIFbRKSC_EEERKNSH_IFvRK25Plug_RegistrationMetadataEEEP14Plug_TaskArenaE3$_1EEEE
N3tbb8internal13function_taskIZ17Plug_ReadPlugInfoRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEERKNS2_8functionIFbRKS9_EEERKNSE_IFvRK25Plug_RegistrationMetadataEEEP14Plug_TaskArenaE3$_1EE
NSt3__110__function6__baseIFbPcPmEEE
Too many arguments to log session command
Too many arguments to postmortem command
NSt3__110__function6__baseIFNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmEEE
PFNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmE
FNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmE
NSt3__111__end_stateIcEE
NSt3__16__nodeIcEE
NSt3__120__shared_ptr_pointerIPNS_13__empty_stateIcEENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrINS_13__empty_stateIcEEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__113__empty_stateIcEE
NSt3__116__owns_one_stateIcEE
NSt3__115__has_one_stateIcEE
NSt3__120__l_anchor_multilineIcEE
NSt3__120__r_anchor_multilineIcEE
NSt3__115__word_boundaryIcNS_12regex_traitsIcEEEE
NSt3__111__lookaheadIcNS_12regex_traitsIcEEEE
NSt3__123__match_any_but_newlineIcEE
NSt3__118__match_char_icaseIcNS_12regex_traitsIcEEEE
NSt3__120__match_char_collateIcNS_12regex_traitsIcEEEE
NSt3__112__match_charIcEE
NSt3__116__back_ref_icaseIcNS_12regex_traitsIcEEEE
NSt3__118__back_ref_collateIcNS_12regex_traitsIcEEEE
NSt3__110__back_refIcEE
NSt3__120__bracket_expressionIcNS_12regex_traitsIcEEEE
NSt3__128__begin_marked_subexpressionIcEE
NSt3__126__end_marked_subexpressionIcEE
NSt3__16__loopIcEE
NSt3__117__owns_two_statesIcEE
NSt3__117__repeat_one_loopIcEE
NSt3__111__alternateIcEE
NSt3__121__empty_non_own_stateIcEE
NSt3__111__match_anyIcEE
N8TfNotice14_DelivererBaseE
8TfNotice
9TfWeakPtrIN8TfNotice14_DelivererBaseEE
15TfWeakPtrFacadeI9TfWeakPtrN8TfNotice14_DelivererBaseEE
N12_GLOBAL__N_122Tf_RegistryManagerImplE
N3tbb10interface626enumerable_thread_specificIPNSt3__14listINS2_8functionIFvvEEENS2_9allocatorIS6_EEEENS_23cache_aligned_allocatorISA_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafIPNSt3__14listINS3_8functionIFvvEEENS3_9allocatorIS7_EEEENS1_20construct_by_defaultISB_EEEE
N3tbb10interface68internal13callback_baseIPNSt3__14listINS3_8functionIFvvEEENS3_9allocatorIS7_EEEEEE
N3tbb10interface68internal20construct_by_defaultIPNSt3__14listINS3_8functionIFvvEEENS3_9allocatorIS7_EEEEEE
N3tbb10interface626enumerable_thread_specificIN12_GLOBAL__N_122Tf_RegistryManagerImpl19_ActiveLibraryStateENS_23cache_aligned_allocatorIS4_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafIN12_GLOBAL__N_122Tf_RegistryManagerImpl19_ActiveLibraryStateENS1_20construct_by_defaultIS5_EEEE
N3tbb10interface68internal13callback_baseIN12_GLOBAL__N_122Tf_RegistryManagerImpl19_ActiveLibraryStateEEE
N3tbb10interface68internal20construct_by_defaultIN12_GLOBAL__N_122Tf_RegistryManagerImpl19_ActiveLibraryStateEEE
NSt3__110__function6__baseIFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_EEE
PFvRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_E
FvRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_E
NSt3__110__function6__baseIFbRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPNS_6vectorIS7_NS5_IS7_EEEERKSC_EEE
15TfDiagnosticMgr
39TF_LOG_STACK_TRACE_ON_ERROR__DebugCodes
N3tbb10interface626enumerable_thread_specificImNS_23cache_aligned_allocatorImEELNS_18ets_key_usage_typeE0EEE
N3tbb10interface68internal8ets_baseILNS_18ets_key_usage_typeE0EEE
N3tbb10interface68internal13callback_leafImNS1_21construct_by_exemplarImEEEE
N3tbb10interface68internal13callback_baseImEE
N3tbb10interface68internal21construct_by_exemplarImEE
N3tbb10interface626enumerable_thread_specificIbNS_23cache_aligned_allocatorIbEELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafIbNS1_20construct_by_defaultIbEEEE
N3tbb10interface68internal13callback_baseIbEE
N3tbb10interface68internal20construct_by_defaultIbEE
N3tbb10interface626enumerable_thread_specificINSt3__14listI7TfErrorNS2_9allocatorIS4_EEEENS_23cache_aligned_allocatorIS7_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafINSt3__14listI7TfErrorNS3_9allocatorIS5_EEEENS1_20construct_by_defaultIS8_EEEE
N3tbb10interface68internal13callback_baseINSt3__14listI7TfErrorNS3_9allocatorIS5_EEEEEE
N3tbb10interface68internal20construct_by_defaultINSt3__14listI7TfErrorNS3_9allocatorIS5_EEEEEE
N3tbb10interface626enumerable_thread_specificIN15TfDiagnosticMgr8_LogTextENS_23cache_aligned_allocatorIS3_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafIN15TfDiagnosticMgr8_LogTextENS1_20construct_by_defaultIS4_EEEE
N3tbb10interface68internal13callback_baseIN15TfDiagnosticMgr8_LogTextEEE
N3tbb10interface68internal20construct_by_defaultIN15TfDiagnosticMgr8_LogTextEEE
N12TfAnyWeakPtr12_EmptyHolderE
N12TfAnyWeakPtr18_PointerHolderBaseE
27TfDebugSymbolsChangedNotice
32TfDebugSymbolEnableChangedNotice
11TfStopwatch
                7TfDebug
22Tf_DebugSymbolRegistry
23TfTypeWasDeclaredNotice
16TfDiagnosticType
14_TfUnknownType
N6TfType11FactoryBaseE
NSt3__16vectorIbNS_9allocatorIbEEEE
NSt3__16vectorIcNS_9allocatorIcEEEE
NSt3__113__vector_baseIcNS_9allocatorIcEEEE
NSt3__16vectorIhNS_9allocatorIhEEEE
NSt3__113__vector_baseIhNS_9allocatorIhEEEE
NSt3__16vectorIsNS_9allocatorIsEEEE
NSt3__113__vector_baseIsNS_9allocatorIsEEEE
NSt3__16vectorItNS_9allocatorItEEEE
NSt3__113__vector_baseItNS_9allocatorItEEEE
NSt3__16vectorIiNS_9allocatorIiEEEE
NSt3__113__vector_baseIiNS_9allocatorIiEEEE
NSt3__16vectorIjNS_9allocatorIjEEEE
NSt3__113__vector_baseIjNS_9allocatorIjEEEE
NSt3__16vectorIlNS_9allocatorIlEEEE
NSt3__113__vector_baseIlNS_9allocatorIlEEEE
NSt3__16vectorImNS_9allocatorImEEEE
NSt3__113__vector_baseImNS_9allocatorImEEEE
NSt3__16vectorIxNS_9allocatorIxEEEE
NSt3__113__vector_baseIxNS_9allocatorIxEEEE
NSt3__16vectorIyNS_9allocatorIyEEEE
NSt3__113__vector_baseIyNS_9allocatorIyEEEE
NSt3__16vectorIfNS_9allocatorIfEEEE
NSt3__113__vector_baseIfNS_9allocatorIfEEEE
15Tf_TypeRegistry
9TfRefBase
15TfSimpleRefBase
15Tf_EnumRegistry
NSt3__110__function6__funcIZN6TfEnum8_AddNameES2_RKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESA_E3$_0NS6_ISB_EEFvvEEE
ZN6TfEnum8_AddNameES_RKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_E3$_0
10Tf_Remnant
17Tf_NoticeRegistry
N3tbb10interface626enumerable_thread_specificImNS_23cache_aligned_allocatorImEELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafImNS1_20construct_by_defaultImEEEE
N3tbb10interface68internal20construct_by_defaultImEE
9TfWeakPtrIN8TfNotice5ProbeEE
15TfWeakPtrFacadeI9TfWeakPtrN8TfNotice5ProbeEE
16Tf_TokenRegistry
N7Alembic12AbcCoreOgawa3v106AwImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v106AwImplEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v1011MetaDataMapENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v1011MetaDataMapEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v106OwDataENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v106OwDataEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic5Ogawa3v105ODataENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic5Ogawa3v105ODataEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v1015WrittenSampleIDENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v1015WrittenSampleIDEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v106OwImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v106OwImplEE27__shared_ptr_default_deleteIS4_S4_EE
N7Alembic15AbcCoreAbstract3v1018BasePropertyWriterE
NSt3__120__shared_ptr_pointerIPN7Alembic5Ogawa3v107OStreamENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic5Ogawa3v107OStreamEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v107CprDataENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v107CprDataEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v107CprImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v107CprImplEE27__shared_ptr_default_deleteIS4_S4_EE
N7Alembic12AbcCoreOgawa3v107SprImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v107SprImplEEE
N7Alembic12AbcCoreOgawa3v107AprImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v107AprImplEEE
NSt3__120__shared_ptr_pointerIPN7Alembic5Ogawa3v106OGroupENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic5Ogawa3v106OGroupEE27__shared_ptr_default_deleteIS4_S4_EE
N7Alembic15AbcCoreAbstract3v1013ArchiveReaderE
N7Alembic12AbcCoreOgawa3v106OwImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v106OwImplEEE
N7Alembic12AbcCoreOgawa3v106ArImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v106ArImplEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v106OrDataENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v106OrDataEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v106OrImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v106OrImplEE27__shared_ptr_default_deleteIS4_S4_EE
N7Alembic15AbcCoreAbstract3v1013ArchiveWriterE
N7Alembic12AbcCoreOgawa3v107ApwImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v107ApwImplEEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1012TimeSamplingENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic15AbcCoreAbstract3v1012TimeSamplingEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v106AwImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v106AwImplEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v106ArImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v106ArImplEE27__shared_ptr_default_deleteIS4_S4_EE
N7Alembic15AbcCoreAbstract3v1012ObjectReaderE
N7Alembic15AbcCoreAbstract3v1012ObjectWriterE
N7Alembic4Util3v1011noncopyableE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1012ObjectHeaderENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic15AbcCoreAbstract3v1012ObjectHeaderEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v1024PropertyHeaderAndFriendsENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v1024PropertyHeaderAndFriendsEE27__shared_ptr_default_deleteIS4_S4_EE
N7Alembic15AbcCoreAbstract3v1022CompoundPropertyReaderE
N7Alembic3Abc3v107IObjectE
N7Alembic3Abc3v107OObjectE
N7Alembic15AbcCoreAbstract3v1019ArrayPropertyReaderE
N7Alembic12AbcCoreOgawa3v106OrImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v106OrImplEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v107SpwImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v107SpwImplEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v107ApwImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v107ApwImplEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic7AbcGeom3v1012OXformSchema4DataENS_10shared_ptrIS5_E27__shared_ptr_default_deleteIS5_S5_EENS_9allocatorIS5_EEEE
NSt3__110shared_ptrIN7Alembic7AbcGeom3v1012OXformSchema4DataEE27__shared_ptr_default_deleteIS5_S5_EE
N7Alembic12AbcCoreOgawa3v107CpwImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v107CpwImplEEE
N7Alembic12AbcCoreOgawa3v107CprImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v107CprImplEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v108StreamIDENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v108StreamIDEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic5Ogawa3v106IGroupENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic5Ogawa3v106IGroupEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic5Ogawa3v105IDataENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic5Ogawa3v105IDataEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v107SprImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v107SprImplEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v107AprImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v107AprImplEE27__shared_ptr_default_deleteIS4_S4_EE
N7Alembic15AbcCoreAbstract3v1022CompoundPropertyWriterE
N7Alembic15AbcCoreAbstract3v1020ScalarPropertyWriterE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterINS1_4Util3v106bool_tEEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterINS_4Util3v106bool_tEEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic15AbcCoreAbstract3v1011ArraySampleEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterIhEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIhEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterIaEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIaEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterItEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterItEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterIsEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIsEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterIjEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterIiEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIiEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterIyEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIyEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterIxEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIxEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterI4halfEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterI4halfEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterIfEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterIdEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIdEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENSA_IS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterINS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEEEENSA_IS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterINSt3__112basic_stringIwNS3_11char_traitsIwEENS3_9allocatorIwEEEEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v107CpwDataENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v107CpwDataEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v107CpwImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v107CpwImplEE27__shared_ptr_default_deleteIS4_S4_EE
N7Alembic15AbcCoreAbstract3v1019ArrayPropertyWriterE
N7Alembic15AbcCoreAbstract3v1018BasePropertyReaderE
NSt3__120__shared_ptr_pointerIPN7Alembic5Ogawa3v108IStreamsENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic5Ogawa3v108IStreamsEE27__shared_ptr_default_deleteIS4_S4_EE
N7Iex_2_27MathExcE
N7Alembic15AbcCoreAbstract3v1020ScalarPropertyReaderE
Ogawa
N7Alembic12AbcCoreOgawa3v107SpwImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v107SpwImplEEE
TfType
TfType::Define
), (
Failed axiom: ' %s '
../ModelKit/extern/usd/pxr/base/tf/iterator.h
operator++
iterator exhausted
operator*
operator->
TfEnum
GfFrustum::Orthographic
GfFrustum::Perspective
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
true
false
GfCamera::Perspective
perspective
GfCamera::Orthographic
orthographic
GfCamera::FOVHorizontal
FOVHorizontal
GfCamera::FOVVertical
FOVVertical
USD_ABC_READ_FLOAT2_AS_UV
Turn to false to disable reading float2 arrays as uv sets
usdAbc
Tf_EnvSettingRegistry
Open
bool UsdAbc_AlembicDataWriter::Open(const std::string &, const std::string &)
Write
bool UsdAbc_AlembicDataWriter::Write(const SdfAbstractDataConstPtr &)
Close
bool UsdAbc_AlembicDataWriter::Close()
UsdAbc_AlembicData
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/refPtr.h
Usd:
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/plugin/usdAbc/alembicWriter.cpp
_ExtractSamples
(anonymous namespace)::UsdSamples (anonymous namespace)::_PrimWriterContext::_ExtractSamples(const TfToken &, const std::vector<SdfValueTypeName> &)
Property '%s' did not have expected type (got '%s')
UsdSamples
(anonymous namespace)::UsdSamples::UsdSamples(const SdfPath &, const TfToken &, const SdfAbstractData &)
value.IsHolding<SdfTimeSampleMap>()
data.Has(_propPath, SdfFieldKeys->TypeName, &value)
No type name on <%s>
value.IsHolding<TfToken>()
_Validate
bool (anonymous namespace)::UsdSamples::_Validate()
v.second.GetType() == backupType
Expected sample at <%s> time %f of type '%s', got '%s'
interpretation
uniform
point
normal
vector
matrix
constant
varying
vertex
faceVarying
OBaseProperty::getHeader()
UsdAbc_AlembicDataWriter:_MakeSample
No conversion for '%s'
Internal error: trying to convert '%s' to '%s'
Internal error: Trying to use conversion for '%s' to convert from '%s'
Internal error: didn't get a multiple of the extent (%zd %% %d = %zd)
%s[%d]
UNKNOWN
bool_t
uint8_t
int8_t
uint16_t
int16_t
uint32_t
int32_t
uint64_t
int64_t
float16_t
float32_t
float64_t
string
wstring
_CheckSample
bool (anonymous namespace)::_CheckSample(const UsdAbc_AlembicUtil::_SampleForAlembic &, const (anonymous namespace)::UsdSamples &, const SdfValueTypeName &)
Can't convert from '%s' on <%s>: %s
Invalid Time Sampling Type, time per cycle: 
 samples per cycle: 
Unsupported invisibility '%s'
_WriteOutOfSchemaProperty
bool (anonymous namespace)::_WriteOutOfSchemaProperty((anonymous namespace)::_PrimWriterContext *, Alembic::Abc::v10::OCompoundProperty, const TfToken &, const std::string &)
No conversion for <%s> with spec type '%s'
_WriteXform
void (anonymous namespace)::_WriteXform((anonymous namespace)::_PrimWriterContext *)
Found unextracted property '%s' in xformOp namespace.
Usd.transform:
transform
xformOp:transform
OSchemaObject::OSchemaObject( OObject )
NULL Parent ObjectWriter in OSchemaObject ctor
schema
schemaBaseType
AbcGeom_Xform_v3
.xform
_CopyXform
void (anonymous namespace)::_CopyXform(double, const (anonymous namespace)::UsdSamples &, Alembic::AbcGeom::v10::XformSample *)
Expected type 'GfMatrix4d', got '%s'
AbcGeom_SubD_v1
AbcGeom_GeomBase_v1
.geom
OGeomBaseSchema::getArbGeomParams()
.arbGeomParams
OGeomBaseSchema::getUserProperties()
.userProperties
_ReverseWindingOrder
void (anonymous namespace)::_ReverseWindingOrder((anonymous namespace)::UsdSamples *, const (anonymous namespace)::UsdSamples &) [T = int]
valuesValue.IsHolding<ValueArray>()
countsValue.IsHolding<CountArray>()
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/plugin/usdAbc/alembicUtil.h
UsdAbc_ReverseOrderImpl
bool UsdAbc_AlembicUtil::UsdAbc_ReverseOrderImpl(VtArray<T> &, const VtArray<int> &) [T = int]
j + count <= n
void VtArray<int>::_DetachIfNotUnique() [T = int]
VtArray::_AllocateNew
VtArray::value_type *VtArray<int>::_AllocateNew(size_t) [T = int]
catmull-clark
_CopySelfBounds
void (anonymous namespace)::_CopySelfBounds(double, const (anonymous namespace)::UsdSamples &, DST *) [DST = Alembic::AbcGeom::v10::OSubDSchema::Sample]
Expected type 'VtArray<GfVec3f>', got '%s'
Unsupported subdivisionScheme '%s'
Unsupported interpolateBoundary '%s'
Unsupported faceVaryingLinearInterpolation '%s'
_SampleForAlembic
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = float]
values
primvars:displayColor
adskDiffuseColor
AbcGeom_PolyMesh_v1
void (anonymous namespace)::_CopySelfBounds(double, const (anonymous namespace)::UsdSamples &, DST *) [DST = Alembic::AbcGeom::v10::OPolyMeshSchema::Sample]
AbcGeom_Curve_v2
OSchema::OSchema::init()
NULL parent passed into OSchema ctor
OGeomBaseSchema::init()
OGeomBaseSchema::createSelfBoundsProperty()
.selfBnds
OTypedScalarProperty::init()
NULL CompoundPropertyWriterPtr
void (anonymous namespace)::_CopySelfBounds(double, const (anonymous namespace)::UsdSamples &, DST *) [DST = Alembic::AbcGeom::v10::OCurvesSchema::Sample]
Unsupported curve basis '%s'
Unsupported curve type '%s'
Unsupported curve wrap '%s'
AbcGeom_Points_v1
void (anonymous namespace)::_CopySelfBounds(double, const (anonymous namespace)::UsdSamples &, DST *) [DST = Alembic::AbcGeom::v10::OPointsSchema::Sample]
AbcGeom_Camera_v1
_ExtractWithFallback
bool (anonymous namespace)::_ExtractWithFallback(const (anonymous namespace)::UsdSamples &, double, const UsdPrimDefinition *, const TfToken &, T *) [T = float]
Expected type '%s', but found '%s' for %s
T *TfRefPtr<SdfLayer>::operator->() const [T = SdfLayer]
bool (anonymous namespace)::_ExtractWithFallback(const (anonymous namespace)::UsdSamples &, double, const UsdPrimDefinition *, const TfToken &, T *) [T = GfVec2f]
AbcGeom_FaceSet_v1
.faceset
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/weakPtrFacade.h
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, const SdfAbstractData>::operator->() const [PtrTemplate = TfWeakPtr, Type = const SdfAbstractData]
UsdAbc_AlembicDataWriter:_WritePrim
none
_ai_Application
_ai_DateWritten
_ai_Description
OArchive::OArchive( iFileName )
USD_ABC_WARN_ALL_UNSUPPORTED_VALUES
Issue warnings for all unsupported values encountered.
USD_ABC_NUM_OGAWA_STREAMS
The number of threads available for reading ogawa-backed files via UsdAbc.
USD_ABC_WRITE_UV_AS_ST_TEXCOORD2FARRAY
Switch to true to enable writing Alembic uv sets as primvars:st with type texCoord2fArray to USD
USD_ABC_XFORM_PRIM_COLLAPSE
Collapse Xforms containing a single geometry into a single geom Prim in USD
bool UsdAbc_AlembicDataReader::Open(const std::string &)
quat
rgba
IBasePropertyT::getHeader()
VtArray::value_type *VtArray<GfVec3f>::_AllocateNew(size_t) [T = GfVec3f]
void VtArray<GfVec3f>::_DetachIfNotUnique() [T = GfVec3f]
ITypedScalarProperty::ITypedScalarProperty()
NULL CompoundPropertyReader passed into 
ITypedScalarProperty ctor
Nonexistent scalar property: 
Incorrect match of header datatype: 
 to expected: 
...or incorrect match of interpretation: 
kVisibilityVisible
kVisibilityDeferred
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/plugin/usdAbc/alembicReader.cpp
_PostUnsupportedValueWarning
void (anonymous namespace)::_PostUnsupportedValueWarning(const Alembic::Abc::v10::IScalarProperty &, const Alembic::Abc::v10::ISampleSelector &, (anonymous namespace)::_WarningType, const std::string &, const std::string &)
Unsupported %s '%s' for <%s> at %s in archive '%s'. Using '%s' instead.
Unsupported %s detected in archive '%s'. Using '%s' instead.
IBasePropertyT::getObject()
visibility
subdivision scheme
interpolate boundary
face varying interpolate boundary
sample time 
sample index 
AddOutOfSchemaProperty
void (anonymous namespace)::_PrimReaderContext::AddOutOfSchemaProperty(const std::string &, const (anonymous namespace)::AlembicProperty &)
No conversion for "%s" of type "%s" at <%s>
%s_%d
_ReadXform
void (anonymous namespace)::_ReadXform((anonymous namespace)::_PrimReaderContext *)
Ignoring transform that doesn't inherit at samples at time %f at <%s>
ISchemaObject::ISchemaObject( wrapflag )
Incorrect match of schema: 
ISchema::ISchema::init()
NULL parent passed into ISchema ctor
Nonexistent compound property: 
VtArray::value_type *VtArray<TfToken>::_AllocateNew(size_t) [T = TfToken]
void VtArray<TfToken>::_DetachIfNotUnique() [T = TfToken]
.velocities
.faceIndices
.faceCounts
.scheme
.interpolateBoundary
.faceVaryingLinearInterpolation
.holes
.cornerIndices
.cornerSharpnesses
.creaseIndices
.creaseLengths
.creaseSharpnesses
ITypedArrayProperty::ITypedArrayProperty()
ITypedArrayProperty ctor
Nonexistent array property: 
loop
bilinear
VtArray::value_type *VtArray<float>::_AllocateNew(size_t) [T = float]
void VtArray<float>::_DetachIfNotUnique() [T = float]
podName
podExtent
ITypedGeomParam::ITypedGeomParam()
ITypedGeomParam ctor
Nonexistent GeomParam: 
.vals
Invalid ITypedGeomParam: 
ITypedGeomParam::getNumSamples()
VtArray::value_type *VtArray<GfVec2f>::_AllocateNew(size_t) [T = GfVec2f]
void VtArray<GfVec2f>::_DetachIfNotUnique() [T = GfVec2f]
.faces
IGeomBaseSchema::init()
.childBnds
curveBasisAndType
nVertices
width
.orders
.knots
ISchema::ISchema( wrap )
VtArray::value_type *VtArray<double>::_AllocateNew(size_t) [T = double]
void VtArray<double>::_DetachIfNotUnique() [T = double]
.widths
.pointIds
VtArray::value_type *VtArray<long long>::_AllocateNew(size_t) [T = long long]
void VtArray<long long>::_DetachIfNotUnique() [T = long long]
Unsupported format
bool (anonymous namespace)::_ReaderContext::Open(const std::string &, std::string *)
Opened %s file written by Alembic %s
Ogawa
IArchive::IArchive( iFileName )
_ReadPrim
std::string (anonymous namespace)::_ReadPrim((anonymous namespace)::_ReaderContext &, const Alembic::Abc::v10::IObject &, const SdfPath &, std::set<std::string> *)
Instance %s has no master at %s.
UsdAbc_AlembicDataReader:_ReadPrim
over
HasField
bool (anonymous namespace)::_ReaderContext::HasField(const SdfPath &, const TfToken &, const UsdAbc_AlembicUtil::UsdAbc_AlembicDataAny &) const
UsdAbc_AlembicDataReader::_HasField:TimeSamples
UsdAbc_AlembicDataReader::_HasField:OtherMetadata
_HasValue
bool (anonymous namespace)::_ReaderContext::_HasValue(const (anonymous namespace)::_ReaderContext::Property *, const Alembic::Abc::v10::ISampleSelector &, const UsdAbc_AlembicUtil::UsdAbc_AlembicDataAny &) const
UsdAbc_AlembicDataReader::_HasValue:Conversion
abcInstanceSourcePath
HasValue
bool (anonymous namespace)::_ReaderContext::HasValue(const SdfPath &, (anonymous namespace)::_ReaderContext::Index, const UsdAbc_AlembicUtil::UsdAbc_AlembicDataAny &) const
List
TfTokenVector (anonymous namespace)::_ReaderContext::List(const SdfPath &) const
ListTimeSamplesForPath
const _ReaderContext::TimeSamples &(anonymous namespace)::_ReaderContext::ListTimeSamplesForPath(const SdfPath &) const
Read
virtual bool UsdAbcAlembicFileFormat::Read(SdfLayer *, const std::string &, bool) const
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/plugin/usdAbc/alembicFileFormat.cpp
WriteToFile
virtual bool UsdAbcAlembicFileFormat::WriteToFile(const SdfLayer &, const std::string &, const std::string &, const SdfFileFormat::FileFormatArguments &) const
data
T *TfRefPtr<UsdAbc_AlembicData>::operator->() const [U = UsdAbc_AlembicData]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, const SdfFileFormat>::operator->() const [PtrTemplate = TfWeakPtr, Type = const SdfFileFormat]
USD_ABC_EXPAND_INSTANCES
Force Alembic instances to be expanded.
USD_ABC_DISABLE_INSTANCING
Disable instancing on masters created from Alembic.
USD_ABC_PARENT_INSTANCES
Make parent of instance source into master where possible.
UsdAbc_AlembicData::Open
bool UsdAbc_AlembicData::Open(const std::string &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/plugin/usdAbc/alembicData.cpp
Failed to open Alembic archive "%s": %s
UsdAbc_AlembicData::Write
static bool UsdAbc_AlembicData::Write(const SdfAbstractDataConstPtr &, const std::string &, const std::string &)
Alembic error: %s
CreateSpec
virtual void UsdAbc_AlembicData::CreateSpec(const SdfPath &, SdfSpecType)
Alembic file CreateSpec() not supported
EraseSpec
virtual void UsdAbc_AlembicData::EraseSpec(const SdfPath &)
Alembic file EraseSpec() not supported
MoveSpec
virtual void UsdAbc_AlembicData::MoveSpec(const SdfPath &, const SdfPath &)
Alembic file MoveSpec() not supported
virtual void UsdAbc_AlembicData::Set(const SdfPath &, const TfToken &, const VtValue &)
Alembic file Set() not supported
virtual void UsdAbc_AlembicData::Set(const SdfPath &, const TfToken &, const SdfAbstractDataConstValue &)
Erase
virtual void UsdAbc_AlembicData::Erase(const SdfPath &, const TfToken &)
Alembic file Erase() not supported
SetTimeSample
virtual void UsdAbc_AlembicData::SetTimeSample(const SdfPath &, double, const VtValue &)
Alembic file SetTimeSample() not supported
EraseTimeSample
virtual void UsdAbc_AlembicData::EraseTimeSample(const SdfPath &, double)
Alembic file EraseTimeSample() not supported
custom 
class
VtArray::value_type *VtArray<bool>::_AllocateNew(size_t) [T = bool]
void VtArray<bool>::_DetachIfNotUnique() [T = bool]
VtArray::value_type *VtArray<GfMatrix2d>::_AllocateNew(size_t) [T = GfMatrix2d]
void VtArray<GfMatrix2d>::_DetachIfNotUnique() [T = GfMatrix2d]
VtArray::value_type *VtArray<GfMatrix3d>::_AllocateNew(size_t) [T = GfMatrix3d]
void VtArray<GfMatrix3d>::_DetachIfNotUnique() [T = GfMatrix3d]
VtArray::value_type *VtArray<GfMatrix4d>::_AllocateNew(size_t) [T = GfMatrix4d]
void VtArray<GfMatrix4d>::_DetachIfNotUnique() [T = GfMatrix4d]
VtArray::value_type *VtArray<GfVec2d>::_AllocateNew(size_t) [T = GfVec2d]
void VtArray<GfVec2d>::_DetachIfNotUnique() [T = GfVec2d]
VtArray::value_type *VtArray<GfVec2i>::_AllocateNew(size_t) [T = GfVec2i]
void VtArray<GfVec2i>::_DetachIfNotUnique() [T = GfVec2i]
VtArray::value_type *VtArray<GfVec3d>::_AllocateNew(size_t) [T = GfVec3d]
void VtArray<GfVec3d>::_DetachIfNotUnique() [T = GfVec3d]
VtArray::value_type *VtArray<GfVec3i>::_AllocateNew(size_t) [T = GfVec3i]
void VtArray<GfVec3i>::_DetachIfNotUnique() [T = GfVec3i]
VtArray::value_type *VtArray<GfVec4d>::_AllocateNew(size_t) [T = GfVec4d]
void VtArray<GfVec4d>::_DetachIfNotUnique() [T = GfVec4d]
VtArray::value_type *VtArray<GfVec4f>::_AllocateNew(size_t) [T = GfVec4f]
void VtArray<GfVec4f>::_DetachIfNotUnique() [T = GfVec4f]
VtArray::value_type *VtArray<GfVec4i>::_AllocateNew(size_t) [T = GfVec4i]
void VtArray<GfVec4i>::_DetachIfNotUnique() [T = GfVec4i]
VtArray::value_type *VtArray<SdfAssetPath>::_AllocateNew(size_t) [ELEM = SdfAssetPath]
void VtArray<SdfAssetPath>::_DetachIfNotUnique() [ELEM = SdfAssetPath]
VtArray::value_type *VtArray<std::string>::_AllocateNew(size_t) [T = std::string]
void VtArray<std::string>::_DetachIfNotUnique() [T = std::string]
verbose
expandInstances
disableInstancing
promoteInstances
BasisCurves
Camera
Mesh
NurbsCurves
Points
PolyMesh
PseudoRoot
Scope
Xform
GeomSubset
primvars
userProperties
materialBind
subsetFamily:materialBind:familyType
primvars:uv
primvars:uv:indices
primvars:st
primvars:st:indices
gprimDataRender
riName
riType
singleSampleAsDefault
%s%s
%s[%d]%s
%d.%d.%d
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = Alembic::Util::v10::bool_t]
VtArray::value_type *VtArray<unsigned char>::_AllocateNew(size_t) [T = unsigned char]
void VtArray<unsigned char>::_DetachIfNotUnique() [T = unsigned char]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = unsigned char]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = int]
VtArray::value_type *VtArray<unsigned int>::_AllocateNew(size_t) [T = unsigned int]
void VtArray<unsigned int>::_DetachIfNotUnique() [T = unsigned int]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = unsigned int]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = long long]
VtArray::value_type *VtArray<unsigned long long>::_AllocateNew(size_t) [T = unsigned long long]
void VtArray<unsigned long long>::_DetachIfNotUnique() [T = unsigned long long]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = unsigned long long]
VtArray::value_type *VtArray<pxr_half::half>::_AllocateNew(size_t) [T = pxr_half::half]
void VtArray<pxr_half::half>::_DetachIfNotUnique() [T = pxr_half::half]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = half]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = double]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = std::string]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = pxr_half::half]
VtArray::value_type *VtArray<GfVec2h>::_AllocateNew(size_t) [T = GfVec2h]
void VtArray<GfVec2h>::_DetachIfNotUnique() [T = GfVec2h]
VtArray::value_type *VtArray<GfVec4h>::_AllocateNew(size_t) [T = GfVec4h]
void VtArray<GfVec4h>::_DetachIfNotUnique() [T = GfVec4h]
VtArray::value_type *VtArray<GfQuatf>::_AllocateNew(size_t) [T = GfQuatf]
void VtArray<GfQuatf>::_DetachIfNotUnique() [T = GfQuatf]
VtArray::value_type *VtArray<GfQuatd>::_AllocateNew(size_t) [T = GfQuatd]
void VtArray<GfQuatd>::_DetachIfNotUnique() [T = GfQuatd]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = signed char]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = short]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = unsigned short]
VtArray::value_type *VtArray<GfVec3h>::_AllocateNew(size_t) [T = GfVec3h]
void VtArray<GfVec3h>::_DetachIfNotUnique() [T = GfVec3h]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/plugin/usdObj/streamIO.cpp
UsdObjReadDataFromStream
bool UsdObjReadDataFromStream(std::istream &, UsdObjStream *, std::string *)
Aborting usdObj backend due to the following error: 
usemtl
Negative indices are unsupported at this time.
bad lexical cast: source type value could not be interpreted as target
usdObj
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/plugin/usdObj/fileFormat.cpp
virtual bool UsdObjFileFormat::Read(SdfLayer *, const std::string &, bool) const
Failed to open file "%s"
Failed to read OBJ from file "%s": %s
ReadFromString
virtual bool UsdObjFileFormat::ReadFromString(SdfLayer *, const std::string &) const
Failed to read OBJ data from string: %s
normals
.usda
rootPrim
/Geom
name
component
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/plugin/usdObj/translator.cpp
UsdObjTranslateObjToUsd
SdfLayerRefPtr UsdObjTranslateObjToUsd(const UsdObjStream &)
No valid groups were found, no mesh translation will occur.
No viable meshes found, no translation will occur.
None
defaultShadeGroup
CreateMaterialBindings
void CreateMaterialBindings(const std::string &, const std::map<std::string, std::vector<int>> &, UsdGeomMesh, UsdStagePtr, unsigned int &)
OBJ mtl usemtl name has invalid name '%s', using default usemtl name: '%s' 
/Materials
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/vt/array.h
push_back
void VtArray<int>::push_back(const VtArray::ElementType &) [T = int]
Array rank %u != 1
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, UsdStage>::operator->() const [PtrTemplate = TfWeakPtr, Type = UsdStage]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/object.h
UsdObject
UsdObject::UsdObject(const Usd_PrimDataHandle &, const SdfPath &)
!_prim || _prim->GetPath() != _proxyPrimPath
CreateMesh
bool CreateMesh(const std::string &, const UsdObjStream::Group &, UsdStageRefPtr, unsigned int &, UsdGeomMesh &, bool)
Omitting OBJ group with no faces '%s'
defaultGroup
OBJ group has invalid name '%s', using default group name: '%s' 
T *TfRefPtr<SdfLayer>::operator->() const [U = SdfLayer]
T *TfRefPtr<UsdStage>::operator->() const [U = UsdStage]
void VtArray<GfVec3f>::push_back(const VtArray::ElementType &) [T = GfVec3f]
void VtArray<GfVec2f>::push_back(const VtArray::ElementType &) [T = GfVec2f]
UsdObjStream::SequenceElem::Verts
UsdObjStream::SequenceElem::UVs
UsdObjStream::SequenceElem::Normals
UsdObjStream::SequenceElem::Groups
UsdObjStream::SequenceElem::Comments
UsdObjStream::SequenceElem::ArbitraryText
USD_ASSIGN_MASTERS_DETERMINISTICALLY
Set to true to cause instances to be assigned to masters in a deterministic way, ensuring consistency across runs.  This incurs some additional overhead.
InstanceCache::RegisterIndex
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/instanceCache.cpp
RegisterInstancePrimIndex
bool Usd_InstanceCache::RegisterInstancePrimIndex(const PcpPrimIndex &, const UsdStagePopulationMask *, const UsdStageLoadRules &)
index.IsInstanceable()
InstanceCache::UnregisterIndex
UnregisterInstancePrimIndexesUnder
void Usd_InstanceCache::UnregisterInstancePrimIndexesUnder(const SdfPath &)
masterToKeyIt != _masterToInstanceKeyMap.end()
ProcessChanges
void Usd_InstanceCache::ProcessChanges(Usd_InstanceChanges *)
InstanceCache::ProcessChanges
!primIndexes.empty()
keysToProcess.emplace(primIndexes.front(), key).second
Instancing: Creating master <%s> with source prim index <%s> for instancing key: %s
Instancing: Changing source <%s> -> <%s> for <%s>
Instancing: Added instance prim index <%s> for master <%s>
Instancing: Removed instance prim index <%s> for master <%s>
_RemoveInstances
void Usd_InstanceCache::_RemoveInstances(const Usd_InstanceKey &, const Usd_InstanceCache::_PrimIndexPaths &, Usd_InstanceChanges *, std::unordered_map<SdfPath, SdfPath, SdfPath::Hash> *)
_masterToSourcePrimIndexMap.erase(masterPath)
_RemoveMasterIfNoInstances
void Usd_InstanceCache::_RemoveMasterIfNoInstances(const Usd_InstanceKey &, Usd_InstanceChanges *)
masterToPrimIndexesIt != _masterToPrimIndexesMap.end()
Instancing: Removing master <%s>
IsPathInMaster
static bool Usd_InstanceCache::IsPathInMaster(const SdfPath &)
IsPathInMaster() requires an absolute path but was given <%s>
__Master_
__Master_%zu
GetMastersUsingPrimIndexPathOrDescendents
vector<std::pair<SdfPath, SdfPath>> Usd_InstanceCache::GetMastersUsingPrimIndexPathOrDescendents(const SdfPath &) const
masterToSourceIt != _masterToSourcePrimIndexMap.end()
masterPath <%s> missing in mastersToSourceIndexPath map
_MasterUsesPrimIndexPath
bool Usd_InstanceCache::_MasterUsesPrimIndexPath(const SdfPath &, vector<SdfPath> *) const
GetPathInMasterForInstancePath
SdfPath Usd_InstanceCache::GetPathInMasterForInstancePath(const SdfPath &) const
../ModelKit/extern/usd/pxr/base/vt/array.h
_GetControlBlock
const Vt_ArrayBase::_ControlBlock &Vt_ArrayBase::_GetControlBlock(void *) const
!_foreignSource
Vt_ArrayBase::_ControlBlock &Vt_ArrayBase::_GetControlBlock(void *)
USD_CHANGES
USD_CLIPS
USD_COMPOSITION
USD_DATA_BD
USD_DATA_BD_TRY
USD_INSTANCING
USD_PATH_RESOLUTION
USD_PAYLOADS
USD_PRIM_LIFETIMES
USD_SCHEMA_REGISTRATION
USD_STAGE_CACHE
USD_STAGE_LIFETIMES
USD_STAGE_OPEN
USD_STAGE_INSTANTIATION_TIME
USD_VALUE_RESOLUTION
USD_VALIDATE_VARIABILITY
UsdBlockStageCaches
UsdBlockStageCachePopulation
Usd_NoBlock
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/collectionMembershipQuery.cpp
IsPathIncluded
bool UsdCollectionMembershipQuery::IsPathIncluded(const SdfPath &, TfToken *) const
Relative paths are not allowed
operator()
../ModelKit/extern/usd/pxr/base/tf/weakPtrFacade.h
../ModelKit/extern/usd/pxr/base/tf/refPtr.h
T *TfRefPtr<Tf_Remnant>::operator->() const [T = Tf_Remnant]
../ModelKit/extern/usd/pxr/usd/usd/object.h
UsdObject::UsdObject(UsdObjType, const Usd_PrimDataHandle &, const SdfPath &, const TfToken &)
../ModelKit/extern/usd/pxr/usd/usd/primRange.h
set_begin
void UsdPrimRange::set_begin(const UsdPrimRange::iterator &)
!newBegin.IsPostVisit()
Invalid stage
active
assetPaths
manifestAssetPath
primPath
templateAssetPath
templateEndTime
templateStartTime
templateStride
templateActiveOffset
times
default
USD_AUTHOR_LEGACY_CLIPS
If on, clip info will be stored in separate metadata fields instead of in the clips dictionary when using API that does not specify a clip set.
Invalid clipTemplateStride %f for prim <%s>. clipTemplateStride must be greater than 0.
../ModelKit/extern/usd/pxr/usd/sdf/declareHandles.h
SdfHandle::SpecType *SdfHandle<SdfPrimSpec>::operator->() const [T = SdfPrimSpec]
Dereferenced an invalid %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/primData.cpp
Usd_PrimData
Usd_PrimData::Usd_PrimData(UsdStage *, const SdfPath &)
Attempted to construct with null stage
Usd_PrimData::ctor<%s,%s,%s>
~Usd_PrimData::dtor<%s,%s,%s>
prim is invalid/expired
GetSourcePrimIndex
const PcpPrimIndex &Usd_PrimData::GetSourcePrimIndex() const
_primIndex
%s%s%sprim %s<%s> %s%s%s
expired 
inactive 
'%s' 
instance 
instance proxy 
in master 
with master <%s> 
using prim index <%s> 
on %s
Usd_IssueFatalPrimAccessError
void Usd_IssueFatalPrimAccessError(const Usd_PrimData *)
Used %s
FindOrCreatePrimTypeInfo
const Usd_PrimTypeInfo *Usd_PrimTypeInfoCache::FindOrCreatePrimTypeInfo(const TfToken &, TfTokenVector &&)
_CreatePrimTypeInfoKey
static TfToken Usd_PrimTypeInfoCache::_CreatePrimTypeInfoKey(const TfToken &, const TfTokenVector &)
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, SdfLayer>::operator->() const [PtrTemplate = TfWeakPtr, Type = SdfLayer]
UsdModelAPI::KindValidationNone
UsdModelAPI::KindValidationModelHierarchy
usdRi
USD_SHADING_MODEL
Set to usdRi when models can interchange UsdShade prims.
UsdListPositionFrontOfPrependList
The front of the prepend list.
UsdListPositionBackOfPrependList
The back of the prepend list.
UsdListPositionFrontOfAppendList
The front of the append list.
UsdListPositionBackOfAppendList
The back of the append list.
UsdLoadWithDescendants
Load prim and all descendants
UsdLoadWithoutDescendants
Load prim and no descendants
Cannot map <%s> to layer @%s@ via stage's EditTarget
GetConnections
bool UsdAttribute::GetConnections(SdfPathVector *) const
SdfHandle::SpecType *SdfHandle<SdfAttributeSpec>::operator->() const [T = SdfAttributeSpec]
../ModelKit/extern/usd/pxr/usd/sdf/listEditorProxy.h
bool SdfListEditorProxy<SdfPathKeyPolicy>::_Validate() const [_TypePolicy = SdfPathKeyPolicy]
Accessing expired list editor
../ModelKit/extern/usd/pxr/usd/sdf/listProxy.h
_Edit
void SdfListProxy<SdfPathKeyPolicy>::_Edit(size_t, size_t, const SdfListProxy::value_vector_type &) [_TypePolicy = SdfPathKeyPolicy]
Editing list: %s
Inserting invalid value into list editor
bool SdfListProxy<SdfPathKeyPolicy>::_Validate() [_TypePolicy = SdfPathKeyPolicy]
bool SdfListProxy<SdfPathKeyPolicy>::_Validate() const [_TypePolicy = SdfPathKeyPolicy]
SdfHandle::SpecType *SdfHandle<SdfSpec>::operator->() const [T = SdfSpec]
bool SdfListEditorProxy<SdfPathKeyPolicy>::_Validate() [_TypePolicy = SdfPathKeyPolicy]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/collectionAPI.cpp
Invalid collection path <%s>.
GetCollection
static UsdCollectionAPI UsdCollectionAPI::GetCollection(const UsdStagePtr &, const SdfPath &)
ComputeMembershipQuery
void UsdCollectionAPI::ComputeMembershipQuery(UsdCollectionMembershipQuery *) const
Invalid query pointer.
_ComputeMembershipQueryImpl
void UsdCollectionAPI::_ComputeMembershipQueryImpl(UsdCollectionMembershipQuery *, const SdfPathSet &, bool *) const
query
Found circular dependency involving the following collections: [%s]
Could not get prim at path <%s>, therefore cannot include its collection '%s' in collection '%s'.
CollectionAPI
collection
../ModelKit/extern/usd/pxr/base/vt/dictionary.h
increment
void VtDictionary::Iterator<std::map<std::string, VtValue, std::less<>> *, std::__map_iterator<std::__tree_iterator<std::__value_type<std::string, VtValue>, std::__tree_node<std::__value_type<std::string, VtValue>, void *> *, long>>>::increment() [UnderlyingMapPtr = std::map<std::string, VtValue, std::less<>> *, UnderlyingIterator = std::__map_iterator<std::__tree_iterator<std::__value_type<std::string, VtValue>, std::__tree_node<std::__value_type<std::string, VtValue>, void *> *, long>>]
Attempted invalid increment operation on a VtDictionary iterator
SdfHandle::SpecType *SdfHandle<SdfVariantSetSpec>::operator->() const [T = SdfVariantSetSpec]
SdfHandle::SpecType *SdfHandle<SdfVariantSpec>::operator->() const [T = SdfVariantSpec]
SdfHandle::SpecType *SdfHandle<SdfRelationshipSpec>::operator->() const [T = SdfRelationshipSpec]
T *TfRefPtr<PcpLayerStack>::operator->() const [U = PcpLayerStack]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/zipFile.cpp
static UsdZipFile UsdZipFile::Open(const std::shared_ptr<ArAsset> &)
Invalid asset
Could not retrieve buffer from asset
AddFile
std::string UsdZipFileWriter::AddFile(const std::string &, const std::string &)
File is not open for writing
Failed to map '%s': %s
Save
bool UsdZipFileWriter::Save()
void (anonymous namespace)::_InputStream::Read(T *) [T = unsigned int]
Failed to read from zip input stream. Corrupt data.
void (anonymous namespace)::_InputStream::Read(T *) [T = unsigned short]
_PrepareExtraFieldPadding
const char *(anonymous namespace)::_PrepareExtraFieldPadding(char (&)[68], uint16_t)
numPaddingBytes >= _HeaderSize
numPaddingBytes <= sizeof(extraFieldBuffer)
%sattribute '%s' on 
%srelationship '%s' on 
%sproperty '%s' on 
Unknown object type %d
usda
SdfHandle::SpecType *SdfHandle<SdfPropertySpec>::operator->() const [T = SdfPropertySpec]
../ModelKit/extern/usd/pxr/usd/usd/listEditImpl.h
Invalid prim
_TranslatePath
static bool Usd_ListEditImplBase::_TranslatePath(SdfPath *, const UsdEditTarget &)
Invalid empty path
Cannot map <%s> to current edit target.
_GetListEditor
prim
Remove
bool SdfListEditorProxy<SdfPayloadTypePolicy>::_Validate() [_TypePolicy = SdfPayloadTypePolicy]
0.7.0
USD_WRITE_NEW_USDC_FILES_AS_VERSION
When writing new Usd Crate files, write them as this version.  This must have the same major version as the software and have less or equal minor and patch versions.  This is only for new files; saving edits to an existing file preserves its version.
USDC_MMAP_PREFETCH_KB
If set to a nonzero value, attempt to disable the OS's prefetching behavior for memory-mapped files and instead do simple aligned block fetches of the given size instead.  If necessary the setting value is rounded up to the next whole multiple of the system's page size (typically 4 KB).
USDC_ENABLE_ZERO_COPY_ARRAYS
Enable the zero-copy optimization for numeric array values whose in-file representation matches the in-memory representation.  With this optimization, we create VtArrays that point directly into the memory mapped region rather than copying the data to heap buffers.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/crateFile.cpp
GetSection
const CrateFile::_Section *Usd_CrateFile::CrateFile::_TableOfContents::GetSection(Usd_CrateFile::_SectionName) const
Crate file missing %s section
USDC_USE_PREAD
_MmapAsset
static CrateFile::_FileMappingIPtr Usd_CrateFile::CrateFile::_MmapAsset(const char *, const Usd_CrateFile::ArAssetSharedPtr &)
Couldn't map asset '%s'%s%s
_MmapFile
static CrateFile::_FileMappingIPtr Usd_CrateFile::CrateFile::_MmapFile(const char *, FILE *, int64_t, int64_t)
Couldn't map file '%s'%s%s
Usd_CrateFile::CrateFile::Open
static std::unique_ptr<CrateFile> Usd_CrateFile::CrateFile::Open(const std::string &, int64_t, int64_t)
Failed to open asset '%s'
USDC_DUMP_PAGE_MAPS
~CrateFile
Usd_CrateFile::CrateFile::~CrateFile()
failed to obtain memory residency information
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
page map for %s
%lld pages, %lld used (%.1f%%), %lld in mem (%.1f%%)
used %.1f%% of pages in mem
legend: '+': in mem & used,     '-': in mem & unused
        '!': not in mem & used, ' ': not in mem & unused
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
bool Usd_CrateFile::CrateFile::Packer::Close()
_crate && _crate->_packCtx
_BuildDecompressedPathsImpl
void Usd_CrateFile::CrateFile::_BuildDecompressedPathsImpl(const vector<uint32_t> &, const vector<int32_t> &, const vector<int32_t> &, size_t, SdfPath, WorkArenaDispatcher &)
Failed to build paths. Trying to access invalid index %lu of vector size %lu.
Failed to read _tokens, elementToken index out of bounds
Failed to read _tokens, tokenIndex out of bounds
Failed to read _tokens, jumps index out of bounds
Failed to build paths, (pathIndex[%lu] == %d) > _paths.size().
_GetIndexForToken
Usd_CrateFile::TokenIndex Usd_CrateFile::CrateFile::_GetIndexForToken(const TfToken &) const
iter != _packCtx->tokenToTokenIndex.end()
_PackValue
Usd_CrateFile::ValueRep Usd_CrateFile::CrateFile::_PackValue(const VtValue &)
Attempted to pack unsupported type '%s' (%s)
_UnpackValue
void Usd_CrateFile::CrateFile::_UnpackValue(Usd_CrateFile::ValueRep, VtValue *) const
Attempted to unpack unsupported type enum value %d
Usd_CrateFile::CrateFile::_DoAllTypeRegistrations
_Section
Usd_CrateFile::CrateFile::_Section::_Section(const char *, int64_t, int64_t)
strlen(inName) <= _SectionNameMaxLength
ValueRep enum=
 (array)
 payload=
TimeSamples with 
 samples
%hhd.%hhd.%hhd
Rounded USDC_MMAP_PREFETCH_KB value %d to %d
_GetVersionForNewlyCreatedFiles
CrateFile::Version Usd_CrateFile::_GetVersionForNewlyCreatedFiles()
Invalid value '%s' for USD_WRITE_NEW_USDC_FILES_AS_VERSION - falling back to default '%s'
%u.%u.%u
WriteToFd
int64_t WriteToFd(FILE *, const void *, int64_t, int64_t)
Failed writing usdc data: %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/crateFile.h
GetString
const std::string &Usd_CrateFile::CrateFile::GetString(Usd_CrateFile::StringIndex) const
Failed to get string for index %u
Failed to get token for index %u
TOKENS
STRINGS
FIELDS
FIELDSETS
PATHS
SPECS
_ReadBootStrap
static CrateFile::_BootStrap Usd_CrateFile::CrateFile::_ReadBootStrap(ByteStream, int64_t) [ByteStream = Usd_CrateFile::_AssetStream]
File too small to contain bootstrap structure
Usd crate bootstrap section corrupt
Usd crate file version mismatch -- file is %s, software supports %s
Usd crate file corrupt, possibly truncated: table of contents at offset %lld but file size is %lld
static CrateFile::_BootStrap Usd_CrateFile::CrateFile::_ReadBootStrap(ByteStream, int64_t) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>]
bool Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>::Read(void *, size_t) [FileMappingPtr = Usd_CrateFile::CrateFile::_FileMapping *]
Failed to read %zu bytes, remaining file size is %lld of %lld
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = Usd_CrateFile::CrateFile::_Section]
Failed to read vector of size %llu, remaining file size is %lld of %lld
_ReadTokens
void Usd_CrateFile::CrateFile::_ReadTokens(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>]
Usd crate file corrupt, tokens section is possibly truncatedat offset %lld but file size is %lld
Failed to read tokens size %llu with remaining file size being %lld of %lld
Usd crate file corrupt, tokens section is empty
Failed to read tokens size %llu with remaining file size is %lld of %lld
Failed to read tokens. Corrupt compression data. Compressed size %llu, uncompressed size %llu
Failed to read tokens. Corrupt data. Data size %llu, num tokens %llu
Failed read tokens, buffer overflow.
_ReadStrings
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = Usd_CrateFile::TokenIndex]
_ReadFields
void Usd_CrateFile::CrateFile::_ReadFields(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>]
Failed read compressed fields of size %llu.
Failed read fields, buffer overflow.
Failed to read fields of size %llu with remaining file size is %lld of %lld
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = Usd_CrateFile::CrateFile::Field]
_ReadFieldSets
void Usd_CrateFile::CrateFile::_ReadFieldSets(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>]
Failed to read compressed fieldSets of size %llu
Failed to read fieldSets of size %llu with remaining file size is %lld of %lld
Failed to read fsets, size > compressedBufferSize.
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = Usd_CrateFile::FieldIndex]
_ReadPaths
void Usd_CrateFile::CrateFile::_ReadPaths(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>]
Failed to read %llu paths of size %llu with remaining file size is %lld of %lld
_ReadPathsImpl
void Usd_CrateFile::CrateFile::_ReadPathsImpl(Reader, WorkArenaDispatcher &, SdfPath) [Header = Usd_CrateFile::_PathItemHeader_0_0_1, Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>]
Invalid paths header causing OOB access.
Usd_CrateDataImpl::Open
void Usd_CrateFile::CrateFile::_ReadPathsImpl(Reader, WorkArenaDispatcher &, SdfPath) [Header = Usd_CrateFile::_PathItemHeader, Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>]
_ReadCompressedPaths
void Usd_CrateFile::CrateFile::_ReadCompressedPaths(Reader, WorkArenaDispatcher &, uint64_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>]
Failed to read compressed paths of size %llu
Failed to read compressed paths indexes of size %llu with remaining file size is %lld of %lld
Failed to read pathIndexes, size > compressedBufferSize.
Failed to read compressed paths element token indexes of size %llu with remaining file size is %lld of %lld
Failed to read elementTokenIndexes, size > compressedBufferSize.
Failed to read compressed paths jumps of size %llu with remaining file size is %lld of %lld
Failed to read jumps, size > compressedBufferSize.
_ReadSpecs
void Usd_CrateFile::CrateFile::_ReadSpecs(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>]
Failed to read specs of size %llu
Failed to read fsetIndexes, size > compressedBufferSize.
Failed to read spec types of size %llu with remaining file size is %lld of %lld
Failed to read spectypes, size > compressedBufferSize.
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = Usd_CrateFile::CrateFile::Spec_0_0_1]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = Usd_CrateFile::CrateFile::Spec]
static CrateFile::_BootStrap Usd_CrateFile::CrateFile::_ReadBootStrap(ByteStream, int64_t) [ByteStream = Usd_CrateFile::_PreadStream]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = Usd_CrateFile::CrateFile::_Section]
void Usd_CrateFile::CrateFile::_ReadTokens(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = Usd_CrateFile::TokenIndex]
void Usd_CrateFile::CrateFile::_ReadFields(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = Usd_CrateFile::CrateFile::Field]
void Usd_CrateFile::CrateFile::_ReadFieldSets(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = Usd_CrateFile::FieldIndex]
void Usd_CrateFile::CrateFile::_ReadPaths(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>]
void Usd_CrateFile::CrateFile::_ReadPathsImpl(Reader, WorkArenaDispatcher &, SdfPath) [Header = Usd_CrateFile::_PathItemHeader_0_0_1, Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>]
void Usd_CrateFile::CrateFile::_ReadPathsImpl(Reader, WorkArenaDispatcher &, SdfPath) [Header = Usd_CrateFile::_PathItemHeader, Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>]
void Usd_CrateFile::CrateFile::_ReadCompressedPaths(Reader, WorkArenaDispatcher &, uint64_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>]
void Usd_CrateFile::CrateFile::_ReadSpecs(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = Usd_CrateFile::CrateFile::Spec_0_0_1]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = Usd_CrateFile::CrateFile::Spec]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = Usd_CrateFile::CrateFile::_Section]
void Usd_CrateFile::CrateFile::_ReadTokens(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = Usd_CrateFile::TokenIndex]
void Usd_CrateFile::CrateFile::_ReadFields(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = Usd_CrateFile::CrateFile::Field]
void Usd_CrateFile::CrateFile::_ReadFieldSets(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = Usd_CrateFile::FieldIndex]
void Usd_CrateFile::CrateFile::_ReadPaths(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>]
void Usd_CrateFile::CrateFile::_ReadPathsImpl(Reader, WorkArenaDispatcher &, SdfPath) [Header = Usd_CrateFile::_PathItemHeader_0_0_1, Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>]
void Usd_CrateFile::CrateFile::_ReadPathsImpl(Reader, WorkArenaDispatcher &, SdfPath) [Header = Usd_CrateFile::_PathItemHeader, Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>]
void Usd_CrateFile::CrateFile::_ReadCompressedPaths(Reader, WorkArenaDispatcher &, uint64_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>]
void Usd_CrateFile::CrateFile::_ReadSpecs(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = Usd_CrateFile::CrateFile::Spec_0_0_1]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = Usd_CrateFile::CrateFile::Spec]
get_next_capacity, allocator's max_size reached
SdfPathTable::_FindOrCreate
SdfPathTable::_IterBoolPair SdfPathTable<Usd_CrateFile::PathIndex>::_InsertInTable(const SdfPathTable::value_type &) [MappedType = Usd_CrateFile::PathIndex]
SdfPathTable::_Grow
void SdfPathTable<Usd_CrateFile::PathIndex>::_Grow() [MappedType = Usd_CrateFile::PathIndex]
_ReadUncompressedArray
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = bool]
Failed to read %llu elements for uncompressedArray (%llu bytes), remaining file size is %lld of %lld
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = bool]
Failed to read %zu uncompressedArray bytes
Failed to read %llu elements for uncompressedArray (%zu bytes), remaining file size is %lld of %lld
CreateZeroCopyDataSource
Vt_ArrayForeignDataSource *Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>::CreateZeroCopyDataSource(void *, size_t, uint64_t) [FileMappingPtr = Usd_CrateFile::CrateFile::_FileMapping *]
Zero-copy data range out-of-bounds: %zd bytes at offset %td in a mapping of length %zd
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = bool]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = unsigned char]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = unsigned char]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = unsigned char]
_ReadPossiblyCompressedArray
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = int]
Failed to read %llu elements for possibly compressed (%llu bytes), remaining file size is %lld of %lld
Failed to read %llu compressed values
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = int]
_ReadCompressedInts
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, Int = int]
Failed to read compressed ints of size %llu with remaining file size is %lld of %lld
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = int]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = int]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, Int = int]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = int]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = int]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, Int = int]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = unsigned int]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = unsigned int]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, Int = unsigned int]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = unsigned int]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = unsigned int]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, Int = unsigned int]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = unsigned int]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = unsigned int]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, Int = unsigned int]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = long long]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = long long]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, Int = long long]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = long long]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = long long]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, Int = long long]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = long long]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = long long]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, Int = long long]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = unsigned long long]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = unsigned long long]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, Int = unsigned long long]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = unsigned long long]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = unsigned long long]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, Int = unsigned long long]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = unsigned long long]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = unsigned long long]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, Int = unsigned long long]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = pxr_half::half]
Failed to read %llu compressed ints
Failed to read %u elements for lut (%llu bytes), remaining file size is %lld of %lld
Failed to read %llu compressed uints
Failed to index lut with index %u, out of bounds access
Corrupt data stream detected reading compressed array in <%s>
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = pxr_half::half]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = pxr_half::half]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = pxr_half::half]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = pxr_half::half]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = pxr_half::half]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = float]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = float]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = float]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = float]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = float]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = float]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = double]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = double]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = double]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = double]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = double]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = double]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = std::string]
GetUninlinedValue
const std::string &Usd_CrateFile::CrateFile::_ReaderBase::GetUninlinedValue(uint32_t, std::string *) const
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = std::string]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = std::string]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = TfToken]
const TfToken &Usd_CrateFile::CrateFile::_ReaderBase::GetUninlinedValue(uint32_t, TfToken *) const
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = TfToken]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = TfToken]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = SdfAssetPath]
SdfAssetPath Usd_CrateFile::CrateFile::_ReaderBase::GetUninlinedValue(uint32_t, SdfAssetPath *) const
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = SdfAssetPath]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = SdfAssetPath]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfQuatd]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfQuatd]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfQuatd]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfQuatf]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfQuatf]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfQuatf]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfQuath]
VtArray::value_type *VtArray<GfQuath>::_AllocateNew(size_t) [T = GfQuath]
void VtArray<GfQuath>::_DetachIfNotUnique() [T = GfQuath]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfQuath]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfQuath]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec2d]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec2d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec2d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec2f]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec2f]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec2f]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec2h]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec2h]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec2h]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec2i]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec2i]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec2i]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec3d]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec3d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec3d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec3f]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec3f]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec3f]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec3h]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec3h]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec3h]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec3i]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec3i]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec3i]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec4d]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec4d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec4d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec4f]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec4f]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec4f]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec4h]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec4h]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec4h]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec4i]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec4i]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec4i]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfMatrix2d]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfMatrix2d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfMatrix2d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfMatrix3d]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfMatrix3d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfMatrix3d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfMatrix4d]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfMatrix4d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfMatrix4d]
void VtDictionary::Iterator<const std::map<std::string, VtValue, std::less<>> *, std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<std::string, VtValue>, std::__tree_node<std::__value_type<std::string, VtValue>, void *> *, long>>>::increment() [UnderlyingMapPtr = const std::map<std::string, VtValue, std::less<>> *, UnderlyingIterator = std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<std::string, VtValue>, std::__tree_node<std::__value_type<std::string, VtValue>, void *> *, long>>]
A SdfListOp value using a prepended or appended value was detected, which requires crate version 0.2.0.
RequestWriteVersionUpgrade
bool Usd_CrateFile::CrateFile::_PackingContext::RequestWriteVersionUpgrade(Usd_CrateFile::CrateFile::Version, std::string)
Upgrading crate file <%s> from version %s to %s: %s
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = TfToken]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = TfToken]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = TfToken]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = std::string]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = std::string]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = std::string]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = SdfPath]
GetPath
const SdfPath &Usd_CrateFile::CrateFile::GetPath(Usd_CrateFile::PathIndex) const
Failed to get path for index %u
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = SdfPath]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = SdfPath]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = SdfReference]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = SdfReference]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = SdfReference]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = int]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = int]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = int]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = long long]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = long long]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = long long]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = unsigned int]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = unsigned int]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = unsigned int]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = unsigned long long]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = unsigned long long]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = unsigned long long]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = double]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = double]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = double]
A payload with a non-identity layer offset was detected, which requires crate version 0.8.0.
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = SdfLayerOffset]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = SdfLayerOffset]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = SdfLayerOffset]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(SdfUnregisteredValue *, SdfUnregisteredValue &) [ByteStream = Usd_CrateFile::_PreadStream]
SdfUnregisteredValue in crate file contains invalid type '%s' = '%s'; expected string, VtDictionary or SdfUnregisteredValueListOp; returning empty
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(SdfUnregisteredValue *, SdfUnregisteredValue &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(SdfUnregisteredValue *, SdfUnregisteredValue &) [ByteStream = Usd_CrateFile::_AssetStream]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = SdfUnregisteredValue]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = SdfUnregisteredValue]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = SdfUnregisteredValue]
A SdfPayloadListOp value was detected which requires crate version 0.8.0.
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = SdfPayload]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = SdfPayload]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = SdfPayload]
A timecode or timecode[] value type was detected, which requires crate version 0.9.0.
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = SdfTimeCode]
VtArray::value_type *VtArray<SdfTimeCode>::_AllocateNew(size_t) [ELEM = SdfTimeCode]
void VtArray<SdfTimeCode>::_DetachIfNotUnique() [ELEM = SdfTimeCode]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = SdfTimeCode]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = SdfTimeCode]
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
../ModelKit/extern/usd/pxr/base/tf/singleton.h
SetInstanceConstructed
static void TfSingleton<UsdSchemaRegistry>::SetInstanceConstructed(T &) [T = UsdSchemaRegistry]
this function may not be called after GetInstance() has completed
TfSingleton::_CreateInstance
Create Singleton 
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/schemaRegistry.cpp
_FindAndAddPluginSchema
void UsdSchemaRegistry::_FindAndAddPluginSchema()
Found a non-dictionary value for layer metadata key '%s' in generated schema file '%s'. Any multiple apply API schemas from this file will be incorrect. This schema must be regenerated.
registry.usda
BuildComposedPrimDefinition
std::unique_ptr<UsdPrimDefinition> UsdSchemaRegistry::BuildComposedPrimDefinition(const TfToken &, const TfTokenVector &) const
BuildComposedPrimDefinition without applied API schemas is not allowed. If you want a prim definition for a single prim type with no appied schemas, use FindConcretePrimDefinition instead.
_ApplyAPISchemasToPrimDefinition
void UsdSchemaRegistry::_ApplyAPISchemasToPrimDefinition(UsdPrimDefinition *, const TfTokenVector &) const
!prefix.IsEmpty()
generatedSchema.usda
Looking up generated schema for plugin %s at path %s. Generated schema %s.
valid
invalid
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, PlugPlugin>::operator->() const [PtrTemplate = TfWeakPtr, Type = PlugPlugin]
appliedAPISchemas
multipleApplyAPISchemas
multipleApplyAPISchemaPrefixes
VtDictionaryGet
const T &VtDictionaryGet(const VtDictionary &, const std::string &) [T = VtArray<std::string>]
Attempted to get value for key '
', which is not in the dictionary.
DEFAULT
EARLIEST
format
usdc
USD_DEFAULT_FILE_FORMAT
Default file format for new .usd files; either 'usda' or 'usdc'.
virtual bool UsdUsdFileFormat::Read(SdfLayer *, const std::string &, bool) const
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/usdFileFormat.cpp
_GetFileFormatForArguments
SdfFileFormatConstPtr _GetFileFormatForArguments(const SdfFileFormat::FileFormatArguments &)
'%s' argument was '%s', must be '%s' or '%s'. Defaulting to '%s'.
_GetDefaultFileFormat
SdfFileFormatConstPtr _GetDefaultFileFormat()
Default file format '%s' set in USD_DEFAULT_FILE_FORMAT must be either 'usda' or 'usdc'. Falling back to 'usdc'
defaultFormat
_GetFileFormat
SdfFileFormatConstPtr _GetFileFormat(const TfToken &)
fileFormat
_GetFormatArgumentForFileFormat
TfToken _GetFormatArgumentForFileFormat(const SdfFileFormatConstPtr &)
formatArg == UsdUsdaFileFormatTokens->Id || formatArg == UsdUsdcFileFormatTokens->Id
Unhandled file format '%s'
<null>
USD_READ_LEGACY_CLIPS
If on, legacy clip metadata will be respected when populating clips. Otherwise, legacy clip metadata will be ignored.
-inf
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/clip.cpp
Usd_Clip
Usd_Clip::Usd_Clip(const PcpLayerStackPtr &, const SdfPath &, size_t, const SdfAssetPath &, const SdfPath &, Usd_Clip::ExternalTime, Usd_Clip::ExternalTime, const Usd_Clip::TimeMappings &)
sourceLayerIndex < sourceLayerStack->GetLayers().size()
_GetLayerForClip
SdfLayerRefPtr Usd_Clip::_GetLayerForClip() const
Unable to open clip layer @%s@
clip
_ResolveLegacyClipInfo
bool _ResolveLegacyClipInfo(const PcpPrimIndex &, Usd_ResolvedClipInfo *)
Both template and non-template clip metadata are authored for prim <%s> in layerStack %s at spec @%s@<%s>
%s for prim <%s> found in LayerStack %s at spec @%s@<%s>
_DeriveClipInfo
void _DeriveClipInfo(const std::string &, const double, const double, const double, const double, boost::optional<VtVec2dArray> *, boost::optional<VtVec2dArray> *, boost::optional<VtArray<SdfAssetPath>> *, const SdfPath &, const PcpLayerStackPtr &, const size_t)
Invalid clipTemplateOffset %f for prim <%s>. absolute value of clipTemplateOffset must not exceed clipTemplateStride %f.
Invalid template string specified %s, must be of the form path/basename.###.usd or path/basename.###.###.usd. Note that the number of hash marks is variable in each group.
Invalid range specified in template clip metadata. clipTemplateEndTime (%f) cannot be greater than clipTemplateStartTime (%f).
void VtArray<GfVec2d>::push_back(const VtArray::ElementType &) [T = GfVec2d]
void VtArray<SdfAssetPath>::push_back(const VtArray::ElementType &) [ELEM = SdfAssetPath]
%s for prim <%s> derived: %s
_ResolveClipSetsInNode
void _ResolveClipSetsInNode(const PcpNodeRef &, std::map<std::string, _ClipSet> *)
Invalid unnamed clip set for prim <%s> in 'clips' dictionary on spec @%s@<%s>
Expected dictionary for entry '%s' for prim <%s> in 'clips' dictionary on spec @%s@<%s>
_GetBracketingTimeSegment
bool _GetBracketingTimeSegment(const Usd_Clip::TimeMappings &, Usd_Clip::ExternalTime, size_t *, size_t *)
*m1 < *m2
0 <= *m1 && *m1 < times.size()
0 <= *m2 && *m2 < times.size()
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, PcpLayerStack>::operator->() const [PtrTemplate = TfWeakPtr, Type = PcpLayerStack]
dummy_clip
dummy_clip.%s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/prim.cpp
_IsA
bool UsdPrim::_IsA(const TfType &, bool) const
Unknown schema type (%s) is invalid for IsA query
_HasAPI
bool UsdPrim::_HasAPI(const TfType &, bool, const TfToken &) const
HasAPI: Invalid unknown schema type (%s) 
HasAPI: provided schema type ( %s ) is typed.
HasAPI: provided schema type ( %s ) is not an applied API schema type.
HasAPI: provided schema type ( %s ) does not derive from UsdAPISchemaBase.
HasAPI: single application API schemas like %s do not contain an application instanceName ( %s ).
_MakeProperties
std::vector<UsdProperty> UsdPrim::_MakeProperties(const TfTokenVector &) const
specType == SdfSpecTypeRelationship
_ComputePrimPropertyNames
void _ComputePrimPropertyNames(const PcpPrimIndex &, const UsdPrim::PropertyPredicateFunc &, TfTokenVector *)
TfIterator::Reference TfIterator<std::pair<PcpNodeRef_ChildrenIterator, PcpNodeRef_ChildrenIterator>, false>::operator*() [T = std::pair<PcpNodeRef_ChildrenIterator, PcpNodeRef_ChildrenIterator>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::pair<PcpNodeRef_ChildrenIterator, PcpNodeRef_ChildrenIterator>, false>::operator++() [T = std::pair<PcpNodeRef_ChildrenIterator, PcpNodeRef_ChildrenIterator>, Reverse = false]
../ModelKit/extern/usd/pxr/usd/usd/primData.h
Usd_MoveToNextSiblingOrParent
bool Usd_MoveToNextSiblingOrParent(PrimDataPtr &, SdfPath &, PrimDataPtr, const Usd_PrimFlagsPredicate &) [PrimDataPtr = const Usd_PrimData *]
No prim at <%s>
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/property.cpp
GetBaseName
TfToken UsdProperty::GetBaseName() const
delim != fullName.size()-1
_GetTargets
bool UsdProperty::_GetTargets(SdfSpecType, SdfPathVector *) const
specType == SdfSpecTypeAttribute || specType == SdfSpecTypeRelationship
getting connections for attribute <%s>
getting targets for relationship <%s>
Usd_MoveToParent
void Usd_MoveToParent(PrimDataPtr &, SdfPath &) [PrimDataPtr = const Usd_PrimData *]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/primRange.cpp
PruneChildren
void UsdPrimRange::iterator::PruneChildren()
Iterator past-the-end
Cannot prune children during post-visit because thechildren have already been processed. Current node: %s
UsdInterpolationTypeHeld
Held
UsdInterpolationTypeLinear
Linear
Invalid prim: %s
static bool Usd_ListEditImpl<UsdReferences, SdfListEditorProxy<SdfReferenceTypePolicy>>::Add(const UsdListEditorType &, const Usd_ListEditImpl::ListOpValueType &, UsdListPosition) [UsdListEditorType = UsdReferences, ListOpProxyType = SdfListEditorProxy<SdfReferenceTypePolicy>]
static ListOpProxyType Usd_ListEditImpl<UsdReferences, SdfListEditorProxy<SdfReferenceTypePolicy>>::_GetListEditor(const UsdPrim &) [UsdListEditorType = UsdReferences, ListOpProxyType = SdfListEditorProxy<SdfReferenceTypePolicy>]
bool SdfListEditorProxy<SdfReferenceTypePolicy>::_Validate() const [_TypePolicy = SdfReferenceTypePolicy]
void SdfListProxy<SdfReferenceTypePolicy>::_Edit(size_t, size_t, const SdfListProxy::value_vector_type &) [_TypePolicy = SdfReferenceTypePolicy]
bool SdfListProxy<SdfReferenceTypePolicy>::_Validate() [_TypePolicy = SdfReferenceTypePolicy]
bool SdfListProxy<SdfReferenceTypePolicy>::_Validate() const [_TypePolicy = SdfReferenceTypePolicy]
bool SdfListEditorProxy<SdfReferenceTypePolicy>::_Validate() [_TypePolicy = SdfReferenceTypePolicy]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/interpolators.cpp
_Interpolate
bool Usd_UntypedInterpolator::_Interpolate(const Src &, const SdfPath &, double, double, double) [Src = TfRefPtr<SdfLayer>]
Unknown value type '%s' for attribute '%s'
bool Usd_UntypedInterpolator::_Interpolate(const Src &, const SdfPath &, double, double, double) [Src = std::shared_ptr<Usd_Clip>]
AllRule
OnlyRule
NoneRule
<invalid value>
UsdStageLoadRules(
UsdStageLoadRules::AllRule
UsdStageLoadRules::OnlyRule
UsdStageLoadRules::NoneRule
usdz
GetPackageRootLayerPath
virtual std::string UsdUsdzFileFormat::GetPackageRootLayerPath(const std::string &) const
CanRead
virtual bool UsdUsdzFileFormat::CanRead(const std::string &) const
virtual bool UsdUsdzFileFormat::Read(SdfLayer *, const std::string &, bool) const
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/usdzFileFormat.cpp
virtual bool UsdUsdzFileFormat::WriteToFile(const SdfLayer &, const std::string &, const std::string &, const SdfFileFormat::FileFormatArguments &) const
Writing usdz layers is not allowed via this API.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/stageCache.cpp
RequestStage
std::pair<UsdStageRefPtr, bool> UsdStageCache::RequestStage(UsdStageCacheRequest &&)
UsdStageCacheRequest failed to manufacture a valid stage.
found %s
failed to find stage
%s by rootLayer%s in %s
 @%s@
%s by rootLayer%s, sessionLayer%s in %s
 <null>
%s by rootLayer%s, pathResolverContext in %s
Insert
UsdStageCache::Id UsdStageCache::Insert(const UsdStageRefPtr &)
Inserted null stage in cache
inserted
erased
stage cache %s (size=%zu)
"%s"
%s %s %s (id=%s)
%s %s %zu entries:
      %s (id=%s)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/typed.cpp
_schemaBaseTfType_Tf_StaticDataFactoryImpl
void _schemaBaseTfType_Tf_StaticDataFactoryImpl(TfType *)
!_schemaBaseTfType->IsUnknown()
apiSchemas
clipActive
clipAssetPaths
clipManifestAssetPath
clipPrimPath
clips
clipSets
clipTemplateAssetPath
clipTemplateEndTime
clipTemplateStartTime
clipTemplateStride
clipTimes
exclude
excludes
expandPrims
expandPrimsAndProperties
expansionRule
explicitOnly
includeRoot
includes
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/integerCoding.cpp
_DecodeIntegers
size_t (anonymous namespace)::_DecodeIntegers(const char *, size_t, size_t, Int *) [Int = int]
Not enough decompressed bytes to read codes section.
Not enough decompressed bytes to read variable length integer data section.
size_t (anonymous namespace)::_DecodeIntegers(const char *, size_t, size_t, Int *) [Int = unsigned int]
size_t (anonymous namespace)::_DecodeIntegers(const char *, size_t, size_t, Int *) [Int = long long]
size_t (anonymous namespace)::_DecodeIntegers(const char *, size_t, size_t, Int *) [Int = unsigned long long]
_Initialize
void UsdAttributeQuery::_Initialize(const UsdAttribute &)
UsdResolveInfoSourceNone
No value
UsdResolveInfoSourceFallback
Built-in fallback value
UsdResolveInfoSourceDefault
Attribute default value
UsdResolveInfoSourceTimeSamples
Attribute time samples
UsdResolveInfoSourceValueClips
Value clips
UsdResolveInfoSourceIsTimeDependent
Source may vary over time
TfDebug
Usd change processing
Usd clip details
Usd composition details
Usd BD file format traces
Usd BD call traces. Prints names, errors and results.
Usd instancing diagnostics
Usd path resolution diagnostics
Usd payload load/unload messages
Usd prim ctor/dtor messages
Usd schema registration details.
Usd stage cache details
Usd stage ctor/dtor messages
Usd stage opening details
Usd stage instantiation timing
Usd attribute variability validation
Usd trace of layers inspected as values are resolved
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/stagePopulationMask.cpp
GetUnion
UsdStagePopulationMask UsdStagePopulationMask::GetUnion(const SdfPath &) const
Invalid path <%s>; must be an absolute prim path or the absolute root path
GetIncludedChildNames
bool UsdStagePopulationMask::GetIncludedChildNames(const SdfPath &, std::vector<TfToken> *) const
!childName.IsEmpty()
_ValidateAndNormalize
void UsdStagePopulationMask::_ValidateAndNormalize()
UsdStagePopulationMask(
virtual bool UsdUsdcFileFormat::Read(SdfLayer *, const UsdUsdcFileFormat::string &, bool) const
T *TfRefPtr<Usd_CrateData>::operator->() const [U = Usd_CrateData]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/clipCache.cpp
ConcurrentPopulationContext
Usd_ClipCache::ConcurrentPopulationContext::ConcurrentPopulationContext(Usd_ClipCache &)
!_cache._concurrentPopulationContext
PopulateClipsForPrim
bool Usd_ClipCache::PopulateClipsForPrim(const SdfPath &, const PcpPrimIndex &)
Usd_ClipCache::PopulateClipsForPrim
Populated clips for prim <%s>
GetClipsForPrim
const std::vector<Usd_ClipCache::Clips> &Usd_ClipCache::GetClipsForPrim(const SdfPath &) const
mutex: pthread_mutex_init failed
No clip manifest specified for prim <%s>. Performance may be improved if a manifest is specified.
_AddClipsFromClipInfo
void _AddClipsFromClipInfo(const SdfPath &, const Usd_ResolvedClipInfo &, Usd_ClipCache::Clips *)
Invalid clips specified for prim <%s>: %s
startTimeToClip.insert( std::make_pair(entry.startTime, entry)).second
No clip prim path specified
Empty clip asset path in metadata '%s'
Path '%s' in metadata '%s' must be an absolute path to a prim
Invalid clip index %d in metadata '%s'
Clip %d cannot be active at time %.3f in metadata '%s' because clip %d was already specified as active at this time.
mutex: pthread_mutex_lock failed
SdfPathTable::_IterBoolPair SdfPathTable<std::vector<Usd_ClipCache::Clips>>::_InsertInTable(const SdfPathTable::value_type &) [MappedType = std::vector<Usd_ClipCache::Clips>]
void SdfPathTable<std::vector<Usd_ClipCache::Clips>>::_Grow() [MappedType = std::vector<Usd_ClipCache::Clips>]
UsdStages in aggregate
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/stage.cpp
UsdStage
UsdStage::UsdStage(const SdfLayerRefPtr &, const SdfLayerRefPtr &, const ArResolverContext &, const UsdStagePopulationMask &, UsdStage::InitialLoadSet)
_rootLayer
UsdStage::UsdStage(rootLayer=@%s@, sessionLayer=@%s@)
UsdStage::~UsdStage(rootLayer=@%s@, sessionLayer=@%s@)
UsdStage::_InstantiateStage: Creating new UsdStage
instantiating stage
UsdStage::_InstantiateStage: Time elapsed (s): %f
static UsdStageRefPtr UsdStage::Open(const std::string &, UsdStage::InitialLoadSet)
Failed to open layer @%s@
static UsdStageRefPtr UsdStage::Open(const std::string &, const ArResolverContext &, UsdStage::InitialLoadSet)
static UsdStageRefPtr UsdStage::Open(const SdfLayerHandle &, UsdStage::InitialLoadSet)
Invalid root layer
UsdStage::Open(rootLayer=@%s@, load=%s)
static UsdStageRefPtr UsdStage::Open(const SdfLayerHandle &, const SdfLayerHandle &, UsdStage::InitialLoadSet)
UsdStage::Open(rootLayer=@%s@, sessionLayer=@%s@, load=%s)
static UsdStageRefPtr UsdStage::Open(const SdfLayerHandle &, const ArResolverContext &, UsdStage::InitialLoadSet)
UsdStage::Open(rootLayer=@%s@, pathResolverContext=%s, load=%s)
_ValidateEditPrim
bool UsdStage::_ValidateEditPrim(const UsdPrim &, const char *) const
Cannot %s at path <%s>; authoring to an instancing master is not allowed.
Cannot %s at path <%s>; authoring to an instance proxy is not allowed.
_ValidateEditPrimAtPath
bool UsdStage::_ValidateEditPrimAtPath(const SdfPath &, const char *) const
create prim spec
GetMasters
vector<UsdPrim> UsdStage::GetMasters() const
Failed to find prim at master path <%s>.
_InstantiatePrim
Usd_PrimDataPtr UsdStage::_InstantiatePrim(const SdfPath &)
Newly instantiated prim <%s> already present in _primMap
Inactive prim <%s>
Instance prim <%s>
_ComposeChildren
void UsdStage::_ComposeChildren(Usd_PrimDataPtr, const UsdStagePopulationMask *, bool)
prim->_ComposePrimChildNames(&nameOrder)
Children empty <%s>
Children same in same order <%s>
Unable to instantiate prim with empty path.
Unable to instantiate prim with invalid path.
Children all new <%s>
!prim->_firstChild
Children appended <%s>
Children removed from end <%s>
Require general children recomposition <%s>
Removing <%s>
Preserving <%s>
Creating new <%s>
!tempChildren.empty()
(%s on stage @%s@ <%p>)
%s %s
_ReportErrors
void UsdStage::_ReportErrors(const PcpErrorVector &, const std::vector<std::string> &, const std::string &) const
_ComposeSubtreesInParallel
void UsdStage::_ComposeSubtreesInParallel(const vector<Usd_PrimDataPtr> &, const vector<SdfPath> *)
_ComposeSubtreeImpl
void UsdStage::_ComposeSubtreeImpl(Usd_PrimDataPtr, Usd_PrimDataConstPtr, const UsdStagePopulationMask *, const SdfPath &)
prim->_primIndex
Prim index at <%s> not found in PcpCache for UsdStage %s
_DestroyPrimsInParallel
void UsdStage::_DestroyPrimsInParallel(const vector<SdfPath> &)
!_dispatcher && !_primMapMutex
Destroying <%s>
_DestroyPrim
void UsdStage::_DestroyPrim(Usd_PrimDataPtr)
Destroyed prim <%s> not present in stage's data structures
IsSupportedFile
static bool UsdStage::IsSupportedFile(const std::string &)
Empty file path given
_IsValidPathForCreatingPrim
std::pair<bool, UsdPrim> UsdStage::_IsValidPathForCreatingPrim(const SdfPath &) const
Path must be an absolute path: <%s>
Path must be a prim path: <%s>
Path must not contain variant selections: <%s>
create prim
OverridePrim
UsdPrim UsdStage::OverridePrim(const SdfPath &)
Failed to create PrimSpec for <%s>
_DefinePrim
UsdPrim UsdStage::_DefinePrim(const SdfPath &, const TfToken &)
Failed to create primSpec for <%s>
Failed to define UsdPrim <%s>
GetPathResolverContext
ArResolverContext UsdStage::GetPathResolverContext() const
_GetPcpCache()
_HandleLayersDidChange
void UsdStage::_HandleLayersDidChange(const SdfNotice::LayersDidChangeSentPerLayer &)
Detected usd threading violation.  Concurrent changes to layer(s) composed in stage %p rooted at @%s@.  (serial=%zu, lastSerial=%zu).
HandleLayersDidChange received
<%s> in @%s@ changed.
Changed field: %s
recomposeChanges.size() == 1
Composing prim indexes: %s%s
 (and %zu more)
_GetDefiningSpecType
SdfSpecType UsdStage::_GetDefiningSpecType(Usd_PrimDataConstPtr, const TfToken &) const
primData
!propName.IsEmpty()
Flatten
SdfLayerRefPtr UsdStage::Flatten(bool) const
rootLayer
flatLayer
Generated from Composed Stage of root layer %s
_GetMetadata
bool UsdStage::_GetMetadata(const UsdObject &, const TfToken &, const TfToken &, bool, VtValue *) const
_ListMetadataFields
TfTokenVector UsdStage::_ListMetadataFields(const UsdObject &, bool) const
_GetAllMetadata
void UsdStage::_GetAllMetadata(const UsdObject &, bool, UsdMetadataValueMap *, bool) const
GetMetadata
bool UsdStage::GetMetadata(const TfToken &, VtValue *) const
Null out-param 'value' for UsdStage::GetMetadata("%s")
null stage
stage with rootLayer @%s@%s
, sessionLayer @%s@
_SetMetadataImpl
bool UsdStage::_SetMetadataImpl(const UsdObject &, const TfToken &, const TfToken &, const T &) [T = VtValue]
Unregistered metadata field: %s
Cannot set metadata at path <%s> in layer @%s@; a prim or property is required
Cannot set metadata. Failed to create spec <%s> in layer @%s@
Cannot set metadata. '%s' is not registered as valid metadata for spec type %s.
bool UsdStage::_SetMetadataImpl(const UsdObject &, const TfToken &, const TfToken &, const T &) [T = SdfAbstractDataConstValue]
UsdStage::LoadAll
Load all loadable prims
UsdStage::LoadNone
Load no loadable prims
UsdStage: @
_CreateNewLayer
SdfLayerRefPtr _CreateNewLayer(const std::string &)
Failed to CreateNew layer with identifier '%s'
-session.usda
/Flattened_Master_%lu
map::at:  key not found
_CopyMetadata
void (anonymous namespace)::_CopyMetadata(const SdfSpecHandle &, const UsdMetadataValueMap &)
Failed copying metadata: %s
_CopyProperty
void (anonymous namespace)::_CopyProperty(const UsdProperty &, const SdfPrimSpecHandle &, const TfToken &, const (anonymous namespace)::_PathRemapping &, const SdfLayerOffset &)
Attribute <%s> has unknown value type. It will be omitted from the flattened result.
_RemoveMasterTargetPaths
void (anonymous namespace)::_RemoveMasterTargetPaths(const UsdProperty &, SdfPathVector *)
Some %s paths from <%s> could not be flattened because they targeted objects within an instancing master.
attribute connection
relationship target
_SetStageMetadataOrDictKey
bool _SetStageMetadataOrDictKey(const UsdStage &, const TfToken &, const TfToken &, const VtValue &)
Metadata '%s' is not registered as valid Layer metadata, and cannot be set on UsdStage %s.
Cannot set layer metadata '%s' in current edit target "%s", as it is not the root layer or session layer of stage "%s".
UsdVariantFallbacks
_usdGlobalVariantFallbackMap_Tf_StaticDataFactoryImpl
void _usdGlobalVariantFallbackMap_Tf_StaticDataFactoryImpl(PcpVariantFallbackMap *)
%s[UsdVariantFallbacks] was not a dictionary.
%s[UsdVariantFallbacks] value for %s must be an arrays.
_OpenImpl
static UsdStageRefPtr UsdStage::_OpenImpl(UsdStage::InitialLoadSet, const Args &...) [Args = <TfWeakPtr<SdfLayer>>]
stage
static UsdStageRefPtr UsdStage::_OpenImpl(UsdStage::InitialLoadSet, const Args &...) [Args = <TfWeakPtr<SdfLayer>, TfWeakPtr<SdfLayer>>]
static UsdStageRefPtr UsdStage::_OpenImpl(UsdStage::InitialLoadSet, const Args &...) [Args = <TfWeakPtr<SdfLayer>, ArResolverContext>]
create property spec
_CreatePropertySpecForEditing
SdfHandle<PropType> UsdStage::_CreatePropertySpecForEditing(const UsdProperty &) [PropType = SdfAttributeSpec]
Spec type mismatch.  Failed to create %s for <%s> at <%s> in @%s@.  %s already at that location.
Spec type mismatch.  Failed to create %s for <%s> at <%s> in @%s@.  Strongest existing spec, %s at <%s> in @%s@
primSpec
SdfHandle<PropType> UsdStage::_CreatePropertySpecForEditing(const UsdProperty &) [PropType = SdfRelationshipSpec]
SdfHandle<PropType> UsdStage::_CreatePropertySpecForEditing(const UsdProperty &) [PropType = SdfPropertySpec]
_SetValueImpl
bool UsdStage::_SetValueImpl(UsdTimeCode, const UsdAttribute &, const T &) [T = VtValue]
Empty typeName for <%s>
Unknown typename for <%s>: '%s'
Type mismatch for <%s>: expected '%s', got '%s'
Warning: authoring time sample value on uniform attribute <%s> at time %.3f
Cannot set attribute value.  Failed to create attribute spec <%s> in layer @%s@
_GetAttrTypeImpl
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<TfToken>]
_GetAttrVariabilityImpl
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<TfToken>]
TfIterator::Reference TfIterator<std::pair<PcpNodeIterator, PcpNodeIterator>, true>::operator*() [T = std::pair<PcpNodeIterator, PcpNodeIterator>, Reverse = true]
_GetPropCustomImpl
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<TfToken>]
_GetPrimTypeNameImpl
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<TfToken>]
_GetPrimSpecifierImpl
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<TfToken>]
Failed to get valid specPos for %s
specPos.GetLayer()
No PrimSpecs for '%s'
Recomposing stage
Did Change Significantly: %s
Did Change Prim: %s
No cache changes
Nothing to recompose in cache changes
Ignoring elided prim <%s>
recomposing stage
_RecomposePrims
void UsdStage::_RecomposePrims(const PcpChanges &, T *) [T = std::map<SdfPath, std::vector<const SdfChangeList::Entry *>>]
!pathsContainsAbsRoot || pathsToRecompose->size() == 1
Recomposing: %s
Skipping non-prim: %s
Adding paths that use <%s> in layer @%s@: %s
../ModelKit/extern/usd/pxr/base/tf/notice.h
GetNoticeType
virtual TfType TfNotice::_StandardDeliverer<TfNotice::_Deliverer<TfWeakPtr<UsdStage>, TfWeakPtr<SdfLayer>, void (UsdStage::*)(const SdfNotice::LayersDidChangeSentPerLayer &), SdfNotice::LayersDidChangeSentPerLayer>>::GetNoticeType() const [Derived = TfNotice::_Deliverer<TfWeakPtr<UsdStage>, TfWeakPtr<SdfLayer>, void (UsdStage::*)(const SdfNotice::LayersDidChangeSentPerLayer &), SdfNotice::LayersDidChangeSentPerLayer>]
notice type 
 undefined in the TfType system
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<SdfSpecifier>]
TfIterator<T, Reverse> &TfIterator<std::pair<PcpNodeIterator, PcpNodeIterator>, true>::operator++() [T = std::pair<PcpNodeIterator, PcpNodeIterator>, Reverse = true]
TfIterator::Iterator &TfIterator<std::pair<PcpNodeIterator, PcpNodeIterator>, true>::operator->() [T = std::pair<PcpNodeIterator, PcpNodeIterator>, Reverse = true]
TfIterator<T, Reverse> &TfIterator<const std::vector<TfRefPtr<SdfLayer>>, true>::operator++() [T = const std::vector<TfRefPtr<SdfLayer>>, Reverse = true]
TfIterator::Reference TfIterator<const std::vector<TfRefPtr<SdfLayer>>, true>::operator*() [T = const std::vector<TfRefPtr<SdfLayer>>, Reverse = true]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::UntypedValueComposer]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::UntypedValueComposer]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::UntypedValueComposer]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::UntypedValueComposer]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::UntypedValueComposer]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::StrongestValueComposer]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::StrongestValueComposer]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::StrongestValueComposer]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::StrongestValueComposer]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::StrongestValueComposer]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::ExistenceComposer]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::ExistenceComposer]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::ExistenceComposer]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::ExistenceComposer]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::ExistenceComposer]
_GetValueImpl
bool UsdStage::_GetValueImpl(UsdTimeCode, const UsdAttribute &, Usd_InterpolatorBase *, T *) const [T = VtValue]
resolveInfo._source != UsdResolveInfoSourceIsTimeDependent
Warning: detected time sample value on uniform attribute <%s>
_GetTimeSampleValue
static bool UsdStage_ResolveInfoAccess::_GetTimeSampleValue(UsdTimeCode, const UsdAttribute &, const UsdResolveInfo &, const double *, const double *, Usd_InterpolatorBase *, T *) [T = VtValue]
layer->GetBracketingTimeSamplesForPath( specPath, localTime, &lower, &upper)
No bracketing time samples for %s on <%s> for time %g between %g and %g
RESOLVE: reading field %s:%s from @%s@, with requested time = %.3f (local time = %.3f) reading from sample %.3f 
RESOLVE: reading field %s:%s from clip %s, with requested time = %.3f reading from sample %.3f 
RESOLVE: reading field %s:%s from @%s@, with t = %.3f as default
_GetValueFromResolveInfoImpl
bool UsdStage::_GetValueFromResolveInfoImpl(const UsdResolveInfo &, UsdTimeCode, const UsdAttribute &, Usd_InterpolatorBase *, T *) const [T = VtValue]
layer->HasField(specPath, SdfFieldKeys->Default, result)
VtDictionary
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, const SdfLayer>::operator->() const [PtrTemplate = TfWeakPtr, Type = const SdfLayer]
../ModelKit/extern/usd/pxr/usd/usd/stage.h
bool UsdStage::GetMetadata(const TfToken &, T *) const [T = double]
Requested type %s for stage metadatum %s does not match retrieved type %s
bool UsdStage::GetMetadata(const TfToken &, T *) const [T = TfToken]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<bool>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<bool>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<bool>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<bool>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<bool>]
bool UsdStage::_GetValueImpl(UsdTimeCode, const UsdAttribute &, Usd_InterpolatorBase *, T *) const [T = SdfAbstractDataValue]
static bool UsdStage_ResolveInfoAccess::_GetTimeSampleValue(UsdTimeCode, const UsdAttribute &, const UsdResolveInfo &, const double *, const double *, Usd_InterpolatorBase *, T *) [T = SdfAbstractDataValue]
bool UsdStage::_GetValueFromResolveInfoImpl(const UsdResolveInfo &, UsdTimeCode, const UsdAttribute &, Usd_InterpolatorBase *, T *) const [T = SdfAbstractDataValue]
bool UsdStage::_SetValueImpl(UsdTimeCode, const UsdAttribute &, const T &) [T = SdfAbstractDataConstValue]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<int>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<int>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<int>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<int>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<int>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<int>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<int>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<int>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<int>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<int>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<unsigned int>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<unsigned int>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<unsigned int>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<unsigned int>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<unsigned int>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<long long>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<long long>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<long long>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<long long>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<long long>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<float>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<float>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<float>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<float>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<float>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<float>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<float>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<float>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<float>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<float>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<double>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<double>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<double>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<double>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<double>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<double>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<double>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<double>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<double>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<double>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<std::string>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<std::string>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<std::string>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<std::string>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<std::string>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<std::string>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<std::string>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<std::string>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<std::string>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<std::string>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<TfToken>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<TfToken>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<TfToken>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<TfToken>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<TfToken>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfMatrix4d>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfMatrix4d>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfMatrix4d>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfMatrix4d>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfMatrix4d>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfMatrix4d>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfMatrix4d>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfMatrix4d>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfMatrix4d>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfMatrix4d>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuath>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuath>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuath>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuath>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuath>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuatf>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuatf>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuatf>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuatf>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuatf>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2f>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2f>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2f>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2f>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2f>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2d>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2d>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2d>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2d>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2d>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3h>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3h>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3h>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3h>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3h>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3f>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3f>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3f>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3f>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3f>>]
_pcpInstanceKey:
_mask: 
_loadRules: 
_hash: 
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/crateData.cpp
bool Usd_CrateData::Save(const std::string &)
Tried to save to empty fileName
Usd_CrateDataImpl::Save
Saving usd binary file @%s@
bool Usd_CrateDataImpl::Save(const std::string &)
_PopulateFromCrateFile
bool Usd_CrateDataImpl::_PopulateFromCrateFile()
CrateFile specs are corrupted, contain pathIndices out of bounds
Usd_CrateDataImpl main hash table
field data
CrateFile specs are corrupted, contain field data out of bounds
CrateFile specs are corrupted, contains invalid field data.
_SpecToPair::result_type Usd_CrateDataImpl::_PopulateFromCrateFile()::_SpecToPair::operator()(const CrateFile::Spec &) const
!r.first.IsTargetPath()
Opening usd binary asset @%s@
bool Usd_CrateDataImpl::Open(const std::string &, int64_t, int64_t)
void Usd_CrateDataImpl::EraseSpec(const SdfPath &)
_hashData->erase(path)
iter != _flatData.end()
void Usd_CrateDataImpl::MoveSpec(const SdfPath &, const SdfPath &)
oldIter != _hashData->end()
oldIter != _flatData.end()
iresult.second
void Usd_CrateDataImpl::CreateSpec(const SdfPath &, SdfSpecType)
specType != SdfSpecTypeUnknown
void Usd_CrateDataImpl::Set(const SdfPath &, const TfToken &, const VtValue &)
Cannot set fields on relationship target or attribute connection specs: <%s>:%s = %s
_SetHelper
void Usd_CrateDataImpl::_SetHelper(Data &, const SdfPath &, typename Data::value_type *&, const TfToken &, const VtValue &) [Data = std::unordered_map<SdfPath, Usd_CrateDataImpl::_MapSpecData, SdfPath::Hash>]
i != d.end()
Tried to set field '%s' on nonexistent spec at <%s>
void Usd_CrateDataImpl::_SetHelper(Data &, const SdfPath &, typename Data::value_type *&, const TfToken &, const VtValue &) [Data = boost::container::flat_map<SdfPath, Usd_CrateDataImpl::_FlatSpecData, SdfPath::FastLessThan>]
void Usd_CrateDataImpl::Set(const SdfPath &, const TfToken &, const SdfAbstractDataConstValue &)
value.GetValue(&val)
_ListTimeSamplesForPath
const std::vector<double> &Usd_CrateDataImpl::_ListTimeSamplesForPath(const SdfPath &) const
Cannot target a master or an object within a master.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/relationship.cpp
SetTargets
bool UsdRelationship::SetTargets(const SdfPathVector &) const
Cannot set target <%s> on relationship <%s>: %s
GetTargets
bool UsdRelationship::GetTargets(SdfPathVector *) const
GetForwardedTargets
bool UsdRelationship::GetForwardedTargets(SdfPathVector *) const
Passed null pointer for targets on <%s>
bool SdfListEditorProxy<SdfNameKeyPolicy>::_Validate() const [_TypePolicy = SdfNameKeyPolicy]
void SdfListProxy<SdfNameKeyPolicy>::_Edit(size_t, size_t, const SdfListProxy::value_vector_type &) [_TypePolicy = SdfNameKeyPolicy]
bool SdfListProxy<SdfNameKeyPolicy>::_Validate() [_TypePolicy = SdfNameKeyPolicy]
bool SdfListProxy<SdfNameKeyPolicy>::_Validate() const [_TypePolicy = SdfNameKeyPolicy]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/usdzResolver.cpp
OpenAsset
virtual std::shared_ptr<ArAsset> Usd_UsdzResolver::OpenAsset(const std::string &, const std::string &)
Cannot open %s in %s: compressed files are not supported
Cannot open %s in %s: encrypted files are not supported
../ModelKit/extern/usd/pxr/usd/ar/threadLocalScopedCache.h
BeginCacheScope
void ArThreadLocalScopedCache<Usd_UsdzResolverCache::_Cache>::BeginCacheScope(VtValue *) [CachedType = Usd_UsdzResolverCache::_Cache]
Unexpected cache scope data
EndCacheScope
void ArThreadLocalScopedCache<Usd_UsdzResolverCache::_Cache>::EndCacheScope(VtValue *) [CachedType = Usd_UsdzResolverCache::_Cache]
!cacheStack.empty()
<'%s' @ %p>
AR_RESOLVER_INIT
Print debug output during asset resolver initialization
PXR_AR_DEFAULT_SEARCH_PATH
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/ar/defaultResolver.cpp
BindContext
virtual void ArDefaultResolver::BindContext(const ArResolverContext &, VtValue *)
Unknown resolver context object: %s
UnbindContext
virtual void ArDefaultResolver::UnbindContext(const ArResolverContext &, VtValue *)
Unbinding resolver context in unexpected order: %s
void ArThreadLocalScopedCache<ArDefaultResolver::_Cache>::BeginCacheScope(VtValue *) [CachedType = ArDefaultResolver::_Cache]
void ArThreadLocalScopedCache<ArDefaultResolver::_Cache>::EndCacheScope(VtValue *) [CachedType = ArDefaultResolver::_Cache]
PXR_AR_DISABLE_PLUGIN_RESOLVER
Disables plugin resolver implementation, falling back to default supplied by Ar.
ArGetResolver(): Plugin asset resolver disabled via PXR_AR_DISABLE_PLUGIN_RESOLVER.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/ar/resolver.cpp
_InitializeUnderlyingResolver
void (anonymous namespace)::_Resolver::_InitializeUnderlyingResolver()
ArGetResolver(): Preferred resolver %s not found. Using default resolver.
ArGetResolver(): Preferred resolver %s does not derive from ArResolver. Using default resolver.
ArGetResolver(): Using preferred resolver %s
ArGetResolver(): Found asset resolver types: [%s]
!resolverTypes.empty()
ArGetResolver(): Found multiple plugin asset resolvers, using %s
ArGetResolver(): %s
ArGetResolver(): Found package resolver %s
ArGetResolver(): Skipping package resolver %s because plugin cannot be found
_InitializePackageResolvers
void (anonymous namespace)::_Resolver::_InitializePackageResolvers()
No package formats specified in '%s' metadata for '%s'
Expected list of formats in '%s' metadata for '%s'
ArGetResolver(): Using package resolver %s for %s from plugin %s
extensions
virtual void (anonymous namespace)::_Resolver::BeginCacheScope(VtValue *)
cacheData.size() == 1 + _GetNumPackageResolvers()
virtual void (anonymous namespace)::_Resolver::EndCacheScope(VtValue *)
cacheScopeData->IsHolding<_ResolverCacheData>()
_CreateResolver
std::unique_ptr<ArResolver> (anonymous namespace)::_CreateResolver(const TfType &, std::string *)
Invalid resolver type
Given type %s does not derive from ArResolver
Failed to find plugin for %s
Failed to load plugin %s for %s
Failed to manufacture asset resolver %s from plugin %s
Using asset resolver %s from plugin %s
Using default asset resolver %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/ar/filesystemAsset.cpp
ArFilesystemAsset
ArFilesystemAsset::ArFilesystemAsset(FILE *)
Invalid file handle
virtual size_t ArFilesystemAsset::Read(void *, size_t, size_t)
Error occurred reading file: %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/ar/defaultResolverContext.cpp
ArDefaultResolverContext
ArDefaultResolverContext::ArDefaultResolverContext(const std::vector<std::string> &)
Could not determine absolute path for search path prefix '%s'
    
    
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/arCustom/memoryAsset.cpp
ArMemoryAsset
ArMemoryAsset::ArMemoryAsset(const char *, size_t)
Invalid input data
virtual size_t ArMemoryAsset::Read(void *, size_t, size_t)
arCustom
address
size
jointPath.count and jointBindTransforms.length * sizeof(matrix_float4x4) have to be equal.
jointBindTransformsArray size is too small (%lu elements) to hold all %lu elements
-Indices
%@-%@
Octree material
ModelIOException
[%@ %@]: value.type must be MDLMeshBufferTypeCustom
MDLMeshBuffer is not of type MDLMeshBufferView, unsupported
.column0
.column1
.column2
.column3
.column1;
.string
.name
.url
.vector
.matrix
.buffer
.stride
.semantic
Base
baseColor
emission
interfaceIndexOfRefraction
materialIndexOfRefraction
ambientOcclusion
ambientOcclusionScale
SimplifiedPhysical
metallic
roughness
sheen
sheenTint
anisotropic
anisotropicRotation
specular
specularTint
clearcoat
clearcoatGloss
subsurface
MDLMaterialProperty
userProperties.count
userProperties[%ld]
builtinProperties.count
builtinProperties[%ld]
[%@ %@]: input cannot be assigned to multiple nodes
[%@ %@]: input appears in output array
[%@ %@]: output cannot be assigned to multiple nodes
[%@ %@]: output appears in input array
[%@ %@]: output connection not found in node outputs
[%@ %@]: output connection not found in node inputs
v16@?0@"MDLMaterialPropertyNode"8
map_Ka
map_Kd
map_Ks
opacity
map_d
map_ao
specularExponent
map_Ns
indexOfRefraction
map_Ni
bump
map_bump
disp
displacement
map_disp
objectDisplacementScale
map_objectDisplacementScale
map_subsurface
map_metallic
map_specularTint
map_roughness
map_anisotropicRotation
anisotropicMapRotation
map_anisotropic
map_sheenTint
map_sheen
clearCoatGloss
map_clearCoatGloss
clearCoat
map_clearCoat
objectSpaceNormal
map_objectSpaceNormal
objectTangentSpaceNormal
map_objectTangentSpaceNormal
tangentSpaceNormal
map_tangentSpaceNormal
targetShapes.count and shapeSetTargetWeights.count have to match.
targetShapes.count has to equal sum of all targetShapeCounts.
shapeSetTargetWeights and shapeSetTargetCounts have to be either both set or both nil.
targetWeightsArray size is too small (%lu elements) to hold all %lu elements
targetCountsArray size is too small (%lu elements) to hold all %lu elements
Warning: Invalid color data found for %s
Curve vertex count (%d) out of range [0, %zu].
curve
-Material
submesh
lines in file too long to parse
mtllib
Too much unrecognized data in file, can't parse
Failed to open file path.
# Apple ModelI/O MTL File: 
newmtl material_
Kd = 0.5 0.5 0.5
map_displacement
.mtl
# Apple ModelIO OBJ File: 
mtllib 
g mesh_
bijective
aoCoord
vt2 
usemtl material_
s off
Could not open OBJ file
OBJ file has no contents
Could not read OBJ file
_%@.png
%@/%@
cannot import to nil asset
MDL_OBJ
Unable to find mtl file %@
newmtl
@TODO
decal
refl
illum
-clamp
-blendu
-blendv
-imfchan
-texres
-type
Adding %d submeshes
Could not allocate topology buffer
-Topology
Could not allocate index buffer
OBJ model
OBJ file has no faces
No vertices in OBJ file
Creating vertex buffer for %d vertices
Too many vertices in OBJ file
Could not allocate vertex buffer
No valid vertex descriptor layouts found
Could not open %@ file
%@ file map failed
%@ file has no contents
Could not read %@ file
v32@?0@"NSString"8@"NSArray"16^B24
v8@?0
unordered_map::at: key not found
[%@ %@]: geometryType for Cone must be MDLGeometryTypeTriangles or MDLGeometryTypeLines
cone
-Submesh
[%@ %@]: geometryType must be MDLGeometryTypeLines, MDLGeometryTypeTriangles, or MDLGeometryTypeQuads
[%@ %@]: Could not allocate mesh buffer
icosahedron
[%@ %@]: geometryType for Ellipsoid must be MDLGeometryTypeTriangles or MDLGeometryTypeLines
ellipsoid
sphere
material
Warning: invalid offset (%lu) and length (%lu) combination provided
Warning cannot find valid iosurface for buffer idx: %d
sharedRegions.count
sharedRegions[%zu]
.iosurface
regionIndices.count
regionIndices[%zu]
.regionIndex
.offset
.length
.count
[%ld]
Warning: NSZone is not supported in current development. 
Warning: fillData:offset: not currently supported
Warning: Buffer is not writable, could not map
.view
.type
Warning: newBuffer:type: not currently supported
Warning: zones not supported in current development 
Warning: zones not supported in current development
Warning: newBufferWithData: not currently supported
[%@ %@]: Unsupported geometry type for capsule
capsule
MDLErrorDomain
MDLErrorKey
kMDLAssetPreserveTopology
kMDLAssetPreserveIndexing
kMDLAssetComputeFaceNormals
kMDLAssetComputeVertexNormals
kMDLAssetNormalSmoothingThreshold
kMDLAssetPreserveExistingNormals
kMDLAssetDisplayNURBSPatches
kMDLAssetAssetAtTime
kMDLAssetComputeTangents
kMDLAssetComputeBitangents
kMDLAssetTangentSmoothingThreshold
kMDLAssetTangentUVSet
kMDLAssetVertexDescriptor
kMDLAssetBufferAllocator
kMDLAssetComputeExtents
[%@ %@]: Requested class must be an MDLObject or a subclass of MDLObject
MDLAsset:
v24@?0@"MDLObject"8^B16
Failed to remove %@
Warning: No valid layouts found for vertex descriptor, using default vertex descriptor instead.
[%@ %@]: only accepts usdz file
Could not load data from %@
Unable to issue extension for path %@
USDA
USDC
USDZ
Could not load asset with unknown extension from %@
Could not save file to %s
Could not save STL file to %s
Could not save OBJ file to %s
Could not save PLY file to %s
Unknown extension on URL: %s
[%@ %@]: density must be greater than 0
[%@ %@]: must implement sphericalHarmonicsCoefficientsAtPosition: selector if using heuristic type MDLProbePlacementIrradianceDistribution
Mesh %s does contain invalid normals data. Skipping normal computation.
Mesh %s does contain valid position data. Skipping normal computation.
tangents
Warning: Mesh %s: unable to find uv set name: %s, use first uv set instead.
Mesh %s does contain valid normal data. Skipping tangent computation.
Mesh %s does not contain valid texture coordinate data. Skipping tangent computation.
bitangents
Failed to generate tangent space for Mesh %s.
ModelKit/extern/usd/pxr/base/vt/array.h
File is too small to be valid STL
solid
facet normal
endsolid
facet
outer
endloop
endfacet
endfacet tag missing, couldn't parse STL
Bad triangle count, couldn't parse STL
STL material
Too many triangles to write, file not saved
[_ABSOLUTELUMENS]%f
URL provided for IES initialization not valid
IESLight not properly initialized, cannot generate texture.
[%@ %@]: Spherical harmonics levels beyond 3 are not supported
Computation of Spherical Harmonics Coefficients level %lu not yet supported
Warning: Prim %s has %lu elements for %s even though it is marked constant.
Warning: Prim %s has %lu elements for %s and %lu elements for %s even though they have the same interpolation mode %s
Warning: Prim %s has %s interpolation for %s and %s interpolation for %s; this combination is not supported by UsdImaging
ModelKit/extern/usd/pxr/usd/usdGeom/primvar.h
ComputeFlattened
bool UsdGeomPrimvar::ComputeFlattened(VtArray<ScalarType> *, UsdTimeCode) const [ScalarType = GfVec3f]
No indices authored for indexed primvar <%s>.
For primvar %s: %s
Found %ld invalid indices at positions [%s%s] that are out of range [0,%ld).
, ...
bool UsdGeomPrimvar::ComputeFlattened(VtArray<ScalarType> *, UsdTimeCode) const [ScalarType = float]
public.alembic
public.geometry-definition-format
public.polygon-file-format
public.standard-tesselated-geometry-format
com.pixar.universal-scene-description
com.pixar.universal-scene-description-mobile
mesh
pthread_join
pthread_detach
thread_monitor %s in %s
pthread_attr_init
pthread_attr_setstack_size
pthread_create
pthread_attr_destroy
Invalid topology specified : face with %d vertices > %d max.
Invalid topology specified : non-triangular faces not supported by Loop scheme.
Invalid topology detected : vertex with valence %d > %d max.
Invalid topology detected : maximum valence not assigned.
Invalid topology detected as completed from partial specification.
Invalid topology detected as fully specified.
[%@ %@]: invalid geometryType requested
plane
Can't choose for edge creation
libtbbmalloc.dylib
ALLOCATOR
scalable_malloc
malloc
scalable_free
scalable_aligned_malloc
scalable_aligned_free
points
textureCoordinates
color
jointIndices
jointWeights
%@%d
Warning: attribute %s on mesh %s has elementSize(%d) > %d which does not map to a valid MDLVertexFormat
Warning: unable to convert %s to MDLVertexAttribute.
Warning: Trying to interleave multiple attributes into buffer: %ul,
but their element counts do not agree, taking the mininum.
Warning: target shape points does not match MDLMesh vertexCount. Skipping MDLMorphDeformer.
indices
faceVertexCounts
creaseIndices
creaseSharpness
vertexCreaseIndices
vertexCreaseSharpness
Warning: %s: attribute %s is constant, but the attribute buffer (%lu) is not the same size as the attribute's element size (%d). 
Warning: %s: attribute %s is vertex varying and indexed, but the attribute indices (%lu) are not the same size as the mesh's vertex count (%d). 
Warning: %s: attribute %s is vertex varying and not indexed, but the attribute buffer (%lu) is not the same size as the mesh's vertex count (%d) * attribute's element size (%d). 
Warning: %s: attribtue %s is uniform varying and indexed, but the attribute indices (%lu) are not the same size as the mesh's face count (%d). 
Warning: %s: attribute %s is uniform varying and not indexed, but the attribute buffer (%lu) is not the same size as the mesh's face count (%d) * attribute's element size (%d). 
Warning: %s: attribute %s is face varying and indexed, but the attribute indices (%lu) is not the same size as the mesh's face vertex count (%d). 
Warning: %s: attribute %s is face varying and not indexed, but the attribute buffer (%lu) is not the same size as mesh's face vertex count (%d) * attribute's element size (%d). 
Warning: %s: attribute %s has unknown varying frequency. 
%s: face %zu vertex count (%d) out of range [0, %zu].
%s: face vertex indices size of range.
%s: face vertex index out of bound.
%s: hole index out of bound.
%s: mismatch corner indices and corner sharpnesses.
%s: mismatch crease lengths and crease sharpnesses.
%s: invalid points data.
%s: corner index out of bound.
%s: crease index out of bound.
%s: mismatch crease lengths and crease indices.
Warning: mesh has a face index bigger than face count, ignoring mesh: %s.
Unable to unwind attribute indice of attribute named: %s
%s: attribute has indices out of bound.
%s: has attribute with indices out of bound.
void VtArray<float>::push_back(const VtArray::ElementType &) [T = float]
VtArray::value_type *VtArray<unsigned short>::_AllocateNew(size_t) [T = unsigned short]
void VtArray<unsigned short>::_DetachIfNotUnique() [T = unsigned short]
Cannot remove zero scaling from matrix.
[%@ %@]: Can only subdivide submesh in mesh using MDLGeometryTypeTriangles, MDLGeometryTypeQuads, or MDLGeometryTypeVariableTopology
[%@ %@]: If submesh object's geometryType is MDLGeometryTypeVariableTopology, it must have a topology
%@_subd%d
TBB_VERSION
Tools support
disabled
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/tbb/src/tbb/tbb_main.cpp
param < global_control::parameter_max
Invaliud transform op in the USD transform stack
Internal error: Skipping unknown MDLTransformOp.
self
Warning: %@ is not of type MDLAnimatedVector3
Warning: %@ is not of type MDLAnimatedVector4
Warning: %@ is not of type MDLAnimatedQuaternion
Warning: %@ is not of type MDLAnimatedMatrix4x4
[%@ %@]:set local transform forTime not yet supported
position
orientation
scale
eulerAngles
eulerAngles.x
eulerAngles.y
eulerAngles.z
[%@ %@]: Number of spherical harmonics coefficients inconsistent with spherical harmonics level
file:///tmp/reflective.png
file:///tmp/irradianceConvo.png
file:///tmp/sh.png
sourceName
Unrecognized PLY header
int8
char
uint8
uchar
int16
short
uint16
ushort
int32
uint32
uint
float32
float
float64
double
ascii
binary_big_endian
Couldn't parse binary_big_endian PLY file
Couldn't recognize PLY format %s
element
property
Malformed PLY file
list
Unknown PLY data format %s
Unknown PLY property type %s
comment
end_header
green
blue
face
Unknwon PLY property type %s
PLY Material
PLY model
Could not find PLY file
Count not open PLY file
Empty file
.ply
ply 
format ascii 1.0
comment object: submesh
comment object: 
element vertex 
property float x
property float y
property float z
property uchar red
property uchar green
property uchar blue
element face 
property list uchar int vertex_index
__RML_open_factory
__TBB_make_rml_server
__RML_close_factory
__TBB_call_with_my_server_info
libirml.dylib
Illegal joint path <%s> in animation: %s. Skipping.
Illegal joint path %s in skeleton: %s. Skipping.
Illegal joint path in skeleton: %s. Skipping.
No joint paths exist in skeleton %s. Skipping.
menvTextureCoords
primvars:Texture_uv
displayColor
metal
diffuse
transparency
translucency
aniso
clearcoatgloss
displacementscale
aoScale
ambientocclusionscale
ambientocclusion
occlusion
Unable to infer attribute frequency for %s. Skipping
Inferring attribute frequency for %s.
Inferring attribute frequency for %s
Warning: %s : Skipping points attribute. Unsupported value type %s. Expected type compatible with %s
Warning: %s : Skipping normals attribute. Unsupported value type %s. Expected type compatible with %s
Warning: %s : Skipping normal attribute
Texture_uv
displayOpacity
primvars:displayOpacity
skinJointIndices
skinJointWeights
Warning: %s : Skipping attribute %s, couldn't get the primvar contents
Warning: %s : Skipping attribute %s with invalid value type %s
Warning: %s : Skipping attribute %s
cornerIndices
cornerSharpnesses
creaseLengths
creaseSharpnesses
Warning: joint paths and bind transforms have different sizes. Skipping MDLSkinDeformer.
Warning: corrupt channelTargetCounts attribute. Skipping MDLBlendShapeDeformer.
Warning: corrupt channelTargetWeights attribute. Skipping MDLBlendShapeDeformer.
Warning: %s : Skipping target %s
Warning: %s: Mismatch blendshape name size and blendshape target size 
Warning: %s : Skipping target %s. Mismatch inbetween target offset size and blendshape target offset size.
Warning: %s : Invalid joint indices interpolation. Skipping joint indices
Warning: %s : Invalid joint weights interpolation. Skipping joint indices
Warning: %s : Skipping joint indices
Warning: %s : Skipping joint weights
varname
result
frame:stPrimvarName
rotation
translation
UsdPrimvarReader_float2
file
PxrPrimvarReader
PxrPrimvarReader_float2
UsdTransform2d
wrapS
wrapT
repeat
clamp
mirror
Warning: Invalid texture component ':%s'.
PxrUVTexture
UsdUVTexture
UsdPrimvarReader
surface
PxrPreviewSurface
UsdPreviewSurface
clearcoatRoughness
diffuseColor
emissive
emissiveColor
specularColor
useSpecularPipeline
useSpecularWorkflow
USDMeshPrim does not contain mesh data. Skipping
Warning: Mesh %s will be triangulated for normal computation
Warning: Mesh %s will be triangulated for tangent computation
Warning: %s does not contain normal or have compute normal options specified.To compute tangent, face normal will be computed first.
void VtArray<unsigned int>::push_back(const VtArray::ElementType &) [T = unsigned int]
ModelKit/extern/usd/pxr/usd/usd/prim.h
HasAPI
bool UsdPrim::HasAPI(const TfToken &) const [T = UsdSkelBindingAPI]
Removed 
 bad triangles
No bad triangles found.
No triangles to map
Unable to pack a map for AO baking
Successful insertion in a tree of size 
 with disp 
Fail insertion in a tree of size 
This model can't be inserted in a texture of size 
. Switching to 
Fraction completed : 
Too many triangles to pack in a maximum size texture
$ao-%lu
Couldn't parse triangles from supplied meshes
Texture filling efficiency 
file:///tmp/originalAOTexture.png
Computing vertex bake information for 
 triangles
Fraction completed : %f
jpeg
[%@ %@]: Cannot create topology with a submesh
[%@ %@]: Cannot create topology from triangle strips
faceCount
faceTopology
%lu 
8Bit Indices:
16Bit Indices:
32Bit Indices:
INVALID INDEX TYPE!!!
IndexBuffers: 
Name: %@
IndexCount: %lu
 (%d), 
allocator
indexBuffer
indexCount
indexType
geometryType
Indices
materials
Failed to save 
 because 
mdlabc_
_geo
isGeomParam
arrayExtent
.indices
OTypedArrayProperty::init()
OTypedGeomParam::set()
Assertion %s failed on line %d of file %s
Detailed description: %s
TBB Warning: %s
bad allocation in previous or concurrent attempt
attempted recursive lock on critical section or non-recursive mutex
User-initiated abort has terminated this operation
The same task_handle object cannot be executed more than once
wait() was not called on the structured_task_group
%s: %s
Step must be positive
Index out of requested size range
Index out of allocated segment slots
Index is not allocated
Resource deadlock would occur
Operation not permitted
Wait on condition variable failed
Invalid hash load factor
[backward compatibility] Invalid number of buckets
swap() is invalid on non-equal allocators
reservation size exceeds permitted max size
invalid key
Illegal tagged_msg cast
Blocking terminate failed
TBB: %s
bokeh
Cannot import into nil asset
%@?address=%lx&size=%ld
ArMemoryResolver
Could not import USD file
Could not open file
Unsupported USD file type
/__Master
Materials
BlendShape
__Master
The number of workers is currently limited to %u. The request for %u workers is ignored. Further requests for more workers will be silently ignored until the limit changes.
Thread stack size has been already set to %u. The request for larger stack (%u) cannot be satisfied.
RML might limit the number of workers to %u while %u is requested.
[%@ %@]: divisions must be greater than 0
[%@ %@]: patchRadius must be greater or equal to 0
[%@ %@]: voxelExtent must be greater than 0
[%@ %@]: maxBounds must be strictly greater than minBounds
[%@ %@]: thickness must be greater or equal to 0
[%@ %@]: interiorNBWidth must be greater or equal to 0
[%@ %@]: exteriorNBWidth must be greater or equal to 0
Voxel
Voxels
[%@ %@]: interiorShells must be greater or equal to 0
[%@ %@]: exteriorShells must be greater or equal to 0
anisotropy
binormal
edgeCrease
occlusionValue
shadingBasisU
shadingBasisV
subdivisionStencil
tangent
bitangent
textureCoordinate
unknown
lightmapCoord
<%@: %p stride=%lu>
<%@: %p name=%@ format=%s bufferIndex=%lu offset=%lu>
%lu %s %s off=%lu buf%lu
%lu stride=%lu
<%@: %p attributes:%@ layouts:%@>
layouts.count
layouts[%zu]
attributes.count
attributes[%zu]
.bufferIndex
.format
.time
UChar1
UChar2
UChar3
UChar4
Char1
Char2
Char3
Char4
UChar1Norm
UChar2Norm
UChar3Norm
UChar4Norm
Char1Norm
Char2Norm
Char3Norm
UShort1
UShor2
UShor3
UShort4
Short1
Short2
Short3
Short4
UShort1Norm
UShort2Norm
UShort3Norm
UShort4Norm
Short1Norm
Short2Norm
Short34Norm
Short4Norm
UInt1
UInt2
UInt3
UInt4
Int1
Int2
Int3
Int4
Half1
Half2
Half3
Half4
Float1
Float2
Float3
Float4
Int1010102Norm
UInt1010102Norm
Invalid
array count (%lu) has to match MDLMatrix4x4Array.elementCount (%lu)
array count (%lu) has to match MDLAnimatedVector3Array.elementCount (%lu)
VtArray::value_type *VtArray<GfMatrix4f>::_AllocateNew(size_t) [T = GfMatrix4f]
void VtArray<GfMatrix4f>::_DetachIfNotUnique() [T = GfMatrix4f]
array count (%lu) has to match MDLAnimatedScalarArray.elementCount (%lu)
value array count mismatch: expected %lu * %lu = %lu elements, but got %lu
valuesArray size is too small (%lu elements) to hold all %lu elements
array count (%lu) has to match MDLAnimatedQuaternionArray.elementCount (%lu)
Unidentified exception
Mesh:%s vertexCount %llu
%llu %s:
%f %f %f %f
submeshes:%llu
submesh #%llu
[%@ %@]: vertexBuffer.type must be MDLMeshBufferTypeVertex
[%@ %@]: No descriptor supplied
[%@ %@]: Buffer index out of range
[%@ %@]: Allocators on supplied vertexBuffers do not all match, but they must
[%@ %@]: Must provide texture coordinates, a tangent, and bitangent attribute
[%@ %@]: Must provide position data
[%@ %@]: Must provide texture coordinates
[%@ %@]: Tangent data in float3 format not supplied or could not be created
[%@ %@]: Bitangent data in float3 format not supplied or could not be created
[%@ %@]: Must provide normals
[%@ %@]: Tangent data not supplied or could not be created
Index bitdepth invalid for submesh:%@ setting default to 32bit
[%@ %@]: Must provide attribute name
[%@ %@]: Position data not found
[%@ %@]: Could not create normals attribute
[%@ %@]: Must provide name
[%@ %@]: Texture coordinate data of format float2 not created
<<%@: 0x%lx>, Name: %@, VertexCount: %d, VertexBufferCount: %d>
Not enough memory for buffers
Invalid vertex attribute buffer index
Invalid vertex attribute buffer offset
Failed to copy vertex attribute buffers with OOB access
vertexCount
vertexBuffers
submeshes
[%@ %@]: Must provide either a valid normal pointer or bitangent pointer.
SceneKit
ModelIO
Custom
com.apple.modelio.import
allocatorType
bridgeType
bundleIdentifier
fileExtension
vertexDescriptor
@"NSDictionary"8@?0
com.apple.modelio.export
com.apple.modelio.initialize
Error %s : %s
Warning : %s
FAR_NO_ERROR
FAR_FATAL_ERROR
FAR_INTERNAL_CODING_ERROR
FAR_CODING_ERROR
FAR_RUNTIME_ERROR
[%@ %@]: geometryType for Cylinder must be MDLGeometryTypeTriangles or MDLGeometryTypeLines
cylinder
libcilkrts.so
TBB failed to initialize task scheduler TLS
failed to destroy task scheduler TLS: %s
rml::tbb_factory::make_server failed with status %x, falling back on private rml
private
shared
CILK
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/tbb/src/tbb/governor.cpp
!my_scheduler
task_scheduler_init already initialized
number_of_threads==automatic || number_of_threads > 0
number_of_threads for task_scheduler_init must be automatic or positive
!thread_stack_size
deferred initialization ignores stack size setting
__cilkrts_watch_stack
Could not unmap file - error (%d)
catmark
Cannot export nil asset
Cannot create USD data for export
/Root
subcomponent
/_%d
__UV
primvars:
ao_map
Corrupt %@ attribute data. Skip copying.
ModelKit/extern/usd/pxr/usd/usdGeom/xformOp.h
bool UsdGeomXformOp::Set(const T &, UsdTimeCode) const [T = GfMatrix4d]
Cannot set a value on the inverse xformOp '%s'. Please set value on the paired non-inverse xformOp instead.
Unable to create new vertex buffers, the destination Layout element counts size is: %d, while the maxVertexBufferCount is: %d
Warning: mesh %s has attribute %s with unknown frequency.
Warning: mesh has a faceVertexCount less than 3, ignoring mesh: %s.
trace
v16@?0Q8
frame time : %.2fms
Couldn't copy index buffer because indices too large
Couldn't copy index buffer because invalid indices
Couldn't create buffer to copy indices
Couldn't copy index data data due to geometry type mismatch
MISSING_EDGE_FACES
MISSING_EDGE_VERTS
MISSING_FACE_EDGES
MISSING_FACE_VERTS
MISSING_VERT_FACES
MISSING_VERT_EDGES
FAILED_CORRELATION_FACE_VERT
FAILED_CORRELATION_FACE_EDGE
FAILED_ORIENTATION_INCIDENT_EDGE
FAILED_ORIENTATION_INCIDENT_FACE
FAILED_ORIENTATION_INCIDENT_FACES_EDGES
DEGENERATE_EDGE
NON_MANIFOLD_EDGE
%s - missing face-verts
%s - missing vert-faces
%s - face %d correlation of vert %d failed
%s - missing edge-faces
%s - missing face-edges
%s - face %d correlation of edge %d failed
%s - missing edge-verts
%s - missing vert-edges
%s - edge %d correlation of vert %d failed
%s - vertex %d cannot orient incident faces and edges
%s - vertex %d orientation failure at incident face %d
%s - vertex %d orientation failure at incident edge %d
%s - Error in eIndex = %d:  degenerate edge not tagged marked non-manifold
%s - edge %d with %d incident faces not tagged non-manifold
/usd_plugins/
no memory avaliable in zone
incorrect allocator used with zone
Obj%d
mdl%d
<<%@: 0x%lx>, Name: %@, Children: %d>
 |  
    
 `--%@
%@%@
Edge %d specified to be sharp does not exist (%d, %d)
Vertex %d specified to be sharp does not exist
Cannot apply uniform refinement -- base level appears to be uninitialized.
Cannot apply uniform refinement -- previous refinements already applied.
Warning: unsupported image format %@ in USDZ archive
Needs MDLAsset loaded from a USDZ file.
tiff
com.ilm.openexr-image
[%@ %@]: Only single channel textures supported for cellular noise
[%@ %@]: Only 8 bit textures supported
[%@ %@]: Only 4 channel textures supported for vector noise
[%@ %@]: Only 1 and 4 channel textures supported for scalar noise
[%@ %@]: Only 4 channel textures supported
Only UInt8 and Float skies are supported. Overriding to UInt8
file://%@
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/trace/aggregateNode.cpp
MarkRecursiveChildren
void TraceAggregateNode::MarkRecursiveChildren()
Corrupt stack state.
Invalid stack state.
_MergeRecursive
void TraceAggregateNode::_MergeRecursive(const TraceAggregateNodeRefPtr &)
Marker has no or expired parent.
NULL child is not allowed.
_SetAsRecursionMarker
void TraceAggregateNode::_SetAsRecursionMarker(TraceAggregateNodePtr)
T *TfRefPtr<TraceEventNode>::operator->() const [U = TraceEventNode]
WARNING:
%9.3f ms 
%7.0f samples 
%10.3f samples 
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/trace/reporter.cpp
Report
void TraceReporter::Report(std::ostream &, int)
iterationCount %d is invalid; falling back to 1
Number of iterations: 
   inclusive    exclusive        
  incl./iter   excl./iter       samples/iter
 MallocTags enabled
Trace global reporter
TraceReporter
T *TfRefPtr<TraceAggregateNode>::operator->() const [U = TraceAggregateNode]
T *TfRefPtr<TraceAggregateTree>::operator->() const [U = TraceAggregateTree]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, TraceAggregateNode>::operator->() const [PtrTemplate = TfWeakPtr, Type = TraceAggregateNode]
T *TfRefPtr<TraceEventTree>::operator->() const [U = TraceEventTree]
TraceRegistry global collector
PXR_ENABLE_GLOBAL_TRACE
TraceCollector::BeginEvent
TraceCollector::EndEvent (key)
TraceCollector::_PerThreadData::BeginEvent
TraceCollector::_PerThreadData::EndEvent
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, TraceReporter>::operator->() const [PtrTemplate = TfWeakPtr, Type = TraceReporter]
TraceCollection
Main Thread
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, TraceReporterDataSourceCollector>::operator->() const [PtrTemplate = TfWeakPtr, Type = TraceReporterDataSourceCollector]
virtual TfType TfNotice::_StandardDeliverer<TfNotice::_Deliverer<TfWeakPtr<TraceReporterDataSourceCollector>, TfAnyWeakPtr, void (TraceReporterDataSourceCollector::*)(const TraceCollectionAvailable &), TraceCollectionAvailable>>::GetNoticeType() const [Derived = TfNotice::_Deliverer<TfWeakPtr<TraceReporterDataSourceCollector>, TfAnyWeakPtr, void (TraceReporterDataSourceCollector::*)(const TraceCollectionAvailable &), TraceCollectionAvailable>]
tracelite
bindTransforms
blendShapes
blendShapeWeights
jointNames
joints
normalOffsets
offsets
primvars:skel:geomBindTransform
primvars:skel:jointIndices
primvars:skel:jointWeights
restTransforms
rotations
skel:animationSource
skel:blendShapes
skel:blendShapeTargets
skel:joints
skel:skeleton
translations
weight
Validate
bool UsdSkelTopology::Validate(std::string *) const
_ComputeParentIndicesFromPaths
VtIntArray (anonymous namespace)::_ComputeParentIndicesFromPaths(TfSpan<const SdfPath>)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/skinningQuery.cpp
_InitializeJointInfluenceBindings
void UsdSkelSkinningQuery::_InitializeJointInfluenceBindings(const UsdAttribute &, const UsdAttribute &)
jointIndices element size (%d) != jointWeights element size (%d).
Invalid element size [%d]: element size must be greater than zero.
jointIndices interpolation (%s) != jointWeights interpolation (%s).
Invalid interpolation (%s) for joint influences: interpolation must be either 'constant' or 'vertex'.
GetBlendShapeOrder
../ModelKit/extern/usd/pxr/usd/usdGeom/primvar.h
../ModelKit/extern/usd/pxr/usd/usdSkel/animMapper.h
Remap
bool UsdSkelAnimMapper::Remap(const Container &, Container *, int, const typename Container::value_type *) const [Container = VtArray<GfMatrix4d>]
'target' is null
Invalid elementSize [%d]: size must be greater than zero.
FindOrCreateAnimQuery
UsdSkelAnimQuery UsdSkel_CacheImpl::ReadScope::FindOrCreateAnimQuery(const UsdPrim &)
FindOrCreateSkelDefinition
UsdSkel_SkelDefinitionRefPtr UsdSkel_CacheImpl::ReadScope::FindOrCreateSkelDefinition(const UsdPrim &)
FindOrCreateSkelQuery
UsdSkelSkeletonQuery UsdSkel_CacheImpl::ReadScope::FindOrCreateSkelQuery(const UsdPrim &)
Populate
bool UsdSkel_CacheImpl::ReadScope::Populate(const UsdSkelRoot &)
[UsdSkelCache] Populate map from <%s>
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/cacheImpl.cpp
'root' is invalid.
[UsdSkelCache]  %sPruning traversal at <%s> (prim is not UsdGeomImageable)
[UsdSkelCache] %sAdded skinning query for prim <%s>
inbetweens:
:normalOffsets
ComputeSkelBindings
bool UsdSkelCache::ComputeSkelBindings(const UsdSkelRoot &, std::vector<UsdSkelBinding> *) const
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/cache.cpp
'skelRoot' is invalid.
'bindings' pointer is null.
[UsdSkelCache] Compute skel bindings for <%s>
[UsdSkelCache]  Pruning traversal at <%s> (prim is not UsdGeomImageable)
!skelStack.empty()
[UsdSkelCache]  Found skel binding at <%s> which targets skel <%s>.
[UsdSkelCache]  Found skinnable prim <%s>, bound to skel <%s>.
USDSKEL_CACHE
USDSKEL_BAKESKINNING
void VtArray<UsdSkelSkinningQuery>::push_back(const VtArray::ElementType &) [ELEM = UsdSkelSkinningQuery]
VtArray::value_type *VtArray<UsdSkelSkinningQuery>::_AllocateNew(size_t) [ELEM = UsdSkelSkinningQuery]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/bindingAPI.cpp
GetSkeleton
bool UsdSkelBindingAPI::GetSkeleton(UsdSkelSkeleton *) const
'skel' pointer is null.
%s -- target (<%s>) of relationship is not a Skeleton.
GetAnimationSource
bool UsdSkelBindingAPI::GetAnimationSource(UsdPrim *) const
'prim' pointer is null.
%s -- target (<%s>) of relationship is not a valid skel animation source.
_GetFirstTargetPrimForRel
UsdPrim (anonymous namespace)::_GetFirstTargetPrimForRel(const UsdRelationship &, const SdfPathVector &)
%s -- relationship has more than one target. Only the first will be used.
%s -- Invalid target <%s>.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/animQueryImpl.cpp
UsdSkel_SkelAnimationQueryImpl
UsdSkel_SkelAnimationQueryImpl::UsdSkel_SkelAnimationQueryImpl(const UsdSkelAnimation &)
anim
virtual bool UsdSkel_SkelAnimationQueryImpl::ComputeJointLocalTransformComponents(VtVec3fArray *, VtQuatfArray *, VtVec3hArray *, UsdTimeCode) const
virtual bool UsdSkel_SkelAnimationQueryImpl::ComputeBlendShapeWeights(VtFloatArray *, UsdTimeCode) const
_anim
PackedJointAnimation schema object is invalid.
bool UsdSkel_SkelAnimationQueryImpl::_ComputeJointLocalTransforms(VtArray<Matrix4> *, UsdTimeCode) const [Matrix4 = GfMatrix4d]
%s -- size of transform component arrays [%zu] != joint order size [%zu].
%s -- failed composing transforms from components.
bool UsdSkel_SkelAnimationQueryImpl::_ComputeJointLocalTransforms(VtArray<Matrix4> *, UsdTimeCode) const [Matrix4 = GfMatrix4f]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/animQuery.cpp
bool UsdSkelAnimQuery::ComputeJointLocalTransforms(VtArray<Matrix4> *, UsdTimeCode) const [Matrix4 = GfMatrix4d]
invalid anim query.
ComputeJointLocalTransformComponents
ComputeBlendShapeWeights
VtTokenArray UsdSkelAnimQuery::GetJointOrder() const
VtTokenArray UsdSkelAnimQuery::GetBlendShapeOrder() const
T *TfRefPtr<UsdSkel_AnimQueryImpl>::operator->() const [U = UsdSkel_AnimQueryImpl]
usdSkel
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/skeleton.cpp
_ComputeExtent
bool _ComputeExtent(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
skel
skelQuery
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/utils.cpp
'xforms' is null
UsdSkelMakeTransform
void UsdSkelMakeTransform(const GfVec3f &, const GfMatrix3f &, const GfVec3h &, Matrix4 *) [Matrix4 = GfMatrix4d]
'xform' is null
void UsdSkelMakeTransform(const GfVec3f &, const GfMatrix3f &, const GfVec3h &, Matrix4 *) [Matrix4 = GfMatrix4f]
'xforms' pointer is null.
UsdSkelComputeJointsExtent
bool UsdSkelComputeJointsExtent(TfSpan<const Matrix4>, GfRange3f *, float, const Matrix4 *) [Matrix4 = GfMatrix4d]
'extent' pointer is null.
UsdSkel_ConcatJointTransforms
bool (anonymous namespace)::UsdSkel_ConcatJointTransforms(const UsdSkelTopology &, TfSpan<const Matrix4>, TfSpan<Matrix4>, const Matrix4 *) [Matrix4 = GfMatrix4d]
Size of jointLocalXforms [%zu] != number of joints [%zu]
Size of xforms [%zu] != number of joints [%zu]
Joint %zu has itself as its parent.
Joint %zu has mis-ordered parent %d. Joints are expected to be ordered with parent joints always coming before children.
Size of translations [%zu] != size of xforms [%zu]
Size of rotations [%zu] != size of xforms [%zu]
Size of scales [%zu] != size of xforms [%zu]
UsdSkel_MakeTransforms
bool (anonymous namespace)::UsdSkel_MakeTransforms(TfSpan<const GfVec3f>, TfSpan<const GfQuatf>, TfSpan<const GfVec3h>, TfSpan<Matrix4>) [Matrix4 = GfMatrix4d]
bool (anonymous namespace)::UsdSkel_MakeTransforms(TfSpan<const GfVec3f>, TfSpan<const GfQuatf>, TfSpan<const GfVec3h>, TfSpan<Matrix4>) [Matrix4 = GfMatrix4f]
ComputeJointLocalTransforms
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/skeletonQuery.cpp
invalid skeleton query.
ComputeJointSkelTransforms
bool UsdSkelSkeletonQuery::ComputeJointSkelTransforms(VtArray<Matrix4> *, UsdTimeCode, bool) const [Matrix4 = GfMatrix4d]
const UsdSkelSkeleton &UsdSkelSkeletonQuery::GetSkeleton() const
GetJointOrder
VtTokenArray UsdSkelSkeletonQuery::GetJointOrder() const
T *TfRefPtr<UsdSkel_SkelDefinition>::operator->() const [U = UsdSkel_SkelDefinition]
_ComputeJointLocalTransforms
bool UsdSkelSkeletonQuery::_ComputeJointLocalTransforms(VtArray<Matrix4> *, UsdTimeCode, bool) const [Matrix4 = GfMatrix4d]
%s -- Failed computing local space transforms: the the animation source (<%s>) is sparse, but the 'restTransforms' of the Skeleton are either unset, or do not match the number of joints.
_ComputeJointSkelTransforms
bool UsdSkelSkeletonQuery::_ComputeJointSkelTransforms(VtArray<Matrix4> *, UsdTimeCode, bool) const [Matrix4 = GfMatrix4d]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/root.cpp
skelRoot
bool UsdSkel_SkelDefinition::_Init(const UsdSkelSkeleton &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/skelDefinition.cpp
%s -- invalid topology: %s
%s -- size of 'bindTransforms' attr [%zu] does not match the number of joints in the 'joints' attr [%zu].
%s -- size of 'restTransforms' attr [%zu] does not match the number of joints in the 'joints' attr [%zu].
GetJointLocalRestTransforms
bool UsdSkel_SkelDefinition::GetJointLocalRestTransforms(VtMatrix4dArray *)
_GetJointSkelRestTransforms
bool UsdSkel_SkelDefinition::_GetJointSkelRestTransforms(VtArray<Matrix4> *) [ComputeFlag = 4, Matrix4 = GfMatrix4d]
_ComputeJointSkelRestTransforms
bool UsdSkel_SkelDefinition::_ComputeJointSkelRestTransforms() [ComputeFlag = 4, Matrix4 = GfMatrix4d]
GetJointLocalRestTransforms(&jointLocalRestXforms)
success
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/js/json.cpp
JsParseString
JsValue JsParseString(const std::string &, JsParseError *)
JSON string is empty
handler.values.size() == 1
Unexpected value count: %zu
No error.
The document is empty.
The document root must not follow by other values.
Invalid value.
Missing a name for object member.
Missing a colon after a name of object member.
Missing a comma or '}' after an object member.
Missing a comma or ']' after an array element.
Incorrect hex digit after \u escape in string.
The surrogate pair in string is invalid.
Invalid escape character in string.
Missing a closing quotation mark in string.
Invalid encoding in string.
Number too big to be stored in double.
Miss fraction part in number.
Miss exponent in number.
Terminate parsing due to Handler error.
Unspecific syntax error.
Unknown error.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/js/value.cpp
GetJsObject
const JsObject &JsValue::GetJsObject() const
GetJsArray
const JsArray &JsValue::GetJsArray() const
const std::string &JsValue::GetString() const
GetBool
bool JsValue::GetBool() const
GetInt
int JsValue::GetInt() const
GetInt64
int64_t JsValue::GetInt64() const
GetUInt64
uint64_t JsValue::GetUInt64() const
GetReal
double JsValue::GetReal() const
Attempt to get %s from value holding %s
object
array
real
null
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/js/utils.cpp
JsFindValue
JsOptionalValue JsFindValue(const JsObject &, const std::string &, const JsOptionalValue &)
Key is empty
model
group
assembly
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/kind/registry.cpp
_Register
void KindRegistry::_Register(const TfToken &, const TfToken &)
Invalid kind: '%s'
Kind '%s' has already been registered
_RegisterDefaults
void KindRegistry::_RegisterDefaults()
Expected dict for kind '%s'
Expected string for baseKind
TfIterator<T, Reverse> &TfIterator<const std::vector<TfWeakPtr<PlugPlugin>>, false>::operator++() [T = const std::vector<TfWeakPtr<PlugPlugin>>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<TfWeakPtr<PlugPlugin>>, false>::operator*() [T = const std::vector<TfWeakPtr<PlugPlugin>>, Reverse = false]
Kinds
TfIterator<T, Reverse> &TfIterator<std::map<std::string, JsValue>, false>::operator++() [T = std::map<std::string, JsValue>, Reverse = false]
TfIterator::Iterator &TfIterator<std::map<std::string, JsValue>, false>::operator->() [T = std::map<std::string, JsValue>, Reverse = false]
Cycle detected:
inherits from:
is relocated from:
uses variant:
references:
gets payload from:
refers to:
CANNOT 
inherit from:
be relocated from:
use variant:
reference:
get payload from:
refer to:
which 
CANNOT 
which is private.
The property <%s> has inconsistent spec types.  The defining spec is @%s@<%s> and is %s spec.  The conflicting spec is @%s@<%s> and is %s spec.  The conflicting spec will be ignored.
The attribute <%s> has specs with inconsistent value types.  The defining spec is @%s@<%s> with value type '%s'.  The conflicting spec is @%s@<%s> with value type '%s'.  The conflicting spec will be ignored.
The attribute <%s> has specs with inconsistent variability.  The defining spec is @%s@<%s> with variability '%s'.  The conflicting spec is @%s@<%s> with variability '%s'.  The conflicting variability will be ignored.
Invalid %s path <%s> on prim %s -- must be an absolute prim path.
Could not open asset @%s@ for %s on prim %s%s%s.
Asset @%s@ was muted for %s on prim %s.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/errors.cpp
ToString
virtual std::string PcpErrorInvalidInstanceTargetPath::ToString() const
ownerSpecType == SdfSpecTypeAttribute || ownerSpecType == SdfSpecTypeRelationship
The %s <%s> from <%s> in layer @%s@ is authored in a class but refers to an instance of that class.  Ignoring.
virtual std::string PcpErrorInvalidExternalTargetPath::ToString() const
The %s <%s> from <%s> in layer @%s@ refers to a path outside the scope of the %s from <%s>.  Ignoring.
virtual std::string PcpErrorInvalidTargetPath::ToString() const
The %s <%s> from <%s> in layer @%s@ is invalid.  This may be because the path is the pre-relocated source path of a relocated prim.  Ignoring.
Invalid sublayer offset %s in sublayer @%s@ of layer @%s@. Using no offset instead.
Invalid reference offset %s at %s on asset path '%s'. Using no offset instead.
The following sublayers for layer @%s@ have the same owner '%s': %s
Could not load sublayer @%s@ of layer @%s@%s%s; skipping.
<NULL>
The layer @%s@ has an invalid opinion at the relocation source path <%s>, which will be ignored.
will be ignored because:
is private and overrides its opinions.
The layer at @%s@ has an illegal opinion about %s <%s> which is private across a reference, inherit, or variant.  Ignoring.
Sublayer hierarchy with root layer @%s@ has cycles. Detected when layer @%s@ was seen in the layer stack for the second time.
virtual std::string PcpErrorTargetPermissionDenied::ToString() const
The %s <%s> from <%s> in layer @%s@ targets an object that is private on the far side of a reference or inherit.  This %s will be ignored.
connection
Unresolved %s path <%s> on prim %s.
PcpErrorType_ArcCycle
PcpErrorType_ArcPermissionDenied
PcpErrorType_InconsistentPropertyType
PcpErrorType_InconsistentAttributeType
PcpErrorType_InconsistentAttributeVariability
PcpErrorType_InternalAssetPath
PcpErrorType_InvalidPrimPath
PcpErrorType_InvalidAssetPath
PcpErrorType_InvalidInstanceTargetPath
PcpErrorType_InvalidExternalTargetPath
PcpErrorType_InvalidTargetPath
PcpErrorType_InvalidReferenceOffset
PcpErrorType_InvalidSublayerOffset
PcpErrorType_InvalidSublayerOwnership
PcpErrorType_InvalidSublayerPath
PcpErrorType_InvalidVariantSelection
PcpErrorType_OpinionAtRelocationSource
PcpErrorType_PrimPermissionDenied
PcpErrorType_PropertyPermissionDenied
PcpErrorType_SublayerCycle
PcpErrorType_TargetPermissionDenied
PcpErrorType_UnresolvedPrimPath
TfIterator<T, Reverse> &TfIterator<const std::vector<TfWeakPtr<SdfLayer>>, false>::operator++() [T = const std::vector<TfWeakPtr<SdfLayer>>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<TfWeakPtr<SdfLayer>>, false>::operator*() [T = const std::vector<TfWeakPtr<SdfLayer>>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/layerStackRegistry.cpp
FindOrCreate
PcpLayerStackRefPtr Pcp_LayerStackRegistry::FindOrCreate(const PcpLayerStackIdentifier &, PcpErrorVector *)
Cannot build layer stack with null rootLayer
_Remove
void Pcp_LayerStackRegistry::_Remove(const PcpLayerStackIdentifier &, const PcpLayerStack *)
i != _data->identifierToLayerStack.end()
i->second.operator->() == layerStack
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/dependencies.cpp
Pcp_Dependencies::ConcurrentPopulationContext::ConcurrentPopulationContext(Pcp_Dependencies &)
!_deps._concurrentPopulationContext
Pcp_Dependencies::Add
Pcp_Dependencies: Adding deps for index <%s>:
 - Node %i (%s %s): <%s> %s
    None
Pcp_Dependencies: Removing deps for index <%s>
void Pcp_Dependencies::Remove(const PcpPrimIndex &, PcpLifeboat *)
i != deps.end()
      Removed last dep on site
      No subtree deps
    Removing empty parent entry <%s>
    Removed last dep on %s
!it->second.IsEmpty()
fieldIt != _possibleDynamicFileFormatArgumentFields.end()
Pcp_Dependencies::RemoveAll: Clearing all dependencies
SdfPathTable::_IterBoolPair SdfPathTable<std::vector<SdfPath>>::_InsertInTable(const SdfPathTable::value_type &) [MappedType = std::vector<SdfPath>]
void SdfPathTable<std::vector<SdfPath>>::_Grow() [MappedType = std::vector<SdfPath>]
TfIterator<T, Reverse> &TfIterator<std::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::vector<SdfPath>>, TfHash>, false>::operator++() [T = std::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::vector<SdfPath>>, TfHash>, Reverse = false]
TfIterator::Iterator &TfIterator<std::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::vector<SdfPath>>, TfHash>, false>::operator->() [T = std::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::vector<SdfPath>>, TfHash>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::vector<SdfPath>>, TfHash>, false>::operator++() [T = const std::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::vector<SdfPath>>, TfHash>, Reverse = false]
TfIterator::Iterator &TfIterator<const std::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::vector<SdfPath>>, TfHash>, false>::operator->() [T = const std::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::vector<SdfPath>>, TfHash>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/node.cpp
SetHasSpecs
void PcpNodeRef::SetHasSpecs(bool)
_nodeIdx < _graph->_nodeHasSpecs.size()
const SdfPath &PcpNodeRef::GetPath() const
_nodeIdx < _graph->_nodeSitePaths.size()
../ModelKit/extern/usd/pxr/usd/pcp/primIndex_Graph.h
_GetNode
const PcpPrimIndex_Graph::_Node &PcpPrimIndex_Graph::_GetNode(size_t) const
idx < _GetNumNodes()
TfIterator<T, Reverse> &TfIterator<std::pair<PcpPrimIterator, PcpPrimIterator>, true>::operator++() [T = std::pair<PcpPrimIterator, PcpPrimIterator>, Reverse = true]
root
purely-direct
partly-direct
ancestral
virtual
non-virtual
PcpDependencyTypeNone
non-dependency
PcpDependencyTypeRoot
root dependency
PcpDependencyTypePurelyDirect
purely-direct dependency
PcpDependencyTypePartlyDirect
partly-direct dependency
PcpDependencyTypeDirect
direct dependency
PcpDependencyTypeAncestral
ancestral dependency
PcpDependencyTypeVirtual
virtual dependency
PcpDependencyTypeNonVirtual
non-virtual dependency
PcpDependencyTypeAnyNonVirtual
any non-virtual dependency
PcpDependencyTypeAnyIncludingVirtual
any dependency
PCP_CULLING
Controls whether culling is enabled in Pcp caches.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/cache.cpp
FindSiteDependencies
PcpDependencyVector PcpCache::FindSiteDependencies(const PcpLayerStackPtr &, const SdfPath &, PcpDependencyFlags, bool, bool, bool) const
depMask must include at least one of {PcpDependencyTypeVirtual, PcpDependencyTypeNonVirtual}
depMask must include at least one of {PcpDependencyTypeRoot, PcpDependencyTypePurelyDirect, PcpDependencyTypePartlyDirect, PcpDependencyTypeAncestral}
depMask of PcpDependencyTypeRoot requires PcpDependencyTypeNonVirtual
PcpLayerStack does not belong to this PcpCache
PcpCache::FindSiteDependencies - recurseOnIndex
Apply
void PcpCache::Apply(const PcpCacheChanges &, PcpLifeboat *)
_ComputePrimIndexesInParallel
void PcpCache::_ComputePrimIndexesInParallel(const SdfPathVector &, PcpErrorVector *, PcpCache::_UntypedIndexingChildrenPredicate, PcpCache::_UntypedIndexingPayloadPredicate, const char *, const char *)
Computing prim indexes in parallel only supported for USD caches.
_ComputePrimIndexWithCompatibleInputs
const PcpPrimIndex &PcpCache::_ComputePrimIndexWithCompatibleInputs(const SdfPath &, const PcpPrimIndexInputs &, PcpErrorVector *)
ComputeIndex
void PcpCache::_ParallelIndexer::ComputeIndex(const PcpPrimIndex *, const SdfPath &)
parentIndex || path == SdfPath::AbsoluteRootPath()
_ComputeIndex
void PcpCache::_ParallelIndexer::_ComputeIndex(const PcpPrimIndex *, SdfPath, bool)
!index->IsValid()
PrimIndex for %s already exists in cache
TfIterator::Iterator &TfIterator<std::vector<std::pair<const PcpPrimIndex *, SdfPath>>, false>::operator->() [T = std::vector<std::pair<const PcpPrimIndex *, SdfPath>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<std::pair<const PcpPrimIndex *, SdfPath>>, false>::operator++() [T = std::vector<std::pair<const PcpPrimIndex *, SdfPath>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::set<SdfPath>, false>::operator++() [T = const std::set<SdfPath>, Reverse = false]
TfIterator::Reference TfIterator<const std::set<SdfPath>, false>::operator*() [T = const std::set<SdfPath>, Reverse = false]
../ModelKit/extern/usd/pxr/usd/pcp/dependencies.h
Pcp_ForEachDependentNode
void Pcp_ForEachDependentNode(const SdfPath &, const PcpLayerStackPtr &, const SdfPath &, const PcpCache &, const FN &) [FN = (lambda at /Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/cache.cpp:620:28)]
nodeUsingSite
Unable to find node that introduced dependency on site <%s>%s for prim <%s> in %s
auto PcpCache::FindSiteDependencies(const PcpLayerStackPtr &, const SdfPath &, PcpDependencyFlags, bool, bool, bool)::(anonymous class)::operator()(const SdfPath &, const SdfPath &)::(anonymous class)::operator()(const SdfPath &, const PcpNodeRef &) const
!depIndexPath.IsEmpty()
SdfPathTable::_IterBoolPair SdfPathTable<PcpPrimIndex>::_InsertInTable(const SdfPathTable::value_type &) [MappedType = PcpPrimIndex]
void SdfPathTable<PcpPrimIndex>::_Grow() [MappedType = PcpPrimIndex]
PcpMapFunction
Create
static PcpMapFunction PcpMapFunction::Create(const PcpMapFunction::PathMap &, const SdfLayerOffset &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/mapFunction.cpp
Cannot construct a PcpMapFunction with %zu entries; limit is %zu
The mapping of '%s' to '%s' is invalid.
Compose
PcpMapFunction PcpMapFunction::Compose(const PcpMapFunction &) const
%s -> %s
TfIterator<T, Reverse> &TfIterator<const std::map<SdfPath, SdfPath, SdfPath::FastLessThan>, false>::operator++() [T = const std::map<SdfPath, SdfPath, SdfPath::FastLessThan>, Reverse = false]
TfIterator::Iterator &TfIterator<const std::map<SdfPath, SdfPath, SdfPath::FastLessThan>, false>::operator->() [T = const std::map<SdfPath, SdfPath, SdfPath::FastLessThan>, Reverse = false]
_Canonicalize
bool _Canonicalize(PairIter &, PairIter &) [PairIter = std::pair<SdfPath, SdfPath> *]
PcpMapExpresion
PcpMapExpression::_Node::EvaluateAndCache - cache miss
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/mapExpression.cpp
_EvaluateUncached
PcpMapExpression::Value PcpMapExpression::_Node::_EvaluateUncached() const
unhandled case
SetValueForVariable
void PcpMapExpression::_Node::SetValueForVariable(PcpMapExpression::Value &&)
Cannot set value for non-variable
PCP_OVERRIDE_INSTANCEABLE
Overrides Pcp's default computation for whether a PrimIndex is instanceable:
 -1: (the default) computes instanceable only in USD mode
  0: NEVER computes instanceable (always returns false)
  1: always compute instanceable, whether in USD mode or not.
Pcp_PrimIndexIsInstanceable
bool Pcp_PrimIndexIsInstanceable(const PcpPrimIndex &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/strengthOrdering.cpp
PcpCompareSiblingNodeStrength
int PcpCompareSiblingNodeStrength(const PcpNodeRef &, const PcpNodeRef &)
Nodes are not siblings
a.GetParentNode() == a.GetRootNode() && b.GetParentNode() == b.GetRootNode()
Did not find copied specialize node.
aOriginRoot.second != bOriginRoot.second
Should not have sibling specializes nodes with same origin root and distance to origin root.
Did not find either origin
PcpCompareNodeStrength
int PcpCompareNodeStrength(const PcpNodeRef &, const PcpNodeRef &)
Nodes are not part of the same prim index
_CompareNodeStrength
int _CompareNodeStrength(const PcpNodeRef &, const PcpNodeRefVector &, const PcpNodeRef &, const PcpNodeRefVector &)
nodesUnderCommonParent.second != bNodes.rend()
nodesUnderCommonParent.first != aNodes.rend() && nodesUnderCommonParent.second != bNodes.rend()
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/dynamicFileFormatDependencyData.cpp
CanFieldChangeAffectFileFormatArguments
bool PcpDynamicFileFormatDependencyData::CanFieldChangeAffectFileFormatArguments(const TfToken &, const VtValue &, const VtValue &) const
contextData.first
PcpTranslatePathFromNodeToRoot
SdfPath PcpTranslatePathFromNodeToRoot(const PcpNodeRef &, const SdfPath &, bool *)
PcpTranslatePathFromRootToNode
SdfPath PcpTranslatePathFromRootToNode(const PcpNodeRef &, const SdfPath &, bool *)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/pathTranslation.cpp
Pcp_TranslatePath
SdfPath Pcp_TranslatePath(const Mapping &, const SdfPath &, bool *) [NodeToRoot = true, Mapping = PcpMapExpression]
Null map function
Path to translate <%s> is not absolute.
Path to translate <%s> must not contain a variant selection.
SdfPath Pcp_TranslatePath(const Mapping &, const SdfPath &, bool *) [NodeToRoot = false, Mapping = PcpMapExpression]
PcpInstanceKey
PcpInstanceKey::PcpInstanceKey(const PcpPrimIndex &)
Arcs:
  (none)
  %s%s : %s
 (offset: %f scale: %f)
Variant selections:
  (none)
  %s = %s
TfIterator::Reference TfIterator<SdfListProxy<SdfSubLayerTypePolicy>, false>::operator*() [T = SdfListProxy<SdfSubLayerTypePolicy>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<SdfListProxy<SdfSubLayerTypePolicy>, false>::operator++() [T = SdfListProxy<SdfSubLayerTypePolicy>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::set<std::pair<TfRefPtr<SdfLayer>, std::map<std::string, std::string>>>, false>::operator++() [T = std::set<std::pair<TfRefPtr<SdfLayer>, std::map<std::string, std::string>>>, Reverse = false]
TfIterator::Iterator &TfIterator<std::set<std::pair<TfRefPtr<SdfLayer>, std::map<std::string, std::string>>>, false>::operator->() [T = std::set<std::pair<TfRefPtr<SdfLayer>, std::map<std::string, std::string>>>, Reverse = false]
MENV30_ENABLE_NEW_DEFAULT_STANDIN_BEHAVIOR
If enabled then standin preference is weakest opinion.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/primIndex.cpp
Append
PcpNodeRef PcpPrimIndexOutputs::Append(PcpPrimIndexOutputs &&, const PcpArc &)
Inconsistent payload states for primIndex <%s> -- parent=%d vs child=%d; taking parent=%d
Pcp_RescanForSpecs
Pcp_NeedToRecomputeDueToAssetPathChange
bool Pcp_NeedToRecomputeDueToAssetPathChange(const PcpPrimIndex &)
refs.size() == sourceInfo.size()
PcpComputePrimIndex
void PcpComputePrimIndex(const SdfPath &, const PcpLayerStackPtr &, const PcpPrimIndexInputs &, PcpPrimIndexOutputs *, ArResolver *)
Path <%s> must be an absolute path to a prim, a prim variant-selection, or the pseudo-root.
ComputePrimChildNames
void PcpPrimIndex::ComputePrimChildNames(TfTokenVector *, PcpTokenSet *) const
Task::EvalNodeRelocations
Task::EvalImpliedRelocations
Task::EvalNodeReferences
Task::EvalNodePayload
Task::EvalNodeInherits
Task::EvalImpliedClasses
Task::EvalNodeSpecializes
Task::EvalImpliedSpecializes
Task::EvalNodeVariantSets
Task::EvalNodeVariantAuthored
Task::EvalNodeVariantFallback
Task::EvalNodeVariantNoneFound
Task::None
../ModelKit/extern/usd/pxr/usd/pcp/types.h
Pcp_CompressedSdSite
Pcp_CompressedSdSite::Pcp_CompressedSdSite(size_t, size_t)
nodeIndex_ < (size_t(1) << 16)
layerIndex_ < (size_t(1) << 16)
_ComputedAssetPathWouldCreateDifferentNode
bool _ComputedAssetPathWouldCreateDifferentNode(const PcpNodeRef &, const std::string &)
SdfLayer::SplitIdentifier( nodeRootLayer->GetIdentifier(), &oldAssetPath, &oldArgs)
Pcp_BuildPrimIndex
void Pcp_BuildPrimIndex(const PcpLayerStackSite &, const PcpLayerStackSite &, int, bool, bool, bool, PcpPrimIndex_StackFrame *, const PcpPrimIndexInputs &, PcpPrimIndexOutputs *)
site.path.IsAbsolutePath() && (site.path.IsAbsoluteRootOrPrimPath() || site.path.IsPrimVariantSelectionPath())
PCP_CHANGES
PCP_DEPENDENCIES
PCP_PRIM_INDEX
PCP_PRIM_INDEX_GRAPHS
PCP_NAMESPACE_EDIT
Retrieved index for <%s> from cache
Adjusted ancestral index for %s
TfIterator::Iterator &TfIterator<PcpNodeRef_PrivateChildrenConstRange, false>::operator->() [T = PcpNodeRef_PrivateChildrenConstRange, Reverse = false]
_FindStartingNodeForImpliedClasses
PcpNodeRef _FindStartingNodeForImpliedClasses(const PcpNodeRef &)
PcpIsClassBasedArc(n.GetArcType())
_FindStartingNodeOfClassHierarchy
std::pair<PcpNodeRef, PcpNodeRef> _FindStartingNodeOfClassHierarchy(const PcpNodeRef &)
instanceNode.GetParentNode()
Evaluating relocations under %s
<%s> was relocated from source <%s>
_EvalNodeRelocations
void _EvalNodeRelocations(PcpPrimIndex *, const PcpNodeRef &, Pcp_PrimIndexer *)
Unexpected child node encountered
Elided subtree that will be superceded by relocation source <%s>
Adding new %s arc to %s to %s
origin: %s
arcSiblingNum: %d
namespaceDepth: %d
directNodeShouldContributeSpecs: %s
includeAncestralOpinions: %s
requirePrimAtTarget: %s
skipDuplicateNodes: %s
skipImpliedSpecializesCompletedNodes: %s
<None>
_AddArc
PcpNodeRef _AddArc(const PcpArcType, PcpNodeRef, PcpNodeRef, const PcpLayerStackSite &, PcpMapExpression, int, int, bool, bool, bool, bool, bool, Pcp_PrimIndexer *)
!mapExpr.IsNull()
Added new node for site %s to graph
Need to build index for %s source at %s to pick up ancestral opinions
Added subtree for site %s to graph
TfIterator::Iterator &TfIterator<std::vector<SdfSite>, false>::operator->() [T = std::vector<SdfSite>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<SdfSite>, false>::operator++() [T = std::vector<SdfSite>, Reverse = false]
Evaluating relocations implied by %s
_EvalImpliedRelocations
void _EvalImpliedRelocations(PcpPrimIndex *, const PcpNodeRef &, Pcp_PrimIndexer *)
!gpRelocSource.IsEmpty()
Propagating relocate from %s to %s
Relocate already exists -- skipping
Evaluating references at %s
Found %s to @%s@<%s>
reference
Evaluating payload for %s
Found payload for node %s
Payload was not included, skipping
Payload <%s> was not included, skipping
Evaluating inherits at %s
Found %s to <%s>
Preparing to add %s arc to %s
origin: %s
inheritArcNum: %d
ignoreIfSameAsSite: %s
<none>
Inheriting from path <%s>
No appropriate site for inheriting opinions
A %s arc to <%s> already exists. Skipping.
_DetermineInheritPath
SdfPath _DetermineInheritPath(const SdfPath &, const PcpMapExpression &)
!varPath.IsEmpty()
Evaluating implied classes at %s
Attempting to propagate %s of %s to %s.
Skipping ancestral class
Transfer function:
Implied class:
Found previously added implied inherit node
Evaluating specializes at %s
Evaluating implied specializes at %s
_FindArcsToPropagateToOrigin
void _FindArcsToPropagateToOrigin(PcpPrimIndex *, const PcpNodeRef &, Pcp_PrimIndexer *)
PcpIsSpecializeArc(node.GetArcType())
Propagating arcs under %s to specializes origin %s
Propagating specializes arc %s to root
Evaluating variant sets at %s
Evaluating authored selections for variant set %s at %s
Found fallback {%s=%s}
Found variant selection {%s=%s} at %s
Deferring to variant fallback
No variant selection found for set '%s'
_ComposeVariantSelection
void _ComposeVariantSelection(int, PcpPrimIndex_StackFrame *, PcpNodeRef, const SdfPath &, const std::string &, std::string *, PcpNodeRef *, PcpPrimIndexOutputs *)
!pathInNode.IsEmpty()
!pathInNode.ContainsPrimVariantSelection()
_ComposeVariantSelectionForNode
bool _ComposeVariantSelectionForNode(const PcpNodeRef &, const SdfPath &, const std::string &, std::string *, PcpNodeRef *, PcpPrimIndexOutputs *)
Unexpected variant selection in namespace path <%s>
standin
Evaluating fallback selections for variant set %s s at %s
No variant fallback found for set '%s'
_EnforcePermissions
void _EnforcePermissions(PcpPrimIndex *, PcpErrorVector *)
rootNode
TfIterator::Reference TfIterator<std::vector<PcpNodeRef>, true>::operator*() [T = std::vector<PcpNodeRef>, Reverse = true]
TfIterator<T, Reverse> &TfIterator<std::vector<PcpNodeRef>, true>::operator++() [T = std::vector<PcpNodeRef>, Reverse = true]
TfIterator::Reference TfIterator<PcpNodeRef_PrivateChildrenConstRange, true>::operator*() [T = PcpNodeRef_PrivateChildrenConstRange, Reverse = true]
TfIterator<T, Reverse> &TfIterator<PcpNodeRef_PrivateChildrenConstRange, true>::operator++() [T = PcpNodeRef_PrivateChildrenConstRange, Reverse = true]
TfIterator::Reference TfIterator<std::vector<TfToken>, false>::operator*() [T = std::vector<TfToken>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<TfToken>, false>::operator++() [T = std::vector<TfToken>, Reverse = false]
T *TfRefPtr<PcpPrimIndex_Graph>::operator->() const [U = PcpPrimIndex_Graph]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, PcpPrimIndex_Graph>::operator->() const [PtrTemplate = TfWeakPtr, Type = PcpPrimIndex_Graph]
TfIterator<T, Reverse> &TfIterator<std::pair<PcpNodeIterator, PcpNodeIterator>, false>::operator++() [T = std::pair<PcpNodeIterator, PcpNodeIterator>, Reverse = false]
TfIterator::Iterator &TfIterator<std::pair<PcpNodeIterator, PcpNodeIterator>, false>::operator->() [T = std::pair<PcpNodeIterator, PcpNodeIterator>, Reverse = false]
TfIterator::Reference TfIterator<std::pair<PcpNodeIterator, PcpNodeIterator>, false>::operator*() [T = std::pair<PcpNodeIterator, PcpNodeIterator>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/iterator.cpp
decrement
void PcpPrimIterator::decrement()
Cannot decrement invalid iterator
void PcpPropertyIterator::decrement()
GetNode
PcpNodeRef PcpPrimIndex_Graph::GetNode(const Pcp_CompressedSdSite &)
site.nodeIndex < _GetNumNodes()
DidChange
void PcpChanges::DidChange(const TfSpan<const PcpCache *> &, const SdfLayerChangeListVec &)
  Caches:
    %s
  Layer @%s@ changed:  skipping non-prim changes
  Layer @%s@ changed:  unused
  Changes to layer %s:
  Layer @%s@ changed sublayers
  Layer @%s@ changed:  significant
  Layer @%s@ changed:  layer offsets (significant)
  Renamed @%s@<%s> to <%s>
  Info change on @%s@<%s> may affect file format arguments in cache '%s'
PcpChanges::DidChange -- Checking layer stack relocations against significant prim resyncs
  renameChanges <%s> to <%s>
PcpChanges::DidChange
insignificant
significant
    <%s>
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/changes.cpp
DidChangeSpecs
void PcpChanges::DidChangeSpecs(const PcpCache *, const SdfPath &, const SdfLayerHandle &, const SdfPath &)
changedPath.IsPrimOrPrimVariantSelectionPath()
  Sd only path change @%s@<%s> to <%s>
PcpChanges::_Optimize:
  %s sublayer @%s@ %s
added
removed
  %s following in @%s@ due to %s reload in sublayer @%s@:
Resync
Spec changes
  Relocation change in %s affects:
  and dependent paths in %s
      <%s>
   Resync following in @%s@ significant due to layer resolved path change:
TfIterator::Iterator &TfIterator<const std::vector<std::pair<std::string, SdfChangeList::SubLayerChangeType>>, false>::operator->() [T = const std::vector<std::pair<std::string, SdfChangeList::SubLayerChangeType>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::vector<std::pair<std::string, SdfChangeList::SubLayerChangeType>>, false>::operator++() [T = const std::vector<std::pair<std::string, SdfChangeList::SubLayerChangeType>>, Reverse = false]
  Info change for field '%s' may affect dynamic file format arguments
Pcp_PrimSpecOrDescendantHasRelocates
bool Pcp_PrimSpecOrDescendantHasRelocates(const SdfLayerHandle &, const SdfPath &)
   Resync following in @%s@ %s due to Sdf site @%s@<%s>%s:
recurse on prim descendants
do not recurse on prim descendants
 (restricted to existing caches)
 (not restricted to existing caches)
    <%s> depends on <%s>
   Resync end
Pcp_DoesInfoChangeAffectFileFormatArguments %s:%s?
  Prim index has no dynamic file format dependencies
  Field '%s' change: %s -> %s %s relevant for prim index path '%s'
is NOT
T *TfRefPtr<Pcp_LayerStackRegistry>::operator->() const [U = Pcp_LayerStackRegistry]
TfIterator<T, Reverse> &TfIterator<const std::vector<TfWeakPtr<PcpLayerStack>>, false>::operator++() [T = const std::vector<TfWeakPtr<PcpLayerStack>>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<TfWeakPtr<PcpLayerStack>>, false>::operator*() [T = const std::vector<TfWeakPtr<PcpLayerStack>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::map<TfWeakPtr<PcpLayerStack>, PcpLayerStackChanges>, false>::operator++() [T = const std::map<TfWeakPtr<PcpLayerStack>, PcpLayerStackChanges>, Reverse = false]
TfIterator::Iterator &TfIterator<const std::map<TfWeakPtr<PcpLayerStack>, PcpLayerStackChanges>, false>::operator->() [T = const std::map<TfWeakPtr<PcpLayerStack>, PcpLayerStackChanges>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::map<PcpCache *, PcpCacheChanges>, false>::operator++() [T = const std::map<PcpCache *, PcpCacheChanges>, Reverse = false]
TfIterator::Iterator &TfIterator<const std::map<PcpCache *, PcpCacheChanges>, false>::operator->() [T = const std::map<PcpCache *, PcpCacheChanges>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::map<PcpCache *, std::map<SdfPath, SdfPath>>, false>::operator++() [T = std::map<PcpCache *, std::map<SdfPath, SdfPath>>, Reverse = false]
TfIterator::Iterator &TfIterator<std::map<PcpCache *, std::map<SdfPath, SdfPath>>, false>::operator->() [T = std::map<PcpCache *, std::map<SdfPath, SdfPath>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::map<PcpCache *, PcpCacheChanges>, false>::operator++() [T = std::map<PcpCache *, PcpCacheChanges>, Reverse = false]
TfIterator::Iterator &TfIterator<std::map<PcpCache *, PcpCacheChanges>, false>::operator->() [T = std::map<PcpCache *, PcpCacheChanges>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::set<SdfPath>, false>::operator++() [T = std::set<SdfPath>, Reverse = false]
TfIterator::Reference TfIterator<std::set<SdfPath>, false>::operator*() [T = std::set<SdfPath>, Reverse = false]
auto PcpChanges::_DidChangeLayerStackResolvedPath(const TfSpan<const PcpCache *> &, const PcpLayerStackPtr &, std::string *)::(anonymous class)::operator()(const PcpDependency &) const
primIndex
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/diagnostic.cpp
Computing prim index for %s
PopIndex
void Pcp_IndexingOutputManager::PopIndex(const PcpPrimIndex *)
!info->indexStack.empty()
!info->indexStack.back().phases.empty()
DONE - 
digraph PcpPrimIndex {
0 [label="...",shape=box,style=dotted];
permission denied
inert
culled
\nCANNOT contribute specs
\ndepth: %i
dotted
, filled
%zu [label="%s (%i)\n%s", shape="box", style="%s"];
-- mapToParent:
-- mapToRoot:
color=green, label="inherit%s"
color=red, label="reference%s"
color=purple, label="relocate%s"
color=orange, label="variant"
color=indigo, label="payload%s"
color=sienna, label="specialize%s"
_WriteGraph
int _WriteGraph(std::ostream &, const PcpNodeRef &, bool, bool, const Pcp_NodeSet &, int)
Invalid arc type
style=dashed
%zu -> %zu [%s];
%zu -> %zu [style=dotted label="origin" constraint="false"];
OutputGraph
void Pcp_IndexingOutputManager::_DebugInfo::OutputGraph() const
!indexStack.empty()
pcp.%s.%06d.dot
Unable to open %s to write graph
label = <
labelloc = b
BeginPhase
void Pcp_IndexingOutputManager::_DebugInfo::BeginPhase(std::string &&, const PcpNodeRef &)
UpdateCurrentDotGraph
void Pcp_IndexingOutputManager::_DebugInfo::UpdateCurrentDotGraph()
!indexStack.back().phases.empty()
UpdateCurrentDotGraphLabel
void Pcp_IndexingOutputManager::_DebugInfo::UpdateCurrentDotGraphLabel()
<table cellborder="0" border="0">
<tr><td balign="left" align="left">
</td></tr>
<tr><td bgcolor="black" height="1" cellpadding="0">
</td></tr>
<tr><td balign="left" align="left">
Tasks:<br/>
</td></tr>
</table>
%d. %s
<br/>
TfIterator::Iterator &TfIterator<std::vector<Pcp_IndexingOutputManager::_IndexInfo>, true>::operator->() [T = std::vector<Pcp_IndexingOutputManager::_IndexInfo>, Reverse = true]
TfIterator::Reference TfIterator<std::vector<Pcp_IndexingOutputManager::_Phase>, true>::operator*() [T = std::vector<Pcp_IndexingOutputManager::_Phase>, Reverse = true]
TfIterator::Iterator &TfIterator<std::vector<Pcp_IndexingOutputManager::_Phase>, true>::operator->() [T = std::vector<Pcp_IndexingOutputManager::_Phase>, Reverse = true]
TfIterator<T, Reverse> &TfIterator<std::vector<Pcp_IndexingOutputManager::_Phase>, true>::operator++() [T = std::vector<Pcp_IndexingOutputManager::_Phase>, Reverse = true]
TfIterator<T, Reverse> &TfIterator<std::vector<Pcp_IndexingOutputManager::_IndexInfo>, true>::operator++() [T = std::vector<Pcp_IndexingOutputManager::_IndexInfo>, Reverse = true]
EndPhase
void Pcp_IndexingOutputManager::_DebugInfo::EndPhase()
void Pcp_IndexingOutputManager::_DebugInfo::Update(const PcpNodeRef &, std::string &&)
void Pcp_IndexingOutputManager::_DebugInfo::Msg(std::string &&, const Pcp_NodeSet &)
PCP_ENABLE_PARALLEL_LAYER_PREFETCH
Enables parallel, threaded pre-fetch of sublayers.
Pcp_ComputeRelocationsForLayerStack
void Pcp_ComputeRelocationsForLayerStack(const SdfLayerRefPtrVector &, SdfRelocatesMap *, SdfRelocatesMap *, SdfRelocatesMap *, SdfRelocatesMap *, SdfPathVector *)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/layerStack.cpp
Field '%s' in <%s> in layer @%s@does not contain an SdfRelocatesMap
PcpLayerStack::PcpLayerStack
PcpLayerStack
PcpLayerStack::PcpLayerStack(const PcpLayerStackIdentifier &, const std::string &, const Pcp_MutedLayers &, bool)
_identifier
GetLayerOffsetForLayer
const SdfLayerOffset *PcpLayerStack::GetLayerOffsetForLayer(size_t) const
layerIdx < _mapFunctions.size()
_Compute
void PcpLayerStack::_Compute(const std::string &, const Pcp_MutedLayers &)
_BuildLayerStack
SdfLayerTreeHandle PcpLayerStack::_BuildLayerStack(const SdfLayerHandle &, const SdfLayerOffset &, const ArResolverContext &, const SdfLayer::FileFormatArguments &, const std::string &, const Pcp_MutedLayers &, SdfLayerHandleSet *, PcpErrorVector *)
@<expired>@
@NULL@
T *TfRefPtr<SdfLayerTree>::operator->() const [T = SdfLayerTree]
TfIterator::Reference TfIterator<const std::vector<TfRefPtr<SdfLayerTree>>, false>::operator*() [T = const std::vector<TfRefPtr<SdfLayerTree>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::vector<TfRefPtr<SdfLayerTree>>, false>::operator++() [T = const std::vector<TfRefPtr<SdfLayerTree>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::map<SdfPath, std::map<SdfPath, SdfPath>>, false>::operator++() [T = std::map<SdfPath, std::map<SdfPath, SdfPath>>, Reverse = false]
TfIterator::Iterator &TfIterator<std::map<SdfPath, std::map<SdfPath, SdfPath>>, false>::operator->() [T = std::map<SdfPath, std::map<SdfPath, SdfPath>>, Reverse = false]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, Pcp_LayerStackRegistry>::operator->() const [PtrTemplate = TfWeakPtr, Type = Pcp_LayerStackRegistry]
TfIterator<T, Reverse> &TfIterator<std::vector<TfRefPtr<SdfLayer>>, false>::operator++() [T = std::vector<TfRefPtr<SdfLayer>>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<TfRefPtr<SdfLayer>>, false>::operator*() [T = std::vector<TfRefPtr<SdfLayer>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::map<SdfPath, std::unique_ptr<PcpMapExpression::Variable>, SdfPath::FastLessThan>, false>::operator++() [T = std::map<SdfPath, std::unique_ptr<PcpMapExpression::Variable>, SdfPath::FastLessThan>, Reverse = false]
TfIterator::Iterator &TfIterator<std::map<SdfPath, std::unique_ptr<PcpMapExpression::Variable>, SdfPath::FastLessThan>, false>::operator->() [T = std::map<SdfPath, std::unique_ptr<PcpMapExpression::Variable>, SdfPath::FastLessThan>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<Pcp_SublayerInfo>, false>::operator++() [T = std::vector<Pcp_SublayerInfo>, Reverse = false]
TfIterator::Iterator &TfIterator<std::vector<Pcp_SublayerInfo>, false>::operator->() [T = std::vector<Pcp_SublayerInfo>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/primIndex_Graph.cpp
SetArc
void PcpPrimIndex_Graph::_Node::SetArc(const PcpArc &)
static_cast<size_t>(arc.siblingNumAtOrigin) <= ((1lu << _childrenSize) - 1)
static_cast<size_t>(arc.namespaceDepth) <= ((1lu << _depthSize) - 1)
arc.parent._GetNodeIndex() + 1 <= _invalidNodeIndex
arc.origin._GetNodeIndex() + 1 <= _invalidNodeIndex
PcpPrimIndex_Graph
static PcpPrimIndex_GraphRefPtr PcpPrimIndex_Graph::New(const PcpPrimIndex_GraphPtr &)
GetNodeUsingSite
PcpNodeRef PcpPrimIndex_Graph::GetNodeUsingSite(const PcpLayerStackSite &) const
GetNodeIndexesForRange
std::pair<size_t, size_t> PcpPrimIndex_Graph::GetNodeIndexesForRange(PcpRangeType) const
_data->finalized
Invalid range type specified
Finalize
void PcpPrimIndex_Graph::Finalize()
_data.unique()
_ApplyNodeIndexMapping
void PcpPrimIndex_Graph::_ApplyNodeIndexMapping(const std::vector<size_t> &)
oldNodes.size() == oldSitePaths.size() && oldNodes.size() == oldHasSpecs.size()
nodeIndexMap.size() == oldNodes.size()
newNumNodes <= oldNumNodes
!parentWillBeErased
InsertChildNode
PcpNodeRef PcpPrimIndex_Graph::InsertChildNode(const PcpNodeRef &, const PcpLayerStackSite &, const PcpArc &)
arc.type != PcpArcTypeRoot
arc.parent == parent
InsertChildSubgraph
PcpNodeRef PcpPrimIndex_Graph::InsertChildSubgraph(const PcpNodeRef &, const PcpPrimIndex_GraphPtr &, const PcpArc &)
_InsertChildInStrengthOrder
PcpNodeRef PcpPrimIndex_Graph::_InsertChildInStrengthOrder(size_t, size_t)
parentNodeIdx < _GetNumNodes()
childNodeIdx < _GetNumNodes()
LAST_CHILD(parentNode) == _Node::_invalidNodeIndex
LAST_CHILD(parentNode) != _Node::_invalidNodeIndex
PREV_SIBLING(nextNode) != _Node::_invalidNodeIndex
_DetachSharedNodePool
void PcpPrimIndex_Graph::_DetachSharedNodePool()
_CreateNodesForSubgraph
size_t PcpPrimIndex_Graph::_CreateNodesForSubgraph(const PcpPrimIndex_Graph &, const PcpArc &)
!subgraph.GetRootNode().GetParentNode() && !subgraph.GetRootNode().GetOriginNode()
_GetWriteableNode
PcpPrimIndex_Graph::_Node &PcpPrimIndex_Graph::_GetWriteableNode(size_t)
_ComputeStrengthOrderIndexMapping
bool PcpPrimIndex_Graph::_ComputeStrengthOrderIndexMapping(std::vector<size_t> *) const
_ComputeEraseCulledNodeIndexMapping
bool PcpPrimIndex_Graph::_ComputeEraseCulledNodeIndexMapping(std::vector<size_t> *) const
_ConvertOldToNewIndex
PcpPrimIndex_Graph::_ApplyNodeIndexMapping(const std::vector<size_t> &)::_ConvertOldToNewIndex::_ConvertOldToNewIndex(const std::vector<size_t> &, size_t)
_table[i] < numNewNodes || _table[i] == _Node::_invalidNodeIndex
bool PcpPrimIndex_Graph::_ArcStrengthOrder::operator()(size_t, size_t) const
result != 0
Redundant nodes in prim index for <%s>
size_t PcpPrimIndex_Graph::_CreateNodesForSubgraph(const PcpPrimIndex_Graph &, const PcpArc &)::_ConvertOldToNewIndex::operator()(size_t) const
oldIndex + _base < _numNewNodes
_GetArcTypeForRangeType
PcpArcType _GetArcTypeForRangeType(const PcpRangeType)
Unhandled range type
TfIterator::Iterator &TfIterator<std::vector<SdfPath>, false>::operator->() [T = std::vector<SdfPath>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::map<SdfPath, SdfPath>, false>::operator++() [T = std::map<SdfPath, SdfPath>, Reverse = false]
TfIterator::Iterator &TfIterator<std::map<SdfPath, SdfPath>, false>::operator->() [T = std::map<SdfPath, SdfPath>, Reverse = false]
<expired>
PcpBuildFilteredTargetIndex
void PcpBuildFilteredTargetIndex(const PcpSite &, const PcpPropertyIndex &, const SdfSpecType, const bool, const SdfSpecHandle &, const bool, PcpCache *, PcpTargetIndex *, PcpErrorVector *)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/targetIndex.cpp
relOrAttrType msut be either SdfSpecTypeRelationship or SdfSpecTypeAttribute
(*propertyRange.first)->GetSpecType() == relOrAttrType
<%s> is not %s
an attribute
a relationship
pathValue.IsHolding<SdfPathListOp>()
_TargetInClassAndTargetsInstance
bool _TargetInClassAndTargetsInstance(const SdfPath &, const PcpNodeRef &, Pcp_TargetIndexContext &)
_TargetIsPermitted
(anonymous namespace)::Pcp_PathTranslationError _TargetIsPermitted(const SdfPath &, const SdfPath &, const PcpNodeRef &, Pcp_TargetIndexContext &)
context.GetCache()->GetPrimIndexInputs().cull
Could not find expected node for site %s in prim index for <%s>
TfIterator::Reference TfIterator<PcpNodeRef_PrivateChildrenConstRange, false>::operator*() [T = PcpNodeRef_PrivateChildrenConstRange, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<TfRefPtr<SdfLayer>>, false>::operator*() [T = const std::vector<TfRefPtr<SdfLayer>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::vector<TfRefPtr<SdfLayer>>, false>::operator++() [T = const std::vector<TfRefPtr<SdfLayer>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<PcpNodeRef_PrivateChildrenConstRange, false>::operator++() [T = PcpNodeRef_PrivateChildrenConstRange, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::pair<PcpPropertyIterator, PcpPropertyIterator>, true>::operator++() [T = const std::pair<PcpPropertyIterator, PcpPropertyIterator>, Reverse = true]
TfIterator::Reference TfIterator<const std::pair<PcpPropertyIterator, PcpPropertyIterator>, true>::operator*() [T = const std::pair<PcpPropertyIterator, PcpPropertyIterator>, Reverse = true]
variantSet 
 = {
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/fileIO.cpp
Sdf_WriteToStream
bool Sdf_WriteToStream(const SdfSpec &, std::ostream &, size_t)
Cannot write spec of type %s to stream
permission = %s
permission = %s
symmetryFunction = %s%s
../ModelKit/extern/usd/pxr/usd/sdf/fileIO_Common.h
Sdf_WritePrimMetadata
bool Sdf_WritePrimMetadata(const SdfPrimSpec &, std::ostream &, size_t)
'%s' field holding unexpected type '%s'
variantSets = 
delete variantSets = 
add variantSets = 
prepend variantSets = 
append variantSets = 
reorder variantSets = 
inherits
prefixSubstitutions = 
suffixSubstitutions = 
variants = 
bool SdfMapEditProxy<std::map<SdfPath, SdfPath>, SdfRelocatesMapProxyValuePolicy>::_Validate() const [T = std::map<SdfPath, SdfPath>, _ValuePolicy = SdfRelocatesMapProxyValuePolicy]
TfIterator::Iterator &TfIterator<const SdfMapEditProxy<std::map<SdfPath, SdfPath>, SdfRelocatesMapProxyValuePolicy>, false>::operator->() [T = const SdfMapEditProxy<std::map<SdfPath, SdfPath>, SdfRelocatesMapProxyValuePolicy>, Reverse = false]
Dereference
static const SdfMapEditProxy::value_type &SdfMapEditProxy<std::map<SdfPath, SdfPath>, SdfRelocatesMapProxyValuePolicy>::Traits::Dereference(const SdfMapEditProxy::This *, const SdfMapEditProxy::Type *, SdfMapEditProxy::const_inner_iterator) [T = std::map<SdfPath, SdfPath>, _ValuePolicy = SdfRelocatesMapProxyValuePolicy]
Dereferenced an invalid map proxy iterator
TfIterator<T, Reverse> &TfIterator<const SdfMapEditProxy<std::map<SdfPath, SdfPath>, SdfRelocatesMapProxyValuePolicy>, false>::operator++() [T = const SdfMapEditProxy<std::map<SdfPath, SdfPath>, SdfRelocatesMapProxyValuePolicy>, Reverse = false]
bool SdfMapEditProxy<std::map<std::string, std::string>>::_Validate() const [T = std::map<std::string, std::string>, _ValuePolicy = SdfIdentityMapEditProxyValuePolicy<std::map<std::string, std::string>>]
TfIterator::Iterator &TfIterator<std::map<std::string, std::string>, false>::operator->() [T = std::map<std::string, std::string>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::map<std::string, std::string>, false>::operator++() [T = std::map<std::string, std::string>, Reverse = false]
reorder properties = 
reorder nameChildren = 
TfIterator::Reference TfIterator<std::vector<SdfHandle<SdfPropertySpec>>, false>::operator*() [T = std::vector<SdfHandle<SdfPropertySpec>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<SdfHandle<SdfPropertySpec>>, false>::operator++() [T = std::vector<SdfHandle<SdfPropertySpec>>, Reverse = false]
%s%s%s 
%s%s%s %s
permission = %s%s
displayUnit = %s%s
%s%s %s.timeSamples = {
delete 
add 
prepend 
append 
reorder 
%s%s%s %s.connect = 
None
bool SdfListProxy<SdfPathKeyPolicy>::_Iterator<const SdfListProxy<SdfPathKeyPolicy> *, SdfListProxy<SdfPathKeyPolicy>::_ConstGetHelper>::equal(const SdfListProxy::_Iterator::This &) const [_TypePolicy = SdfPathKeyPolicy, Owner = const SdfListProxy<SdfPathKeyPolicy> *, GetItem = SdfListProxy<SdfPathKeyPolicy>::_ConstGetHelper]
TfIterator::Reference TfIterator<const SdfListProxy<SdfPathKeyPolicy>, false>::operator*() [T = const SdfListProxy<SdfPathKeyPolicy>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const SdfListProxy<SdfPathKeyPolicy>, false>::operator++() [T = const SdfListProxy<SdfPathKeyPolicy>, Reverse = false]
varying 
custom %srel %s
%srel %s
 = None
custom %srel %s
delete %srel %s
add %srel %s
prepend %srel %s
append %srel %s
reorder %srel %s
%srel %s.timeSamples = {
%srel %s.default = 
 = [
TfIterator<T, Reverse> &TfIterator<std::vector<SdfHandle<SdfVariantSpec>>, false>::operator++() [T = std::vector<SdfHandle<SdfVariantSpec>>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<SdfHandle<SdfVariantSpec>>, false>::operator*() [T = std::vector<SdfHandle<SdfVariantSpec>>, Reverse = false]
static SdfVariantSpecHandle SdfVariantSpec::New(const SdfVariantSetSpecHandle &, const std::string &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/variantSpec.cpp
NULL owner variant set
Invalid variant name: %s
 = %s
<%s>
%s: 
relocates = %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/fileIO_Common.cpp
_WriteDictionary
static void Sdf_FileIOUtility::_WriteDictionary(std::ostream &, size_t, bool, Sdf_FileIOUtility::_OrderedDictionary &, bool)
Dictionary has a non-string value under key "%s"; skipping
dictionary %s = 
%s %s = 
offset = %s%s
scale = %s%s
0123456789abcedf
Stringify
static const char *Sdf_FileIOUtility::Stringify(SdfPermission)
unknown value
static const char *Sdf_FileIOUtility::Stringify(SdfSpecifier)
static const char *Sdf_FileIOUtility::Stringify(SdfVariability)
\@@@
TfIterator<T, Reverse> &TfIterator<std::map<double, VtValue>, false>::operator++() [T = std::map<double, VtValue>, Reverse = false]
TfIterator::Iterator &TfIterator<std::map<double, VtValue>, false>::operator->() [T = std::map<double, VtValue>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::map<const std::string *, const VtValue *, Sdf_FileIOUtility::_StringLessThan>, false>::operator++() [T = std::map<const std::string *, const VtValue *, Sdf_FileIOUtility::_StringLessThan>, Reverse = false]
TfIterator::Iterator &TfIterator<std::map<const std::string *, const VtValue *, Sdf_FileIOUtility::_StringLessThan>, false>::operator->() [T = std::map<const std::string *, const VtValue *, Sdf_FileIOUtility::_StringLessThan>, Reverse = false]
delete
prepend
append
reorder
%s%s%s = 
customData = 
TfIterator<T, Reverse> &TfIterator<const std::string, false>::operator++() [T = const std::string, Reverse = false]
TfIterator::Reference TfIterator<const std::string, false>::operator*() [T = const std::string, Reverse = false]
fatal flex scanner internal error--no action found
out of dynamic memory in pathYy_create_buffer()
out of dynamic memory in pathYy_scan_buffer()
out of dynamic memory in pathYy_scan_bytes()
bad buffer in pathYy_scan_bytes()
fatal flex scanner internal error--end of buffer missed
fatal error - scanner input buffer overflow
input in flex scanner failed
out of dynamic memory in yy_get_next_buffer()
out of dynamic memory in pathYyensure_buffer_stack()
target
temp_file_name
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/changeManager.cpp
CloseChangeBlock
void Sdf_ChangeManager::CloseChangeBlock()
changeBlockDepth == 0
changeBlockDepth > 0
_ProcessRemoveIfInert
void Sdf_ChangeManager::_ProcessRemoveIfInert()
data.changeBlockDepth == 1
data.removeIfInert.empty()
Changes to layer %s:
DidChangeField
void Sdf_ChangeManager::DidChangeField(const SdfLayerHandle &, const SdfPath &, const TfToken &, const VtValue &, const VtValue &)
newOffsets.size() == subLayers.size()
path == SdfPath::AbsoluteRootPath()
DidAddSpec
void Sdf_ChangeManager::DidAddSpec(const SdfLayerHandle &, const SdfPath &, bool)
Unsupported Spec Type for <
DidRemoveSpec
void Sdf_ChangeManager::DidRemoveSpec(const SdfLayerHandle &, const SdfPath &, bool)
Sdf_ChangeManager::DidChangeField - Comparing old/new PrimChildren order
TfIterator<T, Reverse> &TfIterator<const TfSmallVector<std::pair<SdfPath, SdfChangeList::Entry>, 1>, false>::operator++() [T = const TfSmallVector<std::pair<SdfPath, SdfChangeList::Entry>, 1>, Reverse = false]
TfIterator::Iterator &TfIterator<const TfSmallVector<std::pair<SdfPath, SdfChangeList::Entry>, 1>, false>::operator->() [T = const TfSmallVector<std::pair<SdfPath, SdfChangeList::Entry>, 1>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const TfSmallVector<std::pair<TfToken, std::pair<VtValue, VtValue>>, 3>, false>::operator++() [T = const TfSmallVector<std::pair<TfToken, std::pair<VtValue, VtValue>>, 3>, Reverse = false]
TfIterator::Iterator &TfIterator<const TfSmallVector<std::pair<TfToken, std::pair<VtValue, VtValue>>, 3>, false>::operator->() [T = const TfSmallVector<std::pair<TfToken, std::pair<VtValue, VtValue>>, 3>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<SdfSpec>, false>::operator++() [T = std::vector<SdfSpec>, Reverse = false]
TfIterator::Iterator &TfIterator<std::vector<SdfSpec>, false>::operator->() [T = std::vector<SdfSpec>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<SdfSpec>, false>::operator*() [T = std::vector<SdfSpec>, Reverse = false]
pxr/usd/sdf/textFileFormat.ll
textFileFormatYylex
int textFileFormatYylex(Sdf_ParserHelpers::Value *, yyscan_t)
Integer literal '%s' on line %d%s%s out of range, parsing as double.  Consider exponential notation for large floating point values.
out of dynamic memory in textFileFormatYy_create_buffer()
out of dynamic memory in textFileFormatYy_scan_buffer()
out of dynamic memory in textFileFormatYy_scan_bytes()
bad buffer in textFileFormatYy_scan_bytes()
out of dynamic memory in textFileFormatYyensure_buffer_stack()
GetFields
TfTokenVector SdfSchemaBase::SpecDefinition::GetFields() const
GetRequiredFields
TfTokenVector SdfSchemaBase::SpecDefinition::GetRequiredFields() const
GetMetadataFields
TfTokenVector SdfSchemaBase::SpecDefinition::GetMetadataFields() const
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/schema.cpp
_AddField
void SdfSchemaBase::SpecDefinition::_AddField(const TfToken &, const SdfSchemaBase::_FieldInfo &)
Duplicate registration for field '%s'
connectionChildren
expressionChildren
mapperArgChildren
mapperChildren
primChildren
properties
targetChildren
variantChildren
variantSetChildren
allowedTokens
assetInfo
colorConfiguration
colorManagementSystem
colorSpace
connectionPaths
custom
customData
customLayerData
defaultPrim
displayGroup
displayName
displayUnit
documentation
endTimeCode
framePrecision
framesPerSecond
hidden
hasOwnedSubLayers
inheritPaths
instanceable
kind
primOrder
noLoadHint
owner
payload
permission
prefix
prefixSubstitutions
propertyOrder
references
relocates
sessionOwner
specializes
specifier
startTimeCode
subLayers
subLayerOffsets
suffix
suffixSubstitutions
symmetricPeer
symmetryArgs
symmetryArguments
symmetryFunction
targetPaths
timeSamples
timeCodesPerSecond
typeName
variantSelection
variability
variantSetNames
endFrame
startFrame
_CreateField
SdfSchemaBase::FieldDefinition &SdfSchemaBase::_CreateField(const TfToken &, const VtValue &, bool)
Duplicate creation for field '%s'
_DoRegisterField
SdfSchemaBase::FieldDefinition &SdfSchemaBase::_DoRegisterField(const TfToken &, const VtValue &)
Field '%s' has not been created.
Registered fallback value for field '%s' does not match field type definition. (expected: %s, got: %s)
_ExtendSpecDefinition
SdfSchemaBase::_SpecDefiner SdfSchemaBase::_ExtendSpecDefinition(SdfSpecType)
No definition for spec type %s
_CheckAndGetSpecDefinition
const SdfSchemaBase::SpecDefinition *SdfSchemaBase::_CheckAndGetSpecDefinition(SdfSpecType) const
Value for key '%s' does not have a valid scene description type (%s)
Value does not have a valid scene description type (
" is not a valid identifier
"%s" is not a valid variant name due to '%c' at index %d
Root paths not allowed in relocates map
Inherit paths must be an absolute prim path
Specializes paths must be absolute prim path
Attribute connection paths cannot contain variant selections
Connection paths must be absolute prim or property paths: <%s>
Relationship target paths cannot contain variant selections
Relationship target paths must be absolute prim, property or mapper paths
Reference prim path <
> must be either empty or an absolute prim path
Payload prim path <
Sublayer paths must not be empty
SdfMetadata
_UpdateMetadataFromPlugins
const std::vector<const SdfSchemaBase::FieldDefinition *> SdfSchemaBase::_UpdateMetadataFromPlugins(const PlugPluginPtrVector &, const std::string &, const SdfSchemaBase::_DefaultValueFactoryFn &)
Value must be a dictionary (at "%s" in plugin "%s")
Could not read a string for "type" (at "%s" in plugin "%s")
"%s" is already a registered field (in plugin "%s")
No default value for metadata (at "%s" in plugin "%s")
Error parsing default value for metadata (at "%s" in plugin "%s")
layers
prims
attributes
relationships
variants
bool
int64
uint64
half
timecode
token
asset
int2
int3
int4
half2
half3
half4
float2
float3
float4
double2
double3
double4
point3h
point3f
point3d
vector3h
vector3f
vector3d
normal3h
normal3f
normal3d
color3h
color3f
color3d
color4h
color4f
color4d
quath
quatf
quatd
matrix2d
matrix3d
matrix4d
frame4d
texCoord2f
texCoord2d
texCoord2h
texCoord3f
texCoord3d
texCoord3h
bool[]
uchar[]
int[]
uint[]
ushort[]
int64[]
uint64[]
half[]
float[]
double[]
timecode[]
string[]
token[]
asset[]
int2[]
int3[]
int4[]
half2[]
half3[]
half4[]
float2[]
float3[]
float4[]
double2[]
double3[]
double4[]
point3h[]
point3f[]
point3d[]
vector3h[]
vector3f[]
vector3d[]
normal3h[]
normal3f[]
normal3d[]
color3h[]
color3f[]
color3d[]
color4h[]
color4f[]
color4d[]
quath[]
quatf[]
quatd[]
matrix2d[]
matrix3d[]
matrix4d[]
frame4d[]
texCoord2f[]
texCoord2d[]
texCoord2h[]
texCoord3f[]
texCoord3d[]
texCoord3h[]
Trace
TraceCollector
VtArray<
unsigned char
unsigned int
GfHalf
std::string
Vec2i
Vec2h
Vec2f
Vec2d
Vec3i
Vec3h
Vec3f
Vec3d
Vec4i
Vec4h
Vec4f
Vec4d
Point
PointFloat
Normal
NormalFloat
Vector
VectorFloat
Color
ColorFloat
Quath
Quatf
Quatd
Matrix2d
Matrix3d
Matrix4d
Frame
Transform
PointIndex
EdgeIndex
FaceIndex
Expected value of type std::string
Expected value of type SdfPath
Expected value of type double
Value must be greater than 0
Expected value of type TfToken
Expected value of type SdfPayload
Expected non-empty string
Expected value of type string
Expected value of type SdfReference
dictionary
_GetDefaultMetadataValue
VtValue _GetDefaultMetadataValue(const SdfSchemaBase &, const std::string &, const JsValue &)
Default values are not allowed on fields of type "dictionary", which will always default to an empty dictionary.
Default values are not allowed on fields of type "%s", which will alwaysdefault to an empty list op.
Could not parse default value: %s
"%s" is not a registered value type
intlistop
int64listop
uintlistop
uint64listop
stringlistop
tokenlistop
Value was not a string, an int, a double, or a vector of those types
"%s" is not a valid type
TfIterator<T, Reverse> &TfIterator<const TfHashMap<TfToken, SdfSchemaBase::_FieldInfo, TfToken::HashFunctor>, false>::operator++() [T = const TfHashMap<TfToken, SdfSchemaBase::_FieldInfo, TfToken::HashFunctor>, Reverse = false]
TfIterator::Iterator &TfIterator<const TfHashMap<TfToken, SdfSchemaBase::_FieldInfo, TfToken::HashFunctor>, false>::operator->() [T = const TfHashMap<TfToken, SdfSchemaBase::_FieldInfo, TfToken::HashFunctor>, Reverse = false]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, SdfSchemaBase>::operator->() const [PtrTemplate = TfWeakPtr, Type = SdfSchemaBase]
virtual TfType TfNotice::_StandardDeliverer<TfNotice::_Deliverer<TfWeakPtr<SdfSchemaBase>, TfAnyWeakPtr, void (SdfSchemaBase::*)(const PlugNotice::DidRegisterPlugins &), PlugNotice::DidRegisterPlugins>>::GetNoticeType() const [Derived = TfNotice::_Deliverer<TfWeakPtr<SdfSchemaBase>, TfAnyWeakPtr, void (SdfSchemaBase::*)(const PlugNotice::DidRegisterPlugins &), PlugNotice::DidRegisterPlugins>]
TfIterator<T, Reverse> &TfIterator<const VtDictionary, false>::operator++() [T = const VtDictionary, Reverse = false]
TfIterator::Iterator &TfIterator<const VtDictionary, false>::operator->() [T = const VtDictionary, Reverse = false]
type
appliesTo
Equals
virtual bool SdfAbstractData::Equals(const SdfAbstractDataRefPtr &) const
WriteToStream
virtual void SdfAbstractData::WriteToStream(std::ostream &) const
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/abstractData.cpp
VisitSpecs
void SdfAbstractData::VisitSpecs(SdfAbstractDataSpecVisitor *) const
visitor
TfIterator::Reference TfIterator<const std::vector<TfToken>, false>::operator*() [T = const std::vector<TfToken>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::vector<TfToken>, false>::operator++() [T = const std::vector<TfToken>, Reverse = false]
T *TfRefPtr<SdfAbstractData>::operator->() const [U = SdfAbstractData]
static SdfAttributeSpecHandle SdfAttributeSpec::New(const SdfPrimSpecHandle &, const std::string &, const SdfValueTypeName &, SdfVariability, bool)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/attributeSpec.cpp
Cannot create an SdfAttributeSpec with a null owner
Cannot create attribute spec on <%s> with invalid name '%s'
Cannot create attribute spec '%s' on the pseudo-root '/'
Cannot create attribute spec '%s' on <%s>
Cannot create attribute spec <%s> with invalid type
resultPtr
SdfNamespaceEditDetail::Error
SdfNamespaceEditDetail::Unbatched
SdfNamespaceEditDetail::Okay
static void TfSingleton<Sdf_SpecTypeInfo>::SetInstanceConstructed(T &) [T = Sdf_SpecTypeInfo]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/specType.cpp
_RegisterSpecType
static void SdfSpecTypeRegistration::_RegisterSpecType(const std::type_info &, SdfSpecType, const std::type_info &)
Schema type %s must be registered with the TfType system.
Spec type %s already registered for schema type %s
_RegisterAbstractSpecType
static void SdfSpecTypeRegistration::_RegisterAbstractSpecType(const std::type_info &, const std::type_info &)
FindOrCreateSpecTypeEntry
SpecTypeToBitmask::iterator Sdf_SpecTypeInfo::FindOrCreateSpecTypeEntry(const std::type_info &)
Spec type %s must be registered with the TfType system.
TfIterator<T, Reverse> &TfIterator<TfHashMap<TfType, unsigned long, TfHash>, false>::operator++() [T = TfHashMap<TfType, unsigned long, TfHash>, Reverse = false]
TfIterator::Iterator &TfIterator<TfHashMap<TfType, unsigned long, TfHash>, false>::operator->() [T = TfHashMap<TfType, unsigned long, TfHash>, Reverse = false]
1.4.32
SDF_TEXTFILE_SIZE_WARNING_MB
Warn when reading a text file larger than this number of MB (no warnings if set to 0)
virtual bool SdfTextFileFormat::CanRead(const std::string &) const
virtual bool SdfTextFileFormat::Read(SdfLayer *, const std::string &, bool) const
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/textFileFormat.cpp
<%s> is not a valid %s layer
Performance warning: reading %lu MB text-based layer <%s>.
virtual bool SdfTextFileFormat::WriteToFile(const SdfLayer &, const std::string &, const std::string &, const SdfFileFormat::FileFormatArguments &) const
bool SdfTextFileFormat::Write(const SdfLayer &, std::ostream &, const std::string &) const
%s %s
doc = 
subLayers = [
hasOwnedSubLayers = true
reorder rootPrims = 
bool SdfListProxy<SdfSubLayerTypePolicy>::_Validate() const [_TypePolicy = SdfSubLayerTypePolicy]
bool SdfListProxy<SdfSubLayerTypePolicy>::_Validate() [_TypePolicy = SdfSubLayerTypePolicy]
%s = 
TfIterator::Reference TfIterator<SdfChildrenView<Sdf_PrimChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfPrimSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfPrimSpec>>>, false>::operator*() [T = SdfChildrenView<Sdf_PrimChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfPrimSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfPrimSpec>>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<SdfChildrenView<Sdf_PrimChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfPrimSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfPrimSpec>>>, false>::operator++() [T = SdfChildrenView<Sdf_PrimChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfPrimSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfPrimSpec>>>, Reverse = false]
static SdfRelationshipSpecHandle SdfRelationshipSpec::New(const SdfPrimSpecHandle &, const std::string &, bool, SdfVariability)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/relationshipSpec.cpp
Cannot create a relationship on %s with invalid name: %s
Cannot create relationship at invalid path <%s.%s>
ReplaceTargetPath
SDF_LAYER_VALIDATE_AUTHORING
If enabled, layers will validate new fields and specs being authored against their schema. If the field or spec is not defined in the schema a coding error will be issued and the authoring operation will fail.
SdfLayer::SdfLayer('%s', '%s')
SdfLayer::~SdfLayer('%s')
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/layer.cpp
CreateAnonymous
static SdfLayerRefPtr SdfLayer::CreateAnonymous(const std::string &, const SdfLayer::FileFormatArguments &)
Cannot determine file format for anonymous SdfLayer
_CreateAnonymousWithFormat
static SdfLayerRefPtr SdfLayer::_CreateAnonymousWithFormat(const SdfFileFormatConstPtr &, const std::string &, const SdfLayer::FileFormatArguments &)
Cannot create anonymous layer: creating package %s layer is not allowed through this API.
SdfLayer::CreateNew('%s', '%s', '%s')
_CreateNew
static SdfLayerRefPtr SdfLayer::_CreateNew(SdfFileFormatConstPtr, const std::string &, const std::string &, const ArAssetInfo &, const SdfLayer::FileFormatArguments &)
Cannot create a new layer with anonymous layer identifier '%s'.
Cannot create new layer '%s': %s
Failed to compute local path for new layer with identifier '%s'
Cannot create new layer '%s': creating %s %s layer is not allowed through this API.
package
packaged
A layer already exists with identifier '%s'
layer
_ComputeInfoToFindOrOpenLayer
static bool SdfLayer::_ComputeInfoToFindOrOpenLayer(const std::string &, const SdfLayer::FileFormatArguments &, SdfLayer::_FindOrOpenLayerInfo *, bool)
FindOrOpen
static SdfLayerRefPtr SdfLayer::FindOrOpen(const std::string &, const SdfLayer::FileFormatArguments &)
SdfLayer::FindOrOpen('%s', '%s')
OpenAsAnonymous
static SdfLayerRefPtr SdfLayer::OpenAsAnonymous(const std::string &, bool, const std::string &)
Cannot determine file format for @%s@
_Read
bool SdfLayer::_Read(const std::string &, const std::string &, bool)
SdfLayer::_Read
Loading layer '%s'
SdfLayer::_Read('%s', '%s', metadataOnly=%s)
SdfLayer::_Read - unable to fetch '%s' to local path '%s'
SdfLayer::_Read - fetched '%s' to local path '%s'
static SdfLayerHandle SdfLayer::Find(const std::string &, const SdfLayer::FileFormatArguments &)
FindRelativeToLayer
static SdfLayerHandle SdfLayer::FindRelativeToLayer(const SdfLayerHandle &, const std::string &, const SdfLayer::FileFormatArguments &)
Anchor layer is invalid
void SdfLayer::SetTimeSample(const SdfPath &, double, const VtValue &)
Cannot set time sample on <%s>.  Layer @%s@ is not editable.
Can't set time sample on <%s> to %s: expected a value of type "%s"
void SdfLayer::SetTimeSample(const SdfPath &, double, const SdfAbstractDataConstValue &)
_PrimSetTimeSample
void SdfLayer::_PrimSetTimeSample(const SdfPath &, double, const T &, bool) [T = VtValue]
_stateDelegate
void SdfLayer::_PrimSetTimeSample(const SdfPath &, double, const T &, bool) [T = SdfAbstractDataConstValue]
_InitializeFromIdentifier
void SdfLayer::_InitializeFromIdentifier(const std::string &, const std::string &, const std::string &, const ArAssetInfo &)
GetSubLayerOffset
SdfLayerOffset SdfLayer::GetSubLayerOffset(int) const
Invalid sublayer index
IsDirty
bool SdfLayer::IsDirty() const
_MarkCurrentStateAsClean
void SdfLayer::_MarkCurrentStateAsClean() const
TransferContent
void SdfLayer::TransferContent(const SdfLayerHandle &)
TransferContent of '%s': Permission denied.
TransferContent of '%s': Cannot copy source layer with schema '%s' to layer with schema '%s'.
bool SdfLayer::HasField(const SdfPath &, const TfToken &, SdfAbstractDataValue *) const
Illegal SpecType SdfNumSpectypes for field:%s on path <%s>. SpecType is not valid for layer @%s@.
SetField
void SdfLayer::SetField(const SdfPath &, const TfToken &, const VtValue &)
Cannot set %s on <%s>. Layer @%s@ is not editable.
Cannot set %s on <%s>. Field is not valid for layer @%s@.
void SdfLayer::SetField(const SdfPath &, const TfToken &, const SdfAbstractDataConstValue &)
SetFieldDictValueByKey
void SdfLayer::SetFieldDictValueByKey(const SdfPath &, const TfToken &, const TfToken &, const VtValue &)
Cannot set %s:%s on <%s>. Layer @%s@ is not editable.
Cannot set %s:%s on <%s>. Field is not valid for layer @%s@.
void SdfLayer::SetFieldDictValueByKey(const SdfPath &, const TfToken &, const TfToken &, const SdfAbstractDataConstValue &)
EraseField
void SdfLayer::EraseField(const SdfPath &, const TfToken &)
Cannot erase %s on <%s>. Layer @%s@ is not editable.
_SetData
void SdfLayer::_SetData(const SdfAbstractDataPtr &)
Setting layer data
!newData->IsEmpty()
_PrimSetField
void SdfLayer::_PrimSetField(const SdfPath &, const TfToken &, const T &, const VtValue *, bool) [T = VtValue]
void SdfLayer::_PrimSetField(const SdfPath &, const TfToken &, const T &, const VtValue *, bool) [T = SdfAbstractDataConstValue]
_PrimPushChild
void SdfLayer::_PrimPushChild(const SdfPath &, const TfToken &, const T &, bool) [T = TfToken]
void SdfLayer::_PrimPushChild(const SdfPath &, const TfToken &, const T &, bool) [T = SdfPath]
_PrimSetFieldDictValueByKey
void SdfLayer::_PrimSetFieldDictValueByKey(const SdfPath &, const TfToken &, const TfToken &, const T &, const VtValue *, bool) [T = VtValue]
void SdfLayer::_PrimSetFieldDictValueByKey(const SdfPath &, const TfToken &, const TfToken &, const T &, const VtValue *, bool) [T = SdfAbstractDataConstValue]
_CreateSpec
bool SdfLayer::_CreateSpec(const SdfPath &, SdfSpecType, bool)
Cannot create spec at <%s>. Layer @%s@ is not editable.
Cannot create spec at <%s>. %s is not a valid spec type for layer @%s@
Cannot create spec <%s> because it already exists in @%s@
_DeleteSpec
bool SdfLayer::_DeleteSpec(const SdfPath &)
Cannot delete <%s>. Layer @%s@ is not editable
_PrimDeleteSpec
void SdfLayer::_PrimDeleteSpec(const SdfPath &, bool, bool)
_PrimCreateSpec
void SdfLayer::_PrimCreateSpec(const SdfPath &, SdfSpecType, bool, bool)
_IsInert
bool SdfLayer::_IsInert(const SdfPath &, bool, bool) const
specDefinition
Writing layer @%s@
_WriteToFile
bool SdfLayer::_WriteToFile(const std::string &, const std::string &, SdfFileFormatConstPtr, const SdfLayer::FileFormatArguments &) const
Cannot save layer @%s@, saving not allowed
Cannot save layer @%s@: writing %s %s layer is not allowed through this API.
Unknown file format when attempting to write '%s'
Cannot create destination directory %s
_Save
bool SdfLayer::_Save(bool) const
Cannot save muted layer @%s@
Cannot save anonymous layer @%s@
Unable to get modification timestamp for '%s (%s)'
_GetExpectedTimeSampleValueType
TfType _GetExpectedTimeSampleValueType(const SdfLayer &, const SdfPath &)
Cannot set time sample at <%s> since spec does not exist
Cannot set time sample at <%s> because spec is not an attribute or relationship
Cannot determine value type for <%s>
_GetVtValue
VtValue _GetVtValue(const SdfAbstractDataConstValue &)
v.GetValue(&value)
SDF_LAYER
SDF_CHANGES
SDF_ASSET
SDF_ASSET_TRACE_INVALID_CONTEXT
SDF_FILE_FORMAT
TfIterator<T, Reverse> &TfIterator<const std::map<std::string, std::string>, false>::operator++() [T = const std::map<std::string, std::string>, Reverse = false]
TfIterator::Iterator &TfIterator<const std::map<std::string, std::string>, false>::operator->() [T = const std::map<std::string, std::string>, Reverse = false]
SdfLayer::_OpenLayerAndUnlockRegistry 
_OpenLayerAndUnlockRegistry
static SdfLayerRefPtr SdfLayer::_OpenLayerAndUnlockRegistry(Lock &, const SdfLayer::_FindOrOpenLayerInfo &, bool) [Lock = tbb::queuing_rw_mutex::scoped_lock]
SdfLayer::_OpenLayerAndUnlockRegistry('%s', '%s', '%s', '%s', metadataOnly=%s)
unknown file format
True
False
_layerRegistry-> FindByIdentifier(layer->GetIdentifier()) == layer
Could not find %s
Opened anonymous layer ('%s' with format id '%s') but resulting layer is not anonymous.
Opened layer without anonymous prefix ('%s' with format id '%s') but resulting layer is anonymous.
T *TfRefPtr<SdfLayerStateDelegateBase>::operator->() const [U = SdfLayerStateDelegateBase]
void SdfListProxy<SdfSubLayerTypePolicy>::_Edit(size_t, size_t, const SdfListProxy::value_vector_type &) [_TypePolicy = SdfSubLayerTypePolicy]
TfIterator<T, Reverse> &TfIterator<std::vector<SdfHandle<SdfPrimSpec>>, false>::operator++() [T = std::vector<SdfHandle<SdfPrimSpec>>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<SdfHandle<SdfPrimSpec>>, false>::operator*() [T = std::vector<SdfHandle<SdfPrimSpec>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>>, false>::operator++() [T = SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>>, Reverse = false]
TfIterator::Iterator &TfIterator<SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>>, false>::operator->() [T = SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::vector<SdfHandle<SdfVariantSpec>>, false>::operator++() [T = const std::vector<SdfHandle<SdfVariantSpec>>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<SdfHandle<SdfVariantSpec>>, false>::operator*() [T = const std::vector<SdfHandle<SdfVariantSpec>>, Reverse = false]
T *TfRefPtr<SdfData>::operator->() const [U = SdfData]
equal
bool SdfListProxy<SdfSubLayerTypePolicy>::_Iterator<SdfListProxy<SdfSubLayerTypePolicy> *, SdfListProxy<SdfSubLayerTypePolicy>::_GetHelper>::equal(const SdfListProxy::_Iterator::This &) const [_TypePolicy = SdfSubLayerTypePolicy, Owner = SdfListProxy<SdfSubLayerTypePolicy> *, GetItem = SdfListProxy<SdfSubLayerTypePolicy>::_GetHelper]
Comparing SdfListProxy iterators from different proxies!
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, SdfAbstractData>::operator->() const [PtrTemplate = TfWeakPtr, Type = SdfAbstractData]
TfIterator<T, Reverse> &TfIterator<std::set<SdfPath>, true>::operator++() [T = std::set<SdfPath>, Reverse = true]
TfIterator::Reference TfIterator<std::set<SdfPath>, true>::operator*() [T = std::set<SdfPath>, Reverse = true]
TfIterator::Reference TfIterator<std::vector<SdfPath>, false>::operator*() [T = std::vector<SdfPath>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<SdfPath>, false>::operator++() [T = std::vector<SdfPath>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/data.cpp
virtual void SdfData::EraseSpec(const SdfPath &)
i != _data.end()
No spec to erase at <%s>
virtual void SdfData::MoveSpec(const SdfPath &, const SdfPath &)
old != _data.end()
No spec to move at <%s>
virtual void SdfData::CreateSpec(const SdfPath &, SdfSpecType)
SdfData::Set
_GetOrCreateFieldValue
VtValue *SdfData::_GetOrCreateFieldValue(const SdfPath &, const TfToken &)
No spec at <%s> when trying to set field '%s'
TfIterator<T, Reverse> &TfIterator<const TfHashMap<SdfPath, SdfData::_SpecData, SdfPath::Hash>, false>::operator++() [T = const TfHashMap<SdfPath, SdfData::_SpecData, SdfPath::Hash>, Reverse = false]
TfIterator::Iterator &TfIterator<const TfHashMap<SdfPath, SdfData::_SpecData, SdfPath::Hash>, false>::operator->() [T = const TfHashMap<SdfPath, SdfData::_SpecData, SdfPath::Hash>, Reverse = false]
Unrecognized type name '%s'
Non-square shaped value
Mismatched [ ] in shaped value
Shaped value with a zero dimension
Tuple nesting too deep! Should not be deeper than %d for attribute of type %s.
Mismatched ( ) for attribute of type %s.
Tuple dimensions error for attribute of type %s.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/parserValueContext.cpp
ReportCodingError
void ReportCodingError(const std::string &)
SdfInheritsProxy
SdfReferencesProxy
SdfPayloadsProxy
virtual bool Sdf_ListOpListEditor<SdfPathKeyPolicy>::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = SdfPathKeyPolicy]
void Sdf_ListOpListEditor<SdfPathKeyPolicy>::_UpdateListOp(const Sdf_ListOpListEditor::ListOpType &, const SdfListOpType *) [TypePolicy = SdfPathKeyPolicy]
virtual void Sdf_ListOpListEditor<SdfPathKeyPolicy>::ApplyList(SdfListOpType, const Sdf_ListEditor<TP> &) [TypePolicy = SdfPathKeyPolicy]
virtual bool Sdf_ListEditor<SdfPathKeyPolicy>::_ValidateEdit(SdfListOpType, const Sdf_ListEditor::value_vector_type &, const Sdf_ListEditor::value_vector_type &) const [TypePolicy = SdfPathKeyPolicy]
virtual bool Sdf_ListOpListEditor<SdfReferenceTypePolicy>::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = SdfReferenceTypePolicy]
void Sdf_ListOpListEditor<SdfReferenceTypePolicy>::_UpdateListOp(const Sdf_ListOpListEditor::ListOpType &, const SdfListOpType *) [TypePolicy = SdfReferenceTypePolicy]
virtual void Sdf_ListOpListEditor<SdfReferenceTypePolicy>::ApplyList(SdfListOpType, const Sdf_ListEditor<TP> &) [TypePolicy = SdfReferenceTypePolicy]
virtual bool Sdf_ListEditor<SdfReferenceTypePolicy>::_ValidateEdit(SdfListOpType, const Sdf_ListEditor::value_vector_type &, const Sdf_ListEditor::value_vector_type &) const [TypePolicy = SdfReferenceTypePolicy]
virtual bool Sdf_ListOpListEditor<SdfPayloadTypePolicy>::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = SdfPayloadTypePolicy]
void Sdf_ListOpListEditor<SdfPayloadTypePolicy>::_UpdateListOp(const Sdf_ListOpListEditor::ListOpType &, const SdfListOpType *) [TypePolicy = SdfPayloadTypePolicy]
virtual void Sdf_ListOpListEditor<SdfPayloadTypePolicy>::ApplyList(SdfListOpType, const Sdf_ListEditor<TP> &) [TypePolicy = SdfPayloadTypePolicy]
virtual bool Sdf_ListEditor<SdfPayloadTypePolicy>::_ValidateEdit(SdfListOpType, const Sdf_ListEditor::value_vector_type &, const Sdf_ListEditor::value_vector_type &) const [TypePolicy = SdfPayloadTypePolicy]
../ModelKit/extern/usd/pxr/usd/sdf/vectorListEditor.h
virtual bool Sdf_VectorListEditor<SdfNameTokenKeyPolicy, TfToken>::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = SdfNameTokenKeyPolicy, FieldStorageType = TfToken]
Cannot copy from list editor of different type
Cannot copy from list editor in different mode
_UpdateFieldData
void Sdf_VectorListEditor<SdfNameTokenKeyPolicy, TfToken>::_UpdateFieldData(const Sdf_VectorListEditor::value_vector_type &) [TypePolicy = SdfNameTokenKeyPolicy, FieldStorageType = TfToken]
virtual void Sdf_VectorListEditor<SdfNameTokenKeyPolicy, TfToken>::ApplyList(SdfListOpType, const Sdf_ListEditor<TP> &) [TypePolicy = SdfNameTokenKeyPolicy, FieldStorageType = TfToken]
virtual bool Sdf_ListEditor<SdfNameTokenKeyPolicy>::_ValidateEdit(SdfListOpType, const Sdf_ListEditor::value_vector_type &, const Sdf_ListEditor::value_vector_type &) const [TypePolicy = SdfNameTokenKeyPolicy]
SdfPath
Sdf_PathNode::GetPathToken
_CreatePathToken
static TfToken Sdf_PathNode::_CreatePathToken(const Sdf_PathNode *, const Sdf_PathNode *)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/pathNode.cpp
_absoluteRootNode_Tf_StaticDataFactoryImpl
void _absoluteRootNode_Tf_StaticDataFactoryImpl(const Sdf_PathNode **)
(*_absoluteRootNode)->GetCurrentRefCount() == 1
_relativeRootNode_Tf_StaticDataFactoryImpl
void _relativeRootNode_Tf_StaticDataFactoryImpl(const Sdf_PathNode **)
(*_relativeRootNode)->GetCurrentRefCount() == 1
TfIterator<T, Reverse> &TfIterator<std::vector<const Sdf_PathNode *>, true>::operator++() [T = std::vector<const Sdf_PathNode *>, Reverse = true]
TfIterator::Reference TfIterator<std::vector<const Sdf_PathNode *>, true>::operator*() [T = std::vector<const Sdf_PathNode *>, Reverse = true]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/connectionListEditor.cpp
_OnEditShared
void Sdf_ConnectionListEditor<Sdf_AttributeConnectionChildPolicy>::_OnEditShared(SdfListOpType, SdfSpecType, const std::vector<SdfPath> &, const std::vector<SdfPath> &) const [ConnectionChildPolicy = Sdf_AttributeConnectionChildPolicy]
Failed to remove spec at <%s>
Failed to create spec at <%s>
void Sdf_ConnectionListEditor<Sdf_RelationshipTargetChildPolicy>::_OnEditShared(SdfListOpType, SdfSpecType, const std::vector<SdfPath> &, const std::vector<SdfPath> &) const [ConnectionChildPolicy = Sdf_RelationshipTargetChildPolicy]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/listOp.cpp
GetItems
const typename SdfListOp<T>::ItemVector &SdfListOp<int>::GetItems(SdfListOpType) const [T = int]
Got out-of-range type value: %d
ApplyOperations
void SdfListOp<int>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = int]
ReplaceOperations
Invalid start index %zd (size is %zd)
Invalid end index %zd (size is %zd)
const typename SdfListOp<T>::ItemVector &SdfListOp<unsigned int>::GetItems(SdfListOpType) const [T = unsigned int]
void SdfListOp<unsigned int>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = unsigned int]
const typename SdfListOp<T>::ItemVector &SdfListOp<long long>::GetItems(SdfListOpType) const [T = long long]
void SdfListOp<long long>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = long long]
const typename SdfListOp<T>::ItemVector &SdfListOp<unsigned long long>::GetItems(SdfListOpType) const [T = unsigned long long]
void SdfListOp<unsigned long long>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = unsigned long long]
const typename SdfListOp<T>::ItemVector &SdfListOp<std::string>::GetItems(SdfListOpType) const [T = std::string]
void SdfListOp<std::string>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = std::string]
bool SdfListOp<std::string>::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = std::string]
const typename SdfListOp<T>::ItemVector &SdfListOp<TfToken>::GetItems(SdfListOpType) const [T = TfToken]
void SdfListOp<TfToken>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = TfToken]
bool SdfListOp<TfToken>::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = TfToken]
const typename SdfListOp<T>::ItemVector &SdfListOp<SdfPath>::GetItems(SdfListOpType) const [T = SdfPath]
void SdfListOp<SdfPath>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = SdfPath]
bool SdfListOp<SdfPath>::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = SdfPath]
const typename SdfListOp<T>::ItemVector &SdfListOp<SdfReference>::GetItems(SdfListOpType) const [T = SdfReference]
void SdfListOp<SdfReference>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = SdfReference]
bool SdfListOp<SdfReference>::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = SdfReference]
const typename SdfListOp<T>::ItemVector &SdfListOp<SdfPayload>::GetItems(SdfListOpType) const [T = SdfPayload]
void SdfListOp<SdfPayload>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = SdfPayload]
bool SdfListOp<SdfPayload>::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = SdfPayload]
SdfTokenListOp
SdfPathListOp
SdfStringListOp
SdfReferenceListOp
SdfPayloadListOp
SdfIntListOp
SdfUIntListOp
SdfInt64ListOp
SdfUInt64ListOp
SdfUnregisteredValueListOp
SdfListOpTypeExplicit
SdfListOpTypeAdded
SdfListOpTypePrepended
SdfListOpTypeAppended
SdfListOpTypeDeleted
SdfListOpTypeOrdered
TfIterator<T, Reverse> &TfIterator<const std::vector<int>, false>::operator++() [T = const std::vector<int>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<int>, false>::operator*() [T = const std::vector<int>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<int>, false>::operator++() [T = std::vector<int>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<int>, false>::operator*() [T = std::vector<int>, Reverse = false]
_StreamOut
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = int]
!listOpAliases.empty()
Explicit
Deleted
Added
Prepended
Appended
Ordered
 Items: [
TfIterator<T, Reverse> &TfIterator<const std::vector<unsigned int>, false>::operator++() [T = const std::vector<unsigned int>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<unsigned int>, false>::operator*() [T = const std::vector<unsigned int>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<unsigned int>, false>::operator++() [T = std::vector<unsigned int>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<unsigned int>, false>::operator*() [T = std::vector<unsigned int>, Reverse = false]
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = unsigned int]
TfIterator<T, Reverse> &TfIterator<const std::vector<long long>, false>::operator++() [T = const std::vector<long long>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<long long>, false>::operator*() [T = const std::vector<long long>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<long long>, false>::operator++() [T = std::vector<long long>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<long long>, false>::operator*() [T = std::vector<long long>, Reverse = false]
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = long long]
TfIterator<T, Reverse> &TfIterator<const std::vector<unsigned long long>, false>::operator++() [T = const std::vector<unsigned long long>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<unsigned long long>, false>::operator*() [T = const std::vector<unsigned long long>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<unsigned long long>, false>::operator++() [T = std::vector<unsigned long long>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<unsigned long long>, false>::operator*() [T = std::vector<unsigned long long>, Reverse = false]
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = unsigned long long]
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = std::string]
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = TfToken]
TfIterator<T, Reverse> &TfIterator<const std::vector<SdfUnregisteredValue>, false>::operator++() [T = const std::vector<SdfUnregisteredValue>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<SdfUnregisteredValue>, false>::operator*() [T = const std::vector<SdfUnregisteredValue>, Reverse = false]
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = SdfUnregisteredValue]
TfIterator::Reference TfIterator<const std::vector<SdfPath>, false>::operator*() [T = const std::vector<SdfPath>, Reverse = false]
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = SdfPath]
TfIterator<T, Reverse> &TfIterator<const std::vector<SdfReference>, false>::operator++() [T = const std::vector<SdfReference>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<SdfReference>, false>::operator*() [T = const std::vector<SdfReference>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<SdfReference>, false>::operator++() [T = std::vector<SdfReference>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<SdfReference>, false>::operator*() [T = std::vector<SdfReference>, Reverse = false]
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = SdfReference]
TfIterator<T, Reverse> &TfIterator<const std::vector<SdfPayload>, false>::operator++() [T = const std::vector<SdfPayload>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<SdfPayload>, false>::operator*() [T = const std::vector<SdfPayload>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<SdfPayload>, false>::operator++() [T = std::vector<SdfPayload>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<SdfPayload>, false>::operator*() [T = std::vector<SdfPayload>, Reverse = false]
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = SdfPayload]
SdfReference(
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/layerUtils.cpp
SdfComputeAssetPathRelativeToLayer
std::string SdfComputeAssetPathRelativeToLayer(const SdfLayerHandle &, const std::string &)
Invalid anchor layer
Layer path is empty
SdfFindOrOpenRelativeToLayer
SdfLayerRefPtr SdfFindOrOpenRelativeToLayer(const SdfLayerHandle &, std::string *, const SdfLayer::FileFormatArguments &)
Invalid layer path pointer
'%s' is not a valid prim name
Duplicate prim '%s'
Payload asset path must not be empty. If this is intended to be an internal payload, remove the '@' delimiters.
Reference asset path must not be empty. If this is intended to be an internal reference, remove the '@' delimiters.
%s%s in <%s> on line %i
 at '%s'
 in file 
pxr/usd/sdf/textFileFormat.yy
textFileFormatYyerror
void textFileFormatYyerror(Sdf_TextParserContext *, const char *)
Sdf_MemoryFlexBuffer
Sdf_MemoryFlexBuffer::Sdf_MemoryFlexBuffer(const std::shared_ptr<ArAsset> &, const std::string &, yyscan_t)
Failed to read asset contents @%s@: an error occurred while reading
Menva
Menva_Parse
Sdf_ParseMenva
bool Sdf_ParseMenva(const std::string &, const std::shared_ptr<ArAsset> &, const std::string &, const std::string &, bool, SdfDataRefPtr)
textFileFormatYyParse
Bad boost:get<T>() in menva parser.
Internal menva parser error.
Sdf_ParseMenvaFromString
bool Sdf_ParseMenvaFromString(const std::string &, const std::string &, const std::string &, SdfDataRefPtr)
_MatchMagicIdentifier
void _MatchMagicIdentifier(const Sdf_ParserHelpers::Value &, Sdf_TextParserContext *)
File '%s' is not the latest %s version (found '%s', expected '%s'). The file may parse correctly and yield incorrect results.
Magic Cookie '%s'. Expected prefix of '%s'
invalid value for field "%s"
"%s" is registered as a non-metadata field
_SetItemsIfListOp
bool _SetItemsIfListOp(const TfType &, Sdf_TextParserContext *) [ListOpType = SdfListOp<int>]
context->currentValue.IsHolding<ArrayType>() || context->currentValue.IsEmpty()
Duplicate items exist for field '%s' at '%s'
bool _SetItemsIfListOp(const TfType &, Sdf_TextParserContext *) [ListOpType = SdfListOp<long long>]
bool _SetItemsIfListOp(const TfType &, Sdf_TextParserContext *) [ListOpType = SdfListOp<unsigned int>]
bool _SetItemsIfListOp(const TfType &, Sdf_TextParserContext *) [ListOpType = SdfListOp<unsigned long long>]
bool _SetItemsIfListOp(const TfType &, Sdf_TextParserContext *) [ListOpType = SdfListOp<std::string>]
bool _SetItemsIfListOp(const TfType &, Sdf_TextParserContext *) [ListOpType = SdfListOp<TfToken>]
auto _GenericMetadataEnd(SdfSpecType, Sdf_TextParserContext *)::(anonymous class)::operator()() const
v.IsHolding<SdfUnregisteredValue>()
public
'%s' is not a valid permission constant
Setting payload to None (or an empty list) is only allowed when setting explicit payloads, not for list editing
Setting inherit paths to None (or empty list) is only allowed when setting explicit inherit paths, not for list editing
Setting specializes paths to None (or empty list) is only allowed when setting explicit specializes paths, not for list editing
Setting references to None (or an empty list) is only allowed when setting explicit references, not for list editing
variant name must be a string
'%s' is not a valid prim path
'%s' is not a valid attribute name
attribute '%s' already has type '%s', cannot change to '%s'
attribute '%s' already has variability '%s', cannot change to '%s'
Setting connection paths to None (or an empty list) is only allowed when setting explicit connection paths, not for list editing
_AttributeAppendConnectionPath
void _AttributeAppendConnectionPath(Sdf_TextParserContext *)
Connection path <%s> (in file @%s@, line %i) has a variant selection, but variant selections are not meaningful in connection paths.  Stripping the variant selection and using <%s> instead.  Resaving the file will fix this issue.
'%s' is not a valid display unit
Unrecognized value typename '%s' for dictionary
Type name has [] for non-shaped value!
Error parsing simple value: %s
Type name missing [] for shaped value.
Error parsing shaped value: %s
Type name has [] for non-shaped value.
Error parsing tuple value: %s
'%s' is not a valid relationship name
Setting relationship targets to None (or empty list) is only allowed when setting explicit targets, not for list editing
'%s' is not a valid prim or property scene path
Sdf_IdentityRegistry::Identify
TfIterator<T, Reverse> &TfIterator<TfHashMap<SdfPath, Sdf_Identity *, SdfPath::Hash>, false>::operator++() [T = TfHashMap<SdfPath, Sdf_Identity *, SdfPath::Hash>, Reverse = false]
TfIterator::Reference TfIterator<TfHashMap<SdfPath, Sdf_Identity *, SdfPath::Hash>, false>::operator*() [T = TfHashMap<SdfPath, Sdf_Identity *, SdfPath::Hash>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/mapEditor.cpp
Sdf_LsdMapEditor
%s does not hold value of expected type.
field '%s' in <%s>
Sdf_LsdMapEditor::_UpdateDataInSpec
_UpdateDataInSpec
_owner
Sdf_LsdMapEditor<std::map<std::string, std::string>>::Sdf_LsdMapEditor(const SdfSpecHandle &, const TfToken &) [T = std::map<std::string, std::string>]
void Sdf_LsdMapEditor<std::map<std::string, std::string>>::_UpdateDataInSpec() [T = std::map<std::string, std::string>]
Sdf_LsdMapEditor<std::map<SdfPath, SdfPath>>::Sdf_LsdMapEditor(const SdfSpecHandle &, const TfToken &) [T = std::map<SdfPath, SdfPath>]
void Sdf_LsdMapEditor<std::map<SdfPath, SdfPath>>::_UpdateDataInSpec() [T = std::map<SdfPath, SdfPath>]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/spec.cpp
SetInfo
void SdfSpec::SetInfo(const TfToken &, const VtValue &)
Cannot set field '%s' of type '%s' to provided value '%s' because the value is an incompatible type '%s', on spec <%s>
GetInfo
VtValue SdfSpec::GetInfo(const TfToken &) const
Invalid info key: %s
_CanEditInfoOnSpec
bool _CanEditInfoOnSpec(const TfToken &, SdfSpecType, const SdfSchemaBase &, const SdfSchema::FieldDefinition *, const char *)
Cannot %s value for unknown field '%s'
Cannot %s value for read-only field '%s'
Field '%s' is not valid for spec type %s
Accessing an invalid map proxy
SdfLayerOffset(
SdfPayload(
expected property name after '.'
expected a path within [ ]
expected a property for relationship target
syntax error
memory exhausted
pxr/usd/sdf/path.yy
pathYyerror
void pathYyerror(Sdf_PathParserContext *, const char *)
context
FindById
SdfFileFormatConstPtr Sdf_FileFormatRegistry::FindById(const TfToken &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/fileFormatRegistry.cpp
Cannot find file format for empty id
FindByExtension
SdfFileFormatConstPtr Sdf_FileFormatRegistry::FindByExtension(const std::string &, const std::string &)
Cannot find file format for empty string
Unable to determine extension for '%s'
_RegisterFormatPlugins
void Sdf_FileFormatRegistry::_RegisterFormatPlugins()
Sdf_FileFormatRegistry::_RegisterFormatPlugins
Registering file format plugins
!formatBaseType.IsUnknown()
_RegisterFormatPlugins: Type '%s'
_RegisterFormatPlugins:   plugin '%s'
_RegisterFormatPlugins: No format identifier for type '%s', skipping.
Unexpected value type for key '%s' in plugin meta data for file format type '%s'
File format '%s' plugin meta data '%s' is empty
_RegisterFormatPlugins:   formatId '%s'
_RegisterFormatPlugins: No extensions registered for type '%s', skipping.
_RegisterFormatPlugins:     Found target for type '%s' from type '%s'
_RegisterFormatPlugins: No target for type '%s', skipping.
_RegisterFormatPlugins:   target '%s'
Duplicate registration for file format '%s'
_RegisterFormatPlugins:   extension '%s'
Multiple file formats with target '%s' registered for extension '%s', skipping.
!infos.empty()
Multiple primary file formats specified for extension '%s', skipping.
No primary file format specified for extension '%s', skipping.
_formatInfo.empty()
_extensionIndex.empty()
_fullExtensionIndex.empty()
SdfFileFormatConstPtr Sdf_FileFormatRegistry::_GetFileFormat(const Sdf_FileFormatRegistry::_InfoSharedPtr &)
TfIterator<T, Reverse> &TfIterator<const std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, false>::operator++() [T = const std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, false>::operator*() [T = const std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, Reverse = false]
formatId
primary
TfIterator<T, Reverse> &TfIterator<std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, false>::operator++() [T = std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, false>::operator*() [T = std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<TfHashMap<std::string, std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, TfHash>, false>::operator++() [T = TfHashMap<std::string, std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, TfHash>, Reverse = false]
TfIterator::Iterator &TfIterator<TfHashMap<std::string, std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, TfHash>, false>::operator->() [T = TfHashMap<std::string, std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, TfHash>, Reverse = false]
__AnyType__
mapper
expression
Internal
Direct Manip
Pipeline
Symmetry
User Interface
static SdfVariantSetSpecHandle SdfVariantSetSpec::New(const SdfPrimSpecHandle &, const std::string &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/variantSetSpec.cpp
NULL owner prim
Cannot create variant set spec with invalid identifier: '%s'
Cannot create variant set spec at invalid path <%s{%s=}>
Schema
Failed to parse value (at sub-part %zd if there are multiple parts)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/parserHelpers.cpp
MakeScalarValueImpl
typename boost::enable_if<boost::is_integral<Int>>::type Sdf_ParserHelpers::MakeScalarValueImpl(Int *, const vector<Sdf_ParserHelpers::Value> &, size_t &) [Int = bool]
Not enough values to parse value of type %s
Failed to parse at element %zd (at sub-part %zd if there are multiple parts)
TfIterator::Reference TfIterator<VtArray<bool>, false>::operator*() [T = VtArray<bool>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<bool>, false>::operator++() [T = VtArray<bool>, Reverse = false]
typename boost::enable_if<boost::is_integral<Int>>::type Sdf_ParserHelpers::MakeScalarValueImpl(Int *, const vector<Sdf_ParserHelpers::Value> &, size_t &) [Int = unsigned char]
TfIterator::Reference TfIterator<VtArray<unsigned char>, false>::operator*() [T = VtArray<unsigned char>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<unsigned char>, false>::operator++() [T = VtArray<unsigned char>, Reverse = false]
typename boost::enable_if<boost::is_integral<Int>>::type Sdf_ParserHelpers::MakeScalarValueImpl(Int *, const vector<Sdf_ParserHelpers::Value> &, size_t &) [Int = int]
typename boost::enable_if<boost::is_integral<Int>>::type Sdf_ParserHelpers::MakeScalarValueImpl(Int *, const vector<Sdf_ParserHelpers::Value> &, size_t &) [Int = unsigned int]
TfIterator::Reference TfIterator<VtArray<unsigned int>, false>::operator*() [T = VtArray<unsigned int>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<unsigned int>, false>::operator++() [T = VtArray<unsigned int>, Reverse = false]
typename boost::enable_if<boost::is_integral<Int>>::type Sdf_ParserHelpers::MakeScalarValueImpl(Int *, const vector<Sdf_ParserHelpers::Value> &, size_t &) [Int = long long]
TfIterator::Reference TfIterator<VtArray<long long>, false>::operator*() [T = VtArray<long long>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<long long>, false>::operator++() [T = VtArray<long long>, Reverse = false]
typename boost::enable_if<boost::is_integral<Int>>::type Sdf_ParserHelpers::MakeScalarValueImpl(Int *, const vector<Sdf_ParserHelpers::Value> &, size_t &) [Int = unsigned long long]
TfIterator::Reference TfIterator<VtArray<unsigned long long>, false>::operator*() [T = VtArray<unsigned long long>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<unsigned long long>, false>::operator++() [T = VtArray<unsigned long long>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfHalf *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<pxr_half::half>, false>::operator*() [T = VtArray<pxr_half::half>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<pxr_half::half>, false>::operator++() [T = VtArray<pxr_half::half>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(float *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<float>, false>::operator*() [T = VtArray<float>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<float>, false>::operator++() [T = VtArray<float>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(double *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<double>, false>::operator*() [T = VtArray<double>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<double>, false>::operator++() [T = VtArray<double>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(SdfTimeCode *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<SdfTimeCode>, false>::operator*() [T = VtArray<SdfTimeCode>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<SdfTimeCode>, false>::operator++() [T = VtArray<SdfTimeCode>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(std::string *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<std::string>, false>::operator*() [T = VtArray<std::string>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<std::string>, false>::operator++() [T = VtArray<std::string>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(TfToken *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<TfToken>, false>::operator*() [T = VtArray<TfToken>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<TfToken>, false>::operator++() [T = VtArray<TfToken>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(SdfAssetPath *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<SdfAssetPath>, false>::operator*() [T = VtArray<SdfAssetPath>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<SdfAssetPath>, false>::operator++() [T = VtArray<SdfAssetPath>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec2i *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec2i>, false>::operator*() [T = VtArray<GfVec2i>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec2i>, false>::operator++() [T = VtArray<GfVec2i>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec2h *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec2h>, false>::operator*() [T = VtArray<GfVec2h>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec2h>, false>::operator++() [T = VtArray<GfVec2h>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec2f *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec2f>, false>::operator*() [T = VtArray<GfVec2f>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec2f>, false>::operator++() [T = VtArray<GfVec2f>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec2d *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec2d>, false>::operator*() [T = VtArray<GfVec2d>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec2d>, false>::operator++() [T = VtArray<GfVec2d>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec3i *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec3i>, false>::operator*() [T = VtArray<GfVec3i>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec3i>, false>::operator++() [T = VtArray<GfVec3i>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec3h *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec3h>, false>::operator*() [T = VtArray<GfVec3h>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec3h>, false>::operator++() [T = VtArray<GfVec3h>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec3f *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec3f>, false>::operator*() [T = VtArray<GfVec3f>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec3f>, false>::operator++() [T = VtArray<GfVec3f>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec3d *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec3d>, false>::operator*() [T = VtArray<GfVec3d>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec3d>, false>::operator++() [T = VtArray<GfVec3d>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec4i *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec4i>, false>::operator*() [T = VtArray<GfVec4i>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec4i>, false>::operator++() [T = VtArray<GfVec4i>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec4h *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec4h>, false>::operator*() [T = VtArray<GfVec4h>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec4h>, false>::operator++() [T = VtArray<GfVec4h>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec4f *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec4f>, false>::operator*() [T = VtArray<GfVec4f>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec4f>, false>::operator++() [T = VtArray<GfVec4f>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec4d *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec4d>, false>::operator*() [T = VtArray<GfVec4d>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec4d>, false>::operator++() [T = VtArray<GfVec4d>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfQuath *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfQuath>, false>::operator*() [T = VtArray<GfQuath>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfQuath>, false>::operator++() [T = VtArray<GfQuath>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfQuatf *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfQuatf>, false>::operator*() [T = VtArray<GfQuatf>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfQuatf>, false>::operator++() [T = VtArray<GfQuatf>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfQuatd *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfQuatd>, false>::operator*() [T = VtArray<GfQuatd>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfQuatd>, false>::operator++() [T = VtArray<GfQuatd>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfMatrix2d *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfMatrix2d>, false>::operator*() [T = VtArray<GfMatrix2d>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfMatrix2d>, false>::operator++() [T = VtArray<GfMatrix2d>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfMatrix3d *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfMatrix3d>, false>::operator*() [T = VtArray<GfMatrix3d>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfMatrix3d>, false>::operator++() [T = VtArray<GfMatrix3d>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfMatrix4d *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfMatrix4d>, false>::operator*() [T = VtArray<GfMatrix4d>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfMatrix4d>, false>::operator++() [T = VtArray<GfMatrix4d>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/layerRegistry.cpp
Sdf_LayerRegistry::layer_repository_path::result_type Sdf_LayerRegistry::layer_repository_path::operator()(const SdfLayerHandle &) const
Sdf_SplitIdentifier( layer->GetIdentifier(), &layerPath, &arguments)
Sdf_LayerRegistry::layer_real_path::result_type Sdf_LayerRegistry::layer_real_path::operator()(const SdfLayerHandle &) const
InsertOrUpdate
void Sdf_LayerRegistry::InsertOrUpdate(const SdfLayerHandle &)
Expired layer handle
Sdf_LayerRegistry::InsertOrUpdate(%s)
Cannot insert duplicate registry entry for %s layer %s over existing entry for %s layer %s
Sdf_LayerRegistry::Erase(%s) => %s
Success
Failed
SdfLayerHandle Sdf_LayerRegistry::Find(const std::string &, const std::string &) const
Sdf_LayerRegistry::Find('%s') => %s
FindByIdentifier
SdfLayerHandle Sdf_LayerRegistry::FindByIdentifier(const std::string &) const
Sdf_LayerRegistry::FindByIdentifier('%s') => %s
Found
Not Found
FindByRepositoryPath
SdfLayerHandle Sdf_LayerRegistry::FindByRepositoryPath(const std::string &) const
Sdf_LayerRegistry::FindByRepositoryPath('%s') => %s
FindByRealPath
SdfLayerHandle Sdf_LayerRegistry::FindByRealPath(const std::string &, const std::string &) const
Sdf_LayerRegistry::FindByRealPath('%s') => %s
SdfLayer('
', '
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/subLayerListEditor.cpp
_OnEdit
virtual void Sdf_SubLayerListEditor::_OnEdit(SdfListOpType, const std::vector<std::string> &, const std::vector<std::string> &) const
oldValues.size() == oldLayerOffsets.size()
Sublayer offsets do not match sublayer paths
virtual bool Sdf_VectorListEditor<SdfSubLayerTypePolicy, std::string>::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = SdfSubLayerTypePolicy, FieldStorageType = std::string]
void Sdf_VectorListEditor<SdfSubLayerTypePolicy, std::string>::_UpdateFieldData(const Sdf_VectorListEditor::value_vector_type &) [TypePolicy = SdfSubLayerTypePolicy, FieldStorageType = std::string]
virtual void Sdf_VectorListEditor<SdfSubLayerTypePolicy, std::string>::ApplyList(SdfListOpType, const Sdf_ListEditor<TP> &) [TypePolicy = SdfSubLayerTypePolicy, FieldStorageType = std::string]
virtual bool Sdf_ListEditor<SdfSubLayerTypePolicy>::_ValidateEdit(SdfListOpType, const Sdf_ListEditor::value_vector_type &, const Sdf_ListEditor::value_vector_type &) const [TypePolicy = SdfSubLayerTypePolicy]
cannot create a new layer with an empty identifier.
cannot create a new layer with arguments in the identifier
Sdf_ResolvePath
std::string Sdf_ResolvePath(const std::string &, ArAssetInfo *)
Sdf_ComputeFilePath
std::string Sdf_ComputeFilePath(const std::string &, ArAssetInfo *)
Sdf_ComputeAssetInfoFromIdentifier('%s', '%s', '%s')
Sdf_ComputeAssetInfoFromIdentifier:
  assetInfo->identifier = '%s'
  assetInfo->realPath = '%s'
  assetInfo->repoPath = '%s'
  assetInfo->assetName = '%s'
  assetInfo->version = '%s'
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/assetPathResolver.cpp
Sdf_ComputeAnonLayerIdentifier
std::string Sdf_ComputeAnonLayerIdentifier(const std::string &, const SdfLayer *)
Anon layer contains invalid character sequence: %s
Sdf_DecodeArguments
bool Sdf_DecodeArguments(const std::string &, SdfLayer::FileFormatArguments *)
argStringLength > _Tokens->ArgsDelimiter.size()
Invalid file format arguments: %s
anon:
:SDF_FORMAT_ARGS:
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/children.cpp
GetChild
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_AttributeChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_AttributeChildPolicy]
IsValid()
size_t Sdf_Children<Sdf_AttributeChildPolicy>::Find(const Sdf_Children::KeyType &) const [ChildPolicy = Sdf_AttributeChildPolicy]
FindKey
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_PrimChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_PrimChildPolicy]
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_PropertyChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_PropertyChildPolicy]
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_RelationshipChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_RelationshipChildPolicy]
size_t Sdf_Children<Sdf_RelationshipChildPolicy>::Find(const Sdf_Children::KeyType &) const [ChildPolicy = Sdf_RelationshipChildPolicy]
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_VariantChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_VariantChildPolicy]
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_VariantSetChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_VariantSetChildPolicy]
typename Sdf_Children<ChildPolicy>::KeyType Sdf_Children<Sdf_VariantSetChildPolicy>::FindKey(const Sdf_Children::ValueType &) const [ChildPolicy = Sdf_VariantSetChildPolicy]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/propertySpec.cpp
Unrecognized subclass of SdfPropertySpec on <%s>
GetTypeName
SdfValueTypeName SdfPropertySpec::GetTypeName() const
TextureCoordinate
VtValue
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/types.cpp
SdfDefaultUnit
const TfEnum &SdfDefaultUnit(const TfEnum &)
Unsupported unit '%s'.
SdfGetNameForUnit
const std::string &SdfGetNameForUnit(const TfEnum &)
SdfGetUnitFromName
const TfEnum &SdfGetUnitFromName(const std::string &)
Unknown unit name '%s'.
SdfTimeSampleMap
SdfRelocatesMap
map<SdfPath, SdfPath>
SdfSpecTypeUnknown
SdfSpecTypeAttribute
SdfSpecTypeConnection
SdfSpecTypeExpression
SdfSpecTypeMapper
SdfSpecTypeMapperArg
SdfSpecTypePrim
SdfSpecTypePseudoRoot
SdfSpecTypeRelationship
SdfSpecTypeRelationshipTarget
SdfSpecTypeVariant
SdfSpecTypeVariantSet
SdfSpecifierDef
SdfSpecifierOver
Over
SdfSpecifierClass
Class
SdfPermissionPublic
Public
SdfPermissionPrivate
Private
SdfVariabilityVarying
Varying
SdfVariabilityUniform
Uniform
SdfLengthUnitMillimeter
SdfLengthUnitCentimeter
SdfLengthUnitDecimeter
SdfLengthUnitMeter
SdfLengthUnitKilometer
SdfLengthUnitInch
SdfLengthUnitFoot
SdfLengthUnitYard
SdfLengthUnitMile
SdfAngularUnitDegrees
SdfAngularUnitRadians
SdfDimensionlessUnitPercent
SdfDimensionlessUnitDefault
Length
Angular
Dimensionless
TfIterator<T, Reverse> &TfIterator<const std::map<SdfPath, SdfPath>, false>::operator++() [T = const std::map<SdfPath, SdfPath>, Reverse = false]
TfIterator::Iterator &TfIterator<const std::map<SdfPath, SdfPath>, false>::operator->() [T = const std::map<SdfPath, SdfPath>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::map<double, VtValue>, false>::operator++() [T = const std::map<double, VtValue>, Reverse = false]
TfIterator::Iterator &TfIterator<const std::map<double, VtValue>, false>::operator->() [T = const std::map<double, VtValue>, Reverse = false]
static void TfSingleton<Sdf_CleanupTracker>::SetInstanceConstructed(T &) [T = Sdf_CleanupTracker]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/childrenUtils.cpp
static bool Sdf_ChildrenUtils<Sdf_AttributeChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_AttributeChildPolicy]
Invalid object type
Failed to create spec of type '%s' at <%s>
Invalid name
static bool Sdf_ChildrenUtils<Sdf_PrimChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_PrimChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_RelationshipChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_RelationshipChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_VariantChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_VariantChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_VariantSetChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_VariantSetChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_RelationshipTargetChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_RelationshipTargetChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_AttributeConnectionChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_AttributeConnectionChildPolicy]
SdfPath::SdfPath(string)
SdfPath::SdfPath(const std::string &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/path.cpp
Ill-formed SdfPath <%s>: %s
StripAllVariantSelections
SdfPath SdfPath::StripAllVariantSelections() const
AppendPath
SdfPath SdfPath::AppendPath(const SdfPath &) const
Cannot append to invalid path
Cannot append invalid path to <%s>
Cannot append absolute path <%s> to another path <%s>.
Cannot append a path to another path that is not a root or a prim path.
Cannot append a property path to the absolute root path.
AppendChild
SdfPath SdfPath::AppendChild(const TfToken &) const
Cannot append child '%s' to path '%s'.
Invalid prim name '%s'
AppendProperty
SdfPath SdfPath::AppendProperty(const TfToken &) const
Can only append a property '%s' to a prim path (%s)
AppendVariantSelection
SdfPath SdfPath::AppendVariantSelection(const std::string &, const std::string &) const
Cannot append variant selection %s = %s to <%s>; can only append a variant selection to a prim or prim variant selection path.
AppendTarget
SdfPath SdfPath::AppendTarget(const SdfPath &) const
Can only append a target to a property path.
Target path cannot be invalid.
AppendRelationalAttribute
SdfPath SdfPath::AppendRelationalAttribute(const TfToken &) const
Invalid property name.
Can only append a relational attribute to a target path.
AppendMapper
SdfPath SdfPath::AppendMapper(const SdfPath &) const
Cannnot append mapper '%s' to non-property path <%s>.
Cannot append an empty mapper target path to <%s>
AppendMapperArg
SdfPath SdfPath::AppendMapperArg(const TfToken &) const
Invalid arg name.
Can only append a mapper arg to a mapper path.
AppendExpression
SdfPath SdfPath::AppendExpression() const
Can only append an expression to a property path.
AppendElementToken
SdfPath SdfPath::AppendElementToken(const TfToken &) const
Cannot append element '%s' to the EmptyPath.
Cannot append EmptyPath as a path element.
ReplacePrefix
SdfPath SdfPath::ReplacePrefix(const SdfPath &, const SdfPath &, bool) const
GetCommonPrefix
SdfPath SdfPath::GetCommonPrefix(const SdfPath &) const
GetCommonPrefix(): invalid path.
SdfPath SdfPath::ReplaceTargetPath(const SdfPath &) const
ReplaceTargetPath(): invalid new target path.
MakeAbsolutePath
SdfPath SdfPath::MakeAbsolutePath(const SdfPath &) const
MakeAbsolutePath(): anchor is the empty path.
MakeAbsolutePath() requires an absolute path as an argument.
MakeAbsolutePath() requires a prim path as an argument.
MakeRelativePath
SdfPath SdfPath::MakeRelativePath(const SdfPath &) const
MakeRelativePath(): anchor is the invalid path.
MakeRelativePath() requires an absolute path as an argument.
MakeRelativePath() requires a prim, prim variant selection, or absolute root path as an anchor (got '%s').
thisCount == anchorCount
_AppendNode
SdfPath _AppendNode(const SdfPath &, const Sdf_PathNode *)
Unexpected node type %i
../ModelKit/extern/usd/pxr/usd/sdf/pathNode.h
Compare
bool Sdf_PathNode::Compare(const Sdf_PathNode &) const [Comp = Sdf_PathNode::LessThan]
Unhandled Sdf_PathNode::NodeType enumerant
TfIterator<T, Reverse> &TfIterator<const std::vector<SdfPath>, false>::operator++() [T = const std::vector<SdfPath>, Reverse = false]
   infoKey: 
     oldValue: 
     newValue: 
    sublayer 
   oldPath: <
   didRename
   didChangeIdentifier
   didChangeResolvedPath
   didReplaceContent
   didReloadContent
   didReorderChildren
   didReorderProperties
   didChangePrimVariantSets
   didChangePrimInheritPaths
   didChangePrimSpecializes
   didChangePrimReferences
   didChangeAttributeTimeSamples
   didChangeAttributeConnection
   didChangeRelationshipTargets
   didAddTarget
   didRemoveTarget
   didAddInertPrim
   didAddNonInertPrim
   didRemoveInertPrim
   didRemoveNonInertPrim
   didAddPropertyWithOnlyRequiredFields
   didAddProperty
   didRemovePropertyWithOnlyRequiredFields
   didRemoveProperty
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/changeList.cpp
GetEntry
const SdfChangeList::Entry &SdfChangeList::GetEntry(const SdfPath &) const
!path.IsEmpty()
SdfChangeList::SubLayerAdded
SdfChangeList::SubLayerRemoved
SdfChangeList::SubLayerOffset
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/valueTypeRegistry.cpp
_AddType
bool (anonymous namespace)::Registry::_AddType(Sdf_ValueTypeImpl **, Sdf_ValueTypeImpl **, const TfToken &, const TfType &, const TfType &, const std::string &, const std::string &, const TfToken &, const SdfTupleDimensions &, const VtValue &, const VtValue &, TfEnum)
!name.IsEmpty()
Types must have names
!cppTypeName.empty() || !arrayCppTypeName.empty()
Type '%s' must have C++ names
!type.IsUnknown() || !arrayType.IsUnknown()
Type '%s' must have a C++ type
existing == Sdf_ValueTypePrivate::GetEmptyTypeName()
Type '%s' already exists
_AddCoreType
const Registry::CoreType *(anonymous namespace)::Registry::_AddCoreType(const TfToken &, const TfType &, const std::string &, const TfToken &, const SdfTupleDimensions &, const VtValue &, TfEnum)
!tfType.IsUnknown()
Internal error: unknown TfType for '%s'
tfType != TfType::Find<void>()
Internal error: TfType<void> for '%s'
coreType.type == tfType
Internal error: unexpected core type for '%s'
coreType.cppTypeName == cppTypeName
Mismatched C++ name for core type '%s'
coreType.role == role
Mismatched roles '%s' and '%s' for core type '%s'
coreType.dim == dimensions
Mismatched dimensions for core type '%s'
coreType.value == value
Mismatched default value for core type '%s'
coreType.unit == unit
Mismatched unit for core type '%s'
SdfSpecTypeRegistration
static SdfPrimSpecHandle SdfPrimSpec::New(const SdfLayerHandle &, const std::string &, SdfSpecifier, const std::string &)
static SdfPrimSpecHandle SdfPrimSpec::New(const SdfPrimSpecHandle &, const std::string &, SdfSpecifier, const std::string &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/primSpec.cpp
_New
static SdfPrimSpecHandle SdfPrimSpec::_New(const SdfPrimSpecHandle &, const TfToken &, SdfSpecifier, const TfToken &)
Cannot create prim '%s' because the parent prim is NULL
Cannot create prim '%s' because '%s' is not a valid name
_ValidateEdit
bool SdfPrimSpec::_ValidateEdit(const TfToken &) const
Cannot edit %s on a pseudo-root
RemoveNameChild
bool SdfPrimSpec::RemoveNameChild(const SdfPrimSpecHandle &)
Cannot remove child prim '%s' from parent '%s' because it is not a child of that prim
RemoveProperty
void SdfPrimSpec::RemoveProperty(const SdfPropertySpecHandle &)
Cannot remove property '%s' from prim '%s' because it does not belong to that prim
SetTypeName
void SdfPrimSpec::SetTypeName(const std::string &)
Cannot set empty type name on prim '%s'
variant sets
Sdf_UncheckedCreatePrimInLayer
bool Sdf_UncheckedCreatePrimInLayer(SdfLayer *, const SdfPath &)
Failed to create prim at path '%s' in layer @%s@
SdfPrimSpecHandleVector
map<string, SdfVariantSetSpecHandle>
_FindOrCreateVariantSpec
bool _FindOrCreateVariantSpec(SdfLayer *, const SdfPath &)
varSetSpec
Failed to create variant set for '%s' in @%s@
../ModelKit/extern/usd/pxr/usd/sdf/childrenProxy.h
bool SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>>::_Validate() const [_View = SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>]
Accessing expired %s
TfIterator::Iterator &TfIterator<const SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>>, false>::operator->() [T = const SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>>, false>::operator++() [T = const SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>>, Reverse = false]
bool SdfListEditorProxy<SdfNameKeyPolicy>::_Validate() [_TypePolicy = SdfNameKeyPolicy]
TfIterator::Reference TfIterator<SdfChildrenView<Sdf_VariantChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSpec>>>, false>::operator*() [T = SdfChildrenView<Sdf_VariantChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSpec>>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<SdfChildrenView<Sdf_VariantChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSpec>>>, false>::operator++() [T = SdfChildrenView<Sdf_VariantChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSpec>>>, Reverse = false]
Sdf_CanCreatePrimInLayer
bool Sdf_CanCreatePrimInLayer(SdfLayer *, const (anonymous namespace)::_AbsPathHelper &)
Cannot create prim at path '%s' because it is not a valid prim or prim variant selection path
Cannot create prim at path '%s' in null or expired layer
bool SdfListProxy<SdfNameTokenKeyPolicy>::_Validate() const [_TypePolicy = SdfNameTokenKeyPolicy]
../ModelKit/extern/usd/pxr/usd/sdf/mapEditProxy.h
List editor is expired
Permission denied
../ModelKit/extern/usd/pxr/usd/sdf/listOpListEditor.h
CopyEdits
virtual bool Sdf_ListOpListEditor<SdfNameKeyPolicy>::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = SdfNameKeyPolicy]
Could not copy from list editor of different type
_UpdateListOp
void Sdf_ListOpListEditor<SdfNameKeyPolicy>::_UpdateListOp(const Sdf_ListOpListEditor::ListOpType &, const SdfListOpType *) [TypePolicy = SdfNameKeyPolicy]
Invalid owner.
Layer is not editable.
ApplyList
virtual void Sdf_ListOpListEditor<SdfNameKeyPolicy>::ApplyList(SdfListOpType, const Sdf_ListEditor<TP> &) [TypePolicy = SdfNameKeyPolicy]
Cannot apply from list editor of different type
../ModelKit/extern/usd/pxr/usd/sdf/listEditor.h
virtual bool Sdf_ListEditor<SdfNameKeyPolicy>::_ValidateEdit(SdfListOpType, const Sdf_ListEditor::value_vector_type &, const Sdf_ListEditor::value_vector_type &) const [TypePolicy = SdfNameKeyPolicy]
Duplicate item '%s' not allowed for field '%s' on <%s>
No field definition for field '%s'
TfIterator::Iterator &TfIterator<std::vector<TfToken>, false>::operator->() [T = std::vector<TfToken>, Reverse = false]
morphChannelTargetCounts
morphChannelTargetWeights
morphDeformer:channelTargetCounts
morphDeformer:channelTargetWeights
morphDeformer:targetBlendShapes
morphDeformer:weights
morphTargetBlendShapes
morphWeights
pointIndices
skinBindTransforms
skinComponentsPerVertex
skinDeformer:bindTransforms
skinDeformer:componentsPerVertex
skinDeformer:jointIndices
skinDeformer:jointWeights
skinDeformer:meshBindTransform
skinDeformer:targetJoints
skinMeshBindTransform
skinTargetJoints
usdDeformers
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/sphere.cpp
_ComputeExtentForSphere
bool _ComputeExtentForSphere(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
sphereSchema
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/samplingUtils.cpp
UsdGeom_GetPositionsVelocitiesAndAccelerations
bool UsdGeom_GetPositionsVelocitiesAndAccelerations(const UsdAttribute &, const UsdAttribute &, const UsdAttribute &, UsdTimeCode, size_t, VtVec3fArray *, VtVec3fArray *, UsdTimeCode *, VtVec3fArray *, float *, const UsdPrim &)
%s -- no positions
%s -- found [%zu] positions, but expected [%zu]
%s -- velocity samples are not aligned with position samples
%s -- found [%zu] velocities, but expected [%zu]
%s -- acceleration samples are not aligned with velocity samples
%s -- found [%zu] accelerations, but expected [%zu]
UsdGeom_GetOrientationsAndAngularVelocities
bool UsdGeom_GetOrientationsAndAngularVelocities(const UsdAttribute &, const UsdAttribute &, UsdTimeCode, size_t, VtQuathArray *, VtVec3fArray *, UsdTimeCode *, const UsdPrim &)
%s -- found [%zu] orientations, but expected [%zu]
%s -- angular velocity samples are not aligned with orientation samples
%s -- found [%zu] angular velocities, but expected [%zu]
UsdGeom_GetScales
bool UsdGeom_GetScales(const UsdAttribute &, const UsdTimeCode, size_t, VtVec3fArray *, const UsdPrim &)
%s -- found [%zu] scales, but expected [%zu]
_GetAttrForTransforms
bool _GetAttrForTransforms(const UsdAttribute &, UsdTimeCode, UsdTimeCode *, double *, double *, bool *, T *) [T = VtArray<GfVec3f>]
bool _GetAttrForTransforms(const UsdAttribute &, UsdTimeCode, UsdTimeCode *, double *, double *, bool *, T *) [T = VtArray<GfQuath>]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/points.cpp
TfIterator::Reference TfIterator<const VtArray<float>, false>::operator*() [T = const VtArray<float>, Reverse = false]
TfIterator::Reference TfIterator<const VtArray<GfVec3f>, false>::operator*() [T = const VtArray<GfVec3f>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const VtArray<float>, false>::operator++() [T = const VtArray<float>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const VtArray<GfVec3f>, false>::operator++() [T = const VtArray<GfVec3f>, Reverse = false]
_ComputeExtentForPoints
bool _ComputeExtentForPoints(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
pointsSchema
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/bboxCache.cpp
ComputeWorldBound
GfBBox3d UsdGeomBBoxCache::ComputeWorldBound(const UsdPrim &)
ComputeUntransformedBound
GfBBox3d UsdGeomBBoxCache::ComputeUntransformedBound(const UsdPrim &)
%s -- no prototype indices
%s -- no prototypes
%s -- invalid prototype index: %d. Should be in [0, %zu)
%s -- could not compute instance transforms
_ShouldIncludePrim
bool UsdGeomBBoxCache::_ShouldIncludePrim(const UsdPrim &)
[BBox Cache] excluded, not IMAGEABLE type. prim: %s, primType: %s
[BBox Cache] excluded for VISIBILITY. prim: %s visibility at time %s: %s
[BBox Cache] hit: %s %s
[BBox Cache] miss: %s
_Resolve
bool UsdGeomBBoxCache::_Resolve(const UsdPrim &, UsdGeomBBoxCache::_PurposeToBBoxMap *)
[BBox Cache] MISSING extentsHint for UNLOADED model %s.
[BBox Cache] Found cached extentsHint for model %s.
[BBox Cache] WARNING: No valid extent authored for <%s>. Computing a fallback value.
[BBox Cache] WARNING: Unable to compute extent for <%s>.
_ResolvePrim
void UsdGeomBBoxCache::_ResolvePrim(UsdGeomBBoxCache::_BBoxTask *, const UsdGeomBBoxCache::_PrimContext &, const GfMatrix4d &)
entry != NULL
[BBox Cache] Dependent cache hit: %s %s
[BBox Cache] Dependent cache miss: %s
[BBox Cache] Extent for <%s> is of size %zu instead of 2.
[BBox Cache] Computed extent for <%s> is of size %zu instead of 2.
childEntry
Could not find prim <%s>in the bboxCache.
childEntry->isComplete
[BBox Cache] resolved value: %s %s (varying: %s)
[%s]%s
Resolve
void UsdGeomBBoxCache::_MasterBBoxResolver::Resolve(const std::vector<_PrimContext> &)
_GetOrCreateVisibilityQuery
const UsdAttributeQuery &_GetOrCreateVisibilityQuery(const UsdPrim &, UsdAttributeQuery *)
attr
Unable to get attribute '%s' on prim at path <%s>
Visibility
_GetOrCreateExtentQuery
const UsdAttributeQuery &_GetOrCreateExtentQuery(const UsdPrim &, UsdAttributeQuery *)
Extent
USDGEOM_BBOX
USDGEOM_XFORMCOMMONAPI
[BBox Cache] Computing purpose without cached parent for <%s>
[BBox Cache] Computing purpose for <%s> before purposeof parent <%s> is cached
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/cube.cpp
_ComputeExtentForCube
bool _ComputeExtentForCube(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
cubeSchema
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/cylinder.cpp
_ComputeExtentForCylinder
bool _ComputeExtentForCylinder(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
cylinderSchema
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/mesh.cpp
static UsdGeomMesh UsdGeomMesh::Define(const UsdStagePtr &, const SdfPath &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/primvarsAPI.cpp
GetPrimvars
std::vector<UsdGeomPrimvar> UsdGeomPrimvarsAPI::GetPrimvars() const
Called GetPrimvars on invalid prim: %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/boundableComputeExtent.cpp
UsdGeomRegisterComputeExtentFunction
void UsdGeomRegisterComputeExtentFunction(const TfType &, const UsdGeomComputeExtentFunction &)
Prim type '%s' must derive from UsdGeomBoundable
Invalid function registered for prim type '%s'
_ComputeExtentFromPlugins
bool _ComputeExtentFromPlugins(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
Invalid UsdGeomBoundable %s
GetComputeFunction
UsdGeomComputeExtentFunction (anonymous namespace)::_FunctionRegistry::GetComputeFunction(const UsdPrim &)
Could not find prim type '%s' for prim %s
implementsComputeExtent
_LoadPluginForType
bool (anonymous namespace)::_FunctionRegistry::_LoadPluginForType(const TfType &) const
Could not find plugin for '%s'
static void TfSingleton<(anonymous namespace)::_FunctionRegistry>::SetInstanceConstructed(T &) [T = (anonymous namespace)::_FunctionRegistry]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, (anonymous namespace)::_FunctionRegistry>::operator->() const [PtrTemplate = TfWeakPtr, Type = (anonymous namespace)::_FunctionRegistry]
virtual TfType TfNotice::_StandardDeliverer<TfNotice::_Deliverer<TfWeakPtr<(anonymous namespace)::_FunctionRegistry>, TfAnyWeakPtr, void ((anonymous namespace)::_FunctionRegistry::*)(const PlugNotice::DidRegisterPlugins &), PlugNotice::DidRegisterPlugins>>::GetNoticeType() const [Derived = TfNotice::_Deliverer<TfWeakPtr<(anonymous namespace)::_FunctionRegistry>, TfAnyWeakPtr, void ((anonymous namespace)::_FunctionRegistry::*)(const PlugNotice::DidRegisterPlugins &), PlugNotice::DidRegisterPlugins>]
RegisterComputeFunction
void (anonymous namespace)::_FunctionRegistry::RegisterComputeFunction(const TfType &, const UsdGeomComputeExtentFunction &)
UsdGeomComputeExtentFunction already registered for prim type '%s'
GetLocalToWorldTransform
GfMatrix4d UsdGeomXformCache::GetLocalToWorldTransform(const UsdPrim &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/xformCache.cpp
entry
GfMatrix4d UsdGeomXformCache::GetLocalTransformation(const UsdPrim &, bool *)
'resetsXformStack' pointer is null.
ComputeRelativeTransform
GfMatrix4d UsdGeomXformCache::ComputeRelativeTransform(const UsdPrim &, const UsdPrim &, bool *)
'resetXformStack' pointer is null.
TfIterator<T, Reverse> &TfIterator<TfHashMap<UsdPrim, UsdGeomXformCache::_Entry, boost::hash<UsdPrim>>, false>::operator++() [T = TfHashMap<UsdPrim, UsdGeomXformCache::_Entry, boost::hash<UsdPrim>>, Reverse = false]
TfIterator::Iterator &TfIterator<TfHashMap<UsdPrim, UsdGeomXformCache::_Entry, boost::hash<UsdPrim>>, false>::operator->() [T = TfHashMap<UsdPrim, UsdGeomXformCache::_Entry, boost::hash<UsdPrim>>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/pointInstancer.cpp
PointInstancer
USDGEOM_POINTINSTANCER_NEW_APPLYOPS
Set to true to use SdfListOp::ApplyOperations() instead of ComposeOperations().
_GetPrototypePathsForInstanceTransforms
bool UsdGeomPointInstancer::_GetPrototypePathsForInstanceTransforms(const VtIntArray &, SdfPathVector *) const
_ComputePointInstancerAttributesPreamble
bool UsdGeomPointInstancer::_ComputePointInstancerAttributesPreamble(const UsdTimeCode, const UsdGeomPointInstancer::ProtoXformInclusion, const UsdGeomPointInstancer::MaskApplication, VtIntArray *, SdfPathVector *, std::vector<bool> *) const
%s -- found mask of size [%zu], but expected size [%zu]
ComputeInstanceTransformsAtTime
bool UsdGeomPointInstancer::ComputeInstanceTransformsAtTime(VtArray<GfMatrix4d> *, const UsdTimeCode, const UsdTimeCode, const UsdGeomPointInstancer::ProtoXformInclusion, const UsdGeomPointInstancer::MaskApplication) const
ComputeInstanceTransformsAtTimes
bool UsdGeomPointInstancer::ComputeInstanceTransformsAtTimes(std::vector<VtArray<GfMatrix4d>> *, const std::vector<UsdTimeCode> &, const UsdTimeCode, const UsdGeomPointInstancer::ProtoXformInclusion, const UsdGeomPointInstancer::MaskApplication) const
static bool UsdGeomPointInstancer::ComputeInstanceTransformsAtTime(VtArray<GfMatrix4d> *, UsdStageWeakPtr &, UsdTimeCode, const VtIntArray &, const VtVec3fArray &, const VtVec3fArray &, UsdTimeCode, const VtVec3fArray &, const VtVec3fArray &, const VtQuathArray &, const VtVec3fArray &, UsdTimeCode, const SdfPathVector &, const std::vector<bool> &, float)
UsdGeomPointInstancer::ComputeInstanceTransformsAtTime (Parallel)
_ComputeExtentAtTimePreamble
bool UsdGeomPointInstancer::_ComputeExtentAtTimePreamble(UsdTimeCode, VtIntArray *, std::vector<bool> *, UsdRelationship *, SdfPathVector *) const
%s -- mask.size() [%zu] != protoIndices.size() [%zu]
_ComputeExtentFromTransforms
bool UsdGeomPointInstancer::_ComputeExtentFromTransforms(VtVec3fArray *, const VtIntArray &, const std::vector<bool> &, const UsdRelationship &, const SdfPathVector &, const VtMatrix4dArray &, UsdTimeCode, const GfMatrix4d *) const
Number of prototypes (%zu) is >= numberof instances (%zu). May be inefficient.
_ComputeExtentAtTime
bool UsdGeomPointInstancer::_ComputeExtentAtTime(VtVec3fArray *, const UsdTimeCode, const UsdTimeCode, const GfMatrix4d *) const
%s -- null container passed to ComputeExtentAtTime()
UsdGeomPointInstancer::IncludeProtoXform
UsdGeomPointInstancer::ExcludeProtoXform
UsdGeomPointInstancer::ApplyMask
UsdGeomPointInstancer::IgnoreMask
_ComputeExtentForPointInstancer
bool _ComputeExtentForPointInstancer(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
pointInstancerSchema
void VtArray<long long>::push_back(const VtArray::ElementType &) [T = long long]
../ModelKit/extern/usd/pxr/usd/usdGeom/pointInstancer.h
ApplyMaskToArray
static bool UsdGeomPointInstancer::ApplyMaskToArray(const std::vector<bool> &, VtArray<T> *, const int) [T = GfMatrix4d]
NULL dataArray.
Input mask's size (%zu) is not compatible with the input dataArray (%zu) and elementSize (%d).
TfIterator<T, Reverse> &TfIterator<VtArray<int>, false>::operator++() [T = VtArray<int>, Reverse = false]
TfIterator::Reference TfIterator<VtArray<int>, false>::operator*() [T = VtArray<int>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/capsule.cpp
_ComputeExtentForCapsule
bool _ComputeExtentForCapsule(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
capsuleSchema
translate
rotateX
rotateY
rotateZ
rotateXYZ
rotateXZY
rotateYXZ
rotateYZX
rotateZXY
rotateZYX
orient
!resetXformStack!
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/xformOp.cpp
UsdGeomXformOp
UsdGeomXformOp::UsdGeomXformOp(const UsdAttribute &, bool)
UsdGeomXformOp created with invalid UsdAttribute.
Invalid xform op: <%s>.
_Init
void UsdGeomXformOp::_Init()
Invalid xform opType token '%s'.
GetPrecisionFromValueTypeName
static UsdGeomXformOp::Precision UsdGeomXformOp::GetPrecisionFromValueTypeName(const SdfValueTypeName &)
Invalid typeName '%s' specified.
GetOpTypeEnum
static UsdGeomXformOp::Type UsdGeomXformOp::GetOpTypeEnum(const TfToken &)
GetValueTypeName
static const SdfValueTypeName &UsdGeomXformOp::GetValueTypeName(const UsdGeomXformOp::Type, const UsdGeomXformOp::Precision)
Matrix transformations can only be encoded in double precision. Overriding precision to double.
UsdGeomXformOp::UsdGeomXformOp(const UsdPrim &, const UsdGeomXformOp::Type, const UsdGeomXformOp::Precision, const TfToken &, bool)
Invalid xform-op: incompatible combination of opType (%s) and precision (%s).
!attrName.IsEmpty()
GetOpTransform
static GfMatrix4d UsdGeomXformOp::GetOpTransform(const UsdGeomXformOp::Type, const VtValue &, bool)
Invalid combination of opType (%s) and opVal (%s). Returning identity matrix.
Cannot invert singular transform op with value %s.
UsdGeomXformOp::TypeTranslate
UsdGeomXformOp::TypeScale
UsdGeomXformOp::TypeRotateX
UsdGeomXformOp::TypeRotateY
UsdGeomXformOp::TypeRotateZ
UsdGeomXformOp::TypeRotateXYZ
UsdGeomXformOp::TypeRotateXZY
UsdGeomXformOp::TypeRotateYXZ
UsdGeomXformOp::TypeRotateYZX
UsdGeomXformOp::TypeRotateZXY
UsdGeomXformOp::TypeRotateZYX
UsdGeomXformOp::TypeOrient
UsdGeomXformOp::TypeTransform
UsdGeomXformOp::PrecisionDouble
Double
UsdGeomXformOp::PrecisionFloat
Float
UsdGeomXformOp::PrecisionHalf
Half
xformOp:
!invert!xformOp:
!invert!
xformOp:rotateX
xformOp:rotateY
xformOp:rotateZ
xformOp:orient
usdGeom
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/cone.cpp
Define
UsdGeomBoundable
_ComputeExtentForCone
bool _ComputeExtentForCone(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
coneSchema
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/xformable.cpp
AddXformOp
UsdGeomXformOp UsdGeomXformable::AddXformOp(const UsdGeomXformOp::Type, const UsdGeomXformOp::Precision, const TfToken &, bool) const
The xformOp '%s' already exists in xformOpOrder [%s].
XformOp <%s> has typeName '%s' which does not match the requested precision '%s'. Proceeding to use existing typeName / precision.
Unable to add xform op of type %s and precision %s on prim at path <%s>. opSuffix=%s, isInverseOp=%d
_GetOrderedXformOps
vector<UsdGeomXformOp> UsdGeomXformable::_GetOrderedXformOps(bool *, bool) const
resetsXformStack is NULL.
Unable to get attribute associated with the xformOp '%s', on the prim at path <%s>. Skipping xformOp in the computation of the local transformation at prim.
GetLocalTransformation
static bool UsdGeomXformable::GetLocalTransformation(GfMatrix4d *, const vector<UsdGeomXformOp> &, const UsdTimeCode)
'transform' pointer is NULL.
void VtArray<TfToken>::push_back(const VtArray::ElementType &) [T = TfToken]
boost::bad_get: failed value get using boost::get
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/subset.cpp
static UsdGeomSubset UsdGeomSubset::Define(const UsdStagePtr &, const SdfPath &)
subsetFamily
familyType
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/imageable.cpp
USD_GEOM_IMAGEABLE_DEPRECATE_PRIMVARS_API
Whether UsdGeomImageable's primvars API should issue deprecation warnings
_IssueAPIWarningIfDeprecationFlagEnabled
void _IssueAPIWarningIfDeprecationFlagEnabled()
API deprecation warning: UsdGeomImageable's primvars API will be removed in the future.  Use UsdGeomPrimvarsAPI instead.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/metrics.cpp
UsdGeomGetStageUpAxis
TfToken UsdGeomGetStageUpAxis(const UsdStageWeakPtr &)
Invalid UsdStage
UsdGeomSetStageUpAxis
bool UsdGeomSetStageUpAxis(const UsdStageWeakPtr &, const TfToken &)
UsdStage upAxis can only be set to "Y" or "Z", not attempted "%s" on stage %s.
UsdGeomGetStageMetersPerUnit
double UsdGeomGetStageMetersPerUnit(const UsdStageWeakPtr &)
_fallbackUpAxis_Tf_StaticDataFactoryImpl
void _fallbackUpAxis_Tf_StaticDataFactoryImpl(TfToken *)
%s[%s] was not a dictionary in plugInfo.json file.
%s[%s][%s] was not a string.
%s[%s][%s] had value "%s", but only "Y" and "Z" are allowed.
Plugins %s and %s provided different fallback values for %s.  Ignoring all plugins and using schema fallback of "%s"
TfIterator::Reference TfIterator<std::vector<TfWeakPtr<PlugPlugin>>, false>::operator*() [T = std::vector<TfWeakPtr<PlugPlugin>>, Reverse = false]
UsdGeomMetrics
TfIterator<T, Reverse> &TfIterator<std::vector<TfWeakPtr<PlugPlugin>>, false>::operator++() [T = std::vector<TfWeakPtr<PlugPlugin>>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/curves.cpp
_ComputeExtentForCurves
bool _ComputeExtentForCurves(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
curves
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/pointBased.cpp
%s -- all sample times in times and baseTime must either all be numeric or all be default
_ComputeExtentForPointBased
bool _ComputeExtentForPointBased(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
pointBased
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/primvar.cpp
_MakeNamespaced
static TfToken UsdGeomPrimvar::_MakeNamespaced(const TfToken &, bool)
%s is not a valid name for a Primvar, because it contains the reserved name "indices"
SetInterpolation
bool UsdGeomPrimvar::SetInterpolation(const TfToken &)
Attempt to set invalid primvar interpolation "%s" for attribute %s
SetElementSize
bool UsdGeomPrimvar::SetElementSize(int)
Attempt to set elementSize to %d for attribute %s (must be a positive, non-zero value)
GetDeclarationInfo
void UsdGeomPrimvar::GetDeclarationInfo(TfToken *, SdfValueTypeName *, TfToken *, int *) const
name && typeName && interpolation && elementSize
SetIndices
bool UsdGeomPrimvar::SetIndices(const VtIntArray &, UsdTimeCode) const
Setting indices on non-array valued primvar of type '%s'.
UsdGeomPrimvar
UsdGeomPrimvar::UsdGeomPrimvar(const UsdPrim &, const TfToken &, const SdfValueTypeName &)
:idFrom
:indices
void VtArray<std::string>::push_back(const VtArray::ElementType &) [T = std::string]
accelerations
angularVelocities
axis
basis
bezier
boundaries
bounds
bspline
cards
catmullClark
catmullRom
clippingPlanes
clippingRange
closed
cornersOnly
cornersPlus1
cornersPlus2
cross
cubic
curveVertexCounts
doubleSided
edgeAndCorner
edgeOnly
elementSize
elementType
extent
extentsHint
faceVaryingLinearInterpolation
faceVertexIndices
familyName
focalLength
focusDistance
fromTexture
fStop
guide
height
hermite
holeIndices
horizontalAperture
horizontalApertureOffset
inactiveIds
inherited
interpolateBoundary
interpolation
invisible
invisibleIds
knots
left
leftHanded
linear
metersPerUnit
model:applyDrawMode
model:cardGeometry
model:cardTextureXNeg
model:cardTextureXPos
model:cardTextureYNeg
model:cardTextureYPos
model:cardTextureZNeg
model:cardTextureZPos
model:drawMode
model:drawModeColor
mono
motion:velocityScale
nonOverlapping
nonperiodic
open
order
orientations
origin
partition
periodic
pinned
pivot
pointWeights
positions
power
projection
protoIndices
prototypes
proxy
proxyPrim
purpose
radius
ranges
render
right
rightHanded
scales
shutter:close
shutter:open
smooth
stereoRole
subdivisionScheme
triangleSubdivisionRule
trimCurve:counts
trimCurve:knots
trimCurve:orders
trimCurve:points
trimCurve:ranges
trimCurve:vertexCounts
uForm
uKnots
unauthoredValuesIndex
unrestricted
uOrder
upAxis
uRange
uVertexCount
velocities
verticalAperture
verticalApertureOffset
vForm
vKnots
vOrder
vRange
vVertexCount
widths
wrap
xformOpOrder
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdShade/material.cpp
Material
static UsdShadeMaterial UsdShadeMaterial::Define(const UsdStagePtr &, const SdfPath &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdShade/connectableAPI.cpp
UsdShadeConnectableAPI::GetConnectedSource
GetConnectedSource
static bool UsdShadeConnectableAPI::GetConnectedSource(const UsdAttribute &, UsdShadeConnectableAPI *, TfToken *, UsdShadeAttributeType *)
GetConnectedSource() requires non-NULL output-parameters.
TfIterator<T, Reverse> &TfIterator<std::vector<UsdAttribute>, false>::operator++() [T = std::vector<UsdAttribute>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<UsdAttribute>, false>::operator*() [T = std::vector<UsdAttribute>, Reverse = false]
usdShade
info
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdShade/materialBindingAPI.cpp
ComputeBoundMaterial
UsdShadeMaterial UsdShadeMaterialBindingAPI::ComputeBoundMaterial(UsdShadeMaterialBindingAPI::BindingsCache *, UsdShadeMaterialBindingAPI::CollectionQueryCache *, const TfToken &, UsdRelationship *) const
Invalid prim (%s)
UsdShadeMaterialBindingAPI::ComputeBoundMaterial (BindingsCache)
UsdShadeMaterialBindingAPI::ComputeBoundMaterial (IsInBoundCollection)
UsdShadeMaterialBindingAPI::ComputeBoundMaterial (CollectionQuery)
SetMaterialBindSubsetsFamilyType
bool UsdShadeMaterialBindingAPI::SetMaterialBindSubsetsFamilyType(const TfToken &)
Attempted to set invalid familyType 'unrestricted' forthe "materialBind" family of subsets on <%s>.
material:binding:full
material:binding:preview
material:binding:collection:full
material:binding:collection:preview
bindMaterialAs
coordSys:
fallbackStrength
full
info:id
info:implementationSource
inputs:
interfaceOnly
material:binding
material:binding:collection
materialVariant
outputs:
outputs:displacement
outputs:surface
outputs:volume
preview
sdrMetadata
sourceAsset
sourceCode
strongerThanDescendants
subIdentifier
volume
weakerThanDescendants
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdUtils/dependencies.cpp
UsdUtilsCreateNewARKitUsdzPackage
bool UsdUtilsCreateNewARKitUsdzPackage(const SdfAssetPath &, const std::string &, const std::string &)
The given asset '%s' contains one or more composition arcs referencing external USD files. Flattening it to a single .usdc file before packaging. This will result in loss of features such as variantSets and all asset references to be absolutized.
.usdc
Flattening asset @%s@ located at '%s' to temporary layer at path '%s'.
Failed to flatten and export the USD stage '%s'.
Failed to create a .usdz package from temporary, flattened layer '%s'.
_FileAnalyzer
(anonymous namespace)::_FileAnalyzer::_FileAnalyzer(const std::string &, (anonymous namespace)::_ReferenceTypesToInclude, const (anonymous namespace)::_FileAnalyzer::RemapAssetPathFunc &, const (anonymous namespace)::_FileAnalyzer::ProcessAssetPathFunc &)
Unable to open layer at path @%s@.
_AnalyzeDependencies
void (anonymous namespace)::_FileAnalyzer::_AnalyzeDependencies()
_ProcessMetadata
void (anonymous namespace)::_FileAnalyzer::_ProcessMetadata(const SdfPrimSpecHandle &)
Clips directory '%s' is not a valid directory on the filesystem.
const T &VtDictionaryGet(const VtDictionary &, const std::string &) [T = std::string]
Creating USDZ package at '%s' containing asset @%s@.
_CreateNewUsdzPackage
bool _CreateNewUsdzPackage(const SdfAssetPath &, const std::string &, const std::string &, const std::string &, const std::vector<std::string> &)
A file already exists at path "%s" in the package. Skipping export of layer @%s@.
.. adding layer @%s@ to package at path '%s'.
Failed to add temporary layer at '%s' to the package at path '%s'.
.. adding file '%s' to package at path '%s'.
A file already exists at path "%s" in the package. Skipping copy of file "%s".
Failed to add file '%s' to the package at path '%s'.
_AssetLocalizer
(anonymous namespace)::_AssetLocalizer::_AssetLocalizer(const SdfAssetPath &, const std::string &, const std::string &, const std::string &, const std::vector<std::string> &)
Failed to resolve reference @%s@ with computed asset path @%s@ found in layer @%s@.
Failed to fetch-to-local resolved path for asset @%s@ : '%s'. Skipping dependency.
USDUTILS_CREATE_USDZ_PACKAGE
VtArray::value_type *VtArray<GfRange1d>::_AllocateNew(size_t) [T = GfRange1d]
void VtArray<GfRange1d>::_DetachIfNotUnique() [T = GfRange1d]
VtArray::value_type *VtArray<GfRange1f>::_AllocateNew(size_t) [T = GfRange1f]
void VtArray<GfRange1f>::_DetachIfNotUnique() [T = GfRange1f]
VtArray::value_type *VtArray<GfRange2d>::_AllocateNew(size_t) [T = GfRange2d]
void VtArray<GfRange2d>::_DetachIfNotUnique() [T = GfRange2d]
VtArray::value_type *VtArray<GfRange2f>::_AllocateNew(size_t) [T = GfRange2f]
void VtArray<GfRange2f>::_DetachIfNotUnique() [T = GfRange2f]
VtArray::value_type *VtArray<GfRange3d>::_AllocateNew(size_t) [T = GfRange3d]
void VtArray<GfRange3d>::_DetachIfNotUnique() [T = GfRange3d]
VtArray::value_type *VtArray<GfRange3f>::_AllocateNew(size_t) [T = GfRange3f]
void VtArray<GfRange3f>::_DetachIfNotUnique() [T = GfRange3f]
VT_LOG_STACK_ON_ARRAY_DETACH_COPY
Log a stack trace when a VtArray is copied to detach it from shared storage, to help track down unintended copies.
Detach/copy VtArray (%s)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/vt/hash.cpp
_IssueUnimplementedHashError
void Vt_HashDetail::_IssueUnimplementedHashError(const std::type_info &)
Invoked VtHashValue on an object of type <%s>, which is not hashable by boost::hash<>() or TfHash().  Consider providing an overload of hash_value().
VtDictionary::operator[]
VtDictionary::insert
VtDictionary::_CreateDictIfNeeded
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/vt/dictionary.cpp
VtDictionaryOverRecursive
void VtDictionaryOverRecursive(VtDictionary *, const VtDictionary &, bool)
VtDictionaryOverRecursive: NULL dictionary pointer.
GetUnderlyingIterator
UnderlyingIterator VtDictionary::Iterator<std::map<std::string, VtValue, std::less<>> *, std::__map_iterator<std::__tree_iterator<std::__value_type<std::string, VtValue>, std::__tree_node<std::__value_type<std::string, VtValue>, void *> *, long>>>::GetUnderlyingIterator(UnderlyingMapPtr) const [UnderlyingMapPtr = std::map<std::string, VtValue, std::less<>> *, UnderlyingIterator = std::__map_iterator<std::__tree_iterator<std::__value_type<std::string, VtValue>, std::__tree_node<std::__value_type<std::string, VtValue>, void *> *, long>>]
!_underlyingMap || _underlyingMap == map
TfIterator<T, Reverse> &TfIterator<VtDictionary, false>::operator++() [T = VtDictionary, Reverse = false]
TfIterator::Iterator &TfIterator<VtDictionary, false>::operator->() [T = VtDictionary, Reverse = false]
TfIterator::Reference TfIterator<const VtDictionary, false>::operator*() [T = const VtDictionary, Reverse = false]
const T &VtDictionaryGet(const VtDictionary &, const std::string &) [T = VtDictionary]
static void TfSingleton<Vt_CastRegistry>::SetInstanceConstructed(T &) [T = Vt_CastRegistry]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/vt/value.cpp
GetType
TfType VtValue::GetType() const
Returning unknown type for VtValue with unregistered C++ type %s
_FailGet
const void *VtValue::_FailGet(Vt_DefaultValueHolder (*)(), const std::type_info &) const
Attempted to get value of type '%s' from empty VtValue.
Attempted to get value of type '%s' from VtValue holding '%s'
bad numeric conversion: negative overflow
bad numeric conversion: positive overflow
Register
void Vt_CastRegistry::Register(const std::type_info &, const std::type_info &, VtValue (*)(const VtValue &))
VtValue cast already registered from '%s' to '%s'.  New cast will be ignored.
VtValue _FindOrCreateDefaultValue
_FindOrCreateDefaultValue
const void *_FindOrCreateDefaultValue(const std::type_info &, Vt_DefaultValueHolder (*)())
TfSafeTypeCompare(newValue.GetType(), type)
TfIterator<T, Reverse> &TfIterator<const std::vector<VtValue>, false>::operator++() [T = const std::vector<VtValue>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<VtValue>, false>::operator*() [T = const std::vector<VtValue>, Reverse = false]
PXR_WORK_THREAD_LIMIT
Limits the number of threads the application may spawn. 0 (default) allows for maximum concurrency as determined by the number of physical cores, or the process's affinity mask, whichever is smaller. Note that the environment variable (if set to a non-zero value) will override any value passed to Work thread-limiting API calls.
work
WORK_SYNCHRONIZE_ASYNC_DESTROY_CALLS
Make WorkSwapDestroyAsync and WorkMoveDestroyAsync wait for destruction completion rather than destroying asynchronously
PluginDependencies
PlugPlugin::_Load
Load %s
_Load
bool PlugPlugin::_Load()
Loading plugin '%s'
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/plug/plugin.cpp
Loading plugin '%s'.
_LoadWithDependents
bool PlugPlugin::_LoadWithDependents(PlugPlugin::_SeenPlugins *)
Load failed because of cyclic dependency for '%s'
Load failed: unknown base class '%s'
Load failed: dependency list has wrong type
Load failed: unknown dependent class '%s'
Load failed: unknown dependent plugin '%s'
Load failed: unable to load dependent plugin '%s'
Loaded plugin '%s' in a secondary thread.
Types
_DefineType
static void PlugPlugin::_DefineType(TfType)
unknown plugin type %s
alias
_DeclareAliases
void PlugPlugin::_DeclareAliases(TfType, const JsObject &)
Expected string for alias name, but found %s
bases
_DeclareType
void PlugPlugin::_DeclareType(const std::string &, const JsObject &)
Invalid bases for type %s specified by plugin %s. Expected list of strings.
The metadata for plugin '%s' defined in %s declares type '%s' with base type '%s', but the type has already been declared with a different set of bases that does not include that type.  The existing bases are: (%s).  Please fix the plugin.
Plugin '%s' defined in %s has metadata claiming that it provides type %s, but this was previously provided by plugin '%s' defined in %s.
_NewPlugin
static pair<PlugPluginPtr, bool> PlugPlugin::_NewPlugin(const Plug_RegistrationMetadata &, PlugPlugin::_Type, const std::string &, PluginMap *) [PluginMap = TfHashMap<std::string, TfRefPtr<PlugPlugin>, TfHash>]
it->second
Already registered %s plugin '%s' - not registering '%s'.
Registering %s plugin '%s' at '%s'.
shared library
resource
<invalid enum value>
TfIterator<T, Reverse> &TfIterator<const std::vector<std::string>, false>::operator++() [T = const std::vector<std::string>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<std::string>, false>::operator*() [T = const std::vector<std::string>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<TfHashMap<std::string, TfRefPtr<PlugPlugin>, TfHash>, false>::operator++() [T = TfHashMap<std::string, TfRefPtr<PlugPlugin>, TfHash>, Reverse = false]
TfIterator::Iterator &TfIterator<TfHashMap<std::string, TfRefPtr<PlugPlugin>, TfHash>, false>::operator->() [T = TfHashMap<std::string, TfRefPtr<PlugPlugin>, TfHash>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::map<std::string, JsValue>, false>::operator++() [T = const std::map<std::string, JsValue>, Reverse = false]
TfIterator::Iterator &TfIterator<const std::map<std::string, JsValue>, false>::operator->() [T = const std::map<std::string, JsValue>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<TfType>, false>::operator++() [T = std::vector<TfType>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<TfType>, false>::operator*() [T = std::vector<TfType>, Reverse = false]
TfIterator::Iterator &TfIterator<std::vector<TfType>, false>::operator->() [T = std::vector<TfType>, Reverse = false]
static void TfSingleton<PlugRegistry>::SetInstanceConstructed(T &) [T = PlugRegistry]
Registering plugins
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/plug/registry.cpp
_RegisterPlugins
PlugPluginPtrVector PlugRegistry::_RegisterPlugins(const std::vector<std::string> &)
Plug
PlugRegistry::RegisterPlugins
GetPluginForType
PlugPluginPtr PlugRegistry::GetPluginForType(TfType) const
Unknown base type
plug
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, PlugRegistry>::operator->() const [PtrTemplate = TfWeakPtr, Type = PlugRegistry]
_RegisterPlugin
void PlugRegistry::_RegisterPlugin(const Plug_RegistrationMetadata &, ConcurrentVector *) [ConcurrentVector = tbb::concurrent_vector<TfWeakPtr<PlugPlugin>>]
Tried to register a plugin of unknown type (maybe from %s)
PXR_DISABLE_STANDARD_PLUG_SEARCH_PATH
PLUG_LOAD
PLUG_REGISTRATION
PLUG_LOAD_IN_SECONDARY_THREAD
PLUG_INFO_SEARCH
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/plug/info.cpp
Plug_RegistrationMetadata
Plug_RegistrationMetadata::Plug_RegistrationMetadata(const JsValue &, const std::string &, const std::string &)
Plugin info %s doesn't hold an object; plugin ignored
doesn't hold a string
library
doesn't hold a valid type
is missing
doesn't hold a valid name
doesn't hold a valid path
doesn't hold an object
Plugin info %s: ignoring unknown key '%s'
Plugin info %s key '%s' %s; plugin ignored
Will check plugin info paths
Did check plugin info paths
plugInfo.json
Includes
Plugins
Type
Name
Info
Root
LibraryPath
ResourcePath
_ReadPlugInfoWithWildcards
void (anonymous namespace)::_ReadPlugInfoWithWildcards((anonymous namespace)::_ReadContext *, const std::string &)
Plugin info file %s is not absolute
Globbing plugin info path %s
%s/%s%s
Failed to compile regex for %s: %s (%s)
Recursively walking plugin info path %s
Ignore already read plugin info %s
Will read plugin info %s
Did read plugin info %s
_ReadPlugInfo
bool (anonymous namespace)::_ReadPlugInfo((anonymous namespace)::_ReadContext *, std::string)
Plugin info file %s key '%s' doesn't hold an array
Plugin info file %s key '%s' index %zd doesn't hold a string
Plugin info file %s has unknown key %s
Failed to open plugin info %s
_ReadPlugInfoObject
bool (anonymous namespace)::_ReadPlugInfoObject(const std::string &, JsObject *)
Plugin info file %s couldn't be read (line %d, col %d): %s
Plugin info file %s did not contain a JSON object
file %s %s[%zd]
[^/]*
can't determine working directory
ArchGetCwd
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/arch/systemInfo.cpp
empty pattern
unknown reason
%s/%s.%d%s
%s/%s.%d.%d%s
%s/%s.XXXXXX
TMPDIR
failed call to posix_madvise(%zd, %zd)ret=%d, errno=%d '%s'
bad arguments to mmap()
system limit on mapped regions exceeded, or out of memory
 [with 
libArch
==============================================================
 A stack trace has been requested by 
 because: 
FAIL: Unable to fork() crash handler: errno=
FAIL: Unable to exec crash handler 
: errno=
FAIL: Crash handler wait failed: errno=
FAIL: Crash handler failed to exec
FAIL: Crash handler died: signal=
FAIL: Crash handler unexpected wait status=
FAIL: Crash handler timed out
ARCH_LOGSESSION
$pid
$time
$prog
$stack
$cmd
ARCH_POSTMORTEM
$log
0123456789
 ArchWarn: %s
 Function: %s
     File: %s
     Line: %zu
attempted member lookup on NULL %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/scopeDescription.cpp
void (anonymous namespace)::_StackRegistry::Remove((anonymous namespace)::_Stack *)
it != _stacks.end()
_Pop
void TfScopeDescription::_Pop() const
stack.head == this
Thread 
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, TfNotice::_DelivererBase>::operator->() const [PtrTemplate = TfWeakPtr, Type = TfNotice::_DelivererBase]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/safeOutputFile.cpp
ReleaseUpdatedFile
FILE *TfSafeOutputFile::ReleaseUpdatedFile()
Invalid output file (failed to open, or opened for replace)
void TfSafeOutputFile::Close()
Update
static TfSafeOutputFile TfSafeOutputFile::Update(const std::string &)
Unable to open file '%s' for writing
Replace
static TfSafeOutputFile TfSafeOutputFile::Replace(const std::string &)
Unable to obtain writable FILE pointer: %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/atomicRenameUtil.cpp
Tf_AtomicRenameFileOver
bool Tf_AtomicRenameFileOver(const std::string &, const std::string &, std::string *)
Unable to set permissions for temporary file '%s': %s
Failed to rename temporary file '%s' to '%s': %s
Empty fileName
Unable to determine the real path for '%s': %s
Insufficient permissions to write to destination directory '%s'
Insufficient permissions to write to destination file '%s'
Unable to create temporary file '%s': %s
TfRegistryManager: initialized
static void TfSingleton<(anonymous namespace)::Tf_RegistryManagerImpl>::SetInstanceConstructed(T &) [T = (anonymous namespace)::Tf_RegistryManagerImpl]
TfRegistryManager: no functions to run for %s
TfRegistryManager: running %zd functions for %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/registryManager.cpp
_RunRegistrationFunctionsNoLock
void (anonymous namespace)::Tf_RegistryManagerImpl::_RunRegistrationFunctionsNoLock(const std::string &)
i->second.empty()
ClearActiveLibrary
void (anonymous namespace)::Tf_RegistryManagerImpl::ClearActiveLibrary(const char *)
libraryName && libraryName[0]
AddRegistrationFunction
void (anonymous namespace)::Tf_RegistryManagerImpl::AddRegistrationFunction(const char *, (anonymous namespace)::Tf_RegistryManagerImpl::RegistrationFunction, const char *)
TfRegistryManager: Ignoring library with no name
typeName && typeName[0]
TfRegistryManager: Ignoring registration with no type in %s
TfRegistryManager: Library %s
active.identifier
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/fileUtils.cpp
TfDeleteFile
bool TfDeleteFile(const std::string &)
Failed to delete '%s': %s
opendir failed: %s
static void TfSingleton<TfDiagnosticMgr>::SetInstanceConstructed(T &) [T = TfDiagnosticMgr]
ERROR
WARNING
(%s)%d
Thread %s Pending Diagnostics
%s%s: %s [%s]
 (secondary thread)
%s%s: in %s at line %zu of %s -- %s
log stack traces for all errors
log stack traces for all warnings
capture stack traces at TfErrorMark ctor/dtor, enable TfReportActiveMarks debugging API.
print all posted errors immediately, meaning that even errors that are expected and handled will be printed, producing possibly confusing output
TF_DISCOVERY_TERSE
TF_DISCOVERY_DETAILED
TF_DEBUG_REGISTRY
TF_DLOPEN
TF_DLCLOSE
TF_SCRIPT_MODULE_LOADER
TF_TYPE_REGISTRY
TF_ATTACH_DEBUGGER_ON_ERROR
TF_ATTACH_DEBUGGER_ON_FATAL_ERROR
TF_ATTACH_DEBUGGER_ON_WARNING
static void TfSingleton<Tf_DebugSymbolRegistry>::SetInstanceConstructed(T &) [T = Tf_DebugSymbolRegistry]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/debug.cpp
_RegisterDebugSymbolImpl
static void TfDebug::_RegisterDebugSymbolImpl(TfDebug::_Node *, const char *, const char *)
description argument for '%s' is NULL
description argument for '%s' is empty -- add description!
TF_DEBUG
help
debug the TfDebug registry
coarse grain debugging of TfRegistryManager
detailed debugging of TfRegistryManager
show files opened by TfDlopen
show files closed by TfDlclose
Tf_DebugSymbolRegistry
Tf_DebugSymbolRegistry::Tf_DebugSymbolRegistry()
TF_DEBUG_OUTPUT_FILE
stderr
%s: %s
void Tf_DebugSymbolRegistry::_Register(const std::string &, TfDebug::_Node *, const std::string &)
[TF_DEBUG_ENVIRONMENT_SYMBOL] multiple debug symbol definitions for '%s'.  This is usually due to software misconfiguration, such as multiple versions of the same shared library loaded simultaneously in the process.  Please check your build configuration.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/stringUtils.cpp
Tf_ApplyDoubleToStringConverter
void Tf_ApplyDoubleToStringConverter(float, char *, int)
conv.ToShortestSingle(val, &builder)
double_conversion failed
void Tf_ApplyDoubleToStringConverter(double, char *, int)
conv.ToShortest(val, &builder)
&<>"'
&amp;
&lt;
&gt;
&quot;
&apos;
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/fastCompression.cpp
CompressToBuffer
static size_t TfFastCompression::CompressToBuffer(const char *, char *, size_t)
Attempted to compress a buffer of %zu bytes, more than the maximum supported %zu
DecompressFromBuffer
static size_t TfFastCompression::DecompressFromBuffer(const char *, char *, size_t, size_t)
Failed to decompress data, possibly corrupt? LZ4 error code: %d
Failed to decompress data. Couldn't read chunk size.
Failed to decompress data. Chunk too large.
Writing stack for %s to %s because of %s.
Error writing to stack trace file. Printing stack to stderr
st_%s
TF_LOG_STACK_TRACE_ON_ERROR
TF_LOG_STACK_TRACE_ON_WARNING
TF_ERROR_MARK_TRACKING
TF_PRINT_ALL_POSTED_ERRORS_TO_STDERR
Failed verification: ' 
 -- 
TF_FATAL_VERIFY
<empty>
TF_DIAGNOSTIC_CODING_ERROR_TYPE
Coding Error
TF_DIAGNOSTIC_FATAL_CODING_ERROR_TYPE
Fatal Coding Error
TF_DIAGNOSTIC_RUNTIME_ERROR_TYPE
Runtime Error
TF_DIAGNOSTIC_FATAL_ERROR_TYPE
Fatal Error
TF_DIAGNOSTIC_NONFATAL_ERROR_TYPE
Error
TF_DIAGNOSTIC_WARNING_TYPE
Warning
TF_DIAGNOSTIC_STATUS_TYPE
Status
TF_APPLICATION_EXIT_TYPE
Application Exit
static void TfSingleton<Tf_TypeRegistry>::SetInstanceConstructed(T &) [T = Tf_TypeRegistry]
TfType::_Root
TfType::_Unknown
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/type.cpp
GetAllAncestorTypes
void TfType::GetAllAncestorTypes(vector<TfType> *) const
Cannot ask for ancestor types of Unknown type
Cannot resolve ancestor classes for '%s' because the inheritance hierarchy is inconsistent.  Please check that multiply-inherited types are inherited in the same order throughout the inherited hierarchy.
bool TfType::IsA(TfType) const
IsA() was given an Unknown base type.  This probably means the attempt to look up the base type failed.  (Note: to explicitly check if a type is unknown, use IsUnknown() instead.)
TfType::Declare
Declare
static const TfType &TfType::Declare(const std::string &)
!t._info->IsDefined()
Cannot declare the type '%s'
Type '%s' has been declared to have 0 bases, and therefore inherits directly from the root type.  Cannot add bases.
TfType '%s' has already had its definitionCallback set; ignoring 2nd declaration
static const TfType &TfType::Declare(const std::string &, const vector<TfType> &, TfType::DefinitionCallback)
_DefineCppType
void TfType::_DefineCppType(const std::type_info &, size_t, bool, bool) const
TfType '%s' already has a defined C++ type; cannot redefine
TfType '%s' was previously declared to have '%s' as a base, but a subsequent declaration does not include this as a base.  The newly given bases were: (%s).  If this is a type declared in a plugin, check that the plugin metadata is correct.
Specified base type order differs for %s: had (%s), now (%s).  If this is a type declared in a plugin, check that the plugin metadata is correct.
Specified base type is unknown, skipping.
SetFactory
void TfType::SetFactory(std::unique_ptr<FactoryBase>) const
Cannot set factory of %s
Cannot change the factory of %s
_GetFactory
TfType::FactoryBase *TfType::_GetFactory() const
Cannot manufacture type %s
AddAlias
void TfType::AddAlias(TfType, const std::string &) const
TfIterator::Iterator &TfIterator<std::vector<std::vector<TfType>>, false>::operator->() [T = std::vector<std::vector<TfType>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<std::vector<TfType>>, false>::operator++() [T = std::vector<std::vector<TfType>>, Reverse = false]
Cannot set alias '%s' under '%s', because it is already set to '%s', not '%s'.
There already is a type named '%s'; cannot create an alias of the same name.
size_t
vector<bool>
vector<char>
vector<unsigned char>
vector<short>
vector<unsigned short>
vector<int>
vector<unsigned int>
vector<long>
vector<unsigned long>
vector<size_t>
vector<long long>
vector<unsigned long long>
vector<float>
vector<double>
vector<string>
TfIterator<T, Reverse> &TfIterator<const std::vector<TfType>, false>::operator++() [T = const std::vector<TfType>, Reverse = false]
TfIterator::Iterator &TfIterator<const std::vector<TfType>, false>::operator->() [T = const std::vector<TfType>, Reverse = false]
static void TfSingleton<Tf_EnumRegistry>::SetInstanceConstructed(T &) [T = Tf_EnumRegistry]
TfEnum::_AddName
int::%d
Stream is already open
Unable to open '%s' for writing: %s
Stream is not open
Buffer is not open
Unable to remove temporary file '%s': %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/mallocTag.cpp
_End
void TfMallocTag::Auto::_End()
_threadData->_callSiteOnStack[node->_callSite->_index] > 0
Tree view  ==============
Find
static TfMallocTag::_ThreadData *TfMallocTag::Tls::Find()
TfMallocTag not supported on platforms without thread_local
TfIterator<T, Reverse> &TfIterator<std::vector<std::string>, false>::operator++() [T = std::vector<std::string>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<std::string>, false>::operator*() [T = std::vector<std::string>, Reverse = false]
static void TfSingleton<Tf_NoticeRegistry>::SetInstanceConstructed(T &) [T = Tf_NoticeRegistry]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/noticeRegistry.cpp
_VerifyFailedCast
void Tf_NoticeRegistry::_VerifyFailedCast(const std::type_info &, const TfNotice &, const TfNotice *)
Special handling of notice type '%s' invoked.
Most likely, this class is missing a non-inlined virtual destructor.
Please request that someone modify class '%s' accordingly.
All attempts to cast notice of type '%s' to type '%s' failed.  One possibility is that '%s' has no non-inlined virtual functions and this system's C++ ABI is non-standard.  Verify that class '%s'has at least one non-inline virtual function.
Tf_NoticeRegistry::_Register
TfNotice::Key Tf_NoticeRegistry::_Register(TfNotice::_DelivererBase *)
notice type is undefined in the TfType system
Class %s (derived from TfNotice) is undefined in the TfType system
TfNotice type '%s' has multiple base types;
it must have a unique parent in the TfType system
TfNotice type '%s' has NO base types;
this should be impossible.
_BadTypeFatalMsg
void Tf_NoticeRegistry::_BadTypeFatalMsg(const TfType &, const std::type_info &)
TfIterator<T, Reverse> &TfIterator<const std::vector<TfWeakPtr<TfNotice::Probe>>, false>::operator++() [T = const std::vector<TfWeakPtr<TfNotice::Probe>>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<TfWeakPtr<TfNotice::Probe>>, false>::operator*() [T = const std::vector<TfWeakPtr<TfNotice::Probe>>, Reverse = false]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, TfNotice::Probe>::operator->() const [PtrTemplate = TfWeakPtr, Type = TfNotice::Probe]
TfIterator<T, Reverse> &TfIterator<TfHashSet<TfWeakPtr<TfNotice::Probe>, TfHash>, false>::operator++() [T = TfHashSet<TfWeakPtr<TfNotice::Probe>, TfHash>, Reverse = false]
TfIterator::Reference TfIterator<TfHashSet<TfWeakPtr<TfNotice::Probe>, TfHash>, false>::operator*() [T = TfHashSet<TfWeakPtr<TfNotice::Probe>, TfHash>, Reverse = false]
encountered dangling symbolic link
vector<TfToken>
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/token.cpp
_PossiblyDestroyRep
void Tf_TokenRegistry::_PossiblyDestroyRep(Tf_TokenRegistry::_RepPtr)
repFoundInSet
failed to find token '%s' in table for destruction
TfToken
Could not open file: 
Invalid index provided to getTimeSampling.
Invalid WrittenSampleIDPtr
OFaceSetSchema::init()
OFaceSetSchema::setTimeSampling( uint32_t iTimeSamplingID )
OFaceSetSchema::set()
Sample 0 must provide the faces that make up the faceset.
TokenMap::setUnique: token: 
 is not unique.
TokenMap::get: Token-Value pair: 
 contains separator characters: 
 or 
Invalid object data group
Out of range index in OrData::getChildHeader: 
Out of range index in OrData::getChild: 
Invalid scalar property group
Attempted to create a ScalarPropertyReader from a non-array property type
_ai_AlembicVersion
Invalid array property group
Attempted to create a ArrayPropertyReader from a non-array property type
Invalid sample index: 
, should be between 0 and 
OCameraSchema::set()
Number of Film Back Xform Ops differ expected: 
 got: 
Film Back Xform Operation type differs from initial sample at index: 
OCameraSchema::setTimeSampling( uint32_t )
OCameraSchema::init()
OCameraSchema::getArbGeomParams()
OCameraSchema::getUserProperties()
Incorrect number of time samples specified, expected 
, got: 
Sample 
 value: 
 is not greater than the previous sample: 
Cyclic samples provided are greater than the time per cycle. Expected: 
 Found: 
Out-of-range acyclic index: 
, range [0-
should be cyclic
Time per cycle must be greater than 0 
and can not be ACYCLIC_TIME_PER_CYCLE.
ERROR: EXCEPTION:
ERROR: UNKNOWN EXCEPTION
OPointsSchema::set()
Sample 0 must have valid data for points and ids
OPointsSchema::setTimeSampling( uint32_t )
OPointsSchema::init()
Invalid archive
Invalid data
Invalid parent
Invalid header
OArchive::addTimeSampling
OArchive::getTimeSampling
OArchive::getTop()
IScalarProperty::getNumSamples()
IScalarProperty::isConstant()
IScalarProperty::getTimeSampling()
IScalarProperty::get()
IScalarProperty::getParent()
IScalarProperty::init()
Could not open as Ogawa file: 
Ogawa file not cleanly closed while being written: 
Could not open as Ogawa file from provided streams.
Ogawa streams not cleanly closed while being written. 
Invalid Alembic file.
Unsupported file version detected: 
Unsupported Alembic version detected: 
Invalid property header
Invalid group
Attempted to create a ArrayPropertyWriter from a non-array property type
Can not set more samples than we have times for when using Acyclic sampling.
Can't set from previous sample before any samples have been written
Can not write more samples than we have times for when using Acyclic sampling.
DataType on ArraySample iSamp: 
, does not match the DataType of the Array property: 
Already have written more samples than we have times for when using Acyclic sampling.
IXformSchema::init()
.inherits
isNotConstantIdentity
.animChans
.ops
IXformSchema::getTimeSampling()
IXformSchema::getNumSamples()
IXformSchema::get()
IXformSchema::getInheritsXforms()
ICompoundProperty::getNumProperties()
ICompoundProperty::getPropertyHeader()
ICompoundProperty::getParent()
ICompoundProperty::init()
invalid parent
Alembic 
 (built 
Feb 12 2022
04:21:40)
OPolyMeshSchema::set()
OPolyMeshSchema::setTimeSampling( uint32_t )
OPolyMeshSchema::init()
Cannot convert the data to or from a string, or wstring.
Incorrect data, expected to be empty or to have a key and data
ReadObjectHeaders Invalid data at index 
Read invalid POD type: 
IObject::getHeader()
IObject::getArchive()
IObject::getParent()
IObject::getNumChildren()
IObject::getChildHeader()
IObject::getProperties()
IObject::isInstanceRoot()
IObject::instanceSourcePath()
IObject::init()
isInstance
.instanceSource
OObject::getArchive()
OObject::getChildHeader()
OObject::getProperties()
OObject::init( OArchive )
OObject::init()
Invalid parent in OrImpl(Object)
Invalid header in OrImpl(Object)
Invalid archive in OrImpl(Object)
Invalid archive in OrImpl(Archive)
Invalid data in OrImpl(Archive)
Invalid header in OrImpl(Archive)
CpwImpl::getPropertyHeader: 
Invalid property header ptr in CpwImpl
Already have a property named: 
createScalarProperty, illegal DataType provided.
createArrayProperty, illegal DataType provided.
Invalid property requested in CpwData::fillHash
ICameraSchema::init()
.core
.filmBackOps
.filmBackChannels
ICameraSchema::get()
OXformSchema::set()
Invalid sample topology!
OXformSchema::init()
OXformSchema::getArbGeomParams()
OXformSchema::getUserProperties()
OXformSchema::setTimeSampling( uint32_t )
Ogawa IStreams::read failed.
OCurvesSchema::set()
OCurvesSchema::selectiveSet()
OCurvesSchema::setTimeSampling( uint32_t )
OCurvesSchema::init()
IArchive::getName()
IArchive::getTop()
IArchive:::getTimeSampling
IArchive:::getArchiveVersion
Invalid object
Invalid compound data
Invalid parent object
Invalid parent in CprImpl(Compound)
invalid header in CprImpl(Compound)
Tried to create compound property with the wrong property type: 
Invalid object in CprImpl::CprImpl(Compound)
Invalid object in CprImpl(Object)
Invalid data in CprImpl(Object)
invalid compound data group
Out of range index in 
CprData::getPropertyHeader: 
Tried to read a scalar property from a non-scalar: 
, type: 
Scalar Property not backed by a valid group.
Tried to read an array property from a non-array: 
Array Property not backed by a valid group.
Tried to read a compound property from a non-compound: 
Compound Property not backed by a valid group.
IFaceSetSchema::init()
IFaceSetSchema::getFaceExclusivity
.facesExclusive
IArrayProperty::getNumSamples()
IArrayProperty::getTimeSampling()
IArrayProperty::get()
IArrayProperty::init()
Can't calculate key for: 
Invalid parent group
Out of range index in OwData::getChildHeader: 
Invalid child header: 
Already have an Object named: 
Object not given a name, parent is: 
Object has illegal name: 
Invalid property index requested in OwData::fillHash
OSubDSchema::set()
Sample 0 must have valid data for all mesh components
.faceVaryingInterpolateBoundary
.faceVaryingPropagateCorners
OSubDSchema::setTimeSampling( uint32_t )
OSubDSchema::init()
OSubDSchema::initCreases()
OSubDSchema::initCorners()
OSubDSchema::initHoles()
OPolyMeshSchema::selectiveSet()
OBaseProperty::getObject()
Invalid DataType in TypedArraySample. Expected: 
, but got: 
OTypedGeomParam::setTimeSampling( uint32_t )
OCompoundProperty::init()
Cannot mix addOp() and set<Foo>() methods.
Cannot update mismatched op-type in already-setted 
XformSample!
OScalarProperty::getNumSamples()
OScalarProperty::set()
OScalarProperty::setFromPrevious()
OScalarProperty::setTimeSampling(uint32_t)
OScalarProperty::init(p, n)
ICurvesSchema::init()
ICurvesSchema::get()
Invalid index specified, must be 0-15 not: 
Invalid index in CameraSample: 
NULL Impl Ptr
Illegal NULL character found in string data 
Illegal NULL character found in wstring data
CopyWrittenData() passed a bogus ref
CopyWrittenData() passed in a bogus OGroupPtr
Illegal Sampling!
Num Samples: 
First Changed Index: 
Last Changed Index: 
No TimeSamples to write!
OArrayProperty::getNumSamples()
OArrayProperty::set()
OArrayProperty::setFromPrevious()
OArrayProperty::setTimeSampling(uint32_t)
OArrayProperty::init()
Attempted to create a ScalarPropertyWriter from a non-scalar property type
MDLSkinDeformer
NSCopying
MDLSkinDeformerComponent
MDLComponent
NSObject
MDLNamed
MDLTextureFilter
MDLTextureSampler
MDLMaterialProperty
MDLScatteringFunction
MDLPhysicallyPlausibleScatteringFunction
MDLMaterial
NSFastEnumeration
MDLMaterialPropertyConnection
MDLMaterialPropertyNode
MDLMaterialPropertyGraph
MDLMorphDeformer
MDLMorphDeformerComponent
MDLAssetLoader
MDLRelativeAssetResolver
MDLAssetResolver
MDLPathAssetResolver
MDLBundleAssetResolver
MDLArchiveAssetResolver
Generators
MDLBufferView
MDLBufferViewAllocator
NSSecureCoding
NSCoding
MDLMeshBufferView
MDLMeshBuffer
MDLMeshBufferViewAllocator
MDLMeshBufferAllocator
_MDLProbeCluster
AssetLoaderProtocol
MDLAsset
MDLLightBaking
MDLLight
MDLPhysicallyPlausibleLight
MDLAreaLight
MDLPhotometricLight
MDLTransformRotateXOp
MDLTransformOp
MDLTransformRotateYOp
MDLTransformRotateZOp
MDLTransformTranslateOp
MDLTransformRotateOp
MDLTransformScaleOp
MDLTransformOrientOp
MDLTransformMatrixOp
MDLTransformComponent
MDLTransformStack
MDLLightProbe
MDLVolumeGrid
ExportUSDZ
MDLSubmeshTopology
MDLSubmesh
MDLSubmeshProxy
MDLCamera
MDLStereoscopicCamera
MDLInteractiveCameraController
MDLJointAnimation
MDLVoxelArray
MDLVertexBufferLayout
MDLVertexAttribute
MDLVertexDescriptor
MDLMatrix4x4Array
MDLAnimatedValue
MDLAnimatedScalarArray
MDLAnimatedVector3Array
MDLAnimatedQuaternionArray
MDLAnimatedScalar
MDLAnimatedVector2
MDLAnimatedVector3
MDLAnimatedVector4
MDLAnimatedQuaternion
MDLAnimatedMatrix4x4
MDLVertexAttributeData
MDLMesh
Modifiers
Deprecated
MDLAnimationRig
MDLMeshProxy
MDLSkeleton
MDLPackedJointAnimation
MDLAnimationBindComponent
MDLMemoryMappedData
MDLScene
MDLTransform
_MDL_DarwinHelper__internal
MDLMeshBufferMap
MDLMeshBufferZoneDefault
MDLMeshBufferZone
MDLMeshBufferData
MDLMeshBufferDataAllocator
MDLMeshBufferAllocatorDefault
MDLObject
MDLObjectContainer
MDLObjectContainerComponent
MDLTexture
MDLNoiseTexture
MDLURLTexture
MDLCheckerboardTexture
MDLColorSwatchTexture
MDLSkyCubeTexture
MDLNormalMapTexture
stringWithUTF8String:
URLWithString:
componentsWithURL:resolvingAgainstBaseURL:
queryItems
countByEnumeratingWithState:objects:count:
name
isEqualToString:
value
UTF8String
allocWithZone:
initWithJointPaths:jointBindTransforms:meshBindTransform:
init
copy
count
initWithBytes:length:
length
bytes
copyWithZone:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
copyJointBindTransformsInto:maxCount:
jointPaths
jointBindTransforms
meshBindTransform
T@"NSArray",R,N
T@"NSData",R,N
T{?=[4]},R,N
initWithJointPaths:jointBindTransforms:count:meshBindTransform:
.cxx_destruct
_jointPaths
_jointBindTransforms
_meshBindTransform
T@"NSArray",R,N,V_jointPaths
T@"NSData",R,N,V_jointBindTransforms
T{?=[4]},R,N,V_meshBindTransform
initWithBytesNoCopy:length:freeWhenDone:
newBufferWithData:type:
setName:
T@"NSString",C,N
stringByAppendingString:
dataWithBytesNoCopy:length:freeWhenDone:
attributes
objectAtIndexedSubscript:
setFormat:
setOffset:
setBufferIndex:
layouts
setStride:
stringWithFormat:
initWithName:scatteringFunction:
propertyWithSemantic:
setFloatValue:
initWithIndexBuffer:indexCount:indexType:geometryType:material:
arrayWithObjects:count:
initWithVertexBuffer:vertexCount:descriptor:submeshes:
addNormalsWithAttributeNamed:creaseThreshold:
boundingBox
boundingBoxAtTime:
vertexAttributeDataForAttributeNamed:asFormat:
dataStart
stride
bufferSize
indexBuffer
indexCount
geometryType
indexType
topology
faceTopology
faceCount
vertexCount
material
transform
matrix
submeshes
children
setMagFilter:
setMinFilter:
setMipFilter:
sWrapMode
setSWrapMode:
tWrapMode
setTWrapMode:
rWrapMode
setRWrapMode:
minFilter
magFilter
mipFilter
TQ,N,VsWrapMode
TQ,N,VtWrapMode
TQ,N,VrWrapMode
TQ,N,VminFilter
TQ,N,VmagFilter
TQ,N,VmipFilter
texture
setTexture:
hardwareFilter
setHardwareFilter:
setTransform:
mappingChannel
setMappingChannel:
textureComponents
setTextureComponents:
TQ,N,VmappingChannel
Tq,N,VtextureComponents
T@"MDLTexture",&,N,Vtexture
T@"MDLTextureFilter",&,N,VhardwareFilter
T@"MDLTransform",&,N,Vtransform
setColor:
stringWithString:
clear
initWithName:semantic:
type
raise:format:
dealloc
color
stringValue
URLValue
textureSamplerValue
floatValue
luminance
float2Value
float3Value
float4Value
matrix4x4
encodeBytes:length:forKey:
decodeBytesForKey:returnedLength:
_encodeVector:withCoder:forKey:
_decodeVectorWithCoder:forKey:
encodeObject:forKey:
_encodeMatrixPropertyWithCoder:forKey:
encodeBuffer:withCoder:forKey:
encodeInteger:forKey:
decodeObjectOfClass:forKey:
_decodeMatrixPropertyWithCoder:forKey:
decodeBufferWithCoder:forKey:
decodeIntegerForKey:
decodeMaterialPropertyWithCoder:forKey:allocator:
semantic
setSemantic:
initWithName:semantic:float:
initWithName:semantic:float2:
initWithName:semantic:float3:
initWithName:semantic:float4:
initWithName:semantic:matrix4x4:
initWithName:semantic:URL:
initWithName:semantic:string:
initWithName:semantic:textureSampler:
initWithName:semantic:float4WithSRGBA:
initWithName:semantic:color:
initWithName:buffer:stride:
initWithName:buffer:
setProperties:
bufferData
setStringValue:
setURLValue:
setTextureSamplerValue:
setLuminance:
setFloat2Value:
setFloat3Value:
setFloat4Value:
setMatrix4x4Value:
encodeMaterialPropertyWithCoder:forKey:allocator:
setType:
setMatrix4x4:
isDefaultValue
setIsDefaultValue:
_string
_name
_url
_textureSampler
_float
_matrix
_color
_buffer
_stride
_semantic
_node
_overrider
_overridee
_isDefaultValue
_type
_matrix4x4
TB,N,V_isDefaultValue
T@"MDLBufferView",R,N
TQ,R,N
TQ,N
TQ,N,V_type
T@"NSURL",C,N
T@"MDLTextureSampler",&,N
T^{CGColor=},N
Tf,N
T{?=[4]},N,V_matrix4x4
baseColor
emission
specular
materialIndexOfRefraction
interfaceIndexOfRefraction
normal
ambientOcclusion
ambientOcclusionScale
.cxx_construct
_baseColor
_bsdf
_emission
_specular
_materialIndexOfRefraction
_interfaceIndexOfRefraction
_normal
_ambientOcclusion
_ambientOcclusionScale
T@"NSString",C,N,V_name
T@"MDLMaterialProperty",R,&,N,V_baseColor
T@"MDLMaterialProperty",R,&,N,V_emission
T@"MDLMaterialProperty",R,&,N,V_specular
T@"MDLMaterialProperty",R,&,N,V_materialIndexOfRefraction
T@"MDLMaterialProperty",R,&,N,V_interfaceIndexOfRefraction
T@"MDLMaterialProperty",R,&,N,V_normal
T@"MDLMaterialProperty",R,&,N,V_ambientOcclusion
T@"MDLMaterialProperty",R,&,N,V_ambientOcclusionScale
version
subsurface
metallic
specularAmount
specularTint
roughness
anisotropic
anisotropicRotation
sheen
sheenTint
clearcoat
clearcoatGloss
_physicalBSDF
_subsurface
_metallic
_specularAmount
_specularTint
_roughness
_anisotropic
_anisotropicRotation
_sheen
_sheenTint
_clearcoat
_clearcoatGloss
Tq,R,N
T@"MDLMaterialProperty",R,&,N,V_subsurface
T@"MDLMaterialProperty",R,&,N,V_metallic
T@"MDLMaterialProperty",R,&,N,V_specularAmount
T@"MDLMaterialProperty",R,&,N,V_specularTint
T@"MDLMaterialProperty",R,&,N,V_roughness
T@"MDLMaterialProperty",R,&,N,V_anisotropic
T@"MDLMaterialProperty",R,&,N,V_anisotropicRotation
T@"MDLMaterialProperty",R,&,N,V_sheen
T@"MDLMaterialProperty",R,&,N,V_sheenTint
T@"MDLMaterialProperty",R,&,N,V_clearcoat
T@"MDLMaterialProperty",R,&,N,V_clearcoatGloss
valueForKey:
addObject:
resolveAssetNamed:
objectForKey:
textureNamed:assetResolver:
setObject:forKeyedSubscript:
loadTexturesUsingArchiveAssetResolver:cache:
resolveTexturesWithResolver:
textureWithURL:
objectForKeyedSubscript:
loadTexturesUsingResolver:cache:
setScatteringFunction:
baseMaterial
propertyNamed:
array
propertiesWithSemantic:
removeObject:
decodeMaterialWithCoder:allocator:
scatteringFunction
loadTexturesUsingResolver:
initWithName:physicallyPlausibleBSDF:
conformToMatProperties
setProperty:
removeProperty:
removeAllProperties
bsdf
encodeMaterialWithCoder:allocator:
setBaseMaterial:
materialFace
setMaterialFace:
_userProperties
_builtinProperties
_scatteringFunction
_baseMaterial
_materialFace
T@"MDLScatteringFunction",R,&,N
T@"MDLMaterial",&,N,V_baseMaterial
TQ,N,V_materialFace
initWithOutput:input:
input
output
_input
_output
T@"MDLMaterialProperty",R,W,N,V_output
T@"MDLMaterialProperty",R,W,N,V_input
containsObject:
arrayWithArray:
initWithInputs:outputs:evaluationFunction:
evaluationFunction
setEvaluationFunction:
inputs
outputs
_inputs
_outputs
_inputNodes
_evaluationFunction
T@?,C,N,V_evaluationFunction
T@"NSArray",R,N,V_inputs
T@"NSArray",R,N,V_outputs
setObject:forKey:
initWithNodes:connections:
evaluate
nodes
connections
_nodes
_connections
_finalNodes
T@"NSArray",R,N,V_nodes
T@"NSArray",R,N,V_connections
initWithOther:
targetShapes
shapeSetTargetWeights
shapeSetTargetCounts
weights
unsignedIntValue
initWithElementCount:
numberWithFloat:
numberWithUnsignedInt:
T@"MDLAnimatedScalarArray",R,N
initWithTargetShapes:shapeSetTargetWeights:shapeSetTargetCounts:
initWithTargetShapes:shapeSetTargetWeights:count:shapeSetTargetCounts:count:
copyShapeSetTargetWeightsInto:maxCount:
copyShapeSetTargetCountsInto:maxCount:
setWeights:
targetWeights
setTargetWeights:
targetCounts
setTargetCounts:
_targetShapes
_weights
_targetWeights
_targetCounts
T@"MDLAnimatedScalarArray",&,N,V_weights
T@"NSData",&,N,V_targetWeights
T@"NSData",&,N,V_targetCounts
T@"NSArray",R,N,V_targetShapes
initWithBufferAllocator:
dataWithBytes:length:
addAttributeWithName:format:type:data:stride:
allocator
initWithName:indexBuffer:indexCount:indexType:geometryType:material:topology:
setVertexCount:
setSubmeshes:
fileURLWithPath:
lastPathComponent
path
stringByDeletingLastPathComponent
cStringUsingEncoding:
vertexAttributeDataForAttributeNamed:
format
stringByAppendingFormat:
writeToURL:
resolver
stringWithCString:encoding:
absoluteString
initWithCString:encoding:
bufferAllocator
setFaceTopology:
setFaceCount:
objectAtIndex:
numberWithUnsignedInteger:
initWithName:indexBuffer:indexCount:indexType:faceIndexing:geometryType:material:topology:
setPackedOffsets
setPackedStrides
_conformVertexBuffers:error:
vertexDescriptor
newBufferFromZone:data:type:
newBufferFromZone:length:type:
newBuffer:type:
initWithVertexBuffers:vertexCount:descriptor:submeshes:
loadURL:
initWithExtension:
_extension
isAbsolutePath
URLByDeletingLastPathComponent
URLByAppendingPathComponent:
canResolveAssetNamed:
initWithAsset:
asset
setAsset:
_asset
T@"MDLAsset",W,N,V_asset
hasSuffix:
fileURLWithPath:isDirectory:
setPath:
initWithPath:
_path
URLForResource:withExtension:
initWithBundle:
_bundle
T@"NSString",C,N,V_path
enumerateKeysAndObjectsUsingBlock:
removeObjectForKey:
initWithURL:
addResolvedAssetNamed:offset:fileSize:
resolveInsideArchiveWithAssetNamed:
assetNamesInArchive
removeAssetNamed:
data
setData:
_archiveURL
_archiveDictionary
_rootUSDPath
_data
T@"NSData",&,N,V_data
initWithLength:
mutableBytes
currentProgress
completedUnitCount
lock
unlock
setCompletedUnitCount:
initWithURL:vertexDescriptor:bufferAllocator:
initConeWithExtent:segments:inwardNormals:cap:geometryType:allocator:
newEllipticalConeWithHeight:radii:radialSegments:verticalSegments:geometryType:inwardNormals:allocator:
_createWithVertexBuffer:vertexCount:descriptor:submeshes:
initBoxWithExtent:segments:inwardNormals:geometryType:allocator:
initIcosahedronWithExtent:inwardNormals:geometryType:allocator:
initHemisphereWithExtent:segments:inwardNormals:cap:geometryType:allocator:
initSphereWithExtent:segments:inwardNormals:geometryType:allocator:
initMeshBySubdividingMesh:submeshIndex:subdivisionLevels:allocator:
newBoxWithDimensions:segments:geometryType:inwardNormals:allocator:
newIcosahedronWithRadius:inwardNormals:geometryType:allocator:
newIcosahedronWithRadius:inwardNormals:allocator:
newEllipsoidWithRadii:radialSegments:verticalSegments:geometryType:inwardNormals:hemisphere:allocator:
newSubdividedMesh:submeshIndex:subdivisionLevels:
initWithBytesNoCopy:length:offset:regionIndex:allocator:
_length
_offset
_regionIndex
_allocator
_writable
Tr^v,R,N
iosurface
encodeXPCObject:forKey:
decodeXPCObjectForKey:
initWithCapacity:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithSharedRegionsNoCopy:
newBufferViewAtRegionIndex:length:offset:
newBufferViewAtRegionIndex:
encodeBuffers:withCoder:forKey:
decodeBuffersWithCoder:forKey:
_sharedRegions
_owned
_regionIndices
fillData:offset:
T@"<MDLMeshBufferAllocator>",R,&,N
T@"<MDLMeshBufferZone>",R,&,N
initWithBufferViewNoCopy:type:
encodeMeshBuffer:withCoder:forKey:
decodeMeshBufferWithCoder:forKey:
newZone:
newZoneForBuffersWithSize:andType:
newBufferViewAtRegionIndex:type:length:offset:
newBufferViewAtRegionIndex:type:
encodeMeshBuffers:withCoder:forKey:
decodeMeshBuffersWithCoder:forKey:
initCapsuleWithExtent:cylinderSegments:hemisphereSegments:inwardNormals:geometryType:allocator:
newCapsuleWithHeight:radii:radialSegments:verticalSegments:hemisphereSegments:geometryType:inwardNormals:allocator:
probes
centroid
isEqualToCluster:
position
isEmpty
calculateCentroidNotIncludingSamplesinArray:
setCentroid:
setProbes:
_probes
_centroid
T,V_centroid
T@"NSMutableSet",&,V_probes
masters
setMasters:
setComponent:forProtocol:
componentConformingToProtocol:
objectEnumerator
allObjects
isSubclassOfClass:
initWithString:
recursiveDescription
appendString:
enumerateChildObjectsOfClass:root:usingBlock:stopPointer:
enumerateChildObjectsOfClass:usingBlock:stopPointer:
_bounds
childObjectsOfClass:
minimumTime
maximumTime
lowercaseString
meters
_commonInit
defaultManager
removeItemAtURL:error:
offset
bufferIndex
time
setVertexDescriptor:
boolValue
doubleValue
pathExtension
centimeters
initWithUTF8String:
resolveTextures
stringByStandardizingPath
initWithContentsOfURL:options:error:
initWithServiceName:
loadURL:extensionToken:withReply:
interfaceWithProtocol:
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
resume
localizedDescription
synchronousRemoteObjectProxyWithErrorHandler:
initWithIESProfile:
generateCubemapFromLight:
generateSphericalHarmonicsFromLight:
initWithFormat:
numberWithBool:
initWithURL:options:error:
initWithURL:vertexDescriptor:bufferAllocator:preserveTopology:error:
initWithURL:bufferAllocator:preserveIndexing:error:
exportAssetToURL:error:
characterSetWithCharactersInString:
stringByTrimmingCharactersInSet:
componentsSeparatedByString:
substringFromIndex:
objectAtPath:
canExportFileExtension:
canImportFileExtension:
originals
setOriginals:
components
loadTextures
startTime
endTime
setStartTime:
setEndTime:
initWithData:name:vertexDescriptor:bufferAllocator:preserveTopology:error:
initThroughSCNKitBridgeWithURL:preserveTopology:error:
exportAssetToURL:
objects
animations
setAnimations:
_temporaryFolderURL
set_temporaryFolderURL:
frameInterval
setFrameInterval:
upAxis
setUpAxis:
setResolver:
_timeCodesPerSecond
set_timeCodesPerSecond:
unitLength
setUnitLength:
metersPerUnit
setMetersPerUnit:
extents
setExtents:
_URL
_objects
_masters
_animations
_startTime
_endTime
_upAxis
_metersPerUnit
_isSceneKitBridged
_components
_frameInterval
_resolver
_bufferAllocator
_vertexDescriptor
__timeCodesPerSecond
_unitLength
_extents
T{MDLAABB=},R,N
Td,N,V__timeCodesPerSecond
T@"NSURL",&,N,V_temporaryFolderURL
T@"NSUnitLength",&,N,V_unitLength
Tf,N,V_metersPerUnit
T@"MDLAnimatedVector3Array",&,N,V_extents
T{?=},R,N
Td,N,V_frameInterval
Td,N
T,N,V_upAxis
T@"NSURL",R,&,N
T@"<MDLAssetResolver>",&,N,V_resolver
T@"<MDLMeshBufferAllocator>",R,&,N,V_bufferAllocator
T@"MDLVertexDescriptor",R,&,N,V_vertexDescriptor
T@"<MDLObjectContainerComponent>",&,N,V_masters
T@"<MDLObjectContainerComponent>",&,N
T@"<MDLObjectContainerComponent>",&,N,V_animations
sphericalHarmonicsCoefficientsAtPosition:
initWithIdentity
setTranslation:
sphericalHarmonicsLevel
calculateIrradianceGradientUsingSamples:ofSize:fromSH:withLevel:
indexOfObject:
removeObjectsInArray:
placeLightProbesWithDensity:heuristic:usingIrradianceDataSource:
instance
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
colorSpace
setColorSpace:
setLightType:
rtLight
irradianceAtPoint:
irradianceAtPoint:colorSpace:
lightType
_light
_colorSpace
_cgColorSpace
_lightType
TQ,N,V_lightType
setInnerConeAngle:
setOuterConeAngle:
setAttenuationStartDistance:
setAttenuationEndDistance:
setAttenuationFalloffExponent:
setLumens:
setColorByTemperature:
lumens
innerConeAngle
outerConeAngle
attenuationStartDistance
attenuationEndDistance
attenuationFalloffExponent
_lumens
_innerConeAngle
_outerConeAngle
_attenuationStartDistance
_attenuationEndDistance
_attenuationFalloffExponent
Tf,N,V_attenuationFalloffExponent
Tf,N,V_lumens
Tf,N,V_innerConeAngle
Tf,N,V_outerConeAngle
Tf,N,V_attenuationStartDistance
Tf,N,V_attenuationEndDistance
setAreaRadius:
setAspect:
setSuperEllipticPower:
areaRadius
superEllipticPower
aspect
_areaRadius
_aspect
_superEllipticPower
Tf,N,V_areaRadius
T,N,V_superEllipticPower
Tf,N,V_aspect
dataWithData:
dataWithContentsOfURL:
computeLumens
computeInnerAngle
translation
initWithData:topLeftOrigin:name:dimensions:rowStride:channelCount:channelEncoding:isCube:
rotationMatrixAtTime:
generateTexture:
dimensions
texelDataWithBottomLeftOrigin
setLength:
sphericalHarmonicsCoefficients
setSphericalHarmonicsCoefficients:
computeSceneKitRenderingTexture:
evaluatedColorFromSHVector:
lightCubeMap
_iesLight
_sphericalHarmonicsCoefficients
_lightCubeMap
_sphericalHarmonicsLevel
T@"MDLTexture",R,&,N,V_lightCubeMap
TQ,R,N,V_sphericalHarmonicsLevel
T@"NSData",R,C,N
setMatrix:
initPlaneWithExtent:segments:geometryType:allocator:
newPlaneWithDimensions:segments:geometryType:allocator:
initWithName:format:offset:bufferIndex:
numberWithInteger:
setInitializationValue:
addOrReplaceAttribute:
initializationValue
removeAllObjects
attributeNamed:
integerValue
setObject:atIndexedSubscript:
addAttributeWithName:format:
resetWithAnimatedValue:
setEdgeCreaseIndices:
setEdgeCreaseCount:
setEdgeCreases:
setVertexCreaseIndices:
setVertexCreaseCount:
setVertexCreases:
setSubdivisionScheme:
timeSampleCount
elementCount
getTimes:maxCount:
getDoubleArray:maxCount:atTime:
vertexCreaseIndices
vertexCreases
vertexCreaseCount
edgeCreaseIndices
edgeCreases
edgeCreaseCount
holes
holeCount
vertexBuffers
addMatrixOp:inverse:
animatedValue
setFloat4x4:atTime:
defaultCStringEncoding
addRotateXOp:inverse:
resetWithUsdAttribute:timeScale:
resetWithUsdAttribute:timeScale:time:
addRotateYOp:inverse:
addRotateZOp:inverse:
addTranslateOp:inverse:
addScaleOp:inverse:
addRotateOp:order:inverse:
addOrientOp:inverse:
floatAtTime:
doubleAtTime:
float4x4AtTime:
double4x4AtTime:
IsInverseOp
T@"NSString",R,N
initWithName:inverse:data:
inverse
setInverse:
_inverse
_animatedValue
TB,N,V_inverse
T@"NSString",R,N,V_name
T@"MDLAnimatedScalar",R,N,V_animatedValue
float3AtTime:
double3AtTime:
T@"MDLAnimatedVector3",R,N,V_animatedValue
initWithName:inverse:order:data:
order
setOrder:
_order
TQ,N,V_order
floatQuaternionAtTime:
doubleQuaternionAtTime:
T@"MDLAnimatedQuaternion",R,N,V_animatedValue
T@"MDLAnimatedMatrix4x4",R,N,V_animatedValue
keyTimes
addObjectsFromArray:
orderedSetWithArray:
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
animatedVector3WithName:shouldCreateIfMissing:
animatedScalarWithName:shouldCreateIfMissing:
animatedMatrix4x4WithName:shouldCreateIfMissing:
animatedQuaternionWithName:shouldCreateIfMissing:
localTransformAtTime:
setLocalTransform:
clearTransformStack
resetsTransform
setResetsTransform:
setLocalTransform:forTime:
globalTransformWithObject:atTime:
T{?=[4]},N
TB,N
Td,R,N
T@"NSArray",R,C,N
parent
localTransformWithObject:atTime:
arrayWithCapacity:
animation
setKeyPath:
numberWithDouble:
setValues:
setFillMode:
setKeyTimes:
setBeginTime:
setDuration:
setAdditive:
setRemovedOnCompletion:
setRepeatCount:
isScaleRotateTransformOrder
decomposedTransformAnimation
valueWithCATransform3D:
beginTime
animatedVector4WithName:shouldCreateIfMissing:
animatedValueWithName:
transformAnimation
transformOps
setTransformOps:
animatedValues
setAnimatedValues:
_resetsTransform
_transformOps
_animatedValues
T@"NSMutableArray",C,N,V_transformOps
T@"NSMutableDictionary",&,N,V_animatedValues
T@"CAAnimation",R,N
TB,N,V_resetsTransform
valueWithCGRect:
sampleSHAt:usingCoefficients:withLevel:
initWithReflectiveTexture:irradianceTexture:
generateIrradianceTextureFromReflective
generateSphericalHarmonicsFromIrradiance:
reflectiveTexture
irradianceTexture
_reflectiveTexture
_irradianceTexture
_transform
T@"MDLTexture",R,&,N,V_reflectiveTexture
T@"MDLTexture",R,&,N,V_irradianceTexture
raytraceSceneWithCamera:reflection:irradiance:size:
replaceBytesInRange:withBytes:length:
irradianceTextureCubeWithTexture:name:dimensions:roughness:
lightProbeWithTextureSize:forLocation:lightsToConsider:objectsToConsider:reflectiveCubemap:irradianceCubemap:
initWithAsset:divisions:
initWithObject:divisions:
initWithAsset:divisions:interiorWidth:exteriorWidth:patchRadius:
meshWithStyle:
trianglesIntersectingRayWithOrigin:direction:count:
_octree
initWithName:jointPaths:
translations
rotations
scales
resetWithUsdAttribute:time:
jointRestTransforms
setSkeleton:
setJointAnimation:
setGeometryBindTransform:
setJointPaths:
initWithName:indexBuffer:indexCount:indexType:geometryType:material:
getFloatArray:maxCount:
setFloatArray:count:atTime:
initWithMatrix:
makeVerticesUniqueAndReturnError:
fractionCompleted
updateAttributeNamed:withData:
progressWithTotalUnitCount:
setCancellable:
setPausable:
becomeCurrentWithPendingUnitCount:
resignCurrent
convertToUSDZ:writeToURL:
convertToUSDZWithURL:
isValidUSDZResource:
decodeTopologyWithCoder:allocator:
initWithSubmesh:
encodeTopologyWithCoder:allocator:
setHoles:
setHoleCount:
_faceTopology
_faceCount
_vertexCreaseIndices
_vertexCreases
_vertexCreaseCount
_edgeCreaseIndices
_edgeCreases
_edgeCreaseCount
_holes
_holeCount
T@"<MDLMeshBuffer>",&,N,V_faceTopology
TQ,N,V_faceCount
T@"<MDLMeshBuffer>",&,N,V_vertexCreaseIndices
T@"<MDLMeshBuffer>",&,N,V_vertexCreases
TQ,N,V_vertexCreaseCount
T@"<MDLMeshBuffer>",&,N,V_edgeCreaseIndices
T@"<MDLMeshBuffer>",&,N,V_edgeCreases
TQ,N,V_edgeCreaseCount
T@"<MDLMeshBuffer>",&,N,V_holes
TQ,N,V_holeCount
null
dataWithLength:
initWithMDLSubmesh:indexType:geometryType:
indexBufferAsIndexType:
debugPrintToFile:
boundingBoxForMesh:
setMaterial:
setTopology:
faceIndexing
setFaceIndexing:
_material
_indexCount
_indexBuffer
_geometryType
_indexType
_topology
_faceIndexing
T@"NSArray",&,N,V_faceIndexing
T@"<MDLMeshBuffer>",R,&,N,V_indexBuffer
TQ,R,N,V_indexCount
TQ,R,N,V_indexType
Tq,R,N,V_geometryType
T@"MDLMaterial",&,N,V_material
T@"MDLSubmeshTopology",&,N,V_topology
appendFormat:
apertureBladeCount
rtCamera
getViewMatrixAtTime:
projectionMatrix
getProjectionMatrixAtTime:
rayTo:forViewPort:
focalLength
setFocalLength:
focusDistance
setFocusDistance:
aperture
setAperture:
sensorVerticalAperture
setSensorVerticalAperture:
sensorEnlargement
setSensorEnlargement:
sensorShift
setSensorShift:
setFov:
fieldOfView
setFieldOfView:
sensorAspect
setSensorAspect:
circleOfConfusionForDistance:
zNear
setZNear:
zFar
setZFar:
nearVisibilityDistance
setNearVisibilityDistance:
farVisibilityDistance
setFarVisibilityDistance:
bokehKernelWithSize:
exposure
setExposure:
exposureCompression
setExposureCompression:
frameBoundingBox:setNearAndFar:
lookAt:
lookAt:from:
worldToMetersConversionScale
setWorldToMetersConversionScale:
focalDistanceAnimation
setFocalDistanceAnimation:
fStopAnimation
setFStopAnimation:
focalLengthAnimation
setFocalLengthAnimation:
apertureAnimation
setApertureAnimation:
apertureAspectAnimation
setApertureAspectAnimation:
projection
setProjection:
barrelDistortion
setBarrelDistortion:
fisheyeDistortion
setFisheyeDistortion:
opticalVignetting
setOpticalVignetting:
chromaticAberration
setChromaticAberration:
fStop
setFStop:
setApertureBladeCount:
maximumCircleOfConfusion
setMaximumCircleOfConfusion:
shutterOpenInterval
setShutterOpenInterval:
flash
setFlash:
_camera
_worldToMetersConversionScale
_focalDistanceAnimation
_fStopAnimation
_focalLengthAnimation
_apertureAnimation
_apertureAspectAnimation
_barrelDistortion
_fisheyeDistortion
_opticalVignetting
_chromaticAberration
_fStop
_maximumCircleOfConfusion
_projection
_apertureBladeCount
_shutterOpenInterval
_flash
T@"CAAnimation",C,N,V_focalLengthAnimation
T@"CAAnimation",C,N,V_focalDistanceAnimation
T@"CAAnimation",C,N,V_fStopAnimation
T@"CAAnimation",C,N,V_apertureAnimation
T@"CAAnimation",C,N,V_apertureAspectAnimation
TQ,N,V_projection
Tf,N,V_worldToMetersConversionScale
Tf,N,V_barrelDistortion
Tf,N,V_fisheyeDistortion
Tf,N,V_opticalVignetting
Tf,N,V_chromaticAberration
Tf,N,V_fStop
TQ,N,V_apertureBladeCount
Tf,N,V_maximumCircleOfConfusion
Td,N,V_shutterOpenInterval
T,N,V_flash
leftViewMatrix
rightViewMatrix
leftProjectionMatrix
rightProjectionMatrix
interPupillaryDistance
setInterPupillaryDistance:
leftVergence
setLeftVergence:
rightVergence
setRightVergence:
overlap
setOverlap:
_interPupillaryDistance
_leftVergence
_rightVergence
_overlap
Tf,N,V_interPupillaryDistance
Tf,N,V_leftVergence
Tf,N,V_rightVergence
Tf,N,V_overlap
frameObject
update:
setFramingBounds:
frameBounds
framingBounds
setClickPoint:
clickPoint
targetPosition
setTargetPosition:
setPosition:
mouseMotionX:Y:
camera
setCamera:
dragPoint
setDragPoint:
trackVector
setTrackVector:
mode
setMode:
tumbleSpeed
setTumbleSpeed:
zoomSpeed
setZoomSpeed:
trackSpeed
setTrackSpeed:
targetDistance
setTargetDistance:
viewSize
setViewSize:
zoom
setZoom:
_lookAt
_clickPoint
_dragVector
_pitch
_yaw
_framingBounds
_targetElevation
_tumbleSpeed
_zoomSpeed
_trackSpeed
_targetDistance
_zoom
_dragPoint
_mode
_viewSize
_trackVector
T@"MDLStereoscopicCamera",C,N,V_camera
T,N,V_dragPoint
T,N,V_trackVector
TQ,N,V_mode
Tf,N,V_tumbleSpeed
Tf,N,V_zoomSpeed
Tf,N,V_trackSpeed
Tf,N,V_targetDistance
T{MDLAABB=},N
T,N,V_viewSize
Tf,N,V_zoom
setFloat3Array:count:atTime:
addChild:
setInstance:
setHidden:
recalculateExtents
spatialLocationOfIndex:
dilateNarrowBandInteriorWidthTo:AndExteriorWidthTo:
erodeNarrowBandInteriorWidthTo:AndExteriorWidthTo:selector:
coarseMeshUsingAllocator:
voxelIndexExtent
initWithAsset:divisions:patchRadius:
convertToSignedShellField
setVoxelsForMesh:divisions:patchRadius:
initWithData:boundingBox:voxelExtent:
voxelExistsAtIndex:allowAnyX:allowAnyY:allowAnyZ:allowAnyShell:
voxelsWithinExtent:
voxelIndices
setVoxelAtIndex:
unionWithVoxels:
intersectWithVoxels:
differenceWithVoxels:
indexOfSpatialLocation:
voxelBoundingBoxAtIndex:
isValidSignedShellField
setShellFieldInteriorThickness:
setShellFieldExteriorThickness:
coarseMesh
meshUsingAllocator:
coarseVoxelMeshWithStyle:
boxesPerLayer
initWithAsset:divisions:interiorShells:exteriorShells:patchRadius:
initWithAsset:divisions:interiorNBWidth:exteriorNBWidth:patchRadius:
setVoxelsForMesh:divisions:interiorShells:exteriorShells:patchRadius:
setVoxelsForMesh:divisions:interiorNBWidth:exteriorNBWidth:patchRadius:
shellFieldInteriorThickness
shellFieldExteriorThickness
_voxels
_extent
_voxelExtent
mortonCoder
_octreeData
_levelSet
_interiorThickness
_exteriorThickness
_originatingOffset
T{?=},R,N,V_extent
TB,R,N
Tf,N,V_interiorThickness
Tf,N,V_exteriorThickness
initWithStride:
TQ,N,V_stride
setTime:
_bufferIndex
_format
_time
_initializationValue
TQ,N,V_format
TQ,N,V_offset
TQ,N,V_bufferIndex
Td,N,V_time
T,N,V_initializationValue
initWithVertexDescriptor:
numberWithUnsignedLong:
unsignedLongValue
isEqualToArray:
encodeInt32:forKey:
encodeDouble:forKey:
decodeDoubleForKey:
_encodeVertexDescriptorAttributesWithCoder:
_encodeVertexDescriptorLayoutsWithCoder:
_decodeVertexDescriptorAttributesWithCoder:
setAttributes:
_decodeVertexDescriptorLayoutsWithCoder:
setLayouts:
decodeVertexDescriptorWithCoder:
removeAttributeNamed:
reset
encodeVertexDescriptorWithCoder:
_attributes
_layouts
T@"NSMutableArray",&,N,V_attributes
T@"NSMutableArray",&,N,V_layouts
precision
defaultVtValue
resetWithUsdAttribute:
setFloat4x4Array:count:
setDouble4x4Array:count:
getFloat4x4Array:maxCount:
getDouble4x4Array:maxCount:
_elementCount
TQ,R,N,V_elementCount
initWithDouble:
isAnimated
interpolation
setInterpolation:
_timeSampledData
_interpolation
TQ,N,V_interpolation
setDoubleArray:count:atTime:
getFloatArray:maxCount:atTime:
resetWithFloatArray:count:atTimes:count:
resetWithDoubleArray:count:atTimes:count:
getDoubleArray:maxCount:
setElementCount:
TQ,N,V_elementCount
setDouble3Array:count:atTime:
getFloat3Array:maxCount:atTime:
getDouble3Array:maxCount:atTime:
resetWithFloat3Array:count:atTimes:count:
resetWithDouble3Array:count:atTimes:count:
getFloat3Array:maxCount:
getDouble3Array:maxCount:
setFloatQuaternionArray:count:atTime:
setDoubleQuaternionArray:count:atTime:
getFloatQuaternionArray:maxCount:atTime:
getDoubleQuaternionArray:maxCount:atTime:
resetWithFloatQuaternionArray:count:atTimes:count:
resetWithDoubleQuaternionArray:count:atTimes:count:
getFloatQuaternionArray:maxCount:
getDoubleQuaternionArray:maxCount:
setFloat:atTime:
setDouble:atTime:
resetWithFloatArray:atTimes:count:
resetWithDoubleArray:atTimes:count:
setFloat2:atTime:
setDouble2:atTime:
float2AtTime:
double2AtTime:
resetWithFloat2Array:atTimes:count:
resetWithDouble2Array:atTimes:count:
getFloat2Array:maxCount:
getDouble2Array:maxCount:
setFloat3:atTime:
setDouble3:atTime:
resetWithFloat3Array:atTimes:count:
resetWithDouble3Array:atTimes:count:
setFloat4:atTime:
setDouble4:atTime:
float4AtTime:
double4AtTime:
resetWithFloat4Array:atTimes:count:
resetWithDouble4Array:atTimes:count:
getFloat4Array:maxCount:
getDouble4Array:maxCount:
setFloatQuaternion:atTime:
setDoubleQuaternion:atTime:
resetWithFloatQuaternionArray:atTimes:count:
resetWithDoubleQuaternionArray:atTimes:count:
setDouble4x4:atTime:
resetWithFloat4x4Array:atTimes:count:
resetWithDouble4x4Array:atTimes:count:
setMap:
setDataStart:
setbufferSize:
setBufferSize:
_map
_dataStart
_bufferSize
T@"MDLMeshBufferMap",&,N
T^v,N
TQ,N,V_bufferSize
initWithArray:
createSourceDataVector:attr:srcElementCount:dstElementCount:
initWithBytes:deallocator:
setVertexBuffers:
copyDataVector:toAttr:
subdivisionScheme
_submeshes
_vertexBuffers
_controlNodes
_vertexCount
_subdivisionScheme
TQ,N,V_subdivisionScheme
T@"MDLVertexDescriptor",C,N
TQ,N,V_vertexCount
T@"NSArray",&,N
T@"NSMutableArray",C,N
T@"<MDLMeshBufferAllocator>",R,&,N,V_allocator
removeObjectAtIndex:
addVertexBuffer:
_calculateTangentBasisFromPositions:positionStride:positionsBufferSize:normals:normalStride:normalsBufferSize:uvs:uvStride:uvsBufferSize:tangents:tangentsStride:tangentsBufferSize:bitagents:bitangentStride:bitangentsBufferSize:tangentFormat:selector:
replaceAttributeNamed:withData:
triangulate
_calculateFaceNormalsFromPositions:positionStride:normals:normalStride:creaseThreshold:
initWithType:length:
addAttributeWithName:format:type:data:stride:time:
addTangentBasisForTextureCoordinateAttributeNamed:tangentAttributeNamed:bitangentAttributeNamed:
addTangentBasisForTextureCoordinateAttributeNamed:normalAttributeNamed:tangentAttributeNamed:
addOrthTanBasisForTextureCoordinateAttributeNamed:normalAttributeNamed:tangentAttributeNamed:
addUnwrappedTextureCoordinatesForAttributeNamed:
flipTextureCoordinatesInAttributeNamed:
makeVerticesUnique
_enumerateSubmeshesUsingBlock:stopPointer:
submeshCount
enumerateSubmeshesUsingBlock:
controlNodeForINdex:
inverseBasePoseForIndex:
generateAmbientOcclusionTextureWithSize:raysPerSample:attenuationFactor:objectsToConsider:vertexAttributeNamed:materialPropertyNamed:
generateAmbientOcclusionVertexColorsWithRaysPerSample:attenuationFactor:objectsToConsider:vertexAttributeNamed:
generateLightMapTextureWithTextureSize:lightsToConsider:objectsToConsider:vertexAttributeNamed:materialPropertyNamed:
generateAmbientOcclusionTextureWithQuality:attenuationFactor:objectsToConsider:vertexAttributeNamed:materialPropertyNamed:
generateAmbientOcclusionVertexColorsWithQuality:attenuationFactor:objectsToConsider:vertexAttributeNamed:
generateLightMapTextureWithQuality:lightsToConsider:objectsToConsider:vertexAttributeNamed:materialPropertyNamed:
generateLightMapVertexColorsWithLightsToConsider:objectsToConsider:vertexAttributeNamed:
setWithObjects:
decodeObjectOfClasses:forKey:
mainBundle
bundleIdentifier
processInfo
processName
initCylinderWithExtent:segments:inwardNormals:topCap:bottomCap:geometryType:allocator:
newCylinderWithHeight:radii:radialSegments:verticalSegments:geometryType:inwardNormals:allocator:
_jointRestTransforms
T@"MDLMatrix4x4Array",R,N,V_jointBindTransforms
T@"MDLMatrix4x4Array",R,N,V_jointRestTransforms
_translations
_rotations
_scales
T@"MDLAnimatedVector3Array",R,N,V_translations
T@"MDLAnimatedQuaternionArray",R,N,V_rotations
T@"MDLAnimatedVector3Array",R,N,V_scales
skeleton
jointAnimation
geometryBindTransform
_skeleton
_jointAnimation
_geometryBindTransform
T@"MDLSkeleton",&,N,V_skeleton
T@"<MDLJointAnimation>",&,N,V_jointAnimation
T@"NSArray",&,N,V_jointPaths
T{?=[4]},N,V_geometryBindTransform
initWithURL:offset:length:
dataNoCopy
_file
_mappedAddr
_fileStart
_mappedFileSize
acquireLockGuard
textureData
releaseLockGuard:
hitTestRayFrom:withDirection:usingCamera:
castRayFrom:withDirection:usingCamera:result:
_sceneMutex
_sceneObjects
_sceneLights
_signature
T@"NSArray",R,&,N,V_objects
initWithTransformComponent:
shear
setShear:
scale
setScale:
rotation
setRotation:
scaleAtTime:
shearAtTime:
translationAtTime:
rotationAtTime:
setMatrix:forTime:
setRotation:forTime:
setShear:forTime:
setScale:forTime:
setTranslation:forTime:
setIdentity
initWithTransformComponent:resetsTransform:
initWithMatrix:resetsTransform:
bundleForClass:
resourcePath
_deallocator
_bytes
T^v,R,N,V_bytes
capacity
T@"<MDLMeshBufferAllocator>",R,N
initWithCapacity:allocator:
reserveMemory:allocator:
cancelMemory:
_usedCapacity
_capacity
TQ,R,N,V_capacity
initWithData:
initWithLength:data:allocator:zone:
initWithType:data:
_zone
_zoneDefault
T@"NSData",R,&,N
unsignedIntegerValue
setChildren:
setParent:
string
hidden
_parent
_instance
_hidden
_children
T@"MDLObject",W,N
T@"MDLObject",&,N,V_instance
T@"<MDLTransformComponent>",&,N
T@"<MDLObjectContainerComponent>",&,N,V_children
TB,N,V_hidden
T@"NSString",C,N,Vname
T@"NSArray",R,&,N
allocateDataAtLevel:
clearTexelData
texelDataWithTopLeftOriginAtMipLevel:create:
longValue
textureWithURL:offset:size:
textureWithData:offset:size:
textureNamed:bundle:
firstObject
_textureCubeWithSingleImageNamed:bundle:
textureCubeWithImagesNamed:bundle:
generateDataAtLevel:selector:
texelDataWithBottomLeftOriginAtMipLevel:create:
loadDataWithTopLeftOriginAtMipLevel:create:selector:
loadDataWithBottomLeftOriginAtMipLevel:create:selector:
writeToURL:level:
writeToURL:type:
writeToURL:type:level:
imageFromTextureAtLevel:
texelDataWithTopLeftOrigin:
channelCount
texelDataWithTopLeftOrigin
setTexelDataWithTopLeftOrigin:atMipLevel:
textureResourceNamed:assetResolver:
textureFromResource:
textureNamed:
textureCubeWithImagesNamed:
irradianceTextureCubeWithTexture:name:dimensions:
rowStride
isCube
setIsCube:
hasAlphaValues
setHasAlphaValues:
mipLevelCount
setTexelDataWithBottomLeftOrigin:atMipLevel:
imageFromTexture
channelEncoding
_textureData
_channelEncoding
_topLeftOriginData
_bottomLeftOriginData
_selfCreating
_alphaValuesSet
_hasAlphaValues
T,R,N
Tq,R,N,V_channelEncoding
_generateCellularNoiseAtLevel:selector:
initVectorNoiseWithSmoothness:name:textureDimensions:channelEncoding:
initScalarNoiseWithSmoothness:name:textureDimensions:channelCount:channelEncoding:grayscale:
initCellularNoiseWithFrequency:name:textureDimensions:channelEncoding:
_vectorNoise
_smoothness
_grayScale
_frequency
_noiseMode
setURL:
initWithURL:name:
setDivisions:
divisions
setColor1:
color1
setColor2:
color2
initWithDivisions:name:dimensions:channelCount:channelEncoding:color1:color2:
_divisions
_color1
_color2
initWithColorTemperatureGradientFrom:toColorTemperature:name:textureDimensions:
initWithColorGradientFrom:toColor:name:textureDimensions:
_colorTemperature1
_colorTemperature2
updateTexture
initWithName:channelEncoding:textureDimensions:turbidity:sunElevation:sunAzimuth:upperAtmosphereScattering:groundAlbedo:
setGroundColor:
groundColor
initWithName:channelEncoding:textureDimensions:turbidity:sunElevation:upperAtmosphereScattering:groundAlbedo:
turbidity
setTurbidity:
sunElevation
setSunElevation:
sunAzimuth
setSunAzimuth:
upperAtmosphereScattering
setUpperAtmosphereScattering:
groundAlbedo
setGroundAlbedo:
brightness
setBrightness:
contrast
setContrast:
saturation
setSaturation:
highDynamicRangeCompression
setHighDynamicRangeCompression:
horizonElevation
setHorizonElevation:
gamma
setGamma:
_turbidity
_sunElevation
_sunAzimuth
_upperAtmosphereScattering
_groundAlbedo
_gamma
_exposure
_brightness
_contrast
_saturation
_highDynamicRangeCompression
_highDynamicRangeCompressionLimit
_groundColor
_sky
_horizonElevation
Tf,N,V_turbidity
Tf,N,V_sunElevation
Tf,N,V_sunAzimuth
Tf,N,V_upperAtmosphereScattering
Tf,N,V_groundAlbedo
Tf,N,V_horizonElevation
Tf,N,V_gamma
Tf,N,V_exposure
Tf,N,V_brightness
Tf,N,V_contrast
Tf,N,V_saturation
T,N,V_highDynamicRangeCompression
imageWithBitmapData:bytesPerRow:size:format:colorSpace:
filterWithName:keysAndValues:
extent
contextWithOptions:
createCGImage:fromRect:
initByGeneratingNormalMapWithTexture:name:smoothness:contrast:
_sourceTexture
characterAtIndex:
rangeOfString:
contentsOfDirectoryAtPath:error:
hasPrefix:
@24@0:8^{_NSZone=}16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
Q32@0:8^{?=[4]}16Q24
{?=[4]}16@0:8
@"NSArray"16@0:8
@"NSData"16@0:8
@96@0:8@16@24{?=[4]}32
@104@0:8@16r^{?=[4]}24Q32{?=[4]}40
v16@0:8
@"NSArray"
@"NSData"
{?="columns"[4]}
v24@0:8@16
v24@0:8@"NSString"16
v24@0:8Q16
q16@0:8
v24@0:8q16
@"MDLTexture"
@"MDLTextureFilter"
@"MDLTransform"
32@0:8@16@24
{?=[4]}32@0:8@16@24
@40@0:8@16@24@32
@32@0:8@16Q24
@36@0:8@16Q24f32
@40@0:8@16Q2432
@48@0:8@16Q2432
@96@0:8@16Q24{?=[4]}32
@40@0:8@16Q24@32
@40@0:8@16Q24^{CGColor=}32
@40@0:8@16@24Q32
@32@0:8@16@24
^{CGColor=}16@0:8
v24@0:8^{CGColor=}16
f16@0:8
v20@0:8f16
16@0:8
v24@0:816
v32@0:816
v80@0:8{?=[4]}16
v48@0:816@32@40
v32@0:8@16@24
v40@0:8@16@24@32
v20@0:8B16
@"NSString"
@"NSURL"
@"MDLTextureSampler"
^{CGColor=}
@"MDLBufferView"
@"MDLMaterialPropertyNode"
@"MDLMaterialProperty"
{unique_ptr<ModelIO::BidirectionalScatteringDistributionFunction, std::default_delete<ModelIO::BidirectionalScatteringDistributionFunction>>="__ptr_"{__compressed_pair<ModelIO::BidirectionalScatteringDistributionFunction *, std::default_delete<ModelIO::BidirectionalScatteringDistributionFunction>>="__value_"^{BidirectionalScatteringDistributionFunction}}}
^{PhysicallyPlausibleDistribution=^^?{BSDFMaterialValues=^{CGColor}f^{CGColor}fffffffffffff}}
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@32@0:8@16^{PhysicallyPlausibleDistribution=^^?{BSDFMaterialValues=^{CGColor}f^{CGColor}fffffffffffff}}24
@24@0:8@16
@24@0:8Q16
^{BidirectionalScatteringDistributionFunction=^^?{BSDFMaterialValues=^{CGColor}f^{CGColor}fffffffffffff}}16@0:8
@"NSMutableArray"
@"MDLScatteringFunction"
@"MDLMaterial"
@40@0:8@16@24@?32
@?16@0:8
v24@0:8@?16
@"MDLAnimatedScalarArray"16@0:8
@56@0:8@16r^f24Q32r^I40Q48
Q32@0:8^f16Q24
Q32@0:8^I16Q24
@"MDLAnimatedScalarArray"
B24@0:8@"NSString"16
@"NSURL"24@0:8@"NSString"16
@"MDLAsset"
@"NSBundle"
v40@0:8@16Q24Q32
@"NSMutableDictionary"
@64@0:81632B40B44q48@56
@64@0:8f1620Q28Q36q44B52@56
@68@0:81632B48q52@60
@52@0:816B32q36@44
@60@0:81632B40q44@52
@40@0:8@16i24I28@32
@68@0:81632q48B56@60
@40@0:8f16B20q24@32
@32@0:8f16B20@24
@72@0:816Q32Q40q48B56B60@64
@40@0:8@16Q24Q32
r^v16@0:8
@56@0:8r^v16Q24Q32q40@48
@"MDLBufferViewAllocator"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8q16q24q32
@24@0:8q16
{vector<__IOSurface *, std::allocator<__IOSurface *>>="__begin_"^^{__IOSurface}"__end_"^^{__IOSurface}"__end_cap_"{__compressed_pair<__IOSurface **, std::allocator<__IOSurface *>>="__value_"^^{__IOSurface}}}
{vector<bool, std::allocator<bool>>="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::allocator<unsigned long>>="__value_"Q}}
{vector<long, std::allocator<long>>="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long *, std::allocator<long>>="__value_"^q}}
v32@0:8@16Q24
v32@0:8@"NSData"16Q24
@"MDLMeshBufferMap"16@0:8
@"<MDLMeshBufferAllocator>"16@0:8
@"<MDLMeshBufferZone>"16@0:8
@"MDLMeshBufferViewAllocator"
@32@0:8Q16Q24
@"<MDLMeshBufferZone>"24@0:8Q16
@"<MDLMeshBufferZone>"32@0:8@"NSArray"16@"NSArray"24
@"<MDLMeshBuffer>"32@0:8Q16Q24
@"<MDLMeshBuffer>"32@0:8@"NSData"16Q24
@"<MDLMeshBuffer>"40@0:8@"<MDLMeshBufferZone>"16Q24Q32
@"<MDLMeshBuffer>"40@0:8@"<MDLMeshBufferZone>"16@"NSData"24Q32
@48@0:8q16Q24q32q40
@32@0:8q16Q24
@68@0:81632Q40B48q52@60
@72@0:8f1620Q28Q36Q44q52B60@64
@"NSMutableSet"
v40@0:8@16@24@?32
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"NSString">32
{MDLAABB=}16@0:8
@24@0:8#16
v40@0:8#16@?24^B32
{?=}16@0:8
{?=}24@0:8d16
d16@0:8
v24@0:8d16
v32@0:8@16^@24
@60@0:8@16@24@32@40B48^@52
@40@0:8@16@24^@32
@52@0:8@16@24@32B40^@44
@36@0:8@16B24@28
@44@0:8@16@24B32^@36
B32@0:8@16^@24
@"<MDLObjectContainerComponent>"
@"NSMapTable"
@"<MDLAssetResolver>"
@"<MDLMeshBufferAllocator>"
@"MDLVertexDescriptor"
@"NSUnitLength"
@"MDLAnimatedVector3Array"
@36@0:8f16q20@28
^{RTLight=^^?^{CGColor}@i}16@0:8
^{CGColor=}32@0:816
^{CGColor=}40@0:816^{CGColorSpace=}32
^{RTLight=^^?^{CGColor}@i}
^{CGColorSpace=}
@"NSMutableData"
@56@0:81632q40@48
@48@0:81624q32@40
{?=[4]}24@0:8d16
@"MDLAnimatedScalar"
@"MDLAnimatedVector3"
@44@0:8@16B24Q28@36
@"MDLAnimatedQuaternion"
@"MDLAnimatedMatrix4x4"
v88@0:8{?=[4]}16d80
{?=[4]}32@0:8@16d24
{?=[4]}32@0:8@"MDLObject"16d24
@28@0:8@16B24
@36@0:8@16Q24B32
48@0:8^16Q24@32Q40
^{CGColor=}48@0:816@32Q40
@"<MDLTransformComponent>"
@64@0:8q16@24@32@40@48@56
@28@0:8@16i24
@40@0:8@16i24f28f32f36
^Q56@0:81632^Q48
{unique_ptr<ModelIO::SCNOctree, std::default_delete<ModelIO::SCNOctree>>="__ptr_"{__compressed_pair<ModelIO::SCNOctree *, std::default_delete<ModelIO::SCNOctree>>="__value_"^{SCNOctree}}}
@"<MDLMeshBuffer>"
@72@0:8@16@24Q32Q40q48@56@64
@80@0:8@16@24Q32Q40@48q56@64@72
@64@0:8@16@24Q32Q40q48@56
@56@0:8@16Q24Q32q40@48
@40@0:8@16Q24q32
v24@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16
{MDLAABB=}24@0:8@16
@"MDLSubmeshTopology"
^{RTCamera=^^?QQffi^f^^@{?=[4]}{?=[4]}^{RTRaySegment}ffffffffff}16@0:8
32@0:81624
f20@0:8f16
@24@0:816
v52@0:8{?=}16B48
v48@0:81632
^{RTCamera=^^?QQffi^f^^@{?=[4]}{?=[4]}^{RTRaySegment}ffffffffff}
@"CAAnimation"
v48@0:8{MDLAABB=}16
v24@0:8f16f20
{MDLAABB="maxBounds""minBounds"}
@"MDLStereoscopicCamera"
@32@0:8@16i24f28
@60@0:8@16{?=}24f56
B48@0:816B32B36B40B44
@48@0:8{?=}16
v32@0:8@16i24f28
32@0:816
{?=}32@0:816
v32@0:8f16f20:24
{vector<int, std::allocator<int>>=^i^i{__compressed_pair<int *, std::allocator<int>>=^i}}16@0:8
@40@0:8@16i24i28i32f36
v40@0:8@16i24i28i32f36
v40@0:8@16i24f28f32f36
{unordered_map<unsigned long long, int, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, int>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{?="minimumExtent""maximumExtent"}
{MortonCode="mortonkeyX"{vector<unsigned long long, std::allocator<unsigned long long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::allocator<unsigned long long>>="__value_"^Q}}"mortonkeyY"{vector<unsigned long long, std::allocator<unsigned long long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::allocator<unsigned long long>>="__value_"^Q}}"mortonkeyZ"{vector<unsigned long long, std::allocator<unsigned long long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::allocator<unsigned long long>>="__value_"^Q}}}
{unique_ptr<ModelIO::Octree, std::default_delete<ModelIO::Octree>>="__ptr_"{__compressed_pair<ModelIO::Octree *, std::default_delete<ModelIO::Octree>>="__value_"^{Octree}}}
@48@0:8@16Q24Q32Q40
{VtValue={type=[8C]}{TfPointerAndBits<const VtValue::_TypeInfo>=^{_TypeInfo}}}16@0:8
v24@0:8r^v16
v32@0:8r^v16d24
v32@0:8r^{?=[4]}16Q24
{VtValue="_storage"{type="__lx"[8C]}"_info"{TfPointerAndBits<const VtValue::_TypeInfo>="_ptrAndBits"^{_TypeInfo}}}
Q32@0:8^d16Q24
v40@0:8r^v16d24d32
{vector<(anonymous namespace)::TimeSampledVtValue, std::allocator<(anonymous namespace)::TimeSampledVtValue>>="__begin_"^{TimeSampledVtValue}"__end_"^{TimeSampledVtValue}"__end_cap_"{__compressed_pair<(anonymous namespace)::TimeSampledVtValue *, std::allocator<(anonymous namespace)::TimeSampledVtValue>>="__value_"^{TimeSampledVtValue}}}
v40@0:8r^f16Q24d32
v40@0:8r^d16Q24d32
Q40@0:8^f16Q24d32
Q40@0:8^d16Q24d32
v48@0:8r^f16Q24r^d32Q40
v48@0:8r^d16Q24r^d32Q40
v40@0:8r^16Q24d32
Q40@0:8^16Q24d32
v48@0:8r^16Q24r^d32Q40
Q32@0:8^16Q24
v40@0:8r^{?=}16Q24d32
Q40@0:8^{?=}16Q24d32
v48@0:8r^{?=}16Q24r^d32Q40
Q32@0:8^{?=}16Q24
v28@0:8f16d20
v32@0:8d16d24
f24@0:8d16
d24@0:8d16
v40@0:8r^f16r^d24Q32
v40@0:8r^d16r^d24Q32
v32@0:816d24
v40@0:816d32
24@0:8d16
v40@0:8r^16r^d24Q32
v56@0:816d48
v40@0:8{?=}16d32
v56@0:8{?=}16d48
v40@0:8r^{?=}16r^d24Q32
v152@0:8{?=[4]}16d144
v40@0:8r^{?=[4]}16r^d24Q32
^v16@0:8
v24@0:8^v16
@"MDLMeshBufferMap"
v48@0:8@16Q24@32@40
@48@0:8@16Q24@32@40
v40@0:8^v16@24i32i36
v32@0:8^v16@24
q24@0:8@16
v56@0:8@16Q24@32@40q48
v64@0:8@16Q24@32@40q48d56
v152@0:8^f16q24Q32^f40q48Q56^f64q72Q80^f88q96Q104^f112q120Q128Q136:144
v52@0:8^f16q24^f32q40f48
v28@0:8@16f24
B24@0:8^@16
i16@0:8
v32@0:8@?16^B24
{?=[4]}24@0:8Q16
B60@0:816q24f32@36@44@52
B48@0:8f16f20@24@32@40
B44@0:8q16f24@28@36
B40@0:8f16f20@24@32
B56@0:816@24@32@40@48
B52@0:8f16@20@28@36@44
B40@0:8@16@24@32
@68@0:81632B40B44B48q52@60
@"MDLMatrix4x4Array"
@"MDLAnimatedQuaternionArray"
v144@0:8{?=[4]}16
@"MDLSkeleton"
@"<MDLJointAnimation>"
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}
v20@0:8i16
56@0:81632@48
B64@0:81632^{RTCamera=^^?QQffi^f^^@{?=[4]}{?=[4]}^{RTRaySegment}ffffffffff}48^{RTIntersectionResult=f^{RTGeometry}@}56
@48@0:8r^{RTCamera=^^?QQffi^f^^@{?=[4]}{?=[4]}^{RTRaySegment}ffffffffff}16@24@3240
^{mutex={_opaque_pthread_mutex_t=q[56c]}}
{vector<ModelIO::RTRenderable *, std::allocator<ModelIO::RTRenderable *>>="__begin_"^^{RTRenderable}"__end_"^^{RTRenderable}"__end_cap_"{__compressed_pair<ModelIO::RTRenderable **, std::allocator<ModelIO::RTRenderable *>>="__value_"^^{RTRenderable}}}
{vector<MDLLight *, std::allocator<MDLLight *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<MDLLight *__strong *, std::allocator<MDLLight *>>="__value_"^@}}
@80@0:8{?=[4]}16
@84@0:8{?=[4]}16B80
{MDLAffineTransform="_keyedTranslation"{vector<std::pair<double, float __attribute__((ext_vector_type(3)))>, std::allocator<std::pair<double, float __attribute__((ext_vector_type(3)))>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<double, float __attribute__((ext_vector_type(3)))> *, std::allocator<std::pair<double, float __attribute__((ext_vector_type(3)))>>>="__value_"^v}}"_keyedRotation"{vector<std::pair<double, float __attribute__((ext_vector_type(3)))>, std::allocator<std::pair<double, float __attribute__((ext_vector_type(3)))>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<double, float __attribute__((ext_vector_type(3)))> *, std::allocator<std::pair<double, float __attribute__((ext_vector_type(3)))>>>="__value_"^v}}"_keyedShear"{vector<std::pair<double, float __attribute__((ext_vector_type(3)))>, std::allocator<std::pair<double, float __attribute__((ext_vector_type(3)))>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<double, float __attribute__((ext_vector_type(3)))> *, std::allocator<std::pair<double, float __attribute__((ext_vector_type(3)))>>>="__value_"^v}}"_keyedScale"{vector<std::pair<double, float __attribute__((ext_vector_type(3)))>, std::allocator<std::pair<double, float __attribute__((ext_vector_type(3)))>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<double, float __attribute__((ext_vector_type(3)))> *, std::allocator<std::pair<double, float __attribute__((ext_vector_type(3)))>>>="__value_"^v}}"_startTime"d"_greatestTime"d"_identity"B"_resetTransformStack"B"_evaluationTime"d"_transform"{float4x4="columns"[4]}"_invTransform"{float4x4="columns"[4]}"_jacobiRotation"{float4x4="columns"[4]}"_invJacobiRotation"{float4x4="columns"[4]}}
@32@0:8^v16@?24
@32@0:8Q16@24
B32@0:8Q16@24
@48@0:8Q16@24@32@40
@"MDLMeshBufferZoneDefault"
v48@0:8#16@24@?32^B40
@"MDLObject"
v24@0:8@"MDLObject"16
@"MDLObject"24@0:8Q16
@40@0:8@16@2432
@44@0:8@16@2432f40
^{MDLTextureData=[16*][16*]iQB}16@0:8
@32@0:8q16:24
@72@0:8@16B24@2836q44Q52q60B68
v36@0:8q16B24:28
@28@0:8q16B24
v32@0:8@16q24
B32@0:8@16Q24
B32@0:8@16^{__CFString=}24
B40@0:8@16^{__CFString=}24Q32
^{CGImage=}16@0:8
^{CGImage=}24@0:8Q16
{MDLTextureData="topLeftBytesForMip"[16*]"bottomLeftBytesForMip"[16*]"channelCount"i"dimensions""rowStride"Q"isCube"B}
[14@"NSData"]
@44@0:8f16@2028q36
@52@0:8f16@2028i36q40B48
@64@0:8f16@2028i36q40^{CGColor=}48^{CGColor=}56
@40@0:8f16f20@2432
@48@0:8^{CGColor=}16^{CGColor=}24@3240
@60@0:8@16q2432f40f44f48f52f56
@56@0:8@16q2432f40f44f48f52
^{SkyDescriptor=ffffffffffffffffff^{Detail}IIffff^}
@40@0:8@16@24f32f36
F%E&
2)@'
}?1x
="*}
?50,^
@JQx
b~n(
;p)B
L0u?
&&^T
#sv|E
@|F"4
Q#@?9L,
k#C3
Yni5$
M4@P
#@:<
o*Ral
5z5@iH
?}~s
-@kb
h4^_
.@jfo!vCf?
+I~@
1@6
@:-OR&V
?ywd
zSl?
?) /
=-k?l1.
?$EdX
?l"3
M9pX
%=gfA
&pF(
?=i<l}l
0fKVE8
!@uaZ
?M-[
?vT5A
T0@GZ
ng_yP
^-wf
@Zd;
?vih
?zrM
'@+P
$EdX
.@;r
9$@]m
!6Xx
*E]1D
VBwI
lu9%
C*`
[Z]%
q(@/
q;4,F
Ht*t
?@0G
?mEQV
bQ*
%@GaQ
?r2q
AP$N
&4I,)_!@
@K5X
n,(z
mlv$#@tCt
@P9&
<|>o
ACO&@
5lJh
?@Pn
(#.@
;S8&
,oyrn
Lc tu
?9{g
Q4c?
j,amL
u Fc
K4q@
?5bf
%&@xj
6*&%
?XuV
G/0L"
\Hv[
|)<hv]
? zR&5t
QKs+
AB9v
S:X?
x==[
nDA:
2SZ?
QcB
?q $
&@lw
Gz(<.
X zR&="@r
2/,$
+@do
^}<t
@k:LEt
$[]N
Pqw1(
jIGI
7/ND!@m
)t^c
l%@!
?BwI
ecost
E`:r?X
>L1@
?=HO
@2!AL
|a2U
|)<hv
h:;Y
3@2Y
@hi]YX&
?N{J
o,(
jf-U 
?rQ-"
Pc)/
$sv|
?tA}
c\qq
D"@k
?Zbe4
3<Qm
 Nq&
?OLI
hwH1
&{:M
?zpw
B{vr
?!x|{
k?{j
UM0'
b~nh
?&&=FX
WPb!
WPb!
@!DK
@Ajn
++MJ
>K2@
?:Ba
o*Ral
#$w}
,^,A
@h?RD
@2bUso4
1%@0
"[L"
?{fI
>T6~?v
{ev!
?J}Y
?jP4
?BA)Z
@8V{;6
X:zW
BA)Z
P_d<)
@CM>
?%vmo
E'@c
9>J"@TJ
@&^TA
R?o*
cOL(
@F<~
?ni5$
`7l[T.@Ho
h?RD
!@b_
?0Y&
?~U.T
?h\8
s;EX
,^,L
@&`*
ip[[
?M2r
~M/a
?At
&@R)v4
#(@Mx2
?0`n
&TpxA
I:2@1
xtw?g
,`2/@
#M?L
@{2Z
WEn<
 r^z
@y%$-
v6@`
F|'f
?{AU
?Oyt#,*
@9EGr
uT1C@
?PT6
wzJs
ED1yC
5a5u
?F"4
NtvN
?"{sn
/PR`
?#cZ@
-En]
W6@h
?&`*
?"w*C
|a2U
9@0G
?c[H
?Y32
ebV
?am<{
?Yni5$
p $;
?!Nqf
LjH
?`g
"@3D
?xZeC
ba-c
4,F]k
*2: 
u.HW?
*E@*x
k_@/\
?AF@
?O4Y
?=c_
p l6@
?R||Bv>
N} y
?kdWZF
=i<l}
?f<!
8gDio$A
)YA@
J7@eL
?&KR>
Z~t?
?|SG}H
?JOh
^`V(R
1%fF@
`5fw q
>{.S
:m2O
5=(h
A=CYt
g)YNB
m}GC
?UE]
??RD
|yyF@6R
+vE:
h5n{
H/jw
?||Bv
-s_s
pDRf
8/N|
?~]<rZ&
p 41@u
6@u!V
@YLl>
$@nlv
%@T7
?@B!
z'@j
?WAt
*@Ou
ps)@
@W'g(
9@Ou
<5,@
#@5)
U+s0@
?1Bx
N,@S
:I1@
+0du
0@^h
Hk,@5
SB2@;
O`3@
8@yX
{0@cz
:@p%;6
?5@?
bFx{
Pq;@33333
vI@y
@N} y
@v7Ou
1Xq*
@:vP
:s/ 
-'@aR||B
@V)=
Y@n
-@9m|
&@B[
,/-@
rC-@
3@wN
z3j~
s:@W[
KqUq;@
eK6@
?[}uU
E7@)
(7@u
?/0+
cD@oG8-x
*@_A
hZ-@
Hmz5@w
-@+MJA
R[0@S"
^Fa.@
i/@@
@6@`YiR
9C/@
0@Kcj
hB@}
tv28&G@sK
!q73@
&OYm
q>@[
Y-@c
>@A~6r
r.@@v
>@[D
 |(Q
Y8,@
yD+@
C@Ll>
?{fI
M@n4
@\
4x
TfType
TfType::Define
), (
Failed axiom: ' %s '
../ModelKit/extern/usd/pxr/base/tf/iterator.h
operator++
iterator exhausted
operator*
operator->
TfEnum
GfFrustum::Orthographic
GfFrustum::Perspective
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
true
false
GfCamera::Perspective
perspective
GfCamera::Orthographic
orthographic
GfCamera::FOVHorizontal
FOVHorizontal
GfCamera::FOVVertical
FOVVertical
USD_ABC_READ_FLOAT2_AS_UV
Turn to false to disable reading float2 arrays as uv sets
usdAbc
Tf_EnvSettingRegistry
Open
bool UsdAbc_AlembicDataWriter::Open(const std::string &, const std::string &)
Write
bool UsdAbc_AlembicDataWriter::Write(const SdfAbstractDataConstPtr &)
Close
bool UsdAbc_AlembicDataWriter::Close()
UsdAbc_AlembicData
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/refPtr.h
Usd:
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/plugin/usdAbc/alembicWriter.cpp
_ExtractSamples
(anonymous namespace)::UsdSamples (anonymous namespace)::_PrimWriterContext::_ExtractSamples(const TfToken &, const std::vector<SdfValueTypeName> &)
Property '%s' did not have expected type (got '%s')
UsdSamples
(anonymous namespace)::UsdSamples::UsdSamples(const SdfPath &, const TfToken &, const SdfAbstractData &)
value.IsHolding<SdfTimeSampleMap>()
data.Has(_propPath, SdfFieldKeys->TypeName, &value)
No type name on <%s>
value.IsHolding<TfToken>()
_Validate
bool (anonymous namespace)::UsdSamples::_Validate()
v.second.GetType() == backupType
Expected sample at <%s> time %f of type '%s', got '%s'
interpretation
uniform
point
normal
vector
matrix
constant
varying
vertex
faceVarying
OBaseProperty::getHeader()
UsdAbc_AlembicDataWriter:_MakeSample
No conversion for '%s'
Internal error: trying to convert '%s' to '%s'
Internal error: Trying to use conversion for '%s' to convert from '%s'
Internal error: didn't get a multiple of the extent (%zd %% %d = %zd)
%s[%d]
UNKNOWN
bool_t
uint8_t
int8_t
uint16_t
int16_t
uint32_t
int32_t
uint64_t
int64_t
float16_t
float32_t
float64_t
string
wstring
_CheckSample
bool (anonymous namespace)::_CheckSample(const UsdAbc_AlembicUtil::_SampleForAlembic &, const (anonymous namespace)::UsdSamples &, const SdfValueTypeName &)
Can't convert from '%s' on <%s>: %s
Invalid Time Sampling Type, time per cycle: 
 samples per cycle: 
Unsupported invisibility '%s'
_WriteOutOfSchemaProperty
bool (anonymous namespace)::_WriteOutOfSchemaProperty((anonymous namespace)::_PrimWriterContext *, Alembic::Abc::v10::OCompoundProperty, const TfToken &, const std::string &)
No conversion for <%s> with spec type '%s'
_WriteXform
void (anonymous namespace)::_WriteXform((anonymous namespace)::_PrimWriterContext *)
Found unextracted property '%s' in xformOp namespace.
Usd.transform:
transform
xformOp:transform
OSchemaObject::OSchemaObject( OObject )
NULL Parent ObjectWriter in OSchemaObject ctor
schema
schemaObjTitle
schemaBaseType
AbcGeom_Xform_v3
.xform
_CopyXform
void (anonymous namespace)::_CopyXform(double, const (anonymous namespace)::UsdSamples &, Alembic::AbcGeom::v10::XformSample *)
Expected type 'GfMatrix4d', got '%s'
AbcGeom_SubD_v1
AbcGeom_GeomBase_v1
.geom
OGeomBaseSchema::getArbGeomParams()
.arbGeomParams
OGeomBaseSchema::getUserProperties()
.userProperties
_ReverseWindingOrder
void (anonymous namespace)::_ReverseWindingOrder((anonymous namespace)::UsdSamples *, const (anonymous namespace)::UsdSamples &) [T = int]
valuesValue.IsHolding<ValueArray>()
countsValue.IsHolding<CountArray>()
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/plugin/usdAbc/alembicUtil.h
UsdAbc_ReverseOrderImpl
bool UsdAbc_AlembicUtil::UsdAbc_ReverseOrderImpl(VtArray<T> &, const VtArray<int> &) [T = int]
j + count <= n
void VtArray<int>::_DetachIfNotUnique() [T = int]
VtArray::_AllocateNew
VtArray::value_type *VtArray<int>::_AllocateNew(size_t) [T = int]
catmull-clark
_CopySelfBounds
void (anonymous namespace)::_CopySelfBounds(double, const (anonymous namespace)::UsdSamples &, DST *) [DST = Alembic::AbcGeom::v10::OSubDSchema::Sample]
Expected type 'VtArray<GfVec3f>', got '%s'
Unsupported subdivisionScheme '%s'
Unsupported interpolateBoundary '%s'
Unsupported faceVaryingLinearInterpolation '%s'
_SampleForAlembic
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = float]
values
primvars:displayColor
adskDiffuseColor
AbcGeom_PolyMesh_v1
void (anonymous namespace)::_CopySelfBounds(double, const (anonymous namespace)::UsdSamples &, DST *) [DST = Alembic::AbcGeom::v10::OPolyMeshSchema::Sample]
AbcGeom_Curve_v2
OSchema::OSchema::init()
NULL parent passed into OSchema ctor
OGeomBaseSchema::init()
OGeomBaseSchema::createSelfBoundsProperty()
.selfBnds
OTypedScalarProperty::init()
NULL CompoundPropertyWriterPtr
void (anonymous namespace)::_CopySelfBounds(double, const (anonymous namespace)::UsdSamples &, DST *) [DST = Alembic::AbcGeom::v10::OCurvesSchema::Sample]
Unsupported curve basis '%s'
Unsupported curve type '%s'
Unsupported curve wrap '%s'
AbcGeom_Points_v1
void (anonymous namespace)::_CopySelfBounds(double, const (anonymous namespace)::UsdSamples &, DST *) [DST = Alembic::AbcGeom::v10::OPointsSchema::Sample]
AbcGeom_Camera_v1
_ExtractWithFallback
bool (anonymous namespace)::_ExtractWithFallback(const (anonymous namespace)::UsdSamples &, double, const UsdPrimDefinition *, const TfToken &, T *) [T = float]
Expected type '%s', but found '%s' for %s
T *TfRefPtr<SdfLayer>::operator->() const [T = SdfLayer]
bool (anonymous namespace)::_ExtractWithFallback(const (anonymous namespace)::UsdSamples &, double, const UsdPrimDefinition *, const TfToken &, T *) [T = GfVec2f]
AbcGeom_FaceSet_v1
.faceset
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/weakPtrFacade.h
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, const SdfAbstractData>::operator->() const [PtrTemplate = TfWeakPtr, Type = const SdfAbstractData]
UsdAbc_AlembicDataWriter:_WritePrim
none
_ai_Application
_ai_DateWritten
_ai_Description
OArchive::OArchive( iFileName )
USD_ABC_WARN_ALL_UNSUPPORTED_VALUES
Issue warnings for all unsupported values encountered.
USD_ABC_NUM_OGAWA_STREAMS
The number of threads available for reading ogawa-backed files via UsdAbc.
USD_ABC_WRITE_UV_AS_ST_TEXCOORD2FARRAY
Switch to true to enable writing Alembic uv sets as primvars:st with type texCoord2fArray to USD
USD_ABC_XFORM_PRIM_COLLAPSE
Collapse Xforms containing a single geometry into a single geom Prim in USD
bool UsdAbc_AlembicDataReader::Open(const std::string &)
quat
rgba
IBasePropertyT::getHeader()
VtArray::value_type *VtArray<GfVec3f>::_AllocateNew(size_t) [T = GfVec3f]
void VtArray<GfVec3f>::_DetachIfNotUnique() [T = GfVec3f]
ITypedScalarProperty::ITypedScalarProperty()
NULL CompoundPropertyReader passed into 
ITypedScalarProperty ctor
Nonexistent scalar property: 
Incorrect match of header datatype: 
 to expected: 
...or incorrect match of interpretation: 
kVisibilityVisible
kVisibilityDeferred
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/plugin/usdAbc/alembicReader.cpp
_PostUnsupportedValueWarning
void (anonymous namespace)::_PostUnsupportedValueWarning(const Alembic::Abc::v10::IScalarProperty &, const Alembic::Abc::v10::ISampleSelector &, (anonymous namespace)::_WarningType, const std::string &, const std::string &)
Unsupported %s '%s' for <%s> at %s in archive '%s'. Using '%s' instead.
Unsupported %s detected in archive '%s'. Using '%s' instead.
IBasePropertyT::getObject()
visibility
subdivision scheme
interpolate boundary
face varying interpolate boundary
sample time 
sample index 
AddOutOfSchemaProperty
void (anonymous namespace)::_PrimReaderContext::AddOutOfSchemaProperty(const std::string &, const (anonymous namespace)::AlembicProperty &)
No conversion for "%s" of type "%s" at <%s>
%s_%d
_ReadXform
void (anonymous namespace)::_ReadXform((anonymous namespace)::_PrimReaderContext *)
Ignoring transform that doesn't inherit at samples at time %f at <%s>
ISchemaObject::ISchemaObject( wrapflag )
Incorrect match of schema: 
ISchema::ISchema::init()
NULL parent passed into ISchema ctor
Nonexistent compound property: 
VtArray::value_type *VtArray<TfToken>::_AllocateNew(size_t) [T = TfToken]
void VtArray<TfToken>::_DetachIfNotUnique() [T = TfToken]
.velocities
.faceIndices
.faceCounts
.scheme
.interpolateBoundary
.faceVaryingLinearInterpolation
.holes
.cornerIndices
.cornerSharpnesses
.creaseIndices
.creaseLengths
.creaseSharpnesses
ITypedArrayProperty::ITypedArrayProperty()
ITypedArrayProperty ctor
Nonexistent array property: 
loop
bilinear
VtArray::value_type *VtArray<float>::_AllocateNew(size_t) [T = float]
void VtArray<float>::_DetachIfNotUnique() [T = float]
podName
podExtent
ITypedGeomParam::ITypedGeomParam()
ITypedGeomParam ctor
Nonexistent GeomParam: 
.vals
Invalid ITypedGeomParam: 
ITypedGeomParam::getNumSamples()
VtArray::value_type *VtArray<GfVec2f>::_AllocateNew(size_t) [T = GfVec2f]
void VtArray<GfVec2f>::_DetachIfNotUnique() [T = GfVec2f]
.faces
IGeomBaseSchema::init()
.childBnds
curveBasisAndType
nVertices
width
.orders
.knots
ISchema::ISchema( wrap )
VtArray::value_type *VtArray<double>::_AllocateNew(size_t) [T = double]
void VtArray<double>::_DetachIfNotUnique() [T = double]
.widths
.pointIds
VtArray::value_type *VtArray<long long>::_AllocateNew(size_t) [T = long long]
void VtArray<long long>::_DetachIfNotUnique() [T = long long]
Unsupported format
bool (anonymous namespace)::_ReaderContext::Open(const std::string &, std::string *)
Opened %s file written by Alembic %s
Ogawa
IArchive::IArchive( iFileName )
_ReadPrim
std::string (anonymous namespace)::_ReadPrim((anonymous namespace)::_ReaderContext &, const Alembic::Abc::v10::IObject &, const SdfPath &, std::set<std::string> *)
Instance %s has no master at %s.
UsdAbc_AlembicDataReader:_ReadPrim
over
HasField
bool (anonymous namespace)::_ReaderContext::HasField(const SdfPath &, const TfToken &, const UsdAbc_AlembicUtil::UsdAbc_AlembicDataAny &) const
UsdAbc_AlembicDataReader::_HasField:TimeSamples
UsdAbc_AlembicDataReader::_HasField:OtherMetadata
_HasValue
bool (anonymous namespace)::_ReaderContext::_HasValue(const (anonymous namespace)::_ReaderContext::Property *, const Alembic::Abc::v10::ISampleSelector &, const UsdAbc_AlembicUtil::UsdAbc_AlembicDataAny &) const
UsdAbc_AlembicDataReader::_HasValue:Conversion
abcInstanceSourcePath
HasValue
bool (anonymous namespace)::_ReaderContext::HasValue(const SdfPath &, (anonymous namespace)::_ReaderContext::Index, const UsdAbc_AlembicUtil::UsdAbc_AlembicDataAny &) const
List
TfTokenVector (anonymous namespace)::_ReaderContext::List(const SdfPath &) const
ListTimeSamplesForPath
const _ReaderContext::TimeSamples &(anonymous namespace)::_ReaderContext::ListTimeSamplesForPath(const SdfPath &) const
Read
virtual bool UsdAbcAlembicFileFormat::Read(SdfLayer *, const std::string &, bool) const
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/plugin/usdAbc/alembicFileFormat.cpp
WriteToFile
virtual bool UsdAbcAlembicFileFormat::WriteToFile(const SdfLayer &, const std::string &, const std::string &, const SdfFileFormat::FileFormatArguments &) const
data
T *TfRefPtr<UsdAbc_AlembicData>::operator->() const [U = UsdAbc_AlembicData]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, const SdfFileFormat>::operator->() const [PtrTemplate = TfWeakPtr, Type = const SdfFileFormat]
USD_ABC_EXPAND_INSTANCES
Force Alembic instances to be expanded.
USD_ABC_DISABLE_INSTANCING
Disable instancing on masters created from Alembic.
USD_ABC_PARENT_INSTANCES
Make parent of instance source into master where possible.
UsdAbc_AlembicData::Open
bool UsdAbc_AlembicData::Open(const std::string &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/plugin/usdAbc/alembicData.cpp
Failed to open Alembic archive "%s": %s
UsdAbc_AlembicData::Write
static bool UsdAbc_AlembicData::Write(const SdfAbstractDataConstPtr &, const std::string &, const std::string &)
Alembic error: %s
CreateSpec
virtual void UsdAbc_AlembicData::CreateSpec(const SdfPath &, SdfSpecType)
Alembic file CreateSpec() not supported
EraseSpec
virtual void UsdAbc_AlembicData::EraseSpec(const SdfPath &)
Alembic file EraseSpec() not supported
MoveSpec
virtual void UsdAbc_AlembicData::MoveSpec(const SdfPath &, const SdfPath &)
Alembic file MoveSpec() not supported
virtual void UsdAbc_AlembicData::Set(const SdfPath &, const TfToken &, const VtValue &)
Alembic file Set() not supported
virtual void UsdAbc_AlembicData::Set(const SdfPath &, const TfToken &, const SdfAbstractDataConstValue &)
Erase
virtual void UsdAbc_AlembicData::Erase(const SdfPath &, const TfToken &)
Alembic file Erase() not supported
SetTimeSample
virtual void UsdAbc_AlembicData::SetTimeSample(const SdfPath &, double, const VtValue &)
Alembic file SetTimeSample() not supported
EraseTimeSample
virtual void UsdAbc_AlembicData::EraseTimeSample(const SdfPath &, double)
Alembic file EraseTimeSample() not supported
custom 
class
VtArray::value_type *VtArray<bool>::_AllocateNew(size_t) [T = bool]
void VtArray<bool>::_DetachIfNotUnique() [T = bool]
VtArray::value_type *VtArray<GfMatrix2d>::_AllocateNew(size_t) [T = GfMatrix2d]
void VtArray<GfMatrix2d>::_DetachIfNotUnique() [T = GfMatrix2d]
VtArray::value_type *VtArray<GfMatrix3d>::_AllocateNew(size_t) [T = GfMatrix3d]
void VtArray<GfMatrix3d>::_DetachIfNotUnique() [T = GfMatrix3d]
VtArray::value_type *VtArray<GfMatrix4d>::_AllocateNew(size_t) [T = GfMatrix4d]
void VtArray<GfMatrix4d>::_DetachIfNotUnique() [T = GfMatrix4d]
VtArray::value_type *VtArray<GfVec2d>::_AllocateNew(size_t) [T = GfVec2d]
void VtArray<GfVec2d>::_DetachIfNotUnique() [T = GfVec2d]
VtArray::value_type *VtArray<GfVec2i>::_AllocateNew(size_t) [T = GfVec2i]
void VtArray<GfVec2i>::_DetachIfNotUnique() [T = GfVec2i]
VtArray::value_type *VtArray<GfVec3d>::_AllocateNew(size_t) [T = GfVec3d]
void VtArray<GfVec3d>::_DetachIfNotUnique() [T = GfVec3d]
VtArray::value_type *VtArray<GfVec3i>::_AllocateNew(size_t) [T = GfVec3i]
void VtArray<GfVec3i>::_DetachIfNotUnique() [T = GfVec3i]
VtArray::value_type *VtArray<GfVec4d>::_AllocateNew(size_t) [T = GfVec4d]
void VtArray<GfVec4d>::_DetachIfNotUnique() [T = GfVec4d]
VtArray::value_type *VtArray<GfVec4f>::_AllocateNew(size_t) [T = GfVec4f]
void VtArray<GfVec4f>::_DetachIfNotUnique() [T = GfVec4f]
VtArray::value_type *VtArray<GfVec4i>::_AllocateNew(size_t) [T = GfVec4i]
void VtArray<GfVec4i>::_DetachIfNotUnique() [T = GfVec4i]
VtArray::value_type *VtArray<SdfAssetPath>::_AllocateNew(size_t) [ELEM = SdfAssetPath]
void VtArray<SdfAssetPath>::_DetachIfNotUnique() [ELEM = SdfAssetPath]
VtArray::value_type *VtArray<std::string>::_AllocateNew(size_t) [T = std::string]
void VtArray<std::string>::_DetachIfNotUnique() [T = std::string]
verbose
expandInstances
disableInstancing
promoteInstances
BasisCurves
Camera
Mesh
NurbsCurves
Points
PolyMesh
PseudoRoot
Scope
Xform
GeomSubset
primvars
userProperties
materialBind
subsetFamily:materialBind:familyType
primvars:uv
primvars:uv:indices
primvars:st
primvars:st:indices
gprimDataRender
riName
riType
singleSampleAsDefault
%s%s
%s[%d]%s
%d.%d.%d
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = Alembic::Util::v10::bool_t]
VtArray::value_type *VtArray<unsigned char>::_AllocateNew(size_t) [T = unsigned char]
void VtArray<unsigned char>::_DetachIfNotUnique() [T = unsigned char]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = unsigned char]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = int]
VtArray::value_type *VtArray<unsigned int>::_AllocateNew(size_t) [T = unsigned int]
void VtArray<unsigned int>::_DetachIfNotUnique() [T = unsigned int]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = unsigned int]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = long long]
VtArray::value_type *VtArray<unsigned long long>::_AllocateNew(size_t) [T = unsigned long long]
void VtArray<unsigned long long>::_DetachIfNotUnique() [T = unsigned long long]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = unsigned long long]
VtArray::value_type *VtArray<pxr_half::half>::_AllocateNew(size_t) [T = pxr_half::half]
void VtArray<pxr_half::half>::_DetachIfNotUnique() [T = pxr_half::half]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = half]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = double]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = std::string]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = pxr_half::half]
VtArray::value_type *VtArray<GfVec2h>::_AllocateNew(size_t) [T = GfVec2h]
void VtArray<GfVec2h>::_DetachIfNotUnique() [T = GfVec2h]
VtArray::value_type *VtArray<GfVec4h>::_AllocateNew(size_t) [T = GfVec4h]
void VtArray<GfVec4h>::_DetachIfNotUnique() [T = GfVec4h]
VtArray::value_type *VtArray<GfQuatf>::_AllocateNew(size_t) [T = GfQuatf]
void VtArray<GfQuatf>::_DetachIfNotUnique() [T = GfQuatf]
VtArray::value_type *VtArray<GfQuatd>::_AllocateNew(size_t) [T = GfQuatd]
void VtArray<GfQuatd>::_DetachIfNotUnique() [T = GfQuatd]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = signed char]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = short]
UsdAbc_AlembicUtil::_SampleForAlembic::_SampleForAlembic(const boost::shared_array<T> &, size_t) [T = unsigned short]
VtArray::value_type *VtArray<GfVec3h>::_AllocateNew(size_t) [T = GfVec3h]
void VtArray<GfVec3h>::_DetachIfNotUnique() [T = GfVec3h]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/plugin/usdObj/streamIO.cpp
UsdObjReadDataFromStream
bool UsdObjReadDataFromStream(std::istream &, UsdObjStream *, std::string *)
Aborting usdObj backend due to the following error: 
usemtl
Negative indices are unsupported at this time.
bad lexical cast: source type value could not be interpreted as target
usdObj
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/plugin/usdObj/fileFormat.cpp
virtual bool UsdObjFileFormat::Read(SdfLayer *, const std::string &, bool) const
Failed to open file "%s"
Failed to read OBJ from file "%s": %s
ReadFromString
virtual bool UsdObjFileFormat::ReadFromString(SdfLayer *, const std::string &) const
Failed to read OBJ data from string: %s
normals
.usda
rootPrim
/Geom
name
component
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/plugin/usdObj/translator.cpp
UsdObjTranslateObjToUsd
SdfLayerRefPtr UsdObjTranslateObjToUsd(const UsdObjStream &)
No valid groups were found, no mesh translation will occur.
No viable meshes found, no translation will occur.
None
defaultShadeGroup
CreateMaterialBindings
void CreateMaterialBindings(const std::string &, const std::map<std::string, std::vector<int>> &, UsdGeomMesh, UsdStagePtr, unsigned int &)
OBJ mtl usemtl name has invalid name '%s', using default usemtl name: '%s' 
/Materials
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/vt/array.h
push_back
void VtArray<int>::push_back(const VtArray::ElementType &) [T = int]
Array rank %u != 1
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, UsdStage>::operator->() const [PtrTemplate = TfWeakPtr, Type = UsdStage]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/object.h
UsdObject
UsdObject::UsdObject(const Usd_PrimDataHandle &, const SdfPath &)
!_prim || _prim->GetPath() != _proxyPrimPath
CreateMesh
bool CreateMesh(const std::string &, const UsdObjStream::Group &, UsdStageRefPtr, unsigned int &, UsdGeomMesh &, bool)
Omitting OBJ group with no faces '%s'
defaultGroup
OBJ group has invalid name '%s', using default group name: '%s' 
T *TfRefPtr<SdfLayer>::operator->() const [U = SdfLayer]
T *TfRefPtr<UsdStage>::operator->() const [U = UsdStage]
void VtArray<GfVec3f>::push_back(const VtArray::ElementType &) [T = GfVec3f]
void VtArray<GfVec2f>::push_back(const VtArray::ElementType &) [T = GfVec2f]
UsdObjStream::SequenceElem::Verts
UsdObjStream::SequenceElem::UVs
UsdObjStream::SequenceElem::Normals
UsdObjStream::SequenceElem::Groups
UsdObjStream::SequenceElem::Comments
UsdObjStream::SequenceElem::ArbitraryText
USD_ASSIGN_MASTERS_DETERMINISTICALLY
Set to true to cause instances to be assigned to masters in a deterministic way, ensuring consistency across runs.  This incurs some additional overhead.
InstanceCache::RegisterIndex
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/instanceCache.cpp
RegisterInstancePrimIndex
bool Usd_InstanceCache::RegisterInstancePrimIndex(const PcpPrimIndex &, const UsdStagePopulationMask *, const UsdStageLoadRules &)
index.IsInstanceable()
InstanceCache::UnregisterIndex
UnregisterInstancePrimIndexesUnder
void Usd_InstanceCache::UnregisterInstancePrimIndexesUnder(const SdfPath &)
masterToKeyIt != _masterToInstanceKeyMap.end()
ProcessChanges
void Usd_InstanceCache::ProcessChanges(Usd_InstanceChanges *)
InstanceCache::ProcessChanges
!primIndexes.empty()
keysToProcess.emplace(primIndexes.front(), key).second
Instancing: Creating master <%s> with source prim index <%s> for instancing key: %s
Instancing: Changing source <%s> -> <%s> for <%s>
Instancing: Added instance prim index <%s> for master <%s>
Instancing: Removed instance prim index <%s> for master <%s>
_RemoveInstances
void Usd_InstanceCache::_RemoveInstances(const Usd_InstanceKey &, const Usd_InstanceCache::_PrimIndexPaths &, Usd_InstanceChanges *, std::unordered_map<SdfPath, SdfPath, SdfPath::Hash> *)
_masterToSourcePrimIndexMap.erase(masterPath)
_RemoveMasterIfNoInstances
void Usd_InstanceCache::_RemoveMasterIfNoInstances(const Usd_InstanceKey &, Usd_InstanceChanges *)
masterToPrimIndexesIt != _masterToPrimIndexesMap.end()
Instancing: Removing master <%s>
IsPathInMaster
static bool Usd_InstanceCache::IsPathInMaster(const SdfPath &)
IsPathInMaster() requires an absolute path but was given <%s>
__Master_
__Master_%zu
GetMastersUsingPrimIndexPathOrDescendents
vector<std::pair<SdfPath, SdfPath>> Usd_InstanceCache::GetMastersUsingPrimIndexPathOrDescendents(const SdfPath &) const
masterToSourceIt != _masterToSourcePrimIndexMap.end()
masterPath <%s> missing in mastersToSourceIndexPath map
_MasterUsesPrimIndexPath
bool Usd_InstanceCache::_MasterUsesPrimIndexPath(const SdfPath &, vector<SdfPath> *) const
GetPathInMasterForInstancePath
SdfPath Usd_InstanceCache::GetPathInMasterForInstancePath(const SdfPath &) const
../ModelKit/extern/usd/pxr/base/vt/array.h
_GetControlBlock
const Vt_ArrayBase::_ControlBlock &Vt_ArrayBase::_GetControlBlock(void *) const
!_foreignSource
Vt_ArrayBase::_ControlBlock &Vt_ArrayBase::_GetControlBlock(void *)
USD_CHANGES
USD_CLIPS
USD_COMPOSITION
USD_DATA_BD
USD_DATA_BD_TRY
USD_INSTANCING
USD_PATH_RESOLUTION
USD_PAYLOADS
USD_PRIM_LIFETIMES
USD_SCHEMA_REGISTRATION
USD_STAGE_CACHE
USD_STAGE_LIFETIMES
USD_STAGE_OPEN
USD_STAGE_INSTANTIATION_TIME
USD_VALUE_RESOLUTION
USD_VALIDATE_VARIABILITY
UsdBlockStageCaches
UsdBlockStageCachePopulation
Usd_NoBlock
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/collectionMembershipQuery.cpp
IsPathIncluded
bool UsdCollectionMembershipQuery::IsPathIncluded(const SdfPath &, TfToken *) const
Relative paths are not allowed
operator()
../ModelKit/extern/usd/pxr/base/tf/weakPtrFacade.h
../ModelKit/extern/usd/pxr/base/tf/refPtr.h
T *TfRefPtr<Tf_Remnant>::operator->() const [T = Tf_Remnant]
../ModelKit/extern/usd/pxr/usd/usd/object.h
UsdObject::UsdObject(UsdObjType, const Usd_PrimDataHandle &, const SdfPath &, const TfToken &)
../ModelKit/extern/usd/pxr/usd/usd/primRange.h
set_begin
void UsdPrimRange::set_begin(const UsdPrimRange::iterator &)
!newBegin.IsPostVisit()
Invalid stage
active
assetPaths
manifestAssetPath
primPath
templateAssetPath
templateEndTime
templateStartTime
templateStride
templateActiveOffset
times
default
USD_AUTHOR_LEGACY_CLIPS
If on, clip info will be stored in separate metadata fields instead of in the clips dictionary when using API that does not specify a clip set.
Invalid clipTemplateStride %f for prim <%s>. clipTemplateStride must be greater than 0.
../ModelKit/extern/usd/pxr/usd/sdf/declareHandles.h
SdfHandle::SpecType *SdfHandle<SdfPrimSpec>::operator->() const [T = SdfPrimSpec]
Dereferenced an invalid %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/primData.cpp
Usd_PrimData
Usd_PrimData::Usd_PrimData(UsdStage *, const SdfPath &)
Attempted to construct with null stage
Usd_PrimData::ctor<%s,%s,%s>
~Usd_PrimData::dtor<%s,%s,%s>
prim is invalid/expired
GetSourcePrimIndex
const PcpPrimIndex &Usd_PrimData::GetSourcePrimIndex() const
_primIndex
null prim
%s%s%sprim %s<%s> %s%s%s
expired 
inactive 
'%s' 
instance 
instance proxy 
in master 
with master <%s> 
using prim index <%s> 
on %s
Usd_IssueFatalPrimAccessError
void Usd_IssueFatalPrimAccessError(const Usd_PrimData *)
Used %s
FindOrCreatePrimTypeInfo
const Usd_PrimTypeInfo *Usd_PrimTypeInfoCache::FindOrCreatePrimTypeInfo(const TfToken &, TfTokenVector &&)
_CreatePrimTypeInfoKey
static TfToken Usd_PrimTypeInfoCache::_CreatePrimTypeInfoKey(const TfToken &, const TfTokenVector &)
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, SdfLayer>::operator->() const [PtrTemplate = TfWeakPtr, Type = SdfLayer]
UsdModelAPI::KindValidationNone
UsdModelAPI::KindValidationModelHierarchy
usdRi
USD_SHADING_MODEL
Set to usdRi when models can interchange UsdShade prims.
UsdListPositionFrontOfPrependList
The front of the prepend list.
UsdListPositionBackOfPrependList
The back of the prepend list.
UsdListPositionFrontOfAppendList
The front of the append list.
UsdListPositionBackOfAppendList
The back of the append list.
UsdLoadWithDescendants
Load prim and all descendants
UsdLoadWithoutDescendants
Load prim and no descendants
Cannot map <%s> to layer @%s@ via stage's EditTarget
GetConnections
bool UsdAttribute::GetConnections(SdfPathVector *) const
SdfHandle::SpecType *SdfHandle<SdfAttributeSpec>::operator->() const [T = SdfAttributeSpec]
../ModelKit/extern/usd/pxr/usd/sdf/listEditorProxy.h
bool SdfListEditorProxy<SdfPathKeyPolicy>::_Validate() const [_TypePolicy = SdfPathKeyPolicy]
Accessing expired list editor
../ModelKit/extern/usd/pxr/usd/sdf/listProxy.h
_Edit
void SdfListProxy<SdfPathKeyPolicy>::_Edit(size_t, size_t, const SdfListProxy::value_vector_type &) [_TypePolicy = SdfPathKeyPolicy]
Editing list: %s
Inserting invalid value into list editor
bool SdfListProxy<SdfPathKeyPolicy>::_Validate() [_TypePolicy = SdfPathKeyPolicy]
bool SdfListProxy<SdfPathKeyPolicy>::_Validate() const [_TypePolicy = SdfPathKeyPolicy]
SdfHandle::SpecType *SdfHandle<SdfSpec>::operator->() const [T = SdfSpec]
bool SdfListEditorProxy<SdfPathKeyPolicy>::_Validate() [_TypePolicy = SdfPathKeyPolicy]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/collectionAPI.cpp
Invalid collection path <%s>.
GetCollection
static UsdCollectionAPI UsdCollectionAPI::GetCollection(const UsdStagePtr &, const SdfPath &)
ComputeMembershipQuery
void UsdCollectionAPI::ComputeMembershipQuery(UsdCollectionMembershipQuery *) const
Invalid query pointer.
_ComputeMembershipQueryImpl
void UsdCollectionAPI::_ComputeMembershipQueryImpl(UsdCollectionMembershipQuery *, const SdfPathSet &, bool *) const
query
Found circular dependency involving the following collections: [%s]
Could not get prim at path <%s>, therefore cannot include its collection '%s' in collection '%s'.
CollectionAPI
collection
../ModelKit/extern/usd/pxr/base/vt/dictionary.h
increment
void VtDictionary::Iterator<std::map<std::string, VtValue, std::less<>> *, std::__map_iterator<std::__tree_iterator<std::__value_type<std::string, VtValue>, std::__tree_node<std::__value_type<std::string, VtValue>, void *> *, long>>>::increment() [UnderlyingMapPtr = std::map<std::string, VtValue, std::less<>> *, UnderlyingIterator = std::__map_iterator<std::__tree_iterator<std::__value_type<std::string, VtValue>, std::__tree_node<std::__value_type<std::string, VtValue>, void *> *, long>>]
Attempted invalid increment operation on a VtDictionary iterator
SdfHandle::SpecType *SdfHandle<SdfVariantSetSpec>::operator->() const [T = SdfVariantSetSpec]
SdfHandle::SpecType *SdfHandle<SdfVariantSpec>::operator->() const [T = SdfVariantSpec]
SdfHandle::SpecType *SdfHandle<SdfRelationshipSpec>::operator->() const [T = SdfRelationshipSpec]
T *TfRefPtr<PcpLayerStack>::operator->() const [U = PcpLayerStack]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/zipFile.cpp
static UsdZipFile UsdZipFile::Open(const std::shared_ptr<ArAsset> &)
Invalid asset
Could not retrieve buffer from asset
AddFile
std::string UsdZipFileWriter::AddFile(const std::string &, const std::string &)
File is not open for writing
Failed to map '%s': %s
Save
bool UsdZipFileWriter::Save()
void (anonymous namespace)::_InputStream::Read(T *) [T = unsigned int]
Failed to read from zip input stream. Corrupt data.
void (anonymous namespace)::_InputStream::Read(T *) [T = unsigned short]
_PrepareExtraFieldPadding
const char *(anonymous namespace)::_PrepareExtraFieldPadding(char (&)[68], uint16_t)
numPaddingBytes >= _HeaderSize
numPaddingBytes <= sizeof(extraFieldBuffer)
%sattribute '%s' on 
%srelationship '%s' on 
%sproperty '%s' on 
Unknown object type %d
usda
SdfHandle::SpecType *SdfHandle<SdfPropertySpec>::operator->() const [T = SdfPropertySpec]
../ModelKit/extern/usd/pxr/usd/usd/listEditImpl.h
Invalid prim
_TranslatePath
static bool Usd_ListEditImplBase::_TranslatePath(SdfPath *, const UsdEditTarget &)
Invalid empty path
Cannot map <%s> to current edit target.
_GetListEditor
prim
Remove
bool SdfListEditorProxy<SdfPayloadTypePolicy>::_Validate() [_TypePolicy = SdfPayloadTypePolicy]
0.7.0
USD_WRITE_NEW_USDC_FILES_AS_VERSION
When writing new Usd Crate files, write them as this version.  This must have the same major version as the software and have less or equal minor and patch versions.  This is only for new files; saving edits to an existing file preserves its version.
USDC_MMAP_PREFETCH_KB
If set to a nonzero value, attempt to disable the OS's prefetching behavior for memory-mapped files and instead do simple aligned block fetches of the given size instead.  If necessary the setting value is rounded up to the next whole multiple of the system's page size (typically 4 KB).
USDC_ENABLE_ZERO_COPY_ARRAYS
Enable the zero-copy optimization for numeric array values whose in-file representation matches the in-memory representation.  With this optimization, we create VtArrays that point directly into the memory mapped region rather than copying the data to heap buffers.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/crateFile.cpp
GetSection
const CrateFile::_Section *Usd_CrateFile::CrateFile::_TableOfContents::GetSection(Usd_CrateFile::_SectionName) const
Crate file missing %s section
USDC_USE_PREAD
_MmapAsset
static CrateFile::_FileMappingIPtr Usd_CrateFile::CrateFile::_MmapAsset(const char *, const Usd_CrateFile::ArAssetSharedPtr &)
Couldn't map asset '%s'%s%s
_MmapFile
static CrateFile::_FileMappingIPtr Usd_CrateFile::CrateFile::_MmapFile(const char *, FILE *, int64_t, int64_t)
Couldn't map file '%s'%s%s
Usd_CrateFile::CrateFile::Open
static std::unique_ptr<CrateFile> Usd_CrateFile::CrateFile::Open(const std::string &, int64_t, int64_t)
Failed to open asset '%s'
USDC_DUMP_PAGE_MAPS
~CrateFile
Usd_CrateFile::CrateFile::~CrateFile()
failed to obtain memory residency information
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
page map for %s
%lld pages, %lld used (%.1f%%), %lld in mem (%.1f%%)
used %.1f%% of pages in mem
legend: '+': in mem & used,     '-': in mem & unused
        '!': not in mem & used, ' ': not in mem & unused
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
bool Usd_CrateFile::CrateFile::Packer::Close()
_crate && _crate->_packCtx
_BuildDecompressedPathsImpl
void Usd_CrateFile::CrateFile::_BuildDecompressedPathsImpl(const vector<uint32_t> &, const vector<int32_t> &, const vector<int32_t> &, size_t, SdfPath, WorkArenaDispatcher &)
Failed to build paths. Trying to access invalid index %lu of vector size %lu.
Failed to read _tokens, elementToken index out of bounds
Failed to read _tokens, tokenIndex out of bounds
Failed to read _tokens, jumps index out of bounds
Failed to build paths, (pathIndex[%lu] == %d) > _paths.size().
_GetIndexForToken
Usd_CrateFile::TokenIndex Usd_CrateFile::CrateFile::_GetIndexForToken(const TfToken &) const
iter != _packCtx->tokenToTokenIndex.end()
_PackValue
Usd_CrateFile::ValueRep Usd_CrateFile::CrateFile::_PackValue(const VtValue &)
Attempted to pack unsupported type '%s' (%s)
_UnpackValue
void Usd_CrateFile::CrateFile::_UnpackValue(Usd_CrateFile::ValueRep, VtValue *) const
Attempted to unpack unsupported type enum value %d
Usd_CrateFile::CrateFile::_DoAllTypeRegistrations
_Section
Usd_CrateFile::CrateFile::_Section::_Section(const char *, int64_t, int64_t)
strlen(inName) <= _SectionNameMaxLength
ValueRep enum=
 (array)
 payload=
TimeSamples with 
 samples
%hhd.%hhd.%hhd
Rounded USDC_MMAP_PREFETCH_KB value %d to %d
_GetVersionForNewlyCreatedFiles
CrateFile::Version Usd_CrateFile::_GetVersionForNewlyCreatedFiles()
Invalid value '%s' for USD_WRITE_NEW_USDC_FILES_AS_VERSION - falling back to default '%s'
%u.%u.%u
WriteToFd
int64_t WriteToFd(FILE *, const void *, int64_t, int64_t)
Failed writing usdc data: %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/crateFile.h
GetString
const std::string &Usd_CrateFile::CrateFile::GetString(Usd_CrateFile::StringIndex) const
Failed to get string for index %u
Failed to get token for index %u
TOKENS
STRINGS
FIELDS
FIELDSETS
PATHS
SPECS
_ReadBootStrap
static CrateFile::_BootStrap Usd_CrateFile::CrateFile::_ReadBootStrap(ByteStream, int64_t) [ByteStream = Usd_CrateFile::_AssetStream]
File too small to contain bootstrap structure
Usd crate bootstrap section corrupt
Usd crate file version mismatch -- file is %s, software supports %s
Usd crate file corrupt, possibly truncated: table of contents at offset %lld but file size is %lld
static CrateFile::_BootStrap Usd_CrateFile::CrateFile::_ReadBootStrap(ByteStream, int64_t) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>]
bool Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>::Read(void *, size_t) [FileMappingPtr = Usd_CrateFile::CrateFile::_FileMapping *]
Failed to read %zu bytes, remaining file size is %lld of %lld
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = Usd_CrateFile::CrateFile::_Section]
Failed to read vector of size %llu, remaining file size is %lld of %lld
_ReadTokens
void Usd_CrateFile::CrateFile::_ReadTokens(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>]
Usd crate file corrupt, tokens section is possibly truncatedat offset %lld but file size is %lld
Failed to read tokens size %llu with remaining file size being %lld of %lld
Usd crate file corrupt, tokens section is empty
Failed to read tokens size %llu with remaining file size is %lld of %lld
Failed to read tokens. Corrupt compression data. Compressed size %llu, uncompressed size %llu
Failed to read tokens. Corrupt data. Data size %llu, num tokens %llu
Failed read tokens, buffer overflow.
_ReadStrings
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = Usd_CrateFile::TokenIndex]
_ReadFields
void Usd_CrateFile::CrateFile::_ReadFields(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>]
Failed read compressed fields of size %llu.
Failed read fields, buffer overflow.
Failed to read fields of size %llu with remaining file size is %lld of %lld
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = Usd_CrateFile::CrateFile::Field]
_ReadFieldSets
void Usd_CrateFile::CrateFile::_ReadFieldSets(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>]
Failed to read compressed fieldSets of size %llu
Failed to read fieldSets of size %llu with remaining file size is %lld of %lld
Failed to read fsets, size > compressedBufferSize.
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = Usd_CrateFile::FieldIndex]
_ReadPaths
void Usd_CrateFile::CrateFile::_ReadPaths(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>]
Failed to read %llu paths of size %llu with remaining file size is %lld of %lld
_ReadPathsImpl
void Usd_CrateFile::CrateFile::_ReadPathsImpl(Reader, WorkArenaDispatcher &, SdfPath) [Header = Usd_CrateFile::_PathItemHeader_0_0_1, Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>]
Invalid paths header causing OOB access.
Usd_CrateDataImpl::Open
void Usd_CrateFile::CrateFile::_ReadPathsImpl(Reader, WorkArenaDispatcher &, SdfPath) [Header = Usd_CrateFile::_PathItemHeader, Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>]
_ReadCompressedPaths
void Usd_CrateFile::CrateFile::_ReadCompressedPaths(Reader, WorkArenaDispatcher &, uint64_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>]
Failed to read compressed paths of size %llu
Failed to read compressed paths indexes of size %llu with remaining file size is %lld of %lld
Failed to read pathIndexes, size > compressedBufferSize.
Failed to read compressed paths element token indexes of size %llu with remaining file size is %lld of %lld
Failed to read elementTokenIndexes, size > compressedBufferSize.
Failed to read compressed paths jumps of size %llu with remaining file size is %lld of %lld
Failed to read jumps, size > compressedBufferSize.
_ReadSpecs
void Usd_CrateFile::CrateFile::_ReadSpecs(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>]
Failed to read specs of size %llu
Failed to read fsetIndexes, size > compressedBufferSize.
Failed to read spec types of size %llu with remaining file size is %lld of %lld
Failed to read spectypes, size > compressedBufferSize.
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = Usd_CrateFile::CrateFile::Spec_0_0_1]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = Usd_CrateFile::CrateFile::Spec]
static CrateFile::_BootStrap Usd_CrateFile::CrateFile::_ReadBootStrap(ByteStream, int64_t) [ByteStream = Usd_CrateFile::_PreadStream]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = Usd_CrateFile::CrateFile::_Section]
void Usd_CrateFile::CrateFile::_ReadTokens(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = Usd_CrateFile::TokenIndex]
void Usd_CrateFile::CrateFile::_ReadFields(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = Usd_CrateFile::CrateFile::Field]
void Usd_CrateFile::CrateFile::_ReadFieldSets(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = Usd_CrateFile::FieldIndex]
void Usd_CrateFile::CrateFile::_ReadPaths(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>]
void Usd_CrateFile::CrateFile::_ReadPathsImpl(Reader, WorkArenaDispatcher &, SdfPath) [Header = Usd_CrateFile::_PathItemHeader_0_0_1, Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>]
void Usd_CrateFile::CrateFile::_ReadPathsImpl(Reader, WorkArenaDispatcher &, SdfPath) [Header = Usd_CrateFile::_PathItemHeader, Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>]
void Usd_CrateFile::CrateFile::_ReadCompressedPaths(Reader, WorkArenaDispatcher &, uint64_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>]
void Usd_CrateFile::CrateFile::_ReadSpecs(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = Usd_CrateFile::CrateFile::Spec_0_0_1]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = Usd_CrateFile::CrateFile::Spec]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = Usd_CrateFile::CrateFile::_Section]
void Usd_CrateFile::CrateFile::_ReadTokens(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = Usd_CrateFile::TokenIndex]
void Usd_CrateFile::CrateFile::_ReadFields(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = Usd_CrateFile::CrateFile::Field]
void Usd_CrateFile::CrateFile::_ReadFieldSets(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = Usd_CrateFile::FieldIndex]
void Usd_CrateFile::CrateFile::_ReadPaths(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>]
void Usd_CrateFile::CrateFile::_ReadPathsImpl(Reader, WorkArenaDispatcher &, SdfPath) [Header = Usd_CrateFile::_PathItemHeader_0_0_1, Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>]
void Usd_CrateFile::CrateFile::_ReadPathsImpl(Reader, WorkArenaDispatcher &, SdfPath) [Header = Usd_CrateFile::_PathItemHeader, Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>]
void Usd_CrateFile::CrateFile::_ReadCompressedPaths(Reader, WorkArenaDispatcher &, uint64_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>]
void Usd_CrateFile::CrateFile::_ReadSpecs(Reader) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = Usd_CrateFile::CrateFile::Spec_0_0_1]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = Usd_CrateFile::CrateFile::Spec]
get_next_capacity, allocator's max_size reached
SdfPathTable::_FindOrCreate
SdfPathTable::_IterBoolPair SdfPathTable<Usd_CrateFile::PathIndex>::_InsertInTable(const SdfPathTable::value_type &) [MappedType = Usd_CrateFile::PathIndex]
SdfPathTable::_Grow
void SdfPathTable<Usd_CrateFile::PathIndex>::_Grow() [MappedType = Usd_CrateFile::PathIndex]
_ReadUncompressedArray
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = bool]
Failed to read %llu elements for uncompressedArray (%llu bytes), remaining file size is %lld of %lld
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = bool]
Failed to read %zu uncompressedArray bytes
Failed to read %llu elements for uncompressedArray (%zu bytes), remaining file size is %lld of %lld
CreateZeroCopyDataSource
Vt_ArrayForeignDataSource *Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>::CreateZeroCopyDataSource(void *, size_t, uint64_t) [FileMappingPtr = Usd_CrateFile::CrateFile::_FileMapping *]
Zero-copy data range out-of-bounds: %zd bytes at offset %td in a mapping of length %zd
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = bool]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = unsigned char]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = unsigned char]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = unsigned char]
_ReadPossiblyCompressedArray
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = int]
Failed to read %llu elements for possibly compressed (%llu bytes), remaining file size is %lld of %lld
Failed to read %llu compressed values
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = int]
_ReadCompressedInts
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, Int = int]
Failed to read compressed ints of size %llu with remaining file size is %lld of %lld
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = int]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = int]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, Int = int]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = int]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = int]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, Int = int]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = unsigned int]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = unsigned int]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, Int = unsigned int]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = unsigned int]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = unsigned int]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, Int = unsigned int]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = unsigned int]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = unsigned int]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, Int = unsigned int]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = long long]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = long long]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, Int = long long]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = long long]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = long long]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, Int = long long]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = long long]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = long long]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, Int = long long]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = unsigned long long]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = unsigned long long]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, Int = unsigned long long]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = unsigned long long]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = unsigned long long]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, Int = unsigned long long]
typename std::enable_if<std::is_same<T, int>::value || std::is_same<T, unsigned int>::value || std::is_same<T, int64_t>::value || std::is_same<T, uint64_t>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = unsigned long long]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = unsigned long long]
void Usd_CrateFile::_ReadCompressedInts(Reader, Int *, size_t) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, Int = unsigned long long]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = pxr_half::half]
Failed to read %llu compressed ints
Failed to read %u elements for lut (%llu bytes), remaining file size is %lld of %lld
Failed to read %llu compressed uints
Failed to index lut with index %u, out of bounds access
Corrupt data stream detected reading compressed array in <%s>
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = pxr_half::half]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = pxr_half::half]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = pxr_half::half]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = pxr_half::half]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = pxr_half::half]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = float]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = float]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = float]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = float]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = float]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = float]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = double]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = double]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = double]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = double]
typename std::enable_if<std::is_same<T, GfHalf>::value || std::is_same<T, float>::value || std::is_same<T, double>::value>::type Usd_CrateFile::_ReadPossiblyCompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version, int) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = double]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = double]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = std::string]
GetUninlinedValue
const std::string &Usd_CrateFile::CrateFile::_ReaderBase::GetUninlinedValue(uint32_t, std::string *) const
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = std::string]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = std::string]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = TfToken]
const TfToken &Usd_CrateFile::CrateFile::_ReaderBase::GetUninlinedValue(uint32_t, TfToken *) const
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = TfToken]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = TfToken]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = SdfAssetPath]
SdfAssetPath Usd_CrateFile::CrateFile::_ReaderBase::GetUninlinedValue(uint32_t, SdfAssetPath *) const
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = SdfAssetPath]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = SdfAssetPath]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfQuatd]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfQuatd]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfQuatd]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfQuatf]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfQuatf]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfQuatf]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfQuath]
VtArray::value_type *VtArray<GfQuath>::_AllocateNew(size_t) [T = GfQuath]
void VtArray<GfQuath>::_DetachIfNotUnique() [T = GfQuath]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfQuath]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfQuath]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec2d]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec2d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec2d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec2f]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec2f]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec2f]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec2h]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec2h]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec2h]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec2i]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec2i]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec2i]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec3d]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec3d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec3d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec3f]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec3f]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec3f]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec3h]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec3h]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec3h]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec3i]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec3i]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec3i]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec4d]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec4d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec4d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec4f]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec4f]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec4f]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec4h]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec4h]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec4h]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfVec4i]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfVec4i]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfVec4i]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfMatrix2d]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfMatrix2d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfMatrix2d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfMatrix3d]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfMatrix3d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfMatrix3d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = GfMatrix4d]
typename std::enable_if<Reader::StreamSupportsZeroCopy && _IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = GfMatrix4d]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = GfMatrix4d]
void VtDictionary::Iterator<const std::map<std::string, VtValue, std::less<>> *, std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<std::string, VtValue>, std::__tree_node<std::__value_type<std::string, VtValue>, void *> *, long>>>::increment() [UnderlyingMapPtr = const std::map<std::string, VtValue, std::less<>> *, UnderlyingIterator = std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<std::string, VtValue>, std::__tree_node<std::__value_type<std::string, VtValue>, void *> *, long>>]
A SdfListOp value using a prepended or appended value was detected, which requires crate version 0.2.0.
RequestWriteVersionUpgrade
bool Usd_CrateFile::CrateFile::_PackingContext::RequestWriteVersionUpgrade(Usd_CrateFile::CrateFile::Version, std::string)
Upgrading crate file <%s> from version %s to %s: %s
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = TfToken]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = TfToken]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = TfToken]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = std::string]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = std::string]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = std::string]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = SdfPath]
GetPath
const SdfPath &Usd_CrateFile::CrateFile::GetPath(Usd_CrateFile::PathIndex) const
Failed to get path for index %u
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = SdfPath]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = SdfPath]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = SdfReference]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = SdfReference]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = SdfReference]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = int]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = int]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = int]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = long long]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = long long]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = long long]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = unsigned int]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = unsigned int]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = unsigned int]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = unsigned long long]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = unsigned long long]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = unsigned long long]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = double]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = double]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = double]
A payload with a non-identity layer offset was detected, which requires crate version 0.8.0.
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = SdfLayerOffset]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = SdfLayerOffset]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = SdfLayerOffset]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(SdfUnregisteredValue *, SdfUnregisteredValue &) [ByteStream = Usd_CrateFile::_PreadStream]
SdfUnregisteredValue in crate file contains invalid type '%s' = '%s'; expected string, VtDictionary or SdfUnregisteredValueListOp; returning empty
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(SdfUnregisteredValue *, SdfUnregisteredValue &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(SdfUnregisteredValue *, SdfUnregisteredValue &) [ByteStream = Usd_CrateFile::_AssetStream]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = SdfUnregisteredValue]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = SdfUnregisteredValue]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = SdfUnregisteredValue]
A SdfPayloadListOp value was detected which requires crate version 0.8.0.
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_PreadStream, T = SdfPayload]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>, T = SdfPayload]
bool Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>::Read(vector<T> *, vector<T> &) [ByteStream = Usd_CrateFile::_AssetStream, T = SdfPayload]
A timecode or timecode[] value type was detected, which requires crate version 0.9.0.
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_PreadStream>, T = SdfTimeCode]
VtArray::value_type *VtArray<SdfTimeCode>::_AllocateNew(size_t) [ELEM = SdfTimeCode]
void VtArray<SdfTimeCode>::_DetachIfNotUnique() [ELEM = SdfTimeCode]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_MmapStream<Usd_CrateFile::CrateFile::_FileMapping *>>, T = SdfTimeCode]
typename std::enable_if<!Reader::StreamSupportsZeroCopy || !_IsBitwiseReadWrite<T>::value>::type Usd_CrateFile::_ReadUncompressedArray(Reader, Usd_CrateFile::ValueRep, VtArray<T> *, CrateFile::Version) [Reader = Usd_CrateFile::CrateFile::_Reader<Usd_CrateFile::_AssetStream>, T = SdfTimeCode]
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
../ModelKit/extern/usd/pxr/base/tf/singleton.h
SetInstanceConstructed
static void TfSingleton<UsdSchemaRegistry>::SetInstanceConstructed(T &) [T = UsdSchemaRegistry]
this function may not be called after GetInstance() has completed
TfSingleton::_CreateInstance
Create Singleton 
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/schemaRegistry.cpp
_FindAndAddPluginSchema
void UsdSchemaRegistry::_FindAndAddPluginSchema()
Found a non-dictionary value for layer metadata key '%s' in generated schema file '%s'. Any multiple apply API schemas from this file will be incorrect. This schema must be regenerated.
registry.usda
BuildComposedPrimDefinition
std::unique_ptr<UsdPrimDefinition> UsdSchemaRegistry::BuildComposedPrimDefinition(const TfToken &, const TfTokenVector &) const
BuildComposedPrimDefinition without applied API schemas is not allowed. If you want a prim definition for a single prim type with no appied schemas, use FindConcretePrimDefinition instead.
_ApplyAPISchemasToPrimDefinition
void UsdSchemaRegistry::_ApplyAPISchemasToPrimDefinition(UsdPrimDefinition *, const TfTokenVector &) const
!prefix.IsEmpty()
generatedSchema.usda
Looking up generated schema for plugin %s at path %s. Generated schema %s.
valid
invalid
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, PlugPlugin>::operator->() const [PtrTemplate = TfWeakPtr, Type = PlugPlugin]
appliedAPISchemas
multipleApplyAPISchemas
multipleApplyAPISchemaPrefixes
VtDictionaryGet
const T &VtDictionaryGet(const VtDictionary &, const std::string &) [T = VtArray<std::string>]
Attempted to get value for key '
', which is not in the dictionary.
DEFAULT
EARLIEST
format
usdc
USD_DEFAULT_FILE_FORMAT
Default file format for new .usd files; either 'usda' or 'usdc'.
virtual bool UsdUsdFileFormat::Read(SdfLayer *, const std::string &, bool) const
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/usdFileFormat.cpp
_GetFileFormatForArguments
SdfFileFormatConstPtr _GetFileFormatForArguments(const SdfFileFormat::FileFormatArguments &)
'%s' argument was '%s', must be '%s' or '%s'. Defaulting to '%s'.
_GetDefaultFileFormat
SdfFileFormatConstPtr _GetDefaultFileFormat()
Default file format '%s' set in USD_DEFAULT_FILE_FORMAT must be either 'usda' or 'usdc'. Falling back to 'usdc'
defaultFormat
_GetFileFormat
SdfFileFormatConstPtr _GetFileFormat(const TfToken &)
fileFormat
_GetFormatArgumentForFileFormat
TfToken _GetFormatArgumentForFileFormat(const SdfFileFormatConstPtr &)
formatArg == UsdUsdaFileFormatTokens->Id || formatArg == UsdUsdcFileFormatTokens->Id
Unhandled file format '%s'
<null>
USD_READ_LEGACY_CLIPS
If on, legacy clip metadata will be respected when populating clips. Otherwise, legacy clip metadata will be ignored.
-inf
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/clip.cpp
Usd_Clip
Usd_Clip::Usd_Clip(const PcpLayerStackPtr &, const SdfPath &, size_t, const SdfAssetPath &, const SdfPath &, Usd_Clip::ExternalTime, Usd_Clip::ExternalTime, const Usd_Clip::TimeMappings &)
sourceLayerIndex < sourceLayerStack->GetLayers().size()
_GetLayerForClip
SdfLayerRefPtr Usd_Clip::_GetLayerForClip() const
Unable to open clip layer @%s@
clip
_ResolveLegacyClipInfo
bool _ResolveLegacyClipInfo(const PcpPrimIndex &, Usd_ResolvedClipInfo *)
Both template and non-template clip metadata are authored for prim <%s> in layerStack %s at spec @%s@<%s>
%s for prim <%s> found in LayerStack %s at spec @%s@<%s>
_DeriveClipInfo
void _DeriveClipInfo(const std::string &, const double, const double, const double, const double, boost::optional<VtVec2dArray> *, boost::optional<VtVec2dArray> *, boost::optional<VtArray<SdfAssetPath>> *, const SdfPath &, const PcpLayerStackPtr &, const size_t)
Invalid clipTemplateOffset %f for prim <%s>. absolute value of clipTemplateOffset must not exceed clipTemplateStride %f.
Invalid template string specified %s, must be of the form path/basename.###.usd or path/basename.###.###.usd. Note that the number of hash marks is variable in each group.
Invalid range specified in template clip metadata. clipTemplateEndTime (%f) cannot be greater than clipTemplateStartTime (%f).
void VtArray<GfVec2d>::push_back(const VtArray::ElementType &) [T = GfVec2d]
void VtArray<SdfAssetPath>::push_back(const VtArray::ElementType &) [ELEM = SdfAssetPath]
%s for prim <%s> derived: %s
_ResolveClipSetsInNode
void _ResolveClipSetsInNode(const PcpNodeRef &, std::map<std::string, _ClipSet> *)
Invalid unnamed clip set for prim <%s> in 'clips' dictionary on spec @%s@<%s>
Expected dictionary for entry '%s' for prim <%s> in 'clips' dictionary on spec @%s@<%s>
_GetBracketingTimeSegment
bool _GetBracketingTimeSegment(const Usd_Clip::TimeMappings &, Usd_Clip::ExternalTime, size_t *, size_t *)
*m1 < *m2
0 <= *m1 && *m1 < times.size()
0 <= *m2 && *m2 < times.size()
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, PcpLayerStack>::operator->() const [PtrTemplate = TfWeakPtr, Type = PcpLayerStack]
dummy_clip
dummy_clip.%s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/prim.cpp
_IsA
bool UsdPrim::_IsA(const TfType &, bool) const
Unknown schema type (%s) is invalid for IsA query
_HasAPI
bool UsdPrim::_HasAPI(const TfType &, bool, const TfToken &) const
HasAPI: Invalid unknown schema type (%s) 
HasAPI: provided schema type ( %s ) is typed.
HasAPI: provided schema type ( %s ) is not an applied API schema type.
HasAPI: provided schema type ( %s ) does not derive from UsdAPISchemaBase.
HasAPI: single application API schemas like %s do not contain an application instanceName ( %s ).
_MakeProperties
std::vector<UsdProperty> UsdPrim::_MakeProperties(const TfTokenVector &) const
specType == SdfSpecTypeRelationship
_ComputePrimPropertyNames
void _ComputePrimPropertyNames(const PcpPrimIndex &, const UsdPrim::PropertyPredicateFunc &, TfTokenVector *)
TfIterator::Reference TfIterator<std::pair<PcpNodeRef_ChildrenIterator, PcpNodeRef_ChildrenIterator>, false>::operator*() [T = std::pair<PcpNodeRef_ChildrenIterator, PcpNodeRef_ChildrenIterator>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::pair<PcpNodeRef_ChildrenIterator, PcpNodeRef_ChildrenIterator>, false>::operator++() [T = std::pair<PcpNodeRef_ChildrenIterator, PcpNodeRef_ChildrenIterator>, Reverse = false]
../ModelKit/extern/usd/pxr/usd/usd/primData.h
Usd_MoveToNextSiblingOrParent
bool Usd_MoveToNextSiblingOrParent(PrimDataPtr &, SdfPath &, PrimDataPtr, const Usd_PrimFlagsPredicate &) [PrimDataPtr = const Usd_PrimData *]
No prim at <%s>
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/property.cpp
GetBaseName
TfToken UsdProperty::GetBaseName() const
delim != fullName.size()-1
_GetTargets
bool UsdProperty::_GetTargets(SdfSpecType, SdfPathVector *) const
specType == SdfSpecTypeAttribute || specType == SdfSpecTypeRelationship
getting connections for attribute <%s>
getting targets for relationship <%s>
Usd_MoveToParent
void Usd_MoveToParent(PrimDataPtr &, SdfPath &) [PrimDataPtr = const Usd_PrimData *]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/primRange.cpp
PruneChildren
void UsdPrimRange::iterator::PruneChildren()
Iterator past-the-end
Cannot prune children during post-visit because thechildren have already been processed. Current node: %s
UsdInterpolationTypeHeld
Held
UsdInterpolationTypeLinear
Linear
Invalid prim: %s
static bool Usd_ListEditImpl<UsdReferences, SdfListEditorProxy<SdfReferenceTypePolicy>>::Add(const UsdListEditorType &, const Usd_ListEditImpl::ListOpValueType &, UsdListPosition) [UsdListEditorType = UsdReferences, ListOpProxyType = SdfListEditorProxy<SdfReferenceTypePolicy>]
static ListOpProxyType Usd_ListEditImpl<UsdReferences, SdfListEditorProxy<SdfReferenceTypePolicy>>::_GetListEditor(const UsdPrim &) [UsdListEditorType = UsdReferences, ListOpProxyType = SdfListEditorProxy<SdfReferenceTypePolicy>]
bool SdfListEditorProxy<SdfReferenceTypePolicy>::_Validate() const [_TypePolicy = SdfReferenceTypePolicy]
void SdfListProxy<SdfReferenceTypePolicy>::_Edit(size_t, size_t, const SdfListProxy::value_vector_type &) [_TypePolicy = SdfReferenceTypePolicy]
bool SdfListProxy<SdfReferenceTypePolicy>::_Validate() [_TypePolicy = SdfReferenceTypePolicy]
bool SdfListProxy<SdfReferenceTypePolicy>::_Validate() const [_TypePolicy = SdfReferenceTypePolicy]
bool SdfListEditorProxy<SdfReferenceTypePolicy>::_Validate() [_TypePolicy = SdfReferenceTypePolicy]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/interpolators.cpp
_Interpolate
bool Usd_UntypedInterpolator::_Interpolate(const Src &, const SdfPath &, double, double, double) [Src = TfRefPtr<SdfLayer>]
Unknown value type '%s' for attribute '%s'
bool Usd_UntypedInterpolator::_Interpolate(const Src &, const SdfPath &, double, double, double) [Src = std::shared_ptr<Usd_Clip>]
AllRule
OnlyRule
NoneRule
<invalid value>
UsdStageLoadRules(
UsdStageLoadRules::AllRule
UsdStageLoadRules::OnlyRule
UsdStageLoadRules::NoneRule
usdz
GetPackageRootLayerPath
virtual std::string UsdUsdzFileFormat::GetPackageRootLayerPath(const std::string &) const
CanRead
virtual bool UsdUsdzFileFormat::CanRead(const std::string &) const
virtual bool UsdUsdzFileFormat::Read(SdfLayer *, const std::string &, bool) const
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/usdzFileFormat.cpp
virtual bool UsdUsdzFileFormat::WriteToFile(const SdfLayer &, const std::string &, const std::string &, const SdfFileFormat::FileFormatArguments &) const
Writing usdz layers is not allowed via this API.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/stageCache.cpp
RequestStage
std::pair<UsdStageRefPtr, bool> UsdStageCache::RequestStage(UsdStageCacheRequest &&)
UsdStageCacheRequest failed to manufacture a valid stage.
found %s
failed to find stage
%s by rootLayer%s in %s
 @%s@
%s by rootLayer%s, sessionLayer%s in %s
 <null>
%s by rootLayer%s, pathResolverContext in %s
Insert
UsdStageCache::Id UsdStageCache::Insert(const UsdStageRefPtr &)
Inserted null stage in cache
inserted
erased
stage cache %s (size=%zu)
"%s"
%s %s %s (id=%s)
%s %s %zu entries:
      %s (id=%s)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/typed.cpp
_schemaBaseTfType_Tf_StaticDataFactoryImpl
void _schemaBaseTfType_Tf_StaticDataFactoryImpl(TfType *)
!_schemaBaseTfType->IsUnknown()
apiSchemas
clipActive
clipAssetPaths
clipManifestAssetPath
clipPrimPath
clips
clipSets
clipTemplateAssetPath
clipTemplateEndTime
clipTemplateStartTime
clipTemplateStride
clipTimes
exclude
excludes
expandPrims
expandPrimsAndProperties
expansionRule
explicitOnly
includeRoot
includes
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/integerCoding.cpp
_DecodeIntegers
size_t (anonymous namespace)::_DecodeIntegers(const char *, size_t, size_t, Int *) [Int = int]
Not enough decompressed bytes to read codes section.
Not enough decompressed bytes to read variable length integer data section.
size_t (anonymous namespace)::_DecodeIntegers(const char *, size_t, size_t, Int *) [Int = unsigned int]
size_t (anonymous namespace)::_DecodeIntegers(const char *, size_t, size_t, Int *) [Int = long long]
size_t (anonymous namespace)::_DecodeIntegers(const char *, size_t, size_t, Int *) [Int = unsigned long long]
_Initialize
void UsdAttributeQuery::_Initialize(const UsdAttribute &)
UsdResolveInfoSourceNone
No value
UsdResolveInfoSourceFallback
Built-in fallback value
UsdResolveInfoSourceDefault
Attribute default value
UsdResolveInfoSourceTimeSamples
Attribute time samples
UsdResolveInfoSourceValueClips
Value clips
UsdResolveInfoSourceIsTimeDependent
Source may vary over time
TfDebug
Usd change processing
Usd clip details
Usd composition details
Usd BD file format traces
Usd BD call traces. Prints names, errors and results.
Usd instancing diagnostics
Usd path resolution diagnostics
Usd payload load/unload messages
Usd prim ctor/dtor messages
Usd schema registration details.
Usd stage cache details
Usd stage ctor/dtor messages
Usd stage opening details
Usd stage instantiation timing
Usd attribute variability validation
Usd trace of layers inspected as values are resolved
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/stagePopulationMask.cpp
GetUnion
UsdStagePopulationMask UsdStagePopulationMask::GetUnion(const SdfPath &) const
Invalid path <%s>; must be an absolute prim path or the absolute root path
GetIncludedChildNames
bool UsdStagePopulationMask::GetIncludedChildNames(const SdfPath &, std::vector<TfToken> *) const
!childName.IsEmpty()
_ValidateAndNormalize
void UsdStagePopulationMask::_ValidateAndNormalize()
UsdStagePopulationMask(
virtual bool UsdUsdcFileFormat::Read(SdfLayer *, const UsdUsdcFileFormat::string &, bool) const
T *TfRefPtr<Usd_CrateData>::operator->() const [U = Usd_CrateData]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/clipCache.cpp
ConcurrentPopulationContext
Usd_ClipCache::ConcurrentPopulationContext::ConcurrentPopulationContext(Usd_ClipCache &)
!_cache._concurrentPopulationContext
PopulateClipsForPrim
bool Usd_ClipCache::PopulateClipsForPrim(const SdfPath &, const PcpPrimIndex &)
Usd_ClipCache::PopulateClipsForPrim
Populated clips for prim <%s>
GetClipsForPrim
const std::vector<Usd_ClipCache::Clips> &Usd_ClipCache::GetClipsForPrim(const SdfPath &) const
mutex: pthread_mutex_init failed
No clip manifest specified for prim <%s>. Performance may be improved if a manifest is specified.
_AddClipsFromClipInfo
void _AddClipsFromClipInfo(const SdfPath &, const Usd_ResolvedClipInfo &, Usd_ClipCache::Clips *)
Invalid clips specified for prim <%s>: %s
startTimeToClip.insert( std::make_pair(entry.startTime, entry)).second
No clip prim path specified
Empty clip asset path in metadata '%s'
Path '%s' in metadata '%s' must be an absolute path to a prim
Invalid clip index %d in metadata '%s'
Clip %d cannot be active at time %.3f in metadata '%s' because clip %d was already specified as active at this time.
mutex: pthread_mutex_lock failed
SdfPathTable::_IterBoolPair SdfPathTable<std::vector<Usd_ClipCache::Clips>>::_InsertInTable(const SdfPathTable::value_type &) [MappedType = std::vector<Usd_ClipCache::Clips>]
void SdfPathTable<std::vector<Usd_ClipCache::Clips>>::_Grow() [MappedType = std::vector<Usd_ClipCache::Clips>]
UsdStages in aggregate
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/stage.cpp
UsdStage
UsdStage::UsdStage(const SdfLayerRefPtr &, const SdfLayerRefPtr &, const ArResolverContext &, const UsdStagePopulationMask &, UsdStage::InitialLoadSet)
_rootLayer
UsdStage::UsdStage(rootLayer=@%s@, sessionLayer=@%s@)
UsdStage::~UsdStage(rootLayer=@%s@, sessionLayer=@%s@)
UsdStage::_InstantiateStage: Creating new UsdStage
instantiating stage
UsdStage::_InstantiateStage: Time elapsed (s): %f
static UsdStageRefPtr UsdStage::Open(const std::string &, UsdStage::InitialLoadSet)
Failed to open layer @%s@
static UsdStageRefPtr UsdStage::Open(const std::string &, const ArResolverContext &, UsdStage::InitialLoadSet)
static UsdStageRefPtr UsdStage::Open(const SdfLayerHandle &, UsdStage::InitialLoadSet)
Invalid root layer
UsdStage::Open(rootLayer=@%s@, load=%s)
static UsdStageRefPtr UsdStage::Open(const SdfLayerHandle &, const SdfLayerHandle &, UsdStage::InitialLoadSet)
UsdStage::Open(rootLayer=@%s@, sessionLayer=@%s@, load=%s)
static UsdStageRefPtr UsdStage::Open(const SdfLayerHandle &, const ArResolverContext &, UsdStage::InitialLoadSet)
UsdStage::Open(rootLayer=@%s@, pathResolverContext=%s, load=%s)
_ValidateEditPrim
bool UsdStage::_ValidateEditPrim(const UsdPrim &, const char *) const
Cannot %s at path <%s>; authoring to an instancing master is not allowed.
Cannot %s at path <%s>; authoring to an instance proxy is not allowed.
_ValidateEditPrimAtPath
bool UsdStage::_ValidateEditPrimAtPath(const SdfPath &, const char *) const
create prim spec
GetMasters
vector<UsdPrim> UsdStage::GetMasters() const
Failed to find prim at master path <%s>.
_InstantiatePrim
Usd_PrimDataPtr UsdStage::_InstantiatePrim(const SdfPath &)
Newly instantiated prim <%s> already present in _primMap
Inactive prim <%s>
Instance prim <%s>
_ComposeChildren
void UsdStage::_ComposeChildren(Usd_PrimDataPtr, const UsdStagePopulationMask *, bool)
prim->_ComposePrimChildNames(&nameOrder)
Children empty <%s>
Children same in same order <%s>
Unable to instantiate prim with empty path.
Unable to instantiate prim with invalid path.
Children all new <%s>
!prim->_firstChild
Children appended <%s>
Children removed from end <%s>
Require general children recomposition <%s>
Removing <%s>
Preserving <%s>
Creating new <%s>
!tempChildren.empty()
(%s on stage @%s@ <%p>)
%s %s
_ReportErrors
void UsdStage::_ReportErrors(const PcpErrorVector &, const std::vector<std::string> &, const std::string &) const
_ComposeSubtreesInParallel
void UsdStage::_ComposeSubtreesInParallel(const vector<Usd_PrimDataPtr> &, const vector<SdfPath> *)
_ComposeSubtreeImpl
void UsdStage::_ComposeSubtreeImpl(Usd_PrimDataPtr, Usd_PrimDataConstPtr, const UsdStagePopulationMask *, const SdfPath &)
prim->_primIndex
Prim index at <%s> not found in PcpCache for UsdStage %s
_DestroyPrimsInParallel
void UsdStage::_DestroyPrimsInParallel(const vector<SdfPath> &)
!_dispatcher && !_primMapMutex
Destroying <%s>
_DestroyPrim
void UsdStage::_DestroyPrim(Usd_PrimDataPtr)
Destroyed prim <%s> not present in stage's data structures
IsSupportedFile
static bool UsdStage::IsSupportedFile(const std::string &)
Empty file path given
_IsValidPathForCreatingPrim
std::pair<bool, UsdPrim> UsdStage::_IsValidPathForCreatingPrim(const SdfPath &) const
Path must be an absolute path: <%s>
Path must be a prim path: <%s>
Path must not contain variant selections: <%s>
create prim
OverridePrim
UsdPrim UsdStage::OverridePrim(const SdfPath &)
Failed to create PrimSpec for <%s>
_DefinePrim
UsdPrim UsdStage::_DefinePrim(const SdfPath &, const TfToken &)
Failed to create primSpec for <%s>
Failed to define UsdPrim <%s>
GetPathResolverContext
ArResolverContext UsdStage::GetPathResolverContext() const
_GetPcpCache()
_HandleLayersDidChange
void UsdStage::_HandleLayersDidChange(const SdfNotice::LayersDidChangeSentPerLayer &)
Detected usd threading violation.  Concurrent changes to layer(s) composed in stage %p rooted at @%s@.  (serial=%zu, lastSerial=%zu).
HandleLayersDidChange received
<%s> in @%s@ changed.
Changed field: %s
recomposeChanges.size() == 1
Composing prim indexes: %s%s
 (and %zu more)
_GetDefiningSpecType
SdfSpecType UsdStage::_GetDefiningSpecType(Usd_PrimDataConstPtr, const TfToken &) const
primData
!propName.IsEmpty()
Flatten
SdfLayerRefPtr UsdStage::Flatten(bool) const
rootLayer
flatLayer
Generated from Composed Stage of root layer %s
_GetMetadata
bool UsdStage::_GetMetadata(const UsdObject &, const TfToken &, const TfToken &, bool, VtValue *) const
_ListMetadataFields
TfTokenVector UsdStage::_ListMetadataFields(const UsdObject &, bool) const
_GetAllMetadata
void UsdStage::_GetAllMetadata(const UsdObject &, bool, UsdMetadataValueMap *, bool) const
GetMetadata
bool UsdStage::GetMetadata(const TfToken &, VtValue *) const
Null out-param 'value' for UsdStage::GetMetadata("%s")
null stage
stage with rootLayer @%s@%s
, sessionLayer @%s@
_SetMetadataImpl
bool UsdStage::_SetMetadataImpl(const UsdObject &, const TfToken &, const TfToken &, const T &) [T = VtValue]
Unregistered metadata field: %s
Cannot set metadata at path <%s> in layer @%s@; a prim or property is required
Cannot set metadata. Failed to create spec <%s> in layer @%s@
Cannot set metadata. '%s' is not registered as valid metadata for spec type %s.
bool UsdStage::_SetMetadataImpl(const UsdObject &, const TfToken &, const TfToken &, const T &) [T = SdfAbstractDataConstValue]
UsdStage::LoadAll
Load all loadable prims
UsdStage::LoadNone
Load no loadable prims
UsdStage: @
_CreateNewLayer
SdfLayerRefPtr _CreateNewLayer(const std::string &)
Failed to CreateNew layer with identifier '%s'
-session.usda
/Flattened_Master_%lu
map::at:  key not found
_CopyMetadata
void (anonymous namespace)::_CopyMetadata(const SdfSpecHandle &, const UsdMetadataValueMap &)
Failed copying metadata: %s
_CopyProperty
void (anonymous namespace)::_CopyProperty(const UsdProperty &, const SdfPrimSpecHandle &, const TfToken &, const (anonymous namespace)::_PathRemapping &, const SdfLayerOffset &)
Attribute <%s> has unknown value type. It will be omitted from the flattened result.
_RemoveMasterTargetPaths
void (anonymous namespace)::_RemoveMasterTargetPaths(const UsdProperty &, SdfPathVector *)
Some %s paths from <%s> could not be flattened because they targeted objects within an instancing master.
attribute connection
relationship target
_SetStageMetadataOrDictKey
bool _SetStageMetadataOrDictKey(const UsdStage &, const TfToken &, const TfToken &, const VtValue &)
Metadata '%s' is not registered as valid Layer metadata, and cannot be set on UsdStage %s.
Cannot set layer metadata '%s' in current edit target "%s", as it is not the root layer or session layer of stage "%s".
UsdVariantFallbacks
_usdGlobalVariantFallbackMap_Tf_StaticDataFactoryImpl
void _usdGlobalVariantFallbackMap_Tf_StaticDataFactoryImpl(PcpVariantFallbackMap *)
%s[UsdVariantFallbacks] was not a dictionary.
%s[UsdVariantFallbacks] value for %s must be an arrays.
_OpenImpl
static UsdStageRefPtr UsdStage::_OpenImpl(UsdStage::InitialLoadSet, const Args &...) [Args = <TfWeakPtr<SdfLayer>>]
stage
static UsdStageRefPtr UsdStage::_OpenImpl(UsdStage::InitialLoadSet, const Args &...) [Args = <TfWeakPtr<SdfLayer>, TfWeakPtr<SdfLayer>>]
static UsdStageRefPtr UsdStage::_OpenImpl(UsdStage::InitialLoadSet, const Args &...) [Args = <TfWeakPtr<SdfLayer>, ArResolverContext>]
create property spec
_CreatePropertySpecForEditing
SdfHandle<PropType> UsdStage::_CreatePropertySpecForEditing(const UsdProperty &) [PropType = SdfAttributeSpec]
Spec type mismatch.  Failed to create %s for <%s> at <%s> in @%s@.  %s already at that location.
Spec type mismatch.  Failed to create %s for <%s> at <%s> in @%s@.  Strongest existing spec, %s at <%s> in @%s@
primSpec
SdfHandle<PropType> UsdStage::_CreatePropertySpecForEditing(const UsdProperty &) [PropType = SdfRelationshipSpec]
SdfHandle<PropType> UsdStage::_CreatePropertySpecForEditing(const UsdProperty &) [PropType = SdfPropertySpec]
_SetValueImpl
bool UsdStage::_SetValueImpl(UsdTimeCode, const UsdAttribute &, const T &) [T = VtValue]
Empty typeName for <%s>
Unknown typename for <%s>: '%s'
Type mismatch for <%s>: expected '%s', got '%s'
Warning: authoring time sample value on uniform attribute <%s> at time %.3f
Cannot set attribute value.  Failed to create attribute spec <%s> in layer @%s@
_GetAttrTypeImpl
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<TfToken>]
_GetAttrVariabilityImpl
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<TfToken>]
TfIterator::Reference TfIterator<std::pair<PcpNodeIterator, PcpNodeIterator>, true>::operator*() [T = std::pair<PcpNodeIterator, PcpNodeIterator>, Reverse = true]
_GetPropCustomImpl
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<TfToken>]
_GetPrimTypeNameImpl
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<TfToken>]
_GetPrimSpecifierImpl
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<TfToken>]
Failed to get valid specPos for %s
specPos.GetLayer()
No PrimSpecs for '%s'
Recomposing stage
Did Change Significantly: %s
Did Change Prim: %s
No cache changes
Nothing to recompose in cache changes
Ignoring elided prim <%s>
recomposing stage
_RecomposePrims
void UsdStage::_RecomposePrims(const PcpChanges &, T *) [T = std::map<SdfPath, std::vector<const SdfChangeList::Entry *>>]
!pathsContainsAbsRoot || pathsToRecompose->size() == 1
Recomposing: %s
Skipping non-prim: %s
Adding paths that use <%s> in layer @%s@: %s
../ModelKit/extern/usd/pxr/base/tf/notice.h
GetNoticeType
virtual TfType TfNotice::_StandardDeliverer<TfNotice::_Deliverer<TfWeakPtr<UsdStage>, TfWeakPtr<SdfLayer>, void (UsdStage::*)(const SdfNotice::LayersDidChangeSentPerLayer &), SdfNotice::LayersDidChangeSentPerLayer>>::GetNoticeType() const [Derived = TfNotice::_Deliverer<TfWeakPtr<UsdStage>, TfWeakPtr<SdfLayer>, void (UsdStage::*)(const SdfNotice::LayersDidChangeSentPerLayer &), SdfNotice::LayersDidChangeSentPerLayer>]
notice type 
 undefined in the TfType system
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<SdfSpecifier>]
TfIterator<T, Reverse> &TfIterator<std::pair<PcpNodeIterator, PcpNodeIterator>, true>::operator++() [T = std::pair<PcpNodeIterator, PcpNodeIterator>, Reverse = true]
TfIterator::Iterator &TfIterator<std::pair<PcpNodeIterator, PcpNodeIterator>, true>::operator->() [T = std::pair<PcpNodeIterator, PcpNodeIterator>, Reverse = true]
TfIterator<T, Reverse> &TfIterator<const std::vector<TfRefPtr<SdfLayer>>, true>::operator++() [T = const std::vector<TfRefPtr<SdfLayer>>, Reverse = true]
TfIterator::Reference TfIterator<const std::vector<TfRefPtr<SdfLayer>>, true>::operator*() [T = const std::vector<TfRefPtr<SdfLayer>>, Reverse = true]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::UntypedValueComposer]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::UntypedValueComposer]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::UntypedValueComposer]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::UntypedValueComposer]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::UntypedValueComposer]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::StrongestValueComposer]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::StrongestValueComposer]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::StrongestValueComposer]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::StrongestValueComposer]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::StrongestValueComposer]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::ExistenceComposer]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::ExistenceComposer]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::ExistenceComposer]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::ExistenceComposer]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::ExistenceComposer]
_GetValueImpl
bool UsdStage::_GetValueImpl(UsdTimeCode, const UsdAttribute &, Usd_InterpolatorBase *, T *) const [T = VtValue]
resolveInfo._source != UsdResolveInfoSourceIsTimeDependent
Warning: detected time sample value on uniform attribute <%s>
_GetTimeSampleValue
static bool UsdStage_ResolveInfoAccess::_GetTimeSampleValue(UsdTimeCode, const UsdAttribute &, const UsdResolveInfo &, const double *, const double *, Usd_InterpolatorBase *, T *) [T = VtValue]
layer->GetBracketingTimeSamplesForPath( specPath, localTime, &lower, &upper)
No bracketing time samples for %s on <%s> for time %g between %g and %g
RESOLVE: reading field %s:%s from @%s@, with requested time = %.3f (local time = %.3f) reading from sample %.3f 
RESOLVE: reading field %s:%s from clip %s, with requested time = %.3f reading from sample %.3f 
RESOLVE: reading field %s:%s from @%s@, with t = %.3f as default
_GetValueFromResolveInfoImpl
bool UsdStage::_GetValueFromResolveInfoImpl(const UsdResolveInfo &, UsdTimeCode, const UsdAttribute &, Usd_InterpolatorBase *, T *) const [T = VtValue]
layer->HasField(specPath, SdfFieldKeys->Default, result)
VtDictionary
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, const SdfLayer>::operator->() const [PtrTemplate = TfWeakPtr, Type = const SdfLayer]
../ModelKit/extern/usd/pxr/usd/usd/stage.h
bool UsdStage::GetMetadata(const TfToken &, T *) const [T = double]
Requested type %s for stage metadatum %s does not match retrieved type %s
bool UsdStage::GetMetadata(const TfToken &, T *) const [T = TfToken]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<bool>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<bool>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<bool>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<bool>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<bool>]
bool UsdStage::_GetValueImpl(UsdTimeCode, const UsdAttribute &, Usd_InterpolatorBase *, T *) const [T = SdfAbstractDataValue]
static bool UsdStage_ResolveInfoAccess::_GetTimeSampleValue(UsdTimeCode, const UsdAttribute &, const UsdResolveInfo &, const double *, const double *, Usd_InterpolatorBase *, T *) [T = SdfAbstractDataValue]
bool UsdStage::_GetValueFromResolveInfoImpl(const UsdResolveInfo &, UsdTimeCode, const UsdAttribute &, Usd_InterpolatorBase *, T *) const [T = SdfAbstractDataValue]
bool UsdStage::_SetValueImpl(UsdTimeCode, const UsdAttribute &, const T &) [T = SdfAbstractDataConstValue]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<int>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<int>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<int>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<int>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<int>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<int>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<int>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<int>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<int>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<int>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<unsigned int>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<unsigned int>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<unsigned int>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<unsigned int>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<unsigned int>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<long long>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<long long>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<long long>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<long long>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<long long>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<float>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<float>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<float>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<float>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<float>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<float>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<float>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<float>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<float>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<float>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<double>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<double>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<double>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<double>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<double>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<double>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<double>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<double>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<double>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<double>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<std::string>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<std::string>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<std::string>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<std::string>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<std::string>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<std::string>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<std::string>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<std::string>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<std::string>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<std::string>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<TfToken>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<TfToken>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<TfToken>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<TfToken>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<TfToken>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfMatrix4d>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfMatrix4d>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfMatrix4d>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfMatrix4d>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfMatrix4d>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfMatrix4d>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfMatrix4d>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfMatrix4d>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfMatrix4d>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfMatrix4d>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuath>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuath>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuath>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuath>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuath>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuatf>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuatf>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuatf>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuatf>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfQuatf>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2f>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2f>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2f>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2f>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2f>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2d>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2d>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2d>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2d>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<GfVec2d>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3h>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3h>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3h>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3h>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3h>>]
void UsdStage::_GetAttrTypeImpl(const UsdAttribute &, const TfToken &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3f>>]
void UsdStage::_GetAttrVariabilityImpl(const UsdAttribute &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3f>>]
void UsdStage::_GetPropCustomImpl(const UsdProperty &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3f>>]
void UsdStage::_GetPrimTypeNameImpl(const UsdPrim &, bool, Composer *) const [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3f>>]
bool _GetPrimSpecifierImpl(Usd_PrimDataConstPtr, bool, Composer *) [Composer = (anonymous namespace)::TypeSpecificValueComposer<VtArray<GfVec3f>>]
_pcpInstanceKey:
_mask: 
_loadRules: 
_hash: 
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/crateData.cpp
bool Usd_CrateData::Save(const std::string &)
Tried to save to empty fileName
Usd_CrateDataImpl::Save
Saving usd binary file @%s@
bool Usd_CrateDataImpl::Save(const std::string &)
_PopulateFromCrateFile
bool Usd_CrateDataImpl::_PopulateFromCrateFile()
CrateFile specs are corrupted, contain pathIndices out of bounds
Usd_CrateDataImpl main hash table
field data
CrateFile specs are corrupted, contain field data out of bounds
CrateFile specs are corrupted, contains invalid field data.
_SpecToPair::result_type Usd_CrateDataImpl::_PopulateFromCrateFile()::_SpecToPair::operator()(const CrateFile::Spec &) const
!r.first.IsTargetPath()
Opening usd binary asset @%s@
bool Usd_CrateDataImpl::Open(const std::string &, int64_t, int64_t)
void Usd_CrateDataImpl::EraseSpec(const SdfPath &)
_hashData->erase(path)
iter != _flatData.end()
void Usd_CrateDataImpl::MoveSpec(const SdfPath &, const SdfPath &)
oldIter != _hashData->end()
oldIter != _flatData.end()
iresult.second
void Usd_CrateDataImpl::CreateSpec(const SdfPath &, SdfSpecType)
specType != SdfSpecTypeUnknown
void Usd_CrateDataImpl::Set(const SdfPath &, const TfToken &, const VtValue &)
Cannot set fields on relationship target or attribute connection specs: <%s>:%s = %s
_SetHelper
void Usd_CrateDataImpl::_SetHelper(Data &, const SdfPath &, typename Data::value_type *&, const TfToken &, const VtValue &) [Data = std::unordered_map<SdfPath, Usd_CrateDataImpl::_MapSpecData, SdfPath::Hash>]
i != d.end()
Tried to set field '%s' on nonexistent spec at <%s>
void Usd_CrateDataImpl::_SetHelper(Data &, const SdfPath &, typename Data::value_type *&, const TfToken &, const VtValue &) [Data = boost::container::flat_map<SdfPath, Usd_CrateDataImpl::_FlatSpecData, SdfPath::FastLessThan>]
void Usd_CrateDataImpl::Set(const SdfPath &, const TfToken &, const SdfAbstractDataConstValue &)
value.GetValue(&val)
_ListTimeSamplesForPath
const std::vector<double> &Usd_CrateDataImpl::_ListTimeSamplesForPath(const SdfPath &) const
Cannot target a master or an object within a master.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/relationship.cpp
SetTargets
bool UsdRelationship::SetTargets(const SdfPathVector &) const
Cannot set target <%s> on relationship <%s>: %s
GetTargets
bool UsdRelationship::GetTargets(SdfPathVector *) const
GetForwardedTargets
bool UsdRelationship::GetForwardedTargets(SdfPathVector *) const
Passed null pointer for targets on <%s>
bool SdfListEditorProxy<SdfNameKeyPolicy>::_Validate() const [_TypePolicy = SdfNameKeyPolicy]
void SdfListProxy<SdfNameKeyPolicy>::_Edit(size_t, size_t, const SdfListProxy::value_vector_type &) [_TypePolicy = SdfNameKeyPolicy]
bool SdfListProxy<SdfNameKeyPolicy>::_Validate() [_TypePolicy = SdfNameKeyPolicy]
bool SdfListProxy<SdfNameKeyPolicy>::_Validate() const [_TypePolicy = SdfNameKeyPolicy]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usd/usdzResolver.cpp
OpenAsset
virtual std::shared_ptr<ArAsset> Usd_UsdzResolver::OpenAsset(const std::string &, const std::string &)
Cannot open %s in %s: compressed files are not supported
Cannot open %s in %s: encrypted files are not supported
../ModelKit/extern/usd/pxr/usd/ar/threadLocalScopedCache.h
BeginCacheScope
void ArThreadLocalScopedCache<Usd_UsdzResolverCache::_Cache>::BeginCacheScope(VtValue *) [CachedType = Usd_UsdzResolverCache::_Cache]
Unexpected cache scope data
EndCacheScope
void ArThreadLocalScopedCache<Usd_UsdzResolverCache::_Cache>::EndCacheScope(VtValue *) [CachedType = Usd_UsdzResolverCache::_Cache]
!cacheStack.empty()
<'%s' @ %p>
AR_RESOLVER_INIT
Print debug output during asset resolver initialization
PXR_AR_DEFAULT_SEARCH_PATH
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/ar/defaultResolver.cpp
BindContext
virtual void ArDefaultResolver::BindContext(const ArResolverContext &, VtValue *)
Unknown resolver context object: %s
UnbindContext
virtual void ArDefaultResolver::UnbindContext(const ArResolverContext &, VtValue *)
Unbinding resolver context in unexpected order: %s
void ArThreadLocalScopedCache<ArDefaultResolver::_Cache>::BeginCacheScope(VtValue *) [CachedType = ArDefaultResolver::_Cache]
void ArThreadLocalScopedCache<ArDefaultResolver::_Cache>::EndCacheScope(VtValue *) [CachedType = ArDefaultResolver::_Cache]
PXR_AR_DISABLE_PLUGIN_RESOLVER
Disables plugin resolver implementation, falling back to default supplied by Ar.
ArGetResolver(): Plugin asset resolver disabled via PXR_AR_DISABLE_PLUGIN_RESOLVER.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/ar/resolver.cpp
_InitializeUnderlyingResolver
void (anonymous namespace)::_Resolver::_InitializeUnderlyingResolver()
ArGetResolver(): Preferred resolver %s not found. Using default resolver.
ArGetResolver(): Preferred resolver %s does not derive from ArResolver. Using default resolver.
ArGetResolver(): Using preferred resolver %s
ArGetResolver(): Found asset resolver types: [%s]
!resolverTypes.empty()
ArGetResolver(): Found multiple plugin asset resolvers, using %s
ArGetResolver(): %s
ArGetResolver(): Found package resolver %s
ArGetResolver(): Skipping package resolver %s because plugin cannot be found
_InitializePackageResolvers
void (anonymous namespace)::_Resolver::_InitializePackageResolvers()
No package formats specified in '%s' metadata for '%s'
Expected list of formats in '%s' metadata for '%s'
ArGetResolver(): Using package resolver %s for %s from plugin %s
extensions
virtual void (anonymous namespace)::_Resolver::BeginCacheScope(VtValue *)
cacheData.size() == 1 + _GetNumPackageResolvers()
virtual void (anonymous namespace)::_Resolver::EndCacheScope(VtValue *)
cacheScopeData->IsHolding<_ResolverCacheData>()
_CreateResolver
std::unique_ptr<ArResolver> (anonymous namespace)::_CreateResolver(const TfType &, std::string *)
Invalid resolver type
Given type %s does not derive from ArResolver
Failed to find plugin for %s
Failed to load plugin %s for %s
Failed to manufacture asset resolver %s from plugin %s
Using asset resolver %s from plugin %s
Using default asset resolver %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/ar/filesystemAsset.cpp
ArFilesystemAsset
ArFilesystemAsset::ArFilesystemAsset(FILE *)
Invalid file handle
virtual size_t ArFilesystemAsset::Read(void *, size_t, size_t)
Error occurred reading file: %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/ar/defaultResolverContext.cpp
ArDefaultResolverContext
ArDefaultResolverContext::ArDefaultResolverContext(const std::vector<std::string> &)
Could not determine absolute path for search path prefix '%s'
Search path: 
    
    
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/arCustom/memoryAsset.cpp
ArMemoryAsset
ArMemoryAsset::ArMemoryAsset(const char *, size_t)
Invalid input data
virtual size_t ArMemoryAsset::Read(void *, size_t, size_t)
arCustom
address
size
jointPath.count and jointBindTransforms.length * sizeof(matrix_float4x4) have to be equal.
jointBindTransformsArray size is too small (%lu elements) to hold all %lu elements
-Indices
%@-%@
Octree material
ModelIOException
[%@ %@]: value.type must be MDLMeshBufferTypeCustom
MDLMeshBuffer is not of type MDLMeshBufferView, unsupported
.column0
.column1
.column2
.column3
.column1;
.string
.name
.url
.vector
.matrix
.buffer
.stride
.semantic
Base
baseColor
emission
interfaceIndexOfRefraction
materialIndexOfRefraction
ambientOcclusion
ambientOcclusionScale
SimplifiedPhysical
metallic
roughness
sheen
sheenTint
anisotropic
anisotropicRotation
specular
specularTint
clearcoat
clearcoatGloss
subsurface
MDLMaterialProperty
userProperties.count
userProperties[%ld]
builtinProperties.count
builtinProperties[%ld]
[%@ %@]: input cannot be assigned to multiple nodes
[%@ %@]: input appears in output array
[%@ %@]: output cannot be assigned to multiple nodes
[%@ %@]: output appears in input array
[%@ %@]: output connection not found in node outputs
[%@ %@]: output connection not found in node inputs
v16@?0@"MDLMaterialPropertyNode"8
map_Ka
map_Kd
map_Ks
opacity
map_d
map_ao
specularExponent
map_Ns
indexOfRefraction
map_Ni
bump
map_bump
disp
displacement
map_disp
objectDisplacementScale
map_objectDisplacementScale
map_subsurface
map_metallic
map_specularTint
map_roughness
map_anisotropicRotation
anisotropicMapRotation
map_anisotropic
map_sheenTint
map_sheen
clearCoatGloss
map_clearCoatGloss
clearCoat
map_clearCoat
objectSpaceNormal
map_objectSpaceNormal
objectTangentSpaceNormal
map_objectTangentSpaceNormal
tangentSpaceNormal
map_tangentSpaceNormal
targetShapes.count and shapeSetTargetWeights.count have to match.
targetShapes.count has to equal sum of all targetShapeCounts.
shapeSetTargetWeights and shapeSetTargetCounts have to be either both set or both nil.
targetWeightsArray size is too small (%lu elements) to hold all %lu elements
targetCountsArray size is too small (%lu elements) to hold all %lu elements
Warning: Invalid color data found for %s
Curve vertex count (%d) out of range [0, %zu].
curve
-Material
submesh
lines in file too long to parse
mtllib
Too much unrecognized data in file, can't parse
Failed to open file path.
# Apple ModelI/O MTL File: 
newmtl material_
Kd = 0.5 0.5 0.5
map_displacement
.mtl
# Apple ModelIO OBJ File: 
mtllib 
g mesh_
bijective
aoCoord
vt2 
usemtl material_
s off
Could not open OBJ file
OBJ file has no contents
Could not read OBJ file
_%@.png
%@/%@
cannot import to nil asset
MDL_OBJ
Unable to find mtl file %@
newmtl
@TODO
decal
refl
illum
-clamp
-blendu
-blendv
-imfchan
-texres
-type
Adding %d submeshes
Could not allocate topology buffer
-Topology
Could not allocate index buffer
OBJ model
OBJ file has no faces
No vertices in OBJ file
Creating vertex buffer for %d vertices
Too many vertices in OBJ file
Could not allocate vertex buffer
No valid vertex descriptor layouts found
Could not open %@ file
%@ file map failed
%@ file has no contents
Could not read %@ file
v32@?0@"NSString"8@"NSArray"16^B24
v8@?0
unordered_map::at: key not found
[%@ %@]: geometryType for Cone must be MDLGeometryTypeTriangles or MDLGeometryTypeLines
cone
-Submesh
[%@ %@]: geometryType must be MDLGeometryTypeLines, MDLGeometryTypeTriangles, or MDLGeometryTypeQuads
[%@ %@]: Could not allocate mesh buffer
icosahedron
[%@ %@]: geometryType for Ellipsoid must be MDLGeometryTypeTriangles or MDLGeometryTypeLines
ellipsoid
sphere
material
Warning: invalid offset (%lu) and length (%lu) combination provided
Warning cannot find valid iosurface for buffer idx: %d
sharedRegions.count
sharedRegions[%zu]
.iosurface
regionIndices.count
regionIndices[%zu]
.regionIndex
.offset
.length
.count
[%ld]
Warning: NSZone is not supported in current development. 
Warning: fillData:offset: not currently supported
Warning: Buffer is not writable, could not map
.view
.type
Warning: newBuffer:type: not currently supported
Warning: zones not supported in current development 
Warning: zones not supported in current development
Warning: newBufferWithData: not currently supported
[%@ %@]: Unsupported geometry type for capsule
capsule
MDLErrorDomain
MDLErrorKey
kMDLAssetPreserveTopology
kMDLAssetPreserveIndexing
kMDLAssetComputeFaceNormals
kMDLAssetComputeVertexNormals
kMDLAssetNormalSmoothingThreshold
kMDLAssetPreserveExistingNormals
kMDLAssetDisplayNURBSPatches
kMDLAssetAssetAtTime
kMDLAssetComputeTangents
kMDLAssetComputeBitangents
kMDLAssetTangentSmoothingThreshold
kMDLAssetTangentUVSet
kMDLAssetVertexDescriptor
kMDLAssetBufferAllocator
kMDLAssetComputeExtents
[%@ %@]: Requested class must be an MDLObject or a subclass of MDLObject
MDLAsset:
v24@?0@"MDLObject"8^B16
Failed to remove %@
Warning: No valid layouts found for vertex descriptor, using default vertex descriptor instead.
[%@ %@]: only accepts usdz file
Could not load data from %@
Unable to issue extension for path %@
USDA
USDC
USDZ
Could not load asset with unknown extension from %@
Could not save file to %s
Could not save STL file to %s
Could not save OBJ file to %s
Could not save PLY file to %s
Unknown extension on URL: %s
[%@ %@]: density must be greater than 0
[%@ %@]: must implement sphericalHarmonicsCoefficientsAtPosition: selector if using heuristic type MDLProbePlacementIrradianceDistribution
Mesh %s does contain invalid normals data. Skipping normal computation.
Mesh %s does contain valid position data. Skipping normal computation.
tangents
Warning: Mesh %s: unable to find uv set name: %s, use first uv set instead.
Mesh %s does contain valid normal data. Skipping tangent computation.
Mesh %s does not contain valid texture coordinate data. Skipping tangent computation.
bitangents
Failed to generate tangent space for Mesh %s.
ModelKit/extern/usd/pxr/base/vt/array.h
File is too small to be valid STL
solid
facet normal
endsolid
facet
outer
endloop
endfacet
endfacet tag missing, couldn't parse STL
Bad triangle count, couldn't parse STL
STL material
Too many triangles to write, file not saved
[_ABSOLUTELUMENS]%f
URL provided for IES initialization not valid
IESLight not properly initialized, cannot generate texture.
[%@ %@]: Spherical harmonics levels beyond 3 are not supported
Computation of Spherical Harmonics Coefficients level %lu not yet supported
Warning: Prim %s has %lu elements for %s even though it is marked constant.
Warning: Prim %s has %lu elements for %s and %lu elements for %s even though they have the same interpolation mode %s
Warning: Prim %s has %s interpolation for %s and %s interpolation for %s; this combination is not supported by UsdImaging
ModelKit/extern/usd/pxr/usd/usdGeom/primvar.h
ComputeFlattened
bool UsdGeomPrimvar::ComputeFlattened(VtArray<ScalarType> *, UsdTimeCode) const [ScalarType = GfVec3f]
No indices authored for indexed primvar <%s>.
For primvar %s: %s
Found %ld invalid indices at positions [%s%s] that are out of range [0,%ld).
, ...
bool UsdGeomPrimvar::ComputeFlattened(VtArray<ScalarType> *, UsdTimeCode) const [ScalarType = float]
public.alembic
public.geometry-definition-format
public.polygon-file-format
public.standard-tesselated-geometry-format
com.pixar.universal-scene-description
com.pixar.universal-scene-description-mobile
mesh
pthread_join
pthread_detach
thread_monitor %s in %s
pthread_attr_init
pthread_attr_setstack_size
pthread_create
pthread_attr_destroy
Invalid topology specified : face with %d vertices > %d max.
Invalid topology specified : non-triangular faces not supported by Loop scheme.
Invalid topology detected : vertex with valence %d > %d max.
Invalid topology detected : maximum valence not assigned.
Invalid topology detected as completed from partial specification.
Invalid topology detected as fully specified.
[%@ %@]: invalid geometryType requested
plane
Can't choose for edge creation
libtbbmalloc.dylib
ALLOCATOR
scalable_malloc
malloc
scalable_free
scalable_aligned_malloc
scalable_aligned_free
points
textureCoordinates
color
jointIndices
jointWeights
%@%d
Warning: attribute %s on mesh %s has elementSize(%d) > %d which does not map to a valid MDLVertexFormat
Warning: unable to convert %s to MDLVertexAttribute.
Warning: Trying to interleave multiple attributes into buffer: %ul,
but their element counts do not agree, taking the mininum.
Warning: target shape points does not match MDLMesh vertexCount. Skipping MDLMorphDeformer.
indices
faceVertexCounts
creaseIndices
creaseSharpness
vertexCreaseIndices
vertexCreaseSharpness
Warning: %s: attribute %s is constant, but the attribute buffer (%lu) is not the same size as the attribute's element size (%d). 
Warning: %s: attribute %s is vertex varying and indexed, but the attribute indices (%lu) are not the same size as the mesh's vertex count (%d). 
Warning: %s: attribute %s is vertex varying and not indexed, but the attribute buffer (%lu) is not the same size as the mesh's vertex count (%d) * attribute's element size (%d). 
Warning: %s: attribtue %s is uniform varying and indexed, but the attribute indices (%lu) are not the same size as the mesh's face count (%d). 
Warning: %s: attribute %s is uniform varying and not indexed, but the attribute buffer (%lu) is not the same size as the mesh's face count (%d) * attribute's element size (%d). 
Warning: %s: attribute %s is face varying and indexed, but the attribute indices (%lu) is not the same size as the mesh's face vertex count (%d). 
Warning: %s: attribute %s is face varying and not indexed, but the attribute buffer (%lu) is not the same size as mesh's face vertex count (%d) * attribute's element size (%d). 
Warning: %s: attribute %s has unknown varying frequency. 
%s: face %zu vertex count (%d) out of range [0, %zu].
%s: face vertex indices size of range.
%s: face vertex index out of bound.
%s: hole index out of bound.
%s: mismatch corner indices and corner sharpnesses.
%s: mismatch crease lengths and crease sharpnesses.
%s: invalid points data.
%s: corner index out of bound.
%s: crease index out of bound.
%s: mismatch crease lengths and crease indices.
Warning: mesh has a face index bigger than face count, ignoring mesh: %s.
Unable to unwind attribute indice of attribute named: %s
%s: attribute has indices out of bound.
%s: has attribute with indices out of bound.
void VtArray<float>::push_back(const VtArray::ElementType &) [T = float]
VtArray::value_type *VtArray<unsigned short>::_AllocateNew(size_t) [T = unsigned short]
void VtArray<unsigned short>::_DetachIfNotUnique() [T = unsigned short]
Cannot remove zero scaling from matrix.
[%@ %@]: Can only subdivide submesh in mesh using MDLGeometryTypeTriangles, MDLGeometryTypeQuads, or MDLGeometryTypeVariableTopology
[%@ %@]: If submesh object's geometryType is MDLGeometryTypeVariableTopology, it must have a topology
%@_subd%d
TBB_VERSION
Tools support
disabled
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/tbb/src/tbb/tbb_main.cpp
param < global_control::parameter_max
Invaliud transform op in the USD transform stack
Internal error: Skipping unknown MDLTransformOp.
self
Warning: %@ is not of type MDLAnimatedVector3
Warning: %@ is not of type MDLAnimatedVector4
Warning: %@ is not of type MDLAnimatedQuaternion
Warning: %@ is not of type MDLAnimatedMatrix4x4
[%@ %@]:set local transform forTime not yet supported
position
orientation
scale
eulerAngles
eulerAngles.x
eulerAngles.y
eulerAngles.z
[%@ %@]: Number of spherical harmonics coefficients inconsistent with spherical harmonics level
file:///tmp/reflective.png
file:///tmp/irradianceConvo.png
file:///tmp/sh.png
sourceName
Unrecognized PLY header
int8
char
uint8
uchar
int16
short
uint16
ushort
int32
uint32
uint
float32
float
float64
double
ascii
binary_big_endian
Couldn't parse binary_big_endian PLY file
Couldn't recognize PLY format %s
element
property
Malformed PLY file
list
Unknown PLY data format %s
Unknown PLY property type %s
comment
end_header
green
blue
face
Unknwon PLY property type %s
PLY Material
PLY model
Could not find PLY file
Count not open PLY file
Empty file
.ply
ply 
format ascii 1.0
comment object: submesh
comment object: 
element vertex 
property float x
property float y
property float z
property uchar red
property uchar green
property uchar blue
element face 
property list uchar int vertex_index
__RML_open_factory
__TBB_make_rml_server
__RML_close_factory
__TBB_call_with_my_server_info
libirml.dylib
Illegal joint path <%s> in animation: %s. Skipping.
Illegal joint path %s in skeleton: %s. Skipping.
Illegal joint path in skeleton: %s. Skipping.
No joint paths exist in skeleton %s. Skipping.
menvTextureCoords
primvars:Texture_uv
displayColor
metal
diffuse
transparency
translucency
aniso
clearcoatgloss
displacementscale
aoScale
ambientocclusionscale
ambientocclusion
occlusion
Unable to infer attribute frequency for %s. Skipping
Inferring attribute frequency for %s.
Inferring attribute frequency for %s
Warning: %s : Skipping points attribute. Unsupported value type %s. Expected type compatible with %s
Warning: %s : Skipping normals attribute. Unsupported value type %s. Expected type compatible with %s
Warning: %s : Skipping normal attribute
Texture_uv
displayOpacity
primvars:displayOpacity
skinJointIndices
skinJointWeights
Warning: %s : Skipping attribute %s, couldn't get the primvar contents
Warning: %s : Skipping attribute %s with invalid value type %s
Warning: %s : Skipping attribute %s
cornerIndices
cornerSharpnesses
creaseLengths
creaseSharpnesses
Warning: joint paths and bind transforms have different sizes. Skipping MDLSkinDeformer.
Warning: corrupt channelTargetCounts attribute. Skipping MDLBlendShapeDeformer.
Warning: corrupt channelTargetWeights attribute. Skipping MDLBlendShapeDeformer.
Warning: %s : Skipping target %s
Warning: %s: Mismatch blendshape name size and blendshape target size 
Warning: %s : Skipping target %s. Mismatch inbetween target offset size and blendshape target offset size.
Warning: %s : Invalid joint indices interpolation. Skipping joint indices
Warning: %s : Invalid joint weights interpolation. Skipping joint indices
Warning: %s : Skipping joint indices
Warning: %s : Skipping joint weights
varname
result
frame:stPrimvarName
rotation
translation
UsdPrimvarReader_float2
file
PxrPrimvarReader
PxrPrimvarReader_float2
UsdTransform2d
wrapS
wrapT
repeat
clamp
mirror
Warning: Invalid texture component ':%s'.
PxrUVTexture
UsdUVTexture
UsdPrimvarReader
surface
PxrPreviewSurface
UsdPreviewSurface
clearcoatRoughness
diffuseColor
emissive
emissiveColor
specularColor
useSpecularPipeline
useSpecularWorkflow
USDMeshPrim does not contain mesh data. Skipping
Warning: Mesh %s will be triangulated for normal computation
Warning: Mesh %s will be triangulated for tangent computation
Warning: %s does not contain normal or have compute normal options specified.To compute tangent, face normal will be computed first.
void VtArray<unsigned int>::push_back(const VtArray::ElementType &) [T = unsigned int]
ModelKit/extern/usd/pxr/usd/usd/prim.h
HasAPI
bool UsdPrim::HasAPI(const TfToken &) const [T = UsdSkelBindingAPI]
Removed 
 bad triangles
No bad triangles found.
No triangles to map
Unable to pack a map for AO baking
Successful insertion in a tree of size 
 with disp 
Fail insertion in a tree of size 
This model can't be inserted in a texture of size 
. Switching to 
Fraction completed : 
Too many triangles to pack in a maximum size texture
$ao-%lu
Couldn't parse triangles from supplied meshes
Texture filling efficiency 
file:///tmp/originalAOTexture.png
Computing vertex bake information for 
 triangles
Fraction completed : %f
jpeg
[%@ %@]: Cannot create topology with a submesh
[%@ %@]: Cannot create topology from triangle strips
faceCount
faceTopology
%lu 
8Bit Indices:
16Bit Indices:
32Bit Indices:
INVALID INDEX TYPE!!!
IndexBuffers: 
Name: %@
IndexCount: %lu
 (%d), 
allocator
indexBuffer
indexCount
indexType
geometryType
Indices
materials
Failed to save 
 because 
mdlabc_
_geo
isGeomParam
arrayExtent
.indices
OTypedArrayProperty::init()
OTypedGeomParam::set()
Assertion %s failed on line %d of file %s
Detailed description: %s
TBB Warning: %s
bad allocation in previous or concurrent attempt
attempted recursive lock on critical section or non-recursive mutex
User-initiated abort has terminated this operation
The same task_handle object cannot be executed more than once
wait() was not called on the structured_task_group
%s: %s
Step must be positive
Index out of requested size range
Index out of allocated segment slots
Index is not allocated
Resource deadlock would occur
Operation not permitted
Wait on condition variable failed
Invalid hash load factor
[backward compatibility] Invalid number of buckets
swap() is invalid on non-equal allocators
reservation size exceeds permitted max size
invalid key
Illegal tagged_msg cast
Blocking terminate failed
TBB: %s
bokeh
Cannot import into nil asset
%@?address=%lx&size=%ld
ArMemoryResolver
Could not import USD file
Could not open file
Unsupported USD file type
/__Master
Materials
BlendShape
__Master
The number of workers is currently limited to %u. The request for %u workers is ignored. Further requests for more workers will be silently ignored until the limit changes.
Thread stack size has been already set to %u. The request for larger stack (%u) cannot be satisfied.
RML might limit the number of workers to %u while %u is requested.
[%@ %@]: divisions must be greater than 0
[%@ %@]: patchRadius must be greater or equal to 0
[%@ %@]: voxelExtent must be greater than 0
[%@ %@]: maxBounds must be strictly greater than minBounds
[%@ %@]: thickness must be greater or equal to 0
[%@ %@]: interiorNBWidth must be greater or equal to 0
[%@ %@]: exteriorNBWidth must be greater or equal to 0
Voxel
Voxels
[%@ %@]: interiorShells must be greater or equal to 0
[%@ %@]: exteriorShells must be greater or equal to 0
anisotropy
binormal
edgeCrease
occlusionValue
shadingBasisU
shadingBasisV
subdivisionStencil
tangent
bitangent
textureCoordinate
unknown
lightmapCoord
<%@: %p stride=%lu>
<%@: %p name=%@ format=%s bufferIndex=%lu offset=%lu>
%lu %s %s off=%lu buf%lu
%lu stride=%lu
<%@: %p attributes:%@ layouts:%@>
layouts.count
layouts[%zu]
attributes.count
attributes[%zu]
.bufferIndex
.format
.time
UChar1
UChar2
UChar3
UChar4
Char1
Char2
Char3
Char4
UChar1Norm
UChar2Norm
UChar3Norm
UChar4Norm
Char1Norm
Char2Norm
Char3Norm
UShort1
UShor2
UShor3
UShort4
Short1
Short2
Short3
Short4
UShort1Norm
UShort2Norm
UShort3Norm
UShort4Norm
Short1Norm
Short2Norm
Short34Norm
Short4Norm
UInt1
UInt2
UInt3
UInt4
Int1
Int2
Int3
Int4
Half1
Half2
Half3
Half4
Float1
Float2
Float3
Float4
Int1010102Norm
UInt1010102Norm
Invalid
array count (%lu) has to match MDLMatrix4x4Array.elementCount (%lu)
array count (%lu) has to match MDLAnimatedVector3Array.elementCount (%lu)
VtArray::value_type *VtArray<GfMatrix4f>::_AllocateNew(size_t) [T = GfMatrix4f]
void VtArray<GfMatrix4f>::_DetachIfNotUnique() [T = GfMatrix4f]
array count (%lu) has to match MDLAnimatedScalarArray.elementCount (%lu)
value array count mismatch: expected %lu * %lu = %lu elements, but got %lu
valuesArray size is too small (%lu elements) to hold all %lu elements
array count (%lu) has to match MDLAnimatedQuaternionArray.elementCount (%lu)
Unidentified exception
Mesh:%s vertexCount %llu
%llu %s:
%f %f %f %f
submeshes:%llu
submesh #%llu
[%@ %@]: vertexBuffer.type must be MDLMeshBufferTypeVertex
[%@ %@]: No descriptor supplied
[%@ %@]: Buffer index out of range
[%@ %@]: Allocators on supplied vertexBuffers do not all match, but they must
[%@ %@]: Must provide texture coordinates, a tangent, and bitangent attribute
[%@ %@]: Must provide position data
[%@ %@]: Must provide texture coordinates
[%@ %@]: Tangent data in float3 format not supplied or could not be created
[%@ %@]: Bitangent data in float3 format not supplied or could not be created
[%@ %@]: Must provide normals
[%@ %@]: Tangent data not supplied or could not be created
Index bitdepth invalid for submesh:%@ setting default to 32bit
[%@ %@]: Must provide attribute name
[%@ %@]: Position data not found
[%@ %@]: Could not create normals attribute
[%@ %@]: Must provide name
[%@ %@]: Texture coordinate data of format float2 not created
<<%@: 0x%lx>, Name: %@, VertexCount: %d, VertexBufferCount: %d>
Not enough memory for buffers
Invalid vertex attribute buffer index
Invalid vertex attribute buffer offset
Failed to copy vertex attribute buffers with OOB access
vertexCount
vertexBuffers
submeshes
[%@ %@]: Must provide either a valid normal pointer or bitangent pointer.
SceneKit
ModelIO
Custom
com.apple.modelio.import
allocatorType
bridgeType
bundleIdentifier
fileExtension
vertexDescriptor
@"NSDictionary"8@?0
com.apple.modelio.export
com.apple.modelio.initialize
Error %s : %s
Warning : %s
FAR_NO_ERROR
FAR_FATAL_ERROR
FAR_INTERNAL_CODING_ERROR
FAR_CODING_ERROR
FAR_RUNTIME_ERROR
[%@ %@]: geometryType for Cylinder must be MDLGeometryTypeTriangles or MDLGeometryTypeLines
cylinder
libcilkrts.so
TBB failed to initialize task scheduler TLS
failed to destroy task scheduler TLS: %s
rml::tbb_factory::make_server failed with status %x, falling back on private rml
private
shared
CILK
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/tbb/src/tbb/governor.cpp
!my_scheduler
task_scheduler_init already initialized
number_of_threads==automatic || number_of_threads > 0
number_of_threads for task_scheduler_init must be automatic or positive
!thread_stack_size
deferred initialization ignores stack size setting
__cilkrts_watch_stack
Could not unmap file - error (%d)
catmark
Cannot export nil asset
Cannot create USD data for export
/Root
subcomponent
/_%d
__UV
primvars:
ao_map
Corrupt %@ attribute data. Skip copying.
ModelKit/extern/usd/pxr/usd/usdGeom/xformOp.h
bool UsdGeomXformOp::Set(const T &, UsdTimeCode) const [T = GfMatrix4d]
Cannot set a value on the inverse xformOp '%s'. Please set value on the paired non-inverse xformOp instead.
Unable to create new vertex buffers, the destination Layout element counts size is: %d, while the maxVertexBufferCount is: %d
Warning: mesh %s has attribute %s with unknown frequency.
Warning: mesh has a faceVertexCount less than 3, ignoring mesh: %s.
trace
v16@?0Q8
frame time : %.2fms
Couldn't copy index buffer because indices too large
Couldn't copy index buffer because invalid indices
Couldn't create buffer to copy indices
Couldn't copy index data data due to geometry type mismatch
MISSING_EDGE_FACES
MISSING_EDGE_VERTS
MISSING_FACE_EDGES
MISSING_FACE_VERTS
MISSING_VERT_FACES
MISSING_VERT_EDGES
FAILED_CORRELATION_FACE_VERT
FAILED_CORRELATION_FACE_EDGE
FAILED_ORIENTATION_INCIDENT_EDGE
FAILED_ORIENTATION_INCIDENT_FACE
FAILED_ORIENTATION_INCIDENT_FACES_EDGES
DEGENERATE_EDGE
NON_MANIFOLD_EDGE
%s - missing face-verts
%s - missing vert-faces
%s - face %d correlation of vert %d failed
%s - missing edge-faces
%s - missing face-edges
%s - face %d correlation of edge %d failed
%s - missing edge-verts
%s - missing vert-edges
%s - edge %d correlation of vert %d failed
%s - vertex %d cannot orient incident faces and edges
%s - vertex %d orientation failure at incident face %d
%s - vertex %d orientation failure at incident edge %d
%s - Error in eIndex = %d:  degenerate edge not tagged marked non-manifold
%s - edge %d with %d incident faces not tagged non-manifold
/usd_plugins/
no memory avaliable in zone
incorrect allocator used with zone
Obj%d
mdl%d
<<%@: 0x%lx>, Name: %@, Children: %d>
 |  
    
 `--%@
%@%@
Edge %d specified to be sharp does not exist (%d, %d)
Vertex %d specified to be sharp does not exist
Cannot apply uniform refinement -- base level appears to be uninitialized.
Cannot apply uniform refinement -- previous refinements already applied.
Warning: unsupported image format %@ in USDZ archive
Needs MDLAsset loaded from a USDZ file.
tiff
com.ilm.openexr-image
[%@ %@]: Only single channel textures supported for cellular noise
[%@ %@]: Only 8 bit textures supported
[%@ %@]: Only 4 channel textures supported for vector noise
[%@ %@]: Only 1 and 4 channel textures supported for scalar noise
[%@ %@]: Only 4 channel textures supported
Only UInt8 and Float skies are supported. Overriding to UInt8
file://%@
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/trace/aggregateNode.cpp
MarkRecursiveChildren
void TraceAggregateNode::MarkRecursiveChildren()
Corrupt stack state.
Invalid stack state.
_MergeRecursive
void TraceAggregateNode::_MergeRecursive(const TraceAggregateNodeRefPtr &)
Marker has no or expired parent.
NULL child is not allowed.
_SetAsRecursionMarker
void TraceAggregateNode::_SetAsRecursionMarker(TraceAggregateNodePtr)
T *TfRefPtr<TraceEventNode>::operator->() const [U = TraceEventNode]
WARNING:
%9.3f ms 
%7.0f samples 
%10.3f samples 
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/trace/reporter.cpp
Report
void TraceReporter::Report(std::ostream &, int)
iterationCount %d is invalid; falling back to 1
Number of iterations: 
   inclusive    exclusive        
  incl./iter   excl./iter       samples/iter
 MallocTags enabled
Trace global reporter
TraceReporter
T *TfRefPtr<TraceAggregateNode>::operator->() const [U = TraceAggregateNode]
T *TfRefPtr<TraceAggregateTree>::operator->() const [U = TraceAggregateTree]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, TraceAggregateNode>::operator->() const [PtrTemplate = TfWeakPtr, Type = TraceAggregateNode]
T *TfRefPtr<TraceEventTree>::operator->() const [U = TraceEventTree]
TraceRegistry global collector
PXR_ENABLE_GLOBAL_TRACE
TraceCollector::BeginEvent
TraceCollector::EndEvent (key)
TraceCollector::_PerThreadData::BeginEvent
TraceCollector::_PerThreadData::EndEvent
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, TraceReporter>::operator->() const [PtrTemplate = TfWeakPtr, Type = TraceReporter]
TraceCollection
Main Thread
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, TraceReporterDataSourceCollector>::operator->() const [PtrTemplate = TfWeakPtr, Type = TraceReporterDataSourceCollector]
virtual TfType TfNotice::_StandardDeliverer<TfNotice::_Deliverer<TfWeakPtr<TraceReporterDataSourceCollector>, TfAnyWeakPtr, void (TraceReporterDataSourceCollector::*)(const TraceCollectionAvailable &), TraceCollectionAvailable>>::GetNoticeType() const [Derived = TfNotice::_Deliverer<TfWeakPtr<TraceReporterDataSourceCollector>, TfAnyWeakPtr, void (TraceReporterDataSourceCollector::*)(const TraceCollectionAvailable &), TraceCollectionAvailable>]
tracelite
bindTransforms
blendShapes
blendShapeWeights
jointNames
joints
normalOffsets
offsets
primvars:skel:geomBindTransform
primvars:skel:jointIndices
primvars:skel:jointWeights
restTransforms
rotations
skel:animationSource
skel:blendShapes
skel:blendShapeTargets
skel:joints
skel:skeleton
translations
weight
Validate
bool UsdSkelTopology::Validate(std::string *) const
_ComputeParentIndicesFromPaths
VtIntArray (anonymous namespace)::_ComputeParentIndicesFromPaths(TfSpan<const SdfPath>)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/skinningQuery.cpp
_InitializeJointInfluenceBindings
void UsdSkelSkinningQuery::_InitializeJointInfluenceBindings(const UsdAttribute &, const UsdAttribute &)
jointIndices element size (%d) != jointWeights element size (%d).
Invalid element size [%d]: element size must be greater than zero.
jointIndices interpolation (%s) != jointWeights interpolation (%s).
Invalid interpolation (%s) for joint influences: interpolation must be either 'constant' or 'vertex'.
GetBlendShapeOrder
../ModelKit/extern/usd/pxr/usd/usdSkel/animMapper.h
Remap
bool UsdSkelAnimMapper::Remap(const Container &, Container *, int, const typename Container::value_type *) const [Container = VtArray<GfMatrix4d>]
'target' is null
Invalid elementSize [%d]: size must be greater than zero.
FindOrCreateAnimQuery
UsdSkelAnimQuery UsdSkel_CacheImpl::ReadScope::FindOrCreateAnimQuery(const UsdPrim &)
FindOrCreateSkelDefinition
UsdSkel_SkelDefinitionRefPtr UsdSkel_CacheImpl::ReadScope::FindOrCreateSkelDefinition(const UsdPrim &)
FindOrCreateSkelQuery
UsdSkelSkeletonQuery UsdSkel_CacheImpl::ReadScope::FindOrCreateSkelQuery(const UsdPrim &)
Populate
bool UsdSkel_CacheImpl::ReadScope::Populate(const UsdSkelRoot &)
[UsdSkelCache] Populate map from <%s>
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/cacheImpl.cpp
'root' is invalid.
[UsdSkelCache]  %sPruning traversal at <%s> (prim is not UsdGeomImageable)
[UsdSkelCache] %sAdded skinning query for prim <%s>
SkelAnimation
inbetweens:
:normalOffsets
ComputeSkelBindings
bool UsdSkelCache::ComputeSkelBindings(const UsdSkelRoot &, std::vector<UsdSkelBinding> *) const
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/cache.cpp
'skelRoot' is invalid.
'bindings' pointer is null.
[UsdSkelCache] Compute skel bindings for <%s>
[UsdSkelCache]  Pruning traversal at <%s> (prim is not UsdGeomImageable)
!skelStack.empty()
[UsdSkelCache]  Found skel binding at <%s> which targets skel <%s>.
[UsdSkelCache]  Found skinnable prim <%s>, bound to skel <%s>.
USDSKEL_CACHE
USDSKEL_BAKESKINNING
void VtArray<UsdSkelSkinningQuery>::push_back(const VtArray::ElementType &) [ELEM = UsdSkelSkinningQuery]
VtArray::value_type *VtArray<UsdSkelSkinningQuery>::_AllocateNew(size_t) [ELEM = UsdSkelSkinningQuery]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/bindingAPI.cpp
GetSkeleton
bool UsdSkelBindingAPI::GetSkeleton(UsdSkelSkeleton *) const
'skel' pointer is null.
%s -- target (<%s>) of relationship is not a Skeleton.
GetAnimationSource
bool UsdSkelBindingAPI::GetAnimationSource(UsdPrim *) const
'prim' pointer is null.
%s -- target (<%s>) of relationship is not a valid skel animation source.
_GetFirstTargetPrimForRel
UsdPrim (anonymous namespace)::_GetFirstTargetPrimForRel(const UsdRelationship &, const SdfPathVector &)
%s -- relationship has more than one target. Only the first will be used.
%s -- Invalid target <%s>.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/animQueryImpl.cpp
UsdSkel_SkelAnimationQueryImpl
UsdSkel_SkelAnimationQueryImpl::UsdSkel_SkelAnimationQueryImpl(const UsdSkelAnimation &)
anim
virtual bool UsdSkel_SkelAnimationQueryImpl::ComputeJointLocalTransformComponents(VtVec3fArray *, VtQuatfArray *, VtVec3hArray *, UsdTimeCode) const
virtual bool UsdSkel_SkelAnimationQueryImpl::ComputeBlendShapeWeights(VtFloatArray *, UsdTimeCode) const
_anim
PackedJointAnimation schema object is invalid.
bool UsdSkel_SkelAnimationQueryImpl::_ComputeJointLocalTransforms(VtArray<Matrix4> *, UsdTimeCode) const [Matrix4 = GfMatrix4d]
%s -- size of transform component arrays [%zu] != joint order size [%zu].
%s -- failed composing transforms from components.
bool UsdSkel_SkelAnimationQueryImpl::_ComputeJointLocalTransforms(VtArray<Matrix4> *, UsdTimeCode) const [Matrix4 = GfMatrix4f]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/animQuery.cpp
bool UsdSkelAnimQuery::ComputeJointLocalTransforms(VtArray<Matrix4> *, UsdTimeCode) const [Matrix4 = GfMatrix4d]
invalid anim query.
ComputeJointLocalTransformComponents
ComputeBlendShapeWeights
VtTokenArray UsdSkelAnimQuery::GetJointOrder() const
VtTokenArray UsdSkelAnimQuery::GetBlendShapeOrder() const
T *TfRefPtr<UsdSkel_AnimQueryImpl>::operator->() const [U = UsdSkel_AnimQueryImpl]
usdSkel
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/skeleton.cpp
_ComputeExtent
bool _ComputeExtent(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
skel
skelQuery
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/utils.cpp
'xforms' is null
UsdSkelMakeTransform
void UsdSkelMakeTransform(const GfVec3f &, const GfMatrix3f &, const GfVec3h &, Matrix4 *) [Matrix4 = GfMatrix4d]
'xform' is null
void UsdSkelMakeTransform(const GfVec3f &, const GfMatrix3f &, const GfVec3h &, Matrix4 *) [Matrix4 = GfMatrix4f]
'xforms' pointer is null.
UsdSkelComputeJointsExtent
bool UsdSkelComputeJointsExtent(TfSpan<const Matrix4>, GfRange3f *, float, const Matrix4 *) [Matrix4 = GfMatrix4d]
'extent' pointer is null.
UsdSkel_ConcatJointTransforms
bool (anonymous namespace)::UsdSkel_ConcatJointTransforms(const UsdSkelTopology &, TfSpan<const Matrix4>, TfSpan<Matrix4>, const Matrix4 *) [Matrix4 = GfMatrix4d]
Size of jointLocalXforms [%zu] != number of joints [%zu]
Size of xforms [%zu] != number of joints [%zu]
Joint %zu has itself as its parent.
Joint %zu has mis-ordered parent %d. Joints are expected to be ordered with parent joints always coming before children.
Size of translations [%zu] != size of xforms [%zu]
Size of rotations [%zu] != size of xforms [%zu]
Size of scales [%zu] != size of xforms [%zu]
UsdSkel_MakeTransforms
bool (anonymous namespace)::UsdSkel_MakeTransforms(TfSpan<const GfVec3f>, TfSpan<const GfQuatf>, TfSpan<const GfVec3h>, TfSpan<Matrix4>) [Matrix4 = GfMatrix4d]
bool (anonymous namespace)::UsdSkel_MakeTransforms(TfSpan<const GfVec3f>, TfSpan<const GfQuatf>, TfSpan<const GfVec3h>, TfSpan<Matrix4>) [Matrix4 = GfMatrix4f]
ComputeJointLocalTransforms
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/skeletonQuery.cpp
invalid skeleton query.
ComputeJointSkelTransforms
bool UsdSkelSkeletonQuery::ComputeJointSkelTransforms(VtArray<Matrix4> *, UsdTimeCode, bool) const [Matrix4 = GfMatrix4d]
const UsdSkelSkeleton &UsdSkelSkeletonQuery::GetSkeleton() const
GetJointOrder
VtTokenArray UsdSkelSkeletonQuery::GetJointOrder() const
T *TfRefPtr<UsdSkel_SkelDefinition>::operator->() const [U = UsdSkel_SkelDefinition]
_ComputeJointLocalTransforms
bool UsdSkelSkeletonQuery::_ComputeJointLocalTransforms(VtArray<Matrix4> *, UsdTimeCode, bool) const [Matrix4 = GfMatrix4d]
%s -- Failed computing local space transforms: the the animation source (<%s>) is sparse, but the 'restTransforms' of the Skeleton are either unset, or do not match the number of joints.
_ComputeJointSkelTransforms
bool UsdSkelSkeletonQuery::_ComputeJointSkelTransforms(VtArray<Matrix4> *, UsdTimeCode, bool) const [Matrix4 = GfMatrix4d]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/root.cpp
skelRoot
bool UsdSkel_SkelDefinition::_Init(const UsdSkelSkeleton &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdSkel/skelDefinition.cpp
%s -- invalid topology: %s
%s -- size of 'bindTransforms' attr [%zu] does not match the number of joints in the 'joints' attr [%zu].
%s -- size of 'restTransforms' attr [%zu] does not match the number of joints in the 'joints' attr [%zu].
GetJointLocalRestTransforms
bool UsdSkel_SkelDefinition::GetJointLocalRestTransforms(VtMatrix4dArray *)
_GetJointSkelRestTransforms
bool UsdSkel_SkelDefinition::_GetJointSkelRestTransforms(VtArray<Matrix4> *) [ComputeFlag = 4, Matrix4 = GfMatrix4d]
_ComputeJointSkelRestTransforms
bool UsdSkel_SkelDefinition::_ComputeJointSkelRestTransforms() [ComputeFlag = 4, Matrix4 = GfMatrix4d]
GetJointLocalRestTransforms(&jointLocalRestXforms)
success
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/js/json.cpp
JsParseString
JsValue JsParseString(const std::string &, JsParseError *)
JSON string is empty
handler.values.size() == 1
Unexpected value count: %zu
No error.
The document is empty.
The document root must not follow by other values.
Invalid value.
Missing a name for object member.
Missing a colon after a name of object member.
Missing a comma or '}' after an object member.
Missing a comma or ']' after an array element.
Incorrect hex digit after \u escape in string.
The surrogate pair in string is invalid.
Invalid escape character in string.
Missing a closing quotation mark in string.
Invalid encoding in string.
Number too big to be stored in double.
Miss fraction part in number.
Miss exponent in number.
Terminate parsing due to Handler error.
Unspecific syntax error.
Unknown error.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/js/value.cpp
GetJsObject
const JsObject &JsValue::GetJsObject() const
GetJsArray
const JsArray &JsValue::GetJsArray() const
const std::string &JsValue::GetString() const
GetBool
bool JsValue::GetBool() const
GetInt
int JsValue::GetInt() const
GetInt64
int64_t JsValue::GetInt64() const
GetUInt64
uint64_t JsValue::GetUInt64() const
GetReal
double JsValue::GetReal() const
Attempt to get %s from value holding %s
object
array
real
null
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/js/utils.cpp
JsFindValue
JsOptionalValue JsFindValue(const JsObject &, const std::string &, const JsOptionalValue &)
Key is empty
model
group
assembly
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/kind/registry.cpp
_Register
void KindRegistry::_Register(const TfToken &, const TfToken &)
Invalid kind: '%s'
Kind '%s' has already been registered
_RegisterDefaults
void KindRegistry::_RegisterDefaults()
Expected dict for kind '%s'
Expected string for baseKind
TfIterator<T, Reverse> &TfIterator<const std::vector<TfWeakPtr<PlugPlugin>>, false>::operator++() [T = const std::vector<TfWeakPtr<PlugPlugin>>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<TfWeakPtr<PlugPlugin>>, false>::operator*() [T = const std::vector<TfWeakPtr<PlugPlugin>>, Reverse = false]
Kinds
TfIterator<T, Reverse> &TfIterator<std::map<std::string, JsValue>, false>::operator++() [T = std::map<std::string, JsValue>, Reverse = false]
TfIterator::Iterator &TfIterator<std::map<std::string, JsValue>, false>::operator->() [T = std::map<std::string, JsValue>, Reverse = false]
Cycle detected:
inherits from:
is relocated from:
uses variant:
references:
gets payload from:
refers to:
CANNOT 
inherit from:
be relocated from:
use variant:
reference:
get payload from:
refer to:
which 
CANNOT 
which is private.
The property <%s> has inconsistent spec types.  The defining spec is @%s@<%s> and is %s spec.  The conflicting spec is @%s@<%s> and is %s spec.  The conflicting spec will be ignored.
The attribute <%s> has specs with inconsistent value types.  The defining spec is @%s@<%s> with value type '%s'.  The conflicting spec is @%s@<%s> with value type '%s'.  The conflicting spec will be ignored.
The attribute <%s> has specs with inconsistent variability.  The defining spec is @%s@<%s> with variability '%s'.  The conflicting spec is @%s@<%s> with variability '%s'.  The conflicting variability will be ignored.
Invalid %s path <%s> on prim %s -- must be an absolute prim path.
Could not open asset @%s@ for %s on prim %s%s%s.
Asset @%s@ was muted for %s on prim %s.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/errors.cpp
ToString
virtual std::string PcpErrorInvalidInstanceTargetPath::ToString() const
ownerSpecType == SdfSpecTypeAttribute || ownerSpecType == SdfSpecTypeRelationship
The %s <%s> from <%s> in layer @%s@ is authored in a class but refers to an instance of that class.  Ignoring.
virtual std::string PcpErrorInvalidExternalTargetPath::ToString() const
The %s <%s> from <%s> in layer @%s@ refers to a path outside the scope of the %s from <%s>.  Ignoring.
virtual std::string PcpErrorInvalidTargetPath::ToString() const
The %s <%s> from <%s> in layer @%s@ is invalid.  This may be because the path is the pre-relocated source path of a relocated prim.  Ignoring.
Invalid sublayer offset %s in sublayer @%s@ of layer @%s@. Using no offset instead.
Invalid reference offset %s at %s on asset path '%s'. Using no offset instead.
The following sublayers for layer @%s@ have the same owner '%s': %s
Could not load sublayer @%s@ of layer @%s@%s%s; skipping.
<NULL>
The layer @%s@ has an invalid opinion at the relocation source path <%s>, which will be ignored.
will be ignored because:
is private and overrides its opinions.
The layer at @%s@ has an illegal opinion about %s <%s> which is private across a reference, inherit, or variant.  Ignoring.
Sublayer hierarchy with root layer @%s@ has cycles. Detected when layer @%s@ was seen in the layer stack for the second time.
virtual std::string PcpErrorTargetPermissionDenied::ToString() const
The %s <%s> from <%s> in layer @%s@ targets an object that is private on the far side of a reference or inherit.  This %s will be ignored.
connection
Unresolved %s path <%s> on prim %s.
PcpErrorType_ArcCycle
PcpErrorType_ArcPermissionDenied
PcpErrorType_InconsistentPropertyType
PcpErrorType_InconsistentAttributeType
PcpErrorType_InconsistentAttributeVariability
PcpErrorType_InternalAssetPath
PcpErrorType_InvalidPrimPath
PcpErrorType_InvalidAssetPath
PcpErrorType_InvalidInstanceTargetPath
PcpErrorType_InvalidExternalTargetPath
PcpErrorType_InvalidTargetPath
PcpErrorType_InvalidReferenceOffset
PcpErrorType_InvalidSublayerOffset
PcpErrorType_InvalidSublayerOwnership
PcpErrorType_InvalidSublayerPath
PcpErrorType_InvalidVariantSelection
PcpErrorType_OpinionAtRelocationSource
PcpErrorType_PrimPermissionDenied
PcpErrorType_PropertyPermissionDenied
PcpErrorType_SublayerCycle
PcpErrorType_TargetPermissionDenied
PcpErrorType_UnresolvedPrimPath
TfIterator<T, Reverse> &TfIterator<const std::vector<TfWeakPtr<SdfLayer>>, false>::operator++() [T = const std::vector<TfWeakPtr<SdfLayer>>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<TfWeakPtr<SdfLayer>>, false>::operator*() [T = const std::vector<TfWeakPtr<SdfLayer>>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/layerStackRegistry.cpp
FindOrCreate
PcpLayerStackRefPtr Pcp_LayerStackRegistry::FindOrCreate(const PcpLayerStackIdentifier &, PcpErrorVector *)
Cannot build layer stack with null rootLayer
_Remove
void Pcp_LayerStackRegistry::_Remove(const PcpLayerStackIdentifier &, const PcpLayerStack *)
i != _data->identifierToLayerStack.end()
i->second.operator->() == layerStack
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/dependencies.cpp
Pcp_Dependencies::ConcurrentPopulationContext::ConcurrentPopulationContext(Pcp_Dependencies &)
!_deps._concurrentPopulationContext
Pcp_Dependencies::Add
Pcp_Dependencies: Adding deps for index <%s>:
 - Node %i (%s %s): <%s> %s
    None
Pcp_Dependencies: Removing deps for index <%s>
void Pcp_Dependencies::Remove(const PcpPrimIndex &, PcpLifeboat *)
i != deps.end()
      Removed last dep on site
      No subtree deps
    Removing empty parent entry <%s>
    Removed last dep on %s
!it->second.IsEmpty()
fieldIt != _possibleDynamicFileFormatArgumentFields.end()
Pcp_Dependencies::RemoveAll: Clearing all dependencies
SdfPathTable::_IterBoolPair SdfPathTable<std::vector<SdfPath>>::_InsertInTable(const SdfPathTable::value_type &) [MappedType = std::vector<SdfPath>]
void SdfPathTable<std::vector<SdfPath>>::_Grow() [MappedType = std::vector<SdfPath>]
TfIterator<T, Reverse> &TfIterator<std::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::vector<SdfPath>>, TfHash>, false>::operator++() [T = std::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::vector<SdfPath>>, TfHash>, Reverse = false]
TfIterator::Iterator &TfIterator<std::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::vector<SdfPath>>, TfHash>, false>::operator->() [T = std::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::vector<SdfPath>>, TfHash>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::vector<SdfPath>>, TfHash>, false>::operator++() [T = const std::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::vector<SdfPath>>, TfHash>, Reverse = false]
TfIterator::Iterator &TfIterator<const std::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::vector<SdfPath>>, TfHash>, false>::operator->() [T = const std::unordered_map<TfRefPtr<PcpLayerStack>, SdfPathTable<std::vector<SdfPath>>, TfHash>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/node.cpp
SetHasSpecs
void PcpNodeRef::SetHasSpecs(bool)
_nodeIdx < _graph->_nodeHasSpecs.size()
const SdfPath &PcpNodeRef::GetPath() const
_nodeIdx < _graph->_nodeSitePaths.size()
../ModelKit/extern/usd/pxr/usd/pcp/primIndex_Graph.h
_GetNode
const PcpPrimIndex_Graph::_Node &PcpPrimIndex_Graph::_GetNode(size_t) const
idx < _GetNumNodes()
TfIterator<T, Reverse> &TfIterator<std::pair<PcpPrimIterator, PcpPrimIterator>, true>::operator++() [T = std::pair<PcpPrimIterator, PcpPrimIterator>, Reverse = true]
root
purely-direct
partly-direct
ancestral
virtual
non-virtual
PcpDependencyTypeNone
non-dependency
PcpDependencyTypeRoot
root dependency
PcpDependencyTypePurelyDirect
purely-direct dependency
PcpDependencyTypePartlyDirect
partly-direct dependency
PcpDependencyTypeDirect
direct dependency
PcpDependencyTypeAncestral
ancestral dependency
PcpDependencyTypeVirtual
virtual dependency
PcpDependencyTypeNonVirtual
non-virtual dependency
PcpDependencyTypeAnyNonVirtual
any non-virtual dependency
PcpDependencyTypeAnyIncludingVirtual
any dependency
PCP_CULLING
Controls whether culling is enabled in Pcp caches.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/cache.cpp
FindSiteDependencies
PcpDependencyVector PcpCache::FindSiteDependencies(const PcpLayerStackPtr &, const SdfPath &, PcpDependencyFlags, bool, bool, bool) const
depMask must include at least one of {PcpDependencyTypeVirtual, PcpDependencyTypeNonVirtual}
depMask must include at least one of {PcpDependencyTypeRoot, PcpDependencyTypePurelyDirect, PcpDependencyTypePartlyDirect, PcpDependencyTypeAncestral}
depMask of PcpDependencyTypeRoot requires PcpDependencyTypeNonVirtual
PcpLayerStack does not belong to this PcpCache
PcpCache::FindSiteDependencies - recurseOnIndex
Apply
void PcpCache::Apply(const PcpCacheChanges &, PcpLifeboat *)
_ComputePrimIndexesInParallel
void PcpCache::_ComputePrimIndexesInParallel(const SdfPathVector &, PcpErrorVector *, PcpCache::_UntypedIndexingChildrenPredicate, PcpCache::_UntypedIndexingPayloadPredicate, const char *, const char *)
Computing prim indexes in parallel only supported for USD caches.
_ComputePrimIndexWithCompatibleInputs
const PcpPrimIndex &PcpCache::_ComputePrimIndexWithCompatibleInputs(const SdfPath &, const PcpPrimIndexInputs &, PcpErrorVector *)
ComputeIndex
void PcpCache::_ParallelIndexer::ComputeIndex(const PcpPrimIndex *, const SdfPath &)
parentIndex || path == SdfPath::AbsoluteRootPath()
_ComputeIndex
void PcpCache::_ParallelIndexer::_ComputeIndex(const PcpPrimIndex *, SdfPath, bool)
!index->IsValid()
PrimIndex for %s already exists in cache
TfIterator::Iterator &TfIterator<std::vector<std::pair<const PcpPrimIndex *, SdfPath>>, false>::operator->() [T = std::vector<std::pair<const PcpPrimIndex *, SdfPath>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<std::pair<const PcpPrimIndex *, SdfPath>>, false>::operator++() [T = std::vector<std::pair<const PcpPrimIndex *, SdfPath>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::set<SdfPath>, false>::operator++() [T = const std::set<SdfPath>, Reverse = false]
TfIterator::Reference TfIterator<const std::set<SdfPath>, false>::operator*() [T = const std::set<SdfPath>, Reverse = false]
../ModelKit/extern/usd/pxr/usd/pcp/dependencies.h
Pcp_ForEachDependentNode
void Pcp_ForEachDependentNode(const SdfPath &, const PcpLayerStackPtr &, const SdfPath &, const PcpCache &, const FN &) [FN = (lambda at /Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/cache.cpp:620:28)]
nodeUsingSite
Unable to find node that introduced dependency on site <%s>%s for prim <%s> in %s
auto PcpCache::FindSiteDependencies(const PcpLayerStackPtr &, const SdfPath &, PcpDependencyFlags, bool, bool, bool)::(anonymous class)::operator()(const SdfPath &, const SdfPath &)::(anonymous class)::operator()(const SdfPath &, const PcpNodeRef &) const
!depIndexPath.IsEmpty()
SdfPathTable::_IterBoolPair SdfPathTable<PcpPrimIndex>::_InsertInTable(const SdfPathTable::value_type &) [MappedType = PcpPrimIndex]
void SdfPathTable<PcpPrimIndex>::_Grow() [MappedType = PcpPrimIndex]
PcpMapFunction
Create
static PcpMapFunction PcpMapFunction::Create(const PcpMapFunction::PathMap &, const SdfLayerOffset &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/mapFunction.cpp
Cannot construct a PcpMapFunction with %zu entries; limit is %zu
The mapping of '%s' to '%s' is invalid.
Compose
PcpMapFunction PcpMapFunction::Compose(const PcpMapFunction &) const
%s -> %s
TfIterator<T, Reverse> &TfIterator<const std::map<SdfPath, SdfPath, SdfPath::FastLessThan>, false>::operator++() [T = const std::map<SdfPath, SdfPath, SdfPath::FastLessThan>, Reverse = false]
TfIterator::Iterator &TfIterator<const std::map<SdfPath, SdfPath, SdfPath::FastLessThan>, false>::operator->() [T = const std::map<SdfPath, SdfPath, SdfPath::FastLessThan>, Reverse = false]
_Canonicalize
bool _Canonicalize(PairIter &, PairIter &) [PairIter = std::pair<SdfPath, SdfPath> *]
PcpMapExpresion
PcpMapExpression::_Node::EvaluateAndCache - cache miss
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/mapExpression.cpp
_EvaluateUncached
PcpMapExpression::Value PcpMapExpression::_Node::_EvaluateUncached() const
unhandled case
SetValueForVariable
void PcpMapExpression::_Node::SetValueForVariable(PcpMapExpression::Value &&)
Cannot set value for non-variable
PCP_OVERRIDE_INSTANCEABLE
Overrides Pcp's default computation for whether a PrimIndex is instanceable:
 -1: (the default) computes instanceable only in USD mode
  0: NEVER computes instanceable (always returns false)
  1: always compute instanceable, whether in USD mode or not.
Pcp_PrimIndexIsInstanceable
bool Pcp_PrimIndexIsInstanceable(const PcpPrimIndex &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/strengthOrdering.cpp
PcpCompareSiblingNodeStrength
int PcpCompareSiblingNodeStrength(const PcpNodeRef &, const PcpNodeRef &)
Nodes are not siblings
a.GetParentNode() == a.GetRootNode() && b.GetParentNode() == b.GetRootNode()
Did not find copied specialize node.
aOriginRoot.second != bOriginRoot.second
Should not have sibling specializes nodes with same origin root and distance to origin root.
Did not find either origin
PcpCompareNodeStrength
int PcpCompareNodeStrength(const PcpNodeRef &, const PcpNodeRef &)
Nodes are not part of the same prim index
_CompareNodeStrength
int _CompareNodeStrength(const PcpNodeRef &, const PcpNodeRefVector &, const PcpNodeRef &, const PcpNodeRefVector &)
nodesUnderCommonParent.second != bNodes.rend()
nodesUnderCommonParent.first != aNodes.rend() && nodesUnderCommonParent.second != bNodes.rend()
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/dynamicFileFormatDependencyData.cpp
CanFieldChangeAffectFileFormatArguments
bool PcpDynamicFileFormatDependencyData::CanFieldChangeAffectFileFormatArguments(const TfToken &, const VtValue &, const VtValue &) const
contextData.first
PcpTranslatePathFromNodeToRoot
SdfPath PcpTranslatePathFromNodeToRoot(const PcpNodeRef &, const SdfPath &, bool *)
PcpTranslatePathFromRootToNode
SdfPath PcpTranslatePathFromRootToNode(const PcpNodeRef &, const SdfPath &, bool *)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/pathTranslation.cpp
Pcp_TranslatePath
SdfPath Pcp_TranslatePath(const Mapping &, const SdfPath &, bool *) [NodeToRoot = true, Mapping = PcpMapExpression]
Null map function
Path to translate <%s> is not absolute.
Path to translate <%s> must not contain a variant selection.
SdfPath Pcp_TranslatePath(const Mapping &, const SdfPath &, bool *) [NodeToRoot = false, Mapping = PcpMapExpression]
PcpInstanceKey
PcpInstanceKey::PcpInstanceKey(const PcpPrimIndex &)
Arcs:
  (none)
  %s%s : %s
 (offset: %f scale: %f)
Variant selections:
  (none)
  %s = %s
TfIterator::Reference TfIterator<SdfListProxy<SdfSubLayerTypePolicy>, false>::operator*() [T = SdfListProxy<SdfSubLayerTypePolicy>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<SdfListProxy<SdfSubLayerTypePolicy>, false>::operator++() [T = SdfListProxy<SdfSubLayerTypePolicy>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::set<std::pair<TfRefPtr<SdfLayer>, std::map<std::string, std::string>>>, false>::operator++() [T = std::set<std::pair<TfRefPtr<SdfLayer>, std::map<std::string, std::string>>>, Reverse = false]
TfIterator::Iterator &TfIterator<std::set<std::pair<TfRefPtr<SdfLayer>, std::map<std::string, std::string>>>, false>::operator->() [T = std::set<std::pair<TfRefPtr<SdfLayer>, std::map<std::string, std::string>>>, Reverse = false]
MENV30_ENABLE_NEW_DEFAULT_STANDIN_BEHAVIOR
If enabled then standin preference is weakest opinion.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/primIndex.cpp
Append
PcpNodeRef PcpPrimIndexOutputs::Append(PcpPrimIndexOutputs &&, const PcpArc &)
Inconsistent payload states for primIndex <%s> -- parent=%d vs child=%d; taking parent=%d
Pcp_RescanForSpecs
Pcp_NeedToRecomputeDueToAssetPathChange
bool Pcp_NeedToRecomputeDueToAssetPathChange(const PcpPrimIndex &)
refs.size() == sourceInfo.size()
PcpComputePrimIndex
void PcpComputePrimIndex(const SdfPath &, const PcpLayerStackPtr &, const PcpPrimIndexInputs &, PcpPrimIndexOutputs *, ArResolver *)
Path <%s> must be an absolute path to a prim, a prim variant-selection, or the pseudo-root.
ComputePrimChildNames
void PcpPrimIndex::ComputePrimChildNames(TfTokenVector *, PcpTokenSet *) const
Task::EvalNodeRelocations
Task::EvalImpliedRelocations
Task::EvalNodeReferences
Task::EvalNodePayload
Task::EvalNodeInherits
Task::EvalImpliedClasses
Task::EvalNodeSpecializes
Task::EvalImpliedSpecializes
Task::EvalNodeVariantSets
Task::EvalNodeVariantAuthored
Task::EvalNodeVariantFallback
Task::EvalNodeVariantNoneFound
Task::None
../ModelKit/extern/usd/pxr/usd/pcp/types.h
Pcp_CompressedSdSite
Pcp_CompressedSdSite::Pcp_CompressedSdSite(size_t, size_t)
nodeIndex_ < (size_t(1) << 16)
layerIndex_ < (size_t(1) << 16)
_ComputedAssetPathWouldCreateDifferentNode
bool _ComputedAssetPathWouldCreateDifferentNode(const PcpNodeRef &, const std::string &)
SdfLayer::SplitIdentifier( nodeRootLayer->GetIdentifier(), &oldAssetPath, &oldArgs)
Pcp_BuildPrimIndex
void Pcp_BuildPrimIndex(const PcpLayerStackSite &, const PcpLayerStackSite &, int, bool, bool, bool, PcpPrimIndex_StackFrame *, const PcpPrimIndexInputs &, PcpPrimIndexOutputs *)
site.path.IsAbsolutePath() && (site.path.IsAbsoluteRootOrPrimPath() || site.path.IsPrimVariantSelectionPath())
PCP_CHANGES
PCP_DEPENDENCIES
PCP_PRIM_INDEX
PCP_PRIM_INDEX_GRAPHS
PCP_NAMESPACE_EDIT
Retrieved index for <%s> from cache
Adjusted ancestral index for %s
TfIterator::Iterator &TfIterator<PcpNodeRef_PrivateChildrenConstRange, false>::operator->() [T = PcpNodeRef_PrivateChildrenConstRange, Reverse = false]
_FindStartingNodeForImpliedClasses
PcpNodeRef _FindStartingNodeForImpliedClasses(const PcpNodeRef &)
PcpIsClassBasedArc(n.GetArcType())
_FindStartingNodeOfClassHierarchy
std::pair<PcpNodeRef, PcpNodeRef> _FindStartingNodeOfClassHierarchy(const PcpNodeRef &)
instanceNode.GetParentNode()
Evaluating relocations under %s
<%s> was relocated from source <%s>
_EvalNodeRelocations
void _EvalNodeRelocations(PcpPrimIndex *, const PcpNodeRef &, Pcp_PrimIndexer *)
Unexpected child node encountered
Elided subtree that will be superceded by relocation source <%s>
Adding new %s arc to %s to %s
origin: %s
arcSiblingNum: %d
namespaceDepth: %d
directNodeShouldContributeSpecs: %s
includeAncestralOpinions: %s
requirePrimAtTarget: %s
skipDuplicateNodes: %s
skipImpliedSpecializesCompletedNodes: %s
<None>
_AddArc
PcpNodeRef _AddArc(const PcpArcType, PcpNodeRef, PcpNodeRef, const PcpLayerStackSite &, PcpMapExpression, int, int, bool, bool, bool, bool, bool, Pcp_PrimIndexer *)
!mapExpr.IsNull()
Added new node for site %s to graph
Need to build index for %s source at %s to pick up ancestral opinions
Added subtree for site %s to graph
TfIterator::Iterator &TfIterator<std::vector<SdfSite>, false>::operator->() [T = std::vector<SdfSite>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<SdfSite>, false>::operator++() [T = std::vector<SdfSite>, Reverse = false]
Evaluating relocations implied by %s
_EvalImpliedRelocations
void _EvalImpliedRelocations(PcpPrimIndex *, const PcpNodeRef &, Pcp_PrimIndexer *)
!gpRelocSource.IsEmpty()
Propagating relocate from %s to %s
Relocate already exists -- skipping
Evaluating references at %s
Found %s to @%s@<%s>
reference
Evaluating payload for %s
Found payload for node %s
Payload was not included, skipping
Payload <%s> was not included, skipping
Evaluating inherits at %s
Found %s to <%s>
Preparing to add %s arc to %s
origin: %s
inheritArcNum: %d
ignoreIfSameAsSite: %s
<none>
Inheriting from path <%s>
No appropriate site for inheriting opinions
A %s arc to <%s> already exists. Skipping.
_DetermineInheritPath
SdfPath _DetermineInheritPath(const SdfPath &, const PcpMapExpression &)
!varPath.IsEmpty()
Evaluating implied classes at %s
Attempting to propagate %s of %s to %s.
Skipping ancestral class
Transfer function:
Implied class:
Found previously added implied inherit node
Evaluating specializes at %s
Evaluating implied specializes at %s
_FindArcsToPropagateToOrigin
void _FindArcsToPropagateToOrigin(PcpPrimIndex *, const PcpNodeRef &, Pcp_PrimIndexer *)
PcpIsSpecializeArc(node.GetArcType())
Propagating arcs under %s to specializes origin %s
Propagating specializes arc %s to root
Evaluating variant sets at %s
Evaluating authored selections for variant set %s at %s
Found fallback {%s=%s}
Found variant selection {%s=%s} at %s
Deferring to variant fallback
No variant selection found for set '%s'
_ComposeVariantSelection
void _ComposeVariantSelection(int, PcpPrimIndex_StackFrame *, PcpNodeRef, const SdfPath &, const std::string &, std::string *, PcpNodeRef *, PcpPrimIndexOutputs *)
!pathInNode.IsEmpty()
!pathInNode.ContainsPrimVariantSelection()
_ComposeVariantSelectionForNode
bool _ComposeVariantSelectionForNode(const PcpNodeRef &, const SdfPath &, const std::string &, std::string *, PcpNodeRef *, PcpPrimIndexOutputs *)
Unexpected variant selection in namespace path <%s>
standin
Evaluating fallback selections for variant set %s s at %s
No variant fallback found for set '%s'
_EnforcePermissions
void _EnforcePermissions(PcpPrimIndex *, PcpErrorVector *)
rootNode
TfIterator::Reference TfIterator<std::vector<PcpNodeRef>, true>::operator*() [T = std::vector<PcpNodeRef>, Reverse = true]
TfIterator<T, Reverse> &TfIterator<std::vector<PcpNodeRef>, true>::operator++() [T = std::vector<PcpNodeRef>, Reverse = true]
TfIterator::Reference TfIterator<PcpNodeRef_PrivateChildrenConstRange, true>::operator*() [T = PcpNodeRef_PrivateChildrenConstRange, Reverse = true]
TfIterator<T, Reverse> &TfIterator<PcpNodeRef_PrivateChildrenConstRange, true>::operator++() [T = PcpNodeRef_PrivateChildrenConstRange, Reverse = true]
TfIterator::Reference TfIterator<std::vector<TfToken>, false>::operator*() [T = std::vector<TfToken>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<TfToken>, false>::operator++() [T = std::vector<TfToken>, Reverse = false]
T *TfRefPtr<PcpPrimIndex_Graph>::operator->() const [U = PcpPrimIndex_Graph]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, PcpPrimIndex_Graph>::operator->() const [PtrTemplate = TfWeakPtr, Type = PcpPrimIndex_Graph]
TfIterator<T, Reverse> &TfIterator<std::pair<PcpNodeIterator, PcpNodeIterator>, false>::operator++() [T = std::pair<PcpNodeIterator, PcpNodeIterator>, Reverse = false]
TfIterator::Iterator &TfIterator<std::pair<PcpNodeIterator, PcpNodeIterator>, false>::operator->() [T = std::pair<PcpNodeIterator, PcpNodeIterator>, Reverse = false]
TfIterator::Reference TfIterator<std::pair<PcpNodeIterator, PcpNodeIterator>, false>::operator*() [T = std::pair<PcpNodeIterator, PcpNodeIterator>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/iterator.cpp
decrement
void PcpPrimIterator::decrement()
Cannot decrement invalid iterator
void PcpPropertyIterator::decrement()
GetNode
PcpNodeRef PcpPrimIndex_Graph::GetNode(const Pcp_CompressedSdSite &)
site.nodeIndex < _GetNumNodes()
DidChange
void PcpChanges::DidChange(const TfSpan<const PcpCache *> &, const SdfLayerChangeListVec &)
  Caches:
    %s
  Layer @%s@ changed:  skipping non-prim changes
  Layer @%s@ changed:  unused
  Changes to layer %s:
  Layer @%s@ changed sublayers
  Layer @%s@ changed:  significant
  Layer @%s@ changed:  layer offsets (significant)
  Renamed @%s@<%s> to <%s>
  Info change on @%s@<%s> may affect file format arguments in cache '%s'
PcpChanges::DidChange -- Checking layer stack relocations against significant prim resyncs
  renameChanges <%s> to <%s>
PcpChanges::DidChange
insignificant
significant
    <%s>
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/changes.cpp
DidChangeSpecs
void PcpChanges::DidChangeSpecs(const PcpCache *, const SdfPath &, const SdfLayerHandle &, const SdfPath &)
changedPath.IsPrimOrPrimVariantSelectionPath()
  Sd only path change @%s@<%s> to <%s>
PcpChanges::_Optimize:
  %s sublayer @%s@ %s
added
removed
  %s following in @%s@ due to %s reload in sublayer @%s@:
Resync
Spec changes
  Relocation change in %s affects:
  and dependent paths in %s
      <%s>
   Resync following in @%s@ significant due to layer resolved path change:
TfIterator::Iterator &TfIterator<const std::vector<std::pair<std::string, SdfChangeList::SubLayerChangeType>>, false>::operator->() [T = const std::vector<std::pair<std::string, SdfChangeList::SubLayerChangeType>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::vector<std::pair<std::string, SdfChangeList::SubLayerChangeType>>, false>::operator++() [T = const std::vector<std::pair<std::string, SdfChangeList::SubLayerChangeType>>, Reverse = false]
  Info change for field '%s' may affect dynamic file format arguments
Pcp_PrimSpecOrDescendantHasRelocates
bool Pcp_PrimSpecOrDescendantHasRelocates(const SdfLayerHandle &, const SdfPath &)
   Resync following in @%s@ %s due to Sdf site @%s@<%s>%s:
recurse on prim descendants
do not recurse on prim descendants
 (restricted to existing caches)
 (not restricted to existing caches)
    <%s> depends on <%s>
   Resync end
Pcp_DoesInfoChangeAffectFileFormatArguments %s:%s?
  Prim index has no dynamic file format dependencies
  Field '%s' change: %s -> %s %s relevant for prim index path '%s'
is NOT
T *TfRefPtr<Pcp_LayerStackRegistry>::operator->() const [U = Pcp_LayerStackRegistry]
TfIterator<T, Reverse> &TfIterator<const std::vector<TfWeakPtr<PcpLayerStack>>, false>::operator++() [T = const std::vector<TfWeakPtr<PcpLayerStack>>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<TfWeakPtr<PcpLayerStack>>, false>::operator*() [T = const std::vector<TfWeakPtr<PcpLayerStack>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::map<TfWeakPtr<PcpLayerStack>, PcpLayerStackChanges>, false>::operator++() [T = const std::map<TfWeakPtr<PcpLayerStack>, PcpLayerStackChanges>, Reverse = false]
TfIterator::Iterator &TfIterator<const std::map<TfWeakPtr<PcpLayerStack>, PcpLayerStackChanges>, false>::operator->() [T = const std::map<TfWeakPtr<PcpLayerStack>, PcpLayerStackChanges>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::map<PcpCache *, PcpCacheChanges>, false>::operator++() [T = const std::map<PcpCache *, PcpCacheChanges>, Reverse = false]
TfIterator::Iterator &TfIterator<const std::map<PcpCache *, PcpCacheChanges>, false>::operator->() [T = const std::map<PcpCache *, PcpCacheChanges>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::map<PcpCache *, std::map<SdfPath, SdfPath>>, false>::operator++() [T = std::map<PcpCache *, std::map<SdfPath, SdfPath>>, Reverse = false]
TfIterator::Iterator &TfIterator<std::map<PcpCache *, std::map<SdfPath, SdfPath>>, false>::operator->() [T = std::map<PcpCache *, std::map<SdfPath, SdfPath>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::map<PcpCache *, PcpCacheChanges>, false>::operator++() [T = std::map<PcpCache *, PcpCacheChanges>, Reverse = false]
TfIterator::Iterator &TfIterator<std::map<PcpCache *, PcpCacheChanges>, false>::operator->() [T = std::map<PcpCache *, PcpCacheChanges>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::set<SdfPath>, false>::operator++() [T = std::set<SdfPath>, Reverse = false]
TfIterator::Reference TfIterator<std::set<SdfPath>, false>::operator*() [T = std::set<SdfPath>, Reverse = false]
auto PcpChanges::_DidChangeLayerStackResolvedPath(const TfSpan<const PcpCache *> &, const PcpLayerStackPtr &, std::string *)::(anonymous class)::operator()(const PcpDependency &) const
primIndex
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/diagnostic.cpp
Computing prim index for %s
PopIndex
void Pcp_IndexingOutputManager::PopIndex(const PcpPrimIndex *)
!info->indexStack.empty()
!info->indexStack.back().phases.empty()
DONE - 
digraph PcpPrimIndex {
0 [label="...",shape=box,style=dotted];
permission denied
inert
culled
\nCANNOT contribute specs
\ndepth: %i
dotted
, filled
%zu [label="%s (%i)\n%s", shape="box", style="%s"];
-- mapToParent:
-- mapToRoot:
color=green, label="inherit%s"
color=red, label="reference%s"
color=purple, label="relocate%s"
color=orange, label="variant"
color=indigo, label="payload%s"
color=sienna, label="specialize%s"
_WriteGraph
int _WriteGraph(std::ostream &, const PcpNodeRef &, bool, bool, const Pcp_NodeSet &, int)
Invalid arc type
style=dashed
%zu -> %zu [%s];
%zu -> %zu [style=dotted label="origin" constraint="false"];
OutputGraph
void Pcp_IndexingOutputManager::_DebugInfo::OutputGraph() const
!indexStack.empty()
pcp.%s.%06d.dot
Unable to open %s to write graph
label = <
labelloc = b
BeginPhase
void Pcp_IndexingOutputManager::_DebugInfo::BeginPhase(std::string &&, const PcpNodeRef &)
UpdateCurrentDotGraph
void Pcp_IndexingOutputManager::_DebugInfo::UpdateCurrentDotGraph()
!indexStack.back().phases.empty()
UpdateCurrentDotGraphLabel
void Pcp_IndexingOutputManager::_DebugInfo::UpdateCurrentDotGraphLabel()
<table cellborder="0" border="0">
<tr><td balign="left" align="left">
</td></tr>
<tr><td bgcolor="black" height="1" cellpadding="0">
</td></tr>
<tr><td balign="left" align="left">
Tasks:<br/>
</td></tr>
</table>
%d. %s
<br/>
TfIterator::Iterator &TfIterator<std::vector<Pcp_IndexingOutputManager::_IndexInfo>, true>::operator->() [T = std::vector<Pcp_IndexingOutputManager::_IndexInfo>, Reverse = true]
TfIterator::Reference TfIterator<std::vector<Pcp_IndexingOutputManager::_Phase>, true>::operator*() [T = std::vector<Pcp_IndexingOutputManager::_Phase>, Reverse = true]
TfIterator::Iterator &TfIterator<std::vector<Pcp_IndexingOutputManager::_Phase>, true>::operator->() [T = std::vector<Pcp_IndexingOutputManager::_Phase>, Reverse = true]
TfIterator<T, Reverse> &TfIterator<std::vector<Pcp_IndexingOutputManager::_Phase>, true>::operator++() [T = std::vector<Pcp_IndexingOutputManager::_Phase>, Reverse = true]
TfIterator<T, Reverse> &TfIterator<std::vector<Pcp_IndexingOutputManager::_IndexInfo>, true>::operator++() [T = std::vector<Pcp_IndexingOutputManager::_IndexInfo>, Reverse = true]
EndPhase
void Pcp_IndexingOutputManager::_DebugInfo::EndPhase()
void Pcp_IndexingOutputManager::_DebugInfo::Update(const PcpNodeRef &, std::string &&)
void Pcp_IndexingOutputManager::_DebugInfo::Msg(std::string &&, const Pcp_NodeSet &)
PCP_ENABLE_PARALLEL_LAYER_PREFETCH
Enables parallel, threaded pre-fetch of sublayers.
Pcp_ComputeRelocationsForLayerStack
void Pcp_ComputeRelocationsForLayerStack(const SdfLayerRefPtrVector &, SdfRelocatesMap *, SdfRelocatesMap *, SdfRelocatesMap *, SdfRelocatesMap *, SdfPathVector *)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/layerStack.cpp
Field '%s' in <%s> in layer @%s@does not contain an SdfRelocatesMap
PcpLayerStack::PcpLayerStack
PcpLayerStack
PcpLayerStack::PcpLayerStack(const PcpLayerStackIdentifier &, const std::string &, const Pcp_MutedLayers &, bool)
_identifier
GetLayerOffsetForLayer
const SdfLayerOffset *PcpLayerStack::GetLayerOffsetForLayer(size_t) const
layerIdx < _mapFunctions.size()
_Compute
void PcpLayerStack::_Compute(const std::string &, const Pcp_MutedLayers &)
_BuildLayerStack
SdfLayerTreeHandle PcpLayerStack::_BuildLayerStack(const SdfLayerHandle &, const SdfLayerOffset &, const ArResolverContext &, const SdfLayer::FileFormatArguments &, const std::string &, const Pcp_MutedLayers &, SdfLayerHandleSet *, PcpErrorVector *)
@<expired>@
@NULL@
T *TfRefPtr<SdfLayerTree>::operator->() const [T = SdfLayerTree]
TfIterator::Reference TfIterator<const std::vector<TfRefPtr<SdfLayerTree>>, false>::operator*() [T = const std::vector<TfRefPtr<SdfLayerTree>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::vector<TfRefPtr<SdfLayerTree>>, false>::operator++() [T = const std::vector<TfRefPtr<SdfLayerTree>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::map<SdfPath, std::map<SdfPath, SdfPath>>, false>::operator++() [T = std::map<SdfPath, std::map<SdfPath, SdfPath>>, Reverse = false]
TfIterator::Iterator &TfIterator<std::map<SdfPath, std::map<SdfPath, SdfPath>>, false>::operator->() [T = std::map<SdfPath, std::map<SdfPath, SdfPath>>, Reverse = false]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, Pcp_LayerStackRegistry>::operator->() const [PtrTemplate = TfWeakPtr, Type = Pcp_LayerStackRegistry]
TfIterator<T, Reverse> &TfIterator<std::vector<TfRefPtr<SdfLayer>>, false>::operator++() [T = std::vector<TfRefPtr<SdfLayer>>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<TfRefPtr<SdfLayer>>, false>::operator*() [T = std::vector<TfRefPtr<SdfLayer>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::map<SdfPath, std::unique_ptr<PcpMapExpression::Variable>, SdfPath::FastLessThan>, false>::operator++() [T = std::map<SdfPath, std::unique_ptr<PcpMapExpression::Variable>, SdfPath::FastLessThan>, Reverse = false]
TfIterator::Iterator &TfIterator<std::map<SdfPath, std::unique_ptr<PcpMapExpression::Variable>, SdfPath::FastLessThan>, false>::operator->() [T = std::map<SdfPath, std::unique_ptr<PcpMapExpression::Variable>, SdfPath::FastLessThan>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<Pcp_SublayerInfo>, false>::operator++() [T = std::vector<Pcp_SublayerInfo>, Reverse = false]
TfIterator::Iterator &TfIterator<std::vector<Pcp_SublayerInfo>, false>::operator->() [T = std::vector<Pcp_SublayerInfo>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/primIndex_Graph.cpp
SetArc
void PcpPrimIndex_Graph::_Node::SetArc(const PcpArc &)
static_cast<size_t>(arc.siblingNumAtOrigin) <= ((1lu << _childrenSize) - 1)
static_cast<size_t>(arc.namespaceDepth) <= ((1lu << _depthSize) - 1)
arc.parent._GetNodeIndex() + 1 <= _invalidNodeIndex
arc.origin._GetNodeIndex() + 1 <= _invalidNodeIndex
PcpPrimIndex_Graph
static PcpPrimIndex_GraphRefPtr PcpPrimIndex_Graph::New(const PcpPrimIndex_GraphPtr &)
GetNodeUsingSite
PcpNodeRef PcpPrimIndex_Graph::GetNodeUsingSite(const PcpLayerStackSite &) const
GetNodeIndexesForRange
std::pair<size_t, size_t> PcpPrimIndex_Graph::GetNodeIndexesForRange(PcpRangeType) const
_data->finalized
Invalid range type specified
Finalize
void PcpPrimIndex_Graph::Finalize()
_data.unique()
_ApplyNodeIndexMapping
void PcpPrimIndex_Graph::_ApplyNodeIndexMapping(const std::vector<size_t> &)
oldNodes.size() == oldSitePaths.size() && oldNodes.size() == oldHasSpecs.size()
nodeIndexMap.size() == oldNodes.size()
newNumNodes <= oldNumNodes
!parentWillBeErased
InsertChildNode
PcpNodeRef PcpPrimIndex_Graph::InsertChildNode(const PcpNodeRef &, const PcpLayerStackSite &, const PcpArc &)
arc.type != PcpArcTypeRoot
arc.parent == parent
InsertChildSubgraph
PcpNodeRef PcpPrimIndex_Graph::InsertChildSubgraph(const PcpNodeRef &, const PcpPrimIndex_GraphPtr &, const PcpArc &)
_InsertChildInStrengthOrder
PcpNodeRef PcpPrimIndex_Graph::_InsertChildInStrengthOrder(size_t, size_t)
parentNodeIdx < _GetNumNodes()
childNodeIdx < _GetNumNodes()
LAST_CHILD(parentNode) == _Node::_invalidNodeIndex
LAST_CHILD(parentNode) != _Node::_invalidNodeIndex
PREV_SIBLING(nextNode) != _Node::_invalidNodeIndex
_DetachSharedNodePool
void PcpPrimIndex_Graph::_DetachSharedNodePool()
_CreateNodesForSubgraph
size_t PcpPrimIndex_Graph::_CreateNodesForSubgraph(const PcpPrimIndex_Graph &, const PcpArc &)
!subgraph.GetRootNode().GetParentNode() && !subgraph.GetRootNode().GetOriginNode()
_GetWriteableNode
PcpPrimIndex_Graph::_Node &PcpPrimIndex_Graph::_GetWriteableNode(size_t)
_ComputeStrengthOrderIndexMapping
bool PcpPrimIndex_Graph::_ComputeStrengthOrderIndexMapping(std::vector<size_t> *) const
_ComputeEraseCulledNodeIndexMapping
bool PcpPrimIndex_Graph::_ComputeEraseCulledNodeIndexMapping(std::vector<size_t> *) const
_ConvertOldToNewIndex
PcpPrimIndex_Graph::_ApplyNodeIndexMapping(const std::vector<size_t> &)::_ConvertOldToNewIndex::_ConvertOldToNewIndex(const std::vector<size_t> &, size_t)
_table[i] < numNewNodes || _table[i] == _Node::_invalidNodeIndex
bool PcpPrimIndex_Graph::_ArcStrengthOrder::operator()(size_t, size_t) const
result != 0
Redundant nodes in prim index for <%s>
size_t PcpPrimIndex_Graph::_CreateNodesForSubgraph(const PcpPrimIndex_Graph &, const PcpArc &)::_ConvertOldToNewIndex::operator()(size_t) const
oldIndex + _base < _numNewNodes
_GetArcTypeForRangeType
PcpArcType _GetArcTypeForRangeType(const PcpRangeType)
Unhandled range type
TfIterator::Iterator &TfIterator<std::vector<SdfPath>, false>::operator->() [T = std::vector<SdfPath>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::map<SdfPath, SdfPath>, false>::operator++() [T = std::map<SdfPath, SdfPath>, Reverse = false]
TfIterator::Iterator &TfIterator<std::map<SdfPath, SdfPath>, false>::operator->() [T = std::map<SdfPath, SdfPath>, Reverse = false]
<expired>
PcpBuildFilteredTargetIndex
void PcpBuildFilteredTargetIndex(const PcpSite &, const PcpPropertyIndex &, const SdfSpecType, const bool, const SdfSpecHandle &, const bool, PcpCache *, PcpTargetIndex *, PcpErrorVector *)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/pcp/targetIndex.cpp
relOrAttrType msut be either SdfSpecTypeRelationship or SdfSpecTypeAttribute
(*propertyRange.first)->GetSpecType() == relOrAttrType
<%s> is not %s
an attribute
a relationship
pathValue.IsHolding<SdfPathListOp>()
_TargetInClassAndTargetsInstance
bool _TargetInClassAndTargetsInstance(const SdfPath &, const PcpNodeRef &, Pcp_TargetIndexContext &)
_TargetIsPermitted
(anonymous namespace)::Pcp_PathTranslationError _TargetIsPermitted(const SdfPath &, const SdfPath &, const PcpNodeRef &, Pcp_TargetIndexContext &)
context.GetCache()->GetPrimIndexInputs().cull
Could not find expected node for site %s in prim index for <%s>
TfIterator::Reference TfIterator<PcpNodeRef_PrivateChildrenConstRange, false>::operator*() [T = PcpNodeRef_PrivateChildrenConstRange, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<TfRefPtr<SdfLayer>>, false>::operator*() [T = const std::vector<TfRefPtr<SdfLayer>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::vector<TfRefPtr<SdfLayer>>, false>::operator++() [T = const std::vector<TfRefPtr<SdfLayer>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<PcpNodeRef_PrivateChildrenConstRange, false>::operator++() [T = PcpNodeRef_PrivateChildrenConstRange, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::pair<PcpPropertyIterator, PcpPropertyIterator>, true>::operator++() [T = const std::pair<PcpPropertyIterator, PcpPropertyIterator>, Reverse = true]
TfIterator::Reference TfIterator<const std::pair<PcpPropertyIterator, PcpPropertyIterator>, true>::operator*() [T = const std::pair<PcpPropertyIterator, PcpPropertyIterator>, Reverse = true]
variantSet 
 = {
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/fileIO.cpp
Sdf_WriteToStream
bool Sdf_WriteToStream(const SdfSpec &, std::ostream &, size_t)
Cannot write spec of type %s to stream
permission = %s
permission = %s
symmetryFunction = %s%s
../ModelKit/extern/usd/pxr/usd/sdf/fileIO_Common.h
Sdf_WritePrimMetadata
bool Sdf_WritePrimMetadata(const SdfPrimSpec &, std::ostream &, size_t)
'%s' field holding unexpected type '%s'
variantSets = 
delete variantSets = 
add variantSets = 
prepend variantSets = 
append variantSets = 
reorder variantSets = 
inherits
prefixSubstitutions = 
suffixSubstitutions = 
variants = 
bool SdfMapEditProxy<std::map<SdfPath, SdfPath>, SdfRelocatesMapProxyValuePolicy>::_Validate() const [T = std::map<SdfPath, SdfPath>, _ValuePolicy = SdfRelocatesMapProxyValuePolicy]
TfIterator::Iterator &TfIterator<const SdfMapEditProxy<std::map<SdfPath, SdfPath>, SdfRelocatesMapProxyValuePolicy>, false>::operator->() [T = const SdfMapEditProxy<std::map<SdfPath, SdfPath>, SdfRelocatesMapProxyValuePolicy>, Reverse = false]
Dereference
static const SdfMapEditProxy::value_type &SdfMapEditProxy<std::map<SdfPath, SdfPath>, SdfRelocatesMapProxyValuePolicy>::Traits::Dereference(const SdfMapEditProxy::This *, const SdfMapEditProxy::Type *, SdfMapEditProxy::const_inner_iterator) [T = std::map<SdfPath, SdfPath>, _ValuePolicy = SdfRelocatesMapProxyValuePolicy]
Dereferenced an invalid map proxy iterator
TfIterator<T, Reverse> &TfIterator<const SdfMapEditProxy<std::map<SdfPath, SdfPath>, SdfRelocatesMapProxyValuePolicy>, false>::operator++() [T = const SdfMapEditProxy<std::map<SdfPath, SdfPath>, SdfRelocatesMapProxyValuePolicy>, Reverse = false]
bool SdfMapEditProxy<std::map<std::string, std::string>>::_Validate() const [T = std::map<std::string, std::string>, _ValuePolicy = SdfIdentityMapEditProxyValuePolicy<std::map<std::string, std::string>>]
TfIterator::Iterator &TfIterator<std::map<std::string, std::string>, false>::operator->() [T = std::map<std::string, std::string>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::map<std::string, std::string>, false>::operator++() [T = std::map<std::string, std::string>, Reverse = false]
reorder properties = 
reorder nameChildren = 
TfIterator::Reference TfIterator<std::vector<SdfHandle<SdfPropertySpec>>, false>::operator*() [T = std::vector<SdfHandle<SdfPropertySpec>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<SdfHandle<SdfPropertySpec>>, false>::operator++() [T = std::vector<SdfHandle<SdfPropertySpec>>, Reverse = false]
%s%s%s 
%s%s%s %s
permission = %s%s
displayUnit = %s%s
%s%s %s.timeSamples = {
delete 
add 
prepend 
append 
reorder 
%s%s%s %s.connect = 
None
bool SdfListProxy<SdfPathKeyPolicy>::_Iterator<const SdfListProxy<SdfPathKeyPolicy> *, SdfListProxy<SdfPathKeyPolicy>::_ConstGetHelper>::equal(const SdfListProxy::_Iterator::This &) const [_TypePolicy = SdfPathKeyPolicy, Owner = const SdfListProxy<SdfPathKeyPolicy> *, GetItem = SdfListProxy<SdfPathKeyPolicy>::_ConstGetHelper]
TfIterator::Reference TfIterator<const SdfListProxy<SdfPathKeyPolicy>, false>::operator*() [T = const SdfListProxy<SdfPathKeyPolicy>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const SdfListProxy<SdfPathKeyPolicy>, false>::operator++() [T = const SdfListProxy<SdfPathKeyPolicy>, Reverse = false]
varying 
custom %srel %s
%srel %s
 = None
custom %srel %s
delete %srel %s
add %srel %s
prepend %srel %s
append %srel %s
reorder %srel %s
%srel %s.timeSamples = {
%srel %s.default = 
 = [
TfIterator<T, Reverse> &TfIterator<std::vector<SdfHandle<SdfVariantSpec>>, false>::operator++() [T = std::vector<SdfHandle<SdfVariantSpec>>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<SdfHandle<SdfVariantSpec>>, false>::operator*() [T = std::vector<SdfHandle<SdfVariantSpec>>, Reverse = false]
static SdfVariantSpecHandle SdfVariantSpec::New(const SdfVariantSetSpecHandle &, const std::string &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/variantSpec.cpp
NULL owner variant set
Invalid variant name: %s
 = %s
<%s>
%s: 
relocates = %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/fileIO_Common.cpp
_WriteDictionary
static void Sdf_FileIOUtility::_WriteDictionary(std::ostream &, size_t, bool, Sdf_FileIOUtility::_OrderedDictionary &, bool)
Dictionary has a non-string value under key "%s"; skipping
dictionary %s = 
%s %s = 
offset = %s%s
scale = %s%s
0123456789abcedf
Stringify
static const char *Sdf_FileIOUtility::Stringify(SdfPermission)
unknown value
static const char *Sdf_FileIOUtility::Stringify(SdfSpecifier)
static const char *Sdf_FileIOUtility::Stringify(SdfVariability)
\@@@
TfIterator<T, Reverse> &TfIterator<std::map<double, VtValue>, false>::operator++() [T = std::map<double, VtValue>, Reverse = false]
TfIterator::Iterator &TfIterator<std::map<double, VtValue>, false>::operator->() [T = std::map<double, VtValue>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::map<const std::string *, const VtValue *, Sdf_FileIOUtility::_StringLessThan>, false>::operator++() [T = std::map<const std::string *, const VtValue *, Sdf_FileIOUtility::_StringLessThan>, Reverse = false]
TfIterator::Iterator &TfIterator<std::map<const std::string *, const VtValue *, Sdf_FileIOUtility::_StringLessThan>, false>::operator->() [T = std::map<const std::string *, const VtValue *, Sdf_FileIOUtility::_StringLessThan>, Reverse = false]
delete
prepend
append
reorder
%s%s%s = 
customData = 
TfIterator<T, Reverse> &TfIterator<const std::string, false>::operator++() [T = const std::string, Reverse = false]
TfIterator::Reference TfIterator<const std::string, false>::operator*() [T = const std::string, Reverse = false]
fatal flex scanner internal error--no action found
out of dynamic memory in pathYy_create_buffer()
out of dynamic memory in pathYy_scan_buffer()
out of dynamic memory in pathYy_scan_bytes()
bad buffer in pathYy_scan_bytes()
fatal flex scanner internal error--end of buffer missed
fatal error - scanner input buffer overflow
input in flex scanner failed
out of dynamic memory in yy_get_next_buffer()
out of dynamic memory in pathYyensure_buffer_stack()
target
temp_file_name
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/changeManager.cpp
CloseChangeBlock
void Sdf_ChangeManager::CloseChangeBlock()
changeBlockDepth == 0
changeBlockDepth > 0
_ProcessRemoveIfInert
void Sdf_ChangeManager::_ProcessRemoveIfInert()
data.changeBlockDepth == 1
data.removeIfInert.empty()
Changes to layer %s:
DidChangeField
void Sdf_ChangeManager::DidChangeField(const SdfLayerHandle &, const SdfPath &, const TfToken &, const VtValue &, const VtValue &)
newOffsets.size() == subLayers.size()
path == SdfPath::AbsoluteRootPath()
DidAddSpec
void Sdf_ChangeManager::DidAddSpec(const SdfLayerHandle &, const SdfPath &, bool)
Unsupported Spec Type for <
DidRemoveSpec
void Sdf_ChangeManager::DidRemoveSpec(const SdfLayerHandle &, const SdfPath &, bool)
Sdf_ChangeManager::DidChangeField - Comparing old/new PrimChildren order
TfIterator<T, Reverse> &TfIterator<const TfSmallVector<std::pair<SdfPath, SdfChangeList::Entry>, 1>, false>::operator++() [T = const TfSmallVector<std::pair<SdfPath, SdfChangeList::Entry>, 1>, Reverse = false]
TfIterator::Iterator &TfIterator<const TfSmallVector<std::pair<SdfPath, SdfChangeList::Entry>, 1>, false>::operator->() [T = const TfSmallVector<std::pair<SdfPath, SdfChangeList::Entry>, 1>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const TfSmallVector<std::pair<TfToken, std::pair<VtValue, VtValue>>, 3>, false>::operator++() [T = const TfSmallVector<std::pair<TfToken, std::pair<VtValue, VtValue>>, 3>, Reverse = false]
TfIterator::Iterator &TfIterator<const TfSmallVector<std::pair<TfToken, std::pair<VtValue, VtValue>>, 3>, false>::operator->() [T = const TfSmallVector<std::pair<TfToken, std::pair<VtValue, VtValue>>, 3>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<SdfSpec>, false>::operator++() [T = std::vector<SdfSpec>, Reverse = false]
TfIterator::Iterator &TfIterator<std::vector<SdfSpec>, false>::operator->() [T = std::vector<SdfSpec>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<SdfSpec>, false>::operator*() [T = std::vector<SdfSpec>, Reverse = false]
pxr/usd/sdf/textFileFormat.ll
textFileFormatYylex
int textFileFormatYylex(Sdf_ParserHelpers::Value *, yyscan_t)
Integer literal '%s' on line %d%s%s out of range, parsing as double.  Consider exponential notation for large floating point values.
out of dynamic memory in textFileFormatYy_create_buffer()
out of dynamic memory in textFileFormatYy_scan_buffer()
out of dynamic memory in textFileFormatYy_scan_bytes()
bad buffer in textFileFormatYy_scan_bytes()
out of dynamic memory in textFileFormatYyensure_buffer_stack()
GetFields
TfTokenVector SdfSchemaBase::SpecDefinition::GetFields() const
GetRequiredFields
TfTokenVector SdfSchemaBase::SpecDefinition::GetRequiredFields() const
GetMetadataFields
TfTokenVector SdfSchemaBase::SpecDefinition::GetMetadataFields() const
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/schema.cpp
_AddField
void SdfSchemaBase::SpecDefinition::_AddField(const TfToken &, const SdfSchemaBase::_FieldInfo &)
Duplicate registration for field '%s'
connectionChildren
expressionChildren
mapperArgChildren
mapperChildren
primChildren
properties
targetChildren
variantChildren
variantSetChildren
allowedTokens
assetInfo
colorConfiguration
colorManagementSystem
colorSpace
connectionPaths
custom
customData
customLayerData
defaultPrim
displayGroup
displayName
displayUnit
documentation
endTimeCode
framePrecision
framesPerSecond
hidden
hasOwnedSubLayers
inheritPaths
instanceable
kind
primOrder
noLoadHint
owner
payload
permission
prefix
prefixSubstitutions
propertyOrder
references
relocates
sessionOwner
specializes
specifier
startTimeCode
subLayers
subLayerOffsets
suffix
suffixSubstitutions
symmetricPeer
symmetryArgs
symmetryArguments
symmetryFunction
targetPaths
timeSamples
timeCodesPerSecond
typeName
variantSelection
variability
variantSetNames
endFrame
startFrame
_CreateField
SdfSchemaBase::FieldDefinition &SdfSchemaBase::_CreateField(const TfToken &, const VtValue &, bool)
Duplicate creation for field '%s'
_DoRegisterField
SdfSchemaBase::FieldDefinition &SdfSchemaBase::_DoRegisterField(const TfToken &, const VtValue &)
Field '%s' has not been created.
Registered fallback value for field '%s' does not match field type definition. (expected: %s, got: %s)
_ExtendSpecDefinition
SdfSchemaBase::_SpecDefiner SdfSchemaBase::_ExtendSpecDefinition(SdfSpecType)
No definition for spec type %s
_CheckAndGetSpecDefinition
const SdfSchemaBase::SpecDefinition *SdfSchemaBase::_CheckAndGetSpecDefinition(SdfSpecType) const
Value for key '%s' does not have a valid scene description type (%s)
Value does not have a valid scene description type (
" is not a valid identifier
"%s" is not a valid variant name due to '%c' at index %d
Root paths not allowed in relocates map
Inherit paths must be an absolute prim path
Specializes paths must be absolute prim path
Attribute connection paths cannot contain variant selections
Connection paths must be absolute prim or property paths: <%s>
Relationship target paths cannot contain variant selections
Relationship target paths must be absolute prim, property or mapper paths
Reference prim path <
> must be either empty or an absolute prim path
Payload prim path <
Sublayer paths must not be empty
SdfMetadata
_UpdateMetadataFromPlugins
const std::vector<const SdfSchemaBase::FieldDefinition *> SdfSchemaBase::_UpdateMetadataFromPlugins(const PlugPluginPtrVector &, const std::string &, const SdfSchemaBase::_DefaultValueFactoryFn &)
Value must be a dictionary (at "%s" in plugin "%s")
Could not read a string for "type" (at "%s" in plugin "%s")
"%s" is already a registered field (in plugin "%s")
No default value for metadata (at "%s" in plugin "%s")
Error parsing default value for metadata (at "%s" in plugin "%s")
layers
prims
attributes
relationships
variants
bool
int64
uint64
half
timecode
token
asset
int2
int3
int4
half2
half3
half4
float2
float3
float4
double2
double3
double4
point3h
point3f
point3d
vector3h
vector3f
vector3d
normal3h
normal3f
normal3d
color3h
color3f
color3d
color4h
color4f
color4d
quath
quatf
quatd
matrix2d
matrix3d
matrix4d
frame4d
texCoord2f
texCoord2d
texCoord2h
texCoord3f
texCoord3d
texCoord3h
bool[]
uchar[]
int[]
uint[]
ushort[]
int64[]
uint64[]
half[]
float[]
double[]
timecode[]
string[]
token[]
asset[]
int2[]
int3[]
int4[]
half2[]
half3[]
half4[]
float2[]
float3[]
float4[]
double2[]
double3[]
double4[]
point3h[]
point3f[]
point3d[]
vector3h[]
vector3f[]
vector3d[]
normal3h[]
normal3f[]
normal3d[]
color3h[]
color3f[]
color3d[]
color4h[]
color4f[]
color4d[]
quath[]
quatf[]
quatd[]
matrix2d[]
matrix3d[]
matrix4d[]
frame4d[]
texCoord2f[]
texCoord2d[]
texCoord2h[]
texCoord3f[]
texCoord3d[]
texCoord3h[]
Trace
TraceCollector
VtArray<
unsigned char
unsigned int
GfHalf
std::string
Vec2i
Vec2h
Vec2f
Vec2d
Vec3i
Vec3h
Vec3f
Vec3d
Vec4i
Vec4h
Vec4f
Vec4d
Point
PointFloat
Normal
NormalFloat
Vector
VectorFloat
Color
ColorFloat
Quath
Quatf
Quatd
Matrix2d
Matrix3d
Matrix4d
Frame
Transform
PointIndex
EdgeIndex
FaceIndex
Expected value of type std::string
Expected value of type SdfPath
Expected value of type double
Value must be greater than 0
Expected value of type TfToken
Expected value of type SdfPayload
Expected non-empty string
Expected value of type string
Expected value of type SdfReference
dictionary
_GetDefaultMetadataValue
VtValue _GetDefaultMetadataValue(const SdfSchemaBase &, const std::string &, const JsValue &)
Default values are not allowed on fields of type "dictionary", which will always default to an empty dictionary.
Default values are not allowed on fields of type "%s", which will alwaysdefault to an empty list op.
Could not parse default value: %s
"%s" is not a registered value type
intlistop
int64listop
uintlistop
uint64listop
stringlistop
tokenlistop
Value was not a string, an int, a double, or a vector of those types
"%s" is not a valid type
TfIterator<T, Reverse> &TfIterator<const TfHashMap<TfToken, SdfSchemaBase::_FieldInfo, TfToken::HashFunctor>, false>::operator++() [T = const TfHashMap<TfToken, SdfSchemaBase::_FieldInfo, TfToken::HashFunctor>, Reverse = false]
TfIterator::Iterator &TfIterator<const TfHashMap<TfToken, SdfSchemaBase::_FieldInfo, TfToken::HashFunctor>, false>::operator->() [T = const TfHashMap<TfToken, SdfSchemaBase::_FieldInfo, TfToken::HashFunctor>, Reverse = false]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, SdfSchemaBase>::operator->() const [PtrTemplate = TfWeakPtr, Type = SdfSchemaBase]
virtual TfType TfNotice::_StandardDeliverer<TfNotice::_Deliverer<TfWeakPtr<SdfSchemaBase>, TfAnyWeakPtr, void (SdfSchemaBase::*)(const PlugNotice::DidRegisterPlugins &), PlugNotice::DidRegisterPlugins>>::GetNoticeType() const [Derived = TfNotice::_Deliverer<TfWeakPtr<SdfSchemaBase>, TfAnyWeakPtr, void (SdfSchemaBase::*)(const PlugNotice::DidRegisterPlugins &), PlugNotice::DidRegisterPlugins>]
TfIterator<T, Reverse> &TfIterator<const VtDictionary, false>::operator++() [T = const VtDictionary, Reverse = false]
TfIterator::Iterator &TfIterator<const VtDictionary, false>::operator->() [T = const VtDictionary, Reverse = false]
type
appliesTo
Equals
virtual bool SdfAbstractData::Equals(const SdfAbstractDataRefPtr &) const
WriteToStream
virtual void SdfAbstractData::WriteToStream(std::ostream &) const
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/abstractData.cpp
VisitSpecs
void SdfAbstractData::VisitSpecs(SdfAbstractDataSpecVisitor *) const
visitor
TfIterator::Reference TfIterator<const std::vector<TfToken>, false>::operator*() [T = const std::vector<TfToken>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::vector<TfToken>, false>::operator++() [T = const std::vector<TfToken>, Reverse = false]
T *TfRefPtr<SdfAbstractData>::operator->() const [U = SdfAbstractData]
static SdfAttributeSpecHandle SdfAttributeSpec::New(const SdfPrimSpecHandle &, const std::string &, const SdfValueTypeName &, SdfVariability, bool)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/attributeSpec.cpp
Cannot create an SdfAttributeSpec with a null owner
Cannot create attribute spec on <%s> with invalid name '%s'
Cannot create attribute spec '%s' on the pseudo-root '/'
Cannot create attribute spec '%s' on <%s>
Cannot create attribute spec <%s> with invalid type
resultPtr
SdfNamespaceEditDetail::Error
SdfNamespaceEditDetail::Unbatched
SdfNamespaceEditDetail::Okay
static void TfSingleton<Sdf_SpecTypeInfo>::SetInstanceConstructed(T &) [T = Sdf_SpecTypeInfo]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/specType.cpp
_RegisterSpecType
static void SdfSpecTypeRegistration::_RegisterSpecType(const std::type_info &, SdfSpecType, const std::type_info &)
Schema type %s must be registered with the TfType system.
Spec type %s already registered for schema type %s
_RegisterAbstractSpecType
static void SdfSpecTypeRegistration::_RegisterAbstractSpecType(const std::type_info &, const std::type_info &)
FindOrCreateSpecTypeEntry
SpecTypeToBitmask::iterator Sdf_SpecTypeInfo::FindOrCreateSpecTypeEntry(const std::type_info &)
Spec type %s must be registered with the TfType system.
TfIterator<T, Reverse> &TfIterator<TfHashMap<TfType, unsigned long, TfHash>, false>::operator++() [T = TfHashMap<TfType, unsigned long, TfHash>, Reverse = false]
TfIterator::Iterator &TfIterator<TfHashMap<TfType, unsigned long, TfHash>, false>::operator->() [T = TfHashMap<TfType, unsigned long, TfHash>, Reverse = false]
1.4.32
SDF_TEXTFILE_SIZE_WARNING_MB
Warn when reading a text file larger than this number of MB (no warnings if set to 0)
virtual bool SdfTextFileFormat::CanRead(const std::string &) const
virtual bool SdfTextFileFormat::Read(SdfLayer *, const std::string &, bool) const
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/textFileFormat.cpp
<%s> is not a valid %s layer
Performance warning: reading %lu MB text-based layer <%s>.
virtual bool SdfTextFileFormat::WriteToFile(const SdfLayer &, const std::string &, const std::string &, const SdfFileFormat::FileFormatArguments &) const
bool SdfTextFileFormat::Write(const SdfLayer &, std::ostream &, const std::string &) const
%s %s
doc = 
subLayers = [
hasOwnedSubLayers = true
reorder rootPrims = 
bool SdfListProxy<SdfSubLayerTypePolicy>::_Validate() const [_TypePolicy = SdfSubLayerTypePolicy]
bool SdfListProxy<SdfSubLayerTypePolicy>::_Validate() [_TypePolicy = SdfSubLayerTypePolicy]
%s = 
TfIterator::Reference TfIterator<SdfChildrenView<Sdf_PrimChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfPrimSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfPrimSpec>>>, false>::operator*() [T = SdfChildrenView<Sdf_PrimChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfPrimSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfPrimSpec>>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<SdfChildrenView<Sdf_PrimChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfPrimSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfPrimSpec>>>, false>::operator++() [T = SdfChildrenView<Sdf_PrimChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfPrimSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfPrimSpec>>>, Reverse = false]
static SdfRelationshipSpecHandle SdfRelationshipSpec::New(const SdfPrimSpecHandle &, const std::string &, bool, SdfVariability)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/relationshipSpec.cpp
Cannot create a relationship on %s with invalid name: %s
Cannot create relationship at invalid path <%s.%s>
ReplaceTargetPath
SDF_LAYER_VALIDATE_AUTHORING
If enabled, layers will validate new fields and specs being authored against their schema. If the field or spec is not defined in the schema a coding error will be issued and the authoring operation will fail.
SdfLayer::SdfLayer('%s', '%s')
SdfLayer::~SdfLayer('%s')
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/layer.cpp
CreateAnonymous
static SdfLayerRefPtr SdfLayer::CreateAnonymous(const std::string &, const SdfLayer::FileFormatArguments &)
Cannot determine file format for anonymous SdfLayer
_CreateAnonymousWithFormat
static SdfLayerRefPtr SdfLayer::_CreateAnonymousWithFormat(const SdfFileFormatConstPtr &, const std::string &, const SdfLayer::FileFormatArguments &)
Cannot create anonymous layer: creating package %s layer is not allowed through this API.
SdfLayer::CreateNew('%s', '%s', '%s')
_CreateNew
static SdfLayerRefPtr SdfLayer::_CreateNew(SdfFileFormatConstPtr, const std::string &, const std::string &, const ArAssetInfo &, const SdfLayer::FileFormatArguments &)
Cannot create a new layer with anonymous layer identifier '%s'.
Cannot create new layer '%s': %s
Failed to compute local path for new layer with identifier '%s'
Cannot create new layer '%s': creating %s %s layer is not allowed through this API.
package
packaged
A layer already exists with identifier '%s'
layer
_ComputeInfoToFindOrOpenLayer
static bool SdfLayer::_ComputeInfoToFindOrOpenLayer(const std::string &, const SdfLayer::FileFormatArguments &, SdfLayer::_FindOrOpenLayerInfo *, bool)
FindOrOpen
static SdfLayerRefPtr SdfLayer::FindOrOpen(const std::string &, const SdfLayer::FileFormatArguments &)
SdfLayer::FindOrOpen('%s', '%s')
OpenAsAnonymous
static SdfLayerRefPtr SdfLayer::OpenAsAnonymous(const std::string &, bool, const std::string &)
Cannot determine file format for @%s@
_Read
bool SdfLayer::_Read(const std::string &, const std::string &, bool)
SdfLayer::_Read
Loading layer '%s'
SdfLayer::_Read('%s', '%s', metadataOnly=%s)
SdfLayer::_Read - unable to fetch '%s' to local path '%s'
SdfLayer::_Read - fetched '%s' to local path '%s'
static SdfLayerHandle SdfLayer::Find(const std::string &, const SdfLayer::FileFormatArguments &)
FindRelativeToLayer
static SdfLayerHandle SdfLayer::FindRelativeToLayer(const SdfLayerHandle &, const std::string &, const SdfLayer::FileFormatArguments &)
Anchor layer is invalid
void SdfLayer::SetTimeSample(const SdfPath &, double, const VtValue &)
Cannot set time sample on <%s>.  Layer @%s@ is not editable.
Can't set time sample on <%s> to %s: expected a value of type "%s"
void SdfLayer::SetTimeSample(const SdfPath &, double, const SdfAbstractDataConstValue &)
_PrimSetTimeSample
void SdfLayer::_PrimSetTimeSample(const SdfPath &, double, const T &, bool) [T = VtValue]
_stateDelegate
void SdfLayer::_PrimSetTimeSample(const SdfPath &, double, const T &, bool) [T = SdfAbstractDataConstValue]
_InitializeFromIdentifier
void SdfLayer::_InitializeFromIdentifier(const std::string &, const std::string &, const std::string &, const ArAssetInfo &)
GetSubLayerOffset
SdfLayerOffset SdfLayer::GetSubLayerOffset(int) const
Invalid sublayer index
IsDirty
bool SdfLayer::IsDirty() const
_MarkCurrentStateAsClean
void SdfLayer::_MarkCurrentStateAsClean() const
TransferContent
void SdfLayer::TransferContent(const SdfLayerHandle &)
TransferContent of '%s': Permission denied.
TransferContent of '%s': Cannot copy source layer with schema '%s' to layer with schema '%s'.
bool SdfLayer::HasField(const SdfPath &, const TfToken &, SdfAbstractDataValue *) const
Illegal SpecType SdfNumSpectypes for field:%s on path <%s>. SpecType is not valid for layer @%s@.
SetField
void SdfLayer::SetField(const SdfPath &, const TfToken &, const VtValue &)
Cannot set %s on <%s>. Layer @%s@ is not editable.
Cannot set %s on <%s>. Field is not valid for layer @%s@.
void SdfLayer::SetField(const SdfPath &, const TfToken &, const SdfAbstractDataConstValue &)
SetFieldDictValueByKey
void SdfLayer::SetFieldDictValueByKey(const SdfPath &, const TfToken &, const TfToken &, const VtValue &)
Cannot set %s:%s on <%s>. Layer @%s@ is not editable.
Cannot set %s:%s on <%s>. Field is not valid for layer @%s@.
void SdfLayer::SetFieldDictValueByKey(const SdfPath &, const TfToken &, const TfToken &, const SdfAbstractDataConstValue &)
EraseField
void SdfLayer::EraseField(const SdfPath &, const TfToken &)
Cannot erase %s on <%s>. Layer @%s@ is not editable.
_SetData
void SdfLayer::_SetData(const SdfAbstractDataPtr &)
Setting layer data
!newData->IsEmpty()
_PrimSetField
void SdfLayer::_PrimSetField(const SdfPath &, const TfToken &, const T &, const VtValue *, bool) [T = VtValue]
void SdfLayer::_PrimSetField(const SdfPath &, const TfToken &, const T &, const VtValue *, bool) [T = SdfAbstractDataConstValue]
_PrimPushChild
void SdfLayer::_PrimPushChild(const SdfPath &, const TfToken &, const T &, bool) [T = TfToken]
void SdfLayer::_PrimPushChild(const SdfPath &, const TfToken &, const T &, bool) [T = SdfPath]
_PrimSetFieldDictValueByKey
void SdfLayer::_PrimSetFieldDictValueByKey(const SdfPath &, const TfToken &, const TfToken &, const T &, const VtValue *, bool) [T = VtValue]
void SdfLayer::_PrimSetFieldDictValueByKey(const SdfPath &, const TfToken &, const TfToken &, const T &, const VtValue *, bool) [T = SdfAbstractDataConstValue]
_CreateSpec
bool SdfLayer::_CreateSpec(const SdfPath &, SdfSpecType, bool)
Cannot create spec at <%s>. Layer @%s@ is not editable.
Cannot create spec at <%s>. %s is not a valid spec type for layer @%s@
Cannot create spec <%s> because it already exists in @%s@
_DeleteSpec
bool SdfLayer::_DeleteSpec(const SdfPath &)
Cannot delete <%s>. Layer @%s@ is not editable
_PrimDeleteSpec
void SdfLayer::_PrimDeleteSpec(const SdfPath &, bool, bool)
_PrimCreateSpec
void SdfLayer::_PrimCreateSpec(const SdfPath &, SdfSpecType, bool, bool)
_IsInert
bool SdfLayer::_IsInert(const SdfPath &, bool, bool) const
specDefinition
Writing layer @%s@
_WriteToFile
bool SdfLayer::_WriteToFile(const std::string &, const std::string &, SdfFileFormatConstPtr, const SdfLayer::FileFormatArguments &) const
Cannot save layer @%s@, saving not allowed
Cannot save layer @%s@: writing %s %s layer is not allowed through this API.
Unknown file format when attempting to write '%s'
Cannot create destination directory %s
_Save
bool SdfLayer::_Save(bool) const
Cannot save muted layer @%s@
Cannot save anonymous layer @%s@
Unable to get modification timestamp for '%s (%s)'
_GetExpectedTimeSampleValueType
TfType _GetExpectedTimeSampleValueType(const SdfLayer &, const SdfPath &)
Cannot set time sample at <%s> since spec does not exist
Cannot set time sample at <%s> because spec is not an attribute or relationship
Cannot determine value type for <%s>
_GetVtValue
VtValue _GetVtValue(const SdfAbstractDataConstValue &)
v.GetValue(&value)
SDF_LAYER
SDF_CHANGES
SDF_ASSET
SDF_ASSET_TRACE_INVALID_CONTEXT
SDF_FILE_FORMAT
TfIterator<T, Reverse> &TfIterator<const std::map<std::string, std::string>, false>::operator++() [T = const std::map<std::string, std::string>, Reverse = false]
TfIterator::Iterator &TfIterator<const std::map<std::string, std::string>, false>::operator->() [T = const std::map<std::string, std::string>, Reverse = false]
SdfLayer::_OpenLayerAndUnlockRegistry 
_OpenLayerAndUnlockRegistry
static SdfLayerRefPtr SdfLayer::_OpenLayerAndUnlockRegistry(Lock &, const SdfLayer::_FindOrOpenLayerInfo &, bool) [Lock = tbb::queuing_rw_mutex::scoped_lock]
SdfLayer::_OpenLayerAndUnlockRegistry('%s', '%s', '%s', '%s', metadataOnly=%s)
unknown file format
True
False
_layerRegistry-> FindByIdentifier(layer->GetIdentifier()) == layer
Could not find %s
Opened anonymous layer ('%s' with format id '%s') but resulting layer is not anonymous.
Opened layer without anonymous prefix ('%s' with format id '%s') but resulting layer is anonymous.
T *TfRefPtr<SdfLayerStateDelegateBase>::operator->() const [U = SdfLayerStateDelegateBase]
void SdfListProxy<SdfSubLayerTypePolicy>::_Edit(size_t, size_t, const SdfListProxy::value_vector_type &) [_TypePolicy = SdfSubLayerTypePolicy]
TfIterator<T, Reverse> &TfIterator<std::vector<SdfHandle<SdfPrimSpec>>, false>::operator++() [T = std::vector<SdfHandle<SdfPrimSpec>>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<SdfHandle<SdfPrimSpec>>, false>::operator*() [T = std::vector<SdfHandle<SdfPrimSpec>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>>, false>::operator++() [T = SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>>, Reverse = false]
TfIterator::Iterator &TfIterator<SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>>, false>::operator->() [T = SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::vector<SdfHandle<SdfVariantSpec>>, false>::operator++() [T = const std::vector<SdfHandle<SdfVariantSpec>>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<SdfHandle<SdfVariantSpec>>, false>::operator*() [T = const std::vector<SdfHandle<SdfVariantSpec>>, Reverse = false]
T *TfRefPtr<SdfData>::operator->() const [U = SdfData]
equal
bool SdfListProxy<SdfSubLayerTypePolicy>::_Iterator<SdfListProxy<SdfSubLayerTypePolicy> *, SdfListProxy<SdfSubLayerTypePolicy>::_GetHelper>::equal(const SdfListProxy::_Iterator::This &) const [_TypePolicy = SdfSubLayerTypePolicy, Owner = SdfListProxy<SdfSubLayerTypePolicy> *, GetItem = SdfListProxy<SdfSubLayerTypePolicy>::_GetHelper]
Comparing SdfListProxy iterators from different proxies!
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, SdfAbstractData>::operator->() const [PtrTemplate = TfWeakPtr, Type = SdfAbstractData]
TfIterator<T, Reverse> &TfIterator<std::set<SdfPath>, true>::operator++() [T = std::set<SdfPath>, Reverse = true]
TfIterator::Reference TfIterator<std::set<SdfPath>, true>::operator*() [T = std::set<SdfPath>, Reverse = true]
TfIterator::Reference TfIterator<std::vector<SdfPath>, false>::operator*() [T = std::vector<SdfPath>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<SdfPath>, false>::operator++() [T = std::vector<SdfPath>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/data.cpp
virtual void SdfData::EraseSpec(const SdfPath &)
i != _data.end()
No spec to erase at <%s>
virtual void SdfData::MoveSpec(const SdfPath &, const SdfPath &)
old != _data.end()
No spec to move at <%s>
virtual void SdfData::CreateSpec(const SdfPath &, SdfSpecType)
SdfData::Set
_GetOrCreateFieldValue
VtValue *SdfData::_GetOrCreateFieldValue(const SdfPath &, const TfToken &)
No spec at <%s> when trying to set field '%s'
TfIterator<T, Reverse> &TfIterator<const TfHashMap<SdfPath, SdfData::_SpecData, SdfPath::Hash>, false>::operator++() [T = const TfHashMap<SdfPath, SdfData::_SpecData, SdfPath::Hash>, Reverse = false]
TfIterator::Iterator &TfIterator<const TfHashMap<SdfPath, SdfData::_SpecData, SdfPath::Hash>, false>::operator->() [T = const TfHashMap<SdfPath, SdfData::_SpecData, SdfPath::Hash>, Reverse = false]
Unrecognized type name '%s'
Non-square shaped value
Mismatched [ ] in shaped value
Shaped value with a zero dimension
Tuple nesting too deep! Should not be deeper than %d for attribute of type %s.
Mismatched ( ) for attribute of type %s.
Tuple dimensions error for attribute of type %s.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/parserValueContext.cpp
ReportCodingError
void ReportCodingError(const std::string &)
SdfInheritsProxy
SdfReferencesProxy
SdfPayloadsProxy
virtual bool Sdf_ListOpListEditor<SdfPathKeyPolicy>::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = SdfPathKeyPolicy]
void Sdf_ListOpListEditor<SdfPathKeyPolicy>::_UpdateListOp(const Sdf_ListOpListEditor::ListOpType &, const SdfListOpType *) [TypePolicy = SdfPathKeyPolicy]
virtual void Sdf_ListOpListEditor<SdfPathKeyPolicy>::ApplyList(SdfListOpType, const Sdf_ListEditor<TP> &) [TypePolicy = SdfPathKeyPolicy]
virtual bool Sdf_ListEditor<SdfPathKeyPolicy>::_ValidateEdit(SdfListOpType, const Sdf_ListEditor::value_vector_type &, const Sdf_ListEditor::value_vector_type &) const [TypePolicy = SdfPathKeyPolicy]
virtual bool Sdf_ListOpListEditor<SdfReferenceTypePolicy>::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = SdfReferenceTypePolicy]
void Sdf_ListOpListEditor<SdfReferenceTypePolicy>::_UpdateListOp(const Sdf_ListOpListEditor::ListOpType &, const SdfListOpType *) [TypePolicy = SdfReferenceTypePolicy]
virtual void Sdf_ListOpListEditor<SdfReferenceTypePolicy>::ApplyList(SdfListOpType, const Sdf_ListEditor<TP> &) [TypePolicy = SdfReferenceTypePolicy]
virtual bool Sdf_ListEditor<SdfReferenceTypePolicy>::_ValidateEdit(SdfListOpType, const Sdf_ListEditor::value_vector_type &, const Sdf_ListEditor::value_vector_type &) const [TypePolicy = SdfReferenceTypePolicy]
virtual bool Sdf_ListOpListEditor<SdfPayloadTypePolicy>::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = SdfPayloadTypePolicy]
void Sdf_ListOpListEditor<SdfPayloadTypePolicy>::_UpdateListOp(const Sdf_ListOpListEditor::ListOpType &, const SdfListOpType *) [TypePolicy = SdfPayloadTypePolicy]
virtual void Sdf_ListOpListEditor<SdfPayloadTypePolicy>::ApplyList(SdfListOpType, const Sdf_ListEditor<TP> &) [TypePolicy = SdfPayloadTypePolicy]
virtual bool Sdf_ListEditor<SdfPayloadTypePolicy>::_ValidateEdit(SdfListOpType, const Sdf_ListEditor::value_vector_type &, const Sdf_ListEditor::value_vector_type &) const [TypePolicy = SdfPayloadTypePolicy]
../ModelKit/extern/usd/pxr/usd/sdf/vectorListEditor.h
virtual bool Sdf_VectorListEditor<SdfNameTokenKeyPolicy, TfToken>::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = SdfNameTokenKeyPolicy, FieldStorageType = TfToken]
Cannot copy from list editor of different type
Cannot copy from list editor in different mode
_UpdateFieldData
void Sdf_VectorListEditor<SdfNameTokenKeyPolicy, TfToken>::_UpdateFieldData(const Sdf_VectorListEditor::value_vector_type &) [TypePolicy = SdfNameTokenKeyPolicy, FieldStorageType = TfToken]
virtual void Sdf_VectorListEditor<SdfNameTokenKeyPolicy, TfToken>::ApplyList(SdfListOpType, const Sdf_ListEditor<TP> &) [TypePolicy = SdfNameTokenKeyPolicy, FieldStorageType = TfToken]
virtual bool Sdf_ListEditor<SdfNameTokenKeyPolicy>::_ValidateEdit(SdfListOpType, const Sdf_ListEditor::value_vector_type &, const Sdf_ListEditor::value_vector_type &) const [TypePolicy = SdfNameTokenKeyPolicy]
SdfPath
Sdf_PathNode::GetPathToken
_CreatePathToken
static TfToken Sdf_PathNode::_CreatePathToken(const Sdf_PathNode *, const Sdf_PathNode *)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/pathNode.cpp
_absoluteRootNode_Tf_StaticDataFactoryImpl
void _absoluteRootNode_Tf_StaticDataFactoryImpl(const Sdf_PathNode **)
(*_absoluteRootNode)->GetCurrentRefCount() == 1
_relativeRootNode_Tf_StaticDataFactoryImpl
void _relativeRootNode_Tf_StaticDataFactoryImpl(const Sdf_PathNode **)
(*_relativeRootNode)->GetCurrentRefCount() == 1
TfIterator<T, Reverse> &TfIterator<std::vector<const Sdf_PathNode *>, true>::operator++() [T = std::vector<const Sdf_PathNode *>, Reverse = true]
TfIterator::Reference TfIterator<std::vector<const Sdf_PathNode *>, true>::operator*() [T = std::vector<const Sdf_PathNode *>, Reverse = true]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/connectionListEditor.cpp
_OnEditShared
void Sdf_ConnectionListEditor<Sdf_AttributeConnectionChildPolicy>::_OnEditShared(SdfListOpType, SdfSpecType, const std::vector<SdfPath> &, const std::vector<SdfPath> &) const [ConnectionChildPolicy = Sdf_AttributeConnectionChildPolicy]
Failed to remove spec at <%s>
Failed to create spec at <%s>
void Sdf_ConnectionListEditor<Sdf_RelationshipTargetChildPolicy>::_OnEditShared(SdfListOpType, SdfSpecType, const std::vector<SdfPath> &, const std::vector<SdfPath> &) const [ConnectionChildPolicy = Sdf_RelationshipTargetChildPolicy]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/listOp.cpp
GetItems
const typename SdfListOp<T>::ItemVector &SdfListOp<int>::GetItems(SdfListOpType) const [T = int]
Got out-of-range type value: %d
ApplyOperations
void SdfListOp<int>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = int]
ReplaceOperations
Invalid start index %zd (size is %zd)
Invalid end index %zd (size is %zd)
const typename SdfListOp<T>::ItemVector &SdfListOp<unsigned int>::GetItems(SdfListOpType) const [T = unsigned int]
void SdfListOp<unsigned int>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = unsigned int]
const typename SdfListOp<T>::ItemVector &SdfListOp<long long>::GetItems(SdfListOpType) const [T = long long]
void SdfListOp<long long>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = long long]
const typename SdfListOp<T>::ItemVector &SdfListOp<unsigned long long>::GetItems(SdfListOpType) const [T = unsigned long long]
void SdfListOp<unsigned long long>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = unsigned long long]
const typename SdfListOp<T>::ItemVector &SdfListOp<std::string>::GetItems(SdfListOpType) const [T = std::string]
void SdfListOp<std::string>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = std::string]
bool SdfListOp<std::string>::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = std::string]
const typename SdfListOp<T>::ItemVector &SdfListOp<TfToken>::GetItems(SdfListOpType) const [T = TfToken]
void SdfListOp<TfToken>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = TfToken]
bool SdfListOp<TfToken>::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = TfToken]
const typename SdfListOp<T>::ItemVector &SdfListOp<SdfPath>::GetItems(SdfListOpType) const [T = SdfPath]
void SdfListOp<SdfPath>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = SdfPath]
bool SdfListOp<SdfPath>::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = SdfPath]
const typename SdfListOp<T>::ItemVector &SdfListOp<SdfReference>::GetItems(SdfListOpType) const [T = SdfReference]
void SdfListOp<SdfReference>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = SdfReference]
bool SdfListOp<SdfReference>::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = SdfReference]
const typename SdfListOp<T>::ItemVector &SdfListOp<SdfPayload>::GetItems(SdfListOpType) const [T = SdfPayload]
void SdfListOp<SdfPayload>::ApplyOperations(SdfListOp::ItemVector *, const SdfListOp::ApplyCallback &) const [T = SdfPayload]
bool SdfListOp<SdfPayload>::ReplaceOperations(const SdfListOpType, size_t, size_t, const SdfListOp::ItemVector &) [T = SdfPayload]
SdfTokenListOp
SdfPathListOp
SdfStringListOp
SdfReferenceListOp
SdfPayloadListOp
SdfIntListOp
SdfUIntListOp
SdfInt64ListOp
SdfUInt64ListOp
SdfUnregisteredValueListOp
SdfListOpTypeExplicit
SdfListOpTypeAdded
SdfListOpTypePrepended
SdfListOpTypeAppended
SdfListOpTypeDeleted
SdfListOpTypeOrdered
TfIterator<T, Reverse> &TfIterator<const std::vector<int>, false>::operator++() [T = const std::vector<int>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<int>, false>::operator*() [T = const std::vector<int>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<int>, false>::operator++() [T = std::vector<int>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<int>, false>::operator*() [T = std::vector<int>, Reverse = false]
_StreamOut
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = int]
!listOpAliases.empty()
Explicit
Deleted
Added
Prepended
Appended
Ordered
 Items: [
TfIterator<T, Reverse> &TfIterator<const std::vector<unsigned int>, false>::operator++() [T = const std::vector<unsigned int>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<unsigned int>, false>::operator*() [T = const std::vector<unsigned int>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<unsigned int>, false>::operator++() [T = std::vector<unsigned int>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<unsigned int>, false>::operator*() [T = std::vector<unsigned int>, Reverse = false]
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = unsigned int]
TfIterator<T, Reverse> &TfIterator<const std::vector<long long>, false>::operator++() [T = const std::vector<long long>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<long long>, false>::operator*() [T = const std::vector<long long>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<long long>, false>::operator++() [T = std::vector<long long>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<long long>, false>::operator*() [T = std::vector<long long>, Reverse = false]
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = long long]
TfIterator<T, Reverse> &TfIterator<const std::vector<unsigned long long>, false>::operator++() [T = const std::vector<unsigned long long>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<unsigned long long>, false>::operator*() [T = const std::vector<unsigned long long>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<unsigned long long>, false>::operator++() [T = std::vector<unsigned long long>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<unsigned long long>, false>::operator*() [T = std::vector<unsigned long long>, Reverse = false]
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = unsigned long long]
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = std::string]
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = TfToken]
TfIterator<T, Reverse> &TfIterator<const std::vector<SdfUnregisteredValue>, false>::operator++() [T = const std::vector<SdfUnregisteredValue>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<SdfUnregisteredValue>, false>::operator*() [T = const std::vector<SdfUnregisteredValue>, Reverse = false]
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = SdfUnregisteredValue]
TfIterator::Reference TfIterator<const std::vector<SdfPath>, false>::operator*() [T = const std::vector<SdfPath>, Reverse = false]
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = SdfPath]
TfIterator<T, Reverse> &TfIterator<const std::vector<SdfReference>, false>::operator++() [T = const std::vector<SdfReference>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<SdfReference>, false>::operator*() [T = const std::vector<SdfReference>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<SdfReference>, false>::operator++() [T = std::vector<SdfReference>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<SdfReference>, false>::operator*() [T = std::vector<SdfReference>, Reverse = false]
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = SdfReference]
TfIterator<T, Reverse> &TfIterator<const std::vector<SdfPayload>, false>::operator++() [T = const std::vector<SdfPayload>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<SdfPayload>, false>::operator*() [T = const std::vector<SdfPayload>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<SdfPayload>, false>::operator++() [T = std::vector<SdfPayload>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<SdfPayload>, false>::operator*() [T = std::vector<SdfPayload>, Reverse = false]
std::ostream &_StreamOut(std::ostream &, const SdfListOp<T> &) [T = SdfPayload]
SdfReference(
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/layerUtils.cpp
SdfComputeAssetPathRelativeToLayer
std::string SdfComputeAssetPathRelativeToLayer(const SdfLayerHandle &, const std::string &)
Invalid anchor layer
Layer path is empty
SdfFindOrOpenRelativeToLayer
SdfLayerRefPtr SdfFindOrOpenRelativeToLayer(const SdfLayerHandle &, std::string *, const SdfLayer::FileFormatArguments &)
Invalid layer path pointer
'%s' is not a valid prim name
Duplicate prim '%s'
Payload asset path must not be empty. If this is intended to be an internal payload, remove the '@' delimiters.
Reference asset path must not be empty. If this is intended to be an internal reference, remove the '@' delimiters.
%s%s in <%s> on line %i
 at '%s'
 in file 
pxr/usd/sdf/textFileFormat.yy
textFileFormatYyerror
void textFileFormatYyerror(Sdf_TextParserContext *, const char *)
Sdf_MemoryFlexBuffer
Sdf_MemoryFlexBuffer::Sdf_MemoryFlexBuffer(const std::shared_ptr<ArAsset> &, const std::string &, yyscan_t)
Failed to read asset contents @%s@: an error occurred while reading
Menva
Menva_Parse
Sdf_ParseMenva
bool Sdf_ParseMenva(const std::string &, const std::shared_ptr<ArAsset> &, const std::string &, const std::string &, bool, SdfDataRefPtr)
textFileFormatYyParse
Bad boost:get<T>() in menva parser.
Internal menva parser error.
Sdf_ParseMenvaFromString
bool Sdf_ParseMenvaFromString(const std::string &, const std::string &, const std::string &, SdfDataRefPtr)
_MatchMagicIdentifier
void _MatchMagicIdentifier(const Sdf_ParserHelpers::Value &, Sdf_TextParserContext *)
File '%s' is not the latest %s version (found '%s', expected '%s'). The file may parse correctly and yield incorrect results.
Magic Cookie '%s'. Expected prefix of '%s'
invalid value for field "%s"
"%s" is registered as a non-metadata field
_SetItemsIfListOp
bool _SetItemsIfListOp(const TfType &, Sdf_TextParserContext *) [ListOpType = SdfListOp<int>]
context->currentValue.IsHolding<ArrayType>() || context->currentValue.IsEmpty()
Duplicate items exist for field '%s' at '%s'
bool _SetItemsIfListOp(const TfType &, Sdf_TextParserContext *) [ListOpType = SdfListOp<long long>]
bool _SetItemsIfListOp(const TfType &, Sdf_TextParserContext *) [ListOpType = SdfListOp<unsigned int>]
bool _SetItemsIfListOp(const TfType &, Sdf_TextParserContext *) [ListOpType = SdfListOp<unsigned long long>]
bool _SetItemsIfListOp(const TfType &, Sdf_TextParserContext *) [ListOpType = SdfListOp<std::string>]
bool _SetItemsIfListOp(const TfType &, Sdf_TextParserContext *) [ListOpType = SdfListOp<TfToken>]
auto _GenericMetadataEnd(SdfSpecType, Sdf_TextParserContext *)::(anonymous class)::operator()() const
v.IsHolding<SdfUnregisteredValue>()
public
'%s' is not a valid permission constant
Setting payload to None (or an empty list) is only allowed when setting explicit payloads, not for list editing
Setting inherit paths to None (or empty list) is only allowed when setting explicit inherit paths, not for list editing
Setting specializes paths to None (or empty list) is only allowed when setting explicit specializes paths, not for list editing
Setting references to None (or an empty list) is only allowed when setting explicit references, not for list editing
variant name must be a string
'%s' is not a valid prim path
'%s' is not a valid attribute name
attribute '%s' already has type '%s', cannot change to '%s'
attribute '%s' already has variability '%s', cannot change to '%s'
Setting connection paths to None (or an empty list) is only allowed when setting explicit connection paths, not for list editing
_AttributeAppendConnectionPath
void _AttributeAppendConnectionPath(Sdf_TextParserContext *)
Connection path <%s> (in file @%s@, line %i) has a variant selection, but variant selections are not meaningful in connection paths.  Stripping the variant selection and using <%s> instead.  Resaving the file will fix this issue.
'%s' is not a valid display unit
Unrecognized value typename '%s' for dictionary
Type name has [] for non-shaped value!
Error parsing simple value: %s
Type name missing [] for shaped value.
Error parsing shaped value: %s
Type name has [] for non-shaped value.
Error parsing tuple value: %s
'%s' is not a valid relationship name
Setting relationship targets to None (or empty list) is only allowed when setting explicit targets, not for list editing
'%s' is not a valid prim or property scene path
Sdf_IdentityRegistry::Identify
TfIterator<T, Reverse> &TfIterator<TfHashMap<SdfPath, Sdf_Identity *, SdfPath::Hash>, false>::operator++() [T = TfHashMap<SdfPath, Sdf_Identity *, SdfPath::Hash>, Reverse = false]
TfIterator::Reference TfIterator<TfHashMap<SdfPath, Sdf_Identity *, SdfPath::Hash>, false>::operator*() [T = TfHashMap<SdfPath, Sdf_Identity *, SdfPath::Hash>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/mapEditor.cpp
Sdf_LsdMapEditor
%s does not hold value of expected type.
field '%s' in <%s>
Sdf_LsdMapEditor::_UpdateDataInSpec
_UpdateDataInSpec
_owner
Sdf_LsdMapEditor<std::map<std::string, std::string>>::Sdf_LsdMapEditor(const SdfSpecHandle &, const TfToken &) [T = std::map<std::string, std::string>]
void Sdf_LsdMapEditor<std::map<std::string, std::string>>::_UpdateDataInSpec() [T = std::map<std::string, std::string>]
Sdf_LsdMapEditor<std::map<SdfPath, SdfPath>>::Sdf_LsdMapEditor(const SdfSpecHandle &, const TfToken &) [T = std::map<SdfPath, SdfPath>]
void Sdf_LsdMapEditor<std::map<SdfPath, SdfPath>>::_UpdateDataInSpec() [T = std::map<SdfPath, SdfPath>]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/spec.cpp
SetInfo
void SdfSpec::SetInfo(const TfToken &, const VtValue &)
Cannot set field '%s' of type '%s' to provided value '%s' because the value is an incompatible type '%s', on spec <%s>
GetInfo
VtValue SdfSpec::GetInfo(const TfToken &) const
Invalid info key: %s
_CanEditInfoOnSpec
bool _CanEditInfoOnSpec(const TfToken &, SdfSpecType, const SdfSchemaBase &, const SdfSchema::FieldDefinition *, const char *)
Cannot %s value for unknown field '%s'
Cannot %s value for read-only field '%s'
Field '%s' is not valid for spec type %s
Accessing an invalid map proxy
SdfLayerOffset(
SdfPayload(
expected property name after '.'
expected a path within [ ]
expected a property for relationship target
syntax error
memory exhausted
pxr/usd/sdf/path.yy
pathYyerror
void pathYyerror(Sdf_PathParserContext *, const char *)
context
FindById
SdfFileFormatConstPtr Sdf_FileFormatRegistry::FindById(const TfToken &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/fileFormatRegistry.cpp
Cannot find file format for empty id
FindByExtension
SdfFileFormatConstPtr Sdf_FileFormatRegistry::FindByExtension(const std::string &, const std::string &)
Cannot find file format for empty string
Unable to determine extension for '%s'
_RegisterFormatPlugins
void Sdf_FileFormatRegistry::_RegisterFormatPlugins()
Sdf_FileFormatRegistry::_RegisterFormatPlugins
Registering file format plugins
!formatBaseType.IsUnknown()
_RegisterFormatPlugins: Type '%s'
_RegisterFormatPlugins:   plugin '%s'
_RegisterFormatPlugins: No format identifier for type '%s', skipping.
Unexpected value type for key '%s' in plugin meta data for file format type '%s'
File format '%s' plugin meta data '%s' is empty
_RegisterFormatPlugins:   formatId '%s'
_RegisterFormatPlugins: No extensions registered for type '%s', skipping.
_RegisterFormatPlugins:     Found target for type '%s' from type '%s'
_RegisterFormatPlugins: No target for type '%s', skipping.
_RegisterFormatPlugins:   target '%s'
Duplicate registration for file format '%s'
_RegisterFormatPlugins:   extension '%s'
Multiple file formats with target '%s' registered for extension '%s', skipping.
!infos.empty()
Multiple primary file formats specified for extension '%s', skipping.
No primary file format specified for extension '%s', skipping.
_formatInfo.empty()
_extensionIndex.empty()
_fullExtensionIndex.empty()
SdfFileFormatConstPtr Sdf_FileFormatRegistry::_GetFileFormat(const Sdf_FileFormatRegistry::_InfoSharedPtr &)
TfIterator<T, Reverse> &TfIterator<const std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, false>::operator++() [T = const std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, false>::operator*() [T = const std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, Reverse = false]
formatId
primary
TfIterator<T, Reverse> &TfIterator<std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, false>::operator++() [T = std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, false>::operator*() [T = std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<TfHashMap<std::string, std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, TfHash>, false>::operator++() [T = TfHashMap<std::string, std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, TfHash>, Reverse = false]
TfIterator::Iterator &TfIterator<TfHashMap<std::string, std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, TfHash>, false>::operator->() [T = TfHashMap<std::string, std::vector<boost::shared_ptr<Sdf_FileFormatRegistry::_Info>>, TfHash>, Reverse = false]
__AnyType__
mapper
expression
Internal
Direct Manip
Pipeline
Symmetry
User Interface
static SdfVariantSetSpecHandle SdfVariantSetSpec::New(const SdfPrimSpecHandle &, const std::string &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/variantSetSpec.cpp
NULL owner prim
Cannot create variant set spec with invalid identifier: '%s'
Cannot create variant set spec at invalid path <%s{%s=}>
Schema
Failed to parse value (at sub-part %zd if there are multiple parts)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/parserHelpers.cpp
MakeScalarValueImpl
typename boost::enable_if<boost::is_integral<Int>>::type Sdf_ParserHelpers::MakeScalarValueImpl(Int *, const vector<Sdf_ParserHelpers::Value> &, size_t &) [Int = bool]
Not enough values to parse value of type %s
Failed to parse at element %zd (at sub-part %zd if there are multiple parts)
TfIterator::Reference TfIterator<VtArray<bool>, false>::operator*() [T = VtArray<bool>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<bool>, false>::operator++() [T = VtArray<bool>, Reverse = false]
typename boost::enable_if<boost::is_integral<Int>>::type Sdf_ParserHelpers::MakeScalarValueImpl(Int *, const vector<Sdf_ParserHelpers::Value> &, size_t &) [Int = unsigned char]
TfIterator::Reference TfIterator<VtArray<unsigned char>, false>::operator*() [T = VtArray<unsigned char>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<unsigned char>, false>::operator++() [T = VtArray<unsigned char>, Reverse = false]
typename boost::enable_if<boost::is_integral<Int>>::type Sdf_ParserHelpers::MakeScalarValueImpl(Int *, const vector<Sdf_ParserHelpers::Value> &, size_t &) [Int = int]
typename boost::enable_if<boost::is_integral<Int>>::type Sdf_ParserHelpers::MakeScalarValueImpl(Int *, const vector<Sdf_ParserHelpers::Value> &, size_t &) [Int = unsigned int]
TfIterator::Reference TfIterator<VtArray<unsigned int>, false>::operator*() [T = VtArray<unsigned int>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<unsigned int>, false>::operator++() [T = VtArray<unsigned int>, Reverse = false]
typename boost::enable_if<boost::is_integral<Int>>::type Sdf_ParserHelpers::MakeScalarValueImpl(Int *, const vector<Sdf_ParserHelpers::Value> &, size_t &) [Int = long long]
TfIterator::Reference TfIterator<VtArray<long long>, false>::operator*() [T = VtArray<long long>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<long long>, false>::operator++() [T = VtArray<long long>, Reverse = false]
typename boost::enable_if<boost::is_integral<Int>>::type Sdf_ParserHelpers::MakeScalarValueImpl(Int *, const vector<Sdf_ParserHelpers::Value> &, size_t &) [Int = unsigned long long]
TfIterator::Reference TfIterator<VtArray<unsigned long long>, false>::operator*() [T = VtArray<unsigned long long>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<unsigned long long>, false>::operator++() [T = VtArray<unsigned long long>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfHalf *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<pxr_half::half>, false>::operator*() [T = VtArray<pxr_half::half>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<pxr_half::half>, false>::operator++() [T = VtArray<pxr_half::half>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(float *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<float>, false>::operator*() [T = VtArray<float>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<float>, false>::operator++() [T = VtArray<float>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(double *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<double>, false>::operator*() [T = VtArray<double>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<double>, false>::operator++() [T = VtArray<double>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(SdfTimeCode *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<SdfTimeCode>, false>::operator*() [T = VtArray<SdfTimeCode>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<SdfTimeCode>, false>::operator++() [T = VtArray<SdfTimeCode>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(std::string *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<std::string>, false>::operator*() [T = VtArray<std::string>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<std::string>, false>::operator++() [T = VtArray<std::string>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(TfToken *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<TfToken>, false>::operator*() [T = VtArray<TfToken>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<TfToken>, false>::operator++() [T = VtArray<TfToken>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(SdfAssetPath *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<SdfAssetPath>, false>::operator*() [T = VtArray<SdfAssetPath>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<SdfAssetPath>, false>::operator++() [T = VtArray<SdfAssetPath>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec2i *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec2i>, false>::operator*() [T = VtArray<GfVec2i>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec2i>, false>::operator++() [T = VtArray<GfVec2i>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec2h *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec2h>, false>::operator*() [T = VtArray<GfVec2h>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec2h>, false>::operator++() [T = VtArray<GfVec2h>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec2f *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec2f>, false>::operator*() [T = VtArray<GfVec2f>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec2f>, false>::operator++() [T = VtArray<GfVec2f>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec2d *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec2d>, false>::operator*() [T = VtArray<GfVec2d>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec2d>, false>::operator++() [T = VtArray<GfVec2d>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec3i *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec3i>, false>::operator*() [T = VtArray<GfVec3i>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec3i>, false>::operator++() [T = VtArray<GfVec3i>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec3h *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec3h>, false>::operator*() [T = VtArray<GfVec3h>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec3h>, false>::operator++() [T = VtArray<GfVec3h>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec3f *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec3f>, false>::operator*() [T = VtArray<GfVec3f>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec3f>, false>::operator++() [T = VtArray<GfVec3f>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec3d *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec3d>, false>::operator*() [T = VtArray<GfVec3d>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec3d>, false>::operator++() [T = VtArray<GfVec3d>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec4i *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec4i>, false>::operator*() [T = VtArray<GfVec4i>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec4i>, false>::operator++() [T = VtArray<GfVec4i>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec4h *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec4h>, false>::operator*() [T = VtArray<GfVec4h>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec4h>, false>::operator++() [T = VtArray<GfVec4h>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec4f *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec4f>, false>::operator*() [T = VtArray<GfVec4f>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec4f>, false>::operator++() [T = VtArray<GfVec4f>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfVec4d *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfVec4d>, false>::operator*() [T = VtArray<GfVec4d>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfVec4d>, false>::operator++() [T = VtArray<GfVec4d>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfQuath *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfQuath>, false>::operator*() [T = VtArray<GfQuath>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfQuath>, false>::operator++() [T = VtArray<GfQuath>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfQuatf *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfQuatf>, false>::operator*() [T = VtArray<GfQuatf>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfQuatf>, false>::operator++() [T = VtArray<GfQuatf>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfQuatd *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfQuatd>, false>::operator*() [T = VtArray<GfQuatd>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfQuatd>, false>::operator++() [T = VtArray<GfQuatd>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfMatrix2d *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfMatrix2d>, false>::operator*() [T = VtArray<GfMatrix2d>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfMatrix2d>, false>::operator++() [T = VtArray<GfMatrix2d>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfMatrix3d *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfMatrix3d>, false>::operator*() [T = VtArray<GfMatrix3d>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfMatrix3d>, false>::operator++() [T = VtArray<GfMatrix3d>, Reverse = false]
void Sdf_ParserHelpers::MakeScalarValueImpl(GfMatrix4d *, const vector<Sdf_ParserHelpers::Value> &, size_t &)
TfIterator::Reference TfIterator<VtArray<GfMatrix4d>, false>::operator*() [T = VtArray<GfMatrix4d>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<VtArray<GfMatrix4d>, false>::operator++() [T = VtArray<GfMatrix4d>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/layerRegistry.cpp
Sdf_LayerRegistry::layer_repository_path::result_type Sdf_LayerRegistry::layer_repository_path::operator()(const SdfLayerHandle &) const
Sdf_SplitIdentifier( layer->GetIdentifier(), &layerPath, &arguments)
Sdf_LayerRegistry::layer_real_path::result_type Sdf_LayerRegistry::layer_real_path::operator()(const SdfLayerHandle &) const
InsertOrUpdate
void Sdf_LayerRegistry::InsertOrUpdate(const SdfLayerHandle &)
Expired layer handle
Sdf_LayerRegistry::InsertOrUpdate(%s)
Cannot insert duplicate registry entry for %s layer %s over existing entry for %s layer %s
Sdf_LayerRegistry::Erase(%s) => %s
Success
Failed
SdfLayerHandle Sdf_LayerRegistry::Find(const std::string &, const std::string &) const
Sdf_LayerRegistry::Find('%s') => %s
FindByIdentifier
SdfLayerHandle Sdf_LayerRegistry::FindByIdentifier(const std::string &) const
Sdf_LayerRegistry::FindByIdentifier('%s') => %s
Found
Not Found
FindByRepositoryPath
SdfLayerHandle Sdf_LayerRegistry::FindByRepositoryPath(const std::string &) const
Sdf_LayerRegistry::FindByRepositoryPath('%s') => %s
FindByRealPath
SdfLayerHandle Sdf_LayerRegistry::FindByRealPath(const std::string &, const std::string &) const
Sdf_LayerRegistry::FindByRealPath('%s') => %s
SdfLayer('
', '
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/subLayerListEditor.cpp
_OnEdit
virtual void Sdf_SubLayerListEditor::_OnEdit(SdfListOpType, const std::vector<std::string> &, const std::vector<std::string> &) const
oldValues.size() == oldLayerOffsets.size()
Sublayer offsets do not match sublayer paths
virtual bool Sdf_VectorListEditor<SdfSubLayerTypePolicy, std::string>::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = SdfSubLayerTypePolicy, FieldStorageType = std::string]
void Sdf_VectorListEditor<SdfSubLayerTypePolicy, std::string>::_UpdateFieldData(const Sdf_VectorListEditor::value_vector_type &) [TypePolicy = SdfSubLayerTypePolicy, FieldStorageType = std::string]
virtual void Sdf_VectorListEditor<SdfSubLayerTypePolicy, std::string>::ApplyList(SdfListOpType, const Sdf_ListEditor<TP> &) [TypePolicy = SdfSubLayerTypePolicy, FieldStorageType = std::string]
virtual bool Sdf_ListEditor<SdfSubLayerTypePolicy>::_ValidateEdit(SdfListOpType, const Sdf_ListEditor::value_vector_type &, const Sdf_ListEditor::value_vector_type &) const [TypePolicy = SdfSubLayerTypePolicy]
cannot create a new layer with an empty identifier.
cannot create a new layer with arguments in the identifier
Sdf_ResolvePath
std::string Sdf_ResolvePath(const std::string &, ArAssetInfo *)
Sdf_ComputeFilePath
std::string Sdf_ComputeFilePath(const std::string &, ArAssetInfo *)
Sdf_ComputeAssetInfoFromIdentifier('%s', '%s', '%s')
Sdf_ComputeAssetInfoFromIdentifier:
  assetInfo->identifier = '%s'
  assetInfo->realPath = '%s'
  assetInfo->repoPath = '%s'
  assetInfo->assetName = '%s'
  assetInfo->version = '%s'
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/assetPathResolver.cpp
Sdf_ComputeAnonLayerIdentifier
std::string Sdf_ComputeAnonLayerIdentifier(const std::string &, const SdfLayer *)
Anon layer contains invalid character sequence: %s
Sdf_DecodeArguments
bool Sdf_DecodeArguments(const std::string &, SdfLayer::FileFormatArguments *)
argStringLength > _Tokens->ArgsDelimiter.size()
Invalid file format arguments: %s
anon:
:SDF_FORMAT_ARGS:
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/children.cpp
GetChild
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_AttributeChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_AttributeChildPolicy]
IsValid()
size_t Sdf_Children<Sdf_AttributeChildPolicy>::Find(const Sdf_Children::KeyType &) const [ChildPolicy = Sdf_AttributeChildPolicy]
FindKey
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_PrimChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_PrimChildPolicy]
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_PropertyChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_PropertyChildPolicy]
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_RelationshipChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_RelationshipChildPolicy]
size_t Sdf_Children<Sdf_RelationshipChildPolicy>::Find(const Sdf_Children::KeyType &) const [ChildPolicy = Sdf_RelationshipChildPolicy]
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_VariantChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_VariantChildPolicy]
typename Sdf_Children<ChildPolicy>::ValueType Sdf_Children<Sdf_VariantSetChildPolicy>::GetChild(size_t) const [ChildPolicy = Sdf_VariantSetChildPolicy]
typename Sdf_Children<ChildPolicy>::KeyType Sdf_Children<Sdf_VariantSetChildPolicy>::FindKey(const Sdf_Children::ValueType &) const [ChildPolicy = Sdf_VariantSetChildPolicy]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/propertySpec.cpp
Unrecognized subclass of SdfPropertySpec on <%s>
GetTypeName
SdfValueTypeName SdfPropertySpec::GetTypeName() const
TextureCoordinate
VtValue
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/types.cpp
SdfDefaultUnit
const TfEnum &SdfDefaultUnit(const TfEnum &)
Unsupported unit '%s'.
SdfGetNameForUnit
const std::string &SdfGetNameForUnit(const TfEnum &)
SdfGetUnitFromName
const TfEnum &SdfGetUnitFromName(const std::string &)
Unknown unit name '%s'.
SdfTimeSampleMap
SdfRelocatesMap
map<SdfPath, SdfPath>
SdfSpecTypeUnknown
SdfSpecTypeAttribute
SdfSpecTypeConnection
SdfSpecTypeExpression
SdfSpecTypeMapper
SdfSpecTypeMapperArg
SdfSpecTypePrim
SdfSpecTypePseudoRoot
SdfSpecTypeRelationship
SdfSpecTypeRelationshipTarget
SdfSpecTypeVariant
SdfSpecTypeVariantSet
SdfSpecifierDef
SdfSpecifierOver
Over
SdfSpecifierClass
Class
SdfPermissionPublic
Public
SdfPermissionPrivate
Private
SdfVariabilityVarying
Varying
SdfVariabilityUniform
Uniform
SdfLengthUnitMillimeter
SdfLengthUnitCentimeter
SdfLengthUnitDecimeter
SdfLengthUnitMeter
SdfLengthUnitKilometer
SdfLengthUnitInch
SdfLengthUnitFoot
SdfLengthUnitYard
SdfLengthUnitMile
SdfAngularUnitDegrees
SdfAngularUnitRadians
SdfDimensionlessUnitPercent
SdfDimensionlessUnitDefault
Length
Angular
Dimensionless
TfIterator<T, Reverse> &TfIterator<const std::map<SdfPath, SdfPath>, false>::operator++() [T = const std::map<SdfPath, SdfPath>, Reverse = false]
TfIterator::Iterator &TfIterator<const std::map<SdfPath, SdfPath>, false>::operator->() [T = const std::map<SdfPath, SdfPath>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::map<double, VtValue>, false>::operator++() [T = const std::map<double, VtValue>, Reverse = false]
TfIterator::Iterator &TfIterator<const std::map<double, VtValue>, false>::operator->() [T = const std::map<double, VtValue>, Reverse = false]
static void TfSingleton<Sdf_CleanupTracker>::SetInstanceConstructed(T &) [T = Sdf_CleanupTracker]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/childrenUtils.cpp
static bool Sdf_ChildrenUtils<Sdf_AttributeChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_AttributeChildPolicy]
Invalid object type
Failed to create spec of type '%s' at <%s>
Invalid name
static bool Sdf_ChildrenUtils<Sdf_PrimChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_PrimChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_RelationshipChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_RelationshipChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_VariantChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_VariantChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_VariantSetChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_VariantSetChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_RelationshipTargetChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_RelationshipTargetChildPolicy]
static bool Sdf_ChildrenUtils<Sdf_AttributeConnectionChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, bool) [ChildPolicy = Sdf_AttributeConnectionChildPolicy]
SdfPath::SdfPath(string)
SdfPath::SdfPath(const std::string &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/path.cpp
Ill-formed SdfPath <%s>: %s
StripAllVariantSelections
SdfPath SdfPath::StripAllVariantSelections() const
AppendPath
SdfPath SdfPath::AppendPath(const SdfPath &) const
Cannot append to invalid path
Cannot append invalid path to <%s>
Cannot append absolute path <%s> to another path <%s>.
Cannot append a path to another path that is not a root or a prim path.
Cannot append a property path to the absolute root path.
AppendChild
SdfPath SdfPath::AppendChild(const TfToken &) const
Cannot append child '%s' to path '%s'.
Invalid prim name '%s'
AppendProperty
SdfPath SdfPath::AppendProperty(const TfToken &) const
Can only append a property '%s' to a prim path (%s)
AppendVariantSelection
SdfPath SdfPath::AppendVariantSelection(const std::string &, const std::string &) const
Cannot append variant selection %s = %s to <%s>; can only append a variant selection to a prim or prim variant selection path.
AppendTarget
SdfPath SdfPath::AppendTarget(const SdfPath &) const
Can only append a target to a property path.
Target path cannot be invalid.
AppendRelationalAttribute
SdfPath SdfPath::AppendRelationalAttribute(const TfToken &) const
Invalid property name.
Can only append a relational attribute to a target path.
AppendMapper
SdfPath SdfPath::AppendMapper(const SdfPath &) const
Cannnot append mapper '%s' to non-property path <%s>.
Cannot append an empty mapper target path to <%s>
AppendMapperArg
SdfPath SdfPath::AppendMapperArg(const TfToken &) const
Invalid arg name.
Can only append a mapper arg to a mapper path.
AppendExpression
SdfPath SdfPath::AppendExpression() const
Can only append an expression to a property path.
AppendElementToken
SdfPath SdfPath::AppendElementToken(const TfToken &) const
Cannot append element '%s' to the EmptyPath.
Cannot append EmptyPath as a path element.
ReplacePrefix
SdfPath SdfPath::ReplacePrefix(const SdfPath &, const SdfPath &, bool) const
GetCommonPrefix
SdfPath SdfPath::GetCommonPrefix(const SdfPath &) const
GetCommonPrefix(): invalid path.
SdfPath SdfPath::ReplaceTargetPath(const SdfPath &) const
ReplaceTargetPath(): invalid new target path.
MakeAbsolutePath
SdfPath SdfPath::MakeAbsolutePath(const SdfPath &) const
MakeAbsolutePath(): anchor is the empty path.
MakeAbsolutePath() requires an absolute path as an argument.
MakeAbsolutePath() requires a prim path as an argument.
MakeRelativePath
SdfPath SdfPath::MakeRelativePath(const SdfPath &) const
MakeRelativePath(): anchor is the invalid path.
MakeRelativePath() requires an absolute path as an argument.
MakeRelativePath() requires a prim, prim variant selection, or absolute root path as an anchor (got '%s').
thisCount == anchorCount
vector<SdfPath>
_AppendNode
SdfPath _AppendNode(const SdfPath &, const Sdf_PathNode *)
Unexpected node type %i
../ModelKit/extern/usd/pxr/usd/sdf/pathNode.h
Compare
bool Sdf_PathNode::Compare(const Sdf_PathNode &) const [Comp = Sdf_PathNode::LessThan]
Unhandled Sdf_PathNode::NodeType enumerant
TfIterator<T, Reverse> &TfIterator<const std::vector<SdfPath>, false>::operator++() [T = const std::vector<SdfPath>, Reverse = false]
   infoKey: 
     oldValue: 
     newValue: 
    sublayer 
   oldPath: <
   didRename
   didChangeIdentifier
   didChangeResolvedPath
   didReplaceContent
   didReloadContent
   didReorderChildren
   didReorderProperties
   didChangePrimVariantSets
   didChangePrimInheritPaths
   didChangePrimSpecializes
   didChangePrimReferences
   didChangeAttributeTimeSamples
   didChangeAttributeConnection
   didChangeRelationshipTargets
   didAddTarget
   didRemoveTarget
   didAddInertPrim
   didAddNonInertPrim
   didRemoveInertPrim
   didRemoveNonInertPrim
   didAddPropertyWithOnlyRequiredFields
   didAddProperty
   didRemovePropertyWithOnlyRequiredFields
   didRemoveProperty
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/changeList.cpp
GetEntry
const SdfChangeList::Entry &SdfChangeList::GetEntry(const SdfPath &) const
!path.IsEmpty()
SdfChangeList::SubLayerAdded
SdfChangeList::SubLayerRemoved
SdfChangeList::SubLayerOffset
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/valueTypeRegistry.cpp
_AddType
bool (anonymous namespace)::Registry::_AddType(Sdf_ValueTypeImpl **, Sdf_ValueTypeImpl **, const TfToken &, const TfType &, const TfType &, const std::string &, const std::string &, const TfToken &, const SdfTupleDimensions &, const VtValue &, const VtValue &, TfEnum)
!name.IsEmpty()
Types must have names
!cppTypeName.empty() || !arrayCppTypeName.empty()
Type '%s' must have C++ names
!type.IsUnknown() || !arrayType.IsUnknown()
Type '%s' must have a C++ type
existing == Sdf_ValueTypePrivate::GetEmptyTypeName()
Type '%s' already exists
_AddCoreType
const Registry::CoreType *(anonymous namespace)::Registry::_AddCoreType(const TfToken &, const TfType &, const std::string &, const TfToken &, const SdfTupleDimensions &, const VtValue &, TfEnum)
!tfType.IsUnknown()
Internal error: unknown TfType for '%s'
tfType != TfType::Find<void>()
Internal error: TfType<void> for '%s'
coreType.type == tfType
Internal error: unexpected core type for '%s'
coreType.cppTypeName == cppTypeName
Mismatched C++ name for core type '%s'
coreType.role == role
Mismatched roles '%s' and '%s' for core type '%s'
coreType.dim == dimensions
Mismatched dimensions for core type '%s'
coreType.value == value
Mismatched default value for core type '%s'
coreType.unit == unit
Mismatched unit for core type '%s'
SdfSpecTypeRegistration
static SdfPrimSpecHandle SdfPrimSpec::New(const SdfLayerHandle &, const std::string &, SdfSpecifier, const std::string &)
static SdfPrimSpecHandle SdfPrimSpec::New(const SdfPrimSpecHandle &, const std::string &, SdfSpecifier, const std::string &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/sdf/primSpec.cpp
_New
static SdfPrimSpecHandle SdfPrimSpec::_New(const SdfPrimSpecHandle &, const TfToken &, SdfSpecifier, const TfToken &)
Cannot create prim '%s' because the parent prim is NULL
Cannot create prim '%s' because '%s' is not a valid name
_ValidateEdit
bool SdfPrimSpec::_ValidateEdit(const TfToken &) const
Cannot edit %s on a pseudo-root
RemoveNameChild
bool SdfPrimSpec::RemoveNameChild(const SdfPrimSpecHandle &)
Cannot remove child prim '%s' from parent '%s' because it is not a child of that prim
RemoveProperty
void SdfPrimSpec::RemoveProperty(const SdfPropertySpecHandle &)
Cannot remove property '%s' from prim '%s' because it does not belong to that prim
SetTypeName
void SdfPrimSpec::SetTypeName(const std::string &)
Cannot set empty type name on prim '%s'
variant sets
Sdf_UncheckedCreatePrimInLayer
bool Sdf_UncheckedCreatePrimInLayer(SdfLayer *, const SdfPath &)
Failed to create prim at path '%s' in layer @%s@
SdfPrimSpecHandleVector
map<string, SdfVariantSetSpecHandle>
_FindOrCreateVariantSpec
bool _FindOrCreateVariantSpec(SdfLayer *, const SdfPath &)
varSetSpec
Failed to create variant set for '%s' in @%s@
../ModelKit/extern/usd/pxr/usd/sdf/childrenProxy.h
bool SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>>::_Validate() const [_View = SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>]
Accessing expired %s
TfIterator::Iterator &TfIterator<const SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>>, false>::operator->() [T = const SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>>, false>::operator++() [T = const SdfChildrenProxy<SdfChildrenView<Sdf_VariantSetChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSetSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSetSpec>>>>, Reverse = false]
bool SdfListEditorProxy<SdfNameKeyPolicy>::_Validate() [_TypePolicy = SdfNameKeyPolicy]
TfIterator::Reference TfIterator<SdfChildrenView<Sdf_VariantChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSpec>>>, false>::operator*() [T = SdfChildrenView<Sdf_VariantChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSpec>>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<SdfChildrenView<Sdf_VariantChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSpec>>>, false>::operator++() [T = SdfChildrenView<Sdf_VariantChildPolicy, SdfChildrenViewTrivialPredicate<SdfHandle<SdfVariantSpec>>, SdfChildrenViewTrivialAdapter<SdfHandle<SdfVariantSpec>>>, Reverse = false]
Sdf_CanCreatePrimInLayer
bool Sdf_CanCreatePrimInLayer(SdfLayer *, const (anonymous namespace)::_AbsPathHelper &)
Cannot create prim at path '%s' because it is not a valid prim or prim variant selection path
Cannot create prim at path '%s' in null or expired layer
bool SdfListProxy<SdfNameTokenKeyPolicy>::_Validate() const [_TypePolicy = SdfNameTokenKeyPolicy]
../ModelKit/extern/usd/pxr/usd/sdf/mapEditProxy.h
List editor is expired
Permission denied
../ModelKit/extern/usd/pxr/usd/sdf/listOpListEditor.h
CopyEdits
virtual bool Sdf_ListOpListEditor<SdfNameKeyPolicy>::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = SdfNameKeyPolicy]
Could not copy from list editor of different type
_UpdateListOp
void Sdf_ListOpListEditor<SdfNameKeyPolicy>::_UpdateListOp(const Sdf_ListOpListEditor::ListOpType &, const SdfListOpType *) [TypePolicy = SdfNameKeyPolicy]
Invalid owner.
Layer is not editable.
ApplyList
virtual void Sdf_ListOpListEditor<SdfNameKeyPolicy>::ApplyList(SdfListOpType, const Sdf_ListEditor<TP> &) [TypePolicy = SdfNameKeyPolicy]
Cannot apply from list editor of different type
../ModelKit/extern/usd/pxr/usd/sdf/listEditor.h
virtual bool Sdf_ListEditor<SdfNameKeyPolicy>::_ValidateEdit(SdfListOpType, const Sdf_ListEditor::value_vector_type &, const Sdf_ListEditor::value_vector_type &) const [TypePolicy = SdfNameKeyPolicy]
Duplicate item '%s' not allowed for field '%s' on <%s>
No field definition for field '%s'
TfIterator::Iterator &TfIterator<std::vector<TfToken>, false>::operator->() [T = std::vector<TfToken>, Reverse = false]
DeformableMesh
morphChannelTargetCounts
morphChannelTargetWeights
morphDeformer:channelTargetCounts
morphDeformer:channelTargetWeights
morphDeformer:targetBlendShapes
morphDeformer:weights
morphTargetBlendShapes
morphWeights
pointIndices
skinBindTransforms
skinComponentsPerVertex
skinDeformer:bindTransforms
skinDeformer:componentsPerVertex
skinDeformer:jointIndices
skinDeformer:jointWeights
skinDeformer:meshBindTransform
skinDeformer:targetJoints
skinMeshBindTransform
skinTargetJoints
usdDeformers
AAPLBlendShape
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/sphere.cpp
_ComputeExtentForSphere
bool _ComputeExtentForSphere(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
sphereSchema
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/samplingUtils.cpp
UsdGeom_GetPositionsVelocitiesAndAccelerations
bool UsdGeom_GetPositionsVelocitiesAndAccelerations(const UsdAttribute &, const UsdAttribute &, const UsdAttribute &, UsdTimeCode, size_t, VtVec3fArray *, VtVec3fArray *, UsdTimeCode *, VtVec3fArray *, float *, const UsdPrim &)
%s -- no positions
%s -- found [%zu] positions, but expected [%zu]
%s -- velocity samples are not aligned with position samples
%s -- found [%zu] velocities, but expected [%zu]
%s -- acceleration samples are not aligned with velocity samples
%s -- found [%zu] accelerations, but expected [%zu]
UsdGeom_GetOrientationsAndAngularVelocities
bool UsdGeom_GetOrientationsAndAngularVelocities(const UsdAttribute &, const UsdAttribute &, UsdTimeCode, size_t, VtQuathArray *, VtVec3fArray *, UsdTimeCode *, const UsdPrim &)
%s -- found [%zu] orientations, but expected [%zu]
%s -- angular velocity samples are not aligned with orientation samples
%s -- found [%zu] angular velocities, but expected [%zu]
UsdGeom_GetScales
bool UsdGeom_GetScales(const UsdAttribute &, const UsdTimeCode, size_t, VtVec3fArray *, const UsdPrim &)
%s -- found [%zu] scales, but expected [%zu]
_GetAttrForTransforms
bool _GetAttrForTransforms(const UsdAttribute &, UsdTimeCode, UsdTimeCode *, double *, double *, bool *, T *) [T = VtArray<GfVec3f>]
bool _GetAttrForTransforms(const UsdAttribute &, UsdTimeCode, UsdTimeCode *, double *, double *, bool *, T *) [T = VtArray<GfQuath>]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/points.cpp
TfIterator::Reference TfIterator<const VtArray<float>, false>::operator*() [T = const VtArray<float>, Reverse = false]
TfIterator::Reference TfIterator<const VtArray<GfVec3f>, false>::operator*() [T = const VtArray<GfVec3f>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const VtArray<float>, false>::operator++() [T = const VtArray<float>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const VtArray<GfVec3f>, false>::operator++() [T = const VtArray<GfVec3f>, Reverse = false]
_ComputeExtentForPoints
bool _ComputeExtentForPoints(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
pointsSchema
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/bboxCache.cpp
ComputeWorldBound
GfBBox3d UsdGeomBBoxCache::ComputeWorldBound(const UsdPrim &)
ComputeUntransformedBound
GfBBox3d UsdGeomBBoxCache::ComputeUntransformedBound(const UsdPrim &)
%s -- no prototype indices
%s -- no prototypes
%s -- invalid prototype index: %d. Should be in [0, %zu)
%s -- could not compute instance transforms
_ShouldIncludePrim
bool UsdGeomBBoxCache::_ShouldIncludePrim(const UsdPrim &)
[BBox Cache] excluded, not IMAGEABLE type. prim: %s, primType: %s
[BBox Cache] excluded for VISIBILITY. prim: %s visibility at time %s: %s
[BBox Cache] hit: %s %s
[BBox Cache] miss: %s
_Resolve
bool UsdGeomBBoxCache::_Resolve(const UsdPrim &, UsdGeomBBoxCache::_PurposeToBBoxMap *)
[BBox Cache] MISSING extentsHint for UNLOADED model %s.
[BBox Cache] Found cached extentsHint for model %s.
[BBox Cache] WARNING: No valid extent authored for <%s>. Computing a fallback value.
[BBox Cache] WARNING: Unable to compute extent for <%s>.
_ResolvePrim
void UsdGeomBBoxCache::_ResolvePrim(UsdGeomBBoxCache::_BBoxTask *, const UsdGeomBBoxCache::_PrimContext &, const GfMatrix4d &)
entry != NULL
[BBox Cache] Dependent cache hit: %s %s
[BBox Cache] Dependent cache miss: %s
[BBox Cache] Extent for <%s> is of size %zu instead of 2.
[BBox Cache] Computed extent for <%s> is of size %zu instead of 2.
childEntry
Could not find prim <%s>in the bboxCache.
childEntry->isComplete
[BBox Cache] resolved value: %s %s (varying: %s)
[%s]%s
Resolve
void UsdGeomBBoxCache::_MasterBBoxResolver::Resolve(const std::vector<_PrimContext> &)
_GetOrCreateVisibilityQuery
const UsdAttributeQuery &_GetOrCreateVisibilityQuery(const UsdPrim &, UsdAttributeQuery *)
attr
Unable to get attribute '%s' on prim at path <%s>
Visibility
_GetOrCreateExtentQuery
const UsdAttributeQuery &_GetOrCreateExtentQuery(const UsdPrim &, UsdAttributeQuery *)
Extent
USDGEOM_BBOX
USDGEOM_XFORMCOMMONAPI
[BBox Cache] Computing purpose without cached parent for <%s>
[BBox Cache] Computing purpose for <%s> before purposeof parent <%s> is cached
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/cube.cpp
_ComputeExtentForCube
bool _ComputeExtentForCube(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
cubeSchema
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/cylinder.cpp
_ComputeExtentForCylinder
bool _ComputeExtentForCylinder(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
cylinderSchema
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/mesh.cpp
static UsdGeomMesh UsdGeomMesh::Define(const UsdStagePtr &, const SdfPath &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/primvarsAPI.cpp
GetPrimvars
std::vector<UsdGeomPrimvar> UsdGeomPrimvarsAPI::GetPrimvars() const
Called GetPrimvars on invalid prim: %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/boundableComputeExtent.cpp
UsdGeomRegisterComputeExtentFunction
void UsdGeomRegisterComputeExtentFunction(const TfType &, const UsdGeomComputeExtentFunction &)
Prim type '%s' must derive from UsdGeomBoundable
Invalid function registered for prim type '%s'
_ComputeExtentFromPlugins
bool _ComputeExtentFromPlugins(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
Invalid UsdGeomBoundable %s
GetComputeFunction
UsdGeomComputeExtentFunction (anonymous namespace)::_FunctionRegistry::GetComputeFunction(const UsdPrim &)
Could not find prim type '%s' for prim %s
implementsComputeExtent
_LoadPluginForType
bool (anonymous namespace)::_FunctionRegistry::_LoadPluginForType(const TfType &) const
Could not find plugin for '%s'
static void TfSingleton<(anonymous namespace)::_FunctionRegistry>::SetInstanceConstructed(T &) [T = (anonymous namespace)::_FunctionRegistry]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, (anonymous namespace)::_FunctionRegistry>::operator->() const [PtrTemplate = TfWeakPtr, Type = (anonymous namespace)::_FunctionRegistry]
virtual TfType TfNotice::_StandardDeliverer<TfNotice::_Deliverer<TfWeakPtr<(anonymous namespace)::_FunctionRegistry>, TfAnyWeakPtr, void ((anonymous namespace)::_FunctionRegistry::*)(const PlugNotice::DidRegisterPlugins &), PlugNotice::DidRegisterPlugins>>::GetNoticeType() const [Derived = TfNotice::_Deliverer<TfWeakPtr<(anonymous namespace)::_FunctionRegistry>, TfAnyWeakPtr, void ((anonymous namespace)::_FunctionRegistry::*)(const PlugNotice::DidRegisterPlugins &), PlugNotice::DidRegisterPlugins>]
RegisterComputeFunction
void (anonymous namespace)::_FunctionRegistry::RegisterComputeFunction(const TfType &, const UsdGeomComputeExtentFunction &)
UsdGeomComputeExtentFunction already registered for prim type '%s'
GetLocalToWorldTransform
GfMatrix4d UsdGeomXformCache::GetLocalToWorldTransform(const UsdPrim &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/xformCache.cpp
entry
GfMatrix4d UsdGeomXformCache::GetLocalTransformation(const UsdPrim &, bool *)
'resetsXformStack' pointer is null.
ComputeRelativeTransform
GfMatrix4d UsdGeomXformCache::ComputeRelativeTransform(const UsdPrim &, const UsdPrim &, bool *)
'resetXformStack' pointer is null.
TfIterator<T, Reverse> &TfIterator<TfHashMap<UsdPrim, UsdGeomXformCache::_Entry, boost::hash<UsdPrim>>, false>::operator++() [T = TfHashMap<UsdPrim, UsdGeomXformCache::_Entry, boost::hash<UsdPrim>>, Reverse = false]
TfIterator::Iterator &TfIterator<TfHashMap<UsdPrim, UsdGeomXformCache::_Entry, boost::hash<UsdPrim>>, false>::operator->() [T = TfHashMap<UsdPrim, UsdGeomXformCache::_Entry, boost::hash<UsdPrim>>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/pointInstancer.cpp
PointInstancer
USDGEOM_POINTINSTANCER_NEW_APPLYOPS
Set to true to use SdfListOp::ApplyOperations() instead of ComposeOperations().
_GetPrototypePathsForInstanceTransforms
bool UsdGeomPointInstancer::_GetPrototypePathsForInstanceTransforms(const VtIntArray &, SdfPathVector *) const
_ComputePointInstancerAttributesPreamble
bool UsdGeomPointInstancer::_ComputePointInstancerAttributesPreamble(const UsdTimeCode, const UsdGeomPointInstancer::ProtoXformInclusion, const UsdGeomPointInstancer::MaskApplication, VtIntArray *, SdfPathVector *, std::vector<bool> *) const
%s -- found mask of size [%zu], but expected size [%zu]
ComputeInstanceTransformsAtTime
bool UsdGeomPointInstancer::ComputeInstanceTransformsAtTime(VtArray<GfMatrix4d> *, const UsdTimeCode, const UsdTimeCode, const UsdGeomPointInstancer::ProtoXformInclusion, const UsdGeomPointInstancer::MaskApplication) const
ComputeInstanceTransformsAtTimes
bool UsdGeomPointInstancer::ComputeInstanceTransformsAtTimes(std::vector<VtArray<GfMatrix4d>> *, const std::vector<UsdTimeCode> &, const UsdTimeCode, const UsdGeomPointInstancer::ProtoXformInclusion, const UsdGeomPointInstancer::MaskApplication) const
static bool UsdGeomPointInstancer::ComputeInstanceTransformsAtTime(VtArray<GfMatrix4d> *, UsdStageWeakPtr &, UsdTimeCode, const VtIntArray &, const VtVec3fArray &, const VtVec3fArray &, UsdTimeCode, const VtVec3fArray &, const VtVec3fArray &, const VtQuathArray &, const VtVec3fArray &, UsdTimeCode, const SdfPathVector &, const std::vector<bool> &, float)
UsdGeomPointInstancer::ComputeInstanceTransformsAtTime (Parallel)
_ComputeExtentAtTimePreamble
bool UsdGeomPointInstancer::_ComputeExtentAtTimePreamble(UsdTimeCode, VtIntArray *, std::vector<bool> *, UsdRelationship *, SdfPathVector *) const
%s -- mask.size() [%zu] != protoIndices.size() [%zu]
_ComputeExtentFromTransforms
bool UsdGeomPointInstancer::_ComputeExtentFromTransforms(VtVec3fArray *, const VtIntArray &, const std::vector<bool> &, const UsdRelationship &, const SdfPathVector &, const VtMatrix4dArray &, UsdTimeCode, const GfMatrix4d *) const
Number of prototypes (%zu) is >= numberof instances (%zu). May be inefficient.
_ComputeExtentAtTime
bool UsdGeomPointInstancer::_ComputeExtentAtTime(VtVec3fArray *, const UsdTimeCode, const UsdTimeCode, const GfMatrix4d *) const
%s -- null container passed to ComputeExtentAtTime()
UsdGeomPointInstancer::IncludeProtoXform
UsdGeomPointInstancer::ExcludeProtoXform
UsdGeomPointInstancer::ApplyMask
UsdGeomPointInstancer::IgnoreMask
_ComputeExtentForPointInstancer
bool _ComputeExtentForPointInstancer(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
pointInstancerSchema
void VtArray<long long>::push_back(const VtArray::ElementType &) [T = long long]
../ModelKit/extern/usd/pxr/usd/usdGeom/pointInstancer.h
ApplyMaskToArray
static bool UsdGeomPointInstancer::ApplyMaskToArray(const std::vector<bool> &, VtArray<T> *, const int) [T = GfMatrix4d]
NULL dataArray.
Input mask's size (%zu) is not compatible with the input dataArray (%zu) and elementSize (%d).
TfIterator<T, Reverse> &TfIterator<VtArray<int>, false>::operator++() [T = VtArray<int>, Reverse = false]
TfIterator::Reference TfIterator<VtArray<int>, false>::operator*() [T = VtArray<int>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/capsule.cpp
_ComputeExtentForCapsule
bool _ComputeExtentForCapsule(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
capsuleSchema
translate
rotateX
rotateY
rotateZ
rotateXYZ
rotateXZY
rotateYXZ
rotateYZX
rotateZXY
rotateZYX
orient
!resetXformStack!
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/xformOp.cpp
UsdGeomXformOp
UsdGeomXformOp::UsdGeomXformOp(const UsdAttribute &, bool)
UsdGeomXformOp created with invalid UsdAttribute.
Invalid xform op: <%s>.
_Init
void UsdGeomXformOp::_Init()
Invalid xform opType token '%s'.
GetPrecisionFromValueTypeName
static UsdGeomXformOp::Precision UsdGeomXformOp::GetPrecisionFromValueTypeName(const SdfValueTypeName &)
Invalid typeName '%s' specified.
GetOpTypeEnum
static UsdGeomXformOp::Type UsdGeomXformOp::GetOpTypeEnum(const TfToken &)
GetValueTypeName
static const SdfValueTypeName &UsdGeomXformOp::GetValueTypeName(const UsdGeomXformOp::Type, const UsdGeomXformOp::Precision)
Matrix transformations can only be encoded in double precision. Overriding precision to double.
UsdGeomXformOp::UsdGeomXformOp(const UsdPrim &, const UsdGeomXformOp::Type, const UsdGeomXformOp::Precision, const TfToken &, bool)
Invalid xform-op: incompatible combination of opType (%s) and precision (%s).
!attrName.IsEmpty()
GetOpTransform
static GfMatrix4d UsdGeomXformOp::GetOpTransform(const UsdGeomXformOp::Type, const VtValue &, bool)
Invalid combination of opType (%s) and opVal (%s). Returning identity matrix.
Cannot invert singular transform op with value %s.
UsdGeomXformOp::TypeTranslate
UsdGeomXformOp::TypeScale
UsdGeomXformOp::TypeRotateX
UsdGeomXformOp::TypeRotateY
UsdGeomXformOp::TypeRotateZ
UsdGeomXformOp::TypeRotateXYZ
UsdGeomXformOp::TypeRotateXZY
UsdGeomXformOp::TypeRotateYXZ
UsdGeomXformOp::TypeRotateYZX
UsdGeomXformOp::TypeRotateZXY
UsdGeomXformOp::TypeRotateZYX
UsdGeomXformOp::TypeOrient
UsdGeomXformOp::TypeTransform
UsdGeomXformOp::PrecisionDouble
Double
UsdGeomXformOp::PrecisionFloat
Float
UsdGeomXformOp::PrecisionHalf
Half
xformOp:
!invert!xformOp:
!invert!
xformOp:rotateX
xformOp:rotateY
xformOp:rotateZ
xformOp:orient
usdGeom
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/cone.cpp
Define
UsdGeomBoundable
_ComputeExtentForCone
bool _ComputeExtentForCone(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
coneSchema
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/xformable.cpp
AddXformOp
UsdGeomXformOp UsdGeomXformable::AddXformOp(const UsdGeomXformOp::Type, const UsdGeomXformOp::Precision, const TfToken &, bool) const
The xformOp '%s' already exists in xformOpOrder [%s].
XformOp <%s> has typeName '%s' which does not match the requested precision '%s'. Proceeding to use existing typeName / precision.
Unable to add xform op of type %s and precision %s on prim at path <%s>. opSuffix=%s, isInverseOp=%d
_GetOrderedXformOps
vector<UsdGeomXformOp> UsdGeomXformable::_GetOrderedXformOps(bool *, bool) const
resetsXformStack is NULL.
Unable to get attribute associated with the xformOp '%s', on the prim at path <%s>. Skipping xformOp in the computation of the local transformation at prim.
GetLocalTransformation
static bool UsdGeomXformable::GetLocalTransformation(GfMatrix4d *, const vector<UsdGeomXformOp> &, const UsdTimeCode)
'transform' pointer is NULL.
void VtArray<TfToken>::push_back(const VtArray::ElementType &) [T = TfToken]
boost::bad_get: failed value get using boost::get
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/subset.cpp
static UsdGeomSubset UsdGeomSubset::Define(const UsdStagePtr &, const SdfPath &)
subsetFamily
familyType
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/imageable.cpp
USD_GEOM_IMAGEABLE_DEPRECATE_PRIMVARS_API
Whether UsdGeomImageable's primvars API should issue deprecation warnings
_IssueAPIWarningIfDeprecationFlagEnabled
void _IssueAPIWarningIfDeprecationFlagEnabled()
API deprecation warning: UsdGeomImageable's primvars API will be removed in the future.  Use UsdGeomPrimvarsAPI instead.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/metrics.cpp
UsdGeomGetStageUpAxis
TfToken UsdGeomGetStageUpAxis(const UsdStageWeakPtr &)
Invalid UsdStage
UsdGeomSetStageUpAxis
bool UsdGeomSetStageUpAxis(const UsdStageWeakPtr &, const TfToken &)
UsdStage upAxis can only be set to "Y" or "Z", not attempted "%s" on stage %s.
UsdGeomGetStageMetersPerUnit
double UsdGeomGetStageMetersPerUnit(const UsdStageWeakPtr &)
_fallbackUpAxis_Tf_StaticDataFactoryImpl
void _fallbackUpAxis_Tf_StaticDataFactoryImpl(TfToken *)
%s[%s] was not a dictionary in plugInfo.json file.
%s[%s][%s] was not a string.
%s[%s][%s] had value "%s", but only "Y" and "Z" are allowed.
Plugins %s and %s provided different fallback values for %s.  Ignoring all plugins and using schema fallback of "%s"
TfIterator::Reference TfIterator<std::vector<TfWeakPtr<PlugPlugin>>, false>::operator*() [T = std::vector<TfWeakPtr<PlugPlugin>>, Reverse = false]
UsdGeomMetrics
TfIterator<T, Reverse> &TfIterator<std::vector<TfWeakPtr<PlugPlugin>>, false>::operator++() [T = std::vector<TfWeakPtr<PlugPlugin>>, Reverse = false]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/curves.cpp
_ComputeExtentForCurves
bool _ComputeExtentForCurves(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
curves
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/pointBased.cpp
%s -- all sample times in times and baseTime must either all be numeric or all be default
_ComputeExtentForPointBased
bool _ComputeExtentForPointBased(const UsdGeomBoundable &, const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)
pointBased
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdGeom/primvar.cpp
_MakeNamespaced
static TfToken UsdGeomPrimvar::_MakeNamespaced(const TfToken &, bool)
%s is not a valid name for a Primvar, because it contains the reserved name "indices"
SetInterpolation
bool UsdGeomPrimvar::SetInterpolation(const TfToken &)
Attempt to set invalid primvar interpolation "%s" for attribute %s
SetElementSize
bool UsdGeomPrimvar::SetElementSize(int)
Attempt to set elementSize to %d for attribute %s (must be a positive, non-zero value)
GetDeclarationInfo
void UsdGeomPrimvar::GetDeclarationInfo(TfToken *, SdfValueTypeName *, TfToken *, int *) const
name && typeName && interpolation && elementSize
SetIndices
bool UsdGeomPrimvar::SetIndices(const VtIntArray &, UsdTimeCode) const
Setting indices on non-array valued primvar of type '%s'.
UsdGeomPrimvar
UsdGeomPrimvar::UsdGeomPrimvar(const UsdPrim &, const TfToken &, const SdfValueTypeName &)
:idFrom
:indices
void VtArray<std::string>::push_back(const VtArray::ElementType &) [T = std::string]
NurbsPatch
accelerations
angularVelocities
axis
basis
bezier
boundaries
bounds
bspline
cards
catmullClark
catmullRom
clippingPlanes
clippingRange
closed
cornersOnly
cornersPlus1
cornersPlus2
cross
cubic
curveVertexCounts
doubleSided
edgeAndCorner
edgeOnly
elementSize
elementType
extent
extentsHint
faceVaryingLinearInterpolation
faceVertexIndices
familyName
focalLength
focusDistance
fromTexture
fStop
guide
height
hermite
holeIndices
horizontalAperture
horizontalApertureOffset
inactiveIds
inherited
interpolateBoundary
interpolation
invisible
invisibleIds
knots
left
leftHanded
linear
metersPerUnit
model:applyDrawMode
model:cardGeometry
model:cardTextureXNeg
model:cardTextureXPos
model:cardTextureYNeg
model:cardTextureYPos
model:cardTextureZNeg
model:cardTextureZPos
model:drawMode
model:drawModeColor
mono
motion:velocityScale
nonOverlapping
nonperiodic
open
order
orientations
origin
partition
periodic
pinned
pivot
pointWeights
positions
power
projection
protoIndices
prototypes
proxy
proxyPrim
purpose
radius
ranges
render
right
rightHanded
scales
shutter:close
shutter:open
smooth
stereoRole
subdivisionScheme
triangleSubdivisionRule
trimCurve:counts
trimCurve:knots
trimCurve:orders
trimCurve:points
trimCurve:ranges
trimCurve:vertexCounts
uForm
uKnots
unauthoredValuesIndex
unrestricted
uOrder
upAxis
uRange
uVertexCount
velocities
verticalAperture
verticalApertureOffset
vForm
vKnots
vOrder
vRange
vVertexCount
widths
wrap
xformOpOrder
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdShade/material.cpp
Material
static UsdShadeMaterial UsdShadeMaterial::Define(const UsdStagePtr &, const SdfPath &)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdShade/connectableAPI.cpp
UsdShadeConnectableAPI::GetConnectedSource
GetConnectedSource
static bool UsdShadeConnectableAPI::GetConnectedSource(const UsdAttribute &, UsdShadeConnectableAPI *, TfToken *, UsdShadeAttributeType *)
GetConnectedSource() requires non-NULL output-parameters.
TfIterator<T, Reverse> &TfIterator<std::vector<UsdAttribute>, false>::operator++() [T = std::vector<UsdAttribute>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<UsdAttribute>, false>::operator*() [T = std::vector<UsdAttribute>, Reverse = false]
usdShade
info
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdShade/materialBindingAPI.cpp
ComputeBoundMaterial
UsdShadeMaterial UsdShadeMaterialBindingAPI::ComputeBoundMaterial(UsdShadeMaterialBindingAPI::BindingsCache *, UsdShadeMaterialBindingAPI::CollectionQueryCache *, const TfToken &, UsdRelationship *) const
Invalid prim (%s)
UsdShadeMaterialBindingAPI::ComputeBoundMaterial (BindingsCache)
UsdShadeMaterialBindingAPI::ComputeBoundMaterial (IsInBoundCollection)
UsdShadeMaterialBindingAPI::ComputeBoundMaterial (CollectionQuery)
SetMaterialBindSubsetsFamilyType
bool UsdShadeMaterialBindingAPI::SetMaterialBindSubsetsFamilyType(const TfToken &)
Attempted to set invalid familyType 'unrestricted' forthe "materialBind" family of subsets on <%s>.
material:binding:full
material:binding:preview
material:binding:collection:full
material:binding:collection:preview
bindMaterialAs
coordSys:
fallbackStrength
full
info:id
info:implementationSource
inputs:
interfaceOnly
material:binding
material:binding:collection
materialVariant
outputs:
outputs:displacement
outputs:surface
outputs:volume
preview
sdrMetadata
sourceAsset
sourceCode
strongerThanDescendants
subIdentifier
volume
weakerThanDescendants
NodeGraph
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/usd/usdUtils/dependencies.cpp
UsdUtilsCreateNewARKitUsdzPackage
bool UsdUtilsCreateNewARKitUsdzPackage(const SdfAssetPath &, const std::string &, const std::string &)
The given asset '%s' contains one or more composition arcs referencing external USD files. Flattening it to a single .usdc file before packaging. This will result in loss of features such as variantSets and all asset references to be absolutized.
.usdc
Flattening asset @%s@ located at '%s' to temporary layer at path '%s'.
Failed to flatten and export the USD stage '%s'.
Failed to create a .usdz package from temporary, flattened layer '%s'.
_FileAnalyzer
(anonymous namespace)::_FileAnalyzer::_FileAnalyzer(const std::string &, (anonymous namespace)::_ReferenceTypesToInclude, const (anonymous namespace)::_FileAnalyzer::RemapAssetPathFunc &, const (anonymous namespace)::_FileAnalyzer::ProcessAssetPathFunc &)
Unable to open layer at path @%s@.
_AnalyzeDependencies
void (anonymous namespace)::_FileAnalyzer::_AnalyzeDependencies()
_ProcessMetadata
void (anonymous namespace)::_FileAnalyzer::_ProcessMetadata(const SdfPrimSpecHandle &)
Clips directory '%s' is not a valid directory on the filesystem.
const T &VtDictionaryGet(const VtDictionary &, const std::string &) [T = std::string]
Creating USDZ package at '%s' containing asset @%s@.
_CreateNewUsdzPackage
bool _CreateNewUsdzPackage(const SdfAssetPath &, const std::string &, const std::string &, const std::string &, const std::vector<std::string> &)
A file already exists at path "%s" in the package. Skipping export of layer @%s@.
.. adding layer @%s@ to package at path '%s'.
Failed to add temporary layer at '%s' to the package at path '%s'.
.. adding file '%s' to package at path '%s'.
A file already exists at path "%s" in the package. Skipping copy of file "%s".
Failed to add file '%s' to the package at path '%s'.
_AssetLocalizer
(anonymous namespace)::_AssetLocalizer::_AssetLocalizer(const SdfAssetPath &, const std::string &, const std::string &, const std::string &, const std::vector<std::string> &)
Failed to resolve reference @%s@ with computed asset path @%s@ found in layer @%s@.
Failed to fetch-to-local resolved path for asset @%s@ : '%s'. Skipping dependency.
USDUTILS_CREATE_USDZ_PACKAGE
VtArray::value_type *VtArray<GfRange1d>::_AllocateNew(size_t) [T = GfRange1d]
void VtArray<GfRange1d>::_DetachIfNotUnique() [T = GfRange1d]
VtArray::value_type *VtArray<GfRange1f>::_AllocateNew(size_t) [T = GfRange1f]
void VtArray<GfRange1f>::_DetachIfNotUnique() [T = GfRange1f]
VtArray::value_type *VtArray<GfRange2d>::_AllocateNew(size_t) [T = GfRange2d]
void VtArray<GfRange2d>::_DetachIfNotUnique() [T = GfRange2d]
VtArray::value_type *VtArray<GfRange2f>::_AllocateNew(size_t) [T = GfRange2f]
void VtArray<GfRange2f>::_DetachIfNotUnique() [T = GfRange2f]
VtArray::value_type *VtArray<GfRange3d>::_AllocateNew(size_t) [T = GfRange3d]
void VtArray<GfRange3d>::_DetachIfNotUnique() [T = GfRange3d]
VtArray::value_type *VtArray<GfRange3f>::_AllocateNew(size_t) [T = GfRange3f]
void VtArray<GfRange3f>::_DetachIfNotUnique() [T = GfRange3f]
VT_LOG_STACK_ON_ARRAY_DETACH_COPY
Log a stack trace when a VtArray is copied to detach it from shared storage, to help track down unintended copies.
Detach/copy VtArray (%s)
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/vt/hash.cpp
_IssueUnimplementedHashError
void Vt_HashDetail::_IssueUnimplementedHashError(const std::type_info &)
Invoked VtHashValue on an object of type <%s>, which is not hashable by boost::hash<>() or TfHash().  Consider providing an overload of hash_value().
VtDictionary::operator[]
VtDictionary::insert
VtDictionary::_CreateDictIfNeeded
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/vt/dictionary.cpp
VtDictionaryOverRecursive
void VtDictionaryOverRecursive(VtDictionary *, const VtDictionary &, bool)
VtDictionaryOverRecursive: NULL dictionary pointer.
GetUnderlyingIterator
UnderlyingIterator VtDictionary::Iterator<std::map<std::string, VtValue, std::less<>> *, std::__map_iterator<std::__tree_iterator<std::__value_type<std::string, VtValue>, std::__tree_node<std::__value_type<std::string, VtValue>, void *> *, long>>>::GetUnderlyingIterator(UnderlyingMapPtr) const [UnderlyingMapPtr = std::map<std::string, VtValue, std::less<>> *, UnderlyingIterator = std::__map_iterator<std::__tree_iterator<std::__value_type<std::string, VtValue>, std::__tree_node<std::__value_type<std::string, VtValue>, void *> *, long>>]
!_underlyingMap || _underlyingMap == map
TfIterator<T, Reverse> &TfIterator<VtDictionary, false>::operator++() [T = VtDictionary, Reverse = false]
TfIterator::Iterator &TfIterator<VtDictionary, false>::operator->() [T = VtDictionary, Reverse = false]
TfIterator::Reference TfIterator<const VtDictionary, false>::operator*() [T = const VtDictionary, Reverse = false]
const T &VtDictionaryGet(const VtDictionary &, const std::string &) [T = VtDictionary]
static void TfSingleton<Vt_CastRegistry>::SetInstanceConstructed(T &) [T = Vt_CastRegistry]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/vt/value.cpp
GetType
TfType VtValue::GetType() const
Returning unknown type for VtValue with unregistered C++ type %s
_FailGet
const void *VtValue::_FailGet(Vt_DefaultValueHolder (*)(), const std::type_info &) const
Attempted to get value of type '%s' from empty VtValue.
Attempted to get value of type '%s' from VtValue holding '%s'
bad numeric conversion: negative overflow
bad numeric conversion: positive overflow
Register
void Vt_CastRegistry::Register(const std::type_info &, const std::type_info &, VtValue (*)(const VtValue &))
VtValue cast already registered from '%s' to '%s'.  New cast will be ignored.
VtValue _FindOrCreateDefaultValue
_FindOrCreateDefaultValue
const void *_FindOrCreateDefaultValue(const std::type_info &, Vt_DefaultValueHolder (*)())
TfSafeTypeCompare(newValue.GetType(), type)
TfIterator<T, Reverse> &TfIterator<const std::vector<VtValue>, false>::operator++() [T = const std::vector<VtValue>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<VtValue>, false>::operator*() [T = const std::vector<VtValue>, Reverse = false]
PXR_WORK_THREAD_LIMIT
Limits the number of threads the application may spawn. 0 (default) allows for maximum concurrency as determined by the number of physical cores, or the process's affinity mask, whichever is smaller. Note that the environment variable (if set to a non-zero value) will override any value passed to Work thread-limiting API calls.
work
WORK_SYNCHRONIZE_ASYNC_DESTROY_CALLS
Make WorkSwapDestroyAsync and WorkMoveDestroyAsync wait for destruction completion rather than destroying asynchronously
PluginDependencies
PlugPlugin::_Load
Load %s
_Load
bool PlugPlugin::_Load()
Loading plugin '%s'
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/plug/plugin.cpp
Loading plugin '%s'.
_LoadWithDependents
bool PlugPlugin::_LoadWithDependents(PlugPlugin::_SeenPlugins *)
Load failed because of cyclic dependency for '%s'
Load failed: unknown base class '%s'
Load failed: dependency list has wrong type
Load failed: unknown dependent class '%s'
Load failed: unknown dependent plugin '%s'
Load failed: unable to load dependent plugin '%s'
Loaded plugin '%s' in a secondary thread.
Types
_DefineType
static void PlugPlugin::_DefineType(TfType)
unknown plugin type %s
alias
_DeclareAliases
void PlugPlugin::_DeclareAliases(TfType, const JsObject &)
Expected string for alias name, but found %s
bases
_DeclareType
void PlugPlugin::_DeclareType(const std::string &, const JsObject &)
Invalid bases for type %s specified by plugin %s. Expected list of strings.
The metadata for plugin '%s' defined in %s declares type '%s' with base type '%s', but the type has already been declared with a different set of bases that does not include that type.  The existing bases are: (%s).  Please fix the plugin.
Plugin '%s' defined in %s has metadata claiming that it provides type %s, but this was previously provided by plugin '%s' defined in %s.
_NewPlugin
static pair<PlugPluginPtr, bool> PlugPlugin::_NewPlugin(const Plug_RegistrationMetadata &, PlugPlugin::_Type, const std::string &, PluginMap *) [PluginMap = TfHashMap<std::string, TfRefPtr<PlugPlugin>, TfHash>]
it->second
Already registered %s plugin '%s' - not registering '%s'.
Registering %s plugin '%s' at '%s'.
shared library
resource
<invalid enum value>
TfIterator<T, Reverse> &TfIterator<const std::vector<std::string>, false>::operator++() [T = const std::vector<std::string>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<std::string>, false>::operator*() [T = const std::vector<std::string>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<TfHashMap<std::string, TfRefPtr<PlugPlugin>, TfHash>, false>::operator++() [T = TfHashMap<std::string, TfRefPtr<PlugPlugin>, TfHash>, Reverse = false]
TfIterator::Iterator &TfIterator<TfHashMap<std::string, TfRefPtr<PlugPlugin>, TfHash>, false>::operator->() [T = TfHashMap<std::string, TfRefPtr<PlugPlugin>, TfHash>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<const std::map<std::string, JsValue>, false>::operator++() [T = const std::map<std::string, JsValue>, Reverse = false]
TfIterator::Iterator &TfIterator<const std::map<std::string, JsValue>, false>::operator->() [T = const std::map<std::string, JsValue>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<TfType>, false>::operator++() [T = std::vector<TfType>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<TfType>, false>::operator*() [T = std::vector<TfType>, Reverse = false]
TfIterator::Iterator &TfIterator<std::vector<TfType>, false>::operator->() [T = std::vector<TfType>, Reverse = false]
static void TfSingleton<PlugRegistry>::SetInstanceConstructed(T &) [T = PlugRegistry]
Registering plugins
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/plug/registry.cpp
_RegisterPlugins
PlugPluginPtrVector PlugRegistry::_RegisterPlugins(const std::vector<std::string> &)
Plug
PlugRegistry::RegisterPlugins
GetPluginForType
PlugPluginPtr PlugRegistry::GetPluginForType(TfType) const
Unknown base type
plug
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, PlugRegistry>::operator->() const [PtrTemplate = TfWeakPtr, Type = PlugRegistry]
_RegisterPlugin
void PlugRegistry::_RegisterPlugin(const Plug_RegistrationMetadata &, ConcurrentVector *) [ConcurrentVector = tbb::concurrent_vector<TfWeakPtr<PlugPlugin>>]
Tried to register a plugin of unknown type (maybe from %s)
PXR_DISABLE_STANDARD_PLUG_SEARCH_PATH
PLUG_LOAD
PLUG_REGISTRATION
PLUG_LOAD_IN_SECONDARY_THREAD
PLUG_INFO_SEARCH
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/plug/info.cpp
Plug_RegistrationMetadata
Plug_RegistrationMetadata::Plug_RegistrationMetadata(const JsValue &, const std::string &, const std::string &)
Plugin info %s doesn't hold an object; plugin ignored
doesn't hold a string
library
doesn't hold a valid type
is missing
doesn't hold a valid name
doesn't hold a valid path
doesn't hold an object
Plugin info %s: ignoring unknown key '%s'
Plugin info %s key '%s' %s; plugin ignored
Will check plugin info paths
Did check plugin info paths
plugInfo.json
Includes
Plugins
Type
Name
Info
Root
LibraryPath
ResourcePath
_ReadPlugInfoWithWildcards
void (anonymous namespace)::_ReadPlugInfoWithWildcards((anonymous namespace)::_ReadContext *, const std::string &)
Plugin info file %s is not absolute
Globbing plugin info path %s
%s/%s%s
Failed to compile regex for %s: %s (%s)
Recursively walking plugin info path %s
Ignore already read plugin info %s
Will read plugin info %s
Did read plugin info %s
_ReadPlugInfo
bool (anonymous namespace)::_ReadPlugInfo((anonymous namespace)::_ReadContext *, std::string)
Plugin info file %s key '%s' doesn't hold an array
Plugin info file %s key '%s' index %zd doesn't hold a string
Plugin info file %s has unknown key %s
Failed to open plugin info %s
_ReadPlugInfoObject
bool (anonymous namespace)::_ReadPlugInfoObject(const std::string &, JsObject *)
Plugin info file %s couldn't be read (line %d, col %d): %s
Plugin info file %s did not contain a JSON object
file %s %s[%zd]
[^/]*
can't determine working directory
ArchGetCwd
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/arch/systemInfo.cpp
empty pattern
unknown reason
%s/%s.%d%s
%s/%s.%d.%d%s
%s/%s.XXXXXX
TMPDIR
failed call to posix_madvise(%zd, %zd)ret=%d, errno=%d '%s'
bad arguments to mmap()
system limit on mapped regions exceeded, or out of memory
 [with 
libArch
==============================================================
 A stack trace has been requested by 
 because: 
FAIL: Unable to fork() crash handler: errno=
FAIL: Unable to exec crash handler 
: errno=
FAIL: Crash handler wait failed: errno=
FAIL: Crash handler failed to exec
FAIL: Crash handler died: signal=
FAIL: Crash handler unexpected wait status=
FAIL: Crash handler timed out
ARCH_LOGSESSION
$pid
$time
$prog
$stack
$cmd
ARCH_POSTMORTEM
$log
0123456789
 ArchWarn: %s
 Function: %s
     File: %s
     Line: %zu
attempted member lookup on NULL %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/scopeDescription.cpp
void (anonymous namespace)::_StackRegistry::Remove((anonymous namespace)::_Stack *)
it != _stacks.end()
_Pop
void TfScopeDescription::_Pop() const
stack.head == this
Thread 
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, TfNotice::_DelivererBase>::operator->() const [PtrTemplate = TfWeakPtr, Type = TfNotice::_DelivererBase]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/safeOutputFile.cpp
ReleaseUpdatedFile
FILE *TfSafeOutputFile::ReleaseUpdatedFile()
Invalid output file (failed to open, or opened for replace)
void TfSafeOutputFile::Close()
Update
static TfSafeOutputFile TfSafeOutputFile::Update(const std::string &)
Unable to open file '%s' for writing
Replace
static TfSafeOutputFile TfSafeOutputFile::Replace(const std::string &)
Unable to obtain writable FILE pointer: %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/atomicRenameUtil.cpp
Tf_AtomicRenameFileOver
bool Tf_AtomicRenameFileOver(const std::string &, const std::string &, std::string *)
Unable to set permissions for temporary file '%s': %s
Failed to rename temporary file '%s' to '%s': %s
Empty fileName
Unable to determine the real path for '%s': %s
Insufficient permissions to write to destination directory '%s'
Insufficient permissions to write to destination file '%s'
Unable to create temporary file '%s': %s
TfRegistryManager: initialized
static void TfSingleton<(anonymous namespace)::Tf_RegistryManagerImpl>::SetInstanceConstructed(T &) [T = (anonymous namespace)::Tf_RegistryManagerImpl]
TfRegistryManager: no functions to run for %s
TfRegistryManager: running %zd functions for %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/registryManager.cpp
_RunRegistrationFunctionsNoLock
void (anonymous namespace)::Tf_RegistryManagerImpl::_RunRegistrationFunctionsNoLock(const std::string &)
i->second.empty()
ClearActiveLibrary
void (anonymous namespace)::Tf_RegistryManagerImpl::ClearActiveLibrary(const char *)
libraryName && libraryName[0]
AddRegistrationFunction
void (anonymous namespace)::Tf_RegistryManagerImpl::AddRegistrationFunction(const char *, (anonymous namespace)::Tf_RegistryManagerImpl::RegistrationFunction, const char *)
TfRegistryManager: Ignoring library with no name
typeName && typeName[0]
TfRegistryManager: Ignoring registration with no type in %s
TfRegistryManager: Library %s
active.identifier
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/fileUtils.cpp
TfDeleteFile
bool TfDeleteFile(const std::string &)
Failed to delete '%s': %s
opendir failed: %s
static void TfSingleton<TfDiagnosticMgr>::SetInstanceConstructed(T &) [T = TfDiagnosticMgr]
ERROR
WARNING
(%s)%d
Thread %s Pending Diagnostics
%s%s: %s [%s]
 (secondary thread)
%s%s: in %s at line %zu of %s -- %s
log stack traces for all errors
log stack traces for all warnings
capture stack traces at TfErrorMark ctor/dtor, enable TfReportActiveMarks debugging API.
print all posted errors immediately, meaning that even errors that are expected and handled will be printed, producing possibly confusing output
TF_DISCOVERY_TERSE
TF_DISCOVERY_DETAILED
TF_DEBUG_REGISTRY
TF_DLOPEN
TF_DLCLOSE
TF_SCRIPT_MODULE_LOADER
TF_TYPE_REGISTRY
TF_ATTACH_DEBUGGER_ON_ERROR
TF_ATTACH_DEBUGGER_ON_FATAL_ERROR
TF_ATTACH_DEBUGGER_ON_WARNING
static void TfSingleton<Tf_DebugSymbolRegistry>::SetInstanceConstructed(T &) [T = Tf_DebugSymbolRegistry]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/debug.cpp
_RegisterDebugSymbolImpl
static void TfDebug::_RegisterDebugSymbolImpl(TfDebug::_Node *, const char *, const char *)
description argument for '%s' is NULL
description argument for '%s' is empty -- add description!
TF_DEBUG
help
debug the TfDebug registry
coarse grain debugging of TfRegistryManager
detailed debugging of TfRegistryManager
show files opened by TfDlopen
show files closed by TfDlclose
Tf_DebugSymbolRegistry
Tf_DebugSymbolRegistry::Tf_DebugSymbolRegistry()
TF_DEBUG_OUTPUT_FILE
stderr
%s: %s
void Tf_DebugSymbolRegistry::_Register(const std::string &, TfDebug::_Node *, const std::string &)
[TF_DEBUG_ENVIRONMENT_SYMBOL] multiple debug symbol definitions for '%s'.  This is usually due to software misconfiguration, such as multiple versions of the same shared library loaded simultaneously in the process.  Please check your build configuration.
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/stringUtils.cpp
Tf_ApplyDoubleToStringConverter
void Tf_ApplyDoubleToStringConverter(float, char *, int)
conv.ToShortestSingle(val, &builder)
double_conversion failed
void Tf_ApplyDoubleToStringConverter(double, char *, int)
conv.ToShortest(val, &builder)
&<>"'
&amp;
&lt;
&gt;
&quot;
&apos;
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/fastCompression.cpp
CompressToBuffer
static size_t TfFastCompression::CompressToBuffer(const char *, char *, size_t)
Attempted to compress a buffer of %zu bytes, more than the maximum supported %zu
DecompressFromBuffer
static size_t TfFastCompression::DecompressFromBuffer(const char *, char *, size_t, size_t)
Failed to decompress data, possibly corrupt? LZ4 error code: %d
Failed to decompress data. Couldn't read chunk size.
Failed to decompress data. Chunk too large.
Writing stack for %s to %s because of %s.
Error writing to stack trace file. Printing stack to stderr
st_%s
TF_LOG_STACK_TRACE_ON_ERROR
TF_LOG_STACK_TRACE_ON_WARNING
TF_ERROR_MARK_TRACKING
TF_PRINT_ALL_POSTED_ERRORS_TO_STDERR
Failed verification: ' 
 -- 
TF_FATAL_VERIFY
<empty>
TF_DIAGNOSTIC_CODING_ERROR_TYPE
Coding Error
TF_DIAGNOSTIC_FATAL_CODING_ERROR_TYPE
Fatal Coding Error
TF_DIAGNOSTIC_RUNTIME_ERROR_TYPE
Runtime Error
TF_DIAGNOSTIC_FATAL_ERROR_TYPE
Fatal Error
TF_DIAGNOSTIC_NONFATAL_ERROR_TYPE
Error
TF_DIAGNOSTIC_WARNING_TYPE
Warning
TF_DIAGNOSTIC_STATUS_TYPE
Status
TF_APPLICATION_EXIT_TYPE
Application Exit
static void TfSingleton<Tf_TypeRegistry>::SetInstanceConstructed(T &) [T = Tf_TypeRegistry]
TfType::_Root
TfType::_Unknown
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/type.cpp
GetAllAncestorTypes
void TfType::GetAllAncestorTypes(vector<TfType> *) const
Cannot ask for ancestor types of Unknown type
Cannot resolve ancestor classes for '%s' because the inheritance hierarchy is inconsistent.  Please check that multiply-inherited types are inherited in the same order throughout the inherited hierarchy.
bool TfType::IsA(TfType) const
IsA() was given an Unknown base type.  This probably means the attempt to look up the base type failed.  (Note: to explicitly check if a type is unknown, use IsUnknown() instead.)
TfType::Declare
Declare
static const TfType &TfType::Declare(const std::string &)
!t._info->IsDefined()
Cannot declare the type '%s'
Type '%s' has been declared to have 0 bases, and therefore inherits directly from the root type.  Cannot add bases.
TfType '%s' has already had its definitionCallback set; ignoring 2nd declaration
static const TfType &TfType::Declare(const std::string &, const vector<TfType> &, TfType::DefinitionCallback)
_DefineCppType
void TfType::_DefineCppType(const std::type_info &, size_t, bool, bool) const
TfType '%s' already has a defined C++ type; cannot redefine
TfType '%s' was previously declared to have '%s' as a base, but a subsequent declaration does not include this as a base.  The newly given bases were: (%s).  If this is a type declared in a plugin, check that the plugin metadata is correct.
Specified base type order differs for %s: had (%s), now (%s).  If this is a type declared in a plugin, check that the plugin metadata is correct.
Specified base type is unknown, skipping.
SetFactory
void TfType::SetFactory(std::unique_ptr<FactoryBase>) const
Cannot set factory of %s
Cannot change the factory of %s
_GetFactory
TfType::FactoryBase *TfType::_GetFactory() const
Cannot manufacture type %s
AddAlias
void TfType::AddAlias(TfType, const std::string &) const
TfIterator::Iterator &TfIterator<std::vector<std::vector<TfType>>, false>::operator->() [T = std::vector<std::vector<TfType>>, Reverse = false]
TfIterator<T, Reverse> &TfIterator<std::vector<std::vector<TfType>>, false>::operator++() [T = std::vector<std::vector<TfType>>, Reverse = false]
Cannot set alias '%s' under '%s', because it is already set to '%s', not '%s'.
There already is a type named '%s'; cannot create an alias of the same name.
size_t
vector<bool>
vector<char>
vector<unsigned char>
vector<short>
vector<unsigned short>
vector<int>
vector<unsigned int>
vector<long>
vector<unsigned long>
vector<size_t>
vector<long long>
vector<unsigned long long>
vector<float>
vector<double>
vector<string>
TfIterator<T, Reverse> &TfIterator<const std::vector<TfType>, false>::operator++() [T = const std::vector<TfType>, Reverse = false]
TfIterator::Iterator &TfIterator<const std::vector<TfType>, false>::operator->() [T = const std::vector<TfType>, Reverse = false]
static void TfSingleton<Tf_EnumRegistry>::SetInstanceConstructed(T &) [T = Tf_EnumRegistry]
TfEnum::_AddName
int::%d
Stream is already open
Unable to open '%s' for writing: %s
Stream is not open
Buffer is not open
Unable to remove temporary file '%s': %s
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/mallocTag.cpp
_End
void TfMallocTag::Auto::_End()
_threadData->_callSiteOnStack[node->_callSite->_index] > 0
Tree view  ==============
Find
static TfMallocTag::_ThreadData *TfMallocTag::Tls::Find()
TfMallocTag not supported on platforms without thread_local
TfIterator<T, Reverse> &TfIterator<std::vector<std::string>, false>::operator++() [T = std::vector<std::string>, Reverse = false]
TfIterator::Reference TfIterator<std::vector<std::string>, false>::operator*() [T = std::vector<std::string>, Reverse = false]
static void TfSingleton<Tf_NoticeRegistry>::SetInstanceConstructed(T &) [T = Tf_NoticeRegistry]
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/noticeRegistry.cpp
_VerifyFailedCast
void Tf_NoticeRegistry::_VerifyFailedCast(const std::type_info &, const TfNotice &, const TfNotice *)
Special handling of notice type '%s' invoked.
Most likely, this class is missing a non-inlined virtual destructor.
Please request that someone modify class '%s' accordingly.
All attempts to cast notice of type '%s' to type '%s' failed.  One possibility is that '%s' has no non-inlined virtual functions and this system's C++ ABI is non-standard.  Verify that class '%s'has at least one non-inline virtual function.
Tf_NoticeRegistry::_Register
TfNotice::Key Tf_NoticeRegistry::_Register(TfNotice::_DelivererBase *)
notice type is undefined in the TfType system
Class %s (derived from TfNotice) is undefined in the TfType system
TfNotice type '%s' has multiple base types;
it must have a unique parent in the TfType system
TfNotice type '%s' has NO base types;
this should be impossible.
_BadTypeFatalMsg
void Tf_NoticeRegistry::_BadTypeFatalMsg(const TfType &, const std::type_info &)
TfIterator<T, Reverse> &TfIterator<const std::vector<TfWeakPtr<TfNotice::Probe>>, false>::operator++() [T = const std::vector<TfWeakPtr<TfNotice::Probe>>, Reverse = false]
TfIterator::Reference TfIterator<const std::vector<TfWeakPtr<TfNotice::Probe>>, false>::operator*() [T = const std::vector<TfWeakPtr<TfNotice::Probe>>, Reverse = false]
TfWeakPtrFacade::DataType *TfWeakPtrFacade<TfWeakPtr, TfNotice::Probe>::operator->() const [PtrTemplate = TfWeakPtr, Type = TfNotice::Probe]
TfIterator<T, Reverse> &TfIterator<TfHashSet<TfWeakPtr<TfNotice::Probe>, TfHash>, false>::operator++() [T = TfHashSet<TfWeakPtr<TfNotice::Probe>, TfHash>, Reverse = false]
TfIterator::Reference TfIterator<TfHashSet<TfWeakPtr<TfNotice::Probe>, TfHash>, false>::operator*() [T = TfHashSet<TfWeakPtr<TfNotice::Probe>, TfHash>, Reverse = false]
encountered dangling symbolic link
vector<TfToken>
/Library/Caches/com.apple.xbs/Sources/ModelKit_Sim/ModelKit/extern/usd/pxr/base/tf/token.cpp
_PossiblyDestroyRep
void Tf_TokenRegistry::_PossiblyDestroyRep(Tf_TokenRegistry::_RepPtr)
repFoundInSet
failed to find token '%s' in table for destruction
TfToken
Could not open file: 
Invalid index provided to getTimeSampling.
Invalid WrittenSampleIDPtr
OFaceSetSchema::init()
OFaceSetSchema::setTimeSampling( uint32_t iTimeSamplingID )
OFaceSetSchema::set()
Sample 0 must provide the faces that make up the faceset.
TokenMap::setUnique: token: 
 is not unique.
TokenMap::get: Token-Value pair: 
 contains separator characters: 
 or 
Invalid object data group
Out of range index in OrData::getChildHeader: 
Out of range index in OrData::getChild: 
Invalid scalar property group
Attempted to create a ScalarPropertyReader from a non-array property type
_ai_AlembicVersion
Invalid array property group
Attempted to create a ArrayPropertyReader from a non-array property type
Invalid sample index: 
, should be between 0 and 
OCameraSchema::set()
Number of Film Back Xform Ops differ expected: 
 got: 
Film Back Xform Operation type differs from initial sample at index: 
OCameraSchema::setTimeSampling( uint32_t )
OCameraSchema::init()
OCameraSchema::getArbGeomParams()
OCameraSchema::getUserProperties()
Incorrect number of time samples specified, expected 
, got: 
Sample 
 value: 
 is not greater than the previous sample: 
Cyclic samples provided are greater than the time per cycle. Expected: 
 Found: 
Out-of-range acyclic index: 
, range [0-
should be cyclic
Time per cycle must be greater than 0 
and can not be ACYCLIC_TIME_PER_CYCLE.
ERROR: EXCEPTION:
ERROR: UNKNOWN EXCEPTION
OPointsSchema::set()
Sample 0 must have valid data for points and ids
OPointsSchema::setTimeSampling( uint32_t )
OPointsSchema::init()
Invalid archive
Invalid data
Invalid parent
Invalid header
OArchive::addTimeSampling
OArchive::getTimeSampling
OArchive::getTop()
IScalarProperty::getNumSamples()
IScalarProperty::isConstant()
IScalarProperty::getTimeSampling()
IScalarProperty::get()
IScalarProperty::getParent()
IScalarProperty::init()
Could not open as Ogawa file: 
Ogawa file not cleanly closed while being written: 
Could not open as Ogawa file from provided streams.
Ogawa streams not cleanly closed while being written. 
Invalid Alembic file.
Unsupported file version detected: 
Unsupported Alembic version detected: 
Invalid property header
Invalid group
Attempted to create a ArrayPropertyWriter from a non-array property type
Can not set more samples than we have times for when using Acyclic sampling.
Can't set from previous sample before any samples have been written
Can not write more samples than we have times for when using Acyclic sampling.
DataType on ArraySample iSamp: 
, does not match the DataType of the Array property: 
Already have written more samples than we have times for when using Acyclic sampling.
IXformSchema::init()
.inherits
isNotConstantIdentity
.animChans
.ops
IXformSchema::getTimeSampling()
IXformSchema::getNumSamples()
IXformSchema::get()
IXformSchema::getInheritsXforms()
ICompoundProperty::getNumProperties()
ICompoundProperty::getPropertyHeader()
ICompoundProperty::getParent()
ICompoundProperty::init()
invalid parent
Alembic 
 (built 
Feb 12 2022
04:21:52)
OPolyMeshSchema::set()
OPolyMeshSchema::setTimeSampling( uint32_t )
OPolyMeshSchema::init()
Cannot convert the data to or from a string, or wstring.
Incorrect data, expected to be empty or to have a key and data
ReadObjectHeaders Invalid data at index 
Read invalid POD type: 
IObject::getHeader()
IObject::getArchive()
IObject::getParent()
IObject::getNumChildren()
IObject::getChildHeader()
IObject::getProperties()
IObject::isInstanceRoot()
IObject::instanceSourcePath()
IObject::init()
isInstance
.instanceSource
OObject::getArchive()
OObject::getChildHeader()
OObject::getProperties()
OObject::init( OArchive )
OObject::init()
Invalid parent in OrImpl(Object)
Invalid header in OrImpl(Object)
Invalid archive in OrImpl(Object)
Invalid archive in OrImpl(Archive)
Invalid data in OrImpl(Archive)
Invalid header in OrImpl(Archive)
CpwImpl::getPropertyHeader: 
Invalid property header ptr in CpwImpl
Already have a property named: 
createScalarProperty, illegal DataType provided.
createArrayProperty, illegal DataType provided.
Invalid property requested in CpwData::fillHash
ICameraSchema::init()
.core
.filmBackOps
.filmBackChannels
ICameraSchema::get()
OXformSchema::set()
Invalid sample topology!
OXformSchema::init()
OXformSchema::getArbGeomParams()
OXformSchema::getUserProperties()
OXformSchema::setTimeSampling( uint32_t )
Ogawa IStreams::read failed.
OCurvesSchema::set()
OCurvesSchema::selectiveSet()
OCurvesSchema::setTimeSampling( uint32_t )
OCurvesSchema::init()
IArchive::getName()
IArchive::getTop()
IArchive:::getTimeSampling
IArchive:::getArchiveVersion
Invalid object
Invalid compound data
Invalid parent object
Invalid parent in CprImpl(Compound)
invalid header in CprImpl(Compound)
Tried to create compound property with the wrong property type: 
Invalid object in CprImpl::CprImpl(Compound)
Invalid object in CprImpl(Object)
Invalid data in CprImpl(Object)
invalid compound data group
Out of range index in 
CprData::getPropertyHeader: 
Tried to read a scalar property from a non-scalar: 
, type: 
Scalar Property not backed by a valid group.
Tried to read an array property from a non-array: 
Array Property not backed by a valid group.
Tried to read a compound property from a non-compound: 
Compound Property not backed by a valid group.
IFaceSetSchema::init()
IFaceSetSchema::getFaceExclusivity
.facesExclusive
IArrayProperty::getNumSamples()
IArrayProperty::getTimeSampling()
IArrayProperty::get()
IArrayProperty::init()
Can't calculate key for: 
Invalid parent group
Out of range index in OwData::getChildHeader: 
Invalid child header: 
Already have an Object named: 
Object not given a name, parent is: 
Object has illegal name: 
Invalid property index requested in OwData::fillHash
OSubDSchema::set()
Sample 0 must have valid data for all mesh components
.faceVaryingInterpolateBoundary
.faceVaryingPropagateCorners
OSubDSchema::setTimeSampling( uint32_t )
OSubDSchema::init()
OSubDSchema::initCreases()
OSubDSchema::initCorners()
OSubDSchema::initHoles()
OPolyMeshSchema::selectiveSet()
OBaseProperty::getObject()
Invalid DataType in TypedArraySample. Expected: 
, but got: 
OTypedGeomParam::setTimeSampling( uint32_t )
OCompoundProperty::init()
Cannot mix addOp() and set<Foo>() methods.
Cannot update mismatched op-type in already-setted 
XformSample!
OScalarProperty::getNumSamples()
OScalarProperty::set()
OScalarProperty::setFromPrevious()
OScalarProperty::setTimeSampling(uint32_t)
OScalarProperty::init(p, n)
ICurvesSchema::init()
ICurvesSchema::get()
Invalid index specified, must be 0-15 not: 
Invalid index in CameraSample: 
NULL Impl Ptr
Illegal NULL character found in string data 
Illegal NULL character found in wstring data
CopyWrittenData() passed a bogus ref
CopyWrittenData() passed in a bogus OGroupPtr
Illegal Sampling!
Num Samples: 
First Changed Index: 
Last Changed Index: 
No TimeSamples to write!
OArrayProperty::getNumSamples()
OArrayProperty::set()
OArrayProperty::setFromPrevious()
OArrayProperty::setTimeSampling(uint32_t)
OArrayProperty::init()
Attempted to create a ScalarPropertyWriter from a non-scalar property type
11GfLineSeg2d
G10GfMatrix2d
7GfVec4d
>10GfMatrix3d
10GfMatrix4f
>7GfQuath
7GfQuatd
7GfVec4i
15GfMultiInterval
7GfSize3
8GfRect2i
7GfVec2h
5GfRay
9GfRange2d
12GfQuaternion
L@9GfFrustum
N9GfFrustum14ProjectionTypeE
7GfPlane
7GfVec4h
8GfBBox3d
7GfVec4f
MbP?
?10GfMatrix2f
10GfInterval
7GfVec3d
11GfTransform
7GfVec2i
6GfLine
9GfRange2f
7GfVec3h
8GfLine2d
7GfSize2
7GfVec2d
9GfRange3f
10GfRotation
N8pxr_half4halfE
?7GfQuatf
9GfRange3d
?N8GfCamera10ProjectionE
N8GfCamera12FOVDirectionE
7GfVec3i
10GfMatrix3f
9GfRange1f
9GfLineSeg
9GfRange1d
333333
@ffffff
UUUUUU
"',16
NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__113__vector_baseI7TfTokenNS_9allocatorIS1_EEEE
7TfToken
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v107OObjectENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic3Abc3v107OObjectEE27__shared_ptr_default_deleteIS4_S4_EE
N12_GLOBAL__N_17_Parent5_PrimE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_17_Parent5_PrimENS_10shared_ptrIS3_E27__shared_ptr_default_deleteIS3_S3_EENS_9allocatorIS3_EEEE
NSt3__110shared_ptrIN12_GLOBAL__N_17_Parent5_PrimEE27__shared_ptr_default_deleteIS3_S3_EE
NSt3__110__function6__funcIPFvPN12_GLOBAL__N_118_PrimWriterContextEENS_9allocatorIS6_EES5_EE
NSt3__110__function6__baseIFvPN12_GLOBAL__N_118_PrimWriterContextEEEE
PFvPN12_GLOBAL__N_118_PrimWriterContextEE
FvPN12_GLOBAL__N_118_PrimWriterContextEE
NSt3__13mapId7VtValueNS_4lessIdEENS_9allocatorINS_4pairIKdS1_EEEEEE
N5boost6detail17sp_counted_impl_pI7VtValueEE
N5boost6detail17sp_counted_impl_pINSt3__13mapId7VtValueNS2_4lessIdEENS2_9allocatorINS2_4pairIKdS4_EEEEEEEE
N5boost6detail17sp_counted_impl_pIN18UsdAbc_AlembicUtil17_SampleForAlembic7_HolderEEE
NSt3__117bad_function_callE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIaEE
NSt3__110__function6__funcIPFN18UsdAbc_AlembicUtil17_SampleForAlembicERK7VtValueENS_9allocatorIS8_EES7_EE
NSt3__110__function6__baseIFN18UsdAbc_AlembicUtil17_SampleForAlembicERK7VtValueEEE
PFN18UsdAbc_AlembicUtil17_SampleForAlembicERK7VtValueE
FN18UsdAbc_AlembicUtil17_SampleForAlembicERK7VtValueE
11SdfSpecType
NSt3__110__function6__funcINS_6__bindIMN12_GLOBAL__N_17_ParentEKFN7Alembic3Abc3v1017OCompoundPropertyEvEJNS_17reference_wrapperIKS4_EEEEENS_9allocatorISE_EEFS8_vEEE
NSt3__110__function6__baseIFN7Alembic3Abc3v1017OCompoundPropertyEvEEE
NSt3__16__bindIMN12_GLOBAL__N_17_ParentEKFN7Alembic3Abc3v1017OCompoundPropertyEvEJNS_17reference_wrapperIKS2_EEEEE
NSt3__118__weak_result_typeIMN12_GLOBAL__N_17_ParentEKFN7Alembic3Abc3v1017OCompoundPropertyEvEEE
NSt3__114unary_functionIPKN12_GLOBAL__N_17_ParentEN7Alembic3Abc3v1017OCompoundPropertyEEE
N7Alembic3Abc3v1013OSchemaObjectINS_7AbcGeom3v1012OXformSchemaEEE
N7Alembic7AbcGeom3v1012OXformSchemaE
N7Alembic3Abc3v107OSchemaINS_7AbcGeom3v1015XformSchemaInfoEEE
N7Alembic3Abc3v1017OCompoundPropertyE
N7Alembic3Abc3v1014OBasePropertyTINSt3__110shared_ptrINS_15AbcCoreAbstract3v1022CompoundPropertyWriterEEEEE
N7Alembic3Abc3v104BaseE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1012OXformSchemaEEENS_10shared_ptrIS8_E27__shared_ptr_default_deleteIS8_S8_EENS_9allocatorIS8_EEEE
NSt3__110shared_ptrIN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1012OXformSchemaEEEE27__shared_ptr_default_deleteIS8_S8_EE
N12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS2_7AbcGeom3v1012OXformSchemaEEEEE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS4_7AbcGeom3v1012OXformSchemaEEEEENS_10shared_ptrINS2_5_PrimEE27__shared_ptr_default_deleteISF_SC_EENS_9allocatorISC_EEEE
NSt3__110shared_ptrIN12_GLOBAL__N_17_Parent5_PrimEE27__shared_ptr_default_deleteIS3_NS2_9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS7_7AbcGeom3v1012OXformSchemaEEEEEEE
10GfMatrix4d
N7Alembic7AbcGeom3v1011OSubDSchemaE
N7Alembic7AbcGeom3v1015OGeomBaseSchemaINS1_14SubDSchemaInfoEEE
N7Alembic3Abc3v1013OSchemaObjectINS_7AbcGeom3v1014OFaceSetSchemaEEE
N7Alembic7AbcGeom3v1014OFaceSetSchemaE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1011OSubDSchemaEEENS_10shared_ptrIS8_E27__shared_ptr_default_deleteIS8_S8_EENS_9allocatorIS8_EEEE
NSt3__110shared_ptrIN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1011OSubDSchemaEEEE27__shared_ptr_default_deleteIS8_S8_EE
N12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS2_7AbcGeom3v1011OSubDSchemaEEEEE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS4_7AbcGeom3v1011OSubDSchemaEEEEENS_10shared_ptrINS2_5_PrimEE27__shared_ptr_default_deleteISF_SC_EENS_9allocatorISC_EEEE
NSt3__110shared_ptrIN12_GLOBAL__N_17_Parent5_PrimEE27__shared_ptr_default_deleteIS3_NS2_9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS7_7AbcGeom3v1011OSubDSchemaEEEEEEE
7VtArrayIiE
N7VtArrayIiE9_StreamerE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIiEE
N5boost6detail17sp_counted_impl_pINSt3__16vectorIjNS2_9allocatorIjEEEEEE
N5boost6detail18sp_counted_impl_pdIPfNS_21checked_array_deleterIfEEEE
N5boost21checked_array_deleterIfEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIfEE
N7Alembic7AbcGeom3v1015OPolyMeshSchemaE
N7Alembic7AbcGeom3v1015OGeomBaseSchemaINS1_18PolyMeshSchemaInfoEEE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1015OPolyMeshSchemaEEENS_10shared_ptrIS8_E27__shared_ptr_default_deleteIS8_S8_EENS_9allocatorIS8_EEEE
NSt3__110shared_ptrIN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1015OPolyMeshSchemaEEEE27__shared_ptr_default_deleteIS8_S8_EE
N12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS2_7AbcGeom3v1015OPolyMeshSchemaEEEEE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS4_7AbcGeom3v1015OPolyMeshSchemaEEEEENS_10shared_ptrINS2_5_PrimEE27__shared_ptr_default_deleteISF_SC_EENS_9allocatorISC_EEEE
NSt3__110shared_ptrIN12_GLOBAL__N_17_Parent5_PrimEE27__shared_ptr_default_deleteIS3_NS2_9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS7_7AbcGeom3v1015OPolyMeshSchemaEEEEEEE
N7Alembic3Abc3v1013OSchemaObjectINS_7AbcGeom3v1013OCurvesSchemaEEE
N7Alembic7AbcGeom3v1013OCurvesSchemaE
N7Alembic7AbcGeom3v1015OGeomBaseSchemaINS1_16CurvesSchemaInfoEEE
N7Alembic3Abc3v107OSchemaINS_7AbcGeom3v1016CurvesSchemaInfoEEE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1013OCurvesSchemaEEENS_10shared_ptrIS8_E27__shared_ptr_default_deleteIS8_S8_EENS_9allocatorIS8_EEEE
NSt3__110shared_ptrIN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1013OCurvesSchemaEEEE27__shared_ptr_default_deleteIS8_S8_EE
N12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS2_7AbcGeom3v1013OCurvesSchemaEEEEE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS4_7AbcGeom3v1013OCurvesSchemaEEEEENS_10shared_ptrINS2_5_PrimEE27__shared_ptr_default_deleteISF_SC_EENS_9allocatorISC_EEEE
NSt3__110shared_ptrIN12_GLOBAL__N_17_Parent5_PrimEE27__shared_ptr_default_deleteIS3_NS2_9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS7_7AbcGeom3v1013OCurvesSchemaEEEEEEE
N5boost6detail18sp_counted_impl_pdIPhNS_21checked_array_deleterIhEEEE
N5boost21checked_array_deleterIhEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIhEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIN7Alembic7AbcGeom3v109BasisTypeEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIN7Alembic7AbcGeom3v109CurveTypeEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIN7Alembic7AbcGeom3v1016CurvePeriodicityEEE
N7Alembic3Abc3v1013OSchemaObjectINS_7AbcGeom3v1013OPointsSchemaEEE
N7Alembic7AbcGeom3v1013OPointsSchemaE
N7Alembic7AbcGeom3v1015OGeomBaseSchemaINS1_16PointsSchemaInfoEEE
N7Alembic3Abc3v107OSchemaINS_7AbcGeom3v1016PointsSchemaInfoEEE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1013OPointsSchemaEEENS_10shared_ptrIS8_E27__shared_ptr_default_deleteIS8_S8_EENS_9allocatorIS8_EEEE
NSt3__110shared_ptrIN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1013OPointsSchemaEEEE27__shared_ptr_default_deleteIS8_S8_EE
N12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS2_7AbcGeom3v1013OPointsSchemaEEEEE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS4_7AbcGeom3v1013OPointsSchemaEEEEENS_10shared_ptrINS2_5_PrimEE27__shared_ptr_default_deleteISF_SC_EENS_9allocatorISC_EEEE
NSt3__110shared_ptrIN12_GLOBAL__N_17_Parent5_PrimEE27__shared_ptr_default_deleteIS3_NS2_9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS7_7AbcGeom3v1013OPointsSchemaEEEEEEE
N5boost6detail18sp_counted_impl_pdIPyNS_21checked_array_deleterIyEEEE
N5boost21checked_array_deleterIyEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIyEE
N7Alembic3Abc3v1013OSchemaObjectINS_7AbcGeom3v1013OCameraSchemaEEE
N7Alembic7AbcGeom3v1013OCameraSchemaE
N7Alembic3Abc3v107OSchemaINS_7AbcGeom3v1016CameraSchemaInfoEEE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1013OCameraSchemaEEENS_10shared_ptrIS8_E27__shared_ptr_default_deleteIS8_S8_EENS_9allocatorIS8_EEEE
NSt3__110shared_ptrIN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1013OCameraSchemaEEEE27__shared_ptr_default_deleteIS8_S8_EE
N12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS2_7AbcGeom3v1013OCameraSchemaEEEEE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_17_Parent9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS4_7AbcGeom3v1013OCameraSchemaEEEEENS_10shared_ptrINS2_5_PrimEE27__shared_ptr_default_deleteISF_SC_EENS_9allocatorISC_EEEE
NSt3__110shared_ptrIN12_GLOBAL__N_17_Parent5_PrimEE27__shared_ptr_default_deleteIS3_NS2_9_GeomPrimIN7Alembic3Abc3v1013OSchemaObjectINS7_7AbcGeom3v1013OCameraSchemaEEEEEEE
25SdfAbstractDataTypedValueIfE
20SdfAbstractDataValue
13SdfValueBlock
7GfVec2f
25SdfAbstractDataTypedValueI7GfVec2fE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1014OFaceSetSchemaEEENS_10shared_ptrIS8_E27__shared_ptr_default_deleteIS8_S8_EENS_9allocatorIS8_EEEE
NSt3__110shared_ptrIN7Alembic3Abc3v1013OSchemaObjectINS1_7AbcGeom3v1014OFaceSetSchemaEEEE27__shared_ptr_default_deleteIS8_S8_EE
9TfWeakPtrIK15SdfAbstractDataE
15TfWeakPtrFacadeI9TfWeakPtrK15SdfAbstractDataE
NSt3__110__function6__funcIPFvPN12_GLOBAL__N_118_PrimReaderContextEENS_9allocatorIS6_EES5_EE
NSt3__110__function6__baseIFvPN12_GLOBAL__N_118_PrimReaderContextEEEE
PFvPN12_GLOBAL__N_118_PrimReaderContextEE
FvPN12_GLOBAL__N_118_PrimReaderContextEE
NSt3__110__function6__funcIN12_GLOBAL__N_114_CopyAdskColorENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
NSt3__110__function6__baseIFRKN7Alembic15AbcCoreAbstract3v108MetaDataEN12_GLOBAL__N_112_MetaDataTagEEEE
N12_GLOBAL__N_114_CopyAdskColorE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1020ITypedScalarPropertyINS3_11C4fTPTraitsEEEvLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_114_CopyAdskColorENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__baseIFNS_6vectorIdNS_9allocatorIdEEEEN12_GLOBAL__N_115_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_114_CopyAdskColorENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__baseIFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_116_CopyBoundingBoxENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_116_CopyBoundingBoxE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1020ITypedScalarPropertyINS3_13Box3dTPTraitsEEEvLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_116_CopyBoundingBoxENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_116_CopyBoundingBoxENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_115_CopyVisibilityENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_115_CopyVisibilityE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1020ITypedScalarPropertyINS3_12Int8TPTraitsEEEvLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_115_CopyVisibilityENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_115_CopyVisibilityENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
N7Alembic7AbcGeom3v1016ObjectVisibilityE
NSt3__110__function6__funcINS_6__bindIRKNS_8functionIFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS6_15ISampleSelectorERKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyEEEEJS7_SH_RKNS_12placeholders4__phILi2EEERKNSU_ILi1EEEEEENSD_IS11_EEFbSO_SK_EEE
NSt3__16__bindIRKNS_8functionIFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_15ISampleSelectorERKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyEEEEJS5_SF_RKNS_12placeholders4__phILi2EEERKNSS_ILi1EEEEEE
NSt3__118__weak_result_typeINS_8functionIFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_15ISampleSelectorERKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyEEEEEE
NSt3__122__weak_result_type_impINS_8functionIFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_15ISampleSelectorERKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyEEEELb1EEE
NSt3__134__maybe_derive_from_unary_functionINS_8functionIFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_15ISampleSelectorERKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyEEEELb0EEE
NSt3__135__maybe_derive_from_binary_functionINS_8functionIFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_15ISampleSelectorERKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyEEEELb0EEE
N7Alembic3Abc3v1013ISchemaObjectINS_7AbcGeom3v1012IXformSchemaEEE
N7Alembic7AbcGeom3v1012IXformSchemaE
N7Alembic3Abc3v107ISchemaINS_7AbcGeom3v1015XformSchemaInfoEEE
N7Alembic3Abc3v1017ICompoundPropertyE
N7Alembic3Abc3v1014IBasePropertyTINSt3__110shared_ptrINS_15AbcCoreAbstract3v1022CompoundPropertyReaderEEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_110_CopyXformENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_110_CopyXformE
NSt3__110__function6__funcIN12_GLOBAL__N_110_CopyXformENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_110_CopyXformENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_114_CopySyntheticENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_114_CopySyntheticE
NSt3__110__function6__funcIN12_GLOBAL__N_114_CopySyntheticENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_114_CopySyntheticENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
7VtArrayI7TfTokenE
N7VtArrayI7TfTokenE9_StreamerE
NSt3__110__function6__funcIN12_GLOBAL__N_116_CopyOrientationENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_116_CopyOrientationE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1020ITypedScalarPropertyINS3_14StringTPTraitsEEEvLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_116_CopyOrientationENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_116_CopyOrientationENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_11P3fTPTraitsEEE7GfVec3fLb1EEENS_9allocatorISB_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS3_11P3fTPTraitsEEE7GfVec3fLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_11P3fTPTraitsEEE7GfVec3fLb1EEENS_9allocatorISB_EEFNS_6vectorIdNSC_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_11P3fTPTraitsEEE7GfVec3fLb1EEENS_9allocatorISB_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS6_15ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_11V3fTPTraitsEEE7GfVec3fLb1EEENS_9allocatorISB_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS3_11V3fTPTraitsEEE7GfVec3fLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_11V3fTPTraitsEEE7GfVec3fLb1EEENS_9allocatorISB_EEFNS_6vectorIdNSC_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_11V3fTPTraitsEEE7GfVec3fLb1EEENS_9allocatorISB_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS6_15ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_13Int32TPTraitsEEEiLb1EEENS_9allocatorISA_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS3_13Int32TPTraitsEEEiLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_13Int32TPTraitsEEEiLb1EEENS_9allocatorISA_EEFNS_6vectorIdNSB_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_13Int32TPTraitsEEEiLb1EEENS_9allocatorISA_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS6_15ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_122_CopySubdivisionSchemeENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_122_CopySubdivisionSchemeE
NSt3__110__function6__funcIN12_GLOBAL__N_122_CopySubdivisionSchemeENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_122_CopySubdivisionSchemeENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_124_CopyInterpolateBoundaryENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_124_CopyInterpolateBoundaryE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1020ITypedScalarPropertyINS3_13Int32TPTraitsEEEvLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_124_CopyInterpolateBoundaryENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_124_CopyInterpolateBoundaryENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_135_CopyFaceVaryingInterpolateBoundaryENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_135_CopyFaceVaryingInterpolateBoundaryE
NSt3__110__function6__funcIN12_GLOBAL__N_135_CopyFaceVaryingInterpolateBoundaryENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_135_CopyFaceVaryingInterpolateBoundaryENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_15Float32TPTraitsEEEfLb1EEENS_9allocatorISA_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS3_15Float32TPTraitsEEEfLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_15Float32TPTraitsEEEfLb1EEENS_9allocatorISA_EEFNS_6vectorIdNSB_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_15Float32TPTraitsEEEfLb1EEENS_9allocatorISA_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS6_15ISampleSelectorEEEE
7VtArrayIfE
N7VtArrayIfE9_StreamerE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011V2fTPTraitsEEE7GfVec2fLb0EEENS_9allocatorISD_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS1_3Abc3v1011V2fTPTraitsEEE7GfVec2fLb0EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011V2fTPTraitsEEE7GfVec2fLb0EEENS_9allocatorISD_EEFNS_6vectorIdNSE_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011V2fTPTraitsEEE7GfVec2fLb0EEENS_9allocatorISD_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS9_15ISampleSelectorEEEE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1016TypedArraySampleINS3_14Uint32TPTraitsEEENS1_15AbcCoreAbstract3v1013TArrayDeleterIjEENS_9allocatorIS6_EEEE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1016TypedArraySampleINS3_11V2fTPTraitsEEENS1_15AbcCoreAbstract3v1013TArrayDeleterIN9Imath_2_24Vec2IfEEEENS_9allocatorIS6_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIN9Imath_2_24Vec2IfEEEE
7VtArrayI7GfVec2fE
N7VtArrayI7GfVec2fE9_StreamerE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyIndicesIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011V2fTPTraitsEEEEENS_9allocatorISC_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyIndicesIN7Alembic7AbcGeom3v1015ITypedGeomParamINS1_3Abc3v1011V2fTPTraitsEEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyIndicesIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011V2fTPTraitsEEEEENS_9allocatorISC_EEFNS_6vectorIdNSD_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyIndicesIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011V2fTPTraitsEEEEENS_9allocatorISC_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS9_15ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011V2fTPTraitsEEE7GfVec2fLb1EEENS_9allocatorISD_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS1_3Abc3v1011V2fTPTraitsEEE7GfVec2fLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011V2fTPTraitsEEE7GfVec2fLb1EEENS_9allocatorISD_EEFNS_6vectorIdNSE_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011V2fTPTraitsEEE7GfVec2fLb1EEENS_9allocatorISD_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS9_15ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011N3fTPTraitsEEE7GfVec3fLb1EEENS_9allocatorISD_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS1_3Abc3v1011N3fTPTraitsEEE7GfVec3fLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011N3fTPTraitsEEE7GfVec3fLb1EEENS_9allocatorISD_EEFNS_6vectorIdNSE_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1011N3fTPTraitsEEE7GfVec3fLb1EEENS_9allocatorISD_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS9_15ISampleSelectorEEEE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1016TypedArraySampleINS3_11N3fTPTraitsEEENS1_15AbcCoreAbstract3v1013TArrayDeleterIN9Imath_2_24Vec3IfEEEENS_9allocatorIS6_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIN9Imath_2_24Vec3IfEEEE
N7Alembic3Abc3v1013ISchemaObjectINS_7AbcGeom3v1014IFaceSetSchemaEEE
N7Alembic7AbcGeom3v1014IFaceSetSchemaE
N7Alembic7AbcGeom3v1015IGeomBaseSchemaINS1_17FaceSetSchemaInfoEEE
N7Alembic3Abc3v107ISchemaINS_7AbcGeom3v1017FaceSetSchemaInfoEEE
NSt3__110__function6__funcIN12_GLOBAL__N_122_CopyFaceSetFamilyTypeENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_122_CopyFaceSetFamilyTypeE
N12_GLOBAL__N_116_CopyFaceSetBaseE
NSt3__110__function6__funcIN12_GLOBAL__N_122_CopyFaceSetFamilyTypeENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_122_CopyFaceSetFamilyTypeENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
N7Alembic7AbcGeom3v1013ICurvesSchemaE
N7Alembic7AbcGeom3v1015IGeomBaseSchemaINS1_16CurvesSchemaInfoEEE
N7Alembic3Abc3v107ISchemaINS_7AbcGeom3v1016CurvesSchemaInfoEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1015Float32TPTraitsEEEfLb1EEENS_9allocatorISC_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS1_3Abc3v1015Float32TPTraitsEEEfLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1015Float32TPTraitsEEEfLb1EEENS_9allocatorISC_EEFNS_6vectorIdNSD_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic7AbcGeom3v1015ITypedGeomParamINS4_3Abc3v1015Float32TPTraitsEEEfLb1EEENS_9allocatorISC_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS9_15ISampleSelectorEEEE
NSt3__120__shared_ptr_pointerIPN7Alembic3Abc3v1016TypedArraySampleINS3_15Float32TPTraitsEEENS1_15AbcCoreAbstract3v1013TArrayDeleterIfEENS_9allocatorIS6_EEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_15Float32TPTraitsEEEdLb1EEENS_9allocatorISA_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS3_15Float32TPTraitsEEEdLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_15Float32TPTraitsEEEdLb1EEENS_9allocatorISA_EEFNS_6vectorIdNSB_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_15Float32TPTraitsEEEdLb1EEENS_9allocatorISA_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS6_15ISampleSelectorEEEE
7VtArrayIdE
N7VtArrayIdE9_StreamerE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_14Uint64TPTraitsEEExLb1EEENS_9allocatorISA_EEFRKNS4_15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS3_14Uint64TPTraitsEEExLb1EEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_14Uint64TPTraitsEEExLb1EEENS_9allocatorISA_EEFNS_6vectorIdNSB_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_112_CopyGenericIN7Alembic3Abc3v1019ITypedArrayPropertyINS6_14Uint64TPTraitsEEExLb1EEENS_9allocatorISA_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKNS6_15ISampleSelectorEEEE
N7VtArrayIxE9_StreamerE
N7Alembic3Abc3v1013ISchemaObjectINS_7AbcGeom3v1013ICameraSchemaEEE
N7Alembic7AbcGeom3v1013ICameraSchemaE
N7Alembic3Abc3v107ISchemaINS_7AbcGeom3v1016CameraSchemaInfoEEE
NSt3__110__function6__funcIN12_GLOBAL__N_122_CopyCameraFocalLengthENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_122_CopyCameraFocalLengthE
N12_GLOBAL__N_115_CopyCameraBaseE
NSt3__110__function6__funcIN12_GLOBAL__N_122_CopyCameraFocalLengthENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_122_CopyCameraFocalLengthENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_129_CopyCameraHorizontalApertureENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_129_CopyCameraHorizontalApertureE
NSt3__110__function6__funcIN12_GLOBAL__N_129_CopyCameraHorizontalApertureENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_129_CopyCameraHorizontalApertureENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_127_CopyCameraVerticalApertureENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_127_CopyCameraVerticalApertureE
NSt3__110__function6__funcIN12_GLOBAL__N_127_CopyCameraVerticalApertureENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_127_CopyCameraVerticalApertureENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_135_CopyCameraHorizontalApertureOffsetENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_135_CopyCameraHorizontalApertureOffsetE
NSt3__110__function6__funcIN12_GLOBAL__N_135_CopyCameraHorizontalApertureOffsetENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_135_CopyCameraHorizontalApertureOffsetENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_133_CopyCameraVerticalApertureOffsetENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_133_CopyCameraVerticalApertureOffsetE
NSt3__110__function6__funcIN12_GLOBAL__N_133_CopyCameraVerticalApertureOffsetENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_133_CopyCameraVerticalApertureOffsetENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_124_CopyCameraClippingRangeENS_9allocatorIS3_EEFRKN7Alembic15AbcCoreAbstract3v108MetaDataENS2_12_MetaDataTagEEEE
N12_GLOBAL__N_124_CopyCameraClippingRangeE
NSt3__110__function6__funcIN12_GLOBAL__N_124_CopyCameraClippingRangeENS_9allocatorIS3_EEFNS_6vectorIdNS4_IdEEEENS2_15_SampleTimesTagEEEE
NSt3__110__function6__funcIN12_GLOBAL__N_124_CopyCameraClippingRangeENS_9allocatorIS3_EEFbRKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyERKN7Alembic3Abc3v1015ISampleSelectorEEEE
9SdfListOpI12SdfReferenceE
23UsdAbcAlembicFileFormat
21Sdf_FileFormatFactoryI23UsdAbcAlembicFileFormatE
25Sdf_FileFormatFactoryBase
8TfRefPtrI18UsdAbc_AlembicDataE
15TfWeakPtrFacadeI9TfWeakPtrK13SdfFileFormatE
18UsdAbc_AlembicData
N5boost6detail17sp_counted_impl_pI24UsdAbc_AlembicDataReaderEE
7VtArrayIbE
N7VtArrayIbE9_StreamerE
7VtArrayI10GfMatrix2dE
N7VtArrayI10GfMatrix2dE9_StreamerE
7VtArrayI10GfMatrix3dE
N7VtArrayI10GfMatrix3dE9_StreamerE
7VtArrayI10GfMatrix4dE
N7VtArrayI10GfMatrix4dE9_StreamerE
7VtArrayI7GfVec2dE
N7VtArrayI7GfVec2dE9_StreamerE
7VtArrayI7GfVec2iE
N7VtArrayI7GfVec2iE9_StreamerE
7VtArrayI7GfVec3dE
N7VtArrayI7GfVec3dE9_StreamerE
7VtArrayI7GfVec3iE
N7VtArrayI7GfVec3iE9_StreamerE
7VtArrayI7GfVec4dE
N7VtArrayI7GfVec4dE9_StreamerE
7VtArrayI7GfVec4fE
N7VtArrayI7GfVec4fE9_StreamerE
7VtArrayI7GfVec4iE
N7VtArrayI7GfVec4iE9_StreamerE
7VtArrayI12SdfAssetPathE
12SdfAssetPath
N5boost14operators_impl15totally_orderedI12SdfAssetPathS2_NS0_16operators_detail10empty_baseIS2_EENS3_7false_tEEE
N5boost14operators_impl16totally_ordered1I12SdfAssetPathNS0_16operators_detail10empty_baseIS2_EEEE
N5boost14operators_impl21less_than_comparable1I12SdfAssetPathNS0_20equality_comparable1IS2_NS0_16operators_detail10empty_baseIS2_EEEEEE
N5boost14operators_impl20equality_comparable1I12SdfAssetPathNS0_16operators_detail10empty_baseIS2_EEEE
N5boost14operators_impl16operators_detail10empty_baseI12SdfAssetPathEE
N7VtArrayI12SdfAssetPathE9_StreamerE
7VtArrayINSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE
N7VtArrayINSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE9_StreamerE
N18UsdAbc_AlembicUtil17_SampleForAlembic7_HolderE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_EmptyHolderE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ErrorHolderE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIbN7Alembic4Util3v106bool_tELm1EEENS_9allocatorIS8_EEFbRKNS4_3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS9_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
NSt3__110__function6__baseIFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_15ISampleSelectorERKN18UsdAbc_AlembicUtil21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIbN7Alembic4Util3v106bool_tELm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIbN7Alembic4Util3v106bool_tELm1EEENS_9allocatorIS8_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIN7Alembic4Util3v106bool_tEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIbN7Alembic4Util3v106bool_tELm1EEENS_9allocatorIS8_EEFbRKNS4_3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS9_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIbN7Alembic4Util3v106bool_tELm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIbN7Alembic4Util3v106bool_tELm1EEENS_9allocatorIS8_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPN7Alembic4Util3v106bool_tENS_21checked_array_deleterIS5_EEEE
N5boost21checked_array_deleterIN7Alembic4Util3v106bool_tEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIN7Alembic4Util3v106bool_tEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIhhLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIhhLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIhhLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIhEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIhhLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
7VtArrayIhE
N7VtArrayIhE9_StreamerE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIhhLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIhhLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIiiLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIiiLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIiiLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIiiLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIiiLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIiiLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPiNS_21checked_array_deleterIiEEEE
N5boost21checked_array_deleterIiEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIiEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIjjLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIjjLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIjjLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIjEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIjjLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N7VtArrayIjE9_StreamerE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIjjLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIjjLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPjNS_21checked_array_deleterIjEEEE
N5boost21checked_array_deleterIjEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIjEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIxxLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIxxLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIxxLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIxEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIxxLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIxxLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIxxLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPxNS_21checked_array_deleterIxEEEE
N5boost21checked_array_deleterIxEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIxEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIyyLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIyyLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIyyLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIyEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIyyLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N7VtArrayIyE9_StreamerE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIyyLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIyyLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIN8pxr_half4halfE4halfLm1EEENS_9allocatorIS7_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS8_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIN8pxr_half4halfE4halfLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIN8pxr_half4halfE4halfLm1EEENS_9allocatorIS7_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderI4halfEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIN8pxr_half4halfE4halfLm1EEENS_9allocatorIS7_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS8_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
7VtArrayIN8pxr_half4halfEE
N7VtArrayIN8pxr_half4halfEE9_StreamerE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIN8pxr_half4halfE4halfLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIN8pxr_half4halfE4halfLm1EEENS_9allocatorIS7_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIP4halfNS_21checked_array_deleterIS2_EEEE
N5boost21checked_array_deleterI4halfEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderI4halfEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIffLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIffLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIffLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIfEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIffLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIffLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIffLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIddLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIddLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIddLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIdEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIddLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIddLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIddLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPdNS_21checked_array_deleterIdEEEE
N5boost21checked_array_deleterIdEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIdEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_Lm1EEENS7_ISA_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKS9_RKNSE_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_Lm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_Lm1EEENS7_ISA_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_Lm1EEENS7_ISA_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKS9_RKNSE_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_Lm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_Lm1EEENS7_ISA_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_21checked_array_deleterIS8_EEEE
N5boost21checked_array_deleterINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2iiLm2EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2iiLm2EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2iiLm2EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2iiLm2EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2iiLm2EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2iiLm2EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2hN8pxr_half4halfELm2EEENS_9allocatorIS7_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS8_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2hN8pxr_half4halfELm2EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2hN8pxr_half4halfELm2EEENS_9allocatorIS7_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPN8pxr_half4halfENS_21checked_array_deleterIS3_EEEE
N5boost21checked_array_deleterIN8pxr_half4halfEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIN8pxr_half4halfEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2hN8pxr_half4halfELm2EEENS_9allocatorIS7_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS8_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
7VtArrayI7GfVec2hE
N7VtArrayI7GfVec2hE9_StreamerE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2hN8pxr_half4halfELm2EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2hN8pxr_half4halfELm2EEENS_9allocatorIS7_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2ddLm2EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2ddLm2EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2ddLm2EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2ddLm2EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2ddLm2EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2ddLm2EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3iiLm3EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3iiLm3EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3iiLm3EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3iiLm3EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3iiLm3EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3iiLm3EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4iiLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4iiLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4iiLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4iiLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4iiLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4iiLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4hN8pxr_half4halfELm4EEENS_9allocatorIS7_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS8_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4hN8pxr_half4halfELm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4hN8pxr_half4halfELm4EEENS_9allocatorIS7_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4hN8pxr_half4halfELm4EEENS_9allocatorIS7_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS8_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
7VtArrayI7GfVec4hE
N7VtArrayI7GfVec4hE9_StreamerE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4hN8pxr_half4halfELm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4hN8pxr_half4halfELm4EEENS_9allocatorIS7_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4ffLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4ffLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4ffLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4ffLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4ffLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4ffLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4ddLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4ddLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec4ddLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4ddLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4ddLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec4ddLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfQuatffLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfQuatffLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfQuatffLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfQuatffLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
7VtArrayI7GfQuatfE
N7VtArrayI7GfQuatfE9_StreamerE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfQuatffLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfQuatffLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfQuatddLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfQuatddLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfQuatddLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfQuatddLm4EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
7VtArrayI7GfQuatdE
N7VtArrayI7GfQuatdE9_StreamerE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfQuatddLm4EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfQuatddLm4EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIiaLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIiaLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIiaLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIiaLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIiaLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIiaLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPaNS_21checked_array_deleterIaEEEE
N5boost21checked_array_deleterIaEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIaEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIisLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIisLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIisLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderIsEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIisLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIisLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIisLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPsNS_21checked_array_deleterIsEEEE
N5boost21checked_array_deleterIsEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderIsEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIjtLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarIjtLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarIjtLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N18UsdAbc_AlembicUtil17_SampleForAlembic10_RawHolderItEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIjtLm1EEENS_9allocatorIS4_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEERKNS9_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayIjtLm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayIjtLm1EEENS_9allocatorIS4_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost6detail18sp_counted_impl_pdIPtNS_21checked_array_deleterItEEEE
N5boost21checked_array_deleterItEE
N18UsdAbc_AlembicUtil17_SampleForAlembic12_ArrayHolderItEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7TfTokenNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEELm1EEENS8_ISB_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKSA_RKNSF_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7TfTokenNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7TfTokenNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEELm1EEENS8_ISB_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7TfTokenNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEELm1EEENS8_ISB_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKSA_RKNSF_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7TfTokenNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELm1EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7TfTokenNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEELm1EEENS8_ISB_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI10GfMatrix4dfLm16EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI10GfMatrix4dfLm16EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI10GfMatrix4dfLm16EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI10GfMatrix4dfLm16EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI10GfMatrix4dfLm16EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI10GfMatrix4dfLm16EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3hN8pxr_half4halfELm3EEENS_9allocatorIS7_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS8_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3hN8pxr_half4halfELm3EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3hN8pxr_half4halfELm3EEENS_9allocatorIS7_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3hN8pxr_half4halfELm3EEENS_9allocatorIS7_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS8_IcEEEERKNSC_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
7VtArrayI7GfVec3hE
N7VtArrayI7GfVec3hE9_StreamerE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3hN8pxr_half4halfELm3EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3hN8pxr_half4halfELm3EEENS_9allocatorIS7_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3ffLm3EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3ffLm3EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3ffLm3EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3ffLm3EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3ffLm3EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3ffLm3EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3ddLm3EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3ddLm3EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec3ddLm3EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3ddLm3EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3ddLm3EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec3ddLm3EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI10GfMatrix4ddLm16EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI10GfMatrix4ddLm16EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI10GfMatrix4ddLm16EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI10GfMatrix4ddLm16EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI10GfMatrix4ddLm16EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI10GfMatrix4ddLm16EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2ffLm2EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2ffLm2EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil17_ConvertPODScalarI7GfVec2ffLm2EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2ffLm2EEENS_9allocatorIS5_EEFbRKN7Alembic3Abc3v1017ICompoundPropertyERKNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEERKNSA_15ISampleSelectorERKNS2_21UsdAbc_AlembicDataAnyEEEE
N18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2ffLm2EEE
NSt3__110__function6__funcIN18UsdAbc_AlembicUtil16_ConvertPODArrayI7GfVec2ffLm2EEENS_9allocatorIS5_EEFNS2_17_SampleForAlembicERK7VtValueEEE
N5boost14iterator_rangeIPKcEE
N5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27random_access_traversal_tagEEE
N5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27bidirectional_traversal_tagEEE
N5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traversal_tagEEE
N5boost21iterator_range_detail18iterator_range_tagE
N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_16bad_lexical_castEEEEE
N5boost16exception_detail19error_info_injectorINS_16bad_lexical_castEEE
N5boost16bad_lexical_castE
N5boost9exceptionE
16UsdObjFileFormat
21Sdf_FileFormatFactoryI16UsdObjFileFormatE
N12UsdObjStream12SequenceElem8ElemTypeE
29UsdStageCacheContextBlockType
N3tbb10interface626enumerable_thread_specificIN21Tf_StackedStorageTypeI20UsdStageCacheContextLb1EE12_StackHolderENS_23cache_aligned_allocatorIS5_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal8ets_baseILNS_18ets_key_usage_typeE1EEE
N3tbb8internal7no_copyE
N3tbb8internal9no_assignE
N3tbb10interface68internal13callback_leafIN21Tf_StackedStorageTypeI20UsdStageCacheContextLb1EE12_StackHolderENS1_20construct_by_defaultIS6_EEEE
N3tbb10interface68internal13callback_baseIN21Tf_StackedStorageTypeI20UsdStageCacheContextLb1EE12_StackHolderEEE
N3tbb10interface68internal20construct_by_defaultIN21Tf_StackedStorageTypeI20UsdStageCacheContextLb1EE12_StackHolderEEE
<BIN9UsdNotice20StageContentsChangedE
N9UsdNotice11StageNoticeE
N9UsdNotice14ObjectsChangedE
N9UsdNotice22StageEditTargetChangedE
11UsdClipsAPI
25SdfAbstractDataTypedValueI9SdfListOpINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
25SdfAbstractDataConstValue
25SdfAbstractDataTypedValueINSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec2dEE
25SdfAbstractDataTypedValueIdE
25SdfAbstractDataTypedValueI7TfTokenE
25SdfAbstractDataTypedValueI9SdfListOpI7TfTokenEE
11UsdModelAPI
N11UsdModelAPI14KindValidationE
30SdfAbstractDataConstTypedValueI7TfTokenE
15UsdListPosition
13UsdLoadPolicy
16SdfAttributeSpec
16UsdCollectionAPI
NSt3__110__function6__baseIFN5boost8optionalI12SdfReferenceEERKS4_EEE
NSt3__110__function6__baseIFN5boost8optionalI10SdfPayloadEERKS4_EEE
12SdfReference
N5boost14operators_impl21less_than_comparable1I12SdfReferenceNS0_20equality_comparable1IS2_NS0_16operators_detail10empty_baseIS2_EEEEEE
N5boost14operators_impl20equality_comparable1I12SdfReferenceNS0_16operators_detail10empty_baseIS2_EEEE
10SdfPayload
N5boost14operators_impl21less_than_comparable1I10SdfPayloadNS0_20equality_comparable1IS2_NS0_16operators_detail10empty_baseIS2_EEEEEE
N5boost14operators_impl20equality_comparable1I10SdfPayloadNS0_16operators_detail10empty_baseIS2_EEEE
19SdfRelationshipSpec
9SdfListOpIiE
8TfRefPtrI13PcpLayerStackE
NSt3__120__shared_ptr_pointerIPN10UsdZipFile5_ImplENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN10UsdZipFile5_ImplEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__114default_deleteIN10UsdZipFile5_ImplEEE
30SdfAbstractDataConstTypedValueIbE
25SdfAbstractDataTypedValueIbE
17UsdUsdaFileFormat
21Sdf_FileFormatFactoryI17UsdUsdaFileFormatE
13UsdSchemaBase
N13Usd_CrateFile11TimeSamplesE
N3tbb10strict_ppl16concurrent_queueIN13Usd_CrateFile9CrateFile15_BufferedOutput7_BufferENS_23cache_aligned_allocatorIS5_EEEE
N3tbb10strict_ppl8internal24concurrent_queue_base_v3IN13Usd_CrateFile9CrateFile15_BufferedOutput7_BufferEEE
N3tbb10strict_ppl8internal31concurrent_queue_page_allocatorE
N3tbb10strict_ppl16concurrent_queueIN13Usd_CrateFile9CrateFile15_BufferedOutput8_WriteOpENS_23cache_aligned_allocatorIS5_EEEE
N3tbb10strict_ppl8internal24concurrent_queue_base_v3IN13Usd_CrateFile9CrateFile15_BufferedOutput8_WriteOpEEE
NSt3__110__function6__funcIN16WorkSingularTask6_WakerI19WorkArenaDispatcherNS_6__bindIZN13Usd_CrateFile9CrateFile15_BufferedOutputC1EP7__sFILEEUlvE_JEEEEENS_9allocatorISD_EEFvRNS_6atomicImEEEEE
NSt3__110__function6__baseIFvRNS_6atomicImEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZNK16WorkSingularTask6_WakerIS3_NS6_IZN13Usd_CrateFile9CrateFile15_BufferedOutputC1EP7__sFILEEUlvE_JEEEEclERNS5_6atomicImEEEUlvE_JEEEEEEE
N3tbb10interface78internal13delegate_baseE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZNK16WorkSingularTask6_WakerI19WorkArenaDispatcherNS2_IZN13Usd_CrateFile9CrateFile15_BufferedOutputC1EP7__sFILEEUlvE_JEEEEclERNS1_6atomicImEEEUlvE_JEEEEE
N16WorkSingularTask6_WakerI19WorkArenaDispatcherNSt3__16__bindIZN13Usd_CrateFile9CrateFile15_BufferedOutputC1EP7__sFILEEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS8_O16TfSafeOutputFileRKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS4_O16TfSafeOutputFileRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS8_O16TfSafeOutputFileRKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEUlvE0_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS4_O16TfSafeOutputFileRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEUlvE0_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS8_O16TfSafeOutputFileRKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEUlvE1_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS4_O16TfSafeOutputFileRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEUlvE1_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS8_O16TfSafeOutputFileRKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEUlvE2_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS4_O16TfSafeOutputFileRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEUlvE2_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS8_O16TfSafeOutputFileRKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEUlvE3_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS4_O16TfSafeOutputFileRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEUlvE3_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS8_O16TfSafeOutputFileRKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEUlvE4_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile15_PackingContextC1EPS4_O16TfSafeOutputFileRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEUlvE4_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIRZN13Usd_CrateFile9CrateFile11_ReadTokensINS8_7_ReaderINS7_11_MmapStreamIPNS8_12_FileMappingEEEEEEEvT_E9MakeTokenJEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIRZN13Usd_CrateFile9CrateFile11_ReadTokensINS4_7_ReaderINS3_11_MmapStreamIPNS4_12_FileMappingEEEEEEEvT_E9MakeTokenJEEEEE
20Work_DetachedInvokerI27Work_AsyncSwapDestroyHelperINSt3__110unique_ptrIcNS1_14default_deleteIA_cEEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS7_21_PathItemHeader_0_0_1ENS8_7_ReaderINS7_11_MmapStreamIPNS8_12_FileMappingEEEEEEEvT0_RS3_7SdfPathEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS3_21_PathItemHeader_0_0_1ENS4_7_ReaderINS3_11_MmapStreamIPNS4_12_FileMappingEEEEEEEvT0_R19WorkArenaDispatcher7SdfPathEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS7_15_PathItemHeaderENS8_7_ReaderINS7_11_MmapStreamIPNS8_12_FileMappingEEEEEEEvT0_RS3_7SdfPathEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS3_15_PathItemHeaderENS4_7_ReaderINS3_11_MmapStreamIPNS4_12_FileMappingEEEEEEEvT0_R19WorkArenaDispatcher7SdfPathEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIRZN13Usd_CrateFile9CrateFile11_ReadTokensINS8_7_ReaderINS7_12_PreadStreamEEEEEvT_E9MakeTokenJEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIRZN13Usd_CrateFile9CrateFile11_ReadTokensINS4_7_ReaderINS3_12_PreadStreamEEEEEvT_E9MakeTokenJEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS7_21_PathItemHeader_0_0_1ENS8_7_ReaderINS7_12_PreadStreamEEEEEvT0_RS3_7SdfPathEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS3_21_PathItemHeader_0_0_1ENS4_7_ReaderINS3_12_PreadStreamEEEEEvT0_R19WorkArenaDispatcher7SdfPathEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS7_15_PathItemHeaderENS8_7_ReaderINS7_12_PreadStreamEEEEEvT0_RS3_7SdfPathEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS3_15_PathItemHeaderENS4_7_ReaderINS3_12_PreadStreamEEEEEvT0_R19WorkArenaDispatcher7SdfPathEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIRZN13Usd_CrateFile9CrateFile11_ReadTokensINS8_7_ReaderINS7_12_AssetStreamEEEEEvT_E9MakeTokenJEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIRZN13Usd_CrateFile9CrateFile11_ReadTokensINS4_7_ReaderINS3_12_AssetStreamEEEEEvT_E9MakeTokenJEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS7_21_PathItemHeader_0_0_1ENS8_7_ReaderINS7_12_AssetStreamEEEEEvT0_RS3_7SdfPathEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS3_21_PathItemHeader_0_0_1ENS4_7_ReaderINS3_12_AssetStreamEEEEEvT0_R19WorkArenaDispatcher7SdfPathEUlvE_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS7_15_PathItemHeaderENS8_7_ReaderINS7_12_AssetStreamEEEEEvT0_RS3_7SdfPathEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile14_ReadPathsImplINS3_15_PathItemHeaderENS4_7_ReaderINS3_12_AssetStreamEEEEEvT0_R19WorkArenaDispatcher7SdfPathEUlvE_JEEEEE
N13Usd_CrateFile8ValueRepE
20Work_DetachedInvokerI27Work_AsyncSwapDestroyHelperI12SdfPathTableIN13Usd_CrateFile9PathIndexEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN13Usd_CrateFile9CrateFile27_BuildDecompressedPathsImplERKNS5_6vectorIjNS5_9allocatorIjEEEERKNS9_IiNSA_IiEEEESI_m7SdfPathRS3_E4$_15JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN13Usd_CrateFile9CrateFile27_BuildDecompressedPathsImplERKNS1_6vectorIjNS1_9allocatorIjEEEERKNS5_IiNS6_IiEEEESE_m7SdfPathR19WorkArenaDispatcherE4$_15JEEEEE
7VtArrayI7GfQuathE
NSt3__16vectorI7SdfPathNS_9allocatorIS1_EEEE
NSt3__16vectorIdNS_9allocatorIdEEEE
NSt3__113__vector_baseIdNS_9allocatorIdEEEE
NSt3__16vectorI14SdfLayerOffsetNS_9allocatorIS1_EEEE
NSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE
NSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE
7VtValue
20SdfUnregisteredValue
N5boost14operators_impl16operators_detail10empty_baseI20SdfUnregisteredValueEE
7VtArrayI11SdfTimeCodeE
11SdfTimeCode
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
NSt3__110__function6__baseIFN13Usd_CrateFile8ValueRepERK7VtValueEEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
NSt3__110__function6__baseIFvN13Usd_CrateFile8ValueRepEP7VtValueEEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIbEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIhEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIiEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIjEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIxEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIyEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlRK7VtValueE_NS_9allocatorISA_EEFNS2_8ValueRepES9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIN8pxr_half4halfEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIfEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlRK7VtValueE_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS8_EEFvS5_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationIdEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEvvEUlRK7VtValueE_NS8_ISE_EEFNS2_8ValueRepESD_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS8_ISE_EEFvSB_SD_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS8_ISE_EEFvSB_SD_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS8_ISE_EEFvSB_SD_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7TfTokenEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfAssetPathEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatdEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuatfEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI7GfQuathE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfQuathEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2dEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2fEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2hEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec2iEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3dEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3fEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3hEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec3iEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4dEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4fEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4hEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7GfVec4iEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix2dEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix3dEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10GfMatrix4dEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12VtDictionaryEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlRK7VtValueE_NS_9allocatorISB_EEFNS2_8ValueRepESA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7TfTokenEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEvvEUlRK7VtValueE_NS9_ISG_EEFNS2_8ValueRepESF_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS9_ISG_EEFvSD_SF_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS9_ISG_EEFvSD_SF_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS9_ISG_EEFvSD_SF_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlRK7VtValueE_NS_9allocatorISB_EEFNS2_8ValueRepESA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI7SdfPathEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlRK7VtValueE_NS_9allocatorISB_EEFNS2_8ValueRepESA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI12SdfReferenceEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlRK7VtValueE_NS_9allocatorISA_EEFNS2_8ValueRepES9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIiEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlRK7VtValueE_NS_9allocatorISA_EEFNS2_8ValueRepES9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIxEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlRK7VtValueE_NS_9allocatorISA_EEFNS2_8ValueRepES9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIjEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlRK7VtValueE_NS_9allocatorISA_EEFNS2_8ValueRepES9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISA_EEFvS7_S9_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpIyEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7SdfPathNS_9allocatorIS6_EEEEEEvvEUlRK7VtValueE_NS7_ISD_EEFNS2_8ValueRepESC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7SdfPathNS2_9allocatorIS4_EEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7SdfPathNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7SdfPathNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7SdfPathNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7SdfPathNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7SdfPathNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7SdfPathNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7TfTokenNS_9allocatorIS6_EEEEEEvvEUlRK7VtValueE_NS7_ISD_EEFNS2_8ValueRepESC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7TfTokenNS2_9allocatorIS4_EEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7TfTokenNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7TfTokenNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7TfTokenNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7TfTokenNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI7TfTokenNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI7TfTokenNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI12SdfSpecifierEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfPermissionEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI14SdfVariabilityEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_NS_4lessISB_EENS9_INS_4pairIKSB_SB_EEEEEEEEvvEUlRK7VtValueE_NS9_ISM_EEFNS2_8ValueRepESL_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_NS2_4lessIS9_EENS7_INS2_4pairIKS9_S9_EEEEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_NS_4lessISB_EENS9_INS_4pairIKSB_SB_EEEEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS9_ISM_EEFvSJ_SL_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_NS2_4lessIS9_EENS7_INS2_4pairIKS9_S9_EEEEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_NS_4lessISB_EENS9_INS_4pairIKSB_SB_EEEEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS9_ISM_EEFvSJ_SL_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_NS2_4lessIS9_EENS7_INS2_4pairIKS9_S9_EEEEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_NS_4lessISB_EENS9_INS_4pairIKSB_SB_EEEEEEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS9_ISM_EEFvSJ_SL_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_NS2_4lessIS9_EENS7_INS2_4pairIKS9_S9_EEEEEEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS2_11TimeSamplesEEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_11TimeSamplesEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS2_11TimeSamplesEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_11TimeSamplesEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS2_11TimeSamplesEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_11TimeSamplesEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS2_11TimeSamplesEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_11TimeSamplesEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI10SdfPayloadEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorIdNS_9allocatorIdEEEEEEvvEUlRK7VtValueE_NS6_ISC_EEFNS2_8ValueRepESB_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorIdNS2_9allocatorIdEEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorIdNS_9allocatorIdEEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS6_ISC_EEFvS9_SB_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorIdNS2_9allocatorIdEEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorIdNS_9allocatorIdEEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS6_ISC_EEFvS9_SB_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorIdNS2_9allocatorIdEEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorIdNS_9allocatorIdEEEEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS6_ISC_EEFvS9_SB_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorIdNS2_9allocatorIdEEEEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI14SdfLayerOffsetNS_9allocatorIS6_EEEEEEvvEUlRK7VtValueE_NS7_ISD_EEFNS2_8ValueRepESC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI14SdfLayerOffsetNS2_9allocatorIS4_EEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI14SdfLayerOffsetNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI14SdfLayerOffsetNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI14SdfLayerOffsetNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI14SdfLayerOffsetNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorI14SdfLayerOffsetNS_9allocatorIS6_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS7_ISD_EEFvSA_SC_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorI14SdfLayerOffsetNS2_9allocatorIS4_EEEEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEEEEvvEUlRK7VtValueE_NS9_ISH_EEFNS2_8ValueRepESG_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE_NS9_ISH_EEFvSE_SG_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS9_ISH_EEFvSE_SG_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_ISB_EEEEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS9_ISH_EEFvSE_SG_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI13SdfValueBlockEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlRKS5_E_NS_9allocatorIS8_EEFNS2_8ValueRepES7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlRKS2_E_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlNS2_8ValueRepEPS5_E_NS_9allocatorIS8_EEFvS6_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlNS_8ValueRepEPS2_E_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlNS2_8ValueRepEPS5_E0_NS_9allocatorIS8_EEFvS6_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlNS_8ValueRepEPS2_E0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlNS2_8ValueRepEPS5_E1_NS_9allocatorIS8_EEFvS6_S7_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI7VtValueEEvvEUlNS_8ValueRepEPS2_E1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI20SdfUnregisteredValueEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlRK7VtValueE_NS_9allocatorISB_EEFNS2_8ValueRepESA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI20SdfUnregisteredValueEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI10SdfPayloadEEEvvEUlRK7VtValueE_NS_9allocatorISB_EEFNS2_8ValueRepESA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI10SdfPayloadEEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI10SdfPayloadEEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI10SdfPayloadEEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI10SdfPayloadEEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI10SdfPayloadEEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI10SdfPayloadEEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorISB_EEFvS8_SA_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI9SdfListOpI10SdfPayloadEEEvvEUlNS_8ValueRepEP7VtValueE1_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI11SdfTimeCodeEEvvEUlRK7VtValueE_NS_9allocatorIS9_EEFNS2_8ValueRepES8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI11SdfTimeCodeEEvvEUlRK7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI11SdfTimeCodeEEvvEUlNS2_8ValueRepEP7VtValueE_NS_9allocatorIS9_EEFvS6_S8_EEE
N7VtArrayI11SdfTimeCodeE9_StreamerE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI11SdfTimeCodeEEvvEUlNS_8ValueRepEP7VtValueE_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI11SdfTimeCodeEEvvEUlNS2_8ValueRepEP7VtValueE0_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI11SdfTimeCodeEEvvEUlNS_8ValueRepEP7VtValueE0_
NSt3__110__function6__funcIZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI11SdfTimeCodeEEvvEUlNS2_8ValueRepEP7VtValueE1_NS_9allocatorIS9_EEFvS6_S8_EEE
ZN13Usd_CrateFile9CrateFile19_DoTypeRegistrationI11SdfTimeCodeEEvvEUlNS_8ValueRepEP7VtValueE1_
_@17UsdSchemaRegistry
10TfWeakBase
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN17UsdSchemaRegistry23_FindAndAddPluginSchemaEvE3$_0JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN17UsdSchemaRegistry23_FindAndAddPluginSchemaEvE3$_0JEEEEE
N3tbb10interface98internal9start_forINS_13blocked_rangeImEEZ16WorkParallelForNIZZN17UsdSchemaRegistry23_FindAndAddPluginSchemaEvENK3$_0clEvEUlmmE_EvmOT_mE21Work_ParallelForN_TBBKNS_16auto_partitionerEEE
N3tbb10interface98internal9flag_taskE
9TfWeakPtrI10PlugPluginE
16UsdUsdFileFormat
21Sdf_FileFormatFactoryI16UsdUsdFileFormatE
&3dd
1>725SdfAbstractDataTypedValueI7VtArrayI12SdfAssetPathEE
25SdfAbstractDataTypedValueI12SdfAssetPathE
25SdfAbstractDataTypedValueI12VtDictionaryE
9TfWeakPtrI13PcpLayerStackE
15TfWeakPtrFacadeI9TfWeakPtr13PcpLayerStackE
25SdfAbstractDataTypedValueIiE
25SdfAbstractDataTypedValueI7VtArrayIiEE
25SdfAbstractDataTypedValueI7VtArrayIjEE
25SdfAbstractDataTypedValueI7VtArrayIxEE
25SdfAbstractDataTypedValueIN8pxr_half4halfEE
25SdfAbstractDataTypedValueI7VtArrayIN8pxr_half4halfEEE
25SdfAbstractDataTypedValueI7VtArrayIfEE
25SdfAbstractDataTypedValueI7VtArrayIdEE
25SdfAbstractDataTypedValueI11SdfTimeCodeE
25SdfAbstractDataTypedValueI7VtArrayI11SdfTimeCodeEE
25SdfAbstractDataTypedValueI7VtArrayINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
25SdfAbstractDataTypedValueI7VtArrayI7TfTokenEE
25SdfAbstractDataTypedValueI10GfMatrix2dE
25SdfAbstractDataTypedValueI7VtArrayI10GfMatrix2dEE
25SdfAbstractDataTypedValueI10GfMatrix3dE
25SdfAbstractDataTypedValueI7VtArrayI10GfMatrix3dEE
25SdfAbstractDataTypedValueI10GfMatrix4dE
25SdfAbstractDataTypedValueI7VtArrayI10GfMatrix4dEE
25SdfAbstractDataTypedValueI7GfQuathE
25SdfAbstractDataTypedValueI7VtArrayI7GfQuathEE
25SdfAbstractDataTypedValueI7GfQuatfE
25SdfAbstractDataTypedValueI7VtArrayI7GfQuatfEE
25SdfAbstractDataTypedValueI7GfQuatdE
25SdfAbstractDataTypedValueI7VtArrayI7GfQuatdEE
25SdfAbstractDataTypedValueI7GfVec2hE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec2hEE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec2fEE
25SdfAbstractDataTypedValueI7GfVec2dE
25SdfAbstractDataTypedValueI7GfVec3hE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec3hEE
25SdfAbstractDataTypedValueI7GfVec3fE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec3fEE
25SdfAbstractDataTypedValueI7GfVec3dE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec3dEE
25SdfAbstractDataTypedValueI7GfVec4hE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec4hEE
25SdfAbstractDataTypedValueI7GfVec4fE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec4fEE
25SdfAbstractDataTypedValueI7GfVec4dE
25SdfAbstractDataTypedValueI7VtArrayI7GfVec4dEE
%1mm
X^e25SdfAbstractDataTypedValueINSt3__16vectorI7TfTokenNS0_9allocatorIS2_EEEEE
NSt3__110__function6__funcIZNK7UsdPrim25_GetPropertiesInNamespaceERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbE3$_1NS6_ISB_EEFbRK7TfTokenEEE
NSt3__110__function6__baseIFbRK7TfTokenEEE
ZNK7UsdPrim25_GetPropertiesInNamespaceERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbE3$_1
N3tbb10empty_taskE
(4``
KQX20UsdInterpolationType
23Usd_UntypedInterpolator
20Usd_InterpolatorBase
20Usd_HeldInterpolatorI7VtValueE
22Usd_LinearInterpolatorIN8pxr_half4halfEE
22Usd_LinearInterpolatorI7VtArrayIN8pxr_half4halfEEE
22Usd_LinearInterpolatorIfE
22Usd_LinearInterpolatorI7VtArrayIfEE
22Usd_LinearInterpolatorIdE
22Usd_LinearInterpolatorI7VtArrayIdEE
22Usd_LinearInterpolatorI11SdfTimeCodeE
22Usd_LinearInterpolatorI7VtArrayI11SdfTimeCodeEE
22Usd_LinearInterpolatorI10GfMatrix2dE
22Usd_LinearInterpolatorI7VtArrayI10GfMatrix2dEE
22Usd_LinearInterpolatorI10GfMatrix3dE
22Usd_LinearInterpolatorI7VtArrayI10GfMatrix3dEE
22Usd_LinearInterpolatorI10GfMatrix4dE
22Usd_LinearInterpolatorI7VtArrayI10GfMatrix4dEE
22Usd_LinearInterpolatorI7GfVec2dE
22Usd_LinearInterpolatorI7VtArrayI7GfVec2dEE
22Usd_LinearInterpolatorI7GfVec2fE
22Usd_LinearInterpolatorI7VtArrayI7GfVec2fEE
22Usd_LinearInterpolatorI7GfVec2hE
22Usd_LinearInterpolatorI7VtArrayI7GfVec2hEE
22Usd_LinearInterpolatorI7GfVec3dE
22Usd_LinearInterpolatorI7VtArrayI7GfVec3dEE
22Usd_LinearInterpolatorI7GfVec3fE
22Usd_LinearInterpolatorI7VtArrayI7GfVec3fEE
22Usd_LinearInterpolatorI7GfVec3hE
22Usd_LinearInterpolatorI7VtArrayI7GfVec3hEE
22Usd_LinearInterpolatorI7GfVec4dE
22Usd_LinearInterpolatorI7VtArrayI7GfVec4dEE
22Usd_LinearInterpolatorI7GfVec4fE
22Usd_LinearInterpolatorI7VtArrayI7GfVec4fEE
22Usd_LinearInterpolatorI7GfVec4hE
22Usd_LinearInterpolatorI7VtArrayI7GfVec4hEE
22Usd_LinearInterpolatorI7GfQuatdE
22Usd_LinearInterpolatorI7VtArrayI7GfQuatdEE
22Usd_LinearInterpolatorI7GfQuatfE
22Usd_LinearInterpolatorI7VtArrayI7GfQuatfEE
22Usd_LinearInterpolatorI7GfQuathE
22Usd_LinearInterpolatorI7VtArrayI7GfQuathEE
N17UsdStageLoadRules4RuleE
17UsdUsdzFileFormat
21Sdf_FileFormatFactoryI17UsdUsdzFileFormatE
20UsdStageCacheRequest
8TfRefPtrI10Tf_RemnantE
8TfRefPtrI8UsdStageE
8UsdTyped
20UsdResolveInfoSource
23USD_CHANGES__DebugCodes
17UsdUsdcFileFormat
21Sdf_FileFormatFactoryI17UsdUsdcFileFormatE
8TfRefPtrI13Usd_CrateDataE
NSt3__120__shared_ptr_pointerIP8Usd_ClipNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI8Usd_ClipE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI8Usd_ClipEE
4@9NN
8UsdStage
N8UsdStage14InitialLoadSetE
30SdfAbstractDataConstTypedValueI12SdfSpecifierE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_0JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_0JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_1JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_1JEEEEE
20Work_DetachedInvokerI27Work_AsyncMoveDestroyHelperINSt3__16vectorI7SdfPathNS1_9allocatorIS3_EEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_2JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_2JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_3JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_3JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_4JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_4JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_5JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_5JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8UsdStage6_CloseEvE3$_6JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8UsdStage6_CloseEvE3$_6JEEEEE
20Work_DetachedInvokerI27Work_AsyncSwapDestroyHelperI9TfHashMapI7SdfPathN5boost13intrusive_ptrI12Usd_PrimDataEENS2_4HashENSt3__18equal_toIS2_EENS8_9allocatorINS8_4pairIKS2_S6_EEEEEEE
20Usd_StageOpenRequest
25SdfAbstractDataTypedValueI9SdfListOpIiEE
25SdfAbstractDataTypedValueI9SdfListOpIxEE
25SdfAbstractDataTypedValueI9SdfListOpIjEE
25SdfAbstractDataTypedValueI9SdfListOpIyEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataPKS8_PK22UsdStagePopulationMaskRK7SdfPathEJPS7_RS9_SB_PSC_SH_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataPKS4_PK22UsdStagePopulationMaskRK7SdfPathEJPS3_RS5_S7_PS8_SD_EEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataPKS8_PK22UsdStagePopulationMaskRK7SdfPathEJPS7_RS9_RSB_RSE_SH_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataPKS4_PK22UsdStagePopulationMaskRK7SdfPathEJPS3_RS5_RS7_RSA_SD_EEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataEJPS7_S9_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataEJPS3_S5_EEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataEJPS7_RS9_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIM8UsdStageFvP12Usd_PrimDataEJPS3_RS5_EEEEE
N8TfNotice10_DelivererI9TfWeakPtrI8UsdStageES1_I8SdfLayerEMS2_FvRKN9SdfNotice27LayersDidChangeSentPerLayerEES7_EE
N8TfNotice18_StandardDelivererINS_10_DelivererI9TfWeakPtrI8UsdStageES2_I8SdfLayerEMS3_FvRKN9SdfNotice27LayersDidChangeSentPerLayerEES8_EEEE
25SdfAbstractDataTypedValueI12SdfSpecifierE
25SdfAbstractDataTypedValueI14SdfVariabilityE
9TfWeakPtrIK8SdfLayerE
15TfWeakPtrFacadeI9TfWeakPtrK8SdfLayerE
20Usd_HeldInterpolatorIbE
20Usd_HeldInterpolatorIiE
20Usd_HeldInterpolatorI7VtArrayIiEE
30SdfAbstractDataConstTypedValueIiE
30SdfAbstractDataConstTypedValueI7VtArrayIiEE
20Usd_HeldInterpolatorI7VtArrayIjEE
20Usd_HeldInterpolatorI7VtArrayIxEE
20Usd_HeldInterpolatorIfE
20Usd_HeldInterpolatorI7VtArrayIfEE
20Usd_HeldInterpolatorIdE
20Usd_HeldInterpolatorI7VtArrayIdEE
30SdfAbstractDataConstTypedValueI11SdfTimeCodeE
30SdfAbstractDataConstTypedValueI7VtArrayI11SdfTimeCodeEE
20Usd_HeldInterpolatorINSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE
20Usd_HeldInterpolatorI7VtArrayINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
20Usd_HeldInterpolatorI7TfTokenE
20Usd_HeldInterpolatorI7VtArrayI7TfTokenEE
30SdfAbstractDataConstTypedValueI7VtArrayI7TfTokenEE
20Usd_HeldInterpolatorI10GfMatrix4dE
20Usd_HeldInterpolatorI7VtArrayI10GfMatrix4dEE
30SdfAbstractDataConstTypedValueI10GfMatrix4dE
20Usd_HeldInterpolatorI7VtArrayI7GfQuathEE
20Usd_HeldInterpolatorI7VtArrayI7GfQuatfEE
20Usd_HeldInterpolatorI7GfVec2fE
30SdfAbstractDataConstTypedValueI7VtArrayI7GfVec2fEE
20Usd_HeldInterpolatorI7GfVec2dE
20Usd_HeldInterpolatorI7VtArrayI7GfVec3hEE
20Usd_HeldInterpolatorI7VtArrayI7GfVec3fEE
30SdfAbstractDataConstTypedValueI7VtArrayI7GfVec3fEE
30SdfAbstractDataConstTypedValueINSt3__13mapId7VtValueNS0_4lessIdEENS0_9allocatorINS0_4pairIKdS2_EEEEEEE
30SdfAbstractDataConstTypedValueI12VtDictionaryE
16UsdAPISchemaBase
 ,qq
\bi77
13Usd_CrateData
N3tbb10interface98internal9start_forINS_13blocked_rangeINSt3__111__wrap_iterIP7SdfPathEEEENS1_23quick_sort_pretest_bodyIS8_ZN17Usd_CrateDataImpl4SaveERKNS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEUlRKS6_SL_E_EEKNS_16auto_partitionerEEE
N3tbb10interface98internal9start_forINS1_16quick_sort_rangeINSt3__111__wrap_iterIP7SdfPathEEZN17Usd_CrateDataImpl4SaveERKNS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEUlRKS6_SJ_E_EENS1_15quick_sort_bodyIS8_SK_EEKNS_16auto_partitionerEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE_JEEEEE
N3tbb10interface98internal9start_forINS_13blocked_rangeINSt3__111__wrap_iterIPN13Usd_CrateFile9CrateFile4SpecEEEEENS1_23quick_sort_pretest_bodyISA_ZZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvENKUlvE_clEvEUlRKS8_SG_E_EEKNS_16auto_partitionerEEE
N3tbb10interface98internal9start_forINS1_16quick_sort_rangeINSt3__111__wrap_iterIPN13Usd_CrateFile9CrateFile4SpecEEEZZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvENKUlvE_clEvEUlRKS8_SE_E_EENS1_15quick_sort_bodyISA_SF_EEKNS_16auto_partitionerEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE0_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE0_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE1_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE1_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE2_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE2_JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE3_JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvEUlvE3_JEEEEE
N3tbb10interface98internal9start_forINS_13blocked_rangeImEENS_8internal17parallel_for_bodyIZZN17Usd_CrateDataImpl22_PopulateFromCrateFileEvENKUlvE3_clEvEUlmE_mEEKNS_16auto_partitionerEEE
20Work_DetachedInvokerI27Work_AsyncMoveDestroyHelperINSt3__16vectorIN17Usd_CrateDataImpl9_SpecTypeENS1_9allocatorIS4_EEEEEE
20Work_DetachedInvokerI27Work_AsyncMoveDestroyHelperIN5boost9container8flat_mapI7SdfPathN17Usd_CrateDataImpl13_FlatSpecDataENS4_12FastLessThanENS2_13new_allocatorINSt3__14pairIS4_S6_EEEEEEEE
20Work_DetachedInvokerI27Work_AsyncMoveDestroyHelperINSt3__110unique_ptrINS1_13unordered_mapI7SdfPathN17Usd_CrateDataImpl12_MapSpecDataENS4_4HashENS1_8equal_toIS4_EENS1_9allocatorINS1_4pairIKS4_S6_EEEEEENS1_14default_deleteISF_EEEEEE
16Usd_UsdzResolver
N3tbb10interface626enumerable_thread_specificINSt3__16vectorINS2_10shared_ptrIN21Usd_UsdzResolverCache6_CacheEEENS2_9allocatorIS7_EEEENS_23cache_aligned_allocatorISA_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafINSt3__16vectorINS3_10shared_ptrIN21Usd_UsdzResolverCache6_CacheEEENS3_9allocatorIS8_EEEENS1_20construct_by_defaultISB_EEEE
N3tbb10interface68internal13callback_baseINSt3__16vectorINS3_10shared_ptrIN21Usd_UsdzResolverCache6_CacheEEENS3_9allocatorIS8_EEEEEE
N3tbb10interface68internal20construct_by_defaultINSt3__16vectorINS3_10shared_ptrIN21Usd_UsdzResolverCache6_CacheEEENS3_9allocatorIS8_EEEEEE
25Ar_PackageResolverFactoryI16Usd_UsdzResolverE
29Ar_PackageResolverFactoryBase
N12_GLOBAL__N_16_AssetE
NSt3__120__shared_ptr_pointerIPKcZN12_GLOBAL__N_16_Asset9GetBufferEvE8_DeleterNS_9allocatorIS1_EEEE
ZN12_GLOBAL__N_16_Asset9GetBufferEvE8_Deleter
NSt3__110shared_ptrIN21Usd_UsdzResolverCache6_CacheEEE
NSt3__120__shared_ptr_emplaceIN21Usd_UsdzResolverCache6_CacheENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_16_AssetENS_10shared_ptrI7ArAssetE27__shared_ptr_default_deleteIS5_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrI7ArAssetE27__shared_ptr_default_deleteIS1_N12_GLOBAL__N_16_AssetEEE
NSt3__114default_deleteIN12_GLOBAL__N_16_AssetEEE
N17ArResolverContext8_UntypedE
17ArPackageResolver
28AR_RESOLVER_INIT__DebugCodes
7ArAsset
17ArDefaultResolver
18Ar_ResolverFactoryI17ArDefaultResolverE
22Ar_ResolverFactoryBase
N3tbb10interface626enumerable_thread_specificINSt3__16vectorINS2_10shared_ptrIN17ArDefaultResolver6_CacheEEENS2_9allocatorIS7_EEEENS_23cache_aligned_allocatorISA_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafINSt3__16vectorINS3_10shared_ptrIN17ArDefaultResolver6_CacheEEENS3_9allocatorIS8_EEEENS1_20construct_by_defaultISB_EEEE
N3tbb10interface68internal13callback_baseINSt3__16vectorINS3_10shared_ptrIN17ArDefaultResolver6_CacheEEENS3_9allocatorIS8_EEEEEE
N3tbb10interface68internal20construct_by_defaultINSt3__16vectorINS3_10shared_ptrIN17ArDefaultResolver6_CacheEEENS3_9allocatorIS8_EEEEEE
N3tbb10interface626enumerable_thread_specificINSt3__16vectorIPK24ArDefaultResolverContextNS2_9allocatorIS6_EEEENS_23cache_aligned_allocatorIS9_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafINSt3__16vectorIPK24ArDefaultResolverContextNS3_9allocatorIS7_EEEENS1_20construct_by_defaultISA_EEEE
N3tbb10interface68internal13callback_baseINSt3__16vectorIPK24ArDefaultResolverContextNS3_9allocatorIS7_EEEEEE
N3tbb10interface68internal20construct_by_defaultINSt3__16vectorIPK24ArDefaultResolverContextNS3_9allocatorIS7_EEEEEE
NSt3__120__shared_ptr_pointerIP17ArFilesystemAssetNS_10shared_ptrI7ArAssetE27__shared_ptr_default_deleteIS4_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI7ArAssetE27__shared_ptr_default_deleteIS1_17ArFilesystemAssetEE
N17ArResolverContext6_TypedI24ArDefaultResolverContextEE
24ArDefaultResolverContext
NSt3__120__shared_ptr_pointerIPN17ArResolverContext6_TypedI24ArDefaultResolverContextEENS_10shared_ptrINS1_8_UntypedEE27__shared_ptr_default_deleteIS7_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN17ArResolverContext8_UntypedEE27__shared_ptr_default_deleteIS2_NS1_6_TypedI24ArDefaultResolverContextEEEE
NSt3__110shared_ptrIN17ArDefaultResolver6_CacheEEE
NSt3__120__shared_ptr_emplaceIN17ArDefaultResolver6_CacheENS_9allocatorIS2_EEEE
10ArResolver
N12_GLOBAL__N_19_ResolverE
NSt3__120__shared_ptr_pointerIPN12_GLOBAL__N_19_Resolver16_PackageResolverENS_10shared_ptrIS3_E27__shared_ptr_default_deleteIS3_S3_EENS_9allocatorIS3_EEEE
NSt3__110shared_ptrIN12_GLOBAL__N_19_Resolver16_PackageResolverEE27__shared_ptr_default_deleteIS3_S3_EE
NSt3__120__shared_ptr_pointerIP17ArPackageResolverNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI17ArPackageResolverE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__16vectorI7VtValueNS_9allocatorIS1_EEEE
NSt3__113__vector_baseI7VtValueNS_9allocatorIS1_EEEE
NSt3__110__function6__funcIZN12_GLOBAL__N_115_CreateResolverERK6TfTypePNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_1NS9_ISD_EEFvvEEE
NSt3__110__function6__baseIFvvEEE
ZN12_GLOBAL__N_115_CreateResolverERK6TfTypePNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE3$_1
17ArFilesystemAsset
NSt3__120__shared_ptr_pointerIPNS_10unique_ptrIKc13Arch_UnmapperEENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrINS_10unique_ptrIKc13Arch_UnmapperEEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPKcZN17ArFilesystemAsset9GetBufferEvE8_DeleterNS_9allocatorIS1_EEEE
ZN17ArFilesystemAsset9GetBufferEvE8_Deleter
13ArMemoryAsset
NSt3__120__shared_ptr_pointerIPKcZN13ArMemoryAsset9GetBufferEvE13customDeleterNS_9allocatorIS1_EEEE
ZN13ArMemoryAsset9GetBufferEvE13customDeleter
16ArMemoryResolver
18Ar_ResolverFactoryI16ArMemoryResolverE
NSt3__120__shared_ptr_pointerIP13ArMemoryAssetNS_10shared_ptrI7ArAssetE27__shared_ptr_default_deleteIS4_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI7ArAssetE27__shared_ptr_default_deleteIS1_13ArMemoryAssetEE
NSt3__16chrono8durationIxNS_5ratioILl1ELl1000000000EEEEE
@(#)PROGRAM:ModelIO  PROJECT:ModelKit-258.1
NSt3__110__function6__funcIZN7ModelIO6OctreeC1EP8MDLAssetifE3$_1NS_9allocatorIS6_EEFPNS2_13OctreePayloadEvEEE
NSt3__110__function6__baseIFPN7ModelIO13OctreePayloadEvEEE
ZN7ModelIO6OctreeC1EP8MDLAssetifE3$_1
NSt3__110__function6__funcIZN7ModelIO6OctreeC1EP9MDLObjectifE3$_3NS_9allocatorIS6_EEFPNS2_13OctreePayloadEvEEE
ZN7ModelIO6OctreeC1EP9MDLObjectifE3$_3
GZ*oG8
? D2
?fff?
L=GZ*oG8
;N7ModelIO10RTGeometryE
BPHN9mdlio_obj12MDLOBJLoaderE
13MDLLoaderBase
N10OpenSubdiv10v3_0_0_RC23Vtr8internal14QuadRefinementE
;333?
*?UUU?
@CV
dO@)!x
%ffffff
?ffffff
?ffffff
VUU
VUU
i\)7.
blnOq
sy2-
i\)7.
blnOq
sy2-
,<JXuJJ
1=6N3tbb8internal3rml14private_serverE
N3tbb8internal3rml10tbb_serverE
N3rml6serverE
N3rml16versioned_objectE
7VtArrayItE
N7VtArrayItE9_StreamerE
:N9Imath_2_212ZeroScaleExcE
N3tbb8internal27allowed_parallelism_controlE
N3tbb8internal6paddedINS0_15control_storageELm128EEE
N3tbb8internal11padded_baseINS0_15control_storageELm128ELm32EEE
N3tbb8internal15control_storageE
N3tbb8internal18stack_size_controlE
N10OpenSubdiv10v3_0_0_RC23Vtr8internal13TriRefinementE
12Vt_ArrayBase
N7VtArrayI7GfVec3fE9_StreamerE
NSt3__120__shared_ptr_pointerIPN7ModelIO12SkiplistNodeENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN7ModelIO12SkiplistNodeEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__114default_deleteIN7ModelIO12SkiplistNodeEEE
12MDLPLYLoader
NSt3__120__shared_ptr_pointerIPN12MDLPLYLoader6DetailENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN12MDLPLYLoader6DetailEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__114default_deleteIN12MDLPLYLoader6DetailEEE
CC_wCE
CC_wCE
CC_wCE
!}j'
N7ModelIO26RTPhysicallyPlausibleLightE
N7ModelIO7RTLightE
N7ModelIO11RTAreaLightE
N7ModelIO10RTIESLightE
N3tbb10interface78internal14delegated_taskE
L2L:D
NSt3__120__shared_ptr_emplaceIN7ModelIO12RTRenderableENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_pointerIPN7ModelIO12RTRenderableENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN7ModelIO12RTRenderableEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__114default_deleteIN7ModelIO12RTRenderableEEE
N7Alembic3Abc3v1013OSchemaObjectINS_7AbcGeom3v1011OSubDSchemaEEE
N7Alembic3Abc3v107OSchemaINS_7AbcGeom3v1014SubDSchemaInfoEEE
N7Alembic7AbcGeom3v1015OGeomBaseSchemaINS1_17FaceSetSchemaInfoEEE
N7Alembic3Abc3v107OSchemaINS_7AbcGeom3v1017FaceSetSchemaInfoEEE
N7Alembic3Abc3v1013OSchemaObjectINS_7AbcGeom3v1015OPolyMeshSchemaEEE
N7Alembic3Abc3v107OSchemaINS_7AbcGeom3v1018PolyMeshSchemaInfoEEE
&1;EOV]dkr}
N3tbb14bad_last_allocE
N3tbb12missing_waitE
N3tbb27invalid_multiple_schedulingE
N3tbb13improper_lockE
N3tbb10user_abortE
TBB: VERSION
2017.0
TBB: INTERFACE VERSION
9106
TBB: BUILD_DATE
Fri Apr 24 00:27:39 UTC 2020
TBB: BUILD_HOST
ma0103c-dhcp94 (i386)
TBB: BUILD_OS
Mac OS X version 10.16
TBB: BUILD_KERNEL
Darwin Kernel Version 20.0.0: Wed Feb 12 18:02:59 PST 2020; root:xnu-6761.0.0.0.3~12/DEVELOPMENT_X86_64
TBB: BUILD_CLANG
Apple clang version 11.0.3 (clang-1103.0.27.9) (-macos10.15-objc-selector-opts)
TBB: BUILD_XCODE
Xcode 11.4
TBB: BUILD_TARGET
intel64 on cc_os10.16
TBB: BUILD_COMMAND
clang++ -g -O2 -DUSE_PTHREAD -stdlib=libc++ -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-non-virtual-dtor -Wno-dangling-else -I../../src -I../../src/rml/include -I../../include -I.
TBB: TBB_USE_DEBUG
TBB: TBB_USE_ASSERT
TBB: DO_ITT_NOTIFY
undefined
>J{s
>J{s
>J{s
>J{s
..>F
_??5
_??5
(L?i
_??5
_??5
..>F
O?,e
O?,e
>J{s?
>J{s??W
>J{s?o
>J{s?
J{s?o
J{s??W
J{s?
J{s?!
J{s?
J{s?
7VtArrayI7GfVec3fE
7GfVec3f
333?
3N7ModelIO8RTCameraE
12MDLUSDLoader
NSt3__120__shared_ptr_pointerIPN12MDLUSDLoader6DetailENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN12MDLUSDLoader6DetailEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__114default_deleteIN12MDLUSDLoader6DetailEEE
N3tbb8internal6marketE
N3tbb8internal3rml10tbb_clientE
N3rml6clientE
7VtArrayI10GfMatrix4fE
N7VtArrayI10GfMatrix4fE9_StreamerE
N7Iex_2_27BaseExcE
-.N3tbb8internal17generic_schedulerE
N3tbb8internal9schedulerE
N3rml3jobE
N3tbb8internal19intrusive_list_nodeE
N3tbb8internal15scheduler_stateE
N3tbb8internal16custom_schedulerINS0_22DefaultSchedulerTraitsEEE
N3tbb8internal16custom_schedulerINS0_20IntelSchedulerTraitsEEE
P?UUUUUU
fff?/
Fd0_
?N7ModelIO22LambertianDistributionE
N7ModelIO43BidirectionalScatteringDistributionFunctionE
N7ModelIO31PhysicallyPlausibleDistributionE
N7ModelIO12RTRenderableE
NSt3__110__function6__funcIZNK7ModelIO12RTRenderable6octreeEvE3$_0NS_9allocatorIS4_EEFPNS2_13OctreePayloadEvEEE
ZNK7ModelIO12RTRenderable6octreeEvE3$_0
vH7B
W4vC
N10OpenSubdiv10v3_0_0_RC23Vtr8internal10RefinementE
=fff?
i\)7.
blnOq
sy2-
i\)7.
blnOq
sy2-
-;eU
U1(\Q
mSx@
b}$l
~)p$w
11eU%
z^KD
N3tbb13tbb_exceptionE
N3tbb18captured_exceptionE
 #&+<048
;N3tbb4taskE
N3tbb10interface58internal9task_baseE
tm<
tm<
tm<
tm<
tm<
tm<
tm<
tm<
=18TraceAggregateNode
18TraceAggregateTree
8TfRefPtrI14TraceEventNodeE
N15TraceCollection7VisitorE
27TraceReporterDataSourceBase
23TraceCounterAccumulator
13TraceReporter
14TraceEventNode
14TraceEventTree
N12_GLOBAL__N_121_GlobalReporterHolderE
8TfRefPtrI18TraceAggregateNodeE
8TfRefPtrI18TraceAggregateTreeE
9TfWeakPtrI18TraceAggregateNodeE
15TfWeakPtrFacadeI9TfWeakPtr18TraceAggregateNodeE
8TfRefPtrI14TraceEventTreeE
9TfWeakPtrI13TraceReporterE
15TfWeakPtrFacadeI9TfWeakPtr13TraceReporterE
NSt3__120__shared_ptr_pointerIP15TraceCollectionNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI15TraceCollectionEE
  $ll
N22Trace_EventTreeBuilder19_CounterAccumulatorE
22Trace_EventTreeBuilder
26Trace_AggregateTreeBuilder
32TraceReporterDataSourceCollector
NSt3__110__function6__funcIPFbvENS_9allocatorIS3_EES2_EE
NSt3__110__function6__baseIFbvEEE
PFbvE
FbvE
N3tbb10strict_ppl16concurrent_queueINSt3__110shared_ptrI15TraceCollectionEENS_23cache_aligned_allocatorIS5_EEEE
N3tbb10strict_ppl8internal24concurrent_queue_base_v3INSt3__110shared_ptrI15TraceCollectionEEEE
N8TfNotice10_DelivererI9TfWeakPtrI32TraceReporterDataSourceCollectorE12TfAnyWeakPtrMS2_FvRK24TraceCollectionAvailableES5_EE
N8TfNotice18_StandardDelivererINS_10_DelivererI9TfWeakPtrI32TraceReporterDataSourceCollectorE12TfAnyWeakPtrMS3_FvRK24TraceCollectionAvailableES6_EEEE
9TfWeakPtrI32TraceReporterDataSourceCollectorE
15TfWeakPtrFacadeI9TfWeakPtr32TraceReporterDataSourceCollectorE
24TraceCollectionAvailable
17TraceReporterBase
NSt3__120__shared_ptr_emplaceI17UsdSkelAnimMapperNS_9allocatorIS1_EEEE
16UsdSkelAnimation
17UsdSkelBlendShape
NSt3__120__shared_ptr_pointerIP17UsdSkel_CacheImplNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI17UsdSkel_CacheImplE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI17UsdSkel_CacheImplEE
17UsdSkelBindingAPI
30UsdSkel_SkelAnimationQueryImpl
21UsdSkel_AnimQueryImpl
8TfRefPtrI21UsdSkel_AnimQueryImplE
15UsdSkelSkeleton
8TfRefPtrI22UsdSkel_SkelDefinitionE
11UsdSkelRoot
22UsdSkel_SkelDefinition
vH7B
W4vC
9Y>)F$
raB3G
)c=H
]rHa
O8Mr
bnMG
.wN9
[*QmU
mr"iR
R$N(
>S}W
-sSO\
T%L9
hGT.
B}T}
=@[V
!a9X
X5AHx
%4xY
Z~$|7
+\0I
2a\|
\ysK
|M$D
pH_r
(:W"
s\ax}?
pc2g
@BXV
tC7Ddx
EydV
d66
eax~Z
ekhHD
@iZb
k0V(
k*do^
:V!2m
RJqn
bzo=
$qE}
XqkY
quAt
Jugm
~B v
STv/N
_w&2
xg^Jp5|
yMzw
{zel#|67
P/};
[@JO
nQ:B
-;eU
U1(\Q
mSx@
b}$l
~)p$w
11eU%
z^KD
NSt3__120__shared_ptr_pointerIPN7JsValue7_HolderENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN7JsValue7_HolderEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__114default_deleteIN7JsValue7_HolderEEE
12KindRegistry
#(-2
12PcpErrorBase
16PcpErrorArcCycle
27PcpErrorArcPermissionDenied
32PcpErrorInconsistentPropertyBase
32PcpErrorInconsistentPropertyType
33PcpErrorInconsistentAttributeType
40PcpErrorInconsistentAttributeVariability
23PcpErrorInvalidPrimPath
28PcpErrorInvalidAssetPathBase
24PcpErrorInvalidAssetPath
22PcpErrorMutedAssetPath
22PcpErrorTargetPathBase
33PcpErrorInvalidInstanceTargetPath
33PcpErrorInvalidExternalTargetPath
25PcpErrorInvalidTargetPath
29PcpErrorInvalidSublayerOffset
30PcpErrorInvalidReferenceOffset
32PcpErrorInvalidSublayerOwnership
27PcpErrorInvalidSublayerPath
33PcpErrorOpinionAtRelocationSource
28PcpErrorPrimPermissionDenied
32PcpErrorPropertyPermissionDenied
21PcpErrorSublayerCycle
30PcpErrorTargetPermissionDenied
26PcpErrorUnresolvedPrimPath
12PcpErrorType
NSt3__120__shared_ptr_pointerIP16PcpErrorArcCycleNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI16PcpErrorArcCycleE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI16PcpErrorArcCycleEE
NSt3__120__shared_ptr_pointerIP27PcpErrorArcPermissionDeniedNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI27PcpErrorArcPermissionDeniedE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI27PcpErrorArcPermissionDeniedEE
NSt3__120__shared_ptr_pointerIP32PcpErrorInconsistentPropertyTypeNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI32PcpErrorInconsistentPropertyTypeE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI32PcpErrorInconsistentPropertyTypeEE
NSt3__120__shared_ptr_pointerIP33PcpErrorInconsistentAttributeTypeNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI33PcpErrorInconsistentAttributeTypeE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI33PcpErrorInconsistentAttributeTypeEE
NSt3__120__shared_ptr_pointerIP40PcpErrorInconsistentAttributeVariabilityNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI40PcpErrorInconsistentAttributeVariabilityE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI40PcpErrorInconsistentAttributeVariabilityEE
NSt3__120__shared_ptr_pointerIP23PcpErrorInvalidPrimPathNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI23PcpErrorInvalidPrimPathE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI23PcpErrorInvalidPrimPathEE
NSt3__120__shared_ptr_pointerIP24PcpErrorInvalidAssetPathNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI24PcpErrorInvalidAssetPathE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI24PcpErrorInvalidAssetPathEE
NSt3__120__shared_ptr_pointerIP22PcpErrorMutedAssetPathNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI22PcpErrorMutedAssetPathE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI22PcpErrorMutedAssetPathEE
NSt3__120__shared_ptr_pointerIP33PcpErrorInvalidInstanceTargetPathNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI33PcpErrorInvalidInstanceTargetPathE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI33PcpErrorInvalidInstanceTargetPathEE
NSt3__120__shared_ptr_pointerIP33PcpErrorInvalidExternalTargetPathNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI33PcpErrorInvalidExternalTargetPathE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI33PcpErrorInvalidExternalTargetPathEE
NSt3__120__shared_ptr_pointerIP25PcpErrorInvalidTargetPathNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI25PcpErrorInvalidTargetPathE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI25PcpErrorInvalidTargetPathEE
NSt3__120__shared_ptr_pointerIP29PcpErrorInvalidSublayerOffsetNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI29PcpErrorInvalidSublayerOffsetE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI29PcpErrorInvalidSublayerOffsetEE
NSt3__120__shared_ptr_pointerIP30PcpErrorInvalidReferenceOffsetNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI30PcpErrorInvalidReferenceOffsetE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI30PcpErrorInvalidReferenceOffsetEE
NSt3__120__shared_ptr_pointerIP32PcpErrorInvalidSublayerOwnershipNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI32PcpErrorInvalidSublayerOwnershipE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI32PcpErrorInvalidSublayerOwnershipEE
NSt3__120__shared_ptr_pointerIP27PcpErrorInvalidSublayerPathNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI27PcpErrorInvalidSublayerPathE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI27PcpErrorInvalidSublayerPathEE
NSt3__120__shared_ptr_pointerIP33PcpErrorOpinionAtRelocationSourceNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI33PcpErrorOpinionAtRelocationSourceE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI33PcpErrorOpinionAtRelocationSourceEE
NSt3__120__shared_ptr_pointerIP28PcpErrorPrimPermissionDeniedNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI28PcpErrorPrimPermissionDeniedE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI28PcpErrorPrimPermissionDeniedEE
NSt3__120__shared_ptr_pointerIP32PcpErrorPropertyPermissionDeniedNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI32PcpErrorPropertyPermissionDeniedE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI32PcpErrorPropertyPermissionDeniedEE
NSt3__120__shared_ptr_pointerIP21PcpErrorSublayerCycleNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI21PcpErrorSublayerCycleE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI21PcpErrorSublayerCycleEE
NSt3__120__shared_ptr_pointerIP30PcpErrorTargetPermissionDeniedNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI30PcpErrorTargetPermissionDeniedE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI30PcpErrorTargetPermissionDeniedEE
NSt3__120__shared_ptr_pointerIP26PcpErrorUnresolvedPrimPathNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI26PcpErrorUnresolvedPrimPathE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI26PcpErrorUnresolvedPrimPathEE
22Pcp_LayerStackRegistry
17PcpDependencyType
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIMN8PcpCache16_ParallelIndexerEFvPK12PcpPrimIndex7SdfPathbEJPS8_RSB_RSC_bEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIMN8PcpCache16_ParallelIndexerEFvPK12PcpPrimIndex7SdfPathbEJPS4_RS7_RS8_bEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIMN8PcpCache16_ParallelIndexerEFvPK12PcpPrimIndex7SdfPathbEJPS8_RSB_SC_RbEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIMN8PcpCache16_ParallelIndexerEFvPK12PcpPrimIndex7SdfPathbEJPS4_RS7_S8_RbEEEEE
20Work_DetachedInvokerI27Work_AsyncMoveDestroyHelperINSt3__16vectorINS1_4pairIPK12PcpPrimIndex7SdfPathEENS1_9allocatorIS8_EEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_0JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_0JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_1JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_1JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_2JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_2JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_3JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_3JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_4JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_4JEEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIZN8PcpCacheD1EvE3$_5JEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIZN8PcpCacheD1EvE3$_5JEEEEE
NSt3__110__function6__funcIN8PcpCache32_UntypedIndexingPayloadPredicateENS_9allocatorIS3_EEFbRK7SdfPathEEE
N8PcpCache32_UntypedIndexingPayloadPredicateE
 ,YY
GLRNSt3__120__shared_ptr_pointerIPNS_4pairI7SdfPathS2_EENS_14default_deleteIA_S3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIA_NS_4pairI7SdfPathS2_EEEE
(0=N16PcpMapExpression8VariableE
16Pcp_VariableImpl
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIMN12_GLOBAL__N_17_OpenerEFvNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEERK8TfRefPtrI8SdfLayerERKNS5_3mapISE_SE_NS5_4lessISE_EENSC_INS5_4pairIKSE_SE_EEEEEEEJPS8_N12SdfListProxyI21SdfSubLayerTypePolicyE10_ItemProxyESJ_ST_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIMN12_GLOBAL__N_17_OpenerEFvNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERK8TfRefPtrI8SdfLayerERKNS1_3mapISA_SA_NS1_4lessISA_EENS8_INS1_4pairIKSA_SA_EEEEEEEJPS4_N12SdfListProxyI21SdfSubLayerTypePolicyE10_ItemProxyESF_SP_EEEEE
)5yy
glrN12_GLOBAL__N_14Task4TypeE
10PcpArcType
29PcpDynamicFileFormatInterface
8TfRefPtrI18PcpPrimIndex_GraphE
11SdfPrimSpec
8TfRefPtrI8SdfLayerE
9TfWeakPtrI18PcpPrimIndex_GraphE
15TfWeakPtrFacadeI9TfWeakPtr18PcpPrimIndex_GraphE
8TfRefPtrI22Pcp_LayerStackRegistryE
"6J^v13PcpLayerStack
8TfRefPtrI12SdfLayerTreeE
9TfWeakPtrI22Pcp_LayerStackRegistryE
15TfWeakPtrFacadeI9TfWeakPtr22Pcp_LayerStackRegistryE
18PcpPrimIndex_Graph
NSt3__120__shared_ptr_pointerIPN18PcpPrimIndex_Graph11_SharedDataENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN18PcpPrimIndex_Graph11_SharedDataEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__114default_deleteIN18PcpPrimIndex_Graph11_SharedDataEEE
25SdfAbstractDataTypedValueI9SdfListOpI12SdfReferenceEE
NSt3__110__function6__funcIZL35_PcpComposeSiteReferencesOrPayloadsI12SdfReferenceEvRK7TfTokenRK8TfRefPtrI13PcpLayerStackERK7SdfPathPNS_6vectorIT_NS_9allocatorISG_EEEEPNSF_I16PcpSourceArcInfoNSH_ISL_EEEEEUl13SdfListOpTypeRKS3_E_NSH_ISS_EEFN5boost8optionalIS3_EESP_SR_EEE
NSt3__110__function6__baseIFN5boost8optionalI12SdfReferenceEE13SdfListOpTypeRKS4_EEE
ZL35_PcpComposeSiteReferencesOrPayloadsI12SdfReferenceEvRK7TfTokenRK8TfRefPtrI13PcpLayerStackERK7SdfPathPNSt3__16vectorIT_NSC_9allocatorISE_EEEEPNSD_I16PcpSourceArcInfoNSF_ISJ_EEEEEUl13SdfListOpTypeRKS0_E_
25SdfAbstractDataTypedValueI9SdfListOpI10SdfPayloadEE
NSt3__110__function6__funcIZL35_PcpComposeSiteReferencesOrPayloadsI10SdfPayloadEvRK7TfTokenRK8TfRefPtrI13PcpLayerStackERK7SdfPathPNS_6vectorIT_NS_9allocatorISG_EEEEPNSF_I16PcpSourceArcInfoNSH_ISL_EEEEEUl13SdfListOpTypeRKS3_E_NSH_ISS_EEFN5boost8optionalIS3_EESP_SR_EEE
NSt3__110__function6__baseIFN5boost8optionalI10SdfPayloadEE13SdfListOpTypeRKS4_EEE
ZL35_PcpComposeSiteReferencesOrPayloadsI10SdfPayloadEvRK7TfTokenRK8TfRefPtrI13PcpLayerStackERK7SdfPathPNSt3__16vectorIT_NSC_9allocatorISE_EEEEPNSD_I16PcpSourceArcInfoNSF_ISJ_EEEEEUl13SdfListOpTypeRKS0_E_
25SdfAbstractDataTypedValueI13SdfPermissionE
25SdfAbstractDataTypedValueI9SdfListOpI7SdfPathEE
25SdfAbstractDataTypedValueINSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEEE
NSt3__110__function6__funcINS_6__bindIPFN5boost8optionalI7SdfPathEE13SdfListOpTypeRK7PcpSiteRK10PcpNodeRefRKS5_RK9SdfHandleI15SdfPropertySpecE11SdfSpecTypeP8PcpCachePNS_6vectorINS_10shared_ptrI12PcpErrorBaseEENS_9allocatorISR_EEEESV_EJRKNS_12placeholders4__phILi1EEENS_17reference_wrapperIS9_EESB_RKNSZ_ILi2EEENS13_ISJ_EERKSL_RSN_SV_RSV_EEENSS_IS1D_EEFS6_S7_SF_EEE
NSt3__110__function6__baseIFN5boost8optionalI7SdfPathEE13SdfListOpTypeRKS4_EEE
NSt3__16__bindIPFN5boost8optionalI7SdfPathEE13SdfListOpTypeRK7PcpSiteRK10PcpNodeRefRKS3_RK9SdfHandleI15SdfPropertySpecE11SdfSpecTypeP8PcpCachePNS_6vectorINS_10shared_ptrI12PcpErrorBaseEENS_9allocatorISP_EEEEST_EJRKNS_12placeholders4__phILi1EEENS_17reference_wrapperIS7_EES9_RKNSX_ILi2EEENS11_ISH_EERKSJ_RSL_ST_RST_EEE
NSt3__118__weak_result_typeIPFN5boost8optionalI7SdfPathEE13SdfListOpTypeRK7PcpSiteRK10PcpNodeRefRKS3_RK9SdfHandleI15SdfPropertySpecE11SdfSpecTypeP8PcpCachePNS_6vectorINS_10shared_ptrI12PcpErrorBaseEENS_9allocatorISP_EEEEST_EEE
]gPP
HN,,
21SdfHumanReadableValue
13SdfFileFormat
17Sdf_ChangeManager
N3tbb10interface626enumerable_thread_specificIN17Sdf_ChangeManager5_DataENS_23cache_aligned_allocatorIS3_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafIN17Sdf_ChangeManager5_DataENS1_20construct_by_defaultIS4_EEEE
N3tbb10interface68internal13callback_baseIN17Sdf_ChangeManager5_DataEEE
N3tbb10interface68internal20construct_by_defaultIN17Sdf_ChangeManager5_DataEEE
12SdfLayerTree
13SdfSchemaBase
9SdfSchema
14TraceCollector
13SdfLengthUnit
6TfType
N5boost14operators_impl16totally_ordered1I6TfEnumNS0_16operators_detail10empty_baseIS2_EEEE
N5boost14operators_impl21less_than_comparable1I6TfEnumNS0_20equality_comparable1IS2_NS0_16operators_detail10empty_baseIS2_EEEEEE
20SdfDimensionlessUnit
N8TfNotice10_DelivererI9TfWeakPtrI13SdfSchemaBaseE12TfAnyWeakPtrMS2_FvRKN10PlugNotice18DidRegisterPluginsEES6_EE
N8TfNotice18_StandardDelivererINS_10_DelivererI9TfWeakPtrI13SdfSchemaBaseE12TfAnyWeakPtrMS3_FvRKN10PlugNotice18DidRegisterPluginsEES7_EEEE
9TfWeakPtrI13SdfSchemaBaseE
15TfWeakPtrFacadeI9TfWeakPtr13SdfSchemaBaseE
15SdfAbstractData
26SdfAbstractDataSpecVisitor
30SdfAbstractData_IsEmptyChecker
25SdfAbstractData_CopySpecs
34SdfAbstractData_CheckAllSpecsExist
34SdfAbstractData_CheckAllSpecsMatch
35SdfAbstractData_SortedPathCollector
8TfRefPtrI15SdfAbstractDataE
25SdfAbstractDataTypedValueI6TfEnumE
N22SdfNamespaceEditDetail6ResultE
23SdfSpecTypeRegistration
16Sdf_SpecTypeInfo
17SdfTextFileFormat
21Sdf_FileFormatFactoryI17SdfTextFileFormatE
8SdfLayer
ZN8SdfLayer8_SetDataERK9TfWeakPtrI15SdfAbstractDataEE14_SpecsToDelete
ZN8SdfLayer8_SetDataERK9TfWeakPtrI15SdfAbstractDataEE14_SpecsToCreate
ZN8SdfLayer8_SetDataERK9TfWeakPtrI15SdfAbstractDataEE12_SpecUpdater
8TfRefPtrI25SdfLayerStateDelegateBaseE
N5boost6detail17sp_counted_impl_pI22Sdf_SubLayerListEditorEE
8TfRefPtrI7SdfDataE
9TfWeakPtrI15SdfAbstractDataE
15TfWeakPtrFacadeI9TfWeakPtr15SdfAbstractDataE
NSt3__110__function6__baseIFvRK7SdfPathEEE
NSt3__110__function6__funcINS_6__bindIPFvP15SdfAbstractDataRK7SdfPathEJS4_RKNS_12placeholders4__phILi1EEEEEENS_9allocatorISF_EEFvS7_EEE
NSt3__16__bindIPFvP15SdfAbstractDataRK7SdfPathEJS2_RKNS_12placeholders4__phILi1EEEEEE
NSt3__118__weak_result_typeIPFvP15SdfAbstractDataRK7SdfPathEEE
NSt3__115binary_functionIP15SdfAbstractDataRK7SdfPathvEE
7SdfData
20Work_DetachedInvokerI27Work_AsyncSwapDestroyHelperI9TfHashMapI7SdfPathN7SdfData9_SpecDataENS2_4HashENSt3__18equal_toIS2_EENS6_9allocatorINS6_4pairIKS2_S4_EEEEEEE
NSt3__110__function6__funcIPFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEENS5_ISB_EESA_EE
PFvRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE
FvRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE
15SdfMapEditProxyI12VtDictionary34SdfIdentityMapEditProxyValuePolicyIS0_EE
N5boost14operators_impl15totally_orderedI15SdfMapEditProxyI12VtDictionary34SdfIdentityMapEditProxyValuePolicyIS3_EES3_NS0_16operators_detail10empty_baseIS6_EENS7_7false_tEEE
N5boost14operators_impl16totally_ordered2I15SdfMapEditProxyI12VtDictionary34SdfIdentityMapEditProxyValuePolicyIS3_EES3_NS0_16operators_detail10empty_baseIS6_EEEE
N5boost14operators_impl21less_than_comparable2I15SdfMapEditProxyI12VtDictionary34SdfIdentityMapEditProxyValuePolicyIS3_EES3_NS0_20equality_comparable2IS6_S3_NS0_16operators_detail10empty_baseIS6_EEEEEE
N5boost14operators_impl20equality_comparable2I15SdfMapEditProxyI12VtDictionary34SdfIdentityMapEditProxyValuePolicyIS3_EES3_NS0_16operators_detail10empty_baseIS6_EEEE
N5boost14operators_impl16operators_detail10empty_baseI15SdfMapEditProxyI12VtDictionary34SdfIdentityMapEditProxyValuePolicyIS4_EEEE
15SdfMapEditProxyINSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEE34SdfIdentityMapEditProxyValuePolicyISE_EE
N5boost14operators_impl15totally_orderedI15SdfMapEditProxyINSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEE34SdfIdentityMapEditProxyValuePolicyISH_EESH_NS0_16operators_detail10empty_baseISK_EENSL_7false_tEEE
N5boost14operators_impl16totally_ordered2I15SdfMapEditProxyINSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEE34SdfIdentityMapEditProxyValuePolicyISH_EESH_NS0_16operators_detail10empty_baseISK_EEEE
N5boost14operators_impl21less_than_comparable2I15SdfMapEditProxyINSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEE34SdfIdentityMapEditProxyValuePolicyISH_EESH_NS0_20equality_comparable2ISK_SH_NS0_16operators_detail10empty_baseISK_EEEEEE
N5boost14operators_impl20equality_comparable2I15SdfMapEditProxyINSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEE34SdfIdentityMapEditProxyValuePolicyISH_EESH_NS0_16operators_detail10empty_baseISK_EEEE
N5boost14operators_impl16operators_detail10empty_baseI15SdfMapEditProxyINSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4lessISB_EENS9_INS4_4pairIKSB_SB_EEEEEE34SdfIdentityMapEditProxyValuePolicyISI_EEEE
15SdfMapEditProxyINSt3__13mapI7SdfPathS2_NS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S2_EEEEEE31SdfRelocatesMapProxyValuePolicyE
N5boost14operators_impl15totally_orderedI15SdfMapEditProxyINSt3__13mapI7SdfPathS5_NS3_4lessIS5_EENS3_9allocatorINS3_4pairIKS5_S5_EEEEEE31SdfRelocatesMapProxyValuePolicyESD_NS0_16operators_detail10empty_baseISF_EENSG_7false_tEEE
N5boost14operators_impl16totally_ordered2I15SdfMapEditProxyINSt3__13mapI7SdfPathS5_NS3_4lessIS5_EENS3_9allocatorINS3_4pairIKS5_S5_EEEEEE31SdfRelocatesMapProxyValuePolicyESD_NS0_16operators_detail10empty_baseISF_EEEE
N5boost14operators_impl21less_than_comparable2I15SdfMapEditProxyINSt3__13mapI7SdfPathS5_NS3_4lessIS5_EENS3_9allocatorINS3_4pairIKS5_S5_EEEEEE31SdfRelocatesMapProxyValuePolicyESD_NS0_20equality_comparable2ISF_SD_NS0_16operators_detail10empty_baseISF_EEEEEE
N5boost14operators_impl20equality_comparable2I15SdfMapEditProxyINSt3__13mapI7SdfPathS5_NS3_4lessIS5_EENS3_9allocatorINS3_4pairIKS5_S5_EEEEEE31SdfRelocatesMapProxyValuePolicyESD_NS0_16operators_detail10empty_baseISF_EEEE
N5boost14operators_impl16operators_detail10empty_baseI15SdfMapEditProxyINSt3__13mapI7SdfPathS6_NS4_4lessIS6_EENS4_9allocatorINS4_4pairIKS6_S6_EEEEEE31SdfRelocatesMapProxyValuePolicyEEE
18SdfListEditorProxyI16SdfPathKeyPolicyE
18SdfListEditorProxyI22SdfReferenceTypePolicyE
18SdfListEditorProxyI20SdfPayloadTypePolicyE
N5boost6detail17sp_counted_impl_pI32Sdf_RelationshipTargetListEditorEE
N5boost6detail17sp_counted_impl_pI33Sdf_AttributeConnectionListEditorEE
20Sdf_ListOpListEditorI16SdfPathKeyPolicyE
14Sdf_ListEditorI16SdfPathKeyPolicyE
7SdfSpec
NSt3__110__function6__baseIFN5boost8optionalI7SdfPathEERKS4_EEE
ZN20Sdf_ListOpListEditorI16SdfPathKeyPolicyE15ModifyItemEditsERKNSt3__18functionIFN5boost8optionalI7SdfPathEERKS6_EEEEUlS9_E_
N5boost14operators_impl21less_than_comparable1I7SdfPathNS0_20equality_comparable1IS2_NS0_16operators_detail10empty_baseIS2_EEEEEE
N5boost6detail17sp_counted_impl_pI20Sdf_ListOpListEditorI16SdfPathKeyPolicyEEE
20Sdf_ListOpListEditorI22SdfReferenceTypePolicyE
14Sdf_ListEditorI22SdfReferenceTypePolicyE
NSt3__110__function6__funcIZN20Sdf_ListOpListEditorI22SdfReferenceTypePolicyE15ModifyItemEditsERKNS_8functionIFN5boost8optionalI12SdfReferenceEERKS8_EEEEUlSB_E_NS_9allocatorISG_EESC_EE
ZN20Sdf_ListOpListEditorI22SdfReferenceTypePolicyE15ModifyItemEditsERKNSt3__18functionIFN5boost8optionalI12SdfReferenceEERKS6_EEEEUlS9_E_
N5boost14operators_impl15totally_orderedI12SdfReferenceS2_NS0_16operators_detail10empty_baseIS2_EENS3_7false_tEEE
N5boost14operators_impl16totally_ordered1I12SdfReferenceNS0_16operators_detail10empty_baseIS2_EEEE
N5boost14operators_impl16operators_detail10empty_baseI12SdfReferenceEE
N5boost6detail17sp_counted_impl_pI20Sdf_ListOpListEditorI22SdfReferenceTypePolicyEEE
20Sdf_ListOpListEditorI20SdfPayloadTypePolicyE
14Sdf_ListEditorI20SdfPayloadTypePolicyE
9SdfListOpI10SdfPayloadE
NSt3__110__function6__funcIZN20Sdf_ListOpListEditorI20SdfPayloadTypePolicyE15ModifyItemEditsERKNS_8functionIFN5boost8optionalI10SdfPayloadEERKS8_EEEEUlSB_E_NS_9allocatorISG_EESC_EE
ZN20Sdf_ListOpListEditorI20SdfPayloadTypePolicyE15ModifyItemEditsERKNSt3__18functionIFN5boost8optionalI10SdfPayloadEERKS6_EEEEUlS9_E_
N5boost14operators_impl15totally_orderedI10SdfPayloadS2_NS0_16operators_detail10empty_baseIS2_EENS3_7false_tEEE
N5boost14operators_impl16totally_ordered1I10SdfPayloadNS0_16operators_detail10empty_baseIS2_EEEE
N5boost14operators_impl16operators_detail10empty_baseI10SdfPayloadEE
N5boost6detail17sp_counted_impl_pI20Sdf_ListOpListEditorI20SdfPayloadTypePolicyEEE
20Sdf_VectorListEditorI21SdfNameTokenKeyPolicy7TfTokenE
14Sdf_ListEditorI21SdfNameTokenKeyPolicyE
NSt3__110__function6__funcIZN20Sdf_VectorListEditorI21SdfNameTokenKeyPolicy7TfTokenE15ModifyItemEditsERKNS_8functionIFN5boost8optionalIS4_EERKS4_EEEEUlSB_E_NS_9allocatorISG_EESC_EE
NSt3__110__function6__baseIFN5boost8optionalI7TfTokenEERKS4_EEE
ZN20Sdf_VectorListEditorI21SdfNameTokenKeyPolicy7TfTokenE15ModifyItemEditsERKNSt3__18functionIFN5boost8optionalIS1_EERKS1_EEEEUlS9_E_
N5boost6detail17sp_counted_impl_pI20Sdf_VectorListEditorI21SdfNameTokenKeyPolicy7TfTokenEEE
05N3tbb10strict_ppl16concurrent_queueIN8Sdf_PoolI15Sdf_PathPrimTagLj24ELj8ELj16384EE9_FreeListENS_23cache_aligned_allocatorIS5_EEEE
N3tbb10strict_ppl8internal24concurrent_queue_base_v3IN8Sdf_PoolI15Sdf_PathPrimTagLj24ELj8ELj16384EE9_FreeListEEE
N3tbb10strict_ppl16concurrent_queueIN8Sdf_PoolI15Sdf_PathPropTagLj24ELj8ELj16384EE9_FreeListENS_23cache_aligned_allocatorIS5_EEEE
N3tbb10strict_ppl8internal24concurrent_queue_base_v3IN8Sdf_PoolI15Sdf_PathPropTagLj24ELj8ELj16384EE9_FreeListEEE
33Sdf_AttributeConnectionListEditor
24Sdf_ConnectionListEditorI34Sdf_AttributeConnectionChildPolicyE
32Sdf_RelationshipTargetListEditor
24Sdf_ConnectionListEditorI33Sdf_RelationshipTargetChildPolicyE
NSt3__110__function6__funcIZN20Sdf_ListOpListEditorI16SdfPathKeyPolicyE15ModifyItemEditsERKNS_8functionIFN5boost8optionalI7SdfPathEERKS8_EEEEUlSB_E_NS_9allocatorISG_EESC_EE
N5boost14operators_impl15totally_orderedI7SdfPathS2_NS0_16operators_detail10empty_baseIS2_EENS3_7false_tEEE
N5boost14operators_impl16totally_ordered1I7SdfPathNS0_16operators_detail10empty_baseIS2_EEEE
N5boost14operators_impl16operators_detail10empty_baseI7SdfPathEE
13SdfListOpType
NSt3__16vectorI12SdfReferenceNS_9allocatorIS1_EEEE
NSt3__113__vector_baseI12SdfReferenceNS_9allocatorIS1_EEEE
-%
 !"#$%&'()*+,-./01234567
N5boost7bad_getE
9SdfListOpIxE
7VtArrayIxE
9SdfListOpIjE
7VtArrayIjE
9SdfListOpIyE
7VtArrayIyE
9SdfListOpI7TfTokenE
12VtDictionary
N5boost14operators_impl19equality_comparableI20SdfUnregisteredValueS2_NS0_16operators_detail10empty_baseIS2_EENS3_7false_tEEE
N5boost14operators_impl20equality_comparable1I20SdfUnregisteredValueNS0_16operators_detail10empty_baseIS2_EEEE
9SdfListOpI20SdfUnregisteredValueE
9SdfListOpI7SdfPathE
NSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEEE
14SdfVariability
NSt3__113__vector_baseI7SdfPathNS_9allocatorIS1_EEEE
7SdfPath
N5boost14operators_impl20equality_comparable1I7SdfPathNS0_16operators_detail10empty_baseIS2_EEEE
N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_7bad_getEEEEE
N5boost16exception_detail10clone_baseE
NSt3__113__vector_baseI14SdfLayerOffsetNS_9allocatorIS1_EEEE
NSt3__13mapI7SdfPathS1_NS_4lessIS1_EENS_9allocatorINS_4pairIKS1_S1_EEEEEE
6TfEnum
N5boost14operators_impl15totally_orderedI6TfEnumS2_NS0_16operators_detail10empty_baseIS2_EENS3_7false_tEEE
N5boost14operators_impl20equality_comparable1I6TfEnumNS0_16operators_detail10empty_baseIS2_EEEE
N5boost14operators_impl16operators_detail10empty_baseI6TfEnumEE
N5boost3any6holderIiEE
N5boost3any11placeholderE
NSt3__110__function6__funcINS_6__bindIRFvP21Sdf_TextParserContextRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEJS4_RKNS_12placeholders4__phILi1EEEEEENS8_ISK_EEFvSC_EEE
NSt3__110__function6__baseIFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
NSt3__16__bindIRFvP21Sdf_TextParserContextRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEJS2_RKNS_12placeholders4__phILi1EEEEEE
NSt3__118__weak_result_typeIPFvP21Sdf_TextParserContextRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
NSt3__115binary_functionIP21Sdf_TextParserContextRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEvEE
25SdfLayerStateDelegateBase
27SdfSimpleLayerStateDelegate
13Sdf_MapEditorINSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEEE
16Sdf_LsdMapEditorINSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEEE
13Sdf_MapEditorINSt3__13mapI7SdfPathS2_NS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S2_EEEEEEE
16Sdf_LsdMapEditorINSt3__13mapI7SdfPathS2_NS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S2_EEEEEEE
N5boost6detail17sp_counted_impl_pI16Sdf_LsdMapEditorINSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEEEEE
N5boost6detail17sp_counted_impl_pI16Sdf_LsdMapEditorINSt3__13mapI7SdfPathS5_NS3_4lessIS5_EENS3_9allocatorINS3_4pairIKS5_S5_EEEEEEEEE
14SdfLayerOffset
N5boost14operators_impl15totally_orderedI14SdfLayerOffsetS2_NS0_16operators_detail10empty_baseIS2_EENS3_7false_tEEE
N5boost14operators_impl16totally_ordered1I14SdfLayerOffsetNS0_16operators_detail10empty_baseIS2_EEEE
N5boost14operators_impl21less_than_comparable1I14SdfLayerOffsetNS0_20equality_comparable1IS2_NS0_16operators_detail10empty_baseIS2_EEEEEE
N5boost14operators_impl20equality_comparable1I14SdfLayerOffsetNS0_16operators_detail10empty_baseIS2_EEEE
N5boost14operators_impl16operators_detail10empty_baseI14SdfLayerOffsetEE
NSt3__16vectorI10SdfPayloadNS_9allocatorIS1_EEEE
NSt3__113__vector_baseI10SdfPayloadNS_9allocatorIS1_EEEE
N9SdfNotice4BaseE
N9SdfNotice27LayersDidChangeSentPerLayerE
N9SdfNotice19BaseLayersDidChangeE
N9SdfNotice15LayersDidChangeE
N9SdfNotice18LayerInfoDidChangeE
N9SdfNotice20LayerMutenessChangedE
N9SdfNotice24LayerIdentifierDidChangeE
N9SdfNotice22LayerDidReplaceContentE
N9SdfNotice21LayerDidReloadContentE
N9SdfNotice23LayerDidSaveLayerToFileE
N9SdfNotice21LayerDirtinessChangedE
Ulg 
g"BD 
! U@
FG:$#.23%(
&6N)78<P
X+K,
&'()*.
7-::
  !!!!"""""""####$$%%&&''())**
N5boost6detail17sp_counted_impl_pIN22Sdf_FileFormatRegistry5_InfoEEE
NSt3__110__function6__funcINS_6__bindIRF7VtValueRKNS_6vectorIjNS_9allocatorIjEEEERKNS4_IN17Sdf_ParserHelpers5ValueENS5_ISB_EEEERmPNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEEEJRKNS_12placeholders4__phILi1EEERKNSQ_ILi2EEERKNSQ_ILi3EEERKNSQ_ILi4EEEEEENS5_IS13_EESN_EE
NSt3__110__function6__baseIF7VtValueRKNS_6vectorIjNS_9allocatorIjEEEERKNS3_IN17Sdf_ParserHelpers5ValueENS4_ISA_EEEERmPNS_12basic_stringIcNS_11char_traitsIcEENS4_IcEEEEEEE
NSt3__16__bindIRF7VtValueRKNS_6vectorIjNS_9allocatorIjEEEERKNS2_IN17Sdf_ParserHelpers5ValueENS3_IS9_EEEERmPNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEEJRKNS_12placeholders4__phILi1EEERKNSO_ILi2EEERKNSO_ILi3EEERKNSO_ILi4EEEEEE
NSt3__118__weak_result_typeIPF7VtValueRKNS_6vectorIjNS_9allocatorIjEEEERKNS2_IN17Sdf_ParserHelpers5ValueENS3_IS9_EEEERmPNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEEEE
19TfWeakPtrFacadeBase
9TfWeakPtrIK13SdfFileFormatE
22Sdf_SubLayerListEditor
20Sdf_VectorListEditorI21SdfSubLayerTypePolicyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE
14Sdf_ListEditorI21SdfSubLayerTypePolicyE
NSt3__110__function6__funcIZN20Sdf_VectorListEditorI21SdfSubLayerTypePolicyNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE15ModifyItemEditsERKNS_8functionIFN5boost8optionalIS9_EERKS9_EEEEUlSG_E_NS7_ISL_EESH_EE
ZN20Sdf_VectorListEditorI21SdfSubLayerTypePolicyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE15ModifyItemEditsERKNS1_8functionIFN5boost8optionalIS7_EERKS7_EEEEUlSE_E_
N3tbb10interface98internal9start_forINS_13blocked_rangeImEEZ16WorkParallelForNIZ28Sdf_ClearPathTableInParallelPPvmPFvS6_EE3$_0EvmOT_mE21Work_ParallelForN_TBBKNS_16auto_partitionerEEE
@14SdfAngularUnit
18Sdf_CleanupTracker
1DLT\dl
5>P*#
N13SdfChangeList18SubLayerChangeTypeE
NSt3__16vectorI9SdfHandleI11SdfPrimSpecENS_9allocatorIS3_EEEE
NSt3__113__vector_baseI9SdfHandleI11SdfPrimSpecENS_9allocatorIS3_EEEE
NSt3__120__vector_base_commonILb1EEE
NSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE9SdfHandleI17SdfVariantSetSpecENS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEE
17SdfVariantSetSpec
14SdfVariantSpec
12SdfSpecifier
15SdfPropertySpec
13SdfPermission
20Sdf_ListOpListEditorI16SdfNameKeyPolicyE
14Sdf_ListEditorI16SdfNameKeyPolicyE
N5boost12noncopyable_11noncopyableE
9SdfListOpINSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE
NSt3__110__function6__funcIZN20Sdf_ListOpListEditorI16SdfNameKeyPolicyE15ModifyItemEditsERKNS_8functionIFN5boost8optionalINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEERKSD_EEEEUlSG_E_NSB_ISL_EESH_EE
NSt3__110__function6__baseIFN5boost8optionalINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEERKS9_EEE
ZN20Sdf_ListOpListEditorI16SdfNameKeyPolicyE15ModifyItemEditsERKNSt3__18functionIFN5boost8optionalINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEERKSB_EEEEUlSE_E_
N5boost6detail17sp_counted_impl_pI20Sdf_ListOpListEditorI16SdfNameKeyPolicyEEE
N5boost6detail15sp_counted_baseE
NSt3__16vectorI7TfTokenNS_9allocatorIS1_EEEE
26UsdDeformersDeformableMesh
22UsdDeformersBlendShape
27UsdDeformersSkinDeformerAPI
12UsdGeomScope
13UsdGeomSphere
3>16UsdGeomBoundable
13UsdGeomPoints
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIMN16UsdGeomBBoxCache19_MasterBBoxResolverEFvRKNS7_12_PrimContextEP9TfHashMapIS9_NS8_11_MasterTaskEN5boost4hashIS9_EENS5_8equal_toIS9_EENS5_9allocatorINS5_4pairISA_SD_EEEEEPNS_10interface626enumerable_thread_specificI17UsdGeomXformCacheNS_23cache_aligned_allocatorISR_EELNS_18ets_key_usage_typeE1EEEPS3_EJPS8_SB_SO_SW_SX_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIMN16UsdGeomBBoxCache19_MasterBBoxResolverEFvRKNS3_12_PrimContextEP9TfHashMapIS5_NS4_11_MasterTaskEN5boost4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIS6_S9_EEEEEPN3tbb10interface626enumerable_thread_specificI17UsdGeomXformCacheNSL_23cache_aligned_allocatorISO_EELNSL_18ets_key_usage_typeE1EEEP19WorkArenaDispatcherEJPS4_S7_SK_ST_SV_EEEEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIMN16UsdGeomBBoxCache19_MasterBBoxResolverEFvRKNS7_12_PrimContextEP9TfHashMapIS9_NS8_11_MasterTaskEN5boost4hashIS9_EENS5_8equal_toIS9_EENS5_9allocatorINS5_4pairISA_SD_EEEEEPNS_10interface626enumerable_thread_specificI17UsdGeomXformCacheNS_23cache_aligned_allocatorISR_EELNS_18ets_key_usage_typeE1EEEPS3_EJPS8_SB_RSO_RSW_RSX_EEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIMN16UsdGeomBBoxCache19_MasterBBoxResolverEFvRKNS3_12_PrimContextEP9TfHashMapIS5_NS4_11_MasterTaskEN5boost4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIS6_S9_EEEEEPN3tbb10interface626enumerable_thread_specificI17UsdGeomXformCacheNSL_23cache_aligned_allocatorISO_EELNSL_18ets_key_usage_typeE1EEEP19WorkArenaDispatcherEJPS4_S7_RSK_RST_RSV_EEEEE
N3tbb10interface626enumerable_thread_specificI17UsdGeomXformCacheNS_23cache_aligned_allocatorIS2_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafI17UsdGeomXformCacheNS1_20construct_by_defaultIS3_EEEE
N3tbb10interface68internal13callback_baseI17UsdGeomXformCacheEE
N3tbb10interface68internal20construct_by_defaultI17UsdGeomXformCacheEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIN16UsdGeomBBoxCache9_BBoxTaskEJEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIN16UsdGeomBBoxCache9_BBoxTaskEJEEEEE
N5boost6detail18sp_counted_impl_pdIP17UsdAttributeQueryNS_21checked_array_deleterIS2_EEEE
N5boost21checked_array_deleterI17UsdAttributeQueryEE
N3tbb10interface78internal18delegated_functionIKN19WorkArenaDispatcher7_RunnerINSt3__16__bindIRKN16UsdGeomBBoxCache9_BBoxTaskEJEEEEEEE
N14WorkDispatcher12_InvokerTaskINSt3__16__bindIRKN16UsdGeomBBoxCache9_BBoxTaskEJEEEEE
11UsdGeomCube
15UsdGeomCylinder
15UsdGeomModelAPI
11UsdGeomMesh
15TfWeakPtrFacadeI9TfWeakPtr8UsdStageE
18UsdGeomPrimvarsAPI
13UsdGeomCamera
N12_GLOBAL__N_117_FunctionRegistryE
N8TfNotice10_DelivererI9TfWeakPtrIN12_GLOBAL__N_117_FunctionRegistryEE12TfAnyWeakPtrMS3_FvRKN10PlugNotice18DidRegisterPluginsEES7_EE
N8TfNotice18_StandardDelivererINS_10_DelivererI9TfWeakPtrIN12_GLOBAL__N_117_FunctionRegistryEE12TfAnyWeakPtrMS4_FvRKN10PlugNotice18DidRegisterPluginsEES8_EEEE
9TfWeakPtrIN12_GLOBAL__N_117_FunctionRegistryEE
15TfWeakPtrFacadeI9TfWeakPtrN12_GLOBAL__N_117_FunctionRegistryEE
12UsdGeomGprim
21UsdGeomPointInstancer
N21UsdGeomPointInstancer19ProtoXformInclusionE
N21UsdGeomPointInstancer15MaskApplicationE
N3tbb10interface98internal9start_forINS_13blocked_rangeImEEZ16WorkParallelForNIRKZN21UsdGeomPointInstancer31ComputeInstanceTransformsAtTimeEP7VtArrayI10GfMatrix4dER9TfWeakPtrI8UsdStageE11UsdTimeCodeRKS7_IiERKS7_I7GfVec3fESM_SF_SM_SM_RKS7_I7GfQuathESM_SF_RKNSt3__16vectorI7SdfPathNSR_9allocatorIST_EEEERKNSS_IbNSU_IbEEEEfE3$_0EvmOT_mE21Work_ParallelForN_TBBKNS_16auto_partitionerEEE
N3tbb10interface98internal9start_forINS_13blocked_rangeImEEZ16WorkParallelForNIRKZNK21UsdGeomPointInstancer28_ComputeExtentFromTransformsEP7VtArrayI7GfVec3fERKS7_IiERKNSt3__16vectorIbNSE_9allocatorIbEEEERK15UsdRelationshipRKNSF_I7SdfPathNSG_ISO_EEEERKS7_I10GfMatrix4dE11UsdTimeCodePKST_E3$_1EvmOT_mE21Work_ParallelForN_TBBKNS_16auto_partitionerEEE
N3tbb10interface98internal12start_reduceINS_13blocked_rangeImEENS_8internal18lambda_reduce_bodyIS4_9GfRange3dZ19WorkParallelReduceNIZNK21UsdGeomPointInstancer28_ComputeExtentFromTransformsEP7VtArrayI7GfVec3fERKSA_IiERKNSt3__16vectorIbNSH_9allocatorIbEEEERK15UsdRelationshipRKNSI_I7SdfPathNSJ_ISR_EEEERKSA_I10GfMatrix4dE11UsdTimeCodePKSW_E3$_2ZNKS9_28_ComputeExtentFromTransformsESD_SG_SN_SQ_SV_SZ_S10_S12_E3$_3S7_ET1_RKS15_mOT_OT0_mE13Work_Body_TBBS14_EEKNS_16auto_partitionerEEE
N3tbb10interface98internal13finish_reduceINS_8internal18lambda_reduce_bodyINS_13blocked_rangeImEE9GfRange3dZ19WorkParallelReduceNIZNK21UsdGeomPointInstancer28_ComputeExtentFromTransformsEP7VtArrayI7GfVec3fERKSA_IiERKNSt3__16vectorIbNSH_9allocatorIbEEEERK15UsdRelationshipRKNSI_I7SdfPathNSJ_ISR_EEEERKSA_I10GfMatrix4dE11UsdTimeCodePKSW_E3$_2ZNKS9_28_ComputeExtentFromTransformsESD_SG_SN_SQ_SV_SZ_S10_S12_E3$_3S7_ET1_RKS15_mOT_OT0_mE13Work_Body_TBBS14_EEEE
14UsdGeomCapsule
!'-39?EKQ
$/@N14UsdGeomXformOp4TypeE
N14UsdGeomXformOp9PrecisionE
11UsdGeomCone
16UsdGeomXformable
N5boost16exception_detail19error_info_injectorINS_7bad_getEEE
16UsdGeomMotionAPI
13UsdGeomSubset
16UsdGeomImageable
9TfWeakPtrI8UsdStageE
9TfWeakPtrI8SdfLayerE
15TfWeakPtrFacadeI9TfWeakPtr8SdfLayerE
15TfWeakPtrFacadeI9TfWeakPtr10PlugPluginE
13UsdGeomCurves
17UsdGeomPointBased
N3tbb10interface98internal12start_reduceINS_13blocked_rangeImEENS_8internal18lambda_reduce_bodyIS4_9GfRange3dZ19WorkParallelReduceNIZN17UsdGeomPointBased13ComputeExtentERK7VtArrayI7GfVec3fEPSC_E3$_0ZN12_GLOBAL__N_118_ComputeExtentImplISG_EEbSE_SF_OT_EUlS7_S7_E_S7_ET1_RKSM_mSK_OT0_mE13Work_Body_TBBSL_EEKNS_16auto_partitionerEEE
N3tbb10interface98internal13finish_reduceINS_8internal18lambda_reduce_bodyINS_13blocked_rangeImEE9GfRange3dZ19WorkParallelReduceNIZN17UsdGeomPointBased13ComputeExtentERK7VtArrayI7GfVec3fEPSC_E3$_0ZN12_GLOBAL__N_118_ComputeExtentImplISG_EEbSE_SF_OT_EUlS7_S7_E_S7_ET1_RKSM_mSK_OT0_mE13Work_Body_TBBSL_EEEE
N3tbb10interface98internal12start_reduceINS_13blocked_rangeImEENS_8internal18lambda_reduce_bodyIS4_9GfRange3dZ19WorkParallelReduceNIZN17UsdGeomPointBased13ComputeExtentERK7VtArrayI7GfVec3fERK10GfMatrix4dPSC_E3$_1ZN12_GLOBAL__N_118_ComputeExtentImplISJ_EEbSE_SI_OT_EUlS7_S7_E_S7_ET1_RKSP_mSN_OT0_mE13Work_Body_TBBSO_EEKNS_16auto_partitionerEEE
N3tbb10interface98internal13finish_reduceINS_8internal18lambda_reduce_bodyINS_13blocked_rangeImEE9GfRange3dZ19WorkParallelReduceNIZN17UsdGeomPointBased13ComputeExtentERK7VtArrayI7GfVec3fERK10GfMatrix4dPSC_E3$_1ZN12_GLOBAL__N_118_ComputeExtentImplISJ_EEbSE_SI_OT_EUlS7_S7_E_S7_ET1_RKSP_mSN_OT0_mE13Work_Body_TBBSO_EEEE
17UsdGeomNurbsPatch
12UsdGeomXform
16UsdShadeMaterial
NSt3__110__function6__baseIFbRK7SdfPathEEE
22UsdShadeConnectableAPI
14UsdShadeShader
26UsdShadeMaterialBindingAPI
NSt3__110__function6__funcIZN26UsdShadeMaterialBindingAPI14BindingsAtPrimC1ERK7UsdPrimRK7TfTokenE3$_0NS_9allocatorISA_EEFbS9_EEE
ZN26UsdShadeMaterialBindingAPI14BindingsAtPrimC1ERK7UsdPrimRK7TfTokenE3$_0
17UsdShadeNodeGraph
NSt3__110__function6__funcIZL26_ExtractExternalReferencesRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKN12_GLOBAL__N_124_ReferenceTypesToIncludeEPNS_6vectorIS7_NS5_IS7_EEEESH_SH_E3$_1NS5_ISI_EEFvS9_RKNSA_8_DepTypeEEEE
NSt3__110__function6__baseIFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKN12_GLOBAL__N_18_DepTypeEEEE
ZL26_ExtractExternalReferencesRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKN12_GLOBAL__N_124_ReferenceTypesToIncludeEPNS_6vectorIS5_NS3_IS5_EEEESF_SF_E3$_1
NSt3__110__function6__funcINS_6__bindIMN12_GLOBAL__N_113_FileAnalyzerEFN5boost8optionalI10SdfPayloadEERKS7_EJPS4_RKNS_12placeholders4__phILi1EEEEEENS_9allocatorISJ_EEFS8_SA_EEE
NSt3__16__bindIMN12_GLOBAL__N_113_FileAnalyzerEFN5boost8optionalI10SdfPayloadEERKS5_EJPS2_RKNS_12placeholders4__phILi1EEEEEE
NSt3__118__weak_result_typeIMN12_GLOBAL__N_113_FileAnalyzerEFN5boost8optionalI10SdfPayloadEERKS5_EEE
NSt3__115binary_functionIPN12_GLOBAL__N_113_FileAnalyzerERK10SdfPayloadN5boost8optionalIS4_EEEE
NSt3__110__function6__funcINS_6__bindIMN12_GLOBAL__N_113_FileAnalyzerEFN5boost8optionalI12SdfReferenceEERKS7_EJPS4_RKNS_12placeholders4__phILi1EEEEEENS_9allocatorISJ_EEFS8_SA_EEE
NSt3__16__bindIMN12_GLOBAL__N_113_FileAnalyzerEFN5boost8optionalI12SdfReferenceEERKS5_EJPS2_RKNS_12placeholders4__phILi1EEEEEE
NSt3__118__weak_result_typeIMN12_GLOBAL__N_113_FileAnalyzerEFN5boost8optionalI12SdfReferenceEERKS5_EEE
NSt3__115binary_functionIPN12_GLOBAL__N_113_FileAnalyzerERK12SdfReferenceN5boost8optionalIS4_EEEE
NSt3__110__function6__funcIZN12_GLOBAL__N_115_AssetLocalizerC1ERK12SdfAssetPathRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESE_SE_RKNS_6vectorISC_NSA_ISC_EEEEEUlSE_RK8TfRefPtrI8SdfLayerEbE_NSA_ISP_EEFSC_SE_SO_bEEE
NSt3__110__function6__baseIFNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKS7_RK8TfRefPtrI8SdfLayerEbEEE
ZN12_GLOBAL__N_115_AssetLocalizerC1ERK12SdfAssetPathRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_SC_RKNS4_6vectorISA_NS8_ISA_EEEEEUlSC_RK8TfRefPtrI8SdfLayerEbE_
19VtStreamOutIterator
7VtArrayI10GfMatrix3fE
7VtArrayI10GfMatrix2fE
7VtArrayI9GfRange3fE
7VtArrayI9GfRange3dE
7VtArrayI9GfRange2fE
7VtArrayI9GfRange2dE
7VtArrayI9GfRange1fE
7VtArrayI9GfRange1dE
7VtArrayI10GfIntervalE
7VtArrayI8GfRect2iE
7VtArrayI12GfQuaternionE
7VtArrayIcE
7VtArrayIsE
N7VtArrayI9GfRange1dE9_StreamerE
N7VtArrayI9GfRange1fE9_StreamerE
N7VtArrayI9GfRange2dE9_StreamerE
N7VtArrayI9GfRange2fE9_StreamerE
N7VtArrayI9GfRange3dE9_StreamerE
N7VtArrayI9GfRange3fE9_StreamerE
15Vt_CastRegistry
N5boost7numeric16bad_numeric_castE
N5boost7numeric17negative_overflowE
N5boost7numeric17positive_overflowE
N3tbb10strict_ppl16concurrent_queueIPNS_10interface710task_arenaENS_23cache_aligned_allocatorIS4_EEEE
N3tbb10strict_ppl8internal24concurrent_queue_base_v3IPNS_10interface710task_arenaEEE
N3tbb10interface78internal18delegated_functionIKNSt3__16__bindIM14WorkDispatcherFvvEJPS5_EEEEE
10PlugPlugin
N10PlugNotice4BaseE
N10PlugNotice18DidRegisterPluginsE
12PlugRegistry
9TfWeakPtrI12PlugRegistryE
15TfWeakPtrFacadeI9TfWeakPtr12PlugRegistryE
NSt3__110__function6__funcINS_6__bindIM12PlugRegistryFbRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEJPS3_RKNS_12placeholders4__phILi1EEEEEENS7_ISK_EEFbSB_EEE
NSt3__110__function6__baseIFbRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
NSt3__16__bindIM12PlugRegistryFbRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEJPS1_RKNS_12placeholders4__phILi1EEEEEE
NSt3__118__weak_result_typeIM12PlugRegistryFbRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
NSt3__115binary_functionIP12PlugRegistryRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbEE
NSt3__110__function6__funcINS_6__bindIM12PlugRegistryFvRK25Plug_RegistrationMetadataPN3tbb17concurrent_vectorI9TfWeakPtrI10PlugPluginENS7_23cache_aligned_allocatorISB_EEEEEJPS3_RKNS_12placeholders4__phILi1EEESF_EEENS_9allocatorISO_EEFvS6_EEE
NSt3__110__function6__baseIFvRK25Plug_RegistrationMetadataEEE
NSt3__16__bindIM12PlugRegistryFvRK25Plug_RegistrationMetadataPN3tbb17concurrent_vectorI9TfWeakPtrI10PlugPluginENS5_23cache_aligned_allocatorIS9_EEEEEJPS1_RKNS_12placeholders4__phILi1EEESD_EEE
NSt3__118__weak_result_typeIM12PlugRegistryFvRK25Plug_RegistrationMetadataPN3tbb17concurrent_vectorI9TfWeakPtrI10PlugPluginENS5_23cache_aligned_allocatorIS9_EEEEEEE
N3tbb10interface78internal18delegated_functionIKZN12_GLOBAL__N_114_TaskArenaImpl4WaitEvE3$_8EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZ17Plug_ReadPlugInfoRKNSt3__16vectorINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENSA_ISC_EEEERKNS5_8functionIFbRKSC_EEERKNSH_IFvRK25Plug_RegistrationMetadataEEEP14Plug_TaskArenaE3$_0EEEE
N3tbb8internal13function_taskIZ17Plug_ReadPlugInfoRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEERKNS2_8functionIFbRKS9_EEERKNSE_IFvRK25Plug_RegistrationMetadataEEEP14Plug_TaskArenaE3$_0EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZNS3_10_AddPluginEPNS3_12_ReadContextERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEESF_mRK7JsValueE3$_2EEEE
N3tbb8internal13function_taskIZN12_GLOBAL__N_110_AddPluginEPNS2_12_ReadContextERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_mRK7JsValueE3$_2EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZNS3_13_ReadPlugInfoEPNS3_12_ReadContextENSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEE3$_3EEEE
N3tbb8internal13function_taskIZN12_GLOBAL__N_113_ReadPlugInfoEPNS2_12_ReadContextENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE3$_3EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZNS3_26_ReadPlugInfoWithWildcardsEPNS3_12_ReadContextERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEE3$_6EEEE
N3tbb8internal13function_taskIZN12_GLOBAL__N_126_ReadPlugInfoWithWildcardsEPNS2_12_ReadContextERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE3$_6EE
NSt3__120__shared_ptr_pointerIPNS_11basic_regexIcNS_12regex_traitsIcEEEENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrINS_11basic_regexIcNS_12regex_traitsIcEEEEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteINS_11basic_regexIcNS_12regex_traitsIcEEEEEE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZNS3_26_ReadPlugInfoWithWildcardsEPNS3_12_ReadContextERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEE3$_7EEEE
N3tbb8internal13function_taskIZN12_GLOBAL__N_126_ReadPlugInfoWithWildcardsEPNS2_12_ReadContextERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE3$_7EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZNS3_18_TraverseDirectoryEPNS3_12_ReadContextERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS7_10shared_ptrINS7_11basic_regexIcNS7_12regex_traitsIcEEEEEEE3$_4EEEE
N3tbb8internal13function_taskIZN12_GLOBAL__N_118_TraverseDirectoryEPNS2_12_ReadContextERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_10shared_ptrINS5_11basic_regexIcNS5_12regex_traitsIcEEEEEEE3$_4EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZNS3_18_TraverseDirectoryEPNS3_12_ReadContextERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS7_10shared_ptrINS7_11basic_regexIcNS7_12regex_traitsIcEEEEEEE3$_5EEEE
N3tbb8internal13function_taskIZN12_GLOBAL__N_118_TraverseDirectoryEPNS2_12_ReadContextERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_10shared_ptrINS5_11basic_regexIcNS5_12regex_traitsIcEEEEEEE3$_5EE
N3tbb10interface78internal18delegated_functionIKN12_GLOBAL__N_14_RunIZ17Plug_ReadPlugInfoRKNSt3__16vectorINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENSA_ISC_EEEERKNS5_8functionIFbRKSC_EEERKNSH_IFvRK25Plug_RegistrationMetadataEEEP14Plug_TaskArenaE3$_1EEEE
N3tbb8internal13function_taskIZ17Plug_ReadPlugInfoRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEERKNS2_8functionIFbRKS9_EEERKNSE_IFvRK25Plug_RegistrationMetadataEEEP14Plug_TaskArenaE3$_1EE
Too many arguments to log session command
Too many arguments to postmortem command
Zvvv:Z
NSt3__111__end_stateIcEE
NSt3__16__nodeIcEE
NSt3__120__shared_ptr_pointerIPNS_13__empty_stateIcEENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrINS_13__empty_stateIcEEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__114default_deleteINS_13__empty_stateIcEEEE
NSt3__113__empty_stateIcEE
NSt3__116__owns_one_stateIcEE
NSt3__115__has_one_stateIcEE
NSt3__120__l_anchor_multilineIcEE
NSt3__120__r_anchor_multilineIcEE
NSt3__115__word_boundaryIcNS_12regex_traitsIcEEEE
NSt3__111__lookaheadIcNS_12regex_traitsIcEEEE
NSt3__123__match_any_but_newlineIcEE
NSt3__118__match_char_icaseIcNS_12regex_traitsIcEEEE
NSt3__120__match_char_collateIcNS_12regex_traitsIcEEEE
NSt3__112__match_charIcEE
NSt3__116__back_ref_icaseIcNS_12regex_traitsIcEEEE
NSt3__118__back_ref_collateIcNS_12regex_traitsIcEEEE
NSt3__110__back_refIcEE
NSt3__120__bracket_expressionIcNS_12regex_traitsIcEEEE
NSt3__128__begin_marked_subexpressionIcEE
NSt3__126__end_marked_subexpressionIcEE
NSt3__16__loopIcEE
NSt3__117__owns_two_statesIcEE
NSt3__117__repeat_one_loopIcEE
NSt3__111__alternateIcEE
NSt3__121__empty_non_own_stateIcEE
NSt3__111__match_anyIcEE
N8TfNotice14_DelivererBaseE
8TfNotice
9TfWeakPtrIN8TfNotice14_DelivererBaseEE
15TfWeakPtrFacadeI9TfWeakPtrN8TfNotice14_DelivererBaseEE
N12_GLOBAL__N_122Tf_RegistryManagerImplE
N3tbb10interface626enumerable_thread_specificIPNSt3__14listINS2_8functionIFvvEEENS2_9allocatorIS6_EEEENS_23cache_aligned_allocatorISA_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafIPNSt3__14listINS3_8functionIFvvEEENS3_9allocatorIS7_EEEENS1_20construct_by_defaultISB_EEEE
N3tbb10interface68internal13callback_baseIPNSt3__14listINS3_8functionIFvvEEENS3_9allocatorIS7_EEEEEE
N3tbb10interface68internal20construct_by_defaultIPNSt3__14listINS3_8functionIFvvEEENS3_9allocatorIS7_EEEEEE
N3tbb10interface626enumerable_thread_specificIN12_GLOBAL__N_122Tf_RegistryManagerImpl19_ActiveLibraryStateENS_23cache_aligned_allocatorIS4_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafIN12_GLOBAL__N_122Tf_RegistryManagerImpl19_ActiveLibraryStateENS1_20construct_by_defaultIS5_EEEE
N3tbb10interface68internal13callback_baseIN12_GLOBAL__N_122Tf_RegistryManagerImpl19_ActiveLibraryStateEEE
N3tbb10interface68internal20construct_by_defaultIN12_GLOBAL__N_122Tf_RegistryManagerImpl19_ActiveLibraryStateEEE
15TfDiagnosticMgr
39TF_LOG_STACK_TRACE_ON_ERROR__DebugCodes
N3tbb10interface626enumerable_thread_specificImNS_23cache_aligned_allocatorImEELNS_18ets_key_usage_typeE0EEE
N3tbb10interface68internal8ets_baseILNS_18ets_key_usage_typeE0EEE
N3tbb10interface68internal13callback_leafImNS1_21construct_by_exemplarImEEEE
N3tbb10interface68internal13callback_baseImEE
N3tbb10interface68internal21construct_by_exemplarImEE
N3tbb10interface626enumerable_thread_specificIbNS_23cache_aligned_allocatorIbEELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafIbNS1_20construct_by_defaultIbEEEE
N3tbb10interface68internal13callback_baseIbEE
N3tbb10interface68internal20construct_by_defaultIbEE
N3tbb10interface626enumerable_thread_specificINSt3__14listI7TfErrorNS2_9allocatorIS4_EEEENS_23cache_aligned_allocatorIS7_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafINSt3__14listI7TfErrorNS3_9allocatorIS5_EEEENS1_20construct_by_defaultIS8_EEEE
N3tbb10interface68internal13callback_baseINSt3__14listI7TfErrorNS3_9allocatorIS5_EEEEEE
N3tbb10interface68internal20construct_by_defaultINSt3__14listI7TfErrorNS3_9allocatorIS5_EEEEEE
N3tbb10interface626enumerable_thread_specificIN15TfDiagnosticMgr8_LogTextENS_23cache_aligned_allocatorIS3_EELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafIN15TfDiagnosticMgr8_LogTextENS1_20construct_by_defaultIS4_EEEE
N3tbb10interface68internal13callback_baseIN15TfDiagnosticMgr8_LogTextEEE
N3tbb10interface68internal20construct_by_defaultIN15TfDiagnosticMgr8_LogTextEEE
N12TfAnyWeakPtr12_EmptyHolderE
N12TfAnyWeakPtr18_PointerHolderBaseE
27TfDebugSymbolsChangedNotice
32TfDebugSymbolEnableChangedNotice
11TfStopwatch
7TfDebug
22Tf_DebugSymbolRegistry
23TfTypeWasDeclaredNotice
-16TfDiagnosticType
14_TfUnknownType
N6TfType11FactoryBaseE
NSt3__16vectorIbNS_9allocatorIbEEEE
NSt3__16vectorIcNS_9allocatorIcEEEE
NSt3__113__vector_baseIcNS_9allocatorIcEEEE
NSt3__16vectorIhNS_9allocatorIhEEEE
NSt3__113__vector_baseIhNS_9allocatorIhEEEE
NSt3__16vectorIsNS_9allocatorIsEEEE
NSt3__113__vector_baseIsNS_9allocatorIsEEEE
NSt3__16vectorItNS_9allocatorItEEEE
NSt3__113__vector_baseItNS_9allocatorItEEEE
NSt3__16vectorIiNS_9allocatorIiEEEE
NSt3__113__vector_baseIiNS_9allocatorIiEEEE
NSt3__16vectorIjNS_9allocatorIjEEEE
NSt3__113__vector_baseIjNS_9allocatorIjEEEE
NSt3__16vectorIlNS_9allocatorIlEEEE
NSt3__113__vector_baseIlNS_9allocatorIlEEEE
NSt3__16vectorImNS_9allocatorImEEEE
NSt3__113__vector_baseImNS_9allocatorImEEEE
NSt3__16vectorIxNS_9allocatorIxEEEE
NSt3__113__vector_baseIxNS_9allocatorIxEEEE
NSt3__16vectorIyNS_9allocatorIyEEEE
NSt3__113__vector_baseIyNS_9allocatorIyEEEE
NSt3__16vectorIfNS_9allocatorIfEEEE
NSt3__113__vector_baseIfNS_9allocatorIfEEEE
15Tf_TypeRegistry
9TfRefBase
15TfSimpleRefBase
15Tf_EnumRegistry
NSt3__110__function6__funcIZN6TfEnum8_AddNameES2_RKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESA_E3$_0NS6_ISB_EEFvvEEE
ZN6TfEnum8_AddNameES_RKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_E3$_0
10Tf_Remnant
17Tf_NoticeRegistry
N3tbb10interface626enumerable_thread_specificImNS_23cache_aligned_allocatorImEELNS_18ets_key_usage_typeE1EEE
N3tbb10interface68internal13callback_leafImNS1_20construct_by_defaultImEEEE
N3tbb10interface68internal20construct_by_defaultImEE
9TfWeakPtrIN8TfNotice5ProbeEE
15TfWeakPtrFacadeI9TfWeakPtrN8TfNotice5ProbeEE
16Tf_TokenRegistry
N7Alembic12AbcCoreOgawa3v106AwImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v106AwImplEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v1011MetaDataMapENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v1011MetaDataMapEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic12AbcCoreOgawa3v1011MetaDataMapEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v106OwDataENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v106OwDataEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic12AbcCoreOgawa3v106OwDataEEE
NSt3__120__shared_ptr_pointerIPN7Alembic5Ogawa3v105ODataENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic5Ogawa3v105ODataEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic5Ogawa3v105ODataEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v1015WrittenSampleIDENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v1015WrittenSampleIDEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic12AbcCoreOgawa3v1015WrittenSampleIDEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v106OwImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v106OwImplEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic12AbcCoreOgawa3v106OwImplEEE
N7Alembic15AbcCoreAbstract3v1018BasePropertyWriterE
NSt3__120__shared_ptr_pointerIPN7Alembic5Ogawa3v107OStreamENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic5Ogawa3v107OStreamEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic5Ogawa3v107OStreamEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v107CprDataENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v107CprDataEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic12AbcCoreOgawa3v107CprDataEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v107CprImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v107CprImplEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic12AbcCoreOgawa3v107CprImplEEE
N7Alembic12AbcCoreOgawa3v107SprImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v107SprImplEEE
N7Alembic12AbcCoreOgawa3v107AprImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v107AprImplEEE
NSt3__121__basic_string_commonILb1EEE
NSt3__120__shared_ptr_pointerIPN7Alembic5Ogawa3v106OGroupENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic5Ogawa3v106OGroupEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic5Ogawa3v106OGroupEEE
N7Alembic15AbcCoreAbstract3v1013ArchiveReaderE
N7Alembic12AbcCoreOgawa3v106OwImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v106OwImplEEE
N7Alembic12AbcCoreOgawa3v106ArImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v106ArImplEEE
NSt3__114default_deleteIN7Alembic15AbcCoreAbstract3v1012ObjectHeaderEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v106OrDataENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v106OrDataEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic12AbcCoreOgawa3v106OrDataEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v106OrImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v106OrImplEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic12AbcCoreOgawa3v106OrImplEEE
N7Alembic15AbcCoreAbstract3v1013ArchiveWriterE
N7Alembic12AbcCoreOgawa3v107ApwImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v107ApwImplEEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1012TimeSamplingENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic15AbcCoreAbstract3v1012TimeSamplingEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v106AwImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v106AwImplEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic12AbcCoreOgawa3v106AwImplEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v106ArImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v106ArImplEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic12AbcCoreOgawa3v106ArImplEEE
N7Alembic15AbcCoreAbstract3v1012ObjectReaderE
N7Alembic15AbcCoreAbstract3v1012ObjectWriterE
N7Alembic4Util3v1011noncopyableE
%6I\o
N7Alembic4Util3v109ExceptionE
NSt3__114default_deleteIN7Alembic15AbcCoreAbstract3v1012TimeSamplingEEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1012ObjectHeaderENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic15AbcCoreAbstract3v1012ObjectHeaderEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v1024PropertyHeaderAndFriendsENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v1024PropertyHeaderAndFriendsEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic12AbcCoreOgawa3v1024PropertyHeaderAndFriendsEEE
N7Alembic15AbcCoreAbstract3v1022CompoundPropertyReaderE
N7Alembic3Abc3v107IObjectE
N7Alembic3Abc3v107OObjectE
N7Alembic15AbcCoreAbstract3v1019ArrayPropertyReaderE
N7Alembic12AbcCoreOgawa3v106OrImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v106OrImplEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v107SpwImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v107SpwImplEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic12AbcCoreOgawa3v107SpwImplEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v107ApwImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v107ApwImplEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic12AbcCoreOgawa3v107ApwImplEEE
NSt3__120__shared_ptr_pointerIPN7Alembic7AbcGeom3v1012OXformSchema4DataENS_10shared_ptrIS5_E27__shared_ptr_default_deleteIS5_S5_EENS_9allocatorIS5_EEEE
NSt3__110shared_ptrIN7Alembic7AbcGeom3v1012OXformSchema4DataEE27__shared_ptr_default_deleteIS5_S5_EE
NSt3__114default_deleteIN7Alembic7AbcGeom3v1012OXformSchema4DataEEE
N7Alembic12AbcCoreOgawa3v107CpwImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v107CpwImplEEE
N7Alembic12AbcCoreOgawa3v107CprImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v107CprImplEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v108StreamIDENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v108StreamIDEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic12AbcCoreOgawa3v108StreamIDEEE
NSt3__120__shared_ptr_pointerIPN7Alembic5Ogawa3v106IGroupENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic5Ogawa3v106IGroupEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic5Ogawa3v106IGroupEEE
NSt3__120__shared_ptr_pointerIPN7Alembic5Ogawa3v105IDataENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic5Ogawa3v105IDataEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic5Ogawa3v105IDataEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v107SprImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v107SprImplEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic12AbcCoreOgawa3v107SprImplEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v107AprImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v107AprImplEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic12AbcCoreOgawa3v107AprImplEEE
N7Alembic15AbcCoreAbstract3v1022CompoundPropertyWriterE
N7Alembic15AbcCoreAbstract3v1020ScalarPropertyWriterE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterINS1_4Util3v106bool_tEEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterINS_4Util3v106bool_tEEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic15AbcCoreAbstract3v1011ArraySampleEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic15AbcCoreAbstract3v1011ArraySampleEEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterIhEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIhEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterIaEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIaEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterItEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterItEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterIsEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIsEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterIjEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIjEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterIiEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIiEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterIyEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIyEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterIxEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIxEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterI4halfEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterI4halfEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterIfEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIfEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterIdEENS_9allocatorIS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterIdEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENSA_IS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEE
NSt3__120__shared_ptr_pointerIPN7Alembic15AbcCoreAbstract3v1011ArraySampleENS3_13TArrayDeleterINS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEEEENSA_IS4_EEEE
N7Alembic15AbcCoreAbstract3v1013TArrayDeleterINSt3__112basic_stringIwNS3_11char_traitsIwEENS3_9allocatorIwEEEEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v107CpwDataENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v107CpwDataEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic12AbcCoreOgawa3v107CpwDataEEE
NSt3__120__shared_ptr_pointerIPN7Alembic12AbcCoreOgawa3v107CpwImplENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic12AbcCoreOgawa3v107CpwImplEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic12AbcCoreOgawa3v107CpwImplEEE
N7Alembic15AbcCoreAbstract3v1019ArrayPropertyWriterE
N7Alembic15AbcCoreAbstract3v1018BasePropertyReaderE
NSt3__120__shared_ptr_pointerIPN7Alembic5Ogawa3v108IStreamsENS_10shared_ptrIS4_E27__shared_ptr_default_deleteIS4_S4_EENS_9allocatorIS4_EEEE
NSt3__110shared_ptrIN7Alembic5Ogawa3v108IStreamsEE27__shared_ptr_default_deleteIS4_S4_EE
NSt3__114default_deleteIN7Alembic5Ogawa3v108IStreamsEEE
N7Iex_2_27MathExcE
N7Alembic15AbcCoreAbstract3v1020ScalarPropertyReaderE
Ogawa
N7Alembic12AbcCoreOgawa3v107SpwImplE
NSt3__123enable_shared_from_thisIN7Alembic12AbcCoreOgawa3v107SpwImplEEE
MDLSkinDeformer
NSCopying
MDLSkinDeformerComponent
MDLComponent
NSObject
MDLNamed
MDLTextureFilter
MDLTextureSampler
MDLMaterialProperty
MDLScatteringFunction
MDLPhysicallyPlausibleScatteringFunction
MDLMaterial
NSFastEnumeration
MDLMaterialPropertyConnection
MDLMaterialPropertyNode
MDLMaterialPropertyGraph
MDLMorphDeformer
MDLMorphDeformerComponent
MDLAssetLoader
MDLRelativeAssetResolver
MDLAssetResolver
MDLPathAssetResolver
MDLBundleAssetResolver
MDLArchiveAssetResolver
Generators
MDLBufferView
MDLBufferViewAllocator
NSSecureCoding
NSCoding
MDLMeshBufferView
MDLMeshBuffer
MDLMeshBufferViewAllocator
MDLMeshBufferAllocator
_MDLProbeCluster
AssetLoaderProtocol
MDLAsset
MDLLightBaking
MDLLight
MDLPhysicallyPlausibleLight
MDLAreaLight
MDLPhotometricLight
MDLTransformRotateXOp
MDLTransformOp
MDLTransformRotateYOp
MDLTransformRotateZOp
MDLTransformTranslateOp
MDLTransformRotateOp
MDLTransformScaleOp
MDLTransformOrientOp
MDLTransformMatrixOp
MDLTransformComponent
MDLTransformStack
MDLLightProbe
MDLVolumeGrid
ExportUSDZ
MDLSubmeshTopology
MDLSubmesh
MDLSubmeshProxy
MDLCamera
MDLStereoscopicCamera
MDLInteractiveCameraController
MDLJointAnimation
MDLVoxelArray
MDLVertexBufferLayout
MDLVertexAttribute
MDLVertexDescriptor
MDLMatrix4x4Array
MDLAnimatedValue
MDLAnimatedScalarArray
MDLAnimatedVector3Array
MDLAnimatedQuaternionArray
MDLAnimatedScalar
MDLAnimatedVector2
MDLAnimatedVector3
MDLAnimatedVector4
MDLAnimatedQuaternion
MDLAnimatedMatrix4x4
MDLVertexAttributeData
MDLMesh
Modifiers
Deprecated
MDLAnimationRig
MDLMeshProxy
MDLSkeleton
MDLPackedJointAnimation
MDLAnimationBindComponent
MDLMemoryMappedData
MDLScene
MDLTransform
_MDL_DarwinHelper__internal
MDLMeshBufferMap
MDLMeshBufferZoneDefault
MDLMeshBufferZone
MDLMeshBufferData
MDLMeshBufferDataAllocator
MDLMeshBufferAllocatorDefault
MDLObject
MDLObjectContainer
MDLObjectContainerComponent
MDLTexture
MDLNoiseTexture
MDLURLTexture
MDLCheckerboardTexture
MDLColorSwatchTexture
MDLSkyCubeTexture
MDLNormalMapTexture
stringWithUTF8String:
URLWithString:
componentsWithURL:resolvingAgainstBaseURL:
queryItems
countByEnumeratingWithState:objects:count:
name
isEqualToString:
value
UTF8String
allocWithZone:
initWithJointPaths:jointBindTransforms:meshBindTransform:
init
copy
count
initWithBytes:length:
length
bytes
copyWithZone:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
copyJointBindTransformsInto:maxCount:
jointPaths
jointBindTransforms
meshBindTransform
T@"NSArray",R,N
T@"NSData",R,N
T{?=[4]},R,N
initWithJointPaths:jointBindTransforms:count:meshBindTransform:
.cxx_destruct
_jointPaths
_jointBindTransforms
_meshBindTransform
T@"NSArray",R,N,V_jointPaths
T@"NSData",R,N,V_jointBindTransforms
T{?=[4]},R,N,V_meshBindTransform
initWithBytesNoCopy:length:freeWhenDone:
newBufferWithData:type:
setName:
T@"NSString",C,N
stringByAppendingString:
dataWithBytesNoCopy:length:freeWhenDone:
attributes
objectAtIndexedSubscript:
setFormat:
setOffset:
setBufferIndex:
layouts
setStride:
stringWithFormat:
initWithName:scatteringFunction:
propertyWithSemantic:
setFloatValue:
initWithIndexBuffer:indexCount:indexType:geometryType:material:
arrayWithObjects:count:
initWithVertexBuffer:vertexCount:descriptor:submeshes:
addNormalsWithAttributeNamed:creaseThreshold:
boundingBox
boundingBoxAtTime:
vertexAttributeDataForAttributeNamed:asFormat:
dataStart
stride
bufferSize
indexBuffer
indexCount
geometryType
indexType
topology
faceTopology
faceCount
vertexCount
material
transform
matrix
submeshes
children
setMagFilter:
setMinFilter:
setMipFilter:
sWrapMode
setSWrapMode:
tWrapMode
setTWrapMode:
rWrapMode
setRWrapMode:
minFilter
magFilter
mipFilter
TQ,N,VsWrapMode
TQ,N,VtWrapMode
TQ,N,VrWrapMode
TQ,N,VminFilter
TQ,N,VmagFilter
TQ,N,VmipFilter
texture
setTexture:
hardwareFilter
setHardwareFilter:
setTransform:
mappingChannel
setMappingChannel:
textureComponents
setTextureComponents:
TQ,N,VmappingChannel
Tq,N,VtextureComponents
T@"MDLTexture",&,N,Vtexture
T@"MDLTextureFilter",&,N,VhardwareFilter
T@"MDLTransform",&,N,Vtransform
setColor:
stringWithString:
clear
initWithName:semantic:
type
raise:format:
dealloc
color
stringValue
URLValue
textureSamplerValue
floatValue
luminance
float2Value
float3Value
float4Value
matrix4x4
encodeBytes:length:forKey:
decodeBytesForKey:returnedLength:
_encodeVector:withCoder:forKey:
_decodeVectorWithCoder:forKey:
encodeObject:forKey:
_encodeMatrixPropertyWithCoder:forKey:
encodeBuffer:withCoder:forKey:
encodeInteger:forKey:
decodeObjectOfClass:forKey:
_decodeMatrixPropertyWithCoder:forKey:
decodeBufferWithCoder:forKey:
decodeIntegerForKey:
decodeMaterialPropertyWithCoder:forKey:allocator:
semantic
setSemantic:
initWithName:semantic:float:
initWithName:semantic:float2:
initWithName:semantic:float3:
initWithName:semantic:float4:
initWithName:semantic:matrix4x4:
initWithName:semantic:URL:
initWithName:semantic:string:
initWithName:semantic:textureSampler:
initWithName:semantic:float4WithSRGBA:
initWithName:semantic:color:
initWithName:buffer:stride:
initWithName:buffer:
setProperties:
bufferData
setStringValue:
setURLValue:
setTextureSamplerValue:
setLuminance:
setFloat2Value:
setFloat3Value:
setFloat4Value:
setMatrix4x4Value:
encodeMaterialPropertyWithCoder:forKey:allocator:
setType:
setMatrix4x4:
isDefaultValue
setIsDefaultValue:
_string
_name
_url
_textureSampler
_float
_matrix
_color
_buffer
_stride
_semantic
_node
_overrider
_overridee
_isDefaultValue
_type
_matrix4x4
TB,N,V_isDefaultValue
T@"MDLBufferView",R,N
TQ,R,N
TQ,N
TQ,N,V_type
T@"NSURL",C,N
T@"MDLTextureSampler",&,N
T^{CGColor=},N
Tf,N
T{?=[4]},N,V_matrix4x4
baseColor
emission
specular
materialIndexOfRefraction
interfaceIndexOfRefraction
normal
ambientOcclusion
ambientOcclusionScale
.cxx_construct
_baseColor
_bsdf
_emission
_specular
_materialIndexOfRefraction
_interfaceIndexOfRefraction
_normal
_ambientOcclusion
_ambientOcclusionScale
T@"NSString",C,N,V_name
T@"MDLMaterialProperty",R,&,N,V_baseColor
T@"MDLMaterialProperty",R,&,N,V_emission
T@"MDLMaterialProperty",R,&,N,V_specular
T@"MDLMaterialProperty",R,&,N,V_materialIndexOfRefraction
T@"MDLMaterialProperty",R,&,N,V_interfaceIndexOfRefraction
T@"MDLMaterialProperty",R,&,N,V_normal
T@"MDLMaterialProperty",R,&,N,V_ambientOcclusion
T@"MDLMaterialProperty",R,&,N,V_ambientOcclusionScale
version
subsurface
metallic
specularAmount
specularTint
roughness
anisotropic
anisotropicRotation
sheen
sheenTint
clearcoat
clearcoatGloss
_physicalBSDF
_subsurface
_metallic
_specularAmount
_specularTint
_roughness
_anisotropic
_anisotropicRotation
_sheen
_sheenTint
_clearcoat
_clearcoatGloss
Tq,R,N
T@"MDLMaterialProperty",R,&,N,V_subsurface
T@"MDLMaterialProperty",R,&,N,V_metallic
T@"MDLMaterialProperty",R,&,N,V_specularAmount
T@"MDLMaterialProperty",R,&,N,V_specularTint
T@"MDLMaterialProperty",R,&,N,V_roughness
T@"MDLMaterialProperty",R,&,N,V_anisotropic
T@"MDLMaterialProperty",R,&,N,V_anisotropicRotation
T@"MDLMaterialProperty",R,&,N,V_sheen
T@"MDLMaterialProperty",R,&,N,V_sheenTint
T@"MDLMaterialProperty",R,&,N,V_clearcoat
T@"MDLMaterialProperty",R,&,N,V_clearcoatGloss
valueForKey:
addObject:
resolveAssetNamed:
objectForKey:
textureNamed:assetResolver:
setObject:forKeyedSubscript:
loadTexturesUsingArchiveAssetResolver:cache:
resolveTexturesWithResolver:
textureWithURL:
objectForKeyedSubscript:
loadTexturesUsingResolver:cache:
setScatteringFunction:
baseMaterial
propertyNamed:
array
propertiesWithSemantic:
removeObject:
decodeMaterialWithCoder:allocator:
scatteringFunction
loadTexturesUsingResolver:
initWithName:physicallyPlausibleBSDF:
conformToMatProperties
setProperty:
removeProperty:
removeAllProperties
bsdf
encodeMaterialWithCoder:allocator:
setBaseMaterial:
materialFace
setMaterialFace:
_userProperties
_builtinProperties
_scatteringFunction
_baseMaterial
_materialFace
T@"MDLScatteringFunction",R,&,N
T@"MDLMaterial",&,N,V_baseMaterial
TQ,N,V_materialFace
initWithOutput:input:
input
output
_input
_output
T@"MDLMaterialProperty",R,W,N,V_output
T@"MDLMaterialProperty",R,W,N,V_input
containsObject:
arrayWithArray:
initWithInputs:outputs:evaluationFunction:
evaluationFunction
setEvaluationFunction:
inputs
outputs
_inputs
_outputs
_inputNodes
_evaluationFunction
T@?,C,N,V_evaluationFunction
T@"NSArray",R,N,V_inputs
T@"NSArray",R,N,V_outputs
setObject:forKey:
initWithNodes:connections:
evaluate
nodes
connections
_nodes
_connections
_finalNodes
T@"NSArray",R,N,V_nodes
T@"NSArray",R,N,V_connections
initWithOther:
targetShapes
shapeSetTargetWeights
shapeSetTargetCounts
weights
unsignedIntValue
initWithElementCount:
numberWithFloat:
numberWithUnsignedInt:
T@"MDLAnimatedScalarArray",R,N
initWithTargetShapes:shapeSetTargetWeights:shapeSetTargetCounts:
initWithTargetShapes:shapeSetTargetWeights:count:shapeSetTargetCounts:count:
copyShapeSetTargetWeightsInto:maxCount:
copyShapeSetTargetCountsInto:maxCount:
setWeights:
targetWeights
setTargetWeights:
targetCounts
setTargetCounts:
_targetShapes
_weights
_targetWeights
_targetCounts
T@"MDLAnimatedScalarArray",&,N,V_weights
T@"NSData",&,N,V_targetWeights
T@"NSData",&,N,V_targetCounts
T@"NSArray",R,N,V_targetShapes
initWithBufferAllocator:
dataWithBytes:length:
addAttributeWithName:format:type:data:stride:
allocator
initWithName:indexBuffer:indexCount:indexType:geometryType:material:topology:
setVertexCount:
setSubmeshes:
fileURLWithPath:
lastPathComponent
path
stringByDeletingLastPathComponent
cStringUsingEncoding:
vertexAttributeDataForAttributeNamed:
format
stringByAppendingFormat:
writeToURL:
resolver
stringWithCString:encoding:
absoluteString
initWithCString:encoding:
bufferAllocator
setFaceTopology:
setFaceCount:
objectAtIndex:
numberWithUnsignedInteger:
initWithName:indexBuffer:indexCount:indexType:faceIndexing:geometryType:material:topology:
setPackedOffsets
setPackedStrides
_conformVertexBuffers:error:
vertexDescriptor
newBufferFromZone:data:type:
newBufferFromZone:length:type:
newBuffer:type:
initWithVertexBuffers:vertexCount:descriptor:submeshes:
loadURL:
initWithExtension:
_extension
isAbsolutePath
URLByDeletingLastPathComponent
URLByAppendingPathComponent:
canResolveAssetNamed:
initWithAsset:
asset
setAsset:
_asset
T@"MDLAsset",W,N,V_asset
hasSuffix:
fileURLWithPath:isDirectory:
setPath:
initWithPath:
_path
URLForResource:withExtension:
initWithBundle:
_bundle
T@"NSString",C,N,V_path
enumerateKeysAndObjectsUsingBlock:
removeObjectForKey:
initWithURL:
addResolvedAssetNamed:offset:fileSize:
resolveInsideArchiveWithAssetNamed:
assetNamesInArchive
removeAssetNamed:
data
setData:
_archiveURL
_archiveDictionary
_rootUSDPath
_data
T@"NSData",&,N,V_data
initWithLength:
mutableBytes
currentProgress
completedUnitCount
lock
unlock
setCompletedUnitCount:
initWithURL:vertexDescriptor:bufferAllocator:
initConeWithExtent:segments:inwardNormals:cap:geometryType:allocator:
newEllipticalConeWithHeight:radii:radialSegments:verticalSegments:geometryType:inwardNormals:allocator:
_createWithVertexBuffer:vertexCount:descriptor:submeshes:
initBoxWithExtent:segments:inwardNormals:geometryType:allocator:
initIcosahedronWithExtent:inwardNormals:geometryType:allocator:
initHemisphereWithExtent:segments:inwardNormals:cap:geometryType:allocator:
initSphereWithExtent:segments:inwardNormals:geometryType:allocator:
initMeshBySubdividingMesh:submeshIndex:subdivisionLevels:allocator:
newBoxWithDimensions:segments:geometryType:inwardNormals:allocator:
newIcosahedronWithRadius:inwardNormals:geometryType:allocator:
newIcosahedronWithRadius:inwardNormals:allocator:
newEllipsoidWithRadii:radialSegments:verticalSegments:geometryType:inwardNormals:hemisphere:allocator:
newSubdividedMesh:submeshIndex:subdivisionLevels:
initWithBytesNoCopy:length:offset:regionIndex:allocator:
_length
_offset
_regionIndex
_allocator
_writable
Tr^v,R,N
iosurface
encodeXPCObject:forKey:
decodeXPCObjectForKey:
initWithCapacity:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithSharedRegionsNoCopy:
newBufferViewAtRegionIndex:length:offset:
newBufferViewAtRegionIndex:
encodeBuffers:withCoder:forKey:
decodeBuffersWithCoder:forKey:
_sharedRegions
_owned
_regionIndices
fillData:offset:
T@"<MDLMeshBufferAllocator>",R,&,N
T@"<MDLMeshBufferZone>",R,&,N
initWithBufferViewNoCopy:type:
encodeMeshBuffer:withCoder:forKey:
decodeMeshBufferWithCoder:forKey:
newZone:
newZoneForBuffersWithSize:andType:
newBufferViewAtRegionIndex:type:length:offset:
newBufferViewAtRegionIndex:type:
encodeMeshBuffers:withCoder:forKey:
decodeMeshBuffersWithCoder:forKey:
initCapsuleWithExtent:cylinderSegments:hemisphereSegments:inwardNormals:geometryType:allocator:
newCapsuleWithHeight:radii:radialSegments:verticalSegments:hemisphereSegments:geometryType:inwardNormals:allocator:
probes
centroid
isEqualToCluster:
position
isEmpty
calculateCentroidNotIncludingSamplesinArray:
setCentroid:
setProbes:
_probes
_centroid
T,V_centroid
T@"NSMutableSet",&,V_probes
masters
setMasters:
setComponent:forProtocol:
componentConformingToProtocol:
objectEnumerator
allObjects
isSubclassOfClass:
initWithString:
recursiveDescription
appendString:
enumerateChildObjectsOfClass:root:usingBlock:stopPointer:
enumerateChildObjectsOfClass:usingBlock:stopPointer:
_bounds
childObjectsOfClass:
minimumTime
maximumTime
lowercaseString
meters
_commonInit
defaultManager
removeItemAtURL:error:
offset
bufferIndex
time
setVertexDescriptor:
boolValue
doubleValue
pathExtension
centimeters
initWithUTF8String:
resolveTextures
stringByStandardizingPath
initWithContentsOfURL:options:error:
initWithServiceName:
loadURL:extensionToken:withReply:
interfaceWithProtocol:
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
resume
localizedDescription
synchronousRemoteObjectProxyWithErrorHandler:
initWithIESProfile:
generateCubemapFromLight:
generateSphericalHarmonicsFromLight:
initWithFormat:
numberWithBool:
initWithURL:options:error:
initWithURL:vertexDescriptor:bufferAllocator:preserveTopology:error:
initWithURL:bufferAllocator:preserveIndexing:error:
exportAssetToURL:error:
characterSetWithCharactersInString:
stringByTrimmingCharactersInSet:
componentsSeparatedByString:
substringFromIndex:
objectAtPath:
canExportFileExtension:
canImportFileExtension:
originals
setOriginals:
components
loadTextures
startTime
endTime
setStartTime:
setEndTime:
initWithData:name:vertexDescriptor:bufferAllocator:preserveTopology:error:
initThroughSCNKitBridgeWithURL:preserveTopology:error:
exportAssetToURL:
objects
animations
setAnimations:
_temporaryFolderURL
set_temporaryFolderURL:
frameInterval
setFrameInterval:
upAxis
setUpAxis:
setResolver:
_timeCodesPerSecond
set_timeCodesPerSecond:
unitLength
setUnitLength:
metersPerUnit
setMetersPerUnit:
extents
setExtents:
_URL
_objects
_masters
_animations
_startTime
_endTime
_upAxis
_metersPerUnit
_isSceneKitBridged
_components
_frameInterval
_resolver
_bufferAllocator
_vertexDescriptor
__timeCodesPerSecond
_unitLength
_extents
T{MDLAABB=},R,N
Td,N,V__timeCodesPerSecond
T@"NSURL",&,N,V_temporaryFolderURL
T@"NSUnitLength",&,N,V_unitLength
Tf,N,V_metersPerUnit
T@"MDLAnimatedVector3Array",&,N,V_extents
T{?=},R,N
Td,N,V_frameInterval
Td,N
T,N,V_upAxis
T@"NSURL",R,&,N
T@"<MDLAssetResolver>",&,N,V_resolver
T@"<MDLMeshBufferAllocator>",R,&,N,V_bufferAllocator
T@"MDLVertexDescriptor",R,&,N,V_vertexDescriptor
T@"<MDLObjectContainerComponent>",&,N,V_masters
T@"<MDLObjectContainerComponent>",&,N
T@"<MDLObjectContainerComponent>",&,N,V_animations
sphericalHarmonicsCoefficientsAtPosition:
initWithIdentity
setTranslation:
sphericalHarmonicsLevel
calculateIrradianceGradientUsingSamples:ofSize:fromSH:withLevel:
indexOfObject:
removeObjectsInArray:
placeLightProbesWithDensity:heuristic:usingIrradianceDataSource:
instance
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
colorSpace
setColorSpace:
setLightType:
rtLight
irradianceAtPoint:
irradianceAtPoint:colorSpace:
lightType
_light
_colorSpace
_cgColorSpace
_lightType
TQ,N,V_lightType
setInnerConeAngle:
setOuterConeAngle:
setAttenuationStartDistance:
setAttenuationEndDistance:
setAttenuationFalloffExponent:
setLumens:
setColorByTemperature:
lumens
innerConeAngle
outerConeAngle
attenuationStartDistance
attenuationEndDistance
attenuationFalloffExponent
_lumens
_innerConeAngle
_outerConeAngle
_attenuationStartDistance
_attenuationEndDistance
_attenuationFalloffExponent
Tf,N,V_attenuationFalloffExponent
Tf,N,V_lumens
Tf,N,V_innerConeAngle
Tf,N,V_outerConeAngle
Tf,N,V_attenuationStartDistance
Tf,N,V_attenuationEndDistance
setAreaRadius:
setAspect:
setSuperEllipticPower:
areaRadius
superEllipticPower
aspect
_areaRadius
_aspect
_superEllipticPower
Tf,N,V_areaRadius
T,N,V_superEllipticPower
Tf,N,V_aspect
dataWithData:
dataWithContentsOfURL:
computeLumens
computeInnerAngle
translation
initWithData:topLeftOrigin:name:dimensions:rowStride:channelCount:channelEncoding:isCube:
rotationMatrixAtTime:
generateTexture:
dimensions
texelDataWithBottomLeftOrigin
setLength:
sphericalHarmonicsCoefficients
setSphericalHarmonicsCoefficients:
computeSceneKitRenderingTexture:
evaluatedColorFromSHVector:
lightCubeMap
_iesLight
_sphericalHarmonicsCoefficients
_lightCubeMap
_sphericalHarmonicsLevel
T@"MDLTexture",R,&,N,V_lightCubeMap
TQ,R,N,V_sphericalHarmonicsLevel
T@"NSData",R,C,N
setMatrix:
initPlaneWithExtent:segments:geometryType:allocator:
newPlaneWithDimensions:segments:geometryType:allocator:
initWithName:format:offset:bufferIndex:
numberWithInteger:
setInitializationValue:
addOrReplaceAttribute:
initializationValue
removeAllObjects
attributeNamed:
integerValue
setObject:atIndexedSubscript:
addAttributeWithName:format:
resetWithAnimatedValue:
setEdgeCreaseIndices:
setEdgeCreaseCount:
setEdgeCreases:
setVertexCreaseIndices:
setVertexCreaseCount:
setVertexCreases:
setSubdivisionScheme:
timeSampleCount
elementCount
getTimes:maxCount:
getDoubleArray:maxCount:atTime:
vertexCreaseIndices
vertexCreases
vertexCreaseCount
edgeCreaseIndices
edgeCreases
edgeCreaseCount
holes
holeCount
vertexBuffers
addMatrixOp:inverse:
animatedValue
setFloat4x4:atTime:
defaultCStringEncoding
addRotateXOp:inverse:
resetWithUsdAttribute:timeScale:
resetWithUsdAttribute:timeScale:time:
addRotateYOp:inverse:
addRotateZOp:inverse:
addTranslateOp:inverse:
addScaleOp:inverse:
addRotateOp:order:inverse:
addOrientOp:inverse:
floatAtTime:
doubleAtTime:
float4x4AtTime:
double4x4AtTime:
IsInverseOp
T@"NSString",R,N
initWithName:inverse:data:
inverse
setInverse:
_inverse
_animatedValue
TB,N,V_inverse
T@"NSString",R,N,V_name
T@"MDLAnimatedScalar",R,N,V_animatedValue
float3AtTime:
double3AtTime:
T@"MDLAnimatedVector3",R,N,V_animatedValue
initWithName:inverse:order:data:
order
setOrder:
_order
TQ,N,V_order
floatQuaternionAtTime:
doubleQuaternionAtTime:
T@"MDLAnimatedQuaternion",R,N,V_animatedValue
T@"MDLAnimatedMatrix4x4",R,N,V_animatedValue
keyTimes
addObjectsFromArray:
orderedSetWithArray:
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
animatedVector3WithName:shouldCreateIfMissing:
animatedScalarWithName:shouldCreateIfMissing:
animatedMatrix4x4WithName:shouldCreateIfMissing:
animatedQuaternionWithName:shouldCreateIfMissing:
localTransformAtTime:
setLocalTransform:
clearTransformStack
resetsTransform
setResetsTransform:
setLocalTransform:forTime:
globalTransformWithObject:atTime:
T{?=[4]},N
TB,N
Td,R,N
T@"NSArray",R,C,N
parent
localTransformWithObject:atTime:
arrayWithCapacity:
animation
setKeyPath:
numberWithDouble:
setValues:
setFillMode:
setKeyTimes:
setBeginTime:
setDuration:
setAdditive:
setRemovedOnCompletion:
setRepeatCount:
isScaleRotateTransformOrder
decomposedTransformAnimation
valueWithCATransform3D:
beginTime
animatedVector4WithName:shouldCreateIfMissing:
animatedValueWithName:
transformAnimation
transformOps
setTransformOps:
animatedValues
setAnimatedValues:
_resetsTransform
_transformOps
_animatedValues
T@"NSMutableArray",C,N,V_transformOps
T@"NSMutableDictionary",&,N,V_animatedValues
T@"CAAnimation",R,N
TB,N,V_resetsTransform
valueWithCGRect:
sampleSHAt:usingCoefficients:withLevel:
initWithReflectiveTexture:irradianceTexture:
generateIrradianceTextureFromReflective
generateSphericalHarmonicsFromIrradiance:
reflectiveTexture
irradianceTexture
_reflectiveTexture
_irradianceTexture
_transform
T@"MDLTexture",R,&,N,V_reflectiveTexture
T@"MDLTexture",R,&,N,V_irradianceTexture
raytraceSceneWithCamera:reflection:irradiance:size:
replaceBytesInRange:withBytes:length:
irradianceTextureCubeWithTexture:name:dimensions:roughness:
lightProbeWithTextureSize:forLocation:lightsToConsider:objectsToConsider:reflectiveCubemap:irradianceCubemap:
initWithAsset:divisions:
initWithObject:divisions:
initWithAsset:divisions:interiorWidth:exteriorWidth:patchRadius:
meshWithStyle:
trianglesIntersectingRayWithOrigin:direction:count:
_octree
initWithName:jointPaths:
translations
rotations
scales
resetWithUsdAttribute:time:
jointRestTransforms
setSkeleton:
setJointAnimation:
setGeometryBindTransform:
setJointPaths:
initWithName:indexBuffer:indexCount:indexType:geometryType:material:
getFloatArray:maxCount:
setFloatArray:count:atTime:
initWithMatrix:
makeVerticesUniqueAndReturnError:
fractionCompleted
updateAttributeNamed:withData:
progressWithTotalUnitCount:
setCancellable:
setPausable:
becomeCurrentWithPendingUnitCount:
resignCurrent
convertToUSDZ:writeToURL:
convertToUSDZWithURL:
isValidUSDZResource:
decodeTopologyWithCoder:allocator:
initWithSubmesh:
encodeTopologyWithCoder:allocator:
setHoles:
setHoleCount:
_faceTopology
_faceCount
_vertexCreaseIndices
_vertexCreases
_vertexCreaseCount
_edgeCreaseIndices
_edgeCreases
_edgeCreaseCount
_holes
_holeCount
T@"<MDLMeshBuffer>",&,N,V_faceTopology
TQ,N,V_faceCount
T@"<MDLMeshBuffer>",&,N,V_vertexCreaseIndices
T@"<MDLMeshBuffer>",&,N,V_vertexCreases
TQ,N,V_vertexCreaseCount
T@"<MDLMeshBuffer>",&,N,V_edgeCreaseIndices
T@"<MDLMeshBuffer>",&,N,V_edgeCreases
TQ,N,V_edgeCreaseCount
T@"<MDLMeshBuffer>",&,N,V_holes
TQ,N,V_holeCount
null
dataWithLength:
initWithMDLSubmesh:indexType:geometryType:
indexBufferAsIndexType:
debugPrintToFile:
boundingBoxForMesh:
setMaterial:
setTopology:
faceIndexing
setFaceIndexing:
_material
_indexCount
_indexBuffer
_geometryType
_indexType
_topology
_faceIndexing
T@"NSArray",&,N,V_faceIndexing
T@"<MDLMeshBuffer>",R,&,N,V_indexBuffer
TQ,R,N,V_indexCount
TQ,R,N,V_indexType
Tq,R,N,V_geometryType
T@"MDLMaterial",&,N,V_material
T@"MDLSubmeshTopology",&,N,V_topology
appendFormat:
apertureBladeCount
rtCamera
getViewMatrixAtTime:
projectionMatrix
getProjectionMatrixAtTime:
rayTo:forViewPort:
focalLength
setFocalLength:
focusDistance
setFocusDistance:
aperture
setAperture:
sensorVerticalAperture
setSensorVerticalAperture:
sensorEnlargement
setSensorEnlargement:
sensorShift
setSensorShift:
setFov:
fieldOfView
setFieldOfView:
sensorAspect
setSensorAspect:
circleOfConfusionForDistance:
zNear
setZNear:
zFar
setZFar:
nearVisibilityDistance
setNearVisibilityDistance:
farVisibilityDistance
setFarVisibilityDistance:
bokehKernelWithSize:
exposure
setExposure:
exposureCompression
setExposureCompression:
frameBoundingBox:setNearAndFar:
lookAt:
lookAt:from:
worldToMetersConversionScale
setWorldToMetersConversionScale:
focalDistanceAnimation
setFocalDistanceAnimation:
fStopAnimation
setFStopAnimation:
focalLengthAnimation
setFocalLengthAnimation:
apertureAnimation
setApertureAnimation:
apertureAspectAnimation
setApertureAspectAnimation:
projection
setProjection:
barrelDistortion
setBarrelDistortion:
fisheyeDistortion
setFisheyeDistortion:
opticalVignetting
setOpticalVignetting:
chromaticAberration
setChromaticAberration:
fStop
setFStop:
setApertureBladeCount:
maximumCircleOfConfusion
setMaximumCircleOfConfusion:
shutterOpenInterval
setShutterOpenInterval:
flash
setFlash:
_camera
_worldToMetersConversionScale
_focalDistanceAnimation
_fStopAnimation
_focalLengthAnimation
_apertureAnimation
_apertureAspectAnimation
_barrelDistortion
_fisheyeDistortion
_opticalVignetting
_chromaticAberration
_fStop
_maximumCircleOfConfusion
_projection
_apertureBladeCount
_shutterOpenInterval
_flash
T@"CAAnimation",C,N,V_focalLengthAnimation
T@"CAAnimation",C,N,V_focalDistanceAnimation
T@"CAAnimation",C,N,V_fStopAnimation
T@"CAAnimation",C,N,V_apertureAnimation
T@"CAAnimation",C,N,V_apertureAspectAnimation
TQ,N,V_projection
Tf,N,V_worldToMetersConversionScale
Tf,N,V_barrelDistortion
Tf,N,V_fisheyeDistortion
Tf,N,V_opticalVignetting
Tf,N,V_chromaticAberration
Tf,N,V_fStop
TQ,N,V_apertureBladeCount
Tf,N,V_maximumCircleOfConfusion
Td,N,V_shutterOpenInterval
T,N,V_flash
leftViewMatrix
rightViewMatrix
leftProjectionMatrix
rightProjectionMatrix
interPupillaryDistance
setInterPupillaryDistance:
leftVergence
setLeftVergence:
rightVergence
setRightVergence:
overlap
setOverlap:
_interPupillaryDistance
_leftVergence
_rightVergence
_overlap
Tf,N,V_interPupillaryDistance
Tf,N,V_leftVergence
Tf,N,V_rightVergence
Tf,N,V_overlap
frameObject
update:
setFramingBounds:
frameBounds
framingBounds
setClickPoint:
clickPoint
targetPosition
setTargetPosition:
setPosition:
mouseMotionX:Y:
camera
setCamera:
dragPoint
setDragPoint:
trackVector
setTrackVector:
mode
setMode:
tumbleSpeed
setTumbleSpeed:
zoomSpeed
setZoomSpeed:
trackSpeed
setTrackSpeed:
targetDistance
setTargetDistance:
viewSize
setViewSize:
zoom
setZoom:
_lookAt
_clickPoint
_dragVector
_pitch
_yaw
_framingBounds
_targetElevation
_tumbleSpeed
_zoomSpeed
_trackSpeed
_targetDistance
_zoom
_dragPoint
_mode
_viewSize
_trackVector
T@"MDLStereoscopicCamera",C,N,V_camera
T,N,V_dragPoint
T,N,V_trackVector
TQ,N,V_mode
Tf,N,V_tumbleSpeed
Tf,N,V_zoomSpeed
Tf,N,V_trackSpeed
Tf,N,V_targetDistance
T{MDLAABB=},N
T,N,V_viewSize
Tf,N,V_zoom
setFloat3Array:count:atTime:
addChild:
setInstance:
setHidden:
recalculateExtents
spatialLocationOfIndex:
dilateNarrowBandInteriorWidthTo:AndExteriorWidthTo:
erodeNarrowBandInteriorWidthTo:AndExteriorWidthTo:selector:
coarseMeshUsingAllocator:
voxelIndexExtent
initWithAsset:divisions:patchRadius:
convertToSignedShellField
setVoxelsForMesh:divisions:patchRadius:
initWithData:boundingBox:voxelExtent:
voxelExistsAtIndex:allowAnyX:allowAnyY:allowAnyZ:allowAnyShell:
voxelsWithinExtent:
voxelIndices
setVoxelAtIndex:
unionWithVoxels:
intersectWithVoxels:
differenceWithVoxels:
indexOfSpatialLocation:
voxelBoundingBoxAtIndex:
isValidSignedShellField
setShellFieldInteriorThickness:
setShellFieldExteriorThickness:
coarseMesh
meshUsingAllocator:
coarseVoxelMeshWithStyle:
boxesPerLayer
initWithAsset:divisions:interiorShells:exteriorShells:patchRadius:
initWithAsset:divisions:interiorNBWidth:exteriorNBWidth:patchRadius:
setVoxelsForMesh:divisions:interiorShells:exteriorShells:patchRadius:
setVoxelsForMesh:divisions:interiorNBWidth:exteriorNBWidth:patchRadius:
shellFieldInteriorThickness
shellFieldExteriorThickness
_voxels
_extent
_voxelExtent
mortonCoder
_octreeData
_levelSet
_interiorThickness
_exteriorThickness
_originatingOffset
T{?=},R,N,V_extent
TB,R,N
Tf,N,V_interiorThickness
Tf,N,V_exteriorThickness
initWithStride:
TQ,N,V_stride
setTime:
_bufferIndex
_format
_time
_initializationValue
TQ,N,V_format
TQ,N,V_offset
TQ,N,V_bufferIndex
Td,N,V_time
T,N,V_initializationValue
initWithVertexDescriptor:
numberWithUnsignedLong:
unsignedLongValue
isEqualToArray:
encodeInt32:forKey:
encodeDouble:forKey:
decodeDoubleForKey:
_encodeVertexDescriptorAttributesWithCoder:
_encodeVertexDescriptorLayoutsWithCoder:
_decodeVertexDescriptorAttributesWithCoder:
setAttributes:
_decodeVertexDescriptorLayoutsWithCoder:
setLayouts:
decodeVertexDescriptorWithCoder:
removeAttributeNamed:
reset
encodeVertexDescriptorWithCoder:
_attributes
_layouts
T@"NSMutableArray",&,N,V_attributes
T@"NSMutableArray",&,N,V_layouts
precision
defaultVtValue
resetWithUsdAttribute:
setFloat4x4Array:count:
setDouble4x4Array:count:
getFloat4x4Array:maxCount:
getDouble4x4Array:maxCount:
_elementCount
TQ,R,N,V_elementCount
initWithDouble:
isAnimated
interpolation
setInterpolation:
_timeSampledData
_interpolation
TQ,N,V_interpolation
setDoubleArray:count:atTime:
getFloatArray:maxCount:atTime:
resetWithFloatArray:count:atTimes:count:
resetWithDoubleArray:count:atTimes:count:
getDoubleArray:maxCount:
setElementCount:
TQ,N,V_elementCount
setDouble3Array:count:atTime:
getFloat3Array:maxCount:atTime:
getDouble3Array:maxCount:atTime:
resetWithFloat3Array:count:atTimes:count:
resetWithDouble3Array:count:atTimes:count:
getFloat3Array:maxCount:
getDouble3Array:maxCount:
setFloatQuaternionArray:count:atTime:
setDoubleQuaternionArray:count:atTime:
getFloatQuaternionArray:maxCount:atTime:
getDoubleQuaternionArray:maxCount:atTime:
resetWithFloatQuaternionArray:count:atTimes:count:
resetWithDoubleQuaternionArray:count:atTimes:count:
getFloatQuaternionArray:maxCount:
getDoubleQuaternionArray:maxCount:
setFloat:atTime:
setDouble:atTime:
resetWithFloatArray:atTimes:count:
resetWithDoubleArray:atTimes:count:
setFloat2:atTime:
setDouble2:atTime:
float2AtTime:
double2AtTime:
resetWithFloat2Array:atTimes:count:
resetWithDouble2Array:atTimes:count:
getFloat2Array:maxCount:
getDouble2Array:maxCount:
setFloat3:atTime:
setDouble3:atTime:
resetWithFloat3Array:atTimes:count:
resetWithDouble3Array:atTimes:count:
setFloat4:atTime:
setDouble4:atTime:
float4AtTime:
double4AtTime:
resetWithFloat4Array:atTimes:count:
resetWithDouble4Array:atTimes:count:
getFloat4Array:maxCount:
getDouble4Array:maxCount:
setFloatQuaternion:atTime:
setDoubleQuaternion:atTime:
resetWithFloatQuaternionArray:atTimes:count:
resetWithDoubleQuaternionArray:atTimes:count:
setDouble4x4:atTime:
resetWithFloat4x4Array:atTimes:count:
resetWithDouble4x4Array:atTimes:count:
setMap:
setDataStart:
setbufferSize:
setBufferSize:
_map
_dataStart
_bufferSize
T@"MDLMeshBufferMap",&,N
T^v,N
TQ,N,V_bufferSize
initWithArray:
createSourceDataVector:attr:srcElementCount:dstElementCount:
initWithBytes:deallocator:
setVertexBuffers:
copyDataVector:toAttr:
subdivisionScheme
_submeshes
_vertexBuffers
_controlNodes
_vertexCount
_subdivisionScheme
TQ,N,V_subdivisionScheme
T@"MDLVertexDescriptor",C,N
TQ,N,V_vertexCount
T@"NSArray",&,N
T@"NSMutableArray",C,N
T@"<MDLMeshBufferAllocator>",R,&,N,V_allocator
removeObjectAtIndex:
addVertexBuffer:
_calculateTangentBasisFromPositions:positionStride:positionsBufferSize:normals:normalStride:normalsBufferSize:uvs:uvStride:uvsBufferSize:tangents:tangentsStride:tangentsBufferSize:bitagents:bitangentStride:bitangentsBufferSize:tangentFormat:selector:
replaceAttributeNamed:withData:
triangulate
_calculateFaceNormalsFromPositions:positionStride:normals:normalStride:creaseThreshold:
initWithType:length:
addAttributeWithName:format:type:data:stride:time:
addTangentBasisForTextureCoordinateAttributeNamed:tangentAttributeNamed:bitangentAttributeNamed:
addTangentBasisForTextureCoordinateAttributeNamed:normalAttributeNamed:tangentAttributeNamed:
addOrthTanBasisForTextureCoordinateAttributeNamed:normalAttributeNamed:tangentAttributeNamed:
addUnwrappedTextureCoordinatesForAttributeNamed:
flipTextureCoordinatesInAttributeNamed:
makeVerticesUnique
_enumerateSubmeshesUsingBlock:stopPointer:
submeshCount
enumerateSubmeshesUsingBlock:
controlNodeForINdex:
inverseBasePoseForIndex:
generateAmbientOcclusionTextureWithSize:raysPerSample:attenuationFactor:objectsToConsider:vertexAttributeNamed:materialPropertyNamed:
generateAmbientOcclusionVertexColorsWithRaysPerSample:attenuationFactor:objectsToConsider:vertexAttributeNamed:
generateLightMapTextureWithTextureSize:lightsToConsider:objectsToConsider:vertexAttributeNamed:materialPropertyNamed:
generateAmbientOcclusionTextureWithQuality:attenuationFactor:objectsToConsider:vertexAttributeNamed:materialPropertyNamed:
generateAmbientOcclusionVertexColorsWithQuality:attenuationFactor:objectsToConsider:vertexAttributeNamed:
generateLightMapTextureWithQuality:lightsToConsider:objectsToConsider:vertexAttributeNamed:materialPropertyNamed:
generateLightMapVertexColorsWithLightsToConsider:objectsToConsider:vertexAttributeNamed:
setWithObjects:
decodeObjectOfClasses:forKey:
mainBundle
bundleIdentifier
processInfo
processName
initCylinderWithExtent:segments:inwardNormals:topCap:bottomCap:geometryType:allocator:
newCylinderWithHeight:radii:radialSegments:verticalSegments:geometryType:inwardNormals:allocator:
_jointRestTransforms
T@"MDLMatrix4x4Array",R,N,V_jointBindTransforms
T@"MDLMatrix4x4Array",R,N,V_jointRestTransforms
_translations
_rotations
_scales
T@"MDLAnimatedVector3Array",R,N,V_translations
T@"MDLAnimatedQuaternionArray",R,N,V_rotations
T@"MDLAnimatedVector3Array",R,N,V_scales
skeleton
jointAnimation
geometryBindTransform
_skeleton
_jointAnimation
_geometryBindTransform
T@"MDLSkeleton",&,N,V_skeleton
T@"<MDLJointAnimation>",&,N,V_jointAnimation
T@"NSArray",&,N,V_jointPaths
T{?=[4]},N,V_geometryBindTransform
initWithURL:offset:length:
dataNoCopy
_file
_mappedAddr
_fileStart
_mappedFileSize
acquireLockGuard
textureData
releaseLockGuard:
hitTestRayFrom:withDirection:usingCamera:
castRayFrom:withDirection:usingCamera:result:
_sceneMutex
_sceneObjects
_sceneLights
_signature
T@"NSArray",R,&,N,V_objects
initWithTransformComponent:
shear
setShear:
scale
setScale:
rotation
setRotation:
scaleAtTime:
shearAtTime:
translationAtTime:
rotationAtTime:
setMatrix:forTime:
setRotation:forTime:
setShear:forTime:
setScale:forTime:
setTranslation:forTime:
setIdentity
initWithTransformComponent:resetsTransform:
initWithMatrix:resetsTransform:
bundleForClass:
resourcePath
_deallocator
_bytes
T^v,R,N,V_bytes
capacity
T@"<MDLMeshBufferAllocator>",R,N
initWithCapacity:allocator:
reserveMemory:allocator:
cancelMemory:
_usedCapacity
_capacity
TQ,R,N,V_capacity
initWithData:
initWithLength:data:allocator:zone:
initWithType:data:
_zone
_zoneDefault
T@"NSData",R,&,N
unsignedIntegerValue
setChildren:
setParent:
string
hidden
_parent
_instance
_hidden
_children
T@"MDLObject",W,N
T@"MDLObject",&,N,V_instance
T@"<MDLTransformComponent>",&,N
T@"<MDLObjectContainerComponent>",&,N,V_children
TB,N,V_hidden
T@"NSString",C,N,Vname
T@"NSArray",R,&,N
allocateDataAtLevel:
clearTexelData
texelDataWithTopLeftOriginAtMipLevel:create:
longValue
textureWithURL:offset:size:
textureWithData:offset:size:
textureNamed:bundle:
firstObject
_textureCubeWithSingleImageNamed:bundle:
textureCubeWithImagesNamed:bundle:
generateDataAtLevel:selector:
texelDataWithBottomLeftOriginAtMipLevel:create:
loadDataWithTopLeftOriginAtMipLevel:create:selector:
loadDataWithBottomLeftOriginAtMipLevel:create:selector:
writeToURL:level:
writeToURL:type:
writeToURL:type:level:
imageFromTextureAtLevel:
texelDataWithTopLeftOrigin:
channelCount
texelDataWithTopLeftOrigin
setTexelDataWithTopLeftOrigin:atMipLevel:
textureResourceNamed:assetResolver:
textureFromResource:
textureNamed:
textureCubeWithImagesNamed:
irradianceTextureCubeWithTexture:name:dimensions:
rowStride
isCube
setIsCube:
hasAlphaValues
setHasAlphaValues:
mipLevelCount
setTexelDataWithBottomLeftOrigin:atMipLevel:
imageFromTexture
channelEncoding
_textureData
_channelEncoding
_topLeftOriginData
_bottomLeftOriginData
_selfCreating
_alphaValuesSet
_hasAlphaValues
T,R,N
Tq,R,N,V_channelEncoding
_generateCellularNoiseAtLevel:selector:
initVectorNoiseWithSmoothness:name:textureDimensions:channelEncoding:
initScalarNoiseWithSmoothness:name:textureDimensions:channelCount:channelEncoding:grayscale:
initCellularNoiseWithFrequency:name:textureDimensions:channelEncoding:
_vectorNoise
_smoothness
_grayScale
_frequency
_noiseMode
setURL:
initWithURL:name:
setDivisions:
divisions
setColor1:
color1
setColor2:
color2
initWithDivisions:name:dimensions:channelCount:channelEncoding:color1:color2:
_divisions
_color1
_color2
initWithColorTemperatureGradientFrom:toColorTemperature:name:textureDimensions:
initWithColorGradientFrom:toColor:name:textureDimensions:
_colorTemperature1
_colorTemperature2
updateTexture
initWithName:channelEncoding:textureDimensions:turbidity:sunElevation:sunAzimuth:upperAtmosphereScattering:groundAlbedo:
setGroundColor:
groundColor
initWithName:channelEncoding:textureDimensions:turbidity:sunElevation:upperAtmosphereScattering:groundAlbedo:
turbidity
setTurbidity:
sunElevation
setSunElevation:
sunAzimuth
setSunAzimuth:
upperAtmosphereScattering
setUpperAtmosphereScattering:
groundAlbedo
setGroundAlbedo:
brightness
setBrightness:
contrast
setContrast:
saturation
setSaturation:
highDynamicRangeCompression
setHighDynamicRangeCompression:
horizonElevation
setHorizonElevation:
gamma
setGamma:
_turbidity
_sunElevation
_sunAzimuth
_upperAtmosphereScattering
_groundAlbedo
_gamma
_exposure
_brightness
_contrast
_saturation
_highDynamicRangeCompression
_highDynamicRangeCompressionLimit
_groundColor
_sky
_horizonElevation
Tf,N,V_turbidity
Tf,N,V_sunElevation
Tf,N,V_sunAzimuth
Tf,N,V_upperAtmosphereScattering
Tf,N,V_groundAlbedo
Tf,N,V_horizonElevation
Tf,N,V_gamma
Tf,N,V_exposure
Tf,N,V_brightness
Tf,N,V_contrast
Tf,N,V_saturation
T,N,V_highDynamicRangeCompression
imageWithBitmapData:bytesPerRow:size:format:colorSpace:
filterWithName:keysAndValues:
extent
contextWithOptions:
createCGImage:fromRect:
initByGeneratingNormalMapWithTexture:name:smoothness:contrast:
_sourceTexture
characterAtIndex:
rangeOfString:
contentsOfDirectoryAtPath:error:
hasPrefix:
@24@0:8^{_NSZone=}16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
Q32@0:8^{?=[4]}16Q24
{?=[4]}16@0:8
@"NSArray"16@0:8
@"NSData"16@0:8
@96@0:8@16@24{?=[4]}32
@104@0:8@16r^{?=[4]}24Q32{?=[4]}40
v16@0:8
@"NSArray"
@"NSData"
{?="columns"[4]}
v24@0:8@16
v24@0:8@"NSString"16
v24@0:8Q16
q16@0:8
v24@0:8q16
@"MDLTexture"
@"MDLTextureFilter"
@"MDLTransform"
32@0:8@16@24
{?=[4]}32@0:8@16@24
@40@0:8@16@24@32
@32@0:8@16Q24
@36@0:8@16Q24f32
@40@0:8@16Q2432
@48@0:8@16Q2432
@96@0:8@16Q24{?=[4]}32
@40@0:8@16Q24@32
@40@0:8@16Q24^{CGColor=}32
@40@0:8@16@24Q32
@32@0:8@16@24
^{CGColor=}16@0:8
v24@0:8^{CGColor=}16
f16@0:8
v20@0:8f16
16@0:8
v24@0:816
v32@0:816
v80@0:8{?=[4]}16
v48@0:816@32@40
v32@0:8@16@24
v40@0:8@16@24@32
v20@0:8B16
@"NSString"
@"NSURL"
@"MDLTextureSampler"
^{CGColor=}
@"MDLBufferView"
@"MDLMaterialPropertyNode"
@"MDLMaterialProperty"
{unique_ptr<ModelIO::BidirectionalScatteringDistributionFunction, std::default_delete<ModelIO::BidirectionalScatteringDistributionFunction>>="__ptr_"{__compressed_pair<ModelIO::BidirectionalScatteringDistributionFunction *, std::default_delete<ModelIO::BidirectionalScatteringDistributionFunction>>="__value_"^{BidirectionalScatteringDistributionFunction}}}
^{PhysicallyPlausibleDistribution=^^?{BSDFMaterialValues=^{CGColor}f^{CGColor}fffffffffffff}}
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@32@0:8@16^{PhysicallyPlausibleDistribution=^^?{BSDFMaterialValues=^{CGColor}f^{CGColor}fffffffffffff}}24
@24@0:8@16
@24@0:8Q16
^{BidirectionalScatteringDistributionFunction=^^?{BSDFMaterialValues=^{CGColor}f^{CGColor}fffffffffffff}}16@0:8
@"NSMutableArray"
@"MDLScatteringFunction"
@"MDLMaterial"
@40@0:8@16@24@?32
@?16@0:8
v24@0:8@?16
@"MDLAnimatedScalarArray"16@0:8
@56@0:8@16r^f24Q32r^I40Q48
Q32@0:8^f16Q24
Q32@0:8^I16Q24
@"MDLAnimatedScalarArray"
B24@0:8@"NSString"16
@"NSURL"24@0:8@"NSString"16
@"MDLAsset"
@"NSBundle"
v40@0:8@16Q24Q32
@"NSMutableDictionary"
@64@0:81632B40B44q48@56
@64@0:8f1620Q28Q36q44B52@56
@68@0:81632B48q52@60
@52@0:816B32q36@44
@60@0:81632B40q44@52
@40@0:8@16i24I28@32
@68@0:81632q48B56@60
@40@0:8f16B20q24@32
@32@0:8f16B20@24
@72@0:816Q32Q40q48B56B60@64
@40@0:8@16Q24Q32
r^v16@0:8
@56@0:8r^v16Q24Q32q40@48
@"MDLBufferViewAllocator"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8q16q24q32
@24@0:8q16
{vector<__IOSurface *, std::allocator<__IOSurface *>>="__begin_"^^{__IOSurface}"__end_"^^{__IOSurface}"__end_cap_"{__compressed_pair<__IOSurface **, std::allocator<__IOSurface *>>="__value_"^^{__IOSurface}}}
{vector<bool, std::allocator<bool>>="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::allocator<unsigned long>>="__value_"Q}}
{vector<long, std::allocator<long>>="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long *, std::allocator<long>>="__value_"^q}}
v32@0:8@16Q24
v32@0:8@"NSData"16Q24
@"MDLMeshBufferMap"16@0:8
@"<MDLMeshBufferAllocator>"16@0:8
@"<MDLMeshBufferZone>"16@0:8
@"MDLMeshBufferViewAllocator"
@32@0:8Q16Q24
@"<MDLMeshBufferZone>"24@0:8Q16
@"<MDLMeshBufferZone>"32@0:8@"NSArray"16@"NSArray"24
@"<MDLMeshBuffer>"32@0:8Q16Q24
@"<MDLMeshBuffer>"32@0:8@"NSData"16Q24
@"<MDLMeshBuffer>"40@0:8@"<MDLMeshBufferZone>"16Q24Q32
@"<MDLMeshBuffer>"40@0:8@"<MDLMeshBufferZone>"16@"NSData"24Q32
@48@0:8q16Q24q32q40
@32@0:8q16Q24
@68@0:81632Q40B48q52@60
@72@0:8f1620Q28Q36Q44q52B60@64
@"NSMutableSet"
v40@0:8@16@24@?32
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"NSString">32
{MDLAABB=}16@0:8
@24@0:8#16
v40@0:8#16@?24^B32
{?=}16@0:8
{?=}24@0:8d16
d16@0:8
v24@0:8d16
v32@0:8@16^@24
@60@0:8@16@24@32@40B48^@52
@40@0:8@16@24^@32
@52@0:8@16@24@32B40^@44
@36@0:8@16B24@28
@44@0:8@16@24B32^@36
B32@0:8@16^@24
@"<MDLObjectContainerComponent>"
@"NSMapTable"
@"<MDLAssetResolver>"
@"<MDLMeshBufferAllocator>"
@"MDLVertexDescriptor"
@"NSUnitLength"
@"MDLAnimatedVector3Array"
@36@0:8f16q20@28
^{RTLight=^^?^{CGColor}@i}16@0:8
^{CGColor=}32@0:816
^{CGColor=}40@0:816^{CGColorSpace=}32
^{RTLight=^^?^{CGColor}@i}
^{CGColorSpace=}
@"NSMutableData"
@56@0:81632q40@48
@48@0:81624q32@40
{?=[4]}24@0:8d16
@"MDLAnimatedScalar"
@"MDLAnimatedVector3"
@44@0:8@16B24Q28@36
@"MDLAnimatedQuaternion"
@"MDLAnimatedMatrix4x4"
v88@0:8{?=[4]}16d80
{?=[4]}32@0:8@16d24
{?=[4]}32@0:8@"MDLObject"16d24
@28@0:8@16B24
@36@0:8@16Q24B32
48@0:8^16Q24@32Q40
^{CGColor=}48@0:816@32Q40
@"<MDLTransformComponent>"
@64@0:8q16@24@32@40@48@56
@28@0:8@16i24
@40@0:8@16i24f28f32f36
^Q56@0:81632^Q48
{unique_ptr<ModelIO::SCNOctree, std::default_delete<ModelIO::SCNOctree>>="__ptr_"{__compressed_pair<ModelIO::SCNOctree *, std::default_delete<ModelIO::SCNOctree>>="__value_"^{SCNOctree}}}
@"<MDLMeshBuffer>"
@72@0:8@16@24Q32Q40q48@56@64
@80@0:8@16@24Q32Q40@48q56@64@72
@64@0:8@16@24Q32Q40q48@56
@56@0:8@16Q24Q32q40@48
@40@0:8@16Q24q32
v24@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16
{MDLAABB=}24@0:8@16
@"MDLSubmeshTopology"
^{RTCamera=^^?QQffi^f^^@{?=[4]}{?=[4]}^{RTRaySegment}ffffffffff}16@0:8
32@0:81624
f20@0:8f16
@24@0:816
v52@0:8{?=}16B48
v48@0:81632
^{RTCamera=^^?QQffi^f^^@{?=[4]}{?=[4]}^{RTRaySegment}ffffffffff}
@"CAAnimation"
v48@0:8{MDLAABB=}16
v24@0:8f16f20
{MDLAABB="maxBounds""minBounds"}
@"MDLStereoscopicCamera"
@32@0:8@16i24f28
@60@0:8@16{?=}24f56
B48@0:816B32B36B40B44
@48@0:8{?=}16
v32@0:8@16i24f28
32@0:816
{?=}32@0:816
v32@0:8f16f20:24
{vector<int, std::allocator<int>>=^i^i{__compressed_pair<int *, std::allocator<int>>=^i}}16@0:8
@40@0:8@16i24i28i32f36
v40@0:8@16i24i28i32f36
v40@0:8@16i24f28f32f36
{unordered_map<unsigned long long, int, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, int>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}
{?="minimumExtent""maximumExtent"}
{MortonCode="mortonkeyX"{vector<unsigned long long, std::allocator<unsigned long long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::allocator<unsigned long long>>="__value_"^Q}}"mortonkeyY"{vector<unsigned long long, std::allocator<unsigned long long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::allocator<unsigned long long>>="__value_"^Q}}"mortonkeyZ"{vector<unsigned long long, std::allocator<unsigned long long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::allocator<unsigned long long>>="__value_"^Q}}}
{unique_ptr<ModelIO::Octree, std::default_delete<ModelIO::Octree>>="__ptr_"{__compressed_pair<ModelIO::Octree *, std::default_delete<ModelIO::Octree>>="__value_"^{Octree}}}
@48@0:8@16Q24Q32Q40
{VtValue={type=[8C]}{TfPointerAndBits<const VtValue::_TypeInfo>=^{_TypeInfo}}}16@0:8
v24@0:8r^v16
v32@0:8r^v16d24
v32@0:8r^{?=[4]}16Q24
{VtValue="_storage"{type="__lx"[8C]}"_info"{TfPointerAndBits<const VtValue::_TypeInfo>="_ptrAndBits"^{_TypeInfo}}}
Q32@0:8^d16Q24
v40@0:8r^v16d24d32
{vector<(anonymous namespace)::TimeSampledVtValue, std::allocator<(anonymous namespace)::TimeSampledVtValue>>="__begin_"^{TimeSampledVtValue}"__end_"^{TimeSampledVtValue}"__end_cap_"{__compressed_pair<(anonymous namespace)::TimeSampledVtValue *, std::allocator<(anonymous namespace)::TimeSampledVtValue>>="__value_"^{TimeSampledVtValue}}}
v40@0:8r^f16Q24d32
v40@0:8r^d16Q24d32
Q40@0:8^f16Q24d32
Q40@0:8^d16Q24d32
v48@0:8r^f16Q24r^d32Q40
v48@0:8r^d16Q24r^d32Q40
v40@0:8r^16Q24d32
Q40@0:8^16Q24d32
v48@0:8r^16Q24r^d32Q40
Q32@0:8^16Q24
v40@0:8r^{?=}16Q24d32
Q40@0:8^{?=}16Q24d32
v48@0:8r^{?=}16Q24r^d32Q40
Q32@0:8^{?=}16Q24
v28@0:8f16d20
v32@0:8d16d24
f24@0:8d16
d24@0:8d16
v40@0:8r^f16r^d24Q32
v40@0:8r^d16r^d24Q32
v32@0:816d24
v40@0:816d32
24@0:8d16
v40@0:8r^16r^d24Q32
v56@0:816d48
v40@0:8{?=}16d32
v56@0:8{?=}16d48
v40@0:8r^{?=}16r^d24Q32
v152@0:8{?=[4]}16d144
v40@0:8r^{?=[4]}16r^d24Q32
^v16@0:8
v24@0:8^v16
@"MDLMeshBufferMap"
v48@0:8@16Q24@32@40
@48@0:8@16Q24@32@40
v40@0:8^v16@24i32i36
v32@0:8^v16@24
q24@0:8@16
v56@0:8@16Q24@32@40q48
v64@0:8@16Q24@32@40q48d56
v152@0:8^f16q24Q32^f40q48Q56^f64q72Q80^f88q96Q104^f112q120Q128Q136:144
v52@0:8^f16q24^f32q40f48
v28@0:8@16f24
B24@0:8^@16
i16@0:8
v32@0:8@?16^B24
{?=[4]}24@0:8Q16
B60@0:816q24f32@36@44@52
B48@0:8f16f20@24@32@40
B44@0:8q16f24@28@36
B40@0:8f16f20@24@32
B56@0:816@24@32@40@48
B52@0:8f16@20@28@36@44
B40@0:8@16@24@32
@68@0:81632B40B44B48q52@60
@"MDLMatrix4x4Array"
@"MDLAnimatedQuaternionArray"
v144@0:8{?=[4]}16
@"MDLSkeleton"
@"<MDLJointAnimation>"
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}
v20@0:8i16
56@0:81632@48
B64@0:81632^{RTCamera=^^?QQffi^f^^@{?=[4]}{?=[4]}^{RTRaySegment}ffffffffff}48^{RTIntersectionResult=f^{RTGeometry}@}56
@48@0:8r^{RTCamera=^^?QQffi^f^^@{?=[4]}{?=[4]}^{RTRaySegment}ffffffffff}16@24@3240
^{mutex={_opaque_pthread_mutex_t=q[56c]}}
{vector<ModelIO::RTRenderable *, std::allocator<ModelIO::RTRenderable *>>="__begin_"^^{RTRenderable}"__end_"^^{RTRenderable}"__end_cap_"{__compressed_pair<ModelIO::RTRenderable **, std::allocator<ModelIO::RTRenderable *>>="__value_"^^{RTRenderable}}}
{vector<MDLLight *, std::allocator<MDLLight *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<MDLLight *__strong *, std::allocator<MDLLight *>>="__value_"^@}}
@80@0:8{?=[4]}16
@84@0:8{?=[4]}16B80
{MDLAffineTransform="_keyedTranslation"{vector<std::pair<double, float __attribute__((ext_vector_type(3)))>, std::allocator<std::pair<double, float __attribute__((ext_vector_type(3)))>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<double, float __attribute__((ext_vector_type(3)))> *, std::allocator<std::pair<double, float __attribute__((ext_vector_type(3)))>>>="__value_"^v}}"_keyedRotation"{vector<std::pair<double, float __attribute__((ext_vector_type(3)))>, std::allocator<std::pair<double, float __attribute__((ext_vector_type(3)))>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<double, float __attribute__((ext_vector_type(3)))> *, std::allocator<std::pair<double, float __attribute__((ext_vector_type(3)))>>>="__value_"^v}}"_keyedShear"{vector<std::pair<double, float __attribute__((ext_vector_type(3)))>, std::allocator<std::pair<double, float __attribute__((ext_vector_type(3)))>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<double, float __attribute__((ext_vector_type(3)))> *, std::allocator<std::pair<double, float __attribute__((ext_vector_type(3)))>>>="__value_"^v}}"_keyedScale"{vector<std::pair<double, float __attribute__((ext_vector_type(3)))>, std::allocator<std::pair<double, float __attribute__((ext_vector_type(3)))>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<double, float __attribute__((ext_vector_type(3)))> *, std::allocator<std::pair<double, float __attribute__((ext_vector_type(3)))>>>="__value_"^v}}"_startTime"d"_greatestTime"d"_identity"B"_resetTransformStack"B"_evaluationTime"d"_transform"{float4x4="columns"[4]}"_invTransform"{float4x4="columns"[4]}"_jacobiRotation"{float4x4="columns"[4]}"_invJacobiRotation"{float4x4="columns"[4]}}
@32@0:8^v16@?24
@32@0:8Q16@24
B32@0:8Q16@24
@48@0:8Q16@24@32@40
@"MDLMeshBufferZoneDefault"
v48@0:8#16@24@?32^B40
@"MDLObject"
v24@0:8@"MDLObject"16
@"MDLObject"24@0:8Q16
@40@0:8@16@2432
@44@0:8@16@2432f40
^{MDLTextureData=[16*][16*]iQB}16@0:8
@32@0:8q16:24
@72@0:8@16B24@2836q44Q52q60B68
v36@0:8q16B24:28
@28@0:8q16B24
v32@0:8@16q24
B32@0:8@16Q24
B32@0:8@16^{__CFString=}24
B40@0:8@16^{__CFString=}24Q32
^{CGImage=}16@0:8
^{CGImage=}24@0:8Q16
{MDLTextureData="topLeftBytesForMip"[16*]"bottomLeftBytesForMip"[16*]"channelCount"i"dimensions""rowStride"Q"isCube"B}
[14@"NSData"]
@44@0:8f16@2028q36
@52@0:8f16@2028i36q40B48
@64@0:8f16@2028i36q40^{CGColor=}48^{CGColor=}56
@40@0:8f16f20@2432
@48@0:8^{CGColor=}16^{CGColor=}24@3240
@60@0:8@16q2432f40f44f48f52f56
@56@0:8@16q2432f40f44f48f52
^{SkyDescriptor=ffffffffffffffffff^{Detail}IIffff^}
@40@0:8@16@24f32f36
F%E&
2)@'
}?1x
="*}
?50,^
@JQx
b~n(
;p)B
L0u?
&&^T
#sv|E
@|F"4
Q#@?9L,
k#C3
Yni5$
M4@P
#@:<
o*Ral
5z5@iH
?}~s
-@kb
h4^_
.@jfo!vCf?
+I~@
1@6
@:-OR&V
?ywd
zSl?
?) /
=-k?l1.
?$EdX
?l"3
M9pX
%=gfA
&pF(
?=i<l}l
0fKVE8
!@uaZ
?M-[
?vT5A
T0@GZ
ng_yP
^-wf
@Zd;
?vih
?zrM
'@+P
$EdX
.@;r
9$@]m
!6Xx
*E]1D
VBwI
lu9%
C*`
[Z]%
q(@/
q;4,F
Ht*t
?@0G
?mEQV
bQ*
%@GaQ
?r2q
AP$N
&4I,)_!@
@K5X
n,(z
mlv$#@tCt
@P9&
<|>o
ACO&@
5lJh
?@Pn
(#.@
;S8&
,oyrn
Lc tu
?9{g
Q4c?
j,amL
u Fc
K4q@
?5bf
%&@xj
6*&%
?XuV
G/0L"
\Hv[
|)<hv]
? zR&5t
QKs+
AB9v
S:X?
x==[
nDA:
2SZ?
QcB
?q $
&@lw
Gz(<.
X zR&="@r
2/,$
+@do
^}<t
@k:LEt
$[]N
Pqw1(
jIGI
7/ND!@m
)t^c
l%@!
?BwI
ecost
E`:r?X
>L1@
?=HO
@2!AL
|a2U
|)<hv
h:;Y
3@2Y
@hi]YX&
?N{J
o,(
jf-U 
?rQ-"
Pc)/
$sv|
?tA}
c\qq
D"@k
?Zbe4
3<Qm
 Nq&
?OLI
hwH1
&{:M
?zpw
B{vr
?!x|{
k?{j
UM0'
b~nh
?&&=FX
WPb!
WPb!
@!DK
@Ajn
++MJ
>K2@
?:Ba
o*Ral
#$w}
,^,A
@h?RD
@2bUso4
1%@0
"[L"
?{fI
>T6~?v
{ev!
?J}Y
?jP4
?BA)Z
@8V{;6
X:zW
BA)Z
P_d<)
@CM>
?%vmo
E'@c
9>J"@TJ
@&^TA
R?o*
cOL(
@F<~
?ni5$
`7l[T.@Ho
h?RD
!@b_
?0Y&
?~U.T
?h\8
s;EX
,^,L
@&`*
ip[[
?M2r
~M/a
?At
&@R)v4
#(@Mx2
?0`n
&TpxA
I:2@1
xtw?g
,`2/@
#M?L
@{2Z
WEn<
 r^z
@y%$-
v6@`
F|'f
?{AU
?Oyt#,*
@9EGr
uT1C@
?PT6
wzJs
ED1yC
5a5u
?F"4
NtvN
?"{sn
/PR`
?#cZ@
-En]
W6@h
?&`*
?"w*C
|a2U
9@0G
?c[H
?Y32
ebV
?am<{
?Yni5$
p $;
?!Nqf
LjH
?`g
"@3D
?xZeC
ba-c
4,F]k
*2: 
u.HW?
*E@*x
k_@/\
?AF@
?O4Y
?=c_
p l6@
?R||Bv>
N} y
?kdWZF
=i<l}
?f<!
8gDio$A
)YA@
J7@eL
?&KR>
Z~t?
?|SG}H
?JOh
^`V(R
1%fF@
`5fw q
>{.S
:m2O
5=(h
A=CYt
g)YNB
m}GC
?UE]
??RD
|yyF@6R
+vE:
h5n{
H/jw
?||Bv
-s_s
pDRf
8/N|
?~]<rZ&
p 41@u
6@u!V
@YLl>
$@nlv
%@T7
?@B!
z'@j
?WAt
*@Ou
ps)@
@W'g(
9@Ou
<5,@
#@5)
U+s0@
?1Bx
N,@S
:I1@
+0du
0@^h
Hk,@5
SB2@;
O`3@
8@yX
{0@cz
:@p%;6
?5@?
bFx{
Pq;@33333
vI@y
@N} y
@v7Ou
1Xq*
@:vP
:s/ 
-'@aR||B
@V)=
Y@n
-@9m|
&@B[
,/-@
rC-@
3@wN
z3j~
s:@W[
KqUq;@
eK6@
?[}uU
E7@)
(7@u
?/0+
cD@oG8-x
*@_A
hZ-@
Hmz5@w
-@+MJA
R[0@S"
^Fa.@
i/@@
@6@`YiR
9C/@
0@Kcj
hB@}
tv28&G@sK
!q73@
&OYm
q>@[
Y-@c
>@A~6r
r.@@v
>@[D
 |(Q
Y8,@
yD+@
C@Ll>
?{fI
M@n4
