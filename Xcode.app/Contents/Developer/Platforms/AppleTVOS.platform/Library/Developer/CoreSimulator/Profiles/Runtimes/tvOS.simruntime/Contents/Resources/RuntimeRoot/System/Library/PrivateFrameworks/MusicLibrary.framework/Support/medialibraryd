<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241123</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleExecutable</key>
<string>medialibraryd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.medialibraryd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>AppleTVSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>13A191</string>
<key>DTPlatformName</key>
<string>appletvsimulator</string>
<key>DTPlatformVersion</key>
<string>15.2</string>
<key>DTSDKBuild</key>
<string>19K39</string>
<key>DTSDKName</key>
<string>appletvsimulator15.2.internal</string>
<key>DTXcode</key>
<string>1300</string>
<key>DTXcodeBuild</key>
<string>13A191</string>
<key>MinimumOSVersion</key>
<string>15.2</string>
<key>UIDeviceFamily</key>
<array>
<integer>3</integer>
<integer>5</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.multitasking.unlimitedassertions</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.privacy.accounting.write</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.medialibraryd.xpc</string>
<string>com.apple.privacyaccountingd</string>
<string>com.apple.storebookkeeperd.xpc</string>
<string>com.apple.symptom_diagnostics</string>
</array>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>fairplay-client</key>
<integer>999035649</integer>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>medialibraryd</string>
</array>
</dict>
</plist>
MLInvalidation
NSObject
DiagnosticCollection
MLDDiagnostic
NSMutableCopying
MLDMutableDiagnostic
MLDDatabaseValidationController
ML3DatabaseValidationDelegate
MLDCacheDeleteController
MLDDatabaseFileDiagnostic
MLDTransactionInfo
MLDMediaLibraryService
MLMediaLibraryServiceProtocol
ML3MusicLibraryDelegate
ML3MediaLibraryWriterDelegate
NSXPCListenerDelegate
NSXPCConnectionDelegate
MLDTaskAssertion
ML3ClientImportServiceSessionXPCInterface
MLDClientImportServiceSession
MLDDatabaseIntegrityCheck
MLDDatabaseIntegrityCheckOperation
MLDClientImportService
ML3ClientImportSessionXPCInterface
MLDDatabaseIntegrityFault
MLDIndexIntegrityFault
MLDUnknownIntegrityFault
boolValue
numberWithBool:
ml_isValid
ml_setValid:
ml_valid
TB,N,Gml_isValid,Sml_setValid:
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
serialQueue
isSuspended
databaseOperationQueue
operations
setEnqueuedConcurrentOperations:
databaseOperationSerialQueue
setEnqueuedSerialOperations:
collectDiagnostic:
setWriterSuspended:
transactionMap
allValues
setActiveTransactions:
date
T@"NSDate",R,N,V_date
reason
T@"NSString",R,N,V_reason
dictionaryRepresentation
T@"NSDictionary",R,N
locked
TB,R,N,V_locked
activeClients
T@"NSArray",R,N,V_activeClients
activeXPCTransactions
T@"NSArray",R,N,V_activeXPCTransactions
databaseFileDiagnostics
T@"NSArray",R,N,V_databaseFileDiagnostics
writerSuspended
TB,R,N,V_writerSuspended
activeTransactions
T@"NSArray",R,N,V_activeTransactions
enqueuedConcurrentOperations
T@"NSArray",R,N,V_enqueuedConcurrentOperations
enqueuedSerialOperations
T@"NSArray",R,N,V_enqueuedSerialOperations
lastImportError
T@"NSError",R,N,V_lastImportError
activeImportOperations
T@"NSArray",R,N,V_activeImportOperations
suspendedImportOperations
T@"NSArray",R,N,V_suspendedImportOperations
libraryConnectionDiagnostics
T@"NSDictionary",R,N,V_libraryConnectionDiagnostics
_date
_locked
_activeClients
_activeXPCTransactions
_databaseFileDiagnostics
_writerSuspended
_activeTransactions
_enqueuedConcurrentOperations
_enqueuedSerialOperations
_lastImportError
_activeImportOperations
_suspendedImportOperations
_libraryConnectionDiagnostics
_reason
mutableCopyWithZone:
initWithReason:
init
writeToFile:error:
copyWithZone:
_copyWithZone:usingConcreteClass:
_appendDescribableArray:toString:withTitle:
_appendDescribableArray:toString:withTitle:indentLevel:
.cxx_destruct
longDescription
countByEnumeratingWithState:objects:count:
count
appendFormat:
appendString:
copy
T@"NSDate",&,D,N
TB,D,N
T@"NSArray",C,D,N
T@"NSError",&,D,N
T@"NSDictionary",C,D,N
setDate:
setLocked:
setActiveClients:
setActiveXPCTransactions:
setDatabaseFileDiagnostics:
setLastImportError:
setActiveImportOperations:
setSuspendedImportOperations:
setLibraryConnectionDiagnostics:
writeToFile:atomically:encoding:error:
enumerateKeysAndObjectsUsingBlock:
readerBusyConnections
readerAvailableConnections
writerBusyConnections
writerAvailableConnections
dictionaryWithObjects:forKeys:count:
disableSharedLibrary
disableAutomaticDatabaseValidation
sharedInstance
start
currentRunLoop
processInfo
_setDaemonProcessInfo:
validationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_validationQueue
suspendedValidations
T@"NSMutableArray",&,N,V_suspendedValidations
validatedDatabasePaths
T@"NSMutableSet",&,N,V_validatedDatabasePaths
validatingDatabasePaths
T@"NSMutableSet",&,N,V_validatingDatabasePaths
languageChangeNotificationToken
Ti,N,V_languageChangeNotificationToken
homeSharingCachesClearedNotificationToken
Ti,N,V_homeSharingCachesClearedNotificationToken
suspended
TB,N,GisSuspended,V_suspended
_suspended
_languageChangeNotificationToken
_homeSharingCachesClearedNotificationToken
_validationQueue
_suspendedValidations
_validatedDatabasePaths
_validatingDatabasePaths
shouldValidateDatabaseForLibrary:
dealloc
validateMusicLibrary:shouldTruncateDatabase:completion:
isValidatedPath:
suspendValidations
clearValidatedPaths
resumeValidations
_purgePendingDatabaseValidations
_exitForLocalizationChange
_registerForLanguageChangeNotifications
_tearDownLanguageChangeNotifications
setValidationQueue:
setSuspendedValidations:
setValidatedDatabasePaths:
setValidatingDatabasePaths:
setLanguageChangeNotificationToken:
setHomeSharingCachesClearedNotificationToken:
setSuspended:
removeObserver:name:object:
defaultCenter
addObserverForName:object:queue:usingBlock:
removeObject:
runValidation
containsObject:
fileExistsAtPath:
defaultManager
databasePath
removeAllObjects
addObject:
setTruncateBeforeValidating:
initWithLibrary:delegate:completion:
_accessQueue
_libraries
initWithLibraries:
_registerCacheDeleteHandler
T@"NSString",R,N,V_databasePath
fileAttributes
T@"NSDictionary",R,N,V_fileAttributes
_databasePath
_fileAttributes
initWithDatabasePath:
stringWithFormat:
attributesOfItemAtPath:error:
taskAssertion
T@"MLDTaskAssertion",&,N,V_taskAssertion
client
T@"ML3Client",&,N,V_client
privacyContext
T@"ML3DatabasePrivacyContext",&,N,V_privacyContext
_taskAssertion
_client
_privacyContext
setTaskAssertion:
setClient:
setPrivacyContext:
databaseLocked
TB,N,GisDatabaseLocked,V_databaseLocked
currentLockReason
Tq,N,V_currentLockReason
_serialQueue
_spotlightIndexQueue
_writerBeginTransactionQueue
_writerUpdateQueue
_callbackQueue
_xpcLock
_xpcListeners
_xpcClients
_writer
_importManager
_cacheDeleteController
_validationController
_maintenanceTasksOperationQueue
_databaseRecoveryOperationQueue
_databaseRecoveryCompletionHandlers
_signalDispatchSource
_spotlightIndexCoalescingTimer
_idleTimer
_mediaLibraries
_deviceSharedLibraryPath
_transactionInfoForID
_stateHandle
_databaseLocked
_currentLockReason
validateDatabaseAtPath:withCompletionHandler:
attemptDatabaseFileRecoveryAtPath:withCompletionHandler:
checkIntegrityOfDatabaseAtPath:repairFaults:withCompletionHandler:
performDiagnosticWithCompletionHandler:
recreateDatabaseAtPath:withCompletionHandler:
beginTransactionForDatabaseWithContext:completionHandler:
executeUpdate:withParameters:onTransaction:withCompletionHandler:
executeQuery:withParameters:options:onTransaction:withCompletionHandler:
endTransaction:shouldCommit:withCompletionHandler:
performDatabaseOperation:withAttributes:options:completionHandler:
setOptions:withCompletionHandler:
performImport:fromSource:withUUID:completionHandler:
cancelImportOperation:completionHandler:
lockDatabaseForReason:withCompletion:
unlockDatabaseWithCompletion:
getLanguageResourcesWithCompletion:
updateSpotlightIndexForBundleID:withCompletion:
updateSpotlightIndexMetadataForItemsWithIdentifiers:bundleID:withCompletion:
performMaintenanceTasksForDatabaseAtPath:withCompletionHandler:
getMediaLibraryResourcesServiceListenerEndpointWithCompletion:
getClientImportServiceListenerEndpointWithCompletion:
library:didBeginDatabaseTransactionWithConnection:
library:didCommitDatabaseTransactionWithConnection:
library:didRollbackDatabaseTransactionWithConnection:
mediaLibraryWriter:terminatedTransaction:withError:
mediaLibraryWriter:didDestroyTransaction:
listener:shouldAcceptNewConnection:
replacementObjectForXPCConnection:encoder:object:
connection:handleInvocation:isReply:
_init
_stateDump
beginTransactionForDatabaseWithContext:error:
endTransaction:shouldCommit:error:
_shouldAcceptConnectionForMediaLibraryService:
setDatabaseLocked:
isDatabaseLocked
setCurrentLockReason:
_disconnectLibraries:
_reconnectLibraries:
_logPrivacyAccessWithTransactionIdentifier:
_setupNotifyEventHandlers
_setupActivityHandlers
_setupCacheDeleteController
_XPCListenerForService:
_MLDSupportedServiceForXPCListener:
_mediaLibraryForPath:
_allMediaLibraries
_handleXPCDisconnect:
_currentXPCClient
_clientForConnection:
_setupSignalHandler
_tearDownSignalHandler
_handleDebugSignal
_performDiagnosticWithReason:
_writeDiagnosticToDisk:
_registerForLibraryDidChangeNotifications
_handleLibraryDidChangeNotification:
_tearDownLibraryDidChangeNotifications
_startIdleTimer
_idleTimerFired:
_resetIdleTimer
_stopIdleTimer
_performMaintenanceOnDatabaseAtPath:withActivity:completion:
_registerTransactionInfo:forIdentitifer:
_unregisterTransactionInfoForIdentifier:
_validateTransactionIdentifier:forClient:
_validateDatabaseAtPath:byTruncatingFirst:withCompletion:
_validateDatabaseAtPath:forConnection:byTruncatingFirst:withCompletion:
_unregisterServiceOriginatedTransactionWithConnection:
_platformSupportsSpotlightIndexing
_isMediaPath:selector:resolvedPath:
faultForQuery:fromClientBundleID:onTrustError:
UTF8String
integerValue
objectForKeyedSubscript:
userInfo
bundleID
hasSuffix:
hasPrefix:
mediaFolderPath
stringByStandardizingPath
stringByResolvingSymlinksInPath
enumerateObjectsUsingBlock:
libraryPathForContainerPath:
allLibraryContainerPaths
isEqualToString:
autoupdatingSharedLibraryPath
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
_unregisterTransaction:
_transactionForIdentifier:
currentTransactionID
endTransaction
beginTransaction
initWithName:
bundleIdentifier
mainBundle
auditToken
processIdentifier
processID
setObject:forKeyedSubscript:
addOperation:
setCompletionBlock:
initWithLibrary:activity:
invalidate
setFireDate:
dateWithTimeIntervalSinceNow:
operationsCount
resumeSuspendedImportOperations
suspendedOperationsCount
addTimer:forMode:
mainRunLoop
initWithFireDate:interval:target:selector:userInfo:repeats:
name
addObserver:selector:name:object:
stringByAppendingPathComponent:
timeIntervalSinceReferenceDate
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileExistsAtPath:isDirectory:
pathForResourceFileOrFolder:
setObject:forKey:
initWithConnection:
objectForKey:
numberWithInt:
daemonClient
currentConnection
removeObjectForKey:
cancelActiveTransactionForClient:
cancelAllActiveDatabaseOperationsForClient:waitUntilFinished:
cancelImportOperationsOriginatingFromClient:
sharedManager
setUseDistantWriterConnections:
connectionPool
setDelegate:
initWithPath:
resume
sharedService
anonymousListener
initWithMachServiceName:
allLibraries
logDatabasePrivacyAccess
unlock
reconnectToDatabase
_closeAllConnectionsAndWaitForBusyConnections:
lock
endTransactionOnDate:
_generateDiagnostic
serviceTerminatedTransactionWithIdentifier:error:
remoteObjectProxy
identifier
connection
_registerTransaction:
setTerminable:
initWithLibrary:connection:client:
setInterruptionHandler:
setInvalidationHandler:
setRemoteObjectInterface:
clientInterface
setExportedInterface:
serviceInterface
setExportedObject:
endpoint
errorWithDomain:code:userInfo:
logDatabasePrivacyAccessWithAuditToken:
setValue:forKey:
dictionaryWithDictionary:
isValid
appState
applicationProxyForIdentifier:
resources
sharedResourceManager
writerErrorWithCode:description:
cancelAllImportOperations
waitUntilAllOperationsAreFinished
cancelAllActiveDatabaseOperationsAndWaitUntilFinished:
cancelImportOperationsForSource:withCompletionHandler:
performImport:fromSource:progressBlock:withCompletionHandler:
importOperationWithIdentifier:didUpdateWithProgress:
initWithDatabaseImport:library:writer:client:
initWithClientIdentity:
clientIdentity
libraryPath
setConnectionsProfilingLevel:
performDatabaseOperation:onLibrary:withAttributes:options:fromClient:completionHandler:
suspendImportOperations
unsignedIntegerValue
archivedDataWithRootObject:requiringSecureCoding:error:
executeUntrustedQuery:withParameters:options:onTransaction:error:
executeUntrustedUpdate:withParameters:onTransaction:error:
beginTransactionForLibrary:withClient:options:error:
initWithName:pid:bundleID:
options
priorityLevel
path
valueForEntitlement:
error
initWithDatabasePath:repairFaults:
initWithDatabaseFilePath:
firstObject
suspend
setQualityOfService:
setMaxConcurrentOperationCount:
setName:
raise:format:
_importOperations
initWithName:pid:bundleID:subsystem:reason:flags:
beginSessionWithConfiguration:completion:
endSessionWithCompletion:
cancelSessionWithCompletion:
addItems:completion:
updateItems:completion:
removeItems:completion:
_xpcConnection
_configuration
_importSessionThread
_transaction
_importSession
_success
_active
_totalOperationCount
_completedOperationCount
_currentResult
_importSessionRunLoop
stop
_startImportThread
_beginSessionWithConfiguration:
_endSessionCommittingChanges:
_addItems:
_updateItems:
_removeItems:
_adjustProgressForIncomingOperationCount:
_reportProgress
sessionDidUpdateProgress:
synchronousRemoteObjectProxyWithErrorHandler:
initWithSuccess:resultingDatabasePersistentIDs:
sessionFailedToUpdateItem:completion:
removeTrack:persistentID:
dictionaryWithCapacity:
updateTrack:persistentID:
sessionFailedToAddItem:completion:
addTrack:persistentID:
finish
begin
initWithLibrary:connection:configuration:
library
initWithPrivacyContext:path:priorityLevel:options:
operationCount
runMode:beforeDate:
distantFuture
ml_errorWithCode:description:
performSelector:onThread:withObject:waitUntilDone:
getCFRunLoop
initWithTarget:selector:object:
T@"NSString",C,N,V_databasePath
faults
T@"NSArray",C,N,V_faults
_faults
setDatabasePath:
setFaults:
check
T@"MLDDatabaseIntegrityCheck",R,N,V_check
T@"NSError",R,N,V_error
_repairFaults
_check
_error
main
_createSQLiteErrorWithCode:description:
attemptRecoveryUsingHandle:withError:
initWithFaultString:
initWithIndex:
substringWithRange:
rangeAtIndex:
numberOfRanges
firstMatchInString:options:range:
length
regularExpressionWithPattern:options:error:
stringWithUTF8String:
fileSystemRepresentation
_activeSessions
sessionFailedToRemoveItem:completion:
setClasses:forSelector:argumentIndex:ofReply:
setWithObjects:
interfaceWithProtocol:
array
T@"MLDClientImportService",R,N
indexName
T@"NSString",R,N,V_indexName
_indexName
_createErrorWithDescription:
containsString:
indexSchemaSQL
faultString
T@"NSString",R,N,V_faultString
_faultString
B16@0:8
v20@0:8B16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v24@0:8@16
@"NSDate"
@"NSArray"
@"NSError"
@"NSDictionary"
@"NSString"
@24@0:8^{_NSZone=}16
@24@0:8@16
B32@0:8@16^@24
@32@0:8^{_NSZone=}16#24
v40@0:8@16@24@32
v44@0:8@16@24@32I40
v16@0:8
@"NSObject<OS_dispatch_queue>"
@"NSMutableArray"
@"NSMutableSet"
B24@0:8@"ML3MusicLibrary"16
v36@0:8@16B24@?28
i16@0:8
v20@0:8i16
@"MLDTaskAssertion"
@"ML3Client"
@"ML3DatabasePrivacyContext"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
@"ML3MediaLibraryWriter"
@"ML3DatabaseImportManager"
@"MLDCacheDeleteController"
@"MLDDatabaseValidationController"
@"NSOperationQueue"
@"NSObject<OS_dispatch_source>"
@"NSTimer"
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v36@0:8@"NSString"16B24@?<v@?B@"NSError">28
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"MLTransactionContext"16@?<v@?@"NSUUID"@"NSError">24
v48@0:8@"NSString"16@"NSArray"24@"NSUUID"32@?<v@?B@"NSError">40
v56@0:8@"NSString"16@"NSArray"24@"NSDictionary"32@"NSUUID"40@?<v@?@"NSData"@"NSError">48
v36@0:8@"NSUUID"16B24@?<v@?B@"NSError">28
v48@0:8Q16@"NSDictionary"24@"NSDictionary"32@?<v@?B@"NSError">40
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v48@0:8@"ML3DatabaseImport"16Q24@"NSUUID"32@?<v@?B@"NSError"@"NSData">40
v32@0:8Q16@?<v@?B@"NSError">24
v32@0:8q16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?@"ML3LanguageResources"@"NSError">16
v40@0:8@"NSArray"16@"NSString"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSXPCListenerEndpoint"@"NSError">16
v32@0:8@16@?24
v24@0:8@?16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v48@0:8Q16@24@32@?40
v48@0:8@16Q24@32@?40
v32@0:8Q16@?24
v32@0:8q16@?24
v40@0:8@16@24@?32
v32@0:8@"ML3MusicLibrary"16@"ML3DatabaseConnection"24
v32@0:8@16@24
v40@0:8@"ML3MediaLibraryWriter"16@"ML3ActiveTransaction"24@"NSError"32
v32@0:8@"ML3MediaLibraryWriter"16@"ML3ActiveTransaction"24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B32@0:8@16@24
@"<NSSecureCoding>"40@0:8@"NSXPCConnection"16@"NSXPCCoder"24@32
v36@0:8@"NSXPCConnection"16@"NSInvocation"24B32
@40@0:8@16@24@32
v36@0:8@16@24B32
@32@0:8@16^@24
B36@0:8@16B24^@28
v24@0:8q16
q16@0:8
@24@0:8q16
q24@0:8@16
v44@0:8@16@24B32@?36
B40@0:8@16:24^@32
@36@0:8@16i24@28
v32@0:8@"ML3ClientImportSessionConfiguration"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSArray"16@?<v@?@"ML3ClientImportResult"@"NSError">24
@"NSXPCConnection"
@"ML3ClientImportSessionConfiguration"
@"NSThread"
@"ML3ActiveTransaction"
@"ML3ClientImportServiceSession"
@"ML3ClientImportResult"
@"NSRunLoop"
v24@0:8Q16
@"MLDDatabaseIntegrityCheck"
@28@0:8@16B24
@28@0:8i16@20
v32@0:8@"ML3ClientImportItem"16@?<v@?B@"NSError">24
v20@0:8f16
B32@0:8^{sqlite3=}16^@24
MLNSXPCConnectionIsValidKey
com.apple.amp.medialibraryd
Default
Service
MultiUser
%@(None)
%@%@
    
%@%@:
v32@?0@"NSString"8@"_ML3DatabaseConnectionPoolDiagnostic"16^B24
Reader Busy Connections
Reader Available Connections
Writer Busy Connections
Writer Available Connections
Library at path "%@"
Database Connections:
Suspended Import Operations
Active Import Operations
Last Importer Error: %@
Enqueued Serial Operations
Enqueued Concurrent Operations
Active Transactions
Writer State: %@
SUSPENDED
ACTIVE
Database Files
Active XPC Transactions
Active Clients
Locked: %@
Reason: %@
Collected at %@
MediaLibrary Diagnostic
_libraryConnectionDiagnostics
_suspendedImportOperations
_activeImportOperations
_lastImportError
_enqueuedSerialOperations
_enqueuedConcurrentOperations
_activeTransactions
_writerSuspended
_databaseFileDiagnostics
_activeXPCTransactions
_activeClients
_locked
_reason
_date
com.apple.MediaServices
com.apple.language.changed
v12@?0i8
v16@?0@"NSNotification"8
com.apple.medialibraryd.MLDDatabaseValidationController.SerialQueue
com.apple.medialibraryd.CacheDeleteController.accessQueue
<%@ %p {
  path: %@
  file attributes: %@
<%@ %p: client=%@>
action
iTunes_Control/iTunes/MediaLibrary.sqlitedb
v32@?0@"NSString"8Q16^B24
resolvedPath
Invalid parameter not satisfying: %@
MLDMediaLibraryService.m
Validation request from %@ (%ld) for library at path: %@
MediaLibraryDiagnostic_%f.log
Debug Signal
v32@?0@"NSString"8@"NSXPCListener"16^B24
MLDSupportedServicesMediaLibraryResourcesService
We should never get here
MLDSupportedServiceMediaLibraryClientImportService
com.apple.medialibraryd.maintainence
v16@?0@"NSObject<OS_xpc_object>"8
Keep-alive for MediaLibraryService initialization
Unable to get an anonymous listener for ClientImportSessionService - This usually indicates an attempt to access medialibraryd without the proper entitlements.
description
MLDMediaLibraryServiceErrorDomain
Unable to get an anonymous listener for MediaLibraryResourcesService - This usually indicates an attempt to access medialibraryd without the proper entitlements.
Identifiers array has zero entries
Indexing requested for an app that has been removed
A bundle id is required to process the index update
com.apple.videos
com.apple.Music
Spotlight indexing isn't supported on this platform
Database is not currently locked.
Database is already locked. (Reason = %@)
reason != MLServiceLockReasonNone
v28@?0B8@"NSError"12@"NSData"20
v12@?0f8
Database import into library at path: %@
v32@?0@"NSString"8@"ML3MusicLibrary"16^B24
Setting media library options.
Database operation of type %lu
Failed to serialize fetched query data.
v24@?0@"NSUUID"8@"NSError"16
Error cannot be nil even with nil transaction identifier
Finish Task Assertion, %@
Database transaction for library at path: %@
No database path provided to start the transaction.
Database Reinitialization
MediaLibraryService API
com.apple.medialibraryd.diagnostic
Database recovery at path: %@
Database File Recovery
OS_STATE_API_REQUEST
com.apple.medialibraryd.MediaLibraryService.SerialQueue
com.apple.medialibraryd.MediaLibraryService.SpotlightIndexQueue
com.apple.medialibraryd.MLMediaLibraryWriterBeginTransactionQueue
com.apple.medialibraryd.MLMediaLibraryWriterUpdateQueue
com.apple.medialibraryd.MLMediaLibraryCallbackQueue
Q8@?0
MLDMediaLibrary State
^v24@?0^{os_state_hints_s=I*II}8@?<^v@?@"NSDictionary">16
com.apple.medialibraryd.DatabaseRecoveryOperationQueue
com.apple.medialibraryd.MaintenanceOperationQueue
-init is invalid. Use +sharedInstance instead.
com.apple.medialibraryd
v16@?0@"NSError"8
v20@?0B8@"NSError"12
failed to remove import items
failed to update import items
failed to add import items
failed to commit import session
failed to start import session
NSSQLiteErrorDomain
pragma integrity_check
index (\w+)
failed to collect integrity check results
failed to open DB file
v8@?0
com.apple.amp.MusicLibrary.MLDCLientImportService.accessQueue
%@ is abstract
ANALYZE
failed to optimize newly created index
failed to rebuild index
failed to drop bad index
DROP INDEX %@
could not find index SQL to rebuild
unhandleable integrity fault
<%@ %p "%@">
Starting medialibraryd
medialibraryd exiting.
[LanguageChange] Language change notification received. Preparing to exit...
[LanguageChange] exiting...
[LanguageChange] Validation operations are in progress. Suspending further validations...
Unlock: resuming validation queue - %{public}@
Lock: clearing previously validated databases
Lock: suspending validation queue - %{public}@
Database at path %{public}@ already validated - Bypassing validation work
Enqueueing database validation for media library at path: %{public}@
Validation queue suspended - Adding pending database validation for media library at path: %{public}@
Successfull validation of database at path %{public}@
Failed validation of database at path %{public}@. error = %{public}@
Authorizer flagged suspicious query=%{public}s with action=%{public}ld from bundleID=%{public}@
%{public}@: not opening database [invalid path] bundleID=%{public}@ path=%{public}@
Failed to validate transaction %{public}@ for client %{public}@
Unregistering transaction %{public}@:%{public}@
Registering transaction %{public}@: %{public}@
Maintenance activity triggered.
Stopping media library service idle timer.
Resetting idle timer
Media library service has suspended import operations. Attempting to resume.
MediaLibraryService's idle timer is stopping.
Starting media library service idle timer.
Creating spotlight update timer for 1hr due to ML3MusicLibraryNonContentsPropertiesDidChangeNotification
Creating spotlight update timer for 5s due to %{public}@
Resetting spotlight update timer to 5s due to %{public}@
Sucessfully finished spotlight index for Videos from library did change notification
Failed to index Videos for spotlight from library did change notification with error: %{public}@
Sucessfully finished spotlight index for Music from library did change notification
Failed to index Music for spotlight from library did change notification with error: %{public}@
Saved diagnostic information to %{public}@
Failed to save diagnostic information to path: %{public}@
Collecting diagnostic information...
%{public}@
*** Received debug signal. Collecting diagnostic information...
%{public}@ - Path: %{public}@
%{public}@ - Attempting to retrieve an XPC listener for an unknown service
Starting service '%{public}@'
Could not log database access. privacyContext=nil
Unlock: reconnecting to library at path %{public}@
Unlock: unlocking connection pool for library at path %{public}@
Lock: locking connection pool for library at %{public}@
Lock: closing all database connections for library at %{public}@
%{public}@ Listener accepted new connection %{public}@
Connection interrupted: %{public}@
Connection invalidated: %{public}@
Refusing connection from pid: %d, TCC not granted
%{public}@ Received request from listener %{public}@ for connection %{public}@
%{public}@ Ignoring connection %{public}@ from listener %{public}@
%{public}@ - Unable to get an anonymous listener for ClientImportSessionService - This usually indicates an attempt to access medialibraryd without the proper entitlements.
%{public}@ - Unable to get an anonymous listener for MediaLibraryResourcesService - This usually indicates an attempt to access medialibraryd without the proper entitlements.
Failed to process request to update spotlight index 
 invalid bundle id
Failed to process request to update spotlight index 
 removed system app
Failed to process request to update spotlight index for bundle ID %{public}@ 
 searchable items identifiers array has zero entries
Received valid request to update spotlight index for bundle ID %{public}@
Privacy Access for getLanguageResourcesWithCompletion
Received language resources request from %{public}@
Unlocking database
Unlock: resuming media library writer
Unlock: resuming the maintenance tasks queue
Unlock: completed successfully
Unlock: not locked
Locking database for reason: %{public}@
Lock: cancelling all database operations
Lock: suspending the maintenance tasks queue
Lock: suspending media library writer
Lock: completed successfully
Lock: already locked
Cancelling operations for import source %lu
Received import command from client: %{public}@
Performing import: %{public}@
Database validation failed. Aborting database import.
Received set options command from client connection: %{public}@
Received database operation request on client: %{public}@
Suspending current import operations for higher priority database operation.
Validating database before performing operation of type %lu
Logging privacy access for daemon process
Validating successful - enqueing operation for type %lu
Validation failed! Operation not enqueued. %{public}@
Finished database operation request on client: %{public}@. err=%{public}@
Ending transaction %{public}@. shouldCommit=%{BOOL}u
Received end transaction request on client connection: %{public}@
Received database query request on client connection: %{public}@
Warning: %{public}@ attempted to execute query without completion handler. Results will be thrown in the bit bucket without a way to give them to the client.
Received database update request on client connection: %{public}@
Received begin transaction request on client: %{public}@
Warning: %{public}@ attempted to begin a transaction without a completion handler. MLWriter will deadlock without a way to give identifier back to client.
Taking task assertion %{public}@
Suspending current import operations for higher priority client transaction.
Validating database before starting transaction
Validating successful - starting transaction
Validation failed - skipping starting a transaction. err=%{public}@
Releasing task assertion %{public}@
Received database recreation request on client connection: %{public}@
Enqueueing recreation operation...
(Service API) Collecting diagnostic information...
Received request to perform database integrity check from client connection: %{public}@. path=%{public}@
Integrity check complete. err=%{public}@
Received request to attempt database recovery from client connection: %{public}@
Received database validation request on client connection: %{public}@ - path: %{public}@
%{public}@ Failed to report progress to client. err=%{public}@
%{public}@ removeItems called without an active import session
%{public}@ Failed to remove track
%{public}@ Skipping failure
%{public}@ Failed to obtain client proxy object. err=%{public}@
%{public}@ updateItems called without an active import session
%{public}@ Failed to update track
%{public}@ addItems called without an active import session
%{public}@ Failed to add track
%{public}@ Finishing import session. shouldCommit=%{BOOL}u
%{public}@ Failed to finish import session
%{public}@ Failed to end transaction. err=%{public}@
%{public}@ Starting import session
%{public}@ Failed to start transaction. err=%{public}@
%{public}@ Failed to begin import session
[DatabaseIntegrityCheck] Encountered index fault: %{public}@
[DatabaseIntegrityCheck] Encountered unknown fault: %{public}@
Integrity check found %lu faults with database file
Failed to repair integrity fault %{public}@. err=%{public}@
Successfully repaired integrity faults
%{public}@ Created new session %{public}@ for incoming connection from %{public}@[%d]
%{public}@ - Connection invalidated for session %{public}@ - removing
%{public}@ - Connection interrupted for session %{public}@
[MLDDatabaseIntegrityFault] Attempting to repair index %{public}@
[MLDDatabaseIntegrityFault] Failed to repair index %{public}@: %{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241123</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleExecutable</key>
<string>medialibraryd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.medialibraryd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>AppleTVSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>13A191</string>
<key>DTPlatformName</key>
<string>appletvsimulator</string>
<key>DTPlatformVersion</key>
<string>15.2</string>
<key>DTSDKBuild</key>
<string>19K39</string>
<key>DTSDKName</key>
<string>appletvsimulator15.2.internal</string>
<key>DTXcode</key>
<string>1300</string>
<key>DTXcodeBuild</key>
<string>13A191</string>
<key>MinimumOSVersion</key>
<string>15.2</string>
<key>UIDeviceFamily</key>
<array>
<integer>3</integer>
<integer>5</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.multitasking.unlimitedassertions</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.privacy.accounting.write</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.medialibraryd.xpc</string>
<string>com.apple.privacyaccountingd</string>
<string>com.apple.storebookkeeperd.xpc</string>
<string>com.apple.symptom_diagnostics</string>
</array>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>fairplay-client</key>
<integer>999035649</integer>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>medialibraryd</string>
</array>
</dict>
</plist>
MLInvalidation
NSObject
DiagnosticCollection
MLDDiagnostic
NSMutableCopying
MLDMutableDiagnostic
MLDDatabaseValidationController
ML3DatabaseValidationDelegate
MLDCacheDeleteController
MLDDatabaseFileDiagnostic
MLDTransactionInfo
MLDMediaLibraryService
MLMediaLibraryServiceProtocol
ML3MusicLibraryDelegate
ML3MediaLibraryWriterDelegate
NSXPCListenerDelegate
NSXPCConnectionDelegate
MLDTaskAssertion
ML3ClientImportServiceSessionXPCInterface
MLDClientImportServiceSession
MLDDatabaseIntegrityCheck
MLDDatabaseIntegrityCheckOperation
MLDClientImportService
ML3ClientImportSessionXPCInterface
MLDDatabaseIntegrityFault
MLDIndexIntegrityFault
MLDUnknownIntegrityFault
boolValue
numberWithBool:
ml_isValid
ml_setValid:
ml_valid
TB,N,Gml_isValid,Sml_setValid:
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
serialQueue
isSuspended
databaseOperationQueue
operations
setEnqueuedConcurrentOperations:
databaseOperationSerialQueue
setEnqueuedSerialOperations:
collectDiagnostic:
setWriterSuspended:
transactionMap
allValues
setActiveTransactions:
date
T@"NSDate",R,N,V_date
reason
T@"NSString",R,N,V_reason
dictionaryRepresentation
T@"NSDictionary",R,N
locked
TB,R,N,V_locked
activeClients
T@"NSArray",R,N,V_activeClients
activeXPCTransactions
T@"NSArray",R,N,V_activeXPCTransactions
databaseFileDiagnostics
T@"NSArray",R,N,V_databaseFileDiagnostics
writerSuspended
TB,R,N,V_writerSuspended
activeTransactions
T@"NSArray",R,N,V_activeTransactions
enqueuedConcurrentOperations
T@"NSArray",R,N,V_enqueuedConcurrentOperations
enqueuedSerialOperations
T@"NSArray",R,N,V_enqueuedSerialOperations
lastImportError
T@"NSError",R,N,V_lastImportError
activeImportOperations
T@"NSArray",R,N,V_activeImportOperations
suspendedImportOperations
T@"NSArray",R,N,V_suspendedImportOperations
libraryConnectionDiagnostics
T@"NSDictionary",R,N,V_libraryConnectionDiagnostics
_date
_locked
_activeClients
_activeXPCTransactions
_databaseFileDiagnostics
_writerSuspended
_activeTransactions
_enqueuedConcurrentOperations
_enqueuedSerialOperations
_lastImportError
_activeImportOperations
_suspendedImportOperations
_libraryConnectionDiagnostics
_reason
mutableCopyWithZone:
initWithReason:
init
writeToFile:error:
copyWithZone:
_copyWithZone:usingConcreteClass:
_appendDescribableArray:toString:withTitle:
_appendDescribableArray:toString:withTitle:indentLevel:
.cxx_destruct
longDescription
countByEnumeratingWithState:objects:count:
count
appendFormat:
appendString:
copy
T@"NSDate",&,D,N
TB,D,N
T@"NSArray",C,D,N
T@"NSError",&,D,N
T@"NSDictionary",C,D,N
setDate:
setLocked:
setActiveClients:
setActiveXPCTransactions:
setDatabaseFileDiagnostics:
setLastImportError:
setActiveImportOperations:
setSuspendedImportOperations:
setLibraryConnectionDiagnostics:
writeToFile:atomically:encoding:error:
enumerateKeysAndObjectsUsingBlock:
readerBusyConnections
readerAvailableConnections
writerBusyConnections
writerAvailableConnections
dictionaryWithObjects:forKeys:count:
disableSharedLibrary
disableAutomaticDatabaseValidation
sharedInstance
start
currentRunLoop
processInfo
_setDaemonProcessInfo:
validationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_validationQueue
suspendedValidations
T@"NSMutableArray",&,N,V_suspendedValidations
validatedDatabasePaths
T@"NSMutableSet",&,N,V_validatedDatabasePaths
validatingDatabasePaths
T@"NSMutableSet",&,N,V_validatingDatabasePaths
languageChangeNotificationToken
Ti,N,V_languageChangeNotificationToken
homeSharingCachesClearedNotificationToken
Ti,N,V_homeSharingCachesClearedNotificationToken
suspended
TB,N,GisSuspended,V_suspended
_suspended
_languageChangeNotificationToken
_homeSharingCachesClearedNotificationToken
_validationQueue
_suspendedValidations
_validatedDatabasePaths
_validatingDatabasePaths
shouldValidateDatabaseForLibrary:
dealloc
validateMusicLibrary:shouldTruncateDatabase:completion:
isValidatedPath:
suspendValidations
clearValidatedPaths
resumeValidations
_purgePendingDatabaseValidations
_exitForLocalizationChange
_registerForLanguageChangeNotifications
_tearDownLanguageChangeNotifications
setValidationQueue:
setSuspendedValidations:
setValidatedDatabasePaths:
setValidatingDatabasePaths:
setLanguageChangeNotificationToken:
setHomeSharingCachesClearedNotificationToken:
setSuspended:
removeObserver:name:object:
defaultCenter
addObserverForName:object:queue:usingBlock:
removeObject:
runValidation
containsObject:
fileExistsAtPath:
defaultManager
databasePath
removeAllObjects
addObject:
setTruncateBeforeValidating:
initWithLibrary:delegate:completion:
_accessQueue
_libraries
initWithLibraries:
_registerCacheDeleteHandler
T@"NSString",R,N,V_databasePath
fileAttributes
T@"NSDictionary",R,N,V_fileAttributes
_databasePath
_fileAttributes
initWithDatabasePath:
stringWithFormat:
attributesOfItemAtPath:error:
taskAssertion
T@"MLDTaskAssertion",&,N,V_taskAssertion
client
T@"ML3Client",&,N,V_client
privacyContext
T@"ML3DatabasePrivacyContext",&,N,V_privacyContext
_taskAssertion
_client
_privacyContext
setTaskAssertion:
setClient:
setPrivacyContext:
databaseLocked
TB,N,GisDatabaseLocked,V_databaseLocked
currentLockReason
Tq,N,V_currentLockReason
_serialQueue
_spotlightIndexQueue
_writerBeginTransactionQueue
_writerUpdateQueue
_callbackQueue
_xpcLock
_xpcListeners
_xpcClients
_writer
_importManager
_cacheDeleteController
_validationController
_maintenanceTasksOperationQueue
_databaseRecoveryOperationQueue
_databaseRecoveryCompletionHandlers
_signalDispatchSource
_spotlightIndexCoalescingTimer
_idleTimer
_mediaLibraries
_deviceSharedLibraryPath
_transactionInfoForID
_stateHandle
_databaseLocked
_currentLockReason
validateDatabaseAtPath:withCompletionHandler:
attemptDatabaseFileRecoveryAtPath:withCompletionHandler:
checkIntegrityOfDatabaseAtPath:repairFaults:withCompletionHandler:
performDiagnosticWithCompletionHandler:
recreateDatabaseAtPath:withCompletionHandler:
beginTransactionForDatabaseWithContext:completionHandler:
executeUpdate:withParameters:onTransaction:withCompletionHandler:
executeQuery:withParameters:options:onTransaction:withCompletionHandler:
endTransaction:shouldCommit:withCompletionHandler:
performDatabaseOperation:withAttributes:options:completionHandler:
setOptions:withCompletionHandler:
performImport:fromSource:withUUID:completionHandler:
cancelImportOperation:completionHandler:
lockDatabaseForReason:withCompletion:
unlockDatabaseWithCompletion:
getLanguageResourcesWithCompletion:
updateSpotlightIndexForBundleID:withCompletion:
updateSpotlightIndexMetadataForItemsWithIdentifiers:bundleID:withCompletion:
performMaintenanceTasksForDatabaseAtPath:withCompletionHandler:
getMediaLibraryResourcesServiceListenerEndpointWithCompletion:
getClientImportServiceListenerEndpointWithCompletion:
library:didBeginDatabaseTransactionWithConnection:
library:didCommitDatabaseTransactionWithConnection:
library:didRollbackDatabaseTransactionWithConnection:
mediaLibraryWriter:terminatedTransaction:withError:
mediaLibraryWriter:didDestroyTransaction:
listener:shouldAcceptNewConnection:
replacementObjectForXPCConnection:encoder:object:
connection:handleInvocation:isReply:
_init
_stateDump
beginTransactionForDatabaseWithContext:error:
endTransaction:shouldCommit:error:
_shouldAcceptConnectionForMediaLibraryService:
setDatabaseLocked:
isDatabaseLocked
setCurrentLockReason:
_disconnectLibraries:
_reconnectLibraries:
_logPrivacyAccessWithTransactionIdentifier:
_setupNotifyEventHandlers
_setupActivityHandlers
_setupCacheDeleteController
_XPCListenerForService:
_MLDSupportedServiceForXPCListener:
_mediaLibraryForPath:
_allMediaLibraries
_handleXPCDisconnect:
_currentXPCClient
_clientForConnection:
_setupSignalHandler
_tearDownSignalHandler
_handleDebugSignal
_performDiagnosticWithReason:
_writeDiagnosticToDisk:
_registerForLibraryDidChangeNotifications
_handleLibraryDidChangeNotification:
_tearDownLibraryDidChangeNotifications
_startIdleTimer
_idleTimerFired:
_resetIdleTimer
_stopIdleTimer
_performMaintenanceOnDatabaseAtPath:withActivity:completion:
_registerTransactionInfo:forIdentitifer:
_unregisterTransactionInfoForIdentifier:
_validateTransactionIdentifier:forClient:
_validateDatabaseAtPath:byTruncatingFirst:withCompletion:
_validateDatabaseAtPath:forConnection:byTruncatingFirst:withCompletion:
_unregisterServiceOriginatedTransactionWithConnection:
_platformSupportsSpotlightIndexing
_isMediaPath:selector:resolvedPath:
faultForQuery:fromClientBundleID:onTrustError:
UTF8String
integerValue
objectForKeyedSubscript:
userInfo
bundleID
hasSuffix:
hasPrefix:
mediaFolderPath
stringByStandardizingPath
stringByResolvingSymlinksInPath
enumerateObjectsUsingBlock:
libraryPathForContainerPath:
allLibraryContainerPaths
isEqualToString:
autoupdatingSharedLibraryPath
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
_unregisterTransaction:
_transactionForIdentifier:
currentTransactionID
endTransaction
beginTransaction
initWithName:
bundleIdentifier
mainBundle
auditToken
processIdentifier
processID
setObject:forKeyedSubscript:
addOperation:
setCompletionBlock:
initWithLibrary:activity:
invalidate
setFireDate:
dateWithTimeIntervalSinceNow:
operationsCount
resumeSuspendedImportOperations
suspendedOperationsCount
addTimer:forMode:
mainRunLoop
initWithFireDate:interval:target:selector:userInfo:repeats:
name
addObserver:selector:name:object:
stringByAppendingPathComponent:
timeIntervalSinceReferenceDate
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileExistsAtPath:isDirectory:
pathForResourceFileOrFolder:
setObject:forKey:
initWithConnection:
objectForKey:
numberWithInt:
daemonClient
currentConnection
removeObjectForKey:
cancelActiveTransactionForClient:
cancelAllActiveDatabaseOperationsForClient:waitUntilFinished:
cancelImportOperationsOriginatingFromClient:
sharedManager
setUseDistantWriterConnections:
connectionPool
setDelegate:
initWithPath:
resume
sharedService
anonymousListener
initWithMachServiceName:
allLibraries
logDatabasePrivacyAccess
unlock
reconnectToDatabase
_closeAllConnectionsAndWaitForBusyConnections:
lock
endTransactionOnDate:
_generateDiagnostic
serviceTerminatedTransactionWithIdentifier:error:
remoteObjectProxy
identifier
connection
_registerTransaction:
setTerminable:
initWithLibrary:connection:client:
setInterruptionHandler:
setInvalidationHandler:
setRemoteObjectInterface:
clientInterface
setExportedInterface:
serviceInterface
setExportedObject:
endpoint
errorWithDomain:code:userInfo:
logDatabasePrivacyAccessWithAuditToken:
setValue:forKey:
dictionaryWithDictionary:
isValid
appState
applicationProxyForIdentifier:
resources
sharedResourceManager
writerErrorWithCode:description:
cancelAllImportOperations
waitUntilAllOperationsAreFinished
cancelAllActiveDatabaseOperationsAndWaitUntilFinished:
cancelImportOperationsForSource:withCompletionHandler:
performImport:fromSource:progressBlock:withCompletionHandler:
importOperationWithIdentifier:didUpdateWithProgress:
initWithDatabaseImport:library:writer:client:
initWithClientIdentity:
clientIdentity
libraryPath
setConnectionsProfilingLevel:
performDatabaseOperation:onLibrary:withAttributes:options:fromClient:completionHandler:
suspendImportOperations
unsignedIntegerValue
archivedDataWithRootObject:requiringSecureCoding:error:
executeUntrustedQuery:withParameters:options:onTransaction:error:
executeUntrustedUpdate:withParameters:onTransaction:error:
beginTransactionForLibrary:withClient:options:error:
initWithName:pid:bundleID:
options
priorityLevel
path
valueForEntitlement:
error
initWithDatabasePath:repairFaults:
initWithDatabaseFilePath:
firstObject
suspend
setQualityOfService:
setMaxConcurrentOperationCount:
setName:
raise:format:
_importOperations
initWithName:pid:bundleID:subsystem:reason:flags:
beginSessionWithConfiguration:completion:
endSessionWithCompletion:
cancelSessionWithCompletion:
addItems:completion:
updateItems:completion:
removeItems:completion:
_xpcConnection
_configuration
_importSessionThread
_transaction
_importSession
_success
_active
_totalOperationCount
_completedOperationCount
_currentResult
_importSessionRunLoop
stop
_startImportThread
_beginSessionWithConfiguration:
_endSessionCommittingChanges:
_addItems:
_updateItems:
_removeItems:
_adjustProgressForIncomingOperationCount:
_reportProgress
sessionDidUpdateProgress:
synchronousRemoteObjectProxyWithErrorHandler:
initWithSuccess:resultingDatabasePersistentIDs:
sessionFailedToUpdateItem:completion:
removeTrack:persistentID:
dictionaryWithCapacity:
updateTrack:persistentID:
sessionFailedToAddItem:completion:
addTrack:persistentID:
finish
begin
initWithLibrary:connection:configuration:
library
initWithPrivacyContext:path:priorityLevel:options:
operationCount
runMode:beforeDate:
distantFuture
ml_errorWithCode:description:
performSelector:onThread:withObject:waitUntilDone:
getCFRunLoop
initWithTarget:selector:object:
T@"NSString",C,N,V_databasePath
faults
T@"NSArray",C,N,V_faults
_faults
setDatabasePath:
setFaults:
check
T@"MLDDatabaseIntegrityCheck",R,N,V_check
T@"NSError",R,N,V_error
_repairFaults
_check
_error
main
_createSQLiteErrorWithCode:description:
attemptRecoveryUsingHandle:withError:
initWithFaultString:
initWithIndex:
substringWithRange:
rangeAtIndex:
numberOfRanges
firstMatchInString:options:range:
length
regularExpressionWithPattern:options:error:
stringWithUTF8String:
fileSystemRepresentation
_activeSessions
sessionFailedToRemoveItem:completion:
setClasses:forSelector:argumentIndex:ofReply:
setWithObjects:
interfaceWithProtocol:
array
T@"MLDClientImportService",R,N
indexName
T@"NSString",R,N,V_indexName
_indexName
_createErrorWithDescription:
containsString:
indexSchemaSQL
faultString
T@"NSString",R,N,V_faultString
_faultString
B16@0:8
v20@0:8B16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v24@0:8@16
@"NSDate"
@"NSArray"
@"NSError"
@"NSDictionary"
@"NSString"
@24@0:8^{_NSZone=}16
@24@0:8@16
B32@0:8@16^@24
@32@0:8^{_NSZone=}16#24
v40@0:8@16@24@32
v44@0:8@16@24@32I40
v16@0:8
@"NSObject<OS_dispatch_queue>"
@"NSMutableArray"
@"NSMutableSet"
B24@0:8@"ML3MusicLibrary"16
v36@0:8@16B24@?28
i16@0:8
v20@0:8i16
@"MLDTaskAssertion"
@"ML3Client"
@"ML3DatabasePrivacyContext"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
@"ML3MediaLibraryWriter"
@"ML3DatabaseImportManager"
@"MLDCacheDeleteController"
@"MLDDatabaseValidationController"
@"NSOperationQueue"
@"NSObject<OS_dispatch_source>"
@"NSTimer"
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v36@0:8@"NSString"16B24@?<v@?B@"NSError">28
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"MLTransactionContext"16@?<v@?@"NSUUID"@"NSError">24
v48@0:8@"NSString"16@"NSArray"24@"NSUUID"32@?<v@?B@"NSError">40
v56@0:8@"NSString"16@"NSArray"24@"NSDictionary"32@"NSUUID"40@?<v@?@"NSData"@"NSError">48
v36@0:8@"NSUUID"16B24@?<v@?B@"NSError">28
v48@0:8Q16@"NSDictionary"24@"NSDictionary"32@?<v@?B@"NSError">40
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v48@0:8@"ML3DatabaseImport"16Q24@"NSUUID"32@?<v@?B@"NSError"@"NSData">40
v32@0:8Q16@?<v@?B@"NSError">24
v32@0:8q16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?@"ML3LanguageResources"@"NSError">16
v40@0:8@"NSArray"16@"NSString"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSXPCListenerEndpoint"@"NSError">16
v32@0:8@16@?24
v24@0:8@?16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v48@0:8Q16@24@32@?40
v48@0:8@16Q24@32@?40
v32@0:8Q16@?24
v32@0:8q16@?24
v40@0:8@16@24@?32
v32@0:8@"ML3MusicLibrary"16@"ML3DatabaseConnection"24
v32@0:8@16@24
v40@0:8@"ML3MediaLibraryWriter"16@"ML3ActiveTransaction"24@"NSError"32
v32@0:8@"ML3MediaLibraryWriter"16@"ML3ActiveTransaction"24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B32@0:8@16@24
@"<NSSecureCoding>"40@0:8@"NSXPCConnection"16@"NSXPCCoder"24@32
v36@0:8@"NSXPCConnection"16@"NSInvocation"24B32
@40@0:8@16@24@32
v36@0:8@16@24B32
@32@0:8@16^@24
B36@0:8@16B24^@28
v24@0:8q16
q16@0:8
@24@0:8q16
q24@0:8@16
v44@0:8@16@24B32@?36
B40@0:8@16:24^@32
@36@0:8@16i24@28
v32@0:8@"ML3ClientImportSessionConfiguration"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSArray"16@?<v@?@"ML3ClientImportResult"@"NSError">24
@"NSXPCConnection"
@"ML3ClientImportSessionConfiguration"
@"NSThread"
@"ML3ActiveTransaction"
@"ML3ClientImportServiceSession"
@"ML3ClientImportResult"
@"NSRunLoop"
v24@0:8Q16
@"MLDDatabaseIntegrityCheck"
@28@0:8@16B24
@28@0:8i16@20
v32@0:8@"ML3ClientImportItem"16@?<v@?B@"NSError">24
v20@0:8f16
B32@0:8^{sqlite3=}16^@24
MLNSXPCConnectionIsValidKey
com.apple.amp.medialibraryd
Default
Service
MultiUser
%@(None)
%@%@
    
%@%@:
v32@?0@"NSString"8@"_ML3DatabaseConnectionPoolDiagnostic"16^B24
Reader Busy Connections
Reader Available Connections
Writer Busy Connections
Writer Available Connections
Library at path "%@"
Database Connections:
Suspended Import Operations
Active Import Operations
Last Importer Error: %@
Enqueued Serial Operations
Enqueued Concurrent Operations
Active Transactions
Writer State: %@
SUSPENDED
ACTIVE
Database Files
Active XPC Transactions
Active Clients
Locked: %@
Reason: %@
Collected at %@
MediaLibrary Diagnostic
_libraryConnectionDiagnostics
_suspendedImportOperations
_activeImportOperations
_lastImportError
_enqueuedSerialOperations
_enqueuedConcurrentOperations
_activeTransactions
_writerSuspended
_databaseFileDiagnostics
_activeXPCTransactions
_activeClients
_locked
_reason
_date
com.apple.MediaServices
com.apple.language.changed
v12@?0i8
v16@?0@"NSNotification"8
com.apple.medialibraryd.MLDDatabaseValidationController.SerialQueue
com.apple.medialibraryd.CacheDeleteController.accessQueue
<%@ %p {
  path: %@
  file attributes: %@
<%@ %p: client=%@>
action
iTunes_Control/iTunes/MediaLibrary.sqlitedb
v32@?0@"NSString"8Q16^B24
resolvedPath
Invalid parameter not satisfying: %@
MLDMediaLibraryService.m
Validation request from %@ (%ld) for library at path: %@
MediaLibraryDiagnostic_%f.log
Debug Signal
v32@?0@"NSString"8@"NSXPCListener"16^B24
MLDSupportedServicesMediaLibraryResourcesService
We should never get here
MLDSupportedServiceMediaLibraryClientImportService
com.apple.medialibraryd.maintainence
v16@?0@"NSObject<OS_xpc_object>"8
Keep-alive for MediaLibraryService initialization
Unable to get an anonymous listener for ClientImportSessionService - This usually indicates an attempt to access medialibraryd without the proper entitlements.
description
MLDMediaLibraryServiceErrorDomain
Unable to get an anonymous listener for MediaLibraryResourcesService - This usually indicates an attempt to access medialibraryd without the proper entitlements.
Identifiers array has zero entries
Indexing requested for an app that has been removed
A bundle id is required to process the index update
com.apple.videos
com.apple.Music
Spotlight indexing isn't supported on this platform
Database is not currently locked.
Database is already locked. (Reason = %@)
reason != MLServiceLockReasonNone
v28@?0B8@"NSError"12@"NSData"20
v12@?0f8
Database import into library at path: %@
v32@?0@"NSString"8@"ML3MusicLibrary"16^B24
Setting media library options.
Database operation of type %lu
Failed to serialize fetched query data.
v24@?0@"NSUUID"8@"NSError"16
Error cannot be nil even with nil transaction identifier
Finish Task Assertion, %@
Database transaction for library at path: %@
No database path provided to start the transaction.
Database Reinitialization
MediaLibraryService API
com.apple.medialibraryd.diagnostic
Database recovery at path: %@
Database File Recovery
OS_STATE_API_REQUEST
com.apple.medialibraryd.MediaLibraryService.SerialQueue
com.apple.medialibraryd.MediaLibraryService.SpotlightIndexQueue
com.apple.medialibraryd.MLMediaLibraryWriterBeginTransactionQueue
com.apple.medialibraryd.MLMediaLibraryWriterUpdateQueue
com.apple.medialibraryd.MLMediaLibraryCallbackQueue
Q8@?0
MLDMediaLibrary State
^v24@?0^{os_state_hints_s=I*II}8@?<^v@?@"NSDictionary">16
com.apple.medialibraryd.DatabaseRecoveryOperationQueue
com.apple.medialibraryd.MaintenanceOperationQueue
-init is invalid. Use +sharedInstance instead.
com.apple.medialibraryd
v16@?0@"NSError"8
v20@?0B8@"NSError"12
failed to remove import items
failed to update import items
failed to add import items
failed to commit import session
failed to start import session
NSSQLiteErrorDomain
pragma integrity_check
index (\w+)
failed to collect integrity check results
failed to open DB file
v8@?0
com.apple.amp.MusicLibrary.MLDCLientImportService.accessQueue
%@ is abstract
ANALYZE
failed to optimize newly created index
failed to rebuild index
failed to drop bad index
DROP INDEX %@
could not find index SQL to rebuild
unhandleable integrity fault
<%@ %p "%@">
Starting medialibraryd
medialibraryd exiting.
[LanguageChange] Language change notification received. Preparing to exit...
[LanguageChange] exiting...
[LanguageChange] Validation operations are in progress. Suspending further validations...
Unlock: resuming validation queue - %{public}@
Lock: clearing previously validated databases
Lock: suspending validation queue - %{public}@
Database at path %{public}@ already validated - Bypassing validation work
Enqueueing database validation for media library at path: %{public}@
Validation queue suspended - Adding pending database validation for media library at path: %{public}@
Successfull validation of database at path %{public}@
Failed validation of database at path %{public}@. error = %{public}@
Authorizer flagged suspicious query=%{public}s with action=%{public}ld from bundleID=%{public}@
%{public}@: not opening database [invalid path] bundleID=%{public}@ path=%{public}@
Failed to validate transaction %{public}@ for client %{public}@
Unregistering transaction %{public}@:%{public}@
Registering transaction %{public}@: %{public}@
Maintenance activity triggered.
Stopping media library service idle timer.
Resetting idle timer
Media library service has suspended import operations. Attempting to resume.
MediaLibraryService's idle timer is stopping.
Starting media library service idle timer.
Creating spotlight update timer for 1hr due to ML3MusicLibraryNonContentsPropertiesDidChangeNotification
Creating spotlight update timer for 5s due to %{public}@
Resetting spotlight update timer to 5s due to %{public}@
Sucessfully finished spotlight index for Videos from library did change notification
Failed to index Videos for spotlight from library did change notification with error: %{public}@
Sucessfully finished spotlight index for Music from library did change notification
Failed to index Music for spotlight from library did change notification with error: %{public}@
Saved diagnostic information to %{public}@
Failed to save diagnostic information to path: %{public}@
Collecting diagnostic information...
%{public}@
*** Received debug signal. Collecting diagnostic information...
%{public}@ - Path: %{public}@
%{public}@ - Attempting to retrieve an XPC listener for an unknown service
Starting service '%{public}@'
Could not log database access. privacyContext=nil
Unlock: reconnecting to library at path %{public}@
Unlock: unlocking connection pool for library at path %{public}@
Lock: locking connection pool for library at %{public}@
Lock: closing all database connections for library at %{public}@
%{public}@ Listener accepted new connection %{public}@
Connection interrupted: %{public}@
Connection invalidated: %{public}@
Refusing connection from pid: %d, TCC not granted
%{public}@ Received request from listener %{public}@ for connection %{public}@
%{public}@ Ignoring connection %{public}@ from listener %{public}@
%{public}@ - Unable to get an anonymous listener for ClientImportSessionService - This usually indicates an attempt to access medialibraryd without the proper entitlements.
%{public}@ - Unable to get an anonymous listener for MediaLibraryResourcesService - This usually indicates an attempt to access medialibraryd without the proper entitlements.
Failed to process request to update spotlight index 
 invalid bundle id
Failed to process request to update spotlight index 
 removed system app
Failed to process request to update spotlight index for bundle ID %{public}@ 
 searchable items identifiers array has zero entries
Received valid request to update spotlight index for bundle ID %{public}@
Privacy Access for getLanguageResourcesWithCompletion
Received language resources request from %{public}@
Unlocking database
Unlock: resuming media library writer
Unlock: resuming the maintenance tasks queue
Unlock: completed successfully
Unlock: not locked
Locking database for reason: %{public}@
Lock: cancelling all database operations
Lock: suspending the maintenance tasks queue
Lock: suspending media library writer
Lock: completed successfully
Lock: already locked
Cancelling operations for import source %lu
Received import command from client: %{public}@
Performing import: %{public}@
Database validation failed. Aborting database import.
Received set options command from client connection: %{public}@
Received database operation request on client: %{public}@
Suspending current import operations for higher priority database operation.
Validating database before performing operation of type %lu
Logging privacy access for daemon process
Validating successful - enqueing operation for type %lu
Validation failed! Operation not enqueued. %{public}@
Finished database operation request on client: %{public}@. err=%{public}@
Ending transaction %{public}@. shouldCommit=%{BOOL}u
Received end transaction request on client connection: %{public}@
Received database query request on client connection: %{public}@
Warning: %{public}@ attempted to execute query without completion handler. Results will be thrown in the bit bucket without a way to give them to the client.
Received database update request on client connection: %{public}@
Received begin transaction request on client: %{public}@
Warning: %{public}@ attempted to begin a transaction without a completion handler. MLWriter will deadlock without a way to give identifier back to client.
Taking task assertion %{public}@
Suspending current import operations for higher priority client transaction.
Validating database before starting transaction
Validating successful - starting transaction
Validation failed - skipping starting a transaction. err=%{public}@
Releasing task assertion %{public}@
Received database recreation request on client connection: %{public}@
Enqueueing recreation operation...
(Service API) Collecting diagnostic information...
Received request to perform database integrity check from client connection: %{public}@. path=%{public}@
Integrity check complete. err=%{public}@
Received request to attempt database recovery from client connection: %{public}@
Received database validation request on client connection: %{public}@ - path: %{public}@
%{public}@ Failed to report progress to client. err=%{public}@
%{public}@ removeItems called without an active import session
%{public}@ Failed to remove track
%{public}@ Skipping failure
%{public}@ Failed to obtain client proxy object. err=%{public}@
%{public}@ updateItems called without an active import session
%{public}@ Failed to update track
%{public}@ addItems called without an active import session
%{public}@ Failed to add track
%{public}@ Finishing import session. shouldCommit=%{BOOL}u
%{public}@ Failed to finish import session
%{public}@ Failed to end transaction. err=%{public}@
%{public}@ Starting import session
%{public}@ Failed to start transaction. err=%{public}@
%{public}@ Failed to begin import session
[DatabaseIntegrityCheck] Encountered index fault: %{public}@
[DatabaseIntegrityCheck] Encountered unknown fault: %{public}@
Integrity check found %lu faults with database file
Failed to repair integrity fault %{public}@. err=%{public}@
Successfully repaired integrity faults
%{public}@ Created new session %{public}@ for incoming connection from %{public}@[%d]
%{public}@ - Connection invalidated for session %{public}@ - removing
%{public}@ - Connection interrupted for session %{public}@
[MLDDatabaseIntegrityFault] Attempting to repair index %{public}@
[MLDDatabaseIntegrityFault] Failed to repair index %{public}@: %{public}@
