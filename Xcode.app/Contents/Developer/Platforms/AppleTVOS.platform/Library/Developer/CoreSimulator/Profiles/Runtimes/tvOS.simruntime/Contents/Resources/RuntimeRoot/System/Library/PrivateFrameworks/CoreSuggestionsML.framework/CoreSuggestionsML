@(#)PROGRAM:CoreSuggestionsML  PROJECT:Suggestions-1141.2
ffffff
http
:/.?=&_-+$!*'(),;@
?333333
SGQuickResponsesConfig: Object for key %@ not found in dictionary.
SGQuickResponsesConfig: Object for key %@ is not a number.
SGQuickResponsesConfig: Object for key %@ is not a string.
SGQuickResponsesConfig: Object for key %@ is not an array.
SGQuickResponsesConfig: Object for key %@ is not a dictionary.
Unknown model type name %@ when initializing SGQuickResponsesConfig from plist.
Unknown strategy string %@ when initializing SGQuickResponsesConfig from plist.
dictionary
[dictionary stringAssertedForKey:FEATURES_MODEL_ID]
[dictionary stringAssertedForKey:FEATURES_VERSION]
[dictionary numberAssertedForKey:VECTOR_LENGTH]
[dictionary numberAssertedForKey:CHARACTER_N_GRAM_MINIMUM_N]
[dictionary numberAssertedForKey:CHARACTER_N_GRAM_RANGE_N_LENGTH]
[dictionary numberAssertedForKey:TOKEN_N_GRAM_MINIMUM_N]
[dictionary numberAssertedForKey:TOKEN_N_GRAM_RANGE_N_LENGTH]
_featuresModelId.length > 0
_featuresVersion.length > 0
NSMaxRange(_characterNGramRange) <= MAXIMUM_NGRAM_LENGTH
NSMaxRange(_tokenNGramRange) <= MAXIMUM_NGRAM_LENGTH
_vectorizerStrategy < PMLHashingVectorizerStrategyLimit
[dictionary numberAssertedForKey:POSITIVE_SAMPLING_RATE]
[dictionary numberAssertedForKey:DYNAMIC_LABEL_SAMPLING_RATE]
[dictionary numberAssertedForKey:NEGATIVE_SAMPLING_RATE]
0 <= _positiveSamplingRate && _positiveSamplingRate <= 1
0 <= _dynamicLabelSamplingRate && _dynamicLabelSamplingRate <= 1
0 <= _negativeSamplingRate && _negativeSamplingRate <= 1
SGQuickResponsesConfig: negativeSamplingRate=%f and positiveSamplingRate=%f do not satisfy strict DP constraint
[[dictionary dictAssertedForKey: MAX_PROMPT_LENGTH] numberAssertedForKey:language]
[[dictionary dictAssertedForKey: MAX_REPLY_LENGTH] numberAssertedForKey:language]
[dictionary numberAssertedForKey:MAX_PROMPT_WINDOW_SECONDS]
0 <= _maxPromptLength
0 <= _maxReplyLength
0 <= _maxPromptWindowSeconds
[dictionary stringAssertedForKey:PROMPT_JOINING_STRING]
[dictionary numberAssertedForKey:PERSONALIZATION_IS_DISABLED]
[dictionary numberAssertedForKey:REPLY_TEXT_IS_RANDOMIZED]
[dictionary numberAssertedForKey:RANKING_AND_RESPONSE_COUNT_IS_PER_CATEGORY]
[dictionary numberAssertedForKey:RANKING_WEIGHT_CATEGORY_AVERAGE]
[dictionary numberAssertedForKey:RANKING_WEIGHT_CATEGORY_MAX]
[dictionary numberAssertedForKey:RESPONSE_COUNT_FACTOR_CLASS_DISCOUNT]
[dictionary numberAssertedForKey:RESPONSE_COUNT_FACTOR_RESPONSE_BONUS]
[dictionary numberAssertedForKey:MINIMUM_TO_SHOW_THRESHOLD]
[dictionary numberAssertedForKey:DEFAULT_RESPONSES_TO_RETURN]
[dictionary numberAssertedForKey:RESPONSES_AT_TOP_WITH_MORE_DIVERSITY]
[dictionary numberAssertedForKey:PERSONALIZATION_SELECTED_PSEUDOCOUNT_PER_SEMANTIC_CLASS]
[dictionary numberAssertedForKey:PERSONALIZATION_DISPLAYED_PSEUDOCOUNT]
[dictionary numberAssertedForKey:PERSONALIZATION_EXPLORATION_FACTOR]
Dynamic labels not supported on this device!
_weightForCategoryAverage + _weightForCategoryMax < 1 + EPSILON_OF_DOUBLE_COMPARISON
fabs(1 - _weightForCategoryAverage - _weightForCategoryMax - _weightForIndividualModel) < EPSILON_OF_DOUBLE_COMPARISON
!_isPerCategory || fabs(1 - _weightForCategoryAverage - _weightForCategoryMax) < EPSILON_OF_DOUBLE_COMPARISON
0 <= _weightForCategoryAverage && _weightForCategoryAverage <= 1
0 <= _weightForCategoryMax && _weightForCategoryMax <= 1
0 <= _weightForIndividualModel && _weightForIndividualModel <= 1
0 <= _classDiscount && _classDiscount <= 1
0 <= _responsesBonus && _responsesBonus <= 1
_personalizationSelectedPseudocountPerSemanticClass <= _personalizationDisplayedPseudocount
[dictionary numberAssertedForKey:MAX_PROMPT_LENGTH]
_promptJoiningString.length
[_modelTypeName isEqualToString:SG_QUICK_RESPONSES_MULTICLASS_ESPRESSO_CLASSIFIER] || [_modelTypeName isEqualToString:SG_QUICK_RESPONSES_BINARY_LOGISTIC_MULTI_LABEL]
!([_modelTypeName isEqualToString:SG_QUICK_RESPONSES_MULTICLASS_ESPRESSO_CLASSIFIER] && !_subModelKeyString.length)
[semanticClass isKindOfClass:NSArray.class]
[replyGroup isKindOfClass:NSArray.class]
[string isKindOfClass:NSString.class]
[dictionary arrayAssertedForKey:RESPONSE_CLASSES]
[SGQuickResponsesReplyModel semanticClassesForArray:array]
[dictionary arrayAssertedForKey:REPLY_TEXT_SELECTED_PSEUDOCOUNTS]
[dictionary numberAssertedForKey:MODEL_SCORE_WEIGHT]
[dictionary numberAssertedForKey:MODEL_CATEGORY]
Dynamic label (category: %tu) not supported on this device!
_scoreWeight >= 0
[array isKindOfClass:NSArray.class]
[dictionary isKindOfClass:NSDictionary.class]
replyModel != nil
[SGQuickResponsesReplies isZeroBasedAndContiguous:replyModels]
array
[SGQuickResponsesReplies replyModelsForArray:array]
[SGQuickResponsesReplies nestedArrayFromModels:_models]
[SGQuickResponsesReplies indexedArraysFromNestedArray:nestedArray]
indexedArrays.count >= 4
[SGQuickResponsesReplies flattenedArraysFromNestedArray:_semanticClasses]
[SGQuickResponsesReplies parentArraysFromNestedArray:nestedArray models:_models]
parentArrays.count >= 4
_selectedPseudocounts.count == _replyTexts.count
[dictionary numberAssertedForKey:IS_CUSTOM_RESPONSES_ENABLED]
[dictionary numberAssertedForKey:FILTER_BATCH_SIZE]
[dictionary numberAssertedForKey:MINIMUM_TIME_INTERVAL_SECS]
[dictionary numberAssertedForKey:MINIMUM_DISTINCT_RECIPIENTS]
[dictionary numberAssertedForKey:MINIMUM_REPLY_OCCURENCES]
[dictionary numberAssertedForKey:TIME_DECAY_FACTOR]
[dictionary numberAssertedForKey:COUNT_EXPONENT]
[dictionary numberAssertedForKey:DISTANCE_THRESHOLD]
[dictionary numberAssertedForKey:MIN_DECAYED_COUNT_FOR_PREDICTION]
[dictionary numberAssertedForKey:MIN_DECAYED_COUNT_FOR_PRUNING]
[dictionary numberAssertedForKey:MAX_STORED_MESSAGES]
[dictionary numberAssertedForKey:MAX_STORED_CUSTOM_RESPONSES]
[dictionary numberAssertedForKey:MAX_ROWS_IN_PER_RECIPIENT_TABLE]
[dictionary numberAssertedForKey:CUSTOM_RESPONSES_COMPATIBILITY_VERSION]
[dictionary numberAssertedForKey:ALLOW_PROFANITY]
[dictionary numberAssertedForKey:KNOWLEDGE_STORE_QUERY_LIMIT]
[dictionary numberAssertedForKey:MAX_REPLY_LENGTH]
[dictionary numberAssertedForKey:MAX_REPLY_GAP_SECS]
[dictionary numberAssertedForKey:USAGE_SPREAD_EXPONENT]
0 <= _minimumTimeIntervalSecs
0 <= _timeDecayFactor && _timeDecayFactor <= 1
0 <= _countExponent
SGQuickResponses: Invalid plist path %@
dict
[dict isKindOfClass:NSDictionary.class]
SGQuickResponses: no available configuration found to support prediction for language %@
[[SGQuickResponsesPredictionParameters alloc] initWithDictionary:dict[PREDICTION_PARAMETERS]]
[[SGModelHyperparameters alloc] initWithDictionary:dict[PREDICTION_MODEL_HYPERPARAMETERS][language] modelTypeName:_predictionParams.modelTypeName]
[[dict objectAssertedForKey:PREDICTION_PREPROCESSING_METHODS] arrayAssertedForKey:language]
[[SGQuickResponsesReplies alloc] initWithArray:dict[PREDICTION_REPLIES][language]]
SGQuickResponses: no available configuration found to support training for language %@
[[SGQuickResponsesClassificationParameters alloc] initWithDictionary:dict[CLASSIFICATION_PARAMETERS] language:language]
[[SGModelHyperparameters alloc] initWithDictionary:dict[CLASSIFICATION_MODEL_HYPERPARAMETERS][language] modelTypeName:SG_QUICK_RESPONSES_MULTICLASS_ESPRESSO_CLASSIFIER]
[[dict objectAssertedForKey:CLASSIFICATION_PREPROCESSING_METHODS] arrayAssertedForKey:language]
[[dict objectAssertedForKey:CLASSIFICATION_LABELS] arrayAssertedForKey:language]
SGQuickResponsesConfig: Training class count exceeds maximum
SGQuickResponses: no available configuration found to support custom responses for language %@
[[SGCustomResponsesParameters alloc] initWithDictionary:dict[CUSTOM_RESPONSES_PARAMETERS]]
Error finding model plist path for %@
No reply text string exists in config for displayed response: %@
No reply text string exists in config for selected response: %@
SGStringPreprocessor error: NSSelectorFromString returned NULL
SGStringPreprocessor received an invalid method %@
[SGStringPreprocessingTransformer replaceContactNamesWithString:withValue:] - Incorrect format for value: %@
Failed to soft-link CoreSuggestionsInternals: %s
A (lang: %@) canned response includes emojis with skin-tone modifiers!
QuickResponses: No message was passed in.
QuickResponses: Message length 0 passed in, ignoring.
QuickResponses: No locale was passed in.
QuickResponses: No language was detected from the message.
Could not find inference model (an error occurred, or possibly prediction for language %@ not supported)
Required model file(s) not specified.
Returning nil because message length exceeds maximum length %ld)
Cannot predict for locale %@ using model with language %@
Could not featurize (prediction for language %@ not supported?)
Could not predict score (prediction for language %@ not supported?)
QuickResponsesForMessage
Start
Completed
AddCustomResponses
SGQuickResponses: attempted to register displayed responses with 0 responses.
SGQuickResponses: attempted to register displayed responses but language is nil.
SGQuickResponses: attempted to register displayed responses but config is nil (language %@ not supported?).
SGQuickResponses: attempted to register displayed responses but personalization is disabled.
SGQuickResponses: attempted to register a canned response but not using QuickResponses.
SGQuickResponses: attempted to register a response but language is nil.
SGQuickResponses: attempted to register a response but config at %@ is nil (language %@ not supported?).
SGQuickResponses: attempted to register a canned response at position %@ that is not likely to have come from QuickResponses.
config not found for language %@ and plist path %@
Unknown model name: %s
Failed to locate assets resource %s
Failed to load model file resource %s, with type:%@, modelEntity:%@, mode:%lu, language:%@
No transformer instance for model %@ in language %@ and mode %@ at path %@
SGQuickResponsesStore read error: %@
SGQuickResponsesStore write error: %@
SGQuickResponsesStore: Unexpected null value for custom_responses.language
SGQuickResponsesStore: Unexpected null value for custom_responses.recipient
SGQuickResponsesStore: Unexpected null value for custom_responses.prompt_embedding
SGQuickreponsesStore: Unexpected null value for custom_responses.reply
SGQuickResponsesStore: Unexpected null value for custom_responses.reply
SGQuickResponsesStore: mis-matched dimensions (a possible plist error) between embedding and densePromptEmbedding in store: %tu v,s. %tu
ComputeCustomResponseDistance
SingleCustomResponseRow
SelectCustomResponseRows
SortCustomResponses
DedupeCustomResponses
RemoveProfaneCustomResponses
Row returned in deltaForResponsesOnRow was null, continuing to iterate as best effort
SGQuickResponsesEngagementDeltas displayed value %lld is out of range for int32_t, casting to boundary value
SGQuickResponsesEngagementDeltas selected value %lld is out of range for int32_t, casting to boundary value
SGQuickResponsesEngagementDeltas matched value %lld is out of range for int32_t, casting to boundary value
Language in deltaForResponsesOnRow was null, continuing to iterate as best effort
No tokenizer in SGTokenizer. Skipping tokenization!
SGLexicon: Unable to load lexicon, %@
SGLexicon: non utf-8 token passed
Added message id already in conversation. conversation id = %@
Most recent message in conversation turns does not match specified current message.
SGLanguageDetection: lowercase len %d, range loc %d / len %d found no range in original len %d
SGLanguageDetection: mismatched lowercase rangeEnd %d, stringEnd %d / original rangeEnd %d, stringEnd %d
SGLanguageDetection: lowercase tokenRange is loc %d, len %d but original range is loc %d, len %d
SGLanguageDetection: strange! lowercase is loc %d, len %d but original is loc %d, len %d
SGLanguageDetection: possible problem! lowercase '%@' strlen %d and original '%@' strlen %d
SGLanguageDetection: original len %d is longer than the lowercased len %d in locale %@, detected %@
Error loading model plist %@: %@
Error deserializing model plist %@: %@
Failed to retrieve message events from CoreDuet. Error: %@
Failed to soft-link IMFoundation: %s
SGQuickResponsesDatabase: Unable to create directory for database
SGQuickResponsesDatabase: Migrations failed
SGQuickResponsesDatabase failed to remove corruption marker at %@: %@
SGQuickResponsesDatabase not migrating, too many attempts (%d)
SGQuickResponsesDatabase migrating db
SGQuickResponsesDatabase could not perform migrations (device locked?), try again later
SGQuickResponsesDatabase migrations failed, cannot use database
SGQuickResponsesDatabase has a future schema version, cannot use database
SGQuickResponsesDatabase got unexpected migration result of 'step completed', will not use database
SGQuickResponsesDatabase: Unable to initialize database.
SGQuickResponsesDatabase: Unable to open existing database: %@
quickResponsesBinaryLogisticMultiLabel
quickResponsesEspressoClassifierMultiLabel
DecrementingFrequency
Frequency
SequentialTokenNgram
SequentialCharNgram
LegacyBagOfId
BagOfId
SGQuickResponsesConfig.m
Invalid parameter not satisfying: %@
strategyStringsCount == PMLHashingVectorizerStrategyLimit
FEATURES_MODEL_ID
FEATURES_VERSION
VECTOR_LENGTH
CHARACTER_N_GRAM_MINIMUM_N
CHARACTER_N_GRAM_RANGE_N_LENGTH
TOKEN_N_GRAM_MINIMUM_N
TOKEN_N_GRAM_RANGE_N_LENGTH
VECTORIZER_STRATEGY
ID_VECTOR_LENGTH
ID_VECTOR_SHOULD_PAD_TO_LENGTH
ID_VECTOR_SHOULD_APPEND_SENTEND
VECTOR_NORMALIZATION
VL=%lu&CL=%lu&CH=%lu&TL=%lu&TH=%lu&SN=%lu&IDL=%lu&IDS=%lu&VN=%ld&FV=%@
POSITIVE_SAMPLING_RATE
DYNAMIC_LABEL_SAMPLING_RATE
NEGATIVE_SAMPLING_RATE
MAX_PROMPT_LENGTH
MAX_REPLY_LENGTH
MAX_PROMPT_WINDOW_SECONDS
PROMPT_JOINING_STRING
PERSONALIZATION_IS_DISABLED
REPLY_TEXT_IS_RANDOMIZED
RANKING_AND_RESPONSE_COUNT_IS_PER_CATEGORY
RANKING_WEIGHT_CATEGORY_AVERAGE
RANKING_WEIGHT_CATEGORY_MAX
RESPONSE_COUNT_FACTOR_CLASS_DISCOUNT
RESPONSE_COUNT_FACTOR_RESPONSE_BONUS
MINIMUM_TO_SHOW_THRESHOLD
DEFAULT_RESPONSES_TO_RETURN
RESPONSES_AT_TOP_WITH_MORE_DIVERSITY
PERSONALIZATION_SELECTED_PSEUDOCOUNT_PER_SEMANTIC_CLASS
PERSONALIZATION_DISPLAYED_PSEUDOCOUNT
PERSONALIZATION_EXPLORATION_FACTOR
DYNAMIC_LABELS_ENABLED
FILTER_NONCONFIDENT
HAS_NEGATIVE_CLASS
NEGATIVE_CLASS_MAXIMUM_TO_PREDICT
MODEL_TYPE_NAME
SUB_MODEL_KEY_STRING
RESPONSE_CLASSES
REPLY_TEXT_SELECTED_PSEUDOCOUNTS
MODEL_SCORE_WEIGHT
MODEL_CATEGORY
DYNAMIC_LABEL
v8@?0
v44@?0@8@"NSArray"16Q24Q32B40
@min.unsignedIntegerValue
@max.unsignedIntegerValue
@max.category
v32@?0@"SGQuickResponsesReplyModel"8Q16^B24
IS_CUSTOM_RESPONSES_ENABLED
FILTER_BATCH_SIZE
MINIMUM_TIME_INTERVAL_SECS
MINIMUM_DISTINCT_RECIPIENTS
MINIMUM_REPLY_OCCURENCES
TIME_DECAY_FACTOR
COUNT_EXPONENT
DISTANCE_THRESHOLD
MIN_DECAYED_COUNT_FOR_PREDICTION
MIN_DECAYED_COUNT_FOR_PRUNING
MAX_STORED_MESSAGES
MAX_STORED_CUSTOM_RESPONSES
MAX_ROWS_IN_PER_RECIPIENT_TABLE
CUSTOM_RESPONSES_COMPATIBILITY_VERSION
ALLOW_PROFANITY
KNOWLEDGE_STORE_QUERY_LIMIT
MAX_REPLY_GAP_SECS
USAGE_SPREAD_EXPONENT
USE_NON_NEGATIVE_CLASSES_ONLY
%@-%lu-%@
@"_PASLRUCache"8@?0
language.length
PREDICTION_REPLIES
PREDICTION_MODEL_HYPERPARAMETERS
PREDICTION_PREPROCESSING_METHODS
PREDICTION_PARAMETERS
CLASSIFICATION_LABELS
CLASSIFICATION_MODEL_HYPERPARAMETERS
CLASSIFICATION_PREPROCESSING_METHODS
CLASSIFICATION_PARAMETERS
CUSTOM_RESPONSES_PARAMETERS
MLModelRules.plist
MLModelMappings.plist
MLQuickResponsesTraining.plist
MetricsConfig.plist
SignatureDetectorRules.plist
DPRecorderRules.plist
NameDetectorRules.plist
@8@?0
SGModelAsset-notifications
/System/Library/AssetTypeDescriptors/com.apple.MobileAsset.AssetTypeDescriptor.CoreSuggestionsModelAssets.plist
com.apple.proactive.CoreSuggestionsMLTests
com.apple.MobileAsset.AssetTypeDescriptor.CoreSuggestionsModelAssets.plist
com.apple.CoreSuggestionsTests
Assets
suggestionsmodelassets
v16@?0@"_PASAsset2"8
@sum.self
d16@?0@8
METHODS
methods
methods.count % 2 == 0
%s%s%s%s
size >= 0 && size < BUF_SIZE
%s%s%s%s%s
-[SGStringPreprocessingTransformer transform:]
SGStringPreprocessingTransformer.m
[input isKindOfClass:[NSString class]]
v36@?0I8^S12{_NSRange=QQ}20
value.length == 1
!CFUniCharIsSurrogateHighCharacter(separator) && !CFUniCharIsSurrogateLowCharacter(separator)
jusqu
lorsqu
puisqu
quelqu
qoiqu
!CFUniCharIsSurrogateHighCharacter(replacement) && !CFUniCharIsSurrogateLowCharacter(replacement)
valueLen <= patternLen
v32@?0@"SGTokenString"8Q16^B24
:withValue:
SGNameDetector
/System/Library/PrivateFrameworks/CoreSuggestionsInternals.framework/CoreSuggestionsInternals
TRANSFORMERS
v32@?0@"<PMLTransformerProtocol>"8Q16^B24
@16@?0@"<PMLPlistAndChunksSerializableProtocol>"8
@16@?0@8
SGQuickResponsesInference.m
text.length
lang.length
model
ranking
personalization != nil || model.config.predictionParams.isPersonalizationDisabled
v32@?0@8@16^B24
v32@?0@"NSNumber"8Q16^B24
v32@?0@"SGQuickResponse"8Q16^B24
@"NSArray"16@?0@"NSArray"8
-[SGQuickResponsesModel predict:]
SGQuickResponsesModel.m
[[self class] isEqual:features.source.modelClass]
[data isKindOfClass:NSString.class]
[vector isKindOfClass:PMLSparseVector.class]
[label isKindOfClass:NSNumber.class]
quickResponses
BinaryLogisticMultiLabel
%@:%@
EspressoClassifierMultiLabel
%@_%@_%@%@Model.chunk
Chunk file at %@ not the same class as type %@
model.outputDimension == configCount
v16@?0@"NSMutableSet"8
%@%lu%@%@
@"_PASLock"8@?0
%@ must implement +newTransformerInstanceForLanguage:mode:plistPath:
config
featurizer
source
labeler != nil || config.mode == SGModelModePrediction
sampler != nil || config.mode == SGModelModePrediction
SGQRTextMessage
SGQuickResponses
+[SGQuickResponsesModelRules areModelsAvailableInLanguage:]_block_invoke
[objectives isKindOfClass:[NSDictionary class]]
v32@?0@8@"NSDictionary"16^B24
TRAINING
PREDICTION
EVALUATION
NSString *modelModeName(SGModelMode)
Unexpected SGModelMode mode: %lX
v16@?0@8
{_PASDBIterAction_=B}16@?0@"NSError"8
B8@?0
v16@?0@"SGLazyInit"8
SELECT * FROM responses WHERE lang_response=$lang_response
SELECT * FROM responses_totals WHERE language=$language
$lang_response
v16@?0@"_PASSqliteStatement"8
displayed
selected
matched
{_PASDBIterAction_=B}16@?0@"_PASSqliteStatement"8
$language
opportunities
unmatched
v24@?0@"_PASSqliteDatabase"8@?<{_PASDBIterAction_=B}@?@"NSError">16
INSERT INTO responses (lang_response, displayed) VALUES($lang_response,1) ON CONFLICT(lang_response) DO UPDATE SET displayed=displayed+1
INSERT INTO responses_totals (language, opportunities, displayed) VALUES ($language,1,$count) ON CONFLICT(language) DO UPDATE SET opportunities=opportunities+1, displayed=displayed+$count
$count
INSERT INTO responses (lang_response, selected) VALUES($lang_response,1) ON CONFLICT(lang_response) DO UPDATE SET selected=selected+1
INSERT INTO responses_totals (language, selected) VALUES ($language,1) ON CONFLICT(language) DO UPDATE SET selected=selected+1
INSERT INTO responses (lang_response, matched) VALUES($lang_response,1) ON CONFLICT(lang_response) DO UPDATE SET matched=matched+1
INSERT INTO responses_totals (language, matched) VALUES ($language,1) ON CONFLICT(language) DO UPDATE SET matched=matched+1
INSERT INTO responses_totals (language, unmatched) VALUES ($language,1) ON CONFLICT(language) DO UPDATE SET unmatched=unmatched+1
UPDATE messages SET filtered = true, filtering = false WHERE rowid=$row_id
INSERT INTO cr_per_recipient_counts (reply,  language,  recipient, decayed_times_used)                              VALUES($reply, $language, $recipient,                  1) ON CONFLICT(reply, language, recipient) DO UPDATE SET decayed_times_used = decayed_times_used + 1
INSERT INTO custom_responses (reply,  language,  prompt_embedding, decayed_times_used,  first_seen,  last_seen)                       VALUES($reply, $language, $prompt_embedding,                  1,    $sent_at,   $sent_at)
$reply
$prompt_embedding
$sent_at
$recipient
$row_id
UPDATE custom_responses SET prompt_embedding = $prompt_embedding,     decayed_times_used = decayed_times_used + 1,     first_seen = MIN($sent_at, first_seen),     last_seen = MAX($sent_at, last_seen) WHERE language = $language AND reply = $reply
%@%@
INSERT INTO messages (reply, language, prompt, recipient, sent_at, filtering, filtered) VALUES($reply, $language, $prompt, $recipient, $sent_at, false, false)
$prompt
DELETE FROM messages ORDER BY sent_at DESC LIMIT -1 OFFSET $table_limit
$table_limit
SELECT COUNT(ROWID) as c from messages where NOT filtered
SELECT m.rowid, m.filtering, m.filtered, m.recipient, m.prompt, m.language, m.reply, m.sent_at, cr.prompt_embedding FROM messages as m, (SELECT reply, language, prompt_embedding from custom_responses) as cr WHERE m.filtering AND NOT m.filtered AND m.reply = cr.reply AND m.language = cr.language
language
recipient
reply
prompt
rowid
sent_at
prompt_embedding
UPDATE messages SET filtering = true WHERE NOT filtered ORDER BY sent_at LIMIT $limit
SELECT changes();
$limit
UPDATE messages SET filtering = false, filtered = true WHERE filtering AND reply IN (SELECT reply FROM messages GROUP BY reply HAVING COUNT(DISTINCT(recipient)) < $recipients OR COUNT(reply) < $replies)
$recipients
$replies
SELECT rowid, reply FROM messages WHERE filtering
UPDATE messages SET filtering = false, filtered = true WHERE rowid = $row_id
SELECT profanity_locale FROM custom_responses_version
profanity_locale
SELECT current_version FROM custom_responses_version
current_version
DELETE FROM custom_responses_version
INSERT INTO custom_responses_version (current_version, profanity_locale) VALUES($current_version, $profanity_locale)
$current_version
$profanity_locale
DELETE FROM custom_responses
UPDATE messages SET filtering = false, filtered = false
SELECT rowid, reply, language, prompt, sent_at, recipient FROM messages WHERE filtering AND NOT filtered
SELECT prompt_embedding FROM custom_responses WHERE reply=$reply AND language=$language
UPDATE custom_responses SET usage_spread = (SELECT CAST(u AS FLOAT)/c FROM    (SELECT count(distinct(recipient)) AS u FROM messages WHERE messages.reply=custom_responses.reply AND messages.language=custom_responses.language),    (SELECT count(distinct(recipient)) AS c FROM messages))
SELECT COUNT(ROWID) as n FROM cr_per_recipient_counts
SELECT reply, language, COUNT(ROWID) as n FROM cr_per_recipient_counts GROUP BY reply, language
second
SGQuickResponsesStore.m
DELETE FROM cr_per_recipient_counts WHERE reply=$reply AND language=$language ORDER BY decayed_times_used ASC LIMIT $n_rows 
$n_rows
SELECT reply, prompt_embedding, decayed_times_used, usage_spread FROM custom_responses WHERE language = $language   AND decayed_times_used >= $minimum_decayed_count   AND last_seen - first_seen >= $minimum_time_interval
$minimum_decayed_count
$minimum_time_interval
decayed_times_used
usage_spread
q24@?0@"_PASTuple2"8@"_PASTuple2"16
SELECT rowid, prompt_embedding from custom_responses
UPDATE custom_responses SET prompt_embedding = $prompt_embedding, decayed_times_used = decayed_times_used * $decay_factor WHERE rowid = $rowid
$decay_factor
$rowid
UPDATE cr_per_recipient_counts SET decayed_times_used = decayed_times_used * $decay_factor
DELETE FROM custom_responses WHERE decayed_times_used < $threshold
$threshold
SELECT COUNT(ROWID) as c from custom_responses
DELETE FROM custom_responses ORDER BY decayed_times_used ASC LIMIT $table_limit
SELECT t1.lang_response AS lang_response        ,CASE            WHEN t2.displayed IS NULL THEN t1.displayed            ELSE t1.displayed - t2.displayed         END AS displayed        ,CASE            WHEN t2.selected IS NULL THEN t1.selected            ELSE t1.selected - t2.selected         END AS selected        ,CASE            WHEN t2.matched IS NULL THEN t1.matched            ELSE t1.matched - t2.matched         END AS matched FROM responses t1 LEFT JOIN responses_snapshot t2     ON t1.lang_response = t2.lang_response ORDER BY RANDOM() 
DROP TABLE responses_snapshot
CREATE TABLE responses_snapshot AS     SELECT *     FROM responses 
CREATE INDEX idx_responses_snapshot_lang_response ON responses_snapshot (lang_response)
lang_response
flakyDatabaseHandle.getObject.db.isInMemory
SGQuickResponsesStore failed to destroy instance in memory.
SELECT decayed_times_used FROM cr_per_recipient_counts WHERE reply=$reply AND language=$language AND recipient=$recipient
SELECT usage_spread FROM custom_responses WHERE reply=$reply AND language=$language
totalOpportunities >= 0
totalDisplayed >= 0
totalSelected >= 0
totalMatched >= 0
totalUnmatched >= 0
displayed >= 0
selected >= 0
matched >= 0
langResponse
response
lang
SGFutureFoundationFramework.m
block
SGTokenizer
v40@?0@"NSString"8^B16{_NSRange=QQ}24
v24@?0^{_LXEntry=}8*16
malloc failed
@"NSArray"16@?0@"<NSFastEnumeration>"8
@"NSMutableDictionary"16@?0@"<NSFastEnumeration>"8
@"NSMutableArray"16@?0@"<NSFastEnumeration>"8
v40@?0@"EMFEmojiToken"8{_NSRange=QQ}16^B32
v16@?0@"NSMutableArray"8
B32@?0@"<SGConversationTurnProtocol>"8Q16^B24
sender
q24@?0@"<SGConversationTurnProtocol>"8@"<SGConversationTurnProtocol>"16
SGConversationTurn.m
[otherTurn isKindOfClass:[SGConversationTurn class]]
<SGConversationTurn txt_sz:%tu sid_sz:%tu tsp:%@>
LABEL_MAPPING
labels
duplicate label %@
mapping
-[SGStringLabelingTransformer transform:]
SGStringLabelingTransformer.m
PREPROCESSOR
LABELER
preprocessor
labeler
@unionOfArrays.self
SGTextLabelTransformer: Unexpected null value for flattened labels
-[SGTextLabelTransformer transform:]
SGTextLabelTransformer.m
SGQuickResponsesClassificationModel.m
SGLanguageDetection.m
localeIdentifier.length >= 2
zh-Hans
Hans
Hant
zh-Hant
Cyrl
Arab
uz-Arab
Latn
uz-Latn
sr-Latn
NSMaxRange(lowercaseRange) <= lowercaseText.length
v40@?0@"NSString"8{_NSRange=QQ}16^B32
NSMaxRange(textTagRange) <= text.length
SGDefaultAssets.m
no path for filename %@
MLQuickResponsesPrediction
plist
INSendMessageIntent
startDate > %@
com.apple.MobileSMS
startDate
SGMessagePairIterator.m
Iterator exhausted!
messageEvents is nil
IMAttachmentCharacterString
/System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation
IMBreadcrumbCharacterString
SGModelFeatures.m
sessionDescriptor
modelClass
vector
SGRandomization.m
NSMaxRange(range) <= mutableArray.count
valueBlock
v32@?0@8Q16^B24
k <= n
SEPARATOR
SGTokenJoiningTransformer.m
Unexpected input: %@. %@ requires an NSArray.
TRANSFORMER
INPUTKEY
SGSelectiveTransformer.m
Unexpected input: %@. %@ requires dictionary with inputKey: %@.
SGQuickResponsesRanking.m
num.unsignedIntegerValue >= headerCount
v32@?0@"SGQuickResponsesCategoryScore"8Q16^B24
validClasses %d out of range [1, %d]
responsesToFill %d out of range [%d, %d]
score >= 0
quickresponses.db
PRAGMA journal_mode=WAL
PRAGMA synchronous=NORMAL
CREATE TABLE responses (    lang_response TEXT PRIMARY KEY,     displayed INTEGER NOT NULL DEFAULT 0,     selected INTEGER NOT NULL DEFAULT 0,     matched INTEGER NOT NULL DEFAULT 0) WITHOUT ROWID
CREATE TABLE responses_totals (    language TEXT PRIMARY KEY,     opportunities INTEGER NOT NULL DEFAULT 0,     displayed INTEGER NOT NULL DEFAULT 0,     selected INTEGER NOT NULL DEFAULT 0,     matched INTEGER NOT NULL DEFAULT 0,     unmatched INTEGER NOT NULL DEFAULT 0) WITHOUT ROWID
CREATE TABLE messages (    reply TEXT NOT NULL,    language TEXT NOT NULL,     prompt TEXT NOT NULL,     recipient TEXT NOT NULL,     sent_at DOUBLE NOT NULL,     filtering BOOL NOT NULL,     filtered BOOL NOT NULL )
CREATE TABLE custom_responses (    reply TEXT NOT NULL,     language TEXT NOT NULL,     prompt_embedding BLOB NOT NULL,     decayed_times_used DOUBLE NOT NULL,     first_seen DOUBLE NOT NULL,     last_seen DOUBLE NOT NULL )
CREATE TABLE custom_responses_version (    current_version INTEGER NOT NULL,     profanity_locale TEXT NOT NULL )
CREATE TABLE cr_per_recipient_counts (    reply TEXT NOT NULL,     language TEXT NOT NULL,     recipient TEXT NOT NULL,     decayed_times_used DOUBLE NOT NULL, UNIQUE(reply, language, recipient))
ALTER TABLE custom_responses ADD COLUMN usage_spread DOUBLE NOT NULL DEFAULT 0.0
UPDATE custom_responses SET usage_spread = (SELECT CAST(u AS FLOAT)/c FROM    (SELECT count(distinct(recipient)) AS u FROM messages WHERE messages.reply=custom_responses.reply AND messages.language=custom_responses.language),    (SELECT count(distinct(recipient)) AS c FROM messages));
CREATE TABLE responses_snapshot (    lang_response TEXT PRIMARY KEY,     displayed INTEGER NOT NULL DEFAULT 0,     selected INTEGER NOT NULL DEFAULT 0,     matched INTEGER NOT NULL DEFAULT 0) WITHOUT ROWID
@&B&<
SGQuickResponsesConfigDictionary
SGModelHyperparameters
SGQuickResponsesClassificationParameters
SGQuickResponsesPredictionParameters
SGQuickResponsesReplyModel
SGQuickResponsesReplies
SGCustomResponsesParameters
SGQuickResponsesConfig
SGModelAsset
SGNestedArray
SGQuickResponsesReplyOption
SGQuickResponsesPersonalization
SGStringPreprocessingTransformer
PMLTransformerProtocol
PMLPlistAndChunksSerializableProtocol
NSObject
SGStringPreprocessor
SGPipelineTransformer
SGQuickResponse
SGQuickResponsesInference
0 1@
SGQuickResponsesModel
SGModelSampler
SGQuickResponsesTransformerInstance
SGQuickResponsesModelRules
SGQuickResponsesStore
SGQuickResponsesRecords
SGQuickResponsesReplyRecord
SGQuickResponsesEngagementDeltas
NSSecureCoding
NSCoding
SGLazyInit
SGTokenizerML
SGLexiconML
SGDeduperML
SGConversationTracker
SGConversationTurn
NSCopying
SGConversationTurnProtocol
SGStringLabelingTransformer
SGTextLabelTransformer
SGQuickResponsesClassificationModel
0 3C
0 0@
SGLanguageDetection
SGDefaultAssets
SGMessagePair
SGMessagePairIterator
SGModelSource
SGModelFeatures
SGRandomization
SGTokenJoiningTransformer
SGSelectiveTransformer
SGQuickResponsesRanking
SGQuickResponsesScoring
SGQuickResponsesDistributingCount
SGQuickResponsesClassScore
SGQuickResponsesCategoryScore
SGQuickResponsesDatabase
_PASDatabaseMigrationProtocol
objectForKey:
objectAssertedForKey:
numberAssertedForKey:
stringAssertedForKey:
arrayAssertedForKey:
dictAssertedForKey:
UTF8String
isEqualToString:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
init
unsignedIntegerValue
strategyForString:modelTypeName:
boolValue
length
initWithFormat:
descriptorForName:version:locale:
initWithDictionary:modelTypeName:
sessionDescriptorForLanguage:
featuresModelId
featuresVersion
characterNGramRange
tokenNGramRange
vectorLength
idVectorLength
extraIdOptions
vectorizerStrategy
vectorNormalization
.cxx_destruct
_featuresModelId
_featuresVersion
_vectorLength
_idVectorLength
_extraIdOptions
_vectorizerStrategy
_vectorNormalization
_characterNGramRange
_tokenNGramRange
T@"NSString",R,C,N,V_featuresModelId
T@"NSString",R,C,N,V_featuresVersion
T{_NSRange=QQ},R,N,V_characterNGramRange
T{_NSRange=QQ},R,N,V_tokenNGramRange
TQ,R,N,V_vectorLength
TQ,R,N,V_idVectorLength
TQ,R,N,V_extraIdOptions
TQ,R,N,V_vectorizerStrategy
Tq,R,N,V_vectorNormalization
doubleValue
integerValue
initWithDictionary:language:
positiveSamplingRate
dynamicLabelSamplingRate
negativeSamplingRate
maxReplyLength
maxPromptLength
maxPromptWindowSeconds
promptJoiningString
_positiveSamplingRate
_dynamicLabelSamplingRate
_negativeSamplingRate
_maxReplyLength
_maxPromptLength
_maxPromptWindowSeconds
_promptJoiningString
Td,R,N,V_positiveSamplingRate
Td,R,N,V_dynamicLabelSamplingRate
Td,R,N,V_negativeSamplingRate
TQ,R,N,V_maxReplyLength
TQ,R,N,V_maxPromptLength
Td,R,N,V_maxPromptWindowSeconds
T@"NSString",R,N,V_promptJoiningString
objectForKeyedSubscript:
initWithDictionary:
isPersonalizationDisabled
isReplyTextRandomized
isPerCategory
weightForCategoryAverage
weightForCategoryMax
weightForIndividualModel
classDiscount
responsesBonus
minToShowThreshold
defaultResponsesToReturn
responsesToShowAtTopForDiversity
personalizationExplorationFactor
personalizationDisplayedPseudocount
personalizationSelectedPseudocountPerSemanticClass
modelTypeName
subModelKeyString
modelFeaturizationFormatOptionIsDense
dynamicLabelsEnabled
hasNegativeClass
negativeClassMaximumToPredict
filterNonConfident
_isPersonalizationDisabled
_isReplyTextRandomized
_isPerCategory
_modelFeaturizationFormatOptionIsDense
_dynamicLabelsEnabled
_hasNegativeClass
_filterNonConfident
_weightForCategoryAverage
_weightForCategoryMax
_weightForIndividualModel
_classDiscount
_responsesBonus
_minToShowThreshold
_defaultResponsesToReturn
_responsesToShowAtTopForDiversity
_personalizationExplorationFactor
_personalizationDisplayedPseudocount
_personalizationSelectedPseudocountPerSemanticClass
_modelTypeName
_subModelKeyString
_negativeClassMaximumToPredict
TB,R,N,V_isPersonalizationDisabled
TB,R,N,V_isReplyTextRandomized
TB,R,N,V_isPerCategory
Td,R,N,V_weightForCategoryAverage
Td,R,N,V_weightForCategoryMax
Td,R,N,V_weightForIndividualModel
Td,R,N,V_classDiscount
Td,R,N,V_responsesBonus
Td,R,N,V_minToShowThreshold
TQ,R,N,V_defaultResponsesToReturn
TQ,R,N,V_responsesToShowAtTopForDiversity
Td,R,N,V_personalizationExplorationFactor
Td,R,N,V_personalizationDisplayedPseudocount
Td,R,N,V_personalizationSelectedPseudocountPerSemanticClass
T@"NSString",R,N,V_modelTypeName
T@"NSString",R,N,V_subModelKeyString
TB,R,N,V_modelFeaturizationFormatOptionIsDense
TB,R,N,V_dynamicLabelsEnabled
TB,R,N,V_hasNegativeClass
Td,R,N,V_negativeClassMaximumToPredict
TB,R,N,V_filterNonConfident
countByEnumeratingWithState:objects:count:
initWithObjects:
addObject:
semanticClassesForArray:
initWithDictionary:index:
semanticClassIndex
semanticClasses
selectedPseudocounts
scoreWeight
category
dynamicLabel
_dynamicLabel
_semanticClassIndex
_semanticClasses
_selectedPseudocounts
_scoreWeight
_category
TQ,R,N,V_semanticClassIndex
T@"NSArray",R,N,V_semanticClasses
T@"NSArray",R,N,V_selectedPseudocounts
Td,R,N,V_scoreWeight
TQ,R,N,V_category
TB,R,N,V_dynamicLabel
objectAtIndexedSubscript:
traversalWithNestedArray:depthCallback:itemCallback:
lastObject
initWithUnsignedInteger:
count
allObjects
valueForKeyPath:
isZeroBasedAndContiguous:
enumerateObjectsUsingBlock:
addObjectsFromArray:
replyModelsForArray:
nestedArrayFromModels:
indexedArraysFromNestedArray:
flattenedArraysFromNestedArray:
parentArraysFromNestedArray:models:
categoryModelsFromModels:
subclassesFromClasses:subclassArray:
initWithArray:
selectedPseudocountsFromModels:
nestedArrayFromFlatArray:nestedIndexes:
modelSemanticClassesFromModels:
models
styleGroups
replyTexts
semanticClassReplyTextStrings
semanticClassSelectedPseudocounts
semanticClassParent
styleGroupParent
replyTextParent
categoryModels
categorySemanticClasses
categoryStyleGroups
semanticClassStyleGroups
semanticClassReplyTexts
styleGroupReplyTexts
replyTextsSet
_models
_styleGroups
_replyTexts
_semanticClassReplyTextStrings
_semanticClassSelectedPseudocounts
_semanticClassParent
_styleGroupParent
_replyTextParent
_categoryModels
_categorySemanticClasses
_categoryStyleGroups
_semanticClassStyleGroups
_semanticClassReplyTexts
_styleGroupReplyTexts
_replyTextsSet
T@"NSArray",R,N,V_models
T@"NSArray",R,N,V_styleGroups
T@"NSArray",R,N,V_replyTexts
T@"NSArray",R,N,V_semanticClassReplyTextStrings
T@"NSArray",R,N,V_semanticClassSelectedPseudocounts
T@"NSArray",R,N,V_semanticClassParent
T@"NSArray",R,N,V_styleGroupParent
T@"NSArray",R,N,V_replyTextParent
T@"NSArray",R,N,V_categoryModels
T@"NSArray",R,N,V_categorySemanticClasses
T@"NSArray",R,N,V_categoryStyleGroups
T@"NSArray",R,N,V_semanticClassStyleGroups
T@"NSArray",R,N,V_semanticClassReplyTexts
T@"NSArray",R,N,V_styleGroupReplyTexts
T@"NSSet",R,N,V_replyTextsSet
isCustomResponsesEnabled
filterBatchSize
minimumTimeIntervalSecs
minimumDistinctRecipients
minimumReplyOccurences
timeDecayFactor
countExponent
distanceThreshold
minDecayedCountForPruning
minDecayedCountForPrediction
maxStoredMessages
maxStoredCustomResponses
maxRowsInPerRecipientTable
knowledgeStoreQueryLimit
maxReplyGapSecs
usageSpreadExponent
allowProfanity
compatibilityVersion
useNonNegativeClassesOnly
_isCustomResponsesEnabled
_allowProfanity
_useNonNegativeClassesOnly
_filterBatchSize
_minimumTimeIntervalSecs
_minimumDistinctRecipients
_minimumReplyOccurences
_timeDecayFactor
_countExponent
_distanceThreshold
_minDecayedCountForPruning
_minDecayedCountForPrediction
_maxStoredMessages
_maxStoredCustomResponses
_maxRowsInPerRecipientTable
_knowledgeStoreQueryLimit
_maxReplyGapSecs
_usageSpreadExponent
_compatibilityVersion
TB,R,N,V_isCustomResponsesEnabled
TQ,R,N,V_filterBatchSize
Td,R,N,V_minimumTimeIntervalSecs
TQ,R,N,V_minimumDistinctRecipients
TQ,R,N,V_minimumReplyOccurences
Td,R,N,V_timeDecayFactor
Td,R,N,V_countExponent
Td,R,N,V_distanceThreshold
Td,R,N,V_minDecayedCountForPruning
Td,R,N,V_minDecayedCountForPrediction
TQ,R,N,V_maxStoredMessages
TQ,R,N,V_maxStoredCustomResponses
TQ,R,N,V_maxRowsInPerRecipientTable
TQ,R,N,V_knowledgeStoreQueryLimit
Td,R,N,V_maxReplyGapSecs
Td,R,N,V_usageSpreadExponent
TB,R,N,V_allowProfanity
TQ,R,N,V_compatibilityVersion
TB,R,N,V_useNonNegativeClassesOnly
initWithCountLimit:
initWithBlock:idleTimeout:
result
_sharedCache
removeAllObjects
registerOnUpdateBlock:
_cacheKeyForLanguage:mode:plistPath:
initWithLanguage:mode:plistPath:
setObject:forKey:
dictionaryWithPlistAssetPath:
quickResponsesPrediction
quickResponses
_addModelAssetUpdateHandler
initWithLanguage:mode:dictionary:
configWithLanguage:mode:plistPath:
modelHyperparameters
preprocessingMethods
labels
replies
classificationParams
predictionParams
customResponsesParameters
language
mode
sessionDescriptor
_modelHyperparameters
_preprocessingMethods
_labels
_replies
_classificationParams
_predictionParams
_customResponsesParameters
_language
_mode
_sessionDescriptor
T@"SGModelHyperparameters",R,N,V_modelHyperparameters
T@"NSArray",R,N,V_preprocessingMethods
T@"NSArray",R,N,V_labels
T@"SGQuickResponsesReplies",R,N,V_replies
T@"SGQuickResponsesClassificationParameters",R,N,V_classificationParams
T@"SGQuickResponsesPredictionParameters",R,N,V_predictionParams
T@"SGCustomResponsesParameters",R,N,V_customResponsesParameters
T@"NSString",R,C,N,V_language
TQ,R,N,V_mode
T@"PMLSessionDescriptor",R,N,V_sessionDescriptor
lock
unlock
copy
null
dictionaryWithPlistFilename:
asset
filesystemPathForAssetDataRelativePath:
_assetWithName:andLoadBlock:
_invokeOnUpdateBlock
_reset
rules
mappings
metricsConfig
signatureRules
dpRecorderRules
nameDetectorRules
bundleForClass:
bundleWithIdentifier:
pathForResource:ofType:
initWithAssetTypeDescriptorPath:defaultBundlePath:matchingKeysAndValues:notificationQueue:logHandle:enableAssetUpdates:
registerUpdateHandler:
initWithInteger:
removeLastObject
reverseObjectEnumerator
setObject:atIndexedSubscript:
replyRecords
selected
displayed
matched
ucbCombinedForSelected:displayed:actualOptionsDisplayed:matched:imputedDisplayed:imputedOptionsDisplayed:explorationFactor:
initWithDouble:
isEqualToNumber:
position
compare:
ucbWithMean:varianceOfMean:explorationFactor:
ucbTunedVarianceForMean:displayed:totalDisplayed:
ucbCombinedWithMeanA:meanB:varianceA:varianceB:explorationFactor:
totalDisplayedCountForRecords:
imputedDisplayedForRecords:config:
initWithPosition:records:actualOptionsDisplayedCount:imputedOptionsDisplayedCount:imputedOptionsDisplayed:config:
sortUsingSelector:
totalDisplayed
totalSelected
totalUnmatched
sortedReplyOptionsForRecords:config:
_position
_ucb
T@"NSNumber",R,N,V_position
T@"NSNumber",R,N,V_ucb
initWithStore:withRng:
sharedInstance
sortedReplyPositionsForSemanticClass:config:
shuffledSamplingWithoutReplacementForK:fromN:withRng:
deduplicatedReplyTextsForReplyPositions:semanticClass:responseCount:config:
recordsForResponses:language:
augmentRecords:selectedPseudocounts:config:
shuffleMutableArray:inApproxEqualEpsilon:withValueBlock:withRng:
firstObject
containsObject:
addDisplayedToResponses:language:
addSelectedToResponse:language:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
addWrittenToResponse:language:isMatch:
initWithDisplayed:selected:matched:
totalOpportunities
totalMatched
initWithReplyRecords:totalOpportunities:totalDisplayed:totalSelected:totalMatched:totalUnmatched:
replyTextsForSemanticClass:responseCount:config:
registerDisplayedResponses:config:
registerSelectedResponse:config:
registerWrittenResponse:config:
_store
_rng
initWithMethods:
signatureWithObjCTypes:
mutableCopy
selectorForMethod:preprocessor:
applySelector:preprocesor:string:value:
initWithCapacity:
methodForSelector:
dictionaryWithObjects:forKeys:count:
isEqual:
isEqualToStringPreprocessingTransformer:
hash
withMethods:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
toPlistWithChunks:
initWithPlist:chunks:context:
transform:
transformBatch:
_methodNames
_methodValues
_methodSignatureNoValue
_methodSignatureWithValue
increaseLengthBy:
mutableBytes
initWithCharactersNoCopy:length:freeWhenDone:
bufferPtrWithMinimumLength:
replace:withBuffer:toIndex:
characterAtIndex:
characterSetWithRange:
rangeOfString:options:range:
characterSetFromString:
removeCharacters:withExceptions:fromString:
replaceCharactersInRange:withString:
invertedSet
punctuationCharacterSet
characterIsMember:
decimalDigitCharacterSet
letterCharacterSet
characterSetWithCharactersInString:
mergeAnyConsecutiveNonalphabeticCharactersWithExceptions:withValue:
getCharacters:range:
decomposeStringWithCompatibilityMapping:
removeNonBaseCharacters:
nonBaseCharacterSet
removeEmojiModifyingCharactersWithExceptions:withValue:
removeEmojisWithExceptions:withValue:
symbolCharacterSet
removeNonEmojiSymbolsWithExceptions:withValue:
componentsSeparatedByString:
initWithLanguage:
detectNames:algorithm:
range
insertString:atIndex:
appendString:
lowerCase:
separateCharacter:withValue:
separateFrenchElisions:
removeCharacters:withValue:
replaceCharactersWithSpaces:withValue:
removeNonASCII:
removePunctuation:
removeSpacingModifierLetters:
removeDuplicateWhitespace:
mergeNumbersSeparatedByASCIISpace:
replaceNumbersWithString:withValue:
mergeTwoOrMoreConsecutiveCharacters:
mergeAnyConsecutiveCharacters:
mergeAnyConsecutiveNonalphabeticCharacters:
replaceLinksWithString:withValue:
trimWhitespace:
removeNonBasicMultilingualPlane:
decomposeAndRecomposeStringWithCompatibilityMapping:
stripCombiningMarks:
stripNonBaseCharacters:
removeEmojiModifyingCharacters:
removeEmojis:
removeNonEmojiSymbols:
replaceAllWhitespaceWithSpaces:
removePunctuationWithExceptions:withValue:
removeSymbols:
removeSymbolsWithExceptions:withValue:
transformFullwidthToHalfwidth:
transformFullwidthToHalfwidthASCII:
transformHalfwidthToFullwidthCJK:
combineDakutenAndHandakuten:
replaceContactNamesWithString:withValue:
addToStart:withValue:
addToEnd:withValue:
_buffer
rangeOfString:
substringWithRange:
initWithTransformers:
setTransformers:
transformers
initWithClassNameKey:
writeToPlistWithObject:andChunks:
readObjectWithPlist:chunks:context:
isEqualToPipelineTransformer:
withTransformers:
transform:stopAfterTransformerWithIndex:
_transformers
T@"NSArray",&,V_transformers
initWithText:lang:replyTextId:styleGroupId:semanticClassId:modelId:categoryId:isCustomResponse:isConfident:proactiveTrigger:
initWithText:lang:replyTextId:styleGroupId:semanticClassId:modelId:categoryId:isCustomResponse:isConfident:
initWithProactiveTrigger:isConfident:
setIsConfident:
text
lang
replyTextId
styleGroupId
semanticClassId
modelId
categoryId
isCustomResponse
proactiveTrigger
isConfident
_isCustomResponse
_isConfident
_text
_lang
_replyTextId
_styleGroupId
_semanticClassId
_modelId
_categoryId
_proactiveTrigger
T@"NSString",R,C,N,V_text
T@"NSString",R,C,N,V_lang
TQ,R,N,V_replyTextId
TQ,R,N,V_styleGroupId
TQ,R,N,V_semanticClassId
TQ,R,N,V_modelId
TQ,R,N,V_categoryId
TB,R,N,V_isCustomResponse
T@"NSDictionary",R,N,V_proactiveTrigger
TB,R,N,V_isConfident
config
modelForLanguage:mode:chunkPath:plistPath:
initWithModel:ranking:personalization:rng:store:
detectLanguageFromText:
languageForLocaleIdentifier:
getMergedPromptForMessage:conversationTurns:maxPromptLength:maxPromptWindowSeconds:promptJoiningString:
languageForLocale:withLanguageDetectionForMessage:
initWithLanguage:chunkPath:plistPath:espressoBinFilePath:
quickResponsesForMessage:maximumResponses:conversationHistory:context:time:language:locale:recipients:
quickResponsesForMessage:maximumResponses:conversationHistory:context:time:language:locale:recipients:useContactNames:
instance
initWithText:senderID:timestamp:
addMessage:
_getMergedPromptForMessage:conversationTurns:
featuresOf:
predict:
subarrayWithRange:
numberWithDouble:
sortedWithUnweightedScores:config:
value
resultsForModelScores:responseCount:config:
replyTextsFromSemanticClasses:config:
quickResponsesFromReplyTextIds:isConfident:config:
addCustomResponsesToCommonResponses:language:locale:recipient:modelScores:maxResponses:customResponsesParams:
setObject:forKeyedSubscript:
randomizedReplyTextIdsForSemanticClass:responseCount:config:
replyTextIdsForSemanticClass:responseCount:config:
enumerateKeysAndObjectsUsingBlock:
next
shuffleMutableArray:withRng:
nearestCustomResponsesToPromptEmbedding:recipient:limit:withinRadius:responseCountExponent:minimumDecayedCount:compatibilityVersion:language:locale:allowProfanity:minimumTimeInterval:usageSpreadExponent:
arrayByAddingObjectsFromArray:
normalizeStringForDeduping:
bucketerWithMapping:
arrayWithObject:
dedupe:bucketer:resolver:
lowercaseString
configForLanguage:mode:plistPath:
stringsForQuickResponses:
clear
quickResponsesForMessage:context:time:maxResponses:locale:recipientHandles:chunkPath:plistPath:espressoBinFilePath:
quickResponsesForMessage:conversationTurns:maxResponses:localeIdentifier:recipientHandles:chunkPath:plistPath:espressoBinFilePath:useContactNames:
registerDisplayedQuickResponses:plistPath:
registerResponse:position:isCanned:isUsingQuickResponses:locale:plistPath:
_model
_ranking
_personalization
transformerInstanceForLanguage:mode:plistPath:
source
modelClass
vector
vectorWithConstantColumn
initWithSource:vector:
transformerInstanceForLanguage:mode:
featurizer
featuresOf:withFeaturizer:source:
labeler
labelOf:withLabeler:
sampler
shouldSampleForLabel:isDynamicLabel:
initWithEntity:type:mode:language:class:modelPath:plistPath:
classifierWithEspressoModelFile:
filesystemPathForFilename:
outputDimension
_transformerCacheKeyForLanguage:mode:plistPath:
_sharedInvalidKeysCache
_sharedTransformerCache
newTransformerInstanceForLanguage:mode:plistPath:
runWithLockAcquired:
initWithGuardedData:
initWithBlock:
featuresOf:inLanguage:andMode:
labelOf:inLanguage:
shouldSampleForLabel:inLanguage:isDynamicLabel:
setGlobalTransformerForTesting:
labelOf:
setTransformer:
_transformer
nextFloat
initWithPositiveRate:dynamicLabelRate:negativeRate:rng:
_positiveRate
_dynamicLabelRate
_negativeRate
initWithConfig:featurizer:source:labeler:sampler:
_config
_featurizer
_source
_labeler
_sampler
T@"SGQuickResponsesConfig",R,N,V_config
T@"<PMLTransformerProtocol>",R,N,V_featurizer
T@"SGModelSource",R,N,V_source
T@"<PMLTransformerProtocol>",R,N,V_labeler
T@"SGModelSampler",R,N,V_sampler
areModelsAvailableInLanguage:
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
initInDirectory:inMemory:withMigration:
initInDirectory:inMemory:withMigration:forTools:
closePermanently
initWithInitializer:destructor:
getObject
userInfo
frailReadTransaction:
destroyCachedObject
frailWriteTransaction:
keyWithLanguage:andResponse:
bindNamedParam:toNSString:
getInt64ForColumnName:table:
prepAndRunQuery:onPrep:onRow:onError:
bindNamedParam:toInt64:
data
bindNamedParam:toNSData:
bindNamedParam:toDouble:
getProfanityLocale
preferredLanguages
arrayWithObjects:count:
isProfane:inLocales:
substringToIndex:
substringFromIndex:
timeIntervalSinceReferenceDate
getInt64ForColumnAlias:
initWithNumbers:
resetDbIfNeededCompareWithCompatibilityVersion:
getNSStringForColumnAlias:
getDoubleForColumnAlias:
embeddingForPrompt:language:embedder:
tupleWithFirst:second:
getNSDataForColumnAlias:
initWithData:
sumInPlaceWithVector:
_incrementCustomResponseInDb:reply:language:embedding:sentAt:recipient:messagesRowId:onError:
getInt64ForColumn:
numberWithLongLong:
getModelVersion
setProfanityLocale:andModelVersion:
_addCustomResponseToDb:reply:language:embedding:sentAt:recipient:messagesRowId:onError:
initWithKey:ascending:
sortUsingDescriptors:
first
numberWithLong:
second
scaleInPlaceWithInversedFactor:
getPerRecipientCountForReply:language:recipient:
cosineDistanceFrom:
numberWithFloat:
sortUsingComparator:
scaleInPlaceWithFactor:
getIntegerForColumnAlias:
tokenize:
profanityInTokens:forLocaleIdentifier:
initWithLangResponse:displayed:selected:matched:
isInMemory
peekAtCachedObject
instanceInMemory
addingMessageExceedsBatchLimit:tableLimit:message:language:prompt:recipientHandle:sentAt:
recordKnownCustomResponsesInBatchWithEmbedder:compatibilityVersion:
designateFilteringBatch:
filterBatchWithMinimumDistinctRecipients:minimumReplyOccurences:
recordMessagesInBatchAsCustomResponsesWithEmbedder:compatibilityVersion:
calculateUsageSpreads
prunePerRecipientTableWithMaxRows:
decayAllCustomResponsesWithDecayFactor:filteringBatchSize:
countCustomResponsesAfterPruningWithMinimumCountThreshold:
countCustomResponsesAfterTruncatingTable:
deltaForResponsesOnRow:completion:
destroyInstanceInMemory
getUsageSpreadForReply:language:
_readerWriter
_replyRecords
_totalOpportunities
_totalDisplayed
_totalSelected
_totalMatched
_totalUnmatched
T@"NSArray",R,N,V_replyRecords
Td,R,N,V_totalOpportunities
Td,R,N,V_totalDisplayed
Td,R,N,V_totalSelected
Td,R,N,V_totalMatched
Td,R,N,V_totalUnmatched
langResponse
_langResponse
_displayed
_selected
_matched
T@"NSString",R,N,V_langResponse
Td,R,N,V_displayed
Td,R,N,V_selected
Td,R,N,V_matched
encodeObject:forKey:
encodeInt32:forKey:
decodeObjectOfClass:forKey:
decodeInt32ForKey:
isEqualToQuickResponsesEngagementDeltas:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
response
_response
T@"NSString",R,N,V_response
T@"NSString",R,N,V_lang
Ti,R,N,V_displayed
Ti,R,N,V_selected
Ti,R,N,V_matched
dealloc
_initializer
_destructor
_cachedObject
enumerateTokensInString:withRange:block:
rangeOfCharacterFromSet:options:range:
enumerateTokensInString:block:
lengthOfBytesUsingEncoding:
_lexiconTokenForToken:inLexicon:
exceptionWithName:reason:userInfo:
allValues
bucketerWithLabeledBuckets:
bucketerWithEqualityTest:
resolveByPairs:
resolveByScoreBreakTiesArbitrarily:
_initWithoutConnection
readEmojiDefaults
stringWithCapacity:
supportsSkinToneVariants
lastUsedVariantEmojiForEmoji:
string
_enumerateEmojiTokensInRange:block:
_baseStringForEmojiString:
_isCoupleMultiSkinToneEmoji:
copyWithSkinToneVariantSpecifier:
skinTone
copyWithSkinToneVariant:
senderID
isEqualToConversationTurn:
indexOfObjectWithOptions:passingTest:
removeObjectAtIndex:
date
timeIntervalSince1970
dateWithTimeIntervalSince1970:
timestamp
sortedArrayWithOptions:usingComparator:
timeIntervalSinceDate:
sgConversationTurnsForStrings:
conversationForSenderID:
_conversations
robustDecodeObjectOfClass:forKey:withCoder:expectNonNull:errorDomain:errorCode:logHandle:
error
copyWithZone:
T@"NSString",R,N
T@"NSDate",R,N
_senderID
_timestamp
T@"NSString",R,N,V_text
T@"NSString",R,N,V_senderID
T@"NSDate",R,N,V_timestamp
initWithLabelStrings:
objectAtIndex:
numberWithUnsignedLong:
convertLabelsToMapping:
initWithLabelMapping:
isEqualToStringLabelingTransformer:
withLabelStrings:
_labelMapping
initWithMethods:withLabelStrings:
_preprocessedLabelsWithLabels:andPreprocessor:
initWithPreprocessor:labeler:
isEqualToTextLabelTransformer:
withMethods:withLabelStrings:
_preprocessor
newTransformerInstanceForConfig:seed:useSeed:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:
initWithSessionDescriptor:modelClass:
featurizerWithMethods:bucketSize:characterNGramRange:tokenNGramRange:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:
initWithSeed:
newTransformerInstanceForLanguage:withDictionary:withSeed:forMode:
stringByReplacingOccurrencesOfString:withString:
currentLocale
dominantLanguageTagFromText:
defaultLanguage
dominantLanguageTagFromText:withMaxLength:withMaxTags:withMinimumCount:withMinimumAgreement:
dominantLanguageTagFromLanguageTags:
dominantLanguageTagFromLanguageTags:withMinimumCount:withMinimumAgreement:
languageTagsFromText:withMaxLength:withMaxTags:
countForObject:
initWithTagSchemes:options:
localizedLowercaseString
setString:
uppercaseLetterCharacterSet
tokenRangeForText:maxTruncatedLength:tagger:taggerOptions:prevTextTokenMaxRange:originalLengthShortfall:lowercaseText:lowercaseRange:
rangeOfCharacterFromSet:
tagAtIndex:unit:scheme:tokenRange:
enumerateTagsInRange:unit:scheme:options:usingBlock:
logMatchingForRange:lowercaseRange:text:lowercaseText:
dominantLanguageForString:
detectLanguageFromText:withMaxLength:withMaxTags:withMinimumCount:withMinimumAgreement:
detectLanguageFromLanguageTags:
detectLanguageFromLanguageTags:withMinimumCount:withMinimumAgreement:
stringByDeletingPathExtension
pathExtension
initWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
initWithReply:prompt:handle:sentAt:
reply
setReply:
prompt
setPrompt:
handle
setHandle:
sentAt
setSentAt:
_reply
_prompt
_handle
_sentAt
T@"NSString",&,N,V_reply
T@"NSString",&,N,V_prompt
T@"NSString",&,N,V_handle
T@"NSDate",&,N,V_sentAt
dictionary
knowledgeStore
intentClass
predicateForObjectsWithMetadataKey:inValues:
predicateWithFormat:
andPredicateWithSubpredicates:
intentsSourceID
predicateForEventsWithSourceID:bundleID:
appIntentsStream
sortDescriptorWithKey:ascending:
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
setDeviceIDs:
executeQuery:error:
isDoneIterating
startDate
interaction
intent
conversationIdentifier
content
handleFromConversationId:
direction
removeBreadcrumbsFromMessage:
initWithStartDate:maxBatchSize:maxReplyLength:maxReplyGap:
nextMessagePair
latestProcessedDate
_messageEvents
_messageEventCount
_messageEventIndex
_maxReplyGap
_done
_attachmentCharacterString
_breadcrumbCharacterString
_latestPromptForHandle
_latestProcessedDate
T@"NSDate",R,N,V_latestProcessedDate
setSessionDescriptor:
setModelClass:
_modelClass
T@"PMLSessionDescriptor",&,N,V_sessionDescriptor
T#,&,N,V_modelClass
_vector
shuffleMutableArray:inRange:withRng:
exchangeObjectAtIndex:withObjectAtIndex:
initWithSeparator:
componentsJoinedByString:
separator
isEqualToSGTokenJoiningTransformer:
withSeparator:
setSeparator:
_separator
T@"NSString",&,V_separator
initWithTransformer:appliedToInputKey:
setInputKey:
inputKey
transformer
isEqualToSGSelectiveTransformer:
withTransformer:appliedToInputKey:
_inputKey
T@"<PMLTransformerProtocol>",&,V_transformer
T@"NSString",&,V_inputKey
numResponsesForScores:responseCount:config:
classResultsForScores:numResponses:responseCount:config:
semanticClassesForResults:scores:numResponses:config:
indexesForScores:numResponses:
index
semanticClassesForCategory:responseCount:config:
modelScoresWithUnweightedScores:config:
categoryScoresWithModelScores:config:
average
maximum
initWithValue:index:
addScore:
validClassesForClassCount:responseCount:config:
responsesToFillForResponseCount:config:
probsForClasses:withCount:
_value
_index
Td,R,N,V_value
TQ,R,N,V_index
_modelCount
_average
_maximum
Td,R,N,V_average
Td,R,N,V_maximum
topDirectory
stringByAppendingPathComponent:
_openAnotherHandleForPath:
_openFreshHandleForPath:inMemory:
_performMigrationsWithPath:inMemory:attemptIteration:
_handleCorruptionWithCheck:path:inMemory:
corruptionMarkerPathForPath:
defaultManager
fileExistsAtPath:isDirectory:
truncateDatabaseAtPath:
removeItemAtPath:error:
localizedDescription
initWithMigrationObjects:
migrateDatabases
sqliteDatabaseInMemoryWithError:errorHandler:
initializeDatabase:withContentProtection:newDatabaseCreated:errorHandler:
sqliteDatabaseWithFilename:contentProtection:errorHandler:error:
databaseHandle
migrations
queriesToSkipFromEmptyToVersion:
T@"_PASSqliteDatabase",R,N,V_db
@24@0:8@16
Q32@0:8@16@24
@32@0:8@16@24
@16@0:8
{_NSRange=QQ}16@0:8
Q16@0:8
q16@0:8
v16@0:8
@"NSString"
{_NSRange="location"Q"length"Q}
d16@0:8
B16@0:8
@32@0:8@16Q24
@"NSArray"
B24@0:8@16
@"NSSet"
@40@0:8@16Q24@32
@"SGModelHyperparameters"
@"SGQuickResponsesReplies"
@"SGQuickResponsesClassificationParameters"
@"SGQuickResponsesPredictionParameters"
@"SGCustomResponsesParameters"
@"PMLSessionDescriptor"
v24@0:8@?16
@32@0:8@16@?24
v40@0:8@16@?24@?32
d40@0:8d16d24d32
d56@0:8d16d24d32d40d48
d72@0:8d16d24d32d40d48d56d64
d24@0:8@16
@64@0:8Q16@24d32d40@48@56
q24@0:8@16
@"NSNumber"
@48@0:8@16Q24Q32@40
@40@0:8@16@24@32
@40@0:8Q16Q24@32
@32@0:8Q16@24
v32@0:8@16@24
@"SGQuickResponsesStore"
@"_PASRng"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
:32@0:8@16@24
v48@0:8:16@24@32@40
@"NSMethodSignature"
^S24@0:8Q16
v40@0:8@16^S24Q32
v40@0:8@16@24@32
v24@0:8@16
@"NSMutableData"
@80@0:8@16@24Q32Q40Q48Q56Q64B72B76
@28@0:8@16B24
@88@0:8@16@24Q32Q40Q48Q56Q64B72B76@80
v20@0:8B16
@"NSDictionary"
@88@0:8@16@24@32Q40@48@56@64@72@80
@84@0:8@16@24Q32@40@48@56@64@72B80
v56@0:8@16@24B32B36@40@48
@56@0:8@16@24@32@40@48
@48@0:8@16@24@32@40
@80@0:8@16Q24@32@40@48@56@64@72
@84@0:8@16Q24@32@40@48@56@64@72B80
@36@0:8@16B24@28
@72@0:8@16@24@32@40@48Q56@64
@"SGQuickResponsesModel"
@"SGQuickResponsesRanking"
@"SGQuickResponsesPersonalization"
@40@0:8@16@24Q32
B36@0:8@16@24B32
@48@0:8@16Q24@32@40
B28@0:8@16B24
@72@0:8@16@24Q32@40#48@56@64
@"<PMLMultiLabelClassifierProtocol>"
@"SGQuickResponsesTransformerInstance"
@48@0:8d16d24d32@40
@"SGQuickResponsesConfig"
@"<PMLTransformerProtocol>"
@"SGModelSource"
@"SGModelSampler"
B32@0:8@16@24
@32@0:8@16B24B28
@36@0:8@16B24B28B32
B24@0:8@?16
v36@0:8@16@24B32
v80@0:8@16@24@32@40d48@56q64@?72
B72@0:8Q16Q24@32@40@48@56@64
@40@0:8@16@24@?32
v32@0:8@?16Q24
Q24@0:8Q16
v32@0:8Q16Q24
v32@0:8@16q24
B24@0:8Q16
v24@0:8Q16
@92@0:8@16@24Q32f40f44f48Q52@60@68B76d80f88
v32@0:8d16Q24
Q24@0:8d16
B32@0:8@?16@?24
d40@0:8@16@24@32
d32@0:8@16@24
@"_PASLock"
@64@0:8@16d24d32d40d48d56
@40@0:8d16d24d32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@36@0:8@16i24i28i32
i16@0:8
@32@0:8@?16@?24
v32@0:8@16@?24
v48@0:8@16{_NSRange=QQ}24@?40
I32@0:8@16^{_LXLexicon=}24
@40@0:8@16@?24@?32
@?24@0:8@?16
@56@0:8@16@24Q32d40@48
@"_PASLRUCache"
@24@0:8^{_NSZone=}16
B24@0:8@"<SGConversationTurnProtocol>"16
@"NSDate"16@0:8
@"NSDate"
@"SGStringPreprocessingTransformer"
@"SGStringLabelingTransformer"
@48@0:8@16@24Q32Q40
@96@0:8@16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64Q72Q80q88
@36@0:8@16Q24B32
@56@0:8@16Q24Q32Q40d48
@40@0:8@16Q24d32
@40@0:8@16Q24Q32
{_NSRange=QQ}88@0:8@16Q24@32Q40Q48Q56@64{_NSRange=QQ}72
v64@0:8{_NSRange=QQ}16{_NSRange=QQ}32@48@56
@48@0:8@16Q24Q32d40
@"NSMutableDictionary"
@32@0:8@16#24
v24@0:8#16
@"PMLSparseVector"
v48@0:8@16{_NSRange=QQ}24@40
v48@0:8@16d24@?32@40
@24@0:8Q16
@48@0:8@16@24Q32@40
Q40@0:8Q16Q24@32
Q32@0:8Q16@24
@32@0:8d16Q24
v24@0:8d16
@24@0:8^I16
@"_PASSqliteDatabase"16@0:8
@"NSDictionary"16@0:8
@"NSArray"24@0:8^I16
B32@0:8B16@20B28
B32@0:8@16B24i28
@"_PASSqliteDatabase"
