@(#)PROGRAM:FeedbackLogger  PROJECT:FeedbackLogger-1
com.apple.parsec.feedbackv2
FLUploadHeaders
com.apple.parsec-fbf.FLUploadImmediately
FLErrorDomain
FLCloseAllStores
FLCloseStore
v8@?0
%@-%@
bundleIdentifier
com.apple.feedbacklogger.write
completed successfully
failed
com.apple.feedbacklogger.write.data
created
processing
uploaded
disallowed
dropped
marked_for_purge_without_successful_upload
unknown
SELECT uploadId FROM fileUploads WHERE status=? ORDER BY rowid ASC;
SELECT uploadId FROM fileUploads ORDER BY rowid ASC;
SELECT uploadId FROM fileUploads WHERE (dateUploaded IS NOT NULL OR processedAttempts>3 OR dateCreated < strftime('%s',datetime('now', '-7 day')) OR status IN (3, 4, 5))
SELECT payload, dateCreated, uploadId FROM fileUploads WHERE dateCreated >= ? AND dateCreated <= ? ORDER BY dateCreated ASC;
UPDATE fileUploads SET status=? WHERE uploadId=?;
UPDATE fileUploads SET processedAttempts=processedAttempts+1 WHERE uploadId=?;
UPDATE fileUploads SET dateLastProcessed=strftime('%s',datetime('now')) WHERE uploadId=?;
UPDATE fileUploads SET dateUploaded=strftime('%s',datetime('now')) WHERE uploadId=?;
UPDATE fileUploads SET status=0 WHERE status=1;
UPDATE fileUploads SET status=5 WHERE uploadId IN (SELECT uploadId FROM fileUploads WHERE (dateUploaded IS NOT NULL OR processedAttempts>3 OR dateCreated < strftime('%s',datetime('now', '-7 day')) OR status IN (3, 4, 5))) AND status NOT IN (2, 3, 4);
DELETE FROM fileUploads WHERE uploadId IN (SELECT uploadId FROM fileUploads WHERE (dateUploaded IS NOT NULL OR processedAttempts>3 OR dateCreated < strftime('%s',datetime('now', '-7 day')) OR status IN (3, 4, 5)));
INSERT INTO fileUploads(uploadId, payload, timestampRefId, dateCreated) VALUES (?, ?, ?, ?);
SELECT payload, timestampRefId, status, processedAttempts, dateCreated, dateUploaded, dateLastProcessed FROM fileUploads WHERE uploadId=?;
SELECT uploadId, payload, timestampRefId, status, processedAttempts, dateCreated, dateUploaded, dateLastProcessed FROM fileUploads WHERE status=0;
DELETE FROM fileUploads WHERE uploadId=?;
DELETE FROM fileUploads;
open
closed
SELECT batchId FROM batchStatus WHERE status=? ORDER BY rowid ASC;
SELECT batchId FROM batchStatus ORDER BY rowid ASC;
SELECT batchId FROM batchStatus WHERE (dateUploaded IS NOT NULL OR processedAttempts>3 OR dateCreated < strftime('%s',datetime('now', '-7 day')) OR status IN (4, 5, 6))
SELECT r.payload, r.dateCreated, r.batchId FROM records r WHERE r.dateCreated >= ? AND r.dateCreated <= ? ORDER BY r.dateCreated ASC;
SELECT s.batchId, s.timestampRefId, COALESCE(sum(length(r.payload)), 0), s.status, s.processedAttempts, s.dateCreated, s.dateUploaded, s.dateLastProcessed, COUNT(DISTINCT(r.rowId)), first_value(r.payload) OVER (ORDER BY r.rowId) FROM batchStatus s LEFT JOIN records r ON s.batchId = r.batchId WHERE s.batchId=? group by s.batchId;
UPDATE batchStatus SET status=? WHERE batchId=?;
UPDATE batchStatus SET processedAttempts=processedAttempts+1 WHERE batchId=?;
UPDATE batchStatus SET dateLastProcessed=strftime('%s',datetime('now')) WHERE batchId=?;
UPDATE batchStatus SET dateUploaded=strftime('%s',datetime('now')) WHERE batchId=?;
data_version
INSERT INTO batchStatus(batchId, timestampRefId, dateCreated) VALUES (?, ?, ?);
SELECT batchId, dateCreated FROM batchStatus WHERE status=0 AND dateCreated < strftime('%s',datetime('now', '-16 minute'));
UPDATE batchStatus SET status=1 WHERE status=0 AND dateCreated < strftime('%s',datetime('now', '-16 minute'));
UPDATE batchStatus SET status=1 WHERE status=0;
UPDATE batchStatus SET status=1 WHERE status=0 AND batchId=?;
UPDATE batchStatus SET status=1 WHERE status=2;
UPDATE batchStatus SET status=6 WHERE batchId IN (SELECT batchId FROM batchStatus WHERE (dateUploaded IS NOT NULL OR processedAttempts>3 OR dateCreated < strftime('%s',datetime('now', '-7 day')) OR status IN (4, 5, 6))) AND status NOT IN (3, 4, 5);
DELETE FROM records WHERE batchId IN (SELECT batchId FROM batchStatus WHERE (dateUploaded IS NOT NULL OR processedAttempts>3 OR dateCreated < strftime('%s',datetime('now', '-7 day')) OR status IN (4, 5, 6))); DELETE FROM batchStatus WHERE batchId IN (SELECT batchId FROM batchStatus WHERE (dateUploaded IS NOT NULL OR processedAttempts>3 OR dateCreated < strftime('%s',datetime('now', '-7 day')) OR status IN (4, 5, 6)));
BEGIN TRANSACTION;
DELETE FROM records WHERE batchId=?;
DELETE FROM batchStatus WHERE batchId=?;
END TRANSACTION;
ROLLBACK;
DELETE FROM records;
DELETE FROM batchStatus;
PRAGMA user_version = %i;
B12@?0i8
PRAGMA journal_mode=WAL;
CREATE TABLE batchStatus(batchId TEXT NOT NULL PRIMARY KEY, timestampRefId TEXT NOT NULL, status INT DEFAULT 0, processedAttempts INT DEFAULT 0, dateCreated INT NOT NULL, dateUploaded INT DEFAULT NULL, dateLastProcessed INT DEFAULT NULL);CREATE TABLE records(batchId TEXT NOT NULL, payload BLOB, dateCreated INT NOT NULL, FOREIGN KEY (batchId) REFERENCES batchStatus(batchId));CREATE TABLE fileUploads(uploadId TEXT NOT NULL PRIMARY KEY, payload BLOB, timestampRefId TEXT NOT NULL, status INT DEFAULT 0, processedAttempts INT DEFAULT 0, dateCreated INT NOT NULL, dateUploaded INT DEFAULT NULL, dateLastProcessed INT DEFAULT NULL);
DROP TABLE IF EXISTS records; DROP TABLE IF EXISTS batchStatus;
CREATE TABLE fileUploads(uploadId TEXT NOT NULL PRIMARY KEY, payload BLOB, timestampRefId TEXT NOT NULL, status INT DEFAULT 0, processedAttempts INT DEFAULT 0, dateCreated INT NOT NULL, dateUploaded INT DEFAULT NULL, dateLastProcessed INT DEFAULT NULL);
user_version
page_size
page_count
PRAGMA max_page_count = %i;
SELECT payload FROM records WHERE batchId=?;
INSERT INTO records (batchId, payload, dateCreated) VALUES (?, ?, ?);
v32@?0@"NSString"8Q16^B24
PRAGMA %@;
PRAGMA foreign_keys=ON;
-wal
-shm
com.apple.parsecd
FLLogger
Signposts
com.apple.feedbacklogger
data.sqlite
SELECT MAX(ROWID) FROM records;
SELECT payload FROM records WHERE rowId=?;
v16@?0@"NSError"8
kern.bootsessionuuid
Received notification to close stores for %@
Purging persistent store cache after inactivity
Closing all stores
Received notification to close all stores, closing
Immediate upload requested. Requesting stores be closed.
Telling FBF to upload immediately.
Received persist request for store (%@) for %lu bytes
Persist request for store (%@) for %lu bytes %@
Registering new siri instrumentation observer
Removing siri instrumentation observer
Received persist data request for store (%@) for %lu bytes
Persist data request for store (%@) for %lu bytes %@
Can't getUploadIdsWithStatus, initializeConnection failed
getUploadIdsWithStatus failed
Can't getUploadIdsWithAllStatuses, initializeConnection failed
getUploadIdsWithAllStatuses failed
Can't getPurgableUploadIds, initializeConnection failed
getPurgableUploadIds failed
Can't getUploadIds, no statement
Can't getRecordsRangeStartDate:endDate, initializeConnection failed
getRecordsRangeStartDate:endDate dateCreated failed
getRecordsRangeStartDate:endDate uploadId failed
getRecordsRangeStartDate:endDate, failed
Failed to update status for upload %@
Failed to update status metadata for upload %@
Can't persistUploadPayload, initializeConnection failed
Failed to create SQLite iterate uploads statement
Successfully added file upload record
Database quota exceeded, using %llu out of %llu bytes, failing persist request
Failed to insert upload record %d
Can't getUploadRecordWithId, initializeConnection failed
Upload record has no creation date.
SQLite iterate uploads, failed: %d
Can't iterateUploadsWithCodeblock, initializeConnection failed
Can't deleteUploadWithIdentifier, initializeConnection failed
Failed to deleteUploadWithIdentifier, rolling back transaction
Failed to deleteUploadWithIdentifier
deleteUpload (%s) failed: %d
Can't deleteUpload (%s), statement prep failed
Can't deleteAllUploads, initializeConnection failed
Can't getBatchIdsWithStatus, initializeConnection failed
getBatchIdsWithStatus failed
Can't getBatchIdsWithAllStatuses, initializeConnection failed
getBatchIdsWithAllStatuses failed
Can't getPurgableBatchIds, initializeConnection failed
getPurgableBatchIds failed
Can't getBatchIds, no statement
getRecordsRangeStartDate:endDate batchId failed
Can't getBatchSize, initialization failed
Batch has no creation date.
getBatchMetadata failed
Failed to update status for batch with statement: %@
Failed to update status metadata for batch
Could not infer data_version, assuming 1
Couldn't close open batches, failing
Couldn't prepare batch initializer statement, failing
SQLite initialize new batch failed: %d
Found orphaned batch %@ created at %@
Failed to get orphaned batches
Force closing open batches
Failed to close batch with statement %@
Can't purgeBatch, initializeConnection failed
Can't purgeBatch, couldn't begin transaction
Failed to purgeBatch, rolling back transaction
purgeBatch (%s) failed: %d
Can't purgeBatch (%s), statement prep failed
Can't purgeAllBatches, initializeConnection failed
Schema updateVersion failed
db's schema version %d. required schema version %d.
could not recreate database for migration
migrating schema with: %s
Received unexpected schema version, failing migration
Could not infer schema_version, assuming 0
Couldn't infer page_size, failing request to set database size limit
Initialized SQLite persistent store manager for %@
Database is not yet initialized by client
Can't persist blob sizes(%lu) greater than maximum allowed(%llu)
Can't persist, initialization failed
Detected necessary rollover, but couldn't succeed, failing persist request
data persisted
database quota exceeded
persist request failed
SQLite insertion failed: %d
Failure detail: %s
SQLite open failed: %d
Opened SQLite store %@
Re-using already opened SQLite store %@
Batch exceeded maximum size, rolling over Id(%s)
Batch exceeded maximum allowed life time (%f), rolling over Id(%s).
Rolled over to new batch with Id(%s)
SQLite statement (%s) prep failed: %d
SQL statement failed - SQL:%s error-code: %d error-message: %s
Failed to execute (%@) in set, rolling back
SQLite iterate payload for batch (%s) failed: %d
SQLite payload blob iteration OOM
Could not infer PRAGMA %@
Closing and deleting database file
Couldn't remove existing database file to recreate new one: %@
Max ID calculation failed to prepare statement
Max ID calculation failed to run
Registering new insertion observer, starting max row: %lld
Informing observer about insertion at row: %lld
Row insertion observer failed
XPC connection to parsec-fbf invalidated
parsec-fbf remote object proxy failed with error %@
Waiting 2s for sqlite connections to close.
BatchMetadata
FLLogger
UploadManager
BatchManager
SchemaManager
FLSQLitePersistence
FLLoggingContext
NSObject
UploadRecord
FeedbackLogger
Observer
FeedbackLoggerDaemonXPC
FeedbackLoggerFBFClient
batchIdentifier
setBatchIdentifier:
timestampReferenceIdentifier
setTimestampReferenceIdentifier:
batchSize
setBatchSize:
batchStatus
setBatchStatus:
processedAttempts
setProcessedAttempts:
dateCreated
setDateCreated:
dateLastProcessed
setDateLastProcessed:
dateUploaded
setDateUploaded:
eventCount
setEventCount:
category
setCategory:
.cxx_destruct
_batchStatus
_batchIdentifier
_timestampReferenceIdentifier
_batchSize
_processedAttempts
_dateCreated
_dateLastProcessed
_dateUploaded
_eventCount
_category
T@"NSString",C,N,V_batchIdentifier
T@"NSString",C,N,V_timestampReferenceIdentifier
TQ,N,V_batchSize
Ti,N,V_batchStatus
TQ,N,V_processedAttempts
T@"NSDate",C,N,V_dateCreated
T@"NSDate",C,N,V_dateLastProcessed
T@"NSDate",C,N,V_dateUploaded
TQ,N,V_eventCount
T@"NSNumber",&,N,V_category
init
defaultCenter
closeAllStores
addObserver:selector:name:object:
closeStoreForApplicationFromNotification:
_closeAllStores
removeObserver:
_cancelStoreCacheTimer
context
queue
dealloc
initWithContext:
stringWithFormat:
persistentStores
objectForKeyedSubscript:
_resetStoreCacheTimer
initWithStoreId:loggingContext:
setObject:forKeyedSubscript:
fileManager
urlForStoreWithId:
URLByStandardizingPath
path
userInfo
objectForKey:
allKeys
countByEnumeratingWithState:objects:count:
hasPrefix:
closeOpenBatch
removeObjectForKey:
keyEnumerator
nextObject
currentBatchCreationDate
batchMaximumDuration
dateByAddingTimeInterval:
timeIntervalSinceNow
addObject:
distantFuture
date
earlierDate:
distantPast
_nextTimerFireDate
isEqualToDate:
_cleanPersistantStores
setPersistentStoreCacheTTLTimer:
persistentStoreCacheTTLTimer
allValues
forceCloseOpenBatches
removeAllObjects
userDefaults
mutableCopy
dictionary
setObject:forKey:
UTF8String
length
__dispatched_persistentStoreWithId:category:
persist:
parsecStoreId
data
parsecCategoryForPayload:
write:category:toStoreWithID:completion:
numberWithInt:
initWithData:
readSiriCategoryFrom:recursive:
siriStoreIdForBundleId:
categoryForSiriPayload:
siriReadingStoreForBundleID:
registerInsertionObserver:
persistUploadPayload:
report:application:onComplete:
sharedLogger
pathForStore:
setValue:forUploadHeaderNamed:
uploadHeaders
scheduleImmediateUpload
parsecPersistentStoreForBundleID:
reportParsecFeedback:completion:
siriWritingStoreForBundleID:category:
reportSiriInstrumentationEvent:forBundleID:completion:
registerSiriInstrumentationObserver:observer:
removeSiriInstrumentationObserver:
dataUploadStoreIdForApplicationIdentifier:
reportDataUploadEvent:application:completion:
report:application:
setPersistentStores:
setContext:
setLog:
persistentStoreCacheTTL
setPersistentStoreCacheTTL:
notificationCenter
setNotificationCenter:
_persistentStores
_context
_log
_persistentStoreCacheTTL
_persistentStoreCacheTTLTimer
_notificationCenter
T@"NSMutableDictionary",&,N,V_persistentStores
T@"NSObject<FLLoggingContext>",&,N,V_context
T@"NSObject<OS_os_log>",&,N,V_log
TQ,N,V_persistentStoreCacheTTL
T@"NSObject<OS_dispatch_source>",&,N,V_persistentStoreCacheTTLTimer
T@"NSDistributedNotificationCenter",&,N,V_notificationCenter
initializeConnectionForUseBy:
tryPrepare:preparedStatement:
_getUploadIdsHelper:
storeIdentifier
_updateMetadataHelperForUpload:query:
_updateStatusHelperForUpload:toStatus:
executeSQLStatement:
errorWithDomain:code:userInfo:
UUIDString
bytes
timeIntervalSince1970
getCurrentDatabaseSize
maxAllowedDatabaseSizeInBytes
setUploadIdentifier:
setPayload:
setUploadStatus:
__deleteStatementHelper:forUploadId:
executeInTransactionMultipleSQLStatements:
getUploadIdsWithStatus:
getUploadIdsWithAllStatuses
getPurgableUploadIds
getUploadsRangeStart:end:
updateStatusForUpload:toStatus:
recoverOrphanedProcessingUploads
markUploadsForPurge
doUploadHousekeeping
getUploadRecordWithId:
iterateUploadsWithCodeblock:
deleteUploadWithIdentifier:
deleteAllUploads
uploadStatusDescription:
_getBatchIdsHelper:
_updateMetadataHelperForBatch:query:
_updateStatusHelperForBatch:toStatus:
getIntValueForPragma:into:
UUID
setCurrentBatchIdentifier:
setCurrentBatchCreationDate:
setCurrentBatchPayloadSize:
closeOrphanedBatches
currentBatchIdentifier
executeSQLStatement:usingTransaction:
__purgeStatementHelper:forBatchId:
getBatchIdsWithStatus:
getBatchIdsWithAllStatuses
getPurgableBatchIds
getRecordsRangeStart:end:
getBatchMetadata:batchMetadata:
updateStatusForBatch:toStatus:
getDataVersion
initializeNewBatch
closeAllBatches
recoverOrphanedProcessingBatches
markBatchesforPurge
doBatchesHousekeeping
purgeBatch:
purgeAllBatches
batchStatusDescription:
isSchemaReady
updateSchema
getSchemaVersion
deleteDatabase
createDatabase
prepareSchema
setDatabaseSizeLimit
copy
tryRolloverBatchIfNecessary:
databasePath
currentBatchPayloadSize
maxBatchPayloadInBytes
open
enumerateObjectsUsingBlock:
dataWithBytes:length:
setDb:
removeItemAtPath:error:
stringByAppendingString:
iteratePayloadForBatch:codeblock:
insertRecordsStatement
setInsertRecordsStatement:
iteratePayloadStatement
setIteratePayloadStatement:
configured
setConfigured:
setMaxBatchPayloadInBytes:
setMaxAllowedDatabaseSizeInBytes:
setBatchMaximumDuration:
_configured
_databasePath
_insertRecordsStatement
_iteratePayloadStatement
_storeIdentifier
_maxBatchPayloadInBytes
_maxAllowedDatabaseSizeInBytes
_currentBatchIdentifier
_currentBatchCreationDate
_currentBatchPayloadSize
_batchMaximumDuration
T@"NSString",R,C,N,V_databasePath
T^{sqlite3=},N,V_db
T@"FLLoggingContext",&,N,V_context
T^{sqlite3_stmt=},N,V_insertRecordsStatement
T^{sqlite3_stmt=},N,V_iteratePayloadStatement
T@"NSString",R,C,N,V_storeIdentifier
TAB,N,V_configured
TQ,N,V_maxBatchPayloadInBytes
TQ,N,V_maxAllowedDatabaseSizeInBytes
T@"NSString",C,N,V_currentBatchIdentifier
T@"NSDate",C,N,V_currentBatchCreationDate
TQ,N,V_currentBatchPayloadSize
Td,N,V_batchMaximumDuration
defaultManager
initWithSuiteName:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
TQ,R,N
T@"NSString",R,C,N
T@"NSFileManager",R,N
T@"NSObject<OS_dispatch_queue>",R,N
T@"NSUserDefaults",R,N
initWithFileManager:
setFileManager:
_queue
_userDefaults
_fileManager
T@"NSFileManager",&,N,V_fileManager
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSUserDefaults",R,N,V_userDefaults
uploadIdentifier
payload
uploadStatus
_uploadStatus
_uploadIdentifier
_payload
T@"NSString",C,N,V_uploadIdentifier
T@"NSData",C,N,V_payload
Ti,N,V_uploadStatus
initWithUTF8String:
dateWithTimeIntervalSince1970:
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:isDirectory:
feedbackLoggerDirectoryURL
dictionaryWithObjects:forKeys:count:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
T@"NSURL",R,N
maxRowId
observeInsertionAtRow:observer:
initWithMachServiceName:options:
scheduleImmediateUploadWithHeaders:completion:
interfaceWithProtocol:
setRemoteObjectInterface:
setInvalidationHandler:
setExportedObject:
resume
localizedDescription
synchronousRemoteObjectProxyWithErrorHandler:
postNotificationName:object:
daemonConnection
setDaemonConnection:
setFbf:
_daemonConnection
_fbf
T@"NSXPCConnection",&,N,V_daemonConnection
T@"<FeedbackLoggerDaemonXPC>",&,N,V_fbf
T@"NSObject<OS_os_log>",R,N,V_log
@16@0:8
v24@0:8@16
Q16@0:8
v24@0:8Q16
i16@0:8
v20@0:8i16
v16@0:8
@"NSString"
@"NSDate"
@"NSNumber"
@28@0:8@16B24
@24@0:8@16
@32@0:8@16@24
v32@0:8@16@24
v48@0:8@16@24@32@?40
v32@0:8@16@?24
v40@0:8@16@24@?32
@32@0:8@16@?24
@"NSMutableDictionary"
@"NSObject<FLLoggingContext>"
@"NSObject<OS_os_log>"
@"NSObject<OS_dispatch_source>"
@"NSDistributedNotificationCenter"
@20@0:8i16
@24@0:8^{sqlite3_stmt=}16
@32@0:8q16q24
B28@0:8@16i24
B32@0:8@16r*24
B16@0:8
q16@0:8
B24@0:8@?16
B24@0:8@16
B32@0:8r*16@24
B32@0:8@16N^@24
B20@0:8i16
B24@0:8Q16
B32@0:8r*16N^^{sqlite3_stmt}24
B28@0:8r*16B24
B24@0:8r*16
B32@0:8@16@?24
B32@0:8@16N^i24
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3_stmt=}16@0:8
v24@0:8^{sqlite3_stmt=}16
v20@0:8B16
d16@0:8
v24@0:8d16
^{sqlite3=}
@"FLLoggingContext"
^{sqlite3_stmt=}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSFileManager"16@0:8
@"NSObject<OS_dispatch_queue>"16@0:8
@"NSUserDefaults"16@0:8
@"NSObject<OS_dispatch_queue>"
@"NSUserDefaults"
@"NSFileManager"
@"NSData"
@24@0:8@?16
v32@0:8q16@?24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
@"NSXPCConnection"
@"<FeedbackLoggerDaemonXPC>"
