UUUUUU
?UUUUUU
ffffff
@ffffff
@ffffff
MbP?
MbP?
@UUUUUU
(@h/
?UUUUUU
?UUUUUU
?UUUUUU
?UUUUUU
:44t4e5
UUUUUU
?UUUUUU
contentsCenter
?333333
MbP?
CUUUUUU
@ffffff
Mb`?
?Z*+
;?t%6
5@t%6?6L
@+0du
@Y>)F
ffffff
(\/@ffffff
MbP?
?UUUUUU
@es-8R
?^8U)zj
p?ffffff
Mbp?
Mb0?{
Mb@?
Xniu
Affffff
y?xwwwww
;Z*+@6L
K33s?
Q1~:7
DB33
;333
333@
tZ:Q
7;h=
.M;R
NAUU
@Q1~
?.AA
>xyzw
?ffffff
MbP?-C
]r2<
 9^;Q
vH7B
W4vC
9Y>)F$
ARGB
555Lyuv2svuy
800A800LABGR
AhGRAfGR
80AL
1555r46l
h00Lf00L61C2h0C2
r01lk01Rr03wa04w8a3b
)c|@
='F=<
{V>3+
CM4
X2Nd
lnw-L]7L
rKUT\
ofyxf
u<&`Pb
<ok`
sI1O_
VCids~
azpG|im
jmm>L\
Vk/I
K&cq
8*=Ks
vxxm
ovav*
kW]l
<Tmg
5TcI
qg}U
6v_{
'upMt
cS5v
_m`c
pFZk_
2rqpb6iH
Wj_U
;l}]
pq`#
z5SnH
WwGy
i^ztp
pydy
Zz6x
_Xr'sLZO
d8P~
DiP}A
h{+0&
\rO}
R~7|
5~m|
+_w/
Wn0[
}jxne
MwFQ
}iyq
&|\s
S}JrT8`RjguZDs
HWj\
bDA0|O
PuCM
:_H2
Nz(W9
p5wT
eHsi
gN[w
qc|G^l}GH
Akhv
|5Zd
nC0<
zt<>
IKH\o
~mKM
uNh=Zh
|BloS
]x;[
s5uyG
c>J{rw
Oa75v
pFx~j yU
WlH]
d\sY&
II;&
LHjvw
s|!
[3"Af
[|,yV
_25iO
d}R1>
U[q|
XsoX
VQZZrdn
sSSA
?p989
Ojb]
&M^\
ZYx6
>v0A
EDxh
m[>k
*v4?C
^8zG
|k)Q
PoSro
{ {nom
kV\h
q;hsu_
fUk{
aC'@
tvCF
oeBI<
{P]8
=aoM{f
veTD6* 
udSD6* 
ucSD6* 
tcRC6*
sbRC5)
raQB4)
p`PA4(
~n^N@3'
{k[L>1&
vgXI;/%
qbTF9-#
xj\OB5+!
|pcVI=2(
|rf[OC8.$
xpf\RG=2)!
~{vqjc[RH?6-$
vuutsrpnkgb\VOG?7/' 
edccba`^[XTOIC=6/(!
TSSRRQPNLIFB=82-'!
DDDCCBA@>;952.)$ 
666654431/-+($!
****))('&%#!

uX='
|eL5"
ueR>+
mljgaXL>/!
LKJHC=5+!
00/-+'"
\YO;"
?nil
array
backdrop-group
backdrop-layer
backdrop-state
basic-animation
chameleon-layer
compressed-image
context
distance-field-layer
emitter-behavior
emitter-cell
emitter-layer
emitter-state
filter
function
gradient-layer
group-animation
handle
image
image-provider
image-queue
interpolator
keyframe-animation
key-value
layer
layer-host
match-move-animation
mesh-transform
asynchronous-state
path
pattern
pixel-buffer
plugin-layer
portal-layer
portal-state
presentation-modifier
proxy
proxy-layer
replicator-layer
shape-image
shape-layer
shmem
spring-animation
string
surface
timing
transition
transition-animation
vector
~}|{zyxwutsrqponmljihgfedcba`_^\[ZYXWVUTSRQPONMLKJIHHGFEDCBA@?>==<;:9887654332100/.--,++*)(('&&%$$##"!!  

@
CM4
X2Nd
lnw-L]7L
rKUT\
ofyxf
u<&`Pb
<ok`
sI1O_
VCids~
azpG|im
jmm>L\
Vk/I
K&cq
8*=Ks
vxxm
ovav*
kW]l
<Tmg
5TcI
qg}U
6v_{
'upMt
cS5v
_m`c
pFZk_
2rqpb6iH
Wj_U
;l}]
pq`#
z5SnH
WwGy
i^ztp
pydy
Zz6x
_Xr'sLZO
d8P~
DiP}A
h{+0&
\rO}
R~7|
5~m|
+_w/
Wn0[
}jxne
MwFQ
}iyq
&|\s
S}JrT8`RjguZDs
HWj\
bDA0|O
PuCM
:_H2
Nz(W9
p5wT
eHsi
gN[w
qc|G^l}GH
Akhv
|5Zd
nC0<
zt<>
IKH\o
~mKM
uNh=Zh
|BloS
]x;[
s5uyG
c>J{rw
Oa75v
pFx~j yU
WlH]
d\sY&
II;&
LHjvw
s|!
[3"Af
[|,yV
_25iO
d}R1>
U[q|
XsoX
VQZZrdn
sSSA
?p989
Ojb]
&M^\
ZYx6
>v0A
EDxh
m[>k
*v4?C
^8zG
|k)Q
PoSro
{ {nom
kV\h
q;hsu_
fUk{
aC'@
tvCF
oeBI<
{P]8
=aoM{f
DDDD
lowp vec4 mixLin(lowp vec4 D, lowp vec4 S, lowp vec4 M) {
  D.rgb = D.rgb / max(D.a, .005);
  D.rgb = D.rgb*D.rgb;
  S.rgb = S.rgb / max(S.a, .005);
  S.rgb = S.rgb*S.rgb;
  lowp vec4 R = mix(D, S, M);
  R.rgb = sqrt(max(R.rgb, 0.))*R.a;
  return R;
lowp vec4 vibrantLightenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = 1. - dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorDodge(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  R.rgb += mix(S.aaa, D.rgb*S.a*S.a/max(S.a - S.rgb, .005),
               step(.005, S.a - S.rgb));
  R.a += D.a*S.a;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantDark(lowp vec4 s0, lowp vec4 d0) {
  return vibrantLightenSover(s0 * blend_color1,
                             vibrantColorDodge(s0 * blend_color0, d0));
lowp vec4 vibrantDarkReversed(lowp vec4 s0, lowp vec4 d0) {
  return vibrantColorDodge(s0 * blend_color0,
                           vibrantLightenSover(s0 * blend_color1, d0));
lowp vec4 vibrantDarkenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorBurn(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  lowp float dasa = D.a*S.a;
  R.rgb += step(.005, S.rgb)
           * (dasa - S.a*S.a*(D.a - D.rgb)/max(S.rgb, .005));
  R.a += dasa;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantLight(lowp vec4 s0, lowp vec4 d0) {
  return vibrantDarkenSover(s0 * blend_color1,
                            vibrantColorBurn(s0 * blend_color0, d0));
lowp vec4 vibrantLightReversed(lowp vec4 s0, lowp vec4 d0) {
  return vibrantColorBurn(s0 * blend_color0,
                          vibrantDarkenSover(s0 * blend_color1, d0));
lowp vec3 colorSort(lowp vec3 c) {
  lowp vec3 cs = (c.r > c.g) ? c : c.grb;
  cs = (cs.g > cs.b) ? cs : cs.rbg;
  cs = (cs.r > cs.g) ? cs : cs.grb;
  return cs;
lowp float lum(lowp vec3 c) {
  return dot(c, vec3(0.3, 0.59, 0.11));
lowp vec3 clipColor(lowp vec3 c) {
  lowp float l = lum(c);
  lowp vec3 cs = colorSort(c);
  c = cs.b < 0.0 ? l + (c - l) * (l / (l - cs.b)) : c;
  c = cs.r > 1.0 ? l + (c - l) * ((1.0 - l) / (cs.r - l)) : c;
  return c;
lowp vec3 setLum(lowp vec3 c, lowp float l) {
  lowp float d = l - lum(c);
  return clipColor(c + d);
lowp float sat(lowp vec3 c) {
  lowp vec3 cs = colorSort(c);
  return cs.r - cs.b;
lowp vec3 setSat(lowp vec3 c, lowp float s) {
  lowp vec3 cs = colorSort(c);
  lowp vec3 fmax = cs.r == c.r ? vec3(1.,0.,0.) :    cs.r == c.g ? vec3(0.,1.,0.) : vec3(0.,0.,1.);
  c = c - fmax * c;
  lowp vec3 fmid = cs.g == c.r ? vec3(1.,0.,0.) :    cs.g == c.g ? vec3(0.,1.,0.) : vec3(0.,0.,1.);
  c = cs.r > cs.b ? fmax * s + fmid * ((cs.g - cs.b) * s / (cs.r - cs.b)) :    vec3(0.0);
  return c;
lowp vec4 colorMatrix4x4Bias(lowp vec4 s) {
  s.rgb = s.rgb / max(s.a, .005);
  s = s.r * color_matrix[0] + s.g * color_matrix[1]
    + s.b * color_matrix[2] + s.a * color_matrix[3]
    + color_matrix[4];
  s.rgb = s.rgb * s.a;
  return s;
lowp vec4 colorMatrix4x4BiasDivideAlpha(lowp vec4 s) {
  s = vec4(s.rgb / s.a, 1.0);
  s = s.r * color_matrix[0] + s.g * color_matrix[1]
    + s.b * color_matrix[2] + color_matrix[3]
    + color_matrix[4];
  return s;
lowp vec4 perlinBias(lowp vec4 s, lowp float a) {
  s.rgb = s.rgb / (a * (s.a - s.rgb) + s.a);
  return s;
lowp vec4 vibrantLightenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = 1. - dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorDodge(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  R.rgb += mix(S.aaa, D.rgb*S.a*S.a/max(S.a - S.rgb, .005),
               step(.005, S.a - S.rgb));
  R.a += D.a*S.a;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantDark(lowp vec4 s0, lowp vec4 d0) {
  if (reversed != 0.0)
    return vibrantColorDodge(s0 * color_dodge,
                               vibrantLightenSover(s0 * color_lighten, d0));
  else
    return vibrantLightenSover(s0 * color_lighten,
                               vibrantColorDodge(s0 * color_dodge, d0));
lowp vec4 vibrantDarkenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorBurn(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  lowp float dasa = D.a*S.a;
  R.rgb += step(.005, S.rgb)
           * (dasa - S.a*S.a*(D.a - D.rgb)/max(S.rgb, .005));
  R.a += dasa;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantLight(lowp vec4 s0, lowp vec4 d0) {
  if (reversed != 0.0)
    return vibrantColorBurn(s0 * color_burn,
                              vibrantDarkenSover(s0 * color_darken, d0));
  else
    return vibrantDarkenSover(s0 * color_darken,
                              vibrantColorBurn(s0 * color_burn, d0));
lowp vec4 luminanceCurve(lowp vec4 s0, lowp vec4 p, lowp float a) {
  lowp float x = dot(s0.rgb, vec3(.2125, .7154, .0721));
  x = clamp((((p.x * x) + p.y) * x + p.z) * x + p.w, 0.0, 1.0);
  return vec4(mix (s0.rgb, vec3 (x, x, x), a), s0.a);
lowp vec4 colorCurves(lowp vec4 s) {
  lowp float inv_a = 1.0 / max(s.a, 0.005);
  s.rgb *= inv_a;
  lowp vec4 r = (((curves[0] * s) + curves[1]) * s + curves[2]) * s + curves[3];  r.a = clamp(r.a, 0., 1.);
  return vec4 (r.rgb * r.a, r.a);
lowp vec4 darkenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 lightenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = 1. - dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
    mediump float ll = dot(velocity, velocity);
    mediump float rl = inversesqrt(max(ll, 1e-4));
    lowp vec4 mv = vec4(velocity*rl*.5+.5, min(ll*rl*.004, 1.), 1.);
    gl_FragData[1] = mv * gl_FragData[0].a;
lowp vec4 squareImage(mediump vec2 uv) {
  mediump vec2 d, w, s;
  w = max(fwidth(uv), 1e-4);
  s = clamp((w * .5 + (1. - abs(uv))) / w, 0., 1.);
  mediump float l = s.x * s.y;
  return vec4(l);
lowp vec4 circleImage(mediump vec2 uv) {
  mediump vec2 dudv; mediump float d, w, s;
  d = max(dot(uv, uv), 1e-4);
  d = d * inversesqrt(d);
  dudv = max(fwidth(uv), 1e-4);
  w = max(dudv.x, dudv.y);
  mediump float l = clamp((w * .5 + (1. - d)) / w, 0., 1.);
  return vec4(l);
lowp vec4 supercircleImage(highp vec2 uv) {
  highp float d, w;
  uv = max(abs(uv) * 1.199 - vec2(0.199), 0.0);  d = pow(uv.x, 2.68) + pow(uv.y, 2.68);
  w = max(fwidth(d), 1e-4);
  mediump float l = clamp((w * .5 + (1. - d)) / w, 0., 1.);
  return vec4(l);
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump float e = (render_state.z - d)/fwidth(d);
  return vec4(clamp(e+.5, 0., 1.));
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump float e = (render_state.z - d)/render_state.y;
  e = clamp(e+.5, 0., 1.);
  return vec4((e * -2. + 3.) * e * e);
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump vec2 e = (render_state.zw - d)/fwidth(d);
  e = clamp(e+.5, 0., 1.);
  return vec4((1. - e.x) * e.y);
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump vec2 e = (render_state.zw - d)/render_state.y;
  e = clamp(e+.5, 0., 1.);
  e = (e * -2. + 3.) * e * e;
  return vec4((1. - e.x) * e.y);
lowp vec2 radialCoord(highp vec2 uv) {
  highp float t = dot(uv, uv) + 1e-6;
  return vec2(t * inversesqrt(t), .5);
lowp vec2 conicCoord(highp vec2 uv) {
  highp float t = atan(uv.y, uv.x) * -0.1591549431 + 0.5;
  return vec2(t, .5);
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
void main () {
  lowp vec4 q0, q1, q2, q3;
  mediump vec4 acc;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  acc = q0 * weight.x;
  acc = q1 * weight.y + acc;
  acc = q2 * weight.z + acc;
  acc = q3 * weight.w + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec3 weight;
varying highp vec2 texcoord0, texcoord1, texcoord2;
varying highp vec2 texcoord3, texcoord4, texcoord5;
void main () {
  lowp vec4 q0, q1, q2, q3, q4, q5;
  mediump vec4 acc;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  acc = (q2 + q3) * weight.x;
  acc = (q1 + q4) * weight.y + acc;
  acc = (q0 + q5) * weight.z + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform highp vec4 texmat0;
uniform highp vec2 axis;
varying highp vec2 texcoord0;
void main () {
  highp vec2 d = texcoord0;
  highp vec2 c = mix(d, floor(d), axis);
  highp float x = dot(floor(d) - d, axis) + 1.0;
  highp float y = 1.0 - x;
  highp vec4 xy = vec4(x, y, x, y);
  highp vec4 w = vec4(-0.29216512, -0.41086841, -0.41086841, -0.29216512);
  w = w*xy + vec4(1.02524562, 0.78286595, 0.78286595, 1.02524562);
  w = w*xy + vec4(-0.52422910, 1.04059357, 1.04059357, -0.52422910);
  w = w*xy + vec4(-0.20885140, -2.41189213, -2.41189213, -0.20885140);
  w = w*xy*xy + vec4(0.0, 1.0, 1.0, 0.0);
  mediump vec4 weight = w;
  highp vec2 p = c * texmat0.xy + texmat0.zw;
  highp vec2 pdelta = axis * texmat0.xy;
  lowp vec4 q0, q1, q2, q3;
  mediump vec4 acc;
  q0 = texture2DRect(texture0, p - 0.5*pdelta);
  q1 = texture2DRect(texture0, p + 0.5*pdelta);
  q2 = texture2DRect(texture0, p + 1.5*pdelta);
  q3 = texture2DRect(texture0, p + 2.5*pdelta);
  acc = q0 * weight.x;
  acc = q1 * weight.y + acc;
  acc = q2 * weight.z + acc;
  acc = q3 * weight.w + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6;
void main() {
  lowp vec4 q0, q1, q2, q3, q4, q5, q6;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  mediump vec4 acc;
  acc = q3 * weight.x;
  acc = q2 * weight.y + acc;
  acc = q4 * weight.y + acc;
  acc = q1 * weight.z + acc;
  acc = q5 * weight.z + acc;
  acc = q0 * weight.w + acc;
  acc = q6 * weight.w + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12;
void main() {
  lowp vec4 q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  q12 = texture2DRect(texture0, texcoord12);
  mediump vec4 acc;
  acc = q6 * weight[0].x;
  acc = q5 * weight[0].y + acc;
  acc = q7 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q8 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q9 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q10 * weight[1].x + acc;
  acc = q1 * weight[1].y + acc;
  acc = q11 * weight[1].y + acc;
  acc = q0 * weight[1].z + acc;
  acc = q12 * weight[1].z + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q5, q6, q7, q8;
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q4, q5, q6, q7, q8, q9;
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q3, q4, q5, q6, q7, q8, q9, q10;
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q2, q3, q4, q5, q6, q7, q8, q9, q10, q11;
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q11 * weight[1].x + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12;
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  q12 = texture2DRect(texture0, texcoord12);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q11 * weight[1].x + acc;
  acc = q1 * weight[1].y + acc;
  acc = q12 * weight[1].y + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  q12 = texture2DRect(texture0, texcoord12);
  q13 = texture2DRect(texture0, texcoord13);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q11 * weight[1].x + acc;
  acc = q1 * weight[1].y + acc;
  acc = q12 * weight[1].y + acc;
  acc = q0 * weight[1].z + acc;
  acc = q13 * weight[1].z + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
const int samples = MOTION_BLUR_SAMPLES;
uniform highp vec4 texmat0;
uniform lowp sampler2DRect texture0;
uniform lowp sampler2DRect texture1;
varying highp vec2 texcoord0_0;
varying lowp vec4 color0;
void main() {
  lowp vec4 mv = texture2DRect(texture1, texcoord0_0);
  mv.xyz /= max(mv.w, .005);
  if (!(mv.z > 0.)) {
    gl_FragData[0] = texture2DRect(texture0, texcoord0_0);
    return;
  highp vec2 v = 250. * mv.z * (2. * mv.xy - 1.) * texmat0.xy;
  highp vec2 texcoord_lo = texcoord0_0 - v * .5;
  mediump vec4 acc = vec4(0.);
  for (int i = 0; i < samples; i++)
    acc = texture2DRect(texture0, texcoord_lo + v * (float(i)/float(samples))) + acc;
  gl_FragData[0] = acc / float(samples) * color0;
uniform lowp sampler2DRect texture0;
uniform highp vec2 minmax;
uniform lowp vec4 bgcolor;
varying highp vec2 texcoord0_0;
varying lowp vec4 color0;
void main() {
  lowp vec4 p = texture2DRect(texture0, texcoord0_0);
  p = texcoord0_0.x < minmax.x || texcoord0_0.x > minmax.y ? bgcolor : p;
  gl_FragData[0] = p * color0;
uniform lowp sampler2DRect texture0;
uniform lowp sampler2D texture1;
uniform highp vec2 minmax;
uniform lowp vec4 bgcolor;
uniform highp vec4 map;
varying highp vec2 texcoord0_0;
varying lowp vec4 color0;
void main() {
  highp float t = dot(texcoord0_0, texcoord0_0);
  t = t * inversesqrt(t + 1e-6) * map.x + map.y;
  lowp vec4 p = texture2DRect(texture0, vec2(min(t, map.w), map.z));
  lowp vec3 n = texture2D(texture1, gl_FragCoord.xy * (1.0/32.0)).rgb;
  p.rgb += (n - .5) * 2.0/255.0 * p.a;
  p = t < minmax.x || t > minmax.y ? bgcolor : p;
  gl_FragData[0] = p * color0;
uniform lowp sampler2DRect texture0;
uniform lowp sampler2D texture1;
uniform highp vec4 minmax_dir;
uniform lowp vec4 bgcolor;
uniform highp vec4 map;
uniform highp vec4 args;
varying highp vec2 texcoord0_0;
varying lowp vec4 color0;
void main() {
  highp vec2 minmax = minmax_dir.xy;
  highp vec2 dir = minmax_dir.zw;
  highp float frag_l_sq = dot(texcoord0_0, texcoord0_0);
  highp float r = args.x;
  highp float r_sq = r * r;
  highp float r_sgn = args.y;
  highp float dir_l = args.z;
  highp float dir_l_sq = dir_l * dir_l;
  highp float t_denom = args.w;
  highp float par_l = dot(texcoord0_0, dir);
  highp float t;
  highp float in_b;
  if (map.w != 0.0) {
    t = (frag_l_sq - r_sq) / (2.0 * (r + par_l));
    in_b = step(minmax.x, t) - step(minmax.y, t);
    in_b *= step(-r_sgn * r, r_sgn * t);
  } else {
    highp float perp_l_sq = frag_l_sq - par_l * par_l;
    highp float d = frag_l_sq + dir_l_sq * (r_sq - perp_l_sq) +                    2.0 * par_l * dir_l * r;
    highp float d_m = step(0.0, d);
    highp float sqrt_d = sqrt(d * d_m);
    highp float b = par_l * dir_l + r;
    highp float t1 = (b - sqrt_d) * t_denom;
    highp float t2 = (b + sqrt_d) * t_denom;
    highp float t1_v = step(minmax.x, t1) - step(minmax.y, t1);
    highp float t2_v = step(minmax.x, t2) - step(minmax.y, t2);
    t1_v *= step(-r_sgn * r, r_sgn * t1);
    t2_v *= step(-r_sgn * r, r_sgn * t2);
    in_b = step(0.5, t1_v + t2_v) * d_m;
    t = mix(t1 * t1_v + t2 * t2_v, max(t1, t2), step(1.5, t1_v + t2_v));
  t = clamp(t, 0.0, 1.0) * map.x + map.y;
  lowp vec4 p = texture2DRect(texture0, vec2(t, map.z));
  lowp vec3 n = texture2D(texture1, gl_FragCoord.xy * (1.0/32.0)).rgb;
  p.rgb += (n - .5) * 2.0/255.0 * p.a;
  gl_FragData[0] = mix(bgcolor, p, in_b) * color0;
uniform lowp sampler2DRect texture0;
uniform lowp sampler2D texture1;
uniform highp vec4 map;
varying highp vec2 texcoord0_0;
varying lowp vec4 color0;
void main() {
  highp float t = atan(texcoord0_0.y, texcoord0_0.x) * -0.1591549431 + 0.5;
  t = t * map.x + map.y;
  lowp vec4 p = texture2DRect(texture0, vec2(min(t, map.w), map.z));
  lowp vec3 n = texture2D(texture1, gl_FragCoord.xy * (1.0/32.0)).rgb;
  p.rgb += (n - .5) * 2.0/255.0 * p.a;
  gl_FragData[0] = p * color0;
?uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
uniform highp vec2 offset[4];
void main () {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 + offset[0] * texmat0.xy;
  texcoord1 = t0 + offset[1] * texmat0.xy;
  texcoord2 = t0 + offset[2] * texmat0.xy;
  texcoord3 = t0 + offset[3] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2;
varying highp vec2 texcoord3, texcoord4, texcoord5;
uniform highp vec2 offset[3];
void main () {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[2] * texmat0.xy;
  texcoord1 = t0 - offset[1] * texmat0.xy;
  texcoord2 = t0 - offset[0] * texmat0.xy;
  texcoord3 = t0 + offset[0] * texmat0.xy;
  texcoord4 = t0 + offset[1] * texmat0.xy;
  texcoord5 = t0 + offset[2] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec2 axis;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0;
void main () {
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = vertex_texcoord0 - 0.5 * axis;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6;
uniform highp vec2 offset[3];
void main() {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[2] * texmat0.xy;
  texcoord1 = t0 - offset[1] * texmat0.xy;
  texcoord2 = t0 - offset[0] * texmat0.xy;
  texcoord3 = t0;
  texcoord4 = t0 + offset[0] * texmat0.xy;
  texcoord5 = t0 + offset[1] * texmat0.xy;
  texcoord6 = t0 + offset[2] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12;
uniform highp vec2 offset[6];
void main() {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[5] * texmat0.xy;
  texcoord1 = t0 - offset[4] * texmat0.xy;
  texcoord2 = t0 - offset[3] * texmat0.xy;
  texcoord3 = t0 - offset[2] * texmat0.xy;
  texcoord4 = t0 - offset[1] * texmat0.xy;
  texcoord5 = t0 - offset[0] * texmat0.xy;
  texcoord6 = t0;
  texcoord7 = t0 + offset[0] * texmat0.xy;
  texcoord8 = t0 + offset[1] * texmat0.xy;
  texcoord9 = t0 + offset[2] * texmat0.xy;
  texcoord10 = t0 + offset[3] * texmat0.xy;
  texcoord11 = t0 + offset[4] * texmat0.xy;
  texcoord12 = t0 + offset[5] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
uniform highp vec2 offset[7];
void main() {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[6] * texmat0.xy;
  texcoord1 = t0 - offset[5] * texmat0.xy;
  texcoord2 = t0 - offset[4] * texmat0.xy;
  texcoord3 = t0 - offset[3] * texmat0.xy;
  texcoord4 = t0 - offset[2] * texmat0.xy;
  texcoord5 = t0 - offset[1] * texmat0.xy;
  texcoord6 = t0 - offset[0] * texmat0.xy;
  texcoord7 = t0 + offset[0] * texmat0.xy;
  texcoord8 = t0 + offset[1] * texmat0.xy;
  texcoord9 = t0 + offset[2] * texmat0.xy;
  texcoord10 = t0 + offset[3] * texmat0.xy;
  texcoord11 = t0 + offset[4] * texmat0.xy;
  texcoord12 = t0 + offset[5] * texmat0.xy;
  texcoord13 = t0 + offset[6] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute highp float vertex_texcoord0;
attribute highp float vertex_point_size;
attribute lowp vec4 vertex_color;
varying lowp vec4 color0;
void main() {
  gl_Position = vertex_matrix * vertex_position;
  gl_PointSize = vertex_point_size;
  color0 = vertex_color;
SSSSSSSSSSSSSS
SSSSSSSSSSSSSS
actionForLayer:forKey:
displayLayer:
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
_layoutSublayersOfLayer:
animationDidStart:
animationDidStop:finished:
contents
opacity
zPosition
anchorPoint
anchorPointZ
motionBlurAmount
contentsScale
transform
sublayerTransform
contentsTransform
contentsRect
cornerContents
cornerContentsCenter
filters
backgroundFilters
compositingFilter
meshTransform
magnificationFilter
minificationFilter
minificationFilterBias
name
backgroundColor
cornerRadius
borderWidth
borderColor
isDoubleSided
contentsMultiplyColor
contentsSwizzle
hitTestsContentsAlphaChannel
shouldRasterize
preloadsCache
rasterizationPrefersDisplayCompositing
rasterizationScale
createsCompositingGroup
allowsEdgeAntialiasing
allowsGroupOpacity
allowsDisplayCompositing
allowsGroupBlending
wantsExtendedDynamicRangeContent
cornerContentsMasksEdges
allowsHitTesting
hitTestsAsOpaque
literalContentsCenter
contentsContainsSubtitles
continuousCorners
inheritsTiming
definesDisplayRegionOfInterest
shadowOpacity
shadowColor
shadowOffset
shadowRadius
shadowPath
invertsShadow
shadowPathIsBounds
(4AMYdoz
!)1:BJRZcks{
$*/5;AGMTZahov~
333333
@333333
@333333
?t)K
aqua
?black
blue
?fuchsia
?gray
?green
lime
maroon
navy
?olive
purple
?red
silver
?teal
?white
?yellow
size
sprite
radius
resize
redRange
single
strokeStart
name
sizeRequisition
endProgress
screen
none
resizeAspect
strokeColor
simpleAttractor
renderMode
screenBlendMode
scale
circle
rasterizationScale
surface
curves
oldestFirst
start
statisticsType
removedOnCompletion
oldestLast
birthRate
scaleRange
sharpness
opaque
cornerContents
nearest
commitTime
center
cornerContentsMasksEdges
cornerContentsCenter
coneAngle
contents
cube
borderColor
reactsToCollisions
bias
constraints
compositingFilter
continuousCorners
contentsCenter
contentsFrameMode
contentsRect
style
strokeEnd
sphere
redSpeed
conic
discrete
contentsFrameCount
endPoint
discretizesTime
dest
scrollMode
onOrderIn
rectangle
contentsContainsSubtitles
contentsFormat
rectangles
direction
onOrderOut
cubic
line
contentsScale
darkenSourceOver
darkenBlendMode
destIn
resizeAspectFill
directionLatitude
directionLongitude
startProgress
enabled
middle
linear
instanceRedOffset
fade
normalBlendMode
force
startPoint
mass
instanceGreenOffset
lanczos
startAngle
cornerRadius
instanceColor
lanczosResize
backdropRect
linearBurnBlendMode
instanceCount
statisticsInterval
lineJoin
margin
tensionValues
spot
transitionFlags
font
down
exclusionBlendMode
colors
transition
color
backToFront
coneEdgeSoftness
contentsDither
contentsFramesPerSecond
cullRect
clear
drawableProperties
timeStep
timeOffset
targetsSuperlayer
contentsAlignsToPixels
plane
translation
toValue
colorInvert
subtype
completionBlock
duration
earliestAutomaticCommitTime
colorHueRotate
colorOverLife
cheapColorDodge
colorContrast
planar
securityMode
clearsContext
radial
remoteInputMachTime
layoutDependents
outline
options
colorDodgeBlendMode
cumulative
disableActions
colorOverDistance
contentsTransform
contextId
byValue
ambient
seed
speed
sequential
behaviors
type
contentsOpaque
backgroundFilters
backgroundColorPhase
tileSize
backgroundColor
instanceBlueOffset
instanceAlphaOffset
subtractD
compressLuminance
foregroundColor
biasValues
maskedCorners
fontSize
additive
cuboid
shouldRasterize
mask
destAtop
instanceTransform
function
repeatCount
zPosition
position
contentsMultiplyColor
cullMinZ
luminance
filters
ignoresScreenClip
shadowOffset
forceFields
filter
anchorPoint
collisionInterval
anchorPointZ
locations
endAngle
updateInterval
random
destOut
xAcceleration
springs
fillMode
rotation
shadowColor
frameInterval
cheapAdditive
distanceField
fillColor
calculationMode
contentsSwizzle
fromLeft
rotationMode
massRange
needsDisplayOnBoundsChange
linearlySampledLinear
bleedAmount
zAcceleration
sourceLayer
contentsFramesPerRow
subtractBlendMode
sourceOut
sourceIn
sourceOver
cachesInputImage
frozen
wantsExtendedDynamicRangeContent
inputTime
sourcePoints
meteor
transform
inputValues
paced
colorBurnBlendMode
offset
overlayBlendMode
divideBlendMode
masksToBounds
cubicPaced
matchesPosition
roundsToInteger
levelsOfDetailBias
allowsFontSubpixelQuantization
colorBlendMode
inputGreenValues
inputColor
superlayer
bounds
rasterizationPrefersDisplayCompositing
cullMaxZ
keyTimes
inputColor1
sortsSublayers
autoreverses
motionBlurAmount
wrapped
minificationFilterBias
colorMonochrome
minificationFilter
inputColor0
miterLimit
actions
inputHardEdges
colorSaturate
timingFunctions
colorAdd
inputDither
shadowRadius
saturationBlendMode
needsLayoutOnGeometryChange
inputEndAngle
colorSubtract
timingFunction
zoom
cheapScreen
layoutManager
bottomLeft
vibrantDarkSourceOver
tracksLuma
moveIn
subtractS
delegate
topLeft
proxyProperties
inputFrontColor
appliesY
appliesX
attractor
attractorType
differenceBlendMode
right
inputBias
springScale
left
fromRight
scaleSpeed
drawingEnabled
sourceLayerRenderId
alphaRange
inputBlueValues
damping
hidden
definesDisplayRegionOfInterest
destOver
sourceContextId
contentsScaling
inputColorMatrix
inverseMeshed
presentationModifiers
drag
appliesRotation
inputBackColor1
disableUpdateMask
inputAngle
falloffDistance
repeatDuration
unordered
beginTime
inputBackColor0
meshTransform
linearDodgeBlendMode
allowsBackdropGroups
inputReversed
value
reveal
volume
levelsOfDetail
values
lineCap
wave
borderWidth
invertsContentsAreFlipped
greenRange
interpolations
inputAmount
vertical
rotationRange
luminanceCurveMap
multiplyColor
inputAddColor
luminanceToAlpha
groupName
fillRule
fromValue
colorMap
usesNormalizedCoordinates
valueOverLife
spin
softLightBlendMode
minimum
fromTop
lineDashPattern
vibrantDarkSourceOverReversed
stiffness
plusL
pluginType
inputFrontEnabled
emitterPosition
colorMatrix
inputHSVSpace
literalContentsCenter
emitterDuration
createsCompositingGroup
vibrantColorMatrixSourceOver
valueOverDistance
doubleSided
trilinear
lifetime
inputBounds
bottom
inputAspectRatio
vibrantDark
plusD
lightenBlendMode
light
inputColorMap
invertsShape
emitterZPosition
truncationMode
inputScale
emitterRects
origin
inputRedValues
inputNormalizeEdges
preservesFlip
blueRange
inputLinear
valueFunction
orientationRange
inputStartAngle
orientationLatitude
orientationLongitude
inputRadius
linearLightBlendMode
inputBackEnabled
sublayers
inputShadowBounds
multiplyBlendMode
inputShadowColor
topRight
vibrantColorMatrix
push
usesGlobalGroupNamespace
marginWidth
asg77
emitterMode
hueBlendMode
emitterSize
spinBias
opacity
reducesCaptureBitDepth
appliesScale
falloff
hardLightBlendMode
pluginId
emitterCells
continuityValues
beginTimeMode
contentsGravity
autoresizingMask
luminanceMap
hitTestsAsOpaque
pinLightBlendMode
emissionLongitude
string
fromBottom
cheapMaximum
blueSpeed
inputAlphaValues
allowsHitTesting
allowsEdgeAntialiasing
lineWidth
both
width
instanceDelay
keyPath
points
horizontal
hidesSourceLayer
sourceAtop
point
matchesTransform
spinRange
emitterShape
preloadsCache
luminosityBlendMode
minimumTimeStep
edgeAntialiasingMask
animations
homeAffordanceBase
justification
colorBrightness
array
animatesFromModelValues
alignToMotion
geometryFlipped
lifetimeRange
animationTimingFunction
shadowPathIsBounds
alignedCube
vibrantLight
vibrantLightSourceOver
sublayerTransform
inheritsTiming
animationDelegate
lineDashPhase
floating
particleType
lightenSourceOver
magnificationFilter
fontSmoothingStyle
animationDuration
justified
velocityRange
flipsHorizontalAxis
yAcceleration
allowsInPlaceFiltering
hitTestsContentsAlphaChannel
aligned
averageColor
appliesAlpha
path
ambientIntensity
emissionRange
axial
emissionLatitude
invertsShadow
inputIntermediateBitDepth
preservesDepth
canDrawConcurrently
copy
stoppedVelocity
flip
alphaSpeed
bottomRight
allowsDisplayCompositing
vibrantLightSourceOverReversed
drawsAsynchronously
frequency
pluginFlags
inheritsSecurity
allowsGroupBlending
windowServerAware
restLength
truncationString
greenSpeed
shadowOpacity
gaussianBlur
inputAddWhite
identity
attachmentPointB
pageCurl
emitterBehaviors
attachmentPointA
emitterPath
height
captureOnly
alignedFlip
diffuseIntensity
alignmentMode
inputQuality
multiply
maximumTileScale
inputOverlayOpacity
maximum
stoppedAngularVelocity
matchesOpacity
allowsGroupOpacity
horizontally
emitterDepth
rendersAsynchronously
velocity
shadowPath
lowLatency
angularDrag
pluginGravity
vertically
@(#)PROGRAM:QuartzCore  PROJECT:QuartzCore-815.6.1.4
CAIOSurfaceCreate: failed to allocate IOSurface (size: %u x %u, format: %c%c%c%c)
rowbytes_for_packed_format
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/utilities/CASurfaceUtil.mm
success
kCADetachReasonCodeOffscreen
kCADetachReasonCodeNonOpaque
kCADetachReasonCodeNonWhite
kCADetachReasonCodeNested
kCADetachReasonCodeHasRenderState
kCADetachReasonCodeNonScreenSpace
kCADetachReasonCodeZeroDeviceScale
kCADetachReasonCodeUsingClipPlanes
kCADetachReasonCodeNoHandle
kCADetachReasonCodeNonCanonicalLayer
kCADetachReasonCodeHasCenterGeometry
kCADetachReasonCodeHasMixCoords
kCADetachReasonCodeHasOuterEdgeSubFilter
kCADetachReasonCodeLayerFeatures
kCADetachReasonCodeNoDisplayCompositing
CADebug disabled detached
kCADetachReasonCodeNullSurface
kCADetachReasonCodeNonAffine
kCADetachReasonCodeRotation
kCADetachReasonCodeUnderBackdrop
kCADetachReasonCodeMismatchEDR
kCADetachReasonCodeNotClearAboveBlackBelow
kCADetachReasonCodeWindowServerRejected
kCADetachReasonCodeDisplayRejected
kCADetachReasonCodeRectClipped
%siosurface-%zu-%zu-%c%c%c%c-XXXXXX.plist
Writing surface to '%s'
IOSurfaceBulkAttachments
edrFactor
contentLightLevelInfo
maxFrameAverageLightLevel
maxContentLightLevel
masteringDisplayColorVolume
minDisplayMasteringLuminance
maxDisplayMasteringLuminance
whitePointY
whitePointX
displayPrimariesYR
displayPrimariesXR
displayPrimariesYB
displayPrimariesXB
displayPrimariesYG
displayPrimariesXG
chromaSubsampling
chromaLocationBottomField
chromaLocationTopField
transferFunctionIndex
colorPrimariesIndex
yCbCrMatrixIndex
fieldDetail
fieldCount
gammaLevel
pixelAspectRatio
verticalSpacing
horizontalSpacing
cleanAperture
verticalOffset
horizontalOffset
height
width
IOSurfaceData
CreationProperties
Undefined script value `%s'
null
bool
integer
real
NSArray
NSSet
NSDictionary
string
NSURL
CGPoint
CGSize
CGRect
CGAffineTransform
CATransform3D
CAPoint3D
CAColorMatrix
CGColor
CGImage
CGPath
CGPDFDocument
CGFont
unordered
oldestFirst
oldestLast
backToFront
additive
screen
maximum
cheapColorDodge
point
line
rectangle
cuboid
circle
sphere
path
rectangles
points
outline
surface
volume
sequential
emitterCells
T@"NSArray",C
lifetime
emitterPosition
T{CGPoint=dd}
emitterZPosition
emitterSize
T{CGSize=dd}
emitterDepth
emitterShape
T@"NSString",C
emitterMode
renderMode
preservesDepth
velocity
seed
emitterBehaviors
emitterPath
Tr^{CGPath=}
emitterRects
emitterDuration
spinBias
cullRect
T{CGRect={CGPoint=dd}{CGSize=dd}}
cullMinZ
cullMaxZ
updateInterval
CA_DISABLE_ASYNC
CA::CG::Queue
CATransform3DValue
T{CATransform3D=dddddddddddddddd},R
(interpolator (factor %g)
(o%d 
layer
T@"CALayer",R,N,V_layer
transition
T@"CAStateTransition",R,N,V_transition
beginTime
Td,R,N,V_beginTime
duration
Td,R,N,V_duration
speed
Tf,R,N,V_speed
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
CAStateControllerTransition
T@"CAStateControllerTransition",W,D
auto
YCbCr444LimitedRange
YCbCr422LimitedRange
YCbCr420LimitedRange
RGBLimitedRange
RGBFullRange
DolbyVision
DolbyVisionLowLatency
HDR10_444LimitedRange
HDR10_422LimitedRange
HDR10_420LimitedRange
HDR10_RGBFullRange
none
scaleContent
insetBounds
rot0
rot90
rot180
rot270
refreshRate
Dolby
HDR10
gamut_SRGB
gamut_P3
gamut_BT2020
availableModes
T@"NSArray",R,N
currentMode
T@"CADisplayMode",&,N
preferredMode
T@"CADisplayMode",R,N
colorMode
T@"NSString",C,N
allowsVirtualModes
bounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
safeBounds
name
T@"NSString",R,N
deviceName
displayId
TI,R,N
connectionSeed
uniqueId
containerId
supported
TB,R,N,GisSupported
Tq,R,N
processId
Ti,R,N
external
TB,R,N,GisExternal
Td,R,N
heartbeatRate
minimumFrameDuration
overscanned
TB,R,N,GisOverscanned
overscanAdjustment
overscanAmount
overscanAmounts
T{CGSize=dd},R,N
cloned
TB,R,N,GisCloned
cloningSupported
TB,R,N,GisCloningSupported
nativeOrientation
currentOrientation
odLUTVersion
supportsExtendedColors
TB,R,N
externalDisplayAttributes
T@"CADisplayAttributes",R,N
linkQuality
latency
Td,N
preferences
T@"CADisplayPreferences",C,N
productName
TQ,R,N
isVirtual
highBandwidth
TB,R,N,GisHighBandwidth
T@"NSString",R,C,N
preferredScale
hdrMode
colorGamut
internalRepresentation
<CADisplayMode %d x %d fmt:%s range:%s>
undefined
full
limited
<CADisplayMode %d x %d internal_panel (fixed)>
main-screen-scale
DeviceClassNumber
CoreAnimation: GetDisplayInfo returned 0x%x
allowedHDRModes
preferredHDRModes
supportedHDRModes
%p: cannot update immutable CADisplay
CADisplay
cannot change preferences on an immutable CADisplay
matchContent
TB,N
preferredHdrMode
_preferredHdrType
TB,D,N
T@"NSString",C,D,N
Failed to set display latency - missing UUID
cannot change properties on an immutable CADisplay
dolbyVision
Tq,R
pqEOTF
hdrStaticMetadataType1
bt2020YCC
legacyHDMIEDID
TB,R
<CADisplay:%@ %@>
TI,N
CoreAnimation: [CADisplay setAllowsVirtualModes] is deprecated!
CoreAnimation: [CADisplay allowsVirtualModes] is deprecated!
CoreAnimation: [CADisplay setColorMode:] is deprecated!
CoreAnimation: [CADisplay colorMode] is deprecated!
mode %@ is not valid for display %@
CAInvalidDisplayMode
-[CADisplay dealloc]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/windowserver/CADisplay.mm
DISPLAY (_impl)->is_readonly ()
Failed to register for CADisplay change notifications: 0x%x
com.apple.CoreAnimation.CAWindowServer.DisplayPower
Failed to register for CADisplay power notifications: 0x%x
v12@?0i8
CA::Display::display_queue
timestamp
targetTimestamp
paused
TB,N,GisPaused
frameInterval
Tq,N
preferredFramesPerSecond
%@: already added to runloop %p, cannot also be added to %p
CADisplayLink
resolution
display
T@"CADisplay",R,N
userInfo
T@,&,N
maximumRefreshRate
~Renderer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/cg/cg-renderer.cpp
!_ctx
{?=dddddd}
public.png
supportsSecureCoding
array
IOSurfaceYCbCrMatrixInt
IOSurfaceProperties
IOSurfaceInfo
dict
LKCGPathSegments
LKCGPathPoint2_y
LKCGPathPoint2_x
LKCGPathPoint1_y
LKCGPathPoint1_x
LKCGPathPoint0_y
LKCGPathPoint0_x
LKCGPathType
CGPatternImage
CGPatternColored
CGPatternTiling
CGPatternStep
CGPatternBounds
CGPatternMatrix
tiling
CGPatternType
data
CGColorPattern
kind
CoreAnimation: unable to encode NSValue of type %s
imageFormat
T@"NSString",C,V_imageFormat
imageEncodeOptions
T@"NSDictionary",C,V_imageEncodeOptions
skipHiddenLayers
TB,V_skipHiddenLayers
CAML: Failed to encode image: %s
assets/image%d.%@
CACodingUserInfo
CACodingSkipHiddenLayers
CACodingImageFormat
CACodingImageOptions
-[NSCoder(CACoderAdditions) CA_decodeObjectForKey:]
%s: ignoring exception %@
B24@?0#8:16
root
geometryFlipped
rootLayer
CAMLEncodeLayerTreeToPathWithOptions failed to create output dirs at %s
CAMLEncodeLayerTreeToPathWithOptions options must be a CFDictionary
main.caml
index.xml
CAMLEncodeLayerTreeToPathWithOptions failed to move %s to %s
rootDocument
%@/%s
%@/assets
%@/%@
(image [%d %d] [%d] %s
 (tint %.3g %.3g %.3g %.3g)
Failed to validate rowbytes: %zu, levels: %u height: %u
Failed to decode_data_async, size: %zu
Failed to decode shmem.
Failed to re-create data_size, encoded: %zu,calculated: %zu
Image failed to decode!
next
T@"CAStateControllerUndo",R,V_next
state
T@"CAState",&,N,V_state
elements
T@"NSMutableArray",&,N,V_elements
transitions
T@"NSMutableArray",&,N,V_transitions
CABackingStoreBeginUpdate_
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/utilities/CABackingStore.cpp
!b->update_ctx
CoreAnimation: triple buffered backing store %p
CA Whippet Drawable
CABackingStoreBeginUpdate
!CABackStoreIsUpdating_ (b)
levels == 1
CABackingStoreEndUpdate
CABackStoreIsUpdating_ (b)
Shape: %s
CABackingStore
 volatile
 (surface 0x%x [%d %d] %s%s)
 (buffer [%d %d] %s%s)
<CABackingStore %p
<CABackingStore %p>
CA_ACCEL_BACKING
non-
CoreAnimation: forcing %saccelerated backing
baseURL
T@"NSURL",&
delegate
T@"<CAMLParserDelegate>",W
error
T@"NSError",R
result
T@,R
Unable to load CAPackage from URL: %@
Error while parsing CoreAnimation XML document %@: %@
(currentTexture 
(blendedTextures
(chameleon-layer
(color %.3g %.3g %.3g %.3g)
CoreAnimation: copied CGImageRef %p - image size (%lu x %lu) exceeds max texture size
CoreAnimation: copied CGImageRef %p - mask size
CoreAnimation: copied CGImageRef %p - color matching
CoreAnimation: warning, CGImageProvider returned multiple blocks
CoreAnimation: copied CGImageRef %p - mipmap generation
CoreAnimation: copied CGImageRef %p - bad decode array
CoreAnimation: copied CGImageRef %p - bad mask
CoreAnimation: copied CGImageRef %p - bad mask image format (%d bpp, %d bpc)
CoreAnimation: copied CGImageRef %p - needs color matching
CoreAnimation: copied CGImageRef %p - RGB mask (bug!)
CoreAnimation: ignored CGImageRef %p - bad RGB 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - decode or mask
CoreAnimation: copied CGImageRef %p - bad RGB image format (%d bpp, %d bpc, %d info)
CoreAnimation: ignored CGImageRef %p - bad grayscale 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - bad grayscale image format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - non-RGB color model
CoreAnimation: copied CGImageRef %p - non-native format (%d)
CoreAnimation: copied CGImageRef %p - format not supported by hardware
CoreAnimation: data provider size invalid
CoreAnimation: data provider size is too small
CoreAnimation: copied CGImageRef %p - no data pointer
CoreAnimation: copied CGImageRef %p - bad image alignment
CoreAnimation: copied CGImageRef %p - bad row alignment
CoreAnimation: copied CGImageRef %p - bad alignment for IOSurface 0x%x
CG image cache at time %f:
mipmaps 
mask 
transient 
unmatched 
partial 
  %p deadline %f %s%s%s%s%s
multiplyColor
colorAdd
colorSubtract
colorMonochrome
colorMatrix
colorHueRotate
colorSaturate
colorBrightness
colorContrast
colorInvert
compressLuminance
meteor
homeAffordanceBase
luminanceToAlpha
bias
distanceField
gaussianBlur
luminanceMap
luminanceCurveMap
averageColor
lanczosResize
clear
copy
sourceOver
sourceIn
sourceOut
sourceAtop
destOver
destIn
destOut
destAtop
plusL
subtractS
subtractD
multiply
minimum
plusD
normalBlendMode
multiplyBlendMode
screenBlendMode
overlayBlendMode
darkenBlendMode
lightenBlendMode
colorDodgeBlendMode
colorBurnBlendMode
softLightBlendMode
hardLightBlendMode
differenceBlendMode
exclusionBlendMode
subtractBlendMode
divideBlendMode
linearBurnBlendMode
linearDodgeBlendMode
linearLightBlendMode
pinLightBlendMode
hueBlendMode
saturationBlendMode
colorBlendMode
luminosityBlendMode
pageCurl
vibrantDark
vibrantLight
vibrantColorMatrix
darkenSourceOver
lightenSourceOver
inputAddWhite
inputAlphaValues
inputAmount
inputAngle
inputAspectRatio
inputBackColor0
inputBackColor1
inputBackEnabled
inputBias
inputBlueValues
inputBounds
inputColor
inputColor0
inputColor1
inputColorMap
inputColorMatrix
inputDither
inputEndAngle
inputFrontColor
inputFrontEnabled
inputGreenValues
inputHSVSpace
inputHardEdges
inputIntermediateBitDepth
inputLinear
inputNormalizeEdges
inputOverlayOpacity
inputQuality
inputRadius
inputRedValues
inputReversed
inputScale
inputShadowBounds
inputShadowColor
inputStartAngle
inputTime
inputValues
T@"NSString",R
enabled
TB,GisEnabled
cachesInputImage
accessibility
TB,GisAccessibility
filter
CAFilterInputs
CAFilterEnabled
CAFilterName
CAFilterType
CAFilter requires `filter' attribute
T@"NSString",C,N,V_name
basedOn
T@"NSString",C,V_basedOn
TB,GisEnabled,V_enabled
T@"NSArray",C,N
nextDelay
Td,V_nextDelay
previousDelay
Td,V_previousDelay
locked
TB,N,GisLocked,V_locked
initial
TB,GisInitial,V_initial
 initial
 locked
{%@:%p %@ basedOn %@ %@%s%s}
average
vertexCount
faceCount
depthNormalization
subdivisionSteps
Ti,R
replicatesEdges
meshData
[%@] [%@] f 
[%@] [%@] v 
Invalid mesh operator: %c
Invalid number of arguments to 'f' mesh operator
Invalid number of arguments to 'v' mesh operator
Invalid number of numeric values in mesh
%@: trying to remove non-existent face %ld
CAMeshTransform
%@: trying to replace non-existent face %ld
%@: trying to remove non-existent vertex %ld
%@: trying to replace non-existent vertex %ld
Unsupported image format '%s' for default colorspace
ARGB8888
BGRA8888
XRGB8888
BGRX8888
XRGB1555
BGRX5551
CbYCrY8
YCbYCr8
RGBA8
RGBX8
RGBAh
RGBAf
ABGR8
XBGR8
RGBXh
RGBA5
RGBA16
RGBX16
LA16
BGR10A2
RGB10
RGB10_XR
ARGB10_XR
RGB10A8_2P_XR
CoreAnimation: rendering error %s
(replicatorLayer %d)
rotateX
rotateY
rotateZ
scaleX
scaleY
scaleZ
scaleXY
scaleXYZ
translate
translateX
translateY
translateZ
CAValueFunctionName
Unknown function: %@
linear
easeIn
easeOut
easeInEaseOut
default
(%g %g; %g %g)
no timing function control point with index: %d
CAMediaTimingFunctionInvalidControlPoint
index
unknown timing function name: %@
CAMediaTimingFunctionInvalid
CAMediaTimingFunction
Ignoring trailing characters
Unknown timing function: %@
No timing function data
(shmem %lu bytes)
CoreAnimation: mach_make_memory_entry_64 (size %llu, addr 0x%llx, prot 0x%x, port %u) = 0x%x
CoreAnimation: failed to allocate %ld bytes
Data %p with size %zu underflow
CoreAnimation: failed to query region %p (%zu bytes)
Shmem port is MACH_PORT_NULL!
Failed to decode shmem from data ptr: %p, len: %zu
Failed to decode shmem data
Invalid bitmap: [%u x %u], %u levels
Layer backing store allocation too large size:%ld width:%d height:%d levels:%d
Bogus ShmemBitmap : [%u x %u], %u levels
%a %b %e %H:%M:%S %Z %Y
** Log started %s **
X_LOG_FILE_OPEN
open '%s'
 command: %s
stdout
stderr
X_LOG_TRUNCATE
Unable to open log file for writing: %s
QUARTZCORE_LOG_FILE
X_LOG_FILE
CADebug
Metal
OpenGL
Render
States
Utilities
WindowServer
exported [%d %d] buffer to %s
T@"NSString",C,N,V_key
{%@:%p %@:%p %@}
animations.%@
transform-
(%slayer [%.10g %.10g %.10g] [%.10g %.10g %.10g %.10g] [%g %g %g]
[%d pass%s
(name 
(hidden true)
(masksToBounds true)
(geometryFlipped true)
 left
 right
 bottom
 top
 none
(edgeAntialiasingMask%s%s%s%s%s)
 display
 snapshot
 unprotected
 inhibit-cloning 
(disableUpdateMask%s%s%s%s%s)
(contentsGravity %s)
(contentsOpaque true)
(contentsDither false)
(contentsAlignsToPixels true)
(contentsMultiplyColor %.3g %.3g %.3g %.3g)
(contentsSwizzle %s)
(motionBlurAmount %g)
transform
sublayerTransform
(doubleSided false)
(sortsSublayers false)
(flipsHorizontalAxis true)
(opacity %g)
(cornerRadius %g)
(backgroundColor 
(backgroundColor (%.3g %.3g %.3g %.0g))
(borderWidth %g)
(borderColor 
(borderColor (%.3g %.3g %.3g %.0g))
(cornerContents 
(continuousCorners true)
(cornerContentsMasksEdges true)
 minX-minY
 maxX-minY
 minX-maxY
 maxX-maxY
(maskedCorners%s%s%s%s%s)
backingStore 
(contents %s
(contentsScaling repeat)
(magnificationFilter %s)
(minificationFilter %s)
(lodBias %g)
(inheritsTiming false)
(definesDisplayRegionOfInterest true)
(contentsContainsSubtitles true)
contentsTransform
(contentsRect 
(contentsCenter 
(cornerContentsCenter 
(literalContentsCenter true)
(contentsScale %g)
(shouldRasterize true)
(rasterizationPrefersDisplayCompositing true)
(rasterizationScale %g)
(preloadsCache true)
(createsCompositingGroup true)
(allowsDisplayCompositing true)
(allowsEdgeAntialiasing true)
(wantsExtendedDynamicRangeContent true)
(allowsGroupOpacity true)
(allowsGroupBlending false)
(allowsHitTesting false)
(hitTestsContentsAlphaChannel true)
(hitTestsAsOpaque true)
(securityMode unrestricted)
(securityMode insecure)
(shadowColor (%.3g %.3g %.3g %.0g))
(shadowOpacity %g)
(shadowRadius %g)
(shadowOffset [%g %g])
(shadowPath 
(invertsShadow true)
(shadowPathIsBounds true)
(mask 
(sublayers 
(filters 
(backgroundFilters 
(compositingFilter 
(meshTransform 
(animations 
(modifiers 
(subclass 
AAAA
 (group-flags [
%s%s
compositing-filters
bg-filters
blend-modes
filters
sover
rasterize
cache
mesh
emitter
 (offscreen-flags [
shadow
pattern
tiled-image
backdrop-copy
blending
mask
group
scaling
plugin
motion-blur
dest-copy
asynchronous
%s - meshTransform = %p
emit_glyphs
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/ogl/ogl-glyph-cache.cpp
_buffer_end <= _buffer->size
(filter %s
(inputs 
(%s 
set_swizzle
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/ogl/ogl-layer.cpp
swizzle == Render::kLayerContentsSwizzleAAAA
[CA] Surface ID:0x%x detach result: %s
render_contents_background
!(l->node->flags & Render::kLayerNodeIgnoreContents)
vibrantLightSourceOverReversed
vibrantDarkSourceOverReversed
vibrantLightSourceOver
vibrantDarkSourceOver
vibrantColorMatrixSourceOver
uncollectable
disableFade
onlyIfNull
removeImmediately
levelsOfDetail
levelsOfDetailBias
tileSize
CATiledLayerFlags
contents
contentsAreFlipped
fillColor
T^{CGColor=}
maximumTileScale
drawingEnabled
TB,GisDrawingEnabled
T@"<CATiledLayerDelegate><CALayerDelegate>",W
CoreAnimation: failed to add monotonic cube ((%g, %g) (%g, %g) (%g, %g) (%g, %g))
Basic
Blurs
PerfStates
Glitches
Frame Duration
render_for_time
Display EDR
Render EDR
Display nits
Luma boost
Offscreen Passes
Dirty Area
Frame Delay
Update
SwapID
Backdrop Count
Blur Count
Emitter Count
Particle Count
CPU Freq
GPU Freq
SoC Freq
DRAM Freq
Battery Drain
CPU Power
GPU Power
SoC Power
DRAM Power
Detected Glitch
v16@?0^{pstate_monitor=}8
/usr/local/lib/libpstatemonitor.dylib
pstate_monitor_connect
pstate_monitor_destroy
pstate_monitor_get_CPU_pstate
pstate_monitor_get_GPU_pstate
pstate_monitor_get_SOC_pstate
pstate_monitor_get_DRAM_pstate
pstate_monitor_get_CPU_watts
pstate_monitor_get_GPU_watts
pstate_monitor_get_SOC_watts
pstate_monitor_get_DRAM_watts
pstate_monitor_get_BatteryDrain_watts
apple-internal-install
CoreAnimation: surface %d x %d is too large
CoreAnimation: %d by %d image is too large for GPU, ignoring
CoreAnimation: image stride is too large for GPU, ignoring
CoreAnimation: unsupported graphics hardware
; need three or more texture units
CA_DISABLE_WORKAROUNDS
CA_MAX_TEXTURE_UNITS
GL_APPLE_fence
GL_APPLE_texture_filter_cubic
GL_APPLE_texture_ycbcr_basic_formats
GL_APPLE_texture_ycbcr_extended_formats
GL_APPLE_texture_xr
GL_APPLE_tile_order_rot
GL_EXT_shader_framebuffer_fetch
GL_EXT_texture_filter_anisotropic
GL_EXT_texture_lod_bias
GL_OES_standard_derivatives
GL_OES_texture_half_float
GL_OES_texture_half_float_linear
GL_OES_texture_float
GL_OES_texture_float_linear
GL_IMG_texture_compression_pvrtc
GL_KHR_texture_compression_astc_ldr
CoreAnimation: maximum %d texture units
CoreAnimation: maximum texture %d pixels
#define NOISE_SIZE %d
pop_surface
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/ogl/ogl-context.cpp
_current_surface != 0
TMPDIR
/tmp
%s/ca-image-%03d-%s-%d.%s
error: failed to export [%d %d] buffer to %s
[%u]
, memoryless
 s:[%u x %u (%.2lf %s)] b:[%u x %u (%.2lf %s)] need-clear:%d%s, id:%p
 s:framebuffer
push_surface
_current_surface != surf
copy_surface
!_gstate
0x%x
~Context
CA_DISABLE_COLOR_MATCHING
CADisableColorMatching
dest
surf
(shape-layer
(fillColor %.3g %.3g %.3g %.3g)
(strokeColor 
(strokeColor %.3g %.3g %.3g %.3g)
(strokeStart %g)
(strokeEnd %g)
(miterLimit %g)
(dashPhase %g)
(dashPattern 
(fillRule evenOdd)
round
bevel
(lineJoin %s)
square
(lineCap %s)
start
middle
natural
left
right
center
justified
T@,C
font
Tr^v
fontSize
foregroundColor
wrapped
TB,GisWrapped
truncationMode
alignmentMode
allowsFontSubpixelQuantization
NSGraphicsContext
UIApplication
NSFont
Helvetica
truncationString
truncated
TB,R,GisTruncated
states
T@"NSArray",C,D
stateTransitions
vertically
horizontally
scrollMode
visibleRect
T{CGRect={CGPoint=dd}{CGSize=dd}},R
  name 0x%lx = object 0x%lx 
CA Image Slot
Unattached contexts:
  %x: pid %d [%s]
 (requested headroom: %f)
 (client-annotation: %s)
; colorspace "
== context %x%s%s%s; pid %d [%s] %sat time %f ==
Context %x (pid %d [%s]):
  slot %u:
secure
displayable
ignoresHitTest
enablePixelQuadrupling
enablePixelDoubling
disableEdgeAA
disableGroupOpacity
will_commit
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/render/render-context.cpp
!_locked_host_ctx || _locked_host_ctx == host_ctx
siblingId
above
CoreAnimation: missing mask layer 0x%lx
CoreAnimation: missing sublayer %p
fromState
T@"NSString",C,N,V_fromState
toState
T@"NSString",C,N,V_toState
T@"NSArray",C,N,V_elements
<CAStateTransition fromState=%@ toState=%@ %@>
pageUnCurl
<unknown>
(%s)
(%s [%g %g %g %g; %g %g %g %g; %g %g %g %g; %g %g %g %g])
(%s [%g %g %g %g %g %g])
** Render objects at time %f **
%20s %s
TYPE
COUNT
%20s %d
com.apple.CoreAnimation.CAWindowServer.DisplayChanged
isUnsafe
colorRange
pixelFormat
Unspecified
InternalPanel
LLDoVi
DoVi
YCbCr420
YCbCr422
YCbCr444
RGB_Calibrated
HDR10_YCbCr444
HDR10_YCbCr422
HDR10_YCbCr420
HDR10_RGB
HDR10_RGBCalibrated
DolbyVision_LowLatency
preferredHdrType
CADisplayPreferences
LK_BENCHMARK
preferred_mode_with_criteria: resolution [%g x %g], target hdr (%s), user hdr (%s), rate (%g) --> %dx%d@%g %s
CoreAnimation: LayerHost trying to host itself or one of its ancestors (context id %d)
(layer-host %x
(inherits-security true)
CoreAnimation: context hosting changed while locked!
removed
frozen
extended
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/ogl/ogl-debug-renderer.cpp
add_vertex
_vertices_cur < _vertices_end
sprite
plane
single
random
lifetimeRange
emissionLatitude
emissionLongitude
emissionRange
velocityRange
xAcceleration
yAcceleration
zAcceleration
scaleRange
spinRange
color
redRange
greenRange
blueRange
alphaRange
redSpeed
greenSpeed
blueSpeed
alphaSpeed
T@,&
contentsRect
contentsScale
minificationFilter
magnificationFilter
minificationFilterBias
style
T@"NSDictionary",C
timeOffset
autoreverses
fillMode
<%@:%p; 
particleType
orientationLatitude
orientationLongitude
orientationRange
rotationRange
massRange
contentsFrameMode
contentsFrameCount
contentsFramesPerRow
contentsFramesPerSecond
high
medium
CALinearBlurs
innerStroke
outerStroke
allowsRecursiveScreenCapture
CoreAnimation: insecure context %x - pid %u [%s].
Cannot host %x in context %x - pid %u [%s].
~Update
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/render/render-updater.cpp
obj->type () == Render::kTypeImageQueue
mark_composited
com.apple.CoreAnimation.CAWindowServer.SecureModeViolation
** Render tree at time %f (bounds %d,%d %dx%d) **
CARenderPresentRelease
Invalid display attributes version %d
CAMachPort
<CAMachPort %p mach_port = %u>
<CAMachPort %p>
CARenderObject
<CARenderObject %p>
Unentitled call to server!
QuartzCore
CA::Context
unable to register with server: 0x%x
task_name_for_pid failed: 0x%x
CoreAnimation: NULL color space set on context (%x)
_colorSpaceDidChange
_contentsFormatDidChange:
v16@?0^{Layer={Atomic={?=i}}{Atomic={?=i}}^{Layer}{Weak<CALayer *>=@}^v^v{State=I[5I]{Vec2<double>=dd}{Rect=dddd}{Weak<id>=@B}^v^{AttrList}}{State=I[5I]{Vec2<double>=dd}{Rect=dddd}{Weak<id>=@B}^v^{AttrList}}^{Animation}@@II[3I]^v}8
v24@?0^{Layer={Atomic={?=i}}{Atomic={?=i}}^{Layer}{Weak<CALayer *>=@}^v^v{State=I[5I]{Vec2<double>=dd}{Rect=dddd}{Weak<id>=@B}^v^{AttrList}}{State=I[5I]{Vec2<double>=dd}{Rect=dddd}{Weak<id>=@B}^v^{AttrList}}^{Animation}@@II[3I]^v}8I16I20
CoreAnimation: failed to lock IOSurface %x
grad
Invalid transform: %s (position %d)
Invalid color matrix: %s (position %d)
Invalid number of numeric values in path: %s
Invalid number of arguments to 'm' path operator: %s
Invalid number of arguments to 'l' path operator: %s
Invalid number of arguments to 'c' path operator: %s
Invalid number of arguments to 'v' path operator: %s
Invalid number of arguments to 'q' path operator: %s
Invalid number of arguments to 't' path operator: %s
Invalid number of arguments to 'y' path operator: %s
Invalid number of arguments to 'h' path operator: %s
Invalid number of arguments to 're' path operator: %s
Invalid path operator: %s
Ignoring trailing characters: %s
true
kCGImageSourceMemoryMapAsShared
Failed to create pattern from image
Failed to open image
opacity
Incorrect number of color components (need %d)
A8asL8
Failed to load image
Unable to open pdf document
pdfDocument element must specify src attribute
cannot create font from name: %s
T@"<CABehaviorDelegate>",W
v40@?0@8{CAPoint3D=ddd}16
{CAPoint3D=ddd}16@?0@8
v64@?0@8{CGAffineTransform=dddddd}16
{CGAffineTransform=dddddd}16@?0@8
v144@?0@8{CATransform3D=dddddddddddddddd}16
{CATransform3D=dddddddddddddddd}16@?0@8
v48@?0@8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@?0@8
v32@?0@8{CGSize=dd}16
{CGSize=dd}16@?0@8
v32@?0@8{CGPoint=dd}16
{CGPoint=dd}16@?0@8
v24@?0@8d16
d16@?0@8
v20@?0@8f16
f16@?0@8
v24@?0@8Q16
Q16@?0@8
v24@?0@8q16
q16@?0@8
v20@?0@8I16
I16@?0@8
v20@?0@8i16
i16@?0@8
v20@?0@8S16
S16@?0@8
v20@?0@8s16
s16@?0@8
v20@?0@8C16
C16@?0@8
v20@?0@8c16
c16@?0@8
v20@?0@8B16
B16@?0@8
v24@?0@8r^v16
r^v16@?0@8
springs
forceFields
timeStep
minimumTimeStep
stoppedVelocity
stoppedAngularVelocity
springScale
drag
angularDrag
reactsToCollisions
collisionInterval
mode
modeDisplay
modeLayer
includeContextList
excludeContextList
stopAfterContextList
destination
displayName
originX
originY
reuseBackdrops
enforceSecureMode
ignoreAccessibility
ignoreSublayers
ignoreLayerFixup
contextId
layerId
contextList
sizeWidth
sizeHeight
formatWideGamut
formatOpaque
CA Snapshot (Protected)
CA Snapshot (Unprotected)
CoreAnimation: failed to create Metal context!
CoreAnimation: sw renderer doesn't support tiling
SW renderer invalid destination format %c%c%c%c
CoreAnimation: %d by %d image is too large for software renderer, ignoring
Transaction
Transaction.Stalls
CoreAnimation: invalid commit handler phase! Defaulting to pre-commit.
CoreAnimation: CA_ASSERT_MAIN_THREAD_TRANSACTIONS is set and an implicit transaction wasn't created on a main thread.
UITrackingRunLoopMode
Started implicit transaction for thread %p
CoreAnimation: warning, deleted thread with uncommitted CATransaction; created by:
CoreAnimation: warning, deleted thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
CA_DEBUG_TRANSACTIONS
CA_ASSERT_MAIN_THREAD_TRANSACTIONS
CoreAnimation: new transaction fence disabling existing low latency hint.
cannot add commit handler to this phase!
CATransaction
CoreAnimation: warning, encountered thread with uncommitted CATransaction; created by:
CoreAnimation: warning, encountered thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
animation
T@"CAAnimation",&,N,V_animation
{%@:%p %@:%p %@ %@}
CAAnimation
drawableProperties
CoreAnimation: ignoring exception: %@
opaque
allowsDisplayCompositing
nativeWindow
T^{_EAGLWindowObject=^?^?^?},R
TB,GisAsynchronous
drawableTimeoutSeconds
[CAEAGLLayer setInputTime:] - non-zero time already exists!
maximumDrawableCount
T@"NSString",R,N,V_key
display_timer_callback: unexpected state (now:%llx < expected:%llx)
CADisplayTimer
<CADisplayTimer %p>
sourceLayer
T@"CALayer",W
sourceLayerRenderId
sourceContextId
hidesSourceLayer
matchesOpacity
matchesPosition
matchesTransform
allowsBackdropGroups
(backdrop-layer %ld
(group "%s")
(usesGlobalGroupNamespace true)
(scale %g)
(zoom %g)
(marginWidth %g)
(backdropRect [%g %g; %g %g])
(captureOnly true)
(allowsInPlaceFiltering true)
(reducesCaptureBitDepth true)
(ignoresScreenClip true)
(tracksLuma true)
(buffer [%d x %d] scale %g)
collected backdrop group %p buffer %p
Filter merging aborted: layer.bounds == blur.inputBounds
(transition %s
Delegate does not support <script>.
Null <script> contents
Unable to open script: %s
No such class `%s'
CAML error:%d: 
CAML warning:%d: 
create_builtin_types
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/api/CAMLObjCContext.mm
!_builtin_types
NSString
Delegate does not support script values.
CA:Render:Server:port_set (): mach_port_mod_refs () returned error 0x%x
unable to find bootstrap server
unable to register bootstrap port %s: %x
com.apple.coreanimation.render-server
CoreAnimation: mach_msg returned 0x%x for retry with size:%zu
Couldn't allocate buffer of %zu bytes for message!
CoreAnimation: mach_msg returned 0x%x!
CA::RenderServer::render_server_queue
CA::Render::DeallocQueue
image
T^{CGImage=},&,V_image
tint
T^{CGColor=},&,V_tint
(pixel-buffer %c%c%c%c [%d %d])
oglFlip
(image-provider [%d %d] [%d %d] [%d %d]
(fillColor 
(fillColor #%08x 
CAImageProvider: %.3gMB cached (%.3gMB purgeable); idle %.3gs -> %.3gs
defaultDisplay
CARenderServerBuffer
<CARenderServerBuffer %p>
CARenderServerBufferRef is now a CF type. Please use CFRetain/CFRelease instead of CARenderServerDestroyBuffer!
com.apple.CARenderServer
%s display:
Total Frames:
Skipped Frames:
Total Cloned Frames:
Skipped Cloned Frames:
window_bounds
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/ogl/ogl-metal.mm
0 && "no bound surface?"
function_uniform
total_elements <= kMaxFunctionUniformSize * 4
Ignoring [%d x %d] invalid surface dimensions
Unexpected framebuffer format %c%c%c%c
Failed to allocate [%d x %d] %c%c%c%c framebuffer %s
clear_region
surf != nullptr
Failed to allocate %u-byte Metal buffer
Unable to start render command encoder
generate_mipmaps_for_texture
tex->textures[0] && "nil mtl texture?"
Unable to start blit command encoder
update_texture_plane
plane_index < OGL_MAX_PLANES_PER_IMAGE && "invalid plane"
create_image_binding
plane < OGL_MAX_PLANES_PER_IMAGE
com.apple.coreanimation.reinterpreted-surface
Cannot cast linear FP16 texture to sRGB sampler variant
Surface from iosurface %d x %d is too large
Surface %d x %d is too large
Failed to allocate %dx%d surface texture.
v16@?0@"<MTLCommandBuffer>"8
%d by %d image is too large for GPU, ignoring
Image stride is too large for GPU, ignoring
Failed to allocate MTLTexture
update_image
false && "1D textures unimplemented"
com.apple.coreanimation.image
update_surface
tex->dimensions == 2 && "surface textures must be 2D"
Failed to allocate MTLTexture from IOSurface 0x%x. Row bytes (%ld) not %ld aligned.
Failed to allocate MTLTexture from IOSurface 0x%x.
com.apple.coreanimation.surface
gaussian_texture
create_texture
supercircle_texture
draw_buffer_image_rects
get_texture_function () == OGL_TEX_BUFFER_IMAGE_BLIT
draw
current_metal_surface () != nullptr
encode_draw
instance_count == 1
set_vertex_arg
index < VertexBuffer_Count
asg_vert
buffer_image_blit_vert
path_blit_vert
path_stroke_round_join_vert
path_stroke_miter_join_vert
path_stroke_curve_vert
path_stroke_line_vert
path_rect_vert
path_cubic_vert
downsample_blur_vert
upsample_vert
std_vert1
std_vert0
set_fragment_arg
index < FragmentBuffer_Count
noise
Invalid TextureEdgeMode 0x%x
encode_fragment_uniforms
uintptr_t (dst) - uintptr_t (_encoded.frag_uniform) <= uniform_size
encode_uniform_function_args
!tex_info.arg && tex_info.layout.fields[0].count == 0
!blend_info.uniforms
encode_uniform_render_state
rs->op >= RenderState::distance_fill && rs->op <= RenderState::distance_outer_stroke
get_pipeline
pipeline_state != nullptr
set_pipeline_state
!is_complete ()
pipeline && pipeline->is_complete ()
Metal.Pipelines.Stall
Metal.Pipelines
%s%s%s%s%s%s%s
CoreAnimation failed to build Metal render pipeline
spec=%s
%s: %s
Building render pipeline %s with descriptor %s
function=%s spec=%s
vert_
Specializing shader function %s for %s with constant values %s
Loading shader function %s for %s
CoreAnimation failed to load Metal vertex function
CoreAnimation failed to load Metal fragment function
CoreAnimation failed to load Metal library
CoreAnimation failed to load Metal pipeline library
CoreAnimation failed to specialize Metal vertex function
CoreAnimation failed to specialize Metal fragment function
CoreAnimation failed to load Metal render pipeline
fc_texcoord_count%d
fc_outputs_velocity
fc_base_color
fc_vertex_layout
fc_generic
fixed_lpf_gen_vert
fixed_lpf_spc_vert
fixed_lph_gen_vert
fixed_lph_spc_vert
%02d
create_fragment_shader
function_name != nil
frag_
fc_has_image_%d%c
fc_has_color_cube%d
fc_has_color_trc%d
fc_color_opaque%d
fc_color_opcodes%d
fc_color_inputs%d
fc_filter%d
fc_memoryless_index%d
fc_plane_count%d
fc_coord_function%d
fc_image_function%d
fc_has_edr_factor
fc_has_hdr_scale
fc_has_premultiply
fc_debug_xr
fc_extended_range
fc_clamp_color
fc_noise_width
fc_dest_count
fc_dest_index
fc_image_count
fc_destination_function
fc_blend_function
fc_texture_function
fc_has_attachment_%d
fc_has_color_params
fc_has_noise_tex
fc_has_asg_77_weights
fc_has_ycbcr_matrix
fc_has_noise_scale
fc_has_lod_bias
fc_attachment_count
fc_framebuffer_sample
fc_framebuffer_fetch
fixed_lpf_cpf_frag
fixed_lph_cpf_frag
fixed_lph_cph_frag
asg_50_frag
asg_75_frag
asg_frag
buffer_image_blit_frag
path_blit_frag_eo
path_blit_frag
path_clear_frag
path_stroke_round_join_frag
path_stroke_miter_join_frag
path_stroke_curve_frag
path_stroke_line_frag
path_rect_frag
path_cubic_frag
luma_boost
display_overdrive_linearize
display_overdrive_srgb_sampler
display_overdrive_lut_gen
harmony
edr_scale
p3_clamp
home_affordance_base
conic_shading_frag
radial_complex_shading_frag
radial_shading_frag
axial_shading_frag
linear_blur_frag
narrow_blur_27_frag
narrow_blur_23_frag
narrow_blur_19_frag
narrow_blur_15_frag
narrow_blur_11_frag
narrow_blur_7_frag
downsample_blur_4_frag
downsample_blur_2_frag
upsample_frag
downsample_8_frag
downsample_6_frag
downsample_4_frag
%@%s%@%s%@%s%@
%03d
%01d
draw_
push_blend_function
fragment.blend_function == OGL_BLEND_NONE
get_generic
type == VertexShader::Type_Fixed
texture_function_info[texture_function].is_fixed ()
%@_%@
%04d
A008
L008
L016
LA88
L555
2C16
2C0h
RGBA
BGRA
0081
R10k
l10r
l64r
RGhA
RGfA
0556
get_pipeline_spec
layout == VertexLayout_Surface
spec.fragment.blend_function == OGL_BLEND_NONE
lift_blend_function
!fragment.generic
draw_axis_aligned_rects
get_texture_function () == OGL_TEX_PATH_CLEAR || get_texture_function () == OGL_TEX_PATH_BLIT || get_texture_function () == OGL_TEX_PATH_BLIT_EO
draw_path_joins
get_texture_function () == OGL_TEX_PATH_STROKE_MITER_JOIN || get_texture_function () == OGL_TEX_PATH_STROKE_ROUND_JOIN
draw_path_curves
get_texture_function () == OGL_TEX_PATH_STROKE_CURVE
draw_path_lines
get_texture_function () == OGL_TEX_PATH_STROKE_LINE
draw_path_rects
get_texture_function() == OGL_TEX_PATH_RECT
draw_path_cubics
get_texture_function() == OGL_TEX_PATH_CUBIC
draw_points
get_texture_function() < OGL_TEX_PATH_FIRST || get_texture_function() > OGL_TEX_PATH_LAST
draw_lines
draw_elements
mode != OGL_PRIMITIVE_QUADS
init_state
current_surface () && "no such thing as current fbo"
Can't run metal against null surface
Command buffer allocation failed!
MTLCommandBuffer(%p) error = %s
Compiling render pipeline: %s
Resulting pipeline state: %p (flags=%s)
Compiling fragment shader: %s
Resulting function: %p
Compiling vertex shader: %s
Unrecognized shader spec: %s
set_metal_state
_command_buffer == nil
_encoder == nil
!surf->needs_clear
%zu by %zu iosurface is too large for GPU
Unsupported IOSurface pixel format: %.4s
Unable to create MTLTexture for destination IOSurface
set_destination_textures
current_surface () == nullptr
count <= MAX_COLOR_ATTACHMENTS
new_context
!shared_context || !queue
com.apple.coreanimation.mtl_submission
com.apple.coreanimation.mtl_completion
Failed to create MTLCommandQueue
Mismatched MTLCommandQueue and MTLDevice
com.apple.coreanimation.mtl_dealloc
DYMTL_UI_SERVER_CAPTURE
MetalContext
quartzcore_bundle != nil
metallib_path != nil
com.apple.coreanimation.pipelines
NVIDIA
metallib
CoreAnimation Renderer
com.apple.QuartzCore
<script> element not supported
CAML
message
colorspace
sRGB
Unable to create colorspace: %s
kCGColorSpace%s
create_sax_vtable
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/utilities/CAMLContext.cpp
!_sax_vtable
http://www.apple.com/CoreAnimation/1.0
Unknown namespace URI: %s
script
Ignoring element `%s'
caml
Root element must be `caml'
type
Unknown type `%s'
Invalid type `%s' (need `%s')
object
Unknown value element `%s'
`o' element must have `type' attribute
Ignoring untyped attribute `%s'
Unknown object id: `%s'
Undefined property value for key `%s'
HitTest: rejecting layer "%s" 
 kCAContextIgnoresHitTest
HitTest: rejecting layer "%s" 
 allowsHitTesting=NO
HitTest: rejecting layer "%s" 
 culled above and hitTestsAsOpaque=NO
HitTest: rejecting layer "%s" 
 hidden=YES or opacity=0
HitTest: rejecting layer "%s" 
 masksToBounds=YES and not in bounds
HitTest: rejecting layer "%s" 
 mask
HitTest: accepting layer "%s" 
 hit child "%s"
HitTest: accepting layer "%s" 
 hitTestsAsOpaque=YES and in bounds
HitTest: rejecting layer "%s" 
 culled above
HitTest: accepting layer "%s" 
 within background color
HitTest: accepting layer "%s" 
 within border
HitTest: accepting layer "%s" 
 within contents
HitTest: accepting layer "%s" 
 subclass
HitTest: rejecting layer "%s" 
 no hits
@index(
@index(%d)
com.apple.GL.event.frameboundary.end
com.apple.coreanimation.display.%s
com.apple.coreanimation.display
%f %x "%s" (%p): replacing %p (eval %u; frames %u):
%f %x "%s" (%p): adding %p:
%f %x "%s" (%p): not adding %p:
%f %x "%s" (%p): removing all:
%p (eval %u; frames %u):
%f %x "%s" (%p): removing %p (eval %u; frames %u):
%f %x "%s" (%p): collecting %p (t %f; speed %g; eval %u; frames %u):
(path
%g %g m
%g %g l
%g %g %g %g q
%g %g %g %g %g %g c
CoreAnimation: ignoring invalid path
(function %s)
%s - _values = NULL
InterpolatedFunction
CAImageProvider
<CAImageProvider %p: %u x %u>
T@"CALayer",R,V_layer
currentState
T@"CAState",&,N,V_currentState
undoStack
T@"CAStateControllerUndo",R,V_undoStack
keyPath
T@"NSString",C,N,V_keyPath
T@,&,N,V_object
beforeObject
T@,&,N,V_beforeObject
{%@:%p %@:%p %@ %@ before %@}
beforeObjectId
objectId
sublayers
%08x %08x vertex shader:
%s%s---
2DRect
%08x %08x fragment shader:
%s%s---
vertex_matrix
texture%d
vertex_velocity_matrix
texmatD
noise_scale
texmatW
render_state
color_matrix
offset
weight
axis
divide
minmax
bgcolor
minmax_dir
args
color_dodge
color_lighten
reversed
color_burn
color_darken
curves
function_arg
coord_arg
chroma_matrix0
chroma_matrix1
chroma_matrix2
ycbcr_bias0
ycbcr_bias1
ycbcr_bias2
ycbcr_matrix0
ycbcr_matrix1
ycbcr_matrix2
colorP0
colorP1
colorP2
texmat0
texmat1
texmat2
blend_color0
blend_color1
vertex_position
vertex_color0
vertex_color1
vertex_texcoord0
vertex_texcoord1
vertex_texcoord2
vertex_point_size
lowp
mediump
#extension GL_OES_standard_derivatives : require
#extension GL_EXT_shader_framebuffer_fetch : require
uniform highp vec4 texmat0, texmat1, texmat2;
uniform lowp vec4 function_arg;
uniform lowp vec4 coord_arg;
uniform mediump float noise_scale;
uniform %s sampler%s texture%d;
uniform lowp sampler%s texture%d;
uniform lowp vec4 blend_color0;
uniform lowp vec4 blend_color1;
uniform mediump vec4 colorP%d[%d];
uniform mediump mat3 ycbcr_matrix%d;
uniform mediump vec3 ycbcr_bias%d;
uniform mediump vec4 render_state;
uniform lowp vec3 color_matrix[3];
uniform lowp vec3 color_matrix[4];
uniform lowp vec4 color_matrix[5];
uniform lowp vec4 color_dodge;
uniform lowp vec4 color_lighten;
uniform lowp float reversed;
uniform lowp vec4 color_burn;
uniform lowp vec4 color_darken;
uniform lowp vec4 curves[4];
varying lowp vec4 color0;
varying lowp vec4 color1;
varying highp vec2 texcoord%d_%d;
varying highp vec3 texcoordD;
varying highp vec3 texcoordN;
varying mediump vec2 velocity;
void main(void) {
CA_EMPTY_SHADERS
  gl_FragData[0] = vec4(0.0);
  gl_FragData[1] = vec4(0.0);
  return;
highp vec2 texcoord0_0 = vec2(gl_PointCoord.s, 1.0 - gl_PointCoord.t);
  lowp vec4 d%d = texture%sProj(texture%d, texcoordD);
  lowp vec4 d%d = gl_LastFragData[%d];
texcoord
  mediump vec2 tc%d_%d = radialCoord(texcoord%d_%d);
  mediump vec2 tc%d_%d = conicCoord(texcoord%d_%d);
  mediump vec2 tc%d_%d = fract(texcoord%d_%d) * coord_arg.xy + coord_arg.zw;
assemble_fragment_shader
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/ogl/ogl-gl.cpp
i > 0
key->function.f.image_func[i - 1] == OGL_IMAGE_IDENTITY || key->function.f.image_func[i - 1] == OGL_IMAGE_DEST
tlum
  mediump vec2 tlum%d_%d = vec2(dot(%c%d.rgb, vec3(.2125, .7154, .0721)) * texcoord%d_%d.y + texcoord%d_%d.x, 0.5);
  mediump vec2 tc%d_%d = clamp(texcoord%d_%d, coord_arg.xy, coord_arg.zw);
  %s vec4 %c%d = texture%s(texture%d, %s%d_%d);
  %s vec4 %c%d;
    highp vec4 f;
    f.xy = fract(%s%d_0 / texmat%d.xy);
    f.xy = fract(%s%d_0);
    f.zw = vec2(1.) - f.xy;
    f = f.xzxz * f.yyww;
    %c%d = texture%s (texture%d, %s%d_%d) * f.w;
    %c%d = texture%s (texture%d, %s%d_%d) * f.z + %c%d;
    %c%d = texture%s (texture%d, %s%d_%d) * f.y + %c%d;
    %c%d = texture%s (texture%d, %s%d_%d) * f.x + %c%d;
  lowp vec4 s%d = vec4(t%d.rgb, 1.);
  lowp vec4 s%d = t%d.yxwz;
  lowp vec4 s%d = vec4(t%d.yxw, 1.);
  lowp vec4 s%d = t%d.zyxw;
  lowp vec4 s%d = vec4(t%d.zyx, 1.);
  lowp vec4 s%d = t%d.wzyx;
  lowp vec4 s%d = vec4(t%d.wzy, 1.);
  lowp vec4 s%d = vec4(0., 0., 0., t%d.a);
  lowp vec4 s%d = squareImage(%s%d_0);
  lowp vec4 s%d = circleImage(%s%d_0);
  lowp vec4 s%d = supercircleImage(%s%d_0);
  lowp vec4 s%d = vec4(0.);
  lowp vec4 s%d = vec4(t%d.r);
  lowp vec4 s%d = vec4(t%d.a);
  lowp vec4 s%d = vec4(clamp(ycbcr_matrix%d * vec3(t%d.r + ycbcr_bias%d.x, t%d.rg + ycbcr_bias%d.yz), 0., 1.), 1.);
  lowp vec4 s%d = t%d*vec4(2.0) + vec4(-0.75);
  s%d = vec4(s%d.zyx, 1.0);
  lowp vec4 s%d = renderImage(t%d.r);
  lowp vec4 s%d = vec4(1.) - t%d;
  lowp vec4 s%d = vec4(t%d.rrr, 1.h);
  lowp vec4 s%d = t%d.rrrg;
  lowp vec4 s%d = vec4(1.0);
  lowp vec4 s%d = t%d.gggg;
  lowp vec4 s%d = t%d.bbbb;
  lowp vec4 s%d = d0;
  lowp vec4 s%d = vec4(clamp(ycbcr_matrix%d * vec3(t%d.yzw + ycbcr_bias%d.xyz), 0., 1.)*t%d.x , t%d.x);
  lowp vec4 s%d = vec4(clamp(ycbcr_matrix%d * vec3(t%d.g + ycbcr_bias%d.x, t%d.rb + ycbcr_bias%d.yz), 0., 1.), 1.);
  lowp vec4 s1 = color0;
  lowp vec4 s2;
    lowp vec4 S = s1, D = d0;
    s2 = R; s1 = d0;
  gl_FragData[0] = %s;
    lowp vec4 S = gl_FragData[%d];
    lowp vec4 D = d%d;
    gl_FragData[%d] = R;
    mediump vec3 n = texture%sProj(texture%d, texcoordN).xyz;
    n = (n - .5) * noise_scale;
    lowp vec3 c = gl_FragData[0].rgb + n*gl_FragData[0].a;
    gl_FragData[0].rgb = clamp(c, 0., gl_FragData[0].a);
gl_FragData[0] = %s;
gl_FragData[0].aaaa
%Wlowp vec4 R = %s;
%Wlowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
%Wlowp float DaSa = D.a*S.a;
%WS = S/max(S.a, 0.005);
%WD = D/max(D.a, 0.005);
%WR.rgb += %s * DaSa;
%WR.rgb += %s;
%WR.a += DaSa;
%WR.rgb = min(R.rgb, R.a);
vec4(0.)
S + D*(1. - S.a)
S*D.a
S*(1. - D.a)
S*D.a + D*(1. - S.a)
S*(1. - D.a) + D
D*S.a
D*(1. - S.a)
S*(1. - D.a) + D*S.a
S*(1. - D.a) + D*(1. - S.a)
S + D
D - S
S - D
S + D*(1 - S)
min(S, D)
max(S, D)
vec4 (D.rgb + S.rgb, S.a + D.a * (1. - S.a))
vec4 (D.rgb + S.rgb - (2. * D.rgb * S.rgb), S.a + D.a * (1. - S.a))
vec4(mix(D.rgb, S.rgb, D.a), 1.0)
vec4(D.rgb, S.a)
vec4(D.rgb, S.a * D.a)
S + D;
R.a = min(1., R.a);
R.rgb = R.a - S.a - D.a + R.rgb
D*(1. - S.a) + S*(1. - D.a) + D*S
mix(2.*D.rgb*S.rgb, 2.*(S.rgb*D.a + D.rgb*(S.a - S.rgb)) - S.a*D.a, step(.5*D.a, D.rgb))
min(D.rgb*S.a, S.rgb*D.a)
max(D.rgb*S.a, S.rgb*D.a)
min(S.aaa, D.rgb*S.a*S.a/max(S.a - S.rgb, .005))
step(.005, S.rgb) * (D.a*S.a - S.a*S.a*(D.a - D.rgb)/max(S.rgb, .005))
2.*D.rgb*S.rgb - (D.rgb / max(D.a, .005))*D.rgb*(2.*S.rgb - S.a)
mix(2.*D.rgb*S.rgb, S.a*D.a - 2.*(D.a - D.rgb)*(S.a - S.rgb), step(.5*S.a, S.rgb))
abs(D.rgb*S.a - S.rgb*D.a)
S.rgb*D.a - D.rgb*S.a
S.rgb*D.a / max(D.rgb*S.a, .005)
D.rgb*S.a - D.a*(S.a - S.rgb)
D.rgb*S.a - D.a*(S.a - 2.*S.rgb)
mix(min(D.rgb*S.a, 2.*S.rgb*D.a), max(D.rgb*S.a, 2.*S.rgb*D.a - D.a*S.a), step(.5*S.a, S.rgb))
vibrantDark(S, D)
vibrantLight(S, D)
vibrantDarkReversed(S, D)
vibrantLightReversed(S, D)
darkenSover(S, D)
lightenSover(S, D)
setLum(setSat(S.rgb, sat(D.rgb)), lum(D.rgb))
setLum(setSat(D.rgb, sat(S.rgb)), lum(D.rgb))
setLum(S.rgb, lum(D.rgb))
setLum(D.rgb, lum(S.rgb))
vec4(S.rgb * D.a + D.rgb * (1. - D.a * S.a), 1.0)
inline_color_shader
opaque && "4DLUT must be opaque!"
    lowp vec4 c = s%d, t;
    lowp vec3 c = s%d.rgb, t;
    c = c / max(s%d.a, .005);
    c = c.r * colorP%d[%d].rgb + c.g * colorP%d[%d].rgb + c.b * colorP%d[%d].rgb + colorP%d[%d].rgb;
    t = abs(c);
    t = pow(t, colorP%d[%d].rgb);
    t = pow(t, colorP%d[%d].rgba);
    c.a = c.a < 0.0 ? t.a * -1.0 : t.a;
    c.r = c.r < 0.0 ? t.r * -1.0 : t.r; c.g = c.g < 0.0 ? t.g * -1.0 : t.g; c.b = c.b < 0.0 ? t.b * -1.0 : t.b;
    t.r = t.r < -colorP%d[%d].r / colorP%d[%d].r ? 0.0 : pow (colorP%d[%d].r * t.r + colorP%d[%d].r, colorP%d[%d].r)
    t.g = t.g < -colorP%d[%d].g / colorP%d[%d].g ? 0.0 : pow (colorP%d[%d].g * t.g + colorP%d[%d].g, colorP%d[%d].g)
    t.b = t.b < -colorP%d[%d].b / colorP%d[%d].b ? 0.0 : pow (colorP%d[%d].b * t.b + colorP%d[%d].b, colorP%d[%d].b)
    t.a = t.a < -colorP%d[%d].a / colorP%d[%d].a ? 0.0 : pow (colorP%d[%d].a * t.a + colorP%d[%d].a, colorP%d[%d].a)
    c.r = c.r < 0.0 ? t.r * -1.0: t.r; c.g = c.g < 0.0 ? t.g * -1.0 : t.g; c.b = c.b < 0.0 ? t.b * -1.0 : t.b;
    t.r = t.r < -colorP%d[%d].r / colorP%d[%d].r ? colorP%d[%d].r : pow (colorP%d[%d].r * t.r + colorP%d[%d].r, colorP%d[%d].r) + colorP%d[%d].r
    t.g = t.g < -colorP%d[%d].g / colorP%d[%d].g ? colorP%d[%d].g : pow (colorP%d[%d].g * t.g + colorP%d[%d].g, colorP%d[%d].g) + colorP%d[%d].g
    t.b = t.b < -colorP%d[%d].b / colorP%d[%d].b ? colorP%d[%d].b : pow (colorP%d[%d].b * t.b + colorP%d[%d].b, colorP%d[%d].b) + colorP%d[%d].b
    t.a = t.a < -colorP%d[%d].a / colorP%d[%d].a ? colorP%d[%d].a : pow (colorP%d[%d].a * t.a + colorP%d[%d].a, colorP%d[%d].a) + colorP%d[%d].a
    t.r = t.r < colorP%d[%d].r ? colorP%d[%d].r * t.r : pow(colorP%d[%d].r * t.r + colorP%d[%d].r,colorP%d[%d].r);
    t.g = t.g < colorP%d[%d].g ? colorP%d[%d].g * t.g : pow(colorP%d[%d].g * t.g + colorP%d[%d].g,colorP%d[%d].g);
    t.b = t.b < colorP%d[%d].b ? colorP%d[%d].b * t.b : pow(colorP%d[%d].b * t.b + colorP%d[%d].b,colorP%d[%d].b);
    t.a = t.a < colorP%d[%d].a ? colorP%d[%d].a * t.a : pow(colorP%d[%d].a * t.a + colorP%d[%d].a,colorP%d[%d].a);
    t.r = t.r < colorP%d[%d].r ? colorP%d[%d].r * t.r + colorP%d[%d].r : pow (colorP%d[%d].r * t.r + colorP%d[%d].r, colorP%d[%d].r) + colorP%d[%d].r;
    t.g = t.g < colorP%d[%d].g ? colorP%d[%d].g * t.g + colorP%d[%d].g : pow (colorP%d[%d].g * t.g + colorP%d[%d].g, colorP%d[%d].g) + colorP%d[%d].g;
    t.b = t.b < colorP%d[%d].b ? colorP%d[%d].b * t.b + colorP%d[%d].b : pow (colorP%d[%d].b * t.b + colorP%d[%d].b, colorP%d[%d].b) + colorP%d[%d].b;
    t.a = t.a < colorP%d[%d].a ? colorP%d[%d].a * t.a + colorP%d[%d].a : pow (colorP%d[%d].a * t.a + colorP%d[%d].a, colorP%d[%d].a) + colorP%d[%d].a;
    c.%c = texture2D(texture%d, vec2(c.%c*colorP%d[%d].%c, colorP%d[%d].%c)).r;
    mediump vec2 c_st = vec2(c.r * colorP%d[%d].x + colorP%d[%d].y, 0.5);
    c = texture2D(texture%d, c_st).rgb;
    c = c * colorP%d[%d].x + colorP%d[%d].y;
    c = texture3D(texture%d, c).rgb;
    c.b = c.b * colorP%d[%d].z;
    lowp float b_mix = fract(c.b);
    c.b = floor(c.b) * colorP%d[%d].w;
    mediump vec2 c_st = vec2(c.r, c.g);
    c_st.r = c_st.r * colorP%d[%d].x + colorP%d[%d].y;
    c_st.g = c_st.g * colorP%d[%d].x * colorP%d[%d].w + colorP%d[%d].y * colorP%d[%d].w + c.b;
    lowp vec3 c0 = texture2D(texture%d, c_st).rgb;
    lowp vec3 c1 = texture2D(texture%d, c_st + vec2(0., colorP%d[%d].w)).rgb;
    c = mix(c0, c1, b_mix);
    mediump vec3 c_stp = c.rgb;
    c.a = c.a * colorP%d[%d].z;
    lowp float a_mix = fract(c.a);
    c.a = floor(c.a) * colorP%d[%d].w;
    c_stp.r = c_stp.r * colorP%d[%d].x + colorP%d[%d].y;
    c_stp.g = c_stp.g * colorP%d[%d].x + colorP%d[%d].y;
    c_stp.b = c_stp.b * colorP%d[%d].x * colorP%d[%d].w + colorP%d[%d].y * colorP%d[%d].w + c.a;
    lowp vec3 c0 = texture3D(texture%d, c_stp).rgb;
    lowp vec3 c1 = texture3D(texture%d, c_stp + vec3(0., 0., colorP%d[%d].w)).rgb;
    c = vec4(mix(c0, c1, a_mix), 1.);
    s%d.rgb = c * s%d.a;
    s%d = vec4(c.rgb, 1.);
color0
s0 / s0.a
color0 * s0
color0 * (s0 / s0.a)
color0 * s0 * s1.a
color0 * s0 * (1.0 - s1.a)
mix(s1, s0, color0.a)
mix(color0, s0, function_arg.x)
mix(color0 * s0.a, s0, function_arg.x)
s0 + s1
color0 * s0.a
color0 * (1.0 - s0.a)
vec4(color0.rgb * color0.a, color0.a)
mix(s1, d0, s0.a)
mix(s1, s2, s0.a)
vec4(s0.r * color_matrix[0] + s0.g * color_matrix[1] + s0.b * color_matrix[2], s0.a)
vec4(s0.r * color_matrix[0] + s0.g * color_matrix[1] + s0.b * color_matrix[2] + s0.a * color_matrix[3], s0.a)
colorMatrix4x4Bias(s0)
vec4((s0.r / s0.a) * color_matrix[0] + (s0.g / s0.a) * color_matrix[1] + (s0.b / s0.a) * color_matrix[2], 1.)
vec4((s0.r / s0.a) * color_matrix[0] + (s0.g / s0.a) * color_matrix[1] + (s0.b / s0.a) * color_matrix[2] + color_matrix[3], 1.)
colorMatrix4x4BiasDivideAlpha(s0)
perlinBias(s0, function_arg.x)
vibrantDark(s0, d0)
vibrantLight(s0, d0)
mix(s0, s1, function_arg)
luminanceCurve(s0, function_arg, color0.a)
colorCurves(s0)
uniform highp mat4 vertex_matrix;
uniform highp mat4 vertex_velocity_matrix;
uniform highp vec4 texmatD;
uniform highp vec4 texmatW;
uniform highp vec4 chroma_matrix%d;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color0, vertex_color1;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
attribute mediump vec3 vertex_normal;
varying highp vec2 texcoord%d_0;
void main() {
  gl_Position = vertex_matrix * vertex_position;
  highp vec4 vp1 = vertex_position;
  highp vec4 vp0 = vertex_velocity_matrix * vertex_position;
  velocity = (vp1.xy / vp1.w) - (vp0.xy / vp0.w);
  color0 = vertex_color0;
  color1 = vertex_color1;
  texcoord%d_0 = vertex_texcoord%d * texmat%d.xy + texmat%d.zw;
  texcoord%d_%d = texcoord%d_0 * chroma_matrix%d.xy + chroma_matrix%d.zw;
  texcoord%d_%d = texcoord%d_0;
  texcoord%d_%d = (vertex_texcoord%d + vec2(%g, %g)) * texmat%d.xy + texmat%d.zw;
  texcoordD = vec3(gl_Position.xy * texmatD.xy + texmatD.zw * gl_Position.w, gl_Position.w);
  texcoordN = vec3(gl_Position.xy * texmatW.xy + texmatW.zw * gl_Position.w, gl_Position.w * float(NOISE_SIZE));
GL_INVALID_FRAMEBUFFER_OPERATION;
GL_OUT_OF_MEMORY
GL_STACK_UNDERFLOW
GL_STACK_OVERFLOW
GL_INVALID_OPERATION
GL_INVALID_VALUE
GL_INVALID_ENUM
GL_NO_ERROR
CA_DISABLED_EXTENSIONS
CoreAnimation: disabling OpenGL extension %s
gl_texture_filter
filter < OGL_TEXTURE_FILTER_COUNT
stealthMode
kCGContextClear
CA Whippet GetLayer
kCGContextErase
kCGContextWait
kCGContextSynchronize
kCGContextFlush
CAWindowServerSurface
target
T@"CALayer",W,N,V_target
<CAStateTransitionElement target=<%@: %p> key=%@ %@>
targetId
CALayer
"%s"
drawableID
TQ,N,V_drawableID
sharedEvent
T@"IOSurfaceSharedEvent",N,V_sharedEvent
insertSeed
TI,N,V_insertSeed
status
TQ,N,V_status
presentedTime
Td,N,V_presentedTime
presentScheduledInsertSeed
TI,N,V_presentScheduledInsertSeed
presentScheduledInsertSeedValid
TB,N,V_presentScheduledInsertSeedValid
texture
T@"<MTLTexture>",R
T@"CAMetalLayer",R
Cannot present CAMetalDrawable because device is nil.
[CAMetalLayerDrawable presentAtTime] should not be called after already presenting this drawable. Get a nextDrawable instead.
[CAMetalLayerDrawable present] should not be called after already presenting this drawable. Get a nextDrawable instead.
[CAMetalLayerDrawable texture] should not be called after already presenting this drawable. Get a nextDrawable instead.
-[CAMetalDrawable releasePrivateReferences:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/api/CAMetalLayer.mm
priv
[CAMetalLayerDrawable presentAfterMinimumDuration] should not be called after already presenting this drawable. Get a nextDrawable instead.
device
T@"<MTLDevice>",&
preferredDevice
T@"<MTLDevice>",R
framebufferOnly
drawableSize
T^{CGColorSpace=}
allowsNextDrawableTimeout
displaySyncEnabled
presentsWithTransaction
failed trying to set maximumDrawableCount to %lu outside of the valid range of [2, 3]
CAMetalLayerInvalidMaximumDrawableCount
CoreAnimation: setting `contents' on CAMetalLayer may result in undefined behavior
[CAMetalLayer newDrawable] is deprecated. Please use [CAMetalLayer nextDrawable] instead.
[CAMetalLayer nextDrawable] returning nil due to 1 second timeout. Set allowsNextDrawableTimeout to keep retrying.
[CAMetalLayer nextDrawable] returning nil because allocation failed.
CAMetalLayer Display Drawable
[CAMetalLayer nextDrawable] returning nil because device is nil.
invalid pixel format %lu
CAMetalLayerInvalid
CAMetalLayer ignoring invalid setDrawableSize width=%f height=%f
com.apple.coreanimation.CAMetalLayerTimeoutQueue
EDRMetadata
displayCompositingInternalStatus
[CAMetalLayer setInputTime:] - non-zero time already exists!
exclusiveMode
serverSyncEnabled
fenceEnabled
nonDefaultColorspace
v16@?0Q8
position.x
position.y
position.z
velocity.x
velocity.y
velocity.z
mass
rotation
spin
scale
scaleSpeed
birthRate
color.red
color.green
color.blue
color.alpha
(emitter-behavior %s
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/ogl/ogl-performance-hud.cpp
draw_string
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/ogl/ogl-debug-renderer.h
text
draw_graph2d
_history
to_string
%.2fms
%lld
0x%llx
<1%%
%lld%%
%.2fW
%lldmW
%.2f
0 && "unsupported counter type!"
(match-move-animation
(sourcePoints 
T@"<CALinearMaskLayerDelegate><CALayerDelegate>",W,D
B104@?0{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}8q88q96
Stage = %ld, %zux%zu LUT, %zu grid points
%zux%zu LUT not supported.
unsupported NxM LUT data format
CA_PRINT_COLOR_PROGRAMS
Stage = %ld matrix %ld
    %g %g %g %g
    %g %g %g %g
    %g %g %g %g
B112@?0{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}8q88q96^q104
Stage = %ld, %ld TRCs
    TRC channel %d --> TRCs[%ld], Table: entries = %zu
    TRC channel %d --> TRCs[%ld], Type0: Y = X^%f 
    TRC channel %d --> TRCs[%ld], Type1: Y = (%g*X+%g)^%g [X >= %g],  Y = 0 [X < %g]
    TRC channel %d --> TRCs[%ld], Type2: Y = (%g*X+%g)^%g + %f [X >= %g],  Y = %g [X < %g]
    TRC channel %d --> TRCs[%ld], Type3: Y = (%g*X+%g)^%g [X >= %g],  Y = %g*X [X < %g]
    TRC channel %d --> TRCs[%ld], Type4: Y = (%g*X+%g)^%g + %g [X >= %g], Y = %g*X + %g [X < %g]
TRCs are not the same for each color channel, falling back to cube LUT
lut_index_from_trc_index
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/utilities/CAColorProgram.cpp
lut_index >= 0
B96@?0{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}8^{__CFDictionary=}88
CGColorConverter:
    %d stages
    %d input components
    %d output components
    %d TRCs
    %d Matrices
    %d NxM LUTs
Color matching limited to 3-stage compact format (TRC -> NxM/LUT -> TRC), falling back to cube LUT
No support for more than one NxM LUT, falling back to cube LUT
Failed to iterate CGColorConverter 
'%s' --> '%s'
CAEnableDeepFramebuffer
Aixt/MEN2O2B7f+8m4TxUA
ChipID
IOSurface Compression Enabled: %s
CAEnableIOSurfaceCompression
CA_FORCE_P3_TRACKING
CADisableMinimumFrameDuration
com.apple
ji56BO1mUeT7Qg9RO7Er9w
(compressed-image [%d %d] [%d] %s
UNKNOWN
PVRTC_2
PVRTC_4
ASTC_4x4
ASTC_5x4
ASTC_5x5
ASTC_6x5
ASTC_6x6
ASTC_8x5
ASTC_8x6
ASTC_8x8
ASTC_10x5
ASTC_10x6
ASTC_10x8
ASTC_10x10
ASTC_12x10
ASTC_12x12
BC4_Unorm
BC4_Snorm
BC5_Unorm
BC5_Snorm
BC6_Unorm
Incorrect CompressedImage levels: %u
Failed to map %ld bytes with port = %u, protection = %u, err = 0x%x
CompressedImage port is MACH_PORT_NULL!
value
RGBA10XR
Gray8
Automatic
bottom
topLeft
topRight
bottomLeft
bottomRight
resize
resizeAspect
resizeAspectFill
nearest
cubic
trilinear
lanczos
linearlySampledLinear
asg77
circular
continuous
stretch
repeat
insecure
unrestricted
onOrderIn
onOrderOut
position
zPosition
anchorPoint
anchorPointZ
T{CATransform3D=dddddddddddddddd}
hidden
TB,GisHidden
doubleSided
TB,GisDoubleSided
TB,GisGeometryFlipped
superlayer
T@"CALayer",R
T@"CALayer",&
masksToBounds
contentsGravity
contentsCenter
contentsFormat
TB,GisOpaque
needsDisplayOnBoundsChange
drawsAsynchronously
edgeAntialiasingMask
allowsEdgeAntialiasing
backgroundColor
cornerRadius
maskedCorners
cornerCurve
borderWidth
borderColor
allowsGroupOpacity
compositingFilter
backgroundFilters
shouldRasterize
rasterizationScale
shadowColor
shadowOpacity
shadowOffset
shadowRadius
shadowPath
actions
T@"<CALayerDelegate>",W
Transaction (%p) property %@ changed %@
%@ - changing property %@ in transform-only layer, will have no effect
needsLayoutOnGeometryChange
clearsContext
invertsShadow
shadowPathIsBounds
rasterizationPrefersDisplayCompositing
preloadsCache
sortsSublayers
flipsHorizontalAxis
canDrawConcurrently
allowsHitTesting
hitTestsContentsAlphaChannel
wantsExtendedDynamicRangeContent
allowsGroupBlending
createsCompositingGroup
contentsDither
contentsAlignsToPixels
continuousCorners
cornerContentsMasksEdges
contentsOpaque
hitTestsAsOpaque
literalContentsCenter
contentsContainsSubtitles
inheritsTiming
definesDisplayRegionOfInterest
 to (%f, %f, %f, %f)
 to [%f %f %f %f %f %f]
 to [%f %f %f %f; %f %f %f %f; %f %f %f %f; %f %f %f %f]
 to %f
 to (%f, %f)
Began transaction (%p) change on layer %p for %@, %p
attempting to modify read-only layer %@
CALayerReadOnly
onLayout
B8@?0
context
onDraw
%s (CALayer)
-[%@ display]: Ignoring bogus layer size (%f, %f), contentsScale %f, backing store size (%f, %f)
layer %@ is a part of cycle in its layer tree
replaced layer %@ is not a sublayer of %@
CALayerInvalid
expecting model layer not copy: %@
CALayerInvalidTree
may only -hitTest: a layer or its presentation layer
%@ - calling -hitTest: on transform-only layer
CoreAnimation: zPosition should be within (-FLT_MAX, FLT_MAX) range.
CALayerInvalidGeometry
CALayer position contains NaN: [%g %g]. Layer: %@
CALayer bounds contains NaN: [%g %g; %g %g]. Layer: %@
CALayerAnimationKeys
CALayerAnimations
%@=%@
; animations = [
%s = %s; 
mask = %@; 
%s%@
sublayers = (
contents = %@; 
delegate = %@; 
bounds = CGRect (%g %g; %g %g); 
position = CGPoint (%g %g); 
name = "%@"; 
-[CALayer _initWithReference:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/api/CALayer.mm
[layer isKindOfClass:[self class]]
CALAYER_ALLOWS_GROUP_OPACITY
CALAYER_ALLOWS_EDGE_ANTIALIASING
CALayerAllowsEdgeAntialiasing
CALayerAllowsGroupOpacity
UIViewEdgeAntialiasing
UIViewGroupOpacity
meshTransform
T@"CAMeshTransform",C
acceleratesDrawing
TB,GisFrozen
contentsScaling
T{CGAffineTransform=dddddd}
contentsMultiplyColor
contentsSwizzle
cornerContents
cornerContentsCenter
motionBlurAmount
disableUpdateMask
sizeRequisition
backgroundColorPhase
presentationModifiers
layoutDependents
unsafeUnretainedDelegate
T@"<CALayerDelegate>"
securityMode
animations
%*s%@
cornerContents must be a CGImageRef for now!
cannot add layer to one context while visible in another
layer %@ has a superlayer; so cannot be added to a context
CoreAnimation: Message::send_message() returned 0x%x - size %zu, # descriptors %zu
CoreAnimation: Message::send_message() returned 0x%x
Encoder size overflow, old size = %zu, extra = %zu
Failed to allocate %zu bytes, requested = %zu, old size = %zu
Cannot send %zu bytes to the server. This exceeds mach ool capabilities!
encode_data_async
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/render/render-coding.cpp
len > 0
CoreAnimation: Decoder has no context!
CoreAnimation: Context ID mismatch!
CoreAnimation: Context is destroyed!
%s - _buffer_point = %p, _buffer_end = %p
decode_int64
%s (%u) : %s
decode_int32
%s - _buffer_point = %p, len = %zu, _buffer_end = %p
decode_bytes
decode_int8
decode_int16
%s - size = %d
decode_shape
%s - max_size = %zu, tag = %zu
decode_data
%s - buf = NULL
%s - _attach_list = %p, type = %u
%s - max_size = %zu, size = %zu
decode_data_async
decode_port
%s - expected disposition = %u, received = %u
%s - ptr = NULL
decode_atom
%s - string = NULL
%s - data = NULL
decode_cfobject
%s - value = NULL
%s - key = %p, value = %p
%s - code = %d
decode_colorspace
%s - atoms = NULL
decode_keypath
%s - ptr = NULL, required_type = %u, type = %u, id = %llu, error = %u
decode_object
%s - required_type = %u, type = %u
unable to decode object of type %d
%s - ptr == NULL, type = %u
%s - type = %u
decode_array_object
CA_BENCHMARK
invalid command: 0x%x, buffer size %zu, offset %zu
CoreAnimation: serialization error from context %x
v24@?0d8r^d16
CACGContextEvaluator
CoreAnimation: unhandled combiner function: %d
CA_LOG_IMAGE_QUEUE_FRAMES
CAImageQueue %p: frame %f (%llx) used %d: %f (%llx) detach: 0x%llx
ImageQueueCollectable client message err=0x%x
CAImageQueue::server_reply_queue
(image-queue
 0x%016llx
 async
 protected
 reduced-polling
 changed
%s%s%s%s
(generation 0x%08x)
(rotationFlags %d)
(edr-deadline %f)
(samples
unknown
buffer
iosurface
flushed
consumed
displayed
unconsumed
 opaque
 flipped
(0x%llx %s 0x%x, [%d %d; rot %d] %f (generation 0x%08x) (detach 0x%016llx) %s%s%s)
ImageQueueDidComposite client message err=0x%x
ImageQueueDidPresent client message err=0x%x
CAImageQueue
<CAImageQueue %p>
CoreAnimation: Warning! CAImageQueueSetOwner() is deprecated and does nothing. Please stop calling this method.
portrait
portraitUpsideDown
landscapeLeft
landscapeRight
NTSC_M
PAL_BGHID
composite
component
digital
YCbCr
captureDisplay
disableScaling
disableRotation
disableOverscan
disableYUV
replayContexts
noReplayScaling
kCADisplayName
kCADisplayDeviceName
kCADisplayId
kCADisplayFrameCount
kCADisplaySkippedFrameCount
kCADisplayClonedFrameCount
kCADisplaySkippedClonedFrameCount
hostProcessId
hostContextId
layerNames
disableUpdatesOnMainDisplay
displays
T@"NSArray",R
mirroringEnabled
TB,GisMirroringEnabled,V_mirroringEnabled
rendererFlags
TB,GisSecure
<CAWindowServer:%p %@>
[CAWindowServer isSecure] is deprecated! Please call isSecure on the specific CAWindowServerDisplay!
[CAWindowServer setSecure:] is deprecated! Please call setSecure: on the specific CAWindowServerDisplay!
TI,R
clones
T@"NSSet",R
cloneMaster
T@"CAWindowServerDisplay",R
blanked
TB,GisBlanked
flipBookEnabled
TB,GisFlipBookEnabled
orientation
invertsColors
allowsExtendedDynamicRange
grayscale
TB,GisGrayscale
contrast
maximumBrightness
maximumLuminance
Tf,R
nits
idealRefreshRate
usesPreferredModeRefreshRate
TVMode
TVSignalType
disablesUpdates
disabled
whitepoint
T{?=ff},R
<CAWindowServerDisplay:%p %@ %gx%g>
%@: Ignoring call to setTVSignalType:
%@: TVMode is deprecated!
%@: setTVMode: is deprecated!
[CAWindowServerDisplay setAllowsVirtualModes:] is deprecated!
[CAWindowServerDisplay allowsVirtualModes] is deprecated!
CoreAnimation: [CAWindowServerDisplay setColorMode:] is deprecated!
[CAWindowServerDisplay usesPreferredModeRefreshRate] is deprecated!
[CAWindowServerDisplay setUsesPreferredModeRefreshRate:] is deprecated!
[CAWindowServerDisplay idealRefreshRate] is deprecated!
[CAWindowServerDisplay setIdealRefreshRate:] is deprecated!
[CAWindowServerDisplay maximumRefreshRate] is deprecated!
[CAWindowServerDisplay setMaximumRefreshRate:] is deprecated!
[CAWindowServerDisplay minimumRefreshRate] is deprecated!
[CAWindowServerDisplay setMinimumRefreshRate:] is deprecated!
[CAWindowServerDisplay overscanAmount] - horizontal and vertical overscan amounts are not equal!
[CAWindowServerDisplay overscanAmount] is deprecated. Please use -overscanAmounts!
[CAWindowServerDisplay setOverscanAmount:] is deprecated. Please use -setOverscanAmounts:!
%@: %@ is not our clone
%@: can't remove a nil clone display
CAWindowServerDisplay
%@: %@ is already a clone
%@: can't clone a display that's a clone
%@: can't clone a display to itself
%@: can't clone a display to nil
PurpleSceneHack12
684F2EB9-CA09-4969-9C94-3717E450000C
PurpleSceneHack11
684F2EB9-CA09-4969-9C94-3717E450000B
PurpleSceneHack10
684F2EB9-CA09-4969-9C94-3717E450000A
PurpleSceneHack09
684F2EB9-CA09-4969-9C94-3717E4500009
PurpleSceneHack08
684F2EB9-CA09-4969-9C94-3717E4500008
PurpleSceneHack07
684F2EB9-CA09-4969-9C94-3717E4500007
PurpleSceneHack06
684F2EB9-CA09-4969-9C94-3717E4500006
PurpleSceneHack05
684F2EB9-CA09-4969-9C94-3717E4500005
PurpleSceneHack04
684F2EB9-CA09-4969-9C94-3717E4500004
PurpleSceneHack03
684F2EB9-CA09-4969-9C94-3717E4500003
PurpleSceneHack02
684F2EB9-CA09-4969-9C94-3717E4500002
PurpleSceneHack01
684F2EB9-CA09-4969-9C94-3717E4500001
PurpleTVOut
PurpleFBTVOutServer
TVOut
PurpleMain
PurpleFBServer
v24@?0^{__SFBDisplay=}8Q16
SimDisplay no UUID for display
SimDisplay cannot find display object for UID: %@
CAWindowServer
B16@?0@"CAWindowServerDisplay"8
CA_CLONE_DISPLAY
CA_MAIN_DISPLAY_SCALE
CA_EXTERNAL_DISPLAY_SCALE
Type `%s' has no property setter
source
T@"CAStateElement",&,N,V_source
function
T@"CAValueFunction",&
CAValueFunction
CAForceFieldFunction
CAForceFieldLayer
CAForceFieldEnabled
CAForceFieldName
non-zero
absolute
relative
discrete
paced
cubicPaced
autoReverse
fade
moveIn
push
reveal
fromRight
fromLeft
fromTop
fromBottom
capacity
count
%@: attempted to add modifier past group's capacity
CAPresentationModifierGroup
%@: cannot create group with 0 capacity
T@"CAPresentationModifierGroup",R
%@: value can't be nil
CAPresentationModifier
<%@:%p; keyPath = %@; additive = %d>
timingFunction
T@"CAMediaTimingFunction",&
T@"<CAAnimationDelegate>",&
removedOnCompletion
TB,GisRemovedOnCompletion
attempting to modify read-only animation %@
CAAnimationImmutable
subtype
startProgress
endProgress
values
keyTimes
timingFunctions
calculationMode
tensionValues
continuityValues
biasValues
rotationMode
unknown animation calculation mode: %@
TB,GisAdditive
cumulative
TB,GisCumulative
valueFunction
fromValue
toValue
byValue
stiffness
damping
initialVelocity
settlingDuration
Td,R
CoreAnimation: damping must be greater than or equal to 0.
CoreAnimation: stiffness must be greater than 0.
CoreAnimation: mass must be greater than 0.
targetsSuperlayer
sourcePoints
usesNormalizedCoordinates
appliesX
appliesY
appliesScale
appliesRotation
beginTimeMode
discretizesTime
roundsToInteger
startAngle
endAngle
options
transitionFlags
CoreAnimation: updates deferred for too long
continued...
%s%.*s
Invalid index
Screen blanked
Invalid update
Display is not ready
Finish update requested to try again
Update is empty
Does not need render
Update deferred
No GPU work needed
com.apple.coreanimation
WindowServer.Stall
** Render #%d tree at time %f **
~Server
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/windowserver/windowserver-server.cpp
_shutdown_called
 (secure)
%s display%s:
  %x: level %g; pid %d [%s]
 (visible)
 (decode-error)
 "%s"
(secure) 
== context %x; level %g; pid %d [%s] %sat time %f ==
  <null>
== %s display @ t %f ==
  Unsupported.
No display runloop! Ignoring latency update.
blanking context
CoreAnimation: timed out freeze semaphore
HitTest: starting (%u)
HitTest: got layer "%s"
HitTest: got context (%x)
HitTest: ending (%u)
HitTest Update: rejecting context (%x) 
 excluded
HitTest Update: rejecting layer "%s" 
 out of bounds
HitTest Update: rejecting layer "%s" 
 allowsHitTesting=NO
HitTest Update: accepting layer "%s"
(meshTransform [invalid])
(meshTransform
(vertex %d (%g %g) (%g %g %g))
(face %d (%d %d %d %d) (%g %g %g %g))
CoreAnimation: invalid mesh transform - too few edges
CoreAnimation: invalid mesh transform - vertex index
CoreAnimation: invalid mesh transform - paired edge
even-odd
miter
butt
fillRule
strokeColor
strokeStart
strokeEnd
lineWidth
miterLimit
lineCap
lineJoin
lineDashPhase
lineDashPattern
(surface machport %u)
(surface 0x%x [%d %d] 
edr %g 
protected 0x%llx 
%s %c%c%c%c
 (%.2lf %s)
 colormatching-disabled
 (colorspace "%s")
CoreAnimation: IOSurface 0x%x [%u x %u] doesn't have the proper data alignment! Expected %zu base address and %zu row byte alignment
CoreAnimation: IOSurface 0x%x ('%c%c%c%c') has unexpected bytes-per-row value of %zu, expected at least %zu for the width of %zu.
CA_MAX_TEXTURE_SIZE
(beginTime %f)
(duration %f)
(autoreverses true)
forwards
both
backwards
(fillMode %s)
(speed %f)
(timeOffset %f)
repeatCount
repeatDuration
(%s %f)
kCADebugOptionsDidChange
CA_EMIT_DEBUG_SIGNPOSTS
CA_DISPLAY_HYSTERESIS_NITS
CA_OFFSCREEN_LIMIT
CA_PERF_HUD_LEVEL
CA_PERF_HUD_OPAQUE
CA_BACKDROP_SCALE
CA_DUMP_SURFACES
CA_DUMP_HDR_SURFACES
CA_IQ_INTERPOLATION
CA_COLOR_MATCHING
CA_PERF_TIME_THRESHOLD
CA_PERF_INPUT_DELAY_THRESHOLD
CA_PERF_OFFSCREEN_THRESHOLD
CA_FRAMEBUFFER_EDR_HEADROOM
CA_DISPLAY_EDR_HEADROOM
CA_LIB_EDR_HEADROOM_REQUEST
CA_GRAY_SQUARE_LEVEL
CA_GRAY_SQUARE_SIZE
CA_PERF_HUD_ORIGIN
CA_SDR_BRIGHTNESS_NITS
CA_DISPLAY_BRIGHTNESS_NITS
CA_AMBIENT_BRIGHTNESS_NITS
CA_DISPLAY_OVERDRIVE_FIX_NITS
CA_DISPLAY_OVERDRIVE_TEMPERATURE
CA_DISPLAY_COLOR_ACCURACY_FIX_NITS
CA_ASE_MODE
CA_MAX_TONEMAP_HEADROOM
CA_TRIGGER_TAILSPIN
CA_BACKING_STORE_REUSE_WASTE_LIMIT
CA_LUMA_BOOST_SCALE
CA_LUMA_BOOST_NITS_MIN
CA_LUMA_BOOST_NITS_MAX
CA_COLOR_FLUSH
CA_COLOR_COPY
CA_COLOR_OPAQUE
CA_COLOR_NO_WAIT
CA_AUTO_FLUSH
CA_PRINT_TREE
CA_PRINT_OBJECTS
CA_LOG_IMPLICIT_TRANSACTIONS
CA_LOG_MEMORY_USAGE
CA_LOG_IMAGE_COPIES
CA_PRINT_PERF
CA_DISABLE_OCCLUSION_CULLING
CA_DISABLE_DIRTY_REGIONS
CA_LOG_TRIPLE_BUFFERING
CA_COLOR_SUBPIXEL
CA_DISABLE_RENDER
CA_ALWAYS_RENDER
CA_COLOR_OFFSCREEN
CA_COLOR_DETACHED
CA_COLOR_CACHED
CA_COLOR_FORMATS
CA_DISABLE_DETACHED
CA_PRINT_ANIMATIONS
CA_COLOR_MATCHED
CA_COLOR_UNTAGGED
CA_PRINT_BACKDROPS
CA_COLOR_BACKDROPS
CA_PRINT_SHADERS
CA_PRINT_OFFSCREENS
CA_PRINT_DETACHING
CA_PRINT_TRANSACTIONS
CA_DISABLE_FILTER_MERGING
CA_DUMP_SURFACES_PER_DRAW
CA_DISABLE_COLORMATCH_UNTAGGED
CA_COLOR_BACKING_STORES
CA_VSYNC_SIGNPOST
CA_PERF_HUD
CA_DISABLE_LOW_LATENCY
CA_PRINT_COLOR_MATRIX
CA_PERF_WARNINGS
CA_COLOR_ACTIVE_REGIONS
CA_COLOR_LOW_LATENCY
CA_PRINT_FRAME_INFO
CA_DISABLE_LOGICAL_BOUNDS
CA_THERMAL_THROTTLE
CA_DISABLE_CURVE_SOLVER
CA_COLOR_P3_CLAMP
CA_COLOR_SNAPSHOTS
CA_TEST_HDR_BLENDING
CA_DISABLE_DISPLAY_EDR_SCALING
CA_DISABLE_DISPLAY_OVERDRIVE_FIX
CA_DISABLE_DISPLAY_COLOR_ACCURACY_FIX
CA_HDMI_HDR_PACKING
CA_ASYNC_WIRELESS
CA_DISABLE_DISPLAY_IDLE
CA_DISABLE_ACCELERATED_HDR
CA_DISABLE_HDR_DISPLAY_COMPENSATION
CA_DISABLE_ASE
CA_DISABLE_ASE_RESTRICTIONS
CA_DISABLE_FRAMEBUFFER_COMPRESSION
CA_IGNORE_TAILSPIN_TIMER
CA_DISABLE_TONEMAPPING
CA_DISABLE_BACKDROP_CACHE
CA_DISABLE_OPAQUE_FRAMEBUFFER
CA_FORCE_RESOURCE_SYNC
CA_DISABLE_OLED_TONEMAPPING
CA_FORCE_REFERENCE_TONEMAPPING
CA_DISABLE_HDR_PREWARM
CA_COLOR_NON_DIRTY_FLUSH
CA_CRASH_DETACH_FAIL
CA_DISABLE_HIDDEN_CULLING
CA_DISABLE_VERTEX_COLOR_MATCHING
CA_DISABLE_MODE_SWITCHING
CA_COLOR_FLIPBOOK
CA_COLOR_UNPREMULTIPLIED
CA_DISABLE_IMAGE_QUEUE_REDUCED_POLLING
CA_DISABLE_GENERIC_SHADERS
CA_FORCE_GENERIC_SHADERS
CA_DISABLE_PIPELINE_LIBRARY
CA_ENABLE_MPS_BLURS
CA_FORCE_ENCODE_INPUT_TIME
CA_ENABLE_CACHE_DROP_HINTS
CA_PRINT_CACHE_DROP_HINTS
CA_DISABLE_REDUCED_POLLING
CA_PRINT_MSR_COPY
CA_DISABLE_LUMA_BOOST
CA_PRINT_HIT_TESTING
%d transactions
frame
frames
pass
passes
; %d %s (%.3gs duration, %.3gfps frame rate, %.3g %s, %.2gs gap)
; %d cache miss%s
; %.3g MP area
; %.3g MP drawn (%.3g overdraw)
; %.3g MB uploaded
CoreAnimation buffers: currently %.3gMB; maximum %.3gMB
inheritsSecurity
rendersAsynchronously
preservesFlip
(distance-field-layer
(renderMode %s)
(invertsShape true)
(foregroundColor #%08x)
(offset %g)
(sharpness %g)
(lineWidth %g)
fill
stroke
inner-stroke
outer-stroke
instanceCount
instanceDelay
instanceTransform
instanceColor
instanceRedOffset
instanceGreenOffset
instanceBlueOffset
instanceAlphaOffset
CoreAnimationWhippetRenderFlags
CoreAnimationWhippetLimitPasses
CAProcessCanAccessGPU
90cw
90ccw
180cw
180ccw
rotate
Unsupported pixel description - %d color components, %d bits per component, %d bits per pixel, %d bitmap info
com.apple.QuartzCore-WebKit
fontSmoothingStyle
<undefined>
CATransform3D (%g %g %g %g; %g %g %g %g; %g %g %g %g; %g %g %g %g)
CGAffineTransform (%g %g; %g %g; %g %g)
CAPoint3D (%g %g %g)
CGRect (%g %g; %g %g)
CGSize (%g %g)
CGPoint (%g %g)
%llu
%@ = 
CA Whippet FocusRing-Dilated
CA Whippet FocusRing
map_surfaces
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/windowserver/windowserver-sim-display.cpp
_sim_display
_sim_swapchain == nullptr
SimDisplay : unsupported SimColorSpace
SimDisplay skipping swap with no swapchain
hw.cpu64bit_capable
com.apple.coreanimation-archive
com.apple.coreanimation-bundle
com.apple.coreanimation-xml
TB,R,GisGeometryFlipped
publishedObjectNames
Expected CALayer at root.
stylesDocument
Unable to parse CAPackage from URL: %@
assets
Unable to parse CAPackage: %@
Expected CALayer at root
-[CAPackage _readFromArchiveData:options:error:]
%s: exception %@
publishedObjects
LKStateTransitionElement
LKStateTransition
LKStateSetProperty
LKStateSetValue
LKStateRemoveElement
LKStateRemoveAnimation
LKStateElement
LKStateAddElement
LKStateAddAnimation
LKState
backdrop 0x%lx; update %d; group %p "%s" size %zu; [%d %d; %d x %d]:
  copying to surface [%d %d; %d x %d] scale %g:
backdrop 0x%lx rect [%d %d; %d x %d]
backdrop 0x%lx complete
  applying %d merged group filters (lst %p)
(vector
disableActions
animationDuration
animationTimingFunction
animationDelegate
commitTime
earliestAutomaticCommitTime
completionBlock
animatesFromModelValues
setAnimationDuration:
setAnimationTimingFunction:
setCompletionBlock:
setDisableActions:
setAnimatesFromModelValues:
setCommitTime:
setEarliestAutomaticCommitTime:
setInputTime:
setLowLatency:
lowLatency
+[CATransaction synchronize] called within transaction
May not mark the main thread as a background transaction
CATransactionInvalidThread
@"CAAnimation"24@?0@"CALayer"8@"NSString"16
(frameInterval %f)
(discretizesTime true)
(timingFunction 
(enabled false)
(additive true)
(cumulative true)
(removedOnCompletion false)
(keyPath 
(function 
(from 
(to 
(by 
(calculationMode %s)
(values 
(keyTimes 
(timingFunctions 
(path 
(type %s)
(subtype %s)
(filter 
(options 
(mass %g)
(stiffness %g)
(damping %g)
(velocity %g)
linearPaced
(modifier
(values
 %.10g
type1
time
redAverage
greenAverage
blueAverage
luminanceStandardDeviation
groupName
usesGlobalGroupNamespace
backdropRect
marginWidth
disablesOccludedBackdropBlurs
TB,V_disablesOccludedBackdropBlurs
captureOnly
allowsInPlaceFiltering
reducesCaptureBitDepth
ignoresScreenClip
zoom
tracksLuma
T@"<CABackdropLayerDelegate><CALayerDelegate>",W,D
statisticsType
statisticsInterval
invertsShape
sharpness
wave
alignToMotion
valueOverLife
colorOverLife
light
attractor
simpleAttractor
valueOverDistance
colorOverDistance
behavior
CAEmitterBehavior requires `behavior' attribute
purge
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/ogl/ogl-mosaic.cpp
_image_unit < 0
(array
%s - null_pointer? %d, n_types %zu, types[0] = %d
decode
CA_NO_ACCEL
~ContextState
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/ogl/ogl-context.h
!next && "Imbalanced ContextState push/pop"
CoreAnimation: failed to send fence reply: %x
CoreAnimation: timed out fence %x
CoreAnimation: attempt to check-in to unknown fence port: %x
CoreAnimation: failed to receive fence reply: %x
springForce
rubberBandForce
layerA
layerB
attachmentPointA
attachmentPointB
restLength
T@"<CASpringDelegate>",W
CASpringRestLength
CASpringDamping
CASpringStiffness
CASpringDelegate
CASpringFunction
CASpringAttachmentPointB
CASpringAttachmentPointA
CASpringLayerB
CASpringLayerA
CASpringEnabled
CASpringName
(portal-layer 0x%lx
(sourceLayer 0x%lx)
(sourceContext %x)
(hidesSourceLayer true)
(matchesOpacity true)
(matchesPosition true)
(matchesTransform true)
(allowsBackdropGroups true)
T@"<CAMLWriterDelegate>",W
 %S="%S"%s
<%S%s
</%S>
&lt;
&gt;
&quot;
&apos;
&amp;
<?xml version="1.0" encoding="UTF-8"?>
xmlns
{CAColorMatrix=ffffffffffffffffffff}
scale(%g, %g, %g) 
scale(%g) 
shearXY(%gdeg) 
shearXZ(%gdeg) 
shearYZ(%gdeg) 
rotate(%gdeg, 1, 0, 0) 
rotate(%gdeg, 0, 1, 0) 
rotate(%gdeg) 
translate(%g, %g, %g) 
perspective(%g) 
matrix(%@)
NSValue
%@ %c
CATintedImage
CGImageSource
CoreAnimationErrorDomain
CA_LOG_CLASS_DESCRIPTIONS
creating class description for %s
  %s: %s
    type %d: %s flags 0x%x
classDescription_locked
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/api/CAObject.mm
info != NULL
{CGAffineTransform=dddddd}
unhandled getter type: %d
unhandled setter type: %d
{CGPoint=dd}
{CGSize=dd}
{CGRect={CGPoint=dd}{CGSize=dd}}
{CATransform3D=dddddddddddddddd}
{CAPoint3D=ddd}
[%@ initWithCoder]: ignoring exception %@
sublayers array %@ contains non-layer %@
__CACodingContents
v@:^v
^v@:
v@:@
v@:@?
@?@:
v@:B
v@:c
v@:C
v@:s
v@:S
v@:i
v@:I
v@:l
v@:L
v@:q
v@:Q
v@:f
v@:d
v@:{CGPoint=dd}
{CGPoint=dd}@:
v@:{CGSize=dd}
{CGSize=dd}@:
v@:{CGRect={CGPoint=dd}{CGSize=dd}}
{CGRect={CGPoint=dd}{CGSize=dd}}@:
v@:{CATransform3D=dddddddddddddddd}
{CATransform3D=dddddddddddddddd}@:
v@:{CGAffineTransform=dddddd}
{CGAffineTransform=dddddd}@:
v@:{CAPoint3D=ddd}
{CAPoint3D=ddd}@:
translation.z
translation.y
translation.x
translation
scale.z
scale.y
scale.x
scale.xy
rotation.y
rotation.x
rotation.z
size.height
size.width
origin.y
origin.x
size
origin
UIApplicationDidFinishLaunchingNotification
UIApplicationWillEnterForegroundNotification
UIApplicationDidEnterBackgroundNotification
CADynamicBackendSwitching
CAEnableMetalWhippet
(proxy %d 0x%llx)
port_name
port_number
client_port_number
displayFilter
bitsPerComponentHint
definesDisplayBounds
reverseFlip
CoreAnimation: [CAContext setFence:count:] is deprecated. Ignoring!
TI,R,D
T@"CALayer",&,D
colorSpace
T^{CGColorSpace=},D
commitPriority
TI,D
colorMatchUntaggedContent
TB,D
T@"NSString",C,D
annotation
T@"NSDictionary",R,D
level
Tf,D
TB,D,GisSecure
desiredDynamicRange
valid
TB,R,D
(pattern [%g %g %g %g] [%g %g]
matrix
(cell 
(gradient-layer
radial
conic
axial
(gradientType %s)
(startPoint [%.10g %.10g])
(endPoint [%.10g %.10g])
colors
locations
startPoint
endPoint
colorMap
interpolations
uuid
T@"NSString",C,N,V_uuid
T@"NSDictionary",C,N,V_mode
Td,N,V_latency
uuid: %@, mode: %@, latency:%g
uuid: %@, mode: %@
version
T@"NSString",C,N,V_version
latencies
T@"NSMutableArray",&,N,V_latencies
preferredModes
T@"NSMutableArray",&,N,V_preferredModes
hasPreferredModes
hasLatencies
hasVersion
CADisplayPersistence
CFBundleVersion
version: %@, latencies: %@, preferredModes:%@
T@"NSObject<CAStateControllerDelegate>",W
"%@" "%@"
trying to set state not in given layer.
trying to set state of nil layer.
trying to read state of nil layer.
CA DispatchGroup
v8@?0
com.apple.coreanimation.workloop_queue
failed to receive purple reply message: %x
failed to send purple message: %x
CGBitmapContextSetData failed, bpc %zu, bpp %zu, info %u
com.apple.QuartzCore-CA
CAGetColorSpace
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-815.6.1.4/LayerKit/utilities/CACGUtil.cpp
false
rgb(
unsupported surface format: %c%c%c%c
kCARendererColorSpace
kCARendererDeepBuffers
kCARendererMetalCommandQueue
kCARendererClearsDestination
com.apple.QuartzCore-CARenderer
kCARendererFlags
T@"CAContext",&
T@"<CARendererDelegate>",W
<nil>
CAIOSurfaceCreate: failed to allocate IOSurface (size: %u x %u, format: %c%c%c%c)
Writing surface to '%s'
(interpolator (factor %g)
(o%d 
CoreAnimation: GetDisplayInfo returned 0x%x
Failed to set display latency - missing UUID
Failed to register for CADisplay change notifications: 0x%x
Failed to register for CADisplay power notifications: 0x%x
CoreAnimation: rendering error %s
CAML: Failed to encode image: %s
CAMLEncodeLayerTreeToPathWithOptions failed to create output dirs at %s
CAMLEncodeLayerTreeToPathWithOptions options must be a CFDictionary
CAMLEncodeLayerTreeToPathWithOptions failed to move %s to %s
(image [%d %d] [%d] %s
 (tint %.3g %.3g %.3g %.3g)
 colormatching-disabled
 (colorspace "%s")
Failed to validate rowbytes: %zu, levels: %u height: %u
Failed to decode_data_async, size: %zu
CoreAnimation: triple buffered backing store %p
CoreAnimation: forcing %saccelerated backing
(currentTexture 
(blendedTextures
(chameleon-layer
(color %.3g %.3g %.3g %.3g)
CoreAnimation: copied CGImageRef %p - image size (%lu x %lu) exceeds max texture size
CoreAnimation: copied CGImageRef %p - mask size
CoreAnimation: copied CGImageRef %p - color matching
CoreAnimation: warning, CGImageProvider returned multiple blocks
CoreAnimation: copied CGImageRef %p - bad decode array
CoreAnimation: copied CGImageRef %p - bad mask
CoreAnimation: copied CGImageRef %p - bad mask image format (%d bpp, %d bpc)
CoreAnimation: copied CGImageRef %p - needs color matching
CoreAnimation: copied CGImageRef %p - RGB mask (bug!)
CoreAnimation: ignored CGImageRef %p - bad RGB 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - decode or mask
CoreAnimation: copied CGImageRef %p - bad RGB image format (%d bpp, %d bpc, %d info)
CoreAnimation: ignored CGImageRef %p - bad grayscale 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - bad grayscale image format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - non-RGB color model
CoreAnimation: copied CGImageRef %p - non-native format (%d)
CoreAnimation: copied CGImageRef %p - format not supported by hardware
CoreAnimation: data provider size invalid
CoreAnimation: data provider size is too small
CoreAnimation: copied CGImageRef %p - no data pointer
CoreAnimation: copied CGImageRef %p - bad image alignment
CoreAnimation: copied CGImageRef %p - bad row alignment
CoreAnimation: copied CGImageRef %p - mipmap generation
CoreAnimation: copied CGImageRef %p - bad alignment for IOSurface 0x%x
CG image cache at time %f:
  %p deadline %f %s%s%s%s%s
Unsupported image format '%s' for default colorspace
(replicatorLayer %d)
(shmem %lu bytes)
CoreAnimation: mach_make_memory_entry_64 (size %llu, addr 0x%llx, prot 0x%x, port %u) = 0x%x
CoreAnimation: failed to allocate %ld bytes
Data %p with size %zu underflow
CoreAnimation: failed to query region %p (%zu bytes)
Failed to map %ld bytes with port = %u, protection = %u, err = 0x%x
Invalid bitmap: [%u x %u], %u levels
Layer backing store allocation too large size:%ld width:%d height:%d levels:%d
Bogus ShmemBitmap : [%u x %u], %u levels
exported [%d %d] buffer to %s
(%slayer [%.10g %.10g %.10g] [%.10g %.10g %.10g %.10g] [%g %g %g]
[%d pass%s
(name 
(hidden true)
(masksToBounds true)
(geometryFlipped true)
(edgeAntialiasingMask%s%s%s%s%s)
(disableUpdateMask%s%s%s%s%s)
(contentsGravity %s)
(contentsOpaque true)
(contentsDither false)
(contentsAlignsToPixels true)
(contentsMultiplyColor %.3g %.3g %.3g %.3g)
(contentsSwizzle %s)
(motionBlurAmount %g)
(doubleSided false)
(sortsSublayers false)
(flipsHorizontalAxis true)
(opacity %g)
(cornerRadius %g)
(backgroundColor 
(backgroundColor (%.3g %.3g %.3g %.0g))
(borderWidth %g)
(borderColor 
(borderColor (%.3g %.3g %.3g %.0g))
(cornerContents 
(continuousCorners true)
(cornerContentsMasksEdges true)
(maskedCorners%s%s%s%s%s)
(contents %s
(contentsScaling repeat)
(magnificationFilter %s)
(minificationFilter %s)
(lodBias %g)
(inheritsTiming false)
(definesDisplayRegionOfInterest true)
(contentsContainsSubtitles true)
(contentsRect 
(contentsCenter 
(cornerContentsCenter 
(literalContentsCenter true)
(contentsScale %g)
(shouldRasterize true)
(rasterizationPrefersDisplayCompositing true)
(rasterizationScale %g)
(preloadsCache true)
(createsCompositingGroup true)
(allowsDisplayCompositing true)
(allowsEdgeAntialiasing true)
(wantsExtendedDynamicRangeContent true)
(allowsGroupOpacity true)
(allowsGroupBlending false)
(allowsHitTesting false)
(hitTestsContentsAlphaChannel true)
(hitTestsAsOpaque true)
(securityMode unrestricted)
(securityMode insecure)
(shadowColor (%.3g %.3g %.3g %.0g))
(shadowOpacity %g)
(shadowRadius %g)
(shadowOffset [%g %g])
(shadowPath 
(invertsShadow true)
(shadowPathIsBounds true)
(mask 
(sublayers 
(filters 
(backgroundFilters 
(compositingFilter 
(meshTransform 
(animations 
(modifiers 
(subclass 
 (group-flags [
%s%s
 (offscreen-flags [
(filter %s
(enabled false)
(inputs 
(%s 
[CA] Surface ID:0x%x detach result: %s
CoreAnimation: failed to add monotonic cube ((%g, %g) (%g, %g) (%g, %g) (%g, %g))
CoreAnimation: surface %d x %d is too large
CoreAnimation: %d by %d image is too large for GPU, ignoring
CoreAnimation: image stride is too large for GPU, ignoring
CoreAnimation: unsupported graphics hardware
; need three or more texture units
CoreAnimation: maximum %d texture units
CoreAnimation: maximum texture %d pixels
error: failed to export [%d %d] buffer to %s
[%u]
 s:[%u x %u (%.2lf %s)] b:[%u x %u (%.2lf %s)] need-clear:%d%s, id:%p
 s:framebuffer
%s%.*s
(shape-layer
(fillColor %.3g %.3g %.3g %.3g)
(strokeColor 
(strokeColor %.3g %.3g %.3g %.3g)
(strokeStart %g)
(strokeEnd %g)
(lineWidth %g)
(miterLimit %g)
(dashPhase %g)
(dashPattern 
(fillRule evenOdd)
(lineJoin %s)
(lineCap %s)
== context %x%s%s%s; pid %d [%s] %sat time %f ==
  slot %u:
HitTest: starting (%u)
HitTest: got layer "%s"
HitTest: ending (%u)
CoreAnimation: missing mask layer 0x%lx
CoreAnimation: missing sublayer %p
(%s)
(%s [%g %g %g %g; %g %g %g %g; %g %g %g %g; %g %g %g %g])
(%s [%g %g %g %g %g %g])
** Render objects at time %f **
%20s %s
%20s %d
preferred_mode_with_criteria: resolution [%g x %g], target hdr (%s), user hdr (%s), rate (%g) --> %dx%d@%g %s
CoreAnimation: LayerHost trying to host itself or one of its ancestors (context id %d)
(layer-host %x
(inherits-security true)
CoreAnimation: context hosting changed while locked!
CoreAnimation: insecure context %x - pid %u [%s].
Cannot host %x in context %x - pid %u [%s].
** Render tree at time %f (bounds %d,%d %dx%d) **
Invalid display attributes version %d
CoreAnimation: NULL color space set on context (%x)
CoreAnimation: failed to lock IOSurface %x
CoreAnimation: failed to create Metal context!
CoreAnimation: sw renderer doesn't support tiling
SW renderer invalid destination format %c%c%c%c
CoreAnimation: %d by %d image is too large for software renderer, ignoring
Commit
%{public, signpost.description:begin_time}llu seed=%{public, name=transaction_seed}#x
%{public, signpost.description:begin_time}llu
CoreAnimation: invalid commit handler phase! Defaulting to pre-commit.
CoreAnimation: warning, deleted thread with uncommitted CATransaction; created by:
CoreAnimation: warning, deleted thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
CoreAnimation: new transaction fence disabling existing low latency hint.
CoreAnimation: warning, encountered thread with uncommitted CATransaction; created by:
CoreAnimation: warning, encountered thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
display_timer_callback: unexpected state (now:%llx < expected:%llx)
(backdrop-layer %ld
(group "%s")
(usesGlobalGroupNamespace true)
(scale %g)
(zoom %g)
(marginWidth %g)
(backdropRect [%g %g; %g %g])
(captureOnly true)
(allowsInPlaceFiltering true)
(reducesCaptureBitDepth true)
(ignoresScreenClip true)
(tracksLuma true)
(buffer [%d x %d] scale %g)
collected backdrop group %p buffer %p
Filter merging aborted: layer.bounds == blur.inputBounds
(transition %s
CAML error:%d: 
CAML warning:%d: 
CA:Render:Server:port_set (): mach_port_mod_refs () returned error 0x%x
unable to find bootstrap server
unable to register bootstrap port %s: %x
(pixel-buffer %c%c%c%c [%d %d])
(image-provider [%d %d] [%d %d] [%d %d]
(fillColor 
(fillColor #%08x 
CAImageProvider: %.3gMB cached (%.3gMB purgeable); idle %.3gs -> %.3gs
CARenderServerBufferRef is now a CF type. Please use CFRetain/CFRelease instead of CARenderServerDestroyBuffer!
Ignoring [%d x %d] invalid surface dimensions
Unexpected framebuffer format %c%c%c%c
Failed to allocate [%d x %d] %c%c%c%c framebuffer %s
Failed to allocate %u-byte Metal buffer
Unable to start render command encoder
Unable to start blit command encoder
Cannot cast linear FP16 texture to sRGB sampler variant
Surface from iosurface %d x %d is too large
Surface %d x %d is too large
Failed to allocate %dx%d surface texture.
%d by %d image is too large for GPU, ignoring
Image stride is too large for GPU, ignoring
Failed to allocate MTLTexture
Failed to allocate MTLTexture from IOSurface 0x%x. Row bytes (%ld) not %ld aligned.
Failed to allocate MTLTexture from IOSurface 0x%x.
unsupported surface format: %c%c%c%c
flags=%{public, name=flags}s
flags=%{public, name=flags, signpost.telemetry:string2}s enableTelemetry=YES 
%s: %s
Building render pipeline %s with descriptor %s
CompileShader
pipeline=%{public, name=pipeline}@ precompiled=%{public, name=precompiled}u
Specializing shader function %s for %s with constant values %s
Loading shader function %s for %s
function=%{public, name=function}@ spec=%{public, name=spec}@ specialized=%{public, name=specialized}u
pipeline=%{public, name=pipeline, signpost.telemetry:string1}@ order=%{public, name=order, signpost.telemetry:number1}u enableTelemetry=YES 
pipeline=%{public, name=pipeline}@ order=%{public, name=order}u
NewRenderPipeline
pipeline=%{public, name=pipeline, signpost.telemetry:string1}@ flags=%{public, name=flags, signpost.telemetry:string2}s order=%{public, name=order, signpost.telemetry:number1}u enableTelemetry=YES 
Can't run metal against null surface
Command buffer allocation failed!
MTLCommandBuffer(%p) error = %s
Compiling render pipeline: %s
Resulting pipeline state: %p (flags=%s)
Compiling fragment shader: %s
Resulting function: %p
Compiling vertex shader: %s
Unrecognized shader spec: %s
%zu by %zu iosurface is too large for GPU
Unsupported IOSurface pixel format: %.4s
Unable to create MTLTexture for destination IOSurface
Failed to create MTLCommandQueue
Mismatched MTLCommandQueue and MTLDevice
HitTest: rejecting layer "%s" 
 kCAContextIgnoresHitTest
HitTest: rejecting layer "%s" 
 allowsHitTesting=NO
HitTest: rejecting layer "%s" 
 culled above and hitTestsAsOpaque=NO
HitTest: rejecting layer "%s" 
 hidden=YES or opacity=0
HitTest: rejecting layer "%s" 
 masksToBounds=YES and not in bounds
HitTest: rejecting layer "%s" 
 mask
HitTest: accepting layer "%s" 
 hit child "%s"
HitTest: accepting layer "%s" 
 hitTestsAsOpaque=YES and in bounds
HitTest: rejecting layer "%s" 
 culled above
HitTest: accepting layer "%s" 
 within background color
HitTest: accepting layer "%s" 
 within border
HitTest: accepting layer "%s" 
 within contents
HitTest: accepting layer "%s" 
 subclass
HitTest: rejecting layer "%s" 
 no hits
%f %x "%s" (%p): replacing %p (eval %u; frames %u):
%f %x "%s" (%p): adding %p:
%f %x "%s" (%p): not adding %p:
%f %x "%s" (%p): removing all:
%p (eval %u; frames %u):
%f %x "%s" (%p): removing %p (eval %u; frames %u):
%f %x "%s" (%p): collecting %p (t %f; speed %g; eval %u; frames %u):
(path
%g %g m
%g %g l
%g %g %g %g q
%g %g %g %g %g %g c
CoreAnimation: ignoring invalid path
(function %s)
%08x %08x vertex shader:
%s%s---
%08x %08x fragment shader:
%s%s---
CoreAnimation: disabling OpenGL extension %s
"%s"
(emitter-behavior %s
(values 
(match-move-animation
(timingFunction 
(sourceLayer 0x%lx)
(sourcePoints 
Stage = %ld, %zux%zu LUT, %zu grid points
%zux%zu LUT not supported.
unsupported NxM LUT data format
Stage = %ld matrix %ld
    %g %g %g %g
    %g %g %g %g
    %g %g %g %g
Stage = %ld, %ld TRCs
    TRC channel %d --> TRCs[%ld], Table: entries = %zu
    TRC channel %d --> TRCs[%ld], Type0: Y = X^%f 
    TRC channel %d --> TRCs[%ld], Type1: Y = (%g*X+%g)^%g [X >= %g],  Y = 0 [X < %g]
    TRC channel %d --> TRCs[%ld], Type2: Y = (%g*X+%g)^%g + %f [X >= %g],  Y = %g [X < %g]
    TRC channel %d --> TRCs[%ld], Type3: Y = (%g*X+%g)^%g [X >= %g],  Y = %g*X [X < %g]
    TRC channel %d --> TRCs[%ld], Type4: Y = (%g*X+%g)^%g + %g [X >= %g], Y = %g*X + %g [X < %g]
TRCs are not the same for each color channel, falling back to cube LUT
CGColorConverter:
    %d stages
    %d input components
    %d output components
    %d TRCs
    %d Matrices
    %d NxM LUTs
Color matching limited to 3-stage compact format (TRC -> NxM/LUT -> TRC), falling back to cube LUT
No support for more than one NxM LUT, falling back to cube LUT
Failed to iterate CGColorConverter 
'%s' --> '%s'
IOSurface Compression Enabled: %s
(compressed-image [%d %d] [%d] %s
 (%.2lf %s)
Transaction (%p) property %@ changed %@
Began transaction (%p) change on layer %p for %@, %p
cornerContents must be a CGImageRef for now!
CoreAnimation: Message::send_message() returned 0x%x
CoreAnimation: Decoder has no context!
CoreAnimation: Context ID mismatch!
CoreAnimation: Context is destroyed!
%s (%u) : %s
unable to decode object of type %d
CoreAnimation: serialization error from context %x
CoreAnimation: unhandled combiner function: %d
CAImageQueue %p: frame %f (%llx) used %d: %f (%llx) detach: 0x%llx
ImageQueueCollectable client message err=0x%x
(image-queue
 0x%016llx
%s%s%s%s
(generation 0x%08x)
(rotationFlags %d)
(edr-deadline %f)
(samples
(0x%llx %s 0x%x, [%d %d; rot %d] %f (generation 0x%08x) (detach 0x%016llx) %s%s%s)
ImageQueueDidComposite client message err=0x%x
ImageQueueDidPresent client message err=0x%x
CoreAnimation: Warning! CAImageQueueSetOwner() is deprecated and does nothing. Please stop calling this method.
CoreAnimation: updates deferred for too long
ID is update seed. refresh_interval=%{public, name=refresh_interval}llu display_id=%{public, name=display_id}#x %{public, signpost.description:begin_time}llu skipped_render_reason=%{public, name=skipped_render_reason}s
ID is update seed. refresh_interval=%{public, name=refresh_interval}llu display_id=%{public, name=display_id}#x %{public, signpost.description:begin_time}llu
RenderInterval
ID is update seed. refresh_interval=%{public, name=refresh_interval}llu display_id=%{public, name=display_id}#x %{public, signpost.description:begin_time}llu pass_count=%{public, name=pass_count}u skipped_render_reason=%{public, name=skipped_render_reason}s
ID is update seed. refresh_interval=%{public, name=refresh_interval}llu display_id=%{public, name=display_id}#x %{public, signpost.description:begin_time}llu pass_count=%{public, name=pass_count}u
** Render #%d tree at time %f **
== context %x; level %g; pid %d [%s] %sat time %f ==
No display runloop! Ignoring latency update.
CoreAnimation: timed out freeze semaphore
HitTest: got context (%x)
HitTest Update: rejecting context (%x) 
 excluded
HitTest Update: rejecting layer "%s" 
 out of bounds
HitTest Update: rejecting layer "%s" 
 allowsHitTesting=NO
HitTest Update: accepting layer "%s"
(meshTransform [invalid])
(meshTransform
(vertex %d (%g %g) (%g %g %g))
(face %d (%d %d %d %d) (%g %g %g %g))
CoreAnimation: invalid mesh transform - too few edges
CoreAnimation: invalid mesh transform - vertex index
CoreAnimation: invalid mesh transform - paired edge
(surface machport %u)
(surface 0x%x [%d %d] 
edr %g 
protected 0x%llx 
%s %c%c%c%c
CoreAnimation: IOSurface 0x%x [%u x %u] doesn't have the proper data alignment! Expected %zu base address and %zu row byte alignment
CoreAnimation: IOSurface 0x%x ('%c%c%c%c') has unexpected bytes-per-row value of %zu, expected at least %zu for the width of %zu.
(beginTime %f)
(duration %f)
(autoreverses true)
(fillMode %s)
(speed %f)
(timeOffset %f)
(%s %f)
CoreAnimation buffers: currently %.3gMB; maximum %.3gMB
(distance-field-layer
(renderMode %s)
(invertsShape true)
(foregroundColor #%08x)
(offset %g)
(sharpness %g)
SimDisplay : unsupported SimColorSpace
SimDisplay skipping swap with no swapchain
backdrop 0x%lx; update %d; group %p "%s" size %zu; [%d %d; %d x %d]:
  copying to surface [%d %d; %d x %d] scale %g:
backdrop 0x%lx rect [%d %d; %d x %d]
backdrop 0x%lx complete
  applying %d merged group filters (lst %p)
(vector
(frameInterval %f)
(discretizesTime true)
(additive true)
(cumulative true)
(removedOnCompletion false)
(keyPath 
(function 
(from 
(to 
(by 
(calculationMode %s)
(keyTimes 
(timingFunctions 
(path 
(type %s)
(subtype %s)
(filter 
(options 
(mass %g)
(stiffness %g)
(damping %g)
(velocity %g)
(modifier
(values
 %.10g
(array
CoreAnimation: failed to send fence reply: %x
CoreAnimation: timed out fence %x
CoreAnimation: attempt to check-in to unknown fence port: %x
CoreAnimation: failed to receive fence reply: %x
(portal-layer 0x%lx
(sourceContext %x)
(hidesSourceLayer true)
(matchesOpacity true)
(matchesPosition true)
(matchesTransform true)
(allowsBackdropGroups true)
creating class description for %s
  %s: %s
    type %d: %s flags 0x%x
(proxy %d 0x%llx)
(pattern [%g %g %g %g] [%g %g]
(cell 
(gradient-layer
(gradientType %s)
(startPoint [%.10g %.10g])
(endPoint [%.10g %.10g])
failed to receive purple reply message: %x
failed to send purple message: %x
CGBitmapContextSetData failed, bpc %zu, bpp %zu, info %u
CAEmitterLayer
CAEmitterLayerPrivate
CATransform3DAdditions
CAStateControllerTransition
CAAnimationDelegate
NSObject
CAStateController
CADisplay
CADisplayMode
CADisplayPreferences
NSMutableCopying
NSCopying
CAMutableDisplayPreferences
CADisplayAttributes
CADisplayProperties
CADisplayLink
CADisplayModeCriteria
CADisplayLinkPrivate
NSCoding
NSSecureCoding
CACodingProxy
LKNSArrayCodingProxy
CAIOSurfaceCodingProxy
LKNSDictionaryCodingProxy
CACGPathCodingProxy
CACGPathCodingSegment
CACGPatternCodingProxy
LKCGImageCodingProxy
LKCGColorCodingProxy
LKNSValueCodingProxy
CADebuggingArchiverDelegate
NSKeyedArchiverDelegate
CACodingCAMLWriterDelegate
CAMLWriterDelegate
CACoderAdditions
CAChameleonLayer
CAStateControllerUndo
CAStateRecorder
CAMLParser
CAFilter
CAState
CAMeshTransform
CAMeshInterpolator
CAMutableMeshTransform
CAValueFunction
CAMediaTimingFunction
CAMediaTimingFunctionBuiltin
CAMediaTimingFunctionPrivate
CAStateRemoveAnimation
CARenderValue
CATiledLayer
CATiledLayerPrivate
CAColorMatrixAdditions
CATextLayer
CATextLayerPrivate
CAScrollLayer
CALayerScrolling
CAStateTransition
CAEmitterCell
CAMediaTiming
CAPropertyInfo
CAEmitterCellPrivate
CABehavior
CADynamicsBehavior
CAStateAddAnimation
CAEAGLLayer
EAGLDrawable
CAEAGLLayerPrivate
CAStateControllerAnimation
CAPortalLayer
CATintedImage
CAPoint3DAdditions
CAStateControllerLayer
CAStateAddElement
CAStateTransitionElement
CAMetalDrawable
MTLDrawableSPI
MTLDrawable
CAMetalLayer
CAMetalLayerPrivate
CALinearMaskLayer
CALayer
CAAction
CALayerFunctions
CAActionAdditions
CALayerPrivate
CAStateSetValue
CALayerArray
CAWindowServer
CAWindowServerDisplay
CATransformLayer
CAStateElement
CAForceField
CAPresentationModifierGroup
CAPresentationModifier
CAAnimation
CATransition
CAAnimationGroup
CAKeyframeAnimation
CAPropertyAnimation
CABasicAnimation
CASpringAnimation
CAMatchMoveAnimation
CAAnimatableValue
CAAnimationPrivate
CAShapeLayer
CALayerHost
CAReplicatorLayer
CASmoothedTextLayer
CAPackage
CATransaction
CATransactionCompletionItem
CATransactionPrivate
CATransactionInternal
CABackdropLayer
CADistanceFieldLayer
CAEmitterBehavior
CASpring
CAMLWriter
CASuspendNotification
_CAObjectInternal
CAObjectCGAffineTransformAdditions
CAContextImpl
CAContext
CASlotProxy
CAStateRemoveElement
CAGradientLayer
CAGradientLayerPrivate
CADisplayPersistedLatency
CADisplayPersistedPreferredMode
CADisplayPersistedData
CARenderer
CARendererPrivate
dictionaryWithObjects:forKeys:count:
arrayWithObjects:count:
setObject:forKeyedSubscript:
numberWithInt:
setValue:forKey:
CAMLParser:setValue:forKey:
UTF8String
CAMLTypeForKey:
CAMLParserEndElement:
CAMLParserEndElement:content:
initWithBytes:length:encoding:
CAMLParserStartElement:
valueWithPoint:
valueWithSize:
valueWithRect:
setTransformStruct:
valueWithCATransform3D:
valueWithCAPoint3D:
valueWithCAColorMatrix:
instancesRespondToSelector:
defaultValueForKey:
_hasRenderLayerSubclass
CA_automaticallyNotifiesObservers:
didChangeValueForKey:
reloadValueForKeyPath:
implicitAnimationForKeyPath:
_copyRenderLayer:layerFlags:commitFlags:
_colorSpaceDidChange
_renderLayerDefinesProperty:
_renderLayerPropertyAnimationFlags:
emitterCells
setEmitterCells:
birthRate
setBirthRate:
lifetime
setLifetime:
emitterShape
setEmitterShape:
emitterMode
setEmitterMode:
emitterPosition
setEmitterPosition:
emitterZPosition
setEmitterZPosition:
emitterSize
setEmitterSize:
emitterDepth
setEmitterDepth:
velocity
setVelocity:
scale
setScale:
spin
setSpin:
renderMode
setRenderMode:
preservesDepth
setPreservesDepth:
seed
setSeed:
updateInterval
rectValue
countByEnumeratingWithState:objects:count:
count
emitterRects
emitterPath
emitterBehaviors
cullMaxZ
cullMinZ
cullRect
spinBias
emitterDuration
substringToIndex:
rangeOfString:
isEqualToString:
numberWithDouble:
setEmitterPath:
setEmitterRects:
setEmitterBehaviors:
setEmitterDuration:
setUpdateInterval:
setSpinBias:
setCullRect:
setCullMinZ:
setCullMaxZ:
valueWithBytes:objCType:
getValue:
CATransform3DValue
_controller
_layer
_transition
_beginTime
_duration
_speed
_masterKey
_animations
animationDidStart:
animationDidStop:finished:
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
init
addAnimation:
removeAnimationFromLayer:forKey:
invalidate
dealloc
layer
transition
beginTime
duration
speed
stateController:transitionDidStop:completed:
delegate
_removeTransition:layer:
removeAnimationForKey:
CAStateControllerTransition
animationForKey:
addObject:
_impl
_initWithDisplay:
_invalidate
update
immutableCopy
setDisplayProperties:
name
deviceName
displayId
connectionSeed
uniqueId
containerId
productName
availableModes
currentMode
setCurrentMode:
preferredMode
colorMode
setColorMode:
allowsVirtualModes
setAllowsVirtualModes:
bounds
frame
safeBounds
processId
isSupported
isExternal
refreshRate
heartbeatRate
minimumFrameDuration
isOverscanned
overscanAmount
overscanAmounts
overscanAdjustment
setOverscanAdjustment:
isCloned
isCloningSupported
nativeOrientation
currentOrientation
odLUTVersion
supportsExtendedColors
externalDisplayAttributes
linkQuality
latency
setLatency:
preferences
setPreferences:
preferredModeWithCriteria:
supportedHDRModes
preferredHDRModes
allowedHDRModes
overrideDisplayTimings:
mutableCopy
_setPreferredUIScale:
_setWidth:height:
_displayModeWithMode:display:
_priv
_initWithMode:display:
_display
_mode
width
height
pixelAspectRatio
isVirtual
isHighBandwidth
hdrMode
colorGamut
internalRepresentation
preferredScale
stringWithFormat:
alloc
matchContent
resolution
preferredHdrMode
willChangeValueForKey:
raise:format:
_preferredHdrType
initWithMatchContent:preferredHdrType:
mutableCopyWithZone:
copyWithZone:
initWithPreferences:
setMatchContent:
setPreferredHdrMode:
allocWithZone:
_initWithAttributes:
_edid_attributes
dolbyVision
pqEOTF
hdrStaticMetadataType1
bt2020YCC
legacyHDMIEDID
.cxx_construct
_currentMode
_overscanAdjustment
_connectionSeed
setConnectionSeed:
copy
array
displays
mainDisplay
TVOutDisplay
automaticallyNotifiesObserversForKey:
_initWithDisplayLinkItem:
addToRunLoop:forMode:
removeFromRunLoop:forMode:
timestamp
setPaused:
isPaused
setFrameInterval:
frameInterval
targetTimestamp
setPreferredFramesPerSecond:
preferredFramesPerSecond
actualFramesPerSecond
getCFRunLoop
displayLinkWithTarget:selector:
displayLinkWithDisplay:target:selector:
setResolution:
setRefreshRate:
setHdrMode:
display
setUserInfo:
maximumRefreshRate
userInfo
boolValue
shortValue
unsignedShortValue
intValue
unsignedIntValue
longValue
unsignedLongValue
longLongValue
unsignedLongLongValue
floatValue
doubleValue
CA_CGAffineTransformValue
charValue
unsignedCharValue
encodeWithCoder:
initWithCoder:
supportsSecureCoding
initWithObject:
decodedObject
_array
objectAtIndex:
initWithCapacity:
decodeObjectOfClasses:forKey:
CA_supportedClasses
encodeObject:forKey:
_surface
decodeIntForKey:
objectForKey:
initWithObjects:
bytes
length
arrayWithCapacity:
objectForKeyedSubscript:
dictionaryWithCapacity:
decodeObjectOfClass:forKey:
encodeInt:forKey:
dataWithBytesNoCopy:length:freeWhenDone:
setObject:forKey:
numberWithLong:
dictionary
_dict
nextObject
keyEnumerator
_path
addToCGPath:
initWithCGPathElement:
_type
_points
decodeDoubleForKey:
encodeDouble:forKey:
_pattern
CA_decodeObjectForKey:
CA_decodeCGFloatArray:count:forKey:
CA_encodeObject:forKey:conditional:
CA_encodeCGFloatArray:count:forKey:
_image
unarchiver:didReadData:forImage:
decodeBoolForKey:
containsValueForKey:
initWithObjectsAndKeys:
encodeBool:forKey:
archiver:formatForImage:
archiver:dataForImage:
_color
decodeFloatForKey:
encodeFloat:forKey:
_kind
CAColorMatrixValue
CAPoint3DValue
sizeValue
pointValue
objCType
_initWithReference:
bundleForClass:
archiver:willEncodeObject:
archiver:didEncodeObject:
archiver:willReplaceObject:withObject:
archiverWillFinish:
archiverDidFinish:
image
tintedImageWithCABackingStore:
isSubclassOfClass:
_resourceDir
_serial
_imageFormat
_imageEncodeOptions
_skipHiddenLayers
CAMLWriter:typeForObject:
CAMLWriter:IDForObject:
CAMLWriter:URLForResource:
CAMLWriter:shouldEncodeObject:
initWithResourceDir:
imageFormat
setImageFormat:
imageEncodeOptions
setImageEncodeOptions:
skipHiddenLayers
setSkipHiddenLayers:
opacity
isHidden
URLWithString:
URLWithString:relativeToURL:
fileURLWithPath:
objectAtIndexedSubscript:
setWithObjects:
encodeConditionalObject:forKey:
unarchiver:didDecodeObject:
initWithString:
scanDouble:
defaultManager
temporaryDirectory
path
UUID
UUIDString
removeItemAtPath:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToFile:atomically:
dataWithPropertyList:format:options:error:
moveItemAtPath:toPath:error:
begin
initRequiringSecureCoding:
lock
setDelegate:
contentsAreFlipped
numberWithBool:
encodedData
unlock
commit
initWithUTF8String:
writerWithData:
encodeObject:
_next
_state
_elements
_transitions
willAddLayer:
addElement:
addTransition:
next
state
setState:
elements
setElements:
transitions
setTransitions:
_data
setBaseURL:
baseURL
parseBytes:length:
parseString:
parseData:
parseContentsOfURL:
error
result
objectById:
elementValue
setElementValue:
attributeForKey:remove:
willLoadResourceFromURL:
didLoadResource:fromURL:
didFailToLoadResourceFromURL:
parserError:
parserWarning:
initWithFormat:arguments:
stringWithUTF8String:
errorWithDomain:code:userInfo:
initWithContentsOfURL:options:error:
parser
_name
_flags
_attr
_cache
initWithType:
initWithName:
type
setName:
isEnabled
enabled
setEnabled:
cachesInputImage
setCachesInputImage:
isAccessibility
setAccessibility:
valueForKey:
setDefaults
CA_copyRenderValue
encodeWithCAMLWriter:
endElement
beginPropertyElement:
setElementAttribute:forKey:
filterTypes
filterWithType:
filterWithName:
_basedOn
_nextDelay
_previousDelay
_enabled
_locked
_initial
removeElement:
foreachLayer:
basedOn
setBasedOn:
nextDelay
setNextDelay:
previousDelay
setPreviousDelay:
isLocked
setLocked:
isInitial
setInitial:
removeObjectIdenticalTo:
_normalization
_subdivisionSteps
_replicatesEdges
_init
initWithVertexCount:vertices:faceCount:faces:depthNormalization:
_initWithMeshTransform:
vertexCount
vertexAtIndex:
faceCount
faceAtIndex:
depthNormalization
subdivisionSteps
replicatesEdges
_constructWithData:
_subdivideToDepth:
subdividedMesh:
inverseMesh
CA_interpolateValue:byFraction:
CA_interpolateValues:::interpolator:
CA_distanceToValue:
meshTransformForLayer:
_interp
setElementContent:
initWithData:encoding:
initWithFormat:
URLStringForResource:
dataUsingEncoding:
setDepthNormalization:
setSubdivisionSteps:
setReplicatesEdges:
replaceVertexAtIndex:withVertex:
addVertex:
removeVertexAtIndex:
replaceFaceAtIndex:withFace:
addFace:
removeFaceAtIndex:
meshTransform
meshTransformWithVertexCount:vertices:faceCount:faces:depthNormalization:
initWithContentsOfURL:
initWithString:relativeToURL:
_string
_initWithName:
inputCount
outputCount
apply:result:
apply:result:parameterFunction:context:
functionWithName:
appendString:
initWithControlPoints::::
_getPoints:
getControlPointAtIndex:values:
_index
classForCoder
functionWithControlPoints::::
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
characterAtIndex:
_solveForInput:
CAMLType
_key
keyPath
matches:
apply:
setKey:
setTarget:
setSource:
setAnimation:
target
CA_prepareRenderValue
CA_copyNumericValue:
transformStruct
getObjects:andKeys:count:
CA_copyRenderKeyValueArray
fadeDuration
shouldArchiveValueForKey:
setNeedsDisplayInRect:
setContents:
invalidateContents
_dealloc
_canDisplayConcurrently
levelsOfDetail
setLevelsOfDetail:
levelsOfDetailBias
setLevelsOfDetailBias:
tileSize
setTileSize:
contents
maximumTileScale
fillColor
prefetchedTiles
canDrawConcurrently
isOpaque
contentsScale
drawInContext:
clearsContext
acceleratesDrawing
drawsAsynchronously
canDrawRect:levelOfDetail:
isDrawingEnabled
setContentsChanged
setNeedsDisplay
shouldDrawOnMainThread
initWithInt:
tiledLayer:canDrawRect:levelOfDetail:
numberWithUnsignedInt:
setNeedsDisplayInRect:levelOfDetail:
displayInRect:levelOfDetail:options:
setFillColor:
setMaximumTileScale:
setDrawingEnabled:
setNeedsDisplayInRect:levelOfDetail:options:
needsDisplayForKey:
_createStringDict
_retainTypesetter
_createTruncationToken
_preferredSize
isTruncated
_applyLinesToFunction:info:
_applyLinesToFunction:info:truncated:
_drawLine:inContext:atPoint:
_prepareContext:
string
setString:
fontSize
setFontSize:
font
setFont:
foregroundColor
setForegroundColor:
isWrapped
setWrapped:
truncationMode
setTruncationMode:
alignmentMode
setAlignmentMode:
allowsFontSubpixelQuantization
setAllowsFontSubpixelQuantization:
restoreGraphicsState
size
setCurrentContext:
graphicsContextWithGraphicsPort:flipped:
saveGraphicsState
userInterfaceLayoutDirection
sharedApplication
truncationString
setNeedsLayout
superlayer
setSizeRequisition:
initWithCharacters:length:
initWithFloat:
wrapped
setTruncationString:
insertState:atIndex:
states
indexOfObjectIdenticalTo:
removeObjectAtIndex:
stateTransitions
fromState
toState
addState:
removeState:
stateWithName:
dependentStatesOfState:
stateTransitionFrom:to:
insertObject:atIndex:
setStates:
scrollToPoint:
scrollToRect:
_scrollPoint:fromLayer:
_scrollRect:fromLayer:
_visibleRectOfLayer:
scrollMode
setScrollMode:
convertRect:toLayer:
convertRect:fromLayer:
convertPoint:fromLayer:
setBounds:
scrollPoint:
scrollRectToVisible:
visibleRect
_fromState
_toState
setFromState:
setToState:
animation
repeatDuration
autoreverses
repeatCount
timeOffset
fillMode
setBeginTime:
setDuration:
setSpeed:
setTimeOffset:
setRepeatCount:
setRepeatDuration:
setAutoreverses:
setFillMode:
valueForUndefinedKey:
setValue:forUndefinedKey:
valueForKeyPath:
setValue:forKeyPath:
style
setStyle:
lifetimeRange
setLifetimeRange:
emissionLatitude
setEmissionLatitude:
emissionLongitude
setEmissionLongitude:
emissionRange
setEmissionRange:
velocityRange
setVelocityRange:
xAcceleration
setXAcceleration:
yAcceleration
setYAcceleration:
zAcceleration
setZAcceleration:
scaleRange
setScaleRange:
scaleSpeed
setScaleSpeed:
orientationLatitude
setOrientationLatitude:
orientationLongitude
setOrientationLongitude:
orientationRange
setOrientationRange:
rotation
setRotation:
rotationRange
setRotationRange:
spinRange
setSpinRange:
color
setColor:
redRange
setRedRange:
redSpeed
setRedSpeed:
greenRange
setGreenRange:
greenSpeed
setGreenSpeed:
blueRange
setBlueRange:
blueSpeed
setBlueSpeed:
alphaRange
setAlphaRange:
alphaSpeed
setAlphaSpeed:
contentsRect
setContentsRect:
setContentsScale:
magnificationFilter
setMagnificationFilter:
minificationFilter
setMinificationFilter:
minificationFilterBias
setMinificationFilterBias:
appendFormat:
contentsFrameMode
contentsFramesPerSecond
contentsFramesPerRow
contentsFrameCount
massRange
mass
particleType
emitterCell
properties
setParticleType:
setMass:
setMassRange:
setContentsFrameMode:
setContentsFrameCount:
setContentsFramesPerRow:
setContentsFramesPerSecond:
_refcount
_uid
behavior
CA_setterForProperty:
CA_getterForProperty:
resolveInstanceMethod:
springs
setSprings:
forceFields
setForceFields:
timeStep
setTimeStep:
minimumTimeStep
setMinimumTimeStep:
stoppedVelocity
setStoppedVelocity:
stoppedAngularVelocity
setStoppedAngularVelocity:
collisionInterval
setCollisionInterval:
springScale
setSpringScale:
drag
setDrag:
angularDrag
setAngularDrag:
reactsToCollisions
setReactsToCollisions:
_animation
addAnimation:forKey:
drawableProperties
setDrawableProperties:
_win
nativeWindow
layerDidBecomeVisible:
_defersDidBecomeVisiblePostCommit
_didCommitLayer:
presentsWithTransaction
setPresentsWithTransaction:
flush
lowLatency
setInputTime:
setLowLatency:
maximumDrawableCount
isMainThread
isDrawableAvailableInternal
isDrawableAvailable
discardContents
setAsynchronous:
isAsynchronous
setMaximumDrawableCount:
inputTime
setDrawableTimeoutSeconds:
drawableTimeoutSeconds
initWithLayer:key:
sourceLayer
setSourceLayer:
sourceLayerRenderId
setSourceLayerRenderId:
sourceContextId
setSourceContextId:
hidesSourceLayer
setHidesSourceLayer:
matchesOpacity
setMatchesOpacity:
matchesPosition
setMatchesPosition:
matchesTransform
setMatchesTransform:
allowsBackdropGroups
setAllowsBackdropGroups:
contextId
context
CAMLParser:didFailToLoadResourceFromURL:
CAMLParser:didLoadResource:fromURL:
CAMLParser:resourceForURL:
CAMLParser:evaluateScriptElement:sourceURL:lineNumber:
absoluteString
initWithContentsOfURL:encoding:error:
CAMLParser:didFailToFindClassWithName:
CAMLParser:formatErrorString:arguments:lineNumber:
CAMLParser:formatWarningString:arguments:lineNumber:
CAMLParser:evaluateScriptValue:sourceURL:lineNumber:
_tint
_copy_flags
setImage:
tint
setTint:
tintedImageWithCGImage:tint:copyFlags:
tintedImageWithCGImage:tint:
endScope
beginScope
setDefaultCaptureScope:
sharedCaptureManager
newTextureWithDescriptor:iosurface:plane:
setUsage:
setFramebufferOnly:
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
setPurgeableState:
newBufferWithLength:options:
setVisibilityResultMode:offset:
setDepthStencilState:
setBlendColorRed:green:blue:alpha:
setTriangleFillMode:
setDepthBias:slopeScale:clamp:
setCullMode:
setFrontFacingWinding:
setViewport:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
setFragmentBufferOffset:atIndex:
setVertexBufferOffset:atIndex:
setFragmentBuffer:offset:atIndex:
methodForSelector:
setVertexBuffer:offset:atIndex:
renderCommandEncoderWithDescriptor:
setClearColor:
setStoreAction:
setLoadAction:
setRenderTargetHeight:
setRenderTargetWidth:
setTexture:
colorAttachments
endEncoding
generateMipmapsForTexture:
blitCommandEncoder
setDepth:
setHeight:
setTextureType:
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
mipmapLevelCount
setLabel:
newTextureViewWithPixelFormat:
pixelFormat
newTextureWithDescriptor:
setMipmapLevelCount:
setStorageMode:
usage
addScheduledHandler:
waitUntilComplete
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
popDebugGroup
pushDebugGroup:
insertDebugSignpost:
waitUntilCompleted
waitUntilScheduled
drawPrimitives:vertexStart:vertexCount:
drawPrimitives:vertexStart:vertexCount:instanceCount:
setFragmentSamplerState:atIndex:
newSamplerStateWithDescriptor:
setMaxAnisotropy:
setMipFilter:
setSAddressMode:
setTAddressMode:
setMagFilter:
setMinFilter:
setFragmentTexture:atIndex:
setScissorRect:
setRenderPipelineState:
newRenderPipelineStateWithDescriptor:error:
localizedDescription
setDestinationRGBBlendFactor:
setSourceRGBBlendFactor:
setRgbBlendOperation:
setDestinationAlphaBlendFactor:
setSourceAlphaBlendFactor:
setAlphaBlendOperation:
setBlendingEnabled:
setWriteMask:
setPixelFormat:
setVertexDescriptor:
setBufferIndex:
setOffset:
setFormat:
setStepFunction:
setStride:
layouts
attributes
setVertexFunction:
newFunctionWithName:
newFunctionWithName:constantValues:error:
setConstantValue:type:withName:
setFragmentFunction:
stringByAppendingString:
addCompletedHandler:
enqueue
commandBuffer
initWithBytesNoCopy:length:encoding:freeWhenDone:
numberWithUnsignedChar:
numberWithUnsignedInteger:
newCommandQueue
fragmentFunction
setSubmissionQueue:
label
vertexFunction
writeMask
isBlendingEnabled
rgbBlendOperation
setCompletionQueue:
alphaBlendOperation
sourceRGBBlendFactor
sourceAlphaBlendFactor
destinationRGBBlendFactor
destinationAlphaBlendFactor
device
renderPassDescriptor
setBackgroundGPUPriority:
newCaptureScopeWithCommandQueue:
minConstantBufferAlignmentBytes
bundleWithIdentifier:
linearTextureAlignmentBytes
deviceLinearReadOnlyTextureAlignmentBytes
newBufferWithBytesNoCopy:length:options:deallocator:
cpuCacheMode
setCpuCacheMode:
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
pathForResource:ofType:
newLibraryWithFile:error:
iosurfaceReadOnlyTextureAlignmentBytes
maxFragmentTextures
maxFragmentSamplers
maxTextureWidth2D
maxColorAttachments
vendorName
setGPUPriority:
_currentState
_undoStack
_nextTimer
_nextState
_nextSpeed
initWithLayer:
removeTransition:
currentState
setCurrentState:
undoStack
_keyPath
_object
_beforeObject
setKeyPath:
object
setObject:
beforeObject
setBeforeObject:
_target
.cxx_destruct
_cachedTexture
_drawableID
_sharedEvent
_insertSeed
_presentedHandlers
_status
_presentedTime
_presentScheduledInsertSeedValid
_presentScheduledInsertSeed
_presentScheduledHandlers
addPresentScheduledHandler:
status
present
presentAtTime:
presentAfterMinimumDuration:
addPresentedHandler:
presentedTime
drawableID
texture
didPresentAtTime:
hasPresentedHandlers
didScheduledPresent
initWithDrawablePrivate:layer:
releasePrivateReferences:
priv
cachedTexture
setDrawableID:
sharedEvent
setSharedEvent:
insertSeed
setInsertSeed:
setStatus:
setPresentedTime:
presentScheduledInsertSeedValid
setPresentScheduledInsertSeedValid:
presentScheduledInsertSeed
setPresentScheduledInsertSeed:
removeAllObjects
containsObject:
setDevice:
preferredDevice
setDrawableSize:
drawableSize
framebufferOnly
colorspace
setColorspace:
setColorspace:nonDefault:
nextDrawable
newDrawable
displaySyncEnabled
setDisplaySyncEnabled:
allowsNextDrawableTimeout
setAllowsNextDrawableTimeout:
setIsDrawable:
setNonDefaultColorspace:
nonDefaultColorspace
registryID
exclusiveMode
serverSyncEnabled
fenceEnabled
removeObjectsInArray:
displayCompositingInternalStatus
removeBackBuffers
setFenceEnabled:
setServerSyncEnabled:
setExclusiveMode:
drawInLinearMaskContext:
alignment
initializeTextureMemory:
copyFromLinearBytes:linearOffset:linearBytesPerRow:linearBytesPerImage:toTextureMemory:textureSlice:textureLevel:textureRegion:
finalizeTextureMemory:
newTextureLayoutWithDescriptor:isHeapOrBufferBacked:
initialize
defaultActionForKey:
cornerCurveExpansionFactor:
retainWeakReference
allowsWeakReference
CA_archivingValueForKey:
observationInfo
setObservationInfo:
position
setPosition:
zPosition
setZPosition:
transform
setTransform:
affineTransform
setAffineTransform:
setFrame:
isGeometryFlipped
setGeometryFlipped:
convertPoint:toLayer:
convertTime:fromLayer:
convertTime:toLayer:
hitTest:
containsPoint:
edgeAntialiasingMask
setEdgeAntialiasingMask:
disableUpdateMask
setDisableUpdateMask:
securityMode
setSecurityMode:
contentsFormat
setContentsFormat:
contentsGravity
setContentsGravity:
contentsScaling
setContentsScaling:
sublayers
setSublayers:
mask
setMask:
unsafeUnretainedDelegate
setUnsafeUnretainedDelegate:
removeFromSuperlayer
insertSublayer:atIndex:
addSublayer:
insertSublayer:below:
insertSublayer:above:
replaceSublayer:with:
actionForKey:
removeAllAnimations
animationKeys
_scheduleAnimationTimer
_cancelAnimationTimer
presentationLayer
modelLayer
needsDisplay
displayIfNeeded
renderInContext:
_renderBackgroundInContext:
_renderForegroundInContext:
_renderSublayersInContext:
_renderBorderInContext:
_overrideImageFormat
_retainColorSpace
_contentsFormatDidChange:
needsLayout
preferredFrameSize
layoutIfNeeded
layoutSublayers
maskedCorners
setMaskedCorners:
cornerCurve
setCornerCurve:
continuousCorners
setContinuousCorners:
anchorPoint
setAnchorPoint:
anchorPointZ
setAnchorPointZ:
cornerContents
setCornerContents:
setHidden:
isDoubleSided
setDoubleSided:
setOpaque:
needsDisplayOnBoundsChange
setNeedsDisplayOnBoundsChange:
sublayerTransform
setSublayerTransform:
contentsCenter
setContentsCenter:
cornerContentsCenter
setCornerContentsCenter:
cornerContentsMasksEdges
setCornerContentsMasksEdges:
contentsContainsSubtitles
setContentsContainsSubtitles:
setOpacity:
backgroundColor
setBackgroundColor:
masksToBounds
setMasksToBounds:
filters
setFilters:
backgroundFilters
setBackgroundFilters:
compositingFilter
setCompositingFilter:
actions
setActions:
borderColor
setBorderColor:
borderWidth
setBorderWidth:
cornerRadius
setCornerRadius:
contentsMultiplyColor
setContentsMultiplyColor:
contentsSwizzle
setContentsSwizzle:
shadowOpacity
setShadowOpacity:
shadowColor
setShadowColor:
shadowOffset
setShadowOffset:
shadowRadius
setShadowRadius:
setShadowPath:
shadowPath
shouldRasterize
setShouldRasterize:
rasterizationPrefersDisplayCompositing
setRasterizationPrefersDisplayCompositing:
rasterizationScale
setRasterizationScale:
setDrawsAsynchronously:
allowsEdgeAntialiasing
setAllowsEdgeAntialiasing:
allowsGroupOpacity
setAllowsGroupOpacity:
runActionForKey:object:arguments:
needsLayoutOnGeometryChange
layoutSublayersOfLayer:
_layoutSublayersOfLayer:
ancestorSharedWithLayer:
applyForTime:presentationObject:modelObject:
setBeginTimeMode:
beginTimeMode
CA_addValue:multipliedBy:
additive
value
sizeRequisition
drawLayer:inContext:
integerValue
drawsMipmapLevels
layerWillDraw:
displayLayer:
literalContentsCenter
contentsTransform
_propertyFlagsForLayer:
isRemovedOnCompletion
setTimingFunction:
setDefaultDuration:
_implicitAnimationForLayer:keyPath:
actionForLayer:forKey:
initWithLayers:count:retain:
sortsSublayers
allowsHitTesting
ignoresHitTesting
substringFromIndex:
instanceMethodForSelector:
infoDictionary
mainBundle
initWithUnsignedInt:
initWithDouble:
behaviors
setBehaviors:
getRendererInfo:size:
beginElement:
_renderImageCopyFlags
removeObject:
weakObjectsHashTable
_copyRenderAnimationForLayer:
performSelectorOnMainThread:withObject:waitUntilDone:
setFromValue:
isDescendantOf:
motionBlurAmount
backgroundColorPhase
preloadsCache
createsCompositingGroup
allowsDisplayCompositing
wantsExtendedDynamicRangeContent
allowsGroupBlending
hitTestsContentsAlphaChannel
hitTestsAsOpaque
inheritsTiming
definesDisplayRegionOfInterest
invertsShadow
shadowPathIsBounds
allObjects
hasBeenCommitted
clearHasBeenCommitted
setMeshTransform:
regionBeingDrawn
layoutIsActive
layoutBelowIfNeeded
layerBeingDrawn
layerAtTime:
addPresentationModifier:
removePresentationModifier:
presentationModifiers
setPresentationModifiers:
addLayoutDependent:
removeLayoutDependent:
layoutDependents
setLayoutDependents:
recursiveDescription
hidden
opaque
doubleSided
isFlipped
setFlipped:
setAllowsHitTesting:
setHitTestsContentsAlphaChannel:
setHitTestsAsOpaque:
setLiteralContentsCenter:
setCanDrawConcurrently:
setClearsContext:
isFrozen
setFrozen:
setNeedsLayoutOnGeometryChange:
setSortsSublayers:
flipsHorizontalAxis
setFlipsHorizontalAxis:
setInvertsShadow:
setShadowPathIsBounds:
setContentsTransform:
contentsAlignsToPixels
setContentsAlignsToPixels:
contentsDither
setContentsDither:
contentsOpaque
setContentsOpaque:
setInheritsTiming:
setMotionBlurAmount:
setPreloadsCache:
setCreatesCompositingGroup:
setAllowsDisplayCompositing:
setWantsExtendedDynamicRangeContent:
setAllowsGroupBlending:
setBackgroundColorPhase:
setAcceleratesDrawing:
setDefinesDisplayRegionOfInterest:
needsLayoutForKey:
_value
setValue:
initWithArray:
_ivars
getObjects:
getObjects:range:
initWithObjects:count:
_mirroringEnabled
addDisplay:
removeDisplay:
removeAllDisplays
displayWithName:
displayWithDisplayId:
displayWithUniqueId:
_detectSimDisplays
_detectDisplays
setRendererFlags:
rendererFlags
setSecure:
isSecure
secureModeViolations
insecureProcessIds
clientPortOfContextId:
taskNamePortOfContextId:
contextIdHostingContextId:
isMirroringEnabled
setMirroringEnabled:
_initWithCADisplayServer:
contextIdAtPosition:
contextIdAtPosition:excludingContextIds:
clientPortAtPosition:
convertPoint:toContextId:
convertPoint:fromContextId:
clones
addClone:options:
addClone:
removeClone:
removeAllClones
cloneMaster
setBlanked:
isBlanked
willUnblank
setCalibrationPhase:forIdentifier:
setFlipBookEnabled:
isFlipBookEnabled
setOrientation:
orientation
setOverscanAmount:
setOverscanAmounts:
setInvertsColors:
invertsColors
setAllowsExtendedDynamicRange:
allowsExtendedDynamicRange
setGrayscale:
isGrayscale
setColorMatrix:scale:rampDuration:
nits
setNits:
setAccessibilityColorMatrix:scale:
setContrast:
contrast
setMaximumBrightness:
maximumBrightness
maximumLuminance
setMinimumRefreshRate:
minimumRefreshRate
setMaximumRefreshRate:
setIdealRefreshRate:
idealRefreshRate
setUsesPreferredModeRefreshRate:
usesPreferredModeRefreshRate
setTag:
setProcessId:
setTVMode:
TVMode
setTVSignalType:
TVSignalType
freeze
setDisablesUpdates:
disablesUpdates
setDisabled:
disabled
whitepoint
contextWithOptions:
server
serverWithOptions:
serverIfRunning
firstObject
localContextWithOptions:
remoteContextWithOptions:
_source
targetName
save
source
_function
setLayer:
function
setFunction:
forceField
_shmem
_capacity
_count
nextSlot
resetBitMask
markWritten:
shmem
capacity
groupWithCapacity:
_group
initWithKeyPath:initialValue:additive:
initWithKeyPath:initialValue:additive:group:
group
write
_setCARenderAnimation:layer:
removedOnCompletion
setRemovedOnCompletion:
timingFunction
discretizesTime
CA_encodesPropertyConditionally:type:
setType:
subtype
setSubtype:
startProgress
setStartProgress:
endProgress
setEndProgress:
filter
setFilter:
transitionFlags
options
animations
setAnimations:
calculationMode
setCalculationMode:
keyTimes
setKeyTimes:
timingFunctions
setTimingFunctions:
values
setValues:
setPath:
tensionValues
setTensionValues:
continuityValues
setContinuityValues:
biasValues
setBiasValues:
rotationMode
setRotationMode:
isAdditive
valueFunction
isCumulative
setAdditive:
setCumulative:
setValueFunction:
cumulative
animationWithKeyPath:
fromValue
toValue
setToValue:
byValue
setByValue:
_timeFunction:
CA_roundToIntegerFromValue:
roundsToInteger
endAngle
startAngle
settlingDuration
stiffness
setStiffness:
damping
setDamping:
setInitialVelocity:
initialVelocity
durationForEpsilon:
sourcePoints
setSourcePoints:
targetsSuperlayer
setTargetsSuperlayer:
usesNormalizedCoordinates
setUsesNormalizedCoordinates:
appliesX
setAppliesX:
appliesY
setAppliesY:
appliesScale
setAppliesScale:
appliesRotation
setAppliesRotation:
setDiscretizesTime:
setRoundsToInteger:
setStartAngle:
setEndAngle:
setOptions:
setTransitionFlags:
value:withObjCType:
fillRule
setFillRule:
strokeColor
setStrokeColor:
strokeStart
setStrokeStart:
strokeEnd
setStrokeEnd:
lineWidth
setLineWidth:
miterLimit
setMiterLimit:
lineJoin
setLineJoin:
lineCap
setLineCap:
lineDashPattern
setLineDashPattern:
lineDashPhase
setLineDashPhase:
setContextId:
inheritsSecurity
setInheritsSecurity:
rendersAsynchronously
setRendersAsynchronously:
preservesFlip
setPreservesFlip:
instanceCount
setInstanceCount:
instanceDelay
setInstanceDelay:
instanceTransform
setInstanceTransform:
instanceColor
setInstanceColor:
instanceRedOffset
setInstanceRedOffset:
instanceGreenOffset
setInstanceGreenOffset:
instanceBlueOffset
setInstanceBlueOffset:
instanceAlphaOffset
setInstanceAlphaOffset:
setParameter:to:
initWithAPI:properties:
sharegroup
getMacroContextPrivate
fontSmoothingStyle
setFontSmoothingStyle:
_initWithContentsOfURL:type:options:error:
_initWithData:type:options:error:
substitutedClasses
_addClassSubstitutions:
_readFromArchiveData:options:error:
_readFromCAMLData:type:options:error:
_readFromCAMLURL:type:options:error:
rootLayer
publishedObjectNames
publishedObjectWithName:
unarchiver:cannotDecodeObjectOfClassName:originalClasses:
allKeys
propertyListWithData:options:format:error:
stringByAppendingPathComponent:
fileURLWithPath:isDirectory:
URLByDeletingLastPathComponent
reason
finishDecoding
initForReadingFromData:error:
setClass:forClassName:
packageWithContentsOfURL:type:options:error:
packageWithData:type:options:error:
animationDuration
setAnimationDuration:
animationTimingFunction
setAnimationTimingFunction:
disableActions
setDisableActions:
completionBlock
setCompletionBlock:
completionItem
addCommitHandler:forPhase:
pushAnimator:
popAnimator
animator
setCommitHandler:
currentPhase
setPresentationHandler:queue:
activate
activateBackground:
synchronize
animatesFromModelValues
setAnimatesFromModelValues:
commitTime
setCommitTime:
earliestAutomaticCommitTime
setEarliestAutomaticCommitTime:
disableRunLoopObserverCommits
setDisableRunLoopObserverCommits:
generateSeed
assertInactive
_disablesOccludedBackdropBlurs
statisticsValues
groupName
setGroupName:
usesGlobalGroupNamespace
setUsesGlobalGroupNamespace:
backdropRect
setBackdropRect:
zoom
setZoom:
marginWidth
setMarginWidth:
captureOnly
setCaptureOnly:
allowsInPlaceFiltering
setAllowsInPlaceFiltering:
reducesCaptureBitDepth
setReducesCaptureBitDepth:
ignoresScreenClip
setIgnoresScreenClip:
tracksLuma
setTracksLuma:
statisticsType
setStatisticsType:
statisticsInterval
setStatisticsInterval:
disablesOccludedBackdropBlurs
setDisablesOccludedBackdropBlurs:
numberWithFloat:
backdropLayer:didChangeLuma:
invertsShape
setInvertsShape:
offset
sharpness
setSharpness:
behaviorTypes
behaviorWithType:
_layerA
_layerB
_attachmentPointA
_attachmentPointB
_stiffness
_damping
_restLength
_delegate
layerA
setLayerA:
layerB
setLayerB:
attachmentPointA
setAttachmentPointA:
attachmentPointB
setAttachmentPointB:
restLength
setRestLength:
spring
initWithData:
encodeObject:conditionally:
_writeElementTree:
stringByAddingPercentEncodingWithAllowedCharacters:
URLPathAllowedCharacterSet
pathWithComponents:
subarrayWithRange:
pathComponents
isFileURL
relativePath
compare:
sortedArrayUsingSelector:
willSuspend:
willUnsuspend:
numberWithChar:
CA_shouldArchiveValueForKey:ofObject:
CA_CAMLPropertyForKey:
numberWithUnsignedLong:
numberWithLongLong:
numberWithUnsignedLongLong:
raise:format:arguments:
hasPrefix:
setScanLocation:
scanInt:
scanLocation
replaceObjectAtIndex:withObject:
defaultCenter
addObserver:selector:name:object:
numberWithShort:
numberWithUnsignedShort:
initWithOptions:localContext:
initRemoteWithOptions:
colorSpace
setColorSpace:
commitPriority
setCommitPriority:
colorMatchUntaggedContent
setColorMatchUntaggedContent:
orderAbove:
orderBelow:
setLevel:
level
setDesiredDynamicRange:
desiredDynamicRange
valid
createFencePort
setFencePort:
setFencePort:commitHandler:
setFence:count:
invalidateFences
createSlot
createImageSlot:hasAlpha:
createImageSlot:hasAlpha:extendedColors:
deleteSlot:
setObject:forSlot:
hitTestContext:
annotation
setAnnotation:
renderContext
retainRenderContext
allContexts
currentContext
localContext
remoteContext
setClientPort:
objectForSlot:
_proxy
colors
setColors:
locations
setLocations:
startPoint
setStartPoint:
endPoint
setEndPoint:
interpolations
setInterpolations:
colorMap
setColorMap:
_uuid
_latency
uuid
setUuid:
mode
setMode:
_version
_latencies
_preferredModes
setLatency:forUUID:andMode:
latencyForUUID:andMode:
setPreferredMode:forUUID:
preferredModeForUUID:
version
setVersion:
latencies
setLatencies:
preferredModes
setPreferredModes:
supportedClasses
archivedDataWithRootObject:requiringSecureCoding:error:
objectForInfoDictionaryKey:
sharedInstance
unarchivedObjectOfClass:fromData:error:
stateOfLayer:
setState:ofLayer:transitionSpeed:
setState:ofLayer:
setInitialStatesOfLayer:transitionSpeed:
setInitialStatesOfLayer:
removeAllStateChanges
restoreStateChanges:
cancelTimers
_nextStateTimer:
_addAnimation:forKey:target:undo:
_applyTransition:layer:undo:speed:
_applyTransitionElement:layer:undo:speed:
stateController:transitionDidStart:speed:
setCAStateControllerTransition:
stateController:didSetStateOfLayer:
addTimer:forMode:
mainRunLoop
timerWithTimeInterval:target:selector:userInfo:repeats:
_initWithOptions:
_initWithMTLTexture:options:
setDestination:
_initWithEAGLContext:options:
beginFrameAtTime:timeStamp:
updateBounds
addUpdateRect:
nextFrameTime
hasMissingContent
render
endFrame
rendererDidChange:
rendererWithMTLTexture:options:
rendererWithEAGLContext:options:
setContext:
cStringUsingEncoding:
@24@0:8@16
B16@0:8
B24@0:8#16
v24@0:8@16
^{Layer=^^?{Atomic={?=i}}{Data={Vec4<float>=ffff}CCCCb4b4b4b4b4b5b2b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1{Vec2<double>=dd}{Rect=dddd}}{Ref<CA::Render::Object>=^{Object}}{Ref<CA::Render::TypedArray<CA::Render::Layer> >=^{TypedArray<CA::Render::Layer>}}^{Layer}{Ref<CA::Render::Layer::Ext>=^{Ext}}{Ref<CA::Render::TypedArray<CA::Render::Animation> >=^{TypedArray<CA::Render::Animation>}}{Ref<CA::Render::Handle>=^{Handle}}}36@0:8^{Transaction=^{Shared}i^{HashTable<CA::Layer *, unsigned int *>}^{SpinLock}I^{Level}^{List<void (^)()>}^{Command}^{Deleted}^{List<const void *>}^{Context}^{HashTable<CA::Layer *, CA::Layer *>}^{__CFRunLoop}^{__CFRunLoopObserver}^{LayoutList}^{List<CA::Layer *>}{Atomic={?=i}}b1b1b1b1b1}16I24^I28
v16@0:8
B20@0:8I16
I20@0:8I16
@16@0:8
f16@0:8
v20@0:8f16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
d16@0:8
v24@0:8d16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
v20@0:8B16
I16@0:8
v20@0:8I16
v24@0:8^{CGPath=}16
r^{CGPath=}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CATransform3D=dddddddddddddddd}16@0:8
@144@0:8{CATransform3D=dddddddddddddddd}16
@"CAStateController"
@"CALayer"
@"CAStateTransition"
@"NSString"
@"NSMutableArray"
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
v28@0:8@16B24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v32@0:8@16@24
@24@0:8^{Display=^^?{Mutex={_opaque_pthread_mutex_t=q[56c]}}{SpinLock={?=i}}@^{__CFString}^{__CFString}III^{__CFString}^{__CFString}^{__CFString}{ModeSet={vector<CA::WindowServer::Display::Mode, std::__1::allocator<CA::WindowServer::Display::Mode> >=^{Mode}^{Mode}{__compressed_pair<CA::WindowServer::Display::Mode *, std::__1::allocator<CA::WindowServer::Display::Mode> >=^{Mode}}}{set<std::__1::tuple<unsigned short, unsigned short>, std::__1::less<std::__1::tuple<unsigned short, unsigned short> >, std::__1::allocator<std::__1::tuple<unsigned short, unsigned short> > >={__tree<std::__1::tuple<unsigned short, unsigned short>, std::__1::less<std::__1::tuple<unsigned short, unsigned short> >, std::__1::allocator<std::__1::tuple<unsigned short, unsigned short> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::tuple<unsigned short, unsigned short>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::tuple<unsigned short, unsigned short> > >=Q}}}}{Mode=(?={?=b16b16b1b23b1b4b2b1}Q)}{Mode=(?={?=b16b16b1b23b1b4b2b1}Q)}{Bounds=iiii}{Bounds=iiii}{Vec2<float>=ff}{EDIDAttributes=iiiiB}diIiddI{DisplayShmemInfo=^^?{SpinLock={?=i}}{Ref<CA::Render::Shmem>=^{Shmem}}^{DisplayTimings}}IIIiIdIb1b1b1b1b1b1b1b1b1b1b1b1b1}16
q16@0:8
i16@0:8
^{CADisplayModePriv={Mode=(?={?=b16b16b1b23b1b4b2b1}Q)}@QQI}
@32@0:8{Mode=(?={?=b16b16b1b23b1b4b2b1}Q)}16@24
{Mode=(?={?=b16b16b1b23b1b4b2b1}Q)}16@0:8
v32@0:8Q16Q24
^{CADisplayPreferencesPriv=Bi}
@24@0:8^{_NSZone=}16
@24@0:8B16i20
{EDIDAttributes="dolbyVision"i"pqEOTF"i"bt2020YCC"i"hdrStaticMetadataType1"i"legacyHDMI"B}
@36@0:8{EDIDAttributes=iiiiB}16
@"CADisplayMode"
@24@0:8^{DisplayLinkItem=^{Display}^v:^vii{Mutex={_opaque_pthread_mutex_t=q[56c]}}{Condition={_opaque_pthread_cond_t=q[40c]}}^{_opaque_pthread_t}@{Ref<CA::Display::DisplayLink>=^{DisplayLink}}^{List<const __CFString *>}QQQQQ{Atomic={?=i}}b1b1}16
v24@0:8q16
@32@0:8@16:24
^{CADisplayModeCriteriaPriv={CGSize=dd}di}
@40@0:8@16@24:32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSArray"
^{__IOSurface=}
@"NSDictionary"
^{CGPath=}
[3{CGPoint="x"d"y"d}]
@24@0:8r^{CGPathElement=i^{CGPoint}}16
^{CGPattern=}
^{CGImage=}
^{CGColor=}
(?="point"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}"rect"{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}"transform"{CATransform3D="m11"d"m12"d"m13"d"m14"d"m21"d"m22"d"m23"d"m24"d"m31"d"m32"d"m33"d"m34"d"m41"d"m42"d"m43"d"m44"d}"point3d"{CAPoint3D="x"d"y"d"z"d}"color_matrix"{CAColorMatrix="m11"f"m12"f"m13"f"m14"f"m15"f"m21"f"m22"f"m23"f"m24"f"m25"f"m31"f"m32"f"m33"f"m34"f"m35"f"m41"f"m42"f"m43"f"m44"f"m45"f}"affine_transform"{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d})
@32@0:8@"NSKeyedArchiver"16@24
v32@0:8@"NSKeyedArchiver"16@24
v40@0:8@"NSKeyedArchiver"16@24@32
v24@0:8@"NSKeyedArchiver"16
@32@0:8@16@24
v40@0:8@16@24@32
@"NSString"32@0:8@"CAMLWriter"16@24
@"NSURL"32@0:8@"CAMLWriter"16@24
B32@0:8@"CAMLWriter"16@24
B32@0:8@16@24
v36@0:8@16@24B32
v40@0:8r^d16Q24@32
B40@0:8^d16Q24@32
@"CAStateControllerUndo"
@"CAState"
v24@0:8@"CAStateElement"16
v24@0:8@"CALayer"16
^{_CAMLParserData=}
B32@0:8r*16Q24
@28@0:8@16B24
^{Object=^^?{Atomic={?=i}}}16@0:8
v24@0:8@?16
@56@0:8Q16r^{CAMeshVertex={CGPoint=dd}{CAPoint3D=ddd}}24Q32r^{CAMeshFace=[4I][4f]}40@48
{CAMeshVertex={CGPoint=dd}{CAPoint3D=ddd}}24@0:8Q16
{CAMeshFace=[4I][4f]}24@0:8Q16
@24@0:8q16
@20@0:8i16
@28@0:8@16f24
@48@0:8@16@24@32r^{ValueInterpolator=dddddddddB}40
d24@0:8@16
^{Interpolator=^^?{Atomic={?=i}}{Ref<CA::Render::Object>=^{Object}}{Ref<CA::Render::Object>=^{Object}}{Ref<CA::Render::Object>=^{Object}}{Ref<CA::Render::Object>=^{Object}}{ValueInterpolator=dddddddddB}}
v20@0:8i16
v64@0:8Q16{CAMeshVertex={CGPoint=dd}{CAPoint3D=ddd}}24
v56@0:8{CAMeshVertex={CGPoint=dd}{CAPoint3D=ddd}}16
v24@0:8Q16
v56@0:8Q16{CAMeshFace=[4I][4f]}24
v48@0:8{CAMeshFace=[4I][4f]}16
B32@0:8r^d16^d24
B48@0:8r^d16^d24^?32^v40
^{CAMediaTimingFunctionPrivate=[2f][2f]}
@32@0:8f16f20f24f28
v24@0:8^d16
v32@0:8Q16[2f]24
f20@0:8f16
Q24@0:8[20d]16
^{KeyValueArray=^^?{Atomic={?=i}}I[1^{Object}]}16@0:8
v60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48@52
v52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48
B52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48
^{CGColor=}16@0:8
v24@0:8^{CGColor=}16
{CAColorMatrix=ffffffffffffffffffff}16@0:8
@96@0:8{CAColorMatrix=ffffffffffffffffffff}16
^{CATextLayerPrivate=}
^{__CTTypesetter=}16@0:8
^{__CTLine=}16@0:8
v32@0:8^?16^v24
v40@0:8^?16^v24^B32
v48@0:8^{__CTLine=}16^{CGContext=}24{CGPoint=dd}32
v24@0:8^{CGContext=}16
r^v16@0:8
v24@0:8^v16
v28@0:8@16I24
v40@0:8{CGPoint=dd}16@32
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
[2^v]
v24@0:8@"NSString"16
@"NSArray"16@0:8
^?24@0:8r^{_CAPropertyInfo=I[2:]b16b16*^{__CFString}}16
@"CAAnimation"
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
^{_CAEAGLNativeWindow={_EAGLWindowObject=^?^?^?}^{CAEAGLBuffer}IQ{Atomic={?=i}}{Atomic={?=i}}{SpinLock={?=i}}^{_CAImageQueue}@dd^{x_list_struct}I^{CAEAGLBuffer}^{CAEAGLBuffer}III^{CAEAGLBuffer}@{Atomic={?=i}}Qb1b1b1b1}
^{_EAGLWindowObject=^?^?^?}16@0:8
v24@0:8^{Transaction=^{Shared}i^{HashTable<CA::Layer *, unsigned int *>}^{SpinLock}I^{Level}^{List<void (^)()>}^{Command}^{Deleted}^{List<const void *>}^{Context}^{HashTable<CA::Layer *, CA::Layer *>}^{__CFRunLoop}^{__CFRunLoopObserver}^{LayoutList}^{List<CA::Layer *>}{Atomic={?=i}}b1b1b1b1b1}16
^v16@0:8
^{CGImage=}16@0:8
v24@0:8^{CGImage=}16
@36@0:8^{CGImage=}16^{CGColor=}24I32
@32@0:8^{CGImage=}16^{CGColor=}24
@24@0:8^{CABackingStore=}16
{CAPoint3D=ddd}16@0:8
@40@0:8{CAPoint3D=ddd}16
@"NSTimer"
^{_CAMetalDrawablePrivate={Atomic={?=i}}IIIQQ^{_CAMetalLayerPrivate}^{__IOSurface}@@^{CGColorSpace}Ib1b1b1b1b1}
@"<MTLTexture>"
@"CAMetalLayer"
@"IOSurfaceSharedEvent"
v24@0:8@?<v@?@"<MTLDrawable>">16
@"<MTLTexture>"16@0:8
@"CAMetalLayer"16@0:8
@32@0:8^{_CAMetalDrawablePrivate={Atomic={?=i}}IIIQQ^{_CAMetalLayerPrivate}^{__IOSurface}@@^{CGColorSpace}Ib1b1b1b1b1}16@24
v24@0:8^{_CAMetalLayerPrivate={Atomic={?=i}}{Atomic={?=i}}{SpinLock={?=i}}^{_CAImageQueue}@dd^{List<_CAMetalDrawablePrivate *>}I@@QQ{CGSize=dd}IIII{Atomic={?=i}}@{Atomic={?=i}}{Atomic={?=i}}@{SpinLock={?=i}}@Q{SpinLock={?=i}}@Q^{CGColorSpace}Qb1b1b1b1b1b1b1b1b1}16
^{_CAMetalDrawablePrivate={Atomic={?=i}}IIIQQ^{_CAMetalLayerPrivate}^{__IOSurface}@@^{CGColorSpace}Ib1b1b1b1b1}16@0:8
^{_CAMetalLayerPrivate={Atomic={?=i}}{Atomic={?=i}}{SpinLock={?=i}}^{_CAImageQueue}@dd^{List<_CAMetalDrawablePrivate *>}I@@QQ{CGSize=dd}IIII{Atomic={?=i}}@{Atomic={?=i}}{Atomic={?=i}}@{SpinLock={?=i}}@Q{SpinLock={?=i}}@Q^{CGColorSpace}Qb1b1b1b1b1b1b1b1b1}
^{CGColorSpace=}16@0:8
v24@0:8^{CGColorSpace=}16
v28@0:8^{CGColorSpace=}16B24
v24@0:8^{CALinearMaskContext=}16
{_CALayerIvars="refcount"i"magic"I"layer"^v}
v144@0:8{CATransform3D=dddddddddddddddd}16
{CGAffineTransform=dddddd}16@0:8
v64@0:8{CGAffineTransform=dddddd}16
{CGPoint=dd}40@0:8{CGPoint=dd}16@32
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
d32@0:8d16@24
@32@0:8{CGPoint=dd}16
B32@0:8{CGPoint=dd}16
v40@0:8@"NSString"16@24@"NSDictionary"32
B32@0:8^{_CARenderRendererInfo=iII}16Q24
@24@0:8d16
{_CALayerArrayIvars="layers"^@"count"Q"capacity"Q"mutations"Q"retained"B}
@36@0:8^@16Q24B32
@24@0:8Q16
v24@0:8^@16
v40@0:8^@16{_NSRange=QQ}24
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
^{CAWindowServerImpl=^{__CFArray}^{__SFBConnection}I}
@20@0:8I16
^{CAWindowServerDisplayImpl={Mutex={_opaque_pthread_mutex_t=q[56c]}}^{Server}}
@24@0:8^{Server=^^?{SpinLock={?=i}}{Mutex={_opaque_pthread_mutex_t=q[56c]}}@^{Display}^{__CFString}^{ContextItem}QQ^{ContextItem}Q{SpinLock={?=i}}^{PendingOperation}^{Context}^{Shape}I^{Context}^{Renderer}{Bounds=iiii}ddIb1b1b1b1b1b1b1b1b1b1}16
I32@0:8{CGPoint=dd}16
I40@0:8{CGPoint=dd}16@32
{CGPoint=dd}36@0:8{CGPoint=dd}16I32
v24@0:8I16I20
v36@0:8^f16f24d28
v28@0:8^f16f24
{?=ff}16@0:8
@"CAStateElement"
@"CAValueFunction"
^{Shmem=^^?{Atomic={?=i}}Q^vI{Atomic={?=i}}^?^v}16@0:8
@36@0:8@16@24B32
@44@0:8@16@24B32@36
B32@0:8^{Animation=^^?{Atomic={?=i}}f{Ref<CA::Render::Timing>=^{Timing}}{Ref<CA::Render::Vector>=^{Vector}}^{__CFString}QIIII}16@24
I24@0:8@16
B24@0:8I16i20
^{Animation=^^?{Atomic={?=i}}f{Ref<CA::Render::Timing>=^{Timing}}{Ref<CA::Render::Vector>=^{Vector}}^{__CFString}QIIII}24@0:8@16
v40@0:8d16@24@32
d24@0:8d16
@28@0:8@16i24
^{_CAPackageData=@@@BB@@}
@48@0:8@16@24@32^@40
v40@0:8@16@24^@32
v48@0:8@16@24@32^@40
#40@0:8@16@24@32
#32@0:8@16@24
@?16@0:8
v28@0:8@?16i24
v32@0:8@?16@24
{CGPoint="x"d"y"d}
^{_CAMLWriterPriv=^{__CFData}^{__CFURL}@^{_CAMLWriterElement}^{__CFString}^{__CFSet}ib1b1b1b1}
v24@0:8^{_CAMLWriterElement=^{_CAMLWriterElement}^{_CAMLWriterElement}^{_CAMLWriterElement}^^{_CAMLWriterElement}^v^{__CFString}^{_CAMLWriterAttribute}^^{_CAMLWriterAttribute}^{__CFString}I}16
^{Context=I^{Context}{Mutex={_opaque_pthread_mutex_t=q[56c]}}{Weak<const void *>=@B}III@^{Context}^{CGColorSpace}i^{__CFDictionary}IIIII^{ObjectCache}@@If^{Commit}{Generic=^^?^{Context}}^{__CFString}b1b1b1b1b1b1}
v28@0:8I16@?20
I36@0:8{CGSize=dd}16B32
I40@0:8{CGSize=dd}16B32B36
^{Context=}16@0:8
^{Proxy=^^?{Atomic={?=i}}Q}
v40@0:8d16@24{Mode=(?={?=b16b16b1b23b1b4b2b1}Q)}32
d32@0:8@16{Mode=(?={?=b16b16b1b23b1b4b2b1}Q)}24
v32@0:8{Mode=(?={?=b16b16b1b23b1b4b2b1}Q)}16@24
{Mode=(?={?=b16b16b1b23b1b4b2b1}Q)}24@0:8@16
^{_CAStateControllerData=@^{__CFDictionary}@@}
v36@0:8@16@24f32
v28@0:8@16f24
v48@0:8@16@24@32@40
v44@0:8@16@24@32f40
^{CARendererPriv=@{Weak<id>=@}@^{Context}^{Renderer}{CGRect={CGPoint=dd}{CGSize=dd}}^{CGColorSpace}^{Update}I[2I][2I]Ib8b1b1Q[0c]}
v32@0:8d16^{?=IiqQdq{CVSMPTETime=ssIIIssss}QQ}24
