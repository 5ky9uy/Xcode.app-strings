UUUUUU
?UUUUUU
@ffffff
Mb`?
Mb`?
MbP?
MbP?
UUUUUU
?UUUUUU
?UUUUUU
MbP?
MbP?
:44t4e5
AUUUUUU
?UUUUUU
gflr
cfmr
contentsCenter
Mb@?
Mb`?
ffffff
MbP?
AUUUUUU
@ffffff
@ffffff
333333
?UUUUUU
L>333?
@+0du
@Y>)F
"@UUUUUU
ffffff
?UUUUUU
@es-8R
?^8U)zj
`ff&@
Mbp?
@ffffff
ffffff
Xniu
Affffff
?ffffff
y?xwwwww
Mb@A
;Z*+
t%6?Z*+@o
5@6L
@ff&@
K333?33s?
Q1~:7
;333@33
tZ:Q
7;h=
.M;R
NAUU
@Q1~
?.AA
>xyzw@(#)PROGRAM:QuartzCore  PROJECT:QuartzCore-964.15
33333!
vH7B
W4vC
9Y>)F$
MbP?-C
]r2<
 9^;Q
ARGB
555Lyuv2svuy
800A800LABGR
AhGRAfGR
80AL
1555r46l
h00Lf00L61C2h0C2
r01lk01Rr03wa04w8a3b
)c|@
='F=<
{V>3+
veTD6* 
udSD6* 
ucSD6* 
tcRC6*
sbRC5)
raQB4)
p`PA4(
~n^N@3'
{k[L>1&
vgXI;/%
qbTF9-#
xj\OB5+!
|pcVI=2(
|rf[OC8.$
xpf\RG=2)!
~{vqjc[RH?6-$
vuutsrpnkgb\VOG?7/' 
edccba`^[XTOIC=6/(!
TSSRRQPNLIFB=82-'!
DDDCCBA@>;952.)$ 
666654431/-+($!
****))('&%#!

uX='
|eL5"
ueR>+
mljgaXL>/!
LKJHC=5+!
00/-+'"
\YO;"
CM4
X2Nd
lnw-L]7L
rKUT\
ofyxf
u<&`Pb
<ok`
sI1O_
VCids~
azpG|im
jmm>L\
Vk/I
K&cq
8*=Ks
vxxm
ovav*
kW]l
<Tmg
5TcI
qg}U
6v_{
'upMt
cS5v
_m`c
pFZk_
2rqpb6iH
Wj_U
;l}]
pq`#
z5SnH
WwGy
i^ztp
pydy
Zz6x
_Xr'sLZO
d8P~
DiP}A
h{+0&
\rO}
R~7|
5~m|
+_w/
Wn0[
}jxne
MwFQ
}iyq
&|\s
S}JrT8`RjguZDs
HWj\
bDA0|O
PuCM
:_H2
Nz(W9
p5wT
eHsi
gN[w
qc|G^l}GH
Akhv
|5Zd
nC0<
zt<>
IKH\o
~mKM
uNh=Zh
|BloS
]x;[
s5uyG
c>J{rw
Oa75v
pFx~j yU
WlH]
d\sY&
II;&
LHjvw
s|!
[3"Af
[|,yV
_25iO
d}R1>
U[q|
XsoX
VQZZrdn
sSSA
?p989
Ojb]
&M^\
ZYx6
>v0A
EDxh
m[>k
*v4?C
^8zG
|k)Q
PoSro
{ {nom
kV\h
q;hsu_
fUk{
aC'@
tvCF
oeBI<
{P]8
=aoM{f
~}|{zyxwutsrqponmljihgfedcba`_^\[ZYXWVUTSRQPONMLKJIHHGFEDCBA@?>==<;:9887654332100/.--,++*)(('&&%$$##"!!  

CM4
X2Nd
lnw-L]7L
rKUT\
ofyxf
u<&`Pb
<ok`
sI1O_
VCids~
azpG|im
jmm>L\
Vk/I
K&cq
8*=Ks
vxxm
ovav*
kW]l
<Tmg
5TcI
qg}U
6v_{
'upMt
cS5v
_m`c
pFZk_
2rqpb6iH
Wj_U
;l}]
pq`#
z5SnH
WwGy
i^ztp
pydy
Zz6x
_Xr'sLZO
d8P~
DiP}A
h{+0&
\rO}
R~7|
5~m|
+_w/
Wn0[
}jxne
MwFQ
}iyq
&|\s
S}JrT8`RjguZDs
HWj\
bDA0|O
PuCM
:_H2
Nz(W9
p5wT
eHsi
gN[w
qc|G^l}GH
Akhv
|5Zd
nC0<
zt<>
IKH\o
~mKM
uNh=Zh
|BloS
]x;[
s5uyG
c>J{rw
Oa75v
pFx~j yU
WlH]
d\sY&
II;&
LHjvw
s|!
[3"Af
[|,yV
_25iO
d}R1>
U[q|
XsoX
VQZZrdn
sSSA
?p989
Ojb]
&M^\
ZYx6
>v0A
EDxh
m[>k
*v4?C
^8zG
|k)Q
PoSro
{ {nom
kV\h
q;hsu_
fUk{
aC'@
tvCF
oeBI<
{P]8
=aoM{f
DDDD
lowp vec4 mixLin(lowp vec4 D, lowp vec4 S, lowp vec4 M) {
  D.rgb = D.rgb / max(D.a, .005);
  D.rgb = D.rgb*D.rgb;
  S.rgb = S.rgb / max(S.a, .005);
  S.rgb = S.rgb*S.rgb;
  lowp vec4 R = mix(D, S, M);
  R.rgb = sqrt(max(R.rgb, 0.))*R.a;
  return R;
lowp vec4 vibrantLightenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = 1. - dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorDodge(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  R.rgb += mix(S.aaa, D.rgb*S.a*S.a/max(S.a - S.rgb, .005),
               step(.005, S.a - S.rgb));
  R.a += D.a*S.a;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantDark(lowp vec4 s0, lowp vec4 d0) {
  return vibrantLightenSover(s0 * blend_color1,
                             vibrantColorDodge(s0 * blend_color0, d0));
lowp vec4 vibrantDarkReversed(lowp vec4 s0, lowp vec4 d0) {
  return vibrantColorDodge(s0 * blend_color0,
                           vibrantLightenSover(s0 * blend_color1, d0));
lowp vec4 vibrantDarkenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorBurn(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  lowp float dasa = D.a*S.a;
  R.rgb += step(.005, S.rgb)
           * (dasa - S.a*S.a*(D.a - D.rgb)/max(S.rgb, .005));
  R.a += dasa;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantLight(lowp vec4 s0, lowp vec4 d0) {
  return vibrantDarkenSover(s0 * blend_color1,
                            vibrantColorBurn(s0 * blend_color0, d0));
lowp vec4 vibrantLightReversed(lowp vec4 s0, lowp vec4 d0) {
  return vibrantColorBurn(s0 * blend_color0,
                          vibrantDarkenSover(s0 * blend_color1, d0));
lowp vec3 colorSort(lowp vec3 c) {
  lowp vec3 cs = (c.r > c.g) ? c : c.grb;
  cs = (cs.g > cs.b) ? cs : cs.rbg;
  cs = (cs.r > cs.g) ? cs : cs.grb;
  return cs;
lowp float lum(lowp vec3 c) {
  return dot(c, vec3(0.3, 0.59, 0.11));
lowp vec3 clipColor(lowp vec3 c) {
  lowp float l = lum(c);
  lowp vec3 cs = colorSort(c);
  c = cs.b < 0.0 ? l + (c - l) * (l / (l - cs.b)) : c;
  c = cs.r > 1.0 ? l + (c - l) * ((1.0 - l) / (cs.r - l)) : c;
  return c;
lowp vec3 setLum(lowp vec3 c, lowp float l) {
  lowp float d = l - lum(c);
  return clipColor(c + d);
lowp float sat(lowp vec3 c) {
  lowp vec3 cs = colorSort(c);
  return cs.r - cs.b;
lowp vec3 setSat(lowp vec3 c, lowp float s) {
  lowp vec3 cs = colorSort(c);
  lowp vec3 fmax = cs.r == c.r ? vec3(1.,0.,0.) :    cs.r == c.g ? vec3(0.,1.,0.) : vec3(0.,0.,1.);
  c = c - fmax * c;
  lowp vec3 fmid = cs.g == c.r ? vec3(1.,0.,0.) :    cs.g == c.g ? vec3(0.,1.,0.) : vec3(0.,0.,1.);
  c = cs.r > cs.b ? fmax * s + fmid * ((cs.g - cs.b) * s / (cs.r - cs.b)) :    vec3(0.0);
  return c;
lowp vec4 colorMatrix4x4Bias(lowp vec4 s) {
  s.rgb = s.rgb / max(s.a, .005);
  s = s.r * color_matrix[0] + s.g * color_matrix[1]
    + s.b * color_matrix[2] + s.a * color_matrix[3]
    + color_matrix[4];
  s.rgb = s.rgb * s.a;
  return s;
lowp vec4 colorMatrix4x4BiasDivideAlpha(lowp vec4 s) {
  s = vec4(s.rgb / s.a, 1.0);
  s = s.r * color_matrix[0] + s.g * color_matrix[1]
    + s.b * color_matrix[2] + color_matrix[3]
    + color_matrix[4];
  s.rgb = s.rgb * s.a;
  return s;
lowp vec4 perlinBias(lowp vec4 s, lowp float a) {
  s.rgb = s.rgb / (a * (s.a - s.rgb) + s.a);
  return s;
lowp vec4 vibrantLightenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = 1. - dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorDodge(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  R.rgb += mix(S.aaa, D.rgb*S.a*S.a/max(S.a - S.rgb, .005),
               step(.005, S.a - S.rgb));
  R.a += D.a*S.a;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantDark(lowp vec4 s0, lowp vec4 d0) {
  if (reversed != 0.0)
    return vibrantColorDodge(s0 * color_dodge,
                               vibrantLightenSover(s0 * color_lighten, d0));
  else
    return vibrantLightenSover(s0 * color_lighten,
                               vibrantColorDodge(s0 * color_dodge, d0));
lowp vec4 vibrantDarkenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorBurn(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  lowp float dasa = D.a*S.a;
  R.rgb += step(.005, S.rgb)
           * (dasa - S.a*S.a*(D.a - D.rgb)/max(S.rgb, .005));
  R.a += dasa;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantLight(lowp vec4 s0, lowp vec4 d0) {
  if (reversed != 0.0)
    return vibrantColorBurn(s0 * color_burn,
                              vibrantDarkenSover(s0 * color_darken, d0));
  else
    return vibrantDarkenSover(s0 * color_darken,
                              vibrantColorBurn(s0 * color_burn, d0));
lowp vec4 luminanceCurve(lowp vec4 s0, lowp vec4 p, lowp float a) {
  lowp float x = dot(s0.rgb, vec3(.2125, .7154, .0721));
  x = clamp((((p.x * x) + p.y) * x + p.z) * x + p.w, 0.0, 1.0);
  return vec4(mix (s0.rgb, vec3 (x, x, x), a), s0.a);
lowp vec4 colorCurves(lowp vec4 s) {
  lowp float inv_a = 1.0 / max(s.a, 0.005);
  s.rgb *= inv_a;
  lowp vec4 r = (((curves[0] * s) + curves[1]) * s + curves[2]) * s + curves[3];  r.a = clamp(r.a, 0., 1.);
  return vec4 (r.rgb * r.a, r.a);
lowp vec4 darkenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 lightenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = 1. - dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
void main () {
  lowp vec4 q0, q1, q2, q3;
  mediump vec4 acc;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  acc = q0 * weight.x;
  acc = q1 * weight.y + acc;
  acc = q2 * weight.z + acc;
  acc = q3 * weight.w + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec3 weight;
varying highp vec2 texcoord0, texcoord1, texcoord2;
varying highp vec2 texcoord3, texcoord4, texcoord5;
void main () {
  lowp vec4 q0, q1, q2, q3, q4, q5;
  mediump vec4 acc;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  acc = (q2 + q3) * weight.x;
  acc = (q1 + q4) * weight.y + acc;
  acc = (q0 + q5) * weight.z + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform highp vec4 texmat0;
uniform highp vec2 axis;
varying highp vec2 texcoord0;
void main () {
  highp vec2 d = texcoord0;
  highp vec2 c = mix(d, floor(d), axis);
  highp float x = dot(floor(d) - d, axis) + 1.0;
  highp float y = 1.0 - x;
  highp vec4 xy = vec4(x, y, x, y);
  highp vec4 w = vec4(-0.29216512, -0.41086841, -0.41086841, -0.29216512);
  w = w*xy + vec4(1.02524562, 0.78286595, 0.78286595, 1.02524562);
  w = w*xy + vec4(-0.52422910, 1.04059357, 1.04059357, -0.52422910);
  w = w*xy + vec4(-0.20885140, -2.41189213, -2.41189213, -0.20885140);
  w = w*xy*xy + vec4(0.0, 1.0, 1.0, 0.0);
  mediump vec4 weight = w;
  highp vec2 p = c * texmat0.xy + texmat0.zw;
  highp vec2 pdelta = axis * texmat0.xy;
  lowp vec4 q0, q1, q2, q3;
  mediump vec4 acc;
  q0 = texture2DRect(texture0, p - 0.5*pdelta);
  q1 = texture2DRect(texture0, p + 0.5*pdelta);
  q2 = texture2DRect(texture0, p + 1.5*pdelta);
  q3 = texture2DRect(texture0, p + 2.5*pdelta);
  acc = q0 * weight.x;
  acc = q1 * weight.y + acc;
  acc = q2 * weight.z + acc;
  acc = q3 * weight.w + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6;
void main() {
  lowp vec4 q0, q1, q2, q3, q4, q5, q6;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  mediump vec4 acc;
  acc = q3 * weight.x;
  acc = q2 * weight.y + acc;
  acc = q4 * weight.y + acc;
  acc = q1 * weight.z + acc;
  acc = q5 * weight.z + acc;
  acc = q0 * weight.w + acc;
  acc = q6 * weight.w + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12;
void main() {
  lowp vec4 q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  q12 = texture2DRect(texture0, texcoord12);
  mediump vec4 acc;
  acc = q6 * weight[0].x;
  acc = q5 * weight[0].y + acc;
  acc = q7 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q8 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q9 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q10 * weight[1].x + acc;
  acc = q1 * weight[1].y + acc;
  acc = q11 * weight[1].y + acc;
  acc = q0 * weight[1].z + acc;
  acc = q12 * weight[1].z + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q5, q6, q7, q8;
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q4, q5, q6, q7, q8, q9;
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q3, q4, q5, q6, q7, q8, q9, q10;
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q2, q3, q4, q5, q6, q7, q8, q9, q10, q11;
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q11 * weight[1].x + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12;
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  q12 = texture2DRect(texture0, texcoord12);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q11 * weight[1].x + acc;
  acc = q1 * weight[1].y + acc;
  acc = q12 * weight[1].y + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  q12 = texture2DRect(texture0, texcoord12);
  q13 = texture2DRect(texture0, texcoord13);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q11 * weight[1].x + acc;
  acc = q1 * weight[1].y + acc;
  acc = q12 * weight[1].y + acc;
  acc = q0 * weight[1].z + acc;
  acc = q13 * weight[1].z + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform highp vec2 minmax;
uniform lowp vec4 bgcolor;
varying highp vec2 texcoord0_0;
varying lowp vec4 color;
void main() {
  lowp vec4 p = texture2DRect(texture0, texcoord0_0);
  p = texcoord0_0.x < minmax.x || texcoord0_0.x > minmax.y ? bgcolor : p;
  gl_FragData[0] = p * color;
uniform lowp sampler2DRect texture0;
uniform lowp sampler2D texture1;
uniform highp vec2 minmax;
uniform lowp vec4 bgcolor;
uniform highp vec4 map;
varying highp vec2 texcoord0_0;
varying lowp vec4 color;
void main() {
  highp float t = dot(texcoord0_0, texcoord0_0);
  t = t * inversesqrt(t + 1e-6) * map.x + map.y;
  lowp vec4 p = texture2DRect(texture0, vec2(min(t, map.w), map.z));
  lowp vec3 n = texture2D(texture1, gl_FragCoord.xy * (1.0/32.0)).rgb;
  p.rgb += (n - .5) * 2.0/255.0 * p.a;
  p = t < minmax.x || t > minmax.y ? bgcolor : p;
  gl_FragData[0] = p * color;
uniform lowp sampler2DRect texture0;
uniform lowp sampler2D texture1;
uniform highp vec4 minmax_dir;
uniform lowp vec4 bgcolor;
uniform highp vec4 map;
uniform highp vec4 args;
varying highp vec2 texcoord0_0;
varying lowp vec4 color;
void main() {
  highp vec2 minmax = minmax_dir.xy;
  highp vec2 dir = minmax_dir.zw;
  highp float frag_l_sq = dot(texcoord0_0, texcoord0_0);
  highp float r = args.x;
  highp float r_sq = r * r;
  highp float r_sgn = args.y;
  highp float dir_l = args.z;
  highp float dir_l_sq = dir_l * dir_l;
  highp float t_denom = args.w;
  highp float par_l = dot(texcoord0_0, dir);
  highp float t;
  highp float in_b;
  if (map.w != 0.0) {
    t = (frag_l_sq - r_sq) / (2.0 * (r + par_l));
    in_b = step(minmax.x, t) - step(minmax.y, t);
    in_b *= step(-r_sgn * r, r_sgn * t);
  } else {
    highp float perp_l_sq = frag_l_sq - par_l * par_l;
    highp float d = frag_l_sq + dir_l_sq * (r_sq - perp_l_sq) +                    2.0 * par_l * dir_l * r;
    highp float d_m = step(0.0, d);
    highp float sqrt_d = sqrt(d * d_m);
    highp float b = par_l * dir_l + r;
    highp float t1 = (b - sqrt_d) * t_denom;
    highp float t2 = (b + sqrt_d) * t_denom;
    highp float t1_v = step(minmax.x, t1) - step(minmax.y, t1);
    highp float t2_v = step(minmax.x, t2) - step(minmax.y, t2);
    t1_v *= step(-r_sgn * r, r_sgn * t1);
    t2_v *= step(-r_sgn * r, r_sgn * t2);
    in_b = step(0.5, t1_v + t2_v) * d_m;
    t = mix(t1 * t1_v + t2 * t2_v, max(t1, t2), step(1.5, t1_v + t2_v));
  t = clamp(t, 0.0, 1.0) * map.x + map.y;
  lowp vec4 p = texture2DRect(texture0, vec2(t, map.z));
  lowp vec3 n = texture2D(texture1, gl_FragCoord.xy * (1.0/32.0)).rgb;
  p.rgb += (n - .5) * 2.0/255.0 * p.a;
  gl_FragData[0] = mix(bgcolor, p, in_b) * color;
uniform lowp sampler2DRect texture0;
uniform lowp sampler2D texture1;
uniform highp vec4 map;
varying highp vec2 texcoord0_0;
varying lowp vec4 color;
void main() {
  highp float t = atan(texcoord0_0.y, texcoord0_0.x) * -0.1591549431 + 0.5;
  t = t * map.x + map.y;
  lowp vec4 p = texture2DRect(texture0, vec2(min(t, map.w), map.z));
  lowp vec3 n = texture2D(texture1, gl_FragCoord.xy * (1.0/32.0)).rgb;
  p.rgb += (n - .5) * 2.0/255.0 * p.a;
  gl_FragData[0] = p * color;
lowp vec2 radialCoord(highp vec2 uv) {
  highp float t = dot(uv, uv) + 1e-6;
  return vec2(t * inversesqrt(t), .5);
lowp vec2 conicCoord(highp vec2 uv) {
  highp float t = atan(uv.y, uv.x) * -0.1591549431 + 0.5;
  return vec2(t, .5);
lowp vec4 squareImage(mediump vec2 uv) {
  mediump vec2 d, w, s;
  w = max(fwidth(uv), 1e-4);
  s = clamp((w * .5 + (1. - abs(uv))) / w, 0., 1.);
  mediump float l = s.x * s.y;
  return vec4(l);
lowp vec4 circleImage(mediump vec2 uv) {
  highp float d, w, s;
  d = max(dot(uv, uv), 1e-4);
  d = d * inversesqrt(d);
  w = max(fwidth(d), 1e-4);
  mediump float l = clamp((w * .5 + (1. - d)) / w, 0., 1.);
  return vec4(l);
lowp vec4 supercircleImage(highp vec2 uv) {
  highp float d, w;
  uv = max(abs(uv) * 1.199 - vec2(0.199), 0.0);  d = pow(uv.x, 2.68) + pow(uv.y, 2.68);
  w = max(fwidth(d), 1e-4);
  mediump float l = clamp((w * .5 + (1. - d)) / w, 0., 1.);
  return vec4(l);
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump float e = (render_state.z - d)/fwidth(d);
  return vec4(clamp(e+.5, 0., 1.));
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump float e = (render_state.z - d)/render_state.y;
  e = clamp(e+.5, 0., 1.);
  return vec4((e * -2. + 3.) * e * e);
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump vec2 e = (render_state.zw - d)/fwidth(d);
  e = clamp(e+.5, 0., 1.);
  return vec4((1. - e.x) * e.y);
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump vec2 e = (render_state.zw - d)/render_state.y;
  e = clamp(e+.5, 0., 1.);
  e = (e * -2. + 3.) * e * e;
  return vec4((1. - e.x) * e.y);
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
uniform highp vec2 offset[4];
void main () {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 + offset[0] * texmat0.xy;
  texcoord1 = t0 + offset[1] * texmat0.xy;
  texcoord2 = t0 + offset[2] * texmat0.xy;
  texcoord3 = t0 + offset[3] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2;
varying highp vec2 texcoord3, texcoord4, texcoord5;
uniform highp vec2 offset[3];
void main () {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[2] * texmat0.xy;
  texcoord1 = t0 - offset[1] * texmat0.xy;
  texcoord2 = t0 - offset[0] * texmat0.xy;
  texcoord3 = t0 + offset[0] * texmat0.xy;
  texcoord4 = t0 + offset[1] * texmat0.xy;
  texcoord5 = t0 + offset[2] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec2 axis;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0;
void main () {
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = vertex_texcoord0 - 0.5 * axis;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6;
uniform highp vec2 offset[3];
void main() {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[2] * texmat0.xy;
  texcoord1 = t0 - offset[1] * texmat0.xy;
  texcoord2 = t0 - offset[0] * texmat0.xy;
  texcoord3 = t0;
  texcoord4 = t0 + offset[0] * texmat0.xy;
  texcoord5 = t0 + offset[1] * texmat0.xy;
  texcoord6 = t0 + offset[2] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12;
uniform highp vec2 offset[6];
void main() {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[5] * texmat0.xy;
  texcoord1 = t0 - offset[4] * texmat0.xy;
  texcoord2 = t0 - offset[3] * texmat0.xy;
  texcoord3 = t0 - offset[2] * texmat0.xy;
  texcoord4 = t0 - offset[1] * texmat0.xy;
  texcoord5 = t0 - offset[0] * texmat0.xy;
  texcoord6 = t0;
  texcoord7 = t0 + offset[0] * texmat0.xy;
  texcoord8 = t0 + offset[1] * texmat0.xy;
  texcoord9 = t0 + offset[2] * texmat0.xy;
  texcoord10 = t0 + offset[3] * texmat0.xy;
  texcoord11 = t0 + offset[4] * texmat0.xy;
  texcoord12 = t0 + offset[5] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
uniform highp vec2 offset[7];
void main() {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[6] * texmat0.xy;
  texcoord1 = t0 - offset[5] * texmat0.xy;
  texcoord2 = t0 - offset[4] * texmat0.xy;
  texcoord3 = t0 - offset[3] * texmat0.xy;
  texcoord4 = t0 - offset[2] * texmat0.xy;
  texcoord5 = t0 - offset[1] * texmat0.xy;
  texcoord6 = t0 - offset[0] * texmat0.xy;
  texcoord7 = t0 + offset[0] * texmat0.xy;
  texcoord8 = t0 + offset[1] * texmat0.xy;
  texcoord9 = t0 + offset[2] * texmat0.xy;
  texcoord10 = t0 + offset[3] * texmat0.xy;
  texcoord11 = t0 + offset[4] * texmat0.xy;
  texcoord12 = t0 + offset[5] * texmat0.xy;
  texcoord13 = t0 + offset[6] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute highp float vertex_texcoord0;
attribute highp float vertex_point_size;
attribute lowp vec4 vertex_color;
varying lowp vec4 color;
void main() {
  gl_Position = vertex_matrix * vertex_position;
  gl_PointSize = vertex_point_size;
  color = vertex_color;
SSSSSSSSSSSSSS
SSSSSSSSSSSSSS
contents
opacity
zPosition
anchorPoint
anchorPointZ
contentsScale
transform
sublayerTransform
contentsTransform
contentsRect
cornerContents
cornerContentsCenter
filters
backgroundFilters
compositingFilter
meshTransform
magnificationFilter
minificationFilter
minificationFilterBias
name
backgroundColor
cornerRadius
borderWidth
borderColor
isDoubleSided
contentsMultiplyColor
gain
contentsSwizzle
hitTestsContentsAlphaChannel
shouldRasterize
preloadsCache
rasterizationPrefersDisplayCompositing
rasterizationScale
createsCompositingGroup
allowsEdgeAntialiasing
allowsGroupOpacity
allowsDisplayCompositing
allowsGroupBlending
wantsExtendedDynamicRangeContent
toneMapToStandardDynamicRange
cornerContentsMasksEdges
allowsHitTesting
hitTestsAsOpaque
literalContentsCenter
contentsContainsSubtitles
continuousCorners
inheritsTiming
definesDisplayRegionOfInterest
shadowOpacity
shadowColor
shadowOffset
shadowRadius
shadowPath
invertsShadow
shadowPathIsBounds
actionForLayer:forKey:
displayLayer:
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
_layoutSublayersOfLayer:
animationDidStart:
animationDidStop:finished:
$*/5;AGMTZahov~
(4AMYdoz
!)1:BJRZcks{
333333
@333333
@333333
?t)K
aqua
?black
blue
?fuchsia
?gray
?green
lime
maroon
navy
?olive
purple
?red
silver
?teal
?white
?yellow
size
sprite
radius
style
resize
redRange
name
strokeStart
sizeRequisition
single
circle
screen
surface
curves
resizeAspect
endProgress
simpleAttractor
earliestCommitTime
screenBlendMode
strokeColor
renderMode
rasterizationScale
cube
oldestFirst
cornerContents
commitTime
onOrderIn
oldestLast
cornerContentsMasksEdges
cornerContentsCenter
center
onOrderOut
coneAngle
contents
compositingFilter
strokeEnd
sphere
constraints
redSpeed
conic
continuousCorners
contentsCenter
cubic
discrete
contentsFrameMode
contentsRect
cumulative
endPoint
dest
discretizesTime
sdrNormalize
edrGain
rectangle
contentsFrameCount
rectangles
direction
scrollMode
contentsScale
darkenSourceOver
darkenBlendMode
destIn
contentsFormat
contentsContainsSubtitles
line
additive
cornerRadius
resizeAspectFill
instanceRedOffset
instanceGreenOffset
normalBlendMode
linear
instanceColor
anchorPointZ
instanceCount
spin
anchorPoint
lanczos
luminance
linearBurnBlendMode
stiffness
lanczosResize
emitterSize
subtractD
contentsDither
emitterPosition
contentsFramesPerSecond
lineJoin
coneEdgeSoftness
emitterDuration
duration
tensionValues
trilinear
removedOnCompletion
directionLatitude
directionLongitude
emitterRects
middle
layoutManager
subtractBlendMode
contentsAlignsToPixels
spinRange
securityMode
emitterShape
mass
emitterZPosition
linearlySampledLinear
origin
fade
force
animations
radial
disableActions
completionBlock
cuboid
type
margin
toValue
contextId
colors
color
orientationRange
spot
animatesFromModelValues
orientationLatitude
orientationLongitude
endAngle
emitterMode
zAcceleration
cullRect
sequential
spinBias
instanceBlueOffset
instanceAlphaOffset
cubicPaced
remoteInputMachTime
lineDashPattern
clear
font
massRange
subtype
outline
limitAveragePixelLuminance
options
appliesY
colorHueRotate
allowsSubstituteColor
emitterCells
targetsSuperlayer
appliesX
repeatCount
zPosition
autoreverses
colorInvert
timeOffset
compressLuminance
locations
cullMaxZ
emissionLongitude
aligned
actions
distanceField
clearsContext
exclusionBlendMode
separatedOptions
offset
contentsTransform
emissionRange
saturationBlendMode
emissionLatitude
tileSize
seed
speed
appliesRotation
axial
overlayBlendMode
attractor
updateDeadline
repeatDuration
timingFunctions
xAcceleration
contentsOpaque
inputValues
cheapAdditive
allowsFontSubpixelQuantization
maskedCorners
contentsMultiplyColor
appliesScale
animationDelegate
cullMinZ
colorMonochrome
timingFunction
destOut
foregroundColor
delegate
earliestAutomaticCommitTime
rotation
instanceTransform
shouldRasterize
colorOverLife
destAtop
updateInterval
animationDuration
inputGreenValues
fontSize
colorDodgeBlendMode
differenceBlendMode
inputFrontColor
position
cachesInputImage
colorOverDistance
luminanceToAlpha
superlayer
rotationMode
scale
damping
function
inputAngle
left
colorAdd
alignToMotion
mask
contentsScaling
ignoresScreenClip
start
animId
animationTimingFunction
rotationRange
inputNormalizeEdges
keyTimes
definesDisplayRegionOfInterest
sharpness
sourceLayer
sourceOut
inputHardEdges
calculationMode
sourceIn
sourceOver
opaque
nearest
inputAmount
points
sourcePoints
inputMaskImage
paced
startProgress
inputEndAngle
point
inputAddColor
sublayers
linearDodgeBlendMode
colorContrast
roundsToInteger
startAngle
startPoint
borderColor
gain
flipsHorizontalAxis
inputAlphaValues
cheapColorDodge
literalContentsCenter
lineCap
identifier
allowsBackdropGroups
right
inputDither
rasterizationPrefersDisplayCompositing
inputFrontEnabled
minificationFilterBias
alphaRange
minificationFilter
inputAspectRatio
attractorType
filters
hidden
inputTime
meteor
filter
random
enabled
lifetime
vibrantDarkSourceOver
zoom
asg77
truncationMode
matchesPosition
sortsSublayers
disableUpdateMask
continuityValues
fillMode
contentsGravity
inputLinear
luminanceMap
sourceLayerRenderId
alignmentMode
fillColor
backdropRect
colorMatrix
fromLeft
destOver
motionBlurAmount
tracksLuma
sourceContextId
topLeft
inputColor
subtractS
groupName
inputColor1
justified
inputColor0
ambientIntensity
groupNamespace
transitionFlags
frozen
alphaThreshold
instanceDelay
contentsSwizzle
string
proxyProperties
topRight
transition
lifetimeRange
contentsFramesPerRow
opacityPair
canDrawConcurrently
fromValue
backToFront
divideBlendMode
allowsEdgeAntialiasing
inputBias
birthRate
scaleRange
asynchronousRenderTime
colorMap
inputBlueValues
inputRedValues
colorBlendMode
autoresizingMask
light
lightenBlendMode
levelsOfDetailBias
vibrantDarkSourceOverReversed
alignedFlip
translation
luminosityBlendMode
doubleSided
unordered
softLightBlendMode
miterLimit
backgroundFilters
backgroundColorPhase
wantsExtendedDynamicRangeContent
backgroundColor
inputHSVSpace
invertsShape
appliesAlpha
preloadsCache
fromRight
luminanceCurveMap
inputReversed
inputColorMatrix
vibrantColorMatrixSourceOver
value
interpolations
linearLightBlendMode
volume
alignedCube
masksToBounds
values
emitterBehaviors
presentationModifiers
emitterPath
byValue
vibrantDark
inverseMeshed
preferredFrameRateRangePreferred
plane
height
needsLayoutOnGeometryChange
keyPath
yAcceleration
drawingEnabled
inputBounds
lineDashPhase
asynchronousRenderPeriod
planar
inheritsTiming
flip
valueFunction
usesNormalizedCoordinates
copy
pluginType
sublayerTransform
allowsInPlaceFiltering
greenRange
vibrantColorMatrix
pinLightBlendMode
reveal
allowsHitTesting
levelsOfDetail
moveIn
lineWidth
particleType
colorBurnBlendMode
averageColor
inheritsSecurity
colorSaturate
hitTestsAsOpaque
marginWidth
push
fillRule
colorSubtract
meshTransform
toneMapToStandardDynamicRange
minimum
reducesCaptureBitDepth
bleedAmount
falloffDistance
inputBackEnabled
hueBlendMode
inputBackColor1
cheapScreen
valueOverLife
inputBackColor0
separatedState
vibrantLight
multiplyColor
drag
vibrantLightSourceOver
plusL
matchesTransform
valueOverDistance
geometryFlipped
plusD
inputRadius
truncationString
pluginId
edgeAntialiasingMask
inputColorMap
hardLightBlendMode
invertsContentsAreFlipped
createsCompositingGroup
preservesFlip
inputScale
velocityRange
needsDisplayOnBoundsChange
bias
diffuseIntensity
fromTop
cheapMaximum
inputStartAngle
bounds
frameInterval
allowsGroupBlending
homeAffordanceBase
preferredFrameRateRangeMaximum
allowsDisplayCompositing
captureOnly
inputShadowBounds
inputShadowColor
multiplyBlendMode
lightenSourceOver
opacity
identity
inputAddWhite
biasValues
inputQuality
blueRange
shadowOffset
preferredFrameRateRangeMinimum
rendersAsynchronously
floating
borderWidth
wave
transform
emitterDepth
width
shadowColor
inputOverlayOpacity
hitTestsContentsAlphaChannel
bottomLeft
frequency
drawableProperties
gaussianBlur
alphaSpeed
sourceAtop
wrapped
matchesOpacity
colorBrightness
hidesSourceLayer
variableBlur
allowsGroupOpacity
path
shadowRadius
magnificationFilter
pluginFlags
fontSmoothingStyle
falloff
beginTime
fromBottom
drawsAsynchronously
maximumTileScale
horizontally
scaleSpeed
lowLatency
beginTimeMode
invertsShadow
pageCurl
preservesDepth
both
bottom
maximum
highFrameRateReason
multiply
velocity
greenSpeed
blueSpeed
vibrantLightSourceOverReversed
vertically
shadowOpacity
inputIntermediateBitDepth
shadowPathIsBounds
bottomRight
windowServerAware
pluginGravity
shadowPath
CAIOSurfaceCreate: failed to allocate IOSurface (size: %u x %u, format: %c%c%c%c)
success
kCADetachReasonCodeOffscreen
kCADetachReasonCodeNonOpaque
kCADetachReasonCodeNonWhite
kCADetachReasonCodeNested
kCADetachReasonCodeHasRenderState
kCADetachReasonCodeNonScreenSpace
kCADetachReasonCodeZeroDeviceScale
kCADetachReasonCodeUsingClipPlanes
kCADetachReasonCodeNoHandle
kCADetachReasonCodeNonCanonicalLayer
kCADetachReasonCodeHasCenterGeometry
kCADetachReasonCodeHasMixCoords
kCADetachReasonCodeHasOuterEdgeSubFilter
kCADetachReasonCodeLayerFeatures
kCADetachReasonCodeNoDisplayCompositing
CADebug disabled detached
kCADetachReasonCodeNullSurface
kCADetachReasonCodeNonAffine
kCADetachReasonCodeRotation
kCADetachReasonCodeUnderBackdrop
kCADetachReasonCodeMismatchEDR
kCADetachReasonCodeNotClearAboveBlackBelow
kCADetachReasonCodeWindowServerRejected
kCADetachReasonCodeDisplayRejected
kCADetachReasonCodeRectClipped
CreationProperties
IOSurfaceData
IOSurfaceBulkAttachments
iosurface-%zu-%zu-%c%c%c%c-%s-XXXXXX.plist
rowbytes_for_packed_format
CASurfaceUtil.mm
width
height
horizontalOffset
verticalOffset
cleanAperture
horizontalSpacing
verticalSpacing
pixelAspectRatio
gammaLevel
fieldCount
fieldDetail
yCbCrMatrixIndex
colorPrimariesIndex
transferFunctionIndex
chromaLocationTopField
chromaLocationBottomField
chromaSubsampling
displayPrimariesXG
displayPrimariesYG
displayPrimariesXB
displayPrimariesYB
displayPrimariesXR
displayPrimariesYR
whitePointX
whitePointY
maxDisplayMasteringLuminance
minDisplayMasteringLuminance
masteringDisplayColorVolume
maxContentLightLevel
maxFrameAverageLightLevel
contentLightLevelInfo
edrFactor
Undefined script value `%s'
null
bool
integer
real
NSArray
NSSet
NSDictionary
NSURL
NSData
CGPoint
CGSize
CGRect
CGAffineTransform
CATransform3D
CAPoint3D
CAColorMatrix
CGColor
CGImage
CGPath
CGPDFDocument
CGFont
unordered
oldestFirst
oldestLast
backToFront
additive
screen
maximum
cheapColorDodge
point
line
rectangle
cuboid
circle
sphere
path
rectangles
points
outline
surface
volume
sequential
emitterCells
emitterBehaviors
emitterRects
CA_DISABLE_ASYNC
CA::CG::Queue
(interpolator (factor %g)
(o%d 
Invalid frame interval range %u %u %u from frame rate range %.2f %.2f %.2f
auto
YCbCr444LimitedRange
YCbCr422LimitedRange
YCbCr420LimitedRange
RGBLimitedRange
RGBFullRange
DolbyVision
DolbyVisionLowLatency
HDR10_444LimitedRange
HDR10_422LimitedRange
HDR10_420LimitedRange
HDR10_RGBFullRange
none
scaleContent
insetBounds
rot0
rot90
rot180
rot270
refreshRate
Dolby
HDR10
gamut_SRGB
gamut_P3
gamut_BT2020
CADisplay
%p: cannot update immutable CADisplay
CoreAnimation: GetDisplayInfo returned 0x%x
seed
connectionSeed
uniqueId
productName
availableModes
supportedHDRModes
preferredHDRModes
currentMode
preferredMode
latency
bounds
overscanned
overscanAmounts
overscanAmount
overscanAdjustment
cloned
cloning
cloningSupported
supportsExtendedColors
processId
heartbeatRate
minimumFrameDuration
preferredFrameDuration
nativeOrientation
currentOrientation
safeBounds
externalDisplayAttributes
preferences
allowedHDRModes
Failed to set display latency - missing UUID
CADisplayLink: reload_item, item does not exist
CADisplayLink
%@: already added to runloop %p, cannot also be added to %p
cannot change properties on an immutable CADisplay
CAInvalidDisplayMode
mode %@ is not valid for display %@
CoreAnimation: [CADisplay colorMode] is deprecated!
CoreAnimation: [CADisplay setColorMode:] is deprecated!
CoreAnimation: [CADisplay allowsVirtualModes] is deprecated!
CoreAnimation: [CADisplay setAllowsVirtualModes] is deprecated!
<CADisplay:%@ %@>
cannot change preferences on an immutable CADisplay
B24@?0@"NSString"8@16
invalid range (minimum: %.2f maximum: %.2f preferred: %.2f)
Unsupported use of CADisplayLink SPI off the main thread.
DeviceClassNumber
main-screen-scale
<CADisplayMode %d x %d internal_panel (fixed)>
undefined
full
limited
<CADisplayMode %d x %d fmt:%s range:%s>
v12@?0i8
Failed to register for CADisplay change notifications: 0x%x
com.apple.CoreAnimation.CAWindowServer.DisplayPower
Failed to register for CADisplay power notifications: 0x%x
Unable to query displays from server (%d)
External
CA::Display::display_queue
~Renderer
cg-renderer.cpp
!_ctx
CG.Performance
Virtual-%d
%@ Framebuffer
VirtualDisplay::clone_update failed to copy surface
copy_display_timings: unexpected state (source: %x, this: %x)
{?=dddddd}
public.png
array
dict
CoreAnimation: unable to encode NSValue of type %s
kind
CGColorPattern
data
tiling
CGPatternType
CGPatternMatrix
CGPatternBounds
CGPatternStep
CGPatternTiling
CGPatternColored
CGPatternImage
LKCGPathType
LKCGPathPoint0_x
LKCGPathPoint0_y
LKCGPathPoint1_x
LKCGPathPoint1_y
LKCGPathPoint2_x
LKCGPathPoint2_y
LKCGPathSegments
IOSurfaceInfo
IOSurfaceProperties
IOSurfaceYCbCrMatrixInt
assets/image%d.%@
CAML: Failed to encode image: %s
%s: ignoring exception %@
-[NSCoder(CACoderAdditions) CA_decodeObjectForKey:]
CACodingUserInfo
CACodingSkipHiddenLayers
CACodingImageFormat
CACodingImageOptions
%@/%@
%@/assets
CAMLEncodeLayerTreeToPathWithOptions failed to create output dirs at %s
CAMLEncodeLayerTreeToPathWithOptions options must be a CFDictionary
%@/%s
main.caml
rootDocument
geometryFlipped
userInfo
index.xml
CAMLEncodeLayerTreeToPathWithOptions failed to move %s to %s
rootLayer
root
CAEncodeIOSurfacesAsCGImages
B24@?0#8:16
Failed to validate rowbytes: %zu, levels: %u height: %u
Failed to decode_data_async, size: %zu
Failed to decode shmem.
Failed to re-create data_size, encoded: %zu,calculated: %zu
Image failed to decode!
(image [%d %d] [%d] %s
 (tint %.3g %.3g %.3g %.3g)
CABackingStoreBeginUpdate
CABackingStore.cpp
!CABackStoreIsUpdating_ (b)
levels == 1
CABackingStoreEndUpdate
CABackStoreIsUpdating_ (b)
CABackingStore
CoreAnimation: triple buffered backing store %p
CA Whippet Drawable
CABackingStoreBeginUpdate_
!b->update_ctx
Shape: %s
CA_ACCEL_BACKING
CoreAnimation: forcing %saccelerated backing
non-
<CABackingStore %p>
<CABackingStore %p
 (buffer [%d %d] %s%s)
 volatile
 (surface 0x%x [%d %d] %s%s)
Error while parsing CoreAnimation XML document %@: %@
Unable to load CAPackage from URL: %@
(currentTexture 
(blendedTextures
ImageQueue %p visibility going from %u to %u
CoreAnimation: copied CGImageRef %p - image size (%lu x %lu) exceeds max texture size
CoreAnimation: copied CGImageRef %p - mask size
CoreAnimation: copied CGImageRef %p - color matching
CoreAnimation: copied CGImageRef %p - needs color matching
CoreAnimation: copied CGImageRef %p - non-RGB color model
__CAAllowSubimage
copy_image
render-image-cache.cpp
!main_texture->has_display_transform ()
CG image cache at time %f:
CoreAnimation: copied CGImageRef %p - bad alignment for IOSurface 0x%x
CoreAnimation: warning, CGImageProvider returned multiple blocks
CoreAnimation: copied CGImageRef %p - mipmap generation
CoreAnimation: copied CGImageRef %p - bad decode array
CoreAnimation: copied CGImageRef %p - bad mask
CoreAnimation: copied CGImageRef %p - bad mask image format (%d bpp, %d bpc)
CoreAnimation: copied CGImageRef %p - non-native format (%d)
CoreAnimation: copied CGImageRef %p - format not supported by hardware
CoreAnimation: data provider size invalid
CoreAnimation: data provider size is too small
CoreAnimation: copied CGImageRef %p - no data pointer
CoreAnimation: copied CGImageRef %p - bad image alignment
CoreAnimation: copied CGImageRef %p - bad row alignment
CoreAnimation: copied CGImageRef %p - RGB mask (bug!)
CoreAnimation: ignored CGImageRef %p - bad RGB 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - decode or mask
CoreAnimation: copied CGImageRef %p - bad RGB image format (%d bpp, %d bpc, %d info)
CoreAnimation: ignored CGImageRef %p - bad grayscale 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - bad grayscale image format (%d bpp, %d bpc, %d info)
  %p deadline %f %s%s%s%s%s
mipmaps 
mask 
transient 
unmatched 
partial 
multiplyColor
colorAdd
colorSubtract
colorMonochrome
colorMatrix
colorHueRotate
colorSaturate
colorBrightness
colorContrast
colorInvert
compressLuminance
alphaThreshold
meteor
edrGain
sdrNormalize
homeAffordanceBase
luminanceToAlpha
bias
opacityPair
distanceField
gaussianBlur
variableBlur
luminanceMap
luminanceCurveMap
averageColor
lanczosResize
clear
copy
sourceOver
sourceIn
sourceOut
sourceAtop
destOver
destIn
destOut
destAtop
plusL
subtractS
subtractD
multiply
minimum
plusD
normalBlendMode
multiplyBlendMode
screenBlendMode
overlayBlendMode
darkenBlendMode
lightenBlendMode
colorDodgeBlendMode
colorBurnBlendMode
softLightBlendMode
hardLightBlendMode
differenceBlendMode
exclusionBlendMode
subtractBlendMode
divideBlendMode
linearBurnBlendMode
linearDodgeBlendMode
linearLightBlendMode
pinLightBlendMode
hueBlendMode
saturationBlendMode
colorBlendMode
luminosityBlendMode
pageCurl
vibrantDark
vibrantLight
vibrantColorMatrix
darkenSourceOver
lightenSourceOver
vibrantColorMatrixSourceOver
limitAveragePixelLuminance
inputAddWhite
inputAlphaValues
inputAmount
inputAngle
inputAspectRatio
inputBackColor0
inputBackColor1
inputBackEnabled
inputBias
inputBlueValues
inputBounds
inputColor
inputColor0
inputColor1
inputColorMap
inputColorMatrix
inputDither
inputEndAngle
inputFrontColor
inputFrontEnabled
inputGreenValues
inputHSVSpace
inputHardEdges
inputIntermediateBitDepth
inputLinear
inputNormalizeEdges
inputOverlayOpacity
inputQuality
inputRadius
inputRedValues
inputReversed
inputScale
inputShadowBounds
inputShadowColor
inputStartAngle
inputTime
inputValues
name
enabled
cachesInputImage
accessibility
CAFilterType
CAFilterName
CAFilterEnabled
CAFilterInputs
filter
CAFilter requires `filter' attribute
basedOn
locked
initial
nextDelay
previousDelay
elements
{%@:%p %@ basedOn %@ %@%s%s}
 initial
 locked
average
Invalid number of numeric values in mesh
Invalid number of arguments to 'v' mesh operator
Invalid number of arguments to 'f' mesh operator
Invalid mesh operator: %c
[%@] [%@] v 
[%@] [%@] f 
meshData
depthNormalization
subdivisionSteps
replicatesEdges
CAMeshTransform
%@: trying to replace non-existent vertex %ld
%@: trying to remove non-existent vertex %ld
%@: trying to replace non-existent face %ld
%@: trying to remove non-existent face %ld
Unsupported image format '%s' for default colorspace
ARGB8888
XRGB8888
BGRA8888
BGRX8888
XRGB1555
BGRX5551
CbYCrY8
YCbYCr8
LA16
RGBA5
RGBA8
ABGR8
RGBX8
XBGR8
RGBA16
RGBX16
RGBAh
RGBXh
RGBAf
BGR10A2
RGB10
RGB10_XR
ARGB10_XR
RGB10A8_2P_XR
CoreAnimation: rendering error %s
(replicatorLayer %d)
%s - _instance_transform size %u
ReplicatorLayer
rotateX
rotateY
rotateZ
scaleX
scaleY
scaleZ
scaleXY
scaleXYZ
translate
translateX
translateY
translateZ
CAValueFunctionName
Unknown function: %@
linear
easeIn
easeOut
easeInEaseOut
default
CAMediaTimingFunctionInvalid
unknown timing function name: %@
CAMediaTimingFunctionInvalidControlPoint
no timing function control point with index: %d
(%g %g; %g %g)
No timing function data
Unknown timing function: %@
Ignoring trailing characters
CAMediaTimingFunction
index
CoreAnimation: failed to allocate %ld bytes
Data %p with size %zu underflow
CoreAnimation: failed to query region %p (%zu bytes)
CoreAnimation: mach_make_memory_entry_64 (size %llu, addr 0x%llx, prot 0x%x, port %u) = 0x%x
(shmem %lu bytes)
Shmem port is MACH_PORT_NULL!
Failed to decode shmem from data ptr: %p, len: %zu
Failed to decode shmem data
Invalid bitmap: [%u x %u], %u levels
Layer backing store allocation too large size:%ld width:%d height:%d levels:%d
Bogus ShmemBitmap : [%u x %u], %u levels
Bogus ShmemBitmap data pointer: %p, Shmem data pointer: %zu
Bogus ShmemBitmap rowbytes: %zu, width: %u, height: %u, level: %u
Bogus ShmemBitmap data pointer: %p, total size: %zu
%a %b %e %H:%M:%S %Z %Y
** Log started %s **
stdout
stderr
X_LOG_TRUNCATE
Unable to open log file for writing: %s
exported [%d %d] buffer to %s
X_LOG_FILE_OPEN
open '%s'
 command: %s
QUARTZCORE_LOG_FILE
X_LOG_FILE
CADebug
Metal
OpenGL
Render
States
Utilities
WindowServer
Color
FrameRate
animations.%@
{%@:%p %@:%p %@}
 (offscreen-flags [
 (group-flags [
(%slayer %s[%.10g %.10g %.10g] [%.10g %.10g %.10g %.10g] [%g %g %g]
transform-
container 
[%d pass%s
 [%d %d %d %d]
 image seed %d
(name 
(hidden true)
(masksToBounds true)
(geometryFlipped true)
(edgeAntialiasingMask%s%s%s%s%s)
 left
 right
 bottom
 top
 none
(disableUpdateMask%s%s%s%s%s%s%s)
 display
 snapshot
 unprotected
 inhibit-cloning
 occlusion-detection
 secure
(contentsGravity %s)
(contentsOpaque true)
(contentsDither false)
(contentsAlignsToPixels true)
(contentsMultiplyColor %.3g %.3g %.3g %.3g)
AAAA
(contentsSwizzle %s)
transform
sublayerTransform
(doubleSided false)
(sortsSublayers false)
(flipsHorizontalAxis true)
(opacity %g)
(cornerRadius %g)
(backgroundColor 
(backgroundColor (%.3g %.3g %.3g %.0g))
(borderWidth %g)
(borderColor 
(borderColor (%.3g %.3g %.3g %.0g))
(cornerContents 
(continuousCorners true)
(cornerContentsMasksEdges true)
(maskedCorners%s%s%s%s%s)
 minX-minY
 maxX-minY
 minX-maxY
 maxX-maxY
(contents %s
backingStore 
(contentsScaling repeat)
(magnificationFilter %s)
(minificationFilter %s)
(gain %g)
(lodBias %g)
(inheritsTiming false)
(definesDisplayRegionOfInterest true)
(contentsContainsSubtitles true)
contentsTransform
(contentsRect 
(contentsCenter 
(cornerContentsCenter 
(literalContentsCenter true)
(contentsScale %g)
(shouldRasterize true)
(rasterizationPrefersDisplayCompositing true)
(rasterizationScale %g)
(preloadsCache true)
(createsCompositingGroup true)
(allowsDisplayCompositing true)
(allowsEdgeAntialiasing true)
(wantsExtendedDynamicRangeContent true)
(toneMapToStandardDynamicRange true)
(allowsGroupOpacity true)
(allowsGroupBlending false)
(allowsHitTesting false)
(hitTestsContentsAlphaChannel true)
(hitTestsAsOpaque true)
(securityMode unrestricted)
(securityMode insecure)
(shadowColor (%.3g %.3g %.3g %.0g))
(shadowOpacity %g)
(shadowRadius %g)
(shadowOffset [%g %g])
(shadowPath 
(invertsShadow true)
(shadowPathIsBounds true)
(mask 
(sublayers 
(filters 
(backgroundFilters 
(compositingFilter 
(meshTransform 
(animations 
(modifiers 
(subclass 
%s - transform size %u
%s - sublayerTransform size %u
%s - contentsTransform size %u
%s - contentsRect size %u
%s - contentsCenter size %u
%s - cornerContentsCenter size %u
%s - meshTransform = %p
%s - expected sublayer ids
Layer
shadow
tiled-image
backdrop-copy
blending
mask
group
scaling
plugin
cache
mesh
motion-blur
dest-copy
asynchronous
compositing-filters
bg-filters
blend-modes
sover
rasterize
emitter
dirty-old
dirty-new
update
update-geom
update-image
update-below
update-if-sibling
anim-content
anim-geom
anim-other
anim-image
anim-future
anim-fill
anim-below
anim-now-below
detached-content
detached-dirty
detached-below
detached-invalid
anims-changed
no-opaque
no-clip
non-black
non-clear
enable-dpb
UNUSED
pending
hit-tests-as-opaque
backdrop-changed
local-non-black
deep-content
deep-below
out-of-p3
needs-dest-alpha
needs-dest-alpha-below
edr-content
edr-below
edr-detached-content
edr-detached-below
inhibit-clone
inhibit-clone-below
dependent
dependent-below
defines-display-roi
uncullable
culled
capturing-backdrop-below
protect-0
protect-1
protect-2
edr-content-passive
anim-image-dirty
velocity-0
velocity-1
velocity-2
emit_glyphs
ogl-glyph-cache.cpp
_buffer_end <= _buffer->size
(filter %s
(inputs 
(%s 
[CA] Surface ID:0x%x detach result: %s
Failed to detach surface code: %s
render_contents_background
ogl-layer.cpp
!(l->node->flags & Render::kLayerNodeIgnoreContents)
set_swizzle
swizzle == Render::kLayerContentsSwizzleAAAA
vibrantDarkSourceOver
vibrantLightSourceOver
vibrantDarkSourceOverReversed
vibrantLightSourceOverReversed
uncollectable
disableFade
onlyIfNull
removeImmediately
contentsAreFlipped
contents
CATiledLayerFlags
CoreAnimation: failed to add monotonic cube ((%g, %g) (%g, %g) (%g, %g) (%g, %g))
Basic
Blurs
PerfStates
Glitches
Frame Duration
render_for_time
Display EDR
Render EDR
Desired EDR
Display nits
Luma boost
Offscreen Passes
Dirty Area
Frame Delay
Update
SwapID
Backdrop Count
Blur Count
Emitter Count
Particle Count
CPU Freq
GPU Freq
SoC Freq
DRAM Freq
Battery Drain
CPU Power
GPU Power
SoC Power
DRAM Power
Detected Glitch
/usr/local/lib/libpstatemonitor.dylib
pstate_monitor_connect
pstate_monitor_destroy
pstate_monitor_get_CPU_pstate
pstate_monitor_get_GPU_pstate
pstate_monitor_get_SOC_pstate
pstate_monitor_get_DRAM_pstate
pstate_monitor_get_CPU_watts
pstate_monitor_get_GPU_watts
pstate_monitor_get_SOC_watts
pstate_monitor_get_DRAM_watts
pstate_monitor_get_BatteryDrain_watts
v16@?0^{pstate_monitor=}8
apple-internal-install
CA_DISABLE_WORKAROUNDS
CA_MAX_TEXTURE_UNITS
GL_APPLE_fence
GL_APPLE_texture_filter_cubic
GL_APPLE_texture_ycbcr_basic_formats
GL_APPLE_texture_ycbcr_extended_formats
GL_APPLE_texture_xr
GL_APPLE_tile_order_rot
GL_EXT_shader_framebuffer_fetch
GL_EXT_texture_filter_anisotropic
GL_EXT_texture_lod_bias
GL_OES_standard_derivatives
GL_OES_texture_half_float
GL_OES_texture_half_float_linear
GL_OES_texture_float
GL_OES_texture_float_linear
GL_IMG_texture_compression_pvrtc
GL_KHR_texture_compression_astc_ldr
CoreAnimation: maximum %d texture units
CoreAnimation: maximum texture %d pixels
#define NOISE_SIZE %d
CoreAnimation: unsupported graphics hardware
; need three or more texture units
CoreAnimation: %d by %d image is too large for GPU, ignoring
CoreAnimation: image stride is too large for GPU, ignoring
CoreAnimation: surface %d x %d is too large
~Context
ogl-context.cpp
CADisableColorMatching
CA_DISABLE_COLOR_MATCHING
0x%x
push_surface
_current_surface != surf
[%u]
 s:[%u x %u (%.2lf %s)] b:[%u x %u (%.2lf %s)] need-clear:%d%s, id:%p
, memoryless
 s:framebuffer
dest
surf
pop_surface
_current_surface != 0
TMPDIR
/tmp
%s/ca-image-%03d-%s-%d.%s
error: failed to export [%d %d] buffer to %s
post_notification
render-notification.cpp
(shape-layer
(fillColor %.3g %.3g %.3g %.3g)
(strokeColor 
(strokeColor %.3g %.3g %.3g %.3g)
(strokeStart %g)
(strokeEnd %g)
(miterLimit %g)
(dashPhase %g)
(dashPattern 
(fillRule evenOdd)
(lineJoin %s)
round
bevel
(lineCap %s)
square
start
middle
natural
left
right
center
justified
Helvetica
font
NSFont
NSGraphicsContext
UIApplication
vertically
horizontally
  name 0x%lx = object 0x%lx 
disableGroupOpacity
disableEdgeAA
enablePixelDoubling
enablePixelQuadrupling
backdropNamespace
ignoresHitTest
displayable
secure
allowsOcclusionDetectionOverride
(source 
unknown sync reply received : %i
error (%i) waiting for sync reply
request_synchronize
render-context.cpp
long synchronize for %x: now (%u,%u): req %c%u(%u)
synchronize timed out for %x with (%u,%u): req %c%u(%u)
HitTest: starting (%u)
HitTest: got layer "%s"
HitTest: ending (%u)
will_commit
!_locked_host_ctx || _locked_host_ctx == host_ctx
above
siblingId
CoreAnimation: missing mask layer 0x%lx
CoreAnimation: missing sublayer %p
Unattached contexts:
  %x: pid %d [%s]
 (requested headroom: %f)
 (client-annotation: %s)
== context %x%s%s%s; pid %d [%s] %sat time %f ==
; colorspace "
Context %x (pid %d [%s]):
  slot %u:
Context %x (pid %d [%s]):
Texture 
[%d %d %d %d]
Utilization: %.2f%%, wasted memory: %.2lf %s
  Context utilization: %.2f%%, wasted memory: %.2lf %s
Total utilization: %.2f%%, wasted memory: %.2lf %s
CA Image Slot
(deferred-image-slot 
(no texture)
unexpected error %i sending sync reply from %x
CASynchronizeHangReport
fromState
toState
<CAStateTransition fromState=%@ toState=%@ %@>
pageUnCurl
<unknown>
(%s)
(%s [%g %g %g %g; %g %g %g %g; %g %g %g %g; %g %g %g %g])
(%s [%g %g %g %g %g %g])
** Render objects at time %f **
%20s %s
TYPE
COUNT
%20s %d
backdrop-group
backdrop-layer
backdrop-state
basic-animation
cprl
chameleon-layer
cloning-terminator-layer
compressed-image
context
deferred-image-slot
distance-field-layer
emitter-behavior
emitter-cell
emitter-layer
emitter-state
function
gradient-layer
group-animation
handle
image
image-provider
image-queue
interpolator
keyframe-animation
key-value
layer
layer-host
match-move-animation
match-property-animation
mesh-transform
asynchronous-state
pattern
pixel-buffer
plugin-layer
portal-layer
portal-state
presentation-modifier
proxy
proxy-layer
replicator-layer
shape-image
shape-layer
shmem
spring-animation
string
subtexture
timing
timing-list
transition
transition-animation
vector
isVirtual
pixelFormat
colorRange
isUnsafe
Unspecified
InternalPanel
LLDoVi
DoVi
RGB_8bit
RGB_10bit
RGB_12bit
YCbCr420_8bit
YCbCr420_10bit
YCbCr420_12bit
YCbCr422_8bit
YCbCr422_10bit
YCbCr422_12bit
YCbCr444_8bit
YCbCr444_10bit
YCbCr444_12bit
RGBCalibrated_8bit
RGBCalibrated_10bit
RGBCalibrated_12bit
YCbCr444_PQ_10bit
YCbCr444_PQ_12bit
YCbCr422_PQ_10bit
YCbCr422_PQ_12bit
YCbCr420_PQ_10bit
YCbCr420_PQ_12bit
RGB_PQ_10bit
RGB_PQ_12bit
RGBCalibrated_PQ_10bit
RGBCalibrated_PQ_12bit
DolbyVision_LowLatency
CADisplayPreferences
matchContent
preferredHdrType
LK_BENCHMARK
com.apple.CoreAnimation.CAWindowServer.DisplayChanged
preferred_mode_with_criteria: resolution [%g x %g], target hdr (%s), user hdr (%s), rate (%g) --> %dx%d@%g %s
CoreAnimation: context hosting changed while locked!
  %x; %spid %d [%s]
 (local)
CoreAnimation: LayerHost trying to host itself or one of its ancestors (context id %d)
(layer-host %x
(inherits-security true)
removed
frozen
extended
ogl-debug-renderer.cpp
add_vertex
_vertices_cur < _vertices_end
sprite
plane
single
random
<%@:%p; 
style
innerStroke
outerStroke
CALinearBlurs
high
medium
Shape union is bogus, new shape: %d, old shape: %d!
allowsRecursiveScreenCapture
~Update
render-updater.cpp
obj->type () == Render::kTypeImageQueue
CoreAnimation: insecure context %x - pid %u [%s].
Cannot host %x in context %x - pid %u [%s].
mark_composited
com.apple.CoreAnimation.CAWindowServer.SecureModeViolation
** Render tree at time %f (bounds %d,%d %dx%d) **
entering
rejecting
kCAContextIgnoresHitTest
allowsHitTesting = NO
culled above and hitTestsAsOpaque = NO
hidden = YES or opacity = 0
masksToBounds = YES and not in bounds
mask not hit
accepting
hit sublayer
hitTestsAsOpaque = YES and in bounds
culled above
within background color
within border
within contents
subclass
no hits
HitTest: start at: (%g, %g)
HitTest: end
rejected context ID
detected
filters
Slot name: %s
Slot occluded by: %s with context 0x%x
Slot occluded by layer from context 0x%x
CARenderPresentRelease
Invalid display attributes version %d
HitTest: %s layer "%s"%s%s
CAMachPort
<CAMachPort %p>
<CAMachPort %p mach_port = %u>
CARenderObject
Unentitled call to server!
<CARenderObject %p>
QuartzCore
Too many CAContexts! Biggest offender (%s [%d]) has %u contexts!
failed to make reply port for commit sync %i
failed to register commit sync on %x
bad index in commit sync reply : %u not in %@
dead reply from commit sync
unrecognized reply from commit sync
long commit sync wait %i : %@
excessive commit sync wait : %@
unknown error while waiting for commit sync
failed to make send once for update sync on %x
failed to register update sync on %x
failed to make reply port for update sync on %x : r=%i
dead reply from update sync on %u:%x
unrecognized reply from update sync on %u:%x
long update sync wait %i : %u:%x
excessive update sync wait : %u:%x
error while waiting for update sync on %x
CA::Context
unable to register with server: 0x%x
CoreAnimation: NULL color space set on context (%x)
_colorSpaceDidChange
_contentsFormatDidChange:
CoreAnimation: transaction fences failed : %i
commit_transaction
CAContextInternal.mm
di == _deferred_by_lid->end ()
v24@?0^v8I16I20
v16@?0^v8
can_defer
CA::Transaction::sync_replies
commit_transaction_block_invoke
pending_count > 0
v28@?0Q8@"NSObject<OS_dispatch_mach_msg>"16i24
%u(%u:%x)
,%u(%u:%x)
task_name_for_pid failed: 0x%x
CoreAnimation: failed to lock IOSurface %x
grad
Invalid transform: %s (position %d)
Invalid color matrix: %s (position %d)
Invalid number of numeric values in path: %s
Invalid number of arguments to 'm' path operator: %s
Invalid number of arguments to 'l' path operator: %s
Invalid number of arguments to 'c' path operator: %s
Invalid number of arguments to 'v' path operator: %s
Invalid number of arguments to 'q' path operator: %s
Invalid number of arguments to 't' path operator: %s
Invalid number of arguments to 'y' path operator: %s
Invalid number of arguments to 'h' path operator: %s
Invalid number of arguments to 're' path operator: %s
Invalid path operator: %s
Ignoring trailing characters: %s
true
kCGImageSourceMemoryMapAsShared
Failed to create pattern from image
Failed to open image
opacity
Incorrect number of color components (need %d)
A8asL8
Failed to load image
Unable to open pdf document
pdfDocument element must specify src attribute
cannot create font from name: %s
mode
modeDisplay
modeLayer
includeContextList
excludeContextList
stopAfterContextList
stopBeforeSlot
destination
displayName
originX
originY
timeOffset
reuseBackdrops
enforceSecureMode
ignoreAccessibility
ignoreSublayers
ignoreLayerFixup
ignoreDisableUpdateMasks
trackBackdropReuseFailures
bottomLeftOrigin
contextId
layerId
contextList
slotId
sizeWidth
sizeHeight
formatWideGamut
formatOpaque
mapCacheAttribute
CA Snapshot (Unprotected)
CA Snapshot (Protected)
CoreAnimation: failed to create Metal context!
CoreAnimation: sw renderer doesn't support tiling
whippet
CoreAnimation: %d by %d image is too large for software renderer, ignoring
SW renderer invalid destination format %c%c%c%c
CoreAnimation: warning, deleted thread with uncommitted CATransaction; created by:
CoreAnimation: warning, deleted thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
CA_DEBUG_TRANSACTIONS
CA_ASSERT_MAIN_THREAD_TRANSACTIONS
CoreAnimation: CA_ASSERT_MAIN_THREAD_TRANSACTIONS is set and an implicit transaction wasn't created on a main thread.
Started implicit transaction for thread %p
UITrackingRunLoopMode
register_bool_key
CATransactionInternal.mm
_bool_key < CHAR_BIT * sizeof (Level::_bool_values)
bool_value
key < (CHAR_BIT * sizeof (Level::_bool_values))
set_bool_value
CoreAnimation: new transaction fence disabling existing low latency hint.
CoreAnimation: invalid commit handler phase! Defaulting to pre-commit.
cannot add handler to %i from %i - dropping
CoreAnimation: cannot add handler to %i from %i
CATransaction
cannot add handler to %i from %i
CoreAnimation: warning, encountered thread with uncommitted CATransaction; created by:
CoreAnimation: warning, encountered thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
Transaction
Transaction.Stalls
start_frame
!nested || s->_frame_commit_deadline != 0
!nested || s->_frame_begin_time != 0
!nested || s->_frame_start_time != 0
finish_frame
s->_frame_depth
!s->_frame_depth
order_of_phase
phase_is_valid (phase)
CADebugTxHandlers
animation
CAAnimation
{%@:%p %@:%p %@ %@}
opaque
allowsDisplayCompositing
CoreAnimation: [EAGLContext renderbufferStorage:fromDrawable:] was called from a non-main thread in an implicit transaction! Note that this may be unsafe without an explicit CATransaction or a call to [CATransaction flush].
maximumDrawableCount
[CAEAGLLayer setInputTime:] - non-zero time already exists!
com.apple.opengles
EAGLContext
CADisplayTimerAlignPhase: unexpected state (interval:%llx, heartbeat:%llx)
CADisplayTimer
<CADisplayTimer %p>
(backdrop-layer %ld
(group "%s")
(groupNamespace global)
(groupNamespace hostingNamespacedContext)
(scale %g)
(zoom %g)
(marginWidth %g)
(backdropRect [%g %g; %g %g])
(captureOnly true)
(allowsInPlaceFiltering true)
(reducesCaptureBitDepth true)
(ignoresScreenClip true)
(tracksLuma true)
(buffer [%d x %d] scale %g)
collected backdrop group %p buffer %p
Filter merging failed.
Filter A:
Filter B:
Filter merging aborted: layer.bounds == blur.inputBounds
(transition %s
create_builtin_types
CAMLObjCContext.mm
!_builtin_types
NSString
CAML warning:%d: 
CAML error:%d: 
No such class `%s'
Unable to open script: %s
Delegate does not support <script>.
Null <script> contents
Delegate does not support script values.
CA:Render:Server:port_set (): mach_port_mod_refs () returned error 0x%x
unable to find bootstrap server
unable to register bootstrap port %s: %x
com.apple.coreanimation.render-server
CoreAnimation: mach_msg returned 0x%x for retry with size:%zu
Couldn't allocate buffer of %zu bytes for message!
CoreAnimation: mach_msg returned 0x%x!
CA::Render::DeallocQueue
tint
(pixel-buffer %c%c%c%c [%d %d])
oglFlip
CAImageProvider: %.3gMB cached (%.3gMB purgeable); idle %.3gs -> %.3gs
(image-provider [%d %d] [%d %d] [%d %d]
(fillColor 
(fillColor #%08x 
defaultDisplay
CARenderServerBufferRef is now a CF type. Please use CFRetain/CFRelease instead of CARenderServerDestroyBuffer!
CARenderServerBuffer
%s display:
Total Frames:
Skipped Frames:
Total Cloned Frames:
Skipped Cloned Frames:
Non-Dirty Frames:
<CARenderServerBuffer %p>
CA_FORCE_LOCAL_SERVER
com.apple.CARenderServer
ogl-metal.mm
Failed to allocate %u-byte Metal buffer
com.apple.QuartzCore
com.apple.coreanimation.mtl_submission
com.apple.coreanimation.mtl_completion
Failed to create MTLCommandQueue
Mismatched MTLCommandQueue and MTLDevice
Metal.Performance
com.apple.coreanimation.mtl_dealloc
CoreAnimation Renderer
MetalContext
quartzcore_bundle != nil
metallib
metallib_path != nil
%s: %s
yyyyMMdd-HHmmssSSS
CoreAnimation-%@.gputrace
Capturing %d GPU frames to %s
Unable to capture to GPU trace file: %s
Capture to a GPU trace file is not supported. Try setting env var: METAL_CAPTURE_ENABLED=1
Finished capturing GPU frames
Can't run metal against null surface
clear_region
surf != nullptr
v16@?0@"<MTLCommandBuffer>"8
init_state
current_surface () && "no such thing as current fbo"
window_bounds
0 && "no bound surface?"
function_uniform
total_elements <= kMaxFunctionUniformSize * 4
get_pipeline_spec
layout == VertexLayout_Surface
surf->backing_attachment == 0
spec.fragment.blend_function == OGL_BLEND_NONE
lift_blend_function
!fragment.generic
push_blend_function
fragment.blend_function == OGL_BLEND_NONE
%03d
%02d
%01d
%04d
%@%s%@%s%@%s%@
%@_%@
get_generic
texture_function_info[texture_function].is_fixed ()
fc_generic
fc_vertex_layout
fc_framebuffer_fetch
fc_framebuffer_sample
fc_attachment_count
fc_has_lod_bias
fc_has_noise_scale
fc_has_ycbcr_matrix
fc_has_gamma_luts
fc_has_asg_77_weights
fc_has_noise_tex
fc_has_color_params
fc_has_attachment_%d
fc_texture_function
fc_blend_function
fc_destination_function
fc_image_count
fc_dest_index
fc_dest_count
fc_noise_width
fc_clamp_color
fc_extended_range
fc_unbounded_range
fc_debug_xr
fc_has_premultiply
fc_has_hdr_scale
fc_has_edr_factor
fc_outputs_velocity
fc_image_function%d
fc_coord_function%d
fc_plane_count%d
fc_texcoord_count%d
fc_memoryless_index%d
fc_filter%d
fc_color_inputs%d
fc_color_opcodes%d
fc_color_opaque%d
fc_has_color_trc%d
fc_has_color_cube%d
fc_has_image_%d%c
type == VertexShader::Type_Fixed
fc_base_color
get_pipeline
pipeline && pipeline->is_complete ()
_lph
_lpf
fixed_frag_lph_cph
fixed_frag_lph_cpf
fixed_frag_lpf_cpf
create_fragment_shader
function_name != nil
function=%s spec=%s
frag_
fixed_vert_lph_spc
fixed_vert_lph_gen
fixed_vert_lpf_spc
fixed_vert_lpf_gen
vert_
Specializing shader function %s for %s with constant values %s
Loading shader function %s for %s
Building render pipeline %s with descriptor %s
%s%s%s%s%s%s%s
com.apple.coreanimation.pipelines
Metal.Pipelines
Metal.Pipelines.Stall
draw_
spec=%s
draw
current_metal_surface () != nullptr
draw_elements
mode != OGL_PRIMITIVE_QUADS
get_texture_function() < OGL_TEX_PATH_FIRST || get_texture_function() > OGL_TEX_PATH_LAST
draw_lines
draw_points
stroke_lines
get_texture_function () == OGL_TEX_STROKE_LINE
draw_path_cubics
get_texture_function() == OGL_TEX_PATH_CUBIC
draw_path_rects
get_texture_function() == OGL_TEX_PATH_RECT
draw_path_lines
get_texture_function () == OGL_TEX_PATH_STROKE_LINE
draw_path_curves
get_texture_function () == OGL_TEX_PATH_STROKE_CURVE
draw_path_joins
get_texture_function () == OGL_TEX_PATH_STROKE_MITER_JOIN || get_texture_function () == OGL_TEX_PATH_STROKE_ROUND_JOIN
draw_axis_aligned_rects
get_texture_function () == OGL_TEX_PATH_CLEAR || get_texture_function () == OGL_TEX_PATH_BLIT || get_texture_function () == OGL_TEX_PATH_BLIT_EO || get_texture_function () == OGL_TEX_ATTACHMENT_CLEAR
draw_buffer_image_rects
get_texture_function () == OGL_TEX_BUFFER_IMAGE_BLIT
draw_apl_dimming_factor
get_texture_function () == OGL_TEX_APL_DIMMING
encode_fragment_uniforms
uintptr_t (dst) - uintptr_t (_encoded.frag_uniform) <= uniform_size
encode_uniform_image_arg
rs->op >= RenderState::distance_fill && rs->op <= RenderState::distance_outer_stroke
encode_uniform_function_args
!tex_info.arg && tex_info.layout.fields[0].count == 0
noise
encode_draw
instance_count == 1
set_destination_textures
current_surface () == nullptr
count <= MAX_COLOR_ATTACHMENTS
%zu by %zu iosurface is too large for GPU
Unsupported IOSurface pixel format: %.4s
Unable to create MTLTexture for destination IOSurface
set_metal_state
_command_buffer == nil
_encoder == nil
!surf->needs_clear
Compiling render pipeline: %s
Resulting pipeline state: %p (flags=%s)
Compiling fragment shader: %s
Resulting function: %p
Compiling vertex shader: %s
Unrecognized shader spec: %s
create_texture
Failed to allocate MTLTexture
com.apple.coreanimation.image
update_image
false && "1D textures unimplemented"
Failed to allocate MTLTexture from IOSurface 0x%x. Row bytes (%ld) not %ld aligned.
Failed to allocate MTLTexture from IOSurface 0x%x. Descriptor row bytes (%ld) larger than surface row bytes (%ld).
Failed to allocate MTLTexture from IOSurface 0x%x. Texture block bytes (%ld) not equal to surface block bytes (%ld).
update_surface
tex->dimensions == 2 && "surface textures must be 2D"
Failed to allocate MTLTexture from IOSurface 0x%x.
com.apple.coreanimation.surface
generate_mipmaps_for_texture
tex->textures[0] && "nil mtl texture?"
%d by %d image is too large for GPU, ignoring
Image stride is too large for GPU, ignoring
delete_image
state_image_binding (_state, tex_unit) != tex
gaussian_texture
Surface %d x %d is too large
Failed to allocate %dx%d surface texture.
Descriptor (0x%llx) and texture (0x%llx) protection mismatch!
Surface from iosurface %d x %d is too large
com.apple.coreanimation.reinterpreted-surface
Target of memoryless surface not bound, possible misuse.
compute_apl
sum_apl_and_compute_dimming_factor
function=%s
pipeline with function=%s
Failed to allocate Metal buffer
Failed to allocate uniform Metal buffer
stop_encoders
!memoryless_in_use ()
Command buffer allocation failed!
MTLCommandBuffer %p, protection 0x%llx, label %s, error = %s
Unable to start render command encoder
Unable to start blit command encoder
average_luma_surface
!surf->protection_options
Ignoring [%d x %d] invalid surface dimensions
Unexpected framebuffer format %c%c%c%c
Failed to allocate [%d x %d] %c%c%c%c framebuffer %s
Metal failed to load vertex function
Metal failed to load fragment function
Metal failed to load library
Metal failed to build render pipeline
Metal failed to load pipeline library
Metal failed to specialize vertex function
Metal failed to specialize fragment function
Metal failed to load render pipeline
Metal failed to load compute shader
Metal failed to build compute pipeline
Invalid TextureEdgeMode 0x%x
downsample_4_frag
downsample_6_frag
downsample_8_frag
upsample_frag
downsample_blur_2_frag
downsample_blur_4_frag
narrow_blur_7_frag
narrow_blur_11_frag
narrow_blur_15_frag
narrow_blur_19_frag
narrow_blur_23_frag
narrow_blur_27_frag
single_pass_blur_3
variable_blur_downsample_frag
variable_blur_frag
linear_blur_frag
axial_shading_frag
radial_shading_frag
radial_complex_shading_frag
conic_shading_frag
home_affordance_base
alpha_threshold
p3_clamp
alpha_linear_premultiply
edr_scale
harmony
display_overdrive_lut_gen
display_overdrive_srgb_sampler
display_overdrive_linearize
luma_boost
stroke_line_frag
path_cubic_frag
path_rect_frag
path_stroke_line_frag
path_stroke_curve_frag
path_stroke_miter_join_frag
path_stroke_round_join_frag
path_clear_frag
path_blit_frag
path_blit_frag_eo
buffer_image_blit_frag
asg_frag
asg_75_frag
asg_50_frag
attachment_clear_frag
apply_apl_dimming
A008
L008
L016
LA88
L555
2C16
2C0h
RGBA
BGRA
0081
R10k
l10r
l64r
RGhA
RGfA
0556
set_pipeline_state
!is_complete ()
std_vert0
std_vert1
upsample_vert
downsample_blur_vert
variable_blur_vert
stroke_line_vert
path_cubic_vert
path_rect_vert
path_stroke_line_vert
path_stroke_curve_vert
path_stroke_miter_join_vert
path_stroke_round_join_vert
path_blit_vert
buffer_image_blit_vert
asg_vert
create_image_binding
plane < OGL_MAX_PLANES_PER_IMAGE
Cannot cast linear FP16 texture to sRGB sampler variant
message
CAML
colorspace
kCGColorSpace%s
Unable to create colorspace: %s
sRGB
create_sax_vtable
CAMLContext.cpp
!_sax_vtable
<script> element not supported
http://www.apple.com/CoreAnimation/1.0
Unknown namespace URI: %s
script
Ignoring element `%s'
caml
Root element must be `caml'
`p' element must have `key' attribute
type
Unknown type `%s'
Invalid type `%s' (need `%s')
object
Unknown value element `%s'
`o' element must have `type' attribute
final
mica_expanded
Ignoring untyped attribute `%s'
Unknown object id: `%s'
scriptComponents
delegate
Undefined property value for key `%s'
+[CAFenceHandle _newFenceFromServer:isObservable:]
CAFenceHandle.mm
MACH_PORT_VALID (port)
-[CAFenceHandle dealloc]
[self isInvalidated]
-[CAFenceHandle init]
-[CAFenceHandle encodeWithCoder:]
[coder isKindOfClass:[NSXPCCoder class]]
<CAFenceHandle:%p name=%llx fence=%llx usable=%@>
<CAFenceHandle:%p name=%llx usable=%@>
alloc_node
render-layer-node.cpp
mid_bitmap != kAllUsed
low_bitmap != kAllUsed
@index(%d)
@index(
com.apple.GL.event.frameboundary.end
com.apple.coreanimation.display.%s
com.apple.coreanimation.display
%f %x "%s" (%p): replacing %p (eval %u; frames %u):
%f %x "%s" (%p): adding %p:
%f %x "%s" (%p): not adding %p:
%f %x "%s" (%p): removing all:
%p (eval %u; frames %u):
%f %x "%s" (%p): removing %p (eval %u; frames %u):
%f %x "%s" (%p): collecting %p (t %f; speed %g; eval %u; frames %u):
CoreAnimation: ignoring invalid path
(path
%g %g m
%g %g l
%g %g %g %g q
%g %g %g %g %g %g c
%s - unexpected path type %u
%s - expected %u points, but decoded %u points
(function %s)
suspiciously large function size: %zu count: %zu
suspiciously large interpolations: %zu count: %zu
%s - _values = NULL
InterpolatedFunction
%s - _locations = NULL
%s - _interpolations = NULL
%s - width = %u
Gradient
com.apple.coreanimation.imageprovider.concurrent
CAImageProvider
<CAImageProvider %p: %u x %u>
sublayers
objectId
beforeObjectId
beforeObject
keyPath
{%@:%p %@:%p %@ %@ before %@}
CA_DISABLED_EXTENSIONS
CoreAnimation: disabling OpenGL extension %s
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0, texmat1, texmat2;
uniform highp vec4 texmatD;
uniform highp vec4 texmatW;
uniform highp vec4 chroma_matrix%d;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1;
attribute mediump vec3 vertex_normal;
varying lowp vec4 color;
varying highp vec2 texcoord%d_0;
varying highp vec2 texcoord%d_%d;
varying highp vec3 texcoordD;
varying highp vec3 texcoordN;
void main() {
  gl_Position = vertex_matrix * vertex_position;
  color = vertex_color;
  texcoord%d_0 = vertex_texcoord%d * texmat%d.xy + texmat%d.zw;
  texcoord%d_%d = texcoord%d_0 * chroma_matrix%d.xy + chroma_matrix%d.zw;
  texcoord%d_%d = texcoord%d_0;
  texcoord%d_%d = (vertex_texcoord%d + vec2(%g, %g)) * texmat%d.xy + texmat%d.zw;
  texcoordD = vec3(gl_Position.xy * texmatD.xy + texmatD.zw * gl_Position.w, gl_Position.w);
  texcoordN = vec3(gl_Position.xy * texmatW.xy + texmatW.zw * gl_Position.w, gl_Position.w * float(NOISE_SIZE));
%Wlowp vec4 R = %s;
%Wlowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
%Wlowp float DaSa = D.a*S.a;
%WS = S/max(S.a, 0.005);
%WD = D/max(D.a, 0.005);
%WR.rgb += %s * DaSa;
%WR.rgb += %s;
%WR.a += DaSa;
%WR.rgb = min(R.rgb, R.a);
inline_color_shader
ogl-gl.cpp
opaque && "4DLUT must be opaque!"
    lowp vec4 c = s%d, t;
    lowp vec3 c = s%d.rgb, t;
    c = c / max(s%d.a, .005);
    c = c.r * colorP%d[%d].rgb + c.g * colorP%d[%d].rgb + c.b * colorP%d[%d].rgb + colorP%d[%d].rgb;
    t = abs(c);
    t = pow(t, colorP%d[%d].rgb);
    t = pow(t, colorP%d[%d].rgba);
    c.a = c.a < 0.0 ? t.a * -1.0 : t.a;
    c.r = c.r < 0.0 ? t.r * -1.0 : t.r; c.g = c.g < 0.0 ? t.g * -1.0 : t.g; c.b = c.b < 0.0 ? t.b * -1.0 : t.b;
    t.r = t.r < -colorP%d[%d].r / colorP%d[%d].r ? 0.0 : pow (colorP%d[%d].r * t.r + colorP%d[%d].r, colorP%d[%d].r)
    t.g = t.g < -colorP%d[%d].g / colorP%d[%d].g ? 0.0 : pow (colorP%d[%d].g * t.g + colorP%d[%d].g, colorP%d[%d].g)
    t.b = t.b < -colorP%d[%d].b / colorP%d[%d].b ? 0.0 : pow (colorP%d[%d].b * t.b + colorP%d[%d].b, colorP%d[%d].b)
    t.a = t.a < -colorP%d[%d].a / colorP%d[%d].a ? 0.0 : pow (colorP%d[%d].a * t.a + colorP%d[%d].a, colorP%d[%d].a)
    c.r = c.r < 0.0 ? t.r * -1.0: t.r; c.g = c.g < 0.0 ? t.g * -1.0 : t.g; c.b = c.b < 0.0 ? t.b * -1.0 : t.b;
    t.r = t.r < -colorP%d[%d].r / colorP%d[%d].r ? colorP%d[%d].r : pow (colorP%d[%d].r * t.r + colorP%d[%d].r, colorP%d[%d].r) + colorP%d[%d].r
    t.g = t.g < -colorP%d[%d].g / colorP%d[%d].g ? colorP%d[%d].g : pow (colorP%d[%d].g * t.g + colorP%d[%d].g, colorP%d[%d].g) + colorP%d[%d].g
    t.b = t.b < -colorP%d[%d].b / colorP%d[%d].b ? colorP%d[%d].b : pow (colorP%d[%d].b * t.b + colorP%d[%d].b, colorP%d[%d].b) + colorP%d[%d].b
    t.a = t.a < -colorP%d[%d].a / colorP%d[%d].a ? colorP%d[%d].a : pow (colorP%d[%d].a * t.a + colorP%d[%d].a, colorP%d[%d].a) + colorP%d[%d].a
    t.r = t.r < colorP%d[%d].r ? colorP%d[%d].r * t.r : pow(colorP%d[%d].r * t.r + colorP%d[%d].r,colorP%d[%d].r);
    t.g = t.g < colorP%d[%d].g ? colorP%d[%d].g * t.g : pow(colorP%d[%d].g * t.g + colorP%d[%d].g,colorP%d[%d].g);
    t.b = t.b < colorP%d[%d].b ? colorP%d[%d].b * t.b : pow(colorP%d[%d].b * t.b + colorP%d[%d].b,colorP%d[%d].b);
    t.a = t.a < colorP%d[%d].a ? colorP%d[%d].a * t.a : pow(colorP%d[%d].a * t.a + colorP%d[%d].a,colorP%d[%d].a);
    t.r = t.r < colorP%d[%d].r ? colorP%d[%d].r * t.r + colorP%d[%d].r : pow (colorP%d[%d].r * t.r + colorP%d[%d].r, colorP%d[%d].r) + colorP%d[%d].r;
    t.g = t.g < colorP%d[%d].g ? colorP%d[%d].g * t.g + colorP%d[%d].g : pow (colorP%d[%d].g * t.g + colorP%d[%d].g, colorP%d[%d].g) + colorP%d[%d].g;
    t.b = t.b < colorP%d[%d].b ? colorP%d[%d].b * t.b + colorP%d[%d].b : pow (colorP%d[%d].b * t.b + colorP%d[%d].b, colorP%d[%d].b) + colorP%d[%d].b;
    t.a = t.a < colorP%d[%d].a ? colorP%d[%d].a * t.a + colorP%d[%d].a : pow (colorP%d[%d].a * t.a + colorP%d[%d].a, colorP%d[%d].a) + colorP%d[%d].a;
    c.%c = texture2D(texture%d, vec2(c.%c*colorP%d[%d].%c, colorP%d[%d].%c)).r;
    mediump vec2 c_st = vec2(c.r * colorP%d[%d].x + colorP%d[%d].y, 0.5);
    c = texture2D(texture%d, c_st).rgb;
    c = c * colorP%d[%d].x + colorP%d[%d].y;
    c = texture3D(texture%d, c).rgb;
    c.b = c.b * colorP%d[%d].z;
    lowp float b_mix = fract(c.b);
    c.b = floor(c.b) * colorP%d[%d].w;
    mediump vec2 c_st = vec2(c.r, c.g);
    c_st.r = c_st.r * colorP%d[%d].x + colorP%d[%d].y;
    c_st.g = c_st.g * colorP%d[%d].x * colorP%d[%d].w + colorP%d[%d].y * colorP%d[%d].w + c.b;
    lowp vec3 c0 = texture2D(texture%d, c_st).rgb;
    lowp vec3 c1 = texture2D(texture%d, c_st + vec2(0., colorP%d[%d].w)).rgb;
    c = mix(c0, c1, b_mix);
    mediump vec3 c_stp = c.rgb;
    c.a = c.a * colorP%d[%d].z;
    lowp float a_mix = fract(c.a);
    c.a = floor(c.a) * colorP%d[%d].w;
    c_stp.r = c_stp.r * colorP%d[%d].x + colorP%d[%d].y;
    c_stp.g = c_stp.g * colorP%d[%d].x + colorP%d[%d].y;
    c_stp.b = c_stp.b * colorP%d[%d].x * colorP%d[%d].w + colorP%d[%d].y * colorP%d[%d].w + c.a;
    lowp vec3 c0 = texture3D(texture%d, c_stp).rgb;
    lowp vec3 c1 = texture3D(texture%d, c_stp + vec3(0., 0., colorP%d[%d].w)).rgb;
    c = vec4(mix(c0, c1, a_mix), 1.);
    s%d.rgb = c * s%d.a;
    s%d = vec4(c.rgb, 1.);
mediump
lowp
2DRect
#extension GL_OES_standard_derivatives : require
#extension GL_EXT_shader_framebuffer_fetch : require
uniform lowp vec4 function_arg;
uniform lowp vec4 coord_arg;
uniform mediump float noise_scale;
uniform %s sampler%s texture%d;
uniform lowp sampler%s texture%d;
uniform lowp vec4 blend_color0;
uniform lowp vec4 blend_color1;
uniform mediump vec4 colorP%d[%d];
uniform mediump mat3 ycbcr_matrix%d;
uniform mediump vec3 ycbcr_bias%d;
uniform mediump vec4 render_state;
uniform lowp vec3 color_matrix[3];
uniform lowp vec3 color_matrix[4];
uniform lowp vec4 color_matrix[5];
uniform lowp vec4 color_dodge;
uniform lowp vec4 color_lighten;
uniform lowp float reversed;
uniform lowp vec4 color_burn;
uniform lowp vec4 color_darken;
uniform lowp vec4 curves[4];
void main(void) {
CA_EMPTY_SHADERS
  gl_FragData[0] = vec4(0.0);
  return;
highp vec2 texcoord0_0 = vec2(gl_PointCoord.s, 1.0 - gl_PointCoord.t);
  lowp vec4 d%d = texture%sProj(texture%d, texcoordD);
  lowp vec4 d%d = gl_LastFragData[%d];
texcoord
  mediump vec2 tc%d_%d = radialCoord(texcoord%d_%d);
  mediump vec2 tc%d_%d = conicCoord(texcoord%d_%d);
  mediump vec2 tc%d_%d = fract(texcoord%d_%d) * coord_arg.xy + coord_arg.zw;
assemble_fragment_shader
i > 0
key->function.f.image_func[i - 1] == OGL_IMAGE_IDENTITY || key->function.f.image_func[i - 1] == OGL_IMAGE_DEST
tlum
  mediump vec2 tlum%d_%d = vec2(dot(%c%d.rgb, vec3(.2125, .7154, .0721)) * texcoord%d_%d.y + texcoord%d_%d.x, 0.5);
  mediump vec2 tc%d_%d = clamp(texcoord%d_%d, coord_arg.xy, coord_arg.zw);
  %s vec4 %c%d = texture%s(texture%d, %s%d_%d);
  %s vec4 %c%d;
    highp vec4 f;
    f.xy = fract(%s%d_0 / texmat%d.xy);
    f.xy = fract(%s%d_0);
    f.zw = vec2(1.) - f.xy;
    f = f.xzxz * f.yyww;
    %c%d = texture%s (texture%d, %s%d_%d) * f.w;
    %c%d = texture%s (texture%d, %s%d_%d) * f.z + %c%d;
    %c%d = texture%s (texture%d, %s%d_%d) * f.y + %c%d;
    %c%d = texture%s (texture%d, %s%d_%d) * f.x + %c%d;
  lowp vec4 s%d = vec4(t%d.rgb, 1.);
  lowp vec4 s%d = t%d.yxwz;
  lowp vec4 s%d = vec4(t%d.yxw, 1.);
  lowp vec4 s%d = t%d.zyxw;
  lowp vec4 s%d = vec4(t%d.zyx, 1.);
  lowp vec4 s%d = t%d.wzyx;
  lowp vec4 s%d = vec4(t%d.wzy, 1.);
  lowp vec4 s%d = vec4(0., 0., 0., t%d.a);
  lowp vec4 s%d = squareImage(%s%d_0);
  lowp vec4 s%d = circleImage(%s%d_0);
  lowp vec4 s%d = supercircleImage(%s%d_0);
  lowp vec4 s%d = vec4(0.);
  lowp vec4 s%d = vec4(t%d.r);
  lowp vec4 s%d = vec4(t%d.a);
  lowp vec4 s%d = vec4(clamp(ycbcr_matrix%d * vec3(t%d.r + ycbcr_bias%d.x, t%d.rg + ycbcr_bias%d.yz), 0., 1.), 1.);
  lowp vec4 s%d = t%d*vec4(2.0) + vec4(-0.75);
  s%d = vec4(s%d.zyx, 1.0);
  lowp vec4 s%d = renderImage(t%d.r);
  lowp vec4 s%d = vec4(1.) - t%d;
  lowp vec4 s%d = vec4(t%d.rrr, 1.h);
  lowp vec4 s%d = t%d.rrrg;
  lowp vec4 s%d = vec4(1.0);
  lowp vec4 s%d = t%d.gggg;
  lowp vec4 s%d = t%d.bbbb;
  lowp vec4 s%d = d0;
  lowp vec4 s%d = vec4(clamp(ycbcr_matrix%d * vec3(t%d.yzw + ycbcr_bias%d.xyz), 0., 1.)*t%d.x , t%d.x);
  lowp vec4 s%d = vec4(clamp(ycbcr_matrix%d * vec3(t%d.g + ycbcr_bias%d.x, t%d.rb + ycbcr_bias%d.yz), 0., 1.), 1.);
  lowp vec4 s1 = color;
  lowp vec4 s2;
    lowp vec4 S = s1, D = d0;
    s2 = R; s1 = d0;
  gl_FragData[0] = %s;
    lowp vec4 S = gl_FragData[%d];
    lowp vec4 D = d%d;
    gl_FragData[%d] = R;
    mediump vec3 n = texture%sProj(texture%d, texcoordN).xyz;
    n = (n - .5) * noise_scale;
    lowp vec3 c = gl_FragData[0].rgb + n*gl_FragData[0].a;
    gl_FragData[0].rgb = clamp(c, 0., gl_FragData[0].a);
gl_FragData[0] = %s;
%08x %08x vertex shader:
%s%s---
%08x %08x fragment shader:
%s%s---
texture%d
vertex_matrix
blend_color0
blend_color1
texmat0
texmat1
texmatD
noise_scale
texmatW
colorP0
colorP1
ycbcr_matrix0
ycbcr_matrix1
ycbcr_bias0
ycbcr_bias1
chroma_matrix0
chroma_matrix1
render_state
color_matrix
offset
weight
axis
divide
minmax
bgcolor
minmax_dir
args
color_dodge
color_lighten
reversed
color_burn
color_darken
curves
function_arg
coord_arg
GL_NO_ERROR
GL_INVALID_ENUM
GL_INVALID_VALUE
GL_INVALID_OPERATION
GL_STACK_OVERFLOW
GL_STACK_UNDERFLOW
GL_OUT_OF_MEMORY
GL_INVALID_FRAMEBUFFER_OPERATION;
gl_texture_filter
filter < OGL_TEXTURE_FILTER_COUNT
vec4(0.)
S + D*(1. - S.a)
S*D.a
S*(1. - D.a)
S*D.a + D*(1. - S.a)
S*(1. - D.a) + D
D*S.a
D*(1. - S.a)
S*(1. - D.a) + D*S.a
S*(1. - D.a) + D*(1. - S.a)
S + D
D - S
S - D
S + D*(1 - S)
min(S, D)
max(S, D)
vec4 (D.rgb + S.rgb, S.a + D.a * (1. - S.a))
vec4 (D.rgb + S.rgb - (2. * D.rgb * S.rgb), S.a + D.a * (1. - S.a))
vec4(mix(D.rgb, S.rgb, D.a), 1.0)
vec4(D.rgb, S.a)
vec4(D.rgb, S.a * D.a)
S + D;
R.a = min(1., R.a);
R.rgb = R.a - S.a - D.a + R.rgb
D*(1. - S.a) + S*(1. - D.a) + D*S
mix(2.*D.rgb*S.rgb, 2.*(S.rgb*D.a + D.rgb*(S.a - S.rgb)) - S.a*D.a, step(.5*D.a, D.rgb))
min(D.rgb*S.a, S.rgb*D.a)
max(D.rgb*S.a, S.rgb*D.a)
min(S.aaa, D.rgb*S.a*S.a/max(S.a - S.rgb, .005))
step(.005, S.rgb) * (D.a*S.a - S.a*S.a*(D.a - D.rgb)/max(S.rgb, .005))
2.*D.rgb*S.rgb - (D.rgb / max(D.a, .005))*D.rgb*(2.*S.rgb - S.a)
mix(2.*D.rgb*S.rgb, S.a*D.a - 2.*(D.a - D.rgb)*(S.a - S.rgb), step(.5*S.a, S.rgb))
abs(D.rgb*S.a - S.rgb*D.a)
S.rgb*D.a - D.rgb*S.a
S.rgb*D.a / max(D.rgb*S.a, .005)
D.rgb*S.a - D.a*(S.a - S.rgb)
D.rgb*S.a - D.a*(S.a - 2.*S.rgb)
mix(min(D.rgb*S.a, 2.*S.rgb*D.a), max(D.rgb*S.a, 2.*S.rgb*D.a - D.a*S.a), step(.5*S.a, S.rgb))
vibrantDark(S, D)
vibrantLight(S, D)
vibrantDarkReversed(S, D)
vibrantLightReversed(S, D)
darkenSover(S, D)
lightenSover(S, D)
setLum(setSat(S.rgb, sat(D.rgb)), lum(D.rgb))
setLum(setSat(D.rgb, sat(S.rgb)), lum(D.rgb))
setLum(S.rgb, lum(D.rgb))
setLum(D.rgb, lum(S.rgb))
vec4(S.rgb * D.a + D.rgb * (1. - D.a * S.a), 1.0)
color
s0 / s0.a
color * s0
color * (s0 / s0.a)
color * s0 * s1.a
color * s0 * (1.0 - s1.a)
mix(s1, s0, color.a)
mix(color, s0, function_arg.x)
mix(color * s0.a, s0, function_arg.x)
s0 + s1
color * s0.a
color * (1.0 - s0.a)
vec4(color.rgb * color.a, color.a)
mix(s1, d0, s0.a)
mix(s1, s2, s0.a)
vec4(s0.r * color_matrix[0] + s0.g * color_matrix[1] + s0.b * color_matrix[2], s0.a)
vec4(s0.r * color_matrix[0] + s0.g * color_matrix[1] + s0.b * color_matrix[2] + s0.a * color_matrix[3], s0.a)
colorMatrix4x4Bias(s0)
vec4((s0.r / s0.a) * color_matrix[0] + (s0.g / s0.a) * color_matrix[1] + (s0.b / s0.a) * color_matrix[2], 1.)
vec4((s0.r / s0.a) * color_matrix[0] + (s0.g / s0.a) * color_matrix[1] + (s0.b / s0.a) * color_matrix[2] + color_matrix[3], 1.)
colorMatrix4x4BiasDivideAlpha(s0)
perlinBias(s0, function_arg.x)
vibrantDark(s0, d0)
vibrantLight(s0, d0)
mix(s0, s1, function_arg)
luminanceCurve(s0, function_arg, color.a)
colorCurves(s0)
gl_FragData[0].aaaa
vertex_position
vertex_color
vertex_texcoord0
vertex_texcoord1
vertex_point_size
stealthMode
forceDisplay
kCGContextFlush
kCGContextSynchronize
kCGContextWait
kCGContextClear
kCGContextErase
CA Whippet GetLayer
CAWindowServerSurface
targetId
target
CALayer
<CAStateTransitionElement target=<%@: %p> key=%@ %@>
suspiciously long string: %zu
"%s"
-[CAMetalDrawable releasePrivateReferences:]
CAMetalLayer.mm
priv
[CAMetalLayerDrawable texture] should not be called after already presenting this drawable. Get a nextDrawable instead.
device
framebufferOnly
drawableSize
EDRMetadata
protectionOptions
com.apple.coreanimation.CAMetalLayerTimeoutQueue
CAMetalLayer ignoring invalid setDrawableSize width=%f height=%f
CAMetalLayerInvalid
invalid pixel format %lu
[CAMetalLayer nextDrawable] returning nil because device is nil.
[CAMetalLayer nextDrawable] returning nil because allocation failed.
[CAMetalLayer nextDrawable] returning nil due to 1 second timeout. Set allowsNextDrawableTimeout to keep retrying.
[CAMetalLayer newDrawable] is deprecated. Please use [CAMetalLayer nextDrawable] instead.
CoreAnimation: setting `contents' on CAMetalLayer may result in undefined behavior
CAMetalLayerInvalidMaximumDrawableCount
failed trying to set maximumDrawableCount to %lu outside of the valid range of [2, 3]
presentsWithTransaction
displaySyncEnabled
allowsNextDrawableTimeout
nonDefaultColorspace
fenceEnabled
serverSyncEnabled
exclusiveMode
[CAMetalLayer setInputTime:] - non-zero time already exists!
Each CAMetalLayerDrawable can only be presented once!
Cannot present CAMetalDrawable because device is nil.
unsupported extended range format
CAMetalLayer Display Drawable
%s - _contentsRect size %u
EmitterCell
v16@?0Q8
(emitter-behavior %s
position.x
position.y
position.z
velocity.x
velocity.y
velocity.z
mass
rotation
spin
scale
scaleSpeed
birthRate
color.red
color.green
color.blue
color.alpha
ogl-performance-hud.cpp
register_counter
counter_index < _num_counters
to_string
%.2fms
%lld
0x%llx
<1%%
%lld%%
%.2fW
%lldmW
%.*f
0 && "unsupported counter type!"
draw_string
ogl-debug-renderer.h
text
draw_graph2d
_history
(match-property-animation
(match-move-animation
(sourcePoints 
foregroundColor
Color matching limited to 3-stage compact format (TRC -> NxM/LUT -> TRC), falling back to cube LUT
No support for more than one NxM LUT, falling back to cube LUT
B96@?0{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}8^{__CFDictionary=}88
Stage = %ld, %ld TRCs
TRCs are not the same for each color channel, falling back to cube LUT
B112@?0{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}8q88q96^q104
B104@?0{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}8q88q96
Stage = %ld, %zux%zu LUT, %zu grid points
%zux%zu LUT not supported.
unsupported NxM LUT data format
kCGPQEOTFTable
kCGPQEOTFTableSize
kCGHLGInvOETFTable
kCGHLGInvOETFTableSize
kCGPQEOTFOpticalScale
kCGHLGInvOETFOpticalScale
kCGPQInvEOTFOpticalScale
kCGHLGOETFOpticalScale
kCGSkipToneMappingForBT2100
Failed to iterate CGColorConverter 
'%s' --> '%s'
CGColorConverter:
    %d stages
    %d input components
    %d output components
    %d TRCs
    %d Matrices
    %d NxM LUTs
    TRC channel %d --> TRCs[%ld], Table: entries = %zu
    TRC channel %d --> TRCs[%ld], Type0: Y = X^%f 
    TRC channel %d --> TRCs[%ld], Type1: Y = (%g*X+%g)^%g [X >= %g],  Y = 0 [X < %g] pure power original: %s
    TRC channel %d --> TRCs[%ld], Type2: Y = (%g*X+%g)^%g + %f [X >= %g],  Y = %g [X < %g] pure power original: %s
    TRC channel %d --> TRCs[%ld], Type3: Y = (%g*X+%g)^%g [X >= %g],  Y = %g*X [X < %g] pure power original: %s
    TRC channel %d --> TRCs[%ld], Type4: Y = (%g*X+%g)^%g + %g [X >= %g], Y = %g*X + %g [X < %g] pure power original: %s
    TRC channel %d --> TRCs[%ld], PQ InvEOTF (engamma)
    TRC channel %d --> TRCs[%ld], PQ EOTF (degamma)
    TRC channel %d --> TRCs[%ld], HLG OETF (engamma)
    TRC channel %d --> TRCs[%ld], HLG InvOETF (degamma)
lut_index_from_trc_index
CAColorProgram.cpp
lut_index >= 0
Stage = %ld matrix %ld
    %g %g %g %g
    %g %g %g %g
    %g %g %g %g
ChipID
Aixt/MEN2O2B7f+8m4TxUA
CAEnableDeepFramebuffer
CA_FORCE_TIMER
CAEnableIOSurfaceCompression
IOSurface Compression Enabled: %s
AoKnINTLPoKML3ctoP0AZg
universal-buffer-compression
CA_FORCE_P3_TRACKING
CADisableMinimumFrameDurationOnPhone
ji56BO1mUeT7Qg9RO7Er9w
CAEnableDisplayICC
CAEnableHarmonyXYZ
CADisplay Harmony Matrix is XYZ: %s
(compressed-image [%d %d] [%d] %s
Incorrect CompressedImage levels: %u
Failed to map %ld bytes with port = %u, protection = %u, err = 0x%x
Failed to decode CompressedImage from data ptr: %p, len: %ld
CompressedImage port is MACH_PORT_NULL!
PVRTC_4
PVRTC_2
ASTC_4x4
ASTC_5x4
ASTC_5x5
ASTC_6x5
ASTC_6x6
ASTC_8x5
ASTC_8x6
ASTC_8x8
ASTC_10x5
ASTC_10x6
ASTC_10x8
ASTC_10x10
ASTC_12x10
ASTC_12x12
BC4_Unorm
BC4_Snorm
BC5_Unorm
BC5_Snorm
BC6_Unorm
UNKNOWN
value
RGBA10XR
Gray8
Automatic
bottom
topLeft
topRight
bottomLeft
bottomRight
resize
resizeAspect
resizeAspectFill
nearest
cubic
trilinear
lanczos
linearlySampledLinear
asg77
circular
continuous
stretch
repeat
insecure
unrestricted
onOrderIn
onOrderOut
CALAYER_ALLOWS_EDGE_ANTIALIASING
CALayerAllowsEdgeAntialiasing
UIViewEdgeAntialiasing
CALAYER_ALLOWS_GROUP_OPACITY
CALayerAllowsGroupOpacity
UIViewGroupOpacity
CALayerInvalid
layer %@ is a part of cycle in its layer tree
-[CALayer _initWithReference:]
CALayer.mm
[layer isKindOfClass:[self class]]
name = "%@"; 
position = CGPoint (%g %g); 
bounds = CGRect (%g %g; %g %g); 
delegate = %@; 
contents = %@; 
sublayers = (
%s%@
mask = %@; 
%s = %s; 
anchorPoint = CGPoint (0 0); 
contentsScale = %u; 
rasterizationScale = %u; 
; animations = [
%@=%@
layer %@ has a superlayer; so cannot be added to a context
cannot add layer to one context while visible in another
 to (%f, %f)
 to %f
 to [%f %f %f %f; %f %f %f %f; %f %f %f %f; %f %f %f %f]
 to [%f %f %f %f %f %f]
 to (%f, %f, %f, %f)
%@ - changing property %@ in transform-only layer, will have no effect
Transaction (%p) property %s changed %s
Began transaction (%p) change on layer %p for %s, %p
CALayerReadOnly
attempting to modify read-only layer %@
CALayer bounds contains NaN: [%g %g; %g %g]. Layer: %@
CALayerInvalidGeometry
anchorPoint
CALayer position contains NaN: [%g %g]. Layer: %@
position
CoreAnimation: zPosition should be within (-FLT_MAX, FLT_MAX) range.
%@ - calling -hitTest: on transform-only layer
may only -hitTest: a layer or its presentation layer
contentsScale
rasterizationScale
CALayerInvalidTree
expecting model layer not copy: %@
presentationModifiers
replaced layer %@ is not a sublayer of %@
actions
B8@?0
-[%@ display]: Ignoring bogus layer size (%f, %f), contentsScale %f, backing store size (%f, %f)
onDraw
I20@?0@"CALayer"8B16
backgroundColor
CADebug_RedundantLayoutFlash
Redundant layout on %s which took %f ms
onLayout
cornerContents must be a CGImageRef for now!
animations
hidden
needsDisplayOnBoundsChange
needsLayoutOnGeometryChange
masksToBounds
clearsContext
doubleSided
invertsShadow
shadowPathIsBounds
shouldRasterize
rasterizationPrefersDisplayCompositing
preloadsCache
sortsSublayers
flipsHorizontalAxis
canDrawConcurrently
allowsHitTesting
hitTestsContentsAlphaChannel
wantsExtendedDynamicRangeContent
toneMapToStandardDynamicRange
allowsGroupBlending
createsCompositingGroup
allowsEdgeAntialiasing
allowsGroupOpacity
drawsAsynchronously
contentsDither
contentsAlignsToPixels
continuousCorners
cornerContentsMasksEdges
contentsOpaque
hitTestsAsOpaque
literalContentsCenter
contentsContainsSubtitles
inheritsTiming
definesDisplayRegionOfInterest
CALayerAnimations
CALayerAnimationKeys
%s (CALayer)
r^v16@?0@8
v24@?0@8r^v16
B16@?0@8
v20@?0@8B16
c16@?0@8
v20@?0@8c16
C16@?0@8
v20@?0@8C16
s16@?0@8
v20@?0@8s16
S16@?0@8
v20@?0@8S16
i16@?0@8
v20@?0@8i16
I16@?0@8
v20@?0@8I16
q16@?0@8
v24@?0@8q16
Q16@?0@8
v24@?0@8Q16
f16@?0@8
v20@?0@8f16
d16@?0@8
v24@?0@8d16
{CGPoint=dd}16@?0@8
v32@?0@8{CGPoint=dd}16
{CGSize=dd}16@?0@8
v32@?0@8{CGSize=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@?0@8
v48@?0@8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CATransform3D=dddddddddddddddd}16@?0@8
v144@?0@8{CATransform3D=dddddddddddddddd}16
{CGAffineTransform=dddddd}16@?0@8
v64@?0@8{CGAffineTransform=dddddd}16
{CAPoint3D=ddd}16@?0@8
v40@?0@8{CAPoint3D=ddd}16
%*s%@
CoreAnimation: Message::send_message() returned 0x%x - size %zu, # descriptors %zu
CoreAnimation: Message::send_message() returned 0x%x
Encoder size overflow, old size = %zu, extra = %zu
Failed to allocate %zu bytes, requested = %zu, old size = %zu
Cannot send %zu bytes to the server. This exceeds mach ool capabilities!
encode_data_async
render-coding.cpp
len > 0
failed encode_port_make_once : r=%i so=%x t=%x
Decoder has no context! dcid=%x
Context ID mismatch! pcid=%x pseed=%u : heap=%p data=%p data_len=%zu flags=%u dcid=%x t=%f
Context is destroyed! cid=%x
%s (%u) : %s
%s - _buffer_point = %p, len = %zu, _buffer_end = %p
decode_bytes
%s - _buffer_point = %p, _buffer_end = %p
decode_int8
decode_int16
decode_int32
decode_int64
%s - size = %d
decode_shape
%s - failed shape allocation for size %d
%s - max_size = %zu, tag = %zu
decode_data
%s - buf = NULL, size = %zu
%s - _attach_list = %p, type = %u
%s - max_size = %zu, size = %zu
%s - buf = NULL
%s - buf size = %zu
decode_data_async
decode_port
%s - expected disposition = %u, received = %u
%s - ptr = NULL
decode_atom
%s - string = NULL
%s - data = NULL
decode_cfobject
%s - array entries = %zu
%s - value = NULL
%s - dicitionary entries = %zu
%s - key = %p, value = %p
%s - atoms = NULL
decode_keypath
%s - ptr = NULL, required_type = %u, type = %u, id = %llu, error = %u
decode_object
%s - required_type = %u, type = %u
Deserialization of disallowed type: %s, process: %s
Missing entitlement for system layer!
unable to decode object of type %d
%s - ptr == NULL, type = %u
%s - type = %u
decode_array_object
%s - decoded object of unexpected type: %d
%s - code = %d
decode_colorspace
CA_BENCHMARK
CoreAnimation: serialization error from context %x
invalid command: 0x%x, buffer size %zu, offset %zu
CA_IGNORE_MACH_SEND_ERRORS
(cloning-terminator-layer)
v24@?0d8r^d16
CACGContextEvaluator
CoreAnimation: unhandled combiner function: %d
imageQueueCapacity
imageQueueIdentifier
displayRefreshRate
ImageQueueCollectable client message err=0x%x
ImageQueueDidComposite client message err=0x%x
ImageQueueDidPresent client message err=0x%x
CoreAnimation: Warning! CAImageQueueSetOwner() is deprecated and does nothing. Please stop calling this method.
CAImageQueue
(image-queue
 0x%016llx
%s%s%s%s%s%s
 not-visible
 async
 enable-dpb
 protected
 reduced-polling
 changed
(generation 0x%08x)
(rotationFlags %d)
(edr-deadline %f)
(enhancementMode %d)
(samples
iosurface
buffer
unknown
unconsumed
displayed
consumed
flushed
(0x%llx %s 0x%x, [%d %d; rot %d] %f (generation 0x%08x) (detach 0x%016llx) %s%s%s)
 opaque
 flipped
Invalid callback for CAXPCImageQueueCreate!
command
capacity
shmemFlags
shmemSize
shmemOffset
shmemPort
<CAXPCImageQueueSample %p : IOSurfaceRef %p (id 0x%x), read %u, t %g>
CAXPCImageQueueSample
<CAXPCImageQueueReceiver %p>
{0x%llx : IOSurfaceRef %p (id 0x%x)}
CAXPCImageQueueReceiver
Invalid command in CAXPCImageQueueReceiverCreate message!
iosurfacePort
iosurfaceRenderId
CAXPCImageQueue: buffer id 0x%llu not found!
CA_LOG_IMAGE_QUEUE_FRAMES
CAImageQueue %p: frame %f (%llx) used %d: %f (%llx) detach: 0x%llx
CAImageQueue::server_reply_queue
<CAImageQueue %p>
portrait
portraitUpsideDown
landscapeLeft
landscapeRight
NTSC_M
PAL_BGHID
composite
component
digital
YCbCr
captureDisplay
disableScaling
disableRotation
disableOverscan
disableYUV
replayContexts
noReplayScaling
kCADisplayName
kCADisplayDeviceName
kCADisplayId
kCADisplayFrameCount
kCADisplaySkippedFrameCount
kCADisplayClonedFrameCount
kCADisplaySkippedClonedFrameCount
kCADisplayDirtyFrameCount
hostProcessId
hostContextId
layerNames
hitTestContextId
hitTestSlotId
hitTestClientPort
hitTestOptionExcludedIds
hitTestIgnoreBlankingContext
hitTestDetectedOcclusion
hitTestOcclusionType
hitTestCumulativeOpacity
hitTestCumulativeTransform
hitTestCumulativeLayerTransform
hitTestCumulativeContentsTransform
hitTestInsecureFiltered
hitTestWantsLayerBackgroundStatistics
hitTestBackgroundMinimum
hitTestBackgroundMaximum
hitTestBackgroundAverage
hitTestBackgroundStandardDeviation
kCAVirtualDisplayWidth
kCAVirtualDisplayHeight
kCAVirtualDisplayUpdateRate
kCAVirtualDisplayPixelFormat
disableUpdatesOnMainDisplay
managedRenderServer
fetchFrozenSurfaces
local
notificationEDR
notificationAttached
notificationDetached
requestEDR
rampDuration
occlusionNone
occlusionClipped
occlusionLayer
B16@?0@"CAWindowServerDisplay"8
CAWindowServer
SimDisplay cannot find display object for UID: %@
SimDisplay no UUID for display
v24@?0^{__SFBDisplay=}8Q16
[CAWindowServer setSecure:] is deprecated! Please call setSecure: on the specific CAWindowServerDisplay!
[CAWindowServer isSecure] is deprecated! Please call isSecure on the specific CAWindowServerDisplay!
<CAWindowServer:%p %@>
Hit Test Snapshot
hit-test-slot
CAWindowServerDisplay
%@: can't clone a display to nil
%@: can't clone a display to itself
%@: can't clone a display that's a clone
%@: %@ is already a clone
clones
cloneMaster
%@: can't remove a nil clone display
%@: %@ is not our clone
[CAWindowServerDisplay setOverscanAmount:] is deprecated. Please use -setOverscanAmounts:!
[CAWindowServerDisplay overscanAmount] is deprecated. Please use -overscanAmounts!
[CAWindowServerDisplay overscanAmount] - horizontal and vertical overscan amounts are not equal!
[CAWindowServerDisplay setMinimumRefreshRate:] is deprecated!
[CAWindowServerDisplay minimumRefreshRate] is deprecated!
[CAWindowServerDisplay setMaximumRefreshRate:] is deprecated!
[CAWindowServerDisplay maximumRefreshRate] is deprecated!
[CAWindowServerDisplay setIdealRefreshRate:] is deprecated!
[CAWindowServerDisplay idealRefreshRate] is deprecated!
[CAWindowServerDisplay setUsesPreferredModeRefreshRate:] is deprecated!
[CAWindowServerDisplay usesPreferredModeRefreshRate] is deprecated!
CoreAnimation: [CAWindowServerDisplay setColorMode:] is deprecated!
[CAWindowServerDisplay allowsVirtualModes] is deprecated!
[CAWindowServerDisplay setAllowsVirtualModes:] is deprecated!
%@: setTVMode: is deprecated!
%@: TVMode is deprecated!
%@: Ignoring call to setTVSignalType:
<CAWindowServerDisplay:%p %@ %gx%g>
brightness control not supported on this display
white point control not supported on this display
Display %d commitBrightness sdr: %g, headroom: %g, ambient: %g, filtered ambient: %g, limit: %g
invalid nonnull argument
v12@?0C8
v20@?0C8f12B16
CABrightnessControl
Posting %s, payload: %@
no queue available for '%s' notification
no block registered for '%s' notification
blend-colorspace-XXXXXX.icc
display-colorspace-XXXXXX.icc
kCAVirtualDisplayWidth and kCAVirtualDisplayHeight are required
kCAVirtualDisplayMinimumFrameDuration
CA_CLONE_DISPLAY
CA_MAIN_DISPLAY_SCALE
CA_EXTERNAL_DISPLAY_SCALE
PurpleMain
PurpleFBServer
PurpleTVOut
PurpleFBTVOutServer
TVOut
PurpleSceneHack01
684F2EB9-CA09-4969-9C94-3717E4500001
PurpleSceneHack02
684F2EB9-CA09-4969-9C94-3717E4500002
PurpleSceneHack03
684F2EB9-CA09-4969-9C94-3717E4500003
PurpleSceneHack04
684F2EB9-CA09-4969-9C94-3717E4500004
PurpleSceneHack05
684F2EB9-CA09-4969-9C94-3717E4500005
PurpleSceneHack06
684F2EB9-CA09-4969-9C94-3717E4500006
PurpleSceneHack07
684F2EB9-CA09-4969-9C94-3717E4500007
PurpleSceneHack08
684F2EB9-CA09-4969-9C94-3717E4500008
PurpleSceneHack09
684F2EB9-CA09-4969-9C94-3717E4500009
PurpleSceneHack10
684F2EB9-CA09-4969-9C94-3717E450000A
PurpleSceneHack11
684F2EB9-CA09-4969-9C94-3717E450000B
PurpleSceneHack12
684F2EB9-CA09-4969-9C94-3717E450000C
Type `%s' has no property setter
description
Dynamic Shadows
dynamicShadows
The layer is using dynamic shadows which are expensive to render. If possible try setting `shadowPath`, or pre-rendering the shadow into an image and putting it under the layer.
Simple Background Color Masking
simpleBackgroundColorMask
The layer is using a simple layer with background color set as a mask. Instead, use a container layer of the same `frame` and `cornerRadius` as the mask, but with `masksToBounds` set to YES.
Simple Shape Masking
simpleShapeLayerMask
The layer is masked by a `CAShapeLayer` with a path that's a rect, a rounded-rect, or an ellipse. Instead, use an appropriately transformed container layer with `cornerRadius` and `masksToBounds` set.
Simple Shape Layer
simpleShapeLayer
A `CAShapeLayer` is used with a path that's a rect, a rounded-rect, or an ellipse. Instead, use an appropriately transformed plain CALayer with `cornerRadius` set.
Background Filters
backgroundFilters
The layer is using `backgroundFilters` which are a legacy API to do background filtering. Replace with a `CABackdropLayer` with appropriate `filters` set.
Group Opacity
groupOpacity
The layer has a fractional opacity which may require an offscreen pass for group opacity to prevent the semi-transparency on overlapping items to look weird. Try setting `allowsGroupOpacity` to NO and verifying that the results still look correct.
Sublayers Blending
sublayersBlending
The layer has a non standard `compositingFilter`, but its subtree has more than one sublayer at some point in the tree. This prevents pushing of blend mode down to a single sublayer and often requires an offscreen pass. If applicable try setting the `compositingFilter` directly on the leaves of the subtree instead of the root.
Group Blending
groupBlending
One of the sublayers has a non-standard blend mode that causes the parent to create an offscreen group to limit the blending results to the immediate subtree. This is often not only unnecessary, but it also often breaks the expected design. Set `allowsGroupBlending` to NO.
shadowOpacity
borderColor
borderWidth
v16@?0r^{CGPathElement=i^{CGPoint}}8
source
non-zero
absolute
relative
discrete
paced
cubicPaced
autoReverse
fade
moveIn
push
reveal
fromRight
fromLeft
fromTop
fromBottom
CAPresentationModifierGroup
%@: cannot create group with 0 capacity
%@: group capacity too large
%@: attempted to add modifier past group's capacity
<%@:%p; keyPath = %@; additive = %d>
CAPresentationModifier
%@: value can't be nil
CoreAnimation: mass must be greater than 0.
CoreAnimation: stiffness must be greater than 0.
CoreAnimation: damping must be greater than or equal to 0.
sourcePoints
CAAnimationImmutable
attempting to modify read-only animation %@
unknown animation calculation mode: %@
~Server
windowserver-server.cpp
_shutdown_called
blanking context
CoreAnimation: updates deferred for too long
%s%.*s
continued...
snapshot-layer
snapshot-display
snapshot-contexts
No display runloop! Ignoring latency update.
%s display%s:
 (secure)
  %x: level %g; pid %d [%s]
 (visible)
 (decode-error)
 "%s"
== context %x; level %g; pid %d [%s] %sat time %f ==
(secure) 
  <null>
CoreAnimation: timed out freeze semaphore
com.apple.coreanimation
WindowServer.Stall
WindowServer.Performance
** Render #%d tree at time %f **
Screen blanked
Invalid update
Display is not ready
Finish update requested to try again
Update is empty
Does not need render
Update deferred
No GPU work needed
CoreAnimation: invalid mesh transform - too few edges
CoreAnimation: invalid mesh transform - vertex index
CoreAnimation: invalid mesh transform - paired edge
(meshTransform [invalid])
(meshTransform
(vertex %d (%g %g) (%g %g %g))
(face %d (%d %d %d %d) (%g %g %g %g))
%s - suspiciously large vertex count: %zu
%s - suspiciously large face count: %zu
even-odd
miter
butt
CoreAnimation: IOSurface 0x%x [%u x %u] doesn't have the proper data alignment! Expected %zu base address and %zu row byte alignment
(surface machport %u)
(surface 0x%x [%d %d] 
edr %g 
protected 0x%llx 
%s %c%c%c%c
 (%.2lf %s)
 colormatching-disabled
 (colorspace "%s")
 placeholder
CA_MAX_TEXTURE_SIZE
CoreAnimation: IOSurface 0x%x ('%c%c%c%c') has unexpected bytes-per-row value of %zu, expected at least %zu for the width of %zu.
(beginTime %f)
(duration %f)
(autoreverses true)
(fillMode %s)
both
forwards
backwards
(speed %f)
(timeOffset %f)
repeatDuration
repeatCount
(%s %f)
kCADebugOptionsDidChange
CA_COLOR_FLUSH
CA_COLOR_COPY
CA_COLOR_OPAQUE
CA_COLOR_NO_WAIT
CA_AUTO_FLUSH
CA_PRINT_TREE
CA_PRINT_OBJECTS
CA_LOG_IMPLICIT_TRANSACTIONS
CA_LOG_MEMORY_USAGE
CA_LOG_IMAGE_COPIES
CA_PRINT_PERF
CA_DISABLE_OCCLUSION_CULLING
CA_DISABLE_DIRTY_REGIONS
CA_LOG_TRIPLE_BUFFERING
CA_COLOR_SUBPIXEL
CA_DISABLE_RENDER
CA_ALWAYS_RENDER
CA_COLOR_OFFSCREEN
CA_COLOR_DETACHED
CA_COLOR_CACHED
CA_COLOR_FORMATS
CA_DISABLE_DETACHED
CA_PRINT_ANIMATIONS
CA_COLOR_MATCHED
CA_COLOR_UNTAGGED
CA_PRINT_BACKDROPS
CA_COLOR_BACKDROPS
CA_PRINT_SHADERS
CA_PRINT_OFFSCREENS
CA_PRINT_DETACHING
CA_PRINT_TRANSACTIONS
CA_DISABLE_FILTER_MERGING
CA_DUMP_SURFACES_PER_DRAW
CA_DISABLE_COLORMATCH_UNTAGGED
CA_COLOR_BACKING_STORES
CA_VSYNC_SIGNPOST
CA_PERF_HUD
CA_DISABLE_LOW_LATENCY
CA_PRINT_COLOR_MATRIX
CA_PERF_WARNINGS
CA_COLOR_ACTIVE_REGIONS
CA_COLOR_LOW_LATENCY
CA_PRINT_FRAME_INFO
CA_DISABLE_LOGICAL_BOUNDS
CA_THERMAL_THROTTLE
CA_DISABLE_CURVE_SOLVER
CA_COLOR_P3_CLAMP
CA_COLOR_SNAPSHOTS
CA_TEST_HDR_BLENDING
CA_DISABLE_DISPLAY_EDR_SCALING
CA_DISABLE_DISPLAY_OVERDRIVE_FIX
CA_DISABLE_DISPLAY_COLOR_ACCURACY_FIX
CA_HDMI_HDR_PACKING
CA_ASYNC_WIRELESS
CA_DISABLE_DISPLAY_IDLE
CA_DISABLE_ACCELERATED_HDR
CA_DISABLE_HDR_DISPLAY_COMPENSATION
CA_DISABLE_ASE
CA_DISABLE_ASE_RESTRICTIONS
CA_DISABLE_RGB_RESTRICTIONS
CA_DISABLE_FRAMEBUFFER_COMPRESSION
CA_IGNORE_TAILSPIN_TIMER
CA_DISABLE_TONEMAPPING
CA_DISABLE_HDR10TV_TONEMAPPING
CA_DISABLE_BACKDROP_CACHE
CA_DISABLE_OPAQUE_FRAMEBUFFER
CA_EMIT_DEBUG_SIGNPOSTS
CA_FORCE_RESOURCE_SYNC
CA_DISABLE_OLED_TONEMAPPING
CA_FORCE_REFERENCE_TONEMAPPING
CA_DISABLE_HDR_PREWARM
CA_COLOR_NON_DIRTY_FLUSH
CA_CRASH_DETACH_FAIL
CA_DISABLE_HIDDEN_CULLING
CA_DISABLE_VERTEX_COLOR_MATCHING
CA_DISABLE_MODE_SWITCHING
CA_COLOR_FLIPBOOK
CA_COLOR_UNPREMULTIPLIED
CA_DISABLE_IMAGE_QUEUE_REDUCED_POLLING
CA_DISABLE_GENERIC_SHADERS
CA_FORCE_GENERIC_SHADERS
CA_DISABLE_PIPELINE_LIBRARY
CA_ENABLE_MPS_BLURS
CA_FORCE_ENCODE_INPUT_TIME
CA_ENABLE_CACHE_DROP_HINTS
CA_PRINT_CACHE_DROP_HINTS
CA_DISABLE_REDUCED_POLLING
CA_PRINT_MSR_COPY
CA_DISABLE_LUMA_BOOST
CA_PRINT_HIT_TESTING
CA_COLOR_DOWNSCALED
CA_COLOR_UPSCALED
CA_COLOR_SUBTEXTURES
CA_PRINT_REDUNDANT_LAYOUT
CA_COLOR_REDUNDANT_LAYOUT
CA_DISABLE_PURE_POWER_TRCS
CA_FORCE_PURE_POWER_TRCS
CA_DISABLE_COLOR_PROGRAM_CACHE
CA_PRINT_COLOR_PROGRAMS
CA_PRINT_FILTER_MERGING
CA_DISABLE_FORWARD_DM_PRESCALE
CA_PRINT_HDR_PROCESSING
CA_DETACH_ANY_PRIMARIES
CA_DISABLE_SWAP_BRIGHTNESS
CA_DISABLE_SWAP_ICC
CA_DISABLE_ENCODER_SHARING
CA_FORCE_SDR_TONEMAP
CA_PRINT_CONTRAST_ENHANCER
CA_VSYNC_OFF
CA_COLOR_SURFACE_UNPREMULTIPLY
CA_ENABLE_ALL_FRAME_RATES
CA_ENABLE_FRAME_RATE_ARBITRATION
CA_PRINT_FRAME_RATE_ARBITRATION
CA_ENABLE_REDUCED_SERVER_VSYNC_RENDER
CA_EMIT_FRAME_RATE_DEBUG_SIGNPOSTS
CA_ENABLE_HIGH_FRAME_RATE_RESTRICTION
CA_FORCE_120HZ
CA_FORCE_DOUBLE_BUFFERING
CA_FORCE_FP16_FRAMEBUFFER
CA_USE_PRESENT_ON_FINISH
CA_COLOR_VELOCITY
CA_VELOCITY_FRAME_RATE_UNCONSTRAINED
CA_DISABLE_VELOCITY_TRACKING
CA_PRINT_MEMORYLESS_OFFSCREENS
CA_EXPORT_COMPATIBLE_CONTENTS
CA_ENABLE_LAYER_AND_CURSOR_DETACHING
CA_COLOR_INHIBIT_CLONING
CA_COLOR_TERMINATED_CLONING
CA_PRINT_CURSOR_DETACH
CA_OFFSCREEN_LIMIT
CA_PERF_HUD_LEVEL
CA_PERF_HUD_OPAQUE
CA_BACKDROP_SCALE
CA_DUMP_SURFACES
CA_DUMP_HDR_SURFACES
CA_DUMP_MSR_SURFACES
CA_DUMP_FRAMEBUFFERS
CA_DUMP_SNAPSHOTS
CA_DUMP_HIT_TEST_SURFACE
CA_IQ_INTERPOLATION
CA_COLOR_MATCHING
CA_PERF_TIME_THRESHOLD
CA_PERF_INPUT_DELAY_THRESHOLD
CA_PERF_OFFSCREEN_THRESHOLD
CA_FRAMEBUFFER_EDR_HEADROOM
CA_DISPLAY_EDR_HEADROOM
CA_LIB_EDR_HEADROOM_REQUEST
CA_GRAY_SQUARE_LEVEL
CA_GRAY_SQUARE_SIZE
CA_PERF_HUD_ORIGIN
CA_PERF_HUD_SCALE
CA_PERF_HUD_DISPLAY_DURATION
CA_SDR_BRIGHTNESS_NITS
CA_DISPLAY_BRIGHTNESS_NITS
CA_AMBIENT_BRIGHTNESS_NITS
CA_DISPLAY_TYPE
CA_DISPLAY_OVERDRIVE_FIX_NITS
CA_DISPLAY_OVERDRIVE_TEMPERATURE
CA_DISPLAY_COLOR_ACCURACY_FIX_NITS
CA_DISPLAY_HYSTERESIS_NITS
CA_ASE_MODE
CA_MAX_TONEMAP_HEADROOM
CA_TRIGGER_TAILSPIN
CA_BACKING_STORE_REUSE_WASTE_LIMIT
CA_LUMA_BOOST_SCALE
CA_LUMA_BOOST_NITS_MIN
CA_LUMA_BOOST_NITS_MAX
CA_CAPTURE_FRAMES
CA_PROTECTION_LEVEL
CA_BLEND_COLOR_SPACE
CA_DISPLAY_COLOR_SPACE
CA_SYSTEM_GAMMA
CA_MINIMUM_FRAME_DURATION
CA_FRAME_RATE_POLICY
CA_DISPLAY_COMPAT_QUANTA_MODE
CA_TIMING_HINT_INTERVAL
CA_VELOCITY_THRESHOLD_120HZ
CA_VELOCITY_THRESHOLD_80HZ
CA_VELOCITY_FRAME_RATE_POLICY
%d transactions
; %d %s (%.3gs duration, %.3gfps frame rate, %.3g %s, %.2gs gap)
frame
frames
pass
passes
; %d cache miss%s
; %.3g MP area
; %.3g MP drawn (%.3g overdraw)
; %.3g MB uploaded
CoreAnimation buffers: currently %.3gMB; maximum %.3gMB
CoreAnimation: Async render times array exceed maximum size.
(distance-field-layer
fill
stroke
inner-stroke
outer-stroke
(renderMode %s)
(invertsShape true)
(foregroundColor #%08x)
(offset %g)
(sharpness %g)
(lineWidth %g)
%s%s
Writing to '%s'
CoreAnimationWhippetLimitPasses
CoreAnimationWhippetRenderFlags
CAProcessCanAccessGPU
rotate
90cw
90ccw
180cw
180ccw
Unsupported pixel description - %d color components, %d bits per component, %d bits per pixel, %d bitmap info
com.apple.QuartzCore-WebKit
%@ = 
%llu
CGPoint (%g %g)
CGSize (%g %g)
CGRect (%g %g; %g %g)
CAPoint3D (%g %g %g)
CGAffineTransform (%g %g; %g %g; %g %g)
CATransform3D (%g %g %g %g; %g %g %g %g; %g %g %g %g; %g %g %g %g)
<undefined>
CA Whippet FocusRing
CA Whippet FocusRing-Dilated
map_surfaces
windowserver-sim-display.cpp
_sim_display
_sim_swapchain == nullptr
SimDisplay : unsupported SimColorSpace
SimDisplay skipping swap with no swapchain
hw.cpu64bit_capable
com.apple.coreanimation-archive
com.apple.coreanimation-bundle
com.apple.coreanimation-xml
%s: exception %@
-[CAPackage _readFromArchiveData:options:error:]
publishedObjects
Expected CALayer at root
assets
stylesDocument
Expected CALayer at root.
publishedObjectNames
LKState
LKStateAddAnimation
LKStateAddElement
LKStateElement
LKStateRemoveAnimation
LKStateRemoveElement
LKStateSetValue
LKStateSetProperty
LKStateTransition
LKStateTransitionElement
Unable to parse CAPackage: %@
Unable to parse CAPackage from URL: %@
backdrop 0x%lx; update %d; group %p "%s" size %zu; [%d %d; %d x %d]:
  copying to surface [%d %d; %d x %d] scale %g:
backdrop 0x%lx rect [%d %d; %d x %d]
backdrop 0x%lx complete
  applying %d merged group filters (lst %p)
(vector
%s - suspiciously large vector size: %zu
disableActions
animationDuration
animationTimingFunction
animationDelegate
commitTime
earliestAutomaticCommitTime
completionBlock
animatesFromModelValues
@"CAAnimation"24@?0@"CALayer"8@"NSString"16
CATransactionInvalidThread
May not mark the main thread as a background transaction
+[CATransaction synchronize] called within transaction
setAnimationDuration:
setAnimationTimingFunction:
setCompletionBlock:
setDisableActions:
setAnimatesFromModelValues:
setCommitTime:
setEarliestAutomaticCommitTime:
setInputTime:
setLowLatency:
lowLatency
(frameInterval %f)
(discretizesTime true)
(timingFunction 
(enabled false)
(additive true)
(cumulative true)
(removedOnCompletion false)
(affectsVelocity true)
(keyPath 
(function 
(from 
(to 
(by 
linearPaced
(calculationMode %s)
(values 
(keyTimes 
(timingFunctions 
(path 
(type %s)
(subtype %s)
(filter 
(options 
(mass %g)
(stiffness %g)
(damping %g)
(velocity %g)
(modifier
(values
 %.10g
%s - enum %u out of range of %u
decode_int8_enum
owningContext
hostingNamespacedContext
global
wave
drag
alignToMotion
valueOverLife
colorOverLife
light
attractor
simpleAttractor
valueOverDistance
colorOverDistance
values
behavior
CAEmitterBehavior requires `behavior' attribute
CAValueFunction
purge
ogl-mosaic.cpp
_image_unit < 0
(array
%s - suspiciously large array: %u
decode
%s - array is %sretained, but %sretained is expected
non 
%s - null_pointer? %d, n_types %zu, types[0] = %d
CA_NO_ACCEL
~ContextState
ogl-context.h
!next && "Imbalanced ContextState push/pop"
(subtexture [%d %d %d %d] 
(texture 
copy_port
render-fence.cpp
_has_receive_right
activate
_has_made_send_right
CA::Fence::Observer
CoreAnimation: unknown fence observer message %i
v28@?0Q8^{dispatch_mach_msg_s=}16i24
CoreAnimation: transaction observer %x timed out after %f
activate_and_wait
CoreAnimation: failed to receive fence reply: %x
CoreAnimation: timed out fence %llu
send_rlfg_msg
!f_names.empty ()
MACH_PORT_VALID (batch_port)
CoreAnimation: failed to send fence reply: %x
send_rmfc_msg
(portal-layer 0x%lx
(sourceLayer 0x%lx)
(sourceContext %x)
(hidesSourceLayer true)
(matchesOpacity true)
(matchesPosition true)
(matchesTransform true)
(allowsBackdropGroups true)
xmlns
<?xml version="1.0" encoding="UTF-8"?>
 %S="%S"%s
<%S%s
</%S>
matrix(%@)
CGImageSource
CATintedImage
{CAColorMatrix=ffffffffffffffffffff}
NSValue
perspective(%g) 
translate(%g, %g, %g) 
rotate(%gdeg) 
rotate(%gdeg, 0, 1, 0) 
rotate(%gdeg, 1, 0, 0) 
shearYZ(%gdeg) 
shearXZ(%gdeg) 
shearXY(%gdeg) 
scale(%g) 
scale(%g, %g, %g) 
&amp;
&lt;
&gt;
&quot;
&apos;
%@ %c
{CGAffineTransform=dddddd}
unhandled getter type: %d
unhandled setter type: %d
{CGPoint=dd}
{CGSize=dd}
{CGRect={CGPoint=dd}{CGSize=dd}}
{CATransform3D=dddddddddddddddd}
{CAPoint3D=ddd}
__CACodingContents
sublayers array %@ contains non-layer %@
Rejecting value:
For key: %s
[%@ initWithCoder]: ignoring exception %@
CGColorSpace
origin
size
origin.x
origin.y
size.width
size.height
rotation.z
rotation.x
rotation.y
scale.xy
scale.x
scale.y
scale.z
translation
translation.x
translation.y
translation.z
CoreAnimationErrorDomain
CA_LOG_CLASS_DESCRIPTIONS
creating class description for %s
  %s: %s
    type %d: %s flags 0x%x
classDescription_locked
CAObject.mm
info != NULL
v@:^v
^v@:
v@:@
v@:@?
@?@:
v@:B
v@:c
v@:C
v@:s
v@:S
v@:i
v@:I
v@:l
v@:L
v@:q
v@:Q
v@:f
v@:d
v@:{CGPoint=dd}
{CGPoint=dd}@:
v@:{CGSize=dd}
{CGSize=dd}@:
v@:{CGRect={CGPoint=dd}{CGSize=dd}}
{CGRect={CGPoint=dd}{CGSize=dd}}@:
v@:{CATransform3D=dddddddddddddddd}
{CATransform3D=dddddddddddddddd}@:
v@:{CGAffineTransform=dddddd}
{CGAffineTransform=dddddd}@:
v@:{CAPoint3D=ddd}
{CAPoint3D=ddd}@:
UIApplicationDidEnterBackgroundNotification
UIApplicationWillEnterForegroundNotification
UIApplicationDidFinishLaunchingNotification
CAEnableMetalWhippet
CADynamicBackendSwitching
(proxy %d 0x%llx)
port_name
port_number
client_port_number
displayFilter
bitsPerComponentHint
displayId
definesDisplayBounds
reverseFlip
<%@:%p; contextId = 0x%x
; colorSpace = %@
; commitPriority = %u
; contentsFormat = %@
; level = %f
; secure
v16@?0I8B12
CoreAnimation: [CAContext setFence:count:] is deprecated. Ignoring!
(pattern [%g %g %g %g] [%g %g]
matrix
(cell 
(gradient-layer
axial
radial
conic
(gradientType %s)
(startPoint [%.10g %.10g])
(endPoint [%.10g %.10g])
colors
locations
interpolations
CADisplayPersistence
version: %@, latencies: %@, preferredModes:%@
version
latencies
preferredModes
hasVersion
hasLatencies
hasPreferredModes
uuid: %@, mode: %@, latency:%g
uuid
uuid: %@, mode: %@
CFBundleVersion
trying to read state of nil layer.
trying to set state of nil layer.
trying to set state not in given layer.
"%@" "%@"
CA DispatchGroup
v8@?0
com.apple.coreanimation.workloop_queue
failed to receive purple reply message: %x
failed to send purple message: %x
com.apple.QuartzCore-CA
v24@?0r^{CGPathElement=i^{CGPoint}}8^B16
CAGetColorSpace
CACGUtil.cpp
false
rgb(
CGBitmapContextSetData failed, bpc %zu, bpp %zu, info %u
unsupported surface format: %c%c%c%c
kCARendererColorSpace
kCARendererDeepBuffers
kCARendererMetalCommandQueue
kCARendererClearsDestination
kCARendererFlags
com.apple.QuartzCore-CARenderer
CoreAnimation: GLES%d not supported by CARenderer on this device
CoreAnimation: ignoring exception: %@
<nil>
CAIOSurfaceCreate: failed to allocate IOSurface (size: %u x %u, format: %c%c%c%c)
(interpolator (factor %g)
(o%d 
Invalid frame interval range %u %u %u from frame rate range %.2f %.2f %.2f
CoreAnimation: GetDisplayInfo returned 0x%x
Failed to set display latency - missing UUID
CADisplayLink: reload_item, item does not exist
Unsupported use of CADisplayLink SPI off the main thread.
Failed to register for CADisplay change notifications: 0x%x
Failed to register for CADisplay power notifications: 0x%x
CoreAnimation: rendering error %s
context=%{public,name=context}u update=0x%{public,name=update}x
%{public, signpost:metrics}@
%{public, signpost:metrics}@
Rendering
VirtualDisplay::clone_update failed to copy surface
copy_display_timings: unexpected state (source: %x, this: %x)
CAML: Failed to encode image: %s
CAMLEncodeLayerTreeToPathWithOptions failed to create output dirs at %s
CAMLEncodeLayerTreeToPathWithOptions options must be a CFDictionary
CAMLEncodeLayerTreeToPathWithOptions failed to move %s to %s
Failed to validate rowbytes: %zu, levels: %u height: %u
Failed to decode_data_async, size: %zu
(image [%d %d] [%d] %s
 (tint %.3g %.3g %.3g %.3g)
 colormatching-disabled
 (colorspace "%s")
 placeholder
CoreAnimation: triple buffered backing store %p
CoreAnimation: forcing %saccelerated backing
(currentTexture 
(blendedTextures
ImageQueue %p visibility going from %u to %u
CoreAnimation: copied CGImageRef %p - image size (%lu x %lu) exceeds max texture size
CoreAnimation: copied CGImageRef %p - mask size
CoreAnimation: copied CGImageRef %p - color matching
CoreAnimation: copied CGImageRef %p - needs color matching
CoreAnimation: copied CGImageRef %p - non-RGB color model
CG image cache at time %f:
CoreAnimation: copied CGImageRef %p - bad alignment for IOSurface 0x%x
CoreAnimation: warning, CGImageProvider returned multiple blocks
CoreAnimation: copied CGImageRef %p - bad decode array
CoreAnimation: copied CGImageRef %p - bad mask
CoreAnimation: copied CGImageRef %p - bad mask image format (%d bpp, %d bpc)
CoreAnimation: copied CGImageRef %p - non-native format (%d)
CoreAnimation: copied CGImageRef %p - format not supported by hardware
CoreAnimation: data provider size invalid
CoreAnimation: data provider size is too small
CoreAnimation: copied CGImageRef %p - no data pointer
CoreAnimation: copied CGImageRef %p - bad image alignment
CoreAnimation: copied CGImageRef %p - bad row alignment
CoreAnimation: copied CGImageRef %p - mipmap generation
CoreAnimation: copied CGImageRef %p - RGB mask (bug!)
CoreAnimation: ignored CGImageRef %p - bad RGB 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - decode or mask
CoreAnimation: copied CGImageRef %p - bad RGB image format (%d bpp, %d bpc, %d info)
CoreAnimation: ignored CGImageRef %p - bad grayscale 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - bad grayscale image format (%d bpp, %d bpc, %d info)
  %p deadline %f %s%s%s%s%s
Unsupported image format '%s' for default colorspace
(replicatorLayer %d)
CoreAnimation: failed to allocate %ld bytes
Data %p with size %zu underflow
CoreAnimation: failed to query region %p (%zu bytes)
Failed to map %ld bytes with port = %u, protection = %u, err = 0x%x
CoreAnimation: mach_make_memory_entry_64 (size %llu, addr 0x%llx, prot 0x%x, port %u) = 0x%x
(shmem %lu bytes)
Invalid bitmap: [%u x %u], %u levels
Layer backing store allocation too large size:%ld width:%d height:%d levels:%d
Bogus ShmemBitmap : [%u x %u], %u levels
Bogus ShmemBitmap data pointer: %p, Shmem data pointer: %zu
Bogus ShmemBitmap rowbytes: %zu, width: %u, height: %u, level: %u
Bogus ShmemBitmap data pointer: %p, total size: %zu
pthread_setname_np(%s) returned %d
exported [%d %d] buffer to %s
 (offscreen-flags [
 (group-flags [
(%slayer %s[%.10g %.10g %.10g] [%.10g %.10g %.10g %.10g] [%g %g %g]
[%d pass%s
 [%d %d %d %d]
 image seed %d
(name 
(hidden true)
(masksToBounds true)
(geometryFlipped true)
(edgeAntialiasingMask%s%s%s%s%s)
(disableUpdateMask%s%s%s%s%s%s%s)
(contentsGravity %s)
(contentsOpaque true)
(contentsDither false)
(contentsAlignsToPixels true)
(contentsMultiplyColor %.3g %.3g %.3g %.3g)
(contentsSwizzle %s)
(doubleSided false)
(sortsSublayers false)
(flipsHorizontalAxis true)
(opacity %g)
(cornerRadius %g)
(backgroundColor 
(backgroundColor (%.3g %.3g %.3g %.0g))
(borderWidth %g)
(borderColor 
(borderColor (%.3g %.3g %.3g %.0g))
(cornerContents 
(continuousCorners true)
(cornerContentsMasksEdges true)
(maskedCorners%s%s%s%s%s)
(contents %s
(contentsScaling repeat)
(magnificationFilter %s)
(minificationFilter %s)
(gain %g)
(lodBias %g)
(inheritsTiming false)
(definesDisplayRegionOfInterest true)
(contentsContainsSubtitles true)
(contentsRect 
(contentsCenter 
(cornerContentsCenter 
(literalContentsCenter true)
(contentsScale %g)
(shouldRasterize true)
(rasterizationPrefersDisplayCompositing true)
(rasterizationScale %g)
(preloadsCache true)
(createsCompositingGroup true)
(allowsDisplayCompositing true)
(allowsEdgeAntialiasing true)
(wantsExtendedDynamicRangeContent true)
(toneMapToStandardDynamicRange true)
(allowsGroupOpacity true)
(allowsGroupBlending false)
(allowsHitTesting false)
(hitTestsContentsAlphaChannel true)
(hitTestsAsOpaque true)
(securityMode unrestricted)
(securityMode insecure)
(shadowColor (%.3g %.3g %.3g %.0g))
(shadowOpacity %g)
(shadowRadius %g)
(shadowOffset [%g %g])
(shadowPath 
(invertsShadow true)
(shadowPathIsBounds true)
(mask 
(sublayers 
(filters 
(backgroundFilters 
(compositingFilter 
(meshTransform 
(animations 
(modifiers 
(subclass 
%s%s
(filter %s
(enabled false)
(inputs 
(%s 
[CA] Surface ID:0x%x detach result: %s
Failed to detach surface code: %s
CoreAnimation: failed to add monotonic cube ((%g, %g) (%g, %g) (%g, %g) (%g, %g))
CoreAnimation: maximum %d texture units
CoreAnimation: maximum texture %d pixels
CoreAnimation: unsupported graphics hardware
; need three or more texture units
CoreAnimation: %d by %d image is too large for GPU, ignoring
CoreAnimation: image stride is too large for GPU, ignoring
CoreAnimation: surface %d x %d is too large
[%u]
 s:[%u x %u (%.2lf %s)] b:[%u x %u (%.2lf %s)] need-clear:%d%s, id:%p
 s:framebuffer
%s%.*s
error: failed to export [%d %d] buffer to %s
(shape-layer
(fillColor %.3g %.3g %.3g %.3g)
(strokeColor 
(strokeColor %.3g %.3g %.3g %.3g)
(strokeStart %g)
(strokeEnd %g)
(lineWidth %g)
(miterLimit %g)
(dashPhase %g)
(dashPattern 
(fillRule evenOdd)
(lineJoin %s)
(lineCap %s)
(source 
unknown sync reply received : %i
error (%i) waiting for sync reply
long synchronize for %x: now (%u,%u): req %c%u(%u)
synchronize timed out for %x with (%u,%u): req %c%u(%u)
HitTest: starting (%u)
HitTest: got layer "%s"
HitTest: ending (%u)
CoreAnimation: missing mask layer 0x%lx
CoreAnimation: missing sublayer %p
== context %x%s%s%s; pid %d [%s] %sat time %f ==
  slot %u:
Texture 
[%d %d %d %d]
Utilization: %.2f%%, wasted memory: %.2lf %s
  Context utilization: %.2f%%, wasted memory: %.2lf %s
Total utilization: %.2f%%, wasted memory: %.2lf %s
(deferred-image-slot 
(no texture)
unexpected error %i sending sync reply from %x
(%s)
(%s [%g %g %g %g; %g %g %g %g; %g %g %g %g; %g %g %g %g])
(%s [%g %g %g %g %g %g])
** Render objects at time %f **
%20s %s
%20s %d
preferred_mode_with_criteria: resolution [%g x %g], target hdr (%s), user hdr (%s), rate (%g) --> %dx%d@%g %s
CoreAnimation: context hosting changed while locked!
  %x; %spid %d [%s]
 (local)
 (visible)
 (secure)
CoreAnimation: LayerHost trying to host itself or one of its ancestors (context id %d)
(layer-host %x
(inherits-security true)
Shape union is bogus, new shape: %d, old shape: %d!
CoreAnimation: insecure context %x - pid %u [%s].
Cannot host %x in context %x - pid %u [%s].
** Render tree at time %f (bounds %d,%d %dx%d) **
HitTest: start at: (%g, %g)
HitTest: end
Slot name: %s
Slot occluded by: %s with context 0x%x
Slot occluded by layer from context 0x%x
Invalid display attributes version %d
HitTest: %s layer "%s"%s%s
Too many CAContexts! Biggest offender (%s [%d]) has %u contexts!
failed to make reply port for commit sync %i
failed to register commit sync on %x
bad index in commit sync reply : %u not in %@
dead reply from commit sync
unrecognized reply from commit sync
long commit sync wait %i : %@
excessive commit sync wait : %@
unknown error while waiting for commit sync
failed to make send once for update sync on %x
failed to register update sync on %x
failed to make reply port for update sync on %x : r=%i
dead reply from update sync on %u:%x
unrecognized reply from update sync on %u:%x
long update sync wait %i : %u:%x
excessive update sync wait : %u:%x
error while waiting for update sync on %x
CoreAnimation: NULL color space set on context (%x)
CoreAnimation: transaction fences failed : %i
CoreAnimation: failed to lock IOSurface %x
CoreAnimation: failed to create Metal context!
CoreAnimation: sw renderer doesn't support tiling
CoreAnimation: %d by %d image is too large for software renderer, ignoring
SW renderer invalid destination format %c%c%c%c
%{public, signpost.description:begin_time}llu seed=%{public, name=transaction_seed}#x
Commit
CoreAnimation: warning, deleted thread with uncommitted CATransaction; created by:
CoreAnimation: warning, deleted thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
CoreAnimation: new transaction fence disabling existing low latency hint.
CoreAnimation: invalid commit handler phase! Defaulting to pre-commit.
cannot add handler to %i from %i - dropping
CoreAnimation: cannot add handler to %i from %i
CoreAnimation: warning, encountered thread with uncommitted CATransaction; created by:
CoreAnimation: warning, encountered thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
CADisplayTimerAlignPhase: unexpected state (interval:%llx, heartbeat:%llx)
(backdrop-layer %ld
(group "%s")
(groupNamespace global)
(groupNamespace hostingNamespacedContext)
(scale %g)
(zoom %g)
(marginWidth %g)
(backdropRect [%g %g; %g %g])
(captureOnly true)
(allowsInPlaceFiltering true)
(reducesCaptureBitDepth true)
(ignoresScreenClip true)
(tracksLuma true)
(buffer [%d x %d] scale %g)
collected backdrop group %p buffer %p
Filter merging failed.
Filter A:
Filter B:
Filter merging aborted: layer.bounds == blur.inputBounds
(transition %s
CAML warning:%d: 
CAML error:%d: 
CA:Render:Server:port_set (): mach_port_mod_refs () returned error 0x%x
unable to find bootstrap server
unable to register bootstrap port %s: %x
(pixel-buffer %c%c%c%c [%d %d])
CAImageProvider: %.3gMB cached (%.3gMB purgeable); idle %.3gs -> %.3gs
(image-provider [%d %d] [%d %d] [%d %d]
(fillColor 
(fillColor #%08x 
CARenderServerBufferRef is now a CF type. Please use CFRetain/CFRelease instead of CARenderServerDestroyBuffer!
Failed to allocate %u-byte Metal buffer
Failed to create MTLCommandQueue
Mismatched MTLCommandQueue and MTLDevice
%s: %s
Capturing %d GPU frames to %s
Unable to capture to GPU trace file: %s
Capture to a GPU trace file is not supported. Try setting env var: METAL_CAPTURE_ENABLED=1
Finished capturing GPU frames
Can't run metal against null surface
context=%{public,name=context}u update=0x%{public,name=update}x cmdbuf=%{public,name=cmdbuf}u thread=%{public,name=thread}llx begin=%{public,signpost.description:begin_time}llu end=%{public,signpost.description:end_time}llu
Scheduling
Executing
context=%{public,name=context}u update=0x%{public,name=update}x thread=%{public,name=thread}llx begin=%{public,signpost.description:begin_time}llu end=%{public,signpost.description:end_time}llu
RenderToCompletion
Specializing shader function %s for %s with constant values %s
Loading shader function %s for %s
function=%{public, name=function}@ spec=%{public, name=spec}@ specialized=%{public, name=specialized}u
Building render pipeline %s with descriptor %s
pipeline=%{public, name=pipeline}@ precompiled=%{public, name=precompiled}u
CompileShader
pipeline=%{public, name=pipeline, signpost.telemetry:string1}@ flags=%{public, name=flags, signpost.telemetry:string2}s order=%{public, name=order, signpost.telemetry:number1}u enableTelemetry=YES 
NewRenderPipeline
pipeline=%{public, name=pipeline, signpost.telemetry:string1}@ order=%{public, name=order, signpost.telemetry:number1}u enableTelemetry=YES 
pipeline=%{public, name=pipeline}@ order=%{public, name=order}u
flags=%{public, name=flags}s
flags=%{public, name=flags, signpost.telemetry:string2}s enableTelemetry=YES 
%zu by %zu iosurface is too large for GPU
Unsupported IOSurface pixel format: %.4s
Unable to create MTLTexture for destination IOSurface
Compiling render pipeline: %s
Resulting pipeline state: %p (flags=%s)
Compiling fragment shader: %s
Resulting function: %p
Compiling vertex shader: %s
Unrecognized shader spec: %s
Failed to allocate MTLTexture
Failed to allocate MTLTexture from IOSurface 0x%x. Row bytes (%ld) not %ld aligned.
Failed to allocate MTLTexture from IOSurface 0x%x. Descriptor row bytes (%ld) larger than surface row bytes (%ld).
Failed to allocate MTLTexture from IOSurface 0x%x. Texture block bytes (%ld) not equal to surface block bytes (%ld).
Failed to allocate MTLTexture from IOSurface 0x%x.
unsupported surface format: %c%c%c%c
%d by %d image is too large for GPU, ignoring
Image stride is too large for GPU, ignoring
Surface %d x %d is too large
Failed to allocate %dx%d surface texture.
Descriptor (0x%llx) and texture (0x%llx) protection mismatch!
Surface from iosurface %d x %d is too large
Target of memoryless surface not bound, possible misuse.
Failed to allocate Metal buffer
Failed to allocate uniform Metal buffer
Command buffer allocation failed!
MTLCommandBuffer %p, protection 0x%llx, label %s, error = %s
Unable to start render command encoder
Unable to start blit command encoder
Ignoring [%d x %d] invalid surface dimensions
Unexpected framebuffer format %c%c%c%c
Failed to allocate [%d x %d] %c%c%c%c framebuffer %s
Cannot cast linear FP16 texture to sRGB sampler variant
%f %x "%s" (%p): replacing %p (eval %u; frames %u):
%f %x "%s" (%p): adding %p:
%f %x "%s" (%p): not adding %p:
%f %x "%s" (%p): removing all:
%p (eval %u; frames %u):
%f %x "%s" (%p): removing %p (eval %u; frames %u):
%f %x "%s" (%p): collecting %p (t %f; speed %g; eval %u; frames %u):
CoreAnimation: ignoring invalid path
(path
%g %g m
%g %g l
%g %g %g %g q
%g %g %g %g %g %g c
(function %s)
suspiciously large function size: %zu count: %zu
suspiciously large interpolations: %zu count: %zu
CoreAnimation: disabling OpenGL extension %s
%08x %08x vertex shader:
%s%s---
%08x %08x fragment shader:
%s%s---
suspiciously long string: %zu
"%s"
(emitter-behavior %s
(values 
(timingFunction 
(keyPath 
(sourceLayer 0x%lx)
(sourceContext %x)
(match-property-animation
(match-move-animation
(sourcePoints 
Color matching limited to 3-stage compact format (TRC -> NxM/LUT -> TRC), falling back to cube LUT
No support for more than one NxM LUT, falling back to cube LUT
Stage = %ld, %ld TRCs
TRCs are not the same for each color channel, falling back to cube LUT
Stage = %ld, %zux%zu LUT, %zu grid points
%zux%zu LUT not supported.
unsupported NxM LUT data format
Failed to iterate CGColorConverter 
'%s' --> '%s'
CGColorConverter:
    %d stages
    %d input components
    %d output components
    %d TRCs
    %d Matrices
    %d NxM LUTs
    TRC channel %d --> TRCs[%ld], Table: entries = %zu
    TRC channel %d --> TRCs[%ld], Type0: Y = X^%f 
    TRC channel %d --> TRCs[%ld], Type1: Y = (%g*X+%g)^%g [X >= %g],  Y = 0 [X < %g] pure power original: %s
    TRC channel %d --> TRCs[%ld], Type2: Y = (%g*X+%g)^%g + %f [X >= %g],  Y = %g [X < %g] pure power original: %s
    TRC channel %d --> TRCs[%ld], Type3: Y = (%g*X+%g)^%g [X >= %g],  Y = %g*X [X < %g] pure power original: %s
    TRC channel %d --> TRCs[%ld], Type4: Y = (%g*X+%g)^%g + %g [X >= %g], Y = %g*X + %g [X < %g] pure power original: %s
    TRC channel %d --> TRCs[%ld], PQ InvEOTF (engamma)
    TRC channel %d --> TRCs[%ld], PQ EOTF (degamma)
    TRC channel %d --> TRCs[%ld], HLG OETF (engamma)
    TRC channel %d --> TRCs[%ld], HLG InvOETF (degamma)
Stage = %ld matrix %ld
    %g %g %g %g
    %g %g %g %g
    %g %g %g %g
IOSurface Compression Enabled: %s
CADisplay Harmony Matrix is XYZ: %s
(compressed-image [%d %d] [%d] %s
 (%.2lf %s)
Transaction (%p) property %s changed %s
Began transaction (%p) change on layer %p for %s, %p
Redundant layout on %s which took %f ms
cornerContents must be a CGImageRef for now!
CoreAnimation: Message::send_message() returned 0x%x
failed encode_port_make_once : r=%i so=%x t=%x
Decoder has no context! dcid=%x
Context ID mismatch! pcid=%x pseed=%u : heap=%p data=%p data_len=%zu flags=%u dcid=%x t=%f
Context is destroyed! cid=%x
%s (%u) : %s
unable to decode object of type %d
CoreAnimation: serialization error from context %x
(cloning-terminator-layer)
CoreAnimation: unhandled combiner function: %d
ImageQueueCollectable client message err=0x%x
ImageQueueDidComposite client message err=0x%x
ImageQueueDidPresent client message err=0x%x
CoreAnimation: Warning! CAImageQueueSetOwner() is deprecated and does nothing. Please stop calling this method.
(image-queue
 0x%016llx
%s%s%s%s%s%s
(generation 0x%08x)
(rotationFlags %d)
(edr-deadline %f)
(enhancementMode %d)
(samples
(0x%llx %s 0x%x, [%d %d; rot %d] %f (generation 0x%08x) (detach 0x%016llx) %s%s%s)
Invalid callback for CAXPCImageQueueCreate!
Invalid command in CAXPCImageQueueReceiverCreate message!
CAXPCImageQueue: buffer id 0x%llu not found!
CAImageQueue %p: frame %f (%llx) used %d: %f (%llx) detach: 0x%llx
Display %d commitBrightness sdr: %g, headroom: %g, ambient: %g, filtered ambient: %g, limit: %g
Posting %s, payload: %@
no queue available for '%s' notification
no block registered for '%s' notification
display=%{public,name=display}u update=0x%{public,name=update}x
%{public, signpost:metrics}@
CoreAnimation: updates deferred for too long
reason=%{public,name=reason}d
%{public, signpost:metrics}@
No display runloop! Ignoring latency update.
== context %x; level %g; pid %d [%s] %sat time %f ==
CoreAnimation: timed out freeze semaphore
** Render #%d tree at time %f **
ID is update seed. refresh_interval=%{public, name=refresh_interval}llu display_id=%{public, name=display_id}#x %{public, signpost.description:begin_time}llu skipped_render_reason=%{public, name=skipped_render_reason}s
ID is update seed. refresh_interval=%{public, name=refresh_interval}llu display_id=%{public, name=display_id}#x %{public, signpost.description:begin_time}llu
RenderInterval
ID is update seed. refresh_interval=%{public, name=refresh_interval}llu display_id=%{public, name=display_id}#x %{public, signpost.description:begin_time}llu pass_count=%{public, name=pass_count}u skipped_render_reason=%{public, name=skipped_render_reason}s
ID is update seed. refresh_interval=%{public, name=refresh_interval}llu display_id=%{public, name=display_id}#x %{public, signpost.description:begin_time}llu pass_count=%{public, name=pass_count}u
CoreAnimation: invalid mesh transform - too few edges
CoreAnimation: invalid mesh transform - vertex index
CoreAnimation: invalid mesh transform - paired edge
(meshTransform [invalid])
(meshTransform
(vertex %d (%g %g) (%g %g %g))
(face %d (%d %d %d %d) (%g %g %g %g))
CoreAnimation: IOSurface 0x%x [%u x %u] doesn't have the proper data alignment! Expected %zu base address and %zu row byte alignment
(surface machport %u)
(surface 0x%x [%d %d] 
edr %g 
protected 0x%llx 
%s %c%c%c%c
CoreAnimation: IOSurface 0x%x ('%c%c%c%c') has unexpected bytes-per-row value of %zu, expected at least %zu for the width of %zu.
(beginTime %f)
(duration %f)
(autoreverses true)
(fillMode %s)
(speed %f)
(timeOffset %f)
(%s %f)
CoreAnimation buffers: currently %.3gMB; maximum %.3gMB
(distance-field-layer
(renderMode %s)
(invertsShape true)
(foregroundColor #%08x)
(offset %g)
(sharpness %g)
Writing to '%s'
SimDisplay : unsupported SimColorSpace
SimDisplay skipping swap with no swapchain
backdrop 0x%lx; update %d; group %p "%s" size %zu; [%d %d; %d x %d]:
  copying to surface [%d %d; %d x %d] scale %g:
backdrop 0x%lx rect [%d %d; %d x %d]
backdrop 0x%lx complete
  applying %d merged group filters (lst %p)
(vector
(frameInterval %f)
(discretizesTime true)
(additive true)
(cumulative true)
(removedOnCompletion false)
(affectsVelocity true)
(function 
(from 
(to 
(by 
(calculationMode %s)
(keyTimes 
(timingFunctions 
(path 
(type %s)
(subtype %s)
(filter 
(options 
(mass %g)
(stiffness %g)
(damping %g)
(velocity %g)
(modifier
(values
 %.10g
(array
(subtexture [%d %d %d %d] 
(texture 
CoreAnimation: unknown fence observer message %i
CoreAnimation: transaction observer %x timed out after %f
CoreAnimation: failed to receive fence reply: %x
CoreAnimation: timed out fence %llu
CoreAnimation: failed to send fence reply: %x
(portal-layer 0x%lx
(hidesSourceLayer true)
(matchesOpacity true)
(matchesPosition true)
(matchesTransform true)
(allowsBackdropGroups true)
Rejecting value:
For key: %s
creating class description for %s
  %s: %s
    type %d: %s flags 0x%x
(proxy %d 0x%llx)
(pattern [%g %g %g %g] [%g %g]
(cell 
(gradient-layer
(gradientType %s)
(startPoint [%.10g %.10g])
(endPoint [%.10g %.10g])
failed to receive purple reply message: %x
failed to send purple message: %x
CGBitmapContextSetData failed, bpc %zu, bpp %zu, info %u
CoreAnimation: GLES%d not supported by CARenderer on this device
CAEmitterLayer
CAEmitterLayerPrivate
CATransform3DAdditions
CAStateControllerTransition
CAAnimationDelegate
NSObject
CAStateController
CADisplay
CADisplayLink
CADisplayLinkPrivate
CADisplayMode
CADisplayAttributes
CADisplayProperties
CADisplayPreferences
NSCopying
NSMutableCopying
CAMutableDisplayPreferences
CADisplayModeCriteria
CACodingProxy
NSSecureCoding
NSCoding
LKNSArrayCodingProxy
LKNSDictionaryCodingProxy
LKNSValueCodingProxy
LKCGColorCodingProxy
LKCGImageCodingProxy
CACGPatternCodingProxy
CACGPathCodingSegment
CACGPathCodingProxy
CAIOSurfaceCodingProxy
CADebuggingArchiverDelegate
NSKeyedArchiverDelegate
CACodingCAMLWriterDelegate
CAMLWriterDelegate
CACoderAdditions
CAChameleonLayer
CAStateControllerUndo
CAStateRecorder
CAMLParser
CAFilter
CAState
CAMeshTransform
CAMutableMeshTransform
CAMeshInterpolator
CAValueFunction
CAMediaTimingFunction
CAMediaTimingFunctionPrivate
CAMediaTimingFunctionBuiltin
CAStateRemoveAnimation
CARenderValue
CATiledLayer
CATiledLayerPrivate
CAColorMatrixAdditions
CATextLayer
CATextLayerPrivate
CAScrollLayer
CALayerScrolling
CAStateTransition
CAEmitterCell
CAMediaTiming
CAEmitterCellPrivate
CAPropertyInfo
CAStateAddAnimation
CAEAGLLayer
EAGLDrawable
CAEAGLLayerPrivate
CAStateControllerAnimation
CAPortalLayer
CATintedImage
CAPoint3DAdditions
CAFenceHandle
CAFrameRateRangeGroup
CAStateControllerLayer
CAStateAddElement
CAStateTransitionElement
CAMetalDrawable
MTLDrawable
CAMetalDrawableSPI
MTLDrawableSPI
CAMetalLayer
CAMetalLayerPrivate
CALinearMaskLayer
CALayer
CALayerPrivate
CALayerFunctions
CAActionAdditions
CAAction
CAStateSetValue
CALayerArray
CAWindowServer
CAWindowServerDisplay
CABrightnessControl
CABrightnessTransaction
CAPresetTransaction
CAWindowServerVirtualDisplay
CATransformLayer
Optimizations
CAStateElement
CAPresentationModifierGroup
CAPresentationModifier
CAAnimation
CAAnimationPrivate
CAPropertyAnimation
CABasicAnimation
CAKeyframeAnimation
CASpringAnimation
CAMatchMoveAnimation
CAMatchPropertyAnimation
CATransition
CAAnimationGroup
CAAnimatableValue
CAShapeLayer
CALayerHost
CAReplicatorLayer
CASmoothedTextLayer
CAPackage
CATransaction
CATransactionPrivate
CATransactionInternal
CATransactionCompletionItem
CABackdropLayer
CADistanceFieldLayer
CAEmitterBehavior
CAMLWriter
_CAObjectInternal
CAObjectCGAffineTransformAdditions
CASuspendNotification
CAContext
CASlotProxy
CAStateRemoveElement
CAGradientLayer
CAGradientLayerPrivate
CADisplayPersistedData
CADisplayPersistedLatency
CADisplayPersistedPreferredMode
CARenderer
CARendererPrivate
dictionaryWithObjects:forKeys:count:
setObject:forKeyedSubscript:
numberWithInt:
arrayWithObjects:count:
setValue:forKey:
CAMLParserStartElement:
CAMLParserEndElement:
CAMLParserEndElement:content:
CAMLParser:setValue:forKey:
instancesRespondToSelector:
initWithBytes:length:encoding:
CAMLTypeForKey:
UTF8String
CAMLTypeSupportedForKey:
dataWithBytesNoCopy:length:freeWhenDone:
initWithBase64EncodedData:options:
valueWithPoint:
valueWithSize:
valueWithRect:
setTransformStruct:
valueWithCATransform3D:
valueWithCAPoint3D:
valueWithCAColorMatrix:
numberWithDouble:
defaultValueForKey:
didChangeValueForKey:
rangeOfString:
substringToIndex:
isEqualToString:
reloadValueForKeyPath:
implicitAnimationForKeyPath:
_copyRenderLayer:layerFlags:commitFlags:
birthRate
lifetime
emitterDuration
emitterPosition
emitterZPosition
emitterSize
emitterDepth
velocity
scale
spin
spinBias
cullRect
cullMinZ
cullMaxZ
emitterCells
emitterBehaviors
emitterPath
emitterRects
count
countByEnumeratingWithState:objects:count:
rectValue
emitterShape
emitterMode
renderMode
preservesDepth
seed
updateInterval
_colorSpaceDidChange
_renderLayerDefinesProperty:
_renderLayerPropertyAnimationFlags:
CA_automaticallyNotifiesObservers:
CA_validateValue:forKey:
_hasRenderLayerSubclass
setEmitterCells:
setBirthRate:
setLifetime:
setEmitterShape:
setEmitterMode:
setEmitterPosition:
setEmitterZPosition:
setEmitterSize:
setEmitterDepth:
setVelocity:
setScale:
setSpin:
setRenderMode:
setPreservesDepth:
setSeed:
T@"NSArray",C
T{CGPoint=dd}
T{CGSize=dd}
T@"NSString",C
setEmitterPath:
setEmitterRects:
setEmitterBehaviors:
setEmitterDuration:
setUpdateInterval:
setSpinBias:
setCullRect:
setCullMinZ:
setCullMaxZ:
Tr^{CGPath=}
T{CGRect={CGPoint=dd}{CGSize=dd}}
valueWithBytes:objCType:
getValue:size:
CATransform3DValue
T{CATransform3D=dddddddddddddddd},R
init
addObject:
animationForKey:
CAStateControllerTransition
removeAnimationForKey:
removeAnimationFromLayer:forKey:
layer
_removeTransition:layer:
delegate
stateController:transitionDidStop:completed:
invalidate
dealloc
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
animationDidStart:
animationDidStop:finished:
addAnimation:
transition
beginTime
duration
speed
_controller
_layer
_transition
_beginTime
_duration
_speed
_masterKey
_animations
T@"CALayer",R,N,V_layer
T@"CAStateTransition",R,N,V_transition
Td,R,N,V_beginTime
Td,R,N,V_duration
Tf,R,N,V_speed
T@"CAStateControllerTransition",W,D
raise:format:
willChangeValueForKey:
_initWithDisplay:
currentMode
_mode
overscanAdjustment
connectionSeed
array
_display
setCurrentMode:
setDisplayProperties:
setOverscanAdjustment:
name
deviceName
stringWithFormat:
_initWithAttributes:
initWithMatchContent:preferredHdrType:
matchContent
_preferredHdrType
preferences
hdrMode
preferredHdrMode
refreshRate
resolution
predicateWithBlock:
filteredArrayUsingPredicate:
supportedHDRModes
mutableCopy
displays
updateDisplays
mainDisplay
TVOutDisplay
automaticallyNotifiesObserversForKey:
_invalidate
timingsControl
update
immutableCopy
displayId
displayType
uniqueId
containerId
productName
availableModes
preferredMode
colorMode
setColorMode:
allowsVirtualModes
setAllowsVirtualModes:
bounds
frame
safeBounds
processId
isSupported
isExternal
hardwareRefreshRate
heartbeatRate
minimumFrameDuration
hasNativeFrameRateRequest
isOverscanned
overscanAmount
overscanAmounts
isCloned
isCloning
isCloningSupported
nativeOrientation
currentOrientation
odLUTVersion
supportsExtendedColors
externalDisplayAttributes
linkQuality
latency
setLatency:
setPreferences:
preferredModeWithCriteria:
preferredHDRModes
allowedHDRModes
overrideDisplayTimings:
highestLocalPreferredFrameRateRequest
_impl
T@"NSArray",R,N
T@"CADisplayMode",&,N
T@"CADisplayMode",R,N
T@"NSString",C,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T@"NSString",R,N
TI,R,N
Tq,R,N
supported
TB,R,N,GisSupported
Ti,R,N
external
TB,R,N,GisExternal
Td,R,N
TB,R,N
overscanned
TB,R,N,GisOverscanned
T{CGSize=dd},R,N
cloned
TB,R,N,GisCloned
cloning
TB,R,N,GisCloning
cloningSupported
TB,R,N,GisCloningSupported
T@"CADisplayAttributes",R,N
Td,N
T@"CADisplayPreferences",C,N
displayLinkWithDisplay:target:selector:
getCFRunLoop
exceptionWithName:reason:userInfo:
displayLinkWithTarget:selector:
_initWithDisplayLinkItem:
addToRunLoop:forMode:
removeFromRunLoop:forMode:
timestamp
setPaused:
isPaused
priority
setPriority:
setFrameInterval:
frameInterval
targetTimestamp
setPreferredFramesPerSecond:
preferredFramesPerSecond
setPreferredFrameRateRange:
preferredFrameRateRange
paused
TB,N,GisPaused
Tq,N
T{CAFrameRateRange=fff},N
display
setUserInfo:
maximumRefreshRate
userInfo
actualFramesPerSecond
setHighFrameRateReason:
highFrameRateReason
setHighFrameRateReasons:count:
timingOffset
setTimingOffset:
willFireInfoVersion
supportsExpectedWakeupBeforeCommitDeadline
expectedWakeupBeforeCommitDeadline:
setWillFireHandler:
dispatchDeferredDisplayLinks
T@"CADisplay",R,N
T@,&,N
_initWithMode:display:
preferredScale
width
height
_displayModeWithMode:display:
_setWidth:height:
_setPreferredUIScale:
pixelAspectRatio
isVirtual
isHighBandwidth
colorModeIsYCbCr
colorGamut
bitDepth
isVRR
internalRepresentation
_priv
TQ,R,N
highBandwidth
TB,R,N,GisHighBandwidth
T@"NSString",R,C,N
dolbyVision
pqEOTF
hdrStaticMetadataType1
bt2020YCC
legacyHDMIEDID
manufacturerID
productID
weekOfManufacture
yearOfManufacture
serialNumber
.cxx_construct
_edid_attributes
Tq,R
TB,R
TI,R
copy
setConnectionSeed:
_currentMode
_overscanAdjustment
_connectionSeed
TI,N
initWithPreferences:
allocWithZone:
copyWithZone:
mutableCopyWithZone:
setMatchContent:
setPreferredHdrMode:
TB,N
TB,D,N
T@"NSString",C,D,N
setResolution:
setRefreshRate:
setHdrMode:
objectAtIndexedSubscript:
boolValue
charValue
unsignedCharValue
shortValue
unsignedShortValue
intValue
unsignedIntValue
longValue
unsignedLongValue
longLongValue
unsignedLongLongValue
floatValue
doubleValue
CA_CGAffineTransformValue
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithObject:
decodedObject
initWithCapacity:
objectAtIndex:
encodeObject:forKey:
CA_supportedClasses
decodeObjectOfClasses:forKey:
_array
keyEnumerator
nextObject
objectForKey:
setObject:forKey:
_dict
objCType
pointValue
sizeValue
CAPoint3DValue
CAColorMatrixValue
encodeInt:forKey:
encodeFloat:forKey:
decodeIntForKey:
decodeFloatForKey:
containsValueForKey:
decodeDoubleForKey:
_kind
CA_encodeObject:forKey:conditional:
CA_decodeObjectForKey:
_color
archiver:dataForImage:
archiver:formatForImage:
encodeBool:forKey:
decodeObjectOfClass:forKey:
decodeBoolForKey:
unarchiver:didReadData:forImage:
_image
CA_encodeCGFloatArray:count:forKey:
CA_decodeCGFloatArray:count:forKey:
_pattern
encodeDouble:forKey:
initWithCGPathElement:
addToCGPath:
_type
_points
_path
dictionary
numberWithLong:
dictionaryWithCapacity:
objectForKeyedSubscript:
arrayWithCapacity:
length
bytes
_surface
archiver:willEncodeObject:
archiver:didEncodeObject:
archiver:willReplaceObject:withObject:
archiverWillFinish:
archiverDidFinish:
bundleForClass:
imageEncodeOptions
imageFormat
fileURLWithPath:
URLWithString:relativeToURL:
URLWithString:
isHidden
opacity
CAMLWriter:typeForObject:
CAMLWriter:IDForObject:
CAMLWriter:URLForResource:
CAMLWriter:shouldEncodeObject:
initWithResourceDir:
setImageFormat:
setImageEncodeOptions:
skipHiddenLayers
setSkipHiddenLayers:
_resourceDir
_serial
_imageFormat
_imageEncodeOptions
_skipHiddenLayers
T@"NSString",C,V_imageFormat
T@"NSDictionary",C,V_imageEncodeOptions
TB,V_skipHiddenLayers
setWithObjects:
encodeConditionalObject:forKey:
unarchiver:didDecodeObject:
initWithString:
scanDouble:
defaultManager
temporaryDirectory
path
UUID
UUIDString
removeItemAtPath:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToFile:atomically:
dataWithPropertyList:format:options:error:
moveItemAtPath:toPath:error:
begin
initRequiringSecureCoding:
lock
setDelegate:
contentsAreFlipped
numberWithBool:
encodedData
unlock
commit
initWithUTF8String:
initWithObjectsAndKeys:
initWithObjects:
isSubclassOfClass:
tintedImageWithCABackingStore:
image
writerWithData:
encodeObject:
_initWithReference:
addElement:
willAddLayer:
addTransition:
next
state
setState:
elements
setElements:
transitions
setTransitions:
_next
_state
_elements
_transitions
T@"CAStateControllerUndo",R,V_next
T@"CAState",&,N,V_state
T@"NSMutableArray",&,N,V_elements
T@"NSMutableArray",&,N,V_transitions
parseContentsOfURL:
error
result
parseBytes:length:
initWithContentsOfURL:options:error:
parseData:
stringWithUTF8String:
initWithFormat:arguments:
parser
setBaseURL:
baseURL
parseString:
objectById:
elementValue
setElementValue:
attributeForKey:remove:
willLoadResourceFromURL:
didLoadResource:fromURL:
didFailToLoadResourceFromURL:
parserError:
parserWarning:
_data
T@"NSURL",&
T@"<CAMLParserDelegate>",W
T@"NSError",R
T@,R
errorWithDomain:code:userInfo:
initWithType:
filterWithType:
isEnabled
setName:
setEnabled:
setCachesInputImage:
cachesInputImage
type
setElementAttribute:forKey:
filterTypes
filterWithName:
initWithName:
enabled
isAccessibility
setAccessibility:
valueForKey:
setDefaults
CA_copyRenderValue
encodeWithCAMLWriter:
_name
_flags
_attr
_cache
T@"NSString",R
TB,GisEnabled
accessibility
TB,GisAccessibility
beginPropertyElement:
endElement
removeObjectIdenticalTo:
foreachLayer:
removeElement:
basedOn
setBasedOn:
nextDelay
setNextDelay:
previousDelay
setPreviousDelay:
isLocked
setLocked:
isInitial
setInitial:
_basedOn
_nextDelay
_previousDelay
_enabled
_locked
_initial
T@"NSString",C,N,V_name
T@"NSString",C,V_basedOn
TB,GisEnabled,V_enabled
T@"NSArray",C,N
Td,V_nextDelay
Td,V_previousDelay
locked
TB,N,GisLocked,V_locked
initial
TB,GisInitial,V_initial
initWithVertexCount:vertices:faceCount:faces:depthNormalization:
_init
_initWithMeshTransform:
dataUsingEncoding:
_subdivideToDepth:
depthNormalization
_constructWithData:
initWithString:relativeToURL:
initWithContentsOfURL:
URLStringForResource:
initWithFormat:
initWithData:encoding:
setElementContent:
meshTransformWithVertexCount:vertices:faceCount:faces:depthNormalization:
vertexCount
vertexAtIndex:
faceCount
faceAtIndex:
subdivisionSteps
replicatesEdges
subdividedMesh:
inverseMesh
CA_interpolateValue:byFraction:
CA_interpolateValues:::interpolator:
CA_distanceToValue:
meshTransformForLayer:
_normalization
_subdivisionSteps
_replicatesEdges
Ti,R
replaceVertexAtIndex:withVertex:
replaceFaceAtIndex:withFace:
meshTransform
setDepthNormalization:
setSubdivisionSteps:
setReplicatesEdges:
addVertex:
removeVertexAtIndex:
addFace:
removeFaceAtIndex:
_interp
_initWithName:
functionWithName:
inputCount
outputCount
apply:result:
apply:result:parameterFunction:context:
_string
appendString:
initWithControlPoints::::
_getPoints:
functionWithControlPoints::::
getControlPointAtIndex:values:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
characterAtIndex:
_solveForInput:
CAMLType
classForCoder
_index
target
setKey:
setAnimation:
setTarget:
setSource:
keyPath
matches:
apply:
_key
T@"NSString",C,N,V_key
CA_prepareRenderValue
CA_copyRenderValueWithColorspace:
CA_copyNumericValue:
transformStruct
getObjects:andKeys:count:
CA_copyRenderKeyValueArray
initWithInt:
shouldDrawOnMainThread
setNeedsDisplayInRect:
setContentsChanged
setNeedsDisplay
shouldArchiveValueForKey:
contents
setContents:
isDrawingEnabled
_dealloc
levelsOfDetail
levelsOfDetailBias
contentsScale
tileSize
isOpaque
canDrawConcurrently
fadeDuration
prefetchedTiles
fillColor
maximumTileScale
invalidateContents
_canDisplayConcurrently
setUnsafeUnretainedDelegate:
setLevelsOfDetail:
setLevelsOfDetailBias:
setTileSize:
setNeedsDisplayInRect:levelOfDetail:options:
tiledLayer:canDrawRect:levelOfDetail:
numberWithUnsignedInt:
setNeedsDisplayInRect:levelOfDetail:
canDrawRect:levelOfDetail:
displayInRect:levelOfDetail:options:
setFillColor:
setMaximumTileScale:
setDrawingEnabled:
T^{CGColor=}
drawingEnabled
TB,GisDrawingEnabled
T@"<CATiledLayerDelegate><CALayerDelegate>",W
drawsAsynchronously
acceleratesDrawing
clearsContext
drawInContext:
initWithFloat:
initWithCharacters:length:
isWrapped
setSizeRequisition:
superlayer
setNeedsLayout
font
fontSize
foregroundColor
string
_createStringDict
truncationString
_retainTypesetter
_applyLinesToFunction:info:truncated:
alignmentMode
truncationMode
_createTruncationToken
saveGraphicsState
graphicsContextWithGraphicsPort:flipped:
setCurrentContext:
size
_applyLinesToFunction:info:
restoreGraphicsState
allowsFontSubpixelQuantization
needsDisplayForKey:
_preferredSize
isTruncated
_drawLine:inContext:atPoint:
_prepareContext:
setString:
setFontSize:
setFont:
setForegroundColor:
setWrapped:
setTruncationMode:
setAlignmentMode:
setAllowsFontSubpixelQuantization:
T@,C
Tr^v
wrapped
TB,GisWrapped
setTruncationString:
truncated
TB,R,GisTruncated
sharedApplication
userInterfaceLayoutDirection
insertState:atIndex:
states
insertObject:atIndex:
setStates:
indexOfObjectIdenticalTo:
removeObjectAtIndex:
stateTransitions
fromState
toState
addState:
removeState:
stateWithName:
dependentStatesOfState:
stateTransitionFrom:to:
T@"NSArray",C,D
scrollMode
setBounds:
convertPoint:fromLayer:
scrollToPoint:
convertRect:fromLayer:
scrollToRect:
convertRect:toLayer:
_scrollPoint:fromLayer:
_scrollRect:fromLayer:
_visibleRectOfLayer:
setScrollMode:
scrollPoint:
scrollRectToVisible:
visibleRect
T{CGRect={CGPoint=dd}{CGSize=dd}},R
animation
setFromState:
setToState:
_fromState
_toState
T@"NSString",C,N,V_fromState
T@"NSString",C,N,V_toState
T@"NSArray",C,N,V_elements
repeatDuration
autoreverses
repeatCount
timeOffset
fillMode
particleType
lifetimeRange
emissionLatitude
emissionLongitude
emissionRange
velocityRange
xAcceleration
yAcceleration
zAcceleration
mass
massRange
scaleRange
scaleSpeed
orientationLatitude
orientationLongitude
orientationRange
rotation
rotationRange
spinRange
color
redRange
greenRange
blueRange
alphaRange
redSpeed
greenSpeed
blueSpeed
alphaSpeed
minificationFilterBias
contentsFrameCount
contentsFramesPerRow
contentsFramesPerSecond
contentsFrameMode
contentsRect
magnificationFilter
minificationFilter
appendFormat:
emitterCell
setBeginTime:
setDuration:
setSpeed:
setTimeOffset:
setRepeatCount:
setRepeatDuration:
setAutoreverses:
setFillMode:
valueForUndefinedKey:
setValue:forUndefinedKey:
valueForKeyPath:
setValue:forKeyPath:
style
setStyle:
setLifetimeRange:
setEmissionLatitude:
setEmissionLongitude:
setEmissionRange:
setVelocityRange:
setXAcceleration:
setYAcceleration:
setZAcceleration:
setScaleRange:
setScaleSpeed:
setOrientationLatitude:
setOrientationLongitude:
setOrientationRange:
setRotation:
setRotationRange:
setSpinRange:
setColor:
setRedRange:
setRedSpeed:
setGreenRange:
setGreenSpeed:
setBlueRange:
setBlueSpeed:
setAlphaRange:
setAlphaSpeed:
setContentsRect:
setContentsScale:
setMagnificationFilter:
setMinificationFilter:
setMinificationFilterBias:
T@,&
T@"NSDictionary",C
setParticleType:
setMass:
setMassRange:
setContentsFrameMode:
setContentsFrameCount:
setContentsFramesPerRow:
setContentsFramesPerSecond:
properties
contextImpl
numberWithUnsignedChar:
_renderShmem
stringWithString:
addAnimation:forKey:
_animation
T@"CAAnimation",&,N,V_animation
presentsWithTransaction
lowLatency
isMainThread
maximumDrawableCount
currentState
flush
_didCommitLayer:
drawableProperties
setDrawableProperties:
nativeWindow
layerDidBecomeVisible:
_defersDidBecomeVisiblePostCommit
setPresentsWithTransaction:
_win
isDrawableAvailableInternal
isDrawableAvailable
discardContents
setAsynchronous:
isAsynchronous
setMaximumDrawableCount:
setLowLatency:
setInputTime:
inputTime
setDrawableTimeoutSeconds:
drawableTimeoutSeconds
T^{_EAGLWindowObject=^?^?^?},R
asynchronous
TB,GisAsynchronous
presentRenderbuffer:atTime:
bundleWithIdentifier:
classNamed:
initWithLayer:key:
T@"NSString",R,N,V_key
hidesSourceLayer
matchesOpacity
matchesPosition
matchesTransform
allowsBackdropGroups
sourceLayer
context
contextId
sourceLayerRenderId
sourceContextId
setSourceLayer:
setSourceLayerRenderId:
setSourceContextId:
setHidesSourceLayer:
setMatchesOpacity:
setMatchesPosition:
setMatchesTransform:
setAllowsBackdropGroups:
T@"CALayer",W
CAMLParser:formatWarningString:arguments:lineNumber:
CAMLParser:formatErrorString:arguments:lineNumber:
CAMLParser:didFailToFindClassWithName:
initWithContentsOfURL:encoding:error:
CAMLParser:evaluateScriptElement:sourceURL:lineNumber:
absoluteString
CAMLParser:evaluateScriptValue:sourceURL:lineNumber:
CAMLParser:resourceForURL:
CAMLParser:didLoadResource:fromURL:
CAMLParser:didFailToLoadResourceFromURL:
tintedImageWithCGImage:tint:copyFlags:
setImage:
setTint:
tint
tintedImageWithCGImage:tint:
_tint
_copy_flags
T^{CGImage=},&,V_image
T^{CGColor=},&,V_tint
setVertexBuffer:offset:atIndex:
methodForSelector:
setFragmentBuffer:offset:atIndex:
setVertexBufferOffset:atIndex:
setFragmentBufferOffset:atIndex:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
setPurgeableState:
newBufferWithLength:options:
newCommandQueue
setLabel:
setSubmissionQueue:
setCompletionQueue:
device
renderPassDescriptor
newDepthStencilStateWithDescriptor:
setBackgroundGPUPriority:
supportsMemorylessRenderTargets
sharedCaptureManager
newCaptureScopeWithCommandQueue:
minConstantBufferAlignmentBytes
pathForResource:ofType:
newLibraryWithFile:error:
localizedDescription
iosurfaceReadOnlyTextureAlignmentBytes
maxTextureWidth2D
maxTextureHeight2D
setDefaultCaptureScope:
isCapturing
supportsDestination:
setDateFormat:
date
stringFromDate:
stringByAppendingPathComponent:
setCaptureObject:
setDestination:
setOutputURL:
startCaptureWithDescriptor:error:
beginScope
endScope
stopCapture
supportsFamily:
maxFragmentTextures
maxFragmentSamplers
maxColorAttachments
setGPUPriority:
kernelStartTime
kernelEndTime
addScheduledHandler:
GPUEndTime
GPUStartTime
addCompletedHandler:
waitUntilScheduled
insertDebugSignpost:
pushDebugGroup:
popDebugGroup
waitUntilCompleted
setMinFilter:
setMagFilter:
setTAddressMode:
setSAddressMode:
setMipFilter:
setMaxAnisotropy:
newSamplerStateWithDescriptor:
initWithBytesNoCopy:length:encoding:freeWhenDone:
stringByAppendingString:
newFunctionWithName:constantValues:error:
newFunctionWithName:
newRenderPipelineStateWithDescriptor:error:
setFragmentFunction:
setVertexFunction:
setVertexDescriptor:
fragmentFunction
label
vertexFunction
colorAttachments
pixelFormat
writeMask
isBlendingEnabled
rgbBlendOperation
alphaBlendOperation
sourceRGBBlendFactor
sourceAlphaBlendFactor
destinationRGBBlendFactor
destinationAlphaBlendFactor
setPixelFormat:
setWriteMask:
setBlendingEnabled:
setAlphaBlendOperation:
setSourceAlphaBlendFactor:
setDestinationAlphaBlendFactor:
setRgbBlendOperation:
setSourceRGBBlendFactor:
setDestinationRGBBlendFactor:
attributes
layouts
setStride:
setStepFunction:
setFormat:
setOffset:
setBufferIndex:
setRenderPipelineState:
setScissorRect:
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
newTextureWithDescriptor:
setTextureType:
setFragmentTexture:atIndex:
setFragmentSamplerState:atIndex:
drawPrimitives:vertexStart:vertexCount:instanceCount:
drawPrimitives:vertexStart:vertexCount:
setUsage:
setProtectionOptions:
protectionOptions
storageMode
newTextureWithDescriptor:iosurface:plane:
setMipmapLevelCount:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
setHeight:
setDepth:
deviceLinearReadOnlyTextureAlignmentBytes
newBufferWithBytesNoCopy:length:options:deallocator:
cpuCacheMode
setCpuCacheMode:
setStorageMode:
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
usage
mipmapLevelCount
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
newTextureViewWithPixelFormat:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
generateMipmapsForTexture:
waitUntilComplete
supportsExtendedXR10Formats
setRenderTargetWidth:
setRenderTargetHeight:
setTexture:
setClearColor:
setStoreAction:
setLoadAction:
newComputePipelineStateWithFunction:error:
setComputePipelineState:
threadExecutionWidth
maxTotalThreadsPerThreadgroup
setTexture:atIndex:
setBuffer:offset:atIndex:
setThreadgroupMemoryLength:atIndex:
dispatchThreadgroups:threadsPerThreadgroup:
endEncoding
commandBuffer
enqueue
setLevel:
setFineGrainedBackgroundVisibilityEnabled:
renderCommandEncoderWithDescriptor:
setViewport:
setFrontFacingWinding:
setCullMode:
setDepthBias:slopeScale:clamp:
setTriangleFillMode:
setBlendColorRed:green:blue:alpha:
setDepthStencilState:
setVisibilityResultMode:offset:
blitCommandEncoder
computeCommandEncoderWithDispatchType:
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
setFramebufferOnly:
setConstantValue:type:withName:
_newFenceWithPort:name:
_initWithPort:name:
isInvalidated
_newFenceFromServer:isObservable:
newFenceFromServer:
_initWithXPCRepresentation:
_copyPort
_accessMachPort:
_copyUntrackedPort
createXPCRepresentation
encodeXPCObject:forKey:
decodeXPCObjectOfType:forKey:
isUsable
newFenceFromDefaultServer
handleFromXPCRepresentation:
handleForPort:fenceId:
fenceId
copyPort
accessMachPort:
_handle_name
_fence_name
_port
_invalidation_mutex
_lock
_invalidated
usable
TB,R,GisUsable
invalidated
TB,R,GisInvalidated
initWithDisplay:
addFrameRateRange:
removeFrameRateRange:
updateFrameRateRange:toRange:
arbitratedRange
arbitratedIntervalRange
reasonsWithCount:
addReason:
addCompatQuantaIntent
hasCompatQuantaIntent
T{CAFrameRateRange=fff},R,N
initWithLayer:
removeTransition:
setCurrentState:
undoStack
_currentState
_undoStack
_nextTimer
_nextState
_nextSpeed
T@"CALayer",R,V_layer
T@"CAState",&,N,V_currentState
T@"CAStateControllerUndo",R,V_undoStack
setKeyPath:
setObject:
setBeforeObject:
object
beforeObject
_keyPath
_object
_beforeObject
T@"NSString",C,N,V_keyPath
T@,&,N,V_object
T@,&,N,V_beforeObject
.cxx_destruct
_target
T@"CALayer",W,N,V_target
removeAllObjects
didScheduledPresent
present
presentAtTime:
texture
T@"<MTLTexture>",R
T@"CAMetalLayer",R
dirtyRect
setDirtyRect:
T{CGRect={CGPoint=dd}{CGSize=dd}},N
addPresentScheduledHandler:
initWithDrawablePrivate:layer:
releasePrivateReferences:
priv
cachedTexture
drawableID
setDrawableID:
sharedEvent
setSharedEvent:
insertSeed
setInsertSeed:
presentScheduledInsertSeedValid
setPresentScheduledInsertSeedValid:
presentScheduledInsertSeed
setPresentScheduledInsertSeed:
_cachedTexture
_dirtyRect
_drawableID
_sharedEvent
_insertSeed
_presentScheduledInsertSeedValid
_presentScheduledInsertSeed
_presentScheduledHandlers
TQ,N,V_drawableID
T@"IOSurfaceSharedEvent",&,N,V_sharedEvent
TI,N,V_insertSeed
TI,N,V_presentScheduledInsertSeed
TB,N,V_presentScheduledInsertSeedValid
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_dirtyRect
allowsNextDrawableTimeout
fenceEnabled
serverSyncEnabled
exclusiveMode
registryID
colorspace
nonDefaultColorspace
setColorspace:nonDefault:
setNonDefaultColorspace:
nextDrawable
setDevice:
preferredDevice
setDrawableSize:
drawableSize
framebufferOnly
setColorspace:
newDrawable
displaySyncEnabled
setDisplaySyncEnabled:
setAllowsNextDrawableTimeout:
T@"<MTLDevice>",&
T@"<MTLDevice>",R
T^{CGColorSpace=}
displayCompositingInternalStatus
removeBackBuffers
setFenceEnabled:
setServerSyncEnabled:
setExclusiveMode:
TQ,N
containsObject:
removeObjectsInArray:
setIsDrawable:
drawInLinearMaskContext:
T@"<CALinearMaskLayerDelegate><CALayerDelegate>",W,D
newTextureLayoutWithDescriptor:isHeapOrBufferBacked:
alignment
initializeTextureMemory:
copyFromLinearBytes:linearOffset:linearBytesPerRow:linearBytesPerImage:toTextureMemory:textureSlice:textureLevel:textureRegion:
finalizeTextureMemory:
initWithDouble:
initWithUnsignedInt:
mainBundle
infoDictionary
_retainColorSpace
anchorPoint
transform
sublayerTransform
anchorPointZ
zPosition
needsLayoutOnGeometryChange
_renderImageCopyFlags
runActionForKey:object:arguments:
contentsScaling
needsDisplayOnBoundsChange
modelLayer
substringFromIndex:
setTransform:
affineTransform
setPosition:
ancestorSharedWithLayer:
ignoresHitTesting
allowsHitTesting
isDoubleSided
masksToBounds
containsPoint:
mask
hitTest:
sublayers
sortsSublayers
initWithLayers:count:retain:
removeObject:
value
additive
CA_addValue:multipliedBy:
actionForLayer:forKey:
defaultActionForKey:
_implicitAnimationForLayer:keyPath:
setDefaultDuration:
setTimingFunction:
isRemovedOnCompletion
_propertyFlagsForLayer:
setBeginTimeMode:
_copyRenderAnimationForLayer:
_scheduleAnimationTimer
performSelectorOnMainThread:withObject:waitUntilDone:
_cancelAnimationTimer
beginTimeMode
applyForTime:presentationObject:modelObject:
needsDisplay
layoutIfNeeded
displayIfNeeded
shadowOpacity
cornerRadius
_continuousCorners
compositingFilter
shadowOffset
shadowRadius
shadowColor
_renderBackgroundInContext:
_renderForegroundInContext:
_renderSublayersInContext:
_renderBorderInContext:
renderInContext:
backgroundColor
edgeAntialiasingMask
contentsTransform
contentsMultiplyColor
contentsSwizzle
borderWidth
borderColor
displayLayer:
layerWillDraw:
_overrideImageFormat
drawsMipmapLevels
integerValue
drawLayer:inContext:
_previousLayoutHash
_layoutHash
_setPreviousLayoutHash:
isEqualToNumber:
animationWithKeyPath:
setToValue:
_saveCurrentLayoutHash
layoutSublayers
_validateLayoutHashHasChangedWithLayoutTime:
sizeRequisition
layoutSublayersOfLayer:
_layoutSublayersOfLayer:
initialize
cornerCurveExpansionFactor:
retainWeakReference
allowsWeakReference
CA_archivingValueForKey:
observationInfo
setObservationInfo:
setAnchorPoint:
position
setZPosition:
setAffineTransform:
setFrame:
isGeometryFlipped
setGeometryFlipped:
convertPoint:toLayer:
convertTime:fromLayer:
convertTime:toLayer:
setEdgeAntialiasingMask:
rasterizationScale
setRasterizationScale:
disableUpdateMask
setDisableUpdateMask:
securityMode
setSecurityMode:
contentsFormat
setContentsFormat:
contentsGravity
contentsGravityEnum
setContentsGravity:
setContentsScaling:
setOpacity:
setSublayers:
setMask:
unsafeUnretainedDelegate
removeFromSuperlayer
insertSublayer:atIndex:
addSublayer:
insertSublayer:below:
insertSublayer:above:
replaceSublayer:with:
actionForKey:
removeAllAnimations
animationKeys
presentationLayer
_contentsFormatDidChange:
needsLayout
preferredFrameSize
maskedCorners
setMaskedCorners:
cornerCurve
setCornerCurve:
continuousCorners
setContinuousCorners:
setAnchorPointZ:
cornerContents
setCornerContents:
setHidden:
setDoubleSided:
setOpaque:
setNeedsDisplayOnBoundsChange:
setSublayerTransform:
contentsCenter
setContentsCenter:
cornerContentsCenter
setCornerContentsCenter:
cornerContentsMasksEdges
setCornerContentsMasksEdges:
contentsContainsSubtitles
setContentsContainsSubtitles:
gain
setGain:
setBackgroundColor:
setMasksToBounds:
filters
setFilters:
backgroundFilters
setBackgroundFilters:
setCompositingFilter:
actions
setActions:
setBorderColor:
setBorderWidth:
setCornerRadius:
setContentsMultiplyColor:
setContentsSwizzle:
setShadowOpacity:
setShadowColor:
setShadowOffset:
setShadowRadius:
setShadowPath:
shadowPath
shouldRasterize
setShouldRasterize:
rasterizationPrefersDisplayCompositing
setRasterizationPrefersDisplayCompositing:
setDrawsAsynchronously:
allowsEdgeAntialiasing
setAllowsEdgeAntialiasing:
allowsGroupOpacity
setAllowsGroupOpacity:
T{CATransform3D=dddddddddddddddd}
hidden
TB,GisHidden
doubleSided
TB,GisDoubleSided
geometryFlipped
TB,GisGeometryFlipped
T@"CALayer",R
T@"CALayer",&
opaque
TB,GisOpaque
T@"<CALayerDelegate>",W
setFromValue:
isDescendantOf:
backgroundColorPhase
preloadsCache
createsCompositingGroup
allowsDisplayCompositing
wantsExtendedDynamicRangeContent
toneMapToStandardDynamicRange
allowsGroupBlending
hitTestsContentsAlphaChannel
hitTestsAsOpaque
literalContentsCenter
inheritsTiming
definesDisplayRegionOfInterest
invertsShadow
shadowPathIsBounds
instanceMethodForSelector:
hasBeenCommitted
clearHasBeenCommitted
setMeshTransform:
regionBeingDrawn
layoutIsActive
layoutBelowIfNeeded
layerBeingDrawn
layerAtTime:
addPresentationModifier:
removePresentationModifier:
presentationModifiers
setPresentationModifiers:
recursiveDescription
isFlipped
setFlipped:
setAllowsHitTesting:
setHitTestsContentsAlphaChannel:
setHitTestsAsOpaque:
setLiteralContentsCenter:
setCanDrawConcurrently:
setClearsContext:
isFrozen
setFrozen:
setNeedsLayoutOnGeometryChange:
setSortsSublayers:
flipsHorizontalAxis
setFlipsHorizontalAxis:
setInvertsShadow:
setShadowPathIsBounds:
setContentsTransform:
contentsAlignsToPixels
setContentsAlignsToPixels:
contentsDither
setContentsDither:
contentsOpaque
setContentsOpaque:
setInheritsTiming:
setPreloadsCache:
setCreatesCompositingGroup:
setAllowsDisplayCompositing:
setWantsExtendedDynamicRangeContent:
setToneMapToStandardDynamicRange:
setAllowsGroupBlending:
setBackgroundColorPhase:
setAcceleratesDrawing:
setDefinesDisplayRegionOfInterest:
motionBlurAmount
setMotionBlurAmount:
needsLayoutForKey:
CA_setterForProperty:
CA_getterForProperty:
resolveInstanceMethod:
T@"CAMeshTransform",C
frozen
TB,GisFrozen
T{CGAffineTransform=dddddd}
T@"<CALayerDelegate>"
getRendererInfo:size:
beginElement:
initWithArray:
setValue:
_value
initWithObjects:count:
getObjects:
getObjects:range:
_ivars
contextWithOptions:
remoteContextWithOptions:
server
localContextWithOptions:
serverWithOptions:
addDisplay:
displayWithUniqueId:
serverIfRunning
stopServer
removeDisplay:
removeAllDisplays
displayWithName:
displayWithDisplayId:
_detectSimDisplays
_detectDisplays
setRendererFlags:
rendererFlags
setSecure:
isSecure
secureModeViolations
insecureProcessIds
isSlotValid:
setSlotDeletionCallback:
slotDeletionCallback
clientPortOfContextId:
taskNamePortOfContextId:
contextIdHostingContextId:
isMirroringEnabled
setMirroringEnabled:
_mirroringEnabled
T@"NSArray",R
mirroringEnabled
TB,GisMirroringEnabled,V_mirroringEnabled
secure
TB,GisSecure
powerStateDidChange:
defaultCenter
addObserver:selector:name:object:
removeObserver:
initWithUUIDString:
contextIdAtPosition:excludingContextIds:
dictionaryWithObjectsAndKeys:
numberWithFloat:
addClone:options:
processInfo
isLowPowerModeEnabled
brightnessAvailable
emitBrightnessError:
supportsColorSpaces
setColorMatrix:scale:rampDuration:
abortColorMatrixRamp:scale:
canUpdateWithFlags:
finishExternalUpdate:withFlags:debugInfo:
postNotification:payload:
notificationQueue
setSDRBrightness:
setHeadroom:
setPotentialHeadroom:
setAmbient:
setFilteredAmbient:
setBrightnessLimit:
commitBrightness:
registerForNotifications:withBlock:
unregisterNotificationBlocks
setNotificationQueue:
setWhitePoint:rampDuration:error:
abortWhitePointRamp:error:
productId
vendorId
uuid
whitePointAvailable
whitePointD50XYZ
brightnessCapabilities
serviceObject
maximumHDRLuminance
setMaximumHDRLuminance:
maximumSDRLuminance
setMaximumSDRLuminance:
minimumLuminance
setMinimumLuminance:
maximumReferenceLuminance
setMaximumReferenceLuminance:
T@"NSUUID",R,N
T@"NSDictionary",R,N
commitPreset
trinityCabalConfig
setTrinityCabalConfig:
preserveAppleSRGBGammaResponse
setPreserveAppleSRGBGammaResponse:
_initWithCADisplayServer:
nativeSize
scales
setScales:
scalePreservesAspect
setScalePreservesAspect:
minimumScale
maximumScale
minimumSourceRectSize
maximumSourceRectWidth
maximumSourceRectPixels
panelPhysicalSize
panelPointsPerInch
contextIdAtPosition:
hitTestAtPosition:options:
clientPortAtPosition:
convertPoint:toContextId:
convertPoint:fromContextId:
transformFromLayerId:inContextId:
clones
addClone:
removeClone:
removeAllClones
cloneMaster
setBlanked:
isBlanked
willUnblank
setCalibrationPhase:forIdentifier:
setFlipBookEnabled:
isFlipBookEnabled
setOrientation:
orientation
setOverscanAmount:
setOverscanAmounts:
setApertureOffset:
apertureOffset
setInvertsColors:
invertsColors
setAllowsExtendedDynamicRange:
allowsExtendedDynamicRange
setGrayscale:
isGrayscale
setUserAdjustment:scale:
setContrastEnhancer:rampDuration:
abortContrastEnhancerRamp:
nits
setNits:
setAccessibilityColorMatrix:scale:
setContrast:
contrast
setMaximumBrightness:
maximumBrightness
maximumLuminance
setMinimumRefreshRate:
minimumRefreshRate
setMaximumRefreshRate:
setIdealRefreshRate:
idealRefreshRate
setUsesPreferredModeRefreshRate:
usesPreferredModeRefreshRate
setTag:
setProcessId:
setTVMode:
TVMode
setTVSignalType:
TVSignalType
setHotPlugCallback:
setBrightnessCallback:
setUpdateRequestCallback:
hotPlugCallback
brightnessCallback
updateRequestCallback
freeze
acquireFrozenSurface
setDisablesUpdates:
disablesUpdates
setDisabled:
disabled
framebufferFormat
whitepoint
chromaticities
gamma
transportType
emitWhitePointError:
canUpdate:
nextWakeupTime
vblDelta
previousVBL
beginExternalUpdate:usingSoftwareRenderer:
finishExternalUpdate:withFlags:
activateReplay
presentSurface:withOptions:
detachingDisplay
isDetaching
detachingRect
needsUpdate
supportsCursor
maximumCursorSize
cursorPosition
setCursorPosition:
cursorDictionary
setCursorDictionary:
cursorHidden
setCursorHidden:
cursorEnabled
setCursorEnabled:
tripleBuffered
minimumVisibleCursorSize
cursorSurface
setCursorSurface:
wantedToDetach
setDigitalModes:withTimings:
copyDisplayTimingsFromDisplay:
addFramePresentationTimestamp:
blendColorSpace
setBlendColorSpace:
displayColorSpace
setDisplayColorSpace:
systemGamma
setSystemGamma:
blackpointAdaptation
setBlackpointAdaptation:
setGammaAdjustment:
accessibilityFrameRateLimitEnabled
setAccessibilityFrameRateLimitEnabled:
renderForTime:
minimumFrameTime
maximumFrameTime
minimumVRRVBLDelta
maximumVRRVBLDelta
_minimumFrameTime
_maximumFrameTime
_minimumVRRVBLDelta
_maximumVRRVBLDelta
T{CGSize=dd},R
Td,R
T@"NSSet",R
T@"CAWindowServerDisplay",R
blanked
TB,GisBlanked
flipBookEnabled
TB,GisFlipBookEnabled
grayscale
TB,GisGrayscale
Tf,R
T@?,C
T^v,R
detaching
TB,R,GisDetaching
TQ,R,V_minimumFrameTime
TQ,R,V_maximumFrameTime
TQ,R,V_minimumVRRVBLDelta
TQ,R,V_maximumVRRVBLDelta
T{?=ff},R
T{?={?=ff}{?=ff}{?=ff}{?=ff}},R
T^{__IOSurface=},&
T^{CGColorSpace=},&
T{CGColorTRC=i(?={CGColorTRCParametric=ffffffff}{CGColorTRCTable=Q^f{CGColorTRCBoundaryExtension=ff}{CGColorTRCBoundaryExtension=ff}})}
unsignedIntegerValue
initWithOptions:
firstObject
allValues
optimizationOpportunities:
strokeColor
strokeStart
strokeEnd
null
addObjectsFromArray:
targetName
save
source
_source
T@"CAStateElement",&,N,V_source
resetBitMask
flushLocally
groupWithCapacity:
updatesAsynchronously
setUpdatesAsynchronously:
nextSlot
markWritten:
shmem
capacity
flushWithTransaction
_setLocalContextId:
_shmem
_capacity
_count
_localId
initWithKeyPath:initialValue:initialVelocity:additive:preferredFrameRateRangeMaximum:group:
setValue:velocity:
write
initWithKeyPath:initialValue:additive:
initWithKeyPath:initialValue:additive:group:
group
_velocity
_group
T@"CAPresentationModifierGroup",R
timingFunction
discretizesTime
setPreferredFrameRateRangeMinimum:
setPreferredFrameRateRangeMaximum:
setPreferredFrameRateRangePreferred:
preferredFrameRateRangeMinimum
preferredFrameRateRangeMaximum
preferredFrameRateRangePreferred
CA_encodesPropertyConditionally:type:
_setCARenderAnimation:layer:
removedOnCompletion
setRemovedOnCompletion:
T@"CAMediaTimingFunction",&
T@"<CAAnimationDelegate>",&
TB,GisRemovedOnCompletion
T{CAFrameRateRange=fff}
setDiscretizesTime:
isAdditive
isCumulative
valueFunction
setAdditive:
setCumulative:
setValueFunction:
cumulative
TB,GisAdditive
TB,GisCumulative
T@"CAValueFunction",&
fromValue
toValue
byValue
roundsToInteger
startAngle
endAngle
_timeFunction:
CA_roundToIntegerFromValue:
setByValue:
setRoundsToInteger:
setStartAngle:
setEndAngle:
calculationMode
values
keyTimes
timingFunctions
tensionValues
continuityValues
biasValues
rotationMode
setCalculationMode:
setKeyTimes:
setTimingFunctions:
setValues:
setPath:
setTensionValues:
setContinuityValues:
setBiasValues:
setRotationMode:
stiffness
damping
durationForEpsilon:
settlingDuration
setStiffness:
setDamping:
setInitialVelocity:
initialVelocity
targetsSuperlayer
sourcePoints
usesNormalizedCoordinates
appliesScale
appliesRotation
appliesX
appliesY
setSourcePoints:
setTargetsSuperlayer:
setUsesNormalizedCoordinates:
setAppliesX:
setAppliesY:
setAppliesScale:
setAppliesRotation:
filter
subtype
startProgress
endProgress
options
transitionFlags
setType:
setSubtype:
setStartProgress:
setEndProgress:
setFilter:
setOptions:
setTransitionFlags:
animations
setAnimations:
value:withObjCType:
fillRule
lineCap
lineJoin
lineWidth
miterLimit
lineDashPattern
lineDashPhase
setFillRule:
setStrokeColor:
setStrokeStart:
setStrokeEnd:
setLineWidth:
setMiterLimit:
setLineJoin:
setLineCap:
setLineDashPattern:
setLineDashPhase:
inheritsSecurity
preservesFlip
setContextId:
setInheritsSecurity:
rendersAsynchronously
setRendersAsynchronously:
asynchronousRenderPeriod
setAsynchronousRenderPeriod:
asynchronousRenderTimes
setAsynchronousRenderTimes:
setPreservesFlip:
asynchronousRenderMaxAPL
setAsynchronousRenderMaxAPL:
asynchronousRenderMaxAPLStrength
setAsynchronousRenderMaxAPLStrength:
_asynchronousRenderMaxAPL
_asynchronousRenderMaxAPLStrength
Tf,V_asynchronousRenderMaxAPL
Tf,V_asynchronousRenderMaxAPLStrength
instanceCount
instanceTransform
instanceDelay
instanceColor
instanceRedOffset
instanceGreenOffset
instanceBlueOffset
instanceAlphaOffset
setInstanceCount:
setInstanceDelay:
setInstanceTransform:
setInstanceColor:
setInstanceRedOffset:
setInstanceGreenOffset:
setInstanceBlueOffset:
setInstanceAlphaOffset:
initWithAPI:properties:
sharegroup
getMacroContextPrivate
setParameter:to:
fontSmoothingStyle
setFontSmoothingStyle:
_initWithContentsOfURL:type:options:error:
_initWithData:type:options:error:
_readFromCAMLURL:type:options:error:
_readFromArchiveData:options:error:
_readFromCAMLData:type:options:error:
substitutedClasses
setClass:forClassName:
initForReadingFromData:error:
_addClassSubstitutions:
finishDecoding
reason
URLByDeletingLastPathComponent
fileURLWithPath:isDirectory:
propertyListWithData:options:format:error:
allKeys
rootLayer
allowedClasses
packageWithContentsOfURL:type:options:error:
packageWithData:type:options:error:
publishedObjectNames
publishedObjectWithName:
unarchiver:cannotDecodeObjectOfClassName:originalClasses:
TB,R,GisGeometryFlipped
activateBackground:
animationDuration
setAnimationDuration:
animationTimingFunction
setAnimationTimingFunction:
disableActions
setDisableActions:
completionBlock
setCompletionBlock:
addCommitHandler:forPhase:
pushAnimator:
popAnimator
animator
setCommitHandler:
currentPhase
setPresentationHandler:queue:
activate
synchronize
animatesFromModelValues
setAnimatesFromModelValues:
disableSignPosts
setDisableSignPosts:
commitTime
setCommitTime:
updateDeadline
setUpdateDeadline:
earliestAutomaticCommitTime
setEarliestAutomaticCommitTime:
disableRunLoopObserverCommits
setDisableRunLoopObserverCommits:
defaultDisableRunLoopObserverCommits
setDefaultDisableRunLoopObserverCommits:
frameStallSkipRequest
setFrameStallSkipRequest:
startFrameWithReason:beginTime:commitDeadline:
finishFrameWithToken:
setFrameInputTime:withToken:
generateSeed
assertInactive
registerBoolKey
boolValueForKey:
setBoolValue:forKey:
committingContexts
setCommittingContexts:
setImplicitTransactionDidBeginHandler:
flushAsRunLoopObserver
completionItem
captureOnly
reducesCaptureBitDepth
ignoresScreenClip
backdropRect
zoom
marginWidth
groupNamespace
allowsInPlaceFiltering
groupName
tracksLuma
setGroupNamespace:
setUsesGlobalGroupNamespace:
usesGlobalGroupNamespace
setGroupName:
setBackdropRect:
setZoom:
setMarginWidth:
setCaptureOnly:
setAllowsInPlaceFiltering:
setReducesCaptureBitDepth:
setIgnoresScreenClip:
setTracksLuma:
disablesOccludedBackdropBlurs
setDisablesOccludedBackdropBlurs:
_disablesOccludedBackdropBlurs
TB,V_disablesOccludedBackdropBlurs
T@"<CABackdropLayerDelegate><CALayerDelegate>",W,D
backdropLayer:didChangeLuma:
offset
sharpness
invertsShape
setInvertsShape:
setSharpness:
behaviorWithType:
behaviorTypes
initWithData:
encodeObject:conditionally:
_writeElementTree:
T@"<CAMLWriterDelegate>",W
allObjects
compare:
sortedArrayUsingSelector:
base64EncodedStringWithOptions:
relativePath
isFileURL
pathComponents
subarrayWithRange:
pathWithComponents:
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
numberWithChar:
numberWithShort:
numberWithUnsignedShort:
numberWithUnsignedLong:
numberWithLongLong:
numberWithUnsignedLongLong:
CA_shouldArchiveValueForKey:ofObject:
CA_CAMLPropertyForKey:
raise:format:arguments:
willSuspend:
willUnsuspend:
hasPrefix:
setScanLocation:
scanInt:
scanLocation
replaceObjectAtIndex:withObject:
initWithOptions:localContext:
initRemoteWithOptions:
colorSpace
commitPriority
level
allContexts
currentContext
localContext
remoteContext
setClientPort:
objectForSlot:
setColorSpace:
setCommitPriority:
colorMatchUntaggedContent
setColorMatchUntaggedContent:
setLayer:
payload
setPayload:
orderAbove:
orderBelow:
setDesiredDynamicRange:
desiredDynamicRange
valid
waitForRenderingWithTimeout:
addFence:
addFence:completionHandler:
createFencePort
setFencePort:
setFencePort:commitHandler:
setFence:count:
invalidateFences
createSlot
createImageSlot:hasAlpha:
createImageSlot:hasAlpha:extendedColors:
deleteSlot:
setObject:forSlot:
transferSlot:toContextWithId:
hitTestContext:
annotation
setAnnotation:
renderContext
retainRenderContext
requestClientGlitch:
requestServerGlitch:
T@"NSDictionary",R
_proxy
colors
locations
startPoint
endPoint
colorMap
interpolations
setColors:
setLocations:
setStartPoint:
setEndPoint:
setInterpolations:
setColorMap:
unarchivedObjectOfClass:fromData:error:
setUuid:
setMode:
mode
setLatencies:
setPreferredModes:
setVersion:
archivedDataWithRootObject:requiringSecureCoding:error:
supportedClasses
sharedInstance
setLatency:forUUID:andMode:
latencyForUUID:andMode:
setPreferredMode:forUUID:
preferredModeForUUID:
version
latencies
preferredModes
_version
_latencies
_preferredModes
T@"NSString",C,N,V_version
T@"NSMutableArray",&,N,V_latencies
T@"NSMutableArray",&,N,V_preferredModes
_uuid
_latency
T@"NSString",C,N,V_uuid
T@"NSDictionary",C,N,V_mode
Td,N,V_latency
objectForInfoDictionaryKey:
_applyTransition:layer:undo:speed:
_nextStateTimer:
timerWithTimeInterval:target:selector:userInfo:repeats:
mainRunLoop
addTimer:forMode:
stateController:didSetStateOfLayer:
setState:ofLayer:transitionSpeed:
setInitialStatesOfLayer:transitionSpeed:
setCAStateControllerTransition:
_applyTransitionElement:layer:undo:speed:
stateController:transitionDidStart:speed:
_addAnimation:forKey:target:undo:
stateOfLayer:
setState:ofLayer:
setInitialStatesOfLayer:
removeAllStateChanges
restoreStateChanges:
cancelTimers
T@"NSObject<CAStateControllerDelegate>",W
_initWithOptions:
_initWithMTLTexture:options:
_initWithEAGLContext:options:
endFrame
rendererWithMTLTexture:options:
rendererWithEAGLContext:options:
beginFrameAtTime:timeStamp:
updateBounds
addUpdateRect:
nextFrameTime
hasMissingContent
render
setContext:
T@"CAContext",&
T@"<CARendererDelegate>",W
rendererDidChange:
cStringUsingEncoding:
@24@0:8@16
B16@0:8
B24@0:8#16
v24@0:8@16
^v36@0:8^v16I24^I28
v16@0:8
B20@0:8I16
I20@0:8I16
B32@0:8@16@24
@16@0:8
f16@0:8
v20@0:8f16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
d16@0:8
v24@0:8d16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
v20@0:8B16
I16@0:8
v20@0:8I16
v24@0:8^{CGPath=}16
r^{CGPath=}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CATransform3D=dddddddddddddddd}16@0:8
@144@0:8{CATransform3D=dddddddddddddddd}16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8@16B24
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
v32@0:8@16@24
@"CAStateController"
@"CALayer"
@"CAStateTransition"
@"NSString"
@"NSMutableArray"
@24@0:8^v16
^v16@0:8
q16@0:8
i16@0:8
@32@0:8@16:24
v24@0:8q16
v28@0:8{CAFrameRateRange=fff}16
{CAFrameRateRange=fff}16@0:8
v32@0:8r^I16Q24
@40@0:8@16@24:32
d24@0:8d16
v24@0:8@?16
@32@0:8{Mode=(?={?=b14b14b1b24b1b5b2b1b1}Q)}16@24
{Mode=(?={?=b14b14b1b24b1b5b2b1b1}Q)}16@0:8
v32@0:8Q16Q24
^{CADisplayModePriv={Mode=(?={?=b14b14b1b24b1b5b2b1b1}Q)}@QQI}
@56@0:8{EDIDAttributes=iiiiBIIIII}16
{EDIDAttributes="dolbyVision"i"pqEOTF"i"bt2020YCC"i"hdrStaticMetadataType1"i"legacyHDMI"B"product_id"I"manufacturer_id"I"week_of_manufacture"I"year_of_manufacture"I"serial_number"I}
@"CADisplayMode"
@24@0:8^{_NSZone=}16
@24@0:8B16i20
^{CADisplayPreferencesPriv=Bi}
^{CADisplayModeCriteriaPriv={CGSize=dd}di}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSArray"
@"NSDictionary"
(?="point"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}"rect"{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}"transform"{CATransform3D="m11"d"m12"d"m13"d"m14"d"m21"d"m22"d"m23"d"m24"d"m31"d"m32"d"m33"d"m34"d"m41"d"m42"d"m43"d"m44"d}"point3d"{CAPoint3D="x"d"y"d"z"d}"color_matrix"{CAColorMatrix="m11"f"m12"f"m13"f"m14"f"m15"f"m21"f"m22"f"m23"f"m24"f"m25"f"m31"f"m32"f"m33"f"m34"f"m35"f"m41"f"m42"f"m43"f"m44"f"m45"f}"affine_transform"{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d})
^{CGColor=}
^{CGImage=}
^{CGPattern=}
@24@0:8r^{CGPathElement=i^{CGPoint}}16
[3{CGPoint="x"d"y"d}]
^{CGPath=}
^{__IOSurface=}
@32@0:8@16@24
v40@0:8@16@24@32
@32@0:8@"NSKeyedArchiver"16@24
v32@0:8@"NSKeyedArchiver"16@24
v40@0:8@"NSKeyedArchiver"16@24@32
v24@0:8@"NSKeyedArchiver"16
@"NSString"32@0:8@"CAMLWriter"16@24
@"NSURL"32@0:8@"CAMLWriter"16@24
B32@0:8@"CAMLWriter"16@24
v36@0:8@16@24B32
v40@0:8r^d16Q24@32
B40@0:8^d16Q24@32
v24@0:8@"CAStateElement"16
v24@0:8@"CALayer"16
@"CAStateControllerUndo"
@"CAState"
B32@0:8r*16Q24
@28@0:8@16B24
^{_CAMLParserData=}
^{Object=^^?{Atomic={?=i}}I}16@0:8
@56@0:8Q16r^{CAMeshVertex={CGPoint=dd}{CAPoint3D=ddd}}24Q32r^{CAMeshFace=[4I][4f]}40@48
{CAMeshVertex={CGPoint=dd}{CAPoint3D=ddd}}24@0:8Q16
{CAMeshFace=[4I][4f]}24@0:8Q16
@24@0:8q16
@20@0:8i16
@28@0:8@16f24
@48@0:8@16@24@32r^{ValueInterpolator=ddddddddddddddB}40
d24@0:8@16
v20@0:8i16
v64@0:8Q16{CAMeshVertex={CGPoint=dd}{CAPoint3D=ddd}}24
v56@0:8{CAMeshVertex={CGPoint=dd}{CAPoint3D=ddd}}16
v24@0:8Q16
v56@0:8Q16{CAMeshFace=[4I][4f]}24
v48@0:8{CAMeshFace=[4I][4f]}16
B32@0:8r^d16^d24
B48@0:8r^d16^d24^?32^v40
@32@0:8f16f20f24f28
v24@0:8^d16
v32@0:8Q16[2f]24
^{CAMediaTimingFunctionPrivate=[2f][2f]}
f20@0:8f16
^{Object=^^?{Atomic={?=i}}I}24@0:8^{CGColorSpace=}16
Q24@0:8[20d]16
v60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48@52
v52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48
B52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48
^{CGColor=}16@0:8
v24@0:8^{CGColor=}16
{CAColorMatrix=ffffffffffffffffffff}16@0:8
@96@0:8{CAColorMatrix=ffffffffffffffffffff}16
^{__CTTypesetter=}16@0:8
^{__CTLine=}16@0:8
v32@0:8^?16^v24
v40@0:8^?16^v24^B32
v48@0:8^{__CTLine=}16^{CGContext=}24{CGPoint=dd}32
v24@0:8^{CGContext=}16
r^v16@0:8
v24@0:8^v16
^{CATextLayerPrivate=}
v28@0:8@16I24
v40@0:8{CGPoint=dd}16@32
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
v24@0:8@"NSString"16
[2^v]
@"NSArray"16@0:8
@"CAAnimation"
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
^{_EAGLWindowObject=^?^?^?}16@0:8
^{_CAEAGLNativeWindow={_EAGLWindowObject=^?^?^?}^{CAEAGLBuffer}IQ{Atomic={?=i}}{Atomic={?=i}}{SpinLock={?=i}}^{_CAImageQueue}@dd^{x_list_struct}I^{CAEAGLBuffer}^{CAEAGLBuffer}III^{CAEAGLBuffer}@{Atomic={?=i}}Qb1b1b1b1}
@36@0:8^{CGImage=}16^{CGColor=}24I32
@32@0:8^{CGImage=}16^{CGColor=}24
@24@0:8^{CABackingStore=}16
^{CGImage=}16@0:8
v24@0:8^{CGImage=}16
{CAPoint3D=ddd}16@0:8
@40@0:8{CAPoint3D=ddd}16
@24@0:8I16B20
@20@0:8I16
@28@0:8I16Q20
{Mutex="_m"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
{SpinLock="_l"{?="x"i}}
v40@0:8{CAFrameRateRange=fff}16{CAFrameRateRange=fff}28
{CAFrameIntervalRange=III}16@0:8
r^I24@0:8^I16
@"NSTimer"
@"<MTLTexture>"16@0:8
@"CAMetalLayer"16@0:8
v24@0:8@?<v@?@"<MTLDrawable>">16
@32@0:8^{_CAMetalDrawablePrivate={Atomic={?=i}}IIIQQQ^{_CAMetalLayerPrivate}^{__IOSurface}@@^{CGColorSpace}Cb1b1b1b1b1b1}16@24
^{_CAMetalDrawablePrivate={Atomic={?=i}}IIIQQQ^{_CAMetalLayerPrivate}^{__IOSurface}@@^{CGColorSpace}Cb1b1b1b1b1b1}16@0:8
^{_CAMetalDrawablePrivate={Atomic={?=i}}IIIQQQ^{_CAMetalLayerPrivate}^{__IOSurface}@@^{CGColorSpace}Cb1b1b1b1b1b1}
@"<MTLTexture>"
@"CAMetalLayer"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"IOSurfaceSharedEvent"
^{CGColorSpace=}16@0:8
v24@0:8^{CGColorSpace=}16
v28@0:8^{CGColorSpace=}16B24
v24@0:8^{CALinearMaskContext=}16
v144@0:8{CATransform3D=dddddddddddddddd}16
{CGAffineTransform=dddddd}16@0:8
v64@0:8{CGAffineTransform=dddddd}16
{CGPoint=dd}40@0:8{CGPoint=dd}16@32
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
d32@0:8d16@24
@32@0:8{CGPoint=dd}16
B32@0:8{CGPoint=dd}16
{_CALayerIvars="refcount"i"magic"I"layer"^v"_objc_observation_info"^v}
@24@0:8d16
^?24@0:8r^{_CAPropertyInfo=Ib16b16[2:]*^{__CFString}}16
B32@0:8^{_CARenderRendererInfo=iII}16Q24
v40@0:8@"NSString"16@24@"NSDictionary"32
@36@0:8^@16Q24B32
@24@0:8Q16
v24@0:8^@16
v40@0:8^@16{_NSRange=QQ}24
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
{_CALayerArrayIvars="layers"^@"count"Q"capacity"Q"mutations"Q"retained"B}
@?16@0:8
^{CAWindowServerImpl=^{__CFArray}^{__SFBConnection}I@?}
B24@0:8^@16
v32@0:8@16@?24
B40@0:8^{?=[9f]}16d24^@32
B32@0:8^{?=[9f]}16^@24
v32@0:8@"NSArray"16@?<v@?@@"NSDictionary">24
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"NSUUID"16@0:8
I32@0:8{CGPoint=dd}16
I40@0:8{CGPoint=dd}16@32
@40@0:8{CGPoint=dd}16@32
{CGPoint=dd}36@0:8{CGPoint=dd}16I32
{CATransform3D=dddddddddddddddd}28@0:8Q16I24
v24@0:8I16I20
v36@0:8^f16f24d28
v32@0:8^f16^f24
v28@0:8^f16f24
v28@0:8f16d20
v24@0:8^f16
^{__IOSurface=}16@0:8
{?=ff}16@0:8
{?={?=ff}{?=ff}{?=ff}{?=ff}}16@0:8
B20@0:8B16
v28@0:8^v16B24
B28@0:8^v16I24
B36@0:8^v16I24Q28
v32@0:8^{__IOSurface=}16@24
v24@0:8^{__IOSurface=}16
{CGColorTRC=i(?={CGColorTRCParametric=ffffffff}{CGColorTRCTable=Q^f{CGColorTRCBoundaryExtension=ff}{CGColorTRCBoundaryExtension=ff}})}16@0:8
v56@0:8{CGColorTRC=i(?={CGColorTRCParametric=ffffffff}{CGColorTRCTable=Q^f{CGColorTRCBoundaryExtension=ff}{CGColorTRCBoundaryExtension=ff}})}16
v24@0:8[3{CGColorTRC=i(?={CGColorTRCParametric=ffffffff}{CGColorTRCTable=Q^f{CGColorTRCBoundaryExtension=ff}{CGColorTRCBoundaryExtension=ff}})}]16
^{CAWindowServerDisplayImpl={Mutex={_opaque_pthread_mutex_t=q[56c]}}^{Server}{CABrightnessTransaction=ffffffI}@@B}
@20@0:8B16
@"CAStateElement"
@36@0:8@16@24B32
@44@0:8@16@24B32@36
@56@0:8@16@24@32B40i44@48
B24@0:8I16i20
B32@0:8^v16@24
I24@0:8@16
v40@0:8d16@24@32
^v24@0:8@16
@28@0:8@16i24
@48@0:8@16@24@32^@40
v40@0:8@16@24^@32
v48@0:8@16@24@32^@40
#40@0:8@16@24@32
#32@0:8@16@24
^{_CAPackageData=@@@BB@@}
B28@0:8@?16i24
v32@0:8@?16@24
I36@0:8i16d20d28
v28@0:8d16I24
v24@0:8B16I20
v24@0:8^{_CAMLWriterElement=^{_CAMLWriterElement}^{_CAMLWriterElement}^{_CAMLWriterElement}^^{_CAMLWriterElement}^v^{__CFString}^{_CAMLWriterAttribute}^^{_CAMLWriterAttribute}^{__CFString}I}16
^{_CAMLWriterPriv=^{__CFData}^{__CFURL}@^{_CAMLWriterElement}^{__CFString}^{__CFSet}ib1b1b1b1}
B24@0:8d16
B32@0:8@16@?24
v28@0:8I16@?20
I36@0:8{CGSize=dd}16B32
I40@0:8{CGSize=dd}16B32B36
v40@0:8d16@24{Mode=(?={?=b14b14b1b24b1b5b2b1b1}Q)}32
d32@0:8@16{Mode=(?={?=b14b14b1b24b1b5b2b1b1}Q)}24
v32@0:8{Mode=(?={?=b14b14b1b24b1b5b2b1b1}Q)}16@24
{Mode=(?={?=b14b14b1b24b1b5b2b1b1}Q)}24@0:8@16
v36@0:8@16@24f32
v28@0:8@16f24
v48@0:8@16@24@32@40
v44@0:8@16@24@32f40
^{_CAStateControllerData=@^{__CFDictionary}@@}
v32@0:8d16^{?=IiqQdq{CVSMPTETime=ssIIIssss}QQ}24
:44t4e5
gflr
cfmr
contentsCenter
Mb@?
Mb`?+
ffffff
MbP?
?UUUUUU
ffffff
@ffffff
@ffffff
 L@|
333333
?UUUUUU
@+0du
@Y>)F
?UUUUUU
(\/@ffffff
MbP?
?UUUUUU
<44t4e5
es-8R
?^8U)zj
`ff&@
Mbp?
ffffff
ffffff
Xniu
ffffff
?ffffff
y?xwwwww
Mb@A
;Z*+
t%6?Z*+@o
5@6L
@ff&@
K333?
L>33s?
 =Q1~
Q1~:z
?333@33
~?333
tZ:h=
.M;R
NAUU
G.AA
=xyzw
$$''**
--322222
!&),/=B
GR]c
0CVVVV`!s
$$$$$$
$$$$$
-0---BB
-0:BBB=E
-:B--0
 '2/1A
!$3'*-0
%%6:%<
uwy{}
???3??A9
""((
""(((((((((""(
((&"
 $"1&FF/A?GFF
hFFFF}
hhhh
?:::E/
66&66.
 D$.&(*,02
:>DBFHJNR
$+3<EPYc
$*06=D
,**.**262
'Db
-D^w
))))CEGIK
NRFFU[~
%4Pk
(2<R^lo
!$&)+-/13579;=?ACEGIK
/135
>AKQ+$$19
>AFKYa}
prpr
2222
2222gk
FNV`pz
!)19CKS[clu|
!258;L\lo
">ehkn
@(#)PROGRAM:QuartzCore  PROJECT:QuartzCore-964.15
33333!
vH7B
W4vC
9Y>)F$
MbP?-C
]r2<
 9^;Q
ARGB
555Lyuv2svuy
800A800LABGR
AhGRAfGR
80AL
1555r46l
h00Lf00L61C2h0C2
r01lk01Rr03wa04w8a3b
)c|@
='F=<
{V>3+
veTD6* 
udSD6* 
ucSD6* 
tcRC6*
sbRC5)
raQB4)
p`PA4(
~n^N@3'
{k[L>1&
vgXI;/%
qbTF9-#
xj\OB5+!
|pcVI=2(
|rf[OC8.$
xpf\RG=2)!
~{vqjc[RH?6-$
vuutsrpnkgb\VOG?7/' 
edccba`^[XTOIC=6/(!
TSSRRQPNLIFB=82-'!
DDDCCBA@>;952.)$ 
666654431/-+($!
****))('&%#!

uX='
|eL5"
ueR>+
mljgaXL>/!
LKJHC=5+!
00/-+'"
\YO;"
CM4
X2Nd
lnw-L]7L
rKUT\
ofyxf
u<&`Pb
<ok`
sI1O_
VCids~
azpG|im
jmm>L\
Vk/I
K&cq
8*=Ks
vxxm
ovav*
kW]l
<Tmg
5TcI
qg}U
6v_{
'upMt
cS5v
_m`c
pFZk_
2rqpb6iH
Wj_U
;l}]
pq`#
z5SnH
WwGy
i^ztp
pydy
Zz6x
_Xr'sLZO
d8P~
DiP}A
h{+0&
\rO}
R~7|
5~m|
+_w/
Wn0[
}jxne
MwFQ
}iyq
&|\s
S}JrT8`RjguZDs
HWj\
bDA0|O
PuCM
:_H2
Nz(W9
p5wT
eHsi
gN[w
qc|G^l}GH
Akhv
|5Zd
nC0<
zt<>
IKH\o
~mKM
uNh=Zh
|BloS
]x;[
s5uyG
c>J{rw
Oa75v
pFx~j yU
WlH]
d\sY&
II;&
LHjvw
s|!
[3"Af
[|,yV
_25iO
d}R1>
U[q|
XsoX
VQZZrdn
sSSA
?p989
Ojb]
&M^\
ZYx6
>v0A
EDxh
m[>k
*v4?C
^8zG
|k)Q
PoSro
{ {nom
kV\h
q;hsu_
fUk{
aC'@
tvCF
oeBI<
{P]8
=aoM{f
KTX 11
~}|{zyxwutsrqponmljihgfedcba`_^\[ZYXWVUTSRQPONMLKJIHHGFEDCBA@?>==<;:9887654332100/.--,++*)(('&&%$$##"!!  

CM4
X2Nd
lnw-L]7L
rKUT\
ofyxf
u<&`Pb
<ok`
sI1O_
VCids~
azpG|im
jmm>L\
Vk/I
K&cq
8*=Ks
vxxm
ovav*
kW]l
<Tmg
5TcI
qg}U
6v_{
'upMt
cS5v
_m`c
pFZk_
2rqpb6iH
Wj_U
;l}]
pq`#
z5SnH
WwGy
i^ztp
pydy
Zz6x
_Xr'sLZO
d8P~
DiP}A
h{+0&
\rO}
R~7|
5~m|
+_w/
Wn0[
}jxne
MwFQ
}iyq
&|\s
S}JrT8`RjguZDs
HWj\
bDA0|O
PuCM
:_H2
Nz(W9
p5wT
eHsi
gN[w
qc|G^l}GH
Akhv
|5Zd
nC0<
zt<>
IKH\o
~mKM
uNh=Zh
|BloS
]x;[
s5uyG
c>J{rw
Oa75v
pFx~j yU
WlH]
d\sY&
II;&
LHjvw
s|!
[3"Af
[|,yV
_25iO
d}R1>
U[q|
XsoX
VQZZrdn
sSSA
?p989
Ojb]
&M^\
ZYx6
>v0A
EDxh
m[>k
*v4?C
^8zG
|k)Q
PoSro
{ {nom
kV\h
q;hsu_
fUk{
aC'@
tvCF
oeBI<
{P]8
=aoM{f
DDDD
lowp vec4 mixLin(lowp vec4 D, lowp vec4 S, lowp vec4 M) {
  D.rgb = D.rgb / max(D.a, .005);
  D.rgb = D.rgb*D.rgb;
  S.rgb = S.rgb / max(S.a, .005);
  S.rgb = S.rgb*S.rgb;
  lowp vec4 R = mix(D, S, M);
  R.rgb = sqrt(max(R.rgb, 0.))*R.a;
  return R;
lowp vec4 vibrantLightenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = 1. - dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorDodge(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  R.rgb += mix(S.aaa, D.rgb*S.a*S.a/max(S.a - S.rgb, .005),
               step(.005, S.a - S.rgb));
  R.a += D.a*S.a;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantDark(lowp vec4 s0, lowp vec4 d0) {
  return vibrantLightenSover(s0 * blend_color1,
                             vibrantColorDodge(s0 * blend_color0, d0));
lowp vec4 vibrantDarkReversed(lowp vec4 s0, lowp vec4 d0) {
  return vibrantColorDodge(s0 * blend_color0,
                           vibrantLightenSover(s0 * blend_color1, d0));
lowp vec4 vibrantDarkenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorBurn(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  lowp float dasa = D.a*S.a;
  R.rgb += step(.005, S.rgb)
           * (dasa - S.a*S.a*(D.a - D.rgb)/max(S.rgb, .005));
  R.a += dasa;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantLight(lowp vec4 s0, lowp vec4 d0) {
  return vibrantDarkenSover(s0 * blend_color1,
                            vibrantColorBurn(s0 * blend_color0, d0));
lowp vec4 vibrantLightReversed(lowp vec4 s0, lowp vec4 d0) {
  return vibrantColorBurn(s0 * blend_color0,
                          vibrantDarkenSover(s0 * blend_color1, d0));
lowp vec3 colorSort(lowp vec3 c) {
  lowp vec3 cs = (c.r > c.g) ? c : c.grb;
  cs = (cs.g > cs.b) ? cs : cs.rbg;
  cs = (cs.r > cs.g) ? cs : cs.grb;
  return cs;
lowp float lum(lowp vec3 c) {
  return dot(c, vec3(0.3, 0.59, 0.11));
lowp vec3 clipColor(lowp vec3 c) {
  lowp float l = lum(c);
  lowp vec3 cs = colorSort(c);
  c = cs.b < 0.0 ? l + (c - l) * (l / (l - cs.b)) : c;
  c = cs.r > 1.0 ? l + (c - l) * ((1.0 - l) / (cs.r - l)) : c;
  return c;
lowp vec3 setLum(lowp vec3 c, lowp float l) {
  lowp float d = l - lum(c);
  return clipColor(c + d);
lowp float sat(lowp vec3 c) {
  lowp vec3 cs = colorSort(c);
  return cs.r - cs.b;
lowp vec3 setSat(lowp vec3 c, lowp float s) {
  lowp vec3 cs = colorSort(c);
  lowp vec3 fmax = cs.r == c.r ? vec3(1.,0.,0.) :    cs.r == c.g ? vec3(0.,1.,0.) : vec3(0.,0.,1.);
  c = c - fmax * c;
  lowp vec3 fmid = cs.g == c.r ? vec3(1.,0.,0.) :    cs.g == c.g ? vec3(0.,1.,0.) : vec3(0.,0.,1.);
  c = cs.r > cs.b ? fmax * s + fmid * ((cs.g - cs.b) * s / (cs.r - cs.b)) :    vec3(0.0);
  return c;
lowp vec4 colorMatrix4x4Bias(lowp vec4 s) {
  s.rgb = s.rgb / max(s.a, .005);
  s = s.r * color_matrix[0] + s.g * color_matrix[1]
    + s.b * color_matrix[2] + s.a * color_matrix[3]
    + color_matrix[4];
  s.rgb = s.rgb * s.a;
  return s;
lowp vec4 colorMatrix4x4BiasDivideAlpha(lowp vec4 s) {
  s = vec4(s.rgb / s.a, 1.0);
  s = s.r * color_matrix[0] + s.g * color_matrix[1]
    + s.b * color_matrix[2] + color_matrix[3]
    + color_matrix[4];
  s.rgb = s.rgb * s.a;
  return s;
lowp vec4 perlinBias(lowp vec4 s, lowp float a) {
  s.rgb = s.rgb / (a * (s.a - s.rgb) + s.a);
  return s;
lowp vec4 vibrantLightenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = 1. - dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorDodge(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  R.rgb += mix(S.aaa, D.rgb*S.a*S.a/max(S.a - S.rgb, .005),
               step(.005, S.a - S.rgb));
  R.a += D.a*S.a;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantDark(lowp vec4 s0, lowp vec4 d0) {
  if (reversed != 0.0)
    return vibrantColorDodge(s0 * color_dodge,
                               vibrantLightenSover(s0 * color_lighten, d0));
  else
    return vibrantLightenSover(s0 * color_lighten,
                               vibrantColorDodge(s0 * color_dodge, d0));
lowp vec4 vibrantDarkenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorBurn(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  lowp float dasa = D.a*S.a;
  R.rgb += step(.005, S.rgb)
           * (dasa - S.a*S.a*(D.a - D.rgb)/max(S.rgb, .005));
  R.a += dasa;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantLight(lowp vec4 s0, lowp vec4 d0) {
  if (reversed != 0.0)
    return vibrantColorBurn(s0 * color_burn,
                              vibrantDarkenSover(s0 * color_darken, d0));
  else
    return vibrantDarkenSover(s0 * color_darken,
                              vibrantColorBurn(s0 * color_burn, d0));
lowp vec4 luminanceCurve(lowp vec4 s0, lowp vec4 p, lowp float a) {
  lowp float x = dot(s0.rgb, vec3(.2125, .7154, .0721));
  x = clamp((((p.x * x) + p.y) * x + p.z) * x + p.w, 0.0, 1.0);
  return vec4(mix (s0.rgb, vec3 (x, x, x), a), s0.a);
lowp vec4 colorCurves(lowp vec4 s) {
  lowp float inv_a = 1.0 / max(s.a, 0.005);
  s.rgb *= inv_a;
  lowp vec4 r = (((curves[0] * s) + curves[1]) * s + curves[2]) * s + curves[3];  r.a = clamp(r.a, 0., 1.);
  return vec4 (r.rgb * r.a, r.a);
lowp vec4 darkenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 lightenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = 1. - dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
void main () {
  lowp vec4 q0, q1, q2, q3;
  mediump vec4 acc;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  acc = q0 * weight.x;
  acc = q1 * weight.y + acc;
  acc = q2 * weight.z + acc;
  acc = q3 * weight.w + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec3 weight;
varying highp vec2 texcoord0, texcoord1, texcoord2;
varying highp vec2 texcoord3, texcoord4, texcoord5;
void main () {
  lowp vec4 q0, q1, q2, q3, q4, q5;
  mediump vec4 acc;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  acc = (q2 + q3) * weight.x;
  acc = (q1 + q4) * weight.y + acc;
  acc = (q0 + q5) * weight.z + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform highp vec4 texmat0;
uniform highp vec2 axis;
varying highp vec2 texcoord0;
void main () {
  highp vec2 d = texcoord0;
  highp vec2 c = mix(d, floor(d), axis);
  highp float x = dot(floor(d) - d, axis) + 1.0;
  highp float y = 1.0 - x;
  highp vec4 xy = vec4(x, y, x, y);
  highp vec4 w = vec4(-0.29216512, -0.41086841, -0.41086841, -0.29216512);
  w = w*xy + vec4(1.02524562, 0.78286595, 0.78286595, 1.02524562);
  w = w*xy + vec4(-0.52422910, 1.04059357, 1.04059357, -0.52422910);
  w = w*xy + vec4(-0.20885140, -2.41189213, -2.41189213, -0.20885140);
  w = w*xy*xy + vec4(0.0, 1.0, 1.0, 0.0);
  mediump vec4 weight = w;
  highp vec2 p = c * texmat0.xy + texmat0.zw;
  highp vec2 pdelta = axis * texmat0.xy;
  lowp vec4 q0, q1, q2, q3;
  mediump vec4 acc;
  q0 = texture2DRect(texture0, p - 0.5*pdelta);
  q1 = texture2DRect(texture0, p + 0.5*pdelta);
  q2 = texture2DRect(texture0, p + 1.5*pdelta);
  q3 = texture2DRect(texture0, p + 2.5*pdelta);
  acc = q0 * weight.x;
  acc = q1 * weight.y + acc;
  acc = q2 * weight.z + acc;
  acc = q3 * weight.w + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6;
void main() {
  lowp vec4 q0, q1, q2, q3, q4, q5, q6;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  mediump vec4 acc;
  acc = q3 * weight.x;
  acc = q2 * weight.y + acc;
  acc = q4 * weight.y + acc;
  acc = q1 * weight.z + acc;
  acc = q5 * weight.z + acc;
  acc = q0 * weight.w + acc;
  acc = q6 * weight.w + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12;
void main() {
  lowp vec4 q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  q12 = texture2DRect(texture0, texcoord12);
  mediump vec4 acc;
  acc = q6 * weight[0].x;
  acc = q5 * weight[0].y + acc;
  acc = q7 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q8 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q9 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q10 * weight[1].x + acc;
  acc = q1 * weight[1].y + acc;
  acc = q11 * weight[1].y + acc;
  acc = q0 * weight[1].z + acc;
  acc = q12 * weight[1].z + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q5, q6, q7, q8;
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q4, q5, q6, q7, q8, q9;
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q3, q4, q5, q6, q7, q8, q9, q10;
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q2, q3, q4, q5, q6, q7, q8, q9, q10, q11;
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q11 * weight[1].x + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12;
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  q12 = texture2DRect(texture0, texcoord12);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q11 * weight[1].x + acc;
  acc = q1 * weight[1].y + acc;
  acc = q12 * weight[1].y + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  q12 = texture2DRect(texture0, texcoord12);
  q13 = texture2DRect(texture0, texcoord13);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q11 * weight[1].x + acc;
  acc = q1 * weight[1].y + acc;
  acc = q12 * weight[1].y + acc;
  acc = q0 * weight[1].z + acc;
  acc = q13 * weight[1].z + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform highp vec2 minmax;
uniform lowp vec4 bgcolor;
varying highp vec2 texcoord0_0;
varying lowp vec4 color;
void main() {
  lowp vec4 p = texture2DRect(texture0, texcoord0_0);
  p = texcoord0_0.x < minmax.x || texcoord0_0.x > minmax.y ? bgcolor : p;
  gl_FragData[0] = p * color;
uniform lowp sampler2DRect texture0;
uniform lowp sampler2D texture1;
uniform highp vec2 minmax;
uniform lowp vec4 bgcolor;
uniform highp vec4 map;
varying highp vec2 texcoord0_0;
varying lowp vec4 color;
void main() {
  highp float t = dot(texcoord0_0, texcoord0_0);
  t = t * inversesqrt(t + 1e-6) * map.x + map.y;
  lowp vec4 p = texture2DRect(texture0, vec2(min(t, map.w), map.z));
  lowp vec3 n = texture2D(texture1, gl_FragCoord.xy * (1.0/32.0)).rgb;
  p.rgb += (n - .5) * 2.0/255.0 * p.a;
  p = t < minmax.x || t > minmax.y ? bgcolor : p;
  gl_FragData[0] = p * color;
uniform lowp sampler2DRect texture0;
uniform lowp sampler2D texture1;
uniform highp vec4 minmax_dir;
uniform lowp vec4 bgcolor;
uniform highp vec4 map;
uniform highp vec4 args;
varying highp vec2 texcoord0_0;
varying lowp vec4 color;
void main() {
  highp vec2 minmax = minmax_dir.xy;
  highp vec2 dir = minmax_dir.zw;
  highp float frag_l_sq = dot(texcoord0_0, texcoord0_0);
  highp float r = args.x;
  highp float r_sq = r * r;
  highp float r_sgn = args.y;
  highp float dir_l = args.z;
  highp float dir_l_sq = dir_l * dir_l;
  highp float t_denom = args.w;
  highp float par_l = dot(texcoord0_0, dir);
  highp float t;
  highp float in_b;
  if (map.w != 0.0) {
    t = (frag_l_sq - r_sq) / (2.0 * (r + par_l));
    in_b = step(minmax.x, t) - step(minmax.y, t);
    in_b *= step(-r_sgn * r, r_sgn * t);
  } else {
    highp float perp_l_sq = frag_l_sq - par_l * par_l;
    highp float d = frag_l_sq + dir_l_sq * (r_sq - perp_l_sq) +                    2.0 * par_l * dir_l * r;
    highp float d_m = step(0.0, d);
    highp float sqrt_d = sqrt(d * d_m);
    highp float b = par_l * dir_l + r;
    highp float t1 = (b - sqrt_d) * t_denom;
    highp float t2 = (b + sqrt_d) * t_denom;
    highp float t1_v = step(minmax.x, t1) - step(minmax.y, t1);
    highp float t2_v = step(minmax.x, t2) - step(minmax.y, t2);
    t1_v *= step(-r_sgn * r, r_sgn * t1);
    t2_v *= step(-r_sgn * r, r_sgn * t2);
    in_b = step(0.5, t1_v + t2_v) * d_m;
    t = mix(t1 * t1_v + t2 * t2_v, max(t1, t2), step(1.5, t1_v + t2_v));
  t = clamp(t, 0.0, 1.0) * map.x + map.y;
  lowp vec4 p = texture2DRect(texture0, vec2(t, map.z));
  lowp vec3 n = texture2D(texture1, gl_FragCoord.xy * (1.0/32.0)).rgb;
  p.rgb += (n - .5) * 2.0/255.0 * p.a;
  gl_FragData[0] = mix(bgcolor, p, in_b) * color;
uniform lowp sampler2DRect texture0;
uniform lowp sampler2D texture1;
uniform highp vec4 map;
varying highp vec2 texcoord0_0;
varying lowp vec4 color;
void main() {
  highp float t = atan(texcoord0_0.y, texcoord0_0.x) * -0.1591549431 + 0.5;
  t = t * map.x + map.y;
  lowp vec4 p = texture2DRect(texture0, vec2(min(t, map.w), map.z));
  lowp vec3 n = texture2D(texture1, gl_FragCoord.xy * (1.0/32.0)).rgb;
  p.rgb += (n - .5) * 2.0/255.0 * p.a;
  gl_FragData[0] = p * color;
lowp vec2 radialCoord(highp vec2 uv) {
  highp float t = dot(uv, uv) + 1e-6;
  return vec2(t * inversesqrt(t), .5);
lowp vec2 conicCoord(highp vec2 uv) {
  highp float t = atan(uv.y, uv.x) * -0.1591549431 + 0.5;
  return vec2(t, .5);
lowp vec4 squareImage(mediump vec2 uv) {
  mediump vec2 d, w, s;
  w = max(fwidth(uv), 1e-4);
  s = clamp((w * .5 + (1. - abs(uv))) / w, 0., 1.);
  mediump float l = s.x * s.y;
  return vec4(l);
lowp vec4 circleImage(mediump vec2 uv) {
  highp float d, w, s;
  d = max(dot(uv, uv), 1e-4);
  d = d * inversesqrt(d);
  w = max(fwidth(d), 1e-4);
  mediump float l = clamp((w * .5 + (1. - d)) / w, 0., 1.);
  return vec4(l);
lowp vec4 supercircleImage(highp vec2 uv) {
  highp float d, w;
  uv = max(abs(uv) * 1.199 - vec2(0.199), 0.0);  d = pow(uv.x, 2.68) + pow(uv.y, 2.68);
  w = max(fwidth(d), 1e-4);
  mediump float l = clamp((w * .5 + (1. - d)) / w, 0., 1.);
  return vec4(l);
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump float e = (render_state.z - d)/fwidth(d);
  return vec4(clamp(e+.5, 0., 1.));
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump float e = (render_state.z - d)/render_state.y;
  e = clamp(e+.5, 0., 1.);
  return vec4((e * -2. + 3.) * e * e);
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump vec2 e = (render_state.zw - d)/fwidth(d);
  e = clamp(e+.5, 0., 1.);
  return vec4((1. - e.x) * e.y);
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump vec2 e = (render_state.zw - d)/render_state.y;
  e = clamp(e+.5, 0., 1.);
  e = (e * -2. + 3.) * e * e;
  return vec4((1. - e.x) * e.y);
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
uniform highp vec2 offset[4];
void main () {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 + offset[0] * texmat0.xy;
  texcoord1 = t0 + offset[1] * texmat0.xy;
  texcoord2 = t0 + offset[2] * texmat0.xy;
  texcoord3 = t0 + offset[3] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2;
varying highp vec2 texcoord3, texcoord4, texcoord5;
uniform highp vec2 offset[3];
void main () {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[2] * texmat0.xy;
  texcoord1 = t0 - offset[1] * texmat0.xy;
  texcoord2 = t0 - offset[0] * texmat0.xy;
  texcoord3 = t0 + offset[0] * texmat0.xy;
  texcoord4 = t0 + offset[1] * texmat0.xy;
  texcoord5 = t0 + offset[2] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec2 axis;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0;
void main () {
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = vertex_texcoord0 - 0.5 * axis;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6;
uniform highp vec2 offset[3];
void main() {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[2] * texmat0.xy;
  texcoord1 = t0 - offset[1] * texmat0.xy;
  texcoord2 = t0 - offset[0] * texmat0.xy;
  texcoord3 = t0;
  texcoord4 = t0 + offset[0] * texmat0.xy;
  texcoord5 = t0 + offset[1] * texmat0.xy;
  texcoord6 = t0 + offset[2] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12;
uniform highp vec2 offset[6];
void main() {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[5] * texmat0.xy;
  texcoord1 = t0 - offset[4] * texmat0.xy;
  texcoord2 = t0 - offset[3] * texmat0.xy;
  texcoord3 = t0 - offset[2] * texmat0.xy;
  texcoord4 = t0 - offset[1] * texmat0.xy;
  texcoord5 = t0 - offset[0] * texmat0.xy;
  texcoord6 = t0;
  texcoord7 = t0 + offset[0] * texmat0.xy;
  texcoord8 = t0 + offset[1] * texmat0.xy;
  texcoord9 = t0 + offset[2] * texmat0.xy;
  texcoord10 = t0 + offset[3] * texmat0.xy;
  texcoord11 = t0 + offset[4] * texmat0.xy;
  texcoord12 = t0 + offset[5] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
uniform highp vec2 offset[7];
void main() {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[6] * texmat0.xy;
  texcoord1 = t0 - offset[5] * texmat0.xy;
  texcoord2 = t0 - offset[4] * texmat0.xy;
  texcoord3 = t0 - offset[3] * texmat0.xy;
  texcoord4 = t0 - offset[2] * texmat0.xy;
  texcoord5 = t0 - offset[1] * texmat0.xy;
  texcoord6 = t0 - offset[0] * texmat0.xy;
  texcoord7 = t0 + offset[0] * texmat0.xy;
  texcoord8 = t0 + offset[1] * texmat0.xy;
  texcoord9 = t0 + offset[2] * texmat0.xy;
  texcoord10 = t0 + offset[3] * texmat0.xy;
  texcoord11 = t0 + offset[4] * texmat0.xy;
  texcoord12 = t0 + offset[5] * texmat0.xy;
  texcoord13 = t0 + offset[6] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute highp float vertex_texcoord0;
attribute highp float vertex_point_size;
attribute lowp vec4 vertex_color;
varying lowp vec4 color;
void main() {
  gl_Position = vertex_matrix * vertex_position;
  gl_PointSize = vertex_point_size;
  color = vertex_color;
SSSSSSSSSSSSSS
SSSSSSSSSSSSSS
contents
opacity
zPosition
anchorPoint
anchorPointZ
contentsScale
transform
sublayerTransform
contentsTransform
contentsRect
cornerContents
cornerContentsCenter
filters
backgroundFilters
compositingFilter
meshTransform
magnificationFilter
minificationFilter
minificationFilterBias
name
backgroundColor
cornerRadius
borderWidth
borderColor
isDoubleSided
contentsMultiplyColor
gain
contentsSwizzle
hitTestsContentsAlphaChannel
shouldRasterize
preloadsCache
rasterizationPrefersDisplayCompositing
rasterizationScale
createsCompositingGroup
allowsEdgeAntialiasing
allowsGroupOpacity
allowsDisplayCompositing
allowsGroupBlending
wantsExtendedDynamicRangeContent
toneMapToStandardDynamicRange
cornerContentsMasksEdges
allowsHitTesting
hitTestsAsOpaque
literalContentsCenter
contentsContainsSubtitles
continuousCorners
inheritsTiming
definesDisplayRegionOfInterest
shadowOpacity
shadowColor
shadowOffset
shadowRadius
shadowPath
invertsShadow
shadowPathIsBounds
actionForLayer:forKey:
displayLayer:
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
_layoutSublayersOfLayer:
animationDidStart:
animationDidStop:finished:
$*/5;AGMTZahov~
(4AMYdoz
!)1:BJRZcks{
?333333
@333333
@333333
?t)K
?aqua
?black
blue
?fuchsia
?gray
?green
lime
maroon
navy
?olive
purple
?red
silver
?teal
?white
?yellow
size
sprite
radius
style
resize
redRange
name
strokeStart
sizeRequisition
single
circle
screen
surface
curves
resizeAspect
endProgress
simpleAttractor
earliestCommitTime
screenBlendMode
strokeColor
renderMode
rasterizationScale
cube
oldestFirst
cornerContents
commitTime
onOrderIn
oldestLast
cornerContentsMasksEdges
cornerContentsCenter
center
onOrderOut
coneAngle
contents
compositingFilter
strokeEnd
sphere
constraints
redSpeed
conic
continuousCorners
contentsCenter
cubic
discrete
contentsFrameMode
contentsRect
cumulative
endPoint
dest
discretizesTime
sdrNormalize
edrGain
rectangle
contentsFrameCount
rectangles
direction
scrollMode
contentsScale
darkenSourceOver
darkenBlendMode
destIn
contentsFormat
contentsContainsSubtitles
line
additive
cornerRadius
resizeAspectFill
instanceRedOffset
instanceGreenOffset
normalBlendMode
linear
instanceColor
anchorPointZ
instanceCount
spin
anchorPoint
lanczos
luminance
linearBurnBlendMode
stiffness
lanczosResize
emitterSize
subtractD
contentsDither
emitterPosition
contentsFramesPerSecond
lineJoin
coneEdgeSoftness
emitterDuration
duration
tensionValues
trilinear
removedOnCompletion
directionLatitude
directionLongitude
emitterRects
middle
layoutManager
subtractBlendMode
contentsAlignsToPixels
spinRange
securityMode
emitterShape
mass
emitterZPosition
linearlySampledLinear
origin
fade
force
animations
radial
disableActions
completionBlock
cuboid
type
margin
toValue
contextId
colors
color
orientationRange
spot
animatesFromModelValues
orientationLatitude
orientationLongitude
endAngle
emitterMode
zAcceleration
cullRect
sequential
spinBias
instanceBlueOffset
instanceAlphaOffset
cubicPaced
remoteInputMachTime
lineDashPattern
clear
font
massRange
subtype
outline
limitAveragePixelLuminance
options
appliesY
colorHueRotate
allowsSubstituteColor
emitterCells
targetsSuperlayer
appliesX
repeatCount
zPosition
autoreverses
colorInvert
timeOffset
compressLuminance
locations
cullMaxZ
emissionLongitude
aligned
actions
distanceField
clearsContext
exclusionBlendMode
separatedOptions
offset
contentsTransform
emissionRange
saturationBlendMode
emissionLatitude
tileSize
seed
speed
appliesRotation
axial
overlayBlendMode
attractor
updateDeadline
repeatDuration
timingFunctions
xAcceleration
contentsOpaque
inputValues
cheapAdditive
allowsFontSubpixelQuantization
maskedCorners
contentsMultiplyColor
appliesScale
animationDelegate
cullMinZ
colorMonochrome
timingFunction
destOut
foregroundColor
delegate
earliestAutomaticCommitTime
rotation
instanceTransform
shouldRasterize
colorOverLife
destAtop
updateInterval
animationDuration
inputGreenValues
fontSize
colorDodgeBlendMode
differenceBlendMode
inputFrontColor
position
cachesInputImage
colorOverDistance
luminanceToAlpha
superlayer
rotationMode
scale
damping
function
inputAngle
left
colorAdd
alignToMotion
mask
contentsScaling
ignoresScreenClip
start
animId
animationTimingFunction
rotationRange
inputNormalizeEdges
keyTimes
definesDisplayRegionOfInterest
sharpness
sourceLayer
sourceOut
inputHardEdges
calculationMode
sourceIn
sourceOver
opaque
nearest
inputAmount
points
sourcePoints
inputMaskImage
paced
startProgress
inputEndAngle
point
inputAddColor
sublayers
linearDodgeBlendMode
colorContrast
roundsToInteger
startAngle
startPoint
borderColor
gain
flipsHorizontalAxis
inputAlphaValues
cheapColorDodge
literalContentsCenter
lineCap
identifier
allowsBackdropGroups
right
inputDither
rasterizationPrefersDisplayCompositing
inputFrontEnabled
minificationFilterBias
alphaRange
minificationFilter
inputAspectRatio
attractorType
filters
hidden
inputTime
meteor
filter
random
enabled
lifetime
vibrantDarkSourceOver
zoom
asg77
truncationMode
matchesPosition
sortsSublayers
disableUpdateMask
continuityValues
fillMode
contentsGravity
inputLinear
luminanceMap
sourceLayerRenderId
alignmentMode
fillColor
backdropRect
colorMatrix
fromLeft
destOver
motionBlurAmount
tracksLuma
sourceContextId
topLeft
inputColor
subtractS
groupName
inputColor1
justified
inputColor0
ambientIntensity
groupNamespace
transitionFlags
frozen
alphaThreshold
instanceDelay
contentsSwizzle
string
proxyProperties
topRight
transition
lifetimeRange
contentsFramesPerRow
opacityPair
canDrawConcurrently
fromValue
backToFront
divideBlendMode
allowsEdgeAntialiasing
inputBias
birthRate
scaleRange
asynchronousRenderTime
colorMap
inputBlueValues
inputRedValues
colorBlendMode
autoresizingMask
light
lightenBlendMode
levelsOfDetailBias
vibrantDarkSourceOverReversed
alignedFlip
translation
luminosityBlendMode
doubleSided
unordered
softLightBlendMode
miterLimit
backgroundFilters
backgroundColorPhase
wantsExtendedDynamicRangeContent
backgroundColor
inputHSVSpace
invertsShape
appliesAlpha
preloadsCache
fromRight
luminanceCurveMap
inputReversed
inputColorMatrix
vibrantColorMatrixSourceOver
value
interpolations
linearLightBlendMode
volume
alignedCube
masksToBounds
values
emitterBehaviors
presentationModifiers
emitterPath
byValue
vibrantDark
inverseMeshed
preferredFrameRateRangePreferred
plane
height
needsLayoutOnGeometryChange
keyPath
yAcceleration
drawingEnabled
inputBounds
lineDashPhase
asynchronousRenderPeriod
planar
inheritsTiming
flip
valueFunction
usesNormalizedCoordinates
copy
pluginType
sublayerTransform
allowsInPlaceFiltering
greenRange
vibrantColorMatrix
pinLightBlendMode
reveal
allowsHitTesting
levelsOfDetail
moveIn
lineWidth
particleType
colorBurnBlendMode
averageColor
inheritsSecurity
colorSaturate
hitTestsAsOpaque
marginWidth
push
fillRule
colorSubtract
meshTransform
toneMapToStandardDynamicRange
minimum
reducesCaptureBitDepth
bleedAmount
falloffDistance
inputBackEnabled
hueBlendMode
inputBackColor1
cheapScreen
valueOverLife
inputBackColor0
separatedState
vibrantLight
multiplyColor
drag
vibrantLightSourceOver
plusL
matchesTransform
valueOverDistance
geometryFlipped
plusD
inputRadius
truncationString
pluginId
edgeAntialiasingMask
inputColorMap
hardLightBlendMode
invertsContentsAreFlipped
createsCompositingGroup
preservesFlip
inputScale
velocityRange
needsDisplayOnBoundsChange
bias
diffuseIntensity
fromTop
cheapMaximum
inputStartAngle
bounds
frameInterval
allowsGroupBlending
homeAffordanceBase
preferredFrameRateRangeMaximum
allowsDisplayCompositing
captureOnly
inputShadowBounds
inputShadowColor
multiplyBlendMode
lightenSourceOver
opacity
identity
inputAddWhite
biasValues
inputQuality
blueRange
shadowOffset
preferredFrameRateRangeMinimum
rendersAsynchronously
floating
borderWidth
wave
transform
emitterDepth
width
shadowColor
inputOverlayOpacity
hitTestsContentsAlphaChannel
bottomLeft
frequency
drawableProperties
gaussianBlur
alphaSpeed
sourceAtop
wrapped
matchesOpacity
colorBrightness
hidesSourceLayer
variableBlur
allowsGroupOpacity
path
shadowRadius
magnificationFilter
pluginFlags
fontSmoothingStyle
falloff
beginTime
fromBottom
drawsAsynchronously
maximumTileScale
horizontally
scaleSpeed
lowLatency
beginTimeMode
invertsShadow
pageCurl
preservesDepth
both
bottom
maximum
highFrameRateReason
multiply
velocity
greenSpeed
blueSpeed
vibrantLightSourceOverReversed
vertically
shadowOpacity
inputIntermediateBitDepth
shadowPathIsBounds
bottomRight
windowServerAware
pluginGravity
shadowPath
CAIOSurfaceCreate: failed to allocate IOSurface (size: %u x %u, format: %c%c%c%c)
success
kCADetachReasonCodeOffscreen
kCADetachReasonCodeNonOpaque
kCADetachReasonCodeNonWhite
kCADetachReasonCodeNested
kCADetachReasonCodeHasRenderState
kCADetachReasonCodeNonScreenSpace
kCADetachReasonCodeZeroDeviceScale
kCADetachReasonCodeUsingClipPlanes
kCADetachReasonCodeNoHandle
kCADetachReasonCodeNonCanonicalLayer
kCADetachReasonCodeHasCenterGeometry
kCADetachReasonCodeHasMixCoords
kCADetachReasonCodeHasOuterEdgeSubFilter
kCADetachReasonCodeLayerFeatures
kCADetachReasonCodeNoDisplayCompositing
CADebug disabled detached
kCADetachReasonCodeNullSurface
kCADetachReasonCodeNonAffine
kCADetachReasonCodeRotation
kCADetachReasonCodeUnderBackdrop
kCADetachReasonCodeMismatchEDR
kCADetachReasonCodeNotClearAboveBlackBelow
kCADetachReasonCodeWindowServerRejected
kCADetachReasonCodeDisplayRejected
kCADetachReasonCodeRectClipped
CreationProperties
IOSurfaceData
IOSurfaceBulkAttachments
iosurface-%zu-%zu-%c%c%c%c-%s-XXXXXX.plist
rowbytes_for_packed_format
CASurfaceUtil.mm
width
height
horizontalOffset
verticalOffset
cleanAperture
horizontalSpacing
verticalSpacing
pixelAspectRatio
gammaLevel
fieldCount
fieldDetail
yCbCrMatrixIndex
colorPrimariesIndex
transferFunctionIndex
chromaLocationTopField
chromaLocationBottomField
chromaSubsampling
displayPrimariesXG
displayPrimariesYG
displayPrimariesXB
displayPrimariesYB
displayPrimariesXR
displayPrimariesYR
whitePointX
whitePointY
maxDisplayMasteringLuminance
minDisplayMasteringLuminance
masteringDisplayColorVolume
maxContentLightLevel
maxFrameAverageLightLevel
contentLightLevelInfo
edrFactor
Undefined script value `%s'
null
bool
integer
real
NSArray
NSSet
NSDictionary
NSURL
NSData
CGPoint
CGSize
CGRect
CGAffineTransform
CATransform3D
CAPoint3D
CAColorMatrix
CGColor
CGImage
CGPath
CGPDFDocument
CGFont
unordered
oldestFirst
oldestLast
backToFront
additive
screen
maximum
cheapColorDodge
point
line
rectangle
cuboid
circle
sphere
path
rectangles
points
outline
surface
volume
sequential
emitterCells
emitterBehaviors
emitterRects
CA_DISABLE_ASYNC
CA::CG::Queue
(interpolator (factor %g)
(o%d 
Invalid frame interval range %u %u %u from frame rate range %.2f %.2f %.2f
auto
YCbCr444LimitedRange
YCbCr422LimitedRange
YCbCr420LimitedRange
RGBLimitedRange
RGBFullRange
DolbyVision
DolbyVisionLowLatency
HDR10_444LimitedRange
HDR10_422LimitedRange
HDR10_420LimitedRange
HDR10_RGBFullRange
none
scaleContent
insetBounds
rot0
rot90
rot180
rot270
refreshRate
Dolby
HDR10
gamut_SRGB
gamut_P3
gamut_BT2020
CADisplay
%p: cannot update immutable CADisplay
CoreAnimation: GetDisplayInfo returned 0x%x
seed
connectionSeed
uniqueId
productName
availableModes
supportedHDRModes
preferredHDRModes
currentMode
preferredMode
latency
bounds
overscanned
overscanAmounts
overscanAmount
overscanAdjustment
cloned
cloning
cloningSupported
supportsExtendedColors
processId
heartbeatRate
minimumFrameDuration
preferredFrameDuration
nativeOrientation
currentOrientation
safeBounds
externalDisplayAttributes
preferences
allowedHDRModes
Failed to set display latency - missing UUID
CADisplayLink: reload_item, item does not exist
CADisplayLink
%@: already added to runloop %p, cannot also be added to %p
cannot change properties on an immutable CADisplay
CAInvalidDisplayMode
mode %@ is not valid for display %@
CoreAnimation: [CADisplay colorMode] is deprecated!
CoreAnimation: [CADisplay setColorMode:] is deprecated!
CoreAnimation: [CADisplay allowsVirtualModes] is deprecated!
CoreAnimation: [CADisplay setAllowsVirtualModes] is deprecated!
<CADisplay:%@ %@>
cannot change preferences on an immutable CADisplay
B24@?0@"NSString"8@16
invalid range (minimum: %.2f maximum: %.2f preferred: %.2f)
Unsupported use of CADisplayLink SPI off the main thread.
DeviceClassNumber
main-screen-scale
<CADisplayMode %d x %d internal_panel (fixed)>
undefined
full
limited
<CADisplayMode %d x %d fmt:%s range:%s>
v12@?0i8
Failed to register for CADisplay change notifications: 0x%x
com.apple.CoreAnimation.CAWindowServer.DisplayPower
Failed to register for CADisplay power notifications: 0x%x
Unable to query displays from server (%d)
External
CA::Display::display_queue
~Renderer
cg-renderer.cpp
!_ctx
CG.Performance
Virtual-%d
%@ Framebuffer
VirtualDisplay::clone_update failed to copy surface
copy_display_timings: unexpected state (source: %x, this: %x)
{?=dddddd}
public.png
array
dict
CoreAnimation: unable to encode NSValue of type %s
kind
CGColorPattern
data
tiling
CGPatternType
CGPatternMatrix
CGPatternBounds
CGPatternStep
CGPatternTiling
CGPatternColored
CGPatternImage
LKCGPathType
LKCGPathPoint0_x
LKCGPathPoint0_y
LKCGPathPoint1_x
LKCGPathPoint1_y
LKCGPathPoint2_x
LKCGPathPoint2_y
LKCGPathSegments
IOSurfaceInfo
IOSurfaceProperties
IOSurfaceYCbCrMatrixInt
assets/image%d.%@
CAML: Failed to encode image: %s
%s: ignoring exception %@
-[NSCoder(CACoderAdditions) CA_decodeObjectForKey:]
CACodingUserInfo
CACodingSkipHiddenLayers
CACodingImageFormat
CACodingImageOptions
%@/%@
%@/assets
CAMLEncodeLayerTreeToPathWithOptions failed to create output dirs at %s
CAMLEncodeLayerTreeToPathWithOptions options must be a CFDictionary
%@/%s
main.caml
rootDocument
geometryFlipped
userInfo
index.xml
CAMLEncodeLayerTreeToPathWithOptions failed to move %s to %s
rootLayer
root
CAEncodeIOSurfacesAsCGImages
B24@?0#8:16
Failed to validate rowbytes: %zu, levels: %u height: %u
Failed to decode_data_async, size: %zu
Failed to decode shmem.
Failed to re-create data_size, encoded: %zu,calculated: %zu
Image failed to decode!
(image [%d %d] [%d] %s
 (tint %.3g %.3g %.3g %.3g)
CABackingStoreBeginUpdate
CABackingStore.cpp
!CABackStoreIsUpdating_ (b)
levels == 1
CABackingStoreEndUpdate
CABackStoreIsUpdating_ (b)
CABackingStore
CoreAnimation: triple buffered backing store %p
CA Whippet Drawable
CABackingStoreBeginUpdate_
!b->update_ctx
Shape: %s
CA_ACCEL_BACKING
CoreAnimation: forcing %saccelerated backing
non-
<CABackingStore %p>
<CABackingStore %p
 (buffer [%d %d] %s%s)
 volatile
 (surface 0x%x [%d %d] %s%s)
Error while parsing CoreAnimation XML document %@: %@
Unable to load CAPackage from URL: %@
(currentTexture 
(blendedTextures
ImageQueue %p visibility going from %u to %u
CoreAnimation: copied CGImageRef %p - image size (%lu x %lu) exceeds max texture size
CoreAnimation: copied CGImageRef %p - mask size
CoreAnimation: copied CGImageRef %p - color matching
CoreAnimation: copied CGImageRef %p - needs color matching
CoreAnimation: copied CGImageRef %p - non-RGB color model
__CAAllowSubimage
copy_image
render-image-cache.cpp
!main_texture->has_display_transform ()
CG image cache at time %f:
CoreAnimation: copied CGImageRef %p - bad alignment for IOSurface 0x%x
CoreAnimation: warning, CGImageProvider returned multiple blocks
CoreAnimation: copied CGImageRef %p - mipmap generation
CoreAnimation: copied CGImageRef %p - bad decode array
CoreAnimation: copied CGImageRef %p - bad mask
CoreAnimation: copied CGImageRef %p - bad mask image format (%d bpp, %d bpc)
CoreAnimation: copied CGImageRef %p - non-native format (%d)
CoreAnimation: copied CGImageRef %p - format not supported by hardware
CoreAnimation: data provider size invalid
CoreAnimation: data provider size is too small
CoreAnimation: copied CGImageRef %p - no data pointer
CoreAnimation: copied CGImageRef %p - bad image alignment
CoreAnimation: copied CGImageRef %p - bad row alignment
CoreAnimation: copied CGImageRef %p - RGB mask (bug!)
CoreAnimation: ignored CGImageRef %p - bad RGB 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - decode or mask
CoreAnimation: copied CGImageRef %p - bad RGB image format (%d bpp, %d bpc, %d info)
CoreAnimation: ignored CGImageRef %p - bad grayscale 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - bad grayscale image format (%d bpp, %d bpc, %d info)
  %p deadline %f %s%s%s%s%s
mipmaps 
mask 
transient 
unmatched 
partial 
multiplyColor
colorAdd
colorSubtract
colorMonochrome
colorMatrix
colorHueRotate
colorSaturate
colorBrightness
colorContrast
colorInvert
compressLuminance
alphaThreshold
meteor
edrGain
sdrNormalize
homeAffordanceBase
luminanceToAlpha
bias
opacityPair
distanceField
gaussianBlur
variableBlur
luminanceMap
luminanceCurveMap
averageColor
lanczosResize
clear
copy
sourceOver
sourceIn
sourceOut
sourceAtop
destOver
destIn
destOut
destAtop
plusL
subtractS
subtractD
multiply
minimum
plusD
normalBlendMode
multiplyBlendMode
screenBlendMode
overlayBlendMode
darkenBlendMode
lightenBlendMode
colorDodgeBlendMode
colorBurnBlendMode
softLightBlendMode
hardLightBlendMode
differenceBlendMode
exclusionBlendMode
subtractBlendMode
divideBlendMode
linearBurnBlendMode
linearDodgeBlendMode
linearLightBlendMode
pinLightBlendMode
hueBlendMode
saturationBlendMode
colorBlendMode
luminosityBlendMode
pageCurl
vibrantDark
vibrantLight
vibrantColorMatrix
darkenSourceOver
lightenSourceOver
vibrantColorMatrixSourceOver
limitAveragePixelLuminance
inputAddWhite
inputAlphaValues
inputAmount
inputAngle
inputAspectRatio
inputBackColor0
inputBackColor1
inputBackEnabled
inputBias
inputBlueValues
inputBounds
inputColor
inputColor0
inputColor1
inputColorMap
inputColorMatrix
inputDither
inputEndAngle
inputFrontColor
inputFrontEnabled
inputGreenValues
inputHSVSpace
inputHardEdges
inputIntermediateBitDepth
inputLinear
inputNormalizeEdges
inputOverlayOpacity
inputQuality
inputRadius
inputRedValues
inputReversed
inputScale
inputShadowBounds
inputShadowColor
inputStartAngle
inputTime
inputValues
name
enabled
cachesInputImage
accessibility
CAFilterType
CAFilterName
CAFilterEnabled
CAFilterInputs
filter
CAFilter requires `filter' attribute
basedOn
locked
initial
nextDelay
previousDelay
elements
{%@:%p %@ basedOn %@ %@%s%s}
 initial
 locked
average
Invalid number of numeric values in mesh
Invalid number of arguments to 'v' mesh operator
Invalid number of arguments to 'f' mesh operator
Invalid mesh operator: %c
[%@] [%@] v 
[%@] [%@] f 
meshData
depthNormalization
subdivisionSteps
replicatesEdges
CAMeshTransform
%@: trying to replace non-existent vertex %ld
%@: trying to remove non-existent vertex %ld
%@: trying to replace non-existent face %ld
%@: trying to remove non-existent face %ld
Unsupported image format '%s' for default colorspace
ARGB8888
XRGB8888
BGRA8888
BGRX8888
XRGB1555
BGRX5551
CbYCrY8
YCbYCr8
LA16
RGBA5
RGBA8
ABGR8
RGBX8
XBGR8
RGBA16
RGBX16
RGBAh
RGBXh
RGBAf
BGR10A2
RGB10
RGB10_XR
ARGB10_XR
RGB10A8_2P_XR
CoreAnimation: rendering error %s
(replicatorLayer %d)
%s - _instance_transform size %u
ReplicatorLayer
rotateX
rotateY
rotateZ
scaleX
scaleY
scaleZ
scaleXY
scaleXYZ
translate
translateX
translateY
translateZ
CAValueFunctionName
Unknown function: %@
linear
easeIn
easeOut
easeInEaseOut
default
CAMediaTimingFunctionInvalid
unknown timing function name: %@
CAMediaTimingFunctionInvalidControlPoint
no timing function control point with index: %d
(%g %g; %g %g)
No timing function data
Unknown timing function: %@
Ignoring trailing characters
CAMediaTimingFunction
index
CoreAnimation: failed to allocate %ld bytes
Data %p with size %zu underflow
CoreAnimation: failed to query region %p (%zu bytes)
CoreAnimation: mach_make_memory_entry_64 (size %llu, addr 0x%llx, prot 0x%x, port %u) = 0x%x
(shmem %lu bytes)
Shmem port is MACH_PORT_NULL!
Failed to decode shmem from data ptr: %p, len: %zu
Failed to decode shmem data
Invalid bitmap: [%u x %u], %u levels
Layer backing store allocation too large size:%ld width:%d height:%d levels:%d
Bogus ShmemBitmap : [%u x %u], %u levels
Bogus ShmemBitmap data pointer: %p, Shmem data pointer: %zu
Bogus ShmemBitmap rowbytes: %zu, width: %u, height: %u, level: %u
Bogus ShmemBitmap data pointer: %p, total size: %zu
%a %b %e %H:%M:%S %Z %Y
** Log started %s **
stdout
stderr
X_LOG_TRUNCATE
Unable to open log file for writing: %s
exported [%d %d] buffer to %s
X_LOG_FILE_OPEN
open '%s'
 command: %s
QUARTZCORE_LOG_FILE
X_LOG_FILE
CADebug
Metal
OpenGL
Render
States
Utilities
WindowServer
Color
FrameRate
animations.%@
{%@:%p %@:%p %@}
 (offscreen-flags [
 (group-flags [
(%slayer %s[%.10g %.10g %.10g] [%.10g %.10g %.10g %.10g] [%g %g %g]
transform-
container 
[%d pass%s
 [%d %d %d %d]
 image seed %d
(name 
(hidden true)
(masksToBounds true)
(geometryFlipped true)
(edgeAntialiasingMask%s%s%s%s%s)
 left
 right
 bottom
 top
 none
(disableUpdateMask%s%s%s%s%s%s%s)
 display
 snapshot
 unprotected
 inhibit-cloning
 occlusion-detection
 secure
(contentsGravity %s)
(contentsOpaque true)
(contentsDither false)
(contentsAlignsToPixels true)
(contentsMultiplyColor %.3g %.3g %.3g %.3g)
AAAA
(contentsSwizzle %s)
transform
sublayerTransform
(doubleSided false)
(sortsSublayers false)
(flipsHorizontalAxis true)
(opacity %g)
(cornerRadius %g)
(backgroundColor 
(backgroundColor (%.3g %.3g %.3g %.0g))
(borderWidth %g)
(borderColor 
(borderColor (%.3g %.3g %.3g %.0g))
(cornerContents 
(continuousCorners true)
(cornerContentsMasksEdges true)
(maskedCorners%s%s%s%s%s)
 minX-minY
 maxX-minY
 minX-maxY
 maxX-maxY
(contents %s
backingStore 
(contentsScaling repeat)
(magnificationFilter %s)
(minificationFilter %s)
(gain %g)
(lodBias %g)
(inheritsTiming false)
(definesDisplayRegionOfInterest true)
(contentsContainsSubtitles true)
contentsTransform
(contentsRect 
(contentsCenter 
(cornerContentsCenter 
(literalContentsCenter true)
(contentsScale %g)
(shouldRasterize true)
(rasterizationPrefersDisplayCompositing true)
(rasterizationScale %g)
(preloadsCache true)
(createsCompositingGroup true)
(allowsDisplayCompositing true)
(allowsEdgeAntialiasing true)
(wantsExtendedDynamicRangeContent true)
(toneMapToStandardDynamicRange true)
(allowsGroupOpacity true)
(allowsGroupBlending false)
(allowsHitTesting false)
(hitTestsContentsAlphaChannel true)
(hitTestsAsOpaque true)
(securityMode unrestricted)
(securityMode insecure)
(shadowColor (%.3g %.3g %.3g %.0g))
(shadowOpacity %g)
(shadowRadius %g)
(shadowOffset [%g %g])
(shadowPath 
(invertsShadow true)
(shadowPathIsBounds true)
(mask 
(sublayers 
(filters 
(backgroundFilters 
(compositingFilter 
(meshTransform 
(animations 
(modifiers 
(subclass 
%s - transform size %u
%s - sublayerTransform size %u
%s - contentsTransform size %u
%s - contentsRect size %u
%s - contentsCenter size %u
%s - cornerContentsCenter size %u
%s - meshTransform = %p
%s - expected sublayer ids
Layer
shadow
tiled-image
backdrop-copy
blending
mask
group
scaling
plugin
cache
mesh
motion-blur
dest-copy
asynchronous
compositing-filters
bg-filters
blend-modes
sover
rasterize
emitter
dirty-old
dirty-new
update
update-geom
update-image
update-below
update-if-sibling
anim-content
anim-geom
anim-other
anim-image
anim-future
anim-fill
anim-below
anim-now-below
detached-content
detached-dirty
detached-below
detached-invalid
anims-changed
no-opaque
no-clip
non-black
non-clear
enable-dpb
UNUSED
pending
hit-tests-as-opaque
backdrop-changed
local-non-black
deep-content
deep-below
out-of-p3
needs-dest-alpha
needs-dest-alpha-below
edr-content
edr-below
edr-detached-content
edr-detached-below
inhibit-clone
inhibit-clone-below
dependent
dependent-below
defines-display-roi
uncullable
culled
capturing-backdrop-below
protect-0
protect-1
protect-2
edr-content-passive
anim-image-dirty
velocity-0
velocity-1
velocity-2
emit_glyphs
ogl-glyph-cache.cpp
_buffer_end <= _buffer->size
(filter %s
(inputs 
(%s 
[CA] Surface ID:0x%x detach result: %s
Failed to detach surface code: %s
render_contents_background
ogl-layer.cpp
!(l->node->flags & Render::kLayerNodeIgnoreContents)
set_swizzle
swizzle == Render::kLayerContentsSwizzleAAAA
vibrantDarkSourceOver
vibrantLightSourceOver
vibrantDarkSourceOverReversed
vibrantLightSourceOverReversed
uncollectable
disableFade
onlyIfNull
removeImmediately
contentsAreFlipped
contents
CATiledLayerFlags
CoreAnimation: failed to add monotonic cube ((%g, %g) (%g, %g) (%g, %g) (%g, %g))
Basic
Blurs
PerfStates
Glitches
Frame Duration
render_for_time
Display EDR
Render EDR
Desired EDR
Display nits
Luma boost
Offscreen Passes
Dirty Area
Frame Delay
Update
SwapID
Backdrop Count
Blur Count
Emitter Count
Particle Count
CPU Freq
GPU Freq
SoC Freq
DRAM Freq
Battery Drain
CPU Power
GPU Power
SoC Power
DRAM Power
Detected Glitch
/usr/local/lib/libpstatemonitor.dylib
pstate_monitor_connect
pstate_monitor_destroy
pstate_monitor_get_CPU_pstate
pstate_monitor_get_GPU_pstate
pstate_monitor_get_SOC_pstate
pstate_monitor_get_DRAM_pstate
pstate_monitor_get_CPU_watts
pstate_monitor_get_GPU_watts
pstate_monitor_get_SOC_watts
pstate_monitor_get_DRAM_watts
pstate_monitor_get_BatteryDrain_watts
v16@?0^{pstate_monitor=}8
apple-internal-install
CA_DISABLE_WORKAROUNDS
CA_MAX_TEXTURE_UNITS
GL_APPLE_fence
GL_APPLE_texture_filter_cubic
GL_APPLE_texture_ycbcr_basic_formats
GL_APPLE_texture_ycbcr_extended_formats
GL_APPLE_texture_xr
GL_APPLE_tile_order_rot
GL_EXT_shader_framebuffer_fetch
GL_EXT_texture_filter_anisotropic
GL_EXT_texture_lod_bias
GL_OES_standard_derivatives
GL_OES_texture_half_float
GL_OES_texture_half_float_linear
GL_OES_texture_float
GL_OES_texture_float_linear
GL_IMG_texture_compression_pvrtc
GL_KHR_texture_compression_astc_ldr
CoreAnimation: maximum %d texture units
CoreAnimation: maximum texture %d pixels
#define NOISE_SIZE %d
CoreAnimation: unsupported graphics hardware
; need three or more texture units
CoreAnimation: %d by %d image is too large for GPU, ignoring
CoreAnimation: image stride is too large for GPU, ignoring
CoreAnimation: surface %d x %d is too large
~Context
ogl-context.cpp
CADisableColorMatching
CA_DISABLE_COLOR_MATCHING
0x%x
push_surface
_current_surface != surf
[%u]
 s:[%u x %u (%.2lf %s)] b:[%u x %u (%.2lf %s)] need-clear:%d%s, id:%p
, memoryless
 s:framebuffer
dest
surf
pop_surface
_current_surface != 0
TMPDIR
/tmp
%s/ca-image-%03d-%s-%d.%s
error: failed to export [%d %d] buffer to %s
post_notification
render-notification.cpp
(shape-layer
(fillColor %.3g %.3g %.3g %.3g)
(strokeColor 
(strokeColor %.3g %.3g %.3g %.3g)
(strokeStart %g)
(strokeEnd %g)
(miterLimit %g)
(dashPhase %g)
(dashPattern 
(fillRule evenOdd)
(lineJoin %s)
round
bevel
(lineCap %s)
square
start
middle
natural
left
right
center
justified
Helvetica
font
NSFont
NSGraphicsContext
UIApplication
vertically
horizontally
  name 0x%lx = object 0x%lx 
disableGroupOpacity
disableEdgeAA
enablePixelDoubling
enablePixelQuadrupling
backdropNamespace
ignoresHitTest
displayable
secure
allowsOcclusionDetectionOverride
(source 
unknown sync reply received : %i
error (%i) waiting for sync reply
request_synchronize
render-context.cpp
long synchronize for %x: now (%u,%u): req %c%u(%u)
synchronize timed out for %x with (%u,%u): req %c%u(%u)
HitTest: starting (%u)
HitTest: got layer "%s"
HitTest: ending (%u)
will_commit
!_locked_host_ctx || _locked_host_ctx == host_ctx
above
siblingId
CoreAnimation: missing mask layer 0x%lx
CoreAnimation: missing sublayer %p
Unattached contexts:
  %x: pid %d [%s]
 (requested headroom: %f)
 (client-annotation: %s)
== context %x%s%s%s; pid %d [%s] %sat time %f ==
; colorspace "
Context %x (pid %d [%s]):
  slot %u:
Context %x (pid %d [%s]):
Texture 
[%d %d %d %d]
Utilization: %.2f%%, wasted memory: %.2lf %s
  Context utilization: %.2f%%, wasted memory: %.2lf %s
Total utilization: %.2f%%, wasted memory: %.2lf %s
CA Image Slot
(deferred-image-slot 
(no texture)
unexpected error %i sending sync reply from %x
CASynchronizeHangReport
fromState
toState
<CAStateTransition fromState=%@ toState=%@ %@>
pageUnCurl
<unknown>
(%s)
(%s [%g %g %g %g; %g %g %g %g; %g %g %g %g; %g %g %g %g])
(%s [%g %g %g %g %g %g])
** Render objects at time %f **
%20s %s
TYPE
COUNT
%20s %d
backdrop-group
backdrop-layer
backdrop-state
basic-animation
cprl
chameleon-layer
cloning-terminator-layer
compressed-image
context
deferred-image-slot
distance-field-layer
emitter-behavior
emitter-cell
emitter-layer
emitter-state
function
gradient-layer
group-animation
handle
image
image-provider
image-queue
interpolator
keyframe-animation
key-value
layer
layer-host
match-move-animation
match-property-animation
mesh-transform
asynchronous-state
pattern
pixel-buffer
plugin-layer
portal-layer
portal-state
presentation-modifier
proxy
proxy-layer
replicator-layer
shape-image
shape-layer
shmem
spring-animation
string
subtexture
timing
timing-list
transition
transition-animation
vector
isVirtual
pixelFormat
colorRange
isUnsafe
Unspecified
InternalPanel
LLDoVi
DoVi
RGB_8bit
RGB_10bit
RGB_12bit
YCbCr420_8bit
YCbCr420_10bit
YCbCr420_12bit
YCbCr422_8bit
YCbCr422_10bit
YCbCr422_12bit
YCbCr444_8bit
YCbCr444_10bit
YCbCr444_12bit
RGBCalibrated_8bit
RGBCalibrated_10bit
RGBCalibrated_12bit
YCbCr444_PQ_10bit
YCbCr444_PQ_12bit
YCbCr422_PQ_10bit
YCbCr422_PQ_12bit
YCbCr420_PQ_10bit
YCbCr420_PQ_12bit
RGB_PQ_10bit
RGB_PQ_12bit
RGBCalibrated_PQ_10bit
RGBCalibrated_PQ_12bit
DolbyVision_LowLatency
CADisplayPreferences
matchContent
preferredHdrType
LK_BENCHMARK
com.apple.CoreAnimation.CAWindowServer.DisplayChanged
preferred_mode_with_criteria: resolution [%g x %g], target hdr (%s), user hdr (%s), rate (%g) --> %dx%d@%g %s
CoreAnimation: context hosting changed while locked!
  %x; %spid %d [%s]
 (local)
CoreAnimation: LayerHost trying to host itself or one of its ancestors (context id %d)
(layer-host %x
(inherits-security true)
removed
frozen
extended
ogl-debug-renderer.cpp
add_vertex
_vertices_cur < _vertices_end
sprite
plane
single
random
<%@:%p; 
style
innerStroke
outerStroke
CALinearBlurs
high
medium
Shape union is bogus, new shape: %d, old shape: %d!
allowsRecursiveScreenCapture
~Update
render-updater.cpp
obj->type () == Render::kTypeImageQueue
CoreAnimation: insecure context %x - pid %u [%s].
Cannot host %x in context %x - pid %u [%s].
mark_composited
com.apple.CoreAnimation.CAWindowServer.SecureModeViolation
** Render tree at time %f (bounds %d,%d %dx%d) **
entering
rejecting
kCAContextIgnoresHitTest
allowsHitTesting = NO
culled above and hitTestsAsOpaque = NO
hidden = YES or opacity = 0
masksToBounds = YES and not in bounds
mask not hit
accepting
hit sublayer
hitTestsAsOpaque = YES and in bounds
culled above
within background color
within border
within contents
subclass
no hits
HitTest: start at: (%g, %g)
HitTest: end
rejected context ID
detected
filters
Slot name: %s
Slot occluded by: %s with context 0x%x
Slot occluded by layer from context 0x%x
CARenderPresentRelease
Invalid display attributes version %d
HitTest: %s layer "%s"%s%s
CAMachPort
<CAMachPort %p>
<CAMachPort %p mach_port = %u>
CARenderObject
Unentitled call to server!
<CARenderObject %p>
QuartzCore
Too many CAContexts! Biggest offender (%s [%d]) has %u contexts!
failed to make reply port for commit sync %i
failed to register commit sync on %x
bad index in commit sync reply : %u not in %@
dead reply from commit sync
unrecognized reply from commit sync
long commit sync wait %i : %@
excessive commit sync wait : %@
unknown error while waiting for commit sync
failed to make send once for update sync on %x
failed to register update sync on %x
failed to make reply port for update sync on %x : r=%i
dead reply from update sync on %u:%x
unrecognized reply from update sync on %u:%x
long update sync wait %i : %u:%x
excessive update sync wait : %u:%x
error while waiting for update sync on %x
CA::Context
unable to register with server: 0x%x
CoreAnimation: NULL color space set on context (%x)
_colorSpaceDidChange
_contentsFormatDidChange:
CoreAnimation: transaction fences failed : %i
commit_transaction
CAContextInternal.mm
di == _deferred_by_lid->end ()
v24@?0^v8I16I20
v16@?0^v8
can_defer
CA::Transaction::sync_replies
commit_transaction_block_invoke
pending_count > 0
v28@?0Q8@"NSObject<OS_dispatch_mach_msg>"16i24
%u(%u:%x)
,%u(%u:%x)
task_name_for_pid failed: 0x%x
CoreAnimation: failed to lock IOSurface %x
grad
Invalid transform: %s (position %d)
Invalid color matrix: %s (position %d)
Invalid number of numeric values in path: %s
Invalid number of arguments to 'm' path operator: %s
Invalid number of arguments to 'l' path operator: %s
Invalid number of arguments to 'c' path operator: %s
Invalid number of arguments to 'v' path operator: %s
Invalid number of arguments to 'q' path operator: %s
Invalid number of arguments to 't' path operator: %s
Invalid number of arguments to 'y' path operator: %s
Invalid number of arguments to 'h' path operator: %s
Invalid number of arguments to 're' path operator: %s
Invalid path operator: %s
Ignoring trailing characters: %s
true
kCGImageSourceMemoryMapAsShared
Failed to create pattern from image
Failed to open image
opacity
Incorrect number of color components (need %d)
A8asL8
Failed to load image
Unable to open pdf document
pdfDocument element must specify src attribute
cannot create font from name: %s
mode
modeDisplay
modeLayer
includeContextList
excludeContextList
stopAfterContextList
stopBeforeSlot
destination
displayName
originX
originY
timeOffset
reuseBackdrops
enforceSecureMode
ignoreAccessibility
ignoreSublayers
ignoreLayerFixup
ignoreDisableUpdateMasks
trackBackdropReuseFailures
bottomLeftOrigin
contextId
layerId
contextList
slotId
sizeWidth
sizeHeight
formatWideGamut
formatOpaque
mapCacheAttribute
CA Snapshot (Unprotected)
CA Snapshot (Protected)
CoreAnimation: failed to create Metal context!
CoreAnimation: sw renderer doesn't support tiling
whippet
CoreAnimation: %d by %d image is too large for software renderer, ignoring
SW renderer invalid destination format %c%c%c%c
CoreAnimation: warning, deleted thread with uncommitted CATransaction; created by:
CoreAnimation: warning, deleted thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
CA_DEBUG_TRANSACTIONS
CA_ASSERT_MAIN_THREAD_TRANSACTIONS
CoreAnimation: CA_ASSERT_MAIN_THREAD_TRANSACTIONS is set and an implicit transaction wasn't created on a main thread.
Started implicit transaction for thread %p
UITrackingRunLoopMode
register_bool_key
CATransactionInternal.mm
_bool_key < CHAR_BIT * sizeof (Level::_bool_values)
bool_value
key < (CHAR_BIT * sizeof (Level::_bool_values))
set_bool_value
CoreAnimation: new transaction fence disabling existing low latency hint.
CoreAnimation: invalid commit handler phase! Defaulting to pre-commit.
cannot add handler to %i from %i - dropping
CoreAnimation: cannot add handler to %i from %i
CATransaction
cannot add handler to %i from %i
CoreAnimation: warning, encountered thread with uncommitted CATransaction; created by:
CoreAnimation: warning, encountered thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
Transaction
Transaction.Stalls
start_frame
!nested || s->_frame_commit_deadline != 0
!nested || s->_frame_begin_time != 0
!nested || s->_frame_start_time != 0
finish_frame
s->_frame_depth
!s->_frame_depth
order_of_phase
phase_is_valid (phase)
CADebugTxHandlers
animation
CAAnimation
{%@:%p %@:%p %@ %@}
opaque
allowsDisplayCompositing
CoreAnimation: [EAGLContext renderbufferStorage:fromDrawable:] was called from a non-main thread in an implicit transaction! Note that this may be unsafe without an explicit CATransaction or a call to [CATransaction flush].
maximumDrawableCount
[CAEAGLLayer setInputTime:] - non-zero time already exists!
com.apple.opengles
EAGLContext
CADisplayTimerAlignPhase: unexpected state (interval:%llx, heartbeat:%llx)
CADisplayTimer
<CADisplayTimer %p>
(backdrop-layer %ld
(group "%s")
(groupNamespace global)
(groupNamespace hostingNamespacedContext)
(scale %g)
(zoom %g)
(marginWidth %g)
(backdropRect [%g %g; %g %g])
(captureOnly true)
(allowsInPlaceFiltering true)
(reducesCaptureBitDepth true)
(ignoresScreenClip true)
(tracksLuma true)
(buffer [%d x %d] scale %g)
collected backdrop group %p buffer %p
Filter merging failed.
Filter A:
Filter B:
Filter merging aborted: layer.bounds == blur.inputBounds
(transition %s
create_builtin_types
CAMLObjCContext.mm
!_builtin_types
NSString
CAML warning:%d: 
CAML error:%d: 
No such class `%s'
Unable to open script: %s
Delegate does not support <script>.
Null <script> contents
Delegate does not support script values.
CA:Render:Server:port_set (): mach_port_mod_refs () returned error 0x%x
unable to find bootstrap server
unable to register bootstrap port %s: %x
com.apple.coreanimation.render-server
CoreAnimation: mach_msg returned 0x%x for retry with size:%zu
Couldn't allocate buffer of %zu bytes for message!
CoreAnimation: mach_msg returned 0x%x!
CA::Render::DeallocQueue
tint
(pixel-buffer %c%c%c%c [%d %d])
oglFlip
CAImageProvider: %.3gMB cached (%.3gMB purgeable); idle %.3gs -> %.3gs
(image-provider [%d %d] [%d %d] [%d %d]
(fillColor 
(fillColor #%08x 
defaultDisplay
CARenderServerBufferRef is now a CF type. Please use CFRetain/CFRelease instead of CARenderServerDestroyBuffer!
CARenderServerBuffer
%s display:
Total Frames:
Skipped Frames:
Total Cloned Frames:
Skipped Cloned Frames:
Non-Dirty Frames:
<CARenderServerBuffer %p>
CA_FORCE_LOCAL_SERVER
com.apple.CARenderServer
ogl-metal.mm
Failed to allocate %u-byte Metal buffer
com.apple.QuartzCore
com.apple.coreanimation.mtl_submission
com.apple.coreanimation.mtl_completion
Failed to create MTLCommandQueue
Mismatched MTLCommandQueue and MTLDevice
Metal.Performance
com.apple.coreanimation.mtl_dealloc
CoreAnimation Renderer
MetalContext
quartzcore_bundle != nil
metallib
metallib_path != nil
%s: %s
yyyyMMdd-HHmmssSSS
CoreAnimation-%@.gputrace
Capturing %d GPU frames to %s
Unable to capture to GPU trace file: %s
Capture to a GPU trace file is not supported. Try setting env var: METAL_CAPTURE_ENABLED=1
Finished capturing GPU frames
Can't run metal against null surface
clear_region
surf != nullptr
v16@?0@"<MTLCommandBuffer>"8
init_state
current_surface () && "no such thing as current fbo"
window_bounds
0 && "no bound surface?"
function_uniform
total_elements <= kMaxFunctionUniformSize * 4
get_pipeline_spec
layout == VertexLayout_Surface
surf->backing_attachment == 0
spec.fragment.blend_function == OGL_BLEND_NONE
lift_blend_function
!fragment.generic
push_blend_function
fragment.blend_function == OGL_BLEND_NONE
%03d
%02d
%01d
%04d
%@%s%@%s%@%s%@
%@_%@
get_generic
texture_function_info[texture_function].is_fixed ()
fc_generic
fc_vertex_layout
fc_framebuffer_fetch
fc_framebuffer_sample
fc_attachment_count
fc_has_lod_bias
fc_has_noise_scale
fc_has_ycbcr_matrix
fc_has_gamma_luts
fc_has_asg_77_weights
fc_has_noise_tex
fc_has_color_params
fc_has_attachment_%d
fc_texture_function
fc_blend_function
fc_destination_function
fc_image_count
fc_dest_index
fc_dest_count
fc_noise_width
fc_clamp_color
fc_extended_range
fc_unbounded_range
fc_debug_xr
fc_has_premultiply
fc_has_hdr_scale
fc_has_edr_factor
fc_outputs_velocity
fc_image_function%d
fc_coord_function%d
fc_plane_count%d
fc_texcoord_count%d
fc_memoryless_index%d
fc_filter%d
fc_color_inputs%d
fc_color_opcodes%d
fc_color_opaque%d
fc_has_color_trc%d
fc_has_color_cube%d
fc_has_image_%d%c
type == VertexShader::Type_Fixed
fc_base_color
get_pipeline
pipeline && pipeline->is_complete ()
_lph
_lpf
fixed_frag_lph_cph
fixed_frag_lph_cpf
fixed_frag_lpf_cpf
create_fragment_shader
function_name != nil
function=%s spec=%s
frag_
fixed_vert_lph_spc
fixed_vert_lph_gen
fixed_vert_lpf_spc
fixed_vert_lpf_gen
vert_
Specializing shader function %s for %s with constant values %s
Loading shader function %s for %s
Building render pipeline %s with descriptor %s
%s%s%s%s%s%s%s
com.apple.coreanimation.pipelines
Metal.Pipelines
Metal.Pipelines.Stall
draw_
spec=%s
draw
current_metal_surface () != nullptr
draw_elements
mode != OGL_PRIMITIVE_QUADS
get_texture_function() < OGL_TEX_PATH_FIRST || get_texture_function() > OGL_TEX_PATH_LAST
draw_lines
draw_points
stroke_lines
get_texture_function () == OGL_TEX_STROKE_LINE
draw_path_cubics
get_texture_function() == OGL_TEX_PATH_CUBIC
draw_path_rects
get_texture_function() == OGL_TEX_PATH_RECT
draw_path_lines
get_texture_function () == OGL_TEX_PATH_STROKE_LINE
draw_path_curves
get_texture_function () == OGL_TEX_PATH_STROKE_CURVE
draw_path_joins
get_texture_function () == OGL_TEX_PATH_STROKE_MITER_JOIN || get_texture_function () == OGL_TEX_PATH_STROKE_ROUND_JOIN
draw_axis_aligned_rects
get_texture_function () == OGL_TEX_PATH_CLEAR || get_texture_function () == OGL_TEX_PATH_BLIT || get_texture_function () == OGL_TEX_PATH_BLIT_EO || get_texture_function () == OGL_TEX_ATTACHMENT_CLEAR
draw_buffer_image_rects
get_texture_function () == OGL_TEX_BUFFER_IMAGE_BLIT
draw_apl_dimming_factor
get_texture_function () == OGL_TEX_APL_DIMMING
encode_fragment_uniforms
uintptr_t (dst) - uintptr_t (_encoded.frag_uniform) <= uniform_size
encode_uniform_image_arg
rs->op >= RenderState::distance_fill && rs->op <= RenderState::distance_outer_stroke
encode_uniform_function_args
!tex_info.arg && tex_info.layout.fields[0].count == 0
noise
encode_draw
instance_count == 1
set_destination_textures
current_surface () == nullptr
count <= MAX_COLOR_ATTACHMENTS
%zu by %zu iosurface is too large for GPU
Unsupported IOSurface pixel format: %.4s
Unable to create MTLTexture for destination IOSurface
set_metal_state
_command_buffer == nil
_encoder == nil
!surf->needs_clear
Compiling render pipeline: %s
Resulting pipeline state: %p (flags=%s)
Compiling fragment shader: %s
Resulting function: %p
Compiling vertex shader: %s
Unrecognized shader spec: %s
create_texture
Failed to allocate MTLTexture
com.apple.coreanimation.image
update_image
false && "1D textures unimplemented"
Failed to allocate MTLTexture from IOSurface 0x%x. Row bytes (%ld) not %ld aligned.
Failed to allocate MTLTexture from IOSurface 0x%x. Descriptor row bytes (%ld) larger than surface row bytes (%ld).
Failed to allocate MTLTexture from IOSurface 0x%x. Texture block bytes (%ld) not equal to surface block bytes (%ld).
update_surface
tex->dimensions == 2 && "surface textures must be 2D"
Failed to allocate MTLTexture from IOSurface 0x%x.
com.apple.coreanimation.surface
generate_mipmaps_for_texture
tex->textures[0] && "nil mtl texture?"
%d by %d image is too large for GPU, ignoring
Image stride is too large for GPU, ignoring
delete_image
state_image_binding (_state, tex_unit) != tex
gaussian_texture
Surface %d x %d is too large
Failed to allocate %dx%d surface texture.
Descriptor (0x%llx) and texture (0x%llx) protection mismatch!
Surface from iosurface %d x %d is too large
com.apple.coreanimation.reinterpreted-surface
Target of memoryless surface not bound, possible misuse.
compute_apl
sum_apl_and_compute_dimming_factor
function=%s
pipeline with function=%s
Failed to allocate Metal buffer
Failed to allocate uniform Metal buffer
stop_encoders
!memoryless_in_use ()
Command buffer allocation failed!
MTLCommandBuffer %p, protection 0x%llx, label %s, error = %s
Unable to start render command encoder
Unable to start blit command encoder
average_luma_surface
!surf->protection_options
Ignoring [%d x %d] invalid surface dimensions
Unexpected framebuffer format %c%c%c%c
Failed to allocate [%d x %d] %c%c%c%c framebuffer %s
Metal failed to load vertex function
Metal failed to load fragment function
Metal failed to load library
Metal failed to build render pipeline
Metal failed to load pipeline library
Metal failed to specialize vertex function
Metal failed to specialize fragment function
Metal failed to load render pipeline
Metal failed to load compute shader
Metal failed to build compute pipeline
Invalid TextureEdgeMode 0x%x
downsample_4_frag
downsample_6_frag
downsample_8_frag
upsample_frag
downsample_blur_2_frag
downsample_blur_4_frag
narrow_blur_7_frag
narrow_blur_11_frag
narrow_blur_15_frag
narrow_blur_19_frag
narrow_blur_23_frag
narrow_blur_27_frag
single_pass_blur_3
variable_blur_downsample_frag
variable_blur_frag
linear_blur_frag
axial_shading_frag
radial_shading_frag
radial_complex_shading_frag
conic_shading_frag
home_affordance_base
alpha_threshold
p3_clamp
alpha_linear_premultiply
edr_scale
harmony
display_overdrive_lut_gen
display_overdrive_srgb_sampler
display_overdrive_linearize
luma_boost
stroke_line_frag
path_cubic_frag
path_rect_frag
path_stroke_line_frag
path_stroke_curve_frag
path_stroke_miter_join_frag
path_stroke_round_join_frag
path_clear_frag
path_blit_frag
path_blit_frag_eo
buffer_image_blit_frag
asg_frag
asg_75_frag
asg_50_frag
attachment_clear_frag
apply_apl_dimming
A008
L008
L016
LA88
L555
2C16
2C0h
RGBA
BGRA
0081
R10k
l10r
l64r
RGhA
RGfA
0556
set_pipeline_state
!is_complete ()
std_vert0
std_vert1
upsample_vert
downsample_blur_vert
variable_blur_vert
stroke_line_vert
path_cubic_vert
path_rect_vert
path_stroke_line_vert
path_stroke_curve_vert
path_stroke_miter_join_vert
path_stroke_round_join_vert
path_blit_vert
buffer_image_blit_vert
asg_vert
create_image_binding
plane < OGL_MAX_PLANES_PER_IMAGE
Cannot cast linear FP16 texture to sRGB sampler variant
message
CAML
colorspace
kCGColorSpace%s
Unable to create colorspace: %s
sRGB
create_sax_vtable
CAMLContext.cpp
!_sax_vtable
<script> element not supported
http://www.apple.com/CoreAnimation/1.0
Unknown namespace URI: %s
script
Ignoring element `%s'
caml
Root element must be `caml'
`p' element must have `key' attribute
type
Unknown type `%s'
Invalid type `%s' (need `%s')
object
Unknown value element `%s'
`o' element must have `type' attribute
final
mica_expanded
Ignoring untyped attribute `%s'
Unknown object id: `%s'
scriptComponents
delegate
Undefined property value for key `%s'
+[CAFenceHandle _newFenceFromServer:isObservable:]
CAFenceHandle.mm
MACH_PORT_VALID (port)
-[CAFenceHandle dealloc]
[self isInvalidated]
-[CAFenceHandle init]
-[CAFenceHandle encodeWithCoder:]
[coder isKindOfClass:[NSXPCCoder class]]
<CAFenceHandle:%p name=%llx fence=%llx usable=%@>
<CAFenceHandle:%p name=%llx usable=%@>
alloc_node
render-layer-node.cpp
mid_bitmap != kAllUsed
low_bitmap != kAllUsed
@index(%d)
@index(
com.apple.GL.event.frameboundary.end
com.apple.coreanimation.display.%s
com.apple.coreanimation.display
%f %x "%s" (%p): replacing %p (eval %u; frames %u):
%f %x "%s" (%p): adding %p:
%f %x "%s" (%p): not adding %p:
%f %x "%s" (%p): removing all:
%p (eval %u; frames %u):
%f %x "%s" (%p): removing %p (eval %u; frames %u):
%f %x "%s" (%p): collecting %p (t %f; speed %g; eval %u; frames %u):
CoreAnimation: ignoring invalid path
(path
%g %g m
%g %g l
%g %g %g %g q
%g %g %g %g %g %g c
%s - unexpected path type %u
%s - expected %u points, but decoded %u points
(function %s)
suspiciously large function size: %zu count: %zu
suspiciously large interpolations: %zu count: %zu
%s - _values = NULL
InterpolatedFunction
%s - _locations = NULL
%s - _interpolations = NULL
%s - width = %u
Gradient
com.apple.coreanimation.imageprovider.concurrent
CAImageProvider
<CAImageProvider %p: %u x %u>
sublayers
objectId
beforeObjectId
beforeObject
keyPath
{%@:%p %@:%p %@ %@ before %@}
CA_DISABLED_EXTENSIONS
CoreAnimation: disabling OpenGL extension %s
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0, texmat1, texmat2;
uniform highp vec4 texmatD;
uniform highp vec4 texmatW;
uniform highp vec4 chroma_matrix%d;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1;
attribute mediump vec3 vertex_normal;
varying lowp vec4 color;
varying highp vec2 texcoord%d_0;
varying highp vec2 texcoord%d_%d;
varying highp vec3 texcoordD;
varying highp vec3 texcoordN;
void main() {
  gl_Position = vertex_matrix * vertex_position;
  color = vertex_color;
  texcoord%d_0 = vertex_texcoord%d * texmat%d.xy + texmat%d.zw;
  texcoord%d_%d = texcoord%d_0 * chroma_matrix%d.xy + chroma_matrix%d.zw;
  texcoord%d_%d = texcoord%d_0;
  texcoord%d_%d = (vertex_texcoord%d + vec2(%g, %g)) * texmat%d.xy + texmat%d.zw;
  texcoordD = vec3(gl_Position.xy * texmatD.xy + texmatD.zw * gl_Position.w, gl_Position.w);
  texcoordN = vec3(gl_Position.xy * texmatW.xy + texmatW.zw * gl_Position.w, gl_Position.w * float(NOISE_SIZE));
%Wlowp vec4 R = %s;
%Wlowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
%Wlowp float DaSa = D.a*S.a;
%WS = S/max(S.a, 0.005);
%WD = D/max(D.a, 0.005);
%WR.rgb += %s * DaSa;
%WR.rgb += %s;
%WR.a += DaSa;
%WR.rgb = min(R.rgb, R.a);
inline_color_shader
ogl-gl.cpp
opaque && "4DLUT must be opaque!"
    lowp vec4 c = s%d, t;
    lowp vec3 c = s%d.rgb, t;
    c = c / max(s%d.a, .005);
    c = c.r * colorP%d[%d].rgb + c.g * colorP%d[%d].rgb + c.b * colorP%d[%d].rgb + colorP%d[%d].rgb;
    t = abs(c);
    t = pow(t, colorP%d[%d].rgb);
    t = pow(t, colorP%d[%d].rgba);
    c.a = c.a < 0.0 ? t.a * -1.0 : t.a;
    c.r = c.r < 0.0 ? t.r * -1.0 : t.r; c.g = c.g < 0.0 ? t.g * -1.0 : t.g; c.b = c.b < 0.0 ? t.b * -1.0 : t.b;
    t.r = t.r < -colorP%d[%d].r / colorP%d[%d].r ? 0.0 : pow (colorP%d[%d].r * t.r + colorP%d[%d].r, colorP%d[%d].r)
    t.g = t.g < -colorP%d[%d].g / colorP%d[%d].g ? 0.0 : pow (colorP%d[%d].g * t.g + colorP%d[%d].g, colorP%d[%d].g)
    t.b = t.b < -colorP%d[%d].b / colorP%d[%d].b ? 0.0 : pow (colorP%d[%d].b * t.b + colorP%d[%d].b, colorP%d[%d].b)
    t.a = t.a < -colorP%d[%d].a / colorP%d[%d].a ? 0.0 : pow (colorP%d[%d].a * t.a + colorP%d[%d].a, colorP%d[%d].a)
    c.r = c.r < 0.0 ? t.r * -1.0: t.r; c.g = c.g < 0.0 ? t.g * -1.0 : t.g; c.b = c.b < 0.0 ? t.b * -1.0 : t.b;
    t.r = t.r < -colorP%d[%d].r / colorP%d[%d].r ? colorP%d[%d].r : pow (colorP%d[%d].r * t.r + colorP%d[%d].r, colorP%d[%d].r) + colorP%d[%d].r
    t.g = t.g < -colorP%d[%d].g / colorP%d[%d].g ? colorP%d[%d].g : pow (colorP%d[%d].g * t.g + colorP%d[%d].g, colorP%d[%d].g) + colorP%d[%d].g
    t.b = t.b < -colorP%d[%d].b / colorP%d[%d].b ? colorP%d[%d].b : pow (colorP%d[%d].b * t.b + colorP%d[%d].b, colorP%d[%d].b) + colorP%d[%d].b
    t.a = t.a < -colorP%d[%d].a / colorP%d[%d].a ? colorP%d[%d].a : pow (colorP%d[%d].a * t.a + colorP%d[%d].a, colorP%d[%d].a) + colorP%d[%d].a
    t.r = t.r < colorP%d[%d].r ? colorP%d[%d].r * t.r : pow(colorP%d[%d].r * t.r + colorP%d[%d].r,colorP%d[%d].r);
    t.g = t.g < colorP%d[%d].g ? colorP%d[%d].g * t.g : pow(colorP%d[%d].g * t.g + colorP%d[%d].g,colorP%d[%d].g);
    t.b = t.b < colorP%d[%d].b ? colorP%d[%d].b * t.b : pow(colorP%d[%d].b * t.b + colorP%d[%d].b,colorP%d[%d].b);
    t.a = t.a < colorP%d[%d].a ? colorP%d[%d].a * t.a : pow(colorP%d[%d].a * t.a + colorP%d[%d].a,colorP%d[%d].a);
    t.r = t.r < colorP%d[%d].r ? colorP%d[%d].r * t.r + colorP%d[%d].r : pow (colorP%d[%d].r * t.r + colorP%d[%d].r, colorP%d[%d].r) + colorP%d[%d].r;
    t.g = t.g < colorP%d[%d].g ? colorP%d[%d].g * t.g + colorP%d[%d].g : pow (colorP%d[%d].g * t.g + colorP%d[%d].g, colorP%d[%d].g) + colorP%d[%d].g;
    t.b = t.b < colorP%d[%d].b ? colorP%d[%d].b * t.b + colorP%d[%d].b : pow (colorP%d[%d].b * t.b + colorP%d[%d].b, colorP%d[%d].b) + colorP%d[%d].b;
    t.a = t.a < colorP%d[%d].a ? colorP%d[%d].a * t.a + colorP%d[%d].a : pow (colorP%d[%d].a * t.a + colorP%d[%d].a, colorP%d[%d].a) + colorP%d[%d].a;
    c.%c = texture2D(texture%d, vec2(c.%c*colorP%d[%d].%c, colorP%d[%d].%c)).r;
    mediump vec2 c_st = vec2(c.r * colorP%d[%d].x + colorP%d[%d].y, 0.5);
    c = texture2D(texture%d, c_st).rgb;
    c = c * colorP%d[%d].x + colorP%d[%d].y;
    c = texture3D(texture%d, c).rgb;
    c.b = c.b * colorP%d[%d].z;
    lowp float b_mix = fract(c.b);
    c.b = floor(c.b) * colorP%d[%d].w;
    mediump vec2 c_st = vec2(c.r, c.g);
    c_st.r = c_st.r * colorP%d[%d].x + colorP%d[%d].y;
    c_st.g = c_st.g * colorP%d[%d].x * colorP%d[%d].w + colorP%d[%d].y * colorP%d[%d].w + c.b;
    lowp vec3 c0 = texture2D(texture%d, c_st).rgb;
    lowp vec3 c1 = texture2D(texture%d, c_st + vec2(0., colorP%d[%d].w)).rgb;
    c = mix(c0, c1, b_mix);
    mediump vec3 c_stp = c.rgb;
    c.a = c.a * colorP%d[%d].z;
    lowp float a_mix = fract(c.a);
    c.a = floor(c.a) * colorP%d[%d].w;
    c_stp.r = c_stp.r * colorP%d[%d].x + colorP%d[%d].y;
    c_stp.g = c_stp.g * colorP%d[%d].x + colorP%d[%d].y;
    c_stp.b = c_stp.b * colorP%d[%d].x * colorP%d[%d].w + colorP%d[%d].y * colorP%d[%d].w + c.a;
    lowp vec3 c0 = texture3D(texture%d, c_stp).rgb;
    lowp vec3 c1 = texture3D(texture%d, c_stp + vec3(0., 0., colorP%d[%d].w)).rgb;
    c = vec4(mix(c0, c1, a_mix), 1.);
    s%d.rgb = c * s%d.a;
    s%d = vec4(c.rgb, 1.);
mediump
lowp
2DRect
#extension GL_OES_standard_derivatives : require
#extension GL_EXT_shader_framebuffer_fetch : require
uniform lowp vec4 function_arg;
uniform lowp vec4 coord_arg;
uniform mediump float noise_scale;
uniform %s sampler%s texture%d;
uniform lowp sampler%s texture%d;
uniform lowp vec4 blend_color0;
uniform lowp vec4 blend_color1;
uniform mediump vec4 colorP%d[%d];
uniform mediump mat3 ycbcr_matrix%d;
uniform mediump vec3 ycbcr_bias%d;
uniform mediump vec4 render_state;
uniform lowp vec3 color_matrix[3];
uniform lowp vec3 color_matrix[4];
uniform lowp vec4 color_matrix[5];
uniform lowp vec4 color_dodge;
uniform lowp vec4 color_lighten;
uniform lowp float reversed;
uniform lowp vec4 color_burn;
uniform lowp vec4 color_darken;
uniform lowp vec4 curves[4];
void main(void) {
CA_EMPTY_SHADERS
  gl_FragData[0] = vec4(0.0);
  return;
highp vec2 texcoord0_0 = vec2(gl_PointCoord.s, 1.0 - gl_PointCoord.t);
  lowp vec4 d%d = texture%sProj(texture%d, texcoordD);
  lowp vec4 d%d = gl_LastFragData[%d];
texcoord
  mediump vec2 tc%d_%d = radialCoord(texcoord%d_%d);
  mediump vec2 tc%d_%d = conicCoord(texcoord%d_%d);
  mediump vec2 tc%d_%d = fract(texcoord%d_%d) * coord_arg.xy + coord_arg.zw;
assemble_fragment_shader
i > 0
key->function.f.image_func[i - 1] == OGL_IMAGE_IDENTITY || key->function.f.image_func[i - 1] == OGL_IMAGE_DEST
tlum
  mediump vec2 tlum%d_%d = vec2(dot(%c%d.rgb, vec3(.2125, .7154, .0721)) * texcoord%d_%d.y + texcoord%d_%d.x, 0.5);
  mediump vec2 tc%d_%d = clamp(texcoord%d_%d, coord_arg.xy, coord_arg.zw);
  %s vec4 %c%d = texture%s(texture%d, %s%d_%d);
  %s vec4 %c%d;
    highp vec4 f;
    f.xy = fract(%s%d_0 / texmat%d.xy);
    f.xy = fract(%s%d_0);
    f.zw = vec2(1.) - f.xy;
    f = f.xzxz * f.yyww;
    %c%d = texture%s (texture%d, %s%d_%d) * f.w;
    %c%d = texture%s (texture%d, %s%d_%d) * f.z + %c%d;
    %c%d = texture%s (texture%d, %s%d_%d) * f.y + %c%d;
    %c%d = texture%s (texture%d, %s%d_%d) * f.x + %c%d;
  lowp vec4 s%d = vec4(t%d.rgb, 1.);
  lowp vec4 s%d = t%d.yxwz;
  lowp vec4 s%d = vec4(t%d.yxw, 1.);
  lowp vec4 s%d = t%d.zyxw;
  lowp vec4 s%d = vec4(t%d.zyx, 1.);
  lowp vec4 s%d = t%d.wzyx;
  lowp vec4 s%d = vec4(t%d.wzy, 1.);
  lowp vec4 s%d = vec4(0., 0., 0., t%d.a);
  lowp vec4 s%d = squareImage(%s%d_0);
  lowp vec4 s%d = circleImage(%s%d_0);
  lowp vec4 s%d = supercircleImage(%s%d_0);
  lowp vec4 s%d = vec4(0.);
  lowp vec4 s%d = vec4(t%d.r);
  lowp vec4 s%d = vec4(t%d.a);
  lowp vec4 s%d = vec4(clamp(ycbcr_matrix%d * vec3(t%d.r + ycbcr_bias%d.x, t%d.rg + ycbcr_bias%d.yz), 0., 1.), 1.);
  lowp vec4 s%d = t%d*vec4(2.0) + vec4(-0.75);
  s%d = vec4(s%d.zyx, 1.0);
  lowp vec4 s%d = renderImage(t%d.r);
  lowp vec4 s%d = vec4(1.) - t%d;
  lowp vec4 s%d = vec4(t%d.rrr, 1.h);
  lowp vec4 s%d = t%d.rrrg;
  lowp vec4 s%d = vec4(1.0);
  lowp vec4 s%d = t%d.gggg;
  lowp vec4 s%d = t%d.bbbb;
  lowp vec4 s%d = d0;
  lowp vec4 s%d = vec4(clamp(ycbcr_matrix%d * vec3(t%d.yzw + ycbcr_bias%d.xyz), 0., 1.)*t%d.x , t%d.x);
  lowp vec4 s%d = vec4(clamp(ycbcr_matrix%d * vec3(t%d.g + ycbcr_bias%d.x, t%d.rb + ycbcr_bias%d.yz), 0., 1.), 1.);
  lowp vec4 s1 = color;
  lowp vec4 s2;
    lowp vec4 S = s1, D = d0;
    s2 = R; s1 = d0;
  gl_FragData[0] = %s;
    lowp vec4 S = gl_FragData[%d];
    lowp vec4 D = d%d;
    gl_FragData[%d] = R;
    mediump vec3 n = texture%sProj(texture%d, texcoordN).xyz;
    n = (n - .5) * noise_scale;
    lowp vec3 c = gl_FragData[0].rgb + n*gl_FragData[0].a;
    gl_FragData[0].rgb = clamp(c, 0., gl_FragData[0].a);
gl_FragData[0] = %s;
%08x %08x vertex shader:
%s%s---
%08x %08x fragment shader:
%s%s---
texture%d
vertex_matrix
blend_color0
blend_color1
texmat0
texmat1
texmatD
noise_scale
texmatW
colorP0
colorP1
ycbcr_matrix0
ycbcr_matrix1
ycbcr_bias0
ycbcr_bias1
chroma_matrix0
chroma_matrix1
render_state
color_matrix
offset
weight
axis
divide
minmax
bgcolor
minmax_dir
args
color_dodge
color_lighten
reversed
color_burn
color_darken
curves
function_arg
coord_arg
GL_NO_ERROR
GL_INVALID_ENUM
GL_INVALID_VALUE
GL_INVALID_OPERATION
GL_STACK_OVERFLOW
GL_STACK_UNDERFLOW
GL_OUT_OF_MEMORY
GL_INVALID_FRAMEBUFFER_OPERATION;
gl_texture_filter
filter < OGL_TEXTURE_FILTER_COUNT
vec4(0.)
S + D*(1. - S.a)
S*D.a
S*(1. - D.a)
S*D.a + D*(1. - S.a)
S*(1. - D.a) + D
D*S.a
D*(1. - S.a)
S*(1. - D.a) + D*S.a
S*(1. - D.a) + D*(1. - S.a)
S + D
D - S
S - D
S + D*(1 - S)
min(S, D)
max(S, D)
vec4 (D.rgb + S.rgb, S.a + D.a * (1. - S.a))
vec4 (D.rgb + S.rgb - (2. * D.rgb * S.rgb), S.a + D.a * (1. - S.a))
vec4(mix(D.rgb, S.rgb, D.a), 1.0)
vec4(D.rgb, S.a)
vec4(D.rgb, S.a * D.a)
S + D;
R.a = min(1., R.a);
R.rgb = R.a - S.a - D.a + R.rgb
D*(1. - S.a) + S*(1. - D.a) + D*S
mix(2.*D.rgb*S.rgb, 2.*(S.rgb*D.a + D.rgb*(S.a - S.rgb)) - S.a*D.a, step(.5*D.a, D.rgb))
min(D.rgb*S.a, S.rgb*D.a)
max(D.rgb*S.a, S.rgb*D.a)
min(S.aaa, D.rgb*S.a*S.a/max(S.a - S.rgb, .005))
step(.005, S.rgb) * (D.a*S.a - S.a*S.a*(D.a - D.rgb)/max(S.rgb, .005))
2.*D.rgb*S.rgb - (D.rgb / max(D.a, .005))*D.rgb*(2.*S.rgb - S.a)
mix(2.*D.rgb*S.rgb, S.a*D.a - 2.*(D.a - D.rgb)*(S.a - S.rgb), step(.5*S.a, S.rgb))
abs(D.rgb*S.a - S.rgb*D.a)
S.rgb*D.a - D.rgb*S.a
S.rgb*D.a / max(D.rgb*S.a, .005)
D.rgb*S.a - D.a*(S.a - S.rgb)
D.rgb*S.a - D.a*(S.a - 2.*S.rgb)
mix(min(D.rgb*S.a, 2.*S.rgb*D.a), max(D.rgb*S.a, 2.*S.rgb*D.a - D.a*S.a), step(.5*S.a, S.rgb))
vibrantDark(S, D)
vibrantLight(S, D)
vibrantDarkReversed(S, D)
vibrantLightReversed(S, D)
darkenSover(S, D)
lightenSover(S, D)
setLum(setSat(S.rgb, sat(D.rgb)), lum(D.rgb))
setLum(setSat(D.rgb, sat(S.rgb)), lum(D.rgb))
setLum(S.rgb, lum(D.rgb))
setLum(D.rgb, lum(S.rgb))
vec4(S.rgb * D.a + D.rgb * (1. - D.a * S.a), 1.0)
color
s0 / s0.a
color * s0
color * (s0 / s0.a)
color * s0 * s1.a
color * s0 * (1.0 - s1.a)
mix(s1, s0, color.a)
mix(color, s0, function_arg.x)
mix(color * s0.a, s0, function_arg.x)
s0 + s1
color * s0.a
color * (1.0 - s0.a)
vec4(color.rgb * color.a, color.a)
mix(s1, d0, s0.a)
mix(s1, s2, s0.a)
vec4(s0.r * color_matrix[0] + s0.g * color_matrix[1] + s0.b * color_matrix[2], s0.a)
vec4(s0.r * color_matrix[0] + s0.g * color_matrix[1] + s0.b * color_matrix[2] + s0.a * color_matrix[3], s0.a)
colorMatrix4x4Bias(s0)
vec4((s0.r / s0.a) * color_matrix[0] + (s0.g / s0.a) * color_matrix[1] + (s0.b / s0.a) * color_matrix[2], 1.)
vec4((s0.r / s0.a) * color_matrix[0] + (s0.g / s0.a) * color_matrix[1] + (s0.b / s0.a) * color_matrix[2] + color_matrix[3], 1.)
colorMatrix4x4BiasDivideAlpha(s0)
perlinBias(s0, function_arg.x)
vibrantDark(s0, d0)
vibrantLight(s0, d0)
mix(s0, s1, function_arg)
luminanceCurve(s0, function_arg, color.a)
colorCurves(s0)
gl_FragData[0].aaaa
vertex_position
vertex_color
vertex_texcoord0
vertex_texcoord1
vertex_point_size
stealthMode
forceDisplay
kCGContextFlush
kCGContextSynchronize
kCGContextWait
kCGContextClear
kCGContextErase
CA Whippet GetLayer
CAWindowServerSurface
targetId
target
CALayer
<CAStateTransitionElement target=<%@: %p> key=%@ %@>
suspiciously long string: %zu
"%s"
-[CAMetalDrawable releasePrivateReferences:]
CAMetalLayer.mm
priv
[CAMetalLayerDrawable texture] should not be called after already presenting this drawable. Get a nextDrawable instead.
device
framebufferOnly
drawableSize
EDRMetadata
protectionOptions
com.apple.coreanimation.CAMetalLayerTimeoutQueue
CAMetalLayer ignoring invalid setDrawableSize width=%f height=%f
CAMetalLayerInvalid
invalid pixel format %lu
[CAMetalLayer nextDrawable] returning nil because device is nil.
[CAMetalLayer nextDrawable] returning nil because allocation failed.
[CAMetalLayer nextDrawable] returning nil due to 1 second timeout. Set allowsNextDrawableTimeout to keep retrying.
[CAMetalLayer newDrawable] is deprecated. Please use [CAMetalLayer nextDrawable] instead.
CoreAnimation: setting `contents' on CAMetalLayer may result in undefined behavior
CAMetalLayerInvalidMaximumDrawableCount
failed trying to set maximumDrawableCount to %lu outside of the valid range of [2, 3]
presentsWithTransaction
displaySyncEnabled
allowsNextDrawableTimeout
nonDefaultColorspace
fenceEnabled
serverSyncEnabled
exclusiveMode
[CAMetalLayer setInputTime:] - non-zero time already exists!
Each CAMetalLayerDrawable can only be presented once!
Cannot present CAMetalDrawable because device is nil.
unsupported extended range format
CAMetalLayer Display Drawable
%s - _contentsRect size %u
EmitterCell
v16@?0Q8
(emitter-behavior %s
position.x
position.y
position.z
velocity.x
velocity.y
velocity.z
mass
rotation
spin
scale
scaleSpeed
birthRate
color.red
color.green
color.blue
color.alpha
ogl-performance-hud.cpp
register_counter
counter_index < _num_counters
to_string
%.2fms
%lld
0x%llx
<1%%
%lld%%
%.2fW
%lldmW
%.*f
0 && "unsupported counter type!"
draw_string
ogl-debug-renderer.h
text
draw_graph2d
_history
(match-property-animation
(match-move-animation
(sourcePoints 
foregroundColor
Color matching limited to 3-stage compact format (TRC -> NxM/LUT -> TRC), falling back to cube LUT
No support for more than one NxM LUT, falling back to cube LUT
B96@?0{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}8^{__CFDictionary=}88
Stage = %ld, %ld TRCs
TRCs are not the same for each color channel, falling back to cube LUT
B112@?0{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}8q88q96^q104
B104@?0{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}8q88q96
Stage = %ld, %zux%zu LUT, %zu grid points
%zux%zu LUT not supported.
unsupported NxM LUT data format
kCGPQEOTFTable
kCGPQEOTFTableSize
kCGHLGInvOETFTable
kCGHLGInvOETFTableSize
kCGPQEOTFOpticalScale
kCGHLGInvOETFOpticalScale
kCGPQInvEOTFOpticalScale
kCGHLGOETFOpticalScale
kCGSkipToneMappingForBT2100
Failed to iterate CGColorConverter 
'%s' --> '%s'
CGColorConverter:
    %d stages
    %d input components
    %d output components
    %d TRCs
    %d Matrices
    %d NxM LUTs
    TRC channel %d --> TRCs[%ld], Table: entries = %zu
    TRC channel %d --> TRCs[%ld], Type0: Y = X^%f 
    TRC channel %d --> TRCs[%ld], Type1: Y = (%g*X+%g)^%g [X >= %g],  Y = 0 [X < %g] pure power original: %s
    TRC channel %d --> TRCs[%ld], Type2: Y = (%g*X+%g)^%g + %f [X >= %g],  Y = %g [X < %g] pure power original: %s
    TRC channel %d --> TRCs[%ld], Type3: Y = (%g*X+%g)^%g [X >= %g],  Y = %g*X [X < %g] pure power original: %s
    TRC channel %d --> TRCs[%ld], Type4: Y = (%g*X+%g)^%g + %g [X >= %g], Y = %g*X + %g [X < %g] pure power original: %s
    TRC channel %d --> TRCs[%ld], PQ InvEOTF (engamma)
    TRC channel %d --> TRCs[%ld], PQ EOTF (degamma)
    TRC channel %d --> TRCs[%ld], HLG OETF (engamma)
    TRC channel %d --> TRCs[%ld], HLG InvOETF (degamma)
lut_index_from_trc_index
CAColorProgram.cpp
lut_index >= 0
Stage = %ld matrix %ld
    %g %g %g %g
    %g %g %g %g
    %g %g %g %g
ChipID
Aixt/MEN2O2B7f+8m4TxUA
CAEnableDeepFramebuffer
CA_FORCE_TIMER
CAEnableIOSurfaceCompression
IOSurface Compression Enabled: %s
AoKnINTLPoKML3ctoP0AZg
universal-buffer-compression
CA_FORCE_P3_TRACKING
CADisableMinimumFrameDurationOnPhone
ji56BO1mUeT7Qg9RO7Er9w
CAEnableDisplayICC
CAEnableHarmonyXYZ
CADisplay Harmony Matrix is XYZ: %s
(compressed-image [%d %d] [%d] %s
Incorrect CompressedImage levels: %u
Failed to map %ld bytes with port = %u, protection = %u, err = 0x%x
Failed to decode CompressedImage from data ptr: %p, len: %ld
CompressedImage port is MACH_PORT_NULL!
PVRTC_4
PVRTC_2
ASTC_4x4
ASTC_5x4
ASTC_5x5
ASTC_6x5
ASTC_6x6
ASTC_8x5
ASTC_8x6
ASTC_8x8
ASTC_10x5
ASTC_10x6
ASTC_10x8
ASTC_10x10
ASTC_12x10
ASTC_12x12
BC4_Unorm
BC4_Snorm
BC5_Unorm
BC5_Snorm
BC6_Unorm
UNKNOWN
value
RGBA10XR
Gray8
Automatic
bottom
topLeft
topRight
bottomLeft
bottomRight
resize
resizeAspect
resizeAspectFill
nearest
cubic
trilinear
lanczos
linearlySampledLinear
asg77
circular
continuous
stretch
repeat
insecure
unrestricted
onOrderIn
onOrderOut
CALAYER_ALLOWS_EDGE_ANTIALIASING
CALayerAllowsEdgeAntialiasing
UIViewEdgeAntialiasing
CALAYER_ALLOWS_GROUP_OPACITY
CALayerAllowsGroupOpacity
UIViewGroupOpacity
CALayerInvalid
layer %@ is a part of cycle in its layer tree
-[CALayer _initWithReference:]
CALayer.mm
[layer isKindOfClass:[self class]]
name = "%@"; 
position = CGPoint (%g %g); 
bounds = CGRect (%g %g; %g %g); 
delegate = %@; 
contents = %@; 
sublayers = (
%s%@
mask = %@; 
%s = %s; 
anchorPoint = CGPoint (0 0); 
contentsScale = %u; 
rasterizationScale = %u; 
; animations = [
%@=%@
layer %@ has a superlayer; so cannot be added to a context
cannot add layer to one context while visible in another
 to (%f, %f)
 to %f
 to [%f %f %f %f; %f %f %f %f; %f %f %f %f; %f %f %f %f]
 to [%f %f %f %f %f %f]
 to (%f, %f, %f, %f)
%@ - changing property %@ in transform-only layer, will have no effect
Transaction (%p) property %s changed %s
Began transaction (%p) change on layer %p for %s, %p
CALayerReadOnly
attempting to modify read-only layer %@
CALayer bounds contains NaN: [%g %g; %g %g]. Layer: %@
CALayerInvalidGeometry
anchorPoint
CALayer position contains NaN: [%g %g]. Layer: %@
position
CoreAnimation: zPosition should be within (-FLT_MAX, FLT_MAX) range.
%@ - calling -hitTest: on transform-only layer
may only -hitTest: a layer or its presentation layer
contentsScale
rasterizationScale
CALayerInvalidTree
expecting model layer not copy: %@
presentationModifiers
replaced layer %@ is not a sublayer of %@
actions
B8@?0
-[%@ display]: Ignoring bogus layer size (%f, %f), contentsScale %f, backing store size (%f, %f)
onDraw
I20@?0@"CALayer"8B16
backgroundColor
CADebug_RedundantLayoutFlash
Redundant layout on %s which took %f ms
onLayout
cornerContents must be a CGImageRef for now!
animations
hidden
needsDisplayOnBoundsChange
needsLayoutOnGeometryChange
masksToBounds
clearsContext
doubleSided
invertsShadow
shadowPathIsBounds
shouldRasterize
rasterizationPrefersDisplayCompositing
preloadsCache
sortsSublayers
flipsHorizontalAxis
canDrawConcurrently
allowsHitTesting
hitTestsContentsAlphaChannel
wantsExtendedDynamicRangeContent
toneMapToStandardDynamicRange
allowsGroupBlending
createsCompositingGroup
allowsEdgeAntialiasing
allowsGroupOpacity
drawsAsynchronously
contentsDither
contentsAlignsToPixels
continuousCorners
cornerContentsMasksEdges
contentsOpaque
hitTestsAsOpaque
literalContentsCenter
contentsContainsSubtitles
inheritsTiming
definesDisplayRegionOfInterest
CALayerAnimations
CALayerAnimationKeys
%s (CALayer)
r^v16@?0@8
v24@?0@8r^v16
B16@?0@8
v20@?0@8B16
c16@?0@8
v20@?0@8c16
C16@?0@8
v20@?0@8C16
s16@?0@8
v20@?0@8s16
S16@?0@8
v20@?0@8S16
i16@?0@8
v20@?0@8i16
I16@?0@8
v20@?0@8I16
q16@?0@8
v24@?0@8q16
Q16@?0@8
v24@?0@8Q16
f16@?0@8
v20@?0@8f16
d16@?0@8
v24@?0@8d16
{CGPoint=dd}16@?0@8
v32@?0@8{CGPoint=dd}16
{CGSize=dd}16@?0@8
v32@?0@8{CGSize=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@?0@8
v48@?0@8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CATransform3D=dddddddddddddddd}16@?0@8
v144@?0@8{CATransform3D=dddddddddddddddd}16
{CGAffineTransform=dddddd}16@?0@8
v64@?0@8{CGAffineTransform=dddddd}16
{CAPoint3D=ddd}16@?0@8
v40@?0@8{CAPoint3D=ddd}16
%*s%@
CoreAnimation: Message::send_message() returned 0x%x - size %zu, # descriptors %zu
CoreAnimation: Message::send_message() returned 0x%x
Encoder size overflow, old size = %zu, extra = %zu
Failed to allocate %zu bytes, requested = %zu, old size = %zu
Cannot send %zu bytes to the server. This exceeds mach ool capabilities!
encode_data_async
render-coding.cpp
len > 0
failed encode_port_make_once : r=%i so=%x t=%x
Decoder has no context! dcid=%x
Context ID mismatch! pcid=%x pseed=%u : heap=%p data=%p data_len=%zu flags=%u dcid=%x t=%f
Context is destroyed! cid=%x
%s (%u) : %s
%s - _buffer_point = %p, len = %zu, _buffer_end = %p
decode_bytes
%s - _buffer_point = %p, _buffer_end = %p
decode_int8
decode_int16
decode_int32
decode_int64
%s - size = %d
decode_shape
%s - failed shape allocation for size %d
%s - max_size = %zu, tag = %zu
decode_data
%s - buf = NULL, size = %zu
%s - _attach_list = %p, type = %u
%s - max_size = %zu, size = %zu
%s - buf = NULL
%s - buf size = %zu
decode_data_async
decode_port
%s - expected disposition = %u, received = %u
%s - ptr = NULL
decode_atom
%s - string = NULL
%s - data = NULL
decode_cfobject
%s - array entries = %zu
%s - value = NULL
%s - dicitionary entries = %zu
%s - key = %p, value = %p
%s - atoms = NULL
decode_keypath
%s - ptr = NULL, required_type = %u, type = %u, id = %llu, error = %u
decode_object
%s - required_type = %u, type = %u
Deserialization of disallowed type: %s, process: %s
Missing entitlement for system layer!
unable to decode object of type %d
%s - ptr == NULL, type = %u
%s - type = %u
decode_array_object
%s - decoded object of unexpected type: %d
%s - code = %d
decode_colorspace
CA_BENCHMARK
CoreAnimation: serialization error from context %x
invalid command: 0x%x, buffer size %zu, offset %zu
CA_IGNORE_MACH_SEND_ERRORS
(cloning-terminator-layer)
v24@?0d8r^d16
CACGContextEvaluator
CoreAnimation: unhandled combiner function: %d
imageQueueCapacity
imageQueueIdentifier
displayRefreshRate
ImageQueueCollectable client message err=0x%x
ImageQueueDidComposite client message err=0x%x
ImageQueueDidPresent client message err=0x%x
CoreAnimation: Warning! CAImageQueueSetOwner() is deprecated and does nothing. Please stop calling this method.
CAImageQueue
(image-queue
 0x%016llx
%s%s%s%s%s%s
 not-visible
 async
 enable-dpb
 protected
 reduced-polling
 changed
(generation 0x%08x)
(rotationFlags %d)
(edr-deadline %f)
(enhancementMode %d)
(samples
iosurface
buffer
unknown
unconsumed
displayed
consumed
flushed
(0x%llx %s 0x%x, [%d %d; rot %d] %f (generation 0x%08x) (detach 0x%016llx) %s%s%s)
 opaque
 flipped
Invalid callback for CAXPCImageQueueCreate!
command
capacity
shmemFlags
shmemSize
shmemOffset
shmemPort
<CAXPCImageQueueSample %p : IOSurfaceRef %p (id 0x%x), read %u, t %g>
CAXPCImageQueueSample
<CAXPCImageQueueReceiver %p>
{0x%llx : IOSurfaceRef %p (id 0x%x)}
CAXPCImageQueueReceiver
Invalid command in CAXPCImageQueueReceiverCreate message!
iosurfacePort
iosurfaceRenderId
CAXPCImageQueue: buffer id 0x%llu not found!
CA_LOG_IMAGE_QUEUE_FRAMES
CAImageQueue %p: frame %f (%llx) used %d: %f (%llx) detach: 0x%llx
CAImageQueue::server_reply_queue
<CAImageQueue %p>
portrait
portraitUpsideDown
landscapeLeft
landscapeRight
NTSC_M
PAL_BGHID
composite
component
digital
YCbCr
captureDisplay
disableScaling
disableRotation
disableOverscan
disableYUV
replayContexts
noReplayScaling
kCADisplayName
kCADisplayDeviceName
kCADisplayId
kCADisplayFrameCount
kCADisplaySkippedFrameCount
kCADisplayClonedFrameCount
kCADisplaySkippedClonedFrameCount
kCADisplayDirtyFrameCount
hostProcessId
hostContextId
layerNames
hitTestContextId
hitTestSlotId
hitTestClientPort
hitTestOptionExcludedIds
hitTestIgnoreBlankingContext
hitTestDetectedOcclusion
hitTestOcclusionType
hitTestCumulativeOpacity
hitTestCumulativeTransform
hitTestCumulativeLayerTransform
hitTestCumulativeContentsTransform
hitTestInsecureFiltered
hitTestWantsLayerBackgroundStatistics
hitTestBackgroundMinimum
hitTestBackgroundMaximum
hitTestBackgroundAverage
hitTestBackgroundStandardDeviation
kCAVirtualDisplayWidth
kCAVirtualDisplayHeight
kCAVirtualDisplayUpdateRate
kCAVirtualDisplayPixelFormat
disableUpdatesOnMainDisplay
managedRenderServer
fetchFrozenSurfaces
local
notificationEDR
notificationAttached
notificationDetached
requestEDR
rampDuration
occlusionNone
occlusionClipped
occlusionLayer
B16@?0@"CAWindowServerDisplay"8
CAWindowServer
SimDisplay cannot find display object for UID: %@
SimDisplay no UUID for display
v24@?0^{__SFBDisplay=}8Q16
[CAWindowServer setSecure:] is deprecated! Please call setSecure: on the specific CAWindowServerDisplay!
[CAWindowServer isSecure] is deprecated! Please call isSecure on the specific CAWindowServerDisplay!
<CAWindowServer:%p %@>
Hit Test Snapshot
hit-test-slot
CAWindowServerDisplay
%@: can't clone a display to nil
%@: can't clone a display to itself
%@: can't clone a display that's a clone
%@: %@ is already a clone
clones
cloneMaster
%@: can't remove a nil clone display
%@: %@ is not our clone
[CAWindowServerDisplay setOverscanAmount:] is deprecated. Please use -setOverscanAmounts:!
[CAWindowServerDisplay overscanAmount] is deprecated. Please use -overscanAmounts!
[CAWindowServerDisplay overscanAmount] - horizontal and vertical overscan amounts are not equal!
[CAWindowServerDisplay setMinimumRefreshRate:] is deprecated!
[CAWindowServerDisplay minimumRefreshRate] is deprecated!
[CAWindowServerDisplay setMaximumRefreshRate:] is deprecated!
[CAWindowServerDisplay maximumRefreshRate] is deprecated!
[CAWindowServerDisplay setIdealRefreshRate:] is deprecated!
[CAWindowServerDisplay idealRefreshRate] is deprecated!
[CAWindowServerDisplay setUsesPreferredModeRefreshRate:] is deprecated!
[CAWindowServerDisplay usesPreferredModeRefreshRate] is deprecated!
CoreAnimation: [CAWindowServerDisplay setColorMode:] is deprecated!
[CAWindowServerDisplay allowsVirtualModes] is deprecated!
[CAWindowServerDisplay setAllowsVirtualModes:] is deprecated!
%@: setTVMode: is deprecated!
%@: TVMode is deprecated!
%@: Ignoring call to setTVSignalType:
<CAWindowServerDisplay:%p %@ %gx%g>
brightness control not supported on this display
white point control not supported on this display
Display %d commitBrightness sdr: %g, headroom: %g, ambient: %g, filtered ambient: %g, limit: %g
invalid nonnull argument
v12@?0C8
v20@?0C8f12B16
CABrightnessControl
Posting %s, payload: %@
no queue available for '%s' notification
no block registered for '%s' notification
blend-colorspace-XXXXXX.icc
display-colorspace-XXXXXX.icc
kCAVirtualDisplayWidth and kCAVirtualDisplayHeight are required
kCAVirtualDisplayMinimumFrameDuration
CA_CLONE_DISPLAY
CA_MAIN_DISPLAY_SCALE
CA_EXTERNAL_DISPLAY_SCALE
PurpleMain
PurpleFBServer
PurpleTVOut
PurpleFBTVOutServer
TVOut
PurpleSceneHack01
684F2EB9-CA09-4969-9C94-3717E4500001
PurpleSceneHack02
684F2EB9-CA09-4969-9C94-3717E4500002
PurpleSceneHack03
684F2EB9-CA09-4969-9C94-3717E4500003
PurpleSceneHack04
684F2EB9-CA09-4969-9C94-3717E4500004
PurpleSceneHack05
684F2EB9-CA09-4969-9C94-3717E4500005
PurpleSceneHack06
684F2EB9-CA09-4969-9C94-3717E4500006
PurpleSceneHack07
684F2EB9-CA09-4969-9C94-3717E4500007
PurpleSceneHack08
684F2EB9-CA09-4969-9C94-3717E4500008
PurpleSceneHack09
684F2EB9-CA09-4969-9C94-3717E4500009
PurpleSceneHack10
684F2EB9-CA09-4969-9C94-3717E450000A
PurpleSceneHack11
684F2EB9-CA09-4969-9C94-3717E450000B
PurpleSceneHack12
684F2EB9-CA09-4969-9C94-3717E450000C
Type `%s' has no property setter
description
Dynamic Shadows
dynamicShadows
The layer is using dynamic shadows which are expensive to render. If possible try setting `shadowPath`, or pre-rendering the shadow into an image and putting it under the layer.
Simple Background Color Masking
simpleBackgroundColorMask
The layer is using a simple layer with background color set as a mask. Instead, use a container layer of the same `frame` and `cornerRadius` as the mask, but with `masksToBounds` set to YES.
Simple Shape Masking
simpleShapeLayerMask
The layer is masked by a `CAShapeLayer` with a path that's a rect, a rounded-rect, or an ellipse. Instead, use an appropriately transformed container layer with `cornerRadius` and `masksToBounds` set.
Simple Shape Layer
simpleShapeLayer
A `CAShapeLayer` is used with a path that's a rect, a rounded-rect, or an ellipse. Instead, use an appropriately transformed plain CALayer with `cornerRadius` set.
Background Filters
backgroundFilters
The layer is using `backgroundFilters` which are a legacy API to do background filtering. Replace with a `CABackdropLayer` with appropriate `filters` set.
Group Opacity
groupOpacity
The layer has a fractional opacity which may require an offscreen pass for group opacity to prevent the semi-transparency on overlapping items to look weird. Try setting `allowsGroupOpacity` to NO and verifying that the results still look correct.
Sublayers Blending
sublayersBlending
The layer has a non standard `compositingFilter`, but its subtree has more than one sublayer at some point in the tree. This prevents pushing of blend mode down to a single sublayer and often requires an offscreen pass. If applicable try setting the `compositingFilter` directly on the leaves of the subtree instead of the root.
Group Blending
groupBlending
One of the sublayers has a non-standard blend mode that causes the parent to create an offscreen group to limit the blending results to the immediate subtree. This is often not only unnecessary, but it also often breaks the expected design. Set `allowsGroupBlending` to NO.
shadowOpacity
borderColor
borderWidth
v16@?0r^{CGPathElement=i^{CGPoint}}8
source
non-zero
absolute
relative
discrete
paced
cubicPaced
autoReverse
fade
moveIn
push
reveal
fromRight
fromLeft
fromTop
fromBottom
CAPresentationModifierGroup
%@: cannot create group with 0 capacity
%@: group capacity too large
%@: attempted to add modifier past group's capacity
<%@:%p; keyPath = %@; additive = %d>
CAPresentationModifier
%@: value can't be nil
CoreAnimation: mass must be greater than 0.
CoreAnimation: stiffness must be greater than 0.
CoreAnimation: damping must be greater than or equal to 0.
sourcePoints
CAAnimationImmutable
attempting to modify read-only animation %@
unknown animation calculation mode: %@
~Server
windowserver-server.cpp
_shutdown_called
blanking context
CoreAnimation: updates deferred for too long
%s%.*s
continued...
snapshot-layer
snapshot-display
snapshot-contexts
No display runloop! Ignoring latency update.
%s display%s:
 (secure)
  %x: level %g; pid %d [%s]
 (visible)
 (decode-error)
 "%s"
== context %x; level %g; pid %d [%s] %sat time %f ==
(secure) 
  <null>
CoreAnimation: timed out freeze semaphore
com.apple.coreanimation
WindowServer.Stall
WindowServer.Performance
** Render #%d tree at time %f **
Screen blanked
Invalid update
Display is not ready
Finish update requested to try again
Update is empty
Does not need render
Update deferred
No GPU work needed
CoreAnimation: invalid mesh transform - too few edges
CoreAnimation: invalid mesh transform - vertex index
CoreAnimation: invalid mesh transform - paired edge
(meshTransform [invalid])
(meshTransform
(vertex %d (%g %g) (%g %g %g))
(face %d (%d %d %d %d) (%g %g %g %g))
%s - suspiciously large vertex count: %zu
%s - suspiciously large face count: %zu
even-odd
miter
butt
CoreAnimation: IOSurface 0x%x [%u x %u] doesn't have the proper data alignment! Expected %zu base address and %zu row byte alignment
(surface machport %u)
(surface 0x%x [%d %d] 
edr %g 
protected 0x%llx 
%s %c%c%c%c
 (%.2lf %s)
 colormatching-disabled
 (colorspace "%s")
 placeholder
CA_MAX_TEXTURE_SIZE
CoreAnimation: IOSurface 0x%x ('%c%c%c%c') has unexpected bytes-per-row value of %zu, expected at least %zu for the width of %zu.
(beginTime %f)
(duration %f)
(autoreverses true)
(fillMode %s)
both
forwards
backwards
(speed %f)
(timeOffset %f)
repeatDuration
repeatCount
(%s %f)
kCADebugOptionsDidChange
CA_COLOR_FLUSH
CA_COLOR_COPY
CA_COLOR_OPAQUE
CA_COLOR_NO_WAIT
CA_AUTO_FLUSH
CA_PRINT_TREE
CA_PRINT_OBJECTS
CA_LOG_IMPLICIT_TRANSACTIONS
CA_LOG_MEMORY_USAGE
CA_LOG_IMAGE_COPIES
CA_PRINT_PERF
CA_DISABLE_OCCLUSION_CULLING
CA_DISABLE_DIRTY_REGIONS
CA_LOG_TRIPLE_BUFFERING
CA_COLOR_SUBPIXEL
CA_DISABLE_RENDER
CA_ALWAYS_RENDER
CA_COLOR_OFFSCREEN
CA_COLOR_DETACHED
CA_COLOR_CACHED
CA_COLOR_FORMATS
CA_DISABLE_DETACHED
CA_PRINT_ANIMATIONS
CA_COLOR_MATCHED
CA_COLOR_UNTAGGED
CA_PRINT_BACKDROPS
CA_COLOR_BACKDROPS
CA_PRINT_SHADERS
CA_PRINT_OFFSCREENS
CA_PRINT_DETACHING
CA_PRINT_TRANSACTIONS
CA_DISABLE_FILTER_MERGING
CA_DUMP_SURFACES_PER_DRAW
CA_DISABLE_COLORMATCH_UNTAGGED
CA_COLOR_BACKING_STORES
CA_VSYNC_SIGNPOST
CA_PERF_HUD
CA_DISABLE_LOW_LATENCY
CA_PRINT_COLOR_MATRIX
CA_PERF_WARNINGS
CA_COLOR_ACTIVE_REGIONS
CA_COLOR_LOW_LATENCY
CA_PRINT_FRAME_INFO
CA_DISABLE_LOGICAL_BOUNDS
CA_THERMAL_THROTTLE
CA_DISABLE_CURVE_SOLVER
CA_COLOR_P3_CLAMP
CA_COLOR_SNAPSHOTS
CA_TEST_HDR_BLENDING
CA_DISABLE_DISPLAY_EDR_SCALING
CA_DISABLE_DISPLAY_OVERDRIVE_FIX
CA_DISABLE_DISPLAY_COLOR_ACCURACY_FIX
CA_HDMI_HDR_PACKING
CA_ASYNC_WIRELESS
CA_DISABLE_DISPLAY_IDLE
CA_DISABLE_ACCELERATED_HDR
CA_DISABLE_HDR_DISPLAY_COMPENSATION
CA_DISABLE_ASE
CA_DISABLE_ASE_RESTRICTIONS
CA_DISABLE_RGB_RESTRICTIONS
CA_DISABLE_FRAMEBUFFER_COMPRESSION
CA_IGNORE_TAILSPIN_TIMER
CA_DISABLE_TONEMAPPING
CA_DISABLE_HDR10TV_TONEMAPPING
CA_DISABLE_BACKDROP_CACHE
CA_DISABLE_OPAQUE_FRAMEBUFFER
CA_EMIT_DEBUG_SIGNPOSTS
CA_FORCE_RESOURCE_SYNC
CA_DISABLE_OLED_TONEMAPPING
CA_FORCE_REFERENCE_TONEMAPPING
CA_DISABLE_HDR_PREWARM
CA_COLOR_NON_DIRTY_FLUSH
CA_CRASH_DETACH_FAIL
CA_DISABLE_HIDDEN_CULLING
CA_DISABLE_VERTEX_COLOR_MATCHING
CA_DISABLE_MODE_SWITCHING
CA_COLOR_FLIPBOOK
CA_COLOR_UNPREMULTIPLIED
CA_DISABLE_IMAGE_QUEUE_REDUCED_POLLING
CA_DISABLE_GENERIC_SHADERS
CA_FORCE_GENERIC_SHADERS
CA_DISABLE_PIPELINE_LIBRARY
CA_ENABLE_MPS_BLURS
CA_FORCE_ENCODE_INPUT_TIME
CA_ENABLE_CACHE_DROP_HINTS
CA_PRINT_CACHE_DROP_HINTS
CA_DISABLE_REDUCED_POLLING
CA_PRINT_MSR_COPY
CA_DISABLE_LUMA_BOOST
CA_PRINT_HIT_TESTING
CA_COLOR_DOWNSCALED
CA_COLOR_UPSCALED
CA_COLOR_SUBTEXTURES
CA_PRINT_REDUNDANT_LAYOUT
CA_COLOR_REDUNDANT_LAYOUT
CA_DISABLE_PURE_POWER_TRCS
CA_FORCE_PURE_POWER_TRCS
CA_DISABLE_COLOR_PROGRAM_CACHE
CA_PRINT_COLOR_PROGRAMS
CA_PRINT_FILTER_MERGING
CA_DISABLE_FORWARD_DM_PRESCALE
CA_PRINT_HDR_PROCESSING
CA_DETACH_ANY_PRIMARIES
CA_DISABLE_SWAP_BRIGHTNESS
CA_DISABLE_SWAP_ICC
CA_DISABLE_ENCODER_SHARING
CA_FORCE_SDR_TONEMAP
CA_PRINT_CONTRAST_ENHANCER
CA_VSYNC_OFF
CA_COLOR_SURFACE_UNPREMULTIPLY
CA_ENABLE_ALL_FRAME_RATES
CA_ENABLE_FRAME_RATE_ARBITRATION
CA_PRINT_FRAME_RATE_ARBITRATION
CA_ENABLE_REDUCED_SERVER_VSYNC_RENDER
CA_EMIT_FRAME_RATE_DEBUG_SIGNPOSTS
CA_ENABLE_HIGH_FRAME_RATE_RESTRICTION
CA_FORCE_120HZ
CA_FORCE_DOUBLE_BUFFERING
CA_FORCE_FP16_FRAMEBUFFER
CA_USE_PRESENT_ON_FINISH
CA_COLOR_VELOCITY
CA_VELOCITY_FRAME_RATE_UNCONSTRAINED
CA_DISABLE_VELOCITY_TRACKING
CA_PRINT_MEMORYLESS_OFFSCREENS
CA_EXPORT_COMPATIBLE_CONTENTS
CA_ENABLE_LAYER_AND_CURSOR_DETACHING
CA_COLOR_INHIBIT_CLONING
CA_COLOR_TERMINATED_CLONING
CA_PRINT_CURSOR_DETACH
CA_OFFSCREEN_LIMIT
CA_PERF_HUD_LEVEL
CA_PERF_HUD_OPAQUE
CA_BACKDROP_SCALE
CA_DUMP_SURFACES
CA_DUMP_HDR_SURFACES
CA_DUMP_MSR_SURFACES
CA_DUMP_FRAMEBUFFERS
CA_DUMP_SNAPSHOTS
CA_DUMP_HIT_TEST_SURFACE
CA_IQ_INTERPOLATION
CA_COLOR_MATCHING
CA_PERF_TIME_THRESHOLD
CA_PERF_INPUT_DELAY_THRESHOLD
CA_PERF_OFFSCREEN_THRESHOLD
CA_FRAMEBUFFER_EDR_HEADROOM
CA_DISPLAY_EDR_HEADROOM
CA_LIB_EDR_HEADROOM_REQUEST
CA_GRAY_SQUARE_LEVEL
CA_GRAY_SQUARE_SIZE
CA_PERF_HUD_ORIGIN
CA_PERF_HUD_SCALE
CA_PERF_HUD_DISPLAY_DURATION
CA_SDR_BRIGHTNESS_NITS
CA_DISPLAY_BRIGHTNESS_NITS
CA_AMBIENT_BRIGHTNESS_NITS
CA_DISPLAY_TYPE
CA_DISPLAY_OVERDRIVE_FIX_NITS
CA_DISPLAY_OVERDRIVE_TEMPERATURE
CA_DISPLAY_COLOR_ACCURACY_FIX_NITS
CA_DISPLAY_HYSTERESIS_NITS
CA_ASE_MODE
CA_MAX_TONEMAP_HEADROOM
CA_TRIGGER_TAILSPIN
CA_BACKING_STORE_REUSE_WASTE_LIMIT
CA_LUMA_BOOST_SCALE
CA_LUMA_BOOST_NITS_MIN
CA_LUMA_BOOST_NITS_MAX
CA_CAPTURE_FRAMES
CA_PROTECTION_LEVEL
CA_BLEND_COLOR_SPACE
CA_DISPLAY_COLOR_SPACE
CA_SYSTEM_GAMMA
CA_MINIMUM_FRAME_DURATION
CA_FRAME_RATE_POLICY
CA_DISPLAY_COMPAT_QUANTA_MODE
CA_TIMING_HINT_INTERVAL
CA_VELOCITY_THRESHOLD_120HZ
CA_VELOCITY_THRESHOLD_80HZ
CA_VELOCITY_FRAME_RATE_POLICY
%d transactions
; %d %s (%.3gs duration, %.3gfps frame rate, %.3g %s, %.2gs gap)
frame
frames
pass
passes
; %d cache miss%s
; %.3g MP area
; %.3g MP drawn (%.3g overdraw)
; %.3g MB uploaded
CoreAnimation buffers: currently %.3gMB; maximum %.3gMB
CoreAnimation: Async render times array exceed maximum size.
(distance-field-layer
fill
stroke
inner-stroke
outer-stroke
(renderMode %s)
(invertsShape true)
(foregroundColor #%08x)
(offset %g)
(sharpness %g)
(lineWidth %g)
%s%s
Writing to '%s'
CoreAnimationWhippetLimitPasses
CoreAnimationWhippetRenderFlags
CAProcessCanAccessGPU
rotate
90cw
90ccw
180cw
180ccw
Unsupported pixel description - %d color components, %d bits per component, %d bits per pixel, %d bitmap info
com.apple.QuartzCore-WebKit
%@ = 
%llu
CGPoint (%g %g)
CGSize (%g %g)
CGRect (%g %g; %g %g)
CAPoint3D (%g %g %g)
CGAffineTransform (%g %g; %g %g; %g %g)
CATransform3D (%g %g %g %g; %g %g %g %g; %g %g %g %g; %g %g %g %g)
<undefined>
CA Whippet FocusRing
CA Whippet FocusRing-Dilated
map_surfaces
windowserver-sim-display.cpp
_sim_display
_sim_swapchain == nullptr
SimDisplay : unsupported SimColorSpace
SimDisplay skipping swap with no swapchain
hw.cpu64bit_capable
com.apple.coreanimation-archive
com.apple.coreanimation-bundle
com.apple.coreanimation-xml
%s: exception %@
-[CAPackage _readFromArchiveData:options:error:]
publishedObjects
Expected CALayer at root
assets
stylesDocument
Expected CALayer at root.
publishedObjectNames
LKState
LKStateAddAnimation
LKStateAddElement
LKStateElement
LKStateRemoveAnimation
LKStateRemoveElement
LKStateSetValue
LKStateSetProperty
LKStateTransition
LKStateTransitionElement
Unable to parse CAPackage: %@
Unable to parse CAPackage from URL: %@
backdrop 0x%lx; update %d; group %p "%s" size %zu; [%d %d; %d x %d]:
  copying to surface [%d %d; %d x %d] scale %g:
backdrop 0x%lx rect [%d %d; %d x %d]
backdrop 0x%lx complete
  applying %d merged group filters (lst %p)
(vector
%s - suspiciously large vector size: %zu
disableActions
animationDuration
animationTimingFunction
animationDelegate
commitTime
earliestAutomaticCommitTime
completionBlock
animatesFromModelValues
@"CAAnimation"24@?0@"CALayer"8@"NSString"16
CATransactionInvalidThread
May not mark the main thread as a background transaction
+[CATransaction synchronize] called within transaction
setAnimationDuration:
setAnimationTimingFunction:
setCompletionBlock:
setDisableActions:
setAnimatesFromModelValues:
setCommitTime:
setEarliestAutomaticCommitTime:
setInputTime:
setLowLatency:
lowLatency
(frameInterval %f)
(discretizesTime true)
(timingFunction 
(enabled false)
(additive true)
(cumulative true)
(removedOnCompletion false)
(affectsVelocity true)
(keyPath 
(function 
(from 
(to 
(by 
linearPaced
(calculationMode %s)
(values 
(keyTimes 
(timingFunctions 
(path 
(type %s)
(subtype %s)
(filter 
(options 
(mass %g)
(stiffness %g)
(damping %g)
(velocity %g)
(modifier
(values
 %.10g
%s - enum %u out of range of %u
decode_int8_enum
owningContext
hostingNamespacedContext
global
wave
drag
alignToMotion
valueOverLife
colorOverLife
light
attractor
simpleAttractor
valueOverDistance
colorOverDistance
values
behavior
CAEmitterBehavior requires `behavior' attribute
CAValueFunction
purge
ogl-mosaic.cpp
_image_unit < 0
(array
%s - suspiciously large array: %u
decode
%s - array is %sretained, but %sretained is expected
non 
%s - null_pointer? %d, n_types %zu, types[0] = %d
CA_NO_ACCEL
~ContextState
ogl-context.h
!next && "Imbalanced ContextState push/pop"
(subtexture [%d %d %d %d] 
(texture 
copy_port
render-fence.cpp
_has_receive_right
activate
_has_made_send_right
CA::Fence::Observer
CoreAnimation: unknown fence observer message %i
v28@?0Q8^{dispatch_mach_msg_s=}16i24
CoreAnimation: transaction observer %x timed out after %f
activate_and_wait
CoreAnimation: failed to receive fence reply: %x
CoreAnimation: timed out fence %llu
send_rlfg_msg
!f_names.empty ()
MACH_PORT_VALID (batch_port)
CoreAnimation: failed to send fence reply: %x
send_rmfc_msg
(portal-layer 0x%lx
(sourceLayer 0x%lx)
(sourceContext %x)
(hidesSourceLayer true)
(matchesOpacity true)
(matchesPosition true)
(matchesTransform true)
(allowsBackdropGroups true)
xmlns
<?xml version="1.0" encoding="UTF-8"?>
 %S="%S"%s
<%S%s
</%S>
matrix(%@)
CGImageSource
CATintedImage
{CAColorMatrix=ffffffffffffffffffff}
NSValue
perspective(%g) 
translate(%g, %g, %g) 
rotate(%gdeg) 
rotate(%gdeg, 0, 1, 0) 
rotate(%gdeg, 1, 0, 0) 
shearYZ(%gdeg) 
shearXZ(%gdeg) 
shearXY(%gdeg) 
scale(%g) 
scale(%g, %g, %g) 
&amp;
&lt;
&gt;
&quot;
&apos;
%@ %c
{CGAffineTransform=dddddd}
unhandled getter type: %d
unhandled setter type: %d
{CGPoint=dd}
{CGSize=dd}
{CGRect={CGPoint=dd}{CGSize=dd}}
{CATransform3D=dddddddddddddddd}
{CAPoint3D=ddd}
__CACodingContents
sublayers array %@ contains non-layer %@
Rejecting value:
For key: %s
[%@ initWithCoder]: ignoring exception %@
CGColorSpace
origin
size
origin.x
origin.y
size.width
size.height
rotation.z
rotation.x
rotation.y
scale.xy
scale.x
scale.y
scale.z
translation
translation.x
translation.y
translation.z
CoreAnimationErrorDomain
CA_LOG_CLASS_DESCRIPTIONS
creating class description for %s
  %s: %s
    type %d: %s flags 0x%x
classDescription_locked
CAObject.mm
info != NULL
v@:^v
^v@:
v@:@
v@:@?
@?@:
v@:B
v@:c
v@:C
v@:s
v@:S
v@:i
v@:I
v@:l
v@:L
v@:q
v@:Q
v@:f
v@:d
v@:{CGPoint=dd}
{CGPoint=dd}@:
v@:{CGSize=dd}
{CGSize=dd}@:
v@:{CGRect={CGPoint=dd}{CGSize=dd}}
{CGRect={CGPoint=dd}{CGSize=dd}}@:
v@:{CATransform3D=dddddddddddddddd}
{CATransform3D=dddddddddddddddd}@:
v@:{CGAffineTransform=dddddd}
{CGAffineTransform=dddddd}@:
v@:{CAPoint3D=ddd}
{CAPoint3D=ddd}@:
UIApplicationDidEnterBackgroundNotification
UIApplicationWillEnterForegroundNotification
UIApplicationDidFinishLaunchingNotification
CAEnableMetalWhippet
CADynamicBackendSwitching
(proxy %d 0x%llx)
port_name
port_number
client_port_number
displayFilter
bitsPerComponentHint
displayId
definesDisplayBounds
reverseFlip
<%@:%p; contextId = 0x%x
; colorSpace = %@
; commitPriority = %u
; contentsFormat = %@
; level = %f
; secure
v16@?0I8B12
CoreAnimation: [CAContext setFence:count:] is deprecated. Ignoring!
(pattern [%g %g %g %g] [%g %g]
matrix
(cell 
(gradient-layer
axial
radial
conic
(gradientType %s)
(startPoint [%.10g %.10g])
(endPoint [%.10g %.10g])
colors
locations
interpolations
CADisplayPersistence
version: %@, latencies: %@, preferredModes:%@
version
latencies
preferredModes
hasVersion
hasLatencies
hasPreferredModes
uuid: %@, mode: %@, latency:%g
uuid
uuid: %@, mode: %@
CFBundleVersion
trying to read state of nil layer.
trying to set state of nil layer.
trying to set state not in given layer.
"%@" "%@"
CA DispatchGroup
v8@?0
com.apple.coreanimation.workloop_queue
failed to receive purple reply message: %x
failed to send purple message: %x
com.apple.QuartzCore-CA
v24@?0r^{CGPathElement=i^{CGPoint}}8^B16
CAGetColorSpace
CACGUtil.cpp
false
rgb(
CGBitmapContextSetData failed, bpc %zu, bpp %zu, info %u
unsupported surface format: %c%c%c%c
kCARendererColorSpace
kCARendererDeepBuffers
kCARendererMetalCommandQueue
kCARendererClearsDestination
kCARendererFlags
com.apple.QuartzCore-CARenderer
CoreAnimation: GLES%d not supported by CARenderer on this device
CoreAnimation: ignoring exception: %@
<nil>
CAIOSurfaceCreate: failed to allocate IOSurface (size: %u x %u, format: %c%c%c%c)
(interpolator (factor %g)
(o%d 
Invalid frame interval range %u %u %u from frame rate range %.2f %.2f %.2f
CoreAnimation: GetDisplayInfo returned 0x%x
Failed to set display latency - missing UUID
CADisplayLink: reload_item, item does not exist
Unsupported use of CADisplayLink SPI off the main thread.
Failed to register for CADisplay change notifications: 0x%x
Failed to register for CADisplay power notifications: 0x%x
CoreAnimation: rendering error %s
context=%{public,name=context}u update=0x%{public,name=update}x
%{public, signpost:metrics}@
Rendering
%{public, signpost:metrics}@
VirtualDisplay::clone_update failed to copy surface
copy_display_timings: unexpected state (source: %x, this: %x)
CAML: Failed to encode image: %s
CAMLEncodeLayerTreeToPathWithOptions failed to create output dirs at %s
CAMLEncodeLayerTreeToPathWithOptions options must be a CFDictionary
CAMLEncodeLayerTreeToPathWithOptions failed to move %s to %s
Failed to validate rowbytes: %zu, levels: %u height: %u
Failed to decode_data_async, size: %zu
(image [%d %d] [%d] %s
 (%.2lf %s)
 (tint %.3g %.3g %.3g %.3g)
 colormatching-disabled
 (colorspace "%s")
 placeholder
CoreAnimation: triple buffered backing store %p
CoreAnimation: forcing %saccelerated backing
(currentTexture 
(blendedTextures
ImageQueue %p visibility going from %u to %u
CoreAnimation: copied CGImageRef %p - image size (%lu x %lu) exceeds max texture size
CoreAnimation: copied CGImageRef %p - mask size
CoreAnimation: copied CGImageRef %p - color matching
CoreAnimation: copied CGImageRef %p - needs color matching
CoreAnimation: copied CGImageRef %p - non-RGB color model
CG image cache at time %f:
CoreAnimation: copied CGImageRef %p - bad alignment for IOSurface 0x%x
CoreAnimation: warning, CGImageProvider returned multiple blocks
CoreAnimation: copied CGImageRef %p - bad decode array
CoreAnimation: copied CGImageRef %p - bad mask
CoreAnimation: copied CGImageRef %p - bad mask image format (%d bpp, %d bpc)
CoreAnimation: copied CGImageRef %p - non-native format (%d)
CoreAnimation: copied CGImageRef %p - format not supported by hardware
CoreAnimation: data provider size invalid
CoreAnimation: data provider size is too small
CoreAnimation: copied CGImageRef %p - no data pointer
CoreAnimation: copied CGImageRef %p - bad image alignment
CoreAnimation: copied CGImageRef %p - bad row alignment
CoreAnimation: copied CGImageRef %p - mipmap generation
CoreAnimation: copied CGImageRef %p - RGB mask (bug!)
CoreAnimation: ignored CGImageRef %p - bad RGB 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - decode or mask
CoreAnimation: copied CGImageRef %p - bad RGB image format (%d bpp, %d bpc, %d info)
CoreAnimation: ignored CGImageRef %p - bad grayscale 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - bad grayscale image format (%d bpp, %d bpc, %d info)
  %p deadline %f %s%s%s%s%s
Unsupported image format '%s' for default colorspace
(replicatorLayer %d)
CoreAnimation: failed to allocate %ld bytes
Data %p with size %zu underflow
CoreAnimation: failed to query region %p (%zu bytes)
Failed to map %ld bytes with port = %u, protection = %u, err = 0x%x
CoreAnimation: mach_make_memory_entry_64 (size %llu, addr 0x%llx, prot 0x%x, port %u) = 0x%x
(shmem %lu bytes)
Invalid bitmap: [%u x %u], %u levels
Layer backing store allocation too large size:%ld width:%d height:%d levels:%d
Bogus ShmemBitmap : [%u x %u], %u levels
Bogus ShmemBitmap data pointer: %p, Shmem data pointer: %zu
Bogus ShmemBitmap rowbytes: %zu, width: %u, height: %u, level: %u
Bogus ShmemBitmap data pointer: %p, total size: %zu
pthread_setname_np(%s) returned %d
exported [%d %d] buffer to %s
 (offscreen-flags [
 (group-flags [
(%slayer %s[%.10g %.10g %.10g] [%.10g %.10g %.10g %.10g] [%g %g %g]
[%d pass%s
 [%d %d %d %d]
 image seed %d
(name 
(hidden true)
(masksToBounds true)
(geometryFlipped true)
(edgeAntialiasingMask%s%s%s%s%s)
(disableUpdateMask%s%s%s%s%s%s%s)
(contentsGravity %s)
(contentsOpaque true)
(contentsDither false)
(contentsAlignsToPixels true)
(contentsMultiplyColor %.3g %.3g %.3g %.3g)
(contentsSwizzle %s)
(doubleSided false)
(sortsSublayers false)
(flipsHorizontalAxis true)
(opacity %g)
(cornerRadius %g)
(backgroundColor 
(backgroundColor (%.3g %.3g %.3g %.0g))
(borderWidth %g)
(borderColor 
(borderColor (%.3g %.3g %.3g %.0g))
(cornerContents 
(continuousCorners true)
(cornerContentsMasksEdges true)
(maskedCorners%s%s%s%s%s)
(contents %s
(contentsScaling repeat)
(magnificationFilter %s)
(minificationFilter %s)
(gain %g)
(lodBias %g)
(inheritsTiming false)
(definesDisplayRegionOfInterest true)
(contentsContainsSubtitles true)
(contentsRect 
(contentsCenter 
(cornerContentsCenter 
(literalContentsCenter true)
(contentsScale %g)
(shouldRasterize true)
(rasterizationPrefersDisplayCompositing true)
(rasterizationScale %g)
(preloadsCache true)
(createsCompositingGroup true)
(allowsDisplayCompositing true)
(allowsEdgeAntialiasing true)
(wantsExtendedDynamicRangeContent true)
(toneMapToStandardDynamicRange true)
(allowsGroupOpacity true)
(allowsGroupBlending false)
(allowsHitTesting false)
(hitTestsContentsAlphaChannel true)
(hitTestsAsOpaque true)
(securityMode unrestricted)
(securityMode insecure)
(shadowColor (%.3g %.3g %.3g %.0g))
(shadowOpacity %g)
(shadowRadius %g)
(shadowOffset [%g %g])
(shadowPath 
(invertsShadow true)
(shadowPathIsBounds true)
(mask 
(sublayers 
(filters 
(backgroundFilters 
(compositingFilter 
(meshTransform 
(animations 
(modifiers 
(subclass 
%s%s
(filter %s
(enabled false)
(inputs 
(%s 
[CA] Surface ID:0x%x detach result: %s
Failed to detach surface code: %s
CoreAnimation: failed to add monotonic cube ((%g, %g) (%g, %g) (%g, %g) (%g, %g))
CoreAnimation: maximum %d texture units
CoreAnimation: maximum texture %d pixels
CoreAnimation: unsupported graphics hardware
; need three or more texture units
CoreAnimation: %d by %d image is too large for GPU, ignoring
CoreAnimation: image stride is too large for GPU, ignoring
CoreAnimation: surface %d x %d is too large
[%u]
 s:[%u x %u (%.2lf %s)] b:[%u x %u (%.2lf %s)] need-clear:%d%s, id:%p
 s:framebuffer
%s%.*s
error: failed to export [%d %d] buffer to %s
(shape-layer
(fillColor 
(fillColor %.3g %.3g %.3g %.3g)
(strokeColor 
(strokeColor %.3g %.3g %.3g %.3g)
(strokeStart %g)
(strokeEnd %g)
(lineWidth %g)
(miterLimit %g)
(dashPhase %g)
(dashPattern 
(fillRule evenOdd)
(lineJoin %s)
(lineCap %s)
(source 
unknown sync reply received : %i
error (%i) waiting for sync reply
long synchronize for %x: now (%u,%u): req %c%u(%u)
synchronize timed out for %x with (%u,%u): req %c%u(%u)
HitTest: starting (%u)
HitTest: got layer "%s"
HitTest: ending (%u)
CoreAnimation: missing mask layer 0x%lx
CoreAnimation: missing sublayer %p
== context %x%s%s%s; pid %d [%s] %sat time %f ==
  slot %u:
Texture 
[%d %d %d %d]
Utilization: %.2f%%, wasted memory: %.2lf %s
  Context utilization: %.2f%%, wasted memory: %.2lf %s
Total utilization: %.2f%%, wasted memory: %.2lf %s
(deferred-image-slot 
(no texture)
unexpected error %i sending sync reply from %x
(%s)
(%s [%g %g %g %g; %g %g %g %g; %g %g %g %g; %g %g %g %g])
(%s [%g %g %g %g %g %g])
** Render objects at time %f **
%20s %s
%20s %d
preferred_mode_with_criteria: resolution [%g x %g], target hdr (%s), user hdr (%s), rate (%g) --> %dx%d@%g %s
CoreAnimation: context hosting changed while locked!
  %x; %spid %d [%s]
 (local)
 (visible)
 (secure)
CoreAnimation: LayerHost trying to host itself or one of its ancestors (context id %d)
(layer-host %x
(inherits-security true)
Shape union is bogus, new shape: %d, old shape: %d!
CoreAnimation: insecure context %x - pid %u [%s].
Cannot host %x in context %x - pid %u [%s].
** Render tree at time %f (bounds %d,%d %dx%d) **
HitTest: start at: (%g, %g)
HitTest: end
Slot name: %s
Slot occluded by: %s with context 0x%x
Slot occluded by layer from context 0x%x
Invalid display attributes version %d
HitTest: %s layer "%s"%s%s
Too many CAContexts! Biggest offender (%s [%d]) has %u contexts!
failed to make reply port for commit sync %i
failed to register commit sync on %x
bad index in commit sync reply : %u not in %@
dead reply from commit sync
unrecognized reply from commit sync
long commit sync wait %i : %@
excessive commit sync wait : %@
unknown error while waiting for commit sync
failed to make send once for update sync on %x
failed to register update sync on %x
failed to make reply port for update sync on %x : r=%i
dead reply from update sync on %u:%x
unrecognized reply from update sync on %u:%x
long update sync wait %i : %u:%x
excessive update sync wait : %u:%x
error while waiting for update sync on %x
CoreAnimation: NULL color space set on context (%x)
CoreAnimation: transaction fences failed : %i
CoreAnimation: failed to lock IOSurface %x
CoreAnimation: failed to create Metal context!
CoreAnimation: sw renderer doesn't support tiling
CoreAnimation: %d by %d image is too large for software renderer, ignoring
SW renderer invalid destination format %c%c%c%c
%{public, signpost.description:begin_time}llu seed=%{public, name=transaction_seed}#x
Commit
CoreAnimation: warning, deleted thread with uncommitted CATransaction; created by:
CoreAnimation: warning, deleted thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
CoreAnimation: new transaction fence disabling existing low latency hint.
CoreAnimation: invalid commit handler phase! Defaulting to pre-commit.
cannot add handler to %i from %i - dropping
CoreAnimation: cannot add handler to %i from %i
CoreAnimation: warning, encountered thread with uncommitted CATransaction; created by:
CoreAnimation: warning, encountered thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
CADisplayTimerAlignPhase: unexpected state (interval:%llx, heartbeat:%llx)
(backdrop-layer %ld
(group "%s")
(groupNamespace global)
(groupNamespace hostingNamespacedContext)
(scale %g)
(zoom %g)
(marginWidth %g)
(backdropRect [%g %g; %g %g])
(captureOnly true)
(allowsInPlaceFiltering true)
(reducesCaptureBitDepth true)
(ignoresScreenClip true)
(tracksLuma true)
(buffer [%d x %d] scale %g)
collected backdrop group %p buffer %p
Filter merging failed.
Filter A:
Filter B:
Filter merging aborted: layer.bounds == blur.inputBounds
(transition %s
CAML warning:%d: 
CAML error:%d: 
CA:Render:Server:port_set (): mach_port_mod_refs () returned error 0x%x
unable to find bootstrap server
unable to register bootstrap port %s: %x
(pixel-buffer %c%c%c%c [%d %d])
CAImageProvider: %.3gMB cached (%.3gMB purgeable); idle %.3gs -> %.3gs
(image-provider [%d %d] [%d %d] [%d %d]
(fillColor #%08x 
CARenderServerBufferRef is now a CF type. Please use CFRetain/CFRelease instead of CARenderServerDestroyBuffer!
Failed to allocate %u-byte Metal buffer
Failed to create MTLCommandQueue
Mismatched MTLCommandQueue and MTLDevice
Capturing %d GPU frames to %s
Unable to capture to GPU trace file: %s
Capture to a GPU trace file is not supported. Try setting env var: METAL_CAPTURE_ENABLED=1
Finished capturing GPU frames
Can't run metal against null surface
context=%{public,name=context}u update=0x%{public,name=update}x cmdbuf=%{public,name=cmdbuf}u thread=%{public,name=thread}llx begin=%{public,signpost.description:begin_time}llu end=%{public,signpost.description:end_time}llu
Scheduling
Executing
context=%{public,name=context}u update=0x%{public,name=update}x thread=%{public,name=thread}llx begin=%{public,signpost.description:begin_time}llu end=%{public,signpost.description:end_time}llu
RenderToCompletion
Specializing shader function %s for %s with constant values %s
Loading shader function %s for %s
function=%{public, name=function}@ spec=%{public, name=spec}@ specialized=%{public, name=specialized}u
CompileShader
Building render pipeline %s with descriptor %s
pipeline=%{public, name=pipeline}@ precompiled=%{public, name=precompiled}u
pipeline=%{public, name=pipeline, signpost.telemetry:string1}@ flags=%{public, name=flags, signpost.telemetry:string2}s order=%{public, name=order, signpost.telemetry:number1}u enableTelemetry=YES 
NewRenderPipeline
pipeline=%{public, name=pipeline, signpost.telemetry:string1}@ order=%{public, name=order, signpost.telemetry:number1}u enableTelemetry=YES 
pipeline=%{public, name=pipeline}@ order=%{public, name=order}u
flags=%{public, name=flags}s
flags=%{public, name=flags, signpost.telemetry:string2}s enableTelemetry=YES 
%zu by %zu iosurface is too large for GPU
Unsupported IOSurface pixel format: %.4s
Unable to create MTLTexture for destination IOSurface
Compiling render pipeline: %s
Resulting pipeline state: %p (flags=%s)
Compiling fragment shader: %s
Resulting function: %p
Compiling vertex shader: %s
Unrecognized shader spec: %s
Failed to allocate MTLTexture
Failed to allocate MTLTexture from IOSurface 0x%x. Row bytes (%ld) not %ld aligned.
Failed to allocate MTLTexture from IOSurface 0x%x. Descriptor row bytes (%ld) larger than surface row bytes (%ld).
Failed to allocate MTLTexture from IOSurface 0x%x. Texture block bytes (%ld) not equal to surface block bytes (%ld).
Failed to allocate MTLTexture from IOSurface 0x%x.
unsupported surface format: %c%c%c%c
%d by %d image is too large for GPU, ignoring
Image stride is too large for GPU, ignoring
Surface %d x %d is too large
Failed to allocate %dx%d surface texture.
Descriptor (0x%llx) and texture (0x%llx) protection mismatch!
Surface from iosurface %d x %d is too large
Target of memoryless surface not bound, possible misuse.
%s: %s
Failed to allocate Metal buffer
Failed to allocate uniform Metal buffer
Command buffer allocation failed!
MTLCommandBuffer %p, protection 0x%llx, label %s, error = %s
Unable to start render command encoder
Unable to start blit command encoder
Ignoring [%d x %d] invalid surface dimensions
Unexpected framebuffer format %c%c%c%c
Failed to allocate [%d x %d] %c%c%c%c framebuffer %s
Cannot cast linear FP16 texture to sRGB sampler variant
%f %x "%s" (%p): replacing %p (eval %u; frames %u):
%f %x "%s" (%p): adding %p:
%f %x "%s" (%p): not adding %p:
%f %x "%s" (%p): removing all:
%p (eval %u; frames %u):
%f %x "%s" (%p): removing %p (eval %u; frames %u):
%f %x "%s" (%p): collecting %p (t %f; speed %g; eval %u; frames %u):
CoreAnimation: ignoring invalid path
(path
%g %g m
%g %g l
%g %g %g %g q
%g %g %g %g %g %g c
(function %s)
suspiciously large function size: %zu count: %zu
suspiciously large interpolations: %zu count: %zu
CoreAnimation: disabling OpenGL extension %s
%08x %08x vertex shader:
%s%s---
%08x %08x fragment shader:
%s%s---
suspiciously long string: %zu
"%s"
(emitter-behavior %s
(values 
(timingFunction 
(keyPath 
(sourceLayer 0x%lx)
(sourceContext %x)
(match-property-animation
(match-move-animation
(sourcePoints 
Color matching limited to 3-stage compact format (TRC -> NxM/LUT -> TRC), falling back to cube LUT
No support for more than one NxM LUT, falling back to cube LUT
Stage = %ld, %ld TRCs
TRCs are not the same for each color channel, falling back to cube LUT
Stage = %ld, %zux%zu LUT, %zu grid points
%zux%zu LUT not supported.
unsupported NxM LUT data format
Failed to iterate CGColorConverter 
'%s' --> '%s'
CGColorConverter:
    %d stages
    %d input components
    %d output components
    %d TRCs
    %d Matrices
    %d NxM LUTs
    TRC channel %d --> TRCs[%ld], Table: entries = %zu
    TRC channel %d --> TRCs[%ld], Type0: Y = X^%f 
    TRC channel %d --> TRCs[%ld], Type1: Y = (%g*X+%g)^%g [X >= %g],  Y = 0 [X < %g] pure power original: %s
    TRC channel %d --> TRCs[%ld], Type2: Y = (%g*X+%g)^%g + %f [X >= %g],  Y = %g [X < %g] pure power original: %s
    TRC channel %d --> TRCs[%ld], Type3: Y = (%g*X+%g)^%g [X >= %g],  Y = %g*X [X < %g] pure power original: %s
    TRC channel %d --> TRCs[%ld], Type4: Y = (%g*X+%g)^%g + %g [X >= %g], Y = %g*X + %g [X < %g] pure power original: %s
    TRC channel %d --> TRCs[%ld], PQ InvEOTF (engamma)
    TRC channel %d --> TRCs[%ld], PQ EOTF (degamma)
    TRC channel %d --> TRCs[%ld], HLG OETF (engamma)
    TRC channel %d --> TRCs[%ld], HLG InvOETF (degamma)
Stage = %ld matrix %ld
    %g %g %g %g
    %g %g %g %g
    %g %g %g %g
IOSurface Compression Enabled: %s
CADisplay Harmony Matrix is XYZ: %s
(compressed-image [%d %d] [%d] %s
Transaction (%p) property %s changed %s
Began transaction (%p) change on layer %p for %s, %p
Redundant layout on %s which took %f ms
cornerContents must be a CGImageRef for now!
CoreAnimation: Message::send_message() returned 0x%x
failed encode_port_make_once : r=%i so=%x t=%x
Decoder has no context! dcid=%x
Context ID mismatch! pcid=%x pseed=%u : heap=%p data=%p data_len=%zu flags=%u dcid=%x t=%f
Context is destroyed! cid=%x
%s (%u) : %s
unable to decode object of type %d
CoreAnimation: serialization error from context %x
(cloning-terminator-layer)
CoreAnimation: unhandled combiner function: %d
ImageQueueCollectable client message err=0x%x
ImageQueueDidComposite client message err=0x%x
ImageQueueDidPresent client message err=0x%x
CoreAnimation: Warning! CAImageQueueSetOwner() is deprecated and does nothing. Please stop calling this method.
(image-queue
 0x%016llx
%s%s%s%s%s%s
(generation 0x%08x)
(rotationFlags %d)
(edr-deadline %f)
(enhancementMode %d)
(samples
(0x%llx %s 0x%x, [%d %d; rot %d] %f (generation 0x%08x) (detach 0x%016llx) %s%s%s)
Invalid callback for CAXPCImageQueueCreate!
Invalid command in CAXPCImageQueueReceiverCreate message!
CAXPCImageQueue: buffer id 0x%llu not found!
CAImageQueue %p: frame %f (%llx) used %d: %f (%llx) detach: 0x%llx
Display %d commitBrightness sdr: %g, headroom: %g, ambient: %g, filtered ambient: %g, limit: %g
Posting %s, payload: %@
no queue available for '%s' notification
no block registered for '%s' notification
display=%{public,name=display}u update=0x%{public,name=update}x
%{public, signpost:metrics}@
CoreAnimation: updates deferred for too long
reason=%{public,name=reason}d
%{public, signpost:metrics}@
No display runloop! Ignoring latency update.
== context %x; level %g; pid %d [%s] %sat time %f ==
CoreAnimation: timed out freeze semaphore
** Render #%d tree at time %f **
ID is update seed. refresh_interval=%{public, name=refresh_interval}llu display_id=%{public, name=display_id}#x %{public, signpost.description:begin_time}llu skipped_render_reason=%{public, name=skipped_render_reason}s
ID is update seed. refresh_interval=%{public, name=refresh_interval}llu display_id=%{public, name=display_id}#x %{public, signpost.description:begin_time}llu
RenderInterval
ID is update seed. refresh_interval=%{public, name=refresh_interval}llu display_id=%{public, name=display_id}#x %{public, signpost.description:begin_time}llu pass_count=%{public, name=pass_count}u skipped_render_reason=%{public, name=skipped_render_reason}s
ID is update seed. refresh_interval=%{public, name=refresh_interval}llu display_id=%{public, name=display_id}#x %{public, signpost.description:begin_time}llu pass_count=%{public, name=pass_count}u
CoreAnimation: invalid mesh transform - too few edges
CoreAnimation: invalid mesh transform - vertex index
CoreAnimation: invalid mesh transform - paired edge
(meshTransform [invalid])
(meshTransform
(vertex %d (%g %g) (%g %g %g))
(face %d (%d %d %d %d) (%g %g %g %g))
CoreAnimation: IOSurface 0x%x [%u x %u] doesn't have the proper data alignment! Expected %zu base address and %zu row byte alignment
(surface machport %u)
(surface 0x%x [%d %d] 
edr %g 
protected 0x%llx 
%s %c%c%c%c
CoreAnimation: IOSurface 0x%x ('%c%c%c%c') has unexpected bytes-per-row value of %zu, expected at least %zu for the width of %zu.
(beginTime %f)
(duration %f)
(autoreverses true)
(fillMode %s)
(speed %f)
(timeOffset %f)
(%s %f)
CoreAnimation buffers: currently %.3gMB; maximum %.3gMB
(distance-field-layer
(renderMode %s)
(invertsShape true)
(foregroundColor #%08x)
(offset %g)
(sharpness %g)
Writing to '%s'
SimDisplay : unsupported SimColorSpace
SimDisplay skipping swap with no swapchain
backdrop 0x%lx; update %d; group %p "%s" size %zu; [%d %d; %d x %d]:
  copying to surface [%d %d; %d x %d] scale %g:
backdrop 0x%lx rect [%d %d; %d x %d]
backdrop 0x%lx complete
  applying %d merged group filters (lst %p)
(vector
 %.10g
(frameInterval %f)
(discretizesTime true)
(additive true)
(cumulative true)
(removedOnCompletion false)
(affectsVelocity true)
(function 
(from 
(to 
(by 
(calculationMode %s)
(keyTimes 
(timingFunctions 
(path 
(type %s)
(subtype %s)
(filter 
(options 
(mass %g)
(stiffness %g)
(damping %g)
(velocity %g)
(modifier
(values
(array
(subtexture [%d %d %d %d] 
(texture 
CoreAnimation: unknown fence observer message %i
CoreAnimation: transaction observer %x timed out after %f
CoreAnimation: failed to receive fence reply: %x
CoreAnimation: timed out fence %llu
CoreAnimation: failed to send fence reply: %x
(portal-layer 0x%lx
(hidesSourceLayer true)
(matchesOpacity true)
(matchesPosition true)
(matchesTransform true)
(allowsBackdropGroups true)
Rejecting value:
For key: %s
creating class description for %s
  %s: %s
    type %d: %s flags 0x%x
(proxy %d 0x%llx)
(pattern [%g %g %g %g] [%g %g]
(cell 
(gradient-layer
(gradientType %s)
(startPoint [%.10g %.10g])
(endPoint [%.10g %.10g])
failed to receive purple reply message: %x
failed to send purple message: %x
CGBitmapContextSetData failed, bpc %zu, bpp %zu, info %u
CoreAnimation: GLES%d not supported by CARenderer on this device
CAEmitterLayer
CAEmitterLayerPrivate
CATransform3DAdditions
CAStateControllerTransition
CAAnimationDelegate
NSObject
CAStateController
CADisplay
CADisplayLink
CADisplayLinkPrivate
CADisplayMode
CADisplayAttributes
CADisplayProperties
CADisplayPreferences
NSCopying
NSMutableCopying
CAMutableDisplayPreferences
CADisplayModeCriteria
CACodingProxy
NSSecureCoding
NSCoding
LKNSArrayCodingProxy
LKNSDictionaryCodingProxy
LKNSValueCodingProxy
LKCGColorCodingProxy
LKCGImageCodingProxy
CACGPatternCodingProxy
CACGPathCodingSegment
CACGPathCodingProxy
CAIOSurfaceCodingProxy
CADebuggingArchiverDelegate
NSKeyedArchiverDelegate
CACodingCAMLWriterDelegate
CAMLWriterDelegate
CACoderAdditions
CAChameleonLayer
CAStateControllerUndo
CAStateRecorder
CAMLParser
CAFilter
CAState
CAMeshTransform
CAMutableMeshTransform
CAMeshInterpolator
CAValueFunction
CAMediaTimingFunction
CAMediaTimingFunctionPrivate
CAMediaTimingFunctionBuiltin
CAStateRemoveAnimation
CARenderValue
CATiledLayer
CATiledLayerPrivate
CAColorMatrixAdditions
CATextLayer
CATextLayerPrivate
CAScrollLayer
CALayerScrolling
CAStateTransition
CAEmitterCell
CAMediaTiming
CAEmitterCellPrivate
CAPropertyInfo
CAStateAddAnimation
CAEAGLLayer
EAGLDrawable
CAEAGLLayerPrivate
CAStateControllerAnimation
CAPortalLayer
CATintedImage
CAPoint3DAdditions
CAFenceHandle
CAFrameRateRangeGroup
CAStateControllerLayer
CAStateAddElement
CAStateTransitionElement
CAMetalDrawable
MTLDrawable
CAMetalDrawableSPI
MTLDrawableSPI
CAMetalLayer
CAMetalLayerPrivate
CALinearMaskLayer
CALayer
CALayerPrivate
CALayerFunctions
CAActionAdditions
CAAction
CAStateSetValue
CALayerArray
CAWindowServer
CAWindowServerDisplay
CABrightnessControl
CABrightnessTransaction
CAPresetTransaction
CAWindowServerVirtualDisplay
CATransformLayer
Optimizations
CAStateElement
CAPresentationModifierGroup
CAPresentationModifier
CAAnimation
CAAnimationPrivate
CAPropertyAnimation
CABasicAnimation
CAKeyframeAnimation
CASpringAnimation
CAMatchMoveAnimation
CAMatchPropertyAnimation
CATransition
CAAnimationGroup
CAAnimatableValue
CAShapeLayer
CALayerHost
CAReplicatorLayer
CASmoothedTextLayer
CAPackage
CATransaction
CATransactionPrivate
CATransactionInternal
CATransactionCompletionItem
CABackdropLayer
CADistanceFieldLayer
CAEmitterBehavior
CAMLWriter
_CAObjectInternal
CAObjectCGAffineTransformAdditions
CASuspendNotification
CAContext
CASlotProxy
CAStateRemoveElement
CAGradientLayer
CAGradientLayerPrivate
CADisplayPersistedData
CADisplayPersistedLatency
CADisplayPersistedPreferredMode
CARenderer
CARendererPrivate
dictionaryWithObjects:forKeys:count:
setObject:forKeyedSubscript:
numberWithInt:
arrayWithObjects:count:
setValue:forKey:
CAMLParserStartElement:
CAMLParserEndElement:
CAMLParserEndElement:content:
CAMLParser:setValue:forKey:
instancesRespondToSelector:
initWithBytes:length:encoding:
CAMLTypeForKey:
UTF8String
CAMLTypeSupportedForKey:
dataWithBytesNoCopy:length:freeWhenDone:
initWithBase64EncodedData:options:
valueWithPoint:
valueWithSize:
valueWithRect:
setTransformStruct:
valueWithCATransform3D:
valueWithCAPoint3D:
valueWithCAColorMatrix:
numberWithDouble:
defaultValueForKey:
didChangeValueForKey:
rangeOfString:
substringToIndex:
isEqualToString:
reloadValueForKeyPath:
implicitAnimationForKeyPath:
_copyRenderLayer:layerFlags:commitFlags:
birthRate
lifetime
emitterDuration
emitterPosition
emitterZPosition
emitterSize
emitterDepth
velocity
scale
spin
spinBias
cullRect
cullMinZ
cullMaxZ
emitterCells
emitterBehaviors
emitterPath
emitterRects
count
countByEnumeratingWithState:objects:count:
rectValue
emitterShape
emitterMode
renderMode
preservesDepth
seed
updateInterval
_colorSpaceDidChange
_renderLayerDefinesProperty:
_renderLayerPropertyAnimationFlags:
CA_automaticallyNotifiesObservers:
CA_validateValue:forKey:
_hasRenderLayerSubclass
setEmitterCells:
setBirthRate:
setLifetime:
setEmitterShape:
setEmitterMode:
setEmitterPosition:
setEmitterZPosition:
setEmitterSize:
setEmitterDepth:
setVelocity:
setScale:
setSpin:
setRenderMode:
setPreservesDepth:
setSeed:
T@"NSArray",C
T{CGPoint=dd}
T{CGSize=dd}
T@"NSString",C
setEmitterPath:
setEmitterRects:
setEmitterBehaviors:
setEmitterDuration:
setUpdateInterval:
setSpinBias:
setCullRect:
setCullMinZ:
setCullMaxZ:
Tr^{CGPath=}
T{CGRect={CGPoint=dd}{CGSize=dd}}
valueWithBytes:objCType:
getValue:size:
CATransform3DValue
T{CATransform3D=dddddddddddddddd},R
init
addObject:
animationForKey:
CAStateControllerTransition
removeAnimationForKey:
removeAnimationFromLayer:forKey:
layer
_removeTransition:layer:
delegate
stateController:transitionDidStop:completed:
invalidate
dealloc
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
animationDidStart:
animationDidStop:finished:
addAnimation:
transition
beginTime
duration
speed
_controller
_layer
_transition
_beginTime
_duration
_speed
_masterKey
_animations
T@"CALayer",R,N,V_layer
T@"CAStateTransition",R,N,V_transition
Td,R,N,V_beginTime
Td,R,N,V_duration
Tf,R,N,V_speed
T@"CAStateControllerTransition",W,D
raise:format:
willChangeValueForKey:
_initWithDisplay:
currentMode
_mode
overscanAdjustment
connectionSeed
array
_display
setCurrentMode:
setDisplayProperties:
setOverscanAdjustment:
name
deviceName
stringWithFormat:
_initWithAttributes:
initWithMatchContent:preferredHdrType:
matchContent
_preferredHdrType
preferences
hdrMode
preferredHdrMode
refreshRate
resolution
predicateWithBlock:
filteredArrayUsingPredicate:
supportedHDRModes
mutableCopy
displays
updateDisplays
mainDisplay
TVOutDisplay
automaticallyNotifiesObserversForKey:
_invalidate
timingsControl
update
immutableCopy
displayId
displayType
uniqueId
containerId
productName
availableModes
preferredMode
colorMode
setColorMode:
allowsVirtualModes
setAllowsVirtualModes:
bounds
frame
safeBounds
processId
isSupported
isExternal
hardwareRefreshRate
heartbeatRate
minimumFrameDuration
hasNativeFrameRateRequest
isOverscanned
overscanAmount
overscanAmounts
isCloned
isCloning
isCloningSupported
nativeOrientation
currentOrientation
odLUTVersion
supportsExtendedColors
externalDisplayAttributes
linkQuality
latency
setLatency:
setPreferences:
preferredModeWithCriteria:
preferredHDRModes
allowedHDRModes
overrideDisplayTimings:
highestLocalPreferredFrameRateRequest
_impl
T@"NSArray",R,N
T@"CADisplayMode",&,N
T@"CADisplayMode",R,N
T@"NSString",C,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T@"NSString",R,N
TI,R,N
Tq,R,N
supported
TB,R,N,GisSupported
Ti,R,N
external
TB,R,N,GisExternal
Td,R,N
TB,R,N
overscanned
TB,R,N,GisOverscanned
T{CGSize=dd},R,N
cloned
TB,R,N,GisCloned
cloning
TB,R,N,GisCloning
cloningSupported
TB,R,N,GisCloningSupported
T@"CADisplayAttributes",R,N
Td,N
T@"CADisplayPreferences",C,N
displayLinkWithDisplay:target:selector:
getCFRunLoop
exceptionWithName:reason:userInfo:
displayLinkWithTarget:selector:
_initWithDisplayLinkItem:
addToRunLoop:forMode:
removeFromRunLoop:forMode:
timestamp
setPaused:
isPaused
priority
setPriority:
setFrameInterval:
frameInterval
targetTimestamp
setPreferredFramesPerSecond:
preferredFramesPerSecond
setPreferredFrameRateRange:
preferredFrameRateRange
paused
TB,N,GisPaused
Tq,N
T{CAFrameRateRange=fff},N
display
setUserInfo:
maximumRefreshRate
userInfo
actualFramesPerSecond
setHighFrameRateReason:
highFrameRateReason
setHighFrameRateReasons:count:
timingOffset
setTimingOffset:
willFireInfoVersion
supportsExpectedWakeupBeforeCommitDeadline
expectedWakeupBeforeCommitDeadline:
setWillFireHandler:
dispatchDeferredDisplayLinks
T@"CADisplay",R,N
T@,&,N
_initWithMode:display:
preferredScale
width
height
_displayModeWithMode:display:
_setWidth:height:
_setPreferredUIScale:
pixelAspectRatio
isVirtual
isHighBandwidth
colorModeIsYCbCr
colorGamut
bitDepth
isVRR
internalRepresentation
_priv
TQ,R,N
highBandwidth
TB,R,N,GisHighBandwidth
T@"NSString",R,C,N
dolbyVision
pqEOTF
hdrStaticMetadataType1
bt2020YCC
legacyHDMIEDID
manufacturerID
productID
weekOfManufacture
yearOfManufacture
serialNumber
.cxx_construct
_edid_attributes
Tq,R
TB,R
TI,R
copy
setConnectionSeed:
_currentMode
_overscanAdjustment
_connectionSeed
TI,N
initWithPreferences:
allocWithZone:
copyWithZone:
mutableCopyWithZone:
setMatchContent:
setPreferredHdrMode:
TB,N
TB,D,N
T@"NSString",C,D,N
setResolution:
setRefreshRate:
setHdrMode:
objectAtIndexedSubscript:
boolValue
charValue
unsignedCharValue
shortValue
unsignedShortValue
intValue
unsignedIntValue
longValue
unsignedLongValue
longLongValue
unsignedLongLongValue
floatValue
doubleValue
CA_CGAffineTransformValue
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithObject:
decodedObject
initWithCapacity:
objectAtIndex:
encodeObject:forKey:
CA_supportedClasses
decodeObjectOfClasses:forKey:
_array
keyEnumerator
nextObject
objectForKey:
setObject:forKey:
_dict
objCType
pointValue
sizeValue
CAPoint3DValue
CAColorMatrixValue
encodeInt:forKey:
encodeFloat:forKey:
decodeIntForKey:
decodeFloatForKey:
containsValueForKey:
decodeDoubleForKey:
_kind
CA_encodeObject:forKey:conditional:
CA_decodeObjectForKey:
_color
archiver:dataForImage:
archiver:formatForImage:
encodeBool:forKey:
decodeObjectOfClass:forKey:
decodeBoolForKey:
unarchiver:didReadData:forImage:
_image
CA_encodeCGFloatArray:count:forKey:
CA_decodeCGFloatArray:count:forKey:
_pattern
encodeDouble:forKey:
initWithCGPathElement:
addToCGPath:
_type
_points
_path
dictionary
numberWithLong:
dictionaryWithCapacity:
objectForKeyedSubscript:
arrayWithCapacity:
length
bytes
_surface
archiver:willEncodeObject:
archiver:didEncodeObject:
archiver:willReplaceObject:withObject:
archiverWillFinish:
archiverDidFinish:
bundleForClass:
imageEncodeOptions
imageFormat
fileURLWithPath:
URLWithString:relativeToURL:
URLWithString:
isHidden
opacity
CAMLWriter:typeForObject:
CAMLWriter:IDForObject:
CAMLWriter:URLForResource:
CAMLWriter:shouldEncodeObject:
initWithResourceDir:
setImageFormat:
setImageEncodeOptions:
skipHiddenLayers
setSkipHiddenLayers:
_resourceDir
_serial
_imageFormat
_imageEncodeOptions
_skipHiddenLayers
T@"NSString",C,V_imageFormat
T@"NSDictionary",C,V_imageEncodeOptions
TB,V_skipHiddenLayers
setWithObjects:
encodeConditionalObject:forKey:
unarchiver:didDecodeObject:
initWithString:
scanDouble:
defaultManager
temporaryDirectory
path
UUID
UUIDString
removeItemAtPath:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToFile:atomically:
dataWithPropertyList:format:options:error:
moveItemAtPath:toPath:error:
begin
initRequiringSecureCoding:
lock
setDelegate:
contentsAreFlipped
numberWithBool:
encodedData
unlock
commit
initWithUTF8String:
initWithObjectsAndKeys:
initWithObjects:
isSubclassOfClass:
tintedImageWithCABackingStore:
image
writerWithData:
encodeObject:
_initWithReference:
addElement:
willAddLayer:
addTransition:
next
state
setState:
elements
setElements:
transitions
setTransitions:
_next
_state
_elements
_transitions
T@"CAStateControllerUndo",R,V_next
T@"CAState",&,N,V_state
T@"NSMutableArray",&,N,V_elements
T@"NSMutableArray",&,N,V_transitions
parseContentsOfURL:
error
result
parseBytes:length:
initWithContentsOfURL:options:error:
parseData:
stringWithUTF8String:
initWithFormat:arguments:
parser
setBaseURL:
baseURL
parseString:
objectById:
elementValue
setElementValue:
attributeForKey:remove:
willLoadResourceFromURL:
didLoadResource:fromURL:
didFailToLoadResourceFromURL:
parserError:
parserWarning:
_data
T@"NSURL",&
T@"<CAMLParserDelegate>",W
T@"NSError",R
T@,R
errorWithDomain:code:userInfo:
initWithType:
filterWithType:
isEnabled
setName:
setEnabled:
setCachesInputImage:
cachesInputImage
type
setElementAttribute:forKey:
filterTypes
filterWithName:
initWithName:
enabled
isAccessibility
setAccessibility:
valueForKey:
setDefaults
CA_copyRenderValue
encodeWithCAMLWriter:
_name
_flags
_attr
_cache
T@"NSString",R
TB,GisEnabled
accessibility
TB,GisAccessibility
beginPropertyElement:
endElement
removeObjectIdenticalTo:
foreachLayer:
removeElement:
basedOn
setBasedOn:
nextDelay
setNextDelay:
previousDelay
setPreviousDelay:
isLocked
setLocked:
isInitial
setInitial:
_basedOn
_nextDelay
_previousDelay
_enabled
_locked
_initial
T@"NSString",C,N,V_name
T@"NSString",C,V_basedOn
TB,GisEnabled,V_enabled
T@"NSArray",C,N
Td,V_nextDelay
Td,V_previousDelay
locked
TB,N,GisLocked,V_locked
initial
TB,GisInitial,V_initial
initWithVertexCount:vertices:faceCount:faces:depthNormalization:
_init
_initWithMeshTransform:
dataUsingEncoding:
_subdivideToDepth:
depthNormalization
_constructWithData:
initWithString:relativeToURL:
initWithContentsOfURL:
URLStringForResource:
initWithFormat:
initWithData:encoding:
setElementContent:
meshTransformWithVertexCount:vertices:faceCount:faces:depthNormalization:
vertexCount
vertexAtIndex:
faceCount
faceAtIndex:
subdivisionSteps
replicatesEdges
subdividedMesh:
inverseMesh
CA_interpolateValue:byFraction:
CA_interpolateValues:::interpolator:
CA_distanceToValue:
meshTransformForLayer:
_normalization
_subdivisionSteps
_replicatesEdges
Ti,R
replaceVertexAtIndex:withVertex:
replaceFaceAtIndex:withFace:
meshTransform
setDepthNormalization:
setSubdivisionSteps:
setReplicatesEdges:
addVertex:
removeVertexAtIndex:
addFace:
removeFaceAtIndex:
_interp
_initWithName:
functionWithName:
inputCount
outputCount
apply:result:
apply:result:parameterFunction:context:
_string
appendString:
initWithControlPoints::::
_getPoints:
functionWithControlPoints::::
getControlPointAtIndex:values:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
characterAtIndex:
_solveForInput:
CAMLType
classForCoder
_index
target
setKey:
setAnimation:
setTarget:
setSource:
keyPath
matches:
apply:
_key
T@"NSString",C,N,V_key
CA_prepareRenderValue
CA_copyRenderValueWithColorspace:
CA_copyNumericValue:
transformStruct
getObjects:andKeys:count:
CA_copyRenderKeyValueArray
initWithInt:
shouldDrawOnMainThread
setNeedsDisplayInRect:
setContentsChanged
setNeedsDisplay
shouldArchiveValueForKey:
contents
setContents:
isDrawingEnabled
_dealloc
levelsOfDetail
levelsOfDetailBias
contentsScale
tileSize
isOpaque
canDrawConcurrently
fadeDuration
prefetchedTiles
fillColor
maximumTileScale
invalidateContents
_canDisplayConcurrently
setUnsafeUnretainedDelegate:
setLevelsOfDetail:
setLevelsOfDetailBias:
setTileSize:
setNeedsDisplayInRect:levelOfDetail:options:
tiledLayer:canDrawRect:levelOfDetail:
numberWithUnsignedInt:
setNeedsDisplayInRect:levelOfDetail:
canDrawRect:levelOfDetail:
displayInRect:levelOfDetail:options:
setFillColor:
setMaximumTileScale:
setDrawingEnabled:
T^{CGColor=}
drawingEnabled
TB,GisDrawingEnabled
T@"<CATiledLayerDelegate><CALayerDelegate>",W
drawsAsynchronously
acceleratesDrawing
clearsContext
drawInContext:
initWithFloat:
initWithCharacters:length:
isWrapped
setSizeRequisition:
superlayer
setNeedsLayout
font
fontSize
foregroundColor
string
_createStringDict
truncationString
_retainTypesetter
_applyLinesToFunction:info:truncated:
alignmentMode
truncationMode
_createTruncationToken
saveGraphicsState
graphicsContextWithGraphicsPort:flipped:
setCurrentContext:
size
_applyLinesToFunction:info:
restoreGraphicsState
allowsFontSubpixelQuantization
needsDisplayForKey:
_preferredSize
isTruncated
_drawLine:inContext:atPoint:
_prepareContext:
setString:
setFontSize:
setFont:
setForegroundColor:
setWrapped:
setTruncationMode:
setAlignmentMode:
setAllowsFontSubpixelQuantization:
T@,C
Tr^v
wrapped
TB,GisWrapped
setTruncationString:
truncated
TB,R,GisTruncated
sharedApplication
userInterfaceLayoutDirection
insertState:atIndex:
states
insertObject:atIndex:
setStates:
indexOfObjectIdenticalTo:
removeObjectAtIndex:
stateTransitions
fromState
toState
addState:
removeState:
stateWithName:
dependentStatesOfState:
stateTransitionFrom:to:
T@"NSArray",C,D
scrollMode
setBounds:
convertPoint:fromLayer:
scrollToPoint:
convertRect:fromLayer:
scrollToRect:
convertRect:toLayer:
_scrollPoint:fromLayer:
_scrollRect:fromLayer:
_visibleRectOfLayer:
setScrollMode:
scrollPoint:
scrollRectToVisible:
visibleRect
T{CGRect={CGPoint=dd}{CGSize=dd}},R
animation
setFromState:
setToState:
_fromState
_toState
T@"NSString",C,N,V_fromState
T@"NSString",C,N,V_toState
T@"NSArray",C,N,V_elements
repeatDuration
autoreverses
repeatCount
timeOffset
fillMode
particleType
lifetimeRange
emissionLatitude
emissionLongitude
emissionRange
velocityRange
xAcceleration
yAcceleration
zAcceleration
mass
massRange
scaleRange
scaleSpeed
orientationLatitude
orientationLongitude
orientationRange
rotation
rotationRange
spinRange
color
redRange
greenRange
blueRange
alphaRange
redSpeed
greenSpeed
blueSpeed
alphaSpeed
minificationFilterBias
contentsFrameCount
contentsFramesPerRow
contentsFramesPerSecond
contentsFrameMode
contentsRect
magnificationFilter
minificationFilter
appendFormat:
emitterCell
setBeginTime:
setDuration:
setSpeed:
setTimeOffset:
setRepeatCount:
setRepeatDuration:
setAutoreverses:
setFillMode:
valueForUndefinedKey:
setValue:forUndefinedKey:
valueForKeyPath:
setValue:forKeyPath:
style
setStyle:
setLifetimeRange:
setEmissionLatitude:
setEmissionLongitude:
setEmissionRange:
setVelocityRange:
setXAcceleration:
setYAcceleration:
setZAcceleration:
setScaleRange:
setScaleSpeed:
setOrientationLatitude:
setOrientationLongitude:
setOrientationRange:
setRotation:
setRotationRange:
setSpinRange:
setColor:
setRedRange:
setRedSpeed:
setGreenRange:
setGreenSpeed:
setBlueRange:
setBlueSpeed:
setAlphaRange:
setAlphaSpeed:
setContentsRect:
setContentsScale:
setMagnificationFilter:
setMinificationFilter:
setMinificationFilterBias:
T@,&
T@"NSDictionary",C
setParticleType:
setMass:
setMassRange:
setContentsFrameMode:
setContentsFrameCount:
setContentsFramesPerRow:
setContentsFramesPerSecond:
properties
contextImpl
numberWithUnsignedChar:
_renderShmem
stringWithString:
addAnimation:forKey:
_animation
T@"CAAnimation",&,N,V_animation
presentsWithTransaction
lowLatency
isMainThread
maximumDrawableCount
currentState
flush
_didCommitLayer:
drawableProperties
setDrawableProperties:
nativeWindow
layerDidBecomeVisible:
_defersDidBecomeVisiblePostCommit
setPresentsWithTransaction:
_win
isDrawableAvailableInternal
isDrawableAvailable
discardContents
setAsynchronous:
isAsynchronous
setMaximumDrawableCount:
setLowLatency:
setInputTime:
inputTime
setDrawableTimeoutSeconds:
drawableTimeoutSeconds
T^{_EAGLWindowObject=^?^?^?},R
asynchronous
TB,GisAsynchronous
presentRenderbuffer:atTime:
bundleWithIdentifier:
classNamed:
initWithLayer:key:
T@"NSString",R,N,V_key
hidesSourceLayer
matchesOpacity
matchesPosition
matchesTransform
allowsBackdropGroups
sourceLayer
context
contextId
sourceLayerRenderId
sourceContextId
setSourceLayer:
setSourceLayerRenderId:
setSourceContextId:
setHidesSourceLayer:
setMatchesOpacity:
setMatchesPosition:
setMatchesTransform:
setAllowsBackdropGroups:
T@"CALayer",W
CAMLParser:formatWarningString:arguments:lineNumber:
CAMLParser:formatErrorString:arguments:lineNumber:
CAMLParser:didFailToFindClassWithName:
initWithContentsOfURL:encoding:error:
CAMLParser:evaluateScriptElement:sourceURL:lineNumber:
absoluteString
CAMLParser:evaluateScriptValue:sourceURL:lineNumber:
CAMLParser:resourceForURL:
CAMLParser:didLoadResource:fromURL:
CAMLParser:didFailToLoadResourceFromURL:
tintedImageWithCGImage:tint:copyFlags:
setImage:
setTint:
tint
tintedImageWithCGImage:tint:
_tint
_copy_flags
T^{CGImage=},&,V_image
T^{CGColor=},&,V_tint
setVertexBuffer:offset:atIndex:
methodForSelector:
setFragmentBuffer:offset:atIndex:
setVertexBufferOffset:atIndex:
setFragmentBufferOffset:atIndex:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
setPurgeableState:
newBufferWithLength:options:
newCommandQueue
setLabel:
setSubmissionQueue:
setCompletionQueue:
device
renderPassDescriptor
newDepthStencilStateWithDescriptor:
setBackgroundGPUPriority:
supportsMemorylessRenderTargets
sharedCaptureManager
newCaptureScopeWithCommandQueue:
minConstantBufferAlignmentBytes
pathForResource:ofType:
newLibraryWithFile:error:
localizedDescription
iosurfaceReadOnlyTextureAlignmentBytes
maxTextureWidth2D
maxTextureHeight2D
setDefaultCaptureScope:
isCapturing
supportsDestination:
setDateFormat:
date
stringFromDate:
stringByAppendingPathComponent:
setCaptureObject:
setDestination:
setOutputURL:
startCaptureWithDescriptor:error:
beginScope
endScope
stopCapture
supportsFamily:
maxFragmentTextures
maxFragmentSamplers
maxColorAttachments
setGPUPriority:
kernelStartTime
kernelEndTime
addScheduledHandler:
GPUEndTime
GPUStartTime
addCompletedHandler:
waitUntilScheduled
insertDebugSignpost:
pushDebugGroup:
popDebugGroup
waitUntilCompleted
setMinFilter:
setMagFilter:
setTAddressMode:
setSAddressMode:
setMipFilter:
setMaxAnisotropy:
newSamplerStateWithDescriptor:
initWithBytesNoCopy:length:encoding:freeWhenDone:
stringByAppendingString:
newFunctionWithName:constantValues:error:
newFunctionWithName:
newRenderPipelineStateWithDescriptor:error:
setFragmentFunction:
setVertexFunction:
setVertexDescriptor:
fragmentFunction
label
vertexFunction
colorAttachments
pixelFormat
writeMask
isBlendingEnabled
rgbBlendOperation
alphaBlendOperation
sourceRGBBlendFactor
sourceAlphaBlendFactor
destinationRGBBlendFactor
destinationAlphaBlendFactor
setPixelFormat:
setWriteMask:
setBlendingEnabled:
setAlphaBlendOperation:
setSourceAlphaBlendFactor:
setDestinationAlphaBlendFactor:
setRgbBlendOperation:
setSourceRGBBlendFactor:
setDestinationRGBBlendFactor:
attributes
layouts
setStride:
setStepFunction:
setFormat:
setOffset:
setBufferIndex:
setRenderPipelineState:
setScissorRect:
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
newTextureWithDescriptor:
setTextureType:
setFragmentTexture:atIndex:
setFragmentSamplerState:atIndex:
drawPrimitives:vertexStart:vertexCount:instanceCount:
drawPrimitives:vertexStart:vertexCount:
setUsage:
setProtectionOptions:
protectionOptions
storageMode
newTextureWithDescriptor:iosurface:plane:
setMipmapLevelCount:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
setHeight:
setDepth:
deviceLinearReadOnlyTextureAlignmentBytes
newBufferWithBytesNoCopy:length:options:deallocator:
cpuCacheMode
setCpuCacheMode:
setStorageMode:
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
usage
mipmapLevelCount
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
newTextureViewWithPixelFormat:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
generateMipmapsForTexture:
waitUntilComplete
supportsExtendedXR10Formats
setRenderTargetWidth:
setRenderTargetHeight:
setTexture:
setClearColor:
setStoreAction:
setLoadAction:
newComputePipelineStateWithFunction:error:
setComputePipelineState:
threadExecutionWidth
maxTotalThreadsPerThreadgroup
setTexture:atIndex:
setBuffer:offset:atIndex:
setThreadgroupMemoryLength:atIndex:
dispatchThreadgroups:threadsPerThreadgroup:
endEncoding
commandBuffer
enqueue
setLevel:
setFineGrainedBackgroundVisibilityEnabled:
renderCommandEncoderWithDescriptor:
setViewport:
setFrontFacingWinding:
setCullMode:
setDepthBias:slopeScale:clamp:
setTriangleFillMode:
setBlendColorRed:green:blue:alpha:
setDepthStencilState:
setVisibilityResultMode:offset:
blitCommandEncoder
computeCommandEncoderWithDispatchType:
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
setFramebufferOnly:
setConstantValue:type:withName:
_newFenceWithPort:name:
_initWithPort:name:
isInvalidated
_newFenceFromServer:isObservable:
newFenceFromServer:
_initWithXPCRepresentation:
_copyPort
_accessMachPort:
_copyUntrackedPort
createXPCRepresentation
encodeXPCObject:forKey:
decodeXPCObjectOfType:forKey:
isUsable
newFenceFromDefaultServer
handleFromXPCRepresentation:
handleForPort:fenceId:
fenceId
copyPort
accessMachPort:
_handle_name
_fence_name
_port
_invalidation_mutex
_lock
_invalidated
usable
TB,R,GisUsable
invalidated
TB,R,GisInvalidated
initWithDisplay:
addFrameRateRange:
removeFrameRateRange:
updateFrameRateRange:toRange:
arbitratedRange
arbitratedIntervalRange
reasonsWithCount:
addReason:
addCompatQuantaIntent
hasCompatQuantaIntent
T{CAFrameRateRange=fff},R,N
initWithLayer:
removeTransition:
setCurrentState:
undoStack
_currentState
_undoStack
_nextTimer
_nextState
_nextSpeed
T@"CALayer",R,V_layer
T@"CAState",&,N,V_currentState
T@"CAStateControllerUndo",R,V_undoStack
setKeyPath:
setObject:
setBeforeObject:
object
beforeObject
_keyPath
_object
_beforeObject
T@"NSString",C,N,V_keyPath
T@,&,N,V_object
T@,&,N,V_beforeObject
.cxx_destruct
_target
T@"CALayer",W,N,V_target
removeAllObjects
didScheduledPresent
present
presentAtTime:
texture
T@"<MTLTexture>",R
T@"CAMetalLayer",R
dirtyRect
setDirtyRect:
T{CGRect={CGPoint=dd}{CGSize=dd}},N
addPresentScheduledHandler:
initWithDrawablePrivate:layer:
releasePrivateReferences:
priv
cachedTexture
drawableID
setDrawableID:
sharedEvent
setSharedEvent:
insertSeed
setInsertSeed:
presentScheduledInsertSeedValid
setPresentScheduledInsertSeedValid:
presentScheduledInsertSeed
setPresentScheduledInsertSeed:
_cachedTexture
_dirtyRect
_drawableID
_sharedEvent
_insertSeed
_presentScheduledInsertSeedValid
_presentScheduledInsertSeed
_presentScheduledHandlers
TQ,N,V_drawableID
T@"IOSurfaceSharedEvent",&,N,V_sharedEvent
TI,N,V_insertSeed
TI,N,V_presentScheduledInsertSeed
TB,N,V_presentScheduledInsertSeedValid
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_dirtyRect
allowsNextDrawableTimeout
fenceEnabled
serverSyncEnabled
exclusiveMode
registryID
colorspace
nonDefaultColorspace
setColorspace:nonDefault:
setNonDefaultColorspace:
nextDrawable
setDevice:
preferredDevice
setDrawableSize:
drawableSize
framebufferOnly
setColorspace:
newDrawable
displaySyncEnabled
setDisplaySyncEnabled:
setAllowsNextDrawableTimeout:
T@"<MTLDevice>",&
T@"<MTLDevice>",R
T^{CGColorSpace=}
displayCompositingInternalStatus
removeBackBuffers
setFenceEnabled:
setServerSyncEnabled:
setExclusiveMode:
TQ,N
containsObject:
removeObjectsInArray:
setIsDrawable:
drawInLinearMaskContext:
T@"<CALinearMaskLayerDelegate><CALayerDelegate>",W,D
newTextureLayoutWithDescriptor:isHeapOrBufferBacked:
alignment
initializeTextureMemory:
copyFromLinearBytes:linearOffset:linearBytesPerRow:linearBytesPerImage:toTextureMemory:textureSlice:textureLevel:textureRegion:
finalizeTextureMemory:
initWithDouble:
initWithUnsignedInt:
mainBundle
infoDictionary
_retainColorSpace
anchorPoint
transform
sublayerTransform
anchorPointZ
zPosition
needsLayoutOnGeometryChange
_renderImageCopyFlags
runActionForKey:object:arguments:
contentsScaling
needsDisplayOnBoundsChange
modelLayer
substringFromIndex:
setTransform:
affineTransform
setPosition:
ancestorSharedWithLayer:
ignoresHitTesting
allowsHitTesting
isDoubleSided
masksToBounds
containsPoint:
mask
hitTest:
sublayers
sortsSublayers
initWithLayers:count:retain:
removeObject:
value
additive
CA_addValue:multipliedBy:
actionForLayer:forKey:
defaultActionForKey:
_implicitAnimationForLayer:keyPath:
setDefaultDuration:
setTimingFunction:
isRemovedOnCompletion
_propertyFlagsForLayer:
setBeginTimeMode:
_copyRenderAnimationForLayer:
_scheduleAnimationTimer
performSelectorOnMainThread:withObject:waitUntilDone:
_cancelAnimationTimer
beginTimeMode
applyForTime:presentationObject:modelObject:
needsDisplay
layoutIfNeeded
displayIfNeeded
shadowOpacity
cornerRadius
_continuousCorners
compositingFilter
shadowOffset
shadowRadius
shadowColor
_renderBackgroundInContext:
_renderForegroundInContext:
_renderSublayersInContext:
_renderBorderInContext:
renderInContext:
backgroundColor
edgeAntialiasingMask
contentsTransform
contentsMultiplyColor
contentsSwizzle
borderWidth
borderColor
displayLayer:
layerWillDraw:
_overrideImageFormat
drawsMipmapLevels
integerValue
drawLayer:inContext:
_previousLayoutHash
_layoutHash
_setPreviousLayoutHash:
isEqualToNumber:
animationWithKeyPath:
setToValue:
_saveCurrentLayoutHash
layoutSublayers
_validateLayoutHashHasChangedWithLayoutTime:
sizeRequisition
layoutSublayersOfLayer:
_layoutSublayersOfLayer:
initialize
cornerCurveExpansionFactor:
retainWeakReference
allowsWeakReference
CA_archivingValueForKey:
observationInfo
setObservationInfo:
setAnchorPoint:
position
setZPosition:
setAffineTransform:
setFrame:
isGeometryFlipped
setGeometryFlipped:
convertPoint:toLayer:
convertTime:fromLayer:
convertTime:toLayer:
setEdgeAntialiasingMask:
rasterizationScale
setRasterizationScale:
disableUpdateMask
setDisableUpdateMask:
securityMode
setSecurityMode:
contentsFormat
setContentsFormat:
contentsGravity
contentsGravityEnum
setContentsGravity:
setContentsScaling:
setOpacity:
setSublayers:
setMask:
unsafeUnretainedDelegate
removeFromSuperlayer
insertSublayer:atIndex:
addSublayer:
insertSublayer:below:
insertSublayer:above:
replaceSublayer:with:
actionForKey:
removeAllAnimations
animationKeys
presentationLayer
_contentsFormatDidChange:
needsLayout
preferredFrameSize
maskedCorners
setMaskedCorners:
cornerCurve
setCornerCurve:
continuousCorners
setContinuousCorners:
setAnchorPointZ:
cornerContents
setCornerContents:
setHidden:
setDoubleSided:
setOpaque:
setNeedsDisplayOnBoundsChange:
setSublayerTransform:
contentsCenter
setContentsCenter:
cornerContentsCenter
setCornerContentsCenter:
cornerContentsMasksEdges
setCornerContentsMasksEdges:
contentsContainsSubtitles
setContentsContainsSubtitles:
gain
setGain:
setBackgroundColor:
setMasksToBounds:
filters
setFilters:
backgroundFilters
setBackgroundFilters:
setCompositingFilter:
actions
setActions:
setBorderColor:
setBorderWidth:
setCornerRadius:
setContentsMultiplyColor:
setContentsSwizzle:
setShadowOpacity:
setShadowColor:
setShadowOffset:
setShadowRadius:
setShadowPath:
shadowPath
shouldRasterize
setShouldRasterize:
rasterizationPrefersDisplayCompositing
setRasterizationPrefersDisplayCompositing:
setDrawsAsynchronously:
allowsEdgeAntialiasing
setAllowsEdgeAntialiasing:
allowsGroupOpacity
setAllowsGroupOpacity:
T{CATransform3D=dddddddddddddddd}
hidden
TB,GisHidden
doubleSided
TB,GisDoubleSided
geometryFlipped
TB,GisGeometryFlipped
T@"CALayer",R
T@"CALayer",&
opaque
TB,GisOpaque
T@"<CALayerDelegate>",W
setFromValue:
isDescendantOf:
backgroundColorPhase
preloadsCache
createsCompositingGroup
allowsDisplayCompositing
wantsExtendedDynamicRangeContent
toneMapToStandardDynamicRange
allowsGroupBlending
hitTestsContentsAlphaChannel
hitTestsAsOpaque
literalContentsCenter
inheritsTiming
definesDisplayRegionOfInterest
invertsShadow
shadowPathIsBounds
instanceMethodForSelector:
hasBeenCommitted
clearHasBeenCommitted
setMeshTransform:
regionBeingDrawn
layoutIsActive
layoutBelowIfNeeded
layerBeingDrawn
layerAtTime:
addPresentationModifier:
removePresentationModifier:
presentationModifiers
setPresentationModifiers:
recursiveDescription
isFlipped
setFlipped:
setAllowsHitTesting:
setHitTestsContentsAlphaChannel:
setHitTestsAsOpaque:
setLiteralContentsCenter:
setCanDrawConcurrently:
setClearsContext:
isFrozen
setFrozen:
setNeedsLayoutOnGeometryChange:
setSortsSublayers:
flipsHorizontalAxis
setFlipsHorizontalAxis:
setInvertsShadow:
setShadowPathIsBounds:
setContentsTransform:
contentsAlignsToPixels
setContentsAlignsToPixels:
contentsDither
setContentsDither:
contentsOpaque
setContentsOpaque:
setInheritsTiming:
setPreloadsCache:
setCreatesCompositingGroup:
setAllowsDisplayCompositing:
setWantsExtendedDynamicRangeContent:
setToneMapToStandardDynamicRange:
setAllowsGroupBlending:
setBackgroundColorPhase:
setAcceleratesDrawing:
setDefinesDisplayRegionOfInterest:
motionBlurAmount
setMotionBlurAmount:
needsLayoutForKey:
CA_setterForProperty:
CA_getterForProperty:
resolveInstanceMethod:
T@"CAMeshTransform",C
frozen
TB,GisFrozen
T{CGAffineTransform=dddddd}
T@"<CALayerDelegate>"
getRendererInfo:size:
beginElement:
initWithArray:
setValue:
_value
initWithObjects:count:
getObjects:
getObjects:range:
_ivars
contextWithOptions:
remoteContextWithOptions:
server
localContextWithOptions:
serverWithOptions:
addDisplay:
displayWithUniqueId:
serverIfRunning
stopServer
removeDisplay:
removeAllDisplays
displayWithName:
displayWithDisplayId:
_detectSimDisplays
_detectDisplays
setRendererFlags:
rendererFlags
setSecure:
isSecure
secureModeViolations
insecureProcessIds
isSlotValid:
setSlotDeletionCallback:
slotDeletionCallback
clientPortOfContextId:
taskNamePortOfContextId:
contextIdHostingContextId:
isMirroringEnabled
setMirroringEnabled:
_mirroringEnabled
T@"NSArray",R
mirroringEnabled
TB,GisMirroringEnabled,V_mirroringEnabled
secure
TB,GisSecure
powerStateDidChange:
defaultCenter
addObserver:selector:name:object:
removeObserver:
initWithUUIDString:
contextIdAtPosition:excludingContextIds:
dictionaryWithObjectsAndKeys:
numberWithFloat:
addClone:options:
processInfo
isLowPowerModeEnabled
brightnessAvailable
emitBrightnessError:
supportsColorSpaces
setColorMatrix:scale:rampDuration:
abortColorMatrixRamp:scale:
canUpdateWithFlags:
finishExternalUpdate:withFlags:debugInfo:
postNotification:payload:
notificationQueue
setSDRBrightness:
setHeadroom:
setPotentialHeadroom:
setAmbient:
setFilteredAmbient:
setBrightnessLimit:
commitBrightness:
registerForNotifications:withBlock:
unregisterNotificationBlocks
setNotificationQueue:
setWhitePoint:rampDuration:error:
abortWhitePointRamp:error:
productId
vendorId
uuid
whitePointAvailable
whitePointD50XYZ
brightnessCapabilities
serviceObject
maximumHDRLuminance
setMaximumHDRLuminance:
maximumSDRLuminance
setMaximumSDRLuminance:
minimumLuminance
setMinimumLuminance:
maximumReferenceLuminance
setMaximumReferenceLuminance:
T@"NSUUID",R,N
T@"NSDictionary",R,N
commitPreset
trinityCabalConfig
setTrinityCabalConfig:
preserveAppleSRGBGammaResponse
setPreserveAppleSRGBGammaResponse:
_initWithCADisplayServer:
nativeSize
scales
setScales:
scalePreservesAspect
setScalePreservesAspect:
minimumScale
maximumScale
minimumSourceRectSize
maximumSourceRectWidth
maximumSourceRectPixels
panelPhysicalSize
panelPointsPerInch
contextIdAtPosition:
hitTestAtPosition:options:
clientPortAtPosition:
convertPoint:toContextId:
convertPoint:fromContextId:
transformFromLayerId:inContextId:
clones
addClone:
removeClone:
removeAllClones
cloneMaster
setBlanked:
isBlanked
willUnblank
setCalibrationPhase:forIdentifier:
setFlipBookEnabled:
isFlipBookEnabled
setOrientation:
orientation
setOverscanAmount:
setOverscanAmounts:
setApertureOffset:
apertureOffset
setInvertsColors:
invertsColors
setAllowsExtendedDynamicRange:
allowsExtendedDynamicRange
setGrayscale:
isGrayscale
setUserAdjustment:scale:
setContrastEnhancer:rampDuration:
abortContrastEnhancerRamp:
nits
setNits:
setAccessibilityColorMatrix:scale:
setContrast:
contrast
setMaximumBrightness:
maximumBrightness
maximumLuminance
setMinimumRefreshRate:
minimumRefreshRate
setMaximumRefreshRate:
setIdealRefreshRate:
idealRefreshRate
setUsesPreferredModeRefreshRate:
usesPreferredModeRefreshRate
setTag:
setProcessId:
setTVMode:
TVMode
setTVSignalType:
TVSignalType
setHotPlugCallback:
setBrightnessCallback:
setUpdateRequestCallback:
hotPlugCallback
brightnessCallback
updateRequestCallback
freeze
acquireFrozenSurface
setDisablesUpdates:
disablesUpdates
setDisabled:
disabled
framebufferFormat
whitepoint
chromaticities
gamma
transportType
emitWhitePointError:
canUpdate:
nextWakeupTime
vblDelta
previousVBL
beginExternalUpdate:usingSoftwareRenderer:
finishExternalUpdate:withFlags:
activateReplay
presentSurface:withOptions:
detachingDisplay
isDetaching
detachingRect
needsUpdate
supportsCursor
maximumCursorSize
cursorPosition
setCursorPosition:
cursorDictionary
setCursorDictionary:
cursorHidden
setCursorHidden:
cursorEnabled
setCursorEnabled:
tripleBuffered
minimumVisibleCursorSize
cursorSurface
setCursorSurface:
wantedToDetach
setDigitalModes:withTimings:
copyDisplayTimingsFromDisplay:
addFramePresentationTimestamp:
blendColorSpace
setBlendColorSpace:
displayColorSpace
setDisplayColorSpace:
systemGamma
setSystemGamma:
blackpointAdaptation
setBlackpointAdaptation:
setGammaAdjustment:
accessibilityFrameRateLimitEnabled
setAccessibilityFrameRateLimitEnabled:
renderForTime:
minimumFrameTime
maximumFrameTime
minimumVRRVBLDelta
maximumVRRVBLDelta
_minimumFrameTime
_maximumFrameTime
_minimumVRRVBLDelta
_maximumVRRVBLDelta
T{CGSize=dd},R
Td,R
T@"NSSet",R
T@"CAWindowServerDisplay",R
blanked
TB,GisBlanked
flipBookEnabled
TB,GisFlipBookEnabled
grayscale
TB,GisGrayscale
Tf,R
T@?,C
T^v,R
detaching
TB,R,GisDetaching
TQ,R,V_minimumFrameTime
TQ,R,V_maximumFrameTime
TQ,R,V_minimumVRRVBLDelta
TQ,R,V_maximumVRRVBLDelta
T{?=ff},R
T{?={?=ff}{?=ff}{?=ff}{?=ff}},R
T^{__IOSurface=},&
T^{CGColorSpace=},&
T{CGColorTRC=i(?={CGColorTRCParametric=ffffffff}{CGColorTRCTable=Q^f{CGColorTRCBoundaryExtension=ff}{CGColorTRCBoundaryExtension=ff}})}
unsignedIntegerValue
initWithOptions:
firstObject
allValues
optimizationOpportunities:
strokeColor
strokeStart
strokeEnd
null
addObjectsFromArray:
targetName
save
source
_source
T@"CAStateElement",&,N,V_source
resetBitMask
flushLocally
groupWithCapacity:
updatesAsynchronously
setUpdatesAsynchronously:
nextSlot
markWritten:
shmem
capacity
flushWithTransaction
_setLocalContextId:
_shmem
_capacity
_count
_localId
initWithKeyPath:initialValue:initialVelocity:additive:preferredFrameRateRangeMaximum:group:
setValue:velocity:
write
initWithKeyPath:initialValue:additive:
initWithKeyPath:initialValue:additive:group:
group
_velocity
_group
T@"CAPresentationModifierGroup",R
timingFunction
discretizesTime
setPreferredFrameRateRangeMinimum:
setPreferredFrameRateRangeMaximum:
setPreferredFrameRateRangePreferred:
preferredFrameRateRangeMinimum
preferredFrameRateRangeMaximum
preferredFrameRateRangePreferred
CA_encodesPropertyConditionally:type:
_setCARenderAnimation:layer:
removedOnCompletion
setRemovedOnCompletion:
T@"CAMediaTimingFunction",&
T@"<CAAnimationDelegate>",&
TB,GisRemovedOnCompletion
T{CAFrameRateRange=fff}
setDiscretizesTime:
isAdditive
isCumulative
valueFunction
setAdditive:
setCumulative:
setValueFunction:
cumulative
TB,GisAdditive
TB,GisCumulative
T@"CAValueFunction",&
fromValue
toValue
byValue
roundsToInteger
startAngle
endAngle
_timeFunction:
CA_roundToIntegerFromValue:
setByValue:
setRoundsToInteger:
setStartAngle:
setEndAngle:
calculationMode
values
keyTimes
timingFunctions
tensionValues
continuityValues
biasValues
rotationMode
setCalculationMode:
setKeyTimes:
setTimingFunctions:
setValues:
setPath:
setTensionValues:
setContinuityValues:
setBiasValues:
setRotationMode:
stiffness
damping
durationForEpsilon:
settlingDuration
setStiffness:
setDamping:
setInitialVelocity:
initialVelocity
targetsSuperlayer
sourcePoints
usesNormalizedCoordinates
appliesScale
appliesRotation
appliesX
appliesY
setSourcePoints:
setTargetsSuperlayer:
setUsesNormalizedCoordinates:
setAppliesX:
setAppliesY:
setAppliesScale:
setAppliesRotation:
filter
subtype
startProgress
endProgress
options
transitionFlags
setType:
setSubtype:
setStartProgress:
setEndProgress:
setFilter:
setOptions:
setTransitionFlags:
animations
setAnimations:
value:withObjCType:
fillRule
lineCap
lineJoin
lineWidth
miterLimit
lineDashPattern
lineDashPhase
setFillRule:
setStrokeColor:
setStrokeStart:
setStrokeEnd:
setLineWidth:
setMiterLimit:
setLineJoin:
setLineCap:
setLineDashPattern:
setLineDashPhase:
inheritsSecurity
preservesFlip
setContextId:
setInheritsSecurity:
rendersAsynchronously
setRendersAsynchronously:
asynchronousRenderPeriod
setAsynchronousRenderPeriod:
asynchronousRenderTimes
setAsynchronousRenderTimes:
setPreservesFlip:
asynchronousRenderMaxAPL
setAsynchronousRenderMaxAPL:
asynchronousRenderMaxAPLStrength
setAsynchronousRenderMaxAPLStrength:
_asynchronousRenderMaxAPL
_asynchronousRenderMaxAPLStrength
Tf,V_asynchronousRenderMaxAPL
Tf,V_asynchronousRenderMaxAPLStrength
instanceCount
instanceTransform
instanceDelay
instanceColor
instanceRedOffset
instanceGreenOffset
instanceBlueOffset
instanceAlphaOffset
setInstanceCount:
setInstanceDelay:
setInstanceTransform:
setInstanceColor:
setInstanceRedOffset:
setInstanceGreenOffset:
setInstanceBlueOffset:
setInstanceAlphaOffset:
initWithAPI:properties:
sharegroup
getMacroContextPrivate
setParameter:to:
fontSmoothingStyle
setFontSmoothingStyle:
_initWithContentsOfURL:type:options:error:
_initWithData:type:options:error:
_readFromCAMLURL:type:options:error:
_readFromArchiveData:options:error:
_readFromCAMLData:type:options:error:
substitutedClasses
setClass:forClassName:
initForReadingFromData:error:
_addClassSubstitutions:
finishDecoding
reason
URLByDeletingLastPathComponent
fileURLWithPath:isDirectory:
propertyListWithData:options:format:error:
allKeys
rootLayer
allowedClasses
packageWithContentsOfURL:type:options:error:
packageWithData:type:options:error:
publishedObjectNames
publishedObjectWithName:
unarchiver:cannotDecodeObjectOfClassName:originalClasses:
TB,R,GisGeometryFlipped
activateBackground:
animationDuration
setAnimationDuration:
animationTimingFunction
setAnimationTimingFunction:
disableActions
setDisableActions:
completionBlock
setCompletionBlock:
addCommitHandler:forPhase:
pushAnimator:
popAnimator
animator
setCommitHandler:
currentPhase
setPresentationHandler:queue:
activate
synchronize
animatesFromModelValues
setAnimatesFromModelValues:
disableSignPosts
setDisableSignPosts:
commitTime
setCommitTime:
updateDeadline
setUpdateDeadline:
earliestAutomaticCommitTime
setEarliestAutomaticCommitTime:
disableRunLoopObserverCommits
setDisableRunLoopObserverCommits:
defaultDisableRunLoopObserverCommits
setDefaultDisableRunLoopObserverCommits:
frameStallSkipRequest
setFrameStallSkipRequest:
startFrameWithReason:beginTime:commitDeadline:
finishFrameWithToken:
setFrameInputTime:withToken:
generateSeed
assertInactive
registerBoolKey
boolValueForKey:
setBoolValue:forKey:
committingContexts
setCommittingContexts:
setImplicitTransactionDidBeginHandler:
flushAsRunLoopObserver
completionItem
captureOnly
reducesCaptureBitDepth
ignoresScreenClip
backdropRect
zoom
marginWidth
groupNamespace
allowsInPlaceFiltering
groupName
tracksLuma
setGroupNamespace:
setUsesGlobalGroupNamespace:
usesGlobalGroupNamespace
setGroupName:
setBackdropRect:
setZoom:
setMarginWidth:
setCaptureOnly:
setAllowsInPlaceFiltering:
setReducesCaptureBitDepth:
setIgnoresScreenClip:
setTracksLuma:
disablesOccludedBackdropBlurs
setDisablesOccludedBackdropBlurs:
_disablesOccludedBackdropBlurs
TB,V_disablesOccludedBackdropBlurs
T@"<CABackdropLayerDelegate><CALayerDelegate>",W,D
backdropLayer:didChangeLuma:
offset
sharpness
invertsShape
setInvertsShape:
setSharpness:
behaviorWithType:
behaviorTypes
initWithData:
encodeObject:conditionally:
_writeElementTree:
T@"<CAMLWriterDelegate>",W
allObjects
compare:
sortedArrayUsingSelector:
base64EncodedStringWithOptions:
relativePath
isFileURL
pathComponents
subarrayWithRange:
pathWithComponents:
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
numberWithChar:
numberWithShort:
numberWithUnsignedShort:
numberWithUnsignedLong:
numberWithLongLong:
numberWithUnsignedLongLong:
CA_shouldArchiveValueForKey:ofObject:
CA_CAMLPropertyForKey:
raise:format:arguments:
willSuspend:
willUnsuspend:
hasPrefix:
setScanLocation:
scanInt:
scanLocation
replaceObjectAtIndex:withObject:
initWithOptions:localContext:
initRemoteWithOptions:
colorSpace
commitPriority
level
allContexts
currentContext
localContext
remoteContext
setClientPort:
objectForSlot:
setColorSpace:
setCommitPriority:
colorMatchUntaggedContent
setColorMatchUntaggedContent:
setLayer:
payload
setPayload:
orderAbove:
orderBelow:
setDesiredDynamicRange:
desiredDynamicRange
valid
waitForRenderingWithTimeout:
addFence:
addFence:completionHandler:
createFencePort
setFencePort:
setFencePort:commitHandler:
setFence:count:
invalidateFences
createSlot
createImageSlot:hasAlpha:
createImageSlot:hasAlpha:extendedColors:
deleteSlot:
setObject:forSlot:
transferSlot:toContextWithId:
hitTestContext:
annotation
setAnnotation:
renderContext
retainRenderContext
requestClientGlitch:
requestServerGlitch:
T@"NSDictionary",R
_proxy
colors
locations
startPoint
endPoint
colorMap
interpolations
setColors:
setLocations:
setStartPoint:
setEndPoint:
setInterpolations:
setColorMap:
unarchivedObjectOfClass:fromData:error:
setUuid:
setMode:
mode
setLatencies:
setPreferredModes:
setVersion:
archivedDataWithRootObject:requiringSecureCoding:error:
supportedClasses
sharedInstance
setLatency:forUUID:andMode:
latencyForUUID:andMode:
setPreferredMode:forUUID:
preferredModeForUUID:
version
latencies
preferredModes
_version
_latencies
_preferredModes
T@"NSString",C,N,V_version
T@"NSMutableArray",&,N,V_latencies
T@"NSMutableArray",&,N,V_preferredModes
_uuid
_latency
T@"NSString",C,N,V_uuid
T@"NSDictionary",C,N,V_mode
Td,N,V_latency
objectForInfoDictionaryKey:
_applyTransition:layer:undo:speed:
_nextStateTimer:
timerWithTimeInterval:target:selector:userInfo:repeats:
mainRunLoop
addTimer:forMode:
stateController:didSetStateOfLayer:
setState:ofLayer:transitionSpeed:
setInitialStatesOfLayer:transitionSpeed:
setCAStateControllerTransition:
_applyTransitionElement:layer:undo:speed:
stateController:transitionDidStart:speed:
_addAnimation:forKey:target:undo:
stateOfLayer:
setState:ofLayer:
setInitialStatesOfLayer:
removeAllStateChanges
restoreStateChanges:
cancelTimers
T@"NSObject<CAStateControllerDelegate>",W
_initWithOptions:
_initWithMTLTexture:options:
_initWithEAGLContext:options:
endFrame
rendererWithMTLTexture:options:
rendererWithEAGLContext:options:
beginFrameAtTime:timeStamp:
updateBounds
addUpdateRect:
nextFrameTime
hasMissingContent
render
setContext:
T@"CAContext",&
T@"<CARendererDelegate>",W
rendererDidChange:
cStringUsingEncoding:
@24@0:8@16
B16@0:8
B24@0:8#16
v24@0:8@16
^v36@0:8^v16I24^I28
v16@0:8
B20@0:8I16
I20@0:8I16
B32@0:8@16@24
@16@0:8
f16@0:8
v20@0:8f16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
d16@0:8
v24@0:8d16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
v20@0:8B16
I16@0:8
v20@0:8I16
v24@0:8^{CGPath=}16
r^{CGPath=}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CATransform3D=dddddddddddddddd}16@0:8
@144@0:8{CATransform3D=dddddddddddddddd}16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8@16B24
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
v32@0:8@16@24
@"CAStateController"
@"CALayer"
@"CAStateTransition"
@"NSString"
@"NSMutableArray"
@24@0:8^v16
^v16@0:8
q16@0:8
i16@0:8
@32@0:8@16:24
v24@0:8q16
v28@0:8{CAFrameRateRange=fff}16
{CAFrameRateRange=fff}16@0:8
v32@0:8r^I16Q24
@40@0:8@16@24:32
d24@0:8d16
v24@0:8@?16
@32@0:8{Mode=(?={?=b14b14b1b24b1b5b2b1b1}Q)}16@24
{Mode=(?={?=b14b14b1b24b1b5b2b1b1}Q)}16@0:8
v32@0:8Q16Q24
^{CADisplayModePriv={Mode=(?={?=b14b14b1b24b1b5b2b1b1}Q)}@QQI}
@56@0:8{EDIDAttributes=iiiiBIIIII}16
{EDIDAttributes="dolbyVision"i"pqEOTF"i"bt2020YCC"i"hdrStaticMetadataType1"i"legacyHDMI"B"product_id"I"manufacturer_id"I"week_of_manufacture"I"year_of_manufacture"I"serial_number"I}
@"CADisplayMode"
@24@0:8^{_NSZone=}16
@24@0:8B16i20
^{CADisplayPreferencesPriv=Bi}
^{CADisplayModeCriteriaPriv={CGSize=dd}di}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSArray"
@"NSDictionary"
(?="point"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}"rect"{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}"transform"{CATransform3D="m11"d"m12"d"m13"d"m14"d"m21"d"m22"d"m23"d"m24"d"m31"d"m32"d"m33"d"m34"d"m41"d"m42"d"m43"d"m44"d}"point3d"{CAPoint3D="x"d"y"d"z"d}"color_matrix"{CAColorMatrix="m11"f"m12"f"m13"f"m14"f"m15"f"m21"f"m22"f"m23"f"m24"f"m25"f"m31"f"m32"f"m33"f"m34"f"m35"f"m41"f"m42"f"m43"f"m44"f"m45"f}"affine_transform"{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d})
^{CGColor=}
^{CGImage=}
^{CGPattern=}
@24@0:8r^{CGPathElement=i^{CGPoint}}16
[3{CGPoint="x"d"y"d}]
^{CGPath=}
^{__IOSurface=}
@32@0:8@16@24
v40@0:8@16@24@32
@32@0:8@"NSKeyedArchiver"16@24
v32@0:8@"NSKeyedArchiver"16@24
v40@0:8@"NSKeyedArchiver"16@24@32
v24@0:8@"NSKeyedArchiver"16
@"NSString"32@0:8@"CAMLWriter"16@24
@"NSURL"32@0:8@"CAMLWriter"16@24
B32@0:8@"CAMLWriter"16@24
v36@0:8@16@24B32
v40@0:8r^d16Q24@32
B40@0:8^d16Q24@32
v24@0:8@"CAStateElement"16
v24@0:8@"CALayer"16
@"CAStateControllerUndo"
@"CAState"
B32@0:8r*16Q24
@28@0:8@16B24
^{_CAMLParserData=}
^{Object=^^?{Atomic={?=i}}I}16@0:8
@56@0:8Q16r^{CAMeshVertex={CGPoint=dd}{CAPoint3D=ddd}}24Q32r^{CAMeshFace=[4I][4f]}40@48
{CAMeshVertex={CGPoint=dd}{CAPoint3D=ddd}}24@0:8Q16
{CAMeshFace=[4I][4f]}24@0:8Q16
@24@0:8q16
@20@0:8i16
@28@0:8@16f24
@48@0:8@16@24@32r^{ValueInterpolator=ddddddddddddddB}40
d24@0:8@16
v20@0:8i16
v64@0:8Q16{CAMeshVertex={CGPoint=dd}{CAPoint3D=ddd}}24
v56@0:8{CAMeshVertex={CGPoint=dd}{CAPoint3D=ddd}}16
v24@0:8Q16
v56@0:8Q16{CAMeshFace=[4I][4f]}24
v48@0:8{CAMeshFace=[4I][4f]}16
B32@0:8r^d16^d24
B48@0:8r^d16^d24^?32^v40
@32@0:8f16f20f24f28
v24@0:8^d16
v32@0:8Q16[2f]24
^{CAMediaTimingFunctionPrivate=[2f][2f]}
f20@0:8f16
^{Object=^^?{Atomic={?=i}}I}24@0:8^{CGColorSpace=}16
Q24@0:8[20d]16
v60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48@52
v52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48
B52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48
^{CGColor=}16@0:8
v24@0:8^{CGColor=}16
{CAColorMatrix=ffffffffffffffffffff}16@0:8
@96@0:8{CAColorMatrix=ffffffffffffffffffff}16
^{__CTTypesetter=}16@0:8
^{__CTLine=}16@0:8
v32@0:8^?16^v24
v40@0:8^?16^v24^B32
v48@0:8^{__CTLine=}16^{CGContext=}24{CGPoint=dd}32
v24@0:8^{CGContext=}16
r^v16@0:8
v24@0:8^v16
^{CATextLayerPrivate=}
v28@0:8@16I24
v40@0:8{CGPoint=dd}16@32
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
v24@0:8@"NSString"16
[2^v]
@"NSArray"16@0:8
@"CAAnimation"
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
^{_EAGLWindowObject=^?^?^?}16@0:8
^{_CAEAGLNativeWindow={_EAGLWindowObject=^?^?^?}^{CAEAGLBuffer}IQ{Atomic={?=i}}{Atomic={?=i}}{SpinLock={?=i}}^{_CAImageQueue}@dd^{x_list_struct}I^{CAEAGLBuffer}^{CAEAGLBuffer}III^{CAEAGLBuffer}@{Atomic={?=i}}Qb1b1b1b1}
@36@0:8^{CGImage=}16^{CGColor=}24I32
@32@0:8^{CGImage=}16^{CGColor=}24
@24@0:8^{CABackingStore=}16
^{CGImage=}16@0:8
v24@0:8^{CGImage=}16
{CAPoint3D=ddd}16@0:8
@40@0:8{CAPoint3D=ddd}16
@24@0:8I16B20
@20@0:8I16
@28@0:8I16Q20
{Mutex="_m"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
{SpinLock="_l"{?="x"i}}
v40@0:8{CAFrameRateRange=fff}16{CAFrameRateRange=fff}28
{CAFrameIntervalRange=III}16@0:8
r^I24@0:8^I16
@"NSTimer"
@"<MTLTexture>"16@0:8
@"CAMetalLayer"16@0:8
v24@0:8@?<v@?@"<MTLDrawable>">16
@32@0:8^{_CAMetalDrawablePrivate={Atomic={?=i}}IIIQQQ^{_CAMetalLayerPrivate}^{__IOSurface}@@^{CGColorSpace}Cb1b1b1b1b1b1}16@24
^{_CAMetalDrawablePrivate={Atomic={?=i}}IIIQQQ^{_CAMetalLayerPrivate}^{__IOSurface}@@^{CGColorSpace}Cb1b1b1b1b1b1}16@0:8
^{_CAMetalDrawablePrivate={Atomic={?=i}}IIIQQQ^{_CAMetalLayerPrivate}^{__IOSurface}@@^{CGColorSpace}Cb1b1b1b1b1b1}
@"<MTLTexture>"
@"CAMetalLayer"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"IOSurfaceSharedEvent"
^{CGColorSpace=}16@0:8
v24@0:8^{CGColorSpace=}16
v28@0:8^{CGColorSpace=}16B24
v24@0:8^{CALinearMaskContext=}16
v144@0:8{CATransform3D=dddddddddddddddd}16
{CGAffineTransform=dddddd}16@0:8
v64@0:8{CGAffineTransform=dddddd}16
{CGPoint=dd}40@0:8{CGPoint=dd}16@32
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
d32@0:8d16@24
@32@0:8{CGPoint=dd}16
B32@0:8{CGPoint=dd}16
{_CALayerIvars="refcount"i"magic"I"layer"^v"_objc_observation_info"^v}
@24@0:8d16
^?24@0:8r^{_CAPropertyInfo=Ib16b16[2:]*^{__CFString}}16
B32@0:8^{_CARenderRendererInfo=iII}16Q24
v40@0:8@"NSString"16@24@"NSDictionary"32
@36@0:8^@16Q24B32
@24@0:8Q16
v24@0:8^@16
v40@0:8^@16{_NSRange=QQ}24
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
{_CALayerArrayIvars="layers"^@"count"Q"capacity"Q"mutations"Q"retained"B}
@?16@0:8
^{CAWindowServerImpl=^{__CFArray}^{__SFBConnection}I@?}
B24@0:8^@16
v32@0:8@16@?24
B40@0:8^{?=[9f]}16d24^@32
B32@0:8^{?=[9f]}16^@24
v32@0:8@"NSArray"16@?<v@?@@"NSDictionary">24
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"NSUUID"16@0:8
I32@0:8{CGPoint=dd}16
I40@0:8{CGPoint=dd}16@32
@40@0:8{CGPoint=dd}16@32
{CGPoint=dd}36@0:8{CGPoint=dd}16I32
{CATransform3D=dddddddddddddddd}28@0:8Q16I24
v24@0:8I16I20
v36@0:8^f16f24d28
v32@0:8^f16^f24
v28@0:8^f16f24
v28@0:8f16d20
v24@0:8^f16
^{__IOSurface=}16@0:8
{?=ff}16@0:8
{?={?=ff}{?=ff}{?=ff}{?=ff}}16@0:8
B20@0:8B16
v28@0:8^v16B24
B28@0:8^v16I24
B36@0:8^v16I24Q28
v32@0:8^{__IOSurface=}16@24
v24@0:8^{__IOSurface=}16
{CGColorTRC=i(?={CGColorTRCParametric=ffffffff}{CGColorTRCTable=Q^f{CGColorTRCBoundaryExtension=ff}{CGColorTRCBoundaryExtension=ff}})}16@0:8
v56@0:8{CGColorTRC=i(?={CGColorTRCParametric=ffffffff}{CGColorTRCTable=Q^f{CGColorTRCBoundaryExtension=ff}{CGColorTRCBoundaryExtension=ff}})}16
v24@0:8[3{CGColorTRC=i(?={CGColorTRCParametric=ffffffff}{CGColorTRCTable=Q^f{CGColorTRCBoundaryExtension=ff}{CGColorTRCBoundaryExtension=ff}})}]16
^{CAWindowServerDisplayImpl={Mutex={_opaque_pthread_mutex_t=q[56c]}}^{Server}{CABrightnessTransaction=ffffffI}@@B}
@20@0:8B16
@"CAStateElement"
@36@0:8@16@24B32
@44@0:8@16@24B32@36
@56@0:8@16@24@32B40i44@48
B24@0:8I16i20
B32@0:8^v16@24
I24@0:8@16
v40@0:8d16@24@32
^v24@0:8@16
@28@0:8@16i24
@48@0:8@16@24@32^@40
v40@0:8@16@24^@32
v48@0:8@16@24@32^@40
#40@0:8@16@24@32
#32@0:8@16@24
^{_CAPackageData=@@@BB@@}
B28@0:8@?16i24
v32@0:8@?16@24
I36@0:8i16d20d28
v28@0:8d16I24
v24@0:8B16I20
v24@0:8^{_CAMLWriterElement=^{_CAMLWriterElement}^{_CAMLWriterElement}^{_CAMLWriterElement}^^{_CAMLWriterElement}^v^{__CFString}^{_CAMLWriterAttribute}^^{_CAMLWriterAttribute}^{__CFString}I}16
^{_CAMLWriterPriv=^{__CFData}^{__CFURL}@^{_CAMLWriterElement}^{__CFString}^{__CFSet}ib1b1b1b1}
B24@0:8d16
B32@0:8@16@?24
v28@0:8I16@?20
I36@0:8{CGSize=dd}16B32
I40@0:8{CGSize=dd}16B32B36
v40@0:8d16@24{Mode=(?={?=b14b14b1b24b1b5b2b1b1}Q)}32
d32@0:8@16{Mode=(?={?=b14b14b1b24b1b5b2b1b1}Q)}24
v32@0:8{Mode=(?={?=b14b14b1b24b1b5b2b1b1}Q)}16@24
{Mode=(?={?=b14b14b1b24b1b5b2b1b1}Q)}24@0:8@16
v36@0:8@16@24f32
v28@0:8@16f24
v48@0:8@16@24@32@40
v44@0:8@16@24@32f40
^{_CAStateControllerData=@^{__CFDictionary}@@}
v32@0:8d16^{?=IiqQdq{CVSMPTETime=ssIIIssss}QQ}24
