sd_connectionBundleID
processIdentifier
stringWithFormat:
_xpcConnection
valueForEntitlement:
initWithUTF8String:
boolValue
sd_description
sd_connectionProcessName
sd_connectionHasEntitlement:
T@"NSString",R,C
countByEnumeratingWithState:objects:count:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
addObserver:forKeyPaths:options:context:
removeObserver:forKeyPaths:context:
addObserver:
sd_addObserver:
UTF8String
standardUserDefaults
objectForKey:
removeObjectForKey:
setObject:forKey:
defaultCenter
postNotificationName:object:
sharedDaemon
start
mainRunLoop
setTransfer:
isActivated
removeStatusMonitorObservers
setTransferTypes:
addStatusMonitorObservers
setIsActivated:
selectedAction
triggerSelectedActionIfAppropriate
prepareOrPerformOpenAction
setLocalizedTitle:
setContentsTitle:
setContentsDescription:
setUserResponse:
shouldUpdateUserResponse
prepareForAccept
minRequiredTransferState
maxTransferState
requiresUnlockedUI
setMaxTransferState:
stringWithString:
senderCompositeName
openURL:withOptions:
openURLs:bundleIdentifier:
removeItemAtURLToFreeUpSpace:
hasFiles
hasLinks
setHandlingAppInstalled:
setHandlingAppBundleID:
_hasFiles
_hasLinks
_isActivated
_handlingAppInstalled
_transfer
_bundleProxy
_handlingAppBundleID
T@"SFAirDropTransfer",&,N,V_transfer
TB,R,N,V_hasFiles
TB,R,N,V_hasLinks
TB,N,V_isActivated
T@"LSBundleProxy",&,N,V_bundleProxy
TQ,R,N
TB,N,V_handlingAppInstalled
T@"NSString",&,N,V_handlingAppBundleID
discreteProgressWithTotalUnitCount:
discoverabilityMetricsForNode:
consumeSandboxExtensions
addClientForNode:shouldPublishProgress:
serversChanged:
postNotificationForTransferStatus:progress:
initWithPerson:items:forDiscovery:
setDiscoveryMetrics:
setShouldPublishProgress:
removeObserver:name:object:
removeObserver:forKeyPath:
releaseSandboxExtensions
removeClientAlerts
fractionCompleted
completedUnitCount
sf_personRealName
sf_initWithAppBundle:sessionID:andPersonRealName:
addChild:withPendingUnitCount:
mainThread
observeValueForKeyPath:ofObject:change:context:
isCancelled
airDropClient:event:withResults:
startProgress
handleConversionProgress:
auditToken
_airDropClients
_allowedWaiting
_conversionActive
_conversionNotified
_conversionObserver
_conversionProgress
_currentNames
_discoveryMetrics
_hadConversion
_items
_progressObserver
_responseClient
_results
_rootNodeName
_sandboxExtensions
_sandboxExtensionHandles
_siblingNodes
_transferProgress
_auditToken
T{?=[8I]},V_auditToken
T@"<SDAirDropSessionDelegate>",W,V_delegate
setLastUnlockUsedMask:
lastUnlockUsedMask
faceIDEnabled
supportsPeriocular
lockWithBioLockOut
handleBioLockoutStateChanged:
deviceEnteredBioLockoutHandler
_lastUnlockUsedMask
_deviceEnteredBioLockoutHandler
TB,N,V_lastUnlockUsedMask
T@?,C,N,V_deviceEnteredBioLockoutHandler
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
_requestCreatedDate
_requestIdentifier
_deviceIdentifier
_completionHandler
_timeoutTimer
_timeoutTimeInterval
_error
T@"NSDate",C,N,V_requestCreatedDate
T@"NSUUID",C,N,V_requestIdentifier
T@"NSString",C,N,V_deviceIdentifier
T@?,C,N,V_completionHandler
T@"NSTimer",&,N,V_timeoutTimer
Tq,N,V_timeoutTimeInterval
T@"NSError",&,N,V_error
_previousKeyIdentifier
_linkClient
T@"NSUUID",&,N,V_previousKeyIdentifier
T@"RPCompanionLinkClient",&,N,V_linkClient
command
_advertisementPayload
_command
T@"NSData",C,N,V_advertisementPayload
T@"NSString",C,N,V_command
_messageIdentifier
_activityIdentifier
T@"NSUUID",C,N,V_messageIdentifier
T@"NSUUID",C,N,V_activityIdentifier
installSmartCoverMonitor
updateSmartCoverIsClosed:
handleButtonEvent:
getSmartCoverState:usage:
handleEvent:
isSmartCoverClosed:
_smartCoverIsClosed
_flap1StateIsEngaged
_openStateIsEngaged
_lock
_mHIDClient
TB,R,V_smartCoverIsClosed
responseTimer
setResponseTimer:
pairingAKSSession
setPairingAKSSession:
setSessionQueue:
_useAttestedProtocol
_pairingAKSSession
_sessionQueue
_aksSession
_responseTimer
T@"NSObject<OS_dispatch_source>",&,V_responseTimer
T@"<SDAutoUnlockSessionDelegate>",W,N,V_delegate
T@"NSUUID",&,N,V_sessionID
Tq,V_pairingAKSSession
T@"SDUnlockTransport",R,N
TB,R,N,V_useAttestedProtocol
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionQueue
T@"SDAutoUnlockAKSSession",&,N,V_aksSession
setHasSupportsACK:
setHasSuppressNotification:
hasSuppressNotification
_supportsACK
_suppressNotification
TB,N,V_supportsACK
TB,N,V_suppressNotification
bundleProxyForIdentifier:
isVerifiableIdentity
setSingleItemLocalizedTitle:
setShouldUpdateUserResponse:
triggerAppStoreSearch
cancelAction
isFile
openURL:configuration:completionHandler:
handlingAppInstalled
setKeyFailed:
setHasKeyFailed:
_keyFailed
TB,N,V_keyFailed
_webLinksHandler
setDeviceID:
idsDeviceForBluetoothID:
setSuppressWatchNotification:
setDidDelayWorkDueToPowerAssertion:
motionDetector
setMotionDetector:
wifiRequest
setWifiRequest:
promptingForApproval
removeAuthorizationRequestNotification
sessionQueue
invalidateAssertionTimer
logAutoUnlockEnd
protocol
sessionCompleted
setSessionCompleted:
shouldAlertOnNotify
alertOfUnlock
isAuthenticatingForSiri
deviceDisconnected:
systemIsActive:
notifyDelegateWithError:
didDelayWorkDueToPowerAssertion
setShouldDelayWorkDueToPowerAssertion:
beginAKSSession
userRequestRequired
alerted
suppressWatchNotification
setAlerted:
showUnlockedByDeviceNotificationWithDeviceID:
setAwdlStart:
nq_handleWiFiRequestStartedWithStartAWDLHandler:
nq_awdlNetworkStarted
invalidateResponseTimer
nq_handleWiFiRequestInvalidated
awdlStart
setWifiRequestStartedHandler:
createAuthTokenIfReady
hasSenderID
senderID
handleAWDLInfo:
postBeganUnlockingNotification
shouldDelayWorkDueToPowerAssertion
handleAuthPromptRequest:
handleAuthPromptImageData:
handleSessionKeyExchangeResponse:
handleUnlockConfirmation:
handleCleanUpAWDL
logAutoUnlockStart
declareSystemActivityAssertion
useAKSToken
useToken
setRemoteAWDLInfo:
authPrompt
setOldApproveProtocol:
setUserRequestRequired:
appName
setAppName:
phoneUnlockDate
dateWithTimeIntervalSinceReferenceDate:
setPhoneUnlockDate:
hasIsAuthenticatingForSiri
setAuthenticatingForSiri:
hasSkipMotionCheck
skipMotionCheck
setSkipMotionCheck:
localDeviceNeedsArming
sendKeyExchangeRequestWithData:error:
hasIconHash
setIconCache:
iconCache
iconHash
iconImageDataForHash:
setUsingImageCache:
setAuthPromptIconData:
promptForApproval
setNeedsImageData:
setAuthPromptIconHash:
sendAuthPromptResponseWithData:error:
hasImageData
usingImageCache
authPromptIconData
imageData
appendData:
finalMessage
hasKey
setExchangeResponse:
createWiFiRequest
hasKeyFailed
keyFailed
sendSessionAuthToken:error:
exchangeResponse
unlockAllowed
wifiRequestStartedHandler
aksSession
stepSessionWithData:outputData:
generateSessionToken
setSessionRangingKey:
sessionRangingKey
remoteAWDLInfo
peerListFromAWDLInfo:
setPeerList:
peerList
errorRequestingUnlock
suppressNotification
hasSupportsACK
supportsACK
sendConfirmationACK
confirmSession
setAksSuccess:
authPromptIconHash
cacheIconImageData:hash:appName:
wifiEnabled
awdlInfoData
setUseToken:
setSupportsConfirmationACK:
wrapPayload:withType:
sendData:bleDevice:direct:completionHandler:
restartResponseTimer:
needsImageData
sendData:type:errorHandler:
setUsingRecord:
setKey:
setAuthToken:
setShouldAlertOnNotify:
restartAssertionTimer
assertionTimer
setAssertionTimer:
keyInState
keyCanUnlock:
sendAWDLInfoWithKeyData:error:
sentAWDLInfo
setSentAWDLInfo:
promptedForApproval
setPromptedForApproval:
setPromptingForApproval:
oldApproveProtocol
setUnlockAllowed:
setErrorRequestingUnlock:
transaction
setTransaction:
powerAssertionID
setPowerAssertionID:
powerAssertionState
setPowerAssertionState:
remoteCacheID
setRemoteCacheID:
proxyRequestData
setProxyRequestData:
authenticatingForSiri
_wifiEnabled
_localDeviceNeedsArming
_sentAWDLInfo
_userRequestRequired
_sessionCompleted
_alerted
_shouldAlertOnNotify
_promptedForApproval
_promptingForApproval
_oldApproveProtocol
_needsImageData
_usingImageCache
_shouldDelayWorkDueToPowerAssertion
_didDelayWorkDueToPowerAssertion
_suppressWatchNotification
_authenticatingForSiri
_errorRequestingUnlock
_powerAssertionState
_wakeGestureDates
_unlockedOnWristDate
_phoneUnlockDate
_unlockAllowed
_wifiRequestStartedHandler
_remoteCacheID
_peerList
_proxyRequestData
_assertionTimer
_exchangeResponse
_authPromptIconData
_iconCache
_authPromptIconHash
_motionDetector
T@"NSDate",&,N,V_phoneUnlockDate
TB,N,V_sentAWDLInfo
TB,N,V_userRequestRequired
TB,N,V_sessionCompleted
TB,N,V_alerted
TB,N,V_shouldAlertOnNotify
TB,N,V_promptedForApproval
TB,N,V_promptingForApproval
TB,N,V_oldApproveProtocol
T@"NSNumber",&,N,V_unlockAllowed
Ti,N,V_errorRequestingUnlock
T@"NSObject<OS_os_transaction>",&,N,V_transaction
TI,N,V_powerAssertionID
Ti,N,V_powerAssertionState
T@?,C,N,V_wifiRequestStartedHandler
Tq,N,V_remoteCacheID
T@"NSArray",C,N,V_peerList
T@"NSData",C,N,V_proxyRequestData
T@"NSObject<OS_dispatch_source>",&,N,V_assertionTimer
T@"SDUnlockSessionKeyExchangeResponse",&,N,V_exchangeResponse
T@"NSMutableData",&,N,V_authPromptIconData
T@"SDAutoUnlockMacIconCache",&,N,V_iconCache
T@"NSData",&,N,V_authPromptIconHash
TB,N,V_needsImageData
TB,N,V_usingImageCache
TB,N,V_shouldDelayWorkDueToPowerAssertion
TB,N,V_didDelayWorkDueToPowerAssertion
TB,N,V_suppressWatchNotification
TB,N,V_authenticatingForSiri
T@"SDUnlockMotionDetector",&,N,V_motionDetector
TB,N,V_wifiEnabled
T@"NSArray",C,N,V_wakeGestureDates
T@"NSDate",&,N,V_unlockedOnWristDate
TB,N,V_localDeviceNeedsArming
sendProtocolBufferData:withType:timeout:option:queueOneID:errorHandler:
sendProtocolBufferData:withType:timeout:option:dataClass:queueOneID:errorHandler:
serviceQueue
idsServiceClassA
dataClassStringForDataClass:
delegates
T@"SDUnlockIDSController",R,N
hasDefaultDevice
isDefaultPairedDeviceNearby
activeIDSDevice
updateSendOptions:
setIdsServiceClassA:
errorHandlers
setErrorHandlers:
_serviceQueue
_idsServiceClassA
_errorHandlers
T@"IDSService",&,V_idsService
T@"IDSService",&,V_idsServiceClassA
T@"NSMutableDictionary",&,V_errorHandlers
T@"NSHashTable",R,N,V_delegates
T@"NSObject<OS_dispatch_queue>",R,N,V_serviceQueue
requestData
setRequest:
handleSetupRequest
onqueue_cancel
request
hasLtkHash
ltkHash
waitingForLTK
sendSetupSessionCreatedWithLocalKey:stepData:error:failureReason:ltkSyncing:
watchLTKsChanged:
setWaitingForLTK:
setCompanionViewNotSyncing:
setCompanionNeedsUnlock:
setCompanionCurrentlySyncing:
ltkHashMatches
companionViewNotSyncing
companionNeedsUnlock
companionCurrentlySyncing
handleCreateEscrowSecret:
hasToken
token
generateEscrowSecret
sendSetupCreateEscrowRecordStepData:error:
useAttestedProtocol
transport
sendAutoUnlockPayload:toDevice:type:sessionID:queueOneID:timeout:completion:
setLongTermKey:
setToken:
setFailureReasons:
setLtkSyncing:
setLtkHash:
setWatchOldLTKSyncStatus:
setWatchNewLTKSyncStatus:
handleMessage:fromDeviceID:type:
canCreatePairing
sendKeyDeviceLocked
sendSetupSessionCreatedWithLocalAttestedKey:stepData:error:failureReason:
requestedLTKForRemote
setRequestedLTKForRemote:
longTermKey
_waitingForLTK
_requestedLTKForRemote
_companionViewNotSyncing
_companionNeedsUnlock
_companionCurrentlySyncing
_request
_longTermKey
TB,V_waitingForUnlock
TB,V_waitingForLTK
TB,V_requestedLTKForRemote
TB,V_companionViewNotSyncing
TB,V_companionNeedsUnlock
TB,V_companionCurrentlySyncing
TB,V_canceled
T@"SDUnlockSetupRequest",&,V_request
T@"NSData",&,N,V_longTermKey
T@"NSData",&,N,V_requestData
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:escrowSecret:usingEscrow:externalACMContext:
setupSession
sessionType
remoteLTK
originator
fixRemoteLTKWithStatus:retryBlock:
usingEscrow
escrowSecret
setupAuthorizationSession
setRemoteLTK:
fixRemoteLTK
ltkNeedsFixing
setLtkNeedsFixing:
setSessionType:
setOriginator:
setEscrowSecret:
setUsingEscrow:
_ltkNeedsFixing
_originator
_usingEscrow
_remoteLTK
_sessionType
_escrowSecret
T@"NSData",C,N,V_remoteLTK
Tq,N,V_sessionType
TB,N,V_originator
T@"NSData",C,N,V_escrowSecret
TB,N,V_usingEscrow
T@"NSString",&,N,V_deviceID
T@"NSData",C,N,V_externalACMContext
Tq,N,V_aksSessionID
TB,N,V_ltkNeedsFixing
decryptionKey
updateWithRawAdvertisementData:receivedViaScanning:isReplay:newAdvertisementHandler:
lastCounter
lastActivityAdvertisement
lastAdvertisementPayload
lastAdvertisementOptions
initWithAdvertisementVersion:advertisementPayload:options:device:
disableDuplicateFilterOnce
lastRawAdvertisementData
lastUsedKeyIdentifier
setLastUsedKeyIdentifier:
lastAdvertisementData
_lastReceivedAdvertisementDate
_deviceTracked
_disableDuplicateFilterOnce
_idsDevice
_lastRawAdvertisementData
_lastUsedKeyIdentifier
_lastAdvertisementData
T@"NSUUID",&,N,V_lastUsedKeyIdentifier
T@"SDActivityDecryptionKey",R,N
T@"NSData",R,C,N,V_lastAdvertisementData
T{?=CCCCCCCCCCCCCC},R,N
TS,R,N
T@"NSData",R,C,N
T@"NSDictionary",R,C,N
T@"IDSDevice",&,N,V_idsDevice
TB,N,V_deviceTracked
TB,N,V_disableDuplicateFilterOnce
T@"NSData",R,C,N,V_lastRawAdvertisementData
T@"SFActivityAdvertisement",R,N
potentiallyInvalidate
_nodes
T@"NSArray",R,C,V_nodes
dataFromTXTRecordDictionary:
updateTXTRecordAndNotify
publishCallBack:
_port
_retryCount
_txtRecord
_bonjourNameConflictDetected
T@"<SDAirDropPublisherDelegate>",W,V_delegate
generatedError
passcode
validatePasscode:
sendSetupRequest
userInfoForKeychainMismatch
userInfoForInternetSharing
localDeviceIDSRegistered
userInfoForWatchNotSignedIn
userInfoForMacNotSignedIn
onqueue_updateForCloudPairing
unlockEnabled
waitingForCloudPairing
handleSuccessfulPairing
userInfoForNoWristDetectionNoPasscode
userInfoForNoWristDetection
userInfoForNoPasscode
userInfoForNoCommunincation
sendState
userInfoForNotCloudPaired
setupError
watchExistedInUnlockList
lastSeenWatchDate
remoteLTKHash
keyDeviceModel
companionDeviceModel
keyExchangeInterval
tokenExchangeInterval
keyDeviceLocked
upsellDevice
responseTimeout
responseTimeoutFromServer
messageTimeout
messageTimeoutFromServer
setupRetryDevice
watchOldLTKSyncStatus
watchNewLTKSyncStatus
receivedSetupACK
receivedTokenACK
ltkTimer
handleLTKTimerFired
setLtkTimer:
handleEscrowSessionRequest
ltkTimerRetryCount
setLtkTimerRetryCount:
restartLTKTimer
userInfoForMissingLTK
setKeyDeviceLocked:
handleKeyDeviceLocked
keyExchangeDate
setKeyExchangeInterval:
handleSetupSessionCreated:fromDeviceID:
tokenExchangeDate
setTokenExchangeInterval:
handleSetupCreateRecord:
userInfoForWatchLocked
setSessionCreatedMessage:
sessionCreatedMessage
hasFailureReasons
failureReasons
userInfoCompanionViewNotSyncing
userInfoForiPhoneNeedsUnlock
handleDeviceAuthenticationSetupRequest
hasWatchOldLTKSyncStatus
hasWatchNewLTKSyncStatus
setRemoteLTKHash:
userInfoForOldProtocol
userInfoForNewProtocol
sendCreateSecretWithStepData:sessionID:
ltkSyncing
finalizeEscrowPairing:
hasPairedDeviceID
setCompanionDeviceModel:
setUnlockEnabled:
proxyBluetoothID
setWaitingForCloudPairing:
setSendState:
setupRequestVersion
setRemoteNeedsLTK:
setKeyExchangeDate:
setSetupError:
setSetupMessageIdentifier:
setTokenExchangeDate:
setTokenMessageIdentifier:
setupMessageIdentifier
tokenMessageIdentifier
setReceivedSetupACK:
setReceivedTokenACK:
updateForCloudPairing
notifyDelegateKeyDeviceIsLocked
invalidateLTKTimer
setKeyDeviceModel:
setResponseTimeout:
setResponseTimeoutFromServer:
setMessageTimeout:
setMessageTimeoutFromServer:
_upsellDevice
_setupRetryDevice
_placeholder
_waitingForCloudPairing
_keyDeviceLocked
_unlockEnabled
_receivedSetupACK
_receivedTokenACK
_errorType
_watchOldLTKSyncStatus
_watchNewLTKSyncStatus
_passcode
_sendState
_keyDeviceModel
_companionDeviceModel
_setupError
_ltkTimer
_sessionCreatedMessage
_responseTimeout
_responseTimeoutFromServer
_messageTimeout
_messageTimeoutFromServer
_ltkTimerRetryCount
_keyExchangeDate
_tokenExchangeDate
_keyExchangeInterval
_tokenExchangeInterval
_remoteLTKHash
_setupMessageIdentifier
_tokenMessageIdentifier
Tq,N,V_sendState
T@"NSString",&,N,V_keyDeviceModel
T@"NSString",&,N,V_companionDeviceModel
T@"NSError",&,N,V_setupError
TB,N,V_keyDeviceLocked
TB,N,V_unlockEnabled
T@"NSObject<OS_dispatch_source>",&,N,V_ltkTimer
TB,N,V_waitingForCloudPairing
TI,N,V_errorType
T@"SDUnlockSetupSessionCreated",&,N,V_sessionCreatedMessage
Tq,N,V_responseTimeout
Tq,N,V_responseTimeoutFromServer
Tq,N,V_messageTimeout
Tq,N,V_messageTimeoutFromServer
Tq,N,V_ltkTimerRetryCount
T@"NSDate",&,N,V_keyExchangeDate
T@"NSDate",&,N,V_tokenExchangeDate
Td,N,V_keyExchangeInterval
Td,N,V_tokenExchangeInterval
T@"NSData",&,N,V_remoteLTKHash
Ti,N,V_watchOldLTKSyncStatus
Ti,N,V_watchNewLTKSyncStatus
TB,N,V_receivedSetupACK
TB,N,V_receivedTokenACK
T@"NSString",&,N,V_setupMessageIdentifier
T@"NSString",&,N,V_tokenMessageIdentifier
T@"NSString",C,N,V_passcode
TB,N,V_upsellDevice
TB,N,V_setupRetryDevice
TB,N,V_placeholder
sortedArrayUsingSelector:
initWithContacts:iconData:atIndex:cacheLookupKey:
_contacts
T@"NSArray",R,&,N,V_contacts
setHasNeedsImageData:
hasNeedsImageData
setHasUsingRecord:
_key
_usingRecord
TB,N,V_usingRecord
T@"NSData",&,N,V_key
initWithNode:protocol:flags:kind:
helperConnection
setHelperConnection:
setBundleID:
nodes
sidebarNodes
nodeBrowser:nodesChangedForParent:protocol:error:
copyRootNode
mode
bundleID
boostMessage
delegate
_rootNode
_mode
_nodeBrowsers
_options
_transaction
_bundleID
_kind
_objectKey
_boostMessage
_delegate
_connection
_isEntitled
T@"NSString",C,N,V_bundleID
T@"SDXPCHelperConnection",W,N,V_helperConnection
T@"NSString",R,C,V_kind
T@"NSString",C,V_objectKey
T@"NSDictionary",C
T@"NSObject<OS_xpc_object>",&,V_boostMessage
T@"<SDNetworkBrowserDelegate>",W,V_delegate
T@"NSObject<OS_xpc_object>",&,V_connection
T@"NSNumber",&,V_isEntitled
setContactIDs:
_imageTitle
_image
_cacheLookupKey
_contactIDs
T@"NSString",R,&,N,V_imageTitle
T@"NSData",R,&,N,V_imageData
T^{CGImage=},R,N,V_image
T@"NSString",&,N,V_cacheLookupKey
T@"NSArray",&,N,V_contactIDs
setStashToken:
_stashToken
T@"NSData",&,N,V_stashToken
appLinksWithURL:limit:error:
targetApplicationRecord
urlIsCloudDocument:
dictionaryRepresentation
numberWithUnsignedInt:
allocWithZone:
setHasVersion:
hasVersion
setHasErrorCode:
readFrom:
writeTo:
copyTo:
mergeFrom:
_errorCode
_version
_has
TB,N
TI,N,V_version
TI,N,V_errorCode
T@"NSString",&,N,V_requestID
safariBundleID
weakObjectsHashTable
observers
methodForSelector:
deviceNameForDeviceID:
notificationTimer
dismissNotification
suggestionNotificationTimedOut
notifyObservers:
setNotificationTimer:
showAuthorizationRequestNotificationWithDeviceID:appName:appIcon:completion:
showSuggestionNotificationWithDevice:
showMacUnlockedNotificationWithDuration:
showSetupRetryNotificationWithDevice:
showFileRadarNotificationWithCompletion:
restartNotificationTimer:
invalidateNotificationTimer
setNotificationModel:
setObservers:
promptInfo
setPromptInfo:
radarNotificationCompletion
setRadarNotificationCompletion:
_doubleClickListener
_cancelListener
_notificationModel
_observers
_promptInfo
_notificationTimer
_radarNotificationCompletion
T@"NSHashTable",&,V_observers
T@"NSDictionary",&,V_promptInfo
T@"NSObject<OS_dispatch_source>",&,V_notificationTimer
T@?,C,V_radarNotificationCompletion
T@"SFAutoUnlockNotificationModel",&,N,V_notificationModel
accountID
setAccountID:
bluetoothDiscovery
setBluetoothDiscovery:
bonjourPTRDiscovery
setBonjourPTRDiscovery:
bonjourTXTRecordDiscovery
setBonjourTXTRecordDiscovery:
bonjourResolveComplete
setBonjourResolveComplete:
tcpConnectionComplete
setTcpConnectionComplete:
tlsHandshakeComplete
setTlsHandshakeComplete:
identityQueryComplete
setIdentityQueryComplete:
totalDiscovery
setTotalDiscovery:
verifiableIdentity
setVerifiableIdentity:
_accountID
_sessionID
_modelName
_bluetoothDiscovery
_bonjourPTRDiscovery
_bonjourTXTRecordDiscovery
_bonjourResolveComplete
_tcpConnectionComplete
_tlsHandshakeComplete
_identityQueryComplete
_totalDiscovery
_verifiableIdentity
T@"NSString",&,V_accountID
T@"NSString",&,V_sessionID
T@"NSString",&,V_modelName
T@"NSNumber",&,V_bluetoothDiscovery
T@"NSNumber",&,V_bonjourPTRDiscovery
T@"NSNumber",&,V_bonjourTXTRecordDiscovery
T@"NSNumber",&,V_bonjourResolveComplete
T@"NSNumber",&,V_tcpConnectionComplete
T@"NSNumber",&,V_tlsHandshakeComplete
T@"NSNumber",&,V_identityQueryComplete
T@"NSNumber",&,V_totalDiscovery
T@"NSNumber",&,V_verifiableIdentity
substringToIndex:
valueWithNonretainedObject:
intersectsSet:
makeActivatedConnection
monogramImageDataForContact:style:diameter:monogramsAsFlatImages:isContactImage:
monogramImagesForMultipleContacts:style:diameter:monogramsAsFlatImages:
groupMonogramImageDataForContacts:style:diameter:monogramsAsFlatImages:processOppositeBackgroundStyle:
nickname
setMiddleName:
stringFromContact:
longValue
appendBytes:length:
bundleForClass:
resourceURL
URLWithString:
defaultWorkspace
openSensitiveURL:withOptions:
initWithServiceType:
debugInfoRequested:
activityContinuationPayloadSent:
servicesContainIdentifier:
publish
_setIncludesAWDL:
getInputStream:outputStream:
initWithInputStream:outputStream:isClient:
initWithAuthorData:streamHandler:
getStreamsWithCompletionHandler:
unpublish
publishTimerFired:
initWithDomain:type:name:port:
scheduleInRunLoop:forMode:
publishWithOptions:
restartPublishTimer
removeFromRunLoop:forMode:
managerID
initWithStreamHandler:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
registerConnectedStreams
unregisterConnectedStreams
addService:
removeService:
registerManager:
unregisterManager:
service
setService:
managers
setManagers:
companionServices
setCompanionServices:
incomingStreams
setIncomingStreams:
continuationStreams
setContinuationStreams:
connectedStreams
setConnectedStreams:
publishTimer
setPublishTimer:
_serviceType
_managers
_companionServices
_incomingStreams
_continuationStreams
_connectedStreams
_publishTimer
T@"NSNetService",&,V_service
T@"NSMutableDictionary",&,V_managers
T@"NSMutableArray",&,V_companionServices
T@"NSMutableArray",&,V_incomingStreams
T@"NSMutableDictionary",&,V_continuationStreams
Tq,V_connectedStreams
T@"NSTimer",&,V_publishTimer
T@"NSString",&,V_serviceType
descriptionWithLevel:
_ensureClientStopped
_ensureServerStopped
_uiStartWithDevice:viewControllerName:xpcEndpoint:label:unlessApps:extraInfo:
_uiStartRepair:flags:
_uiStartSetupiOS:autoStart:
_uiStartSetupB238:extraInfo:
_uiStartWithDevice:viewControllerName:label:unlessApps:extraInfo:
_uiStartHomeKitDeviceDetectedWithURL:
_ensureClientStarted
_ensureServerStarted
_repairEnsuredStarted
_repairEnsuredStopped
_iTunesAccountsChanged
_appleAccountSignIn:
_hsa2Changed
_uiLockStatusChanged
_screenStateChanged
_wifiStateChanged
_scanTimerFired
_watchFound:
_resetTriggers
_postDeviceSetupNotificationForDevice:present:
_uiStopIfNeededWithDevice:
_screenLocked
fastScanCancel:
isProximitySetupToNewDeviceAllowed
_uiStartPair:extraInfo:
_uiStartAppleTVSetup:extraInfo:
_launchAppWithMachServiceName:
_repairSilentStart:
_uiStartSetupWHA:
_uiStartAuthenticateAccounts:
isWiFiPasswordSharingAllowed
_shouldOfferPassword:
_uiStartWiFiPasswordSharing:
_uiStartWithDevice:viewControllerName:xpcEndpoint:label:extraInfo:
_uiStartForMacWithDevice:label:extraInfo:
_watchFastScanStop
_watchFastScanStartIfAllowed:
_uiStartSetupWatch:
estimatedRSSI
_pinPairHandleRequest:
dismissPinDialogWithToken:
setSfService:
_pinPairHandleShowPIN:
setShowPINHandler:
_pinPairHandleHidePIN
handleServerRequest:
mediaRemoteServiceProxy
showPinDialogWithOptions:completion:
_repairHandleManateeChanged
createConnectionForEnabledEnterpriseConfiguration
lastDisconnectError
_repairVPNError:
_repairProblemFlagsChanged
setStatusHandler:
setProblemFlags:
_repairHandleCompletion
setProgressHandler:
_repairProblemCheck
invalidateWithFlags:
_repairSilentProgress:info:
foundTicks
setTriggerMs:
_repairUpdateIDSCache
setOsVersion:
extractParameter:inString:
setAdvertisementFields:
lastObject
_uiStartProxCardKitTest:extraInfo:
T@"SDSetupAgent",R,N
_openSetupURL:
_pwsHandleUserResponse:device:info:
_pwsHandleProgressEvent:info:
testSetupUIiOS:
preventRepair
_bleAuthTagFilter
_pbsMediaService
_pinPairDialogToken
_pinPairService
_pinPairSession
_pinPairUUID
_profilesNotifyToken
_pwsAutoGrantingEnabled
_pwsGrantingEnabled
_scanEligible
_scanSeconds
_setupURL
_shouldScan
_triggeredUIAppleTVPair
_triggeredUIAppleTVSetup
_renableB238SetupAfterWiFi
_triggeredUIB238Setup
_triggeredUIiOSSetup
_triggeredUIRepair
_triggeredUIWatchSetup
_triggeredUIWHASetup
_triggeredUIAuthenticateAccounts
_vpnCnx
_watchFastScanLastEndTicks
_watchFastScanTimer
_watchSetupDevices
_watchMigrationEnabled
_watchMigrationLastTicks
_watchSetupEnabled
_watchSetupScanner
_cdpEnabled
_iTunesNotifyToken
_manateeMonitor
_manateeProblem
_problemFlags
_problemNotifyToken
_repairEnabled
_repairService
_repairSession
_repairSilent
_repairTimer
_wifiHealthMonitor
_wifiBad
_wifiBad8021x
_prefRepairAccounts
_prefRepairHomeKit
_prefRepairVPN
_prefRepairWiFi
_preventRepair
TB,N,V_preventRepair
setAccelerometerUpdateInterval:
motionManager
baseAccelerationSet
handleNewAccelerometerData
setBaseAccelerationSet:
accelerometerData
acceleration
setBaseAcceleration:
startAccelerometerUpdatesToQueue:withHandler:
activityManager
handleActivityDetected:
startActivityUpdatesToQueue:withHandler:
checkActivityState
checkStepState
setMotionDetected:
stopAccelerometerUpdates
setMotionManager:
stopActivityUpdates
setActivityManager:
logType
handlePastActivities:withStartDate:
queryActivityStartingFromDate:toDate:toQueue:withHandler:
pedometerManager
handlePastPedometerData:
queryPedometerDataFromDate:toDate:withHandler:
baseAcceleration
setAccelerometerMotion:
shouldUseAccelerometerMotion
handleMotionDetected:
confidence
stationary
motionTimer
restartMotionTimer
invalidateMotionTimer
walking
running
cycling
automotive
handlePastActivitiesForPhoneAutoUnlock:withStartDate:
handlePastActivitiesForPairedUnlock:
hasMotion:
setActivityMotion:
laterDate:
setCheckedActivityData:
numberOfSteps
numberOfPushes
setCheckedStepData:
checkedStepData
checkedActivityData
motionDetectedHandler
setMotionTimer:
accelerometerMotion
activityMotion
setLogType:
setPedometerManager:
handlerQueue
setHandlerQueue:
_motionDetected
_accelerometerMotion
_activityMotion
_baseAccelerationSet
_checkedActivityData
_checkedStepData
_motionDetectedHandler
_logType
_motionTimer
_motionManager
_pedometerManager
_activityManager
_handlerQueue
_baseAcceleration
Tq,N,V_type
T@"NSObject<OS_os_log>",&,N,V_logType
TB,N,V_baseAccelerationSet
TB,N,V_accelerometerMotion
TB,N,V_activityMotion
T@"NSObject<OS_dispatch_source>",&,V_motionTimer
T@"CMMotionManager",&,N,V_motionManager
T@"CMPedometer",&,N,V_pedometerManager
T@"CMMotionActivityManager",&,N,V_activityManager
T{?=ddd},N,V_baseAcceleration
TB,N,V_checkedActivityData
TB,N,V_checkedStepData
TB,N,V_motionDetected
T@"NSObject<OS_dispatch_queue>",&,N,V_handlerQueue
T@?,C,N,V_motionDetectedHandler
T@"NSDate",C,N,V_wristOnDate
notifyClientForEvent:withProperty:
requireAWDL
set_socketStreamProperties:
setTimeoutIntervalForRequest:
setRequestCachePolicy:
set_connectionCachePurgeTimeout:
setConnectionProxyDictionary:
setHTTPMaximumConnectionsPerHost:
setHTTPShouldUsePipelining:
set_allowsTCPFastOpen:
setTLSMaximumSupportedProtocol:
setHTTPAdditionalHeaders:
mainQueue
sessionWithConfiguration:delegate:delegateQueue:
storePropertyValue:forKey:
donateTransferInteractionToDuet
cancelSendingClassroom
startZipping
logInterfaceUsedForSending:
parseAskResponse:
retryRequestForError:
parseDiscoverResponse:
didStartSendingAskBodyData
didFinishSendingAskBodyData
didFail:
didFinishLoading
shouldCancelTransferForError:
_CFURLResponse
connectionOverP2P:
transactionMetrics
_remoteAddressAndPort
_localAddressAndPort
secureConnectionStartDate
fetchStartDate
secureConnectionEndDate
responseEndDate
protectionSpace
authenticationMethod
serverTrust
credentialForTrust:
evaluateReceiverTrust:completion:
credentialWithIdentity:certificates:persistence:
copyReadStream
sendRequest:
host
port
addHashesAndValidationRecordToRequest:
askRequestClientBundleID
requestWithURL:
setHTTPMethod:
setValue:forHTTPHeaderField:
discoverBodyDataInFormat:
askBodyDataInFormat:
zipCompressionType
_CFURLRequest
uploadTaskWithRequest:fromData:
uploadTaskWithStreamedRequest:
setSkipReadableCheckFiles:
setDisableAdaptiveCompressionForZipping:
setSourceFiles:
temporaryWeblocURL:
dataWithContentsOfURL:
webURLFromInternetLocationFile:
internetLocationFile:
generatePreviewForFileURL:
appendFileURL:withBase:toItems:
convertMediaItemsWithCompletionHandler:
startSendingItems:withProperties:toPersonWithID:clientBundleID:airDropClientDelegate:
cancelSendingItemsToPersonWithID:sessionID:clientBundleID:
fileURLWithPath:isDirectory:
startPublishingProgress
startSendingClassroom
removeFileIconsFromProperties
validateAirDropItemsWithCompletionHandler:
createSession
splitOutFileURLs
readingIntentWithURL:options:
initWithFilePresenter:
startSending
coordinateAccessWithIntents:queue:byAccessor:
finishTasksAndInvalidate
initWithOpaqueRepresentation:
receiverDeviceModelNameSuggestsMacPlatform
setOutOfBandHints:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
copyReceiverPublicKey
releasePeerToPeerIfPossible:
realPathURL:
tmpDirectory
receiverMediaCapabilities
discoveryMetrics
shouldPublishProgress
_askResponse
_askTask
_cancelled
_connectionKey
_discoverResponse
_discoverTask
_failCount
_fileIcon
_fileURLs
_fileURLToConversionNeeded
_generatedFiles
_mediaFormatConversionDestinations
_metric
_otherStuff
_p2pRetained
_providedStream
_receiverData
_receiverSupportsDVZip
_sendingLivePhotoJPEGs
_serverTrust
_serverURL
_shouldPublishProgress
_smallFileIcon
_tmpDirectoryToCleanUp
_uploadFinished
_uploadResponse
_uploadTask
_weblocURLs
_xpcHelperConnection
_zipperFinished
T@"NSDictionary",C,V_discoveryMetrics
TB,N,V_shouldPublishProgress
T^{__SecTrust=},R
T@"<SDAirDropClientDelegate>",W,V_delegate
setErrorString:
setResetReason:
setHasResetReason:
hasResetReason
hasErrorString
resetReason
_errorString
_resetReason
TI,N,V_resetReason
T@"NSString",&,N,V_errorString
userResponse
needsAction
loadAllPersistedTransfers
updatedTransfer:
removedTransfer:
transferIdentifierToHandler
transferIdentifierToTransfer
kvoObservingKeys
notifyObserversOfRemovedTransfer:
cleanUpTransfer:
transferURLForTransfer:
cleanUpURL:
initWithIdentifier:initialInformation:
updateWithInformation:
itemTypesForTransfer:
metaData
setItems:
items
determineHandlerForTransfer:
setHandler:forTransfer:
canAutoAccept
setDidAutoAccept:
setTransferState:forTransfer:shouldNotify:
possibleActions
transfer:actionTriggeredForAction:
transferState
failTransfer:withState:failureReason:
transferUserResponseUpdated:
notifyObserversOfUpdatedTransfer:
customDestinationURL
classroomDelegate
failureReason
removeTransfer:shouldCleanup:
transferTypes
actionSelected:
arrayByAddingObjectsFromArray:
initWithTransfer:
canHandleTransfer
setTransferState:forTransfer:shouldNotify:shouldCleanup:
handlerFailedForTransfer:
transferUpdated
setTransferState:
persistedTransfersBaseURL
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
initWithType:subtype:isFile:
incrementCount
rawFiles
completedURLs
isFileURL
URLOverrideForURL:
applicationsAvailableForOpeningURL:
applicationIdentifier
T@"NSObject<SDAirDropAlertManagerDelegate>",W,N
setTransferIdentifierToTransfer:
setTransferIdentifierToHandler:
setKvoObservingKeys:
_classroomDelegate
_transferIdentifierToTransfer
_transferIdentifierToHandler
_kvoObservingKeys
T@"NSMutableDictionary",&,V_transferIdentifierToTransfer
T@"NSMutableDictionary",&,V_transferIdentifierToHandler
T@"NSArray",&,V_kvoObservingKeys
T@"NSObject<SDAirDropAlertManagerDelegate>",W,N,V_classroomDelegate
T@"NSObject<SDAirDropAlertManagerDelegate>",W,N,Vdelegate
initWithDelegate:queue:
addObservers
_activate
state
shouldStart
encryptedAdvertisingInformation
startGoodbyeTimer
preventIdleSleepAssertion
startAdvertisingOfType:withData:withOptions:
invalidateGoodbyeTimer
stopAdvertisingOfType:
releaseIdleSleepAssertion
restart
uniqueID
cachedDecryptionKeyForDeviceIdentifier:
isValidKey
setValidKey:
lastUsedCounter
setKeyCounter:
pairedDevicesChanged:
_enumerateRemoteObjectProxiesUsingBlock:
remoteObjectProxyForConnection:usingBlock:
enumerateRemoteObjectProxiesUsingBlock:
establishConnectionWithCompletionHandler:
loginIDWithOptions:completionHandler:
peerForUUID:completionHandler:
pairedSFPeerDevicesWithOptions:completionHandler:
advertiseAdvertisementPayload:options:withErrorHandler:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
activityPayloadForAdvertisementPayload:command:requestedByDevice:withCompletionHandler:
didSendPayloadForActivityIdentifier:toDevice:error:
setClass:forSelector:argumentIndex:ofReply:
activeConnections
resetStateRequested:
systemWillSleep:
removeObserver:
goodbyeTimeoutFired:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
createAdvertisingInformation
dataWithCapacity:
setLength:
mutableBytes
getTagAndCounterWhileEncryptingBytesInPlace:forAdvertisementWithVersion:handler:
sharedNearbyAgent
update
continuity:didStopAdvertisingOfType:withError:
localizedDescription
updateAdvertiser
sendActivityPayloadWithAdvertisementData:forAdvertisementPayload:activityIdentifier:activityPayload:
appleID
idsDeviceFromBTIdentifier:
allPeerBTIdentifiers
continuityDidUpdateState:
continuity:didStartAdvertisingOfType:
continuity:didStopAdvertisingOfType:
continuity:didFailToStartAdvertisingOfType:withError:
continuity:didStartScanningForType:
continuity:didStopScanningForType:
continuity:didFailToStartScanningForType:withError:
continuity:didDiscoverType:withData:fromPeer:
continuity:didLosePeer:type:
continuity:didStartTrackingPeer:type:error:
continuity:didStopTrackingPeer:type:
T@"SDActivityAdvertiser",R,N
stopForReason:
resumeForReason:
activityServiceDevicesChanged:
_remoteObjectProxyForConnection:usingBlock:
machServiceName
exportedInterface
remoteObjectInterface
shouldAcceptNewConnection:
connectionEstablished:
connectionInvalidated:
removeObservers
consoleUserChanged:
continuity:continuityDidStopAdvertisingOfType:withError:
isAdvertising
_versionByte
_monitor
_continuity
_goodbyeTimerInterval
_goodbyeTimer
_shouldNotAdvertiseRequesters
_advertisingEnabled
_isAdvertising
_advertisingTransaction
_rawAdvertisementData
_advertisementData
_powerAssertionID
_currentAdvertisementPayload
_currentAdvertisementOptions
_currentErrorHandler
TB,R,N,V_isAdvertising
checkResourceIsReachableAndReturnError:
openCompletedItemsWithFilesApp
saveCompletedItemsToiCloudDrive
useOpenWithText
_iCloudDriveURL
_action
_useOpenWithText
T@"SFAirDropAction",R,N
TB,N,V_useOpenWithText
activityService
accounts
loginID
isActivityContinuationAllowed
supportsHandoff
setActivityService:
setShouldStart:
setAllPeerBTIdentifiers:
setAppleID:
_shouldStart
_allPeerBTIdentifiers
T@"IDSService",&,N,V_activityService
TB,N,V_shouldStart
T@"NSArray",&,N,V_allPeerBTIdentifiers
T@"NSString",C,N,V_appleID
T@"<SDAirDropStatusDelegate>",W,V_delegate
sharedTransport
sharedController
initWithTransport:magnetTransport:keyManager:
addDelegate:
cachedDeviceWiFiState
hashTableWithOptions:
sessionManagerQueue
onqueue_start
addNotificationsObservers
setPrimaryClient:
deviceNearby
initializeAttemptState
initializeCaptureBlock
updateAdvertising
loadPresentedBluetoothError
loadPresentedWiFiError
setCachedWatchWiFiState:
autoUnlockEligibleDevicesWithCloudPairing:
updateApproveBluetoothIDs
initWithQueue:
setLocalDeviceController:
handleBioLockout
localDeviceController
setDeviceEnteredBioLockoutHandler:
setLastUnlockDate:
setLockStateChangedDate:
handleBLEDataReceivedNotification:
keyBagLockStateChange:
handleWiFiPowerChanged:
btPipeConnectionChanged:
handleAuthenticationSessionStarted
observerTable
allObjects
session:didReceiveKeyDeviceLocked:
session:didEnableWithDevice:
session:didFailToEnableDevice:error:
session:didBeginAttemptWithDevice:
suppressAlert
completeSuccessfulAttempt
session:didCompleteUnlockWithDevice:
session:didFailUnlockWithResults:error:incrementedAttempt:
incrementedCountID
triggerCloudPairRetryWithShortRetryDeviceIDs:
modelIdentifier
minusSet:
productVersion
autoUnlockTransport
eligibleDevicesFilterCompatibleDevices:
setEligibleDevices:
notifyObserverOfFailedToEnableDevice:error:
createPairingLockSessionWithDevice:passcode:
lockPairingSessions
cancelEnablingAutoUnlockForDeviceID:
canceled
cancel
sessionID
disablePairingForDeviceID:pairingID:
enabledAutoUnlockDevicesUsingCache:
disableAutoUnlockForDevice:completionHandler:
pairingIDForWatchID:
attemptAutoUnlockForType:preventRadarNotification:
attemptAutoUnlockForType:externalACMContext:preventRadarNotification:bundlePath:appName:reply:
setAttemptActivatedHandler:
setAttemptType:
setAttemptBundlePath:
setAttemptAppName:
setAttemptExternalACMContext:
setPreventRadarNotification:
generateAttemptForType:
attemptAutoUnlock
setName:
setModelName:
setUniqueID:
notifyObserverOfAttemptBeganWithDevice:
setCachedMetrics:
notifyObserversOfUnlockFailureWithResults:error:
attemptExternalACMContext
setHintToken:
setResults:
notifyObserversOfUnlockCompletionWithDevice:
setAttemptStart:
setPrewarmStart:
connectedBluetoothDevices
timeSinceLastMachineWake
lastSleepType
setLastSleepType:
setTimeSinceLastMachineWake:
setConnectedBluetoothDevices:
attemptPrewarmed
setAttemptPrewarmed:
isBeingUsedForSiri
lockAuthSessions
doNotPostUnlockConfirmation
setDoNotPostUnlockConfirmation:
completeAttemptIfNecessary
failedAttemptBeforeStarting:metricErrorString:
attemptActivatedHandler
attemptCount
isBluetoothEnabled
isWifiEnabled
attemptType
presentedWiFiError
isFaceIDEnabled
disableAutoUnlockForAllDevices
errorCodeForBluetoothEnabled:wifiEnabled:faceIDEnabled:
errorStringForBluetoothEnabled:wifiEnabled:faceIDEnabled:
shouldShowErrorForBluetoothEnabled:
isActiveDeviceNearby
remotePeer
isKeyBagLocked
dropEscrowRecordsIfNecessary
lastUnlockDate
lastLockedByRelock
setAttemptInProgress:
setAttemptID:
deviceID
setScanAutoUnlockDevices:
setAutoUnlockActive:
supportsHEIC
createLockSessionWithWatchDevice:
generateAppIconImageWithOptions:
shouldPrewarmAttempt
attemptAutoUnlockForType:
setIsBeingUsedForSiri:
setSuppressAlert:
setPeriocularStatus:
aksSuccess
completeAttemptPostNotification:
attemptResults
cachedMetrics
cancelAttemptsForDeviceUnlocked
deviceUnlockedWithMask:
setAttemptDevice:
setAuthSessionError:
setIncrementedCountID:
setProxyNotAvailableForUnlock:
setScanWatchIDs:
setScanPhoneIDs:
invalidateScanner
cleanUpProxySessions
wifiStateNeedsUpdating
cancelAutoUnlockWithCancelReason:usingTool:
cancelAutoUnlock
setBool:forKey:
attemptID
setAttemptCount:
setVersion:
magnetTransport
sendProtocolBufferData:withType:timeout:option:errorHandler:
attemptDevice
stringForState:
notificationModel
disablePairingWithKeyDevice:
sendDisableMessageToDeviceID:pairingID:
setPairingID:
sendPayload:toDevice:type:sessionID:timeout:errorHandler:
initWithData:
pairingID
updateDynamicStoreEnabled
keyPairingIDForDeviceID:
keyPairingSessions
canceledPairingKeySessions
disableKeyPairingForDeviceID:
hasPairingID
deleteEscrowSecretForDeviceID:
deleteRangingKeyForDeviceID:
deviceTypeForDeviceID:
removeRemoteLTKForDeviceID:
initWithDevice:sessionID:
setPasscode:
placeholder
setPlaceholder:
suggestionManager
suggestedDeviceID
setSuggestedDeviceID:
setupRetryDeviceID
setSetupRetryDeviceID:
setSetupRetryDevice:
setUpsellDevice:
setRequestData:
logDevices
bluetoothID
setIdentifier:
setUseBTPipe:
initWithAutoUnlockDevice:sessionID:bleDevice:
setUseProxy:
attemptStart
setAttemptStartDate:
prewarmStart
setPrewarmStartDate:
supportsEncryption
setUseEncryption:
setIsAuthenticatingForSiri:
setLastLocalUnlockDate:
setExternalACMContext:
locksWithAKSTokens
setUseAKSToken:
invalidateExistingSessionsForBLEDevice:incomingSessionID:
keyAuthSessions
initWithBLEDevice:sessionID:
keysWithAKSTokens
needsArming
setLocalDeviceNeedsArming:
cachedWatchWiFiState
setWifiEnabled:
wakeGestureDates
setWakeGestureDates:
unlockedOnWristDate
setUnlockedOnWristDate:
needsStrictMotionCheck
setNeedsStrictMotionCheck:
handleMessageWithWrapper:
bluetoothIDForIDSID:
proxySessions
initWithDevice:sessionID:bleDevice:
modelIdentifierForDeviceID:
setModel:
setStartDate:
proxyErrorCode
lastProxyState
setLastProxyState:
setScanErrorString:
setProxyErrorCode:
updateStringForProxySession
setNotifiedForProxy:
setProxyDiscoverTime:
setProxyDeviceModel:
setProxyConnectionTime:
setProxyRSSI:
setAttemptTimedOut:
cachedIDSDeviceIDsForBluetoothID:
invalidateOnQueue
removeAutoUnlockNotification
keyRegistrationSessionsByDeviceID
setLocallyGenerated:
lockRegistrationSessionsByDeviceID
handleDeviceUnlocked
activeDevice
keyManager
remoteLTKForDeviceID:
initWithDeviceID:
setRemotePeer:
initializeRemotePeer
handlePairedSuccessfully
autoUnlockDeviceForDeviceID:
notifyObserverOfEnabledDevice:
setFeatureSuggestedForDeviceID:
setRetriedSetup
setFloat:forKey:
clearPhoneAutoUnlockUpsellNotification:
placeholderDevice
idsDeviceForUniqueID:
autoUnlockDeviceForIDSDevice:cloudPaired:cached:
handleLockSessionCompleted:error:
bleDevice
beginKeyRegistrationIfNecessary
handleProxySessionCompleted:error:
handleRegistrationFailedKeyLocked
handleRegistrationCompletedSuccessfully:
isLocallyGenerated
setNeedsArming:
autoUnlockDevice
canceledAuthLockSessions
setLastSuccessfulDevice:
handleCanceledAfterSuccess
performRegistrationIfNecessaryForLockSession:error:
otherSessionCancel
logResults
wifiRangingResults
createRadarForError:devices:rangingResults:
decrementAttemptCount
invalidateAttempt
registerRemotePeerIfNecessary
results
hintToken
connectionTime
baseResultsDictionaryForError:
handleLockConnectionStartedForSession:
handleProxyConnectionStartedForSession:
setChosenDevice:
notifiedForProxy
incrementAttemptCount
setOtherSessionCancel:
shouldShowErrorForWiFiEnabled:
scanTimer
scanner
setTimeout:
setTimeoutHandler:
restartScanTimer:
model
proxyRSSI
proxyDiscoveryTime
notifyObserverOfKeyDeviceLockWithDevice:
lockDevice
handleConfirmationFailed
unlockSucceeded
updateLocalLTK
setIdsMacCountCache:
setNearbyDeviceChangedDate:
createPairingKeySessionWithIdentifier:deviceID:requestData:
cancelParallelRegistrationSessionsForDeviceID:newSessionID:
createRegistrationKeySessionWithIdentifier:deviceID:requestData:locallyGenerated:
handleRemoteRegistrationRequested
createRegistrationLockSessionWithDeviceID:sessionID:requestData:
handleRelockMessage
hasSessionID
initWithUUIDBytes:
payload
setScanner:
setDiscoveryFlags:
setScanRate:
handleFoundPeer:
setDeviceFoundHandler:
setChangeFlags:
setDeviceChangedHandler:
setInvalidationHandler:
setByAddingObjectsFromSet:
setDeviceFilter:
handleBLEScanTimerFired
setExtendedTimer:
invalidateScanTimer
scanWatchIDs
handleFoundBLEDevice:
scanPhoneIDs
cancelAllLockSessionsForScanTimeout
handleScanTimerFired
setScanTimer:
scanErrorString
proxyDeviceModel
proxyDiscoverTime
authSessionError
proxyNotAvailableForUnlock
scanAutoUnlockDevices
advertisementFields
advertisingEnabled
watchLockedAndOnWrist
serviceClients
unlockUpdateAdvertising:mask:
currentlyAdvertising
setAdvertisingChangedDate:
setCurrentlyAdvertising:
idsMacCountCache
idsMacDeviceIDs
useBTPipe
messageType
errorCode
handleDecryptionFailure:
addDeviceIDMissingSessionKey:
hasEncryptedPayload
encryptedPayload
authTag
nonce
decryptMessage:authTag:nonce:bluetoothID:cachedDevices:errorCode:
setErrorCode:
setMessageType:
setPayload:
sendUnlockData:toBLEDevice:completion:
onqueue_keyBagLockStateChange:
handleKeyBagLockStateChanged
behaviorChangedAfterUpgrade
showPhoneAutoUnlockNotificationWithBodyText:isUpsell:
setPipeConnectionChangedDate:
updateLTKs
pairedDeviceID
tearDownAWDLIfNecessary
lastUnlockedByWatch
setMagnetLinkTimer:
magnetLinkTimer
deviceCurrentlyUnlockedByWatch
setLastLockedByRelock:
showPhoneAutoRelockNotification
setBluetoothErrorCount:
setPresentedBluetoothError:
savePresentedBluetoothError
presentedBluetoothError
bluetoothErrorCount
wifiErrorCount
setPresentedWiFiError:
savePresentedWiFiError
setWifiErrorCount:
synchronize
setStateHandle:
lockStateChangedDate
loadPreviousSessionIDs
previousSessionIDs
setPreviousSessionIDs:
transportDidChangeDevices:
transportDidChangeNearbyState:
transport:didReceivePayload:type:deviceID:
transport:didReceivePairingRequestWithSessionID:deviceID:requestData:
transport:didReceiveRegistrationRequestWithSessionID:deviceID:requestData:
transport:didReceiveKeyOriginatingRegistrationRequestWithSessionID:deviceID:requestData:
transport:didReceiveMessageACKForIdentifier:
transport:didReceiveDisableMessage:fromDeviceID:
sessionDidReceiveKeyDeviceLocked:
session:didCompleteWithError:
sessionDidStartConnection:
sessionDidSendInitialData:
isDisplayOff
idsController:didReceiveProtoData:forType:
idsController:didReceiveProtoData:forType:deviceID:
idsControllerNearbyStateChanged:
idsControllerSpaceDidBecomeAvailable:
registerObserver:
unregisterObserver:
repairCloudPairing
phoneAutoUnlockSupportedByDevice:
eligibleDevicesRequestFromBundleID:withCompletionHandler:
enableAutoUnlockWithDevice:passcode:
cancelEnablingAllDevices
cancelEnablingAutoUnlockForDevice:
prewarmAutoUnlock
attemptAutoUnlockForSiri
attemptAutoUnlockWithoutNotifyingWatch
completeAutoUnlockWithNotification:
donateDeviceUnlockedWithMask:
logUnintentionalAutoUnlockAttempt:
requestRelock
autoUnlockStateWithCompletionHandler:
authPromptInfoWithCompletionHandler:
handleDisableMessageForKey:fromDeviceID:
handleDisableMessageForLock:fromDeviceID:
createKeySessionWithBLEDevice:sessionID:wrapper:useEncryption:
createProxySessionWithDeviceID:
clearAllKeysWithTokens
armDevicesWaitingForUnlock
startScannerWithWatchBluetoothIDs:phoneBluetoothIDs:
unlockEnabledForPeer:
proxyAdvertisementForPeer:
watchLockedOnWristForPeer:
idsMacCount
addServiceClientForIdentifier:
removeServiceClientForIdentifier:
screenLockUnlocked:
clearPhoneAutoUnlockNotification:
upsellBehaviorChangedAfterUpgradeIfNecessary
upsellPhoneAutoUnlock
shouldNotify
handleUnexpectedDisablement:
handleLockStateChanged
wristStateChanged:
pipeConnectionChanged:
handleNearbyStateChanged
handleDisplayStateChanged:
handlePairedDeviceLockStateChanged
grabLanguageAssertionForAutoRelock
releaseLanguageAssertionForAutoRelock
setUpMagnetLinkTimer
cancelMagnetLinkTimer
handleBluetoothPowerChanged:
generateStateDump
storePreviousSessionID:
previousSessionExists:
setState:
stateHandle
setAwdlInfo:
setSessionManagerQueue:
setObserverTable:
setSuggestionManager:
setLockAuthSessions:
setCanceledPairingKeySessions:
setCanceledAuthLockSessions:
setKeyAuthSessions:
setLockPairingSessions:
setKeyPairingSessions:
setProxySessions:
setLocksWithAKSTokens:
setKeysWithAKSTokens:
setKeyRegistrationSessionsByDeviceID:
setLockRegistrationSessionsByDeviceID:
setServiceClients:
watchUnlockEnabled
setWatchUnlockEnabled:
previousMacAddressData
setPreviousMacAddressData:
previousNearbyState
setPreviousNearbyState:
nearbyPushTimer
setNearbyPushTimer:
extendedTimer
attemptBundlePath
attemptAppName
proxyConnectionTime
eligibleDevices
advertisingChangedDate
wristStateChangedDate
setWristStateChangedDate:
nearbyDeviceChangedDate
pipeConnectionChangedDate
previousConnectedState
setPreviousConnectedState:
autoRelockAssertionTimerActive
setAutoRelockAssertionTimerActive:
setCachedDeviceWiFiState:
setWifiStateNeedsUpdating:
preventRadarNotification
iconTransferStore
setIconTransferStore:
setLastUnlockedByWatch:
periocularStatus
clManager
setClManager:
isSignedIntoPrimaryiCloudAccount
setIsSignedIntoPrimaryiCloudAccount:
setIsFaceIDEnabled:
setIsWifiEnabled:
setIsBluetoothEnabled:
setIsActiveDeviceNearby:
_attemptInProgress
_watchUnlockEnabled
_previousNearbyState
_attemptPrewarmed
_extendedTimer
_notifiedForProxy
_proxyNotAvailableForUnlock
_presentedBluetoothError
_presentedWiFiError
_currentlyAdvertising
_previousConnectedState
_autoRelockAssertionTimerActive
_cachedDeviceWiFiState
_cachedWatchWiFiState
_wifiStateNeedsUpdating
_useBTPipe
_preventRadarNotification
_lastUnlockedByWatch
_lastLockedByRelock
_doNotPostUnlockConfirmation
_suppressAlert
_needsArming
_isBeingUsedForSiri
_needsStrictMotionCheck
_proxyRSSI
_state
_attemptExternalACMContext
_awdlInfo
_sessionManagerQueue
_observerTable
_suggestionManager
_lockAuthSessions
_canceledPairingKeySessions
_canceledAuthLockSessions
_keyAuthSessions
_lockPairingSessions
_keyPairingSessions
_proxySessions
_locksWithAKSTokens
_keysWithAKSTokens
_keyRegistrationSessionsByDeviceID
_lockRegistrationSessionsByDeviceID
_serviceClients
_previousMacAddressData
_nearbyPushTimer
_prewarmStart
_attemptStart
_attemptDevice
_attemptType
_attemptBundlePath
_attemptAppName
_attemptActivatedHandler
_scanTimer
_proxyDiscoverTime
_scanErrorString
_authSessionError
_proxyErrorCode
_proxyDeviceModel
_lastProxyState
_proxyConnectionTime
_scanAutoUnlockDevices
_scanWatchIDs
_scanPhoneIDs
_attemptCount
_attemptID
_incrementedCountID
_connectedBluetoothDevices
_timeSinceLastMachineWake
_lastSleepType
_eligibleDevices
_wifiErrorCount
_bluetoothErrorCount
_idsMacCountCache
_advertisingChangedDate
_wristStateChangedDate
_lockStateChangedDate
_nearbyDeviceChangedDate
_pipeConnectionChangedDate
_cachedMetrics
_previousSessionIDs
_iconTransferStore
_localDeviceController
_magnetLinkTimer
_lastUnlockDate
_periocularStatus
_clManager
_autoUnlockTransport
_magnetTransport
_keyManager
_isSignedIntoPrimaryiCloudAccount
_isFaceIDEnabled
_isWifiEnabled
_isBluetoothEnabled
_isActiveDeviceNearby
_remotePeer
TQ,N,V_stateHandle
T@"NSDictionary",C,N,V_awdlInfo
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionManagerQueue
T@"NSHashTable",&,N,V_observerTable
T@"SDAutoUnlockSuggestionManager",&,N,V_suggestionManager
T@"NSMutableDictionary",&,N,V_lockAuthSessions
T@"NSMutableArray",&,N,V_canceledPairingKeySessions
T@"NSMutableArray",&,N,V_canceledAuthLockSessions
T@"NSMutableDictionary",&,N,V_keyAuthSessions
T@"NSMutableDictionary",&,N,V_lockPairingSessions
T@"NSMutableDictionary",&,N,V_keyPairingSessions
T@"NSMutableDictionary",&,N,V_proxySessions
T@"NSMutableArray",&,N,V_locksWithAKSTokens
T@"NSMutableArray",&,N,V_keysWithAKSTokens
T@"NSMutableDictionary",&,N,V_keyRegistrationSessionsByDeviceID
T@"NSMutableDictionary",&,N,V_lockRegistrationSessionsByDeviceID
T@"NSMutableSet",&,N,V_serviceClients
TB,N,V_watchUnlockEnabled
T@"NSData",&,N,V_previousMacAddressData
TB,N,V_previousNearbyState
T@"NSObject<OS_dispatch_source>",&,N,V_nearbyPushTimer
TB,N,V_attemptPrewarmed
T@"NSDate",&,N,V_prewarmStart
T@"NSDate",&,N,V_attemptStart
TB,N,V_extendedTimer
T@"SFDeviceDiscovery",&,N,V_scanner
T@"SFAutoUnlockDevice",&,N,V_attemptDevice
Tq,N,V_attemptType
T@"NSString",&,N,V_attemptBundlePath
T@"NSString",&,N,V_attemptAppName
T@?,C,N,V_attemptActivatedHandler
T@"NSObject<OS_dispatch_source>",&,N,V_scanTimer
Td,N,V_proxyDiscoverTime
TB,N,V_notifiedForProxy
T@"NSString",&,N,V_scanErrorString
T@"NSError",&,N,V_authSessionError
Tq,N,V_proxyErrorCode
T@"NSString",&,N,V_proxyDeviceModel
Ti,N,V_proxyRSSI
Tq,N,V_lastProxyState
Td,N,V_proxyConnectionTime
TB,N,V_proxyNotAvailableForUnlock
T@"NSSet",&,N,V_scanAutoUnlockDevices
T@"NSSet",&,N,V_scanWatchIDs
T@"NSSet",&,N,V_scanPhoneIDs
Tq,N,V_attemptCount
T@"NSString",&,N,V_attemptID
T@"NSString",&,N,V_incrementedCountID
Tq,N,V_connectedBluetoothDevices
Tq,N,V_timeSinceLastMachineWake
Tq,N,V_lastSleepType
T@"NSSet",&,N,V_eligibleDevices
Tq,N,V_wifiErrorCount
Tq,N,V_bluetoothErrorCount
TB,N,V_presentedBluetoothError
TB,N,V_presentedWiFiError
TB,N,V_currentlyAdvertising
Tq,N,V_idsMacCountCache
T@"NSDate",&,N,V_advertisingChangedDate
T@"NSDate",&,N,V_wristStateChangedDate
T@"NSDate",&,N,V_lockStateChangedDate
T@"NSDate",&,N,V_nearbyDeviceChangedDate
T@"NSDate",&,N,V_pipeConnectionChangedDate
TB,N,V_previousConnectedState
TB,N,V_autoRelockAssertionTimerActive
TB,N,V_cachedDeviceWiFiState
TB,N,V_cachedWatchWiFiState
TB,N,V_wifiStateNeedsUpdating
TB,N,V_useBTPipe
TB,N,V_preventRadarNotification
T@"NSMutableDictionary",&,N,V_cachedMetrics
T@"NSMutableArray",&,N,V_previousSessionIDs
T@"SDAutoUnlockIconTransferStore",&,N,V_iconTransferStore
T@"SDAutoUnlockLocalDeviceController",&,N,V_localDeviceController
T@"NSObject<OS_dispatch_source>",&,N,V_magnetLinkTimer
T@"NSDate",&,N,V_lastUnlockDate
TB,N,V_lastUnlockedByWatch
TB,N,V_lastLockedByRelock
TB,N,V_doNotPostUnlockConfirmation
TB,N,V_suppressAlert
Tq,N,V_periocularStatus
T@"CLLocationManager",&,N,V_clManager
TB,N,V_needsArming
TB,N,V_isBeingUsedForSiri
TB,N,V_needsStrictMotionCheck
T@"<SDAutoUnlockTransportProtocol>",R,W,N,V_autoUnlockTransport
T@"<SDUnlockMagnetTransport>",R,W,N,V_magnetTransport
T@"<SDKeyManaging>",R,W,N,V_keyManager
T@?,C,N,V_isSignedIntoPrimaryiCloudAccount
T@?,C,N,V_isFaceIDEnabled
T@?,C,N,V_isWifiEnabled
T@?,C,N,V_isBluetoothEnabled
T@?,C,N,V_isActiveDeviceNearby
T@"SDAutoUnlockPeer",&,N,V_remotePeer
T@"NSString",C,N,V_state
TB,N,V_attemptInProgress
T@"NSData",&,N,V_attemptExternalACMContext
_commonEnsureStopped
appendFormat:
_discoveryEnsureStopped
_proximityEnsureStopped
_rtiEnsureStopped
_serviceEnsureStopped
_siriRemoteMonitorEnsureStopped
_deactivateUIDelayTimer
_commonEnsureStarted
_discoveryEnsureStarted
_rtiEnsureStarted
_bulletinsEnsureStarted
_bulletinsEnsureStopped
_proximityEnsureStarted
_siriRemoteMonitorEnsureStarted
_serviceShouldRequestAutoFill
_serviceEnsureStarted
_screenStateChanged:
_uiLockStatusChanged:
needsSetup
postNotificationName:object:userInfo:deliverImmediately:
initWithURL:resolvingAgainstBaseURL:
queryItems
_uiStart:extraInfo:
tvAutoFillRemoveAll
_activateUIDelayTimer
_sessionStop:
setPurpose:
_deviceFound:
_deviceLost:
_deviceChanged:
deviceActionType
idsBluetoothDeviceIDsForRIServers
_deviceStoppedRequesting:
_uiShowing
_uiStartIfEnabled:extraInfo:
symbolCharacterSet
_uiStop:
setAgent:
tryPIN:
_sessionStart:
notificiationDidDismiss:
clientPairingSucceeded:completion:
clientPromptForPIN:throttleSeconds:
initWithType:
_proximityFound:
_proximityLost:
_proximityChanged:
updateWithBLEDevice:
proxPairProximityEstimator
bleProximityInfoForType:device:
proximityEstimatorWithProximityInfo:
setProxPairProximityEstimator:
updateWithSFBLEDevice:
triggered
rssiEstimate
removeDelegate:
_serviceStartRequestingAutoFillIfReady
activate:
setAssociatedDomains:
setLocalizedAppName:
setUnlocalizedAppName:
_serviceHandleError:
setHidePINHandler:
_serviceHandleUsername:password:error:
setReceivedCredentialsHandler:
_serviceStopRequestingAutoFill
handleUsername:password:
startRequestingAutoFill
advertiseNonConnectable:
_serviceTimeoutStart
_serviceTimeoutStop
stopRequestingAutoFill
setPeerDevice:
setCompletedHandler:
_sessionHandlePairingSucceededResponse:
_helpersClientPairingSucceeded:completion:
setPairingFinishedHandler:
passwordPickerStart:bundleID:localizedAppName:unlocalizedAppName:associatedDomains:completion:
setPromptForPickerHandler:
_helpersClientPromptForPIN:throttleSeconds:
clientDismissUserNotification
_ensureKeychainCleaned:
isEqualToIgnoringCase:
advertiseNonConnectableDebug:
initWithServiceName:viewControllerClassName:
setUserInfo:
newHandleWithDefinition:configurationContext:
activateWithContext:
deviceClassCode
activeTVAutoFillPrompts
tvAutoFillPostIfNeeded:
tvAutoFillRemove:
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
handleEventWithData:
_postSetupNotificationForDevice:
helperStop:
_uiStartIfNeeded:extraInfo:
preventNotifications
_alertHandle
_autoFillContext
_bulletinsDisabled
_cleanKeysState
_credentialsHandler
_deviceDiscovery
_devices
_btDevices
_grantingSession
_grantedDevices
_helpers
_ignoredTVs
_notificationManager
_proximityDevices
_proximityDiscovery
_proximityEnabled
_requestingAppLocalizedName
_requestingAppUnlocalizedName
_requestingAssociatedDomains
_requestingBundleID
_requestingService
_requestingServiceTimedOut
_requestingServiceTimer
_requestingServiceState
_remoteMonitoringEnabled
_rtiActivated
_scanningEnabled
_siriRemoteMonitor
_siriRemoteMonitorState
_statusMonitor
_triggeredDevices
_uiDelayActive
_uiDelayDevice
_uiDelayTimer
_prefGrantingEnabled
_prefPairedTVAllowed
_prefRateLimitDisabled
_prefRequestingEnabled
_prefRequiresProx
_testingService
_preventNotifications
TB,N,V_preventNotifications
effectiveIdentifier
mediaRouteIdentifier
isReady
_canTransition:
setNotificationDurationSecs:
setNotificationTicks:
setPendingContentDurationSecs:
setPendingContentTicks:
setTransferDoneDurationSecs:
setTransferDoneTicks:
setTransferPendingDurationSecs:
setTransferPendingStartTicks:
notificationBubble
reset
transferBubble
stateIsClose
stateIsMedium
canTransition:
effectiveID
resetTicks
stateIsNearby
setNextState:
clientProvidedError
setClientProvidedError:
clinkDevice
setClinkDevice:
dismissReason
setDismissReason:
forced
setForced:
forcedID
setForcedID:
nextState
setNotificationBubble:
notificationInfo
setNotificationInfo:
medBubbleDelayed
setMedBubbleDelayed:
route
setRoute:
setTransferBubble:
notificationTicks
notificationDurationSecs
pendingContentTicks
pendingContentDurationSecs
transferDoneTicks
transferDoneDurationSecs
transferPendingStartTicks
transferPendingDurationSecs
_clientProvidedError
_forced
_medBubbleDelayed
_nextState
_notificationType
_attachmentURL
_clinkDevice
_dismissReason
_forcedID
_notificationBubble
_notificationInfo
_route
_transferBubble
_notificationTicks
_notificationDurationSecs
_pendingContentTicks
_pendingContentDurationSecs
_transferDoneTicks
_transferDoneDurationSecs
_transferPendingStartTicks
_transferPendingDurationSecs
T@"NSURL",&,N,V_attachmentURL
T@"SFDevice",&,N,V_bleDevice
TB,N,V_clientProvidedError
T@"RPCompanionLinkDevice",&,N,V_clinkDevice
Tq,N,V_dismissReason
TB,N,V_forced
T@"NSString",&,N,V_forcedID
Ti,N,V_nextState
T@"SFBubbleEstimator",&,N,V_notificationBubble
T@"SFNotificationInfo",&,N,V_notificationInfo
TI,N,V_notificationType
TB,N,V_medBubbleDelayed
T@"TURoute",&,N,V_route
Ti,N,V_state
T@"SFBubbleEstimator",&,N,V_transferBubble
TQ,N,V_notificationTicks
Td,N,V_notificationDurationSecs
TQ,N,V_pendingContentTicks
Td,N,V_pendingContentDurationSecs
TQ,N,V_transferDoneTicks
Td,N,V_transferDoneDurationSecs
TQ,N,V_transferPendingStartTicks
Td,N,V_transferPendingDurationSecs
T@"NSString",R,C,N
externalID
_requestPostOrUpdate:info:mediumVariant:canPost:
requestPostOrUpdate:info:mediumVariant:
requestRemove:withReason:
requestRemoveAll
requestUpdate:info:mediumVariant:canPostNotification:
handleNotificationWasTapped:
handleNotificationWasDismissed:reason:
dismissedHandler
setDismissedHandler:
tappedHandler
setTappedHandler:
_externalID
_internalIDs
_showingMedium
_triggeredID
_dismissedHandler
_tappedHandler
T@?,C,N,V_dismissedHandler
T@?,C,N,V_tappedHandler
_systemCanTrigger
_bleActionDiscoveryEnsureStopped
_bleInfoDiscoveryEnsureStopped
_clinkEnsureStopped
_commonShouldAdvertiseChanged
_commonCallCountChanged
_motionEnsureStopped
_clinkShouldStart
_clinkEnsureStarted
_bleActionDiscoveryShouldStart
_bleActionDiscoveryEnsureStarted
_bleInfoDiscoveryShouldStart
_bleInfoDiscoveryEnsureStarted
_motionShouldStart
_motionEnsureStarted
_serviceShouldStart
_run
_commonScreenStateChanged
setScreenLockedChangedHandler:
_bleUpdateMappingAndNearbyCoalesced
commonSystemUIChanged
_proxiedNotificationDidDismiss:reason:
_proxiedNotificationWasTapped:
_hapticsEnsureStopped
connectedCallCount
_uiStopIfNeeded:reason:
_resetAllStates
screenLocked
_bleUpdateMappingReset
_combinedDevicePending
_runNotificationPending
_runNotificationPendingContent
_runNotificationReady
_runNotificationPresented
_runNotificationDismissed
_runTransferInProgress
_runTransferPending
_runTransferReady
_runTransferPendingDismiss
_runTransferDone
_runStateVerify:device:
_combinedDevicePrepareForCallTransferTrigger:
_proximityClientDeviceWillTrigger:
_shouldMediumPromptWithInfo:
mediumBubbleVersion
insideSmallBubble
_scheduleRunAfter:
_throttleMediumSetTicks:
interactionBehavior
_hapticsFireNotificationSuccess
_throttleEventDidOccur
_runCallHandoffStart:
_proximityClientDeviceEnteredImmediate:
_proximityClientDeviceExitedImmediate:
_runCallHandoffHandleResponse:error:
_runCallHandoffStartDelayTimer
_runCallHandoffHandleDelayTimerFired
_uiDismissWhenReady:reason:
_bleActionDeviceFound:
_bleActionDeviceLost:
_bleActionDeviceChanged:
_bleActionScanTimerActivate
_bleActionScanTimerInvalidate
_bleActionDeviceFoundCandidate:
_bleUpdateMappingWithDevice:
_combinedDeviceIsSuppressed:
insideMediumBubble
_proximityClientDeviceDidUnTrigger:
_proximityClientDeviceUpdated:
_bleDeviceNearbyEnter:
_bleDeviceNearbyExit:
_bleActionScanTimerFired
_bleInfoDeviceFound:
_bleInfoDeviceLost:
_bleInfoDeviceChanged:
_updateCandidateIsNearby
_proximityClientDeviceEnteredNearby:
_proximityClientDeviceExitedNearby:
_bleUpdateMappingAndNearby
_clinkHandleRequest:options:responseHandler:
deregisterRequestID:
_clinkHomePodHandleRequest:responseHandler:
_proximityClientSeedInitialDevices:
_proximityClientSeedWillTriggerDeviceIfNeeded:
_combinedDeviceForUIID:
mediaTransferInfoFromInfo:
notificationHomePodTypeForDevice:
setHomePodType:
deviceEnteredImmediateHandler
deviceExitedImmediateHandler
deviceEnteredNearbyHandler
deviceExitedNearbyHandler
deviceWasDismissedHandler
deviceWasDismissedHandlerEx
deviceWasSelectedHandler
deviceWillTriggerHandler
deviceDidUntriggerHandler
deviceUpdateHandler
_serviceTimeoutInvalidate
_serviceTimeoutFired
_throttleEventSet:
_proximityClientDeviceWasDismissed:reason:
_proximityClientDeviceWasSelected:
_routeForDevice:
callTransferInfoForDevice:
_routes
_throttleEventsReachedMax
_throttleMediumAllowsTrigger
displayNameForContact:
setInteractionBehavior:
setInteractionDirection:
interactionDirection
_proximityClientDeviceWasDismissed:
_serviceTimeoutActivate
_throttleEventsReset
_throttleMediumReset
_hapticsEnsurePrepared
_expectingContentForDeviceID:
callTransferShouldPush:
_bleActionDiscovery
_bleActionDevices
_bleActionScanTimer
_bleActionScanTimedOut
_bleActionService
_bleActionServiceTimer
_bleInfoDiscovery
_bleInfoDevices
_bleMapCoalescer
_bleUnmapped
_candidateNearby
_clientShouldAdvertise
_clinkClient
_delayTimer
_mappedDevices
_motionMonitorStarted
_notificationProxy
_proxClients
_stationary
_suppressedDeviceIDs
_transferTimer
_uiDevice
_unansweredCall
_userOnCall
_prefBLEActionScanSecs
_prefEnabled
_prefForceShouldAdvertise
_prefForceStationary
_prefForceOnCall
_prefHighNormal
_prefIgnoreMediumThrottle
_prefMediumBubbleEnabled
_prefMediumBubbleLastTicks
_prefRetriggerSecs
_prefTransferSecs
_prefThrottleEventCount
_prefThrottleEventMax
_stop
stopHandoffAdvertisingIfAppropriate
setDiscoveryMode:
addOrUpdateNodesForPerson:withChanges:
setPersonFoundHandler:
setPersonChangedHandler:
removeNodesForPerson:
setPersonLostHandler:
discoveredPeople
statusChangedHandler
resumeHandoffAdvertisingIfAppropriate
deviceIsEligibleForAirDrop:
updateRangingMeasurementForDevice:inNode:
createSFNodeFromMyRPDevice:
personHasAirDropEligibleDevice:
updateRangingMeasurementForPerson:inNode:
createSFNodeFromRPPerson:
identifiersForPerson:
removeObjectsForKeys:
shouldStopHandoffAdvertising
assertionIdentifier
relativeLocation
idsDeviceIdentifierConflict
deviceTypeFromModelIdentifier:
defaultSFNodeFlags
createSFNodeFromCNContacts:identifier:device:
deviceImageNameFromModelIdentifier:
T@"SDRapportBrowser",R
_startCount
_cachedNodes
_peopleDiscovery
setHasFinalMessage:
hasFinalMessage
_finalMessage
TB,N,V_finalMessage
updateServerState
awdlTimeoutFired:
bluetoothTimeoutFired:
invalidateTimers
startTimers
startHTTPServer:
publishedInfoChanged:
thisIsTheFinder
stopProximityScanner
startServer
discoverableByContactsOnly
discoverableByEveryone
startProximityScanner
object
keyBagFirstUnlock:
wirelessChanged:
appleIDChanged:
airDropUnpublished:
airDropStatusChanged:
screenStateChange:
bluetoothChanged:
discoverableModeChanged:
sslSettings
initWithPort:identity:
bonjourPublisher:propertiesDidChange:
didOpenConnection:
didCloseConnection:
finderAirDropEnabled:
stopScanningAndStartServer
clientPid
_portNumber
_awdlTimer
_bluetoothTimer
_coalescer
_identity
_discoverableMode
_publisher
_discoveredHashes
_information
_clientPid
_clientBundleID
Ti,V_clientPid
T@"NSString",C,V_clientBundleID
T@"<SDAirDropServerDelegate>",W,V_delegate
T@"<SDAirDropListenerDelegate>",W,V_delegate
itemsDescriptionAdvanced
extractNotesURLs:
createDestination
setAppLink:
getAppLinkWithURL:completionHandler:
appLink
setBundleProxy:
targetApplicationProxy
localizedName
openURLs:
_appLink
T@"LSAppLink",&,N,V_appLink
device
getBytes:length:
_connectionHasEntitlement:
cancelAutoUnlock:
notifyDelegate
checkEntitlementWithHandler:
failedToEnableDevice:error:
setEnableDevice:
failedUnlockWithError:
keyDeviceLocked:
enableDevice
enabledDevice:
beganAttemptWithDevice:
completedUnlockWithDevice:
currentConnection
eligibleAutoUnlockDevicesWithCompletionHandler:
enableAutoUnlockWithDevice:passcode:clientProxy:
attemptAutoUnlockWithClientProxy:
attemptAutoUnlockWithoutNotifyingWatchWithClientProxy:
attemptAutoUnlockForSiriWithClientProxy:
enableUnlockWithDevice:fromKey:withPasscode:completionHandler:
disableUnlockWithDevice:completionHandler:
unlockEnabledWithDevice:completionHandler:
establishStashBagWithCompletionHandler:
establishStashBagWithManifest:completionHandler:
unlockStateForDevice:completionHandler:
authenticateUsingClientProxy:type:sessionID:
cancelAuthenticationSessionWithID:
_enableDevice
T@"<SFUnlockClientProtocol>",&,N,V_clientProxy
T@"SFAutoUnlockDevice",&,N,V_enableDevice
T@"<SDUnlockXPCSesssionDelegate>",&,V_delegate
setTransferManager:
askEventForRecordID:withResults:
doubleValue
progressEventForRecordID:withResults:
finishedEventForRecordID:withResults:
cancelEventForRecordID:withResults:
errorEventForRecordID:withResults:
absoluteString
listener:didReceiveError:
listener:didReceiveNewRequest:
listener:informationDidChange:
alertManager:acceptingTransferWithRecordID:withDestinationURL:shouldExtractMediaFromPhotosBundlesForRecordID:
alertManager:cancelingTransferWithRecordID:withFailureReason:
_transferIdentifierToNetworkOperation
_transferManager
_classroomTransferManager
_stepData
T@"NSData",&,N,V_stepData
_pairingID
T@"NSString",&,N,V_pairingID
calendarWithIdentifier:
autoupdatingCurrentLocale
setLocale:
components:fromDate:
year
month
hour
minute
second
timeZone
abbreviation
stringByRemovingCharactersFromSet:
setModelDescription:
modelDescription
componentsSeparatedByCharactersInSet:
stringFromState:
shouldRegister
canPerformUnlocks
handleRegistrationBegan
_deviceID
T@"NSString",C,N,V_deviceID
TQ,N,V_state
keyBagLocked
TB,R,N,GisKeyBagLocked
setHasUnlocked:
hasUnlocked
unlocked
_unlocked
TB,N,V_unlocked
isJustFiles
totalSharedItemsCount
updatePossibleActions
defaultActionForBundleProxy:
setPossibleActions:
_start
setActiveConnection:
sendProxyTrigger
activeConnection
startDate
notified
setNotified:
setBleDevice:
_activeConnection
_notified
_model
_startDate
_bleDevice
TB,V_activeConnection
TB,V_notified
TB,V_invalidated
T@"NSString",C,N,V_model
T@"NSDate",&,N,V_startDate
T@"SFBLEDevice",&,N,V_bleDevice
Tq,N,V_state
setHasUseToken:
hasUseToken
setAuthPrompt:
setHasAuthPrompt:
hasAuthPrompt
setHasSupportsConfirmationACK:
hasAppName
setHasPhoneUnlockDate:
hasPhoneUnlockDate
setHasSkipMotionCheck:
setHasIsAuthenticatingForSiri:
_authPrompt
_isAuthenticatingForSiri
_skipMotionCheck
_useToken
TB,N,V_useToken
T@"NSData",&,N,V_keyData
TB,N,V_authPrompt
T@"NSString",&,N,V_appName
Td,N,V_phoneUnlockDate
TB,N,V_skipMotionCheck
TB,N,V_isAuthenticatingForSiri
initWithImageTitle:imageData:cacheLookupKey:
encodeInteger:forKey:
iconData
initWithContact:iconData:atIndex:cacheLookupKey:
icon
_contact
_iconIndex
T@"CNContact",R,&,N,V_contact
T@"NSData",R,&,N
T^{CGImage=},R,N
Tq,R,N,V_iconIndex
containsValueForKey:
decodeIntegerForKey:
hostName
portNumber
notifyClientAboutResolve:
mount
initWithName:type:domain:path:timeout:
resolve
bonjourResolverDidChange:
mountDiskImageAsync
_resolver
T@"<SDNetworkResolverDelegate>",W,V_delegate
setPairedDeviceID:
_pairedDeviceID
_token
T@"NSData",&,N,V_token
T@"NSString",&,N,V_pairedDeviceID
setAvailableApplications:
initWithPerson:items:sandboxExtensions:
setClientBundleID:
setAuditToken:
setClientPid:
clientBundleID
notifyClientWithPosixError:
send
initWithConnection:
setContactsOnly:
setSessionID:
schedule
accept
logActivityType:sessionID:
initWithNode:
setProtocol:
setFlags:
airDropServer:event:withResults:
airDropConnection:event:withResults:
airDropSession:event:withResults:
airDropController:didChange:
airDropStatus:didChange:
airDropInformation:didChange:
networkResolver:event:withResults:
networkEjecter:event:withResults:
copyPropertyForKey:
activities
setActivities:
_operation
_connectionScheduled
_properties
_sandboxExtensionHandle
_activities
T@"NSMutableArray",&,V_activities
T@"<SDNetworkOperationDelegate>",W,V_delegate
_loadTransferStore
storeCachedImageForHash:device:appName:
imageCachedForHash:device:
_transferStore
setWithCapacity:
T@"NSSet",R,C
_readPrefs
unarchivedObjectOfClass:fromData:error:
_setAccount:
account
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
setPersonInfoCache:
personInfoCache
_identityForAppleID:
archivedDataWithRootObject:requiringSecureCoding:error:
removeFromKeychain
setAccount:
_updateAccountInfoPrefs
_postNotificationWithName:
_addAppleID:
_removeAppleID:
matchedValue
_updatePersonInfoCachePrefs
_addPersonInfoToCache:
isStale
_cachedPersonInfoWithEmailOrPhone:
_clearPersonInfoCache
_setLastConnectionDate:
_setLastSuccessfulConnectionDate:
setIdentity:
_setIdentity:forAppleID:
linkedToCurrentUser
setLinkedToCurrentUser:
_setIdentityLinkedToCurrentUser:forAppleID:
setCertificateTokenCreationDate:
_setCertificateToken:privateKeyPersistentReference:forAppleID:
setContactInfo:
setValidationRecord:
_setContactInfo:validationRecord:forAppleID:
_updateMetaInfoPrefs
_setMetaInfo:
setIdentityLinkedToCurrentUser:forAppleID:
lastConnectionDate
lastSuccessfulConnectionDate
_metaInfo
_lastConnectionDate
_lastSuccessfulConnectionDate
_account
_personInfoCache
T@"SFAppleIDAccount",&,N,V_account
T@"NSMutableDictionary",&,N,V_personInfoCache
T@"NSDate",&,N,V_lastConnectionDate
T@"NSDate",&,N,V_lastSuccessfulConnectionDate
T@"NSDictionary",C,N
initWithXPCConnection:
connectionManagerDidInvalidate:
xpcManagerListener
setXpcManagerListener:
connections
setConnections:
_xpcManagerListener
_connections
T@"NSXPCListener",&,V_xpcManagerListener
T@"NSMutableArray",&,V_connections
_clientDeviceLockStatusChanged
_clientEnsureStopped
_serverEnsureStopped
_serverEnsureStarted
_clientShouldStart
_clientEnsureStarted
_commonIDSChanged:
handleTextInputData:
setReceivedObjectHandler:
setReceivedRequestHandler:
_legacy_serverHandleEvent:
_legacy_serverHandleRequest:
systemPairState
_serverSendTextSessionDidBegin:
_legacy_serverRespondInfo:
sendResponse:
currentPayload
initWithRTIPayload:
setText:
setDeviceIDs:
sendEvent:
_sendRTIPayload:
setNeedsKeyboard:
advertisingTimerStart
_serverSendTextSessionDidEnd:
advertisingTimerFired
remoteTextEventHandler
clientNotificationUpdateForDevice:rtiData:
_clientDeviceFound:
_clientDeviceLost:
_clientClinkDeviceFound:
_clientClinkDeviceLost:
_clientClinkDeviceChanged:
_clientUpdateCoalesceTimerForDevice:identifier:
smoothedRSSI
clientNotificationPostIfNeededForDevice:
clientNotificationRemoveForDevice:
clientNotificationUpdateForDevice:info:
testKeyboardPost:
performSelector:withObject:afterDelay:
clientTextSessionDidBegin:device:
testKeyboardPostThenUpdate
testKeyboardPostWithDelay
testKeyboardRemoveWithDelay
testKeyboardUpdateWithDelay
_aggressiveTimer
_clientEnabled
_cloudPairedOnly
_controlService
_currentSessionID
_currentText
_idsMonitorInstalled
_legacy_sessionDeviceIDs
_rssiThreshold
_rtiTimer
_serverEnabled
_sessionDeviceIDs
_rtiHandleEventWithData:
setEventHandler:
_rtiHandleInputDidBeginWithFlags:sessionInfo:
setTextInputDidBegin:
_rtiHandleInputDidEndWithFlags:sessionInfo:
setTextInputDidEnd:
_ensureStarted
removeAllDelegates
_stopClock:
enumerateObjectsUsingBlock:
_startClockWithResetIfNeeded
_logEvent:stopClock:
_delegates
_overrunTimer
_sessionClock
boolValue:
setInformationAndNotify
T@"<SDAirDropInformationDelegate>",W,V_delegate
airDropTransferRequested:
startCalled
postNotification:forNeighborhood:
types
initWithDomain:types:
setXpcConnection:
setIconData:iconHash:forPerson:
transfersInitiated
setTransfersInitiated:
transfersCompleted
setTransfersCompleted:
initWithWorkgroup:
stringForBrowserMode:
bonjourNodesDidChange:
windowsNodesDidChange:
startBrowsingDomain:
setBonjourBrowserMode:
bonjourNodesForDomain:
stopBrowsingDomain:
startODiskBrowsing:
odiskNodesForDomain:
stopODiskBrowsing:
startAirDropBrowsing:bundleID:sessionID:helperConnection:delayBonjour:
startAirDropBrowsing:connection:sessionID:
incrementTransfersInitiated
incrementTransfersCompleted
airDropNodesForDomain:
isAirDropEnabled
stopAirDropBrowsing:
startBrowsingWorkgroup:
windowsNodesForWorkgroup:
stopBrowsingWorkgroup:
_odiskBrowsers
_bonjourBrowsers
_windowsBrowsers
_airDropBrowsers
setMaxConcurrentOperationCount:
documentProxyForName:type:MIMEType:
applicationsAvailableForOpeningFromAirDropWithError:
applicationsAvailableForOpeningWithError:
intersectOrderedSet:
firstReceivedFilename
handlingAppBundleID
acceptActionTriggered
cancelActionTitleToAccompanyActions:
setMinRequiredTransferState:
setSelectedApplication:
selectedApplication
performActionWithBundleProxy:completionHandler:
availableApplications
shouldOpenAutomaticallyAfterUserAccepts
actionForBundleProxy:
actionHandler
addOpenWithActions
setUseOpenWithText:
action
applicationProxyForBundleProxy:
appState
isInstalled
isRestricted
operationToOpenResource:usingApplication:uniqueDocumentIdentifier:userInfo:delegate:
logReceiverBundleID:forAppProxy:andURL:
setCompletionBlock:
addOperations:waitUntilFinished:
_LSFailedToOpenURL:withBundle:
openResourceOperation:didFinishCopyingResource:
openResourceOperationDidComplete:
openResourceOperation:didFailWithError:
_workOperationsQueue
_icloudDriveHandler
_selectedHandler
_selectedProxy
_willUseOpenWithAlert
_availableApplications
_selectedApplication
T@"NSArray",C,N,V_availableApplications
T@"LSBundleProxy",&,N,V_selectedApplication
ephemeralSessionConfiguration
setTimeoutIntervalForResource:
set_tlsTrustPinningPolicyName:
initWithIdentifier:
setWaitsForConnectivity:
set_appleIDContext:
sessionWithConfiguration:
_callResponseHandlerWithInfo:errorInfo:error:
taskInfo
urlAtKey:
gsToken
initWithURL:gsToken:
dataWithJSONObject:options:error:
setHTTPBody:
_handleURLIsAvailable:error:completion:
_urlWithCompletion:
_isTaskInfoValid
_sendRequest
_callResponseHandlerWithInfo:error:
urlRequest
_handleTaskResponse:withData:error:
dataTaskWithRequest:completionHandler:
allHTTPHeaderFields
setUrlRequest:
_handleURLRequestIsAvailable
_urlRequestWithCompletion:
statusCode
initWithHTTPUTLResponse:data:
responseInfo
_handleServerError:withStatusCode:nextSuggestedAttemptDelay:
_parseServerResponse:error:
dateWithTimeIntervalSince1970:
_parseCreateCertificateResponse:error:
_parseFetchCertificateResponse:error:
_parseGetMyInfoResponse:error:
_parseFindPersonResponse:error:
setGsToken:
_handleGSTokenIsAvailable
activated
setActivated:
invalidated
setInvalidated:
session
_gsToken
_taskInfo
_type
_urlRequest
TB,N,V_activated
T@"NSString",&,N,V_gsToken
TB,N,V_invalidated
T@"NSURLSession",&,N,V_session
T@"NSDictionary",R,N,V_taskInfo
Tq,R,N,V_type
T@"NSURLRequest",&,N,V_urlRequest
initialize
xpcManagerInterface
setInterruptionHandler:
cleanUpConnections
closeStreamsForIdentifier:
unlockSessions
initWithClientProxy:withIdentifier:
myIPAddress
closeFile
getContinuationStreamsForMessage:bundleID:usingID:completionHandler:
createCompanionServiceManagerWithIdentifier:clientProxy:reply:
createStreamsForMessage:reply:
createUnlockManagerWithReply:
appleAccountSignedIn
appleAccountSignedOut
addDedicatedCellularBearer:completion:
removeDedicatedCellularBearerWithCompletion:
continuationStream:connectedToService:withFileHandle:acceptHandler:
companionStreamClosedStreams:
unlockSessionDidFinish:
publisher:didConnectToService:withStreamHandler:
publisher:companionStreamForService:streamHandler:
manager:connectedToService:withFileHandle:acceptHandler:
companionStreams
setCompanionStreams:
serviceManager
setServiceManager:
deviceStreamMap
setDeviceStreamMap:
setUnlockSessions:
streamIdentifiers
setStreamIdentifiers:
_companionStreams
_serviceManager
_deviceStreamMap
_unlockSessions
_streamIdentifiers
T@"NSString",&,V_bundleID
T@"NSUUID",&,V_identifier
T@"NSXPCConnection",&,V_xpcConnection
T@"NSMutableArray",&,V_companionStreams
T@"SDServiceManager",&,V_serviceManager
T@"NSMutableDictionary",&,V_deviceStreamMap
T@"NSMutableArray",&,V_unlockSessions
T@"NSMutableArray",&,V_streamIdentifiers
T@"<SDConnectionManagerDelegate>",W,V_delegate
hasLongTermKey
setHasRemoteNeedsLTK:
hasRemoteNeedsLTK
_ltkHash
_remoteNeedsLTK
T@"NSData",&,N,V_ltkHash
TB,N,V_remoteNeedsLTK
readData:length:fromStream:
writeData:length:toStream:
openStreams
readIncomingChunk
sendOutgoingChunk:length:compressed:
processNetworkStatistics:
processCompressibilityStatistics
_compressible
_totalBytesSent
_totalNetworkDelay
_keepingUpWithNetwork
_numBlocksProcessed
_totalBytesProcessed
_numBlocksCompressed
_lastCompressionRatio
_totalCompressionTime
_totalCompressedOutput
_adjustmentQueue
setSenderID:
hasPayload
setHasMessageType:
hasMessageType
setHasUseProxy:
hasUseProxy
setAwdlCacheID:
setHasAwdlCacheID:
hasAwdlCacheID
setAksSessionID:
setHasAksSessionID:
hasAksSessionID
hasAuthTag
hasNonce
awdlCacheID
aksSessionID
_aksSessionID
_authTag
_awdlCacheID
_encryptedPayload
_messageType
_nonce
_payload
_senderID
T@"NSData",&,N,V_sessionID
T@"NSData",&,N,V_payload
TI,N,V_messageType
T@"NSData",&,N,V_senderID
TI,N,V_awdlCacheID
TI,N,V_aksSessionID
T@"NSData",&,N,V_encryptedPayload
T@"NSData",&,N,V_authTag
T@"NSData",&,N,V_nonce
_secret
T@"NSData",&,N,V_secret
componentsWithURL:resolvingAgainstBaseURL:
initWithTransferIdentifier:actionIdentifier:title:singleItemTitle:
handleAction
_credential
addClient:forIdentifer:
loadWatchIDsToPairingRecords
setAutoUnlockDisabledDueToManagement:
handleRequiredStateDisabled
updateRangingKeysIfNeccesary
loadLocalLTK
loadLocalAttestedLTKIfNecessary
updateRemoteLTKs
checkLocalLTK
checkLocalAttestedLTK
localDeviceID
ltkInfoForDeviceID:
hasLtkID
ltkID
localLTK
viewSyncing
allKeychainDevices
remoteLTKStorageFilePath
remoteLTKList
setLocalDeviceID:
appleAccountSignedIn:
appleAccountSignedOut:
deviceFirstUnlocked:
removeAllRemoteLTKsOnSignOut
resetAppleWatchExisted
loadLocalUniqueIDIfNeeded
checkRemoteLTKs
updateSessionKeys
localAttestedLTK
checkRemoteLTKForDeviceID:
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:
aksAuthSessionForDeviceID:originator:usingEscrow:attestation:
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:usingEscrow:
escrowSecretForDevice:
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:escrowSecret:
aksAuthorizationSessionForDeviceID:originator:externalACMContext:
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:externalACMContext:
sessionKeyForDeviceID:
idsDeviceIDsForBluetoothID:
cachedSessionKeys
sortedArrayUsingComparator:
initWithLength:
logBluetoothIDCache
watchIDsMissingSessionKey
refreshAutoUnlockDeviceCache
arrayForKey:
setWatchIDsMissingSessionKey:
ltkInfoForDeviceID:modern:
setLocalLTK:
storeLongTermKey:forDeviceID:name:
version
generateLocalLTKWithAttestation:
generateLocalLTKWithAttestation:forceDCRTRetrievalWithCompletion:
ltkKeyClass
setLtk:
setLtkID:
storeAttestedLongTermKey:forDeviceID:name:
setLocalAttestedLTK:
t208Machine
isEqualToData:
setSignout:
deviceTypeForDevice:
remoteLTKEntryForDeviceID:
loadRemoteLTKsIfNeeded
keychainDevices:
modernSignedDevices
signedDevices
isSubsetOfSet:
signLTKsForDeviceID:
remoteLTKs
updateLTKsForDeviceID:staleRemoteLTK:
longTermKeyForDevice:modern:
remoteLTKHashForDeviceID:modern:
signLTK:modernLTK:forDeviceID:
signLTK:ltkModDate:modernLTK:modernLTKModDate:deviceID:
keyClassForDeviceID:
modificationDataForDeviceID:modern:
addRemoteLTK:ltkHash:ltkModDate:modernLTK:modernLTKHash:modernLTKModeDate:deviceID:
baseModernSyncedDictionary
baseSyncedDictionary
deviceIsLocalDevice:
modernSyncedDictionaryForDevice:
syncedDictionaryForDevice:
enumerateKeysAndObjectsUsingBlock:
saveRemoteLTKs
updatePreferredRemoteLTKForDeviceID:
preferredRemoteLTKForDeviceID
fetchLTKsFromCompanionForDeviceID:needsLTK:remoteNeedsLTK:checkViewState:
remoteDeviceID
localID
needsLTK
remoteNeedsLTK
pendingReceiveForPeer:
pendingSendForPeer:
keybagAssertionTimer
releaseKeybagAssertion
setKeybagAssertionTimer:
waitingForUnlockTimer
setWaitingForUnlock:
setWaitingForUnlockTimer:
handleLTKRequest:
handleLTKResponse:
deviceEnabledAsKeyForAnyDevice
deviceEnabledAsKeyForAnyIDSDevice
deviceEnabledAsKeyForAnyMac
deviceEnabledAsKeyForAnyIDSMac
idsDevicesIDs
escrowSecretExistsForDevice:
devicesWithLTKs
rangingKeyForDeviceID:
companionIDForWatchID:
deleteAllEscrowSecrets
deleteAllRangingKeys
allPairedWatchDeviceIDs
deleteRemoteLongTermKeyForDeviceID:modern:tombstone:
clearRemoteLTKs
ltkExistsForKeyDevice:updateLTKs:
anyLongTermKeyForDeviceID:
removePairingRecordForWatchID:
setRemoteLTKs:
writeToFile:options:error:
loadRemoteLTKs
fileExistsAtPath:isDirectory:
initWithContentsOfFile:options:error:
autoUnlockFolderPath
watchIDsToPairingRecords
saveWatchIDsToPairingRecords
watchIDsToPairingRecordsStorageFilePath
loadLegacyWatchIDToCompanionIDMapping
deleteLegacyWatchToCompanionIDs
watchIDToCompanionIDStorageFilePath
migrateLegacyCompanionIDs:
loadCompanionIDs
deleteLegacyCompanionIDs
companionIDStorageFilePath
baseLocalKeysDictionaryForDevice:type:
keychainDataForQuery:
hasSecret
secret
setSecret:
storeKeychainItemWithAttributeDictionary:updateDictionary:addDictionary:
baseLocalKeysDictionary
storeLongTermKey:forDeviceID:name:modern:
attestedDictionaryForDevice:
ltkInfoForDeviceID:modern:attested:
baseRangingDictionary
storeRangingKey:forDeviceID:
setCachedSessionKeys:
deriveKeyFromSharedSecret:
baseRangingDictionaryForDevice:
removeDeviceIDMissingSessionKey:
baseDictionary
clearAllDeviceIDsMissingSessionKeys
useKeychainForLTKSyncing
TB,R,N
handleManagementChanged:
aksPairingSessionForDeviceID:originator:errorCode:wantsAttestation:
aksRegistrationSessionForDeviceID:originator:
aksAuthSessionForDeviceID:originator:
aksAuthorizationSessionForDeviceID:originator:
canCreateTokenSessionForDeviceID:
deviceIDsMissingSessionKey
ltkHashForLocalLTK
updateLocalLTKForSignout
ltkSyncStatusForDeviceID:hash:modern:
generateLocalAttestedLTKIfNeccessaryWithCompletion:
resignRemoteLTKForDeviceID:
signAndStoreRemoteLTK:forDeviceID:
allRemoteLTKData
hashMatchesAnyRemoteLTKForDeviceID:ltkHash:isPreferred:
fetchLTKsFromCompanion:
sendLTKResponseWithPayload:viewState:needsUnlock:currentlySyncing:
ltksForRequest:
keychainNeedsSyncingForRequest:
takeMobileKeybagAssertion
restartKeybagAssertionTimer
restartWaitingForUnlockTimer
invalidateWaitingForUnlockTimer
localDeviceEnabledAsKey
localDeviceEnabledAsKeyForMac
deviceEnabledAsKey:
deleteEscrowSecretForAllDevices
deleteEscrowSecretForPhones
disablePairingForAllKeyDevices
ltkExistsForKeyDevice:
reloadPairingRecordsIfNeeded
setCompanionID:forWatchID:
removeCompanionIDForWatchID:
setPairingID:forWatchID:
removePairingIDForWatchID:
migrateLegacyWatchIDToCompanionIDs
storeEscrowSecret:pairingID:deviceID:
escrowSecretCreationDateForDeviceID:
longTermKeyIDForDeviceID:
deleteLocalAttestedLTK
sessionKeyExistsForDeviceID:
wristDetectDisabled
setWristDetectDisabled:
autoUnlockDisabledDueToManagement
waitingForUnlock
setT208Machine:
cachedSessions
setCachedSessions:
setWatchIDsToPairingRecords:
setPreferredRemoteLTKForDeviceID:
setRemoteLTKStorageFilePath:
setWatchIDsToPairingRecordsStorageFilePath:
setCompanionIDStorageFilePath:
setWatchIDToCompanionIDStorageFilePath:
cachedSessionKeysLock
_wristDetectDisabled
_autoUnlockDisabledDueToManagement
_waitingForUnlock
_t208Machine
_cachedSessionKeysLock
_localDeviceID
_localAttestedLTK
_localLTK
_keybagAssertionTimer
_waitingForUnlockTimer
_remoteLTKs
_cachedSessions
_cachedSessionKeys
_watchIDsToPairingRecords
_preferredRemoteLTKForDeviceID
_watchIDsMissingSessionKey
_remoteLTKStorageFilePath
_watchIDsToPairingRecordsStorageFilePath
_companionIDStorageFilePath
_watchIDToCompanionIDStorageFilePath
TB,N,V_autoUnlockDisabledDueToManagement
TB,N,V_waitingForUnlock
TB,N,V_t208Machine
T@"NSData",C,N,V_localLTK
T@"NSData",C,N,V_localAttestedLTK
T@"NSString",C,N,V_altDSID
T@"NSObject<OS_dispatch_source>",&,V_keybagAssertionTimer
T@"NSObject<OS_dispatch_source>",&,V_waitingForUnlockTimer
T@"NSMutableDictionary",&,N,V_remoteLTKs
T@"NSMutableDictionary",&,N,V_cachedSessions
T@"NSMutableDictionary",&,N,V_cachedSessionKeys
T@"NSMutableDictionary",&,N,V_watchIDsToPairingRecords
T@"NSMutableDictionary",&,N,V_preferredRemoteLTKForDeviceID
T@"NSMutableArray",&,N,V_watchIDsMissingSessionKey
TB,N,V_wristDetectDisabled
T@"NSString",C,N,V_remoteLTKStorageFilePath
T@"NSString",C,N,V_watchIDsToPairingRecordsStorageFilePath
T@"NSString",C,N,V_companionIDStorageFilePath
T@"NSString",C,N,V_watchIDToCompanionIDStorageFilePath
T{os_unfair_lock_s=I},R,N,V_cachedSessionKeysLock
T@"NSString",C,N,V_localDeviceID
updateMetrics:withNode:
unsignedIntegerValue
realNameToMetricsMap
setRealNameToMetricsMap:
_realNameToMetricsMap
T@"NSMutableDictionary",&,N,V_realNameToMetricsMap
MIMEType
JSONObjectWithData:options:error:
_responseInfo
_statusCode
T@"NSDictionary",R,N,V_responseInfo
Tq,R,N,V_statusCode
setHasUnlockEnabled:
hasUnlockEnabled
setHasPasscodeEnabled:
hasPasscodeEnabled
passcodeEnabled
_passcodeEnabled
TB,N,V_passcodeEnabled
arrayWithObject:
setMappedContactIdentifier:relatedContactIdentifiers:
mappedContactIdentifierForContactIdentifier:
availableNodes
setAvailableNodes:
coalescedNodes
originalNodes
setOriginalNodes:
contactIdentifierMap
setContactIdentifierMap:
_availableNodes
_coalescedNodes
T@"NSMutableDictionary",&,N,V_originalNodes
T@"NSMutableDictionary",&,N,V_contactIdentifierMap
T@"NSArray",&,V_availableNodes
T@"NSArray",R,V_coalescedNodes
clearPersistedKeyRequests
setUpHSA2Monitor
setUpRapport
setUpIDSServices
setUpHandoffPreferenceMonitor
primaryAppleIDIsHSA2
setPrimaryAppleIDChangedHandler:
createRapportClientWithDestinationDevice:
handleEncryptionKeyRequestRapport:options:responseHandler:
registerRequestID:options:handler:
handlePayloadRequestRapport:options:responseHandler:
initWithService:
handleEncryptionKeyRequestProtobuf:service:account:fromID:context:
setProtobufAction:forIncomingRequestsOfType:
handleEncryptionKeyReplyRequestProtobuf:service:account:fromID:context:
setProtobufAction:forIncomingResponsesOfType:
addDelegate:queue:
handlePayloadRequestProtobuf:service:account:fromID:context:
handlePayloadReplyProtobuf:service:account:fromID:context:
handleNewAdvertisementWithpayloadRequestProtobuf:service:account:fromID:context:
devices
uniqueIDOverride
userInfo
completionHandler
requestCreatedDate
timeIntervalSinceNow
logDashboardHandoffRequestViaTransportLinkType:type:success:rtt:
error
setError:
allValues
deviceIdentifier
setCompletionHandler:
attemptInProgress
setRequestIdentifier:
setDeviceIdentifier:
setPreviousKeyIdentifier:
requestTimedOut:
requestIdentifier
timerWithTimeInterval:target:selector:userInfo:repeats:
setTimeoutTimer:
setTimeoutTimeInterval:
timeoutTimer
addTimer:forMode:
previousKeyIdentifier
timeoutTimeInterval
setRequestCreatedDate:
sendIDSEncryptionKeyRequest:withRequestRecord:desiredTimeout:
sendRapportEncryptionKeyRequest:withRequestRecord:completionHandler:
activeDevices
predicateWithFormat:
filteredArrayUsingPredicate:
name
linkClient
setLinkClient:
handleEncryptionKeyReplyRapport:options:forRequestRecord:fromDevice:
sendRequestID:request:destinationID:options:responseHandler:
messageWithIdentifier:didSendWithSuccess:error:
protobufDataFromRequest:
idsDeviceWithUniqueID:onService:
nsuuid
devicesForBTUUID:
dataFromUUID:
numberWithDouble:
initWithProtobufData:type:isResponse:
sendProtobuf:toDestinations:priority:options:identifier:error:
setWithObject:
service:account:identifier:didSendWithSuccess:error:
setAdvertisementPayload:
setCommand:
sendIDSActivityPayloadRequest:withRequestRecord:desiredTimeout:
sendRapportActivityPayloadRequest:withRequestRecord:completionHandler:
advertisementPayload
handlePayloadReplyRapport:options:forRequestRecord:fromDevice:
setDecryptionKeyDataRepresentation:forDeviceIdentifier:
handleEncyptionKeyRequest:fromIDSDevice:withRequestIdentifier:transportType:completionHandler:
deviceForFromID:
data
requestFromProtobufData:
outgoingResponseIdentifier
sendEncryptionKeyReplyRequestToDevice:reply:requestIdentifier:
idsDeviceIdentifier
handleEncryptionKeyReply:forRequestRecord:fromDevice:transportLinkType:
incomingResponseIdentifier
activityPayloadReplySuccess:
messageIdentifier
handlePayloadRequest:fromIDSDevice:withRequestIdentifier:transportType:completionHandler:
sendIDSActivityPayloadReply:withReplyRecord:
setMessageIdentifier:
setActivityIdentifier:
activityIdentifier
handlePayloadReply:forRequestRecord:fromDevice:transportLinkType:
fire
getUUIDBytes:
controlFlags
setControlFlags:
setDestinationDevice:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
removeLastObject
insertObject:atIndex:
handleNewAdvertisementDevice:data:receivedViaScanning:withSuccessHandler:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
sendEncryptionKeyRequestToDeviceIdentifier:previousKeyIdentifier:completionHandler:
sendActivityPayloadRequestToDeviceIdentifier:withAdvertisementPayload:command:timeout:completionHandler:
service:account:incomingMessage:fromID:
_activityService
_encryptionService
_rapportDiscoveryClient
_restrictionsDisabled
_advertiser
_scanner
_hsa2Enabled
_uniqueIDToKeyReplyDate
_messageIdentifierToKeyRequestRecords
_messageIdentifierToReplyRecords
_messageIdentifierToRequestRecords
_systemPreferenceChangedToken
_cachedActivityPayloadsForDemo
bundleProxyForiWorkURL:
isiWorkURL
iWorkApplicationName
capitalizedString
applicationProxyForIdentifier:
iWorkDocumentName
documentName
_appName
_sendCreateCertificateRequest
_sendFetchCertificateRequest
_responseHandlerWithIdentity:error:
_scheduleFetchCertificateTaskWithDelay:
_handleCertificateCreateResponseError:
_scheduleFetchRetryWithDelay:
_scheduleCreateRetryWithDelay:
_handleReceivedCertificate
_handleCertificateFetchResponseError:
initWithAppleID:altDSID:
setAccountIdentifier:
setCertificateExpirationDate:
setCertificatePersistentReference:
setIntermediateCertificateExpirationDate:
setIntermediateCertificatePersistentReference:
setLastValidationAttemptDate:
setLastValidationDate:
setModificationDate:
setSerialNumber:
_handleCertificate:intermediateCertificate:withTrustResult:error:
_handleCertificateCreateResponseWithInfo:error:
responseHandler
_handleCreateTimerFired
_handleFetchTimerFired
_scheduleCreateCertificateTaskWithDelay:
_handleKeyPairAvailable
_handleCertificateFetchResponseWithInfo:error:
certificateTokenHandler
_activated
_altDSID
_certificateCreateTask
_certificateExpirationDate
_certificateFetchTask
_certificatePEM
_certificateSerialNumber
_certificateStatus
_certificateToken
_createRetryCount
_createDelayTimer
_csrPEM
_fetchDelayTimer
_fetchRetryCount
_intermediateCertificatePEM
_invalidated
_privateKey
_privateKeyPersistentReference
_publicKey
_responseHandler
_certificateTokenHandler
T@"NSString",R,N,V_appleID
T@?,C,N,V_responseHandler
T@?,C,N,V_certificateTokenHandler
initWithTransfer:bundleIdentifier:
bundleProxy
bundleIdentifier
isJustLinks
candidateIdentifiers
transfer
bundleProxyFromCandidateIdentifiers:handlesURL:
itemsDescription
alertMessageLocalizedKeyForTypeDicts:
localizedStringWithFormat:
singleItemActionTitle
suitableContentsDescription
ejectMountPoints:useAssistant:
notifyClientAboutEject:
eject
flags
_node
_mountedCount
_ejectedCount
_flags
_protocol
T@"NSNumber",C,V_flags
T@"NSString",C,V_protocol
T@"<SDNetworkEjecterDelegate>",W,V_delegate
init
stop
dealloc
allKeys
objectForKeyedSubscript:
isEqual:
kind
isEntitled
connection
numberWithInt:
setIsEntitled:
childrenForNode:
xpcArrayForSFNodeArray:
sidebarChildren
xpcObjectForSFOperationResults:
UUID
UUIDString
initWithKind:
setProperty:forKey:
setObject:forKeyedSubscript:
addObject:
setObjectKey:
setDelegate:
resume
isEqualToString:
canAccessAirDropSettings:
stringFromXPCObject:
initWithKind:rootNode:
setConnection:
setBoostMessage:
openNode:forProtocol:flags:
closeNode:
addNode:
removeNode:
setMode:
setOptions:
stringWithUTF8String:
invalidate
objectKey
removeObject:
handleBrowserMessage:forConnection:
handleOperationMessage:forConnection:
sharedMonitor
deviceInformation
sharedBrowser
description
dataWithPropertyList:format:options:error:
length
bytes
_disableAppSSO
sharedSession
handleNewConnection:
sharedAgent
sharedAdvertiser
sharedScanner
sharedEncryptionManager
sharedPayloadManager
isAirDropAvailable
sharedManager
setDispatchQueue:
activate
stateCapture
_performMigrations
removeAllObjects
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
networkBrowser:nodesChangedForParent:protocol:error:
networkOperation:event:withResults:
arrayFromXPCObject:
numberFromXPCObject:
.cxx_destruct
_activeObjects
_activityAdvertiser
_activityScanner
_airdropManager
_sharesheetManager
_autoUnlockSessionManager
_encryptionManager
_nearbyIDSAgent
_exportedOperations
_pairedDeviceAgent
_listener
_payloadManager
_unlockKeyManager
_unlockLockManager
_stateHandle
_xpcServer
_helperConnection
restartBrowser:
notifyClient
updateBrowserState
airDropPublished:
lockStatusChanged:
screenStatusChanged:
contactsChanged:
linkStateChanged:
getInterface:
clearCache
cancelIdentityQueries
cancelAirDropRequests
logAirDropSessionInfo
removeInvalidNodes:
updateSecondaryNameForNodes:
updateServerCacheIfNeeded
startRecordQuery:type:domain:recordType:interface:
queryKey:type:domain:recordType:
queryRecordTimerCallBack:
addQueryToDictionary:name:type:domain:recordType:
cleanupRecordQueryForKey:
cleanupRecordQuery:type:domain:recordType:
ejectDisksIfNeeded:diskNames:
cleanupAirDropRequest:
copyNodeForService:
colorArrayFromEcolor:icolor:
cleanupRecordQueryForNetService:recordType:
personID
setDeviceIRKData:
setEdPKData:
setIdsDeviceID:
addOrUpdateIdentity:completion:
secTrustRef
logAirDropDiscoveryInfoForNode:
updateFriendRPIdentityForAccountID:withAirDropClientInfo:
startIdentityQueryForNode:
preferVibrantIcons
startAirDropRequestForNode:
clearCacheAndNotify
handleIdentity:withQueryID:emailOrPhone:error:
restartAfterDelay:
validAirDropInterface:
addService:type:domain:interface:
removeService:type:domain:
notifyClientIfDone:
initWithDomain:type:name:
initWithBytes:length:encoding:
serviceFromServiceName:
valueForKey:inTXTRecord:withLength:
deviceInfoChanged:model:ecolor:icolor:osxvers:
commentChanged:comment:
personInfoChanged:flags:atag:cname:phash:ehash:nhash:
systemInfoChanged:diskInfo:
processTXTRecordUpdate:rdlen:rdata:
dateWithTimeIntervalSinceNow:
setFireDate:
checkDiscoveryEntitlement
startConnectionlessAdvertisingWithData:
stopConnectionlessAdvertising
advertiseHashes
copyNodeForName:
startPictureQuery:
handleBrowseCallBack:interface:error:name:type:domain:
odiskMountPoints:
handleQueryCallBack:error:fullname:rrtype:rdlen:rdata:
xpcConnection
_isAirDrop
_isNetBIOS
_isWorkgroups
_maxServices
_domain
_startCalled
_isFinder
_awdlIndex
_browserID
_restartTimer
_transfersInitiated
_transfersCompleted
_firstTime
_discoveredPeers
_servers
_dnsQueries
_serverCache
_airDropRequests
_identityQueries
_types
T@"NSArray",R,C,V_types
T@"NSArray",R,C
T@"NSString",R,C,V_domain
T@"<SDBonjourBrowserDelegate>",W,V_delegate
T@"NSObject<OS_xpc_object>",&,V_xpcConnection
Ti,V_transfersInitiated
Ti,V_transfersCompleted
TB,R,V_startCalled
onQueue_start
sendStepData:type:errorCode:
setStepData:
stepData
handleStepData:
_locallyGenerated
locallyGenerated
TB,N,GisLocallyGenerated,V_locallyGenerated
isCompressor
filePathURL
URLByResolvingSymlinksInPath
timeRemaining:timeNow:
lastPathComponent
absoluteURLIfTopLevelFile:isDirectory:base:
notifyProgress:force:
fileComplete
fixedRelativePath:
quarantineFile:
pathExistsInPlaceholderInfo:
validFileName:
relativePath
removeFileFromPlaceholderList:
copyReverseParentChain:base:
addFile:withBase:toBom:
addParentChain:file:base:
addFileURLToBom:file:base:propertyKeys:topLevel:
totalFileSize:
URLFromFileInfo:
URLByAppendingPathComponent:
conflictResolvedURL:
moveFile:toDestination:
executeReadWithAdaptiveCompression
executeWriteWithAdaptiveCompression
isDecompressor
createPlaceholderFiles
bomCopierCopy:destination:options:
moveFilesToDestination
removeUnusedPlaceholderFiles
allowProgressCircleToComplete
temporaryBomPath
initBomWithFiles
initWithReadStream:writeStream:
startBomCopy:destination:options:
bomCopierCopyFileFinished:type:size:operation:
bomCopierFatalFileError:
bomCopierFatalError:
prettyNameBasedOnUUID:
sourceFiles
senderName
unzipCompressionType
skipReadableCheckFiles
disableAdaptiveCompressionForZipping
_usePKZip
_fileCount
_totalBytes
_bomArchive
_tempFolder
_bomPath
_bomCopier
_lastBytesCopied
_totalBytesCopied
_writeStream
_timeStarted
_lastProgress
_topLevelFiles
_placeholderFiles
_orderedRelativePaths
_relativePathToFile
_progressTimer
_alternateNames
_compressionEngine
_creationCompletionHandler
_disableAdaptiveCompressionForZipping
_sourceFiles
_senderName
_unzipCompressionType
_zipCompressionType
_skipReadableCheckFiles
T@"NSURL",C
T@"NSArray",C,V_sourceFiles
T@"NSString",C,V_senderName
T@"NSString",C,V_unzipCompressionType
T@"NSString",R,C,V_zipCompressionType
T@"NSSet",C,V_skipReadableCheckFiles
TB,V_disableAdaptiveCompressionForZipping
T@"<SDAirDropFileZipperDelegate>",W,V_delegate
initWithMachServiceName:
_setQueue:
sharedClient
sharedSetupAgent
_stateDump
initWithServer:xpcConnection:
autoFillDismissUserNotification
autoFillPairingSucceeded:completion:
autoFillPromptForPIN:throttleSeconds:
deviceDiscoveryFoundDevice:
deviceDiscoveryLostDevice:
deviceDiscoveryDeviceChanged:changes:
deviceDiscoveryScanStateChanged:
proximityClientDeviceEnteredImmediate:
proximityClientDeviceExitedImmediate:
proximityClientDeviceEnteredNearby:
proximityClientDeviceExitedNearby:
proximityClientDeviceWasDismissedHandler:reason:
proximityClientDeviceWasSelectedHandler:
proximityClientDeviceWillTriggerHandler:
proximityClientDeviceDidUntriggerHandler:
proximityClientDeviceUpdated:rssi:state:
remoteInteractionSessionRemoteTextEvent:
remoteInteractionSessionTextSessionDidBegin:
remoteInteractionSessionTextSessionDidEnd:
remoteInteractionSessionTextSessionDidChange:
serviceError:
servicePeerDisconnected:error:
serviceReceivedEvent:
serviceReceivedFrameType:data:peer:
serviceReceivedRequest:
serviceReceivedResponse:
sessionBluetoothStateChanged:
sessionError:
sessionReceivedEvent:
sessionReceivedFrameType:data:
sessionReceivedRequest:
sessionReceivedResponse:
userNotificationError:
userNotificationResponse:
userNotificationTextResponse:
userNotificationDictionaryResponse:
accountForAppleID:withCompletion:
myAccountWithCompletion:
statusInfoWithCompletion:
activateAssertionWithIdentifier:
activityStateWithCompletion:
appleIDInfoWithCompletion:
clearXPCHelperImageCacheWithCompletion:
contactIDForEmailHash:phoneHash:completion:
displayNameForEmailHash:phoneHash:completion:
displayStringForContactIdentifier:deviceIdentifier:completion:
findContact:skipIfContactBlocked:completion:
getDeviceAssets:completion:
getPeopleSuggestions:completion:
hashManagerControl:completion:
openSetupURL:completion:
preheatXPCConnection
preventExitForLocaleReason:
reenableProxCardType:completion:
repairDevice:flags:completion:
retriggerProximityPairing:
retriggerProximitySetup:
setAudioRoutingScore:completion:
setupDevice:homeIdentifier:completion:
showDevicePickerWithInfo:completion:
testContinuityKeyboardBegin:
triggerHomeKitDeviceDetectedWithURL:completion:
triggerProximityAutoFillDetectedWithURL:completion:
wifiPasswordSharingAvailabilityWithCompletion:
startProxCardTransactionWithOptions:completion:
coordinatedAlertsRequestStart:completion:
coordinatedAlertsRequestFinish
deviceDiscoveryActivate:completion:
deviceDiscoveryUpdate:
deviceDiscoveryFastScanTrigger:
deviceDiscoveryFastScanCancel:
deviceDiscoveryTriggerEnhancedDiscovery:
bluetoothUserInteraction
diagnosticBLEModeWithCompletion:
diagnosticControl:completion:
diagnosticLogControl:completion:
diagnosticMock:device:completion:
diagnosticMockStart:
diagnosticMockStop:
diagnosticShow:completion:
diagnosticUnlockTestClientWithDevice:
diagnosticUnlockTestServer
nfcTagReaderUIActivateWithEndpoint:params:completion:
proximityClientActivate:completion:
proximityClientUpdate:
proximityClientDismissContentForDevice:completion:
proximityClientProvideContent:forDevice:force:completion:
proximityClientSuppressDevice:completion:
proximityClientStopSuppressingDevice:completion:
proximityClientUpdateContent:forDevice:completion:
proximityClientRequestScannerTimerReset
autoFillHelperActivate:completion:
autoFillHelperDidPickUsername:password:error:
autoFillHelperTryPIN:
autoFillHelperUserNotificationDidActivate:
autoFillHelperUserNotificationDidDismiss:
remoteInteractionSessionActivate:completion:
remoteInteractionSessionSendPayload:
serviceActivate:completion:
serviceUpdate:
serviceSendEvent:
serviceSendFrameType:data:peer:
serviceSendRequest:
serviceSendResponse:
sessionActivate:completion:
sessionSendEvent:
sessionSendFrameType:data:
sessionSendRequest:
sessionSendResponse:
userNotificationPresent:
initWithObjects:
setExportedInterface:
setExportedObject:
_connectionInvalidated:
setRemoteObjectInterface:
connectionInvalidated
countForObject:
_stateDumpString
stateAppendXPCConnections:
listener:shouldAcceptNewConnection:
_appleIDAgent
_autoFillAgent
_assertions
_contactsQueue
_nearbyAgent
_prefNotifyToken
_riAgent
_rtiClient
_proxHandoffAgent
_setupAgent
_xpcConnections
_xpcInterfaceClient
_xpcInterfaceServer
_xpcListener
_invalidateAssertions
coordinatedAlertRequestCancel:
diagnosticBLEModeStop:
deviceDiscoveryRequestStop:
proximityClientStop:
sessionStop:
serviceStop:
unlockStopTestClient
cuValueForEntitlementNoCache:
_entitled:state:label:
remoteObjectProxy
setDismissUserNotificationHandler:
setPairingResponseHandler:
setPromptForPINHandler:
helperStart:
helper:didPickUsername:password:error:
helper:tryPIN:
helper:userNotificationDidActivate:
helper:userNotificationDidDismiss:
setPreventNotifications:
setPreventRepair:
setEnhancedDiscovery:
contactIdentifier
emailAddress
setContactIdentifier:
stringByReplacingOccurrencesOfString:withString:
setEmailAddress:
phoneNumber
contactIDs
_getPeopleInfo:completion:
maxPeople
_getPeopleSuggestions:completion:
setContactID:
setMaximumNumberOfSuggestions:
initWithConfiguration:
rankedGlobalSuggestionsFromContext:contactsOnly:
recipients
senderHandle
setSendersKnownAlias:
setHandles:
rebuildDB
fileURLWithPath:
dumpDBAtFileURL:
path
openSetupURL:
reenableProxCardType:
setAudioRoutingScore:
handleInputDidBeginWithFlags:sessionInfo:
handleInputDidEndWithFlags:sessionInfo:
uiShowing
coordinatedAlertRequestStart:
coordinatedAlertRequestFinish:
setDeviceLostHandler:
setScanStateChangedHandler:
deviceDiscoveryRequestStart:
changeFlags
discoveryFlags
deviceFilter
fastScanMode
setFastScanMode:
overrideScreenOff
setOverrideScreenOff:
rssiThreshold
setRssiThreshold:
scanRate
trackPeers
setTrackPeers:
deviceDiscoveryRequestUpdate:
deviceDiscoveryFastScanTrigger:reason:
deviceDiscoveryFastScanCancel:reason:
deviceDiscoveryTriggerEnhancedDiscovery:reason:
diagnosticBLEModeStart:
substringFromIndex:
testUI:
testRemote:
testService:
testKeychain:
caseInsensitiveCompare:
sharedNearbyPipe
testPipePing
setHotspotInfo:
testUIAppleTVSetup:
testSetupUIB238:
testHomeKitDeviceDetected:
testNFCUI:
testPairUI:
testPINShow:
testPINHide
testSetupUIPasswordSharing:
testRepairUI:
testSetupUIWHA:
testSetupUIWatch:
testProxCardKit:
testPost:
diagnosticMockChanged:
diagnosticMockFound:
diagnosticMockLost:
idsDevicesAppendDescription:
bleProximityInfo
unlockStartTestClientWithDevice:
unlockStartTestServer
setDeviceEnteredImmediateHandler:
setDeviceExitedImmediateHandler:
setDeviceEnteredNearbyHandler:
setDeviceExitedNearbyHandler:
setDeviceWasDismissedHandler:
setDeviceWasDismissedHandlerEx:
setDeviceWasSelectedHandler:
setDeviceWillTriggerHandler:
setDeviceDidUntriggerHandler:
wantsUpdates
setDeviceUpdateHandler:
proximityClientStart:
shouldAdvertise
setShouldAdvertise:
proximityClient:dismissContentForDevice:
proximityClient:provideContent:forDevice:force:
proximityClient:suppressDevice:
proximityClient:stopSuppressingDevice:
proximityClient:updateContent:forDevice:
proximityClientRequestScannerTimerReset:
setRemoteTextEventHandler:
setTextSessionDidBegin:
setTextSessionDidEnd:
setTextSessionDidChange:
sessionStart:
sendPayload:
_entitledService:state:
setErrorHandler:
setEventMessageHandler:
setPeerDisconnectedHandler:
setReceivedFramePeerHandler:
setRequestMessageHandler:
setResponseMessageInternalHandler:
setSendFramePeerHandler:
serviceStart:
updateWithService:
serviceSendEvent:service:
serviceType
bleNearbyInfoSendFrameType:serviceType:data:peer:isSession:
serviceSendRequest:service:
serviceSendResponse:service:
serviceUUID
setBluetoothStateChangedHandler:
setReceivedFrameHandler:
setSendFrameHandler:
setSession:
sessionSendEvent:session:
peerDevice
sessionSendRequest:session:
sessionSendResponse:session:
_afsHelper
_caRequest
_ddRequest
_diagnosticBLEModeStarted
_entitledBluetoothUserInteraction
_entitledClient
_entitledCoordinatedAlerts
_entitledDeviceDiscovery
_entitledDiagnostics
_entitledProximityClient
_entitledRemoteInteractionSession
_entitledService
_entitledSession
_notification
_preventExitForLocaleReason
_proxClient
_riSession
_service
_session
_server
_unlockTestClientStarted
_xpcCnx
rangeOfString:options:
initWithUUIDString:
keyData
keyIdentifier
dateCreated
numberWithUnsignedShort:
initWithDictRepresentation:
dictRepresentation
setKeyIdentifier:
setDateCreated:
setLastUsedCounter:
setKeyData:
_validKey
_lastUsedCounter
_keyIdentifier
_dateCreated
_keyData
T@"NSUUID",&,N,V_keyIdentifier
T@"NSDate",&,N,V_dateCreated
T@"NSMutableData",&,N,V_keyData
TS,N,V_lastUsedCounter
validKey
TB,N,GisValidKey,V_validKey
T@"NSDictionary",R,N
newEncryptionKey
prepareForNewEncryptionRequest
getTagWhileEncryptingBytesInPlace:counterValue:forAdvertisementWithVersion:
getResultWhileDecryptingBytesInPlace:andCounter:withTag:version:
valueForKeyPath:
encryptionKey
deleteAllEncryptionAndDecryptionKeys
unwrappedDataRepresentationForKey:
saveEncryptionKeyDataRepresentation:
loadEncryptionKeyDataRepresentation
propertyListWithData:options:format:error:
numberWithInteger:
generateNewEncryptionKey
timeIntervalSinceDate:
saveDecryptionKeyDataRepresentation:forDeviceIdentifier:
loadDecryptionKeyDataRepresentationForDeviceIdentifier:
newDecryptionKeyFromDataRepresentation:
loadWrappingKeyData
baseDictEncryptionKey
baseDictDecryptionKeyForDeviceIdentifier:
baseDict
baseDictWrappingKey
addEntriesFromDictionary:
addObjectsFromArray:
hasPrefix:
testWrappingKeychainItem
loadKeyDataRepresentationWithBaseDict:
saveKeyDataRepresentation:withBaseDict:
bumpEncryptionKeyCounterValue
setDecryptionKey:forDeviceIdentifier:
decryptionKeyForDeviceIdentifier:
dataRepresentationForCurrentEncryptionKey
_deviceIdentifierToDecryptionKey
_encryptionKey
_wrappingKey
_shouldRefreshWrappingKey
T@"SDActivityEncryptionKey",R,N
T@"NSData",R,N
applySSLSettings:
currentRunLoop
startOpenTimer
usingMessages
logTransfer
handleBytesForStream
openTimerFired:
propertyForKey:
handleOpenedStream:
handleBytesAvailable
handleSpaceAvailable
invalidateOpenTimer
setTCPProperties:
checkedCert
setCheckedCert:
evaluateCert
handleBytesForMessage
handleSpaceForMessage
handleSpaceForStream
shouldReadNetwork
messageWithData:
headerWithLength:
handleHeaderRead
handleMessageRead
parseHeader:
trimHeader:
resetReadState
handleMessageWritten:
sendMessage:withErrorHandler:
inputStream
setInputStream:
outputStream
setOutputStream:
registeredStreams
setRegisteredStreams:
bufferSpaceAvailable
setBufferSpaceAvailable:
openTimer
setOpenTimer:
isClient
setClient:
setStreamError:
outputStreamData
setOutputStreamData:
byteIndex
setByteIndex:
outMessage
setOutMessage:
messageQueue
setMessageQueue:
handlers
setHandlers:
bytesRead
setBytesRead:
inMessageLength
setInMessageLength:
inMessage
setInMessage:
inData
setInData:
inputState
setInputState:
loggedTransfer
setLoggedTransfer:
wroteToNetwork
setWroteToNetwork:
readFromNetwork
setReadFromNetwork:
timeOpened
setTimeOpened:
timeToOpen
setTimeToOpen:
_shouldReadNetwork
_usingMessages
_checkedCert
_registeredStreams
_bufferSpaceAvailable
_client
_loggedTransfer
_inMessageLength
_inputStream
_outputStream
_openTimer
_streamError
_outputStreamData
_byteIndex
_outMessage
_messageQueue
_handlers
_bytesRead
_inMessage
_inData
_inputState
_wroteToNetwork
_readFromNetwork
_timeOpened
_timeToOpen
TB,V_checkedCert
TB,V_registeredStreams
TB,V_bufferSpaceAvailable
T@"NSTimer",&,V_openTimer
client
TB,GisClient,V_client
T@"NSError",&,V_streamError
T@"NSInputStream",&,V_inputStream
T@"NSOutputStream",&,V_outputStream
T@"NSMutableData",&,V_outputStreamData
Tq,V_byteIndex
T@"NSMutableData",&,V_outMessage
T@"NSMutableArray",&,V_messageQueue
T@"NSMutableDictionary",&,V_handlers
Tq,V_bytesRead
TI,V_inMessageLength
T@"NSData",&,V_inMessage
T@"NSMutableData",&,V_inData
TQ,V_inputState
TB,V_loggedTransfer
Tq,V_wroteToNetwork
Tq,V_readFromNetwork
T@"NSDate",&,V_timeOpened
T@"NSDate",&,V_timeToOpen
TB,V_usingMessages
TB,V_shouldReadNetwork
T@"<SDStreamHandlerDelegate>",W,V_delegate
hasLtk
setHasSignout:
hasSignout
signout
_ltk
_ltkID
_signout
T@"NSData",&,N,V_ltk
T@"NSData",&,N,V_ltkID
TB,N,V_signout
initWithURL:
setHTTPShouldHandleCookies:
currentDevice
serverFriendlyDescription
_homePodEnsureStarted:completion:
_riServerEnsureStarted:completion:
_watchEnsureStarted:completion:
initWithBundleIdentifier:
setWantsNotificationResponsesDelivered
requestAuthorizationWithOptions:completionHandler:
getNotificationSettingsWithCompletionHandler:
_addRequestWithID:content:type:isHomePodMini:
requestWithIdentifier:content:trigger:
setAttachments:
addNotificationRequest:withCompletionHandler:
attachmentWithIdentifier:URL:options:error:
notification
actionIdentifier
riServerRemove:
clientUserDidTapNotification:
setBody:
setCategoryIdentifier:
setShouldHideTime:
setShouldHideDate:
setShouldIgnoreDoNotDisturb:
soundWithAlertType:
setSound:
setSubtitle:
setShouldBackgroundDefaultAction:
setShouldSuppressDefaultAction:
_riServerPostIfNeeded:backgroundAction:
riServerContentForDevice:backgroundAction:
_addRequestWithID:content:type:
_riServerRemove:
removeDeliveredNotificationsWithIdentifiers:
_riServerRemoveAll
removeAllDeliveredNotifications
_riServerUpdate:info:
prompt
title
replaceContentForRequestWithIdentifier:replacementContent:completionHandler:
_riServerUpdate:rtiData:
payloadWithData:version:
documentTraits
_tvAutoFillPostIfNeeded:
_tvAutoFillRemove:
_tvAutoFillRemoveAll
iconForApplicationIdentifier:
setIcon:
_watchKeyboardPostIfNeeded:
watchKeyboardContentForDevice:
_watchKeyboardRemove:
_watchKeyboardRemoveAll
_watchKeyboardUpdate:rtiData:
notificationType
body
header
homePodType
iconForSystemImageNamed:
setTitle:
attachmentURL
attachmentFromURL:
_homePodHandoffPostIfNeeded:info:
homePodHandoffContentForDevice:info:
_homePodHandoffRemove:reason:
removePendingNotificationRequestsWithIdentifiers:
notificationDidDismiss:reason:
_homePodHandoffRemoveAll
_homePodHandoffUpdateIfNeeded:info:
setAttachmentURL:
homePodHandoffUpdateIfNeeded:info:
userDidTapNotification:
homePodHandoffRemove:reason:
_homePodHandleResponse:completion:
_tvHandleResponse:completion:
_watchHandleResponse:completion:
testAutofillPost
testAutoFillRemove
testHandoffPost
testKeyboardPost
testKeyboardPostAutoFill
testKeyboardRemove
testKeyboardUpdate
testWatchKeyboard
testWatchKeyboardAutoFill
testPostBasic
setNotificationType:
setHeader:
homePodHandoffPostIfNeeded:info:
riServerPostIfNeeded:backgroundAction:
setDeviceActionType:
setPrompt:
riServerUpdate:info:
watchKeyboardPostIfNeeded:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
riServerRemoveAll
riServerUpdate:rtiData:
watchKeyboardRemove:
watchKeyboardRemoveAll
watchKeyboardUpdate:info:
_watchKeyboardUpdate:info:
watchKeyboardUpdate:rtiData:
homePodHandoffRemoveAll
_autoFillRequests
_homePodNotifCenter
_homePodMiniNotificationCenter
_homePodNotifGranted
_homePodRequests
_tvKeyboardRequests
_tvNotifCenter
_tvNotifGranted
_watchKeyboardRequests
_watchNotifCenter
_watchNotifGranted
T@"NSSet",R,C,N
authorizationStatus
_browser
T@"NSString",R,C,V_workgroup
T@"<SDWindowsBrowserDelegate>",W,V_delegate
senderBundleID
canHandleTransferRegardlessOfBundleID
migrateOldKeysIfNeeded
saveLongTermKeys
deletePersistedLongTermKeys
loadLongTermKeys
longTermKeyStorageFilePath
writeToURL:options:error:
setResourceValue:forKey:error:
checkForBackupExclusion:
validateKeybagUUID
legacyLocalLongTermKey
legacyRemoteLongTermKey
unlockSessionAsOriginator:usingEscrow:escrowSecret:errorCode:
authSessionWithFlags:secret:errorCode:
stepWithAuthSession:data:authStep:errorCode:
deviceName
checkForLegacyEscrowData
legacyEscrowData
storeEscrowData:
deleteLegacyEscrowData
authSessionWithFlags:secret:
escrowSecretWithAuthSession:
confirmUnlockWithAuthSession:
escrowData
checkForEscrowData
deleteEscrowData
allKeychainItems
migrateEscrowDataIfNeeded
setLocalLongTermKey:
setRemoteLongTermKey:
keybagUUID
setKeybagUUID:
keyDeviceID
setKeyDeviceID:
setPairingStorePath:
setDeviceName:
_localLongTermKey
_remoteLongTermKey
_keybagUUID
_keyDeviceID
_pairingStorePath
_deviceName
T@"NSData",&,N,V_localLongTermKey
T@"NSData",&,N,V_remoteLongTermKey
T@"NSString",&,N,V_keybagUUID
T@"NSString",&,V_keyDeviceID
T@"NSString",C,V_pairingID
T@"NSString",C,V_pairingStorePath
T@"NSString",C,V_deviceName
initWithKeyOptions:valueOptions:capacity:
transportQueue
loadCloudPairRetries
updateBluetoothIDCache
clientQueue
clientMap
sendIdentifierToSessionID
clearAutoUnlockDeviceCache
autoUnlockDeviceCache
onqueue_bluetoothIDForIDSID:
onqueue_bluetoothDeviceIdentifiers
autoUnlockDeviceForIDSDevice:
autoUnlockDeviceForBluetoothID:cached:
onqueue_devicesWithLTKs
onqueue_autoUnlockEligibleDevices:
showOtherDevices
watchVersionEligibleForDevice:
setKeyExists:
setLastSeenWatchDate:
watchCurrentlyInList
setWatchCurrentlyInList:
setWatchExistedInUnlockList:
activityServiceHasWatch
onqueue_enabledAutoUnlockDevicesUsingCache:
stableBluetoothIdentifierForIDSDevice:
nameForDevice:
setModelIdentifier:
productName
setProductName:
setProductVersion:
setProductBuildVersion:
enclosureColor
setEnclosureColor:
setDefaultPairedDevice:
modelNameForDevice:
setMajorOSVersion:
setSupportsAlwaysDirect:
setSupportsApproveWithWatch:
supportsApproveWithWatch
setSupportsApproveIcon:
disableEncryption
setSupportsEncryption:
setSupportsAdvertisingUnlocked:
setSupportsConnectionCache:
setSupportsHEIC:
cachedApproveBluetoothIDs
enabledAutoUnlockDevices
setCachedApproveBluetoothIDs:
isEqualToSet:
showIDInName
cachedBluetoothIDToUniqueIDs
setCachedBluetoothIDToUniqueIDs:
setProxyBluetoothID:
setBluetoothCloudPaired:
accountType
registrationStatus
supportsConnectionCache
cloudPairRetryRecords
setCloudPairRetryRecords:
sendPayload:toDevice:type:sessionID:queueOneID:timeout:errorHandler:
sendPayload:toDevice:type:sessionID:queueOneID:timeout:completion:
sendPayload:toDevice:type:sessionID:queueOneID:wantsACK:timeout:completion:
primaryClient
serverReceivedTime
fromServerStorage
pairingRequestIsValidForDeviceID:messageContext:
appleWatchExisted
watchSeenRecently
T@"NSDate",R,N
removeClientForIdentifier:
bluetoothDeviceIdentifiers
pairedAutoUnlockDevice
isDeviceSatellitePaired
approveBluetoothIDs
macVersionEligibleForDeviceID:
proxyBluetoothDeviceIDForDeviceID:
connectionCacheDevices
handleSuccessfulMessageSentWithIdentifier:sessionID:
updateRetryDatesForDeviceIDs:
canRetryCloudPairingForDeviceID:useShortDate:
transferDataFromPayload:sessionID:
autoUnlockService
setIdsService:
setTransportQueue:
setClientQueue:
setClientMap:
completionHandlers
setCompletionHandlers:
setSendIdentifierToSessionID:
sendDates
setSendDates:
lastSendDate
setLastSendDate:
setAutoUnlockDeviceCache:
_lastSeenWatchDate
_watchExistedInUnlockList
_watchCurrentlyInList
_autoUnlockService
_primaryClient
_transportQueue
_clientQueue
_clientMap
_completionHandlers
_sendIdentifierToSessionID
_sendDates
_lastSendDate
_autoUnlockDeviceCache
_cloudPairRetryRecords
_cachedBluetoothIDToUniqueIDs
_cachedApproveBluetoothIDs
T@"IDSService",&,N,V_idsService
T@"NSObject<OS_dispatch_queue>",&,N,V_transportQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_clientQueue
T@"NSMapTable",&,N,V_clientMap
T@"NSMutableDictionary",&,V_completionHandlers
T@"NSMutableDictionary",&,N,V_sendIdentifierToSessionID
T@"NSMutableDictionary",&,V_sendDates
T@"NSDate",&,N,V_lastSendDate
T@"NSMutableDictionary",&,N,V_autoUnlockDeviceCache
T@"NSMutableDictionary",&,N,V_cloudPairRetryRecords
T@"NSNumber",&,N,V_watchCurrentlyInList
T@"NSDate",&,N,V_lastSeenWatchDate
T@"NSNumber",&,N,V_watchExistedInUnlockList
T@"NSMutableDictionary",&,N,V_cachedBluetoothIDToUniqueIDs
T@"NSSet",&,N,V_cachedApproveBluetoothIDs
T@"<SDAutoUnlockTransportClient>",W,V_primaryClient
workgroups
loadWindows
takeActionOnServerChanged:neighborhood:
notifyClientAboutWorkgroups
userName
setUserName:
setConnectionState:
domainsChanged:
workgroupsChanged:
connectedChanged:
odiskNodes
managedChanged:
isClassroomEnabled
classroomChanged:
sidebarPrefsChanged:
sharedRapportBrowser
airDropNodes
localizedCaseInsensitiveCompare:
subarrayWithRange:
domainChildren
workgroupChildren
printerNodes
fileNodes
addBonjourChildrenFromCache:
addConnectedChildrenFromCache:
addClassroomChildrenFromCache:
addRapportChildrenFromCache:
addFakeRangingMeasurementIfAppropriateToNodesInCache:
coalescedNodesForNewAvailableNodes:
updateWithAirDropNodes:
updateSelectionReasonInNodes:
loadBonjour
loadDomains
loadSharePoints
loadWorkgroups
loadConnected
loadManaged
loadClassroom
loadODisk
loadRapport
loadAirDrop
loadSidebarPrefsMonitor
boolValueSafe
unloadBonjour
unloadWindows
unloadDomains
unloadSharePoints
unloadWorkgroups
unloadConnected
unloadManaged
unloadClassroom
unloadODisk
unloadAirDrop
unloadRapport
unloadSidebarPrefsMonitor
logMetricsWithSessionTime:
neighborhoodNodes
addWindowsChildrenFromCache:
addManagedChildrenFromCache:
sidebarNodesFromServerNodes:nonServerCount:addAllNode:
sharePointNodes
appendAllNode:
nodesInternal:
sharePointBrowser:nodesDidChangeWithError:
onlySupportsADisk:
copyOverBonjourInfo:source:
_parent
_protocols
_combineWorkgroups
_nodeCoalescer
_airDropDiscoveryLogger
_shouldCollectNodeCoalescerMetrics
_odiskDomains
_airDropDomains
_bonjourDomains
_windowsWorkgroups
_domainBrowser
_managedBrowser
_classroomBrowser
_connectedBrowser
_workgroupBrowser
_sharePointBrowser
_rapportBrowser
_managedURLTable
_commentHashTable
_originalNodes
_contactIdentifierMap
T@"<SDNodeBrowserDelegate>",W,V_delegate
initWithAccountIdentifier:emailOrPhone:
accountIdentifier
_accountIdentifier
_emailOrPhone
T@"NSString",R,N,V_accountIdentifier
T@"NSString",R,N,V_emailOrPhone
date
array
_accountForAppleID:
altDSID
copyPrivateKey
certificateExpired
isInvalid
validationRecord
_prefsChanged
_addObservers
_ensurePushStarted
_ensurePeriodicVerifyTimerStarted
_ensureEduModeDevicesAreCleanedUp
handleAppleIDSignedInNotification
handleAppleIDSignedOutNotification
handleAppleIDChangedNotification
handleUILockStatusChangedNotification
handleKeyBagFirstUnlockNotification
_removeObservers
_ensurePushStopped
_ensurePeriodicVerifyTimerStopped
_ensureThrottledRetryTimerStopped
certificateToken
certificateTokenCreationDate
dateByAddingTimeInterval:
setCertificateToken:
setPrivateKeyPersistentReference:
setCertificateToken:privateKeyPersistentReference:forAppleID:
removeAppleID:
clearPersonInfoCache
identityForAppleID:
copyIdentity
initWithEnvironmentName:namedDelegatePort:queue:
setEnabledTopics:
requestTokenForTopic:identifier:
validStartDate
suggestedValidDuration
nextCheckDate
needsUpdate
validatedEmailHashes
validatedPhoneHashes
privateKeyPersistentReference
certificatePersistentReference
certificateExpirationDate
serialNumber
intermediateCertificatePersistentReference
intermediateCertificateExpirationDate
intermediateCertificateSerialNumber
needsRenewal
_wasOldAgentIdentityQueried
_metaInfoValueForKey:
_accountState
_keychainCleanupTag
_setMetaInfoValue:forKey:
shutdown
_handlePeriodicVerifyTimerFired
_handleThrottledRetryTimerFired
_setCurrentAppleIDIdentity:
_setCurrentAppleIDContactInfo:validationRecord:
_verifyStateWithDelay:
_updateAppleID
_clearAccount
_verifyState
sharedBag
IDMSEnvironment
dictionaryWithDictionary:
initWithDictionary:
addPersonInfoToCache:
_handleCertificateStatusUpdate:forAppleID:
setAltDSID:
setSuggestedValidDuration:
setValidatedEmailHashes:
setValidatedPhoneHashes:
setValidStartDate:
_handleUILockStatusChange
setLastConnectionDate:
setLastSuccessfulConnectionDate:
_ensureThrottledRetryTimerStartedWithSuggestedDelay:
verifyKeys
numberWithUnsignedLongLong:
numberWithUnsignedInteger:
initWithAppleID:
setResponseHandler:
connection:didReceiveIncomingMessage:
dictionary
initWithType:appleID:info:
cachedPersonInfoWithEmailOrPhone:
_handleFindPersonResponse:forRequest:emailOrPhone:withError:queue:completion:
_update
_handleInfoResponse:forAppleID:infoRequest:certificateSerialNumber:withError:completion:
_handleReceivedCertificateToken:privateKeyPersistentReference:forAppleID:
setCertificateTokenHandler:
initWithAppleID:certificateToken:privateKeyPersistentReference:
_handleReceivedIdentity:forAppleID:identityRequest:withError:completion:
setIdentity:forAppleID:
setContactInfo:validationRecord:forAppleID:
setMetaInfo:
statusInfo
_detailedDescription
metaInfo
addAppleID:
_cleanUpAccount:
_handleServerTaskCompletionWithError:
_requestIdentityForAppleID:certificateToken:privateKeyPersistentReference:withCompletion:
_performKeyVerificationForIdentity:
_handleKeyVerificationFailure
_performKeychainCount
_requestInfoForAppleID:completion:
_handleAccountIdentifierValidationRecordMismatch
_handleUntrustedAppleIDCertificateChainForIdentity:
_checkIfAppleIDCertificateChainIsValidForIdentity:completion:
queryVerifiedIdentityForEmailOrPhone:queue:completion:
verifiedIdentityForEmailOrPhone:queue:completion:
_copyIdentityForAppleID:
personInfoWithEmailOrPhone:queue:completion:
_invalidate
_personInfoWithEmailOrPhone:queue:completion:
_performServerTaskWithInfo:completion:
_performOtherTaskWithInfo:completion:
_statusInfo
_handleAppleIDChangedNotification
_handleAppleIDSignedInNotification
_handleAppleIDSignedOutNotification
_handleKeyBagFirstUnlockNotification
_handleUILockStatusChangedNotification
topic
_updateMyInfo
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
_wasIdentityLinkedOnce
verifiedIdentityForEmailOrPhone:completion:
verifiedIdentityForEmailOrPhone:
verifiedIdentityForCertificateChain:emailOrPhone:error:
detailedDescription
personInfoWithEmailOrPhone:completion:
prefsChanged
requestWithInfo:completion:
_agentEnabled
_agentMetaInfo
_appleID
_creationDate
_dbManager
_dispatchQueue
_findPersonRequests
_identityRequest
_infoRequest
_linkIdentityEnabled
_periodicVerifyTimer
_pushConnection
_pushEnvironment
_task
_testIdentityRequest
_throttledRetryTimer
_updatePush
_updatePeriodicVerifyTimer
clRangingPeer
macAddressData
_clRangingPeer
_macAddressData
T@"_CLRangingPeer",&,N,V_clRangingPeer
T@"NSData",&,N,V_macAddressData
invalidationHandler
setQueueAvailableHandler:
setAwdlStartedHandler:
setPeerFoundHandler:
setRangingStartedHandler:
setRangingCompletedHandler:
isRangingInitiator
rangingPeer
setRangingPeer:
setWifiRangingError:
queueAvailableHandler
awdlStartedHandler
peerFoundHandler
rangingStartedHandler
rangingCompletedHandler
activateCalled
setActivateCalled:
invalidateCalled
setInvalidateCalled:
rangeable
setRangeable:
calledAWDLStarted
setCalledAWDLStarted:
rangingStarted
setRangingStarted:
waitingForNetworkToDisable
setWaitingForNetworkToDisable:
_isRangingInitiator
_activateCalled
_invalidateCalled
_rangeable
_calledAWDLStarted
_rangingStarted
_waitingForNetworkToDisable
_rangingPeer
_wifiRangingError
_wifiRangingResults
_identifier
_queueAvailableHandler
_awdlStartedHandler
_peerFoundHandler
_rangingStartedHandler
_rangingCompletedHandler
_invalidationHandler
T@"SDAutoUnlockRangingPeer",&,N,V_rangingPeer
T@"NSString",R,C,N,V_identifier
T@?,C,N,V_queueAvailableHandler
T@?,C,N,V_awdlStartedHandler
T@?,C,N,V_peerFoundHandler
T@?,C,N,V_rangingStartedHandler
T@?,C,N,V_rangingCompletedHandler
T@?,C,N,V_invalidationHandler
T@"NSError",&,N,V_wifiRangingError
T@"NSArray",&,N,V_wifiRangingResults
TB,N,V_activateCalled
TB,N,V_invalidateCalled
TB,N,V_rangeable
TB,N,V_calledAWDLStarted
TB,N,V_rangingStarted
TB,N,V_waitingForNetworkToDisable
T@"NSDictionary",R,C,N,V_awdlInfo
TB,R,N,V_isRangingInitiator
_createWiFiObserver
_createLocationManager
setLocationManager:
locationManager
wifiRequestQueue
_processRequestQueue
currentRequest
_disableRangeable
_stopAWDL
setCurrentRequest:
_addWiFiRequest:
_cancelWiFiRequest:
removeObjectAtIndex:
setAwdlStarting:
_startAWDLWithInfo:
_invalidateCurrentRequest
_invalidateWiFiRequest:
setAwdlStartFailed:
setAwdlTimerFired:
_resetManagerState
requestRangingToPeers:timeoutSeconds:
startRangingFromPeers:
stopRangingFromPeers:
_invalidateAWDLTimer
awdlTimer
_handleAWDLTimerFired
setAwdlTimer:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
_startRanging
_enableRangeableIfNeeded
locationManager:didRangePeers:
locationManager:rangingDidFailForPeer:withError:
__handleAWDLDisabledIfNeededForRequest:
_restartAWDLTimer
setQueue:
setAwdlNetwork:
awdlStartFailed
awdlStarting
awdlTimerFired
setWifiRequestQueue:
_awdlStartFailed
_awdlStarting
_awdlTimerFired
_awdlNetwork
_currentRequest
_locationManager
_wifiRequestQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_source>",&,V_awdlTimer
T@,&,V_awdlNetwork
TB,N,V_awdlStartFailed
TB,N,V_awdlStarting
TB,N,V_awdlTimerFired
T@"SDAutoUnlockWiFiRequest",&,V_currentRequest
T@"CLLocationManager",&,N,V_locationManager
T@"NSMutableArray",&,N,V_wifiRequestQueue
initWithRequest:wiFiManager:
wiFiManager
_wiFiManager
T@"SDAutoUnlockWiFiRequest",R,N,V_request
T@"SDAutoUnlockWiFiManager",R,W,N,V_wiFiManager
setEvents:
setCurrentHistoryToken:
_events
_currentHistoryToken
T@"NSArray",&,V_events
T@"NSData",&,V_currentHistoryToken
enumeratorForChangeHistoryFetchRequest:error:
horizontalAngle
ptsScore
dispatchQueue
_sendLogRequestToDeviceID:honeybeeID:
idsService
_sendLogRequestToDevices:honeybeeID:
_sendMessage:devices:type:
receivedHoneybeeIDs
collectingSysdiagnose
_uploadSysdiagnose:
_collectSysdiagnoseWithCompletion:
_uploadSysdiagnoseToHoneybee:honeybeeID:
type
_handleLogRequest:
sendLogRequestToDeviceIDs:honeybeeID:
sendLogRequestToDevices:honeybeeID:
setCollectingSysdiagnose:
sysdiagnoseQueue
setSysdiagnoseQueue:
setReceivedHoneybeeIDs:
honeybeeConnection
setHoneybeeConnection:
_collectingSysdiagnose
_sysdiagnoseQueue
_receivedHoneybeeIDs
_idsService
_honeybeeConnection
TB,N,V_collectingSysdiagnose
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sysdiagnoseQueue
T@"NSMutableArray",&,N,V_receivedHoneybeeIDs
T@"IDSService",R,N,V_idsService
T@"NSObject<OS_xpc_object>",&,N,V_honeybeeConnection
aa_primaryAppleAccount
dataWithBytes:length:
dataUsingEncoding:
base64EncodedStringWithOptions:
fileSystemRepresentation
firstObject
defaultManager
URLForDirectory:inDomain:appropriateForURL:create:error:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
dictionaryWithObjects:forKeys:count:
absoluteURL
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
errorWithDomain:code:userInfo:
stringByAppendingPathComponent:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
URLByDeletingLastPathComponent
copy
pathExtension
stringByDeletingPathExtension
mutableCopy
whitespaceCharacterSet
rangeOfCharacterFromSet:options:
substringWithRange:
intValue
floatValue
deleteCharactersInRange:
appendString:
count
reverseObjectEnumerator
domain
code
getResourceValue:forKey:error:
lowercaseString
hasSuffix:
componentsSeparatedByString:
objectAtIndexedSubscript:
characterSetWithCharactersInString:
stringByTrimmingCharactersInSet:
valueWithPointer:
integerValue
numberWithLong:
postNotificationName:object:userInfo:
characterAtIndex:
streamToService:withFileHandle:acceptReply:
enableService:
disableService:
streamHandlerForService:
clientProxy
setClientProxy:
streamHandlers
setStreamHandlers:
enabledServices
setEnabledServices:
_managerID
_clientProxy
_streamHandlers
_enabledServices
T@"<SFCompanionServiceManagerClient>",&,V_clientProxy
T@"NSMutableDictionary",&,V_streamHandlers
T@"NSMutableArray",&,V_enabledServices
T@"NSString",R,V_managerID
searchForBrowsableDomains
scheduleBrowser
displayNameForDomain:
parseDomain:
buildNodes
statusChanged:
_domains
_domainTree
buildNodesAndNotify
setHasSuccess:
hasSuccess
_success
T@"NSString",&,N,V_sessionID
TB,N,V_success
sendDatesByMessageIdentifier
completionHandlersByMessageIdentifier
_completionHandlersByMessageIdentifier
_sendDatesByMessageIdentifier
T@"NSMutableDictionary",R,C,N,V_completionHandlersByMessageIdentifier
T@"NSMutableDictionary",R,C,N,V_sendDatesByMessageIdentifier
T@"IDSService",R,N,V_autoUnlockService
sendAWDLInfo:
setLocalAWDLInfo:
useRealRangingKey
rangingKey
setAwdlInfoData:
setRangingKey:
localAWDLInfo
setCoreLocationError:
setStartAWDLError:
appIcon
setAppIcon:
lastLocalUnlockDate
_useAKSToken
_inRange
_shouldUnlock
_acceptor
_rangingTimedOut
_aksSuccess
_useEncryption
_awdlInfoData
_awdlStart
_awdlInterval
_distance
_rangingKey
_rangingErrorString
_rangingStart
_rangingInterval
_attemptError
_remoteAWDLInfo
_localAWDLInfo
_sessionRangingKey
_wifiErrorDomain
_wifiRangingErrorCode
_coreLocationError
_startAWDLError
_wifiRequest
_appIcon
_lastLocalUnlockDate
TB,N,V_useAKSToken
TB,N,V_inRange
TB,N,V_shouldUnlock
T@"NSData",C,N,V_awdlInfoData
acceptor
TB,N,GisAcceptor,V_acceptor
T@"NSDate",&,N,V_awdlStart
Td,N,V_awdlInterval
T@"NSNumber",&,N,V_distance
T@"NSData",&,N,V_rangingKey
TB,N,V_rangingTimedOut
T@"NSString",&,N,V_rangingErrorString
TB,N,V_aksSuccess
T@"NSDate",&,N,V_rangingStart
Td,N,V_rangingInterval
T@"NSError",&,N,V_attemptError
T@"NSDictionary",&,N,V_remoteAWDLInfo
T@"NSDictionary",&,N,V_localAWDLInfo
T@"NSData",&,N,V_sessionRangingKey
TQ,N,V_protocol
TB,N,V_useEncryption
T@"NSString",&,N,V_wifiErrorDomain
Tq,N,V_wifiRangingErrorCode
T@"NSError",&,N,V_coreLocationError
T@"NSError",&,N,V_startAWDLError
Tq,N,V_errorType
T@"SDAutoUnlockWiFiRequest",&,V_wifiRequest
T@"NSData",&,N,V_appIcon
T@"NSDate",&,N,V_lastLocalUnlockDate
setHasFailureReasons:
setHasLtkSyncing:
hasLtkSyncing
setHasWatchOldLTKSyncStatus:
setHasWatchNewLTKSyncStatus:
_failureReasons
_ltkSyncing
TI,N,V_failureReasons
TB,N,V_ltkSyncing
handleClosedConnection
notifyClientForEvent:
wirelessPowerChanged:
notifyClient:withResults:
performBlockForAllProgresses:
totalUnitCount
getTransferRate
getTransferSize
handleTerminalCallBack
senderInfoAvailable
silentlyCancelRequest
fileInfoExpectedClassForKeyMap
validatedFileInfo:
validatedFilesArray:
validatedItemsArray:
disambiguatedModelName
idSelfIdentity
deviceIRKData
edPKData
idsDeviceID
enqueueResponse:code:body:
senderIsMe
URLWithString:relativeToURL:
scheme
cuFilteredArrayUsingBlock:
storeDataValue:forKey:
senderIsTrusted:
senderIsBlocked
sendDiscoverResponse:forKnownAlias:
storeArrayValue:forKey:
storeStringValue:forKey:
storeIconValue:forKey:
convertURLStringsToURLs
transferContainsPhotosAssetBundles
createPersonForAskRequest
allowAskRequestFromPerson:
addAirDropPerson:
adjustPropertiesForAutoAcceptSenderIsMe:
adjustPropertiesForPhotosBundles
silentlyCancelRequestOnMainThread
sendAskResponse:
parseDiscoverRequest
handleDiscoverRequest
parseAskRequest
handleAskRequest
cancelAndDecline
processRequest
whereFromInfo
setSenderName:
shouldExtractMediaFromPhotosBundles
setShouldExtractMediaFromPhotosBundles:
startPublishingProgressForPlaceholderFiles:
setPlaceholderFiles:withCreationCompletionHandler:
setTotalBytes:
compressionType
setUnzipCompressionType:
setDestination:
setReadStream:
unzip
startReceivingBody:error:
enqueueBadResponseForRequest:
makeDestinationDirectory
storeRequestValue:forKey:convertToNumber:
thereIsEnoughFreeSpace
oneHundredContinue:
startReceivingFile:error:
sendUploadResponse:
numberWithLongLong:
notifyClientOfBytesCopied:timeRemaining:
getStatusCode:
finishOperation
storeNumberValue:forKey:
transferIsOverPrebufferLimit
setSpotlightMetadata:
setCombinedFileURLsAndItems:
removeAirDropPerson:
fileZipper:event:withProperty:
didCloseConnection
didReceiveError:
storeBooleanValue:forKey:
logSenderIsBlocked
handleReadStreamEvent:event:
didReceiveRequest:
didSendResponse:forRequest:
didFailToSendResponse:
contactsOnly
destination
_discover
_personAdded
_stopDeferred
_userAccepted
_senderTrusted
_delayedFinish
_queueSuspended
_endEncountered
_connectionClosed
_transactionStarted
_person
_destination
_requestBuffer
_progress
_queue
_clientTrust
_startTime
_lastEvent
_requestData
_readStream
_zipper
_askSemaphore
_askRequest
_uploadRequest
_discoverRequest
_mediaCapabilities
_contactsOnly
_shouldExtractMediaFromPhotosBundles
TB,V_contactsOnly
T@"NSURL",C,V_destination
T@"NSString",C,V_sessionID
TB,V_shouldExtractMediaFromPhotosBundles
T@"<SDAirDropConnectionDelegate>",W,V_delegate
initializeStateCaptureBlock
shouldScanForCopyPaste
shouldScanForHandoff
_createOSTransactionIfNeeded
shouldBoostScan
deviceTracked
startScanningForType:withData:mask:peers:withOptions:boostedScan:duplicates:
stopScanningForType:
lostAllDevices
setIdsDevice:
clientAdvertisement
receivedAdvertisement:
isLocallyPaired
isNearby
didLosePeer:
didLosePeerTimer:
initWithDevice:
setDeviceTracked:
idsDevice
foundDeviceWithDevice:
options
isDefaultPairedDevice
updateWithRawAdvertisementData:receivedViaScanning:newAdvertisementHandler:
scanForTypes:
activityPayloadFromDeviceUniqueID:forAdvertisementPayload:command:timeout:withCompletionHandler:
lostDeviceWithDevice:
dumpState
systemHasPoweredOn:
setDisableDuplicateFilterOnce:
nearbyServiceDevicesChanged:
_scanTypes
_scannerEnabled
_isScanning
_scanningTransaction
_stopScanLostDeviceTimer
_deviceIdentifierToDeviceRecord
_deviceIdentifierToLostDeviceTimers
mountedVolumeURLsIncludingResourceValuesForKeys:options:
opticalDisk:
URLForRemounting:
setNodeModel:protocol:url:
setODiskServers:
recentNodes
connectedNodes
addToRecents:
setServers:
combineRecentAndConnectedNodes:
postNotification
removeAirDropPersonInternal:
browseAfterDelay:
buildNodesAndNotify:
volumesChanged:
_clientCount
_recentsCount
_connectedCount
_sendNotification
_odiskServers
_airDropPeople
initWithServiceName:
securityScopedURLForDownloadsFolderWithReplyHandler:
monogramImageDataForContactSync:style:diameter:monogramsAsFlatImages:replyHandler:
groupMonogramImageDataForContactsSync:style:diameter:monogramsAsFlatImages:replyHandler:
urlToCGImgDataForCallHandoffIconWithAppIconImageData:contact:replyHandler:
monogramImagesForMultipleContactsSync:style:diameter:monogramAsFlatImages:replyHandler:
CGImgDataForUIActivityTitles:foregroundColor:replyHandler:
CGImgDataForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:replyHandler:
CGImgDataForActivityMoreListEntryForActivityTitle:labelColor:replyHandler:
CGImgDataForActionPlatterWithTitle:tintColor:replyHandler:
CGImgDataForNearbyBadgeWithCount:replyHandler:
updateShareSheetHostConfiguration:
setSessionKeepAliveTransactionIdentifier:
queuedBlocks
CGImageWithCacheKey:contactIDs:type:
_updateShareSheetHostConfiguration
synchronousRemoteObjectProxyWithErrorHandler:
updateCacheFromSFCGImageData:cacheKey:contactIDs:
contacts
iconIndex
cacheLookupKey
initWithContacts:icon:atIndex:cacheLookupKey:
loadBatchImageCacheData:cacheKey:mapCacheHitImage:runProxy:type:
initWithContact:icon:atIndex:cacheLookupKey:
blackColor
whiteColor
CGColor
colorWithRed:green:blue:alpha:
initWithImageTitle:
keyDerivedFromRelevantTraitCollectionProperties
keyDerivedFromRelevantTraitCollectionPropertiesWithOppositeUserInterfaceStyle
imageTitle
identifierForColor:
initWithImageTitle:image:cacheLookupKey:
getOppositeColor:
CGImgForUIActivityTitles:foregroundColor:processOppositeColor:
image
initWithCapacity:
MD5HashOfStrings:
CGImgForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:processOppositeColor:
CGImgDataForActivityMoreListEntryForActivityTitle:labelColor:processOppositeColor:
setCacheLookupKey:
getRed:green:blue:alpha:
hostTraitCollection
userInterfaceStyle
preferredContentSizeCategory
layoutDirection
remoteObjectProxyWithErrorHandler:
whitelistedDownloadsFolderURL
copyConversationIdentityImageIconDataForImage:forConversationIdentifier:style:diameter:monogramsAsFlatImages:isContactImage:
_loadGroupContactIdentityImage:
urlToCGImgDataForCallHandoffIconWithAppIconImageData:contact:
sendShareSheetInvocationMetricsWithAppBundleID:numSuggestions:suggestionDisplayNames:extensionsCacheResult:isDarkMode:duration:
CGImgForActionPlatterWithTitle:tintColor:
CGImgForNearbyBadgeWithCount:
interruptionHandler
setQueuedBlocks:
_needsTransactionRelease
_connectionToService
_intervalID
_signpostName
_cacheAccessCount
_cacheAccessDict
_cacheAccessLock
_latestHostConfig
_interruptionHandler
_queuedBlocks
T@"NSMutableArray",&,V_queuedBlocks
T@?,C,N,V_interruptionHandler
streamHandler
clientInputStream
setClientInputStream:
clientOutputStream
setClientOutputStream:
netServiceBrowser
setNetServiceBrowser:
startBrowser
searchForServicesOfType:inDomain:
initRequiringSecureCoding:
encodeObject:forKey:
encodedData
notifyStreamRequestWithError:
sendMessage:withCompletionHandler:
switchToStreaming
setUsingMessages:
writeNetworkStream
fileHandle
setBufferSize:socket:
initWithFileDescriptor:
open
initForReadingFromData:error:
decodeDictionaryWithKeysOfClasses:objectsOfClasses:forKey:
handleStreamRequest:
handleStreamResponse:
serviceFromAuthorData:
sendInitialResponse:
networkBufferSpaceAvailable
setNetworkBufferSpaceAvailable:
hasBytesAvailable
readClientStream
setShouldReadNetwork:
writeClientStream
stopIfReady
handleOpenedStream
streamError
streamStatus
hasSpaceAvailable
write:maxLength:
logClientReceived
read:maxLength:
logClientSent
writeToStreamWithData:
stream:handleEvent:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
streamHandler:didReceiveMessage:
streamHandlerDidClose:
streamHandlerDidClose:withError:
streamHandler:bufferSpaceChanged:
streamHandler:didReceiveStreamData:
setStreamHandler:
authorData
setAuthorData:
initiator
setInitiator:
shouldStop
setShouldStop:
clientSent
setClientSent:
clientReceived
setClientReceived:
writeQueue
setWriteQueue:
networkStreamData
setNetworkStreamData:
readQueue
setReadQueue:
clientStreamData
setClientStreamData:
readFromClient
setReadFromClient:
wroteToClient
setWroteToClient:
streamsRequestHandler
setStreamsRequestHandler:
_initiator
_shouldStop
_clientSent
_clientReceived
_networkBufferSpaceAvailable
_fileHandle
_streamHandler
_authorData
_netServiceBrowser
_clientInputStream
_clientOutputStream
_writeQueue
_networkStreamData
_readQueue
_clientStreamData
_readFromClient
_wroteToClient
_streamsRequestHandler
T@"SDStreamHandler",&,V_streamHandler
T@"NSData",&,V_authorData
TB,V_initiator
TB,V_shouldStop
TB,V_clientSent
TB,V_clientReceived
TB,V_networkBufferSpaceAvailable
T@"NSNetServiceBrowser",&,V_netServiceBrowser
T@"NSFileHandle",R,V_fileHandle
T@"NSInputStream",&,V_clientInputStream
T@"NSOutputStream",&,V_clientOutputStream
T@"NSObject<OS_dispatch_queue>",&,V_writeQueue
T@"NSMutableData",&,V_networkStreamData
T@"NSObject<OS_dispatch_queue>",&,V_readQueue
T@"NSMutableData",&,V_clientStreamData
Tq,V_readFromClient
Tq,V_wroteToClient
T@?,C,V_streamsRequestHandler
T@"<SDCompanionStreamDelegate>",W,V_delegate
T@"NSString",&,V_identifier
setCancelAction:
setSelectedAction:
errorString
errorDetailedString
suitableContentsTitle
T@"NSString",R,N
loadSuggestedPeers
_systemWillSleep
_systemHasPoweredOn
testDeviceID
foundPeers
setObject:atIndexedSubscript:
postSuggestionNotification
triggerDevicesIfNeeded
setupRetryIfNeeded
retriedSetup
alwaysShowSetupRetry
lastSuccessfulDevice
invalidateSuggestedDeviceTimer
setupRetryDeviceTimer
suggestionManagerQueue
setSetupRetryDeviceTimer:
sortUsingComparator:
setSuggestedPeer:
suggestedPeer
deviceTimer
setDeviceTimer:
restartServiceTimer:
invalidateServiceTimer
serviceTimer
invalidateSuggestionService
setServiceTimer:
autoUnlockEligibleDevices
setCurrentBluetoothIDs:
currentBluetoothIDs
autoUnlockDeviceForBluetoothID:
supportsAdvertisingUnlocked
foundFirstPeer
setFoundFirstPeer:
postNotificationIfNeeded
suggestionManagerSessionID
updateSuggestionService
watchAvailableForUnlockWithCompletionHandler:
canSuggestForDeviceID:
suggestedPeers
setSuggestedPeers:
suggestionNotificationSetUpSelected
suggestionNotificationDismissed
setupRetryNotificationSetUpSelected
setupRetryNotificationDismissed
setupRetryNotificationTimedOut
handleTestSuggestion
restartSetupRetryDeviceTimer:
invalidateSetupRetryDeviceTimer
restartSuggestedDeviceTimer:
startScanningForIDSDeviceIDs:
sendStartAdvertisingToDeviceID:
shouldSendRequestsForDeviceID:
updateDefaultsForDeviceID:
featureSuggestedForDeviceID:
suggestionsEnabled
ignoreBackOff
setFoundPeers:
setSuggestionManagerSessionID:
setSuggestionManagerQueue:
_foundFirstPeer
_suggestedDeviceID
_setupRetryDeviceID
_lastSuccessfulDevice
_foundPeers
_currentBluetoothIDs
_serviceTimer
_deviceTimer
_setupRetryDeviceTimer
_suggestedPeers
_suggestedPeer
_suggestionManagerSessionID
_suggestionManagerQueue
TB,N,V_foundFirstPeer
T@"SFBLEScanner",&,N,V_scanner
T@"NSMutableArray",&,N,V_foundPeers
T@"NSArray",&,N,V_currentBluetoothIDs
T@"NSObject<OS_dispatch_source>",&,N,V_serviceTimer
T@"NSObject<OS_dispatch_source>",&,N,V_deviceTimer
T@"NSObject<OS_dispatch_source>",&,N,V_setupRetryDeviceTimer
T@"NSMutableArray",&,N,V_suggestedPeers
T@"SFAutoUnlockDevice",&,N,V_suggestedPeer
T@"NSUUID",&,N,V_suggestionManagerSessionID
T@"SFAutoUnlockDevice",&,N,V_setupRetryDevice
T@"NSObject<OS_dispatch_queue>",&,N,V_suggestionManagerQueue
T@"NSString",C,N,V_suggestedDeviceID
T@"NSString",C,N,V_setupRetryDeviceID
T@"SFAutoUnlockDevice",&,N,V_lastSuccessfulDevice
_userDefaultsKeyForHash:
installSleepStateMonitor
installManagedConfigurationMonitor
installFinderSidebarPrefsMonitor
installWirelessCarPlayMonitor
installSMBPreferencesMonitor
installCarPlayStatusMonitor
installDynamicStoreCallBack
installLocaleChangeMonitor
installSpringBoardStateMonitor
installSystemUIMonitor
installDisplaySleepMonitor
installDisplayConfigurationMonitor
installClamshellStateChangeMonitor
installSmartCoverStatusMonitor
installBonjourNameMonitor
installContactsMonitor
installUserPictureMonitor
installUILockStatusMonitor
installSleepWakeCallBack
installBluetoothMonitor
installWirelessMonitor
installAppleIDAccountInfoMonitor
installAppleIDUsernameMonitor
installVolumesMonitor
installBacklightMonitor
installSleepNotification
installWiFiPasswordSharingMonitor
installSSIDCacheMonitor
installWristStateMonitor
installMISMonitor
installCoreTelephonyMonitor
installAirplaneModeMonitor
installAirPlayPreferencesMonitor
_multipleUsersLoggedIn
resetMeCardWithReason:
enableAirDropAdvertising
enableAirDropReceiving
createHostNameKey:
setValue:forKey:
logAirDropTransactionForClientServer:beginEnd:count:
discoverableMode
updateDiscoverableMode
wirelessEnabled
wirelessCarPlay
wirelessAccessPoint
bluetoothEnabled
isAirDropAllowed
isAirDropReady
reconciledDiscoverableMode
appleIDAccountState
eduModeEnabled
defaultDiscoverableMode
postNotification:
newDiscoverableMode
myAppleID
accountStatusForAppleID:
emailOrPhone
_copyMyAppleIDCertificate
myAccount
identity
copyCertificate
_copyMyAppleIDIntermediateCertificate
copyIntermediateCertificate
_copyMyAppleIDSecIdentity
_myAppleID
copyIdentityForAppleID:
accountForAppleID:
contactInfo
validatedEmailAddresses
altDSIDNeedsFixing
saveVerifiedAccount:withCompletionHandler:
aa_updatePropertiesForAppleAccount:completion:
clearMyAppleIDInfo
validatedPhoneNumbers
copyMyAppleIDSecIdentity
myAppleIDEmailAddresses
myAppleIDPhoneNumbers
containsObject:
raise:format:
givenName
firstName
setGivenName:
familyName
lastName
setFamilyName:
phoneNumbers
arrayWithArray:
phoneNumberWithStringValue:
initWithLabel:value:
setPhoneNumbers:
emailAddresses
setEmailAddresses:
componentsJoinedByString:
contactsForCombinedHash:
unionSet:
setWithSet:
contactIdentifierForMediumHashes:
contactsContainsShortHashes:
anyObject
meCard
identifier
compare:
containsString:
isEmail:
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingPhoneNumber:
unifiedContactsMatchingPredicate:keysToFetch:error:
setWithArray:
GeneralContactKeysToFetch
initWithKeysToFetch:
arrayWithObjects:count:
predicateForContactsWithIdentifiers:
setPredicate:
enumerateContactsWithFetchRequest:error:usingBlock:
value
emailOrPhoneForCombinedHash:
instantMessageAddresses
username
rangeOfString:
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
null
addAdditionalInformationToMeCard:
setMeCard:
stringValue
updateFamilyHotspotState
sharedConnection
isPersonalHotspotModificationAllowed
numberWithBool:
addReason:
pushPreventionDateForReason:newDate:
removeReason:
postNotification:userInfo:
isPasswordProximityAutoFillRequestingAllowed
myAppleIDValidationRecord
bluetoothAddressData
stringByAppendingString:
aa_altDSID
commonNameForCertificate:
emailAddressesForAppleID:
phoneNumbersForAppleID:
validationRecordInfoForAppleID:
stringFromContact:style:
aa_primaryEmail
unifiedAppleIDInfo
obfuscatedMediumHashDataForStrings:
btleAdvertisementDataForStrings:
smbConfiguration:netBiosName:workgroup:
computerName
modelName
deviceSupportsContinuity
finderServer
aa_isManagedAppleID
smartCoverIsClosed
updateMediaAccessControlSetting:
initWithSuiteName:
boolForKey:
appleIDAccountInfoChanged:
addObserver:selector:name:object:
handleAWDLState:
bluetoothAddressChanged
setBluetoothAddressChangedHandler:
activateWithCompletion:
uninstallBonjourNameMonitor
clearMyIconAndHash
shared
contactStoreDidChange:
kStatusContactsHashesChanged
meCardChanged:
kStatusMeCardChanged
clearComputerName
clearLocalHostName
restartBonjourNameMonitor
initWithIdentifier:queue:operation:
managedConfigurationSettingsChanged:
updateAirDropAllowed
updatePersonalHotspotAllowed
updateBlacklistedAppBundleIDs
effectiveBlacklistedAppBundleIDs
stringForWatchWristState:
handleWiFiPasswordSharingChanged
b332BTAddressRotationDelay
shareSheetMaxSuggestions
b332PairingEnabled
isBuddyCompleted
enableOOBPCredentialLogging
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
T@"SDStatusMonitor",R
Td,R
Tq,R
TB,R
clearMonitorCache
addServerName:forHostName:
airDropTransactionBegin:
airDropTransactionEnd:
discoverableLevel
mountPointsForServer:
odiskMountPointsForServer:
removeServerName:
serverNameForHost:
setODiskMountPoints:
setDiscoverableMode:
setServerMountPoints:
verifyAndParseValidationRecordData:intoDictionary:
cacheCertificate:forRealName:
cacheIdentity:
copyCertificateForRealName:
copyMyAppleIDCertificate
copyMyAppleIDIntermediateCertificate
fixAltDSIDIfNeeded
handleAppleAccountSignIn
handleAppleAccountSignOut
hsa2EnabledWithCompletionHandler:
verifiedIdentityForAppleID:
awdlDevice
awdlInfoForPeerWithServiceName:
awdlNetwork
contactsForEmailHash:phoneHash:
contactIdentifierIsBlocked:
contactIsBlocked:
contactWithPreferredIdentifierForContacts:
contactsWithPhoneNumberOrEmail:keys:
contactWithContactIdentifier:
emailsForContact:
emailOrPhoneForEmailHash:phoneHash:
instantMessageEmailsForContact:
phoneNumbersForContact:
autoHotspotState
updateAutoHotspotState
cellularDataEnabled:airplaneMode:
lteConnectionShows4G
familyHotspotStateForAltDSID:
familyHotspotEnabled
networkType
personalHotspotAllowed
signalStrength
simStateReady
addPreventExitForLocaleReason:
pushDateForPreventExitForLocaleReason:expirationDate:
removePreventExitForLocaleReason:
defaultWiFiDevice
wifiPasswordSharingAvailability
wifiSSIDForSSIDHash:
airDropPublished
setAirDropPublished:
setBluetoothEnabled:
setFinderServer:
setWirelessEnabled:
airplaneModeEnabled
setAirplaneModeEnabled:
awdlInfo
awdlPeerList
awdlStateInfo
bluetoothAddress
bonjourName
consoleUser
clearConsoleUser
deviceKeyBagState
localHostName
minPersonImageSize
modelCode
myAccountAppleID
myAltDSID
myAppleIDCommonName
myAppleIDEmailHash
myAppleIDPhoneHash
myEmail
myName
myGivenName
myPrimaryEmail
myMediumHashes
myShortHashesForAirDrop
netbiosName
sidebarMaxCount
someComputerName
systemUIFlags
workgroup
workgroupThreshold
allEnabled
alwaysAutoAccept
alwaysSendPayload
backlightOn
bonjourEnabled
browseAllInterfaces
bypassLTKeyAbort
carplayConnected
coalesceMe
computerToComputer
connectedEnabled
currentConsoleUser
deviceKeyBagDisabled
deviceKeyBagLocked
deviceKeyBagLocking
deviceKeyBagUnlocked
deviceRequiresNewRanging
deviceSupportsRanging
deviceSupportsWAPI
deviceUIUnlocked
deviceWasUnlockedOnce
disableAutoAccept
disableAutoAcceptForPhotosAssetBundles
disableCompression
disableContinuityTLS
disablePeopleSuggestions
disablePictureQuery
disablePipelining
disableQuarantine
disableExtractMediaFromBundles
disableTransformingPhotosAssetBundlesToFolders
disableRotation
disableTLS
dockHasDownloadsFolder
enableAllRecents
enableBugs
enableContinuity
enableDebugMode
enableDemoMode
enableDVZip
enableHotspotFallback
enablePKZip
enablePKZipCompression
enableStrangers
enableStreamDebugging
enableWebloc
enableXML
finderAirDropEnabled
forceAWDL
forceP2P
handoffVisible
ignoreIconDiskCache
internetSharingEnabled
myAppleIDIsManaged
registerAllInterfaces
runningAsSetupUser
screenOn
showMeInWormhole
showThisComputer
signedIntoPrimaryiCloudAccount
sleepModeOn
testDiskFull
wifiUserPowerPreference
asynchronousProxyLoadingEnabled
mediaAccessControlSetting
updateAWDLStateInfo
airplaneModeChanged
logBluetoothAvailabilityState:
logBluetoothPowerState
uninstallCarPlayStatusMonitor
handleDynamicStoreCallback:changedKeys:
installKeyBagUnlockMonitor
handleNameMonitorCallBack:flags:error:
pairedWatchWristState
updatePairedWatchWristState:
pairedWatchLockState
updatePairedWatchLockState:
pairedWatchHasLongPasscode
updatePairedWatchHasLongPasscode:
handleMISStateChanged:
updateLocalPowerSource:
localPowerSource
handleSleepWakeCallBack:messageArguement:
reloadSMBConfInfo
updateWatchWristState:
watchWristState
clearOperationModeInfo
clearWirelessState
logWiFiPowerState
awdlState
lastDarkWakeDate
controlCenterVisible
multipleUsersLoggedIn
wirelessCritical
_activateStarted
_airDropAllowed
_airDropCount
_airDropModeNotifyToken
_airDropPublished
_airPlayPrefsToken
_backlightOn
_backlightLevelToken
_bonjourName
_carplayConnected
_certificates
_computerName
_computerToComputer
_consoleUser
_consoleUserID
_contactHashManager
_contactStore
_currentDiscoverableMode
_deviceInformation
_deviceIsHighPriority
_deviceKeyBagState
_deviceSupportsWAPI
_deviceUIUnlocked
_deviceWasUnlockedOnce
_dynamicStoreSource
_finderAirDropEnabled
_finderServer
_handoffVisible
_identities
_keyBagUnlockToken
_localHostName
_mediaAccessControlSetting
_mountPoints
_myAppleIDCommonName
_myAppleIDIntermediateCertificate
_myAppleIDCertificate
_myAppleIDSecIdentity
_myEmailHashes
_myPhoneHashes
_nameMonitor
_needsExitForLocaleChange
_netbiosName
_notifierObject
_notifyPortRef
_odisksMountPoints
_pairedWatchHasLongPasscode
_pairedWatchWristState
_personalHotspotAutoState
_personalHotspotFamilyEnabled
_personalHotspotFamilyStates
_personalHotspotAllowed
_pmConnection
_rootPort
_screenOn
_serverNames
_sleepModeOn
_smbPreferences
_ssidHashes
_systemMonitor
_systemUIFlags
_uiLockStatusToken
_wirelessAccessPoint
_workgroup
_watchWristState
_preventLocaleRestart
_smartCoverMonitor
_requestedDiscoverableMode
_screenBlankedToken
_controlCenterVisible
_wirelessCritical
___meCard
_awdlState
_lastDarkWakeDate
_effectiveBlacklistedAppBundleIDs
T@"CNContact",R,N,V___meCard
T@"NSString",&
T@"SDAirDropServer",W
T@"NSDictionary",R
T@"NSArray",R
T@"NSDictionary",R,V_awdlState
T@"NSData",R
T@"NSString",R
T@"NSDate",R,V_lastDarkWakeDate
T@"SFPowerSource",R
Ti,R
TI,R
airdropAllowed
TB,R,GisAirDropAllowed
airdropAvailable
TB,R,GisAirDropAvailable
T@"NSSet",R,V_effectiveBlacklistedAppBundleIDs
TB,R,V_controlCenterVisible
TB,R,V_multipleUsersLoggedIn
TB,R,V_wirelessCritical
clearCacheWithSync:
scheduleOperation
openLinks
onWrist
setOnWrist:
setDate:
_onWrist
_date
TB,N,V_onWrist
T@"NSDate",&,N,V_date
booted
setBooted:
lastOnWrist
setLastOnWrist:
lastWristWake
setLastWristWake:
motionCheckStarted
setMotionCheckStarted:
motionCheckEnded
setMotionCheckEnded:
_booted
_lastOnWrist
_lastWristWake
_motionCheckStarted
_motionCheckEnded
T@"NSDate",&,N,V_booted
T@"NSDate",&,N,V_lastOnWrist
T@"NSDate",&,N,V_lastWristWake
T@"NSDate",&,N,V_motionCheckStarted
T@"NSDate",&,N,V_motionCheckEnded
checkKeyBagState
scheduleDailyMetricReporterIfNeeded
generateDebugInfo
waitingForAuthToken
securityManager
generateLocalLongTermKey:
sendLongTermKeyRequest:requestID:
invalidateLongTermKeyTimer
resetLongTermKeyRequest
handleDevicesDidFailToPair
dailyMetricReporter
setDailyMetricReporter:
setRepeats:
setInterval:
setTolerance:
dailyMetrics
totalAttempts
successfulAttempts
setFailedAttempts:
totalUnlocks
setPasscodeUnlocks:
setPhoneAutoUnlockEnabled:
idsController
setPhoneSoftwareVersion:
setPhoneHardwareModel:
setDailyMetrics:
scheduleWithBlock:
enableTimerFired:
notifyEnableStateWithError:
enableUnlockForcingLTKTransfer:
ltksExist
ltkFileExists
updateSecurityManagerIfNeeded
deleteLongTermKeys
inConfigureState
generateSessionID
sendSetupRequest:withSessionID:
sendClassALongTermKeyRequest:sessionID:
disableUnlockPairing
resetSetupState
invalidateEnableTimer
unlockSessionAsOriginator:usingEscrow:escrowSecret:
clearStateForSession:
inPosition
setSentLockedState:
resetEscrowRecord
setWaitingForAuthToken:
resetState
allowExiting
lostModeIsActive
metricDates
handleStartLTK:
handleLongTermKeyResponse:
handleClassALongTermKeyResponse:
handleSetupSessionCreated:
invalidateUnlockTimer
handleStashKeyExchangeRequest:
handleStashToken:
handleUnlockStateRequest:
logProtoBufReceived:
resetAndClearState
handleRelockRequest
sendDeviceLockStateChanged:
preventExiting
updateSecurityManager
handleConfigurationState
hasRequestID
requestID
updateLongTermKeys:
signRemoteKey:withLocalKey:localKeyClass:remoteKeyClass:
updateLocalLongTermKey:remoteLongTermKey:
handleEscrowSessionRequest:
sendDisableMessage
localLongTermKey
remoteLongTermKey
escrowCreationSessionAsOriginator:errorCode:
setSetupAuthSession:
setupAuthSession
stepWithAuthSession:data:
sendCreateEscrowSecretWithStepData:sessionID:
stepWithAuthSession:data:authStep:
setupWithAuthSession:passcode:
enableUnlockPairing
localDeviceLocked
setTotalAttempts:
lostModeEnabled
sendResetMessage:reason:
setSessionStartDate:
setOnWristForCurrentSession:
setUnlockAuthSession:
unlockAuthSession
sendKeyExchangeResponse:sessionID:
getWristAndMotionStateWithCompletionHandler:
deviceOffWristForSessionID
unlockSessionID
setLastUnlockedByPairedUnlock:
sendSessionUnlockConfirmation:sessionID:
stashBagSessionAsOriginator:escrowSecret:manifest:
setStashBagSession:
stashBagSession
sendStashKeyExchangeResponse:sessionID:errorCode:
hasStashToken
stashToken
sendStashConfirmation:sessionID:
resetStashState
sendStateResponseWithUnlockEnabled:passcodeEnabled:
setUnlocked:
logProtoBufSend:
setRequestID:
restartLongTermKeyTimer
restartEnableTimerWithTimeout:
restartUnlockTimer:
setPasscodeEnabled:
devicesDidUnpair:
enableUnlockWithDevice:passcode:completionHandler:
deviceOnWrist
wristDetectionDisabled:
forceOnWristCheck
setInPosition:
canRetrySetup
setCanRetrySetup:
sentLockedState
enableTimer
setEnableTimer:
tempLongTermKey
setTempLongTermKey:
checkingWristState
setCheckingWristState:
sessionStartDate
setUnlockSessionID:
preventingExitForSetup
setPreventingExitForSetup:
onWristForCurrentSession
checkingWristAndMotionState
setCheckingWristAndMotionState:
longTermKeyTimer
setLongTermKeyTimer:
setDeviceOffWristForSessionID:
wristAndMotionTimer
setWristAndMotionTimer:
positionSemaphore
setPositionSemaphore:
lastWakeGestureRecord
setLastWakeGestureRecord:
setMetricDates:
enableHandler
setEnableHandler:
wristAndMotionStateHandler
setWristAndMotionStateHandler:
_lastUnlockedByPairedUnlock
_inPosition
_canRetrySetup
_sentLockedState
_checkingWristState
_waitingForAuthToken
_preventingExitForSetup
_onWristForCurrentSession
_checkingWristAndMotionState
_wristOnDate
_requestID
_enableTimer
_tempLongTermKey
_sessionStartDate
_unlockSessionID
_longTermKeyTimer
_deviceOffWristForSessionID
_wristAndMotionTimer
_positionSemaphore
_lastWakeGestureRecord
_dailyMetrics
_metricDates
_dailyMetricReporter
_enableHandler
_wristAndMotionStateHandler
TB,N,V_inPosition
TB,V_canRetrySetup
T@"NSString",&,V_requestID
TB,V_sentLockedState
T@"NSTimer",&,V_enableTimer
T@"NSData",&,V_tempLongTermKey
TB,V_checkingWristState
TB,V_waitingForAuthToken
T@"NSDate",&,V_sessionStartDate
T@"NSString",C,V_passcode
Tq,V_unlockSessionID
TB,V_preventingExitForSetup
TB,V_onWristForCurrentSession
TB,V_checkingWristAndMotionState
T@"NSObject<OS_dispatch_source>",&,V_longTermKeyTimer
Tq,V_deviceOffWristForSessionID
T@"NSObject<OS_dispatch_source>",&,V_wristAndMotionTimer
T@"NSObject<OS_dispatch_semaphore>",&,V_positionSemaphore
T@"SDUnlockMotionDetector",&,V_motionDetector
T@"SDUnlockWakeGestureRecord",&,V_lastWakeGestureRecord
T@"SFPairedUnlockDailyEvent",&,V_dailyMetrics
T@"SDUnlockLockMetricDates",&,V_metricDates
T@"NSBackgroundActivityScheduler",&,V_dailyMetricReporter
T@?,C,V_enableHandler
T@?,C,V_wristAndMotionStateHandler
T@"NSDate",&,V_wristOnDate
TB,V_lastUnlockedByPairedUnlock
setHasSessionID:
_authToken
TI,N,V_sessionID
T@"NSData",&,N,V_authToken
preventExitForLocaleIfNeeded
pairingStorePath
activeDeviceName
initWithPairingID:pairingStorePath:deviceName:
setSecurityManager:
activeDeviceDescription
lockState
pairingCompatibilityState
deviceIsPaired
updateExitPrevention
metrics
setMetrics:
devicesDidFailToPair:
pairingStatusChanged:
pairingDidBegin:
deviceDidEnterConfigState:
disableUnlockPairingForSecManager:
resetAll
abortDevicePairingWithReason:
shouldAbort
activeDevicesMatch
logMetrics
setIdsController:
unlockTimer
setUnlockTimer:
_setupAuthSession
_unlockAuthSession
_stashBagSession
_idsController
_securityManager
_metrics
_unlockTimer
T@"NSObject<OS_dispatch_source>",&,V_unlockTimer
Tq,V_setupAuthSession
Tq,V_unlockAuthSession
Tq,V_stashBagSession
T@"SDUnlockIDSController",W,V_idsController
T@"SDUnlockSecurityManager",&,V_securityManager
T@"SFPairedUnlockEvent",&,V_metrics
_btPipeEnsureStarted
_activityMonitorLastUserEventDelta
copyMyAppleIDAndReturnError:
securityLevel
defaultStore
activeAccount
sharedInstance
authKitAccountWithAltDSID:
securityLevelForAccount:
accountName
meDeviceFMFDeviceID
meDeviceIDSDeviceID
meDeviceName
idsIsSignedIn
idsDeviceArray
_idsAppleTVCount
_idsContinuityDeviceCount
_idsHomePodCount
_idsShouldEncryptActivityLevel
setLabel:
_handleAirDropDiscoverableModeChanged:
_handleAppleIDChanged:
_activityMonitorMediaAccessControlSettingChanged:
_activityMonitorWatchWristStateChanged:
_activityMonitorScreenStateChanged:
_activityMonitorUILockStatusChanged:
_unlockApproveBluetoothIDsChanged:
_btPipeStateChanged:
_smartCoverStatusChanged:
_wirelessCriticalChanged:
_bleAdvertisingAddressChanged
setCallChangedHandler:
_idsMeDeviceChanged
setMeDeviceChangedHandler:
setScreenOnChangedHandler:
setScreenSaverChangedHandler:
setWifiStateChangedHandler:
setManateeChangedHandler:
_idsEnsureStarted
_activityMonitorEnsureStopped
_identificationEnsureStopped
_bleNearbyActionAdvertiserEnsureStopped
_bleNearbyActionScannerEnsureStopped
_bleNearbyInfoAdvertiserEnsureStopped
_bleNearbyInfoScannerEnsureStopped
_bleProximityPairingScannerEnsureStopped
_btPipeEnsureStopped
_idsEnsureStopped
initWithBytes:length:
bleProximityRSSIEstimatorInfo
setRSSIEstimatorInfo:
_activityMonitorEnsureStarted
_identificationEnsureStarted
_bleNearbyActionAdvertiserShouldAdvertise
_bleNearbyActionAdvertiserEnsureStarted
_bleNearbyActionScannerShouldScan
_bleNearbyActionScannerEnsureStarted
_bleNearbyInfoAdvertiserShouldAdvertise
_bleNearbyInfoAdvertiserLingerIfNeeded
_bleNearbyInfoAdvertiserEnsureStarted
_bleNearbyInfoScannerShouldScan
_bleNearbyInfoScannerEnsureStarted
_bleProximityPairingScannerShouldScan
_bleProximityPairingScannerEnsureStarted
_activityMonitorUpdate
_bleNearbyInfoAdvertiserUpdate
_activityMonitorCarPlayStatusChanged:
_activityMonitorMultipleUsersLoggedInChanged:
_activityMonitorCurrentLevelAndNeedsPoll:recentUserActivity:
activeCallCount
_activityMonitorUpdateUserActive:
_enhancedDiscoveryScreenChange:
_bleNearbyInfoAdvertiserLingerStart:
screenSaverActive
advertiseRate
authTagOverride
deviceColorCode
deviceModelCode
needsKeyboard
sessionFlags
problemFlags
requestSSID
targetAuthTag
numberWithUnsignedChar:
_bleUpdateAuthTagIfNeeded
setAdvertiseRate:
_idsBluetoothDeviceIDsForLEPipe
setLePipeDevices:
setPayloadFields:
_bleUpdateScanner:typeFlag:
_deviceDiscoveryBLEDeviceFound:type:
_deviceDiscoveryBLEDeviceLost:type:
_deviceDiscoveryBLEDeviceChanged:type:changes:
_deviceDiscoveryBLEScanStateChanged:type:
setRssiLog:
_disableEnhancedDiscovery:
statusFlags
_idsShouldAdvertiseNearbyInfo
_bleEncryptActivityLevel:
_bleNearbyInfoAdvertiserUpdateAddAudioRoutingScore:
_bleNearbyInfoAdvertiserUpdateAddHotspotInfo:
lePipeDevices
needsAWDL
autoUnlockEnabled
autoUnlockWatch
duetSync
watchLocked
meDeviceIsMe
wifiFlags
_bleNearbyInfoAdvertiserShouldAddField3
_newZeroingDataWithBytes:length:
dataWithData:
sendData:completion:
_unlockReceivedFrameData:peer:device:
_bleNearbyInfoReceivedFrameType:src:end:cnx:
_setupHandleCreateSession:data:
_setupHandleSessionCreated:data:
_setupHandleSessionEncryptedFrame:type:cnx:
eventMessageHandler
setBodyData:
serviceReceivedFrameType:serviceType:data:peer:
sessionReceivedFrameType:serviceType:data:peer:
setHeaderFields:
requestMessageHandler
responseMessageInternalHandler
addClient:
setAcceptor:
connectionState
initWithDevice:acceptor:
activateDirect
removeClient:
_idsBluetoothDeviceIDsForSharing
getPeerUUID
sendFrameType:payload:completion:
authTagForData:type:error:
scanCache
scanRateOverride
payloadFilterData
setPayloadFilterData:mask:
setScanCache:
trackedPeers
setTrackedPeers:
performUpdate:
bleProximityInfoForActionType:device:
setInsideMediumBubble:
setInsideSmallBubble:
setCloseProximityEstimatorMedium:
setCloseProximityEstimatorSmall:
bleProximityInfoForType:device:allInfo:
decimalDigitCharacterSet
rangeOfCharacterFromSet:
initWithFormat:
bleProximityRSSIThreshold:
closeProximityEstimatorSmall
closeProximityEstimatorMedium
setupProximityEstimator
bleProximityEstimatorForActionType:device:
setSetupProximityEstimator:
deviceFlags
_bleProximityUpdateDeviceCloseNearbyActionDevice:
infoProximityEstimator
setInfoProximityEstimator:
_idsBluetoothDeviceIDsForiMessage
_idsBluetoothDeviceIDsForSMSRelay
_idsBluetoothDeviceIDsForAnnouncements
decryptedActivityLevel
_enhancedDiscoveryTimerFired
_enableEnhancedDiscovery:
paired
_deviceDiscoveryRequestStart:
idsBluetoothDeviceIDsForSharing
_idsBluetoothDeviceIDsForMe
_idsBluetoothDeviceIDsForHomePods
scanState
deviceFoundHandler
scanStateChangedHandler
_deviceDiscoveryFastScanStart:device:reason:
_identificationHandleDiscoveryStop
_unlockDeviceFilterChangedForRequest:
deviceLostHandler
_deviceDiscoveryFastScanStop:reset:reason:
needsKeyboardOnly
setScanRateOverride:
setDeviceFlags:
idsIdentifier
idsAddCachedIDSIdentifierToDevice:
_bleProximityUpdateNearbyActionDevice:
_identificationHandleDeviceFound:flags:
_deviceCanTriggerEnhancedDiscovery:
_bleProximityUpdateNearbyInfoDevice:
rapportIdentifier
_deviceDiscoveryFastScanEvaluate:device:
_identificationHandleDeviceLost:flags:
setTriggered:
deviceChangedHandler
featureFlags
_identificationGetIdentities
compareWithRPIdentity:
_identificationReIdentify
_identificationCheckFlagsAndACL
getIdentitiesWithFlags:completion:
rpIdentity
setRpIdentity:
setBtAddr:
updateWithRPIdentity:
_identificationIdentifyDevice:sfDevice:
_identificationDecryptAudioRoutingScoreData:device:authTag:identity:
_identificationDecryptHotspotData:device:authTag:identity:
_identificationDecryptActivityLevel:device:authTag:identity:
setDecryptedActivityLevel:
setRequestSSID:
_identificationMaintenanceTimer
setLastUpdateTicks:
lastUpdateTicks
_identificationReIdentifySameAccountDevices:type:
btAddr
verifyAuthTag:data:type:error:
contactID
setIdsIdentifier:
isDeviceValidRIServer:
_idsBluetoothDeviceIDsForSharingLocked
initWithArray:
supportsSMSRelay
supportsMMSRelay
getScanningDeviceCandidates:
_idsDeviceArrayLocked
isConnected
compare:options:
manateeAvailable
setDeviceClassCode:
setDeviceColorCode:
setDeviceModelCode:
receivedFramePeerHandler
_sendMessage:frameType:service:session:
initWithRequestMessage:
setSessionFlags:
_setupSendCreateSession:cnx:
receivedFrameHandler
headerFields
bodyData
_setupSendData:sessionIdentifier:cnx:clientSession:
deviceIDs
setPeerIdentifier:
setSessionCreated:
setReadKey:
setReadNonce:
setWriteKey:
setWriteNonce:
dhSecretKey
sendDataQueue
readKey
readNonce
_setupHandleSessionMessageType:src:end:cnx:session:
clientSession
setClientSession:
setDhSecretKey:
sessionCreated
setSendDataQueue:
writeKey
writeNonce
_startUnlockBLEConnectionWithDevice:encrypted:
setBleEncrypted:
setLatencyCritical:
idsBluetoothDeviceIDsForLEPipe
setLePipeCapable:
_stopUnlockBLEConnectionWithDevice:
_sendUnlockData:toBLEDevice:direct:completion:
sendFrameTypeDirect:payload:completion:
sendDataDirect:completion:
_testPipePing
T@"SDNearbyAgent",R,N
setBoostNearbyInfo:
_bleNearbyInfoReceivedData:cnx:peer:
bleNearbyInfoStartConnectionToDevice:owner:connected:
bleNearbyInfoStopConnectionToDevice:owner:
_btPipeHandleFrameType:data:
bleProximityEstimatorsResetDeviceClose
bleProximityRSSIThresholdForType:device:
idsAddCachedIDSIdentifier:device:
idsBluetoothDeviceIDsForWatches
idsDeviceForBluetoothDeviceID:conflictDetected:
_idsHasActiveWatch
_idsMacCount
sendUnlockDataDirect:toBLEDevice:completion:
unlockStopTestServer
autoUnlockActive
audioRoutingScore
bleAuthTag
boostNearbyInfo
btConnectedDeviceMonitor
enhancedDiscovery
hotspotInfo
_activityCarPlayRegistered
_activityLevelNotifyToken
_activityLevel
_activityMonitorStarted
_activityMultipleUsersRegistered
_activityPollSeconds
_activityRecentSeconds
_activityScreenOn
_activityTimer
_activityUIUnlocked
_activityUserActive
_bleAdvertisingAddress
_bleAudioRoutingScoreEncryptedData
_bleAuthTagOverride
_bleConnections
_bleDiagnosticAdvSuppressLogged
_bleDiagnosticModeClients
_bleHotspotEncryptedData
_bleNearbyActionAdvertiser
_bleNearbyActionAdvertiseActive
_bleNearbyActionAdvertiseDisabled
_bleNearbyActionAdvertiseLingerTimer
_bleNearbyActionDevices
_bleNearbyActionRSSILog
_bleNearbyActionScanAlways
_bleNearbyActionScanNever
_bleNearbyActionScanner
_bleNearbyInfoAdvertiseAlways
_bleNearbyInfoAdvertiseDisabled
_bleNearbyInfoAdvertiseLingerSecs
_bleNearbyInfoAdvertiser
_bleNearbyInfoAdvertised
_bleNearbyInfoAdvertiseLingerTimer
_bleNearbyInfoAirDropUsable
_bleNearbyInfoDevices
_bleNearbyInfoRSSILog
_bleNearbyInfoWiFiP2P
_bleNearbyInfoScanner
_bleProximityEnabled
_bleProximityInfo
_bleProximityInfoOverride
_bleProximityPairingScanner
_bleProximityRSSILog
_btPipeEnabled
_btPipeForced
_btPipePeer
_caEnabled
_caForce
_caMessageNoScans
_caMessageScans
_caPhoneCalls
_caRequests
_caScanIfVeryActive
_caSingleDevice
_contactHashesCached
_contactHashesEnabled
_coreDeviceEnabled
_ddFastScanLastEndTicks
_ddFastScanTimer
_ddNearbyActionDevices
_ddNearbyActionEnabled
_ddNearbyActionScreenOff
_ddNearbyInfoDevices
_ddNearbyInfoEnabled
_ddNearbyInfoScreenOff
_ddProximityPairingDevices
_ddProximityPairingEnabled
_ddProximityPairingScreenOff
_ddRequests
_enhancedDiscoveryAdvActive
_enhancedDiscoveryAssertCount
_enhancedDiscoveryShouldRun
_enhancedDiscoveryTimer
_familyFlags
_familyNotifyToken
_fitnessPairingEnabled
_homePodIdentifiesAsB520
_isRIClientEnabled
_idsAppleTVCountCache
_idsBluetoothDevicesArray
_idsBluetoothDevicesSet
_idsBTtoIDSInfoMap
_idsContinuityDeviceCountCache
_idsDeviceArray
_idsDeviceBTDictionary
_idsDeviceCountBTDictionary
_idsHasActiveWatchCache
_idsHomePodCountCache
_idsIsSignedInCache
_logProxAdvFields
_remoteAppServiceUUID
_services
_sessions
_setupSessions
_systemService
_unlockAdvertiseAlways
_unlockAdvertiseAggressive
_unlockAdvertiseEnabled
_unlockAdvertiseBackground
_unlockAdvertiseWatch
_unlockAdvertiseWatchLocked
_unlockBtPipe
_unlockTestClientTimer
_idDevices
_idEnabled
_idIdentitiesChangedNotifyToken
_idIdentityArray
_idMaintenanceTimer
_systemWillPowerDown
_autoUnlockActive
_boostNearbyInfo
_enhancedDiscovery
_audioRoutingScore
_hotspotInfo
_bleAuthTag
_btConnectedDeviceMonitor
_idSelfIdentity
TB,N,V_autoUnlockActive
Ti,N,V_audioRoutingScore
T@"NSData",R,N,V_bleAuthTag
TB,N,V_boostNearbyInfo
T@"CUBluetoothClient",R,N,V_btConnectedDeviceMonitor
TB,N,V_enhancedDiscovery
TI,N,V_hotspotInfo
T@"RPIdentity",R,N,V_idSelfIdentity
_btAddr
_discoveryFlags
_lastUpdateTicks
T@"NSData",C,N,V_authTag
T@"NSData",C,N,V_btAddr
TQ,N,V_discoveryFlags
T@"NSUUID",&,N,V_identifier
T@"RPIdentity",&,N,V_identity
TQ,N,V_lastUpdateTicks
peerIdentifier
_sessionCreated
_clientSession
_dhSecretKey
_readKey
_readNonce
_writeKey
_writeNonce
_peerIdentifier
_sendDataQueue
T@"SFSession",&,N,V_clientSession
T@"NSUUID",C,N,V_identifier
T@"NSData",C,N,V_dhSecretKey
T@"NSData",C,N,V_readKey
TQ,N,V_readNonce
T@"NSData",C,N,V_writeKey
TQ,N,V_writeNonce
T@"NSUUID",C,N,V_peerIdentifier
T@"NSMutableArray",&,N,V_sendDataQueue
TB,N,V_sessionCreated
accountStore
setCredential:forAccount:serviceID:error:
saveAccount:withCompletionHandler:
aida_tokenForService:
setServiceType:
setServiceIdentifier:
setUsername:
_setPassword:
setIsUsernameEditable:
setShouldUpdatePersistentServiceTokens:
authenticateWithContext:completion:
appleIDAccountWithAppleID:
store
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
aliasesForAccount:
altDSIDForAccount:
appleIDAccountWithAltDSID:
string
dataWithLength:
setHasType:
hasAwdlInfo
hasRangingToken
setHasUnlockDate:
_unlockDate
_rangingToken
TI,N,V_type
T@"NSData",&,N,V_awdlInfo
T@"NSData",&,N,V_rangingToken
Td,N,V_unlockDate
URLByAppendingPathComponent:isDirectory:
replaceIconValue:forKey:
makeDestinationDirectoryWithIdentifier:error:
sf_initWithFileURL:
setCancellationHandler:
_publish
setSf_transferState:
longLongValue
setTotalUnitCount:
setCompletedUnitCount:
transferManager
setUserInfoObject:forKey:
sf_failedWithError:
_unpublish
transferWithIdentifierWasAccepted:
transferWithIdentifierWasDeclined:withFailureReason:
updateTransferWithIdentifier:withState:information:completionHandler:
transferWithIdentifierWasDeclined:
setClassroomDelegate:
_transferIDToProgress
T@"SDAirDropTransferManager",&,N,V_transferManager
handleInitialResponse:
sendInitialRequest
hasStepData
finalizeRegistration
handleFinalize:
subtype
arrayWithCapacity:
typeWithFilenameExtension:conformingToType:
initWithAssetBundleAtURL:
writeFolderRepresentationToDirectory:error:
transformPhotosAssetBundlesToFoldersIfNeededInCompletedURLs:
transferContainsAssetBundles:
_hasPhotos
_hasVideos
TB,R,N,V_shouldExtractMediaFromPhotosBundles
presentEnableRadiosAlertForBluetooth:andWLAN:
configureSettingsForAirDrop
setStatusAndNotify
somethingChanged:
presentDisablePersonalHotspotAlert
_started
_phUserNotification
_radiosUserNotification
T@"<SDAirDropControllerDelegate>",W,V_delegate
_iconHash
T@"NSData",&,N,V_iconHash
notifyClient:
parseResults:port:txtLen:txtRecord:interface:
setPath:
setHostName:
setPortNumber:
_timeout
_resolve
_timer
_url
_name
_path
_hostName
T@"NSURL",R,V_url
T@"NSString",R,V_name
T@"NSString",R,V_type
T@"NSString",R,V_domain
T@"NSString",&,V_path
T@"NSString",&,V_hostName
T@"NSNumber",&,V_portNumber
T^{_DNSServiceRef_t=},R,V_service
Ti,R,V_error
T@"<SDBonjourResolverDelegate>",W,V_delegate
rssi
setDeviceWasLocked:
stopUnlockBLEConnectionWithDevice:
setWaitingForDisplayOrClamshell:
setShouldWaitToCompleteUnlock:
prewarmIdleStartDate
setPrewarmIdleTime:
isWaitingToCompleteUnlock
consumeAuthTokenIfReady
cancelWiFiRequest
sendData:type:completionHandler:
_cancel
setCanceled:
lockKeyBagIfNeeded
sendUnlockConfirmation:withError:
lockedKeyBag
otherProviderCancel
deviceWasLocked
setLockedKeyBag:
_handleCanceledAfterSuccess
setErrorType:
deviceConnected:
displayConfigChanged:
clamshellStateChanged:
waitingForDisplayOrClamshell
setConfigChangeType:
attemptTimedOut
usingProxy
watchModelID
discoveryTime
connectionWaitTime
awdlInfoExchange
keyRequestExchange
tokenExchange
confirmation
awdlInterval
peerFoundInterval
rangingInterval
configChangeType
displayClamshellWaitTime
awdlTotal
btBootstrap
btOverall
prewarmIdleTime
completeExchange
watchRSSI
watchBuildVersion
watchOSVersion
attemptError
errorType
distance
attemptTime
sessionIsValid
generateACMContextData
supportsAlwaysDirect
supportsApproveIcon
setImageData:
setImageHash:
sendAuthPromptRequestWithImageHash:appName:
imageHash
setImageDataAlreadyCached:
imageDataAlreadyCached
sendAuthPromptImageDataIfReady:
chosenDevice
setFirstSend:
useEncryption
startUnlockBLEConnectionWithDevice:encrypted:
sendAWDLInfo
handleFoundBLEDevice:available:lockedOnWrist:
discoveryDate
setDiscoveryDate:
aksPeerAvailable
setFoundPeer:
setConnectionDate:
setDiscoveryTime:
setConnectionTime:
attemptStartDate
setConnectionWaitTime:
setConnected:
receivedAWDLInfo
receivedExchangeRequest
onlyRanging
startAWDLError
rangingStart
displayOrClamshellWaitingDate
setDisplayClamshellWaitTime:
foundPeer
connected
handleTimerFired
confirmationTimer
setConfirmationTimer:
rangingDisabled
setWifiRangingResults:
wifiRangingError
setWifiErrorDomain:
setWifiRangingErrorCode:
setRangingInterval:
wifiErrorDomain
peerInRange:
setInRange:
handlePeerInRange
setRangingTimedOut:
setRangingErrorString:
wifiRangingErrorCode
rangingErrorString
stringByAppendingFormat:
handlePeerOutOfRange
setDistance:
setShouldUnlock:
useCoreLocation
distanceMeters
setAwdlTotal:
setOnlyRanging:
shouldWaitToCompleteUnlock
setWaitingToCompleteUnlock:
setPrewarmIdleStartDate:
coreLocationError
rangingTimedOut
awdlUp
setAwdlUp:
setAwdlInterval:
setPeerFoundInterval:
setRangingStart:
setAttemptError:
connectionDate
firstSend
setAwdlInfoExchange:
handleAuthPromptResponse:
setKeyRequestExchange:
handleSessionKeyExchangeRequest:
exchageResponseDate
setTokenExchange:
setBtBootstrap:
handleSessionAuthToken:
invalidateConfirmationTimer
handleConfirmationACK
setReceivedAWDLInfo:
sentExchangeResponse
invalidateTimerIfReady
setOldWatch:
hasSupportsConfirmationACK
supportsConfirmationACK
hasKeyData
receivedAuthPromptResponse
setReceivedAuthPromptResponse:
setNeedsNewImage:
setReceivedExchangeRequest:
hasUsingRecord
resetSession
setAksSession:
usingRecord
sendKeyExchangeResponseWithData:
sessionAuthToken
hasAuthToken
setSessionAuthToken:
setBtOverall:
startAWDL
confirmationSendDate
setConfirmation:
setAttemptTime:
setCompleteExchange:
setUnlockSucceeded:
sentImageData
peerMacAddress
handleRangingResults:errorCode:
handleAWDLUp
handlePeerFound:
handleRangingStarted
handleWiFiRequestInvalidated
inRange
authToken
setDisplayOrClamshellWaitingDate:
useProxy
wrapPayload:withType:useProxy:senderID:
sendData:bleDevice:completionHandler:
setIconHash:
needsNewImage
subdataWithRange:
setFinalMessage:
setSentImageData:
setExchageResponseDate:
setSentExchangeResponse:
sendUnlockConfirmation:withError:suppressNotification:
sendingConfirmation
setSendingConfirmation:
setSupportsACK:
setSuppressNotification:
setConfirmationSendDate:
restartConfirmationTimer:error:
invalidateNoDisconnect
isAcceptor
getAppName
updateImageData:imageHash:
connectionActivated
sendAWDLInfoData:type:completionHandler:
setBluetoothID:
wifiState
setWifiState:
setOtherProviderCancel:
prewarmStartDate
setProxyDiscoveryTime:
setAutoUnlockDevice:
externalACMContext
oldWatch
setPeerMacAddress:
setWatchRSSI:
displayCount
setDisplayCount:
displayTimer
setDisplayTimer:
setWatchModelID:
setWatchBuildVersion:
setWatchOSVersion:
_useProxy
_wifiState
_otherSessionCancel
_otherProviderCancel
_attemptTimedOut
_chosenDevice
_unlockSucceeded
_canceled
_oldWatch
_onlyRanging
_foundPeer
_connected
_lockedKeyBag
_deviceWasLocked
_receivedAWDLInfo
_receivedAuthPromptResponse
_sendingConfirmation
_sentExchangeResponse
_receivedExchangeRequest
_supportsConfirmationACK
_waitingForDisplayOrClamshell
_sentImageData
_imageDataAlreadyCached
_needsNewImage
_shouldWaitToCompleteUnlock
_waitingToCompleteUnlock
_awdlUp
_watchRSSI
_bluetoothID
_attemptStartDate
_prewarmStartDate
_discoveryTime
_proxyDiscoveryTime
_autoUnlockDevice
_externalACMContext
_imageData
_imageHash
_peerMacAddress
_sessionAuthToken
_displayCount
_configChangeType
_displayTimer
_confirmationTimer
_watchModelID
_watchBuildVersion
_watchOSVersion
_discoveryDate
_connectionDate
_firstSend
_exchageResponseDate
_displayOrClamshellWaitingDate
_confirmationSendDate
_prewarmIdleStartDate
_btOverall
_btBootstrap
_awdlInfoExchange
_keyRequestExchange
_tokenExchange
_confirmation
_peerFoundInterval
_awdlTotal
_attemptTime
_completeExchange
_connectionTime
_connectionWaitTime
_displayClamshellWaitTime
_prewarmIdleTime
TB,N,V_canceled
TB,N,V_oldWatch
TB,N,V_onlyRanging
TB,N,V_foundPeer
TB,N,V_connected
TB,N,V_lockedKeyBag
TB,N,V_unlockSucceeded
TB,N,V_deviceWasLocked
TB,N,V_receivedAWDLInfo
TB,N,V_receivedAuthPromptResponse
TB,N,V_sendingConfirmation
TB,N,V_sentExchangeResponse
TB,N,V_receivedExchangeRequest
TB,N,V_supportsConfirmationACK
TB,N,V_waitingForDisplayOrClamshell
TB,N,V_sentImageData
TB,N,V_imageDataAlreadyCached
TB,N,V_needsNewImage
TB,N,V_shouldWaitToCompleteUnlock
waitingToCompleteUnlock
TB,N,GisWaitingToCompleteUnlock,V_waitingToCompleteUnlock
T@"NSData",C,N,V_peerMacAddress
T@"SDUnlockSessionAuthToken",&,N,V_sessionAuthToken
Ti,N,V_watchRSSI
Tq,N,V_displayCount
Tq,N,V_configChangeType
T@"NSObject<OS_dispatch_source>",&,V_displayTimer
T@"NSObject<OS_dispatch_source>",&,V_confirmationTimer
TB,N,V_awdlUp
T@"NSString",&,N,V_watchModelID
T@"NSString",&,N,V_watchBuildVersion
T@"NSString",&,N,V_watchOSVersion
T@"NSDate",&,N,V_discoveryDate
T@"NSDate",&,N,V_connectionDate
T@"NSDate",&,N,V_firstSend
T@"NSDate",&,N,V_exchageResponseDate
T@"NSDate",&,N,V_displayOrClamshellWaitingDate
T@"NSDate",&,N,V_confirmationSendDate
T@"NSDate",&,N,V_prewarmIdleStartDate
Td,N,V_btOverall
Td,N,V_btBootstrap
Td,N,V_awdlInfoExchange
Td,N,V_keyRequestExchange
Td,N,V_tokenExchange
Td,N,V_confirmation
Td,N,V_peerFoundInterval
Td,N,V_awdlTotal
Td,N,V_attemptTime
Td,N,V_completeExchange
Td,N,V_connectionTime
Td,N,V_connectionWaitTime
Td,N,V_displayClamshellWaitTime
Td,N,V_prewarmIdleTime
T@"NSUUID",&,N,V_bluetoothID
TB,N,V_useProxy
TB,N,V_wifiState
TB,N,V_otherSessionCancel
TB,N,V_otherProviderCancel
TB,N,V_attemptTimedOut
TB,N,V_chosenDevice
T@"NSDate",&,N,V_attemptStartDate
T@"NSDate",&,N,V_prewarmStartDate
Td,N,V_discoveryTime
Td,N,V_proxyDiscoveryTime
TQ,N,V_connectedBluetoothDevices
T@"SFAutoUnlockDevice",&,N,V_autoUnlockDevice
T@"NSData",&,N,V_externalACMContext
T@"NSData",&,N,V_imageData
T@"NSData",&,N,V_imageHash
onqueue_enumerateRemoteObjectProxiesUsingBlock:
onqueue_remoteObjectProxyForConnection:usingBlock:
onqueue_activate
onqueue_invalidate
onqueue_connectionInvalidated:
setActiveConnections:
retainArguments
invoke
exceptionWithName:reason:userInfo:
replacementObjectForXPCConnection:encoder:object:
connection:handleInvocation:isReply:
_invalidateDone
_activeConnections
T@"NSSet",C,N,V_activeConnections
T@"NSXPCConnection",R,C,N
T@"NSXPCInterface",R,N
firstUnlockHandler
powerUnlimitedChangedHandler
manager:didStartAuthenticationFor:
manager:didFailAuthenticationFor:error:
handleKeyBagStateChanged
handleOnWristStateChanged
sharedLockManager
lastUnlockedByPairedUnlock
initWithUnlockType:
wristOnDate
setWristOnDate:
setMotionDetectedHandler:
motionDetected
installApplication:withOptions:error:
initWithUnsignedInteger:
isRunningInStoreDemoMode
isAirDropAppInstallationAllowed
returnPreventUntilDate
returnHasActiveTimer
hasType
rangingToken
hasUnlockDate
unlockDate
initWithAwdlInfo:isRangingInitiator:rangingPeer:queueAvailableHandler:awdlStartedHandler:peerFoundHandler:rangingStartedHandler:rangingCompletedHandler:invalidationHandler:
updateWiFiRequest:setRangingPeer:
success
hasErrorCode
scheduleWiFiRequest:
initWithMacAddressAsData:secureRangingKeyID:
setClRangingPeer:
setMacAddressData:
shouldUnlock
cancelWiFiRequest:
setSuccess:
manager:didCompleteAuthenticationFor:
setUnlockDate:
setType:
setRangingToken:
setAuthenticationType:
setSucceeded:
setKeyExchangeDuration:
setAwdlBringUpDuration:
setRangingDuration:
setPeerFoundDuration:
setTotalDuration:
setWatchHardwareModel:
setWatchSoftwareVersion:
submitEvent
setFailureReason:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
cmfSyncAgentBlockListDidChange
contactStoreDidChange
meCardDidChange
contactForCombinedHash:
obfuscatedShortHashDataForStrings:
descriptorForRequiredKeysForStyle:
initWithKeyType:valueType:
setFirstUnlockHandler:
setPowerUnlimitedChangedHandler:
valueForKey:
firstUnlocked
setMinDelay:
setMaxDelay:
setActionHandler:
integerForKey:
setInteger:forKey:
powerUnlimited
acquireTokenForIdentifier:
initWithBase64EncodedString:options:
trigger
initWithBucketSize:tokenDurationSec:
initWithBucket:dupHistoryLength:
openAtPath:error:
enumerateKeyType:valueType:error:handler:
startAtPath:error:
addKey:value:error:
finishAndReturnError:
close
removeItemAtPath:error:
valueForKey:valueType:error:
enumerateValuesForKey:error:handler:
valueExistsForKey:
events
currentHistoryToken
contact
setStartingToken:
setShouldUnifyResults:
setIncludeGroupChanges:
setAdditionalContactKeyDescriptors:
operatingSystemVersion
isActive
productBuildVersion
fileExistsAtPath:
purgeAvatars
evictWithContactIdentifier:
setImage:forKey:contactIDs:
cacheIsEmpty
imageForKey:contactIDs:
cacheCount
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
initWithBytesNoCopy:length:freeWhenDone:
stringForKey:
removeItemAtURL:error:
queue
authenticateFor:sessionID:
cancel:
handleBLEMessage:
encryptMessageData:deviceID:encryptedMessage:authTag:nonce:
setEncryptedPayload:
setAuthTag:
setNonce:
showAuthenticatedSiriForDeviceID:
initWithDomain:code:userInfo:
%@(%d)
application-identifier
com.apple.sharingd
OneTimeAirDropReset2
SDCancelActionIdentifier
SDOpenActionIdentifier
%@ is not a valid initializer for %@
<%@ %{ptr}
, transferIdentifier: %@
, bundleProxy: %@
SDAirDropHandler.m
Failed to find localAction for %@
DECLINE_BUTTON_TITLE
DISMISS_BUTTON_TITLE
OK_BUTTON_TITLE
OPEN_BUTTON_TITLE
Cannot generate default action for nil bundleProxy
TRANSFER_FROM
_PERSON
_DEVICE
_PLURAL
_IN_PROGRESS
_COMPLETED
_CANCELED
_FAILED
_TEXT
@"LSBundleProxy"16@?0@"LSBundleProxy"8
3rd-party
com.apple.airdrop.transfer.receiver.id.
voicememos
photos
x-apple-calevent
shoebox
stocks
mobilephone
ADClientAddValueForScalarKey
/System/Library/PrivateFrameworks/AggregateDictionary.framework/AggregateDictionary
SDAirDropSession
fractionCompleted
conversionTotal
message/requestIdentifier:%@, deviceIdentifier:%@, requestCreated:%@, hasCompletionHandler:%@, _timeoutTimer:%@, error:%@
linkClient: <%@>, 
<%@: %p, previousKeyIdentifier:%@, %@%@>
<%@: %p, advertisementPayload:%@, command:%@, %@%@>
<%@: %p, messageIdentifier:%@, requestIdentifier:%@, activityIdentifier:%@, deviceIdentifier:%@>
-- SDSmartCoverMonitor --
Smart Cover Closed:           %@
IOHIDEventGetIntegerValue
/System/Library/PrivateFrameworks/IOKit.framework/IOKit
IOHIDEventGetType
IOHIDEventSystemClientCopyServices
IOHIDEventCreateKeyboardEvent
IOHIDServiceClientCopyEvent
AUUseNewWatchVersion
AURestrictOldWatch
AUUseOldProtocolVersion
com.apple.sharingd.auto-unlock.pairing-session-queue
SDAKSPeerStateNotSetUp
SDAKSPeerStateNotAvailable
SDAKSPeerStateOnlyEscrowAvailable
SDAKSPeerStateTokenAvailable
SDAKSPeerStateNoPasscodeUnlockWithinWindow
SDAKSPeerStateNoRemoteUnlockWithinWindow
SDAKSPeerStateTooManyFailedPasscodeEntries
SDAKSPeerStatePasscodeDisabled
SDAKSPeerStateBioLockout
SDAKSPeerStateNotArmed
SDAKSPeerStateUnknown
Unexpected type
supportsACK
suppressNotification
itms-apps://itunes.apple.com/WebObjects/MZStore.woa/wa/docTypeLookup?uti=%@
itms-apps://itunes.apple.com/WebObjects/MZStore.woa/wa/docTypeLookup?scheme=%@
FILE_PERSON_SENDING_REQUIRES_APP_TEXT
FILE_DEVICE_SENDING_REQUIRES_APP_TEXT
LINK_PERSON_SENDING_REQUIRES_APP_TEXT
LINK_DEVICE_SENDING_REQUIRES_APP_TEXT
GET_APP_BUTTON_TITLE
com.apple.news
NEWS_LINK
keyFailed
KEYNOTE_LIVE_DOCUMENT_LINK
BLE Peer disconnected
Starting AWDL failed
-[SDAutoUnlockKeySession createWiFiRequest]_block_invoke_2
AWDL Info Failure
Key Needs To Be Armed
AUDisableIconCache
Auth prompt request missing info
Key failed
Exchange response missing key
Exchange response failed
Failed to generate ranging session token
Creating auth token failed
User denied authorization request
Error posting authorization request
Confirmation failed
WiFi interface disabled on Watch
Failed to serialize AWDL Info
AWDL info exchange failed
Exchange request failed
SDAutoUnlockKeySession
AutoUnlock-Key
com.apple.private.alloy.continuity.auth
com.apple.private.alloy.continuity.auth.classa
@unionOfObjects.uniqueID
SDUnlockSendDataClassClassD
SDUnlockSendDataClassClassA
Pairing key session canceled
Timeout waiting for response from Mac
Timeout waiting for LTKs
Incorrect LTK
Failed to store escrow secret
Failed to create escrow secret
Failed to store session token
Failed to create session token
Could not complete step
No remote step data in message
Device locked
Request failure
Setup created response failed
<%@: %p deviceID=%@ sessionID=%@>
<%@: %p, deviceUniqueID:%@, hasKey:%@, lastReceivedAdvertisementDate:%@>
Failed to decrypt advertisement
v24@?0@"NSData"8@"NSError"16
com.apple.sharingd.ClassroomChanged
jMiqevikb6QWeHOhvLsw6A
No password
View not syncing
Pairing lock session canceled
AUGenerateNoPasscode
AUGenerateNoWristDetection
AUGenerateNoCommunication
Request timeout
Timeout waiting for response to initial request
Timeout waiting for response to token exchange request
Could not setup escrow session
Invalid AKS session
Auto Unlock: Missing information for escrow session (has token = %@, token = %@)
Could not setup device authentication session
Pairing response missing companion device ID
Finalizing pairing failed
Final step failed
Auto Unlock: Creating escrow record failed (error code: %d)
Record failure
Unlock not enabled after pairing
Setup request failed
v16@?0@"NSData"8
UNLOCK_IPHONE_UNLOCK_TITLE
UNLOCK_IPHONE_UNLOCK_BODY
UNLOCK_KEYCHAIN_MISMATCH_TITLE
UNLOCK_KEYCHAIN_MISMATCH_BODY
UNLOCK_INTERNET_SHARING_SETUP_TITLE
UNLOCK_INTERNET_SHARING_SETUP_BODY
UNLOCK_FAILED_COMMUNICATION_TITLE_PHONE
UNLOCK_FAILED_COMMUNICATION_KEY_SYNC_BODY
UNLOCK_PHONE_NOT_SIGNED_IN_TITLE
UNLOCK_PHONE_NOT_SIGNED_IN_BODY
[Internal] Bluetooth cloud pairing in progress.
Auto Unlock can't be set up when your Mac is bluetooth cloud pairing to your Apple Watch. Please try again later.
UNLOCK_WATCH_LOCKED_TITLE_PHONE
UNLOCK_WATCH_LOCKED_BODY_PHONE
UNLOCK_IPHONE_SIGN_IN_TITLE
UNLOCK_IPHONE_SIGN_IN_BODY
UNLOCK_PASSCODE_AND_WRIST_DETECTION_REQUIRED_TITLE_PHONE
UNLOCK_PASSCODE_AND_WRIST_DETECTION_REQUIRED_BODY_PHONE
UNLOCK_WRIST_DETECTION_REQUIRED_TITLE_PHONE
UNLOCK_WRIST_DETECTION_REQUIRED_BODY_PHONE
UNLOCK_PASSCODE_REQUIRED_TITLE_PHONE
UNLOCK_PASSCODE_REQUIRED_BODY_PHONE
UNLOCK_FAILED_COMMUNICATION_BODY_PHONE
UNLOCK_OLD_PROTOCOL_TITLE
UNLOCK_OLD_PROTOCOL_BODY
UNLOCK_NEW_PROTOCOL_TITLE
UNLOCK_NEW_PROTOCOL_BODY
SharingXPCHelperGroupContactIcon-Contacts
SharingXPCHelperGroupContactIcon for contacts %{private}@ %@ iconData at index %llu
needsImageData
usingRecord
BonjourBrowse
BonjourAdvertise
Stop
sender
bytesPerSec
modelCode
legacy
totalBytesBucket
discoverabilityLevel
fromShareSheet
com.apple.sharing.AirDrop.TransferResult
TimeSpent
time
TransferredCount
count
browserID
modelName
bonjourPTRDiscoveryMs
bonjourTXTDiscoveryMs
bonjourResolveMs
tcpConnectionMs
tlsHandshakeMs
idQueryMs
totalDiscoveryWithoutBonjourPTRMs
totalDiscoveryMs
verifiableID
awdlVersion
platform
com.apple.sharing.AirDrop.PeerDiscoveredInfo
startTimestamp
firstDiscoveryMs
totalPeersDiscovered
maxPeersDiscovered
transfersInitiated
transfersCompleted
discoveryLevel
com.apple.sharing.AirDrop.SessionInfo
activityType
No user action
com.apple.sharing.AirDrop.SheetActivityType
### BEGIN: %@ #########################
##### END: %@ #########################
duration
ConnectBack
bytesTransferred
NotSet
100M
250M
500M
ILIFE_ITEM
com.apple.sharing.SDNetworkBrowser
SharingXPCHelperImageItem-ImageTitle
SharingXPCHelperImageItem-ImageData
SharingXPCHelperImageItem-CacheLookupKey
SharingXPCHelperImageItem-ContactIDsKey
SharingXPCHelperImageItem for %{private}@ %@ imageData
stashToken
com.apple.CloudKit.ShareBear
keynote
SHARED_KEYNOTE_DOCUMENT_LINK
numbers
SHARED_NUMBERS_DOCUMENT_LINK
pages
SHARED_PAGES_DOCUMENT_LINK
SHARED_ICLOUD_DOCUMENT_LINK
%@ %@
requestID
com.apple.mobilesafari
WEBSITE
AirDropID
Upload
Discover
No Files
System Sleep
Invalid File
Not Enough Space
Transfer Failed 1
File Not Readable
WiFi Disabled
WLAN Disabled
Authentication Failed
com.apple.sharingd.AirDropPeerChanged
com.apple.sharingd.AirDropTransferInitiated
com.apple.airdrop.queue
encDsID
AirDrop
NO_APPLE_ID_ACCOUNT_ALERT_TEXT
OPEN_SETTINGS_BUTTON_TITLE
CANCEL_BUTTON_TITLE
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE
SDStreamActivityIdentifier
Publishing:%@
Registered Activities:%d
Connected Streams:%ld
Could not set up internal streams
Wi-Fi not enabled
SDSetupAgent
Discovery still active during dealloc
Scan timer still active during dealloc
PINPair still active during dealloc
-[SDSetupAgent setPreventRepair:]
Prevent repair changed: %s -> %s
-- SDSetupAgent --
Discovery: %@, %ld needSetup, %ld triggered
ScanTimer: %s, %d seconds
    %s %@
TRIG
----
PINPair service: %@
PINPair session: %@, UUID %@
PINPair dialog: %s
Problems: %#ll{flags}
, RepairService On
RepairSession: Yes, %@
WatchScanner: %@
Wi-Fi Password Sharing: granting %s, requesting availability: %#{flags}
Status Monitor Phone Hashes:
Validation Record Phone Hashes:
Status Monitor Email Hashes:
Validation Record Email Hashes:
-[SDSetupAgent _activate]
com.apple.ManagedConfiguration.profileListChanged
-[SDSetupAgent _activate]_block_invoke
Profiles changed
-[SDSetupAgent _invalidate]
-[SDSetupAgent nfcTagReaderUIActivateWithEndpoint:params:completion:]_block_invoke
### Ignoring NFC Tag Reader UI when already showing UI
Prox UI Already Active
Start NFC Tag Reader UI
NFCTagReaderMainController
NFCUI
-[SDSetupAgent openSetupURL:]
openSetupURL not supported on current platform
-[SDSetupAgent _openSetupURL:]
_openSetupURL not supported on current platform
nearbyAuthTagFilter
-[SDSetupAgent prefsChanged]
AuthTag filter: %@ -> %@
saCDP
Repair CDP enabled: %s -> %s
pwsAutoGrant
Wi-Fi password sharing autoGranting enabled: %s -> %s
pwsGrantingEnabled
Wi-Fi password sharing granting enabled: %s -> %s
saRepairEnabled
Repair enabled: %s -> %s
saRepairSilent
Repair silent: %s -> %s
saScanSeconds
Scan seconds: %d -> %lld
saServerEnabled
saWatchMigration
WatchMigration enabled: %s -> %s
saWatch
WatchSetup enabled: %s -> %s
-[SDSetupAgent reenableProxCardType:]
Re-enabled prox card type %s
Re-enable B238Setup after WiFi Connects
-[SDSetupAgent retriggerProximitySetup:]_block_invoke
Re-triggering setup UI for %@
### Re-trigger failed: no triggered devices
-[SDSetupAgent showDevicePickerWithInfo:completion:]_block_invoke
### Ignoring Device Picker UI when already showing UI
Start Device Picker UI
ProfileDevicePickerMainController
DevicePicker
-[SDSetupAgent triggerHomeKitDeviceDetectedWithURL:completion:]_block_invoke
### Ignoring HomeKit Device Detected UI when already showing UI
Triggering HomeKit Device Detected UI: '%@'
com.apple.itunesstored.accountschanged
-[SDSetupAgent _ensureClientStarted]_block_invoke
iTunes accounts changed
-[SDSetupAgent _ensureClientStarted]
ScanEligible: %s -> %s
Start scan timer for %{dur}
SetupAgent
WatchScan start
-[SDSetupAgent _ensureClientStarted]_block_invoke_2
BLE WatchSetup found %@
BLE WatchSetup lost %@
BLE WatchSetup changed %@
### WatchScan start failed: %@
Discovery stop (shouldn't scan)
WatchScan stop (shouldn't scan)
-[SDSetupAgent _ensureClientStopped]
Discovery stop (stopped)
WatchScan stop (stopped)
Triggered
-[SDSetupAgent _deviceFound:]
Triggering proximity ApplePay with %@
com.apple.applepay.proximity
Ignoring proximity AppleTVPair with another %@
Ignoring proximity AppleTVPair when not allowed for %@
Triggering proximity AppleTVPair with %@
Ignoring proximity AppleTVSetup with another %@
Ignoring proximity AppleTVSetup when not allowed for %@
Triggering proximity AppleTVSetup with %@
Ignoring proximity HomePodSetup with another %@
Ignoring proximity HomePodSetup when not allowed for %@
Triggering proximity HomePodSetup with %@
HomePodSetup action type is %s
Triggering proximity DeviceDiagnostics with %@
com.apple.diagnosticextensionsd.sharing-wakeup
Ignoring proximity iOSSetup with another %@
Ignoring proximity iOSSetup when not allowed for %@
Ignoring proximity iOSSetup during resume: %@
Triggering proximity iOSSetup with %@
Ignoring proximity iOSSetup in EDU mode
Ignoring proximity Repair with another %@
Ignoring proximity Repair when not allowed for %@
Ignoring unpaired proximity Repair with %@
Triggering proximity Repair silent with %@
Ignoring proximity WHASetup with another %@
Ignoring proximity WHASetup when not allowed for %@
Triggering proximity WHASetup with %@
Ignoring proximity AuthenticateAccounts with another %@
Triggering proximity AuthenticateAccounts with %@
WPS: Ignoring Wi-Fi Password Sharing request when not allowed for %@
WPS: Triggering Wi-Fi Password Sharing with %@
WPS: Shouldn't offer password, ignoring triggered device: %@
Setup
action
com.apple.sharing.SetupTriggered
-[SDSetupAgent _launchAppWithMachServiceName:]
Launch XPC '%@' start
-[SDSetupAgent _launchAppWithMachServiceName:]_block_invoke
Launch XPC event: %{xpc}
SharingXPCLaunch
-[SDSetupAgent _launchAppWithMachServiceName:]_block_invoke_2
Launch XPC '%@' finish
com.apple.sharing.DeviceSetup
-[SDSetupAgent _postDeviceSetupNotificationForDevice:present:]
-[SDSetupAgent _appleAccountSignIn:]_block_invoke
Apple Account signed in
-[SDSetupAgent _hsa2Changed]
Primary HSA2 changed
-[SDSetupAgent _iTunesAccountsChanged]
Resetting prox card triggers on iTunes
-[SDSetupAgent _scanTimerFired]
Scan stop timer fired
-[SDSetupAgent _screenStateChanged]_block_invoke
-[SDSetupAgent _shouldOfferPassword:]
WPS: Ignoring pw request from non-contact peer
WPS: Ignoring pw request from blocked-contact peer
WPS: Ignoring pw request without requestSSID
ssid
shareMode
### WPS: Get network share mode failed: %#m
### WPS: Unexpected error checking pws sharable: %@
WPS: Should share network "%@": %s
-[SDSetupAgent _uiLockStatusChanged]_block_invoke
AppleTVSetupMainController
AppleTVSetupUI
HomeKitDeviceDetectedMainController
HomeKitDeviceDetected
PINPairMainController
PairUI
com.apple.Remote
com.apple.TVRemote
RepairMainController
RepairUI
repairFlags
B238SetupMainController
HomePodSetup_PRX
SharingViewService.HomePodSetupFlowViewController
HomeDeviceSetup
enable_viewservice
HDSViewService.HomePodSetupFlowViewController
deviceModelCode
B238SetupUI
DeviceToDeviceSetup_PRX
SharingViewService.D2DSetupFlowViewController
iOSSetupMainController
iOSSetupUI
autoStart
deviceClassCode
05938CDC
WatchSetupViewControllerProxy
WatchSetupUI
advertisingName
WHASetupMainController
WHASetupUI
ProxCardKitTestRemoteViewController
Test
authenticate_accounts_prx
SharingViewService.AuthenticateAccountsFlowViewController
AuthenticateAccountsMainController
AuthenticateAccountsUI
-[SDSetupAgent _uiStartWiFiPasswordSharing:]
WPS: Not showing UI for non-contact peer
### WPS: Not showing UI, no request SSID
### WPS: Neither email nor phone hashes found
PasswordSharing_PRX
SharingViewService.PasswordSharingFlowViewController
PasswordSharingViewControllerProxy
WiFiPasswordSharing
-[SDSetupAgent _uiStartWithDevice:viewControllerName:xpcEndpoint:label:unlessApps:extraInfo:]
%@ not supported
-[SDSetupAgent _uiStartForMacWithDevice:label:extraInfo:]
-[SDSetupAgent _uiStopIfNeededWithDevice:]
Stop UI not supported
-[SDSetupAgent _watchFastScanStartIfAllowed:]
Fast scan rate start for %@
-[SDSetupAgent _watchFastScanStop]
Fast scan rate stop
-[SDSetupAgent _watchFound:]
Ignoring proximity WatchSetup with another %@
Triggering proximity WatchSetup with %@
-[SDSetupAgent _wifiStateChanged]
Resetting prox card triggers now that WiFi is connected
-[SDSetupAgent _ensureServerStarted]
PINPair start
-[SDSetupAgent _ensureServerStarted]_block_invoke
PINPair ending session on error: %{error}
PINPair invalidated
-[SDSetupAgent _ensureServerStarted]_block_invoke_2
PINPair activated
### PINPair activate failed: %@
-[SDSetupAgent _ensureServerStopped]
PINPair hide PIN on stop
PINPair service stop
PINPair session stop
-[SDSetupAgent _pinPairHandleRequest:]
### PINPair request no UUID: %#m
### PINPair request UUID failed
PINPair session %@ ending for %@
PINPair session create %@
-[SDSetupAgent _pinPairHandleRequest:]_block_invoke
PINPair session %@ completed %{error}
v20@?0I8@"NSString"12
-[SDSetupAgent _pinPairHandleShowPIN:]
PINPair show PIN '%@'
### PINPair PBS proxy failed
PINPair hide old PIN
PIN_PAIR_DIALOG_MESSAGE
PIN_PAIR_DIALOG_TITLE
-[SDSetupAgent _pinPairHandleShowPIN:]_block_invoke
PINPair dialog error: %@
PINPair dialog ended %s
(user canceled)
### PINPair dialog failed
-[SDSetupAgent _pinPairHandleHidePIN]
PINPair hide PIN
-[SDSetupAgent _pwsHandleUserResponse:device:info:]
### pwsHandleUserResponse not supported on current platform
-[SDSetupAgent _pwsHandleProgressEvent:info:]
PWS progress: %s, %@
-[SDSetupAgent _repairEnsuredStarted]
TTF: Problem monitoring start
com.apple.sharing.problems
lastDisconnectError
TTF: VPN initial: %{error}
-[SDSetupAgent _repairEnsuredStarted]_block_invoke_4
TTF: WiFi health status changed: %s
TTF: RepairService start
-[SDSetupAgent _repairEnsuredStarted]_block_invoke
TTF: Problem reporting repair progress: %s %@
v20@?0I8@"NSDictionary"12
-[SDSetupAgent _repairEnsuredStopped]
TTF: RepairService stop
TTF: Problem monitoring stop
-[SDSetupAgent _repairHandleCompletion]
TTF: Repair complete
-[SDSetupAgent _repairProblemCheck]
Repair periodic check: CDP %s
-[SDSetupAgent _repairProblemFlagsChanged]
TTF: Problem flags changed: %#ll{flags}
-[SDSetupAgent _repairSilentStart:]
Ignoring proximity repair for WiFi 802.1x (needs user)
captive
likelyCaptive
Ignoring proximity repair for captive WiFi (needs user)
-[SDSetupAgent _repairSilentProgress:info:]
Repair silent progress: %s %##@
Repair silent done: %{error}
Repair completed: %@
Repair Finalized
NEVPNConnectionErrorDomainIPSec
-[SDSetupAgent observeValueForKeyPath:ofObject:change:context:]_block_invoke
TTF: VPN changed: %{error}
-[SDSetupAgent testHomeKitDeviceDetected:]
Testing HomeKit Device Detected (%@)
com.apple.Home://a/s?n=Test
-[SDSetupAgent testNFCUI:]
Testing NFC UI (%@)
-[SDSetupAgent testPairUI:]
Testing pair UI (%@)
testParams
-[SDSetupAgent testRepairUI:]
-nowifi
00000000-0000-0000-0000-000000000003
-badwifi
00000000-0000-0000-0000-000000000004
Living Room
-[SDSetupAgent testSetupUIB238:]
Testing Setup UI B238 (%@)
-code
00000000-0000-0000-0000-000000000005
-noicloud
00000000-0000-0000-0000-000000000006
-nohsa2
00000000-0000-0000-0000-000000000007
-noitunes
00000000-0000-0000-0000-000000000008
-nohome
00000000-0000-0000-0000-000000000009
-nokeychain
00000000-0000-0000-0000-00000000000A
-sharesplit
00000000-0000-0000-0000-00000000000B
-audio
00000000-0000-0000-0000-00000000000C
-siri
00000000-0000-0000-0000-00000000000D
-AppleMusic
00000000-0000-0000-0000-00000000000E
-WiFiBadEnterprise
00000000-0000-0000-0000-00000000000F
device
color
Testing Setup UI HomePod action=%d device=%d color=%d
-[SDSetupAgent testSetupUIiOS:]
Testing Setup UI iOS (%@)
-ipad
-ipod
-[SDSetupAgent testSetupUIPasswordSharing:]
WPS: Testing Setup UI Password Sharing (%@)
WiFiNetwork
-rich
-hsfail
-device
-long
-[SDSetupAgent testSetupUIWatch:]
Testing Setup UI Watch (%@)
-[SDSetupAgent testSetupUIWHA:]
Testing Setup UI WHA (%@)
-mismatch
-keychain
-[SDSetupAgent testUIAppleTVSetup:]
Testing AppleTVSetup UI (%@)
PBSSystemServiceConnection
/System/Library/PrivateFrameworks/PineBoardServices.framework/PineBoardServices
PBSMediaRemoteServiceDialogOptionMessageKey
PBSMediaRemoteServiceDialogOptionPINKey
PBSMediaRemoteServiceDialogOptionTimeoutKey
PBSMediaRemoteServiceDialogOptionTitleKey
Final
SessionStarted
SessionEnded
SessionSecured
PreAuthStart
PreAuthFinish
SecurityStart
SecurityFinished
PasswordSending
PasswordSent
PasswordReceived
PasswordAccepted
PasswordDeclined
NEVPNConnection
/System/Library/Frameworks/NetworkExtension.framework/NetworkExtension
Good
Bad802.1x
ConnectStart
SecurityAPCLoopStart
SecurityFinish
BasicConfigStart
BasicConfigFinish
StepStart
StepFinish
PreFinish
SetupFinished
SetupResumed
SetupSuspend
SetupPeerSWUpdate
CheckingiCloud
CheckingAppleMusic
CheckingAccount
WiFiPoweredOff
RecognizeVoice
SiriForEveryone
WiFiStart
ActivationStart
iCloudStart
HomeKitStart
CDPSetupStart
HomeKitSetupStart
BuddyStarting
BuddyProgress
BuddyFinished
ReportSuccess
TVLSStart
TVLSFinish
TVLSEstimateStart
TVLSEstimateFinal
TVLSEstimateFailed
TVLSTryAgain
TVLSToneBegan
BackupProgress
SyncProgress
StopSetup
PINPair
MigrateStart
MigrateStop
FileTransferReady
SiriWelcome
SiriDialogA
SiriDialogBStart
SiriDialogBHome
SiriDialogBNews
SiriDialogBWeather
SiriDialogBClock
SiriDialogBMusic
SiriDialogCMusic
SiriDialogCNews
SiriDialogCWeather
SiriSkipDemo
StopSetupLEDs
AudioPasscodeEnded
AuthAccountsStart
AuthAccountsiCloudProgress
AuthAccountsStoreProgress
AuthAccountsGameCenterProgress
v24@?0@"CMAccelerometerData"8@"NSError"16
v16@?0@"CMMotionActivity"8
phoneAutoUnlockWatchMotionActivityWindowSeconds
phoneAutoUnlockWatchStepCountWindowSeconds
v24@?0@"CMPedometerData"8@"NSError"16
phoneAutoUnlockWatchMotionActivityThresholdSeconds
phoneAutoUnlockWatchStepCountThreshold
PUUseAccelerometerMotion
x:%f, y:%f, z:%f
AirDrop/1.0
discovery
[%@:%@]
Connecting to
Sending to
com.apple.Passwords.remoteservice
%@.webloc
webloc
public.heic
SDAirDropClient
com.apple.InCallService
CALL_BUTTON_TITLE
PHONE_LINK
resetReason
errorString
v24@?0@"NSObject<SFAirDropTransferObserverProtocol>"8^B16
SDAirDropTransferManager.m
Failed to find valid handler for transfer id %@
response
com.apple.sharing.AirDropCredentialResponse
com.apple.sharing.transfer-observer
v16@?0@"NSObject<SFAirDropTransferObserverProtocol>"8
v20@?0B8B12B16
Failing transfer with invalid state: %@
%@/%@
v28@?0@"NSString"8@"NSString"16B24
BluetoothAdvertiseScanVersionByte
BluetoothAdvertiseGoodByeDuration
SDActivityAdvertiser
Stopped
Skipping request for
UnexpectedState
-[SDActivityAdvertiser stopForReason:]
-[SDActivityAdvertiser resumeForReason:]
v24@?0@"NSObject<SFActivityAdvertiserClient>"8^B16
com.apple.sharing.handoff.advertising
-------------
Version Byte: %u
Goodbye Timer Interval: %.2f
Advertising Enabled: %@
Should Start: %@
Should Not Advertise Requesters: %@
Is Advertising: %@
Has Power Assertion:%@
Current Advertisement Payload: %@
Current Advertisement Options: %@
FrameworkBundleID
AssertType
PreventUserIdleSystemSleep
AssertName
Handoff
v24@?0C8[2C]12S20
UnexpectedType
v32@?0@"NSUUID"8@"NSData"16@"NSError"24
Resetting
PoweredOff
PoweredOn
UAUserActivityIsForPairedDeviceOptionKey
/System/Library/PrivateFrameworks/UserActivity.framework/UserActivity
Activity
TetheringTargetPresence
TetheringSourcePresence
Invalid
TRANSFER_FROM_IMPORT_FAILED_TEXT
OPEN_WITH_FILES_APP_BUTTON_TITLE
FILES_APP_BUTTON_TITLE
SAVE_TO_ICLOUD_DRIVE_BUTTON_TITLE
com.apple.podcasts
ITUNES_STORE_LINK_PODCAST
autool
com.apple.preference.security.remoteservice
com.apple.Preferences
AutoUnlockPresentedBluetoothError
AutoUnlockPresentedWiFiError
AutoUnlockLastUpsellDate
AutoUnlockLastUpsellState
AutoUnlockDeclinedToEnablePAU
AutoUnlockAlreadyEnabledBefore
AutoUnlockLastSeenVersion
AutoUnlockDoNotCollectTriggerMetrics
AutoUnlockAutoRelockPreventExitReason
ApproveSessionIDs
SDAuthenticationSessionStarted
B8@?0
com.apple.sharingd.auto-unlock.session-manager-queue
Disabled due to profile
com.apple.watch.auto-unlock.disabled
Approve with Apple Watch
Auto Unlock
Apple Watch
Test Mode
Test mode failure
Missing passcode
SPI attempt overlap with prewarm attempt, try again when phone is not prewarming
No enabled devices
UNLOCK_INTERNET_SHARING
Device not connected
Device not nearby
Watch needs to be unlocked
Watch locked and unarmed
UNLOCK_EXPIRED_TEXT
Reached attempt limit
No unlocks in the last %f hrs
Blocked PAU attempt due to Relock
Attempt Cancelled due to Periocular Success
SFAutoUnlockStateUnknown
SFAutoUnlockStateNotInProgress
SFAutoUnlockStateInProgress
SFAutoUnlockStateInProgressNoScan
Trigger Send Failed With Timeout
Unable to Find Proxy Watch
Pairing canceled
com.apple.watch.auto-unlock.enabled
phoneAutoUnlockSkipPrewarmOnNextUnlock
Missing authorization token
Proxied Apple Watch
v16@?0@"SFDevice"8
v20@?0@"SFDevice"8I16
AUBLEScanTimeout
AUScanTimeout
Apple Watch Not Found
Watch Not On Wrist
v20@?0@"SDAutoUnlockSessionWrapper"8B16
UNLOCK_PHONE_UPGRADE_BODY_SIRI_ENABLED
UNLOCK_PHONE_UPGRADE_BODY
### FaceID needs to be enabled for this feature to work
UNLOCK_WLAN_BLUETOOTH_DISABLED
UNLOCK_WIFI_BLUETOOTH_DISABLED
UNLOCK_BLUETOOTH_DISABLED
UNLOCK_WLAN_DISABLED
UNLOCK_WIFI_DISABLED
Auto Unlock State End
Auto Unlock State
Current Date: %@
Ranging Supported: %@
Model Identifier: %@
Device Has Passcode: %@
Unlocked: %@
Lock State Changed: %@
SDAutoFillAgent
-- SDAutoFillAgent --
Granting: %s, Requesting: %s, Scanning: %s
enabled
disabled
Device Discovery: %@, %ld devices
    %@
, TRIG
    Orphaned triggered device: %@
Proximity discovery: %@, %ld devices
    %@
Requesting service: %@
SiriRemoteMonitor: %@
-[SDAutoFillAgent _activate]
-[SDAutoFillAgent _invalidate]
rafGrantingEnabled
-[SDAutoFillAgent prefsChanged]
Enabled: %s -> %s
### Granting disabled via default
rafRateLimitDisabled
Rate limiting disabled: %s -> %s
rafRequestingEnabled
Requesting enabled: %s -> %s
rafRequiresProx
Requires prox: %s -> %s
rafAllowPairedTV
Paired TVs allowed: %s -> %s
saClientEnabled
Proximity monitoring enabled: %s -> %s
Siri remote monitoring enabled: %s -> %s
Scanning enabled: %s -> %s
-[SDAutoFillAgent setPreventNotifications:]_block_invoke
Prevent notifications: %s -> %s
-[SDAutoFillAgent _ensureKeychainCleaned:]
Cleaning up old keys
com.apple.sharing.safaripasswordsharing
### Error fetching keys: %@
Should delete item with end date: %@ and persistent ref: %@
### Deleting %@ error: %@
deviceID
needsSetup
com.apple.sharing.ProxAutoFill
-[SDAutoFillAgent _postSetupNotificationForDevice:]
Posted %@: %##@
-[SDAutoFillAgent triggerProximityAutoFillDetectedWithURL:completion:]
### Failed to get components from url: %@
deviceAddress
Already found device, adding identifier to extra info: %@
Triggering AutoFill from URL: %@
-[SDAutoFillAgent _screenStateChanged:]_block_invoke
Screen state changed to %s
-[SDAutoFillAgent _uiLockStatusChanged:]_block_invoke
UI lock status changed to %s
unlocked
locked
-[SDAutoFillAgent _discoveryEnsureStarted]
Discovery start
AutoFill
-[SDAutoFillAgent _discoveryEnsureStarted]_block_invoke
Discovery activated
### Discovery activate failed: %@
-[SDAutoFillAgent _discoveryEnsureStopped]
Discovery stop
-[SDAutoFillAgent _deviceChanged:]
Ignoring paired TV
-[SDAutoFillAgent _deviceFound:]
Found device: %@
bdAddr
-[SDAutoFillAgent _deviceLost:]
Lost device: %@
-[SDAutoFillAgent _deviceStoppedRequesting:]
Device stopped requesting %@
Untriggering %@
-[SDAutoFillAgent helperStart:]
Helper start
-[SDAutoFillAgent helperStop:]
Helper stop
-[SDAutoFillAgent helper:didPickUsername:password:error:]
Helper: DidPickUsernamePassword
### Message from unrecognized helper
### Helper passing credential, but no handler?
Adding %@ to granted devices
-[SDAutoFillAgent helper:tryPIN:]
Helper: TryPIN %@
-[SDAutoFillAgent helper:userNotificationDidActivate:]
Helper: NotificationDidActivate
-[SDAutoFillAgent helper:userNotificationDidDismiss:]
Helper: NotificationDidDismiss
-[SDAutoFillAgent _proximityEnsureStarted]
Proximity discovery start
v16@?0@"SFBLEDevice"8
v20@?0@"SFBLEDevice"8I16
-[SDAutoFillAgent _proximityEnsureStarted]_block_invoke
Proximity discovery started
### Proximity discovery start failed: %@
-[SDAutoFillAgent _proximityEnsureStopped]
Proximity discovery stop
ATVRemote1,1
ATVRemote1,2
ATVRemote1,3
rafp
-[SDAutoFillAgent _proximityChanged:]
Proximity remote %@ exited at %d
Proximity remote %@ entered at %d
-[SDAutoFillAgent _proximityFound:]
Found proximity device: %@
-[SDAutoFillAgent _proximityLost:]
Lost proximity device: %@
-[SDAutoFillAgent handleInputDidBeginWithFlags:sessionInfo:]
RTI: input did begin with flags: %d
In AutoFill context: %s -> %s
remoteLocalizedAppName
remoteUnlocalizedAppName
remoteAssociatedDomains
remoteBundleID
-[SDAutoFillAgent handleInputDidEndWithFlags:sessionInfo:]
RTI: input did end with flags: %d
-[SDAutoFillAgent _siriRemoteMonitorEnsureStarted]
SiriRemoteMonitor start
-[SDAutoFillAgent _siriRemoteMonitorEnsureStarted]_block_invoke
SiriRemoteMonitor activated
### Error activating SiriRemoteMonitor: %@
-[SDAutoFillAgent _siriRemoteMonitorEnsureStopped]
SiriRemoteMonitor stop
-[SDAutoFillAgent _serviceEnsureStarted]
Requesting service start
-[SDAutoFillAgent _serviceEnsureStarted]_block_invoke_2
Requesting service hide PIN
v32@?0@"NSString"8@"NSString"16@"NSError"24
-[SDAutoFillAgent _serviceEnsureStarted]_block_invoke
Requesting service activated
### Error activating requesting service: %@
-[SDAutoFillAgent _serviceEnsureStopped]
Requesting service stop
-[SDAutoFillAgent _serviceHandleError:]
### Requesting service error: %@
-[SDAutoFillAgent _serviceHandleUsername:password:error:]
### Received credentials error: %@
Received no credentials to handle
Received username: %s, password: %s
-[SDAutoFillAgent _serviceStartRequestingAutoFillIfReady]
Siri remote not yet ready for advertising commands
Requesting service not yet ready for advertising commands
Start requesting AutoFill
-[SDAutoFillAgent _serviceStopRequestingAutoFill]
Stop requesting AutoFill
-[SDAutoFillAgent _serviceTimeoutStart]
Requesting service timeout start
-[SDAutoFillAgent _serviceTimeoutStart]_block_invoke
Requesting service timeout firing
-[SDAutoFillAgent _serviceTimeoutStop]
Requesting service timeout stop
-[SDAutoFillAgent _sessionStart:]
Granting session start
-[SDAutoFillAgent _sessionStart:]_block_invoke_3
### Client error handling pairing succeeded: %@
-[SDAutoFillAgent _sessionStart:]_block_invoke
Granting session: PromptForPasswordPicker
v56@?0@"NSString"8@"NSString"16@"NSString"24@"NSString"32@"NSArray"40@?<v@?@"NSString"@"NSString"@"NSError">48
### Granting session start: %@
-[SDAutoFillAgent _sessionStop:]
### Session completed with error: %{error}
Granting session stop
-[SDAutoFillAgent _sessionHandlePairingSucceededResponse:]
Client handled pairing succeeded response: %@
-[SDAutoFillAgent testKeychain:]
Testing AutoFill keychain (%@)
-[SDAutoFillAgent testRemote:]
Testing AutoFill Siri Remote (%@)
-advStart
-advStop
-advStartDebug
-advStopDebug
-[SDAutoFillAgent testService:]
Testing AutoFill Service (%@)
-start
-stop
-[SDAutoFillAgent testUI:]
Testing AutoFill UI (%@)
-fail
00000000-0000-0000-0000-000000000002
00000000-0000-0000-0000-000000000001
-[SDAutoFillAgent testUI:]_block_invoke_2
Picker username: %@, pw: %@, error: %@
-[SDAutoFillAgent _activateUIDelayTimer]
Activate UI delay timer
-[SDAutoFillAgent _activateUIDelayTimer]_block_invoke
UI delay timer firing
-[SDAutoFillAgent _deactivateUIDelayTimer]
Deactivate UI delay timer
sessionUUID
urlStr
bundleID
localizedAppName
unlocalizedAppName
associatedDomains
com.apple.SharingViewService
PasswordPickerMainController
-[SDAutoFillAgent passwordPickerStart:bundleID:localizedAppName:unlocalizedAppName:associatedDomains:completion:]
### Create remote alert handle failed
Starting AutoFill UI with sessionID %@
### Start UI failed: %#m
-[SDAutoFillAgent remoteAlertHandleDidActivate:]_block_invoke
Alert handle DidActivate
### Unknown alert DidActivate: %@
-[SDAutoFillAgent remoteAlertHandleDidDeactivate:]_block_invoke
Alert handle DidDeactivate
### Unknown alert DidDeactivate: %@
-[SDAutoFillAgent remoteAlertHandle:didInvalidateWithError:]_block_invoke
Alert handle DidInvalidate: %{error}
Unknown Alert DidInvalidate: %{error}
-[SDAutoFillAgent _uiStartIfNeeded:extraInfo:]
No proximity devices, un-triggering TV device %@
UI delay timer active, deferring notification for %@
Triggering ProximityAutoFill with %@
SDProxHandoffAgent
SFCombinedDevice "%@": 
, BLE %@
, CL %@
, CL.MR %@
, notif
, route
, ready
-[SFCombinedDevice canTransition:]
%@ transition not allowed: %@ -> %@
-[SFCombinedDevice resetTicks]
%@ state reset
-[SFCombinedDevice setNextState:]
%@ next state: %@
-[SFCombinedDevice setState:]
%@ state change: %@ -> %@
-[SFNotificationProxy _requestPostOrUpdate:info:mediumVariant:canPost:]
NotifProxy: Ignoring medium, already posted
NotifProxy: Updating notification (already posted) %@
NotifProxy: Posting notification %@
NotifProx: Not handling %@: %@
-[SFNotificationProxy requestRemove:withReason:]
### NotifProxy: RequestRemove failed, unrecognized ID: %@
### NotifProxy: RequestRemove failed, no existing notification
NotifProxy: Remove tracking of %@ per request
NotifProxy: Remove actual notification per request
-[SFNotificationProxy requestRemoveAll]
NotifProxy: Request remove all
-[SFNotificationProxy handleNotificationWasTapped:]
### NotifProxy: Unrecognized notification ID tapped: %@
NotifProxy: Tapped %@
-[SFNotificationProxy handleNotificationWasDismissed:reason:]
NotifProxy: Did dismiss %@ (%@)
-[SFNotificationProxy reset]
NotifProxy: Reset
-- SDProxHandoffAgent --
Enabled: %s, On call: %s, client should advertise: %s, Candidate nearby: %s
CLinkClient (%ld devices): %@
BLE Action Service: %@
ProxClients: (%ld)
BLE NearbyAction Discovery: %@, %ld devices%@
, TIMED OUT
BLE NearbyInfo Discovery: %@
Mapped Devices (%ld), unmapped (%ld):
 - %@
UI Device: (next state = %@)
 - %@
System UI flags: %#{flags} %@, stationary: %s
canTrigger
Throttle events: %d / %d
-[SDProxHandoffAgent activate]_block_invoke
-[SDProxHandoffAgent _invalidate]
chEnabled
-[SDProxHandoffAgent prefsChanged]
Pref enabled: %s -> %s
chBLEScanSecs
Pref BLE scan secs: %f -> %f
chForceShouldAdvertise
Pref force should advertise: %s -> %s
chForceStationary
Pref force stationary: %s -> %s
chHighNormal
Pref HighNormal: %s -> %s
chForceOnCall
Pref force on call: %s -> %s
chIgnoreMediumThrottle
Pref ignore medium throttle: %s -> %s
chMediumBubbleEnabled
Pref medium bubble enabled: %s -> %s
chThrottleMediumTicks
Pref medium bubble last ticks: %d -> %d
chRetriggerSecs
Pref retrigger secs: %f -> %f
chTransferSecs
Pref transfer secs: %f -> %f
chThrottleEventCount
Pref throttle event count: %d -> %d
chThrottleEventMax
Pref throttle event max: %d -> %d
-[SDProxHandoffAgent setPreventNotifications:]_block_invoke
-[SDProxHandoffAgent _updateCandidateIsNearby]
Candidate is nearby: %s -> %s
-[SDProxHandoffAgent _commonEnsureStarted]
System monitor start
-[SDProxHandoffAgent _commonEnsureStarted]_block_invoke_4
System monitor activated
v16@?0@"NSMutableArray"8
-[SDProxHandoffAgent _commonEnsureStopped]
System monitor stop
-[SDProxHandoffAgent _commonCallCountChanged]
Active call count = %d (%d connected), userOnCall %s -> %s, prefForceOnCall = %s
Unanswered call %s -> %s
User no longer on call, cleaning up notifications
Trigger notification for call
-[SDProxHandoffAgent _commonShouldAdvertiseChanged]
Client should advertise changed: %s -> %s, prefForceShouldAdvertise = %s
-[SDProxHandoffAgent _commonScreenStateChanged]
Screen state changed to %s, %@
Locked
Unlocked
-[SDProxHandoffAgent commonSystemUIChanged]_block_invoke
System UI Changed %#{flags}, CanTrigger %s
-[SDProxHandoffAgent _runStateVerify:device:]
### Run state mismatch: %@, expected %@
-[SDProxHandoffAgent _runNotificationPending]
Run notification pending: %@
### No UI ID for request %@
### Notification type not supported: %d
-[SDProxHandoffAgent _runNotificationPendingContent]
### UI Start without notification info?
Run notification pending content: %@, waited: %f
-[SDProxHandoffAgent _runNotificationReady]
### System cannot present UI
### UI Start without UI ID?
### Device is stationary, so we shouldn't trigger notification
### Failed to generate info to present: %@
Delay threshold %f, deferring medium bubble notification for %f seconds
Run notification ready %@
UI Start: %@, medium version: %s
com.apple.sharing.HomePodHandoff.UIStart
notificationType
uiID
-[SDProxHandoffAgent _runNotificationPresented]
Run notification presented %@
-[SDProxHandoffAgent _runNotificationDismissed]
Run notification dismissed %@
-[SDProxHandoffAgent _runTransferInProgress]
Run transfer in progress %@
-[SDProxHandoffAgent _runTransferPending]
Run transfer pending start %@
Run transfer pending threshold %f
### No uiID? %@
-[SDProxHandoffAgent _runTransferReady]
### No UI ID? %@
Run transfer ready %@
### Type not supported: %d
-[SDProxHandoffAgent _runTransferPendingDismiss]
Run transfer pending dismiss %f %@
-[SDProxHandoffAgent _runTransferDone]
Run transfer done
-[SDProxHandoffAgent _runCallHandoffStart:]
### CallHandoff start without CompanionLink device? %@
CallHandoff start
com.apple.sharing.calltransfer
-[SDProxHandoffAgent _runCallHandoffHandleResponse:error:]
### Execute handoff response with error: %@
CallHandoff handle response
-[SDProxHandoffAgent _runCallHandoffHandleDelayTimerFired]
### No staged route after delay
### Call handoff not supported on current platform
-[SDProxHandoffAgent _bleActionDiscoveryEnsureStarted]
BLE action discovery start
HandoffAction
-[SDProxHandoffAgent _bleActionDiscoveryEnsureStarted]_block_invoke
BLE action discovery activated
### BLE action discovery activate failed: %@
BLE action scan rate -> Background with FastScanMatch
BLE action scan rate -> HighNormal
-[SDProxHandoffAgent _bleActionDiscoveryEnsureStopped]
BLE action discovery stop
-[SDProxHandoffAgent _bleActionDeviceChanged:]
%@ Retrigger after dismiss (%d)
%@: Start transfer countdown (%d)
### %@: System state prevents transfer (%d): stationary %s, flags %#{flags}
%@: Cancel pending content (%d, wait: %f)
%@: Make eligible for retrigger after %f (%d)
%@: Not yet eligible for retrigger after %f (%d)
%@ exited medium bubble (%d)
%@: Trigger (%d)
-[SDProxHandoffAgent _bleActionDeviceFoundCandidate:]
### Found candidate has wrong action type %@
BLE action device found: %@
-[SDProxHandoffAgent _bleActionDeviceLost:]
BLE action device lost: %@
-[SDProxHandoffAgent _bleActionScanTimerActivate]
BLE action scan timer activate
-[SDProxHandoffAgent _bleActionScanTimerInvalidate]
BLE action scan timer invalidate
-[SDProxHandoffAgent _bleActionScanTimerFired]
BLE action scan timer fired
-[SDProxHandoffAgent _bleInfoDiscoveryEnsureStarted]
BLE info discovery start
HandoffInfo
-[SDProxHandoffAgent _bleInfoDiscoveryEnsureStarted]_block_invoke_4
BLE info discovery activated
### BLE info discovery activate failed: %@
-[SDProxHandoffAgent _bleInfoDiscoveryEnsureStopped]
BLE info discovery stop
-[SDProxHandoffAgent _bleInfoDeviceChanged:]
BLE info device changed: %@
### Unknown BLE info device changed?
BLE info device has bad rssi: %d, %@
-[SDProxHandoffAgent _bleInfoDeviceFound:]
BLE info device found: %@
-[SDProxHandoffAgent _bleInfoDeviceLost:]
BLE info device lost: %@
-[SDProxHandoffAgent _bleDeviceNearbyEnter:]
Nearby enter (CL.MR): %@
-[SDProxHandoffAgent _bleDeviceNearbyExit:]
Nearby exit (CL.MR): %@
-[SDProxHandoffAgent _bleUpdateMappingAndNearbyCoalesced]
Processing unmapped BLE info devices
-[SDProxHandoffAgent _bleUpdateMappingWithDevice:]
Unable to map BLE info %@
Invalid candidate model? %@, %@
%@ activity level: %s
Mapped %@, CL
Restarting BLE action scan timer
-[SDProxHandoffAgent _clinkEnsureStarted]
CLink start
-[SDProxHandoffAgent _clinkEnsureStarted]_block_invoke_2
Clink device changed %#{flags} %@
v20@?0@"RPCompanionLinkDevice"8I16
-[SDProxHandoffAgent _clinkEnsureStarted]_block_invoke
Clink device found %@
v16@?0@"RPCompanionLinkDevice"8
Clink device lost %@
CLink activated
### CLink activate failed: %@
Registering for call transfer messages
-[SDProxHandoffAgent _clinkEnsureStopped]
CLink stop
-[SDProxHandoffAgent proximityClientStart:]
Proximity client start
-[SDProxHandoffAgent proximityClientStop:]
Proximity client stop
-[SDProxHandoffAgent proximityClientUpdate:]_block_invoke
### Unrecognized client: %@
Proximity client update: %s, cur=%s
-[SDProxHandoffAgent proximityClient:dismissContentForDevice:]
### Proximity client dismiss without UI Device?
Proximity client dismiss %@
-[SDProxHandoffAgent proximityClient:provideContent:forDevice:force:]
### Unexpected content for %@: %@
Proximity client content provided error: %@
Proximity client content for: %@, force: %s: %@
-[SDProxHandoffAgent proximityClient:suppressDevice:]
Suppressing %@ per client request
Suppressed device maps to %@, resetting its state
Suppressed device matches current UI Device. Resetting UI Device.
-[SDProxHandoffAgent proximityClient:stopSuppressingDevice:]
Stop suppressing %@ per client request
-[SDProxHandoffAgent proximityClient:updateContent:forDevice:]
Proximity client update %@
Proximity client content updated with error: %@
Updating with medium bubble variant
-[SDProxHandoffAgent proximityClientRequestScannerTimerReset:]
Proximity client request scanner timer reset
Timer not valid, not activating
-[SDProxHandoffAgent _proximityClientDeviceEnteredImmediate:]
ProxClient deviceEnteredImmediate %@
-[SDProxHandoffAgent _proximityClientDeviceExitedImmediate:]
ProxClient deviceExitedImmediate %@
-[SDProxHandoffAgent _proximityClientDeviceEnteredNearby:]
ProxClient deviceEnteredNearby %@
-[SDProxHandoffAgent _proximityClientDeviceExitedNearby:]
ProxClient deviceExitedNearby %@
-[SDProxHandoffAgent _proximityClientDeviceWasDismissed:]
ProxClient deviceWasDismissed %@
-[SDProxHandoffAgent _proximityClientDeviceWasDismissed:reason:]
ProxClient deviceWasDismissed %@, %@
-[SDProxHandoffAgent _proximityClientDeviceWasSelected:]
ProxClient deviceWasSelected %@
-[SDProxHandoffAgent _proximityClientDeviceWillTrigger:]
ProxClient deviceWillTrigger %@
-[SDProxHandoffAgent _proximityClientDeviceDidUnTrigger:]
ProxClient deviceDidUntrigger %@
-[SDProxHandoffAgent _proximityClientDeviceUpdated:]
Updating client with %@
-[SDProxHandoffAgent _proximityClientSeedInitialDevices:]_block_invoke
Nearby enter seed value (MediaRemote ID): %@
-[SDProxHandoffAgent _proximityClientSeedWillTriggerDeviceIfNeeded:]_block_invoke_2
Triggered device seed value (MediaRemote ID): %@
v32@?0@"NSUUID"8@"SFCombinedDevice"16^B24
-[SDProxHandoffAgent _serviceEnsureStarted]
BLE action service start
-[SDProxHandoffAgent _serviceEnsureStarted]_block_invoke
### BLE action service activate error: %@
BLE action service started
-[SDProxHandoffAgent _serviceEnsureStopped]
BLE action service stop
-[SDProxHandoffAgent _serviceTimeoutActivate]
BLE action service timeout activate
-[SDProxHandoffAgent _serviceTimeoutInvalidate]
BLE action service timeout invalidate
-[SDProxHandoffAgent _serviceTimeoutFired]
BLE action service timeout fired
-[SDProxHandoffAgent _throttleEventDidOccur]
Throttle event did occur
-[SDProxHandoffAgent _throttleEventSet:]
Throttle event set: %d
-[SDProxHandoffAgent _throttleEventsReset]
Throttle event reset
-[SDProxHandoffAgent _throttleMediumReset]
Throttle medium reset
-[SDProxHandoffAgent _throttleMediumSetTicks:]
Throttle medium set ticks: %d
-[SDProxHandoffAgent _proxiedNotificationDidDismiss:reason:]
Notification did dismiss %@, %@
### Unrecognized UI ID: %@
com.apple.sharing.HomePodHandoff.NotificationDidDismiss
notificationDurationSecs
pendingContentSecs
reason
reasonStr
-[SDProxHandoffAgent _proxiedNotificationWasTapped:]
Notification was tapped %@
### Unable to determine closest device
Closest device: %@
com.apple.sharing.HomePodHandoff.NotificationWasTapped
onCall
-[SDProxHandoffAgent _uiDismissWhenReady:reason:]
Dismiss notification after %f
Notification only displayed for %f, delaying dismiss
-[SDProxHandoffAgent _uiStopIfNeeded:reason:]
Presented UI Stop: %@, %@
Deleted %@: %s %@
com.apple.sharing.HomePodHandoff.UIStop
deletedAttachment
-[SDProxHandoffAgent _routeForDevice:]
### Cannot find route without a BLE device.
-[SDProxHandoffAgent _shouldMediumPromptWithInfo:]
Shouldn't prompt medium, disabled via pref
Shouldn't prompt medium, maximum trigger events reached
Shouldn't prompt medium, recently triggered
-[SDProxHandoffAgent callTransferInfoForDevice:]
Generating call transfer notification info
HOMEPOD_HANDOFF_SUBTITLE_TRANSFERRING
-[SDProxHandoffAgent mediaTransferInfoFromInfo:]
No interaction behavior provided, using default (prompt)
HOMEPOD_HANDOFF_SUBTITLE_TRANSFERRING_IPOD
HOMEPOD_HANDOFF_SUBTITLE_TRANSFERRING_IPHONE
HOMEPOD_HANDOFF_SUBTITLE_TRANSFERRING_GENERIC
-[SDProxHandoffAgent testUI:]
### Test UI not supported on current platform.
NotifPending
NotifPendingContent
NotifReady
NotifPresented
NotifDismissed
TransferPending
TransferReady
TransferInProgress
PendingDismiss
TransferDone
InProgress
Skip
Succeeded
Canceled
audioaccessory
ipod
com.apple.sharingd.RapportChanged
v16@?0@"RPPerson"8
%#{flags}
v20@?0@"RPPerson"8I16
v32@?0@"RPDevice"8Q16^B24
%@: %{ptr}
iPhone8,4
iPhoneSE
iPhone10,3
iPhone10,6
iPhoneX
iPhone8
iPadPro
iPad2,5
iPad2,6
iPad2,7
iPad4,4
iPad4,5
iPad4,6
iPad4,7
iPad4,8
iPad4,9
iPad5,1
iPad5,2
iPad11,1
iPad11,2
iPadmini
MacPro
MacPro6,1
MacPro2
MacPro1
MacPro3
MacBookPro
MacBookAir
MacBook
iMacPro
Macmini
MacBook Pro
MacBook Air
Mac Pro
imageData
finalMessage
com.apple.finder
com.apple.sharingd.AirDropUnpublished
entered
exited
Contacts Only
Everyone
AirDropServer
Discoverable mode:                   %@
Screen On:                           %s
Discoverable by contacts only:       %s
Discoverable by everyone:            %s
Unlocked once:                       %s
Port Number:                         %@
HTTP Server:                         %s
HTTP Server up time:                 %ll{dur}
HTTP Server connections:             %d
SDAirDropServer
com.apple.iBooks
StreamMessageVersion
StreamMessageType
com.apple.Maps
SFAirDropActivitySubjectMapsLinkType
MAPS_LINK_CURRENT_LOCATION
MAPS_LINK_DIRECTIONS
MAPS_LINK_DROPPED_PIN
MAPS_LINK_POI
MAPS_LINK
NOTE
+[SDAirDropHandlerNotes extractNotesURLs:]
GENERIC_LINK
<%@: %p, deviceUniqueID:%@, advertisementPayload:%@, options:%@, deviceName:%@, deviceModelIdentifier:%@>
timeSinceLastRequest
errorDomain
com.apple.sharing.continuity.activity.encryption.keyrequest
oldKeyPresent
oldKeyCounter
newKeyCounter
timeBetweenKeyCreations
com.apple.sharing.continuity.activity.encryption.replacementkey
UAUserActivityIsHighPriorityOptionKey
com.apple.findmy
FIND_MY_FRIENDS_TITLE
com.apple.private.sharing.unlock-manager
This process does not have permission to perform this action
v24@?0@"NSSet"8@"NSError"16
SFUnlockErrorDomian
-[SDAirDropReceiveManager listener:didReceiveNewRequest:]
stepData
pairingID
SDAutoUnlockBypassMetricLog
SDAutoUnlockShowScreenLockError
au-setup-response-timeout
au-setup-response-timeout-percentage
au-setup-message-timeout
au-setup-message-timeout-percentage
com.apple.sharing.AutoUnlock.Setup
deviceModel
companionModel
deviceLocked
keyRequestXTime
tokenXTime
errorType
watchExistedInUnlockList
timeIntervalSinceLastWatch
upsell
responseTimeout
responseServer
messageTimeout
messageServer
setupRetry
macOldLTKSyncStatus
macNewLTKSyncStatus
watchOldLTKSyncStatus
watchNewLTKSyncStatus
watchBuildVersion
watchOSVersion
receivedSetupACK
receivedTokenACK
%02ld-%02ld-%02ld %02ld:%02ld:%02ld %@
AUConnectionCacheEnabled
allowAutoUnlock
com.apple.applicationaccess
UnknownSleepType
UNLOCK_WATCH_STAINLESS_STEEL
UNLOCK_WATCH_YELLOW_GOLD
UNLOCK_WATCH_ROSE_GOLD
UNLOCK_WATCH_CERAMIC
UNLOCK_WATCH_ALUMINUM
UNLOCK_WATCH_VIPER
AUAlwaysShowModelDescription
(%@%@%@)
UNLOCK_WATCH_COMPACT_SIZE
UNLOCK_WATCH_REGULAR_SIZE
UNLOCK_WATCH_394H_SIZE
UNLOCK_WATCH_448H_SIZE
UNLOCK_WATCH_430H_SIZE
Localizable-N187
UNLOCK_WATCH_484H_SIZE
Watch5,
UNLOCK_WATCH_SERIES_FIVE
UNLOCK_WATCH_SE
Watch6,
UNLOCK_WATCH_SERIES_SIX
UNLOCK_WATCH_SERIES_SEVEN
UNLOCK_WATCH_SERIES_ONE
UNLOCK_WATCH_SERIES_TWO
UNLOCK_WATCH_SERIES_THREE
UNLOCK_WATCH_SERIES_FOUR
Series
Watch3,1
Watch3,2
Watch3,3
Watch3,4
Watch4,1
Watch4,2
Watch4,3
Watch4,4
Watch5,1
Watch5,2
Watch5,3
Watch5,4
Watch5,9
Watch5,10
Watch5,11
Watch5,12
Watch6,1
Watch6,2
Watch6,3
Watch6,4
Watch6,6
Watch6,8
Watch6,7
Watch6,9
<SDAutoUnlockPeer: %p, deviceID = %@, state = %@>
Not Registered
Registering
Registered
Armed
Not Registered (Key Locked)
com.apple.mobilecal
CALENDAR
/private/var/Managed Preferences/mobile/com.apple.Sharing
AlternateService
BrowseAllInterfaces
EnableDemoMode
EnableDirectIP
EnableSimulator
PreferSMBFileSharing
_afpovertcp._tcp.
_smb._tcp.
_rfb._tcp.
_http._tcp.
_adisk._tcp.
_odisk._tcp.
_airdrop._tcp.
_airdrop-alt._tcp.
_airdrop-%@._tcp.
_continuity._tcp.
_device-info._tcp.
_file._tcp.
_netbios._udp.
_workgroups._udp.
_nwnode._tcp.
local
/System/Library/PrivateFrameworks/Sharing.framework
Localizable
;:@?/
%@://
:%ld
%@=%@
true
%02d:%02d:%02d.%03d
demo
Proxy trigger failed
useToken
authPrompt
supportsConfirmationACK
appName
phoneUnlockDate
skipMotionCheck
isAuthenticatingForSiri
SharingXPCHelperContactIcon for contact %{private}@ %@ iconData at index %llu
does not have
com.apple.VoiceMemos
VOICE_MEMO
PLAYGROUND
com.apple.Passbook
PASS
token
pairedDeviceID
com.apple.MobileAddressBook
CONTACT
AutoUnlockTransferStore
-[SDAutoUnlockIconTransferStore storeCachedImageForHash:device:appName:]
Storing cached image state: %@, device: %@, hash: %@
AUIconTransferStore
-[SDAutoUnlockIconTransferStore imageCachedForHash:device:]
Nothing stored in device store yet
### Device store isn't a dictionary
Looking for transfer state for device %@ hash: %@ app: %@, store %@
com.apple.sharingd.WorkgroupsChanged
SDAppleIDDatabaseManager
-[SDAppleIDDatabaseManager _readPrefs]
Reading Apple ID account information from %@
AppleIDAccount
Apple ID account retrieved from defaults: %@
### Failed to unarchive %@ pref value with error %@
AppleIDAgentMetaInfo
Apple ID agent meta info retrieved from defaults: %@
PersonInfoCache
%d cached person info values retrieved from defaults
LastConnectAttempt
LastSuccessfulConnect
AccountRequiresUserAction
-[SDAppleIDDatabaseManager _updateAccountInfoPrefs]
Updated Apple ID account in the local database
-[SDAppleIDDatabaseManager _updateMetaInfoPrefs]
Updated meta info in the local database
-[SDAppleIDDatabaseManager _updatePersonInfoCachePrefs]
Updated person info cache in the local database
-[SDAppleIDDatabaseManager _addAppleID:]
Added account for Apple ID %@ (%@)
updated existing
-[SDAppleIDDatabaseManager _removeAppleID:]
Removed account for Apple ID %@ 
-[SDAppleIDDatabaseManager _addPersonInfoToCache:]
Added person info for %@ to cache
-[SDAppleIDDatabaseManager cachedPersonInfoWithEmailOrPhone:]
Cached person info object for %@ is available
-[SDAppleIDDatabaseManager _setIdentity:forAppleID:]
### No account for %@
%s identity object for %@. New identity object is %@
Replaced
Added
Updated AltDSDID for %@ to %@
-[SDAppleIDDatabaseManager _setIdentityLinkedToCurrentUser:forAppleID:]
### No identity for %@
-[SDAppleIDDatabaseManager _setCertificateToken:privateKeyPersistentReference:forAppleID:]
Set Certificate Token %@ for %@
Set Certificate Token Creation Date %@
Set Private Key Persistent Reference %p for %@
-[SDAppleIDDatabaseManager _setContactInfo:validationRecord:forAppleID:]
Set Contact Info %@ for %@
Set Validation Record %@ for %@
com.apple.sharingd.nsxpc
SDRemoteInteractionAgent
-- SDRemoteInteractionAgent --
Server: %@
Client: %@, %ld NeedsKeyboard, %ld RSSI threshold
Sessions: %ld
    Found device: %@
-[SDRemoteInteractionAgent activate]_block_invoke
-[SDRemoteInteractionAgent invalidate]_block_invoke
-[SDRemoteInteractionAgent prefsChanged]
Client enabled: %s -> %s
riCloudPairedOnly
Cloud paired only: %s -> %s
riServerEnabled
Server enabled: %s -> %s
RSSI threshold: %ld -> %ld
-[SDRemoteInteractionAgent setPreventNotifications:]_block_invoke
-[SDRemoteInteractionAgent _commonEnsureStarted]
Subscribing to IDS notifications
-[SDRemoteInteractionAgent _commonEnsureStopped]
Unsubscribing to IDS notifications
-[SDRemoteInteractionAgent _commonIDSChanged:]
IDS changed
-[SDRemoteInteractionAgent _serverEnsureStarted]
Control service activate
v28@?0@"SFSession"8I16@"NSDictionary"20
v36@?0@"SFSession"8I16@"NSDictionary"20@?<v@?I@"NSError"@"NSDictionary">28
-[SDRemoteInteractionAgent _serverEnsureStarted]_block_invoke
Control service activated
### Control service activate failed: %@
-[SDRemoteInteractionAgent _legacy_serverHandleEvent:]
### Ignoring event from peer with no identifier
### Ignoring event from unpaired peer %@
Received event has RTI payload
### Bad event opcode: %#m
Received start session %@ from %@
### Unknown event opcode: %d
-[SDRemoteInteractionAgent _legacy_serverHandleRequest:]
### Ignoring request from unpaired peer %@
### Bad request opcode: %#m
### Unknown request opcode: %d
UserAssignedDeviceName
name
-[SDRemoteInteractionAgent _sendRTIPayload:]
### Send payload without data?
### Failed to deserialize payload?
Sending RTI payloads to peers (%u)
-[SDRemoteInteractionAgent handleEventWithData:]
RTI Client event fired (%@)
-[SDRemoteInteractionAgent handleInputDidBeginWithFlags:sessionInfo:]
RTI did BEGIN
-[SDRemoteInteractionAgent handleInputDidEndWithFlags:sessionInfo:]
RTI did END
Stopping advertising timer
-[SDRemoteInteractionAgent advertisingTimerFired]
Advertising timer fired, simulating end event
com.apple.sharing.ContinuityKeyboardRTI
timeout
-[SDRemoteInteractionAgent advertisingTimerStart]
Starting advertising timer
-[SDRemoteInteractionAgent sessionStart:]
Session start
-[SDRemoteInteractionAgent sessionStart:]_block_invoke
### No peer device?
-[SDRemoteInteractionAgent sessionStop:]
Session stop
-[SDRemoteInteractionAgent _clientEnsureStarted]
-[SDRemoteInteractionAgent _clientEnsureStarted]_block_invoke
BLE RIA Found: %@
BLE RIA Lost: %@
-[SDRemoteInteractionAgent _clientEnsureStarted]_block_invoke_2
BLE RIA Changed: %@, %#{flags}
Discovery started
### Discovery start failed: %@
CompanionLink start
### ClinkClient interrupted
-[SDRemoteInteractionAgent _clientEnsureStarted]_block_invoke_3
ClinkClient invalidated
### CompanionLink start failed: %@
CompanionLink started
-[SDRemoteInteractionAgent _clientEnsureStopped]
-[SDRemoteInteractionAgent _clientClinkDeviceFound:]
Clink Found: %@
-[SDRemoteInteractionAgent _clientClinkDeviceLost:]
Clink Lost: %@
-[SDRemoteInteractionAgent _clientClinkDeviceChanged:]
Clink Changed: %@
-[SDRemoteInteractionAgent _clientDeviceFound:]
### Ignoring unpaired device %@
Ignoring far away NeedsKeyboard: %@
Device NeedsKeyboard new: %@
-[SDRemoteInteractionAgent _clientDeviceLost:]
Device NeedsKeyboard lost: %@
-[SDRemoteInteractionAgent _clientDeviceLockStatusChanged]_block_invoke
-[SDRemoteInteractionAgent _clientShouldStart]
Client should start %s: tvs: %s, watches: %s, enabled: %s
-[SDRemoteInteractionAgent clientNotificationPostIfNeededForDevice:]
### Cannot post notification without device model
### Unrecognized device model: %@
-[SDRemoteInteractionAgent clientNotificationRemoveForDevice:]
### Cannot remove notification without device model
-[SDRemoteInteractionAgent clientNotificationUpdateForDevice:rtiData:]
### Cannot update notification without device model
-[SDRemoteInteractionAgent clientNotificationUpdateForDevice:info:]
-[SDRemoteInteractionAgent clientUserDidTapNotification:]
### Launching TV Remote not supported on current platform
-[SDRemoteInteractionAgent testKeyboardPost:]
Testing keyboard post
-autofill
-[SDRemoteInteractionAgent testKeyboardPostThenUpdate]
Testing keyboard post then update
postAndUpdate
-[SDRemoteInteractionAgent testKeyboardRemove]
Testing keyboard remove
-[SDRemoteInteractionAgent testKeyboardUpdate]
Testing keyboard update
Continuity Keyboard
SDSharedRemoteTextInputClient
-[SDSharedRemoteTextInputClient _ensureStarted]
RTI client start
v24@?0Q8@"NSDictionary"16
-[SDSharedRemoteTextInputClient invalidate]
RTI client stop
-[SDSharedRemoteTextInputClient addDelegate:]
Adding delegate: %{ptr}
-[SDSharedRemoteTextInputClient removeDelegate:]
Removing delegate: %{ptr}
-[SDSharedRemoteTextInputClient _rtiHandleEventWithData:]
RTI: event with data (%@)
v24@?0@"NSObject<SDSharedRemoteTextInputDelegate>"8^B16
-[SDSharedRemoteTextInputClient _rtiHandleInputDidBeginWithFlags:sessionInfo:]
-[SDSharedRemoteTextInputClient _rtiHandleInputDidEndWithFlags:sessionInfo:]
-[SDSharedRemoteTextInputClient _logEvent:stopClock:]
Stopping session clock: %ld ms, event: %@
com.apple.sharing.RTI
durationMS
event
-[SDSharedRemoteTextInputClient _startClockWithResetIfNeeded]
Starting session clock
-[SDSharedRemoteTextInputClient _startClockWithResetIfNeeded]_block_invoke
Overrun timer fired, running longer than 1 hr? Start time: %@
Begin
Invalidate
UnexpectedBegin
Overrun
com.apple.sharingd.ODisksChanged
com.apple.sharingd.BonjourChanged
com.apple.sharingd.WindowsChanged
com.apple.sharingd.AirDropChanged
com.apple.sharingd.AirDropStatusChanged
NeighborhoodName
Count
Low Power
One Or None
ServerBrowser
--------------
Mode:                                %@
Bonjour Browsers:
Domain:                              %@
AirDrop Browsers:
Windows Browsers:
ODisk Browsers:
GENERIC_FILE_WITH_TITLE
GENERIC_FILE
ACCEPT_BUTTON_TITLE
com.apple.
com.apple.TapToRadar
com.apple.DocumentsApp
-[SDAirDropHandlerGenericFiles openResourceOperation:didFinishCopyingResource:]
-[SDAirDropHandlerGenericFiles openResourceOperationDidComplete:]
-[SDAirDropHandlerGenericFiles openResourceOperation:didFailWithError:]
com.apple.coreservices.appleidauthagent
createCertificate
fetchCertificate
SDAppleIDServerTask
-- SDAppleIDServerTask --
-[SDAppleIDServerTask _isTaskInfoValid]
### Unhandled type %d
-[SDAppleIDServerTask _urlWithCompletion:]
Getting a url from AuthKit url bag...
-[SDAppleIDServerTask _urlWithCompletion:]_block_invoke
URL for task type %@: %@
Failed to get url with error %#m
-[SDAppleIDServerTask _handleURLIsAvailable:error:completion:]
JSON Serialization of the URL Request body failed with error %@
v20@?0@"NSURL"8i16
-[SDAppleIDServerTask _urlRequestWithCompletion:]
Failed to create NSURLRequest with error %#m
-[SDAppleIDServerTask _activate]
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
-[SDAppleIDServerTask _handleURLRequestIsAvailable]
Sending %@ server task
HTTP Headers: %@
Body: %@
v20@?0@"NSURLRequest"8i16
-[SDAppleIDServerTask _handleServerError:withStatusCode:nextSuggestedAttemptDelay:]
### Server error %d: status code %d expected, but %d received
### Server error %d means server bug. Report to server folks
### Unhandled server error: %d
### Status code %d, server error code %d. User authentication required to proceed
### Unhandled server response status code: %d. Server error code: %d
-[SDAppleIDServerTask _invalidate]
Invalidate %@ server task
-[SDAppleIDServerTask _handleTaskResponse:withData:error:]
### %@ server task failed with error %#m
### No response object
Received %@ server task response with status %ld
### No data object
### No response JSON. Response status code %d, response %@
Response info: %@
responseCode
responseMessage
nextSuggestedAttemptDelay
### Response status code: %d, error %d (%@), suggested retry delay: %d
com.apple.sharing.AIAServerTaskResponse
httpStatusCode
errorCode
idmsEnv
altDsId
-[SDAppleIDServerTask _parseCreateCertificateResponse:error:]
### No altDSID
certificate
### No certificate info
### No certificate token 
delay
Received Create Certificate response: altDSID=%@, certToken=%@, suggestedDelay=%@
-[SDAppleIDServerTask _parseFetchCertificateResponse:error:]
### No certificate token
status
expiryDate
### No certificate expiration date. Will set to 6 months from now.
### Failed to create expiration date
### No certificate PEM
### No certificate serial number
### Certificate status is pending, but delay not provided.
intermediateCaCertificate
### No intermediate certificate PEM
matches
-[SDAppleIDServerTask _parseFindPersonResponse:error:]
### No matches array
### No matches found
### Matches array has more than 1 object
certCn
AccountIdentifier
Account identifier not in match info dictionary returned by server
AltDSID not in match info dictionary returned by server
certStatus
Certificate status not in match info dictionary returned by server
matched
Matched
Matched criterion not in match info dictionary returned by server
Matched value not in match info dictionary returned by server
ValidUntil
-[SDAppleIDServerTask _parseGetMyInfoResponse:error:]
Received Get My Info Certificate Info: token=%@, expirationDate=%@, serial number=%@, status=%@
firstName
lastName
msUntilNextCheck
validatedEmails
validatedPhones
aidvr
serverAidvrId
Received Get My Info response: AltDSID=%@, Firstname=%{mask}, LastName=%{mask}, Emails=%~@, Phones=%~@, Validation Record: identifier=%@,version=%@, msUntilNextCheck=%d
Validation Record Data (base64)=%@
FirstName
LastName
ValidatedEmails
ValidatedPhones
ValidationRecordData
ValidationRecordDataID
ValidationRecordNextCheckDate
Version
-[SDAppleIDServerTask _parseServerResponse:error:]
-[SDAppleIDServerTask _sendRequest]_block_invoke
### Get GS token failed with error %#m
v28@?0@"NSString"8@"NSString"16i24
Create Certificate
Fetch Certificate
Get My Info
Find Person
issued
pending
failed
revoked
expired
SDConnectionManagerIdentifier
Missing client proxy
Missing identifier
v24@?0@"NSFileHandle"8@"NSError"16
longTermKey
ltkHash
remoteNeedsLTK
com.apple.sharingd.adjustment-queue
com.apple.sharingd.compression-queue
payload
messageType
senderID
useProxy
awdlCacheID
aksSessionID
encryptedPayload
authTag
nonce
secret
CREDENTIAL
SDAutoUnlockAKSManagerWatchLTKsUpdatedNotification
SDAutoUnlockAKSManagerCompanionViewSyncing
SDAutoUnlockAKSManagerCompanionNeedsUnlock
SDAutoUnlockAKSManagerCompanionCurrentlySyncing
A70C5EAF-F24F-48A7-B834-F5297000C7A2
com.apple.continuity.auto-unlock.sync
com.apple.continuity.auto-unlock.localkeys
com.apple.continuity.auto-unlock.rangingkeys
com.apple.continuity.auto-unlock.attested
com.apple.continuity.unlock
ltk.plist
pairing-records.plist
Companion ID
Pairing ID
Remote LTKs
LTK Data
LTK ID
LTK Hash
LTK Mod Date
Modern LTK Data
Modern LTK Hash
Modern LTK Mod Date
Attested LTK Data
AutoUnlockDevicesMissingSessionKey
companion-paired-devices.plist
watch-companion-mapping.plist
Local Unique ID: %@
Local LTK: %@
Local LTK UUID: %@
Keychain UUID: %@
Local LTK Info: %@
View Syncing: %@
Device First Unlocked: %@
Keychain Devices: %@
Remote LTK File Path: %@
Remote LTKs
Device ID: %@, Remote LTK ID: %@, ASK Peer State: %@, Remote LTK: %@
q24@?0@"NSString"8@"NSString"16
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NSString"8@"NSString"16^B24
%@: %@
AutoUnlockSalt
AutoUnlockInfo
sessionTime
com.apple.sharing.Airdrop.CoalescedNodes.Discovery
contactLevel
foundBonjour
foundRapport
rpFlagMyiCloud
rpFlagFriend
rpFlagFamily
rpFlagSharedHome
rpFlagStranger
com.apple.itunesu
ITUNES_STORE_LINK_ITUNES_U
SDAppleIDURLResponse
-[SDAppleIDURLResponse initWithHTTPUTLResponse:data:]
### JSON -> Data failed with error %@
### JSON object not a dictionary
PROFILE
unlockEnabled
passcodeEnabled
kinds=%##@ realName=%@ cnId=%@ aTag=%@ id=%@ isRap=%d isMe=%d
%##@
DisabledKeyRequestBudget
DisableContinuityRapportPayloads
com.apple.handoff.encryption-key-request
v32@?0@"NSDictionary"8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">24
com.apple.handoff.payload-request
com.apple.private.alloy.continuity.encryption
com.apple.private.alloy.continuity.activity
Request
EncryptionKey
v16@?0@"SDActivityRequestRecord"8
Request timed out
Budget Restrictions Disabled: %@
Activity Service: %@, devices: 
@unionOfObjects.uniqueIDOverride
Encryption Service: %@, devices: %@
Unique ID To Key Reply Date: %@
Message Identifier To KeyRequest Records: %@
Message Identifier To Request Records: %@
Message Identifier To Reply Records: %@
EncryptionKeyRequests
rKeyPreviousIdentifier
rKeyDataRepresentation
rLocalOnly
idsDeviceIdentifier == %@
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
Failed to find device to request encryption key from
deviceIdentifier
advertisementPayload
activityCommand
activityPayload
rAdvPayload
rClientCommand
rIdentifier
Failed to find device to request activity payload from
senderIDS
uniqueIDOverride == %@
Rapport
v16@?0@"NSDictionary"8
IDS device not found
v24@?0@"NSDictionary"8@"SDActivityPayloadReplyRecord"16
rActPayload
rActPayloadErrorDomain
rActPayloadErrorCode
Rapport (%s)
Unknown Error
version
_cat
rapportTransport
success
wasRapport
isHSA2Enabled
ContinuityRapportDisableBLEDiscovery
ContinuityRapportForceL2CAP
-[SDActivityPayloadManager createRapportClientWithDestinationDevice:]
rAdvData
SDActivityPayloadManager.m
Demo mode enabled, yet cannot find any destinations on service
final 
v16@?0@"SFActivityAdvertisement"8
BTPipe
AWDL
WiFi
Enet
Direct
Cloud
Loopback
Pages
com.apple.Pages
Numbers
com.apple.Numbers
Keynote
com.apple.Keynote
IWORK_LINK_WITH_TITLE
IWORK_LINK
SDAppleIDIdentityRequest
-[SDAppleIDIdentityRequest _activate]
### Already activated
### Object invalidated
Certificate token and private key reference are available, skip create request
-[SDAppleIDIdentityRequest _invalidate]
Invalidate
-[SDAppleIDIdentityRequest _handleCertificateCreateResponseError:]
### Create Certificate request failed with error %@
-[SDAppleIDIdentityRequest _handleCertificateCreateResponseWithInfo:error:]
Certificate Create Response: %@
AltDSID
CertificateToken
Delay
-[SDAppleIDIdentityRequest _handleCertificateFetchResponseError:]
### Fetch Certificate request failed with error %{error}
-[SDAppleIDIdentityRequest _handleCertificateFetchResponseWithInfo:error:]
### Certificate status %d/%@
CertificateExpirationDate
CertificatePEM
IntermediateCertificate
### Certificate status %d/%@ isn't handled yet
-[SDAppleIDIdentityRequest _handleCertificate:intermediateCertificate:withTrustResult:error:]
Received certificates are trusted.
### Failed to get expiration date from certificate
### Large certificate expiration date discrepancy. Certificate=%@; Response=%@
### Failed to get expiration date from intermediate certificate
### Intermediate certificate expiration date warning: expiration date: %@, time interval since now: %lf
com.apple.idms.appleid.
### Common name %@ has unexpected prefix
Apple ID authorization certificate for %@
Added certificate for %@ to keychain
Apple ID authorization intermediate certificate
Added intermediate certificate for %@ to keychain
-[SDAppleIDIdentityRequest _handleCreateTimerFired]
Create timer fired
-[SDAppleIDIdentityRequest _handleFetchTimerFired]
Fetch timer fired
-[SDAppleIDIdentityRequest _scheduleCreateCertificateTaskWithDelay:]
### Create certificate task already scheduled
Start create certificate delay timer for %ld seconds
-[SDAppleIDIdentityRequest _scheduleFetchCertificateTaskWithDelay:]
### Fetch certificate task already scheduled
Start fetch certificate delay timer for %ld seconds
-[SDAppleIDIdentityRequest _scheduleCreateRetryWithDelay:]
Scheduling create retry %d with delay %u seconds.
-[SDAppleIDIdentityRequest _scheduleFetchRetryWithDelay:]
Scheduling fetch retry %d with delay %u seconds.
com.apple.AppStore
com.apple.TVAppStore
VIEW_BUTTON_TITLE
APP_LINK_WITH_TITLE
APP_LINK
com.apple.family
FAMILY_INVITATION_TITLE
ICLOUD_FAMILY
SHOW_INVITATION_BUTTON_TITLE
SFNodeError
Code
Domain
UserInfo
com.apple.private.airdrop.discovery
%#{pid}
Children
Sidebar
Node
Protocol
Error
Events
Operation
Results
Function
Create
Kind
OpenNode
Flags
CloseNode
AddNode
RemoveNode
SetMode
Mode
SetOptions
Options
Resume
SetProperty
Name
Value
Object
Browser
v16@?0@"NSObject<OS_xpc_object>"8
Device Information: %@
SharingDaemon State End
SharingDaemon State
highPriorityQueue
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
com.apple.sharingd.daemon.started
com.apple.private.airdrop.settings
NewOperation
AskUser
WaitForAnswer
Cancelled
Started
Preprocess
Progress
Postprocess
Finished
ErrorOccured
Connecting
Information
Conflict
Blocked
Converting
ServiceRef
QueryTimer
GateAirDropDiscovery
SDAirDropPeerMetric
%@.%@%@.%d
verifiable
unverifiable
BonjourBrowser
One or None
Failed to send step data
%@%@
IMG_%04u
file count zero
destination not writable
%@.bom
indexbom
copyResources
sourceIsAppSandboxed
copyExtendedAttributes
createCPIO
compression
archiving
createPKZip
zlibCompressionLevel
sequesterResources
compressCPIO
outputStream
extractPKZip
extractCPIO
auto
inputStream
SDXPCServer
?.*:level=chatty,.*:flags=public
-[SDXPCServer _activate]
com.apple.SharingServices
com.apple.Sharing.prefsChanged
-[SDXPCServer _activate]_block_invoke
Prefs changed
-[SDXPCServer _invalidate]
Stopped
-[SDXPCServer listener:shouldAcceptNewConnection:]
XPC connection started from %#{pid}
### Unknown XPC listener
-- XPC connections --
, Assertions: 
%s%@ (%ld total)
, %@
, Note: %@
, PreventExit: '%@'
-[SDXPCServer _stateDump]
State dump: SharingServices
SharingServices State
SharingServices State End
-[SDXPCConnection connectionInvalidated]
XPC connection invalidated from %#{pid}
-[SDXPCConnection _entitled:state:label:]
### %#{pid} lacks %''@ entitlement to use %@
com.apple.sharing.Services
-[SDXPCConnection _entitledService:state:]
### %#{pid} lacks %''@ entitlement for service %''@
AutoFillHelperActivate
-[SDXPCConnection autoFillHelperActivate:completion:]
com.apple.sharing.RemoteInteractionSession
v20@?0B8@?<v@?@"NSError">12
v16@?0I8i12
AutoFillHelperTryPIN
-[SDXPCConnection autoFillHelperDidPickUsername:password:error:]
### %@ failed: %#m
-[SDXPCConnection autoFillHelperTryPIN:]
%@, PIN: %@
AutoFillHelperNotificationDidActivate
-[SDXPCConnection autoFillHelperUserNotificationDidActivate:]
%@, %@
AutoFillHelperNotificationDidDismiss
-[SDXPCConnection autoFillHelperUserNotificationDidDismiss:]
com.apple.sharing.Client
ActivateAssertion
-[SDXPCConnection activateAssertionWithIdentifier:]
Ignoring duplicate assertion '%@'
Activate assertion '%@': %ld -> %ld
com.apple.sharing.PreventAppleCardActivation
com.apple.sharing.DuetSync
com.apple.sharing.PreventContinuityKeyboard
com.apple.sharing.PreventProxCards
com.apple.sharing.PreventRepair
com.apple.sharing.EnhancedDiscovery
Ignoring add unknown assertion '%@'
-[SDXPCConnection _invalidateAssertions]
Invalidate assertion '%@': %ld -> %ld
Ignoring remove unknown assertion '%@'
ActivityState
AppleIDInfo
-[SDXPCConnection appleIDInfoWithCompletion:]
### No appleID?
### No record data?
FindContact
Missing entitlement
SharingFindContact
Contact is blocked
@icloud.com
@gmail.com
@googlemail.com
Contact not found
Not supported on this platform
-[SDXPCConnection getDeviceAssets:completion:]
### GetDeviceAssets failed: %{error}
SharingGetPeopleSuggestions
-[SDXPCConnection getPeopleSuggestions:completion:]
GetPeopleSuggestions start: max %d
-[SDXPCConnection _getPeopleInfo:completion:]
GetPeopleInfo start: contacts %d
### GetPeopleInfo failed: contacts, %{error}
GetPeopleInfo progress: %d of %d, handles %d, blocked %d, notFound %d
GetPeopleInfo: requested %d, blocked %d, not found %d
-[SDXPCConnection _getPeopleSuggestions:completion:]
GetPeopleSuggestions finish: no suggestions
### GetPeopleSuggestions failed: contacts, %{error}
GetPeopleSuggestions skipping blocked contact: %@
GetPeopleSuggestions finish: max %d, suggestions %d, contactIDs %d, contacts %d, results %d
HashManagerControl
Missing command
hmrebuild
hmdump
airdrop-hash-db.txt
Failed to create destination URL
Failed to perform hash database dump
filePath
<unknown>
Unknown command
OpenSetupURL
-[SDXPCConnection preheatXPCConnection]
preheatXPCConnection
PreventExitForLocale
ReenableProxCardType
-[SDXPCConnection reenableProxCardType:completion:]
Ignored re-enable of unsupported prox card type %s
RepairDevice
Missing entitlement '%@' for RepairDevice
RetriggerProximityPairing
RetriggerProximitySetup
SetAudioRoutingScore
Missing entitlement '%@' for SetAudioRoutingScore
Out-of-range score: %d, min %d, max %d
SetupDevice
Missing entitlement '%@' for SetupDevice
ShowDevicePicker
Missing entitlement '%@' for ShowDevicePicker
TriggerHomeKitDeviceDetected
-[SDXPCConnection triggerProximityAutoFillDetectedWithURL:completion:]
Triggering AutoFill detected with URL
WiFiPasswordSharingAvailability
-[SDXPCConnection wifiPasswordSharingAvailabilityWithCompletion:]
PWS availability: %#{flags}
CoordinatedAlertStart
-[SDXPCConnection coordinatedAlertsRequestStart:completion:]
%@ (%s)
caEntitlements
com.apple.sharing.CoordinatedAlerts
### %@ rejected for %#{pid}: already in use
-[SDXPCConnection coordinatedAlertsRequestFinish]
CoordinatedAlertFinish
DeviceDiscoveryActivate
-[SDXPCConnection deviceDiscoveryActivate:completion:]
%@: %@, from %#{pid}
com.apple.sharing.DeviceDiscovery
v16@?0q8
DeviceDiscoveryUpdate
-[SDXPCConnection deviceDiscoveryUpdate:]
%@: %@
BluetoothUserInteraction
-[SDXPCConnection bluetoothUserInteraction]
com.apple.sharing.BluetoothUserInteraction
DiagnosticBLEMode
-[SDXPCConnection diagnosticBLEModeWithCompletion:]
com.apple.sharing.Diagnostics
DiagnosticControl
-[SDXPCConnection diagnosticControl:completion:]
%@( '%@' )
afui
afremote
afservice
afkc
auua-%X-%X
choui
btpipe
metrics
com.apple.sharing.test
key1
value1
pping
hotspot=%X
atvui
b238ui
homepodui
hkui
nfcui
ppui
pinshow
pinhide
dpick
debugParams
pwui
rpui
whaui
wsui
testProxCardKit
unpost
### Unsupported diagnostic control command: '%@'
DiagnosticLogControl
### Error: %#m
change
found
lost
-[SDXPCConnection diagnosticMock:device:completion:]
### Unsupported mock event: '%@'
-[SDXPCConnection diagnosticMockStart:]
Starting mock mode
-[SDXPCConnection diagnosticMockStop:]
Stopping debug mode
DiagnosticShow
prox
autofill
handoff
-- ProximityInfo --
DiagnosticUnlockTestClientWithDevice
-[SDXPCConnection diagnosticUnlockTestClientWithDevice:]
DiagnosticUnlockTestServer
-[SDXPCConnection diagnosticUnlockTestServer]
NFCTagReaderUIActivate
-[SDXPCConnection nfcTagReaderUIActivateWithEndpoint:params:completion:]
ProximityClientActivate
-[SDXPCConnection proximityClientActivate:completion:]
com.apple.sharing.ProximityClient
v16@?0@"NSString"8
v24@?0@"NSString"8q16
v32@?0@"NSString"8q16q24
ProximityClientUpdate
-[SDXPCConnection proximityClientUpdate:]
ProximityClientDismissContent
ProximityClientProvideContent
ProximityClientSuppressDevice
ProximityClientStopSuppressingDevice
ProximityClientUpdateContent
-[SDXPCConnection proximityClientRequestScannerTimerReset]
### Request scanner timer reset failed: %@
RemoteInteractionSessionActivate
-[SDXPCConnection remoteInteractionSessionActivate:completion:]
v16@?0@"SFRemoteTextSessionInfo"8
RemoteInteractionSessionSendData
-[SDXPCConnection remoteInteractionSessionSendPayload:]
-[SDXPCConnection serviceActivate:completion:]
ServiceActivate: %@
dedDisable
### Service identifier %@ is disabled via pref
-[SDXPCConnection serviceActivate:completion:]_block_invoke
Received event: %@
v16@?0@"SFEventMessage"8
v24@?0@"NSUUID"8@"NSError"16
v28@?0C8@"NSData"12@"NSUUID"20
Received request: %@
v16@?0@"SFRequestMessage"8
Received response: %@
v16@?0@"SFResponseMessage"8
ServiceUpdate
-[SDXPCConnection serviceUpdate:]
ServicePeerDisconnected
-[SDXPCConnection servicePeerDisconnected:error:]
ServiceSendEvent
-[SDXPCConnection serviceSendEvent:]
ServiceSendFrame
-[SDXPCConnection serviceSendFrameType:data:peer:]
%@: %s, %ld bytes
ServiceSendRequest
-[SDXPCConnection serviceSendRequest:]
ServiceSendResponse
-[SDXPCConnection serviceSendResponse:]
SessionActivate
-[SDXPCConnection sessionActivate:completion:]
com.apple.sharing.Session
v20@?0C8@"NSData"12
SessionSendEvent
-[SDXPCConnection sessionSendEvent:]
SessionSendFrame
-[SDXPCConnection sessionSendFrameType:data:]
SessionSendRequest
-[SDXPCConnection sessionSendRequest:]
SessionSendResponse
-[SDXPCConnection sessionSendResponse:]
-[SDXPCConnection userNotificationPresent:]
UserNotification XPC not supported on current platform
Unspecified
ATVSetup
MobileBackup
WatchSetup
ATVPair
InternetRelay
WiFiPassword
iOSSetup
Repair
LegacyHomePodSetup
HomePodSetup
ApplePay
WHASetup
DevToolsPair
DDPing
DDPong
RemoteAutoFill
CompanionLinkProx
RemoteManagement
RemoteAutoFillPong
AccessorySetup
TVLS
TVSA
AppSignIn
Fitness
AuthenticateAccounts
NeedsRDLink
NeedsCLink
Goodbye
B238SetupAfterWiFi
EnhancedDiscovery
iMessage
PhoneCall
Announcement
NoOp
PingReq
PingResp
UncRaw
UncOPACK
EncOPACK
AutoUnlock
UncEvent
UncReq
UncRes
RemoteApp
IRControl
IRData
PSStart
PSNext
PVStart
PVNext
HeartbeatLegacy
HeartbeatReq
HeartbeatAck
StartReq
StartAck
EncOPACKZ
UncOPACKZ
HeartbeatAlive
SUCreateSession
SUSessionCreated
SUEvent
SUReq
SUResp
ServiceFragment
ServiceFragmentLast
SessionFragment
SessionFragmentLast
keyData
keyIdentifier
dateCreated
lastUsedCounter
<%@: %p, keyIdentifier:%@, dateCreated:%@, lastUsedCounter:%hu>
BluetoothAdvertiseEncryptionStartCount
Has Wrapping Key: %@, Should Refresh: %@
Keychain Items: %@
@unionOfObjects.%@
Encryption Key: %@
Device Identifier To Decryption Key: %@
isWrappedKey
handoff-decryption-key
com.apple.continuity.encryption
handoff-wrapping-key
Handoff Wrapping Key
handoff-own-encryption-key
Handoff Encryption Key
%@-%@
Handoff Decryption Key
, bundleID = %@
Connection timed out
Could not create message payload
Cannot send messages of these streams
 , expected = %d
Wrote more bytes than message contained
Zero bytes written for message
ltkID
signout
application/json
X-Mme-Client-Info
X-Apple-GS-Token
X-Mme-Device-ID
SDAppleIDMutableURLRequest
UniqueDeviceID
NSString * _Nullable DeviceUDID(void)_block_invoke
### AppleIDDeviceUDID failed with err %#m
SDAppleIDThrottle
void SDAppleIDThrottleReset(void)
Reset throttle
counter
startDate
void SDAppleIDThrottleUpdate(void)
Updated throttle: %ld -> %ld seconds
NSDate * _Nonnull SDAppleIDThrottleCopyNextDate(void)
Next date: %@ in %f seconds
void SDAppleIDThrottleForceMax(void)
Updated throttle to max: %ld seconds
SDNotificationManager
-- SDNotificationManager --
activated 
HomePod granted 
TV granted 
Watch granted 
AutoFill requests:
 - %@
HomePod requests:
TVKeyboard requests:
WatchKeyboard requests:
-[SDNotificationManager _activate]
-[SDNotificationManager _invalidate]
Invalidated
riClientTriggered
com.apple.ContinuityKeyBoard.enabled
-[SDNotificationManager _riServerEnsureStarted:completion:]
Starting TV
com.apple.Sharing.TVRemoteNotifications
-[SDNotificationManager _riServerEnsureStarted:completion:]_block_invoke_2
Requesting TV authorization
-[SDNotificationManager _riServerEnsureStarted:completion:]_block_invoke_3
TV Notification granted: %s %@
v16@?0@"UNNotificationSettings"8
watchKBTriggered
-[SDNotificationManager _watchEnsureStarted:completion:]
Starting Watch
com.apple.Sharing.WatchRemoteNotifications
-[SDNotificationManager _watchEnsureStarted:completion:]_block_invoke_2
Requesting Watch authorization
-[SDNotificationManager _watchEnsureStarted:completion:]_block_invoke_3
Watch Notification granted: %s %@
hhNotifTriggered
-[SDNotificationManager _homePodEnsureStarted:completion:]
Starting HomePod
com.apple.Sharing.HomePodRemoteNotifications
-[SDNotificationManager _homePodEnsureStarted:completion:]_block_invoke_2
Requesting HomePod authorization
-[SDNotificationManager _homePodEnsureStarted:completion:]_block_invoke_3
HomePod Notification granted: %s %@
Starting HomePod mini
com.apple.Sharing.b7ce1794a1c8766816fc7b7500742862
Requesting HomePod mini authorization
HomePod mini Notification granted: %s %@
-[SDNotificationManager _addRequestWithID:content:type:isHomePodMini:]
Duplicate HomePod Handoff request
Duplicate TV autofill request
Duplicate TV needsKeyboard request
Duplicate watch needsKeyboard request
### Unsupported notification type: %d
### No notification center for request
Adding %@ notification request from %@
-[SDNotificationManager _addRequestWithID:content:type:isHomePodMini:]_block_invoke
### Error adding request %@: %@
Added request: %@
-[SDNotificationManager attachmentFromURL:]
### Failed to create attachment from URL %@
-[SDNotificationManager _tvHandleResponse:completion:]
Handle TV response: %@
### No notification ID?
### No device ID?
Handling dismiss
### Remove of unrecognized notification?
Handling default
### Unrecognized action: %@
REMOTE_BULLETIN_MESSAGE_AUTOFILL
REMOTE_BULLETIN_MESSAGE
REMOTE_BULLETIN_SUBTITLE_AUTOFILL
REMOTE_BULLETIN_SUBTITLE
continuityRemoteCategory
-[SDNotificationManager _riServerPostIfNeeded:backgroundAction:]_block_invoke
TV KBPost %@ backgroundAction: %s
-[SDNotificationManager _riServerRemove:]
TV KBRemove %@
-[SDNotificationManager _riServerRemoveAll]
TV KBRemoveAll
-[SDNotificationManager _riServerUpdate:info:]
### KBUpdate: request %@ not found
REMOTE_BULLETIN_MESSAGE_OPEN
KBUpdate (legacy) %@, Prompt: '%@', Title: '%@'
-[SDNotificationManager _riServerUpdate:info:]_block_invoke
### Error updating %@: %@
Update %@ success
-[SDNotificationManager _riServerUpdate:rtiData:]
Updating TV text from RTI data
TV KBUpdate (RTI) %@, Prompt: '%@', Title: '%@'
-[SDNotificationManager _riServerUpdate:rtiData:]_block_invoke
### Error handling RTI data: %@
PROX_AUTOFILL_MESSAGE
PROX_AUTOFILL_SUBTITLE
-[SDNotificationManager _tvAutoFillPostIfNeeded:]_block_invoke
AFPost %@
-[SDNotificationManager _tvAutoFillRemove:]
AFRemove %@
-[SDNotificationManager _tvAutoFillRemoveAll]
AFRemoveAll
WATCH_KEYBOARD_MESSAGE_AUTOFILL
WATCH_KEYBOARD_MESSAGE
WATCH_KEYBOARD_SUBTITLE_AUTOFILL
WATCH_KEYBOARD_SUBTITLE
com.apple.Bridge
-[SDNotificationManager _watchKeyboardPostIfNeeded:]_block_invoke
Watch KBPost %@
-[SDNotificationManager _watchKeyboardRemove:]
Watch KBRemove %@
-[SDNotificationManager _watchKeyboardRemoveAll]
Watch KBRemoveAll
-[SDNotificationManager _watchKeyboardUpdate:info:]
WATCH_KEYBOARD_MESSAGE_OPEN
Watch KBUpdate (legacy) %@, Prompt: '%@', Title: '%@'
-[SDNotificationManager _watchKeyboardUpdate:info:]_block_invoke
-[SDNotificationManager _watchKeyboardUpdate:rtiData:]
Updating watch text from RTI data
Watch KBUpdate (RTI) %@, Prompt: '%@', Title: '%@'
-[SDNotificationManager _watchKeyboardUpdate:rtiData:]_block_invoke
-[SDNotificationManager _watchHandleResponse:completion:]
Handle Watch response: %@
HOMEPOD_HANDOFF_MESSAGE_CALL_GENERIC
HOMEPOD_HANDOFF_SUBTITLE_TALK_HOMEPOD
HOMEPOD_HANDOFF_MESSAGE_MEDIA_GENERIC
HOMEPOD_HANDOFF_SUBTITLE_TRANSFER
-[SDNotificationManager homePodHandoffContentForDevice:info:]
### Cannot create HomePod content for unknown variant: %ld
HOMEPOD_HANDOFF_HEADER_DEFAULT
HomePodHandoffCategory
homepod.fill
60909dfe8f8c461e619cf5ffef54b503
homepodmini.fill
Kettle
FeatureComplete
### No attachment???
-[SDNotificationManager _homePodHandoffPostIfNeeded:info:]_block_invoke
HHPost %@
-[SDNotificationManager _homePodHandoffRemove:reason:]
HHRemove %@, %@
-[SDNotificationManager _homePodHandoffRemoveAll]
HHRemoveAll
-[SDNotificationManager _homePodHandoffUpdateIfNeeded:info:]
### Cannot update unrecognized ID: %@
### Failed to created content from info: %@
HHUpdate %@, %@
-[SDNotificationManager _homePodHandoffUpdateIfNeeded:info:]_block_invoke
-[SDNotificationManager _homePodHandleResponse:completion:]
Handle HomePod response: %@
### No identifier for notification response? %@
### No action identifier for notification response? %@
TRANSFER
Unrecognized action: %@
-[SDNotificationManager userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
### Unrecognized notification center: %@ for response: %@
### Error handling notification response: %@
-[SDNotificationManager testPost:]
Test post
-afr
-kba
-kbr
-kbu
-wkb
-waf
This is a test user notification
Example Subtitle
Notification Title
-[SDNotificationManager testPostBasic]
Test: Posting basic notification
-[SDNotificationManager testAutofillPost]
Test: Posting AF notification
-[SDNotificationManager testAutoFillRemove]
Test: Removing AF notification
HOMEPOD_HANDOFF_MESSAGE_CALL_PEER_IPAD
HOMEPOD_HANDOFF_MESSAGE_CALL_PEER_IPHONE
HOMEPOD_HANDOFF_MESSAGE_CALL_PEER_IPOD
HOMEPOD_HANDOFF_MESSAGE_CALL_PEER
John Appleseed
Kitchen
-[SDNotificationManager testHandoffPost]
Test: Posting Handoff notification
-[SDNotificationManager testKeyboardPost]
Test: Posting TVKB notification
-[SDNotificationManager testKeyboardPostAutoFill]
Test: Posting KB notification with AutoFill
-[SDNotificationManager testKeyboardRemove]
Test: Removing KB notification
Updated prompt
Updated Title
-[SDNotificationManager testWatchKeyboard]
Test: Posting WatchKB notification
-[SDNotificationManager testWatchKeyboardAutoFill]
UNUserNotificationCenter
/System/Library/Frameworks/UserNotifications.framework/UserNotifications
UNNotificationRequest
HPMedia
HPCall
TVAutoFill
TVKeyboard
WatchKeyboard
UNErrorDomain
UNNotificationAttachmentOptionsTypeHintKey
UNNotificationAttachmentOptionsHiddenFromDefaultExpandedViewKey
UNNotificationAttachment
UNNotificationDefaultActionIdentifier
UNNotificationDismissActionIdentifier
UNMutableNotificationContent
UNNotificationSound
RTIInputSystemDataPayload
/System/Library/PrivateFrameworks/RemoteTextInput.framework/RemoteTextInput
Client
UserDismiss
UserTap
Untrigger
UNNotificationSilenceActionIdentifier
com.apple.mobilephone
VOICEMAIL
SDUnlockLocalLTK
SDUnlockRemoteLTK
SDUnlockPairingID
SDUnlockKeybagUUID
SDUnlockBackupExclusion
UnlockSecurityLocalLongTermKey
UnlockSecurityRemoteLongTermKey
UnlockServiceName
com.apple.Sharing.lock-escrow
com.apple.sharingd.unlock
Items Exist | Device Locked
AutoUnlockCloudPairRetries
CloudPairGeneralRetryDate
CloudPairShortRetryDate
AutoUnlockLastSeenWatchDate
AutoUnlockWatchCurrentlyInList
AutoUnlockWatchExistedInUnlockList
ApproveBluetoothIDsChanged
com.apple.sharingd.auto-unlock.transport-client-queue
com.apple.sharingd.auto-unlock.transport-queue
com.apple.private.alloy.continuity.unlock
watch
iphone
ipad
AUDeviceBlackList
AUForceApproveLabel
iPhone
iPad
-[SDAutoUnlockTransport macVersionEligibleForDeviceID:]
5EAFD122-F291-4D56-B1F9-D856CBBC7E0C
Watch0,0
Watch OS
14S000
Placeholder
AUShowIDInName
AUShowOtherDevices
AUDisableEncryption
Unlock IDS Devices
%''@, %@, %@, %@, BT=%@
No devices registered
q24@?0@8@16
All...
SDAppleIDAgent
production
Push connection still active during dealloc
-[SDAppleIDAgent _accountState]
User not signed in
Device not unlocked yet
No account info for apple ID %@
No altDSID for %@, probably because it doesn't have the identity object.
No identity object for %@. A request is in progress
No identity object for %@
No certificate for %@
No intermediate certificate for %@
No private key for %@
Certificate expired
Identity object for %@ is invalid
Validation Record for %@ is invalid
-[SDAppleIDAgent _activate]
Activate
-[SDAppleIDAgent _invalidate]
Invalidated certificate request
Invalidated server task
-[SDAppleIDAgent _cleanUpAccount:]
Certificate token is missing or stale, setting it to nil
-[SDAppleIDAgent _ensurePushStarted]
AIA disabled
com.apple.coreservices.appleid.aps
com.apple.idmsauthagent
Started push agent with environment %@
-- SDAppleIDAgent --
Creation Date:                       %@
Enabled:                             %s
Push Environment:                    %@
Apple ID:                            %@
First Name:                          %@
Last Name:                           %@
AltDSID:                             %@
Validation Record (VR) Available:    %s
VR AltDSID:                          %@
VR Valid Start Date:                 %@
VR Suggested Valid Duration:         %ld
VR Next Check Date:                  %@
VR Needs Update:                     %s
VR Invalid:                          %s
Validated Email Addresses:           %@
Validated Email Hashes:              %@
Validated Phone Numbers:             %@
Validated Phone Hashes:              %@
Temporary Private Key Reference:     %s
Private Key Persistent Reference:    %s
Certificate Available:               %s
Certificate Account Identifier (AI): %@
Certificate Expiration Date:         %@
Certificate Serial Number:           %@
Certificate Token:                   %@
Certificate AI and VR AltDSID match: %s
Intermediate Certificate Available:  %s
Intermediate Cert. Expiration Date:  %@
Intermediate Cert. Serial Number:    %@
Identity Available:                  %s
Identity Invalid:                    %s
Identity Needs Renewal:              %s
Device Unlocked Once:                %s
Old Agent Identity Queried:          %s
OldAgentIdentityWasUsed
Old Agent Identity Used:             %s
Old Agent Certificate Serial Number: %@
OldAgentCertificateSN
Last Sign In Date:                   %@
LastSignInDate
Last Sign Out Date:                  %@
LastSignOutDate
Last Apple ID To Sign Out:           %@
LastSignOutAppleID
Last All Good Date:                  %@
LastAllGoodDate
Account state:                       %@
v24@?0^{__SecTrust=}8B16i20
-[SDAppleIDAgent _ensureEduModeDevicesAreCleanedUp]_block_invoke
Keychainc cleanup tag %d < %d. Remove all items
### SFAppleIDRemoveAllCertificatesFromKeychain failed with err=%#m
### SFAppleIDRemoveAllKeysFromKeychain failed with err=%#m
KeychainCleanupTag
-[SDAppleIDAgent _ensurePushStopped]
Invalidated push agent
-[SDAppleIDAgent _ensurePeriodicVerifyTimerStarted]
Started periodic verify timer
-[SDAppleIDAgent _ensurePeriodicVerifyTimerStopped]
Stopped periodic verify timer
-[SDAppleIDAgent _ensureThrottledRetryTimerStartedWithSuggestedDelay:]
Throttled retry already scheduled
Using server suggested delay of %d seconds
Started throttled retry timer with delay: %d seconds
-[SDAppleIDAgent _ensureThrottledRetryTimerStopped]
Stopped throttled retry timer
-[SDAppleIDAgent _handleAccountIdentifierValidationRecordMismatch]
Apple ID isn't set
-[SDAppleIDAgent _handleAppleIDChangedNotification]
Apple ID changed
-[SDAppleIDAgent _handleAppleIDSignedInNotification]
Apple ID signed in
-[SDAppleIDAgent _handleAppleIDSignedOutNotification]
Apple ID signed out
-[SDAppleIDAgent _handleCertificateStatusUpdate:forAppleID:]
### Apple ID %@ not currently signed in, cannot handle certifcate status 
### No account for %@, cannot handle certificate status
### Certificate status %@, removing current identity
Certificate status %@
### Unhandled certificate state %@
MatchedValue
-[SDAppleIDAgent _handleFindPersonResponse:forRequest:emailOrPhone:withError:queue:completion:]
Find person response matched value doesn't match the request
### Find Person request failed with error %@
-[SDAppleIDAgent _handleInfoResponse:forAppleID:infoRequest:certificateSerialNumber:withError:completion:]
Outdated info request received, ignoring
CertificateSerialNumber
Response certSN %@ is different than the requested %@
CertificateStatus
No certificate status returned by server
-[SDAppleIDAgent _handleInfoResponse:forAppleID:infoRequest:certificateSerialNumber:withError:completion:]_block_invoke
### SFAppleIDParseValidationRecordData failed with error %#m
altDsID
SuggestValidDuration
ValidatedEmailHashes
ValidatedPhoneHashes
ValidAsOf
Validation record for %@ is valid
### Info request failed with error %@
-[SDAppleIDAgent _handleKeyBagFirstUnlockNotification]
Key Bag First Unlock notification
-[SDAppleIDAgent _handleKeyVerificationFailure]
Handling key verification failure
-[SDAppleIDAgent _handleServerTaskCompletionWithError:]
### Server task failed with error %@
-[SDAppleIDAgent _handleUILockStatusChangedNotification]
UI Lock Status Change notification
-[SDAppleIDAgent _handleUILockStatusChange]
Handling UI Lock status change. Device was unlocked once: %s
-[SDAppleIDAgent _handleUntrustedAppleIDCertificateChainForIdentity:]
Unable to get account for %@
No identity for %@
-[SDAppleIDAgent _handleReceivedIdentity:forAppleID:identityRequest:withError:completion:]
Outdated identity request received, ignoring
-[SDAppleIDAgent _handlePeriodicVerifyTimerFired]
Periodic verify timer fired
Throttled retry scheduled, ignoring periodic verify
-[SDAppleIDAgent _handleThrottledRetryTimerFired]
Throttled retry timer fired
-[SDAppleIDAgent _performKeyVerificationForIdentity:]
### No identity
LastKeyVerificationDate
Skipping key verification. Last one peformed %g seconds ago.
Verify keys failed with err=%#m
com.apple.sharing.OperationDuration
operation
durationMs
LastKeychainCountDate
com.apple.sharing.AIAKeychainCount
certCount
privKeyCount
pubKeyCount
latencyMs
-[SDAppleIDAgent _performKeychainCount]
Certs: %d, private keys: %d, public keys: %d
### SDAppleIDCertificateAndKeyCounts failed with err=%#m.
requestType
createAndFetchCert
appleID
v24@?0@"SFAppleIDIdentity"8@"NSError"16
triggerPush
-[SDAppleIDAgent _performOtherTaskWithInfo:completion:]
Trigger push
Done
triggerVerify
Trigger verify
removeAppleID
Remove Apple ID Request
setMetaInfo
Set Meta Info Request
value
### Unsupported request type %@
createCert
v28@?0^{__SecKey=}8^{__SecKey=}16i24
-[SDAppleIDAgent _performServerTaskWithInfo:completion:]
CreateCSIdentity semaphore timed out
fetchCert
certificateToken
getMyInfo
certificateSN
vrid
serialNumber
clientAidvrId
findPerson
emails
phones
Server Task Type: %d
Response Info: %@
v24@?0@"NSDictionary"8@"NSError"16
SDAppleIDAgent.m
inQueue and _dispatchQueue both nil.
-[SDAppleIDAgent _prefsChanged]
Device is in edu mode, agent disabled 
aiaEnabled
Agent Enabled: %s -> %s
aiaLinkIdentityEnabled
Agent Link Identity Enabled: %s -> %s
aiaPushEnvironment
development
Agent Push Environment: %@ -> %@
-[SDAppleIDAgent _requestInfoForAppleID:completion:]
Info request already in progress
Request info for %@
-[SDAppleIDAgent _requestIdentityForAppleID:certificateToken:privateKeyPersistentReference:withCompletion:]
Identity request already in progress
Request identity for %@, certificate token %@, private key persistent ref %s
v24@?0@"NSString"8@"NSData"16
AgentDescription
-[SDAppleIDAgent _updateAppleID]
Apple ID changed from %@ to %@
-[SDAppleIDAgent _updateMyInfo]
AppleID is nil, unable to updated my info
-[SDAppleIDAgent _verifyState]
Verifying state
My AppleID is nil, user probably not signed in
Account doesn't have an identity object
Identity is invalid or needs renewal
Key verificatin failed
Account doesn't have a validation record
Validation Record needs update or is invalid
### Certificate account identifier does not match altDSID in the validation record
-[SDAppleIDAgent _verifyState]_block_invoke_4
-[SDAppleIDAgent _verifyState]_block_invoke_6
### Invalid certificate chain for %@, error %#m
Certificate chain for %@ is trusted
Agent state: all good.
v16@?0B8i12
IdentityLinkedOnce
OldAgentIdentityQueried
-[SDAppleIDAgent accountForAppleID:]
Account for %@:
-[SDAppleIDAgent verifiedIdentityForEmailOrPhone:queue:completion:]_block_invoke
Verified identity for %@: %@
v24@?0@"SDAppleIDVerifiedIdentity"8@"NSError"16
-[SDAppleIDAgent verifiedIdentityForEmailOrPhone:]_block_invoke
### copyCSIdentityForEmailOrPhone:queue:completion failed with error=%{error}
-[SDAppleIDAgent verifiedIdentityForEmailOrPhone:]
-[SDAppleIDAgent copyIdentityForAppleID:]
SecIdentity for %@:
-[SDAppleIDAgent queryVerifiedIdentityForEmailOrPhone:queue:completion:]_block_invoke
### FindPerson failed with error %@
### FindPerson returned no person info object
### No account identifier in person info object
v24@?0@"SFAppleIDPersonInfo"8@"NSError"16
AppleIDAccountValidationRecordData
-[SDAppleIDAgent connection:didReceiveToken:forTopic:identifier:]
Received push token '%.6@...', topic '%@', identifier '%@'
-[SDAppleIDAgent connection:didReceivePublicToken:]
Received public push token '%.6@...'
-[SDAppleIDAgent connection:didReceiveIncomingMessage:]
Received push notification topic '%@'
APSEnvironmentProduction
/System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService
APSEnvironmentDevelopment
APSConnection
Issued
Pending
Failed
Revoked
Expired
-[SDAutoUnlockWiFiRequest _invalidate]
com.apple.sharing.SDAutoUnlockWiFiManager
-[SDAutoUnlockWiFiManager _addWiFiRequest:]
-[SDAutoUnlockWiFiManager _invalidateWiFiRequest:]
identifier == %@
SDAutoUnlockWiFiManager.m
Invalid request params awdlInfo: %@ queueAvailableHandler: %@ invalidated: %d
-[SDAutoUnlockWiFiManager _processRequestQueue]
-[SDAutoUnlockWiFiManager _cancelWiFiRequest:]
-[SDAutoUnlockWiFiManager _resetManagerState]
-[SDAutoUnlockWiFiManager _invalidateCurrentRequest]
-[SDAutoUnlockWiFiManager _startRanging]
-[SDAutoUnlockWiFiManager _enableRangeableIfNeeded]
-[SDAutoUnlockWiFiManager _disableRangeable]
-[SDAutoUnlockWiFiManager _startAWDLWithInfo:]
-[SDAutoUnlockWiFiManager __handleAWDLDisabledIfNeededForRequest:]
-[SDAutoUnlockWiFiManager _restartAWDLTimer]
-[SDAutoUnlockWiFiManager _invalidateAWDLTimer]
-[SDAutoUnlockWiFiManager _handleAWDLTimerFired]
Unknown (%ld)
com.apple.sharing.sysdiagnose-queue
com.apple.private.alloy.nearby
v24@?0@"NSString"8@"NSError"16
com.apple.Honeybee.event-notify
kLogPath
kLogIdentifier
Sharing
StreamID
com.apple.AirDrop
DisableAWDL
Expect
User-Agent
Connection
Content-Type
gzip
pkzip
dvzip
close
100-continue
application/zip
application/x-cpio
application/x-dvzip
application/octet-stream
text/xml
POST
adVN
adVF
adDT
atag
cname
phash
ehash
nhash
comment
model
ecolor
icolor
osxvers
flags
file-read-data
 %ld
@me.com
@mac.com
%@@icloud.com
awdl0
%@.%@%@
com.apple.sharingd.DomainsChanged
com.apple.sharingd.ManagedChanged
type: %d, sessionID: %ld, destinations: %@
Proxy message failed
AWDL info retrieval failed
 with wrapper %@ sessionID: %@
Encryption failed
AUUseRangingKey
AutoUnlockUseCoreLocation
DisableRanging
failureReasons
ltkSyncing
v16@?0@"NSProgress"8
known
unknown
empty
@16@?0@8
com.apple.photos.asset-bundle
com.apple.private.live-photo-bundle
v16@?0@"NSArray"8
%lu files
%lu items
SDAirDropConnection
Continue (100)
OK (200)
No Content (204)
Bad Request (400)
Unauthorized (401)
Forbidden (403)
Conflict (409)
Expectation Failed (417)
Server Fail (500)
Insufficient Storage (507)
 Handoff
 CopyPaste
 Boosted
@unionOfObjects.UUIDString
SDActivityScanner
v24@?0@"NSObject<SFContinuityScannerClient>"8^B16
v24@?0@"SFActivityAdvertisement"8@"NSError"16
com.apple.sharing.handoff.scanning
Handoff State End
Handoff State
Is Scanning: %@
Scan Types: %@
Device Identifier To Lost Device Timer: %@
Device Identifier To Device Record: %@
TRANSFER_FROM_MIXED_TYPES_TEXT
com.apple.sharingd.ConnectedChanged
com.apple.SharingXPCHelper
SDXPCHelperConnection.m
SDXPCHelperConnection deallocated without -invalidate call
FALLBACK
-[SDXPCHelperConnection monogramImageDataForContact:style:diameter:monogramsAsFlatImages:isContactImage:]
-[SDXPCHelperConnection monogramImageDataForContact:style:diameter:monogramsAsFlatImages:isContactImage:]_block_invoke
v20@?0@"NSData"8B16
-[SDXPCHelperConnection groupMonogramImageDataForContacts:style:diameter:monogramsAsFlatImages:processOppositeBackgroundStyle:]
%@,%li,%f,%i
@"NSString"16@?0@"SharingXPCHelperImageItem"8
@"SharingXPCHelperImageItem"24@?0@"SharingXPCHelperImageItem"8^{CGImage=}16
-[SDXPCHelperConnection groupMonogramImageDataForContacts:style:diameter:monogramsAsFlatImages:processOppositeBackgroundStyle:]_block_invoke_3
v20@?0@"NSArray"8B16
@"NSArray"16@?0@"NSArray"8
groupContacts
-[SDXPCHelperConnection urlToCGImgDataForCallHandoffIconWithAppIconImageData:contact:]_block_invoke
v16@?0@"NSURL"8
-[SDXPCHelperConnection monogramImagesForMultipleContacts:style:diameter:monogramsAsFlatImages:]
-[SDXPCHelperConnection monogramImagesForMultipleContacts:style:diameter:monogramsAsFlatImages:]_block_invoke_4
multipleContacts
-[SDXPCHelperConnection CGImgForUIActivityTitles:foregroundColor:processOppositeColor:]
v32@?0@"NSString"8Q16^B24
,%@,%@,%@,
-[SDXPCHelperConnection CGImgForUIActivityTitles:foregroundColor:processOppositeColor:]_block_invoke_3
v32@?0@"SharingXPCHelperImageItem"8Q16^B24
activityTitles
CacheHits
CacheMisses
%02x
cacheFileCount
totalCacheAccessCount
numberOfSuggestions
suggestionsHash
sourceApplicationBundleID
isDarkMode
durationInMS
daemonPID
com.apple.sharing.sharesheetInvocation
-[SDXPCHelperConnection CGImgForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:processOppositeColor:]
,%@,%@,%lu,%i,%i,%@,
nameLabel
-[SDXPCHelperConnection CGImgForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:processOppositeColor:]_block_invoke
-[SDXPCHelperConnection CGImgDataForActivityMoreListEntryForActivityTitle:labelColor:processOppositeColor:]
activityTitle
-[SDXPCHelperConnection CGImgDataForActivityMoreListEntryForActivityTitle:labelColor:processOppositeColor:]_block_invoke
-[SDXPCHelperConnection CGImgForActionPlatterWithTitle:tintColor:]
actionPlatter
-[SDXPCHelperConnection CGImgForActionPlatterWithTitle:tintColor:]_block_invoke
-[SDXPCHelperConnection CGImgForNearbyBadgeWithCount:]
%li,%@
nearbyBadge
-[SDXPCHelperConnection CGImgForNearbyBadgeWithCount:]_block_invoke
(UIColor %.1f,%.1f,%.1f,%.1f)
NULL
,%li,%@,%li,
-[SDXPCHelperConnection _updateShareSheetHostConfiguration]_block_invoke
-[SDXPCHelperConnection setSessionKeepAliveTransactionIdentifier:]_block_invoke
CompanionStreamConnectResponse
RequestAuthorData
Could not send request to other device
Could not create streams
Connection refused
Connection lost
Could not create connection, wireless not enabled
AutoUnlockSuggestedPeers
AutoUnlockPeerRetries
AutoUnlockRetryDate
AutoUnlockRetryMultiplier
AutoUnlockSetupRetryVersion
com.apple.sharing.auto-unlock-suggestion-manager
C42094B4-B936-4673-8034-4EEFD437BEB0
com.apple.sharingd.auto-unlock.suggestion-manager-queue
q24@?0@"SFAutoUnlockDevice"8@"SFAutoUnlockDevice"16
AUSuggestionsEnabled
AUSuggestionsIgnoreBackoff
AUSuggestionsTestDeviceID
AUAlwaysShowSetupRetry
AutoUnlockIconCache
-[SDAutoUnlockMacIconCache iconImageDataForHash:]
No icon cache for hash: %@
### Icon cache isn't a dictionary
AutoUnlockImageData
### Error getting image data: %x
AutoUnlockAppName
Found cached image: %ld bytes, hash: %@, app: %@
-[SDAutoUnlockMacIconCache cacheIconImageData:hash:appName:]
Cached image: %ld bytes, hash: %@, app: %@
AUIconCacheItem
com.apple.sharingd.AirDropAllowedChanged
com.apple.sharingd.AirDropLinkStateChanged
com.apple.sharingd.AirDropPublished
com.apple.sharingd.AirplaneModeChanged
com.apple.sharingd.AltDSIDChanged
com.apple.sharingd.AppleIDAccountInfoChanged
com.apple.sharingd.AppleIDChanged
com.apple.sharingd.AppleAccountSignIn
com.apple.sharingd.AppleAccountSignOut
com.apple.sharingd.BlacklistedAppsChanged
com.apple.sharingd.BluetoothPowerChanged
com.apple.sharingd.CarPlayStatusChanged
com.apple.sharingd.ClamshellStatusChanged
com.apple.sharingd.ComputerNameChanged
com.apple.sharingd.ConsoleUserChanged
com.apple.sharingd.ContactsChanged
com.apple.sharingd.ContinuationPayloadSent
com.apple.sharingd.DebugInfoRequested
com.apple.sharingd.DiscoverableModeChanged
com.apple.sharingd.ExternalDisplaysChanged
com.apple.sharingd.FinderAirDropChanged
com.apple.sharingd.FinderPrefsChanged
com.apple.sharingd.HotspotMISStateChanged
com.apple.sharingd.KeyBagFirstUnlock
com.apple.sharingd.KeyBagLockStatusChanged
com.apple.sharingd.LocalHostNameChanged
com.apple.sharingd.MediaAccessControlSettingChanged
com.apple.sharingd.MountPointsChanged
com.apple.sharingd.MulticastDNSChanged
com.apple.sharingd.MultipleUsersLoggedInChanged
com.apple.sharingd.NetbiosNameChanged
com.apple.sharingd.ODiskMountPointsChanged
com.apple.sharingd.PairedWatchLockStateChanged
com.apple.sharingd.PairedWatchPasscodeStateChanged
com.apple.sharingd.PairedWatchWristStateChanged
com.apple.sharingd.PersonalHotspotAllowedChanged
com.apple.sharingd.PowerSourceChanged
com.apple.sharingd.ResetState2
com.apple.sharingd.ResetState
com.apple.sharingd.ScreenStateChanged
com.apple.sharingd.SmartCoverClosedChanged
com.apple.sharingd.SystemHasPoweredOn
com.apple.sharingd.SystemUIChanged
com.apple.sharingd.SystemWillSleep
com.apple.sharingd.SystemWillNotSleep
com.apple.sharingd.UILockStatusChanged
com.apple.sharingd.UserPictureChanged
com.apple.sharingd.VolumesChanged
com.apple.sharingd.WirelessCarPlayChanged
com.apple.sharingd.WirelessModeChanged
com.apple.sharingd.WirelessPowerChanged
com.apple.sharingd.WirelessCriticalChanged
com.apple.sharingd.WorkgroupChanged
com.apple.sharingd.WristStateChanged
-[SDStatusMonitor clearMonitorCache]
-- SDStatusMonitor --
Current Discoverable Mode     %@
AD Available:                 %s
AD Advertising:               %s
AD Recieving:                 %s
Requested
Default
User Defaults
com.apple.sharing.airdrop-mode-changed
AccountState
v20@?0@"NSDictionary"8i16
-[SDStatusMonitor clearMyAppleIDInfo]
v20@?0B8@"NSError"12
-[SDStatusMonitor clearMyIconAndHash]
BuildVersion
IsSimulator
marketing-name
ProductName
ProductType
ProductVersion
ReleaseType
Production
Simulator
%@ (%@)
%@ %@ (%@)
%@: %@, %@, 
BatteryCurrentCapacity
BatteryIsCharging
charging
not charging
%d%% (%@)
B332BTAddressRotationDelayMsec
MinPersonImageSize
DeviceName
iPod
iPod touch
SidebarMaxCount
ShareSheetMaxSuggestions
WorkgroupThreshold
AlwaysAutoAccept
AlwaysSendPayload
B332PairingEnabled
SetupDone
ForceNoBuddy
com.apple.purplebuddy
BypassLTKeyAbort
CoalesceMe
DisableAutoAccept
DisableAutoAcceptForPhotosAssetBundles
DisableCompression
DisableContinuityTLS
DisablePeopleSuggestions
DisablePictureQuery
DisablePipelining
DisableQuarantine
DisableExtractMediaFromBundles
DisableTransformingPhotosAssetBundlesToFolders
DisableRotation
DisableAirDropAdvertising
EnableAirDropReceiving
EnableAllRecents
EnableBugs
DisableContinuity
EnableDebugMode
EnableDVZip
EnableHotspotFallback
EnableOOBPCredentialLogging
EnablePKZip
EnablePKZipCompression
pdStrangers
EnableStreamDebugging
EnableWebloc
EnableXML
ForceAWDL
ForceP2P
IgnoreIconDiskCache
RegisterAllInterfaces
ShowMeInWormhole
ShowThisComputer
TestDiskFull
EnableAsynchronousProxyLoading
client
server
begin
com.apple.airplay.prefsChanged
v12@?0i8
com.apple.airplay
accessControlLevel
p2pAllow
available
unavailable
_whats-my-name._tcp.
local.
com.apple.sharing.privacy-changed
-[SDStatusMonitor installContactsMonitor]
%@/%@/%@
MulticastDNS
preventExitForLocaleChange
pau_check_passcode
com.apple.springboard.hasBlankedScreen
Unknown
DetectDisabled
Unexpected
com.apple.airport.preferences.plist
All Good
Identity Invalid
Validation Record Invalid
Identity Request In Progress
Certificate Expired
No Certificate
Password Invalid
Password Inaccessible
No Account
No Identity
No Private Key
No Intermediate Certificate
User Not Signed In
Device Not Unlocked Once
ITUNES_STORE_LINK_IBOOK
GENERIC_ITEM
SDUnlockLTKTransferPreventExitReason
SDUnlockSetupSessionPreventExitReason
com.apple.Sharing.PairedUnlock.DailyMetric
<%@: %p, date:%@, on wrist:%@>
Waiting For Auth Token:%@
v16@?0@?<v@?q>8
Other side never responded
Bad device identifier
Invalid password
Could not sign remote key
Could not step escrow session
Could not create escrow session
Missing information to created session
Could not step escrow record
Could not complete final step
Error occured on the lock side
v16@?0B8B12
com.apple.sharingd.lock-state
Failed to send to other device
authToken
com.apple.MobileStore
com.apple.Music
SFAirDropActivitySubjectiTunesStoreLinkType
ITUNES_STORE_LINK_MUSIC
ITUNES_STORE_LINK_MOVIE
ITUNES_STORE_LINK_TV_SHOW
ITUNES_STORE_LINK_AUDIOBOOK
ITUNES_STORE_LINK_RINGTONE
ITUNES_STORE_LINK
Unlock Enabled:%@
Local Long Term Key Exists:%@
Remote Long Term Key Exists:%@
Device Key Bag State:%ld
AKS Key Bag State:%d
Device Nearby:%@
Setup AKS Session ID:%ld
Unlock AKS Session ID:%ld
Stash AKS Session ID:%ld
Nano Registry State:%d
Device Paired:%@
SDNotificationNameNearbyBLEAuthTagChanged
SDNotificationNameIDSAccountsChanged
SDNotificationNameIDSDevicesChanged
SDNearbyAgentNotificationUnlockBLEDataReceived
SDNearbyAgentNotificationInfoKeyBLEDevice
SDNearbyAgentNotificationInfoKeyBLEData
BLEAdv
SDNearbyAgentCore
-[SDNearbyAgent sharedNearbyPipe]
### Ignoring pipe start before activate
-- SDNearbyAgent --
Up %ll{dur}, level %d (%s), timer %s, last user %.2f secs, linger %s, screen %s (%s), cover %s, multiuser %s, sysUI 0x%X, watch %d, FamF 0x%llX, ARS %s
closed
not closed
, AID '%@'
 (%s)
, iTunes '%@' (%s)
, MeDev F<%.8@> I<%.8@> '%@'
AutoUnlocking:         YES
Boost Nearby Info:     YES
BLE Connections:       %ld
BLE Diag Clients:      %ld
BLE Action Advertiser: %@, linger %s
BLE Action Scanner:    %@
BLE Info Advertiser:   %@
BLE Info Scanner:      %@
BLE Prox Scanner:      %@
BLE enhanced discovery assertions: %s
BLE enhanced discovery should run:%s
BT Pipe:               %@
Device Discovery:      %ld request(s)
, CoreDevice
, Action
, NAScreenOff
, Info
, NIScreenOff
, Prox
, PPScreenOff
, FitPair
, %ld Action
, %ld Info
, %ld Prox
v32@?0@"NSUUID"8@"SDBLEIdentifiedDevice"16^B24
, %u of %ld Identified
IDS Service:           %s, %s, %ld device(s), %d AppleTV, %d Continuity, %d HomePod, iMessage %s, %ld device(s) ALEncrypted %d
signed in
not signed in
Services:              %ld, %ld sessions, %ld setup sessions
SystemService:         %@
Pref: '%@' = '%@'
-- BLE Connections --
-- Setup Sessions --
%@ -- %@
-- Sessions --
-- Devices --
-[SDNearbyAgent setAudioRoutingScore:]_block_invoke
Audio routing score changed: %s -> %s
-[SDNearbyAgent setAutoUnlockActive:]_block_invoke
AutoUnlocking: %s -> %s
-[SDNearbyAgent setBoostNearbyInfo:]_block_invoke
BoostNearbyInfo: %s -> %s
-[SDNearbyAgent setEnhancedDiscovery:]_block_invoke
Enhanced discovery %s, reference count %d
EnhancedDiscovery: %s -> %s
-[SDNearbyAgent setHotspotInfo:]_block_invoke
HotspotInfo: 0x%X -> 0x%X
-[SDNearbyAgent _activate]
Sharing-CA
com.apple.rapport.familyFlagsChanged
-[SDNearbyAgent _activate]_block_invoke
Family flags changed: 0x%llX
Bluetooth address changed
-[SDNearbyAgent _activate]_block_invoke_2
Call info changed
-[SDNearbyAgent _activate]_block_invoke_3
First unlock state changed
-[SDNearbyAgent _activate]_block_invoke_4
Me device state changed
-[SDNearbyAgent _activate]_block_invoke_5
Primary AppleID changed
-[SDNearbyAgent _activate]_block_invoke_6
ScreenOn state changed
-[SDNearbyAgent _activate]_block_invoke_7
Screen saver changed
-[SDNearbyAgent _activate]_block_invoke_8
WiFi state changed
-[SDNearbyAgent _activate]_block_invoke_9
Manatee state changed
-[SDNearbyAgent _activate]_block_invoke_11
System monitor activation completed
-[SDNearbyAgent _invalidate]
-[SDNearbyAgent _handleAirDropDiscoverableModeChanged:]_block_invoke
AirDrop discoverable mode changed
-[SDNearbyAgent _handleAppleIDChanged:]_block_invoke
AppleID changed
activityPollSeconds
-[SDNearbyAgent prefsChanged]
Activity poll seconds: %d -> %d
activityRecentSeconds
Activity recent seconds: %d -> %d
btPipeEnabled
BT Pipe enabled: %s -> %s
caEnabled
Coordinated Alerts enabled: %s -> %s
caForce
Coordinated Alerts force: %d -> %d
caPhoneCalls
Coordinated Alerts phone calls: %s -> %s
caScanIfVeryActive
Coordinated Alerts scan if very active: %s -> %s
caSingleDevice
Coordinated Alerts single device: %s -> %s
idEnabled
Identification enabled: %s -> %s
nearbyActionAdvertiseDisabled
NearbyAction advertise disabled: %s -> %s
nearbyActionRSSILog
NearbyAction RSSI log: %s -> %s
nearbyActionScan
NearbyAction scan always: %s -> %s
NearbyAction scan never: %s -> %s
nearbyAuthTagOverride
Nearby AuthTag override: %@ -> %@
nearbyInfoAdvertiseAlways
NearbyInfo advertise always: %s -> %s
nearbyInfoAdvertiseDisabled
NearbyInfo advertise disabled: %s -> %s
nearbyInfoAdvertiseLingerSecs
NearbyInfo advertise linger seconds: %.0f -> %.0f
nearbyInfoRSSILog
NearbyInfo RSSI log: %s -> %s
nearbyInfoWiFiP2P
NearbyInfo WiFiP2P: %s -> %s
pwsContactHashes
ContactHashes: %s -> %s
ppAdvFieldsLog
Log ProxPairing advertisement fields: %s -> %s
ppEnabled
Proximity Enabled: %s -> %s
ppInfoOverride
Proximity Info Override: %@
ppRSSIEstimatorInfo
ppRSSILog
Proximity RSSI log: %s -> %s
homePodIdentifiesAsB520
HomePod identifying as B520: %s -> %s
riClientEnabled
RIClient is enabled: %s -> %s
-[SDNearbyAgent _update]
### Ignoring update before activate
com.apple.sharing.activity-level-changed
Create activity timer failed
-[SDNearbyAgent _activityMonitorCurrentLevelAndNeedsPoll:recentUserActivity:]
Activity level changed %d (%s) -> %d (%s)
-[SDNearbyAgent _activityMonitorCarPlayStatusChanged:]_block_invoke
CarPlay changed to %s
-[SDNearbyAgent _activityMonitorMultipleUsersLoggedInChanged:]_block_invoke
Multiple users logged in changed: %s
-[SDNearbyAgent _activityMonitorUILockStatusChanged:]_block_invoke
UserActive
-[SDNearbyAgent _activityMonitorMediaAccessControlSettingChanged:]_block_invoke
Media access control setting state changed: %d
-[SDNearbyAgent _activityMonitorWatchWristStateChanged:]_block_invoke
Watch wrist state changed: %d
-[SDNearbyAgent _bleNearbyActionAdvertiserEnsureStarted]
Avoid setting target auth tag as there is a service with no target auth tag
Avoid setting target auth tag as there is more than one to set {%@, %@}
tatag
ssidH
BLE NearbyAction advertiser start: %#{flags}, %##@
-[SDNearbyAgent _bleNearbyActionAdvertiserEnsureStarted]_block_invoke
### Start NearbyAction advertiser failed: %@
BLE NearbyAction advertiser update: %#{flags}
BLE NearbyAction advertiser goodbye update: %#{flags}
BLE NearbyAction linger advertise for 5 seconds for goodbyes
-[SDNearbyAgent _bleNearbyActionAdvertiserEnsureStarted]_block_invoke_2
BLE NearbyAction linger advertise ended
-[SDNearbyAgent _bleNearbyActionAdvertiserEnsureStopped]
BLE NearbyAction advertiser stop
-[SDNearbyAgent _bleNearbyActionScannerEnsureStarted]
BLE NearbyAction scanner start
-[SDNearbyAgent _bleNearbyActionScannerEnsureStarted]_block_invoke
BLE NearbyAction found %@
BLE NearbyAction lost %@
-[SDNearbyAgent _bleNearbyActionScannerEnsureStarted]_block_invoke_2
BLE NearbyAction changed %@
BLE NearbyAction scan state changed: %s
### Start NearbyAction scanner failed: %@
-[SDNearbyAgent _bleNearbyActionScannerEnsureStopped]
BLE NearbyAction scanner stop
-[SDNearbyAgent _bleNearbyInfoAdvertiserEnsureStarted]
BLE NearbyInfo advertiser created
-[SDNearbyAgent _bleNearbyInfoAdvertiserEnsureStopped]
BLE NearbyInfo advertiser stop
StopNearbyInfo
v32@?0@"NSUUID"8@"SFService"16^B24
-[SDNearbyAgent _bleNearbyInfoAdvertiserUpdate]
BLE NearbyInfo advertiser update
AirDropUsable
WiFiP2P bit is not set, WiFi state: %s, hostAP: %@, NearbyAction scan: %s, HSA2: %@
R1Capability
BLE NearbyInfo advertiser start: %##@
-[SDNearbyAgent _bleNearbyInfoAdvertiserUpdate]_block_invoke
### Start NearbyInfo advertiser failed: %@
-[SDNearbyAgent _bleNearbyInfoAdvertiserUpdateAddAudioRoutingScore:]
Skip adding field3 to NearbyInfo advertiser
BLEAdvKeyAudioRoutingScoreInfo
Updated audio routing score: %s <%@>
-[SDNearbyAgent _bleNearbyInfoAdvertiserUpdateAddHotspotInfo:]
Skip adding hotspot info to NearbyInfo advertiser
BLEAdvKeyHotspotInfo
Updated HotspotInfo: 0x%X <%@>
-[SDNearbyAgent _bleEncryptActivityLevel:]
Not encrypting activity level because self IRK is not available
Not encrypting activity level because BLE AuthTag is not available
BLEAdvKeyActivityLevel
NearbyInfo sending activity level, original: 0x%x encrypted:0x%x
-[SDNearbyAgent _bleNearbyInfoAdvertiserLingerStart:]
NearbyInfo Linger advertise start: %@, %.0f seconds
-[SDNearbyAgent _bleNearbyInfoAdvertiserLingerStart:]_block_invoke
NearbyInfo Linger advertise stop: %@
-[SDNearbyAgent _bleNearbyInfoReceivedData:cnx:peer:]
### BLE NearbyInfo frame no type (%tu bytes)
BLE NearbyInfo no-op frame
BLE NearbyInfo PingRequest: %'.32@
BLE NearbyInfo PingResponse: %'.32@
BLE NearbyInfo received frame type 0x%02X, %ld bytes
### BLE Remote app frame with no service
### BLE Remote app frame with no service event handler
### BLE NearbyInfo frame %s, no service type
BLE NearbyInfo frame %s, %s, %ld bytes, peer %@
### BLE NearbyInfo unsupported frame type 0x%02X
### BLE NearbyInfo frame error: %#m
-[SDNearbyAgent _bleNearbyInfoReceivedFrameType:src:end:cnx:]
### BLE NearbyInfo frame no session ID (%tu bytes)
### BLE NearbyInfo frame no message ID (%tu bytes)
Bad frame type: %d
BLE NearbyInfo received session frame type 0x%02X
### BLE NearbyInfo session receive with no handler: %@
00000000-0000-0000-0000-000000000000
BLE NearbyInfo received service frame type 0x%02X
_serviceUUID
### BLE NearbyInfo service receive with no handler: %@
### BLE NearbyInfo receive frame failed: %#m
-[SDNearbyAgent bleNearbyInfoStartConnectionToDevice:owner:connected:]
Reusing BLE connection for %@
Creating BLE connection for %@
-[SDNearbyAgent bleNearbyInfoStopConnectionToDevice:owner:]
Invalidating BLE connection for %@
-[SDNearbyAgent bleNearbyInfoSendFrameType:serviceType:data:peer:isSession:]
### BLE Nearby send frame type %s, invalid service 0x%X, %ld bytes, peer %@
### BLE Nearby send frame type %s, service %s, %ld bytes, unknown peer %@
### Can't send more than 255 fragments (%zu total bytes)
-[SDNearbyAgent bleNearbyInfoSendFrameType:serviceType:data:peer:isSession:]_block_invoke
### BLE Nearby send frame type %s, fragment %u, service %s, %ld of %ld bytes, peer %@ failed: %@
### BLE Nearby send frame type %s, last fragment %u, service %s, %ld of %ld bytes, peer %@ failed: %@
-[SDNearbyAgent bleNearbyInfoSendFrameType:serviceType:data:peer:isSession:]_block_invoke_2
### BLE Nearby send frame type %s, service %s, %ld bytes, peer %@ failed: %@
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]
BLE NearbyInfo scanner start
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]_block_invoke
BLE NearbyInfo found %@
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]_block_invoke_2
BLE NearbyInfo lost %@
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]_block_invoke_3
BLE NearbyInfo changed %@
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]_block_invoke_4
BLE NearbyInfo scan state changed: %s
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]_block_invoke_5
### Start NearbyInfo scanner failed: %@
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStopped]
BLE NearbyInfo scanner stop
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]
BLE Prox scanner start
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]_block_invoke
BLE Prox found %@
BLE Prox found %@
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]_block_invoke_2
BLE Prox lost %@
BLE Prox lost %@
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]_block_invoke_3
BLE Prox changed %@
BLE Prox changed %@
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]_block_invoke_4
BLE Prox scan state changed: %s
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]_block_invoke_5
### BLE Prox scanner start failed: %@
-[SDNearbyAgent _bleProximityPairingScannerEnsureStopped]
BLE Prox scanner stop
-[SDNearbyAgent _btPipeEnsureStopped]
BTPipe stop
-[SDNearbyAgent _btPipeHandleFrameType:data:]
BTPipe ping request: %ld bytes
### Ping request too small: %ld bytes
-[SDNearbyAgent _btPipeHandleFrameType:data:]_block_invoke
### BTPipe ping response failed: %@
### Ping response too small: %ld bytes
BTPipe ping response: %ld bytes, %.0f ms
Received message from unexpected device with BT UUID %@. Expected: %@
-[SDNearbyAgent _smartCoverStatusChanged:]
smartCoverStatusChanged notification
-[SDNearbyAgent _wirelessCriticalChanged:]
wirelessCriticalChanged notification, wifiCritical=%@
Disabling enhanced discovery
WirelessCritical
-[SDNearbyAgent _bleAdvertisingAddressChanged]
BLE address unchanged: %.6a
BLE address changed: %.6a
-[SDNearbyAgent _bleUpdateAuthTagIfNeeded]
### Generate BLE Auth Tag failed: %{error}
Updated BLE Auth Tag: <%@>
-[SDNearbyAgent _bleUpdateScanner:typeFlag:]_block_invoke
Updating BLEScanner %p deviceFilter changed to %@ 
Updating BLEScanner %p changeFlags from 0x%x to 0x%x
Updating BLEScanner %p RSSI threshold to %ld
Updating BLEScanner %p scanCache from %@ to %@
Updating BLEScanner %p scanRate from %s to %s
Updating BLEScanner %p trackedPeers to %@
CUGuardLetNoReturn
CUGuardLet with no return
apay
rssi
atvp
ppEn
ppEx
ppRp
psEn
psEx
whas
ppEn-Device1,8202
psEn-Device1,8202
ppRp-Device1,8202
ppEn-BeatsX1,1
ppEx-BeatsX1,1
psEn-BeatsX1,1
psEx-BeatsX1,1
ppEn-BeatsSolo3,1
ppEx-BeatsSolo3,1
psEn-BeatsSolo3,1
psEx-BeatsSolo3,1
ppEn-BeatsStudio3,2
ppEx-BeatsStudio3,2
psEn-BeatsStudio3,2
psEx-BeatsStudio3,2
rEst
algo
homepod-iPad-*
homepod-iPhone10,1-*
homepod-iPhone10,2-*
homepod-iPhone10,4-*
homepod-iPhone10,5-*
homepod-iPhone11,2-*
homepod-iPhone11,6-*
homepod-iPhone11,8-*
homepod
homepod-*-B520ish
rssiSmallEnter
rssiSmallExit
rssiMediumEnter
rssiMediumExit
b520ho
info
rssiExit
rssiImm
rssiNear
rssiFar
ioss-*-iPad
ioss-iPad-*
ioss-iPhone10,1-*
ioss-*-iPhone10,1
ioss-iPhone10,1-iPhone10,1
ioss-iPhone10,1-iPhone10,2
ioss-iPhone10,2-*
ioss-*-iPhone10,2
ioss-iPhone10,2-iPhone10,2
ioss-iPhone10,2-iPhone10,1
ioss-iPhone10,3-*
ioss-iPhone10,4-*
ioss-iPhone10,5-*
ioss-iPhone10,6-*
ioss-iPhone11,2-*
ioss-iPhone11,6-*
ioss-iPhone11,8-*
ioss-iPhone12,1-*
ioss-iPhone12,3-*
ioss-iPhone12,5-*
ioss-iPhone13,1-*
ioss-iPhone13,2-*
ioss-iPhone13,3-*
ioss-iPhone13,4-*
ioss-iPhone14,2-*
ioss-iPhone14,3-*
ioss-iPhone14,4-*
ioss-iPhone14,5-*
ioss-*-iPod9,1
ioss
rafp-iPhone10,1-*
rafp-iPhone10,2-*
ShAu-*-iPad
ShAu-iPad-*
ShAu
iPod9,1
%@-%@-%@
%@-*-%@
%@-%@-*
AudioAccessory5,1
-[SDNearbyAgent _bleProximityUpdateDeviceCloseNearbyActionDevice:]
### No ble proximity info found for %@
-[SDNearbyAgent coordinatedAlertRequestStart:]
CoordinatedAlert: start
CoordinatedAlert: always alerting when no other devices registered
CoordinatedAlert: always alerting for phone calls
CoordinatedAlert: skipping when very active
CoordinatedAlert: skipping when disabled
com.apple.sharing.Coordinated.AlertResult
eventType
activityLevel
otherDevicesCount
bestIsMe
skipScanBcPhoneCall
skipScanBcVeryActive
MsgScans
MsgNoScans
CA: Start, type %ld, level %d, devices %d, best %d, skipP %d, skipA %d, scans %u, noScans %u
-[SDNearbyAgent coordinatedAlertRequestFinish:]
CoordinatedAlert finish: device %@ ignored because its %s is disabled
CoordinatedAlert finish: device %@ activity level too low: 0x%02X (%s)
CoordinatedAlert finish: device %@ activity level 0x%02X (%s) is lower than ours 0x%02X (%s)
CoordinatedAlert finish: device %@ activity level 0x%02X (%s) loses over headphones audible, 0x%02X (%s)
CoordinatedAlert finish: device %@ activity level 0x%02X (%s) is higher than ours 0x%02X (%s)
CoordinatedAlert finish: no other devices found
*** Forcing Coordinated Alert 'bestIsMe' to %s
CA: Finish, type %ld, level %d, devices %d, best %d, skipP %d, skipA %d, scans %u, noScans %u
-[SDNearbyAgent coordinatedAlertRequestCancel:]
CoordinatedAlert cancel
-[SDNearbyAgent _enableEnhancedDiscovery:]
Enable enhanced discovery for reason: %@
-[SDNearbyAgent _disableEnhancedDiscovery:]
Disable enhanced discovery for reason: %@
-[SDNearbyAgent _enhancedDiscoveryScreenChange:]
Screen on, checking enhanced discovery conditions
Checking isMac=%s, isiPad=%s
Checking isWirelessCritical=%s
Checking should advertise=%s
Checking user interaction last user=%.2f, within leeway=%s
Devices of required software version; macCount=%d, iPadCount=%d
On iPad but no Macs available, will not do enhanced discovery
On Mac but no other devices available, will not do enhanced discovery
Enabling enhanced discovery
UserInitiatedScreenOn
Screen off, disabling enhanced discovery
ScreenOff
TimerFired
-[SDNearbyAgent _deviceDiscoveryRequestStart:]
DeviceDiscovery start
Start
-[SDNearbyAgent deviceDiscoveryRequestStop:]
DeviceDiscovery stop
MatchAWDL
MatchKeyboard
MatchProx
MatchSetup
MatchClose
-[SDNearbyAgent _deviceDiscoveryFastScanStart:device:reason:]
Fast scan start ignored for UI state (screen %s, unlocked %s)
Fast scan start too soon (%llu < %u seconds)
Fast scan rate start '%@' for %@
Fast scan rate start '%@'
Timeout-%@
-[SDNearbyAgent _deviceDiscoveryFastScanStop:reset:reason:]
Fast scan rate stop '%@'
IncomingAdv
v32@?0@"NSUUID"8@"SFDevice"16^B24
-[SDNearbyAgent _deviceDiscoveryBLEDeviceFound:type:]
Replace old device: %s, %@ -> %@
IncomingAdvLost
-[SDNearbyAgent _deviceDiscoveryBLEDeviceChanged:type:changes:]
BLE action type changed: %s -> %s, %@
-[SDNearbyAgent diagnosticBLEModeStart:]
BLE diagnostic mode start
-[SDNearbyAgent diagnosticBLEModeStop:]
BLE diagnostic mode stop
-[SDNearbyAgent diagnosticMockChanged:]
Mocking changed event with device: %@
-[SDNearbyAgent diagnosticMockFound:]
Mocking found event with device: %@
-[SDNearbyAgent diagnosticMockLost:]
Mocking lost event with device: %@
-[SDNearbyAgent _identificationCheckFlagsAndACL]
enabled fitness pairing with identity: %@
com.apple.developer
enabled CoreDevice with identity: %@
fitness pairing changed from %d to %d
CoreDevice changed from %d to %d
-[SDNearbyAgent _identificationEnsureStarted]
Deferring identification start until FirstUnlock
Identification start
com.apple.rapport.identitiesChanged
-[SDNearbyAgent _identificationEnsureStarted]_block_invoke
Identities changed
-[SDNearbyAgent _identificationEnsureStopped]
Identification stop
-[SDNearbyAgent _identificationGetIdentities]
Identification get identities
-[SDNearbyAgent _identificationGetIdentities]_block_invoke_2
### Identification get identities failed: %{error}
Self identity: %@, %#{flags}
### Self identity not found
Identification identities: %d total
-[SDNearbyAgent _identificationHandleDeviceFound:flags:]
### Max identification devices reached, skipping %@ (%d total)
NearbyInfo received activity level: 0x%x after decryption
### Unable to decrypt activity level with authTag %s identity %s error %d for device %@
Identification starting maintenance timer
-[SDNearbyAgent _identificationMaintenanceTimer]
Identification removed stale %@
Identification stopping maintenance timer
-[SDNearbyAgent _identificationReIdentifySameAccountDevices:type:]
Identification identified device: %@, %@, %@
-[SDNearbyAgent _identificationIdentifyDevice:sfDevice:]
Identification identified device %@ -> %@, %llu mus
-[SDNearbyAgent _idsEnsureStarted]
IDS start
-[SDNearbyAgent _idsEnsureStopped]
IDS stop
addTicks
-[SDNearbyAgent idsAddCachedIDSIdentifier:device:]
Remove old IDS cache entry: %@ : %##@
### No BT UUID for %@
idsID
Add IDS cache entry: %@ : %##@
-[SDNearbyAgent idsAddCachedIDSIdentifierToDevice:]
Found IDS cache entry for device: %@
AppleTV
AudioAccessory
iMac
v16@?0@"NSSet"8
-[SDNearbyAgent _idsDeviceArrayLocked]
Get IDSDevices
-[SDNearbyAgent idsDeviceForBluetoothDeviceID:conflictDetected:]
Multiple (%ld) IDS devices are associated with BT ID %@. Picking %@, some info may be inaccurate
Local BT Addr %.6a, Local IDS UniqueID: %@ (%@)
, iMessage
, SMS
, Active
, Connected
, Paired
HomePod1,
-[SDNearbyAgent idsIsSignedIn]
### No active IDS accounts, but has devices
IsSignedIn: %s
-[SDNearbyAgent _idsShouldEncryptActivityLevel]
Not encrypting activity level because Manatee is not available.
Not encrypting activity level; IDS device %@ is incompatible with encryption
-[SDNearbyAgent service:account:identifier:didSendWithSuccess:error:context:]
IDS service %@, account %@, identifier %@, success %d, error %@, context @
-[SDNearbyAgent service:account:identifier:hasBeenDeliveredWithContext:]
IDS service %@, account %@, identifier %@, context @
-[SDNearbyAgent service:account:incomingMessage:fromID:context:]
IDS service %@, account %@, message %@, fromID %@, context %@
-[SDNearbyAgent service:activeAccountsChanged:]
IDS service %@ activeAccountsChanged %@
-[SDNearbyAgent service:connectedDevicesChanged:]
IDS service %@ connectedDevicesChanged %@
-[SDNearbyAgent service:devicesChanged:]
IDS devicesChanged: %d device(s)
-[SDNearbyAgent serviceStart:]
Service start: %@
Forcing this device to identify as a B520
### Service start failed: %#m
-[SDNearbyAgent serviceStop:]
Service stop: %@
### Service stop failed: %#m
-[SDNearbyAgent serviceSendRequest:service:]
### Completing error response for service request %@ for service %@
error
-[SDNearbyAgent sessionStart:]
Session start: service %@, %@
Reusing BLE connection for session %@
Create new BLE connection for session %@
### Session start failed: %#m
-[SDNearbyAgent sessionStop:]
Session stop: %@, peer %@, connection %@
Invalidating BLE connection for session %@
Session stop: %@ (no peer/connection)
v32@?0@"NSUUID"8@"SFSession"16^B24
-[SDNearbyAgent sessionSendEvent:session:]
### Send Remote app message with no device identifier
### Send Remote app message to %@ with no connection
### Attempt to send Remote app message with header fields
### Attempt to send Remote app message with no body
-[SDNearbyAgent sessionSendEvent:session:]_block_invoke
### Sent %ld bytes to %@ failed: %@
-[SDNearbyAgent sessionSendRequest:session:]
### Completing error response for request %@ for session %@
-[SDNearbyAgent _sendMessage:frameType:service:session:]
### Send message no device
### Send message no session
### Send message no message identifier
### Send message no service UUID
### Send message no connection
### Send message no connection for device %@
-[SDNearbyAgent _sendMessage:frameType:service:session:]_block_invoke
Sent message to %@, %@, %@
-[SDNearbyAgent _sendMessage:frameType:service:session:]_block_invoke_2
### Send message failed: %#m
-[SDNearbyAgent _setupHandleCreateSession:data:]
BLE SetupCreateSession received from %@: %'.32@
WriteSalt
WriteKey
ReadSalt
ReadKey
### BLE SetupCreateSession failed: %#m
-[SDNearbyAgent _setupHandleSessionCreated:data:]
BLE SetupSessionCreated received from %@: %'.32@
-[SDNearbyAgent _setupHandleSessionEncryptedFrame:type:cnx:]
BLE SetupEMsg type 0x%02X received from %@: %'.32@
### BLE SetupEMsg session %@ not found
### BLE SetupEMsg type 0x%02X received from %@ failed: %#m
-[SDNearbyAgent _setupHandleSessionMessageType:src:end:cnx:session:]
### BLE SetupRecvMsg no message ID (%tu bytes)
### BLE NearbyInfo setup session receive with no handler: %@
### BLE NearbyInfo setup service receive with no handler: %@
### BLE SetupRecvMsg failed: %#m
-[SDNearbyAgent _setupSendCreateSession:cnx:]
BLE SetupSendCreateSession %@
### BLE SetupSendCreateSession failed: %#m
-[SDNearbyAgent _setupSendData:sessionIdentifier:cnx:clientSession:]
BLE Setup re-creating lost session ID %@
### BLE SetupSendMsg no setup session after re-create?
BLE SetupSendMsg queuing data until session created (%ld)
### BLE SetupSendMsg failed: %#m
Start unlock connection with no identifier
-[SDNearbyAgent _startUnlockBLEConnectionWithDevice:encrypted:]
Reusing BLE connection for unlock
Creating BLE connection for unlock
Stop unlock connection with no identifier
-[SDNearbyAgent _stopUnlockBLEConnectionWithDevice:]
Invalidating BLE connection for unlock
Send unlock data to BLE device with no identifier
-[SDNearbyAgent _sendUnlockData:toBLEDevice:direct:completion:]
Send data req: %@ (%ld bytes)
-[SDNearbyAgent _unlockReceivedFrameData:peer:device:]
AutoUnlock received %ld bytes from %@
-[SDNearbyAgent unlockUpdateAdvertising:mask:]_block_invoke
Unlock advertise update: 0x%X flags, 0x%X mask
-[SDNearbyAgent unlockStartTestClientWithDevice:]
Unlock test client with device: %@
-[SDNearbyAgent unlockStartTestClientWithDevice:]_block_invoke_2
Unlock test send: %@
-[SDNearbyAgent unlockStartTestClientWithDevice:]_block_invoke_3
Unlock test client timer stopped
-[SDNearbyAgent unlockStopTestClient]
Unlock test client stop
-[SDNearbyAgent unlockStartTestServer]
Unlock start test server
-[SDNearbyAgent unlockStopTestServer]
Unlock stop test server
-[SDNearbyAgent _testPipePing]
### BT Pipe not enabled
-[SDNearbyAgent _testPipePing]_block_invoke
### BTPipe ping request failed: %@
SDSession %{ptr}
, ID %@
, Peer %@
, SessionCreated %s
, %ld pending sends
Disabled
CoverClosed
Idle
Audio
Screen
Video
Watch
User
Driving
Medium
High
PWOnly
HSA1
HSA2
Managed
SSAccountStore
/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
AKAccountManager
/System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
Scanning
NotConnected
Connected
ContinuityKeyboard
ContinuityRemote
Setup2
AudioTuning
PasswordGranting
PasswordSharing
System
AppleTVSetup
DeviceDiagnostics
Debug
PhoneCallHandoff
RemoteDisplay
Disconnected
Background
Normal
HighNormal
Aggressive
BackgroundOld
NormalOld
HighOld
AggressiveOld
B520ish
HomePod
Prox
HeySiri
AirPlayTarget
AirPlaySource
MagicSwitch
Continuity
TetheringTarget
TetheringSource
NearbyAction
NearbyInfo
ANAnnounce
/System/Library/PrivateFrameworks/Announce.framework/Announce
SDAppleIDUtilities
void SDAppleIDClearGSTokenCache(NSString * _Nullable __strong)
Removing GS token cache entry for %@
Removing Account token cache entry for %@
com.apple.gs.authagent.auth
### Remove Account token cache entry for %@ failed: %@
void SDAppleIDClearGSTokenCache(NSString * _Nullable __strong)_block_invoke
Saved Account '%@ for token remove
### Save Account %@ for token remove failed: %@
Removing all GS token cache entries
### Remove GS token cache entry failed: %d
altDSID
gsToken
void SDAppleIDGetGSToken(NSString * _Nonnull __strong, dispatch_queue_t  _Nullable __strong, SDAppleIDGSTokenCompletion  _Nullable __strong)
Reusing cached altDSID and gstoken for %@
Reusing Account-cached altDSID and gstoken for %{mask}
### aida_tokenForService failed altDSID=%d, accountToken=%d
### ACAccount <%@> doesn't respond to selector aida_tokenForService:
### account identifier is %@ for %@
Throttling request that's too soon after user cancel (%f)
Asking server for GS token for %@
void SDAppleIDGetGSToken(NSString * _Nonnull __strong, dispatch_queue_t  _Nullable __strong, SDAppleIDGSTokenCompletion  _Nullable __strong)_block_invoke_2
AltDSID for %@: %@
GS token for %@: %@
### authenticateWithContext completion called with AltDSID = %@, token = %d
### Request GS token for %@ failed: %@
### Request GS token for %@ failed: %d
%@:%@
void SDAppleIDAuthenticateCertificateChain(NSArray * _Nonnull __strong, SDAppleIDVerifiedIdentity * _Nonnull __strong, dispatch_queue_t  _Nullable __strong, SDAppleIDCertificateChainAuthenticationHandler  _Nonnull __strong)_block_invoke
SFAppleIDVerifyCertificateChain failed with err=%#m
Account identifier check failed
BOOL SDAppleIDAuthenticateCertificateChainSync(NSArray * _Nonnull __strong, SDAppleIDVerifiedIdentity * _Nonnull __strong, NSError * _Nullable __autoreleasing * _Nullable)
SFAppleIDVerifyCertificateChainSync failed with err=%#m
ACAccount * _Nullable AccountForAppleID(NSString * _Nonnull __strong, OSStatus * _Nullable)
AccountForAppleID falling back to account aliases
### AccountForAppleID altDSIDForAccount:%@ returned nil
AccountForAppleID found account %@
0123456789abcdef
awdlInfo
unlockDate
Files
invalid state value
v24@?0@"NSObject<SFAirDropClassroomTransferManagerProtocol>"8^B16
com.apple.sharing.classroom-transfer
Error during registration
Step failed
Registration Token missing
com.apple.Photos
PHOTO
VIDEO
SDAirDropController
iconHash
path
all interfaces
AutoUnlockConfirmationTimerPreventExitReason
Attempt Cancelled
Watch Missing Encryption Key
Watch Not First Unlocked
Watch Missing IDS Device For BT UUID
Decryption failure
UNLOCK_WATCH_LOCKED_ON_WRIST
Ranging Timeout: Results Not Returned
Failed to Start AWDL
Mac Clamshelled Without Display
Watch Failed to Connect
Ranging Timeout
 (%ld)
phoneAutoUnlockSkipRanging
Siri SPI Succeeded
UNLOCK_OUT_OF_RANGE
phoneAutoUnlockAWDLRangingTimeout
Watch using old protocol (version: %d)
Received AWDL Info message missing information (info: %@)
Received auth prompt response missing information: %@)
Exchange request step failed
Lock session invalid
Watch locked and off wrist
Watch off wrist
Phone needs to be unlocked after Watch unlocked and on wrist
UNLOCK_WATCH_IN_SLEEP_MODE
Not enough motion detected
Watch not in state to perform Auto Unlock
Auth prompts disabled on remote
UNLOCK_WATCH_WLAN_DISABLED
UNLOCK_WATCH_WIFI_DISABLED
Remote WiFi failure
Watch Not Armed
Remote AKS session failed
Key exhange request is missing information (request: %@)
phoneAutoUnlockPeerDiscoveryTimeout
Failed to generate ranging token
Auth token transfer failed
-[SDAutoUnlockLockSession startAWDL]_block_invoke
AWDL network failed to start
Auth token failed
Device display is off
Missing local IDS ID
Auth prompt request failed
Image data message failed
Connections still active during dealloc
Attempt to set dispatch queue after activate has been called
Attempt to enqueue XPC block before activate has been called
SDXPCDaemonConnection
Subclass %@ must override %@
UserDefaultsHashesDirtyKey
fetchHistoryTokenKey
hashesAreCorrectKey
_TtC16DaemoniOSLibrary23SDAuthenticationSession
v16@0:8
delegate
wifiRequest
type
AWDLInfo
sessionID
responseTimer
authentication confirmation
authentication response
authentication request
Canceling response timer for %s
v8@?0
Starting response timer for %s
Invalidating %@
DaemoniOSLibrary.SDAuthenticationSession
OS_dispatch_source_timer
_TtP16DaemoniOSLibrary26SDCUSystemMonitorInterface_
@?16@0:8
v24@0:8@?16
dispatchQueue
T@"OS_dispatch_queue",N,&
firstUnlocked
TB,N,R
powerUnlimited
firstUnlockHandler
T@?,N,C
powerUnlimitedChangedHandler
@"OS_dispatch_queue"16@0:8
v24@0:8@"OS_dispatch_queue"16
@?<v@?>16@0:8
v24@0:8@?<v@?>16
_TtP16DaemoniOSLibrary31SDAuthenticationManagerDelegate_
v40@0:8@16@24@32
v32@0:8@"<_TtP16DaemoniOSLibrary32SDAuthenticationManagerInterface_>"16@"NSUUID"24
v40@0:8@"<_TtP16DaemoniOSLibrary32SDAuthenticationManagerInterface_>"16@"NSUUID"24@"NSError"32
OS_dispatch_source
Q16@0:8
@24@0:8@16
_TtC16DaemoniOSLibrary11OnceManager
onceList
_TtC16DaemoniOSLibrary13PushableTimer
noLaterThan
timer
identifier
offset element 
/Library/Caches/com.apple.xbs/Sources/Sharing_executables_Sim/Sharing-1778.1/Daemon/SDCommonSwifty.swift
deinit for untracked 
lower upper 
Contact Field Decode Failed
Contact ID Decode Failed
Store Not Loaded
Hashes Incorrect
_TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager
lastUnlockDate
wristDetectionGenerator
deviceUnlockedGenerator
deviceHasPasscodeGenerator
sleepModeGenerator
motionGenerator
faceIDEnabledGenerator
raiseToWakeHandler
lastUnlockedByPairedUnlockGenerator
queue
raiseToWakeTimes
allowsLenientMotionConditions
lastUnlockedAndOnWristDate
Skipping motion check because one of the following is true: hasEnoughWakeRaises = %{bool}d requestingDeviceUnlockedRecently = %{bool}d unlockedRecently = %{bool}d
Watched unlocked (%s) is after device unlocked (%s)
Denying lenient motion conditions
Allowing lenient motion conditions
Storing last device unlock as %s
Storing last device unlocked and on wrist as %s
Ignoring wake gesture because device is either locked (%{bool}d) or off wrist (%{bool}d)
DaemoniOSLibrary.SDAuthenticationSecurityManager
On wrist state changed
Key bag state changed to %s
_TtC16DaemoniOSLibrary19SDAirDropHandlerIPA
B16@0:8
@32@0:8@16@24
canHandleTransfer
suitableContentsDescription
singleItemActionTitle
INSTALL_BUTTON_TITLE
v16@?0@"SFAirDropAction"8
IPA Handler: Failed to install app with error (%s) for URL %s
IPA Handler: Successful app install for URL %s
IPA Handler: AirDrop app installation not allowed
IPA Handler: isJustFiles is false
IPA Handler: File is not IPA, ignoring...
/Developer/Library/PreferenceBundles/Developer Settings.bundle
IPA Handler: Developer settings bundle exists? %{bool}d
IPA Handler: Transfer is me, can handle.
IPA Handler: Device running in store demo mode
com.apple.sharing
AirDropHashStore
SDXPCHelperImageCache
@40@0:8@16@24@?32
v32@0:8@16@24
preventUntilDate
timedReasons
reasons
pendingOperation
mainTimer
%s _scheduleOperation delayed:%{bool}d, reason: %s
handleTimer calling try operation
Error making timer %s
Optional<Date>.none
handleTimer timer activated
%s handleTimer %s
recalculateDate, preventUntilDate changed to %s
recalculateDate timedReasons:%s
scheduleOperation:%s, %{bool}d
Cannot bump date for reason that is not in set
First time setting date
preventUntilDate updated
preventUntilDate: %s, activeTimer: %{bool}d
This function is for moving the date further into the future: %s
%s pushPreventionDateForReason, reason: %s, date: %s
removeReason end: %ld
%s removeReason start: %ld
addReason end: %ld
Exiting addReason, %s is already in set
%s addReason start: %ld
DaemoniOSLibrary.SDDeferrableOperation
init()
_TtC16DaemoniOSLibrary26SDAuthenticationKeySession
Message does not have an authentication type
Message does not have a ranging token
Message does not have last unlock date
Authentication Session type: %s
Received authentication request: %@
v16@?0@?<v@?B>8
v24@?0@"NSArray"8@"NSError"16
v12@?0B8
v24@?0@"NSDictionary"8q16
Wifi request invalidated
AWDL started (error = %ld)
Could not find peer mac address in remote AWDL info: %s
Could not convert response to data: %s
Sending authentication response: %s
Session failed with reason: %s
Received confirmation: %@
Input string not UTF-8 encoded.
_TtC16DaemoniOSLibrary27SDAuthenticationLockSession
rangingToken
isConfirmationSent
Message does not have AWDL info
Could not find ranging token
AWDL_IF_MAC_ADDRESS
combinedAWDLInfo = %s
Request invalidated
Ranging completed
Peer out of range
Peer in range
Fatal error
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
Ranging started
peer found
AWDL failed to start: %ld
AWDL started
Starting wifi request
Error converting confirmation to data
Sending confirmation: %s
Posting notification
Session did complete: %s
Can't cancel session that is already finished
Error converting request to data
Sending authentication request
Error generating ranging key (status = %d)
Authentication did not pass policy: %s
SDContactChangeHistoryEvent
Response timer fired for %s
Automation: Total time = %.*fs
Automation: Ranging = %.*fs
Automation: Peer Found = %.*fs
Automation: AWDL bring up = %.*fs
Automation: Key exchange = %.*fs
CNKeyDescriptor
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
hash
Tq,N,R
superclass
T#,N,R
description
debugDescription
B24@0:8@"Protocol"16
@"NSString"16@0:8
NSSecureCoding
supportsSecureCoding
NSCopying
@24@0:8^{_NSZone=}16
NSCoding
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
_TtC16DaemoniOSLibrary27SDAirDropContactHashManager
context
contactUpdateCoalescer
meCardUpdateCoalescer
systemMonitor
hashManagerQ
bucket
contactStore
hashDB
notificationCenter
distributedNotificationCenter
activated
meCardInfo
hashesUpdatedSuccessfully
B24@0:8@16
detailedDescription
T@"NSString",N,R
kStatusContactsHashesChanged
kStatusMeCardChanged
GeneralContactKeysToFetch
T@"NSArray",N,R
DaemoniOSLibrary1
DaemoniOSLibrary2
/Library/Caches/com.apple.xbs/Sources/Sharing_executables_Sim/Sharing-1778.1/Daemon/SDAirDropContactHashManager.swift
string must be UTF-8 encoded
AirDropRandomHashUUIDKey
Not activated in rebuildDB. Bailing.
Requesting hash database rebuild
Updating hashes failed with error: %s
Destroy database request failed with error: %s
Force rebuild requested
Hash update requested.
HashManager-LastConsumedHistoryTokenKey
Updating hashes completed.
Processed %ld contact change events (add=%ld,delete=%ld,update=%ld)
Unexpected change event %s when regenerating database
Processing event: %s
Change event is DropEverything. Request regenerate entire db.
History token is nil. Will regenerate hash database
Start updating hashes.
Persist requested.
HashManager-LastRebuiltDateKey
HashManager-LastUpdatedDateKey
Unexpected event: %s
Skip meCard change
/Library/Caches/com.apple.xbs/Sources/Sharing_executables_Sim/Sharing-1778.1/Daemon/SDAirDropHashUtilities.swift
DaemoniOSLibrary/SDAirDropHashUtilities.swift
Should regenerate database: %{bool}d (forceRebuild: %{bool}d rebuild due: %{bool}d storeRebuildRequired: %{bool}d hashesFailedToUpdate: %{bool}d
Next hash store rebuild: %s, last: %s, secs to next rebuild: %ld
HashManager: database set.
Load hash db from disk
Not activated in dumpDB. Bailing.
Database dump requested
HashManager: activate called
Found some deprecated state, resetting history token
System monitor activated.
Device has not been unlocked. Don't activate hash manager.
HashManager: activated
HashManager: internal activate called
com.apple.sharingd.MeCardChanged
Posting meCard changed notification
com.apple.sharingd.ContactsHashesChanged
Posting contacts hashes changed notification
CMFSyncAgentBlockListUpdated
HashManager: not activated yet.
MeCard update coalescer fired
Contact update coalescer fired
HashManager-StoredDatabaseVersionKey
Database version mismatch: %ld!=%ld. Clearing history token to rebuild database
Power handler called
First unlock handler called
Not activated in contactsContainsShortHashes. Bailing.
Hash manager: failed to determine if contacts contain short hashes with error (%s)
Not activated in hashesNeedUpdating. Bailing.
Hash manager: failed to get contact indentifier for medium hashes with error (%s)
Not activated in addressOrNumForHash. Bailing.
Hash manager: failed to get email/phone for combined hash with error (%s)
%ld contacts match this set of hashes
Decoded base64 count test failed
Not activated in contactsForCombinedHash. Bailing.
Error: failed to get contactsForCombinedHash because (%s)
Not activated in contactForCombinedHash. Bailing.
Error: failed to get contactForCombinedHash because (%s)
Not activated in setMeCard. Bailing.
Error: failed to set meCard with error %s
Setting meCard (fn=%s,ln=%s,cid=%s)
-- SDAirDropContactHashManager --
Activated:                       %@
Hashes updated successfully:     %@
Store last modified:             %@
Store last rebuilt:              %@
MeCard change handler called
Contact Store change handler called
CMFSyncAgentBlockList change handler called
com.apple.sharing.SDAirDropContactHashManager.queue
HashManager: init.
CDB: store loaded
CDB: Staging deletion of entries for contact id: %s
CDB: Nothing to persist.
v32@?0@"NSData"8@"NSData"16^B24
CDB: Persist completed. Operation took %llu ms.
CDB: Persist %lu changes.
CDB: Destroy called
v24@?0@"NSData"8^B16
Failed to dump hash db into file with error: %s
_TtC16DaemoniOSLibrary21SDAirDropHashStoreCDB
reader
stagedAdditions
stagedDeletedIDs
loaded
destroyed
Writing hash database to: %s
DaemoniOSLibrary/SDAirDropHashStoreCDB.swift
Making AirDrop hash DB folder if doesn't exist: %s
_TtC16DaemoniOSLibrary27SDContactChangeHistoryEvent
_TtC16DaemoniOSLibrary41SDContactChangeHistoryDropEverythingEvent
_TtC16DaemoniOSLibrary30SDContactChangeHistoryAddEvent
contact
_TtC16DaemoniOSLibrary33SDContactChangeHistoryDeleteEvent
contactIdentifier
_TtC16DaemoniOSLibrary33SDContactChangeHistoryUpdateEvent
_TtC16DaemoniOSLibrary14SDContactStore
didChangeNotificationName
meContactDidChangeNotificationName
Fetch result should not be nil since no error was reported
Ignore event %s
v24@?0@"CNContact"8^B16
Failed to find contact with contact identifier %s, error: %s
_TtC16DaemoniOSLibrary21SDXPCHelperImageCache
v20@0:8B16
v40@0:8^{CGImage=}16@24@32
^{CGImage=}32@0:8@16@24
q16@0:8
@16@0:8
imageForKey caught: %s
Query: `%s`
URL: %s
Result: %s
/Library/Caches/com.apple.xbs/Sources/Sharing_executables_Sim/Sharing-1778.1/Daemon/SDXPCHelperImageCache.swift
Failed to form valid lossyContactID, unexpected hash length: %s
Key should encode to UTF8.
SDXPCHelperImageCacheLastUpdateBuild
Couldn't purge for bundle version change: %s
currentBuild(%s) != lastBuildUpdate(%s), purging.
Optional<String>.none
com.apple.Sharing
Expect UserDefaults to be able to read SFPrefs
removeFileIfExists - couldn't delete %s:
removeFileIfExists - Doesn't exist: %s
XPCHelperImageCache
setImage failed: %s
Set: `%s`
ensureCacheNotFull - numItems = %ld, limit = %ld, shouldPurge = %{bool}d
evictContactIdentifier remove-all failed: %s
Failed to remove specific contactID: %s, removing all
Removing URLs: %s
evictContactIdentifier: %s, compressed: %s
purgeAvatars failed: %s
purgeAvatars
clearCacheWithSync: %{bool}d
clearCacheWithSync failed: %s
shared
T@"SDAuthenticationManager",N,R
v24@0:8@16
v32@0:8Q16@24
lockSessionGenerator
keySessionGenerator
idsService
securityManager
keySessions
lockSessions
generateAWDLInfo
isWifiEnabled
isBluetoothEnabled
decryptWrapper
T@"<_TtP16DaemoniOSLibrary31SDAuthenticationManagerDelegate_>",N,W,Vdelegate
T@"OS_dispatch_queue",N,R,Vqueue
v56@0:8@16@24@32@40@48
v52@0:8@16@24@32B40@44
Received corrupt wrapper
Received data: %s
Received unknown message type %hu
Handling %s
Failed to unwrap SDAuthenticationRequest (data: %s)
Message does not have a session ID
No active device
Failed while sending data: %s
Sent %s: %s
Error converting message to data
Error encrypting message
v16@?0@"NSError"8
Sending data
Beginning encryption
Sent data
Error sending data: %s
Failed to unwrap to SDAuthenticationResponse
Could not find existing session for %s
Failed to unwrap to SDAuthenticationConfirmation
Received confirmation that message: %s sent success: %{bool}d
Received: %@ from: %s
DaemoniOSLibrary.SDAuthenticationManager
Could not find session to cancel
Asked to cancel %s
Watch version is unsupported
Already processing authentication session
Wifi is disabled
Bluetooth is disabled
Watch is not nearby
Asked to authenticate %s sessionID: %s
com.apple.private.alloy.sharing.ranging
SDAuthenticationManager started
Failed to decrypt message
AWDLInfo = %s
Optional<Dictionary<AnyHashable, Any>>.none
com.apple.sharing.authentication
_TtP16DaemoniOSLibrary32SDAuthenticationManagerInterface_
T@"<_TtP16DaemoniOSLibrary31SDAuthenticationManagerDelegate_>",N,&
@"<_TtP16DaemoniOSLibrary31SDAuthenticationManagerDelegate_>"16@0:8
v24@0:8@"<_TtP16DaemoniOSLibrary31SDAuthenticationManagerDelegate_>"16
v32@0:8Q16@"NSUUID"24
v24@0:8@"NSUUID"16
IDSServiceDelegate
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24q32@40@48
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
NSObject
#16@0:8
@24@0:8:16
Sharing_Additions
SDUnlockStashConfirmation
SDAirDropHandler
SDAirDropSession
SDAirDropClientDelegate
SDAutoUnlockLocalDeviceController
SDLocalDeviceProviding
SDActivityRequestRecord
SDActivityEncryptionKeyRequestRecord
SDActivityPayloadRequestRecord
SDActivityPayloadReplyRecord
SDUnlockSetupCreateSecret
SDSmartCoverMonitor
SDAutoUnlockPairingSession
SDUnlockSessionConfirmation
SDAirDropHandlerUnsupportedType
SDAirDropHandlerNewsLinks
SDUnlockSessionKeyExchangeResponse
SDAirDropHandlerKeynoteLiveLinks
SDAutoUnlockKeySession
SDAuthenticationResponse
SDUnlockIDSController
SDUnlockMagnetTransport
SDAutoUnlockPairingKeySession
SDAutoUnlockAKSSession
SDAutoUnlockRegistrationSession
SDActivityDeviceRecord
SDClassroomBrowser
SDAirDropPublisher
SDAutoUnlockPairingLockSession
SharingXPCHelperGroupContactIcon
SDAutoUnlockAuthPromptResponse
SDUnlockSessionKeyExchangeRequest
SDAutoUnlockRelockRequest
SDUnlockStashKeyExchangeResponse
SDAirDropHandleriLifeLinks
SDNetworkBrowser
SDNodeBrowserDelegate
SharingXPCHelperImageItem
SDUnlockStashToken
SDAirDropHandlerSharediCloudDocumentsLinks
SDAutoUnlockDecryptionFailed
NSCopying
SDUnlockLongTermKeyRequest
SDAirDropHandlerWebLinks
SDAutoUnlockNotificationsManager
SDAutoUnlockCleanUpAWDL
SDAirDropPeerMetric
SDStreamManager
NSNetServiceDelegate
SDSetupAgent
SDUnlockMotionDetector
SDAirDropClient
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
SDAirDropHandlerPhoneLinks
SDUnlockReset
SDAirDropTransferManagerProtocol
SFAirDropTransferObserverProtocol
SFAirDropTransferObserverDelegate
SDAirDropTransferManager
SDAirDropAlertManager
SFActivityAdvertiserProtocol
SDXPCDaemonProtocol
SFActivityAdvertiserClient
SDActivityAdvertiser
IDSContinuityDelegate
SDAirDropHandleriCloudDrive
SDAutoUnlockProxyTrigger
SDAirDropHandlerPodcastsLinks
SDActivityController
SDAirDropStatus
SDAutoUnlockSessionManager
SDAutoUnlockTransportClient
SDAutoUnlockSessionDelegate
SDUnlockIDSControllerDelegate
SDAutoFillAgent
SBSRemoteAlertHandleObserver
SDSharedRemoteTextInputDelegate
SFCombinedDevice
SFNotificationProxy
SDProxHandoffAgent
SDRapportBrowser
SDAutoUnlockAuthPromptImageData
SDAirDropServer
SDAirDropPublisherDelegate
SDAirDropHandleriBooksItems
SDAutoUnlockSessionConfirmationACK
SDAirDropListener
SDCompanionCommon
SDAirDropHandlerMapsLinks
SDAirDropHandlerNotes
SDUnlockStashKeyExchangeRequest
SDAirDropHandlerGenericLinks
Debug
SDAirDropHandlerFindMyFriendsLinks
Unlock_Additions
SDUnlockXPCSession
SFUnlockProtocol
NSXPCProxyCreating
SDAutoUnlockSessionManagerObserver
SDAirDropReceiveManager
SDAirDropListenerDelegate
SDAirDropAlertManagerDelegate
SDAutoUnlockDeviceRegistrationStep
SDUnlockDisable
SDAutoUnlockPeer
SDUnlockLockStateUpdated
SDAirDropHandlerCalendarEvents
SDAutoUnlockProxySession
SDAutoUnlockAWDLInfo
SharingXPCHelperContactIcon
NSSecureCoding
NSCoding
SDAirDropHandlerPDFs
SDUnlockStateRequest
SDAutoUnlockKeyDeviceLocked
SDAirDropHandlerVoiceMemos
SDAirDropHandlerPlaygroundItems
SDNetworkResolver
SDBonjourResolverDelegate
SDAirDropHandlerWalletItems
SDUnlockSetupCreateRecord
SDAirDropHandlerContacts
SDNetworkOperation
SDAirDropServerDelegate
SDAirDropConnectionDelegate
SDAirDropSessionDelegate
SDAirDropControllerDelegate
SDAirDropStatusDelegate
SDAirDropInformationDelegate
SDNetworkResolverDelegate
SDNetworkEjecterDelegate
SDAutoUnlockIconTransferStore
SDWorkgroupBrowser
SDAppleIDDatabaseManager
SDXPCSession
SDConnectionManagerDelegate
SDRemoteInteractionAgent
SDSharedRemoteTextInputClient
SDAirDropInformation
SDServerBrowser
SDBonjourBrowserDelegate
SDWindowsBrowserDelegate
SDAirDropHandlerGenericFiles
SDAppleIDServerTask
SDConnectionManager
SFCompanionXPCManagerProtocol
SDCompanionStreamDelegate
SDUnlockXPCSesssionDelegate
SDCompanionPublisherProtocol
SDUnlockSetupRequest
SDAirDropCompressor
SDAutoUnlockSessionWrapper
SDAutoUnlockEscrowSecretInfo
SDAirDropHandlerCredentialLinks
SDAutoUnlockAKSManager
SDKeyManaging
SDAirDropDiscoveryLogger
SDAirDropHandleriTunesULinks
SDAppleIDURLResponse
SDAirDropHandlerProfiles
SDUnlockStateResponse
SDNodeCoalescer
SDActivityPayloadManager
IDSServiceDelegate
SDAirDropHandleriWorkLinks
SDAppleIDIdentityRequest
SDAirDropHandlerAppStoreLinks
SDAirDropHandleriCloudFamilyLinks
SDNetworkEjecter
SharingDaemon
SDNetworkBrowserDelegate
NSObject
SDNetworkOperationDelegate
SDBonjourBrowser
SDAutoUnlockRegistrationKeySession
SDAirDropFileZipper
SFXPCInterface
SDXPCInterface
SDXPCAppleIDAuthInterface
SDXPCClientInterface
SDXPCCoordinatedAlertsInterface
SDXPCDeviceDiscoveryInterface
SDXPCDiagnosticsInterface
SDXPCNFCTagReaderInterface
SDXPCProximityClientInterface
SDXPCRemoteAutoFillSessionInterface
SDXPCRemoteInteractionSessionInterface
SDXPCServiceInterface
SDXPCSessionInterface
SDXPCUserNotificationInterface
SDXPCServer
NSXPCListenerDelegate
SDXPCConnection
SDActivityKey
SDActivityEncryptionKey
SDActivityDecryptionKey
SDActivityEncryptionManager
SDStreamHandler
SDAutoUnlockLTKInfo
SDAppleIDMutableURLRequest
SDUnlockClassALongTermKeyResponse
SDNotificationManager
UNUserNotificationCenterDelegate
SDWindowsBrowser
SDAirDropHandlerVoiceMails
SDUnlockSecurityManager
SDAutoUnlockTransport
SDAutoUnlockTransportProtocol
SDNodeBrowser
SDSharePointBrowserDelegate
SDAppleIDVerifiedIdentity
SDAppleIDAgent
APSConnectionDelegate
SDAutoUnlockRangingPeer
SDAutoUnlockWiFiRequest
SDAutoUnlockWiFiManager
CLLocationManagerDelegate
SDAutoUnlockWiFiManagerContext
SDUnlockClassALongTermKeyRequest
SDContactFetchResult
SDNearbyIDSAgent
SDServiceManager
SFCompanionServiceManagerProtocol
SDAirDropLogger
SDDomainBrowser
SDManagedBrowser
SDAuthenticationConfirmation
SDUnlockTransport
SDAutoUnlockAuthSession
SDUnlockSetupSessionCreated
SDAirDropConnection
SDAirDropFileZipperDelegate
SDAutoUnlockStartAdvertising
SFContinuityScannerProtocol
SFContinuityScannerClient
SDActivityScanner
SDAirDropHandlerFailedMixedTypes
SDConnectedBrowser
SDAutoUnlockDeviceRegistrationRequest
SharingXPCHelperProtocol
SDXPCHelperConnection
SDCompanionStream
NSStreamDelegate
NSNetServiceBrowserDelegate
SDStreamHandlerDelegate
SDUnlockLongTermKeyResponse
SDAirDropHandlerFailed
SDAutoUnlockSuggestionManager
SDAutoUnlockNotificationsObserver
SDAutoUnlockMacIconCache
SDStatusMonitor
MCProfileConnectionObserver
2!!!
SDAirDropHandleriBooksLinks
SDAirDropHandlerMixedTypes
SDUnlockWakeGestureRecord
SDUnlockLockMetricDates
SDUnlockLockManager
SDUnlockSessionAuthToken
SDAirDropHandleriTunesStoreLinks
SDUnlockSessionManager
SDNearbyAgent
SDBLEIdentifiedDevice
SDSession
SDAuthenticationRequest
SDAirDropClassroomTransferManagerProtocol
SFAirDropClassroomTransferManagerProtocol
SFAirDropClassroomTransferDelegate
SDAirDropClassroomTransferManager
SDAutoUnlockRegistrationLockSession
SDAirDropHandlerPhotos
SDAirDropController
SDAutoUnlockAuthPromptRequest
SDBonjourResolver
SDAutoUnlockLockSession
S!H,
SDXPCDaemon
NSXPCConnectionDelegate
@16@0:8
B24@0:8@16
v48@0:8@16@24Q32^v40
v40@0:8@16@24^v32
v24@0:8@16
{?="sessionID"b1"version"b1"success"b1}
@"SFAirDropTransfer"
v40@0:8@"SDAirDropClient"16q24@"NSDictionary"32
v24@0:8@"NSProgress"16
@40@0:8^{__SFNode=}16@24@32
v28@0:8^{__SFNode=}16B24
v32@0:8q16d24
v48@0:8@16@24@32^v40
{?=[8I]}16@0:8
v48@0:8{?=[8I]}16
@"SDAirDropClient"
@"<SDAirDropSessionDelegate>"
{?="val"[8I]}
{?="sessionID"b1"version"b1}
v24@0:8^{__IOHIDEvent=}16
B24@0:8^{__IOHIDEventSystemClient=}16
I28@0:8r^{__CFArray=}16I24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
^{__IOHIDEventSystemClient=}
@28@0:8@16S24
@40@0:8@16S24B28@32
@"<SDAutoUnlockSessionDelegate>"
@"SDAutoUnlockAKSSession"
{?="sessionID"b1"version"b1"success"b1"supportsACK"b1"suppressNotification"b1}
{?="sessionID"b1"version"b1"keyFailed"b1}
@"SDAirDropHandlerWebLinks"
@"SDUnlockSessionKeyExchangeResponse"
@"SDAutoUnlockMacIconCache"
@"SDUnlockMotionDetector"
v52@0:8@16S24@28q36@?44
v24@0:8@"<SDUnlockIDSControllerDelegate>"16
v52@0:8@"NSData"16S24@"NSNumber"28q36@?<v@?@"NSError">44
@"NSSet"16@0:8
v60@0:8@16S24@28q36@44@?52
v68@0:8@16S24@28q36q44@52@?60
v52@0:8@16@24@32I40@44
v44@0:8@16@24@32I40
@"SDUnlockSetupRequest"
@52@0:8@16@24q32B40@44
@60@0:8@16@24q32B40@44@52
@56@0:8@16@24q32B40@44B52
@72@0:8@16@24q32B40@44@52B60@64
B32@0:8@16^@24
v40@0:8@16B24B28@?32
{?=CCCCCCCCCCCCCC}16@0:8
@"IDSDevice"
@32@0:8@16^{__SecIdentity=}24
v24@0:8^{?=qi}16
^{__CFNetService=}
@"<SDAirDropPublisherDelegate>"
@"SDUnlockSetupSessionCreated"
{?="errorCode"b1"version"b1"needsImageData"b1}
{?="errorCode"b1"sessionID"b1"version"b1"usingRecord"b1}
{?="version"b1}
v44@0:8@"SDNodeBrowser"16^{__SFNode=}24@"NSString"32i40
@32@0:8@16^{__SFNode=}24
i40@0:8^{__SFNode=}16@24Q32
^{__SFNode=}16@0:8
@24@0:8^{__SFNode=}16
i24@0:8^{__SFNode=}16
^{__SFNode=}
^{__CFDictionary=}
@"<SDNetworkBrowserDelegate>"
@40@0:8@16^{CGImage=}24@32
@24@0:8^{_NSZone=}16
{?="errorCode"b1"version"b1}
v24@0:8:16
@"SFAutoUnlockNotificationModel"
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
@"NSNetService"
@20@0:8i16
B20@0:8C16
v36@0:8i16@20@28
v28@0:8I16@20
q32@0:8@16@24
@"<PBSMediaRemoteServiceInterface>"
@"SFPINPairSession"
@"NEVPNConnection"
@"SFDeviceRepairService"
@"SFDeviceRepairSession"
@"SFWiFiHealthMonitor"
{?=ddd}16@0:8
v40@0:8{?=ddd}16
@"NSObject<OS_os_log>"
@"CMMotionManager"
@"CMPedometer"
@"CMMotionActivityManager"
{?="x"d"y"d"z"d}
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@36@0:8^{__SFNode=}16@24B32
v32@0:8q16^v24
B24@0:8^^{__CFError}16
v32@0:8^{__SecTrust=}16@?24
^{__SecKey=}16@0:8
B24@0:8^{__CFData=}16
^{__SecTrust=}16@0:8
@24@0:8^{__CFURL=}16
@"NSURLResponse"
@"NSURLSessionUploadTask"
^{CGImage=}
@"SDAirDropPeerMetric"
@"<SDAirDropClientDelegate>"
{?="resetReason"b1"sessionID"b1"version"b1}
v32@0:8@"SFAirDropTransfer"16@"SFAirDropAction"24
v24@0:8@"SFAirDropTransfer"16
v32@0:8@"NSString"16@"NSDictionary"24
@"NSObject<SDAirDropAlertManagerDelegate>"16@0:8
v24@0:8@"NSObject<SDAirDropAlertManagerDelegate>"16
v40@0:8@16Q24Q32
v36@0:8Q16@24B32
v40@0:8Q16@24B32B36
@"NSObject<SDAirDropAlertManagerDelegate>"
v24@0:8@?<v@?>16
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@"NSDictionary"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"SFPeerDevice"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSSet"@"NSError">24
v40@0:8@"NSData"16@"NSDictionary"24@?<v@?@"NSError">32
v48@0:8@16@24@32@?40
v40@0:8@16@24@32
v48@0:8@"NSData"16@"NSString"24@"SFPeerDevice"32@?<v@?@"NSUUID"@"NSData"@"NSError">40
v40@0:8@"NSUUID"16@"SFPeerDevice"24@"NSError"32
v24@0:8@"NSSet"16
v32@0:8@16q24
v48@0:8@16q24@32@40
v40@0:8@16@24q32
v48@0:8@16@24q32@40
v24@0:8@"IDSContinuity"16
v32@0:8@"IDSContinuity"16q24
v40@0:8@"IDSContinuity"16q24@"NSError"32
v48@0:8@"IDSContinuity"16q24@"NSData"32@"NSUUID"40
v40@0:8@"IDSContinuity"16@"NSUUID"24q32
v48@0:8@"IDSContinuity"16@"NSUUID"24q32@"NSError"40
@"SDStatusMonitor"
@"IDSContinuity"
@"NSTimer"
@"NSObject<OS_os_transaction>"
@"NSData"
@"SFAirDropAction"
@"NSArray"
@"<SDAirDropStatusDelegate>"
v44@0:8@16@24S32@36
v24@0:8@"SDAutoUnlockTransport"16
v44@0:8@"SDAutoUnlockTransport"16@"NSData"24S32@"NSString"36
v48@0:8@"SDAutoUnlockTransport"16@"NSUUID"24@"NSString"32@"NSData"40
v32@0:8@"SDAutoUnlockTransport"16@"NSString"24
v40@0:8@"SDAutoUnlockTransport"16@"NSData"24@"NSString"32
v24@0:8@"SDAutoUnlockPairingSession"16
v32@0:8@"SDAutoUnlockPairingSession"16@"NSError"24
v36@0:8@16@24S32
v36@0:8@"SDUnlockIDSController"16@"NSData"24S32
v44@0:8@"SDUnlockIDSController"16@"NSData"24S32@"NSString"36
v24@0:8@"SDUnlockIDSController"16
@40@0:8@16@24@32
v28@0:8q16B24
v60@0:8q16@24B32@36@44@?52
v20@0:8I16
@28@0:8B16B20B24
q28@0:8B16B20B24
B20@0:8B16
@?16@0:8
@"NSHashTable"
@"SDAutoUnlockSuggestionManager"
@"SFDeviceDiscovery"
@"SFAutoUnlockDevice"
@"NSError"
@"SDAutoUnlockIconTransferStore"
@"SDAutoUnlockLocalDeviceController"
@"CLLocationManager"
@"<SDAutoUnlockTransportProtocol>"
@"<SDUnlockMagnetTransport>"
@"<SDKeyManaging>"
@"SDAutoUnlockPeer"
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
v32@0:8Q16@24
v32@0:8Q16@"NSDictionary"24
i48@0:8@16@24@32@40
i32@0:8@16@24
@"SBSRemoteAlertHandle"
@"SFRemoteAutoFillSession"
@"SDNotificationManager"
@"SFBLEScanner"
@"SFRemoteAutoFillService"
@"SFSiriRemoteMonitor"
@"SFDevice"
B20@0:8i16
@"RPCompanionLinkDevice"
@"SFBubbleEstimator"
@"SFNotificationInfo"
@"TURoute"
v40@0:8@16@24B32B36
v36@0:8@16@24B32
B28@0:8i16@20
i44@0:8@16@24@32B40
i40@0:8@16@24@32
Q24@0:8@16
@"SFProxHandoffService"
@"SFNotificationProxy"
@"SFCombinedDevice"
v32@0:8@16^{__SFNode=}24
^{__SFNode=}40@0:8@16@24@32
@"RPPeopleDiscovery"
{?="version"b1"finalMessage"b1}
v32@0:8@"SDAirDropPublisher"16@"NSDictionary"24
v24@0:8^{_CFHTTPServerConnection=}16
@"CUCoalescer"
^{_CFHTTPServer=}
@"SDAirDropPublisher"
@"SDAirDropInformation"
@"<SDAirDropServerDelegate>"
@"SDNetworkOperation"
@"<SDAirDropListenerDelegate>"
@"LSAppLink"
@24@0:8@?16
@24@0:8@?<v@?@"NSError">16
v44@0:8@16B24@28@?36
v40@0:8@16Q24@32
v24@0:8@?<v@?@"NSSet"@"NSError">16
v40@0:8@"SFAutoUnlockDevice"16@"NSString"24@"<SFUnlockClientProtocol>"32
v24@0:8@"SFAutoUnlockDevice"16
v32@0:8@"SFAutoUnlockDevice"16@?<v@?B@"NSError">24
v24@0:8@"<SFUnlockClientProtocol>"16
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v24@0:8@?<v@?@"SFAutoUnlockNotificationModel"@"NSError">16
v44@0:8@"NSString"16B24@"NSString"28@?<v@?B@"NSError">36
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"SFUnlockState"@"NSError">24
v40@0:8@"<SFUnlockClientProtocol>"16Q24@"NSUUID"32
v32@0:8@"SDAutoUnlockSessionManager"16@"SFAutoUnlockDevice"24
v40@0:8@"SDAutoUnlockSessionManager"16@"SFAutoUnlockDevice"24@"NSError"32
v44@0:8@"SDAutoUnlockSessionManager"16@"NSDictionary"24@"NSError"32B40
B24@0:8@?16
@"<SDUnlockXPCSesssionDelegate>"
@"<SFUnlockClientProtocol>"
v32@0:8@"SDAirDropListener"16@"NSError"24
v32@0:8@"SDAirDropListener"16@"SDNetworkOperation"24
v32@0:8@"SDAirDropListener"16@"NSDictionary"24
v44@0:8@16@24@32B40
v40@0:8@16@24Q32
v44@0:8@16@"NSString"24@"NSURL"32B40
v40@0:8@16@"NSString"24Q32
@"SDAirDropListener"
@"SDAirDropTransferManager"
@"SDAirDropClassroomTransferManager"
@24@0:8Q16
{?="version"b1"unlocked"b1}
@"SFBLEDevice"
{?="phoneUnlockDate"b1"errorCode"b1"version"b1"authPrompt"b1"isAuthenticatingForSiri"b1"skipMotionCheck"b1"supportsConfirmationACK"b1"useToken"b1}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8@16@24q32@40
@48@0:8@16^{CGImage=}24q32@40
^{CGImage=}16@0:8
v24@0:8@"SDBonjourResolver"16
@"SDBonjourResolver"
@"<SDNetworkResolverDelegate>"
v40@0:8@"SDAirDropServer"16q24@"NSDictionary"32
v40@0:8@"SDAirDropConnection"16q24@"NSDictionary"32
v40@0:8@"SDAirDropSession"16q24@"NSDictionary"32
v32@0:8@"SDAirDropController"16@"NSDictionary"24
v32@0:8@"SDAirDropStatus"16@"NSDictionary"24
v32@0:8@"SDAirDropInformation"16@"NSDictionary"24
v40@0:8@"SDNetworkResolver"16q24@"NSDictionary"32
v40@0:8@"SDNetworkEjecter"16q24@"NSDictionary"32
v32@0:8^v16@24
r^v24@0:8@16
@"<SDNetworkOperationDelegate>"
v28@0:8B16@20
@"SFAppleIDAccount"
v24@0:8@"SDConnectionManager"16
v28@0:8Q16B24
@"SFRemoteTextInputClient"
B24@0:8^v16
@"<SDAirDropInformationDelegate>"
v24@0:8@"SDBonjourBrowser"16
v24@0:8@"SDWindowsBrowser"16
v52@0:8@16@24@32@40B48
v40@0:8@16@24^{__SFNode=}32
@"NSOperationQueue"
@"SDAirDropHandleriCloudDrive"
@"SDAirDropHandler"
@"LSBundleProxy"
@40@0:8q16@24@32
v36@0:8@16@24i32
v28@0:8@16i24
v36@0:8@16i24@?28
v40@0:8q16q24q32
@32@0:8@16^i24
@"NSURLSession"
@"NSURLRequest"
v40@0:8@"NSString"16@"<SFCompanionServiceManagerClient>"24@?<v@?@"<SFCompanionServiceManagerProtocol>"@"NSString"@"NSString"@"NSString"@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?@"NSFileHandle"@"NSError">24
v24@0:8@?<v@?@"<SFUnlockProtocol>"@"NSError">16
v32@0:8@"SFRemoteHotspotCellularBearerParams"16@?<v@?@"NSError">24
v48@0:8@"SDCompanionStream"16@"SFCompanionService"24@"NSFileHandle"32@?<v@?B>40
v24@0:8@"SDCompanionStream"16
v24@0:8@"SDUnlockXPCSession"16
v40@0:8@"SDStreamManager"16@"SFCompanionService"24@"SDStreamHandler"32
v48@0:8@"SDStreamManager"16@"SFCompanionService"24@"NSFileHandle"32@?<v@?B>40
@"<SDConnectionManagerDelegate>"
@"SDServiceManager"
{?="sessionID"b1"version"b1"remoteNeedsLTK"b1}
@32@0:8^{__CFReadStream=}16^{__CFWriteStream=}24
B40@0:8*16q24^{__CFWriteStream=}32
B40@0:8*16q24^{__CFReadStream=}32
v36@0:8*16q24B32
{?="aksSessionID"b1"awdlCacheID"b1"messageType"b1"version"b1"useProxy"b1}
@"SFSharablePassword"
@"NSData"24@0:8@"NSString"16
@40@0:8@16B24^q28B36
@28@0:8@16B24
@36@0:8@16B24B28B32
@36@0:8@16B24@28
B56@0:8@16@24^@32^@40^@48
@60@0:8@16@24@32@40B48^q52
i36@0:8@16@24B32
B40@0:8@16@24@32
B56@0:8@16@24@32@40@48
@20@0:8B16
B40@0:8@16@24^B32
v36@0:8@16B24B28B32
B28@0:8@16B24
v72@0:8@16@24@32@40@48@56@64
B44@0:8@16@24@32B40
v32@0:8@16B24B28
@32@0:8@16B24B28
{os_unfair_lock_s=I}16@0:8
{?="version"b1"passcodeEnabled"b1"unlockEnabled"b1}
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v40@0:8@16@24d32
v56@0:8@16@24@32q40@?48
v56@0:8@16@24@32@40@?48
v44@0:8@16@24@32i40
v36@0:8@16B24@28
v40@0:8i16@20B28d32
@"IDSService"
@"RPCompanionLinkClient"
@"NSMutableArray"
v40@0:8^{__SecCertificate=}16^{__SecCertificate=}24B32i36
^{__SecKey=}
@"<SDNetworkEjecterDelegate>"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v44@0:8@16^{__SFNode=}24@32i40
v44@0:8@"SDNetworkBrowser"16^{__SFNode=}24@"NSString"32i40
v40@0:8@16q24@32
v40@0:8@"SDNetworkOperation"16q24@"NSDictionary"32
v16@0:8
@24@0:8@16
v32@0:8@16@24
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@0:8
@"NSMutableSet"
@"SDActivityAdvertiser"
@"SDActivityScanner"
@"SDAirDropReceiveManager"
@"SDShareSheetSlotManager"
@"SDAutoUnlockSessionManager"
@"SDActivityEncryptionManager"
@"SDNearbyIDSAgent"
@"NSMutableDictionary"
@"SDPairedDeviceAgent"
@"NSObject<OS_xpc_object>"
@"SDActivityPayloadManager"
@"SDUnlockKeyManager"
@"SDUnlockLockManager"
@"SDXPCServer"
@"SDXPCHelperConnection"
I20@0:8I16
@44@0:8@16@24@32S40
v52@0:8^^{_DNSServiceRef_t}16@24@32@40S48
v48@0:8@16@24@32S40I44
v44@0:8@16@24@32S40
v28@0:8@16S24
^{__SFNode=}24@0:8@16
v32@0:8@16^{__CFDictionary=}24
v24@0:8^{__SFNode=}16
B20@0:8I16
v52@0:8I16I20i24r*28r*36r*44
@36@0:8@16r^v24S32
v36@0:8r*16S24r^v28
v48@0:8I16i20r*24S32S36r^v40
@"<SDBonjourBrowserDelegate>"
v36@0:8@16S24q28
v24@0:8^{__CFReadStream=}16
^{__CFReadStream=}16@0:8
@32@0:8q16d24
@36@0:8r*16B24^{__CFURL=}28
@24@0:8r*16
v40@0:8r*16i24q28i36
v24@0:8r*16
q24@0:8^{__CFURL=}16
^{__CFArray=}32@0:8^{__CFURL=}16^{__CFURL=}24
B40@0:8^{__CFURL=}16^{__CFURL=}24^{_BOMBom=}32
v40@0:8^{_BOMBom=}16^{__CFURL=}24^{__CFURL=}32
B52@0:8^{_BOMBom=}16^{__CFURL=}24^{__CFURL=}32@40B48
v32@0:8^{__CFURL=}16^{__CFURL=}24
^{_BOMBom=}
^{_BOMCopier=}
^{__CFWriteStream=}
@"SDAirDropCompressor"
@"<SDAirDropFileZipperDelegate>"
v28@0:8B16@?20
v24@0:8I16i20
v28@0:8@16I24
v40@0:8@16q24q32
v36@0:8C16@20@28
v28@0:8C16@20
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@"SFDevice"16
v28@0:8@"SFDevice"16I24
v24@0:8@"NSString"16
v32@0:8@"NSString"16q24
v40@0:8@"NSString"16q24q32
v24@0:8@"NSDictionary"16
v24@0:8@"SFRemoteTextSessionInfo"16
v24@0:8@"NSError"16
v32@0:8@"NSUUID"16@"NSError"24
v24@0:8@"SFEventMessage"16
v36@0:8C16@"NSData"20@"NSUUID"28
v24@0:8@"SFRequestMessage"16
v24@0:8@"SFResponseMessage"16
v28@0:8C16@"NSData"20
v32@0:8@"NSString"16@?<v@?@"SFAppleIDAccount"@"NSError">24
v24@0:8@?<v@?@"SFAppleIDAccount"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"SFAppleIDPersonInfo"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v36@0:8@16B24@?28
v28@0:8C16@?20
v36@0:8@16I24@?28
v28@0:8i16@?20
v32@0:8Q16@?24
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSString"@"NSData"@"NSError">16
v24@0:8@?<v@?@"NSError">16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v40@0:8@"NSString"16@"NSUUID"24@?<v@?@"NSString"B@"NSError">32
v36@0:8@"SFContactInfo"16B24@?<v@?@"SFContactInfo"@"NSError">28
v32@0:8@"SFClientGetDeviceAssetsParams"16@?<v@?@"SFClientGetDeviceAssetsResults"@"NSError">24
v32@0:8@"SFPeopleSuggesterParams"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v28@0:8C16@?<v@?@"NSError">20
v36@0:8@"SFDevice"16I24@?<v@?@"NSError">28
v28@0:8i16@?<v@?@"NSError">20
v40@0:8@"SFDevice"16@"NSUUID"24@?<v@?@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v24@0:8@?<v@?I@"NSError">16
v32@0:8Q16@?<v@?B>24
v32@0:8@"SFCoordinatedAlertRequest"16@?<v@?@"NSError"B@"NSDictionary">24
v32@0:8@"SFDeviceDiscovery"16@?<v@?@"NSError">24
v24@0:8@"SFDeviceDiscovery"16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSString">24
v40@0:8@"NSString"16@"SFBLEDevice"24@?<v@?@"NSError">32
v24@0:8@"SFBLEDevice"16
v40@0:8@"NSXPCListenerEndpoint"16@"NSDictionary"24@?<v@?@"NSError">32
v32@0:8@"SFProximityClient"16@?<v@?@"NSError">24
v24@0:8@"SFProximityClient"16
v44@0:8@"SFNotificationInfo"16@"NSString"24B32@?<v@?@"NSError">36
v40@0:8@"SFNotificationInfo"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"SFRemoteAutoFillSessionHelper"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSString"24@"NSError"32
v24@0:8@"NSUUID"16
v32@0:8@"SFRemoteInteractionSession"16@?<v@?@"NSError">24
v32@0:8@"SFService"16@?<v@?@"NSError">24
v24@0:8@"SFService"16
v32@0:8@"SFSession"16@?<v@?@"NSError">24
v24@0:8@"SFUserAlert"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8^@16
@"SDAppleIDAgent"
@"SDAutoFillAgent"
@"NSCountedSet"
@"SDNearbyAgent"
@"SDRemoteInteractionAgent"
@"SDSharedRemoteTextInputClient"
@"SDProxHandoffAgent"
@"SDSetupAgent"
@"NSXPCInterface"
@"NSXPCListener"
i40@0:8@16^B24@32
i32@0:8@16^B24
@"SFRemoteAutoFillSessionHelper"
@"SFCoordinatedAlertRequest"
@"SFUserAlert"
@"SFProximityClient"
@"SFRemoteInteractionSession"
@"SFService"
@"SFSession"
@"NSXPCConnection"
S16@0:8
v20@0:8S16
@"NSUUID"
@"NSMutableData"
C36@0:8[10C]16[2C]24C32
B40@0:8[10C]16[2C]24C32C36
v36@0:8[10C]16C24@?28
B32@0:8@16@24
@"SDActivityEncryptionKey"
@20@0:8I16
@"<SDStreamHandlerDelegate>"
{?="version"b1"signout"b1}
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v36@0:8@16@24I32
v40@0:8@16@24I32B36
@"UNUserNotificationCenter"
@"SDBonjourBrowser"
@"<SDWindowsBrowserDelegate>"
@48@0:8@16@24q32q40
q28@0:8B16^i20
q32@0:8B16B20@24
q40@0:8B16B20@24^i32
q36@0:8B16@20@28
q28@0:8I16@20
q36@0:8I16@20^i28
B32@0:8q16@24
@32@0:8q16@24
@36@0:8q16@24B32
@44@0:8q16@24B32^q36
B24@0:8q16
@"NSSet"20@0:8B16
@"SFAutoUnlockDevice"16@0:8
@"NSDate"16@0:8
v60@0:8@16@24S32@36@44@?52
v68@0:8@16@24S32@36@44@52@?60
@72@0:8@16@24S32@36@44B52@56@?64
@"<SDAutoUnlockTransportClient>"
@"NSMapTable"
v28@0:8@"SDSharePointBrowser"16i24
@48@0:8^{__SFNode=}16@24Q32@40
v32@0:8^{__SFNode=}16^{__SFNode=}24
@40@0:8@16Q24^B32
@"SDNodeCoalescer"
@"SDAirDropDiscoveryLogger"
@"SDDomainBrowser"
@"SDManagedBrowser"
@"SDClassroomBrowser"
@"SDConnectedBrowser"
@"SDWorkgroupBrowser"
@"SDSharePointBrowser"
@"SDRapportBrowser"
@"<SDNodeBrowserDelegate>"
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
^{__SecIdentity=}24@0:8@16
v32@0:8q16@24
v64@0:8@16@24@32@40@48@?56
i24@0:8@16
v24@0:8d16
@40@0:8@16@24^@32
@"SDAppleIDDatabaseManager"
@"NSObject<OS_dispatch_queue>"
@"SDAppleIDIdentityRequest"
@"SDAppleIDServerTask"
@"APSConnection"
@"_CLRangingPeer"
@84@0:8@16B24@28@?36@?44@?52@?60@?68@?76
@"SDAutoUnlockRangingPeer"
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"SDAutoUnlockWiFiRequest"
@"SDAutoUnlockWiFiManager"
v24@0:8@"SFCompanionService"16
@"<SFCompanionServiceManagerClient>"
{?="version"b1"success"b1}
@68@0:8@16@24S32@36@44@52@?60
{?="errorCode"b1"failureReasons"b1"sessionID"b1"version"b1"watchNewLTKSyncStatus"b1"watchOldLTKSyncStatus"b1"ltkSyncing"b1}
v40@0:8@16q24^v32
v40@0:8@"SDAirDropFileZipper"16q24^v32
@24@0:8^{_CFHTTPServerConnection=}16
v24@0:8^{__CFError=}16
v32@0:8^v16^{__CFString=}24
v32@0:8^{__CFDictionary=}16^{__CFString=}24
v36@0:8^{_CFHTTPServerRequest=}16^{__CFString=}24B32
B24@0:8^{__SFNode=}16
v32@0:8^{__CFReadStream=}16Q24
B32@0:8^{_CFHTTPServerRequest=}16^@24
v40@0:8^{_CFHTTPServerRequest=}16q24^{__CFData=}32
B24@0:8^{_CFHTTPServerRequest=}16
v24@0:8^{_CFHTTPServerRequest=}16
q24@0:8^{_CFHTTPServerResponse=}16
v32@0:8^{_CFHTTPServerResponse=}16^{_CFHTTPServerRequest=}24
v24@0:8^{_CFHTTPServerResponse=}16
@"NSURL"
@"NSProgress"
^{__SecTrust=}
^{__CFReadStream=}
@"SDAirDropFileZipper"
@"NSObject<OS_dispatch_semaphore>"
^{_CFHTTPServerRequest=}
^{_CFHTTPServerConnection=}
@"<SDAirDropConnectionDelegate>"
v24@0:8Q16
v56@0:8@"NSString"16@"NSData"24@"NSString"32q40@?<v@?@"NSData"@"NSError">48
v24@0:8@"SFActivityAdvertisement"16
v24@0:8@"SFPeerDevice"16
v44@0:8@16@24B32@?36
@"NSObject<OS_dispatch_source>"
v40@0:8^{__SFNode=}16@24@32
^{__CFBag=}
v52@0:8@16q24d32B40@?44
v56@0:8@16@24Q32B40B44@?48
v32@0:8q16@?24
v24@0:8@?<v@?@"NSSecurityScopedURLWrapper">16
v52@0:8@"CNContact"16q24d32B40@?<v@?@"NSData"B>44
v52@0:8@"NSArray"16q24d32B40@?<v@?@"NSArray"B>44
v40@0:8@"NSData"16@"CNContact"24@?<v@?@"NSURL">32
v52@0:8@"NSArray"16q24d32B40@?<v@?@"NSArray">44
v40@0:8@"NSArray"16@"UIColor"24@?<v@?@"NSArray">32
v56@0:8@"NSString"16@"UIColor"24Q32B40B44@?<v@?@"NSData">48
v40@0:8@"NSString"16@"UIColor"24@?<v@?@"NSData">32
v32@0:8q16@?<v@?@"NSData">24
v24@0:8@"UISUIActivityViewControllerConfiguration"16
@52@0:8@16q24d32B40^B44
@60@0:8@16@24q32d40B48^B52
@48@0:8@16q24d32B40B44
@44@0:8@16q24d32B40
@36@0:8@16@24B32
^{CGImage=}40@0:8@16@24@32
v60@0:8@16q24@32@40B48q52
^{CGImage=}52@0:8@16@24Q32B40B44B48
^{CGImage=}32@0:8@16@24
^{CGImage=}24@0:8q16
@56@0:8@16@?24@?32@?40@48
@"UISUIActivityViewControllerConfiguration"
v32@0:8@"NSStream"16Q24
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
v32@0:8@"SDStreamHandler"16@"NSData"24
v24@0:8@"SDStreamHandler"16
v32@0:8@"SDStreamHandler"16@"NSError"24
v28@0:8@"SDStreamHandler"16B24
i24@0:8i16i20
@"NSFileHandle"
@"<SDCompanionStreamDelegate>"
@"SDStreamHandler"
@"NSNetServiceBrowser"
@"NSInputStream"
@"NSOutputStream"
{?="version"b1"keyFailed"b1}
d16@0:8
q16@0:8
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v20@0:8B16
B32@0:8@16o^@24
v32@0:8^{__SecCertificate=}16@24
@24@0:8^{__SecCertificate=}16
^{__SecCertificate=}24@0:8@16
^{__SecCertificate=}16@0:8
^{__SecIdentity=}16@0:8
v24@0:8@?16
@32@0:8@16@24
v32@0:8^B16^B24
q24@0:8@16
C16@0:8
I16@0:8
i16@0:8
v28@0:8B16B20i24
v32@0:8^{__SCDynamicStore=}16^{__CFArray=}24
v32@0:8r*16I24i28
v24@0:8q16
v20@0:8i16
v28@0:8I16^v20
B40@0:8^{__SCPreferences=}16^@24^@32
@24@0:8q16
@"NSNumber"
@"NSString"
@"_TtC16DaemoniOSLibrary27SDAirDropContactHashManager"
@"CNContactStore"
^{__CFRunLoopSource=}
@"SDAirDropServer"
@"NSDictionary"
^{__SecCertificate=}
^{__SecIdentity=}
@"NSMutableString"
^{_DNSServiceRef_t=}
^{IONotificationPort=}
^{__IOPMConnection=}
^{__SCPreferences=}
@"CUSystemMonitor"
@"SDDeferrableOperation"
@"SDSmartCoverMonitor"
@"CNContact"
@"NSDate"
@"NSSet"
v24@0:8B16I20
v36@0:8@16I24q28
@"SDUnlockWakeGestureRecord"
@"SFPairedUnlockDailyEvent"
@"SDUnlockLockMetricDates"
@"NSBackgroundActivityScheduler"
{?="errorCode"b1"sessionID"b1"version"b1}
v24@0:8I16S20
@"SDUnlockIDSController"
@"SDUnlockSecurityManager"
@"SFPairedUnlockEvent"
C32@0:8^B16^B24
C20@0:8C16
i44@0:8C16r*20r*28@36
i40@0:8@16@24^B32
i44@0:8C16C20@24@32B40
@28@0:8C16@20
q32@0:8q16@24
I24@0:8@16
v36@0:8@16q24I32
v32@0:8q16q24
C44@0:8C16@20@28@36
@32@0:8@16^B24
v40@0:8C16C20@24@32
i44@0:8@16C24@28@36
i36@0:8@16C24@28
i52@0:8C16r*20r*28@36@44
v24@0:8I16I20
@"SFBLEAdvertiser"
@"SFSystemService"
@"SFBLEPipe"
@"CUBluetoothClient"
@"RPIdentity"
{?="unlockDate"b1"type"b1"version"b1}
v48@0:8@16q24@32@?40
v48@0:8@"NSString"16q24@"NSDictionary"32@?<v@?B@"NSURL"@"NSError">40
v32@0:8@16Q24
v32@0:8@"NSString"16Q24
@32@0:8@16^@24
v24@0:8B16B20
@"<SDAirDropControllerDelegate>"
@52@0:8@16@24@32@40B48
v44@0:8r*16S24S28r*32I40
^{_DNSServiceRef_t=}16@0:8
@"<SDBonjourResolverDelegate>"
B32@0:8@16B24B28
v36@0:8@16S24@?28
v32@0:8B16@20B28
@"SDUnlockSessionAuthToken"
@"<NSSecureCoding>"40@0:8@"NSXPCConnection"16@"NSXPCCoder"24@32
v36@0:8@"NSXPCConnection"16@"NSInvocation"24B32
Starting Up...
SIGTERM received, shutting down.
SIGINFO received, requesting debug output.
SIGUSR1 received, requesting reset state.
SIGUSR2 received, requesting reset state 2.
Delaying trigger of action %@ till transferState reaches requirement
Cannot trigger action %@ as it is past requirement
Delaying trigger of action %@ till UI unlock
Triggering action %@
User clicked on Open button
logReceiverBundleID appIdentifier is nil
failed to remove item at %@
Cannot open empty list of URLs
Opening URLs: %@ in %@
Opening URLs: %@
sandbox_extension_consume failed with error %d for tokenData "%@"
Consumed %d sandbox extensions
Start AirDrop session with %@
No session clients started at the moment, most likely we have not discovered the node over Bonjour yet
SDAirDropSession: skip Rapport node %@
Start session client for %@
Stop AirDrop session with %@
SDAirDropSession: Received event %@, properties = %{private}@
totalBytes=%{public, signpost.telemetry:number1}lld
TransferTime
 enableTelemetry=YES 
TransferTimeBytes
SDAirDropSession: cancellation handler called for sessionID: %@
SDAirDropSession: startProgress sessionID is NULL
Stored last unlocked with mask: %d
Not starting smart cover monitor on simulator
smartCoverIsClosed changed: closed %@
flap1IsEngaged (updated) = %{public}s openIsEngaged = %{public}s
flap1IsEngaged = %{public}s openIsEngaged (updated) = %{public}s
flap1IsEngaged = %{public}s openIsEngaged = %{public}s
Invalidating %@
Restarting response timer
invalidateResponseTimer
Received protobuf (type = %d, size = %u)
Incoming message session ID (%@) doesn't match current one (%@)
Launching app store with URL: %@
Key session initialized (device id: %@)
Removing authorization request
Watch not in state. Passcode enabled: %@, wrist detection enabled: %@
Auth key session notifying delegate with error: %@
Alerting on notify
BLE peer disconnected (identifier: %@)
System is active
Beginning delayed work
Authorization allowed by request, not showing alert
Starting wifi request
%s error %@ request:%@
AWDL network up with info %@
Automation: AWDL started %0.2f
WiFi request invalidated
Received SDAutoUnlockMessageTypeAWDLInfo %@
Finished setting in progress
Key session received device id: %@
Received SDAutoUnlockAuthPromptRequest
Received SDAutoUnlockAuthPromptImageData
Received SDUnlockSessionKeyExchangeResponse
Received SDUnlockSessionConfirmation
Received SDAutoUnlockMessageTypeCleanUpAWDL
Using legacy protocol
Using attested protocol
Using modern protocol
Deserializing AWDL info failed %@
handleAWDLInfo: %@
Local device needs to be armed
Image caching disabled
Prompting with cached image
%@ (request: %@)
Received image data (length: %ld, total: %ld)
Received image data but already using cache
Received image data message without data %@
handleSessionKeyExchangeResponse: %@
Sending auth token for approve %@
Sending auth token %@
Failed to generate ranging session token
Creating auth token failed
Session confirmed %@
Caching image for app %@
Confirmation failed
WiFi interface disabled
Failed awdl info serialization
Sending SDAutoUnlockAWDLInfo
Error sending SDAutoUnlockAWDLInfo (error: %@)
Sending SDAutoUnlockAuthPromptResponse
Error sending auth prompt response %@
Sending SDUnlockSessionKeyExchangeRequest
Error sending request %@
Sending SDUnlockSessionAuthToken
AuthToken ack after session completed
Sending SDAutoUnlockSessionConfirmationACK
Grabbing system activity assertion for Auto Unlock key session
IOPMAssertionDeclareSystemActivity for key session returned %x
Power assertion (assertion %ld, state %d)
System wake scheduled for key session (state %d)
Grabbing assertion we already have
Releasing key power assertion
Restarting assertion timer
Assertion timer fired
Invalidating aggressive advertising timer
Created continuity.auth service %@
Default paired device nearby = %@
Sending protobuf (type = %d, size = %lu, data class = %@, data = %@)
IDS send error = %@
Sent message with identifier = %@
Skipping unpaired device: %@
Skipping Unsupported hardware: %@
IDS device identifier not found for device: %@
Space became avaliable
success = %@, identifier = %@, error = %@
No error handler for message sent callback
Incoming protobuf (type = %d, size = %u, data = %@)
Incoming protobuf is nil
didSwitchActivePairedDevice %@
Reset Session: %@
Hash from setup doesn't match preferred LTK
Timeout waiting for LTK response from Companion
Watch LTKs changed (user info: %@)
Incorrect LTK (deviceID: %@, ltk exists: %@, hashes match: %@)
Response missing view syncing state
Pairing key session notifying delegate with error: %@
Received SDUnlockSetupCreateSecret
Pairing canceled for create secret
Pairing Enabled
handleCreateEscrowSecret: %@
Sending key device locked failed
Device using new ranging: %@
Fix worked for pairing session: %@
Fix worked for auth session: %@
Attempting to fix remote LTK
Registration session notifying delegate with error: %@
Received a new rawAdvertisementData %@ from %@ (isReplay:%@, disabledDuplicateFilter:%@)
No current key to decrypt advertisement from %@ with rawAdvertisementData %@. Requesting key
New counter %d is not greater than previous %d from %@ with rawAdvertisementData %@. Requesting new key
Failed to decrypt advertisement with new key from %@ with rawAdvertisementData %@. Discarding advertisement
Failed to decrypt advertisement from %@ with rawAdvertisementData %@. Requesting new key
New counter %d is not greater than previous %d from %@ with rawAdvertisementData %@. New key is same. Replay!
Failed to decrypt advertisement from %@ with rawAdvertisementData %@. New key is same. Replay?
Failed to retrieve new key from %@
Successfully decrypted advertisement (sharing flags + advertisementPayload): %@ => %@, counter: %u
Bonjour name conflict for %@
Bonjour advertise failed (%ld|%d)
Retrying Bonjour advertise in 3 seconds...
Giving up trying to advertise with Bonjour
Bonjour advertise %@ started
SDAirDropPublisher: dataFromTXTRecordDictionary returned nil
Bonjour advertise %@
SDAirDropPublisher: CFNetServiceRegisterWithOptions returned (%ld, %d)
SDAirDropPublisher: copyAirDropID returned NULL
Bonjour advertise %@ stopped
Created session (OS version: %@, build: %@, device: %@)
Updated timeouts (responseTimeout: %ld, responseTimeoutFromServer: %@, messageTimeout: %ld, messageTimeoutFromServer: %@)
Passcode can't unlock keybag
Invalid parameters (passcode = %@)
Internet Sharing enabled
Not enabling, view not syncing
Device is placeholder
Mac not IDS registered
Response timer fired
Pairing lock session notifying delegate with error: %@
Restarting LTK timer
Invalidate LTK timer
Timed out waiting for LTK to sync
Received SDAutoUnlockMessageTypePairingKeyDeviceLocked
Received SDUnlockSetupSessionCreated
Received SDUnlockSetupCreateRecord
Not notified of locked device, session canceled
Pairing session canceled for session created
Received failure reasons %d
Watch missing LTK and is unable to communicate with Companion to potentially sync it
Watch missing LTK for Mac
Watch has old LTK for Mac
Error in session created response: %d
Pairing session version is %d
Remote LTK Hash: %@
Pairing session canceled for session request
Setup received response from old watch (version: %d)
Setup received response from new watch (version: %d)
AKS session invalid
LTK invalid (exists: %@, hash matches: %@)
handleEscrowSessionRequest: %@
Remote LTK does not exist
handleSetupCreateRecord: %@
Enabled for device: %@
Waiting for cloud pairing (Watch ID: %@, Companion ID: %@)
Missing proxy companion IDS ID -- this shouldn't happen
Retrying cloud pairing for specific devices %@
Unlock not enabled and cloud pairing not syncing after pairing (device: %@)
Sending SDUnlockSetupRequest %@
Sending SDUnlockSetupCreateSecret
Received ACK (identifier: %@, setup ID: %@, token ID: %@)
FileTransferSucceeded: %{private}@
FileTransferFailed: %{private}@
AirDropPeerDiscoveredInfo: %{private}@
AirDropSessionInfo: %{private}@
ShareSheetActivityType: %@
Failed to get app links with error %@
Posting "%@" authenticated Siri by Apple Watch (device ID: %@)
Posting "%@" unlocked by Apple Watch (device ID: %@)
Restarting notification timer
Notification timer fired
Invaliding suggestion scan timer
BT address not available, force random AirDrop ID
Random AirDrop ID requested
Current AirDrop ID is %s
CNMonogrammer monogramForContact:isContactImage: returned nil for %@
No icon data for node with id = %@
copyCertificateChainFromTrust: SecTrustEvaluate result is %d
copyCertificateChainFromTrust: SecTrustGetCertificateCount returned %d
copyCertificateChainFromTrust: SecTrustEvaluateWithError failed %@
copyCertificateChainFromTrust: SecTrustRef is NULL
Validation record data for %@ not available
Validation record data verification failed for %@
Validation record for %@ is nil
Validation record altDSID for %@ is zero length
Certificate chain for %@ is empty
Certificate chain not trusted. SFAppleIDVerifyCertificateChainSync for %@ failed with error %d
SFAppleIDCommonNameForCertificate for %@ failed with error %d
%@ doesn't match %@ for %@
Hashes in validation record: Email=[%@], Phone=[%@]
Hashes in validation record are not recognized.
Validation record data is accepted for %@
Contact information not available for %@
Unable to verify identity for %{private}@
Verified identity has a null email or phone (should never happen) %{private}@
storeFilesCopied: kSFOperationFilesKey is missing
storeFilesCopied: CFNumberGetValue failed
Icon for node with id = %@: iconDataSize = %ld preferVibrant = %d isContactImage = %d
Icon too small for node with id = %@
No contact for node with id = %@
Got verified identity for %@ (%{private}@)
verifiedIdentityForCertificateChain failed for %@ (%{private}@) with error %@
Missing Apple ID already presented
Present missing Apple ID alert
Couldn't put up the missing Apple ID alert! (error = %d)
Missing Apple ID notification response handler called -> responseFlags (%d)
Request to open iCloud settings
Received continuation payload sent notification with %lu clients, activity ID = %@
Activity not stream activity, not publishing
Added connected stream, total = %ld
Streams are being requested for bonjour name = %@
Failed to create stream handler
Failed to create net service
Service does not have a bonjour name
Wi-Fi not enabled on local iOS device
Removed connected streams, total = %ld
Restarting publish timer
Publish timer fired, no more connected streams
Publishing net service
Could not create NSNetService
No stream ID when trying to publish
Already publishing
Unpublishing
Added service to publisher %@ with identifier %@
Service has already been added
Removed stream support for activity with identifier = %@
No more activities that support streams
Published net service = %@
Failed to published net service = %@, errorDict = %@
Republishing service
Publisher stopped publishing
Net service did accept streams
Could not create stream handler, other side should be timing out
No manager for received ID = %@, managers = %@
Using phoneAutoUnlockWatchMotionActivityWindowSeconds %d
Activity start date %@
Motion activity activities: %{private}@
activity error: %@
Device off wrist, not checking past activity state
Using phoneAutoUnlockWatchStepCountWindowSeconds %ld
Step start date %@
no step data, error %@
Device off wrist, not checking past step state
Accelerometer changed (base: (%@), new: (%@), diff: %d)
Accelerometer motion detected with sum change: %d
Using accelerometer motion
Activity changed %@
Past motion activities %@
Comparing motion dates (motion start: %@, current: %@)
Comparing motion date to now (motion start: %@, now: %@)
Activity motion detected
Using activity motion
Activity threshold is %d
Comparing motion dates (motion start: %@, end: %@, elapsed: %{private}d, need: %d)
Step activity threshold is %d
step count: %{private}@
Step activity detected. Steps: %{private}d
Not enough step data. Steps: %{private}d, threshold: %d
Detected motion %@
Checked step data: %@, checked activity data: %@
Restarting motion timer
Motion timer fired
Invalidating motion timer
SDXPCHelperConnection invalidated in %@
SDAirDropClient %@
Got Discover response from %@
SDAirDropClient: Discover response has no content
Got Ask response from %@
SDAirDropClient: Ask response has no content
Got Upload response from %@
SDAirDropClient: didReceiveResponse unknown operation
SDAirDropClient: didReceiveResponse operation is NULL
SDAirDropClient: didReceiveResponse unknown status code %ld
SDAirDropClient: storePropertyValue value for key %@ is invalid
SDAirDropClient: storeDataValue value for key %@ is invalid
SDAirDropClient: storeStringValue value for key %@ is invalid
SDAirDropClient: CFPropertyListCreateWithData returned invalid dictionary
parseAskResponse: CFPropertyListCreateWithData %@
parseDiscoverResponse: CFPropertyListCreateWithData %@
Retry %s request for %@
Connection to %@ canceled (%@)
Connection to %@ failed (%@)
SDAirDropClient: receiver is not trusted
### Cannot get receiver's public key, no AppleID
### Cannot get receiver's public key, no cached cert
### Cannot get receiver's public key from cached cert
AirDrop sending to %@ over %s
SDAirDropClient: if_indextoname(%d) failed
AirDrop sending to %@ over IPv6
AirDrop sending to %@ over IPv4
NSURLSessionTaskTransactionMetrics count %lu is not expected, expecting 1
Connected to %@ from [%@] => [%@]
Failed to validate Apple ID certificate of receiver %@
Validated Apple ID certificate of receiver %@
SDAirDropClient: sending client certificate to %@
SDAirDropClient: intermediate certificate not available. Sending to %@ with no Apple ID certificate
SDAirDropClient: identity not available. Sending to %@ with no Apple ID certificate
SDAirDropClient: authenticationMethod returned %@
SDAirDropClient: needNewBodyStream invoked for task %@
Bonjour resolved %@ in %d ms
%s %@ at %@
Bonjour resolve %@ failed (%@)
Ask request sender bundle ID: %@
SDAirDropClient: Unhandled compression type [%@], assuming GZip
Sending %@ request to %@
SDAirDropClient: CFURLCreateWithFileSystemPathRelativeToBase returned NULL
SDAirDropClient: CFURLCopyHostName returned NULL
SDAirDropClient: copyUserFolder returned NULL
SDAirDropClient: CFPropertyListWrite %@
SDAirDropClient: CFWriteStreamOpen failed
SDAirDropClient: CFWriteStreamCreateWithFile returned NULL
SDAirDropClient: CFURLCreateFromFileSystemRepresentation(%s) returned NULL
SDAirDropClient: realpath(%s) failed with error %d
SDAirDropClient: CFURLGetFileSystemRepresentation(%@) failed
SDAirDropClient: CFURLCreateFilePathURL %@
SDAirDropClient: internetLocationFile returned nil
SDAirDropClient: splitOutFileURLs url "%s" has no scheme
SDAirDropClient: validateAirDropItems _items is empty or NULL
Validating %lu items to send: %@
validateAirDropItems couldn't validate fileURL: %@ with error: %@
validateAirDropItems validated %lu/%lu items for transfer
SDAirDropClient: kCFURLTypeIdentifierKey %@
SDAirDropClient: kCFURLNameKey %@
SDAirDropClient: startPublishingProgress sessionID is NULL
created temporary directory %@
failed to create temporary directory %@
startSending to: "%@", validated %lu airdrop items. properties: %@
startSending, did NOT validate airdrop items. Error: %@. properties: %@
Starting file coordination for %@
SDAirDropClient: coordinateAccessWithIntents(%@) for %lu files %@ failed %@
Starting to send %lu files to "%@", fileURLs: %@
SDAirDropClient: splitOutFileURLs failed
Start transaction to "%@"
SDAirDropClient: removeObjectAtURL(%@) failed %@
Removing transfer with id %@
Cleaning up transfer with id %@
New incoming transfer %@ with items: %@
Progress event for recordID %@: transfer not found, ignoring.
Cancel event for recordID %@: transfer not found, ignoring.
Error event %@ for recordID %@
Error event for recordID %@: transfer not found, ignoring
Finished event for recordID %@: transfer not found, ignoring.
User response: %@ for transfer with id %@
Unhandled user response
No handler for transfer with id %@, ignore action triggered event for action %@
New connection established %@
Connection invalidated %@
Setting handler of class %@ for transfer with id %@
Handler %@ failed for transfer with id %@
Transfer with id %@ failed with reason %@
Set transfer state %@ -> %@ for transfer with id %@
Cleaning up URL %@
Remove URL failed with error %@
Loading all persisted transfers
Receive data at %@ is not valid
Started advertising %@ as %@ with options %@
Goodbye packet advertising interrupted
%@ advertising: advertisingEnabled %@, currentConsoleUser %@, state %s, shouldNotAdvertiseRequestersCount %lu, shouldStart %@
%s %@ + "%@"
%s %@ - "%@"
Advertising client arrived
Advertising client went away
Stopping for user %d on sleep
Stopping for user %d on logout
Grabbing power assertion to keep advertising until told to stop
IOPMAssertionCreateWithProperties returned %x
Trying to grab power assertion while we already have one
Releasing power assertion
%@ startGoodbyeTimer with time interval %.2f
%@ invalidateGoodbyeTimer
%@ goodbyeTimeoutFired
Ignoring currentAdvertisementPayload because it is of incorrect size %d, should be %d
Encrypted (sharing flags + advertisementPayload): %@ => %@, counter %u
Sharing/SDActivityAdvertiser/continuityDidUpdateState
Did update state to %s
continuityDidUpdateState: Powered on
continuityDidUpdateState: Powered off
continuityDidUpdateState: Unknown
continuityDidUpdateState: Resetting
Sharing/SDActivityAdvertiser/continuityDidStartAdvertisingOfType
IDSContinuity didStartAdvertisingOfType: %s
Sharing/SDActivityAdvertiser/continuityDidStopAdvertisingOfType
IDSContinuity didStopAdvertisingOfType: %s
Sharing/SDActivityAdvertiser/continuityDidStopAdvertisingOfTypeWithError
IDSContinuity didStopAdvertisingOfType: %s withError: %@
Sharing/SDActivityAdvertiser/continuityDidFailToStartAdvertisingOfType
Did fail to start advertising for %s (%@)
Request to advertise %@ with options %@
Advertisement contents does not differ from current, continuing previous advertising
Handoff is disabled in settings on this device
Handoff is disabled until first unlock has occurred
Real Handoff is disabled since alwaysSendPayload is enabled
Failed to find any valid cloud paired devices
List of Activity Continuation devices changed %@
nearbyDevicesChanged %@
Session manager starting
Resetting in progress state
Auto Unlock eligible devices %@
Device unlocked on start up
### Device not unlocked on start up (state: %ld)
Device unlocked on start up after retry
### Device not unlocked on start up after retry (state: %ld)
Added SessionManager observer %@
Removed SessionManager observer %@
Calling key device locked %@
Calling enabled device %@
### Calling failed to enable %@
Calling began %@
Calling completed %@
### Calling failed %@
Repair cloud pairing if necessary
Unsupported hardware model identifier:%@
Unsupported hardware/software model identifier:%@, version:%@
Devices %@
Devices with description %@
Ranging supported: %@ for model: %@
### No eligible devices: Auto Unlock disabled due to profile
### Unable to enable Auto Unlock due to profile
Enabling device %@, id %@
Cancel enabling all devices
Cancel enabling device %@
No pairing lock session to cancel (device id: %@)
Disabling Auto Unlock (device: %@)
Begin %@: %@
Test mode attempt
Test Mode: Token: %@
Test Mode: Unable to create hint token
Test Mode: Passcode missing for test mode
SPI attempt overlap with prewarm attempt
Attempt started %@, error %@
Starting attempt (attempt count: %ld, bluetooth devices: %ld, time since last wake: %ld seconds, sleep type: %@)
### No enabled devices for attempt
### FaceID disabled. Disabling Auto Unlock for all key devices
### Interfaces off (bluetooth off: %@, wifi off: %@)
### Mac is internet sharing
### Device is not nearby
### Watch needs to be unlocked
### Reached limit of attempts (attempt count: %d)
### Device needs to be unlocked through another method first (unlocked recently: %@, last locked by relock %@)
Connecting to watches: %@
Attempt already in progress (progress state: %@)
Beginning prewarming of unlock attempt
attemptAutoUnlockForSiri
Calling attemptAutoUnlockWithoutNotifyingWatch
Complete Auto Unlock, Post Notification: %@
Sending Unlock Confirmation, Suppress Notification
Sending Unlock Confirmation, Show Notification
Invalidating attempt
Posting state changed: Attempt invalidated
Updating WiFi state after attempt
Canceling attempt in progress 
 device unlocked
Log Unintentional AutoUnlock Attempt: %@
Do Not Post Alert Again
Incremented attempt count %d
Decrementing
Sending relock request
### Unable to send relock request: %@
State requested (attempt in progress: %@, device: %@, state: %@)
Disabling (device ID: %@, pairingID: %@)
Sending %@ %@
### Error sending disable message (device id: %@, error: %@)
Received SDUnlockDisable (device ID: %@, pairingID: %@)
Received SDUnlockDisable but device ID is NULL
### Received disable while enabling device but pairing IDs don't match (lock device: %@, received pairing ID: %@, session ID: %@)
Not disabling (local pairingID: %@, received pairingID: %@)
Removing remote LTK for %@
Pairing lock session in progress %@
Pairing key session in progress %@
### Missing IDS device ID for Mac requesting pairing
Lock session setting context %@
Auth lock session in progress %@
Auth key session in progress %@
Already sent trigger to device
Clearing all keys with tokens
Invalidating existing session: %@
Registration key session in progress %@
### Missing IDS device ID for key registration
Registration lock session in progress %@
### Missing IDS device ID for lock registration
Initialized remote peer to %@
Could not find remote LTK for active device: %@
Invalidating existing registration session: %@
Pairing session canceled (device ID: %@, session ID: %@)
Removing key session %@
Removed key session %@
Received error while registering key (%@), removing from list of registered devices.
Local key registration session failed, setting needsArming = YES
Canceled at end
Session failed (id: %@, error: %@, outstanding sessions: %@)
Skipped donating positive mask signal due to default phoneAutoUnlockSkipPrewarmOnNextUnlock
### Missing authorization token: %d
### Unexpected attempt type: %d
Wi-Fi powered on: %@
Posting state changed: Scan stopped - session in progress
Already connected (new device: %@, attempt device: %@)
### Discovered peer but Wi-Fi is off
Locking device on confirmation failed error
Received relock request
Relock message if from %@ but current remote peer is %@
Incoming message missing info (session = %@, wrapper = %@, data = %@)
Scanner invalidated
Scanning for bluetooth IDs %@
SFBLEScanner timer fired %@
Using BLE scan timeout %.2f seconds
Scanner started with timeout %.2f seconds
Scanner error: %@
Scanner invalidated before activate
Invalidating scanner
Found BLE peer: %@
Restarting scan timer
Scan timer fired
Invalidating scan timer
Advertising for Auto Unlock: %@ (local: %@, background: %@, watch locked: %@, suggestion: %@)
Received message from bleDevice %@, useBTPipe %d
Received wrapper %@
Received wrapper %@, session ID %@
No session for session ID: %@
Could not create session ID
Missing session ID (has session ID %@, length %ld)
Failed to decrypt message (error code: %ld)
Sending %@ Wrapper %@
Completed sending decryption failed message (error: %@)
Keybag state changed to %@
User declined to enable Phone Auto Unlock
AutoUnlock Enabled: %@, behavior changed after upgrade: %@
Posting notification with text %@
Resetting upsell notification defaults
Keeping upsell notification defaults
Resetting attempt count
Canceling attempt in progress 
 device screen turned off
Checking if key originated registration is needed
Beginning key originated registration
Could not find remote LTK for %@
Device entered bio lockout, resetting all key devices
Delay releasing language assertion for Auto Relock for %ld seconds
Release language assertion for Auto Relock
### Requesting Relock Due To Magnet Link Disconnect
Not Requesting Relock, deviceCurrentlyUnlockedByWatch: %@
Magnet Link Timer Activated
Cancelled Magnet Link Timer
Bluetooth power changed (interface on: %@)
### Bluetooth error count: %d
Already presented Bluetooth off error
### WiFi error count: %d
Already presented Wi-Fi off error
Generating state dump
Rapport Browser start, current request count %d
Rapport Browser stop, current request count %d
Rapport Browser start
Enabling Stranger Discovery
Rapport found person %@
Rapport person %@ changed %@
Rapport lost person %@
Rapport people discovery interrupted
Rapport people discovery invalidated
Rapport people discovery failed to activate with error %@
Rapport people discovery activated. Already discovered people %d
Rapport Browser stop
SDRapportBrowser: createSFNodeFromMyRPDevice failed for %@
SDRapportBrowser: Removing SFNode %@ for %@
SDRapportBrowser: Adding SFNode %@ for %@
SDRapportBrowser: createSFNodeFromRPPerson failed for %@
SDRapportBrowser: Failed to add SFNode because accountID is nil for %@
SDRapportBrowser: Removing SFNode %@ for RPPerson %@
SDRapportBrowser: IDS device info for %@ may be inaccurate. Don't use it for AirDrop
SDRapportBrowser: couldn't find contact with accountID for %@
SDRapportBrowser: meCard is nil
No icon data for model identifier: %@
AirDrop server initialized
AirDrop server invalidation complete
New AirDrop connection %p
Closed AirDrop connection %p
AirDrop server didReceiveError %@
Trying again with random port number
AirDrop server idle timeout
AirDrop status changed
Apple ID account info changed
Apple ID account changed
Stopping AirDrop server for user %d on sleep
Starting AirDrop server for user %d on wake
Starting AirDrop server for user %d on login
Stopping AirDrop server for user %d on logout
Finder %@ AirDrop
Discoverable mode changed to %@
Device first unlock
Screen turned %@
Auto-trigger server
Scanning mode %@
Scanning mode off: console=%d, discoverable=%d, screenOn=%d, unlockedOnce=%d
AirDrop updateServerState with nil delegate
SDAirDropServer: intermediate certificate not available
AirDrop using self-signed certificate
AirDrop server enabled on port %@
SDAirDropServer: _kCFHTTPServerServicePort is NULL
SDAirDropServer: _CFHTTPServerCreateService returned NULL
AirDrop server started
Invalidated AirDrop server
kSFOperationEventErrorOccurred
SDAirDropListener UNHANDLED EVENT %@ [%d] %@
IP Address = %@, Interface = %@
Create destination for %@ failed %@
### %s - dropped URL:[%@]
### %s -- URL does not exist on filesystem:[%@]
Ignoring advertisment data as it is of incorrect size %lu, expected %zu
Adding observer for enabling device %@
Adding observer for auto unlock attempt %@
Adding observer for auto unlock attempt without notifying watch %@
Adding observer for auto unlock attempt for Siri %@
Cancel Auto Unlock: This process does not have permission to perform this action
Request relock Auto Unlock: This process does not have permission to perform this action
Began: Calling client proxy %@
Completed: Calling client proxy %@
Client (%@-%d) does not have unlock manager entitlement = %@
Client bundle ID: %@
%s transferIdentifier: %@
SDAirDropListener didReceiveError %@
SDAirDropReceiveManager: Received event %@ for transfer %@
SDNetworkOperationCallBack (event = %@, recordID = %@, progress = %f)
SDNetworkOperationCallBack (event = %@, recordID = %@ , error = %@)
SDNetworkOperationDelegate UNHANDLED EVENT %@ [%d] %@
Updating enable state in dynamic store: %@
Updating global dynamic store (key: %@, value: %@)
Updating enabled dynamic store (key: %@, value: %@)
Failed to set global enabled state %d
Enabled dictionary exists %@
Updating in progress state in dynamic store: %@
Failed to set in progress state %d
Last machine wake date %@
IDS server bag contains keys (timeout key: %@, server timeout: %@, timeout percentage %@)
Using server timeout (random number: %ld)
Using default timeout (random number: %ld)
Using default value for timeout (default value: %ld, timeout key: %@, server timeout: %@, timeout percentage %@)
UTI %@ for modelIdentifier %@
Description %@
Watch Size %@
Series %@
Pairing has armed: %@
Beginning registration for deviceID: %@
Unlock has armed: %@
Unlock did not arm %@ current state is %@
createURL: CFURLSetResourcePropertyForKey %@
copyImageData: CGImageDestinationFinalize failed
copyImageData: CGImageDestinationCreateWithData returned NULL
createCGImageWithDataInternal: CGImageSourceCreateImageAtIndex (requireJPEG2000) returned NULL
createCGImageWithDataInternal: CGImageSourceGetType image format invalid
createCGImageWithDataInternal: CGImageSourceCreateImageAtIndex returned NULL
createCGImageWithDataInternal: CGImageSourceGetCount returned zero
createCGImageWithDataInternal: CGImageSourceCreateWithData returned NULL
Proxy available for unlock
Sending SDAutoUnlockMessageTypeProxyTrigger
monogramImagesForMultipleContacts called with nil contact, will use fallback.
SDNetworkResolver: bonjourCallBack returned %d
Attempted to resolve a server with unknown protocol
Attempted to resolve a server with no URL
SDNetworkOperation: resume HTTPServerConnection is invalid
SDNetworkOperation: resume HTTPServerConnection is NULL
SDXPCSession:  Starting xpc session....
SDServerBrowser: AirDrop transfer requested notification received
Delayed Bonjour browsing requested
incrementTransfersInitiated: No AirDrop browsers are running
incrementTransfersCompleted: No AirDrop browsers are running
Unrecognized browser mode %d
Failed to get airdrop available applications for opening %@
Failed to get available applications for opening %@
Generic handler found available applications %@
Enqueuing resource open operation for %@, with URL: %@
Resource open operation completed for %@
%s %@ to %@
%s %@ (%@)
SDConnectionManager:  XPC connection interrupted
SDConnectionManager:  XPC connection invalidated
Failed to create commpanion service, nil reply
Failed to create commpanion service, nil client proxy
Failed to create commpanion service, nil identifier
Streams are being requested from service = %@
SDAirDropCompressor: CFWriteStreamWrite returned %ld
SDAirDropCompressor: CFReadStreamRead returned %ld
SDAirDropCompressor: CFReadStreamOpen error = %@
SDAirDropCompressor: CFWriteStreamOpen error = %@
Turning compression back on since it took %f seconds to send a block
Not keeping up with network so turning compression off. Compressed send time: %f, uncompressed send time: %f
Turning compression back on. Compressed send time: %f, uncompressed send time: %f
Compression ratio is %f, so turning compression off, at least until the next file
SDAirDropCompressor: executeReadWithAdaptiveCompression error = %@
SDAirDropCompressor: executeWriteWithAdaptiveCompression error = %@
### Receiving credentials via AirDrop not supported on current platform
Local Unique ID:%@
Touch Bar:%@
DSID: %@
Reloading local unique ID: %@
AKS manager adding observers
AKS received Apple Account sign in
AKS received Apple Account sign out
Current console user changed (uid: %d, pid: %d)
AKS session missing keys (device: %@, syncing %@, attestation: %@, local exists %@, local LTK: %{private}@, remote exists %@, remote LTK: %{private}@)
AKS session missing keys (device: %@, local exists %@, local LTK: %{private}@, remote exists %@, remote LTK: %{private}@)
Escrow secret (exists: %@, device ID: %@)
Escrow secret %{private}@
Missing escrow
AKS session missing keys (device: %@, syncing %@, local exists %@, local LTK: %{private}@, remote exists %@, remote LTK: %{private}@)
Escrow secret for authorization (exists: %@, device ID: %@)
Missing escrow for authorization
Missing out variables (message: %p, authTag: %p)
Encryption error %ld
Failed to create random bytes %ld
Session key is missing (device ID: %@
Decrypting with cached device IDs
Decrypting without cached device IDs
Attempting to decrypt message with sorted device IDs %@
Decrypted message (deviceID: %@, length: %ld)
Error decryption failure (device ID: %@, error %ld)
Devices with session keys: %@
Failed to find key with cached devices, trying without cache
No IDS devices for bluetooth ID: %@
Adding existing LTK to new syncing view
Updating version for local LTK
Loaded local LTK: (%@), %{private}@
Unable to load LTK (local device ID: %@)
Local LTK Exists
Generating local LTK
Saved Local LTK (device ID: %@, saved: %@ attested: %@)
New local LTK, clearing remote LTKs and disabling Auto Unlock for all keys
Unable to generate LTK (local device ID: %@, keybag state: %d, setup user: %@)
Checking Local LTKs
Both LTKs missing, generating new LTK
Modern LTK is missing: Storing legacy LTK
Modern LTK is missing: Legacy LTK is invalid, regenerating
Legacy LTK is missing: Storing modern LTK
Legacy LTK is missing: Modern LTK is invalid, regenerating
LTKs match (valid: %@)
LTK Mismatch: Legacy LTK is valid, overwriting modern LTK
LTK Mismatch: Modern LTK is valid, overwriting legacy LTK
LTK Mismatch: Modern LTK is invalid, regenerating
Saved Local LTK after validation check (device ID: %@, saved: %@)
Missing local device ID to check local LTK
Device locked, not checking local LTK
Updating local ltk for sign out
Hash exists but key missing
Keychain devices: %@
Device not in keychain, removing signed key: %@
Trimmed Keychain devices: %@
Updated remote LTKs: %@
Remote LTK data: %{private}@
Not updating remote LTKs because device not first unlocked
Remote LTK needs resigning for pairing for hash
Signing remote LTK (device: %@ LTK: %@, class: %d)
Missing signing info (remoteLTK exists %@, remoteLTK %{private}@, localLTK exists %@, localLTK %{private}@)
Query for attributtes status: %d
Asked to store remote LTK for %@
Overriding existing LTK
Unknown remote key class for device ID: %@
LTK hashes do not match {
device ID: %@, 
requestLTKHash: %@, 
legacyRemoteLTKHash: %@, 
modernRemoteLTKHash: %@
Remote LTK list is empty (remote ltks %@, list %@)
LTK's are mismatched between keychain views (device ID: %@)
Missing ltk for deviceID: %@
Keychain peers %@
LTK waiting to be received
LTK needs to be sent
Nothing queued to be sent, re-added LTK
Unable to find keychain peer (IDS device ID: %@)
Taking keybag assertion
Releasing keybag assertion
Restarting keybag assertion timer
Keybag assertion fired
Restarting waiting for unlock timer
Waiting for unlock timer fired
Invalidating waiting for unlock timer
AKS Manager received unknown type
Escrow secret exists %@
Remote device is iPhone
Disabling feature for device: %@
Disabling pairing for all keys %@
Removing all remote LTKs on sign out
Updating remote LTK for %@
Saved remote LTKs: %@
Error persisting remote LTKs: %@
Error serializing remote LTKs: %@
Creating Remote LTK file
Loaded remote LTKs: %@
Remote LTK Data: %{private}@
Error deserializing LTKs: %@
Error loading LTK file: %@
Reloading pairing records
Saved watch ID to pairing record: %@
Error persisting watch ID to pairing record: %@
Error serializing watch ID to pairing record: %@
Failed to delete legacy watch to companion id file (path: %@, error: %@)
Loaded watch ID to companion ID mapping: %@
Error deserializing watch ID to companion ID mapping: %@
Error loading watch ID to companion ID file: %@
Failed to delete legacy companion id file (path: %@, error: %@)
Loaded companion IDs: %@
Error deserializing companion IDs: %@
Error loading companion IDs file: %@
Error creating Sharing folder for compainon IDs: (path %@, error %@)
Error creating Auto Unlock folder: (path %@, error %@)
Failed to store keychain item (add status:%d, delete status:%d)
Updated keychain item
Added keychain item
Using new secret
Unable to get secret from info (has secret %@, escrow info %{private}@)
Migrating escrow secret
No secret
Received unexpected SecItem error = %d
Deleted escrow secret for device %@
Failed to delete escrow secret: %d
Deleted all escrow secrets
Failed to delete all escrow secrets: %d
Store LTK (ltkInfo exists: %@, ltkInfo: %{private}@, deviceID: %@ attributes: %@, update: %{private}@, add: %{private}@)
Store attested LTK (ltkInfo exists: %@, ltkInfo: %{private}@, deviceID: %@ attributes: %@, update: %{private}@, add: %{private}@)
Failed to delete remote LTK (status: %d, query: %@)
Deleted local attested LTK
Failed to delete local attested LTK: %d
Updating session key (device id: %@)
Cached session keys for devices %@
Device ID missing for session key
Storing Session Key (deviceID: %@ attributes: %{private}@, update: %{private}@, add: %{private}@)
Deleting session key (device ID: %@)
Failed to delete ranging key: %d
Deleting all ranging keys
Deleted all ranging keys
Failed to delete all ranging keys: %d
Query status: %d
Coalescing node %@: %@
No identifier found for node %@
coalescedNodesForNewAvailableNodes: Device ID is not available for %@
Coalesced node %@ not handled
Coalesced node %@ represents nodes %@
Rapport activation failed %@
Request failed %@
Request timed out - no request found for requestIdentifier %@
%@: Encryption key request - Already have request for key %@. Replacing completion block
%@: Preventing encryption key request - Auto Unlock in progress
Requesting Encryption key via Rapport from "%@" %@ with message GUID: %@ and timeout: %d
Sending encryption key request via Rapport %@
Encryption key request %@ with xid %@ via Rapport (%s) failed with error %@
failed to activate link client for destination device: %@ (%@)
Cannot send Handoff encryption key request %@ via Rapport as we found no devices in %@
Sending encryption key request to single of multiple possible destinations.
Encryption key: No device ID generated for device %@ (Devices: %@)
Encryption key: No device found for identifier %@ (Devices: %@)
Requesting Encryption key via IDS from "%@" %@ with message GUID: %@ and timeout: %f
Sending encryption key request via IDS %@
Responding to Handoff encryption key request from "%@" via IDS
No device ID generated for device %@ (Devices: %@) for requestIdentifier %@
%@ %@ %@ %d
Found activity payload in cache for %@ from %@ of size %d
Requesting Handoff payload via Rapport for %@ with message GUID: %@ and timeout: %d
Sending payload request via Rapport %@
Handoff payload request %@ with xid %@ via Rapport (%s) failed with error %@
Cannot send Handoff payload request %@ via Rapport as we found no devices in %@
Sending handoff payload request via IDS to single of multiple possible destinations.
No device ID generated for device %@ (Devices: %@)
No device found for identifier %@ (Devices: %@)
Requesting Handoff payload via IDS for %@ with message GUID: %@ and timeout: %d
Sending payload request via IDS %@ to %@
Ignoring request from %@ via %@ for key with requestIdentifier %@ as we replied only %@ ago
Received Handoff encryption key request from "%@" via Rapport with requestIdentifier %@, xid %@
Responding to Handoff encryption key request from "%@" via Rapport
Received Handoff encryption key request from "%@" via IDS with requestIdentifier %@
Received a new Handoff encryption key from "%@" via Rapport (%s) with requestIdentifier %@, xid %@
Received a new Handoff encryption key from "%@" via IDS with requestIdentifier %@
deviceIdentifier %@ does not match %@
Attempting to use unrequested encryption key with requestIdentifier %@ from %@
Discarding unrequested encryption key as it is missing the requestIdentifier %@ or device %@
Received Handoff payload request from "%@" via Rapport with requestIdentifier %@, xid %@
Responding to Handoff payload request from "%@" via Rapport
Sending payload reply %@
Payload reply record %@
No IDS device found for identifier %@ (Devices: %@)
Received handoff payload request via %@ from "%@" (%@) with requestIdentifier %@ command=%@ for advertisementPayload %@
Ready to respond to handoff request via %@ from "%@" (%@) with requestIdentifier %@ for advertisementPayload %@, command: %@. RTT:%@
Responding to request via %@ from %@ with requestIdentifier %@ for advertisementPayload %@ with an empty payload
Responding to request via %@ from %@ with requestIdentifier %@ for advertisementPayload %@ with payload of size %d
Responding to Handoff payload request from "%@" via IDS
Received Handoff payload reply from "%@" via Rapport (%s) with requestIdentifier %@, xid %@
Received Handoff payload reply from "%@" via IDS with requestIdentifier %@
Received requested Handoff payload via %@ from "%@" (%@) for %@ with activity payload of size %ld for requestIdentifier %@ (%@). RTT:%@
Activity payload received via %@ for requestIdentifier %@ not/no longer wanted from %@
Incoming unhandled protobuf, should never have been called!! protobuf:%@ context:%@
Incoming unhandled data, should never have been called!! context:%@
Incoming unhandled message, should never have been called!! message:%@
%@ %@ (%@)
Could not decode protobuf data (%@)
Could not encode protobuf data from %@ (%@)
Not replacing current key %@ with received key %@
%s creating client: %@
Got payload to send of size %d with activityIdentifier:%@ for advertisementPayload:%@
Not sending %@ to device as we could not get deviceID: %@
Not sending %@ to device as it has no nsuuid/BTUUID: %@
Sending Handoff %@advertisement
to %@, with payload of size %ld
from %@, is final:%@, %@
SDNetworkEjecter: stop
stringFromXPCObject result is not a string
arrayFromXPCObject result is not an array
numberFromXPCObject result is not a number or boolean
SFBrowserCallBack (<%p>{kind = %@}, node = %p, error = %d)
%@ is not entitled to do AirDrop discovery
SFOperationCallBack (<%p>{kind = %@}, event = %@, results = %p)
%@ is not entitled to get the AirDrop discoverable mode
kSharingBrowserCreate node is NULL
kSharingBrowserCreate kind is NULL
openNode returned %d
closeNode returned %d
addNode returned %d
removeNode returned %d
handleBrowserMessage browser is NULL
handleBrowserMessage functionName is NULL
kSharingOperationCreate operation is NULL
kSharingOperationCreate kind is NULL
kSharingOperationResume imageData is invalid
%@ is not entitled to set the AirDrop discoverable mode
kSharingOperationSetProperty name is NULL
handleOperationMessage operation is NULL
handleOperationMessage functionName is NULL
XPC_ERROR_CONNECTION_INVALID <%p>
Lost connection to client <%p>
XPC_ERROR_TERMINATION_IMMINENT <%p>
handleNewConnection unknown XPC error <%p>
handleNewConnection unknown object
handleNewConnection unknown XPC type
XPC_ERROR_TERMINATION_IMMINENT
Unknown XPC error
Unknown XPC type
Device Information: %@
SharingServices using high priority queue
Bonjour browser failed to find awdl0 interface
SDBonjourBrowser: DNSServiceSetDispatchQueue returned %d
Bonjour discovery started
SDBonjourBrowser: DNSServiceBrowse returned %d
SDBonjourBrowser: DNSServiceCreateConnection returned %d
SDBonjourBrowser: start requested
Bonjour discovery stopped
SDBonjourBrowser: invalidate requested
Bonjour discovered %@ PTR over %@ in %d ms
SDBonjourBrowser: DNSServiceQueryRecord returned %d
SDBonjourBrowser: CFStringGetCString failed to get fullName
SDBonjourBrowser: _SDServiceInstanceName returned nil
Bonjour removed %@
Discovered %@ identity of %@ accountID %{private}@ model %{private}@ in %d ms
Failed to update RPIdentity because emailOrPhone is empty
Failed to update RPIdentity because there are no contacts for %{private}@
Skipped RPIdentity update because contact %{private}@ is blocked
Didn't update RPIdentity because deviceIRKData is missing for %{private}@
Didn't update RPIdentity because edPKData is missing for %{private}@
Didn't update RPIdentity because idsDeviceID is missing for %{private}@
Failed to update RPIdentity because contactID is nil for %{private}@
Updating RPIdentity for %{private}@
Failed to update RPIdentity for %@ with error %@
Updated RPIdentity for %@
Identity discovery denied for %@
Discovery validation failed because SecTrustRef is NULL
%@: UNHANDLED EVENT %@ [%d] %@
Bonjour discovered %@ TXT record in %d ms
SDBonjourBrowse:  failed to copy identity for %@ with error %@
AWDL link state changed
SDBonjourBrowser: handleBrowseCallBack returned %d
SDBonjourBrowser: handleQueryCallBack called with unexpected type %d
SDBonjourBrowser: handleQueryCallBack returned %d
Could not create step data
Could not create AKS session
Device is locked
Could not parse registration request
Successfully registered local device
Could not confirm session
Registration step missing step data
Received SDAutoUnlockMessageTypeRegistrationStep
AirDrop destination set to %@
SDAirDropFileZipper: BOMBomInsertFSObject("%s") failed
SDAirDropFileZipper: BOMFSObjectNewFromPath("%s") failed
SDAirDropFileZipper: Placeholder filename %@ already exists at destination: %@. Creating as new filename: %@
SDAirDropFileZipper: createPlaceholderFiles conflict not handled
SDAirDropFileZipper: CFURLCopyLastPathComponent returned NULL
SDAirDropFileZipper: createPlaceholder %@
SDAirDropFileZipper: createPlaceholderFiles originalName "%s" contains illegal characters
SDAirDropFileZipper: createPlaceholderFiles originalName[%d] is nil
SDAirDropFileZipper: createPlaceholderFiles file count is zero
SDAirDropFileZipper: createPlaceholderFiles placeholderFiles is NULL
SDAirDropFileZipper: moveObjectAtURL2 %@
SDAirDropFileZipper: removeObjectAtURL %@
SDAirDropFileZipper: moveObjectAtURL %@
SDAirDropFileZipper: BOMCopierCopyWithOptions returned %d
SDAirDropFileZipper: createPlaceholderFiles failed
SDAirDropFileZipper: %lu files saved: %@
SDAirDropFileZipper: No files were found
SDAirDropFileZipper: startBomCopy %s
SDAirDropFileZipper: start adding files to BOM
SDAirDropFileZipper: done adding files to BOM
SDAirDropZipper: delegate is nil, initBomWithFiles failed
SDAirDropFileZipper: copyCommonParent(%@) returned NULL
SDAirDropFileZipper: BOMBomInsertFSObject failed
SDAirDropFileZipper: BOMFSObjectNewFromPath failed
SDAirDropFileZipper: BOMBomNew returned NULL
SDAirDropFileZipper: _bomPath is nil
SDAirDropFileZipper: CFURLCopyAbsoluteURL returned NULL
SDAirDropFileZipper: CFURLCreateWithFileSystemPathRelativeToBase returned NULL
SDAirDropFileZipper: copyUserFolder returned NULL
Zip: AirDrop is using CPIO archiving
Zip: AirDrop is using PKZip %s
Zip: AirDrop is using CPIO archiving with adaptive compression
Zip: AirDrop is using CPIO archiving with gzip compression
SDAirDropFileZipper: CFWriteStreamOpen failed
SDAirDropFileZipper: initBomWithFiles failed
Unzip: AirDrop is using PKZip compression
Unzip: AirDrop is using CPIO archiving with adaptive compression
Unzip: AirDrop is using CPIO archiving with auto compression detection
SDAirDropFileZipper: CFReadStreamOpen failed
SDAirDropFileZipper: _SDUniqueTemporaryFolder failed %@
SDAirDropFileZipper: bomCopierFileErrorPtr - %s, errno = %d (%s)
SDAirDropFileZipper: bomCopierFatalErrorPtr - %s
SDAirDropFileZipper: bomCopierFatalFileErrorPtr - %s (%d)
SDAirDropFileZipper: bomCopierFileConflictErrorPtr - %s
Failed to initialize key from data. Incorrect size %d
Generated new advertising encryption key %@, and saved to keychain
%@: Loaded advertising encryption key and bumped last used counter from %d by %d, then persisted key to keychain %@
Did not load advertising encryption key from keychain as the bumped last used counter exceeds max value
Failed to deserialize encryption key from keychain (%@)
Bumped advertising encryption key counter value from %ld to %ld
Generating new advertising encryption key as the bumped value of the old one exceeds max value
%@: Encryption key invalid %@
%@: Persisted last used counter and key to keychain %@
Saved decryption key %@ for %@ to keychain
Failed to save decryption key %@ for %@ to keychain
Loaded decryption key %@ for %@ from keychain
Converting key to wrapped key
Not wrapping key as wrapping key is unavailable
Failed to serialize encryption key from %@ (%@)
Failed to deserialize key (%@)
Failed to unwrap key cause key data is missing
Could not unwrap key cause wrapping key is not available
Converting wrapped key to key
Successfully cleared in-memory key caches
Successfully deleted encryption key:%@, decryption keys:%@
SecItemCopyMatching wrappingKeyQuery failed with error %d
SecItemCopyMatching encryptionKeyQuery failed with error %d
SecItemCopyMatching decryptionKeysQuery failed with error %d
Loaded wrapping key from keychain
No wrapping key found in keychain
SecItemCopyMatching baseDict failed with error %d
Failed to update keychain item with error %d for query %@ attributesToUpdate %@
Failed to delete keychain item with error %d for query %@
Failed to add keychain item with error %d for attributes %@
%@ Deallocating Stream Handler
Creating network streams
%@ Closing input stream
%@ Closing output stream
Network streams closed
Stream Stats: total bytes transferred = %ld, duration = %g%@
Starting open timer with timeout = %d
Open timer fired with input stream status = %d, output stream status = %d, closing streams
Streams invalidating open timer
Applying tls settings
Could not get cert chain to encrypt streams (intermediate cert not available)
Could not get identity to encrypt streams (identity not available)
Accounts match
Accounts do not match
Accounts do not match, my account identifier (common name) is not available
SFAppleIDCommonNameForCertificate failed with error %d
Client cert chain not trusted. SFAppleIDVerifyCertificateChainSync failed with err=%d
Cert chain from remote trust does is empty
Could not get trust from open stream
Network stream received error = %@
setsockopt failed: %s
Stream returned invalid socket %d
Network streams opened
Time to open streams = %f
Failed to evaluate certificate
No space available on network output stream, queuing stream data
Delegate does not respond to streamHandler:didReceiveStreamData:
Could not create stream data from read buffer
Total read from network = %ld
Read zero bytes from the network stream
Client buffer full, waiting to read from network
Total written to network = %ld
Error writing to network output stream, writeLength = %ld
No output stream data to write to network
Method not supported
No space available on network output stream, queuing message
Could not create message payload
Unexpected stream handler input state
Read chunk = %ld, total = %ld%@
Read more bytes than the incoming message header declared
Read error = %s
Zero bytes read from input stream
Expected message length = %d
Finished writing message of size = %lu
Wrote too many bytes (byteIndex = %d, message length = %d)
Failed to write message = %s
Zero bytes written for message
No messages to write in queue
No handler for message write
Incorrect version number in header
Sharing/SDNotificationManager/didReceiveNotificationResponse/homepod
Sharing/SDNotificationManager/didReceiveNotificationResponse/tv
Sharing/SDNotificationManager/didReceiveNotificationResponse/watch
LTKs exists
Overriding existing long term keys (local %@, remote %@)
Deleted LTKs for %@
KeybagUUIDs match
KeybagUUIDs have changed
Resaving LTKs with backup exclusion
Saved LTKs %@
Set backup key
Error setting backup exclusion key: %@
Error persisting LTKs: %@
Error serializing LTKs: %@
Save missing info (local %@, remote %@, pairing store path %@)
Loaded LTKs
 local %@
remote %@
keybag UUID %@)
Failed to delete LTKs %@
LTKs already deleted
Deleted LTKs
Couldn't delete LTKs, no storage path: %@
Error creating unlock storage folder: (pairing path %@, error %@)
Unable to find LTK file (error: %@)
Migrating old keys to %@
Failed to store escrow data (add status:%d, delete status:%d)
Updated escrow data
Added escrow data
Escrow data exist:%@, pairing id:%@
Escrow data hasn't been migrated
Failed to delete escrow record: %d
Legacy escrow data exist:%@
Migrating escrow data
Migrating escrow data in new format failed
Failed to delete escrow record = %d
IDS Devices: %@
Clearing Auto Unlock device cache
Skipping device in blacklist (device ID: %@)
Updating last seen date
Watch added to list -- updating watchCurrentlyInList and lastSeenWatchDate
Updating existed in list
Last watch removed from list -- updating watchCurrentlyInList and lastSeenWatchDate
Activity service has a Watch updating last seen date
Skipping enabled device in blacklist (device ID: %@)
Using cached device: %@
IDS device not cloud paired %@
Updated approve bluetooth IDs: %@
Device version: %d
IDSDevice not found for deviceID: %@
Remote MacOS major version: %d and minor version: %d
Remote iOS major version: %d and minor version: %d
%s: called with deviceID:%@ whose deviceClass is %d
Proxy device not cloud paired
Bluetooth ID cache %@
Updated bluetooth ID cache
IDS registration status: %d
Updated cloud pairing retry dates %@
Still backing off cloud pair retry (device ID: %@, use short: %@, short date: %@, general date: %@)
Nearby devices changed %@
Received protobuf (type = %d, size = %u, identifier = %@)
Received pairing request (date: %@, from storage: %@)
Received registration request (date: %@, from storage: %@)
Received key originating registration request (date: %@, from storage: %@)
client:%@, sessionID:%@, clients:%@
Incoming message from unknown device
Received IDS ACK (identifier: %@, mapping: %@)
Calling client for ACK (client: %@, session ID: %@, identifier: %@)
Resetting apple watch existed state
Loaded lastSeenWatchDate %@
Loaded watchExistedInUnlockList %@
Loaded watchCurrentlyInList %@
Pairing request arrived (creation date: %@ server date: %@) from device: %@
Pairing request arrived outside window (creation date: %@ server date: %@)
Sharing/SDAppleIDAgent/didReceiveToken
Sharing/SDAppleIDAgent/didReceivePublicToken
Sharing/SDAppleIDAgent/didReceiveIncomingMessage
%s %@
Creating ranging manager
Created ranging manager %@
%s request: %@ identifier: %@
%s removing  non current request: %@ identifier: %@ waitingForNetworkToDisable: %d
%s request(%@) not found !! identifier: %@
%s: %d Already processing request: %@ identifier: %@
Cannot process invalidated request
%s no queueAvailableHandler. Invalidating current request %@
%s current Request: %@ identifier: %@
%s Starting ranging (manager: %@, peers: %@)
%s startRangingFromPeers (manager: %@, peers: %@)
%s stopRangingFromPeers (manager: %@, peers: %@)
%s Starting AWDL request: %@ identifier: %@ info: %@
%s AWDL went down. Invalidating current request: %@ identifier: %@
%s Restarting AWDL bring up timer
%s Invalidating AWDL bring up timer
%s AWDL bring up timer fired
%s Disabling ranging and awdl for timer
Failed to get change history with error %@
Sending request (honeybee id: %@, devices: %@)
Sysdiagnose collected (path: %@, error: %@)
Uploading to honeybee
Error collecting sysdiagnose %@
Sending IDS message (identifier: %@, destinations: %@)
Error sending IDS message (identifier: %@)
No destination for IDS devices: %@
IDS send complete (success: %@, identifier: %@, error: %@)
IDS message from unknown device
Received message (device: %@, type: %d, message: %@)
setFileIncomplete: kCFURLCreationDateKey %@
setFileIncomplete: _kCFURLFinderInfoKey %@
setFileIncomplete: finderInfoData is NULL
setFileIncomplete: CFURLCopyResourcePropertyForKey %@
Exception caught trying to retrieve primary iCloud account : %@
copyLocalizedFileName %@
Unique temporary folder: %@
absoluteURL was nil for %@
createDirectoryAtURL:%@ returned nil error
NSItemReplacementDirectory appropriateForURL:%@ returned nil error
Failed to create Sharing folder
Missing Library folder
copyUserFolder: confstr(%d) failed with error %d (%s)
This is not a valid AFP volume (FSCTL returned %d errno = %d)
_SDVolumeNameForMountPoint: NSURLVolumeNameKey %@
SecTaskCreateWithAuditToken returned NULL for %@
Created new Stream ID (%s)
awdlInterfaceIndex: getifaddrs failed (%d)
Device Capabilities (Auto Unlock:%@, Handoff:%@, Instant Hotspot:%@, AirDrop:%@, Remote Disc:%@)
SDServiceManager: Accept Reply = %@
SDDomainBrowser: didNotSearch %@
No default paired for device type
Failed to create destination (deviceID: %@, IDS device: %@)
Sending %@, identifier: %@
Error sending %@, error:%@
No destinations for device ID: %@
success = %@, identifier = %@, time = %.2f, error = %@
Missing AWDL Info
Using AWDL info %@
Encryption start
Using encryption%{private}@
Error encrypting message (data: %@, authTag: %@, nonce: %@)
Session missing device ID for encrypted send
Using BLE encryption
Ranging key exists %@
Using ranging key (size: %d, realKey %@)
Ranging key data: %{private}@
System will sleep, stopping AirDrop connection.
WiFi is disabled, stopping AirDrop connection.
SDAirDropConnection event: %@
SDAirDropConnection %@
SDAirDropConnection: didReceiveError %@
SDAirDropConnection: didReceiveError suppressed
SDAirDropConnection: unexpected class %@ for file info key %@
SDAirDropConnection: invalid value for %@: %@
SDAirDropConnection: Files array has invalid items
SDAirDropConnection: storeArrayValue value for key %@ is invalid
SDAirDropConnection: unhandled key %@ for storeArrayValue
SDAirDropConnection: CFURLCreateStringByReplacingPercentEscapes returned NULL
SDAirDropConnection: storeRequestValue value is not a string
SDAirDropConnection: _CFHTTPServerRequestCopyProperty returned NULL
SDAirDropConnection: storeDataValue value for key %@ is invalid
SDAirDropConnection: storeStringValue value for key %@ is invalid
SDAirDropConnection: storeNumberValue value for key %@ is invalid
SDAirDropConnection: storeBooleanValue value for key %@ is invalid
SDAirDropConnection: createCGImageWithJPEG2000Data returned NULL
SDAirDropConnection: storeIconValue fileIconData is invalid
SDAirDropConnection: CFPropertyListCreateData failed %@
Responding to Discover request from %s person
Responding to Discover request with code %ld
Sending Ask response with code %@
Power assertion released (%d)
Sending Upload response with code %@
SDAirDropConnection: icon hash is available for %@
SDAirDropConnection: icon hashes don't match
SDAirDropConnection: _SDHashStringFromData returned NULL
SDAirDropConnection: createPersonForAskRequest senderIcon is NULL
SDAirDropConnection,createPersonForAskRequest: computerName is invalid
SDAirDropConnection,createPersonForAskRequest: validAirDropID(%@) returned NO
SDAirDropConnection: SDAppleIDAuthenticateCertificateChainSync failed %@
SDAirDropConnection,senderIsTrusted: userIdentity is NULL
SDAirDropConnection: no certificate chain for %@
SDAirDropConnection: myAccountIdentifier is an empty string
SDAirDropConnection: SFAppleIDCommonNameForCertificate failed with error %d
SDAirDropConnection: client cert chain not trusted. SFAppleIDVerifyCertificateChainSync failed with err=%d
SDAirDropConnection: copyCertificateChainFromTrust returned %s array
Parsing Discover request
SDAirDropConnection: CFPropertyListCreateWithData returned invalid dictionary
SDAirDropConnection: CFPropertyListCreateWithData failed %@
Sender is me, ignore self block.
Parsing Ask request
SDAirDropConnection,allowAskRequestFromPerson: appleID is NULL
SDAirDropConnection,allowAskRequestFromPerson: person is NULL
SDAirDropConnection: Prevented auto-accept because transfer contains All Photos Data Photos bundles.
AirDrop failed to validate Apple ID certificate of sender
SDAirDropConnection,handleAskRequest: no files or items
SDAirDropConnection,handleAskRequest: senderID is NULL
SDAirDropConnection: CFReadStreamRead returned %ld
SDAirDropConnection: kCFStreamEventEndEncountered fired again
SDAirDropConnection: kCFStreamEventUnknown(%d)
SDAirDropConnection: CFReadStreamOpen failed
SDAirDropConnection: _CFHTTPServerRequestCopyBodyStream returned NULL
SDAirDropConnection: startReceivingFile destination is nil
SDAirDropConnection: thereIsEnoughFreeSpace failed %@
makeDestinationDirectory: createDirectoryAtURL failed %@
Discover already in progress
Upload already in progress
Bad Upload request
Ask already in progress
Received Discover request
Received Ask request
Received Upload request
Received Upload request for %@
SDAirDropConnection: kSFOperationErrorNotEnoughSpace
SDAirDropConnection: didReceiveRequest askRequest NULL userAccepted false
SDAirDropConnection: didReceiveRequest unknown operation
SDAirDropConnection: didReceiveRequest operation is NULL
SDAirDropConnection: didReceiveRequest unknown method
SDAirDropConnection: didReceiveRequest method is NULL
SDAirDropConnection: didSendResponse operation is unknown
SDAirDropConnection: didSendResponse operation is NULL
SDAirDropConnection: didSendResponse method is unknown
SDAirDropConnection: didSendResponse method is NULL
Connection from %@ closed but transfer is finished
Connection from %@ closed
Connection closed (cancel suppressed)
Power assertion retained (%d)
Invalidated AirDrop connection %p
Starting%@%@%@ scanning with duplicates:%@ for peers [%@]
%@ enabled: %@, state: %s, shouldStart: %@, scanForCopyPaste: %@, scanForHandoff: %@
nearbyServiceDevicesChanged: %@
Received a new advertisement %@
Ignoring new advertisement as it is for default pair only which is not me
Failed to update with raw advertisementData %@ from %@ (%@)
Saw IDS device %@ with mismatched version %d, expected %d
Scanning client arrived
Scanning client went away
Dumping state
Starting for user %d on wake
Starting for user %d on login
Sharing/SDActivityScanner/continuityDidUpdateState
Sharing/SDActivityScanner/continuityDidStartScanningForType
IDSContinuity didStartScanningForType: %s
Sharing/SDActivityScanner/continuityDidStopScanningForType
IDSContinuity didStopScanningForType: %s
Sharing/SDActivityScanner/continuityDidFailToStartScanningForType
IDSContinuity didFailToStartScanningForType: %s withError: (%@)
Sharing/SDActivityScanner/continuityDidDiscoverType
Saw device %@ but cannot find mathing IDSDevice
Lost IDS device %@
lostAllDevices
requested scanning for %@
Requesting payload from %@ for %@
SDConnectedBrowser: _CFURLGetVolumePropertyFlags returned %@
SDConnectedBrowser: getResourceValue %@
SDXPCHelperConnection deallocated without -invalidate call
SDXPCHelperConnection makeActivatedConnection invalidationHandler
monogramImageDataForContact called with nil contact, will use fallback.
SDXPCHelperConnection %s remoteObjectProxyWithErrorHandler: %@
monogramImageDataForContact
Cache miss for %@ -> creating cache for opposite color too
groupMonogramImageDataForContacts
urlToCGImgDataForCallHandoffIconWithAppIconImageData
monogramImagesForMultipleContactsSync failed to return images
monogramImagesForMultipleContacts
CGImgDataForUIActivityTitle
CGImgForNameLabelWithString called with nil string.
CGImgForNameLabelWithStringDaemon
Cache miss for text %@ -> creating cache for opposite color too
%llu
CGImgForNameLabelWithString
Cache miss for label %@ -> creating cache for opposite color too
CGImgDataForActivityMoreListEntryForActivityTitle
CGImgForActionPlatterWithTitle
CGImgForNearbyBadgeWithCount
Need image data for %lu images, %lu are not in cache, return %lu image data.
Share sheet host app config not set on %@ as expected.
_latestHostConfig = nil
updateShareSheetHostConfiguration
Stopped net service browser
Client streams closed
Third party app client
Started net service browser
Sending initial request
Error sending initial request = %@
Sending initial streams response (accepted = %@)
Error sending initial response = %@
Switched from messages to Streams
Creating file handle failed
Error getting streams = %@
No handler for stream request
Failed to set buffer size on socket
Could not create sock pair = %s
Requested fileHandle more than once.
Browser found net service = %@
No type in stream handler message
Unarchiving stream handler failed: %@
Received request to create streams
Could not create file handles
No service in request
Received response to create stream (accepted = %@)
Stream handler closed with error = %@
Received NSStreamEventHasBytesAvailable on a stream other than an input stream
Received NSStreamEventHasSpaceAvailable on a stream other than an output stream
Stream end encountered, closing streams
Client stream received error = %@
Client Streams Opened
Total written to client = %ld
Error writing to client output stream, writeLength = %ld
Queueing client write, no space available
Total read from client = %ld
Read zero bytes from the client stream
Network buffer is full, waiting to read from client
No stream data to write to network
Client has written data
Client has read data
Received screen lock unlocked notification
Not initiating setup retry (already retried: %@, always show: %@, lastSuccessfulDevice: %@)
Retry setup device ID cleared
Restarting retry setup device timer
Retry setup device timer fired
Invaliding setup device device timer
Suggestion Found Peers %@
Suggested device ID cleared
Restarting suggested device timer
Suggested device timer fired
Invaliding suggested device timer
Restarting suggestion service timer
Suggestion service timer fired
Invaliding suggestion service timer
Suggestion scanning for bluetooth IDs %@
Scanner started
No devices to scan for, not starting suggetion scanner
Already scanning for suggestions
Suggestion manager found peer: %@
Suggestion manager peer (device: %@, supports advertising unlocked: %@, unlocked on wrist: %@)
Not looking for peer, ignoring: %@
Invalidating suggestion scanner
Restarting suggestion scan timer
Suggestion scan timer fired
Error sending message to start advertising to %@
Received SDAutoUnlockMessageTypeStartAdvertising (new ranging required: %@, message: %@)
Skipping response advertisement because Mac OS version is too old
Should send request (device: %@ enabled: %@)
Suggestions still backing off (device %@, retry date %@)
Reached limit of suggestions (device %@, multiplier: %ld)
Next suggestion (device: %@, multiplier: %ld, seconds: %ld, retry date %@)
Setting feature suggested for device: %@
Retry version: %ld
clearMonitorCache
AirDrop not ready: wifi=%d, bluetooth=%d, hotspot=%d, carplay=%d, receivingEnabled=%d
Discoverable mode off: appleIDAccountState=%@ eduModeEnabled=%d
Reconciled discoverable mode: %@ (%@)
Discoverable mode changed from %@ to %@, posting notification
Apple ID account state: %@
SFAppleIDParseValidationRecordData failed with error %d (%ld ms)
SFAppleIDParseValidationRecordData timed out.
Verified validation record data (%ld ms)
Clear my Apple ID called
SecCertificateCopyCommonNames returned empty array
SecCertificateCopyCommonNames returned NULL
saveVerifiedAccount success %d %@
Could not fix Alt-DSID error = %@
No primary account, not fixing appleID
Apple Account signed in
Apple Account signed out
No normalized emails or phone numbers
No emails or phone numbers
No Apple ID certificate
addAdditionalInformationToMeCard: _myAppleID = nil
addAdditionalInformationToMeCard: accountForAppleID (%@) = nil
Enhanced meCard: fn=%@,ln=%@,pnums=[%@],emails=[%@]
Clear my icon and hash requested
Failed to find contact with contact identifier %@, error: %@
Failed to retrieve me-card due to %@
No me-card set
Adding additional information to me-card if needed
Reset meCard called with reason: %@
Added reason to prevent locale change exit (reason %@)
Pushed expiration date of reason to prevent locale change exit (reason %@)
Removed reason to prevent locale change exit (reason %@)
PWS availability: %ud
Generating SSID hashes
sysctl returned %d
SecIdentityCopyCertificate returned %d
altDSID is nil
altDSID is equal to primary email
altDSID is equal to Apple ID account
AirDrop %@ transaction %@ (%d)
Apple ID account info changed.
Bluetooth address changed
Bluetooth is now %s
Bluetooth power is now %s
SDStatusMonitor: DNSServiceSetDispatchQueue returned %d
SDStatusMonitor: DNSServiceRegister returned %d
Contact store did change notification received
MeCard changed notification received
SDStatusMonitor: Unknown keys changed (%@)
SCDynamicStoreCreateRunLoopSource failed: %s
SCDynamicStoreSetNotificationKeys failed: %s
SCDynamicStoreCreate failed: %s
Sharingd Exiting...
SDStatusMonitor: handleNameMonitorCallBack returned %d
Paired watch wrist state changed: %@
Paired watch wrist lock changed: %d
Paired watch passcode strength changed: long passcode %@
Updating discoverable mode for personal hotspot change
Device can sleep
Device will sleep
Device has powered on
Device will not sleep
SDStatusMonitor: IORegisterForSystemPower failed
Screen: %@
Watch wrist state changed: %@
### Failed to make ssid prefs?
SSID cache monitor successfully installed: %s
Wi-Fi power is now %s
Current language changed
currentLocalChanged
WiFi Preferences changed callback, purging ssid cache
Failed to get long term information (key = %@)
Devices unpaired
Started tracking daily metrics
Submitting daily metrics
Restarting long-term key timer
Long-term key timer fired, resetting state
Invalidating long-term key timer
Client enabling unlock
Preventing exit for enable
Failed to create unlock session (identifier = %@, has default paired device = %@)
Invalid parameters (passcode = %@, handler = %@)
Using updated LTK (forcing: %@)
Exchanging LTKs during setup
Exchanging LTKs using new service
Using existing LTK
Notifying client with error = %@
Stopped tracking daily metrics
lostModeEnabled = %@
Received SDUnlockStartLTKTransfer
Received start ltk with request outstanding
Failed to sign remote key
Long-Term key response is missing information (has remote key = %@, remote key = %{private}@)
Long-Term key failed on the other side
Incorrect request ID in response (has request ID = %@, response request ID = %@, local request ID  = %@)
Failed to sign remote key for enable
Long term key response is missing information for enable (has remote key = %@, remote key = %{private}@)
Error in class A LTK transfer = %d
Could not sign remote key
Enabling with keys
Error in session created response = %d
Could not setup escrow session
Failed to create session
Missing information for escrow session (has token = %@, token = %@, local long-term key = %@, remote long-term key = %@)
Final step failed
Bad signature error indicated bad LTKs on phone side, enabling with new keys
Creating escrow record failed = %@
Lost mode = %@; not unlocking.
Could not step for ephemeral key response
Could not create unlock session
Resetting (on wrist = %@, motion detected = %@, exchange request = %@)
Received request for session in progress
No session ID in request
Device already unlocked
Unlock pairing is disabled
UNLOCK SUCCEEDED
Resetting (position = %@, waiting on auth = %@, sesssion auth token = %@)
Device went off wrist waiting for auth token
Ignoring auth token, device unlocked
Stash: No key is exchange request = %@
Locking device
Failed to send device unlocked message: %@
Transferring long-term keys failed.
Failed to send class A long term key request: %@
Failed to send device enable request: %@
Failed to send request to create escrow key: %@
Failed to send state response with error = %@
Created new security manager (pairing id %@, store path %@, device name %@)
Unable to create security manager (pairing id %@, pairing store path %@, active device %{private}@)
Session manager adding observers
Device pairing failed, throwing away anything that was setup
Pairing did begin %d
Device entered config state %d
Disable pairing called on platform without Nano Registry
Pairing Disabled: %@
restartUnlockTimer
Session timer fired, resetting state
invalidateUnlockTimer
Failed to send device reset message
Failed to send disable message
Sending %@
Message Contents %@
Received %@
Submitting metrics
_btPipeStateChanged to %s
connected to BT peer %@
SDAirDropClassroomTransferManager: failed to get access to Downloads folder with error: %@
makeDestinationDirectoryWithIdentifier failed %@
SDAirDropClassroomTransferManager: createCGImageWithData returned NULL
SDAirDropClassroomTransferManager: replaceIconValue fileIconData is invalid
Update transfer %@ with state %d
Failed to update %@
Notifying %d clients that transfer %@ was accepted
Notifying %d clients that transfer %@ was declined
connection established %@
connection invalidated %@
Error sending initial request for registration: %@
Device has been registered (peer state is %@)
Error finalizing registration (%lu)
Failed to do final step in registration
Received SDAutoUnlockDeviceRegistrationStep without step data
Received SDAutoUnlockMessageTypeRegistrationResponse
Received SDAutoUnlockMessageTypeRegistrationFinalize
Wrote folder representation of asset bundle to: %@
Unable to delete asset bundle after transforming to folder. Error: %@
Unable to create folder representation from asset bundle. Error: %@
Bonjour resolved %@ over %@
Ignoring Bonjour resolve of %@ over %@
Resolved a Bonjour server with unknown protocol
Bonjour resolver failed to find awdl0 interface
Bonjour resolving %@ over %@
SDBonjourResolver: DNSServiceSetDispatchQueue returned %d
SDBonjourResolver: DNSServiceResolve returned %d
SDBonjourResolver: DNSServiceCreateConnection returned %d
Creating lock session (session ID = %@)
Watch info (model ID: %@, build: %@, os version: %@)
Stopping BLE connection
Asked to complete attempt if necessary
Completing waiting unlock attempt
Tearing down AWDL
Failed to send clean up AWDL message: %@
Lock session canceled (device ID: %@, session ID: %@)
Lock session canceled after success (device ID: %@, session ID: %@)
Canceling WiFi request: %@
Not Canceling WiFi request: nil
Handling cancel at end
Not cancelled
Clamshell changed
Display config changed
Attempt timed out for session
Automation: Used Proxy Device %@
Automation: Key Device Model %@
Automation: Proxy Device Model %@
Automation: Phone Bluetooth Discovery %0.2fs
Automation: Phone Connection Time %0.2fs
Automation: Watch Bluetooth Discovery %0.2fs
Automation: Watch Connection Wait Time %0.2fs
Automation: Watch Connection Time %0.2fs
Automation: Bluetooth Info Exchange %0.2fs
Automation: Bluetooth Key Exchange %0.2fs
Automation: Bluetooth Token Exchange %0.2fs
Automation: Bluetooth Unlock Confirmation %0.2fs
Automation: AWDL Bring Up %0.2fs
Automation: Peer Found %0.2fs
Automation: Ranging Results %0.2fs
Automation: Time Waiting For Display %0.2f
Automation: Time Waiting For Clamshell %0.2f
Automation: Wi-Fi Total %0.2fs
Automation: Bluetooth Bootstrap Total %0.2fs
Automation: Bootstrap + Wi-Fi Total + Confirmation %0.2fs
Automation: Bluetooth Overall Total %0.2fs
Automation: Idle time due to prewarming %0.2fs
Automation: Complete exchange %0.2fs
Automation: Key Device RSSI %d
Automation: Proxy Device RSSI %d
Automation: Within Range %@
Automation: Already Connected Bluetooth Devices %d
Automation: Time Since Last Wake %ld seconds
Automation: Last Sleep Type %@
Automation: Cancelled %@
Automation: Successful Session %@
Updating image data for non-auth prompt attempt
Image data updated (%@)
Image already cached: %@
Not updating icon, watch doesn't support icons
Chosen device updated: %@ (%@)
Unable to create token session, using escrow
Starting BLE connection %@
Found Device {
available: %@,
locked on wrist: %@
device:%@
Device connected %@
Peer not available %@
Timer fired
Timeout while waiting for a display or clamshell
Restarting confirmation timer
Confirmation timer fired
Invalidating confirmation timer
AWDL ranging results returned %@, domain: %@, error %d
Peer in range
Ranging timeout with no error code
Skipping ranging due to default phoneAutoUnlockSkipRanging
handlePeerInRange %@
Attempt was prewarmed and not told to complete, waiting for trigger to complete unlock.
handlePeerOutOfRange %@
AWDL up (%.2f)
AWDL ranging timeout is %ld
Auth lock session notifying delegate with error: %@
Automation: Success
Automation: Session Dismissed: %@
Received SDAutoUnlockAuthPromptResponse
Received SDUnlockSessionKeyExchangeRequest
Received SDUnlockSessionAuthToken
Received AWDL Info %@
Session supports confirmation ACK
Using new protocol
Deserializing AWDL info failed
Already received auth prompt response
Key exchange request: attempt cancelled
Found device is not available
Received fallback AKS session
Unexpected attempt type: %d
Watch locked on wrist from connection
handleSessionKeyExchangeRequest: %@
Auth token: attempt cancelled
Auth token: Already received auth token
peer discovery timeout is %ld
handleSessionAuthToken: %@
Received SDAutoUnlockSessionConfirmationACK
Skip ranging is %d
%s AWDL started request:%@ error:%d
Peer found (awdl up same time : %@)
Ranging started
Ranging completed
Current user: %@, clamshell closed: %@, display connected: %@ display off: %@
AKS Unlock succeeded
consumeAuthTokenIfReady: %@
Waiting for a display or clamshell change
Sending with useBTPipe %d
Error sending AWDL info %@
Not sending data, local device ID is NULL
Sending SDAutoUnlockAuthPromptRequest
Not sending data for auth prompt, local device ID is NULL
Sending image data (chosen: %@, data: %@, already cached: %@, cache disabled: %@ needs new image: %@)
Using max size %ld
Sending SDAutoUnlockAuthPromptImageData (message count: %u, size: %ld)
Error sending image data %@
Not sending image data (already sent %@, chosen: %@, data %@, already cached %@, needs new image: %@)
Sending SDUnlockSessionKeyExchangeResponse
Never connected, skipping confirmation
Already sending confirmation
Sending SDUnlockSessionConfirmation
Error sending confirmation
Waiting for confirmation ack
Failed to get remote object proxy for %@ (%@)
Activating %@
Activate already called
New connection from %@ accepted %s
Connection %@ invalidated
New connection established to %@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>Application-Group</key>
<string>com.apple.coreservices.appleidauthentication.keychainaccessgroup</string>
<key>BuildMachineOSBuild</key>
<string>20A241128</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleDisplayName</key>
<string>sharingd</string>
<key>CFBundleExecutable</key>
<string>sharingd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.sharingd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>sharingd</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1778.1</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>AppleTVSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1778.1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>19L5419a</string>
<key>DTPlatformName</key>
<string>appletvsimulator</string>
<key>DTPlatformVersion</key>
<string>15.4</string>
<key>DTSDKBuild</key>
<string>19L5419a</string>
<key>DTSDKName</key>
<string>appletvsimulator15.4.internal</string>
<key>DTXcode</key>
<string>1330</string>
<key>DTXcodeBuild</key>
<string>13E6049a</string>
<key>LSBackgroundOnly</key>
<true/>
<key>MinimumOSVersion</key>
<string>15.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>3</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>1957431478</string>
<key>application-identifier</key>
<string>com.apple.sharingd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.BTServer.allowRestrictedServices</key>
<true/>
<key>com.apple.BTServer.appleMfgDataAdvertising</key>
<true/>
<key>com.apple.BTServer.appleMfgDataScanner</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>carrier-settings</string>
<string>phone</string>
</array>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.MobileInternetSharing.allow</key>
<true/>
<key>com.apple.PairingManager.HomeKit</key>
<true/>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.SystemConfiguration.SCDynamicStore-write-access</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.radios.plist</string>
</array>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.accounts.appleidauthentication.defaultaccess</key>
<true/>
<key>com.apple.accounts.idms.fullaccess</key>
<true/>
<key>com.apple.announced.client</key>
<true/>
<key>com.apple.appletv.pbs.allow-screen-saver</key>
<true/>
<key>com.apple.appletv.pbs.bulletin-service-access</key>
<true/>
<key>com.apple.appletv.pbs.mediaremote</key>
<true/>
<key>com.apple.appstored.install-apps</key>
<true/>
<key>com.apple.appstored.install-system-apps</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.backboardd.lastUserEventTime</key>
<true/>
<key>com.apple.bluetooth.internal</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.bulletinboard.dataprovider</key>
<true/>
<key>com.apple.bulletinboard.observer</key>
<true/>
<key>com.apple.bulletinboard.settings</key>
<true/>
<key>com.apple.captive.private</key>
<true/>
<key>com.apple.cards.all-access</key>
<true/>
<key>com.apple.carousel.onWristMonitor.actions</key>
<array>
<string>forceWristDetect</string>
</array>
<key>com.apple.cdp.followup</key>
<true/>
<key>com.apple.cdp.statemachine</key>
<true/>
<key>com.apple.cdp.utility</key>
<true/>
<key>com.apple.corecapture.manager-access</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.coreduetd.people</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.developer.homekit.background-mode</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>production</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.fileprovider.enumerate</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.homekit.private-spi-access</key>
<true/>
<key>com.apple.icloud.fmfd.access</key>
<true/>
<key>com.apple.imagent</key>
<true/>
<key>com.apple.imagent.chat</key>
<true/>
<key>com.apple.imagent.chat.av</key>
<true/>
<key>com.apple.intents.intents-helper</key>
<true/>
<key>com.apple.itunesstored.lookup</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.keystore.access-keychain-keys</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.device.remote-session</key>
<true/>
<key>com.apple.keystore.device.uuid</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.launchservices.MoveDocumentOnOpen</key>
<true/>
<key>com.apple.locationd.activity</key>
<true/>
<key>com.apple.locationd.authorizeapplications</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.peer_ranging</key>
<true/>
<key>com.apple.locationd.place_inference</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.mobileactivationd.spi</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.networkd_privileged</key>
<true/>
<key>com.apple.networkrelay.deviceMonitor</key>
<true/>
<key>com.apple.networkrelay.devices.read</key>
<true/>
<key>com.apple.networkrelay.devices.write</key>
<true/>
<key>com.apple.passes.add-silently</key>
<true/>
<key>com.apple.payment.all-access</key>
<true/>
<key>com.apple.photos.bourgeoisie</key>
<true/>
<key>com.apple.private.MobileActivation</key>
<array>
<string>GetActivationState</string>
</array>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>BluetoothAddress</string>
<string>EthernetMacAddress</string>
<string>SysCfg</string>
<string>UniqueDeviceID</string>
<string>WifiAddressData</string>
<string>WifiAddress</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.airdrop.discovery</key>
<true/>
<key>com.apple.private.appleairpowercharger.set-property</key>
<true/>
<key>com.apple.private.applecredentialmanager.allow</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.SharingDeviceAssets</string>
</array>
<key>com.apple.private.assets.change-daemon-config</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.canGetAppLinkInfo</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.communicationsfilter</key>
<true/>
<key>com.apple.private.corerecents</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.coreservices.canopenactivity</key>
<true/>
<key>com.apple.private.dmd.policy</key>
<true/>
<key>com.apple.private.familycircle</key>
<true/>
<key>com.apple.private.followup</key>
<true/>
<key>com.apple.private.hid.client.event-dispatch</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.homekit</key>
<true/>
<key>com.apple.private.homekit.pairing-identity</key>
<true/>
<key>com.apple.private.homekit.pairing-identity.private</key>
<true/>
<key>com.apple.private.homekit.remote-login.private</key>
<true/>
<key>com.apple.private.ids.continuity</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.madrid</string>
<string>com.apple.private.alloy.continuity.activity</string>
<string>com.apple.private.alloy.continuity.auth</string>
<string>com.apple.private.alloy.continuity.auth.classa</string>
<string>com.apple.private.alloy.continuity.encryption</string>
<string>com.apple.private.alloy.continuity.tethering</string>
<string>com.apple.private.alloy.continuity.unlock</string>
<string>com.apple.private.alloy.nearby</string>
<string>com.apple.private.alloy.sharing.paireddevice</string>
<string>com.apple.private.alloy.sharing.ranging</string>
<string>com.apple.private.alloy.sms</string>
<string>com.apple.private.alloy.intercom</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.continuity.activity</string>
<string>com.apple.private.alloy.continuity.auth</string>
<string>com.apple.private.alloy.continuity.auth.classa</string>
<string>com.apple.private.alloy.continuity.encryption</string>
<string>com.apple.private.alloy.continuity.tethering</string>
<string>com.apple.private.alloy.nearby</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.continuity.unlock</string>
<string>com.apple.private.alloy.sharing.paireddevice</string>
<string>com.apple.private.alloy.sharing.ranging</string>
</array>
<key>com.apple.private.ids.session</key>
<array>
<string>com.apple.private.alloy.nearby</string>
</array>
<key>com.apple.private.imcore.imdpersistence.database-access</key>
<true/>
<key>com.apple.private.launchservices.canspecifymanageddocumentsource</key>
<true/>
<key>com.apple.private.librarian.container-proxy</key>
<true/>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>InstallForLaunchServices</string>
</array>
<key>com.apple.private.neagent</key>
<true/>
<key>com.apple.private.necp.match</key>
<true/>
<key>com.apple.private.nehelper.privileged</key>
<true/>
<key>com.apple.private.network.interface-control</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.networkextension.configuration</key>
<true/>
<key>com.apple.private.octagon</key>
<true/>
<key>com.apple.private.photoanalysisd.access</key>
<true/>
<key>com.apple.private.photos.service.mediaconversion</key>
<true/>
<key>com.apple.private.safari.can-inspect-autofill-feature-availability</key>
<true/>
<key>com.apple.private.security.storage-exempt.heritable</key>
<true/>
<key>com.apple.private.security.storage.HomeKit</key>
<true/>
<key>com.apple.private.security.storage.MessagesMetaData</key>
<true/>
<key>com.apple.private.security.storage.Photos</key>
<true/>
<key>com.apple.private.sharing.XPCHelperAccess</key>
<true/>
<key>com.apple.private.skywalk.register-kernel-pipe</key>
<true/>
<key>com.apple.private.skywalk.register-user-pipe</key>
<true/>
<key>com.apple.private.sleepd</key>
<true/>
<key>com.apple.private.sysdiagnose</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServicePhotos</string>
<string>kTCCServiceWillow</string>
</array>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.SFUserNotificationTVLatency</string>
<string>com.apple.Sharing.HomePodRemoteNotifications</string>
<string>com.apple.Sharing.b7ce1794a1c8766816fc7b7500742862</string>
<string>com.apple.Sharing.TVRemoteNotifications</string>
<string>com.apple.Sharing.WatchRemoteNotifications</string>
</array>
<key>com.apple.private.usernotifications.settings</key>
<array>
<string>read</string>
</array>
<key>com.apple.private.voicememod.client</key>
<true/>
<key>com.apple.private.xpc.launchd.reboot</key>
<true/>
<key>com.apple.purplebuddy.budd.access</key>
<true/>
<key>com.apple.rapport.Client</key>
<true/>
<key>com.apple.rapport.people</key>
<true/>
<key>com.apple.rootless.storage.coreduet_knowledge_store</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/Applications/</string>
<string>/private/var/mobile/Library/MessagesMetaData/</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/mobile/Library/Logs/CrashReporter/com.apple.sharing</string>
<string>/private/var/mobile/Library/Logs/CrashReporter/com.apple.sharing/SFBLEScanner-NearbyAction.log</string>
<string>/private/var/mobile/Library/Logs/CrashReporter/com.apple.sharing/SFBLEScanner-NearbyInfo.log</string>
<string>/private/var/mobile/Library/Logs/CrashReporter/com.apple.sharing/SFBLEScanner-Prox.log</string>
<string>/private/var/mobile/Library/Preferences/com.apple.Home.plist</string>
<string>/private/var/mobile/Library/CoreBehavior/BehaviorMiner.sqlite</string>
<string>/private/var/mobile/Library/CoreBehavior/BehaviorMiner.sqlite-shm</string>
<string>/private/var/mobile/Library/CoreBehavior/BehaviorMiner.sqlite-wal</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Preferences/com.apple.palette.chestnut.plist</string>
<string>/Library/Preferences/com.apple.sharing.powerStatus.plist</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.accessories.blepairing</string>
<string>com.apple.audio.hapticd</string>
<string>com.apple.bulletinboard.observerconnection</string>
<string>com.apple.carousel.wakegesturemonitor</string>
<string>com.apple.cdp.daemon</string>
<string>com.apple.CloudPhotoDerivativeGenerator</string>
<string>com.apple.commcenter.coretelephony.xpc</string>
<string>com.apple.CompanionLink</string>
<string>com.apple.corecaptured</string>
<string>com.apple.coreduetd.knowledge</string>
<string>com.apple.corefollowup.agent</string>
<string>com.apple.diagnosticextensionsd.sharing-wakeup</string>
<string>com.apple.distributed_notifications@Uv3</string>
<string>com.apple.familycircle.agent</string>
<string>com.apple.homed.xpc</string>
<string>com.apple.icloud.fmfd</string>
<string>com.apple.iconservices</string>
<string>com.apple.imagent.embedded.auth</string>
<string>com.apple.imdpersistence.IMDPersistenceAgent</string>
<string>com.apple.intents.intents-helper</string>
<string>com.apple.lsd.xpc</string>
<string>com.apple.mobileactivationd</string>
<string>com.apple.networkd_privileged</string>
<string>com.apple.networking.captivenetworksupport</string>
<string>com.apple.PairingManager</string>
<string>com.apple.photoanalysisd</string>
<string>com.apple.rapport.people</string>
<string>com.apple.rapport</string>
<string>com.apple.SafariFoundation.AutoFillHelper</string>
<string>com.apple.server.bluetooth.le.att.xpc</string>
<string>com.apple.server.bluetooth.le.pipe.xpc</string>
<string>com.apple.SharedWebCredentials</string>
<string>com.apple.sharing.sharesheet</string>
<string>com.apple.Sharing.SharingHUDService</string>
<string>com.apple.sharing.transfer-observer</string>
<string>com.apple.sharingd.b332setup</string>
<string>com.apple.sharingd.paireddevice</string>
<string>com.apple.sharingd</string>
<string>com.apple.SharingServices</string>
<string>com.apple.SharingXPCHelper</string>
<string>com.apple.siri.VoiceShortcuts.xpc</string>
<string>com.apple.soundboardservices.server</string>
<string>com.apple.springboard.blockableservices</string>
<string>com.apple.sysdiagnose.service.xpc</string>
<string>com.apple.tailspind</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationmanager</string>
<string>com.apple.terminusd</string>
<string>com.apple.usernotifications.usernotificationsettingsservice</string>
<string>com.apple.announced.server</string>
</array>
<key>com.apple.security.exception.mach-register.global-name</key>
<array>
<string>com.apple.sharingd.b332setup</string>
<string>com.apple.Sharing.SharingHUDService</string>
</array>
<key>com.apple.security.exception.managed-preference.read-only</key>
<array>
<string>com.apple.AppleMediaServices</string>
<string>com.apple.Home</string>
<string>com.apple.homed</string>
<string>com.apple.MobileBluetooth.debug</string>
<string>com.apple.PeopleSuggester</string>
</array>
<key>com.apple.security.exception.process-info</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.assistant.support</string>
<string>com.apple.AppleMediaServices</string>
<string>com.apple.Home</string>
<string>com.apple.homed</string>
<string>com.apple.MobileBluetooth.debug</string>
<string>com.apple.siri.shortcuts</string>
<string>com.apple.voicetrigger</string>
<string>com.apple.TelephonyUtilities</string>
<string>com.apple.airplay</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.UIKit</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.network.server</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
<string>systemgroup.com.apple.sharedpclogging</string>
</array>
<key>com.apple.share-services-discovery</key>
<true/>
<key>com.apple.sharing.AirDropPrivilegedInformation</key>
<true/>
<key>com.apple.sharing.Client</key>
<true/>
<key>com.apple.sharing.DeviceDiscovery</key>
<true/>
<key>com.apple.sharing.PasswordGranting</key>
<true/>
<key>com.apple.sharing.PasswordSharing</key>
<true/>
<key>com.apple.sharing.RemoteInteractionSession</key>
<true/>
<key>com.apple.sharing.Services</key>
<true/>
<key>com.apple.sharing.Session</key>
<true/>
<key>com.apple.shortcuts.library-read-access</key>
<true/>
<key>com.apple.springboard.allowallcallurls</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.stereoleader.soundboard</key>
<true/>
<key>com.apple.studentd-access</key>
<true/>
<key>com.apple.tailspin.dump-output</key>
<true/>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-call-capabilities</string>
<string>access-call-providers</string>
<string>access-calls</string>
<string>modify-calls</string>
</array>
<key>com.apple.wifi.eap-nearby-device-setup-config-copy</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>com.apple.wirelessproxd-disable-scans</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>appleaccount</string>
<string>com.apple.airplay.pairing</string>
<string>com.apple.continuity.encryption</string>
<string>com.apple.continuity.unlock</string>
<string>com.apple.hap.pairing</string>
<string>com.apple.MediaRemote.pairing</string>
<string>com.apple.pairing</string>
<string>com.apple.SharedWebCredentials</string>
<string>com.apple.sharing.appleidauthentication</string>
<string>com.apple.sharing.cdb</string>
<string>com.apple.Sharing</string>
<string>com.apple.sharing.safaripasswordsharing</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>sharingd</string>
</array>
</dict>
</plist>
HasProblem
iCloud
iTunes
HomeKit
WiFi
Fixing
WiFiPerf
Internet
Hardware
Bluetooth
Thermal
Recovery
StereoNotFound
StereoVersion
StereoError
802.1x
NetworkProfile
NetworkNotShareable
NetworkProfileRequired
Unknown
Bluetooth
Certificate
ValidationRecord
NotSupported
AppleID
ManagedConfig
Discoverability
Siri
Home
AppSwitcher
Spotlight
NowPlaying
CarPlay
Login
Passcode
Today
LSNav
Camera
InCall
Auth
AdvData
Attrs
Distance
Name
RSSI
SSID
Prox
RLoc
Attrs
Devices
Prox
RelativeLocation
AdvData
Distance
RSSI
Attrs
Bubble
9Y>)F
?ffffff
Unknown
Bluetooth
Certificate
ValidationRecord
NotSupported
AppleID
ManagedConfig
Discoverability
@333333
?333333
?}}}}}}
EveryoneMode
DeviceClose
NeedsKeyboard
NeedsSetup
HasAuthTag
Failed
Date
DeviceIRK
EdPK
EdSK
Identity
IDSDeviceID
Model
Name
Type
FeatureFlags
Created
Forced
AccountID
UserAdded
ContactID
MediaRemoteID
MediaRouteID
SendersKnownAlias
AccessGroups
HomeKitUserIdentifier
SDAuthenticationSessionDelegate
AuthenticationSessionInterface
SDAuthenticationSession
Name
NNSNotificationName
SDWatchWristState
SFAuthenticationType
SFAuthenticationError
Foundation
FileProtectionType
NNSFileProtectionType
FileAttributeKey
NNSFileAttributeKey
CGImage
NCGImageRef
SDAuthenticationTransportMessageType
SDRunState
OnceManager
PushableTimer
InstanceCounter
IntegerPacker
PackError
SDAirDropHashError
SDAirDropHashStore
AuthenticationSecurityManaging
SDAuthenticationSecurityManager
AuthenticationSecurityRequest
AuthenticationPolicies
SDAirDropHandlerIPA
SDDeferrableOperation
DaemoniOSLibrary
AuthenticationKeyInterface
SDAuthenticationKeySession
ShortHash
MediumHash
LongHash
SDHashStoreContact
SDAirDropHashStoreEntry
IDSService
SDIDSService
AuthenticationLockInterface
SDAuthenticationLockSession
Metrics
DaemoniOSLibrary
SDAirDropContactHashManager
SDAirDropHashStoreCDB
SDContactChangeHistoryEvent
SDContactChangeHistoryDropEverythingEvent
SDContactChangeHistoryAddEvent
SDContactChangeHistoryDeleteEvent
SDContactChangeHistoryUpdateEvent
SDContactStoreInterface
SDContactStore
IDSDevice
SDIDSDevice
@DaemoniOSLibrary
SDAirDropContactHashManagerContext
SDXPCHelperImageCache
CacheError
SDAuthenticationManager
DaemoniOSLibrary
$s16DaemoniOSLibrary31SDAuthenticationSessionDelegateP
$s16DaemoniOSLibrary30AuthenticationSessionInterfaceP
So23SDAutoUnlockWiFiRequestCSg
So8NSStringC
$sSY
$ss21_ObjectiveCBridgeableP
SgXw
SSSg5label_yp5valuetSg
ShySiG
So24OS_dispatch_source_timer_p
SuSg
$s16DaemoniOSLibrary18SDAirDropHashStoreP
$s16DaemoniOSLibrary30AuthenticationSecurityManagingP
ycSg
SbycSg
yySbccSg
SgXw
SgXwz_Xx
SgIegy_
So22SDUnlockMotionDetectorC
$ss25ExpressibleByArrayLiteralP
$ss10SetAlgebraP
$ss9OptionSetP
So16SDAirDropHandlerC
ySo15SFAirDropActionCG
ySS_yptG
ySDySSSo8NSNumberCGG
ySS_So8NSNumberCtG
SDySSSo8NSNumberCG
So8NSObjectC
ySbc
So17OS_dispatch_queueC
SDySS
ShySSG
So24OS_dispatch_source_timer_pSg
SS3key_
5valuetSg
SS3key_
5valuet
SnySiG
ySnySiGG
Sg_ABt
IeyBy_
$s16DaemoniOSLibrary26AuthenticationKeyInterfaceP
SgXw
SgXwz_Xx
SbIeyBy_
So23SDAutoUnlockWiFiRequestC
SbIegy_
_A3At
$s16DaemoniOSLibrary12SDIDSServiceP
$s16DaemoniOSLibrary27AuthenticationLockInterfaceP
SgXw
SgXwz_Xx
XDXMT
_pSg
SaySo22_CLRangingPeerDistanceCGSg
_pSg
_A13At
So11CUCoalescerC
16DaemoniOSLibrary26SDCUSystemMonitorInterface_p
So21SFTokenBucketWithDupsC
So20NSNotificationCenterC
So9CNContactC_Say
GtSg
yypG
So15CNKeyDescriptor_p
ySo15CNKeyDescriptor_pG
ySiG
So14CNLabeledValueC
ypSg
SnySiG
Iegnr_
ySiGSnySiGG
SSSg
ShySo9CNContactCG
So9CNContactCSg
So9CNContactC
ySS3key_
5valuetG
ShyAAGG
_pSgz_Xx
ShyAAGGz_Xx
Gz_Xx
Sgz_Xx
SSz_Xx
So21CUKeyValueStoreReaderCySo6NSDataCADG
ySay
G_G_Sit
ySay
ySay
_pSg
ySSG
ySS5value_
8longHash
Sg06mediumC0tG
SS5value_
8longHash
Sg06mediumC0t
ySo9CNContactCG
ySo9CNContactCG
yShy
ySSSuG
ShyABGG
ySSG
GSpySo8NSObjectCGSgSpyypGSgytIeglllr_
$s16DaemoniOSLibrary23SDContactStoreInterfaceP
So14CNContactStoreC
$s16DaemoniOSLibrary11SDIDSDeviceP
$s16DaemoniOSLibrary26SDCUSystemMonitorInterfaceP
SaySSG
_yptG
So14NSUserDefaultsCSg
$s16DaemoniOSLibrary31SDAuthenticationManagerDelegateP
$s16DaemoniOSLibrary32SDAuthenticationManagerInterfaceP
16DaemoniOSLibrary31SDAuthenticationManagerDelegate_pSgXw
Sbyc
SgSo26SDAutoUnlockSessionWrapperC_
SgXw
So26SDAutoUnlockSessionWrapperC
SgXwz_Xx
_pSg
_yptG
_ypt
_pSg
_pSg
ySSypG
SS_ypt
ySSSo8NSNumberCG
_ypt
delegate
wifiRequest
type
queue
AWDLInfo
sessionID
responseTimer
_rawValue
RawValue
_ObjectiveCType
authenticationRequest
authenticationResponse
authenticationConfirmation
notStarted
inProgress
completed
failed
skip
onceList
noLaterThan
timer
identifier
wrongPackLength
sourcesPerTarget
hashesAreIncorrect
storeNotLoaded
storeDestroyed
contactIDDecodeFailed
contactFieldDecodeFailed
rateLimited
lastUnlockDate
wristDetectionGenerator
deviceUnlockedGenerator
deviceHasPasscodeGenerator
sleepModeGenerator
motionGenerator
faceIDEnabledGenerator
raiseToWakeHandler
lastUnlockedByPairedUnlockGenerator
queue
raiseToWakeTimes
allowsLenientMotionConditions
lastUnlockedAndOnWristDate
policies
requestingDeviceUnlockDate
rawValue
ArrayLiteralElement
RawValue
Element
identifier
preventUntilDate
operation
queue
timedReasons
reasons
pendingOperation
mainTimer
storage
shortHash
lastMediumByte
emailOrPhone
hashStoreContact
longHash
mediumHash
lastUnlockDate
rangingToken
metrics
isConfirmationSent
sessionStart
sessionEnd
keyExchangeStart
keyExchangeEnd
awdlBringUpStart
awdlBringUpEnd
peerFound
peerFoundSameTimeAsAWDLUp
rangingStart
rangingEnd
failureReason
context
contactUpdateCoalescer
meCardUpdateCoalescer
systemMonitor
hashManagerQ
bucket
contactStore
hashDB
notificationCenter
distributedNotificationCenter
activated
meCardInfo
hashesUpdatedSuccessfully
reader
stagedAdditions
stagedDeletedIDs
loaded
destroyed
contact
contactIdentifier
didChangeNotificationName
meContactDidChangeNotificationName
contactStore
systemMonitor
contactStore
hashStore
notificationCenter
distributedNotificationCenter
coalescerMinDelay
coalescerMaxDelay
imageDestinationCreateFailed
imageDestinationFinalizeFailed
imageSourceCreateFailed
delegate
queue
lockSessionGenerator
keySessionGenerator
idsService
securityManager
keySessions
lockSessions
generateAWDLInfo
isWifiEnabled
isBluetoothEnabled
decryptWrapper
lastUpdated
airdrop_dbv2
airdrop_dbv3
AirDropHashDB
sd_connectionBundleID
processIdentifier
stringWithFormat:
_xpcConnection
valueForEntitlement:
initWithUTF8String:
boolValue
sd_description
sd_connectionProcessName
sd_connectionHasEntitlement:
T@"NSString",R,C
countByEnumeratingWithState:objects:count:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
addObserver:forKeyPaths:options:context:
removeObserver:forKeyPaths:context:
addObserver:
sd_addObserver:
UTF8String
standardUserDefaults
objectForKey:
removeObjectForKey:
setObject:forKey:
defaultCenter
postNotificationName:object:
sharedDaemon
start
mainRunLoop
setTransfer:
isActivated
removeStatusMonitorObservers
setTransferTypes:
addStatusMonitorObservers
setIsActivated:
selectedAction
triggerSelectedActionIfAppropriate
prepareOrPerformOpenAction
setLocalizedTitle:
setContentsTitle:
setContentsDescription:
setUserResponse:
shouldUpdateUserResponse
prepareForAccept
minRequiredTransferState
maxTransferState
requiresUnlockedUI
setMaxTransferState:
stringWithString:
senderCompositeName
openURL:withOptions:
openURLs:bundleIdentifier:
removeItemAtURLToFreeUpSpace:
hasFiles
hasLinks
setHandlingAppInstalled:
setHandlingAppBundleID:
_hasFiles
_hasLinks
_isActivated
_handlingAppInstalled
_transfer
_bundleProxy
_handlingAppBundleID
T@"SFAirDropTransfer",&,N,V_transfer
TB,R,N,V_hasFiles
TB,R,N,V_hasLinks
TB,N,V_isActivated
T@"LSBundleProxy",&,N,V_bundleProxy
TQ,R,N
TB,N,V_handlingAppInstalled
T@"NSString",&,N,V_handlingAppBundleID
discreteProgressWithTotalUnitCount:
discoverabilityMetricsForNode:
consumeSandboxExtensions
addClientForNode:shouldPublishProgress:
serversChanged:
postNotificationForTransferStatus:progress:
initWithPerson:items:forDiscovery:
setDiscoveryMetrics:
setShouldPublishProgress:
removeObserver:name:object:
removeObserver:forKeyPath:
releaseSandboxExtensions
removeClientAlerts
fractionCompleted
completedUnitCount
sf_personRealName
sf_initWithAppBundle:sessionID:andPersonRealName:
addChild:withPendingUnitCount:
mainThread
observeValueForKeyPath:ofObject:change:context:
isCancelled
airDropClient:event:withResults:
startProgress
handleConversionProgress:
auditToken
_airDropClients
_allowedWaiting
_conversionActive
_conversionNotified
_conversionObserver
_conversionProgress
_currentNames
_discoveryMetrics
_hadConversion
_items
_progressObserver
_responseClient
_results
_rootNodeName
_sandboxExtensions
_sandboxExtensionHandles
_siblingNodes
_transferProgress
_auditToken
T{?=[8I]},V_auditToken
T@"<SDAirDropSessionDelegate>",W,V_delegate
setLastUnlockUsedMask:
lastUnlockUsedMask
faceIDEnabled
supportsPeriocular
lockWithBioLockOut
handleBioLockoutStateChanged:
deviceEnteredBioLockoutHandler
_lastUnlockUsedMask
_deviceEnteredBioLockoutHandler
TB,N,V_lastUnlockUsedMask
T@?,C,N,V_deviceEnteredBioLockoutHandler
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
_requestCreatedDate
_requestIdentifier
_deviceIdentifier
_completionHandler
_timeoutTimer
_timeoutTimeInterval
_error
T@"NSDate",C,N,V_requestCreatedDate
T@"NSUUID",C,N,V_requestIdentifier
T@"NSString",C,N,V_deviceIdentifier
T@?,C,N,V_completionHandler
T@"NSTimer",&,N,V_timeoutTimer
Tq,N,V_timeoutTimeInterval
T@"NSError",&,N,V_error
_previousKeyIdentifier
_linkClient
T@"NSUUID",&,N,V_previousKeyIdentifier
T@"RPCompanionLinkClient",&,N,V_linkClient
command
_advertisementPayload
_command
T@"NSData",C,N,V_advertisementPayload
T@"NSString",C,N,V_command
_messageIdentifier
_activityIdentifier
T@"NSUUID",C,N,V_messageIdentifier
T@"NSUUID",C,N,V_activityIdentifier
installSmartCoverMonitor
updateSmartCoverIsClosed:
handleButtonEvent:
getSmartCoverState:usage:
handleEvent:
isSmartCoverClosed:
_smartCoverIsClosed
_flap1StateIsEngaged
_openStateIsEngaged
_lock
_mHIDClient
TB,R,V_smartCoverIsClosed
responseTimer
setResponseTimer:
pairingAKSSession
setPairingAKSSession:
setSessionQueue:
_useAttestedProtocol
_pairingAKSSession
_sessionQueue
_aksSession
_responseTimer
T@"NSObject<OS_dispatch_source>",&,V_responseTimer
T@"<SDAutoUnlockSessionDelegate>",W,N,V_delegate
T@"NSUUID",&,N,V_sessionID
Tq,V_pairingAKSSession
T@"SDUnlockTransport",R,N
TB,R,N,V_useAttestedProtocol
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionQueue
T@"SDAutoUnlockAKSSession",&,N,V_aksSession
setHasSupportsACK:
setHasSuppressNotification:
hasSuppressNotification
_supportsACK
_suppressNotification
TB,N,V_supportsACK
TB,N,V_suppressNotification
bundleProxyForIdentifier:
isVerifiableIdentity
setSingleItemLocalizedTitle:
setShouldUpdateUserResponse:
triggerAppStoreSearch
cancelAction
isFile
openURL:configuration:completionHandler:
handlingAppInstalled
setKeyFailed:
setHasKeyFailed:
_keyFailed
TB,N,V_keyFailed
_webLinksHandler
setDeviceID:
idsDeviceForBluetoothID:
setSuppressWatchNotification:
setDidDelayWorkDueToPowerAssertion:
motionDetector
setMotionDetector:
wifiRequest
setWifiRequest:
promptingForApproval
removeAuthorizationRequestNotification
sessionQueue
invalidateAssertionTimer
logAutoUnlockEnd
protocol
sessionCompleted
setSessionCompleted:
shouldAlertOnNotify
alertOfUnlock
isAuthenticatingForSiri
deviceDisconnected:
systemIsActive:
notifyDelegateWithError:
didDelayWorkDueToPowerAssertion
setShouldDelayWorkDueToPowerAssertion:
beginAKSSession
userRequestRequired
alerted
suppressWatchNotification
setAlerted:
showUnlockedByDeviceNotificationWithDeviceID:
setAwdlStart:
nq_handleWiFiRequestStartedWithStartAWDLHandler:
nq_awdlNetworkStarted
invalidateResponseTimer
nq_handleWiFiRequestInvalidated
awdlStart
setWifiRequestStartedHandler:
createAuthTokenIfReady
hasSenderID
senderID
handleAWDLInfo:
postBeganUnlockingNotification
shouldDelayWorkDueToPowerAssertion
handleAuthPromptRequest:
handleAuthPromptImageData:
handleSessionKeyExchangeResponse:
handleUnlockConfirmation:
handleCleanUpAWDL
logAutoUnlockStart
declareSystemActivityAssertion
useAKSToken
useToken
setRemoteAWDLInfo:
authPrompt
setOldApproveProtocol:
setUserRequestRequired:
appName
setAppName:
phoneUnlockDate
dateWithTimeIntervalSinceReferenceDate:
setPhoneUnlockDate:
hasIsAuthenticatingForSiri
setAuthenticatingForSiri:
hasSkipMotionCheck
skipMotionCheck
setSkipMotionCheck:
localDeviceNeedsArming
sendKeyExchangeRequestWithData:error:
hasIconHash
setIconCache:
iconCache
iconHash
iconImageDataForHash:
setUsingImageCache:
setAuthPromptIconData:
promptForApproval
setNeedsImageData:
setAuthPromptIconHash:
sendAuthPromptResponseWithData:error:
hasImageData
usingImageCache
authPromptIconData
imageData
appendData:
finalMessage
hasKey
setExchangeResponse:
createWiFiRequest
hasKeyFailed
keyFailed
sendSessionAuthToken:error:
exchangeResponse
unlockAllowed
wifiRequestStartedHandler
aksSession
stepSessionWithData:outputData:
generateSessionToken
setSessionRangingKey:
sessionRangingKey
remoteAWDLInfo
peerListFromAWDLInfo:
setPeerList:
peerList
errorRequestingUnlock
suppressNotification
hasSupportsACK
supportsACK
sendConfirmationACK
confirmSession
setAksSuccess:
authPromptIconHash
cacheIconImageData:hash:appName:
wifiEnabled
awdlInfoData
setUseToken:
setSupportsConfirmationACK:
wrapPayload:withType:
sendData:bleDevice:direct:completionHandler:
restartResponseTimer:
needsImageData
sendData:type:errorHandler:
setUsingRecord:
setKey:
setAuthToken:
setShouldAlertOnNotify:
restartAssertionTimer
assertionTimer
setAssertionTimer:
keyInState
keyCanUnlock:
sendAWDLInfoWithKeyData:error:
sentAWDLInfo
setSentAWDLInfo:
promptedForApproval
setPromptedForApproval:
setPromptingForApproval:
oldApproveProtocol
setUnlockAllowed:
setErrorRequestingUnlock:
transaction
setTransaction:
powerAssertionID
setPowerAssertionID:
powerAssertionState
setPowerAssertionState:
remoteCacheID
setRemoteCacheID:
proxyRequestData
setProxyRequestData:
authenticatingForSiri
_wifiEnabled
_localDeviceNeedsArming
_sentAWDLInfo
_userRequestRequired
_sessionCompleted
_alerted
_shouldAlertOnNotify
_promptedForApproval
_promptingForApproval
_oldApproveProtocol
_needsImageData
_usingImageCache
_shouldDelayWorkDueToPowerAssertion
_didDelayWorkDueToPowerAssertion
_suppressWatchNotification
_authenticatingForSiri
_errorRequestingUnlock
_powerAssertionState
_wakeGestureDates
_unlockedOnWristDate
_phoneUnlockDate
_unlockAllowed
_wifiRequestStartedHandler
_remoteCacheID
_peerList
_proxyRequestData
_assertionTimer
_exchangeResponse
_authPromptIconData
_iconCache
_authPromptIconHash
_motionDetector
T@"NSDate",&,N,V_phoneUnlockDate
TB,N,V_sentAWDLInfo
TB,N,V_userRequestRequired
TB,N,V_sessionCompleted
TB,N,V_alerted
TB,N,V_shouldAlertOnNotify
TB,N,V_promptedForApproval
TB,N,V_promptingForApproval
TB,N,V_oldApproveProtocol
T@"NSNumber",&,N,V_unlockAllowed
Ti,N,V_errorRequestingUnlock
T@"NSObject<OS_os_transaction>",&,N,V_transaction
TI,N,V_powerAssertionID
Ti,N,V_powerAssertionState
T@?,C,N,V_wifiRequestStartedHandler
Tq,N,V_remoteCacheID
T@"NSArray",C,N,V_peerList
T@"NSData",C,N,V_proxyRequestData
T@"NSObject<OS_dispatch_source>",&,N,V_assertionTimer
T@"SDUnlockSessionKeyExchangeResponse",&,N,V_exchangeResponse
T@"NSMutableData",&,N,V_authPromptIconData
T@"SDAutoUnlockMacIconCache",&,N,V_iconCache
T@"NSData",&,N,V_authPromptIconHash
TB,N,V_needsImageData
TB,N,V_usingImageCache
TB,N,V_shouldDelayWorkDueToPowerAssertion
TB,N,V_didDelayWorkDueToPowerAssertion
TB,N,V_suppressWatchNotification
TB,N,V_authenticatingForSiri
T@"SDUnlockMotionDetector",&,N,V_motionDetector
TB,N,V_wifiEnabled
T@"NSArray",C,N,V_wakeGestureDates
T@"NSDate",&,N,V_unlockedOnWristDate
TB,N,V_localDeviceNeedsArming
sendProtocolBufferData:withType:timeout:option:queueOneID:errorHandler:
sendProtocolBufferData:withType:timeout:option:dataClass:queueOneID:errorHandler:
serviceQueue
idsServiceClassA
dataClassStringForDataClass:
delegates
T@"SDUnlockIDSController",R,N
hasDefaultDevice
isDefaultPairedDeviceNearby
activeIDSDevice
updateSendOptions:
setIdsServiceClassA:
errorHandlers
setErrorHandlers:
_serviceQueue
_idsServiceClassA
_errorHandlers
T@"IDSService",&,V_idsService
T@"IDSService",&,V_idsServiceClassA
T@"NSMutableDictionary",&,V_errorHandlers
T@"NSHashTable",R,N,V_delegates
T@"NSObject<OS_dispatch_queue>",R,N,V_serviceQueue
requestData
setRequest:
handleSetupRequest
onqueue_cancel
request
hasLtkHash
ltkHash
waitingForLTK
sendSetupSessionCreatedWithLocalKey:stepData:error:failureReason:ltkSyncing:
watchLTKsChanged:
setWaitingForLTK:
setCompanionViewNotSyncing:
setCompanionNeedsUnlock:
setCompanionCurrentlySyncing:
ltkHashMatches
companionViewNotSyncing
companionNeedsUnlock
companionCurrentlySyncing
handleCreateEscrowSecret:
hasToken
token
generateEscrowSecret
sendSetupCreateEscrowRecordStepData:error:
useAttestedProtocol
transport
sendAutoUnlockPayload:toDevice:type:sessionID:queueOneID:timeout:completion:
setLongTermKey:
setToken:
setFailureReasons:
setLtkSyncing:
setLtkHash:
setWatchOldLTKSyncStatus:
setWatchNewLTKSyncStatus:
handleMessage:fromDeviceID:type:
canCreatePairing
sendKeyDeviceLocked
sendSetupSessionCreatedWithLocalAttestedKey:stepData:error:failureReason:
requestedLTKForRemote
setRequestedLTKForRemote:
longTermKey
_waitingForLTK
_requestedLTKForRemote
_companionViewNotSyncing
_companionNeedsUnlock
_companionCurrentlySyncing
_request
_longTermKey
TB,V_waitingForUnlock
TB,V_waitingForLTK
TB,V_requestedLTKForRemote
TB,V_companionViewNotSyncing
TB,V_companionNeedsUnlock
TB,V_companionCurrentlySyncing
TB,V_canceled
T@"SDUnlockSetupRequest",&,V_request
T@"NSData",&,N,V_longTermKey
T@"NSData",&,N,V_requestData
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:escrowSecret:usingEscrow:externalACMContext:
setupSession
sessionType
remoteLTK
originator
fixRemoteLTKWithStatus:retryBlock:
usingEscrow
escrowSecret
setupAuthorizationSession
setRemoteLTK:
fixRemoteLTK
ltkNeedsFixing
setLtkNeedsFixing:
setSessionType:
setOriginator:
setEscrowSecret:
setUsingEscrow:
_ltkNeedsFixing
_originator
_usingEscrow
_remoteLTK
_sessionType
_escrowSecret
T@"NSData",C,N,V_remoteLTK
Tq,N,V_sessionType
TB,N,V_originator
T@"NSData",C,N,V_escrowSecret
TB,N,V_usingEscrow
T@"NSString",&,N,V_deviceID
T@"NSData",C,N,V_externalACMContext
Tq,N,V_aksSessionID
TB,N,V_ltkNeedsFixing
decryptionKey
updateWithRawAdvertisementData:receivedViaScanning:isReplay:newAdvertisementHandler:
lastCounter
lastActivityAdvertisement
lastAdvertisementPayload
lastAdvertisementOptions
initWithAdvertisementVersion:advertisementPayload:options:device:
disableDuplicateFilterOnce
lastRawAdvertisementData
lastUsedKeyIdentifier
setLastUsedKeyIdentifier:
lastAdvertisementData
_lastReceivedAdvertisementDate
_deviceTracked
_disableDuplicateFilterOnce
_idsDevice
_lastRawAdvertisementData
_lastUsedKeyIdentifier
_lastAdvertisementData
T@"NSUUID",&,N,V_lastUsedKeyIdentifier
T@"SDActivityDecryptionKey",R,N
T@"NSData",R,C,N,V_lastAdvertisementData
T{?=CCCCCCCCCCCCCC},R,N
TS,R,N
T@"NSData",R,C,N
T@"NSDictionary",R,C,N
T@"IDSDevice",&,N,V_idsDevice
TB,N,V_deviceTracked
TB,N,V_disableDuplicateFilterOnce
T@"NSData",R,C,N,V_lastRawAdvertisementData
T@"SFActivityAdvertisement",R,N
potentiallyInvalidate
_nodes
T@"NSArray",R,C,V_nodes
dataFromTXTRecordDictionary:
updateTXTRecordAndNotify
publishCallBack:
_port
_retryCount
_txtRecord
_bonjourNameConflictDetected
T@"<SDAirDropPublisherDelegate>",W,V_delegate
generatedError
passcode
validatePasscode:
sendSetupRequest
userInfoForKeychainMismatch
userInfoForInternetSharing
localDeviceIDSRegistered
userInfoForWatchNotSignedIn
userInfoForMacNotSignedIn
onqueue_updateForCloudPairing
unlockEnabled
waitingForCloudPairing
handleSuccessfulPairing
userInfoForNoWristDetectionNoPasscode
userInfoForNoWristDetection
userInfoForNoPasscode
userInfoForNoCommunincation
sendState
userInfoForNotCloudPaired
setupError
watchExistedInUnlockList
lastSeenWatchDate
remoteLTKHash
keyDeviceModel
companionDeviceModel
keyExchangeInterval
tokenExchangeInterval
keyDeviceLocked
upsellDevice
responseTimeout
responseTimeoutFromServer
messageTimeout
messageTimeoutFromServer
setupRetryDevice
watchOldLTKSyncStatus
watchNewLTKSyncStatus
receivedSetupACK
receivedTokenACK
ltkTimer
handleLTKTimerFired
setLtkTimer:
handleEscrowSessionRequest
ltkTimerRetryCount
setLtkTimerRetryCount:
restartLTKTimer
userInfoForMissingLTK
setKeyDeviceLocked:
handleKeyDeviceLocked
keyExchangeDate
setKeyExchangeInterval:
handleSetupSessionCreated:fromDeviceID:
tokenExchangeDate
setTokenExchangeInterval:
handleSetupCreateRecord:
userInfoForWatchLocked
setSessionCreatedMessage:
sessionCreatedMessage
hasFailureReasons
failureReasons
userInfoCompanionViewNotSyncing
userInfoForiPhoneNeedsUnlock
handleDeviceAuthenticationSetupRequest
hasWatchOldLTKSyncStatus
hasWatchNewLTKSyncStatus
setRemoteLTKHash:
userInfoForOldProtocol
userInfoForNewProtocol
sendCreateSecretWithStepData:sessionID:
ltkSyncing
finalizeEscrowPairing:
hasPairedDeviceID
setCompanionDeviceModel:
setUnlockEnabled:
proxyBluetoothID
setWaitingForCloudPairing:
setSendState:
setupRequestVersion
setRemoteNeedsLTK:
setKeyExchangeDate:
setSetupError:
setSetupMessageIdentifier:
setTokenExchangeDate:
setTokenMessageIdentifier:
setupMessageIdentifier
tokenMessageIdentifier
setReceivedSetupACK:
setReceivedTokenACK:
updateForCloudPairing
notifyDelegateKeyDeviceIsLocked
invalidateLTKTimer
setKeyDeviceModel:
setResponseTimeout:
setResponseTimeoutFromServer:
setMessageTimeout:
setMessageTimeoutFromServer:
_upsellDevice
_setupRetryDevice
_placeholder
_waitingForCloudPairing
_keyDeviceLocked
_unlockEnabled
_receivedSetupACK
_receivedTokenACK
_errorType
_watchOldLTKSyncStatus
_watchNewLTKSyncStatus
_passcode
_sendState
_keyDeviceModel
_companionDeviceModel
_setupError
_ltkTimer
_sessionCreatedMessage
_responseTimeout
_responseTimeoutFromServer
_messageTimeout
_messageTimeoutFromServer
_ltkTimerRetryCount
_keyExchangeDate
_tokenExchangeDate
_keyExchangeInterval
_tokenExchangeInterval
_remoteLTKHash
_setupMessageIdentifier
_tokenMessageIdentifier
Tq,N,V_sendState
T@"NSString",&,N,V_keyDeviceModel
T@"NSString",&,N,V_companionDeviceModel
T@"NSError",&,N,V_setupError
TB,N,V_keyDeviceLocked
TB,N,V_unlockEnabled
T@"NSObject<OS_dispatch_source>",&,N,V_ltkTimer
TB,N,V_waitingForCloudPairing
TI,N,V_errorType
T@"SDUnlockSetupSessionCreated",&,N,V_sessionCreatedMessage
Tq,N,V_responseTimeout
Tq,N,V_responseTimeoutFromServer
Tq,N,V_messageTimeout
Tq,N,V_messageTimeoutFromServer
Tq,N,V_ltkTimerRetryCount
T@"NSDate",&,N,V_keyExchangeDate
T@"NSDate",&,N,V_tokenExchangeDate
Td,N,V_keyExchangeInterval
Td,N,V_tokenExchangeInterval
T@"NSData",&,N,V_remoteLTKHash
Ti,N,V_watchOldLTKSyncStatus
Ti,N,V_watchNewLTKSyncStatus
TB,N,V_receivedSetupACK
TB,N,V_receivedTokenACK
T@"NSString",&,N,V_setupMessageIdentifier
T@"NSString",&,N,V_tokenMessageIdentifier
T@"NSString",C,N,V_passcode
TB,N,V_upsellDevice
TB,N,V_setupRetryDevice
TB,N,V_placeholder
sortedArrayUsingSelector:
initWithContacts:iconData:atIndex:cacheLookupKey:
_contacts
T@"NSArray",R,&,N,V_contacts
setHasNeedsImageData:
hasNeedsImageData
setHasUsingRecord:
_key
_usingRecord
TB,N,V_usingRecord
T@"NSData",&,N,V_key
initWithNode:protocol:flags:kind:
helperConnection
setHelperConnection:
setBundleID:
nodes
sidebarNodes
nodeBrowser:nodesChangedForParent:protocol:error:
copyRootNode
mode
bundleID
boostMessage
delegate
_rootNode
_mode
_nodeBrowsers
_options
_transaction
_bundleID
_kind
_objectKey
_boostMessage
_delegate
_connection
_isEntitled
T@"NSString",C,N,V_bundleID
T@"SDXPCHelperConnection",W,N,V_helperConnection
T@"NSString",R,C,V_kind
T@"NSString",C,V_objectKey
T@"NSDictionary",C
T@"NSObject<OS_xpc_object>",&,V_boostMessage
T@"<SDNetworkBrowserDelegate>",W,V_delegate
T@"NSObject<OS_xpc_object>",&,V_connection
T@"NSNumber",&,V_isEntitled
setContactIDs:
_imageTitle
_image
_cacheLookupKey
_contactIDs
T@"NSString",R,&,N,V_imageTitle
T@"NSData",R,&,N,V_imageData
T^{CGImage=},R,N,V_image
T@"NSString",&,N,V_cacheLookupKey
T@"NSArray",&,N,V_contactIDs
setStashToken:
_stashToken
T@"NSData",&,N,V_stashToken
appLinksWithURL:limit:error:
targetApplicationRecord
urlIsCloudDocument:
dictionaryRepresentation
numberWithUnsignedInt:
allocWithZone:
setHasVersion:
hasVersion
setHasErrorCode:
readFrom:
writeTo:
copyTo:
mergeFrom:
_errorCode
_version
_has
TB,N
TI,N,V_version
TI,N,V_errorCode
T@"NSString",&,N,V_requestID
safariBundleID
weakObjectsHashTable
observers
methodForSelector:
deviceNameForDeviceID:
notificationTimer
dismissNotification
suggestionNotificationTimedOut
notifyObservers:
setNotificationTimer:
showAuthorizationRequestNotificationWithDeviceID:appName:appIcon:completion:
showSuggestionNotificationWithDevice:
showMacUnlockedNotificationWithDuration:
showSetupRetryNotificationWithDevice:
showFileRadarNotificationWithCompletion:
restartNotificationTimer:
invalidateNotificationTimer
setNotificationModel:
setObservers:
promptInfo
setPromptInfo:
radarNotificationCompletion
setRadarNotificationCompletion:
_doubleClickListener
_cancelListener
_notificationModel
_observers
_promptInfo
_notificationTimer
_radarNotificationCompletion
T@"NSHashTable",&,V_observers
T@"NSDictionary",&,V_promptInfo
T@"NSObject<OS_dispatch_source>",&,V_notificationTimer
T@?,C,V_radarNotificationCompletion
T@"SFAutoUnlockNotificationModel",&,N,V_notificationModel
accountID
setAccountID:
bluetoothDiscovery
setBluetoothDiscovery:
bonjourPTRDiscovery
setBonjourPTRDiscovery:
bonjourTXTRecordDiscovery
setBonjourTXTRecordDiscovery:
bonjourResolveComplete
setBonjourResolveComplete:
tcpConnectionComplete
setTcpConnectionComplete:
tlsHandshakeComplete
setTlsHandshakeComplete:
identityQueryComplete
setIdentityQueryComplete:
totalDiscovery
setTotalDiscovery:
verifiableIdentity
setVerifiableIdentity:
_accountID
_sessionID
_modelName
_bluetoothDiscovery
_bonjourPTRDiscovery
_bonjourTXTRecordDiscovery
_bonjourResolveComplete
_tcpConnectionComplete
_tlsHandshakeComplete
_identityQueryComplete
_totalDiscovery
_verifiableIdentity
T@"NSString",&,V_accountID
T@"NSString",&,V_sessionID
T@"NSString",&,V_modelName
T@"NSNumber",&,V_bluetoothDiscovery
T@"NSNumber",&,V_bonjourPTRDiscovery
T@"NSNumber",&,V_bonjourTXTRecordDiscovery
T@"NSNumber",&,V_bonjourResolveComplete
T@"NSNumber",&,V_tcpConnectionComplete
T@"NSNumber",&,V_tlsHandshakeComplete
T@"NSNumber",&,V_identityQueryComplete
T@"NSNumber",&,V_totalDiscovery
T@"NSNumber",&,V_verifiableIdentity
substringToIndex:
valueWithNonretainedObject:
intersectsSet:
makeActivatedConnection
monogramImageDataForContact:style:diameter:monogramsAsFlatImages:isContactImage:
monogramImagesForMultipleContacts:style:diameter:monogramsAsFlatImages:
groupMonogramImageDataForContacts:style:diameter:monogramsAsFlatImages:processOppositeBackgroundStyle:
nickname
setMiddleName:
stringFromContact:
longValue
appendBytes:length:
bundleForClass:
resourceURL
URLWithString:
defaultWorkspace
openSensitiveURL:withOptions:
initWithServiceType:
debugInfoRequested:
activityContinuationPayloadSent:
servicesContainIdentifier:
publish
_setIncludesAWDL:
getInputStream:outputStream:
initWithInputStream:outputStream:isClient:
initWithAuthorData:streamHandler:
getStreamsWithCompletionHandler:
unpublish
publishTimerFired:
initWithDomain:type:name:port:
scheduleInRunLoop:forMode:
publishWithOptions:
restartPublishTimer
removeFromRunLoop:forMode:
managerID
initWithStreamHandler:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
registerConnectedStreams
unregisterConnectedStreams
addService:
removeService:
registerManager:
unregisterManager:
service
setService:
managers
setManagers:
companionServices
setCompanionServices:
incomingStreams
setIncomingStreams:
continuationStreams
setContinuationStreams:
connectedStreams
setConnectedStreams:
publishTimer
setPublishTimer:
_serviceType
_managers
_companionServices
_incomingStreams
_continuationStreams
_connectedStreams
_publishTimer
T@"NSNetService",&,V_service
T@"NSMutableDictionary",&,V_managers
T@"NSMutableArray",&,V_companionServices
T@"NSMutableArray",&,V_incomingStreams
T@"NSMutableDictionary",&,V_continuationStreams
Tq,V_connectedStreams
T@"NSTimer",&,V_publishTimer
T@"NSString",&,V_serviceType
descriptionWithLevel:
_ensureClientStopped
_ensureServerStopped
_uiStartWithDevice:viewControllerName:xpcEndpoint:label:unlessApps:extraInfo:
_uiStartRepair:flags:
_uiStartSetupiOS:autoStart:
_uiStartSetupB238:extraInfo:
_uiStartWithDevice:viewControllerName:label:unlessApps:extraInfo:
_uiStartHomeKitDeviceDetectedWithURL:
_ensureClientStarted
_ensureServerStarted
_repairEnsuredStarted
_repairEnsuredStopped
_iTunesAccountsChanged
_appleAccountSignIn:
_hsa2Changed
_uiLockStatusChanged
_screenStateChanged
_wifiStateChanged
_scanTimerFired
_watchFound:
_resetTriggers
_postDeviceSetupNotificationForDevice:present:
_uiStopIfNeededWithDevice:
_screenLocked
fastScanCancel:
isProximitySetupToNewDeviceAllowed
_uiStartPair:extraInfo:
_uiStartAppleTVSetup:extraInfo:
_launchAppWithMachServiceName:
_repairSilentStart:
_uiStartSetupWHA:
_uiStartAuthenticateAccounts:
isWiFiPasswordSharingAllowed
_shouldOfferPassword:
_uiStartWiFiPasswordSharing:
_uiStartWithDevice:viewControllerName:xpcEndpoint:label:extraInfo:
_uiStartForMacWithDevice:label:extraInfo:
_watchFastScanStop
_watchFastScanStartIfAllowed:
_uiStartSetupWatch:
estimatedRSSI
_pinPairHandleRequest:
dismissPinDialogWithToken:
setSfService:
_pinPairHandleShowPIN:
setShowPINHandler:
_pinPairHandleHidePIN
handleServerRequest:
mediaRemoteServiceProxy
showPinDialogWithOptions:completion:
_repairHandleManateeChanged
createConnectionForEnabledEnterpriseConfiguration
lastDisconnectError
_repairVPNError:
_repairProblemFlagsChanged
setStatusHandler:
setProblemFlags:
_repairHandleCompletion
setProgressHandler:
_repairProblemCheck
invalidateWithFlags:
_repairSilentProgress:info:
foundTicks
setTriggerMs:
_repairUpdateIDSCache
setOsVersion:
extractParameter:inString:
setAdvertisementFields:
lastObject
_uiStartProxCardKitTest:extraInfo:
T@"SDSetupAgent",R,N
_openSetupURL:
_pwsHandleUserResponse:device:info:
_pwsHandleProgressEvent:info:
testSetupUIiOS:
preventRepair
_bleAuthTagFilter
_pbsMediaService
_pinPairDialogToken
_pinPairService
_pinPairSession
_pinPairUUID
_profilesNotifyToken
_pwsAutoGrantingEnabled
_pwsGrantingEnabled
_scanEligible
_scanSeconds
_setupURL
_shouldScan
_triggeredUIAppleTVPair
_triggeredUIAppleTVSetup
_renableB238SetupAfterWiFi
_triggeredUIB238Setup
_triggeredUIiOSSetup
_triggeredUIRepair
_triggeredUIWatchSetup
_triggeredUIWHASetup
_triggeredUIAuthenticateAccounts
_vpnCnx
_watchFastScanLastEndTicks
_watchFastScanTimer
_watchSetupDevices
_watchMigrationEnabled
_watchMigrationLastTicks
_watchSetupEnabled
_watchSetupScanner
_cdpEnabled
_iTunesNotifyToken
_manateeMonitor
_manateeProblem
_problemFlags
_problemNotifyToken
_repairEnabled
_repairService
_repairSession
_repairSilent
_repairTimer
_wifiHealthMonitor
_wifiBad
_wifiBad8021x
_prefRepairAccounts
_prefRepairHomeKit
_prefRepairVPN
_prefRepairWiFi
_preventRepair
TB,N,V_preventRepair
setAccelerometerUpdateInterval:
motionManager
baseAccelerationSet
handleNewAccelerometerData
setBaseAccelerationSet:
accelerometerData
acceleration
setBaseAcceleration:
startAccelerometerUpdatesToQueue:withHandler:
activityManager
handleActivityDetected:
startActivityUpdatesToQueue:withHandler:
checkActivityState
checkStepState
setMotionDetected:
stopAccelerometerUpdates
setMotionManager:
stopActivityUpdates
setActivityManager:
logType
handlePastActivities:withStartDate:
queryActivityStartingFromDate:toDate:toQueue:withHandler:
pedometerManager
handlePastPedometerData:
queryPedometerDataFromDate:toDate:withHandler:
baseAcceleration
setAccelerometerMotion:
shouldUseAccelerometerMotion
handleMotionDetected:
confidence
stationary
motionTimer
restartMotionTimer
invalidateMotionTimer
walking
running
cycling
automotive
handlePastActivitiesForPhoneAutoUnlock:withStartDate:
handlePastActivitiesForPairedUnlock:
hasMotion:
setActivityMotion:
laterDate:
setCheckedActivityData:
numberOfSteps
numberOfPushes
setCheckedStepData:
checkedStepData
checkedActivityData
motionDetectedHandler
setMotionTimer:
accelerometerMotion
activityMotion
setLogType:
setPedometerManager:
handlerQueue
setHandlerQueue:
_motionDetected
_accelerometerMotion
_activityMotion
_baseAccelerationSet
_checkedActivityData
_checkedStepData
_motionDetectedHandler
_logType
_motionTimer
_motionManager
_pedometerManager
_activityManager
_handlerQueue
_baseAcceleration
Tq,N,V_type
T@"NSObject<OS_os_log>",&,N,V_logType
TB,N,V_baseAccelerationSet
TB,N,V_accelerometerMotion
TB,N,V_activityMotion
T@"NSObject<OS_dispatch_source>",&,V_motionTimer
T@"CMMotionManager",&,N,V_motionManager
T@"CMPedometer",&,N,V_pedometerManager
T@"CMMotionActivityManager",&,N,V_activityManager
T{?=ddd},N,V_baseAcceleration
TB,N,V_checkedActivityData
TB,N,V_checkedStepData
TB,N,V_motionDetected
T@"NSObject<OS_dispatch_queue>",&,N,V_handlerQueue
T@?,C,N,V_motionDetectedHandler
T@"NSDate",C,N,V_wristOnDate
notifyClientForEvent:withProperty:
requireAWDL
set_socketStreamProperties:
setTimeoutIntervalForRequest:
setRequestCachePolicy:
set_connectionCachePurgeTimeout:
setConnectionProxyDictionary:
setHTTPMaximumConnectionsPerHost:
setHTTPShouldUsePipelining:
set_allowsTCPFastOpen:
setTLSMaximumSupportedProtocol:
setHTTPAdditionalHeaders:
mainQueue
sessionWithConfiguration:delegate:delegateQueue:
storePropertyValue:forKey:
donateTransferInteractionToDuet
cancelSendingClassroom
startZipping
logInterfaceUsedForSending:
parseAskResponse:
retryRequestForError:
parseDiscoverResponse:
didStartSendingAskBodyData
didFinishSendingAskBodyData
didFail:
didFinishLoading
shouldCancelTransferForError:
_CFURLResponse
connectionOverP2P:
transactionMetrics
_remoteAddressAndPort
_localAddressAndPort
secureConnectionStartDate
fetchStartDate
secureConnectionEndDate
responseEndDate
protectionSpace
authenticationMethod
serverTrust
credentialForTrust:
evaluateReceiverTrust:completion:
credentialWithIdentity:certificates:persistence:
copyReadStream
sendRequest:
host
port
addHashesAndValidationRecordToRequest:
askRequestClientBundleID
requestWithURL:
setHTTPMethod:
setValue:forHTTPHeaderField:
discoverBodyDataInFormat:
askBodyDataInFormat:
zipCompressionType
_CFURLRequest
uploadTaskWithRequest:fromData:
uploadTaskWithStreamedRequest:
setSkipReadableCheckFiles:
setDisableAdaptiveCompressionForZipping:
setSourceFiles:
temporaryWeblocURL:
dataWithContentsOfURL:
webURLFromInternetLocationFile:
internetLocationFile:
generatePreviewForFileURL:
appendFileURL:withBase:toItems:
convertMediaItemsWithCompletionHandler:
startSendingItems:withProperties:toPersonWithID:clientBundleID:airDropClientDelegate:
cancelSendingItemsToPersonWithID:sessionID:clientBundleID:
fileURLWithPath:isDirectory:
startPublishingProgress
startSendingClassroom
removeFileIconsFromProperties
validateAirDropItemsWithCompletionHandler:
createSession
splitOutFileURLs
readingIntentWithURL:options:
initWithFilePresenter:
startSending
coordinateAccessWithIntents:queue:byAccessor:
finishTasksAndInvalidate
initWithOpaqueRepresentation:
receiverDeviceModelNameSuggestsMacPlatform
setOutOfBandHints:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
copyReceiverPublicKey
releasePeerToPeerIfPossible:
realPathURL:
tmpDirectory
receiverMediaCapabilities
discoveryMetrics
shouldPublishProgress
_askResponse
_askTask
_cancelled
_connectionKey
_discoverResponse
_discoverTask
_failCount
_fileIcon
_fileURLs
_fileURLToConversionNeeded
_generatedFiles
_mediaFormatConversionDestinations
_metric
_otherStuff
_p2pRetained
_providedStream
_receiverData
_receiverSupportsDVZip
_sendingLivePhotoJPEGs
_serverTrust
_serverURL
_shouldPublishProgress
_smallFileIcon
_tmpDirectoryToCleanUp
_uploadFinished
_uploadResponse
_uploadTask
_weblocURLs
_xpcHelperConnection
_zipperFinished
T@"NSDictionary",C,V_discoveryMetrics
TB,N,V_shouldPublishProgress
T^{__SecTrust=},R
T@"<SDAirDropClientDelegate>",W,V_delegate
setErrorString:
setResetReason:
setHasResetReason:
hasResetReason
hasErrorString
resetReason
_errorString
_resetReason
TI,N,V_resetReason
T@"NSString",&,N,V_errorString
userResponse
needsAction
loadAllPersistedTransfers
updatedTransfer:
removedTransfer:
transferIdentifierToHandler
transferIdentifierToTransfer
kvoObservingKeys
notifyObserversOfRemovedTransfer:
cleanUpTransfer:
transferURLForTransfer:
cleanUpURL:
initWithIdentifier:initialInformation:
updateWithInformation:
itemTypesForTransfer:
metaData
setItems:
items
determineHandlerForTransfer:
setHandler:forTransfer:
canAutoAccept
setDidAutoAccept:
setTransferState:forTransfer:shouldNotify:
possibleActions
transfer:actionTriggeredForAction:
transferState
failTransfer:withState:failureReason:
transferUserResponseUpdated:
notifyObserversOfUpdatedTransfer:
customDestinationURL
classroomDelegate
failureReason
removeTransfer:shouldCleanup:
transferTypes
actionSelected:
arrayByAddingObjectsFromArray:
initWithTransfer:
canHandleTransfer
setTransferState:forTransfer:shouldNotify:shouldCleanup:
handlerFailedForTransfer:
transferUpdated
setTransferState:
persistedTransfersBaseURL
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
initWithType:subtype:isFile:
incrementCount
rawFiles
completedURLs
isFileURL
URLOverrideForURL:
applicationsAvailableForOpeningURL:
applicationIdentifier
T@"NSObject<SDAirDropAlertManagerDelegate>",W,N
setTransferIdentifierToTransfer:
setTransferIdentifierToHandler:
setKvoObservingKeys:
_classroomDelegate
_transferIdentifierToTransfer
_transferIdentifierToHandler
_kvoObservingKeys
T@"NSMutableDictionary",&,V_transferIdentifierToTransfer
T@"NSMutableDictionary",&,V_transferIdentifierToHandler
T@"NSArray",&,V_kvoObservingKeys
T@"NSObject<SDAirDropAlertManagerDelegate>",W,N,V_classroomDelegate
T@"NSObject<SDAirDropAlertManagerDelegate>",W,N,Vdelegate
initWithDelegate:queue:
addObservers
_activate
state
shouldStart
encryptedAdvertisingInformation
startGoodbyeTimer
preventIdleSleepAssertion
startAdvertisingOfType:withData:withOptions:
invalidateGoodbyeTimer
stopAdvertisingOfType:
releaseIdleSleepAssertion
restart
uniqueID
cachedDecryptionKeyForDeviceIdentifier:
isValidKey
setValidKey:
lastUsedCounter
setKeyCounter:
pairedDevicesChanged:
_enumerateRemoteObjectProxiesUsingBlock:
remoteObjectProxyForConnection:usingBlock:
enumerateRemoteObjectProxiesUsingBlock:
establishConnectionWithCompletionHandler:
loginIDWithOptions:completionHandler:
peerForUUID:completionHandler:
pairedSFPeerDevicesWithOptions:completionHandler:
advertiseAdvertisementPayload:options:withErrorHandler:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
activityPayloadForAdvertisementPayload:command:requestedByDevice:withCompletionHandler:
didSendPayloadForActivityIdentifier:toDevice:error:
setClass:forSelector:argumentIndex:ofReply:
activeConnections
resetStateRequested:
systemWillSleep:
removeObserver:
goodbyeTimeoutFired:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
createAdvertisingInformation
dataWithCapacity:
setLength:
mutableBytes
getTagAndCounterWhileEncryptingBytesInPlace:forAdvertisementWithVersion:handler:
sharedNearbyAgent
update
continuity:didStopAdvertisingOfType:withError:
localizedDescription
updateAdvertiser
sendActivityPayloadWithAdvertisementData:forAdvertisementPayload:activityIdentifier:activityPayload:
appleID
idsDeviceFromBTIdentifier:
allPeerBTIdentifiers
continuityDidUpdateState:
continuity:didStartAdvertisingOfType:
continuity:didStopAdvertisingOfType:
continuity:didFailToStartAdvertisingOfType:withError:
continuity:didStartScanningForType:
continuity:didStopScanningForType:
continuity:didFailToStartScanningForType:withError:
continuity:didDiscoverType:withData:fromPeer:
continuity:didLosePeer:type:
continuity:didStartTrackingPeer:type:error:
continuity:didStopTrackingPeer:type:
T@"SDActivityAdvertiser",R,N
stopForReason:
resumeForReason:
activityServiceDevicesChanged:
_remoteObjectProxyForConnection:usingBlock:
machServiceName
exportedInterface
remoteObjectInterface
shouldAcceptNewConnection:
connectionEstablished:
connectionInvalidated:
removeObservers
consoleUserChanged:
continuity:continuityDidStopAdvertisingOfType:withError:
isAdvertising
_versionByte
_monitor
_continuity
_goodbyeTimerInterval
_goodbyeTimer
_shouldNotAdvertiseRequesters
_advertisingEnabled
_isAdvertising
_advertisingTransaction
_rawAdvertisementData
_advertisementData
_powerAssertionID
_currentAdvertisementPayload
_currentAdvertisementOptions
_currentErrorHandler
TB,R,N,V_isAdvertising
checkResourceIsReachableAndReturnError:
openCompletedItemsWithFilesApp
saveCompletedItemsToiCloudDrive
useOpenWithText
_iCloudDriveURL
_action
_useOpenWithText
T@"SFAirDropAction",R,N
TB,N,V_useOpenWithText
activityService
accounts
loginID
isActivityContinuationAllowed
supportsHandoff
setActivityService:
setShouldStart:
setAllPeerBTIdentifiers:
setAppleID:
_shouldStart
_allPeerBTIdentifiers
T@"IDSService",&,N,V_activityService
TB,N,V_shouldStart
T@"NSArray",&,N,V_allPeerBTIdentifiers
T@"NSString",C,N,V_appleID
T@"<SDAirDropStatusDelegate>",W,V_delegate
sharedTransport
sharedController
initWithTransport:magnetTransport:keyManager:
addDelegate:
cachedDeviceWiFiState
hashTableWithOptions:
sessionManagerQueue
onqueue_start
addNotificationsObservers
setPrimaryClient:
deviceNearby
initializeAttemptState
initializeCaptureBlock
updateAdvertising
loadPresentedBluetoothError
loadPresentedWiFiError
setCachedWatchWiFiState:
autoUnlockEligibleDevicesWithCloudPairing:
updateApproveBluetoothIDs
initWithQueue:
setLocalDeviceController:
handleBioLockout
localDeviceController
setDeviceEnteredBioLockoutHandler:
setLastUnlockDate:
setLockStateChangedDate:
handleBLEDataReceivedNotification:
keyBagLockStateChange:
handleWiFiPowerChanged:
btPipeConnectionChanged:
handleAuthenticationSessionStarted
observerTable
allObjects
session:didReceiveKeyDeviceLocked:
session:didEnableWithDevice:
session:didFailToEnableDevice:error:
session:didBeginAttemptWithDevice:
suppressAlert
completeSuccessfulAttempt
session:didCompleteUnlockWithDevice:
session:didFailUnlockWithResults:error:incrementedAttempt:
incrementedCountID
triggerCloudPairRetryWithShortRetryDeviceIDs:
modelIdentifier
minusSet:
productVersion
autoUnlockTransport
eligibleDevicesFilterCompatibleDevices:
setEligibleDevices:
notifyObserverOfFailedToEnableDevice:error:
createPairingLockSessionWithDevice:passcode:
lockPairingSessions
cancelEnablingAutoUnlockForDeviceID:
canceled
cancel
sessionID
disablePairingForDeviceID:pairingID:
enabledAutoUnlockDevicesUsingCache:
disableAutoUnlockForDevice:completionHandler:
pairingIDForWatchID:
attemptAutoUnlockForType:preventRadarNotification:
attemptAutoUnlockForType:externalACMContext:preventRadarNotification:bundlePath:appName:reply:
setAttemptActivatedHandler:
setAttemptType:
setAttemptBundlePath:
setAttemptAppName:
setAttemptExternalACMContext:
setPreventRadarNotification:
generateAttemptForType:
attemptAutoUnlock
setName:
setModelName:
setUniqueID:
notifyObserverOfAttemptBeganWithDevice:
setCachedMetrics:
notifyObserversOfUnlockFailureWithResults:error:
attemptExternalACMContext
setHintToken:
setResults:
notifyObserversOfUnlockCompletionWithDevice:
setAttemptStart:
setPrewarmStart:
connectedBluetoothDevices
timeSinceLastMachineWake
lastSleepType
setLastSleepType:
setTimeSinceLastMachineWake:
setConnectedBluetoothDevices:
attemptPrewarmed
setAttemptPrewarmed:
isBeingUsedForSiri
lockAuthSessions
doNotPostUnlockConfirmation
setDoNotPostUnlockConfirmation:
completeAttemptIfNecessary
failedAttemptBeforeStarting:metricErrorString:
attemptActivatedHandler
attemptCount
isBluetoothEnabled
isWifiEnabled
attemptType
presentedWiFiError
isFaceIDEnabled
disableAutoUnlockForAllDevices
errorCodeForBluetoothEnabled:wifiEnabled:faceIDEnabled:
errorStringForBluetoothEnabled:wifiEnabled:faceIDEnabled:
shouldShowErrorForBluetoothEnabled:
isActiveDeviceNearby
remotePeer
isKeyBagLocked
dropEscrowRecordsIfNecessary
lastUnlockDate
lastLockedByRelock
setAttemptInProgress:
setAttemptID:
deviceID
setScanAutoUnlockDevices:
setAutoUnlockActive:
supportsHEIC
createLockSessionWithWatchDevice:
generateAppIconImageWithOptions:
shouldPrewarmAttempt
attemptAutoUnlockForType:
setIsBeingUsedForSiri:
setSuppressAlert:
setPeriocularStatus:
aksSuccess
completeAttemptPostNotification:
attemptResults
cachedMetrics
cancelAttemptsForDeviceUnlocked
deviceUnlockedWithMask:
setAttemptDevice:
setAuthSessionError:
setIncrementedCountID:
setProxyNotAvailableForUnlock:
setScanWatchIDs:
setScanPhoneIDs:
invalidateScanner
cleanUpProxySessions
wifiStateNeedsUpdating
cancelAutoUnlockWithCancelReason:usingTool:
cancelAutoUnlock
setBool:forKey:
attemptID
setAttemptCount:
setVersion:
magnetTransport
sendProtocolBufferData:withType:timeout:option:errorHandler:
attemptDevice
stringForState:
notificationModel
disablePairingWithKeyDevice:
sendDisableMessageToDeviceID:pairingID:
setPairingID:
sendPayload:toDevice:type:sessionID:timeout:errorHandler:
initWithData:
pairingID
updateDynamicStoreEnabled
keyPairingIDForDeviceID:
keyPairingSessions
canceledPairingKeySessions
disableKeyPairingForDeviceID:
hasPairingID
deleteEscrowSecretForDeviceID:
deleteRangingKeyForDeviceID:
deviceTypeForDeviceID:
removeRemoteLTKForDeviceID:
initWithDevice:sessionID:
setPasscode:
placeholder
setPlaceholder:
suggestionManager
suggestedDeviceID
setSuggestedDeviceID:
setupRetryDeviceID
setSetupRetryDeviceID:
setSetupRetryDevice:
setUpsellDevice:
setRequestData:
logDevices
bluetoothID
setIdentifier:
setUseBTPipe:
initWithAutoUnlockDevice:sessionID:bleDevice:
setUseProxy:
attemptStart
setAttemptStartDate:
prewarmStart
setPrewarmStartDate:
supportsEncryption
setUseEncryption:
setIsAuthenticatingForSiri:
setLastLocalUnlockDate:
setExternalACMContext:
locksWithAKSTokens
setUseAKSToken:
invalidateExistingSessionsForBLEDevice:incomingSessionID:
keyAuthSessions
initWithBLEDevice:sessionID:
keysWithAKSTokens
needsArming
setLocalDeviceNeedsArming:
cachedWatchWiFiState
setWifiEnabled:
wakeGestureDates
setWakeGestureDates:
unlockedOnWristDate
setUnlockedOnWristDate:
needsStrictMotionCheck
setNeedsStrictMotionCheck:
handleMessageWithWrapper:
bluetoothIDForIDSID:
proxySessions
initWithDevice:sessionID:bleDevice:
modelIdentifierForDeviceID:
setModel:
setStartDate:
proxyErrorCode
lastProxyState
setLastProxyState:
setScanErrorString:
setProxyErrorCode:
updateStringForProxySession
setNotifiedForProxy:
setProxyDiscoverTime:
setProxyDeviceModel:
setProxyConnectionTime:
setProxyRSSI:
setAttemptTimedOut:
cachedIDSDeviceIDsForBluetoothID:
invalidateOnQueue
removeAutoUnlockNotification
keyRegistrationSessionsByDeviceID
setLocallyGenerated:
lockRegistrationSessionsByDeviceID
handleDeviceUnlocked
activeDevice
keyManager
remoteLTKForDeviceID:
initWithDeviceID:
setRemotePeer:
initializeRemotePeer
handlePairedSuccessfully
autoUnlockDeviceForDeviceID:
notifyObserverOfEnabledDevice:
setFeatureSuggestedForDeviceID:
setRetriedSetup
setFloat:forKey:
clearPhoneAutoUnlockUpsellNotification:
placeholderDevice
idsDeviceForUniqueID:
autoUnlockDeviceForIDSDevice:cloudPaired:cached:
handleLockSessionCompleted:error:
bleDevice
beginKeyRegistrationIfNecessary
handleProxySessionCompleted:error:
handleRegistrationFailedKeyLocked
handleRegistrationCompletedSuccessfully:
isLocallyGenerated
setNeedsArming:
autoUnlockDevice
canceledAuthLockSessions
setLastSuccessfulDevice:
handleCanceledAfterSuccess
performRegistrationIfNecessaryForLockSession:error:
otherSessionCancel
logResults
wifiRangingResults
createRadarForError:devices:rangingResults:
decrementAttemptCount
invalidateAttempt
registerRemotePeerIfNecessary
results
hintToken
connectionTime
baseResultsDictionaryForError:
handleLockConnectionStartedForSession:
handleProxyConnectionStartedForSession:
setChosenDevice:
notifiedForProxy
incrementAttemptCount
setOtherSessionCancel:
shouldShowErrorForWiFiEnabled:
scanTimer
scanner
setTimeout:
setTimeoutHandler:
restartScanTimer:
model
proxyRSSI
proxyDiscoveryTime
notifyObserverOfKeyDeviceLockWithDevice:
lockDevice
handleConfirmationFailed
unlockSucceeded
updateLocalLTK
setIdsMacCountCache:
setNearbyDeviceChangedDate:
createPairingKeySessionWithIdentifier:deviceID:requestData:
cancelParallelRegistrationSessionsForDeviceID:newSessionID:
createRegistrationKeySessionWithIdentifier:deviceID:requestData:locallyGenerated:
handleRemoteRegistrationRequested
createRegistrationLockSessionWithDeviceID:sessionID:requestData:
handleRelockMessage
hasSessionID
initWithUUIDBytes:
payload
setScanner:
setDiscoveryFlags:
setScanRate:
handleFoundPeer:
setDeviceFoundHandler:
setChangeFlags:
setDeviceChangedHandler:
setInvalidationHandler:
setByAddingObjectsFromSet:
setDeviceFilter:
handleBLEScanTimerFired
setExtendedTimer:
invalidateScanTimer
scanWatchIDs
handleFoundBLEDevice:
scanPhoneIDs
cancelAllLockSessionsForScanTimeout
handleScanTimerFired
setScanTimer:
scanErrorString
proxyDeviceModel
proxyDiscoverTime
authSessionError
proxyNotAvailableForUnlock
scanAutoUnlockDevices
advertisementFields
advertisingEnabled
watchLockedAndOnWrist
serviceClients
unlockUpdateAdvertising:mask:
currentlyAdvertising
setAdvertisingChangedDate:
setCurrentlyAdvertising:
idsMacCountCache
idsMacDeviceIDs
useBTPipe
messageType
errorCode
handleDecryptionFailure:
addDeviceIDMissingSessionKey:
hasEncryptedPayload
encryptedPayload
authTag
nonce
decryptMessage:authTag:nonce:bluetoothID:cachedDevices:errorCode:
setErrorCode:
setMessageType:
setPayload:
sendUnlockData:toBLEDevice:completion:
onqueue_keyBagLockStateChange:
handleKeyBagLockStateChanged
behaviorChangedAfterUpgrade
showPhoneAutoUnlockNotificationWithBodyText:isUpsell:
setPipeConnectionChangedDate:
updateLTKs
pairedDeviceID
tearDownAWDLIfNecessary
lastUnlockedByWatch
setMagnetLinkTimer:
magnetLinkTimer
deviceCurrentlyUnlockedByWatch
setLastLockedByRelock:
showPhoneAutoRelockNotification
setBluetoothErrorCount:
setPresentedBluetoothError:
savePresentedBluetoothError
presentedBluetoothError
bluetoothErrorCount
wifiErrorCount
setPresentedWiFiError:
savePresentedWiFiError
setWifiErrorCount:
synchronize
setStateHandle:
lockStateChangedDate
loadPreviousSessionIDs
previousSessionIDs
setPreviousSessionIDs:
transportDidChangeDevices:
transportDidChangeNearbyState:
transport:didReceivePayload:type:deviceID:
transport:didReceivePairingRequestWithSessionID:deviceID:requestData:
transport:didReceiveRegistrationRequestWithSessionID:deviceID:requestData:
transport:didReceiveKeyOriginatingRegistrationRequestWithSessionID:deviceID:requestData:
transport:didReceiveMessageACKForIdentifier:
transport:didReceiveDisableMessage:fromDeviceID:
sessionDidReceiveKeyDeviceLocked:
session:didCompleteWithError:
sessionDidStartConnection:
sessionDidSendInitialData:
isDisplayOff
idsController:didReceiveProtoData:forType:
idsController:didReceiveProtoData:forType:deviceID:
idsControllerNearbyStateChanged:
idsControllerSpaceDidBecomeAvailable:
registerObserver:
unregisterObserver:
repairCloudPairing
phoneAutoUnlockSupportedByDevice:
eligibleDevicesRequestFromBundleID:withCompletionHandler:
enableAutoUnlockWithDevice:passcode:
cancelEnablingAllDevices
cancelEnablingAutoUnlockForDevice:
prewarmAutoUnlock
attemptAutoUnlockForSiri
attemptAutoUnlockWithoutNotifyingWatch
completeAutoUnlockWithNotification:
donateDeviceUnlockedWithMask:
logUnintentionalAutoUnlockAttempt:
requestRelock
autoUnlockStateWithCompletionHandler:
authPromptInfoWithCompletionHandler:
handleDisableMessageForKey:fromDeviceID:
handleDisableMessageForLock:fromDeviceID:
createKeySessionWithBLEDevice:sessionID:wrapper:useEncryption:
createProxySessionWithDeviceID:
clearAllKeysWithTokens
armDevicesWaitingForUnlock
startScannerWithWatchBluetoothIDs:phoneBluetoothIDs:
unlockEnabledForPeer:
proxyAdvertisementForPeer:
watchLockedOnWristForPeer:
idsMacCount
addServiceClientForIdentifier:
removeServiceClientForIdentifier:
screenLockUnlocked:
clearPhoneAutoUnlockNotification:
upsellBehaviorChangedAfterUpgradeIfNecessary
upsellPhoneAutoUnlock
shouldNotify
handleUnexpectedDisablement:
handleLockStateChanged
wristStateChanged:
pipeConnectionChanged:
handleNearbyStateChanged
handleDisplayStateChanged:
handlePairedDeviceLockStateChanged
grabLanguageAssertionForAutoRelock
releaseLanguageAssertionForAutoRelock
setUpMagnetLinkTimer
cancelMagnetLinkTimer
handleBluetoothPowerChanged:
generateStateDump
storePreviousSessionID:
previousSessionExists:
setState:
stateHandle
setAwdlInfo:
setSessionManagerQueue:
setObserverTable:
setSuggestionManager:
setLockAuthSessions:
setCanceledPairingKeySessions:
setCanceledAuthLockSessions:
setKeyAuthSessions:
setLockPairingSessions:
setKeyPairingSessions:
setProxySessions:
setLocksWithAKSTokens:
setKeysWithAKSTokens:
setKeyRegistrationSessionsByDeviceID:
setLockRegistrationSessionsByDeviceID:
setServiceClients:
watchUnlockEnabled
setWatchUnlockEnabled:
previousMacAddressData
setPreviousMacAddressData:
previousNearbyState
setPreviousNearbyState:
nearbyPushTimer
setNearbyPushTimer:
extendedTimer
attemptBundlePath
attemptAppName
proxyConnectionTime
eligibleDevices
advertisingChangedDate
wristStateChangedDate
setWristStateChangedDate:
nearbyDeviceChangedDate
pipeConnectionChangedDate
previousConnectedState
setPreviousConnectedState:
autoRelockAssertionTimerActive
setAutoRelockAssertionTimerActive:
setCachedDeviceWiFiState:
setWifiStateNeedsUpdating:
preventRadarNotification
iconTransferStore
setIconTransferStore:
setLastUnlockedByWatch:
periocularStatus
clManager
setClManager:
isSignedIntoPrimaryiCloudAccount
setIsSignedIntoPrimaryiCloudAccount:
setIsFaceIDEnabled:
setIsWifiEnabled:
setIsBluetoothEnabled:
setIsActiveDeviceNearby:
_attemptInProgress
_watchUnlockEnabled
_previousNearbyState
_attemptPrewarmed
_extendedTimer
_notifiedForProxy
_proxyNotAvailableForUnlock
_presentedBluetoothError
_presentedWiFiError
_currentlyAdvertising
_previousConnectedState
_autoRelockAssertionTimerActive
_cachedDeviceWiFiState
_cachedWatchWiFiState
_wifiStateNeedsUpdating
_useBTPipe
_preventRadarNotification
_lastUnlockedByWatch
_lastLockedByRelock
_doNotPostUnlockConfirmation
_suppressAlert
_needsArming
_isBeingUsedForSiri
_needsStrictMotionCheck
_proxyRSSI
_state
_attemptExternalACMContext
_awdlInfo
_sessionManagerQueue
_observerTable
_suggestionManager
_lockAuthSessions
_canceledPairingKeySessions
_canceledAuthLockSessions
_keyAuthSessions
_lockPairingSessions
_keyPairingSessions
_proxySessions
_locksWithAKSTokens
_keysWithAKSTokens
_keyRegistrationSessionsByDeviceID
_lockRegistrationSessionsByDeviceID
_serviceClients
_previousMacAddressData
_nearbyPushTimer
_prewarmStart
_attemptStart
_attemptDevice
_attemptType
_attemptBundlePath
_attemptAppName
_attemptActivatedHandler
_scanTimer
_proxyDiscoverTime
_scanErrorString
_authSessionError
_proxyErrorCode
_proxyDeviceModel
_lastProxyState
_proxyConnectionTime
_scanAutoUnlockDevices
_scanWatchIDs
_scanPhoneIDs
_attemptCount
_attemptID
_incrementedCountID
_connectedBluetoothDevices
_timeSinceLastMachineWake
_lastSleepType
_eligibleDevices
_wifiErrorCount
_bluetoothErrorCount
_idsMacCountCache
_advertisingChangedDate
_wristStateChangedDate
_lockStateChangedDate
_nearbyDeviceChangedDate
_pipeConnectionChangedDate
_cachedMetrics
_previousSessionIDs
_iconTransferStore
_localDeviceController
_magnetLinkTimer
_lastUnlockDate
_periocularStatus
_clManager
_autoUnlockTransport
_magnetTransport
_keyManager
_isSignedIntoPrimaryiCloudAccount
_isFaceIDEnabled
_isWifiEnabled
_isBluetoothEnabled
_isActiveDeviceNearby
_remotePeer
TQ,N,V_stateHandle
T@"NSDictionary",C,N,V_awdlInfo
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionManagerQueue
T@"NSHashTable",&,N,V_observerTable
T@"SDAutoUnlockSuggestionManager",&,N,V_suggestionManager
T@"NSMutableDictionary",&,N,V_lockAuthSessions
T@"NSMutableArray",&,N,V_canceledPairingKeySessions
T@"NSMutableArray",&,N,V_canceledAuthLockSessions
T@"NSMutableDictionary",&,N,V_keyAuthSessions
T@"NSMutableDictionary",&,N,V_lockPairingSessions
T@"NSMutableDictionary",&,N,V_keyPairingSessions
T@"NSMutableDictionary",&,N,V_proxySessions
T@"NSMutableArray",&,N,V_locksWithAKSTokens
T@"NSMutableArray",&,N,V_keysWithAKSTokens
T@"NSMutableDictionary",&,N,V_keyRegistrationSessionsByDeviceID
T@"NSMutableDictionary",&,N,V_lockRegistrationSessionsByDeviceID
T@"NSMutableSet",&,N,V_serviceClients
TB,N,V_watchUnlockEnabled
T@"NSData",&,N,V_previousMacAddressData
TB,N,V_previousNearbyState
T@"NSObject<OS_dispatch_source>",&,N,V_nearbyPushTimer
TB,N,V_attemptPrewarmed
T@"NSDate",&,N,V_prewarmStart
T@"NSDate",&,N,V_attemptStart
TB,N,V_extendedTimer
T@"SFDeviceDiscovery",&,N,V_scanner
T@"SFAutoUnlockDevice",&,N,V_attemptDevice
Tq,N,V_attemptType
T@"NSString",&,N,V_attemptBundlePath
T@"NSString",&,N,V_attemptAppName
T@?,C,N,V_attemptActivatedHandler
T@"NSObject<OS_dispatch_source>",&,N,V_scanTimer
Td,N,V_proxyDiscoverTime
TB,N,V_notifiedForProxy
T@"NSString",&,N,V_scanErrorString
T@"NSError",&,N,V_authSessionError
Tq,N,V_proxyErrorCode
T@"NSString",&,N,V_proxyDeviceModel
Ti,N,V_proxyRSSI
Tq,N,V_lastProxyState
Td,N,V_proxyConnectionTime
TB,N,V_proxyNotAvailableForUnlock
T@"NSSet",&,N,V_scanAutoUnlockDevices
T@"NSSet",&,N,V_scanWatchIDs
T@"NSSet",&,N,V_scanPhoneIDs
Tq,N,V_attemptCount
T@"NSString",&,N,V_attemptID
T@"NSString",&,N,V_incrementedCountID
Tq,N,V_connectedBluetoothDevices
Tq,N,V_timeSinceLastMachineWake
Tq,N,V_lastSleepType
T@"NSSet",&,N,V_eligibleDevices
Tq,N,V_wifiErrorCount
Tq,N,V_bluetoothErrorCount
TB,N,V_presentedBluetoothError
TB,N,V_presentedWiFiError
TB,N,V_currentlyAdvertising
Tq,N,V_idsMacCountCache
T@"NSDate",&,N,V_advertisingChangedDate
T@"NSDate",&,N,V_wristStateChangedDate
T@"NSDate",&,N,V_lockStateChangedDate
T@"NSDate",&,N,V_nearbyDeviceChangedDate
T@"NSDate",&,N,V_pipeConnectionChangedDate
TB,N,V_previousConnectedState
TB,N,V_autoRelockAssertionTimerActive
TB,N,V_cachedDeviceWiFiState
TB,N,V_cachedWatchWiFiState
TB,N,V_wifiStateNeedsUpdating
TB,N,V_useBTPipe
TB,N,V_preventRadarNotification
T@"NSMutableDictionary",&,N,V_cachedMetrics
T@"NSMutableArray",&,N,V_previousSessionIDs
T@"SDAutoUnlockIconTransferStore",&,N,V_iconTransferStore
T@"SDAutoUnlockLocalDeviceController",&,N,V_localDeviceController
T@"NSObject<OS_dispatch_source>",&,N,V_magnetLinkTimer
T@"NSDate",&,N,V_lastUnlockDate
TB,N,V_lastUnlockedByWatch
TB,N,V_lastLockedByRelock
TB,N,V_doNotPostUnlockConfirmation
TB,N,V_suppressAlert
Tq,N,V_periocularStatus
T@"CLLocationManager",&,N,V_clManager
TB,N,V_needsArming
TB,N,V_isBeingUsedForSiri
TB,N,V_needsStrictMotionCheck
T@"<SDAutoUnlockTransportProtocol>",R,W,N,V_autoUnlockTransport
T@"<SDUnlockMagnetTransport>",R,W,N,V_magnetTransport
T@"<SDKeyManaging>",R,W,N,V_keyManager
T@?,C,N,V_isSignedIntoPrimaryiCloudAccount
T@?,C,N,V_isFaceIDEnabled
T@?,C,N,V_isWifiEnabled
T@?,C,N,V_isBluetoothEnabled
T@?,C,N,V_isActiveDeviceNearby
T@"SDAutoUnlockPeer",&,N,V_remotePeer
T@"NSString",C,N,V_state
TB,N,V_attemptInProgress
T@"NSData",&,N,V_attemptExternalACMContext
_commonEnsureStopped
appendFormat:
_discoveryEnsureStopped
_proximityEnsureStopped
_rtiEnsureStopped
_serviceEnsureStopped
_siriRemoteMonitorEnsureStopped
_deactivateUIDelayTimer
_commonEnsureStarted
_discoveryEnsureStarted
_rtiEnsureStarted
_bulletinsEnsureStarted
_bulletinsEnsureStopped
_proximityEnsureStarted
_siriRemoteMonitorEnsureStarted
_serviceShouldRequestAutoFill
_serviceEnsureStarted
_screenStateChanged:
_uiLockStatusChanged:
needsSetup
postNotificationName:object:userInfo:deliverImmediately:
initWithURL:resolvingAgainstBaseURL:
queryItems
_uiStart:extraInfo:
tvAutoFillRemoveAll
_activateUIDelayTimer
_sessionStop:
setPurpose:
_deviceFound:
_deviceLost:
_deviceChanged:
deviceActionType
idsBluetoothDeviceIDsForRIServers
_deviceStoppedRequesting:
_uiShowing
_uiStartIfEnabled:extraInfo:
symbolCharacterSet
_uiStop:
setAgent:
tryPIN:
_sessionStart:
notificiationDidDismiss:
clientPairingSucceeded:completion:
clientPromptForPIN:throttleSeconds:
initWithType:
_proximityFound:
_proximityLost:
_proximityChanged:
updateWithBLEDevice:
proxPairProximityEstimator
bleProximityInfoForType:device:
proximityEstimatorWithProximityInfo:
setProxPairProximityEstimator:
updateWithSFBLEDevice:
triggered
rssiEstimate
removeDelegate:
_serviceStartRequestingAutoFillIfReady
activate:
setAssociatedDomains:
setLocalizedAppName:
setUnlocalizedAppName:
_serviceHandleError:
setHidePINHandler:
_serviceHandleUsername:password:error:
setReceivedCredentialsHandler:
_serviceStopRequestingAutoFill
handleUsername:password:
startRequestingAutoFill
advertiseNonConnectable:
_serviceTimeoutStart
_serviceTimeoutStop
stopRequestingAutoFill
setPeerDevice:
setCompletedHandler:
_sessionHandlePairingSucceededResponse:
_helpersClientPairingSucceeded:completion:
setPairingFinishedHandler:
passwordPickerStart:bundleID:localizedAppName:unlocalizedAppName:associatedDomains:completion:
setPromptForPickerHandler:
_helpersClientPromptForPIN:throttleSeconds:
clientDismissUserNotification
_ensureKeychainCleaned:
isEqualToIgnoringCase:
advertiseNonConnectableDebug:
initWithServiceName:viewControllerClassName:
setUserInfo:
newHandleWithDefinition:configurationContext:
activateWithContext:
deviceClassCode
activeTVAutoFillPrompts
tvAutoFillPostIfNeeded:
tvAutoFillRemove:
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
handleEventWithData:
_postSetupNotificationForDevice:
helperStop:
_uiStartIfNeeded:extraInfo:
preventNotifications
_alertHandle
_autoFillContext
_bulletinsDisabled
_cleanKeysState
_credentialsHandler
_deviceDiscovery
_devices
_btDevices
_grantingSession
_grantedDevices
_helpers
_ignoredTVs
_notificationManager
_proximityDevices
_proximityDiscovery
_proximityEnabled
_requestingAppLocalizedName
_requestingAppUnlocalizedName
_requestingAssociatedDomains
_requestingBundleID
_requestingService
_requestingServiceTimedOut
_requestingServiceTimer
_requestingServiceState
_remoteMonitoringEnabled
_rtiActivated
_scanningEnabled
_siriRemoteMonitor
_siriRemoteMonitorState
_statusMonitor
_triggeredDevices
_uiDelayActive
_uiDelayDevice
_uiDelayTimer
_prefGrantingEnabled
_prefPairedTVAllowed
_prefRateLimitDisabled
_prefRequestingEnabled
_prefRequiresProx
_testingService
_preventNotifications
TB,N,V_preventNotifications
effectiveIdentifier
mediaRouteIdentifier
isReady
_canTransition:
setNotificationDurationSecs:
setNotificationTicks:
setPendingContentDurationSecs:
setPendingContentTicks:
setTransferDoneDurationSecs:
setTransferDoneTicks:
setTransferPendingDurationSecs:
setTransferPendingStartTicks:
notificationBubble
reset
transferBubble
stateIsClose
stateIsMedium
canTransition:
effectiveID
resetTicks
stateIsNearby
setNextState:
clientProvidedError
setClientProvidedError:
clinkDevice
setClinkDevice:
dismissReason
setDismissReason:
forced
setForced:
forcedID
setForcedID:
nextState
setNotificationBubble:
notificationInfo
setNotificationInfo:
medBubbleDelayed
setMedBubbleDelayed:
route
setRoute:
setTransferBubble:
notificationTicks
notificationDurationSecs
pendingContentTicks
pendingContentDurationSecs
transferDoneTicks
transferDoneDurationSecs
transferPendingStartTicks
transferPendingDurationSecs
_clientProvidedError
_forced
_medBubbleDelayed
_nextState
_notificationType
_attachmentURL
_clinkDevice
_dismissReason
_forcedID
_notificationBubble
_notificationInfo
_route
_transferBubble
_notificationTicks
_notificationDurationSecs
_pendingContentTicks
_pendingContentDurationSecs
_transferDoneTicks
_transferDoneDurationSecs
_transferPendingStartTicks
_transferPendingDurationSecs
T@"NSURL",&,N,V_attachmentURL
T@"SFDevice",&,N,V_bleDevice
TB,N,V_clientProvidedError
T@"RPCompanionLinkDevice",&,N,V_clinkDevice
Tq,N,V_dismissReason
TB,N,V_forced
T@"NSString",&,N,V_forcedID
Ti,N,V_nextState
T@"SFBubbleEstimator",&,N,V_notificationBubble
T@"SFNotificationInfo",&,N,V_notificationInfo
TI,N,V_notificationType
TB,N,V_medBubbleDelayed
T@"TURoute",&,N,V_route
Ti,N,V_state
T@"SFBubbleEstimator",&,N,V_transferBubble
TQ,N,V_notificationTicks
Td,N,V_notificationDurationSecs
TQ,N,V_pendingContentTicks
Td,N,V_pendingContentDurationSecs
TQ,N,V_transferDoneTicks
Td,N,V_transferDoneDurationSecs
TQ,N,V_transferPendingStartTicks
Td,N,V_transferPendingDurationSecs
T@"NSString",R,C,N
externalID
_requestPostOrUpdate:info:mediumVariant:canPost:
requestPostOrUpdate:info:mediumVariant:
requestRemove:withReason:
requestRemoveAll
requestUpdate:info:mediumVariant:canPostNotification:
handleNotificationWasTapped:
handleNotificationWasDismissed:reason:
dismissedHandler
setDismissedHandler:
tappedHandler
setTappedHandler:
_externalID
_internalIDs
_showingMedium
_triggeredID
_dismissedHandler
_tappedHandler
T@?,C,N,V_dismissedHandler
T@?,C,N,V_tappedHandler
_systemCanTrigger
_bleActionDiscoveryEnsureStopped
_bleInfoDiscoveryEnsureStopped
_clinkEnsureStopped
_commonShouldAdvertiseChanged
_commonCallCountChanged
_motionEnsureStopped
_clinkShouldStart
_clinkEnsureStarted
_bleActionDiscoveryShouldStart
_bleActionDiscoveryEnsureStarted
_bleInfoDiscoveryShouldStart
_bleInfoDiscoveryEnsureStarted
_motionShouldStart
_motionEnsureStarted
_serviceShouldStart
_run
_commonScreenStateChanged
setScreenLockedChangedHandler:
_bleUpdateMappingAndNearbyCoalesced
commonSystemUIChanged
_proxiedNotificationDidDismiss:reason:
_proxiedNotificationWasTapped:
_hapticsEnsureStopped
connectedCallCount
_uiStopIfNeeded:reason:
_resetAllStates
screenLocked
_bleUpdateMappingReset
_combinedDevicePending
_runNotificationPending
_runNotificationPendingContent
_runNotificationReady
_runNotificationPresented
_runNotificationDismissed
_runTransferInProgress
_runTransferPending
_runTransferReady
_runTransferPendingDismiss
_runTransferDone
_runStateVerify:device:
_combinedDevicePrepareForCallTransferTrigger:
_proximityClientDeviceWillTrigger:
_shouldMediumPromptWithInfo:
mediumBubbleVersion
insideSmallBubble
_scheduleRunAfter:
_throttleMediumSetTicks:
interactionBehavior
_hapticsFireNotificationSuccess
_throttleEventDidOccur
_runCallHandoffStart:
_proximityClientDeviceEnteredImmediate:
_proximityClientDeviceExitedImmediate:
_runCallHandoffHandleResponse:error:
_runCallHandoffStartDelayTimer
_runCallHandoffHandleDelayTimerFired
_uiDismissWhenReady:reason:
_bleActionDeviceFound:
_bleActionDeviceLost:
_bleActionDeviceChanged:
_bleActionScanTimerActivate
_bleActionScanTimerInvalidate
_bleActionDeviceFoundCandidate:
_bleUpdateMappingWithDevice:
_combinedDeviceIsSuppressed:
insideMediumBubble
_proximityClientDeviceDidUnTrigger:
_proximityClientDeviceUpdated:
_bleDeviceNearbyEnter:
_bleDeviceNearbyExit:
_bleActionScanTimerFired
_bleInfoDeviceFound:
_bleInfoDeviceLost:
_bleInfoDeviceChanged:
_updateCandidateIsNearby
_proximityClientDeviceEnteredNearby:
_proximityClientDeviceExitedNearby:
_bleUpdateMappingAndNearby
_clinkHandleRequest:options:responseHandler:
deregisterRequestID:
_clinkHomePodHandleRequest:responseHandler:
_proximityClientSeedInitialDevices:
_proximityClientSeedWillTriggerDeviceIfNeeded:
_combinedDeviceForUIID:
mediaTransferInfoFromInfo:
notificationHomePodTypeForDevice:
setHomePodType:
deviceEnteredImmediateHandler
deviceExitedImmediateHandler
deviceEnteredNearbyHandler
deviceExitedNearbyHandler
deviceWasDismissedHandler
deviceWasDismissedHandlerEx
deviceWasSelectedHandler
deviceWillTriggerHandler
deviceDidUntriggerHandler
deviceUpdateHandler
_serviceTimeoutInvalidate
_serviceTimeoutFired
_throttleEventSet:
_proximityClientDeviceWasDismissed:reason:
_proximityClientDeviceWasSelected:
_routeForDevice:
callTransferInfoForDevice:
_routes
_throttleEventsReachedMax
_throttleMediumAllowsTrigger
displayNameForContact:
setInteractionBehavior:
setInteractionDirection:
interactionDirection
_proximityClientDeviceWasDismissed:
_serviceTimeoutActivate
_throttleEventsReset
_throttleMediumReset
_hapticsEnsurePrepared
_expectingContentForDeviceID:
callTransferShouldPush:
_bleActionDiscovery
_bleActionDevices
_bleActionScanTimer
_bleActionScanTimedOut
_bleActionService
_bleActionServiceTimer
_bleInfoDiscovery
_bleInfoDevices
_bleMapCoalescer
_bleUnmapped
_candidateNearby
_clientShouldAdvertise
_clinkClient
_delayTimer
_mappedDevices
_motionMonitorStarted
_notificationProxy
_proxClients
_stationary
_suppressedDeviceIDs
_transferTimer
_uiDevice
_unansweredCall
_userOnCall
_prefBLEActionScanSecs
_prefEnabled
_prefForceShouldAdvertise
_prefForceStationary
_prefForceOnCall
_prefHighNormal
_prefIgnoreMediumThrottle
_prefMediumBubbleEnabled
_prefMediumBubbleLastTicks
_prefRetriggerSecs
_prefTransferSecs
_prefThrottleEventCount
_prefThrottleEventMax
_stop
stopHandoffAdvertisingIfAppropriate
setDiscoveryMode:
addOrUpdateNodesForPerson:withChanges:
setPersonFoundHandler:
setPersonChangedHandler:
removeNodesForPerson:
setPersonLostHandler:
discoveredPeople
statusChangedHandler
resumeHandoffAdvertisingIfAppropriate
deviceIsEligibleForAirDrop:
updateRangingMeasurementForDevice:inNode:
createSFNodeFromMyRPDevice:
personHasAirDropEligibleDevice:
updateRangingMeasurementForPerson:inNode:
createSFNodeFromRPPerson:
identifiersForPerson:
removeObjectsForKeys:
shouldStopHandoffAdvertising
assertionIdentifier
relativeLocation
idsDeviceIdentifierConflict
deviceTypeFromModelIdentifier:
defaultSFNodeFlags
createSFNodeFromCNContacts:identifier:device:
deviceImageNameFromModelIdentifier:
T@"SDRapportBrowser",R
_startCount
_cachedNodes
_peopleDiscovery
setHasFinalMessage:
hasFinalMessage
_finalMessage
TB,N,V_finalMessage
updateServerState
awdlTimeoutFired:
bluetoothTimeoutFired:
invalidateTimers
startTimers
startHTTPServer:
publishedInfoChanged:
thisIsTheFinder
stopProximityScanner
startServer
discoverableByContactsOnly
discoverableByEveryone
startProximityScanner
object
keyBagFirstUnlock:
wirelessChanged:
appleIDChanged:
airDropUnpublished:
airDropStatusChanged:
screenStateChange:
bluetoothChanged:
discoverableModeChanged:
sslSettings
initWithPort:identity:
bonjourPublisher:propertiesDidChange:
didOpenConnection:
didCloseConnection:
finderAirDropEnabled:
stopScanningAndStartServer
clientPid
_portNumber
_awdlTimer
_bluetoothTimer
_coalescer
_identity
_discoverableMode
_publisher
_discoveredHashes
_information
_clientPid
_clientBundleID
Ti,V_clientPid
T@"NSString",C,V_clientBundleID
T@"<SDAirDropServerDelegate>",W,V_delegate
T@"<SDAirDropListenerDelegate>",W,V_delegate
itemsDescriptionAdvanced
extractNotesURLs:
createDestination
setAppLink:
getAppLinkWithURL:completionHandler:
appLink
setBundleProxy:
targetApplicationProxy
localizedName
openURLs:
_appLink
T@"LSAppLink",&,N,V_appLink
device
getBytes:length:
_connectionHasEntitlement:
cancelAutoUnlock:
notifyDelegate
checkEntitlementWithHandler:
failedToEnableDevice:error:
setEnableDevice:
failedUnlockWithError:
keyDeviceLocked:
enableDevice
enabledDevice:
beganAttemptWithDevice:
completedUnlockWithDevice:
currentConnection
eligibleAutoUnlockDevicesWithCompletionHandler:
enableAutoUnlockWithDevice:passcode:clientProxy:
attemptAutoUnlockWithClientProxy:
attemptAutoUnlockWithoutNotifyingWatchWithClientProxy:
attemptAutoUnlockForSiriWithClientProxy:
enableUnlockWithDevice:fromKey:withPasscode:completionHandler:
disableUnlockWithDevice:completionHandler:
unlockEnabledWithDevice:completionHandler:
establishStashBagWithCompletionHandler:
establishStashBagWithManifest:completionHandler:
unlockStateForDevice:completionHandler:
authenticateUsingClientProxy:type:sessionID:
cancelAuthenticationSessionWithID:
_enableDevice
T@"<SFUnlockClientProtocol>",&,N,V_clientProxy
T@"SFAutoUnlockDevice",&,N,V_enableDevice
T@"<SDUnlockXPCSesssionDelegate>",&,V_delegate
setTransferManager:
askEventForRecordID:withResults:
doubleValue
progressEventForRecordID:withResults:
finishedEventForRecordID:withResults:
cancelEventForRecordID:withResults:
errorEventForRecordID:withResults:
absoluteString
listener:didReceiveError:
listener:didReceiveNewRequest:
listener:informationDidChange:
alertManager:acceptingTransferWithRecordID:withDestinationURL:shouldExtractMediaFromPhotosBundlesForRecordID:
alertManager:cancelingTransferWithRecordID:withFailureReason:
_transferIdentifierToNetworkOperation
_transferManager
_classroomTransferManager
_stepData
T@"NSData",&,N,V_stepData
_pairingID
T@"NSString",&,N,V_pairingID
calendarWithIdentifier:
autoupdatingCurrentLocale
setLocale:
components:fromDate:
year
month
hour
minute
second
timeZone
abbreviation
stringByRemovingCharactersFromSet:
setModelDescription:
modelDescription
componentsSeparatedByCharactersInSet:
stringFromState:
shouldRegister
canPerformUnlocks
handleRegistrationBegan
_deviceID
T@"NSString",C,N,V_deviceID
TQ,N,V_state
keyBagLocked
TB,R,N,GisKeyBagLocked
setHasUnlocked:
hasUnlocked
unlocked
_unlocked
TB,N,V_unlocked
isJustFiles
totalSharedItemsCount
updatePossibleActions
defaultActionForBundleProxy:
setPossibleActions:
_start
setActiveConnection:
sendProxyTrigger
activeConnection
startDate
notified
setNotified:
setBleDevice:
_activeConnection
_notified
_model
_startDate
_bleDevice
TB,V_activeConnection
TB,V_notified
TB,V_invalidated
T@"NSString",C,N,V_model
T@"NSDate",&,N,V_startDate
T@"SFBLEDevice",&,N,V_bleDevice
Tq,N,V_state
setHasUseToken:
hasUseToken
setAuthPrompt:
setHasAuthPrompt:
hasAuthPrompt
setHasSupportsConfirmationACK:
hasAppName
setHasPhoneUnlockDate:
hasPhoneUnlockDate
setHasSkipMotionCheck:
setHasIsAuthenticatingForSiri:
_authPrompt
_isAuthenticatingForSiri
_skipMotionCheck
_useToken
TB,N,V_useToken
T@"NSData",&,N,V_keyData
TB,N,V_authPrompt
T@"NSString",&,N,V_appName
Td,N,V_phoneUnlockDate
TB,N,V_skipMotionCheck
TB,N,V_isAuthenticatingForSiri
initWithImageTitle:imageData:cacheLookupKey:
encodeInteger:forKey:
iconData
initWithContact:iconData:atIndex:cacheLookupKey:
icon
_contact
_iconIndex
T@"CNContact",R,&,N,V_contact
T@"NSData",R,&,N
T^{CGImage=},R,N
Tq,R,N,V_iconIndex
containsValueForKey:
decodeIntegerForKey:
hostName
portNumber
notifyClientAboutResolve:
mount
initWithName:type:domain:path:timeout:
resolve
bonjourResolverDidChange:
mountDiskImageAsync
_resolver
T@"<SDNetworkResolverDelegate>",W,V_delegate
setPairedDeviceID:
_pairedDeviceID
_token
T@"NSData",&,N,V_token
T@"NSString",&,N,V_pairedDeviceID
setAvailableApplications:
initWithPerson:items:sandboxExtensions:
setClientBundleID:
setAuditToken:
setClientPid:
clientBundleID
notifyClientWithPosixError:
send
initWithConnection:
setContactsOnly:
setSessionID:
schedule
accept
logActivityType:sessionID:
initWithNode:
setProtocol:
setFlags:
airDropServer:event:withResults:
airDropConnection:event:withResults:
airDropSession:event:withResults:
airDropController:didChange:
airDropStatus:didChange:
airDropInformation:didChange:
networkResolver:event:withResults:
networkEjecter:event:withResults:
copyPropertyForKey:
activities
setActivities:
_operation
_connectionScheduled
_properties
_sandboxExtensionHandle
_activities
T@"NSMutableArray",&,V_activities
T@"<SDNetworkOperationDelegate>",W,V_delegate
_loadTransferStore
storeCachedImageForHash:device:appName:
imageCachedForHash:device:
_transferStore
setWithCapacity:
T@"NSSet",R,C
_readPrefs
unarchivedObjectOfClass:fromData:error:
_setAccount:
account
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
setPersonInfoCache:
personInfoCache
_identityForAppleID:
archivedDataWithRootObject:requiringSecureCoding:error:
removeFromKeychain
setAccount:
_updateAccountInfoPrefs
_postNotificationWithName:
_addAppleID:
_removeAppleID:
matchedValue
_updatePersonInfoCachePrefs
_addPersonInfoToCache:
isStale
_cachedPersonInfoWithEmailOrPhone:
_clearPersonInfoCache
_setLastConnectionDate:
_setLastSuccessfulConnectionDate:
setIdentity:
_setIdentity:forAppleID:
linkedToCurrentUser
setLinkedToCurrentUser:
_setIdentityLinkedToCurrentUser:forAppleID:
setCertificateTokenCreationDate:
_setCertificateToken:privateKeyPersistentReference:forAppleID:
setContactInfo:
setValidationRecord:
_setContactInfo:validationRecord:forAppleID:
_updateMetaInfoPrefs
_setMetaInfo:
setIdentityLinkedToCurrentUser:forAppleID:
lastConnectionDate
lastSuccessfulConnectionDate
_metaInfo
_lastConnectionDate
_lastSuccessfulConnectionDate
_account
_personInfoCache
T@"SFAppleIDAccount",&,N,V_account
T@"NSMutableDictionary",&,N,V_personInfoCache
T@"NSDate",&,N,V_lastConnectionDate
T@"NSDate",&,N,V_lastSuccessfulConnectionDate
T@"NSDictionary",C,N
initWithXPCConnection:
connectionManagerDidInvalidate:
xpcManagerListener
setXpcManagerListener:
connections
setConnections:
_xpcManagerListener
_connections
T@"NSXPCListener",&,V_xpcManagerListener
T@"NSMutableArray",&,V_connections
_clientDeviceLockStatusChanged
_clientEnsureStopped
_serverEnsureStopped
_serverEnsureStarted
_clientShouldStart
_clientEnsureStarted
_commonIDSChanged:
handleTextInputData:
setReceivedObjectHandler:
setReceivedRequestHandler:
_legacy_serverHandleEvent:
_legacy_serverHandleRequest:
systemPairState
_serverSendTextSessionDidBegin:
_legacy_serverRespondInfo:
sendResponse:
currentPayload
initWithRTIPayload:
setText:
setDeviceIDs:
sendEvent:
_sendRTIPayload:
setNeedsKeyboard:
advertisingTimerStart
_serverSendTextSessionDidEnd:
advertisingTimerFired
remoteTextEventHandler
clientNotificationUpdateForDevice:rtiData:
_clientDeviceFound:
_clientDeviceLost:
_clientClinkDeviceFound:
_clientClinkDeviceLost:
_clientClinkDeviceChanged:
_clientUpdateCoalesceTimerForDevice:identifier:
smoothedRSSI
clientNotificationPostIfNeededForDevice:
clientNotificationRemoveForDevice:
clientNotificationUpdateForDevice:info:
testKeyboardPost:
performSelector:withObject:afterDelay:
clientTextSessionDidBegin:device:
testKeyboardPostThenUpdate
testKeyboardPostWithDelay
testKeyboardRemoveWithDelay
testKeyboardUpdateWithDelay
_aggressiveTimer
_clientEnabled
_cloudPairedOnly
_controlService
_currentSessionID
_currentText
_idsMonitorInstalled
_legacy_sessionDeviceIDs
_rssiThreshold
_rtiTimer
_serverEnabled
_sessionDeviceIDs
_rtiHandleEventWithData:
setEventHandler:
_rtiHandleInputDidBeginWithFlags:sessionInfo:
setTextInputDidBegin:
_rtiHandleInputDidEndWithFlags:sessionInfo:
setTextInputDidEnd:
_ensureStarted
removeAllDelegates
_stopClock:
enumerateObjectsUsingBlock:
_startClockWithResetIfNeeded
_logEvent:stopClock:
_delegates
_overrunTimer
_sessionClock
boolValue:
setInformationAndNotify
T@"<SDAirDropInformationDelegate>",W,V_delegate
airDropTransferRequested:
startCalled
postNotification:forNeighborhood:
types
initWithDomain:types:
setXpcConnection:
setIconData:iconHash:forPerson:
transfersInitiated
setTransfersInitiated:
transfersCompleted
setTransfersCompleted:
initWithWorkgroup:
stringForBrowserMode:
bonjourNodesDidChange:
windowsNodesDidChange:
startBrowsingDomain:
setBonjourBrowserMode:
bonjourNodesForDomain:
stopBrowsingDomain:
startODiskBrowsing:
odiskNodesForDomain:
stopODiskBrowsing:
startAirDropBrowsing:bundleID:sessionID:helperConnection:delayBonjour:
startAirDropBrowsing:connection:sessionID:
incrementTransfersInitiated
incrementTransfersCompleted
airDropNodesForDomain:
isAirDropEnabled
stopAirDropBrowsing:
startBrowsingWorkgroup:
windowsNodesForWorkgroup:
stopBrowsingWorkgroup:
_odiskBrowsers
_bonjourBrowsers
_windowsBrowsers
_airDropBrowsers
setMaxConcurrentOperationCount:
documentProxyForName:type:MIMEType:
applicationsAvailableForOpeningFromAirDropWithError:
applicationsAvailableForOpeningWithError:
intersectOrderedSet:
firstReceivedFilename
handlingAppBundleID
acceptActionTriggered
cancelActionTitleToAccompanyActions:
setMinRequiredTransferState:
setSelectedApplication:
selectedApplication
performActionWithBundleProxy:completionHandler:
availableApplications
shouldOpenAutomaticallyAfterUserAccepts
actionForBundleProxy:
actionHandler
addOpenWithActions
setUseOpenWithText:
action
applicationProxyForBundleProxy:
appState
isInstalled
isRestricted
operationToOpenResource:usingApplication:uniqueDocumentIdentifier:userInfo:delegate:
logReceiverBundleID:forAppProxy:andURL:
setCompletionBlock:
addOperations:waitUntilFinished:
_LSFailedToOpenURL:withBundle:
openResourceOperation:didFinishCopyingResource:
openResourceOperationDidComplete:
openResourceOperation:didFailWithError:
_workOperationsQueue
_icloudDriveHandler
_selectedHandler
_selectedProxy
_willUseOpenWithAlert
_availableApplications
_selectedApplication
T@"NSArray",C,N,V_availableApplications
T@"LSBundleProxy",&,N,V_selectedApplication
ephemeralSessionConfiguration
setTimeoutIntervalForResource:
set_tlsTrustPinningPolicyName:
initWithIdentifier:
setWaitsForConnectivity:
set_appleIDContext:
sessionWithConfiguration:
_callResponseHandlerWithInfo:errorInfo:error:
taskInfo
urlAtKey:
gsToken
initWithURL:gsToken:
dataWithJSONObject:options:error:
setHTTPBody:
_handleURLIsAvailable:error:completion:
_urlWithCompletion:
_isTaskInfoValid
_sendRequest
_callResponseHandlerWithInfo:error:
urlRequest
_handleTaskResponse:withData:error:
dataTaskWithRequest:completionHandler:
allHTTPHeaderFields
setUrlRequest:
_handleURLRequestIsAvailable
_urlRequestWithCompletion:
statusCode
initWithHTTPUTLResponse:data:
responseInfo
_handleServerError:withStatusCode:nextSuggestedAttemptDelay:
_parseServerResponse:error:
dateWithTimeIntervalSince1970:
_parseCreateCertificateResponse:error:
_parseFetchCertificateResponse:error:
_parseGetMyInfoResponse:error:
_parseFindPersonResponse:error:
setGsToken:
_handleGSTokenIsAvailable
activated
setActivated:
invalidated
setInvalidated:
session
_gsToken
_taskInfo
_type
_urlRequest
TB,N,V_activated
T@"NSString",&,N,V_gsToken
TB,N,V_invalidated
T@"NSURLSession",&,N,V_session
T@"NSDictionary",R,N,V_taskInfo
Tq,R,N,V_type
T@"NSURLRequest",&,N,V_urlRequest
initialize
xpcManagerInterface
setInterruptionHandler:
cleanUpConnections
closeStreamsForIdentifier:
unlockSessions
initWithClientProxy:withIdentifier:
myIPAddress
closeFile
getContinuationStreamsForMessage:bundleID:usingID:completionHandler:
createCompanionServiceManagerWithIdentifier:clientProxy:reply:
createStreamsForMessage:reply:
createUnlockManagerWithReply:
appleAccountSignedIn
appleAccountSignedOut
addDedicatedCellularBearer:completion:
removeDedicatedCellularBearerWithCompletion:
continuationStream:connectedToService:withFileHandle:acceptHandler:
companionStreamClosedStreams:
unlockSessionDidFinish:
publisher:didConnectToService:withStreamHandler:
publisher:companionStreamForService:streamHandler:
manager:connectedToService:withFileHandle:acceptHandler:
companionStreams
setCompanionStreams:
serviceManager
setServiceManager:
deviceStreamMap
setDeviceStreamMap:
setUnlockSessions:
streamIdentifiers
setStreamIdentifiers:
_companionStreams
_serviceManager
_deviceStreamMap
_unlockSessions
_streamIdentifiers
T@"NSString",&,V_bundleID
T@"NSUUID",&,V_identifier
T@"NSXPCConnection",&,V_xpcConnection
T@"NSMutableArray",&,V_companionStreams
T@"SDServiceManager",&,V_serviceManager
T@"NSMutableDictionary",&,V_deviceStreamMap
T@"NSMutableArray",&,V_unlockSessions
T@"NSMutableArray",&,V_streamIdentifiers
T@"<SDConnectionManagerDelegate>",W,V_delegate
hasLongTermKey
setHasRemoteNeedsLTK:
hasRemoteNeedsLTK
_ltkHash
_remoteNeedsLTK
T@"NSData",&,N,V_ltkHash
TB,N,V_remoteNeedsLTK
readData:length:fromStream:
writeData:length:toStream:
openStreams
readIncomingChunk
sendOutgoingChunk:length:compressed:
processNetworkStatistics:
processCompressibilityStatistics
_compressible
_totalBytesSent
_totalNetworkDelay
_keepingUpWithNetwork
_numBlocksProcessed
_totalBytesProcessed
_numBlocksCompressed
_lastCompressionRatio
_totalCompressionTime
_totalCompressedOutput
_adjustmentQueue
setSenderID:
hasPayload
setHasMessageType:
hasMessageType
setHasUseProxy:
hasUseProxy
setAwdlCacheID:
setHasAwdlCacheID:
hasAwdlCacheID
setAksSessionID:
setHasAksSessionID:
hasAksSessionID
hasAuthTag
hasNonce
awdlCacheID
aksSessionID
_aksSessionID
_authTag
_awdlCacheID
_encryptedPayload
_messageType
_nonce
_payload
_senderID
T@"NSData",&,N,V_sessionID
T@"NSData",&,N,V_payload
TI,N,V_messageType
T@"NSData",&,N,V_senderID
TI,N,V_awdlCacheID
TI,N,V_aksSessionID
T@"NSData",&,N,V_encryptedPayload
T@"NSData",&,N,V_authTag
T@"NSData",&,N,V_nonce
_secret
T@"NSData",&,N,V_secret
componentsWithURL:resolvingAgainstBaseURL:
initWithTransferIdentifier:actionIdentifier:title:singleItemTitle:
handleAction
_credential
addClient:forIdentifer:
loadWatchIDsToPairingRecords
setAutoUnlockDisabledDueToManagement:
handleRequiredStateDisabled
updateRangingKeysIfNeccesary
loadLocalLTK
loadLocalAttestedLTKIfNecessary
updateRemoteLTKs
checkLocalLTK
checkLocalAttestedLTK
localDeviceID
ltkInfoForDeviceID:
hasLtkID
ltkID
localLTK
viewSyncing
allKeychainDevices
remoteLTKStorageFilePath
remoteLTKList
setLocalDeviceID:
appleAccountSignedIn:
appleAccountSignedOut:
deviceFirstUnlocked:
removeAllRemoteLTKsOnSignOut
resetAppleWatchExisted
loadLocalUniqueIDIfNeeded
checkRemoteLTKs
updateSessionKeys
localAttestedLTK
checkRemoteLTKForDeviceID:
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:
aksAuthSessionForDeviceID:originator:usingEscrow:attestation:
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:usingEscrow:
escrowSecretForDevice:
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:escrowSecret:
aksAuthorizationSessionForDeviceID:originator:externalACMContext:
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:externalACMContext:
sessionKeyForDeviceID:
idsDeviceIDsForBluetoothID:
cachedSessionKeys
sortedArrayUsingComparator:
initWithLength:
logBluetoothIDCache
watchIDsMissingSessionKey
refreshAutoUnlockDeviceCache
arrayForKey:
setWatchIDsMissingSessionKey:
ltkInfoForDeviceID:modern:
setLocalLTK:
storeLongTermKey:forDeviceID:name:
version
generateLocalLTKWithAttestation:
generateLocalLTKWithAttestation:forceDCRTRetrievalWithCompletion:
ltkKeyClass
setLtk:
setLtkID:
storeAttestedLongTermKey:forDeviceID:name:
setLocalAttestedLTK:
t208Machine
isEqualToData:
setSignout:
deviceTypeForDevice:
remoteLTKEntryForDeviceID:
loadRemoteLTKsIfNeeded
keychainDevices:
modernSignedDevices
signedDevices
isSubsetOfSet:
signLTKsForDeviceID:
remoteLTKs
updateLTKsForDeviceID:staleRemoteLTK:
longTermKeyForDevice:modern:
remoteLTKHashForDeviceID:modern:
signLTK:modernLTK:forDeviceID:
signLTK:ltkModDate:modernLTK:modernLTKModDate:deviceID:
keyClassForDeviceID:
modificationDataForDeviceID:modern:
addRemoteLTK:ltkHash:ltkModDate:modernLTK:modernLTKHash:modernLTKModeDate:deviceID:
baseModernSyncedDictionary
baseSyncedDictionary
deviceIsLocalDevice:
modernSyncedDictionaryForDevice:
syncedDictionaryForDevice:
enumerateKeysAndObjectsUsingBlock:
saveRemoteLTKs
updatePreferredRemoteLTKForDeviceID:
preferredRemoteLTKForDeviceID
fetchLTKsFromCompanionForDeviceID:needsLTK:remoteNeedsLTK:checkViewState:
remoteDeviceID
localID
needsLTK
remoteNeedsLTK
pendingReceiveForPeer:
pendingSendForPeer:
keybagAssertionTimer
releaseKeybagAssertion
setKeybagAssertionTimer:
waitingForUnlockTimer
setWaitingForUnlock:
setWaitingForUnlockTimer:
handleLTKRequest:
handleLTKResponse:
deviceEnabledAsKeyForAnyDevice
deviceEnabledAsKeyForAnyIDSDevice
deviceEnabledAsKeyForAnyMac
deviceEnabledAsKeyForAnyIDSMac
idsDevicesIDs
escrowSecretExistsForDevice:
devicesWithLTKs
rangingKeyForDeviceID:
companionIDForWatchID:
deleteAllEscrowSecrets
deleteAllRangingKeys
allPairedWatchDeviceIDs
deleteRemoteLongTermKeyForDeviceID:modern:tombstone:
clearRemoteLTKs
ltkExistsForKeyDevice:updateLTKs:
anyLongTermKeyForDeviceID:
removePairingRecordForWatchID:
setRemoteLTKs:
writeToFile:options:error:
loadRemoteLTKs
fileExistsAtPath:isDirectory:
initWithContentsOfFile:options:error:
autoUnlockFolderPath
watchIDsToPairingRecords
saveWatchIDsToPairingRecords
watchIDsToPairingRecordsStorageFilePath
loadLegacyWatchIDToCompanionIDMapping
deleteLegacyWatchToCompanionIDs
watchIDToCompanionIDStorageFilePath
migrateLegacyCompanionIDs:
loadCompanionIDs
deleteLegacyCompanionIDs
companionIDStorageFilePath
baseLocalKeysDictionaryForDevice:type:
keychainDataForQuery:
hasSecret
secret
setSecret:
storeKeychainItemWithAttributeDictionary:updateDictionary:addDictionary:
baseLocalKeysDictionary
storeLongTermKey:forDeviceID:name:modern:
attestedDictionaryForDevice:
ltkInfoForDeviceID:modern:attested:
baseRangingDictionary
storeRangingKey:forDeviceID:
setCachedSessionKeys:
deriveKeyFromSharedSecret:
baseRangingDictionaryForDevice:
removeDeviceIDMissingSessionKey:
baseDictionary
clearAllDeviceIDsMissingSessionKeys
useKeychainForLTKSyncing
TB,R,N
handleManagementChanged:
aksPairingSessionForDeviceID:originator:errorCode:wantsAttestation:
aksRegistrationSessionForDeviceID:originator:
aksAuthSessionForDeviceID:originator:
aksAuthorizationSessionForDeviceID:originator:
canCreateTokenSessionForDeviceID:
deviceIDsMissingSessionKey
ltkHashForLocalLTK
updateLocalLTKForSignout
ltkSyncStatusForDeviceID:hash:modern:
generateLocalAttestedLTKIfNeccessaryWithCompletion:
resignRemoteLTKForDeviceID:
signAndStoreRemoteLTK:forDeviceID:
allRemoteLTKData
hashMatchesAnyRemoteLTKForDeviceID:ltkHash:isPreferred:
fetchLTKsFromCompanion:
sendLTKResponseWithPayload:viewState:needsUnlock:currentlySyncing:
ltksForRequest:
keychainNeedsSyncingForRequest:
takeMobileKeybagAssertion
restartKeybagAssertionTimer
restartWaitingForUnlockTimer
invalidateWaitingForUnlockTimer
localDeviceEnabledAsKey
localDeviceEnabledAsKeyForMac
deviceEnabledAsKey:
deleteEscrowSecretForAllDevices
deleteEscrowSecretForPhones
disablePairingForAllKeyDevices
ltkExistsForKeyDevice:
reloadPairingRecordsIfNeeded
setCompanionID:forWatchID:
removeCompanionIDForWatchID:
setPairingID:forWatchID:
removePairingIDForWatchID:
migrateLegacyWatchIDToCompanionIDs
storeEscrowSecret:pairingID:deviceID:
escrowSecretCreationDateForDeviceID:
longTermKeyIDForDeviceID:
deleteLocalAttestedLTK
sessionKeyExistsForDeviceID:
wristDetectDisabled
setWristDetectDisabled:
autoUnlockDisabledDueToManagement
waitingForUnlock
setT208Machine:
cachedSessions
setCachedSessions:
setWatchIDsToPairingRecords:
setPreferredRemoteLTKForDeviceID:
setRemoteLTKStorageFilePath:
setWatchIDsToPairingRecordsStorageFilePath:
setCompanionIDStorageFilePath:
setWatchIDToCompanionIDStorageFilePath:
cachedSessionKeysLock
_wristDetectDisabled
_autoUnlockDisabledDueToManagement
_waitingForUnlock
_t208Machine
_cachedSessionKeysLock
_localDeviceID
_localAttestedLTK
_localLTK
_keybagAssertionTimer
_waitingForUnlockTimer
_remoteLTKs
_cachedSessions
_cachedSessionKeys
_watchIDsToPairingRecords
_preferredRemoteLTKForDeviceID
_watchIDsMissingSessionKey
_remoteLTKStorageFilePath
_watchIDsToPairingRecordsStorageFilePath
_companionIDStorageFilePath
_watchIDToCompanionIDStorageFilePath
TB,N,V_autoUnlockDisabledDueToManagement
TB,N,V_waitingForUnlock
TB,N,V_t208Machine
T@"NSData",C,N,V_localLTK
T@"NSData",C,N,V_localAttestedLTK
T@"NSString",C,N,V_altDSID
T@"NSObject<OS_dispatch_source>",&,V_keybagAssertionTimer
T@"NSObject<OS_dispatch_source>",&,V_waitingForUnlockTimer
T@"NSMutableDictionary",&,N,V_remoteLTKs
T@"NSMutableDictionary",&,N,V_cachedSessions
T@"NSMutableDictionary",&,N,V_cachedSessionKeys
T@"NSMutableDictionary",&,N,V_watchIDsToPairingRecords
T@"NSMutableDictionary",&,N,V_preferredRemoteLTKForDeviceID
T@"NSMutableArray",&,N,V_watchIDsMissingSessionKey
TB,N,V_wristDetectDisabled
T@"NSString",C,N,V_remoteLTKStorageFilePath
T@"NSString",C,N,V_watchIDsToPairingRecordsStorageFilePath
T@"NSString",C,N,V_companionIDStorageFilePath
T@"NSString",C,N,V_watchIDToCompanionIDStorageFilePath
T{os_unfair_lock_s=I},R,N,V_cachedSessionKeysLock
T@"NSString",C,N,V_localDeviceID
updateMetrics:withNode:
unsignedIntegerValue
realNameToMetricsMap
setRealNameToMetricsMap:
_realNameToMetricsMap
T@"NSMutableDictionary",&,N,V_realNameToMetricsMap
MIMEType
JSONObjectWithData:options:error:
_responseInfo
_statusCode
T@"NSDictionary",R,N,V_responseInfo
Tq,R,N,V_statusCode
setHasUnlockEnabled:
hasUnlockEnabled
setHasPasscodeEnabled:
hasPasscodeEnabled
passcodeEnabled
_passcodeEnabled
TB,N,V_passcodeEnabled
arrayWithObject:
setMappedContactIdentifier:relatedContactIdentifiers:
mappedContactIdentifierForContactIdentifier:
availableNodes
setAvailableNodes:
coalescedNodes
originalNodes
setOriginalNodes:
contactIdentifierMap
setContactIdentifierMap:
_availableNodes
_coalescedNodes
T@"NSMutableDictionary",&,N,V_originalNodes
T@"NSMutableDictionary",&,N,V_contactIdentifierMap
T@"NSArray",&,V_availableNodes
T@"NSArray",R,V_coalescedNodes
clearPersistedKeyRequests
setUpHSA2Monitor
setUpRapport
setUpIDSServices
setUpHandoffPreferenceMonitor
primaryAppleIDIsHSA2
setPrimaryAppleIDChangedHandler:
createRapportClientWithDestinationDevice:
handleEncryptionKeyRequestRapport:options:responseHandler:
registerRequestID:options:handler:
handlePayloadRequestRapport:options:responseHandler:
initWithService:
handleEncryptionKeyRequestProtobuf:service:account:fromID:context:
setProtobufAction:forIncomingRequestsOfType:
handleEncryptionKeyReplyRequestProtobuf:service:account:fromID:context:
setProtobufAction:forIncomingResponsesOfType:
addDelegate:queue:
handlePayloadRequestProtobuf:service:account:fromID:context:
handlePayloadReplyProtobuf:service:account:fromID:context:
handleNewAdvertisementWithpayloadRequestProtobuf:service:account:fromID:context:
devices
uniqueIDOverride
userInfo
completionHandler
requestCreatedDate
timeIntervalSinceNow
logDashboardHandoffRequestViaTransportLinkType:type:success:rtt:
error
setError:
allValues
deviceIdentifier
setCompletionHandler:
attemptInProgress
setRequestIdentifier:
setDeviceIdentifier:
setPreviousKeyIdentifier:
requestTimedOut:
requestIdentifier
timerWithTimeInterval:target:selector:userInfo:repeats:
setTimeoutTimer:
setTimeoutTimeInterval:
timeoutTimer
addTimer:forMode:
previousKeyIdentifier
timeoutTimeInterval
setRequestCreatedDate:
sendIDSEncryptionKeyRequest:withRequestRecord:desiredTimeout:
sendRapportEncryptionKeyRequest:withRequestRecord:completionHandler:
activeDevices
predicateWithFormat:
filteredArrayUsingPredicate:
name
linkClient
setLinkClient:
handleEncryptionKeyReplyRapport:options:forRequestRecord:fromDevice:
sendRequestID:request:destinationID:options:responseHandler:
messageWithIdentifier:didSendWithSuccess:error:
protobufDataFromRequest:
idsDeviceWithUniqueID:onService:
nsuuid
devicesForBTUUID:
dataFromUUID:
numberWithDouble:
initWithProtobufData:type:isResponse:
sendProtobuf:toDestinations:priority:options:identifier:error:
setWithObject:
service:account:identifier:didSendWithSuccess:error:
setAdvertisementPayload:
setCommand:
sendIDSActivityPayloadRequest:withRequestRecord:desiredTimeout:
sendRapportActivityPayloadRequest:withRequestRecord:completionHandler:
advertisementPayload
handlePayloadReplyRapport:options:forRequestRecord:fromDevice:
setDecryptionKeyDataRepresentation:forDeviceIdentifier:
handleEncyptionKeyRequest:fromIDSDevice:withRequestIdentifier:transportType:completionHandler:
deviceForFromID:
data
requestFromProtobufData:
outgoingResponseIdentifier
sendEncryptionKeyReplyRequestToDevice:reply:requestIdentifier:
idsDeviceIdentifier
handleEncryptionKeyReply:forRequestRecord:fromDevice:transportLinkType:
incomingResponseIdentifier
activityPayloadReplySuccess:
messageIdentifier
handlePayloadRequest:fromIDSDevice:withRequestIdentifier:transportType:completionHandler:
sendIDSActivityPayloadReply:withReplyRecord:
setMessageIdentifier:
setActivityIdentifier:
activityIdentifier
handlePayloadReply:forRequestRecord:fromDevice:transportLinkType:
fire
getUUIDBytes:
controlFlags
setControlFlags:
setDestinationDevice:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
removeLastObject
insertObject:atIndex:
handleNewAdvertisementDevice:data:receivedViaScanning:withSuccessHandler:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
sendEncryptionKeyRequestToDeviceIdentifier:previousKeyIdentifier:completionHandler:
sendActivityPayloadRequestToDeviceIdentifier:withAdvertisementPayload:command:timeout:completionHandler:
service:account:incomingMessage:fromID:
_activityService
_encryptionService
_rapportDiscoveryClient
_restrictionsDisabled
_advertiser
_scanner
_hsa2Enabled
_uniqueIDToKeyReplyDate
_messageIdentifierToKeyRequestRecords
_messageIdentifierToReplyRecords
_messageIdentifierToRequestRecords
_systemPreferenceChangedToken
_cachedActivityPayloadsForDemo
bundleProxyForiWorkURL:
isiWorkURL
iWorkApplicationName
capitalizedString
applicationProxyForIdentifier:
iWorkDocumentName
documentName
_appName
_sendCreateCertificateRequest
_sendFetchCertificateRequest
_responseHandlerWithIdentity:error:
_scheduleFetchCertificateTaskWithDelay:
_handleCertificateCreateResponseError:
_scheduleFetchRetryWithDelay:
_scheduleCreateRetryWithDelay:
_handleReceivedCertificate
_handleCertificateFetchResponseError:
initWithAppleID:altDSID:
setAccountIdentifier:
setCertificateExpirationDate:
setCertificatePersistentReference:
setIntermediateCertificateExpirationDate:
setIntermediateCertificatePersistentReference:
setLastValidationAttemptDate:
setLastValidationDate:
setModificationDate:
setSerialNumber:
_handleCertificate:intermediateCertificate:withTrustResult:error:
_handleCertificateCreateResponseWithInfo:error:
responseHandler
_handleCreateTimerFired
_handleFetchTimerFired
_scheduleCreateCertificateTaskWithDelay:
_handleKeyPairAvailable
_handleCertificateFetchResponseWithInfo:error:
certificateTokenHandler
_activated
_altDSID
_certificateCreateTask
_certificateExpirationDate
_certificateFetchTask
_certificatePEM
_certificateSerialNumber
_certificateStatus
_certificateToken
_createRetryCount
_createDelayTimer
_csrPEM
_fetchDelayTimer
_fetchRetryCount
_intermediateCertificatePEM
_invalidated
_privateKey
_privateKeyPersistentReference
_publicKey
_responseHandler
_certificateTokenHandler
T@"NSString",R,N,V_appleID
T@?,C,N,V_responseHandler
T@?,C,N,V_certificateTokenHandler
initWithTransfer:bundleIdentifier:
bundleProxy
bundleIdentifier
isJustLinks
candidateIdentifiers
transfer
bundleProxyFromCandidateIdentifiers:handlesURL:
itemsDescription
alertMessageLocalizedKeyForTypeDicts:
localizedStringWithFormat:
singleItemActionTitle
suitableContentsDescription
ejectMountPoints:useAssistant:
notifyClientAboutEject:
eject
flags
_node
_mountedCount
_ejectedCount
_flags
_protocol
T@"NSNumber",C,V_flags
T@"NSString",C,V_protocol
T@"<SDNetworkEjecterDelegate>",W,V_delegate
init
stop
dealloc
allKeys
objectForKeyedSubscript:
isEqual:
kind
isEntitled
connection
numberWithInt:
setIsEntitled:
childrenForNode:
xpcArrayForSFNodeArray:
sidebarChildren
xpcObjectForSFOperationResults:
UUID
UUIDString
initWithKind:
setProperty:forKey:
setObject:forKeyedSubscript:
addObject:
setObjectKey:
setDelegate:
resume
isEqualToString:
canAccessAirDropSettings:
stringFromXPCObject:
initWithKind:rootNode:
setConnection:
setBoostMessage:
openNode:forProtocol:flags:
closeNode:
addNode:
removeNode:
setMode:
setOptions:
stringWithUTF8String:
invalidate
objectKey
removeObject:
handleBrowserMessage:forConnection:
handleOperationMessage:forConnection:
sharedMonitor
deviceInformation
sharedBrowser
description
dataWithPropertyList:format:options:error:
length
bytes
_disableAppSSO
sharedSession
handleNewConnection:
sharedAgent
sharedAdvertiser
sharedScanner
sharedEncryptionManager
sharedPayloadManager
isAirDropAvailable
sharedManager
setDispatchQueue:
activate
stateCapture
_performMigrations
removeAllObjects
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
networkBrowser:nodesChangedForParent:protocol:error:
networkOperation:event:withResults:
arrayFromXPCObject:
numberFromXPCObject:
.cxx_destruct
_activeObjects
_activityAdvertiser
_activityScanner
_airdropManager
_sharesheetManager
_autoUnlockSessionManager
_encryptionManager
_nearbyIDSAgent
_exportedOperations
_pairedDeviceAgent
_listener
_payloadManager
_unlockKeyManager
_unlockLockManager
_stateHandle
_xpcServer
_helperConnection
restartBrowser:
notifyClient
updateBrowserState
airDropPublished:
lockStatusChanged:
screenStatusChanged:
contactsChanged:
linkStateChanged:
getInterface:
clearCache
cancelIdentityQueries
cancelAirDropRequests
logAirDropSessionInfo
removeInvalidNodes:
updateSecondaryNameForNodes:
updateServerCacheIfNeeded
startRecordQuery:type:domain:recordType:interface:
queryKey:type:domain:recordType:
queryRecordTimerCallBack:
addQueryToDictionary:name:type:domain:recordType:
cleanupRecordQueryForKey:
cleanupRecordQuery:type:domain:recordType:
ejectDisksIfNeeded:diskNames:
cleanupAirDropRequest:
copyNodeForService:
colorArrayFromEcolor:icolor:
cleanupRecordQueryForNetService:recordType:
personID
setDeviceIRKData:
setEdPKData:
setIdsDeviceID:
addOrUpdateIdentity:completion:
secTrustRef
logAirDropDiscoveryInfoForNode:
updateFriendRPIdentityForAccountID:withAirDropClientInfo:
startIdentityQueryForNode:
preferVibrantIcons
startAirDropRequestForNode:
clearCacheAndNotify
handleIdentity:withQueryID:emailOrPhone:error:
restartAfterDelay:
validAirDropInterface:
addService:type:domain:interface:
removeService:type:domain:
notifyClientIfDone:
initWithDomain:type:name:
initWithBytes:length:encoding:
serviceFromServiceName:
valueForKey:inTXTRecord:withLength:
deviceInfoChanged:model:ecolor:icolor:osxvers:
commentChanged:comment:
personInfoChanged:flags:atag:cname:phash:ehash:nhash:
systemInfoChanged:diskInfo:
processTXTRecordUpdate:rdlen:rdata:
dateWithTimeIntervalSinceNow:
setFireDate:
checkDiscoveryEntitlement
startConnectionlessAdvertisingWithData:
stopConnectionlessAdvertising
advertiseHashes
copyNodeForName:
startPictureQuery:
handleBrowseCallBack:interface:error:name:type:domain:
odiskMountPoints:
handleQueryCallBack:error:fullname:rrtype:rdlen:rdata:
xpcConnection
_isAirDrop
_isNetBIOS
_isWorkgroups
_maxServices
_domain
_startCalled
_isFinder
_awdlIndex
_browserID
_restartTimer
_transfersInitiated
_transfersCompleted
_firstTime
_discoveredPeers
_servers
_dnsQueries
_serverCache
_airDropRequests
_identityQueries
_types
T@"NSArray",R,C,V_types
T@"NSArray",R,C
T@"NSString",R,C,V_domain
T@"<SDBonjourBrowserDelegate>",W,V_delegate
T@"NSObject<OS_xpc_object>",&,V_xpcConnection
Ti,V_transfersInitiated
Ti,V_transfersCompleted
TB,R,V_startCalled
onQueue_start
sendStepData:type:errorCode:
setStepData:
stepData
handleStepData:
_locallyGenerated
locallyGenerated
TB,N,GisLocallyGenerated,V_locallyGenerated
isCompressor
filePathURL
URLByResolvingSymlinksInPath
timeRemaining:timeNow:
lastPathComponent
absoluteURLIfTopLevelFile:isDirectory:base:
notifyProgress:force:
fileComplete
fixedRelativePath:
quarantineFile:
pathExistsInPlaceholderInfo:
validFileName:
relativePath
removeFileFromPlaceholderList:
copyReverseParentChain:base:
addFile:withBase:toBom:
addParentChain:file:base:
addFileURLToBom:file:base:propertyKeys:topLevel:
totalFileSize:
URLFromFileInfo:
URLByAppendingPathComponent:
conflictResolvedURL:
moveFile:toDestination:
executeReadWithAdaptiveCompression
executeWriteWithAdaptiveCompression
isDecompressor
createPlaceholderFiles
bomCopierCopy:destination:options:
moveFilesToDestination
removeUnusedPlaceholderFiles
allowProgressCircleToComplete
temporaryBomPath
initBomWithFiles
initWithReadStream:writeStream:
startBomCopy:destination:options:
bomCopierCopyFileFinished:type:size:operation:
bomCopierFatalFileError:
bomCopierFatalError:
prettyNameBasedOnUUID:
sourceFiles
senderName
unzipCompressionType
skipReadableCheckFiles
disableAdaptiveCompressionForZipping
_usePKZip
_fileCount
_totalBytes
_bomArchive
_tempFolder
_bomPath
_bomCopier
_lastBytesCopied
_totalBytesCopied
_writeStream
_timeStarted
_lastProgress
_topLevelFiles
_placeholderFiles
_orderedRelativePaths
_relativePathToFile
_progressTimer
_alternateNames
_compressionEngine
_creationCompletionHandler
_disableAdaptiveCompressionForZipping
_sourceFiles
_senderName
_unzipCompressionType
_zipCompressionType
_skipReadableCheckFiles
T@"NSURL",C
T@"NSArray",C,V_sourceFiles
T@"NSString",C,V_senderName
T@"NSString",C,V_unzipCompressionType
T@"NSString",R,C,V_zipCompressionType
T@"NSSet",C,V_skipReadableCheckFiles
TB,V_disableAdaptiveCompressionForZipping
T@"<SDAirDropFileZipperDelegate>",W,V_delegate
initWithMachServiceName:
_setQueue:
sharedClient
sharedSetupAgent
_stateDump
initWithServer:xpcConnection:
autoFillDismissUserNotification
autoFillPairingSucceeded:completion:
autoFillPromptForPIN:throttleSeconds:
deviceDiscoveryFoundDevice:
deviceDiscoveryLostDevice:
deviceDiscoveryDeviceChanged:changes:
deviceDiscoveryScanStateChanged:
proximityClientDeviceEnteredImmediate:
proximityClientDeviceExitedImmediate:
proximityClientDeviceEnteredNearby:
proximityClientDeviceExitedNearby:
proximityClientDeviceWasDismissedHandler:reason:
proximityClientDeviceWasSelectedHandler:
proximityClientDeviceWillTriggerHandler:
proximityClientDeviceDidUntriggerHandler:
proximityClientDeviceUpdated:rssi:state:
remoteInteractionSessionRemoteTextEvent:
remoteInteractionSessionTextSessionDidBegin:
remoteInteractionSessionTextSessionDidEnd:
remoteInteractionSessionTextSessionDidChange:
serviceError:
servicePeerDisconnected:error:
serviceReceivedEvent:
serviceReceivedFrameType:data:peer:
serviceReceivedRequest:
serviceReceivedResponse:
sessionBluetoothStateChanged:
sessionError:
sessionReceivedEvent:
sessionReceivedFrameType:data:
sessionReceivedRequest:
sessionReceivedResponse:
userNotificationError:
userNotificationResponse:
userNotificationTextResponse:
userNotificationDictionaryResponse:
accountForAppleID:withCompletion:
myAccountWithCompletion:
statusInfoWithCompletion:
activateAssertionWithIdentifier:
activityStateWithCompletion:
appleIDInfoWithCompletion:
clearXPCHelperImageCacheWithCompletion:
contactIDForEmailHash:phoneHash:completion:
displayNameForEmailHash:phoneHash:completion:
displayStringForContactIdentifier:deviceIdentifier:completion:
findContact:skipIfContactBlocked:completion:
getDeviceAssets:completion:
getPeopleSuggestions:completion:
hashManagerControl:completion:
openSetupURL:completion:
preheatXPCConnection
preventExitForLocaleReason:
reenableProxCardType:completion:
repairDevice:flags:completion:
retriggerProximityPairing:
retriggerProximitySetup:
setAudioRoutingScore:completion:
setupDevice:homeIdentifier:completion:
showDevicePickerWithInfo:completion:
testContinuityKeyboardBegin:
triggerHomeKitDeviceDetectedWithURL:completion:
triggerProximityAutoFillDetectedWithURL:completion:
wifiPasswordSharingAvailabilityWithCompletion:
startProxCardTransactionWithOptions:completion:
coordinatedAlertsRequestStart:completion:
coordinatedAlertsRequestFinish
deviceDiscoveryActivate:completion:
deviceDiscoveryUpdate:
deviceDiscoveryFastScanTrigger:
deviceDiscoveryFastScanCancel:
deviceDiscoveryTriggerEnhancedDiscovery:
bluetoothUserInteraction
diagnosticBLEModeWithCompletion:
diagnosticControl:completion:
diagnosticLogControl:completion:
diagnosticMock:device:completion:
diagnosticMockStart:
diagnosticMockStop:
diagnosticShow:completion:
diagnosticUnlockTestClientWithDevice:
diagnosticUnlockTestServer
nfcTagReaderUIActivateWithEndpoint:params:completion:
proximityClientActivate:completion:
proximityClientUpdate:
proximityClientDismissContentForDevice:completion:
proximityClientProvideContent:forDevice:force:completion:
proximityClientSuppressDevice:completion:
proximityClientStopSuppressingDevice:completion:
proximityClientUpdateContent:forDevice:completion:
proximityClientRequestScannerTimerReset
autoFillHelperActivate:completion:
autoFillHelperDidPickUsername:password:error:
autoFillHelperTryPIN:
autoFillHelperUserNotificationDidActivate:
autoFillHelperUserNotificationDidDismiss:
remoteInteractionSessionActivate:completion:
remoteInteractionSessionSendPayload:
serviceActivate:completion:
serviceUpdate:
serviceSendEvent:
serviceSendFrameType:data:peer:
serviceSendRequest:
serviceSendResponse:
sessionActivate:completion:
sessionSendEvent:
sessionSendFrameType:data:
sessionSendRequest:
sessionSendResponse:
userNotificationPresent:
initWithObjects:
setExportedInterface:
setExportedObject:
_connectionInvalidated:
setRemoteObjectInterface:
connectionInvalidated
countForObject:
_stateDumpString
stateAppendXPCConnections:
listener:shouldAcceptNewConnection:
_appleIDAgent
_autoFillAgent
_assertions
_contactsQueue
_nearbyAgent
_prefNotifyToken
_riAgent
_rtiClient
_proxHandoffAgent
_setupAgent
_xpcConnections
_xpcInterfaceClient
_xpcInterfaceServer
_xpcListener
_invalidateAssertions
coordinatedAlertRequestCancel:
diagnosticBLEModeStop:
deviceDiscoveryRequestStop:
proximityClientStop:
sessionStop:
serviceStop:
unlockStopTestClient
cuValueForEntitlementNoCache:
_entitled:state:label:
remoteObjectProxy
setDismissUserNotificationHandler:
setPairingResponseHandler:
setPromptForPINHandler:
helperStart:
helper:didPickUsername:password:error:
helper:tryPIN:
helper:userNotificationDidActivate:
helper:userNotificationDidDismiss:
setPreventNotifications:
setPreventRepair:
setEnhancedDiscovery:
contactIdentifier
emailAddress
setContactIdentifier:
stringByReplacingOccurrencesOfString:withString:
setEmailAddress:
phoneNumber
contactIDs
_getPeopleInfo:completion:
maxPeople
_getPeopleSuggestions:completion:
setContactID:
setMaximumNumberOfSuggestions:
initWithConfiguration:
rankedGlobalSuggestionsFromContext:contactsOnly:
recipients
senderHandle
setSendersKnownAlias:
setHandles:
rebuildDB
fileURLWithPath:
dumpDBAtFileURL:
path
openSetupURL:
reenableProxCardType:
setAudioRoutingScore:
handleInputDidBeginWithFlags:sessionInfo:
handleInputDidEndWithFlags:sessionInfo:
uiShowing
coordinatedAlertRequestStart:
coordinatedAlertRequestFinish:
setDeviceLostHandler:
setScanStateChangedHandler:
deviceDiscoveryRequestStart:
changeFlags
discoveryFlags
deviceFilter
fastScanMode
setFastScanMode:
overrideScreenOff
setOverrideScreenOff:
rssiThreshold
setRssiThreshold:
scanRate
trackPeers
setTrackPeers:
deviceDiscoveryRequestUpdate:
deviceDiscoveryFastScanTrigger:reason:
deviceDiscoveryFastScanCancel:reason:
deviceDiscoveryTriggerEnhancedDiscovery:reason:
diagnosticBLEModeStart:
substringFromIndex:
testUI:
testRemote:
testService:
testKeychain:
caseInsensitiveCompare:
sharedNearbyPipe
testPipePing
setHotspotInfo:
testUIAppleTVSetup:
testSetupUIB238:
testHomeKitDeviceDetected:
testNFCUI:
testPairUI:
testPINShow:
testPINHide
testSetupUIPasswordSharing:
testRepairUI:
testSetupUIWHA:
testSetupUIWatch:
testProxCardKit:
testPost:
diagnosticMockChanged:
diagnosticMockFound:
diagnosticMockLost:
idsDevicesAppendDescription:
bleProximityInfo
unlockStartTestClientWithDevice:
unlockStartTestServer
setDeviceEnteredImmediateHandler:
setDeviceExitedImmediateHandler:
setDeviceEnteredNearbyHandler:
setDeviceExitedNearbyHandler:
setDeviceWasDismissedHandler:
setDeviceWasDismissedHandlerEx:
setDeviceWasSelectedHandler:
setDeviceWillTriggerHandler:
setDeviceDidUntriggerHandler:
wantsUpdates
setDeviceUpdateHandler:
proximityClientStart:
shouldAdvertise
setShouldAdvertise:
proximityClient:dismissContentForDevice:
proximityClient:provideContent:forDevice:force:
proximityClient:suppressDevice:
proximityClient:stopSuppressingDevice:
proximityClient:updateContent:forDevice:
proximityClientRequestScannerTimerReset:
setRemoteTextEventHandler:
setTextSessionDidBegin:
setTextSessionDidEnd:
setTextSessionDidChange:
sessionStart:
sendPayload:
_entitledService:state:
setErrorHandler:
setEventMessageHandler:
setPeerDisconnectedHandler:
setReceivedFramePeerHandler:
setRequestMessageHandler:
setResponseMessageInternalHandler:
setSendFramePeerHandler:
serviceStart:
updateWithService:
serviceSendEvent:service:
serviceType
bleNearbyInfoSendFrameType:serviceType:data:peer:isSession:
serviceSendRequest:service:
serviceSendResponse:service:
serviceUUID
setBluetoothStateChangedHandler:
setReceivedFrameHandler:
setSendFrameHandler:
setSession:
sessionSendEvent:session:
peerDevice
sessionSendRequest:session:
sessionSendResponse:session:
_afsHelper
_caRequest
_ddRequest
_diagnosticBLEModeStarted
_entitledBluetoothUserInteraction
_entitledClient
_entitledCoordinatedAlerts
_entitledDeviceDiscovery
_entitledDiagnostics
_entitledProximityClient
_entitledRemoteInteractionSession
_entitledService
_entitledSession
_notification
_preventExitForLocaleReason
_proxClient
_riSession
_service
_session
_server
_unlockTestClientStarted
_xpcCnx
rangeOfString:options:
initWithUUIDString:
keyData
keyIdentifier
dateCreated
numberWithUnsignedShort:
initWithDictRepresentation:
dictRepresentation
setKeyIdentifier:
setDateCreated:
setLastUsedCounter:
setKeyData:
_validKey
_lastUsedCounter
_keyIdentifier
_dateCreated
_keyData
T@"NSUUID",&,N,V_keyIdentifier
T@"NSDate",&,N,V_dateCreated
T@"NSMutableData",&,N,V_keyData
TS,N,V_lastUsedCounter
validKey
TB,N,GisValidKey,V_validKey
T@"NSDictionary",R,N
newEncryptionKey
prepareForNewEncryptionRequest
getTagWhileEncryptingBytesInPlace:counterValue:forAdvertisementWithVersion:
getResultWhileDecryptingBytesInPlace:andCounter:withTag:version:
valueForKeyPath:
encryptionKey
deleteAllEncryptionAndDecryptionKeys
unwrappedDataRepresentationForKey:
saveEncryptionKeyDataRepresentation:
loadEncryptionKeyDataRepresentation
propertyListWithData:options:format:error:
numberWithInteger:
generateNewEncryptionKey
timeIntervalSinceDate:
saveDecryptionKeyDataRepresentation:forDeviceIdentifier:
loadDecryptionKeyDataRepresentationForDeviceIdentifier:
newDecryptionKeyFromDataRepresentation:
loadWrappingKeyData
baseDictEncryptionKey
baseDictDecryptionKeyForDeviceIdentifier:
baseDict
baseDictWrappingKey
addEntriesFromDictionary:
addObjectsFromArray:
hasPrefix:
testWrappingKeychainItem
loadKeyDataRepresentationWithBaseDict:
saveKeyDataRepresentation:withBaseDict:
bumpEncryptionKeyCounterValue
setDecryptionKey:forDeviceIdentifier:
decryptionKeyForDeviceIdentifier:
dataRepresentationForCurrentEncryptionKey
_deviceIdentifierToDecryptionKey
_encryptionKey
_wrappingKey
_shouldRefreshWrappingKey
T@"SDActivityEncryptionKey",R,N
T@"NSData",R,N
applySSLSettings:
currentRunLoop
startOpenTimer
usingMessages
logTransfer
handleBytesForStream
openTimerFired:
propertyForKey:
handleOpenedStream:
handleBytesAvailable
handleSpaceAvailable
invalidateOpenTimer
setTCPProperties:
checkedCert
setCheckedCert:
evaluateCert
handleBytesForMessage
handleSpaceForMessage
handleSpaceForStream
shouldReadNetwork
messageWithData:
headerWithLength:
handleHeaderRead
handleMessageRead
parseHeader:
trimHeader:
resetReadState
handleMessageWritten:
sendMessage:withErrorHandler:
inputStream
setInputStream:
outputStream
setOutputStream:
registeredStreams
setRegisteredStreams:
bufferSpaceAvailable
setBufferSpaceAvailable:
openTimer
setOpenTimer:
isClient
setClient:
setStreamError:
outputStreamData
setOutputStreamData:
byteIndex
setByteIndex:
outMessage
setOutMessage:
messageQueue
setMessageQueue:
handlers
setHandlers:
bytesRead
setBytesRead:
inMessageLength
setInMessageLength:
inMessage
setInMessage:
inData
setInData:
inputState
setInputState:
loggedTransfer
setLoggedTransfer:
wroteToNetwork
setWroteToNetwork:
readFromNetwork
setReadFromNetwork:
timeOpened
setTimeOpened:
timeToOpen
setTimeToOpen:
_shouldReadNetwork
_usingMessages
_checkedCert
_registeredStreams
_bufferSpaceAvailable
_client
_loggedTransfer
_inMessageLength
_inputStream
_outputStream
_openTimer
_streamError
_outputStreamData
_byteIndex
_outMessage
_messageQueue
_handlers
_bytesRead
_inMessage
_inData
_inputState
_wroteToNetwork
_readFromNetwork
_timeOpened
_timeToOpen
TB,V_checkedCert
TB,V_registeredStreams
TB,V_bufferSpaceAvailable
T@"NSTimer",&,V_openTimer
client
TB,GisClient,V_client
T@"NSError",&,V_streamError
T@"NSInputStream",&,V_inputStream
T@"NSOutputStream",&,V_outputStream
T@"NSMutableData",&,V_outputStreamData
Tq,V_byteIndex
T@"NSMutableData",&,V_outMessage
T@"NSMutableArray",&,V_messageQueue
T@"NSMutableDictionary",&,V_handlers
Tq,V_bytesRead
TI,V_inMessageLength
T@"NSData",&,V_inMessage
T@"NSMutableData",&,V_inData
TQ,V_inputState
TB,V_loggedTransfer
Tq,V_wroteToNetwork
Tq,V_readFromNetwork
T@"NSDate",&,V_timeOpened
T@"NSDate",&,V_timeToOpen
TB,V_usingMessages
TB,V_shouldReadNetwork
T@"<SDStreamHandlerDelegate>",W,V_delegate
hasLtk
setHasSignout:
hasSignout
signout
_ltk
_ltkID
_signout
T@"NSData",&,N,V_ltk
T@"NSData",&,N,V_ltkID
TB,N,V_signout
initWithURL:
setHTTPShouldHandleCookies:
currentDevice
serverFriendlyDescription
_homePodEnsureStarted:completion:
_riServerEnsureStarted:completion:
_watchEnsureStarted:completion:
initWithBundleIdentifier:
setWantsNotificationResponsesDelivered
requestAuthorizationWithOptions:completionHandler:
getNotificationSettingsWithCompletionHandler:
_addRequestWithID:content:type:isHomePodMini:
requestWithIdentifier:content:trigger:
setAttachments:
addNotificationRequest:withCompletionHandler:
attachmentWithIdentifier:URL:options:error:
notification
actionIdentifier
riServerRemove:
clientUserDidTapNotification:
setBody:
setCategoryIdentifier:
setShouldHideTime:
setShouldHideDate:
setShouldIgnoreDoNotDisturb:
soundWithAlertType:
setSound:
setSubtitle:
setShouldBackgroundDefaultAction:
setShouldSuppressDefaultAction:
_riServerPostIfNeeded:backgroundAction:
riServerContentForDevice:backgroundAction:
_addRequestWithID:content:type:
_riServerRemove:
removeDeliveredNotificationsWithIdentifiers:
_riServerRemoveAll
removeAllDeliveredNotifications
_riServerUpdate:info:
prompt
title
replaceContentForRequestWithIdentifier:replacementContent:completionHandler:
_riServerUpdate:rtiData:
payloadWithData:version:
documentTraits
_tvAutoFillPostIfNeeded:
_tvAutoFillRemove:
_tvAutoFillRemoveAll
iconForApplicationIdentifier:
setIcon:
_watchKeyboardPostIfNeeded:
watchKeyboardContentForDevice:
_watchKeyboardRemove:
_watchKeyboardRemoveAll
_watchKeyboardUpdate:rtiData:
notificationType
body
header
homePodType
iconForSystemImageNamed:
setTitle:
attachmentURL
attachmentFromURL:
_homePodHandoffPostIfNeeded:info:
homePodHandoffContentForDevice:info:
_homePodHandoffRemove:reason:
removePendingNotificationRequestsWithIdentifiers:
notificationDidDismiss:reason:
_homePodHandoffRemoveAll
_homePodHandoffUpdateIfNeeded:info:
setAttachmentURL:
homePodHandoffUpdateIfNeeded:info:
userDidTapNotification:
homePodHandoffRemove:reason:
_homePodHandleResponse:completion:
_tvHandleResponse:completion:
_watchHandleResponse:completion:
testAutofillPost
testAutoFillRemove
testHandoffPost
testKeyboardPost
testKeyboardPostAutoFill
testKeyboardRemove
testKeyboardUpdate
testWatchKeyboard
testWatchKeyboardAutoFill
testPostBasic
setNotificationType:
setHeader:
homePodHandoffPostIfNeeded:info:
riServerPostIfNeeded:backgroundAction:
setDeviceActionType:
setPrompt:
riServerUpdate:info:
watchKeyboardPostIfNeeded:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
riServerRemoveAll
riServerUpdate:rtiData:
watchKeyboardRemove:
watchKeyboardRemoveAll
watchKeyboardUpdate:info:
_watchKeyboardUpdate:info:
watchKeyboardUpdate:rtiData:
homePodHandoffRemoveAll
_autoFillRequests
_homePodNotifCenter
_homePodMiniNotificationCenter
_homePodNotifGranted
_homePodRequests
_tvKeyboardRequests
_tvNotifCenter
_tvNotifGranted
_watchKeyboardRequests
_watchNotifCenter
_watchNotifGranted
T@"NSSet",R,C,N
authorizationStatus
_browser
T@"NSString",R,C,V_workgroup
T@"<SDWindowsBrowserDelegate>",W,V_delegate
senderBundleID
canHandleTransferRegardlessOfBundleID
migrateOldKeysIfNeeded
saveLongTermKeys
deletePersistedLongTermKeys
loadLongTermKeys
longTermKeyStorageFilePath
writeToURL:options:error:
setResourceValue:forKey:error:
checkForBackupExclusion:
validateKeybagUUID
legacyLocalLongTermKey
legacyRemoteLongTermKey
unlockSessionAsOriginator:usingEscrow:escrowSecret:errorCode:
authSessionWithFlags:secret:errorCode:
stepWithAuthSession:data:authStep:errorCode:
deviceName
checkForLegacyEscrowData
legacyEscrowData
storeEscrowData:
deleteLegacyEscrowData
authSessionWithFlags:secret:
escrowSecretWithAuthSession:
confirmUnlockWithAuthSession:
escrowData
checkForEscrowData
deleteEscrowData
allKeychainItems
migrateEscrowDataIfNeeded
setLocalLongTermKey:
setRemoteLongTermKey:
keybagUUID
setKeybagUUID:
keyDeviceID
setKeyDeviceID:
setPairingStorePath:
setDeviceName:
_localLongTermKey
_remoteLongTermKey
_keybagUUID
_keyDeviceID
_pairingStorePath
_deviceName
T@"NSData",&,N,V_localLongTermKey
T@"NSData",&,N,V_remoteLongTermKey
T@"NSString",&,N,V_keybagUUID
T@"NSString",&,V_keyDeviceID
T@"NSString",C,V_pairingID
T@"NSString",C,V_pairingStorePath
T@"NSString",C,V_deviceName
initWithKeyOptions:valueOptions:capacity:
transportQueue
loadCloudPairRetries
updateBluetoothIDCache
clientQueue
clientMap
sendIdentifierToSessionID
clearAutoUnlockDeviceCache
autoUnlockDeviceCache
onqueue_bluetoothIDForIDSID:
onqueue_bluetoothDeviceIdentifiers
autoUnlockDeviceForIDSDevice:
autoUnlockDeviceForBluetoothID:cached:
onqueue_devicesWithLTKs
onqueue_autoUnlockEligibleDevices:
showOtherDevices
watchVersionEligibleForDevice:
setKeyExists:
setLastSeenWatchDate:
watchCurrentlyInList
setWatchCurrentlyInList:
setWatchExistedInUnlockList:
activityServiceHasWatch
onqueue_enabledAutoUnlockDevicesUsingCache:
stableBluetoothIdentifierForIDSDevice:
nameForDevice:
setModelIdentifier:
productName
setProductName:
setProductVersion:
setProductBuildVersion:
enclosureColor
setEnclosureColor:
setDefaultPairedDevice:
modelNameForDevice:
setMajorOSVersion:
setSupportsAlwaysDirect:
setSupportsApproveWithWatch:
supportsApproveWithWatch
setSupportsApproveIcon:
disableEncryption
setSupportsEncryption:
setSupportsAdvertisingUnlocked:
setSupportsConnectionCache:
setSupportsHEIC:
cachedApproveBluetoothIDs
enabledAutoUnlockDevices
setCachedApproveBluetoothIDs:
isEqualToSet:
showIDInName
cachedBluetoothIDToUniqueIDs
setCachedBluetoothIDToUniqueIDs:
setProxyBluetoothID:
setBluetoothCloudPaired:
accountType
registrationStatus
supportsConnectionCache
cloudPairRetryRecords
setCloudPairRetryRecords:
sendPayload:toDevice:type:sessionID:queueOneID:timeout:errorHandler:
sendPayload:toDevice:type:sessionID:queueOneID:timeout:completion:
sendPayload:toDevice:type:sessionID:queueOneID:wantsACK:timeout:completion:
primaryClient
serverReceivedTime
fromServerStorage
pairingRequestIsValidForDeviceID:messageContext:
appleWatchExisted
watchSeenRecently
T@"NSDate",R,N
removeClientForIdentifier:
bluetoothDeviceIdentifiers
pairedAutoUnlockDevice
isDeviceSatellitePaired
approveBluetoothIDs
macVersionEligibleForDeviceID:
proxyBluetoothDeviceIDForDeviceID:
connectionCacheDevices
handleSuccessfulMessageSentWithIdentifier:sessionID:
updateRetryDatesForDeviceIDs:
canRetryCloudPairingForDeviceID:useShortDate:
transferDataFromPayload:sessionID:
autoUnlockService
setIdsService:
setTransportQueue:
setClientQueue:
setClientMap:
completionHandlers
setCompletionHandlers:
setSendIdentifierToSessionID:
sendDates
setSendDates:
lastSendDate
setLastSendDate:
setAutoUnlockDeviceCache:
_lastSeenWatchDate
_watchExistedInUnlockList
_watchCurrentlyInList
_autoUnlockService
_primaryClient
_transportQueue
_clientQueue
_clientMap
_completionHandlers
_sendIdentifierToSessionID
_sendDates
_lastSendDate
_autoUnlockDeviceCache
_cloudPairRetryRecords
_cachedBluetoothIDToUniqueIDs
_cachedApproveBluetoothIDs
T@"IDSService",&,N,V_idsService
T@"NSObject<OS_dispatch_queue>",&,N,V_transportQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_clientQueue
T@"NSMapTable",&,N,V_clientMap
T@"NSMutableDictionary",&,V_completionHandlers
T@"NSMutableDictionary",&,N,V_sendIdentifierToSessionID
T@"NSMutableDictionary",&,V_sendDates
T@"NSDate",&,N,V_lastSendDate
T@"NSMutableDictionary",&,N,V_autoUnlockDeviceCache
T@"NSMutableDictionary",&,N,V_cloudPairRetryRecords
T@"NSNumber",&,N,V_watchCurrentlyInList
T@"NSDate",&,N,V_lastSeenWatchDate
T@"NSNumber",&,N,V_watchExistedInUnlockList
T@"NSMutableDictionary",&,N,V_cachedBluetoothIDToUniqueIDs
T@"NSSet",&,N,V_cachedApproveBluetoothIDs
T@"<SDAutoUnlockTransportClient>",W,V_primaryClient
workgroups
loadWindows
takeActionOnServerChanged:neighborhood:
notifyClientAboutWorkgroups
userName
setUserName:
setConnectionState:
domainsChanged:
workgroupsChanged:
connectedChanged:
odiskNodes
managedChanged:
isClassroomEnabled
classroomChanged:
sidebarPrefsChanged:
sharedRapportBrowser
airDropNodes
localizedCaseInsensitiveCompare:
subarrayWithRange:
domainChildren
workgroupChildren
printerNodes
fileNodes
addBonjourChildrenFromCache:
addConnectedChildrenFromCache:
addClassroomChildrenFromCache:
addRapportChildrenFromCache:
addFakeRangingMeasurementIfAppropriateToNodesInCache:
coalescedNodesForNewAvailableNodes:
updateWithAirDropNodes:
updateSelectionReasonInNodes:
loadBonjour
loadDomains
loadSharePoints
loadWorkgroups
loadConnected
loadManaged
loadClassroom
loadODisk
loadRapport
loadAirDrop
loadSidebarPrefsMonitor
boolValueSafe
unloadBonjour
unloadWindows
unloadDomains
unloadSharePoints
unloadWorkgroups
unloadConnected
unloadManaged
unloadClassroom
unloadODisk
unloadAirDrop
unloadRapport
unloadSidebarPrefsMonitor
logMetricsWithSessionTime:
neighborhoodNodes
addWindowsChildrenFromCache:
addManagedChildrenFromCache:
sidebarNodesFromServerNodes:nonServerCount:addAllNode:
sharePointNodes
appendAllNode:
nodesInternal:
sharePointBrowser:nodesDidChangeWithError:
onlySupportsADisk:
copyOverBonjourInfo:source:
_parent
_protocols
_combineWorkgroups
_nodeCoalescer
_airDropDiscoveryLogger
_shouldCollectNodeCoalescerMetrics
_odiskDomains
_airDropDomains
_bonjourDomains
_windowsWorkgroups
_domainBrowser
_managedBrowser
_classroomBrowser
_connectedBrowser
_workgroupBrowser
_sharePointBrowser
_rapportBrowser
_managedURLTable
_commentHashTable
_originalNodes
_contactIdentifierMap
T@"<SDNodeBrowserDelegate>",W,V_delegate
initWithAccountIdentifier:emailOrPhone:
accountIdentifier
_accountIdentifier
_emailOrPhone
T@"NSString",R,N,V_accountIdentifier
T@"NSString",R,N,V_emailOrPhone
date
array
_accountForAppleID:
altDSID
copyPrivateKey
certificateExpired
isInvalid
validationRecord
_prefsChanged
_addObservers
_ensurePushStarted
_ensurePeriodicVerifyTimerStarted
_ensureEduModeDevicesAreCleanedUp
handleAppleIDSignedInNotification
handleAppleIDSignedOutNotification
handleAppleIDChangedNotification
handleUILockStatusChangedNotification
handleKeyBagFirstUnlockNotification
_removeObservers
_ensurePushStopped
_ensurePeriodicVerifyTimerStopped
_ensureThrottledRetryTimerStopped
certificateToken
certificateTokenCreationDate
dateByAddingTimeInterval:
setCertificateToken:
setPrivateKeyPersistentReference:
setCertificateToken:privateKeyPersistentReference:forAppleID:
removeAppleID:
clearPersonInfoCache
identityForAppleID:
copyIdentity
initWithEnvironmentName:namedDelegatePort:queue:
setEnabledTopics:
requestTokenForTopic:identifier:
validStartDate
suggestedValidDuration
nextCheckDate
needsUpdate
validatedEmailHashes
validatedPhoneHashes
privateKeyPersistentReference
certificatePersistentReference
certificateExpirationDate
serialNumber
intermediateCertificatePersistentReference
intermediateCertificateExpirationDate
intermediateCertificateSerialNumber
needsRenewal
_wasOldAgentIdentityQueried
_metaInfoValueForKey:
_accountState
_keychainCleanupTag
_setMetaInfoValue:forKey:
shutdown
_handlePeriodicVerifyTimerFired
_handleThrottledRetryTimerFired
_setCurrentAppleIDIdentity:
_setCurrentAppleIDContactInfo:validationRecord:
_verifyStateWithDelay:
_updateAppleID
_clearAccount
_verifyState
sharedBag
IDMSEnvironment
dictionaryWithDictionary:
initWithDictionary:
addPersonInfoToCache:
_handleCertificateStatusUpdate:forAppleID:
setAltDSID:
setSuggestedValidDuration:
setValidatedEmailHashes:
setValidatedPhoneHashes:
setValidStartDate:
_handleUILockStatusChange
setLastConnectionDate:
setLastSuccessfulConnectionDate:
_ensureThrottledRetryTimerStartedWithSuggestedDelay:
verifyKeys
numberWithUnsignedLongLong:
numberWithUnsignedInteger:
initWithAppleID:
setResponseHandler:
connection:didReceiveIncomingMessage:
dictionary
initWithType:appleID:info:
cachedPersonInfoWithEmailOrPhone:
_handleFindPersonResponse:forRequest:emailOrPhone:withError:queue:completion:
_update
_handleInfoResponse:forAppleID:infoRequest:certificateSerialNumber:withError:completion:
_handleReceivedCertificateToken:privateKeyPersistentReference:forAppleID:
setCertificateTokenHandler:
initWithAppleID:certificateToken:privateKeyPersistentReference:
_handleReceivedIdentity:forAppleID:identityRequest:withError:completion:
setIdentity:forAppleID:
setContactInfo:validationRecord:forAppleID:
setMetaInfo:
statusInfo
_detailedDescription
metaInfo
addAppleID:
_cleanUpAccount:
_handleServerTaskCompletionWithError:
_requestIdentityForAppleID:certificateToken:privateKeyPersistentReference:withCompletion:
_performKeyVerificationForIdentity:
_handleKeyVerificationFailure
_performKeychainCount
_requestInfoForAppleID:completion:
_handleAccountIdentifierValidationRecordMismatch
_handleUntrustedAppleIDCertificateChainForIdentity:
_checkIfAppleIDCertificateChainIsValidForIdentity:completion:
queryVerifiedIdentityForEmailOrPhone:queue:completion:
verifiedIdentityForEmailOrPhone:queue:completion:
_copyIdentityForAppleID:
personInfoWithEmailOrPhone:queue:completion:
_invalidate
_personInfoWithEmailOrPhone:queue:completion:
_performServerTaskWithInfo:completion:
_performOtherTaskWithInfo:completion:
_statusInfo
_handleAppleIDChangedNotification
_handleAppleIDSignedInNotification
_handleAppleIDSignedOutNotification
_handleKeyBagFirstUnlockNotification
_handleUILockStatusChangedNotification
topic
_updateMyInfo
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
_wasIdentityLinkedOnce
verifiedIdentityForEmailOrPhone:completion:
verifiedIdentityForEmailOrPhone:
verifiedIdentityForCertificateChain:emailOrPhone:error:
detailedDescription
personInfoWithEmailOrPhone:completion:
prefsChanged
requestWithInfo:completion:
_agentEnabled
_agentMetaInfo
_appleID
_creationDate
_dbManager
_dispatchQueue
_findPersonRequests
_identityRequest
_infoRequest
_linkIdentityEnabled
_periodicVerifyTimer
_pushConnection
_pushEnvironment
_task
_testIdentityRequest
_throttledRetryTimer
_updatePush
_updatePeriodicVerifyTimer
clRangingPeer
macAddressData
_clRangingPeer
_macAddressData
T@"_CLRangingPeer",&,N,V_clRangingPeer
T@"NSData",&,N,V_macAddressData
invalidationHandler
setQueueAvailableHandler:
setAwdlStartedHandler:
setPeerFoundHandler:
setRangingStartedHandler:
setRangingCompletedHandler:
isRangingInitiator
rangingPeer
setRangingPeer:
setWifiRangingError:
queueAvailableHandler
awdlStartedHandler
peerFoundHandler
rangingStartedHandler
rangingCompletedHandler
activateCalled
setActivateCalled:
invalidateCalled
setInvalidateCalled:
rangeable
setRangeable:
calledAWDLStarted
setCalledAWDLStarted:
rangingStarted
setRangingStarted:
waitingForNetworkToDisable
setWaitingForNetworkToDisable:
_isRangingInitiator
_activateCalled
_invalidateCalled
_rangeable
_calledAWDLStarted
_rangingStarted
_waitingForNetworkToDisable
_rangingPeer
_wifiRangingError
_wifiRangingResults
_identifier
_queueAvailableHandler
_awdlStartedHandler
_peerFoundHandler
_rangingStartedHandler
_rangingCompletedHandler
_invalidationHandler
T@"SDAutoUnlockRangingPeer",&,N,V_rangingPeer
T@"NSString",R,C,N,V_identifier
T@?,C,N,V_queueAvailableHandler
T@?,C,N,V_awdlStartedHandler
T@?,C,N,V_peerFoundHandler
T@?,C,N,V_rangingStartedHandler
T@?,C,N,V_rangingCompletedHandler
T@?,C,N,V_invalidationHandler
T@"NSError",&,N,V_wifiRangingError
T@"NSArray",&,N,V_wifiRangingResults
TB,N,V_activateCalled
TB,N,V_invalidateCalled
TB,N,V_rangeable
TB,N,V_calledAWDLStarted
TB,N,V_rangingStarted
TB,N,V_waitingForNetworkToDisable
T@"NSDictionary",R,C,N,V_awdlInfo
TB,R,N,V_isRangingInitiator
_createWiFiObserver
_createLocationManager
setLocationManager:
locationManager
wifiRequestQueue
_processRequestQueue
currentRequest
_disableRangeable
_stopAWDL
setCurrentRequest:
_addWiFiRequest:
_cancelWiFiRequest:
removeObjectAtIndex:
setAwdlStarting:
_startAWDLWithInfo:
_invalidateCurrentRequest
_invalidateWiFiRequest:
setAwdlStartFailed:
setAwdlTimerFired:
_resetManagerState
requestRangingToPeers:timeoutSeconds:
startRangingFromPeers:
stopRangingFromPeers:
_invalidateAWDLTimer
awdlTimer
_handleAWDLTimerFired
setAwdlTimer:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
_startRanging
_enableRangeableIfNeeded
locationManager:didRangePeers:
locationManager:rangingDidFailForPeer:withError:
__handleAWDLDisabledIfNeededForRequest:
_restartAWDLTimer
setQueue:
setAwdlNetwork:
awdlStartFailed
awdlStarting
awdlTimerFired
setWifiRequestQueue:
_awdlStartFailed
_awdlStarting
_awdlTimerFired
_awdlNetwork
_currentRequest
_locationManager
_wifiRequestQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_source>",&,V_awdlTimer
T@,&,V_awdlNetwork
TB,N,V_awdlStartFailed
TB,N,V_awdlStarting
TB,N,V_awdlTimerFired
T@"SDAutoUnlockWiFiRequest",&,V_currentRequest
T@"CLLocationManager",&,N,V_locationManager
T@"NSMutableArray",&,N,V_wifiRequestQueue
initWithRequest:wiFiManager:
wiFiManager
_wiFiManager
T@"SDAutoUnlockWiFiRequest",R,N,V_request
T@"SDAutoUnlockWiFiManager",R,W,N,V_wiFiManager
setEvents:
setCurrentHistoryToken:
_events
_currentHistoryToken
T@"NSArray",&,V_events
T@"NSData",&,V_currentHistoryToken
enumeratorForChangeHistoryFetchRequest:error:
horizontalAngle
ptsScore
dispatchQueue
_sendLogRequestToDeviceID:honeybeeID:
idsService
_sendLogRequestToDevices:honeybeeID:
_sendMessage:devices:type:
receivedHoneybeeIDs
collectingSysdiagnose
_uploadSysdiagnose:
_collectSysdiagnoseWithCompletion:
_uploadSysdiagnoseToHoneybee:honeybeeID:
type
_handleLogRequest:
sendLogRequestToDeviceIDs:honeybeeID:
sendLogRequestToDevices:honeybeeID:
setCollectingSysdiagnose:
sysdiagnoseQueue
setSysdiagnoseQueue:
setReceivedHoneybeeIDs:
honeybeeConnection
setHoneybeeConnection:
_collectingSysdiagnose
_sysdiagnoseQueue
_receivedHoneybeeIDs
_idsService
_honeybeeConnection
TB,N,V_collectingSysdiagnose
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sysdiagnoseQueue
T@"NSMutableArray",&,N,V_receivedHoneybeeIDs
T@"IDSService",R,N,V_idsService
T@"NSObject<OS_xpc_object>",&,N,V_honeybeeConnection
aa_primaryAppleAccount
dataWithBytes:length:
dataUsingEncoding:
base64EncodedStringWithOptions:
fileSystemRepresentation
firstObject
defaultManager
URLForDirectory:inDomain:appropriateForURL:create:error:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
dictionaryWithObjects:forKeys:count:
absoluteURL
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
errorWithDomain:code:userInfo:
stringByAppendingPathComponent:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
URLByDeletingLastPathComponent
copy
pathExtension
stringByDeletingPathExtension
mutableCopy
whitespaceCharacterSet
rangeOfCharacterFromSet:options:
substringWithRange:
intValue
floatValue
deleteCharactersInRange:
appendString:
count
reverseObjectEnumerator
domain
code
getResourceValue:forKey:error:
lowercaseString
hasSuffix:
componentsSeparatedByString:
objectAtIndexedSubscript:
characterSetWithCharactersInString:
stringByTrimmingCharactersInSet:
valueWithPointer:
integerValue
numberWithLong:
postNotificationName:object:userInfo:
characterAtIndex:
streamToService:withFileHandle:acceptReply:
enableService:
disableService:
streamHandlerForService:
clientProxy
setClientProxy:
streamHandlers
setStreamHandlers:
enabledServices
setEnabledServices:
_managerID
_clientProxy
_streamHandlers
_enabledServices
T@"<SFCompanionServiceManagerClient>",&,V_clientProxy
T@"NSMutableDictionary",&,V_streamHandlers
T@"NSMutableArray",&,V_enabledServices
T@"NSString",R,V_managerID
searchForBrowsableDomains
scheduleBrowser
displayNameForDomain:
parseDomain:
buildNodes
statusChanged:
_domains
_domainTree
buildNodesAndNotify
setHasSuccess:
hasSuccess
_success
T@"NSString",&,N,V_sessionID
TB,N,V_success
sendDatesByMessageIdentifier
completionHandlersByMessageIdentifier
_completionHandlersByMessageIdentifier
_sendDatesByMessageIdentifier
T@"NSMutableDictionary",R,C,N,V_completionHandlersByMessageIdentifier
T@"NSMutableDictionary",R,C,N,V_sendDatesByMessageIdentifier
T@"IDSService",R,N,V_autoUnlockService
sendAWDLInfo:
setLocalAWDLInfo:
useRealRangingKey
rangingKey
setAwdlInfoData:
setRangingKey:
localAWDLInfo
setCoreLocationError:
setStartAWDLError:
appIcon
setAppIcon:
lastLocalUnlockDate
_useAKSToken
_inRange
_shouldUnlock
_acceptor
_rangingTimedOut
_aksSuccess
_useEncryption
_awdlInfoData
_awdlStart
_awdlInterval
_distance
_rangingKey
_rangingErrorString
_rangingStart
_rangingInterval
_attemptError
_remoteAWDLInfo
_localAWDLInfo
_sessionRangingKey
_wifiErrorDomain
_wifiRangingErrorCode
_coreLocationError
_startAWDLError
_wifiRequest
_appIcon
_lastLocalUnlockDate
TB,N,V_useAKSToken
TB,N,V_inRange
TB,N,V_shouldUnlock
T@"NSData",C,N,V_awdlInfoData
acceptor
TB,N,GisAcceptor,V_acceptor
T@"NSDate",&,N,V_awdlStart
Td,N,V_awdlInterval
T@"NSNumber",&,N,V_distance
T@"NSData",&,N,V_rangingKey
TB,N,V_rangingTimedOut
T@"NSString",&,N,V_rangingErrorString
TB,N,V_aksSuccess
T@"NSDate",&,N,V_rangingStart
Td,N,V_rangingInterval
T@"NSError",&,N,V_attemptError
T@"NSDictionary",&,N,V_remoteAWDLInfo
T@"NSDictionary",&,N,V_localAWDLInfo
T@"NSData",&,N,V_sessionRangingKey
TQ,N,V_protocol
TB,N,V_useEncryption
T@"NSString",&,N,V_wifiErrorDomain
Tq,N,V_wifiRangingErrorCode
T@"NSError",&,N,V_coreLocationError
T@"NSError",&,N,V_startAWDLError
Tq,N,V_errorType
T@"SDAutoUnlockWiFiRequest",&,V_wifiRequest
T@"NSData",&,N,V_appIcon
T@"NSDate",&,N,V_lastLocalUnlockDate
setHasFailureReasons:
setHasLtkSyncing:
hasLtkSyncing
setHasWatchOldLTKSyncStatus:
setHasWatchNewLTKSyncStatus:
_failureReasons
_ltkSyncing
TI,N,V_failureReasons
TB,N,V_ltkSyncing
handleClosedConnection
notifyClientForEvent:
wirelessPowerChanged:
notifyClient:withResults:
performBlockForAllProgresses:
totalUnitCount
getTransferRate
getTransferSize
handleTerminalCallBack
senderInfoAvailable
silentlyCancelRequest
fileInfoExpectedClassForKeyMap
validatedFileInfo:
validatedFilesArray:
validatedItemsArray:
disambiguatedModelName
idSelfIdentity
deviceIRKData
edPKData
idsDeviceID
enqueueResponse:code:body:
senderIsMe
URLWithString:relativeToURL:
scheme
cuFilteredArrayUsingBlock:
storeDataValue:forKey:
senderIsTrusted:
senderIsBlocked
sendDiscoverResponse:forKnownAlias:
storeArrayValue:forKey:
storeStringValue:forKey:
storeIconValue:forKey:
convertURLStringsToURLs
transferContainsPhotosAssetBundles
createPersonForAskRequest
allowAskRequestFromPerson:
addAirDropPerson:
adjustPropertiesForAutoAcceptSenderIsMe:
adjustPropertiesForPhotosBundles
silentlyCancelRequestOnMainThread
sendAskResponse:
parseDiscoverRequest
handleDiscoverRequest
parseAskRequest
handleAskRequest
cancelAndDecline
processRequest
whereFromInfo
setSenderName:
shouldExtractMediaFromPhotosBundles
setShouldExtractMediaFromPhotosBundles:
startPublishingProgressForPlaceholderFiles:
setPlaceholderFiles:withCreationCompletionHandler:
setTotalBytes:
compressionType
setUnzipCompressionType:
setDestination:
setReadStream:
unzip
startReceivingBody:error:
enqueueBadResponseForRequest:
makeDestinationDirectory
storeRequestValue:forKey:convertToNumber:
thereIsEnoughFreeSpace
oneHundredContinue:
startReceivingFile:error:
sendUploadResponse:
numberWithLongLong:
notifyClientOfBytesCopied:timeRemaining:
getStatusCode:
finishOperation
storeNumberValue:forKey:
transferIsOverPrebufferLimit
setSpotlightMetadata:
setCombinedFileURLsAndItems:
removeAirDropPerson:
fileZipper:event:withProperty:
didCloseConnection
didReceiveError:
storeBooleanValue:forKey:
logSenderIsBlocked
handleReadStreamEvent:event:
didReceiveRequest:
didSendResponse:forRequest:
didFailToSendResponse:
contactsOnly
destination
_discover
_personAdded
_stopDeferred
_userAccepted
_senderTrusted
_delayedFinish
_queueSuspended
_endEncountered
_connectionClosed
_transactionStarted
_person
_destination
_requestBuffer
_progress
_queue
_clientTrust
_startTime
_lastEvent
_requestData
_readStream
_zipper
_askSemaphore
_askRequest
_uploadRequest
_discoverRequest
_mediaCapabilities
_contactsOnly
_shouldExtractMediaFromPhotosBundles
TB,V_contactsOnly
T@"NSURL",C,V_destination
T@"NSString",C,V_sessionID
TB,V_shouldExtractMediaFromPhotosBundles
T@"<SDAirDropConnectionDelegate>",W,V_delegate
initializeStateCaptureBlock
shouldScanForCopyPaste
shouldScanForHandoff
_createOSTransactionIfNeeded
shouldBoostScan
deviceTracked
startScanningForType:withData:mask:peers:withOptions:boostedScan:duplicates:
stopScanningForType:
lostAllDevices
setIdsDevice:
clientAdvertisement
receivedAdvertisement:
isLocallyPaired
isNearby
didLosePeer:
didLosePeerTimer:
initWithDevice:
setDeviceTracked:
idsDevice
foundDeviceWithDevice:
options
isDefaultPairedDevice
updateWithRawAdvertisementData:receivedViaScanning:newAdvertisementHandler:
scanForTypes:
activityPayloadFromDeviceUniqueID:forAdvertisementPayload:command:timeout:withCompletionHandler:
lostDeviceWithDevice:
dumpState
systemHasPoweredOn:
setDisableDuplicateFilterOnce:
nearbyServiceDevicesChanged:
_scanTypes
_scannerEnabled
_isScanning
_scanningTransaction
_stopScanLostDeviceTimer
_deviceIdentifierToDeviceRecord
_deviceIdentifierToLostDeviceTimers
mountedVolumeURLsIncludingResourceValuesForKeys:options:
opticalDisk:
URLForRemounting:
setNodeModel:protocol:url:
setODiskServers:
recentNodes
connectedNodes
addToRecents:
setServers:
combineRecentAndConnectedNodes:
postNotification
removeAirDropPersonInternal:
browseAfterDelay:
buildNodesAndNotify:
volumesChanged:
_clientCount
_recentsCount
_connectedCount
_sendNotification
_odiskServers
_airDropPeople
initWithServiceName:
securityScopedURLForDownloadsFolderWithReplyHandler:
monogramImageDataForContactSync:style:diameter:monogramsAsFlatImages:replyHandler:
groupMonogramImageDataForContactsSync:style:diameter:monogramsAsFlatImages:replyHandler:
urlToCGImgDataForCallHandoffIconWithAppIconImageData:contact:replyHandler:
monogramImagesForMultipleContactsSync:style:diameter:monogramAsFlatImages:replyHandler:
CGImgDataForUIActivityTitles:foregroundColor:replyHandler:
CGImgDataForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:replyHandler:
CGImgDataForActivityMoreListEntryForActivityTitle:labelColor:replyHandler:
CGImgDataForActionPlatterWithTitle:tintColor:replyHandler:
CGImgDataForNearbyBadgeWithCount:replyHandler:
updateShareSheetHostConfiguration:
setSessionKeepAliveTransactionIdentifier:
queuedBlocks
CGImageWithCacheKey:contactIDs:type:
_updateShareSheetHostConfiguration
synchronousRemoteObjectProxyWithErrorHandler:
updateCacheFromSFCGImageData:cacheKey:contactIDs:
contacts
iconIndex
cacheLookupKey
initWithContacts:icon:atIndex:cacheLookupKey:
loadBatchImageCacheData:cacheKey:mapCacheHitImage:runProxy:type:
initWithContact:icon:atIndex:cacheLookupKey:
blackColor
whiteColor
CGColor
colorWithRed:green:blue:alpha:
initWithImageTitle:
keyDerivedFromRelevantTraitCollectionProperties
keyDerivedFromRelevantTraitCollectionPropertiesWithOppositeUserInterfaceStyle
imageTitle
identifierForColor:
initWithImageTitle:image:cacheLookupKey:
getOppositeColor:
CGImgForUIActivityTitles:foregroundColor:processOppositeColor:
image
initWithCapacity:
MD5HashOfStrings:
CGImgForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:processOppositeColor:
CGImgDataForActivityMoreListEntryForActivityTitle:labelColor:processOppositeColor:
setCacheLookupKey:
getRed:green:blue:alpha:
hostTraitCollection
userInterfaceStyle
preferredContentSizeCategory
layoutDirection
remoteObjectProxyWithErrorHandler:
whitelistedDownloadsFolderURL
copyConversationIdentityImageIconDataForImage:forConversationIdentifier:style:diameter:monogramsAsFlatImages:isContactImage:
_loadGroupContactIdentityImage:
urlToCGImgDataForCallHandoffIconWithAppIconImageData:contact:
sendShareSheetInvocationMetricsWithAppBundleID:numSuggestions:suggestionDisplayNames:extensionsCacheResult:isDarkMode:duration:
CGImgForActionPlatterWithTitle:tintColor:
CGImgForNearbyBadgeWithCount:
interruptionHandler
setQueuedBlocks:
_needsTransactionRelease
_connectionToService
_intervalID
_signpostName
_cacheAccessCount
_cacheAccessDict
_cacheAccessLock
_latestHostConfig
_interruptionHandler
_queuedBlocks
T@"NSMutableArray",&,V_queuedBlocks
T@?,C,N,V_interruptionHandler
streamHandler
clientInputStream
setClientInputStream:
clientOutputStream
setClientOutputStream:
netServiceBrowser
setNetServiceBrowser:
startBrowser
searchForServicesOfType:inDomain:
initRequiringSecureCoding:
encodeObject:forKey:
encodedData
notifyStreamRequestWithError:
sendMessage:withCompletionHandler:
switchToStreaming
setUsingMessages:
writeNetworkStream
fileHandle
setBufferSize:socket:
initWithFileDescriptor:
open
initForReadingFromData:error:
decodeDictionaryWithKeysOfClasses:objectsOfClasses:forKey:
handleStreamRequest:
handleStreamResponse:
serviceFromAuthorData:
sendInitialResponse:
networkBufferSpaceAvailable
setNetworkBufferSpaceAvailable:
hasBytesAvailable
readClientStream
setShouldReadNetwork:
writeClientStream
stopIfReady
handleOpenedStream
streamError
streamStatus
hasSpaceAvailable
write:maxLength:
logClientReceived
read:maxLength:
logClientSent
writeToStreamWithData:
stream:handleEvent:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
streamHandler:didReceiveMessage:
streamHandlerDidClose:
streamHandlerDidClose:withError:
streamHandler:bufferSpaceChanged:
streamHandler:didReceiveStreamData:
setStreamHandler:
authorData
setAuthorData:
initiator
setInitiator:
shouldStop
setShouldStop:
clientSent
setClientSent:
clientReceived
setClientReceived:
writeQueue
setWriteQueue:
networkStreamData
setNetworkStreamData:
readQueue
setReadQueue:
clientStreamData
setClientStreamData:
readFromClient
setReadFromClient:
wroteToClient
setWroteToClient:
streamsRequestHandler
setStreamsRequestHandler:
_initiator
_shouldStop
_clientSent
_clientReceived
_networkBufferSpaceAvailable
_fileHandle
_streamHandler
_authorData
_netServiceBrowser
_clientInputStream
_clientOutputStream
_writeQueue
_networkStreamData
_readQueue
_clientStreamData
_readFromClient
_wroteToClient
_streamsRequestHandler
T@"SDStreamHandler",&,V_streamHandler
T@"NSData",&,V_authorData
TB,V_initiator
TB,V_shouldStop
TB,V_clientSent
TB,V_clientReceived
TB,V_networkBufferSpaceAvailable
T@"NSNetServiceBrowser",&,V_netServiceBrowser
T@"NSFileHandle",R,V_fileHandle
T@"NSInputStream",&,V_clientInputStream
T@"NSOutputStream",&,V_clientOutputStream
T@"NSObject<OS_dispatch_queue>",&,V_writeQueue
T@"NSMutableData",&,V_networkStreamData
T@"NSObject<OS_dispatch_queue>",&,V_readQueue
T@"NSMutableData",&,V_clientStreamData
Tq,V_readFromClient
Tq,V_wroteToClient
T@?,C,V_streamsRequestHandler
T@"<SDCompanionStreamDelegate>",W,V_delegate
T@"NSString",&,V_identifier
setCancelAction:
setSelectedAction:
errorString
errorDetailedString
suitableContentsTitle
T@"NSString",R,N
loadSuggestedPeers
_systemWillSleep
_systemHasPoweredOn
testDeviceID
foundPeers
setObject:atIndexedSubscript:
postSuggestionNotification
triggerDevicesIfNeeded
setupRetryIfNeeded
retriedSetup
alwaysShowSetupRetry
lastSuccessfulDevice
invalidateSuggestedDeviceTimer
setupRetryDeviceTimer
suggestionManagerQueue
setSetupRetryDeviceTimer:
sortUsingComparator:
setSuggestedPeer:
suggestedPeer
deviceTimer
setDeviceTimer:
restartServiceTimer:
invalidateServiceTimer
serviceTimer
invalidateSuggestionService
setServiceTimer:
autoUnlockEligibleDevices
setCurrentBluetoothIDs:
currentBluetoothIDs
autoUnlockDeviceForBluetoothID:
supportsAdvertisingUnlocked
foundFirstPeer
setFoundFirstPeer:
postNotificationIfNeeded
suggestionManagerSessionID
updateSuggestionService
watchAvailableForUnlockWithCompletionHandler:
canSuggestForDeviceID:
suggestedPeers
setSuggestedPeers:
suggestionNotificationSetUpSelected
suggestionNotificationDismissed
setupRetryNotificationSetUpSelected
setupRetryNotificationDismissed
setupRetryNotificationTimedOut
handleTestSuggestion
restartSetupRetryDeviceTimer:
invalidateSetupRetryDeviceTimer
restartSuggestedDeviceTimer:
startScanningForIDSDeviceIDs:
sendStartAdvertisingToDeviceID:
shouldSendRequestsForDeviceID:
updateDefaultsForDeviceID:
featureSuggestedForDeviceID:
suggestionsEnabled
ignoreBackOff
setFoundPeers:
setSuggestionManagerSessionID:
setSuggestionManagerQueue:
_foundFirstPeer
_suggestedDeviceID
_setupRetryDeviceID
_lastSuccessfulDevice
_foundPeers
_currentBluetoothIDs
_serviceTimer
_deviceTimer
_setupRetryDeviceTimer
_suggestedPeers
_suggestedPeer
_suggestionManagerSessionID
_suggestionManagerQueue
TB,N,V_foundFirstPeer
T@"SFBLEScanner",&,N,V_scanner
T@"NSMutableArray",&,N,V_foundPeers
T@"NSArray",&,N,V_currentBluetoothIDs
T@"NSObject<OS_dispatch_source>",&,N,V_serviceTimer
T@"NSObject<OS_dispatch_source>",&,N,V_deviceTimer
T@"NSObject<OS_dispatch_source>",&,N,V_setupRetryDeviceTimer
T@"NSMutableArray",&,N,V_suggestedPeers
T@"SFAutoUnlockDevice",&,N,V_suggestedPeer
T@"NSUUID",&,N,V_suggestionManagerSessionID
T@"SFAutoUnlockDevice",&,N,V_setupRetryDevice
T@"NSObject<OS_dispatch_queue>",&,N,V_suggestionManagerQueue
T@"NSString",C,N,V_suggestedDeviceID
T@"NSString",C,N,V_setupRetryDeviceID
T@"SFAutoUnlockDevice",&,N,V_lastSuccessfulDevice
_userDefaultsKeyForHash:
installSleepStateMonitor
installManagedConfigurationMonitor
installFinderSidebarPrefsMonitor
installWirelessCarPlayMonitor
installSMBPreferencesMonitor
installCarPlayStatusMonitor
installDynamicStoreCallBack
installLocaleChangeMonitor
installSpringBoardStateMonitor
installSystemUIMonitor
installDisplaySleepMonitor
installDisplayConfigurationMonitor
installClamshellStateChangeMonitor
installSmartCoverStatusMonitor
installBonjourNameMonitor
installContactsMonitor
installUserPictureMonitor
installUILockStatusMonitor
installSleepWakeCallBack
installBluetoothMonitor
installWirelessMonitor
installAppleIDAccountInfoMonitor
installAppleIDUsernameMonitor
installVolumesMonitor
installBacklightMonitor
installSleepNotification
installWiFiPasswordSharingMonitor
installSSIDCacheMonitor
installWristStateMonitor
installMISMonitor
installCoreTelephonyMonitor
installAirplaneModeMonitor
installAirPlayPreferencesMonitor
_multipleUsersLoggedIn
resetMeCardWithReason:
enableAirDropAdvertising
enableAirDropReceiving
createHostNameKey:
setValue:forKey:
logAirDropTransactionForClientServer:beginEnd:count:
discoverableMode
updateDiscoverableMode
wirelessEnabled
wirelessCarPlay
wirelessAccessPoint
bluetoothEnabled
isAirDropAllowed
isAirDropReady
reconciledDiscoverableMode
appleIDAccountState
eduModeEnabled
defaultDiscoverableMode
postNotification:
newDiscoverableMode
myAppleID
accountStatusForAppleID:
emailOrPhone
_copyMyAppleIDCertificate
myAccount
identity
copyCertificate
_copyMyAppleIDIntermediateCertificate
copyIntermediateCertificate
_copyMyAppleIDSecIdentity
_myAppleID
copyIdentityForAppleID:
accountForAppleID:
contactInfo
validatedEmailAddresses
altDSIDNeedsFixing
saveVerifiedAccount:withCompletionHandler:
aa_updatePropertiesForAppleAccount:completion:
clearMyAppleIDInfo
validatedPhoneNumbers
copyMyAppleIDSecIdentity
myAppleIDEmailAddresses
myAppleIDPhoneNumbers
containsObject:
raise:format:
givenName
firstName
setGivenName:
familyName
lastName
setFamilyName:
phoneNumbers
arrayWithArray:
phoneNumberWithStringValue:
initWithLabel:value:
setPhoneNumbers:
emailAddresses
setEmailAddresses:
componentsJoinedByString:
contactsForCombinedHash:
unionSet:
setWithSet:
contactIdentifierForMediumHashes:
contactsContainsShortHashes:
anyObject
meCard
identifier
compare:
containsString:
isEmail:
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingPhoneNumber:
unifiedContactsMatchingPredicate:keysToFetch:error:
setWithArray:
GeneralContactKeysToFetch
initWithKeysToFetch:
arrayWithObjects:count:
predicateForContactsWithIdentifiers:
setPredicate:
enumerateContactsWithFetchRequest:error:usingBlock:
value
emailOrPhoneForCombinedHash:
instantMessageAddresses
username
rangeOfString:
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
null
addAdditionalInformationToMeCard:
setMeCard:
stringValue
updateFamilyHotspotState
sharedConnection
isPersonalHotspotModificationAllowed
numberWithBool:
addReason:
pushPreventionDateForReason:newDate:
removeReason:
postNotification:userInfo:
isPasswordProximityAutoFillRequestingAllowed
myAppleIDValidationRecord
bluetoothAddressData
stringByAppendingString:
aa_altDSID
commonNameForCertificate:
emailAddressesForAppleID:
phoneNumbersForAppleID:
validationRecordInfoForAppleID:
stringFromContact:style:
aa_primaryEmail
unifiedAppleIDInfo
obfuscatedMediumHashDataForStrings:
btleAdvertisementDataForStrings:
smbConfiguration:netBiosName:workgroup:
computerName
modelName
deviceSupportsContinuity
finderServer
aa_isManagedAppleID
smartCoverIsClosed
updateMediaAccessControlSetting:
initWithSuiteName:
boolForKey:
appleIDAccountInfoChanged:
addObserver:selector:name:object:
handleAWDLState:
bluetoothAddressChanged
setBluetoothAddressChangedHandler:
activateWithCompletion:
uninstallBonjourNameMonitor
clearMyIconAndHash
shared
contactStoreDidChange:
kStatusContactsHashesChanged
meCardChanged:
kStatusMeCardChanged
clearComputerName
clearLocalHostName
restartBonjourNameMonitor
initWithIdentifier:queue:operation:
managedConfigurationSettingsChanged:
updateAirDropAllowed
updatePersonalHotspotAllowed
updateBlacklistedAppBundleIDs
effectiveBlacklistedAppBundleIDs
stringForWatchWristState:
handleWiFiPasswordSharingChanged
b332BTAddressRotationDelay
shareSheetMaxSuggestions
b332PairingEnabled
isBuddyCompleted
enableOOBPCredentialLogging
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
T@"SDStatusMonitor",R
Td,R
Tq,R
TB,R
clearMonitorCache
addServerName:forHostName:
airDropTransactionBegin:
airDropTransactionEnd:
discoverableLevel
mountPointsForServer:
odiskMountPointsForServer:
removeServerName:
serverNameForHost:
setODiskMountPoints:
setDiscoverableMode:
setServerMountPoints:
verifyAndParseValidationRecordData:intoDictionary:
cacheCertificate:forRealName:
cacheIdentity:
copyCertificateForRealName:
copyMyAppleIDCertificate
copyMyAppleIDIntermediateCertificate
fixAltDSIDIfNeeded
handleAppleAccountSignIn
handleAppleAccountSignOut
hsa2EnabledWithCompletionHandler:
verifiedIdentityForAppleID:
awdlDevice
awdlInfoForPeerWithServiceName:
awdlNetwork
contactsForEmailHash:phoneHash:
contactIdentifierIsBlocked:
contactIsBlocked:
contactWithPreferredIdentifierForContacts:
contactsWithPhoneNumberOrEmail:keys:
contactWithContactIdentifier:
emailsForContact:
emailOrPhoneForEmailHash:phoneHash:
instantMessageEmailsForContact:
phoneNumbersForContact:
autoHotspotState
updateAutoHotspotState
cellularDataEnabled:airplaneMode:
lteConnectionShows4G
familyHotspotStateForAltDSID:
familyHotspotEnabled
networkType
personalHotspotAllowed
signalStrength
simStateReady
addPreventExitForLocaleReason:
pushDateForPreventExitForLocaleReason:expirationDate:
removePreventExitForLocaleReason:
defaultWiFiDevice
wifiPasswordSharingAvailability
wifiSSIDForSSIDHash:
airDropPublished
setAirDropPublished:
setBluetoothEnabled:
setFinderServer:
setWirelessEnabled:
airplaneModeEnabled
setAirplaneModeEnabled:
awdlInfo
awdlPeerList
awdlStateInfo
bluetoothAddress
bonjourName
consoleUser
clearConsoleUser
deviceKeyBagState
localHostName
minPersonImageSize
modelCode
myAccountAppleID
myAltDSID
myAppleIDCommonName
myAppleIDEmailHash
myAppleIDPhoneHash
myEmail
myName
myGivenName
myPrimaryEmail
myMediumHashes
myShortHashesForAirDrop
netbiosName
sidebarMaxCount
someComputerName
systemUIFlags
workgroup
workgroupThreshold
allEnabled
alwaysAutoAccept
alwaysSendPayload
backlightOn
bonjourEnabled
browseAllInterfaces
bypassLTKeyAbort
carplayConnected
coalesceMe
computerToComputer
connectedEnabled
currentConsoleUser
deviceKeyBagDisabled
deviceKeyBagLocked
deviceKeyBagLocking
deviceKeyBagUnlocked
deviceRequiresNewRanging
deviceSupportsRanging
deviceSupportsWAPI
deviceUIUnlocked
deviceWasUnlockedOnce
disableAutoAccept
disableAutoAcceptForPhotosAssetBundles
disableCompression
disableContinuityTLS
disablePeopleSuggestions
disablePictureQuery
disablePipelining
disableQuarantine
disableExtractMediaFromBundles
disableTransformingPhotosAssetBundlesToFolders
disableRotation
disableTLS
dockHasDownloadsFolder
enableAllRecents
enableBugs
enableContinuity
enableDebugMode
enableDemoMode
enableDVZip
enableHotspotFallback
enablePKZip
enablePKZipCompression
enableStrangers
enableStreamDebugging
enableWebloc
enableXML
finderAirDropEnabled
forceAWDL
forceP2P
handoffVisible
ignoreIconDiskCache
internetSharingEnabled
myAppleIDIsManaged
registerAllInterfaces
runningAsSetupUser
screenOn
showMeInWormhole
showThisComputer
signedIntoPrimaryiCloudAccount
sleepModeOn
testDiskFull
wifiUserPowerPreference
asynchronousProxyLoadingEnabled
mediaAccessControlSetting
updateAWDLStateInfo
airplaneModeChanged
logBluetoothAvailabilityState:
logBluetoothPowerState
uninstallCarPlayStatusMonitor
handleDynamicStoreCallback:changedKeys:
installKeyBagUnlockMonitor
handleNameMonitorCallBack:flags:error:
pairedWatchWristState
updatePairedWatchWristState:
pairedWatchLockState
updatePairedWatchLockState:
pairedWatchHasLongPasscode
updatePairedWatchHasLongPasscode:
handleMISStateChanged:
updateLocalPowerSource:
localPowerSource
handleSleepWakeCallBack:messageArguement:
reloadSMBConfInfo
updateWatchWristState:
watchWristState
clearOperationModeInfo
clearWirelessState
logWiFiPowerState
awdlState
lastDarkWakeDate
controlCenterVisible
multipleUsersLoggedIn
wirelessCritical
_activateStarted
_airDropAllowed
_airDropCount
_airDropModeNotifyToken
_airDropPublished
_airPlayPrefsToken
_backlightOn
_backlightLevelToken
_bonjourName
_carplayConnected
_certificates
_computerName
_computerToComputer
_consoleUser
_consoleUserID
_contactHashManager
_contactStore
_currentDiscoverableMode
_deviceInformation
_deviceIsHighPriority
_deviceKeyBagState
_deviceSupportsWAPI
_deviceUIUnlocked
_deviceWasUnlockedOnce
_dynamicStoreSource
_finderAirDropEnabled
_finderServer
_handoffVisible
_identities
_keyBagUnlockToken
_localHostName
_mediaAccessControlSetting
_mountPoints
_myAppleIDCommonName
_myAppleIDIntermediateCertificate
_myAppleIDCertificate
_myAppleIDSecIdentity
_myEmailHashes
_myPhoneHashes
_nameMonitor
_needsExitForLocaleChange
_netbiosName
_notifierObject
_notifyPortRef
_odisksMountPoints
_pairedWatchHasLongPasscode
_pairedWatchWristState
_personalHotspotAutoState
_personalHotspotFamilyEnabled
_personalHotspotFamilyStates
_personalHotspotAllowed
_pmConnection
_rootPort
_screenOn
_serverNames
_sleepModeOn
_smbPreferences
_ssidHashes
_systemMonitor
_systemUIFlags
_uiLockStatusToken
_wirelessAccessPoint
_workgroup
_watchWristState
_preventLocaleRestart
_smartCoverMonitor
_requestedDiscoverableMode
_screenBlankedToken
_controlCenterVisible
_wirelessCritical
___meCard
_awdlState
_lastDarkWakeDate
_effectiveBlacklistedAppBundleIDs
T@"CNContact",R,N,V___meCard
T@"NSString",&
T@"SDAirDropServer",W
T@"NSDictionary",R
T@"NSArray",R
T@"NSDictionary",R,V_awdlState
T@"NSData",R
T@"NSString",R
T@"NSDate",R,V_lastDarkWakeDate
T@"SFPowerSource",R
Ti,R
TI,R
airdropAllowed
TB,R,GisAirDropAllowed
airdropAvailable
TB,R,GisAirDropAvailable
T@"NSSet",R,V_effectiveBlacklistedAppBundleIDs
TB,R,V_controlCenterVisible
TB,R,V_multipleUsersLoggedIn
TB,R,V_wirelessCritical
clearCacheWithSync:
scheduleOperation
openLinks
onWrist
setOnWrist:
setDate:
_onWrist
_date
TB,N,V_onWrist
T@"NSDate",&,N,V_date
booted
setBooted:
lastOnWrist
setLastOnWrist:
lastWristWake
setLastWristWake:
motionCheckStarted
setMotionCheckStarted:
motionCheckEnded
setMotionCheckEnded:
_booted
_lastOnWrist
_lastWristWake
_motionCheckStarted
_motionCheckEnded
T@"NSDate",&,N,V_booted
T@"NSDate",&,N,V_lastOnWrist
T@"NSDate",&,N,V_lastWristWake
T@"NSDate",&,N,V_motionCheckStarted
T@"NSDate",&,N,V_motionCheckEnded
checkKeyBagState
scheduleDailyMetricReporterIfNeeded
generateDebugInfo
waitingForAuthToken
securityManager
generateLocalLongTermKey:
sendLongTermKeyRequest:requestID:
invalidateLongTermKeyTimer
resetLongTermKeyRequest
handleDevicesDidFailToPair
dailyMetricReporter
setDailyMetricReporter:
setRepeats:
setInterval:
setTolerance:
dailyMetrics
totalAttempts
successfulAttempts
setFailedAttempts:
totalUnlocks
setPasscodeUnlocks:
setPhoneAutoUnlockEnabled:
idsController
setPhoneSoftwareVersion:
setPhoneHardwareModel:
setDailyMetrics:
scheduleWithBlock:
enableTimerFired:
notifyEnableStateWithError:
enableUnlockForcingLTKTransfer:
ltksExist
ltkFileExists
updateSecurityManagerIfNeeded
deleteLongTermKeys
inConfigureState
generateSessionID
sendSetupRequest:withSessionID:
sendClassALongTermKeyRequest:sessionID:
disableUnlockPairing
resetSetupState
invalidateEnableTimer
unlockSessionAsOriginator:usingEscrow:escrowSecret:
clearStateForSession:
inPosition
setSentLockedState:
resetEscrowRecord
setWaitingForAuthToken:
resetState
allowExiting
lostModeIsActive
metricDates
handleStartLTK:
handleLongTermKeyResponse:
handleClassALongTermKeyResponse:
handleSetupSessionCreated:
invalidateUnlockTimer
handleStashKeyExchangeRequest:
handleStashToken:
handleUnlockStateRequest:
logProtoBufReceived:
resetAndClearState
handleRelockRequest
sendDeviceLockStateChanged:
preventExiting
updateSecurityManager
handleConfigurationState
hasRequestID
requestID
updateLongTermKeys:
signRemoteKey:withLocalKey:localKeyClass:remoteKeyClass:
updateLocalLongTermKey:remoteLongTermKey:
handleEscrowSessionRequest:
sendDisableMessage
localLongTermKey
remoteLongTermKey
escrowCreationSessionAsOriginator:errorCode:
setSetupAuthSession:
setupAuthSession
stepWithAuthSession:data:
sendCreateEscrowSecretWithStepData:sessionID:
stepWithAuthSession:data:authStep:
setupWithAuthSession:passcode:
enableUnlockPairing
localDeviceLocked
setTotalAttempts:
lostModeEnabled
sendResetMessage:reason:
setSessionStartDate:
setOnWristForCurrentSession:
setUnlockAuthSession:
unlockAuthSession
sendKeyExchangeResponse:sessionID:
getWristAndMotionStateWithCompletionHandler:
deviceOffWristForSessionID
unlockSessionID
setLastUnlockedByPairedUnlock:
sendSessionUnlockConfirmation:sessionID:
stashBagSessionAsOriginator:escrowSecret:manifest:
setStashBagSession:
stashBagSession
sendStashKeyExchangeResponse:sessionID:errorCode:
hasStashToken
stashToken
sendStashConfirmation:sessionID:
resetStashState
sendStateResponseWithUnlockEnabled:passcodeEnabled:
setUnlocked:
logProtoBufSend:
setRequestID:
restartLongTermKeyTimer
restartEnableTimerWithTimeout:
restartUnlockTimer:
setPasscodeEnabled:
devicesDidUnpair:
enableUnlockWithDevice:passcode:completionHandler:
deviceOnWrist
wristDetectionDisabled:
forceOnWristCheck
setInPosition:
canRetrySetup
setCanRetrySetup:
sentLockedState
enableTimer
setEnableTimer:
tempLongTermKey
setTempLongTermKey:
checkingWristState
setCheckingWristState:
sessionStartDate
setUnlockSessionID:
preventingExitForSetup
setPreventingExitForSetup:
onWristForCurrentSession
checkingWristAndMotionState
setCheckingWristAndMotionState:
longTermKeyTimer
setLongTermKeyTimer:
setDeviceOffWristForSessionID:
wristAndMotionTimer
setWristAndMotionTimer:
positionSemaphore
setPositionSemaphore:
lastWakeGestureRecord
setLastWakeGestureRecord:
setMetricDates:
enableHandler
setEnableHandler:
wristAndMotionStateHandler
setWristAndMotionStateHandler:
_lastUnlockedByPairedUnlock
_inPosition
_canRetrySetup
_sentLockedState
_checkingWristState
_waitingForAuthToken
_preventingExitForSetup
_onWristForCurrentSession
_checkingWristAndMotionState
_wristOnDate
_requestID
_enableTimer
_tempLongTermKey
_sessionStartDate
_unlockSessionID
_longTermKeyTimer
_deviceOffWristForSessionID
_wristAndMotionTimer
_positionSemaphore
_lastWakeGestureRecord
_dailyMetrics
_metricDates
_dailyMetricReporter
_enableHandler
_wristAndMotionStateHandler
TB,N,V_inPosition
TB,V_canRetrySetup
T@"NSString",&,V_requestID
TB,V_sentLockedState
T@"NSTimer",&,V_enableTimer
T@"NSData",&,V_tempLongTermKey
TB,V_checkingWristState
TB,V_waitingForAuthToken
T@"NSDate",&,V_sessionStartDate
T@"NSString",C,V_passcode
Tq,V_unlockSessionID
TB,V_preventingExitForSetup
TB,V_onWristForCurrentSession
TB,V_checkingWristAndMotionState
T@"NSObject<OS_dispatch_source>",&,V_longTermKeyTimer
Tq,V_deviceOffWristForSessionID
T@"NSObject<OS_dispatch_source>",&,V_wristAndMotionTimer
T@"NSObject<OS_dispatch_semaphore>",&,V_positionSemaphore
T@"SDUnlockMotionDetector",&,V_motionDetector
T@"SDUnlockWakeGestureRecord",&,V_lastWakeGestureRecord
T@"SFPairedUnlockDailyEvent",&,V_dailyMetrics
T@"SDUnlockLockMetricDates",&,V_metricDates
T@"NSBackgroundActivityScheduler",&,V_dailyMetricReporter
T@?,C,V_enableHandler
T@?,C,V_wristAndMotionStateHandler
T@"NSDate",&,V_wristOnDate
TB,V_lastUnlockedByPairedUnlock
setHasSessionID:
_authToken
TI,N,V_sessionID
T@"NSData",&,N,V_authToken
preventExitForLocaleIfNeeded
pairingStorePath
activeDeviceName
initWithPairingID:pairingStorePath:deviceName:
setSecurityManager:
activeDeviceDescription
lockState
pairingCompatibilityState
deviceIsPaired
updateExitPrevention
metrics
setMetrics:
devicesDidFailToPair:
pairingStatusChanged:
pairingDidBegin:
deviceDidEnterConfigState:
disableUnlockPairingForSecManager:
resetAll
abortDevicePairingWithReason:
shouldAbort
activeDevicesMatch
logMetrics
setIdsController:
unlockTimer
setUnlockTimer:
_setupAuthSession
_unlockAuthSession
_stashBagSession
_idsController
_securityManager
_metrics
_unlockTimer
T@"NSObject<OS_dispatch_source>",&,V_unlockTimer
Tq,V_setupAuthSession
Tq,V_unlockAuthSession
Tq,V_stashBagSession
T@"SDUnlockIDSController",W,V_idsController
T@"SDUnlockSecurityManager",&,V_securityManager
T@"SFPairedUnlockEvent",&,V_metrics
_btPipeEnsureStarted
_activityMonitorLastUserEventDelta
copyMyAppleIDAndReturnError:
securityLevel
defaultStore
activeAccount
sharedInstance
authKitAccountWithAltDSID:
securityLevelForAccount:
accountName
meDeviceFMFDeviceID
meDeviceIDSDeviceID
meDeviceName
idsIsSignedIn
idsDeviceArray
_idsAppleTVCount
_idsContinuityDeviceCount
_idsHomePodCount
_idsShouldEncryptActivityLevel
setLabel:
_handleAirDropDiscoverableModeChanged:
_handleAppleIDChanged:
_activityMonitorMediaAccessControlSettingChanged:
_activityMonitorWatchWristStateChanged:
_activityMonitorScreenStateChanged:
_activityMonitorUILockStatusChanged:
_unlockApproveBluetoothIDsChanged:
_btPipeStateChanged:
_smartCoverStatusChanged:
_wirelessCriticalChanged:
_bleAdvertisingAddressChanged
setCallChangedHandler:
_idsMeDeviceChanged
setMeDeviceChangedHandler:
setScreenOnChangedHandler:
setScreenSaverChangedHandler:
setWifiStateChangedHandler:
setManateeChangedHandler:
_idsEnsureStarted
_activityMonitorEnsureStopped
_identificationEnsureStopped
_bleNearbyActionAdvertiserEnsureStopped
_bleNearbyActionScannerEnsureStopped
_bleNearbyInfoAdvertiserEnsureStopped
_bleNearbyInfoScannerEnsureStopped
_bleProximityPairingScannerEnsureStopped
_btPipeEnsureStopped
_idsEnsureStopped
initWithBytes:length:
bleProximityRSSIEstimatorInfo
setRSSIEstimatorInfo:
_activityMonitorEnsureStarted
_identificationEnsureStarted
_bleNearbyActionAdvertiserShouldAdvertise
_bleNearbyActionAdvertiserEnsureStarted
_bleNearbyActionScannerShouldScan
_bleNearbyActionScannerEnsureStarted
_bleNearbyInfoAdvertiserShouldAdvertise
_bleNearbyInfoAdvertiserLingerIfNeeded
_bleNearbyInfoAdvertiserEnsureStarted
_bleNearbyInfoScannerShouldScan
_bleNearbyInfoScannerEnsureStarted
_bleProximityPairingScannerShouldScan
_bleProximityPairingScannerEnsureStarted
_activityMonitorUpdate
_bleNearbyInfoAdvertiserUpdate
_activityMonitorCarPlayStatusChanged:
_activityMonitorMultipleUsersLoggedInChanged:
_activityMonitorCurrentLevelAndNeedsPoll:recentUserActivity:
activeCallCount
_activityMonitorUpdateUserActive:
_enhancedDiscoveryScreenChange:
_bleNearbyInfoAdvertiserLingerStart:
screenSaverActive
advertiseRate
authTagOverride
deviceColorCode
deviceModelCode
needsKeyboard
sessionFlags
problemFlags
requestSSID
targetAuthTag
numberWithUnsignedChar:
_bleUpdateAuthTagIfNeeded
setAdvertiseRate:
_idsBluetoothDeviceIDsForLEPipe
setLePipeDevices:
setPayloadFields:
_bleUpdateScanner:typeFlag:
_deviceDiscoveryBLEDeviceFound:type:
_deviceDiscoveryBLEDeviceLost:type:
_deviceDiscoveryBLEDeviceChanged:type:changes:
_deviceDiscoveryBLEScanStateChanged:type:
setRssiLog:
_disableEnhancedDiscovery:
statusFlags
_idsShouldAdvertiseNearbyInfo
_bleEncryptActivityLevel:
_bleNearbyInfoAdvertiserUpdateAddAudioRoutingScore:
_bleNearbyInfoAdvertiserUpdateAddHotspotInfo:
lePipeDevices
needsAWDL
autoUnlockEnabled
autoUnlockWatch
duetSync
watchLocked
meDeviceIsMe
wifiFlags
_bleNearbyInfoAdvertiserShouldAddField3
_newZeroingDataWithBytes:length:
dataWithData:
sendData:completion:
_unlockReceivedFrameData:peer:device:
_bleNearbyInfoReceivedFrameType:src:end:cnx:
_setupHandleCreateSession:data:
_setupHandleSessionCreated:data:
_setupHandleSessionEncryptedFrame:type:cnx:
eventMessageHandler
setBodyData:
serviceReceivedFrameType:serviceType:data:peer:
sessionReceivedFrameType:serviceType:data:peer:
setHeaderFields:
requestMessageHandler
responseMessageInternalHandler
addClient:
setAcceptor:
connectionState
initWithDevice:acceptor:
activateDirect
removeClient:
_idsBluetoothDeviceIDsForSharing
getPeerUUID
sendFrameType:payload:completion:
authTagForData:type:error:
scanCache
scanRateOverride
payloadFilterData
setPayloadFilterData:mask:
setScanCache:
trackedPeers
setTrackedPeers:
performUpdate:
bleProximityInfoForActionType:device:
setInsideMediumBubble:
setInsideSmallBubble:
setCloseProximityEstimatorMedium:
setCloseProximityEstimatorSmall:
bleProximityInfoForType:device:allInfo:
decimalDigitCharacterSet
rangeOfCharacterFromSet:
initWithFormat:
bleProximityRSSIThreshold:
closeProximityEstimatorSmall
closeProximityEstimatorMedium
setupProximityEstimator
bleProximityEstimatorForActionType:device:
setSetupProximityEstimator:
deviceFlags
_bleProximityUpdateDeviceCloseNearbyActionDevice:
infoProximityEstimator
setInfoProximityEstimator:
_idsBluetoothDeviceIDsForiMessage
_idsBluetoothDeviceIDsForSMSRelay
_idsBluetoothDeviceIDsForAnnouncements
decryptedActivityLevel
_enhancedDiscoveryTimerFired
_enableEnhancedDiscovery:
paired
_deviceDiscoveryRequestStart:
idsBluetoothDeviceIDsForSharing
_idsBluetoothDeviceIDsForMe
_idsBluetoothDeviceIDsForHomePods
scanState
deviceFoundHandler
scanStateChangedHandler
_deviceDiscoveryFastScanStart:device:reason:
_identificationHandleDiscoveryStop
_unlockDeviceFilterChangedForRequest:
deviceLostHandler
_deviceDiscoveryFastScanStop:reset:reason:
needsKeyboardOnly
setScanRateOverride:
setDeviceFlags:
idsIdentifier
idsAddCachedIDSIdentifierToDevice:
_bleProximityUpdateNearbyActionDevice:
_identificationHandleDeviceFound:flags:
_deviceCanTriggerEnhancedDiscovery:
_bleProximityUpdateNearbyInfoDevice:
rapportIdentifier
_deviceDiscoveryFastScanEvaluate:device:
_identificationHandleDeviceLost:flags:
setTriggered:
deviceChangedHandler
featureFlags
_identificationGetIdentities
compareWithRPIdentity:
_identificationReIdentify
_identificationCheckFlagsAndACL
getIdentitiesWithFlags:completion:
rpIdentity
setRpIdentity:
setBtAddr:
updateWithRPIdentity:
_identificationIdentifyDevice:sfDevice:
_identificationDecryptAudioRoutingScoreData:device:authTag:identity:
_identificationDecryptHotspotData:device:authTag:identity:
_identificationDecryptActivityLevel:device:authTag:identity:
setDecryptedActivityLevel:
setRequestSSID:
_identificationMaintenanceTimer
setLastUpdateTicks:
lastUpdateTicks
_identificationReIdentifySameAccountDevices:type:
btAddr
verifyAuthTag:data:type:error:
contactID
setIdsIdentifier:
isDeviceValidRIServer:
_idsBluetoothDeviceIDsForSharingLocked
initWithArray:
supportsSMSRelay
supportsMMSRelay
getScanningDeviceCandidates:
_idsDeviceArrayLocked
isConnected
compare:options:
manateeAvailable
setDeviceClassCode:
setDeviceColorCode:
setDeviceModelCode:
receivedFramePeerHandler
_sendMessage:frameType:service:session:
initWithRequestMessage:
setSessionFlags:
_setupSendCreateSession:cnx:
receivedFrameHandler
headerFields
bodyData
_setupSendData:sessionIdentifier:cnx:clientSession:
deviceIDs
setPeerIdentifier:
setSessionCreated:
setReadKey:
setReadNonce:
setWriteKey:
setWriteNonce:
dhSecretKey
sendDataQueue
readKey
readNonce
_setupHandleSessionMessageType:src:end:cnx:session:
clientSession
setClientSession:
setDhSecretKey:
sessionCreated
setSendDataQueue:
writeKey
writeNonce
_startUnlockBLEConnectionWithDevice:encrypted:
setBleEncrypted:
setLatencyCritical:
idsBluetoothDeviceIDsForLEPipe
setLePipeCapable:
_stopUnlockBLEConnectionWithDevice:
_sendUnlockData:toBLEDevice:direct:completion:
sendFrameTypeDirect:payload:completion:
sendDataDirect:completion:
_testPipePing
T@"SDNearbyAgent",R,N
setBoostNearbyInfo:
_bleNearbyInfoReceivedData:cnx:peer:
bleNearbyInfoStartConnectionToDevice:owner:connected:
bleNearbyInfoStopConnectionToDevice:owner:
_btPipeHandleFrameType:data:
bleProximityEstimatorsResetDeviceClose
bleProximityRSSIThresholdForType:device:
idsAddCachedIDSIdentifier:device:
idsBluetoothDeviceIDsForWatches
idsDeviceForBluetoothDeviceID:conflictDetected:
_idsHasActiveWatch
_idsMacCount
sendUnlockDataDirect:toBLEDevice:completion:
unlockStopTestServer
autoUnlockActive
audioRoutingScore
bleAuthTag
boostNearbyInfo
btConnectedDeviceMonitor
enhancedDiscovery
hotspotInfo
_activityCarPlayRegistered
_activityLevelNotifyToken
_activityLevel
_activityMonitorStarted
_activityMultipleUsersRegistered
_activityPollSeconds
_activityRecentSeconds
_activityScreenOn
_activityTimer
_activityUIUnlocked
_activityUserActive
_bleAdvertisingAddress
_bleAudioRoutingScoreEncryptedData
_bleAuthTagOverride
_bleConnections
_bleDiagnosticAdvSuppressLogged
_bleDiagnosticModeClients
_bleHotspotEncryptedData
_bleNearbyActionAdvertiser
_bleNearbyActionAdvertiseActive
_bleNearbyActionAdvertiseDisabled
_bleNearbyActionAdvertiseLingerTimer
_bleNearbyActionDevices
_bleNearbyActionRSSILog
_bleNearbyActionScanAlways
_bleNearbyActionScanNever
_bleNearbyActionScanner
_bleNearbyInfoAdvertiseAlways
_bleNearbyInfoAdvertiseDisabled
_bleNearbyInfoAdvertiseLingerSecs
_bleNearbyInfoAdvertiser
_bleNearbyInfoAdvertised
_bleNearbyInfoAdvertiseLingerTimer
_bleNearbyInfoAirDropUsable
_bleNearbyInfoDevices
_bleNearbyInfoRSSILog
_bleNearbyInfoWiFiP2P
_bleNearbyInfoScanner
_bleProximityEnabled
_bleProximityInfo
_bleProximityInfoOverride
_bleProximityPairingScanner
_bleProximityRSSILog
_btPipeEnabled
_btPipeForced
_btPipePeer
_caEnabled
_caForce
_caMessageNoScans
_caMessageScans
_caPhoneCalls
_caRequests
_caScanIfVeryActive
_caSingleDevice
_contactHashesCached
_contactHashesEnabled
_coreDeviceEnabled
_ddFastScanLastEndTicks
_ddFastScanTimer
_ddNearbyActionDevices
_ddNearbyActionEnabled
_ddNearbyActionScreenOff
_ddNearbyInfoDevices
_ddNearbyInfoEnabled
_ddNearbyInfoScreenOff
_ddProximityPairingDevices
_ddProximityPairingEnabled
_ddProximityPairingScreenOff
_ddRequests
_enhancedDiscoveryAdvActive
_enhancedDiscoveryAssertCount
_enhancedDiscoveryShouldRun
_enhancedDiscoveryTimer
_familyFlags
_familyNotifyToken
_fitnessPairingEnabled
_homePodIdentifiesAsB520
_isRIClientEnabled
_idsAppleTVCountCache
_idsBluetoothDevicesArray
_idsBluetoothDevicesSet
_idsBTtoIDSInfoMap
_idsContinuityDeviceCountCache
_idsDeviceArray
_idsDeviceBTDictionary
_idsDeviceCountBTDictionary
_idsHasActiveWatchCache
_idsHomePodCountCache
_idsIsSignedInCache
_logProxAdvFields
_remoteAppServiceUUID
_services
_sessions
_setupSessions
_systemService
_unlockAdvertiseAlways
_unlockAdvertiseAggressive
_unlockAdvertiseEnabled
_unlockAdvertiseBackground
_unlockAdvertiseWatch
_unlockAdvertiseWatchLocked
_unlockBtPipe
_unlockTestClientTimer
_idDevices
_idEnabled
_idIdentitiesChangedNotifyToken
_idIdentityArray
_idMaintenanceTimer
_systemWillPowerDown
_autoUnlockActive
_boostNearbyInfo
_enhancedDiscovery
_audioRoutingScore
_hotspotInfo
_bleAuthTag
_btConnectedDeviceMonitor
_idSelfIdentity
TB,N,V_autoUnlockActive
Ti,N,V_audioRoutingScore
T@"NSData",R,N,V_bleAuthTag
TB,N,V_boostNearbyInfo
T@"CUBluetoothClient",R,N,V_btConnectedDeviceMonitor
TB,N,V_enhancedDiscovery
TI,N,V_hotspotInfo
T@"RPIdentity",R,N,V_idSelfIdentity
_btAddr
_discoveryFlags
_lastUpdateTicks
T@"NSData",C,N,V_authTag
T@"NSData",C,N,V_btAddr
TQ,N,V_discoveryFlags
T@"NSUUID",&,N,V_identifier
T@"RPIdentity",&,N,V_identity
TQ,N,V_lastUpdateTicks
peerIdentifier
_sessionCreated
_clientSession
_dhSecretKey
_readKey
_readNonce
_writeKey
_writeNonce
_peerIdentifier
_sendDataQueue
T@"SFSession",&,N,V_clientSession
T@"NSUUID",C,N,V_identifier
T@"NSData",C,N,V_dhSecretKey
T@"NSData",C,N,V_readKey
TQ,N,V_readNonce
T@"NSData",C,N,V_writeKey
TQ,N,V_writeNonce
T@"NSUUID",C,N,V_peerIdentifier
T@"NSMutableArray",&,N,V_sendDataQueue
TB,N,V_sessionCreated
accountStore
setCredential:forAccount:serviceID:error:
saveAccount:withCompletionHandler:
aida_tokenForService:
setServiceType:
setServiceIdentifier:
setUsername:
_setPassword:
setIsUsernameEditable:
setShouldUpdatePersistentServiceTokens:
authenticateWithContext:completion:
appleIDAccountWithAppleID:
store
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
aliasesForAccount:
altDSIDForAccount:
appleIDAccountWithAltDSID:
string
dataWithLength:
setHasType:
hasAwdlInfo
hasRangingToken
setHasUnlockDate:
_unlockDate
_rangingToken
TI,N,V_type
T@"NSData",&,N,V_awdlInfo
T@"NSData",&,N,V_rangingToken
Td,N,V_unlockDate
URLByAppendingPathComponent:isDirectory:
replaceIconValue:forKey:
makeDestinationDirectoryWithIdentifier:error:
sf_initWithFileURL:
setCancellationHandler:
_publish
setSf_transferState:
longLongValue
setTotalUnitCount:
setCompletedUnitCount:
transferManager
setUserInfoObject:forKey:
sf_failedWithError:
_unpublish
transferWithIdentifierWasAccepted:
transferWithIdentifierWasDeclined:withFailureReason:
updateTransferWithIdentifier:withState:information:completionHandler:
transferWithIdentifierWasDeclined:
setClassroomDelegate:
_transferIDToProgress
T@"SDAirDropTransferManager",&,N,V_transferManager
handleInitialResponse:
sendInitialRequest
hasStepData
finalizeRegistration
handleFinalize:
subtype
arrayWithCapacity:
typeWithFilenameExtension:conformingToType:
initWithAssetBundleAtURL:
writeFolderRepresentationToDirectory:error:
transformPhotosAssetBundlesToFoldersIfNeededInCompletedURLs:
transferContainsAssetBundles:
_hasPhotos
_hasVideos
TB,R,N,V_shouldExtractMediaFromPhotosBundles
presentEnableRadiosAlertForBluetooth:andWLAN:
configureSettingsForAirDrop
setStatusAndNotify
somethingChanged:
presentDisablePersonalHotspotAlert
_started
_phUserNotification
_radiosUserNotification
T@"<SDAirDropControllerDelegate>",W,V_delegate
_iconHash
T@"NSData",&,N,V_iconHash
notifyClient:
parseResults:port:txtLen:txtRecord:interface:
setPath:
setHostName:
setPortNumber:
_timeout
_resolve
_timer
_url
_name
_path
_hostName
T@"NSURL",R,V_url
T@"NSString",R,V_name
T@"NSString",R,V_type
T@"NSString",R,V_domain
T@"NSString",&,V_path
T@"NSString",&,V_hostName
T@"NSNumber",&,V_portNumber
T^{_DNSServiceRef_t=},R,V_service
Ti,R,V_error
T@"<SDBonjourResolverDelegate>",W,V_delegate
rssi
setDeviceWasLocked:
stopUnlockBLEConnectionWithDevice:
setWaitingForDisplayOrClamshell:
setShouldWaitToCompleteUnlock:
prewarmIdleStartDate
setPrewarmIdleTime:
isWaitingToCompleteUnlock
consumeAuthTokenIfReady
cancelWiFiRequest
sendData:type:completionHandler:
_cancel
setCanceled:
lockKeyBagIfNeeded
sendUnlockConfirmation:withError:
lockedKeyBag
otherProviderCancel
deviceWasLocked
setLockedKeyBag:
_handleCanceledAfterSuccess
setErrorType:
deviceConnected:
displayConfigChanged:
clamshellStateChanged:
waitingForDisplayOrClamshell
setConfigChangeType:
attemptTimedOut
usingProxy
watchModelID
discoveryTime
connectionWaitTime
awdlInfoExchange
keyRequestExchange
tokenExchange
confirmation
awdlInterval
peerFoundInterval
rangingInterval
configChangeType
displayClamshellWaitTime
awdlTotal
btBootstrap
btOverall
prewarmIdleTime
completeExchange
watchRSSI
watchBuildVersion
watchOSVersion
attemptError
errorType
distance
attemptTime
sessionIsValid
generateACMContextData
supportsAlwaysDirect
supportsApproveIcon
setImageData:
setImageHash:
sendAuthPromptRequestWithImageHash:appName:
imageHash
setImageDataAlreadyCached:
imageDataAlreadyCached
sendAuthPromptImageDataIfReady:
chosenDevice
setFirstSend:
useEncryption
startUnlockBLEConnectionWithDevice:encrypted:
sendAWDLInfo
handleFoundBLEDevice:available:lockedOnWrist:
discoveryDate
setDiscoveryDate:
aksPeerAvailable
setFoundPeer:
setConnectionDate:
setDiscoveryTime:
setConnectionTime:
attemptStartDate
setConnectionWaitTime:
setConnected:
receivedAWDLInfo
receivedExchangeRequest
onlyRanging
startAWDLError
rangingStart
displayOrClamshellWaitingDate
setDisplayClamshellWaitTime:
foundPeer
connected
handleTimerFired
confirmationTimer
setConfirmationTimer:
rangingDisabled
setWifiRangingResults:
wifiRangingError
setWifiErrorDomain:
setWifiRangingErrorCode:
setRangingInterval:
wifiErrorDomain
peerInRange:
setInRange:
handlePeerInRange
setRangingTimedOut:
setRangingErrorString:
wifiRangingErrorCode
rangingErrorString
stringByAppendingFormat:
handlePeerOutOfRange
setDistance:
setShouldUnlock:
useCoreLocation
distanceMeters
setAwdlTotal:
setOnlyRanging:
shouldWaitToCompleteUnlock
setWaitingToCompleteUnlock:
setPrewarmIdleStartDate:
coreLocationError
rangingTimedOut
awdlUp
setAwdlUp:
setAwdlInterval:
setPeerFoundInterval:
setRangingStart:
setAttemptError:
connectionDate
firstSend
setAwdlInfoExchange:
handleAuthPromptResponse:
setKeyRequestExchange:
handleSessionKeyExchangeRequest:
exchageResponseDate
setTokenExchange:
setBtBootstrap:
handleSessionAuthToken:
invalidateConfirmationTimer
handleConfirmationACK
setReceivedAWDLInfo:
sentExchangeResponse
invalidateTimerIfReady
setOldWatch:
hasSupportsConfirmationACK
supportsConfirmationACK
hasKeyData
receivedAuthPromptResponse
setReceivedAuthPromptResponse:
setNeedsNewImage:
setReceivedExchangeRequest:
hasUsingRecord
resetSession
setAksSession:
usingRecord
sendKeyExchangeResponseWithData:
sessionAuthToken
hasAuthToken
setSessionAuthToken:
setBtOverall:
startAWDL
confirmationSendDate
setConfirmation:
setAttemptTime:
setCompleteExchange:
setUnlockSucceeded:
sentImageData
peerMacAddress
handleRangingResults:errorCode:
handleAWDLUp
handlePeerFound:
handleRangingStarted
handleWiFiRequestInvalidated
inRange
authToken
setDisplayOrClamshellWaitingDate:
useProxy
wrapPayload:withType:useProxy:senderID:
sendData:bleDevice:completionHandler:
setIconHash:
needsNewImage
subdataWithRange:
setFinalMessage:
setSentImageData:
setExchageResponseDate:
setSentExchangeResponse:
sendUnlockConfirmation:withError:suppressNotification:
sendingConfirmation
setSendingConfirmation:
setSupportsACK:
setSuppressNotification:
setConfirmationSendDate:
restartConfirmationTimer:error:
invalidateNoDisconnect
isAcceptor
getAppName
updateImageData:imageHash:
connectionActivated
sendAWDLInfoData:type:completionHandler:
setBluetoothID:
wifiState
setWifiState:
setOtherProviderCancel:
prewarmStartDate
setProxyDiscoveryTime:
setAutoUnlockDevice:
externalACMContext
oldWatch
setPeerMacAddress:
setWatchRSSI:
displayCount
setDisplayCount:
displayTimer
setDisplayTimer:
setWatchModelID:
setWatchBuildVersion:
setWatchOSVersion:
_useProxy
_wifiState
_otherSessionCancel
_otherProviderCancel
_attemptTimedOut
_chosenDevice
_unlockSucceeded
_canceled
_oldWatch
_onlyRanging
_foundPeer
_connected
_lockedKeyBag
_deviceWasLocked
_receivedAWDLInfo
_receivedAuthPromptResponse
_sendingConfirmation
_sentExchangeResponse
_receivedExchangeRequest
_supportsConfirmationACK
_waitingForDisplayOrClamshell
_sentImageData
_imageDataAlreadyCached
_needsNewImage
_shouldWaitToCompleteUnlock
_waitingToCompleteUnlock
_awdlUp
_watchRSSI
_bluetoothID
_attemptStartDate
_prewarmStartDate
_discoveryTime
_proxyDiscoveryTime
_autoUnlockDevice
_externalACMContext
_imageData
_imageHash
_peerMacAddress
_sessionAuthToken
_displayCount
_configChangeType
_displayTimer
_confirmationTimer
_watchModelID
_watchBuildVersion
_watchOSVersion
_discoveryDate
_connectionDate
_firstSend
_exchageResponseDate
_displayOrClamshellWaitingDate
_confirmationSendDate
_prewarmIdleStartDate
_btOverall
_btBootstrap
_awdlInfoExchange
_keyRequestExchange
_tokenExchange
_confirmation
_peerFoundInterval
_awdlTotal
_attemptTime
_completeExchange
_connectionTime
_connectionWaitTime
_displayClamshellWaitTime
_prewarmIdleTime
TB,N,V_canceled
TB,N,V_oldWatch
TB,N,V_onlyRanging
TB,N,V_foundPeer
TB,N,V_connected
TB,N,V_lockedKeyBag
TB,N,V_unlockSucceeded
TB,N,V_deviceWasLocked
TB,N,V_receivedAWDLInfo
TB,N,V_receivedAuthPromptResponse
TB,N,V_sendingConfirmation
TB,N,V_sentExchangeResponse
TB,N,V_receivedExchangeRequest
TB,N,V_supportsConfirmationACK
TB,N,V_waitingForDisplayOrClamshell
TB,N,V_sentImageData
TB,N,V_imageDataAlreadyCached
TB,N,V_needsNewImage
TB,N,V_shouldWaitToCompleteUnlock
waitingToCompleteUnlock
TB,N,GisWaitingToCompleteUnlock,V_waitingToCompleteUnlock
T@"NSData",C,N,V_peerMacAddress
T@"SDUnlockSessionAuthToken",&,N,V_sessionAuthToken
Ti,N,V_watchRSSI
Tq,N,V_displayCount
Tq,N,V_configChangeType
T@"NSObject<OS_dispatch_source>",&,V_displayTimer
T@"NSObject<OS_dispatch_source>",&,V_confirmationTimer
TB,N,V_awdlUp
T@"NSString",&,N,V_watchModelID
T@"NSString",&,N,V_watchBuildVersion
T@"NSString",&,N,V_watchOSVersion
T@"NSDate",&,N,V_discoveryDate
T@"NSDate",&,N,V_connectionDate
T@"NSDate",&,N,V_firstSend
T@"NSDate",&,N,V_exchageResponseDate
T@"NSDate",&,N,V_displayOrClamshellWaitingDate
T@"NSDate",&,N,V_confirmationSendDate
T@"NSDate",&,N,V_prewarmIdleStartDate
Td,N,V_btOverall
Td,N,V_btBootstrap
Td,N,V_awdlInfoExchange
Td,N,V_keyRequestExchange
Td,N,V_tokenExchange
Td,N,V_confirmation
Td,N,V_peerFoundInterval
Td,N,V_awdlTotal
Td,N,V_attemptTime
Td,N,V_completeExchange
Td,N,V_connectionTime
Td,N,V_connectionWaitTime
Td,N,V_displayClamshellWaitTime
Td,N,V_prewarmIdleTime
T@"NSUUID",&,N,V_bluetoothID
TB,N,V_useProxy
TB,N,V_wifiState
TB,N,V_otherSessionCancel
TB,N,V_otherProviderCancel
TB,N,V_attemptTimedOut
TB,N,V_chosenDevice
T@"NSDate",&,N,V_attemptStartDate
T@"NSDate",&,N,V_prewarmStartDate
Td,N,V_discoveryTime
Td,N,V_proxyDiscoveryTime
TQ,N,V_connectedBluetoothDevices
T@"SFAutoUnlockDevice",&,N,V_autoUnlockDevice
T@"NSData",&,N,V_externalACMContext
T@"NSData",&,N,V_imageData
T@"NSData",&,N,V_imageHash
onqueue_enumerateRemoteObjectProxiesUsingBlock:
onqueue_remoteObjectProxyForConnection:usingBlock:
onqueue_activate
onqueue_invalidate
onqueue_connectionInvalidated:
setActiveConnections:
retainArguments
invoke
exceptionWithName:reason:userInfo:
replacementObjectForXPCConnection:encoder:object:
connection:handleInvocation:isReply:
_invalidateDone
_activeConnections
T@"NSSet",C,N,V_activeConnections
T@"NSXPCConnection",R,C,N
T@"NSXPCInterface",R,N
firstUnlockHandler
powerUnlimitedChangedHandler
manager:didStartAuthenticationFor:
manager:didFailAuthenticationFor:error:
handleKeyBagStateChanged
handleOnWristStateChanged
sharedLockManager
lastUnlockedByPairedUnlock
initWithUnlockType:
wristOnDate
setWristOnDate:
setMotionDetectedHandler:
motionDetected
installApplication:withOptions:error:
initWithUnsignedInteger:
isRunningInStoreDemoMode
isAirDropAppInstallationAllowed
returnPreventUntilDate
returnHasActiveTimer
hasType
rangingToken
hasUnlockDate
unlockDate
initWithAwdlInfo:isRangingInitiator:rangingPeer:queueAvailableHandler:awdlStartedHandler:peerFoundHandler:rangingStartedHandler:rangingCompletedHandler:invalidationHandler:
updateWiFiRequest:setRangingPeer:
success
hasErrorCode
scheduleWiFiRequest:
initWithMacAddressAsData:secureRangingKeyID:
setClRangingPeer:
setMacAddressData:
shouldUnlock
cancelWiFiRequest:
setSuccess:
manager:didCompleteAuthenticationFor:
setUnlockDate:
setType:
setRangingToken:
setAuthenticationType:
setSucceeded:
setKeyExchangeDuration:
setAwdlBringUpDuration:
setRangingDuration:
setPeerFoundDuration:
setTotalDuration:
setWatchHardwareModel:
setWatchSoftwareVersion:
submitEvent
setFailureReason:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
cmfSyncAgentBlockListDidChange
contactStoreDidChange
meCardDidChange
contactForCombinedHash:
obfuscatedShortHashDataForStrings:
descriptorForRequiredKeysForStyle:
initWithKeyType:valueType:
setFirstUnlockHandler:
setPowerUnlimitedChangedHandler:
valueForKey:
firstUnlocked
setMinDelay:
setMaxDelay:
setActionHandler:
integerForKey:
setInteger:forKey:
powerUnlimited
acquireTokenForIdentifier:
initWithBase64EncodedString:options:
trigger
initWithBucketSize:tokenDurationSec:
initWithBucket:dupHistoryLength:
openAtPath:error:
enumerateKeyType:valueType:error:handler:
startAtPath:error:
addKey:value:error:
finishAndReturnError:
close
removeItemAtPath:error:
valueForKey:valueType:error:
enumerateValuesForKey:error:handler:
valueExistsForKey:
events
currentHistoryToken
contact
setStartingToken:
setShouldUnifyResults:
setIncludeGroupChanges:
setAdditionalContactKeyDescriptors:
operatingSystemVersion
isActive
productBuildVersion
fileExistsAtPath:
purgeAvatars
evictWithContactIdentifier:
setImage:forKey:contactIDs:
cacheIsEmpty
imageForKey:contactIDs:
cacheCount
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
initWithBytesNoCopy:length:freeWhenDone:
stringForKey:
removeItemAtURL:error:
queue
authenticateFor:sessionID:
cancel:
handleBLEMessage:
encryptMessageData:deviceID:encryptedMessage:authTag:nonce:
setEncryptedPayload:
setAuthTag:
setNonce:
showAuthenticatedSiriForDeviceID:
initWithDomain:code:userInfo:
%@(%d)
application-identifier
com.apple.sharingd
OneTimeAirDropReset2
SDCancelActionIdentifier
SDOpenActionIdentifier
%@ is not a valid initializer for %@
<%@ %{ptr}
, transferIdentifier: %@
, bundleProxy: %@
SDAirDropHandler.m
Failed to find localAction for %@
DECLINE_BUTTON_TITLE
DISMISS_BUTTON_TITLE
OK_BUTTON_TITLE
OPEN_BUTTON_TITLE
Cannot generate default action for nil bundleProxy
TRANSFER_FROM
_PERSON
_DEVICE
_PLURAL
_IN_PROGRESS
_COMPLETED
_CANCELED
_FAILED
_TEXT
@"LSBundleProxy"16@?0@"LSBundleProxy"8
3rd-party
com.apple.airdrop.transfer.receiver.id.
voicememos
photos
x-apple-calevent
shoebox
stocks
mobilephone
ADClientAddValueForScalarKey
/System/Library/PrivateFrameworks/AggregateDictionary.framework/AggregateDictionary
SDAirDropSession
fractionCompleted
conversionTotal
message/requestIdentifier:%@, deviceIdentifier:%@, requestCreated:%@, hasCompletionHandler:%@, _timeoutTimer:%@, error:%@
linkClient: <%@>, 
<%@: %p, previousKeyIdentifier:%@, %@%@>
<%@: %p, advertisementPayload:%@, command:%@, %@%@>
<%@: %p, messageIdentifier:%@, requestIdentifier:%@, activityIdentifier:%@, deviceIdentifier:%@>
-- SDSmartCoverMonitor --
Smart Cover Closed:           %@
IOHIDEventGetIntegerValue
/System/Library/PrivateFrameworks/IOKit.framework/IOKit
IOHIDEventGetType
IOHIDEventSystemClientCopyServices
IOHIDEventCreateKeyboardEvent
IOHIDServiceClientCopyEvent
AUUseNewWatchVersion
AURestrictOldWatch
AUUseOldProtocolVersion
com.apple.sharingd.auto-unlock.pairing-session-queue
SDAKSPeerStateNotSetUp
SDAKSPeerStateNotAvailable
SDAKSPeerStateOnlyEscrowAvailable
SDAKSPeerStateTokenAvailable
SDAKSPeerStateNoPasscodeUnlockWithinWindow
SDAKSPeerStateNoRemoteUnlockWithinWindow
SDAKSPeerStateTooManyFailedPasscodeEntries
SDAKSPeerStatePasscodeDisabled
SDAKSPeerStateBioLockout
SDAKSPeerStateNotArmed
SDAKSPeerStateUnknown
Unexpected type
supportsACK
suppressNotification
itms-apps://itunes.apple.com/WebObjects/MZStore.woa/wa/docTypeLookup?uti=%@
itms-apps://itunes.apple.com/WebObjects/MZStore.woa/wa/docTypeLookup?scheme=%@
FILE_PERSON_SENDING_REQUIRES_APP_TEXT
FILE_DEVICE_SENDING_REQUIRES_APP_TEXT
LINK_PERSON_SENDING_REQUIRES_APP_TEXT
LINK_DEVICE_SENDING_REQUIRES_APP_TEXT
GET_APP_BUTTON_TITLE
com.apple.news
NEWS_LINK
keyFailed
KEYNOTE_LIVE_DOCUMENT_LINK
BLE Peer disconnected
Starting AWDL failed
-[SDAutoUnlockKeySession createWiFiRequest]_block_invoke_2
AWDL Info Failure
Key Needs To Be Armed
AUDisableIconCache
Auth prompt request missing info
Key failed
Exchange response missing key
Exchange response failed
Failed to generate ranging session token
Creating auth token failed
User denied authorization request
Error posting authorization request
Confirmation failed
WiFi interface disabled on Watch
Failed to serialize AWDL Info
AWDL info exchange failed
Exchange request failed
SDAutoUnlockKeySession
AutoUnlock-Key
com.apple.private.alloy.continuity.auth
com.apple.private.alloy.continuity.auth.classa
@unionOfObjects.uniqueID
SDUnlockSendDataClassClassD
SDUnlockSendDataClassClassA
Pairing key session canceled
Timeout waiting for response from Mac
Timeout waiting for LTKs
Incorrect LTK
Failed to store escrow secret
Failed to create escrow secret
Failed to store session token
Failed to create session token
Could not complete step
No remote step data in message
Device locked
Request failure
Setup created response failed
<%@: %p deviceID=%@ sessionID=%@>
<%@: %p, deviceUniqueID:%@, hasKey:%@, lastReceivedAdvertisementDate:%@>
Failed to decrypt advertisement
v24@?0@"NSData"8@"NSError"16
com.apple.sharingd.ClassroomChanged
jMiqevikb6QWeHOhvLsw6A
No password
View not syncing
Pairing lock session canceled
AUGenerateNoPasscode
AUGenerateNoWristDetection
AUGenerateNoCommunication
Request timeout
Timeout waiting for response to initial request
Timeout waiting for response to token exchange request
Could not setup escrow session
Invalid AKS session
Auto Unlock: Missing information for escrow session (has token = %@, token = %@)
Could not setup device authentication session
Pairing response missing companion device ID
Finalizing pairing failed
Final step failed
Auto Unlock: Creating escrow record failed (error code: %d)
Record failure
Unlock not enabled after pairing
Setup request failed
v16@?0@"NSData"8
UNLOCK_IPHONE_UNLOCK_TITLE
UNLOCK_IPHONE_UNLOCK_BODY
UNLOCK_KEYCHAIN_MISMATCH_TITLE
UNLOCK_KEYCHAIN_MISMATCH_BODY
UNLOCK_INTERNET_SHARING_SETUP_TITLE
UNLOCK_INTERNET_SHARING_SETUP_BODY
UNLOCK_FAILED_COMMUNICATION_TITLE_PHONE
UNLOCK_FAILED_COMMUNICATION_KEY_SYNC_BODY
UNLOCK_PHONE_NOT_SIGNED_IN_TITLE
UNLOCK_PHONE_NOT_SIGNED_IN_BODY
[Internal] Bluetooth cloud pairing in progress.
Auto Unlock can't be set up when your Mac is bluetooth cloud pairing to your Apple Watch. Please try again later.
UNLOCK_WATCH_LOCKED_TITLE_PHONE
UNLOCK_WATCH_LOCKED_BODY_PHONE
UNLOCK_IPHONE_SIGN_IN_TITLE
UNLOCK_IPHONE_SIGN_IN_BODY
UNLOCK_PASSCODE_AND_WRIST_DETECTION_REQUIRED_TITLE_PHONE
UNLOCK_PASSCODE_AND_WRIST_DETECTION_REQUIRED_BODY_PHONE
UNLOCK_WRIST_DETECTION_REQUIRED_TITLE_PHONE
UNLOCK_WRIST_DETECTION_REQUIRED_BODY_PHONE
UNLOCK_PASSCODE_REQUIRED_TITLE_PHONE
UNLOCK_PASSCODE_REQUIRED_BODY_PHONE
UNLOCK_FAILED_COMMUNICATION_BODY_PHONE
UNLOCK_OLD_PROTOCOL_TITLE
UNLOCK_OLD_PROTOCOL_BODY
UNLOCK_NEW_PROTOCOL_TITLE
UNLOCK_NEW_PROTOCOL_BODY
SharingXPCHelperGroupContactIcon-Contacts
SharingXPCHelperGroupContactIcon for contacts %{private}@ %@ iconData at index %llu
needsImageData
usingRecord
BonjourBrowse
BonjourAdvertise
Stop
sender
bytesPerSec
modelCode
legacy
totalBytesBucket
discoverabilityLevel
fromShareSheet
com.apple.sharing.AirDrop.TransferResult
TimeSpent
time
TransferredCount
count
browserID
modelName
bonjourPTRDiscoveryMs
bonjourTXTDiscoveryMs
bonjourResolveMs
tcpConnectionMs
tlsHandshakeMs
idQueryMs
totalDiscoveryWithoutBonjourPTRMs
totalDiscoveryMs
verifiableID
awdlVersion
platform
com.apple.sharing.AirDrop.PeerDiscoveredInfo
startTimestamp
firstDiscoveryMs
totalPeersDiscovered
maxPeersDiscovered
transfersInitiated
transfersCompleted
discoveryLevel
com.apple.sharing.AirDrop.SessionInfo
activityType
No user action
com.apple.sharing.AirDrop.SheetActivityType
### BEGIN: %@ #########################
##### END: %@ #########################
duration
ConnectBack
bytesTransferred
NotSet
100M
250M
500M
ILIFE_ITEM
com.apple.sharing.SDNetworkBrowser
SharingXPCHelperImageItem-ImageTitle
SharingXPCHelperImageItem-ImageData
SharingXPCHelperImageItem-CacheLookupKey
SharingXPCHelperImageItem-ContactIDsKey
SharingXPCHelperImageItem for %{private}@ %@ imageData
stashToken
com.apple.CloudKit.ShareBear
keynote
SHARED_KEYNOTE_DOCUMENT_LINK
numbers
SHARED_NUMBERS_DOCUMENT_LINK
pages
SHARED_PAGES_DOCUMENT_LINK
SHARED_ICLOUD_DOCUMENT_LINK
%@ %@
requestID
com.apple.mobilesafari
WEBSITE
AirDropID
Upload
Discover
No Files
System Sleep
Invalid File
Not Enough Space
Transfer Failed 1
File Not Readable
WiFi Disabled
WLAN Disabled
Authentication Failed
com.apple.sharingd.AirDropPeerChanged
com.apple.sharingd.AirDropTransferInitiated
com.apple.airdrop.queue
encDsID
AirDrop
NO_APPLE_ID_ACCOUNT_ALERT_TEXT
OPEN_SETTINGS_BUTTON_TITLE
CANCEL_BUTTON_TITLE
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE
SDStreamActivityIdentifier
Publishing:%@
Registered Activities:%d
Connected Streams:%ld
Could not set up internal streams
Wi-Fi not enabled
SDSetupAgent
Discovery still active during dealloc
Scan timer still active during dealloc
PINPair still active during dealloc
-[SDSetupAgent setPreventRepair:]
Prevent repair changed: %s -> %s
-- SDSetupAgent --
Discovery: %@, %ld needSetup, %ld triggered
ScanTimer: %s, %d seconds
    %s %@
TRIG
----
PINPair service: %@
PINPair session: %@, UUID %@
PINPair dialog: %s
Problems: %#ll{flags}
, RepairService On
RepairSession: Yes, %@
WatchScanner: %@
Wi-Fi Password Sharing: granting %s, requesting availability: %#{flags}
Status Monitor Phone Hashes:
Validation Record Phone Hashes:
Status Monitor Email Hashes:
Validation Record Email Hashes:
-[SDSetupAgent _activate]
com.apple.ManagedConfiguration.profileListChanged
-[SDSetupAgent _activate]_block_invoke
Profiles changed
-[SDSetupAgent _invalidate]
-[SDSetupAgent nfcTagReaderUIActivateWithEndpoint:params:completion:]_block_invoke
### Ignoring NFC Tag Reader UI when already showing UI
Prox UI Already Active
Start NFC Tag Reader UI
NFCTagReaderMainController
NFCUI
-[SDSetupAgent openSetupURL:]
openSetupURL not supported on current platform
-[SDSetupAgent _openSetupURL:]
_openSetupURL not supported on current platform
nearbyAuthTagFilter
-[SDSetupAgent prefsChanged]
AuthTag filter: %@ -> %@
saCDP
Repair CDP enabled: %s -> %s
pwsAutoGrant
Wi-Fi password sharing autoGranting enabled: %s -> %s
pwsGrantingEnabled
Wi-Fi password sharing granting enabled: %s -> %s
saRepairEnabled
Repair enabled: %s -> %s
saRepairSilent
Repair silent: %s -> %s
saScanSeconds
Scan seconds: %d -> %lld
saServerEnabled
saWatchMigration
WatchMigration enabled: %s -> %s
saWatch
WatchSetup enabled: %s -> %s
-[SDSetupAgent reenableProxCardType:]
Re-enabled prox card type %s
Re-enable B238Setup after WiFi Connects
-[SDSetupAgent retriggerProximitySetup:]_block_invoke
Re-triggering setup UI for %@
### Re-trigger failed: no triggered devices
-[SDSetupAgent showDevicePickerWithInfo:completion:]_block_invoke
### Ignoring Device Picker UI when already showing UI
Start Device Picker UI
ProfileDevicePickerMainController
DevicePicker
-[SDSetupAgent triggerHomeKitDeviceDetectedWithURL:completion:]_block_invoke
### Ignoring HomeKit Device Detected UI when already showing UI
Triggering HomeKit Device Detected UI: '%@'
com.apple.itunesstored.accountschanged
-[SDSetupAgent _ensureClientStarted]_block_invoke
iTunes accounts changed
-[SDSetupAgent _ensureClientStarted]
ScanEligible: %s -> %s
Start scan timer for %{dur}
SetupAgent
WatchScan start
-[SDSetupAgent _ensureClientStarted]_block_invoke_2
BLE WatchSetup found %@
BLE WatchSetup lost %@
BLE WatchSetup changed %@
### WatchScan start failed: %@
Discovery stop (shouldn't scan)
WatchScan stop (shouldn't scan)
-[SDSetupAgent _ensureClientStopped]
Discovery stop (stopped)
WatchScan stop (stopped)
Triggered
-[SDSetupAgent _deviceFound:]
Triggering proximity ApplePay with %@
com.apple.applepay.proximity
Ignoring proximity AppleTVPair with another %@
Ignoring proximity AppleTVPair when not allowed for %@
Triggering proximity AppleTVPair with %@
Ignoring proximity AppleTVSetup with another %@
Ignoring proximity AppleTVSetup when not allowed for %@
Triggering proximity AppleTVSetup with %@
Ignoring proximity HomePodSetup with another %@
Ignoring proximity HomePodSetup when not allowed for %@
Triggering proximity HomePodSetup with %@
HomePodSetup action type is %s
Triggering proximity DeviceDiagnostics with %@
com.apple.diagnosticextensionsd.sharing-wakeup
Ignoring proximity iOSSetup with another %@
Ignoring proximity iOSSetup when not allowed for %@
Ignoring proximity iOSSetup during resume: %@
Triggering proximity iOSSetup with %@
Ignoring proximity iOSSetup in EDU mode
Ignoring proximity Repair with another %@
Ignoring proximity Repair when not allowed for %@
Ignoring unpaired proximity Repair with %@
Triggering proximity Repair silent with %@
Ignoring proximity WHASetup with another %@
Ignoring proximity WHASetup when not allowed for %@
Triggering proximity WHASetup with %@
Ignoring proximity AuthenticateAccounts with another %@
Triggering proximity AuthenticateAccounts with %@
WPS: Ignoring Wi-Fi Password Sharing request when not allowed for %@
WPS: Triggering Wi-Fi Password Sharing with %@
WPS: Shouldn't offer password, ignoring triggered device: %@
Setup
action
com.apple.sharing.SetupTriggered
-[SDSetupAgent _launchAppWithMachServiceName:]
Launch XPC '%@' start
-[SDSetupAgent _launchAppWithMachServiceName:]_block_invoke
Launch XPC event: %{xpc}
SharingXPCLaunch
-[SDSetupAgent _launchAppWithMachServiceName:]_block_invoke_2
Launch XPC '%@' finish
com.apple.sharing.DeviceSetup
-[SDSetupAgent _postDeviceSetupNotificationForDevice:present:]
-[SDSetupAgent _appleAccountSignIn:]_block_invoke
Apple Account signed in
-[SDSetupAgent _hsa2Changed]
Primary HSA2 changed
-[SDSetupAgent _iTunesAccountsChanged]
Resetting prox card triggers on iTunes
-[SDSetupAgent _scanTimerFired]
Scan stop timer fired
-[SDSetupAgent _screenStateChanged]_block_invoke
-[SDSetupAgent _shouldOfferPassword:]
WPS: Ignoring pw request from non-contact peer
WPS: Ignoring pw request from blocked-contact peer
WPS: Ignoring pw request without requestSSID
ssid
shareMode
### WPS: Get network share mode failed: %#m
### WPS: Unexpected error checking pws sharable: %@
WPS: Should share network "%@": %s
-[SDSetupAgent _uiLockStatusChanged]_block_invoke
AppleTVSetupMainController
AppleTVSetupUI
HomeKitDeviceDetectedMainController
HomeKitDeviceDetected
PINPairMainController
PairUI
com.apple.Remote
com.apple.TVRemote
RepairMainController
RepairUI
repairFlags
B238SetupMainController
HomePodSetup_PRX
SharingViewService.HomePodSetupFlowViewController
HomeDeviceSetup
enable_viewservice
HDSViewService.HomePodSetupFlowViewController
deviceModelCode
B238SetupUI
DeviceToDeviceSetup_PRX
SharingViewService.D2DSetupFlowViewController
iOSSetupMainController
iOSSetupUI
autoStart
deviceClassCode
05938CDC
WatchSetupViewControllerProxy
WatchSetupUI
advertisingName
WHASetupMainController
WHASetupUI
ProxCardKitTestRemoteViewController
Test
authenticate_accounts_prx
SharingViewService.AuthenticateAccountsFlowViewController
AuthenticateAccountsMainController
AuthenticateAccountsUI
-[SDSetupAgent _uiStartWiFiPasswordSharing:]
WPS: Not showing UI for non-contact peer
### WPS: Not showing UI, no request SSID
### WPS: Neither email nor phone hashes found
PasswordSharing_PRX
SharingViewService.PasswordSharingFlowViewController
PasswordSharingViewControllerProxy
WiFiPasswordSharing
-[SDSetupAgent _uiStartWithDevice:viewControllerName:xpcEndpoint:label:unlessApps:extraInfo:]
%@ not supported
-[SDSetupAgent _uiStartForMacWithDevice:label:extraInfo:]
-[SDSetupAgent _uiStopIfNeededWithDevice:]
Stop UI not supported
-[SDSetupAgent _watchFastScanStartIfAllowed:]
Fast scan rate start for %@
-[SDSetupAgent _watchFastScanStop]
Fast scan rate stop
-[SDSetupAgent _watchFound:]
Ignoring proximity WatchSetup with another %@
Triggering proximity WatchSetup with %@
-[SDSetupAgent _wifiStateChanged]
Resetting prox card triggers now that WiFi is connected
-[SDSetupAgent _ensureServerStarted]
PINPair start
-[SDSetupAgent _ensureServerStarted]_block_invoke
PINPair ending session on error: %{error}
PINPair invalidated
-[SDSetupAgent _ensureServerStarted]_block_invoke_2
PINPair activated
### PINPair activate failed: %@
-[SDSetupAgent _ensureServerStopped]
PINPair hide PIN on stop
PINPair service stop
PINPair session stop
-[SDSetupAgent _pinPairHandleRequest:]
### PINPair request no UUID: %#m
### PINPair request UUID failed
PINPair session %@ ending for %@
PINPair session create %@
-[SDSetupAgent _pinPairHandleRequest:]_block_invoke
PINPair session %@ completed %{error}
v20@?0I8@"NSString"12
-[SDSetupAgent _pinPairHandleShowPIN:]
PINPair show PIN '%@'
### PINPair PBS proxy failed
PINPair hide old PIN
PIN_PAIR_DIALOG_MESSAGE
PIN_PAIR_DIALOG_TITLE
-[SDSetupAgent _pinPairHandleShowPIN:]_block_invoke
PINPair dialog error: %@
PINPair dialog ended %s
(user canceled)
### PINPair dialog failed
-[SDSetupAgent _pinPairHandleHidePIN]
PINPair hide PIN
-[SDSetupAgent _pwsHandleUserResponse:device:info:]
### pwsHandleUserResponse not supported on current platform
-[SDSetupAgent _pwsHandleProgressEvent:info:]
PWS progress: %s, %@
-[SDSetupAgent _repairEnsuredStarted]
TTF: Problem monitoring start
com.apple.sharing.problems
lastDisconnectError
TTF: VPN initial: %{error}
-[SDSetupAgent _repairEnsuredStarted]_block_invoke_4
TTF: WiFi health status changed: %s
TTF: RepairService start
-[SDSetupAgent _repairEnsuredStarted]_block_invoke
TTF: Problem reporting repair progress: %s %@
v20@?0I8@"NSDictionary"12
-[SDSetupAgent _repairEnsuredStopped]
TTF: RepairService stop
TTF: Problem monitoring stop
-[SDSetupAgent _repairHandleCompletion]
TTF: Repair complete
-[SDSetupAgent _repairProblemCheck]
Repair periodic check: CDP %s
-[SDSetupAgent _repairProblemFlagsChanged]
TTF: Problem flags changed: %#ll{flags}
-[SDSetupAgent _repairSilentStart:]
Ignoring proximity repair for WiFi 802.1x (needs user)
captive
likelyCaptive
Ignoring proximity repair for captive WiFi (needs user)
-[SDSetupAgent _repairSilentProgress:info:]
Repair silent progress: %s %##@
Repair silent done: %{error}
Repair completed: %@
Repair Finalized
NEVPNConnectionErrorDomainIPSec
-[SDSetupAgent observeValueForKeyPath:ofObject:change:context:]_block_invoke
TTF: VPN changed: %{error}
-[SDSetupAgent testHomeKitDeviceDetected:]
Testing HomeKit Device Detected (%@)
com.apple.Home://a/s?n=Test
-[SDSetupAgent testNFCUI:]
Testing NFC UI (%@)
-[SDSetupAgent testPairUI:]
Testing pair UI (%@)
testParams
-[SDSetupAgent testRepairUI:]
-nowifi
00000000-0000-0000-0000-000000000003
-badwifi
00000000-0000-0000-0000-000000000004
Living Room
-[SDSetupAgent testSetupUIB238:]
Testing Setup UI B238 (%@)
-code
00000000-0000-0000-0000-000000000005
-noicloud
00000000-0000-0000-0000-000000000006
-nohsa2
00000000-0000-0000-0000-000000000007
-noitunes
00000000-0000-0000-0000-000000000008
-nohome
00000000-0000-0000-0000-000000000009
-nokeychain
00000000-0000-0000-0000-00000000000A
-sharesplit
00000000-0000-0000-0000-00000000000B
-audio
00000000-0000-0000-0000-00000000000C
-siri
00000000-0000-0000-0000-00000000000D
-AppleMusic
00000000-0000-0000-0000-00000000000E
-WiFiBadEnterprise
00000000-0000-0000-0000-00000000000F
device
color
Testing Setup UI HomePod action=%d device=%d color=%d
-[SDSetupAgent testSetupUIiOS:]
Testing Setup UI iOS (%@)
-ipad
-ipod
-[SDSetupAgent testSetupUIPasswordSharing:]
WPS: Testing Setup UI Password Sharing (%@)
WiFiNetwork
-rich
-hsfail
-device
-long
-[SDSetupAgent testSetupUIWatch:]
Testing Setup UI Watch (%@)
-[SDSetupAgent testSetupUIWHA:]
Testing Setup UI WHA (%@)
-mismatch
-keychain
-[SDSetupAgent testUIAppleTVSetup:]
Testing AppleTVSetup UI (%@)
PBSSystemServiceConnection
/System/Library/PrivateFrameworks/PineBoardServices.framework/PineBoardServices
PBSMediaRemoteServiceDialogOptionMessageKey
PBSMediaRemoteServiceDialogOptionPINKey
PBSMediaRemoteServiceDialogOptionTimeoutKey
PBSMediaRemoteServiceDialogOptionTitleKey
Final
SessionStarted
SessionEnded
SessionSecured
PreAuthStart
PreAuthFinish
SecurityStart
SecurityFinished
PasswordSending
PasswordSent
PasswordReceived
PasswordAccepted
PasswordDeclined
NEVPNConnection
/System/Library/Frameworks/NetworkExtension.framework/NetworkExtension
Good
Bad802.1x
ConnectStart
SecurityAPCLoopStart
SecurityFinish
BasicConfigStart
BasicConfigFinish
StepStart
StepFinish
PreFinish
SetupFinished
SetupResumed
SetupSuspend
SetupPeerSWUpdate
CheckingiCloud
CheckingAppleMusic
CheckingAccount
WiFiPoweredOff
RecognizeVoice
SiriForEveryone
WiFiStart
ActivationStart
iCloudStart
HomeKitStart
CDPSetupStart
HomeKitSetupStart
BuddyStarting
BuddyProgress
BuddyFinished
ReportSuccess
TVLSStart
TVLSFinish
TVLSEstimateStart
TVLSEstimateFinal
TVLSEstimateFailed
TVLSTryAgain
TVLSToneBegan
BackupProgress
SyncProgress
StopSetup
PINPair
MigrateStart
MigrateStop
FileTransferReady
SiriWelcome
SiriDialogA
SiriDialogBStart
SiriDialogBHome
SiriDialogBNews
SiriDialogBWeather
SiriDialogBClock
SiriDialogBMusic
SiriDialogCMusic
SiriDialogCNews
SiriDialogCWeather
SiriSkipDemo
StopSetupLEDs
AudioPasscodeEnded
AuthAccountsStart
AuthAccountsiCloudProgress
AuthAccountsStoreProgress
AuthAccountsGameCenterProgress
v24@?0@"CMAccelerometerData"8@"NSError"16
v16@?0@"CMMotionActivity"8
phoneAutoUnlockWatchMotionActivityWindowSeconds
phoneAutoUnlockWatchStepCountWindowSeconds
v24@?0@"CMPedometerData"8@"NSError"16
phoneAutoUnlockWatchMotionActivityThresholdSeconds
phoneAutoUnlockWatchStepCountThreshold
PUUseAccelerometerMotion
x:%f, y:%f, z:%f
AirDrop/1.0
discovery
[%@:%@]
Connecting to
Sending to
com.apple.Passwords.remoteservice
%@.webloc
webloc
public.heic
SDAirDropClient
com.apple.InCallService
CALL_BUTTON_TITLE
PHONE_LINK
resetReason
errorString
v24@?0@"NSObject<SFAirDropTransferObserverProtocol>"8^B16
SDAirDropTransferManager.m
Failed to find valid handler for transfer id %@
response
com.apple.sharing.AirDropCredentialResponse
com.apple.sharing.transfer-observer
v16@?0@"NSObject<SFAirDropTransferObserverProtocol>"8
v20@?0B8B12B16
Failing transfer with invalid state: %@
%@/%@
v28@?0@"NSString"8@"NSString"16B24
BluetoothAdvertiseScanVersionByte
BluetoothAdvertiseGoodByeDuration
SDActivityAdvertiser
Stopped
Skipping request for
UnexpectedState
-[SDActivityAdvertiser stopForReason:]
-[SDActivityAdvertiser resumeForReason:]
v24@?0@"NSObject<SFActivityAdvertiserClient>"8^B16
com.apple.sharing.handoff.advertising
-------------
Version Byte: %u
Goodbye Timer Interval: %.2f
Advertising Enabled: %@
Should Start: %@
Should Not Advertise Requesters: %@
Is Advertising: %@
Has Power Assertion:%@
Current Advertisement Payload: %@
Current Advertisement Options: %@
FrameworkBundleID
AssertType
PreventUserIdleSystemSleep
AssertName
Handoff
v24@?0C8[2C]12S20
UnexpectedType
v32@?0@"NSUUID"8@"NSData"16@"NSError"24
Resetting
PoweredOff
PoweredOn
UAUserActivityIsForPairedDeviceOptionKey
/System/Library/PrivateFrameworks/UserActivity.framework/UserActivity
Activity
TetheringTargetPresence
TetheringSourcePresence
Invalid
TRANSFER_FROM_IMPORT_FAILED_TEXT
OPEN_WITH_FILES_APP_BUTTON_TITLE
FILES_APP_BUTTON_TITLE
SAVE_TO_ICLOUD_DRIVE_BUTTON_TITLE
com.apple.podcasts
ITUNES_STORE_LINK_PODCAST
autool
com.apple.preference.security.remoteservice
com.apple.Preferences
AutoUnlockPresentedBluetoothError
AutoUnlockPresentedWiFiError
AutoUnlockLastUpsellDate
AutoUnlockLastUpsellState
AutoUnlockDeclinedToEnablePAU
AutoUnlockAlreadyEnabledBefore
AutoUnlockLastSeenVersion
AutoUnlockDoNotCollectTriggerMetrics
AutoUnlockAutoRelockPreventExitReason
ApproveSessionIDs
SDAuthenticationSessionStarted
B8@?0
com.apple.sharingd.auto-unlock.session-manager-queue
Disabled due to profile
com.apple.watch.auto-unlock.disabled
Approve with Apple Watch
Auto Unlock
Apple Watch
Test Mode
Test mode failure
Missing passcode
SPI attempt overlap with prewarm attempt, try again when phone is not prewarming
No enabled devices
UNLOCK_INTERNET_SHARING
Device not connected
Device not nearby
Watch needs to be unlocked
Watch locked and unarmed
UNLOCK_EXPIRED_TEXT
Reached attempt limit
No unlocks in the last %f hrs
Blocked PAU attempt due to Relock
Attempt Cancelled due to Periocular Success
SFAutoUnlockStateUnknown
SFAutoUnlockStateNotInProgress
SFAutoUnlockStateInProgress
SFAutoUnlockStateInProgressNoScan
Trigger Send Failed With Timeout
Unable to Find Proxy Watch
Pairing canceled
com.apple.watch.auto-unlock.enabled
phoneAutoUnlockSkipPrewarmOnNextUnlock
Missing authorization token
Proxied Apple Watch
v16@?0@"SFDevice"8
v20@?0@"SFDevice"8I16
AUBLEScanTimeout
AUScanTimeout
Apple Watch Not Found
Watch Not On Wrist
v20@?0@"SDAutoUnlockSessionWrapper"8B16
UNLOCK_PHONE_UPGRADE_BODY_SIRI_ENABLED
UNLOCK_PHONE_UPGRADE_BODY
### FaceID needs to be enabled for this feature to work
UNLOCK_WLAN_BLUETOOTH_DISABLED
UNLOCK_WIFI_BLUETOOTH_DISABLED
UNLOCK_BLUETOOTH_DISABLED
UNLOCK_WLAN_DISABLED
UNLOCK_WIFI_DISABLED
Auto Unlock State End
Auto Unlock State
Current Date: %@
Ranging Supported: %@
Model Identifier: %@
Device Has Passcode: %@
Unlocked: %@
Lock State Changed: %@
SDAutoFillAgent
-- SDAutoFillAgent --
Granting: %s, Requesting: %s, Scanning: %s
enabled
disabled
Device Discovery: %@, %ld devices
    %@
, TRIG
    Orphaned triggered device: %@
Proximity discovery: %@, %ld devices
    %@
Requesting service: %@
SiriRemoteMonitor: %@
-[SDAutoFillAgent _activate]
-[SDAutoFillAgent _invalidate]
rafGrantingEnabled
-[SDAutoFillAgent prefsChanged]
Enabled: %s -> %s
### Granting disabled via default
rafRateLimitDisabled
Rate limiting disabled: %s -> %s
rafRequestingEnabled
Requesting enabled: %s -> %s
rafRequiresProx
Requires prox: %s -> %s
rafAllowPairedTV
Paired TVs allowed: %s -> %s
saClientEnabled
Proximity monitoring enabled: %s -> %s
Siri remote monitoring enabled: %s -> %s
Scanning enabled: %s -> %s
-[SDAutoFillAgent setPreventNotifications:]_block_invoke
Prevent notifications: %s -> %s
-[SDAutoFillAgent _ensureKeychainCleaned:]
Cleaning up old keys
com.apple.sharing.safaripasswordsharing
### Error fetching keys: %@
Should delete item with end date: %@ and persistent ref: %@
### Deleting %@ error: %@
deviceID
needsSetup
com.apple.sharing.ProxAutoFill
-[SDAutoFillAgent _postSetupNotificationForDevice:]
Posted %@: %##@
-[SDAutoFillAgent triggerProximityAutoFillDetectedWithURL:completion:]
### Failed to get components from url: %@
deviceAddress
Already found device, adding identifier to extra info: %@
Triggering AutoFill from URL: %@
-[SDAutoFillAgent _screenStateChanged:]_block_invoke
Screen state changed to %s
-[SDAutoFillAgent _uiLockStatusChanged:]_block_invoke
UI lock status changed to %s
unlocked
locked
-[SDAutoFillAgent _discoveryEnsureStarted]
Discovery start
AutoFill
-[SDAutoFillAgent _discoveryEnsureStarted]_block_invoke
Discovery activated
### Discovery activate failed: %@
-[SDAutoFillAgent _discoveryEnsureStopped]
Discovery stop
-[SDAutoFillAgent _deviceChanged:]
Ignoring paired TV
-[SDAutoFillAgent _deviceFound:]
Found device: %@
bdAddr
-[SDAutoFillAgent _deviceLost:]
Lost device: %@
-[SDAutoFillAgent _deviceStoppedRequesting:]
Device stopped requesting %@
Untriggering %@
-[SDAutoFillAgent helperStart:]
Helper start
-[SDAutoFillAgent helperStop:]
Helper stop
-[SDAutoFillAgent helper:didPickUsername:password:error:]
Helper: DidPickUsernamePassword
### Message from unrecognized helper
### Helper passing credential, but no handler?
Adding %@ to granted devices
-[SDAutoFillAgent helper:tryPIN:]
Helper: TryPIN %@
-[SDAutoFillAgent helper:userNotificationDidActivate:]
Helper: NotificationDidActivate
-[SDAutoFillAgent helper:userNotificationDidDismiss:]
Helper: NotificationDidDismiss
-[SDAutoFillAgent _proximityEnsureStarted]
Proximity discovery start
v16@?0@"SFBLEDevice"8
v20@?0@"SFBLEDevice"8I16
-[SDAutoFillAgent _proximityEnsureStarted]_block_invoke
Proximity discovery started
### Proximity discovery start failed: %@
-[SDAutoFillAgent _proximityEnsureStopped]
Proximity discovery stop
ATVRemote1,1
ATVRemote1,2
ATVRemote1,3
rafp
-[SDAutoFillAgent _proximityChanged:]
Proximity remote %@ exited at %d
Proximity remote %@ entered at %d
-[SDAutoFillAgent _proximityFound:]
Found proximity device: %@
-[SDAutoFillAgent _proximityLost:]
Lost proximity device: %@
-[SDAutoFillAgent handleInputDidBeginWithFlags:sessionInfo:]
RTI: input did begin with flags: %d
In AutoFill context: %s -> %s
remoteLocalizedAppName
remoteUnlocalizedAppName
remoteAssociatedDomains
remoteBundleID
-[SDAutoFillAgent handleInputDidEndWithFlags:sessionInfo:]
RTI: input did end with flags: %d
-[SDAutoFillAgent _siriRemoteMonitorEnsureStarted]
SiriRemoteMonitor start
-[SDAutoFillAgent _siriRemoteMonitorEnsureStarted]_block_invoke
SiriRemoteMonitor activated
### Error activating SiriRemoteMonitor: %@
-[SDAutoFillAgent _siriRemoteMonitorEnsureStopped]
SiriRemoteMonitor stop
-[SDAutoFillAgent _serviceEnsureStarted]
Requesting service start
-[SDAutoFillAgent _serviceEnsureStarted]_block_invoke_2
Requesting service hide PIN
v32@?0@"NSString"8@"NSString"16@"NSError"24
-[SDAutoFillAgent _serviceEnsureStarted]_block_invoke
Requesting service activated
### Error activating requesting service: %@
-[SDAutoFillAgent _serviceEnsureStopped]
Requesting service stop
-[SDAutoFillAgent _serviceHandleError:]
### Requesting service error: %@
-[SDAutoFillAgent _serviceHandleUsername:password:error:]
### Received credentials error: %@
Received no credentials to handle
Received username: %s, password: %s
-[SDAutoFillAgent _serviceStartRequestingAutoFillIfReady]
Siri remote not yet ready for advertising commands
Requesting service not yet ready for advertising commands
Start requesting AutoFill
-[SDAutoFillAgent _serviceStopRequestingAutoFill]
Stop requesting AutoFill
-[SDAutoFillAgent _serviceTimeoutStart]
Requesting service timeout start
-[SDAutoFillAgent _serviceTimeoutStart]_block_invoke
Requesting service timeout firing
-[SDAutoFillAgent _serviceTimeoutStop]
Requesting service timeout stop
-[SDAutoFillAgent _sessionStart:]
Granting session start
-[SDAutoFillAgent _sessionStart:]_block_invoke_3
### Client error handling pairing succeeded: %@
-[SDAutoFillAgent _sessionStart:]_block_invoke
Granting session: PromptForPasswordPicker
v56@?0@"NSString"8@"NSString"16@"NSString"24@"NSString"32@"NSArray"40@?<v@?@"NSString"@"NSString"@"NSError">48
### Granting session start: %@
-[SDAutoFillAgent _sessionStop:]
### Session completed with error: %{error}
Granting session stop
-[SDAutoFillAgent _sessionHandlePairingSucceededResponse:]
Client handled pairing succeeded response: %@
-[SDAutoFillAgent testKeychain:]
Testing AutoFill keychain (%@)
-[SDAutoFillAgent testRemote:]
Testing AutoFill Siri Remote (%@)
-advStart
-advStop
-advStartDebug
-advStopDebug
-[SDAutoFillAgent testService:]
Testing AutoFill Service (%@)
-start
-stop
-[SDAutoFillAgent testUI:]
Testing AutoFill UI (%@)
-fail
00000000-0000-0000-0000-000000000002
00000000-0000-0000-0000-000000000001
-[SDAutoFillAgent testUI:]_block_invoke_2
Picker username: %@, pw: %@, error: %@
-[SDAutoFillAgent _activateUIDelayTimer]
Activate UI delay timer
-[SDAutoFillAgent _activateUIDelayTimer]_block_invoke
UI delay timer firing
-[SDAutoFillAgent _deactivateUIDelayTimer]
Deactivate UI delay timer
sessionUUID
urlStr
bundleID
localizedAppName
unlocalizedAppName
associatedDomains
com.apple.SharingViewService
PasswordPickerMainController
-[SDAutoFillAgent passwordPickerStart:bundleID:localizedAppName:unlocalizedAppName:associatedDomains:completion:]
### Create remote alert handle failed
Starting AutoFill UI with sessionID %@
### Start UI failed: %#m
-[SDAutoFillAgent remoteAlertHandleDidActivate:]_block_invoke
Alert handle DidActivate
### Unknown alert DidActivate: %@
-[SDAutoFillAgent remoteAlertHandleDidDeactivate:]_block_invoke
Alert handle DidDeactivate
### Unknown alert DidDeactivate: %@
-[SDAutoFillAgent remoteAlertHandle:didInvalidateWithError:]_block_invoke
Alert handle DidInvalidate: %{error}
Unknown Alert DidInvalidate: %{error}
-[SDAutoFillAgent _uiStartIfNeeded:extraInfo:]
No proximity devices, un-triggering TV device %@
UI delay timer active, deferring notification for %@
Triggering ProximityAutoFill with %@
SDProxHandoffAgent
SFCombinedDevice "%@": 
, BLE %@
, CL %@
, CL.MR %@
, notif
, route
, ready
-[SFCombinedDevice canTransition:]
%@ transition not allowed: %@ -> %@
-[SFCombinedDevice resetTicks]
%@ state reset
-[SFCombinedDevice setNextState:]
%@ next state: %@
-[SFCombinedDevice setState:]
%@ state change: %@ -> %@
-[SFNotificationProxy _requestPostOrUpdate:info:mediumVariant:canPost:]
NotifProxy: Ignoring medium, already posted
NotifProxy: Updating notification (already posted) %@
NotifProxy: Posting notification %@
NotifProx: Not handling %@: %@
-[SFNotificationProxy requestRemove:withReason:]
### NotifProxy: RequestRemove failed, unrecognized ID: %@
### NotifProxy: RequestRemove failed, no existing notification
NotifProxy: Remove tracking of %@ per request
NotifProxy: Remove actual notification per request
-[SFNotificationProxy requestRemoveAll]
NotifProxy: Request remove all
-[SFNotificationProxy handleNotificationWasTapped:]
### NotifProxy: Unrecognized notification ID tapped: %@
NotifProxy: Tapped %@
-[SFNotificationProxy handleNotificationWasDismissed:reason:]
NotifProxy: Did dismiss %@ (%@)
-[SFNotificationProxy reset]
NotifProxy: Reset
-- SDProxHandoffAgent --
Enabled: %s, On call: %s, client should advertise: %s, Candidate nearby: %s
CLinkClient (%ld devices): %@
BLE Action Service: %@
ProxClients: (%ld)
BLE NearbyAction Discovery: %@, %ld devices%@
, TIMED OUT
BLE NearbyInfo Discovery: %@
Mapped Devices (%ld), unmapped (%ld):
 - %@
UI Device: (next state = %@)
 - %@
System UI flags: %#{flags} %@, stationary: %s
canTrigger
Throttle events: %d / %d
-[SDProxHandoffAgent activate]_block_invoke
-[SDProxHandoffAgent _invalidate]
chEnabled
-[SDProxHandoffAgent prefsChanged]
Pref enabled: %s -> %s
chBLEScanSecs
Pref BLE scan secs: %f -> %f
chForceShouldAdvertise
Pref force should advertise: %s -> %s
chForceStationary
Pref force stationary: %s -> %s
chHighNormal
Pref HighNormal: %s -> %s
chForceOnCall
Pref force on call: %s -> %s
chIgnoreMediumThrottle
Pref ignore medium throttle: %s -> %s
chMediumBubbleEnabled
Pref medium bubble enabled: %s -> %s
chThrottleMediumTicks
Pref medium bubble last ticks: %d -> %d
chRetriggerSecs
Pref retrigger secs: %f -> %f
chTransferSecs
Pref transfer secs: %f -> %f
chThrottleEventCount
Pref throttle event count: %d -> %d
chThrottleEventMax
Pref throttle event max: %d -> %d
-[SDProxHandoffAgent setPreventNotifications:]_block_invoke
-[SDProxHandoffAgent _updateCandidateIsNearby]
Candidate is nearby: %s -> %s
-[SDProxHandoffAgent _commonEnsureStarted]
System monitor start
-[SDProxHandoffAgent _commonEnsureStarted]_block_invoke_4
System monitor activated
v16@?0@"NSMutableArray"8
-[SDProxHandoffAgent _commonEnsureStopped]
System monitor stop
-[SDProxHandoffAgent _commonCallCountChanged]
Active call count = %d (%d connected), userOnCall %s -> %s, prefForceOnCall = %s
Unanswered call %s -> %s
User no longer on call, cleaning up notifications
Trigger notification for call
-[SDProxHandoffAgent _commonShouldAdvertiseChanged]
Client should advertise changed: %s -> %s, prefForceShouldAdvertise = %s
-[SDProxHandoffAgent _commonScreenStateChanged]
Screen state changed to %s, %@
Locked
Unlocked
-[SDProxHandoffAgent commonSystemUIChanged]_block_invoke
System UI Changed %#{flags}, CanTrigger %s
-[SDProxHandoffAgent _runStateVerify:device:]
### Run state mismatch: %@, expected %@
-[SDProxHandoffAgent _runNotificationPending]
Run notification pending: %@
### No UI ID for request %@
### Notification type not supported: %d
-[SDProxHandoffAgent _runNotificationPendingContent]
### UI Start without notification info?
Run notification pending content: %@, waited: %f
-[SDProxHandoffAgent _runNotificationReady]
### System cannot present UI
### UI Start without UI ID?
### Device is stationary, so we shouldn't trigger notification
### Failed to generate info to present: %@
Delay threshold %f, deferring medium bubble notification for %f seconds
Run notification ready %@
UI Start: %@, medium version: %s
com.apple.sharing.HomePodHandoff.UIStart
notificationType
uiID
-[SDProxHandoffAgent _runNotificationPresented]
Run notification presented %@
-[SDProxHandoffAgent _runNotificationDismissed]
Run notification dismissed %@
-[SDProxHandoffAgent _runTransferInProgress]
Run transfer in progress %@
-[SDProxHandoffAgent _runTransferPending]
Run transfer pending start %@
Run transfer pending threshold %f
### No uiID? %@
-[SDProxHandoffAgent _runTransferReady]
### No UI ID? %@
Run transfer ready %@
### Type not supported: %d
-[SDProxHandoffAgent _runTransferPendingDismiss]
Run transfer pending dismiss %f %@
-[SDProxHandoffAgent _runTransferDone]
Run transfer done
-[SDProxHandoffAgent _runCallHandoffStart:]
### CallHandoff start without CompanionLink device? %@
CallHandoff start
com.apple.sharing.calltransfer
-[SDProxHandoffAgent _runCallHandoffHandleResponse:error:]
### Execute handoff response with error: %@
CallHandoff handle response
-[SDProxHandoffAgent _runCallHandoffHandleDelayTimerFired]
### No staged route after delay
### Call handoff not supported on current platform
-[SDProxHandoffAgent _bleActionDiscoveryEnsureStarted]
BLE action discovery start
HandoffAction
-[SDProxHandoffAgent _bleActionDiscoveryEnsureStarted]_block_invoke
BLE action discovery activated
### BLE action discovery activate failed: %@
BLE action scan rate -> Background with FastScanMatch
BLE action scan rate -> HighNormal
-[SDProxHandoffAgent _bleActionDiscoveryEnsureStopped]
BLE action discovery stop
-[SDProxHandoffAgent _bleActionDeviceChanged:]
%@ Retrigger after dismiss (%d)
%@: Start transfer countdown (%d)
### %@: System state prevents transfer (%d): stationary %s, flags %#{flags}
%@: Cancel pending content (%d, wait: %f)
%@: Make eligible for retrigger after %f (%d)
%@: Not yet eligible for retrigger after %f (%d)
%@ exited medium bubble (%d)
%@: Trigger (%d)
-[SDProxHandoffAgent _bleActionDeviceFoundCandidate:]
### Found candidate has wrong action type %@
BLE action device found: %@
-[SDProxHandoffAgent _bleActionDeviceLost:]
BLE action device lost: %@
-[SDProxHandoffAgent _bleActionScanTimerActivate]
BLE action scan timer activate
-[SDProxHandoffAgent _bleActionScanTimerInvalidate]
BLE action scan timer invalidate
-[SDProxHandoffAgent _bleActionScanTimerFired]
BLE action scan timer fired
-[SDProxHandoffAgent _bleInfoDiscoveryEnsureStarted]
BLE info discovery start
HandoffInfo
-[SDProxHandoffAgent _bleInfoDiscoveryEnsureStarted]_block_invoke_4
BLE info discovery activated
### BLE info discovery activate failed: %@
-[SDProxHandoffAgent _bleInfoDiscoveryEnsureStopped]
BLE info discovery stop
-[SDProxHandoffAgent _bleInfoDeviceChanged:]
BLE info device changed: %@
### Unknown BLE info device changed?
BLE info device has bad rssi: %d, %@
-[SDProxHandoffAgent _bleInfoDeviceFound:]
BLE info device found: %@
-[SDProxHandoffAgent _bleInfoDeviceLost:]
BLE info device lost: %@
-[SDProxHandoffAgent _bleDeviceNearbyEnter:]
Nearby enter (CL.MR): %@
-[SDProxHandoffAgent _bleDeviceNearbyExit:]
Nearby exit (CL.MR): %@
-[SDProxHandoffAgent _bleUpdateMappingAndNearbyCoalesced]
Processing unmapped BLE info devices
-[SDProxHandoffAgent _bleUpdateMappingWithDevice:]
Unable to map BLE info %@
Invalid candidate model? %@, %@
%@ activity level: %s
Mapped %@, CL
Restarting BLE action scan timer
-[SDProxHandoffAgent _clinkEnsureStarted]
CLink start
-[SDProxHandoffAgent _clinkEnsureStarted]_block_invoke_2
Clink device changed %#{flags} %@
v20@?0@"RPCompanionLinkDevice"8I16
-[SDProxHandoffAgent _clinkEnsureStarted]_block_invoke
Clink device found %@
v16@?0@"RPCompanionLinkDevice"8
Clink device lost %@
CLink activated
### CLink activate failed: %@
Registering for call transfer messages
-[SDProxHandoffAgent _clinkEnsureStopped]
CLink stop
-[SDProxHandoffAgent proximityClientStart:]
Proximity client start
-[SDProxHandoffAgent proximityClientStop:]
Proximity client stop
-[SDProxHandoffAgent proximityClientUpdate:]_block_invoke
### Unrecognized client: %@
Proximity client update: %s, cur=%s
-[SDProxHandoffAgent proximityClient:dismissContentForDevice:]
### Proximity client dismiss without UI Device?
Proximity client dismiss %@
-[SDProxHandoffAgent proximityClient:provideContent:forDevice:force:]
### Unexpected content for %@: %@
Proximity client content provided error: %@
Proximity client content for: %@, force: %s: %@
-[SDProxHandoffAgent proximityClient:suppressDevice:]
Suppressing %@ per client request
Suppressed device maps to %@, resetting its state
Suppressed device matches current UI Device. Resetting UI Device.
-[SDProxHandoffAgent proximityClient:stopSuppressingDevice:]
Stop suppressing %@ per client request
-[SDProxHandoffAgent proximityClient:updateContent:forDevice:]
Proximity client update %@
Proximity client content updated with error: %@
Updating with medium bubble variant
-[SDProxHandoffAgent proximityClientRequestScannerTimerReset:]
Proximity client request scanner timer reset
Timer not valid, not activating
-[SDProxHandoffAgent _proximityClientDeviceEnteredImmediate:]
ProxClient deviceEnteredImmediate %@
-[SDProxHandoffAgent _proximityClientDeviceExitedImmediate:]
ProxClient deviceExitedImmediate %@
-[SDProxHandoffAgent _proximityClientDeviceEnteredNearby:]
ProxClient deviceEnteredNearby %@
-[SDProxHandoffAgent _proximityClientDeviceExitedNearby:]
ProxClient deviceExitedNearby %@
-[SDProxHandoffAgent _proximityClientDeviceWasDismissed:]
ProxClient deviceWasDismissed %@
-[SDProxHandoffAgent _proximityClientDeviceWasDismissed:reason:]
ProxClient deviceWasDismissed %@, %@
-[SDProxHandoffAgent _proximityClientDeviceWasSelected:]
ProxClient deviceWasSelected %@
-[SDProxHandoffAgent _proximityClientDeviceWillTrigger:]
ProxClient deviceWillTrigger %@
-[SDProxHandoffAgent _proximityClientDeviceDidUnTrigger:]
ProxClient deviceDidUntrigger %@
-[SDProxHandoffAgent _proximityClientDeviceUpdated:]
Updating client with %@
-[SDProxHandoffAgent _proximityClientSeedInitialDevices:]_block_invoke
Nearby enter seed value (MediaRemote ID): %@
-[SDProxHandoffAgent _proximityClientSeedWillTriggerDeviceIfNeeded:]_block_invoke_2
Triggered device seed value (MediaRemote ID): %@
v32@?0@"NSUUID"8@"SFCombinedDevice"16^B24
-[SDProxHandoffAgent _serviceEnsureStarted]
BLE action service start
-[SDProxHandoffAgent _serviceEnsureStarted]_block_invoke
### BLE action service activate error: %@
BLE action service started
-[SDProxHandoffAgent _serviceEnsureStopped]
BLE action service stop
-[SDProxHandoffAgent _serviceTimeoutActivate]
BLE action service timeout activate
-[SDProxHandoffAgent _serviceTimeoutInvalidate]
BLE action service timeout invalidate
-[SDProxHandoffAgent _serviceTimeoutFired]
BLE action service timeout fired
-[SDProxHandoffAgent _throttleEventDidOccur]
Throttle event did occur
-[SDProxHandoffAgent _throttleEventSet:]
Throttle event set: %d
-[SDProxHandoffAgent _throttleEventsReset]
Throttle event reset
-[SDProxHandoffAgent _throttleMediumReset]
Throttle medium reset
-[SDProxHandoffAgent _throttleMediumSetTicks:]
Throttle medium set ticks: %d
-[SDProxHandoffAgent _proxiedNotificationDidDismiss:reason:]
Notification did dismiss %@, %@
### Unrecognized UI ID: %@
com.apple.sharing.HomePodHandoff.NotificationDidDismiss
notificationDurationSecs
pendingContentSecs
reason
reasonStr
-[SDProxHandoffAgent _proxiedNotificationWasTapped:]
Notification was tapped %@
### Unable to determine closest device
Closest device: %@
com.apple.sharing.HomePodHandoff.NotificationWasTapped
onCall
-[SDProxHandoffAgent _uiDismissWhenReady:reason:]
Dismiss notification after %f
Notification only displayed for %f, delaying dismiss
-[SDProxHandoffAgent _uiStopIfNeeded:reason:]
Presented UI Stop: %@, %@
Deleted %@: %s %@
com.apple.sharing.HomePodHandoff.UIStop
deletedAttachment
-[SDProxHandoffAgent _routeForDevice:]
### Cannot find route without a BLE device.
-[SDProxHandoffAgent _shouldMediumPromptWithInfo:]
Shouldn't prompt medium, disabled via pref
Shouldn't prompt medium, maximum trigger events reached
Shouldn't prompt medium, recently triggered
-[SDProxHandoffAgent callTransferInfoForDevice:]
Generating call transfer notification info
HOMEPOD_HANDOFF_SUBTITLE_TRANSFERRING
-[SDProxHandoffAgent mediaTransferInfoFromInfo:]
No interaction behavior provided, using default (prompt)
HOMEPOD_HANDOFF_SUBTITLE_TRANSFERRING_IPOD
HOMEPOD_HANDOFF_SUBTITLE_TRANSFERRING_IPHONE
HOMEPOD_HANDOFF_SUBTITLE_TRANSFERRING_GENERIC
-[SDProxHandoffAgent testUI:]
### Test UI not supported on current platform.
NotifPending
NotifPendingContent
NotifReady
NotifPresented
NotifDismissed
TransferPending
TransferReady
TransferInProgress
PendingDismiss
TransferDone
InProgress
Skip
Succeeded
Canceled
audioaccessory
ipod
com.apple.sharingd.RapportChanged
v16@?0@"RPPerson"8
%#{flags}
v20@?0@"RPPerson"8I16
v32@?0@"RPDevice"8Q16^B24
%@: %{ptr}
iPhone8,4
iPhoneSE
iPhone10,3
iPhone10,6
iPhoneX
iPhone8
iPadPro
iPad2,5
iPad2,6
iPad2,7
iPad4,4
iPad4,5
iPad4,6
iPad4,7
iPad4,8
iPad4,9
iPad5,1
iPad5,2
iPad11,1
iPad11,2
iPadmini
MacPro
MacPro6,1
MacPro2
MacPro1
MacPro3
MacBookPro
MacBookAir
MacBook
iMacPro
Macmini
MacBook Pro
MacBook Air
Mac Pro
imageData
finalMessage
com.apple.finder
com.apple.sharingd.AirDropUnpublished
entered
exited
Contacts Only
Everyone
AirDropServer
Discoverable mode:                   %@
Screen On:                           %s
Discoverable by contacts only:       %s
Discoverable by everyone:            %s
Unlocked once:                       %s
Port Number:                         %@
HTTP Server:                         %s
HTTP Server up time:                 %ll{dur}
HTTP Server connections:             %d
SDAirDropServer
com.apple.iBooks
StreamMessageVersion
StreamMessageType
com.apple.Maps
SFAirDropActivitySubjectMapsLinkType
MAPS_LINK_CURRENT_LOCATION
MAPS_LINK_DIRECTIONS
MAPS_LINK_DROPPED_PIN
MAPS_LINK_POI
MAPS_LINK
NOTE
+[SDAirDropHandlerNotes extractNotesURLs:]
GENERIC_LINK
<%@: %p, deviceUniqueID:%@, advertisementPayload:%@, options:%@, deviceName:%@, deviceModelIdentifier:%@>
timeSinceLastRequest
errorDomain
com.apple.sharing.continuity.activity.encryption.keyrequest
oldKeyPresent
oldKeyCounter
newKeyCounter
timeBetweenKeyCreations
com.apple.sharing.continuity.activity.encryption.replacementkey
UAUserActivityIsHighPriorityOptionKey
com.apple.findmy
FIND_MY_FRIENDS_TITLE
com.apple.private.sharing.unlock-manager
This process does not have permission to perform this action
v24@?0@"NSSet"8@"NSError"16
SFUnlockErrorDomian
-[SDAirDropReceiveManager listener:didReceiveNewRequest:]
stepData
pairingID
SDAutoUnlockBypassMetricLog
SDAutoUnlockShowScreenLockError
au-setup-response-timeout
au-setup-response-timeout-percentage
au-setup-message-timeout
au-setup-message-timeout-percentage
com.apple.sharing.AutoUnlock.Setup
deviceModel
companionModel
deviceLocked
keyRequestXTime
tokenXTime
errorType
watchExistedInUnlockList
timeIntervalSinceLastWatch
upsell
responseTimeout
responseServer
messageTimeout
messageServer
setupRetry
macOldLTKSyncStatus
macNewLTKSyncStatus
watchOldLTKSyncStatus
watchNewLTKSyncStatus
watchBuildVersion
watchOSVersion
receivedSetupACK
receivedTokenACK
%02ld-%02ld-%02ld %02ld:%02ld:%02ld %@
AUConnectionCacheEnabled
allowAutoUnlock
com.apple.applicationaccess
UnknownSleepType
UNLOCK_WATCH_STAINLESS_STEEL
UNLOCK_WATCH_YELLOW_GOLD
UNLOCK_WATCH_ROSE_GOLD
UNLOCK_WATCH_CERAMIC
UNLOCK_WATCH_ALUMINUM
UNLOCK_WATCH_VIPER
AUAlwaysShowModelDescription
(%@%@%@)
UNLOCK_WATCH_COMPACT_SIZE
UNLOCK_WATCH_REGULAR_SIZE
UNLOCK_WATCH_394H_SIZE
UNLOCK_WATCH_448H_SIZE
UNLOCK_WATCH_430H_SIZE
Localizable-N187
UNLOCK_WATCH_484H_SIZE
Watch5,
UNLOCK_WATCH_SERIES_FIVE
UNLOCK_WATCH_SE
Watch6,
UNLOCK_WATCH_SERIES_SIX
UNLOCK_WATCH_SERIES_SEVEN
UNLOCK_WATCH_SERIES_ONE
UNLOCK_WATCH_SERIES_TWO
UNLOCK_WATCH_SERIES_THREE
UNLOCK_WATCH_SERIES_FOUR
Series
Watch3,1
Watch3,2
Watch3,3
Watch3,4
Watch4,1
Watch4,2
Watch4,3
Watch4,4
Watch5,1
Watch5,2
Watch5,3
Watch5,4
Watch5,9
Watch5,10
Watch5,11
Watch5,12
Watch6,1
Watch6,2
Watch6,3
Watch6,4
Watch6,6
Watch6,8
Watch6,7
Watch6,9
<SDAutoUnlockPeer: %p, deviceID = %@, state = %@>
Not Registered
Registering
Registered
Armed
Not Registered (Key Locked)
com.apple.mobilecal
CALENDAR
/private/var/Managed Preferences/mobile/com.apple.Sharing
AlternateService
BrowseAllInterfaces
EnableDemoMode
EnableDirectIP
EnableSimulator
PreferSMBFileSharing
_afpovertcp._tcp.
_smb._tcp.
_rfb._tcp.
_http._tcp.
_adisk._tcp.
_odisk._tcp.
_airdrop._tcp.
_airdrop-alt._tcp.
_airdrop-%@._tcp.
_continuity._tcp.
_device-info._tcp.
_file._tcp.
_netbios._udp.
_workgroups._udp.
_nwnode._tcp.
local
/System/Library/PrivateFrameworks/Sharing.framework
Localizable
;:@?/
%@://
:%ld
%@=%@
true
%02d:%02d:%02d.%03d
demo
Proxy trigger failed
useToken
authPrompt
supportsConfirmationACK
appName
phoneUnlockDate
skipMotionCheck
isAuthenticatingForSiri
SharingXPCHelperContactIcon for contact %{private}@ %@ iconData at index %llu
does not have
com.apple.VoiceMemos
VOICE_MEMO
PLAYGROUND
com.apple.Passbook
PASS
token
pairedDeviceID
com.apple.MobileAddressBook
CONTACT
AutoUnlockTransferStore
-[SDAutoUnlockIconTransferStore storeCachedImageForHash:device:appName:]
Storing cached image state: %@, device: %@, hash: %@
AUIconTransferStore
-[SDAutoUnlockIconTransferStore imageCachedForHash:device:]
Nothing stored in device store yet
### Device store isn't a dictionary
Looking for transfer state for device %@ hash: %@ app: %@, store %@
com.apple.sharingd.WorkgroupsChanged
SDAppleIDDatabaseManager
-[SDAppleIDDatabaseManager _readPrefs]
Reading Apple ID account information from %@
AppleIDAccount
Apple ID account retrieved from defaults: %@
### Failed to unarchive %@ pref value with error %@
AppleIDAgentMetaInfo
Apple ID agent meta info retrieved from defaults: %@
PersonInfoCache
%d cached person info values retrieved from defaults
LastConnectAttempt
LastSuccessfulConnect
AccountRequiresUserAction
-[SDAppleIDDatabaseManager _updateAccountInfoPrefs]
Updated Apple ID account in the local database
-[SDAppleIDDatabaseManager _updateMetaInfoPrefs]
Updated meta info in the local database
-[SDAppleIDDatabaseManager _updatePersonInfoCachePrefs]
Updated person info cache in the local database
-[SDAppleIDDatabaseManager _addAppleID:]
Added account for Apple ID %@ (%@)
updated existing
-[SDAppleIDDatabaseManager _removeAppleID:]
Removed account for Apple ID %@ 
-[SDAppleIDDatabaseManager _addPersonInfoToCache:]
Added person info for %@ to cache
-[SDAppleIDDatabaseManager cachedPersonInfoWithEmailOrPhone:]
Cached person info object for %@ is available
-[SDAppleIDDatabaseManager _setIdentity:forAppleID:]
### No account for %@
%s identity object for %@. New identity object is %@
Replaced
Added
Updated AltDSDID for %@ to %@
-[SDAppleIDDatabaseManager _setIdentityLinkedToCurrentUser:forAppleID:]
### No identity for %@
-[SDAppleIDDatabaseManager _setCertificateToken:privateKeyPersistentReference:forAppleID:]
Set Certificate Token %@ for %@
Set Certificate Token Creation Date %@
Set Private Key Persistent Reference %p for %@
-[SDAppleIDDatabaseManager _setContactInfo:validationRecord:forAppleID:]
Set Contact Info %@ for %@
Set Validation Record %@ for %@
com.apple.sharingd.nsxpc
SDRemoteInteractionAgent
-- SDRemoteInteractionAgent --
Server: %@
Client: %@, %ld NeedsKeyboard, %ld RSSI threshold
Sessions: %ld
    Found device: %@
-[SDRemoteInteractionAgent activate]_block_invoke
-[SDRemoteInteractionAgent invalidate]_block_invoke
-[SDRemoteInteractionAgent prefsChanged]
Client enabled: %s -> %s
riCloudPairedOnly
Cloud paired only: %s -> %s
riServerEnabled
Server enabled: %s -> %s
RSSI threshold: %ld -> %ld
-[SDRemoteInteractionAgent setPreventNotifications:]_block_invoke
-[SDRemoteInteractionAgent _commonEnsureStarted]
Subscribing to IDS notifications
-[SDRemoteInteractionAgent _commonEnsureStopped]
Unsubscribing to IDS notifications
-[SDRemoteInteractionAgent _commonIDSChanged:]
IDS changed
-[SDRemoteInteractionAgent _serverEnsureStarted]
Control service activate
v28@?0@"SFSession"8I16@"NSDictionary"20
v36@?0@"SFSession"8I16@"NSDictionary"20@?<v@?I@"NSError"@"NSDictionary">28
-[SDRemoteInteractionAgent _serverEnsureStarted]_block_invoke
Control service activated
### Control service activate failed: %@
-[SDRemoteInteractionAgent _legacy_serverHandleEvent:]
### Ignoring event from peer with no identifier
### Ignoring event from unpaired peer %@
Received event has RTI payload
### Bad event opcode: %#m
Received start session %@ from %@
### Unknown event opcode: %d
-[SDRemoteInteractionAgent _legacy_serverHandleRequest:]
### Ignoring request from unpaired peer %@
### Bad request opcode: %#m
### Unknown request opcode: %d
UserAssignedDeviceName
name
-[SDRemoteInteractionAgent _sendRTIPayload:]
### Send payload without data?
### Failed to deserialize payload?
Sending RTI payloads to peers (%u)
-[SDRemoteInteractionAgent handleEventWithData:]
RTI Client event fired (%@)
-[SDRemoteInteractionAgent handleInputDidBeginWithFlags:sessionInfo:]
RTI did BEGIN
-[SDRemoteInteractionAgent handleInputDidEndWithFlags:sessionInfo:]
RTI did END
Stopping advertising timer
-[SDRemoteInteractionAgent advertisingTimerFired]
Advertising timer fired, simulating end event
com.apple.sharing.ContinuityKeyboardRTI
timeout
-[SDRemoteInteractionAgent advertisingTimerStart]
Starting advertising timer
-[SDRemoteInteractionAgent sessionStart:]
Session start
-[SDRemoteInteractionAgent sessionStart:]_block_invoke
### No peer device?
-[SDRemoteInteractionAgent sessionStop:]
Session stop
-[SDRemoteInteractionAgent _clientEnsureStarted]
-[SDRemoteInteractionAgent _clientEnsureStarted]_block_invoke
BLE RIA Found: %@
BLE RIA Lost: %@
-[SDRemoteInteractionAgent _clientEnsureStarted]_block_invoke_2
BLE RIA Changed: %@, %#{flags}
Discovery started
### Discovery start failed: %@
CompanionLink start
### ClinkClient interrupted
-[SDRemoteInteractionAgent _clientEnsureStarted]_block_invoke_3
ClinkClient invalidated
### CompanionLink start failed: %@
CompanionLink started
-[SDRemoteInteractionAgent _clientEnsureStopped]
-[SDRemoteInteractionAgent _clientClinkDeviceFound:]
Clink Found: %@
-[SDRemoteInteractionAgent _clientClinkDeviceLost:]
Clink Lost: %@
-[SDRemoteInteractionAgent _clientClinkDeviceChanged:]
Clink Changed: %@
-[SDRemoteInteractionAgent _clientDeviceFound:]
### Ignoring unpaired device %@
Ignoring far away NeedsKeyboard: %@
Device NeedsKeyboard new: %@
-[SDRemoteInteractionAgent _clientDeviceLost:]
Device NeedsKeyboard lost: %@
-[SDRemoteInteractionAgent _clientDeviceLockStatusChanged]_block_invoke
-[SDRemoteInteractionAgent _clientShouldStart]
Client should start %s: tvs: %s, watches: %s, enabled: %s
-[SDRemoteInteractionAgent clientNotificationPostIfNeededForDevice:]
### Cannot post notification without device model
### Unrecognized device model: %@
-[SDRemoteInteractionAgent clientNotificationRemoveForDevice:]
### Cannot remove notification without device model
-[SDRemoteInteractionAgent clientNotificationUpdateForDevice:rtiData:]
### Cannot update notification without device model
-[SDRemoteInteractionAgent clientNotificationUpdateForDevice:info:]
-[SDRemoteInteractionAgent clientUserDidTapNotification:]
### Launching TV Remote not supported on current platform
-[SDRemoteInteractionAgent testKeyboardPost:]
Testing keyboard post
-autofill
-[SDRemoteInteractionAgent testKeyboardPostThenUpdate]
Testing keyboard post then update
postAndUpdate
-[SDRemoteInteractionAgent testKeyboardRemove]
Testing keyboard remove
-[SDRemoteInteractionAgent testKeyboardUpdate]
Testing keyboard update
Continuity Keyboard
SDSharedRemoteTextInputClient
-[SDSharedRemoteTextInputClient _ensureStarted]
RTI client start
v24@?0Q8@"NSDictionary"16
-[SDSharedRemoteTextInputClient invalidate]
RTI client stop
-[SDSharedRemoteTextInputClient addDelegate:]
Adding delegate: %{ptr}
-[SDSharedRemoteTextInputClient removeDelegate:]
Removing delegate: %{ptr}
-[SDSharedRemoteTextInputClient _rtiHandleEventWithData:]
RTI: event with data (%@)
v24@?0@"NSObject<SDSharedRemoteTextInputDelegate>"8^B16
-[SDSharedRemoteTextInputClient _rtiHandleInputDidBeginWithFlags:sessionInfo:]
-[SDSharedRemoteTextInputClient _rtiHandleInputDidEndWithFlags:sessionInfo:]
-[SDSharedRemoteTextInputClient _logEvent:stopClock:]
Stopping session clock: %ld ms, event: %@
com.apple.sharing.RTI
durationMS
event
-[SDSharedRemoteTextInputClient _startClockWithResetIfNeeded]
Starting session clock
-[SDSharedRemoteTextInputClient _startClockWithResetIfNeeded]_block_invoke
Overrun timer fired, running longer than 1 hr? Start time: %@
Begin
Invalidate
UnexpectedBegin
Overrun
com.apple.sharingd.ODisksChanged
com.apple.sharingd.BonjourChanged
com.apple.sharingd.WindowsChanged
com.apple.sharingd.AirDropChanged
com.apple.sharingd.AirDropStatusChanged
NeighborhoodName
Count
Low Power
One Or None
ServerBrowser
--------------
Mode:                                %@
Bonjour Browsers:
Domain:                              %@
AirDrop Browsers:
Windows Browsers:
ODisk Browsers:
GENERIC_FILE_WITH_TITLE
GENERIC_FILE
ACCEPT_BUTTON_TITLE
com.apple.
com.apple.TapToRadar
com.apple.DocumentsApp
-[SDAirDropHandlerGenericFiles openResourceOperation:didFinishCopyingResource:]
-[SDAirDropHandlerGenericFiles openResourceOperationDidComplete:]
-[SDAirDropHandlerGenericFiles openResourceOperation:didFailWithError:]
com.apple.coreservices.appleidauthagent
createCertificate
fetchCertificate
SDAppleIDServerTask
-- SDAppleIDServerTask --
-[SDAppleIDServerTask _isTaskInfoValid]
### Unhandled type %d
-[SDAppleIDServerTask _urlWithCompletion:]
Getting a url from AuthKit url bag...
-[SDAppleIDServerTask _urlWithCompletion:]_block_invoke
URL for task type %@: %@
Failed to get url with error %#m
-[SDAppleIDServerTask _handleURLIsAvailable:error:completion:]
JSON Serialization of the URL Request body failed with error %@
v20@?0@"NSURL"8i16
-[SDAppleIDServerTask _urlRequestWithCompletion:]
Failed to create NSURLRequest with error %#m
-[SDAppleIDServerTask _activate]
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
-[SDAppleIDServerTask _handleURLRequestIsAvailable]
Sending %@ server task
HTTP Headers: %@
Body: %@
v20@?0@"NSURLRequest"8i16
-[SDAppleIDServerTask _handleServerError:withStatusCode:nextSuggestedAttemptDelay:]
### Server error %d: status code %d expected, but %d received
### Server error %d means server bug. Report to server folks
### Unhandled server error: %d
### Status code %d, server error code %d. User authentication required to proceed
### Unhandled server response status code: %d. Server error code: %d
-[SDAppleIDServerTask _invalidate]
Invalidate %@ server task
-[SDAppleIDServerTask _handleTaskResponse:withData:error:]
### %@ server task failed with error %#m
### No response object
Received %@ server task response with status %ld
### No data object
### No response JSON. Response status code %d, response %@
Response info: %@
responseCode
responseMessage
nextSuggestedAttemptDelay
### Response status code: %d, error %d (%@), suggested retry delay: %d
com.apple.sharing.AIAServerTaskResponse
httpStatusCode
errorCode
idmsEnv
altDsId
-[SDAppleIDServerTask _parseCreateCertificateResponse:error:]
### No altDSID
certificate
### No certificate info
### No certificate token 
delay
Received Create Certificate response: altDSID=%@, certToken=%@, suggestedDelay=%@
-[SDAppleIDServerTask _parseFetchCertificateResponse:error:]
### No certificate token
status
expiryDate
### No certificate expiration date. Will set to 6 months from now.
### Failed to create expiration date
### No certificate PEM
### No certificate serial number
### Certificate status is pending, but delay not provided.
intermediateCaCertificate
### No intermediate certificate PEM
matches
-[SDAppleIDServerTask _parseFindPersonResponse:error:]
### No matches array
### No matches found
### Matches array has more than 1 object
certCn
AccountIdentifier
Account identifier not in match info dictionary returned by server
AltDSID not in match info dictionary returned by server
certStatus
Certificate status not in match info dictionary returned by server
matched
Matched
Matched criterion not in match info dictionary returned by server
Matched value not in match info dictionary returned by server
ValidUntil
-[SDAppleIDServerTask _parseGetMyInfoResponse:error:]
Received Get My Info Certificate Info: token=%@, expirationDate=%@, serial number=%@, status=%@
firstName
lastName
msUntilNextCheck
validatedEmails
validatedPhones
aidvr
serverAidvrId
Received Get My Info response: AltDSID=%@, Firstname=%{mask}, LastName=%{mask}, Emails=%~@, Phones=%~@, Validation Record: identifier=%@,version=%@, msUntilNextCheck=%d
Validation Record Data (base64)=%@
FirstName
LastName
ValidatedEmails
ValidatedPhones
ValidationRecordData
ValidationRecordDataID
ValidationRecordNextCheckDate
Version
-[SDAppleIDServerTask _parseServerResponse:error:]
-[SDAppleIDServerTask _sendRequest]_block_invoke
### Get GS token failed with error %#m
v28@?0@"NSString"8@"NSString"16i24
Create Certificate
Fetch Certificate
Get My Info
Find Person
issued
pending
failed
revoked
expired
SDConnectionManagerIdentifier
Missing client proxy
Missing identifier
v24@?0@"NSFileHandle"8@"NSError"16
longTermKey
ltkHash
remoteNeedsLTK
com.apple.sharingd.adjustment-queue
com.apple.sharingd.compression-queue
payload
messageType
senderID
useProxy
awdlCacheID
aksSessionID
encryptedPayload
authTag
nonce
secret
CREDENTIAL
SDAutoUnlockAKSManagerWatchLTKsUpdatedNotification
SDAutoUnlockAKSManagerCompanionViewSyncing
SDAutoUnlockAKSManagerCompanionNeedsUnlock
SDAutoUnlockAKSManagerCompanionCurrentlySyncing
A70C5EAF-F24F-48A7-B834-F5297000C7A2
com.apple.continuity.auto-unlock.sync
com.apple.continuity.auto-unlock.localkeys
com.apple.continuity.auto-unlock.rangingkeys
com.apple.continuity.auto-unlock.attested
com.apple.continuity.unlock
ltk.plist
pairing-records.plist
Companion ID
Pairing ID
Remote LTKs
LTK Data
LTK ID
LTK Hash
LTK Mod Date
Modern LTK Data
Modern LTK Hash
Modern LTK Mod Date
Attested LTK Data
AutoUnlockDevicesMissingSessionKey
companion-paired-devices.plist
watch-companion-mapping.plist
Local Unique ID: %@
Local LTK: %@
Local LTK UUID: %@
Keychain UUID: %@
Local LTK Info: %@
View Syncing: %@
Device First Unlocked: %@
Keychain Devices: %@
Remote LTK File Path: %@
Remote LTKs
Device ID: %@, Remote LTK ID: %@, ASK Peer State: %@, Remote LTK: %@
q24@?0@"NSString"8@"NSString"16
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NSString"8@"NSString"16^B24
%@: %@
AutoUnlockSalt
AutoUnlockInfo
sessionTime
com.apple.sharing.Airdrop.CoalescedNodes.Discovery
contactLevel
foundBonjour
foundRapport
rpFlagMyiCloud
rpFlagFriend
rpFlagFamily
rpFlagSharedHome
rpFlagStranger
com.apple.itunesu
ITUNES_STORE_LINK_ITUNES_U
SDAppleIDURLResponse
-[SDAppleIDURLResponse initWithHTTPUTLResponse:data:]
### JSON -> Data failed with error %@
### JSON object not a dictionary
PROFILE
unlockEnabled
passcodeEnabled
kinds=%##@ realName=%@ cnId=%@ aTag=%@ id=%@ isRap=%d isMe=%d
%##@
DisabledKeyRequestBudget
DisableContinuityRapportPayloads
com.apple.handoff.encryption-key-request
v32@?0@"NSDictionary"8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">24
com.apple.handoff.payload-request
com.apple.private.alloy.continuity.encryption
com.apple.private.alloy.continuity.activity
Request
EncryptionKey
v16@?0@"SDActivityRequestRecord"8
Request timed out
Budget Restrictions Disabled: %@
Activity Service: %@, devices: 
@unionOfObjects.uniqueIDOverride
Encryption Service: %@, devices: %@
Unique ID To Key Reply Date: %@
Message Identifier To KeyRequest Records: %@
Message Identifier To Request Records: %@
Message Identifier To Reply Records: %@
EncryptionKeyRequests
rKeyPreviousIdentifier
rKeyDataRepresentation
rLocalOnly
idsDeviceIdentifier == %@
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
Failed to find device to request encryption key from
deviceIdentifier
advertisementPayload
activityCommand
activityPayload
rAdvPayload
rClientCommand
rIdentifier
Failed to find device to request activity payload from
senderIDS
uniqueIDOverride == %@
Rapport
v16@?0@"NSDictionary"8
IDS device not found
v24@?0@"NSDictionary"8@"SDActivityPayloadReplyRecord"16
rActPayload
rActPayloadErrorDomain
rActPayloadErrorCode
Rapport (%s)
Unknown Error
version
_cat
rapportTransport
success
wasRapport
isHSA2Enabled
ContinuityRapportDisableBLEDiscovery
ContinuityRapportForceL2CAP
-[SDActivityPayloadManager createRapportClientWithDestinationDevice:]
rAdvData
SDActivityPayloadManager.m
Demo mode enabled, yet cannot find any destinations on service
final 
v16@?0@"SFActivityAdvertisement"8
BTPipe
AWDL
WiFi
Enet
Direct
Cloud
Loopback
Pages
com.apple.Pages
Numbers
com.apple.Numbers
Keynote
com.apple.Keynote
IWORK_LINK_WITH_TITLE
IWORK_LINK
SDAppleIDIdentityRequest
-[SDAppleIDIdentityRequest _activate]
### Already activated
### Object invalidated
Certificate token and private key reference are available, skip create request
-[SDAppleIDIdentityRequest _invalidate]
Invalidate
-[SDAppleIDIdentityRequest _handleCertificateCreateResponseError:]
### Create Certificate request failed with error %@
-[SDAppleIDIdentityRequest _handleCertificateCreateResponseWithInfo:error:]
Certificate Create Response: %@
AltDSID
CertificateToken
Delay
-[SDAppleIDIdentityRequest _handleCertificateFetchResponseError:]
### Fetch Certificate request failed with error %{error}
-[SDAppleIDIdentityRequest _handleCertificateFetchResponseWithInfo:error:]
### Certificate status %d/%@
CertificateExpirationDate
CertificatePEM
IntermediateCertificate
### Certificate status %d/%@ isn't handled yet
-[SDAppleIDIdentityRequest _handleCertificate:intermediateCertificate:withTrustResult:error:]
Received certificates are trusted.
### Failed to get expiration date from certificate
### Large certificate expiration date discrepancy. Certificate=%@; Response=%@
### Failed to get expiration date from intermediate certificate
### Intermediate certificate expiration date warning: expiration date: %@, time interval since now: %lf
com.apple.idms.appleid.
### Common name %@ has unexpected prefix
Apple ID authorization certificate for %@
Added certificate for %@ to keychain
Apple ID authorization intermediate certificate
Added intermediate certificate for %@ to keychain
-[SDAppleIDIdentityRequest _handleCreateTimerFired]
Create timer fired
-[SDAppleIDIdentityRequest _handleFetchTimerFired]
Fetch timer fired
-[SDAppleIDIdentityRequest _scheduleCreateCertificateTaskWithDelay:]
### Create certificate task already scheduled
Start create certificate delay timer for %ld seconds
-[SDAppleIDIdentityRequest _scheduleFetchCertificateTaskWithDelay:]
### Fetch certificate task already scheduled
Start fetch certificate delay timer for %ld seconds
-[SDAppleIDIdentityRequest _scheduleCreateRetryWithDelay:]
Scheduling create retry %d with delay %u seconds.
-[SDAppleIDIdentityRequest _scheduleFetchRetryWithDelay:]
Scheduling fetch retry %d with delay %u seconds.
com.apple.AppStore
com.apple.TVAppStore
VIEW_BUTTON_TITLE
APP_LINK_WITH_TITLE
APP_LINK
com.apple.family
FAMILY_INVITATION_TITLE
ICLOUD_FAMILY
SHOW_INVITATION_BUTTON_TITLE
SFNodeError
Code
Domain
UserInfo
com.apple.private.airdrop.discovery
%#{pid}
Children
Sidebar
Node
Protocol
Error
Events
Operation
Results
Function
Create
Kind
OpenNode
Flags
CloseNode
AddNode
RemoveNode
SetMode
Mode
SetOptions
Options
Resume
SetProperty
Name
Value
Object
Browser
v16@?0@"NSObject<OS_xpc_object>"8
Device Information: %@
SharingDaemon State End
SharingDaemon State
highPriorityQueue
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
com.apple.sharingd.daemon.started
com.apple.private.airdrop.settings
NewOperation
AskUser
WaitForAnswer
Cancelled
Started
Preprocess
Progress
Postprocess
Finished
ErrorOccured
Connecting
Information
Conflict
Blocked
Converting
ServiceRef
QueryTimer
GateAirDropDiscovery
SDAirDropPeerMetric
%@.%@%@.%d
verifiable
unverifiable
BonjourBrowser
One or None
Failed to send step data
%@%@
IMG_%04u
file count zero
destination not writable
%@.bom
indexbom
copyResources
sourceIsAppSandboxed
copyExtendedAttributes
createCPIO
compression
archiving
createPKZip
zlibCompressionLevel
sequesterResources
compressCPIO
outputStream
extractPKZip
extractCPIO
auto
inputStream
SDXPCServer
?.*:level=chatty,.*:flags=public
-[SDXPCServer _activate]
com.apple.SharingServices
com.apple.Sharing.prefsChanged
-[SDXPCServer _activate]_block_invoke
Prefs changed
-[SDXPCServer _invalidate]
Stopped
-[SDXPCServer listener:shouldAcceptNewConnection:]
XPC connection started from %#{pid}
### Unknown XPC listener
-- XPC connections --
, Assertions: 
%s%@ (%ld total)
, %@
, Note: %@
, PreventExit: '%@'
-[SDXPCServer _stateDump]
State dump: SharingServices
SharingServices State
SharingServices State End
-[SDXPCConnection connectionInvalidated]
XPC connection invalidated from %#{pid}
-[SDXPCConnection _entitled:state:label:]
### %#{pid} lacks %''@ entitlement to use %@
com.apple.sharing.Services
-[SDXPCConnection _entitledService:state:]
### %#{pid} lacks %''@ entitlement for service %''@
AutoFillHelperActivate
-[SDXPCConnection autoFillHelperActivate:completion:]
com.apple.sharing.RemoteInteractionSession
v20@?0B8@?<v@?@"NSError">12
v16@?0I8i12
AutoFillHelperTryPIN
-[SDXPCConnection autoFillHelperDidPickUsername:password:error:]
### %@ failed: %#m
-[SDXPCConnection autoFillHelperTryPIN:]
%@, PIN: %@
AutoFillHelperNotificationDidActivate
-[SDXPCConnection autoFillHelperUserNotificationDidActivate:]
%@, %@
AutoFillHelperNotificationDidDismiss
-[SDXPCConnection autoFillHelperUserNotificationDidDismiss:]
com.apple.sharing.Client
ActivateAssertion
-[SDXPCConnection activateAssertionWithIdentifier:]
Ignoring duplicate assertion '%@'
Activate assertion '%@': %ld -> %ld
com.apple.sharing.PreventAppleCardActivation
com.apple.sharing.DuetSync
com.apple.sharing.PreventContinuityKeyboard
com.apple.sharing.PreventProxCards
com.apple.sharing.PreventRepair
com.apple.sharing.EnhancedDiscovery
Ignoring add unknown assertion '%@'
-[SDXPCConnection _invalidateAssertions]
Invalidate assertion '%@': %ld -> %ld
Ignoring remove unknown assertion '%@'
ActivityState
AppleIDInfo
-[SDXPCConnection appleIDInfoWithCompletion:]
### No appleID?
### No record data?
FindContact
Missing entitlement
SharingFindContact
Contact is blocked
@icloud.com
@gmail.com
@googlemail.com
Contact not found
Not supported on this platform
-[SDXPCConnection getDeviceAssets:completion:]
### GetDeviceAssets failed: %{error}
SharingGetPeopleSuggestions
-[SDXPCConnection getPeopleSuggestions:completion:]
GetPeopleSuggestions start: max %d
-[SDXPCConnection _getPeopleInfo:completion:]
GetPeopleInfo start: contacts %d
### GetPeopleInfo failed: contacts, %{error}
GetPeopleInfo progress: %d of %d, handles %d, blocked %d, notFound %d
GetPeopleInfo: requested %d, blocked %d, not found %d
-[SDXPCConnection _getPeopleSuggestions:completion:]
GetPeopleSuggestions finish: no suggestions
### GetPeopleSuggestions failed: contacts, %{error}
GetPeopleSuggestions skipping blocked contact: %@
GetPeopleSuggestions finish: max %d, suggestions %d, contactIDs %d, contacts %d, results %d
HashManagerControl
Missing command
hmrebuild
hmdump
airdrop-hash-db.txt
Failed to create destination URL
Failed to perform hash database dump
filePath
<unknown>
Unknown command
OpenSetupURL
-[SDXPCConnection preheatXPCConnection]
preheatXPCConnection
PreventExitForLocale
ReenableProxCardType
-[SDXPCConnection reenableProxCardType:completion:]
Ignored re-enable of unsupported prox card type %s
RepairDevice
Missing entitlement '%@' for RepairDevice
RetriggerProximityPairing
RetriggerProximitySetup
SetAudioRoutingScore
Missing entitlement '%@' for SetAudioRoutingScore
Out-of-range score: %d, min %d, max %d
SetupDevice
Missing entitlement '%@' for SetupDevice
ShowDevicePicker
Missing entitlement '%@' for ShowDevicePicker
TriggerHomeKitDeviceDetected
-[SDXPCConnection triggerProximityAutoFillDetectedWithURL:completion:]
Triggering AutoFill detected with URL
WiFiPasswordSharingAvailability
-[SDXPCConnection wifiPasswordSharingAvailabilityWithCompletion:]
PWS availability: %#{flags}
CoordinatedAlertStart
-[SDXPCConnection coordinatedAlertsRequestStart:completion:]
%@ (%s)
caEntitlements
com.apple.sharing.CoordinatedAlerts
### %@ rejected for %#{pid}: already in use
-[SDXPCConnection coordinatedAlertsRequestFinish]
CoordinatedAlertFinish
DeviceDiscoveryActivate
-[SDXPCConnection deviceDiscoveryActivate:completion:]
%@: %@, from %#{pid}
com.apple.sharing.DeviceDiscovery
v16@?0q8
DeviceDiscoveryUpdate
-[SDXPCConnection deviceDiscoveryUpdate:]
%@: %@
BluetoothUserInteraction
-[SDXPCConnection bluetoothUserInteraction]
com.apple.sharing.BluetoothUserInteraction
DiagnosticBLEMode
-[SDXPCConnection diagnosticBLEModeWithCompletion:]
com.apple.sharing.Diagnostics
DiagnosticControl
-[SDXPCConnection diagnosticControl:completion:]
%@( '%@' )
afui
afremote
afservice
afkc
auua-%X-%X
choui
btpipe
metrics
com.apple.sharing.test
key1
value1
pping
hotspot=%X
atvui
b238ui
homepodui
hkui
nfcui
ppui
pinshow
pinhide
dpick
debugParams
pwui
rpui
whaui
wsui
testProxCardKit
unpost
### Unsupported diagnostic control command: '%@'
DiagnosticLogControl
### Error: %#m
change
found
lost
-[SDXPCConnection diagnosticMock:device:completion:]
### Unsupported mock event: '%@'
-[SDXPCConnection diagnosticMockStart:]
Starting mock mode
-[SDXPCConnection diagnosticMockStop:]
Stopping debug mode
DiagnosticShow
prox
autofill
handoff
-- ProximityInfo --
DiagnosticUnlockTestClientWithDevice
-[SDXPCConnection diagnosticUnlockTestClientWithDevice:]
DiagnosticUnlockTestServer
-[SDXPCConnection diagnosticUnlockTestServer]
NFCTagReaderUIActivate
-[SDXPCConnection nfcTagReaderUIActivateWithEndpoint:params:completion:]
ProximityClientActivate
-[SDXPCConnection proximityClientActivate:completion:]
com.apple.sharing.ProximityClient
v16@?0@"NSString"8
v24@?0@"NSString"8q16
v32@?0@"NSString"8q16q24
ProximityClientUpdate
-[SDXPCConnection proximityClientUpdate:]
ProximityClientDismissContent
ProximityClientProvideContent
ProximityClientSuppressDevice
ProximityClientStopSuppressingDevice
ProximityClientUpdateContent
-[SDXPCConnection proximityClientRequestScannerTimerReset]
### Request scanner timer reset failed: %@
RemoteInteractionSessionActivate
-[SDXPCConnection remoteInteractionSessionActivate:completion:]
v16@?0@"SFRemoteTextSessionInfo"8
RemoteInteractionSessionSendData
-[SDXPCConnection remoteInteractionSessionSendPayload:]
-[SDXPCConnection serviceActivate:completion:]
ServiceActivate: %@
dedDisable
### Service identifier %@ is disabled via pref
-[SDXPCConnection serviceActivate:completion:]_block_invoke
Received event: %@
v16@?0@"SFEventMessage"8
v24@?0@"NSUUID"8@"NSError"16
v28@?0C8@"NSData"12@"NSUUID"20
Received request: %@
v16@?0@"SFRequestMessage"8
Received response: %@
v16@?0@"SFResponseMessage"8
ServiceUpdate
-[SDXPCConnection serviceUpdate:]
ServicePeerDisconnected
-[SDXPCConnection servicePeerDisconnected:error:]
ServiceSendEvent
-[SDXPCConnection serviceSendEvent:]
ServiceSendFrame
-[SDXPCConnection serviceSendFrameType:data:peer:]
%@: %s, %ld bytes
ServiceSendRequest
-[SDXPCConnection serviceSendRequest:]
ServiceSendResponse
-[SDXPCConnection serviceSendResponse:]
SessionActivate
-[SDXPCConnection sessionActivate:completion:]
com.apple.sharing.Session
v20@?0C8@"NSData"12
SessionSendEvent
-[SDXPCConnection sessionSendEvent:]
SessionSendFrame
-[SDXPCConnection sessionSendFrameType:data:]
SessionSendRequest
-[SDXPCConnection sessionSendRequest:]
SessionSendResponse
-[SDXPCConnection sessionSendResponse:]
-[SDXPCConnection userNotificationPresent:]
UserNotification XPC not supported on current platform
Unspecified
ATVSetup
MobileBackup
WatchSetup
ATVPair
InternetRelay
WiFiPassword
iOSSetup
Repair
LegacyHomePodSetup
HomePodSetup
ApplePay
WHASetup
DevToolsPair
DDPing
DDPong
RemoteAutoFill
CompanionLinkProx
RemoteManagement
RemoteAutoFillPong
AccessorySetup
TVLS
TVSA
AppSignIn
Fitness
AuthenticateAccounts
NeedsRDLink
NeedsCLink
Goodbye
B238SetupAfterWiFi
EnhancedDiscovery
iMessage
PhoneCall
Announcement
NoOp
PingReq
PingResp
UncRaw
UncOPACK
EncOPACK
AutoUnlock
UncEvent
UncReq
UncRes
RemoteApp
IRControl
IRData
PSStart
PSNext
PVStart
PVNext
HeartbeatLegacy
HeartbeatReq
HeartbeatAck
StartReq
StartAck
EncOPACKZ
UncOPACKZ
HeartbeatAlive
SUCreateSession
SUSessionCreated
SUEvent
SUReq
SUResp
ServiceFragment
ServiceFragmentLast
SessionFragment
SessionFragmentLast
keyData
keyIdentifier
dateCreated
lastUsedCounter
<%@: %p, keyIdentifier:%@, dateCreated:%@, lastUsedCounter:%hu>
BluetoothAdvertiseEncryptionStartCount
Has Wrapping Key: %@, Should Refresh: %@
Keychain Items: %@
@unionOfObjects.%@
Encryption Key: %@
Device Identifier To Decryption Key: %@
isWrappedKey
handoff-decryption-key
com.apple.continuity.encryption
handoff-wrapping-key
Handoff Wrapping Key
handoff-own-encryption-key
Handoff Encryption Key
%@-%@
Handoff Decryption Key
, bundleID = %@
Connection timed out
Could not create message payload
Cannot send messages of these streams
 , expected = %d
Wrote more bytes than message contained
Zero bytes written for message
ltkID
signout
application/json
X-Mme-Client-Info
X-Apple-GS-Token
X-Mme-Device-ID
SDAppleIDMutableURLRequest
UniqueDeviceID
NSString * _Nullable DeviceUDID(void)_block_invoke
### AppleIDDeviceUDID failed with err %#m
SDAppleIDThrottle
void SDAppleIDThrottleReset(void)
Reset throttle
counter
startDate
void SDAppleIDThrottleUpdate(void)
Updated throttle: %ld -> %ld seconds
NSDate * _Nonnull SDAppleIDThrottleCopyNextDate(void)
Next date: %@ in %f seconds
void SDAppleIDThrottleForceMax(void)
Updated throttle to max: %ld seconds
SDNotificationManager
-- SDNotificationManager --
activated 
HomePod granted 
TV granted 
Watch granted 
AutoFill requests:
 - %@
HomePod requests:
TVKeyboard requests:
WatchKeyboard requests:
-[SDNotificationManager _activate]
-[SDNotificationManager _invalidate]
Invalidated
riClientTriggered
com.apple.ContinuityKeyBoard.enabled
-[SDNotificationManager _riServerEnsureStarted:completion:]
Starting TV
com.apple.Sharing.TVRemoteNotifications
-[SDNotificationManager _riServerEnsureStarted:completion:]_block_invoke_2
Requesting TV authorization
-[SDNotificationManager _riServerEnsureStarted:completion:]_block_invoke_3
TV Notification granted: %s %@
v16@?0@"UNNotificationSettings"8
watchKBTriggered
-[SDNotificationManager _watchEnsureStarted:completion:]
Starting Watch
com.apple.Sharing.WatchRemoteNotifications
-[SDNotificationManager _watchEnsureStarted:completion:]_block_invoke_2
Requesting Watch authorization
-[SDNotificationManager _watchEnsureStarted:completion:]_block_invoke_3
Watch Notification granted: %s %@
hhNotifTriggered
-[SDNotificationManager _homePodEnsureStarted:completion:]
Starting HomePod
com.apple.Sharing.HomePodRemoteNotifications
-[SDNotificationManager _homePodEnsureStarted:completion:]_block_invoke_2
Requesting HomePod authorization
-[SDNotificationManager _homePodEnsureStarted:completion:]_block_invoke_3
HomePod Notification granted: %s %@
Starting HomePod mini
com.apple.Sharing.b7ce1794a1c8766816fc7b7500742862
Requesting HomePod mini authorization
HomePod mini Notification granted: %s %@
-[SDNotificationManager _addRequestWithID:content:type:isHomePodMini:]
Duplicate HomePod Handoff request
Duplicate TV autofill request
Duplicate TV needsKeyboard request
Duplicate watch needsKeyboard request
### Unsupported notification type: %d
### No notification center for request
Adding %@ notification request from %@
-[SDNotificationManager _addRequestWithID:content:type:isHomePodMini:]_block_invoke
### Error adding request %@: %@
Added request: %@
-[SDNotificationManager attachmentFromURL:]
### Failed to create attachment from URL %@
-[SDNotificationManager _tvHandleResponse:completion:]
Handle TV response: %@
### No notification ID?
### No device ID?
Handling dismiss
### Remove of unrecognized notification?
Handling default
### Unrecognized action: %@
REMOTE_BULLETIN_MESSAGE_AUTOFILL
REMOTE_BULLETIN_MESSAGE
REMOTE_BULLETIN_SUBTITLE_AUTOFILL
REMOTE_BULLETIN_SUBTITLE
continuityRemoteCategory
-[SDNotificationManager _riServerPostIfNeeded:backgroundAction:]_block_invoke
TV KBPost %@ backgroundAction: %s
-[SDNotificationManager _riServerRemove:]
TV KBRemove %@
-[SDNotificationManager _riServerRemoveAll]
TV KBRemoveAll
-[SDNotificationManager _riServerUpdate:info:]
### KBUpdate: request %@ not found
REMOTE_BULLETIN_MESSAGE_OPEN
KBUpdate (legacy) %@, Prompt: '%@', Title: '%@'
-[SDNotificationManager _riServerUpdate:info:]_block_invoke
### Error updating %@: %@
Update %@ success
-[SDNotificationManager _riServerUpdate:rtiData:]
Updating TV text from RTI data
TV KBUpdate (RTI) %@, Prompt: '%@', Title: '%@'
-[SDNotificationManager _riServerUpdate:rtiData:]_block_invoke
### Error handling RTI data: %@
PROX_AUTOFILL_MESSAGE
PROX_AUTOFILL_SUBTITLE
-[SDNotificationManager _tvAutoFillPostIfNeeded:]_block_invoke
AFPost %@
-[SDNotificationManager _tvAutoFillRemove:]
AFRemove %@
-[SDNotificationManager _tvAutoFillRemoveAll]
AFRemoveAll
WATCH_KEYBOARD_MESSAGE_AUTOFILL
WATCH_KEYBOARD_MESSAGE
WATCH_KEYBOARD_SUBTITLE_AUTOFILL
WATCH_KEYBOARD_SUBTITLE
com.apple.Bridge
-[SDNotificationManager _watchKeyboardPostIfNeeded:]_block_invoke
Watch KBPost %@
-[SDNotificationManager _watchKeyboardRemove:]
Watch KBRemove %@
-[SDNotificationManager _watchKeyboardRemoveAll]
Watch KBRemoveAll
-[SDNotificationManager _watchKeyboardUpdate:info:]
WATCH_KEYBOARD_MESSAGE_OPEN
Watch KBUpdate (legacy) %@, Prompt: '%@', Title: '%@'
-[SDNotificationManager _watchKeyboardUpdate:info:]_block_invoke
-[SDNotificationManager _watchKeyboardUpdate:rtiData:]
Updating watch text from RTI data
Watch KBUpdate (RTI) %@, Prompt: '%@', Title: '%@'
-[SDNotificationManager _watchKeyboardUpdate:rtiData:]_block_invoke
-[SDNotificationManager _watchHandleResponse:completion:]
Handle Watch response: %@
HOMEPOD_HANDOFF_MESSAGE_CALL_GENERIC
HOMEPOD_HANDOFF_SUBTITLE_TALK_HOMEPOD
HOMEPOD_HANDOFF_MESSAGE_MEDIA_GENERIC
HOMEPOD_HANDOFF_SUBTITLE_TRANSFER
-[SDNotificationManager homePodHandoffContentForDevice:info:]
### Cannot create HomePod content for unknown variant: %ld
HOMEPOD_HANDOFF_HEADER_DEFAULT
HomePodHandoffCategory
homepod.fill
60909dfe8f8c461e619cf5ffef54b503
homepodmini.fill
Kettle
FeatureComplete
### No attachment???
-[SDNotificationManager _homePodHandoffPostIfNeeded:info:]_block_invoke
HHPost %@
-[SDNotificationManager _homePodHandoffRemove:reason:]
HHRemove %@, %@
-[SDNotificationManager _homePodHandoffRemoveAll]
HHRemoveAll
-[SDNotificationManager _homePodHandoffUpdateIfNeeded:info:]
### Cannot update unrecognized ID: %@
### Failed to created content from info: %@
HHUpdate %@, %@
-[SDNotificationManager _homePodHandoffUpdateIfNeeded:info:]_block_invoke
-[SDNotificationManager _homePodHandleResponse:completion:]
Handle HomePod response: %@
### No identifier for notification response? %@
### No action identifier for notification response? %@
TRANSFER
Unrecognized action: %@
-[SDNotificationManager userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
### Unrecognized notification center: %@ for response: %@
### Error handling notification response: %@
-[SDNotificationManager testPost:]
Test post
-afr
-kba
-kbr
-kbu
-wkb
-waf
This is a test user notification
Example Subtitle
Notification Title
-[SDNotificationManager testPostBasic]
Test: Posting basic notification
-[SDNotificationManager testAutofillPost]
Test: Posting AF notification
-[SDNotificationManager testAutoFillRemove]
Test: Removing AF notification
HOMEPOD_HANDOFF_MESSAGE_CALL_PEER_IPAD
HOMEPOD_HANDOFF_MESSAGE_CALL_PEER_IPHONE
HOMEPOD_HANDOFF_MESSAGE_CALL_PEER_IPOD
HOMEPOD_HANDOFF_MESSAGE_CALL_PEER
John Appleseed
Kitchen
-[SDNotificationManager testHandoffPost]
Test: Posting Handoff notification
-[SDNotificationManager testKeyboardPost]
Test: Posting TVKB notification
-[SDNotificationManager testKeyboardPostAutoFill]
Test: Posting KB notification with AutoFill
-[SDNotificationManager testKeyboardRemove]
Test: Removing KB notification
Updated prompt
Updated Title
-[SDNotificationManager testWatchKeyboard]
Test: Posting WatchKB notification
-[SDNotificationManager testWatchKeyboardAutoFill]
UNUserNotificationCenter
/System/Library/Frameworks/UserNotifications.framework/UserNotifications
UNNotificationRequest
HPMedia
HPCall
TVAutoFill
TVKeyboard
WatchKeyboard
UNErrorDomain
UNNotificationAttachmentOptionsTypeHintKey
UNNotificationAttachmentOptionsHiddenFromDefaultExpandedViewKey
UNNotificationAttachment
UNNotificationDefaultActionIdentifier
UNNotificationDismissActionIdentifier
UNMutableNotificationContent
UNNotificationSound
RTIInputSystemDataPayload
/System/Library/PrivateFrameworks/RemoteTextInput.framework/RemoteTextInput
Client
UserDismiss
UserTap
Untrigger
UNNotificationSilenceActionIdentifier
com.apple.mobilephone
VOICEMAIL
SDUnlockLocalLTK
SDUnlockRemoteLTK
SDUnlockPairingID
SDUnlockKeybagUUID
SDUnlockBackupExclusion
UnlockSecurityLocalLongTermKey
UnlockSecurityRemoteLongTermKey
UnlockServiceName
com.apple.Sharing.lock-escrow
com.apple.sharingd.unlock
Items Exist | Device Locked
AutoUnlockCloudPairRetries
CloudPairGeneralRetryDate
CloudPairShortRetryDate
AutoUnlockLastSeenWatchDate
AutoUnlockWatchCurrentlyInList
AutoUnlockWatchExistedInUnlockList
ApproveBluetoothIDsChanged
com.apple.sharingd.auto-unlock.transport-client-queue
com.apple.sharingd.auto-unlock.transport-queue
com.apple.private.alloy.continuity.unlock
watch
iphone
ipad
AUDeviceBlackList
AUForceApproveLabel
iPhone
iPad
-[SDAutoUnlockTransport macVersionEligibleForDeviceID:]
5EAFD122-F291-4D56-B1F9-D856CBBC7E0C
Watch0,0
Watch OS
14S000
Placeholder
AUShowIDInName
AUShowOtherDevices
AUDisableEncryption
Unlock IDS Devices
%''@, %@, %@, %@, BT=%@
No devices registered
q24@?0@8@16
All...
SDAppleIDAgent
production
Push connection still active during dealloc
-[SDAppleIDAgent _accountState]
User not signed in
Device not unlocked yet
No account info for apple ID %@
No altDSID for %@, probably because it doesn't have the identity object.
No identity object for %@. A request is in progress
No identity object for %@
No certificate for %@
No intermediate certificate for %@
No private key for %@
Certificate expired
Identity object for %@ is invalid
Validation Record for %@ is invalid
-[SDAppleIDAgent _activate]
Activate
-[SDAppleIDAgent _invalidate]
Invalidated certificate request
Invalidated server task
-[SDAppleIDAgent _cleanUpAccount:]
Certificate token is missing or stale, setting it to nil
-[SDAppleIDAgent _ensurePushStarted]
AIA disabled
com.apple.coreservices.appleid.aps
com.apple.idmsauthagent
Started push agent with environment %@
-- SDAppleIDAgent --
Creation Date:                       %@
Enabled:                             %s
Push Environment:                    %@
Apple ID:                            %@
First Name:                          %@
Last Name:                           %@
AltDSID:                             %@
Validation Record (VR) Available:    %s
VR AltDSID:                          %@
VR Valid Start Date:                 %@
VR Suggested Valid Duration:         %ld
VR Next Check Date:                  %@
VR Needs Update:                     %s
VR Invalid:                          %s
Validated Email Addresses:           %@
Validated Email Hashes:              %@
Validated Phone Numbers:             %@
Validated Phone Hashes:              %@
Temporary Private Key Reference:     %s
Private Key Persistent Reference:    %s
Certificate Available:               %s
Certificate Account Identifier (AI): %@
Certificate Expiration Date:         %@
Certificate Serial Number:           %@
Certificate Token:                   %@
Certificate AI and VR AltDSID match: %s
Intermediate Certificate Available:  %s
Intermediate Cert. Expiration Date:  %@
Intermediate Cert. Serial Number:    %@
Identity Available:                  %s
Identity Invalid:                    %s
Identity Needs Renewal:              %s
Device Unlocked Once:                %s
Old Agent Identity Queried:          %s
OldAgentIdentityWasUsed
Old Agent Identity Used:             %s
Old Agent Certificate Serial Number: %@
OldAgentCertificateSN
Last Sign In Date:                   %@
LastSignInDate
Last Sign Out Date:                  %@
LastSignOutDate
Last Apple ID To Sign Out:           %@
LastSignOutAppleID
Last All Good Date:                  %@
LastAllGoodDate
Account state:                       %@
v24@?0^{__SecTrust=}8B16i20
-[SDAppleIDAgent _ensureEduModeDevicesAreCleanedUp]_block_invoke
Keychainc cleanup tag %d < %d. Remove all items
### SFAppleIDRemoveAllCertificatesFromKeychain failed with err=%#m
### SFAppleIDRemoveAllKeysFromKeychain failed with err=%#m
KeychainCleanupTag
-[SDAppleIDAgent _ensurePushStopped]
Invalidated push agent
-[SDAppleIDAgent _ensurePeriodicVerifyTimerStarted]
Started periodic verify timer
-[SDAppleIDAgent _ensurePeriodicVerifyTimerStopped]
Stopped periodic verify timer
-[SDAppleIDAgent _ensureThrottledRetryTimerStartedWithSuggestedDelay:]
Throttled retry already scheduled
Using server suggested delay of %d seconds
Started throttled retry timer with delay: %d seconds
-[SDAppleIDAgent _ensureThrottledRetryTimerStopped]
Stopped throttled retry timer
-[SDAppleIDAgent _handleAccountIdentifierValidationRecordMismatch]
Apple ID isn't set
-[SDAppleIDAgent _handleAppleIDChangedNotification]
Apple ID changed
-[SDAppleIDAgent _handleAppleIDSignedInNotification]
Apple ID signed in
-[SDAppleIDAgent _handleAppleIDSignedOutNotification]
Apple ID signed out
-[SDAppleIDAgent _handleCertificateStatusUpdate:forAppleID:]
### Apple ID %@ not currently signed in, cannot handle certifcate status 
### No account for %@, cannot handle certificate status
### Certificate status %@, removing current identity
Certificate status %@
### Unhandled certificate state %@
MatchedValue
-[SDAppleIDAgent _handleFindPersonResponse:forRequest:emailOrPhone:withError:queue:completion:]
Find person response matched value doesn't match the request
### Find Person request failed with error %@
-[SDAppleIDAgent _handleInfoResponse:forAppleID:infoRequest:certificateSerialNumber:withError:completion:]
Outdated info request received, ignoring
CertificateSerialNumber
Response certSN %@ is different than the requested %@
CertificateStatus
No certificate status returned by server
-[SDAppleIDAgent _handleInfoResponse:forAppleID:infoRequest:certificateSerialNumber:withError:completion:]_block_invoke
### SFAppleIDParseValidationRecordData failed with error %#m
altDsID
SuggestValidDuration
ValidatedEmailHashes
ValidatedPhoneHashes
ValidAsOf
Validation record for %@ is valid
### Info request failed with error %@
-[SDAppleIDAgent _handleKeyBagFirstUnlockNotification]
Key Bag First Unlock notification
-[SDAppleIDAgent _handleKeyVerificationFailure]
Handling key verification failure
-[SDAppleIDAgent _handleServerTaskCompletionWithError:]
### Server task failed with error %@
-[SDAppleIDAgent _handleUILockStatusChangedNotification]
UI Lock Status Change notification
-[SDAppleIDAgent _handleUILockStatusChange]
Handling UI Lock status change. Device was unlocked once: %s
-[SDAppleIDAgent _handleUntrustedAppleIDCertificateChainForIdentity:]
Unable to get account for %@
No identity for %@
-[SDAppleIDAgent _handleReceivedIdentity:forAppleID:identityRequest:withError:completion:]
Outdated identity request received, ignoring
-[SDAppleIDAgent _handlePeriodicVerifyTimerFired]
Periodic verify timer fired
Throttled retry scheduled, ignoring periodic verify
-[SDAppleIDAgent _handleThrottledRetryTimerFired]
Throttled retry timer fired
-[SDAppleIDAgent _performKeyVerificationForIdentity:]
### No identity
LastKeyVerificationDate
Skipping key verification. Last one peformed %g seconds ago.
Verify keys failed with err=%#m
com.apple.sharing.OperationDuration
operation
durationMs
LastKeychainCountDate
com.apple.sharing.AIAKeychainCount
certCount
privKeyCount
pubKeyCount
latencyMs
-[SDAppleIDAgent _performKeychainCount]
Certs: %d, private keys: %d, public keys: %d
### SDAppleIDCertificateAndKeyCounts failed with err=%#m.
requestType
createAndFetchCert
appleID
v24@?0@"SFAppleIDIdentity"8@"NSError"16
triggerPush
-[SDAppleIDAgent _performOtherTaskWithInfo:completion:]
Trigger push
Done
triggerVerify
Trigger verify
removeAppleID
Remove Apple ID Request
setMetaInfo
Set Meta Info Request
value
### Unsupported request type %@
createCert
v28@?0^{__SecKey=}8^{__SecKey=}16i24
-[SDAppleIDAgent _performServerTaskWithInfo:completion:]
CreateCSIdentity semaphore timed out
fetchCert
certificateToken
getMyInfo
certificateSN
vrid
serialNumber
clientAidvrId
findPerson
emails
phones
Server Task Type: %d
Response Info: %@
v24@?0@"NSDictionary"8@"NSError"16
SDAppleIDAgent.m
inQueue and _dispatchQueue both nil.
-[SDAppleIDAgent _prefsChanged]
Device is in edu mode, agent disabled 
aiaEnabled
Agent Enabled: %s -> %s
aiaLinkIdentityEnabled
Agent Link Identity Enabled: %s -> %s
aiaPushEnvironment
development
Agent Push Environment: %@ -> %@
-[SDAppleIDAgent _requestInfoForAppleID:completion:]
Info request already in progress
Request info for %@
-[SDAppleIDAgent _requestIdentityForAppleID:certificateToken:privateKeyPersistentReference:withCompletion:]
Identity request already in progress
Request identity for %@, certificate token %@, private key persistent ref %s
v24@?0@"NSString"8@"NSData"16
AgentDescription
-[SDAppleIDAgent _updateAppleID]
Apple ID changed from %@ to %@
-[SDAppleIDAgent _updateMyInfo]
AppleID is nil, unable to updated my info
-[SDAppleIDAgent _verifyState]
Verifying state
My AppleID is nil, user probably not signed in
Account doesn't have an identity object
Identity is invalid or needs renewal
Key verificatin failed
Account doesn't have a validation record
Validation Record needs update or is invalid
### Certificate account identifier does not match altDSID in the validation record
-[SDAppleIDAgent _verifyState]_block_invoke_4
-[SDAppleIDAgent _verifyState]_block_invoke_6
### Invalid certificate chain for %@, error %#m
Certificate chain for %@ is trusted
Agent state: all good.
v16@?0B8i12
IdentityLinkedOnce
OldAgentIdentityQueried
-[SDAppleIDAgent accountForAppleID:]
Account for %@:
-[SDAppleIDAgent verifiedIdentityForEmailOrPhone:queue:completion:]_block_invoke
Verified identity for %@: %@
v24@?0@"SDAppleIDVerifiedIdentity"8@"NSError"16
-[SDAppleIDAgent verifiedIdentityForEmailOrPhone:]_block_invoke
### copyCSIdentityForEmailOrPhone:queue:completion failed with error=%{error}
-[SDAppleIDAgent verifiedIdentityForEmailOrPhone:]
-[SDAppleIDAgent copyIdentityForAppleID:]
SecIdentity for %@:
-[SDAppleIDAgent queryVerifiedIdentityForEmailOrPhone:queue:completion:]_block_invoke
### FindPerson failed with error %@
### FindPerson returned no person info object
### No account identifier in person info object
v24@?0@"SFAppleIDPersonInfo"8@"NSError"16
AppleIDAccountValidationRecordData
-[SDAppleIDAgent connection:didReceiveToken:forTopic:identifier:]
Received push token '%.6@...', topic '%@', identifier '%@'
-[SDAppleIDAgent connection:didReceivePublicToken:]
Received public push token '%.6@...'
-[SDAppleIDAgent connection:didReceiveIncomingMessage:]
Received push notification topic '%@'
APSEnvironmentProduction
/System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService
APSEnvironmentDevelopment
APSConnection
Issued
Pending
Failed
Revoked
Expired
-[SDAutoUnlockWiFiRequest _invalidate]
com.apple.sharing.SDAutoUnlockWiFiManager
-[SDAutoUnlockWiFiManager _addWiFiRequest:]
-[SDAutoUnlockWiFiManager _invalidateWiFiRequest:]
identifier == %@
SDAutoUnlockWiFiManager.m
Invalid request params awdlInfo: %@ queueAvailableHandler: %@ invalidated: %d
-[SDAutoUnlockWiFiManager _processRequestQueue]
-[SDAutoUnlockWiFiManager _cancelWiFiRequest:]
-[SDAutoUnlockWiFiManager _resetManagerState]
-[SDAutoUnlockWiFiManager _invalidateCurrentRequest]
-[SDAutoUnlockWiFiManager _startRanging]
-[SDAutoUnlockWiFiManager _enableRangeableIfNeeded]
-[SDAutoUnlockWiFiManager _disableRangeable]
-[SDAutoUnlockWiFiManager _startAWDLWithInfo:]
-[SDAutoUnlockWiFiManager __handleAWDLDisabledIfNeededForRequest:]
-[SDAutoUnlockWiFiManager _restartAWDLTimer]
-[SDAutoUnlockWiFiManager _invalidateAWDLTimer]
-[SDAutoUnlockWiFiManager _handleAWDLTimerFired]
Unknown (%ld)
com.apple.sharing.sysdiagnose-queue
com.apple.private.alloy.nearby
v24@?0@"NSString"8@"NSError"16
com.apple.Honeybee.event-notify
kLogPath
kLogIdentifier
Sharing
StreamID
com.apple.AirDrop
DisableAWDL
Expect
User-Agent
Connection
Content-Type
gzip
pkzip
dvzip
close
100-continue
application/zip
application/x-cpio
application/x-dvzip
application/octet-stream
text/xml
POST
adVN
adVF
adDT
atag
cname
phash
ehash
nhash
comment
model
ecolor
icolor
osxvers
flags
file-read-data
 %ld
@me.com
@mac.com
%@@icloud.com
awdl0
%@.%@%@
com.apple.sharingd.DomainsChanged
com.apple.sharingd.ManagedChanged
type: %d, sessionID: %ld, destinations: %@
Proxy message failed
AWDL info retrieval failed
 with wrapper %@ sessionID: %@
Encryption failed
AUUseRangingKey
AutoUnlockUseCoreLocation
DisableRanging
failureReasons
ltkSyncing
v16@?0@"NSProgress"8
known
unknown
empty
@16@?0@8
com.apple.photos.asset-bundle
com.apple.private.live-photo-bundle
v16@?0@"NSArray"8
%lu files
%lu items
SDAirDropConnection
Continue (100)
OK (200)
No Content (204)
Bad Request (400)
Unauthorized (401)
Forbidden (403)
Conflict (409)
Expectation Failed (417)
Server Fail (500)
Insufficient Storage (507)
 Handoff
 CopyPaste
 Boosted
@unionOfObjects.UUIDString
SDActivityScanner
v24@?0@"NSObject<SFContinuityScannerClient>"8^B16
v24@?0@"SFActivityAdvertisement"8@"NSError"16
com.apple.sharing.handoff.scanning
Handoff State End
Handoff State
Is Scanning: %@
Scan Types: %@
Device Identifier To Lost Device Timer: %@
Device Identifier To Device Record: %@
TRANSFER_FROM_MIXED_TYPES_TEXT
com.apple.sharingd.ConnectedChanged
com.apple.SharingXPCHelper
SDXPCHelperConnection.m
SDXPCHelperConnection deallocated without -invalidate call
FALLBACK
-[SDXPCHelperConnection monogramImageDataForContact:style:diameter:monogramsAsFlatImages:isContactImage:]
-[SDXPCHelperConnection monogramImageDataForContact:style:diameter:monogramsAsFlatImages:isContactImage:]_block_invoke
v20@?0@"NSData"8B16
-[SDXPCHelperConnection groupMonogramImageDataForContacts:style:diameter:monogramsAsFlatImages:processOppositeBackgroundStyle:]
%@,%li,%f,%i
@"NSString"16@?0@"SharingXPCHelperImageItem"8
@"SharingXPCHelperImageItem"24@?0@"SharingXPCHelperImageItem"8^{CGImage=}16
-[SDXPCHelperConnection groupMonogramImageDataForContacts:style:diameter:monogramsAsFlatImages:processOppositeBackgroundStyle:]_block_invoke_3
v20@?0@"NSArray"8B16
@"NSArray"16@?0@"NSArray"8
groupContacts
-[SDXPCHelperConnection urlToCGImgDataForCallHandoffIconWithAppIconImageData:contact:]_block_invoke
v16@?0@"NSURL"8
-[SDXPCHelperConnection monogramImagesForMultipleContacts:style:diameter:monogramsAsFlatImages:]
-[SDXPCHelperConnection monogramImagesForMultipleContacts:style:diameter:monogramsAsFlatImages:]_block_invoke_4
multipleContacts
-[SDXPCHelperConnection CGImgForUIActivityTitles:foregroundColor:processOppositeColor:]
v32@?0@"NSString"8Q16^B24
,%@,%@,%@,
-[SDXPCHelperConnection CGImgForUIActivityTitles:foregroundColor:processOppositeColor:]_block_invoke_3
v32@?0@"SharingXPCHelperImageItem"8Q16^B24
activityTitles
CacheHits
CacheMisses
%02x
cacheFileCount
totalCacheAccessCount
numberOfSuggestions
suggestionsHash
sourceApplicationBundleID
isDarkMode
durationInMS
daemonPID
com.apple.sharing.sharesheetInvocation
-[SDXPCHelperConnection CGImgForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:processOppositeColor:]
,%@,%@,%lu,%i,%i,%@,
nameLabel
-[SDXPCHelperConnection CGImgForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:processOppositeColor:]_block_invoke
-[SDXPCHelperConnection CGImgDataForActivityMoreListEntryForActivityTitle:labelColor:processOppositeColor:]
activityTitle
-[SDXPCHelperConnection CGImgDataForActivityMoreListEntryForActivityTitle:labelColor:processOppositeColor:]_block_invoke
-[SDXPCHelperConnection CGImgForActionPlatterWithTitle:tintColor:]
actionPlatter
-[SDXPCHelperConnection CGImgForActionPlatterWithTitle:tintColor:]_block_invoke
-[SDXPCHelperConnection CGImgForNearbyBadgeWithCount:]
%li,%@
nearbyBadge
-[SDXPCHelperConnection CGImgForNearbyBadgeWithCount:]_block_invoke
(UIColor %.1f,%.1f,%.1f,%.1f)
NULL
,%li,%@,%li,
-[SDXPCHelperConnection _updateShareSheetHostConfiguration]_block_invoke
-[SDXPCHelperConnection setSessionKeepAliveTransactionIdentifier:]_block_invoke
CompanionStreamConnectResponse
RequestAuthorData
Could not send request to other device
Could not create streams
Connection refused
Connection lost
Could not create connection, wireless not enabled
AutoUnlockSuggestedPeers
AutoUnlockPeerRetries
AutoUnlockRetryDate
AutoUnlockRetryMultiplier
AutoUnlockSetupRetryVersion
com.apple.sharing.auto-unlock-suggestion-manager
C42094B4-B936-4673-8034-4EEFD437BEB0
com.apple.sharingd.auto-unlock.suggestion-manager-queue
q24@?0@"SFAutoUnlockDevice"8@"SFAutoUnlockDevice"16
AUSuggestionsEnabled
AUSuggestionsIgnoreBackoff
AUSuggestionsTestDeviceID
AUAlwaysShowSetupRetry
AutoUnlockIconCache
-[SDAutoUnlockMacIconCache iconImageDataForHash:]
No icon cache for hash: %@
### Icon cache isn't a dictionary
AutoUnlockImageData
### Error getting image data: %x
AutoUnlockAppName
Found cached image: %ld bytes, hash: %@, app: %@
-[SDAutoUnlockMacIconCache cacheIconImageData:hash:appName:]
Cached image: %ld bytes, hash: %@, app: %@
AUIconCacheItem
com.apple.sharingd.AirDropAllowedChanged
com.apple.sharingd.AirDropLinkStateChanged
com.apple.sharingd.AirDropPublished
com.apple.sharingd.AirplaneModeChanged
com.apple.sharingd.AltDSIDChanged
com.apple.sharingd.AppleIDAccountInfoChanged
com.apple.sharingd.AppleIDChanged
com.apple.sharingd.AppleAccountSignIn
com.apple.sharingd.AppleAccountSignOut
com.apple.sharingd.BlacklistedAppsChanged
com.apple.sharingd.BluetoothPowerChanged
com.apple.sharingd.CarPlayStatusChanged
com.apple.sharingd.ClamshellStatusChanged
com.apple.sharingd.ComputerNameChanged
com.apple.sharingd.ConsoleUserChanged
com.apple.sharingd.ContactsChanged
com.apple.sharingd.ContinuationPayloadSent
com.apple.sharingd.DebugInfoRequested
com.apple.sharingd.DiscoverableModeChanged
com.apple.sharingd.ExternalDisplaysChanged
com.apple.sharingd.FinderAirDropChanged
com.apple.sharingd.FinderPrefsChanged
com.apple.sharingd.HotspotMISStateChanged
com.apple.sharingd.KeyBagFirstUnlock
com.apple.sharingd.KeyBagLockStatusChanged
com.apple.sharingd.LocalHostNameChanged
com.apple.sharingd.MediaAccessControlSettingChanged
com.apple.sharingd.MountPointsChanged
com.apple.sharingd.MulticastDNSChanged
com.apple.sharingd.MultipleUsersLoggedInChanged
com.apple.sharingd.NetbiosNameChanged
com.apple.sharingd.ODiskMountPointsChanged
com.apple.sharingd.PairedWatchLockStateChanged
com.apple.sharingd.PairedWatchPasscodeStateChanged
com.apple.sharingd.PairedWatchWristStateChanged
com.apple.sharingd.PersonalHotspotAllowedChanged
com.apple.sharingd.PowerSourceChanged
com.apple.sharingd.ResetState2
com.apple.sharingd.ResetState
com.apple.sharingd.ScreenStateChanged
com.apple.sharingd.SmartCoverClosedChanged
com.apple.sharingd.SystemHasPoweredOn
com.apple.sharingd.SystemUIChanged
com.apple.sharingd.SystemWillSleep
com.apple.sharingd.SystemWillNotSleep
com.apple.sharingd.UILockStatusChanged
com.apple.sharingd.UserPictureChanged
com.apple.sharingd.VolumesChanged
com.apple.sharingd.WirelessCarPlayChanged
com.apple.sharingd.WirelessModeChanged
com.apple.sharingd.WirelessPowerChanged
com.apple.sharingd.WirelessCriticalChanged
com.apple.sharingd.WorkgroupChanged
com.apple.sharingd.WristStateChanged
-[SDStatusMonitor clearMonitorCache]
-- SDStatusMonitor --
Current Discoverable Mode     %@
AD Available:                 %s
AD Advertising:               %s
AD Recieving:                 %s
Requested
Default
User Defaults
com.apple.sharing.airdrop-mode-changed
AccountState
v20@?0@"NSDictionary"8i16
-[SDStatusMonitor clearMyAppleIDInfo]
v20@?0B8@"NSError"12
-[SDStatusMonitor clearMyIconAndHash]
BuildVersion
IsSimulator
marketing-name
ProductName
ProductType
ProductVersion
ReleaseType
Production
Simulator
%@ (%@)
%@ %@ (%@)
%@: %@, %@, 
BatteryCurrentCapacity
BatteryIsCharging
charging
not charging
%d%% (%@)
B332BTAddressRotationDelayMsec
MinPersonImageSize
DeviceName
iPod
iPod touch
SidebarMaxCount
ShareSheetMaxSuggestions
WorkgroupThreshold
AlwaysAutoAccept
AlwaysSendPayload
B332PairingEnabled
SetupDone
ForceNoBuddy
com.apple.purplebuddy
BypassLTKeyAbort
CoalesceMe
DisableAutoAccept
DisableAutoAcceptForPhotosAssetBundles
DisableCompression
DisableContinuityTLS
DisablePeopleSuggestions
DisablePictureQuery
DisablePipelining
DisableQuarantine
DisableExtractMediaFromBundles
DisableTransformingPhotosAssetBundlesToFolders
DisableRotation
DisableAirDropAdvertising
EnableAirDropReceiving
EnableAllRecents
EnableBugs
DisableContinuity
EnableDebugMode
EnableDVZip
EnableHotspotFallback
EnableOOBPCredentialLogging
EnablePKZip
EnablePKZipCompression
pdStrangers
EnableStreamDebugging
EnableWebloc
EnableXML
ForceAWDL
ForceP2P
IgnoreIconDiskCache
RegisterAllInterfaces
ShowMeInWormhole
ShowThisComputer
TestDiskFull
EnableAsynchronousProxyLoading
client
server
begin
com.apple.airplay.prefsChanged
v12@?0i8
com.apple.airplay
accessControlLevel
p2pAllow
available
unavailable
_whats-my-name._tcp.
local.
com.apple.sharing.privacy-changed
-[SDStatusMonitor installContactsMonitor]
%@/%@/%@
MulticastDNS
preventExitForLocaleChange
pau_check_passcode
com.apple.springboard.hasBlankedScreen
Unknown
DetectDisabled
Unexpected
com.apple.airport.preferences.plist
All Good
Identity Invalid
Validation Record Invalid
Identity Request In Progress
Certificate Expired
No Certificate
Password Invalid
Password Inaccessible
No Account
No Identity
No Private Key
No Intermediate Certificate
User Not Signed In
Device Not Unlocked Once
ITUNES_STORE_LINK_IBOOK
GENERIC_ITEM
SDUnlockLTKTransferPreventExitReason
SDUnlockSetupSessionPreventExitReason
com.apple.Sharing.PairedUnlock.DailyMetric
<%@: %p, date:%@, on wrist:%@>
Waiting For Auth Token:%@
v16@?0@?<v@?q>8
Other side never responded
Bad device identifier
Invalid password
Could not sign remote key
Could not step escrow session
Could not create escrow session
Missing information to created session
Could not step escrow record
Could not complete final step
Error occured on the lock side
v16@?0B8B12
com.apple.sharingd.lock-state
Failed to send to other device
authToken
com.apple.MobileStore
com.apple.Music
SFAirDropActivitySubjectiTunesStoreLinkType
ITUNES_STORE_LINK_MUSIC
ITUNES_STORE_LINK_MOVIE
ITUNES_STORE_LINK_TV_SHOW
ITUNES_STORE_LINK_AUDIOBOOK
ITUNES_STORE_LINK_RINGTONE
ITUNES_STORE_LINK
Unlock Enabled:%@
Local Long Term Key Exists:%@
Remote Long Term Key Exists:%@
Device Key Bag State:%ld
AKS Key Bag State:%d
Device Nearby:%@
Setup AKS Session ID:%ld
Unlock AKS Session ID:%ld
Stash AKS Session ID:%ld
Nano Registry State:%d
Device Paired:%@
SDNotificationNameNearbyBLEAuthTagChanged
SDNotificationNameIDSAccountsChanged
SDNotificationNameIDSDevicesChanged
SDNearbyAgentNotificationUnlockBLEDataReceived
SDNearbyAgentNotificationInfoKeyBLEDevice
SDNearbyAgentNotificationInfoKeyBLEData
BLEAdv
SDNearbyAgentCore
-[SDNearbyAgent sharedNearbyPipe]
### Ignoring pipe start before activate
-- SDNearbyAgent --
Up %ll{dur}, level %d (%s), timer %s, last user %.2f secs, linger %s, screen %s (%s), cover %s, multiuser %s, sysUI 0x%X, watch %d, FamF 0x%llX, ARS %s
closed
not closed
, AID '%@'
 (%s)
, iTunes '%@' (%s)
, MeDev F<%.8@> I<%.8@> '%@'
AutoUnlocking:         YES
Boost Nearby Info:     YES
BLE Connections:       %ld
BLE Diag Clients:      %ld
BLE Action Advertiser: %@, linger %s
BLE Action Scanner:    %@
BLE Info Advertiser:   %@
BLE Info Scanner:      %@
BLE Prox Scanner:      %@
BLE enhanced discovery assertions: %s
BLE enhanced discovery should run:%s
BT Pipe:               %@
Device Discovery:      %ld request(s)
, CoreDevice
, Action
, NAScreenOff
, Info
, NIScreenOff
, Prox
, PPScreenOff
, FitPair
, %ld Action
, %ld Info
, %ld Prox
v32@?0@"NSUUID"8@"SDBLEIdentifiedDevice"16^B24
, %u of %ld Identified
IDS Service:           %s, %s, %ld device(s), %d AppleTV, %d Continuity, %d HomePod, iMessage %s, %ld device(s) ALEncrypted %d
signed in
not signed in
Services:              %ld, %ld sessions, %ld setup sessions
SystemService:         %@
Pref: '%@' = '%@'
-- BLE Connections --
-- Setup Sessions --
%@ -- %@
-- Sessions --
-- Devices --
-[SDNearbyAgent setAudioRoutingScore:]_block_invoke
Audio routing score changed: %s -> %s
-[SDNearbyAgent setAutoUnlockActive:]_block_invoke
AutoUnlocking: %s -> %s
-[SDNearbyAgent setBoostNearbyInfo:]_block_invoke
BoostNearbyInfo: %s -> %s
-[SDNearbyAgent setEnhancedDiscovery:]_block_invoke
Enhanced discovery %s, reference count %d
EnhancedDiscovery: %s -> %s
-[SDNearbyAgent setHotspotInfo:]_block_invoke
HotspotInfo: 0x%X -> 0x%X
-[SDNearbyAgent _activate]
Sharing-CA
com.apple.rapport.familyFlagsChanged
-[SDNearbyAgent _activate]_block_invoke
Family flags changed: 0x%llX
Bluetooth address changed
-[SDNearbyAgent _activate]_block_invoke_2
Call info changed
-[SDNearbyAgent _activate]_block_invoke_3
First unlock state changed
-[SDNearbyAgent _activate]_block_invoke_4
Me device state changed
-[SDNearbyAgent _activate]_block_invoke_5
Primary AppleID changed
-[SDNearbyAgent _activate]_block_invoke_6
ScreenOn state changed
-[SDNearbyAgent _activate]_block_invoke_7
Screen saver changed
-[SDNearbyAgent _activate]_block_invoke_8
WiFi state changed
-[SDNearbyAgent _activate]_block_invoke_9
Manatee state changed
-[SDNearbyAgent _activate]_block_invoke_11
System monitor activation completed
-[SDNearbyAgent _invalidate]
-[SDNearbyAgent _handleAirDropDiscoverableModeChanged:]_block_invoke
AirDrop discoverable mode changed
-[SDNearbyAgent _handleAppleIDChanged:]_block_invoke
AppleID changed
activityPollSeconds
-[SDNearbyAgent prefsChanged]
Activity poll seconds: %d -> %d
activityRecentSeconds
Activity recent seconds: %d -> %d
btPipeEnabled
BT Pipe enabled: %s -> %s
caEnabled
Coordinated Alerts enabled: %s -> %s
caForce
Coordinated Alerts force: %d -> %d
caPhoneCalls
Coordinated Alerts phone calls: %s -> %s
caScanIfVeryActive
Coordinated Alerts scan if very active: %s -> %s
caSingleDevice
Coordinated Alerts single device: %s -> %s
idEnabled
Identification enabled: %s -> %s
nearbyActionAdvertiseDisabled
NearbyAction advertise disabled: %s -> %s
nearbyActionRSSILog
NearbyAction RSSI log: %s -> %s
nearbyActionScan
NearbyAction scan always: %s -> %s
NearbyAction scan never: %s -> %s
nearbyAuthTagOverride
Nearby AuthTag override: %@ -> %@
nearbyInfoAdvertiseAlways
NearbyInfo advertise always: %s -> %s
nearbyInfoAdvertiseDisabled
NearbyInfo advertise disabled: %s -> %s
nearbyInfoAdvertiseLingerSecs
NearbyInfo advertise linger seconds: %.0f -> %.0f
nearbyInfoRSSILog
NearbyInfo RSSI log: %s -> %s
nearbyInfoWiFiP2P
NearbyInfo WiFiP2P: %s -> %s
pwsContactHashes
ContactHashes: %s -> %s
ppAdvFieldsLog
Log ProxPairing advertisement fields: %s -> %s
ppEnabled
Proximity Enabled: %s -> %s
ppInfoOverride
Proximity Info Override: %@
ppRSSIEstimatorInfo
ppRSSILog
Proximity RSSI log: %s -> %s
homePodIdentifiesAsB520
HomePod identifying as B520: %s -> %s
riClientEnabled
RIClient is enabled: %s -> %s
-[SDNearbyAgent _update]
### Ignoring update before activate
com.apple.sharing.activity-level-changed
Create activity timer failed
-[SDNearbyAgent _activityMonitorCurrentLevelAndNeedsPoll:recentUserActivity:]
Activity level changed %d (%s) -> %d (%s)
-[SDNearbyAgent _activityMonitorCarPlayStatusChanged:]_block_invoke
CarPlay changed to %s
-[SDNearbyAgent _activityMonitorMultipleUsersLoggedInChanged:]_block_invoke
Multiple users logged in changed: %s
-[SDNearbyAgent _activityMonitorUILockStatusChanged:]_block_invoke
UserActive
-[SDNearbyAgent _activityMonitorMediaAccessControlSettingChanged:]_block_invoke
Media access control setting state changed: %d
-[SDNearbyAgent _activityMonitorWatchWristStateChanged:]_block_invoke
Watch wrist state changed: %d
-[SDNearbyAgent _bleNearbyActionAdvertiserEnsureStarted]
Avoid setting target auth tag as there is a service with no target auth tag
Avoid setting target auth tag as there is more than one to set {%@, %@}
tatag
ssidH
BLE NearbyAction advertiser start: %#{flags}, %##@
-[SDNearbyAgent _bleNearbyActionAdvertiserEnsureStarted]_block_invoke
### Start NearbyAction advertiser failed: %@
BLE NearbyAction advertiser update: %#{flags}
BLE NearbyAction advertiser goodbye update: %#{flags}
BLE NearbyAction linger advertise for 5 seconds for goodbyes
-[SDNearbyAgent _bleNearbyActionAdvertiserEnsureStarted]_block_invoke_2
BLE NearbyAction linger advertise ended
-[SDNearbyAgent _bleNearbyActionAdvertiserEnsureStopped]
BLE NearbyAction advertiser stop
-[SDNearbyAgent _bleNearbyActionScannerEnsureStarted]
BLE NearbyAction scanner start
-[SDNearbyAgent _bleNearbyActionScannerEnsureStarted]_block_invoke
BLE NearbyAction found %@
BLE NearbyAction lost %@
-[SDNearbyAgent _bleNearbyActionScannerEnsureStarted]_block_invoke_2
BLE NearbyAction changed %@
BLE NearbyAction scan state changed: %s
### Start NearbyAction scanner failed: %@
-[SDNearbyAgent _bleNearbyActionScannerEnsureStopped]
BLE NearbyAction scanner stop
-[SDNearbyAgent _bleNearbyInfoAdvertiserEnsureStarted]
BLE NearbyInfo advertiser created
-[SDNearbyAgent _bleNearbyInfoAdvertiserEnsureStopped]
BLE NearbyInfo advertiser stop
StopNearbyInfo
v32@?0@"NSUUID"8@"SFService"16^B24
-[SDNearbyAgent _bleNearbyInfoAdvertiserUpdate]
BLE NearbyInfo advertiser update
AirDropUsable
WiFiP2P bit is not set, WiFi state: %s, hostAP: %@, NearbyAction scan: %s, HSA2: %@
R1Capability
BLE NearbyInfo advertiser start: %##@
-[SDNearbyAgent _bleNearbyInfoAdvertiserUpdate]_block_invoke
### Start NearbyInfo advertiser failed: %@
-[SDNearbyAgent _bleNearbyInfoAdvertiserUpdateAddAudioRoutingScore:]
Skip adding field3 to NearbyInfo advertiser
BLEAdvKeyAudioRoutingScoreInfo
Updated audio routing score: %s <%@>
-[SDNearbyAgent _bleNearbyInfoAdvertiserUpdateAddHotspotInfo:]
Skip adding hotspot info to NearbyInfo advertiser
BLEAdvKeyHotspotInfo
Updated HotspotInfo: 0x%X <%@>
-[SDNearbyAgent _bleEncryptActivityLevel:]
Not encrypting activity level because self IRK is not available
Not encrypting activity level because BLE AuthTag is not available
BLEAdvKeyActivityLevel
NearbyInfo sending activity level, original: 0x%x encrypted:0x%x
-[SDNearbyAgent _bleNearbyInfoAdvertiserLingerStart:]
NearbyInfo Linger advertise start: %@, %.0f seconds
-[SDNearbyAgent _bleNearbyInfoAdvertiserLingerStart:]_block_invoke
NearbyInfo Linger advertise stop: %@
-[SDNearbyAgent _bleNearbyInfoReceivedData:cnx:peer:]
### BLE NearbyInfo frame no type (%tu bytes)
BLE NearbyInfo no-op frame
BLE NearbyInfo PingRequest: %'.32@
BLE NearbyInfo PingResponse: %'.32@
BLE NearbyInfo received frame type 0x%02X, %ld bytes
### BLE Remote app frame with no service
### BLE Remote app frame with no service event handler
### BLE NearbyInfo frame %s, no service type
BLE NearbyInfo frame %s, %s, %ld bytes, peer %@
### BLE NearbyInfo unsupported frame type 0x%02X
### BLE NearbyInfo frame error: %#m
-[SDNearbyAgent _bleNearbyInfoReceivedFrameType:src:end:cnx:]
### BLE NearbyInfo frame no session ID (%tu bytes)
### BLE NearbyInfo frame no message ID (%tu bytes)
Bad frame type: %d
BLE NearbyInfo received session frame type 0x%02X
### BLE NearbyInfo session receive with no handler: %@
00000000-0000-0000-0000-000000000000
BLE NearbyInfo received service frame type 0x%02X
_serviceUUID
### BLE NearbyInfo service receive with no handler: %@
### BLE NearbyInfo receive frame failed: %#m
-[SDNearbyAgent bleNearbyInfoStartConnectionToDevice:owner:connected:]
Reusing BLE connection for %@
Creating BLE connection for %@
-[SDNearbyAgent bleNearbyInfoStopConnectionToDevice:owner:]
Invalidating BLE connection for %@
-[SDNearbyAgent bleNearbyInfoSendFrameType:serviceType:data:peer:isSession:]
### BLE Nearby send frame type %s, invalid service 0x%X, %ld bytes, peer %@
### BLE Nearby send frame type %s, service %s, %ld bytes, unknown peer %@
### Can't send more than 255 fragments (%zu total bytes)
-[SDNearbyAgent bleNearbyInfoSendFrameType:serviceType:data:peer:isSession:]_block_invoke
### BLE Nearby send frame type %s, fragment %u, service %s, %ld of %ld bytes, peer %@ failed: %@
### BLE Nearby send frame type %s, last fragment %u, service %s, %ld of %ld bytes, peer %@ failed: %@
-[SDNearbyAgent bleNearbyInfoSendFrameType:serviceType:data:peer:isSession:]_block_invoke_2
### BLE Nearby send frame type %s, service %s, %ld bytes, peer %@ failed: %@
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]
BLE NearbyInfo scanner start
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]_block_invoke
BLE NearbyInfo found %@
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]_block_invoke_2
BLE NearbyInfo lost %@
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]_block_invoke_3
BLE NearbyInfo changed %@
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]_block_invoke_4
BLE NearbyInfo scan state changed: %s
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]_block_invoke_5
### Start NearbyInfo scanner failed: %@
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStopped]
BLE NearbyInfo scanner stop
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]
BLE Prox scanner start
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]_block_invoke
BLE Prox found %@
BLE Prox found %@
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]_block_invoke_2
BLE Prox lost %@
BLE Prox lost %@
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]_block_invoke_3
BLE Prox changed %@
BLE Prox changed %@
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]_block_invoke_4
BLE Prox scan state changed: %s
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]_block_invoke_5
### BLE Prox scanner start failed: %@
-[SDNearbyAgent _bleProximityPairingScannerEnsureStopped]
BLE Prox scanner stop
-[SDNearbyAgent _btPipeEnsureStopped]
BTPipe stop
-[SDNearbyAgent _btPipeHandleFrameType:data:]
BTPipe ping request: %ld bytes
### Ping request too small: %ld bytes
-[SDNearbyAgent _btPipeHandleFrameType:data:]_block_invoke
### BTPipe ping response failed: %@
### Ping response too small: %ld bytes
BTPipe ping response: %ld bytes, %.0f ms
Received message from unexpected device with BT UUID %@. Expected: %@
-[SDNearbyAgent _smartCoverStatusChanged:]
smartCoverStatusChanged notification
-[SDNearbyAgent _wirelessCriticalChanged:]
wirelessCriticalChanged notification, wifiCritical=%@
Disabling enhanced discovery
WirelessCritical
-[SDNearbyAgent _bleAdvertisingAddressChanged]
BLE address unchanged: %.6a
BLE address changed: %.6a
-[SDNearbyAgent _bleUpdateAuthTagIfNeeded]
### Generate BLE Auth Tag failed: %{error}
Updated BLE Auth Tag: <%@>
-[SDNearbyAgent _bleUpdateScanner:typeFlag:]_block_invoke
Updating BLEScanner %p deviceFilter changed to %@ 
Updating BLEScanner %p changeFlags from 0x%x to 0x%x
Updating BLEScanner %p RSSI threshold to %ld
Updating BLEScanner %p scanCache from %@ to %@
Updating BLEScanner %p scanRate from %s to %s
Updating BLEScanner %p trackedPeers to %@
CUGuardLetNoReturn
CUGuardLet with no return
apay
rssi
atvp
ppEn
ppEx
ppRp
psEn
psEx
whas
ppEn-Device1,8202
psEn-Device1,8202
ppRp-Device1,8202
ppEn-BeatsX1,1
ppEx-BeatsX1,1
psEn-BeatsX1,1
psEx-BeatsX1,1
ppEn-BeatsSolo3,1
ppEx-BeatsSolo3,1
psEn-BeatsSolo3,1
psEx-BeatsSolo3,1
ppEn-BeatsStudio3,2
ppEx-BeatsStudio3,2
psEn-BeatsStudio3,2
psEx-BeatsStudio3,2
rEst
algo
homepod-iPad-*
homepod-iPhone10,1-*
homepod-iPhone10,2-*
homepod-iPhone10,4-*
homepod-iPhone10,5-*
homepod-iPhone11,2-*
homepod-iPhone11,6-*
homepod-iPhone11,8-*
homepod
homepod-*-B520ish
rssiSmallEnter
rssiSmallExit
rssiMediumEnter
rssiMediumExit
b520ho
info
rssiExit
rssiImm
rssiNear
rssiFar
ioss-*-iPad
ioss-iPad-*
ioss-iPhone10,1-*
ioss-*-iPhone10,1
ioss-iPhone10,1-iPhone10,1
ioss-iPhone10,1-iPhone10,2
ioss-iPhone10,2-*
ioss-*-iPhone10,2
ioss-iPhone10,2-iPhone10,2
ioss-iPhone10,2-iPhone10,1
ioss-iPhone10,3-*
ioss-iPhone10,4-*
ioss-iPhone10,5-*
ioss-iPhone10,6-*
ioss-iPhone11,2-*
ioss-iPhone11,6-*
ioss-iPhone11,8-*
ioss-iPhone12,1-*
ioss-iPhone12,3-*
ioss-iPhone12,5-*
ioss-iPhone13,1-*
ioss-iPhone13,2-*
ioss-iPhone13,3-*
ioss-iPhone13,4-*
ioss-iPhone14,2-*
ioss-iPhone14,3-*
ioss-iPhone14,4-*
ioss-iPhone14,5-*
ioss-*-iPod9,1
ioss
rafp-iPhone10,1-*
rafp-iPhone10,2-*
ShAu-*-iPad
ShAu-iPad-*
ShAu
iPod9,1
%@-%@-%@
%@-*-%@
%@-%@-*
AudioAccessory5,1
-[SDNearbyAgent _bleProximityUpdateDeviceCloseNearbyActionDevice:]
### No ble proximity info found for %@
-[SDNearbyAgent coordinatedAlertRequestStart:]
CoordinatedAlert: start
CoordinatedAlert: always alerting when no other devices registered
CoordinatedAlert: always alerting for phone calls
CoordinatedAlert: skipping when very active
CoordinatedAlert: skipping when disabled
com.apple.sharing.Coordinated.AlertResult
eventType
activityLevel
otherDevicesCount
bestIsMe
skipScanBcPhoneCall
skipScanBcVeryActive
MsgScans
MsgNoScans
CA: Start, type %ld, level %d, devices %d, best %d, skipP %d, skipA %d, scans %u, noScans %u
-[SDNearbyAgent coordinatedAlertRequestFinish:]
CoordinatedAlert finish: device %@ ignored because its %s is disabled
CoordinatedAlert finish: device %@ activity level too low: 0x%02X (%s)
CoordinatedAlert finish: device %@ activity level 0x%02X (%s) is lower than ours 0x%02X (%s)
CoordinatedAlert finish: device %@ activity level 0x%02X (%s) loses over headphones audible, 0x%02X (%s)
CoordinatedAlert finish: device %@ activity level 0x%02X (%s) is higher than ours 0x%02X (%s)
CoordinatedAlert finish: no other devices found
*** Forcing Coordinated Alert 'bestIsMe' to %s
CA: Finish, type %ld, level %d, devices %d, best %d, skipP %d, skipA %d, scans %u, noScans %u
-[SDNearbyAgent coordinatedAlertRequestCancel:]
CoordinatedAlert cancel
-[SDNearbyAgent _enableEnhancedDiscovery:]
Enable enhanced discovery for reason: %@
-[SDNearbyAgent _disableEnhancedDiscovery:]
Disable enhanced discovery for reason: %@
-[SDNearbyAgent _enhancedDiscoveryScreenChange:]
Screen on, checking enhanced discovery conditions
Checking isMac=%s, isiPad=%s
Checking isWirelessCritical=%s
Checking should advertise=%s
Checking user interaction last user=%.2f, within leeway=%s
Devices of required software version; macCount=%d, iPadCount=%d
On iPad but no Macs available, will not do enhanced discovery
On Mac but no other devices available, will not do enhanced discovery
Enabling enhanced discovery
UserInitiatedScreenOn
Screen off, disabling enhanced discovery
ScreenOff
TimerFired
-[SDNearbyAgent _deviceDiscoveryRequestStart:]
DeviceDiscovery start
Start
-[SDNearbyAgent deviceDiscoveryRequestStop:]
DeviceDiscovery stop
MatchAWDL
MatchKeyboard
MatchProx
MatchSetup
MatchClose
-[SDNearbyAgent _deviceDiscoveryFastScanStart:device:reason:]
Fast scan start ignored for UI state (screen %s, unlocked %s)
Fast scan start too soon (%llu < %u seconds)
Fast scan rate start '%@' for %@
Fast scan rate start '%@'
Timeout-%@
-[SDNearbyAgent _deviceDiscoveryFastScanStop:reset:reason:]
Fast scan rate stop '%@'
IncomingAdv
v32@?0@"NSUUID"8@"SFDevice"16^B24
-[SDNearbyAgent _deviceDiscoveryBLEDeviceFound:type:]
Replace old device: %s, %@ -> %@
IncomingAdvLost
-[SDNearbyAgent _deviceDiscoveryBLEDeviceChanged:type:changes:]
BLE action type changed: %s -> %s, %@
-[SDNearbyAgent diagnosticBLEModeStart:]
BLE diagnostic mode start
-[SDNearbyAgent diagnosticBLEModeStop:]
BLE diagnostic mode stop
-[SDNearbyAgent diagnosticMockChanged:]
Mocking changed event with device: %@
-[SDNearbyAgent diagnosticMockFound:]
Mocking found event with device: %@
-[SDNearbyAgent diagnosticMockLost:]
Mocking lost event with device: %@
-[SDNearbyAgent _identificationCheckFlagsAndACL]
enabled fitness pairing with identity: %@
com.apple.developer
enabled CoreDevice with identity: %@
fitness pairing changed from %d to %d
CoreDevice changed from %d to %d
-[SDNearbyAgent _identificationEnsureStarted]
Deferring identification start until FirstUnlock
Identification start
com.apple.rapport.identitiesChanged
-[SDNearbyAgent _identificationEnsureStarted]_block_invoke
Identities changed
-[SDNearbyAgent _identificationEnsureStopped]
Identification stop
-[SDNearbyAgent _identificationGetIdentities]
Identification get identities
-[SDNearbyAgent _identificationGetIdentities]_block_invoke_2
### Identification get identities failed: %{error}
Self identity: %@, %#{flags}
### Self identity not found
Identification identities: %d total
-[SDNearbyAgent _identificationHandleDeviceFound:flags:]
### Max identification devices reached, skipping %@ (%d total)
NearbyInfo received activity level: 0x%x after decryption
### Unable to decrypt activity level with authTag %s identity %s error %d for device %@
Identification starting maintenance timer
-[SDNearbyAgent _identificationMaintenanceTimer]
Identification removed stale %@
Identification stopping maintenance timer
-[SDNearbyAgent _identificationReIdentifySameAccountDevices:type:]
Identification identified device: %@, %@, %@
-[SDNearbyAgent _identificationIdentifyDevice:sfDevice:]
Identification identified device %@ -> %@, %llu mus
-[SDNearbyAgent _idsEnsureStarted]
IDS start
-[SDNearbyAgent _idsEnsureStopped]
IDS stop
addTicks
-[SDNearbyAgent idsAddCachedIDSIdentifier:device:]
Remove old IDS cache entry: %@ : %##@
### No BT UUID for %@
idsID
Add IDS cache entry: %@ : %##@
-[SDNearbyAgent idsAddCachedIDSIdentifierToDevice:]
Found IDS cache entry for device: %@
AppleTV
AudioAccessory
iMac
v16@?0@"NSSet"8
-[SDNearbyAgent _idsDeviceArrayLocked]
Get IDSDevices
-[SDNearbyAgent idsDeviceForBluetoothDeviceID:conflictDetected:]
Multiple (%ld) IDS devices are associated with BT ID %@. Picking %@, some info may be inaccurate
Local BT Addr %.6a, Local IDS UniqueID: %@ (%@)
, iMessage
, SMS
, Active
, Connected
, Paired
HomePod1,
-[SDNearbyAgent idsIsSignedIn]
### No active IDS accounts, but has devices
IsSignedIn: %s
-[SDNearbyAgent _idsShouldEncryptActivityLevel]
Not encrypting activity level because Manatee is not available.
Not encrypting activity level; IDS device %@ is incompatible with encryption
-[SDNearbyAgent service:account:identifier:didSendWithSuccess:error:context:]
IDS service %@, account %@, identifier %@, success %d, error %@, context @
-[SDNearbyAgent service:account:identifier:hasBeenDeliveredWithContext:]
IDS service %@, account %@, identifier %@, context @
-[SDNearbyAgent service:account:incomingMessage:fromID:context:]
IDS service %@, account %@, message %@, fromID %@, context %@
-[SDNearbyAgent service:activeAccountsChanged:]
IDS service %@ activeAccountsChanged %@
-[SDNearbyAgent service:connectedDevicesChanged:]
IDS service %@ connectedDevicesChanged %@
-[SDNearbyAgent service:devicesChanged:]
IDS devicesChanged: %d device(s)
-[SDNearbyAgent serviceStart:]
Service start: %@
Forcing this device to identify as a B520
### Service start failed: %#m
-[SDNearbyAgent serviceStop:]
Service stop: %@
### Service stop failed: %#m
-[SDNearbyAgent serviceSendRequest:service:]
### Completing error response for service request %@ for service %@
error
-[SDNearbyAgent sessionStart:]
Session start: service %@, %@
Reusing BLE connection for session %@
Create new BLE connection for session %@
### Session start failed: %#m
-[SDNearbyAgent sessionStop:]
Session stop: %@, peer %@, connection %@
Invalidating BLE connection for session %@
Session stop: %@ (no peer/connection)
v32@?0@"NSUUID"8@"SFSession"16^B24
-[SDNearbyAgent sessionSendEvent:session:]
### Send Remote app message with no device identifier
### Send Remote app message to %@ with no connection
### Attempt to send Remote app message with header fields
### Attempt to send Remote app message with no body
-[SDNearbyAgent sessionSendEvent:session:]_block_invoke
### Sent %ld bytes to %@ failed: %@
-[SDNearbyAgent sessionSendRequest:session:]
### Completing error response for request %@ for session %@
-[SDNearbyAgent _sendMessage:frameType:service:session:]
### Send message no device
### Send message no session
### Send message no message identifier
### Send message no service UUID
### Send message no connection
### Send message no connection for device %@
-[SDNearbyAgent _sendMessage:frameType:service:session:]_block_invoke
Sent message to %@, %@, %@
-[SDNearbyAgent _sendMessage:frameType:service:session:]_block_invoke_2
### Send message failed: %#m
-[SDNearbyAgent _setupHandleCreateSession:data:]
BLE SetupCreateSession received from %@: %'.32@
WriteSalt
WriteKey
ReadSalt
ReadKey
### BLE SetupCreateSession failed: %#m
-[SDNearbyAgent _setupHandleSessionCreated:data:]
BLE SetupSessionCreated received from %@: %'.32@
-[SDNearbyAgent _setupHandleSessionEncryptedFrame:type:cnx:]
BLE SetupEMsg type 0x%02X received from %@: %'.32@
### BLE SetupEMsg session %@ not found
### BLE SetupEMsg type 0x%02X received from %@ failed: %#m
-[SDNearbyAgent _setupHandleSessionMessageType:src:end:cnx:session:]
### BLE SetupRecvMsg no message ID (%tu bytes)
### BLE NearbyInfo setup session receive with no handler: %@
### BLE NearbyInfo setup service receive with no handler: %@
### BLE SetupRecvMsg failed: %#m
-[SDNearbyAgent _setupSendCreateSession:cnx:]
BLE SetupSendCreateSession %@
### BLE SetupSendCreateSession failed: %#m
-[SDNearbyAgent _setupSendData:sessionIdentifier:cnx:clientSession:]
BLE Setup re-creating lost session ID %@
### BLE SetupSendMsg no setup session after re-create?
BLE SetupSendMsg queuing data until session created (%ld)
### BLE SetupSendMsg failed: %#m
Start unlock connection with no identifier
-[SDNearbyAgent _startUnlockBLEConnectionWithDevice:encrypted:]
Reusing BLE connection for unlock
Creating BLE connection for unlock
Stop unlock connection with no identifier
-[SDNearbyAgent _stopUnlockBLEConnectionWithDevice:]
Invalidating BLE connection for unlock
Send unlock data to BLE device with no identifier
-[SDNearbyAgent _sendUnlockData:toBLEDevice:direct:completion:]
Send data req: %@ (%ld bytes)
-[SDNearbyAgent _unlockReceivedFrameData:peer:device:]
AutoUnlock received %ld bytes from %@
-[SDNearbyAgent unlockUpdateAdvertising:mask:]_block_invoke
Unlock advertise update: 0x%X flags, 0x%X mask
-[SDNearbyAgent unlockStartTestClientWithDevice:]
Unlock test client with device: %@
-[SDNearbyAgent unlockStartTestClientWithDevice:]_block_invoke_2
Unlock test send: %@
-[SDNearbyAgent unlockStartTestClientWithDevice:]_block_invoke_3
Unlock test client timer stopped
-[SDNearbyAgent unlockStopTestClient]
Unlock test client stop
-[SDNearbyAgent unlockStartTestServer]
Unlock start test server
-[SDNearbyAgent unlockStopTestServer]
Unlock stop test server
-[SDNearbyAgent _testPipePing]
### BT Pipe not enabled
-[SDNearbyAgent _testPipePing]_block_invoke
### BTPipe ping request failed: %@
SDSession %{ptr}
, ID %@
, Peer %@
, SessionCreated %s
, %ld pending sends
Disabled
CoverClosed
Idle
Audio
Screen
Video
Watch
User
Driving
Medium
High
PWOnly
HSA1
HSA2
Managed
SSAccountStore
/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
AKAccountManager
/System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
Scanning
NotConnected
Connected
ContinuityKeyboard
ContinuityRemote
Setup2
AudioTuning
PasswordGranting
PasswordSharing
System
AppleTVSetup
DeviceDiagnostics
Debug
PhoneCallHandoff
RemoteDisplay
Disconnected
Background
Normal
HighNormal
Aggressive
BackgroundOld
NormalOld
HighOld
AggressiveOld
B520ish
HomePod
Prox
HeySiri
AirPlayTarget
AirPlaySource
MagicSwitch
Continuity
TetheringTarget
TetheringSource
NearbyAction
NearbyInfo
ANAnnounce
/System/Library/PrivateFrameworks/Announce.framework/Announce
SDAppleIDUtilities
void SDAppleIDClearGSTokenCache(NSString * _Nullable __strong)
Removing GS token cache entry for %@
Removing Account token cache entry for %@
com.apple.gs.authagent.auth
### Remove Account token cache entry for %@ failed: %@
void SDAppleIDClearGSTokenCache(NSString * _Nullable __strong)_block_invoke
Saved Account '%@ for token remove
### Save Account %@ for token remove failed: %@
Removing all GS token cache entries
### Remove GS token cache entry failed: %d
altDSID
gsToken
void SDAppleIDGetGSToken(NSString * _Nonnull __strong, dispatch_queue_t  _Nullable __strong, SDAppleIDGSTokenCompletion  _Nullable __strong)
Reusing cached altDSID and gstoken for %@
Reusing Account-cached altDSID and gstoken for %{mask}
### aida_tokenForService failed altDSID=%d, accountToken=%d
### ACAccount <%@> doesn't respond to selector aida_tokenForService:
### account identifier is %@ for %@
Throttling request that's too soon after user cancel (%f)
Asking server for GS token for %@
void SDAppleIDGetGSToken(NSString * _Nonnull __strong, dispatch_queue_t  _Nullable __strong, SDAppleIDGSTokenCompletion  _Nullable __strong)_block_invoke_2
AltDSID for %@: %@
GS token for %@: %@
### authenticateWithContext completion called with AltDSID = %@, token = %d
### Request GS token for %@ failed: %@
### Request GS token for %@ failed: %d
%@:%@
void SDAppleIDAuthenticateCertificateChain(NSArray * _Nonnull __strong, SDAppleIDVerifiedIdentity * _Nonnull __strong, dispatch_queue_t  _Nullable __strong, SDAppleIDCertificateChainAuthenticationHandler  _Nonnull __strong)_block_invoke
SFAppleIDVerifyCertificateChain failed with err=%#m
Account identifier check failed
BOOL SDAppleIDAuthenticateCertificateChainSync(NSArray * _Nonnull __strong, SDAppleIDVerifiedIdentity * _Nonnull __strong, NSError * _Nullable __autoreleasing * _Nullable)
SFAppleIDVerifyCertificateChainSync failed with err=%#m
ACAccount * _Nullable AccountForAppleID(NSString * _Nonnull __strong, OSStatus * _Nullable)
AccountForAppleID falling back to account aliases
### AccountForAppleID altDSIDForAccount:%@ returned nil
AccountForAppleID found account %@
0123456789abcdef
awdlInfo
unlockDate
Files
invalid state value
v24@?0@"NSObject<SFAirDropClassroomTransferManagerProtocol>"8^B16
com.apple.sharing.classroom-transfer
Error during registration
Step failed
Registration Token missing
com.apple.Photos
PHOTO
VIDEO
SDAirDropController
iconHash
path
all interfaces
AutoUnlockConfirmationTimerPreventExitReason
Attempt Cancelled
Watch Missing Encryption Key
Watch Not First Unlocked
Watch Missing IDS Device For BT UUID
Decryption failure
UNLOCK_WATCH_LOCKED_ON_WRIST
Ranging Timeout: Results Not Returned
Failed to Start AWDL
Mac Clamshelled Without Display
Watch Failed to Connect
Ranging Timeout
 (%ld)
phoneAutoUnlockSkipRanging
Siri SPI Succeeded
UNLOCK_OUT_OF_RANGE
phoneAutoUnlockAWDLRangingTimeout
Watch using old protocol (version: %d)
Received AWDL Info message missing information (info: %@)
Received auth prompt response missing information: %@)
Exchange request step failed
Lock session invalid
Watch locked and off wrist
Watch off wrist
Phone needs to be unlocked after Watch unlocked and on wrist
UNLOCK_WATCH_IN_SLEEP_MODE
Not enough motion detected
Watch not in state to perform Auto Unlock
Auth prompts disabled on remote
UNLOCK_WATCH_WLAN_DISABLED
UNLOCK_WATCH_WIFI_DISABLED
Remote WiFi failure
Watch Not Armed
Remote AKS session failed
Key exhange request is missing information (request: %@)
phoneAutoUnlockPeerDiscoveryTimeout
Failed to generate ranging token
Auth token transfer failed
-[SDAutoUnlockLockSession startAWDL]_block_invoke
AWDL network failed to start
Auth token failed
Device display is off
Missing local IDS ID
Auth prompt request failed
Image data message failed
Connections still active during dealloc
Attempt to set dispatch queue after activate has been called
Attempt to enqueue XPC block before activate has been called
SDXPCDaemonConnection
Subclass %@ must override %@
UserDefaultsHashesDirtyKey
fetchHistoryTokenKey
hashesAreCorrectKey
_TtC16DaemoniOSLibrary23SDAuthenticationSession
v16@0:8
delegate
wifiRequest
type
AWDLInfo
sessionID
responseTimer
authentication confirmation
authentication response
authentication request
Canceling response timer for %s
v8@?0
Starting response timer for %s
Invalidating %@
DaemoniOSLibrary.SDAuthenticationSession
OS_dispatch_source_timer
_TtP16DaemoniOSLibrary26SDCUSystemMonitorInterface_
@?16@0:8
v24@0:8@?16
dispatchQueue
T@"OS_dispatch_queue",N,&
firstUnlocked
TB,N,R
powerUnlimited
firstUnlockHandler
T@?,N,C
powerUnlimitedChangedHandler
@"OS_dispatch_queue"16@0:8
v24@0:8@"OS_dispatch_queue"16
@?<v@?>16@0:8
v24@0:8@?<v@?>16
_TtP16DaemoniOSLibrary31SDAuthenticationManagerDelegate_
v40@0:8@16@24@32
v32@0:8@"<_TtP16DaemoniOSLibrary32SDAuthenticationManagerInterface_>"16@"NSUUID"24
v40@0:8@"<_TtP16DaemoniOSLibrary32SDAuthenticationManagerInterface_>"16@"NSUUID"24@"NSError"32
OS_dispatch_source
Q16@0:8
@24@0:8@16
_TtC16DaemoniOSLibrary11OnceManager
onceList
_TtC16DaemoniOSLibrary13PushableTimer
noLaterThan
timer
identifier
offset element 
/Library/Caches/com.apple.xbs/Sources/Sharing_executables_Sim/Sharing-1778.1/Daemon/SDCommonSwifty.swift
deinit for untracked 
lower upper 
Contact Field Decode Failed
Contact ID Decode Failed
Store Not Loaded
Hashes Incorrect
_TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager
lastUnlockDate
wristDetectionGenerator
deviceUnlockedGenerator
deviceHasPasscodeGenerator
sleepModeGenerator
motionGenerator
faceIDEnabledGenerator
raiseToWakeHandler
lastUnlockedByPairedUnlockGenerator
queue
raiseToWakeTimes
allowsLenientMotionConditions
lastUnlockedAndOnWristDate
Skipping motion check because one of the following is true: hasEnoughWakeRaises = %{bool}d requestingDeviceUnlockedRecently = %{bool}d unlockedRecently = %{bool}d
Watched unlocked (%s) is after device unlocked (%s)
Denying lenient motion conditions
Allowing lenient motion conditions
Storing last device unlock as %s
Storing last device unlocked and on wrist as %s
Ignoring wake gesture because device is either locked (%{bool}d) or off wrist (%{bool}d)
DaemoniOSLibrary.SDAuthenticationSecurityManager
On wrist state changed
Key bag state changed to %s
_TtC16DaemoniOSLibrary19SDAirDropHandlerIPA
B16@0:8
@32@0:8@16@24
canHandleTransfer
suitableContentsDescription
singleItemActionTitle
INSTALL_BUTTON_TITLE
v16@?0@"SFAirDropAction"8
IPA Handler: Failed to install app with error (%s) for URL %s
IPA Handler: Successful app install for URL %s
IPA Handler: AirDrop app installation not allowed
IPA Handler: isJustFiles is false
IPA Handler: File is not IPA, ignoring...
/Developer/Library/PreferenceBundles/Developer Settings.bundle
IPA Handler: Developer settings bundle exists? %{bool}d
IPA Handler: Transfer is me, can handle.
IPA Handler: Device running in store demo mode
com.apple.sharing
AirDropHashStore
SDXPCHelperImageCache
@40@0:8@16@24@?32
v32@0:8@16@24
preventUntilDate
timedReasons
reasons
pendingOperation
mainTimer
%s _scheduleOperation delayed:%{bool}d, reason: %s
handleTimer calling try operation
Error making timer %s
Optional<Date>.none
handleTimer timer activated
%s handleTimer %s
recalculateDate, preventUntilDate changed to %s
recalculateDate timedReasons:%s
scheduleOperation:%s, %{bool}d
Cannot bump date for reason that is not in set
First time setting date
preventUntilDate updated
preventUntilDate: %s, activeTimer: %{bool}d
This function is for moving the date further into the future: %s
%s pushPreventionDateForReason, reason: %s, date: %s
removeReason end: %ld
%s removeReason start: %ld
addReason end: %ld
Exiting addReason, %s is already in set
%s addReason start: %ld
DaemoniOSLibrary.SDDeferrableOperation
init()
_TtC16DaemoniOSLibrary26SDAuthenticationKeySession
Message does not have an authentication type
Message does not have a ranging token
Message does not have last unlock date
Authentication Session type: %s
Received authentication request: %@
v16@?0@?<v@?B>8
v24@?0@"NSArray"8@"NSError"16
v12@?0B8
v24@?0@"NSDictionary"8q16
Wifi request invalidated
AWDL started (error = %ld)
Could not find peer mac address in remote AWDL info: %s
Could not convert response to data: %s
Sending authentication response: %s
Session failed with reason: %s
Received confirmation: %@
Input string not UTF-8 encoded.
_TtC16DaemoniOSLibrary27SDAuthenticationLockSession
rangingToken
isConfirmationSent
Message does not have AWDL info
Could not find ranging token
AWDL_IF_MAC_ADDRESS
combinedAWDLInfo = %s
Request invalidated
Ranging completed
Peer out of range
Peer in range
Fatal error
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
Ranging started
peer found
AWDL failed to start: %ld
AWDL started
Starting wifi request
Error converting confirmation to data
Sending confirmation: %s
Posting notification
Session did complete: %s
Can't cancel session that is already finished
Error converting request to data
Sending authentication request
Error generating ranging key (status = %d)
Authentication did not pass policy: %s
SDContactChangeHistoryEvent
Response timer fired for %s
Automation: Total time = %.*fs
Automation: Ranging = %.*fs
Automation: Peer Found = %.*fs
Automation: AWDL bring up = %.*fs
Automation: Key exchange = %.*fs
CNKeyDescriptor
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
hash
Tq,N,R
superclass
T#,N,R
description
debugDescription
B24@0:8@"Protocol"16
@"NSString"16@0:8
NSSecureCoding
supportsSecureCoding
NSCopying
@24@0:8^{_NSZone=}16
NSCoding
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
_TtC16DaemoniOSLibrary27SDAirDropContactHashManager
context
contactUpdateCoalescer
meCardUpdateCoalescer
systemMonitor
hashManagerQ
bucket
contactStore
hashDB
notificationCenter
distributedNotificationCenter
activated
meCardInfo
hashesUpdatedSuccessfully
B24@0:8@16
detailedDescription
T@"NSString",N,R
kStatusContactsHashesChanged
kStatusMeCardChanged
GeneralContactKeysToFetch
T@"NSArray",N,R
DaemoniOSLibrary1
DaemoniOSLibrary2
/Library/Caches/com.apple.xbs/Sources/Sharing_executables_Sim/Sharing-1778.1/Daemon/SDAirDropContactHashManager.swift
string must be UTF-8 encoded
AirDropRandomHashUUIDKey
Not activated in rebuildDB. Bailing.
Requesting hash database rebuild
Updating hashes failed with error: %s
Destroy database request failed with error: %s
Force rebuild requested
Hash update requested.
HashManager-LastConsumedHistoryTokenKey
Updating hashes completed.
Processed %ld contact change events (add=%ld,delete=%ld,update=%ld)
Unexpected change event %s when regenerating database
Processing event: %s
Change event is DropEverything. Request regenerate entire db.
History token is nil. Will regenerate hash database
Start updating hashes.
Persist requested.
HashManager-LastRebuiltDateKey
HashManager-LastUpdatedDateKey
Unexpected event: %s
Skip meCard change
/Library/Caches/com.apple.xbs/Sources/Sharing_executables_Sim/Sharing-1778.1/Daemon/SDAirDropHashUtilities.swift
DaemoniOSLibrary/SDAirDropHashUtilities.swift
Should regenerate database: %{bool}d (forceRebuild: %{bool}d rebuild due: %{bool}d storeRebuildRequired: %{bool}d hashesFailedToUpdate: %{bool}d
Next hash store rebuild: %s, last: %s, secs to next rebuild: %ld
HashManager: database set.
Load hash db from disk
Not activated in dumpDB. Bailing.
Database dump requested
HashManager: activate called
Found some deprecated state, resetting history token
System monitor activated.
Device has not been unlocked. Don't activate hash manager.
HashManager: activated
HashManager: internal activate called
com.apple.sharingd.MeCardChanged
Posting meCard changed notification
com.apple.sharingd.ContactsHashesChanged
Posting contacts hashes changed notification
CMFSyncAgentBlockListUpdated
HashManager: not activated yet.
MeCard update coalescer fired
Contact update coalescer fired
HashManager-StoredDatabaseVersionKey
Database version mismatch: %ld!=%ld. Clearing history token to rebuild database
Power handler called
First unlock handler called
Not activated in contactsContainsShortHashes. Bailing.
Hash manager: failed to determine if contacts contain short hashes with error (%s)
Not activated in hashesNeedUpdating. Bailing.
Hash manager: failed to get contact indentifier for medium hashes with error (%s)
Not activated in addressOrNumForHash. Bailing.
Hash manager: failed to get email/phone for combined hash with error (%s)
%ld contacts match this set of hashes
Decoded base64 count test failed
Not activated in contactsForCombinedHash. Bailing.
Error: failed to get contactsForCombinedHash because (%s)
Not activated in contactForCombinedHash. Bailing.
Error: failed to get contactForCombinedHash because (%s)
Not activated in setMeCard. Bailing.
Error: failed to set meCard with error %s
Setting meCard (fn=%s,ln=%s,cid=%s)
-- SDAirDropContactHashManager --
Activated:                       %@
Hashes updated successfully:     %@
Store last modified:             %@
Store last rebuilt:              %@
MeCard change handler called
Contact Store change handler called
CMFSyncAgentBlockList change handler called
com.apple.sharing.SDAirDropContactHashManager.queue
HashManager: init.
CDB: store loaded
CDB: Staging deletion of entries for contact id: %s
CDB: Nothing to persist.
v32@?0@"NSData"8@"NSData"16^B24
CDB: Persist completed. Operation took %llu ms.
CDB: Persist %lu changes.
CDB: Destroy called
v24@?0@"NSData"8^B16
Failed to dump hash db into file with error: %s
_TtC16DaemoniOSLibrary21SDAirDropHashStoreCDB
reader
stagedAdditions
stagedDeletedIDs
loaded
destroyed
Writing hash database to: %s
DaemoniOSLibrary/SDAirDropHashStoreCDB.swift
Making AirDrop hash DB folder if doesn't exist: %s
_TtC16DaemoniOSLibrary27SDContactChangeHistoryEvent
_TtC16DaemoniOSLibrary41SDContactChangeHistoryDropEverythingEvent
_TtC16DaemoniOSLibrary30SDContactChangeHistoryAddEvent
contact
_TtC16DaemoniOSLibrary33SDContactChangeHistoryDeleteEvent
contactIdentifier
_TtC16DaemoniOSLibrary33SDContactChangeHistoryUpdateEvent
_TtC16DaemoniOSLibrary14SDContactStore
didChangeNotificationName
meContactDidChangeNotificationName
Fetch result should not be nil since no error was reported
Ignore event %s
v24@?0@"CNContact"8^B16
Failed to find contact with contact identifier %s, error: %s
_TtC16DaemoniOSLibrary21SDXPCHelperImageCache
v20@0:8B16
v40@0:8^{CGImage=}16@24@32
^{CGImage=}32@0:8@16@24
q16@0:8
@16@0:8
imageForKey caught: %s
Query: `%s`
URL: %s
Result: %s
/Library/Caches/com.apple.xbs/Sources/Sharing_executables_Sim/Sharing-1778.1/Daemon/SDXPCHelperImageCache.swift
Failed to form valid lossyContactID, unexpected hash length: %s
Key should encode to UTF8.
SDXPCHelperImageCacheLastUpdateBuild
Couldn't purge for bundle version change: %s
currentBuild(%s) != lastBuildUpdate(%s), purging.
Optional<String>.none
com.apple.Sharing
Expect UserDefaults to be able to read SFPrefs
removeFileIfExists - couldn't delete %s:
removeFileIfExists - Doesn't exist: %s
XPCHelperImageCache
setImage failed: %s
Set: `%s`
ensureCacheNotFull - numItems = %ld, limit = %ld, shouldPurge = %{bool}d
evictContactIdentifier remove-all failed: %s
Failed to remove specific contactID: %s, removing all
Removing URLs: %s
evictContactIdentifier: %s, compressed: %s
purgeAvatars failed: %s
purgeAvatars
clearCacheWithSync: %{bool}d
clearCacheWithSync failed: %s
shared
T@"SDAuthenticationManager",N,R
v24@0:8@16
v32@0:8Q16@24
lockSessionGenerator
keySessionGenerator
idsService
securityManager
keySessions
lockSessions
generateAWDLInfo
isWifiEnabled
isBluetoothEnabled
decryptWrapper
T@"<_TtP16DaemoniOSLibrary31SDAuthenticationManagerDelegate_>",N,W,Vdelegate
T@"OS_dispatch_queue",N,R,Vqueue
v56@0:8@16@24@32@40@48
v52@0:8@16@24@32B40@44
Received corrupt wrapper
Received data: %s
Received unknown message type %hu
Handling %s
Failed to unwrap SDAuthenticationRequest (data: %s)
Message does not have a session ID
No active device
Failed while sending data: %s
Sent %s: %s
Error converting message to data
Error encrypting message
v16@?0@"NSError"8
Sending data
Beginning encryption
Sent data
Error sending data: %s
Failed to unwrap to SDAuthenticationResponse
Could not find existing session for %s
Failed to unwrap to SDAuthenticationConfirmation
Received confirmation that message: %s sent success: %{bool}d
Received: %@ from: %s
DaemoniOSLibrary.SDAuthenticationManager
Could not find session to cancel
Asked to cancel %s
Watch version is unsupported
Already processing authentication session
Wifi is disabled
Bluetooth is disabled
Watch is not nearby
Asked to authenticate %s sessionID: %s
com.apple.private.alloy.sharing.ranging
SDAuthenticationManager started
Failed to decrypt message
AWDLInfo = %s
Optional<Dictionary<AnyHashable, Any>>.none
com.apple.sharing.authentication
_TtP16DaemoniOSLibrary32SDAuthenticationManagerInterface_
T@"<_TtP16DaemoniOSLibrary31SDAuthenticationManagerDelegate_>",N,&
@"<_TtP16DaemoniOSLibrary31SDAuthenticationManagerDelegate_>"16@0:8
v24@0:8@"<_TtP16DaemoniOSLibrary31SDAuthenticationManagerDelegate_>"16
v32@0:8Q16@"NSUUID"24
v24@0:8@"NSUUID"16
IDSServiceDelegate
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24q32@40@48
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
NSObject
#16@0:8
@24@0:8:16
Sharing_Additions
SDUnlockStashConfirmation
SDAirDropHandler
SDAirDropSession
SDAirDropClientDelegate
SDAutoUnlockLocalDeviceController
SDLocalDeviceProviding
SDActivityRequestRecord
SDActivityEncryptionKeyRequestRecord
SDActivityPayloadRequestRecord
SDActivityPayloadReplyRecord
SDUnlockSetupCreateSecret
SDSmartCoverMonitor
SDAutoUnlockPairingSession
SDUnlockSessionConfirmation
SDAirDropHandlerUnsupportedType
SDAirDropHandlerNewsLinks
SDUnlockSessionKeyExchangeResponse
SDAirDropHandlerKeynoteLiveLinks
SDAutoUnlockKeySession
SDAuthenticationResponse
SDUnlockIDSController
SDUnlockMagnetTransport
SDAutoUnlockPairingKeySession
SDAutoUnlockAKSSession
SDAutoUnlockRegistrationSession
SDActivityDeviceRecord
SDClassroomBrowser
SDAirDropPublisher
SDAutoUnlockPairingLockSession
SharingXPCHelperGroupContactIcon
SDAutoUnlockAuthPromptResponse
SDUnlockSessionKeyExchangeRequest
SDAutoUnlockRelockRequest
SDUnlockStashKeyExchangeResponse
SDAirDropHandleriLifeLinks
SDNetworkBrowser
SDNodeBrowserDelegate
SharingXPCHelperImageItem
SDUnlockStashToken
SDAirDropHandlerSharediCloudDocumentsLinks
SDAutoUnlockDecryptionFailed
NSCopying
SDUnlockLongTermKeyRequest
SDAirDropHandlerWebLinks
SDAutoUnlockNotificationsManager
SDAutoUnlockCleanUpAWDL
SDAirDropPeerMetric
SDStreamManager
NSNetServiceDelegate
SDSetupAgent
SDUnlockMotionDetector
SDAirDropClient
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
SDAirDropHandlerPhoneLinks
SDUnlockReset
SDAirDropTransferManagerProtocol
SFAirDropTransferObserverProtocol
SFAirDropTransferObserverDelegate
SDAirDropTransferManager
SDAirDropAlertManager
SFActivityAdvertiserProtocol
SDXPCDaemonProtocol
SFActivityAdvertiserClient
SDActivityAdvertiser
IDSContinuityDelegate
SDAirDropHandleriCloudDrive
SDAutoUnlockProxyTrigger
SDAirDropHandlerPodcastsLinks
SDActivityController
SDAirDropStatus
SDAutoUnlockSessionManager
SDAutoUnlockTransportClient
SDAutoUnlockSessionDelegate
SDUnlockIDSControllerDelegate
SDAutoFillAgent
SBSRemoteAlertHandleObserver
SDSharedRemoteTextInputDelegate
SFCombinedDevice
SFNotificationProxy
SDProxHandoffAgent
SDRapportBrowser
SDAutoUnlockAuthPromptImageData
SDAirDropServer
SDAirDropPublisherDelegate
SDAirDropHandleriBooksItems
SDAutoUnlockSessionConfirmationACK
SDAirDropListener
SDCompanionCommon
SDAirDropHandlerMapsLinks
SDAirDropHandlerNotes
SDUnlockStashKeyExchangeRequest
SDAirDropHandlerGenericLinks
Debug
SDAirDropHandlerFindMyFriendsLinks
Unlock_Additions
SDUnlockXPCSession
SFUnlockProtocol
NSXPCProxyCreating
SDAutoUnlockSessionManagerObserver
SDAirDropReceiveManager
SDAirDropListenerDelegate
SDAirDropAlertManagerDelegate
SDAutoUnlockDeviceRegistrationStep
SDUnlockDisable
SDAutoUnlockPeer
SDUnlockLockStateUpdated
SDAirDropHandlerCalendarEvents
SDAutoUnlockProxySession
SDAutoUnlockAWDLInfo
SharingXPCHelperContactIcon
NSSecureCoding
NSCoding
SDAirDropHandlerPDFs
SDUnlockStateRequest
SDAutoUnlockKeyDeviceLocked
SDAirDropHandlerVoiceMemos
SDAirDropHandlerPlaygroundItems
SDNetworkResolver
SDBonjourResolverDelegate
SDAirDropHandlerWalletItems
SDUnlockSetupCreateRecord
SDAirDropHandlerContacts
SDNetworkOperation
SDAirDropServerDelegate
SDAirDropConnectionDelegate
SDAirDropSessionDelegate
SDAirDropControllerDelegate
SDAirDropStatusDelegate
SDAirDropInformationDelegate
SDNetworkResolverDelegate
SDNetworkEjecterDelegate
SDAutoUnlockIconTransferStore
SDWorkgroupBrowser
SDAppleIDDatabaseManager
SDXPCSession
SDConnectionManagerDelegate
SDRemoteInteractionAgent
SDSharedRemoteTextInputClient
SDAirDropInformation
SDServerBrowser
SDBonjourBrowserDelegate
SDWindowsBrowserDelegate
SDAirDropHandlerGenericFiles
SDAppleIDServerTask
SDConnectionManager
SFCompanionXPCManagerProtocol
SDCompanionStreamDelegate
SDUnlockXPCSesssionDelegate
SDCompanionPublisherProtocol
SDUnlockSetupRequest
SDAirDropCompressor
SDAutoUnlockSessionWrapper
SDAutoUnlockEscrowSecretInfo
SDAirDropHandlerCredentialLinks
SDAutoUnlockAKSManager
SDKeyManaging
SDAirDropDiscoveryLogger
SDAirDropHandleriTunesULinks
SDAppleIDURLResponse
SDAirDropHandlerProfiles
SDUnlockStateResponse
SDNodeCoalescer
SDActivityPayloadManager
IDSServiceDelegate
SDAirDropHandleriWorkLinks
SDAppleIDIdentityRequest
SDAirDropHandlerAppStoreLinks
SDAirDropHandleriCloudFamilyLinks
SDNetworkEjecter
SharingDaemon
SDNetworkBrowserDelegate
NSObject
SDNetworkOperationDelegate
SDBonjourBrowser
SDAutoUnlockRegistrationKeySession
SDAirDropFileZipper
SFXPCInterface
SDXPCInterface
SDXPCAppleIDAuthInterface
SDXPCClientInterface
SDXPCCoordinatedAlertsInterface
SDXPCDeviceDiscoveryInterface
SDXPCDiagnosticsInterface
SDXPCNFCTagReaderInterface
SDXPCProximityClientInterface
SDXPCRemoteAutoFillSessionInterface
SDXPCRemoteInteractionSessionInterface
SDXPCServiceInterface
SDXPCSessionInterface
SDXPCUserNotificationInterface
SDXPCServer
NSXPCListenerDelegate
SDXPCConnection
SDActivityKey
SDActivityEncryptionKey
SDActivityDecryptionKey
SDActivityEncryptionManager
SDStreamHandler
SDAutoUnlockLTKInfo
SDAppleIDMutableURLRequest
SDUnlockClassALongTermKeyResponse
SDNotificationManager
UNUserNotificationCenterDelegate
SDWindowsBrowser
SDAirDropHandlerVoiceMails
SDUnlockSecurityManager
SDAutoUnlockTransport
SDAutoUnlockTransportProtocol
SDNodeBrowser
SDSharePointBrowserDelegate
SDAppleIDVerifiedIdentity
SDAppleIDAgent
APSConnectionDelegate
SDAutoUnlockRangingPeer
SDAutoUnlockWiFiRequest
SDAutoUnlockWiFiManager
CLLocationManagerDelegate
SDAutoUnlockWiFiManagerContext
SDUnlockClassALongTermKeyRequest
SDContactFetchResult
SDNearbyIDSAgent
SDServiceManager
SFCompanionServiceManagerProtocol
SDAirDropLogger
SDDomainBrowser
SDManagedBrowser
SDAuthenticationConfirmation
SDUnlockTransport
SDAutoUnlockAuthSession
SDUnlockSetupSessionCreated
SDAirDropConnection
SDAirDropFileZipperDelegate
SDAutoUnlockStartAdvertising
SFContinuityScannerProtocol
SFContinuityScannerClient
SDActivityScanner
SDAirDropHandlerFailedMixedTypes
SDConnectedBrowser
SDAutoUnlockDeviceRegistrationRequest
SharingXPCHelperProtocol
SDXPCHelperConnection
SDCompanionStream
NSStreamDelegate
NSNetServiceBrowserDelegate
SDStreamHandlerDelegate
SDUnlockLongTermKeyResponse
SDAirDropHandlerFailed
SDAutoUnlockSuggestionManager
SDAutoUnlockNotificationsObserver
SDAutoUnlockMacIconCache
SDStatusMonitor
MCProfileConnectionObserver
2!!!
SDAirDropHandleriBooksLinks
SDAirDropHandlerMixedTypes
SDUnlockWakeGestureRecord
SDUnlockLockMetricDates
SDUnlockLockManager
SDUnlockSessionAuthToken
SDAirDropHandleriTunesStoreLinks
SDUnlockSessionManager
SDNearbyAgent
SDBLEIdentifiedDevice
SDSession
SDAuthenticationRequest
SDAirDropClassroomTransferManagerProtocol
SFAirDropClassroomTransferManagerProtocol
SFAirDropClassroomTransferDelegate
SDAirDropClassroomTransferManager
SDAutoUnlockRegistrationLockSession
SDAirDropHandlerPhotos
SDAirDropController
SDAutoUnlockAuthPromptRequest
SDBonjourResolver
SDAutoUnlockLockSession
S!H,
SDXPCDaemon
NSXPCConnectionDelegate
@16@0:8
B24@0:8@16
v48@0:8@16@24Q32^v40
v40@0:8@16@24^v32
v24@0:8@16
{?="sessionID"b1"version"b1"success"b1}
@"SFAirDropTransfer"
v40@0:8@"SDAirDropClient"16q24@"NSDictionary"32
v24@0:8@"NSProgress"16
@40@0:8^{__SFNode=}16@24@32
v28@0:8^{__SFNode=}16B24
v32@0:8q16d24
v48@0:8@16@24@32^v40
{?=[8I]}16@0:8
v48@0:8{?=[8I]}16
@"SDAirDropClient"
@"<SDAirDropSessionDelegate>"
{?="val"[8I]}
{?="sessionID"b1"version"b1}
v24@0:8^{__IOHIDEvent=}16
B24@0:8^{__IOHIDEventSystemClient=}16
I28@0:8r^{__CFArray=}16I24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
^{__IOHIDEventSystemClient=}
@28@0:8@16S24
@40@0:8@16S24B28@32
@"<SDAutoUnlockSessionDelegate>"
@"SDAutoUnlockAKSSession"
{?="sessionID"b1"version"b1"success"b1"supportsACK"b1"suppressNotification"b1}
{?="sessionID"b1"version"b1"keyFailed"b1}
@"SDAirDropHandlerWebLinks"
@"SDUnlockSessionKeyExchangeResponse"
@"SDAutoUnlockMacIconCache"
@"SDUnlockMotionDetector"
v52@0:8@16S24@28q36@?44
v24@0:8@"<SDUnlockIDSControllerDelegate>"16
v52@0:8@"NSData"16S24@"NSNumber"28q36@?<v@?@"NSError">44
@"NSSet"16@0:8
v60@0:8@16S24@28q36@44@?52
v68@0:8@16S24@28q36q44@52@?60
v52@0:8@16@24@32I40@44
v44@0:8@16@24@32I40
@"SDUnlockSetupRequest"
@52@0:8@16@24q32B40@44
@60@0:8@16@24q32B40@44@52
@56@0:8@16@24q32B40@44B52
@72@0:8@16@24q32B40@44@52B60@64
B32@0:8@16^@24
v40@0:8@16B24B28@?32
{?=CCCCCCCCCCCCCC}16@0:8
@"IDSDevice"
@32@0:8@16^{__SecIdentity=}24
v24@0:8^{?=qi}16
^{__CFNetService=}
@"<SDAirDropPublisherDelegate>"
@"SDUnlockSetupSessionCreated"
{?="errorCode"b1"version"b1"needsImageData"b1}
{?="errorCode"b1"sessionID"b1"version"b1"usingRecord"b1}
{?="version"b1}
v44@0:8@"SDNodeBrowser"16^{__SFNode=}24@"NSString"32i40
@32@0:8@16^{__SFNode=}24
i40@0:8^{__SFNode=}16@24Q32
^{__SFNode=}16@0:8
@24@0:8^{__SFNode=}16
i24@0:8^{__SFNode=}16
^{__SFNode=}
^{__CFDictionary=}
@"<SDNetworkBrowserDelegate>"
@40@0:8@16^{CGImage=}24@32
@24@0:8^{_NSZone=}16
{?="errorCode"b1"version"b1}
v24@0:8:16
@"SFAutoUnlockNotificationModel"
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
@"NSNetService"
@20@0:8i16
B20@0:8C16
v36@0:8i16@20@28
v28@0:8I16@20
q32@0:8@16@24
@"<PBSMediaRemoteServiceInterface>"
@"SFPINPairSession"
@"NEVPNConnection"
@"SFDeviceRepairService"
@"SFDeviceRepairSession"
@"SFWiFiHealthMonitor"
{?=ddd}16@0:8
v40@0:8{?=ddd}16
@"NSObject<OS_os_log>"
@"CMMotionManager"
@"CMPedometer"
@"CMMotionActivityManager"
{?="x"d"y"d"z"d}
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@36@0:8^{__SFNode=}16@24B32
v32@0:8q16^v24
B24@0:8^^{__CFError}16
v32@0:8^{__SecTrust=}16@?24
^{__SecKey=}16@0:8
B24@0:8^{__CFData=}16
^{__SecTrust=}16@0:8
@24@0:8^{__CFURL=}16
@"NSURLResponse"
@"NSURLSessionUploadTask"
^{CGImage=}
@"SDAirDropPeerMetric"
@"<SDAirDropClientDelegate>"
{?="resetReason"b1"sessionID"b1"version"b1}
v32@0:8@"SFAirDropTransfer"16@"SFAirDropAction"24
v24@0:8@"SFAirDropTransfer"16
v32@0:8@"NSString"16@"NSDictionary"24
@"NSObject<SDAirDropAlertManagerDelegate>"16@0:8
v24@0:8@"NSObject<SDAirDropAlertManagerDelegate>"16
v40@0:8@16Q24Q32
v36@0:8Q16@24B32
v40@0:8Q16@24B32B36
@"NSObject<SDAirDropAlertManagerDelegate>"
v24@0:8@?<v@?>16
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@"NSDictionary"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"SFPeerDevice"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSSet"@"NSError">24
v40@0:8@"NSData"16@"NSDictionary"24@?<v@?@"NSError">32
v48@0:8@16@24@32@?40
v40@0:8@16@24@32
v48@0:8@"NSData"16@"NSString"24@"SFPeerDevice"32@?<v@?@"NSUUID"@"NSData"@"NSError">40
v40@0:8@"NSUUID"16@"SFPeerDevice"24@"NSError"32
v24@0:8@"NSSet"16
v32@0:8@16q24
v48@0:8@16q24@32@40
v40@0:8@16@24q32
v48@0:8@16@24q32@40
v24@0:8@"IDSContinuity"16
v32@0:8@"IDSContinuity"16q24
v40@0:8@"IDSContinuity"16q24@"NSError"32
v48@0:8@"IDSContinuity"16q24@"NSData"32@"NSUUID"40
v40@0:8@"IDSContinuity"16@"NSUUID"24q32
v48@0:8@"IDSContinuity"16@"NSUUID"24q32@"NSError"40
@"SDStatusMonitor"
@"IDSContinuity"
@"NSTimer"
@"NSObject<OS_os_transaction>"
@"NSData"
@"SFAirDropAction"
@"NSArray"
@"<SDAirDropStatusDelegate>"
v44@0:8@16@24S32@36
v24@0:8@"SDAutoUnlockTransport"16
v44@0:8@"SDAutoUnlockTransport"16@"NSData"24S32@"NSString"36
v48@0:8@"SDAutoUnlockTransport"16@"NSUUID"24@"NSString"32@"NSData"40
v32@0:8@"SDAutoUnlockTransport"16@"NSString"24
v40@0:8@"SDAutoUnlockTransport"16@"NSData"24@"NSString"32
v24@0:8@"SDAutoUnlockPairingSession"16
v32@0:8@"SDAutoUnlockPairingSession"16@"NSError"24
v36@0:8@16@24S32
v36@0:8@"SDUnlockIDSController"16@"NSData"24S32
v44@0:8@"SDUnlockIDSController"16@"NSData"24S32@"NSString"36
v24@0:8@"SDUnlockIDSController"16
@40@0:8@16@24@32
v28@0:8q16B24
v60@0:8q16@24B32@36@44@?52
v20@0:8I16
@28@0:8B16B20B24
q28@0:8B16B20B24
B20@0:8B16
@?16@0:8
@"NSHashTable"
@"SDAutoUnlockSuggestionManager"
@"SFDeviceDiscovery"
@"SFAutoUnlockDevice"
@"NSError"
@"SDAutoUnlockIconTransferStore"
@"SDAutoUnlockLocalDeviceController"
@"CLLocationManager"
@"<SDAutoUnlockTransportProtocol>"
@"<SDUnlockMagnetTransport>"
@"<SDKeyManaging>"
@"SDAutoUnlockPeer"
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
v32@0:8Q16@24
v32@0:8Q16@"NSDictionary"24
i48@0:8@16@24@32@40
i32@0:8@16@24
@"SBSRemoteAlertHandle"
@"SFRemoteAutoFillSession"
@"SDNotificationManager"
@"SFBLEScanner"
@"SFRemoteAutoFillService"
@"SFSiriRemoteMonitor"
@"SFDevice"
B20@0:8i16
@"RPCompanionLinkDevice"
@"SFBubbleEstimator"
@"SFNotificationInfo"
@"TURoute"
v40@0:8@16@24B32B36
v36@0:8@16@24B32
B28@0:8i16@20
i44@0:8@16@24@32B40
i40@0:8@16@24@32
Q24@0:8@16
@"SFProxHandoffService"
@"SFNotificationProxy"
@"SFCombinedDevice"
v32@0:8@16^{__SFNode=}24
^{__SFNode=}40@0:8@16@24@32
@"RPPeopleDiscovery"
{?="version"b1"finalMessage"b1}
v32@0:8@"SDAirDropPublisher"16@"NSDictionary"24
v24@0:8^{_CFHTTPServerConnection=}16
@"CUCoalescer"
^{_CFHTTPServer=}
@"SDAirDropPublisher"
@"SDAirDropInformation"
@"<SDAirDropServerDelegate>"
@"SDNetworkOperation"
@"<SDAirDropListenerDelegate>"
@"LSAppLink"
@24@0:8@?16
@24@0:8@?<v@?@"NSError">16
v44@0:8@16B24@28@?36
v40@0:8@16Q24@32
v24@0:8@?<v@?@"NSSet"@"NSError">16
v40@0:8@"SFAutoUnlockDevice"16@"NSString"24@"<SFUnlockClientProtocol>"32
v24@0:8@"SFAutoUnlockDevice"16
v32@0:8@"SFAutoUnlockDevice"16@?<v@?B@"NSError">24
v24@0:8@"<SFUnlockClientProtocol>"16
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v24@0:8@?<v@?@"SFAutoUnlockNotificationModel"@"NSError">16
v44@0:8@"NSString"16B24@"NSString"28@?<v@?B@"NSError">36
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"SFUnlockState"@"NSError">24
v40@0:8@"<SFUnlockClientProtocol>"16Q24@"NSUUID"32
v32@0:8@"SDAutoUnlockSessionManager"16@"SFAutoUnlockDevice"24
v40@0:8@"SDAutoUnlockSessionManager"16@"SFAutoUnlockDevice"24@"NSError"32
v44@0:8@"SDAutoUnlockSessionManager"16@"NSDictionary"24@"NSError"32B40
B24@0:8@?16
@"<SDUnlockXPCSesssionDelegate>"
@"<SFUnlockClientProtocol>"
v32@0:8@"SDAirDropListener"16@"NSError"24
v32@0:8@"SDAirDropListener"16@"SDNetworkOperation"24
v32@0:8@"SDAirDropListener"16@"NSDictionary"24
v44@0:8@16@24@32B40
v40@0:8@16@24Q32
v44@0:8@16@"NSString"24@"NSURL"32B40
v40@0:8@16@"NSString"24Q32
@"SDAirDropListener"
@"SDAirDropTransferManager"
@"SDAirDropClassroomTransferManager"
@24@0:8Q16
{?="version"b1"unlocked"b1}
@"SFBLEDevice"
{?="phoneUnlockDate"b1"errorCode"b1"version"b1"authPrompt"b1"isAuthenticatingForSiri"b1"skipMotionCheck"b1"supportsConfirmationACK"b1"useToken"b1}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8@16@24q32@40
@48@0:8@16^{CGImage=}24q32@40
^{CGImage=}16@0:8
v24@0:8@"SDBonjourResolver"16
@"SDBonjourResolver"
@"<SDNetworkResolverDelegate>"
v40@0:8@"SDAirDropServer"16q24@"NSDictionary"32
v40@0:8@"SDAirDropConnection"16q24@"NSDictionary"32
v40@0:8@"SDAirDropSession"16q24@"NSDictionary"32
v32@0:8@"SDAirDropController"16@"NSDictionary"24
v32@0:8@"SDAirDropStatus"16@"NSDictionary"24
v32@0:8@"SDAirDropInformation"16@"NSDictionary"24
v40@0:8@"SDNetworkResolver"16q24@"NSDictionary"32
v40@0:8@"SDNetworkEjecter"16q24@"NSDictionary"32
v32@0:8^v16@24
r^v24@0:8@16
@"<SDNetworkOperationDelegate>"
v28@0:8B16@20
@"SFAppleIDAccount"
v24@0:8@"SDConnectionManager"16
v28@0:8Q16B24
@"SFRemoteTextInputClient"
B24@0:8^v16
@"<SDAirDropInformationDelegate>"
v24@0:8@"SDBonjourBrowser"16
v24@0:8@"SDWindowsBrowser"16
v52@0:8@16@24@32@40B48
v40@0:8@16@24^{__SFNode=}32
@"NSOperationQueue"
@"SDAirDropHandleriCloudDrive"
@"SDAirDropHandler"
@"LSBundleProxy"
@40@0:8q16@24@32
v36@0:8@16@24i32
v28@0:8@16i24
v36@0:8@16i24@?28
v40@0:8q16q24q32
@32@0:8@16^i24
@"NSURLSession"
@"NSURLRequest"
v40@0:8@"NSString"16@"<SFCompanionServiceManagerClient>"24@?<v@?@"<SFCompanionServiceManagerProtocol>"@"NSString"@"NSString"@"NSString"@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?@"NSFileHandle"@"NSError">24
v24@0:8@?<v@?@"<SFUnlockProtocol>"@"NSError">16
v32@0:8@"SFRemoteHotspotCellularBearerParams"16@?<v@?@"NSError">24
v48@0:8@"SDCompanionStream"16@"SFCompanionService"24@"NSFileHandle"32@?<v@?B>40
v24@0:8@"SDCompanionStream"16
v24@0:8@"SDUnlockXPCSession"16
v40@0:8@"SDStreamManager"16@"SFCompanionService"24@"SDStreamHandler"32
v48@0:8@"SDStreamManager"16@"SFCompanionService"24@"NSFileHandle"32@?<v@?B>40
@"<SDConnectionManagerDelegate>"
@"SDServiceManager"
{?="sessionID"b1"version"b1"remoteNeedsLTK"b1}
@32@0:8^{__CFReadStream=}16^{__CFWriteStream=}24
B40@0:8*16q24^{__CFWriteStream=}32
B40@0:8*16q24^{__CFReadStream=}32
v36@0:8*16q24B32
{?="aksSessionID"b1"awdlCacheID"b1"messageType"b1"version"b1"useProxy"b1}
@"SFSharablePassword"
@"NSData"24@0:8@"NSString"16
@40@0:8@16B24^q28B36
@28@0:8@16B24
@36@0:8@16B24B28B32
@36@0:8@16B24@28
B56@0:8@16@24^@32^@40^@48
@60@0:8@16@24@32@40B48^q52
i36@0:8@16@24B32
B40@0:8@16@24@32
B56@0:8@16@24@32@40@48
@20@0:8B16
B40@0:8@16@24^B32
v36@0:8@16B24B28B32
B28@0:8@16B24
v72@0:8@16@24@32@40@48@56@64
B44@0:8@16@24@32B40
v32@0:8@16B24B28
@32@0:8@16B24B28
{os_unfair_lock_s=I}16@0:8
{?="version"b1"passcodeEnabled"b1"unlockEnabled"b1}
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v40@0:8@16@24d32
v56@0:8@16@24@32q40@?48
v56@0:8@16@24@32@40@?48
v44@0:8@16@24@32i40
v36@0:8@16B24@28
v40@0:8i16@20B28d32
@"IDSService"
@"RPCompanionLinkClient"
@"NSMutableArray"
v40@0:8^{__SecCertificate=}16^{__SecCertificate=}24B32i36
^{__SecKey=}
@"<SDNetworkEjecterDelegate>"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v44@0:8@16^{__SFNode=}24@32i40
v44@0:8@"SDNetworkBrowser"16^{__SFNode=}24@"NSString"32i40
v40@0:8@16q24@32
v40@0:8@"SDNetworkOperation"16q24@"NSDictionary"32
v16@0:8
@24@0:8@16
v32@0:8@16@24
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@0:8
@"NSMutableSet"
@"SDActivityAdvertiser"
@"SDActivityScanner"
@"SDAirDropReceiveManager"
@"SDShareSheetSlotManager"
@"SDAutoUnlockSessionManager"
@"SDActivityEncryptionManager"
@"SDNearbyIDSAgent"
@"NSMutableDictionary"
@"SDPairedDeviceAgent"
@"NSObject<OS_xpc_object>"
@"SDActivityPayloadManager"
@"SDUnlockKeyManager"
@"SDUnlockLockManager"
@"SDXPCServer"
@"SDXPCHelperConnection"
I20@0:8I16
@44@0:8@16@24@32S40
v52@0:8^^{_DNSServiceRef_t}16@24@32@40S48
v48@0:8@16@24@32S40I44
v44@0:8@16@24@32S40
v28@0:8@16S24
^{__SFNode=}24@0:8@16
v32@0:8@16^{__CFDictionary=}24
v24@0:8^{__SFNode=}16
B20@0:8I16
v52@0:8I16I20i24r*28r*36r*44
@36@0:8@16r^v24S32
v36@0:8r*16S24r^v28
v48@0:8I16i20r*24S32S36r^v40
@"<SDBonjourBrowserDelegate>"
v36@0:8@16S24q28
v24@0:8^{__CFReadStream=}16
^{__CFReadStream=}16@0:8
@32@0:8q16d24
@36@0:8r*16B24^{__CFURL=}28
@24@0:8r*16
v40@0:8r*16i24q28i36
v24@0:8r*16
q24@0:8^{__CFURL=}16
^{__CFArray=}32@0:8^{__CFURL=}16^{__CFURL=}24
B40@0:8^{__CFURL=}16^{__CFURL=}24^{_BOMBom=}32
v40@0:8^{_BOMBom=}16^{__CFURL=}24^{__CFURL=}32
B52@0:8^{_BOMBom=}16^{__CFURL=}24^{__CFURL=}32@40B48
v32@0:8^{__CFURL=}16^{__CFURL=}24
^{_BOMBom=}
^{_BOMCopier=}
^{__CFWriteStream=}
@"SDAirDropCompressor"
@"<SDAirDropFileZipperDelegate>"
v28@0:8B16@?20
v24@0:8I16i20
v28@0:8@16I24
v40@0:8@16q24q32
v36@0:8C16@20@28
v28@0:8C16@20
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@"SFDevice"16
v28@0:8@"SFDevice"16I24
v24@0:8@"NSString"16
v32@0:8@"NSString"16q24
v40@0:8@"NSString"16q24q32
v24@0:8@"NSDictionary"16
v24@0:8@"SFRemoteTextSessionInfo"16
v24@0:8@"NSError"16
v32@0:8@"NSUUID"16@"NSError"24
v24@0:8@"SFEventMessage"16
v36@0:8C16@"NSData"20@"NSUUID"28
v24@0:8@"SFRequestMessage"16
v24@0:8@"SFResponseMessage"16
v28@0:8C16@"NSData"20
v32@0:8@"NSString"16@?<v@?@"SFAppleIDAccount"@"NSError">24
v24@0:8@?<v@?@"SFAppleIDAccount"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"SFAppleIDPersonInfo"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v36@0:8@16B24@?28
v28@0:8C16@?20
v36@0:8@16I24@?28
v28@0:8i16@?20
v32@0:8Q16@?24
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSString"@"NSData"@"NSError">16
v24@0:8@?<v@?@"NSError">16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v40@0:8@"NSString"16@"NSUUID"24@?<v@?@"NSString"B@"NSError">32
v36@0:8@"SFContactInfo"16B24@?<v@?@"SFContactInfo"@"NSError">28
v32@0:8@"SFClientGetDeviceAssetsParams"16@?<v@?@"SFClientGetDeviceAssetsResults"@"NSError">24
v32@0:8@"SFPeopleSuggesterParams"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v28@0:8C16@?<v@?@"NSError">20
v36@0:8@"SFDevice"16I24@?<v@?@"NSError">28
v28@0:8i16@?<v@?@"NSError">20
v40@0:8@"SFDevice"16@"NSUUID"24@?<v@?@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v24@0:8@?<v@?I@"NSError">16
v32@0:8Q16@?<v@?B>24
v32@0:8@"SFCoordinatedAlertRequest"16@?<v@?@"NSError"B@"NSDictionary">24
v32@0:8@"SFDeviceDiscovery"16@?<v@?@"NSError">24
v24@0:8@"SFDeviceDiscovery"16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSString">24
v40@0:8@"NSString"16@"SFBLEDevice"24@?<v@?@"NSError">32
v24@0:8@"SFBLEDevice"16
v40@0:8@"NSXPCListenerEndpoint"16@"NSDictionary"24@?<v@?@"NSError">32
v32@0:8@"SFProximityClient"16@?<v@?@"NSError">24
v24@0:8@"SFProximityClient"16
v44@0:8@"SFNotificationInfo"16@"NSString"24B32@?<v@?@"NSError">36
v40@0:8@"SFNotificationInfo"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"SFRemoteAutoFillSessionHelper"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSString"24@"NSError"32
v24@0:8@"NSUUID"16
v32@0:8@"SFRemoteInteractionSession"16@?<v@?@"NSError">24
v32@0:8@"SFService"16@?<v@?@"NSError">24
v24@0:8@"SFService"16
v32@0:8@"SFSession"16@?<v@?@"NSError">24
v24@0:8@"SFUserAlert"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8^@16
@"SDAppleIDAgent"
@"SDAutoFillAgent"
@"NSCountedSet"
@"SDNearbyAgent"
@"SDRemoteInteractionAgent"
@"SDSharedRemoteTextInputClient"
@"SDProxHandoffAgent"
@"SDSetupAgent"
@"NSXPCInterface"
@"NSXPCListener"
i40@0:8@16^B24@32
i32@0:8@16^B24
@"SFRemoteAutoFillSessionHelper"
@"SFCoordinatedAlertRequest"
@"SFUserAlert"
@"SFProximityClient"
@"SFRemoteInteractionSession"
@"SFService"
@"SFSession"
@"NSXPCConnection"
S16@0:8
v20@0:8S16
@"NSUUID"
@"NSMutableData"
C36@0:8[10C]16[2C]24C32
B40@0:8[10C]16[2C]24C32C36
v36@0:8[10C]16C24@?28
B32@0:8@16@24
@"SDActivityEncryptionKey"
@20@0:8I16
@"<SDStreamHandlerDelegate>"
{?="version"b1"signout"b1}
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v36@0:8@16@24I32
v40@0:8@16@24I32B36
@"UNUserNotificationCenter"
@"SDBonjourBrowser"
@"<SDWindowsBrowserDelegate>"
@48@0:8@16@24q32q40
q28@0:8B16^i20
q32@0:8B16B20@24
q40@0:8B16B20@24^i32
q36@0:8B16@20@28
q28@0:8I16@20
q36@0:8I16@20^i28
B32@0:8q16@24
@32@0:8q16@24
@36@0:8q16@24B32
@44@0:8q16@24B32^q36
B24@0:8q16
@"NSSet"20@0:8B16
@"SFAutoUnlockDevice"16@0:8
@"NSDate"16@0:8
v60@0:8@16@24S32@36@44@?52
v68@0:8@16@24S32@36@44@52@?60
@72@0:8@16@24S32@36@44B52@56@?64
@"<SDAutoUnlockTransportClient>"
@"NSMapTable"
v28@0:8@"SDSharePointBrowser"16i24
@48@0:8^{__SFNode=}16@24Q32@40
v32@0:8^{__SFNode=}16^{__SFNode=}24
@40@0:8@16Q24^B32
@"SDNodeCoalescer"
@"SDAirDropDiscoveryLogger"
@"SDDomainBrowser"
@"SDManagedBrowser"
@"SDClassroomBrowser"
@"SDConnectedBrowser"
@"SDWorkgroupBrowser"
@"SDSharePointBrowser"
@"SDRapportBrowser"
@"<SDNodeBrowserDelegate>"
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
^{__SecIdentity=}24@0:8@16
v32@0:8q16@24
v64@0:8@16@24@32@40@48@?56
i24@0:8@16
v24@0:8d16
@40@0:8@16@24^@32
@"SDAppleIDDatabaseManager"
@"NSObject<OS_dispatch_queue>"
@"SDAppleIDIdentityRequest"
@"SDAppleIDServerTask"
@"APSConnection"
@"_CLRangingPeer"
@84@0:8@16B24@28@?36@?44@?52@?60@?68@?76
@"SDAutoUnlockRangingPeer"
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"SDAutoUnlockWiFiRequest"
@"SDAutoUnlockWiFiManager"
v24@0:8@"SFCompanionService"16
@"<SFCompanionServiceManagerClient>"
{?="version"b1"success"b1}
@68@0:8@16@24S32@36@44@52@?60
{?="errorCode"b1"failureReasons"b1"sessionID"b1"version"b1"watchNewLTKSyncStatus"b1"watchOldLTKSyncStatus"b1"ltkSyncing"b1}
v40@0:8@16q24^v32
v40@0:8@"SDAirDropFileZipper"16q24^v32
@24@0:8^{_CFHTTPServerConnection=}16
v24@0:8^{__CFError=}16
v32@0:8^v16^{__CFString=}24
v32@0:8^{__CFDictionary=}16^{__CFString=}24
v36@0:8^{_CFHTTPServerRequest=}16^{__CFString=}24B32
B24@0:8^{__SFNode=}16
v32@0:8^{__CFReadStream=}16Q24
B32@0:8^{_CFHTTPServerRequest=}16^@24
v40@0:8^{_CFHTTPServerRequest=}16q24^{__CFData=}32
B24@0:8^{_CFHTTPServerRequest=}16
v24@0:8^{_CFHTTPServerRequest=}16
q24@0:8^{_CFHTTPServerResponse=}16
v32@0:8^{_CFHTTPServerResponse=}16^{_CFHTTPServerRequest=}24
v24@0:8^{_CFHTTPServerResponse=}16
@"NSURL"
@"NSProgress"
^{__SecTrust=}
^{__CFReadStream=}
@"SDAirDropFileZipper"
@"NSObject<OS_dispatch_semaphore>"
^{_CFHTTPServerRequest=}
^{_CFHTTPServerConnection=}
@"<SDAirDropConnectionDelegate>"
v24@0:8Q16
v56@0:8@"NSString"16@"NSData"24@"NSString"32q40@?<v@?@"NSData"@"NSError">48
v24@0:8@"SFActivityAdvertisement"16
v24@0:8@"SFPeerDevice"16
v44@0:8@16@24B32@?36
@"NSObject<OS_dispatch_source>"
v40@0:8^{__SFNode=}16@24@32
^{__CFBag=}
v52@0:8@16q24d32B40@?44
v56@0:8@16@24Q32B40B44@?48
v32@0:8q16@?24
v24@0:8@?<v@?@"NSSecurityScopedURLWrapper">16
v52@0:8@"CNContact"16q24d32B40@?<v@?@"NSData"B>44
v52@0:8@"NSArray"16q24d32B40@?<v@?@"NSArray"B>44
v40@0:8@"NSData"16@"CNContact"24@?<v@?@"NSURL">32
v52@0:8@"NSArray"16q24d32B40@?<v@?@"NSArray">44
v40@0:8@"NSArray"16@"UIColor"24@?<v@?@"NSArray">32
v56@0:8@"NSString"16@"UIColor"24Q32B40B44@?<v@?@"NSData">48
v40@0:8@"NSString"16@"UIColor"24@?<v@?@"NSData">32
v32@0:8q16@?<v@?@"NSData">24
v24@0:8@"UISUIActivityViewControllerConfiguration"16
@52@0:8@16q24d32B40^B44
@60@0:8@16@24q32d40B48^B52
@48@0:8@16q24d32B40B44
@44@0:8@16q24d32B40
@36@0:8@16@24B32
^{CGImage=}40@0:8@16@24@32
v60@0:8@16q24@32@40B48q52
^{CGImage=}52@0:8@16@24Q32B40B44B48
^{CGImage=}32@0:8@16@24
^{CGImage=}24@0:8q16
@56@0:8@16@?24@?32@?40@48
@"UISUIActivityViewControllerConfiguration"
v32@0:8@"NSStream"16Q24
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
v32@0:8@"SDStreamHandler"16@"NSData"24
v24@0:8@"SDStreamHandler"16
v32@0:8@"SDStreamHandler"16@"NSError"24
v28@0:8@"SDStreamHandler"16B24
i24@0:8i16i20
@"NSFileHandle"
@"<SDCompanionStreamDelegate>"
@"SDStreamHandler"
@"NSNetServiceBrowser"
@"NSInputStream"
@"NSOutputStream"
{?="version"b1"keyFailed"b1}
d16@0:8
q16@0:8
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v20@0:8B16
B32@0:8@16o^@24
v32@0:8^{__SecCertificate=}16@24
@24@0:8^{__SecCertificate=}16
^{__SecCertificate=}24@0:8@16
^{__SecCertificate=}16@0:8
^{__SecIdentity=}16@0:8
v24@0:8@?16
@32@0:8@16@24
v32@0:8^B16^B24
q24@0:8@16
C16@0:8
I16@0:8
i16@0:8
v28@0:8B16B20i24
v32@0:8^{__SCDynamicStore=}16^{__CFArray=}24
v32@0:8r*16I24i28
v24@0:8q16
v20@0:8i16
v28@0:8I16^v20
B40@0:8^{__SCPreferences=}16^@24^@32
@24@0:8q16
@"NSNumber"
@"NSString"
@"_TtC16DaemoniOSLibrary27SDAirDropContactHashManager"
@"CNContactStore"
^{__CFRunLoopSource=}
@"SDAirDropServer"
@"NSDictionary"
^{__SecCertificate=}
^{__SecIdentity=}
@"NSMutableString"
^{_DNSServiceRef_t=}
^{IONotificationPort=}
^{__IOPMConnection=}
^{__SCPreferences=}
@"CUSystemMonitor"
@"SDDeferrableOperation"
@"SDSmartCoverMonitor"
@"CNContact"
@"NSDate"
@"NSSet"
v24@0:8B16I20
v36@0:8@16I24q28
@"SDUnlockWakeGestureRecord"
@"SFPairedUnlockDailyEvent"
@"SDUnlockLockMetricDates"
@"NSBackgroundActivityScheduler"
{?="errorCode"b1"sessionID"b1"version"b1}
v24@0:8I16S20
@"SDUnlockIDSController"
@"SDUnlockSecurityManager"
@"SFPairedUnlockEvent"
C32@0:8^B16^B24
C20@0:8C16
i44@0:8C16r*20r*28@36
i40@0:8@16@24^B32
i44@0:8C16C20@24@32B40
@28@0:8C16@20
q32@0:8q16@24
I24@0:8@16
v36@0:8@16q24I32
v32@0:8q16q24
C44@0:8C16@20@28@36
@32@0:8@16^B24
v40@0:8C16C20@24@32
i44@0:8@16C24@28@36
i36@0:8@16C24@28
i52@0:8C16r*20r*28@36@44
v24@0:8I16I20
@"SFBLEAdvertiser"
@"SFSystemService"
@"SFBLEPipe"
@"CUBluetoothClient"
@"RPIdentity"
{?="unlockDate"b1"type"b1"version"b1}
v48@0:8@16q24@32@?40
v48@0:8@"NSString"16q24@"NSDictionary"32@?<v@?B@"NSURL"@"NSError">40
v32@0:8@16Q24
v32@0:8@"NSString"16Q24
@32@0:8@16^@24
v24@0:8B16B20
@"<SDAirDropControllerDelegate>"
@52@0:8@16@24@32@40B48
v44@0:8r*16S24S28r*32I40
^{_DNSServiceRef_t=}16@0:8
@"<SDBonjourResolverDelegate>"
B32@0:8@16B24B28
v36@0:8@16S24@?28
v32@0:8B16@20B28
@"SDUnlockSessionAuthToken"
@"<NSSecureCoding>"40@0:8@"NSXPCConnection"16@"NSXPCCoder"24@32
v36@0:8@"NSXPCConnection"16@"NSInvocation"24B32
'Jmx
 #&)
,/258;
%(+======.
Q-03Q6
HasProblem
iCloud
iTunes
HomeKit
WiFi
Fixing
WiFiPerf
Internet
Hardware
Bluetooth
Thermal
Recovery
StereoNotFound
StereoVersion
StereoError
802.1x
NetworkProfile
NetworkNotShareable
NetworkProfileRequired
Unknown
Bluetooth
Certificate
ValidationRecord
NotSupported
AppleID
ManagedConfig
Discoverability
!&)46
Siri
Home
AppSwitcher
Spotlight
NowPlaying
CarPlay
Login
Passcode
Today
LSNav
Camera
InCall
Auth
AdvData
Attrs
Distance
Name
RSSI
SSID
Prox
RLoc
Attrs
Devices
Prox
RelativeLocation
!$'
 #&),kox
'Jmt
AdvData
Distance
RSSI
Attrs
Bubble
'JQ\
'.5X_
!$'
9Y>)F
ffffff
 #&),/
258;>A
Unknown
Bluetooth
Certificate
ValidationRecord
NotSupported
AppleID
ManagedConfig
Discoverability
999!
!$'*
<?BET
korbSCAM
333333
*****
*****
?333333
?}}}}}}
T TTT)
u"A,
!$'
1bbbbbbI
!$'*-_7
&(*,
IVft
tttt
000ttttttttttt
tttttttttttttt
 #&),/258;C>
 #&),/258;>A
 #&),/258;>A
 #&),/258;>A
+++++"'
%%%%%
$"&"(""""""*,
 #&)
,/258;
EveryoneMode
DeviceClose
NeedsKeyboard
NeedsSetup
HasAuthTag
Failed
Date
DeviceIRK
EdPK
EdSK
Identity
IDSDeviceID
Model
Name
Type
FeatureFlags
Created
Forced
AccountID
UserAdded
ContactID
MediaRemoteID
MediaRouteID
SendersKnownAlias
AccessGroups
HomeKitUserIdentifier
#FMT_
SDAuthenticationSessionDelegate
AuthenticationSessionInterface
SDAuthenticationSession
Name
NNSNotificationName
SDWatchWristState
SFAuthenticationType
SFAuthenticationError
Foundation
FileProtectionType
NNSFileProtectionType
FileAttributeKey
NNSFileAttributeKey
CGImage
NCGImageRef
SDAuthenticationTransportMessageType
SDRunState
OnceManager
PushableTimer
InstanceCounter
IntegerPacker
PackError
SDAirDropHashError
SDAirDropHashStore
AuthenticationSecurityManaging
SDAuthenticationSecurityManager
AuthenticationSecurityRequest
AuthenticationPolicies
SDAirDropHandlerIPA
SDDeferrableOperation
DaemoniOSLibrary
AuthenticationKeyInterface
SDAuthenticationKeySession
ShortHash
MediumHash
LongHash
SDHashStoreContact
SDAirDropHashStoreEntry
IDSService
SDIDSService
AuthenticationLockInterface
SDAuthenticationLockSession
Metrics
DaemoniOSLibrary
SDAirDropContactHashManager
SDAirDropHashStoreCDB
SDContactChangeHistoryEvent
SDContactChangeHistoryDropEverythingEvent
SDContactChangeHistoryAddEvent
SDContactChangeHistoryDeleteEvent
SDContactChangeHistoryUpdateEvent
SDContactStoreInterface
SDContactStore
IDSDevice
SDIDSDevice
@DaemoniOSLibrary
SDAirDropContactHashManagerContext
SDXPCHelperImageCache
CacheError
SDAuthenticationManager
DaemoniOSLibrary
Starting Up...
SIGTERM received, shutting down.
SIGINFO received, requesting debug output.
SIGUSR1 received, requesting reset state.
SIGUSR2 received, requesting reset state 2.
Delaying trigger of action %@ till transferState reaches requirement
Cannot trigger action %@ as it is past requirement
Delaying trigger of action %@ till UI unlock
Triggering action %@
User clicked on Open button
logReceiverBundleID appIdentifier is nil
failed to remove item at %@
Cannot open empty list of URLs
Opening URLs: %@ in %@
Opening URLs: %@
sandbox_extension_consume failed with error %d for tokenData "%@"
Consumed %d sandbox extensions
Start AirDrop session with %@
No session clients started at the moment, most likely we have not discovered the node over Bonjour yet
SDAirDropSession: skip Rapport node %@
Start session client for %@
Stop AirDrop session with %@
SDAirDropSession: Received event %@, properties = %{private}@
totalBytes=%{public, signpost.telemetry:number1}lld
TransferTime
 enableTelemetry=YES 
TransferTimeBytes
SDAirDropSession: cancellation handler called for sessionID: %@
SDAirDropSession: startProgress sessionID is NULL
Stored last unlocked with mask: %d
Not starting smart cover monitor on simulator
smartCoverIsClosed changed: closed %@
flap1IsEngaged (updated) = %{public}s openIsEngaged = %{public}s
flap1IsEngaged = %{public}s openIsEngaged (updated) = %{public}s
flap1IsEngaged = %{public}s openIsEngaged = %{public}s
Invalidating %@
Restarting response timer
invalidateResponseTimer
Received protobuf (type = %d, size = %u)
Incoming message session ID (%@) doesn't match current one (%@)
Launching app store with URL: %@
Key session initialized (device id: %@)
Removing authorization request
Watch not in state. Passcode enabled: %@, wrist detection enabled: %@
Auth key session notifying delegate with error: %@
Alerting on notify
BLE peer disconnected (identifier: %@)
System is active
Beginning delayed work
Authorization allowed by request, not showing alert
Starting wifi request
%s error %@ request:%@
AWDL network up with info %@
Automation: AWDL started %0.2f
WiFi request invalidated
Received SDAutoUnlockMessageTypeAWDLInfo %@
Finished setting in progress
Key session received device id: %@
Received SDAutoUnlockAuthPromptRequest
Received SDAutoUnlockAuthPromptImageData
Received SDUnlockSessionKeyExchangeResponse
Received SDUnlockSessionConfirmation
Received SDAutoUnlockMessageTypeCleanUpAWDL
Using legacy protocol
Using attested protocol
Using modern protocol
Deserializing AWDL info failed %@
handleAWDLInfo: %@
Local device needs to be armed
Image caching disabled
Prompting with cached image
%@ (request: %@)
Received image data (length: %ld, total: %ld)
Received image data but already using cache
Received image data message without data %@
handleSessionKeyExchangeResponse: %@
Sending auth token for approve %@
Sending auth token %@
Failed to generate ranging session token
Creating auth token failed
Session confirmed %@
Caching image for app %@
Confirmation failed
WiFi interface disabled
Failed awdl info serialization
Sending SDAutoUnlockAWDLInfo
Error sending SDAutoUnlockAWDLInfo (error: %@)
Sending SDAutoUnlockAuthPromptResponse
Error sending auth prompt response %@
Sending SDUnlockSessionKeyExchangeRequest
Error sending request %@
Sending SDUnlockSessionAuthToken
AuthToken ack after session completed
Sending SDAutoUnlockSessionConfirmationACK
Grabbing system activity assertion for Auto Unlock key session
IOPMAssertionDeclareSystemActivity for key session returned %x
Power assertion (assertion %ld, state %d)
System wake scheduled for key session (state %d)
Grabbing assertion we already have
Releasing key power assertion
Restarting assertion timer
Assertion timer fired
Invalidating aggressive advertising timer
Created continuity.auth service %@
Default paired device nearby = %@
Sending protobuf (type = %d, size = %lu, data class = %@, data = %@)
IDS send error = %@
Sent message with identifier = %@
Skipping unpaired device: %@
Skipping Unsupported hardware: %@
IDS device identifier not found for device: %@
Space became avaliable
success = %@, identifier = %@, error = %@
No error handler for message sent callback
Incoming protobuf (type = %d, size = %u, data = %@)
Incoming protobuf is nil
didSwitchActivePairedDevice %@
Reset Session: %@
Hash from setup doesn't match preferred LTK
Timeout waiting for LTK response from Companion
Watch LTKs changed (user info: %@)
Incorrect LTK (deviceID: %@, ltk exists: %@, hashes match: %@)
Response missing view syncing state
Pairing key session notifying delegate with error: %@
Received SDUnlockSetupCreateSecret
Pairing canceled for create secret
Pairing Enabled
handleCreateEscrowSecret: %@
Sending key device locked failed
Device using new ranging: %@
Fix worked for pairing session: %@
Fix worked for auth session: %@
Attempting to fix remote LTK
Registration session notifying delegate with error: %@
Received a new rawAdvertisementData %@ from %@ (isReplay:%@, disabledDuplicateFilter:%@)
No current key to decrypt advertisement from %@ with rawAdvertisementData %@. Requesting key
New counter %d is not greater than previous %d from %@ with rawAdvertisementData %@. Requesting new key
Failed to decrypt advertisement with new key from %@ with rawAdvertisementData %@. Discarding advertisement
Failed to decrypt advertisement from %@ with rawAdvertisementData %@. Requesting new key
New counter %d is not greater than previous %d from %@ with rawAdvertisementData %@. New key is same. Replay!
Failed to decrypt advertisement from %@ with rawAdvertisementData %@. New key is same. Replay?
Failed to retrieve new key from %@
Successfully decrypted advertisement (sharing flags + advertisementPayload): %@ => %@, counter: %u
Bonjour name conflict for %@
Bonjour advertise failed (%ld|%d)
Retrying Bonjour advertise in 3 seconds...
Giving up trying to advertise with Bonjour
Bonjour advertise %@ started
SDAirDropPublisher: dataFromTXTRecordDictionary returned nil
Bonjour advertise %@
SDAirDropPublisher: CFNetServiceRegisterWithOptions returned (%ld, %d)
SDAirDropPublisher: copyAirDropID returned NULL
Bonjour advertise %@ stopped
Created session (OS version: %@, build: %@, device: %@)
Updated timeouts (responseTimeout: %ld, responseTimeoutFromServer: %@, messageTimeout: %ld, messageTimeoutFromServer: %@)
Passcode can't unlock keybag
Invalid parameters (passcode = %@)
Internet Sharing enabled
Not enabling, view not syncing
Device is placeholder
Mac not IDS registered
Response timer fired
Pairing lock session notifying delegate with error: %@
Restarting LTK timer
Invalidate LTK timer
Timed out waiting for LTK to sync
Received SDAutoUnlockMessageTypePairingKeyDeviceLocked
Received SDUnlockSetupSessionCreated
Received SDUnlockSetupCreateRecord
Not notified of locked device, session canceled
Pairing session canceled for session created
Received failure reasons %d
Watch missing LTK and is unable to communicate with Companion to potentially sync it
Watch missing LTK for Mac
Watch has old LTK for Mac
Error in session created response: %d
Pairing session version is %d
Remote LTK Hash: %@
Pairing session canceled for session request
Setup received response from old watch (version: %d)
Setup received response from new watch (version: %d)
AKS session invalid
LTK invalid (exists: %@, hash matches: %@)
handleEscrowSessionRequest: %@
Remote LTK does not exist
handleSetupCreateRecord: %@
Enabled for device: %@
Waiting for cloud pairing (Watch ID: %@, Companion ID: %@)
Missing proxy companion IDS ID -- this shouldn't happen
Retrying cloud pairing for specific devices %@
Unlock not enabled and cloud pairing not syncing after pairing (device: %@)
Sending SDUnlockSetupRequest %@
Sending SDUnlockSetupCreateSecret
Received ACK (identifier: %@, setup ID: %@, token ID: %@)
FileTransferSucceeded: %{private}@
FileTransferFailed: %{private}@
AirDropPeerDiscoveredInfo: %{private}@
AirDropSessionInfo: %{private}@
ShareSheetActivityType: %@
Failed to get app links with error %@
Posting "%@" authenticated Siri by Apple Watch (device ID: %@)
Posting "%@" unlocked by Apple Watch (device ID: %@)
Restarting notification timer
Notification timer fired
Invaliding suggestion scan timer
BT address not available, force random AirDrop ID
Random AirDrop ID requested
Current AirDrop ID is %s
CNMonogrammer monogramForContact:isContactImage: returned nil for %@
No icon data for node with id = %@
copyCertificateChainFromTrust: SecTrustEvaluate result is %d
copyCertificateChainFromTrust: SecTrustGetCertificateCount returned %d
copyCertificateChainFromTrust: SecTrustEvaluateWithError failed %@
copyCertificateChainFromTrust: SecTrustRef is NULL
Validation record data for %@ not available
Validation record data verification failed for %@
Validation record for %@ is nil
Validation record altDSID for %@ is zero length
Certificate chain for %@ is empty
Certificate chain not trusted. SFAppleIDVerifyCertificateChainSync for %@ failed with error %d
SFAppleIDCommonNameForCertificate for %@ failed with error %d
%@ doesn't match %@ for %@
Hashes in validation record: Email=[%@], Phone=[%@]
Hashes in validation record are not recognized.
Validation record data is accepted for %@
Contact information not available for %@
Unable to verify identity for %{private}@
Verified identity has a null email or phone (should never happen) %{private}@
storeFilesCopied: kSFOperationFilesKey is missing
storeFilesCopied: CFNumberGetValue failed
Icon for node with id = %@: iconDataSize = %ld preferVibrant = %d isContactImage = %d
Icon too small for node with id = %@
No contact for node with id = %@
Got verified identity for %@ (%{private}@)
verifiedIdentityForCertificateChain failed for %@ (%{private}@) with error %@
Missing Apple ID already presented
Present missing Apple ID alert
Couldn't put up the missing Apple ID alert! (error = %d)
Missing Apple ID notification response handler called -> responseFlags (%d)
Request to open iCloud settings
Received continuation payload sent notification with %lu clients, activity ID = %@
Activity not stream activity, not publishing
Added connected stream, total = %ld
Streams are being requested for bonjour name = %@
Failed to create stream handler
Failed to create net service
Service does not have a bonjour name
Wi-Fi not enabled on local iOS device
Removed connected streams, total = %ld
Restarting publish timer
Publish timer fired, no more connected streams
Publishing net service
Could not create NSNetService
No stream ID when trying to publish
Already publishing
Unpublishing
Added service to publisher %@ with identifier %@
Service has already been added
Removed stream support for activity with identifier = %@
No more activities that support streams
Published net service = %@
Failed to published net service = %@, errorDict = %@
Republishing service
Publisher stopped publishing
Net service did accept streams
Could not create stream handler, other side should be timing out
No manager for received ID = %@, managers = %@
Using phoneAutoUnlockWatchMotionActivityWindowSeconds %d
Activity start date %@
Motion activity activities: %{private}@
activity error: %@
Device off wrist, not checking past activity state
Using phoneAutoUnlockWatchStepCountWindowSeconds %ld
Step start date %@
no step data, error %@
Device off wrist, not checking past step state
Accelerometer changed (base: (%@), new: (%@), diff: %d)
Accelerometer motion detected with sum change: %d
Using accelerometer motion
Activity changed %@
Past motion activities %@
Comparing motion dates (motion start: %@, current: %@)
Comparing motion date to now (motion start: %@, now: %@)
Activity motion detected
Using activity motion
Activity threshold is %d
Comparing motion dates (motion start: %@, end: %@, elapsed: %{private}d, need: %d)
Step activity threshold is %d
step count: %{private}@
Step activity detected. Steps: %{private}d
Not enough step data. Steps: %{private}d, threshold: %d
Detected motion %@
Checked step data: %@, checked activity data: %@
Restarting motion timer
Motion timer fired
Invalidating motion timer
SDXPCHelperConnection invalidated in %@
SDAirDropClient %@
Got Discover response from %@
SDAirDropClient: Discover response has no content
Got Ask response from %@
SDAirDropClient: Ask response has no content
Got Upload response from %@
SDAirDropClient: didReceiveResponse unknown operation
SDAirDropClient: didReceiveResponse operation is NULL
SDAirDropClient: didReceiveResponse unknown status code %ld
SDAirDropClient: storePropertyValue value for key %@ is invalid
SDAirDropClient: storeDataValue value for key %@ is invalid
SDAirDropClient: storeStringValue value for key %@ is invalid
SDAirDropClient: CFPropertyListCreateWithData returned invalid dictionary
parseAskResponse: CFPropertyListCreateWithData %@
parseDiscoverResponse: CFPropertyListCreateWithData %@
Retry %s request for %@
Connection to %@ canceled (%@)
Connection to %@ failed (%@)
SDAirDropClient: receiver is not trusted
### Cannot get receiver's public key, no AppleID
### Cannot get receiver's public key, no cached cert
### Cannot get receiver's public key from cached cert
AirDrop sending to %@ over %s
SDAirDropClient: if_indextoname(%d) failed
AirDrop sending to %@ over IPv6
AirDrop sending to %@ over IPv4
NSURLSessionTaskTransactionMetrics count %lu is not expected, expecting 1
Connected to %@ from [%@] => [%@]
Failed to validate Apple ID certificate of receiver %@
Validated Apple ID certificate of receiver %@
SDAirDropClient: sending client certificate to %@
SDAirDropClient: intermediate certificate not available. Sending to %@ with no Apple ID certificate
SDAirDropClient: identity not available. Sending to %@ with no Apple ID certificate
SDAirDropClient: authenticationMethod returned %@
SDAirDropClient: needNewBodyStream invoked for task %@
Bonjour resolved %@ in %d ms
%s %@ at %@
Bonjour resolve %@ failed (%@)
Ask request sender bundle ID: %@
SDAirDropClient: Unhandled compression type [%@], assuming GZip
Sending %@ request to %@
SDAirDropClient: CFURLCreateWithFileSystemPathRelativeToBase returned NULL
SDAirDropClient: CFURLCopyHostName returned NULL
SDAirDropClient: copyUserFolder returned NULL
SDAirDropClient: CFPropertyListWrite %@
SDAirDropClient: CFWriteStreamOpen failed
SDAirDropClient: CFWriteStreamCreateWithFile returned NULL
SDAirDropClient: CFURLCreateFromFileSystemRepresentation(%s) returned NULL
SDAirDropClient: realpath(%s) failed with error %d
SDAirDropClient: CFURLGetFileSystemRepresentation(%@) failed
SDAirDropClient: CFURLCreateFilePathURL %@
SDAirDropClient: internetLocationFile returned nil
SDAirDropClient: splitOutFileURLs url "%s" has no scheme
SDAirDropClient: validateAirDropItems _items is empty or NULL
Validating %lu items to send: %@
validateAirDropItems couldn't validate fileURL: %@ with error: %@
validateAirDropItems validated %lu/%lu items for transfer
SDAirDropClient: kCFURLTypeIdentifierKey %@
SDAirDropClient: kCFURLNameKey %@
SDAirDropClient: startPublishingProgress sessionID is NULL
created temporary directory %@
failed to create temporary directory %@
startSending to: "%@", validated %lu airdrop items. properties: %@
startSending, did NOT validate airdrop items. Error: %@. properties: %@
Starting file coordination for %@
SDAirDropClient: coordinateAccessWithIntents(%@) for %lu files %@ failed %@
Starting to send %lu files to "%@", fileURLs: %@
SDAirDropClient: splitOutFileURLs failed
Start transaction to "%@"
SDAirDropClient: removeObjectAtURL(%@) failed %@
Removing transfer with id %@
Cleaning up transfer with id %@
New incoming transfer %@ with items: %@
Progress event for recordID %@: transfer not found, ignoring.
Cancel event for recordID %@: transfer not found, ignoring.
Error event %@ for recordID %@
Error event for recordID %@: transfer not found, ignoring
Finished event for recordID %@: transfer not found, ignoring.
User response: %@ for transfer with id %@
Unhandled user response
No handler for transfer with id %@, ignore action triggered event for action %@
New connection established %@
Connection invalidated %@
Setting handler of class %@ for transfer with id %@
Handler %@ failed for transfer with id %@
Transfer with id %@ failed with reason %@
Set transfer state %@ -> %@ for transfer with id %@
Cleaning up URL %@
Remove URL failed with error %@
Loading all persisted transfers
Receive data at %@ is not valid
Started advertising %@ as %@ with options %@
Goodbye packet advertising interrupted
%@ advertising: advertisingEnabled %@, currentConsoleUser %@, state %s, shouldNotAdvertiseRequestersCount %lu, shouldStart %@
%s %@ + "%@"
%s %@ - "%@"
Advertising client arrived
Advertising client went away
Stopping for user %d on sleep
Stopping for user %d on logout
Grabbing power assertion to keep advertising until told to stop
IOPMAssertionCreateWithProperties returned %x
Trying to grab power assertion while we already have one
Releasing power assertion
%@ startGoodbyeTimer with time interval %.2f
%@ invalidateGoodbyeTimer
%@ goodbyeTimeoutFired
Ignoring currentAdvertisementPayload because it is of incorrect size %d, should be %d
Encrypted (sharing flags + advertisementPayload): %@ => %@, counter %u
Sharing/SDActivityAdvertiser/continuityDidUpdateState
Did update state to %s
continuityDidUpdateState: Powered on
continuityDidUpdateState: Powered off
continuityDidUpdateState: Unknown
continuityDidUpdateState: Resetting
Sharing/SDActivityAdvertiser/continuityDidStartAdvertisingOfType
IDSContinuity didStartAdvertisingOfType: %s
Sharing/SDActivityAdvertiser/continuityDidStopAdvertisingOfType
IDSContinuity didStopAdvertisingOfType: %s
Sharing/SDActivityAdvertiser/continuityDidStopAdvertisingOfTypeWithError
IDSContinuity didStopAdvertisingOfType: %s withError: %@
Sharing/SDActivityAdvertiser/continuityDidFailToStartAdvertisingOfType
Did fail to start advertising for %s (%@)
Request to advertise %@ with options %@
Advertisement contents does not differ from current, continuing previous advertising
Handoff is disabled in settings on this device
Handoff is disabled until first unlock has occurred
Real Handoff is disabled since alwaysSendPayload is enabled
Failed to find any valid cloud paired devices
List of Activity Continuation devices changed %@
nearbyDevicesChanged %@
Session manager starting
Resetting in progress state
Auto Unlock eligible devices %@
Device unlocked on start up
### Device not unlocked on start up (state: %ld)
Device unlocked on start up after retry
### Device not unlocked on start up after retry (state: %ld)
Added SessionManager observer %@
Removed SessionManager observer %@
Calling key device locked %@
Calling enabled device %@
### Calling failed to enable %@
Calling began %@
Calling completed %@
### Calling failed %@
Repair cloud pairing if necessary
Unsupported hardware model identifier:%@
Unsupported hardware/software model identifier:%@, version:%@
Devices %@
Devices with description %@
Ranging supported: %@ for model: %@
### No eligible devices: Auto Unlock disabled due to profile
### Unable to enable Auto Unlock due to profile
Enabling device %@, id %@
Cancel enabling all devices
Cancel enabling device %@
No pairing lock session to cancel (device id: %@)
Disabling Auto Unlock (device: %@)
Begin %@: %@
Test mode attempt
Test Mode: Token: %@
Test Mode: Unable to create hint token
Test Mode: Passcode missing for test mode
SPI attempt overlap with prewarm attempt
Attempt started %@, error %@
Starting attempt (attempt count: %ld, bluetooth devices: %ld, time since last wake: %ld seconds, sleep type: %@)
### No enabled devices for attempt
### FaceID disabled. Disabling Auto Unlock for all key devices
### Interfaces off (bluetooth off: %@, wifi off: %@)
### Mac is internet sharing
### Device is not nearby
### Watch needs to be unlocked
### Reached limit of attempts (attempt count: %d)
### Device needs to be unlocked through another method first (unlocked recently: %@, last locked by relock %@)
Connecting to watches: %@
Attempt already in progress (progress state: %@)
Beginning prewarming of unlock attempt
attemptAutoUnlockForSiri
Calling attemptAutoUnlockWithoutNotifyingWatch
Complete Auto Unlock, Post Notification: %@
Sending Unlock Confirmation, Suppress Notification
Sending Unlock Confirmation, Show Notification
Invalidating attempt
Posting state changed: Attempt invalidated
Updating WiFi state after attempt
Canceling attempt in progress 
 device unlocked
Log Unintentional AutoUnlock Attempt: %@
Do Not Post Alert Again
Incremented attempt count %d
Decrementing
Sending relock request
### Unable to send relock request: %@
State requested (attempt in progress: %@, device: %@, state: %@)
Disabling (device ID: %@, pairingID: %@)
Sending %@ %@
### Error sending disable message (device id: %@, error: %@)
Received SDUnlockDisable (device ID: %@, pairingID: %@)
Received SDUnlockDisable but device ID is NULL
### Received disable while enabling device but pairing IDs don't match (lock device: %@, received pairing ID: %@, session ID: %@)
Not disabling (local pairingID: %@, received pairingID: %@)
Removing remote LTK for %@
Pairing lock session in progress %@
Pairing key session in progress %@
### Missing IDS device ID for Mac requesting pairing
Lock session setting context %@
Auth lock session in progress %@
Auth key session in progress %@
Already sent trigger to device
Clearing all keys with tokens
Invalidating existing session: %@
Registration key session in progress %@
### Missing IDS device ID for key registration
Registration lock session in progress %@
### Missing IDS device ID for lock registration
Initialized remote peer to %@
Could not find remote LTK for active device: %@
Invalidating existing registration session: %@
Pairing session canceled (device ID: %@, session ID: %@)
Removing key session %@
Removed key session %@
Received error while registering key (%@), removing from list of registered devices.
Local key registration session failed, setting needsArming = YES
Canceled at end
Session failed (id: %@, error: %@, outstanding sessions: %@)
Skipped donating positive mask signal due to default phoneAutoUnlockSkipPrewarmOnNextUnlock
### Missing authorization token: %d
### Unexpected attempt type: %d
Wi-Fi powered on: %@
Posting state changed: Scan stopped - session in progress
Already connected (new device: %@, attempt device: %@)
### Discovered peer but Wi-Fi is off
Locking device on confirmation failed error
Received relock request
Relock message if from %@ but current remote peer is %@
Incoming message missing info (session = %@, wrapper = %@, data = %@)
Scanner invalidated
Scanning for bluetooth IDs %@
SFBLEScanner timer fired %@
Using BLE scan timeout %.2f seconds
Scanner started with timeout %.2f seconds
Scanner error: %@
Scanner invalidated before activate
Invalidating scanner
Found BLE peer: %@
Restarting scan timer
Scan timer fired
Invalidating scan timer
Advertising for Auto Unlock: %@ (local: %@, background: %@, watch locked: %@, suggestion: %@)
Received message from bleDevice %@, useBTPipe %d
Received wrapper %@
Received wrapper %@, session ID %@
No session for session ID: %@
Could not create session ID
Missing session ID (has session ID %@, length %ld)
Failed to decrypt message (error code: %ld)
Sending %@ Wrapper %@
Completed sending decryption failed message (error: %@)
Keybag state changed to %@
User declined to enable Phone Auto Unlock
AutoUnlock Enabled: %@, behavior changed after upgrade: %@
Posting notification with text %@
Resetting upsell notification defaults
Keeping upsell notification defaults
Resetting attempt count
Canceling attempt in progress 
 device screen turned off
Checking if key originated registration is needed
Beginning key originated registration
Could not find remote LTK for %@
Device entered bio lockout, resetting all key devices
Delay releasing language assertion for Auto Relock for %ld seconds
Release language assertion for Auto Relock
### Requesting Relock Due To Magnet Link Disconnect
Not Requesting Relock, deviceCurrentlyUnlockedByWatch: %@
Magnet Link Timer Activated
Cancelled Magnet Link Timer
Bluetooth power changed (interface on: %@)
### Bluetooth error count: %d
Already presented Bluetooth off error
### WiFi error count: %d
Already presented Wi-Fi off error
Generating state dump
Rapport Browser start, current request count %d
Rapport Browser stop, current request count %d
Rapport Browser start
Enabling Stranger Discovery
Rapport found person %@
Rapport person %@ changed %@
Rapport lost person %@
Rapport people discovery interrupted
Rapport people discovery invalidated
Rapport people discovery failed to activate with error %@
Rapport people discovery activated. Already discovered people %d
Rapport Browser stop
SDRapportBrowser: createSFNodeFromMyRPDevice failed for %@
SDRapportBrowser: Removing SFNode %@ for %@
SDRapportBrowser: Adding SFNode %@ for %@
SDRapportBrowser: createSFNodeFromRPPerson failed for %@
SDRapportBrowser: Failed to add SFNode because accountID is nil for %@
SDRapportBrowser: Removing SFNode %@ for RPPerson %@
SDRapportBrowser: IDS device info for %@ may be inaccurate. Don't use it for AirDrop
SDRapportBrowser: couldn't find contact with accountID for %@
SDRapportBrowser: meCard is nil
No icon data for model identifier: %@
AirDrop server initialized
AirDrop server invalidation complete
New AirDrop connection %p
Closed AirDrop connection %p
AirDrop server didReceiveError %@
Trying again with random port number
AirDrop server idle timeout
AirDrop status changed
Apple ID account info changed
Apple ID account changed
Stopping AirDrop server for user %d on sleep
Starting AirDrop server for user %d on wake
Starting AirDrop server for user %d on login
Stopping AirDrop server for user %d on logout
Finder %@ AirDrop
Discoverable mode changed to %@
Device first unlock
Screen turned %@
Auto-trigger server
Scanning mode %@
Scanning mode off: console=%d, discoverable=%d, screenOn=%d, unlockedOnce=%d
AirDrop updateServerState with nil delegate
SDAirDropServer: intermediate certificate not available
AirDrop using self-signed certificate
AirDrop server enabled on port %@
SDAirDropServer: _kCFHTTPServerServicePort is NULL
SDAirDropServer: _CFHTTPServerCreateService returned NULL
AirDrop server started
Invalidated AirDrop server
kSFOperationEventErrorOccurred
SDAirDropListener UNHANDLED EVENT %@ [%d] %@
IP Address = %@, Interface = %@
Create destination for %@ failed %@
### %s - dropped URL:[%@]
### %s -- URL does not exist on filesystem:[%@]
Ignoring advertisment data as it is of incorrect size %lu, expected %zu
Adding observer for enabling device %@
Adding observer for auto unlock attempt %@
Adding observer for auto unlock attempt without notifying watch %@
Adding observer for auto unlock attempt for Siri %@
Cancel Auto Unlock: This process does not have permission to perform this action
Request relock Auto Unlock: This process does not have permission to perform this action
Began: Calling client proxy %@
Completed: Calling client proxy %@
Client (%@-%d) does not have unlock manager entitlement = %@
Client bundle ID: %@
%s transferIdentifier: %@
SDAirDropListener didReceiveError %@
SDAirDropReceiveManager: Received event %@ for transfer %@
SDNetworkOperationCallBack (event = %@, recordID = %@, progress = %f)
SDNetworkOperationCallBack (event = %@, recordID = %@ , error = %@)
SDNetworkOperationDelegate UNHANDLED EVENT %@ [%d] %@
Updating enable state in dynamic store: %@
Updating global dynamic store (key: %@, value: %@)
Updating enabled dynamic store (key: %@, value: %@)
Failed to set global enabled state %d
Enabled dictionary exists %@
Updating in progress state in dynamic store: %@
Failed to set in progress state %d
Last machine wake date %@
IDS server bag contains keys (timeout key: %@, server timeout: %@, timeout percentage %@)
Using server timeout (random number: %ld)
Using default timeout (random number: %ld)
Using default value for timeout (default value: %ld, timeout key: %@, server timeout: %@, timeout percentage %@)
UTI %@ for modelIdentifier %@
Description %@
Watch Size %@
Series %@
Pairing has armed: %@
Beginning registration for deviceID: %@
Unlock has armed: %@
Unlock did not arm %@ current state is %@
createURL: CFURLSetResourcePropertyForKey %@
copyImageData: CGImageDestinationFinalize failed
copyImageData: CGImageDestinationCreateWithData returned NULL
createCGImageWithDataInternal: CGImageSourceCreateImageAtIndex (requireJPEG2000) returned NULL
createCGImageWithDataInternal: CGImageSourceGetType image format invalid
createCGImageWithDataInternal: CGImageSourceCreateImageAtIndex returned NULL
createCGImageWithDataInternal: CGImageSourceGetCount returned zero
createCGImageWithDataInternal: CGImageSourceCreateWithData returned NULL
Proxy available for unlock
Sending SDAutoUnlockMessageTypeProxyTrigger
monogramImagesForMultipleContacts called with nil contact, will use fallback.
SDNetworkResolver: bonjourCallBack returned %d
Attempted to resolve a server with unknown protocol
Attempted to resolve a server with no URL
SDNetworkOperation: resume HTTPServerConnection is invalid
SDNetworkOperation: resume HTTPServerConnection is NULL
SDXPCSession:  Starting xpc session....
SDServerBrowser: AirDrop transfer requested notification received
Delayed Bonjour browsing requested
incrementTransfersInitiated: No AirDrop browsers are running
incrementTransfersCompleted: No AirDrop browsers are running
Unrecognized browser mode %d
Failed to get airdrop available applications for opening %@
Failed to get available applications for opening %@
Generic handler found available applications %@
Enqueuing resource open operation for %@, with URL: %@
Resource open operation completed for %@
%s %@ to %@
%s %@ (%@)
SDConnectionManager:  XPC connection interrupted
SDConnectionManager:  XPC connection invalidated
Failed to create commpanion service, nil reply
Failed to create commpanion service, nil client proxy
Failed to create commpanion service, nil identifier
Streams are being requested from service = %@
SDAirDropCompressor: CFWriteStreamWrite returned %ld
SDAirDropCompressor: CFReadStreamRead returned %ld
SDAirDropCompressor: CFReadStreamOpen error = %@
SDAirDropCompressor: CFWriteStreamOpen error = %@
Turning compression back on since it took %f seconds to send a block
Not keeping up with network so turning compression off. Compressed send time: %f, uncompressed send time: %f
Turning compression back on. Compressed send time: %f, uncompressed send time: %f
Compression ratio is %f, so turning compression off, at least until the next file
SDAirDropCompressor: executeReadWithAdaptiveCompression error = %@
SDAirDropCompressor: executeWriteWithAdaptiveCompression error = %@
### Receiving credentials via AirDrop not supported on current platform
Local Unique ID:%@
Touch Bar:%@
DSID: %@
Reloading local unique ID: %@
AKS manager adding observers
AKS received Apple Account sign in
AKS received Apple Account sign out
Current console user changed (uid: %d, pid: %d)
AKS session missing keys (device: %@, syncing %@, attestation: %@, local exists %@, local LTK: %{private}@, remote exists %@, remote LTK: %{private}@)
AKS session missing keys (device: %@, local exists %@, local LTK: %{private}@, remote exists %@, remote LTK: %{private}@)
Escrow secret (exists: %@, device ID: %@)
Escrow secret %{private}@
Missing escrow
AKS session missing keys (device: %@, syncing %@, local exists %@, local LTK: %{private}@, remote exists %@, remote LTK: %{private}@)
Escrow secret for authorization (exists: %@, device ID: %@)
Missing escrow for authorization
Missing out variables (message: %p, authTag: %p)
Encryption error %ld
Failed to create random bytes %ld
Session key is missing (device ID: %@
Decrypting with cached device IDs
Decrypting without cached device IDs
Attempting to decrypt message with sorted device IDs %@
Decrypted message (deviceID: %@, length: %ld)
Error decryption failure (device ID: %@, error %ld)
Devices with session keys: %@
Failed to find key with cached devices, trying without cache
No IDS devices for bluetooth ID: %@
Adding existing LTK to new syncing view
Updating version for local LTK
Loaded local LTK: (%@), %{private}@
Unable to load LTK (local device ID: %@)
Local LTK Exists
Generating local LTK
Saved Local LTK (device ID: %@, saved: %@ attested: %@)
New local LTK, clearing remote LTKs and disabling Auto Unlock for all keys
Unable to generate LTK (local device ID: %@, keybag state: %d, setup user: %@)
Checking Local LTKs
Both LTKs missing, generating new LTK
Modern LTK is missing: Storing legacy LTK
Modern LTK is missing: Legacy LTK is invalid, regenerating
Legacy LTK is missing: Storing modern LTK
Legacy LTK is missing: Modern LTK is invalid, regenerating
LTKs match (valid: %@)
LTK Mismatch: Legacy LTK is valid, overwriting modern LTK
LTK Mismatch: Modern LTK is valid, overwriting legacy LTK
LTK Mismatch: Modern LTK is invalid, regenerating
Saved Local LTK after validation check (device ID: %@, saved: %@)
Missing local device ID to check local LTK
Device locked, not checking local LTK
Updating local ltk for sign out
Hash exists but key missing
Keychain devices: %@
Device not in keychain, removing signed key: %@
Trimmed Keychain devices: %@
Updated remote LTKs: %@
Remote LTK data: %{private}@
Not updating remote LTKs because device not first unlocked
Remote LTK needs resigning for pairing for hash
Signing remote LTK (device: %@ LTK: %@, class: %d)
Missing signing info (remoteLTK exists %@, remoteLTK %{private}@, localLTK exists %@, localLTK %{private}@)
Query for attributtes status: %d
Asked to store remote LTK for %@
Overriding existing LTK
Unknown remote key class for device ID: %@
LTK hashes do not match {
device ID: %@, 
requestLTKHash: %@, 
legacyRemoteLTKHash: %@, 
modernRemoteLTKHash: %@
Remote LTK list is empty (remote ltks %@, list %@)
LTK's are mismatched between keychain views (device ID: %@)
Missing ltk for deviceID: %@
Keychain peers %@
LTK waiting to be received
LTK needs to be sent
Nothing queued to be sent, re-added LTK
Unable to find keychain peer (IDS device ID: %@)
Taking keybag assertion
Releasing keybag assertion
Restarting keybag assertion timer
Keybag assertion fired
Restarting waiting for unlock timer
Waiting for unlock timer fired
Invalidating waiting for unlock timer
AKS Manager received unknown type
Escrow secret exists %@
Remote device is iPhone
Disabling feature for device: %@
Disabling pairing for all keys %@
Removing all remote LTKs on sign out
Updating remote LTK for %@
Saved remote LTKs: %@
Error persisting remote LTKs: %@
Error serializing remote LTKs: %@
Creating Remote LTK file
Loaded remote LTKs: %@
Remote LTK Data: %{private}@
Error deserializing LTKs: %@
Error loading LTK file: %@
Reloading pairing records
Saved watch ID to pairing record: %@
Error persisting watch ID to pairing record: %@
Error serializing watch ID to pairing record: %@
Failed to delete legacy watch to companion id file (path: %@, error: %@)
Loaded watch ID to companion ID mapping: %@
Error deserializing watch ID to companion ID mapping: %@
Error loading watch ID to companion ID file: %@
Failed to delete legacy companion id file (path: %@, error: %@)
Loaded companion IDs: %@
Error deserializing companion IDs: %@
Error loading companion IDs file: %@
Error creating Sharing folder for compainon IDs: (path %@, error %@)
Error creating Auto Unlock folder: (path %@, error %@)
Failed to store keychain item (add status:%d, delete status:%d)
Updated keychain item
Added keychain item
Using new secret
Unable to get secret from info (has secret %@, escrow info %{private}@)
Migrating escrow secret
No secret
Received unexpected SecItem error = %d
Deleted escrow secret for device %@
Failed to delete escrow secret: %d
Deleted all escrow secrets
Failed to delete all escrow secrets: %d
Store LTK (ltkInfo exists: %@, ltkInfo: %{private}@, deviceID: %@ attributes: %@, update: %{private}@, add: %{private}@)
Store attested LTK (ltkInfo exists: %@, ltkInfo: %{private}@, deviceID: %@ attributes: %@, update: %{private}@, add: %{private}@)
Failed to delete remote LTK (status: %d, query: %@)
Deleted local attested LTK
Failed to delete local attested LTK: %d
Updating session key (device id: %@)
Cached session keys for devices %@
Device ID missing for session key
Storing Session Key (deviceID: %@ attributes: %{private}@, update: %{private}@, add: %{private}@)
Deleting session key (device ID: %@)
Failed to delete ranging key: %d
Deleting all ranging keys
Deleted all ranging keys
Failed to delete all ranging keys: %d
Query status: %d
Coalescing node %@: %@
No identifier found for node %@
coalescedNodesForNewAvailableNodes: Device ID is not available for %@
Coalesced node %@ not handled
Coalesced node %@ represents nodes %@
Rapport activation failed %@
Request failed %@
Request timed out - no request found for requestIdentifier %@
%@: Encryption key request - Already have request for key %@. Replacing completion block
%@: Preventing encryption key request - Auto Unlock in progress
Requesting Encryption key via Rapport from "%@" %@ with message GUID: %@ and timeout: %d
Sending encryption key request via Rapport %@
Encryption key request %@ with xid %@ via Rapport (%s) failed with error %@
failed to activate link client for destination device: %@ (%@)
Cannot send Handoff encryption key request %@ via Rapport as we found no devices in %@
Sending encryption key request to single of multiple possible destinations.
Encryption key: No device ID generated for device %@ (Devices: %@)
Encryption key: No device found for identifier %@ (Devices: %@)
Requesting Encryption key via IDS from "%@" %@ with message GUID: %@ and timeout: %f
Sending encryption key request via IDS %@
Responding to Handoff encryption key request from "%@" via IDS
No device ID generated for device %@ (Devices: %@) for requestIdentifier %@
%@ %@ %@ %d
Found activity payload in cache for %@ from %@ of size %d
Requesting Handoff payload via Rapport for %@ with message GUID: %@ and timeout: %d
Sending payload request via Rapport %@
Handoff payload request %@ with xid %@ via Rapport (%s) failed with error %@
Cannot send Handoff payload request %@ via Rapport as we found no devices in %@
Sending handoff payload request via IDS to single of multiple possible destinations.
No device ID generated for device %@ (Devices: %@)
No device found for identifier %@ (Devices: %@)
Requesting Handoff payload via IDS for %@ with message GUID: %@ and timeout: %d
Sending payload request via IDS %@ to %@
Ignoring request from %@ via %@ for key with requestIdentifier %@ as we replied only %@ ago
Received Handoff encryption key request from "%@" via Rapport with requestIdentifier %@, xid %@
Responding to Handoff encryption key request from "%@" via Rapport
Received Handoff encryption key request from "%@" via IDS with requestIdentifier %@
Received a new Handoff encryption key from "%@" via Rapport (%s) with requestIdentifier %@, xid %@
Received a new Handoff encryption key from "%@" via IDS with requestIdentifier %@
deviceIdentifier %@ does not match %@
Attempting to use unrequested encryption key with requestIdentifier %@ from %@
Discarding unrequested encryption key as it is missing the requestIdentifier %@ or device %@
Received Handoff payload request from "%@" via Rapport with requestIdentifier %@, xid %@
Responding to Handoff payload request from "%@" via Rapport
Sending payload reply %@
Payload reply record %@
No IDS device found for identifier %@ (Devices: %@)
Received handoff payload request via %@ from "%@" (%@) with requestIdentifier %@ command=%@ for advertisementPayload %@
Ready to respond to handoff request via %@ from "%@" (%@) with requestIdentifier %@ for advertisementPayload %@, command: %@. RTT:%@
Responding to request via %@ from %@ with requestIdentifier %@ for advertisementPayload %@ with an empty payload
Responding to request via %@ from %@ with requestIdentifier %@ for advertisementPayload %@ with payload of size %d
Responding to Handoff payload request from "%@" via IDS
Received Handoff payload reply from "%@" via Rapport (%s) with requestIdentifier %@, xid %@
Received Handoff payload reply from "%@" via IDS with requestIdentifier %@
Received requested Handoff payload via %@ from "%@" (%@) for %@ with activity payload of size %ld for requestIdentifier %@ (%@). RTT:%@
Activity payload received via %@ for requestIdentifier %@ not/no longer wanted from %@
Incoming unhandled protobuf, should never have been called!! protobuf:%@ context:%@
Incoming unhandled data, should never have been called!! context:%@
Incoming unhandled message, should never have been called!! message:%@
%@ %@ (%@)
Could not decode protobuf data (%@)
Could not encode protobuf data from %@ (%@)
Not replacing current key %@ with received key %@
%s creating client: %@
Got payload to send of size %d with activityIdentifier:%@ for advertisementPayload:%@
Not sending %@ to device as we could not get deviceID: %@
Not sending %@ to device as it has no nsuuid/BTUUID: %@
Sending Handoff %@advertisement
to %@, with payload of size %ld
from %@, is final:%@, %@
SDNetworkEjecter: stop
stringFromXPCObject result is not a string
arrayFromXPCObject result is not an array
numberFromXPCObject result is not a number or boolean
SFBrowserCallBack (<%p>{kind = %@}, node = %p, error = %d)
%@ is not entitled to do AirDrop discovery
SFOperationCallBack (<%p>{kind = %@}, event = %@, results = %p)
%@ is not entitled to get the AirDrop discoverable mode
kSharingBrowserCreate node is NULL
kSharingBrowserCreate kind is NULL
openNode returned %d
closeNode returned %d
addNode returned %d
removeNode returned %d
handleBrowserMessage browser is NULL
handleBrowserMessage functionName is NULL
kSharingOperationCreate operation is NULL
kSharingOperationCreate kind is NULL
kSharingOperationResume imageData is invalid
%@ is not entitled to set the AirDrop discoverable mode
kSharingOperationSetProperty name is NULL
handleOperationMessage operation is NULL
handleOperationMessage functionName is NULL
XPC_ERROR_CONNECTION_INVALID <%p>
Lost connection to client <%p>
XPC_ERROR_TERMINATION_IMMINENT <%p>
handleNewConnection unknown XPC error <%p>
handleNewConnection unknown object
handleNewConnection unknown XPC type
XPC_ERROR_TERMINATION_IMMINENT
Unknown XPC error
Unknown XPC type
Device Information: %@
SharingServices using high priority queue
Bonjour browser failed to find awdl0 interface
SDBonjourBrowser: DNSServiceSetDispatchQueue returned %d
Bonjour discovery started
SDBonjourBrowser: DNSServiceBrowse returned %d
SDBonjourBrowser: DNSServiceCreateConnection returned %d
SDBonjourBrowser: start requested
Bonjour discovery stopped
SDBonjourBrowser: invalidate requested
Bonjour discovered %@ PTR over %@ in %d ms
SDBonjourBrowser: DNSServiceQueryRecord returned %d
SDBonjourBrowser: CFStringGetCString failed to get fullName
SDBonjourBrowser: _SDServiceInstanceName returned nil
Bonjour removed %@
Discovered %@ identity of %@ accountID %{private}@ model %{private}@ in %d ms
Failed to update RPIdentity because emailOrPhone is empty
Failed to update RPIdentity because there are no contacts for %{private}@
Skipped RPIdentity update because contact %{private}@ is blocked
Didn't update RPIdentity because deviceIRKData is missing for %{private}@
Didn't update RPIdentity because edPKData is missing for %{private}@
Didn't update RPIdentity because idsDeviceID is missing for %{private}@
Failed to update RPIdentity because contactID is nil for %{private}@
Updating RPIdentity for %{private}@
Failed to update RPIdentity for %@ with error %@
Updated RPIdentity for %@
Identity discovery denied for %@
Discovery validation failed because SecTrustRef is NULL
%@: UNHANDLED EVENT %@ [%d] %@
Bonjour discovered %@ TXT record in %d ms
SDBonjourBrowse:  failed to copy identity for %@ with error %@
AWDL link state changed
SDBonjourBrowser: handleBrowseCallBack returned %d
SDBonjourBrowser: handleQueryCallBack called with unexpected type %d
SDBonjourBrowser: handleQueryCallBack returned %d
Could not create step data
Could not create AKS session
Device is locked
Could not parse registration request
Successfully registered local device
Could not confirm session
Registration step missing step data
Received SDAutoUnlockMessageTypeRegistrationStep
AirDrop destination set to %@
SDAirDropFileZipper: BOMBomInsertFSObject("%s") failed
SDAirDropFileZipper: BOMFSObjectNewFromPath("%s") failed
SDAirDropFileZipper: Placeholder filename %@ already exists at destination: %@. Creating as new filename: %@
SDAirDropFileZipper: createPlaceholderFiles conflict not handled
SDAirDropFileZipper: CFURLCopyLastPathComponent returned NULL
SDAirDropFileZipper: createPlaceholder %@
SDAirDropFileZipper: createPlaceholderFiles originalName "%s" contains illegal characters
SDAirDropFileZipper: createPlaceholderFiles originalName[%d] is nil
SDAirDropFileZipper: createPlaceholderFiles file count is zero
SDAirDropFileZipper: createPlaceholderFiles placeholderFiles is NULL
SDAirDropFileZipper: moveObjectAtURL2 %@
SDAirDropFileZipper: removeObjectAtURL %@
SDAirDropFileZipper: moveObjectAtURL %@
SDAirDropFileZipper: BOMCopierCopyWithOptions returned %d
SDAirDropFileZipper: createPlaceholderFiles failed
SDAirDropFileZipper: %lu files saved: %@
SDAirDropFileZipper: No files were found
SDAirDropFileZipper: startBomCopy %s
SDAirDropFileZipper: start adding files to BOM
SDAirDropFileZipper: done adding files to BOM
SDAirDropZipper: delegate is nil, initBomWithFiles failed
SDAirDropFileZipper: copyCommonParent(%@) returned NULL
SDAirDropFileZipper: BOMBomInsertFSObject failed
SDAirDropFileZipper: BOMFSObjectNewFromPath failed
SDAirDropFileZipper: BOMBomNew returned NULL
SDAirDropFileZipper: _bomPath is nil
SDAirDropFileZipper: CFURLCopyAbsoluteURL returned NULL
SDAirDropFileZipper: CFURLCreateWithFileSystemPathRelativeToBase returned NULL
SDAirDropFileZipper: copyUserFolder returned NULL
Zip: AirDrop is using CPIO archiving
Zip: AirDrop is using PKZip %s
Zip: AirDrop is using CPIO archiving with adaptive compression
Zip: AirDrop is using CPIO archiving with gzip compression
SDAirDropFileZipper: CFWriteStreamOpen failed
SDAirDropFileZipper: initBomWithFiles failed
Unzip: AirDrop is using PKZip compression
Unzip: AirDrop is using CPIO archiving with adaptive compression
Unzip: AirDrop is using CPIO archiving with auto compression detection
SDAirDropFileZipper: CFReadStreamOpen failed
SDAirDropFileZipper: _SDUniqueTemporaryFolder failed %@
SDAirDropFileZipper: bomCopierFileErrorPtr - %s, errno = %d (%s)
SDAirDropFileZipper: bomCopierFatalErrorPtr - %s
SDAirDropFileZipper: bomCopierFatalFileErrorPtr - %s (%d)
SDAirDropFileZipper: bomCopierFileConflictErrorPtr - %s
Failed to initialize key from data. Incorrect size %d
Generated new advertising encryption key %@, and saved to keychain
%@: Loaded advertising encryption key and bumped last used counter from %d by %d, then persisted key to keychain %@
Did not load advertising encryption key from keychain as the bumped last used counter exceeds max value
Failed to deserialize encryption key from keychain (%@)
Bumped advertising encryption key counter value from %ld to %ld
Generating new advertising encryption key as the bumped value of the old one exceeds max value
%@: Encryption key invalid %@
%@: Persisted last used counter and key to keychain %@
Saved decryption key %@ for %@ to keychain
Failed to save decryption key %@ for %@ to keychain
Loaded decryption key %@ for %@ from keychain
Converting key to wrapped key
Not wrapping key as wrapping key is unavailable
Failed to serialize encryption key from %@ (%@)
Failed to deserialize key (%@)
Failed to unwrap key cause key data is missing
Could not unwrap key cause wrapping key is not available
Converting wrapped key to key
Successfully cleared in-memory key caches
Successfully deleted encryption key:%@, decryption keys:%@
SecItemCopyMatching wrappingKeyQuery failed with error %d
SecItemCopyMatching encryptionKeyQuery failed with error %d
SecItemCopyMatching decryptionKeysQuery failed with error %d
Loaded wrapping key from keychain
No wrapping key found in keychain
SecItemCopyMatching baseDict failed with error %d
Failed to update keychain item with error %d for query %@ attributesToUpdate %@
Failed to delete keychain item with error %d for query %@
Failed to add keychain item with error %d for attributes %@
%@ Deallocating Stream Handler
Creating network streams
%@ Closing input stream
%@ Closing output stream
Network streams closed
Stream Stats: total bytes transferred = %ld, duration = %g%@
Starting open timer with timeout = %d
Open timer fired with input stream status = %d, output stream status = %d, closing streams
Streams invalidating open timer
Applying tls settings
Could not get cert chain to encrypt streams (intermediate cert not available)
Could not get identity to encrypt streams (identity not available)
Accounts match
Accounts do not match
Accounts do not match, my account identifier (common name) is not available
SFAppleIDCommonNameForCertificate failed with error %d
Client cert chain not trusted. SFAppleIDVerifyCertificateChainSync failed with err=%d
Cert chain from remote trust does is empty
Could not get trust from open stream
Network stream received error = %@
setsockopt failed: %s
Stream returned invalid socket %d
Network streams opened
Time to open streams = %f
Failed to evaluate certificate
No space available on network output stream, queuing stream data
Delegate does not respond to streamHandler:didReceiveStreamData:
Could not create stream data from read buffer
Total read from network = %ld
Read zero bytes from the network stream
Client buffer full, waiting to read from network
Total written to network = %ld
Error writing to network output stream, writeLength = %ld
No output stream data to write to network
Method not supported
No space available on network output stream, queuing message
Could not create message payload
Unexpected stream handler input state
Read chunk = %ld, total = %ld%@
Read more bytes than the incoming message header declared
Read error = %s
Zero bytes read from input stream
Expected message length = %d
Finished writing message of size = %lu
Wrote too many bytes (byteIndex = %d, message length = %d)
Failed to write message = %s
Zero bytes written for message
No messages to write in queue
No handler for message write
Incorrect version number in header
Sharing/SDNotificationManager/didReceiveNotificationResponse/homepod
Sharing/SDNotificationManager/didReceiveNotificationResponse/tv
Sharing/SDNotificationManager/didReceiveNotificationResponse/watch
LTKs exists
Overriding existing long term keys (local %@, remote %@)
Deleted LTKs for %@
KeybagUUIDs match
KeybagUUIDs have changed
Resaving LTKs with backup exclusion
Saved LTKs %@
Set backup key
Error setting backup exclusion key: %@
Error persisting LTKs: %@
Error serializing LTKs: %@
Save missing info (local %@, remote %@, pairing store path %@)
Loaded LTKs
 local %@
remote %@
keybag UUID %@)
Failed to delete LTKs %@
LTKs already deleted
Deleted LTKs
Couldn't delete LTKs, no storage path: %@
Error creating unlock storage folder: (pairing path %@, error %@)
Unable to find LTK file (error: %@)
Migrating old keys to %@
Failed to store escrow data (add status:%d, delete status:%d)
Updated escrow data
Added escrow data
Escrow data exist:%@, pairing id:%@
Escrow data hasn't been migrated
Failed to delete escrow record: %d
Legacy escrow data exist:%@
Migrating escrow data
Migrating escrow data in new format failed
Failed to delete escrow record = %d
IDS Devices: %@
Clearing Auto Unlock device cache
Skipping device in blacklist (device ID: %@)
Updating last seen date
Watch added to list -- updating watchCurrentlyInList and lastSeenWatchDate
Updating existed in list
Last watch removed from list -- updating watchCurrentlyInList and lastSeenWatchDate
Activity service has a Watch updating last seen date
Skipping enabled device in blacklist (device ID: %@)
Using cached device: %@
IDS device not cloud paired %@
Updated approve bluetooth IDs: %@
Device version: %d
IDSDevice not found for deviceID: %@
Remote MacOS major version: %d and minor version: %d
Remote iOS major version: %d and minor version: %d
%s: called with deviceID:%@ whose deviceClass is %d
Proxy device not cloud paired
Bluetooth ID cache %@
Updated bluetooth ID cache
IDS registration status: %d
Updated cloud pairing retry dates %@
Still backing off cloud pair retry (device ID: %@, use short: %@, short date: %@, general date: %@)
Nearby devices changed %@
Received protobuf (type = %d, size = %u, identifier = %@)
Received pairing request (date: %@, from storage: %@)
Received registration request (date: %@, from storage: %@)
Received key originating registration request (date: %@, from storage: %@)
client:%@, sessionID:%@, clients:%@
Incoming message from unknown device
Received IDS ACK (identifier: %@, mapping: %@)
Calling client for ACK (client: %@, session ID: %@, identifier: %@)
Resetting apple watch existed state
Loaded lastSeenWatchDate %@
Loaded watchExistedInUnlockList %@
Loaded watchCurrentlyInList %@
Pairing request arrived (creation date: %@ server date: %@) from device: %@
Pairing request arrived outside window (creation date: %@ server date: %@)
Sharing/SDAppleIDAgent/didReceiveToken
Sharing/SDAppleIDAgent/didReceivePublicToken
Sharing/SDAppleIDAgent/didReceiveIncomingMessage
%s %@
Creating ranging manager
Created ranging manager %@
%s request: %@ identifier: %@
%s removing  non current request: %@ identifier: %@ waitingForNetworkToDisable: %d
%s request(%@) not found !! identifier: %@
%s: %d Already processing request: %@ identifier: %@
Cannot process invalidated request
%s no queueAvailableHandler. Invalidating current request %@
%s current Request: %@ identifier: %@
%s Starting ranging (manager: %@, peers: %@)
%s startRangingFromPeers (manager: %@, peers: %@)
%s stopRangingFromPeers (manager: %@, peers: %@)
%s Starting AWDL request: %@ identifier: %@ info: %@
%s AWDL went down. Invalidating current request: %@ identifier: %@
%s Restarting AWDL bring up timer
%s Invalidating AWDL bring up timer
%s AWDL bring up timer fired
%s Disabling ranging and awdl for timer
Failed to get change history with error %@
Sending request (honeybee id: %@, devices: %@)
Sysdiagnose collected (path: %@, error: %@)
Uploading to honeybee
Error collecting sysdiagnose %@
Sending IDS message (identifier: %@, destinations: %@)
Error sending IDS message (identifier: %@)
No destination for IDS devices: %@
IDS send complete (success: %@, identifier: %@, error: %@)
IDS message from unknown device
Received message (device: %@, type: %d, message: %@)
setFileIncomplete: kCFURLCreationDateKey %@
setFileIncomplete: _kCFURLFinderInfoKey %@
setFileIncomplete: finderInfoData is NULL
setFileIncomplete: CFURLCopyResourcePropertyForKey %@
Exception caught trying to retrieve primary iCloud account : %@
copyLocalizedFileName %@
Unique temporary folder: %@
absoluteURL was nil for %@
createDirectoryAtURL:%@ returned nil error
NSItemReplacementDirectory appropriateForURL:%@ returned nil error
Failed to create Sharing folder
Missing Library folder
copyUserFolder: confstr(%d) failed with error %d (%s)
This is not a valid AFP volume (FSCTL returned %d errno = %d)
_SDVolumeNameForMountPoint: NSURLVolumeNameKey %@
SecTaskCreateWithAuditToken returned NULL for %@
Created new Stream ID (%s)
awdlInterfaceIndex: getifaddrs failed (%d)
Device Capabilities (Auto Unlock:%@, Handoff:%@, Instant Hotspot:%@, AirDrop:%@, Remote Disc:%@)
SDServiceManager: Accept Reply = %@
SDDomainBrowser: didNotSearch %@
No default paired for device type
Failed to create destination (deviceID: %@, IDS device: %@)
Sending %@, identifier: %@
Error sending %@, error:%@
No destinations for device ID: %@
success = %@, identifier = %@, time = %.2f, error = %@
Missing AWDL Info
Using AWDL info %@
Encryption start
Using encryption%{private}@
Error encrypting message (data: %@, authTag: %@, nonce: %@)
Session missing device ID for encrypted send
Using BLE encryption
Ranging key exists %@
Using ranging key (size: %d, realKey %@)
Ranging key data: %{private}@
System will sleep, stopping AirDrop connection.
WiFi is disabled, stopping AirDrop connection.
SDAirDropConnection event: %@
SDAirDropConnection %@
SDAirDropConnection: didReceiveError %@
SDAirDropConnection: didReceiveError suppressed
SDAirDropConnection: unexpected class %@ for file info key %@
SDAirDropConnection: invalid value for %@: %@
SDAirDropConnection: Files array has invalid items
SDAirDropConnection: storeArrayValue value for key %@ is invalid
SDAirDropConnection: unhandled key %@ for storeArrayValue
SDAirDropConnection: CFURLCreateStringByReplacingPercentEscapes returned NULL
SDAirDropConnection: storeRequestValue value is not a string
SDAirDropConnection: _CFHTTPServerRequestCopyProperty returned NULL
SDAirDropConnection: storeDataValue value for key %@ is invalid
SDAirDropConnection: storeStringValue value for key %@ is invalid
SDAirDropConnection: storeNumberValue value for key %@ is invalid
SDAirDropConnection: storeBooleanValue value for key %@ is invalid
SDAirDropConnection: createCGImageWithJPEG2000Data returned NULL
SDAirDropConnection: storeIconValue fileIconData is invalid
SDAirDropConnection: CFPropertyListCreateData failed %@
Responding to Discover request from %s person
Responding to Discover request with code %ld
Sending Ask response with code %@
Power assertion released (%d)
Sending Upload response with code %@
SDAirDropConnection: icon hash is available for %@
SDAirDropConnection: icon hashes don't match
SDAirDropConnection: _SDHashStringFromData returned NULL
SDAirDropConnection: createPersonForAskRequest senderIcon is NULL
SDAirDropConnection,createPersonForAskRequest: computerName is invalid
SDAirDropConnection,createPersonForAskRequest: validAirDropID(%@) returned NO
SDAirDropConnection: SDAppleIDAuthenticateCertificateChainSync failed %@
SDAirDropConnection,senderIsTrusted: userIdentity is NULL
SDAirDropConnection: no certificate chain for %@
SDAirDropConnection: myAccountIdentifier is an empty string
SDAirDropConnection: SFAppleIDCommonNameForCertificate failed with error %d
SDAirDropConnection: client cert chain not trusted. SFAppleIDVerifyCertificateChainSync failed with err=%d
SDAirDropConnection: copyCertificateChainFromTrust returned %s array
Parsing Discover request
SDAirDropConnection: CFPropertyListCreateWithData returned invalid dictionary
SDAirDropConnection: CFPropertyListCreateWithData failed %@
Sender is me, ignore self block.
Parsing Ask request
SDAirDropConnection,allowAskRequestFromPerson: appleID is NULL
SDAirDropConnection,allowAskRequestFromPerson: person is NULL
SDAirDropConnection: Prevented auto-accept because transfer contains All Photos Data Photos bundles.
AirDrop failed to validate Apple ID certificate of sender
SDAirDropConnection,handleAskRequest: no files or items
SDAirDropConnection,handleAskRequest: senderID is NULL
SDAirDropConnection: CFReadStreamRead returned %ld
SDAirDropConnection: kCFStreamEventEndEncountered fired again
SDAirDropConnection: kCFStreamEventUnknown(%d)
SDAirDropConnection: CFReadStreamOpen failed
SDAirDropConnection: _CFHTTPServerRequestCopyBodyStream returned NULL
SDAirDropConnection: startReceivingFile destination is nil
SDAirDropConnection: thereIsEnoughFreeSpace failed %@
makeDestinationDirectory: createDirectoryAtURL failed %@
Discover already in progress
Upload already in progress
Bad Upload request
Ask already in progress
Received Discover request
Received Ask request
Received Upload request
Received Upload request for %@
SDAirDropConnection: kSFOperationErrorNotEnoughSpace
SDAirDropConnection: didReceiveRequest askRequest NULL userAccepted false
SDAirDropConnection: didReceiveRequest unknown operation
SDAirDropConnection: didReceiveRequest operation is NULL
SDAirDropConnection: didReceiveRequest unknown method
SDAirDropConnection: didReceiveRequest method is NULL
SDAirDropConnection: didSendResponse operation is unknown
SDAirDropConnection: didSendResponse operation is NULL
SDAirDropConnection: didSendResponse method is unknown
SDAirDropConnection: didSendResponse method is NULL
Connection from %@ closed but transfer is finished
Connection from %@ closed
Connection closed (cancel suppressed)
Power assertion retained (%d)
Invalidated AirDrop connection %p
Starting%@%@%@ scanning with duplicates:%@ for peers [%@]
%@ enabled: %@, state: %s, shouldStart: %@, scanForCopyPaste: %@, scanForHandoff: %@
nearbyServiceDevicesChanged: %@
Received a new advertisement %@
Ignoring new advertisement as it is for default pair only which is not me
Failed to update with raw advertisementData %@ from %@ (%@)
Saw IDS device %@ with mismatched version %d, expected %d
Scanning client arrived
Scanning client went away
Dumping state
Starting for user %d on wake
Starting for user %d on login
Sharing/SDActivityScanner/continuityDidUpdateState
Sharing/SDActivityScanner/continuityDidStartScanningForType
IDSContinuity didStartScanningForType: %s
Sharing/SDActivityScanner/continuityDidStopScanningForType
IDSContinuity didStopScanningForType: %s
Sharing/SDActivityScanner/continuityDidFailToStartScanningForType
IDSContinuity didFailToStartScanningForType: %s withError: (%@)
Sharing/SDActivityScanner/continuityDidDiscoverType
Saw device %@ but cannot find mathing IDSDevice
Lost IDS device %@
lostAllDevices
requested scanning for %@
Requesting payload from %@ for %@
SDConnectedBrowser: _CFURLGetVolumePropertyFlags returned %@
SDConnectedBrowser: getResourceValue %@
SDXPCHelperConnection deallocated without -invalidate call
SDXPCHelperConnection makeActivatedConnection invalidationHandler
monogramImageDataForContact called with nil contact, will use fallback.
SDXPCHelperConnection %s remoteObjectProxyWithErrorHandler: %@
%llu
monogramImageDataForContact
Cache miss for %@ -> creating cache for opposite color too
groupMonogramImageDataForContacts
urlToCGImgDataForCallHandoffIconWithAppIconImageData
monogramImagesForMultipleContactsSync failed to return images
monogramImagesForMultipleContacts
CGImgDataForUIActivityTitle
CGImgForNameLabelWithString called with nil string.
CGImgForNameLabelWithStringDaemon
Cache miss for text %@ -> creating cache for opposite color too
CGImgForNameLabelWithString
Cache miss for label %@ -> creating cache for opposite color too
CGImgDataForActivityMoreListEntryForActivityTitle
CGImgForActionPlatterWithTitle
CGImgForNearbyBadgeWithCount
Need image data for %lu images, %lu are not in cache, return %lu image data.
Share sheet host app config not set on %@ as expected.
_latestHostConfig = nil
updateShareSheetHostConfiguration
Stopped net service browser
Client streams closed
Third party app client
Started net service browser
Sending initial request
Error sending initial request = %@
Sending initial streams response (accepted = %@)
Error sending initial response = %@
Switched from messages to Streams
Creating file handle failed
Error getting streams = %@
No handler for stream request
Failed to set buffer size on socket
Could not create sock pair = %s
Requested fileHandle more than once.
Browser found net service = %@
No type in stream handler message
Unarchiving stream handler failed: %@
Received request to create streams
Could not create file handles
No service in request
Received response to create stream (accepted = %@)
Stream handler closed with error = %@
Received NSStreamEventHasBytesAvailable on a stream other than an input stream
Received NSStreamEventHasSpaceAvailable on a stream other than an output stream
Stream end encountered, closing streams
Client stream received error = %@
Client Streams Opened
Total written to client = %ld
Error writing to client output stream, writeLength = %ld
Queueing client write, no space available
Total read from client = %ld
Read zero bytes from the client stream
Network buffer is full, waiting to read from client
No stream data to write to network
Client has written data
Client has read data
Received screen lock unlocked notification
Not initiating setup retry (already retried: %@, always show: %@, lastSuccessfulDevice: %@)
Retry setup device ID cleared
Restarting retry setup device timer
Retry setup device timer fired
Invaliding setup device device timer
Suggestion Found Peers %@
Suggested device ID cleared
Restarting suggested device timer
Suggested device timer fired
Invaliding suggested device timer
Restarting suggestion service timer
Suggestion service timer fired
Invaliding suggestion service timer
Suggestion scanning for bluetooth IDs %@
Scanner started
No devices to scan for, not starting suggetion scanner
Already scanning for suggestions
Suggestion manager found peer: %@
Suggestion manager peer (device: %@, supports advertising unlocked: %@, unlocked on wrist: %@)
Not looking for peer, ignoring: %@
Invalidating suggestion scanner
Restarting suggestion scan timer
Suggestion scan timer fired
Error sending message to start advertising to %@
Received SDAutoUnlockMessageTypeStartAdvertising (new ranging required: %@, message: %@)
Skipping response advertisement because Mac OS version is too old
Should send request (device: %@ enabled: %@)
Suggestions still backing off (device %@, retry date %@)
Reached limit of suggestions (device %@, multiplier: %ld)
Next suggestion (device: %@, multiplier: %ld, seconds: %ld, retry date %@)
Setting feature suggested for device: %@
Retry version: %ld
clearMonitorCache
AirDrop not ready: wifi=%d, bluetooth=%d, hotspot=%d, carplay=%d, receivingEnabled=%d
Discoverable mode off: appleIDAccountState=%@ eduModeEnabled=%d
Reconciled discoverable mode: %@ (%@)
Discoverable mode changed from %@ to %@, posting notification
Apple ID account state: %@
SFAppleIDParseValidationRecordData failed with error %d (%ld ms)
SFAppleIDParseValidationRecordData timed out.
Verified validation record data (%ld ms)
Clear my Apple ID called
SecCertificateCopyCommonNames returned empty array
SecCertificateCopyCommonNames returned NULL
saveVerifiedAccount success %d %@
Could not fix Alt-DSID error = %@
No primary account, not fixing appleID
Apple Account signed in
Apple Account signed out
No normalized emails or phone numbers
No emails or phone numbers
No Apple ID certificate
addAdditionalInformationToMeCard: _myAppleID = nil
addAdditionalInformationToMeCard: accountForAppleID (%@) = nil
Enhanced meCard: fn=%@,ln=%@,pnums=[%@],emails=[%@]
Clear my icon and hash requested
Failed to find contact with contact identifier %@, error: %@
Failed to retrieve me-card due to %@
No me-card set
Adding additional information to me-card if needed
Reset meCard called with reason: %@
Added reason to prevent locale change exit (reason %@)
Pushed expiration date of reason to prevent locale change exit (reason %@)
Removed reason to prevent locale change exit (reason %@)
PWS availability: %ud
Generating SSID hashes
sysctl returned %d
SecIdentityCopyCertificate returned %d
altDSID is nil
altDSID is equal to primary email
altDSID is equal to Apple ID account
AirDrop %@ transaction %@ (%d)
Apple ID account info changed.
Bluetooth address changed
Bluetooth is now %s
Bluetooth power is now %s
SDStatusMonitor: DNSServiceSetDispatchQueue returned %d
SDStatusMonitor: DNSServiceRegister returned %d
Contact store did change notification received
MeCard changed notification received
SDStatusMonitor: Unknown keys changed (%@)
SCDynamicStoreCreateRunLoopSource failed: %s
SCDynamicStoreSetNotificationKeys failed: %s
SCDynamicStoreCreate failed: %s
Sharingd Exiting...
SDStatusMonitor: handleNameMonitorCallBack returned %d
Paired watch wrist state changed: %@
Paired watch wrist lock changed: %d
Paired watch passcode strength changed: long passcode %@
Updating discoverable mode for personal hotspot change
Device can sleep
Device will sleep
Device has powered on
Device will not sleep
SDStatusMonitor: IORegisterForSystemPower failed
Screen: %@
Watch wrist state changed: %@
### Failed to make ssid prefs?
SSID cache monitor successfully installed: %s
Wi-Fi power is now %s
Current language changed
currentLocalChanged
WiFi Preferences changed callback, purging ssid cache
Failed to get long term information (key = %@)
Devices unpaired
Started tracking daily metrics
Submitting daily metrics
Restarting long-term key timer
Long-term key timer fired, resetting state
Invalidating long-term key timer
Client enabling unlock
Preventing exit for enable
Failed to create unlock session (identifier = %@, has default paired device = %@)
Invalid parameters (passcode = %@, handler = %@)
Using updated LTK (forcing: %@)
Exchanging LTKs during setup
Exchanging LTKs using new service
Using existing LTK
Notifying client with error = %@
Stopped tracking daily metrics
lostModeEnabled = %@
Received SDUnlockStartLTKTransfer
Received start ltk with request outstanding
Failed to sign remote key
Long-Term key response is missing information (has remote key = %@, remote key = %{private}@)
Long-Term key failed on the other side
Incorrect request ID in response (has request ID = %@, response request ID = %@, local request ID  = %@)
Failed to sign remote key for enable
Long term key response is missing information for enable (has remote key = %@, remote key = %{private}@)
Error in class A LTK transfer = %d
Could not sign remote key
Enabling with keys
Error in session created response = %d
Could not setup escrow session
Failed to create session
Missing information for escrow session (has token = %@, token = %@, local long-term key = %@, remote long-term key = %@)
Final step failed
Bad signature error indicated bad LTKs on phone side, enabling with new keys
Creating escrow record failed = %@
Lost mode = %@; not unlocking.
Could not step for ephemeral key response
Could not create unlock session
Resetting (on wrist = %@, motion detected = %@, exchange request = %@)
Received request for session in progress
No session ID in request
Device already unlocked
Unlock pairing is disabled
UNLOCK SUCCEEDED
Resetting (position = %@, waiting on auth = %@, sesssion auth token = %@)
Device went off wrist waiting for auth token
Ignoring auth token, device unlocked
Stash: No key is exchange request = %@
Locking device
Failed to send device unlocked message: %@
Transferring long-term keys failed.
Failed to send class A long term key request: %@
Failed to send device enable request: %@
Failed to send request to create escrow key: %@
Failed to send state response with error = %@
Created new security manager (pairing id %@, store path %@, device name %@)
Unable to create security manager (pairing id %@, pairing store path %@, active device %{private}@)
Session manager adding observers
Device pairing failed, throwing away anything that was setup
Pairing did begin %d
Device entered config state %d
Disable pairing called on platform without Nano Registry
Pairing Disabled: %@
restartUnlockTimer
Session timer fired, resetting state
invalidateUnlockTimer
Failed to send device reset message
Failed to send disable message
Sending %@
Message Contents %@
Received %@
Submitting metrics
_btPipeStateChanged to %s
connected to BT peer %@
SDAirDropClassroomTransferManager: failed to get access to Downloads folder with error: %@
makeDestinationDirectoryWithIdentifier failed %@
SDAirDropClassroomTransferManager: createCGImageWithData returned NULL
SDAirDropClassroomTransferManager: replaceIconValue fileIconData is invalid
Update transfer %@ with state %d
Failed to update %@
Notifying %d clients that transfer %@ was accepted
Notifying %d clients that transfer %@ was declined
connection established %@
connection invalidated %@
Error sending initial request for registration: %@
Device has been registered (peer state is %@)
Error finalizing registration (%lu)
Failed to do final step in registration
Received SDAutoUnlockDeviceRegistrationStep without step data
Received SDAutoUnlockMessageTypeRegistrationResponse
Received SDAutoUnlockMessageTypeRegistrationFinalize
Wrote folder representation of asset bundle to: %@
Unable to delete asset bundle after transforming to folder. Error: %@
Unable to create folder representation from asset bundle. Error: %@
Bonjour resolved %@ over %@
Ignoring Bonjour resolve of %@ over %@
Resolved a Bonjour server with unknown protocol
Bonjour resolver failed to find awdl0 interface
Bonjour resolving %@ over %@
SDBonjourResolver: DNSServiceSetDispatchQueue returned %d
SDBonjourResolver: DNSServiceResolve returned %d
SDBonjourResolver: DNSServiceCreateConnection returned %d
Creating lock session (session ID = %@)
Watch info (model ID: %@, build: %@, os version: %@)
Stopping BLE connection
Asked to complete attempt if necessary
Completing waiting unlock attempt
Tearing down AWDL
Failed to send clean up AWDL message: %@
Lock session canceled (device ID: %@, session ID: %@)
Lock session canceled after success (device ID: %@, session ID: %@)
Canceling WiFi request: %@
Not Canceling WiFi request: nil
Handling cancel at end
Not cancelled
Clamshell changed
Display config changed
Attempt timed out for session
Automation: Used Proxy Device %@
Automation: Key Device Model %@
Automation: Proxy Device Model %@
Automation: Phone Bluetooth Discovery %0.2fs
Automation: Phone Connection Time %0.2fs
Automation: Watch Bluetooth Discovery %0.2fs
Automation: Watch Connection Wait Time %0.2fs
Automation: Watch Connection Time %0.2fs
Automation: Bluetooth Info Exchange %0.2fs
Automation: Bluetooth Key Exchange %0.2fs
Automation: Bluetooth Token Exchange %0.2fs
Automation: Bluetooth Unlock Confirmation %0.2fs
Automation: AWDL Bring Up %0.2fs
Automation: Peer Found %0.2fs
Automation: Ranging Results %0.2fs
Automation: Time Waiting For Display %0.2f
Automation: Time Waiting For Clamshell %0.2f
Automation: Wi-Fi Total %0.2fs
Automation: Bluetooth Bootstrap Total %0.2fs
Automation: Bootstrap + Wi-Fi Total + Confirmation %0.2fs
Automation: Bluetooth Overall Total %0.2fs
Automation: Idle time due to prewarming %0.2fs
Automation: Complete exchange %0.2fs
Automation: Key Device RSSI %d
Automation: Proxy Device RSSI %d
Automation: Within Range %@
Automation: Already Connected Bluetooth Devices %d
Automation: Time Since Last Wake %ld seconds
Automation: Last Sleep Type %@
Automation: Cancelled %@
Automation: Successful Session %@
Updating image data for non-auth prompt attempt
Image data updated (%@)
Image already cached: %@
Not updating icon, watch doesn't support icons
Chosen device updated: %@ (%@)
Unable to create token session, using escrow
Starting BLE connection %@
Found Device {
available: %@,
locked on wrist: %@
device:%@
Device connected %@
Peer not available %@
Timer fired
Timeout while waiting for a display or clamshell
Restarting confirmation timer
Confirmation timer fired
Invalidating confirmation timer
AWDL ranging results returned %@, domain: %@, error %d
Peer in range
Ranging timeout with no error code
Skipping ranging due to default phoneAutoUnlockSkipRanging
handlePeerInRange %@
Attempt was prewarmed and not told to complete, waiting for trigger to complete unlock.
handlePeerOutOfRange %@
AWDL up (%.2f)
AWDL ranging timeout is %ld
Auth lock session notifying delegate with error: %@
Automation: Success
Automation: Session Dismissed: %@
Received SDAutoUnlockAuthPromptResponse
Received SDUnlockSessionKeyExchangeRequest
Received SDUnlockSessionAuthToken
Received AWDL Info %@
Session supports confirmation ACK
Using new protocol
Deserializing AWDL info failed
Already received auth prompt response
Key exchange request: attempt cancelled
Found device is not available
Received fallback AKS session
Unexpected attempt type: %d
Watch locked on wrist from connection
handleSessionKeyExchangeRequest: %@
Auth token: attempt cancelled
Auth token: Already received auth token
peer discovery timeout is %ld
handleSessionAuthToken: %@
Received SDAutoUnlockSessionConfirmationACK
Skip ranging is %d
%s AWDL started request:%@ error:%d
Peer found (awdl up same time : %@)
Ranging started
Ranging completed
Current user: %@, clamshell closed: %@, display connected: %@ display off: %@
AKS Unlock succeeded
consumeAuthTokenIfReady: %@
Waiting for a display or clamshell change
Sending with useBTPipe %d
Error sending AWDL info %@
Not sending data, local device ID is NULL
Sending SDAutoUnlockAuthPromptRequest
Not sending data for auth prompt, local device ID is NULL
Sending image data (chosen: %@, data: %@, already cached: %@, cache disabled: %@ needs new image: %@)
Using max size %ld
Sending SDAutoUnlockAuthPromptImageData (message count: %u, size: %ld)
Error sending image data %@
Not sending image data (already sent %@, chosen: %@, data %@, already cached %@, needs new image: %@)
Sending SDUnlockSessionKeyExchangeResponse
Never connected, skipping confirmation
Already sending confirmation
Sending SDUnlockSessionConfirmation
Error sending confirmation
Waiting for confirmation ack
Failed to get remote object proxy for %@ (%@)
Activating %@
Activate already called
New connection from %@ accepted %s
Connection %@ invalidated
New connection established to %@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>Application-Group</key>
<string>com.apple.coreservices.appleidauthentication.keychainaccessgroup</string>
<key>BuildMachineOSBuild</key>
<string>20A241128</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleDisplayName</key>
<string>sharingd</string>
<key>CFBundleExecutable</key>
<string>sharingd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.sharingd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>sharingd</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1778.1</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>AppleTVSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1778.1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>19L5419a</string>
<key>DTPlatformName</key>
<string>appletvsimulator</string>
<key>DTPlatformVersion</key>
<string>15.4</string>
<key>DTSDKBuild</key>
<string>19L5419a</string>
<key>DTSDKName</key>
<string>appletvsimulator15.4.internal</string>
<key>DTXcode</key>
<string>1330</string>
<key>DTXcodeBuild</key>
<string>13E6049a</string>
<key>LSBackgroundOnly</key>
<true/>
<key>MinimumOSVersion</key>
<string>15.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>3</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>1957431478</string>
<key>application-identifier</key>
<string>com.apple.sharingd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.BTServer.allowRestrictedServices</key>
<true/>
<key>com.apple.BTServer.appleMfgDataAdvertising</key>
<true/>
<key>com.apple.BTServer.appleMfgDataScanner</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>carrier-settings</string>
<string>phone</string>
</array>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.MobileInternetSharing.allow</key>
<true/>
<key>com.apple.PairingManager.HomeKit</key>
<true/>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.SystemConfiguration.SCDynamicStore-write-access</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.radios.plist</string>
</array>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.accounts.appleidauthentication.defaultaccess</key>
<true/>
<key>com.apple.accounts.idms.fullaccess</key>
<true/>
<key>com.apple.announced.client</key>
<true/>
<key>com.apple.appletv.pbs.allow-screen-saver</key>
<true/>
<key>com.apple.appletv.pbs.bulletin-service-access</key>
<true/>
<key>com.apple.appletv.pbs.mediaremote</key>
<true/>
<key>com.apple.appstored.install-apps</key>
<true/>
<key>com.apple.appstored.install-system-apps</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.backboardd.lastUserEventTime</key>
<true/>
<key>com.apple.bluetooth.internal</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.bulletinboard.dataprovider</key>
<true/>
<key>com.apple.bulletinboard.observer</key>
<true/>
<key>com.apple.bulletinboard.settings</key>
<true/>
<key>com.apple.captive.private</key>
<true/>
<key>com.apple.cards.all-access</key>
<true/>
<key>com.apple.carousel.onWristMonitor.actions</key>
<array>
<string>forceWristDetect</string>
</array>
<key>com.apple.cdp.followup</key>
<true/>
<key>com.apple.cdp.statemachine</key>
<true/>
<key>com.apple.cdp.utility</key>
<true/>
<key>com.apple.corecapture.manager-access</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.coreduetd.people</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.developer.homekit.background-mode</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>production</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.fileprovider.enumerate</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.homekit.private-spi-access</key>
<true/>
<key>com.apple.icloud.fmfd.access</key>
<true/>
<key>com.apple.imagent</key>
<true/>
<key>com.apple.imagent.chat</key>
<true/>
<key>com.apple.imagent.chat.av</key>
<true/>
<key>com.apple.intents.intents-helper</key>
<true/>
<key>com.apple.itunesstored.lookup</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.keystore.access-keychain-keys</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.device.remote-session</key>
<true/>
<key>com.apple.keystore.device.uuid</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.launchservices.MoveDocumentOnOpen</key>
<true/>
<key>com.apple.locationd.activity</key>
<true/>
<key>com.apple.locationd.authorizeapplications</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.peer_ranging</key>
<true/>
<key>com.apple.locationd.place_inference</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.mobileactivationd.spi</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.networkd_privileged</key>
<true/>
<key>com.apple.networkrelay.deviceMonitor</key>
<true/>
<key>com.apple.networkrelay.devices.read</key>
<true/>
<key>com.apple.networkrelay.devices.write</key>
<true/>
<key>com.apple.passes.add-silently</key>
<true/>
<key>com.apple.payment.all-access</key>
<true/>
<key>com.apple.photos.bourgeoisie</key>
<true/>
<key>com.apple.private.MobileActivation</key>
<array>
<string>GetActivationState</string>
</array>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>BluetoothAddress</string>
<string>EthernetMacAddress</string>
<string>SysCfg</string>
<string>UniqueDeviceID</string>
<string>WifiAddressData</string>
<string>WifiAddress</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.airdrop.discovery</key>
<true/>
<key>com.apple.private.appleairpowercharger.set-property</key>
<true/>
<key>com.apple.private.applecredentialmanager.allow</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.SharingDeviceAssets</string>
</array>
<key>com.apple.private.assets.change-daemon-config</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.canGetAppLinkInfo</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.communicationsfilter</key>
<true/>
<key>com.apple.private.corerecents</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.coreservices.canopenactivity</key>
<true/>
<key>com.apple.private.dmd.policy</key>
<true/>
<key>com.apple.private.familycircle</key>
<true/>
<key>com.apple.private.followup</key>
<true/>
<key>com.apple.private.hid.client.event-dispatch</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.homekit</key>
<true/>
<key>com.apple.private.homekit.pairing-identity</key>
<true/>
<key>com.apple.private.homekit.pairing-identity.private</key>
<true/>
<key>com.apple.private.homekit.remote-login.private</key>
<true/>
<key>com.apple.private.ids.continuity</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.madrid</string>
<string>com.apple.private.alloy.continuity.activity</string>
<string>com.apple.private.alloy.continuity.auth</string>
<string>com.apple.private.alloy.continuity.auth.classa</string>
<string>com.apple.private.alloy.continuity.encryption</string>
<string>com.apple.private.alloy.continuity.tethering</string>
<string>com.apple.private.alloy.continuity.unlock</string>
<string>com.apple.private.alloy.nearby</string>
<string>com.apple.private.alloy.sharing.paireddevice</string>
<string>com.apple.private.alloy.sharing.ranging</string>
<string>com.apple.private.alloy.sms</string>
<string>com.apple.private.alloy.intercom</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.continuity.activity</string>
<string>com.apple.private.alloy.continuity.auth</string>
<string>com.apple.private.alloy.continuity.auth.classa</string>
<string>com.apple.private.alloy.continuity.encryption</string>
<string>com.apple.private.alloy.continuity.tethering</string>
<string>com.apple.private.alloy.nearby</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.continuity.unlock</string>
<string>com.apple.private.alloy.sharing.paireddevice</string>
<string>com.apple.private.alloy.sharing.ranging</string>
</array>
<key>com.apple.private.ids.session</key>
<array>
<string>com.apple.private.alloy.nearby</string>
</array>
<key>com.apple.private.imcore.imdpersistence.database-access</key>
<true/>
<key>com.apple.private.launchservices.canspecifymanageddocumentsource</key>
<true/>
<key>com.apple.private.librarian.container-proxy</key>
<true/>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>InstallForLaunchServices</string>
</array>
<key>com.apple.private.neagent</key>
<true/>
<key>com.apple.private.necp.match</key>
<true/>
<key>com.apple.private.nehelper.privileged</key>
<true/>
<key>com.apple.private.network.interface-control</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.networkextension.configuration</key>
<true/>
<key>com.apple.private.octagon</key>
<true/>
<key>com.apple.private.photoanalysisd.access</key>
<true/>
<key>com.apple.private.photos.service.mediaconversion</key>
<true/>
<key>com.apple.private.safari.can-inspect-autofill-feature-availability</key>
<true/>
<key>com.apple.private.security.storage-exempt.heritable</key>
<true/>
<key>com.apple.private.security.storage.HomeKit</key>
<true/>
<key>com.apple.private.security.storage.MessagesMetaData</key>
<true/>
<key>com.apple.private.security.storage.Photos</key>
<true/>
<key>com.apple.private.sharing.XPCHelperAccess</key>
<true/>
<key>com.apple.private.skywalk.register-kernel-pipe</key>
<true/>
<key>com.apple.private.skywalk.register-user-pipe</key>
<true/>
<key>com.apple.private.sleepd</key>
<true/>
<key>com.apple.private.sysdiagnose</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServicePhotos</string>
<string>kTCCServiceWillow</string>
</array>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.SFUserNotificationTVLatency</string>
<string>com.apple.Sharing.HomePodRemoteNotifications</string>
<string>com.apple.Sharing.b7ce1794a1c8766816fc7b7500742862</string>
<string>com.apple.Sharing.TVRemoteNotifications</string>
<string>com.apple.Sharing.WatchRemoteNotifications</string>
</array>
<key>com.apple.private.usernotifications.settings</key>
<array>
<string>read</string>
</array>
<key>com.apple.private.voicememod.client</key>
<true/>
<key>com.apple.private.xpc.launchd.reboot</key>
<true/>
<key>com.apple.purplebuddy.budd.access</key>
<true/>
<key>com.apple.rapport.Client</key>
<true/>
<key>com.apple.rapport.people</key>
<true/>
<key>com.apple.rootless.storage.coreduet_knowledge_store</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/Applications/</string>
<string>/private/var/mobile/Library/MessagesMetaData/</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/mobile/Library/Logs/CrashReporter/com.apple.sharing</string>
<string>/private/var/mobile/Library/Logs/CrashReporter/com.apple.sharing/SFBLEScanner-NearbyAction.log</string>
<string>/private/var/mobile/Library/Logs/CrashReporter/com.apple.sharing/SFBLEScanner-NearbyInfo.log</string>
<string>/private/var/mobile/Library/Logs/CrashReporter/com.apple.sharing/SFBLEScanner-Prox.log</string>
<string>/private/var/mobile/Library/Preferences/com.apple.Home.plist</string>
<string>/private/var/mobile/Library/CoreBehavior/BehaviorMiner.sqlite</string>
<string>/private/var/mobile/Library/CoreBehavior/BehaviorMiner.sqlite-shm</string>
<string>/private/var/mobile/Library/CoreBehavior/BehaviorMiner.sqlite-wal</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Preferences/com.apple.palette.chestnut.plist</string>
<string>/Library/Preferences/com.apple.sharing.powerStatus.plist</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.accessories.blepairing</string>
<string>com.apple.audio.hapticd</string>
<string>com.apple.bulletinboard.observerconnection</string>
<string>com.apple.carousel.wakegesturemonitor</string>
<string>com.apple.cdp.daemon</string>
<string>com.apple.CloudPhotoDerivativeGenerator</string>
<string>com.apple.commcenter.coretelephony.xpc</string>
<string>com.apple.CompanionLink</string>
<string>com.apple.corecaptured</string>
<string>com.apple.coreduetd.knowledge</string>
<string>com.apple.corefollowup.agent</string>
<string>com.apple.diagnosticextensionsd.sharing-wakeup</string>
<string>com.apple.distributed_notifications@Uv3</string>
<string>com.apple.familycircle.agent</string>
<string>com.apple.homed.xpc</string>
<string>com.apple.icloud.fmfd</string>
<string>com.apple.iconservices</string>
<string>com.apple.imagent.embedded.auth</string>
<string>com.apple.imdpersistence.IMDPersistenceAgent</string>
<string>com.apple.intents.intents-helper</string>
<string>com.apple.lsd.xpc</string>
<string>com.apple.mobileactivationd</string>
<string>com.apple.networkd_privileged</string>
<string>com.apple.networking.captivenetworksupport</string>
<string>com.apple.PairingManager</string>
<string>com.apple.photoanalysisd</string>
<string>com.apple.rapport.people</string>
<string>com.apple.rapport</string>
<string>com.apple.SafariFoundation.AutoFillHelper</string>
<string>com.apple.server.bluetooth.le.att.xpc</string>
<string>com.apple.server.bluetooth.le.pipe.xpc</string>
<string>com.apple.SharedWebCredentials</string>
<string>com.apple.sharing.sharesheet</string>
<string>com.apple.Sharing.SharingHUDService</string>
<string>com.apple.sharing.transfer-observer</string>
<string>com.apple.sharingd.b332setup</string>
<string>com.apple.sharingd.paireddevice</string>
<string>com.apple.sharingd</string>
<string>com.apple.SharingServices</string>
<string>com.apple.SharingXPCHelper</string>
<string>com.apple.siri.VoiceShortcuts.xpc</string>
<string>com.apple.soundboardservices.server</string>
<string>com.apple.springboard.blockableservices</string>
<string>com.apple.sysdiagnose.service.xpc</string>
<string>com.apple.tailspind</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationmanager</string>
<string>com.apple.terminusd</string>
<string>com.apple.usernotifications.usernotificationsettingsservice</string>
<string>com.apple.announced.server</string>
</array>
<key>com.apple.security.exception.mach-register.global-name</key>
<array>
<string>com.apple.sharingd.b332setup</string>
<string>com.apple.Sharing.SharingHUDService</string>
</array>
<key>com.apple.security.exception.managed-preference.read-only</key>
<array>
<string>com.apple.AppleMediaServices</string>
<string>com.apple.Home</string>
<string>com.apple.homed</string>
<string>com.apple.MobileBluetooth.debug</string>
<string>com.apple.PeopleSuggester</string>
</array>
<key>com.apple.security.exception.process-info</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.assistant.support</string>
<string>com.apple.AppleMediaServices</string>
<string>com.apple.Home</string>
<string>com.apple.homed</string>
<string>com.apple.MobileBluetooth.debug</string>
<string>com.apple.siri.shortcuts</string>
<string>com.apple.voicetrigger</string>
<string>com.apple.TelephonyUtilities</string>
<string>com.apple.airplay</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.UIKit</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.network.server</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
<string>systemgroup.com.apple.sharedpclogging</string>
</array>
<key>com.apple.share-services-discovery</key>
<true/>
<key>com.apple.sharing.AirDropPrivilegedInformation</key>
<true/>
<key>com.apple.sharing.Client</key>
<true/>
<key>com.apple.sharing.DeviceDiscovery</key>
<true/>
<key>com.apple.sharing.PasswordGranting</key>
<true/>
<key>com.apple.sharing.PasswordSharing</key>
<true/>
<key>com.apple.sharing.RemoteInteractionSession</key>
<true/>
<key>com.apple.sharing.Services</key>
<true/>
<key>com.apple.sharing.Session</key>
<true/>
<key>com.apple.shortcuts.library-read-access</key>
<true/>
<key>com.apple.springboard.allowallcallurls</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.stereoleader.soundboard</key>
<true/>
<key>com.apple.studentd-access</key>
<true/>
<key>com.apple.tailspin.dump-output</key>
<true/>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-call-capabilities</string>
<string>access-call-providers</string>
<string>access-calls</string>
<string>modify-calls</string>
</array>
<key>com.apple.wifi.eap-nearby-device-setup-config-copy</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>com.apple.wirelessproxd-disable-scans</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>appleaccount</string>
<string>com.apple.airplay.pairing</string>
<string>com.apple.continuity.encryption</string>
<string>com.apple.continuity.unlock</string>
<string>com.apple.hap.pairing</string>
<string>com.apple.MediaRemote.pairing</string>
<string>com.apple.pairing</string>
<string>com.apple.SharedWebCredentials</string>
<string>com.apple.sharing.appleidauthentication</string>
<string>com.apple.sharing.cdb</string>
<string>com.apple.Sharing</string>
<string>com.apple.sharing.safaripasswordsharing</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>sharingd</string>
</array>
</dict>
</plist>
$s16DaemoniOSLibrary31SDAuthenticationSessionDelegateP
$s16DaemoniOSLibrary30AuthenticationSessionInterfaceP
So23SDAutoUnlockWiFiRequestCSg
So8NSStringC
$sSY
$ss21_ObjectiveCBridgeableP
SgXw
SSSg5label_yp5valuetSg
ShySiG
So24OS_dispatch_source_timer_p
SuSg
$s16DaemoniOSLibrary18SDAirDropHashStoreP
$s16DaemoniOSLibrary30AuthenticationSecurityManagingP
ycSg
SbycSg
yySbccSg
SgXw
SgXwz_Xx
SgIegy_
So22SDUnlockMotionDetectorC
$ss25ExpressibleByArrayLiteralP
$ss10SetAlgebraP
$ss9OptionSetP
So16SDAirDropHandlerC
ySo15SFAirDropActionCG
ySS_yptG
ySDySSSo8NSNumberCGG
ySS_So8NSNumberCtG
SDySSSo8NSNumberCG
So8NSObjectC
ySbc
So17OS_dispatch_queueC
SDySS
ShySSG
So24OS_dispatch_source_timer_pSg
SS3key_
5valuetSg
SS3key_
5valuet
SnySiG
ySnySiGG
Sg_ABt
IeyBy_
$s16DaemoniOSLibrary26AuthenticationKeyInterfaceP
SgXw
SgXwz_Xx
SbIeyBy_
So23SDAutoUnlockWiFiRequestC
SbIegy_
_A3At
$s16DaemoniOSLibrary12SDIDSServiceP
$s16DaemoniOSLibrary27AuthenticationLockInterfaceP
SgXw
SgXwz_Xx
XDXMT
_pSg
SaySo22_CLRangingPeerDistanceCGSg
_pSg
_A13At
So11CUCoalescerC
16DaemoniOSLibrary26SDCUSystemMonitorInterface_p
So21SFTokenBucketWithDupsC
So20NSNotificationCenterC
So9CNContactC_Say
GtSg
yypG
So15CNKeyDescriptor_p
ySo15CNKeyDescriptor_pG
ySiG
So14CNLabeledValueC
ypSg
SnySiG
Iegnr_
ySiGSnySiGG
SSSg
ShySo9CNContactCG
So9CNContactCSg
So9CNContactC
ySS3key_
5valuetG
ShyAAGG
_pSgz_Xx
ShyAAGGz_Xx
Gz_Xx
Sgz_Xx
SSz_Xx
So21CUKeyValueStoreReaderCySo6NSDataCADG
ySay
G_G_Sit
ySay
ySay
_pSg
ySSG
ySS5value_
8longHash
Sg06mediumC0tG
SS5value_
8longHash
Sg06mediumC0t
ySo9CNContactCG
ySo9CNContactCG
yShy
ySSSuG
ShyABGG
ySSG
GSpySo8NSObjectCGSgSpyypGSgytIeglllr_
$s16DaemoniOSLibrary23SDContactStoreInterfaceP
So14CNContactStoreC
$s16DaemoniOSLibrary11SDIDSDeviceP
$s16DaemoniOSLibrary26SDCUSystemMonitorInterfaceP
SaySSG
_yptG
So14NSUserDefaultsCSg
$s16DaemoniOSLibrary31SDAuthenticationManagerDelegateP
$s16DaemoniOSLibrary32SDAuthenticationManagerInterfaceP
16DaemoniOSLibrary31SDAuthenticationManagerDelegate_pSgXw
Sbyc
SgSo26SDAutoUnlockSessionWrapperC_
SgXw
So26SDAutoUnlockSessionWrapperC
SgXwz_Xx
_pSg
_yptG
_ypt
_pSg
_pSg
ySSypG
SS_ypt
ySSSo8NSNumberCG
_ypt
delegate
wifiRequest
type
queue
AWDLInfo
sessionID
responseTimer
_rawValue
RawValue
_ObjectiveCType
authenticationRequest
authenticationResponse
authenticationConfirmation
notStarted
inProgress
completed
failed
skip
onceList
noLaterThan
timer
identifier
wrongPackLength
sourcesPerTarget
hashesAreIncorrect
storeNotLoaded
storeDestroyed
contactIDDecodeFailed
contactFieldDecodeFailed
rateLimited
lastUnlockDate
wristDetectionGenerator
deviceUnlockedGenerator
deviceHasPasscodeGenerator
sleepModeGenerator
motionGenerator
faceIDEnabledGenerator
raiseToWakeHandler
lastUnlockedByPairedUnlockGenerator
queue
raiseToWakeTimes
allowsLenientMotionConditions
lastUnlockedAndOnWristDate
policies
requestingDeviceUnlockDate
rawValue
ArrayLiteralElement
RawValue
Element
identifier
preventUntilDate
operation
queue
timedReasons
reasons
pendingOperation
mainTimer
storage
shortHash
lastMediumByte
emailOrPhone
hashStoreContact
longHash
mediumHash
lastUnlockDate
rangingToken
metrics
isConfirmationSent
sessionStart
sessionEnd
keyExchangeStart
keyExchangeEnd
awdlBringUpStart
awdlBringUpEnd
peerFound
peerFoundSameTimeAsAWDLUp
rangingStart
rangingEnd
failureReason
context
contactUpdateCoalescer
meCardUpdateCoalescer
systemMonitor
hashManagerQ
bucket
contactStore
hashDB
notificationCenter
distributedNotificationCenter
activated
meCardInfo
hashesUpdatedSuccessfully
reader
stagedAdditions
stagedDeletedIDs
loaded
destroyed
contact
contactIdentifier
didChangeNotificationName
meContactDidChangeNotificationName
contactStore
systemMonitor
contactStore
hashStore
notificationCenter
distributedNotificationCenter
coalescerMinDelay
coalescerMaxDelay
imageDestinationCreateFailed
imageDestinationFinalizeFailed
imageSourceCreateFailed
delegate
queue
lockSessionGenerator
keySessionGenerator
idsService
securityManager
keySessions
lockSessions
generateAWDLInfo
isWifiEnabled
isBluetoothEnabled
decryptWrapper
lastUpdated
airdrop_dbv2
airdrop_dbv3
AirDropHashDB
