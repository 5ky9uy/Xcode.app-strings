B16@?0@"HMAccessoryProfile"8
PBUISystemHomeServiceCameraWindowScene
Invalid condition not satisfying: %@
_bs_assert_object != nil
TVSHUICameraRootViewController.m
[_bs_assert_object isKindOfClass:PBUISystemHomeServiceCameraWindowSceneClass]
cameraItemManager
v16@?0@"NSNotification"8
v16@?0@"NSSet"8
v16@?0@"NSError"8
Fullscreen
UIWindowScene
TVSHUICameraWindowSceneDelegate.m
[_bs_assert_object isKindOfClass:UIWindowSceneClass]
SceneConnection
viewController == _rootViewController
v8@?0
v16@?0@"BSActionResponse"8
BSAction
[_bs_assert_object isKindOfClass:BSActionClass]
Visibility
v16@?0@"<BSCompoundAssertionState>"8
@8@?0
TVHMFullScreenCameraViewController
v12@?0B8
[self isEnabled]
TVSHUICameraViewControllerManager.m
AddChildVC
PIPTransition
RestorationWatchdog
isEnabled
currentViewControllerPiP
currentViewControllerFullScreen
fullScreenVisibilityAssertion
completion != ((void *)0)
B16@?0@"HFCameraItem"8
only Camera SceneSessionRole is supported
TVSystemHomeUIServiceAppDelegate.m
localAccessory
sharedPineBoardServicesPreferences
pbs_homeKitCamerasFilter
pbs_homeKitDisabledCameras
setWithArray:
_isFilteringToFavoriteCameras
_disabledCameraIdentifiers
initWithHome:
hf_shouldShowInFavorites
uniqueIdentifier
UUIDString
containsObject:
setFilter:
arrayWithObjects:count:
_buildItemProvidersForHome:
stringWithFormat:
UTF8String
initWithNibName:bundle:
initWithDelegate:
sharedApplication
addObserver:forKeyPath:options:context:
defaultCenter
mainQueue
cameraViewControllerManager
startPictureInPictureFromFullscreen
addObserverForName:object:queue:usingBlock:
removeObserver:forKeyPath:
invalidate
dealloc
viewDidLoad
isFinished
activate
presentCameraWithContext:
firstFastUpdateFuture
_itemManagerDidCompleteInitialLoad
addSuccessBlock:
_notifyDelegateRequestDismissal
addFailureBlock:
isViewLoaded
cameraRootViewController:didPrepareForPresentationWithCompletion:
cameraRootViewControllerRequestsDismissal:
displayedItemsInSection:
bs_addChildViewController:
_notifyDelegateDidPrepareForPresentationWithCompletion:
requestVisibilityForReason:
bs_removeChildViewController:
view
isDescendantOfView:
removeFromSuperview
bounds
setFrame:
addSubview:
count
activeStateWithCameraIdentifiers:
inactiveState
setStreamState:
showCameraView
transitionCameraContentView
cameraItemManager
_fetchInitialCameraItemsWithItemManager:
observeValueForKeyPath:ofObject:change:context:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
cameraItemsForCameraViewControllerManager:
cameraViewControllerManager:addChildViewController:completion:
cameraViewControllerManager:removeChildViewController:
cameraViewControllerManager:restoreChildViewController:
cameraViewControllerManager:didUpdateFullscreenState:
cameraViewControllerManager:didUpdateActiveCameraIdentifiers:
cameraViewControllerManagerRequestsDismissal:
initWithWindowScene:
delegate
setDelegate:
windowScene
itemManager
itemManagerReloadFuture
visibilityAssertion
.cxx_destruct
_delegate
_windowScene
_itemManager
_itemManagerReloadFuture
_cameraViewControllerManager
_visibilityAssertion
T@"PBUISystemHomeServiceCameraWindowScene",R,W,N,V_windowScene
T@"HFItemManager",R,N,V_itemManager
T@"NAFuture",R,N,V_itemManagerReloadFuture
T@"TVSHUICameraViewControllerManager",R,N,V_cameraViewControllerManager
T@"<BSInvalidatable>",R,N,V_visibilityAssertion
T@"<TVSHUICameraRootViewControllerDelegate>",W,N,V_delegate
pbui_cameraActivationContext
setRootViewController:
makeKeyAndVisible
_didPrepareForPresentationWithCompletion:
_dismissScene
responderWithHandler:
initWithInfo:responder:
_sendAction:
_FBSScene
setWithObject:
sendActions:
scene:willConnectToSession:options:
sceneDidDisconnect:
sceneDidBecomeActive:
sceneWillResignActive:
sceneWillEnterForeground:
sceneDidEnterBackground:
scene:openURLContexts:
stateRestorationActivityForScene:
scene:restoreInteractionStateWithUserActivity:
scene:willContinueUserActivityWithType:
scene:continueUserActivity:
scene:didFailToContinueUserActivityWithType:error:
scene:didUpdateUserActivity:
windowScene:didUpdateCoordinateSpace:interfaceOrientation:traitCollection:
windowScene:performActionForShortcutItem:completionHandler:
windowScene:userDidAcceptCloudKitShareWithMetadata:
window
setWindow:
T@"UIWindow",&,N
cameraWindowScene:didReceiveCameraActivationContext:
rootViewController
sceneVisibilityAssertion
_window
_rootViewController
_sceneVisibilityAssertion
T@"TVSHUICameraRootViewController",R,W,N,V_rootViewController
T@"<BSInvalidatable>",R,N,V_sceneVisibilityAssertion
T@"UIWindow",&,N,V_window
init
weakToStrongObjectsMapTable
_updateVisibilityState
assertionWithIdentifier:stateDidChangeHandler:
_stateDump
_presentCameraWithContext:source:
_startRestorationVisibilityWatchdogIfNeeded
topMostFullScreenCameraViewController
_startPictureinPictureUsingFullScreenViewController:source:
cameraViewController
cameraItem
_createFullScreenViewControllerForCameraItem:
_addChildViewController:completion:
dismissPictureInPictureViewControllerFromFullScreen:
_dismissIfNecessary
willAnimatePictureInPictureSwap
_removeAllAnimationsFromView:
presentedViewController
_removeChildViewController:
_restoreChildViewController:
acquireForReason:
_didUpdatePictureInPictureState
dismissViewControllerAnimated:completion:
setAlpha:
animateWithDuration:animations:completion:
isEnabled
_cameraItems
activationReason
cameraContentView
fullScreenStyle
applyStyle:
cameraView
setWantsCameraViewControls:animated:
setCentered:
endDisableExternalUpdatesForVisibleReason
reloadControlProviders:
initWithCameraItem:
loadViewIfNeeded
homeKitObject
initWithCameraItems:focusedIdentifier:cameraViewController:
setDismissalDelegate:
setFullScreenContainer:
setShouldTakeOwnershipOfExistingStream:
setStreamPreferences:
focusSystemForEnvironment:
pictureInPictureStyle
_pictureInPictureControllerForViewController:
setInterfaceRestorer:
didEnterPictureInPicture
requestFocusUpdateToEnvironment:
startPIPWithViewController:withCompletion:
objectForKey:
setObject:forKey:
initWithTimeout:queue:completion:
start
isActive
dictionaryWithObjects:forKeys:count:
layer
removeAllAnimations
subviews
countByEnumeratingWithState:objects:count:
initWithCapacity:
cameraIdentifier
bs_safeAddObject:
viewControllerDidRequestDismissal:focusedIdentifier:focusedContentView:animated:completion:
viewControllerShouldDismissForAllCamerasButton:
viewController:presentedAllCamerasViewControllerWillPresentFullScreenCamera:completion:
prepareForPictureInPictureSwapAnimation
restorePictureInPictureViewControllerToFullScreen:
dismissPictureInPictureViewController:
pendingActivationContext
pictureInPictureControllers
visibilityCompoundAssertion
currentViewControllerPiP
currentViewControllerFullScreen
previousViewControllerFullScreen
swappingToFullScreenViewController
fullScreenVisibilityAssertion
restorationWatchdog
stateDumpCaptureHandle
_enabled
_pendingActivationContext
_pictureInPictureControllers
_visibilityCompoundAssertion
_currentViewControllerPiP
_currentViewControllerFullScreen
_previousViewControllerFullScreen
_swappingToFullScreenViewController
_fullScreenVisibilityAssertion
_restorationWatchdog
_stateDumpCaptureHandle
enabled
TB,R,N,GisEnabled,V_enabled
T@"PBUISystemHomeServiceCameraActivationContext",R,N,V_pendingActivationContext
T@"NSMapTable",R,N,V_pictureInPictureControllers
T@"BSCompoundAssertion",R,N,V_visibilityCompoundAssertion
T@"TVHMFullScreenCameraViewController",R,N,V_currentViewControllerPiP
T@"TVHMFullScreenCameraViewController",R,N,V_currentViewControllerFullScreen
T@"TVHMFullScreenCameraViewController",R,N,V_previousViewControllerFullScreen
T@"TVHMFullScreenCameraViewController",R,N,V_swappingToFullScreenViewController
T@"<BSInvalidatable>",R,N,V_fullScreenVisibilityAssertion
T@"BSWatchdog",R,N,V_restorationWatchdog
T@"<BSInvalidatable>",R,N,V_stateDumpCaptureHandle
T@"<TVSHUICameraViewControllerManagerDelegate>",R,W,N,V_delegate
accessoryIdentifier
bs_firstObjectPassingTest:
firstObject
role
isEqualToString:
configurationWithName:sessionRole:
setDelegateClass:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
sharedInstance
reloadHomeConfiguration
localAccessory
home
hmHome
_fetchInitialCameraItemsWithHome:
willChangeValueForKey:
initWithDelegate:sourceItem:
didChangeValueForKey:
setIdentifier:
reloadAndUpdateAllItemsFromSenderSelector:
_cameraItemManager
T@"HFItemManager",R,N,V_cameraItemManager
TVSHUICameraItemManager
TVSHUICameraRootViewController
TVSHUICameraViewControllerManagerDelegate
NSObject
TVHMCameraContentViewTransitionContainer
TVSHUICameraWindowSceneDelegate
TVSHUICameraRootViewControllerDelegate
PBUISystemHomeServiceCameraWindowSceneDelegate
UIWindowSceneDelegate
UISceneDelegate
TVSHUICameraViewControllerManager
TVHMFullScreenCameraViewControllerDelegate
TVHMPIPUserInterfaceRestoring
TVSystemHomeUIServiceAppDelegate
UIApplicationDelegate
TVSystemHomeUIServiceApplication
B16@0:8
@16@0:8
@24@0:8@16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v32@0:8@16@24
v28@0:8@16B24
v24@0:8@16
@"NSArray"24@0:8@"TVSHUICameraViewControllerManager"16
v40@0:8@"TVSHUICameraViewControllerManager"16@"UIViewController"24@?<v@?>32
v32@0:8@"TVSHUICameraViewControllerManager"16@"UIViewController"24
v28@0:8@"TVSHUICameraViewControllerManager"16B24
v32@0:8@"TVSHUICameraViewControllerManager"16@"NSSet"24
v24@0:8@"TVSHUICameraViewControllerManager"16
v16@0:8
@"TVHMCameraContentView"16@0:8
v24@0:8@?16
v48@0:8@16@24@32^v40
@"<TVSHUICameraRootViewControllerDelegate>"
@"PBUISystemHomeServiceCameraWindowScene"
@"HFItemManager"
@"NAFuture"
@"TVSHUICameraViewControllerManager"
@"<BSInvalidatable>"
v32@0:8@16@?24
v32@0:8@"TVSHUICameraRootViewController"16@?<v@?>24
v24@0:8@"TVSHUICameraRootViewController"16
v40@0:8@16@24@32
v40@0:8@"UIScene"16@"UISceneSession"24@"UISceneConnectionOptions"32
v24@0:8@"UIScene"16
v32@0:8@"UIScene"16@"NSSet"24
@"NSUserActivity"24@0:8@"UIScene"16
v32@0:8@"UIScene"16@"NSUserActivity"24
v32@0:8@"UIScene"16@"NSString"24
v40@0:8@"UIScene"16@"NSString"24@"NSError"32
v48@0:8@16@24q32@40
v48@0:8@"UIWindowScene"16@"<UICoordinateSpace>"24q32@"UITraitCollection"40
v40@0:8@"UIWindowScene"16@"UIApplicationShortcutItem"24@?<v@?B>32
v32@0:8@"UIWindowScene"16@"CKShareMetadata"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
v32@0:8@"PBUISystemHomeServiceCameraWindowScene"16@"PBUISystemHomeServiceCameraActivationContext"24
@"UIWindow"
@"TVSHUICameraRootViewController"
v52@0:8@16@24@32B40@?44
v52@0:8@"TVHMFullScreenCameraViewController"16@"NSUUID"24@"TVHMCameraContentView"32B40@?<v@?>44
B24@0:8@"TVHMFullScreenCameraViewController"16
v40@0:8@"TVHMFullScreenCameraViewController"16@"TVHMAllCamerasFullScreenViewController"24@?<v@?>32
v24@0:8@"UIViewController"16
B24@0:8@"UIViewController"16
v32@0:8@16q24
@"<TVSHUICameraViewControllerManagerDelegate>"
@"PBUISystemHomeServiceCameraActivationContext"
@"NSMapTable"
@"BSCompoundAssertion"
@"TVHMFullScreenCameraViewController"
@"BSWatchdog"
B32@0:8@16@24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
@32@0:8@16@24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@
333333
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>HomeKit</key>
<true/>
<key>com.apple.appletv.pbs.homeui-service.read-write</key>
<true/>
<key>com.apple.appletv.pbs.picture-in-picture-service-access</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.developer.homekit.background-mode</key>
<true/>
<key>com.apple.private.homekit</key>
<true/>
<key>com.apple.private.homekit.allow-secure-access</key>
<true/>
<key>com.apple.private.homekit.cameraclips</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceWillow</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.PineBoardServices</string>
</array>
</dict>
</plist>
B16@?0@"HMAccessoryProfile"8
PBUISystemHomeServiceCameraWindowScene
Invalid condition not satisfying: %@
_bs_assert_object != nil
TVSHUICameraRootViewController.m
[_bs_assert_object isKindOfClass:PBUISystemHomeServiceCameraWindowSceneClass]
cameraItemManager
v16@?0@"NSNotification"8
v16@?0@"NSSet"8
v16@?0@"NSError"8
Fullscreen
UIWindowScene
TVSHUICameraWindowSceneDelegate.m
[_bs_assert_object isKindOfClass:UIWindowSceneClass]
SceneConnection
viewController == _rootViewController
v8@?0
v16@?0@"BSActionResponse"8
BSAction
[_bs_assert_object isKindOfClass:BSActionClass]
Visibility
v16@?0@"<BSCompoundAssertionState>"8
@8@?0
TVHMFullScreenCameraViewController
v12@?0B8
[self isEnabled]
TVSHUICameraViewControllerManager.m
AddChildVC
PIPTransition
RestorationWatchdog
isEnabled
currentViewControllerPiP
currentViewControllerFullScreen
fullScreenVisibilityAssertion
completion != ((void *)0)
B16@?0@"HFCameraItem"8
only Camera SceneSessionRole is supported
TVSystemHomeUIServiceAppDelegate.m
localAccessory
sharedPineBoardServicesPreferences
pbs_homeKitCamerasFilter
pbs_homeKitDisabledCameras
setWithArray:
_isFilteringToFavoriteCameras
_disabledCameraIdentifiers
initWithHome:
hf_shouldShowInFavorites
uniqueIdentifier
UUIDString
containsObject:
setFilter:
arrayWithObjects:count:
_buildItemProvidersForHome:
stringWithFormat:
UTF8String
initWithNibName:bundle:
initWithDelegate:
sharedApplication
addObserver:forKeyPath:options:context:
defaultCenter
mainQueue
cameraViewControllerManager
startPictureInPictureFromFullscreen
addObserverForName:object:queue:usingBlock:
removeObserver:forKeyPath:
invalidate
dealloc
viewDidLoad
isFinished
activate
presentCameraWithContext:
firstFastUpdateFuture
_itemManagerDidCompleteInitialLoad
addSuccessBlock:
_notifyDelegateRequestDismissal
addFailureBlock:
isViewLoaded
cameraRootViewController:didPrepareForPresentationWithCompletion:
cameraRootViewControllerRequestsDismissal:
displayedItemsInSection:
bs_addChildViewController:
_notifyDelegateDidPrepareForPresentationWithCompletion:
requestVisibilityForReason:
bs_removeChildViewController:
view
isDescendantOfView:
removeFromSuperview
bounds
setFrame:
addSubview:
count
activeStateWithCameraIdentifiers:
inactiveState
setStreamState:
showCameraView
transitionCameraContentView
cameraItemManager
_fetchInitialCameraItemsWithItemManager:
observeValueForKeyPath:ofObject:change:context:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
cameraItemsForCameraViewControllerManager:
cameraViewControllerManager:addChildViewController:completion:
cameraViewControllerManager:removeChildViewController:
cameraViewControllerManager:restoreChildViewController:
cameraViewControllerManager:didUpdateFullscreenState:
cameraViewControllerManager:didUpdateActiveCameraIdentifiers:
cameraViewControllerManagerRequestsDismissal:
initWithWindowScene:
delegate
setDelegate:
windowScene
itemManager
itemManagerReloadFuture
visibilityAssertion
.cxx_destruct
_delegate
_windowScene
_itemManager
_itemManagerReloadFuture
_cameraViewControllerManager
_visibilityAssertion
T@"PBUISystemHomeServiceCameraWindowScene",R,W,N,V_windowScene
T@"HFItemManager",R,N,V_itemManager
T@"NAFuture",R,N,V_itemManagerReloadFuture
T@"TVSHUICameraViewControllerManager",R,N,V_cameraViewControllerManager
T@"<BSInvalidatable>",R,N,V_visibilityAssertion
T@"<TVSHUICameraRootViewControllerDelegate>",W,N,V_delegate
pbui_cameraActivationContext
setRootViewController:
makeKeyAndVisible
_didPrepareForPresentationWithCompletion:
_dismissScene
responderWithHandler:
initWithInfo:responder:
_sendAction:
_FBSScene
setWithObject:
sendActions:
scene:willConnectToSession:options:
sceneDidDisconnect:
sceneDidBecomeActive:
sceneWillResignActive:
sceneWillEnterForeground:
sceneDidEnterBackground:
scene:openURLContexts:
stateRestorationActivityForScene:
scene:restoreInteractionStateWithUserActivity:
scene:willContinueUserActivityWithType:
scene:continueUserActivity:
scene:didFailToContinueUserActivityWithType:error:
scene:didUpdateUserActivity:
windowScene:didUpdateCoordinateSpace:interfaceOrientation:traitCollection:
windowScene:performActionForShortcutItem:completionHandler:
windowScene:userDidAcceptCloudKitShareWithMetadata:
window
setWindow:
T@"UIWindow",&,N
cameraWindowScene:didReceiveCameraActivationContext:
rootViewController
sceneVisibilityAssertion
_window
_rootViewController
_sceneVisibilityAssertion
T@"TVSHUICameraRootViewController",R,W,N,V_rootViewController
T@"<BSInvalidatable>",R,N,V_sceneVisibilityAssertion
T@"UIWindow",&,N,V_window
init
weakToStrongObjectsMapTable
_updateVisibilityState
assertionWithIdentifier:stateDidChangeHandler:
_stateDump
_presentCameraWithContext:source:
_startRestorationVisibilityWatchdogIfNeeded
topMostFullScreenCameraViewController
_startPictureinPictureUsingFullScreenViewController:source:
cameraViewController
cameraItem
_createFullScreenViewControllerForCameraItem:
_addChildViewController:completion:
dismissPictureInPictureViewControllerFromFullScreen:
_dismissIfNecessary
willAnimatePictureInPictureSwap
_removeAllAnimationsFromView:
presentedViewController
_removeChildViewController:
_restoreChildViewController:
acquireForReason:
_didUpdatePictureInPictureState
dismissViewControllerAnimated:completion:
setAlpha:
animateWithDuration:animations:completion:
isEnabled
_cameraItems
activationReason
cameraContentView
fullScreenStyle
applyStyle:
cameraView
setWantsCameraViewControls:animated:
setCentered:
endDisableExternalUpdatesForVisibleReason
reloadControlProviders:
initWithCameraItem:
loadViewIfNeeded
homeKitObject
initWithCameraItems:focusedIdentifier:cameraViewController:
setDismissalDelegate:
setFullScreenContainer:
setShouldTakeOwnershipOfExistingStream:
setStreamPreferences:
focusSystemForEnvironment:
pictureInPictureStyle
_pictureInPictureControllerForViewController:
setInterfaceRestorer:
didEnterPictureInPicture
requestFocusUpdateToEnvironment:
startPIPWithViewController:withCompletion:
objectForKey:
setObject:forKey:
initWithTimeout:queue:completion:
start
isActive
dictionaryWithObjects:forKeys:count:
layer
removeAllAnimations
subviews
countByEnumeratingWithState:objects:count:
initWithCapacity:
cameraIdentifier
bs_safeAddObject:
viewControllerDidRequestDismissal:focusedIdentifier:focusedContentView:animated:completion:
viewControllerShouldDismissForAllCamerasButton:
viewController:presentedAllCamerasViewControllerWillPresentFullScreenCamera:completion:
prepareForPictureInPictureSwapAnimation
restorePictureInPictureViewControllerToFullScreen:
dismissPictureInPictureViewController:
pendingActivationContext
pictureInPictureControllers
visibilityCompoundAssertion
currentViewControllerPiP
currentViewControllerFullScreen
previousViewControllerFullScreen
swappingToFullScreenViewController
fullScreenVisibilityAssertion
restorationWatchdog
stateDumpCaptureHandle
_enabled
_pendingActivationContext
_pictureInPictureControllers
_visibilityCompoundAssertion
_currentViewControllerPiP
_currentViewControllerFullScreen
_previousViewControllerFullScreen
_swappingToFullScreenViewController
_fullScreenVisibilityAssertion
_restorationWatchdog
_stateDumpCaptureHandle
enabled
TB,R,N,GisEnabled,V_enabled
T@"PBUISystemHomeServiceCameraActivationContext",R,N,V_pendingActivationContext
T@"NSMapTable",R,N,V_pictureInPictureControllers
T@"BSCompoundAssertion",R,N,V_visibilityCompoundAssertion
T@"TVHMFullScreenCameraViewController",R,N,V_currentViewControllerPiP
T@"TVHMFullScreenCameraViewController",R,N,V_currentViewControllerFullScreen
T@"TVHMFullScreenCameraViewController",R,N,V_previousViewControllerFullScreen
T@"TVHMFullScreenCameraViewController",R,N,V_swappingToFullScreenViewController
T@"<BSInvalidatable>",R,N,V_fullScreenVisibilityAssertion
T@"BSWatchdog",R,N,V_restorationWatchdog
T@"<BSInvalidatable>",R,N,V_stateDumpCaptureHandle
T@"<TVSHUICameraViewControllerManagerDelegate>",R,W,N,V_delegate
accessoryIdentifier
bs_firstObjectPassingTest:
firstObject
role
isEqualToString:
configurationWithName:sessionRole:
setDelegateClass:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
sharedInstance
reloadHomeConfiguration
localAccessory
home
hmHome
_fetchInitialCameraItemsWithHome:
willChangeValueForKey:
initWithDelegate:sourceItem:
didChangeValueForKey:
setIdentifier:
reloadAndUpdateAllItemsFromSenderSelector:
_cameraItemManager
T@"HFItemManager",R,N,V_cameraItemManager
TVSHUICameraItemManager
TVSHUICameraRootViewController
TVSHUICameraViewControllerManagerDelegate
NSObject
TVHMCameraContentViewTransitionContainer
TVSHUICameraWindowSceneDelegate
TVSHUICameraRootViewControllerDelegate
PBUISystemHomeServiceCameraWindowSceneDelegate
UIWindowSceneDelegate
UISceneDelegate
TVSHUICameraViewControllerManager
TVHMFullScreenCameraViewControllerDelegate
TVHMPIPUserInterfaceRestoring
TVSystemHomeUIServiceAppDelegate
UIApplicationDelegate
TVSystemHomeUIServiceApplication
B16@0:8
@16@0:8
@24@0:8@16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v32@0:8@16@24
v28@0:8@16B24
v24@0:8@16
@"NSArray"24@0:8@"TVSHUICameraViewControllerManager"16
v40@0:8@"TVSHUICameraViewControllerManager"16@"UIViewController"24@?<v@?>32
v32@0:8@"TVSHUICameraViewControllerManager"16@"UIViewController"24
v28@0:8@"TVSHUICameraViewControllerManager"16B24
v32@0:8@"TVSHUICameraViewControllerManager"16@"NSSet"24
v24@0:8@"TVSHUICameraViewControllerManager"16
v16@0:8
@"TVHMCameraContentView"16@0:8
v24@0:8@?16
v48@0:8@16@24@32^v40
@"<TVSHUICameraRootViewControllerDelegate>"
@"PBUISystemHomeServiceCameraWindowScene"
@"HFItemManager"
@"NAFuture"
@"TVSHUICameraViewControllerManager"
@"<BSInvalidatable>"
v32@0:8@16@?24
v32@0:8@"TVSHUICameraRootViewController"16@?<v@?>24
v24@0:8@"TVSHUICameraRootViewController"16
v40@0:8@16@24@32
v40@0:8@"UIScene"16@"UISceneSession"24@"UISceneConnectionOptions"32
v24@0:8@"UIScene"16
v32@0:8@"UIScene"16@"NSSet"24
@"NSUserActivity"24@0:8@"UIScene"16
v32@0:8@"UIScene"16@"NSUserActivity"24
v32@0:8@"UIScene"16@"NSString"24
v40@0:8@"UIScene"16@"NSString"24@"NSError"32
v48@0:8@16@24q32@40
v48@0:8@"UIWindowScene"16@"<UICoordinateSpace>"24q32@"UITraitCollection"40
v40@0:8@"UIWindowScene"16@"UIApplicationShortcutItem"24@?<v@?B>32
v32@0:8@"UIWindowScene"16@"CKShareMetadata"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
v32@0:8@"PBUISystemHomeServiceCameraWindowScene"16@"PBUISystemHomeServiceCameraActivationContext"24
@"UIWindow"
@"TVSHUICameraRootViewController"
v52@0:8@16@24@32B40@?44
v52@0:8@"TVHMFullScreenCameraViewController"16@"NSUUID"24@"TVHMCameraContentView"32B40@?<v@?>44
B24@0:8@"TVHMFullScreenCameraViewController"16
v40@0:8@"TVHMFullScreenCameraViewController"16@"TVHMAllCamerasFullScreenViewController"24@?<v@?>32
v24@0:8@"UIViewController"16
B24@0:8@"UIViewController"16
v32@0:8@16q24
@"<TVSHUICameraViewControllerManagerDelegate>"
@"PBUISystemHomeServiceCameraActivationContext"
@"NSMapTable"
@"BSCompoundAssertion"
@"TVHMFullScreenCameraViewController"
@"BSWatchdog"
B32@0:8@16@24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
@32@0:8@16@24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@
333333
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>HomeKit</key>
<true/>
<key>com.apple.appletv.pbs.homeui-service.read-write</key>
<true/>
<key>com.apple.appletv.pbs.picture-in-picture-service-access</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.developer.homekit.background-mode</key>
<true/>
<key>com.apple.private.homekit</key>
<true/>
<key>com.apple.private.homekit.allow-secure-access</key>
<true/>
<key>com.apple.private.homekit.cameraclips</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceWillow</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.PineBoardServices</string>
</array>
</dict>
</plist>
