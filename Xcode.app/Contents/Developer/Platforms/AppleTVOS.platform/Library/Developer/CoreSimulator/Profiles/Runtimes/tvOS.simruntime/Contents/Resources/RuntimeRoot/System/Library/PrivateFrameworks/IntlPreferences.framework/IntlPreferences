zxx_
AppleLanguages
AppleLocale
AppleLanguagesSchemaVersion
AppleLanguagesDidMigrate
PreferredLanguages
AppleUserLanguages
platform
TQ,N,V_platform
previousVersion
T@"NSString",C,N,V_previousVersion
currentVersion
T@"NSString",C,N,V_currentVersion
previousSchemaVersion
TQ,N,V_previousSchemaVersion
-[ISRootMigrator performMigration]
-[ISRootMigrator updateAppleLanguagesSchemaVersionToCurrent]
-[ISRootMigrator performMigrationForUserPreferences:systemPreferences:]
10.12
-[ISRootMigrator appendRegionalVariantsToLanguageIdentifiers:regionCode:]
-[ISRootMigrator importPreferredLanguagesForPreferences:]
10.9
10.10
-[ISRootMigrator importPreferredLanguages_macOS_10_9_forPreferences:]
isErase
TB,N,V_isErase
v8@?0
InternationalSupportMigrator
com.apple.InternationalSupport
<%@: %p, identifier: %@>
identifier
T@"NSString",&,N,V_identifier
name
T@"NSString",&,N,V_name
localizedStringForName
T@"NSString",&,N,V_localizedStringForName
minimizedLanguage
T@"IPLanguage",R,N
/System/Library/Frameworks/UIKit.framework/UIKit
UIKeyboardInputModeController
UIKeyboardPreferencesController
UIKeyboardInputModeGetIdentifierWithKeyboardLayouts
UIKeyboardInputModeGetBaseLanguage
UIKeyboardCanonicalInputModeName
UIKeyboardInputModeGetLanguageWithRegion
UIKeyboardInputModeGetNormalizedIdentifier
UIKeyboardInputMode_intl
10.15
Arab
Aran
v32@?0@"NSString"8Q16^B24
Hant
Qaag
my-Qaag
Zawgyi-One
NSPersonNamePreferencesDidChangeNotification
NSPersonNameDefaultDisplayNameOrder
NSPersonNameDefaultShortNameEnabled
NSPersonNameDefaultShortNameFormat
NSPersonNameDefaultShouldPreferNicknamesPreference
.GlobalPreferences
nameOrder
shortNameFormat
preferNicknames
shortNameEnabled
unset
givenFirst
familyFirst
givenNameFamilyInitial
familyNameGivenInitial
givenOnly
familyOnly
preferNicknamesEnabled
preferNicknamesDisabled
shortNamesEnabled
shortNamesDisabled
com.apple.PeoplePicker
personNameOrdering
personShortNameFormat
personShortNamePreferNicknames
personShortNameFormatEnabled
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
com.apple.AddressBook
ABNameDisplay
ABShortNameStyle
ABShortNamePrefersNickname
v32@?0@"NSString"8@"NSNumber"16^B24
LanguageCodeExceptions
plist
calendar
LunarCalendars
chinese
hebrew
islamic
islamic-civil
islamic-
v24@?0@"NSString"8^B16
zh-Hans
zh-Hant
zh-HK
hebr
numbers
LocalizedLunarCalendar
strings
default
B32@?0@8Q16^B24
native
traditional
finance
latn
ForceCapitalizationInLanguageLists
%@-%@
root
LastResort
Script-%d
B16@?0@"NSArray"8
B32@?0@"NSString"8Q16^B24
com.apple.
com.apple.security.exception.shared-preference.read-write
com.apple.security.exception.shared-preference.read-only
com.apple.security.temporary-exception.shared-preference.read-write
com.apple.security.temporary-exception.shared-preference.read-only
com.apple.Preferences.LanguageChooser.termination
[%{public}@]: Error obtaining termination assertion on %{public}@
v20@?0B8@"NSError"12
v16@?0@"NSError"8
CTFontCreateUIFontForLanguage
/System/Library/Frameworks/CoreText.framework/CoreText
CTFontCreateForString
CTFontCopyName
kCTFontPostScriptNameKey
SELF beginswith[cld] %@
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
v32@?0@8Q16^B24
-[IPLanguageListGenerator systemDisplayLanguage]
pt-BR
q24@?0@8@16
q24@?0@"IPLanguage"8@"IPLanguage"16
+[IPLanguageListGenerator effectiveSystemLanguagesWithUnsupportedVariant:forPreferredLanguages:]
en-US
preferredLanguages
T@"NSArray",R,N,V_preferredLanguages
preferredLocale
T@"NSLocale",R,N,V_preferredLocale
systemLanguages
T@"NSArray",R,N,V_systemLanguages
systemDisplayLanguage
T@"NSString",R,N,V_systemDisplayLanguage
RenderableUILanguages
AppleDatePreferencesChangedNotification
AppleTimePreferencesChangedNotification
AppleNumberPreferencesChangedNotification
AppleICUForce12HourTime
AppleICUForce24HourTime
KeyboardLastUsed
com.apple.Preferences
com.apple.purplebuddy
Mymr
ENCODING
LocalizedSelectableScripts
SCRIPT
ENCODING_COLON
SCRIPT_COLON
ZAWGYI_EXPLANATION_TEXT
languageIdentifier
T@"NSString",R,N
selectableScriptCodes
T@"NSArray",R,C
optionNameForSelectableScripts
optionNameWithColonForSelectableScripts
explanationTextForSelectableScripts
base
normalizedLocalizations
@(#)PROGRAM:IntlPreferences  PROJECT:IntlPreferences-301.4
fffff
%s: previousVersion='%{public}@', currentVersion='%{public}@', isErase=%d
%s: failed to retrieve previousVersion or currentVersion; bailing...
%s: oldPreferences = %{public}@, migratedPreferences = %{public}@
%s: [NSLocale setPreferredLanguages:@[ %{public}@ ]]
%s: CFPreferencesSetValue(%{public}@ 
 %{public}@)
%s: AppleLanguagesSchemaVersion = %lu
%s: Preferences before running preferences migrators: %{public}@
%s: Preferences after running <%{public}@>: %{public}@
%s: AppleLanguages changed to %{public}@. Writing to disk.
%s: AppleLocale changed to %{public}@. Writing to disk.
%s: AppleLanguagesSchemaVersion is up to date.
%s: AppleLanguages (%{public}@) or AppleLocale (%{public}@) is nil. Skipping preferences migrators.
%s: Updating AppleLanguagesSchemaVersion to %lu.
%s: (1) previousVersion=%{public}@, currentVersion=%{public}@ 
 Performing New User Account Migration
%s: (1) System AppleLanguages= [ %{public}@ ]
%s: (1) System AppleLocale= %{public}@
%s: (1) previousVersion=%{public}@, currentVersion=%{public}@, upgradeThreshold=%{public}@
%s: (1) { %{public}@, %{public}@, %{public}@ } qualifies for AppleLanguages migration
%s: (1) `regionCode` is nil/empty; skipping appendRegionalVariantsToLanguageIdentifiers:regionCode:
%s: (1) current AppleLanguages is nil/empty; skipping migration
%s: (2) AppleLanguages = [ %{public}@ ] qualifies for AppleLanguages repair
%s: (2) AppleLanguages = [ %{public}@ ] 
 [ %{public}@ ]
%s: (3) AppleLocale = %{public}@
%s: (3) AppleLocale = %{public}@ 
 %{public}@
%s: (3) new AppleLocale is nil/empty; skipping migration
%s: (3) current AppleLanguages or AppleLocale is nil/empty; skipping migration
%s: regionCode=%{public}@, preferredLanguages = [ %{public}@ ] 
 [ %{public}@ ]
%s: Possible upgrade from macOS 10.9
%s: Upgrade from macOS 10.9
%s: Possible upgrade from iOS 8
%s: Upgrade from iOS 8; preferredLanguages = [ %{public}@ ] 
 [ %{public}@ ]
%s: Upgrade from pre-{ macOS 10.9, iOS 8 }; preferredLanguages = [ %{public}@ ] 
 [ %{public}@ ]
%s: Upgrade from post-{ macOS 10.9, iOS 8 }; preferredLanguages = [ %{public}@ ] 
 [ %{public}@ ]
%s: preferredLanguagesIndex=%u
%s: Normalizing %{public}@ 
 %{public}@
%s: Upgrade from macOS 10.9; preferredLanguages = [ %{public}@ ] 
 [ %{public}@ ]
%s: systemDisplayLanguage is nil.
%s: effectiveSystemLanguages is empty. Falling back to [en-US].
Setup
ISMigrator
ISRootMigrator
IPLanguage
IPScriptAdditions
IP_pa_Arab_to_pa_Aran_migrator
IP_HK_MO_yue_Hant_migrator
IP_Zawgyi_migrator
IPDictionaryExtensions
IPiOSABNamePreferenceInfoProvider
IPNamePreferenceInfoProvider
NSObject
IPOSXABNamePreferenceInfoProvider
IPFoundationNamePreferenceInfoProvider
NSPersonNameComponentsFormatterPreferences
IPLocalizationSwitcherProtocol
IntlUtility
IntlPreferencesAdditions
IPLanguageListGenerator
_languagesForMultilingualSetupWithKeyboardsIDs:
count
countryCode
length
stringByAppendingString:
localeWithLocaleIdentifier:
languageIdentifier
baseLanguageFromLanguage:
containsObject:
baseSystemLanguages
arrayByExcludingObjectsInArray:
_requiresMultilingualSetupWithKeyboardIDs:
orderedSet
canonicalLanguageIdentifierFromString:
addObject:
localeIdentifier
componentsFromLocaleIdentifier:
objectForKey:
_subdivisionCodeFromSubdivisionTag:restrictedToRegionCode:
languagesForRegion:subdivision:withThreshold:filter:
addObjectsFromArray:
array
uppercaseString
substringToIndex:
substringFromIndex:
isEqualToString:
requiresMultilingualSetup
languagesForMultilingualSetup
defaultLanguagesForMultilingualSetup
currentPlatform
migratorFromVersion:toVersion:platform:
setPlatform:
setPreviousVersion:
setCurrentVersion:
setPreviousSchemaVersion:
platform
previousVersion
compare:options:
migratorFromVersion:toVersion:
migratorFromSchemaVersion:
performMigrationForPreferences:
performMigrationForUserPreferences:systemPreferences:
previousVersionIsOlderThanMacOS:iOS:watchOS:tvOS:
.cxx_destruct
currentVersion
previousSchemaVersion
_platform
_previousVersion
_currentVersion
_previousSchemaVersion
isErase
updateAppleLanguagesSchemaVersionToCurrent
dictionary
arrayWithObjects:count:
setWithArray:
countByEnumeratingWithState:objects:count:
setObject:forKeyedSubscript:
allKeys
objectForKeyedSubscript:
isEqual:
componentsJoinedByString:
setPreferredLanguages:
setLocaleOnly:
unsignedIntegerValue
dictionaryWithObjects:forKeys:count:
isEqualToArray:
numberWithUnsignedInteger:
mutableCopy
importPreferredLanguagesForPreferences:
appendRegionalVariantsToLanguageIdentifiers:regionCode:
firstObject
languageCode
setWithCapacity:
preferredLocalizationsFromArray:forPreferences:
languageIdentifierFromIdentifier:withRegion:
arrayByAddingObject:
canonicalLocaleIdentifier:withNewLanguageIdentifier:
importPreferredLanguages_macOS_10_9_forPreferences:
objectAtIndexedSubscript:
normalizedLanguageIDFromString:
subarrayWithRange:
setArray:
setObject:atIndexedSubscript:
performMigration
setIsErase:
_isErase
languageWithIdentifier:normalize:
setIdentifier:
forceCapitalizationInLanguageLists
localizedStringForLanguage:context:
setName:
deviceLanguage
setLocalizedStringForName:
identifier
hash
stringWithFormat:
currentLocale
baseLanguageIdentifierFromIdentifier:
languageWithIdentifier:
arrayWithCapacity:
IPLanguagesWithLanguages:normalize:
description
minimizedLanguage
name
localizedStringForName
_identifier
_name
_localizedStringForName
localeIdentifierFromComponents:
localeIdentifierWithUpdatedScript:
enumerateObjectsUsingBlock:
canonicalLocaleIdentifierFromString:
insertObject:atIndex:
migrateToUseZawgyiForPreferences:
allValues
dictionaryWithObjects:forKeys:
invertedDictionary
nativeKeyNameToCanonicalKeyName
canonicalKeyToValueIdentifierToNumericValueMap
numberWithInt:
domain
canonicalNameToNativeKeyName
valueIdentifierToValueMapFromCanonicalKey:
valueToValueIdentifierMapFromCanonicalKey:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
numberWithInteger:
_syncronizeGizmoDefaultWithKey:value:
_postPreferencesChangedNotification
_defaultDisplayNameOrder
_setPreference:toValue:usingExistingGetter:
_defaultShortNameFormat
_shouldPreferNicknames
_shortNameIsEnabled
infoClassFromPreferencesSource:
enumerateKeysAndObjectsUsingBlock:
setDefaultDisplayNameOrder:
setShortNameFormat:
setPreferNicknamesDefault:
setShortNameIsEnabled:
mappedPreferencesForPreferences:from:to:
supportedLanguages
allObjects
systemLanguages
addLikelySubtagsForLocaleIdentifier:
removeObjectForKey:
stdLanguageIDs
bundleForClass:
URLForResource:withExtension:
dictionaryWithContentsOfURL:
arrayWithArray:
indexOfObject:
objectAtIndex:
getCharacters:range:
UTF8String
capitalizedStringWithLocale:
dictionaryWithObjectsAndKeys:
stringWithUTF8String:
arrayWithContentsOfURL:
hasPrefix:
enumeratePreferredCalendarsForLocaleID:usingBlock:
replaceObjectAtIndex:withObject:
lunarCalendarsForLocaleID:
localeForCalendarID:andLocale:
dictionaryWithDictionary:
removeObjectsForKeys:
addEntriesFromDictionary:
preferredLanguages
isLunarCalendarDefaultOnForLanguage:locale:
preferredLunarCalendarForLocaleID:
defaultCalendarForLocaleID:
supportedCalendars
calendarIdentifier
year
calendar
month
yearlessYearForMonth:withCalendar:
setEra:
setYear:
localizedStringForKey:value:table:
localizations
arrayWithObject:
pathForResource:ofType:inDirectory:forLocalization:
dictionaryWithContentsOfFile:
numberingSystemsForLocaleID:
indexesOfObjectsPassingTest:
objectsAtIndexes:
setLocale:
stringFromNumber:
displayNameForNumberingSystemWithIdentifier:localeIdentifier:short:
numberingSystemForLocaleID:
initWithCapacity:
displayNameForLanguage:displayLanguage:context:
capitalizeFirstWordOfName:accordingToLanguage:
mainBundle
preferredLocalizations
uppercaseLetterCharacterSet
rangeOfCharacterFromSet:
UDisplayContextForIUDisplayNameContext:
ICUdisplayNameForLanguage:capitalization:
stringWithCharacters:length:
parentLocaleIdentifierForIdentifier:
preferredLanguagesForRegionWithoutFiltering:
stringByReplacingOccurrencesOfString:withString:
exemplarForLanguage:
displayNameForLanguage:context:displayLanguage:
formattingContextFromIUDisplayNameContext:
displayNameForRegion:displayLanguage:capitalization:short:
displayNameForRegion:displayLanguage:context:short:
applicationProxyForIdentifier:
dataContainerURL
path
_globalPreferredLanguages
bundleURL
bundleWithURL:
normalizedLocalizations
firstIndex
removeObjectAtIndex:
indexGreaterThanIndex:
languageFromLanguage:byReplacingRegion:
arrayByAddingObjectsFromArray:
_proposedOverrideLanguageFromLanguage:forLocalizations:preferredLanguages:regionCode:
orderedSetWithObject:
bundleIdentifier
entitlementValuesForKeys:
rawValues
_setPreferredLanguage:forBundleID:
initWithBundleIdentifier:efficacy:name:withHandler:
invalidate
setPreferredLanguage:forBundleID:andRelaunchWithReply:
interfaceWithProtocol:
setRemoteObjectInterface:
resume
remoteObjectProxy
sharedIntlUtility
alternateContinentOfRegion:
localeForCalendarID:
isLunarCalendarDefaultOn
isYearlessDate:forCalendar:
setYearlessYear:forCalendar:
numberingSystemsFromArray:forLocaleID:
displayNameForNumberingSystemWithIdentifier:localeIdentifier:
shortDisplayNameForNumberingSystemWithIdentifier:localeIdentifier:
defaultNumberingSystemForLocaleID:
preferredLanguagesForRegion:
filterLanguageList:forRegion:fromLanguages:
preferredLanguagesFromLanguages:byAddingFallbacksForRegion:
restrictedCountryCodes
upgradeAppleLanguagesFrom:to:
preferredLanguageForBundleID:
setPreferredLanguage:forBundleID:
setPreferredLanguage:forBundleID:andRelaunchWithCompletion:
displayNameForLabelForLunarCalendarID:displayLanguage:
languageList
displayNameForDialect:context:displayLanguage:
displayNameForLocale:displayLanguage:capitalization:short:
canRenderLanguage:
localizedNameForScript:
localizedLanguageForLanguage:
displayNameForNormalizedLanguage:context:displayLanguage:
displayNameForRegion:displayLanguage:capitalization:
mBidiLanguagesArray
mBidiTestedLanguagesArray
copy
predicateWithFormat:
evaluateWithObject:
enumerateSubstringsInRange:options:usingBlock:
lowercaseString
filteredLanguagesBySearchString:
init
alloc
preferredLocale
initWithPreferredLanguages:preferredLocale:systemLanguages:
regionalVariantLanguagesForSystemLanguages
systemDisplayLanguage
regionalVariantLanguagesForBaseLanguage:
removeObjectsInArray:
removeObject:
renderableUILanguages
deviceLanguagesForChangingDeviceLanguage:
sortByLocalizedLanguage:
effectiveSystemLanguagesWithUnsupportedVariant:forPreferredLanguages:
localizedStandardCompare:
sortUsingComparator:
generator
preheat
otherLanguages
_systemDisplayLanguage
_preferredLanguages
_preferredLocale
_systemLanguages
canonicalLocaleIdentifierFromComponents:
availableLocaleIdentifiers
canonicalLanguageAndScriptCodeIdentifierForIdentifier:
renderableLanguagesFromList:
resetTimeFormat
validateLocale:
canonicalLocaleIdentifierWithValidCalendarForComponents:
updateShouldShowPreferredLanguages:
setLocaleAndResetTimeFormat:
boolValue
languageArrayAfterSettingLanguage:fallback:toLanguageArray:
sharedInputModeController
suggestedInputModesForCurrentLocale
enabled
normalizedEnabledInputModeIdentifiers
supportedInputModeIdentifiers
activeInputModeIdentifiers
sharedPreferencesController
saveInputModes:
_sanitizedLanguageIdentifierFromKeyboardLanguage:
registerPreferredLanguage:usage:confidence:
dictionaryWithCapacity:
localeByChangingLanguageTo:
selectableScriptCodes
optionNameForSelectableScripts
optionNameWithColonForSelectableScripts
explanationTextForSelectableScripts
deviceLanguageLocale
deviceLanguageIdentifier
supportedCJLanguageIdentifiers
renderableLocaleLanguages
setLocaleAfterLanguageChange:
setLocaleAfterRegionChange:
shouldShowPreferredLanguages
setLanguageToPreferredLanguages:fallback:
enableDefaultKeyboardForPreferredLanguages
registerPreferredLanguageForAddedKeyboardLanguage:
unregisterPreferredLanguageForKeyboardLanguage:
archivedPreferences
setArchivedPreferences:
displayNameForSelectableScriptCode:
ISOLanguageCodes
B24@0:8@16
B16@0:8
@24@0:8@16
@16@0:8
@32@0:8@16@24
Q16@0:8
@40@0:8@16@24Q32
@24@0:8Q16
B48@0:8@16@24@32@40
v16@0:8
v24@0:8Q16
v24@0:8@16
@"NSString"
v20@0:8B16
@28@0:8@16B24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSDictionary"16@0:8
@"NSDictionary"24@0:8@"NSString"16
v40@0:8@16q24:32
v24@0:8q16
v32@0:8@16q24
@40@0:8@16Q24Q32
v40@0:8@16@24@?32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@16@?24
B32@0:8@16@24
q32@0:8q16@24
v32@0:8@16@24
@36@0:8@16@24B32
i24@0:8Q16
@40@0:8@16@24@32
q24@0:8Q16
@48@0:8@16@24@32@40
@40@0:8@16Q24@32
@32@0:8@16^{ULocaleDisplayNames=}24
@44@0:8@16@24Q32B40
@20@0:8s16
@"NSMutableArray"
@28@0:8B16@20
@20@0:8B16
@"NSArray"
@"NSLocale"
